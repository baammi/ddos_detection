=============================================================================
========	BINARY ID :73495820cd7f1dd533f5ca7d3e41d948eb714abf==================================================
================================================================================
================================================================================
========	STRINGS SUMMARY : =====================================================
================================================================================
TOTAL STRINGS COUNT :273
SUPSCPECTED LINES COUNT :14
SUPSCPECTED STRINGS COUNT (DISTINCT) :12
SUPSCPECTED STRINGS WEIGHT :48
SUSPECT STRING SCORE : [48 / 150] 32%
USER AGENTS STRINGS COUNT :0
STATIC IPs STRINGS COUNT :0
DYNAMIC IPs STRINGS COUNT :0
================================================================================
========	STRINGS DETAILS : =====================================================
================================================================================
================================================================================
========	SUSPECTED STRINGS : =====================================================
================================================================================
connect
getpid
socket
kill
bind
inet_addr
fork
getppid
sigprocmask
 HTTP/1.1\r\nUser-Agent: 
\r\nHost: 
http
c/net/tcp
abcdefghijklmnopqrstuvw012345678
================================================================================
========	USER AGENTS STRINGS : =====================================================
================================================================================
================================================================================
========	STATIC IP ADRESSES : =====================================================
================================================================================
================================================================================
========	DYNAMIC IP MASKS : =====================================================
================================================================================
================================================================================
========	/proc FOLDER ACCESS : =====================================================
================================================================================
================================================================================
========	HISTORY TEMPERING : =====================================================
================================================================================
================================================================================
========	AUTOINSTALL COMMANDS : =====================================================
================================================================================
================================================================================
========	FUNCTIONS SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES			: 54872
+++TOTAL FUNCTIONS 			:123
+++LINES PER FUNCTION RATIO 	: 446.113821138211
+++SUSPECTED LINES COUNT 	: 633
+++SUSPECTED LINES RATIO 	: 1.15359381834087
================================================================================
========	WHILES SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES				: 54872
+++WHILE (TRUE) LINES			: 9196
+++WHILE (TRUE) LINES RATION		:16.7590027700831%
+++WHILE (TRUE) LOOPS COUNT		: 82
================================================================================
========	SYSTEM FILES SUMMARY : ================================================
================================================================================
    int32_t fd = open("/proc/net/tcp", oflag); // 0xf36c
    int32_t fd = open("/dev/watchdog", O_RDWR); // 0x101d0
        int32_t fd2 = open("/dev/misc/watchdog", O_RDWR); // 0x10560
================================================================================
========	IP PATTERNS SUMMARY : =================================================
================================================================================
================================================================================
========	SYSTEM CALLS SUMMARY : ================================================
================================================================================
================================================================================
========	FUNCTIONS LIST : =======================================================
================================================================================
FUNCTION_NAME                                     |ARGS|LENGH   |SUSPCET_INSTRC|WHILE_INSTRC|
----------------------------------------------------------------------------------------------
function_11624                                    |0   |2488    |117           |1890        |
----------------------------------------------------------------------------------------------
function_10168                                    |2   |982     |68            |343         |
----------------------------------------------------------------------------------------------
function_8f24                                     |4   |2152    |59            |1714        |
----------------------------------------------------------------------------------------------
function_e9cc                                     |4   |1062    |55            |434         |
----------------------------------------------------------------------------------------------
function_f808                                     |1   |971     |40            |570         |
----------------------------------------------------------------------------------------------
function_f29c                                     |1   |998     |37            |524         |
----------------------------------------------------------------------------------------------
function_c480                                     |4   |666     |26            |254         |
----------------------------------------------------------------------------------------------
function_10e4c                                    |1   |865     |22            |458         |
----------------------------------------------------------------------------------------------
function_db98                                     |4   |491     |19            |111         |
----------------------------------------------------------------------------------------------
function_d454                                     |4   |625     |13            |228         |
----------------------------------------------------------------------------------------------
function_ae30                                     |4   |760     |13            |231         |
----------------------------------------------------------------------------------------------
function_b084                                     |1   |489     |12            |0           |
----------------------------------------------------------------------------------------------
function_cce0                                     |4   |641     |12            |243         |
----------------------------------------------------------------------------------------------
function_de7c                                     |4   |604     |12            |153         |
----------------------------------------------------------------------------------------------
function_e508                                     |4   |525     |12            |136         |
----------------------------------------------------------------------------------------------
function_b5e8                                     |4   |601     |11            |208         |
----------------------------------------------------------------------------------------------
function_bd64                                     |4   |585     |11            |197         |
----------------------------------------------------------------------------------------------
function_ff68                                     |0   |389     |10            |0           |
----------------------------------------------------------------------------------------------
function_13e90                                    |3   |547     |7             |70          |
----------------------------------------------------------------------------------------------
function_10bc0                                    |1   |347     |6             |0           |
----------------------------------------------------------------------------------------------
function_13c54                                    |0   |361     |5             |0           |
----------------------------------------------------------------------------------------------
function_13e00                                    |3   |558     |4             |40          |
----------------------------------------------------------------------------------------------
function_ad40                                     |6   |404     |4             |13          |
----------------------------------------------------------------------------------------------
__udivsi3                                         |2   |704     |4             |212         |
----------------------------------------------------------------------------------------------
__modsi3                                          |2   |809     |4             |380         |
----------------------------------------------------------------------------------------------
__umodsi3                                         |2   |744     |4             |354         |
----------------------------------------------------------------------------------------------
function_13d7c                                    |2   |491     |4             |40          |
----------------------------------------------------------------------------------------------
function_113ac                                    |0   |367     |3             |0           |
----------------------------------------------------------------------------------------------
function_13ac8                                    |2   |578     |3             |147         |
----------------------------------------------------------------------------------------------
function_b1d4                                     |5   |388     |3             |16          |
----------------------------------------------------------------------------------------------
function_10c1c                                    |2   |395     |2             |42          |
----------------------------------------------------------------------------------------------
function_13cf0                                    |3   |440     |2             |48          |
----------------------------------------------------------------------------------------------
function_139c4                                    |2   |400     |2             |24          |
----------------------------------------------------------------------------------------------
_kill                                             |2   |346     |1             |0           |
----------------------------------------------------------------------------------------------
_getsockname                                      |4   |346     |1             |0           |
----------------------------------------------------------------------------------------------
_sigprocmask                                      |5   |346     |1             |0           |
----------------------------------------------------------------------------------------------
_setsockopt                                       |5   |346     |1             |0           |
----------------------------------------------------------------------------------------------
function_b240                                     |4   |388     |1             |16          |
----------------------------------------------------------------------------------------------
_sendto                                           |7   |346     |1             |0           |
----------------------------------------------------------------------------------------------
_send                                             |4   |346     |1             |0           |
----------------------------------------------------------------------------------------------
_getsockopt                                       |6   |346     |1             |0           |
----------------------------------------------------------------------------------------------
function_11398                                    |1   |353     |1             |0           |
----------------------------------------------------------------------------------------------
_closedir                                         |2   |346     |1             |0           |
----------------------------------------------------------------------------------------------
_accept                                           |4   |346     |1             |0           |
----------------------------------------------------------------------------------------------
function_f288                                     |1   |353     |1             |0           |
----------------------------------------------------------------------------------------------
_getpid                                           |0   |346     |1             |0           |
----------------------------------------------------------------------------------------------
function_10e28                                    |2   |355     |1             |0           |
----------------------------------------------------------------------------------------------
function_acdc                                     |5   |378     |1             |15          |
----------------------------------------------------------------------------------------------
_recvfrom                                         |8   |346     |1             |0           |
----------------------------------------------------------------------------------------------
function_13a60                                    |4   |375     |1             |20          |
----------------------------------------------------------------------------------------------
_close                                            |1   |346     |1             |0           |
----------------------------------------------------------------------------------------------
_socket                                           |3   |346     |1             |0           |
----------------------------------------------------------------------------------------------
_fork                                             |0   |346     |1             |0           |
----------------------------------------------------------------------------------------------
_open                                             |3   |346     |1             |0           |
----------------------------------------------------------------------------------------------
_ioctl                                            |5   |346     |1             |0           |
----------------------------------------------------------------------------------------------
_inet_addr                                        |1   |346     |1             |0           |
----------------------------------------------------------------------------------------------
_listen                                           |2   |346     |1             |0           |
----------------------------------------------------------------------------------------------
function_13bf4                                    |3   |374     |1             |24          |
----------------------------------------------------------------------------------------------
_getppid                                          |0   |346     |1             |0           |
----------------------------------------------------------------------------------------------
function_10d44                                    |1   |391     |1             |41          |
----------------------------------------------------------------------------------------------
_unlink                                           |1   |346     |0             |0           |
----------------------------------------------------------------------------------------------
function_142a0                                    |0   |347     |0             |0           |
----------------------------------------------------------------------------------------------
function_12f90                                    |2   |357     |0             |0           |
----------------------------------------------------------------------------------------------
_raise                                            |1   |346     |0             |0           |
----------------------------------------------------------------------------------------------
function_10b68                                    |0   |352     |0             |0           |
----------------------------------------------------------------------------------------------
function_142a8                                    |0   |348     |0             |0           |
----------------------------------------------------------------------------------------------
_malloc                                           |1   |0       |0             |0           |
----------------------------------------------------------------------------------------------
function_8ee0                                     |0   |347     |0             |0           |
----------------------------------------------------------------------------------------------
_sigemptyset                                      |1   |349     |0             |0           |
----------------------------------------------------------------------------------------------
_write                                            |3   |346     |0             |0           |
----------------------------------------------------------------------------------------------
___errno_location                                 |0   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_chdir                                            |1   |346     |0             |0           |
----------------------------------------------------------------------------------------------
function_8e7c                                     |1   |353     |0             |0           |
----------------------------------------------------------------------------------------------
function_b2b0                                     |1   |386     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_ldiv0                                     |0   |347     |0             |0           |
----------------------------------------------------------------------------------------------
function_100d8                                    |0   |367     |0             |0           |
----------------------------------------------------------------------------------------------
function_ff50                                     |1   |347     |0             |0           |
----------------------------------------------------------------------------------------------
_calloc                                           |2   |0       |0             |0           |
----------------------------------------------------------------------------------------------
function_13a3c                                    |2   |359     |0             |0           |
----------------------------------------------------------------------------------------------
_realloc                                          |2   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_memset                                           |3   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_atoi                                             |1   |346     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_uidivmod                                  |2   |346     |0             |0           |
----------------------------------------------------------------------------------------------
__dirstream                                       |2   |0       |0             |0           |
----------------------------------------------------------------------------------------------
*                                                 |0   |346     |0             |0           |
----------------------------------------------------------------------------------------------
function_11480                                    |3   |399     |0             |0           |
----------------------------------------------------------------------------------------------
function_f17c                                     |2   |385     |0             |0           |
----------------------------------------------------------------------------------------------
function_12fbc                                    |1   |386     |0             |0           |
----------------------------------------------------------------------------------------------
function_1426c                                    |1   |362     |0             |0           |
----------------------------------------------------------------------------------------------
function_1312c                                    |0   |455     |0             |0           |
----------------------------------------------------------------------------------------------
_sigaddset                                        |3   |346     |0             |0           |
----------------------------------------------------------------------------------------------
_setsid                                           |0   |346     |0             |0           |
----------------------------------------------------------------------------------------------
_connect                                          |3   |346     |0             |0           |
----------------------------------------------------------------------------------------------
_readlink                                         |4   |346     |0             |0           |
----------------------------------------------------------------------------------------------
_exit                                             |1   |0       |0             |0           |
----------------------------------------------------------------------------------------------
function_13074                                    |1   |386     |0             |0           |
----------------------------------------------------------------------------------------------
_sleep                                            |1   |346     |0             |0           |
----------------------------------------------------------------------------------------------
function_1399c                                    |1   |359     |0             |0           |
----------------------------------------------------------------------------------------------
function_8b6c                                     |0   |347     |0             |0           |
----------------------------------------------------------------------------------------------
function_f1d8                                     |4   |416     |0             |0           |
----------------------------------------------------------------------------------------------
_memcpy                                           |4   |0       |0             |0           |
----------------------------------------------------------------------------------------------
sig,                                              |1   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_select                                           |9   |346     |0             |0           |
----------------------------------------------------------------------------------------------
_free                                             |1   |0       |0             |0           |
----------------------------------------------------------------------------------------------
unknown_e5bcfff8                                  |0   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_recv                                             |4   |346     |0             |0           |
----------------------------------------------------------------------------------------------
_read                                             |3   |346     |0             |0           |
----------------------------------------------------------------------------------------------
___uClibc_main                                    |7   |346     |0             |0           |
----------------------------------------------------------------------------------------------
__data_start                                      |2   |352     |0             |0           |
----------------------------------------------------------------------------------------------
_memmove                                          |3   |346     |0             |0           |
----------------------------------------------------------------------------------------------
dirent                                            |3   |0       |0             |0           |
----------------------------------------------------------------------------------------------
function_8b84                                     |2   |353     |0             |0           |
----------------------------------------------------------------------------------------------
_abort                                            |0   |0       |0             |0           |
----------------------------------------------------------------------------------------------
unknown_e28cca13                                  |0   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_time                                             |1   |346     |0             |0           |
----------------------------------------------------------------------------------------------
__start                                           |2   |350     |0             |0           |
----------------------------------------------------------------------------------------------
_bind                                             |4   |346     |0             |0           |
----------------------------------------------------------------------------------------------
function_13a18                                    |3   |358     |0             |0           |
----------------------------------------------------------------------------------------------
function_8e88                                     |0   |351     |0             |0           |
----------------------------------------------------------------------------------------------
_clock                                            |0   |346     |0             |0           |
----------------------------------------------------------------------------------------------
_fcntl                                            |2   |346     |0             |0           |
----------------------------------------------------------------------------------------------
_prctl                                            |5   |346     |0             |0           |
----------------------------------------------------------------------------------------------
function_8e08                                     |0   |367     |0             |0           |
----------------------------------------------------------------------------------------------
================================================================================
========	FUNCTIONS SUSPECTED INSTRUNCTIONS : ===================================
================================================================================
=================FUNCTION : function_11624 ===================
++++++++ FUNCTION START 41110
++++++++ FUNCTION END 43598
++++++++ FUNCTION LENGTH 2488
    int32_t result = fork(); // 0x1162c
    int32_t sock;
    while (true) {
            int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0x116e8
            sock = sock_fd;
            if (sock_fd == -1) {
            fcntl(sock_fd, F_GETFL);
            fcntl(sock_fd, F_SETFL);
            if (setsockopt(sock, status, 3, &status, 4) != 0) {
                close(sock);
            while (true) {
                    while (true) {
                        while (true) {
                while (true) {
                    uint32_t v354 = recvfrom(sock, &buf, 1514, MSG_NOSIGNAL, NULL, NULL); // 0x11f0c
                        while (true) {
                                close(fd);
                        while (true) {
                            int32_t sock17; // 0x1229c
                            if (sock17 != -1) {
                                if ((v379 >> sock17 % 32) % 2 == 0) {
                                    v377 = sock17;
                                            while (true) {
                                                while (true) {
                                                    int32_t v391 = _recv(v390, v389, 256 - v388, 0x4000); // 0x12414
                                                                    close(fd2);
                                                                while (true) {
                                                                        case 2: {
                                                                                while (true) {
                                                                                    while (true) {
                                                                                                                int32_t sock2; // 0x12db4
                                                                                                                send(sock2, &buf2, 3, MSG_NOSIGNAL);
                                                                                                                            send(0x4000, (int32_t *)buf3, 3, MSG_NOSIGNAL);
                                                                                                            send(0x4000, (int32_t *)(int32_t)&buf4, 9, MSG_NOSIGNAL);
                                                                                                            while (true) {
                                                                                                                    case 2: {
                                                                                                                        while (true) {
                                                                                                                    case 3: {
                                                                                                                            while (true) {
                                                                                                                                    int32_t sock3; // 0x125d8
                                                                                                                                    send(sock3, (int32_t *)buf5, (int32_t)length, MSG_NOSIGNAL);
                                                                                                                                    int32_t sock4; // 0x125f0
                                                                                                                                    send(sock4, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                    case 4: {
                                                                                                                            while (true) {
                                                                                                                                    int32_t sock5; // 0x12768
                                                                                                                                    send(sock5, (int32_t *)buf6, (int32_t)length2, MSG_NOSIGNAL);
                                                                                                                                    int32_t sock6; // 0x12780
                                                                                                                                    send(sock6, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                    case 5: {
                                                                                                                            while (true) {
                                                                                                                                    int32_t sock7; // 0x12820
                                                                                                                                    send(sock7, (int32_t *)buf7, length3, MSG_NOSIGNAL);
                                                                                                                                    int32_t sock8; // 0x12834
                                                                                                                                    send(sock8, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                                while (true) {
                                                                                                                        while (true) {
                                                                                                                    case 6: {
                                                                                                                        while (true) {
                                                                                                                            int32_t sock9; // 0x128d4
                                                                                                                            send(sock9, (int32_t *)buf8, length4, MSG_NOSIGNAL);
                                                                                                                            int32_t sock10; // 0x128e8
                                                                                                                            send(sock10, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                    case 7: {
                                                                                                                        while (true) {
                                                                                                                            int32_t sock11; // 0x12a3c
                                                                                                                            send(sock11, (int32_t *)buf9, length4, MSG_NOSIGNAL);
                                                                                                                            int32_t sock12; // 0x12a50
                                                                                                                            send(sock12, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                    case 8: {
                                                                                                                        while (true) {
                                                                                                                            int32_t sock13; // 0x12988
                                                                                                                            send(sock13, (int32_t *)buf10, length3, MSG_NOSIGNAL);
                                                                                                                            int32_t sock14; // 0x1299c
                                                                                                                            send(sock14, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                    case 9: {
                                                                                                                        while (true) {
                                                                                                                            int32_t sock15; // 0x12c48
                                                                                                                            send(sock15, (int32_t *)buf11, length3, MSG_NOSIGNAL);
                                                                                                                            int32_t sock16; // 0x12c5c
                                                                                                                            send(sock16, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                    case 10: {
                                                                                                                            int32_t v522 = fork(); // 0x12b20
                                                                                                                                    int32_t sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0x12b50
                                                                                                                                    buf3 = sock_fd2;
                                                                                                                                    if (sock_fd2 == -1) {
                                                                                                                                        if (_connect(buf3, v351, 16) == -1) {
                                                                                                                                            close(buf3);
                                                                                                                                        send(buf3, &length3, 1, MSG_NOSIGNAL);
                                                                                                                                        send(buf3, &length4, 4, MSG_NOSIGNAL);
                                                                                                                                        send(buf3, &buf12, 2, MSG_NOSIGNAL);
                                                                                                                                        send(buf3, (int32_t *)(v525 + 12), 1, MSG_NOSIGNAL);
                                                                                                                                        send(buf3, (int32_t *)buf13, (int32_t)length5, MSG_NOSIGNAL);
                                                                                                                                        send(buf3, (int32_t *)(v525 + 13), 1, MSG_NOSIGNAL);
                                                                                                                                        send(buf3, (int32_t *)buf14, (int32_t)length6, MSG_NOSIGNAL);
                                                                                                                                        close(buf3);
                                                                                                                            close(fd3);
                                                                                                                            close(fd4);
                                                                                    while (true) {
                                                                        case 3: {
                                                                        case 4: {
                                                                        case 5: {
                                                                        case 6: {
                                                                        case 7: {
                                                                        case 8: {
                                                                        case 9: {
                                                                        case 10: {
                                                        close(fd2);
                                                        while (true) {
                                    if ((length4 | getsockopt(sock17, SO_DEBUG, 4, &length4, &length3)) == 0) {
                                            while (true) {
                                        close(fd5);
                        while (true) {
                    sendto(sock, &message, 40, MSG_NOSIGNAL, (struct sockaddr *)&dest_addr, 16);
                    while (true) {
        while (true) {
    while (true) {
=================FUNCTION : function_10168 ===================
++++++++ FUNCTION START 36274
++++++++ FUNCTION END 37256
++++++++ FUNCTION LENGTH 982
    sigprocmask(how, NULL, NULL);
    int32_t fd = open("/dev/watchdog", O_RDWR); // 0x101d0
        int32_t fd2 = open("/dev/misc/watchdog", O_RDWR); // 0x10560
            close(fd2);
        if (fork() > fd4) {
        close(fd4);
        close(1);
        v353 = close(2);
        while (true) {
                while (true) {
                int32_t sock2;
                    while (true) {
                    v373 = sock2;
                    int32_t sock;
                    if (sock == -1) {
                        int32_t sock_fd = socket(AF_INET, SOCK_STREAM, protocol); // 0x10918
                        int32_t fd5 = sock_fd; // r5
                        if (sock_fd != -1) {
                            fcntl(sock_fd, F_GETFL);
                            _connect(sock, (int32_t)&v333, 16);
                    uint32_t v379 = sock; // 0x107cc
                    int32_t v383 = sock; // 0x106b8
                    int32_t v384 = sock2; // 0x106d4
                    if (sock2 < v383) {
                                send(sock, (int32_t *)&buf2, 2, MSG_NOSIGNAL);
                        if (sock2 != -1) {
                            if ((v391 >> sock2 % 32) % 2 != 0) {
                                int32_t accepted_sock_fd = accept(sock2, (struct sockaddr *)&addr, &addr_len); // 0x10a14
                                int32_t v392 = function_11398(accepted_sock_fd); // 0x10a18
                                kill(-v352, SIGKILL);
                        uint32_t sock3 = sock; // 0x107fc
                            if (sock3 != -1) {
                                if ((v396 >> sock3 % 32) % 2 != 0) {
                                    int32_t v397 = _recv(sock, v364, 2, 0x4002); // 0x10858
                                                __pseudo_cond_branch(sock != -1, (int32_t)&v395);
                                                sock = -1;
                                            _recv(sock, v364, 2, 0x4000);
                                                close(sock);
                                            int32_t v409 = _recv(sock, v363, (int32_t)v407 | 256 * v408, 0x4002); // 0x108d4
                                            _recv(sock, v364, 2, 0x4000);
                                            _recv(sock, v363, 256 * (int32_t)v410 | v408, 0x4000);
                            if ((v414 >> sock3 % 32) % 2 == 0) {
                                __pseudo_cond_branch(sock3 != -1, (int32_t)&v395);
                                getsockopt(sock3, SO_DEBUG, 4, &addr_len, &option_len);
                                    int32_t sock4; // 0x10a5c
                                    send(sock4, &buf3, 4, MSG_NOSIGNAL);
                                    int32_t sock5; // 0x10a6c
                                    send(sock5, (int32_t *)&buf2, 1, MSG_NOSIGNAL);
                                    int32_t sock6; // 0x10a88
                                    send(sock6, &buf4, length, MSG_NOSIGNAL);
                                    close(sock);
                v373 = sock2;
        close(fd);
        if (fork() > fd4) {
        close(fd4);
        close(1);
        v353 = close(2);
        while (true) {
        if (fork() > fd4) {
        close(fd4);
        close(1);
        v353 = close(2);
        while (true) {
    if (fork() > fd4) {
    close(fd4);
    close(1);
    v353 = close(2);
    while (true) {
=================FUNCTION : function_8f24 ===================
++++++++ FUNCTION START 20828
++++++++ FUNCTION END 22980
++++++++ FUNCTION LENGTH 2152
    int32_t v341 = function_acdc(fd, (int32_t *)t, 20, (int32_t)"GET", v340); // fp
                        while (true) {
                                    while (true) {
                                while (true) {
                                    while (true) {
                                while (true) {
                                                int32_t sock_fd = socket(AF_INET, SOCK_STREAM, protocol); // 0x93ec
                                                dest_mem = sock_fd;
                                                fd = sock_fd;
                                                if (sock_fd != -1) {
                                                    fcntl(dest_mem, F_GETFL);
                                                    int32_t sock; // 0x942c
                                                    setsockopt(sock, protocol, 8, &option_value, 4);
                                                    _connect(v404, v384, 16);
                                        function_139c4((char *)v415, (int32_t)" HTTP/1.1\r\nUser-Agent: ");
                                        function_139c4((char *)v417, (int32_t)"\r\nHost: ");
                                                int32_t sock2; // 0x9a28
                                                send(sock2, (int32_t *)buf, function_1399c(v386), MSG_NOSIGNAL);
                                                close(fd2);
                                                        close(fd3);
    while (true) {
        uint32_t sock3; // 0x95b0
        if (sock3 != -1) {
            if ((v463 >> sock3 % 32) % 2 == 0) {
                v462 = sock3;
                        int32_t v470 = _recv(v469, v347, 0x2800, 0x4002); // 0x9b48
                            close(fd4);
                            while (true) {
                                            while (true) {
                                                    while (true) {
                                                    while (true) {
                                        if (function_13a60(t, v530, (int32_t)"http", 4) == 4) {
                                                    while (true) {
                                                if (function_13d7c((char *)v543, (int32_t)"POST") == 0) {
                                                    if (function_13d7c((char *)v543, (int32_t)"GET") == 0) {
                                                        _recv(v557, v347, v544, 0x4000);
                                                if (function_13cf0((char *)fd, function_1399c((char *)v562), (int32_t)"url=") == -1) {
                                                    int32_t v567 = option_value + function_13cf0((char *)v566, function_1399c((char *)v566), (int32_t)"url="); // 0xa554
                                                    while (true) {
                                                if (function_13cf0((char *)t, function_1399c((char *)v574), (int32_t)"http") == 4) {
                                                            while (true) {
                                                        memcpy((int32_t *)(v343 + 1431), (int32_t *)"GET", 4);
                                                dest_mem = (int32_t)memcpy((int32_t *)v587, (int32_t *)"GET", 4);
                                if (function_13d7c((char *)v543, (int32_t)"POST") == 0) {
                            while (true) {
                            while (true) {
                                int32_t v594 = _recv(v593, v354 + v592, 1024 - v592, 0x4000); // 0xa1a4
                                    close(fd5);
                                        while (true) {
                                        while (true) {
                            while (true) {
                            while (true) {
                                int32_t v637 = _recv(v636, v347, 0x2800, 0x4000); // 0xa394
                                            close(fd6);
                                close(fd6);
                            while (true) {
                int32_t v640 = option_value2 | getsockopt(sock3, SO_DEBUG, 4, &option_value2, &option_len); // 0x9624
                close(fd7);
    while (true) {
=================FUNCTION : function_e9cc ===================
++++++++ FUNCTION START 30959
++++++++ FUNCTION END 32021
++++++++ FUNCTION LENGTH 1062
    fd = open((char *)function_12f90(30, NULL), O_RDONLY);
    int32_t sock_fd; // 0xec4c
        close(fd);
                while (true) {
                                        result = inet_addr((char *)&cp);
                                        sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
                                        if (sock_fd == -1) {
                                            return sock_fd;
                                        if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
                                            result2 = close(sock_fd);
                                            while (true) {
                                                    while (true) {
                                            while (true) {
                                            while (true) {
                                                                sendto(sock_fd, (int32_t *)fd, v356 + 47, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
                                    result = inet_addr((char *)&cp);
                                    sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
                                    if (sock_fd == -1) {
                                        return sock_fd;
                                    if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
                                        result2 = close(sock_fd);
                                        while (true) {
                    case 0: {
                    case 1: {
                    case -2: {
                    case -1: {
                sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
                if (sock_fd == -1) {
                    return sock_fd;
                if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
                    result2 = close(sock_fd);
                    while (true) {
                while (true) {
            case 0: {
            case 1: {
            case -2: {
            case -1: {
        sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
        if (sock_fd == -1) {
            return sock_fd;
        if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
            result2 = close(sock_fd);
            while (true) {
        while (true) {
        case 0: {
        case 1: {
        case -2: {
        case -1: {
    sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
    if (sock_fd == -1) {
        return sock_fd;
    if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
        result2 = close(sock_fd);
        while (true) {
    while (true) {
=================FUNCTION : function_f808 ===================
++++++++ FUNCTION START 34188
++++++++ FUNCTION END 35159
++++++++ FUNCTION LENGTH 971
    int32_t result = fork(); // 0xf820
    int32_t sock = 2; // bp-72
    int32_t sock_fd = socket(AF_INET, SOCK_STREAM, protocol); // 0xf890
    if (sock_fd != -1) {
        bind((int32_t)&sock, (struct sockaddr *)16, 16);
        listen(sock_fd, 1);
    int32_t pid = getpid(); // 0xf918
    int32_t fd = open((char *)&path, protocol); // 0xf960
        close(fd);
        while (true) {
            struct __dirstream * v355 = opendir((char *)function_12f90(6, NULL)); // 0xf9e8
                struct dirent * v356 = readdir((struct __dirstream *)dirp); // 0xfa00119
                    while (true) {
                        while (true) {
                                        int32_t fd2 = open((char *)&path2, O_RDONLY); // 0xfc54
                                                close(fd2);
                                                while (true) {
                                                        while (true) {
                                                                    close(fd2);
                                                                    kill(time_val, SIGKILL);
                                                                    v363 = readdir((struct __dirstream *)dirp);
                                                                while (true) {
                                                                        while (true) {
                                                                                while (true) {
                                                                                        while (true) {
                                                close(fd2);
                                            kill(time_val, SIGKILL);
                                        int32_t pid2 = getpid(); // 0xfbec
                                            int32_t ppid = getppid(); // 0xfbf8
                                                    int32_t fd3 = open((char *)buf2, O_RDONLY); // 0xfc30
                                                        kill(time_val, SIGKILL);
                                                    close(fd4);
                                                v363 = readdir((struct __dirstream *)dirp);
                                    v363 = readdir((struct __dirstream *)dirp);
                                        struct dirent * v424 = readdir((struct __dirstream *)dirp); // 0xfa80
                                    v363 = readdir((struct __dirstream *)dirp2);
                                v363 = readdir((struct __dirstream *)dirp2);
                            v363 = readdir((struct __dirstream *)dirp);
                        closedir((struct __dirstream *)dirp);
                closedir((struct __dirstream *)dirp);
=================FUNCTION : function_f29c ===================
++++++++ FUNCTION START 33187
++++++++ FUNCTION END 34185
++++++++ FUNCTION LENGTH 998
    int32_t fd = open("/proc/net/tcp", oflag); // 0xf36c
    struct __dirstream * dirp; // 0xf544
        close(fd2);
            dirp = opendir((char *)name);
                    while (true) {
                closedir((struct __dirstream *)fd2);
    while (true) {
                while (true) {
                            while (true) {
                                while (true) {
                                                    while (true) {
                                                close(fd2);
                                                dirp = opendir((char *)name);
                                                    while (true) {
                                                        while (true) {
                                                                        struct __dirstream * dirp2 = opendir((char *)&path); // 0xf640
                                                                                while (true) {
                                                                                    while (true) {
                                                                                                    kill(function_13ac8((char *)v387, 10), SIGKILL);
                                                                                                    struct dirent * v404 = readdir((struct __dirstream *)dirp3); // 0xf73c
                                                                                            struct dirent * v405 = readdir((struct __dirstream *)dirp3); // 0xf650
                                                                                    closedir((struct __dirstream *)dirp3);
                                                                                    v396 = readdir((struct __dirstream *)fd2);
                                                                                closedir((struct __dirstream *)dirp4);
                                                                            closedir((struct __dirstream *)dirp3);
                                                                            v396 = readdir((struct __dirstream *)fd2);
                                                                struct dirent * v415 = readdir((struct __dirstream *)fd2); // 0xf55c
                                                        closedir((struct __dirstream *)fd2);
                                                closedir((struct __dirstream *)fd2);
                                close(fd2);
                                dirp = opendir((char *)name);
                                    while (true) {
                                closedir((struct __dirstream *)fd2);
    close(fd2);
        dirp = opendir((char *)name);
                while (true) {
            closedir((struct __dirstream *)fd2);
=================FUNCTION : function_c480 ===================
++++++++ FUNCTION START 27389
++++++++ FUNCTION END 28055
++++++++ FUNCTION LENGTH 666
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xc650
    if (sock_fd == -1) {
        return sock_fd;
    if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
        result = close(sock_fd);
            while (true) {
                while (true) {
                    int32_t sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xc6d8
                    fd = sock_fd2;
                    if (sock_fd2 == -1) {
                        fcntl(sock_fd2, F_GETFL);
                        _connect(fd, v357, 16);
                        while (true) {
                            int32_t v371 = recvfrom(sock_fd, &buf, 256, MSG_NOSIGNAL, (struct sockaddr *)&addr, &addr_len); // 0xc824
                                                close(fd);
                                            while (true) {
                                                sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP);
                                                v375 = sock_fd2 == -1;
                                                fd = sock_fd2;
                                                if (sock_fd2 == -1) {
                                            int32_t v386 = close(fd2); // 0xc8a4
                        close(fd);
                    while (true) {
        while (true) {
                sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(24 * option_value + a2), 16);
            sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(24 * option_value + a2), 16);
=================FUNCTION : function_10e4c ===================
++++++++ FUNCTION START 39114
++++++++ FUNCTION END 39979
++++++++ FUNCTION LENGTH 865
        while (true) {
        while (true) {
            int32_t sock_fd = socket(AF_INET, 0, IPPROTO_IP); // 0x10fd8
            int32_t fd = sock_fd; // r7
            if (sock_fd == -1) {
                close(fd);
                free(mem);
            int32_t v374 = _connect(sock_fd, v359, 16); // 0x10ff4
                int32_t v376 = send(fd, (int32_t *)&buf, length, MSG_NOSIGNAL); // 0x11010
                        close(fd);
                        free(mem);
                            int32_t v385 = recvfrom(fd, (int32_t *)&buf2, 2048, MSG_NOSIGNAL, (struct sockaddr *)addr, (int32_t *)addr); // 0x110e8
                                while (true) {
                                        while (true) {
                                            while (true) {
                                                    while (true) {
                                                        while (true) {
                    close(fd);
                    free(mem);
            close(fd);
            free(mem);
    while (true) {
=================FUNCTION : function_db98 ===================
++++++++ FUNCTION START 29330
++++++++ FUNCTION END 29821
++++++++ FUNCTION LENGTH 491
        while (true) {
            int32_t sock_fd = socket(AF_INET, 17, IPPROTO_UDP); // 0xdce8
            if (sock_fd == -1) {
                return sock_fd;
            bind(sock_fd, (struct sockaddr *)&addr, 16);
            _connect(v358, a2, 16);
            while (true) {
                while (true) {
                        int32_t sock; // 0xde00
                        send(sock, (int32_t *)buf, length, MSG_NOSIGNAL);
                            send(sock, (int32_t *)buf, length, MSG_NOSIGNAL);
                        int32_t sock2; // 0xde54
                        send(sock2, (int32_t *)buf2, length, MSG_NOSIGNAL);
                            send(sock2, (int32_t *)buf2, length, MSG_NOSIGNAL);
                    while (true) {
                    while (true) {
        while (true) {
        while (true) {
    while (true) {
=================FUNCTION : function_d454 ===================
++++++++ FUNCTION START 28702
++++++++ FUNCTION END 29327
++++++++ FUNCTION LENGTH 625
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xd61c
    int32_t fd = sock_fd; // sb
    if (sock_fd == -1) {
        return sock_fd;
    if (setsockopt(SOL_IP, SO_TYPE, option_name, &option_value, (int32_t)&option_len) == -1) {
        return close(fd);
        while (true) {
        while (true) {
            while (true) {
            while (true) {
                                            sendto(fd, (int32_t *)message, 60, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
                                        sendto(fd, (int32_t *)message, 60, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
    while (true) {
=================FUNCTION : function_ae30 ===================
++++++++ FUNCTION START 23771
++++++++ FUNCTION END 24531
++++++++ FUNCTION LENGTH 760
        while (true) {
                                        while (true) {
                                                free((int32_t *)v357);
                                            free((int32_t *)v357);
                                free((int32_t *)v357);
                            free((int32_t *)v357);
                    free((int32_t *)v357);
                free((int32_t *)v357);
                            while (true) {
                    free((int32_t *)v357);
                free((int32_t *)v357);
        free((int32_t *)v357);
    free((int32_t *)v357);
=================FUNCTION : function_b084 ===================
++++++++ FUNCTION START 24534
++++++++ FUNCTION END 25023
++++++++ FUNCTION LENGTH 489
                    kill(9, SIGKILL);
                            kill(9, SIGKILL);
                                    kill(9, SIGKILL);
                                kill(9, SIGKILL);
                                kill(9, SIGKILL);
                                    kill(9, SIGKILL);
                                    kill(9, SIGKILL);
                                    kill(9, SIGKILL);
                        kill(9, SIGKILL);
                kill(9, SIGKILL);
        kill(9, SIGKILL);
    kill(9, SIGKILL);
=================FUNCTION : function_cce0 ===================
++++++++ FUNCTION START 28058
++++++++ FUNCTION END 28699
++++++++ FUNCTION LENGTH 641
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xcee4
    if (sock_fd == -1) {
        return sock_fd;
    if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
        return close(sock_fd);
        while (true) {
    while (true) {
        while (true) {
        while (true) {
                                        sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
                                    sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
        while (true) {
=================FUNCTION : function_de7c ===================
++++++++ FUNCTION START 29824
++++++++ FUNCTION END 30428
++++++++ FUNCTION LENGTH 604
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP); // 0xdfb8
    if (sock_fd == -1) {
        return sock_fd;
    if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
        return close(sock_fd);
            while (true) {
                while (true) {
                while (true) {
                                        sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a2 + 24 * option_value), 16);
                                    sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a2 + 24 * option_value), 16);
            while (true) {
    while (true) {
=================FUNCTION : function_e508 ===================
++++++++ FUNCTION START 30431
++++++++ FUNCTION END 30956
++++++++ FUNCTION LENGTH 525
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP); // 0xe608
    int32_t fd = sock_fd; // fp
    if (sock_fd == -1) {
        return sock_fd;
    if (setsockopt(SOL_IP, SO_TYPE, option_name, &option_value, (int32_t)&option_len) == -1) {
        return close(fd);
        while (true) {
        while (true) {
            while (true) {
            while (true) {
                                sendto(fd, (int32_t *)message, v348 + 32, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
    while (true) {
=================FUNCTION : function_b5e8 ===================
++++++++ FUNCTION START 26197
++++++++ FUNCTION END 26798
++++++++ FUNCTION LENGTH 601
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xb73c
    if (sock_fd == -1) {
        return sock_fd;
    if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
        return close(sock_fd);
        while (true) {
    while (true) {
        while (true) {
        while (true) {
                                    sendto(sock_fd, (int32_t *)message, v348 + 66, MSG_NOSIGNAL, (struct sockaddr *)(a2 + 24 * option_value), 16);
        while (true) {
=================FUNCTION : function_bd64 ===================
++++++++ FUNCTION START 26801
++++++++ FUNCTION END 27386
++++++++ FUNCTION LENGTH 585
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xbeb8
    if (sock_fd == -1) {
        return sock_fd;
    if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
        return close(sock_fd);
        while (true) {
    while (true) {
        while (true) {
        while (true) {
                                    sendto(sock_fd, (int32_t *)message, v348 + 52, MSG_NOSIGNAL, (struct sockaddr *)(a2 + 24 * option_value), 16);
        while (true) {
=================FUNCTION : function_ff68 ===================
++++++++ FUNCTION START 35512
++++++++ FUNCTION END 35901
++++++++ FUNCTION LENGTH 389
    int32_t sock_fd = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xff84
    int32_t fd = sock_fd;
    if (sock_fd == -1) {
        return sock_fd;
    setsockopt(sock_fd, SO_DEBUG, 2, &option_value, 4);
    fcntl(fd, F_GETFL);
    if (bind(fd, (struct sockaddr *)&addr, 16) == -1) {
        _connect(fd, v344, 16);
        close(fd);
        result = listen(fd, 1);
=================FUNCTION : function_13e90 ===================
++++++++ FUNCTION START 49883
++++++++ FUNCTION END 50430
++++++++ FUNCTION LENGTH 547
                while (true) {
                        while (true) {
                            while (true) {
                while (true) {
                    while (true) {
        while (true) {
    while (true) {
=================FUNCTION : function_10bc0 ===================
++++++++ FUNCTION START 37614
++++++++ FUNCTION END 37961
++++++++ FUNCTION LENGTH 347
    int32_t pid = getpid(); // 0x10bd4
    int32_t v340 = pid ^ getppid();
    int32_t proc_time = clock(); // 0x10bec
    int32_t v341 = v340 ^ proc_time;
    int32_t v342 = proc_time;
    return proc_time;
=================FUNCTION : function_13c54 ===================
++++++++ FUNCTION START 48021
++++++++ FUNCTION END 48382
++++++++ FUNCTION LENGTH 361
    int32_t sock_fd = socket(AF_INET, 0, IPPROTO_IP); // 0x13c7c
    if (sock_fd != -1) {
        _connect(sock_fd, (int32_t)&addr, v344);
        getsockname(sock_fd, (struct sockaddr *)&addr, &addr_len);
        close(sock_fd);
=================FUNCTION : function_13e00 ===================
++++++++ FUNCTION START 49322
++++++++ FUNCTION END 49880
++++++++ FUNCTION LENGTH 558
                while (true) {
            while (true) {
            while (true) {
        while (true) {
=================FUNCTION : function_ad40 ===================
++++++++ FUNCTION START 23364
++++++++ FUNCTION END 23768
++++++++ FUNCTION LENGTH 404
    int32_t result = fork(); // 0xad58
            int32_t status2 = fork(); // 0xad7c
                kill(getppid(), SIGKILL);
                while (true) {
=================FUNCTION : __udivsi3 ===================
++++++++ FUNCTION START 50433
++++++++ FUNCTION END 51137
++++++++ FUNCTION LENGTH 704
    while (true) {
                                while (true) {
                                    while (true) {
                while (true) {
=================FUNCTION : __modsi3 ===================
++++++++ FUNCTION START 52236
++++++++ FUNCTION END 53045
++++++++ FUNCTION LENGTH 809
            while (true) {
                        while (true) {
                                while (true) {
                    while (true) {
=================FUNCTION : __umodsi3 ===================
++++++++ FUNCTION START 51489
++++++++ FUNCTION END 52233
++++++++ FUNCTION LENGTH 744
            while (true) {
                        while (true) {
                                while (true) {
                    while (true) {
=================FUNCTION : function_13d7c ===================
++++++++ FUNCTION START 48828
++++++++ FUNCTION END 49319
++++++++ FUNCTION LENGTH 491
                while (true) {
            while (true) {
            while (true) {
    while (true) {
=================FUNCTION : function_113ac ===================
++++++++ FUNCTION START 40338
++++++++ FUNCTION END 40705
++++++++ FUNCTION LENGTH 367
    if (socket(AF_INET, SOCK_STREAM, IPPROTO_IP) == -1) {
        fcntl(fd, F_GETFL);
        result = _connect(v348, (int32_t)&v343, 16);
=================FUNCTION : function_13ac8 ===================
++++++++ FUNCTION START 47063
++++++++ FUNCTION END 47641
++++++++ FUNCTION LENGTH 578
    while (true) {
    while (true) {
    while (true) {
=================FUNCTION : function_b1d4 ===================
++++++++ FUNCTION START 25026
++++++++ FUNCTION END 25414
++++++++ FUNCTION LENGTH 388
            return inet_addr((char *)cp);
    while (true) {
        return inet_addr((char *)cp);
=================FUNCTION : function_10c1c ===================
++++++++ FUNCTION START 37964
++++++++ FUNCTION END 38359
++++++++ FUNCTION LENGTH 395
    int32_t * dest_mem = memcpy(&v341, (int32_t *)"abcdefghijklmnopqrstuvw012345678", 33); // 0x10c38
    while (true) {
=================FUNCTION : function_13cf0 ===================
++++++++ FUNCTION START 48385
++++++++ FUNCTION END 48825
++++++++ FUNCTION LENGTH 440
        while (true) {
    while (true) {
=================FUNCTION : function_139c4 ===================
++++++++ FUNCTION START 45559
++++++++ FUNCTION END 45959
++++++++ FUNCTION LENGTH 400
            while (true) {
    while (true) {
=================FUNCTION : _kill ===================
++++++++ FUNCTION START 8225
++++++++ FUNCTION END 8571
++++++++ FUNCTION LENGTH 346
    return kill(pid, sig);
=================FUNCTION : _getsockname ===================
++++++++ FUNCTION START 18696
++++++++ FUNCTION END 19042
++++++++ FUNCTION LENGTH 346
    return getsockname(fd, addr, len);
=================FUNCTION : _sigprocmask ===================
++++++++ FUNCTION START 18347
++++++++ FUNCTION END 18693
++++++++ FUNCTION LENGTH 346
    return sigprocmask(how, set, oset);
=================FUNCTION : _setsockopt ===================
++++++++ FUNCTION START 9621
++++++++ FUNCTION END 9967
++++++++ FUNCTION LENGTH 346
    return setsockopt(fd, level, optname, optval, optlen);
=================FUNCTION : function_b240 ===================
++++++++ FUNCTION START 25417
++++++++ FUNCTION END 25805
++++++++ FUNCTION LENGTH 388
    while (true) {
=================FUNCTION : _sendto ===================
++++++++ FUNCTION START 11017
++++++++ FUNCTION END 11363
++++++++ FUNCTION LENGTH 346
    return sendto(fd, buf, n, flags, addr, addr_len);
=================FUNCTION : _send ===================
++++++++ FUNCTION START 6479
++++++++ FUNCTION END 6825
++++++++ FUNCTION LENGTH 346
    return send(fd, buf, n, flags);
=================FUNCTION : _getsockopt ===================
++++++++ FUNCTION START 14158
++++++++ FUNCTION END 14504
++++++++ FUNCTION LENGTH 346
    return getsockopt(fd, level, optname, optval, optlen);
=================FUNCTION : function_11398 ===================
++++++++ FUNCTION START 39982
++++++++ FUNCTION END 40335
++++++++ FUNCTION LENGTH 353
    int32_t result = kill(pid, SIGKILL); // 0x113a4
=================FUNCTION : _closedir ===================
++++++++ FUNCTION START 16602
++++++++ FUNCTION END 16948
++++++++ FUNCTION LENGTH 346
    return closedir(dirp);
=================FUNCTION : _accept ===================
++++++++ FUNCTION START 7178
++++++++ FUNCTION END 7524
++++++++ FUNCTION LENGTH 346
    return accept(fd, addr, addr_len);
=================FUNCTION : function_f288 ===================
++++++++ FUNCTION START 32831
++++++++ FUNCTION END 33184
++++++++ FUNCTION LENGTH 353
    int32_t result = kill(pid, SIGKILL); // 0xf294
=================FUNCTION : _getpid ===================
++++++++ FUNCTION START 2640
++++++++ FUNCTION END 2986
++++++++ FUNCTION LENGTH 346
    return getpid();
=================FUNCTION : function_10e28 ===================
++++++++ FUNCTION START 38756
++++++++ FUNCTION END 39111
++++++++ FUNCTION LENGTH 355
    free((int32_t *)result);
=================FUNCTION : function_acdc ===================
++++++++ FUNCTION START 22983
++++++++ FUNCTION END 23361
++++++++ FUNCTION LENGTH 378
    while (true) {
=================FUNCTION : _recvfrom ===================
++++++++ FUNCTION START 4734
++++++++ FUNCTION END 5080
++++++++ FUNCTION LENGTH 346
    return recvfrom(fd, buf, n, flags, addr, addr_len);
=================FUNCTION : function_13a60 ===================
++++++++ FUNCTION START 46685
++++++++ FUNCTION END 47060
++++++++ FUNCTION LENGTH 375
    while (true) {
=================FUNCTION : _close ===================
++++++++ FUNCTION START 17300
++++++++ FUNCTION END 17646
++++++++ FUNCTION LENGTH 346
    return close(fd);
=================FUNCTION : _socket ===================
++++++++ FUNCTION START 5083
++++++++ FUNCTION END 5429
++++++++ FUNCTION LENGTH 346
    return socket(domain, type, protocol);
=================FUNCTION : _fork ===================
++++++++ FUNCTION START 12064
++++++++ FUNCTION END 12410
++++++++ FUNCTION LENGTH 346
    return fork();
=================FUNCTION : _open ===================
++++++++ FUNCTION START 15555
++++++++ FUNCTION END 15901
++++++++ FUNCTION LENGTH 346
    return open(file, oflag);
=================FUNCTION : _ioctl ===================
++++++++ FUNCTION START 892
++++++++ FUNCTION END 1238
++++++++ FUNCTION LENGTH 346
    return getpid();
=================FUNCTION : _inet_addr ===================
++++++++ FUNCTION START 8923
++++++++ FUNCTION END 9269
++++++++ FUNCTION LENGTH 346
    return inet_addr(cp);
=================FUNCTION : _listen ===================
++++++++ FUNCTION START 11715
++++++++ FUNCTION END 12061
++++++++ FUNCTION LENGTH 346
    return listen(fd, n);
=================FUNCTION : function_13bf4 ===================
++++++++ FUNCTION START 47644
++++++++ FUNCTION END 48018
++++++++ FUNCTION LENGTH 374
    while (true) {
=================FUNCTION : _getppid ===================
++++++++ FUNCTION START 13111
++++++++ FUNCTION END 13457
++++++++ FUNCTION LENGTH 346
    return getppid();
=================FUNCTION : function_10d44 ===================
++++++++ FUNCTION START 38362
++++++++ FUNCTION END 38753
++++++++ FUNCTION LENGTH 391
    while (true) {
================================================================================
========	WHILE LOOPS INTRESTING INSTRUCTIONS : =================================
================================================================================
=============================WHILE LOOPS ID : 1 @ function_8f24 ====================================
++++++++ WHILE START : 21218 
++++++++ WHILE FUNCTION : function_8f24 
++++++++ WHILE END : 21783 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		int32_t sock_fd = socket(AF_INET, SOCK_STREAM, protocol); // 0x93ec
		dest_mem = sock_fd;
		fd = sock_fd;
		if (sock_fd != -1) {
		fcntl(dest_mem, F_GETFL);
		int32_t sock; // 0x942c
		setsockopt(sock, protocol, 8, &option_value, 4);
		_connect(v404, v384, 16);
		function_139c4((char *)v415, (int32_t)" HTTP/1.1\r\nUser-Agent: ");
		function_139c4((char *)v417, (int32_t)"\r\nHost: ");
		int32_t sock2; // 0x9a28
		send(sock2, (int32_t *)buf, function_1399c(v386), MSG_NOSIGNAL);
		close(fd2);
		close(fd3);
=============================WHILE LOOPS ID : 2 @ function_8f24 ====================================
++++++++ WHILE START : 21823 
++++++++ WHILE FUNCTION : function_8f24 
++++++++ WHILE END : 22966 
++++++++ INTRESTING INSTRUCTIONS :  
		uint32_t sock3; // 0x95b0
		if (sock3 != -1) {
		if ((v463 >> sock3 % 32) % 2 == 0) {
		v462 = sock3;
		int32_t v470 = _recv(v469, v347, 0x2800, 0x4002); // 0x9b48
		close(fd4);
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		if (function_13a60(t, v530, (int32_t)"http", 4) == 4) {
		while (true) {
		if (function_13d7c((char *)v543, (int32_t)"POST") == 0) {
		if (function_13d7c((char *)v543, (int32_t)"GET") == 0) {
		_recv(v557, v347, v544, 0x4000);
		if (function_13cf0((char *)fd, function_1399c((char *)v562), (int32_t)"url=") == -1) {
		int32_t v567 = option_value + function_13cf0((char *)v566, function_1399c((char *)v566), (int32_t)"url="); // 0xa554
		while (true) {
		if (function_13cf0((char *)t, function_1399c((char *)v574), (int32_t)"http") == 4) {
		while (true) {
		memcpy((int32_t *)(v343 + 1431), (int32_t *)"GET", 4);
		dest_mem = (int32_t)memcpy((int32_t *)v587, (int32_t *)"GET", 4);
		if (function_13d7c((char *)v543, (int32_t)"POST") == 0) {
		while (true) {
		while (true) {
		int32_t v594 = _recv(v593, v354 + v592, 1024 - v592, 0x4000); // 0xa1a4
		close(fd5);
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		int32_t v637 = _recv(v636, v347, 0x2800, 0x4000); // 0xa394
		close(fd6);
		close(fd6);
		while (true) {
		int32_t v640 = option_value2 | getsockopt(sock3, SO_DEBUG, 4, &option_value2, &option_len); // 0x9624
		close(fd7);
=============================WHILE LOOPS ID : 6 @ function_ae30 ====================================
++++++++ WHILE START : 24177 
++++++++ WHILE FUNCTION : function_ae30 
++++++++ WHILE END : 24392 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		free((int32_t *)v357);
		free((int32_t *)v357);
		free((int32_t *)v357);
		free((int32_t *)v357);
		free((int32_t *)v357);
		free((int32_t *)v357);
=============================WHILE LOOPS ID : 11 @ function_b5e8 ====================================
++++++++ WHILE START : 26643 
++++++++ WHILE FUNCTION : function_b5e8 
++++++++ WHILE END : 26797 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		sendto(sock_fd, (int32_t *)message, v348 + 66, MSG_NOSIGNAL, (struct sockaddr *)(a2 + 24 * option_value), 16);
		while (true) {
=============================WHILE LOOPS ID : 13 @ function_bd64 ====================================
++++++++ WHILE START : 27235 
++++++++ WHILE FUNCTION : function_bd64 
++++++++ WHILE END : 27385 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		sendto(sock_fd, (int32_t *)message, v348 + 52, MSG_NOSIGNAL, (struct sockaddr *)(a2 + 24 * option_value), 16);
		while (true) {
=============================WHILE LOOPS ID : 14 @ function_c480 ====================================
++++++++ WHILE START : 27779 
++++++++ WHILE FUNCTION : function_c480 
++++++++ WHILE END : 27967 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		int32_t sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xc6d8
		fd = sock_fd2;
		if (sock_fd2 == -1) {
		fcntl(sock_fd2, F_GETFL);
		_connect(fd, v357, 16);
		while (true) {
		int32_t v371 = recvfrom(sock_fd, &buf, 256, MSG_NOSIGNAL, (struct sockaddr *)&addr, &addr_len); // 0xc824
		close(fd);
		while (true) {
		sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP);
		v375 = sock_fd2 == -1;
		fd = sock_fd2;
		if (sock_fd2 == -1) {
		int32_t v386 = close(fd2); // 0xc8a4
		close(fd);
		while (true) {
=============================WHILE LOOPS ID : 15 @ function_c480 ====================================
++++++++ WHILE START : 27976 
++++++++ WHILE FUNCTION : function_c480 
++++++++ WHILE END : 28042 
++++++++ INTRESTING INSTRUCTIONS :  
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(24 * option_value + a2), 16);
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(24 * option_value + a2), 16);
=============================WHILE LOOPS ID : 17 @ function_cce0 ====================================
++++++++ WHILE START : 28513 
++++++++ WHILE FUNCTION : function_cce0 
++++++++ WHILE END : 28698 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
		while (true) {
=============================WHILE LOOPS ID : 19 @ function_d454 ====================================
++++++++ WHILE START : 29135 
++++++++ WHILE FUNCTION : function_d454 
++++++++ WHILE END : 29317 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		sendto(fd, (int32_t *)message, 60, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
		sendto(fd, (int32_t *)message, 60, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
=============================WHILE LOOPS ID : 21 @ function_db98 ====================================
++++++++ WHILE START : 29696 
++++++++ WHILE FUNCTION : function_db98 
++++++++ WHILE END : 29734 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t sock_fd = socket(AF_INET, 17, IPPROTO_UDP); // 0xdce8
		if (sock_fd == -1) {
		return sock_fd;
		bind(sock_fd, (struct sockaddr *)&addr, 16);
		_connect(v358, a2, 16);
=============================WHILE LOOPS ID : 22 @ function_db98 ====================================
++++++++ WHILE START : 29737 
++++++++ WHILE FUNCTION : function_db98 
++++++++ WHILE END : 29800 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		int32_t sock; // 0xde00
		send(sock, (int32_t *)buf, length, MSG_NOSIGNAL);
		send(sock, (int32_t *)buf, length, MSG_NOSIGNAL);
		int32_t sock2; // 0xde54
		send(sock2, (int32_t *)buf2, length, MSG_NOSIGNAL);
		send(sock2, (int32_t *)buf2, length, MSG_NOSIGNAL);
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 26 @ function_de7c ====================================
++++++++ WHILE START : 30246 
++++++++ WHILE FUNCTION : function_de7c 
++++++++ WHILE END : 30389 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a2 + 24 * option_value), 16);
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a2 + 24 * option_value), 16);
=============================WHILE LOOPS ID : 30 @ function_e508 ====================================
++++++++ WHILE START : 30843 
++++++++ WHILE FUNCTION : function_e508 
++++++++ WHILE END : 30946 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		sendto(fd, (int32_t *)message, v348 + 32, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
=============================WHILE LOOPS ID : 32 @ function_e9cc ====================================
++++++++ WHILE START : 31362 
++++++++ WHILE FUNCTION : function_e9cc 
++++++++ WHILE END : 31736 
++++++++ INTRESTING INSTRUCTIONS :  
		result = inet_addr((char *)&cp);
		sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
		if (sock_fd == -1) {
		return sock_fd;
		if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
		result2 = close(sock_fd);
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		sendto(sock_fd, (int32_t *)fd, v356 + 47, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
		result = inet_addr((char *)&cp);
		sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
		if (sock_fd == -1) {
		return sock_fd;
		if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
		result2 = close(sock_fd);
		while (true) {
=============================WHILE LOOPS ID : 40 @ function_f29c ====================================
++++++++ WHILE START : 33625 
++++++++ WHILE FUNCTION : function_f29c 
++++++++ WHILE END : 34139 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		close(fd2);
		dirp = opendir((char *)name);
		while (true) {
		while (true) {
		struct __dirstream * dirp2 = opendir((char *)&path); // 0xf640
		while (true) {
		while (true) {
		kill(function_13ac8((char *)v387, 10), SIGKILL);
		struct dirent * v404 = readdir((struct __dirstream *)dirp3); // 0xf73c
		struct dirent * v405 = readdir((struct __dirstream *)dirp3); // 0xf650
		closedir((struct __dirstream *)dirp3);
		v396 = readdir((struct __dirstream *)fd2);
		closedir((struct __dirstream *)dirp4);
		closedir((struct __dirstream *)dirp3);
		v396 = readdir((struct __dirstream *)fd2);
		struct dirent * v415 = readdir((struct __dirstream *)fd2); // 0xf55c
		closedir((struct __dirstream *)fd2);
		closedir((struct __dirstream *)fd2);
		close(fd2);
		dirp = opendir((char *)name);
		while (true) {
		closedir((struct __dirstream *)fd2);
=============================WHILE LOOPS ID : 42 @ function_f808 ====================================
++++++++ WHILE START : 34585 
++++++++ WHILE FUNCTION : function_f808 
++++++++ WHILE END : 35155 
++++++++ INTRESTING INSTRUCTIONS :  
		struct __dirstream * v355 = opendir((char *)function_12f90(6, NULL)); // 0xf9e8
		struct dirent * v356 = readdir((struct __dirstream *)dirp); // 0xfa00119
		while (true) {
		while (true) {
		int32_t fd2 = open((char *)&path2, O_RDONLY); // 0xfc54
		close(fd2);
		while (true) {
		while (true) {
		close(fd2);
		kill(time_val, SIGKILL);
		v363 = readdir((struct __dirstream *)dirp);
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		close(fd2);
		kill(time_val, SIGKILL);
		int32_t pid2 = getpid(); // 0xfbec
		int32_t ppid = getppid(); // 0xfbf8
		int32_t fd3 = open((char *)buf2, O_RDONLY); // 0xfc30
		kill(time_val, SIGKILL);
		close(fd4);
		v363 = readdir((struct __dirstream *)dirp);
		v363 = readdir((struct __dirstream *)dirp);
		struct dirent * v424 = readdir((struct __dirstream *)dirp); // 0xfa80
		v363 = readdir((struct __dirstream *)dirp2);
		v363 = readdir((struct __dirstream *)dirp2);
		v363 = readdir((struct __dirstream *)dirp);
		closedir((struct __dirstream *)dirp);
		closedir((struct __dirstream *)dirp);
=============================WHILE LOOPS ID : 43 @ function_10168 ====================================
++++++++ WHILE START : 36749 
++++++++ WHILE FUNCTION : function_10168 
++++++++ WHILE END : 37065 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		int32_t sock2;
		while (true) {
		v373 = sock2;
		int32_t sock;
		if (sock == -1) {
		int32_t sock_fd = socket(AF_INET, SOCK_STREAM, protocol); // 0x10918
		int32_t fd5 = sock_fd; // r5
		if (sock_fd != -1) {
		fcntl(sock_fd, F_GETFL);
		_connect(sock, (int32_t)&v333, 16);
		uint32_t v379 = sock; // 0x107cc
		int32_t v383 = sock; // 0x106b8
		int32_t v384 = sock2; // 0x106d4
		if (sock2 < v383) {
		send(sock, (int32_t *)&buf2, 2, MSG_NOSIGNAL);
		if (sock2 != -1) {
		if ((v391 >> sock2 % 32) % 2 != 0) {
		int32_t accepted_sock_fd = accept(sock2, (struct sockaddr *)&addr, &addr_len); // 0x10a14
		int32_t v392 = function_11398(accepted_sock_fd); // 0x10a18
		kill(-v352, SIGKILL);
		uint32_t sock3 = sock; // 0x107fc
		if (sock3 != -1) {
		if ((v396 >> sock3 % 32) % 2 != 0) {
		int32_t v397 = _recv(sock, v364, 2, 0x4002); // 0x10858
		__pseudo_cond_branch(sock != -1, (int32_t)&v395);
		sock = -1;
		_recv(sock, v364, 2, 0x4000);
		close(sock);
		int32_t v409 = _recv(sock, v363, (int32_t)v407 | 256 * v408, 0x4002); // 0x108d4
		_recv(sock, v364, 2, 0x4000);
		_recv(sock, v363, 256 * (int32_t)v410 | v408, 0x4000);
		if ((v414 >> sock3 % 32) % 2 == 0) {
		__pseudo_cond_branch(sock3 != -1, (int32_t)&v395);
		getsockopt(sock3, SO_DEBUG, 4, &addr_len, &option_len);
		int32_t sock4; // 0x10a5c
		send(sock4, &buf3, 4, MSG_NOSIGNAL);
		int32_t sock5; // 0x10a6c
		send(sock5, (int32_t *)&buf2, 1, MSG_NOSIGNAL);
		int32_t sock6; // 0x10a88
		send(sock6, &buf4, length, MSG_NOSIGNAL);
		close(sock);
		v373 = sock2;
=============================WHILE LOOPS ID : 50 @ function_10e4c ====================================
++++++++ WHILE START : 39556 
++++++++ WHILE FUNCTION : function_10e4c 
++++++++ WHILE END : 39954 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t sock_fd = socket(AF_INET, 0, IPPROTO_IP); // 0x10fd8
		int32_t fd = sock_fd; // r7
		if (sock_fd == -1) {
		close(fd);
		free(mem);
		int32_t v374 = _connect(sock_fd, v359, 16); // 0x10ff4
		int32_t v376 = send(fd, (int32_t *)&buf, length, MSG_NOSIGNAL); // 0x11010
		close(fd);
		free(mem);
		int32_t v385 = recvfrom(fd, (int32_t *)&buf2, 2048, MSG_NOSIGNAL, (struct sockaddr *)addr, (int32_t *)addr); // 0x110e8
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		close(fd);
		free(mem);
		close(fd);
		free(mem);
=============================WHILE LOOPS ID : 52 @ function_11624 ====================================
++++++++ WHILE START : 41450 
++++++++ WHILE FUNCTION : function_11624 
++++++++ WHILE END : 43301 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0x116e8
		sock = sock_fd;
		if (sock_fd == -1) {
		fcntl(sock_fd, F_GETFL);
		fcntl(sock_fd, F_SETFL);
		if (setsockopt(sock, status, 3, &status, 4) != 0) {
		close(sock);
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		uint32_t v354 = recvfrom(sock, &buf, 1514, MSG_NOSIGNAL, NULL, NULL); // 0x11f0c
		while (true) {
		close(fd);
		while (true) {
		int32_t sock17; // 0x1229c
		if (sock17 != -1) {
		if ((v379 >> sock17 % 32) % 2 == 0) {
		v377 = sock17;
		while (true) {
		while (true) {
		int32_t v391 = _recv(v390, v389, 256 - v388, 0x4000); // 0x12414
		close(fd2);
		while (true) {
		case 2: {
		while (true) {
		while (true) {
		int32_t sock2; // 0x12db4
		send(sock2, &buf2, 3, MSG_NOSIGNAL);
		send(0x4000, (int32_t *)buf3, 3, MSG_NOSIGNAL);
		send(0x4000, (int32_t *)(int32_t)&buf4, 9, MSG_NOSIGNAL);
		while (true) {
		case 2: {
		while (true) {
		case 3: {
		while (true) {
		int32_t sock3; // 0x125d8
		send(sock3, (int32_t *)buf5, (int32_t)length, MSG_NOSIGNAL);
		int32_t sock4; // 0x125f0
		send(sock4, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 4: {
		while (true) {
		int32_t sock5; // 0x12768
		send(sock5, (int32_t *)buf6, (int32_t)length2, MSG_NOSIGNAL);
		int32_t sock6; // 0x12780
		send(sock6, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 5: {
		while (true) {
		int32_t sock7; // 0x12820
		send(sock7, (int32_t *)buf7, length3, MSG_NOSIGNAL);
		int32_t sock8; // 0x12834
		send(sock8, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		while (true) {
		while (true) {
		case 6: {
		while (true) {
		int32_t sock9; // 0x128d4
		send(sock9, (int32_t *)buf8, length4, MSG_NOSIGNAL);
		int32_t sock10; // 0x128e8
		send(sock10, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 7: {
		while (true) {
		int32_t sock11; // 0x12a3c
		send(sock11, (int32_t *)buf9, length4, MSG_NOSIGNAL);
		int32_t sock12; // 0x12a50
		send(sock12, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 8: {
		while (true) {
		int32_t sock13; // 0x12988
		send(sock13, (int32_t *)buf10, length3, MSG_NOSIGNAL);
		int32_t sock14; // 0x1299c
		send(sock14, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 9: {
		while (true) {
		int32_t sock15; // 0x12c48
		send(sock15, (int32_t *)buf11, length3, MSG_NOSIGNAL);
		int32_t sock16; // 0x12c5c
		send(sock16, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 10: {
		int32_t v522 = fork(); // 0x12b20
		int32_t sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0x12b50
		buf3 = sock_fd2;
		if (sock_fd2 == -1) {
		if (_connect(buf3, v351, 16) == -1) {
		close(buf3);
		send(buf3, &length3, 1, MSG_NOSIGNAL);
		send(buf3, &length4, 4, MSG_NOSIGNAL);
		send(buf3, &buf12, 2, MSG_NOSIGNAL);
		send(buf3, (int32_t *)(v525 + 12), 1, MSG_NOSIGNAL);
		send(buf3, (int32_t *)buf13, (int32_t)length5, MSG_NOSIGNAL);
		send(buf3, (int32_t *)(v525 + 13), 1, MSG_NOSIGNAL);
		send(buf3, (int32_t *)buf14, (int32_t)length6, MSG_NOSIGNAL);
		close(buf3);
		close(fd3);
		close(fd4);
		while (true) {
		case 3: {
		case 4: {
		case 5: {
		case 6: {
		case 7: {
		case 8: {
		case 9: {
		case 10: {
		close(fd2);
		while (true) {
		if ((length4 | getsockopt(sock17, SO_DEBUG, 4, &length4, &length3)) == 0) {
		while (true) {
		close(fd5);
		while (true) {
=============================WHILE LOOPS ID : 80 @ __udivsi3 ====================================
++++++++ WHILE START : 50924 
++++++++ WHILE FUNCTION : __udivsi3 
++++++++ WHILE END : 51136 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 81 @ __umodsi3 ====================================
++++++++ WHILE START : 51867 
++++++++ WHILE FUNCTION : __umodsi3 
++++++++ WHILE END : 52221 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 82 @ __modsi3 ====================================
++++++++ WHILE START : 52645 
++++++++ WHILE FUNCTION : __modsi3 
++++++++ WHILE END : 53025 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
