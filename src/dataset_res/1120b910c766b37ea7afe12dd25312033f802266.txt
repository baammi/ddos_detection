=============================================================================
========	BINARY ID :1120b910c766b37ea7afe12dd25312033f802266==================================================
================================================================================
================================================================================
========	STRINGS SUMMARY : =====================================================
================================================================================
TOTAL STRINGS COUNT :266
SUPSCPECTED LINES COUNT :10
SUPSCPECTED STRINGS COUNT (DISTINCT) :9
SUPSCPECTED STRINGS WEIGHT :31
SUSPECT STRING SCORE : [31 / 150] 20%
USER AGENTS STRINGS COUNT :0
STATIC IPs STRINGS COUNT :0
DYNAMIC IPs STRINGS COUNT :0
================================================================================
========	STRINGS DETAILS : =====================================================
================================================================================
================================================================================
========	SUSPECTED STRINGS : =====================================================
================================================================================
connect
getpid
socket
kill
bind
inet_addr
fork
getppid
sigprocmask
\rëꀐӣꀀꇣ\rǫ퀠å퀰˥茴䏡ꀔӡꀀϣ옐˥옰烥뵀ꏨ\r⓪ƺ　ⵀө䷐磢￩ǫ瀀ãꀰēꀰ
================================================================================
========	USER AGENTS STRINGS : =====================================================
================================================================================
================================================================================
========	STATIC IP ADRESSES : =====================================================
================================================================================
================================================================================
========	DYNAMIC IP MASKS : =====================================================
================================================================================
================================================================================
========	/proc FOLDER ACCESS : =====================================================
================================================================================
================================================================================
========	HISTORY TEMPERING : =====================================================
================================================================================
================================================================================
========	AUTOINSTALL COMMANDS : =====================================================
================================================================================
================================================================================
========	FUNCTIONS SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES			: 47822
+++TOTAL FUNCTIONS 			:117
+++LINES PER FUNCTION RATIO 	: 408.735042735043
+++SUSPECTED LINES COUNT 	: 678
+++SUSPECTED LINES RATIO 	: 1.41775751746058
================================================================================
========	WHILES SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES				: 47822
+++WHILE (TRUE) LINES			: 8625
+++WHILE (TRUE) LINES RATION		:18.0356321358371%
+++WHILE (TRUE) LOOPS COUNT		: 75
================================================================================
========	SYSTEM FILES SUMMARY : ================================================
================================================================================
================================================================================
========	IP PATTERNS SUMMARY : =================================================
================================================================================
================================================================================
========	SYSTEM CALLS SUMMARY : ================================================
================================================================================
================================================================================
========	FUNCTIONS LIST : =======================================================
================================================================================
FUNCTION_NAME                                     |ARGS|LENGH   |SUSPCET_INSTRC|WHILE_INSTRC|
----------------------------------------------------------------------------------------------
function_f90c                                     |1   |2682    |119           |2164        |
----------------------------------------------------------------------------------------------
function_e7f4                                     |2   |755     |55            |316         |
----------------------------------------------------------------------------------------------
function_da64                                     |1   |1329    |48            |974         |
----------------------------------------------------------------------------------------------
function_9038                                     |4   |1528    |48            |859         |
----------------------------------------------------------------------------------------------
function_cc04                                     |5   |996     |47            |399         |
----------------------------------------------------------------------------------------------
function_d4f4                                     |1   |957     |38            |525         |
----------------------------------------------------------------------------------------------
function_a4dc                                     |5   |695     |32            |333         |
----------------------------------------------------------------------------------------------
function_f134                                     |1   |810     |28            |428         |
----------------------------------------------------------------------------------------------
function_bd44                                     |5   |447     |17            |51          |
----------------------------------------------------------------------------------------------
function_c068                                     |5   |566     |13            |190         |
----------------------------------------------------------------------------------------------
function_b5c4                                     |5   |590     |11            |232         |
----------------------------------------------------------------------------------------------
function_ae08                                     |5   |603     |11            |242         |
----------------------------------------------------------------------------------------------
function_9da4                                     |5   |568     |10            |214         |
----------------------------------------------------------------------------------------------
function_e508                                     |1   |346     |10            |0           |
----------------------------------------------------------------------------------------------
function_95fc                                     |5   |572     |10            |218         |
----------------------------------------------------------------------------------------------
function_c708                                     |5   |489     |8             |109         |
----------------------------------------------------------------------------------------------
function_12b90                                    |3   |506     |8             |70          |
----------------------------------------------------------------------------------------------
function_129e4                                    |0   |320     |7             |0           |
----------------------------------------------------------------------------------------------
function_efe8                                     |1   |306     |7             |0           |
----------------------------------------------------------------------------------------------
function_e708                                     |1   |336     |5             |5           |
----------------------------------------------------------------------------------------------
function_f694                                     |0   |325     |5             |0           |
----------------------------------------------------------------------------------------------
__udivsi3                                         |2   |663     |5             |212         |
----------------------------------------------------------------------------------------------
__modsi3                                          |2   |768     |5             |380         |
----------------------------------------------------------------------------------------------
__umodsi3                                         |2   |703     |5             |354         |
----------------------------------------------------------------------------------------------
function_12b0c                                    |3   |450     |5             |40          |
----------------------------------------------------------------------------------------------
function_8f5c                                     |5   |347     |4             |16          |
----------------------------------------------------------------------------------------------
function_12858                                    |2   |537     |4             |147         |
----------------------------------------------------------------------------------------------
function_12a80                                    |3   |399     |3             |48          |
----------------------------------------------------------------------------------------------
function_12754                                    |2   |359     |3             |24          |
----------------------------------------------------------------------------------------------
_getsockname                                      |4   |305     |2             |0           |
----------------------------------------------------------------------------------------------
_kill                                             |2   |305     |2             |0           |
----------------------------------------------------------------------------------------------
_setsockopt                                       |5   |305     |2             |0           |
----------------------------------------------------------------------------------------------
_sigprocmask                                      |5   |305     |2             |0           |
----------------------------------------------------------------------------------------------
function_f110                                     |2   |314     |2             |0           |
----------------------------------------------------------------------------------------------
_sendto                                           |7   |305     |2             |0           |
----------------------------------------------------------------------------------------------
function_127f0                                    |4   |334     |2             |20          |
----------------------------------------------------------------------------------------------
_send                                             |4   |305     |2             |0           |
----------------------------------------------------------------------------------------------
_getsockopt                                       |6   |305     |2             |0           |
----------------------------------------------------------------------------------------------
_closedir                                         |2   |305     |2             |0           |
----------------------------------------------------------------------------------------------
_accept                                           |4   |305     |2             |0           |
----------------------------------------------------------------------------------------------
function_12984                                    |3   |333     |2             |24          |
----------------------------------------------------------------------------------------------
function_8fc8                                     |5   |347     |2             |16          |
----------------------------------------------------------------------------------------------
_getpid                                           |0   |305     |2             |0           |
----------------------------------------------------------------------------------------------
_connect                                          |4   |305     |2             |0           |
----------------------------------------------------------------------------------------------
_recvfrom                                         |8   |305     |2             |0           |
----------------------------------------------------------------------------------------------
_close                                            |1   |305     |2             |0           |
----------------------------------------------------------------------------------------------
function_8ef8                                     |5   |337     |2             |15          |
----------------------------------------------------------------------------------------------
_socket                                           |3   |305     |2             |0           |
----------------------------------------------------------------------------------------------
function_d4e0                                     |1   |312     |2             |0           |
----------------------------------------------------------------------------------------------
_recv                                             |4   |305     |2             |0           |
----------------------------------------------------------------------------------------------
_open                                             |3   |305     |2             |0           |
----------------------------------------------------------------------------------------------
_fork                                             |0   |305     |2             |0           |
----------------------------------------------------------------------------------------------
_inet_addr                                        |1   |305     |2             |0           |
----------------------------------------------------------------------------------------------
_listen                                           |2   |305     |2             |0           |
----------------------------------------------------------------------------------------------
function_f680                                     |1   |312     |2             |0           |
----------------------------------------------------------------------------------------------
_getppid                                          |0   |305     |2             |0           |
----------------------------------------------------------------------------------------------
_unlink                                           |1   |305     |1             |0           |
----------------------------------------------------------------------------------------------
function_12fa0                                    |0   |306     |1             |0           |
----------------------------------------------------------------------------------------------
_sigemptyset                                      |2   |305     |1             |0           |
----------------------------------------------------------------------------------------------
function_9314                                     |1   |342     |1             |0           |
----------------------------------------------------------------------------------------------
_write                                            |3   |305     |1             |0           |
----------------------------------------------------------------------------------------------
function_11f04                                    |4   |426     |1             |0           |
----------------------------------------------------------------------------------------------
__aeabi_ldiv0                                     |0   |306     |1             |0           |
----------------------------------------------------------------------------------------------
function_ef90                                     |0   |311     |1             |0           |
----------------------------------------------------------------------------------------------
function_12f6c                                    |1   |321     |1             |0           |
----------------------------------------------------------------------------------------------
function_11e4c                                    |1   |345     |1             |0           |
----------------------------------------------------------------------------------------------
function_e4f0                                     |1   |305     |1             |0           |
----------------------------------------------------------------------------------------------
function_d430                                     |4   |375     |1             |0           |
----------------------------------------------------------------------------------------------
_atoi                                             |1   |305     |1             |0           |
----------------------------------------------------------------------------------------------
function_8ddc                                     |0   |337     |1             |0           |
----------------------------------------------------------------------------------------------
function_8b64                                     |2   |312     |1             |0           |
----------------------------------------------------------------------------------------------
function_f044                                     |2   |325     |1             |0           |
----------------------------------------------------------------------------------------------
__aeabi_uidivmod                                  |2   |305     |1             |0           |
----------------------------------------------------------------------------------------------
*                                                 |0   |305     |1             |0           |
----------------------------------------------------------------------------------------------
function_d3d4                                     |2   |344     |1             |0           |
----------------------------------------------------------------------------------------------
_sigaddset                                        |3   |305     |1             |0           |
----------------------------------------------------------------------------------------------
_setsid                                           |0   |305     |1             |0           |
----------------------------------------------------------------------------------------------
_sleep                                            |1   |305     |1             |0           |
----------------------------------------------------------------------------------------------
function_8e50                                     |2   |313     |1             |0           |
----------------------------------------------------------------------------------------------
_readlink                                         |4   |305     |1             |0           |
----------------------------------------------------------------------------------------------
function_127a8                                    |3   |317     |1             |0           |
----------------------------------------------------------------------------------------------
function_d3cc                                     |1   |313     |1             |0           |
----------------------------------------------------------------------------------------------
function_1272c                                    |1   |318     |1             |0           |
----------------------------------------------------------------------------------------------
_select                                           |9   |305     |1             |0           |
----------------------------------------------------------------------------------------------
function_8e5c                                     |0   |310     |1             |0           |
----------------------------------------------------------------------------------------------
function_f768                                     |3   |358     |1             |0           |
----------------------------------------------------------------------------------------------
_ioctl                                            |2   |305     |1             |0           |
----------------------------------------------------------------------------------------------
__data_start                                      |2   |311     |1             |0           |
----------------------------------------------------------------------------------------------
___uClibc_main                                    |7   |305     |1             |0           |
----------------------------------------------------------------------------------------------
_read                                             |3   |305     |1             |0           |
----------------------------------------------------------------------------------------------
function_127cc                                    |0   |323     |1             |0           |
----------------------------------------------------------------------------------------------
function_12fa8                                    |0   |307     |1             |0           |
----------------------------------------------------------------------------------------------
function_8b4c                                     |0   |306     |1             |0           |
----------------------------------------------------------------------------------------------
function_8eb4                                     |0   |306     |1             |0           |
----------------------------------------------------------------------------------------------
_time                                             |1   |305     |1             |0           |
----------------------------------------------------------------------------------------------
_bind                                             |4   |305     |1             |0           |
----------------------------------------------------------------------------------------------
__start                                           |2   |309     |1             |0           |
----------------------------------------------------------------------------------------------
function_11d68                                    |2   |316     |1             |0           |
----------------------------------------------------------------------------------------------
function_11d94                                    |1   |345     |1             |0           |
----------------------------------------------------------------------------------------------
_clock                                            |0   |305     |1             |0           |
----------------------------------------------------------------------------------------------
_fcntl                                            |2   |305     |1             |0           |
----------------------------------------------------------------------------------------------
_prctl                                            |5   |305     |1             |0           |
----------------------------------------------------------------------------------------------
function_e678                                     |0   |326     |1             |0           |
----------------------------------------------------------------------------------------------
_malloc                                           |1   |0       |0             |0           |
----------------------------------------------------------------------------------------------
___errno_location                                 |0   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_calloc                                           |2   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_memset                                           |3   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_realloc                                          |2   |0       |0             |0           |
----------------------------------------------------------------------------------------------
__dirstream                                       |2   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_exit                                             |1   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_memcpy                                           |4   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_free                                             |1   |0       |0             |0           |
----------------------------------------------------------------------------------------------
sig,                                              |1   |0       |0             |0           |
----------------------------------------------------------------------------------------------
dirent                                            |3   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_memmove                                          |4   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_strcpy                                           |3   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_abort                                            |0   |0       |0             |0           |
----------------------------------------------------------------------------------------------
================================================================================
========	FUNCTIONS SUSPECTED INSTRUNCTIONS : ===================================
================================================================================
=================FUNCTION : function_f90c ===================
++++++++ FUNCTION START 35390
++++++++ FUNCTION END 38072
++++++++ FUNCTION LENGTH 2682
    struct sockaddr * v108;
    int32_t result = fork(); // 0xf914
    int32_t sock;
    while (true) {
            int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xfc80
            sock = sock_fd;
            if (sock_fd == -1) {
            fcntl(sock_fd, F_GETFL);
            fcntl(sock_fd, F_SETFL);
            if (setsockopt(sock, status, 3, &status, 4) != 0) {
                close(sock);
            while (true) {
                    while (true) {
                        while (true) {
                while (true) {
                    uint32_t v312 = recvfrom(sock, &buf, 1514, MSG_NOSIGNAL, NULL, NULL); // 0x10ce4
                        while (true) {
                                close(fd);
                        while (true) {
                            int32_t sock18; // 0x11074
                            if (sock18 != -1) {
                                if ((v337 >> sock18 % 32) % 2 == 0) {
                                    v335 = sock18;
                                            while (true) {
                                                while (true) {
                                                    int32_t sock2; // 0x1124c
                                                    int32_t v347 = recv(sock2, (int32_t *)buf2, 256 - v346, MSG_NOSIGNAL); // 0x1125c
                                                                    close(fd2);
                                                                while (true) {
                                                                        case 2: {
                                                                                while (true) {
                                                                                    while (true) {
                                                                                                                int32_t sock3; // 0x11b44
                                                                                                                send(sock3, &buf3, 3, MSG_NOSIGNAL);
                                                                                                                            send(0x4000, (int32_t *)buf4, 3, MSG_NOSIGNAL);
                                                                                                            send(0x4000, (int32_t *)(int32_t)&buf5, 9, MSG_NOSIGNAL);
                                                                                                            while (true) {
                                                                                                                    case 2: {
                                                                                                                            while (true) {
                                                                                                                    case 3: {
                                                                                                                            while (true) {
                                                                                                                                    int32_t sock4; // 0x11430
                                                                                                                                    send(sock4, (int32_t *)buf6, (int32_t)length, MSG_NOSIGNAL);
                                                                                                                                    int32_t sock5; // 0x11448
                                                                                                                                    send(sock5, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                    case 4: {
                                                                                                                            while (true) {
                                                                                                                                    int32_t sock6; // 0x114c8
                                                                                                                                    send(sock6, (int32_t *)buf7, (int32_t)length2, MSG_NOSIGNAL);
                                                                                                                                    int32_t sock7; // 0x114e0
                                                                                                                                    send(sock7, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                    case 5: {
                                                                                                                            while (true) {
                                                                                                                                    int32_t sock8; // 0x11580
                                                                                                                                    send(sock8, (int32_t *)buf8, length3, MSG_NOSIGNAL);
                                                                                                                                    int32_t sock9; // 0x11594
                                                                                                                                    send(sock9, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                                while (true) {
                                                                                                                        while (true) {
                                                                                                                    case 6: {
                                                                                                                        while (true) {
                                                                                                                            int32_t sock10; // 0x11634
                                                                                                                            send(sock10, (int32_t *)buf9, length4, MSG_NOSIGNAL);
                                                                                                                            int32_t sock11; // 0x11648
                                                                                                                            send(sock11, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                    case 7: {
                                                                                                                        while (true) {
                                                                                                                            int32_t sock12; // 0x1179c
                                                                                                                            send(sock12, (int32_t *)buf10, length4, MSG_NOSIGNAL);
                                                                                                                            int32_t sock13; // 0x117b0
                                                                                                                            send(sock13, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                    case 8: {
                                                                                                                        while (true) {
                                                                                                                            int32_t sock14; // 0x116e8
                                                                                                                            send(sock14, (int32_t *)buf11, length3, MSG_NOSIGNAL);
                                                                                                                            int32_t sock15; // 0x116fc
                                                                                                                            send(sock15, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                    case 9: {
                                                                                                                        while (true) {
                                                                                                                            int32_t sock16; // 0x119a8
                                                                                                                            send(sock16, (int32_t *)buf12, length3, MSG_NOSIGNAL);
                                                                                                                            int32_t sock17; // 0x119bc
                                                                                                                            send(sock17, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                    case 10: {
                                                                                                                            int32_t v488 = fork(); // 0x11880
                                                                                                                                    int32_t sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0x118b0
                                                                                                                                    buf4 = sock_fd2;
                                                                                                                                    if (sock_fd2 == -1) {
                                                                                                                                        if (connect(buf4, (struct sockaddr *)&addr, 16) == -1) {
                                                                                                                                            close(buf4);
                                                                                                                                        send(buf4, &length3, 1, MSG_NOSIGNAL);
                                                                                                                                        send(buf4, &length4, 4, MSG_NOSIGNAL);
                                                                                                                                        send(buf4, &buf13, 2, MSG_NOSIGNAL);
                                                                                                                                        send(buf4, (int32_t *)(v491 + 12), 1, MSG_NOSIGNAL);
                                                                                                                                        send(buf4, (int32_t *)buf14, (int32_t)length5, MSG_NOSIGNAL);
                                                                                                                                        send(buf4, (int32_t *)(v491 + 13), 1, MSG_NOSIGNAL);
                                                                                                                                        send(buf4, (int32_t *)buf15, (int32_t)length6, MSG_NOSIGNAL);
                                                                                                                                        close(buf4);
                                                                                                                            close(fd3);
                                                                                                                            close(fd4);
                                                                                    while (true) {
                                                                        case 3: {
                                                                        case 4: {
                                                                        case 5: {
                                                                        case 6: {
                                                                        case 7: {
                                                                        case 8: {
                                                                        case 9: {
                                                                        case 10: {
                                                        close(fd2);
                                                        while (true) {
                                    if ((length4 | getsockopt(sock18, SO_DEBUG, 4, &length4, &length3)) == 0) {
                                            while (true) {
                                        close(fd5);
                        while (true) {
                    sendto(sock, &message, 40, MSG_NOSIGNAL, (struct sockaddr *)&addr, 16);
                    while (true) {
        while (true) {
    while (true) {
=================FUNCTION : function_e7f4 ===================
++++++++ FUNCTION START 31547
++++++++ FUNCTION END 32302
++++++++ FUNCTION LENGTH 755
    sigprocmask(how, (struct _TYPEDEF_sigset_t *)&set, (struct _TYPEDEF_sigset_t *)how);
    struct sockaddr * addr;
        if (fork() > fd2) {
        close(fd2);
        close(1);
        v309 = close(2);
        while (true) {
                while (true) {
                int32_t sock2;
                    while (true) {
                    v332 = sock2;
                    int32_t sock;
                    if (sock == -1) {
                        int32_t sock_fd = socket(AF_INET, SOCK_STREAM, protocol); // 0xed54
                        int32_t fd3 = sock_fd; // r5
                        if (sock_fd != -1) {
                            fcntl(sock_fd, F_GETFL);
                            connect(sock, (struct sockaddr *)&addr, 16);
                    uint32_t v337 = sock; // 0xec10
                    int32_t v341 = sock; // 0xeb08
                    int32_t v342 = sock2; // 0xeb2c
                    if (sock2 < v341) {
                                send(sock, (int32_t *)&buf2, 2, MSG_NOSIGNAL);
                        if (sock2 != -1) {
                            if ((v348 >> sock2 % 32) % 2 != 0) {
                                int32_t accepted_sock_fd = accept(sock2, (struct sockaddr *)&addr2, &addr_len); // 0xee4c
                                function_d4e0(function_f680(accepted_sock_fd));
                                kill(-v308, SIGKILL);
                        uint32_t sock3 = sock; // 0xec3c
                            if (sock3 != -1) {
                                if ((v352 >> sock3 % 32) % 2 != 0) {
                                    int32_t v353 = recv(sock, (int32_t *)&buf2, 2, MSG_PEEK | MSG_NOSIGNAL); // 0xec94
                                                __pseudo_cond_branch(sock != -1, (int32_t)&v351);
                                                sock = -1;
                                            recv(sock, (int32_t *)&buf2, 2, MSG_NOSIGNAL);
                                                close(sock);
                                            int32_t v365 = recv(sock, &buf3, (int32_t)v363 | 256 * v364, MSG_PEEK | MSG_NOSIGNAL); // 0xed10
                                            recv(sock, (int32_t *)&buf2, 2, MSG_NOSIGNAL);
                                            recv(sock, &buf3, 256 * (int32_t)v366 | v364, MSG_NOSIGNAL);
                            if ((v370 >> sock3 % 32) % 2 == 0) {
                                __pseudo_cond_branch(sock3 != -1, (int32_t)&v351);
                                getsockopt(sock3, SO_DEBUG, 4, &addr_len, &option_len);
                                    int32_t sock4; // 0xee94
                                    send(sock4, &buf4, 4, MSG_NOSIGNAL);
                                    int32_t sock5; // 0xeea4
                                    send(sock5, (int32_t *)&buf2, 1, MSG_NOSIGNAL);
                                    int32_t sock6; // 0xeec0
                                    send(sock6, &buf5, length, MSG_NOSIGNAL);
                                    close(sock);
                v332 = sock2;
    if (fork() > fd2) {
    close(fd2);
    close(1);
    v309 = close(2);
    while (true) {
=================FUNCTION : function_da64 ===================
++++++++ FUNCTION START 28890
++++++++ FUNCTION END 30219
++++++++ FUNCTION LENGTH 1329
    struct sockaddr * v180;
    int32_t result = fork(); // 0xda7c
    int32_t sock = 2; // bp-100
    int32_t sock_fd = socket(AF_INET, SOCK_STREAM, protocol); // 0xdaec
    if (sock_fd != -1) {
        bind((int32_t)&sock, (struct sockaddr *)16, 16);
        listen(sock_fd, 1);
    int32_t pid = getpid(); // 0xdb74
    int32_t fd = open((char *)&path, protocol); // 0xdbbc
        close(fd);
        while (true) {
            struct __dirstream * v309 = opendir((char *)function_11d68(6, NULL)); // 0xdc4c
                struct dirent * v310 = readdir((struct __dirstream *)dirp); // 0xdc64221
                    while (true) {
                        while (true) {
                                        int32_t fd2 = open((char *)&path2, O_RDONLY); // 0xde9c
                                                while (true) {
                                                        while (true) {
                                                                    close(protocol);
                                                                    kill(pid3, SIGKILL);
                                                                    v313 = readdir((struct __dirstream *)dirp);
                                                                while (true) {
                                                                        while (true) {
                                                                                while (true) {
                                                                                        while (true) {
                                                                                                while (true) {
                                                                                                        while (true) {
                                                                                                                while (true) {
                                                                                                                        while (true) {
                                                                                                                                while (true) {
                                                                                                                                        while (true) {
                                                                                                                                                while (true) {
                                                close(protocol);
                                            close(protocol);
                                            kill(pid3, SIGKILL);
                                        int32_t pid2 = getpid(); // 0xde38
                                            int32_t ppid = getppid(); // 0xde44
                                                    int32_t fd3 = open((char *)buf2, O_RDONLY); // 0xde7c
                                                        kill(pid3, SIGKILL);
                                                    close(fd4);
                                                v313 = readdir((struct __dirstream *)dirp);
                                    v313 = readdir((struct __dirstream *)dirp);
                                        struct dirent * v448 = readdir((struct __dirstream *)dirp); // 0xdcdc
                                    v313 = readdir((struct __dirstream *)dirp2);
                                v313 = readdir((struct __dirstream *)dirp2);
                            v313 = readdir((struct __dirstream *)dirp);
                        closedir((struct __dirstream *)dirp);
                closedir((struct __dirstream *)dirp);
=================FUNCTION : function_9038 ===================
++++++++ FUNCTION START 19145
++++++++ FUNCTION END 20673
++++++++ FUNCTION LENGTH 1528
    struct sockaddr * v181;
        while (true) {
                                        while (true) {
                                                v323 = fork();
                                                        while (true) {
                                                    free((int32_t *)v320);
                                                    while (true) {
                                                free((int32_t *)v320);
                                                while (true) {
                                                free((int32_t *)v320);
                                                while (true) {
                                            free((int32_t *)v320);
                                            while (true) {
                                free((int32_t *)v320);
                                while (true) {
                            free((int32_t *)v320);
                                while (true) {
                    v323 = fork();
                                while (true) {
                        free((int32_t *)v320);
                            while (true) {
                    free((int32_t *)v320);
                        while (true) {
                    free((int32_t *)v320);
                        while (true) {
                free((int32_t *)v320);
                    while (true) {
                            while (true) {
                                v323 = fork();
                                            while (true) {
                                    free((int32_t *)v320);
                                        while (true) {
                                free((int32_t *)v320);
                                    while (true) {
                    free((int32_t *)v320);
                        while (true) {
                free((int32_t *)v320);
                    while (true) {
        v323 = fork();
                    while (true) {
            free((int32_t *)v320);
                while (true) {
        free((int32_t *)v320);
            while (true) {
        free((int32_t *)v320);
            while (true) {
    free((int32_t *)v320);
        while (true) {
=================FUNCTION : function_cc04 ===================
++++++++ FUNCTION START 25575
++++++++ FUNCTION END 26571
++++++++ FUNCTION LENGTH 996
    struct sockaddr * v182;
    fd = open((char *)function_11d68(30, (int32_t *)oflag), oflag);
    int32_t sock_fd; // 0xce98
            case 0: {
            case 1: {
            case -2: {
            case -1: {
        sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
        if (sock_fd == -1) {
        if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
            result2 = close(sock_fd);
            while (true) {
    close(fd);
            while (true) {
                                inet_addr((char *)&cp);
                                sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
                                if (sock_fd == -1) {
                                if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
                                    result2 = close(sock_fd);
                                    while (true) {
                                            while (true) {
                                    while (true) {
                                                        sendto(sock_fd, (int32_t *)fd, v346 + 47, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
                            inet_addr((char *)&cp);
                            sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
                            if (sock_fd == -1) {
                            if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
                                result2 = close(sock_fd);
                            while (true) {
                case 0: {
                case 1: {
                case -2: {
                case -1: {
            sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
            if (sock_fd == -1) {
            if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
                result2 = close(sock_fd);
                while (true) {
        case 0: {
        case 1: {
        case -2: {
        case -1: {
    sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
    if (sock_fd == -1) {
    if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
        result2 = close(sock_fd);
        while (true) {
=================FUNCTION : function_d4f4 ===================
++++++++ FUNCTION START 27930
++++++++ FUNCTION END 28887
++++++++ FUNCTION LENGTH 957
    struct sockaddr * v181;
    int32_t fd = open((char *)function_11d68(6, (int32_t *)oflag), oflag); // 0xd5cc
    struct __dirstream * dirp; // 0xd7a4
        close(fd2);
            dirp = opendir((char *)name);
                    while (true) {
                closedir((struct __dirstream *)fd2);
    while (true) {
                while (true) {
                            while (true) {
                                while (true) {
                                                    while (true) {
                                                close(fd2);
                                                dirp = opendir((char *)name);
                                                    while (true) {
                                                        while (true) {
                                                                        struct __dirstream * dirp2 = opendir((char *)&path); // 0xd8a0
                                                                                while (true) {
                                                                                    while (true) {
                                                                                                    kill(function_12858((char *)v345, 10), SIGKILL);
                                                                                                    struct dirent * v363 = readdir((struct __dirstream *)dirp3); // 0xd99c
                                                                                            struct dirent * v364 = readdir((struct __dirstream *)dirp3); // 0xd8b0
                                                                                    closedir((struct __dirstream *)dirp3);
                                                                                    v354 = readdir((struct __dirstream *)fd2);
                                                                                closedir((struct __dirstream *)dirp4);
                                                                            closedir((struct __dirstream *)dirp3);
                                                                            v354 = readdir((struct __dirstream *)fd2);
                                                                struct dirent * v374 = readdir((struct __dirstream *)fd2); // 0xd7bc
                                                        closedir((struct __dirstream *)fd2);
                                                closedir((struct __dirstream *)fd2);
                                close(fd2);
                                dirp = opendir((char *)name);
                                    while (true) {
                                closedir((struct __dirstream *)fd2);
    close(fd2);
        dirp = opendir((char *)name);
                while (true) {
            closedir((struct __dirstream *)fd2);
=================FUNCTION : function_a4dc ===================
++++++++ FUNCTION START 22167
++++++++ FUNCTION END 22862
++++++++ FUNCTION LENGTH 695
    struct sockaddr * v182;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xa6d0
    if (sock_fd == -1) {
    if (setsockopt(t, SO_TYPE, option_name, &option_value, (int32_t)&option_len) == -1) {
        result2 = close(sock_fd);
            while (true) {
                while (true) {
                    int32_t sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xa760
                    t = sock_fd2;
                    if (sock_fd2 == -1) {
                        while (true) {
                            fcntl(sock_fd2, F_GETFL);
                                    connect(t, (struct sockaddr *)&addr, 16);
                                    while (true) {
                                        int32_t v339 = recvfrom(sock_fd, &buf, 256, MSG_NOSIGNAL, (struct sockaddr *)&addr2, &addr_len); // 0xa86c
                                                            close(t);
                                                    while (true) {
                                                        sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP);
                                                        v344 = sock_fd2;
                                                        v343 = sock_fd2 == -1;
                                                        t = sock_fd2;
                                                        if (sock_fd2 == -1) {
                                                    while (true) {
                                                            while (true) {
                                                                sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
                                    close(t);
                                    int32_t sock_fd3 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xa8fc
                                    t = sock_fd3;
                                    if (sock_fd3 == -1) {
                                    sock_fd2 = sock_fd3;
                while (true) {
        while (true) {
=================FUNCTION : function_f134 ===================
++++++++ FUNCTION START 33573
++++++++ FUNCTION END 34383
++++++++ FUNCTION LENGTH 810
    struct sockaddr * v182;
    int32_t sock; // bp-64
        while (true) {
        sock = 0;
        sock = 2;
        while (true) {
            int32_t sock_fd = socket(AF_INET, 0, IPPROTO_IP); // 0xf2c0
            int32_t fd = sock_fd; // r7
            if (sock_fd == -1) {
                close(fd);
                free(mem);
            if (connect((int32_t)&sock, (struct sockaddr *)16, 16) != -1) {
                if (send(fd, (int32_t *)&buf, length, MSG_NOSIGNAL) != -1) {
                        close(fd);
                        free(mem);
                            int32_t v345 = recvfrom(fd, (int32_t *)&buf2, 2048, MSG_NOSIGNAL, (struct sockaddr *)addr, (int32_t *)addr); // 0xf3d0
                                while (true) {
                                        while (true) {
                                            while (true) {
                                        while (true) {
                                            while (true) {
                    close(fd);
                    free(mem);
            close(fd);
            free(mem);
    sock = 0;
    sock = 2;
    while (true) {
=================FUNCTION : function_bd44 ===================
++++++++ FUNCTION START 24064
++++++++ FUNCTION END 24511
++++++++ FUNCTION LENGTH 447
    struct sockaddr * v182;
            int32_t sock; // 0xbfb4
            send(sock, (int32_t *)buf, length, MSG_NOSIGNAL);
                send(sock, (int32_t *)buf, length, MSG_NOSIGNAL);
        int32_t sock2; // 0xc044
        send(sock2, (int32_t *)buf2, length, MSG_NOSIGNAL);
            send(sock2, (int32_t *)buf2, length, MSG_NOSIGNAL);
    while (true) {
        int32_t sock_fd = socket(AF_INET, 17, IPPROTO_UDP); // 0xbed8
        int32_t sock3 = sock_fd; // r0
        if (sock_fd == -1) {
            return sock3;
        bind(sock3, (struct sockaddr *)&addr, 16);
            int32_t sock4; // 0xbe78
            connect(sock4, (struct sockaddr *)addr2, 16);
            int32_t sock5; // 0xbf78
            connect(sock5, (struct sockaddr *)addr3, 16);
=================FUNCTION : function_c068 ===================
++++++++ FUNCTION START 24514
++++++++ FUNCTION END 25080
++++++++ FUNCTION LENGTH 566
    struct sockaddr * v181;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP); // 0xc1c4
    if (sock_fd == -1) {
    if (setsockopt(sock_fd, t, 3, &option_value, 4) == -1) {
        result = close(sock_fd);
                while (true) {
                while (true) {
                        while (true) {
                                                sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
                                            sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
            while (true) {
            while (true) {
        while (true) {
=================FUNCTION : function_b5c4 ===================
++++++++ FUNCTION START 23471
++++++++ FUNCTION END 24061
++++++++ FUNCTION LENGTH 590
    struct sockaddr * v181;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xb7a8
    if (sock_fd == -1) {
    if (setsockopt(t, SO_TYPE, option_name, &option_value, (int32_t)&option_len) == -1) {
        result = close(sock_fd);
            while (true) {
            while (true) {
                    while (true) {
                                                    sendto(sock_fd, (int32_t *)message, 60, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
                                                sendto(sock_fd, (int32_t *)message, 60, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
        while (true) {
=================FUNCTION : function_ae08 ===================
++++++++ FUNCTION START 22865
++++++++ FUNCTION END 23468
++++++++ FUNCTION LENGTH 603
    struct sockaddr * v181;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xb02c
    if (sock_fd == -1) {
    if (setsockopt(sock_fd, t, 3, &option_value, 4) == -1) {
        result = close(sock_fd);
            while (true) {
            while (true) {
                    while (true) {
                                                    sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
                                                sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
        while (true) {
=================FUNCTION : function_9da4 ===================
++++++++ FUNCTION START 21596
++++++++ FUNCTION END 22164
++++++++ FUNCTION LENGTH 568
    struct sockaddr * v181;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0x9f18
    if (sock_fd == -1) {
    if (setsockopt(sock_fd, t, 3, &option_value, 4) == -1) {
        result = close(sock_fd);
            while (true) {
            while (true) {
                    while (true) {
                                                sendto(sock_fd, (int32_t *)message, v309 + 52, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
        while (true) {
=================FUNCTION : function_e508 ===================
++++++++ FUNCTION START 30530
++++++++ FUNCTION END 30876
++++++++ FUNCTION LENGTH 346
    struct sockaddr * v180;
    int32_t sock_fd = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xe524
    int32_t fd = sock_fd;
    if (sock_fd == -1) {
    setsockopt(sock_fd, SO_DEBUG, 2, &option_value, 4);
    fcntl(fd, F_GETFL);
    if (bind(fd, (struct sockaddr *)&addr, 16) == -1) {
        connect(fd, (struct sockaddr *)&addr, 16);
        close(fd);
        result = listen(fd, 1);
=================FUNCTION : function_95fc ===================
++++++++ FUNCTION START 21021
++++++++ FUNCTION END 21593
++++++++ FUNCTION LENGTH 572
    struct sockaddr * v181;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0x9770
    if (sock_fd == -1) {
    if (setsockopt(sock_fd, t, 3, &option_value, 4) == -1) {
        result = close(sock_fd);
            while (true) {
            while (true) {
                    while (true) {
                                                sendto(sock_fd, (int32_t *)message, v309 + 66, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
        while (true) {
=================FUNCTION : function_c708 ===================
++++++++ FUNCTION START 25083
++++++++ FUNCTION END 25572
++++++++ FUNCTION LENGTH 489
    struct sockaddr * v182;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP); // 0xc82c
    if (sock_fd == -1) {
    if (setsockopt(t, SO_TYPE, option_name, &option_value, (int32_t)&option_len) == -1) {
        result = close(sock_fd);
            while (true) {
            while (true) {
                                sendto(sock_fd, (int32_t *)message, v310 + 32, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
=================FUNCTION : function_12b90 ===================
++++++++ FUNCTION START 43239
++++++++ FUNCTION END 43745
++++++++ FUNCTION LENGTH 506
    struct sockaddr * v182;
                while (true) {
                        while (true) {
                            while (true) {
                while (true) {
                    while (true) {
        while (true) {
    while (true) {
=================FUNCTION : function_129e4 ===================
++++++++ FUNCTION START 42061
++++++++ FUNCTION END 42381
++++++++ FUNCTION LENGTH 320
    struct sockaddr * v182;
    int32_t sock_fd = socket(AF_INET, 0, IPPROTO_IP); // 0x12a0c
    if (sock_fd != -1) {
        int32_t sock = 2; // bp-40
        connect((int32_t)&sock, (struct sockaddr *)addr, addr);
        getsockname(sock_fd, (struct sockaddr *)&sock, &addr_len);
        close(sock_fd);
=================FUNCTION : function_efe8 ===================
++++++++ FUNCTION START 32619
++++++++ FUNCTION END 32925
++++++++ FUNCTION LENGTH 306
    struct sockaddr * v178;
    int32_t pid = getpid(); // 0xeffc
    int32_t v299 = pid ^ getppid();
    int32_t proc_time = clock(); // 0xf014
    int32_t v300 = v299 ^ proc_time;
    int32_t v301 = proc_time;
    return proc_time;
=================FUNCTION : function_e708 ===================
++++++++ FUNCTION START 31208
++++++++ FUNCTION END 31544
++++++++ FUNCTION LENGTH 336
    struct sockaddr * v181;
    int32_t result = fork(); // 0xe710
    int32_t fd = open((char *)function_11d68(13, (int32_t *)status), O_RDWR); // 0xe76c
        int32_t fd2 = open((char *)function_11d68(14, (int32_t *)status), O_RDWR); // 0xe7c8
    while (true) {
=================FUNCTION : function_f694 ===================
++++++++ FUNCTION START 34701
++++++++ FUNCTION END 35026
++++++++ FUNCTION LENGTH 325
    struct sockaddr * v182;
    if (socket(AF_INET, SOCK_STREAM, IPPROTO_IP) == -1) {
        fcntl(fd, F_GETFL);
        int32_t sock; // 0xf734
        result = connect(sock, (struct sockaddr *)&addr, 16);
=================FUNCTION : __udivsi3 ===================
++++++++ FUNCTION START 43748
++++++++ FUNCTION END 44411
++++++++ FUNCTION LENGTH 663
    struct sockaddr * v182;
    while (true) {
                                while (true) {
                                    while (true) {
                while (true) {
=================FUNCTION : __modsi3 ===================
++++++++ FUNCTION START 45428
++++++++ FUNCTION END 46196
++++++++ FUNCTION LENGTH 768
    struct sockaddr * v182;
            while (true) {
                        while (true) {
                                while (true) {
                    while (true) {
=================FUNCTION : __umodsi3 ===================
++++++++ FUNCTION START 44722
++++++++ FUNCTION END 45425
++++++++ FUNCTION LENGTH 703
    struct sockaddr * v182;
            while (true) {
                        while (true) {
                                while (true) {
                    while (true) {
=================FUNCTION : function_12b0c ===================
++++++++ FUNCTION START 42786
++++++++ FUNCTION END 43236
++++++++ FUNCTION LENGTH 450
    struct sockaddr * v182;
                while (true) {
            while (true) {
            while (true) {
    while (true) {
=================FUNCTION : function_8f5c ===================
++++++++ FUNCTION START 18445
++++++++ FUNCTION END 18792
++++++++ FUNCTION LENGTH 347
    struct sockaddr * v182;
            return inet_addr((char *)cp);
    while (true) {
        return inet_addr((char *)cp);
=================FUNCTION : function_12858 ===================
++++++++ FUNCTION START 41185
++++++++ FUNCTION END 41722
++++++++ FUNCTION LENGTH 537
    struct sockaddr * v182;
    while (true) {
    while (true) {
    while (true) {
=================FUNCTION : function_12a80 ===================
++++++++ FUNCTION START 42384
++++++++ FUNCTION END 42783
++++++++ FUNCTION LENGTH 399
    struct sockaddr * v182;
        while (true) {
    while (true) {
=================FUNCTION : function_12754 ===================
++++++++ FUNCTION START 39840
++++++++ FUNCTION END 40199
++++++++ FUNCTION LENGTH 359
    struct sockaddr * v182;
            while (true) {
    while (true) {
=================FUNCTION : _getsockname ===================
++++++++ FUNCTION START 16207
++++++++ FUNCTION END 16512
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
    return getsockname(fd, addr, len);
=================FUNCTION : _kill ===================
++++++++ FUNCTION START 7582
++++++++ FUNCTION END 7887
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
    return kill(pid, sig);
=================FUNCTION : _setsockopt ===================
++++++++ FUNCTION START 8506
++++++++ FUNCTION END 8811
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
    return setsockopt(fd, level, optname, optval, optlen);
=================FUNCTION : _sigprocmask ===================
++++++++ FUNCTION START 15899
++++++++ FUNCTION END 16204
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
    return sigprocmask(how, set, oset);
=================FUNCTION : function_f110 ===================
++++++++ FUNCTION START 33256
++++++++ FUNCTION END 33570
++++++++ FUNCTION LENGTH 314
    struct sockaddr * v182;
    free((int32_t *)result);
=================FUNCTION : _sendto ===================
++++++++ FUNCTION START 9738
++++++++ FUNCTION END 10043
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
    return sendto(fd, buf, n, flags, addr, addr_len);
=================FUNCTION : function_127f0 ===================
++++++++ FUNCTION START 40848
++++++++ FUNCTION END 41182
++++++++ FUNCTION LENGTH 334
    struct sockaddr * v182;
    while (true) {
=================FUNCTION : _send ===================
++++++++ FUNCTION START 6041
++++++++ FUNCTION END 6346
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
    return send(fd, buf, n, flags);
=================FUNCTION : _getsockopt ===================
++++++++ FUNCTION START 12510
++++++++ FUNCTION END 12815
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
    return getsockopt(fd, level, optname, optval, optlen);
=================FUNCTION : _closedir ===================
++++++++ FUNCTION START 14667
++++++++ FUNCTION END 14972
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
    return closedir(dirp);
=================FUNCTION : _accept ===================
++++++++ FUNCTION START 6658
++++++++ FUNCTION END 6963
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
    return accept(fd, addr, addr_len);
=================FUNCTION : function_12984 ===================
++++++++ FUNCTION START 41725
++++++++ FUNCTION END 42058
++++++++ FUNCTION LENGTH 333
    struct sockaddr * v182;
    while (true) {
=================FUNCTION : function_8fc8 ===================
++++++++ FUNCTION START 18795
++++++++ FUNCTION END 19142
++++++++ FUNCTION LENGTH 347
    struct sockaddr * v182;
    while (true) {
=================FUNCTION : _getpid ===================
++++++++ FUNCTION START 2653
++++++++ FUNCTION END 2958
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
    return getpid();
=================FUNCTION : _connect ===================
++++++++ FUNCTION START 1729
++++++++ FUNCTION END 2034
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
    return connect(fd, addr, len);
=================FUNCTION : _recvfrom ===================
++++++++ FUNCTION START 4501
++++++++ FUNCTION END 4806
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
    return recvfrom(fd, buf, n, flags, addr, addr_len);
=================FUNCTION : _close ===================
++++++++ FUNCTION START 15283
++++++++ FUNCTION END 15588
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
    return close(fd);
=================FUNCTION : function_8ef8 ===================
++++++++ FUNCTION START 18105
++++++++ FUNCTION END 18442
++++++++ FUNCTION LENGTH 337
    struct sockaddr * v182;
    while (true) {
=================FUNCTION : _socket ===================
++++++++ FUNCTION START 4809
++++++++ FUNCTION END 5114
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
    return socket(domain, type, protocol);
=================FUNCTION : function_d4e0 ===================
++++++++ FUNCTION START 27615
++++++++ FUNCTION END 27927
++++++++ FUNCTION LENGTH 312
    struct sockaddr * v181;
    int32_t result = kill(pid, SIGKILL); // 0xd4ec
=================FUNCTION : _recv ===================
++++++++ FUNCTION START 1421
++++++++ FUNCTION END 1726
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
    return recv(fd, buf, n, flags);
=================FUNCTION : _open ===================
++++++++ FUNCTION START 13743
++++++++ FUNCTION END 14048
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
    return open(file, oflag);
=================FUNCTION : _fork ===================
++++++++ FUNCTION START 10662
++++++++ FUNCTION END 10967
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
    return fork();
=================FUNCTION : _inet_addr ===================
++++++++ FUNCTION START 8198
++++++++ FUNCTION END 8503
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
    return inet_addr(cp);
=================FUNCTION : _listen ===================
++++++++ FUNCTION START 10354
++++++++ FUNCTION END 10659
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
    return listen(fd, n);
=================FUNCTION : function_f680 ===================
++++++++ FUNCTION START 34386
++++++++ FUNCTION END 34698
++++++++ FUNCTION LENGTH 312
    struct sockaddr * v182;
    int32_t result = kill(pid, SIGKILL); // 0xf68c
=================FUNCTION : _getppid ===================
++++++++ FUNCTION START 11586
++++++++ FUNCTION END 11891
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
    return getppid();
=================FUNCTION : _unlink ===================
++++++++ FUNCTION START 9430
++++++++ FUNCTION END 9735
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
=================FUNCTION : function_12fa0 ===================
++++++++ FUNCTION START 46832
++++++++ FUNCTION END 47138
++++++++ FUNCTION LENGTH 306
    struct sockaddr * v182;
=================FUNCTION : _sigemptyset ===================
++++++++ FUNCTION START 2037
++++++++ FUNCTION END 2342
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
=================FUNCTION : function_9314 ===================
++++++++ FUNCTION START 20676
++++++++ FUNCTION END 21018
++++++++ FUNCTION LENGTH 342
    struct sockaddr * v180;
=================FUNCTION : _write ===================
++++++++ FUNCTION START 7274
++++++++ FUNCTION END 7579
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
=================FUNCTION : function_11f04 ===================
++++++++ FUNCTION START 39090
++++++++ FUNCTION END 39516
++++++++ FUNCTION LENGTH 426
    struct sockaddr * v169;
=================FUNCTION : __aeabi_ldiv0 ===================
++++++++ FUNCTION START 46199
++++++++ FUNCTION END 46505
++++++++ FUNCTION LENGTH 306
    struct sockaddr * v182;
=================FUNCTION : function_ef90 ===================
++++++++ FUNCTION START 32305
++++++++ FUNCTION END 32616
++++++++ FUNCTION LENGTH 311
    struct sockaddr * v178;
=================FUNCTION : function_12f6c ===================
++++++++ FUNCTION START 46508
++++++++ FUNCTION END 46829
++++++++ FUNCTION LENGTH 321
    struct sockaddr * v181;
=================FUNCTION : function_11e4c ===================
++++++++ FUNCTION START 38742
++++++++ FUNCTION END 39087
++++++++ FUNCTION LENGTH 345
    struct sockaddr * v181;
=================FUNCTION : function_e4f0 ===================
++++++++ FUNCTION START 30222
++++++++ FUNCTION END 30527
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v181;
=================FUNCTION : function_d430 ===================
++++++++ FUNCTION START 27237
++++++++ FUNCTION END 27612
++++++++ FUNCTION LENGTH 375
    struct sockaddr * v182;
=================FUNCTION : _atoi ===================
++++++++ FUNCTION START 13435
++++++++ FUNCTION END 13740
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
=================FUNCTION : function_8ddc ===================
++++++++ FUNCTION START 16515
++++++++ FUNCTION END 16852
++++++++ FUNCTION LENGTH 337
    struct sockaddr * v180;
=================FUNCTION : function_8b64 ===================
++++++++ FUNCTION START 490
++++++++ FUNCTION END 802
++++++++ FUNCTION LENGTH 312
    struct sockaddr * v181;
=================FUNCTION : function_f044 ===================
++++++++ FUNCTION START 32928
++++++++ FUNCTION END 33253
++++++++ FUNCTION LENGTH 325
    struct sockaddr * v182;
=================FUNCTION : __aeabi_uidivmod ===================
++++++++ FUNCTION START 44414
++++++++ FUNCTION END 44719
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
=================FUNCTION : * ===================
++++++++ FUNCTION START 12818
++++++++ FUNCTION END 13123
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
    struct sockaddr * v182;
    struct sockaddr * v182;
    struct sockaddr * v182;
    struct sockaddr * v182;
    struct sockaddr * v182;
    struct sockaddr * v182;
=================FUNCTION : function_d3d4 ===================
++++++++ FUNCTION START 26890
++++++++ FUNCTION END 27234
++++++++ FUNCTION LENGTH 344
    struct sockaddr * v182;
=================FUNCTION : _sigaddset ===================
++++++++ FUNCTION START 5733
++++++++ FUNCTION END 6038
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
=================FUNCTION : _setsid ===================
++++++++ FUNCTION START 14359
++++++++ FUNCTION END 14664
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
=================FUNCTION : _sleep ===================
++++++++ FUNCTION START 4193
++++++++ FUNCTION END 4498
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
=================FUNCTION : function_8e50 ===================
++++++++ FUNCTION START 16855
++++++++ FUNCTION END 17168
++++++++ FUNCTION LENGTH 313
    struct sockaddr * v182;
=================FUNCTION : _readlink ===================
++++++++ FUNCTION START 3577
++++++++ FUNCTION END 3882
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
=================FUNCTION : function_127a8 ===================
++++++++ FUNCTION START 40202
++++++++ FUNCTION END 40519
++++++++ FUNCTION LENGTH 317
    struct sockaddr * v182;
=================FUNCTION : function_d3cc ===================
++++++++ FUNCTION START 26574
++++++++ FUNCTION END 26887
++++++++ FUNCTION LENGTH 313
    struct sockaddr * v182;
=================FUNCTION : function_1272c ===================
++++++++ FUNCTION START 39519
++++++++ FUNCTION END 39837
++++++++ FUNCTION LENGTH 318
    struct sockaddr * v182;
=================FUNCTION : _select ===================
++++++++ FUNCTION START 5117
++++++++ FUNCTION END 5422
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
=================FUNCTION : function_8e5c ===================
++++++++ FUNCTION START 17171
++++++++ FUNCTION END 17481
++++++++ FUNCTION LENGTH 310
    struct sockaddr * v182;
=================FUNCTION : function_f768 ===================
++++++++ FUNCTION START 35029
++++++++ FUNCTION END 35387
++++++++ FUNCTION LENGTH 358
    struct sockaddr * v178;
=================FUNCTION : _ioctl ===================
++++++++ FUNCTION START 1113
++++++++ FUNCTION END 1418
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
=================FUNCTION : __data_start ===================
++++++++ FUNCTION START 47451
++++++++ FUNCTION END 47762
++++++++ FUNCTION LENGTH 311
    struct sockaddr * v182;
=================FUNCTION : ___uClibc_main ===================
++++++++ FUNCTION START 10970
++++++++ FUNCTION END 11275
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
=================FUNCTION : _read ===================
++++++++ FUNCTION START 9122
++++++++ FUNCTION END 9427
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
=================FUNCTION : function_127cc ===================
++++++++ FUNCTION START 40522
++++++++ FUNCTION END 40845
++++++++ FUNCTION LENGTH 323
    struct sockaddr * v182;
=================FUNCTION : function_12fa8 ===================
++++++++ FUNCTION START 47141
++++++++ FUNCTION END 47448
++++++++ FUNCTION LENGTH 307
    struct sockaddr * v182;
=================FUNCTION : function_8b4c ===================
++++++++ FUNCTION START 181
++++++++ FUNCTION END 487
++++++++ FUNCTION LENGTH 306
    struct sockaddr * v184 = NULL;
=================FUNCTION : function_8eb4 ===================
++++++++ FUNCTION START 17484
++++++++ FUNCTION END 17790
++++++++ FUNCTION LENGTH 306
    struct sockaddr * v182;
=================FUNCTION : _time ===================
++++++++ FUNCTION START 11894
++++++++ FUNCTION END 12199
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
=================FUNCTION : _bind ===================
++++++++ FUNCTION START 7890
++++++++ FUNCTION END 8195
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
=================FUNCTION : __start ===================
++++++++ FUNCTION START 17793
++++++++ FUNCTION END 18102
++++++++ FUNCTION LENGTH 309
    struct sockaddr * v182;
=================FUNCTION : function_11d68 ===================
++++++++ FUNCTION START 38075
++++++++ FUNCTION END 38391
++++++++ FUNCTION LENGTH 316
    struct sockaddr * v182;
=================FUNCTION : function_11d94 ===================
++++++++ FUNCTION START 38394
++++++++ FUNCTION END 38739
++++++++ FUNCTION LENGTH 345
    struct sockaddr * v181;
=================FUNCTION : _clock ===================
++++++++ FUNCTION START 14051
++++++++ FUNCTION END 14356
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
=================FUNCTION : _fcntl ===================
++++++++ FUNCTION START 14975
++++++++ FUNCTION END 15280
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
=================FUNCTION : _prctl ===================
++++++++ FUNCTION START 2961
++++++++ FUNCTION END 3266
++++++++ FUNCTION LENGTH 305
    struct sockaddr * v182;
=================FUNCTION : function_e678 ===================
++++++++ FUNCTION START 30879
++++++++ FUNCTION END 31205
++++++++ FUNCTION LENGTH 326
    struct sockaddr * v182;
================================================================================
========	WHILE LOOPS INTRESTING INSTRUCTIONS : =================================
================================================================================
=============================WHILE LOOPS ID : 4 @ function_9038 ====================================
++++++++ WHILE START : 19516 
++++++++ WHILE FUNCTION : function_9038 
++++++++ WHILE END : 20184 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		v323 = fork();
		while (true) {
		free((int32_t *)v320);
		while (true) {
		free((int32_t *)v320);
		while (true) {
		free((int32_t *)v320);
		while (true) {
		free((int32_t *)v320);
		while (true) {
		free((int32_t *)v320);
		while (true) {
		free((int32_t *)v320);
		while (true) {
		v323 = fork();
		while (true) {
		free((int32_t *)v320);
		while (true) {
		free((int32_t *)v320);
		while (true) {
		free((int32_t *)v320);
		while (true) {
		free((int32_t *)v320);
		while (true) {
=============================WHILE LOOPS ID : 5 @ function_9038 ====================================
++++++++ WHILE START : 20220 
++++++++ WHILE FUNCTION : function_9038 
++++++++ WHILE END : 20362 
++++++++ INTRESTING INSTRUCTIONS :  
		v323 = fork();
		while (true) {
		free((int32_t *)v320);
		while (true) {
		free((int32_t *)v320);
		while (true) {
=============================WHILE LOOPS ID : 14 @ function_95fc ====================================
++++++++ WHILE START : 21419 
++++++++ WHILE FUNCTION : function_95fc 
++++++++ WHILE END : 21576 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		sendto(sock_fd, (int32_t *)message, v309 + 66, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
=============================WHILE LOOPS ID : 17 @ function_9da4 ====================================
++++++++ WHILE START : 21994 
++++++++ WHILE FUNCTION : function_9da4 
++++++++ WHILE END : 22147 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		sendto(sock_fd, (int32_t *)message, v309 + 52, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
=============================WHILE LOOPS ID : 19 @ function_a4dc ====================================
++++++++ WHILE START : 22519 
++++++++ WHILE FUNCTION : function_a4dc 
++++++++ WHILE END : 22845 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		int32_t sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xa760
		t = sock_fd2;
		if (sock_fd2 == -1) {
		while (true) {
		fcntl(sock_fd2, F_GETFL);
		connect(t, (struct sockaddr *)&addr, 16);
		while (true) {
		int32_t v339 = recvfrom(sock_fd, &buf, 256, MSG_NOSIGNAL, (struct sockaddr *)&addr2, &addr_len); // 0xa86c
		close(t);
		while (true) {
		sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP);
		v344 = sock_fd2;
		v343 = sock_fd2 == -1;
		t = sock_fd2;
		if (sock_fd2 == -1) {
		while (true) {
		while (true) {
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
		close(t);
		int32_t sock_fd3 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xa8fc
		t = sock_fd3;
		if (sock_fd3 == -1) {
		sock_fd2 = sock_fd3;
		while (true) {
=============================WHILE LOOPS ID : 22 @ function_ae08 ====================================
++++++++ WHILE START : 23268 
++++++++ WHILE FUNCTION : function_ae08 
++++++++ WHILE END : 23451 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
=============================WHILE LOOPS ID : 25 @ function_b5c4 ====================================
++++++++ WHILE START : 23863 
++++++++ WHILE FUNCTION : function_b5c4 
++++++++ WHILE END : 24046 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		sendto(sock_fd, (int32_t *)message, 60, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
		sendto(sock_fd, (int32_t *)message, 60, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
=============================WHILE LOOPS ID : 27 @ function_bd44 ====================================
++++++++ WHILE START : 24454 
++++++++ WHILE FUNCTION : function_bd44 
++++++++ WHILE END : 24505 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t sock_fd = socket(AF_INET, 17, IPPROTO_UDP); // 0xbed8
		int32_t sock3 = sock_fd; // r0
		if (sock_fd == -1) {
		return sock3;
		bind(sock3, (struct sockaddr *)&addr, 16);
		int32_t sock4; // 0xbe78
		connect(sock4, (struct sockaddr *)addr2, 16);
		int32_t sock5; // 0xbf78
		connect(sock5, (struct sockaddr *)addr3, 16);
=============================WHILE LOOPS ID : 29 @ function_c068 ====================================
++++++++ WHILE START : 24888 
++++++++ WHILE FUNCTION : function_c068 
++++++++ WHILE END : 25032 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
=============================WHILE LOOPS ID : 34 @ function_c708 ====================================
++++++++ WHILE START : 25461 
++++++++ WHILE FUNCTION : function_c708 
++++++++ WHILE END : 25543 
++++++++ INTRESTING INSTRUCTIONS :  
		sendto(sock_fd, (int32_t *)message, v310 + 32, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
=============================WHILE LOOPS ID : 36 @ function_cc04 ====================================
++++++++ WHILE START : 26020 
++++++++ WHILE FUNCTION : function_cc04 
++++++++ WHILE END : 26380 
++++++++ INTRESTING INSTRUCTIONS :  
		inet_addr((char *)&cp);
		sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
		if (sock_fd == -1) {
		if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
		result2 = close(sock_fd);
		while (true) {
		while (true) {
		while (true) {
		sendto(sock_fd, (int32_t *)fd, v346 + 47, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
		inet_addr((char *)&cp);
		sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
		if (sock_fd == -1) {
		if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
		result2 = close(sock_fd);
		while (true) {
=============================WHILE LOOPS ID : 40 @ function_d4f4 ====================================
++++++++ WHILE START : 28326 
++++++++ WHILE FUNCTION : function_d4f4 
++++++++ WHILE END : 28841 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		close(fd2);
		dirp = opendir((char *)name);
		while (true) {
		while (true) {
		struct __dirstream * dirp2 = opendir((char *)&path); // 0xd8a0
		while (true) {
		while (true) {
		kill(function_12858((char *)v345, 10), SIGKILL);
		struct dirent * v363 = readdir((struct __dirstream *)dirp3); // 0xd99c
		struct dirent * v364 = readdir((struct __dirstream *)dirp3); // 0xd8b0
		closedir((struct __dirstream *)dirp3);
		v354 = readdir((struct __dirstream *)fd2);
		closedir((struct __dirstream *)dirp4);
		closedir((struct __dirstream *)dirp3);
		v354 = readdir((struct __dirstream *)fd2);
		struct dirent * v374 = readdir((struct __dirstream *)fd2); // 0xd7bc
		closedir((struct __dirstream *)fd2);
		closedir((struct __dirstream *)fd2);
		close(fd2);
		dirp = opendir((char *)name);
		while (true) {
		closedir((struct __dirstream *)fd2);
=============================WHILE LOOPS ID : 42 @ function_da64 ====================================
++++++++ WHILE START : 29241 
++++++++ WHILE FUNCTION : function_da64 
++++++++ WHILE END : 30215 
++++++++ INTRESTING INSTRUCTIONS :  
		struct __dirstream * v309 = opendir((char *)function_11d68(6, NULL)); // 0xdc4c
		struct dirent * v310 = readdir((struct __dirstream *)dirp); // 0xdc64221
		while (true) {
		while (true) {
		int32_t fd2 = open((char *)&path2, O_RDONLY); // 0xde9c
		while (true) {
		while (true) {
		close(protocol);
		kill(pid3, SIGKILL);
		v313 = readdir((struct __dirstream *)dirp);
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		close(protocol);
		close(protocol);
		kill(pid3, SIGKILL);
		int32_t pid2 = getpid(); // 0xde38
		int32_t ppid = getppid(); // 0xde44
		int32_t fd3 = open((char *)buf2, O_RDONLY); // 0xde7c
		kill(pid3, SIGKILL);
		close(fd4);
		v313 = readdir((struct __dirstream *)dirp);
		v313 = readdir((struct __dirstream *)dirp);
		struct dirent * v448 = readdir((struct __dirstream *)dirp); // 0xdcdc
		v313 = readdir((struct __dirstream *)dirp2);
		v313 = readdir((struct __dirstream *)dirp2);
		v313 = readdir((struct __dirstream *)dirp);
		closedir((struct __dirstream *)dirp);
		closedir((struct __dirstream *)dirp);
=============================WHILE LOOPS ID : 44 @ function_e7f4 ====================================
++++++++ WHILE START : 31944 
++++++++ WHILE FUNCTION : function_e7f4 
++++++++ WHILE END : 32251 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		int32_t sock2;
		while (true) {
		v332 = sock2;
		int32_t sock;
		if (sock == -1) {
		int32_t sock_fd = socket(AF_INET, SOCK_STREAM, protocol); // 0xed54
		int32_t fd3 = sock_fd; // r5
		if (sock_fd != -1) {
		fcntl(sock_fd, F_GETFL);
		connect(sock, (struct sockaddr *)&addr, 16);
		uint32_t v337 = sock; // 0xec10
		int32_t v341 = sock; // 0xeb08
		int32_t v342 = sock2; // 0xeb2c
		if (sock2 < v341) {
		send(sock, (int32_t *)&buf2, 2, MSG_NOSIGNAL);
		if (sock2 != -1) {
		if ((v348 >> sock2 % 32) % 2 != 0) {
		int32_t accepted_sock_fd = accept(sock2, (struct sockaddr *)&addr2, &addr_len); // 0xee4c
		function_d4e0(function_f680(accepted_sock_fd));
		kill(-v308, SIGKILL);
		uint32_t sock3 = sock; // 0xec3c
		if (sock3 != -1) {
		if ((v352 >> sock3 % 32) % 2 != 0) {
		int32_t v353 = recv(sock, (int32_t *)&buf2, 2, MSG_PEEK | MSG_NOSIGNAL); // 0xec94
		__pseudo_cond_branch(sock != -1, (int32_t)&v351);
		sock = -1;
		recv(sock, (int32_t *)&buf2, 2, MSG_NOSIGNAL);
		close(sock);
		int32_t v365 = recv(sock, &buf3, (int32_t)v363 | 256 * v364, MSG_PEEK | MSG_NOSIGNAL); // 0xed10
		recv(sock, (int32_t *)&buf2, 2, MSG_NOSIGNAL);
		recv(sock, &buf3, 256 * (int32_t)v366 | v364, MSG_NOSIGNAL);
		if ((v370 >> sock3 % 32) % 2 == 0) {
		__pseudo_cond_branch(sock3 != -1, (int32_t)&v351);
		getsockopt(sock3, SO_DEBUG, 4, &addr_len, &option_len);
		int32_t sock4; // 0xee94
		send(sock4, &buf4, 4, MSG_NOSIGNAL);
		int32_t sock5; // 0xeea4
		send(sock5, (int32_t *)&buf2, 1, MSG_NOSIGNAL);
		int32_t sock6; // 0xeec0
		send(sock6, &buf5, length, MSG_NOSIGNAL);
		close(sock);
		v332 = sock2;
=============================WHILE LOOPS ID : 47 @ function_f134 ====================================
++++++++ WHILE START : 33977 
++++++++ WHILE FUNCTION : function_f134 
++++++++ WHILE END : 34345 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t sock_fd = socket(AF_INET, 0, IPPROTO_IP); // 0xf2c0
		int32_t fd = sock_fd; // r7
		if (sock_fd == -1) {
		close(fd);
		free(mem);
		if (connect((int32_t)&sock, (struct sockaddr *)16, 16) != -1) {
		if (send(fd, (int32_t *)&buf, length, MSG_NOSIGNAL) != -1) {
		close(fd);
		free(mem);
		int32_t v345 = recvfrom(fd, (int32_t *)&buf2, 2048, MSG_NOSIGNAL, (struct sockaddr *)addr, (int32_t *)addr); // 0xf3d0
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		close(fd);
		free(mem);
		close(fd);
		free(mem);
=============================WHILE LOOPS ID : 49 @ function_f90c ====================================
++++++++ WHILE START : 35650 
++++++++ WHILE FUNCTION : function_f90c 
++++++++ WHILE END : 37775 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xfc80
		sock = sock_fd;
		if (sock_fd == -1) {
		fcntl(sock_fd, F_GETFL);
		fcntl(sock_fd, F_SETFL);
		if (setsockopt(sock, status, 3, &status, 4) != 0) {
		close(sock);
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		uint32_t v312 = recvfrom(sock, &buf, 1514, MSG_NOSIGNAL, NULL, NULL); // 0x10ce4
		while (true) {
		close(fd);
		while (true) {
		int32_t sock18; // 0x11074
		if (sock18 != -1) {
		if ((v337 >> sock18 % 32) % 2 == 0) {
		v335 = sock18;
		while (true) {
		while (true) {
		int32_t sock2; // 0x1124c
		int32_t v347 = recv(sock2, (int32_t *)buf2, 256 - v346, MSG_NOSIGNAL); // 0x1125c
		close(fd2);
		while (true) {
		case 2: {
		while (true) {
		while (true) {
		int32_t sock3; // 0x11b44
		send(sock3, &buf3, 3, MSG_NOSIGNAL);
		send(0x4000, (int32_t *)buf4, 3, MSG_NOSIGNAL);
		send(0x4000, (int32_t *)(int32_t)&buf5, 9, MSG_NOSIGNAL);
		while (true) {
		case 2: {
		while (true) {
		case 3: {
		while (true) {
		int32_t sock4; // 0x11430
		send(sock4, (int32_t *)buf6, (int32_t)length, MSG_NOSIGNAL);
		int32_t sock5; // 0x11448
		send(sock5, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 4: {
		while (true) {
		int32_t sock6; // 0x114c8
		send(sock6, (int32_t *)buf7, (int32_t)length2, MSG_NOSIGNAL);
		int32_t sock7; // 0x114e0
		send(sock7, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 5: {
		while (true) {
		int32_t sock8; // 0x11580
		send(sock8, (int32_t *)buf8, length3, MSG_NOSIGNAL);
		int32_t sock9; // 0x11594
		send(sock9, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		while (true) {
		while (true) {
		case 6: {
		while (true) {
		int32_t sock10; // 0x11634
		send(sock10, (int32_t *)buf9, length4, MSG_NOSIGNAL);
		int32_t sock11; // 0x11648
		send(sock11, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 7: {
		while (true) {
		int32_t sock12; // 0x1179c
		send(sock12, (int32_t *)buf10, length4, MSG_NOSIGNAL);
		int32_t sock13; // 0x117b0
		send(sock13, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 8: {
		while (true) {
		int32_t sock14; // 0x116e8
		send(sock14, (int32_t *)buf11, length3, MSG_NOSIGNAL);
		int32_t sock15; // 0x116fc
		send(sock15, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 9: {
		while (true) {
		int32_t sock16; // 0x119a8
		send(sock16, (int32_t *)buf12, length3, MSG_NOSIGNAL);
		int32_t sock17; // 0x119bc
		send(sock17, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 10: {
		int32_t v488 = fork(); // 0x11880
		int32_t sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0x118b0
		buf4 = sock_fd2;
		if (sock_fd2 == -1) {
		if (connect(buf4, (struct sockaddr *)&addr, 16) == -1) {
		close(buf4);
		send(buf4, &length3, 1, MSG_NOSIGNAL);
		send(buf4, &length4, 4, MSG_NOSIGNAL);
		send(buf4, &buf13, 2, MSG_NOSIGNAL);
		send(buf4, (int32_t *)(v491 + 12), 1, MSG_NOSIGNAL);
		send(buf4, (int32_t *)buf14, (int32_t)length5, MSG_NOSIGNAL);
		send(buf4, (int32_t *)(v491 + 13), 1, MSG_NOSIGNAL);
		send(buf4, (int32_t *)buf15, (int32_t)length6, MSG_NOSIGNAL);
		close(buf4);
		close(fd3);
		close(fd4);
		while (true) {
		case 3: {
		case 4: {
		case 5: {
		case 6: {
		case 7: {
		case 8: {
		case 9: {
		case 10: {
		close(fd2);
		while (true) {
		if ((length4 | getsockopt(sock18, SO_DEBUG, 4, &length4, &length3)) == 0) {
		while (true) {
		close(fd5);
		while (true) {
=============================WHILE LOOPS ID : 73 @ __udivsi3 ====================================
++++++++ WHILE START : 44198 
++++++++ WHILE FUNCTION : __udivsi3 
++++++++ WHILE END : 44410 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 74 @ __umodsi3 ====================================
++++++++ WHILE START : 45059 
++++++++ WHILE FUNCTION : __umodsi3 
++++++++ WHILE END : 45413 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 75 @ __modsi3 ====================================
++++++++ WHILE START : 45796 
++++++++ WHILE FUNCTION : __modsi3 
++++++++ WHILE END : 46176 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
