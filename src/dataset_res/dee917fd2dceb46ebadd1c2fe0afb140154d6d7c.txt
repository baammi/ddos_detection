=============================================================================
========	BINARY ID :dee917fd2dceb46ebadd1c2fe0afb140154d6d7c==================================================
================================================================================
================================================================================
========	STRINGS SUMMARY : =====================================================
================================================================================
TOTAL STRINGS COUNT :275
SUPSCPECTED LINES COUNT :12
SUPSCPECTED STRINGS COUNT (DISTINCT) :10
SUPSCPECTED STRINGS WEIGHT :40
SUSPECT STRING SCORE : [40 / 150] 26%
USER AGENTS STRINGS COUNT :0
STATIC IPs STRINGS COUNT :0
DYNAMIC IPs STRINGS COUNT :0
================================================================================
========	STRINGS DETAILS : =====================================================
================================================================================
================================================================================
========	SUSPECTED STRINGS : =====================================================
================================================================================
connect
getpid
socket
kill
bind
inet_addr
fork
getppid
sigprocmask
 HTTP/1.1\r\nUser-Agent: 
\r\nHost: 
http
================================================================================
========	USER AGENTS STRINGS : =====================================================
================================================================================
================================================================================
========	STATIC IP ADRESSES : =====================================================
================================================================================
================================================================================
========	DYNAMIC IP MASKS : =====================================================
================================================================================
================================================================================
========	/proc FOLDER ACCESS : =====================================================
================================================================================
================================================================================
========	HISTORY TEMPERING : =====================================================
================================================================================
================================================================================
========	AUTOINSTALL COMMANDS : =====================================================
================================================================================
================================================================================
========	FUNCTIONS SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES			: 54752
+++TOTAL FUNCTIONS 			:115
+++LINES PER FUNCTION RATIO 	: 476.104347826087
+++SUSPECTED LINES COUNT 	: 708
+++SUSPECTED LINES RATIO 	: 1.29310344827586
================================================================================
========	WHILES SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES				: 54752
+++WHILE (TRUE) LINES			: 8924
+++WHILE (TRUE) LINES RATION		:16.2989479836353%
+++WHILE (TRUE) LOOPS COUNT		: 81
================================================================================
========	SYSTEM FILES SUMMARY : ================================================
================================================================================
================================================================================
========	IP PATTERNS SUMMARY : =================================================
================================================================================
================================================================================
========	SYSTEM CALLS SUMMARY : ================================================
================================================================================
================================================================================
========	FUNCTIONS LIST : =======================================================
================================================================================
FUNCTION_NAME                                     |ARGS|LENGH   |SUSPCET_INSTRC|WHILE_INSTRC|
----------------------------------------------------------------------------------------------
function_109cc                                    |1   |2536    |119           |1900        |
----------------------------------------------------------------------------------------------
function_8e9c                                     |4   |2170    |65            |1711        |
----------------------------------------------------------------------------------------------
function_fdf8                                     |2   |789     |56            |294         |
----------------------------------------------------------------------------------------------
function_e9b8                                     |5   |1059    |52            |399         |
----------------------------------------------------------------------------------------------
function_ad94                                     |4   |1590    |48            |859         |
----------------------------------------------------------------------------------------------
function_f2a8                                     |1   |1030    |38            |533         |
----------------------------------------------------------------------------------------------
function_c288                                     |5   |759     |33            |333         |
----------------------------------------------------------------------------------------------
function_f828                                     |1   |558     |23            |165         |
----------------------------------------------------------------------------------------------
function_daec                                     |5   |509     |17            |51          |
----------------------------------------------------------------------------------------------
function_de10                                     |5   |628     |14            |189         |
----------------------------------------------------------------------------------------------
function_cbb4                                     |5   |665     |12            |242         |
----------------------------------------------------------------------------------------------
function_d370                                     |5   |652     |12            |232         |
----------------------------------------------------------------------------------------------
function_bb50                                     |5   |630     |11            |214         |
----------------------------------------------------------------------------------------------
function_b3a8                                     |5   |634     |11            |218         |
----------------------------------------------------------------------------------------------
function_fb9c                                     |1   |408     |11            |0           |
----------------------------------------------------------------------------------------------
function_e4b8                                     |5   |545     |9             |103         |
----------------------------------------------------------------------------------------------
function_13228                                    |3   |568     |8             |70          |
----------------------------------------------------------------------------------------------
function_12fec                                    |0   |382     |7             |0           |
----------------------------------------------------------------------------------------------
function_10608                                    |1   |368     |7             |0           |
----------------------------------------------------------------------------------------------
__umodsi3                                         |2   |765     |5             |354         |
----------------------------------------------------------------------------------------------
function_fd0c                                     |1   |398     |5             |5           |
----------------------------------------------------------------------------------------------
function_13198                                    |3   |579     |5             |40          |
----------------------------------------------------------------------------------------------
function_10744                                    |0   |388     |5             |0           |
----------------------------------------------------------------------------------------------
__udivsi3                                         |2   |725     |5             |212         |
----------------------------------------------------------------------------------------------
__modsi3                                          |2   |830     |5             |380         |
----------------------------------------------------------------------------------------------
function_13114                                    |2   |512     |5             |40          |
----------------------------------------------------------------------------------------------
function_10818                                    |3   |473     |4             |70          |
----------------------------------------------------------------------------------------------
function_acb8                                     |5   |409     |4             |16          |
----------------------------------------------------------------------------------------------
function_12e60                                    |2   |599     |4             |147         |
----------------------------------------------------------------------------------------------
function_13088                                    |3   |461     |3             |48          |
----------------------------------------------------------------------------------------------
function_12d5c                                    |2   |421     |3             |24          |
----------------------------------------------------------------------------------------------
_socket                                           |3   |367     |2             |0           |
----------------------------------------------------------------------------------------------
_recv                                             |4   |367     |2             |0           |
----------------------------------------------------------------------------------------------
function_ac54                                     |5   |399     |2             |15          |
----------------------------------------------------------------------------------------------
_fork                                             |0   |367     |2             |0           |
----------------------------------------------------------------------------------------------
_open                                             |3   |367     |2             |0           |
----------------------------------------------------------------------------------------------
function_12f8c                                    |3   |395     |2             |24          |
----------------------------------------------------------------------------------------------
_inet_addr                                        |1   |367     |2             |0           |
----------------------------------------------------------------------------------------------
_listen                                           |2   |367     |2             |0           |
----------------------------------------------------------------------------------------------
function_12df8                                    |4   |396     |2             |20          |
----------------------------------------------------------------------------------------------
_getppid                                          |0   |367     |2             |0           |
----------------------------------------------------------------------------------------------
_getpid                                           |0   |367     |2             |0           |
----------------------------------------------------------------------------------------------
_connect                                          |4   |367     |2             |0           |
----------------------------------------------------------------------------------------------
_recvfrom                                         |8   |367     |2             |0           |
----------------------------------------------------------------------------------------------
function_ad24                                     |4   |409     |2             |16          |
----------------------------------------------------------------------------------------------
function_f294                                     |1   |374     |2             |0           |
----------------------------------------------------------------------------------------------
_close                                            |1   |367     |2             |0           |
----------------------------------------------------------------------------------------------
_sendto                                           |7   |367     |2             |0           |
----------------------------------------------------------------------------------------------
function_10730                                    |1   |374     |2             |0           |
----------------------------------------------------------------------------------------------
_send                                             |4   |367     |2             |0           |
----------------------------------------------------------------------------------------------
_getsockopt                                       |6   |367     |2             |0           |
----------------------------------------------------------------------------------------------
_closedir                                         |2   |367     |2             |0           |
----------------------------------------------------------------------------------------------
_accept                                           |4   |367     |2             |0           |
----------------------------------------------------------------------------------------------
_kill                                             |2   |367     |2             |0           |
----------------------------------------------------------------------------------------------
_getsockname                                      |4   |367     |2             |0           |
----------------------------------------------------------------------------------------------
_setsockopt                                       |5   |367     |2             |0           |
----------------------------------------------------------------------------------------------
_sigprocmask                                      |5   |367     |2             |0           |
----------------------------------------------------------------------------------------------
function_8b20                                     |1   |375     |1             |0           |
----------------------------------------------------------------------------------------------
__data_start                                      |2   |373     |1             |0           |
----------------------------------------------------------------------------------------------
_ioctl                                            |2   |367     |1             |0           |
----------------------------------------------------------------------------------------------
_read                                             |3   |367     |1             |0           |
----------------------------------------------------------------------------------------------
___uClibc_main                                    |7   |367     |1             |0           |
----------------------------------------------------------------------------------------------
function_8b08                                     |0   |368     |1             |0           |
----------------------------------------------------------------------------------------------
_time                                             |1   |367     |1             |0           |
----------------------------------------------------------------------------------------------
function_b070                                     |1   |408     |1             |0           |
----------------------------------------------------------------------------------------------
function_13638                                    |0   |368     |1             |0           |
----------------------------------------------------------------------------------------------
__start                                           |2   |369     |1             |0           |
----------------------------------------------------------------------------------------------
_bind                                             |4   |367     |1             |0           |
----------------------------------------------------------------------------------------------
function_13604                                    |1   |383     |1             |0           |
----------------------------------------------------------------------------------------------
function_13640                                    |0   |369     |1             |0           |
----------------------------------------------------------------------------------------------
function_12338                                    |4   |497     |1             |0           |
----------------------------------------------------------------------------------------------
_clock                                            |0   |367     |1             |0           |
----------------------------------------------------------------------------------------------
_fcntl                                            |2   |367     |1             |0           |
----------------------------------------------------------------------------------------------
function_12d34                                    |1   |380     |1             |0           |
----------------------------------------------------------------------------------------------
function_8d80                                     |0   |388     |1             |0           |
----------------------------------------------------------------------------------------------
_prctl                                            |5   |367     |1             |0           |
----------------------------------------------------------------------------------------------
function_8df4                                     |1   |374     |1             |0           |
----------------------------------------------------------------------------------------------
function_f1e4                                     |4   |437     |1             |0           |
----------------------------------------------------------------------------------------------
function_12280                                    |1   |407     |1             |0           |
----------------------------------------------------------------------------------------------
*                                                 |0   |367     |1             |0           |
----------------------------------------------------------------------------------------------
function_f180                                     |2   |375     |1             |0           |
----------------------------------------------------------------------------------------------
_sigaddset                                        |3   |367     |1             |0           |
----------------------------------------------------------------------------------------------
function_1219c                                    |2   |378     |1             |0           |
----------------------------------------------------------------------------------------------
_setsid                                           |0   |367     |1             |0           |
----------------------------------------------------------------------------------------------
_sleep                                            |1   |367     |1             |0           |
----------------------------------------------------------------------------------------------
_readlink                                         |4   |367     |1             |0           |
----------------------------------------------------------------------------------------------
function_105b0                                    |0   |373     |1             |0           |
----------------------------------------------------------------------------------------------
_select                                           |9   |367     |1             |0           |
----------------------------------------------------------------------------------------------
__aeabi_ldiv0                                     |0   |368     |1             |0           |
----------------------------------------------------------------------------------------------
function_10664                                    |2   |387     |1             |0           |
----------------------------------------------------------------------------------------------
function_12db0                                    |3   |379     |1             |0           |
----------------------------------------------------------------------------------------------
function_12dd4                                    |2   |380     |1             |0           |
----------------------------------------------------------------------------------------------
function_121c8                                    |1   |407     |1             |0           |
----------------------------------------------------------------------------------------------
function_fb34                                     |2   |367     |1             |0           |
----------------------------------------------------------------------------------------------
__aeabi_uidivmod                                  |2   |367     |1             |0           |
----------------------------------------------------------------------------------------------
function_f188                                     |2   |406     |1             |0           |
----------------------------------------------------------------------------------------------
function_fb4c                                     |0   |381     |1             |0           |
----------------------------------------------------------------------------------------------
_sigemptyset                                      |2   |367     |1             |0           |
----------------------------------------------------------------------------------------------
function_8e00                                     |0   |372     |1             |0           |
----------------------------------------------------------------------------------------------
_write                                            |3   |367     |1             |0           |
----------------------------------------------------------------------------------------------
function_8e58                                     |0   |368     |1             |0           |
----------------------------------------------------------------------------------------------
dirent                                            |3   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_memmove                                          |4   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_strcpy                                           |3   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_abort                                            |0   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_exit                                             |1   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_memcpy                                           |4   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_free                                             |1   |0       |0             |0           |
----------------------------------------------------------------------------------------------
sig,                                              |1   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_calloc                                           |2   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_realloc                                          |2   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_memset                                           |3   |0       |0             |0           |
----------------------------------------------------------------------------------------------
__dirstream                                       |2   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_malloc                                           |1   |0       |0             |0           |
----------------------------------------------------------------------------------------------
___errno_location                                 |0   |0       |0             |0           |
----------------------------------------------------------------------------------------------
================================================================================
========	FUNCTIONS SUSPECTED INSTRUNCTIONS : ===================================
================================================================================
=================FUNCTION : function_109cc ===================
++++++++ FUNCTION START 40394
++++++++ FUNCTION END 42930
++++++++ FUNCTION LENGTH 2536
    struct sockaddr * v143;
    int32_t result = fork(); // 0x109d8
    int32_t sock;
    while (true) {
            int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0x10a98
            sock = sock_fd;
            if (sock_fd == -1) {
            fcntl(sock_fd, F_GETFL);
            fcntl(sock_fd, F_SETFL);
            if (setsockopt(sock, status, 3, &status, 4) != 0) {
                close(sock);
            while (true) {
                    while (true) {
                        while (true) {
                while (true) {
                    uint32_t v372 = recvfrom(sock, &buf, 1514, MSG_NOSIGNAL, NULL, NULL); // 0x110f4
                        while (true) {
                                close(fd);
                        while (true) {
                            int32_t sock18; // 0x11480
                            if (sock18 != -1) {
                                if ((v403 >> sock18 % 32) % 2 == 0) {
                                    v401 = sock18;
                                            while (true) {
                                                while (true) {
                                                    int32_t sock2; // 0x11630
                                                    int32_t v413 = recv(sock2, (int32_t *)buf2, 256 - v412, MSG_NOSIGNAL); // 0x11640
                                                                    close(fd2);
                                                                while (true) {
                                                                        case 2: {
                                                                                while (true) {
                                                                                    while (true) {
                                                                                                                int32_t sock3; // 0x11f8c
                                                                                                                send(sock3, &buf3, 3, MSG_NOSIGNAL);
                                                                                                                            send(0x4000, (int32_t *)buf4, 3, MSG_NOSIGNAL);
                                                                                                            send(0x4000, (int32_t *)(int32_t)&buf5, 9, MSG_NOSIGNAL);
                                                                                                            while (true) {
                                                                                                                    case 2: {
                                                                                                                        while (true) {
                                                                                                                    case 3: {
                                                                                                                            while (true) {
                                                                                                                                    int32_t sock4; // 0x11800
                                                                                                                                    send(sock4, (int32_t *)buf6, (int32_t)length, MSG_NOSIGNAL);
                                                                                                                                    int32_t sock5; // 0x11818
                                                                                                                                    send(sock5, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                    case 4: {
                                                                                                                            while (true) {
                                                                                                                                    int32_t sock6; // 0x11890
                                                                                                                                    send(sock6, (int32_t *)buf7, (int32_t)length2, MSG_NOSIGNAL);
                                                                                                                                    int32_t sock7; // 0x118a8
                                                                                                                                    send(sock7, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                    case 5: {
                                                                                                                            while (true) {
                                                                                                                                    int32_t sock8; // 0x11948
                                                                                                                                    send(sock8, (int32_t *)buf8, (int32_t)length3, MSG_NOSIGNAL);
                                                                                                                                    int32_t sock9; // 0x1195c
                                                                                                                                    send(sock9, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                                while (true) {
                                                                                                                        while (true) {
                                                                                                                    case 6: {
                                                                                                                        while (true) {
                                                                                                                            int32_t sock10; // 0x11ab8
                                                                                                                            send(sock10, (int32_t *)buf9, length4, MSG_NOSIGNAL);
                                                                                                                            int32_t sock11; // 0x11acc
                                                                                                                            send(sock11, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                    case 7: {
                                                                                                                        while (true) {
                                                                                                                            int32_t sock12; // 0x11c20
                                                                                                                            send(sock12, (int32_t *)buf10, length4, MSG_NOSIGNAL);
                                                                                                                            int32_t sock13; // 0x11c34
                                                                                                                            send(sock13, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                    case 8: {
                                                                                                                        while (true) {
                                                                                                                            int32_t sock14; // 0x11b6c
                                                                                                                            send(sock14, (int32_t *)buf11, (int32_t)length3, MSG_NOSIGNAL);
                                                                                                                            int32_t sock15; // 0x11b80
                                                                                                                            send(sock15, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                    case 9: {
                                                                                                                        while (true) {
                                                                                                                            int32_t sock16; // 0x11d7c
                                                                                                                            send(sock16, (int32_t *)buf12, (int32_t)length3, MSG_NOSIGNAL);
                                                                                                                            int32_t sock17; // 0x11d90
                                                                                                                            send(sock17, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                    case 10: {
                                                                                                                            int32_t v557 = fork(); // 0x11ee4
                                                                                                                                    int32_t sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0x1203c
                                                                                                                                    t = sock_fd2;
                                                                                                                                    if (sock_fd2 == -1) {
                                                                                                                                    if (connect(t, (struct sockaddr *)&addr, 16) == -1) {
                                                                                                                                        close(t);
                                                                                                                                    send(t, (int32_t *)&length3, 1, MSG_NOSIGNAL);
                                                                                                                                    send(t, &length4, 4, MSG_NOSIGNAL);
                                                                                                                                    send(t, &buf13, 2, MSG_NOSIGNAL);
                                                                                                                                    send(t, (int32_t *)(v560 + 12), 1, MSG_NOSIGNAL);
                                                                                                                                    send(t, (int32_t *)buf14, (int32_t)length5, MSG_NOSIGNAL);
                                                                                                                                    send(t, (int32_t *)(v560 + 13), 1, MSG_NOSIGNAL);
                                                                                                                                    send(t, (int32_t *)buf15, (int32_t)length6, MSG_NOSIGNAL);
                                                                                                                                    close(t);
                                                                                                                            close(fd3);
                                                                                                                            close(fd4);
                                                                                    while (true) {
                                                                        case 3: {
                                                                        case 4: {
                                                                        case 5: {
                                                                        case 6: {
                                                                        case 7: {
                                                                        case 8: {
                                                                        case 9: {
                                                                        case 10: {
                                                        close(fd2);
                                                        while (true) {
                                    if ((length4 || getsockopt(sock18, SO_DEBUG, 4, &length4, (int32_t *)&length3)) == 0) {
                                            while (true) {
                                        close(fd5);
                        while (true) {
                    sendto(sock, &message, 40, MSG_NOSIGNAL, (struct sockaddr *)&addr, 16);
                    while (true) {
        while (true) {
    while (true) {
=================FUNCTION : function_8e9c ===================
++++++++ FUNCTION START 20946
++++++++ FUNCTION END 23116
++++++++ FUNCTION LENGTH 2170
    struct sockaddr * v155;
    int32_t v361 = function_ac54(fd, (int32_t *)t, 19, (int32_t)"GET", v360); // fp
                        while (true) {
                                    while (true) {
                                while (true) {
                                    while (true) {
                                while (true) {
                                                int32_t sock_fd = socket(AF_INET, SOCK_STREAM, protocol); // 0x9364
                                                dest_mem = sock_fd;
                                                fd = sock_fd;
                                                if (sock_fd != -1) {
                                                    fcntl(dest_mem, F_GETFL);
                                                    int32_t sock; // 0x93a4
                                                    setsockopt(sock, protocol, 8, &option_value, 4);
                                                    int32_t sock2; // 0x93d4
                                                    connect(sock2, (struct sockaddr *)&addr, 16);
                                        function_12d5c((char *)v432, (int32_t)" HTTP/1.1\r\nUser-Agent: ");
                                        function_12d5c((char *)v434, (int32_t)"\r\nHost: ");
                                                int32_t sock3; // 0x99a0
                                                send(sock3, (int32_t *)buf, function_12d34(v404), MSG_NOSIGNAL);
                                                close(fd2);
                                                        close(fd3);
    while (true) {
        uint32_t sock8; // 0x9528
        if (sock8 != -1) {
            if ((v480 >> sock8 % 32) % 2 == 0) {
                v479 = sock8;
                        int32_t sock4; // 0x9ab4
                        int32_t v486 = recv(sock4, &buf2, 0x2800, MSG_PEEK | MSG_NOSIGNAL); // 0x9ac0
                            close(fd4);
                            while (true) {
                                            while (true) {
                                                    while (true) {
                                                    while (true) {
                                        if (function_12df8(t, v546, (int32_t)"http", 4) == 4) {
                                                    while (true) {
                                                if (function_13114((char *)v560, (int32_t)"POST") == 0) {
                                                    if (function_13114((char *)v560, (int32_t)"GET") == 0) {
                                                        int32_t sock5; // 0xa5d0
                                                        recv(sock5, &buf2, length, MSG_NOSIGNAL);
                                                if (function_13088((char *)fd, function_12d34((char *)v577), (int32_t)"url=") == -1) {
                                                    int32_t v582 = option_value + function_13088((char *)v581, function_12d34((char *)v581), (int32_t)"url="); // 0xa4cc
                                                    while (true) {
                                                if (function_13088((char *)t, function_12d34((char *)v589), (int32_t)"http") == 4) {
                                                            while (true) {
                                                        memcpy((int32_t *)(v363 + 1431), (int32_t *)"GET", 4);
                                                dest_mem = (int32_t)memcpy((int32_t *)v602, (int32_t *)"GET", 4);
                                if (function_13114((char *)v560, (int32_t)"POST") == 0) {
                            while (true) {
                            while (true) {
                                int32_t sock6; // 0xa10c
                                int32_t v608 = recv(sock6, (int32_t *)(v374 + v607), 1024 - v607, MSG_NOSIGNAL); // 0xa11c
                                    close(fd5);
                                        while (true) {
                                        while (true) {
                            while (true) {
                            while (true) {
                                int32_t sock7; // 0xa300
                                int32_t v650 = recv(sock7, &buf2, 0x2800, MSG_NOSIGNAL); // 0xa30c
                                            close(fd6);
                                close(fd6);
                            while (true) {
                int32_t v653 = option_value2 | getsockopt(sock8, SO_DEBUG, 4, &option_value2, &option_len); // 0x959c
                close(fd7);
    while (true) {
=================FUNCTION : function_fdf8 ===================
++++++++ FUNCTION START 37221
++++++++ FUNCTION END 38010
++++++++ FUNCTION LENGTH 789
    sigprocmask(how, (struct _TYPEDEF_sigset_t *)&set, (struct _TYPEDEF_sigset_t *)how);
    struct sockaddr * addr;
        if (fork() > fd2) {
        close(fd2);
        close(1);
        v365 = close(2);
        while (true) {
                while (true) {
                int32_t sock2;
                    while (true) {
                    v391 = sock2;
                    int32_t sock;
                    if (sock == -1) {
                        int32_t sock_fd = socket(AF_INET, SOCK_STREAM, protocol); // 0x10304
                        int32_t fd3 = sock_fd; // r5
                        if (sock_fd != -1) {
                            fcntl(sock_fd, F_GETFL);
                            connect(sock, (struct sockaddr *)&addr, 16);
                    uint32_t v396 = sock; // 0x10214
                    int32_t v400 = sock; // 0x1010c
                    int32_t v401 = sock2; // 0x10130
                    if (sock2 < v400) {
                                send(sock, (int32_t *)&buf2, 2, MSG_NOSIGNAL);
                        if (sock2 != -1) {
                            if ((v404 >> sock2 % 32) % 2 != 0) {
                                int32_t accepted_sock_fd = accept(sock2, (struct sockaddr *)&addr2, &addr_len); // 0x103fc
                                function_f294(function_10730(accepted_sock_fd));
                                kill(-v364, SIGKILL);
                                    kill(pid, SIGKILL);
                        uint32_t sock3 = sock; // 0x10240
                            if (sock3 != -1) {
                                if ((v409 >> sock3 % 32) % 2 != 0) {
                                    int32_t v410 = recv(sock, (int32_t *)&buf2, 2, MSG_PEEK | MSG_NOSIGNAL); // 0x102a0
                                                __pseudo_cond_branch(sock != -1, (int32_t)&v408);
                                                sock = -1;
                                            recv(sock, (int32_t *)&buf2, 2, MSG_NOSIGNAL);
                                                close(sock);
                                                int32_t v414 = recv(sock, &buf3, length, MSG_PEEK | MSG_NOSIGNAL); // 0x104f0
                                                recv(sock, (int32_t *)&buf2, 2, MSG_NOSIGNAL);
                                                recv(sock, &buf3, length2, MSG_NOSIGNAL);
                            if ((v419 >> sock3 % 32) % 2 == 0) {
                                __pseudo_cond_branch(sock3 != -1, (int32_t)&v408);
                                getsockopt(sock3, SO_DEBUG, 4, &addr_len, &option_len);
                                    int32_t sock4; // 0x10454
                                    send(sock4, &buf4, 4, MSG_NOSIGNAL);
                                    int32_t sock5; // 0x10464
                                    send(sock5, (int32_t *)&buf2, 1, MSG_NOSIGNAL);
                                    int32_t sock6; // 0x10480
                                    send(sock6, &buf5, length3, MSG_NOSIGNAL);
                                    close(sock);
                v391 = sock2;
    if (fork() > fd2) {
    close(fd2);
    close(1);
    v365 = close(2);
    while (true) {
=================FUNCTION : function_e9b8 ===================
++++++++ FUNCTION START 31395
++++++++ FUNCTION END 32454
++++++++ FUNCTION LENGTH 1059
    struct sockaddr * v161;
    fd = open((char *)function_1219c(37, (int32_t *)oflag), oflag);
    int32_t sock_fd; // 0xec4c
            case 0: {
            case 1: {
            case -2: {
            case -1: {
        sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
        if (sock_fd == -1) {
            return sock_fd;
        if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
            result2 = close(sock_fd);
            while (true) {
    close(fd);
            while (true) {
                                inet_addr((char *)&cp);
                                sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
                                if (sock_fd == -1) {
                                    return sock_fd;
                                if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
                                    result2 = close(sock_fd);
                                    while (true) {
                                            while (true) {
                                    while (true) {
                                                        sendto(sock_fd, (int32_t *)fd, v407 + 47, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
                            inet_addr((char *)&cp);
                            sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
                            if (sock_fd == -1) {
                                return sock_fd;
                            if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
                                result2 = close(sock_fd);
                            while (true) {
                case 0: {
                case 1: {
                case -2: {
                case -1: {
            sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
            if (sock_fd == -1) {
                return sock_fd;
            if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
                result2 = close(sock_fd);
                while (true) {
        case 0: {
        case 1: {
        case -2: {
        case -1: {
    sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
    if (sock_fd == -1) {
        return sock_fd;
    if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
        result2 = close(sock_fd);
        while (true) {
=================FUNCTION : function_ad94 ===================
++++++++ FUNCTION START 24345
++++++++ FUNCTION END 25935
++++++++ FUNCTION LENGTH 1590
    struct sockaddr * v160;
        while (true) {
                                        while (true) {
                                                v385 = fork();
                                                        while (true) {
                                                    free((int32_t *)v382);
                                                    while (true) {
                                                free((int32_t *)v382);
                                                while (true) {
                                                free((int32_t *)v382);
                                                while (true) {
                                            free((int32_t *)v382);
                                            while (true) {
                                free((int32_t *)v382);
                                while (true) {
                            free((int32_t *)v382);
                                while (true) {
                    v385 = fork();
                                while (true) {
                        free((int32_t *)v382);
                            while (true) {
                    free((int32_t *)v382);
                        while (true) {
                    free((int32_t *)v382);
                        while (true) {
                free((int32_t *)v382);
                    while (true) {
                            while (true) {
                                v385 = fork();
                                            while (true) {
                                    free((int32_t *)v382);
                                        while (true) {
                                free((int32_t *)v382);
                                    while (true) {
                    free((int32_t *)v382);
                        while (true) {
                free((int32_t *)v382);
                    while (true) {
        v385 = fork();
                    while (true) {
            free((int32_t *)v382);
                while (true) {
        free((int32_t *)v382);
            while (true) {
        free((int32_t *)v382);
            while (true) {
    free((int32_t *)v382);
        while (true) {
=================FUNCTION : function_f2a8 ===================
++++++++ FUNCTION START 34061
++++++++ FUNCTION END 35091
++++++++ FUNCTION LENGTH 1030
    struct sockaddr * v160;
    int32_t fd = open((char *)function_1219c(9, (int32_t *)oflag), oflag); // 0xf388
    struct __dirstream * dirp; // 0xf560
        close(fd2);
            dirp = opendir((char *)name);
                    while (true) {
                closedir((struct __dirstream *)fd2);
    while (true) {
                while (true) {
                            while (true) {
                                while (true) {
                                                    while (true) {
                                                close(fd2);
                                                dirp = opendir((char *)name);
                                                    while (true) {
                                                        while (true) {
                                                                        struct __dirstream * dirp2 = opendir((char *)&path); // 0xf65c
                                                                                while (true) {
                                                                                    while (true) {
                                                                                                    kill(function_12e60((char *)v407, 10), SIGKILL);
                                                                                                    struct dirent * v425 = readdir((struct __dirstream *)dirp3); // 0xf758
                                                                                            struct dirent * v426 = readdir((struct __dirstream *)dirp3); // 0xf66c
                                                                                    closedir((struct __dirstream *)dirp3);
                                                                                    v416 = readdir((struct __dirstream *)fd2);
                                                                                closedir((struct __dirstream *)dirp4);
                                                                            closedir((struct __dirstream *)dirp3);
                                                                            v416 = readdir((struct __dirstream *)fd2);
                                                                struct dirent * v436 = readdir((struct __dirstream *)fd2); // 0xf578
                                                        closedir((struct __dirstream *)fd2);
                                                closedir((struct __dirstream *)fd2);
                                close(fd2);
                                dirp = opendir((char *)name);
                                    while (true) {
                                closedir((struct __dirstream *)fd2);
    close(fd2);
        dirp = opendir((char *)name);
                while (true) {
            closedir((struct __dirstream *)fd2);
=================FUNCTION : function_c288 ===================
++++++++ FUNCTION START 27619
++++++++ FUNCTION END 28378
++++++++ FUNCTION LENGTH 759
    struct sockaddr * v161;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xc47c
    if (sock_fd == -1) {
        return sock_fd;
    if (setsockopt(t, SO_TYPE, option_name, &option_value, (int32_t)&option_len) == -1) {
        result2 = close(sock_fd);
            while (true) {
                while (true) {
                    int32_t sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xc50c
                    t = sock_fd2;
                    if (sock_fd2 == -1) {
                        while (true) {
                            fcntl(sock_fd2, F_GETFL);
                                    connect(t, (struct sockaddr *)&addr, 16);
                                    while (true) {
                                        int32_t v401 = recvfrom(sock_fd, &buf, 256, MSG_NOSIGNAL, (struct sockaddr *)&addr2, &addr_len); // 0xc618
                                                            close(t);
                                                    while (true) {
                                                        sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP);
                                                        v406 = sock_fd2;
                                                        v405 = sock_fd2 == -1;
                                                        t = sock_fd2;
                                                        if (sock_fd2 == -1) {
                                                    while (true) {
                                                            while (true) {
                                                                sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
                                    close(t);
                                    int32_t sock_fd3 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xc6a8
                                    t = sock_fd3;
                                    if (sock_fd3 == -1) {
                                    sock_fd2 = sock_fd3;
                while (true) {
        while (true) {
=================FUNCTION : function_f828 ===================
++++++++ FUNCTION START 35094
++++++++ FUNCTION END 35652
++++++++ FUNCTION LENGTH 558
    struct sockaddr * v158;
    int32_t result2 = fork(); // 0xf83c
        int32_t sock = 2; // bp-52
            int32_t sock_fd = socket(AF_INET, SOCK_STREAM, protocol); // 0xfafc
            if (sock_fd != -1) {
                bind((int32_t)&sock, (struct sockaddr *)16, 16);
                listen(sock_fd, 1);
        while (true) {
            struct __dirstream * v368 = opendir((char *)function_1219c(6, NULL)); // 0xf8e0
                struct dirent * v369 = readdir((struct __dirstream *)dirp); // 0xf8f822
                    while (true) {
                        while (true) {
                                    int32_t fd = open((char *)&path, O_RDONLY); // 0xfa04
                                        while (true) {
                                                close(time_val);
                                            v373 = readdir((struct __dirstream *)dirp);
                                        closedir((struct __dirstream *)dirp);
                                        struct dirent * v382 = readdir((struct __dirstream *)dirp); // 0xf974
                                    v373 = readdir((struct __dirstream *)dirp2);
                                v373 = readdir((struct __dirstream *)dirp2);
                            v373 = readdir((struct __dirstream *)dirp);
                        closedir((struct __dirstream *)dirp);
                closedir((struct __dirstream *)dirp);
=================FUNCTION : function_daec ===================
++++++++ FUNCTION START 29704
++++++++ FUNCTION END 30213
++++++++ FUNCTION LENGTH 509
    struct sockaddr * v161;
            int32_t sock; // 0xdd5c
            send(sock, (int32_t *)buf, length, MSG_NOSIGNAL);
                send(sock, (int32_t *)buf, length, MSG_NOSIGNAL);
        int32_t sock2; // 0xddec
        send(sock2, (int32_t *)buf2, length, MSG_NOSIGNAL);
            send(sock2, (int32_t *)buf2, length, MSG_NOSIGNAL);
    while (true) {
        int32_t sock_fd = socket(AF_INET, 17, IPPROTO_UDP); // 0xdc80
        int32_t sock3 = sock_fd; // r0
        if (sock_fd == -1) {
            return sock3;
        bind(sock3, (struct sockaddr *)&addr, 16);
            int32_t sock4; // 0xdc20
            connect(sock4, (struct sockaddr *)addr2, 16);
            int32_t sock5; // 0xdd20
            connect(sock5, (struct sockaddr *)addr3, 16);
=================FUNCTION : function_de10 ===================
++++++++ FUNCTION START 30216
++++++++ FUNCTION END 30844
++++++++ FUNCTION LENGTH 628
    struct sockaddr * v160;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP); // 0xdf6c
    if (sock_fd == -1) {
        return sock_fd;
    if (setsockopt(sock_fd, t, 3, &option_value, 4) == -1) {
        result = close(sock_fd);
                while (true) {
                while (true) {
                        while (true) {
                                                sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
                                            sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
            while (true) {
            while (true) {
        while (true) {
=================FUNCTION : function_cbb4 ===================
++++++++ FUNCTION START 28381
++++++++ FUNCTION END 29046
++++++++ FUNCTION LENGTH 665
    struct sockaddr * v160;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xcdd8
    if (sock_fd == -1) {
        return sock_fd;
    if (setsockopt(sock_fd, t, 3, &option_value, 4) == -1) {
        result = close(sock_fd);
            while (true) {
            while (true) {
                    while (true) {
                                                    sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
                                                sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
        while (true) {
=================FUNCTION : function_d370 ===================
++++++++ FUNCTION START 29049
++++++++ FUNCTION END 29701
++++++++ FUNCTION LENGTH 652
    struct sockaddr * v160;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xd554
    if (sock_fd == -1) {
        return sock_fd;
    if (setsockopt(t, SO_TYPE, option_name, &option_value, (int32_t)&option_len) == -1) {
        result = close(sock_fd);
            while (true) {
            while (true) {
                    while (true) {
                                                    sendto(sock_fd, (int32_t *)message, 60, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
                                                sendto(sock_fd, (int32_t *)message, 60, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
        while (true) {
=================FUNCTION : function_bb50 ===================
++++++++ FUNCTION START 26986
++++++++ FUNCTION END 27616
++++++++ FUNCTION LENGTH 630
    struct sockaddr * v160;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xbcc4
    if (sock_fd == -1) {
        return sock_fd;
    if (setsockopt(sock_fd, t, 3, &option_value, 4) == -1) {
        result = close(sock_fd);
            while (true) {
            while (true) {
                    while (true) {
                                                sendto(sock_fd, (int32_t *)message, v369 + 52, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
        while (true) {
=================FUNCTION : function_b3a8 ===================
++++++++ FUNCTION START 26349
++++++++ FUNCTION END 26983
++++++++ FUNCTION LENGTH 634
    struct sockaddr * v160;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xb51c
    if (sock_fd == -1) {
        return sock_fd;
    if (setsockopt(sock_fd, t, 3, &option_value, 4) == -1) {
        result = close(sock_fd);
            while (true) {
            while (true) {
                    while (true) {
                                                sendto(sock_fd, (int32_t *)message, v369 + 66, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
        while (true) {
=================FUNCTION : function_fb9c ===================
++++++++ FUNCTION START 36409
++++++++ FUNCTION END 36817
++++++++ FUNCTION LENGTH 408
    struct sockaddr * v159;
    int32_t sock_fd = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xfbb8
    int32_t fd = sock_fd;
    if (sock_fd == -1) {
        return sock_fd;
    setsockopt(sock_fd, SO_DEBUG, 2, &option_value, 4);
    fcntl(fd, F_GETFL);
    if (bind(fd, (struct sockaddr *)&addr, 16) == -1) {
        connect(fd, (struct sockaddr *)&addr, 16);
        close(fd);
        result = listen(fd, 1);
=================FUNCTION : function_e4b8 ===================
++++++++ FUNCTION START 30847
++++++++ FUNCTION END 31392
++++++++ FUNCTION LENGTH 545
    struct sockaddr * v161;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP); // 0xe5dc
    if (sock_fd == -1) {
        return sock_fd;
    if (setsockopt(t, SO_TYPE, option_name, &option_value, (int32_t)&option_len) == -1) {
        result = close(sock_fd);
            while (true) {
            while (true) {
                                sendto(sock_fd, (int32_t *)message, v369 + 32, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
=================FUNCTION : function_13228 ===================
++++++++ FUNCTION START 49551
++++++++ FUNCTION END 50119
++++++++ FUNCTION LENGTH 568
    struct sockaddr * v161;
                while (true) {
                        while (true) {
                            while (true) {
                while (true) {
                    while (true) {
        while (true) {
    while (true) {
=================FUNCTION : function_12fec ===================
++++++++ FUNCTION START 47605
++++++++ FUNCTION END 47987
++++++++ FUNCTION LENGTH 382
    struct sockaddr * v161;
    int32_t sock_fd = socket(AF_INET, 0, IPPROTO_IP); // 0x13014
    if (sock_fd != -1) {
        int32_t sock = 2; // bp-40
        connect((int32_t)&sock, (struct sockaddr *)addr, addr);
        getsockname(sock_fd, (struct sockaddr *)&sock, &addr_len);
        close(sock_fd);
=================FUNCTION : function_10608 ===================
++++++++ FUNCTION START 38389
++++++++ FUNCTION END 38757
++++++++ FUNCTION LENGTH 368
    struct sockaddr * v157;
    int32_t pid = getpid(); // 0x1061c
    int32_t v361 = pid ^ getppid();
    int32_t proc_time = clock(); // 0x10634
    int32_t v362 = v361 ^ proc_time;
    int32_t v363 = proc_time;
    return proc_time;
=================FUNCTION : __umodsi3 ===================
++++++++ FUNCTION START 51220
++++++++ FUNCTION END 51985
++++++++ FUNCTION LENGTH 765
    struct sockaddr * v161;
            while (true) {
                        while (true) {
                                while (true) {
                    while (true) {
=================FUNCTION : function_fd0c ===================
++++++++ FUNCTION START 36820
++++++++ FUNCTION END 37218
++++++++ FUNCTION LENGTH 398
    struct sockaddr * v160;
    int32_t result = fork(); // 0xfd14
    int32_t fd = open((char *)function_1219c(59, (int32_t *)status), O_RDWR); // 0xfd70
        int32_t fd2 = open((char *)function_1219c(60, (int32_t *)status), O_RDWR); // 0xfdcc
    while (true) {
=================FUNCTION : function_13198 ===================
++++++++ FUNCTION START 48969
++++++++ FUNCTION END 49548
++++++++ FUNCTION LENGTH 579
    struct sockaddr * v161;
                while (true) {
            while (true) {
            while (true) {
        while (true) {
=================FUNCTION : function_10744 ===================
++++++++ FUNCTION START 39527
++++++++ FUNCTION END 39915
++++++++ FUNCTION LENGTH 388
    struct sockaddr * v161;
    if (socket(AF_INET, SOCK_STREAM, IPPROTO_IP) == -1) {
        fcntl(fd, F_GETFL);
        int32_t sock; // 0x107e4
        result = connect(sock, (struct sockaddr *)&addr, 16);
=================FUNCTION : __udivsi3 ===================
++++++++ FUNCTION START 50122
++++++++ FUNCTION END 50847
++++++++ FUNCTION LENGTH 725
    struct sockaddr * v161;
    while (true) {
                                while (true) {
                                    while (true) {
                while (true) {
=================FUNCTION : __modsi3 ===================
++++++++ FUNCTION START 51988
++++++++ FUNCTION END 52818
++++++++ FUNCTION LENGTH 830
    struct sockaddr * v161;
            while (true) {
                        while (true) {
                                while (true) {
                    while (true) {
=================FUNCTION : function_13114 ===================
++++++++ FUNCTION START 48454
++++++++ FUNCTION END 48966
++++++++ FUNCTION LENGTH 512
    struct sockaddr * v161;
                while (true) {
            while (true) {
            while (true) {
    while (true) {
=================FUNCTION : function_10818 ===================
++++++++ FUNCTION START 39918
++++++++ FUNCTION END 40391
++++++++ FUNCTION LENGTH 473
    struct sockaddr * v157;
        while (true) {
                while (true) {
    while (true) {
=================FUNCTION : function_acb8 ===================
++++++++ FUNCTION START 23521
++++++++ FUNCTION END 23930
++++++++ FUNCTION LENGTH 409
    struct sockaddr * v161;
            return inet_addr((char *)cp);
    while (true) {
        return inet_addr((char *)cp);
=================FUNCTION : function_12e60 ===================
++++++++ FUNCTION START 46605
++++++++ FUNCTION END 47204
++++++++ FUNCTION LENGTH 599
    struct sockaddr * v161;
    while (true) {
    while (true) {
    while (true) {
=================FUNCTION : function_13088 ===================
++++++++ FUNCTION START 47990
++++++++ FUNCTION END 48451
++++++++ FUNCTION LENGTH 461
    struct sockaddr * v161;
        while (true) {
    while (true) {
=================FUNCTION : function_12d5c ===================
++++++++ FUNCTION START 45017
++++++++ FUNCTION END 45438
++++++++ FUNCTION LENGTH 421
    struct sockaddr * v161;
            while (true) {
    while (true) {
=================FUNCTION : _socket ===================
++++++++ FUNCTION START 5738
++++++++ FUNCTION END 6105
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
    return socket(domain, type, protocol);
=================FUNCTION : _recv ===================
++++++++ FUNCTION START 1668
++++++++ FUNCTION END 2035
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
    return recv(fd, buf, n, flags);
=================FUNCTION : function_ac54 ===================
++++++++ FUNCTION START 23119
++++++++ FUNCTION END 23518
++++++++ FUNCTION LENGTH 399
    struct sockaddr * v161;
    while (true) {
=================FUNCTION : _fork ===================
++++++++ FUNCTION START 12399
++++++++ FUNCTION END 12766
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
    return fork();
=================FUNCTION : _open ===================
++++++++ FUNCTION START 15730
++++++++ FUNCTION END 16097
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
    return open(file, oflag);
=================FUNCTION : function_12f8c ===================
++++++++ FUNCTION START 47207
++++++++ FUNCTION END 47602
++++++++ FUNCTION LENGTH 395
    struct sockaddr * v161;
    while (true) {
=================FUNCTION : _inet_addr ===================
++++++++ FUNCTION START 9809
++++++++ FUNCTION END 10176
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
    return inet_addr(cp);
=================FUNCTION : _listen ===================
++++++++ FUNCTION START 12029
++++++++ FUNCTION END 12396
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
    return listen(fd, n);
=================FUNCTION : function_12df8 ===================
++++++++ FUNCTION START 46206
++++++++ FUNCTION END 46602
++++++++ FUNCTION LENGTH 396
    struct sockaddr * v161;
    while (true) {
=================FUNCTION : _getppid ===================
++++++++ FUNCTION START 13509
++++++++ FUNCTION END 13876
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
    return getppid();
=================FUNCTION : _getpid ===================
++++++++ FUNCTION START 3148
++++++++ FUNCTION END 3515
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
    return getpid();
=================FUNCTION : _connect ===================
++++++++ FUNCTION START 2038
++++++++ FUNCTION END 2405
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
    return connect(fd, addr, len);
=================FUNCTION : _recvfrom ===================
++++++++ FUNCTION START 5368
++++++++ FUNCTION END 5735
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
    return recvfrom(fd, buf, n, flags, addr, addr_len);
=================FUNCTION : function_ad24 ===================
++++++++ FUNCTION START 23933
++++++++ FUNCTION END 24342
++++++++ FUNCTION LENGTH 409
    struct sockaddr * v161;
    while (true) {
=================FUNCTION : function_f294 ===================
++++++++ FUNCTION START 33684
++++++++ FUNCTION END 34058
++++++++ FUNCTION LENGTH 374
    struct sockaddr * v160;
    int32_t result = kill(pid, SIGKILL); // 0xf2a0
=================FUNCTION : _close ===================
++++++++ FUNCTION START 17580
++++++++ FUNCTION END 17947
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
    return close(fd);
=================FUNCTION : _sendto ===================
++++++++ FUNCTION START 11289
++++++++ FUNCTION END 11656
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
    return sendto(fd, buf, n, flags, addr, addr_len);
=================FUNCTION : function_10730 ===================
++++++++ FUNCTION START 39150
++++++++ FUNCTION END 39524
++++++++ FUNCTION LENGTH 374
    struct sockaddr * v161;
    int32_t result = kill(pid, SIGKILL); // 0x1073c
=================FUNCTION : _send ===================
++++++++ FUNCTION START 7218
++++++++ FUNCTION END 7585
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
    return send(fd, buf, n, flags);
=================FUNCTION : _getsockopt ===================
++++++++ FUNCTION START 14619
++++++++ FUNCTION END 14986
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
    return getsockopt(fd, level, optname, optval, optlen);
=================FUNCTION : _closedir ===================
++++++++ FUNCTION START 16840
++++++++ FUNCTION END 17207
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
    return closedir(dirp);
=================FUNCTION : _accept ===================
++++++++ FUNCTION START 7959
++++++++ FUNCTION END 8326
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
    return accept(fd, addr, addr_len);
=================FUNCTION : _kill ===================
++++++++ FUNCTION START 9069
++++++++ FUNCTION END 9436
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
    return kill(pid, sig);
=================FUNCTION : _getsockname ===================
++++++++ FUNCTION START 18690
++++++++ FUNCTION END 19057
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
    return getsockname(fd, addr, len);
=================FUNCTION : _setsockopt ===================
++++++++ FUNCTION START 10179
++++++++ FUNCTION END 10546
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
    return setsockopt(fd, level, optname, optval, optlen);
=================FUNCTION : _sigprocmask ===================
++++++++ FUNCTION START 18320
++++++++ FUNCTION END 18687
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
    return sigprocmask(how, set, oset);
=================FUNCTION : function_8b20 ===================
++++++++ FUNCTION START 550
++++++++ FUNCTION END 925
++++++++ FUNCTION LENGTH 375
    struct sockaddr * v160;
=================FUNCTION : __data_start ===================
++++++++ FUNCTION START 54321
++++++++ FUNCTION END 54694
++++++++ FUNCTION LENGTH 373
    struct sockaddr * v161;
=================FUNCTION : _ioctl ===================
++++++++ FUNCTION START 1298
++++++++ FUNCTION END 1665
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
=================FUNCTION : _read ===================
++++++++ FUNCTION START 10919
++++++++ FUNCTION END 11286
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
=================FUNCTION : ___uClibc_main ===================
++++++++ FUNCTION START 12769
++++++++ FUNCTION END 13136
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
=================FUNCTION : function_8b08 ===================
++++++++ FUNCTION START 179
++++++++ FUNCTION END 547
++++++++ FUNCTION LENGTH 368
    struct sockaddr * v163 = NULL;
=================FUNCTION : _time ===================
++++++++ FUNCTION START 13879
++++++++ FUNCTION END 14246
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
=================FUNCTION : function_b070 ===================
++++++++ FUNCTION START 25938
++++++++ FUNCTION END 26346
++++++++ FUNCTION LENGTH 408
    struct sockaddr * v159;
=================FUNCTION : function_13638 ===================
++++++++ FUNCTION START 53578
++++++++ FUNCTION END 53946
++++++++ FUNCTION LENGTH 368
    struct sockaddr * v161;
=================FUNCTION : __start ===================
++++++++ FUNCTION START 20574
++++++++ FUNCTION END 20943
++++++++ FUNCTION LENGTH 369
    struct sockaddr * v161;
=================FUNCTION : _bind ===================
++++++++ FUNCTION START 9439
++++++++ FUNCTION END 9806
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
=================FUNCTION : function_13604 ===================
++++++++ FUNCTION START 53192
++++++++ FUNCTION END 53575
++++++++ FUNCTION LENGTH 383
    struct sockaddr * v160;
=================FUNCTION : function_13640 ===================
++++++++ FUNCTION START 53949
++++++++ FUNCTION END 54318
++++++++ FUNCTION LENGTH 369
    struct sockaddr * v161;
=================FUNCTION : function_12338 ===================
++++++++ FUNCTION START 44134
++++++++ FUNCTION END 44631
++++++++ FUNCTION LENGTH 497
    struct sockaddr * v116;
=================FUNCTION : _clock ===================
++++++++ FUNCTION START 16100
++++++++ FUNCTION END 16467
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
=================FUNCTION : _fcntl ===================
++++++++ FUNCTION START 17210
++++++++ FUNCTION END 17577
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
=================FUNCTION : function_12d34 ===================
++++++++ FUNCTION START 44634
++++++++ FUNCTION END 45014
++++++++ FUNCTION LENGTH 380
    struct sockaddr * v161;
=================FUNCTION : function_8d80 ===================
++++++++ FUNCTION START 19060
++++++++ FUNCTION END 19448
++++++++ FUNCTION LENGTH 388
    struct sockaddr * v159;
=================FUNCTION : _prctl ===================
++++++++ FUNCTION START 3518
++++++++ FUNCTION END 3885
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
=================FUNCTION : function_8df4 ===================
++++++++ FUNCTION START 19451
++++++++ FUNCTION END 19825
++++++++ FUNCTION LENGTH 374
    struct sockaddr * v161;
=================FUNCTION : function_f1e4 ===================
++++++++ FUNCTION START 33244
++++++++ FUNCTION END 33681
++++++++ FUNCTION LENGTH 437
    struct sockaddr * v161;
=================FUNCTION : function_12280 ===================
++++++++ FUNCTION START 43724
++++++++ FUNCTION END 44131
++++++++ FUNCTION LENGTH 407
    struct sockaddr * v160;
=================FUNCTION : * ===================
++++++++ FUNCTION START 14989
++++++++ FUNCTION END 15356
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
    struct sockaddr * v161;
    struct sockaddr * v161;
    struct sockaddr * v161;
    struct sockaddr * v161;
    struct sockaddr * v161;
    struct sockaddr * v161;
=================FUNCTION : function_f180 ===================
++++++++ FUNCTION START 32457
++++++++ FUNCTION END 32832
++++++++ FUNCTION LENGTH 375
    struct sockaddr * v161;
=================FUNCTION : _sigaddset ===================
++++++++ FUNCTION START 6848
++++++++ FUNCTION END 7215
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
=================FUNCTION : function_1219c ===================
++++++++ FUNCTION START 42933
++++++++ FUNCTION END 43311
++++++++ FUNCTION LENGTH 378
    struct sockaddr * v161;
=================FUNCTION : _setsid ===================
++++++++ FUNCTION START 16470
++++++++ FUNCTION END 16837
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
=================FUNCTION : _sleep ===================
++++++++ FUNCTION START 4998
++++++++ FUNCTION END 5365
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
=================FUNCTION : _readlink ===================
++++++++ FUNCTION START 4258
++++++++ FUNCTION END 4625
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
=================FUNCTION : function_105b0 ===================
++++++++ FUNCTION START 38013
++++++++ FUNCTION END 38386
++++++++ FUNCTION LENGTH 373
    struct sockaddr * v157;
=================FUNCTION : _select ===================
++++++++ FUNCTION START 6108
++++++++ FUNCTION END 6475
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
=================FUNCTION : __aeabi_ldiv0 ===================
++++++++ FUNCTION START 52821
++++++++ FUNCTION END 53189
++++++++ FUNCTION LENGTH 368
    struct sockaddr * v161;
=================FUNCTION : function_10664 ===================
++++++++ FUNCTION START 38760
++++++++ FUNCTION END 39147
++++++++ FUNCTION LENGTH 387
    struct sockaddr * v161;
=================FUNCTION : function_12db0 ===================
++++++++ FUNCTION START 45441
++++++++ FUNCTION END 45820
++++++++ FUNCTION LENGTH 379
    struct sockaddr * v161;
=================FUNCTION : function_12dd4 ===================
++++++++ FUNCTION START 45823
++++++++ FUNCTION END 46203
++++++++ FUNCTION LENGTH 380
    struct sockaddr * v161;
=================FUNCTION : function_121c8 ===================
++++++++ FUNCTION START 43314
++++++++ FUNCTION END 43721
++++++++ FUNCTION LENGTH 407
    struct sockaddr * v160;
=================FUNCTION : function_fb34 ===================
++++++++ FUNCTION START 35655
++++++++ FUNCTION END 36022
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v160;
=================FUNCTION : __aeabi_uidivmod ===================
++++++++ FUNCTION START 50850
++++++++ FUNCTION END 51217
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
=================FUNCTION : function_f188 ===================
++++++++ FUNCTION START 32835
++++++++ FUNCTION END 33241
++++++++ FUNCTION LENGTH 406
    struct sockaddr * v161;
=================FUNCTION : function_fb4c ===================
++++++++ FUNCTION START 36025
++++++++ FUNCTION END 36406
++++++++ FUNCTION LENGTH 381
    struct sockaddr * v161;
=================FUNCTION : _sigemptyset ===================
++++++++ FUNCTION START 2408
++++++++ FUNCTION END 2775
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
=================FUNCTION : function_8e00 ===================
++++++++ FUNCTION START 19828
++++++++ FUNCTION END 20200
++++++++ FUNCTION LENGTH 372
    struct sockaddr * v161;
=================FUNCTION : _write ===================
++++++++ FUNCTION START 8699
++++++++ FUNCTION END 9066
++++++++ FUNCTION LENGTH 367
    struct sockaddr * v161;
=================FUNCTION : function_8e58 ===================
++++++++ FUNCTION START 20203
++++++++ FUNCTION END 20571
++++++++ FUNCTION LENGTH 368
    struct sockaddr * v161;
================================================================================
========	WHILE LOOPS INTRESTING INSTRUCTIONS : =================================
================================================================================
=============================WHILE LOOPS ID : 1 @ function_8e9c ====================================
++++++++ WHILE START : 21357 
++++++++ WHILE FUNCTION : function_8e9c 
++++++++ WHILE END : 21919 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		int32_t sock_fd = socket(AF_INET, SOCK_STREAM, protocol); // 0x9364
		dest_mem = sock_fd;
		fd = sock_fd;
		if (sock_fd != -1) {
		fcntl(dest_mem, F_GETFL);
		int32_t sock; // 0x93a4
		setsockopt(sock, protocol, 8, &option_value, 4);
		int32_t sock2; // 0x93d4
		connect(sock2, (struct sockaddr *)&addr, 16);
		function_12d5c((char *)v432, (int32_t)" HTTP/1.1\r\nUser-Agent: ");
		function_12d5c((char *)v434, (int32_t)"\r\nHost: ");
		int32_t sock3; // 0x99a0
		send(sock3, (int32_t *)buf, function_12d34(v404), MSG_NOSIGNAL);
		close(fd2);
		close(fd3);
=============================WHILE LOOPS ID : 2 @ function_8e9c ====================================
++++++++ WHILE START : 21959 
++++++++ WHILE FUNCTION : function_8e9c 
++++++++ WHILE END : 23102 
++++++++ INTRESTING INSTRUCTIONS :  
		uint32_t sock8; // 0x9528
		if (sock8 != -1) {
		if ((v480 >> sock8 % 32) % 2 == 0) {
		v479 = sock8;
		int32_t sock4; // 0x9ab4
		int32_t v486 = recv(sock4, &buf2, 0x2800, MSG_PEEK | MSG_NOSIGNAL); // 0x9ac0
		close(fd4);
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		if (function_12df8(t, v546, (int32_t)"http", 4) == 4) {
		while (true) {
		if (function_13114((char *)v560, (int32_t)"POST") == 0) {
		if (function_13114((char *)v560, (int32_t)"GET") == 0) {
		int32_t sock5; // 0xa5d0
		recv(sock5, &buf2, length, MSG_NOSIGNAL);
		if (function_13088((char *)fd, function_12d34((char *)v577), (int32_t)"url=") == -1) {
		int32_t v582 = option_value + function_13088((char *)v581, function_12d34((char *)v581), (int32_t)"url="); // 0xa4cc
		while (true) {
		if (function_13088((char *)t, function_12d34((char *)v589), (int32_t)"http") == 4) {
		while (true) {
		memcpy((int32_t *)(v363 + 1431), (int32_t *)"GET", 4);
		dest_mem = (int32_t)memcpy((int32_t *)v602, (int32_t *)"GET", 4);
		if (function_13114((char *)v560, (int32_t)"POST") == 0) {
		while (true) {
		while (true) {
		int32_t sock6; // 0xa10c
		int32_t v608 = recv(sock6, (int32_t *)(v374 + v607), 1024 - v607, MSG_NOSIGNAL); // 0xa11c
		close(fd5);
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		int32_t sock7; // 0xa300
		int32_t v650 = recv(sock7, &buf2, 0x2800, MSG_NOSIGNAL); // 0xa30c
		close(fd6);
		close(fd6);
		while (true) {
		int32_t v653 = option_value2 | getsockopt(sock8, SO_DEBUG, 4, &option_value2, &option_len); // 0x959c
		close(fd7);
=============================WHILE LOOPS ID : 7 @ function_ad94 ====================================
++++++++ WHILE START : 24778 
++++++++ WHILE FUNCTION : function_ad94 
++++++++ WHILE END : 25446 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		v385 = fork();
		while (true) {
		free((int32_t *)v382);
		while (true) {
		free((int32_t *)v382);
		while (true) {
		free((int32_t *)v382);
		while (true) {
		free((int32_t *)v382);
		while (true) {
		free((int32_t *)v382);
		while (true) {
		free((int32_t *)v382);
		while (true) {
		v385 = fork();
		while (true) {
		free((int32_t *)v382);
		while (true) {
		free((int32_t *)v382);
		while (true) {
		free((int32_t *)v382);
		while (true) {
		free((int32_t *)v382);
		while (true) {
=============================WHILE LOOPS ID : 8 @ function_ad94 ====================================
++++++++ WHILE START : 25482 
++++++++ WHILE FUNCTION : function_ad94 
++++++++ WHILE END : 25624 
++++++++ INTRESTING INSTRUCTIONS :  
		v385 = fork();
		while (true) {
		free((int32_t *)v382);
		while (true) {
		free((int32_t *)v382);
		while (true) {
=============================WHILE LOOPS ID : 17 @ function_b3a8 ====================================
++++++++ WHILE START : 26809 
++++++++ WHILE FUNCTION : function_b3a8 
++++++++ WHILE END : 26966 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		sendto(sock_fd, (int32_t *)message, v369 + 66, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
=============================WHILE LOOPS ID : 20 @ function_bb50 ====================================
++++++++ WHILE START : 27446 
++++++++ WHILE FUNCTION : function_bb50 
++++++++ WHILE END : 27599 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		sendto(sock_fd, (int32_t *)message, v369 + 52, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
=============================WHILE LOOPS ID : 22 @ function_c288 ====================================
++++++++ WHILE START : 28035 
++++++++ WHILE FUNCTION : function_c288 
++++++++ WHILE END : 28361 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		int32_t sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xc50c
		t = sock_fd2;
		if (sock_fd2 == -1) {
		while (true) {
		fcntl(sock_fd2, F_GETFL);
		connect(t, (struct sockaddr *)&addr, 16);
		while (true) {
		int32_t v401 = recvfrom(sock_fd, &buf, 256, MSG_NOSIGNAL, (struct sockaddr *)&addr2, &addr_len); // 0xc618
		close(t);
		while (true) {
		sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP);
		v406 = sock_fd2;
		v405 = sock_fd2 == -1;
		t = sock_fd2;
		if (sock_fd2 == -1) {
		while (true) {
		while (true) {
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
		close(t);
		int32_t sock_fd3 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xc6a8
		t = sock_fd3;
		if (sock_fd3 == -1) {
		sock_fd2 = sock_fd3;
		while (true) {
=============================WHILE LOOPS ID : 25 @ function_cbb4 ====================================
++++++++ WHILE START : 28846 
++++++++ WHILE FUNCTION : function_cbb4 
++++++++ WHILE END : 29029 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
=============================WHILE LOOPS ID : 28 @ function_d370 ====================================
++++++++ WHILE START : 29503 
++++++++ WHILE FUNCTION : function_d370 
++++++++ WHILE END : 29686 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		sendto(sock_fd, (int32_t *)message, 60, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
		sendto(sock_fd, (int32_t *)message, 60, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
=============================WHILE LOOPS ID : 30 @ function_daec ====================================
++++++++ WHILE START : 30156 
++++++++ WHILE FUNCTION : function_daec 
++++++++ WHILE END : 30207 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t sock_fd = socket(AF_INET, 17, IPPROTO_UDP); // 0xdc80
		int32_t sock3 = sock_fd; // r0
		if (sock_fd == -1) {
		return sock3;
		bind(sock3, (struct sockaddr *)&addr, 16);
		int32_t sock4; // 0xdc20
		connect(sock4, (struct sockaddr *)addr2, 16);
		int32_t sock5; // 0xdd20
		connect(sock5, (struct sockaddr *)addr3, 16);
=============================WHILE LOOPS ID : 32 @ function_de10 ====================================
++++++++ WHILE START : 30653 
++++++++ WHILE FUNCTION : function_de10 
++++++++ WHILE END : 30798 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
=============================WHILE LOOPS ID : 37 @ function_e4b8 ====================================
++++++++ WHILE START : 31287 
++++++++ WHILE FUNCTION : function_e4b8 
++++++++ WHILE END : 31363 
++++++++ INTRESTING INSTRUCTIONS :  
		sendto(sock_fd, (int32_t *)message, v369 + 32, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
=============================WHILE LOOPS ID : 39 @ function_e9b8 ====================================
++++++++ WHILE START : 31903 
++++++++ WHILE FUNCTION : function_e9b8 
++++++++ WHILE END : 32263 
++++++++ INTRESTING INSTRUCTIONS :  
		inet_addr((char *)&cp);
		sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
		if (sock_fd == -1) {
		return sock_fd;
		if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
		result2 = close(sock_fd);
		while (true) {
		while (true) {
		while (true) {
		sendto(sock_fd, (int32_t *)fd, v407 + 47, MSG_NOSIGNAL, (struct sockaddr *)(a3 + 24 * option_value), 16);
		inet_addr((char *)&cp);
		sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
		if (sock_fd == -1) {
		return sock_fd;
		if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
		result2 = close(sock_fd);
		while (true) {
=============================WHILE LOOPS ID : 43 @ function_f2a8 ====================================
++++++++ WHILE START : 34521 
++++++++ WHILE FUNCTION : function_f2a8 
++++++++ WHILE END : 35044 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		close(fd2);
		dirp = opendir((char *)name);
		while (true) {
		while (true) {
		struct __dirstream * dirp2 = opendir((char *)&path); // 0xf65c
		while (true) {
		while (true) {
		kill(function_12e60((char *)v407, 10), SIGKILL);
		struct dirent * v425 = readdir((struct __dirstream *)dirp3); // 0xf758
		struct dirent * v426 = readdir((struct __dirstream *)dirp3); // 0xf66c
		closedir((struct __dirstream *)dirp3);
		v416 = readdir((struct __dirstream *)fd2);
		closedir((struct __dirstream *)dirp4);
		closedir((struct __dirstream *)dirp3);
		v416 = readdir((struct __dirstream *)fd2);
		struct dirent * v436 = readdir((struct __dirstream *)fd2); // 0xf578
		closedir((struct __dirstream *)fd2);
		closedir((struct __dirstream *)fd2);
		close(fd2);
		dirp = opendir((char *)name);
		while (true) {
		closedir((struct __dirstream *)fd2);
=============================WHILE LOOPS ID : 45 @ function_f828 ====================================
++++++++ WHILE START : 35483 
++++++++ WHILE FUNCTION : function_f828 
++++++++ WHILE END : 35648 
++++++++ INTRESTING INSTRUCTIONS :  
		struct __dirstream * v368 = opendir((char *)function_1219c(6, NULL)); // 0xf8e0
		struct dirent * v369 = readdir((struct __dirstream *)dirp); // 0xf8f822
		while (true) {
		while (true) {
		int32_t fd = open((char *)&path, O_RDONLY); // 0xfa04
		while (true) {
		close(time_val);
		v373 = readdir((struct __dirstream *)dirp);
		closedir((struct __dirstream *)dirp);
		struct dirent * v382 = readdir((struct __dirstream *)dirp); // 0xf974
		v373 = readdir((struct __dirstream *)dirp2);
		v373 = readdir((struct __dirstream *)dirp2);
		v373 = readdir((struct __dirstream *)dirp);
		closedir((struct __dirstream *)dirp);
		closedir((struct __dirstream *)dirp);
=============================WHILE LOOPS ID : 47 @ function_fdf8 ====================================
++++++++ WHILE START : 37675 
++++++++ WHILE FUNCTION : function_fdf8 
++++++++ WHILE END : 37960 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		int32_t sock2;
		while (true) {
		v391 = sock2;
		int32_t sock;
		if (sock == -1) {
		int32_t sock_fd = socket(AF_INET, SOCK_STREAM, protocol); // 0x10304
		int32_t fd3 = sock_fd; // r5
		if (sock_fd != -1) {
		fcntl(sock_fd, F_GETFL);
		connect(sock, (struct sockaddr *)&addr, 16);
		uint32_t v396 = sock; // 0x10214
		int32_t v400 = sock; // 0x1010c
		int32_t v401 = sock2; // 0x10130
		if (sock2 < v400) {
		send(sock, (int32_t *)&buf2, 2, MSG_NOSIGNAL);
		if (sock2 != -1) {
		if ((v404 >> sock2 % 32) % 2 != 0) {
		int32_t accepted_sock_fd = accept(sock2, (struct sockaddr *)&addr2, &addr_len); // 0x103fc
		function_f294(function_10730(accepted_sock_fd));
		kill(-v364, SIGKILL);
		kill(pid, SIGKILL);
		uint32_t sock3 = sock; // 0x10240
		if (sock3 != -1) {
		if ((v409 >> sock3 % 32) % 2 != 0) {
		int32_t v410 = recv(sock, (int32_t *)&buf2, 2, MSG_PEEK | MSG_NOSIGNAL); // 0x102a0
		__pseudo_cond_branch(sock != -1, (int32_t)&v408);
		sock = -1;
		recv(sock, (int32_t *)&buf2, 2, MSG_NOSIGNAL);
		close(sock);
		int32_t v414 = recv(sock, &buf3, length, MSG_PEEK | MSG_NOSIGNAL); // 0x104f0
		recv(sock, (int32_t *)&buf2, 2, MSG_NOSIGNAL);
		recv(sock, &buf3, length2, MSG_NOSIGNAL);
		if ((v419 >> sock3 % 32) % 2 == 0) {
		__pseudo_cond_branch(sock3 != -1, (int32_t)&v408);
		getsockopt(sock3, SO_DEBUG, 4, &addr_len, &option_len);
		int32_t sock4; // 0x10454
		send(sock4, &buf4, 4, MSG_NOSIGNAL);
		int32_t sock5; // 0x10464
		send(sock5, (int32_t *)&buf2, 1, MSG_NOSIGNAL);
		int32_t sock6; // 0x10480
		send(sock6, &buf5, length3, MSG_NOSIGNAL);
		close(sock);
		v391 = sock2;
=============================WHILE LOOPS ID : 49 @ function_10818 ====================================
++++++++ WHILE START : 40302 
++++++++ WHILE FUNCTION : function_10818 
++++++++ WHILE END : 40355 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 51 @ function_109cc ====================================
++++++++ WHILE START : 40772 
++++++++ WHILE FUNCTION : function_109cc 
++++++++ WHILE END : 42633 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0x10a98
		sock = sock_fd;
		if (sock_fd == -1) {
		fcntl(sock_fd, F_GETFL);
		fcntl(sock_fd, F_SETFL);
		if (setsockopt(sock, status, 3, &status, 4) != 0) {
		close(sock);
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		uint32_t v372 = recvfrom(sock, &buf, 1514, MSG_NOSIGNAL, NULL, NULL); // 0x110f4
		while (true) {
		close(fd);
		while (true) {
		int32_t sock18; // 0x11480
		if (sock18 != -1) {
		if ((v403 >> sock18 % 32) % 2 == 0) {
		v401 = sock18;
		while (true) {
		while (true) {
		int32_t sock2; // 0x11630
		int32_t v413 = recv(sock2, (int32_t *)buf2, 256 - v412, MSG_NOSIGNAL); // 0x11640
		close(fd2);
		while (true) {
		case 2: {
		while (true) {
		while (true) {
		int32_t sock3; // 0x11f8c
		send(sock3, &buf3, 3, MSG_NOSIGNAL);
		send(0x4000, (int32_t *)buf4, 3, MSG_NOSIGNAL);
		send(0x4000, (int32_t *)(int32_t)&buf5, 9, MSG_NOSIGNAL);
		while (true) {
		case 2: {
		while (true) {
		case 3: {
		while (true) {
		int32_t sock4; // 0x11800
		send(sock4, (int32_t *)buf6, (int32_t)length, MSG_NOSIGNAL);
		int32_t sock5; // 0x11818
		send(sock5, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 4: {
		while (true) {
		int32_t sock6; // 0x11890
		send(sock6, (int32_t *)buf7, (int32_t)length2, MSG_NOSIGNAL);
		int32_t sock7; // 0x118a8
		send(sock7, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 5: {
		while (true) {
		int32_t sock8; // 0x11948
		send(sock8, (int32_t *)buf8, (int32_t)length3, MSG_NOSIGNAL);
		int32_t sock9; // 0x1195c
		send(sock9, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		while (true) {
		while (true) {
		case 6: {
		while (true) {
		int32_t sock10; // 0x11ab8
		send(sock10, (int32_t *)buf9, length4, MSG_NOSIGNAL);
		int32_t sock11; // 0x11acc
		send(sock11, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 7: {
		while (true) {
		int32_t sock12; // 0x11c20
		send(sock12, (int32_t *)buf10, length4, MSG_NOSIGNAL);
		int32_t sock13; // 0x11c34
		send(sock13, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 8: {
		while (true) {
		int32_t sock14; // 0x11b6c
		send(sock14, (int32_t *)buf11, (int32_t)length3, MSG_NOSIGNAL);
		int32_t sock15; // 0x11b80
		send(sock15, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 9: {
		while (true) {
		int32_t sock16; // 0x11d7c
		send(sock16, (int32_t *)buf12, (int32_t)length3, MSG_NOSIGNAL);
		int32_t sock17; // 0x11d90
		send(sock17, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 10: {
		int32_t v557 = fork(); // 0x11ee4
		int32_t sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0x1203c
		t = sock_fd2;
		if (sock_fd2 == -1) {
		if (connect(t, (struct sockaddr *)&addr, 16) == -1) {
		close(t);
		send(t, (int32_t *)&length3, 1, MSG_NOSIGNAL);
		send(t, &length4, 4, MSG_NOSIGNAL);
		send(t, &buf13, 2, MSG_NOSIGNAL);
		send(t, (int32_t *)(v560 + 12), 1, MSG_NOSIGNAL);
		send(t, (int32_t *)buf14, (int32_t)length5, MSG_NOSIGNAL);
		send(t, (int32_t *)(v560 + 13), 1, MSG_NOSIGNAL);
		send(t, (int32_t *)buf15, (int32_t)length6, MSG_NOSIGNAL);
		close(t);
		close(fd3);
		close(fd4);
		while (true) {
		case 3: {
		case 4: {
		case 5: {
		case 6: {
		case 7: {
		case 8: {
		case 9: {
		case 10: {
		close(fd2);
		while (true) {
		if ((length4 || getsockopt(sock18, SO_DEBUG, 4, &length4, (int32_t *)&length3)) == 0) {
		while (true) {
		close(fd5);
		while (true) {
=============================WHILE LOOPS ID : 79 @ __udivsi3 ====================================
++++++++ WHILE START : 50634 
++++++++ WHILE FUNCTION : __udivsi3 
++++++++ WHILE END : 50846 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 80 @ __umodsi3 ====================================
++++++++ WHILE START : 51619 
++++++++ WHILE FUNCTION : __umodsi3 
++++++++ WHILE END : 51973 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 81 @ __modsi3 ====================================
++++++++ WHILE START : 52418 
++++++++ WHILE FUNCTION : __modsi3 
++++++++ WHILE END : 52798 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
