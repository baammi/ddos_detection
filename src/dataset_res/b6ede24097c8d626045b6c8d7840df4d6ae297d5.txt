=============================================================================
========	BINARY ID :b6ede24097c8d626045b6c8d7840df4d6ae297d5==================================================
================================================================================
================================================================================
========	STRINGS SUMMARY : =====================================================
================================================================================
TOTAL STRINGS COUNT :153
SUPSCPECTED LINES COUNT :10
SUPSCPECTED STRINGS COUNT (DISTINCT) :9
SUPSCPECTED STRINGS WEIGHT :31
SUSPECT STRING SCORE : [31 / 150] 20%
USER AGENTS STRINGS COUNT :0
STATIC IPs STRINGS COUNT :0
DYNAMIC IPs STRINGS COUNT :0
================================================================================
========	STRINGS DETAILS : =====================================================
================================================================================
================================================================================
========	SUSPECTED STRINGS : =====================================================
================================================================================
connect
getpid
socket
kill
bind
inet_addr
fork
getppid
sigprocmask
\fëꀰ뫣씀ᓡꀐ뫣옰ۡꀀ\f뫫였áꁀߣꀐ듡휠ೡ鴰뛥은ۡꀀ￡\f峫鴠若ꀲს锐若䌱ৠ菠Ӡ踐˥ꀐ뛣윀სꃀ맣茐닡칀ǡꀹףꀐⓡ鴀ࣥꀠá跠ӥ跀쇥
================================================================================
========	USER AGENTS STRINGS : =====================================================
================================================================================
================================================================================
========	STATIC IP ADRESSES : =====================================================
================================================================================
================================================================================
========	DYNAMIC IP MASKS : =====================================================
================================================================================
================================================================================
========	/proc FOLDER ACCESS : =====================================================
================================================================================
================================================================================
========	HISTORY TEMPERING : =====================================================
================================================================================
================================================================================
========	AUTOINSTALL COMMANDS : =====================================================
================================================================================
================================================================================
========	FUNCTIONS SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES			: 28981
+++TOTAL FUNCTIONS 			:117
+++LINES PER FUNCTION RATIO 	: 247.700854700855
+++SUSPECTED LINES COUNT 	: 857
+++SUSPECTED LINES RATIO 	: 2.95710983057865
================================================================================
========	WHILES SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES				: 28981
+++WHILE (TRUE) LINES			: 7854
+++WHILE (TRUE) LINES RATION		:27.1005141299472%
+++WHILE (TRUE) LOOPS COUNT		: 141
================================================================================
========	SYSTEM FILES SUMMARY : ================================================
================================================================================
================================================================================
========	IP PATTERNS SUMMARY : =================================================
================================================================================
================================================================================
========	SYSTEM CALLS SUMMARY : ================================================
================================================================================
================================================================================
========	FUNCTIONS LIST : =======================================================
================================================================================
FUNCTION_NAME                                     |ARGS|LENGH   |SUSPCET_INSTRC|WHILE_INSTRC|
----------------------------------------------------------------------------------------------
function_f858                                     |1   |2777    |146           |2266        |
----------------------------------------------------------------------------------------------
function_a1e8                                     |4   |872     |63            |446         |
----------------------------------------------------------------------------------------------
function_c194                                     |4   |872     |63            |446         |
----------------------------------------------------------------------------------------------
function_dac4                                     |1   |900     |57            |673         |
----------------------------------------------------------------------------------------------
function_e69c                                     |2   |639     |57            |119         |
----------------------------------------------------------------------------------------------
function_cd58                                     |4   |870     |56            |433         |
----------------------------------------------------------------------------------------------
function_d530                                     |1   |851     |42            |567         |
----------------------------------------------------------------------------------------------
function_a488                                     |4   |502     |31            |285         |
----------------------------------------------------------------------------------------------
function_ac3c                                     |4   |502     |31            |285         |
----------------------------------------------------------------------------------------------
function_f100                                     |1   |636     |28            |425         |
----------------------------------------------------------------------------------------------
function_11d70                                    |0   |0       |24            |0           |
----------------------------------------------------------------------------------------------
function_bae8                                     |4   |432     |15            |231         |
----------------------------------------------------------------------------------------------
function_c920                                     |4   |322     |14            |129         |
----------------------------------------------------------------------------------------------
function_c434                                     |4   |381     |13            |165         |
----------------------------------------------------------------------------------------------
function_e3c8                                     |1   |190     |13            |0           |
----------------------------------------------------------------------------------------------
function_b3f0                                     |4   |434     |12            |228         |
----------------------------------------------------------------------------------------------
function_9bcc                                     |4   |402     |9             |190         |
----------------------------------------------------------------------------------------------
function_11b4c                                    |3   |0       |8             |67          |
----------------------------------------------------------------------------------------------
function_8eb4                                     |3   |389     |8             |74          |
----------------------------------------------------------------------------------------------
function_9538                                     |4   |381     |8             |168         |
----------------------------------------------------------------------------------------------
function_119a8                                    |0   |0       |7             |0           |
----------------------------------------------------------------------------------------------
function_f630                                     |0   |161     |7             |0           |
----------------------------------------------------------------------------------------------
function_eec4                                     |1   |145     |7             |0           |
----------------------------------------------------------------------------------------------
function_11acc                                    |2   |0       |5             |40          |
----------------------------------------------------------------------------------------------
function_e5ac                                     |1   |175     |5             |5           |
----------------------------------------------------------------------------------------------
function_11c48                                    |0   |0       |5             |212         |
----------------------------------------------------------------------------------------------
function_8db8                                     |6   |201     |5             |13          |
----------------------------------------------------------------------------------------------
function_11810                                    |2   |0       |4             |184         |
----------------------------------------------------------------------------------------------
function_90d0                                     |5   |193     |4             |16          |
----------------------------------------------------------------------------------------------
function_11a3c                                    |3   |0       |3             |56          |
----------------------------------------------------------------------------------------------
_closedir                                         |2   |144     |2             |0           |
----------------------------------------------------------------------------------------------
_accept                                           |4   |144     |2             |0           |
----------------------------------------------------------------------------------------------
_sendto                                           |7   |144     |2             |0           |
----------------------------------------------------------------------------------------------
_send                                             |4   |144     |2             |0           |
----------------------------------------------------------------------------------------------
_getsockopt                                       |6   |144     |2             |0           |
----------------------------------------------------------------------------------------------
_setsockopt                                       |5   |144     |2             |0           |
----------------------------------------------------------------------------------------------
_sigprocmask                                      |5   |144     |2             |0           |
----------------------------------------------------------------------------------------------
function_8d5c                                     |4   |179     |2             |16          |
----------------------------------------------------------------------------------------------
function_1194c                                    |3   |0       |2             |26          |
----------------------------------------------------------------------------------------------
function_d508                                     |1   |144     |2             |0           |
----------------------------------------------------------------------------------------------
function_f0d8                                     |1   |157     |2             |0           |
----------------------------------------------------------------------------------------------
_getsockname                                      |4   |144     |2             |0           |
----------------------------------------------------------------------------------------------
_kill                                             |2   |144     |2             |0           |
----------------------------------------------------------------------------------------------
function_913c                                     |5   |193     |2             |16          |
----------------------------------------------------------------------------------------------
_listen                                           |2   |144     |2             |0           |
----------------------------------------------------------------------------------------------
function_f608                                     |1   |144     |2             |0           |
----------------------------------------------------------------------------------------------
function_117a4                                    |4   |0       |2             |27          |
----------------------------------------------------------------------------------------------
_getppid                                          |0   |144     |2             |0           |
----------------------------------------------------------------------------------------------
_socket                                           |3   |144     |2             |0           |
----------------------------------------------------------------------------------------------
_recv                                             |4   |144     |2             |0           |
----------------------------------------------------------------------------------------------
function_effc                                     |2   |195     |2             |46          |
----------------------------------------------------------------------------------------------
_open                                             |3   |144     |2             |0           |
----------------------------------------------------------------------------------------------
_fork                                             |0   |144     |2             |0           |
----------------------------------------------------------------------------------------------
_inet_addr                                        |1   |144     |2             |0           |
----------------------------------------------------------------------------------------------
_recvfrom                                         |8   |144     |2             |0           |
----------------------------------------------------------------------------------------------
_close                                            |1   |144     |2             |0           |
----------------------------------------------------------------------------------------------
_getpid                                           |0   |144     |2             |0           |
----------------------------------------------------------------------------------------------
_connect                                          |4   |144     |2             |0           |
----------------------------------------------------------------------------------------------
_atoi                                             |1   |144     |1             |0           |
----------------------------------------------------------------------------------------------
function_110b8                                    |1   |180     |1             |0           |
----------------------------------------------------------------------------------------------
function_8d18                                     |2   |150     |1             |0           |
----------------------------------------------------------------------------------------------
function_10ff4                                    |2   |154     |1             |0           |
----------------------------------------------------------------------------------------------
function_8cc8                                     |1   |151     |1             |0           |
----------------------------------------------------------------------------------------------
function_ee4c                                     |2   |163     |1             |0           |
----------------------------------------------------------------------------------------------
function_11d44                                    |2   |0       |1             |0           |
----------------------------------------------------------------------------------------------
function_ee68                                     |0   |150     |1             |0           |
----------------------------------------------------------------------------------------------
_raise                                            |1   |144     |1             |0           |
----------------------------------------------------------------------------------------------
_sigemptyset                                      |2   |144     |1             |0           |
----------------------------------------------------------------------------------------------
function_e51c                                     |3   |150     |1             |0           |
----------------------------------------------------------------------------------------------
function_d414                                     |2   |171     |1             |0           |
----------------------------------------------------------------------------------------------
_write                                            |3   |144     |1             |0           |
----------------------------------------------------------------------------------------------
function_1175c                                    |3   |0       |1             |0           |
----------------------------------------------------------------------------------------------
function_8ce4                                     |0   |151     |1             |0           |
----------------------------------------------------------------------------------------------
function_11d5c                                    |0   |0       |1             |0           |
----------------------------------------------------------------------------------------------
_unlink                                           |1   |144     |1             |0           |
----------------------------------------------------------------------------------------------
function_116ec                                    |1   |0       |1             |0           |
----------------------------------------------------------------------------------------------
function_11158                                    |4   |0       |1             |0           |
----------------------------------------------------------------------------------------------
function_11780                                    |0   |0       |1             |0           |
----------------------------------------------------------------------------------------------
_bind                                             |4   |144     |1             |0           |
----------------------------------------------------------------------------------------------
__start                                           |2   |148     |1             |0           |
----------------------------------------------------------------------------------------------
_clock                                            |0   |144     |1             |0           |
----------------------------------------------------------------------------------------------
function_e528                                     |2   |162     |1             |0           |
----------------------------------------------------------------------------------------------
_fcntl                                            |2   |144     |1             |0           |
----------------------------------------------------------------------------------------------
_prctl                                            |5   |144     |1             |0           |
----------------------------------------------------------------------------------------------
_ioctl                                            |2   |144     |1             |0           |
----------------------------------------------------------------------------------------------
___uClibc_main                                    |7   |144     |1             |0           |
----------------------------------------------------------------------------------------------
_read                                             |3   |144     |1             |0           |
----------------------------------------------------------------------------------------------
function_11714                                    |2   |0       |1             |0           |
----------------------------------------------------------------------------------------------
function_11018                                    |1   |180     |1             |0           |
----------------------------------------------------------------------------------------------
_time                                             |1   |144     |1             |0           |
----------------------------------------------------------------------------------------------
function_8a44                                     |1   |153     |1             |0           |
----------------------------------------------------------------------------------------------
function_8a34                                     |0   |145     |1             |0           |
----------------------------------------------------------------------------------------------
function_e3b0                                     |2   |144     |1             |0           |
----------------------------------------------------------------------------------------------
function_91ac                                     |1   |179     |1             |0           |
----------------------------------------------------------------------------------------------
_select                                           |9   |144     |1             |0           |
----------------------------------------------------------------------------------------------
*                                                 |0   |144     |1             |0           |
----------------------------------------------------------------------------------------------
_sigaddset                                        |3   |144     |1             |0           |
----------------------------------------------------------------------------------------------
function_ef2c                                     |2   |167     |1             |0           |
----------------------------------------------------------------------------------------------
function_f6f8                                     |3   |185     |1             |0           |
----------------------------------------------------------------------------------------------
_setsid                                           |0   |144     |1             |0           |
----------------------------------------------------------------------------------------------
_sleep                                            |1   |144     |1             |0           |
----------------------------------------------------------------------------------------------
function_d464                                     |4   |194     |1             |0           |
----------------------------------------------------------------------------------------------
_readlink                                         |4   |144     |1             |0           |
----------------------------------------------------------------------------------------------
_memset                                           |3   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_realloc                                          |2   |0       |0             |0           |
----------------------------------------------------------------------------------------------
__dirstream                                       |2   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_calloc                                           |2   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_malloc                                           |1   |0       |0             |0           |
----------------------------------------------------------------------------------------------
___errno_location                                 |0   |0       |0             |0           |
----------------------------------------------------------------------------------------------
dirent                                            |3   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_memmove                                          |4   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_strcpy                                           |3   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_abort                                            |0   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_memcpy                                           |4   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_free                                             |1   |0       |0             |0           |
----------------------------------------------------------------------------------------------
sig,                                              |1   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_exit                                             |1   |0       |0             |0           |
----------------------------------------------------------------------------------------------
================================================================================
========	FUNCTIONS SUSPECTED INSTRUNCTIONS : ===================================
================================================================================
=================FUNCTION : function_f858 ===================
++++++++ FUNCTION START 21984
++++++++ FUNCTION END 24761
++++++++ FUNCTION LENGTH 2777
    struct sockaddr * v30;
    int32_t result = fork(); // 0xf864
    int32_t sock;
    while (true) {
            int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xf93c
            sock = sock_fd;
            if (sock_fd == -1) {
            fcntl(sock_fd, F_GETFL);
            fcntl(sock_fd, F_SETFL);
            if (setsockopt(sock, status, 3, &option_value, 4) != 0) {
                close(sock);
            while (true) {
                    while (true) {
                        while (true) {
                while (true) {
                    uint32_t v151 = recvfrom(sock, &buf, 1514, MSG_NOSIGNAL, (struct sockaddr *)addr, (int32_t *)addr); // 0xfea4
                        while (true) {
                                    close(fd);
                        while (true) {
                            uint32_t sock19; // 0x101fc
                            if (sock19 != -1) {
                                int32_t v176 = sock19 % 32; // 0x1021c
                                            while (true) {
                                                while (true) {
                                                    int32_t sock2; // 0x10274
                                                    int32_t v188 = recv(sock2, (int32_t *)buf2, 356 - v187, MSG_NOSIGNAL); // 0x10284
                                                                    close(fd2);
                                                                while (true) {
                                                                        case 2: {
                                                                                while (true) {
                                                                                    while (true) {
                                                                                                                int32_t sock3; // 0x10d54
                                                                                                                send(sock3, &buf3, 3, MSG_NOSIGNAL);
                                                                                                                            send(0x4000, (int32_t *)t, 3, MSG_NOSIGNAL);
                                                                                                            send(0x4000, (int32_t *)(int32_t)&buf4, 9, MSG_NOSIGNAL);
                                                                                                        while (true) {
                                                                                                                case 2: {
                                                                                                                        while (true) {
                                                                                                                case 3: {
                                                                                                                    int32_t sock4; // 0x10cc0
                                                                                                                    int32_t sock5; // 0x10cd8
                                                                                                                        send(sock4, (int32_t *)buf5, (int32_t)length, MSG_NOSIGNAL);
                                                                                                                        send(sock5, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                                            while (true) {
                                                                                                                    send(sock4, (int32_t *)buf5, length2, MSG_NOSIGNAL);
                                                                                                                    send(sock5, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                case 4: {
                                                                                                                    int32_t sock6; // 0x10a0c
                                                                                                                    int32_t sock7; // 0x10a24
                                                                                                                            send(sock6, (int32_t *)buf6, (int32_t)length3, MSG_NOSIGNAL);
                                                                                                                            send(sock7, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                                        while (true) {
                                                                                                                    send(sock6, (int32_t *)buf6, length4, MSG_NOSIGNAL);
                                                                                                                    send(sock7, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                case 5: {
                                                                                                                        int32_t sock8; // 0x107dc
                                                                                                                        int32_t sock9; // 0x107f0
                                                                                                                                            while (true) {
                                                                                                                                                    send(sock8, (int32_t *)buf7, length5, MSG_NOSIGNAL);
                                                                                                                                                    send(sock9, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                                                while (true) {
                                                                                                                                                        case 2: {
                                                                                                                                                        case 3: {
                                                                                                                                                        case 4: {
                                                                                                                                                        case 5: {
                                                                                                                                                        case 6: {
                                                                                                                                                            int32_t sock10; // 0x10708
                                                                                                                                                            int32_t sock11; // 0x1071c
                                                                                                                                                                                while (true) {
                                                                                                                                                                                send(sock10, (int32_t *)buf8, length5, MSG_NOSIGNAL);
                                                                                                                                                                                send(sock11, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                                                            send(sock10, (int32_t *)buf8, length5, MSG_NOSIGNAL);
                                                                                                                                                            send(sock11, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                                                        case 7: {
                                                                                                                                                            int32_t sock12; // 0x10ae4
                                                                                                                                                            int32_t sock13; // 0x10af8
                                                                                                                                                                                while (true) {
                                                                                                                                                                                send(sock12, (int32_t *)buf9, length5, MSG_NOSIGNAL);
                                                                                                                                                                                send(sock13, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                                                            send(sock12, (int32_t *)buf9, length5, MSG_NOSIGNAL);
                                                                                                                                                            send(sock13, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                                                        case 8: {
                                                                                                                                                            int32_t sock14; // 0x10924
                                                                                                                                                            int32_t sock15; // 0x10938
                                                                                                                                                                                while (true) {
                                                                                                                                                                                send(sock14, (int32_t *)buf10, length5, MSG_NOSIGNAL);
                                                                                                                                                                                send(sock15, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                                                            send(sock14, (int32_t *)buf10, length5, MSG_NOSIGNAL);
                                                                                                                                                            send(sock15, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                                                        case 9: {
                                                                                                                                                            int32_t sock16; // 0x10564
                                                                                                                                                            int32_t sock17; // 0x10578
                                                                                                                                                                                while (true) {
                                                                                                                                                                                send(sock16, (int32_t *)buf11, length5, MSG_NOSIGNAL);
                                                                                                                                                                                send(sock17, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                                                            send(sock16, (int32_t *)buf11, length5, MSG_NOSIGNAL);
                                                                                                                                                            send(sock17, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                                                        case 10: {
                                                                                                                                                                int32_t v329 = fork(); // 0x10410
                                                                                                                                                                        int32_t sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0x10440
                                                                                                                                                                        int32_t sock18 = sock_fd2;
                                                                                                                                                                        if (sock_fd2 == -1) {
                                                                                                                                                                            if (connect(sock18, (struct sockaddr *)&addr2, 16) == -1) {
                                                                                                                                                                                close(sock18);
                                                                                                                                                                            send(sock18, &buf12, 1, MSG_NOSIGNAL);
                                                                                                                                                                            send(sock18, &length5, 4, MSG_NOSIGNAL);
                                                                                                                                                                            send(sock18, &buf13, 2, MSG_NOSIGNAL);
                                                                                                                                                                            send(sock18, (int32_t *)(v332 + 12), 1, MSG_NOSIGNAL);
                                                                                                                                                                            send(sock18, (int32_t *)buf14, (int32_t)length6, MSG_NOSIGNAL);
                                                                                                                                                                            send(sock18, (int32_t *)(v332 + 13), 1, MSG_NOSIGNAL);
                                                                                                                                                                            send(sock18, (int32_t *)buf15, (int32_t)length7, MSG_NOSIGNAL);
                                                                                                                                                                            close(sock18);
                                                                                                                                                                close(fd3);
                                                                                                                                                                close(fd4);
                                                                                                                                            while (true) {
                                                                                                                        send(sock8, (int32_t *)buf7, length5, MSG_NOSIGNAL);
                                                                                                                        send(sock9, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                    while (true) {
                                                                                                                case 6: {
                                                                                                                case 7: {
                                                                                                                case 8: {
                                                                                                                case 9: {
                                                                                                                case 10: {
                                                                                    while (true) {
                                                                        case 3: {
                                                                        case 4: {
                                                                        case 5: {
                                                                        case 6: {
                                                                        case 7: {
                                                                        case 8: {
                                                                        case 9: {
                                                                        case 10: {
                                                        close(fd2);
                                                        while (true) {
                                    if ((buf12 | getsockopt(sock19, SO_DEBUG, 4, &buf12, &length5)) == 0) {
                                            while (true) {
                                        close(fd5);
                        while (true) {
                    while (true) {
                while (true) {
            while (true) {
        while (true) {
    while (true) {
            sendto(sock, &message, 40, MSG_NOSIGNAL, (struct sockaddr *)&addr2, 16);
        while (true) {
    while (true) {
=================FUNCTION : function_a1e8 ===================
++++++++ FUNCTION START 10884
++++++++ FUNCTION END 11756
++++++++ FUNCTION LENGTH 872
    struct sockaddr * v49;
        while (true) {
            int32_t sock_fd = socket(AF_INET, 0, IPPROTO_IP); // 0xa2f8
            if (sock_fd == -1) {
            bind(sock_fd, (struct sockaddr *)&addr, 16);
            int32_t sock; // 0xa34c
            connect(sock, (struct sockaddr *)(v153 + a2), 16);
            while (true) {
                while (true) {
                int32_t sock2; // 0xa428
                send(sock2, (int32_t *)buf, length, MSG_NOSIGNAL);
            int32_t sock3; // 0xa46c
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
        while (true) {
=================FUNCTION : function_c194 ===================
++++++++ FUNCTION START 13641
++++++++ FUNCTION END 14513
++++++++ FUNCTION LENGTH 872
    struct sockaddr * v49;
        while (true) {
            int32_t sock_fd = socket(AF_INET, 17, IPPROTO_UDP); // 0xc2a4
            if (sock_fd == -1) {
            bind(sock_fd, (struct sockaddr *)&addr, 16);
            int32_t sock; // 0xc2f8
            connect(sock, (struct sockaddr *)(v153 + a2), 16);
            while (true) {
                while (true) {
                int32_t sock2; // 0xc3d4
                send(sock2, (int32_t *)buf, length, MSG_NOSIGNAL);
            int32_t sock3; // 0xc418
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            while (true) {
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
            send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
                send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
        while (true) {
=================FUNCTION : function_dac4 ===================
++++++++ FUNCTION START 17470
++++++++ FUNCTION END 18370
++++++++ FUNCTION LENGTH 900
    struct sockaddr * v47;
    int32_t result = fork(); // 0xdadc
    int32_t sock = 2; // bp-80
    int32_t sock_fd = socket(AF_INET, SOCK_STREAM, protocol); // 0xdb50
    if (sock_fd != -1) {
        bind((int32_t)&sock, (struct sockaddr *)16, 16);
        listen(sock_fd, 1);
    int32_t sock_fd2 = socket(AF_INET, SOCK_STREAM, protocol); // 0xdba4
    if (sock_fd2 != -1) {
        bind((int32_t)&sock, (struct sockaddr *)16, 16);
        listen(sock_fd2, 1);
    int32_t sock_fd3 = socket(AF_INET, SOCK_STREAM, protocol); // 0xdbdc
    if (sock_fd3 != -1) {
        bind((int32_t)&sock, (struct sockaddr *)16, 16);
        listen(sock_fd3, 1);
    int32_t sock_fd4 = socket(AF_INET, SOCK_STREAM, protocol); // 0xdc28
    if (sock_fd4 != -1) {
        bind((int32_t)&sock, (struct sockaddr *)16, 16);
        listen(sock_fd4, 1);
    int32_t sock_fd5 = socket(AF_INET, SOCK_STREAM, protocol); // 0xdc74
    if (sock_fd5 != -1) {
        bind((int32_t)&sock, (struct sockaddr *)16, 16);
        listen(sock_fd5, 1);
    int32_t pid = getpid(); // 0xdd10
    int32_t fd = open(path, protocol); // 0xdd58
        close(fd);
        while (true) {
            struct __dirstream * v148 = opendir((char *)function_10ff4(15, NULL)); // 0xddd0
                struct dirent * v149 = readdir((struct __dirstream *)dirp); // 0xdde8141
                    while (true) {
                        while (true) {
                                        int32_t fd2 = open((char *)&path2, O_RDONLY); // 0xe038
                                                close(fd2);
                                                while (true) {
                                                        while (true) {
                                                                    close(fd2);
                                                                    kill(pid3, SIGKILL);
                                                                    v156 = readdir((struct __dirstream *)dirp);
                                                                while (true) {
                                                                        while (true) {
                                                                                while (true) {
                                                                                        while (true) {
                                                                                                while (true) {
                                                close(fd2);
                                            kill(pid3, SIGKILL);
                                        int32_t pid2 = getpid(); // 0xdfcc
                                            int32_t ppid = getppid(); // 0xdfd8
                                                    int32_t fd3 = open(path, O_RDONLY); // 0xe010
                                                    close(fd3);
                                                v156 = readdir((struct __dirstream *)dirp);
                                    v156 = readdir((struct __dirstream *)dirp);
                                        struct dirent * v233 = readdir((struct __dirstream *)dirp); // 0xde78
                                    v156 = readdir((struct __dirstream *)dirp2);
                                v156 = readdir((struct __dirstream *)dirp2);
                            v156 = readdir((struct __dirstream *)dirp);
                        closedir((struct __dirstream *)dirp);
                closedir((struct __dirstream *)dirp);
=================FUNCTION : function_e69c ===================
++++++++ FUNCTION START 19209
++++++++ FUNCTION END 19848
++++++++ FUNCTION LENGTH 639
    sigprocmask(how, (struct _TYPEDEF_sigset_t *)&set, (struct _TYPEDEF_sigset_t *)how);
    struct sockaddr * addr;
    uint32_t sock4; // 0xeaf4
        v147 = fork();
        close(fd2);
        close(1);
        v154 = close(2);
        while (true) {
            while (true) {
                int32_t sock_fd = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xeb98
                int32_t fd3 = sock_fd; // r5
                if (sock_fd != -1) {
                    fcntl(sock_fd, F_GETFL);
                    int32_t sock; // 0xebe4
                    connect(sock, (struct sockaddr *)&addr, 16);
                int32_t sock2; // 0xec00
                send(sock2, (int32_t *)&buf2, 2, MSG_NOSIGNAL);
        uint32_t sock3; // 0xea34
        if (sock3 != -1) {
            if ((v191 >> sock3 % 32) % 2 != 0) {
                int32_t accepted_sock_fd = accept(sock3, (struct sockaddr *)&addr2, &addr_len); // 0xec9c
                function_d508(function_f608(accepted_sock_fd));
                kill(-v153, SIGKILL);
                    kill(pid, SIGKILL);
            if (sock4 != -1) {
            if ((v193 >> sock4 % 32) % 2 == 0) {
                __pseudo_cond_branch(sock4 != -1, (int32_t)&v138);
                getsockopt(sock4, SO_DEBUG, 4, &addr_len, &option_len);
                    int32_t sock5; // 0xecf4
                    send(sock5, &buf3, 4, MSG_NOSIGNAL);
                    int32_t sock6; // 0xed04
                    send(sock6, (int32_t *)&buf2, 1, MSG_NOSIGNAL);
                    close(fd4);
                while (true) {
                int32_t sock7; // 0xed20
                send(sock7, &buf4, length, MSG_NOSIGNAL);
    v147 = fork();
    close(fd2);
    close(1);
    v154 = close(2);
    while (true) {
    if ((v198 >> sock4 % 32) % 2 != 0) {
    int32_t sock8; // 0xeb44
    int32_t v200 = recv(sock8, (int32_t *)&buf2, 2, MSG_PEEK | MSG_NOSIGNAL); // 0xeb50
                int32_t sock9; // 0xeb74
                recv(sock9, (int32_t *)&buf2, 2, v203 + 0x4000);
                    int32_t sock10; // 0xedb4
                    int32_t v205 = recv(sock10, &buf5, length2, MSG_PEEK | MSG_NOSIGNAL); // 0xedbc
                    int32_t sock11; // 0xeddc
                    recv(sock11, (int32_t *)&buf2, 2, MSG_NOSIGNAL);
                    int32_t sock12; // 0xee04
                    recv(sock12, &buf5, length3, MSG_NOSIGNAL);
                    close(fd5);
                while (true) {
            while (true) {
        while (true) {
    while (true) {
=================FUNCTION : function_cd58 ===================
++++++++ FUNCTION START 15225
++++++++ FUNCTION END 16095
++++++++ FUNCTION LENGTH 870
    struct sockaddr * v49;
    fd = open((char *)function_10ff4(26, NULL), O_RDONLY);
    int32_t sock_fd; // 0xcfc0
        close(fd);
                while (true) {
                                        result = inet_addr((char *)&cp);
                                        sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
                                        if (sock_fd == -1) {
                                        if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
                                            result2 = close(sock_fd);
                                            while (true) {
                                                    while (true) {
                                        while (true) {
                                            while (true) {
                                                                sendto(sock_fd, (int32_t *)fd, v155 + 47, MSG_NOSIGNAL, (struct sockaddr *)(a2 + v195), 16);
                                        while (true) {
                                        while (true) {
                                    result = inet_addr((char *)&cp);
                                    sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
                                    if (sock_fd == -1) {
                                    if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
                                        result2 = close(sock_fd);
                                        while (true) {
                                    while (true) {
                                    while (true) {
                    case 0: {
                    case 1: {
                    case -2: {
                    case -1: {
                sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
                if (sock_fd == -1) {
                if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
                    result2 = close(sock_fd);
                    while (true) {
                while (true) {
            case 0: {
            case 1: {
            case -2: {
            case -1: {
        sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
        if (sock_fd == -1) {
        if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
            result2 = close(sock_fd);
            while (true) {
        while (true) {
        case 0: {
        case 1: {
        case -2: {
        case -1: {
    sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
    if (sock_fd == -1) {
    if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
        result2 = close(sock_fd);
        while (true) {
    while (true) {
    while (true) {
=================FUNCTION : function_d530 ===================
++++++++ FUNCTION START 16616
++++++++ FUNCTION END 17467
++++++++ FUNCTION LENGTH 851
    struct sockaddr * v48;
    int32_t fd = open((char *)function_10ff4(19, (int32_t *)oflag), oflag); // 0xd60c
    struct __dirstream * dirp; // 0xd7e0
        close(fd2);
            dirp = opendir((char *)name);
                    while (true) {
                closedir((struct __dirstream *)dirp2);
    while (true) {
                while (true) {
                            while (true) {
                                        while (true) {
                                                            while (true) {
                                                        close(fd2);
                                                        dirp = opendir((char *)name);
                                                            while (true) {
                                                                while (true) {
                                                                                struct __dirstream * dirp3 = opendir((char *)&path); // 0xd8dc
                                                                                        while (true) {
                                                                                            while (true) {
                                                                                                            kill(function_11810((char *)v182, 10), SIGKILL);
                                                                                                            struct dirent * v200 = readdir((struct __dirstream *)fd2); // 0xd9d8
                                                                                                    struct dirent * v201 = readdir((struct __dirstream *)fd2); // 0xd8ec
                                                                                            closedir((struct __dirstream *)fd2);
                                                                                            v191 = readdir((struct __dirstream *)dirp2);
                                                                                        closedir((struct __dirstream *)dirp4);
                                                                                    closedir((struct __dirstream *)fd2);
                                                                                    v191 = readdir((struct __dirstream *)dirp2);
                                                                        struct dirent * v210 = readdir((struct __dirstream *)dirp2); // 0xd7f8
                                                                closedir((struct __dirstream *)dirp2);
                                                        closedir((struct __dirstream *)dirp2);
                                        close(fd2);
                                        dirp = opendir((char *)name);
                                            while (true) {
                                        closedir((struct __dirstream *)dirp2);
                            close(fd2);
                            dirp = opendir((char *)name);
                                while (true) {
                            closedir((struct __dirstream *)dirp2);
    close(fd2);
        dirp = opendir((char *)name);
                while (true) {
            closedir((struct __dirstream *)dirp2);
=================FUNCTION : function_a488 ===================
++++++++ FUNCTION START 11759
++++++++ FUNCTION END 12261
++++++++ FUNCTION LENGTH 502
    struct sockaddr * v49;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xa65c
    if (sock_fd == -1) {
    if (setsockopt(SOL_IP, SO_TYPE, option_name, &option_value, (int32_t)&option_len) == -1) {
        result = close(sock_fd);
            while (true) {
                int32_t sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xa6b8
                fd = sock_fd2;
                if (sock_fd2 != -1) {
                    while (true) {
                        fcntl(sock_fd2, F_GETFL);
                        connect(fd, (struct sockaddr *)&addr, 16);
                        int32_t sock_fd3; // 0xa810
                        while (true) {
                            int32_t v181 = recvfrom(sock_fd, &buf, 256, MSG_NOSIGNAL, (struct sockaddr *)&addr2, &addr_len); // 0xa794
                                            close(fd);
                                            sock_fd3 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP);
                                            fd = sock_fd3;
                                            if (sock_fd3 == -1) {
                                            sock_fd2 = sock_fd3;
                        close(fd);
                        sock_fd3 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP);
                        fd = sock_fd3;
                        if (sock_fd3 == -1) {
                        sock_fd2 = sock_fd3;
        while (true) {
            while (true) {
                    sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
                sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
        while (true) {
        while (true) {
=================FUNCTION : function_ac3c ===================
++++++++ FUNCTION START 12264
++++++++ FUNCTION END 12766
++++++++ FUNCTION LENGTH 502
    struct sockaddr * v49;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xae10
    if (sock_fd == -1) {
    if (setsockopt(SOL_IP, SO_TYPE, option_name, &option_value, (int32_t)&option_len) == -1) {
        result = close(sock_fd);
            while (true) {
                int32_t sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xae6c
                fd = sock_fd2;
                if (sock_fd2 != -1) {
                    while (true) {
                        fcntl(sock_fd2, F_GETFL);
                        connect(fd, (struct sockaddr *)&addr, 16);
                        int32_t sock_fd3; // 0xafc4
                        while (true) {
                            int32_t v181 = recvfrom(sock_fd, &buf, 256, MSG_NOSIGNAL, (struct sockaddr *)&addr2, &addr_len); // 0xaf48
                                            close(fd);
                                            sock_fd3 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP);
                                            fd = sock_fd3;
                                            if (sock_fd3 == -1) {
                                            sock_fd2 = sock_fd3;
                        close(fd);
                        sock_fd3 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP);
                        fd = sock_fd3;
                        if (sock_fd3 == -1) {
                        sock_fd2 = sock_fd3;
        while (true) {
            while (true) {
                    sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
                sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
        while (true) {
        while (true) {
=================FUNCTION : function_f100 ===================
++++++++ FUNCTION START 20846
++++++++ FUNCTION END 21482
++++++++ FUNCTION LENGTH 636
    struct sockaddr * v49;
    int32_t sock; // bp-68
        while (true) {
        sock = 0;
        sock = 2;
        while (true) {
            int32_t sock_fd = socket(AF_INET, 0, IPPROTO_IP); // 0xf258
            int32_t fd = sock_fd; // r6
            if (sock_fd == -1) {
                close(fd);
                free((int32_t *)mem);
            if (connect((int32_t)&sock, (struct sockaddr *)16, 16) != -1) {
                if (send(fd, (int32_t *)&buf, length, MSG_NOSIGNAL) != -1) {
                        close(fd);
                        free((int32_t *)mem);
                            int32_t v181 = recvfrom(fd, (int32_t *)&buf2, 2048, MSG_NOSIGNAL, (struct sockaddr *)addr, (int32_t *)addr); // 0xf380
                                while (true) {
                                        while (true) {
                                            while (true) {
                                        while (true) {
                                            while (true) {
                    close(fd);
                    free((int32_t *)mem);
            close(fd);
            free((int32_t *)mem);
    sock = 0;
    sock = 2;
    while (true) {
=================FUNCTION : function_11d70 ===================
++++++++ FUNCTION START 28773
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v49;
// int accept(int fd, __SOCKADDR_ARG addr, socklen_t * restrict addr_len);
// int bind(int fd, __CONST_SOCKADDR_ARG addr, socklen_t len);
// int close(int fd);
// int closedir(DIR * dirp);
// int connect(int fd, __CONST_SOCKADDR_ARG addr, socklen_t len);
// __pid_t fork(void);
// void free(void * ptr);
// __pid_t getpid(void);
// __pid_t getppid(void);
// int getsockname(int fd, __SOCKADDR_ARG addr, socklen_t * restrict len);
// int getsockopt(int fd, int level, int optname, void * restrict optval, socklen_t * restrict optlen);
// in_addr_t inet_addr(const char * cp);
// int kill(__pid_t pid, int sig);
// int listen(int fd, int n);
// int open(const char * file, int oflag, ...);
// DIR * opendir(const char * name);
// ssize_t recv(int fd, void * buf, size_t n, int flags);
// ssize_t recvfrom(int fd, void * restrict buf, size_t n, int flags, __SOCKADDR_ARG addr, socklen_t * restrict addr_len);
// ssize_t send(int fd, const void * buf, size_t n, int flags);
// ssize_t sendto(int fd, const void * buf, size_t n, int flags, __CONST_SOCKADDR_ARG addr, socklen_t addr_len);
// int setsockopt(int fd, int level, int optname, const void * optval, socklen_t optlen);
// int sigprocmask(int how, const sigset_t * restrict set, sigset_t * restrict oset);
// int socket(int domain, int type, int protocol);
=================FUNCTION : function_bae8 ===================
++++++++ FUNCTION START 13206
++++++++ FUNCTION END 13638
++++++++ FUNCTION LENGTH 432
    struct sockaddr * v48;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xbcac
    int32_t fd = sock_fd; // sl
    if (sock_fd == -1) {
    if (setsockopt(SOL_IP, SO_TYPE, option_name, &option_value, (int32_t)&option_len) == -1) {
        return close(fd);
        while (true) {
        while (true) {
            while (true) {
                                            sendto(fd, (int32_t *)message, 60, MSG_NOSIGNAL, (struct sockaddr *)(a2 + v186), 16);
                                        sendto(fd, (int32_t *)message, 60, MSG_NOSIGNAL, (struct sockaddr *)(a2 + v186), 16);
        while (true) {
        while (true) {
    while (true) {
    while (true) {
=================FUNCTION : function_c920 ===================
++++++++ FUNCTION START 14900
++++++++ FUNCTION END 15222
++++++++ FUNCTION LENGTH 322
    struct sockaddr * v49;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP); // 0xca1c
    int32_t fd = sock_fd; // sb
    if (sock_fd == -1) {
    if (setsockopt(SOL_IP, SO_TYPE, option_name, &option_value, (int32_t)&option_len) == -1) {
        return close(fd);
        while (true) {
        while (true) {
            while (true) {
                                sendto(fd, (int32_t *)message, v148 + 32, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
        while (true) {
        while (true) {
    while (true) {
    while (true) {
=================FUNCTION : function_c434 ===================
++++++++ FUNCTION START 14516
++++++++ FUNCTION END 14897
++++++++ FUNCTION LENGTH 381
    struct sockaddr * v48;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP); // 0xc56c
    int32_t fd = sock_fd; // fp
    if (sock_fd == -1) {
    if (setsockopt(SOL_IP, SO_TYPE, option_name, &option_value, (int32_t)&option_len) == -1) {
        return close(fd);
        while (true) {
    while (true) {
        while (true) {
                                sendto(fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
                            sendto(fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
    while (true) {
    while (true) {
=================FUNCTION : function_e3c8 ===================
++++++++ FUNCTION START 18520
++++++++ FUNCTION END 18710
++++++++ FUNCTION LENGTH 190
    struct sockaddr * v49;
    int32_t sock_fd = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xe3e4
    if (sock_fd == -1) {
        return sock_fd;
    setsockopt(sock_fd, SO_DEBUG, 2, &option_value, 4);
    fcntl(fd, F_GETFL);
    int32_t sock; // 0xe47c
    if (bind(sock, (struct sockaddr *)&addr, 16) == -1) {
        int32_t sock2; // 0xe4d4
        connect(sock2, (struct sockaddr *)&addr, 16);
        close(fd2);
        int32_t sock3; // 0xe49c
        result = listen(sock3, 1);
=================FUNCTION : function_b3f0 ===================
++++++++ FUNCTION START 12769
++++++++ FUNCTION END 13203
++++++++ FUNCTION LENGTH 434
    struct sockaddr * v48;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xb5f0
    if (sock_fd == -1) {
    if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
        return close(sock_fd);
        while (true) {
    while (true) {
        while (true) {
                                        sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a2 + v189), 16);
                                    sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a2 + v189), 16);
    while (true) {
    while (true) {
=================FUNCTION : function_9bcc ===================
++++++++ FUNCTION START 10479
++++++++ FUNCTION END 10881
++++++++ FUNCTION LENGTH 402
    struct sockaddr * v48;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0x9d1c
    if (sock_fd == -1) {
    if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
        return close(sock_fd);
        while (true) {
    while (true) {
                                sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a2 + 24 * option_value), 16);
                            sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a2 + 24 * option_value), 16);
=================FUNCTION : function_11b4c ===================
++++++++ FUNCTION START 27644
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v49;
    while (true) {
                while (true) {
            while (true) {
            while (true) {
        while (true) {
        while (true) {
    while (true) {
=================FUNCTION : function_8eb4 ===================
++++++++ FUNCTION START 9129
++++++++ FUNCTION END 9518
++++++++ FUNCTION LENGTH 389
    struct sockaddr * v49;
                    free((int32_t *)v148);
                free((int32_t *)v154);
                        while (true) {
                                free((int32_t *)v154);
                            free((int32_t *)v148);
                free((int32_t *)v148);
            free((int32_t *)v154);
=================FUNCTION : function_9538 ===================
++++++++ FUNCTION START 10095
++++++++ FUNCTION END 10476
++++++++ FUNCTION LENGTH 381
    struct sockaddr * v48;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0x9688
    if (sock_fd == -1) {
    if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
        return close(sock_fd);
        while (true) {
    while (true) {
                            sendto(sock_fd, (int32_t *)message, v147 + 66, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
=================FUNCTION : function_119a8 ===================
++++++++ FUNCTION START 26936
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v49;
    int32_t sock_fd = socket(AF_INET, 0, IPPROTO_IP); // 0x119d0
    if (sock_fd == -1) {
        int32_t sock = &addr2; // 0x119f0
        connect(sock, (struct sockaddr *)addr, addr);
        getsockname(sock_fd, (struct sockaddr *)&addr2, &addr_len);
        close(sock_fd);
=================FUNCTION : function_f630 ===================
++++++++ FUNCTION START 21632
++++++++ FUNCTION END 21793
++++++++ FUNCTION LENGTH 161
    struct sockaddr * v49;
    int32_t sock_fd = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xf668
    if (sock_fd == -1) {
        fcntl(fd, F_GETFL);
        int32_t sock; // 0xf6cc
        sock_fd = connect(sock, (struct sockaddr *)&addr, 16);
    return sock_fd;
=================FUNCTION : function_eec4 ===================
++++++++ FUNCTION START 20170
++++++++ FUNCTION END 20315
++++++++ FUNCTION LENGTH 145
    struct sockaddr * v45;
    int32_t pid = getpid(); // 0xeedc
    int32_t v138 = pid ^ getppid();
    int32_t proc_time = clock(); // 0xeef4
    int32_t v139 = v138 ^ proc_time;
    int32_t v140 = proc_time;
    return proc_time;
=================FUNCTION : function_11acc ===================
++++++++ FUNCTION START 27352
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v49;
                while (true) {
            while (true) {
            while (true) {
    while (true) {
=================FUNCTION : function_e5ac ===================
++++++++ FUNCTION START 19031
++++++++ FUNCTION END 19206
++++++++ FUNCTION LENGTH 175
    struct sockaddr * v48;
    int32_t result = fork(); // 0xe5b4
    int32_t fd = open((char *)function_10ff4(28, (int32_t *)status), O_RDWR); // 0xe614
        int32_t fd2 = open((char *)function_10ff4(29, (int32_t *)status), O_RDWR); // 0xe670
    while (true) {
=================FUNCTION : function_11c48 ===================
++++++++ FUNCTION START 27976
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v49;
    while (true) {
                                while (true) {
                                    while (true) {
                while (true) {
=================FUNCTION : function_8db8 ===================
++++++++ FUNCTION START 8925
++++++++ FUNCTION END 9126
++++++++ FUNCTION LENGTH 201
    struct sockaddr * v48;
    int32_t result = fork(); // 0x8dd0
            int32_t status2 = fork(); // 0x8dfc
                kill(getppid(), SIGKILL);
                while (true) {
=================FUNCTION : function_11810 ===================
++++++++ FUNCTION START 26369
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v49;
    while (true) {
    while (true) {
        while (true) {
=================FUNCTION : function_90d0 ===================
++++++++ FUNCTION START 9521
++++++++ FUNCTION END 9714
++++++++ FUNCTION LENGTH 193
    struct sockaddr * v49;
            result2 = inet_addr((char *)cp);
    while (true) {
        result2 = inet_addr((char *)cp);
=================FUNCTION : function_11a3c ===================
++++++++ FUNCTION START 27103
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v49;
        while (true) {
    while (true) {
=================FUNCTION : _closedir ===================
++++++++ FUNCTION START 7102
++++++++ FUNCTION END 7246
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
    return closedir(dirp);
=================FUNCTION : _accept ===================
++++++++ FUNCTION START 3279
++++++++ FUNCTION END 3423
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
    return accept(fd, addr, addr_len);
=================FUNCTION : _sendto ===================
++++++++ FUNCTION START 4749
++++++++ FUNCTION END 4893
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
    return sendto(fd, buf, n, flags, addr, addr_len);
=================FUNCTION : _send ===================
++++++++ FUNCTION START 2984
++++++++ FUNCTION END 3128
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
    return send(fd, buf, n, flags);
=================FUNCTION : _getsockopt ===================
++++++++ FUNCTION START 6072
++++++++ FUNCTION END 6216
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
    return getsockopt(fd, level, optname, optval, optlen);
=================FUNCTION : _setsockopt ===================
++++++++ FUNCTION START 4161
++++++++ FUNCTION END 4305
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
    return setsockopt(fd, level, optname, optval, optlen);
=================FUNCTION : _sigprocmask ===================
++++++++ FUNCTION START 7837
++++++++ FUNCTION END 7981
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
    return sigprocmask(how, set, oset);
=================FUNCTION : function_8d5c ===================
++++++++ FUNCTION START 8743
++++++++ FUNCTION END 8922
++++++++ FUNCTION LENGTH 179
    struct sockaddr * v49;
        while (true) {
=================FUNCTION : function_1194c ===================
++++++++ FUNCTION START 26747
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v49;
        while (true) {
=================FUNCTION : function_d508 ===================
++++++++ FUNCTION START 16469
++++++++ FUNCTION END 16613
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v48;
    return kill(pid, SIGKILL);
=================FUNCTION : function_f0d8 ===================
++++++++ FUNCTION START 20686
++++++++ FUNCTION END 20843
++++++++ FUNCTION LENGTH 157
    struct sockaddr * v49;
        free((int32_t *)v141);
=================FUNCTION : _getsockname ===================
++++++++ FUNCTION START 7984
++++++++ FUNCTION END 8128
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
    return getsockname(fd, addr, len);
=================FUNCTION : _kill ===================
++++++++ FUNCTION START 3720
++++++++ FUNCTION END 3864
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
    return kill(pid, sig);
=================FUNCTION : function_913c ===================
++++++++ FUNCTION START 9717
++++++++ FUNCTION END 9910
++++++++ FUNCTION LENGTH 193
    struct sockaddr * v49;
    while (true) {
=================FUNCTION : _listen ===================
++++++++ FUNCTION START 5043
++++++++ FUNCTION END 5187
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
    return listen(fd, n);
=================FUNCTION : function_f608 ===================
++++++++ FUNCTION START 21485
++++++++ FUNCTION END 21629
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
    return kill(pid, SIGKILL);
=================FUNCTION : function_117a4 ===================
++++++++ FUNCTION START 26186
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v49;
    while (true) {
=================FUNCTION : _getppid ===================
++++++++ FUNCTION START 5631
++++++++ FUNCTION END 5775
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
    return getppid();
=================FUNCTION : _socket ===================
++++++++ FUNCTION START 2396
++++++++ FUNCTION END 2540
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
    return socket(domain, type, protocol);
=================FUNCTION : _recv ===================
++++++++ FUNCTION START 779
++++++++ FUNCTION END 923
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
    return recv(fd, buf, n, flags);
=================FUNCTION : function_effc ===================
++++++++ FUNCTION START 20488
++++++++ FUNCTION END 20683
++++++++ FUNCTION LENGTH 195
    struct sockaddr * v45;
    while (true) {
=================FUNCTION : _open ===================
++++++++ FUNCTION START 6661
++++++++ FUNCTION END 6805
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
    return open(file, oflag);
=================FUNCTION : _fork ===================
++++++++ FUNCTION START 5190
++++++++ FUNCTION END 5334
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
    return fork();
=================FUNCTION : _inet_addr ===================
++++++++ FUNCTION START 4014
++++++++ FUNCTION END 4158
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
    return inet_addr(cp);
=================FUNCTION : _recvfrom ===================
++++++++ FUNCTION START 2249
++++++++ FUNCTION END 2393
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
    return recvfrom(fd, buf, n, flags, addr, addr_len);
=================FUNCTION : _close ===================
++++++++ FUNCTION START 7396
++++++++ FUNCTION END 7540
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
    return close(fd);
=================FUNCTION : _getpid ===================
++++++++ FUNCTION START 1367
++++++++ FUNCTION END 1511
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
    return getpid();
=================FUNCTION : _connect ===================
++++++++ FUNCTION START 926
++++++++ FUNCTION END 1070
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
    return connect(fd, addr, len);
=================FUNCTION : _atoi ===================
++++++++ FUNCTION START 6514
++++++++ FUNCTION END 6658
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
=================FUNCTION : function_110b8 ===================
++++++++ FUNCTION START 25104
++++++++ FUNCTION END 25284
++++++++ FUNCTION LENGTH 180
    struct sockaddr * v49;
=================FUNCTION : function_8d18 ===================
++++++++ FUNCTION START 8439
++++++++ FUNCTION END 8589
++++++++ FUNCTION LENGTH 150
    struct sockaddr * v49;
=================FUNCTION : function_10ff4 ===================
++++++++ FUNCTION START 24764
++++++++ FUNCTION END 24918
++++++++ FUNCTION LENGTH 154
    struct sockaddr * v49;
=================FUNCTION : function_8cc8 ===================
++++++++ FUNCTION START 8131
++++++++ FUNCTION END 8282
++++++++ FUNCTION LENGTH 151
    struct sockaddr * v47;
=================FUNCTION : function_ee4c ===================
++++++++ FUNCTION START 19851
++++++++ FUNCTION END 20014
++++++++ FUNCTION LENGTH 163
    struct sockaddr * v49;
=================FUNCTION : function_11d44 ===================
++++++++ FUNCTION START 28479
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v49;
=================FUNCTION : function_ee68 ===================
++++++++ FUNCTION START 20017
++++++++ FUNCTION END 20167
++++++++ FUNCTION LENGTH 150
    struct sockaddr * v45;
=================FUNCTION : _raise ===================
++++++++ FUNCTION START 7543
++++++++ FUNCTION END 7687
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
=================FUNCTION : _sigemptyset ===================
++++++++ FUNCTION START 1073
++++++++ FUNCTION END 1217
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
=================FUNCTION : function_e51c ===================
++++++++ FUNCTION START 18713
++++++++ FUNCTION END 18863
++++++++ FUNCTION LENGTH 150
    struct sockaddr * v49;
=================FUNCTION : function_d414 ===================
++++++++ FUNCTION START 16098
++++++++ FUNCTION END 16269
++++++++ FUNCTION LENGTH 171
    struct sockaddr * v49;
=================FUNCTION : _write ===================
++++++++ FUNCTION START 3573
++++++++ FUNCTION END 3717
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
=================FUNCTION : function_1175c ===================
++++++++ FUNCTION START 25870
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v49;
=================FUNCTION : function_8ce4 ===================
++++++++ FUNCTION START 8285
++++++++ FUNCTION END 8436
++++++++ FUNCTION LENGTH 151
    struct sockaddr * v49;
=================FUNCTION : function_11d5c ===================
++++++++ FUNCTION START 28626
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v49;
=================FUNCTION : _unlink ===================
++++++++ FUNCTION START 4602
++++++++ FUNCTION END 4746
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
=================FUNCTION : function_116ec ===================
++++++++ FUNCTION START 25512
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v49;
=================FUNCTION : function_11158 ===================
++++++++ FUNCTION START 25287
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v44;
=================FUNCTION : function_11780 ===================
++++++++ FUNCTION START 26027
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v49;
=================FUNCTION : _bind ===================
++++++++ FUNCTION START 3867
++++++++ FUNCTION END 4011
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
=================FUNCTION : __start ===================
++++++++ FUNCTION START 8592
++++++++ FUNCTION END 8740
++++++++ FUNCTION LENGTH 148
    struct sockaddr * v49;
=================FUNCTION : _clock ===================
++++++++ FUNCTION START 6808
++++++++ FUNCTION END 6952
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
=================FUNCTION : function_e528 ===================
++++++++ FUNCTION START 18866
++++++++ FUNCTION END 19028
++++++++ FUNCTION LENGTH 162
    struct sockaddr * v49;
=================FUNCTION : _fcntl ===================
++++++++ FUNCTION START 7249
++++++++ FUNCTION END 7393
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
=================FUNCTION : _prctl ===================
++++++++ FUNCTION START 1514
++++++++ FUNCTION END 1658
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
=================FUNCTION : _ioctl ===================
++++++++ FUNCTION START 632
++++++++ FUNCTION END 776
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
=================FUNCTION : ___uClibc_main ===================
++++++++ FUNCTION START 5337
++++++++ FUNCTION END 5481
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
=================FUNCTION : _read ===================
++++++++ FUNCTION START 4455
++++++++ FUNCTION END 4599
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
=================FUNCTION : function_11714 ===================
++++++++ FUNCTION START 25670
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v49;
=================FUNCTION : function_11018 ===================
++++++++ FUNCTION START 24921
++++++++ FUNCTION END 25101
++++++++ FUNCTION LENGTH 180
    struct sockaddr * v49;
=================FUNCTION : _time ===================
++++++++ FUNCTION START 5778
++++++++ FUNCTION END 5922
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
=================FUNCTION : function_8a44 ===================
++++++++ FUNCTION START 329
++++++++ FUNCTION END 482
++++++++ FUNCTION LENGTH 153
    struct sockaddr * v49;
=================FUNCTION : function_8a34 ===================
++++++++ FUNCTION START 181
++++++++ FUNCTION END 326
++++++++ FUNCTION LENGTH 145
    struct sockaddr * v49 = NULL;
=================FUNCTION : function_e3b0 ===================
++++++++ FUNCTION START 18373
++++++++ FUNCTION END 18517
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
=================FUNCTION : function_91ac ===================
++++++++ FUNCTION START 9913
++++++++ FUNCTION END 10092
++++++++ FUNCTION LENGTH 179
    struct sockaddr * v46;
=================FUNCTION : _select ===================
++++++++ FUNCTION START 2543
++++++++ FUNCTION END 2687
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
=================FUNCTION : * ===================
++++++++ FUNCTION START 6219
++++++++ FUNCTION END 6363
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
    struct sockaddr * v49;
    struct sockaddr * v49;
    struct sockaddr * v49;
    struct sockaddr * v49;
    struct sockaddr * v49;
    struct sockaddr * v49;
=================FUNCTION : _sigaddset ===================
++++++++ FUNCTION START 2837
++++++++ FUNCTION END 2981
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
=================FUNCTION : function_ef2c ===================
++++++++ FUNCTION START 20318
++++++++ FUNCTION END 20485
++++++++ FUNCTION LENGTH 167
    struct sockaddr * v47;
=================FUNCTION : function_f6f8 ===================
++++++++ FUNCTION START 21796
++++++++ FUNCTION END 21981
++++++++ FUNCTION LENGTH 185
    struct sockaddr * v47;
=================FUNCTION : _setsid ===================
++++++++ FUNCTION START 6955
++++++++ FUNCTION END 7099
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
=================FUNCTION : _sleep ===================
++++++++ FUNCTION START 2102
++++++++ FUNCTION END 2246
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
=================FUNCTION : function_d464 ===================
++++++++ FUNCTION START 16272
++++++++ FUNCTION END 16466
++++++++ FUNCTION LENGTH 194
    struct sockaddr * v49;
=================FUNCTION : _readlink ===================
++++++++ FUNCTION START 1808
++++++++ FUNCTION END 1952
++++++++ FUNCTION LENGTH 144
    struct sockaddr * v49;
================================================================================
========	WHILE LOOPS INTRESTING INSTRUCTIONS : =================================
================================================================================
=============================WHILE LOOPS ID : 3 @ function_8eb4 ====================================
++++++++ WHILE START : 9397 
++++++++ WHILE FUNCTION : function_8eb4 
++++++++ WHILE END : 9471 
++++++++ INTRESTING INSTRUCTIONS :  
		free((int32_t *)v154);
		free((int32_t *)v148);
=============================WHILE LOOPS ID : 7 @ function_9538 ====================================
++++++++ WHILE START : 10331 
++++++++ WHILE FUNCTION : function_9538 
++++++++ WHILE END : 10465 
++++++++ INTRESTING INSTRUCTIONS :  
		sendto(sock_fd, (int32_t *)message, v147 + 66, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
=============================WHILE LOOPS ID : 9 @ function_9bcc ====================================
++++++++ WHILE START : 10718 
++++++++ WHILE FUNCTION : function_9bcc 
++++++++ WHILE END : 10870 
++++++++ INTRESTING INSTRUCTIONS :  
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a2 + 24 * option_value), 16);
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a2 + 24 * option_value), 16);
=============================WHILE LOOPS ID : 10 @ function_a1e8 ====================================
++++++++ WHILE START : 11057 
++++++++ WHILE FUNCTION : function_a1e8 
++++++++ WHILE END : 11093 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t sock_fd = socket(AF_INET, 0, IPPROTO_IP); // 0xa2f8
		if (sock_fd == -1) {
		bind(sock_fd, (struct sockaddr *)&addr, 16);
		int32_t sock; // 0xa34c
		connect(sock, (struct sockaddr *)(v153 + a2), 16);
=============================WHILE LOOPS ID : 11 @ function_a1e8 ====================================
++++++++ WHILE START : 11098 
++++++++ WHILE FUNCTION : function_a1e8 
++++++++ WHILE END : 11119 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		int32_t sock2; // 0xa428
		send(sock2, (int32_t *)buf, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 12 @ function_a1e8 ====================================
++++++++ WHILE START : 11137 
++++++++ WHILE FUNCTION : function_a1e8 
++++++++ WHILE END : 11153 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 13 @ function_a1e8 ====================================
++++++++ WHILE START : 11162 
++++++++ WHILE FUNCTION : function_a1e8 
++++++++ WHILE END : 11178 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 14 @ function_a1e8 ====================================
++++++++ WHILE START : 11187 
++++++++ WHILE FUNCTION : function_a1e8 
++++++++ WHILE END : 11203 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 15 @ function_a1e8 ====================================
++++++++ WHILE START : 11212 
++++++++ WHILE FUNCTION : function_a1e8 
++++++++ WHILE END : 11228 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 16 @ function_a1e8 ====================================
++++++++ WHILE START : 11237 
++++++++ WHILE FUNCTION : function_a1e8 
++++++++ WHILE END : 11253 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 17 @ function_a1e8 ====================================
++++++++ WHILE START : 11262 
++++++++ WHILE FUNCTION : function_a1e8 
++++++++ WHILE END : 11278 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 18 @ function_a1e8 ====================================
++++++++ WHILE START : 11287 
++++++++ WHILE FUNCTION : function_a1e8 
++++++++ WHILE END : 11303 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 19 @ function_a1e8 ====================================
++++++++ WHILE START : 11312 
++++++++ WHILE FUNCTION : function_a1e8 
++++++++ WHILE END : 11328 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 20 @ function_a1e8 ====================================
++++++++ WHILE START : 11337 
++++++++ WHILE FUNCTION : function_a1e8 
++++++++ WHILE END : 11353 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 21 @ function_a1e8 ====================================
++++++++ WHILE START : 11362 
++++++++ WHILE FUNCTION : function_a1e8 
++++++++ WHILE END : 11378 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 22 @ function_a1e8 ====================================
++++++++ WHILE START : 11387 
++++++++ WHILE FUNCTION : function_a1e8 
++++++++ WHILE END : 11403 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 23 @ function_a1e8 ====================================
++++++++ WHILE START : 11412 
++++++++ WHILE FUNCTION : function_a1e8 
++++++++ WHILE END : 11428 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 24 @ function_a1e8 ====================================
++++++++ WHILE START : 11437 
++++++++ WHILE FUNCTION : function_a1e8 
++++++++ WHILE END : 11453 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 25 @ function_a1e8 ====================================
++++++++ WHILE START : 11462 
++++++++ WHILE FUNCTION : function_a1e8 
++++++++ WHILE END : 11478 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 26 @ function_a1e8 ====================================
++++++++ WHILE START : 11487 
++++++++ WHILE FUNCTION : function_a1e8 
++++++++ WHILE END : 11503 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 27 @ function_a1e8 ====================================
++++++++ WHILE START : 11512 
++++++++ WHILE FUNCTION : function_a1e8 
++++++++ WHILE END : 11528 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 28 @ function_a1e8 ====================================
++++++++ WHILE START : 11537 
++++++++ WHILE FUNCTION : function_a1e8 
++++++++ WHILE END : 11553 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 29 @ function_a1e8 ====================================
++++++++ WHILE START : 11562 
++++++++ WHILE FUNCTION : function_a1e8 
++++++++ WHILE END : 11578 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 30 @ function_a1e8 ====================================
++++++++ WHILE START : 11587 
++++++++ WHILE FUNCTION : function_a1e8 
++++++++ WHILE END : 11603 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 31 @ function_a1e8 ====================================
++++++++ WHILE START : 11612 
++++++++ WHILE FUNCTION : function_a1e8 
++++++++ WHILE END : 11628 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 32 @ function_a1e8 ====================================
++++++++ WHILE START : 11637 
++++++++ WHILE FUNCTION : function_a1e8 
++++++++ WHILE END : 11653 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 33 @ function_a1e8 ====================================
++++++++ WHILE START : 11662 
++++++++ WHILE FUNCTION : function_a1e8 
++++++++ WHILE END : 11678 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 34 @ function_a1e8 ====================================
++++++++ WHILE START : 11687 
++++++++ WHILE FUNCTION : function_a1e8 
++++++++ WHILE END : 11703 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 35 @ function_a1e8 ====================================
++++++++ WHILE START : 11712 
++++++++ WHILE FUNCTION : function_a1e8 
++++++++ WHILE END : 11728 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 37 @ function_a488 ====================================
++++++++ WHILE START : 11948 
++++++++ WHILE FUNCTION : function_a488 
++++++++ WHILE END : 12150 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xa6b8
		fd = sock_fd2;
		if (sock_fd2 != -1) {
		while (true) {
		fcntl(sock_fd2, F_GETFL);
		connect(fd, (struct sockaddr *)&addr, 16);
		int32_t sock_fd3; // 0xa810
		while (true) {
		int32_t v181 = recvfrom(sock_fd, &buf, 256, MSG_NOSIGNAL, (struct sockaddr *)&addr2, &addr_len); // 0xa794
		close(fd);
		sock_fd3 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP);
		fd = sock_fd3;
		if (sock_fd3 == -1) {
		sock_fd2 = sock_fd3;
		close(fd);
		sock_fd3 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP);
		fd = sock_fd3;
		if (sock_fd3 == -1) {
		sock_fd2 = sock_fd3;
=============================WHILE LOOPS ID : 38 @ function_a488 ====================================
++++++++ WHILE START : 12171 
++++++++ WHILE FUNCTION : function_a488 
++++++++ WHILE END : 12246 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
=============================WHILE LOOPS ID : 41 @ function_ac3c ====================================
++++++++ WHILE START : 12453 
++++++++ WHILE FUNCTION : function_ac3c 
++++++++ WHILE END : 12655 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xae6c
		fd = sock_fd2;
		if (sock_fd2 != -1) {
		while (true) {
		fcntl(sock_fd2, F_GETFL);
		connect(fd, (struct sockaddr *)&addr, 16);
		int32_t sock_fd3; // 0xafc4
		while (true) {
		int32_t v181 = recvfrom(sock_fd, &buf, 256, MSG_NOSIGNAL, (struct sockaddr *)&addr2, &addr_len); // 0xaf48
		close(fd);
		sock_fd3 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP);
		fd = sock_fd3;
		if (sock_fd3 == -1) {
		sock_fd2 = sock_fd3;
		close(fd);
		sock_fd3 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP);
		fd = sock_fd3;
		if (sock_fd3 == -1) {
		sock_fd2 = sock_fd3;
=============================WHILE LOOPS ID : 42 @ function_ac3c ====================================
++++++++ WHILE START : 12676 
++++++++ WHILE FUNCTION : function_ac3c 
++++++++ WHILE END : 12751 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
=============================WHILE LOOPS ID : 46 @ function_b3f0 ====================================
++++++++ WHILE START : 13015 
++++++++ WHILE FUNCTION : function_b3f0 
++++++++ WHILE END : 13191 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a2 + v189), 16);
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a2 + v189), 16);
=============================WHILE LOOPS ID : 50 @ function_bae8 ====================================
++++++++ WHILE START : 13435 
++++++++ WHILE FUNCTION : function_bae8 
++++++++ WHILE END : 13612 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		sendto(fd, (int32_t *)message, 60, MSG_NOSIGNAL, (struct sockaddr *)(a2 + v186), 16);
		sendto(fd, (int32_t *)message, 60, MSG_NOSIGNAL, (struct sockaddr *)(a2 + v186), 16);
=============================WHILE LOOPS ID : 55 @ function_c194 ====================================
++++++++ WHILE START : 13814 
++++++++ WHILE FUNCTION : function_c194 
++++++++ WHILE END : 13850 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t sock_fd = socket(AF_INET, 17, IPPROTO_UDP); // 0xc2a4
		if (sock_fd == -1) {
		bind(sock_fd, (struct sockaddr *)&addr, 16);
		int32_t sock; // 0xc2f8
		connect(sock, (struct sockaddr *)(v153 + a2), 16);
=============================WHILE LOOPS ID : 56 @ function_c194 ====================================
++++++++ WHILE START : 13855 
++++++++ WHILE FUNCTION : function_c194 
++++++++ WHILE END : 13876 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		int32_t sock2; // 0xc3d4
		send(sock2, (int32_t *)buf, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 57 @ function_c194 ====================================
++++++++ WHILE START : 13894 
++++++++ WHILE FUNCTION : function_c194 
++++++++ WHILE END : 13910 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 58 @ function_c194 ====================================
++++++++ WHILE START : 13919 
++++++++ WHILE FUNCTION : function_c194 
++++++++ WHILE END : 13935 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 59 @ function_c194 ====================================
++++++++ WHILE START : 13944 
++++++++ WHILE FUNCTION : function_c194 
++++++++ WHILE END : 13960 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 60 @ function_c194 ====================================
++++++++ WHILE START : 13969 
++++++++ WHILE FUNCTION : function_c194 
++++++++ WHILE END : 13985 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 61 @ function_c194 ====================================
++++++++ WHILE START : 13994 
++++++++ WHILE FUNCTION : function_c194 
++++++++ WHILE END : 14010 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 62 @ function_c194 ====================================
++++++++ WHILE START : 14019 
++++++++ WHILE FUNCTION : function_c194 
++++++++ WHILE END : 14035 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 63 @ function_c194 ====================================
++++++++ WHILE START : 14044 
++++++++ WHILE FUNCTION : function_c194 
++++++++ WHILE END : 14060 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 64 @ function_c194 ====================================
++++++++ WHILE START : 14069 
++++++++ WHILE FUNCTION : function_c194 
++++++++ WHILE END : 14085 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 65 @ function_c194 ====================================
++++++++ WHILE START : 14094 
++++++++ WHILE FUNCTION : function_c194 
++++++++ WHILE END : 14110 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 66 @ function_c194 ====================================
++++++++ WHILE START : 14119 
++++++++ WHILE FUNCTION : function_c194 
++++++++ WHILE END : 14135 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 67 @ function_c194 ====================================
++++++++ WHILE START : 14144 
++++++++ WHILE FUNCTION : function_c194 
++++++++ WHILE END : 14160 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 68 @ function_c194 ====================================
++++++++ WHILE START : 14169 
++++++++ WHILE FUNCTION : function_c194 
++++++++ WHILE END : 14185 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 69 @ function_c194 ====================================
++++++++ WHILE START : 14194 
++++++++ WHILE FUNCTION : function_c194 
++++++++ WHILE END : 14210 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 70 @ function_c194 ====================================
++++++++ WHILE START : 14219 
++++++++ WHILE FUNCTION : function_c194 
++++++++ WHILE END : 14235 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 71 @ function_c194 ====================================
++++++++ WHILE START : 14244 
++++++++ WHILE FUNCTION : function_c194 
++++++++ WHILE END : 14260 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 72 @ function_c194 ====================================
++++++++ WHILE START : 14269 
++++++++ WHILE FUNCTION : function_c194 
++++++++ WHILE END : 14285 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 73 @ function_c194 ====================================
++++++++ WHILE START : 14294 
++++++++ WHILE FUNCTION : function_c194 
++++++++ WHILE END : 14310 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 74 @ function_c194 ====================================
++++++++ WHILE START : 14319 
++++++++ WHILE FUNCTION : function_c194 
++++++++ WHILE END : 14335 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 75 @ function_c194 ====================================
++++++++ WHILE START : 14344 
++++++++ WHILE FUNCTION : function_c194 
++++++++ WHILE END : 14360 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 76 @ function_c194 ====================================
++++++++ WHILE START : 14369 
++++++++ WHILE FUNCTION : function_c194 
++++++++ WHILE END : 14385 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 77 @ function_c194 ====================================
++++++++ WHILE START : 14394 
++++++++ WHILE FUNCTION : function_c194 
++++++++ WHILE END : 14410 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 78 @ function_c194 ====================================
++++++++ WHILE START : 14419 
++++++++ WHILE FUNCTION : function_c194 
++++++++ WHILE END : 14435 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 79 @ function_c194 ====================================
++++++++ WHILE START : 14444 
++++++++ WHILE FUNCTION : function_c194 
++++++++ WHILE END : 14460 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 80 @ function_c194 ====================================
++++++++ WHILE START : 14469 
++++++++ WHILE FUNCTION : function_c194 
++++++++ WHILE END : 14485 
++++++++ INTRESTING INSTRUCTIONS :  
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
=============================WHILE LOOPS ID : 83 @ function_c434 ====================================
++++++++ WHILE START : 14748 
++++++++ WHILE FUNCTION : function_c434 
++++++++ WHILE END : 14885 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		sendto(fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
		sendto(fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
=============================WHILE LOOPS ID : 87 @ function_c920 ====================================
++++++++ WHILE START : 15104 
++++++++ WHILE FUNCTION : function_c920 
++++++++ WHILE END : 15196 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		sendto(fd, (int32_t *)message, v148 + 32, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
=============================WHILE LOOPS ID : 92 @ function_cd58 ====================================
++++++++ WHILE START : 15419 
++++++++ WHILE FUNCTION : function_cd58 
++++++++ WHILE END : 15799 
++++++++ INTRESTING INSTRUCTIONS :  
		result = inet_addr((char *)&cp);
		sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
		if (sock_fd == -1) {
		if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
		result2 = close(sock_fd);
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		sendto(sock_fd, (int32_t *)fd, v155 + 47, MSG_NOSIGNAL, (struct sockaddr *)(a2 + v195), 16);
		while (true) {
		while (true) {
		result = inet_addr((char *)&cp);
		sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
		if (sock_fd == -1) {
		if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
		result2 = close(sock_fd);
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 101 @ function_d530 ====================================
++++++++ WHILE START : 16859 
++++++++ WHILE FUNCTION : function_d530 
++++++++ WHILE END : 17416 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		close(fd2);
		dirp = opendir((char *)name);
		while (true) {
		while (true) {
		struct __dirstream * dirp3 = opendir((char *)&path); // 0xd8dc
		while (true) {
		while (true) {
		kill(function_11810((char *)v182, 10), SIGKILL);
		struct dirent * v200 = readdir((struct __dirstream *)fd2); // 0xd9d8
		struct dirent * v201 = readdir((struct __dirstream *)fd2); // 0xd8ec
		closedir((struct __dirstream *)fd2);
		v191 = readdir((struct __dirstream *)dirp2);
		closedir((struct __dirstream *)dirp4);
		closedir((struct __dirstream *)fd2);
		v191 = readdir((struct __dirstream *)dirp2);
		struct dirent * v210 = readdir((struct __dirstream *)dirp2); // 0xd7f8
		closedir((struct __dirstream *)dirp2);
		closedir((struct __dirstream *)dirp2);
		close(fd2);
		dirp = opendir((char *)name);
		while (true) {
		closedir((struct __dirstream *)dirp2);
		close(fd2);
		dirp = opendir((char *)name);
		while (true) {
		closedir((struct __dirstream *)dirp2);
=============================WHILE LOOPS ID : 103 @ function_dac4 ====================================
++++++++ WHILE START : 17693 
++++++++ WHILE FUNCTION : function_dac4 
++++++++ WHILE END : 18366 
++++++++ INTRESTING INSTRUCTIONS :  
		struct __dirstream * v148 = opendir((char *)function_10ff4(15, NULL)); // 0xddd0
		struct dirent * v149 = readdir((struct __dirstream *)dirp); // 0xdde8141
		while (true) {
		while (true) {
		int32_t fd2 = open((char *)&path2, O_RDONLY); // 0xe038
		close(fd2);
		while (true) {
		while (true) {
		close(fd2);
		kill(pid3, SIGKILL);
		v156 = readdir((struct __dirstream *)dirp);
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		close(fd2);
		kill(pid3, SIGKILL);
		int32_t pid2 = getpid(); // 0xdfcc
		int32_t ppid = getppid(); // 0xdfd8
		int32_t fd3 = open(path, O_RDONLY); // 0xe010
		close(fd3);
		v156 = readdir((struct __dirstream *)dirp);
		v156 = readdir((struct __dirstream *)dirp);
		struct dirent * v233 = readdir((struct __dirstream *)dirp); // 0xde78
		v156 = readdir((struct __dirstream *)dirp2);
		v156 = readdir((struct __dirstream *)dirp2);
		v156 = readdir((struct __dirstream *)dirp);
		closedir((struct __dirstream *)dirp);
		closedir((struct __dirstream *)dirp);
=============================WHILE LOOPS ID : 105 @ function_e69c ====================================
++++++++ WHILE START : 19462 
++++++++ WHILE FUNCTION : function_e69c 
++++++++ WHILE END : 19543 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		int32_t sock_fd = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xeb98
		int32_t fd3 = sock_fd; // r5
		if (sock_fd != -1) {
		fcntl(sock_fd, F_GETFL);
		int32_t sock; // 0xebe4
		connect(sock, (struct sockaddr *)&addr, 16);
=============================WHILE LOOPS ID : 114 @ function_f100 ====================================
++++++++ WHILE START : 21071 
++++++++ WHILE FUNCTION : function_f100 
++++++++ WHILE END : 21445 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t sock_fd = socket(AF_INET, 0, IPPROTO_IP); // 0xf258
		int32_t fd = sock_fd; // r6
		if (sock_fd == -1) {
		close(fd);
		free((int32_t *)mem);
		if (connect((int32_t)&sock, (struct sockaddr *)16, 16) != -1) {
		if (send(fd, (int32_t *)&buf, length, MSG_NOSIGNAL) != -1) {
		close(fd);
		free((int32_t *)mem);
		int32_t v181 = recvfrom(fd, (int32_t *)&buf2, 2048, MSG_NOSIGNAL, (struct sockaddr *)addr, (int32_t *)addr); // 0xf380
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		close(fd);
		free((int32_t *)mem);
		close(fd);
		free((int32_t *)mem);
=============================WHILE LOOPS ID : 116 @ function_f858 ====================================
++++++++ WHILE START : 22133 
++++++++ WHILE FUNCTION : function_f858 
++++++++ WHILE END : 24301 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xf93c
		sock = sock_fd;
		if (sock_fd == -1) {
		fcntl(sock_fd, F_GETFL);
		fcntl(sock_fd, F_SETFL);
		if (setsockopt(sock, status, 3, &option_value, 4) != 0) {
		close(sock);
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		uint32_t v151 = recvfrom(sock, &buf, 1514, MSG_NOSIGNAL, (struct sockaddr *)addr, (int32_t *)addr); // 0xfea4
		while (true) {
		close(fd);
		while (true) {
		uint32_t sock19; // 0x101fc
		if (sock19 != -1) {
		int32_t v176 = sock19 % 32; // 0x1021c
		while (true) {
		while (true) {
		int32_t sock2; // 0x10274
		int32_t v188 = recv(sock2, (int32_t *)buf2, 356 - v187, MSG_NOSIGNAL); // 0x10284
		close(fd2);
		while (true) {
		case 2: {
		while (true) {
		while (true) {
		int32_t sock3; // 0x10d54
		send(sock3, &buf3, 3, MSG_NOSIGNAL);
		send(0x4000, (int32_t *)t, 3, MSG_NOSIGNAL);
		send(0x4000, (int32_t *)(int32_t)&buf4, 9, MSG_NOSIGNAL);
		while (true) {
		case 2: {
		while (true) {
		case 3: {
		int32_t sock4; // 0x10cc0
		int32_t sock5; // 0x10cd8
		send(sock4, (int32_t *)buf5, (int32_t)length, MSG_NOSIGNAL);
		send(sock5, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		while (true) {
		send(sock4, (int32_t *)buf5, length2, MSG_NOSIGNAL);
		send(sock5, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 4: {
		int32_t sock6; // 0x10a0c
		int32_t sock7; // 0x10a24
		send(sock6, (int32_t *)buf6, (int32_t)length3, MSG_NOSIGNAL);
		send(sock7, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		while (true) {
		send(sock6, (int32_t *)buf6, length4, MSG_NOSIGNAL);
		send(sock7, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 5: {
		int32_t sock8; // 0x107dc
		int32_t sock9; // 0x107f0
		while (true) {
		send(sock8, (int32_t *)buf7, length5, MSG_NOSIGNAL);
		send(sock9, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		while (true) {
		case 2: {
		case 3: {
		case 4: {
		case 5: {
		case 6: {
		int32_t sock10; // 0x10708
		int32_t sock11; // 0x1071c
		while (true) {
		send(sock10, (int32_t *)buf8, length5, MSG_NOSIGNAL);
		send(sock11, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		send(sock10, (int32_t *)buf8, length5, MSG_NOSIGNAL);
		send(sock11, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 7: {
		int32_t sock12; // 0x10ae4
		int32_t sock13; // 0x10af8
		while (true) {
		send(sock12, (int32_t *)buf9, length5, MSG_NOSIGNAL);
		send(sock13, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		send(sock12, (int32_t *)buf9, length5, MSG_NOSIGNAL);
		send(sock13, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 8: {
		int32_t sock14; // 0x10924
		int32_t sock15; // 0x10938
		while (true) {
		send(sock14, (int32_t *)buf10, length5, MSG_NOSIGNAL);
		send(sock15, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		send(sock14, (int32_t *)buf10, length5, MSG_NOSIGNAL);
		send(sock15, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 9: {
		int32_t sock16; // 0x10564
		int32_t sock17; // 0x10578
		while (true) {
		send(sock16, (int32_t *)buf11, length5, MSG_NOSIGNAL);
		send(sock17, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		send(sock16, (int32_t *)buf11, length5, MSG_NOSIGNAL);
		send(sock17, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 10: {
		int32_t v329 = fork(); // 0x10410
		int32_t sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0x10440
		int32_t sock18 = sock_fd2;
		if (sock_fd2 == -1) {
		if (connect(sock18, (struct sockaddr *)&addr2, 16) == -1) {
		close(sock18);
		send(sock18, &buf12, 1, MSG_NOSIGNAL);
		send(sock18, &length5, 4, MSG_NOSIGNAL);
		send(sock18, &buf13, 2, MSG_NOSIGNAL);
		send(sock18, (int32_t *)(v332 + 12), 1, MSG_NOSIGNAL);
		send(sock18, (int32_t *)buf14, (int32_t)length6, MSG_NOSIGNAL);
		send(sock18, (int32_t *)(v332 + 13), 1, MSG_NOSIGNAL);
		send(sock18, (int32_t *)buf15, (int32_t)length7, MSG_NOSIGNAL);
		close(sock18);
		close(fd3);
		close(fd4);
		while (true) {
		send(sock8, (int32_t *)buf7, length5, MSG_NOSIGNAL);
		send(sock9, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		while (true) {
		case 6: {
		case 7: {
		case 8: {
		case 9: {
		case 10: {
		while (true) {
		case 3: {
		case 4: {
		case 5: {
		case 6: {
		case 7: {
		case 8: {
		case 9: {
		case 10: {
		close(fd2);
		while (true) {
		if ((buf12 | getsockopt(sock19, SO_DEBUG, 4, &buf12, &length5)) == 0) {
		while (true) {
		close(fd5);
		while (true) {
=============================WHILE LOOPS ID : 126 @ function_11810 ====================================
++++++++ WHILE START : 26579 
++++++++ WHILE FUNCTION : function_11810 
++++++++ WHILE END : 26743 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 141 @ function_11c48 ====================================
++++++++ WHILE START : 28263 
++++++++ WHILE FUNCTION : function_11c48 
++++++++ WHILE END : 28475 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
