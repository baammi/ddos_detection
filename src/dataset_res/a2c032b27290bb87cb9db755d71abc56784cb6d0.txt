=============================================================================
========	BINARY ID :a2c032b27290bb87cb9db755d71abc56784cb6d0==================================================
================================================================================
================================================================================
========	STRINGS SUMMARY : =====================================================
================================================================================
TOTAL STRINGS COUNT :113800
SUPSCPECTED LINES COUNT :6680
SUPSCPECTED STRINGS COUNT (DISTINCT) :33
SUPSCPECTED STRINGS WEIGHT :130
SUSPECT STRING SCORE : [130 / 150] 86%
USER AGENTS STRINGS COUNT :1
STATIC IPs STRINGS COUNT :0
DYNAMIC IPs STRINGS COUNT :0
================================================================================
========	STRINGS DETAILS : =====================================================
================================================================================
================================================================================
========	SUSPECTED STRINGS : =====================================================
================================================================================
/usr/lib/golang/src/runtime/runtime-gdb.py
sync/atomic.(*Value).Load
sync/atomic.(*Value).Store
sync/atomic.(*noCopy).Lock
sync/atomic.CompareAndSwapUintptr
sync/atomic.CompareAndSwapUint64
sync/atomic.AddInt32
sync/atomic.AddUint32
sync/atomic.StoreUint32
sync/atomic.StoreUint64
sync/atomic.StoreUintptr
type..hash.sync/atomic.Value
type..eq.sync/atomic.Value
sync/atomic.StorePointer
sync/atomic.CompareAndSwapPointer
flags
runtime.GOMAXPROCS
runtime.errorString.Error
noscan
scanSize
flags
runtime.(*gcControllerState).startCycle
runtime.(*gcControllerState).endCycle
runtime.(*gcControllerState).enlistWorker
runtime.(*gcControllerState).findRunnableGCWorker
sync.runtime_registerPoolCleanup
runtime.gchelperstart
scanWork
scanWork
runtime.scanstack
runtime.scanframeworker
targetpc
runtime.queueRescan
runtime.dequeueRescan
initScanWork
flags
scanWork
runtime.scanblock
runtime.scanobject
runtime.greyobject
scanSize
sync.event
net.runtime_pollServerInit
runtime.netpollinited
net.runtime_pollOpen
net.runtime_pollClose
net.runtime_pollReset
net.runtime_pollWait
net.runtime_pollSetDeadline
net.runtime_pollUnblock
runtime.netpollready
runtime.netpollblockcommit
runtime.netpollblock
runtime.netpollunblock
runtime.netpolldeadlineimpl
runtime.netpollDeadline
runtime.netpollReadDeadline
runtime.netpollWriteDeadline
runtime.netpollinit
runtime.netpollopen
runtime.netpollclose
runtime.netpoll
runtime.getproccount
runtime.newosproc
runtime.getRandomData
runtime.sigprocmask
runtime.deferproc
sync.throw
first
procs
runtime.gcprocs
runtime.needaddgcproc
nproc
runtime.casfrom_Gscanstatus
runtime.castogscanstatus
runtime.scang
runtime.exitsyscallfast_pidle
runtime.beforefork
syscall.runtime_BeforeFork
runtime.afterfork
syscall.runtime_AfterFork
runtime.newproc
runtime.newproc1
runtime._System
runtime.procresize
nprocs
runtime.pidleput
runtime.pidleget
sync.runtime_procPin
sync.runtime_procUnpin
sync/atomic.runtime_procPin
sync/atomic.runtime_procUnpin
sync.runtime_canSpin
sync.runtime_doSpin
runtime.(*randomOrder).reset
runtime.extendRandom
sync.runtime_Semacquire
net.runtime_Semacquire
sync.runtime_Semrelease
sync.runtime_SemacquireMutex
net.runtime_Semrelease
sync.runtime_notifyListAdd
sync.runtime_notifyListWait
sync.runtime_notifyListNotifyAll
sync.runtime_notifyListNotifyOne
sync.runtime_notifyListCheck
flags
runtime.resetcpuprofiler
runtime.msigrestore
scanp
targetpc
runtime.syncadjustsudogs
sync
runtime.slicerunetostring
runtime.badsystemstack
targetpc
targetpc
targetpc
targetpc
targetpc
first
runtime.timerproc
net.runtimeNano
runtime.traceProcFree
runtime.traceGomaxprocs
procs
runtime.traceProcStart
runtime.traceProcStop
runtime.traceGCScanStart
runtime.traceGCScanDone
flags
flags
firstFrame
runtime.(*gcControllerState).findRunnableGCWorker.func1
selfScan
runtime.scanstack.func1
first
runtime.newproc.func1
runtime.(*errorString).Error
runtime.systemstack_switch
runtime.systemstack
runtime.procyield
runtime.fastrand
runtime.raiseproc
runtime.rtsigprocmask
runtime.sigreturn
type..hash.struct { F uintptr; runtime.s **runtime.mspan; runtime.size *uintptr; runtime.needzero bool }
type..eq.struct { F uintptr; runtime.s **runtime.mspan; runtime.size *uintptr; runtime.needzero bool }
type..hash.runtime.gcControllerState
type..eq.runtime.gcControllerState
type..hash.struct { F uintptr; runtime.s **runtime.mspan; runtime.h *runtime.mheap; runtime.npage uintptr; runtime.sizeclass int32; runtime.large bool }
type..eq.struct { F uintptr; runtime.s **runtime.mspan; runtime.h *runtime.mheap; runtime.npage uintptr; runtime.sizeclass int32; runtime.large bool }
type..hash.struct { F uintptr; runtime.h *runtime.mheap; runtime.s *runtime.mspan; runtime.acct int32 }
type..eq.struct { F uintptr; runtime.h *runtime.mheap; runtime.s *runtime.mspan; runtime.acct int32 }
type..hash.struct { runtime.enabled bool; runtime.pad [3]uint8; runtime.needed bool; runtime.cgo bool; runtime.alignme uint64 }
type..eq.struct { runtime.enabled bool; runtime.pad [3]uint8; runtime.needed bool; runtime.cgo bool; runtime.alignme uint64 }
type..hash.struct { runtime.schedtick uint32; runtime.schedwhen int64; runtime.syscalltick uint32; runtime.syscallwhen int64 }
type..eq.struct { runtime.schedtick uint32; runtime.schedwhen int64; runtime.syscalltick uint32; runtime.syscallwhen int64 }
type..hash.[256]struct { runtime.schedtick uint32; runtime.schedwhen int64; runtime.syscalltick uint32; runtime.syscallwhen int64 }
type..eq.[256]struct { runtime.schedtick uint32; runtime.schedwhen int64; runtime.syscalltick uint32; runtime.syscallwhen int64 }
type..hash.struct { runtime.note runtime.note; runtime.mask [3]uint32; runtime.wanted [3]uint32; runtime.ignored [3]uint32; runtime.recv [3]uint32; runtime.state uint32; runtime.inuse bool }
type..eq.struct { runtime.note runtime.note; runtime.mask [3]uint32; runtime.wanted [3]uint32; runtime.ignored [3]uint32; runtime.recv [3]uint32; runtime.state uint32; runtime.inuse bool }
errors.(*errorString).Error
targetDiff
targetDiff
ulpBinary
runeTmp
strconv.AppendQuoteRuneToASCII
runeTmp
sync.(*Cond).Wait
sync.(*Cond).Signal
sync.(*Cond).Broadcast
sync.(*copyChecker).check
sync.(*noCopy).Lock
sync.(*Mutex).Lock
sync.(*Mutex).Unlock
sync.(*Once).Do
sync.(*Pool).Put
sync.(*Pool).Get
sync.(*Pool).getSlow
local
sync.(*Pool).pin
sync.(*Pool).pinSlow
local.len
local.ptr
sync.poolCleanup
sync.init.1
sync.init.2
sync.(*RWMutex).RLock
sync.(*RWMutex).RUnlock
sync.(*RWMutex).Lock
sync.(*RWMutex).Unlock
sync.(*rlocker).Lock
sync.(*rlocker).Unlock
sync.(*WaitGroup).Add
sync.(*WaitGroup).Done
sync.init
type..hash.sync.Cond
type..eq.sync.Cond
sync.(*poolLocal).Lock
sync.(*poolLocal).Unlock
syscall.forkAndExecInChild
ppid
syscall.forkExecPipe
syscall.writeIDMappings
im.HostID
syscall.writeUidGidMappings
syscall.forkExec
syscall.StartProcess
syscall.(*NetlinkRouteRequest).toWireFormat
syscall.newNetlinkRouteRequest
syscall.NetlinkRIB
msgs.len
syscall.ParseNetlinkMessage
msgs.len
msgs.cap
msgs.ptr
syscall.ParseNetlinkRouteAttr
wpid
syscall.(*SockaddrInet4).sockaddr
syscall.(*SockaddrInet6).sockaddr
syscall.(*SockaddrNetlink).sockaddr
flags
flags
syscall.Bind
syscall.Connect
flags
flags
syscall.Socket
flags
flags
wpid
syscall.Kill
flags
syscall.bind
syscall.connect
syscall.socket
flags
flags
flags
flags
type..hash.syscall.NetlinkRouteRequest
type..eq.syscall.NetlinkRouteRequest
type..hash.syscall.SockaddrInet4
type..eq.syscall.SockaddrInet4
rangeErrString.len
rangeErrString.ptr
local
rangeErrString
time.(*Location).lookupFirstZone
time.(*Location).firstZoneUsed
time.initLocal
firstErr.itab
firstErr.data
type..hash.time.zoneTrans
type..eq.time.zoneTrans
type..hash.[1]time.zoneTrans
type..eq.[1]time.zoneTrans
os.newProcess
os.(*Process).setDone
os.(*Process).done
os.StartProcess
os.(*Process).Release
os.(*Process).Kill
os.(*Process).Wait
os.(*Process).Signal
os.(*ProcessState).Sys
os.startProcess
os.(*Process).kill
os.(*ProcessState).String
os.(*Process).wait
pid1
os.(*Process).signal
os.(*Process).release
flag
os.Hostname
os.hostname
os.(*Process).blockUntilWaitable
type..hash.os.Process
type..eq.os.Process
type..hash.os.ProcessState
type..eq.os.ProcessState
rcvr.flag
v.flag
scan.index.len
scan.typ
scan.index.ptr
reflect.flag.mustBe
reflect.flag.mustBeExported
reflect.flag.mustBeAssignable
v.flag
target
ret.flag
ret.flag
ret.flag
target
go.(*struct { sync.RWMutex; reflect.m map[*reflect.rtype][]reflect.method }).Lock
go.(*struct { sync.RWMutex; reflect.m map[*reflect.rtype][]reflect.method }).Unlock
go.(*struct { sync.RWMutex; reflect.m map[*reflect.rtype]*reflect.ptrType }).Lock
go.(*struct { sync.RWMutex; reflect.m map[*reflect.rtype]*reflect.ptrType }).Unlock
go.(*struct { sync.RWMutex; reflect.m map[uint32][]*reflect.rtype }).Lock
go.(*struct { sync.RWMutex; reflect.m map[uint32][]*reflect.rtype }).Unlock
go.(*struct { sync.RWMutex; reflect.m map[reflect.layoutKey]reflect.layoutType }).Lock
go.(*struct { sync.RWMutex; reflect.m map[reflect.layoutKey]reflect.layoutType }).Unlock
fmt.(*pp).Flag
v·2.flag
oldFlags
v·2.flag
v·2.flag
key.flag
first
rv.flag
first
math/rand.NewSource
math/rand.New
math/rand.(*Rand).Seed
math/rand.(*Rand).Int63
math/rand.(*Rand).Uint64
math/rand.(*Rand).Int
math/rand.(*Rand).Read
math/rand.read
math/rand.Seed
math/rand.Int
math/rand.(*lockedSource).Int63
math/rand.(*lockedSource).Uint64
math/rand.(*lockedSource).Seed
math/rand.(*lockedSource).seedPos
math/rand.(*lockedSource).read
math/rand.(*rngSource).Seed
math/rand.(*rngSource).Int63
math/rand.(*rngSource).Uint64
math/rand.init
math/rand.(*Rand).Int63-fm
math/rand.(Source64).Int63-fm
type..hash.math/rand.Rand
type..eq.math/rand.Rand
type..hash.math/rand.lockedSource
type..eq.math/rand.lockedSource
type..hash.struct { F uintptr; R math/rand.Source64 }
type..eq.struct { F uintptr; R math/rand.Source64 }
net.sortByRFC6724
net.sortByRFC6724withSrcs
net.srcAddrs
net.ipAttrOf
net.(*byRFC6724).Len
net.(*byRFC6724).Swap
net.(*byRFC6724).Less
net.init.1
net.byMaskLength.Len
net.byMaskLength.Swap
net.byMaskLength.Less
net.mustCIDR
net.policyTable.Classify
net.classifyScope
net.commonPrefixLen
net.systemConf
net.initConfVal
localDomainDefined
net.(*conf).canUseCgo
net.(*conf).hostLookupOrder
mdnsSource
dnsSource
first.len
first.ptr
hostname
net.goDebugNetDNS
dnsMode
net.isLocalhost
net.isGateway
net.(*Dialer).deadline
net.partialDeadline
net.parseNetwork
afnet
net.(*Resolver).resolveAddrList
net.len
net.ptr
network
net.(*Dialer).Dial
network
net.(*Dialer).DialContext
network
net.dialParallel
net.dialSerial
firstErr.itab
firstErr.data
net.dialSingle
net.Listen
net.answer
net.equalASCIILabel
net.isDomainName
net.absDomainName
net.(*UDPConn).dnsRoundTrip
net.dnsRoundTripUDP
net.(*TCPConn).dnsRoundTrip
net.dnsRoundTripTCP
net.(*Dialer).dialDNS
network
net.exchange
network.len
network.ptr
net.tryOneName
net.addrRecordList
net.(*resolverConfig).init
net.(*resolverConfig).tryUpdate
dnsConf
net.(*resolverConfig).tryAcquireSema
net.(*resolverConfig).releaseSema
net.avoidDNS
net.(*dnsConfig).nameList
net.hostLookupOrder.String
net.goLookupIPFiles
net.goLookupIP
host
net.goLookupIPCNAMEOrder
net.dnsReadConfig
net.(*dnsConfig).serverOffset
net.dnsDefaultSearch
net.(*dnsHeader).Walk
net.(*dnsQuestion).Walk
net.(*dnsRR_Header).Header
net.(*dnsRR_Header).Walk
net.(*dnsRR_CNAME).Header
net.(*dnsRR_CNAME).Walk
net.(*dnsRR_MX).Header
net.(*dnsRR_MX).Walk
net.(*dnsRR_NS).Header
net.(*dnsRR_NS).Walk
net.(*dnsRR_PTR).Header
net.(*dnsRR_PTR).Walk
net.(*dnsRR_SOA).Header
net.(*dnsRR_SOA).Walk
net.(*dnsRR_TXT).Header
net.(*dnsRR_TXT).Walk
net.(*dnsRR_SRV).Header
net.(*dnsRR_SRV).Walk
net.(*dnsRR_A).Header
net.(*dnsRR_A).Walk
net.(*dnsRR_AAAA).Header
net.(*dnsRR_AAAA).Walk
net.packDomainName
net.unpackDomainName
net.packStruct
net.unpackStruct
net.printStruct
net.packRR
net.unpackRR
net.(*dnsMsgHdr).Walk
net.(*dnsMsg).Pack
net.(*dnsMsg).Unpack
net.(*dnsMsg).String
net.(*dnsMsg).IsResponseTo
net.(*fdMutex).incref
net.(*fdMutex).increfAndClose
net.(*fdMutex).decref
net.(*fdMutex).rwlock
net.(*fdMutex).rwunlock
net.(*netFD).incref
net.(*netFD).decref
net.(*netFD).readLock
net.(*netFD).readUnlock
net.(*netFD).writeLock
net.(*netFD).writeUnlock
net.(*pollDesc).init
net.(*pollDesc).close
net.(*pollDesc).evict
net.(*pollDesc).prepare
net.(*pollDesc).prepareRead
net.(*pollDesc).prepareWrite
net.(*pollDesc).wait
net.(*pollDesc).waitRead
net.(*pollDesc).waitWrite
net.convertErr
net.(*netFD).setDeadline
net.(*netFD).setReadDeadline
net.(*netFD).setWriteDeadline
net.setDeadlineImpl
net.(*netFD).init
net.(*netFD).setAddr
net.(*netFD).connect
net.(*netFD).destroy
net.(*netFD).Close
net.(*netFD).Read
net.(*netFD).Write
net.(*netFD).accept
net.len
net.ptr
netfd
net.parseLiteralIP
net.readHosts
net.lookupStaticHost
lowerHost.len
lowerHost.cap
lowerHost.ptr
host
net.Flags.String
net.(*ipv6ZoneCache).update
net.zoneToString
net.zoneToInt
net.interfaceTable
msgs.len
net.newLink
net.IPv4
net.IPv4Mask
net.CIDRMask
net.IP.IsUnspecified
net.IP.IsLoopback
net.IP.IsMulticast
net.IP.IsLinkLocalUnicast
net.isZeros
net.IP.To4
net.allFF
net.IP.Mask
net.IP.String
net.hexString
net.ipEmptyString
net.IP.Equal
net.bytesEqual
net.IP.matchAddrFamily
net.simpleMaskLength
net.IPMask.Size
net.IPMask.String
net.networkNumberAndMask
net.(*IPNet).Contains
net.(*IPNet).Network
net.(*IPNet).String
net.parseIPv4
net.parseIPv6
net.ParseIP
net.ParseCIDR
net.(*IPAddr).Network
net.(*IPAddr).String
net.(*IPAddr).isWildcard
net.sockaddrToIP
net.(*IPAddr).family
net.(*IPAddr).sockaddr
net.(*IPAddr).toLocal
net.dialIP
netProto
net.isIPv4
net.addrList.first
net.addrList.partition
net.filterAddrList
inetaddr
net.ipv4only
net.ipv6only
net.SplitHostPort
hostport
host
net.splitHostZone
host
net.JoinHostPort
host
net.(*Resolver).internetAddrList
host.len
host.ptr
net.probeIPv4Stack
net.probeIPv6Stack
net.favoriteAddrFamily
net.internetSocket
net.ipToSockaddr
net.lookupProtocolMap
net.lookupPortMap
network
net.(*Resolver).LookupIPAddr
host
net.ipAddrsEface
net.(*Resolver).LookupPort
network
net.readProtocols
net.lookupProtocol
net.(*Resolver).lookupIP
host
net.(*Resolver).lookupPort
network
net.HardwareAddr.String
net.init.2
net.(*conn).Read
net.(*conn).Write
net.(*conn).Close
net.(*conn).LocalAddr
net.(*conn).RemoteAddr
net.(*conn).SetDeadline
net.(*conn).SetReadDeadline
net.(*conn).SetWriteDeadline
net.(*OpError).Error
net.(*OpError).Timeout
net.(*OpError).Temporary
net.(*timeoutError).Error
net.(*timeoutError).Timeout
net.(*timeoutError).Temporary
net.(*ParseError).Error
net.(*AddrError).Error
net.(*AddrError).Timeout
net.(*AddrError).Temporary
net.UnknownNetworkError.Error
net.UnknownNetworkError.Timeout
net.UnknownNetworkError.Temporary
net.(*DNSError).Error
net.(*DNSError).Timeout
net.(*DNSError).Temporary
net.genericReadFrom
net.releaseThread
net.nssSource.standardCriteria
net.parseNSSConfFile
net.parseNSSConf
net.parseCriteria
net.(*file).close
net.(*file).getLineFromData
net.(*file).readLine
net.open
net.stat
net.countAnyByte
net.splitAtBytes
net.getFields
net.dtoi
net.xtoi
net.itoa
net.uitoa
net.appendHex
net.count
net.last
net.lowerASCIIBytes
net.trimSpace
net.removeComment
net.foreachLine
net.foreachField
net.stringsHasSuffixFold
net.stringsEqualFold
net.readFull
net.goDebugString
net.parsePort
net.readServices
portnet.len
netw.len
portnet.ptr
netw.ptr
net.goLookupPort
network
net.sendFile
net.sysSocket
net.accept
net.maxListenerBacklog
net.socket
net.(*netFD).addrFunc
net.(*netFD).dial
net.(*netFD).listenStream
net.(*netFD).listenDatagram
net.setDefaultSockopts
net.setDefaultListenerSockopts
net.setDefaultMulticastSockopts
net.setKeepAlive
net.(*TCPAddr).Network
net.(*TCPAddr).String
net.(*TCPAddr).isWildcard
net.(*TCPConn).ReadFrom
net.(*TCPConn).SetKeepAlive
net.newTCPConn
net.(*TCPListener).Accept
net.(*TCPListener).Close
net.(*TCPListener).Addr
net.(*TCPListener).SetDeadline
net.ListenTCP
net.sockaddrToTCP
net.(*TCPAddr).family
net.(*TCPAddr).sockaddr
net.(*TCPAddr).toLocal
net.(*TCPConn).readFrom
net.dialTCP
net.doDialTCP
net.selfConnect
net.(*TCPListener).accept
net.(*TCPListener).close
net.listenTCP
network
net.setNoDelay
net.setKeepAlivePeriod
net.(*UDPAddr).Network
net.(*UDPAddr).String
net.(*UDPAddr).isWildcard
net.DialUDP
net.sockaddrToUDP
net.(*UDPAddr).family
net.(*UDPAddr).sockaddr
net.(*UDPAddr).toLocal
net.dialUDP
net.(*UnixAddr).Network
net.(*UnixAddr).String
net.(*UnixAddr).isWildcard
net.(*UnixListener).Accept
net.(*UnixListener).Close
net.(*UnixListener).Addr
net.(*UnixListener).SetDeadline
net.ListenUnix
net.unixSocket
net.sockaddrToUnix
net.sockaddrToUnixgram
net.sockaddrToUnixpacket
net.(*UnixAddr).family
net.(*UnixAddr).sockaddr
net.(*UnixAddr).toLocal
net.dialUnix
net.(*UnixListener).accept
net.(*UnixListener).close
net.listenUnix
network
net._C2func_getaddrinfo
net._Cfunc_CString
net._Cfunc_GoString
net._Cfunc_free
net._Cfunc_freeaddrinfo
net._Cfunc_gai_strerror
net._cgo_cmalloc
net.addrinfoErrno.Error
net.addrinfoErrno.Temporary
net.addrinfoErrno.Timeout
net.cgoLookupPort
network
net.cgoLookupServicePort
network
net.cgoPortLookup
network
net.cgoLookupIPCNAME
net.cgoIPLookup
net.cgoLookupIP
net.copyIP
net.glob..func1
net.glob..func2
net.glob..func3
net.glob..func4
net.glob..func5
net.glob..func6
net.glob..func7
net.glob..func8
net.glob..func9
net.glob..func10
net.glob..func11
host
net.glob..func12
net.glob..func14
net.initConfVal.func1
net.(*conf).hostLookupOrder.func1
&hostname
net.goDebugNetDNS.func1
net.(*Dialer).DialContext.func1
net.dialParallel.func1
net.dialSingle.func1
net.goLookupIPCNAMEOrder.func1
net.packStruct.func1
net.unpackStruct.func1
net.printStruct.func1
net.(*netFD).connect.func1
net.(*netFD).connect.func2
net.SplitHostPort.func1
host
net.(*Resolver).internetAddrList.func1
net.len
net.ptr
net.(*Resolver).LookupIPAddr.func1
net.parseNSSConf.func1
net.parseCriteria.func1
net.(*netFD).addrFunc.func1
net.(*UnixListener).close.func1
net.cgoLookupServicePort.func1
net.cgoLookupServicePort.func2
net.cgoLookupServicePort.func3
net.cgoLookupIPCNAME.func1
net.cgoLookupIPCNAME.func2
net.cgoLookupIPCNAME.func3
net.init
net.(*IP).String
net.(*IPMask).String
net.(*byMaskLength).Len
net.(*byMaskLength).Swap
net.(*byMaskLength).Less
net.(*hostLookupOrder).String
net.(*UnknownNetworkError).Error
net.(*UnknownNetworkError).Timeout
net.(*UnknownNetworkError).Temporary
net.(*Flags).String
net.(*HardwareAddr).String
net.(*addrinfoErrno).Error
net.(*addrinfoErrno).Temporary
net.(*addrinfoErrno).Timeout
net.(*resolverConfig).(net.init)-fm
net.(*Resolver).(net.lookupIP)-fm
type..hash.net.netFD
type..eq.net.netFD
net.(*UDPConn).Read
net.(*UDPConn).Write
net.(*UDPConn).Close
net.(*UDPConn).LocalAddr
net.(*UDPConn).RemoteAddr
net.(*UDPConn).SetDeadline
net.(*UDPConn).SetReadDeadline
net.(*UDPConn).SetWriteDeadline
type..hash.net.dnsMsgHdr
type..eq.net.dnsMsgHdr
type..hash.net.dnsQuestion
type..eq.net.dnsQuestion
type..hash.net.dnsRR_Header
type..eq.net.dnsRR_Header
net.(*dnsMsg).Walk
type..hash.net.policyTableEntry
type..eq.net.policyTableEntry
type..hash.net.nssCriterion
type..eq.net.nssCriterion
type..hash.net.conf
type..eq.net.conf
type..hash.net.Dialer
type..eq.net.Dialer
type..hash.net.UnixAddr
type..eq.net.UnixAddr
type..hash.net.AddrError
type..eq.net.AddrError
type..hash.net.OpError
type..eq.net.OpError
type..hash.net.dialParam
type..eq.net.dialParam
net.(*dialParam).dialDNS
network
net.(*TCPConn).Read
net.(*TCPConn).Write
net.(*TCPConn).Close
net.(*TCPConn).LocalAddr
net.(*TCPConn).RemoteAddr
net.(*TCPConn).SetDeadline
net.(*TCPConn).SetReadDeadline
net.(*TCPConn).SetWriteDeadline
type..hash.net.dialResult·1
type..eq.net.dialResult·1
net.(*dialResult·1).Close
net.(*dialResult·1).LocalAddr
net.(*dialResult·1).Read
net.(*dialResult·1).RemoteAddr
net.(*dialResult·1).SetDeadline
net.(*dialResult·1).SetReadDeadline
net.(*dialResult·1).SetWriteDeadline
net.(*dialResult·1).Write
net.(*dialResult·1).Error
net.dialResult·1.Close
net.dialResult·1.LocalAddr
net.dialResult·1.Read
net.dialResult·1.RemoteAddr
net.dialResult·1.SetDeadline
net.dialResult·1.SetReadDeadline
net.dialResult·1.SetWriteDeadline
net.dialResult·1.Write
net.dialResult·1.Error
type..hash.net.DNSError
type..eq.net.DNSError
type..hash.net.dnsRR_CNAME
type..eq.net.dnsRR_CNAME
type..hash.[1]net.dnsQuestion
type..eq.[1]net.dnsQuestion
type..hash.net.dnsRR_A
type..eq.net.dnsRR_A
type..hash.net.dnsRR_AAAA
type..eq.net.dnsRR_AAAA
type..hash.net.resolverConfig
type..eq.net.resolverConfig
net.(*racer·2).Error
net.racer·2.Error
type..hash.net.dnsRR_PTR
type..eq.net.dnsRR_PTR
type..hash.net.dnsRR_MX
type..eq.net.dnsRR_MX
type..hash.net.dnsRR_NS
type..eq.net.dnsRR_NS
type..hash.net.dnsRR_SOA
type..eq.net.dnsRR_SOA
type..hash.net.dnsRR_TXT
type..eq.net.dnsRR_TXT
type..hash.net.dnsRR_SRV
type..eq.net.dnsRR_SRV
net.(*IPConn).Read
net.(*IPConn).Write
net.(*IPConn).Close
net.(*IPConn).LocalAddr
net.(*IPConn).RemoteAddr
net.(*IPConn).SetDeadline
net.(*IPConn).SetReadDeadline
net.(*IPConn).SetWriteDeadline
net.(*UnixConn).Read
net.(*UnixConn).Write
net.(*UnixConn).Close
net.(*UnixConn).LocalAddr
net.(*UnixConn).RemoteAddr
net.(*UnixConn).SetDeadline
net.(*UnixConn).SetReadDeadline
net.(*UnixConn).SetWriteDeadline
type..hash.net.UnixListener
type..eq.net.UnixListener
net.(*ipv6ZoneCache).Lock
net.(*ipv6ZoneCache).Unlock
type..hash.net.ParseError
type..eq.net.ParseError
type..hash.struct { F uintptr; net.net string; net.portnum int }
type..eq.struct { F uintptr; net.net string; net.portnum int }
net.(*writerOnly).Write
net.writerOnly.Write
type..hash.net._Ctype_struct_addrinfo
type..eq.net._Ctype_struct_addrinfo
type..hash.net.portLookupResult
type..eq.net.portLookupResult
go.(*struct { sync.Mutex; net.byName map[string][]string; net.byAddr map[string][]string; net.expire time.Time; net.path string; net.mtime time.Time; net.size int64 }).Lock
go.(*struct { sync.Mutex; net.byName map[string][]string; net.byAddr map[string][]string; net.expire time.Time; net.path string; net.mtime time.Time; net.size int64 }).Unlock
type..hash.[9]net.policyTableEntry
type..eq.[9]net.policyTableEntry
mapping
encoding/binary.init
nongreedy
nongreedy
nongreedy
flags
flags
flags
flags
strflags
iflags
ifirst
flags
regexp/syntax.(*parser).removeLeadingRegexp
flags
flags
regexp/syntax.(*parser).parsePerlFlags
sawFlag
flags
flags
flags
flags#2
flags#3
flags#4
flags#5
flags#6
flag
flag
v·2.flag
v·2.flag
v·2.flag
v·2.flag#1
v·2.flag#2
v·2.flag#3
sv.flag
v·2.flag
database/sql.ctxDriverStmtExec
database/sql.ctxDriverStmtQuery
database/sql.(*NullInt64).Scan
database/sql.(*NullFloat64).Scan
database/sql.(*driverStmt).Close
database/sql.(*DB).connectionCleaner
database/sql.(*DB).maybeOpenNewConnections
database/sql.(*DB).connectionOpener
database/sql.(*DB).openNewConnection
database/sql.(*Rows).Scan
type..hash.database/sql.driverStmt
type..eq.database/sql.driverStmt
database/sql.(*driverStmt).Lock
database/sql.driverStmt.Lock
database/sql.(*driverStmt).Unlock
database/sql.driverStmt.Unlock
type..hash.struct { F uintptr; database/sql.si *database/sql/driver.Stmt; database/sql.err *error; database/sql.ctx context.Context; database/sql.dc *database/sql.driverConn; database/sql.query string }
type..eq.struct { F uintptr; database/sql.si *database/sql/driver.Stmt; database/sql.err *error; database/sql.ctx context.Context; database/sql.dc *database/sql.driverConn; database/sql.query string }
math/big.(*Int).binaryGCD
math/big.(*Int).scan
math/big.scanSign
math/big.nat.scan
go.(*struct { sync.Mutex; math/big.table [64]math/big.divisor }).Lock
go.(*struct { sync.Mutex; math/big.table [64]math/big.divisor }).Unlock
internal/syscall/unix.GetRandom
flags
crypto/rand.init.1
crypto/rand.unixIsEAGAIN
crypto/rand.init.2
crypto/rand.pickStrategy
crypto/rand.getRandomLinux
crypto/rand.init.3
crypto/rand.(*devReader).Read
crypto/rand.hideAgainReader.Read
crypto/rand.init
type..hash.crypto/rand.devReader
type..eq.crypto/rand.devReader
crypto/rand.(*hideAgainReader).Read
rand
crypto/rsa.nonZeroRandomBytes
rand
v.flag
crypto/x509/pkix.(*Name).FillFromRDNSequence
rdns
rand
crypto/elliptic.p256Curve.CombinedMult
p256SubInternal
crypto/elliptic.(*p256Curve).CombinedMult
crypto/x509.systemRootsPool
crypto/x509.initSystemRoots
crypto/x509.loadSystemRoots
firstErr.itab
firstErr.data
crypto/x509.HostnameError.Error
crypto/x509.SystemRootsError.Error
crypto/x509.matchHostnames
hostParts.len
hostParts.ptr
host
crypto/x509.(*Certificate).VerifyHostname
crypto/x509.checkChainForKeyUsage
dnsNames
type..hash.crypto/x509.HostnameError
type..eq.crypto/x509.HostnameError
crypto/x509.(*HostnameError).Error
crypto/x509.(*SystemRootsError).Error
vendor/golang_org/x/crypto/curve25519.ladderstep
clientRandom
crypto/tls.(*Conn).LocalAddr
localMAC.len
localMAC.cap
localMAC.ptr
msg.type
msg.data
msg.type
msg.data
keyAgreement.itab
keyAgreement.data
certMsg
crypto/tls.(*clientHandshakeState).processServerHello
msg.type
msg.data
sessionTicketMsg
msg.type
msg.data
crypto/tls.hostnameInSNI
host.len
host.ptr
crypto/tls.(*clientHelloMsg).marshal
crypto/tls.(*clientHelloMsg).unmarshal
crypto/tls.(*serverHelloMsg).marshal
crypto/tls.(*serverHelloMsg).unmarshal
crypto/tls.(*certificateMsg).marshal
crypto/tls.(*certificateMsg).unmarshal
crypto/tls.(*serverKeyExchangeMsg).marshal
crypto/tls.(*serverKeyExchangeMsg).unmarshal
crypto/tls.(*certificateStatusMsg).marshal
crypto/tls.(*certificateStatusMsg).unmarshal
crypto/tls.(*serverHelloDoneMsg).marshal
crypto/tls.(*serverHelloDoneMsg).unmarshal
crypto/tls.(*clientKeyExchangeMsg).marshal
crypto/tls.(*clientKeyExchangeMsg).unmarshal
crypto/tls.(*finishedMsg).marshal
crypto/tls.(*finishedMsg).unmarshal
crypto/tls.(*nextProtoMsg).marshal
crypto/tls.(*nextProtoMsg).unmarshal
crypto/tls.(*certificateRequestMsg).marshal
crypto/tls.(*certificateRequestMsg).unmarshal
crypto/tls.(*certificateVerifyMsg).marshal
crypto/tls.(*certificateVerifyMsg).unmarshal
crypto/tls.(*newSessionTicketMsg).marshal
crypto/tls.(*newSessionTicketMsg).unmarshal
crypto/tls.(*helloRequestMsg).marshal
crypto/tls.(*helloRequestMsg).unmarshal
msg.type
msg.data
msg.type
msg.data
keyAgreement.itab
keyAgreement.data
certMsg
msg.type
msg.type#7
msg.data
msg.data#9
crypto/tls.(*serverHandshakeState).processCertsFromClient
crypto/tls.rsaKeyAgreement.generateServerKeyExchange
crypto/tls.rsaKeyAgreement.processClientKeyExchange
crypto/tls.rsaKeyAgreement.processServerKeyExchange
crypto/tls.rsaKeyAgreement.generateClientKeyExchange
crypto/tls.(*ecdheKeyAgreement).generateServerKeyExchange
crypto/tls.(*ecdheKeyAgreement).processClientKeyExchange
crypto/tls.(*ecdheKeyAgreement).processServerKeyExchange
crypto/tls.(*ecdheKeyAgreement).generateClientKeyExchange
clientRandom
serverRandom
clientRandom
serverRandom
crypto/tls.(*rsaKeyAgreement).generateServerKeyExchange
crypto/tls.(*rsaKeyAgreement).processClientKeyExchange
crypto/tls.(*rsaKeyAgreement).processServerKeyExchange
crypto/tls.(*rsaKeyAgreement).generateClientKeyExchange
net/url.EscapeError.Error
net/url.InvalidHostError.Error
net/url.shouldEscape
net/url.QueryUnescape
net/url.unescape
net/url.init
net/url.(*EscapeError).Error
net/url.(*InvalidHostError).Error
flag
github.com/go-sql-driver/mysql.(*mysqlConn).getSystemVar
clientFlags
github.com/go-sql-driver/mysql.(*binaryRows).readRow
github.com/go-sql-driver/mysql.(*binaryRows).NextResultSet
github.com/go-sql-driver/mysql.(*binaryRows).Next
v·2.flag
github.com/go-sql-driver/mysql.(*NullTime).Scan
github.com/go-sql-driver/mysql.parseBinaryDateTime
github.com/go-sql-driver/mysql.formatBinaryDateTime
github.com/go-sql-driver/mysql.cloneTLSConfig
github.com/go-sql-driver/mysql.(*binaryRows).Columns
github.com/go-sql-driver/mysql.(*binaryRows).Close
github.com/go-sql-driver/mysql.(*binaryRows).HasNextResultSet
userInfo.maxBots
maxbots
max_bots_str.len
max_bots
botCata.len
max_bots_str.ptr
botCata.ptr
attack
userInfo.maxBots
maxbots
attack
main.NewAttack
netmask
flagInfo.flagID
flagID
validFlags.len
validFlags.ptr
flagSplit.ptr
main.(*Attack).Build
netmask
main.(*Bot).Handle
main.(*Bot).QueueBuf
max_bots
main.(*Database).ContainsWhitelistedTargets
&netmask
attack
main.(*Database).CanLaunchAttack
maxBots
BotCount
type..hash.main.Bot
type..eq.main.Bot
type..hash.main.FlagInfo
type..eq.main.FlagInfo
tflag
\n\vruntime.tflag
struct { runtime.enabled bool; runtime.pad [3]uint8; runtime.needed bool; runtime.cgo bool; runtime.alignme uint64 }
sync.Mutex
sync.Mutex
sync.Mutex
[]time.zoneTrans
time.zoneTrans
time.zoneTrans
map[*database/sql.driverStmt]bool
*database/sql.driverStmt
database/sql.driverStmt
sync.Locker
database/sql.driverStmt
sync.Locker
sync.Locker
map[int]*main.Bot
*main.Bot
main.Bot
main.Bot
net.Conn
net.Conn
\rchan *main.Bot
\rchan *main.AttackSend
*main.AttackSend
main.AttackSend
botCata
main.AttackSend
*sync.Mutex
map[string]main.AttackInfo
main.AttackInfo
attackID
attackFlags
attackDescription
main.AttackInfo
map[string]main.FlagInfo
main.FlagInfo
flagID
flagDescription
main.FlagInfo
maxBots
struct { runtime.allocfreetrace int32; runtime.cgocheck int32; runtime.efence int32; runtime.gccheckmark int32; runtime.gcpacertrace int32; runtime.gcshrinkstackoff int32; runtime.gcstackbarrieroff int32; runtime.gcstackbarrierall int32; runtime.gcrescanstacks int32; runtime.gcstoptheworld int32; runtime.gctrace int32; runtime.invalidptr int32; runtime.sbrk int32; runtime.scavenge int32; runtime.scheddetail int32; runtime.schedtrace int32; runtime.wbshadow int32 }
gcrescanstacks
first
first
heap_scan
pidle
npidle
procresizetime
preemptscan
gcscandone
gcscanvalid
gcRescan
procid
fastrand
fflag
local_scan
local_tinyallocs
local_nlookup
local_largefree
local_nlargefree
local_nsmallfree
nprocyield
first
scanWork
struct { runtime.lock runtime.mutex; runtime.lockOwner *runtime.g; runtime.enabled bool; runtime.shutdown bool; runtime.headerWritten bool; runtime.footerWritten bool; runtime.shutdownSema uint32; runtime.seqStart uint64; runtime.ticksStart int64; runtime.ticksEnd int64; runtime.timeStart int64; runtime.timeEnd int64; runtime.seqGC uint64; runtime.reading runtime.traceBufPtr; runtime.empty runtime.traceBufPtr; runtime.fullHead runtime.traceBufPtr; runtime.fullTail runtime.traceBufPtr; runtime.reader runtime.guintptr; runtime.stackTab runtime.traceStackTable; runtime.strings map[string]uint64; runtime.stringSeq uint64; runtime.markWorkerLabels [3]uint64; runtime.bufLock runtime.mutex; runtime.buf runtime.traceBufPtr }
runtime.gcControllerState
scanWork
bgScanCredit
runtime.gcControllerState
struct { runtime.full uint64; runtime.empty uint64; runtime.pad0 [64]uint8; runtime.bytesMarked uint64; runtime.markrootNext uint32; runtime.markrootJobs uint32; runtime.nproc uint32; runtime.tstart int64; runtime.nwait uint32; runtime.ndone uint32; runtime.alldone runtime.note; runtime.helperDrainBlock bool; runtime.nFlushCacheRoots int; runtime.nDataRoots int; runtime.nBSSRoots int; runtime.nSpanRoots int; runtime.nStackRoots int; runtime.nRescanRoots int; runtime.markrootDone bool; runtime.startSema uint32; runtime.markDoneSema uint32; runtime.bgMarkReady runtime.note; runtime.bgMarkDone uint32; runtime.mode runtime.gcMode; runtime.totaltime int64; runtime.initialHeapLive uint64; runtime.assistQueue struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr; runtime.tail runtime.guintptr }; runtime.rescan struct { runtime.lock runtime.mutex; runtime.list []runtime.guintptr }; runtime.stwprocs int32; runtime.maxprocs int32; runtime.tSweepTerm int64; runtime.tMark int64; runtime.tMarkTerm int64; runtime.tEnd int64; runtime.pauseNS int64; runtime.pauseStart int64; runtime.heap0 uint64; runtime.heap1 uint64; runtime.heap2 uint64; runtime.heapGoal uint64 }
nproc
nRescanRoots
rescan
stwprocs
maxprocs
struct { runtime.lock runtime.mutex; runtime.free *runtime.gcBits; runtime.next *runtime.gcBits; runtime.current *runtime.gcBits; runtime.previous *runtime.gcBits }
first
flags
runtime.randomOrder
runtime.randomOrder
\f[256]struct { runtime.schedtick uint32; runtime.schedwhen int64; runtime.syscalltick uint32; runtime.syscallwhen int64 }
struct { runtime.schedtick uint32; runtime.schedwhen int64; runtime.syscalltick uint32; runtime.syscallwhen int64 }
struct { runtime.lock runtime.mutex; runtime.next int32; runtime.m map[int32]unsafe.Pointer; runtime.minv map[unsafe.Pointer]int32 }
struct { runtime.note runtime.note; runtime.mask [3]uint32; runtime.wanted [3]uint32; runtime.ignored [3]uint32; runtime.recv [3]uint32; runtime.state uint32; runtime.inuse bool }
struct { runtime.lock runtime.mutex; runtime.gp *runtime.g; runtime.created bool; runtime.sleeping bool; runtime.rescheduling bool; runtime.waitnote runtime.note; runtime.t []*runtime.timer }
sleeping
runtime.errorString
sync.Pool
local
localSize
sync.Pool
sync.noCopy
sync.noCopy
reflect.flag
tflag
\vreflect.tflag
\vreflect.flag
net.policyTable
net.policyTable
net.policyTableEntry
net.policyTableEntry
*net.IPNet
net.IPNet
net.IPNet
net.IP
net.IP
net.IPMask
net.IPMask
net.ipAttr
net.ipAttr
\vnet.scope
sync.Once
sync.Once
*net.conf
net.conf
forceCgoLookupHost
netGo
netCgo
hasMDNSAllow
dnsDebugLevel
net.conf
*net.nssConf
net.nssConf
net.nssConf
map[string][]net.nssSource
[]net.nssSource
net.nssSource
net.nssSource
[]net.nssCriterion
net.nssCriterion
net.nssCriterion
*net.dnsConfig
net.dnsConfig
net.dnsConfig
*net.Resolver
net.Resolver
net.Resolver
func() net.dnsDialer
func() net.dnsDialer
net.dnsDialer
net.dnsDialer
*net.dnsDialer
\f[1]net.dnsQuestion
net.dnsQuestion
net.dnsQuestion
net.resolverConfig
dnsConfig
net.resolverConfig
sync.RWMutex
sync.RWMutex
map[net.hostLookupOrder]string
\vnet.hostLookupOrder
map[int]func() net.dnsRR
func() net.dnsRR
func() net.dnsRR
net.dnsRR
net.dnsRR
*net.dnsRR
struct { sync.Mutex; net.byName map[string][]string; net.byAddr map[string][]string; net.expire time.Time; net.path string; net.mtime time.Time; net.size int64 }
sync.Mutex
net.ipv6ZoneCache
sync.RWMutex
net.ipv6ZoneCache
net.IPAddr
net.IPAddr
\f[2]struct { net.laddr net.TCPAddr; net.value int }
struct { net.laddr net.TCPAddr; net.value int }
net.TCPAddr
net.TCPAddr
sync.WaitGroup
sync.WaitGroup
func(context.Context, string, *net.TCPAddr, *net.TCPAddr) (*net.TCPConn, error)
func(context.Context, string, *net.TCPAddr, *net.TCPAddr) (*net.TCPConn, error)
*net.TCPAddr
*net.TCPConn
net.TCPConn
net.conn
net.TCPConn
net.conn
net.conn
*net.netFD
net.netFD
isConnected
net.netFD
net.fdMutex
net.fdMutex
net.Addr
net.Addr
net.pollDesc
net.pollDesc
**net.TCPConn
func(context.Context, func(context.Context, string) ([]net.IPAddr, error), string) ([]net.IPAddr, error)
func(context.Context, func(context.Context, string) ([]net.IPAddr, error), string) ([]net.IPAddr, error)
func(context.Context, string) ([]net.IPAddr, error)
func(context.Context, string) ([]net.IPAddr, error)
[]net.IPAddr
*[]net.IPAddr
\f[9]net.policyTableEntry
\f[5]net.hostLookupOrder
net.timeoutError
net.timeoutError
\f[1]time.zoneTrans
*math/rand.Rand
math/rand.Rand
math/rand.Rand
math/rand.Source
math/rand.Source
math/rand.Source64
math/rand.Source64
[]*sync.Pool
*sync.Pool
flags
\vgithub.com/go-sql-driver/mysql.fieldFlag
*net.Conn
Rand
DNSNames
PermittedDNSDomainsCritical
PermittedDNSDomains
Locality
[]net.IP
struct { sync.RWMutex; reflect.m map[*reflect.rtype][]reflect.method }
sync.RWMutex
struct { sync.RWMutex; reflect.m map[*reflect.rtype]*reflect.ptrType }
sync.RWMutex
struct { sync.RWMutex; reflect.m map[uint32][]*reflect.rtype }
sync.RWMutex
struct { sync.RWMutex; reflect.m map[reflect.layoutKey]reflect.layoutType }
sync.RWMutex
syscall.SysProcAttr
Cloneflags
Unshareflags
UidMappings
GidMappings
GidMappingsEnableSetgroups
syscall.SysProcAttr
[]syscall.SysProcIDMap
syscall.SysProcIDMap
HostID
syscall.SysProcIDMap
syscall.ProcAttr
syscall.ProcAttr
*syscall.SysProcAttr
sync.Mutex
flags
func(uint16) crypto/tls.keyAgreement
func(uint16) crypto/tls.keyAgreement
crypto/tls.keyAgreement
crypto/tls.keyAgreement
*crypto/tls.keyAgreement
flag
[]struct { crypto/x509.algo crypto/x509.SignatureAlgorithm; crypto/x509.oid encoding/asn1.ObjectIdentifier; crypto/x509.pubKeyAlgo crypto/x509.PublicKeyAlgorithm; crypto/x509.hash crypto.Hash }
struct { crypto/x509.algo crypto/x509.SignatureAlgorithm; crypto/x509.oid encoding/asn1.ObjectIdentifier; crypto/x509.pubKeyAlgo crypto/x509.PublicKeyAlgorithm; crypto/x509.hash crypto.Hash }
[]struct { crypto/x509.extKeyUsage crypto/x509.ExtKeyUsage; crypto/x509.oid encoding/asn1.ObjectIdentifier }
struct { crypto/x509.extKeyUsage crypto/x509.ExtKeyUsage; crypto/x509.oid encoding/asn1.ObjectIdentifier }
\f[16]struct { crypto/x509.algo crypto/x509.SignatureAlgorithm; crypto/x509.oid encoding/asn1.ObjectIdentifier; crypto/x509.pubKeyAlgo crypto/x509.PublicKeyAlgorithm; crypto/x509.hash crypto.Hash }
\f[12]struct { crypto/x509.extKeyUsage crypto/x509.ExtKeyUsage; crypto/x509.oid encoding/asn1.ObjectIdentifier }
struct { sync.Mutex; math/big.table [64]math/big.divisor }
sync.Mutex
*sync/atomic.Value
sync/atomic.Value
sync/atomic.Value
sync/atomic.noCopy
sync/atomic.noCopy
struct { F uintptr; runtime.ret *uintptr; runtime.addr unsafe.Pointer; runtime.n uintptr; runtime.prot int32; runtime.flags int32; runtime.fd int32; runtime.off uint32 }
flags
struct { F uintptr; runtime.ret *int32; runtime.sig *uintptr; runtime.new *runtime.sigactiont; runtime.old *runtime.sigactiont }
sa_flags
struct { F uintptr; runtime.typ *runtime._type; runtime.src unsafe.Pointer; runtime.off uintptr; runtime.size uintptr }
flags
struct { F uintptr; runtime.p *unsafe.Pointer; runtime.size uintptr; runtime.align uintptr; runtime.sysStat *uint64 }
struct { F uintptr; runtime.srcp *unsafe.Pointer; runtime.dstp *unsafe.Pointer; runtime.n int; runtime.typ **runtime._type }
struct { F uintptr; runtime.e *runtime.eface; runtime.f *runtime.eface; runtime.nret uintptr; runtime.fint *runtime._type; runtime.ot *runtime.ptrtype }
*runtime.gcControllerState
struct { F uintptr; runtime.gp *runtime.g; runtime.scanWork int64 }
scanWork
targetpc
struct { F uintptr; runtime.cache *runtime.pcvalueCache; runtime.gcw *runtime.gcWork; runtime.nextBarrier *uintptr; runtime.n *int; runtime.gp *runtime.g; runtime.barrierOffset *uintptr; runtime.sp uintptr }
\vruntime.gcDrainFlags
struct { F uintptr; runtime.s **runtime.mspan; runtime.h *runtime.mheap; runtime.npage uintptr; runtime.sizeclass int32; runtime.large bool }
HeapIdle
runtime.randomEnum
runtime.randomEnum
struct { F uintptr; runtime.sp1 uintptr; runtime.sp2 uintptr; runtime.sp3 uintptr; runtime._g_ *runtime.g }
struct { F uintptr; runtime.fn **runtime.funcval; runtime.argp unsafe.Pointer; runtime.siz *int32; runtime.pc uintptr }
*runtime.randomOrder
\vruntime.semaProfileFlags
ss_flags
struct { F uintptr; runtime.n *int; runtime.pc uintptr; runtime.sp uintptr; runtime.gp *runtime.g; runtime.skip *int; runtime.pcbuf []uintptr }
flags
vd_flags
e_flags
e_shstrndx
*runtime.errorString
*struct { F uintptr; runtime.s **runtime.mspan; runtime.h *runtime.mheap; runtime.npage uintptr; runtime.sizeclass int32; runtime.large bool }
*struct { runtime.enabled bool; runtime.pad [3]uint8; runtime.needed bool; runtime.cgo bool; runtime.alignme uint64 }
*struct { runtime.schedtick uint32; runtime.schedwhen int64; runtime.syscalltick uint32; runtime.syscallwhen int64 }
*[256]struct { runtime.schedtick uint32; runtime.schedwhen int64; runtime.syscalltick uint32; runtime.syscallwhen int64 }
*struct { runtime.note runtime.note; runtime.mask [3]uint32; runtime.wanted [3]uint32; runtime.ignored [3]uint32; runtime.recv [3]uint32; runtime.state uint32; runtime.inuse bool }
*errors.errorString
errors.errorString
errors.errorString
*sync.notifyList
sync.notifyList
sync.notifyList
*sync.Cond
sync.Cond
sync.Cond
\vsync.copyChecker
*sync.copyChecker
*sync.Once
*sync.poolLocal
sync.poolLocal
sync.Mutex
sync.poolLocal
**sync.Pool
*sync.RWMutex
*sync.rlocker
sync.rlocker
sync.rlocker
*sync.WaitGroup
*syscall.ProcAttr
*syscall.SysProcIDMap
*syscall.NetlinkRouteRequest
syscall.NetlinkRouteRequest
syscall.NetlinkRouteRequest
syscall.NlMsghdr
Flags
syscall.NlMsghdr
syscall.RtGenmsg
syscall.RtGenmsg
*syscall.SockaddrNetlink
syscall.SockaddrNetlink
syscall.SockaddrNetlink
syscall.RawSockaddrNetlink
syscall.RawSockaddrNetlink
*syscall.NetlinkMessage
syscall.NetlinkMessage
syscall.NetlinkMessage
[]syscall.NetlinkMessage
*syscall.NetlinkRouteAttr
syscall.NetlinkRouteAttr
syscall.NetlinkRouteAttr
[]syscall.NetlinkRouteAttr
Msgsnd
Msgrcv
*syscall.SockaddrInet4
syscall.SockaddrInet4
syscall.SockaddrInet4
syscall.RawSockaddrInet4
syscall.RawSockaddrInet4
*syscall.SockaddrInet6
syscall.SockaddrInet6
syscall.SockaddrInet6
syscall.RawSockaddrInet6
syscall.RawSockaddrInet6
*time.zoneTrans
*[1]time.zoneTrans
*os.Process
os.Process
os.Process
*os.ProcAttr
os.ProcAttr
os.ProcAttr
*os.ProcessState
os.ProcessState
os.ProcessState
*struct { F uintptr; reflect.s *reflect.sliceHeader; reflect.size uintptr; reflect.typ *reflect.rtype; reflect.tmp unsafe.Pointer }
struct { F uintptr; reflect.s *reflect.sliceHeader; reflect.size uintptr; reflect.typ *reflect.rtype; reflect.tmp unsafe.Pointer }
\f[0]reflect.fieldScan
reflect.fieldScan
reflect.fieldScan
*reflect.fieldScan
\f[1]reflect.fieldScan
*struct { reflect.ityp *reflect.rtype; reflect.typ *reflect.rtype; reflect.link unsafe.Pointer; reflect.bad int32; reflect.unused int32; reflect.fun [100000]unsafe.Pointer }
struct { reflect.ityp *reflect.rtype; reflect.typ *reflect.rtype; reflect.link unsafe.Pointer; reflect.bad int32; reflect.unused int32; reflect.fun [100000]unsafe.Pointer }
*struct { sync.RWMutex; reflect.m map[*reflect.rtype][]reflect.method }
*struct { sync.RWMutex; reflect.m map[*reflect.rtype]*reflect.ptrType }
*struct { sync.RWMutex; reflect.m map[uint32][]*reflect.rtype }
*struct { sync.RWMutex; reflect.m map[reflect.layoutKey]reflect.layoutType }
fmt.fmtFlags
fmt.fmtFlags
fmt.fmtFlags
flags
noalg.struct { context.tcase uint16; context.ncase uint16; context.pollorder *uint8; context.lockorder *uint8; context.scase [2]struct { context.elem *uint8; context.chan *uint8; context.pc uintptr; context.kind uint16; context.so uint16; context.receivedp *uint8; context.releasetime uint64 }; context.lockorderarr [2]uint16; context.pollorderarr [2]uint16 }
noalg.struct { context.tcase uint16; context.ncase uint16; context.pollorder *uint8; context.lockorder *uint8; context.scase [2]struct { context.elem *uint8; context.chan *uint8; context.pc uintptr; context.kind uint16; context.so uint16; context.receivedp *uint8; context.releasetime uint64 }; context.lockorderarr [2]uint16; context.pollorderarr [2]uint16 }
\fnoalg.[2]struct { context.elem *uint8; context.chan *uint8; context.pc uintptr; context.kind uint16; context.so uint16; context.receivedp *uint8; context.releasetime uint64 }
noalg.[2]struct { context.elem *uint8; context.chan *uint8; context.pc uintptr; context.kind uint16; context.so uint16; context.receivedp *uint8; context.releasetime uint64 }
noalg.struct { context.elem *uint8; context.chan *uint8; context.pc uintptr; context.kind uint16; context.so uint16; context.receivedp *uint8; context.releasetime uint64 }
noalg.struct { context.elem *uint8; context.chan *uint8; context.pc uintptr; context.kind uint16; context.so uint16; context.receivedp *uint8; context.releasetime uint64 }
*math/rand.rngSource
math/rand.rngSource
math/rand.rngSource
struct { F uintptr; R *math/rand.Rand }
*math/rand.lockedSource
math/rand.lockedSource
math/rand.lockedSource
struct { F uintptr; R math/rand.Source64 }
*struct { F uintptr; R math/rand.Source64 }
*net.ipAttr
*net.byRFC6724
net.byRFC6724
net.byRFC6724
[]net.ipAttr
*net.IPAddr
*net.IP
*net.UDPConn
net.UDPConn
net.conn
net.UDPConn
*net.UDPAddr
net.UDPAddr
net.UDPAddr
net.byMaskLength
net.byMaskLength
*net.policyTableEntry
*net.nssSource
struct { F uintptr; net.debugLevel *int; net.dnsMode *string }
dnsMode
*net.Dialer
net.Dialer
LocalAddr
net.Dialer
net.UnknownNetworkError
*net.UnixAddr
net.UnixAddr
net.UnixAddr
*net.Addr
*net.AddrError
net.AddrError
net.AddrError
*[1]net.Addr
\f[1]net.Addr
net.addrList
net.addrList
internal/nettrace.TraceKey
internal/nettrace.TraceKey
*internal/nettrace.Trace
internal/nettrace.Trace
DNSStart
DNSDone
ConnectStart
ConnectDone
internal/nettrace.Trace
*net.dialParam
net.dialParam
net.Dialer
network
net.dialParam
*net.OpError
net.OpError
net.OpError
\rchan net.dialResult·1
net.dialResult·1
net.Conn
net.dialResult·1
*struct { F uintptr; net.primaries net.addrList; net.fallbacks net.addrList; net.dp *net.dialParam; net.results chan net.dialResult·1; net.returned chan struct {} }
struct { F uintptr; net.primaries net.addrList; net.fallbacks net.addrList; net.dp *net.dialParam; net.results chan net.dialResult·1; net.returned chan struct {} }
noalg.struct { net.tcase uint16; net.ncase uint16; net.pollorder *uint8; net.lockorder *uint8; net.scase [2]struct { net.elem *uint8; net.chan *uint8; net.pc uintptr; net.kind uint16; net.so uint16; net.receivedp *uint8; net.releasetime uint64 }; net.lockorderarr [2]uint16; net.pollorderarr [2]uint16 }
noalg.struct { net.tcase uint16; net.ncase uint16; net.pollorder *uint8; net.lockorder *uint8; net.scase [2]struct { net.elem *uint8; net.chan *uint8; net.pc uintptr; net.kind uint16; net.so uint16; net.receivedp *uint8; net.releasetime uint64 }; net.lockorderarr [2]uint16; net.pollorderarr [2]uint16 }
\fnoalg.[2]struct { net.elem *uint8; net.chan *uint8; net.pc uintptr; net.kind uint16; net.so uint16; net.receivedp *uint8; net.releasetime uint64 }
noalg.[2]struct { net.elem *uint8; net.chan *uint8; net.pc uintptr; net.kind uint16; net.so uint16; net.receivedp *uint8; net.releasetime uint64 }
noalg.struct { net.elem *uint8; net.chan *uint8; net.pc uintptr; net.kind uint16; net.so uint16; net.receivedp *uint8; net.releasetime uint64 }
noalg.struct { net.elem *uint8; net.chan *uint8; net.pc uintptr; net.kind uint16; net.so uint16; net.receivedp *uint8; net.releasetime uint64 }
net.Listener
net.Listener
*net.dnsRR_Header
net.dnsRR_Header
net.dnsRR_Header
*net.DNSError
net.DNSError
net.DNSError
[]net.dnsRR
*net.dnsMsg
net.dnsMsg
net.dnsMsgHdr
net.dnsMsg
net.dnsMsgHdr
net.dnsMsgHdr
[]net.dnsQuestion
net.dnsConn
net.dnsConn
*[1]net.dnsQuestion
*net.dnsRR_AAAA
net.dnsRR_AAAA
net.dnsRR_AAAA
**net.dnsConfig
*net.resolverConfig
struct { F uintptr; R *net.resolverConfig }
\rchan net.racer·2
net.racer·2
net.racer·2
*net.file
net.file
net.file
*net.dnsHeader
net.dnsHeader
net.dnsHeader
*net.dnsQuestion
*net.dnsRR_CNAME
net.dnsRR_CNAME
net.dnsRR_CNAME
*net.dnsRR_MX
net.dnsRR_MX
net.dnsRR_MX
*net.dnsRR_NS
net.dnsRR_NS
net.dnsRR_NS
*net.dnsRR_PTR
net.dnsRR_PTR
net.dnsRR_PTR
*net.dnsRR_SOA
net.dnsRR_SOA
net.dnsRR_SOA
*net.dnsRR_TXT
net.dnsRR_TXT
net.dnsRR_TXT
*net.dnsRR_SRV
net.dnsRR_SRV
Target
net.dnsRR_SRV
*net.dnsRR_A
net.dnsRR_A
net.dnsRR_A
*struct { F uintptr; net.off *int; net.msg []uint8; net.ok *bool }
struct { F uintptr; net.off *int; net.msg []uint8; net.ok *bool }
net.dnsStruct
net.dnsStruct
*struct { F uintptr; net.i *int; net.s *string }
struct { F uintptr; net.i *int; net.s *string }
*net.dnsMsgHdr
*[]net.dnsRR
*net.fdMutex
*net.pollDesc
\vnet.Flags
*net.Interface
net.Interface
Flags
net.Interface
net.HardwareAddr
net.HardwareAddr
[]net.Interface
*net.ipv6ZoneCache
*syscall.IfInfomsg
syscall.IfInfomsg
Flags
syscall.IfInfomsg
*net.ParseError
net.ParseError
net.ParseError
net.sockaddr
net.sockaddr
*net.IPConn
net.IPConn
net.conn
net.IPConn
func(net.Addr) bool
func(net.Addr) bool
func(net.IPAddr) net.Addr
func(net.IPAddr) net.Addr
func(net.IPAddr) bool
func(net.IPAddr) bool
*struct { F uintptr; net.net string; net.portnum int }
struct { F uintptr; net.net string; net.portnum int }
\f[1]net.IPAddr
internal/nettrace.LookupIPAltResolverKey
internal/nettrace.LookupIPAltResolverKey
*struct { F uintptr; net.ctx context.Context; net.resolverFunc func(context.Context, string) ([]net.IPAddr, error); net.host string }
struct { F uintptr; net.ctx context.Context; net.resolverFunc func(context.Context, string) ([]net.IPAddr, error); net.host string }
host
*struct { F uintptr; R *net.Resolver }
struct { F uintptr; R *net.Resolver }
*[1]net.IPAddr
*net.conn
*net.timeoutError
net.writerOnly
net.writerOnly
*net.nssCriterion
struct { F uintptr; net.conf *net.nssConf }
struct { F uintptr; net.c *[]net.nssCriterion }
*[]net.nssCriterion
func(syscall.Sockaddr) net.Addr
func(syscall.Sockaddr) net.Addr
*net.TCPListener
net.TCPListener
net.TCPListener
*net.UnixListener
net.UnixListener
net.UnixListener
*net.UnixConn
net.UnixConn
net.conn
net.UnixConn
struct { F uintptr; net.ln *net.UnixListener }
**net._Ctype_char
*net._Ctype_char
\vnet._Ctype_char
\vnet._Ctype_int
**net._Ctype_struct_addrinfo
*net._Ctype_struct_addrinfo
net._Ctype_struct_addrinfo
ai_flags
net._Ctype_struct_addrinfo
\vnet._Ctype_socklen_t
*net._Ctype_struct_sockaddr
net._Ctype_struct_sockaddr
net._Ctype_struct_sockaddr
\vnet._Ctype_sa_family_t
\t\f[14]net._Ctype_char
\fnet._Ctype_void
net._Ctype_void
*net._Ctype_int
\vnet.addrinfoErrno
\rchan net.portLookupResult
net.portLookupResult
net.portLookupResult
\rchan<- net.portLookupResult
net.ipLookupResult
net.ipLookupResult
\rchan<- net.ipLookupResult
\rchan net.ipLookupResult
*net.hostLookupOrder
*net.IPMask
*net.byMaskLength
*net.UnknownNetworkError
*net.Flags
*net.HardwareAddr
*net.addrinfoErrno
*net.dialResult·1
*net.racer·2
*net.writerOnly
*net.portLookupResult
*struct { sync.Mutex; net.byName map[string][]string; net.byAddr map[string][]string; net.expire time.Time; net.path string; net.mtime time.Time; net.size int64 }
*[9]net.policyTableEntry
Flags
\b\vregexp/syntax.Flags
flags
struct { F uintptr; regexp.p **regexp.onePassProg; regexp.visitQueue *regexp.queueOnePass; regexp.check *func(uint32, map[uint32]bool) bool; regexp.onePassRunes [][]int32; regexp.instQueue *regexp.queueOnePass }
SysProcAttr
Process
ProcessState
closeAfterStart
*os.ProcessState
noalg.struct { os/exec.tcase uint16; os/exec.ncase uint16; os/exec.pollorder *uint8; os/exec.lockorder *uint8; os/exec.scase [2]struct { os/exec.elem *uint8; os/exec.chan *uint8; os/exec.pc uintptr; os/exec.kind uint16; os/exec.so uint16; os/exec.receivedp *uint8; os/exec.releasetime uint64 }; os/exec.lockorderarr [2]uint16; os/exec.pollorderarr [2]uint16 }
noalg.struct { os/exec.tcase uint16; os/exec.ncase uint16; os/exec.pollorder *uint8; os/exec.lockorder *uint8; os/exec.scase [2]struct { os/exec.elem *uint8; os/exec.chan *uint8; os/exec.pc uintptr; os/exec.kind uint16; os/exec.so uint16; os/exec.receivedp *uint8; os/exec.releasetime uint64 }; os/exec.lockorderarr [2]uint16; os/exec.pollorderarr [2]uint16 }
\fnoalg.[2]struct { os/exec.elem *uint8; os/exec.chan *uint8; os/exec.pc uintptr; os/exec.kind uint16; os/exec.so uint16; os/exec.receivedp *uint8; os/exec.releasetime uint64 }
noalg.[2]struct { os/exec.elem *uint8; os/exec.chan *uint8; os/exec.pc uintptr; os/exec.kind uint16; os/exec.so uint16; os/exec.receivedp *uint8; os/exec.releasetime uint64 }
noalg.struct { os/exec.elem *uint8; os/exec.chan *uint8; os/exec.pc uintptr; os/exec.kind uint16; os/exec.so uint16; os/exec.receivedp *uint8; os/exec.releasetime uint64 }
noalg.struct { os/exec.elem *uint8; os/exec.chan *uint8; os/exec.pc uintptr; os/exec.kind uint16; os/exec.so uint16; os/exec.receivedp *uint8; os/exec.releasetime uint64 }
**database/sql.driverStmt
[]*database/sql.driverStmt
struct { F uintptr; database/sql.openStmt *[]*database/sql.driverStmt; database/sql.dc *database/sql.driverConn }
*[]*database/sql.driverStmt
flags
noalg.struct { database/sql.tcase uint16; database/sql.ncase uint16; database/sql.pollorder *uint8; database/sql.lockorder *uint8; database/sql.scase [2]struct { database/sql.elem *uint8; database/sql.chan *uint8; database/sql.pc uintptr; database/sql.kind uint16; database/sql.so uint16; database/sql.receivedp *uint8; database/sql.releasetime uint64 }; database/sql.lockorderarr [2]uint16; database/sql.pollorderarr [2]uint16 }
noalg.struct { database/sql.tcase uint16; database/sql.ncase uint16; database/sql.pollorder *uint8; database/sql.lockorder *uint8; database/sql.scase [2]struct { database/sql.elem *uint8; database/sql.chan *uint8; database/sql.pc uintptr; database/sql.kind uint16; database/sql.so uint16; database/sql.receivedp *uint8; database/sql.releasetime uint64 }; database/sql.lockorderarr [2]uint16; database/sql.pollorderarr [2]uint16 }
\fnoalg.[2]struct { database/sql.elem *uint8; database/sql.chan *uint8; database/sql.pc uintptr; database/sql.kind uint16; database/sql.so uint16; database/sql.receivedp *uint8; database/sql.releasetime uint64 }
noalg.[2]struct { database/sql.elem *uint8; database/sql.chan *uint8; database/sql.pc uintptr; database/sql.kind uint16; database/sql.so uint16; database/sql.receivedp *uint8; database/sql.releasetime uint64 }
noalg.struct { database/sql.elem *uint8; database/sql.chan *uint8; database/sql.pc uintptr; database/sql.kind uint16; database/sql.so uint16; database/sql.receivedp *uint8; database/sql.releasetime uint64 }
noalg.struct { database/sql.elem *uint8; database/sql.chan *uint8; database/sql.pc uintptr; database/sql.kind uint16; database/sql.so uint16; database/sql.receivedp *uint8; database/sql.releasetime uint64 }
sync.Locker
struct { F uintptr; database/sql.si *database/sql/driver.Stmt; database/sql.err *error; database/sql.ctx context.Context; database/sql.dc *database/sql.driverConn; database/sql.query string }
struct { F uintptr; database/sql.resi *database/sql/driver.Result; database/sql.err *error; database/sql.ctx context.Context; database/sql.execer database/sql/driver.Execer; database/sql.query string; database/sql.dargs []database/sql/driver.NamedValue }
struct { F uintptr; database/sql.rowsi *database/sql/driver.Rows; database/sql.err *error; database/sql.ctx context.Context; database/sql.queryer database/sql/driver.Queryer; database/sql.query string; database/sql.dargs []database/sql/driver.NamedValue }
struct { F uintptr; database/sql.want *int; database/sql.ds *database/sql.driverStmt }
struct { F uintptr; database/sql.doClose *bool; database/sql.ok *bool; database/sql.rs *database/sql.Rows }
noalg.map.iter[*database/sql.driverStmt]bool
noalg.map.iter[*database/sql.driverStmt]bool
*map.hdr[*database/sql.driverStmt]bool
noalg.map.hdr[*database/sql.driverStmt]bool
flags
noalg.map.hdr[*database/sql.driverStmt]bool
*map.bucket[*database/sql.driverStmt]bool
noalg.map.bucket[*database/sql.driverStmt]bool
noalg.map.bucket[*database/sql.driverStmt]bool
\fnoalg.[8]*database/sql.driverStmt
noalg.[8]*database/sql.driverStmt
*struct { F uintptr; database/sql.si *database/sql/driver.Stmt; database/sql.err *error; database/sql.ctx context.Context; database/sql.dc *database/sql.driverConn; database/sql.query string }
io.ByteScanner
io.ByteScanner
*struct { sync.Mutex; math/big.table [64]math/big.divisor }
\vinternal/syscall/unix.GetRandomFlag
*crypto/rand.devReader
crypto/rand.devReader
crypto/rand.devReader
crypto/rand.hideAgainReader
crypto/rand.hideAgainReader
*crypto/rand.hideAgainReader
\vencoding/asn1.Flag
*crypto/x509/pkix.RDNSequence
crypto/x509/pkix.RDNSequence
crypto/x509/pkix.RDNSequence
crypto/x509.HostnameError
Host
crypto/x509.HostnameError
crypto/x509.SystemRootsError
crypto/x509.SystemRootsError
DNSName
flags
*struct { crypto/x509.algo crypto/x509.SignatureAlgorithm; crypto/x509.oid encoding/asn1.ObjectIdentifier; crypto/x509.pubKeyAlgo crypto/x509.PublicKeyAlgorithm; crypto/x509.hash crypto.Hash }
*struct { crypto/x509.extKeyUsage crypto/x509.ExtKeyUsage; crypto/x509.oid encoding/asn1.ObjectIdentifier }
*crypto/x509.HostnameError
*crypto/x509.SystemRootsError
crypto/tls.rsaKeyAgreement
crypto/tls.rsaKeyAgreement
clientFinishedIsFirst
sync.Mutex
**sync.Cond
*crypto/tls.serverHelloMsg
crypto/tls.serverHelloMsg
random
crypto/tls.serverHelloMsg
*crypto/tls.clientHelloMsg
crypto/tls.clientHelloMsg
random
crypto/tls.clientHelloMsg
*crypto/tls.clientKeyExchangeMsg
crypto/tls.clientKeyExchangeMsg
crypto/tls.clientKeyExchangeMsg
*crypto/tls.serverKeyExchangeMsg
crypto/tls.serverKeyExchangeMsg
crypto/tls.serverKeyExchangeMsg
*crypto/tls.serverHelloDoneMsg
crypto/tls.serverHelloDoneMsg
crypto/tls.serverHelloDoneMsg
*crypto/tls.certificateStatusMsg
crypto/tls.certificateStatusMsg
crypto/tls.certificateStatusMsg
*crypto/tls.certificateRequestMsg
crypto/tls.certificateRequestMsg
crypto/tls.certificateRequestMsg
*crypto/tls.certificateMsg
crypto/tls.certificateMsg
crypto/tls.certificateMsg
crypto/tls.certificateVerifyMsg
crypto/tls.certificateVerifyMsg
*crypto/tls.finishedMsg
crypto/tls.finishedMsg
crypto/tls.finishedMsg
*crypto/tls.newSessionTicketMsg
crypto/tls.newSessionTicketMsg
crypto/tls.newSessionTicketMsg
crypto/tls.nextProtoMsg
crypto/tls.nextProtoMsg
*crypto/tls.nextProtoMsg
*crypto/tls.certificateVerifyMsg
*crypto/tls.ecdheKeyAgreement
crypto/tls.ecdheKeyAgreement
crypto/tls.ecdheKeyAgreement
*crypto/tls.rsaKeyAgreement
net/url.EscapeError
net/url.InvalidHostError
\vnet/url.encoding
*net/url.EscapeError
*net/url.InvalidHostError
flags
netConn
flags
\vgithub.com/go-sql-driver/mysql.clientFlag
\n\vgithub.com/go-sql-driver/mysql.statusFlag
noalg.struct { github.com/go-sql-driver/mysql.tcase uint16; github.com/go-sql-driver/mysql.ncase uint16; github.com/go-sql-driver/mysql.pollorder *uint8; github.com/go-sql-driver/mysql.lockorder *uint8; github.com/go-sql-driver/mysql.scase [2]struct { github.com/go-sql-driver/mysql.elem *uint8; github.com/go-sql-driver/mysql.chan *uint8; github.com/go-sql-driver/mysql.pc uintptr; github.com/go-sql-driver/mysql.kind uint16; github.com/go-sql-driver/mysql.so uint16; github.com/go-sql-driver/mysql.receivedp *uint8; github.com/go-sql-driver/mysql.releasetime uint64 }; github.com/go-sql-driver/mysql.lockorderarr [2]uint16; github.com/go-sql-driver/mysql.pollorderarr [2]uint16 }
noalg.struct { github.com/go-sql-driver/mysql.tcase uint16; github.com/go-sql-driver/mysql.ncase uint16; github.com/go-sql-driver/mysql.pollorder *uint8; github.com/go-sql-driver/mysql.lockorder *uint8; github.com/go-sql-driver/mysql.scase [2]struct { github.com/go-sql-driver/mysql.elem *uint8; github.com/go-sql-driver/mysql.chan *uint8; github.com/go-sql-driver/mysql.pc uintptr; github.com/go-sql-driver/mysql.kind uint16; github.com/go-sql-driver/mysql.so uint16; github.com/go-sql-driver/mysql.receivedp *uint8; github.com/go-sql-driver/mysql.releasetime uint64 }; github.com/go-sql-driver/mysql.lockorderarr [2]uint16; github.com/go-sql-driver/mysql.pollorderarr [2]uint16 }
\fnoalg.[2]struct { github.com/go-sql-driver/mysql.elem *uint8; github.com/go-sql-driver/mysql.chan *uint8; github.com/go-sql-driver/mysql.pc uintptr; github.com/go-sql-driver/mysql.kind uint16; github.com/go-sql-driver/mysql.so uint16; github.com/go-sql-driver/mysql.receivedp *uint8; github.com/go-sql-driver/mysql.releasetime uint64 }
noalg.[2]struct { github.com/go-sql-driver/mysql.elem *uint8; github.com/go-sql-driver/mysql.chan *uint8; github.com/go-sql-driver/mysql.pc uintptr; github.com/go-sql-driver/mysql.kind uint16; github.com/go-sql-driver/mysql.so uint16; github.com/go-sql-driver/mysql.receivedp *uint8; github.com/go-sql-driver/mysql.releasetime uint64 }
noalg.struct { github.com/go-sql-driver/mysql.elem *uint8; github.com/go-sql-driver/mysql.chan *uint8; github.com/go-sql-driver/mysql.pc uintptr; github.com/go-sql-driver/mysql.kind uint16; github.com/go-sql-driver/mysql.so uint16; github.com/go-sql-driver/mysql.receivedp *uint8; github.com/go-sql-driver/mysql.releasetime uint64 }
noalg.struct { github.com/go-sql-driver/mysql.elem *uint8; github.com/go-sql-driver/mysql.chan *uint8; github.com/go-sql-driver/mysql.pc uintptr; github.com/go-sql-driver/mysql.kind uint16; github.com/go-sql-driver/mysql.so uint16; github.com/go-sql-driver/mysql.receivedp *uint8; github.com/go-sql-driver/mysql.releasetime uint64 }
*github.com/go-sql-driver/mysql.binaryRows
github.com/go-sql-driver/mysql.binaryRows
github.com/go-sql-driver/mysql.binaryRows
github.com/go-sql-driver/mysql.myRnd
github.com/go-sql-driver/mysql.myRnd
noalg.struct { github.com/go-sql-driver/mysql.tcase uint16; github.com/go-sql-driver/mysql.ncase uint16; github.com/go-sql-driver/mysql.pollorder *uint8; github.com/go-sql-driver/mysql.lockorder *uint8; github.com/go-sql-driver/mysql.scase [3]struct { github.com/go-sql-driver/mysql.elem *uint8; github.com/go-sql-driver/mysql.chan *uint8; github.com/go-sql-driver/mysql.pc uintptr; github.com/go-sql-driver/mysql.kind uint16; github.com/go-sql-driver/mysql.so uint16; github.com/go-sql-driver/mysql.receivedp *uint8; github.com/go-sql-driver/mysql.releasetime uint64 }; github.com/go-sql-driver/mysql.lockorderarr [3]uint16; github.com/go-sql-driver/mysql.pollorderarr [3]uint16 }
noalg.struct { github.com/go-sql-driver/mysql.tcase uint16; github.com/go-sql-driver/mysql.ncase uint16; github.com/go-sql-driver/mysql.pollorder *uint8; github.com/go-sql-driver/mysql.lockorder *uint8; github.com/go-sql-driver/mysql.scase [3]struct { github.com/go-sql-driver/mysql.elem *uint8; github.com/go-sql-driver/mysql.chan *uint8; github.com/go-sql-driver/mysql.pc uintptr; github.com/go-sql-driver/mysql.kind uint16; github.com/go-sql-driver/mysql.so uint16; github.com/go-sql-driver/mysql.receivedp *uint8; github.com/go-sql-driver/mysql.releasetime uint64 }; github.com/go-sql-driver/mysql.lockorderarr [3]uint16; github.com/go-sql-driver/mysql.pollorderarr [3]uint16 }
\fnoalg.[3]struct { github.com/go-sql-driver/mysql.elem *uint8; github.com/go-sql-driver/mysql.chan *uint8; github.com/go-sql-driver/mysql.pc uintptr; github.com/go-sql-driver/mysql.kind uint16; github.com/go-sql-driver/mysql.so uint16; github.com/go-sql-driver/mysql.receivedp *uint8; github.com/go-sql-driver/mysql.releasetime uint64 }
noalg.[3]struct { github.com/go-sql-driver/mysql.elem *uint8; github.com/go-sql-driver/mysql.chan *uint8; github.com/go-sql-driver/mysql.pc uintptr; github.com/go-sql-driver/mysql.kind uint16; github.com/go-sql-driver/mysql.so uint16; github.com/go-sql-driver/mysql.receivedp *uint8; github.com/go-sql-driver/mysql.releasetime uint64 }
*main.Attack
main.Attack
Targets
Flags
main.Attack
flags
noalg.map.iter[string]main.FlagInfo
noalg.map.iter[string]main.FlagInfo
*main.FlagInfo
*map.hdr[string]main.FlagInfo
noalg.map.hdr[string]main.FlagInfo
flags
noalg.map.hdr[string]main.FlagInfo
*map.bucket[string]main.FlagInfo
noalg.map.bucket[string]main.FlagInfo
noalg.map.bucket[string]main.FlagInfo
\fnoalg.[8]main.FlagInfo
noalg.[8]main.FlagInfo
noalg.map.iter[string]main.AttackInfo
noalg.map.iter[string]main.AttackInfo
*main.AttackInfo
*map.hdr[string]main.AttackInfo
noalg.map.hdr[string]main.AttackInfo
flags
noalg.map.hdr[string]main.AttackInfo
*map.bucket[string]main.AttackInfo
noalg.map.bucket[string]main.AttackInfo
noalg.map.bucket[string]main.AttackInfo
\fnoalg.[8]main.AttackInfo
noalg.[8]main.AttackInfo
flags
flags
noalg.struct { main.tcase uint16; main.ncase uint16; main.pollorder *uint8; main.lockorder *uint8; main.scase [2]struct { main.elem *uint8; main.chan *uint8; main.pc uintptr; main.kind uint16; main.so uint16; main.receivedp *uint8; main.releasetime uint64 }; main.lockorderarr [2]uint16; main.pollorderarr [2]uint16 }
noalg.struct { main.tcase uint16; main.ncase uint16; main.pollorder *uint8; main.lockorder *uint8; main.scase [2]struct { main.elem *uint8; main.chan *uint8; main.pc uintptr; main.kind uint16; main.so uint16; main.receivedp *uint8; main.releasetime uint64 }; main.lockorderarr [2]uint16; main.pollorderarr [2]uint16 }
\fnoalg.[2]struct { main.elem *uint8; main.chan *uint8; main.pc uintptr; main.kind uint16; main.so uint16; main.receivedp *uint8; main.releasetime uint64 }
noalg.[2]struct { main.elem *uint8; main.chan *uint8; main.pc uintptr; main.kind uint16; main.so uint16; main.receivedp *uint8; main.releasetime uint64 }
noalg.struct { main.elem *uint8; main.chan *uint8; main.pc uintptr; main.kind uint16; main.so uint16; main.receivedp *uint8; main.releasetime uint64 }
noalg.struct { main.elem *uint8; main.chan *uint8; main.pc uintptr; main.kind uint16; main.so uint16; main.receivedp *uint8; main.releasetime uint64 }
noalg.map.iter[int]*main.Bot
noalg.map.iter[int]*main.Bot
**main.Bot
*map.hdr[int]*main.Bot
noalg.map.hdr[int]*main.Bot
flags
noalg.map.hdr[int]*main.Bot
*map.bucket[int]*main.Bot
noalg.map.bucket[int]*main.Bot
noalg.map.bucket[int]*main.Bot
\fnoalg.[8]*main.Bot
noalg.[8]*main.Bot
noalg.struct { main.tcase uint16; main.ncase uint16; main.pollorder *uint8; main.lockorder *uint8; main.scase [5]struct { main.elem *uint8; main.chan *uint8; main.pc uintptr; main.kind uint16; main.so uint16; main.receivedp *uint8; main.releasetime uint64 }; main.lockorderarr [5]uint16; main.pollorderarr [5]uint16 }
noalg.struct { main.tcase uint16; main.ncase uint16; main.pollorder *uint8; main.lockorder *uint8; main.scase [5]struct { main.elem *uint8; main.chan *uint8; main.pc uintptr; main.kind uint16; main.so uint16; main.receivedp *uint8; main.releasetime uint64 }; main.lockorderarr [5]uint16; main.pollorderarr [5]uint16 }
\fnoalg.[5]struct { main.elem *uint8; main.chan *uint8; main.pc uintptr; main.kind uint16; main.so uint16; main.receivedp *uint8; main.releasetime uint64 }
noalg.[5]struct { main.elem *uint8; main.chan *uint8; main.pc uintptr; main.kind uint16; main.so uint16; main.receivedp *uint8; main.releasetime uint64 }
flags
flags
flags
flags
flags
flags
flags
flags
flags
flags
flags
flags
flags
flags
flags
flags
flags
flags
flags
flags
flags
flags
flags
flags
flags
flags
flags
flags
flags
flags
flags
\f[]val<func() net.dnsRR>
bucket<int,func() net.dnsRR>
*bucket<int,func() net.dnsRR>
hash<int,func() net.dnsRR>
flags
*hash<int,func() net.dnsRR>
\f[]key<net.hostLookupOrder>
bucket<net.hostLookupOrder,string>
*bucket<net.hostLookupOrder,string>
hash<net.hostLookupOrder,string>
flags
*hash<net.hostLookupOrder,string>
\f[]val<[]net.nssSource>
bucket<string,[]net.nssSource>
*bucket<string,[]net.nssSource>
hash<string,[]net.nssSource>
flags
*hash<string,[]net.nssSource>
flags
flags
flags
flags
\f[]val<main.FlagInfo>
bucket<string,main.FlagInfo>
*bucket<string,main.FlagInfo>
hash<string,main.FlagInfo>
flags
*hash<string,main.FlagInfo>
\f[]val<main.AttackInfo>
bucket<string,main.AttackInfo>
*bucket<string,main.AttackInfo>
hash<string,main.AttackInfo>
flags
*hash<string,main.AttackInfo>
flags
\f[]val<*main.Bot>
bucket<int,*main.Bot>
*bucket<int,*main.Bot>
hash<int,*main.Bot>
flags
*hash<int,*main.Bot>
flags
flags
flags
flags
\f[]key<*database/sql.driverStmt>
bucket<*database/sql.driverStmt,bool>
*bucket<*database/sql.driverStmt,bool>
hash<*database/sql.driverStmt,bool>
flags
*hash<*database/sql.driverStmt,bool>
first
first
sudog<net.ipLookupResult>
waitq<net.ipLookupResult>
first
*sudog<net.ipLookupResult>
hchan<net.ipLookupResult>
*hchan<net.ipLookupResult>
sudog<net.portLookupResult>
waitq<net.portLookupResult>
first
*sudog<net.portLookupResult>
hchan<net.portLookupResult>
*hchan<net.portLookupResult>
first
sudog<net.racer·2>
waitq<net.racer·2>
first
*sudog<net.racer·2>
hchan<net.racer·2>
*hchan<net.racer·2>
sudog<net.dialResult·1>
waitq<net.dialResult·1>
first
*sudog<net.dialResult·1>
hchan<net.dialResult·1>
*hchan<net.dialResult·1>
first
first
first
first
first
sudog<*main.AttackSend>
waitq<*main.AttackSend>
first
*sudog<*main.AttackSend>
hchan<*main.AttackSend>
*hchan<*main.AttackSend>
sudog<*main.Bot>
waitq<*main.Bot>
first
*sudog<*main.Bot>
hchan<*main.Bot>
*hchan<*main.Bot>
first
main.attackInfoLookup
go.itab.*errors.errorString,error
main.flagInfoLookup
runtime.featureFlags
runtime.processorVersionInfo
runtime.vendorStringBytes
runtime.gomaxprocs
runtime.newprocs
runtime.timerprocPC
runtime.firstmoduledata
runtime.firstStackBarrierOffset
runtime.netpollInited
runtime.procAuxv
runtime.startupRandomData
runtime.urandom_dev
runtime.badmorestackg0Msg
runtime.badmorestackgsignalMsg
runtime.systemstackPC
runtime.systemstack_switchPC
go.itab.runtime.errorString,error
go.itab.*net.byRFC6724,sort.Interface
net.rfc6724policyTable
net.statictmp_54
go.itab.net.byMaskLength,sort.Interface
net.statictmp_96
net.confOnce
net.confVal
net.netGo
net.netCgo
net.getHostname
net.DefaultResolver
net.errTimeout
net.statictmp_196
go.itab.net.UnknownNetworkError,error
go.itab.*net.UnixAddr,net.Addr
go.itab.*net.AddrError,error
go.itab.*net.TCPAddr,net.Addr
go.itab.*net.UDPAddr,net.Addr
go.itab.*net.IPAddr,net.Addr
net.errNoSuitableAddress
net.errMissingAddress
go.itab.*net.OpError,error
net.testHookSetKeepAlive
net.errCanceled
go.itab.*net.UnixConn,net.Conn
go.itab.*net.TCPConn,net.Conn
go.itab.*net.UDPConn,net.Conn
go.itab.*net.IPConn,net.Conn
go.itab.*net.TCPListener,net.Listener
go.itab.*net.UnixListener,net.Listener
go.itab.*net.DNSError,error
net.errNoSuchHost
go.itab.*net.UDPConn,io.ReadWriter
go.itab.*net.TCPConn,io.ReadWriter
go.itab.*net.TCPConn,net.dnsConn
go.itab.*net.UDPConn,net.dnsConn
net.testHookDNSDialer
net.statictmp_549
net.statictmp_551
net.v4InV6Prefix
net.resolvConf
net.lookupOrderName
net.defaultNS
go.itab.*net.dnsRR_Header,net.dnsStruct
net.rr_mk
go.itab.*net.dnsRR_Header,net.dnsRR
go.itab.*net.dnsHeader,net.dnsStruct
go.itab.*net.dnsQuestion,net.dnsStruct
go.itab.*net.dnsMsgHdr,net.dnsStruct
net.errClosing
net.serverInit
net.connectFunc
net.getsockoptIntFunc
net.noDeadline
net.closeFunc
syscall.ForkLock
net.testHookHostsPath
net.hosts
net.flagNames
net.errInvalidInterface
net.zoneCache
net.errInvalidInterfaceIndex
net.errNoSuchInterface
net.errInvalidInterfaceName
net.IPv4zero
net.IPv6unspecified
net.IPv6loopback
net.IPv4bcast
net.classBMask
net.classCMask
net.classAMask
net.statictmp_1672
go.itab.*net.ParseError,error
go.itab.*net.IPAddr,net.sockaddr
net.statictmp_1939
net.ErrWriteToConnected
net.statictmp_2107
net.socketFunc
net.statictmp_2132
net.supportsIPv4map
net.supportsIPv4
go.itab.*syscall.SockaddrInet4,syscall.Sockaddr
net.IPv6zero
go.itab.*syscall.SockaddrInet6,syscall.Sockaddr
net.protocols
net.services
net.lookupGroup
net.onceReadProtocols
net.supportsIPv6
go.itab.net.writerOnly,io.Writer
net.threadLimit
net.statictmp_2600
go.itab.*sync.Mutex,sync.Locker
net.onceReadServices
net.accept4Func
net.acceptFunc
net.listenerBacklog
net.listenFunc
go.itab.*net.UDPAddr,net.sockaddr
net.errNoSuchMulticastInterface
go.itab.*net.TCPAddr,net.sockaddr
net.statictmp_3119
go.itab.*net.TCPConn,io.Writer
net.testHookDialTCP
net.statictmp_3307
go.itab.*net.UnixAddr,net.sockaddr
net._cgo_cb4050e05860_C2func_getaddrinfo
net._cgo_cb4050e05860_Cfunc_free
net._cgo_cb4050e05860_Cfunc_freeaddrinfo
net._cgo_cb4050e05860_Cfunc_gai_strerror
net._cgo_cb4050e05860_Cfunc__Cmalloc
go.itab.net.addrinfoErrno,error
go.itab.*net.Dialer,net.dnsDialer
go.itab.*net.dnsRR_CNAME,net.dnsRR
go.itab.*net.dnsRR_MX,net.dnsRR
go.itab.*net.dnsRR_NS,net.dnsRR
go.itab.*net.dnsRR_PTR,net.dnsRR
go.itab.*net.dnsRR_SOA,net.dnsRR
go.itab.*net.dnsRR_TXT,net.dnsRR
go.itab.*net.dnsRR_SRV,net.dnsRR
go.itab.*net.dnsRR_A,net.dnsRR
go.itab.*net.dnsRR_AAAA,net.dnsRR
net.aLongTimeAgo
net.testHookCanceledDial
net.testHookLookupIP
net.initdone·
net.statictmp_4077
net.statictmp_4090
net.statictmp_4091
net.IPv4allsys
net.IPv4allrouter
net.statictmp_4107
net.statictmp_4108
net.statictmp_4114
net.statictmp_4115
net.statictmp_4119
net.statictmp_4120
net.statictmp_4078
net.statictmp_4079
net.statictmp_4080
net.statictmp_4076
net.statictmp_4081
net.statictmp_4082
net.statictmp_4083
net.statictmp_4087
go.itab.*net.timeoutError,error
net.statictmp_4088
time.Local
time.localLoc
time.localOnce
encoding/binary.overflow
encoding/binary.initdone·
go.itab.*math/rand.rngSource,math/rand.Source
math/rand.globalRand
math/rand.rng_cooked
math/rand.initdone·
go.itab.*math/rand.lockedSource,math/rand.Source
sync.allPoolsMu
sync.allPools
go.itab.*sync.rlocker,sync.Locker
sync.initdone·
go.itab.*database/sql.driverConn,sync.Locker
database/sql.connectionRequestQueueSize
go.itab.*database/sql.driverStmt,sync.Locker
go.itab.*github.com/go-sql-driver/mysql.binaryRows,database/sql/driver.Rows
github.com/go-sql-driver/mysql.scanTypeRawBytes
github.com/go-sql-driver/mysql.scanTypeUint8
github.com/go-sql-driver/mysql.scanTypeInt8
github.com/go-sql-driver/mysql.scanTypeNullInt
github.com/go-sql-driver/mysql.scanTypeUint16
github.com/go-sql-driver/mysql.scanTypeInt16
github.com/go-sql-driver/mysql.scanTypeUint32
github.com/go-sql-driver/mysql.scanTypeInt32
github.com/go-sql-driver/mysql.scanTypeFloat32
github.com/go-sql-driver/mysql.scanTypeNullFloat
github.com/go-sql-driver/mysql.scanTypeFloat64
github.com/go-sql-driver/mysql.scanTypeNullTime
github.com/go-sql-driver/mysql.scanTypeUint64
github.com/go-sql-driver/mysql.scanTypeInt64
github.com/go-sql-driver/mysql.scanTypeUnknown
github.com/go-sql-driver/mysql.ErrPktSyncMul
github.com/go-sql-driver/mysql.ErrPktSync
go.itab.*crypto/tls.Conn,net.Conn
github.com/go-sql-driver/mysql.tlsConfigRegister
unicode/utf8.first
io.ErrNoProgress
os.Kill
syscall.zeroSysProcAttr
syscall.zeroProcAttr
go.itab.*syscall.SockaddrNetlink,syscall.Sockaddr
syscall.SocketDisableIPv6
sync/atomic.CompareAndSwapUint64.args_stackmap
sync/atomic.CompareAndSwapUintptr.args_stackmap
sync/atomic.AddInt32.args_stackmap
sync/atomic.AddUint32.args_stackmap
sync/atomic.StoreUint32.args_stackmap
sync/atomic.StoreUint64.args_stackmap
sync/atomic.StoreUintptr.args_stackmap
unicode.Greek
unicode.IDS_Binary_Operator
unicode.foldGreek
go.itab.crypto/tls.rsaKeyAgreement,crypto/tls.keyAgreement
go.itab.*crypto/tls.ecdheKeyAgreement,crypto/tls.keyAgreement
crypto/rand.Reader
go.itab.*crypto/tls.clientHelloMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.serverHelloMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.helloRequestMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.serverKeyExchangeMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.certificateMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.newSessionTicketMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.serverHelloDoneMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.certificateVerifyMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.certificateRequestMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.finishedMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.clientKeyExchangeMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.nextProtoMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.certificateStatusMsg,crypto/tls.handshakeMessage
go.itab.net/url.EscapeError,error
go.itab.net/url.InvalidHostError,error
net/url.initdone·
crypto/x509.systemRoots
crypto/x509.systemRootsErr
go.itab.crypto/x509.SystemRootsError,error
go.itab.crypto/x509.HostnameError,error
crypto/rand.isEAGAIN
crypto/rand.altGetRandom
crypto/rand.useSyscall
crypto/rand.once
go.itab.*crypto/rand.devReader,io.Reader
go.itab.crypto/rand.hideAgainReader,io.Reader
crypto/rand.smallPrimesProduct
crypto/rand.initdone·
go.itab.*strings.Reader,io.ByteScanner
encoding/asn1.flagType
vendor/golang_org/x/crypto/curve25519.ladderstep.args_stackmap
internal/syscall/unix.randomUnsupported
/usr/lib/golang/src/sync/atomic/value.go
/usr/lib/golang/src/sync/atomic/asm_amd64.s
/usr/lib/golang/src/sync/atomic/doc.go
/usr/lib/golang/src/runtime/alg.go
/usr/lib/golang/src/runtime/atomic_pointer.go
/usr/lib/golang/src/runtime/cgo.go
/usr/lib/golang/src/runtime/cgo_mmap.go
/usr/lib/golang/src/runtime/cgo_sigaction.go
/usr/lib/golang/src/runtime/cgocall.go
/usr/lib/golang/src/runtime/cgocallback.go
/usr/lib/golang/src/runtime/cgocheck.go
/usr/lib/golang/src/runtime/chan.go
/usr/lib/golang/src/runtime/cpuflags_amd64.go
/usr/lib/golang/src/runtime/cpuprof.go
/usr/lib/golang/src/runtime/debug.go
/usr/lib/golang/src/runtime/env_posix.go
/usr/lib/golang/src/runtime/error.go
/usr/lib/golang/src/runtime/extern.go
/usr/lib/golang/src/runtime/hash64.go
/usr/lib/golang/src/runtime/hashmap.go
/usr/lib/golang/src/runtime/hashmap_fast.go
/usr/lib/golang/src/runtime/iface.go
/usr/lib/golang/src/runtime/lfstack.go
/usr/lib/golang/src/runtime/lock_futex.go
/usr/lib/golang/src/runtime/malloc.go
/usr/lib/golang/src/runtime/mbarrier.go
/usr/lib/golang/src/runtime/mbitmap.go
/usr/lib/golang/src/runtime/mcache.go
/usr/lib/golang/src/runtime/mcentral.go
/usr/lib/golang/src/runtime/mgc.go
/usr/lib/golang/src/runtime/mem_linux.go
/usr/lib/golang/src/runtime/mfinal.go
/usr/lib/golang/src/runtime/type.go
/usr/lib/golang/src/runtime/mfixalloc.go
/usr/lib/golang/src/runtime/mgcmark.go
/usr/lib/golang/src/runtime/mgcsweep.go
/usr/lib/golang/src/runtime/mgcsweepbuf.go
/usr/lib/golang/src/runtime/mgcwork.go
/usr/lib/golang/src/runtime/mheap.go
/usr/lib/golang/src/runtime/mprof.go
/usr/lib/golang/src/runtime/mstats.go
/usr/lib/golang/src/runtime/mstkbar.go
/usr/lib/golang/src/runtime/netpoll.go
/usr/lib/golang/src/runtime/netpoll_epoll.go
/usr/lib/golang/src/runtime/os_linux.go
/usr/lib/golang/src/runtime/panic.go
/usr/lib/golang/src/runtime/print.go
/usr/lib/golang/src/runtime/proc.go
/usr/lib/golang/src/runtime/runtime.go
/usr/lib/golang/src/runtime/runtime1.go
/usr/lib/golang/src/runtime/runtime2.go
/usr/lib/golang/src/runtime/select.go
/usr/lib/golang/src/runtime/sema.go
/usr/lib/golang/src/runtime/signal_amd64x.go
/usr/lib/golang/src/runtime/signal_sighandler.go
/usr/lib/golang/src/runtime/signal_unix.go
/usr/lib/golang/src/runtime/sigqueue.go
/usr/lib/golang/src/runtime/slice.go
/usr/lib/golang/src/runtime/stack.go
/usr/lib/golang/src/runtime/string.go
/usr/lib/golang/src/runtime/stubs.go
/usr/lib/golang/src/runtime/symtab.go
/usr/lib/golang/src/runtime/time.go
/usr/lib/golang/src/runtime/trace.go
/usr/lib/golang/src/runtime/traceback.go
/usr/lib/golang/src/runtime/utf8.go
/usr/lib/golang/src/runtime/vdso_linux_amd64.go
/usr/lib/golang/src/runtime/write_err.go
/usr/lib/golang/src/runtime/asm_amd64.s
/usr/lib/golang/src/runtime/cpuidlow_amd64.s
/usr/lib/golang/src/runtime/duff_amd64.s
/usr/lib/golang/src/runtime/memclr_amd64.s
/usr/lib/golang/src/runtime/memmove_amd64.s
/usr/lib/golang/src/runtime/rt0_linux_amd64.s
/usr/lib/golang/src/runtime/sys_linux_amd64.s
/usr/lib/golang/src/math/frexp.go
/usr/lib/golang/src/math/logb.go
/usr/lib/golang/src/math/log10.go
/usr/lib/golang/src/math/pow10.go
/usr/lib/golang/src/math/unsafe.go
/usr/lib/golang/src/math/floor_asm.go
/usr/lib/golang/src/math/floor_amd64.s
/usr/lib/golang/src/math/frexp_amd64.s
/usr/lib/golang/src/math/log10_amd64.s
/usr/lib/golang/src/math/log_amd64.s
/usr/lib/golang/src/math/abs.go
/usr/lib/golang/src/errors/errors.go
/usr/lib/golang/src/unicode/utf8/utf8.go
/usr/lib/golang/src/strconv/atof.go
/usr/lib/golang/src/strconv/atoi.go
/usr/lib/golang/src/strconv/decimal.go
/usr/lib/golang/src/strconv/extfloat.go
/usr/lib/golang/src/strconv/ftoa.go
/usr/lib/golang/src/strconv/itoa.go
/usr/lib/golang/src/strconv/quote.go
/usr/lib/golang/src/strconv/atob.go
/usr/lib/golang/src/sync/cond.go
/usr/lib/golang/src/sync/mutex.go
/usr/lib/golang/src/sync/once.go
/usr/lib/golang/src/sync/pool.go
/usr/lib/golang/src/sync/runtime.go
/usr/lib/golang/src/sync/rwmutex.go
/usr/lib/golang/src/sync/waitgroup.go
/usr/lib/golang/src/io/io.go
/usr/lib/golang/src/io/pipe.go
/usr/lib/golang/src/syscall/dirent.go
/usr/lib/golang/src/syscall/env_unix.go
/usr/lib/golang/src/syscall/exec_linux.go
/usr/lib/golang/src/syscall/exec_unix.go
/usr/lib/golang/src/syscall/netlink_linux.go
/usr/lib/golang/src/syscall/str.go
/usr/lib/golang/src/syscall/syscall.go
/usr/lib/golang/src/syscall/syscall_linux.go
/usr/lib/golang/src/syscall/syscall_linux_amd64.go
/usr/lib/golang/src/syscall/syscall_unix.go
/usr/lib/golang/src/syscall/zsyscall_linux_amd64.go
/usr/lib/golang/src/syscall/ztypes_linux_amd64.go
/usr/lib/golang/src/syscall/asm.s
/usr/lib/golang/src/syscall/asm_linux_amd64.s
/usr/lib/golang/src/time/format.go
/usr/lib/golang/src/time/time.go
/usr/lib/golang/src/time/sleep.go
/usr/lib/golang/src/time/sys_unix.go
/usr/lib/golang/src/time/zoneinfo.go
/usr/lib/golang/src/time/zoneinfo_read.go
/usr/lib/golang/src/time/zoneinfo_unix.go
/usr/lib/golang/src/net/addrselect.go
/usr/lib/golang/src/os/dir.go
/usr/lib/golang/src/os/dir_unix.go
/usr/lib/golang/src/os/env.go
/usr/lib/golang/src/os/error.go
/usr/lib/golang/src/os/error_unix.go
/usr/lib/golang/src/os/exec.go
/usr/lib/golang/src/os/exec_posix.go
/usr/lib/golang/src/os/exec_unix.go
/usr/lib/golang/src/os/file.go
/usr/lib/golang/src/os/file_posix.go
/usr/lib/golang/src/os/file_unix.go
/usr/lib/golang/src/os/path_unix.go
/usr/lib/golang/src/os/pipe_linux.go
/usr/lib/golang/src/os/proc.go
/usr/lib/golang/src/os/stat_linux.go
/usr/lib/golang/src/os/stat_unix.go
/usr/lib/golang/src/os/str.go
/usr/lib/golang/src/os/sys.go
/usr/lib/golang/src/os/sys_linux.go
/usr/lib/golang/src/os/types.go
/usr/lib/golang/src/os/types_unix.go
/usr/lib/golang/src/os/wait_waitid.go
/usr/lib/golang/src/os/executable_procfs.go
/usr/lib/golang/src/reflect/makefunc.go
/usr/lib/golang/src/reflect/swapper.go
/usr/lib/golang/src/reflect/type.go
/usr/lib/golang/src/reflect/value.go
/usr/lib/golang/src/reflect/asm_amd64.s
/usr/lib/golang/src/reflect/deepequal.go
/usr/lib/golang/src/fmt/format.go
/usr/lib/golang/src/fmt/scan.go
/usr/lib/golang/src/fmt/print.go
/usr/lib/golang/src/fmt/doc.go
/usr/lib/golang/src/sort/sort.go
/usr/lib/golang/src/sort/zfuncversion.go
/usr/lib/golang/src/context/context.go
/usr/lib/golang/src/math/rand/rand.go
/usr/lib/golang/src/math/rand/rng.go
/usr/lib/golang/src/math/rand/zipf.go
/usr/lib/golang/src/math/rand/exp.go
/usr/lib/golang/src/internal/singleflight/singleflight.go
/usr/lib/golang/src/runtime/cgo/callbacks.go
/usr/lib/golang/src/runtime/cgo/asm_amd64.s
/usr/lib/golang/src/net/conf.go
/usr/lib/golang/src/net/dial.go
/usr/lib/golang/src/net/dnsclient.go
/usr/lib/golang/src/net/dnsclient_unix.go
/usr/lib/golang/src/net/dnsconfig_unix.go
/usr/lib/golang/src/net/dnsmsg.go
/usr/lib/golang/src/net/fd_mutex.go
/usr/lib/golang/src/net/fd_poll_runtime.go
/usr/lib/golang/src/net/fd_unix.go
/usr/lib/golang/src/net/hosts.go
/usr/lib/golang/src/net/interface.go
/usr/lib/golang/src/net/interface_linux.go
/usr/lib/golang/src/net/ip.go
/usr/lib/golang/src/net/iprawsock.go
/usr/lib/golang/src/net/iprawsock_posix.go
/usr/lib/golang/src/net/udpsock_posix.go
/usr/lib/golang/src/net/ipsock.go
/usr/lib/golang/src/net/ipsock_posix.go
/usr/lib/golang/src/net/lookup.go
/usr/lib/golang/src/net/lookup_unix.go
/usr/lib/golang/src/net/mac.go
/usr/lib/golang/src/net/net.go
/usr/lib/golang/src/net/nss.go
/usr/lib/golang/src/net/parse.go
/usr/lib/golang/src/net/port.go
/usr/lib/golang/src/net/port_unix.go
/usr/lib/golang/src/net/sendfile_linux.go
/usr/lib/golang/src/net/sock_cloexec.go
/usr/lib/golang/src/net/sock_linux.go
/usr/lib/golang/src/net/sock_posix.go
/usr/lib/golang/src/net/sockopt_linux.go
/usr/lib/golang/src/net/sockopt_posix.go
/usr/lib/golang/src/net/tcpsock.go
/usr/lib/golang/src/net/tcpsock_posix.go
/usr/lib/golang/src/net/tcpsockopt_posix.go
/usr/lib/golang/src/net/tcpsockopt_unix.go
/usr/lib/golang/src/net/udpsock.go
/usr/lib/golang/src/net/unixsock.go
/usr/lib/golang/src/net/unixsock_posix.go
net/_obj/_cgo_gotypes.go
/usr/lib/golang/src/net/cgo_unix.go
/usr/lib/golang/src/net/hook.go
/usr/lib/golang/src/net/hook_unix.go
net/_obj/_cgo_import.go
/usr/lib/golang/src/unicode/graphic.go
/usr/lib/golang/src/unicode/letter.go
/usr/lib/golang/src/unicode/tables.go
/usr/lib/golang/src/strings/reader.go
/usr/lib/golang/src/strings/strings.go
/usr/lib/golang/src/strings/strings_amd64.go
/usr/lib/golang/src/strings/strings_decl.go
/usr/lib/golang/src/strings/compare.go
/usr/lib/golang/src/bytes/buffer.go
/usr/lib/golang/src/bytes/bytes.go
/usr/lib/golang/src/bytes/bytes_amd64.go
/usr/lib/golang/src/bytes/reader.go
/usr/lib/golang/src/path/filepath/path.go
/usr/lib/golang/src/path/filepath/path_unix.go
/usr/lib/golang/src/path/filepath/symlink_unix.go
/usr/lib/golang/src/path/filepath/match.go
/usr/lib/golang/src/io/ioutil/ioutil.go
/usr/lib/golang/src/io/ioutil/tempfile.go
/usr/lib/golang/src/encoding/binary/varint.go
/usr/lib/golang/src/regexp/syntax/compile.go
/usr/lib/golang/src/regexp/syntax/parse.go
/usr/lib/golang/src/regexp/syntax/prog.go
/usr/lib/golang/src/regexp/syntax/regexp.go
/usr/lib/golang/src/regexp/syntax/simplify.go
/usr/lib/golang/src/regexp/syntax/perl_groups.go
/usr/lib/golang/src/regexp/backtrack.go
/usr/lib/golang/src/regexp/exec.go
/usr/lib/golang/src/regexp/onepass.go
/usr/lib/golang/src/regexp/regexp.go
/usr/lib/golang/src/os/exec/exec.go
/usr/lib/golang/src/os/exec/exec_posix.go
/usr/lib/golang/src/os/exec/lp_unix.go
/usr/lib/golang/src/database/sql/driver/types.go
/usr/lib/golang/src/database/sql/driver/driver.go
/usr/lib/golang/src/database/sql/convert.go
/usr/lib/golang/src/database/sql/ctxutil.go
/usr/lib/golang/src/database/sql/sql.go
/usr/lib/golang/src/crypto/subtle/constant_time.go
/usr/lib/golang/src/crypto/cipher/cbc.go
/usr/lib/golang/src/crypto/cipher/ctr.go
/usr/lib/golang/src/crypto/cipher/gcm.go
/usr/lib/golang/src/crypto/cipher/xor.go
/usr/lib/golang/src/crypto/internal/cipherhw/cipherhw_amd64.go
/usr/lib/golang/src/crypto/internal/cipherhw/asm_amd64.s
/usr/lib/golang/src/crypto/aes/aes_gcm.go
/usr/lib/golang/src/crypto/aes/block.go
/usr/lib/golang/src/crypto/aes/cipher.go
/usr/lib/golang/src/crypto/aes/cipher_amd64.go
/usr/lib/golang/src/crypto/aes/modes.go
/usr/lib/golang/src/crypto/aes/asm_amd64.s
/usr/lib/golang/src/crypto/aes/gcm_amd64.s
/usr/lib/golang/src/crypto/des/block.go
/usr/lib/golang/src/crypto/des/cipher.go
/usr/lib/golang/src/crypto/des/const.go
/usr/lib/golang/src/hash/hash.go
/usr/lib/golang/src/crypto/hmac/hmac.go
/usr/lib/golang/src/crypto/rc4/rc4.go
/usr/lib/golang/src/crypto/rc4/rc4_asm.go
/usr/lib/golang/src/crypto/rc4/rc4_amd64.s
/usr/lib/golang/src/crypto/crypto.go
/usr/lib/golang/src/crypto/sha1/sha1.go
/usr/lib/golang/src/crypto/sha1/sha1block_amd64.go
/usr/lib/golang/src/crypto/sha1/sha1block_amd64.s
/usr/lib/golang/src/crypto/sha256/sha256.go
/usr/lib/golang/src/crypto/sha256/sha256block_decl.go
/usr/lib/golang/src/crypto/sha256/sha256block_amd64.s
/usr/lib/golang/src/encoding/base64/base64.go
/usr/lib/golang/src/encoding/pem/pem.go
/usr/lib/golang/src/crypto/md5/md5.go
/usr/lib/golang/src/crypto/md5/md5block.go
/usr/lib/golang/src/crypto/md5/md5block_decl.go
/usr/lib/golang/src/crypto/md5/md5block_amd64.s
/usr/lib/golang/src/encoding/hex/hex.go
/usr/lib/golang/src/math/big/arith.go
/usr/lib/golang/src/math/big/int.go
/usr/lib/golang/src/math/big/rat.go
/usr/lib/golang/src/math/big/ratconv.go
/usr/lib/golang/src/math/big/intconv.go
/usr/lib/golang/src/math/big/nat.go
/usr/lib/golang/src/math/big/natconv.go
/usr/lib/golang/src/math/big/roundingmode_string.go
/usr/lib/golang/src/math/big/arith_amd64.s
/usr/lib/golang/src/internal/syscall/unix/getrandom_linux.go
/usr/lib/golang/src/internal/syscall/unix/getrandom_linux_amd64.go
/usr/lib/golang/src/bufio/bufio.go
/usr/lib/golang/src/bufio/scan.go
/usr/lib/golang/src/crypto/rand/eagain.go
/usr/lib/golang/src/crypto/rand/rand_linux.go
/usr/lib/golang/src/crypto/rand/rand_unix.go
/usr/lib/golang/src/crypto/rand/util.go
/usr/lib/golang/src/crypto/rsa/pkcs1v15.go
/usr/lib/golang/src/crypto/rsa/pss.go
/usr/lib/golang/src/crypto/rsa/rsa.go
/usr/lib/golang/src/encoding/asn1/asn1.go
/usr/lib/golang/src/encoding/asn1/common.go
/usr/lib/golang/src/encoding/asn1/marshal.go
/usr/lib/golang/src/crypto/x509/pkix/pkix.go
/usr/lib/golang/src/crypto/elliptic/elliptic.go
/usr/lib/golang/src/crypto/elliptic/p256_amd64.go
/usr/lib/golang/src/crypto/elliptic/p224.go
/usr/lib/golang/src/crypto/elliptic/p256_asm_amd64.s
/usr/lib/golang/src/crypto/sha512/sha512.go
/usr/lib/golang/src/crypto/sha512/sha512block_decl.go
/usr/lib/golang/src/crypto/sha512/sha512block_amd64.s
/usr/lib/golang/src/crypto/ecdsa/ecdsa.go
/usr/lib/golang/src/crypto/dsa/dsa.go
/usr/lib/golang/src/crypto/x509/cert_pool.go
/usr/lib/golang/src/crypto/x509/root.go
/usr/lib/golang/src/crypto/x509/root_unix.go
/usr/lib/golang/src/crypto/x509/verify.go
/usr/lib/golang/src/crypto/x509/x509.go
/usr/lib/golang/src/crypto/x509/pkcs1.go
/usr/lib/golang/src/crypto/x509/pem_decrypt.go
/usr/lib/golang/src/vendor/golang_org/x/crypto/chacha20poly1305/internal/chacha20/chacha_generic.go
/usr/lib/golang/src/vendor/golang_org/x/crypto/poly1305/poly1305.go
/usr/lib/golang/src/vendor/golang_org/x/crypto/poly1305/sum_amd64.go
/usr/lib/golang/src/vendor/golang_org/x/crypto/poly1305/sum_amd64.s
/usr/lib/golang/src/vendor/golang_org/x/crypto/chacha20poly1305/chacha20poly1305.go
/usr/lib/golang/src/vendor/golang_org/x/crypto/chacha20poly1305/chacha20poly1305_amd64.go
/usr/lib/golang/src/vendor/golang_org/x/crypto/chacha20poly1305/chacha20poly1305_generic.go
/usr/lib/golang/src/vendor/golang_org/x/crypto/chacha20poly1305/chacha20poly1305_amd64.s
/usr/lib/golang/src/vendor/golang_org/x/crypto/curve25519/doc.go
/usr/lib/golang/src/vendor/golang_org/x/crypto/curve25519/mont25519_amd64.go
/usr/lib/golang/src/vendor/golang_org/x/crypto/curve25519/ladderstep_amd64.s
/usr/lib/golang/src/vendor/golang_org/x/crypto/curve25519/mul_amd64.s
/usr/lib/golang/src/vendor/golang_org/x/crypto/curve25519/cswap_amd64.s
/usr/lib/golang/src/vendor/golang_org/x/crypto/curve25519/freeze_amd64.s
/usr/lib/golang/src/vendor/golang_org/x/crypto/curve25519/square_amd64.s
/usr/lib/golang/src/crypto/tls/alert.go
/usr/lib/golang/src/crypto/tls/cipher_suites.go
/usr/lib/golang/src/crypto/tls/common.go
/usr/lib/golang/src/crypto/tls/conn.go
/usr/lib/golang/src/crypto/tls/handshake_client.go
/usr/lib/golang/src/crypto/tls/handshake_messages.go
/usr/lib/golang/src/crypto/tls/handshake_server.go
/usr/lib/golang/src/crypto/tls/key_agreement.go
/usr/lib/golang/src/crypto/tls/prf.go
/usr/lib/golang/src/crypto/tls/ticket.go
/usr/lib/golang/src/crypto/tls/tls.go
/usr/lib/golang/src/net/url/url.go
/usr/lib/golang/src/log/log.go
/root/golong/src/github.com/go-sql-driver/mysql/connection.go
/root/golong/src/github.com/go-sql-driver/mysql/connection_go18.go
/root/Mirai-Source-Code/mirai/cnc/attack.go
/root/Mirai-Source-Code/mirai/cnc/bot.go
-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8-7-8
7KAAKKKKK7-77----7VUY7AAAU7AAAUU%-A-AAAKKKKK\e/7A-AK7-KK7KK..A-.U#VAAAAUAAAAUU$A-7AAKKKKK\eVUUAAAAUAAAAUU#-A-7AAKKKKK
\nEt>
AAAA--777#$-A7A8-A7A8-A7A7A7A7A7A7A7AUAUA-vAAAA--777#$-A7A8-A7A8-A7A7A7A7A7A7A7AUAUA-wAAAA.-77-KL7-7KAKAKAKAKAKAKAKAKAKAKAKAK
AB.7--.7--7.7--7.87--7.7--7-7.87--7-.------8---.7---7.7---7.7----.--7U7---7.--7U7---7.--7U7---7.---7U7---7.----8---.7U7U87778-778NAAB.---.7--7.7--7.7--7-.--7U7----7.8---7.7--7-7.7--7-7.7--7--8--7U7----7.8---7.7--7-7.7--7-7.7--7--8--7U7----7.8---7.7--7-7.7--7-7.7--7--8--7U7----8---.7U7U87778-778NAB-7770--7U7----.--7U7----.--7U7----.--7U7---.---.7U7V7778-778
OAABAAAAL777777VDAAB7AKKKK8AAAAAB77AAAB-$7AAAAB1AABAAAAL7777VDAAB7AABKKKLVAAABAABAAAB7778AAAB-L7AAB0AAB.---.7--7.7--7.7--7-.-U.U--7.U--7-7.U--7-7.U--7--88---7.7--7-7.7--7-7.7--7--8-U.U--7.U--7-7.U--7-7.U--7--88---7.7--7-7.7--7-7.7--7--8-U.U--7.U--7-7.U--7-7.U--7--88---7.7--7-7.7--7-7.7--7--8-U.U--7.U--7-7.U--7-7.U--7--8---.UUUU87778-778DAAE.7--.7--7.7--7.87--7.7--7-7.87--7-.------8---.7---7.7---7.7----.-U.U--7.U--7.--7-8---78-7-.-U.U--7.U--7.--7-8---78-7-.-U.U--7.U--7.--7-8---78-7-.-U.U--7.U--7-7.--7-8---78-7--.----8---.UUUU87778-777--L
-----8---.7U7U87778W---.---7.---7.---7.---7.---7-7.---7-7.---7-7.---7.---7-7.---7-7.---7-7.---7.---7-7.---7-7.---7-7.--7U7---7.--7U7---7.--7U7---7.--7U7---7-V----8---.7U7U87778:---.---7.---7.---7.---7-7.---7-.------8---.----7.----7.----.--7U7---7.--7U7---7.--7U7---7.--7U7---7-V----8---.7U7U87778
\b_B\b_A\b`----\b_B\b_B\b_A\b`_UViiiiij78ABABABABKUUUUVAAAAABAAAAABAAAAABAABUUssijAAAAABAAAAABAAAAAB7AAAAA
`77777-----UUUUU77777777777AAAAAAAAAAA--A-A--A-A--A-A--A-A--AA--A-A--A-A--A7A--AA--A7A--A7A--A7A--A7A--A7A--sA-A--A--A--A--7--7---7---7---7---77--AAAAA77--7-A--7-A--7-A--7-A--AA--A-A--A-A--A7A--AA--A7A--A7A--A7A--A7A--A7A--sA-A--A--A--A--7--7---7---7---7---77--A____-----UUUUUAAAAA_____7UUUU-----UUUUUUUUUUUUUUU___________7_A--_7_A--_A--_A--_A--_A--_A--_A--_A--_A--_A--_7A--_A--_A--_A--_7A--_7A--_A--_A--_A--_A--_A--_A--_A--_A--sA-A--A--A--A--7--7--7---7---7---7-7--AAAAA_7_A--_7_A--_7--_A--_A--_A--_A--_7--_A--_A--_A--_7A--_7--_A--_A--_7A--_7A--_7--_A--_A--_A--_7--_A--_A--_A--sA-A--A--A--A--7--7--7---7---7---7-7-------UUUUUAAAAAAAAAA7UUUUUUUUU77--7-U--7-U--7-U--7-U--UU--U-U--U-U--U7U--UU--U7U--U7U--U7U--U7U--U7U--sA-A--A--A--A--7--7---7---7---7---77--7UUUUUU--U-U--U-U--U-U--U-U--UU--U-U--U-U--U7U--UU--U7U--U7U--U7U--U7U--U7U--sA-A--A--A--A--7--7---7---7---7---77--UUUUUU777--U7A7--U---U7--U7--U7--U7--U---U7--U7--U7--U77--U---U7--U7--U77--U77--U---U7--77--77--U---A7--A7--A7--sA-A--A--A--A--7--7--7---7---7---7-7--UUUUU_77A--_7AA--AA--AA--AA--AA--AA--_A--_A--_A--_A--_7A--_A--_A--_A--_7A--_7A--_A--_A--7A--7A--_A--AA--AA--AA--sA-A--A--A--A--7--7--7---7---7---7-7--77777_U7--_U7--_U7--_U7--_U7-7-AAAAA77777777_--77A_--7_--7_--7_--7_--7_--7_--7_--7_--7_--77_--7_--7_--7_--77_--77_--7_--7_--7_--7_--7_--A_--A_--A_--sA-A--A--A--A--7--7--7---7---7---7-7--77777
AAB-7777--77A7-------7---7---7---7--7---77--77--77--777--7---77--77--777--777--7---77--77--77--7---A7--A7--A7--sA-A--A--A--A--7--7--7---7---7---7-7---7777
AB------7----7----7----7--77--7-7--7-7--777--77--777--777--777--777--777--sA-A--A--A--A--7--7---7---7---7---77---7777
\biNP
main.attackInfoLookup
go.itab.*errors.errorString,error
main.flagInfoLookup
runtime.featureFlags
runtime.processorVersionInfo
runtime.vendorStringBytes
runtime.gomaxprocs
runtime.newprocs
runtime.timerprocPC
runtime.firstmoduledata
runtime.firstStackBarrierOffset
runtime.netpollInited
runtime.procAuxv
runtime.startupRandomData
runtime.urandom_dev
runtime.badmorestackg0Msg
runtime.badmorestackgsignalMsg
runtime.systemstackPC
runtime.systemstack_switchPC
go.itab.runtime.errorString,error
go.itab.*net.byRFC6724,sort.Interface
net.rfc6724policyTable
net.statictmp_54
go.itab.net.byMaskLength,sort.Interface
net.statictmp_96
net.confOnce
net.confVal
net.netGo
net.netCgo
net.getHostname
net.DefaultResolver
net.errTimeout
net.statictmp_196
go.itab.net.UnknownNetworkError,error
go.itab.*net.UnixAddr,net.Addr
go.itab.*net.AddrError,error
go.itab.*net.TCPAddr,net.Addr
go.itab.*net.UDPAddr,net.Addr
go.itab.*net.IPAddr,net.Addr
net.errNoSuitableAddress
net.errMissingAddress
go.itab.*net.OpError,error
net.testHookSetKeepAlive
net.errCanceled
go.itab.*net.UnixConn,net.Conn
go.itab.*net.TCPConn,net.Conn
go.itab.*net.UDPConn,net.Conn
go.itab.*net.IPConn,net.Conn
go.itab.*net.TCPListener,net.Listener
go.itab.*net.UnixListener,net.Listener
go.itab.*net.DNSError,error
net.errNoSuchHost
go.itab.*net.UDPConn,io.ReadWriter
go.itab.*net.TCPConn,io.ReadWriter
go.itab.*net.TCPConn,net.dnsConn
go.itab.*net.UDPConn,net.dnsConn
net.testHookDNSDialer
net.statictmp_549
net.statictmp_551
net.v4InV6Prefix
net.resolvConf
net.lookupOrderName
net.defaultNS
go.itab.*net.dnsRR_Header,net.dnsStruct
net.rr_mk
go.itab.*net.dnsRR_Header,net.dnsRR
go.itab.*net.dnsHeader,net.dnsStruct
go.itab.*net.dnsQuestion,net.dnsStruct
go.itab.*net.dnsMsgHdr,net.dnsStruct
net.errClosing
net.serverInit
net.connectFunc
net.getsockoptIntFunc
net.noDeadline
net.closeFunc
syscall.ForkLock
net.testHookHostsPath
net.hosts
net.flagNames
net.errInvalidInterface
net.zoneCache
net.errInvalidInterfaceIndex
net.errNoSuchInterface
net.errInvalidInterfaceName
net.IPv4zero
net.IPv6unspecified
net.IPv6loopback
net.IPv4bcast
net.classBMask
net.classCMask
net.classAMask
net.statictmp_1672
go.itab.*net.ParseError,error
go.itab.*net.IPAddr,net.sockaddr
net.statictmp_1939
net.ErrWriteToConnected
net.statictmp_2107
net.socketFunc
net.statictmp_2132
net.supportsIPv4map
net.supportsIPv4
go.itab.*syscall.SockaddrInet4,syscall.Sockaddr
net.IPv6zero
go.itab.*syscall.SockaddrInet6,syscall.Sockaddr
net.protocols
net.services
net.lookupGroup
net.onceReadProtocols
net.supportsIPv6
go.itab.net.writerOnly,io.Writer
net.threadLimit
net.statictmp_2600
go.itab.*sync.Mutex,sync.Locker
net.onceReadServices
net.accept4Func
net.acceptFunc
net.listenerBacklog
net.listenFunc
go.itab.*net.UDPAddr,net.sockaddr
net.errNoSuchMulticastInterface
go.itab.*net.TCPAddr,net.sockaddr
net.statictmp_3119
go.itab.*net.TCPConn,io.Writer
net.testHookDialTCP
net.statictmp_3307
go.itab.*net.UnixAddr,net.sockaddr
net._cgo_cb4050e05860_C2func_getaddrinfo
net._cgo_cb4050e05860_Cfunc_free
net._cgo_cb4050e05860_Cfunc_freeaddrinfo
net._cgo_cb4050e05860_Cfunc_gai_strerror
net._cgo_cb4050e05860_Cfunc__Cmalloc
go.itab.net.addrinfoErrno,error
go.itab.*net.Dialer,net.dnsDialer
go.itab.*net.dnsRR_CNAME,net.dnsRR
go.itab.*net.dnsRR_MX,net.dnsRR
go.itab.*net.dnsRR_NS,net.dnsRR
go.itab.*net.dnsRR_PTR,net.dnsRR
go.itab.*net.dnsRR_SOA,net.dnsRR
go.itab.*net.dnsRR_TXT,net.dnsRR
go.itab.*net.dnsRR_SRV,net.dnsRR
go.itab.*net.dnsRR_A,net.dnsRR
go.itab.*net.dnsRR_AAAA,net.dnsRR
net.aLongTimeAgo
net.testHookCanceledDial
net.testHookLookupIP
net.initdone·
net.statictmp_4077
net.statictmp_4090
net.statictmp_4091
net.IPv4allsys
net.IPv4allrouter
net.statictmp_4107
net.statictmp_4108
net.statictmp_4114
net.statictmp_4115
net.statictmp_4119
net.statictmp_4120
net.statictmp_4078
net.statictmp_4079
net.statictmp_4080
net.statictmp_4076
net.statictmp_4081
net.statictmp_4082
net.statictmp_4083
net.statictmp_4087
go.itab.*net.timeoutError,error
net.statictmp_4088
time.Local
time.localLoc
time.localOnce
encoding/binary.overflow
encoding/binary.initdone·
go.itab.*math/rand.rngSource,math/rand.Source
math/rand.globalRand
math/rand.rng_cooked
math/rand.initdone·
go.itab.*math/rand.lockedSource,math/rand.Source
sync.allPoolsMu
sync.allPools
go.itab.*sync.rlocker,sync.Locker
sync.initdone·
go.itab.*database/sql.driverConn,sync.Locker
database/sql.connectionRequestQueueSize
go.itab.*database/sql.driverStmt,sync.Locker
go.itab.*github.com/go-sql-driver/mysql.binaryRows,database/sql/driver.Rows
github.com/go-sql-driver/mysql.scanTypeRawBytes
github.com/go-sql-driver/mysql.scanTypeUint8
driver/mysql.scanTypeInt8
github.com/go-sql-driver/mysql.scanTypeNullInt
github.com/go-sql-driver/mysql.scanTypeUint16
github.com/go-sql-driver/mysql.scanTypeInt16
github.com/go-sql-driver/mysql.scanTypeUint32
github.com/go-sql-driver/mysql.scanTypeInt32
github.com/go-sql-driver/mysql.scanTypeFloat32
github.com/go-sql-driver/mysql.scanTypeNullFloat
github.com/go-sql-driver/mysql.scanTypeFloat64
github.com/go-sql-driver/mysql.scanTypeNullTime
github.com/go-sql-driver/mysql.scanTypeUint64
github.com/go-sql-driver/mysql.scanTypeInt64
github.com/go-sql-driver/mysql.scanTypeUnknown
github.com/go-sql-driver/mysql.ErrPktSyncMul
github.com/go-sql-driver/mysql.ErrPktSync
go.itab.*crypto/tls.Conn,net.Conn
github.com/go-sql-driver/mysql.tlsConfigRegister
unicode/utf8.first
io.ErrNoProgress
os.Kill
syscall.zeroSysProcAttr
syscall.zeroProcAttr
go.itab.*syscall.SockaddrNetlink,syscall.Sockaddr
syscall.SocketDisableIPv6
sync/atomic.CompareAndSwapUint64.args_stackmap
sync/atomic.CompareAndSwapUintptr.args_stackmap
sync/atomic.AddInt32.args_stackmap
sync/atomic.AddUint32.args_stackmap
sync/atomic.StoreUint32.args_stackmap
sync/atomic.StoreUint64.args_stackmap
sync/atomic.StoreUintptr.args_stackmap
unicode.Greek
unicode.IDS_Binary_Operator
unicode.foldGreek
go.itab.crypto/tls.rsaKeyAgreement,crypto/tls.keyAgreement
go.itab.*crypto/tls.ecdheKeyAgreement,crypto/tls.keyAgreement
crypto/rand.Reader
go.itab.*crypto/tls.clientHelloMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.serverHelloMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.helloRequestMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.serverKeyExchangeMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.certificateMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.newSessionTicketMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.serverHelloDoneMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.certificateVerifyMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.certificateRequestMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.finishedMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.clientKeyExchangeMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.nextProtoMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.certificateStatusMsg,crypto/tls.handshakeMessage
go.itab.net/url.EscapeError,error
go.itab.net/url.InvalidHostError,error
net/url.initdone·
crypto/x509.systemRoots
crypto/x509.systemRootsErr
go.itab.crypto/x509.SystemRootsError,error
go.itab.crypto/x509.HostnameError,error
crypto/rand.isEAGAIN
crypto/rand.altGetRandom
crypto/rand.useSyscall
crypto/rand.once
go.itab.*crypto/rand.devReader,io.Reader
go.itab.crypto/rand.hideAgainReader,io.Reader
crypto/rand.smallPrimesProduct
crypto/rand.initdone·
go.itab.*strings.Reader,io.ByteScanner
encoding/asn1.flagType
vendor/golang_org/x/crypto/curve25519.ladderstep.args_stackmap
internal/syscall/unix.randomUnsupported
D\f湥潣楤杮戯獡㙥⸴慒啷䱒湅潣楤杮　ం砀损潧瑟牨慥敤瑮祲嘀ం砀损潧楟楮瑴獬砀ం爀湵楴敭瀮汣瑮扡鰀ం爀湵楴敭昮湩晤湵瑣扡쐀ం爀湵楴敭琮灹汥湩k˩\f畲瑮浩
runtime.tflag
struct { runtime.enabled bool; runtime.pad [3]uint8; runtime.needed bool; runtime.cgo bool; runtime.alignme uint64 }
sync.Mutex
sync.Mutex
[]time.zoneTrans
time.zoneTrans
time.zoneTrans
map[*database/sql.driverStmt]bool
*database/sql.driverStmt
database/sql.driverStmt
database/sql.driverStmt
sync.Locker
sync.Locker
map[int]*main.Bot
*main.Bot
main.Bot
main.Bot
net.Conn
net.Conn
chan *main.Bot
chan *main.AttackSend
*main.AttackSend
main.AttackSend
main.AttackSend
*sync.Mutex
map[string]main.AttackInfo
main.AttackInfo
main.AttackInfo
map[string]main.FlagInfo
main.FlagInfo
main.FlagInfo
struct { runtime.allocfreetrace int32; runtime.cgocheck int32; runtime.efence int32; runtime.gccheckmark int32; runtime.gcpacertrace int32; runtime.gcshrinkstackoff int32; runtime.gcstackbarrieroff int32; runtime.gcstackbarrierall int32; runtime.gcrescanstacks int32; runtime.gcstoptheworld int32; runtime.gctrace int32; runtime.invalidptr int32; runtime.sbrk int32; runtime.scavenge int32; runtime.scheddetail int32; runtime.schedtrace int32; runtime.wbshadow int32 }
struct { runtime.lock runtime.mutex; runtime.lockOwner *runtime.g; runtime.enabled bool; runtime.shutdown bool; runtime.headerWritten bool; runtime.footerWritten bool; runtime.shutdownSema uint32; runtime.seqStart uint64; runtime.ticksStart int64; runtime.ticksEnd int64; runtime.timeStart int64; runtime.timeEnd int64; runtime.seqGC uint64; runtime.reading runtime.traceBufPtr; runtime.empty runtime.traceBufPtr; runtime.fullHead runtime.traceBufPtr; runtime.fullTail runtime.traceBufPtr; runtime.reader runtime.guintptr; runtime.stackTab runtime.traceStackTable; runtime.strings map[string]uint64; runtime.stringSeq uint64; runtime.markWorkerLabels [3]uint64; runtime.bufLock runtime.mutex; runtime.buf runtime.traceBufPtr }
runtime.gcControllerState
runtime.gcControllerState
struct { runtime.full uint64; runtime.empty uint64; runtime.pad0 [64]uint8; runtime.bytesMarked uint64; runtime.markrootNext uint32; runtime.markrootJobs uint32; runtime.nproc uint32; runtime.tstart int64; runtime.nwait uint32; runtime.ndone uint32; runtime.alldone runtime.note; runtime.helperDrainBlock bool; runtime.nFlushCacheRoots int; runtime.nDataRoots int; runtime.nBSSRoots int; runtime.nSpanRoots int; runtime.nStackRoots int; runtime.nRescanRoots int; runtime.markrootDone bool; runtime.startSema uint32; runtime.markDoneSema uint32; runtime.bgMarkReady runtime.note; runtime.bgMarkDone uint32; runtime.mode runtime.gcMode; runtime.totaltime int64; runtime.initialHeapLive uint64; runtime.assistQueue struct { runtime.lock runtime.mutex; runtime.head runtime.guintptr; runtime.tail runtime.guintptr }; runtime.rescan struct { runtime.lock runtime.mutex; runtime.list []runtime.guintptr }; runtime.stwprocs int32; runtime.maxprocs int32; runtime.tSweepTerm int64; runtime.tMark int64; runtime.tMarkTerm int64; runtime.tEnd int64; runtime.pauseNS int64; runtime.pauseStart int64; runtime.heap0 uint64; runtime.heap1 uint64; runtime.heap2 uint64; runtime.heapGoal uint64 }
struct { runtime.lock runtime.mutex; runtime.free *runtime.gcBits; runtime.next *runtime.gcBits; runtime.current *runtime.gcBits; runtime.previous *runtime.gcBits }
runtime.randomOrder
runtime.randomOrder
[256]struct { runtime.schedtick uint32; runtime.schedwhen int64; runtime.syscalltick uint32; runtime.syscallwhen int64 }
struct { runtime.schedtick uint32; runtime.schedwhen int64; runtime.syscalltick uint32; runtime.syscallwhen int64 }
struct { runtime.lock runtime.mutex; runtime.next int32; runtime.m map[int32]unsafe.Pointer; runtime.minv map[unsafe.Pointer]int32 }
struct { runtime.note runtime.note; runtime.mask [3]uint32; runtime.wanted [3]uint32; runtime.ignored [3]uint32; runtime.recv [3]uint32; runtime.state uint32; runtime.inuse bool }
struct { runtime.lock runtime.mutex; runtime.gp *runtime.g; runtime.created bool; runtime.sleeping bool; runtime.rescheduling bool; runtime.waitnote runtime.note; runtime.t []*runtime.timer }
runtime.errorString
sync.Pool
sync.Pool
sync.noCopy
sync.noCopy
reflect.tflag
reflect.flag
net.policyTable
net.policyTable
net.policyTableEntry
net.policyTableEntry
*net.IPNet
net.IPNet
net.IPNet
net.IP
net.IP
net.IPMask
net.IPMask
net.ipAttr
net.ipAttr
net.scope
sync.Once
sync.Once
*net.conf
net.conf
net.conf
*net.nssConf
net.nssConf
net.nssConf
map[string][]net.nssSource
[]net.nssSource
net.nssSource
net.nssSource
[]net.nssCriterion
net.nssCriterion
net.nssCriterion
*net.dnsConfig
net.dnsConfig
net.dnsConfig
*net.Resolver
net.Resolver
net.Resolver
func() net.dnsDialer
func() net.dnsDialer
net.dnsDialer
net.dnsDialer
*net.dnsDialer
[1]net.dnsQuestion
net.dnsQuestion
net.dnsQuestion
net.resolverConfig
net.resolverConfig
sync.RWMutex
sync.RWMutex
map[net.hostLookupOrder]string
net.hostLookupOrder
map[int]func() net.dnsRR
func() net.dnsRR
func() net.dnsRR
net.dnsRR
net.dnsRR
*net.dnsRR
struct { sync.Mutex; net.byName map[string][]string; net.byAddr map[string][]string; net.expire time.Time; net.path string; net.mtime time.Time; net.size int64 }
net.ipv6ZoneCache
net.ipv6ZoneCache
net.IPAddr
net.IPAddr
[2]struct { net.laddr net.TCPAddr; net.value int }
struct { net.laddr net.TCPAddr; net.value int }
net.TCPAddr
net.TCPAddr
sync.WaitGroup
sync.WaitGroup
func(context.Context, string, *net.TCPAddr, *net.TCPAddr) (*net.TCPConn, error)
func(context.Context, string, *net.TCPAddr, *net.TCPAddr) (*net.TCPConn, error)
*net.TCPAddr
*net.TCPConn
net.TCPConn
net.TCPConn
net.conn
net.conn
*net.netFD
net.netFD
net.netFD
net.fdMutex
net.fdMutex
net.Addr
net.Addr
net.pollDesc
net.pollDesc
**net.TCPConn
func(context.Context, func(context.Context, string) ([]net.IPAddr, error), string) ([]net.IPAddr, error)
func(context.Context, func(context.Context, string) ([]net.IPAddr, error), string) ([]net.IPAddr, error)
func(context.Context, string) ([]net.IPAddr, error)
func(context.Context, string) ([]net.IPAddr, error)
[]net.IPAddr
*[]net.IPAddr
[9]net.policyTableEntry
[5]net.hostLookupOrder
net.timeoutError
net.timeoutError
[1]time.zoneTrans
*math/rand.Rand
math/rand.Rand
math/rand.Rand
math/rand.Source
math/rand.Source
math/rand.Source64
math/rand.Source64
[]*sync.Pool
*sync.Pool
github.com/go-sql-driver/mysql.fieldFlag
*net.Conn
[]net.IP
struct { sync.RWMutex; reflect.m map[*reflect.rtype][]reflect.method }
struct { sync.RWMutex; reflect.m map[*reflect.rtype]*reflect.ptrType }
struct { sync.RWMutex; reflect.m map[uint32][]*reflect.rtype }
struct { sync.RWMutex; reflect.m map[reflect.layoutKey]reflect.layoutType }
syscall.SysProcAttr
syscall.SysProcAttr
[]syscall.SysProcIDMap
syscall.SysProcIDMap
syscall.SysProcIDMap
syscall.ProcAttr
syscall.ProcAttr
*syscall.SysProcAttr
func(uint16) crypto/tls.keyAgreement
func(uint16) crypto/tls.keyAgreement
crypto/tls.keyAgreement
crypto/tls.keyAgreement
*crypto/tls.keyAgreement
[]struct { crypto/x509.algo crypto/x509.SignatureAlgorithm; crypto/x509.oid encoding/asn1.ObjectIdentifier; crypto/x509.pubKeyAlgo crypto/x509.PublicKeyAlgorithm; crypto/x509.hash crypto.Hash }
struct { crypto/x509.algo crypto/x509.SignatureAlgorithm; crypto/x509.oid encoding/asn1.ObjectIdentifier; crypto/x509.pubKeyAlgo crypto/x509.PublicKeyAlgorithm; crypto/x509.hash crypto.Hash }
[]struct { crypto/x509.extKeyUsage crypto/x509.ExtKeyUsage; crypto/x509.oid encoding/asn1.ObjectIdentifier }
struct { crypto/x509.extKeyUsage crypto/x509.ExtKeyUsage; crypto/x509.oid encoding/asn1.ObjectIdentifier }
[16]struct { crypto/x509.algo crypto/x509.SignatureAlgorithm; crypto/x509.oid encoding/asn1.ObjectIdentifier; crypto/x509.pubKeyAlgo crypto/x509.PublicKeyAlgorithm; crypto/x509.hash crypto.Hash }
[12]struct { crypto/x509.extKeyUsage crypto/x509.ExtKeyUsage; crypto/x509.oid encoding/asn1.ObjectIdentifier }
struct { sync.Mutex; math/big.table [64]math/big.divisor }
*sync/atomic.Value
sync/atomic.Value
sync/atomic.Value
sync/atomic.noCopy
sync/atomic.noCopy
struct { F uintptr; runtime.ret *uintptr; runtime.addr unsafe.Pointer; runtime.n uintptr; runtime.prot int32; runtime.flags int32; runtime.fd int32; runtime.off uint32 }
struct { F uintptr; runtime.ret *int32; runtime.sig *uintptr; runtime.new *runtime.sigactiont; runtime.old *runtime.sigactiont }
struct { F uintptr; runtime.typ *runtime._type; runtime.src unsafe.Pointer; runtime.off uintptr; runtime.size uintptr }
struct { F uintptr; runtime.p *unsafe.Pointer; runtime.size uintptr; runtime.align uintptr; runtime.sysStat *uint64 }
struct { F uintptr; runtime.srcp *unsafe.Pointer; runtime.dstp *unsafe.Pointer; runtime.n int; runtime.typ **runtime._type }
struct { F uintptr; runtime.e *runtime.eface; runtime.f *runtime.eface; runtime.nret uintptr; runtime.fint *runtime._type; runtime.ot *runtime.ptrtype }
*runtime.gcControllerState
struct { F uintptr; runtime.gp *runtime.g; runtime.scanWork int64 }
struct { F uintptr; runtime.cache *runtime.pcvalueCache; runtime.gcw *runtime.gcWork; runtime.nextBarrier *uintptr; runtime.n *int; runtime.gp *runtime.g; runtime.barrierOffset *uintptr; runtime.sp uintptr }
runtime.gcDrainFlags
struct { F uintptr; runtime.s **runtime.mspan; runtime.h *runtime.mheap; runtime.npage uintptr; runtime.sizeclass int32; runtime.large bool }
runtime.randomEnum
runtime.randomEnum
struct { F uintptr; runtime.sp1 uintptr; runtime.sp2 uintptr; runtime.sp3 uintptr; runtime._g_ *runtime.g }
struct { F uintptr; runtime.fn **runtime.funcval; runtime.argp unsafe.Pointer; runtime.siz *int32; runtime.pc uintptr }
*runtime.randomOrder
runtime.semaProfileFlags
struct { F uintptr; runtime.n *int; runtime.pc uintptr; runtime.sp uintptr; runtime.gp *runtime.g; runtime.skip *int; runtime.pcbuf []uintptr }
*runtime.errorString
*struct { F uintptr; runtime.s **runtime.mspan; runtime.h *runtime.mheap; runtime.npage uintptr; runtime.sizeclass int32; runtime.large bool }
*struct { runtime.enabled bool; runtime.pad [3]uint8; runtime.needed bool; runtime.cgo bool; runtime.alignme uint64 }
*struct { runtime.schedtick uint32; runtime.schedwhen int64; runtime.syscalltick uint32; runtime.syscallwhen int64 }
*[256]struct { runtime.schedtick uint32; runtime.schedwhen int64; runtime.syscalltick uint32; runtime.syscallwhen int64 }
*struct { runtime.note runtime.note; runtime.mask [3]uint32; runtime.wanted [3]uint32; runtime.ignored [3]uint32; runtime.recv [3]uint32; runtime.state uint32; runtime.inuse bool }
*errors.errorString
errors.errorString
errors.errorString
*sync.notifyList
sync.notifyList
sync.notifyList
*sync.Cond
sync.Cond
sync.Cond
sync.copyChecker
*sync.copyChecker
*sync.Once
*sync.poolLocal
sync.poolLocal
sync.poolLocal
**sync.Pool
*sync.RWMutex
*sync.rlocker
sync.rlocker
sync.rlocker
*sync.WaitGroup
*syscall.ProcAttr
*syscall.SysProcIDMap
*syscall.NetlinkRouteRequest
syscall.NetlinkRouteRequest
syscall.NetlinkRouteRequest
syscall.NlMsghdr
syscall.NlMsghdr
syscall.RtGenmsg
syscall.RtGenmsg
*syscall.SockaddrNetlink
syscall.SockaddrNetlink
syscall.SockaddrNetlink
syscall.RawSockaddrNetlink
syscall.RawSockaddrNetlink
*syscall.NetlinkMessage
syscall.NetlinkMessage
syscall.NetlinkMessage
[]syscall.NetlinkMessage
*syscall.NetlinkRouteAttr
syscall.NetlinkRouteAttr
syscall.NetlinkRouteAttr
[]syscall.NetlinkRouteAttr
*syscall.SockaddrInet4
syscall.SockaddrInet4
syscall.SockaddrInet4
syscall.RawSockaddrInet4
syscall.RawSockaddrInet4
*syscall.SockaddrInet6
syscall.SockaddrInet6
syscall.SockaddrInet6
syscall.RawSockaddrInet6
syscall.RawSockaddrInet6
*time.zoneTrans
*[1]time.zoneTrans
*os.Process
os.Process
os.Process
*os.ProcAttr
os.ProcAttr
os.ProcAttr
*os.ProcessState
os.ProcessState
os.ProcessState
*struct { F uintptr; reflect.s *reflect.sliceHeader; reflect.size uintptr; reflect.typ *reflect.rtype; reflect.tmp unsafe.Pointer }
struct { F uintptr; reflect.s *reflect.sliceHeader; reflect.size uintptr; reflect.typ *reflect.rtype; reflect.tmp unsafe.Pointer }
[0]reflect.fieldScan
reflect.fieldScan
reflect.fieldScan
*reflect.fieldScan
[1]reflect.fieldScan
*struct { reflect.ityp *reflect.rtype; reflect.typ *reflect.rtype; reflect.link unsafe.Pointer; reflect.bad int32; reflect.unused int32; reflect.fun [100000]unsafe.Pointer }
struct { reflect.ityp *reflect.rtype; reflect.typ *reflect.rtype; reflect.link unsafe.Pointer; reflect.bad int32; reflect.unused int32; reflect.fun [100000]unsafe.Pointer }
*struct { sync.RWMutex; reflect.m map[*reflect.rtype][]reflect.method }
*struct { sync.RWMutex; reflect.m map[*reflect.rtype]*reflect.ptrType }
*struct { sync.RWMutex; reflect.m map[uint32][]*reflect.rtype }
*struct { sync.RWMutex; reflect.m map[reflect.layoutKey]reflect.layoutType }
fmt.fmtFlags
fmt.fmtFlags
noalg.struct { context.tcase uint16; context.ncase uint16; context.pollorder *uint8; context.lockorder *uint8; context.scase [2]struct { context.elem *uint8; context.chan *uint8; context.pc uintptr; context.kind uint16; context.so uint16; context.receivedp *uint8; context.releasetime uint64 }; context.lockorderarr [2]uint16; context.pollorderarr [2]uint16 }
noalg.struct { context.tcase uint16; context.ncase uint16; context.pollorder *uint8; context.lockorder *uint8; context.scase [2]struct { context.elem *uint8; context.chan *uint8; context.pc uintptr; context.kind uint16; context.so uint16; context.receivedp *uint8; context.releasetime uint64 }; context.lockorderarr [2]uint16; context.pollorderarr [2]uint16 }
noalg.[2]struct { context.elem *uint8; context.chan *uint8; context.pc uintptr; context.kind uint16; context.so uint16; context.receivedp *uint8; context.releasetime uint64 }
noalg.[2]struct { context.elem *uint8; context.chan *uint8; context.pc uintptr; context.kind uint16; context.so uint16; context.receivedp *uint8; context.releasetime uint64 }
noalg.struct { context.elem *uint8; context.chan *uint8; context.pc uintptr; context.kind uint16; context.so uint16; context.receivedp *uint8; context.releasetime uint64 }
noalg.struct { context.elem *uint8; context.chan *uint8; context.pc uintptr; context.kind uint16; context.so uint16; context.receivedp *uint8; context.releasetime uint64 }
*math/rand.rngSource
math/rand.rngSource
math/rand.rngSource
struct { F uintptr; R *math/rand.Rand }
*math/rand.lockedSource
math/rand.lockedSource
math/rand.lockedSource
struct { F uintptr; R math/rand.Source64 }
*struct { F uintptr; R math/rand.Source64 }
*net.ipAttr
*net.byRFC6724
net.byRFC6724
net.byRFC6724
[]net.ipAttr
*net.IPAddr
*net.IP
*net.UDPConn
net.UDPConn
net.UDPConn
*net.UDPAddr
net.UDPAddr
net.UDPAddr
net.byMaskLength
net.byMaskLength
*net.policyTableEntry
*net.nssSource
struct { F uintptr; net.debugLevel *int; net.dnsMode *string }
*net.Dialer
net.Dialer
net.Dialer
net.UnknownNetworkError
*net.UnixAddr
net.UnixAddr
net.UnixAddr
*net.Addr
*net.AddrError
net.AddrError
net.AddrError
*[1]net.Addr
[1]net.Addr
net.addrList
net.addrList
internal/nettrace.TraceKey
internal/nettrace.TraceKey
*internal/nettrace.Trace
internal/nettrace.Trace
internal/nettrace.Trace
*net.dialParam
net.dialParam
net.dialParam
*net.OpError
net.OpError
net.OpError
chan net.dialResult·1
net.dialResult·1
net.dialResult·1
*struct { F uintptr; net.primaries net.addrList; net.fallbacks net.addrList; net.dp *net.dialParam; net.results chan net.dialResult·1; net.returned chan struct {} }
struct { F uintptr; net.primaries net.addrList; net.fallbacks net.addrList; net.dp *net.dialParam; net.results chan net.dialResult·1; net.returned chan struct {} }
noalg.struct { net.tcase uint16; net.ncase uint16; net.pollorder *uint8; net.lockorder *uint8; net.scase [2]struct { net.elem *uint8; net.chan *uint8; net.pc uintptr; net.kind uint16; net.so uint16; net.receivedp *uint8; net.releasetime uint64 }; net.lockorderarr [2]uint16; net.pollorderarr [2]uint16 }
noalg.struct { net.tcase uint16; net.ncase uint16; net.pollorder *uint8; net.lockorder *uint8; net.scase [2]struct { net.elem *uint8; net.chan *uint8; net.pc uintptr; net.kind uint16; net.so uint16; net.receivedp *uint8; net.releasetime uint64 }; net.lockorderarr [2]uint16; net.pollorderarr [2]uint16 }
noalg.[2]struct { net.elem *uint8; net.chan *uint8; net.pc uintptr; net.kind uint16; net.so uint16; net.receivedp *uint8; net.releasetime uint64 }
noalg.[2]struct { net.elem *uint8; net.chan *uint8; net.pc uintptr; net.kind uint16; net.so uint16; net.receivedp *uint8; net.releasetime uint64 }
noalg.struct { net.elem *uint8; net.chan *uint8; net.pc uintptr; net.kind uint16; net.so uint16; net.receivedp *uint8; net.releasetime uint64 }
noalg.struct { net.elem *uint8; net.chan *uint8; net.pc uintptr; net.kind uint16; net.so uint16; net.receivedp *uint8; net.releasetime uint64 }
net.Listener
net.Listener
*net.dnsRR_Header
net.dnsRR_Header
net.dnsRR_Header
*net.DNSError
net.DNSError
net.DNSError
[]net.dnsRR
*net.dnsMsg
net.dnsMsg
net.dnsMsg
net.dnsMsgHdr
net.dnsMsgHdr
[]net.dnsQuestion
net.dnsConn
net.dnsConn
*[1]net.dnsQuestion
*net.dnsRR_AAAA
net.dnsRR_AAAA
net.dnsRR_AAAA
**net.dnsConfig
*net.resolverConfig
struct { F uintptr; R *net.resolverConfig }
chan net.racer·2
net.racer·2
net.racer·2
*net.file
net.file
net.file
*net.dnsHeader
net.dnsHeader
net.dnsHeader
*net.dnsQuestion
*net.dnsRR_CNAME
net.dnsRR_CNAME
net.dnsRR_CNAME
*net.dnsRR_MX
net.dnsRR_MX
net.dnsRR_MX
*net.dnsRR_NS
net.dnsRR_NS
net.dnsRR_NS
*net.dnsRR_PTR
net.dnsRR_PTR
net.dnsRR_PTR
*net.dnsRR_SOA
net.dnsRR_SOA
net.dnsRR_SOA
*net.dnsRR_TXT
net.dnsRR_TXT
net.dnsRR_TXT
*net.dnsRR_SRV
net.dnsRR_SRV
net.dnsRR_SRV
*net.dnsRR_A
net.dnsRR_A
net.dnsRR_A
*struct { F uintptr; net.off *int; net.msg []uint8; net.ok *bool }
struct { F uintptr; net.off *int; net.msg []uint8; net.ok *bool }
net.dnsStruct
net.dnsStruct
*struct { F uintptr; net.i *int; net.s *string }
struct { F uintptr; net.i *int; net.s *string }
*net.dnsMsgHdr
*[]net.dnsRR
*net.fdMutex
*net.pollDesc
net.Flags
*net.Interface
net.Interface
net.Interface
net.HardwareAddr
net.HardwareAddr
[]net.Interface
*net.ipv6ZoneCache
*syscall.IfInfomsg
syscall.IfInfomsg
syscall.IfInfomsg
*net.ParseError
net.ParseError
net.ParseError
net.sockaddr
net.sockaddr
*net.IPConn
net.IPConn
net.IPConn
func(net.Addr) bool
func(net.Addr) bool
func(net.IPAddr) net.Addr
func(net.IPAddr) net.Addr
func(net.IPAddr) bool
func(net.IPAddr) bool
*struct { F uintptr; net.net string; net.portnum int }
struct { F uintptr; net.net string; net.portnum int }
[1]net.IPAddr
internal/nettrace.LookupIPAltResolverKey
internal/nettrace.LookupIPAltResolverKey
*struct { F uintptr; net.ctx context.Context; net.resolverFunc func(context.Context, string) ([]net.IPAddr, error); net.host string }
struct { F uintptr; net.ctx context.Context; net.resolverFunc func(context.Context, string) ([]net.IPAddr, error); net.host string }
*struct { F uintptr; R *net.Resolver }
struct { F uintptr; R *net.Resolver }
*[1]net.IPAddr
*net.conn
*net.timeoutError
net.writerOnly
net.writerOnly
*net.nssCriterion
struct { F uintptr; net.conf *net.nssConf }
struct { F uintptr; net.c *[]net.nssCriterion }
*[]net.nssCriterion
func(syscall.Sockaddr) net.Addr
func(syscall.Sockaddr) net.Addr
*net.TCPListener
net.TCPListener
net.TCPListener
*net.UnixListener
net.UnixListener
net.UnixListener
*net.UnixConn
net.UnixConn
net.UnixConn
struct { F uintptr; net.ln *net.UnixListener }
**net._Ctype_char
*net._Ctype_char
net._Ctype_char
net._Ctype_int
**net._Ctype_struct_addrinfo
*net._Ctype_struct_addrinfo
net._Ctype_struct_addrinfo
net._Ctype_struct_addrinfo
net._Ctype_socklen_t
*net._Ctype_struct_sockaddr
net._Ctype_struct_sockaddr
net._Ctype_struct_sockaddr
net._Ctype_sa_family_t
[14]net._Ctype_char
net._Ctype_void
net._Ctype_void
*net._Ctype_int
net.addrinfoErrno
chan net.portLookupResult
net.portLookupResult
net.portLookupResult
chan<- net.portLookupResult
net.ipLookupResult
net.ipLookupResult
chan<- net.ipLookupResult
chan net.ipLookupResult
*net.hostLookupOrder
*net.IPMask
*net.byMaskLength
*net.UnknownNetworkError
*net.Flags
*net.HardwareAddr
*net.addrinfoErrno
*net.dialResult·1
*net.racer·2
*net.writerOnly
*net.portLookupResult
*struct { sync.Mutex; net.byName map[string][]string; net.byAddr map[string][]string; net.expire time.Time; net.path string; net.mtime time.Time; net.size int64 }
*[9]net.policyTableEntry
regexp/syntax.Flags
struct { F uintptr; regexp.p **regexp.onePassProg; regexp.visitQueue *regexp.queueOnePass; regexp.check *func(uint32, map[uint32]bool) bool; regexp.onePassRunes [][]int32; regexp.instQueue *regexp.queueOnePass }
noalg.struct { os/exec.tcase uint16; os/exec.ncase uint16; os/exec.pollorder *uint8; os/exec.lockorder *uint8; os/exec.scase [2]struct { os/exec.elem *uint8; os/exec.chan *uint8; os/exec.pc uintptr; os/exec.kind uint16; os/exec.so uint16; os/exec.receivedp *uint8; os/exec.releasetime uint64 }; os/exec.lockorderarr [2]uint16; os/exec.pollorderarr [2]uint16 }
noalg.struct { os/exec.tcase uint16; os/exec.ncase uint16; os/exec.pollorder *uint8; os/exec.lockorder *uint8; os/exec.scase [2]struct { os/exec.elem *uint8; os/exec.chan *uint8; os/exec.pc uintptr; os/exec.kind uint16; os/exec.so uint16; os/exec.receivedp *uint8; os/exec.releasetime uint64 }; os/exec.lockorderarr [2]uint16; os/exec.pollorderarr [2]uint16 }
noalg.[2]struct { os/exec.elem *uint8; os/exec.chan *uint8; os/exec.pc uintptr; os/exec.kind uint16; os/exec.so uint16; os/exec.receivedp *uint8; os/exec.releasetime uint64 }
noalg.[2]struct { os/exec.elem *uint8; os/exec.chan *uint8; os/exec.pc uintptr; os/exec.kind uint16; os/exec.so uint16; os/exec.receivedp *uint8; os/exec.releasetime uint64 }
noalg.struct { os/exec.elem *uint8; os/exec.chan *uint8; os/exec.pc uintptr; os/exec.kind uint16; os/exec.so uint16; os/exec.receivedp *uint8; os/exec.releasetime uint64 }
noalg.struct { os/exec.elem *uint8; os/exec.chan *uint8; os/exec.pc uintptr; os/exec.kind uint16; os/exec.so uint16; os/exec.receivedp *uint8; os/exec.releasetime uint64 }
**database/sql.driverStmt
[]*database/sql.driverStmt
struct { F uintptr; database/sql.openStmt *[]*database/sql.driverStmt; database/sql.dc *database/sql.driverConn }
*[]*database/sql.driverStmt
noalg.struct { database/sql.tcase uint16; database/sql.ncase uint16; database/sql.pollorder *uint8; database/sql.lockorder *uint8; database/sql.scase [2]struct { database/sql.elem *uint8; database/sql.chan *uint8; database/sql.pc uintptr; database/sql.kind uint16; database/sql.so uint16; database/sql.receivedp *uint8; database/sql.releasetime uint64 }; database/sql.lockorderarr [2]uint16; database/sql.pollorderarr [2]uint16 }
noalg.struct { database/sql.tcase uint16; database/sql.ncase uint16; database/sql.pollorder *uint8; database/sql.lockorder *uint8; database/sql.scase [2]struct { database/sql.elem *uint8; database/sql.chan *uint8; database/sql.pc uintptr; database/sql.kind uint16; database/sql.so uint16; database/sql.receivedp *uint8; database/sql.releasetime uint64 }; database/sql.lockorderarr [2]uint16; database/sql.pollorderarr [2]uint16 }
noalg.[2]struct { database/sql.elem *uint8; database/sql.chan *uint8; database/sql.pc uintptr; database/sql.kind uint16; database/sql.so uint16; database/sql.receivedp *uint8; database/sql.releasetime uint64 }
noalg.[2]struct { database/sql.elem *uint8; database/sql.chan *uint8; database/sql.pc uintptr; database/sql.kind uint16; database/sql.so uint16; database/sql.receivedp *uint8; database/sql.releasetime uint64 }
noalg.struct { database/sql.elem *uint8; database/sql.chan *uint8; database/sql.pc uintptr; database/sql.kind uint16; database/sql.so uint16; database/sql.receivedp *uint8; database/sql.releasetime uint64 }
noalg.struct { database/sql.elem *uint8; database/sql.chan *uint8; database/sql.pc uintptr; database/sql.kind uint16; database/sql.so uint16; database/sql.receivedp *uint8; database/sql.releasetime uint64 }
struct { F uintptr; database/sql.si *database/sql/driver.Stmt; database/sql.err *error; database/sql.ctx context.Context; database/sql.dc *database/sql.driverConn; database/sql.query string }
struct { F uintptr; database/sql.resi *database/sql/driver.Result; database/sql.err *error; database/sql.ctx context.Context; database/sql.execer database/sql/driver.Execer; database/sql.query string; database/sql.dargs []database/sql/driver.NamedValue }
struct { F uintptr; database/sql.rowsi *database/sql/driver.Rows; database/sql.err *error; database/sql.ctx context.Context; database/sql.queryer database/sql/driver.Queryer; database/sql.query string; database/sql.dargs []database/sql/driver.NamedValue }
struct { F uintptr; database/sql.want *int; database/sql.ds *database/sql.driverStmt }
struct { F uintptr; database/sql.doClose *bool; database/sql.ok *bool; database/sql.rs *database/sql.Rows }
noalg.map.iter[*database/sql.driverStmt]bool
noalg.map.iter[*database/sql.driverStmt]bool
*map.hdr[*database/sql.driverStmt]bool
noalg.map.hdr[*database/sql.driverStmt]bool
noalg.map.hdr[*database/sql.driverStmt]bool
*map.bucket[*database/sql.driverStmt]bool
noalg.map.bucket[*database/sql.driverStmt]bool
noalg.map.bucket[*database/sql.driverStmt]bool
noalg.[8]*database/sql.driverStmt
noalg.[8]*database/sql.driverStmt
*struct { F uintptr; database/sql.si *database/sql/driver.Stmt; database/sql.err *error; database/sql.ctx context.Context; database/sql.dc *database/sql.driverConn; database/sql.query string }
io.ByteScanner
io.ByteScanner
*struct { sync.Mutex; math/big.table [64]math/big.divisor }
internal/syscall/unix.GetRandomFlag
*crypto/rand.devReader
crypto/rand.devReader
crypto/rand.devReader
crypto/rand.hideAgainReader
crypto/rand.hideAgainReader
*crypto/rand.hideAgainReader
encoding/asn1.Flag
*crypto/x509/pkix.RDNSequence
crypto/x509/pkix.RDNSequence
crypto/x509/pkix.RDNSequence
crypto/x509.HostnameError
crypto/x509.HostnameError
crypto/x509.SystemRootsError
crypto/x509.SystemRootsError
*struct { crypto/x509.algo crypto/x509.SignatureAlgorithm; crypto/x509.oid encoding/asn1.ObjectIdentifier; crypto/x509.pubKeyAlgo crypto/x509.PublicKeyAlgorithm; crypto/x509.hash crypto.Hash }
*struct { crypto/x509.extKeyUsage crypto/x509.ExtKeyUsage; crypto/x509.oid encoding/asn1.ObjectIdentifier }
*crypto/x509.HostnameError
*crypto/x509.SystemRootsError
crypto/tls.rsaKeyAgreement
crypto/tls.rsaKeyAgreement
**sync.Cond
*crypto/tls.serverHelloMsg
crypto/tls.serverHelloMsg
crypto/tls.serverHelloMsg
*crypto/tls.clientHelloMsg
crypto/tls.clientHelloMsg
crypto/tls.clientHelloMsg
*crypto/tls.clientKeyExchangeMsg
crypto/tls.clientKeyExchangeMsg
crypto/tls.clientKeyExchangeMsg
*crypto/tls.serverKeyExchangeMsg
crypto/tls.serverKeyExchangeMsg
crypto/tls.serverKeyExchangeMsg
*crypto/tls.serverHelloDoneMsg
crypto/tls.serverHelloDoneMsg
crypto/tls.serverHelloDoneMsg
*crypto/tls.certificateStatusMsg
crypto/tls.certificateStatusMsg
crypto/tls.certificateStatusMsg
*crypto/tls.certificateRequestMsg
crypto/tls.certificateRequestMsg
crypto/tls.certificateRequestMsg
*crypto/tls.certificateMsg
crypto/tls.certificateMsg
crypto/tls.certificateMsg
crypto/tls.certificateVerifyMsg
crypto/tls.certificateVerifyMsg
*crypto/tls.finishedMsg
crypto/tls.finishedMsg
crypto/tls.finishedMsg
*crypto/tls.newSessionTicketMsg
crypto/tls.newSessionTicketMsg
crypto/tls.newSessionTicketMsg
crypto/tls.nextProtoMsg
crypto/tls.nextProtoMsg
*crypto/tls.nextProtoMsg
*crypto/tls.certificateVerifyMsg
*crypto/tls.ecdheKeyAgreement
crypto/tls.ecdheKeyAgreement
crypto/tls.ecdheKeyAgreement
*crypto/tls.rsaKeyAgreement
net/url.EscapeError
net/url.InvalidHostError
net/url.encoding
*net/url.EscapeError
*net/url.InvalidHostError
github.com/go-sql-driver/mysql.clientFlag
github.com/go-sql-driver/mysql.statusFlag
noalg.struct { github.com/go-sql-driver/mysql.tcase uint16; github.com/go-sql-driver/mysql.ncase uint16; github.com/go-sql-driver/mysql.pollorder *uint8; github.com/go-sql-driver/mysql.lockorder *uint8; github.com/go-sql-driver/mysql.scase [2]struct { github.com/go-sql-driver/mysql.elem *uint8; github.com/go-sql-driver/mysql.chan *uint8; github.com/go-sql-driver/mysql.pc uintptr; github.com/go-sql-driver/mysql.kind uint16; github.com/go-sql-driver/mysql.so uint16; github.com/go-sql-driver/mysql.receivedp *uint8; github.com/go-sql-driver/mysql.releasetime uint64 }; github.com/go-sql-driver/mysql.lockorderarr [2]uint16; github.com/go-sql-driver/mysql.pollorderarr [2]uint16 }
noalg.struct { github.com/go-sql-driver/mysql.tcase uint16; github.com/go-sql-driver/mysql.ncase uint16; github.com/go-sql-driver/mysql.pollorder *uint8; github.com/go-sql-driver/mysql.lockorder *uint8; github.com/go-sql-driver/mysql.scase [2]struct { github.com/go-sql-driver/mysql.elem *uint8; github.com/go-sql-driver/mysql.chan *uint8; github.com/go-sql-driver/mysql.pc uintptr; github.com/go-sql-driver/mysql.kind uint16; github.com/go-sql-driver/mysql.so uint16; github.com/go-sql-driver/mysql.receivedp *uint8; github.com/go-sql-driver/mysql.releasetime uint64 }; github.com/go-sql-driver/mysql.lockorderarr [2]uint16; github.com/go-sql-driver/mysql.pollorderarr [2]uint16 }
noalg.[2]struct { github.com/go-sql-driver/mysql.elem *uint8; github.com/go-sql-driver/mysql.chan *uint8; github.com/go-sql-driver/mysql.pc uintptr; github.com/go-sql-driver/mysql.kind uint16; github.com/go-sql-driver/mysql.so uint16; github.com/go-sql-driver/mysql.receivedp *uint8; github.com/go-sql-driver/mysql.releasetime uint64 }
noalg.[2]struct { github.com/go-sql-driver/mysql.elem *uint8; github.com/go-sql-driver/mysql.chan *uint8; github.com/go-sql-driver/mysql.pc uintptr; github.com/go-sql-driver/mysql.kind uint16; github.com/go-sql-driver/mysql.so uint16; github.com/go-sql-driver/mysql.receivedp *uint8; github.com/go-sql-driver/mysql.releasetime uint64 }
noalg.struct { github.com/go-sql-driver/mysql.elem *uint8; github.com/go-sql-driver/mysql.chan *uint8; github.com/go-sql-driver/mysql.pc uintptr; github.com/go-sql-driver/mysql.kind uint16; github.com/go-sql-driver/mysql.so uint16; github.com/go-sql-driver/mysql.receivedp *uint8; github.com/go-sql-driver/mysql.releasetime uint64 }
noalg.struct { github.com/go-sql-driver/mysql.elem *uint8; github.com/go-sql-driver/mysql.chan *uint8; github.com/go-sql-driver/mysql.pc uintptr; github.com/go-sql-driver/mysql.kind uint16; github.com/go-sql-driver/mysql.so uint16; github.com/go-sql-driver/mysql.receivedp *uint8; github.com/go-sql-driver/mysql.releasetime uint64 }
*github.com/go-sql-driver/mysql.binaryRows
github.com/go-sql-driver/mysql.binaryRows
github.com/go-sql-driver/mysql.binaryRows
github.com/go-sql-driver/mysql.myRnd
github.com/go-sql-driver/mysql.myRnd
noalg.struct { github.com/go-sql-driver/mysql.tcase uint16; github.com/go-sql-driver/mysql.ncase uint16; github.com/go-sql-driver/mysql.pollorder *uint8; github.com/go-sql-driver/mysql.lockorder *uint8; github.com/go-sql-driver/mysql.scase [3]struct { github.com/go-sql-driver/mysql.elem *uint8; github.com/go-sql-driver/mysql.chan *uint8; github.com/go-sql-driver/mysql.pc uintptr; github.com/go-sql-driver/mysql.kind uint16; github.com/go-sql-driver/mysql.so uint16; github.com/go-sql-driver/mysql.receivedp *uint8; github.com/go-sql-driver/mysql.releasetime uint64 }; github.com/go-sql-driver/mysql.lockorderarr [3]uint16; github.com/go-sql-driver/mysql.pollorderarr [3]uint16 }
noalg.struct { github.com/go-sql-driver/mysql.tcase uint16; github.com/go-sql-driver/mysql.ncase uint16; github.com/go-sql-driver/mysql.pollorder *uint8; github.com/go-sql-driver/mysql.lockorder *uint8; github.com/go-sql-driver/mysql.scase [3]struct { github.com/go-sql-driver/mysql.elem *uint8; github.com/go-sql-driver/mysql.chan *uint8; github.com/go-sql-driver/mysql.pc uintptr; github.com/go-sql-driver/mysql.kind uint16; github.com/go-sql-driver/mysql.so uint16; github.com/go-sql-driver/mysql.receivedp *uint8; github.com/go-sql-driver/mysql.releasetime uint64 }; github.com/go-sql-driver/mysql.lockorderarr [3]uint16; github.com/go-sql-driver/mysql.pollorderarr [3]uint16 }
noalg.[3]struct { github.com/go-sql-driver/mysql.elem *uint8; github.com/go-sql-driver/mysql.chan *uint8; github.com/go-sql-driver/mysql.pc uintptr; github.com/go-sql-driver/mysql.kind uint16; github.com/go-sql-driver/mysql.so uint16; github.com/go-sql-driver/mysql.receivedp *uint8; github.com/go-sql-driver/mysql.releasetime uint64 }
noalg.[3]struct { github.com/go-sql-driver/mysql.elem *uint8; github.com/go-sql-driver/mysql.chan *uint8; github.com/go-sql-driver/mysql.pc uintptr; github.com/go-sql-driver/mysql.kind uint16; github.com/go-sql-driver/mysql.so uint16; github.com/go-sql-driver/mysql.receivedp *uint8; github.com/go-sql-driver/mysql.releasetime uint64 }
*main.Attack
main.Attack
main.Attack
noalg.map.iter[string]main.FlagInfo
noalg.map.iter[string]main.FlagInfo
*main.FlagInfo
*map.hdr[string]main.FlagInfo
noalg.map.hdr[string]main.FlagInfo
noalg.map.hdr[string]main.FlagInfo
*map.bucket[string]main.FlagInfo
noalg.map.bucket[string]main.FlagInfo
noalg.map.bucket[string]main.FlagInfo
noalg.[8]main.FlagInfo
noalg.[8]main.FlagInfo
noalg.map.iter[string]main.AttackInfo
noalg.map.iter[string]main.AttackInfo
*main.AttackInfo
*map.hdr[string]main.AttackInfo
noalg.map.hdr[string]main.AttackInfo
noalg.map.hdr[string]main.AttackInfo
*map.bucket[string]main.AttackInfo
noalg.map.bucket[string]main.AttackInfo
noalg.map.bucket[string]main.AttackInfo
noalg.[8]main.AttackInfo
noalg.[8]main.AttackInfo
noalg.struct { main.tcase uint16; main.ncase uint16; main.pollorder *uint8; main.lockorder *uint8; main.scase [2]struct { main.elem *uint8; main.chan *uint8; main.pc uintptr; main.kind uint16; main.so uint16; main.receivedp *uint8; main.releasetime uint64 }; main.lockorderarr [2]uint16; main.pollorderarr [2]uint16 }
noalg.struct { main.tcase uint16; main.ncase uint16; main.pollorder *uint8; main.lockorder *uint8; main.scase [2]struct { main.elem *uint8; main.chan *uint8; main.pc uintptr; main.kind uint16; main.so uint16; main.receivedp *uint8; main.releasetime uint64 }; main.lockorderarr [2]uint16; main.pollorderarr [2]uint16 }
noalg.[2]struct { main.elem *uint8; main.chan *uint8; main.pc uintptr; main.kind uint16; main.so uint16; main.receivedp *uint8; main.releasetime uint64 }
noalg.[2]struct { main.elem *uint8; main.chan *uint8; main.pc uintptr; main.kind uint16; main.so uint16; main.receivedp *uint8; main.releasetime uint64 }
noalg.struct { main.elem *uint8; main.chan *uint8; main.pc uintptr; main.kind uint16; main.so uint16; main.receivedp *uint8; main.releasetime uint64 }
noalg.struct { main.elem *uint8; main.chan *uint8; main.pc uintptr; main.kind uint16; main.so uint16; main.receivedp *uint8; main.releasetime uint64 }
noalg.map.iter[int]*main.Bot
noalg.map.iter[int]*main.Bot
**main.Bot
*map.hdr[int]*main.Bot
noalg.map.hdr[int]*main.Bot
noalg.map.hdr[int]*main.Bot
*map.bucket[int]*main.Bot
noalg.map.bucket[int]*main.Bot
noalg.map.bucket[int]*main.Bot
noalg.[8]*main.Bot
noalg.[8]*main.Bot
noalg.struct { main.tcase uint16; main.ncase uint16; main.pollorder *uint8; main.lockorder *uint8; main.scase [5]struct { main.elem *uint8; main.chan *uint8; main.pc uintptr; main.kind uint16; main.so uint16; main.receivedp *uint8; main.releasetime uint64 }; main.lockorderarr [5]uint16; main.pollorderarr [5]uint16 }
noalg.struct { main.tcase uint16; main.ncase uint16; main.pollorder *uint8; main.lockorder *uint8; main.scase [5]struct { main.elem *uint8; main.chan *uint8; main.pc uintptr; main.kind uint16; main.so uint16; main.receivedp *uint8; main.releasetime uint64 }; main.lockorderarr [5]uint16; main.pollorderarr [5]uint16 }
noalg.[5]struct { main.elem *uint8; main.chan *uint8; main.pc uintptr; main.kind uint16; main.so uint16; main.receivedp *uint8; main.releasetime uint64 }
noalg.[5]struct { main.elem *uint8; main.chan *uint8; main.pc uintptr; main.kind uint16; main.so uint16; main.receivedp *uint8; main.releasetime uint64 }
[]val<func() net.dnsRR>
bucket<int,func() net.dnsRR>
*bucket<int,func() net.dnsRR>
hash<int,func() net.dnsRR>
*hash<int,func() net.dnsRR>
[]key<net.hostLookupOrder>
bucket<net.hostLookupOrder,string>
*bucket<net.hostLookupOrder,string>
hash<net.hostLookupOrder,string>
*hash<net.hostLookupOrder,string>
[]val<[]net.nssSource>
bucket<string,[]net.nssSource>
*bucket<string,[]net.nssSource>
hash<string,[]net.nssSource>
*hash<string,[]net.nssSource>
[]val<main.FlagInfo>
bucket<string,main.FlagInfo>
*bucket<string,main.FlagInfo>
hash<string,main.FlagInfo>
*hash<string,main.FlagInfo>
[]val<main.AttackInfo>
bucket<string,main.AttackInfo>
*bucket<string,main.AttackInfo>
hash<string,main.AttackInfo>
*hash<string,main.AttackInfo>
[]val<*main.Bot>
bucket<int,*main.Bot>
*bucket<int,*main.Bot>
hash<int,*main.Bot>
*hash<int,*main.Bot>
[]key<*database/sql.driverStmt>
bucket<*database/sql.driverStmt,bool>
*bucket<*database/sql.driverStmt,bool>
hash<*database/sql.driverStmt,bool>
*hash<*database/sql.driverStmt,bool>
sudog<net.ipLookupResult>
waitq<net.ipLookupResult>
*sudog<net.ipLookupResult>
hchan<net.ipLookupResult>
*hchan<net.ipLookupResult>
sudog<net.portLookupResult>
waitq<net.portLookupResult>
*sudog<net.portLookupResult>
hchan<net.portLookupResult>
*hchan<net.portLookupResult>
sudog<net.racer·2>
waitq<net.racer·2>
*sudog<net.racer·2>
hchan<net.racer·2>
*hchan<net.racer·2>
sudog<net.dialResult·1>
waitq<net.dialResult·1>
*sudog<net.dialResult·1>
hchan<net.dialResult·1>
*hchan<net.dialResult·1>
sudog<*main.AttackSend>
waitq<*main.AttackSend>
*sudog<*main.AttackSend>
hchan<*main.AttackSend>
*hchan<*main.AttackSend>
sudog<*main.Bot>
waitq<*main.Bot>
*sudog<*main.Bot>
hchan<*main.Bot>
*hchan<*main.Bot>
sync/atomic.(*Value).Load
sync/atomic.(*Value).Store
sync/atomic.(*noCopy).Lock
sync/atomic.CompareAndSwapUintptr
sync/atomic.CompareAndSwapUint64
sync/atomic.AddInt32
sync/atomic.AddUint32
sync/atomic.StoreUint32
sync/atomic.StoreUint64
sync/atomic.StoreUintptr
type..hash.sync/atomic.Value
type..eq.sync/atomic.Value
sync/atomic.StorePointer
sync/atomic.CompareAndSwapPointer
runtime.GOMAXPROCS
runtime.errorString.Error
runtime.(*gcControllerState).startCycle
runtime.(*gcControllerState).endCycle
runtime.(*gcControllerState).enlistWorker
runtime.(*gcControllerState).findRunnableGCWorker
sync.runtime_registerPoolCleanup
runtime.gchelperstart
runtime.scanstack
runtime.scanframeworker
runtime.queueRescan
runtime.dequeueRescan
runtime.scanblock
runtime.scanobject
runtime.greyobject
sync.event
net.runtime_pollServerInit
runtime.netpollinited
net.runtime_pollOpen
net.runtime_pollClose
net.runtime_pollReset
net.runtime_pollWait
net.runtime_pollSetDeadline
net.runtime_pollUnblock
runtime.netpollready
runtime.netpollblockcommit
runtime.netpollblock
runtime.netpollunblock
runtime.netpolldeadlineimpl
runtime.netpollDeadline
runtime.netpollReadDeadline
runtime.netpollWriteDeadline
runtime.netpollinit
runtime.netpollopen
runtime.netpollclose
runtime.netpoll
runtime.getproccount
runtime.newosproc
runtime.getRandomData
runtime.sigprocmask
runtime.deferproc
sync.throw
runtime.gcprocs
runtime.needaddgcproc
runtime.casfrom_Gscanstatus
runtime.castogscanstatus
runtime.scang
runtime.exitsyscallfast_pidle
runtime.beforefork
syscall.runtime_BeforeFork
runtime.afterfork
syscall.runtime_AfterFork
runtime.newproc
runtime.newproc1
runtime._System
runtime.procresize
runtime.pidleput
runtime.pidleget
sync.runtime_procPin
sync.runtime_procUnpin
sync/atomic.runtime_procPin
sync/atomic.runtime_procUnpin
sync.runtime_canSpin
sync.runtime_doSpin
runtime.(*randomOrder).reset
runtime.extendRandom
sync.runtime_Semacquire
net.runtime_Semacquire
sync.runtime_Semrelease
sync.runtime_SemacquireMutex
net.runtime_Semrelease
sync.runtime_notifyListAdd
sync.runtime_notifyListWait
sync.runtime_notifyListNotifyAll
sync.runtime_notifyListNotifyOne
sync.runtime_notifyListCheck
runtime.resetcpuprofiler
runtime.msigrestore
runtime.syncadjustsudogs
runtime.slicerunetostring
runtime.badsystemstack
runtime.timerproc
net.runtimeNano
runtime.traceProcFree
runtime.traceGomaxprocs
runtime.traceProcStart
runtime.traceProcStop
runtime.traceGCScanStart
runtime.traceGCScanDone
runtime.(*gcControllerState).findRunnableGCWorker.func1
runtime.scanstack.func1
runtime.newproc.func1
runtime.(*errorString).Error
runtime.systemstack_switch
runtime.systemstack
runtime.procyield
runtime.fastrand
runtime.raiseproc
runtime.rtsigprocmask
runtime.sigreturn
type..hash.struct { F uintptr; runtime.s **runtime.mspan; runtime.size *uintptr; runtime.needzero bool }
type..eq.struct { F uintptr; runtime.s **runtime.mspan; runtime.size *uintptr; runtime.needzero bool }
type..hash.runtime.gcControllerState
type..eq.runtime.gcControllerState
type..hash.struct { F uintptr; runtime.s **runtime.mspan; runtime.h *runtime.mheap; runtime.npage uintptr; runtime.sizeclass int32; runtime.large bool }
type..eq.struct { F uintptr; runtime.s **runtime.mspan; runtime.h *runtime.mheap; runtime.npage uintptr; runtime.sizeclass int32; runtime.large bool }
type..hash.struct { F uintptr; runtime.h *runtime.mheap; runtime.s *runtime.mspan; runtime.acct int32 }
type..eq.struct { F uintptr; runtime.h *runtime.mheap; runtime.s *runtime.mspan; runtime.acct int32 }
type..hash.struct { runtime.enabled bool; runtime.pad [3]uint8; runtime.needed bool; runtime.cgo bool; runtime.alignme uint64 }
type..eq.struct { runtime.enabled bool; runtime.pad [3]uint8; runtime.needed bool; runtime.cgo bool; runtime.alignme uint64 }
type..hash.struct { runtime.schedtick uint32; runtime.schedwhen int64; runtime.syscalltick uint32; runtime.syscallwhen int64 }
type..eq.struct { runtime.schedtick uint32; runtime.schedwhen int64; runtime.syscalltick uint32; runtime.syscallwhen int64 }
type..hash.[256]struct { runtime.schedtick uint32; runtime.schedwhen int64; runtime.syscalltick uint32; runtime.syscallwhen int64 }
type..eq.[256]struct { runtime.schedtick uint32; runtime.schedwhen int64; runtime.syscalltick uint32; runtime.syscallwhen int64 }
type..hash.struct { runtime.note runtime.note; runtime.mask [3]uint32; runtime.wanted [3]uint32; runtime.ignored [3]uint32; runtime.recv [3]uint32; runtime.state uint32; runtime.inuse bool }
type..eq.struct { runtime.note runtime.note; runtime.mask [3]uint32; runtime.wanted [3]uint32; runtime.ignored [3]uint32; runtime.recv [3]uint32; runtime.state uint32; runtime.inuse bool }
errors.(*errorString).Error
strconv.AppendQuoteRuneToASCII
sync.(*Cond).Wait
sync.(*Cond).Signal
sync.(*Cond).Broadcast
sync.(*copyChecker).check
sync.(*noCopy).Lock
sync.(*Mutex).Lock
sync.(*Mutex).Unlock
sync.(*Once).Do
sync.(*Pool).Put
sync.(*Pool).Get
sync.(*Pool).getSlow
sync.(*Pool).pin
sync.(*Pool).pinSlow
sync.poolCleanup
sync.init.1
sync.init.2
sync.(*RWMutex).RLock
sync.(*RWMutex).RUnlock
sync.(*RWMutex).Lock
sync.(*RWMutex).Unlock
sync.(*rlocker).Lock
sync.(*rlocker).Unlock
sync.(*WaitGroup).Add
sync.(*WaitGroup).Done
sync.init
type..hash.sync.Cond
type..eq.sync.Cond
sync.(*poolLocal).Lock
sync.(*poolLocal).Unlock
syscall.forkAndExecInChild
syscall.forkExecPipe
syscall.writeIDMappings
syscall.writeUidGidMappings
syscall.forkExec
syscall.StartProcess
syscall.(*NetlinkRouteRequest).toWireFormat
syscall.newNetlinkRouteRequest
syscall.NetlinkRIB
syscall.ParseNetlinkMessage
syscall.ParseNetlinkRouteAttr
syscall.(*SockaddrInet4).sockaddr
syscall.(*SockaddrInet6).sockaddr
syscall.(*SockaddrNetlink).sockaddr
syscall.Bind
syscall.Connect
syscall.Socket
syscall.Kill
syscall.bind
syscall.connect
syscall.socket
type..hash.syscall.NetlinkRouteRequest
type..eq.syscall.NetlinkRouteRequest
type..hash.syscall.SockaddrInet4
type..eq.syscall.SockaddrInet4
time.(*Location).lookupFirstZone
time.(*Location).firstZoneUsed
time.initLocal
type..hash.time.zoneTrans
type..eq.time.zoneTrans
type..hash.[1]time.zoneTrans
type..eq.[1]time.zoneTrans
os.newProcess
os.(*Process).setDone
os.(*Process).done
os.StartProcess
os.(*Process).Release
os.(*Process).Kill
os.(*Process).Wait
os.(*Process).Signal
os.(*ProcessState).Sys
os.startProcess
os.(*Process).kill
os.(*ProcessState).String
os.(*Process).wait
os.(*Process).signal
os.(*Process).release
os.Hostname
os.hostname
os.(*Process).blockUntilWaitable
type..hash.os.Process
type..eq.os.Process
type..hash.os.ProcessState
type..eq.os.ProcessState
reflect.flag.mustBe
reflect.flag.mustBeExported
reflect.flag.mustBeAssignable
go.(*struct { sync.RWMutex; reflect.m map[*reflect.rtype][]reflect.method }).Lock
go.(*struct { sync.RWMutex; reflect.m map[*reflect.rtype][]reflect.method }).Unlock
go.(*struct { sync.RWMutex; reflect.m map[*reflect.rtype]*reflect.ptrType }).Lock
go.(*struct { sync.RWMutex; reflect.m map[*reflect.rtype]*reflect.ptrType }).Unlock
go.(*struct { sync.RWMutex; reflect.m map[uint32][]*reflect.rtype }).Lock
go.(*struct { sync.RWMutex; reflect.m map[uint32][]*reflect.rtype }).Unlock
go.(*struct { sync.RWMutex; reflect.m map[reflect.layoutKey]reflect.layoutType }).Lock
go.(*struct { sync.RWMutex; reflect.m map[reflect.layoutKey]reflect.layoutType }).Unlock
fmt.(*pp).Flag
math/rand.NewSource
math/rand.New
math/rand.(*Rand).Seed
math/rand.(*Rand).Int63
math/rand.(*Rand).Uint64
math/rand.(*Rand).Int
math/rand.(*Rand).Read
math/rand.read
math/rand.Seed
math/rand.Int
math/rand.(*lockedSource).Int63
math/rand.(*lockedSource).Uint64
math/rand.(*lockedSource).Seed
math/rand.(*lockedSource).seedPos
math/rand.(*lockedSource).read
math/rand.(*rngSource).Seed
math/rand.(*rngSource).Int63
math/rand.(*rngSource).Uint64
math/rand.init
math/rand.(*Rand).Int63-fm
math/rand.(Source64).Int63-fm
type..hash.math/rand.Rand
type..eq.math/rand.Rand
type..hash.math/rand.lockedSource
type..eq.math/rand.lockedSource
type..hash.struct { F uintptr; R math/rand.Source64 }
type..eq.struct { F uintptr; R math/rand.Source64 }
net.sortByRFC6724
net.sortByRFC6724withSrcs
net.srcAddrs
net.ipAttrOf
net.(*byRFC6724).Len
net.(*byRFC6724).Swap
net.(*byRFC6724).Less
net.init.1
net.byMaskLength.Len
net.byMaskLength.Swap
net.byMaskLength.Less
net.mustCIDR
net.policyTable.Classify
net.classifyScope
net.commonPrefixLen
net.systemConf
net.initConfVal
net.(*conf).canUseCgo
net.(*conf).hostLookupOrder
net.goDebugNetDNS
net.isLocalhost
net.isGateway
net.(*Dialer).deadline
net.partialDeadline
net.parseNetwork
net.(*Resolver).resolveAddrList
net.(*Dialer).Dial
net.(*Dialer).DialContext
net.dialParallel
net.dialSerial
net.dialSingle
net.Listen
net.answer
net.equalASCIILabel
net.isDomainName
net.absDomainName
net.(*UDPConn).dnsRoundTrip
net.dnsRoundTripUDP
net.(*TCPConn).dnsRoundTrip
net.dnsRoundTripTCP
net.(*Dialer).dialDNS
net.exchange
net.tryOneName
net.addrRecordList
net.(*resolverConfig).init
net.(*resolverConfig).tryUpdate
net.(*resolverConfig).tryAcquireSema
net.(*resolverConfig).releaseSema
net.avoidDNS
net.(*dnsConfig).nameList
net.hostLookupOrder.String
net.goLookupIPFiles
net.goLookupIP
net.goLookupIPCNAMEOrder
net.dnsReadConfig
net.(*dnsConfig).serverOffset
net.dnsDefaultSearch
net.(*dnsHeader).Walk
net.(*dnsQuestion).Walk
net.(*dnsRR_Header).Header
net.(*dnsRR_Header).Walk
net.(*dnsRR_CNAME).Header
net.(*dnsRR_CNAME).Walk
net.(*dnsRR_MX).Header
net.(*dnsRR_MX).Walk
net.(*dnsRR_NS).Header
net.(*dnsRR_NS).Walk
net.(*dnsRR_PTR).Header
net.(*dnsRR_PTR).Walk
net.(*dnsRR_SOA).Header
net.(*dnsRR_SOA).Walk
net.(*dnsRR_TXT).Header
net.(*dnsRR_TXT).Walk
net.(*dnsRR_SRV).Header
net.(*dnsRR_SRV).Walk
net.(*dnsRR_A).Header
net.(*dnsRR_A).Walk
net.(*dnsRR_AAAA).Header
net.(*dnsRR_AAAA).Walk
net.packDomainName
net.unpackDomainName
net.packStruct
net.unpackStruct
net.printStruct
net.packRR
net.unpackRR
net.(*dnsMsgHdr).Walk
net.(*dnsMsg).Pack
net.(*dnsMsg).Unpack
net.(*dnsMsg).String
net.(*dnsMsg).IsResponseTo
net.(*fdMutex).incref
net.(*fdMutex).increfAndClose
net.(*fdMutex).decref
net.(*fdMutex).rwlock
net.(*fdMutex).rwunlock
net.(*netFD).incref
net.(*netFD).decref
net.(*netFD).readLock
net.(*netFD).readUnlock
net.(*netFD).writeLock
net.(*netFD).writeUnlock
net.(*pollDesc).init
net.(*pollDesc).close
net.(*pollDesc).evict
net.(*pollDesc).prepare
net.(*pollDesc).prepareRead
net.(*pollDesc).prepareWrite
net.(*pollDesc).wait
net.(*pollDesc).waitRead
net.(*pollDesc).waitWrite
net.convertErr
net.(*netFD).setDeadline
net.(*netFD).setReadDeadline
net.(*netFD).setWriteDeadline
net.setDeadlineImpl
net.(*netFD).init
net.(*netFD).setAddr
net.(*netFD).connect
net.(*netFD).destroy
net.(*netFD).Close
net.(*netFD).Read
net.(*netFD).Write
net.(*netFD).accept
net.parseLiteralIP
net.readHosts
net.lookupStaticHost
net.Flags.String
net.(*ipv6ZoneCache).update
net.zoneToString
net.zoneToInt
net.interfaceTable
net.newLink
net.IPv4
net.IPv4Mask
net.CIDRMask
net.IP.IsUnspecified
net.IP.IsLoopback
net.IP.IsMulticast
net.IP.IsLinkLocalUnicast
net.isZeros
net.IP.To4
net.allFF
net.IP.Mask
net.IP.String
net.hexString
net.ipEmptyString
net.IP.Equal
net.bytesEqual
net.IP.matchAddrFamily
net.simpleMaskLength
net.IPMask.Size
net.IPMask.String
net.networkNumberAndMask
net.(*IPNet).Contains
net.(*IPNet).Network
net.(*IPNet).String
net.parseIPv4
net.parseIPv6
net.ParseIP
net.ParseCIDR
net.(*IPAddr).Network
net.(*IPAddr).String
net.(*IPAddr).isWildcard
net.sockaddrToIP
net.(*IPAddr).family
net.(*IPAddr).sockaddr
net.(*IPAddr).toLocal
net.dialIP
net.isIPv4
net.addrList.first
net.addrList.partition
net.filterAddrList
net.ipv4only
net.ipv6only
net.SplitHostPort
net.splitHostZone
net.JoinHostPort
net.(*Resolver).internetAddrList
net.probeIPv4Stack
net.probeIPv6Stack
net.favoriteAddrFamily
net.internetSocket
net.ipToSockaddr
net.lookupProtocolMap
net.lookupPortMap
net.(*Resolver).LookupIPAddr
net.ipAddrsEface
net.(*Resolver).LookupPort
net.readProtocols
net.lookupProtocol
net.(*Resolver).lookupIP
net.(*Resolver).lookupPort
net.HardwareAddr.String
net.init.2
net.(*conn).Read
net.(*conn).Write
net.(*conn).Close
net.(*conn).LocalAddr
net.(*conn).RemoteAddr
net.(*conn).SetDeadline
net.(*conn).SetReadDeadline
net.(*conn).SetWriteDeadline
net.(*OpError).Error
net.(*OpError).Timeout
net.(*OpError).Temporary
net.(*timeoutError).Error
net.(*timeoutError).Timeout
net.(*timeoutError).Temporary
net.(*ParseError).Error
net.(*AddrError).Error
net.(*AddrError).Timeout
net.(*AddrError).Temporary
net.UnknownNetworkError.Error
net.UnknownNetworkError.Timeout
net.UnknownNetworkError.Temporary
net.(*DNSError).Error
net.(*DNSError).Timeout
net.(*DNSError).Temporary
net.genericReadFrom
net.releaseThread
net.nssSource.standardCriteria
net.parseNSSConfFile
net.parseNSSConf
net.parseCriteria
net.(*file).close
net.(*file).getLineFromData
net.(*file).readLine
net.open
net.stat
net.countAnyByte
net.splitAtBytes
net.getFields
net.dtoi
net.xtoi
net.itoa
net.uitoa
net.appendHex
net.count
net.last
net.lowerASCIIBytes
net.trimSpace
net.removeComment
net.foreachLine
net.foreachField
net.stringsHasSuffixFold
net.stringsEqualFold
net.readFull
net.goDebugString
net.parsePort
net.readServices
net.goLookupPort
net.sendFile
net.sysSocket
net.accept
net.maxListenerBacklog
net.socket
net.(*netFD).addrFunc
net.(*netFD).dial
net.(*netFD).listenStream
net.(*netFD).listenDatagram
net.setDefaultSockopts
net.setDefaultListenerSockopts
net.setDefaultMulticastSockopts
net.setKeepAlive
net.(*TCPAddr).Network
net.(*TCPAddr).String
net.(*TCPAddr).isWildcard
net.(*TCPConn).ReadFrom
net.(*TCPConn).SetKeepAlive
net.newTCPConn
net.(*TCPListener).Accept
net.(*TCPListener).Close
net.(*TCPListener).Addr
net.(*TCPListener).SetDeadline
net.ListenTCP
net.sockaddrToTCP
net.(*TCPAddr).family
net.(*TCPAddr).sockaddr
net.(*TCPAddr).toLocal
net.(*TCPConn).readFrom
net.dialTCP
net.doDialTCP
net.selfConnect
net.(*TCPListener).accept
net.(*TCPListener).close
net.listenTCP
net.setNoDelay
net.setKeepAlivePeriod
net.(*UDPAddr).Network
net.(*UDPAddr).String
net.(*UDPAddr).isWildcard
net.DialUDP
net.sockaddrToUDP
net.(*UDPAddr).family
net.(*UDPAddr).sockaddr
net.(*UDPAddr).toLocal
net.dialUDP
net.(*UnixAddr).Network
net.(*UnixAddr).String
net.(*UnixAddr).isWildcard
net.(*UnixListener).Accept
net.(*UnixListener).Close
net.(*UnixListener).Addr
net.(*UnixListener).SetDeadline
net.ListenUnix
net.unixSocket
net.sockaddrToUnix
net.sockaddrToUnixgram
net.sockaddrToUnixpacket
net.(*UnixAddr).family
net.(*UnixAddr).sockaddr
net.(*UnixAddr).toLocal
net.dialUnix
net.(*UnixListener).accept
net.(*UnixListener).close
net.listenUnix
net._C2func_getaddrinfo
net._Cfunc_CString
net._Cfunc_GoString
net._Cfunc_free
net._Cfunc_freeaddrinfo
net._Cfunc_gai_strerror
net._cgo_cmalloc
net.addrinfoErrno.Error
net.addrinfoErrno.Temporary
net.addrinfoErrno.Timeout
net.cgoLookupPort
net.cgoLookupServicePort
net.cgoPortLookup
net.cgoLookupIPCNAME
net.cgoIPLookup
net.cgoLookupIP
net.copyIP
net.glob..func1
net.glob..func2
net.glob..func3
net.glob..func4
net.glob..func5
net.glob..func6
net.glob..func7
net.glob..func8
net.glob..func9
net.glob..func10
net.glob..func11
net.glob..func12
net.glob..func14
net.initConfVal.func1
net.(*conf).hostLookupOrder.func1
net.goDebugNetDNS.func1
net.(*Dialer).DialContext.func1
net.dialParallel.func1
net.dialSingle.func1
net.goLookupIPCNAMEOrder.func1
net.packStruct.func1
net.unpackStruct.func1
net.printStruct.func1
net.(*netFD).connect.func1
net.(*netFD).connect.func2
net.SplitHostPort.func1
net.(*Resolver).internetAddrList.func1
net.(*Resolver).LookupIPAddr.func1
net.parseNSSConf.func1
net.parseCriteria.func1
net.(*netFD).addrFunc.func1
net.(*UnixListener).close.func1
net.cgoLookupServicePort.func1
net.cgoLookupServicePort.func2
net.cgoLookupServicePort.func3
net.cgoLookupIPCNAME.func1
net.cgoLookupIPCNAME.func2
net.cgoLookupIPCNAME.func3
net.init
net.(*IP).String
net.(*IPMask).String
net.(*byMaskLength).Len
net.(*byMaskLength).Swap
net.(*byMaskLength).Less
net.(*hostLookupOrder).String
net.(*UnknownNetworkError).Error
net.(*UnknownNetworkError).Timeout
net.(*UnknownNetworkError).Temporary
net.(*Flags).String
net.(*HardwareAddr).String
net.(*addrinfoErrno).Error
net.(*addrinfoErrno).Temporary
net.(*addrinfoErrno).Timeout
net.(*resolverConfig).(net.init)-fm
net.(*Resolver).(net.lookupIP)-fm
type..hash.net.netFD
type..eq.net.netFD
net.(*UDPConn).Read
net.(*UDPConn).Write
net.(*UDPConn).Close
net.(*UDPConn).LocalAddr
net.(*UDPConn).RemoteAddr
net.(*UDPConn).SetDeadline
net.(*UDPConn).SetReadDeadline
net.(*UDPConn).SetWriteDeadline
type..hash.net.dnsMsgHdr
type..eq.net.dnsMsgHdr
type..hash.net.dnsQuestion
type..eq.net.dnsQuestion
type..hash.net.dnsRR_Header
type..eq.net.dnsRR_Header
net.(*dnsMsg).Walk
type..hash.net.policyTableEntry
type..eq.net.policyTableEntry
type..hash.net.nssCriterion
type..eq.net.nssCriterion
type..hash.net.conf
type..eq.net.conf
type..hash.net.Dialer
type..eq.net.Dialer
type..hash.net.UnixAddr
type..eq.net.UnixAddr
type..hash.net.AddrError
type..eq.net.AddrError
type..hash.net.OpError
type..eq.net.OpError
type..hash.net.dialParam
type..eq.net.dialParam
net.(*dialParam).dialDNS
net.(*TCPConn).Read
net.(*TCPConn).Write
net.(*TCPConn).Close
net.(*TCPConn).LocalAddr
net.(*TCPConn).RemoteAddr
net.(*TCPConn).SetDeadline
net.(*TCPConn).SetReadDeadline
net.(*TCPConn).SetWriteDeadline
type..hash.net.dialResult·1
type..eq.net.dialResult·1
net.(*dialResult·1).Close
net.(*dialResult·1).LocalAddr
net.(*dialResult·1).Read
net.(*dialResult·1).RemoteAddr
net.(*dialResult·1).SetDeadline
net.(*dialResult·1).SetReadDeadline
net.(*dialResult·1).SetWriteDeadline
net.(*dialResult·1).Write
net.(*dialResult·1).Error
net.dialResult·1.Close
net.dialResult·1.LocalAddr
net.dialResult·1.Read
net.dialResult·1.RemoteAddr
net.dialResult·1.SetDeadline
net.dialResult·1.SetReadDeadline
net.dialResult·1.SetWriteDeadline
net.dialResult·1.Write
net.dialResult·1.Error
type..hash.net.DNSError
type..eq.net.DNSError
type..hash.net.dnsRR_CNAME
type..eq.net.dnsRR_CNAME
type..hash.[1]net.dnsQuestion
type..eq.[1]net.dnsQuestion
type..hash.net.dnsRR_A
type..eq.net.dnsRR_A
type..hash.net.dnsRR_AAAA
type..eq.net.dnsRR_AAAA
type..hash.net.resolverConfig
type..eq.net.resolverConfig
net.(*racer·2).Error
net.racer·2.Error
type..hash.net.dnsRR_PTR
type..eq.net.dnsRR_PTR
type..hash.net.dnsRR_MX
type..eq.net.dnsRR_MX
type..hash.net.dnsRR_NS
type..eq.net.dnsRR_NS
type..hash.net.dnsRR_SOA
type..eq.net.dnsRR_SOA
type..hash.net.dnsRR_TXT
type..eq.net.dnsRR_TXT
type..hash.net.dnsRR_SRV
type..eq.net.dnsRR_SRV
net.(*IPConn).Read
net.(*IPConn).Write
net.(*IPConn).Close
net.(*IPConn).LocalAddr
net.(*IPConn).RemoteAddr
net.(*IPConn).SetDeadline
net.(*IPConn).SetReadDeadline
net.(*IPConn).SetWriteDeadline
net.(*UnixConn).Read
net.(*UnixConn).Write
net.(*UnixConn).Close
net.(*UnixConn).LocalAddr
net.(*UnixConn).RemoteAddr
net.(*UnixConn).SetDeadline
net.(*UnixConn).SetReadDeadline
net.(*UnixConn).SetWriteDeadline
type..hash.net.UnixListener
type..eq.net.UnixListener
net.(*ipv6ZoneCache).Lock
net.(*ipv6ZoneCache).Unlock
type..hash.net.ParseError
type..eq.net.ParseError
type..hash.struct { F uintptr; net.net string; net.portnum int }
type..eq.struct { F uintptr; net.net string; net.portnum int }
net.(*writerOnly).Write
net.writerOnly.Write
type..hash.net._Ctype_struct_addrinfo
type..eq.net._Ctype_struct_addrinfo
type..hash.net.portLookupResult
type..eq.net.portLookupResult
go.(*struct { sync.Mutex; net.byName map[string][]string; net.byAddr map[string][]string; net.expire time.Time; net.path string; net.mtime time.Time; net.size int64 }).Lock
go.(*struct { sync.Mutex; net.byName map[string][]string; net.byAddr map[string][]string; net.expire time.Time; net.path string; net.mtime time.Time; net.size int64 }).Unlock
type..hash.[9]net.policyTableEntry
type..eq.[9]net.policyTableEntry
encoding/binary.init
regexp/syntax.(*parser).removeLeadingRegexp
regexp/syntax.(*parser).parsePerlFlags
database/sql.ctxDriverStmtExec
database/sql.ctxDriverStmtQuery
database/sql.(*NullInt64).Scan
database/sql.(*NullFloat64).Scan
database/sql.(*driverStmt).Close
database/sql.(*DB).connectionCleaner
database/sql.(*DB).maybeOpenNewConnections
database/sql.(*DB).connectionOpener
database/sql.(*DB).openNewConnection
database/sql.(*Rows).Scan
type..hash.database/sql.driverStmt
type..eq.database/sql.driverStmt
database/sql.(*driverStmt).Lock
database/sql.driverStmt.Lock
database/sql.(*driverStmt).Unlock
database/sql.driverStmt.Unlock
type..hash.struct { F uintptr; database/sql.si *database/sql/driver.Stmt; database/sql.err *error; database/sql.ctx context.Context; database/sql.dc *database/sql.driverConn; database/sql.query string }
type..eq.struct { F uintptr; database/sql.si *database/sql/driver.Stmt; database/sql.err *error; database/sql.ctx context.Context; database/sql.dc *database/sql.driverConn; database/sql.query string }
math/big.(*Int).binaryGCD
math/big.(*Int).scan
math/big.scanSign
math/big.nat.scan
go.(*struct { sync.Mutex; math/big.table [64]math/big.divisor }).Lock
go.(*struct { sync.Mutex; math/big.table [64]math/big.divisor }).Unlock
internal/syscall/unix.GetRandom
crypto/rand.init.1
crypto/rand.unixIsEAGAIN
crypto/rand.init.2
crypto/rand.pickStrategy
crypto/rand.getRandomLinux
crypto/rand.init.3
crypto/rand.(*devReader).Read
crypto/rand.hideAgainReader.Read
crypto/rand.init
type..hash.crypto/rand.devReader
type..eq.crypto/rand.devReader
crypto/rand.(*hideAgainReader).Read
crypto/rsa.nonZeroRandomBytes
crypto/x509/pkix.(*Name).FillFromRDNSequence
crypto/elliptic.p256Curve.CombinedMult
p256SubInternal
crypto/elliptic.(*p256Curve).CombinedMult
crypto/x509.systemRootsPool
crypto/x509.initSystemRoots
crypto/x509.loadSystemRoots
crypto/x509.HostnameError.Error
crypto/x509.SystemRootsError.Error
crypto/x509.matchHostnames
crypto/x509.(*Certificate).VerifyHostname
crypto/x509.checkChainForKeyUsage
type..hash.crypto/x509.HostnameError
type..eq.crypto/x509.HostnameError
crypto/x509.(*HostnameError).Error
crypto/x509.(*SystemRootsError).Error
vendor/golang_org/x/crypto/curve25519.ladderstep
crypto/tls.(*Conn).LocalAddr
crypto/tls.(*clientHandshakeState).processServerHello
crypto/tls.hostnameInSNI
crypto/tls.(*clientHelloMsg).marshal
crypto/tls.(*clientHelloMsg).unmarshal
crypto/tls.(*serverHelloMsg).marshal
crypto/tls.(*serverHelloMsg).unmarshal
crypto/tls.(*certificateMsg).marshal
crypto/tls.(*certificateMsg).unmarshal
crypto/tls.(*serverKeyExchangeMsg).marshal
crypto/tls.(*serverKeyExchangeMsg).unmarshal
crypto/tls.(*certificateStatusMsg).marshal
crypto/tls.(*certificateStatusMsg).unmarshal
crypto/tls.(*serverHelloDoneMsg).marshal
crypto/tls.(*serverHelloDoneMsg).unmarshal
crypto/tls.(*clientKeyExchangeMsg).marshal
crypto/tls.(*clientKeyExchangeMsg).unmarshal
crypto/tls.(*finishedMsg).marshal
crypto/tls.(*finishedMsg).unmarshal
crypto/tls.(*nextProtoMsg).marshal
crypto/tls.(*nextProtoMsg).unmarshal
crypto/tls.(*certificateRequestMsg).marshal
crypto/tls.(*certificateRequestMsg).unmarshal
crypto/tls.(*certificateVerifyMsg).marshal
crypto/tls.(*certificateVerifyMsg).unmarshal
crypto/tls.(*newSessionTicketMsg).marshal
crypto/tls.(*newSessionTicketMsg).unmarshal
crypto/tls.(*helloRequestMsg).marshal
crypto/tls.(*helloRequestMsg).unmarshal
crypto/tls.(*serverHandshakeState).processCertsFromClient
crypto/tls.rsaKeyAgreement.generateServerKeyExchange
crypto/tls.rsaKeyAgreement.processClientKeyExchange
crypto/tls.rsaKeyAgreement.processServerKeyExchange
crypto/tls.rsaKeyAgreement.generateClientKeyExchange
crypto/tls.(*ecdheKeyAgreement).generateServerKeyExchange
crypto/tls.(*ecdheKeyAgreement).processClientKeyExchange
crypto/tls.(*ecdheKeyAgreement).processServerKeyExchange
crypto/tls.(*ecdheKeyAgreement).generateClientKeyExchange
crypto/tls.(*rsaKeyAgreement).generateServerKeyExchange
crypto/tls.(*rsaKeyAgreement).processClientKeyExchange
crypto/tls.(*rsaKeyAgreement).processServerKeyExchange
crypto/tls.(*rsaKeyAgreement).generateClientKeyExchange
net/url.EscapeError.Error
net/url.InvalidHostError.Error
net/url.shouldEscape
net/url.QueryUnescape
net/url.unescape
net/url.init
net/url.(*EscapeError).Error
net/url.(*InvalidHostError).Error
github.com/go-sql-driver/mysql.(*mysqlConn).getSystemVar
github.com/go-sql-driver/mysql.(*binaryRows).readRow
github.com/go-sql-driver/mysql.(*binaryRows).NextResultSet
github.com/go-sql-driver/mysql.(*binaryRows).Next
github.com/go-sql-driver/mysql.(*NullTime).Scan
github.com/go-sql-driver/mysql.parseBinaryDateTime
github.com/go-sql-driver/mysql.formatBinaryDateTime
github.com/go-sql-driver/mysql.cloneTLSConfig
github.com/go-sql-driver/mysql.(*binaryRows).Columns
github.com/go-sql-driver/mysql.(*binaryRows).Close
github.com/go-sql-driver/mysql.(*binaryRows).HasNextResultSet
main.NewAttack
main.(*Attack).Build
main.(*Bot).Handle
main.(*Bot).QueueBuf
main.(*Database).ContainsWhitelistedTargets
main.(*Database).CanLaunchAttack
type..hash.main.Bot
type..eq.main.Bot
type..hash.main.FlagInfo
type..eq.main.FlagInfo
/root/Mirai-Source-Code/mirai/cnc/bot.go
/root/Mirai-Source-Code/mirai/cnc/attack.go
/root/golong/src/github.com/go-sql-driver/mysql/connection_go18.go
/root/golong/src/github.com/go-sql-driver/mysql/connection.go
/usr/lib/golang/src/log/log.go
/usr/lib/golang/src/net/url/url.go
/usr/lib/golang/src/crypto/tls/tls.go
/usr/lib/golang/src/crypto/tls/ticket.go
/usr/lib/golang/src/crypto/tls/prf.go
/usr/lib/golang/src/crypto/tls/key_agreement.go
/usr/lib/golang/src/crypto/tls/handshake_server.go
/usr/lib/golang/src/crypto/tls/handshake_messages.go
/usr/lib/golang/src/crypto/tls/handshake_client.go
/usr/lib/golang/src/crypto/tls/conn.go
/usr/lib/golang/src/crypto/tls/common.go
/usr/lib/golang/src/crypto/tls/cipher_suites.go
/usr/lib/golang/src/crypto/tls/alert.go
/usr/lib/golang/src/vendor/golang_org/x/crypto/curve25519/square_amd64.s
/usr/lib/golang/src/vendor/golang_org/x/crypto/curve25519/freeze_amd64.s
/usr/lib/golang/src/vendor/golang_org/x/crypto/curve25519/cswap_amd64.s
/usr/lib/golang/src/vendor/golang_org/x/crypto/curve25519/mul_amd64.s
/usr/lib/golang/src/vendor/golang_org/x/crypto/curve25519/ladderstep_amd64.s
/usr/lib/golang/src/vendor/golang_org/x/crypto/curve25519/mont25519_amd64.go
/usr/lib/golang/src/vendor/golang_org/x/crypto/curve25519/doc.go
/usr/lib/golang/src/vendor/golang_org/x/crypto/chacha20poly1305/chacha20poly1305_amd64.s
/usr/lib/golang/src/vendor/golang_org/x/crypto/chacha20poly1305/chacha20poly1305_generic.go
/usr/lib/golang/src/vendor/golang_org/x/crypto/chacha20poly1305/chacha20poly1305_amd64.go
/usr/lib/golang/src/vendor/golang_org/x/crypto/chacha20poly1305/chacha20poly1305.go
/usr/lib/golang/src/vendor/golang_org/x/crypto/poly1305/sum_amd64.s
/usr/lib/golang/src/vendor/golang_org/x/crypto/poly1305/sum_amd64.go
/usr/lib/golang/src/vendor/golang_org/x/crypto/poly1305/poly1305.go
/usr/lib/golang/src/vendor/golang_org/x/crypto/chacha20poly1305/internal/chacha20/chacha_generic.go
/usr/lib/golang/src/crypto/x509/pem_decrypt.go
/usr/lib/golang/src/crypto/x509/pkcs1.go
/usr/lib/golang/src/crypto/x509/x509.go
/usr/lib/golang/src/crypto/x509/verify.go
/usr/lib/golang/src/crypto/x509/root_unix.go
/usr/lib/golang/src/crypto/x509/root.go
/usr/lib/golang/src/crypto/x509/cert_pool.go
/usr/lib/golang/src/crypto/dsa/dsa.go
/usr/lib/golang/src/crypto/ecdsa/ecdsa.go
/usr/lib/golang/src/crypto/sha512/sha512block_amd64.s
/usr/lib/golang/src/crypto/sha512/sha512block_decl.go
/usr/lib/golang/src/crypto/sha512/sha512.go
/usr/lib/golang/src/crypto/elliptic/p256_asm_amd64.s
/usr/lib/golang/src/crypto/elliptic/p224.go
/usr/lib/golang/src/crypto/elliptic/p256_amd64.go
/usr/lib/golang/src/crypto/elliptic/elliptic.go
/usr/lib/golang/src/crypto/x509/pkix/pkix.go
/usr/lib/golang/src/encoding/asn1/marshal.go
/usr/lib/golang/src/encoding/asn1/common.go
/usr/lib/golang/src/encoding/asn1/asn1.go
/usr/lib/golang/src/crypto/rsa/rsa.go
/usr/lib/golang/src/crypto/rsa/pss.go
/usr/lib/golang/src/crypto/rsa/pkcs1v15.go
/usr/lib/golang/src/crypto/rand/util.go
/usr/lib/golang/src/crypto/rand/rand_unix.go
/usr/lib/golang/src/crypto/rand/rand_linux.go
/usr/lib/golang/src/crypto/rand/eagain.go
/usr/lib/golang/src/bufio/scan.go
/usr/lib/golang/src/bufio/bufio.go
/usr/lib/golang/src/internal/syscall/unix/getrandom_linux_amd64.go
/usr/lib/golang/src/internal/syscall/unix/getrandom_linux.go
/usr/lib/golang/src/math/big/arith_amd64.s
/usr/lib/golang/src/math/big/roundingmode_string.go
/usr/lib/golang/src/math/big/natconv.go
/usr/lib/golang/src/math/big/nat.go
/usr/lib/golang/src/math/big/intconv.go
/usr/lib/golang/src/math/big/ratconv.go
/usr/lib/golang/src/math/big/rat.go
/usr/lib/golang/src/math/big/int.go
/usr/lib/golang/src/math/big/arith.go
/usr/lib/golang/src/encoding/hex/hex.go
/usr/lib/golang/src/crypto/md5/md5block_amd64.s
/usr/lib/golang/src/crypto/md5/md5block_decl.go
/usr/lib/golang/src/crypto/md5/md5block.go
/usr/lib/golang/src/crypto/md5/md5.go
/usr/lib/golang/src/encoding/pem/pem.go
/usr/lib/golang/src/encoding/base64/base64.go
/usr/lib/golang/src/crypto/sha256/sha256block_amd64.s
/usr/lib/golang/src/crypto/sha256/sha256block_decl.go
/usr/lib/golang/src/crypto/sha256/sha256.go
/usr/lib/golang/src/crypto/sha1/sha1block_amd64.s
/usr/lib/golang/src/crypto/sha1/sha1block_amd64.go
/usr/lib/golang/src/crypto/sha1/sha1.go
/usr/lib/golang/src/crypto/crypto.go
/usr/lib/golang/src/crypto/rc4/rc4_amd64.s
/usr/lib/golang/src/crypto/rc4/rc4_asm.go
/usr/lib/golang/src/crypto/rc4/rc4.go
/usr/lib/golang/src/crypto/hmac/hmac.go
/usr/lib/golang/src/hash/hash.go
/usr/lib/golang/src/crypto/des/const.go
/usr/lib/golang/src/crypto/des/cipher.go
/usr/lib/golang/src/crypto/des/block.go
/usr/lib/golang/src/crypto/aes/gcm_amd64.s
/usr/lib/golang/src/crypto/aes/asm_amd64.s
/usr/lib/golang/src/crypto/aes/modes.go
/usr/lib/golang/src/crypto/aes/cipher_amd64.go
/usr/lib/golang/src/crypto/aes/cipher.go
/usr/lib/golang/src/crypto/aes/block.go
/usr/lib/golang/src/crypto/aes/aes_gcm.go
/usr/lib/golang/src/crypto/internal/cipherhw/asm_amd64.s
/usr/lib/golang/src/crypto/internal/cipherhw/cipherhw_amd64.go
/usr/lib/golang/src/crypto/cipher/xor.go
/usr/lib/golang/src/crypto/cipher/gcm.go
/usr/lib/golang/src/crypto/cipher/ctr.go
/usr/lib/golang/src/crypto/cipher/cbc.go
/usr/lib/golang/src/crypto/subtle/constant_time.go
/usr/lib/golang/src/database/sql/sql.go
/usr/lib/golang/src/database/sql/ctxutil.go
/usr/lib/golang/src/database/sql/convert.go
/usr/lib/golang/src/database/sql/driver/driver.go
/usr/lib/golang/src/database/sql/driver/types.go
/usr/lib/golang/src/os/exec/lp_unix.go
/usr/lib/golang/src/os/exec/exec_posix.go
/usr/lib/golang/src/os/exec/exec.go
/usr/lib/golang/src/regexp/regexp.go
/usr/lib/golang/src/regexp/onepass.go
/usr/lib/golang/src/regexp/exec.go
/usr/lib/golang/src/regexp/backtrack.go
/usr/lib/golang/src/regexp/syntax/perl_groups.go
/usr/lib/golang/src/regexp/syntax/simplify.go
/usr/lib/golang/src/regexp/syntax/regexp.go
/usr/lib/golang/src/regexp/syntax/prog.go
/usr/lib/golang/src/regexp/syntax/parse.go
/usr/lib/golang/src/regexp/syntax/compile.go
/usr/lib/golang/src/encoding/binary/varint.go
/usr/lib/golang/src/io/ioutil/tempfile.go
/usr/lib/golang/src/io/ioutil/ioutil.go
/usr/lib/golang/src/path/filepath/match.go
/usr/lib/golang/src/path/filepath/symlink_unix.go
/usr/lib/golang/src/path/filepath/path_unix.go
/usr/lib/golang/src/path/filepath/path.go
/usr/lib/golang/src/bytes/reader.go
/usr/lib/golang/src/bytes/bytes_amd64.go
/usr/lib/golang/src/bytes/bytes.go
/usr/lib/golang/src/bytes/buffer.go
/usr/lib/golang/src/strings/compare.go
/usr/lib/golang/src/strings/strings_decl.go
/usr/lib/golang/src/strings/strings_amd64.go
/usr/lib/golang/src/strings/strings.go
/usr/lib/golang/src/strings/reader.go
/usr/lib/golang/src/unicode/tables.go
/usr/lib/golang/src/unicode/letter.go
/usr/lib/golang/src/unicode/graphic.go
net/_obj/_cgo_import.go
/usr/lib/golang/src/net/hook_unix.go
/usr/lib/golang/src/net/hook.go
/usr/lib/golang/src/net/cgo_unix.go
net/_obj/_cgo_gotypes.go
/usr/lib/golang/src/net/unixsock_posix.go
/usr/lib/golang/src/net/unixsock.go
/usr/lib/golang/src/net/udpsock.go
/usr/lib/golang/src/net/tcpsockopt_unix.go
/usr/lib/golang/src/net/tcpsockopt_posix.go
/usr/lib/golang/src/net/tcpsock_posix.go
/usr/lib/golang/src/net/tcpsock.go
/usr/lib/golang/src/net/sockopt_posix.go
/usr/lib/golang/src/net/sockopt_linux.go
/usr/lib/golang/src/net/sock_posix.go
/usr/lib/golang/src/net/sock_linux.go
/usr/lib/golang/src/net/sock_cloexec.go
/usr/lib/golang/src/net/sendfile_linux.go
/usr/lib/golang/src/net/port_unix.go
/usr/lib/golang/src/net/port.go
/usr/lib/golang/src/net/parse.go
/usr/lib/golang/src/net/nss.go
/usr/lib/golang/src/net/net.go
/usr/lib/golang/src/net/mac.go
/usr/lib/golang/src/net/lookup_unix.go
/usr/lib/golang/src/net/lookup.go
/usr/lib/golang/src/net/ipsock_posix.go
/usr/lib/golang/src/net/ipsock.go
/usr/lib/golang/src/net/udpsock_posix.go
/usr/lib/golang/src/net/iprawsock_posix.go
/usr/lib/golang/src/net/iprawsock.go
/usr/lib/golang/src/net/ip.go
/usr/lib/golang/src/net/interface_linux.go
/usr/lib/golang/src/net/interface.go
/usr/lib/golang/src/net/hosts.go
/usr/lib/golang/src/net/fd_unix.go
/usr/lib/golang/src/net/fd_poll_runtime.go
/usr/lib/golang/src/net/fd_mutex.go
/usr/lib/golang/src/net/dnsmsg.go
/usr/lib/golang/src/net/dnsconfig_unix.go
/usr/lib/golang/src/net/dnsclient_unix.go
/usr/lib/golang/src/net/dnsclient.go
/usr/lib/golang/src/net/dial.go
/usr/lib/golang/src/net/conf.go
/usr/lib/golang/src/runtime/cgo/asm_amd64.s
/usr/lib/golang/src/runtime/cgo/callbacks.go
/usr/lib/golang/src/internal/singleflight/singleflight.go
/usr/lib/golang/src/math/rand/exp.go
/usr/lib/golang/src/math/rand/zipf.go
/usr/lib/golang/src/math/rand/rng.go
/usr/lib/golang/src/math/rand/rand.go
/usr/lib/golang/src/context/context.go
/usr/lib/golang/src/sort/zfuncversion.go
/usr/lib/golang/src/sort/sort.go
/usr/lib/golang/src/fmt/doc.go
/usr/lib/golang/src/fmt/print.go
/usr/lib/golang/src/fmt/scan.go
/usr/lib/golang/src/fmt/format.go
/usr/lib/golang/src/reflect/deepequal.go
/usr/lib/golang/src/reflect/asm_amd64.s
/usr/lib/golang/src/reflect/value.go
/usr/lib/golang/src/reflect/type.go
/usr/lib/golang/src/reflect/swapper.go
/usr/lib/golang/src/reflect/makefunc.go
/usr/lib/golang/src/os/executable_procfs.go
/usr/lib/golang/src/os/wait_waitid.go
/usr/lib/golang/src/os/types_unix.go
/usr/lib/golang/src/os/types.go
/usr/lib/golang/src/os/sys_linux.go
/usr/lib/golang/src/os/sys.go
/usr/lib/golang/src/os/str.go
/usr/lib/golang/src/os/stat_unix.go
/usr/lib/golang/src/os/stat_linux.go
/usr/lib/golang/src/os/proc.go
/usr/lib/golang/src/os/pipe_linux.go
/usr/lib/golang/src/os/path_unix.go
/usr/lib/golang/src/os/file_unix.go
/usr/lib/golang/src/os/file_posix.go
/usr/lib/golang/src/os/file.go
/usr/lib/golang/src/os/exec_unix.go
/usr/lib/golang/src/os/exec_posix.go
/usr/lib/golang/src/os/exec.go
/usr/lib/golang/src/os/error_unix.go
/usr/lib/golang/src/os/error.go
/usr/lib/golang/src/os/env.go
/usr/lib/golang/src/os/dir_unix.go
/usr/lib/golang/src/os/dir.go
/usr/lib/golang/src/net/addrselect.go
/usr/lib/golang/src/time/zoneinfo_unix.go
/usr/lib/golang/src/time/zoneinfo_read.go
/usr/lib/golang/src/time/zoneinfo.go
/usr/lib/golang/src/time/sys_unix.go
/usr/lib/golang/src/time/sleep.go
/usr/lib/golang/src/time/time.go
/usr/lib/golang/src/time/format.go
/usr/lib/golang/src/syscall/asm_linux_amd64.s
/usr/lib/golang/src/syscall/asm.s
/usr/lib/golang/src/syscall/ztypes_linux_amd64.go
/usr/lib/golang/src/syscall/zsyscall_linux_amd64.go
/usr/lib/golang/src/syscall/syscall_unix.go
/usr/lib/golang/src/syscall/syscall_linux_amd64.go
/usr/lib/golang/src/syscall/syscall_linux.go
/usr/lib/golang/src/syscall/syscall.go
/usr/lib/golang/src/syscall/str.go
/usr/lib/golang/src/syscall/netlink_linux.go
/usr/lib/golang/src/syscall/exec_unix.go
/usr/lib/golang/src/syscall/exec_linux.go
/usr/lib/golang/src/syscall/env_unix.go
/usr/lib/golang/src/syscall/dirent.go
/usr/lib/golang/src/io/pipe.go
/usr/lib/golang/src/io/io.go
/usr/lib/golang/src/sync/waitgroup.go
/usr/lib/golang/src/sync/rwmutex.go
/usr/lib/golang/src/sync/runtime.go
/usr/lib/golang/src/sync/pool.go
/usr/lib/golang/src/sync/once.go
/usr/lib/golang/src/sync/mutex.go
/usr/lib/golang/src/sync/cond.go
/usr/lib/golang/src/strconv/atob.go
/usr/lib/golang/src/strconv/quote.go
/usr/lib/golang/src/strconv/itoa.go
/usr/lib/golang/src/strconv/ftoa.go
/usr/lib/golang/src/strconv/extfloat.go
/usr/lib/golang/src/strconv/decimal.go
/usr/lib/golang/src/strconv/atoi.go
/usr/lib/golang/src/strconv/atof.go
/usr/lib/golang/src/unicode/utf8/utf8.go
/usr/lib/golang/src/errors/errors.go
/usr/lib/golang/src/math/abs.go
/usr/lib/golang/src/math/log_amd64.s
/usr/lib/golang/src/math/log10_amd64.s
/usr/lib/golang/src/math/frexp_amd64.s
/usr/lib/golang/src/math/floor_amd64.s
/usr/lib/golang/src/math/floor_asm.go
/usr/lib/golang/src/math/unsafe.go
/usr/lib/golang/src/math/pow10.go
/usr/lib/golang/src/math/log10.go
/usr/lib/golang/src/math/logb.go
/usr/lib/golang/src/math/frexp.go
/usr/lib/golang/src/runtime/sys_linux_amd64.s
/usr/lib/golang/src/runtime/rt0_linux_amd64.s
/usr/lib/golang/src/runtime/memmove_amd64.s
/usr/lib/golang/src/runtime/memclr_amd64.s
/usr/lib/golang/src/runtime/duff_amd64.s
/usr/lib/golang/src/runtime/cpuidlow_amd64.s
/usr/lib/golang/src/runtime/asm_amd64.s
/usr/lib/golang/src/runtime/write_err.go
/usr/lib/golang/src/runtime/vdso_linux_amd64.go
/usr/lib/golang/src/runtime/utf8.go
/usr/lib/golang/src/runtime/traceback.go
/usr/lib/golang/src/runtime/trace.go
/usr/lib/golang/src/runtime/time.go
/usr/lib/golang/src/runtime/symtab.go
/usr/lib/golang/src/runtime/stubs.go
/usr/lib/golang/src/runtime/string.go
/usr/lib/golang/src/runtime/stack.go
/usr/lib/golang/src/runtime/slice.go
/usr/lib/golang/src/runtime/sigqueue.go
/usr/lib/golang/src/runtime/signal_unix.go
/usr/lib/golang/src/runtime/signal_sighandler.go
/usr/lib/golang/src/runtime/signal_amd64x.go
/usr/lib/golang/src/runtime/sema.go
/usr/lib/golang/src/runtime/select.go
/usr/lib/golang/src/runtime/runtime2.go
/usr/lib/golang/src/runtime/runtime1.go
/usr/lib/golang/src/runtime/runtime.go
/usr/lib/golang/src/runtime/proc.go
/usr/lib/golang/src/runtime/print.go
/usr/lib/golang/src/runtime/panic.go
/usr/lib/golang/src/runtime/os_linux.go
/usr/lib/golang/src/runtime/netpoll_epoll.go
/usr/lib/golang/src/runtime/netpoll.go
/usr/lib/golang/src/runtime/mstkbar.go
/usr/lib/golang/src/runtime/mstats.go
/usr/lib/golang/src/runtime/mprof.go
/usr/lib/golang/src/runtime/mheap.go
/usr/lib/golang/src/runtime/mgcwork.go
/usr/lib/golang/src/runtime/mgcsweepbuf.go
/usr/lib/golang/src/runtime/mgcsweep.go
/usr/lib/golang/src/runtime/mgcmark.go
/usr/lib/golang/src/runtime/mfixalloc.go
/usr/lib/golang/src/runtime/type.go
/usr/lib/golang/src/runtime/mfinal.go
/usr/lib/golang/src/runtime/mem_linux.go
/usr/lib/golang/src/runtime/mgc.go
/usr/lib/golang/src/runtime/mcentral.go
/usr/lib/golang/src/runtime/mcache.go
/usr/lib/golang/src/runtime/mbitmap.go
/usr/lib/golang/src/runtime/mbarrier.go
/usr/lib/golang/src/runtime/malloc.go
/usr/lib/golang/src/runtime/lock_futex.go
/usr/lib/golang/src/runtime/lfstack.go
/usr/lib/golang/src/runtime/iface.go
/usr/lib/golang/src/runtime/hashmap_fast.go
/usr/lib/golang/src/runtime/hashmap.go
/usr/lib/golang/src/runtime/hash64.go
/usr/lib/golang/src/runtime/extern.go
/usr/lib/golang/src/runtime/error.go
/usr/lib/golang/src/runtime/env_posix.go
/usr/lib/golang/src/runtime/debug.go
/usr/lib/golang/src/runtime/cpuprof.go
/usr/lib/golang/src/runtime/cpuflags_amd64.go
/usr/lib/golang/src/runtime/chan.go
/usr/lib/golang/src/runtime/cgocheck.go
/usr/lib/golang/src/runtime/cgocallback.go
/usr/lib/golang/src/runtime/cgocall.go
/usr/lib/golang/src/runtime/cgo_sigaction.go
/usr/lib/golang/src/runtime/cgo_mmap.go
/usr/lib/golang/src/runtime/cgo.go
/usr/lib/golang/src/runtime/atomic_pointer.go
/usr/lib/golang/src/runtime/alg.go
/usr/lib/golang/src/sync/atomic/doc.go
/usr/lib/golang/src/sync/atomic/asm_amd64.s
/usr/lib/golang/src/sync/atomic/value.go
/dev/urandom
/proc/self/auxv
 !"#$$%%&&'''((()**+++++,,,,,,----......///0012222222222333333333344555566666777777777778888888888999999::::::::::::::::;;;;;;;;;;;;;;;;<<<<<===========>>>>>>>>>>??????????????????????@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`ABCDEFGHIJKLMNOPQRſTUVWXYZ{|}~
KkSskKsſµΜÅåßẞåÅİİııſSǄǅǅǆǆǄǇǈǈǉǉǇǊǋǋǌǌǊǱǲǲǳǳǱͅΙΒβΕεΘθΙιΚκΜμΠπΡρΣςΦφΩωβϐεϵθϑιικϰμµπϖρϱςσσΣφϕωΩϐΒϑϴϕΦϖΠϰΚϱΡϴΘϵΕВвДдОоСсТтЪъв
sync
Flag
Host
Kill
Ping
Rand
Scan
Sync
flag
host
kill
rand
scan
Flags
Local
fflag
first
flags
local
netGo
nproc
pidle
tflag
HostID
Msgrcv
Msgsnd
Target
flagID
netCgo
npidle
procid
random
rescan
rflags
\anet/url
\a*net.IP
\aDNSDone
\aDNSName
\aNetwork
\aProcess
\aTargets
\abotCata
\aconnect
\adialDNS
\adnsMode
\ae_flags
\amaxBots
\anetConn
\anetwork
\areadMsg
\atoLocal
\bBinomial
\bDNSNames
\bDNSStart
\bHeapIdle
\bLocality
\bOtherSys
\bSetFlags
\bai_flags
\battackID
\bfastrand
\bgcRescan
\binitOnce
\binitSpan
\binsertId
\bmaxprocs
\bsa_flags
\bscanType
\bscanWork
\bsleeping
\bss_flags
\bstwprocs
\btargetpc
\bvd_flags
\bwriteMsg
\tmath/rand
\t*[]net.IP
\t*main.Bot
\t*net.Addr
\t*net.Conn
\t*net.conf
\t*net.conn
\t*net.file
\tAcceptTCP
\tLocalAddr
\tReadMsgIP
\tbinaryGCD
\tdnsConfig
\theap_scan
\tlocalSize
\n**main.Bot
\n*asn1.Flag
\n*net.Error
\n*net.Flags
\n*net.IPNet
\n*net.dnsRR
\n*net.netFD
\n*net.racer
\n*net.scope
\n*rand.Rand
\n*sync.Cond
\n*sync.Once
\n*sync.Pool
\nCloneflags
\nLookupHost
\nReadMsgUDP
\nSystemTime
\nWriteMsgIP
\nWriteToUDP
\nappendRDNs
\nclearflags
\ne_shstrndx
\ngcscandone
\nlocal_scan
\nlookupHost
\nnprocyield
\nsystemTime
\vcrypto/rand
\vsync/atomic
\v**sync.Cond
\v**sync.Pool
\v*[]net.Addr
\v*net.Dialer
\v*net.IPAddr
\v*net.IPConn
\v*net.IPMask
\v*net.dnsMsg
\v*net.ipAttr
\v*os.Process
\v*sync.Mutex
\vConnectDone
\vGidMappings
\vPingContext
\vReadFromUDP
\vReadMsgUnix
\vSysProcAttr
\vUidMappings
\vWriteMsgUDP
\vattackFlags
\vgcscanvalid
\visConnected
\vpreemptscan
\f*[1]net.Addr
\f*[]*main.Bot
\f*[]net.dnsRR
\f*main.Attack
\f*mysql.myRnd
\f*net.OpError
\f*net.TCPAddr
\f*net.TCPConn
\f*net.UDPAddr
\f*net.UDPConn
\f*net.dnsConn
\f*net.dnsRR_A
\f*net.fdMutex
\f*net.nssConf
\f*net.timeout
\f*os.ProcAttr
\f*rand.Source
\f*sql.Scanner
\f*sync.Locker
\f*sync.noCopy
\fCombinedMult
\fConnectStart
\fProcessState
\fUnshareflags
\fWriteMsgUnix
\fbgScanCredit
\fdnsRoundTrip
\fgetSystemVar
\fhasMDNSAllow
\fnRescanRoots
\fsystemVerify
\r*[8]*main.Bot
\r*[]*sync.Pool
\r*[]net.IPAddr
\r*[]net.ipAttr
\r*fmt.fmtFlags
\r*net.DNSError
\r*net.Listener
\r*net.Resolver
\r*net.UnixAddr
\r*net.UnixConn
\r*net.addrList
\r*net.dnsRR_MX
\r*net.dnsRR_NS
\r*net.pollDesc
\r*net.sockaddr
\r*reflect.flag
\r*sync.RWMutex
\r*sync.rlocker
\r*syntax.Flags
\rMarshalBinary
\rStreetAddress
\rToRDNSequence
\rdnsDebugLevel
\rfirstZoneUsed
\rleadingRegexp
\rlocal_nlookup
\rstackfreelist
\rstartingtrace
*[0]*sync.Pool
*[1]net.IPAddr
*main.FlagInfo
*net.AddrError
*net.Interface
*net.byRFC6724
*net.dialParam
*net.dnsConfig
*net.dnsDialer
*net.dnsHeader
*net.dnsMsgHdr
*net.dnsRR_PTR
*net.dnsRR_SOA
*net.dnsRR_SRV
*net.dnsRR_TXT
*net.dnsStruct
*net.nssSource
*net.temporary
*rand.Source64
*reflect.tflag
*runtime.tflag
CombinedOutput
VerifyHostname
gcrescanstacks
\nsystemTime
\nsystemTime
parsePerlFlags
procresizetime
**net.dnsConfig
*chan *main.Bot
*chan net.racer
*io.ByteScanner
*net.ParseError
*net._Ctype_int
*net.dialResult
*net.dnsRR_AAAA
*net.writerOnly
*nettrace.Trace
*rand.devReader
*rand.rngSource
*sql.driverStmt
*sync.WaitGroup
*sync.poolLocal
*time.zoneTrans
CanLaunchAttack
ConnectionState
UnmarshalBinary
closeAfterStart
flagDescription
hostLookupOrder
local_largefree
lookupFirstZone
**sql.driverStmt
*[]main.FlagInfo
*[]net.Interface
*[]net.nssSource
*func() net.Addr
*main.AttackInfo
*main.AttackSend
*mysql.fieldFlag
*net.TCPListener
*net._Ctype_char
*net._Ctype_void
*net.dnsQuestion
*net.dnsRR_CNAME
*net.policyTable
*os.ProcessState
*sync.notifyList
*tls.finishedMsg
connectionOpener
internetAddrList
local_nlargefree
local_nsmallfree
local_tinyallocs
internal/nettrace
**net._Ctype_char
*[8]main.FlagInfo
*[]time.zoneTrans
*func() net.dnsRR
*mysql.binaryRows
*mysql.clientFlag
*mysql.statusFlag
*net.HardwareAddr
*net.UnixListener
*net.byMaskLength
*net.dnsRR_Header
*net.nssCriterion
*net.timeoutError
*pkix.RDNSequence
*sync.copyChecker
*syscall.NlMsghdr
*syscall.ProcAttr
*syscall.RtGenmsg
*tls.keyAgreement
*tls.nextProtoMsg
attackDescription
connectionCleaner
openNewConnection
*[1]time.zoneTrans
*[]*sql.driverStmt
*[][]net.nssSource
*[]main.AttackInfo
*[]net._Ctype_char
*[]net.dnsQuestion
*map[int]*main.Bot
*net.addrinfoErrno
*net.ipv6ZoneCache
*nettrace.TraceKey
*rand.lockedSource
*reflect.fieldScan
*syscall.IfInfomsg
ColumnTypeScanType
IsLinkLocalUnicast
forceCgoLookupHost
processServerHello
*[1]net.dnsQuestion
*[8]*sql.driverStmt
*[8][]net.nssSource
*[8]main.AttackInfo
*[]func() net.dnsRR
*[]net.nssCriterion
*ecdsa.combinedMult
*errors.errorString
*net.ipLookupResult
*net.resolverConfig
*runtime.randomEnum
*tls.certificateMsg
*tls.clientHelloMsg
*tls.serverHelloMsg
*unix.GetRandomFlag
*x509.HostnameError
FillFromRDNSequence
PermittedDNSDomains
removeLeadingRegexp
*[14]net._Ctype_char
*[8]func() net.dnsRR
*[]reflect.fieldScan
*chan net.dialResult
*func(net.Addr) bool
*net.hostLookupOrder
*runtime.errorString
*runtime.randomOrder
*syscall.SysProcAttr
*tls.helloRequestMsg
*tls.rsaKeyAgreement
IsLinkLocalMulticast
*[0]reflect.fieldScan
*[1]reflect.fieldScan
*func() net.dnsDialer
*net._Ctype_socklen_t
*net.policyTableEntry
*net.portLookupResult
*rand.hideAgainReader
*runtime.gcDrainFlags
*syscall.SysProcIDMap
*url.InvalidHostError
clientFinishedIsFirst
*[]net.hostLookupOrder
*chan *main.AttackSend
*func(net.IPAddr) bool
*map.hdr[int]*main.Bot
*syscall.SockaddrInet4
*syscall.SockaddrInet6
*tls.ecdheKeyAgreement
*x509.SystemRootsError
processCertsFromClient
*[5]net.hostLookupOrder
*[8]net.hostLookupOrder
*[]net.policyTableEntry
*[]syscall.SysProcIDMap
*func(*net.netFD) error
*map.iter[int]*main.Bot
*net._Ctype_sa_family_t
*syscall.NetlinkMessage
*tls.serverHelloDoneMsg
maybeOpenNewConnections
*[9]net.policyTableEntry
*chan net.ipLookupResult
*func(*os.Process) error
*net.UnknownNetworkError
*syscall.SockaddrNetlink
*tls.newSessionTicketMsg
probablyPrimeMillerRabin
processClientKeyExchange
processServerKeyExchange
*[]syscall.NetlinkMessage
*func() (net.Conn, error)
*func() *net.dnsRR_Header
*map.bucket[int]*main.Bot
*map[*sql.driverStmt]bool
*map[int]func() net.dnsRR
*map[string]main.FlagInfo
*runtime.semaProfileFlags
*syscall.NetlinkRouteAttr
*syscall.RawSockaddrInet4
*syscall.RawSockaddrInet6
*tls.certificateStatusMsg
*tls.certificateVerifyMsg
*tls.clientKeyExchangeMsg
*tls.serverKeyExchangeMsg
IsInterfaceLocalMulticast
noteUnusedDriverStatement
*chan net.portLookupResult
*chan<- net.ipLookupResult
*func(net.IPAddr) net.Addr
*func(string) net.sockaddr
*runtime.gcControllerState
*tls.certificateRequestMsg
ContainsWhitelistedTargets
GidMappingsEnableSetgroups
\e*[]syscall.NetlinkRouteAttr
\e*map[string][]net.nssSource
\e*map[string]main.AttackInfo
\e*net._Ctype_struct_addrinfo
\e*net._Ctype_struct_sockaddr
\e*syscall.RawSockaddrNetlink
\ePermittedDNSDomainsCritical
**net._Ctype_struct_addrinfo
*chan<- net.portLookupResult
*syscall.NetlinkRouteRequest
*map.hdr[*sql.driverStmt]bool
*map.hdr[int]func() net.dnsRR
*map.hdr[string]main.FlagInfo
*func(uint16) tls.keyAgreement
*map.iter[*sql.driverStmt]bool
*map.iter[string]main.FlagInfo
*map.hdr[string][]net.nssSource
*map.hdr[string]main.AttackInfo
*map[net.hostLookupOrder]string
 *func(syscall.Sockaddr) net.Addr
 *map.bucket[*sql.driverStmt]bool
 *map.bucket[int]func() net.dnsRR
 *map.bucket[string]main.FlagInfo
 *map.iter[string]main.AttackInfo
 *nettrace.LookupIPAltResolverKey
"*map.bucket[string][]net.nssSource
"*map.bucket[string]main.AttackInfo
#*map.hdr[net.hostLookupOrder]string
#*struct { F uintptr; R *rand.Rand }
&*map.bucket[net.hostLookupOrder]string
&*struct { F uintptr; R *net.Resolver }
&*struct { F uintptr; R rand.Source64 }
'*func(*net.dnsMsg) (*net.dnsMsg, error)
(*struct { F uintptr; conf *net.nssConf }
(*struct { laddr net.TCPAddr; value int }
**[]struct { laddr net.TCPAddr; value int }
+*[2]struct { laddr net.TCPAddr; value int }
+*struct { F uintptr; ln *net.UnixListener }
,*struct { F uintptr; R *net.resolverConfig }
,*struct { F uintptr; c *[]net.nssCriterion }
-*struct { sync.Mutex; table [64]big.divisor }
.*struct { F uintptr; net string; portnum int }
4*func(context.Context, string) ([]net.IPAddr, error)
4*struct { F uintptr; gp *runtime.g; scanWork int64 }
4*struct { F uintptr; want *int; ds *sql.driverStmt }
6*struct { F uintptr; off *int; msg []uint8; ok *bool }
7*struct { F uintptr; debugLevel *int; dnsMode *string }
7*struct { sync.RWMutex; m map[uint32][]*reflect.rtype }
;*func(context.Context, string, string) (net.dnsConn, error)
?*struct { sync.RWMutex; m map[*reflect.rtype]*reflect.ptrType }
?*struct { sync.RWMutex; m map[*reflect.rtype][]reflect.method }
D*struct { sync.RWMutex; m map[reflect.layoutKey]reflect.layoutType }
F*struct { F uintptr; openStmt *[]*sql.driverStmt; dc *sql.driverConn }
P*func(context.Context, string, *net.TCPAddr, *net.TCPAddr) (*net.TCPConn, error)
X*func(*tls.Config, *tls.Certificate, *tls.clientKeyExchangeMsg, uint16) ([]uint8, error)
c*struct { F uintptr; s *reflect.sliceHeader; size uintptr; typ *reflect.rtype; tmp unsafe.Pointer }
e*struct { lock runtime.mutex; next int32; m map[int32]unsafe.Pointer; minv map[unsafe.Pointer]int32 }
f*func(*tls.Config, *tls.clientHelloMsg, *x509.Certificate) ([]uint8, *tls.clientKeyExchangeMsg, error)
f*struct { F uintptr; s **runtime.mspan; h *runtime.mheap; npage uintptr; sizeclass int32; large bool }
i*func(context.Context, func(context.Context, string) ([]net.IPAddr, error), string) ([]net.IPAddr, error)
i*struct { F uintptr; si *driver.Stmt; err *error; ctx context.Context; dc *sql.driverConn; query string }
n*struct { elem *uint8; chan *uint8; pc uintptr; kind uint16; so uint16; receivedp *uint8; releasetime uint64 }
p*[]struct { elem *uint8; chan *uint8; pc uintptr; kind uint16; so uint16; receivedp *uint8; releasetime uint64 }
p*func(*tls.Config, *tls.clientHelloMsg, *tls.serverHelloMsg, *x509.Certificate, *tls.serverKeyExchangeMsg) error
q*[2]struct { elem *uint8; chan *uint8; pc uintptr; kind uint16; so uint16; receivedp *uint8; releasetime uint64 }
q*[3]struct { elem *uint8; chan *uint8; pc uintptr; kind uint16; so uint16; receivedp *uint8; releasetime uint64 }
q*[5]struct { elem *uint8; chan *uint8; pc uintptr; kind uint16; so uint16; receivedp *uint8; releasetime uint64 }
q*func(*tls.Config, *tls.Certificate, *tls.clientHelloMsg, *tls.serverHelloMsg) (*tls.serverKeyExchangeMsg, error)
q*struct { F uintptr; e *runtime.eface; f *runtime.eface; nret uintptr; fint *runtime._type; ot *runtime.ptrtype }
r*struct { F uintptr; ret *uintptr; addr unsafe.Pointer; n uintptr; prot int32; flags int32; fd int32; off uint32 }\b
y*struct { F uintptr; ctx context.Context; resolverFunc func(context.Context, string) ([]net.IPAddr, error); host string }
y*struct { algo x509.SignatureAlgorithm; oid asn1.ObjectIdentifier; pubKeyAlgo x509.PublicKeyAlgorithm; hash crypto.Hash }
{*[]struct { algo x509.SignatureAlgorithm; oid asn1.ObjectIdentifier; pubKeyAlgo x509.PublicKeyAlgorithm; hash crypto.Hash }
|*struct { note runtime.note; mask [3]uint32; wanted [3]uint32; ignored [3]uint32; recv [3]uint32; state uint32; inuse bool }
}*[16]struct { algo x509.SignatureAlgorithm; oid asn1.ObjectIdentifier; pubKeyAlgo x509.PublicKeyAlgorithm; hash crypto.Hash }
}*struct { ityp *reflect.rtype; typ *reflect.rtype; link unsafe.Pointer; bad int32; unused int32; fun [100000]unsafe.Pointer }
}*struct { lock runtime.mutex; free *runtime.gcBits; next *runtime.gcBits; current *runtime.gcBits; previous *runtime.gcBits }
*struct { lock runtime.mutex; gp *runtime.g; created bool; sleeping bool; rescheduling bool; waitnote runtime.note; t []*runtime.timer }
*struct { F uintptr; resi *driver.Result; err *error; ctx context.Context; execer driver.Execer; query string; dargs []driver.NamedValue }
*struct { sync.Mutex; byName map[string][]string; byAddr map[string][]string; expire time.Time; path string; mtime time.Time; size int64 }
*struct { F uintptr; rowsi *driver.Rows; err *error; ctx context.Context; queryer driver.Queryer; query string; dargs []driver.NamedValue }
*struct { F uintptr; primaries net.addrList; fallbacks net.addrList; dp *net.dialParam; results chan net.dialResult; returned chan struct {} }
*struct { F uintptr; cache *runtime.pcvalueCache; gcw *runtime.gcWork; nextBarrier *uintptr; n *int; gp *runtime.g; barrierOffset *uintptr; sp uintptr }
*struct { F uintptr; p **regexp.onePassProg; visitQueue *regexp.queueOnePass; check *func(uint32, map[uint32]bool) bool; onePassRunes [][]int32; instQueue *regexp.queueOnePass }
*struct { tcase uint16; ncase uint16; pollorder *uint8; lockorder *uint8; scase [2]struct { elem *uint8; chan *uint8; pc uintptr; kind uint16; so uint16; receivedp *uint8; releasetime uint64 }; lockorderarr [2]uint16; pollorderarr [2]uint16 }
*struct { tcase uint16; ncase uint16; pollorder *uint8; lockorder *uint8; scase [3]struct { elem *uint8; chan *uint8; pc uintptr; kind uint16; so uint16; receivedp *uint8; releasetime uint64 }; lockorderarr [3]uint16; pollorderarr [3]uint16 }
*struct { tcase uint16; ncase uint16; pollorder *uint8; lockorder *uint8; scase [5]struct { elem *uint8; chan *uint8; pc uintptr; kind uint16; so uint16; receivedp *uint8; releasetime uint64 }; lockorderarr [5]uint16; pollorderarr [5]uint16 }
M*struct { allocfreetrace int32; cgocheck int32; efence int32; gccheckmark int32; gcpacertrace int32; gcshrinkstackoff int32; gcstackbarrieroff int32; gcstackbarrierall int32; gcrescanstacks int32; gcstoptheworld int32; gctrace int32; invalidptr int32; sbrk int32; scavenge int32; scheddetail int32; schedtrace int32; wbshadow int32 }
*struct { lock runtime.mutex; lockOwner *runtime.g; enabled bool; shutdown bool; headerWritten bool; footerWritten bool; shutdownSema uint32; seqStart uint64; ticksStart int64; ticksEnd int64; timeStart int64; timeEnd int64; seqGC uint64; reading runtime.traceBufPtr; empty runtime.traceBufPtr; fullHead runtime.traceBufPtr; fullTail runtime.traceBufPtr; reader runtime.guintptr; stackTab runtime.traceStackTable; strings map[string]uint64; stringSeq uint64; markWorkerLabels [3]uint64; bufLock runtime.mutex; buf runtime.traceBufPtr }
5*struct { full uint64; empty uint64; pad0 [64]uint8; bytesMarked uint64; markrootNext uint32; markrootJobs uint32; nproc uint32; tstart int64; nwait uint32; ndone uint32; alldone runtime.note; helperDrainBlock bool; nFlushCacheRoots int; nDataRoots int; nBSSRoots int; nSpanRoots int; nStackRoots int; nRescanRoots int; markrootDone bool; startSema uint32; markDoneSema uint32; bgMarkReady runtime.note; bgMarkDone uint32; mode runtime.gcMode; totaltime int64; initialHeapLive uint64; assistQueue struct { lock runtime.mutex; head runtime.guintptr; tail runtime.guintptr }; rescan struct { lock runtime.mutex; list []runtime.guintptr }; stwprocs int32; maxprocs int32; tSweepTerm int64; tMark int64; tMarkTerm int64; tEnd int64; pauseNS int64; pauseStart int64; heap0 uint64; heap1 uint64; heap2 uint64; heapGoal uint64 }
 %&()*+,-./015:<=>?ACFLMNPSZ["\n\t]`hmst{|} ( + @ P [ \t%!%v) )()\n, ->-c/i000X0s0x2553: :]; ??AMCcCfCoCsIPIdLlLmLoLtLuMcMeMnMxNdNlNoNsPMPcPdPePfPiPoPsScSkSmSoTZYiZlZpZs\\A\\B\\D\\E\\S\\U\\W\\a\\b\\d\\f\\n\\r\\s\\t\\u\\v\\w\\x\\z\n \r\n]:]\namdfgpi)idipmsnsospms upus|0|1}\nµ     G  M  P *( <  =  k= m=$%d%: (?:): ---...125625: `::1???AddAprAugDecEOFFebFriHanJanJulJunLaoLenMACMarMayMonMroNaNNkoNovOctPC=PtrSETSatSepSunThuTtlTueTxtUTCVaiWed\\x{]:\nackaesandcgodaydesdnsendfinftpgc infintip4ip6lenmapnannetnilobjpc=pshptrrc4rstsetsqlsshsyntcptlstosttludpurgurlvseµsμs� !=  ->  <== ==> @@@ MB) \r\t\n as  at  fp= in  is  lr: of  on  pc= sp: sp=(?:)(?P<(?i:) = ) m=+Inf+inf, n -Inf-inf31253306: p=::/0==> @@@ AAAAAhomAtoiBitsChamDATEDashGOGCHashJulyJuneKindLessLisuMboxMiaoModiNULLNameNewaOK\r\nOpenPATHPortPrefReadSET SizeSwapTIMEThaiTimeTrue\n\tm=] n=^C\r\nasn1at *basebindboolcallcap cas1cas2cas3cas4cas5cas6chandeaddenydhiddialfailftpsfuncgcipgoidhourhttpicmpidleigmpint8ipv4ipv6kindmap[mdnsnoneopenpathpipepop3quitrandreadrootsbrkscvgsmtpsortstattag:tcp4tcp6timetrueudp6uintunixwaitx509 ...\n H_T= H_a= H_g= MB,  W_a= and  cnt= h_a= h_g= h_t= idx= max= ptr  siz= tab= top= u_a= u_g=(nil), ...1562578125::/96<nil>AdlamAprilBamumBatakBuhidClassCnameDNS: ErrnoErrorFALSEFlagsGreekIsDirKhmerLatinLimbuLocalMarchMonthOghamOriyaOsageP-224P-256P-384P-521QtypeRetryRunicSHELLSTermTakriTamilValuealertallowargp=arraycasp1casp2casp3chdircloseconnsdportfalsefaultfilesfunc(gcinggreiphostshttpsidentimap2imap3imapsint16int32int64linuxlstatmatchmiraimonthmysqlopen panicpipe2pop3srcoderune sleepslicesportstartstomptls: uint8write (MB)\n (was  Value addr= code= ctxt: curg= m->p= p->m= varp=(?m:$)(?m:^)(?s:.), not .local.onion/proc/390625<-chanArabicAugustBrahmiCOMMITCarianChakmaCommonCopticDoubleExpireFridayGothicHangulHatranHebrewHyphenIPMaskInstOpKaithiKhojkiLepchaLycianLydianMinttlMondayParamsQclassRejangRrtypeSCHED SerialSignalStringSundaySyriacTai_LeTangutTargetTeluguThaanaWeight[]byte\r\n\e[0m\ttypesacceptacknumbase64binarychan<-cryptodo
mainefenceempty errno etypesexec: gophergreethhangupip+netkilledlistenlookupmethodminutendots:netdnsobjectopcoderangesregexpreturnrune1 secondselectseqnumsignalsocketsourcestatusstringstructsweep syntaxtelnetuint16uint32uint64waitid (scan  (scan) (trap  MB in  Value> dying= locks= m->g0= nfree= s=nil\n(?-m:$)(?-s:.)(PANIC=, goid=, sys: , want -07000019531259765625::1/128AncountArcountAvestanBengaliBrailleChanDirConvertCypriotDeseretElbasanGODEBUGGranthaHanunooIO waitInstAltInstNopInverseJanuaryKannadaMD2-RSAMD5-RSAMandaicMarchenMultaniMyanmarNscountOctoberOsmanyaQdcountRadicalRefreshSharadaShavianSiddhamSignal SinhalaSwapperTagalogTibetanTimeoutTirhutaTuesdayZ070000\tdefer \tvalue=\e[32;1mabortedaccept4adduseralt -> androidany -> charsetconnectcontextcs     float32float64fs     gatewaygbk_bingctracego1.8.3gs     hp8_bininvalidlookup nil keynop -> openbsdoptionspanic: r10    r11    r12    r13    r14    r15    r8     r9     rax    rbp    rbx    rcx    rdi    rdx    reflectreverserflags rip    rsi    rsp    runningruntimeserial:signal solarisstoppedsuccesssyscalltimeoutuintptrunavailunknownwaiting goalΔ= helpgc= is not  mcount= minutes nalloc= newval= nfreed= packed= pointer stack=[%!Month(, found , idle: /gid_map/uid_map48828125ArmenianBalineseBopomofoBugineseCherokeeCyrillicDSA-SHA1DecemberDuployanDurationEthiopicExtenderFebruaryFileModeGeorgianGujaratiGurmukhiHashFuncHiraganaInstFailInstRuneJavaneseKatakanaKayah_LiLinear_ALinear_BMahajaniNovemberNullTimeNumFieldOl_ChikiParseIntPhags_PaPriorityROLLBACKRdlengthReader::SHA1-RSASaturdayTagbanwaTai_ThamTai_VietThursdayTifinaghUgariticZONEINFO[::1]:53[:word:][mysql] [signal \n-----\n\n\r\nBots: \tstack=[\e[?1049h\e[?1049l_binary'address bad instbig5_binbotcountcgocheckcompresscontinuedec8_bindefault:ellipticexplicitfc00::/7infinityinvalid loopbacknext_gc=no anodenotfoundoptionalpasswordpostdatareadfromreadlinkresponserunnableruntime.scavengesendfilesignal: sjis_binssl30MACstrconv.swe7_bintimeout:tls10MACtryagainucs2_binudpplainujis_binunixgramunknown(utf8_binwbshad
ow (forced) -> node= blocked= defersc= in use)\n lockedg= lockedm= m->curg= ms cpu,  not in [ of size  runtime= s.limit= s.state= sigcode= threads= u_a/u_g= workers=%!(EXTRA ' unknown(MISSING)+infinity, newval=, oldval=-- Extra\n-07:00:00-infinity/dev/null127.0.0.12001::/322002::/162441406253ffe::/16: inuse: : status=ACK floodBassa_VahBhaiksukiCuneiformDiacriticErrorCodeGC forcedHex_DigitInheritedInstMatchInstRune1InterfaceIsOnCurveKhudawadiLINUX_2.6MalayalamMongolianNabataeanNullInt64NumMethodPalmyreneParseBoolParseUintSELECT @@SYN floodSamaritanSeptemberSundaneseTemporaryUDP floodWednesdayZ07:00:00[:^word:][:alnum:][:alpha:][:ascii:][:blank:][:cntrl:][:digit:][:graph:][:lower:][:print:][:punct:][:space:][:upper:]
"ascii_binatomicor8attempts:bad indirbroadcastbus errorchan sendcollationcomplex64continuedconvertercopystackcp850_bincp852_bincp866_bincp932_binctxt != 0d.nx != 0dns,fileseuckr_binfec0::/10files,dnsfork/execfuncargs(greek_bininterfaceinterruptipv6-icmpkoi8r_binkoi8u_binlocalhostmacce_binmulticastnewosprocomitemptyp224Curvep256CurvepanicwaitparseTimeprintablerecover: reflect: runeSlicerwxrwxrwxs.nelems=signal 32signal 33signal 34signal 35signal 36signal 37signal 38signal 39signal 40signal 41signal 42signal 43signal 44signal 45signal 46signal 47signal 48signal 49signal 50signal 51signal 52signal 53signal 54signal 55signal 56signal 57signal 58signal 59signal 60signal 61signal 62signal 63signal 64truncatedunderflowunhandledutf16_binutf32_bin MB goal,  actualΔ= gfreecnt= pages at  returned  runqsize= runqueue= s.base()= spinning= stopwait= sweepgen  sweepgen= targetpc= throwing= until pc=%!(NOVERB)(BADINDEX).localhost/dev/stdin/etc/hosts/setgroups0.0.0.0:230000-00-0012207031256103515625: parsing DSA-SHA256DeprecatedDevanagariECDSA-SHA1GOMAXPROCSGlagoliticHTTP floodKharoshthiManichaeanOld_ItalicOld_PermicOld_TurkicOther_MathParseFloatPhoenicianSET NAMES SHA256-RSASHA384-RSASHA512-RSASaurashtraScalarMult[:^alnum:][:^alpha:][:^ascii:][:^blank:][:^cntrl:][:^digit:][:^graph:][:^lower:][:^print:][:^punct:][:^space:][:^upper:][:xdigit:]_MSpanDead_MSpanFreeatomicand8casgstatuscomplex128cp1250_bincp1251_bincp1256_bincp1257_binfloat32nanfloat64nangb2312_bingcscandonegetsockoptgoroutine gp.stkbar=hebrew_bininvalidptrlatin1_binlatin2_binlatin5_binlatin7_binmyhostnamenameservernetlinkribowner diedplainErrorprompt.txtreaddirentrune <nil>runtime: gschedtracesemacquiresetsockoptshort readterminatedtis620_bintracefree(tracegc()\nunixpacketunknown pc (targetpc= bytes ...\n gcwaiting= gp.status= heap_live= idleprocs= in status  m->mcache= mallocing= ms clock,  p->mcache= p->status= schedtick=%!(BADPREC)-- Answers\n/dev/stderr/dev/stdout0.0.0.0:10130517578125: frame.sp=; expected <invalid opCERTIFICATEEscapeErrorGOTRACEBACKHOSTALIAS
ESIdeographicInstCaptureInstRuneAnyLOCALDOMAINMySQLDriverNew_Tai_LueNullFloat64Old_PersianPau_Cin_HauRES_OPTIONSSignWritingSoft_DottedSyntaxErrorWarang_CitiWhite_Space[:^xdigit:]\tsched={pc:_MSpanInUse_MSpanStack__vdso_timealarm clockapplicationbad addressbad messagebad timedivbroken pipebusy buffercgocall nilcreated by errorStringeucjpms_binfailed withfile existsfinal tokenfloat32nan2float64nan1float64nan2float64nan3gccheckmarkgcscanvalidgeneralizedgeostd8_bini/o timeoutkeybcs2_binlfstackpushlocal errorlost mcachemethodargs(nil contextreadTimeoutreflect.Setruntime: gpscheddetailsetnonblockshort writeskip-verifystack faulttls: alert(tracealloc(unreachableutf16le_binutf8mb4_binwork.nproc=work.nwait= [recovered] allocCount  found at *( m->gsignal= pages/byte\n preemptoff= s.elemsize= s.sweepgen= span.limit= span.state= sysmonwait=%!(BADWIDTH)'0000-00-00') p->status=, consumed: , gp.stack=[, released: -byte limit\n/dev/urandom127.0.0.1:53152587890625762939453125Bidi_ControlCIDR addressCombinedMultConvertValueECDSA-SHA256ECDSA-SHA384ECDSA-SHA512Error %d: %sGRE IP floodHardwareAddrI/O possibleInstAltMatchJoin_ControlKeySizeErrorLastInsertIdMeetei_MayekPahawh_HmongRowsAffectedSora_SompengSyloti_Nagri\r\nPassword: abi mismatchaltmatch -> anynotnl -> armscii8_binbad GC phasebad g statusbad pagesizebad recoverybut progSizebyMaskLengthcan't happencannot find cas64 failedchan receivechild exitedclose notifycontext.TODOdalTLDpSugctdriverResultend tracegc\nentersyscallexit status gcpacertracehost is downillegal seekinvalid baseinvalid portinvalid slotmacroman_binno such hostout of rangepointtopointreflect.Copyreleasep: m=remote errorruntime: gp=short bufferunexpected )unknown portwith name %qwriteTimeout MB released\n bytesMarked= called from  idlethreads= in duration  in host name in zip file  is nil, not  out of range s.sizeclass= span.base()= syscalltick= with GC prog%v.WithCancel, gp->status=, not pointer-- Questions\n-byte block (/etc/services3814697265625::ffff:0:0/96@botnet# \e[0mGC sweep waitHostnameErrorMende_Kika
kuiOld_HungarianSHA256-RSAPSSSHA384-RSAPSSSHA512-RSAPSSSIGKILL: killSIGQUIT: quit\tmorebuf={pc:access deniedaddrinfoErrnoallowAllFilesauthoritativebad hmap sizebad map stateempty integerexchange fullfatal error: invalid UTF-8invalid base lame referrallevel 3 resetload64 failednil stackbaseout of memoryparsing time power failures.allocCount=srmount errorstill in liststop signal: timer expiredtrailing dataucs2_czech_ciucs2_roman_ciunreachable: unsupported: user canceledutf8_czech_ciutf8_roman_civalue method xadd64 failedxchg64 failed (core dumped) nmidlelocked= on zero Value to finalizer  untyped args -thread limit\n/etc/localtime/etc/protocols/etc/ssl/certs/proc/self/exe127.0.0.1:33061907348632812595367431640625: extra text: <unknown type>GC assist waitGC worker initInstEmptyWidthMB; allocated Other_ID_StartPattern_SyntaxQuotation_MarkSIGABRT: abortScalarBaseMult\\.+*?()|[]{}^$\n... omitting allocfreetracebad allocCountbad connectionbad record MACbad span statebad stack sizedata truncateddirect convT2Edirect convT2Ifile too largefinalizer waitgbk_chinese_cigcrescanstacksgcstoptheworldhp8_english_ciinternal errorinvalid syntaxis a directorykey size wronglevel 2 haltedlevel 3 haltedmemprofileratenil elem type!no module datano such devicenot in ranges:protocol errorrejectReadOnlyruntime: base stack overflowstopm spinningstore64 failedtext file busytis620_thai_citoo many linkstoo many usersucs2_danish_ciucs2_polish_ciucs2_slovak_ciunexpected EOFunknown methodunknown mode: unsafe.Pointerutf16_czech_ciutf16_roman_ciutf32_czech_ciutf32_roman_ciutf8_danish_ciutf8_polish_ciutf8_slovak_ciwindow changedwork.full != 0zero parameter is unavailable not in range [, t.hmap.size =/etc/mdns.allow/tmp/mysql.sock0601021504Z0700476837158203125: cannot parse <invalid Value>ASCII_Hex_DigitMysql DB openedOther_LowercaseOther_UppercasePsalter_PahlaviStructuralErrorTCP stomp flood\e[31;1m%s\e[0m\r\nacquirep: p->m=advertise errorbad certificatebad select sizebad system callbig5_chinese_ciclientFoundRowscp1250_czech_csdec8_swedish_cieuckr
_korean_ciforce gc (idle)hideAgainReaderhostLookupOrderinvalid booleankey has expiredlatin2_czech_csmalloc deadlockmissing addressmissing mcache?ms: gomaxprocs=multiStatementsnetwork is downno medium foundno such processnon-Go functionnon-minimal tagnot a directoryrecord overflowrecovery failedrsaKeyAgreementruntime error: runtime.gopanicruntime: frame scan missed a gstartm: m has pstopm holding pswe7_swedish_ciucs2_general_ciucs2_german2_ciucs2_latvian_ciucs2_persian_ciucs2_sinhala_ciucs2_spanish_ciucs2_swedish_ciucs2_turkish_ciucs2_unicode_ciunknown networkunknown versionutf16_danish_ciutf16_polish_ciutf16_slovak_ciutf32_danish_ciutf32_polish_ciutf32_slovak_ciutf8_general_ciutf8_german2_ciutf8_latvian_ciutf8_persian_ciutf8_sinhala_ciutf8_spanish_ciutf8_swedish_ciutf8_turkish_ciutf8_unicode_ci already; errno= but memory size mheap.sweepgen= untyped locals %s:%s@tcp(%s)/%s) unusableBytes=, not a function-- Name servers\n/etc/resolv.conf0123456789abcdef2384185791015625: value of type GC worker (idle)Imperial_AramaicInstRuneAnyNotNLInvalidHostErrorMSpanList_InsertMSpanList_RemoveMeroitic_CursiveObjectIdentifierOther_AlphabeticSIGNONE: no trapSystemRootsError\nruntime stack:\n^\\x00-\\x{10FFFF}ascii_general_cibad SAN sequencebad frame layoutbad special kindbad symbol tablebut should be atcastogscanstatuscolumnsWithAliascontext canceledcp1250_polish_cicp850_general_cicp852_general_cicp866_general_cidivision by zeroepollwait failedgc: unswept spangcshrinkstackoffgreek_general_cihostLookupOrder=integer overflowinvalid argumentinvalid exchangeinvalid spdelta koi8r_general_cikoi8u_general_cilatin1_danish_cilength too largemacce_general_cimalformed packetmaxAllowedPacketmessage too longmissing stackmapno colon on lineno renegotiationno route to hostnon-IPv4 addressnon-IPv6 addressobject is remotepacer: H_m_prev=reflect mismatchregexp: Compile(remote I/O errorruntime:  g:  g=runtime: gp: gp=runtime: nameOffruntime: nelems=runtime: textOffruntime: typeOffsjis_japanese_cistopped (signal)time: bad [0-9]*to non-Go memoryucs
2_croatian_ciucs2_estonian_ciucs2_romanian_ciucs2_spanish2_ciujis_japanese_ciunknown network utf16_general_ciutf16_german2_ciutf16_latvian_ciutf16_persian_ciutf16_sinhala_ciutf16_spanish_ciutf16_swedish_ciutf16_turkish_ciutf16_unicode_ciutf32_general_ciutf32_german2_ciutf32_latvian_ciutf32_persian_ciutf32_sinhala_ciutf32_spanish_ciutf32_swedish_ciutf32_turkish_ciutf32_unicode_ciutf8_croatian_ciutf8_estonian_ciutf8_romanian_ciutf8_spanish2_ciutf8mb4_czech_ciutf8mb4_roman_civalue size wrongworkbuf is empty initialHeapLive= spinningthreads=%%!%c(big.Int=%s)0123456789ABCDEFX0123456789abcdefx060102150405Z07001192092895507812559604644775390625: missing method CorruptInputErrorGC assist markingOld_North_ArabianOld_South_ArabianOther_ID_ContinueRecordHeaderErrorSIGBUS: bus errorSIGCONT: continueSIGINT: interruptSTART TRANSACTIONSentence_TerminalUnified_Ideograph\r\nContinue? (y/N)allowOldPasswordsbad TinySizeClassbad dequeueRescanbad stackfreelistcorrupt zip file cp1250_general_cicp1251_general_cicp1251_general_cscp1256_general_cicp1257_general_cicp932_japanese_cidecryption failedentersyscallblockexec format errorexec: not startedfractional secondfutexwakeup addr=gb2312_chinese_cigcstackbarrierallgcstackbarrieroffgp.waiting != nilhandshake failurehebrew_general_ciillegal parameterinteger too largeinterpolateParamskey align too biglatin1_general_cilatin1_general_cslatin1_german1_cilatin1_german2_cilatin1_spanish_cilatin1_swedish_cilatin2_general_cilatin5_turkish_cilatin7_general_cilatin7_general_csmark - bad statusmarkBits overflowmissing closing )missing closing ]no data availablenotetsleepg on g0permission deniedrecursion_desiredreflect.Value.Intreflect.Value.Lenreflect: New(nil)reflect: call of runtime: pointer scanobject n == 0thread exhaustionucs2_esperanto_ciucs2_hungarian_ciucs2_icelandic_ciucs2_slovenian_ciunknown caller pcunknown collationutf16_croatian_ciutf16_estonian_ciutf16_romanian_ciutf16_spanish2_ciutf32_croatian_ciutf32_estonian_ciutf32_romanian_ciutf32_spanish2_ciutf8_esperanto_ciutf8_hungarian_ciutf8
_icelandic_ciutf8_slovenian_ciutf8mb4_danish_ciutf8mb4_polish_ciutf8mb4_slovak_ciwrong medium type because dotdotdot, locked to thread/etc/nsswitch.conf298023223876953125: day out of rangeBlocked attack by Caucasian_AlbanianGRE Ethernet floodMax buffer is 4096RFS specific errorSignatureAlgorithmVariation_Selector[^\\x00-\\x{10FFFF}]bad arg in InstAltbad g rescan indexbufio: buffer fullconnection refusedcontext.Backgroundcp1250_croatian_cifile name too longforEachP: not donegarbage collectiongcBlackenPromptly=geostd8_general_ciidentifier removedindex out of rangeinput/output errorinvalid character invalid connectioninvalid criteria: keybcs2_general_cilatin2_croatian_cilatin7_estonian_csmax_allowed_packetmultihop attemptedmysql_old_passwordno child processesno locks availablenon-minimal lengthoperation canceledreflect.Value.Elemreflect.Value.Typereflect.Value.Uintreflect: Zero(nil)segmentation faultsequence truncatedserver misbehavingstack barrier loststreams pipe errorsystem page size (too many redirectstruncated sequenceucs2_lithuanian_ciucs2_vietnamese_ciunexpected messageunknown time zone utf16_esperanto_ciutf16_hungarian_ciutf16_icelandic_ciutf16_slovenian_ciutf16le_general_ciutf32_esperanto_ciutf32_hungarian_ciutf32_icelandic_ciutf32_slovenian_ciutf8_lithuanian_ciutf8_vietnamese_ciutf8mb4_general_ciutf8mb4_german2_ciutf8mb4_latvian_ciutf8mb4_persian_ciutf8mb4_sinhala_ciutf8mb4_spanish_ciutf8mb4_swedish_ciutf8mb4_turkish_ciutf8mb4_unicode_civalue out of range called using nil * sweepPagesPerByte=,  g->atomicstatus=, gp->atomicstatus=/usr/lib/locale/TZ/149011611938476562520060102150405Z07007450580596923828125Canadian_AboriginalIDS_Binary_OperatorMB of spans; swept MSpan_Sweep: state=Pattern_White_SpaceSIGTRAP: trace trapUnknownNetworkError\e[36;1m%s:\t%d\e[0m\r\n__vdso_gettimeofday_cgo_setenv missingarmscii8_general_cibad file descriptorbad kind in runfinqbad notifyList sizebad runtime·mstartbad value for fieldcgocall unavailablecp1251_bulgarian_cicp1251_ukrainian_cicriterion too shortdevice not a streamdir
ectory not emptydisk quota exceededeucjpms_japanese_ciexpired certificatefile already closedfile already existsfile does not existillegal instructioninvalid URL escape latin2_hungarian_cimacroman_general_cimarking free objectmarkroot: bad indexnotesleep not on g0nwait > work.nprocsoverflow is not nilpanic during mallocpanic during panic\npanic holding locksparsenetlinkmessagerecursion_availablereflect.Value.Fieldreflect.Value.Floatreflect.Value.Indexreflect.Value.IsNilreflect.Value.Slicerevoked certificateruntime: pcdata is runtime: preempt g0skip this directorystopm holding locksstopped (tty input)sync.Cond is copiedtime: unknown unit too many open filesucs2_unicode_520_ciunaligned sysUnusedunexpected InstFailunknown Go type: %vunknown certificateunknown cipher typeutf16_lithuanian_ciutf16_vietnamese_ciutf32_lithuanian_ciutf32_vietnamese_ciutf8_unicode_520_ciutf8mb4_croatian_ciutf8mb4_estonian_ciutf8mb4_romanian_ciutf8mb4_spanish2_civalue align too bigwrite of Go pointerx509: unknown error markroot jobs done\n to unallocated span/usr/share/zoneinfo/37252902984619140625: leftover defer sp=CLIENT_RANDOM %x %x\nEgyptian_HieroglyphsEnter new password: Enter new username: IDS_Trinary_OperatorMSpanList_InsertBackMeroitic_HieroglyphsReader '%s' is <nil>SIGALRM: alarm clockSIGTERM: terminationSeek: invalid offsetSeek: invalid whenceTerminal_Punctuation[invalid char class]__vdso_clock_gettimeallowNativePasswordsasn1: syntax error: bad defer size classbad font file formatbad system page sizebad use of bucket.bpbad use of bucket.mpchan send (nil chan)close of nil channelconnection timed outcp1257_lithuanian_cifloating point errorforcegc: phase errorgc_trigger underflowgo of nil func valuegopark: bad g statusillegal %s length %dinvalid DNS responseinvalid bool value: invalid itab lockinginvalid m->locked = invalid repeat countinvalid request codeis a named type filekey has been revokedmalloc during signalmissed stack barriermysql_clear_passwordnon-empty swept listnotetsleep not on g0pacer: assist ratio=preempt off reason
: reflect.Value.SetIntreflect.makeFuncStubrescan list overflowruntime: casgstatus runtime: unknown pc runtime: work.nwait=sql: Rows are closedstopped (tty output)time: invalid numbertrace: out of memoryunexpected IP lengthunexpected network: urgent I/O conditionutf16_unicode_520_ciutf32_unicode_520_ciutf8mb4_esperanto_ciutf8mb4_hungarian_ciutf8mb4_icelandic_ciutf8mb4_slovenian_ciworkbuf is not empty gp.gcscanvalid=true\n of unexported method previous allocCount=186264514923095703125931322574615478515625Anatolian_HieroglyphsDomain name to attackInscriptional_PahlaviNumber of connectionsOther_Grapheme_ExtendUnknownAuthorityError_cgo_unsetenv missingblock device requiredbufio: negative countcheckdead: runnable gconcurrent map writesdeadlineExceededErrordecompression failuredefer on system stackexec: already startedfindrunnable: wrong pfound at rescan indexgcprocs inconsistencyinvalid ALPN protocolinvalid named capturekey is not comparablelink has been severedlocalhost.localdomainmysql_native_passwordpackage not installedpanic on system stackparsenetlinkrouteattrread-only file systemreflect.Value.Complexreflect.Value.Pointerreflect.Value.SetUintreleasep: invalid argruntime: confused by runtime: newstack sp=runtime: work.nwait =sequence tag mismatchstale NFS file handlestartlockedm: m has pstartm: m is spinningstate not recoverablestopg: invalid statustrace/breakpoint trapunknown empty Contextunknown field type %duser defined signal 1user defined signal 2utf8mb4_lithuanian_ciutf8mb4_vietnamese_civirtual timer expired to whitelisted prefix%v.WithValue(%#v, %#v).localhost.localdomain/etc/ssl/ca-bundle.pem4656612873077392578125ERR|API code invalid\r\nInscriptional_ParthianInsecureAlgorithmErrorSIGSTKFLT: stack faultSIGTSTP: keyboard stopaddress already in useargument list too longassembly checks failedbad arg in InstCapturebad g->status in readycannot allocate memorydriver: bad connectionerror decoding messageerror parsing regexp: freeIndex is not validgetenv before env initillegal TIME length %dillegal number base %d
inappropriate fallbackinteger divide by zerointerface conversion: internal inconsistencyinvalid address familyminpc or maxpc invalidmissing ']' in addressnetwork is unreachablenon-Go function at pc=operation was canceledpanic during softfloatprotocol not availableprotocol not supportedreflect.Value.MapIndexreflect.Value.SetFloatremote address changedruntime.main not on m0runtime: invalid type runtime: out of memoryruntime: s.allocCount=runtime:scanstack: gp=s.freeindex > s.nelemsscanstack - bad statussend on closed channelspan has no free spacestack not a power of 2timer goroutine (idle)trace: alloc too largeutf8mb4_unicode_520_cizero length BIT STRING is not in the Go heap\n) must be a power of 2\n) not in usable range [/etc/pki/tls/cacert.pem23283064365386962890625<invalid reflect.Value>Blank target specified!CPU time limit exceededCertificateInvalidErrorHTTP path, default is /Logical_Order_ExceptionNoncharacter_Code_PointSIGIO: i/o now possibleSIGSYS: bad system callacquirep: already in goallowCleartextPasswordsasn1: structure error: bytes.Buffer: too largechan receive (nil chan)close of closed channeldevice or resource busyfatal: morestack on g0\ngarbage collection scangcDrain phase incorrectinterrupted system callinvalid escape sequenceinvalid time string: %sleft over markroot jobsmakechan: bad alignmentmissing port in addressmissing type in runfinqno application protocolno space left on deviceoperation not permittedoperation not supportedpanic during preemptoffprocresize: invalid argprofiling timer expiredreflect.Value.Interfacereflect.Value.NumMethodreflect.methodValueCallruntime: internal errorruntime: sizeof(hmap) =s.allocCount > s.nelemsschedule: holding locksspan has no free stackssql: database is closedstack growth after forksyntax error in patterntime: invalid duration truncated tag or lengthunexpected address typeunexpected signal valueunlock of unlocked lockunsupported certificatework.nwait > work.nproc%v.WithDeadline(%s [%s])/usr/share/lib/zoneinfo/1164153218269348144531255820766091346740722656
25ConstraintViolationErrorRawSockaddrAny too smallbad defer entry in panicbad defer size class: i=block index out of rangecan not convert type: %Tcan't scan our own stackconnection reset by peererror decrypting messageexec: Stdout already setfile size limit exceededfloating point exceptionfunction not implementedg already on rescan listgcDrainN phase incorrecthash of unhashable type level 2 not synchronizedlink number out of rangeout of streams resourcesprocessClientKeyExchangeprocessServerKeyExchangerunqsteal: runq overflowruntime: C malloc failedruntime: epollwait on fdruntime: found obj at *(runtime: misaligned funcscanstack in wrong phasespan has no free objectsspanBytesAlloc underflowstack trace unavailable\nstructure needs cleaningucs2_general_mysql500_ciutf8_general_mysql500_ci to unused region of span/proc/sys/kernel/hostname2910383045673370361328125ERR|Failed reading line\r\nStopped accepting clients_cgo_thread_start missingacquirep: invalid p stateallgadd: bad status Gidlebad status in shrinkstackcan't scan gchelper stackchansend: spurious wakeupcheckdead: no m for timercheckdead: no p for timercontext deadline exceededdestination not a pointerexplicit tag has no childgenerateClientKeyExchangegenerateServerKeyExchangeinvalid cross-device linkinvalid network interfacemissing stack in newstacknet: inconsistent fdMutexnetpollblock: double waitno answer from DNS serverno buffer space availableno such device or addressno such file or directoryno such network interfaceno suitable address foundoperation now in progressreflect: Bits of nil Typereleasep: invalid p stateresource deadlock avoidedrt_sigaction read failureruntime: bad select size runtime: program exceeds runtime·lock: lock countslice bounds out of rangesocket type not supportedstartm: p has runnable gsstoplockedm: not runnabletls: protocol is shutdownunexpected '[' in addressunexpected ']' in addressunexpected fault address unknown Go type for sliceunsupported type %T, a %s using unaddressable value145519152283668518066406252006-01-02 15:04:05.9
9999972759576141834259033203125: leftover stack barriers SIGSTOP: stop, unblockableUnhandledCriticalExtensionasn1: invalid UTF-8 stringbase 128 integer too largecannot marshal DNS messagecriterion lacks equal signdefault addr for network 'destination pointer is nilentersyscall inconsistent forEachP: P did not run fnfreeSpan given cached spanfreedefer with d.fn != nilinitSpan: unaligned lengthinvalid request descriptormakemap: size out of rangename not unique on networkno CSI structure availableno message of desired typenotewakeup - double wakeupout of memory (stackalloc)persistentalloc: size == 0reflect.Value.CanInterfacerequired key not availableruntime: bad span s.state=runtime: writebarrierptr *selectrecv: too many casesselectsend: too many casessql: no rows in result setstartlockedm: locked to metoo many colons in addresstruncated base 128 integerunclosed criterion bracket expected stack barrier PC  is not assignable to type 0000-00-00 00:00:00.0000000363797880709171295166015625G waiting list is corruptedMSpan_Sweep: bad span stateMust specify an attack nameSIGILL: illegal instructionSIGXCPU: cpu limit exceededSTART TRANSACTION READ ONLY\e]0;%d Bots Connected | %s\acgoUse should not be calledchannel number out of rangecipher: incorrect length IVcommunication error on sendfailed MSpanList_InsertBackgcstopm: not waiting for gcgrowslice: cap out of rangeillegal %s packet length %dinsufficient security levelinternal lockOSThread errorinvalid command line stringinvalid profile bucket typekey was rejected by servicemakechan: size out of rangemakeslice: cap out of rangemakeslice: len out of rangemissing brackets in addressnot a XENIX named type fileos: process not initializedos: unsupported signal typeprogToPointerMask: overflowrestartg: unexpected statusruntime: checkdead: find g runtime: checkdead: nmidle=runtime·unlock: lock countscanframe: bad symbol tablesigsend: inconsistent statesql: Register driver is nilstack size not a power of 2startm: negative nmspinningstopTheWorld: holding lockstls: short read from
 Rand: work.nwait was > work.nproc args stack map entries for /proc/sys/net/core/somaxconn/system/etc/security/cacerts18189894035458564758300781259094947017729282379150390625Cooldown time (0 for none): Deleted client %d - %s - %s\nFailed to parse the cooldownFixedStack is not power-of-2Invalid flag key %s, near %sMHeap_FreeSpanLocked - span MSpan_Sweep: m is not lockedPrepended_Concatenation_MarkSIGHUP: terminal line hangupSIGWINCH: window size change_mheap_alloc not on g0 stackbad pointer in write barriercan't preserve unlinked spancannot unmarshal DNS messagecomparing uncomparable type crypto/rsa: decryption errordestination address requiredfatal: morestack on gsignal\nfile descriptor in bad statefindrunnable: netpoll with pfound next stack barrier at gchelperstart: bad m->helpgcgcstopm: negative nmspinninginvalid runtime symbol tablemissing stack in shrinkstackneed padding in bucket (key)net: dns: unknown string tagnewproc1: new g is not Gdeadnewproc1: newg missing stacknotewakeup - double wakeup (os: process already finishedos: process already releasedprotocol driver not attachedreflect.MakeSlice: len > capreflect: In of non-func typereflect: Key of non-map typeruntime: bad spanBytesAlloc=runtime: casgstatus: oldval=runtime: no module data for runtime: p.gcMarkWorkerMode=runtime: stat overflow: val strconv: ε > (den<<shift)/2syntax error scanning numbertls: bad X25519 public valueunsupported compression for  cannot be converted to type 45474735088646411895751953125Can't convert %T to time.TimeERR|Failed parsing botcount\r\nFailed to parse the bot countReader '%s' is not registeredSIGPIPE: write to broken pipeSIGPWR: power failure restartabi mismatch detected betweenaddspecial on invalid pointerbufio.Scanner: token too longcrypto/aes: invalid key size crypto/des: invalid key size crypto/rc4: invalid key size exec: Wait was already calledgc done but gcphase != _GCoffgfput: bad status (not Gdead)integer not minimally-encodedinvalid TIME packet length %dinvalid character class rangeinvalid length of trace eve
ntio: read/write on closed pipemachine is not on the networkmismatched local address typenetpollblock: corrupted stateno XENIX semaphores availablenumerical result out of rangeoperation already in progressprotocol family not supportedreflect: Elem of invalid typereflect: Out of non-func typeruntime: bad g in cgocallbackruntime: impossible type kindruntime: marking free object runtime: mmap: access denied\nruntime: split stack overflowruntime: stat underflow: val runtime: sudog with non-nil cruntime: unknown pc in defer semacquire not on the G stackstring concatenation too longsyntax error scanning booleantls: invalid NextProtos valuetls: use of closed connectiontoo many open files in systemtraceback has leftover defersunknown IP protocol specifiedunknown certificate authorityzero length OBJECT IDENTIFIER locals stack map entries for 227373675443232059478759765625MHeap_AllocLocked - bad npagesNew account info: \r\nUsername: SIGPROF: profiling alarm clockSIGUSR1: user-defined signal 1SIGUSR2: user-defined signal 2SIGVTALRM: virtual alarm clockSource port, default is randomassignment to entry in nil mapcheckdead: inconsistent countscrypto/dsa: invalid public keycrypto/rsa: verification errorfailed to get system page sizefreedefer with d._panic != nilinappropriate ioctl for deviceinvalid function symbol table\ninvalid network interface nameinvalid pointer found on stackneed padding in bucket (value)net: dns: unknown packing typeprotocol version not supportedprotocol wrong type for socketreflect: Len of non-array typerunqputslow: queue is not fullruntime: bad pointer in frame runtime: found in object at *(socket operation on non-socketsync: inconsistent mutex statesync: unlock of unlocked mutexx509: DSA verification failure...additional frames elided...\n.lib section in a.out corrupted11368683772161602973937988281255684341886080801486968994140625Cannot have more than 255 flagsERR|An unknown error occurred\r\nERR|Attack cannot be launched\r\nMust specify an attack durationSIGSEGV: segmentation violationTLS: sequence
 number wraparoundToo many /'s in prefix, near %sYour access has been terminatedcannot assign requested addresscasgstatus: bad incoming valuescheckmark found unmarked objectcompression not implemented yetentersyscallblock inconsistent fmt: unknown base; can't happeninternal error - misuse of itabinvalid network interface indexmalformed time zone informationmergeRuneSets odd length []runemheap_freestack not on g0 stacknetpollClose: close w/o unblocknetpollUnblock: already closingnon in-use span in unswept listpacer: sweep done at heap size reflect.MakeSlice: negative capreflect.MakeSlice: negative lenreflect: NumIn of non-func typeresetspinning: not a spinning mruntime: address space conflictruntime: cannot allocate memoryruntime: split stack overflow: sql: argument %s from Value: %vsql: duplicate driverConn closetime: missing unit in duration tls: ECDSA verification failuretls: no certificates configuredtls: unsupported hash algorithmx509: certificate is valid for /etc/pki/tls/certs/ca-bundle.crt28421709430404007434844970703125HTTP method name, default is getPOST data, default is empty/noneSIGFPE: floating-point exceptionSIGTTOU: background write to tty\e[34;1mпароль\e[33;3m: \e[0mbufio: invalid use of UnreadBytebufio: invalid use of UnreadRunebufio: tried to fill full bufferchacha20poly1305: bad key lengthcrypto/aes: input not full blockgchelper not running on g0 stackgo package net: hostLookupOrder(mheap_allocstack not on g0 stacknon-Go code disabled sigaltstacknumerical argument out of domainpanic while printing panic valuereflect.nameFrom: tag too long: reflect: NumOut of non-func typeremovespecial on invalid pointerresource temporarily unavailableruntime: failed MSpanList_Insertruntime: failed MSpanList_Removeruntime: gcBitsArenas.next.free=runtime: mcall function returnedruntime: newstack called from g=runtime: stack split at bad timeruntime: sudog with non-nil elemruntime: sudog with non-nil nextruntime: sudog with non-nil prevscanstack: goroutine not stoppedsoftware caused connection abortstackma
pdata: index out of rangesweep increased allocation countsync: Unlock of unlocked RWMutexsync: negative WaitGroup countertls: NextProtos values too largetls: unknown Renegotiation valueuse of closed network connectionx509: ECDSA verification failurex509: unsupported elliptic curve of method on nil interface value142108547152020037174224853515625710542735760100185871124267578125SIGCHLD: child status has changedSIGTTIN: background read from ttySIGXFSZ: file size limit exceeded\\$({[a-zA-Z0-9_]+}|[a-zA-Z0-9_]+)backtrack called for a RuneReaderbytes.Buffer.Grow: negative countcipher: message too large for GCMcolumn count mismatch n:%d len:%dconcurrent map read and map writecrypto/aes: output not full blockcrypto: requested hash function #findrunnable: negative nmspinningfreeing stack not in a stack spanheapBitsSetType: unexpected shiftindefinite length found (not DER)invalid DATETIME packet length %dlocal file '%s' is not registeredreflect.nameFrom: name too long: reflect: ChanDir of non-chan typereflect: Field index out of rangereflect: Field of non-struct typereflect: array index out of rangereflect: slice index out of rangeregexp: unhandled case in compileruntime: castogscanstatus oldval=runtime: goroutine stack exceeds runtime: memory allocated by OS (runtime: name offset out of rangeruntime: text offset out of rangeruntime: type offset out of rangestackalloc not on scheduler stackstoplockedm: inconsistent lockingstruct contains unexported fieldssync: RUnlock of unlocked RWMutextls: failed to write to key log: tls: unexpected ServerKeyExchangetoo many levels of symbolic links/etc/ssl/certs/ca-certificates.crt3552713678800500929355621337890625Ex: seq=0\r\nEx: sport=0 dport=65535MHeap_AllocLocked - MSpan not freeMSpan_EnsureSwept: m is not lockedOther_Default_Ignorable_Code_PointSIGURG: urgent condition on socketValve source engine specific floodadding nil Certificate to CertPoolcrypto/rsa: missing public modulusexecutable file not found in $PATHforEachP: sched.safePointWait != 0heapBitsForSpan: base out of rang
eillegal base64 data at input byte inconsistent state in stackBarrierinvalid nested repetition operatorinvalid or unsupported Perl syntaxinvalid padding bits in BIT STRINGreflect.FuncOf: too many argumentsreflect: Field index out of boundsreflect: Method index out of rangereflect: string index out of rangeruntime.SetFinalizer: cannot pass runtime: g is running but p is notruntime: unexpected return pc for schedule: spinning with local worksql: expected %d arguments, got %dtls: unknown record type requestedtoo many references: cannot spliceunpaired removeDep: no deps for %Tunsupported type %T, a slice of %sx509: unhandled critical extension177635683940025046467781066894531252006-01-02T15:04:05.999999999Z07:0088817841970012523233890533447265625Destination port, default is randomERR|Failed parsing attack command\r\nFailed to parse IP address, near %sMHeap_FreeSpanLocked - invalid freeMax attack duration (-1 for none): [+] DDOS | Hiding from netstat...\r\nencoding/hex: odd length hex stringfindfunc: bad findfunctab entry idxfindrunnable: netpoll with spinninggreyobject: obj not pointer-alignedhandshake should have had a result.misrounded allocation in mallocinitnetwork dropped connection on resetno such multicast network interfacepersistentalloc: align is too largepidleput: P has non-empty run queuereflect.MakeSlice of non-slice typesuperfluous leading zeros in lengthtraceback did not unwind completelytransport endpoint is not connectedunpaired removeDep: no %T dep on %Tx509: decryption password incorrect0123456789abcdefghijklmnopqrstuvwxyz444089209850062616169452667236328125ERR|Specified bot count over limit\r\nGo pointer stored into non-Go memoryIA5String contains invalid characterMStats vs MemStatsType size mismatchaccessing a corrupted shared librarycrypto/cipher: input not full blockskey size not a multiple of key alignmarkrootSpans during second markrootname %q does not begin with a letterreflect: IsVariadic of non-func typereflect: NumField of non-struct typereflect: funcLayout of non-func typeruntime: bad 
notifyList size - sync=runtime: invalid pc-encoded table f=runtime: invalid typeBitsBulkBarrierruntime: mcall called on m->g0 stackruntime: sudog with non-nil waitlinkruntime: wrong goroutine in newstacksignal arrived during cgo execution\nsql: converting argument %s type: %vsyntax error scanning complex numberuncaching span but s.allocCount == 0unsupported SSLv2 handshake receivedx509: zero or negative DSA parameter) is smaller than minimum page size (2220446049250313080847263336181640625Invalid netmask was supplied, near %sSELECT prefix, netmask FROM whitelist\e[32;1mUser added successfully.\e[0m\r\n\e[33;1m%s \e[31mis not a valid attack!\e[37;1mAvailable attack list\r\n\e[36;1m_cgo_notify_runtime_init_done missingall goroutines are asleep - deadlock!attempt to execute C code on Go stackbytes.Buffer: truncation out of rangecannot exec a shared library directlychacha20poly1305: plaintext too largecipher: message authentication failedcrypto/rsa: public exponent too largecrypto/rsa: public exponent too smallcrypto/rsa: unsupported hash functioncrypto: Size of unknown hash functionexplicitly tagged member didn't matchinvalid value / unknown config name: invalid value for TLS config name: %vnon-Value type %T returned from Valueoperation not possible due to RF-killreflect.Value.Bytes of non-byte slicereflect.Value.Bytes of non-rune slicereflect.Value.Convert: value of type reflect: Bits of non-arithmetic Type runtime: address space conflict: map(runtime: allocation size out of rangesetprofilebucket: profile already setsql: Scan called without calling NextstartTheWorld: inconsistent mp->nextptraceback has leftover stack barriersvalue too large for defined data typex509: RSA key missing NULL parameters1110223024625156540423631668090820312555511151231257827021181583404541015625Must specify prefix/netmask as targetsTTL field in IP header, default is 255arg size to reflect.call more than 1GBcan not access a needed shared librarychacha20poly1305: ciphertext too largeconcurrent map iteration and map writeencoding alphabe
t is not 64-bytes longgcBgMarkWorker: blackening not enabledgo package net: using cgo DNS resolverinternal error: unknown string type %dmakechan: invalid channel element typeruntime: function symbol table header:runtime: sudog with non-nil selectdonesql: Register called twice for driver sql: Scan error on column index %d: %vsyscall: readInt with unsupported sizetime: missing Location in call to Datetls: failed to sign ECDHE parameters: tls: invalid ClientKeyExchange messagetls: invalid ServerKeyExchange messagetls: missing ServerKeyExchange messagetls: server selected unsupported curvetls: unknown ECDHE signature algorithmtls: unsupported signing key type (%T)x509: cannot validate certificate for x509: trailing data after X.509 key-id because it doesn't contain any IP SANs2006-01-02 15:04:05.999999999 -0700 MST277555756156289135105907917022705078125MSpan_Sweep: bad span state after sweepheapBitsSetTypeGCProg: small allocationmisrounded allocation in MHeap_SysAllocmissing argument to repetition operatorreceived on thread with no signal stackreflect: FieldByName of non-struct typeruntime: casfrom_Gscanstatus failed gp=runtime: typeBitsBulkBarrier with type stack growth not allowed in system calltags don't match (%d vs %+v) %+v %s @%dtrailing backslash at end of expressiontransport endpoint is already connectedx509: trailing data after DSA signaturex509: trailing data after X.509 subject13877787807814456755295395851135253906256938893903907228377647697925567626953125address family not supported by protocolbulkBarrierPreWrite: unaligned argumentscrypto/cipher: output smaller than inputcrypto/rsa: input must be hashed messagedeferproc: d.panic != nil after newdefernetpollinit: failed to create descriptoroversized record received with length %dreceived but handler not on signal stackrefill of span with free space remainingreflect.Value.SetBytes of non-byte slicereflect.Value.setRunes of non-rune slicereflect: FieldByIndex of non-struct typeruntime.SetFinalizer: first argument is runtime: out of memory: cannot allocat
e sql: statement expects %d inputs; got %dtime: Stop called on uninitialized Timertls: ECDHE RSA requires a RSA server keytls: client didn't provide a certificatevalue size not a multiple of value alignx509: trailing data after DSA parametersx509: trailing data after DSA public keyx509: trailing data after RSA public keyx509: trailing data after X.509 KeyUsage34694469519536141888238489627838134765625Failed to parse the attack duration limitFlag value cannot be more than 255 bytes!MHeap_FreeSpanLocked - invalid span stateMHeap_FreeSpanLocked - invalid stack freeSize of packet data, default is 512 bytes[+] DDOS | Wiping env libc.poison.so.%d\r\n\e[37;1mDuration of the attack, in secondsasn1: internal error in parseTagAndLengthbinary: varint overflows a 64-bit integerbytes.Buffer.WriteTo: invalid Write countcan't call pointer on a non-pointer Valuecgo argument has Go pointer to Go pointergcSweep being done but phase is not GCoffprotocol error, illegal decimals value %druntime.SetFinalizer: second argument is runtime.makemap: unsupported map key typeruntime: typeBitsBulkBarrier without typesetCheckmarked and isCheckmarked disagreesql: converting Exec argument %s type: %vstopTheWorld: not stopped (stopwait != 0)strconv: illegal AppendInt/FormatInt basetime: Reset called on uninitialized Timertime: missing Location in call to Time.Intls: failed to parse client certificate #tls: failed to parse client certificate: tls: no supported elliptic curves offeredtls: unsupported decryption key type (%T)x509: trailing data after ECDSA signaturex509: trailing data after X.509 extension173472347597680709441192448139190673828125867361737988403547205962240695953369140625ERR|Attack targetting whitelisted target\r\nEnter wanted bot count (-1 for full net): Invalid key=value flag combination near %sPrintableString contains invalid characterTOS field value in IP header, default is 0\e[31;1mFailed to parse botcount "%s"\e[0m\r\nacquireSudog: found s.elem != nil in cacheargument count mismatch (got: %d; has: %d)persistentalloc: align i
s not a power of 2runtime: heapBitsSetTypeGCProg: total bitssql: unknown driver %q (forgotten import?)sync/atomic: store of nil value into Valueunexpected signal during runtime executionx509: RSA modulus is not a positive numberx509: trailing data after ECDSA parameters[+] DDOS | Setting up virtual terminal...\r\ncipher: incorrect nonce length given to GCMgcBgMarkWorker: unexpected gcMarkWorkerModegentraceback before goexitPC initializationheapBitsSetTypeGCProg: unexpected bit countinterrupted system call should be restartedmultiple Read calls return no data or errorreflect: FieldByNameFunc of non-struct typereflect: nil type passed to Type.Implementsruntime.SetFinalizer: finalizer already setruntime.SetFinalizer: first argument is nilruntime: casfrom_Gscanstatus bad oldval gp=runtime: lfstackpush invalid packing: node=runtime: releaseSudog with non-nil gp.paramsql: connection returned that was never outthis authentication plugin is not supportedtls: client's Finished message is incorrecttls: unsupported hash function used by peerunknown runnable goroutine during bootstrap using value obtained using unexported field[+] DDOS | Succesfully hijacked connection\r\n\r\e[37;1mпроверив счета... \e[31m\e[34;1mпользователь\e[33;3m: \e[0mcipher: NewGCM requires 128-bit block ciphergcmarknewobject called while doing checkmarknetpollOpen: blocked read on free descriptorreflect: funcLayout with interface receiver systemstack called from unexpected goroutinetls: failed to verify client's certificate: tls: server's Finished message was incorrectuse of WriteTo with pre-connected connectionDomain name transaction ID, default is randomSELECT username FROM users WHERE username = ?Source IP address, 255.255.255.255 for randomTLS requested but server does not support TLScannot send after transport endpoint shutdowncontext: internal error: missing cancel errorcrypto: RegisterHash of unknown hash functionexitsyscall: syscall frame is no longer validheapBitsSetType: called with non-pointer typenetpollOpen: bl
ocked write on free descriptorreflect: internal error: invalid method indexreflect: nil type passed to Type.AssignableTotls: ECDHE ECDSA requires an ECDSA server keyx509: certificate signed by unknown authorityzero length explicit tag was not an asn1.FlagID field value in IP header, default is randomcipher.NewCTR: IV length must equal block sizemath/big: mismatched montgomery number lengthsnetpollinit: failed to create epoll descriptorreflect.Value.Slice: slice index out of boundsreflect: nil type passed to Type.ConvertibleToruntime: failed to create new OS thread (have runtime: name offset base pointer out of rangeruntime: panic before malloc heap initialized\nruntime: text offset base pointer out of rangeruntime: type offset base pointer out of rangesql/driver: couldn't convert %d into type boolsql/driver: couldn't convert %q into type boolsql: selected isolation level is not supportedstopTheWorld: not stopped (status != _Pgcstop)tls: failed to parse certificate from server: tls: server chose an unconfigured cipher suitex509: failed to unmarshal elliptic curve pointP has cached GC work at end of mark terminationSet the FIN bit in IP header, default is 0 (no)Set the PSH bit in IP header, default is 0 (no)Set the RST bit in IP header, default is 0 (no)Set the URG bit in IP header, default is 0 (no)attempting to link in too many shared librariesbufio: reader returned negative count from Readchacha20poly1305: message authentication failedfirst record does not look like a TLS handshakenetpolldeadlineimpl: inconsistent read deadlinetls: ECDHE RSA requires a RSA server public keytls: incorrect renegotiation extension contentstls: preferredCurves includes unsupported curvex509: trailing data after X.509 NameConstraintsP has unflushed stats at end of mark terminationYou may not send attacks longer than %d seconds.bufio: writer returned negative count from Writeconverting driver.Value type %T (%q) to a %s: %vnetpollClose: blocked read on closing descriptornetpolldeadlineimpl: inconsistent write deadlineruntime: cannot
 map pages in arena address spacestrconv: illegal AppendFloat/FormatFloat bitSizetls: CloseWrite called before handshake completetls: server advertised unrequested NPN extensionx509: trailing data after X.509 BasicConstraintsx509: trailing data after X.509 ExtendedKeyUsagex509: trailing data after X.509 authority key-id/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pemAck number value in TCP header, default is randomRandomize packet data content, default is 1 (yes)[+] DDOS | Masking connection from utmp+wtmp...\r\n[+] DDOS | Removing all traces of LD_PRELOAD...\r\ncasgstatus: waiting for Gwaiting but is Grunnablechacha20poly1305: bad nonce length passed to Openchacha20poly1305: bad nonce length passed to Sealgo package net: dynamic selection of DNS resolverinvalid memory address or nil pointer dereferenceinvalid or incomplete multibyte or wide characternetpollClose: blocked write on closing descriptorreflect.Value.Slice: slice of unaddressable arrays.allocCount != s.nelems && freeIndex == s.nelemsstrconv: internal error, rest != 0 but needed > 0strconv: num > den<<shift in adjustLastDigitFixedstrings.Reader.UnreadByte: at beginning of stringstrings.Reader.WriteTo: invalid WriteString counttls: client using inappropriate protocol fallbacktls: server advertised unrequested ALPN extensionuint64 values with high bit set are not supportedwritebarrierptr_prewrite1 called with mp.p == nilx509: certificate contained IP address of length x509: certificate has expired or is not yet validmallocgc called with gcphase == _GCmarkterminationrecursive call during initialization - linker skewx509: RSA public exponent is not a positive numberx509: missing ASN.1 contents; use ParseCertificateMySQL server does not support required protocol 41+runtime: cannot reserve arena virtual address spacesql/driver: couldn't convert %v (%T) into type booltls: ECDHE ECDSA requires a ECDSA server public keytls: server advertised both NPN and ALPN extensionstls: server selected unsupported compression formattls: server's identity changed during 
renegotiationFailed to create new user. An unknown error occured.Please wait %d seconds before sending another attackSet internal IP to destination ip, default is 0 (no)casfrom_Gscanstatus: gp->status is not in scan statecommands out of sync. You can't run this command nowcrypto/rsa: message too long for RSA public key sizedriver: skip fast-path; continue as if unimplementedfunction symbol table not sorted by program counter:invalid DSN: did you forget to escape a param value?runtime.SetFinalizer: pointer not in allocated blockruntime: use of FixAlloc_Alloc before FixAlloc_Init\ntls: bad signature type for client's RSA certificatetls: server selected unsupported protocol version %xx509: cannot verify signature: insecure algorithm %vx509: trailing data after X.509 certificate policiesUDP flood with less options. optimized for higher PPSreflect.Value.Slice: string slice index out of boundsreflect: non-interface type passed to Type.Implementsruntime: failed to unwind through stackBarrier at SP tls: client does not support uncompressed connectionstls: client doesn't support any common hash functionstls: unsupported hash function for client certificatex509: DSA signature contained zero or negative valuesx509: certificate specifies an incompatible key usagex509: trailing data after X.509 authority informationSequence number value in TCP header, default is random\tgoroutine running on other thread; stack unavailable\ngcControllerState.findRunnable: blackening not enabledno goroutines (main called runtime.Goexit) - deadlock!reflect.FuncOf does not support more than 50 argumentssql: expected %d destination arguments in Scan, not %dtls: ECDSA signature contained zero or negative valuestls: bad signature type for client's ECDSA certificatetls: failed to create cipher while encrypting ticket: tls: server resumed a session with a different versiontls: unsupported signature type for client certificatex509: cannot verify signature: algorithm unimplementedx509: trailing data after X.509 CRL distribution pointbufio.Scanner: Sp
litFunc returns negative advance countcasfrom_Gscanstatus:top gp->status is not in scan statecipher.NewCBCDecrypter: IV length must equal block sizecipher.NewCBCEncrypter: IV length must equal block sizenewproc: function arguments too large for new goroutinereflect.FuncOf: last arg of variadic func must be slicereflect: internal error: invalid use of makeMethodValuex509: ECDSA signature contained zero or negative valuesx509: failed to load system roots and no roots providedx509: too many intermediates for path length constraintCannot specify more than 255 targets in a single attack!b4050a850c04b3abf54132565044b0b7d7bfd8ba270b39432355ffb4b70e0cbd6bb4bf7f321390b94a03c1d356c21122343280d6115c1d21bd376388b5f723fb4c22dfe6cd4375a05a07476444d5819985007e34in gcMark expecting to see gcphase as _GCmarkterminationsql: argument %s: non-subset type %T returned from Valuesql: driver does not support the use of Named Parametersthis user requires mysql native password authentication.tls: could not validate signature of connection nonces: tls: no cipher suite supported by both client and serverSet the Dont-Fragment bit in IP header, default is 0 (no)gentraceback cannot trace user goroutine on its own stacknon-Go code set up signal handler without SA_ONSTACK flagreceived record with version %x when expecting version %xruntime:stoplockedm: g is not Grunnable or Gscanrunnable\nsync: WaitGroup misuse: Add called concurrently with Waittls: application data record requested while in handshakemysql: driver does not support the use of Named Parameterssql: Transaction has already been committed or rolled backbufio.Scanner: SplitFunc returns advance count beyond inputbytes.Buffer: UnreadByte: previous operation was not a readinvalid DSN: missing the slash separating the database nameruntime: mmap: too much locked memory (check 'ulimit -l').\nsync/atomic: store of inconsistently typed value into Valuetls: server resumed a session with a different cipher suiteunsupported Scan, storing driver.Value type %T into type %Tgo package net: GODEBU
G setting forcing use of Go's resolverruntime: may need to increase max user processes (ulimit -u)tls: initial handshake had non-empty renegotiation extensionSELECT username, max_bots, admin FROM users WHERE api_key = ?\r\nValue of 65535 for a flag denotes random (for ports, etc)\r\nreflect: creating a name with a package path is not supportedtls: certificate private key does not implement crypto.Signercommands out of sync. Did you run multiple statements at once?found bad pointer in Go heap (incorrect use of unsafe or cgo?)runtime: internal error: misuse of lockOSThread/unlockOSThreadx509: certificate is not authorized to sign other certificates4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f55ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_DNS resolver flood using the targets domain, input IP is ignored\r\e[32;1mпроизошла неизвестная ошибка\r\ntls: certificate private key does not implement crypto.DecrypterSELECT id, duration_limit, cooldown FROM users WHERE username = ?\e[31;1mBot count to send is bigger then allowed bot maximum\e[0m\r\nruntime.SetFinalizer: pointer not at beginning of allocated blockstrconv: internal error: extFloat.FixedDecimal called with n == 0unsupported protocol version %d. Version %d or higher is requiredx509: issuer name does not match subject from issuing certificatetls: client offered an unsupported, maximum protocol version of %xx509: certificate is not valid for any names, but wanted to match go package net: built with netgo build tag; using Go's DNS resolverinvalid DSN: network address not terminated (missing closing brace)tls: handshake or ChangeCipherSpec requested while not in handshake2695994666715063979466701508701962594045780771442439172168272236806126959946667150639794667015087019630673557916260026308143510066298881Set the ACK 
bit in IP header, default is 0 (no) except for ACK floodSet the ACK bit in IP header, default is 0 (no) except for SYN floodruntime:greyobject: checkmarks finds unexpected unmarked object obj=invalid DSN: interpolateParams can not be used with unsafe collationstls: handshake message of length %d bytes exceeds maximum of %d bytestls: client's certificate contains an unsupported public key of type %Ttls: server's certificate contains an unsupported type of public key: %Ttls: received unexpected handshake message of type %T when waiting for %Ttls: no supported signature algorithm found for signing client certificatehandshake should not have been able to complete after handshakeCond was setruntime: found space for saved base pointer, but no framepointer experiment\nInvalid attack duration, near %s. Duration must be between 0 and 3600 seconds115792089210356248762697446949407573529996955224135760342422259061068512044369115792089210356248762697446949407573530086143415290314195533631308867097853951tls: client certificate private key of type %T does not implement crypto.Signer\e[31mнажмите любую клавишу для выхода. (any key)\e[0mtls: either ServerName or InsecureSkipVerify must be specified in the tls.Configx509: invalid signature: parent certificate cannot sign this kind of certificatex509: a root or intermediate certificate is not authorized to sign in this domain (possibly because of %q while trying to verify candidate authority certificate %q)\e[37;1mList of flags key=val seperated by spaces. Valid flags for this method are\r\n\r\nreflect.Value.Interface: cannot return value obtained from unexported field or methodsql: for argument %s, driver ColumnConverter error converted %T to unsupported type %Tstrict mode has been removed. See https://github.com/go-sql-driver/mysql/wiki/strict-mode\e[37;1m[!] Sharing access IS prohibited!\r\n[!] Do NOT share your credentials!\r\n\e[36;1mReady\r\npacket for query is too large. Try adjusting the 'max_allowed_packet' variable on the servera handshake h
ash for a client-certificate was requested after discarding the handshake buffertls: failed to sign handshake with client certificate: unknown client certificate key type: %T3617de4a96262c6f5d9e98bf9292dc29f8f41dbd289a147ce9da3113b5f0b8c00a60b1ce1d7e819d7a431d7c90ea0e5faa87ca22be8b05378eb1c71ef320ad746e1d3b628ba79b9859f741e082542a385502f25dbf55296c3a545e3872760ab7b3312fa7e23ee7e4988e056be3f82d19181d9c6efe8141120314088f5013875ac656398d8a2ed19d2a85c8edd3ec2aef00000000001111111111222222222233333333334444444444555555555566666666667777777777888888888899999999990123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789\e[37;1mComma delimited list of target prefixes\r\nEx: 192.168.0.1\r\nEx: 10.0.0.0/8\r\nEx: 8.8.8.8,127.0.0.0/29asn1: time did not serialize back to the original value and may be invalid: given %q, but serialized as %qSELECT time_sent, duration FROM history WHERE user_id = ? AND (time_sent + duration + ?) > UNIX_TIMESTAMP()INSERT INTO history (user_id, time_sent, duration, command, max_bots) VALUES (?, UNIX_TIMESTAMP(), ?, ?, ?)3940200619639447921227904010014361380507973927046544666794829340424572177149687032904726608825893800186160697311231939402006196394479212279040100143613805079739270465446667946905279627659399113263569398956308152294913554433653942643this user requires clear text authentication. If you still want to use it, please add 'allowCleartextPasswords=1' to your DSNc6858e06b70404e9cd9e3ecb662395b4429c648139053fb521f828af606b4d3dbaa14b5e77efe75928fe1dc127a2ffa8de3348b3c1856a429bf97e7e31c2e5bd66051953eb9618e1c9a1f929a21a0b68540eea2da725b99b315f3b8b489918ef109e156193951ec7e937b1652c0bd3bb1bf073573df883d2c34f1ef451fd46b503f0011839296a789a3bc0045c8a5fb42c7d1bd998f54449579b446817afbd17273e662c97ee72995ef42640c550b9013fad0761353c7086a272c24088be94769fd16650INSERT INTO users (username, password, max_bots, admin, last_paid, cooldown, duration_limit) VALUES (?, ?, ?, 0, UNIX_TIMESTAMP(), ?, ?)SELECT username, max_bots, admin FROM users WHERE username = ? AND
 password = ? AND (wrc = 0 OR (UNIX_TIMESTAMP() - last_paid < `intvl` * 24 * 60 * 60))68647976601306097149819007990813932172694353001433054093944634591855431833976560521225596406614545549772963113914808580371219879997166438125740282911150571516864797660130609714981900799081393217269435300143305409394463459185543183397655394245057746333217197532963996371363321113864768612440380340372808892707005449this user requires old password authentication. If you still want to use it, please add 'allowOldPasswords=1' to your DSN. See also https://github.com/go-sql-driver/mysql/wiki/old_passwords
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKMNOPQRSTUVWXYZ[\\]^_`abcefghijklmnopqrstuvwxyz{|
sync/atomic.CompareAndSwapUint64.args_stackmap
sync/atomic.CompareAndSwapUintptr.args_stackmap
sync/atomic.AddInt32.args_stackmap
sync/atomic.AddUint32.args_stackmap
sync/atomic.StoreUint32.args_stackmap
sync/atomic.StoreUint64.args_stackmap
sync/atomic.StoreUintptr.args_stackmap
vendor/golang_org/x/crypto/curve25519.ladderstep.args_stackmap
net(.text)
main.attackInfoLookup
go.itab.*errors.errorString,error
main.flagInfoLookup
runtime.featureFlags
runtime.processorVersionInfo
runtime.vendorStringBytes
runtime.gomaxprocs
runtime.newprocs
runtime.timerprocPC
runtime.firstmoduledata
runtime.firstStackBarrierOffset
runtime.netpollInited
runtime.procAuxv
runtime.startupRandomData
runtime.urandom_dev
runtime.badmorestackg0Msg
runtime.badmorestackgsignalMsg
runtime.systemstackPC
runtime.systemstack_switchPC
go.itab.runtime.errorString,error
go.itab.*net.byRFC6724,sort.Interface
net.rfc6724policyTable
net.statictmp_54
go.itab.net.byMaskLength,sort.Interface
net.statictmp_96
net.confOnce
net.confVal
net.netGo
net.netCgo
net.getHostname
net.DefaultResolver
net.errTimeout
net.statictmp_196
go.itab.net.UnknownNetworkError,error
go.itab.*net.UnixAddr,net.Addr
go.itab.*net.AddrError,error
go.itab.*net.TCPAddr,net.Addr
go.itab.*net.UDPAddr,net.Addr
go.itab.*net.IPAddr,net.Addr
net.errNoSuitableAddress
net.errMissingAddress
go.itab.*net.OpError,error
net.testHookSetKeepAlive
net.errCanceled
go.itab.*net.UnixConn,net.Conn
go.itab.*net.TCPConn,net.Conn
go.itab.*net.UDPConn,net.Conn
go.itab.*net.IPConn,net.Conn
go.itab.*net.TCPListener,net.Listener
go.itab.*net.UnixListener,net.Listener
go.itab.*net.DNSError,error
net.errNoSuchHost
go.itab.*net.UDPConn,io.ReadWriter
go.itab.*net.TCPConn,io.ReadWriter
go.itab.*net.TCPConn,net.dnsConn
go.itab.*net.UDPConn,net.dnsConn
net.testHookDNSDialer
net.statictmp_549
net.statictmp_551
net.v4InV6Prefix
net.resolvConf
net.lookupOrderName
net.defaultNS
go.itab.*net.dnsRR_Header,net.dnsStruct
net.rr_mk
go.itab.*net.dnsRR_Header,net.dnsRR
go.itab.*net.dnsHeader,net.dnsStruct
go.itab.*net.dnsQuestion,net.dnsStruct
go.itab.*net.dnsMsgHdr,net.dnsStruct
net.errClosing
net.serverInit
net.connectFunc
net.getsockoptIntFunc
net.noDeadline
net.closeFunc
syscall.ForkLock
net.testHookHostsPath
net.hosts
net.flagNames
net.errInvalidInterface
net.zoneCache
net.errInvalidInterfaceIndex
net.errNoSuchInterface
net.errInvalidInterfaceName
net.IPv4zero
net.IPv6unspecified
net.IPv6loopback
net.IPv4bcast
net.classBMask
net.classCMask
net.classAMask
net.statictmp_1672
go.itab.*net.ParseError,error
go.itab.*net.IPAddr,net.sockaddr
net.statictmp_1939
net.ErrWriteToConnected
net.statictmp_2107
net.socketFunc
net.statictmp_2132
net.supportsIPv4map
net.supportsIPv4
go.itab.*syscall.SockaddrInet4,syscall.Sockaddr
net.IPv6zero
go.itab.*syscall.SockaddrInet6,syscall.Sockaddr
net.protocols
net.services
net.lookupGroup
net.onceReadProtocols
net.supportsIPv6
go.itab.net.writerOnly,io.Writer
net.threadLimit
net.statictmp_2600
go.itab.*sync.Mutex,sync.Locker
net.onceReadServices
net.accept4Func
net.acceptFunc
net.listenerBacklog
net.listenFunc
go.itab.*net.UDPAddr,net.sockaddr
net.errNoSuchMulticastInterface
go.itab.*net.TCPAddr,net.sockaddr
net.statictmp_3119
go.itab.*net.TCPConn,io.Writer
net.testHookDialTCP
net.statictmp_3307
go.itab.*net.UnixAddr,net.sockaddr
net._cgo_cb4050e05860_C2func_getaddrinfo
net._cgo_cb4050e05860_Cfunc_free
net._cgo_cb4050e05860_Cfunc_freeaddrinfo
net._cgo_cb4050e05860_Cfunc_gai_strerror
net._cgo_cb4050e05860_Cfunc__Cmalloc
go.itab.net.addrinfoErrno,error
go.itab.*net.Dialer,net.dnsDialer
go.itab.*net.dnsRR_CNAME,net.dnsRR
go.itab.*net.dnsRR_MX,net.dnsRR
go.itab.*net.dnsRR_NS,net.dnsRR
go.itab.*net.dnsRR_PTR,net.dnsRR
go.itab.*net.dnsRR_SOA,net.dnsRR
go.itab.*net.dnsRR_TXT,net.dnsRR
go.itab.*net.dnsRR_SRV,net.dnsRR
go.itab.*net.dnsRR_A,net.dnsRR
go.itab.*net.dnsRR_AAAA,net.dnsRR
net.aLongTimeAgo
net.testHookCanceledDial
net.testHookLookupIP
net.initdone.
net.statictmp_4077
net.statictmp_4090
net.statictmp_4091
net.IPv4allsys
net.IPv4allrouter
net.statictmp_4107
net.statictmp_4108
net.statictmp_4114
net.statictmp_4115
net.statictmp_4119
net.statictmp_4120
net.statictmp_4078
net.statictmp_4079
net.statictmp_4080
net.statictmp_4076
net.statictmp_4081
net.statictmp_4082
net.statictmp_4083
net.statictmp_4087
go.itab.*net.timeoutError,error
net.statictmp_4088
time.Local
time.localLoc
time.localOnce
encoding/binary.overflow
encoding/binary.initdone.
go.itab.*math/rand.rngSource,math/rand.Source
math/rand.globalRand
math/rand.rng_cooked
math/rand.initdone.
go.itab.*math/rand.lockedSource,math/rand.Source
sync.allPoolsMu
sync.allPools
go.itab.*sync.rlocker,sync.Locker
sync.initdone.
go.itab.*database/sql.driverConn,sync.Locker
database/sql.connectionRequestQueueSize
go.itab.*database/sql.driverStmt,sync.Locker
go.itab.*github.com/go-sql-driver/mysql.binaryRows,database/sql/driver.Rows
github.com/go-sql-driver/mysql.scanTypeRawBytes
github.com/go-sql-driver/mysql.scanTypeUint8
github.com/go-sql-driver/mysql.scanTypeInt8
github.com/go-sql-driver/mysql.scanTypeNullInt
github.com/go-sql-driver/mysql.scanTypeUint16
github.com/go-sql-driver/mysql.scanTypeInt16
github.com/go-sql-driver/mysql.scanTypeUint32
github.com/go-sql-driver/mysql.scanTypeInt32
github.com/go-sql-driver/mysql.scanTypeFloat32
github.com/go-sql-driver/mysql.scanTypeNullFloat
github.com/go-sql-driver/mysql.scanTypeFloat64
github.com/go-sql-driver/mysql.scanTypeNullTime
github.com/go-sql-driver/mysql.scanTypeUint64
github.com/go-sql-driver/mysql.scanTypeInt64
github.com/go-sql-driver/mysql.scanTypeUnknown
github.com/go-sql-driver/mysql.ErrPktSyncMul
github.com/go-sql-driver/mysql.ErrPktSync
go.itab.*crypto/tls.Conn,net.Conn
github.com/go-sql-driver/mysql.tlsConfigRegister
unicode/utf8.first
io.ErrNoProgress
os.Kill
syscall.zeroSysProcAttr
syscall.zeroProcAttr
go.itab.*syscall.SockaddrNetlink,syscall.Sockaddr
syscall.SocketDisableIPv6
unicode.Greek
unicode.IDS_Binary_Operator
unicode.foldGreek
go.itab.crypto/tls.rsaKeyAgreement,crypto/tls.keyAgreement
go.itab.*crypto/tls.ecdheKeyAgreement,crypto/tls.keyAgreement
crypto/rand.Reader
go.itab.*crypto/tls.clientHelloMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.serverHelloMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.helloRequestMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.serverKeyExchangeMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.certificateMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.newSessionTicketMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.serverHelloDoneMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.certificateVerifyMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.certificateRequestMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.finishedMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.clientKeyExchangeMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.nextProtoMsg,crypto/tls.handshakeMessage
go.itab.*crypto/tls.certificateStatusMsg,crypto/tls.handshakeMessage
go.itab.net/url.EscapeError,error
go.itab.net/url.InvalidHostError,error
net/url.initdone.
crypto/x509.systemRoots
crypto/x509.systemRootsErr
go.itab.crypto/x509.SystemRootsError,error
go.itab.crypto/x509.HostnameError,error
crypto/rand.isEAGAIN
crypto/rand.altGetRandom
crypto/rand.useSyscall
crypto/rand.once
go.itab.*crypto/rand.devReader,io.Reader
go.itab.crypto/rand.hideAgainReader,io.Reader
crypto/rand.smallPrimesProduct
crypto/rand.initdone.
go.itab.*strings.Reader,io.ByteScanner
encoding/asn1.flagType
internal/syscall/unix.randomUnsupported
sync/atomic.(*Value).Load
sync/atomic.(*Value).Store
sync/atomic.(*noCopy).Lock
sync/atomic.CompareAndSwapUintptr
sync/atomic.CompareAndSwapUint64
sync/atomic.AddInt32
sync/atomic.AddUint32
sync/atomic.StoreUint32
sync/atomic.StoreUint64
sync/atomic.StoreUintptr
type..hash.sync/atomic.Value
type..eq.sync/atomic.Value
sync/atomic.StorePointer
sync/atomic.CompareAndSwapPointer
runtime.GOMAXPROCS
runtime.errorString.Error
runtime.(*gcControllerState).startCycle
runtime.(*gcControllerState).endCycle
runtime.(*gcControllerState).enlistWorker
runtime.(*gcControllerState).findRunnableGCWorker
sync.runtime_registerPoolCleanup
runtime.gchelperstart
runtime.scanstack
runtime.scanframeworker
runtime.queueRescan
runtime.dequeueRescan
runtime.scanblock
runtime.scanobject
runtime.greyobject
sync.event
net.runtime_pollServerInit
runtime.netpollinited
net.runtime_pollOpen
net.runtime_pollClose
net.runtime_pollReset
net.runtime_pollWait
net.runtime_pollSetDeadline
net.runtime_pollUnblock
runtime.netpollready
runtime.netpollblockcommit
runtime.netpollblock
runtime.netpollunblock
runtime.netpolldeadlineimpl
runtime.netpollDeadline
runtime.netpollReadDeadline
runtime.netpollWriteDeadline
runtime.netpollinit
runtime.netpollopen
runtime.netpollclose
runtime.netpoll
runtime.getproccount
runtime.newosproc
runtime.getRandomData
runtime.sigprocmask
runtime.deferproc
sync.throw
runtime.gcprocs
runtime.needaddgcproc
runtime.casfrom_Gscanstatus
runtime.castogscanstatus
runtime.scang
runtime.exitsyscallfast_pidle
runtime.beforefork
syscall.runtime_BeforeFork
runtime.afterfork
syscall.runtime_AfterFork
runtime.newproc
runtime.newproc1
runtime._System
runtime.procresize
runtime.pidleput
runtime.pidleget
sync.runtime_procPin
sync.runtime_procUnpin
sync/atomic.runtime_procPin
sync/atomic.runtime_procUnpin
sync.runtime_canSpin
sync.runtime_doSpin
runtime.(*randomOrder).reset
runtime.extendRandom
sync.runtime_Semacquire
net.runtime_Semacquire
sync.runtime_Semrelease
sync.runtime_SemacquireMutex
net.runtime_Semrelease
sync.runtime_notifyListAdd
sync.runtime_notifyListWait
sync.runtime_notifyListNotifyAll
sync.runtime_notifyListNotifyOne
sync.runtime_notifyListCheck
runtime.resetcpuprofiler
runtime.msigrestore
runtime.syncadjustsudogs
runtime.slicerunetostring
runtime.badsystemstack
runtime.timerproc
net.runtimeNano
runtime.traceProcFree
runtime.traceGomaxprocs
runtime.traceProcStart
runtime.traceProcStop
runtime.traceGCScanStart
runtime.traceGCScanDone
runtime.(*gcControllerState).findRunnableGCWorker.func1
runtime.scanstack.func1
runtime.newproc.func1
runtime.(*errorString).Error
runtime.systemstack_switch
runtime.systemstack
runtime.procyield
runtime.fastrand
runtime.raiseproc
runtime.rtsigprocmask
runtime.sigreturn
type..hash.struct { F uintptr; runtime.s **runtime.mspan; runtime.size *uintptr; runtime.needzero bool }
type..eq.struct { F uintptr; runtime.s **runtime.mspan; runtime.size *uintptr; runtime.needzero bool }
type..hash.runtime.gcControllerState
type..eq.runtime.gcControllerState
type..hash.struct { F uintptr; runtime.s **runtime.mspan; runtime.h *runtime.mheap; runtime.npage uintptr; runtime.sizeclass int32; runtime.large bool }
type..eq.struct { F uintptr; runtime.s **runtime.mspan; runtime.h *runtime.mheap; runtime.npage uintptr; runtime.sizeclass int32; runtime.large bool }
type..hash.struct { F uintptr; runtime.h *runtime.mheap; runtime.s *runtime.mspan; runtime.acct int32 }
type..eq.struct { F uintptr; runtime.h *runtime.mheap; runtime.s *runtime.mspan; runtime.acct int32 }
type..hash.struct { runtime.enabled bool; runtime.pad [3]uint8; runtime.needed bool; runtime.cgo bool; runtime.alignme uint64 }
type..eq.struct { runtime.enabled bool; runtime.pad [3]uint8; runtime.needed bool; runtime.cgo bool; runtime.alignme uint64 }
type..hash.struct { runtime.schedtick uint32; runtime.schedwhen int64; runtime.syscalltick uint32; runtime.syscallwhen int64 }
type..eq.struct { runtime.schedtick uint32; runtime.schedwhen int64; runtime.syscalltick uint32; runtime.syscallwhen int64 }
type..hash.[256]struct { runtime.schedtick uint32; runtime.schedwhen int64; runtime.syscalltick uint32; runtime.syscallwhen int64 }
type..eq.[256]struct { runtime.schedtick uint32; runtime.schedwhen int64; runtime.syscalltick uint32; runtime.syscallwhen int64 }
type..hash.struct { runtime.note runtime.note; runtime.mask [3]uint32; runtime.wanted [3]uint32; runtime.ignored [3]uint32; runtime.recv [3]uint32; runtime.state uint32; runtime.inuse bool }
type..eq.struct { runtime.note runtime.note; runtime.mask [3]uint32; runtime.wanted [3]uint32; runtime.ignored [3]uint32; runtime.recv [3]uint32; runtime.state uint32; runtime.inuse bool }
errors.(*errorString).Error
strconv.AppendQuoteRuneToASCII
sync.(*Cond).Wait
sync.(*Cond).Signal
sync.(*Cond).Broadcast
sync.(*copyChecker).check
sync.(*noCopy).Lock
sync.(*Mutex).Lock
sync.(*Mutex).Unlock
sync.(*Once).Do
sync.(*Pool).Put
sync.(*Pool).Get
sync.(*Pool).getSlow
sync.(*Pool).pin
sync.(*Pool).pinSlow
sync.poolCleanup
sync.init.1
sync.init.2
sync.(*RWMutex).RLock
sync.(*RWMutex).RUnlock
sync.(*RWMutex).Lock
sync.(*RWMutex).Unlock
sync.(*rlocker).Lock
sync.(*rlocker).Unlock
sync.(*WaitGroup).Add
sync.(*WaitGroup).Done
sync.init
type..hash.sync.Cond
type..eq.sync.Cond
sync.(*poolLocal).Lock
sync.(*poolLocal).Unlock
syscall.forkAndExecInChild
syscall.forkExecPipe
syscall.writeIDMappings
syscall.writeUidGidMappings
syscall.forkExec
syscall.StartProcess
syscall.(*NetlinkRouteRequest).toWireFormat
syscall.newNetlinkRouteRequest
syscall.NetlinkRIB
syscall.ParseNetlinkMessage
syscall.ParseNetlinkRouteAttr
syscall.(*SockaddrInet4).sockaddr
syscall.(*SockaddrInet6).sockaddr
syscall.(*SockaddrNetlink).sockaddr
syscall.Bind
syscall.Connect
syscall.Socket
syscall.Kill
syscall.bind
syscall.connect
syscall.socket
type..hash.syscall.NetlinkRouteRequest
type..eq.syscall.NetlinkRouteRequest
type..hash.syscall.SockaddrInet4
type..eq.syscall.SockaddrInet4
time.(*Location).lookupFirstZone
time.(*Location).firstZoneUsed
time.initLocal
type..hash.time.zoneTrans
type..eq.time.zoneTrans
type..hash.[1]time.zoneTrans
type..eq.[1]time.zoneTrans
os.newProcess
os.(*Process).setDone
os.(*Process).done
os.StartProcess
os.(*Process).Release
os.(*Process).Kill
os.(*Process).Wait
os.(*Process).Signal
os.(*ProcessState).Sys
os.startProcess
os.(*Process).kill
os.(*ProcessState).String
os.(*Process).wait
os.(*Process).signal
os.(*Process).release
os.Hostname
os.hostname
os.(*Process).blockUntilWaitable
type..hash.os.Process
type..eq.os.Process
type..hash.os.ProcessState
type..eq.os.ProcessState
reflect.flag.mustBe
reflect.flag.mustBeExported
reflect.flag.mustBeAssignable
go.(*struct { sync.RWMutex; reflect.m map[*reflect.rtype][]reflect.method }).Lock
go.(*struct { sync.RWMutex; reflect.m map[*reflect.rtype][]reflect.method }).Unlock
go.(*struct { sync.RWMutex; reflect.m map[*reflect.rtype]*reflect.ptrType }).Lock
go.(*struct { sync.RWMutex; reflect.m map[*reflect.rtype]*reflect.ptrType }).Unlock
go.(*struct { sync.RWMutex; reflect.m map[uint32][]*reflect.rtype }).Lock
go.(*struct { sync.RWMutex; reflect.m map[uint32][]*reflect.rtype }).Unlock
go.(*struct { sync.RWMutex; reflect.m map[reflect.layoutKey]reflect.layoutType }).Lock
go.(*struct { sync.RWMutex; reflect.m map[reflect.layoutKey]reflect.layoutType }).Unlock
fmt.(*pp).Flag
math/rand.NewSource
math/rand.New
math/rand.(*Rand).Seed
math/rand.(*Rand).Int63
math/rand.(*Rand).Uint64
math/rand.(*Rand).Int
math/rand.(*Rand).Read
math/rand.read
math/rand.Seed
math/rand.Int
math/rand.(*lockedSource).Int63
math/rand.(*lockedSource).Uint64
math/rand.(*lockedSource).Seed
math/rand.(*lockedSource).seedPos
math/rand.(*lockedSource).read
math/rand.(*rngSource).Seed
math/rand.(*rngSource).Int63
math/rand.(*rngSource).Uint64
math/rand.init
math/rand.(*Rand).Int63-fm
math/rand.(Source64).Int63-fm
type..hash.math/rand.Rand
type..eq.math/rand.Rand
type..hash.math/rand.lockedSource
type..eq.math/rand.lockedSource
type..hash.struct { F uintptr; R math/rand.Source64 }
type..eq.struct { F uintptr; R math/rand.Source64 }
net.sortByRFC6724
net.sortByRFC6724withSrcs
net.srcAddrs
net.ipAttrOf
net.(*byRFC6724).Len
net.(*byRFC6724).Swap
net.(*byRFC6724).Less
net.init.1
net.byMaskLength.Len
net.byMaskLength.Swap
net.byMaskLength.Less
net.mustCIDR
net.policyTable.Classify
net.classifyScope
net.commonPrefixLen
net.systemConf
net.initConfVal
net.(*conf).canUseCgo
net.(*conf).hostLookupOrder
net.goDebugNetDNS
net.isLocalhost
net.isGateway
net.(*Dialer).deadline
net.partialDeadline
net.parseNetwork
net.(*Resolver).resolveAddrList
net.(*Dialer).Dial
net.(*Dialer).DialContext
net.dialParallel
net.dialSerial
net.dialSingle
net.Listen
net.answer
net.equalASCIILabel
net.isDomainName
net.absDomainName
net.(*UDPConn).dnsRoundTrip
net.dnsRoundTripUDP
net.(*TCPConn).dnsRoundTrip
net.dnsRoundTripTCP
net.(*Dialer).dialDNS
net.exchange
net.tryOneName
net.addrRecordList
net.(*resolverConfig).init
net.(*resolverConfig).tryUpdate
net.(*resolverConfig).tryAcquireSema
net.(*resolverConfig).releaseSema
net.avoidDNS
net.(*dnsConfig).nameList
net.hostLookupOrder.String
net.goLookupIPFiles
net.goLookupIP
net.goLookupIPCNAMEOrder
net.dnsReadConfig
net.(*dnsConfig).serverOffset
net.dnsDefaultSearch
net.(*dnsHeader).Walk
net.(*dnsQuestion).Walk
net.(*dnsRR_Header).Header
net.(*dnsRR_Header).Walk
net.(*dnsRR_CNAME).Header
net.(*dnsRR_CNAME).Walk
net.(*dnsRR_MX).Header
net.(*dnsRR_MX).Walk
net.(*dnsRR_NS).Header
net.(*dnsRR_NS).Walk
net.(*dnsRR_PTR).Header
net.(*dnsRR_PTR).Walk
net.(*dnsRR_SOA).Header
net.(*dnsRR_SOA).Walk
net.(*dnsRR_TXT).Header
net.(*dnsRR_TXT).Walk
net.(*dnsRR_SRV).Header
net.(*dnsRR_SRV).Walk
net.(*dnsRR_A).Header
net.(*dnsRR_A).Walk
net.(*dnsRR_AAAA).Header
net.(*dnsRR_AAAA).Walk
net.packDomainName
net.unpackDomainName
net.packStruct
net.unpackStruct
net.printStruct
net.packRR
net.unpackRR
net.(*dnsMsgHdr).Walk
net.(*dnsMsg).Pack
net.(*dnsMsg).Unpack
net.(*dnsMsg).String
net.(*dnsMsg).IsResponseTo
net.(*fdMutex).incref
net.(*fdMutex).increfAndClose
net.(*fdMutex).decref
net.(*fdMutex).rwlock
net.(*fdMutex).rwunlock
net.(*netFD).incref
net.(*netFD).decref
net.(*netFD).readLock
net.(*netFD).readUnlock
net.(*netFD).writeLock
net.(*netFD).writeUnlock
net.(*pollDesc).init
net.(*pollDesc).close
net.(*pollDesc).evict
net.(*pollDesc).prepare
net.(*pollDesc).prepareRead
net.(*pollDesc).prepareWrite
net.(*pollDesc).wait
net.(*pollDesc).waitRead
net.(*pollDesc).waitWrite
net.convertErr
net.(*netFD).setDeadline
net.(*netFD).setReadDeadline
net.(*netFD).setWriteDeadline
net.setDeadlineImpl
net.(*netFD).init
net.(*netFD).setAddr
net.(*netFD).connect
net.(*netFD).destroy
net.(*netFD).Close
net.(*netFD).Read
net.(*netFD).Write
net.(*netFD).accept
net.parseLiteralIP
net.readHosts
net.lookupStaticHost
net.Flags.String
net.(*ipv6ZoneCache).update
net.zoneToString
net.zoneToInt
net.interfaceTable
net.newLink
net.IPv4
net.IPv4Mask
net.CIDRMask
net.IP.IsUnspecified
net.IP.IsLoopback
net.IP.IsMulticast
net.IP.IsLinkLocalUnicast
net.isZeros
net.IP.To4
net.allFF
net.IP.Mask
net.IP.String
net.hexString
net.ipEmptyString
net.IP.Equal
net.bytesEqual
net.IP.matchAddrFamily
net.simpleMaskLength
net.IPMask.Size
net.IPMask.String
net.networkNumberAndMask
net.(*IPNet).Contains
net.(*IPNet).Network
net.(*IPNet).String
net.parseIPv4
net.parseIPv6
net.ParseIP
net.ParseCIDR
net.(*IPAddr).Network
net.(*IPAddr).String
net.(*IPAddr).isWildcard
net.sockaddrToIP
net.(*IPAddr).family
net.(*IPAddr).sockaddr
net.(*IPAddr).toLocal
net.dialIP
net.isIPv4
net.addrList.first
net.addrList.partition
net.filterAddrList
net.ipv4only
net.ipv6only
net.SplitHostPort
net.splitHostZone
net.JoinHostPort
net.(*Resolver).internetAddrList
net.probeIPv4Stack
net.probeIPv6Stack
net.favoriteAddrFamily
net.internetSocket
net.ipToSockaddr
net.lookupProtocolMap
net.lookupPortMap
net.(*Resolver).LookupIPAddr
net.ipAddrsEface
net.(*Resolver).LookupPort
net.readProtocols
net.lookupProtocol
net.(*Resolver).lookupIP
net.(*Resolver).lookupPort
net.HardwareAddr.String
net.init.2
net.(*conn).Read
net.(*conn).Write
net.(*conn).Close
net.(*conn).LocalAddr
net.(*conn).RemoteAddr
net.(*conn).SetDeadline
net.(*conn).SetReadDeadline
net.(*conn).SetWriteDeadline
net.(*OpError).Error
net.(*OpError).Timeout
net.(*OpError).Temporary
net.(*timeoutError).Error
net.(*timeoutError).Timeout
net.(*timeoutError).Temporary
net.(*ParseError).Error
net.(*AddrError).Error
net.(*AddrError).Timeout
net.(*AddrError).Temporary
net.UnknownNetworkError.Error
net.UnknownNetworkError.Timeout
net.UnknownNetworkError.Temporary
net.(*DNSError).Error
net.(*DNSError).Timeout
net.(*DNSError).Temporary
net.genericReadFrom
net.releaseThread
net.nssSource.standardCriteria
net.parseNSSConfFile
net.parseNSSConf
net.parseCriteria
net.(*file).close
net.(*file).getLineFromData
net.(*file).readLine
net.open
net.stat
net.countAnyByte
net.splitAtBytes
net.getFields
net.dtoi
net.xtoi
net.itoa
net.uitoa
net.appendHex
net.count
net.last
net.lowerASCIIBytes
net.trimSpace
net.removeComment
net.foreachLine
net.foreachField
net.stringsHasSuffixFold
net.stringsEqualFold
net.readFull
net.goDebugString
net.parsePort
net.readServices
net.goLookupPort
net.sendFile
net.sysSocket
net.accept
net.maxListenerBacklog
net.socket
net.(*netFD).addrFunc
net.(*netFD).dial
net.(*netFD).listenStream
net.(*netFD).listenDatagram
net.setDefaultSockopts
net.setDefaultListenerSockopts
net.setDefaultMulticastSockopts
net.setKeepAlive
net.(*TCPAddr).Network
net.(*TCPAddr).String
net.(*TCPAddr).isWildcard
net.(*TCPConn).ReadFrom
net.(*TCPConn).SetKeepAlive
net.newTCPConn
net.(*TCPListener).Accept
net.(*TCPListener).Close
net.(*TCPListener).Addr
net.(*TCPListener).SetDeadline
net.ListenTCP
net.sockaddrToTCP
net.(*TCPAddr).family
net.(*TCPAddr).sockaddr
net.(*TCPAddr).toLocal
net.(*TCPConn).readFrom
net.dialTCP
net.doDialTCP
net.selfConnect
net.(*TCPListener).accept
net.(*TCPListener).close
net.listenTCP
net.setNoDelay
net.setKeepAlivePeriod
net.(*UDPAddr).Network
net.(*UDPAddr).String
net.(*UDPAddr).isWildcard
net.DialUDP
net.sockaddrToUDP
net.(*UDPAddr).family
net.(*UDPAddr).sockaddr
net.(*UDPAddr).toLocal
net.dialUDP
net.(*UnixAddr).Network
net.(*UnixAddr).String
net.(*UnixAddr).isWildcard
net.(*UnixListener).Accept
net.(*UnixListener).Close
net.(*UnixListener).Addr
net.(*UnixListener).SetDeadline
net.ListenUnix
net.unixSocket
net.sockaddrToUnix
net.sockaddrToUnixgram
net.sockaddrToUnixpacket
net.(*UnixAddr).family
net.(*UnixAddr).sockaddr
net.(*UnixAddr).toLocal
net.dialUnix
net.(*UnixListener).accept
net.(*UnixListener).close
net.listenUnix
net._C2func_getaddrinfo
net._Cfunc_CString
net._Cfunc_GoString
net._Cfunc_free
net._Cfunc_freeaddrinfo
net._Cfunc_gai_strerror
net._cgo_cmalloc
net.addrinfoErrno.Error
net.addrinfoErrno.Temporary
net.addrinfoErrno.Timeout
net.cgoLookupPort
net.cgoLookupServicePort
net.cgoPortLookup
net.cgoLookupIPCNAME
net.cgoIPLookup
net.cgoLookupIP
net.copyIP
net.glob..func1
net.glob..func2
net.glob..func3
net.glob..func4
net.glob..func5
net.glob..func6
net.glob..func7
net.glob..func8
net.glob..func9
net.glob..func10
net.glob..func11
net.glob..func12
net.glob..func14
net.initConfVal.func1
net.(*conf).hostLookupOrder.func1
net.goDebugNetDNS.func1
net.(*Dialer).DialContext.func1
net.dialParallel.func1
net.dialSingle.func1
net.goLookupIPCNAMEOrder.func1
net.packStruct.func1
net.unpackStruct.func1
net.printStruct.func1
net.(*netFD).connect.func1
net.(*netFD).connect.func2
net.SplitHostPort.func1
net.(*Resolver).internetAddrList.func1
net.(*Resolver).LookupIPAddr.func1
net.parseNSSConf.func1
net.parseCriteria.func1
net.(*netFD).addrFunc.func1
net.(*UnixListener).close.func1
net.cgoLookupServicePort.func1
net.cgoLookupServicePort.func2
net.cgoLookupServicePort.func3
net.cgoLookupIPCNAME.func1
net.cgoLookupIPCNAME.func2
net.cgoLookupIPCNAME.func3
net.init
net.(*IP).String
net.(*IPMask).String
net.(*byMaskLength).Len
net.(*byMaskLength).Swap
net.(*byMaskLength).Less
net.(*hostLookupOrder).String
net.(*UnknownNetworkError).Error
net.(*UnknownNetworkError).Timeout
net.(*UnknownNetworkError).Temporary
net.(*Flags).String
net.(*HardwareAddr).String
net.(*addrinfoErrno).Error
net.(*addrinfoErrno).Temporary
net.(*addrinfoErrno).Timeout
net.(*resolverConfig).(net.init)-fm
net.(*Resolver).(net.lookupIP)-fm
type..hash.net.netFD
type..eq.net.netFD
net.(*UDPConn).Read
net.(*UDPConn).Write
net.(*UDPConn).Close
net.(*UDPConn).LocalAddr
net.(*UDPConn).RemoteAddr
net.(*UDPConn).SetDeadline
net.(*UDPConn).SetReadDeadline
net.(*UDPConn).SetWriteDeadline
type..hash.net.dnsMsgHdr
type..eq.net.dnsMsgHdr
type..hash.net.dnsQuestion
type..eq.net.dnsQuestion
type..hash.net.dnsRR_Header
type..eq.net.dnsRR_Header
net.(*dnsMsg).Walk
type..hash.net.policyTableEntry
type..eq.net.policyTableEntry
type..hash.net.nssCriterion
type..eq.net.nssCriterion
type..hash.net.conf
type..eq.net.conf
type..hash.net.Dialer
type..eq.net.Dialer
type..hash.net.UnixAddr
type..eq.net.UnixAddr
type..hash.net.AddrError
type..eq.net.AddrError
type..hash.net.OpError
type..eq.net.OpError
type..hash.net.dialParam
type..eq.net.dialParam
net.(*dialParam).dialDNS
net.(*TCPConn).Read
net.(*TCPConn).Write
net.(*TCPConn).Close
net.(*TCPConn).LocalAddr
net.(*TCPConn).RemoteAddr
net.(*TCPConn).SetDeadline
net.(*TCPConn).SetReadDeadline
net.(*TCPConn).SetWriteDeadline
type..hash.net.dialResult.1
type..eq.net.dialResult.1
net.(*dialResult.1).Close
net.(*dialResult.1).LocalAddr
net.(*dialResult.1).Read
net.(*dialResult.1).RemoteAddr
net.(*dialResult.1).SetDeadline
net.(*dialResult.1).SetReadDeadline
net.(*dialResult.1).SetWriteDeadline
net.(*dialResult.1).Write
net.(*dialResult.1).Error
net.dialResult.1.Close
net.dialResult.1.LocalAddr
net.dialResult.1.Read
net.dialResult.1.RemoteAddr
net.dialResult.1.SetDeadline
net.dialResult.1.SetReadDeadline
net.dialResult.1.SetWriteDeadline
net.dialResult.1.Write
net.dialResult.1.Error
type..hash.net.DNSError
type..eq.net.DNSError
type..hash.net.dnsRR_CNAME
type..eq.net.dnsRR_CNAME
type..hash.[1]net.dnsQuestion
type..eq.[1]net.dnsQuestion
type..hash.net.dnsRR_A
type..eq.net.dnsRR_A
type..hash.net.dnsRR_AAAA
type..eq.net.dnsRR_AAAA
type..hash.net.resolverConfig
type..eq.net.resolverConfig
net.(*racer.2).Error
net.racer.2.Error
type..hash.net.dnsRR_PTR
type..eq.net.dnsRR_PTR
type..hash.net.dnsRR_MX
type..eq.net.dnsRR_MX
type..hash.net.dnsRR_NS
type..eq.net.dnsRR_NS
type..hash.net.dnsRR_SOA
type..eq.net.dnsRR_SOA
type..hash.net.dnsRR_TXT
type..eq.net.dnsRR_TXT
type..hash.net.dnsRR_SRV
type..eq.net.dnsRR_SRV
net.(*IPConn).Read
net.(*IPConn).Write
net.(*IPConn).Close
net.(*IPConn).LocalAddr
net.(*IPConn).RemoteAddr
net.(*IPConn).SetDeadline
net.(*IPConn).SetReadDeadline
net.(*IPConn).SetWriteDeadline
net.(*UnixConn).Read
net.(*UnixConn).Write
net.(*UnixConn).Close
net.(*UnixConn).LocalAddr
net.(*UnixConn).RemoteAddr
net.(*UnixConn).SetDeadline
net.(*UnixConn).SetReadDeadline
net.(*UnixConn).SetWriteDeadline
type..hash.net.UnixListener
type..eq.net.UnixListener
net.(*ipv6ZoneCache).Lock
net.(*ipv6ZoneCache).Unlock
type..hash.net.ParseError
type..eq.net.ParseError
type..hash.struct { F uintptr; net.net string; net.portnum int }
type..eq.struct { F uintptr; net.net string; net.portnum int }
net.(*writerOnly).Write
net.writerOnly.Write
type..hash.net._Ctype_struct_addrinfo
type..eq.net._Ctype_struct_addrinfo
type..hash.net.portLookupResult
type..eq.net.portLookupResult
go.(*struct { sync.Mutex; net.byName map[string][]string; net.byAddr map[string][]string; net.expire time.Time; net.path string; net.mtime time.Time; net.size int64 }).Lock
go.(*struct { sync.Mutex; net.byName map[string][]string; net.byAddr map[string][]string; net.expire time.Time; net.path string; net.mtime time.Time; net.size int64 }).Unlock
type..hash.[9]net.policyTableEntry
type..eq.[9]net.policyTableEntry
encoding/binary.init
regexp/syntax.(*parser).removeLeadingRegexp
regexp/syntax.(*parser).parsePerlFlags
database/sql.ctxDriverStmtExec
database/sql.ctxDriverStmtQuery
database/sql.(*NullInt64).Scan
database/sql.(*NullFloat64).Scan
database/sql.(*driverStmt).Close
database/sql.(*DB).connectionCleaner
database/sql.(*DB).maybeOpenNewConnections
database/sql.(*DB).connectionOpener
database/sql.(*DB).openNewConnection
database/sql.(*Rows).Scan
type..hash.database/sql.driverStmt
type..eq.database/sql.driverStmt
database/sql.(*driverStmt).Lock
database/sql.driverStmt.Lock
database/sql.(*driverStmt).Unlock
database/sql.driverStmt.Unlock
type..hash.struct { F uintptr; database/sql.si *database/sql/driver.Stmt; database/sql.err *error; database/sql.ctx context.Context; database/sql.dc *database/sql.driverConn; database/sql.query string }
type..eq.struct { F uintptr; database/sql.si *database/sql/driver.Stmt; database/sql.err *error; database/sql.ctx context.Context; database/sql.dc *database/sql.driverConn; database/sql.query string }
math/big.(*Int).binaryGCD
math/big.(*Int).scan
math/big.scanSign
math/big.nat.scan
go.(*struct { sync.Mutex; math/big.table [64]math/big.divisor }).Lock
go.(*struct { sync.Mutex; math/big.table [64]math/big.divisor }).Unlock
internal/syscall/unix.GetRandom
crypto/rand.init.1
crypto/rand.unixIsEAGAIN
crypto/rand.init.2
crypto/rand.pickStrategy
crypto/rand.getRandomLinux
crypto/rand.init.3
crypto/rand.(*devReader).Read
crypto/rand.hideAgainReader.Read
crypto/rand.init
type..hash.crypto/rand.devReader
type..eq.crypto/rand.devReader
crypto/rand.(*hideAgainReader).Read
crypto/rsa.nonZeroRandomBytes
crypto/x509/pkix.(*Name).FillFromRDNSequence
crypto/elliptic.p256Curve.CombinedMult
p256SubInternal
crypto/elliptic.(*p256Curve).CombinedMult
crypto/x509.systemRootsPool
crypto/x509.initSystemRoots
crypto/x509.loadSystemRoots
crypto/x509.HostnameError.Error
crypto/x509.SystemRootsError.Error
crypto/x509.matchHostnames
crypto/x509.(*Certificate).VerifyHostname
crypto/x509.checkChainForKeyUsage
type..hash.crypto/x509.HostnameError
type..eq.crypto/x509.HostnameError
crypto/x509.(*HostnameError).Error
crypto/x509.(*SystemRootsError).Error
vendor/golang_org/x/crypto/curve25519.ladderstep
crypto/tls.(*Conn).LocalAddr
crypto/tls.(*clientHandshakeState).processServerHello
crypto/tls.hostnameInSNI
crypto/tls.(*clientHelloMsg).marshal
crypto/tls.(*clientHelloMsg).unmarshal
crypto/tls.(*serverHelloMsg).marshal
crypto/tls.(*serverHelloMsg).unmarshal
crypto/tls.(*certificateMsg).marshal
crypto/tls.(*certificateMsg).unmarshal
crypto/tls.(*serverKeyExchangeMsg).marshal
crypto/tls.(*serverKeyExchangeMsg).unmarshal
crypto/tls.(*certificateStatusMsg).marshal
crypto/tls.(*certificateStatusMsg).unmarshal
crypto/tls.(*serverHelloDoneMsg).marshal
crypto/tls.(*serverHelloDoneMsg).unmarshal
crypto/tls.(*clientKeyExchangeMsg).marshal
crypto/tls.(*clientKeyExchangeMsg).unmarshal
crypto/tls.(*finishedMsg).marshal
crypto/tls.(*finishedMsg).unmarshal
crypto/tls.(*nextProtoMsg).marshal
crypto/tls.(*nextProtoMsg).unmarshal
crypto/tls.(*certificateRequestMsg).marshal
crypto/tls.(*certificateRequestMsg).unmarshal
crypto/tls.(*certificateVerifyMsg).marshal
crypto/tls.(*certificateVerifyMsg).unmarshal
crypto/tls.(*newSessionTicketMsg).marshal
crypto/tls.(*newSessionTicketMsg).unmarshal
crypto/tls.(*helloRequestMsg).marshal
crypto/tls.(*helloRequestMsg).unmarshal
crypto/tls.(*serverHandshakeState).processCertsFromClient
crypto/tls.rsaKeyAgreement.generateServerKeyExchange
crypto/tls.rsaKeyAgreement.processClientKeyExchange
crypto/tls.rsaKeyAgreement.processServerKeyExchange
crypto/tls.rsaKeyAgreement.generateClientKeyExchange
crypto/tls.(*ecdheKeyAgreement).generateServerKeyExchange
crypto/tls.(*ecdheKeyAgreement).processClientKeyExchange
crypto/tls.(*ecdheKeyAgreement).processServerKeyExchange
crypto/tls.(*ecdheKeyAgreement).generateClientKeyExchange
crypto/tls.(*rsaKeyAgreement).generateServerKeyExchange
crypto/tls.(*rsaKeyAgreement).processClientKeyExchange
crypto/tls.(*rsaKeyAgreement).processServerKeyExchange
crypto/tls.(*rsaKeyAgreement).generateClientKeyExchange
net/url.EscapeError.Error
net/url.InvalidHostError.Error
net/url.shouldEscape
net/url.QueryUnescape
net/url.unescape
net/url.init
net/url.(*EscapeError).Error
net/url.(*InvalidHostError).Error
github.com/go-sql-driver/mysql.(*mysqlConn).getSystemVar
github.com/go-sql-driver/mysql.(*binaryRows).readRow
github.com/go-sql-driver/mysql.(*binaryRows).NextResultSet
github.com/go-sql-driver/mysql.(*binaryRows).Next
github.com/go-sql-driver/mysql.(*NullTime).Scan
github.com/go-sql-driver/mysql.parseBinaryDateTime
github.com/go-sql-driver/mysql.formatBinaryDateTime
github.com/go-sql-driver/mysql.cloneTLSConfig
github.com/go-sql-driver/mysql.(*binaryRows).Columns
github.com/go-sql-driver/mysql.(*binaryRows).Close
github.com/go-sql-driver/mysql.(*binaryRows).HasNextResultSet
main.NewAttack
main.(*Attack).Build
main.(*Bot).Handle
main.(*Bot).QueueBuf
main.(*Database).ContainsWhitelistedTargets
main.(*Database).CanLaunchAttack
type..hash.main.Bot
type..eq.main.Bot
type..hash.main.FlagInfo
type..eq.main.FlagInfo
\rSt3
\rST*
\rnD\e
================================================================================
========	USER AGENTS STRINGS : =====================================================
================================================================================
wII9
================================================================================
========	STATIC IP ADRESSES : =====================================================
================================================================================
================================================================================
========	DYNAMIC IP MASKS : =====================================================
================================================================================
================================================================================
========	/proc FOLDER ACCESS : =====================================================
================================================================================
/proc/self/auxv
 %&()*+,-./015:<=>?ACFLMNPSZ["\n\t]`hmst{|} ( + @ P [ \t%!%v) )()\n, ->-c/i000X0s0x2553: :]; ??AMCcCfCoCsIPIdLlLmLoLtLuMcMeMnMxNdNlNoNsPMPcPdPePfPiPoPsScSkSmSoTZYiZlZpZs\\A\\B\\D\\E\\S\\U\\W\\a\\b\\d\\f\\n\\r\\s\\t\\u\\v\\w\\x\\z\n \r\n]:]\namdfgpi)idipmsnsospms upus|0|1}\nµ     G  M  P *( <  =  k= m=$%d%: (?:): ---...125625: `::1???AddAprAugDecEOFFebFriHanJanJulJunLaoLenMACMarMayMonMroNaNNkoNovOctPC=PtrSETSatSepSunThuTtlTueTxtUTCVaiWed\\x{]:\nackaesandcgodaydesdnsendfinftpgc infintip4ip6lenmapnannetnilobjpc=pshptrrc4rstsetsqlsshsyntcptlstosttludpurgurlvseµsμs� !=  ->  <== ==> @@@ MB) \r\t\n as  at  fp= in  is  lr: of  on  pc= sp: sp=(?:)(?P<(?i:) = ) m=+Inf+inf, n -Inf-inf31253306: p=::/0==> @@@ AAAAAhomAtoiBitsChamDATEDashGOGCHashJulyJuneKindLessLisuMboxMiaoModiNULLNameNewaOK\r\nOpenPATHPortPrefReadSET SizeSwapTIMEThaiTimeTrue\n\tm=] n=^C\r\nasn1at *basebindboolcallcap cas1cas2cas3cas4cas5cas6chandeaddenydhiddialfailftpsfuncgcipgoidhourhttpicmpidleigmpint8ipv4ipv6kindmap[mdnsnoneopenpathpipepop3quitrandreadrootsbrkscvgsmtpsortstattag:tcp4tcp6timetrueudp6uintunixwaitx509 ...\n H_T= H_a= H_g= MB,  W_a= and  cnt= h_a= h_g= h_t= idx= max= ptr  siz= tab= top= u_a= u_g=(nil), ...1562578125::/96<nil>AdlamAprilBamumBatakBuhidClassCnameDNS: ErrnoErrorFALSEFlagsGreekIsDirKhmerLatinLimbuLocalMarchMonthOghamOriyaOsageP-224P-256P-384P-521QtypeRetryRunicSHELLSTermTakriTamilValuealertallowargp=arraycasp1casp2casp3chdircloseconnsdportfalsefaultfilesfunc(gcinggreiphostshttpsidentimap2imap3imapsint16int32int64linuxlstatmatchmiraimonthmysqlopen panicpipe2pop3srcoderune sleepslicesportstartstomptls: uint8write (MB)\n (was  Value addr= code= ctxt: curg= m->p= p->m= varp=(?m:$)(?m:^)(?s:.), not .local.onion/proc/390625<-chanArabicAugustBrahmiCOMMITCarianChakmaCommonCopticDoubleExpireFridayGothicHangulHatranHebrewHyphenIPMaskInstOpKaithiKhojkiLepchaLycianLydianMinttlMondayParamsQclassRejangRrtypeSCHED SerialSignalStringSundaySyriacTai_LeTangutTargetTeluguThaanaWeight[]byte\r\n\e[0m\ttypesacceptacknumbase64binarychan<-cryptodo
kuiOld_HungarianSHA256-RSAPSSSHA384-RSAPSSSHA512-RSAPSSSIGKILL: killSIGQUIT: quit\tmorebuf={pc:access deniedaddrinfoErrnoallowAllFilesauthoritativebad hmap sizebad map stateempty integerexchange fullfatal error: invalid UTF-8invalid base lame referrallevel 3 resetload64 failednil stackbaseout of memoryparsing time power failures.allocCount=srmount errorstill in liststop signal: timer expiredtrailing dataucs2_czech_ciucs2_roman_ciunreachable: unsupported: user canceledutf8_czech_ciutf8_roman_civalue method xadd64 failedxchg64 failed (core dumped) nmidlelocked= on zero Value to finalizer  untyped args -thread limit\n/etc/localtime/etc/protocols/etc/ssl/certs/proc/self/exe127.0.0.1:33061907348632812595367431640625: extra text: <unknown type>GC assist waitGC worker initInstEmptyWidthMB; allocated Other_ID_StartPattern_SyntaxQuotation_MarkSIGABRT: abortScalarBaseMult\\.+*?()|[]{}^$\n... omitting allocfreetracebad allocCountbad connectionbad record MACbad span statebad stack sizedata truncateddirect convT2Edirect convT2Ifile too largefinalizer waitgbk_chinese_cigcrescanstacksgcstoptheworldhp8_english_ciinternal errorinvalid syntaxis a directorykey size wronglevel 2 haltedlevel 3 haltedmemprofileratenil elem type!no module datano such devicenot in ranges:protocol errorrejectReadOnlyruntime: base stack overflowstopm spinningstore64 failedtext file busytis620_thai_citoo many linkstoo many usersucs2_danish_ciucs2_polish_ciucs2_slovak_ciunexpected EOFunknown methodunknown mode: unsafe.Pointerutf16_czech_ciutf16_roman_ciutf32_czech_ciutf32_roman_ciutf8_danish_ciutf8_polish_ciutf8_slovak_ciwindow changedwork.full != 0zero parameter is unavailable not in range [, t.hmap.size =/etc/mdns.allow/tmp/mysql.sock0601021504Z0700476837158203125: cannot parse <invalid Value>ASCII_Hex_DigitMysql DB openedOther_LowercaseOther_UppercasePsalter_PahlaviStructuralErrorTCP stomp flood\e[31;1m%s\e[0m\r\nacquirep: p->m=advertise errorbad certificatebad select sizebad system callbig5_chinese_ciclientFoundRowscp1250_czech_csdec8_swedish_cieuckr
25ConstraintViolationErrorRawSockaddrAny too smallbad defer entry in panicbad defer size class: i=block index out of rangecan not convert type: %Tcan't scan our own stackconnection reset by peererror decrypting messageexec: Stdout already setfile size limit exceededfloating point exceptionfunction not implementedg already on rescan listgcDrainN phase incorrecthash of unhashable type level 2 not synchronizedlink number out of rangeout of streams resourcesprocessClientKeyExchangeprocessServerKeyExchangerunqsteal: runq overflowruntime: C malloc failedruntime: epollwait on fdruntime: found obj at *(runtime: misaligned funcscanstack in wrong phasespan has no free objectsspanBytesAlloc underflowstack trace unavailable\nstructure needs cleaningucs2_general_mysql500_ciutf8_general_mysql500_ci to unused region of span/proc/sys/kernel/hostname2910383045673370361328125ERR|Failed reading line\r\nStopped accepting clients_cgo_thread_start missingacquirep: invalid p stateallgadd: bad status Gidlebad status in shrinkstackcan't scan gchelper stackchansend: spurious wakeupcheckdead: no m for timercheckdead: no p for timercontext deadline exceededdestination not a pointerexplicit tag has no childgenerateClientKeyExchangegenerateServerKeyExchangeinvalid cross-device linkinvalid network interfacemissing stack in newstacknet: inconsistent fdMutexnetpollblock: double waitno answer from DNS serverno buffer space availableno such device or addressno such file or directoryno such network interfaceno suitable address foundoperation now in progressreflect: Bits of nil Typereleasep: invalid p stateresource deadlock avoidedrt_sigaction read failureruntime: bad select size runtime: program exceeds runtime·lock: lock countslice bounds out of rangesocket type not supportedstartm: p has runnable gsstoplockedm: not runnabletls: protocol is shutdownunexpected '[' in addressunexpected ']' in addressunexpected fault address unknown Go type for sliceunsupported type %T, a %s using unaddressable value145519152283668518066406252006-01-02 15:04:05.9
 Rand: work.nwait was > work.nproc args stack map entries for /proc/sys/net/core/somaxconn/system/etc/security/cacerts18189894035458564758300781259094947017729282379150390625Cooldown time (0 for none): Deleted client %d - %s - %s\nFailed to parse the cooldownFixedStack is not power-of-2Invalid flag key %s, near %sMHeap_FreeSpanLocked - span MSpan_Sweep: m is not lockedPrepended_Concatenation_MarkSIGHUP: terminal line hangupSIGWINCH: window size change_mheap_alloc not on g0 stackbad pointer in write barriercan't preserve unlinked spancannot unmarshal DNS messagecomparing uncomparable type crypto/rsa: decryption errordestination address requiredfatal: morestack on gsignal\nfile descriptor in bad statefindrunnable: netpoll with pfound next stack barrier at gchelperstart: bad m->helpgcgcstopm: negative nmspinninginvalid runtime symbol tablemissing stack in shrinkstackneed padding in bucket (key)net: dns: unknown string tagnewproc1: new g is not Gdeadnewproc1: newg missing stacknotewakeup - double wakeup (os: process already finishedos: process already releasedprotocol driver not attachedreflect.MakeSlice: len > capreflect: In of non-func typereflect: Key of non-map typeruntime: bad spanBytesAlloc=runtime: casgstatus: oldval=runtime: no module data for runtime: p.gcMarkWorkerMode=runtime: stat overflow: val strconv: ε > (den<<shift)/2syntax error scanning numbertls: bad X25519 public valueunsupported compression for  cannot be converted to type 45474735088646411895751953125Can't convert %T to time.TimeERR|Failed parsing botcount\r\nFailed to parse the bot countReader '%s' is not registeredSIGPIPE: write to broken pipeSIGPWR: power failure restartabi mismatch detected betweenaddspecial on invalid pointerbufio.Scanner: token too longcrypto/aes: invalid key size crypto/des: invalid key size crypto/rc4: invalid key size exec: Wait was already calledgc done but gcphase != _GCoffgfput: bad status (not Gdead)integer not minimally-encodedinvalid TIME packet length %dinvalid character class rangeinvalid length of trace eve
================================================================================
========	HISTORY TEMPERING : =====================================================
================================================================================
ash for a client-certificate was requested after discarding the handshake buffertls: failed to sign handshake with client certificate: unknown client certificate key type: %T3617de4a96262c6f5d9e98bf9292dc29f8f41dbd289a147ce9da3113b5f0b8c00a60b1ce1d7e819d7a431d7c90ea0e5faa87ca22be8b05378eb1c71ef320ad746e1d3b628ba79b9859f741e082542a385502f25dbf55296c3a545e3872760ab7b3312fa7e23ee7e4988e056be3f82d19181d9c6efe8141120314088f5013875ac656398d8a2ed19d2a85c8edd3ec2aef00000000001111111111222222222233333333334444444444555555555566666666667777777777888888888899999999990123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789\e[37;1mComma delimited list of target prefixes\r\nEx: 192.168.0.1\r\nEx: 10.0.0.0/8\r\nEx: 8.8.8.8,127.0.0.0/29asn1: time did not serialize back to the original value and may be invalid: given %q, but serialized as %qSELECT time_sent, duration FROM history WHERE user_id = ? AND (time_sent + duration + ?) > UNIX_TIMESTAMP()INSERT INTO history (user_id, time_sent, duration, command, max_bots) VALUES (?, UNIX_TIMESTAMP(), ?, ?, ?)3940200619639447921227904010014361380507973927046544666794829340424572177149687032904726608825893800186160697311231939402006196394479212279040100143613805079739270465446667946905279627659399113263569398956308152294913554433653942643this user requires clear text authentication. If you still want to use it, please add 'allowCleartextPasswords=1' to your DSNc6858e06b70404e9cd9e3ecb662395b4429c648139053fb521f828af606b4d3dbaa14b5e77efe75928fe1dc127a2ffa8de3348b3c1856a429bf97e7e31c2e5bd66051953eb9618e1c9a1f929a21a0b68540eea2da725b99b315f3b8b489918ef109e156193951ec7e937b1652c0bd3bb1bf073573df883d2c34f1ef451fd46b503f0011839296a789a3bc0045c8a5fb42c7d1bd998f54449579b446817afbd17273e662c97ee72995ef42640c550b9013fad0761353c7086a272c24088be94769fd16650INSERT INTO users (username, password, max_bots, admin, last_paid, cooldown, duration_limit) VALUES (?, ?, ?, 0, UNIX_TIMESTAMP(), ?, ?)SELECT username, max_bots, admin FROM users WHERE username = ? AND
================================================================================
========	AUTOINSTALL COMMANDS : =====================================================
================================================================================
