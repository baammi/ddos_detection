=============================================================================
========	BINARY ID :60bf2222087f6e018170bccb364f1933c411a905==================================================
================================================================================
================================================================================
========	STRINGS SUMMARY : =====================================================
================================================================================
TOTAL STRINGS COUNT :424
SUPSCPECTED LINES COUNT :30
SUPSCPECTED STRINGS COUNT (DISTINCT) :15
SUPSCPECTED STRINGS WEIGHT :61
SUSPECT STRING SCORE : [61 / 150] 40%
USER AGENTS STRINGS COUNT :0
STATIC IPs STRINGS COUNT :5
DYNAMIC IPs STRINGS COUNT :0
================================================================================
========	STRINGS DETAILS : =====================================================
================================================================================
================================================================================
========	SUSPECTED STRINGS : =====================================================
================================================================================
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
strstr
fscanf
proc_exists
proc_kill
getpid
sscanf
proc_daemonize
sock_bind
sock_connect
system
rand
socket
fork
.nttpd.pid
ps | grep .nttpd > .nttpd.ps
INPUT -p udp --dport %u -j ACCEPT
.pid
INPUT -p udp --dport 9999 -j DROP
INPUT -p tcp --dport 8080 -j DROP
INPUT -p tcp --dport 80 -j DROP
/proc/meminfo
/dev/urandom
__fork
/proc/%d
kill %d
kill -9 %d
killall -9 %s
/proc/net/route
================================================================================
========	USER AGENTS STRINGS : =====================================================
================================================================================
================================================================================
========	STATIC IP ADRESSES : =====================================================
================================================================================
INPUT -s 91.215.158.0/24 -j ACCEPT
INPUT -s 149.202.211.0/24 -j ACCEPT
INPUT -s 217.79.182.0/24 -j ACCEPT
INPUT -s 208.110.66.0/24 -j ACCEPT
INPUT -s 173.208.219.0/24 -j ACCEPT
================================================================================
========	DYNAMIC IP MASKS : =====================================================
================================================================================
================================================================================
========	/proc FOLDER ACCESS : =====================================================
================================================================================
/proc/meminfo
/proc/%d
/proc/net/route
================================================================================
========	HISTORY TEMPERING : =====================================================
================================================================================
================================================================================
========	AUTOINSTALL COMMANDS : =====================================================
================================================================================
================================================================================
========	FUNCTIONS SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES			: 17807
+++TOTAL FUNCTIONS 			:100
+++LINES PER FUNCTION RATIO 	: 178.07
+++SUSPECTED LINES COUNT 	: 229
+++SUSPECTED LINES RATIO 	: 1.28601111922278
================================================================================
========	WHILES SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES				: 17807
+++WHILE (TRUE) LINES			: 1592
+++WHILE (TRUE) LINES RATION		:8.94030437468411%
+++WHILE (TRUE) LOOPS COUNT		: 34
================================================================================
========	SYSTEM FILES SUMMARY : ================================================
================================================================================
    struct _IO_FILE * file = fopen(file_path, "r"); // 0x401e1c
    struct _IO_FILE * file = fopen(file_path, "w"); // 0x401f50
    struct _IO_FILE * file = fopen(path, "w"); // 0x402044
                    file = fopen(".nttpd.ps", "r");
            file = fopen(".nttpd.ps", "r");
        file = fopen(".nttpd.ps", "r");
    if (fopen("/proc/meminfo", "r") != NULL) {
    struct _IO_FILE * file = fopen("/etc/resolv.conf", "w"); // 0x405e84
    int32_t fd = open("/dev/urandom", O_RDONLY); // 0x4069fc
    int32_t fd = open("/dev/null", O_RDWR); // 0x4094e4
    sprintf((char *)&str, "/proc/%d", a1);
    struct _IO_FILE * file = fopen("/proc/net/route", "r"); // 0x409c78
================================================================================
========	IP PATTERNS SUMMARY : =================================================
================================================================================
        "INPUT -s 91.215.158.0/24 -j ACCEPT",

        "INPUT -s 149.202.211.0/24 -j ACCEPT",

        "INPUT -s 217.79.182.0/24 -j ACCEPT",

        "INPUT -s 208.110.66.0/24 -j ACCEPT",

        "INPUT -s 173.208.219.0/24 -j ACCEPT"

================================================================================
========	SYSTEM CALLS SUMMARY : ================================================
================================================================================
    return system("reboot");

    int32_t system_rc = system(command); // 0x4055c8

    return system_rc;

================================================================================
========	FUNCTIONS LIST : =======================================================
================================================================================
FUNCTION_NAME                                     |ARGS|LENGH   |SUSPCET_INSTRC|WHILE_INSTRC|
----------------------------------------------------------------------------------------------
sock_open                                         |2   |473     |61            |0           |
----------------------------------------------------------------------------------------------
function_4022f0                                   |2   |404     |15            |128         |
----------------------------------------------------------------------------------------------
sock_connect                                      |5   |264     |9             |104         |
----------------------------------------------------------------------------------------------
function_407a2c                                   |4   |244     |9             |89          |
----------------------------------------------------------------------------------------------
function_409bfc                                   |1   |325     |8             |169         |
----------------------------------------------------------------------------------------------
_init                                             |0   |144     |8             |0           |
----------------------------------------------------------------------------------------------
proc_kill                                         |1   |191     |6             |26          |
----------------------------------------------------------------------------------------------
sock_sendto                                       |7   |298     |6             |122         |
----------------------------------------------------------------------------------------------
function_405774                                   |1   |183     |6             |0           |
----------------------------------------------------------------------------------------------
sig_handle                                        |2   |186     |6             |0           |
----------------------------------------------------------------------------------------------
sock_recvfrom                                     |7   |334     |5             |152         |
----------------------------------------------------------------------------------------------
sock_bind                                         |5   |156     |5             |0           |
----------------------------------------------------------------------------------------------
function_401fe0                                   |3   |174     |4             |32          |
----------------------------------------------------------------------------------------------
function_406980                                   |2   |172     |4             |13          |
----------------------------------------------------------------------------------------------
function_405884                                   |2   |222     |4             |62          |
----------------------------------------------------------------------------------------------
function_4044e0                                   |1   |217     |4             |76          |
----------------------------------------------------------------------------------------------
function_406bf0                                   |3   |184     |4             |0           |
----------------------------------------------------------------------------------------------
function_407930                                   |4   |149     |4             |0           |
----------------------------------------------------------------------------------------------
function_401550                                   |3   |265     |3             |0           |
----------------------------------------------------------------------------------------------
function_405e14                                   |2   |170     |3             |0           |
----------------------------------------------------------------------------------------------
function_401f10                                   |3   |146     |3             |0           |
----------------------------------------------------------------------------------------------
th_exit                                           |1   |232     |2             |79          |
----------------------------------------------------------------------------------------------
function_409fec                                   |4   |160     |2             |0           |
----------------------------------------------------------------------------------------------
function_401dc8                                   |3   |158     |2             |0           |
----------------------------------------------------------------------------------------------
function_409a70                                   |3   |165     |2             |0           |
----------------------------------------------------------------------------------------------
proc_daemonize                                    |0   |188     |2             |0           |
----------------------------------------------------------------------------------------------
os_exec                                           |1   |147     |2             |0           |
----------------------------------------------------------------------------------------------
main                                              |0   |239     |2             |49          |
----------------------------------------------------------------------------------------------
function_401a10                                   |1   |235     |2             |94          |
----------------------------------------------------------------------------------------------
function_408af0                                   |4   |186     |2             |33          |
----------------------------------------------------------------------------------------------
function_403768                                   |1   |216     |2             |64          |
----------------------------------------------------------------------------------------------
function_4049fc                                   |2   |260     |2             |119         |
----------------------------------------------------------------------------------------------
function_4092a8                                   |0   |148     |2             |0           |
----------------------------------------------------------------------------------------------
function_405acc                                   |2   |175     |2             |0           |
----------------------------------------------------------------------------------------------
sock_set_timeo_tx                                 |3   |146     |1             |0           |
----------------------------------------------------------------------------------------------
function_407e04                                   |3   |145     |1             |0           |
----------------------------------------------------------------------------------------------
ipt_update                                        |2   |140     |1             |0           |
----------------------------------------------------------------------------------------------
sock_set_timeo_rx                                 |3   |146     |1             |0           |
----------------------------------------------------------------------------------------------
function_4021d0                                   |4   |162     |1             |19          |
----------------------------------------------------------------------------------------------
function_4097d4                                   |1   |145     |1             |0           |
----------------------------------------------------------------------------------------------
function_408480                                   |3   |145     |1             |0           |
----------------------------------------------------------------------------------------------
sock_close_and_invalidate                         |1   |143     |1             |0           |
----------------------------------------------------------------------------------------------
function_407ed8                                   |3   |152     |1             |0           |
----------------------------------------------------------------------------------------------
function_40a180                                   |0   |151     |1             |5           |
----------------------------------------------------------------------------------------------
function_402758                                   |3   |170     |1             |33          |
----------------------------------------------------------------------------------------------
function_407d30                                   |3   |145     |1             |0           |
----------------------------------------------------------------------------------------------
os_release                                        |0   |202     |1             |16          |
----------------------------------------------------------------------------------------------
os_reboot                                         |0   |135     |1             |0           |
----------------------------------------------------------------------------------------------
function_40308c                                   |1   |180     |1             |35          |
----------------------------------------------------------------------------------------------
os_init                                           |0   |196     |1             |0           |
----------------------------------------------------------------------------------------------
function_408108                                   |3   |150     |1             |0           |
----------------------------------------------------------------------------------------------
function_408354                                   |3   |150     |1             |0           |
----------------------------------------------------------------------------------------------
function_402d98                                   |1   |181     |1             |42          |
----------------------------------------------------------------------------------------------
function_406930                                   |1   |135     |1             |0           |
----------------------------------------------------------------------------------------------
function_408554                                   |3   |160     |1             |0           |
----------------------------------------------------------------------------------------------
proc_exists                                       |1   |146     |1             |0           |
----------------------------------------------------------------------------------------------
function_405c18                                   |2   |252     |1             |0           |
----------------------------------------------------------------------------------------------
function_4018c8                                   |4   |177     |1             |31          |
----------------------------------------------------------------------------------------------
function_40911c                                   |4   |163     |1             |0           |
----------------------------------------------------------------------------------------------
function_405154                                   |1   |146     |1             |0           |
----------------------------------------------------------------------------------------------
mm_alloc                                          |1   |135     |0             |0           |
----------------------------------------------------------------------------------------------
function_401390                                   |7   |149     |0             |0           |
----------------------------------------------------------------------------------------------
function_402978                                   |1   |134     |0             |0           |
----------------------------------------------------------------------------------------------
splck_lock                                        |1   |135     |0             |0           |
----------------------------------------------------------------------------------------------
function_40423c                                   |2   |150     |0             |0           |
----------------------------------------------------------------------------------------------
function_401c48                                   |1   |159     |0             |0           |
----------------------------------------------------------------------------------------------
mtx_unlock                                        |1   |135     |0             |0           |
----------------------------------------------------------------------------------------------
mtx_destroy                                       |1   |136     |0             |0           |
----------------------------------------------------------------------------------------------
__RLD_MAP                                         |0   |136     |0             |0           |
----------------------------------------------------------------------------------------------
function_4035ac                                   |5   |170     |0             |0           |
----------------------------------------------------------------------------------------------
th_sleep_s                                        |1   |135     |0             |0           |
----------------------------------------------------------------------------------------------
function_403f64                                   |2   |135     |0             |0           |
----------------------------------------------------------------------------------------------
__uClibc_main                                     |7   |138     |0             |0           |
----------------------------------------------------------------------------------------------
th_cancel                                         |1   |146     |0             |0           |
----------------------------------------------------------------------------------------------
mtx_create                                        |0   |154     |0             |0           |
----------------------------------------------------------------------------------------------
th_sleep_ms                                       |1   |135     |0             |0           |
----------------------------------------------------------------------------------------------
function_4033f0                                   |5   |171     |0             |0           |
----------------------------------------------------------------------------------------------
th_start                                          |5   |200     |0             |0           |
----------------------------------------------------------------------------------------------
_ftext                                            |1   |139     |0             |0           |
----------------------------------------------------------------------------------------------
function_4028a4                                   |0   |142     |0             |0           |
----------------------------------------------------------------------------------------------
function_404f18                                   |0   |155     |0             |0           |
----------------------------------------------------------------------------------------------
function_401350                                   |0   |150     |0             |0           |
----------------------------------------------------------------------------------------------
function_404158                                   |0   |136     |0             |0           |
----------------------------------------------------------------------------------------------
function_406858                                   |0   |135     |0             |0           |
----------------------------------------------------------------------------------------------
unknown_0                                         |1   |0       |0             |0           |
----------------------------------------------------------------------------------------------
function_401d08                                   |1   |159     |0             |0           |
----------------------------------------------------------------------------------------------
function_4040cc                                   |0   |142     |0             |0           |
----------------------------------------------------------------------------------------------
function_409988                                   |0   |149     |0             |0           |
----------------------------------------------------------------------------------------------
function_406b04                                   |2   |154     |0             |0           |
----------------------------------------------------------------------------------------------
_fini                                             |0   |136     |0             |0           |
----------------------------------------------------------------------------------------------
_fdata                                            |0   |136     |0             |0           |
----------------------------------------------------------------------------------------------
function_403218                                   |0   |143     |0             |0           |
----------------------------------------------------------------------------------------------
function_402c20                                   |1   |146     |0             |0           |
----------------------------------------------------------------------------------------------
function_40440c                                   |0   |142     |0             |0           |
----------------------------------------------------------------------------------------------
splck_unlock                                      |1   |135     |0             |0           |
----------------------------------------------------------------------------------------------
function_403330                                   |0   |151     |0             |0           |
----------------------------------------------------------------------------------------------
function_4068f8                                   |1   |135     |0             |0           |
----------------------------------------------------------------------------------------------
mtx_lock                                          |1   |135     |0             |0           |
----------------------------------------------------------------------------------------------
function_405044                                   |0   |151     |0             |0           |
----------------------------------------------------------------------------------------------
function_404380                                   |0   |135     |0             |0           |
----------------------------------------------------------------------------------------------
================================================================================
========	FUNCTIONS SUSPECTED INSTRUNCTIONS : ===================================
================================================================================
=================FUNCTION : sock_open ===================
++++++++ FUNCTION START 11428
++++++++ FUNCTION END 11901
++++++++ FUNCTION LENGTH 473
    int32_t sock_fd; // 0x407100
        sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP);
        result = sock_fd;
        if (sock_fd <= -1) {
            if ((function_407e04(sock_fd, 1, v133) % 256 ^ 1) != 0) {
                sock_close_and_invalidate(&result);
                if ((function_407e04(sock_fd, 1, v133) % 256 ^ 1) != 0) {
                    sock_close_and_invalidate(&result);
                    sock_close_and_invalidate(&result);
                sock_close_and_invalidate(&result);
    int32_t sock_fd4; // 0x407190
            int32_t sock_fd2 = socket(AF_PACKET, SOCK_RAW, 768); // 0x407010
            result = sock_fd2;
            sock_fd = sock_fd2;
            if (sock_fd > -1) {
                    if ((function_407e04(sock_fd, 1, v133) % 256 ^ 1) != 0) {
                        sock_close_and_invalidate(&result);
                        if ((function_407e04(sock_fd, 1, v133) % 256 ^ 1) != 0) {
                            sock_close_and_invalidate(&result);
            int32_t sock_fd3 = socket(AF_INET, SOCK_STREAM, IPPROTO_UDP); // 0x407160
            result = sock_fd3;
            sock_fd = sock_fd3;
            sock_fd4 = socket(AF_INET, SOCK_DGRAM, IPPROTO_TCP);
            result = sock_fd4;
            sock_fd = sock_fd4;
        if (sock_fd > -1) {
                if ((function_407e04(sock_fd, 1, v133) % 256 ^ 1) != 0) {
                    sock_close_and_invalidate(&result);
                    if ((function_407e04(sock_fd, 1, v133) % 256 ^ 1) != 0) {
                        sock_close_and_invalidate(&result);
        int32_t sock_fd5 = socket(AF_PACKET, SOCK_RAW, IPPROTO_EGP); // 0x4070c8
        result = sock_fd5;
        sock_fd = sock_fd5;
        if (sock_fd > -1) {
                if ((function_407e04(sock_fd, 1, v133) % 256 ^ 1) != 0) {
                    sock_close_and_invalidate(&result);
                    if ((function_407e04(sock_fd, 1, v133) % 256 ^ 1) != 0) {
                        sock_close_and_invalidate(&result);
                        sock_close_and_invalidate(&result);
                    sock_close_and_invalidate(&result);
        int32_t sock_fd6 = socket(AF_INET, SOCK_RAW, IPPROTO_RAW); // 0x407130
        result = sock_fd6;
        sock_fd = sock_fd6;
        if (sock_fd > -1) {
                if ((function_407e04(sock_fd, 1, v133) % 256 ^ 1) != 0) {
                    sock_close_and_invalidate(&result);
                    if ((function_407e04(sock_fd, 1, v133) % 256 ^ 1) != 0) {
                        sock_close_and_invalidate(&result);
        int32_t sock_fd7 = socket(AF_PACKET, SOCK_RAW, 768); // 0x407068
        result = sock_fd7;
        sock_fd = sock_fd7;
        sock_fd4 = socket(AF_INET, SOCK_DGRAM, IPPROTO_TCP);
        result = sock_fd4;
        sock_fd = sock_fd4;
    if (sock_fd > -1) {
            if ((function_407e04(sock_fd, 1, v133) % 256 ^ 1) != 0) {
                sock_close_and_invalidate(&result);
                if ((function_407e04(sock_fd, 1, v133) % 256 ^ 1) != 0) {
                    sock_close_and_invalidate(&result);
                        sock_close_and_invalidate(&result);
                    sock_close_and_invalidate(&result);
=================FUNCTION : function_4022f0 ===================
++++++++ FUNCTION START 2460
++++++++ FUNCTION END 2864
++++++++ FUNCTION LENGTH 404
                    file = fopen(".nttpd.ps", "r");
                            while (true) {
                                        while (true) {
                            fclose(file);
                            while (true) {
                        fclose(file);
                    while (true) {
            file = fopen(".nttpd.ps", "r");
                    while (true) {
                fclose(file);
        while (true) {
        file = fopen(".nttpd.ps", "r");
                while (true) {
            fclose(file);
    while (true) {
=================FUNCTION : sock_connect ===================
++++++++ FUNCTION START 11904
++++++++ FUNCTION END 12168
++++++++ FUNCTION LENGTH 264
    int32_t v134 = sock_open(6, v133); // 0x4073a8
        if (sock_set_timeo_rx(v134, v137, NULL) != 0) {
            sock_set_timeo_tx(result, v137, NULL);
    while (true) {
        while (true) {
            while (true) {
                    sock_close_and_invalidate(&result);
                            while (true) {
                sock_close_and_invalidate(&result);
=================FUNCTION : function_407a2c ===================
++++++++ FUNCTION START 12482
++++++++ FUNCTION END 12726
++++++++ FUNCTION LENGTH 244
    if (function_408108(sock, &v133, 0) != 0) {
        while (true) {
            while (true) {
                int32_t accepted_sock_fd = accept(sock, (struct sockaddr *)&addr, &addr_len); // 0x407b5c
                if (accepted_sock_fd >= 0) {
                    return accepted_sock_fd;
                result = accepted_sock_fd;
                        while (true) {
    while (true) {
=================FUNCTION : function_409bfc ===================
++++++++ FUNCTION START 16530
++++++++ FUNCTION END 16855
++++++++ FUNCTION LENGTH 325
    struct _IO_FILE * file = fopen("/proc/net/route", "r"); // 0x409c78
        fgets((char *)&str2, 256, file);
        while (true) {
            char * str = fgets((char *)&str2, 256, file); // 0x409f8470
                while (true) {
                        while (true) {
                            while (true) {
                                                        if (fgets((char *)&str2, 256, file) == NULL) {
=================FUNCTION : _init ===================
++++++++ FUNCTION START 204
++++++++ FUNCTION END 348
++++++++ FUNCTION LENGTH 144
        "INPUT -p udp --dport 9999 -j DROP",
        "INPUT -p tcp --dport 8080 -j DROP",
        "INPUT -p tcp --dport 80 -j DROP",
        "INPUT -s 91.215.158.0/24 -j ACCEPT",
        "INPUT -s 149.202.211.0/24 -j ACCEPT",
        "INPUT -s 217.79.182.0/24 -j ACCEPT",
        "INPUT -s 208.110.66.0/24 -j ACCEPT",
        "INPUT -s 173.208.219.0/24 -j ACCEPT"
=================FUNCTION : proc_kill ===================
++++++++ FUNCTION START 15725
++++++++ FUNCTION END 15916
++++++++ FUNCTION LENGTH 191
    sprintf((char *)&str, "kill %d", a1);
        if (proc_exists(a1) != 0) {
            while (true) {
                    if (proc_exists(a1) == 0) {
                sprintf((char *)&str, "kill -9 %d", a1);
                sprintf((char *)&str, "kill -9 %d", a1);
=================FUNCTION : sock_sendto ===================
++++++++ FUNCTION START 14621
++++++++ FUNCTION END 14919
++++++++ FUNCTION LENGTH 298
        while (true) {
            while (true) {
                while (true) {
                        while (true) {
                    while (true) {
    while (true) {
=================FUNCTION : function_405774 ===================
++++++++ FUNCTION START 7767
++++++++ FUNCTION END 7950
++++++++ FUNCTION LENGTH 183
        case 1: {
        case 2: {
        case 6: {
        case 13: {
        case 15: {
        case 17: {
=================FUNCTION : sig_handle ===================
++++++++ FUNCTION START 7578
++++++++ FUNCTION END 7764
++++++++ FUNCTION LENGTH 186
        case 1: {
        case 2: {
        case 6: {
        case 13: {
        case 15: {
        case 17: {
=================FUNCTION : sock_recvfrom ===================
++++++++ FUNCTION START 14095
++++++++ FUNCTION END 14429
++++++++ FUNCTION LENGTH 334
        while (true) {
            while (true) {
                while (true) {
                            while (true) {
    while (true) {
=================FUNCTION : sock_bind ===================
++++++++ FUNCTION START 12171
++++++++ FUNCTION END 12327
++++++++ FUNCTION LENGTH 156
    int32_t sock = sock_open(a1, v133); // 0x4077b0
    int32_t result = sock; // bp-28
    if (sock < 0) {
    if (bind(sock, (struct sockaddr *)&addr, 16) == 0) {
    sock_close_and_invalidate(&result);
=================FUNCTION : function_401fe0 ===================
++++++++ FUNCTION START 2118
++++++++ FUNCTION END 2292
++++++++ FUNCTION LENGTH 174
    struct _IO_FILE * file = fopen(path, "w"); // 0x402044
    while (true) {
        while (true) {
                fclose(file);
=================FUNCTION : function_406980 ===================
++++++++ FUNCTION START 10909
++++++++ FUNCTION END 11081
++++++++ FUNCTION LENGTH 172
    int32_t fd = open("/dev/urandom", O_RDONLY); // 0x4069fc
            while (true) {
            close(fd);
    close(fd);
=================FUNCTION : function_405884 ===================
++++++++ FUNCTION START 7953
++++++++ FUNCTION END 8175
++++++++ FUNCTION LENGTH 222
    if (fopen("/proc/meminfo", "r") != NULL) {
        while (true) {
            while (true) {
            int32_t items_assigned2 = sscanf((char *)&str, "MemFree: %d kB", (int32_t *)a2); // 0x4059c0
=================FUNCTION : function_4044e0 ===================
++++++++ FUNCTION START 5804
++++++++ FUNCTION END 6021
++++++++ FUNCTION LENGTH 217
    while (true) {
                if (getpid() != -1) {
            sprintf((char *)&str, "%s,%d", (char *)(v129 + 12), v137);
                        sprintf((char *)&str, "./%s &", (char *)(v129 + 12));
=================FUNCTION : function_406bf0 ===================
++++++++ FUNCTION START 11241
++++++++ FUNCTION END 11425
++++++++ FUNCTION LENGTH 184
    int32_t cflags = (char)a3 == 0 ? 1 : 3;
    int32_t v133 = regcomp((struct re_pattern_buffer *)&preg, (char *)regex, cflags); // 0x406c84
        int32_t * eflags;
        int32_t v138 = regexec((struct re_pattern_buffer *)&preg, str, nmatch, pmatch, (int32_t)&eflags); // 0x406d88
=================FUNCTION : function_407930 ===================
++++++++ FUNCTION START 12330
++++++++ FUNCTION END 12479
++++++++ FUNCTION LENGTH 149
    int32_t sock = sock_bind(6, a1, a2, a4, (int32_t)&v132); // 0x407974
    int32_t result = sock; // bp-16
    if (sock < 0 || listen(sock, backlog) == 0) {
    sock_close_and_invalidate(&result);
=================FUNCTION : function_401550 ===================
++++++++ FUNCTION START 798
++++++++ FUNCTION END 1063
++++++++ FUNCTION LENGTH 265
    char * substr_pos = strstr(str3, str); // 0x40165c12
    char * substr_pos2 = strstr((char *)((int32_t)substr_pos + len), str); // 0x40165c
        substr_pos2 = strstr((char *)((int32_t)substr_pos2 + len), str);
=================FUNCTION : function_405e14 ===================
++++++++ FUNCTION START 8611
++++++++ FUNCTION END 8781
++++++++ FUNCTION LENGTH 170
    struct _IO_FILE * file = fopen("/etc/resolv.conf", "w"); // 0x405e84
            fprintf(file, "%s\n", a1);
            fprintf(file, "%s\n", (char *)a2);
=================FUNCTION : function_401f10 ===================
++++++++ FUNCTION START 1969
++++++++ FUNCTION END 2115
++++++++ FUNCTION LENGTH 146
    struct _IO_FILE * file = fopen(file_path, "w"); // 0x401f50
        fprintf(file, "%d,%d", a2, a3);
        fclose(file);
=================FUNCTION : th_exit ===================
++++++++ FUNCTION START 9136
++++++++ FUNCTION END 9368
++++++++ FUNCTION LENGTH 232
    while (true) {
                    while (true) {
=================FUNCTION : function_409fec ===================
++++++++ FUNCTION START 16858
++++++++ FUNCTION END 17018
++++++++ FUNCTION LENGTH 160
            fcntl(fd, F_GETFL);
            fcntl(fd2, F_GETFL);
=================FUNCTION : function_401dc8 ===================
++++++++ FUNCTION START 1808
++++++++ FUNCTION END 1966
++++++++ FUNCTION LENGTH 158
    struct _IO_FILE * file = fopen(file_path, "r"); // 0x401e1c
        fclose(file);
=================FUNCTION : function_409a70 ===================
++++++++ FUNCTION START 16362
++++++++ FUNCTION END 16527
++++++++ FUNCTION LENGTH 165
    int32_t fd = sock_open(3, NULL); // 0x409ac0
        sock_close_and_invalidate(&v133);
=================FUNCTION : proc_daemonize ===================
++++++++ FUNCTION START 15385
++++++++ FUNCTION END 15573
++++++++ FUNCTION LENGTH 188
    int32_t fd = open("/dev/null", O_RDWR); // 0x4094e4
        result = close(fd);
=================FUNCTION : os_exec ===================
++++++++ FUNCTION START 7428
++++++++ FUNCTION END 7575
++++++++ FUNCTION LENGTH 147
    int32_t system_rc = system(command); // 0x4055c8
    return system_rc;
=================FUNCTION : main ===================
++++++++ FUNCTION START 3322
++++++++ FUNCTION END 3561
++++++++ FUNCTION LENGTH 239
                    while (true) {
                while (true) {
=================FUNCTION : function_401a10 ===================
++++++++ FUNCTION START 1246
++++++++ FUNCTION END 1481
++++++++ FUNCTION LENGTH 235
    while (true) {
                                while (true) {
=================FUNCTION : function_408af0 ===================
++++++++ FUNCTION START 14432
++++++++ FUNCTION END 14618
++++++++ FUNCTION LENGTH 186
    while (true) {
            if (sock_recvfrom(a1, NULL, 0, v137, 1, 1, a4) == 1) {
=================FUNCTION : function_403768 ===================
++++++++ FUNCTION START 4727
++++++++ FUNCTION END 4943
++++++++ FUNCTION LENGTH 216
    while (true) {
                while (true) {
=================FUNCTION : function_4049fc ===================
++++++++ FUNCTION START 6024
++++++++ FUNCTION END 6284
++++++++ FUNCTION LENGTH 260
    while (true) {
            while (true) {
=================FUNCTION : function_4092a8 ===================
++++++++ FUNCTION START 15234
++++++++ FUNCTION END 15382
++++++++ FUNCTION LENGTH 148
    int32_t * v133 = dlsym((int32_t *)-1, "__fork"); // 0x4092e0
        result = fork();
=================FUNCTION : function_405acc ===================
++++++++ FUNCTION START 8178
++++++++ FUNCTION END 8353
++++++++ FUNCTION LENGTH 175
        if (getrlimit(8, (struct rlimit *)&rlp) == 0) {
        if (getrlimit(5, (struct rlimit *)&rlp) == 0) {
=================FUNCTION : sock_set_timeo_tx ===================
++++++++ FUNCTION START 13482
++++++++ FUNCTION END 13628
++++++++ FUNCTION LENGTH 146
    if (setsockopt(sock, 0xffff, 0x1005, &option_value, 8) == 0) {
=================FUNCTION : function_407e04 ===================
++++++++ FUNCTION START 12877
++++++++ FUNCTION END 13022
++++++++ FUNCTION LENGTH 145
    if (setsockopt(sock, 0, 3, (int32_t *)&option_value, 4) == 0) {
=================FUNCTION : ipt_update ===================
++++++++ FUNCTION START 16067
++++++++ FUNCTION END 16207
++++++++ FUNCTION LENGTH 140
    vsprintf((char *)(len + (int32_t)&str), (char *)format, v134);
=================FUNCTION : sock_set_timeo_rx ===================
++++++++ FUNCTION START 13180
++++++++ FUNCTION END 13326
++++++++ FUNCTION LENGTH 146
    if (setsockopt(sock, 0xffff, 0x1006, &option_value, 8) == 0) {
=================FUNCTION : function_4021d0 ===================
++++++++ FUNCTION START 2295
++++++++ FUNCTION END 2457
++++++++ FUNCTION LENGTH 162
    while (true) {
=================FUNCTION : function_4097d4 ===================
++++++++ FUNCTION START 15919
++++++++ FUNCTION END 16064
++++++++ FUNCTION LENGTH 145
    sprintf((char *)&str, "killall -9 %s", a1);
=================FUNCTION : function_408480 ===================
++++++++ FUNCTION START 13784
++++++++ FUNCTION END 13929
++++++++ FUNCTION LENGTH 145
    if (setsockopt(sock, SO_BROADCAST, 1, (int32_t *)&option_value, 4) == 0) {
=================FUNCTION : sock_close_and_invalidate ===================
++++++++ FUNCTION START 14922
++++++++ FUNCTION END 15065
++++++++ FUNCTION LENGTH 143
        close(*fd);
=================FUNCTION : function_407ed8 ===================
++++++++ FUNCTION START 13025
++++++++ FUNCTION END 13177
++++++++ FUNCTION LENGTH 152
    fcntl(fd, F_GETFL);
=================FUNCTION : function_40a180 ===================
++++++++ FUNCTION START 17021
++++++++ FUNCTION END 17172
++++++++ FUNCTION LENGTH 151
    while (v135 != (int32_t)(bool)true) {
=================FUNCTION : function_402758 ===================
++++++++ FUNCTION START 2867
++++++++ FUNCTION END 3037
++++++++ FUNCTION LENGTH 170
    while (true) {
=================FUNCTION : function_407d30 ===================
++++++++ FUNCTION START 12729
++++++++ FUNCTION END 12874
++++++++ FUNCTION LENGTH 145
    if (setsockopt(sock, 0xffff, 4, (int32_t *)&option_value, 4) == 0) {
=================FUNCTION : os_release ===================
++++++++ FUNCTION START 7085
++++++++ FUNCTION END 7287
++++++++ FUNCTION LENGTH 202
    while (true) {
=================FUNCTION : os_reboot ===================
++++++++ FUNCTION START 7290
++++++++ FUNCTION END 7425
++++++++ FUNCTION LENGTH 135
    return system("reboot");
=================FUNCTION : function_40308c ===================
++++++++ FUNCTION START 3897
++++++++ FUNCTION END 4077
++++++++ FUNCTION LENGTH 180
    while (true) {
=================FUNCTION : os_init ===================
++++++++ FUNCTION START 6886
++++++++ FUNCTION END 7082
++++++++ FUNCTION LENGTH 196
                    close(i);
=================FUNCTION : function_408108 ===================
++++++++ FUNCTION START 13329
++++++++ FUNCTION END 13479
++++++++ FUNCTION LENGTH 150
    if (getsockopt(sock, 0xffff, 0x1006, &option_value, &option_len) == 0) {
=================FUNCTION : function_408354 ===================
++++++++ FUNCTION START 13631
++++++++ FUNCTION END 13781
++++++++ FUNCTION LENGTH 150
    if (getsockopt(sock, 0xffff, 0x1005, &option_value, &option_len) == 0) {
=================FUNCTION : function_402d98 ===================
++++++++ FUNCTION START 3713
++++++++ FUNCTION END 3894
++++++++ FUNCTION LENGTH 181
    while (true) {
=================FUNCTION : function_406930 ===================
++++++++ FUNCTION START 10771
++++++++ FUNCTION END 10906
++++++++ FUNCTION LENGTH 135
    return rand();
=================FUNCTION : function_408554 ===================
++++++++ FUNCTION START 13932
++++++++ FUNCTION END 14092
++++++++ FUNCTION LENGTH 160
    if (setsockopt(sock, 0xffff, 25, &str, 15) == 0) {
=================FUNCTION : proc_exists ===================
++++++++ FUNCTION START 15576
++++++++ FUNCTION END 15722
++++++++ FUNCTION LENGTH 146
    sprintf((char *)&str, "/proc/%d", a1);
=================FUNCTION : function_405c18 ===================
++++++++ FUNCTION START 8356
++++++++ FUNCTION END 8608
++++++++ FUNCTION LENGTH 252
        if (getrlimit(8, (struct rlimit *)&rlp) == 0) {
=================FUNCTION : function_4018c8 ===================
++++++++ FUNCTION START 1066
++++++++ FUNCTION END 1243
++++++++ FUNCTION LENGTH 177
    while (true) {
=================FUNCTION : function_40911c ===================
++++++++ FUNCTION START 15068
++++++++ FUNCTION END 15231
++++++++ FUNCTION LENGTH 163
    if (getsockname(sock, (struct sockaddr *)&addr, &addr_len) != 0) {
=================FUNCTION : function_405154 ===================
++++++++ FUNCTION START 6737
++++++++ FUNCTION END 6883
++++++++ FUNCTION LENGTH 146
        free(a1);
================================================================================
========	WHILE LOOPS INTRESTING INSTRUCTIONS : =================================
================================================================================
=============================WHILE LOOPS ID : 2 @ function_401a10 ====================================
++++++++ WHILE START : 1386 
++++++++ WHILE FUNCTION : function_401a10 
++++++++ WHILE END : 1480 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 3 @ function_401fe0 ====================================
++++++++ WHILE START : 2259 
++++++++ WHILE FUNCTION : function_401fe0 
++++++++ WHILE END : 2291 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		fclose(file);
=============================WHILE LOOPS ID : 5 @ function_4022f0 ====================================
++++++++ WHILE START : 2628 
++++++++ WHILE FUNCTION : function_4022f0 
++++++++ WHILE END : 2702 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 17 @ function_403768 ====================================
++++++++ WHILE START : 4876 
++++++++ WHILE FUNCTION : function_403768 
++++++++ WHILE END : 4940 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 18 @ function_4044e0 ====================================
++++++++ WHILE START : 5942 
++++++++ WHILE FUNCTION : function_4044e0 
++++++++ WHILE END : 6018 
++++++++ INTRESTING INSTRUCTIONS :  
		if (getpid() != -1) {
		sprintf((char *)&str, "%s,%d", (char *)(v129 + 12), v137);
		sprintf((char *)&str, "./%s &", (char *)(v129 + 12));
=============================WHILE LOOPS ID : 19 @ function_4049fc ====================================
++++++++ WHILE START : 6164 
++++++++ WHILE FUNCTION : function_4049fc 
++++++++ WHILE END : 6283 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 21 @ function_405884 ====================================
++++++++ WHILE START : 8094 
++++++++ WHILE FUNCTION : function_405884 
++++++++ WHILE END : 8156 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		int32_t items_assigned2 = sscanf((char *)&str, "MemFree: %d kB", (int32_t *)a2); // 0x4059c0
=============================WHILE LOOPS ID : 22 @ th_exit ====================================
++++++++ WHILE START : 9282 
++++++++ WHILE FUNCTION : th_exit 
++++++++ WHILE END : 9361 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 24 @ sock_connect ====================================
++++++++ WHILE START : 12063 
++++++++ WHILE FUNCTION : sock_connect 
++++++++ WHILE END : 12167 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		sock_close_and_invalidate(&result);
		while (true) {
		sock_close_and_invalidate(&result);
=============================WHILE LOOPS ID : 25 @ function_407a2c ====================================
++++++++ WHILE START : 12631 
++++++++ WHILE FUNCTION : function_407a2c 
++++++++ WHILE END : 12716 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		int32_t accepted_sock_fd = accept(sock, (struct sockaddr *)&addr, &addr_len); // 0x407b5c
		if (accepted_sock_fd >= 0) {
		return accepted_sock_fd;
		result = accepted_sock_fd;
		while (true) {
=============================WHILE LOOPS ID : 27 @ sock_recvfrom ====================================
++++++++ WHILE START : 14262 
++++++++ WHILE FUNCTION : sock_recvfrom 
++++++++ WHILE END : 14409 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 29 @ function_408af0 ====================================
++++++++ WHILE START : 14576 
++++++++ WHILE FUNCTION : function_408af0 
++++++++ WHILE END : 14609 
++++++++ INTRESTING INSTRUCTIONS :  
		if (sock_recvfrom(a1, NULL, 0, v137, 1, 1, a4) == 1) {
=============================WHILE LOOPS ID : 30 @ sock_sendto ====================================
++++++++ WHILE START : 14783 
++++++++ WHILE FUNCTION : sock_sendto 
++++++++ WHILE END : 14900 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 32 @ proc_kill ====================================
++++++++ WHILE START : 15867 
++++++++ WHILE FUNCTION : proc_kill 
++++++++ WHILE END : 15893 
++++++++ INTRESTING INSTRUCTIONS :  
		if (proc_exists(a1) == 0) {
		sprintf((char *)&str, "kill -9 %d", a1);
=============================WHILE LOOPS ID : 33 @ function_409bfc ====================================
++++++++ WHILE START : 16679 
++++++++ WHILE FUNCTION : function_409bfc 
++++++++ WHILE END : 16848 
++++++++ INTRESTING INSTRUCTIONS :  
		char * str = fgets((char *)&str2, 256, file); // 0x409f8470
		while (true) {
		while (true) {
		while (true) {
		if (fgets((char *)&str2, 256, file) == NULL) {
